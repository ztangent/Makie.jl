~~~
<div>
  <script src="data:application/javascript;base64,    JSServe.fetch_binary('data:application/octet-stream;base64,kscsapPZJDE4YjM0MTVhLTZhNmEtNGU4NS05Y2E3LTU0NDcxNzcwNmUwOICjc3VigqdwYXlsb2Fkk8kAFmJva5LHLGqT2SQxOGIzNDE1YS02YTZhLTRlODUtOWNhNy01NDQ3MTc3MDZlMDiAo3N1YoKncGF5bG9hZJbIAjlrksfBapPZJDE4YjM0MTVhLTZhNmEtNGU4NS05Y2E3LTU0NDcxNzcwNmUwOIOzMTM0MTc0NzQ0ODIwMzA0MzM2NscgZZKzMTM0MTc0NzQ0ODIwMzA0MzM2NpoBAgMEBQYHCAkKtDE1MjgxMzM1ODgwNzEzMDA0ODYxxxdlkrQxNTI4MTMzNTg4MDcxMzAwNDg2MQG0MTYzMjIyMzA4MDg5MzAxOTY2MjXHF2WStDE2MzIyMjMwODA4OTMwMTk2NjI1AaNzdWKDo29ic8cVaLQxNjMyMjIzMDgwODkzMDE5NjYyNadwYXlsb2FkyAFAZpOCszk3NDY1MTI4NjQzNjU3OTIyMTLHFWi0MTUyODEzMzU4ODA3MTMwMDQ4NjGzODAxODUyNTM1NDU5NTY3MTUzM8cUaLMxMzQxNzQ3NDQ4MjAzMDQzMzY22adyZXR1cm4gKGluZGV4KSA9PiB7CiAgICBjb25zdCB2YWx1ZXMgPSBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzgwMTg1MjUzNTQ1OTU2NzE1MzMnKS52YWx1ZQogICAgX19sb29rdXBfaW50ZXJwb2xhdGVkKCc5NzQ2NTEyODY0MzY1NzkyMjEyJykubm90aWZ5KHZhbHVlc1tpbmRleCAtIDFdKQp9Ctk8L2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3pHZWZrL3NyYy93aWRnZXRzLmpsOjU1qG1zZ190eXBloTHIAVdrksdbapPZJDE4YjM0MTVhLTZhNmEtNGU4NS05Y2E3LTU0NDcxNzcwNmUwOIGzMjU3ODEwOTI1MjA0ODQwNjg3NccYZZKzMjU3ODEwOTI1MjA0ODQwNjg3NaIxMKNzdWKDo29ic8cUaLMyNTc4MTA5MjUyMDQ4NDA2ODc1p3BheWxvYWTHxmaTgNlqcmV0dXJuIHZhbHVlPT4gSlNTZXJ2ZS51cGRhdGVfbm9kZV9hdHRyaWJ1dGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSI3Il0nKSwgJ21heCcsIHZhbHVlKdlWL2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3pHZWZrL3NyYy9yZW5kZXJpbmcvaHlwZXJzY3JpcHRfaW50ZWdyYXRpb24uamw6OTGobXNnX3R5cGWhMcgBWGuSx1pqk9kkMThiMzQxNWEtNmE2YS00ZTg1LTljYTctNTQ0NzE3NzA2ZTA4gbM0MDc0Nzc2MTA0ODAzMDI3ODkyxxdlkrM0MDc0Nzc2MTA0ODAzMDI3ODkyoTGjc3Vig6NvYnPHFGizNDA3NDc3NjEwNDgwMzAyNzg5MqdwYXlsb2Fkx8hmk4DZbHJldHVybiB2YWx1ZT0+IEpTU2VydmUudXBkYXRlX25vZGVfYXR0cmlidXRlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWpzY2FsbC1pZD0iNyJdJyksICd2YWx1ZScsIHZhbHVlKdlWL2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3pHZWZrL3NyYy9yZW5kZXJpbmcvaHlwZXJzY3JpcHRfaW50ZWdyYXRpb24uamw6OTGobXNnX3R5cGWhMcgBNWuSx1pqk9kkMThiMzQxNWEtNmE2YS00ZTg1LTljYTctNTQ0NzE3NzA2ZTA4gbM4OTcyNzkwNTI2OTAyNDczNjg4xxdlkrM4OTcyNzkwNTI2OTAyNDczNjg4oTGjc3Vig6NvYnPHFGizODk3Mjc5MDUyNjkwMjQ3MzY4OKdwYXlsb2Fkx6Vmk4DZVXJldHVybiAodmFsKT0+IHsKICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWpzY2FsbC1pZD0iOCJdJykuaW5uZXJUZXh0ID0gdmFsCn3ZSi9ob21lL3J1bm5lci8uanVsaWEvcGFja2FnZXMvSlNTZXJ2ZS96R2Vmay9zcmMvcmVuZGVyaW5nL29ic2VydmFibGVzLmpsOjg1qG1zZ190eXBloTHJABZafWuSyEaRapPZJDE4YjM0MTVhLTZhNmEtNGU4NS05Y2E3LTU0NDcxNzcwNmUwON4BHbM1MzkyNjIxMDcyODc0ODg5MDQ0xxZlkrM1MzkyNjIxMDcyODc0ODg5MDQ0w7QxNzc5NTU5MDg1NTg3MjgzMzk5MscaZZK0MTc3OTU1OTA4NTU4NzI4MzM5OTKToJAAszE3ODEzODA2OTU5NjExMDkyNDLHGmWSszE3ODEzODA2OTU5NjExMDkyNDKkZGF0YbQxNjExNjg4NDEwMzYzMDI3Nzg2NscXZZK0MTYxMTY4ODQxMDM2MzAyNzc4NjbDszQ1NjQ2MDgyMzg4OTYxMTkxNzjHFmWSszQ1NjQ2MDgyMzg4OTYxMTkxNzjCszg4NjQ5MjkxNzcxMjYzMzU3ODXHFmWSszg4NjQ5MjkxNzcxMjYzMzU3ODXCtDE1NjA2NjUwMzU5NDQwODE1OTA4xyhlkrQxNTYwNjY1MDM1OTQ0MDgxNTkwONgVAAAAAAAAAAAgAwAAWAIAALQxNDA4NzA1NzcxNjI4ODAzOTQ2MccdZZK0MTQwODcwNTc3MTYyODgwMzk0NjGSpG5vbmWQtDE2MDU0Njc1NzUwMjMwNDcwMjQwxxdlkrQxNjA1NDY3NTc1MDIzMDQ3MDI0MMOzMzA4NjgwNDc1MTU1MTAzMzEzNscWZZKzMzA4NjgwNDc1MTU1MTAzMzEzNsO0MTM4MDMxNzI0MzE3MTgyMTc2MzTHHWWStDEzODAzMTcyNDMxNzE4MjE3NjM0kqRub25lkLM4NDMyODE5MjA4ODQwMDE1NzgxxxZlkrM4NDMyODE5MjA4ODQwMDE1NzgxwrM1Mzc2ODU5MDM4OTcwOTYxNjQzxxplkrM1Mzc2ODU5MDM4OTcwOTYxNjQzpGRhdGG0MTIxOTgyNDQyMTA4ODgyODA1NzPHHWWStDEyMTk4MjQ0MjEwODg4MjgwNTczkqRub25lkLMyNTcwNzEyNzQwNzMyMTkxMDYyxxplkrMyNTcwNzEyNzQwNzMyMTkxMDYypGRhdGG0MTAxNDU2NDc2MDQwNjY1NDEwNzbHHGWStDEwMTQ1NjQ3NjA0MDY2NTQxMDc2pXBpeGVstDE2Njk2MDEyODM4MzQxNzgzNjI2xxdlkrQxNjY5NjAxMjgzODM0MTc4MzYyNsKzMTI2ODM1NjA1ODI5MDkyMjIyMccaZZKzMTI2ODM1NjA1ODI5MDkyMjIyMaRkYXRhtDE2NTE1NDcxMTM0NjcxNzEwNDExx3llkrQxNjUxNTQ3MTEzNDY3MTcxMDQxMcdgFgAAAAABAAAABAAAAAQAAAABAAAABQAAAAEAAAACAAAABQAAAAUAAAACAAAABgAAAAIAAAADAAAABgAAAAYAAAADAAAABwAAAAMAAAAAAAAABwAAAAcAAAAAAAAABAAAALQxMjg2OTIyMzI1MTYwNzkzODE4N8cxZZK0MTI4NjkyMjMyNTE2MDc5MzgxODfHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzOTUyNTQ4MDYxNzQ1OTU5NzI1NMcwZZKzOTUyNTQ4MDYxNzQ1OTU5NzI1NMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNTc5MTg0NzA1NTY3NTUwNDM0M8caZZK0MTU3OTE4NDcwNTU2NzU1MDQzNDOToJAAszEzOTk3NTc2ODk4Nzc2NDg1ODnHGWWSszEzOTk3NTc2ODk4Nzc2NDg1ODmToJAAtDExODMxOTQ5MjI4NjE1ODgyNzA1xxtlkrQxMTgzMTk0OTIyODYxNTg4MjcwNaRkYXRhtDE3Mzk1MTA4MzE2MDgyMzYwMzUwxx1lkrQxNzM5NTEwODMxNjA4MjM2MDM1MJKkbm9uZZC0MTQ0MjM5MDg4OTU1OTMzNzc5NDnHtmWStDE0NDIzOTA4ODk1NTkzMzc3OTQ5lMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD/HQBcK1yM7AAAAAAAAAAAAAAAAAAAAAA50WjsAAAAAAAAAAAAAAAAAAAAAF7fRuAAAAAAAAIC/AACAvwAAAIAAAIA/1xcAAEhEAAAWRMcMFwAAgD8AAIA/AACAP7I3OTc5OTc1NjE1MTc0MTQ2MjLHFWWSsjc5Nzk5NzU2MTUxNzQxNDYyMsKyMjQwOTA2MjY3Mjc5NTAyMDI4xy9lkrIyNDA5MDYyNjcyNzk1MDIwMjjHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzMTY5NzQ0OTYzNjY5MDkwODY1M8cWZZKzMTY5NzQ0OTYzNjY5MDkwODY1M8KzMTMzMzc0MzA5MzU1MDQ5NDI1NscWZZKzMTMzMzc0MzA5MzU1MDQ5NDI1NsOyMTQ0MjgyMjg5NDEwNTU3MzE1xxVlkrIxNDQyODIyODk0MTA1NTczMTXDszUwOTQ5MzgxMDkyMzI5MDg4MTLHGmWSszUwOTQ5MzgxMDkyMzI5MDg4MTKkZGF0YbMyMzU3MDgxODU3NjExMjUyNTcwxxZlkrMyMzU3MDgxODU3NjExMjUyNTcwwrMzNjg1MDk4MTM0NzYyMTkyNzk0xxllkrMzNjg1MDk4MTM0NzYyMTkyNzk0k6CQALQxODM0OTgwNTk2Mjc2OTE4OTk4NMcxZZK0MTgzNDk4MDU5NjI3NjkxODk5ODTHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzODQ5ODQzNDg3MzgwMTAzMjcyNMcWZZKzODQ5ODQzNDg3MzgwMTAzMjcyNMK0MTc1MTY0NzM2NTA5NDY0Njg3NzLHG2WStDE3NTE2NDczNjUwOTQ2NDY4NzcypGRhdGGyMzI4NDI1Mjg4NTc1NjE4NjI5xxVlkrIzMjg0MjUyODg1NzU2MTg2MjnDszM0ODY3NjYzODQ5MzQyNDkxNzPHGmWSszM0ODY3NjYzODQ5MzQyNDkxNzOkZGF0YbQxNTQ4NzQ3ODk4ODMxMzU4NzU1M8caZZK0MTU0ODc0Nzg5ODgzMTM1ODc1NTOToJAAszU2MDM3MjkwODc3MDkxODA4OTPHHGWSszU2MDM3MjkwODc3MDkxODA4OTOSpG5vbmWQszU2MzMyMTMzNDg4NjU4MTQ0OTbHGWWSszU2MzMyMTMzNDg4NjU4MTQ0OTaToJAAszQzNjExODI5MjM2OTk1NjA0MjfHMGWSszQzNjExODI5MjM2OTk1NjA0MjfHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTc4ODcyNjAzNjkzNDQwMDIxMTfHF2WStDE3ODg3MjYwMzY5MzQ0MDAyMTE3wrM3MTM3MzI0MDIwMTE3NzQ5MTM2xxZlkrM3MTM3MzI0MDIwMTE3NzQ5MTM2wrQxNDczNTQ0NTkxODk3NTUyNTcxOMcdZZK0MTQ3MzU0NDU5MTg5NzU1MjU3MTiSpG5vbmWQtDE4Mzk1MjcyOTE4MjEzNzQ0NDEzxxplkrQxODM5NTI3MjkxODIxMzc0NDQxM5OgkAC0MTUyMTAwODEzNTA4NDc4ODIxMDHHF2WStDE1MjEwMDgxMzUwODQ3ODgyMTAxwrM1NTcxNTY4MDMxMzQ2ODIzODAzxxplkrM1NTcxNTY4MDMxMzQ2ODIzODAzpGRhdGG0MTgwNzM2NTI5NTk1NzcxMDA4MjbHF2WStDE4MDczNjUyOTU5NTc3MTAwODI2wrMzOTYzOTMwODEzMzU5OTYxNDY2xxllkrMzOTYzOTMwODEzMzU5OTYxNDY2k6CQALQxMDMxNzYxMzg3ODc2MTY0NTk0NMcxZZK0MTAzMTc2MTM4Nzg3NjE2NDU5NDTHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNjUyOTExMTE4NDE5MzkyNjk0OMcWZZKzNjUyOTExMTE4NDE5MzkyNjk0OMKzMTA5Mzc3MTU5OTA0MDc0NzcwNccWZZKzMTA5Mzc3MTU5OTA0MDc0NzcwNcKzODA5NDg3MTYzNTIxMTgwODQ5MMcZZZKzODA5NDg3MTYzNTIxMTgwODQ5MJOgkAC0MTIzMTI1MDk4NjU5MjE1NDE4MzPHHmWStDEyMzEyNTA5ODY1OTIxNTQxODMzpyNGRkZGRka0MTU0MDkxMjk2NjI1MDAwMTQxMjbHG2WStDE1NDA5MTI5NjYyNTAwMDE0MTI2pGRhdGGzNDY3MjIwODgzNDYyNDY3MTU3N8ccZZKzNDY3MjIwODgzNDYyNDY3MTU3N5Kkbm9uZZC0MTY5Mzk2OTg0OTE1MjEyMzMyODDHGmWStDE2OTM5Njk4NDkxNTIxMjMzMjgwk6CQALM4NzE0MDM0MjU4NTU1MzE2MTE1xxZlkrM4NzE0MDM0MjU4NTU1MzE2MTE1wrM0OTMyMTcxNDg0NDIwNDgyMjUyxxtlkrM0OTMyMTcxNDg0NDIwNDgyMjUypXBpeGVstDEyOTcyNTgyNjMxNzcxNzI5Mjk3x7ZlkrQxMjk3MjU4MjYzMTc3MTcyOTI5N5THQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/x0AXzcxMPgAAAAAAAAAAAAAAAAAAAADNzEw+AAAAAAAAAAAAAAAAAAAAABe30bgAAAAAzcyMv83MjL8AAACAAACAP9cXAACzQwBAB0THDBcAAIA/AACAPwAAgD+zMTQ3MjkzMDcwNjcwMzE5MDQ0M8cWZZKzMTQ3MjkzMDcwNjcwMzE5MDQ0M8O0MTE3MDM1ODY5MjM5NjQzNzMzMzfHHGWStDExNzAzNTg2OTIzOTY0MzczMzM3pXBpeGVsszM5MzcxNzYxNjQ5ODY4MDI3MTDHMGWSszM5MzcxNzYxNjQ5ODY4MDI3MTDHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACyNjgxOTYyNjY1NTI5MDU3MTgzxxVlkrI2ODE5NjI2NjU1MjkwNTcxODPDtDEwOTQ4MDU3Mjk3OTA4MDkxNDA2xx1lkrQxMDk0ODA1NzI5NzkwODA5MTQwNpKkbm9uZZCzMjk4MjE2OTE2NjQ0MzgwMTk1NK10cmFja2luZy1vbmx5szMzODY2NzEwMjI5MjY3MTMwOTPHMGWSszMzODY2NzEwMjI5MjY3MTMwOTPHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAAC0MTI5NTQ3MTA1NjUxOTcyNzQ5NDbHG2WStDEyOTU0NzEwNTY1MTk3Mjc0OTQ2pGRhdGGzNjY5MTQwOTI4NTgyMzAxNjM2NsccZZKzNjY5MTQwOTI4NTgyMzAxNjM2NpKkbm9uZZC0MTcwODkyNTI5Mjk1NDA4NzExNjnHF2WStDE3MDg5MjUyOTI5NTQwODcxMTY5wrQxNjg5ODY2NTk1NjYzMTkzOTU4Mce2ZZK0MTY4OTg2NjU5NTY2MzE5Mzk1ODGUx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP8dAFwrXIzsAAAAAAAAAAAAAAAAAAAAADnRaOwAAAAAAAAAAAAAAAAAAAAAXt9G4AAAAAAAAgL8AAIC/AAAAgAAAgD/XFwAASEQAABZExwwXAACAPwAAgD8AAIA/sjUwMjgxNjgyMTY4MzAwODc5NscVZZKyNTAyODE2ODIxNjgzMDA4Nzk2w7MyMzcwNTgwOTMzMzgxMDA4MTY3xxZlkrMyMzcwNTgwOTMzMzgxMDA4MTY3wrQxMjg0MzQxNDU0Njk4MzU2MjcwM8cXZZK0MTI4NDM0MTQ1NDY5ODM1NjI3MDPCtDE0NTA1MjA2NjM3ODIzNDI5NTIyxx1lkrQxNDUwNTIwNjYzNzgyMzQyOTUyMpKkbm9uZZCzNDI2NTI5NjcwOTUzOTYyMDMxOMcWZZKzNDI2NTI5NjcwOTUzOTYyMDMxOMKzOTczNDMzNzQ3NDc5MTk4MDE2M8cZZZKzOTczNDMzNzQ3NDc5MTk4MDE2M5OgkAC0MTcwNjgxNDgzNjE5NTk0ODY2NTbHMWWStDE3MDY4MTQ4MzYxOTU5NDg2NjU2xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE1NTMwNTg5Mzc3MDY3NjI2ODM3xxdlkrQxNTUzMDU4OTM3NzA2NzYyNjgzN8KzNDQzOTg2OTI5OTQzMDc5MDQ4MsccZZKzNDQzOTg2OTI5OTQzMDc5MDQ4MpKkbm9uZZC0MTAzNzEwNjU4NzQ0Mjg1MzcyNzTHG2WStDEwMzcxMDY1ODc0NDI4NTM3Mjc0pGRhdGGzNTA3NTQwNDQwMDM5MDE5MjgyNMcWZZKzNTA3NTQwNDQwMDM5MDE5MjgyNMK0MTU0NTA5NzA4NTM2MDAwNzQ5NjjHMWWStDE1NDUwOTcwODUzNjAwMDc0OTY4xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszI0NzgyNTUxMDg1NTg0MDc4NTjHFmWSszI0NzgyNTUxMDg1NTg0MDc4NTjDsjE1NTUxNjgyMjIwNjgyOTg1OMcVZZKyMTU1NTE2ODIyMjA2ODI5ODU4w7QxMTYxOTA5MzMwMzM4NTY1MDI4MMcdZZK0MTE2MTkwOTMzMDMzODU2NTAyODCSpG5vbmWQszM1OTA5NzUyNTE2NDYyMTUwMjjHGmWSszM1OTA5NzUyNTE2NDYyMTUwMjikZGF0YbQxMTcyNDA1NDY3MDA3MjY0MTU4NscXZZK0MTE3MjQwNTQ2NzAwNzI2NDE1ODbCtDE3NDkzMDkzMTI4NjM4NzE2MDc5xx1lkrQxNzQ5MzA5MzEyODYzODcxNjA3OZKkbm9uZZC0MTUyNDUxMDk4Mjg3MDk0NTE3OTnHF2WStDE1MjQ1MTA5ODI4NzA5NDUxNzk5wrMxODc0NjY0MTM0MTk1ODgzMzU2xxZlkrMxODc0NjY0MTM0MTk1ODgzMzU2w7QxMjQ5Njg4NzE4Nzc3OTkyMTQwNscxZZK0MTI0OTY4ODcxODc3Nzk5MjE0MDbHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNjQ3NzY3ODE3MzE3ODcyNjk4NcccZZKzNjQ3NzY3ODE3MzE3ODcyNjk4NZKkbm9uZZCzODk1Mzc0NDM5NDg4MjQzMTAxOcccZZKzODk1Mzc0NDM5NDg4MjQzMTAxOZKkbm9uZZCzMzk4ODA4OTQ4MjU3MjQwMzU0N8cZZZKzMzk4ODA4OTQ4MjU3MjQwMzU0N5OgkAC0MTYxMTMzMDQxNjA1Mjg4MDYwMDnHF2WStDE2MTEzMzA0MTYwNTI4ODA2MDA5w7QxMDAxMzMyNjcwMjgwODE5NzA5NMcxZZK0MTAwMTMzMjY3MDI4MDgxOTcwOTTHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTQ4ODg4ODYwNDYxMzU3NDk2ODLHF2WStDE0ODg4ODg2MDQ2MTM1NzQ5NjgywrQxNjk3NzU4OTkyNTg5NDQwNjIxOccXZZK0MTY5Nzc1ODk5MjU4OTQ0MDYyMTnDtDExNjY3OTc0NDMzODA0ODUxMjIzxxdlkrQxMTY2Nzk3NDQzMzgwNDg1MTIyM8O0MTMxNTgwNjkzNTMwODUyOTE3ODXHG2WStDEzMTU4MDY5MzUzMDg1MjkxNzg1pGRhdGG0MTAyNjg5NTc5NTczMjM2MDAxOTPHMWWStDEwMjY4OTU3OTU3MzIzNjAwMTkzxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszgxMzkzNzYxODMyMTIxOTI4MjTHFmWSszgxMzkzNzYxODMyMTIxOTI4MjTCszk0NzM2NjA5NjMyMDQ5MzAxODTHFmWSszk0NzM2NjA5NjMyMDQ5MzAxODTDszgxMzYxODgxNTM1Mzc2OTkzMjLHFmWSszgxMzYxODgxNTM1Mzc2OTkzMjLDszc3NzgyNzYyNjAwMjc4MjM4ODXHFmWSszc3NzgyNzYyNjAwMjc4MjM4ODXCtDEzNjY1Njk5NTUyMzY2NTIyNDg1xzFlkrQxMzY2NTY5OTU1MjM2NjUyMjQ4NccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM2NzM2MzYwMTQ2NjgzNjg2NjIwxxllkrM2NzM2MzYwMTQ2NjgzNjg2NjIwk6CQALI3NTcwNTY3NTE4OTYxMjY3MDPHG2WSsjc1NzA1Njc1MTg5NjEyNjcwM5Kkbm9uZZCzMjIyNzc5MjQ1MjA0NTUxMTAyM8caZZKzMjIyNzc5MjQ1MjA0NTUxMTAyM6RkYXRhszg4NDc5MDIwODgyOTg2MDMzOTLHGWWSszg4NDc5MDIwODgyOTg2MDMzOTKToJAAtDEyODE1OTU1NzEwMjk3NzY2MjE1xxdlkrQxMjgxNTk1NTcxMDI5Nzc2NjIxNcO0MTMxNjYxMTUzODgwNjMyMTUxMDDHF2WStDEzMTY2MTE1Mzg4MDYzMjE1MTAwwrQxMjIzMzY2MDg4ODU2NzM1MjIwN8coZZK0MTIyMzM2NjA4ODg1NjczNTIyMDfYFQAAAAAAAAAAIAMAAFgCAACzODc0MTAwNzkwNTE1OTQ1NTYyMscWZZKzODc0MTAwNzkwNTE1OTQ1NTYyMsK0MTMyODIwMzcyOTgzODQwNTcyOTjHHmWStDEzMjgyMDM3Mjk4Mzg0MDU3Mjk4pyNGRkZGRka0MTEwNDc0ODA4NDMyNzE5NDU4MTnHF2WStDExMDQ3NDgwODQzMjcxOTQ1ODE5wrQxNDI5MDEzODA3NDUyMTc4ODM1MMcdZZK0MTQyOTAxMzgwNzQ1MjE3ODgzNTCSpG5vbmWQtDEyMzczMzcyNDY2ODE1NzQzNzA3xxplkrQxMjM3MzM3MjQ2NjgxNTc0MzcwN5OgkACzMjUzNjExODU5ODA3MDc2NjgzM8cWZZKzMjUzNjExODU5ODA3MDc2NjgzM8O0MTEwNDM3ODc1OTg3NDEwNzAwNzDHF2WStDExMDQzNzg3NTk4NzQxMDcwMDcww7QxMjIzODY3NTI5Mzc4MDE5MjQ0OMcXZZK0MTIyMzg2NzUyOTM3ODAxOTI0NDjCtDExMjAxNTcwMjE2NzkxNzM5MjgzxxdlkrQxMTIwMTU3MDIxNjc5MTczOTI4M8KzNDM2MjAyNzUzNTY4MTY1OTkyM8cWZZKzNDM2MjAyNzUzNTY4MTY1OTkyM8KxODkxOTEyNjU3MjEzMTg1MjLHGGWSsTg5MTkxMjY1NzIxMzE4NTIypGRhdGG0MTM5MzAyNjI5MTczMTM4NTg1ODbHG2WStDEzOTMwMjYyOTE3MzEzODU4NTg2pGRhdGG0MTI5MjI5Nzg3MDQyOTcyNzk3MzDHGmWStDEyOTIyOTc4NzA0Mjk3Mjc5NzMwk6CQALQxNTYzMzQ0NDY4NjczNTQ3Nzg3MscxZZK0MTU2MzM0NDQ2ODY3MzU0Nzc4NzLHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzMTMxNzQyNzIwNDI2ODg2NjUyNscWZZKzMTMxNzQyNzIwNDI2ODg2NjUyNsK0MTU0MzU5MjI3Mzc5NTgxOTM5MzLHF2WStDE1NDM1OTIyNzM3OTU4MTkzOTMywrM0NjYxMDk3NTE2MjY1MzY2Nzc5xxZlkrM0NjYxMDk3NTE2MjY1MzY2Nzc5wrM4NTUxMzg3MTUxODcwMzU1MjUwxzBlkrM4NTUxMzg3MTUxODcwMzU1MjUwxxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAtDEwMDEyNTkzMzExNTg2MDk2Njc5xxdlkrQxMDAxMjU5MzMxMTU4NjA5NjY3OcK0MTQ1NTIzNTc0NjMxMjIzNzE3OTbHF2WStDE0NTUyMzU3NDYzMTIyMzcxNzk2gLQxNzU3NjAwMTY3MDA1ODY5NTk2NscXZZK0MTc1NzYwMDE2NzAwNTg2OTU5NjbDsjM3MjgyNzE1MjI3OTk3MjM3MMcVZZKyMzcyODI3MTUyMjc5OTcyMzcwwrM1NDY3NTUyOTQ5MjYwNTM3MTYyxxZlkrM1NDY3NTUyOTQ5MjYwNTM3MTYywrQxNzQ3NTgxODgzNjc1MDE1MjIwNscxZZK0MTc0NzU4MTg4MzY3NTAxNTIyMDbHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACyMzU3Nzk1ODA4MDQyNDQ5Mjkwxy9lkrIzNTc3OTU4MDgwNDI0NDkyOTDHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzNzAxMzYzMjA5OTQwODI4NjY4NccWZZKzNzAxMzYzMjA5OTQwODI4NjY4NcKzODQxMTk0NTU4MTc4NDc4OTY4OccwZZKzODQxMTk0NTU4MTc4NDc4OTY4OccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM2OTgwNDY2MzIzMDQ5MDE3MTk4xxxlkrM2OTgwNDY2MzIzMDQ5MDE3MTk4kqRub25lkLQxMTI2MjE1OTA5OTI3MTAyNDk0NMcXZZK0MTEyNjIxNTkwOTkyNzEwMjQ5NDTCszE1NTI2MzAxMTY4NTg2NzQyMTfHGmWSszE1NTI2MzAxMTY4NTg2NzQyMTekZGF0YbM0MzU5ODQ5NjI4NDEzMTU0ODAzxxllkrM0MzU5ODQ5NjI4NDEzMTU0ODAzk6CQALM5Nzc1NTg3NTk2OTk4OTEzMzQ0xzBlkrM5Nzc1NTg3NTk2OTk4OTEzMzQ0xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDEwNTI2ODk5MDAyNTI4MTA0NDA1xxdlkrQxMDUyNjg5OTAwMjUyODEwNDQwNcOzNjE1NzAyOTE5NzEyODU4NTE1OccWZZKzNjE1NzAyOTE5NzEyODU4NTE1OcKzNDQ2MzgzOTQ4NjM3NTUxNzMzNccWZZKzNDQ2MzgzOTQ4NjM3NTUxNzMzNcOzOTQ5NzQ1MTUxNDgzODA1NjM2NscwZZKzOTQ5NzQ1MTUxNDgzODA1NjM2NscYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALIyNzcxNzk4MzAyMTAzMzM0MDLHGGWSsjI3NzE3OTgzMDIxMDMzMzQwMpOgkACzMzgxMDc4MzU2NjkwNjA1NTA2M8cWZZKzMzgxMDc4MzU2NjkwNjA1NTA2M8K0MTE0ODEzNzI3ODI3NjQ0MTQ4ODbHG2WStDExNDgxMzcyNzgyNzY0NDE0ODg2pGRhdGGzNDkxNjE4NTQ3MDMwNjEyMDUwOMcWZZKzNDkxNjE4NTQ3MDMwNjEyMDUwOMO0MTE3NDU5ODAxMDQyNDI1NTMzMznHGmWStDExNzQ1OTgwMTA0MjQyNTUzMzM5k6CQALM2NDQzMjQ0NzI0NTc3NjQyNjY5xzBlkrM2NDQzMjQ0NzI0NTc3NjQyNjY5xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE1NDQ5NTM1Njk0NzkwODczNjgzxxdlkrQxNTQ0OTUzNTY5NDc5MDg3MzY4M8K0MTQ3ODU5ODg3MTg1NTQzOTYyNjTHF2WStDE0Nzg1OTg4NzE4NTU0Mzk2MjY0wrM2NjIxMzk0NDc2OTg2NDk2NzU2xxxlkrM2NjIxMzk0NDc2OTg2NDk2NzU2kqRub25lkLMxMTk1NjM5MTY3MTg2NzQwNTk5xxllkrMxMTk1NjM5MTY3MTg2NzQwNTk5k6CQALIyNzk4OTgzNDczNDQyNzk5NTHHFWWSsjI3OTg5ODM0NzM0NDI3OTk1McKzMzcxNTA4NjczMDcxNjYwMzM0M8cWZZKzMzcxNTA4NjczMDcxNjYwMzM0M8OzOTUwMjc0NDQ2NTAzMjYwNjgwMMccZZKzOTUwMjc0NDQ2NTAzMjYwNjgwMJKkbm9uZZC0MTAwODQwNTQwNDA2ODQ1ODM2MjLHG2WStDEwMDg0MDU0MDQwNjg0NTgzNjIypGRhdGGzNjc3Mzk4Nzk1MjI3MDE3MDE1MccWZZKzNjc3Mzk4Nzk1MjI3MDE3MDE1McKzNjc1NjgxNDQ1MDE1MDU5NjgzMccdZZKzNjc1NjgxNDQ1MDE1MDU5NjgzMacjRkZGRkZGszE3MTI1MDg1MjIxNzg4MDQ4MTfHFmWSszE3MTI1MDg1MjIxNzg4MDQ4MTfCtDE2NzgxNjI5NzIxMjY3ODA2NzA5xx1lkrQxNjc4MTYyOTcyMTI2NzgwNjcwOZKkbm9uZZCzMTQ4MzIxMTQzNjU5MjE5NjQ4MccWZZKzMTQ4MzIxMTQzNjU5MjE5NjQ4McKzNTM5Mjc5MDQxODM1NTQyMDc0M8eoZZKzNTM5Mjc5MDQxODM1NTQyMDc0M8eQFgAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAQAAAAFAAAABgAAAAQAAAAGAAAABwAAAAgAAAAJAAAACgAAAAgAAAAKAAAACwAAAAwAAAANAAAADgAAAAwAAAAOAAAADwAAABAAAAARAAAAEgAAABAAAAASAAAAEwAAABQAAAAVAAAAFgAAABQAAAAWAAAAFwAAALQxMTA5MzE5MjEyODY5MDgzMDE2N8cXZZK0MTEwOTMxOTIxMjg2OTA4MzAxNjfDtDE0NjE3NzYzNTcyNTYzMzM2NTM4xxdlkrQxNDYxNzc2MzU3MjU2MzMzNjUzOMOzNjUyMDkzNTU5Nzk3MTgzMTc1MMcaZZKzNjUyMDkzNTU5Nzk3MTgzMTc1MKRkYXRhtDE2MzM2NTc4NTkxNTI4NTQzMzAwxxdlkrQxNjMzNjU3ODU5MTUyODU0MzMwMMK0MTIyNTM2ODQ1OTE1MTc4MzcxODTHGmWStDEyMjUzNjg0NTkxNTE3ODM3MTg0k6CQALQxODQyMjYyMTc4MzkyNTAyNzgyNccdZZK0MTg0MjI2MjE3ODM5MjUwMjc4MjWSpG5vbmWQtDE3Mzc2Nzg1ODQ2MDgzODEyNjU3xxdlkrQxNzM3Njc4NTg0NjA4MzgxMjY1N8KzNDYwNzAyNzI1OTk5NTgwMDYzNMcZZZKzNDYwNzAyNzI1OTk5NTgwMDYzNJOgkAC0MTM3NTgzMTM3MTg3NzA0ODEwMjjHGmWStDEzNzU4MzEzNzE4NzcwNDgxMDI4k6CQALQxMzY1MTI0MTg1MjY0NDA3NTY2NccdZZK0MTM2NTEyNDE4NTI2NDQwNzU2NjWSpG5vbmWQszc5ODkxNjk2Mzk4MjcxNzc4NDHHFmWSszc5ODkxNjk2Mzk4MjcxNzc4NDHDtDExMjY4MjI2NDI3Nzc5NDQzNTU2xxdlkrQxMTI2ODIyNjQyNzc3OTQ0MzU1NsK0MTI3Njc0MTU0OTc5MDM4NjM2OTbHG2WStDEyNzY3NDE1NDk3OTAzODYzNjk2pGRhdGGzNDI2ODA5MjkzMjk5Njc4OTYzOccaZZKzNDI2ODA5MjkzMjk5Njc4OTYzOaRkYXRhtDE0MjIyMjQyODUzNzM2MTM0ODcxxxxlkrQxNDIyMjI0Mjg1MzczNjEzNDg3MaVwaXhlbLQxMjk4MzgzNTQzMzgyNTMxMDkyMce2ZZK0MTI5ODM4MzU0MzM4MjUzMTA5MjGUx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP8dAFwrXIzsAAAAAAAAAAAAAAAAAAAAADnRaOwAAAAAAAAAAAAAAAAAAAAAXt9G4AAAAAAAAgL8AAIC/AAAAgAAAgD/XFwAASEQAABZExwwXAACAPwAAgD8AAIA/tDE3MjIwOTk0MjYzMjE1MDgyODE2xxdlkrQxNzIyMDk5NDI2MzIxNTA4MjgxNsKzNDExNDUxMTkxNjA3NjQ1ODMyOccWZZKzNDExNDUxMTkxNjA3NjQ1ODMyOcKzNDgwMTUyMDQ4MTY3NDAxNjk3M8ccZZKzNDgwMTUyMDQ4MTY3NDAxNjk3M5Kkbm9uZZCzMzc4MjIyMzAxNzg0MDY0NTY4OccZZZKzMzc4MjIyMzAxNzg0MDY0NTY4OZOgkAC0MTE1NTk2NTczMjM1MDYzODkyNjLHG2WStDExNTU5NjU3MzIzNTA2Mzg5MjYypGRhdGG0MTQwMjY5MjcwOTIwMDQ3MDk2NzDHF2WStDE0MDI2OTI3MDkyMDA0NzA5NjcwwrMyNzU4MDMzODI2NTA3Nzk4OTI3yAl5ZZKzMjc1ODAzMzgyNjUwNzc5ODkyN8gJYBYAAAAAAQAAAAwAAAAAAAAADAAAAAsAAAALAAAADAAAABcAAAALAAAAFwAAABYAAAAWAAAAFwAAACIAAAAWAAAAIgAAACEAAAAhAAAAIgAAAC0AAAAhAAAALQAAACwAAAAsAAAALQAAADgAAAAsAAAAOAAAADcAAAA3AAAAOAAAAEMAAAA3AAAAQwAAAEIAAABCAAAAQwAAAE4AAABCAAAATgAAAE0AAABNAAAATgAAAFkAAABNAAAAWQAAAFgAAABYAAAAWQAAAGQAAABYAAAAZAAAAGMAAABjAAAAZAAAAG8AAABjAAAAbwAAAG4AAAABAAAAAgAAAA0AAAABAAAADQAAAAwAAAAMAAAADQAAABgAAAAMAAAAGAAAABcAAAAXAAAAGAAAACMAAAAXAAAAIwAAACIAAAAiAAAAIwAAAC4AAAAiAAAALgAAAC0AAAAtAAAALgAAADkAAAAtAAAAOQAAADgAAAA4AAAAOQAAAEQAAAA4AAAARAAAAEMAAABDAAAARAAAAE8AAABDAAAATwAAAE4AAABOAAAATwAAAFoAAABOAAAAWgAAAFkAAABZAAAAWgAAAGUAAABZAAAAZQAAAGQAAABkAAAAZQAAAHAAAABkAAAAcAAAAG8AAAACAAAAAwAAAA4AAAACAAAADgAAAA0AAAANAAAADgAAABkAAAANAAAAGQAAABgAAAAYAAAAGQAAACQAAAAYAAAAJAAAACMAAAAjAAAAJAAAAC8AAAAjAAAALwAAAC4AAAAuAAAALwAAADoAAAAuAAAAOgAAADkAAAA5AAAAOgAAAEUAAAA5AAAARQAAAEQAAABEAAAARQAAAFAAAABEAAAAUAAAAE8AAABPAAAAUAAAAFsAAABPAAAAWwAAAFoAAABaAAAAWwAAAGYAAABaAAAAZgAAAGUAAABlAAAAZgAAAHEAAABlAAAAcQAAAHAAAAADAAAABAAAAA8AAAADAAAADwAAAA4AAAAOAAAADwAAABoAAAAOAAAAGgAAABkAAAAZAAAAGgAAACUAAAAZAAAAJQAAACQAAAAkAAAAJQAAADAAAAAkAAAAMAAAAC8AAAAvAAAAMAAAADsAAAAvAAAAOwAAADoAAAA6AAAAOwAAAEYAAAA6AAAARgAAAEUAAABFAAAARgAAAFEAAABFAAAAUQAAAFAAAABQAAAAUQAAAFwAAABQAAAAXAAAAFsAAABbAAAAXAAAAGcAAABbAAAAZwAAAGYAAABmAAAAZwAAAHIAAABmAAAAcgAAAHEAAAAEAAAABQAAABAAAAAEAAAAEAAAAA8AAAAPAAAAEAAAABsAAAAPAAAAGwAAABoAAAAaAAAAGwAAACYAAAAaAAAAJgAAACUAAAAlAAAAJgAAADEAAAAlAAAAMQAAADAAAAAwAAAAMQAAADwAAAAwAAAAPAAAADsAAAA7AAAAPAAAAEcAAAA7AAAARwAAAEYAAABGAAAARwAAAFIAAABGAAAAUgAAAFEAAABRAAAAUgAAAF0AAABRAAAAXQAAAFwAAABcAAAAXQAAAGgAAABcAAAAaAAAAGcAAABnAAAAaAAAAHMAAABnAAAAcwAAAHIAAAAFAAAABgAAABEAAAAFAAAAEQAAABAAAAAQAAAAEQAAABwAAAAQAAAAHAAAABsAAAAbAAAAHAAAACcAAAAbAAAAJwAAACYAAAAmAAAAJwAAADIAAAAmAAAAMgAAADEAAAAxAAAAMgAAAD0AAAAxAAAAPQAAADwAAAA8AAAAPQAAAEgAAAA8AAAASAAAAEcAAABHAAAASAAAAFMAAABHAAAAUwAAAFIAAABSAAAAUwAAAF4AAABSAAAAXgAAAF0AAABdAAAAXgAAAGkAAABdAAAAaQAAAGgAAABoAAAAaQAAAHQAAABoAAAAdAAAAHMAAAAGAAAABwAAABIAAAAGAAAAEgAAABEAAAARAAAAEgAAAB0AAAARAAAAHQAAABwAAAAcAAAAHQAAACgAAAAcAAAAKAAAACcAAAAnAAAAKAAAADMAAAAnAAAAMwAAADIAAAAyAAAAMwAAAD4AAAAyAAAAPgAAAD0AAAA9AAAAPgAAAEkAAAA9AAAASQAAAEgAAABIAAAASQAAAFQAAABIAAAAVAAAAFMAAABTAAAAVAAAAF8AAABTAAAAXwAAAF4AAABeAAAAXwAAAGoAAABeAAAAagAAAGkAAABpAAAAagAAAHUAAABpAAAAdQAAAHQAAAAHAAAACAAAABMAAAAHAAAAEwAAABIAAAASAAAAEwAAAB4AAAASAAAAHgAAAB0AAAAdAAAAHgAAACkAAAAdAAAAKQAAACgAAAAoAAAAKQAAADQAAAAoAAAANAAAADMAAAAzAAAANAAAAD8AAAAzAAAAPwAAAD4AAAA+AAAAPwAAAEoAAAA+AAAASgAAAEkAAABJAAAASgAAAFUAAABJAAAAVQAAAFQAAABUAAAAVQAAAGAAAABUAAAAYAAAAF8AAABfAAAAYAAAAGsAAABfAAAAawAAAGoAAABqAAAAawAAAHYAAABqAAAAdgAAAHUAAAAIAAAACQAAABQAAAAIAAAAFAAAABMAAAATAAAAFAAAAB8AAAATAAAAHwAAAB4AAAAeAAAAHwAAACoAAAAeAAAAKgAAACkAAAApAAAAKgAAADUAAAApAAAANQAAADQAAAA0AAAANQAAAEAAAAA0AAAAQAAAAD8AAAA/AAAAQAAAAEsAAAA/AAAASwAAAEoAAABKAAAASwAAAFYAAABKAAAAVgAAAFUAAABVAAAAVgAAAGEAAABVAAAAYQAAAGAAAABgAAAAYQAAAGwAAABgAAAAbAAAAGsAAABrAAAAbAAAAHcAAABrAAAAdwAAAHYAAAAJAAAACgAAABUAAAAJAAAAFQAAABQAAAAUAAAAFQAAACAAAAAUAAAAIAAAAB8AAAAfAAAAIAAAACsAAAAfAAAAKwAAACoAAAAqAAAAKwAAADYAAAAqAAAANgAAADUAAAA1AAAANgAAAEEAAAA1AAAAQQAAAEAAAABAAAAAQQAAAEwAAABAAAAATAAAAEsAAABLAAAATAAAAFcAAABLAAAAVwAAAFYAAABWAAAAVwAAAGIAAABWAAAAYgAAAGEAAABhAAAAYgAAAG0AAABhAAAAbQAAAGwAAABsAAAAbQAAAHgAAABsAAAAeAAAAHcAAAC0MTMwMDUzMTExNTkzNzQ4MzAyNTHHMWWStDEzMDA1MzExMTU5Mzc0ODMwMjUxxxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAtDEzNzg3MzMyNzMyMDk1ODIzMjQ4xxdlkrQxMzc4NzMzMjczMjA5NTgyMzI0OMKzNjIzNjkwMjMzNjUzNTQ2ODI4M8cwZZKzNjIzNjkwMjMzNjUzNTQ2ODI4M8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNzQ2Njk4NzQ4NDE3OTc0OTY2M8cdZZK0MTc0NjY5ODc0ODQxNzk3NDk2NjOSpG5vbmWQszYzMTQzNDU2MzcyODEwNjg4NTXHGmWSszYzMTQzNDU2MzcyODEwNjg4NTWkZGF0YbM2MDA1NTI0NTgwMDI5MDQxMTQ0xxplkrM2MDA1NTI0NTgwMDI5MDQxMTQ0pGRhdGG0MTQ2MzU0MzE3NTM1Mzk5MjEzOTPHHWWStDE0NjM1NDMxNzUzNTM5OTIxMzkzks0DIM0CWLQxMDY2NDY5MTA0MjM0MjIzMzY1N8coZZK0MTA2NjQ2OTEwNDIzNDIyMzM2NTfYFaoBAAArAAAAZgEAAB0CAAC0MTIzMTU1MjA3MzI3MjE1ODE5NTjHF2WStDEyMzE1NTIwNzMyNzIxNTgxOTU4wrM4NzM3NzA3OTk3ODIyNTM4NjU0xzBlkrM4NzM3NzA3OTk3ODIyNTM4NjU0xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE3MzU1MjYwMDYyNjkyNjkzMTM3xxdlkrQxNzM1NTI2MDA2MjY5MjY5MzEzN8K0MTgzMDIzODA4NjUxNDI1MjYzMzLHMWWStDE4MzAyMzgwODY1MTQyNTI2MzMyxxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAszQ3MjQ1OTg2NTQ1OTg2NDg2MDDHMGWSszQ3MjQ1OTg2NTQ1OTg2NDg2MDDHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTAwMzg5ODM1NjgyODM3MTkzNjfHMWWStDEwMDM4OTgzNTY4MjgzNzE5MzY3xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszY2ODI0MzAzNjI0ODc4Mzg2NDnHHGWSszY2ODI0MzAzNjI0ODc4Mzg2NDmSpG5vbmWQszM0MTQ4ODM2ODYwMDA2ODY5NjLHMGWSszM0MTQ4ODM2ODYwMDA2ODY5NjLHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNzIyMTkxNjE2MjcxNzIyMzUwNscWZZKzNzIyMTkxNjE2MjcxNzIyMzUwNsK0MTUyMjE4MDQ0NjQwODE3ODc1NjnHG2WStDE1MjIxODA0NDY0MDgxNzg3NTY5pGRhdGGzNjY1MzIxNDI4MzU5NzAzMDIzM8cWZZKzNjY1MzIxNDI4MzU5NzAzMDIzM8KzNzAxMTQ2MzY3Nzk4MTIyODE3NccWZZKzNzAxMTQ2MzY3Nzk4MTIyODE3NcKzODgyMjgyNDQ3MDAyOTYyNTUwNMcZZZKzODgyMjgyNDQ3MDAyOTYyNTUwNJOgkACzMzk5NzY0MDcwNjAxMTMxNDk1OMccZZKzMzk5NzY0MDcwNjAxMTMxNDk1OJKkbm9uZZCzMTI4NTExMzgzNTI0NDM3OTkwMccWZZKzMTI4NTExMzgzNTI0NDM3OTkwMcKzMzE3MzcwODg1NTQ2OTA1NDYzNscZZZKzMzE3MzcwODg1NTQ2OTA1NDYzNpOgkACzMjY2NDg5NjExNjMyMjE0MjY1N8cZZZKzMjY2NDg5NjExNjMyMjE0MjY1N5OgkAC0MTA3NTI4NTQyMjU3ODU1OTM3MjHHF2WStDEwNzUyODU0MjI1Nzg1NTkzNzIxwrQxMjM3MDI3MDYzNzAwMDU4Nzk0OMcaZZK0MTIzNzAyNzA2MzcwMDA1ODc5NDiToJAAszYxNTMzOTMyMDAyMjAzNzIxNTbHFmWSszYxNTMzOTMyMDAyMjAzNzIxNTbCszQ0MDczMDU3NTcxNzQwMzg0NjHHGWWSszQ0MDczMDU3NTcxNzQwMzg0NjGToJAAtDEwMzM5NjQxMDIwMzQyOTgwNzk2xxdlkrQxMDMzOTY0MTAyMDM0Mjk4MDc5NsO0MTUyMTM0NTQ3Njg0MDU0MDYxMjPHtmWStDE1MjEzNDU0NzY4NDA1NDA2MTIzlMdAF/MENb/sBdG+Os0TPwAAAADzBDU/7AXRvjrNEz8AAAAAAAAAAOsFUT87zRM/AAAAAAAAAABA83k/NW4qwgAAgD/HQBeqfWlAAAAAAAAAAAAAAAAAAAAAAHmCGkAAAAAAAAAAAAAAAAAAAAAA3dOIvwAAgL8AAAAAAAAAAH2ts8AAAAAA1xcAALNDAEAHRMcMFyj8x0Eo/MdBKWu+QbMyNjYyMTEwMzkwMDE2ODQ2MTQ1xxplkrMyNjYyMTEwMzkwMDE2ODQ2MTQ1pGRhdGGzNzkzNDkwMDkxNTk5OTMyNTg5OccwZZKzNzkzNDkwMDkxNTk5OTMyNTg5OccYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALQxMDY3OTczNjA1NTkxNTc1Mzg0OMccZZK0MTA2Nzk3MzYwNTU5MTU3NTM4NDilcGl4ZWyzMjU5MzM4MzYzOTQ5ODgxMjk2McccZZKzMjU5MzM4MzYzOTQ5ODgxMjk2MZKkbm9uZZC0MTI2MTczNDY2ODgzOTIyMjE2MzfHF2WStDEyNjE3MzQ2Njg4MzkyMjIxNjM3wrM4OTMxMTMxNzcyOTkyOTMyNzk1xxZlkrM4OTMxMTMxNzcyOTkyOTMyNzk1wrQxMzU4OTQ5NDUyNjY2OTk3MjI2NMceZZK0MTM1ODk0OTQ1MjY2Njk5NzIyNjSnI0ZGRkZGRrQxMjAzODE0NzU2OTkwODAzMzgxMMcXZZK0MTIwMzgxNDc1Njk5MDgwMzM4MTDCszY3NjE4NjI1NzE1NTg4NzUwMzbHHWWSszY3NjE4NjI1NzE1NTg4NzUwMzanI0ZGRkZGRrI3MzAzMjI1OTI4NzYzMTM0NzPHGWWSsjczMDMyMjU5Mjg3NjMxMzQ3M6RkYXRhtDEwMzYzNjkzOTY0NDI3MjIxMzA4xxplkrQxMDM2MzY5Mzk2NDQyNzIyMTMwOJOgkACzNjM3MDA4NTkzNTQ3MDM0NjMxNMcWZZKzNjM3MDA4NTkzNTQ3MDM0NjMxNMK0MTE4NjU3ODYzMTQ1NzcxOTkzMzTHHGWStDExODY1Nzg2MzE0NTc3MTk5MzM0pXBpeGVstDExODU0OTk0MDQwOTI1OTE5MzM0xx1lkrQxMTg1NDk5NDA0MDkyNTkxOTMzNJKkbm9uZZC0MTQwMjc0ODk4OTc4NTQ3OTgxOTDHHWWStDE0MDI3NDg5ODk3ODU0Nzk4MTkwkqRub25lkLMxNzY2MDkyODA2NzAzMTU0MjUxxxxlkrMxNzY2MDkyODA2NzAzMTU0MjUxkqRub25lkLQxODAwODQ4NjgwNzgyNTE0ODc1OccaZZK0MTgwMDg0ODY4MDc4MjUxNDg3NTmToJAAszUzMjA0MjcyMTY1OTg3OTc0OTbHJ2WSszUzMjA0MjcyMTY1OTg3OTc0OTbYFRAAAAArAAAAZgEAAB0CAAC0MTI5NTU5MTc0Mzc5MzM2Mzc1NjjHF2WStDEyOTU1OTE3NDM3OTMzNjM3NTY4w7QxMDQ4NzkxODg5NTA4NTE5OTkxMMcXZZK0MTA0ODc5MTg4OTUwODUxOTk5MTDCszYzMTk0NDc5MDU3NDEyNDIxMTnHGWWSszYzMTk0NDc5MDU3NDEyNDIxMTmToJAAszkyMjcyMzIzNzE2OTM1MzE0NjTHGWWSszkyMjcyMzIzNzE2OTM1MzE0NjSToJAAtDExODU1NDI4NTk0MjMxMDQ4MTQ2xxplkrQxMTg1NTQyODU5NDIzMTA0ODE0NpOgkAC0MTU5NjcyMTQ2NzA0MDgyMzY2NTPHG2WStDE1OTY3MjE0NjcwNDA4MjM2NjUzpGRhdGGzNzMwOTExMjYwMTQ0ODk1OTk0N8cwZZKzNzMwOTExMjYwMTQ0ODk1OTk0N8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALMxOTAwNjgzMTc5MjIxNDMxODM0xxZlkrMxOTAwNjgzMTc5MjIxNDMxODM0wrMyNzc0MzU4MjkzMDQ2NzQ2NjkyxxZlkrMyNzc0MzU4MjkzMDQ2NzQ2NjkywrMxNDA0ODcyNjcxODkwNDk2NjExxxtlkrMxNDA0ODcyNjcxODkwNDk2NjExpXBpeGVssTMxMjQ2ODExNzgzOTYyNjA5xxhlkrEzMTI0NjgxMTc4Mzk2MjYwOaRkYXRhszkyODAzNzA2ODIyNzU4MTIyMTnHGmWSszkyODAzNzA2ODIyNzU4MTIyMTmkZGF0YbQxMDg4OTc1MTEzNDY5Nzg5NTUwM8caZZK0MTA4ODk3NTExMzQ2OTc4OTU1MDOToJAAszczNDIzNTYzODI3NzQ1MzUxOTfHMGWSszczNDIzNTYzODI3NzQ1MzUxOTfHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAAC0MTA4MTc1Mjg4MjQ1NzIwNDI3MzTHG2WStDEwODE3NTI4ODI0NTcyMDQyNzM0pGRhdGG0MTUzMTgwMzcyNTQxODIwOTg4ODHHHWWStDE1MzE4MDM3MjU0MTgyMDk4ODgxkqRub25lkLQxMjE0MzkwNDY2OTI1MzU0MTY4NccXZZK0MTIxNDM5MDQ2NjkyNTM1NDE2ODXCtDE3MDAwMDU2OTYxNDEyMTY1ODMzxxdlkrQxNzAwMDA1Njk2MTQxMjE2NTgzM8O0MTA1MTAzMjQ2NDg1NjMxNDI4MjLHF2WStDEwNTEwMzI0NjQ4NTYzMTQyODIywrQxNTQ4NjQxNTcxOTc0ODYwMTkwMscaZZK0MTU0ODY0MTU3MTk3NDg2MDE5MDKToJAAszMyNDA4MDA5MDIyNjg1MDY1NzHHFmWSszMyNDA4MDA5MDIyNjg1MDY1NzHDszU1MTczMzk5ODA0MDQ2MDYwOTXHFmWSszU1MTczMzk5ODA0MDQ2MDYwOTXCtDExODkzNDg2OTkzOTMxNjAwNzY4xxdlkrQxMTg5MzQ4Njk5MzkzMTYwMDc2OMOzODQ2Njg0ODUyMzgxNjA5NDc5M8ccZZKzODQ2Njg0ODUyMzgxNjA5NDc5M5Kkbm9uZZC0MTM3OTEwMzg1Mzc0NzM5ODQxMjbHF2WStDEzNzkxMDM4NTM3NDczOTg0MTI2wrQxMzgwMjYzMjAzNjc3OTQzNTYzN8caZZK0MTM4MDI2MzIwMzY3Nzk0MzU2MzeToJAAszQ1MDMzODY5MTE3NDg1NTE1MDDHFmWSszQ1MDMzODY5MTE3NDg1NTE1MDDCtDE0MDUyNzIzMTM4MDM2ODg4Mjc4xxdlkrQxNDA1MjcyMzEzODAzNjg4ODI3OMK0MTA2Nzc5Njk0NjI2MzY4ODU0NzfHMWWStDEwNjc3OTY5NDYyNjM2ODg1NDc3xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszc5ODc1NjkyODIwNDY2MjEwMTXHFmWSszc5ODc1NjkyODIwNDY2MjEwMTXCszcxOTIwNzQ4OTMxMzYxMTc2MDbHGmWSszcxOTIwNzQ4OTMxMzYxMTc2MDakZGF0YbMzMzMyNjk0ODAzMzE1NTIwNzEwxxZlkrMzMzMyNjk0ODAzMzE1NTIwNzEwwrM2NTI1NTQwODk4MDU0ODE2MjQwxxxlkrM2NTI1NTQwODk4MDU0ODE2MjQwkqRub25lkLQxMTQ2NTM3Mjc1ODA0ODEwNzQ2NccdZZK0MTE0NjUzNzI3NTgwNDgxMDc0NjWSpG5vbmWQszIxNjM5NDIyNTI0OTc3NDIwMDjHMGWSszIxNjM5NDIyNTI0OTc3NDIwMDjHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTU4MzE3MTAwMDQ1OTY2NTMzNzbHF2WStDE1ODMxNzEwMDA0NTk2NjUzMzc2wrM5NTQ4MTY1NzIyMDU5Mzc1MjgxxxxlkrM5NTQ4MTY1NzIyMDU5Mzc1MjgxkqRub25lkLQxMzEyMTE5MjQ5MTEzNzk5NjUwNscbZZK0MTMxMjExOTI0OTExMzc5OTY1MDakZGF0YbM5NzQ5NTIzOTU1MzEzNTI4NzQwxydlkrM5NzQ5NTIzOTU1MzEzNTI4NzQw2BUAAAAAAAAAACADAABYAgAAtDE0NTYzMzA1MzcxNTAyMDI0Nzc4xxtlkrQxNDU2MzMwNTM3MTUwMjAyNDc3OKRkYXRhtDEyOTMzNzI3MDUxMDg4MjEzMzU5xx1lkrQxMjkzMzcyNzA1MTA4ODIxMzM1OZKkbm9uZZCjc3VigqdwYXlsb2FkyQAWE81mk4WzNjQwNzk5MTAzMjQ0MTk2NDU0MYmndmlzaWJsZccVaLQxMjgxNTk1NTcxMDI5Nzc2NjIxNaVwbG90c5CvYmFja2dyb3VuZGNvbG9yxxVotDEyMzEyNTA5ODY1OTIxNTQxODMzqXBpeGVsYXJlYccUaLM5NzQ5NTIzOTU1MzEzNTI4NzQwpmNhbWVyYccVaLQxNjg5ODY2NTk1NjYzMTkzOTU4MaR1dWlkszY3OTUxNzc5Njk5ODUzNzkxOTOrY2FtM2Rfc3RhdGXAqmNsZWFyc2NlbmXDqGNoaWxkcmVukomndmlzaWJsZccTaLI1MDI4MTY4MjE2ODMwMDg3OTalcGxvdHOQr2JhY2tncm91bmRjb2xvcscUaLM2NzYxODYyNTcxNTU4ODc1MDM2qXBpeGVsYXJlYccVaLQxNTYwNjY1MDM1OTQ0MDgxNTkwOKZjYW1lcmHHFWi0MTQ0MjM5MDg4OTU1OTMzNzc5NDmkdXVpZLQxNjIxMzI1MjYwNjE2MTY3OTY0NqtjYW0zZF9zdGF0ZcCqY2xlYXJzY2VuZcKoY2hpbGRyZW6Riad2aXNpYmxlxxRoszMyNDA4MDA5MDIyNjg1MDY1NzGlcGxvdHOV3gAQrHRyYW5zcGFyZW5jeccVaLQxNjA1NDY3NTc1MDIzMDQ3MDI0MKVzcGFjZccUaLMxNzgxMzgwNjk1OTYxMTA5MjQyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTUzNjA3NDc0NjU2ODA2Mjk1MjKpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAACzQwBAB0SlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXKPzHQSj8x0Epa75Bp3Zpc2libGXHFGizMTQ3MjkzMDcwNjcwMzE5MDQ0M6ttYXJrZXJzcGFjZccVaLQxMDA4NDA1NDA0MDY4NDU4MzYyMrFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjM3MzM3MjQ2NjgxNTc0MzcwN6hvdmVyZHJhd8cVaLQxMDc1Mjg1NDIyNTc4NTU5MzcyMa91bmlmb3JtX3VwZGF0ZXLHFWi0MTczOTUxMDgzMTYwODIzNjAzNTClZmFjZXPHFGizODU1MTM4NzE1MTg3MDM1NTI1MKR1dWlkszUzNjA3NDc0NjU2ODA2Mjk1MjKtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTIAVAXFvtLvrGdb7588jC+Z2Zmvhb7S76xnW++qoJRvmdmZr588jC+Z2ZmvmHlUL6znW++YeVQvrOdb7588jC+Z2Zmvhb7S76xnW++OiNKvmdmZr588jC+Z2ZmvmHlUL6znW++MLsnvmdmZr4W+0u+sZ1vvnzyML5nZma+FvtLvrGdb74f+YO+cT2Kvhb7S76xnW++fPIwvmdmZr4W+0u+sZ1vvqqCUb5nZma+fPIwvmdmZr5h5VC+s51vvmHlUL6znW++fPIwvmdmZr4W+0u+sZ1vvjojSr5nZma+fPIwvmdmZr5h5VC+s51vvjC7J75nZma+FvtLvrGdb7588jC+Z2Zmvhb7S76xnW++Ad6CvoGa2r4W+0u+sZ1vvqqCUb5nZma+YjJVvmdmZr4W+0u+sZ1vvs6qT76xnW++MLsnvmdmZr4W+0u+sZ1vvtSffb5xPYq+qm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0yAFQF2x4Oj8KaGI/piwDP6YsAz9seDo/CmhiP5t3PD84GmA/piwDP6YsAz/tnjw/OBpgP+2ePD84GmA/piwDP6YsAz9seDo/CmhiP6QBPD9kzF0/piwDP6YsAz/tnjw/OBpgP/7UGD84GmA/bHg6PwpoYj+mLAM/piwDP2x4Oj8KaGI/OUpeP93Saj9seDo/CmhiP6YsAz+mLAM/bHg6PwpoYj+bdzw/OBpgP6YsAz+mLAM/7Z48PzgaYD/tnjw/OBpgP6YsAz+mLAM/bHg6PwpoYj+kATw/ZMxdP6YsAz+mLAM/7Z48PzgaYD/+1Bg/OBpgP2x4Oj8KaGI/piwDP6YsAz9seDo/CmhiP5ioXj+ygIk/bHg6PwpoYj+bdzw/OBpgP27FPj84GmA/WmQ7PwpoYj9IUDw/CmhiP/7UGD84GmA/bHg6PwpoYj+lwlg/3dJqP61tYXJrZXJfb2Zmc2V0gqt0eXBlX2xlbmd0aAOkZmxhdMgB+Bfl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADo8l8+ns0qPwAAAADo8l8+BoFVPwAAAACJXoY+il6GsgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAADrc5U/7fJfPgAAAAAGgVU/6/JfPgAAAAA3GgA/6fJfPgAAAACdzao+6PJfPgAAAADrUbg+i16GPgAAAACdzao+5vJfsufyX76dzao+5vJfsufyX76dzao+5vJfsufyX76dzao+5vJfsufyX76dzao+5vJfsufyX76ezSo/5vJfsunyX76dzao+5vJfsufyX77qUbg+il6Gsopehr6lY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0yAKgFwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAAAAAAAAAAAAAAAAIA/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAAAAAAAAAAAAAAACAP691dl9vZmZzZXRfd2lkdGiCq3R5cGVfbGVuZ3RoBKRmbGF0yAKgFwDAlD4AwNc+AECoPgBA7z4AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgDAlD4AwO8+AECoPgBgAz8AgDA+AOAaPwCASz4AoCE/AMCUPgBgGz8AQKg+AOAmPwDAlD4AYBs/AECoPgDgJj8AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgDAlD4AIDM/AECoPgCgPj8AgDA+AOAaPwCASz4AoCE/AMCUPgBgGz8AQKg+AOAmPwCAMD4AIA8/AIBPPgCgGj8AwJQ+AMDXPgBAqD4AQO8+AIAwPgDgGj8AgEs+AKAhPwDAlD4AwNc+AECoPgBA7z4A4HA/AIARPgBgej8AgDk+AMCUPgDA1z4AQKg+AEDvPgCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+AMCUPgDA7z4AQKg+AGADPwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AGAbPwBAqD4A4CY/AMCUPgBgGz8AQKg+AOAmPwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+AMCUPgAgMz8AQKg+AKA+PwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AGAbPwBAqD4A4CY/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z4AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgAgDD8AgGw+AKAVPwDAjT4AwJQ+AMDXPgBAqD4AQO8+AMCUPgDA7z4AQKg+AGADPwDAlD4AoA8/AECoPgAgGz8AwJQ+ACAnPwBAqD4A4DI/AMCUPgDgPj8AQKg+AKBKPwCAMD4AIA8/AIBPPgCgGj8AwJQ+AMDXPgBAqD4AQO8+AOAVPwCAbD4AIB8/AECKPqNwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0yAH4FwAAAACsHEpBAACAvwAAAACsHEpBAACAvwAAAACsHEpBAACAv///H0CsHEpBAACAv///H0CsHEpBAACAv///H0CsHEpBAACAvwAAoECsHEpBAACAvwAAoECsHEpBAACAvwAAoECsHEpBAACAvwAA8ECsHEpBAACAvwAA8ECsHEpBAACAvwAA8ECsHEpBAACAvwAAIEGsHEpBAACAvwAAIEGsHEpBAACAvwAAIEGsHEpBAACAvwAAIEGsHEpBAACAvzMzM0CitGNBAACAv6wcSkEAAAAAAACAv6wcSkEAAAAAAACAv6wcSkEAAAAAAACAv6wcSkH//x9AAACAv6wcSkH//x9AAACAv6wcSkH//x9AAACAv6wcSkEAAKBAAACAv6wcSkEAAKBAAACAv6wcSkEAAKBAAACAv6wcSkEAAPBAAACAv6wcSkEAAPBAAACAv6wcSkEAAPBAAACAv6wcSkEAACBBAACAv6wcSkEAACBBAACAv6wcSkEAACBBAACAv6wcSkEAACBBAACAv6K0Y0EzMzNAAACAv6wcSkHNzAzAAAAAAKwcSkHNzAzAAAAAQKwcSkHNzAzAAACAQKwcSkHNzAzAAADAQKwcSkHNzAzAAAAAQawcSkHNzAzAAAAgQawcSkHNzAzAAAAgQf+yW0HNzAzAAACAQKlyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0yAKgFwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7NjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs4+sdHJhbnNwYXJlbmN5xxRoszQ2NjEwOTc1MTYyNjUzNjY3Nzmlc3BhY2XHFWi0MTAxNDU2NDc2MDQwNjY1NDEwNzasdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtMTgwMDgxNTY4Njk4MjY1MzMzN6ljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAAs0MAQAdEpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBco/MdBKPzHQSlrvkGpb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFGizNDkxNjE4NTQ3MDMwNjEyMDUwOLFhdHRyaWJ1dGVfdXBkYXRlcscUaLMzNzgyMjIzMDE3ODQwNjQ1Njg5qG92ZXJkcmF3xxVotDEzNzkxMDM4NTM3NDczOTg0MTI2r3VuaWZvcm1fdXBkYXRlcscVaLQxMTg1NDk5NDA0MDkyNTkxOTMzNKVmYWNlc8cVaLQxMzY2NTY5OTU1MjM2NjUyMjQ4NaR1dWlkszE4MDA4MTU2ODY5ODI2NTMzMzetdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizMzcxNTA4NjczMDcxNjYwMzM0M6VzcGFjZccVaLQxMjk1NDcxMDU2NTE5NzI3NDk0Nqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIWxpbmVzZWdtZW50cy0xNTcxNTA2MTY0OTk2MDQ1MDM2NqljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAACzQwBAB0SlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFyj8x0Eo/MdBKWu+QalvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccUaLMxNDcyOTMwNzA2NzAzMTkwNDQzsWF0dHJpYnV0ZV91cGRhdGVyxxRoszQ2MDcwMjcyNTk5OTU4MDA2MzSob3ZlcmRyYXfHFGizNzAxMTQ2MzY3Nzk4MTIyODE3Na91bmlmb3JtX3VwZGF0ZXLHFGizNjUyNTU0MDg5ODA1NDgxNjI0MKVmYWNlc8cUaLM4NDExOTQ1NTgxNzg0Nzg5Njg5pHV1aWS0MTU3MTUwNjE2NDk5NjA0NTAzNjatdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMyBzZWdtZW50X3N0YXJ0Owp2ZWMzIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzMgc2VnbWVudF9lbmQ7CnZlYzMgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTIAjAXAAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD6tbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHjBcAAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAP6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTIAjAXAAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD6rc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoA6RmbGF0yAGkFzMzQ0HNzAzAAACAvzMzQ0EAAAAAAACAvzMzQ0H//x9AAACAvzMzQ0EAAKBAAACAvzMzQ0EAAPBAAACAvzMzQ0EAACBBAACAvzMzQ0HNzAzAAAAAADMzQ0HNzAzAAAAAQDMzQ0HNzAzAAACAQDMzQ0HNzAzAAADAQDMzQ0HNzAzAAAAAQTMzQ0HNzAzAAAAgQc3MDMAzM0NBAACAv83MDMAzM0NBAAAAAM3MDMAzM0NBAAAAQM3MDMAzM0NBAACAQM3MDMAzM0NBAADAQM3MDMAzM0NBAAAAQc3MDMAzM0NBAAAgQQAAAAAzM0NBAACAv///H0AzM0NBAACAvwAAoEAzM0NBAACAvwAA8EAzM0NBAACAvwAAIEEzM0NBAACAv83MDMDNzAzAAAAwQQAAAADNzAzAAAAwQf//H0DNzAzAAAAwQQAAoEDNzAzAAAAwQQAA8EDNzAzAAAAwQQAAIEHNzAzAAAAwQc3MDMAAAAAAAAAwQc3MDMD//x9AAAAwQc3MDMAAAKBAAAAwQc3MDMAAAPBAAAAwQc3MDMAAACBBAAAwQa1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAOkZmxhdMgBpBfNzAzAzcwMwAAAgL/NzAzAAAAAAAAAgL/NzAzA//8fQAAAgL/NzAzAAACgQAAAgL/NzAzAAADwQAAAgL/NzAzAAAAgQQAAgL/NzAzAzcwMwAAAAADNzAzAzcwMwAAAAEDNzAzAzcwMwAAAgEDNzAzAzcwMwAAAwEDNzAzAzcwMwAAAAEHNzAzAzcwMwAAAIEHNzAzAzcwMwAAAgL/NzAzAzcwMwAAAAADNzAzAzcwMwAAAAEDNzAzAzcwMwAAAgEDNzAzAzcwMwAAAwEDNzAzAzcwMwAAAAEHNzAzAzcwMwAAAIEEAAAAAzcwMwAAAgL///x9AzcwMwAAAgL8AAKBAzcwMwAAAgL8AAPBAzcwMwAAAgL8AACBBzcwMwAAAgL/NzAzAzcwMwAAAgL8AAAAAzcwMwAAAgL///x9AzcwMwAAAgL8AAKBAzcwMwAAAgL8AAPBAzcwMwAAAgL8AACBBzcwMwAAAgL/NzAzAAAAAAAAAgL/NzAzA//8fQAAAgL/NzAzAAACgQAAAgL/NzAzAAADwQAAAgL/NzAzAAAAgQQAAgL+vbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMeMFwAAwD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAwD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAwD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/jqx0cmFuc3BhcmVuY3nHFWi0MTUyNDUxMDk4Mjg3MDk0NTE3OTmlc3BhY2XHFWi0MTU5NjcyMTQ2NzA0MDgyMzY2NTOsdmVydGV4YXJyYXlzgahwb3NpdGlvboKrdHlwZV9sZW5ndGgDpGZsYXTIASAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgD8AAIA/AAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAACAPwAAgD8AAAAAAACAPwAAAAAAAAAAAACAPwAAgD8AAIA/AAAAAAAAgD8AAIA/AAAAAAAAAAAAAIA/AACAPwAAAAAAAIA/AACAPwAAgD8AAIA/AACAPwAAAAAAAIA/AACAPwAAAAAAAAAAAACAPwAAgD8AAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAIA/pG5hbWW7dm9sdW1lLTE3MzA2MDY2MTMzMjgxNTYzNTYyqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gASpW1vZGVsx0AXAAAgQQAAAAAAAAAAAAAAAAAAAAAAACBBAAAAAAAAAAAAAAAAAAAAAAAAIEEAAAAAAAAAAAAAAAAAAAAAAACAP6dkaWZmdXNlxwwXzczMPs3MzD7NzMw+qmNvbG9ycmFuZ2XXF1x0vTp2kX8/qnZvbHVtZWRhdGGLqmFuaXNvdHJvcHnKP4AAAKV3cmFwUrNDbGFtcFRvRWRnZVdyYXBwaW5npGRhdGHID6AX6jCjPWmgGD/shsc+ydxPP2GaGj6dB4U+jppgP1aSHD6gkw8/iiIcPhXmIj8ScW0/pwdwP4Kl6T75HxA9MR82P42UKz90V6o+GlYhP7wnxz5xh5U+wr8hPiZxlj4NwdA+NaC6PQD78D1dRHQ/hYofP4tjhj4OoC0+aP/zPMTUDj+j714/YEAzP1ByHD4MBcY9U5wLP3FbTD8NtEk+4XcYPxrohT2hbwQ/Khf4PuMO3D50H+M+NBY1P/kYkT6REgU/0ajYPmMaGz8DzOk+CBBFPyAAuz6timk/jiNfPwxebj9N68U8glUNPz5uFz+8vI87l7PIPQg9ET+HLjU/v/JaP4ONvT6fYB8/hI1CP25ygz6jnFc/4CoXPwTIHz9vHYc+2UCtPWrf4D53ID0/whAVP8LRBD4vORU/a9RDPO4GaD9zwd0839U1P1L58z7J6T4/6qr/PiQ/Oz9dmgU/L2Q5P00kSD/JyKE+DG0SP+QmND9rT3w9Yhd+PiRgUT8xRDs/QoTTPlsPsj7/msI+Z7vxPYdGFz7rbDo/JasDPyixXT9ivFE/YCAPP1e/1D5w1mQ+uAXhPcz+BD9fFVk9sIooPx2lzj40gn4/1WIwPyuJCz+jDS8/832ZPvGMVD2K/LY+bcE3P+DiIj95KV4/7ASDPk5FTD/Cj0M/leocP72oXz9wPkA/0Dc8Pz0+3D33m/s+w5spPqRreT9lezQ/QBwEPyF5Aj9fXE8/RU8NP4fLwD4Gghw/4CgfPtkOlj5UsP0+56elPtGsEj+N2nE/zb/xPXCIcD5Inb8+jg9gP3DGND+ZYAE/kHtZP29zEj8rrAQ/+2OOPmgxHj8G+ys/x/x/PpE6AD+KweE8QbE5P10eNj739x4/5dxCPzXXwD6oxns/ti8ZPEwzQD9+k34/gvRTPnyP9z7sM3w/EMe3PmRB+DwS8ew+5DdIP8l18z51roI+2jDcPsRgaz8G5MI+fuVAP7Q3uT4Fdis/JCEQPyL66j46UMQ+mS3CPhs5LT915Lw+174GPxfbuT62h34/wpT4PpN17D13HV0/Q2hgP9vpCD+HFw0+wAfrPhrD7D4oXkw95xR/P9R+nD7zJOA+agPhPmjWyT6wlCY/bLgFP3LrPD9XV2A/VQqoPqvMID5F3jI/rc70PlbzPj54B7A9QNh+PwtjSz+cWWQ/ceg6P/Nybj+bfRM/zvh6P2oPXz90ihs/9JfdPaPH8T5RYis97GcUP2YmqT5hnFk/xVYZP5ZC6T7YET8//eqFPn7VIj4ksJY+NkU4PIWgjT7LO5Q+Wa9xPtpU8T43XzY/JYA0P9k2Dz9d3IU+ePA1PxJxLT4xI/4+vbxJP3OkBD8Q50k++6iHPn/naT9Kybo9DtEbP1IaOz+hmO0+dMN9P3aRfz+PlIw+V/tTP6G/Yj9qQ/c+m+CsPbew3DwA/G0+ZH99P61xyD4TXPw+EbDGPjuKMj/Tvv0+oZk6PyqnND/1D9I9L7ZbP/rZmj4Cc1Q/h7PUPSwC3T5Vgpo+uJYCPxSoSz7CW8A+yeAMP1Pmbz/VOm4/BRijPmnY2T7s0Mk+eNlsP+iyQz/EByk/VjpMPzAXOj5hcf8+zvIvP0ayMz0l2y8+Wkk1Po7zPT+UTHw/gWt2PqtHVT8y93U/ViEZP+2Dvz6bf1Y/cQXjPtdoNj5GB7Y+hLbQO+aEsj6Ephg+mY0ZP6rb7z75IHU9NE1KP4gYPT4ZzmM/CEoYPzD2Lj/jMsk+Zo+dPmGvtj7lzAA/hoWiPCPOhD5IsGY/2lBRP+aTiD5QEn0/1b1lPt7jTj7H7kU94O8kPnQsTz9Ly1I/tD0mPup9Uz8hN+w+7s7pPly5SD+lPkY+XVTaPtjxjT6PeXQ/yX30PpA6Ej9rKxw/DMBZP+iYxz0Zv/I+NgltPzkPZj9cdL06ogWEPsp+zj7jYrE99r55Px65dD7173k+CfdRP36+gD3j240+yqF2P4dBvD5iKOc+ZzKEPuX5aD9OHUc/N4iRPhUaZT4fdHo/7vgXP26R7D7mDTE/L40VPy49az+xdS8/ovIgP2PBOj8WwEE+kMtYP4YWeT31MVo/7UuLPo+Psj7qzJE+Ev9yPX/rej9znAs/ocQyPt0BGT892yU+1S5yP8zLZD9hbd4+45glP0NPSj+pB+w+4awmPwFDZD9d7Yo+X3NoPQ+EdD+x/Gc+Qv6xPuTG7D2v+N4+GkZsP8INJT+Eo+s+bWTzPi0cHT+7GKk+tdjwO16rZD+MUAc+ML3JPpc9Dj/LTDc/7lVMP+9nLj8xAWg/SIj9PlF7nD6Ca7I+Db+lPoT5ND/doP8+BgDMPYkH2D1DhMI9Q2pCPoarDD+meKo+qjUjPyI9CD9ObWc/ZDVTPoSTCT9Zmz4/jL06PwN0FT5xsBg/P/pSPzWHFj7qrfA+xTJUPxe6GD7OSq8+jZrvPk/vHj+DuHQ/0pI9PtIpAz+17iA+FCVEP4+J8j5L2H0/4lfyPv7/rT61sk8/l+EzP1M6Nj+h41c/JGcjPw06pj4DhQo/vwBbP0mjlj3Byj4/UUYvPuQbUT5jtZ0+4+g7P3uLhT686E8/YOCbPuJGaz+z/iE/OOmWPh+FZz9xTDI/5JJuP5htcD96Ohw/p0g+PyDhLT/uKVI/zHdKP4faSD3/YUc/3RDbPE0g/z3N2iY/5o/5Pfg5Nj/f8dQ+DCkqP39uLT5gnv8+ZFYTPwdAWT/vwBU/zDDrPvkDZz8k+jY/3vqxPvQlaT9+elY+QAA/PkIYGz9J/1U/AcqqPn7/Qz5QNHw/UDJWP1o/KT9vrU0+YjMpP+pk3j454Eg/Zf8UP65xAj0rdm4/+cQ3P2VG+D6Ppyw++7A9P/h0JD+Ng4w9woE8PnMVBT/IBnE+5wkxPyy5JT8H+cE+jUNMPhkEgz7FucI+CbteP14jHT+pNnc/MpbUPrlrWT/Iw1o/TFmNPsGnsD6WzNw+G80yP85iCz8KhEQ/N6yNPkW31Dz4oys/S6Z8PznWSD/JgGs/cWAWP8Xd/z5o2u0+TjxOPyi4fj94XBc9/4VHP4SYoz4aLl0/O0GdPuhSVz/8exg/MXJQP0cT/j7oe2E/uqajPkz+mj55QDg/Ls8LP8cVAD8Oh2U+ODkWP5OqyD73RMA+AmyHPTumaT7Yax8/Uq/rPsdMWj9RXSg+XF58P4HtJz+l2xs+IWsoP54z+T1mZJg+HaprPkrPFz6Z9gM/MJtiP6t2Lz8h3As8nc1mPsPPrD76Tms/y1hnPyCPOj6qzxk+VY4MPyW1bT6n8nY+KBTzPuki6j5dUGo/rkQrPygjsT6RaB8/0Ss7P8FFFD8rql8/xTwjPsNAQj2NSh4/yk0yPwD/oj5SJ0g+rMX6PmHQWj9tYEs/BYRUPz07Tz8MfKA9/RAeP0N8LD4tQmg9YLNVP8CHEj8KXjA/tuULPOJVYz+8mRA+T+JAPTBswD7PxCQ/AcksP3FW9z7OK4w+rr0FP7Khsj7ayyM/piCFPlJzvDy/fN8+z5ZpP4/3zz5yU+0+eULoPutPwz6EfnY/o2fHPsd3Jz9/GW4/bHCHPWrWET/Dkg8/1iITP9tGpj605BA/GjcNPxDBij2fMdI+8YZPPjIgHD+f+hc/lrhMP5BPDT5iitk+7dkAP2D+ET9nPYA9U9UjP9H4MD9Fqu8+K4j0Pk0aOz+/0qs+5/8rPsuH8D4n9Fw/bmBgPs0Eaj+G7vk+iFkaPwzyZz61d4Y+NfLUPv1xRz88c/U+cHmePsgIcj+QPX0+iEZHPzZhdD/fsH499JB7P3vBkT3NoV4/03zPPsA0/z1iPFQ/5WxbPxBFfT85Iho/Wp1BPvE6ST+QQC88Dd5wP5/hOD+vXyw/KmcjPpBadz9qEkM+0hUYP3JUXj0bjWU+aOeSPbCkkj71wks/miY2Py8ouT06kJ4939YVP1Gk8T4AS6M+eu9LPyQ+TT/R8BU+ZILsPZiKmD7os3s/HbiSPkReQT+pIwE/qN9hPzxDET5cPHo//gbwPmtXXT/q+MA+FRskP+GCCD2xG/0+RhEZPpR2QD5MDgI/zXxxPslhvz15uDg/6nC6Poi9wT4NHnY/ZRl0P4eaYD8AA2c+Zo0xPuOYQD8JP14+8QIeP8VJOj8Kj4k+PltOP4r/3D4ghn8+oCggP4fucD8Zubk98C94Pw9S4D49LJQ+Z+YCP/CVRz9KmcA+/GQlPzSB8z4JUrU+xMmqPrf2ZD+2O9M9sPsWP1ALVT7NZmM/a/9SPFgVFD+ua4k9tTfxPgtpED8JiUw/b5VCP/WklD0McDQ/+DwwPwZxWD/guQM/NncJPwAJAT9THD4/OBR1P4SXFz8GVls/bnTuPrwzvj5wbWg/KPwnP7ioQT7Pc9Q+Xc/2PpN6YT4CvtQ9n1FbP4LlBD8TAJs+NM++PpWqez/5lGI/oc+RPQlZpj0hnnE/fh4YP5038D7cIVI/hCc+P/LIoj5+83U/gxQ4P/8pYj+WM3s/JIBWPiCl7z39hFM+7/ZBP5+aKD6Xu1s/nTFaP2zLyD2xhSY9CzR6Pw/EvT4Bjkg+0VtqP9wCgj4sMnM/H3p0PrKr9D7+l1c+ClEjPw4iGj9QzdM9u0UHPr8FDj9EHeI9bynsPcsgKD7dL3g/K+42P+Jjnj0I/ds+7HU5PkYuVz9IcXU/yfIcP5p8NT+jnmA9xIByP1AyHz9pyBc/uC1PPiH4iT7XKJQ8izVgP0c3+z4KL0E9KHAYPYV7Xj49M14/+lIlPmRpBz9CC9w+qgYwPlr5kD10h7c93DfVPgrD0T6kRro+eHWHPviymD4Qc3I/T5oYP06AOD6iOfc9EX7LPq4bYj89KJY+sxCMPdhl+Tx23CI+NpR2PdNP8z7ossA99a5QPyWFFD7ziNk+5N9CP8woUz/4VUo/h0g4P7BNNz7bK5w+QRS/Pgz4Lz8o8MM+w6ZMPhxZ5T5vHmw+QJYfPQYPtj4QcsM+gBGWPdfUXj+XbK4+B+2WPtEnFz8AquY+jw9bPxnbFD/FqOU+pitMP4TxMT9Bzv48U/5DP015aT5Y5oc+F3AGPjZ8OD4rzsM9j1RdPohmNT/su/s+n7+VPi0ofD+G800/d++wPk1tFT9k9zw/NrNOPhXtXD84v+I+z8wvP5MRAD2579M+YvdTP0jSLT46SO8+o4TJPim3Pj+IjIM+7AcKP4toQz9SrG4+Kl52Pzsj9z7T7zg/kiBzPzwU8z5fJiE/fhSTPg6qqj49m7E+7l56P1RNwj1NCZU+oOsOPum9rj6Fgt0+5vVvPxiTSz7AgtY+hCeLPpfXBD8CXqk+nwB4P+gMyT1FnGA/V1M7P+yyHD+qAD8+5BYZP6ltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOzQ2xhbXBUb0VkZ2VXcmFwcGluZ6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemXHDBUKAAAACgAAAAoAAACld3JhcFSzQ2xhbXBUb0VkZ2VXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWnYW1iaWVudMcMF83MDD/NzAw/zcwMP6tleWVwb3NpdGlvbscMFwAAgD8AAIA/AACAP6hzcGVjdWxhcscMF83MTD7NzEw+zcxMPqdwaWNraW5nwqhtb2RlbGludsdAF83MzD0AAAAAAAAAAAAAAAAAAAAAzczMPQAAAAAAAAAAAAAAAAAAAADNzMw9AAAAAAAAAAAAAAAAAAAAAAAAgD+pYWxnb3JpdGhtB6lvYmplY3RfaWQAqGlzb3Jhbmdlyj1MzM2qYWJzb3JwdGlvbso/gAAArWxpZ2h0cG9zaXRpb27HDBco/MdBKPzHQSlrvkGrZGVwdGhfc2hpZnTKAAAAAKlzaGluaW5lc3PKQgAAAKhpc292YWx1Zco/AAAAqGNvbG9ybWFwialtaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKP4AAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTs0NsYW1wVG9FZGdlV3JhcHBpbmekZGF0YcgPoBfAtIg+E7afOxWpqD4AAAAArH6JPqZZHzziz6s+AAAAALM+ij5z0HM8b+6uPgAAAAC09Io+j7GmPG0Esj4AAAAAyqCLPvcY1jxgEbU+AAAAAL5CjD45GQQ9cBW4PgAAAADJ2ow+XW4ePeYPuz4AAAAAxmiNPvksOT3cAL4+AAAAAKDsjT5I7lI9FOjAPgAAAABxZo4+tN9rPf3Ewz4AAAAALNaOPtkUgj2Sl8Y+AAAAAKE7jz4u9Y09ml/JPgAAAADslo8+8puZPb4czD4AAAAAAeiPPv8SpT3Zzs4+AAAAANQukD6BYbA9snXRPgAAAABva5A+FY27PfUQ1D4AAAAAyp2QPiibxj1woNY+AAAAAO3FkD62j9E99yPZPgAAAADf45A+rm3cPV6b2z4AAAAAqveQPkY45z1YBt4+AAAAADgBkT5+8fE9wmTgPgAAAACbAJE+SJv8PXi24j4AAAAA5fWQPqubAz5C++Q+AAAAACjhkD5l4wg+/zLnPgAAAABjwpA+iCUOPpxd6T4AAAAAq5mQPkliEz70eus+AAAAADlnkD4Kmhg+44rtPgAAAAD9KpA+S80dPkWN7z4AAAAAIOWPPib8Ij4kgvE+AAAAAMiVjz7KJig+dmnzPgAAAAAPPY8+H00tPhVD9T4AAAAAFtuOPkFvMj4PD/c+AAAAAANwjj52jTc+Vc34PgAAAAAU/I0+aac8Pvp9+j4AAAAAkX+NPi29QT4gIfw+AAAAAG36jD7SzkY+s7b9PgAAAAD4bIw+WNxLPsg+/z4AAAAAY9eLPkflUD7SXAA/AACAPxA6iz7I6VU+lxMBPwAAgD8qlYo+pOlaPtPDAT8AAIA/1uiJPtTkXz6obQI/AACAPzg1iT4W22Q+ChEDPwAAgD/oeog+V8xpPieuAz8AAIA/EbqHPlG4bj71RAQ/AACAP8vyhj4Nn3M+x9UEPwAAgD+iJYY+UYB4PpRgBT8AAIA/vVKFPk5cfT6d5QU/AACAP4V6hD4+GYE+92QGPwAAAABInYM+WoGDPsneBj8AAAAAZbuCPqrmhT4/Uwc/AAAAAAjVgT71SIg+Y8IHPwAAAAB+6oA+OqiKPm0sCD8AAAAAS/h/PnkEjT6IkQg/AAAAAIoUfj6qXY8+0PEIPwAAAADRKnw+p7ORPndNCT8AAAAAajt6PngGlD6mpAk/AAAAAMlGeD5EVpY+gPcJPwAAAACvTXY+0aKYPiZGCj8AAAAAkVB0PjTsmj7RkAo/AAAAAAtQcj58Mp0+m9cKPwAAAAACTXA+oXWfPrgaCz8AAAAABUhuPom1oT5IWgs/AAAAAGFBbD5J8qM+eJYLPwAAAACjOWo+8SumPm7PCz8AAAAAWDFoPpNiqD5OBQw/AAAAAPIoZj4wlqo+MjgMPwAAAAD7IGQ+x8asPj9oDD8AAAAA4hliPmz0rj6hlQw/AAAAAA4UYD4vH7E+fMAMPwAAAADyD14++UazPt7oDD8AAAAA8Q1cPgNstT72Dg0/AAAAAFMOWj5Yjrc+5jINPwAAAACQEVg+7q25PsFUDT8AAAAABhhWPt3Kuz60dA0/AAAAAPwhVD4y5b0+y5INPwAAAAC7L1I+BP2/PhWvDT8AAAAAG0FQPl4Swj6yyQ0/AAAAALpWTj53JcQ+t+INPwAAAACEcEw+QTbGPkb6DT8AAAAAa45KPtNEyD5iEA4/AACAPy6xSD4yUco+HSUOPwAAgD9j2EY+flvMPpg4Dj8AAIA/PwRFPttjzj7XSg4/AACAP8Y0Qz5NatA+2VsOPwAAgD9YakE+6m7SPrprDj8AAIA/U6Q/Pr5x1D6Eeg4/AACAP/niPT7wctY+RYgOPwAAgD9FJjw+m3LYPv+UDj8AAIA/7m06Pqhw2j6yoA4/AAAAAMq5OD5Wbdw+b6sOPwAAAAAwCjc+o2jePjq1Dj8AAAAAbl41Pp5i4D4Yvg4/AAAAAJS2Mz54W+I+98UOPwAAAACoEjI+J1PkPu3MDj8AAAAACXIwPtVJ5j7x0g4/AAAAAMnULj51P+g+BtgOPwAAAADdOi0+KDTqPh/cDj8AAAAAx6MrPgko7D5H3w4/AAAAAIUPKj4jG+4+aOEOPwAAAACjfSg+jA3wPoHiDj8AAAAAEO4mPkb/8T6T4g4/AAAAAJ5gJT5t8PM+jeEOPwAAAADS1CM+DOH1Pl3fDj8AAAAArEoiPizR9z762w4/AAAAACzCID70wPk+Y9cOPwAAAAALOx8+U7D7Po/RDj8AAAAABLUdPluf/T5jyg4/AAAAADwwHD4cjv8+z8EOPwAAAACsrBo+Vr4AP9O3Dj8AAAAAYCoZPoG1AT9YrA4/AAAAAHOpFz6frAI/Xp8OPwAAAADmKRY+p6MDP8WQDj8AAAAA56sUPqOaBD91gA4/AAAAAF8vEz6fkQU/YW4OPwAAAADMtBE+m4gGP3daDj8AAAAAnzwQPop/Bz+mRA4/AAAAACHHDj6Bdgg/2ywOPwAAAADQVA0+fW0JP/YSDj8AAAAAduYLPodkCj/x9g0/AAAAAF59Cj6GWws/ydgNPwAAAACIGQk+oFIMP1W4DT8AAIA/HrwHPq9JDT96lQ0/AACAPwpmBj7cQA4/KXANPwAAgD/lGAU+CzgPP19IDT8AAIA/VtUDPjsvED/YHQ0/AACAP6qdAj57JhE/rPAMPwAAgD/ccgE+vB0SP5fADD8AAIA/glcAPgwVEz++jQw/AACAP5iZ/j1ODBQ/4lcMPwAAgD9zqfw9ngMVPwwfDD8AAIA/AeP6Pd/6FT8M4ws/AAAAAHJK+T0g8hY/36MLPwAAAAA05fc9XekXP2VhCz8AAAAA/bf2PYngGD+UGws/AAAAAE/I9T2j1xk/S9IKPwAAAAA3G/U9qM4aP5iFCj8AAAAAx7X0PYrFGz9INQo/AAAAAIad9D1NvBw/QuEJPwAAAABY2PQ99LIdP4KJCT8AAAAAumr1PWupHj/1LQk/AAAAABla9j2znx8/ic4IPwAAAAC6q/c9vJUgPzFrCD8AAAAAIWT5PZCLIT/bAwg/AAAAAEmH+z0ggSI/ZpgHPwAAAABVGf49YHYjP9EoBz8AAAAAho4APklrJD8NtQY/AAAAAMNKAj7aXyU//TwGPwAAAACmQgQ+CVQmP5rABT8AAAAAAncGPtBHJz/ZPwU/AAAAAGboCD4hOyg/qboEPwAAAAARlws++y0pP/cwBD8AAAAALoMOPksgKj+9ogM/AAAAAH+sET4TEis/5A8DPwAAAABzEhU+SAMsP2p4Aj8AAAAAq7QYPtTzLD9L3AE/AAAAABuSHD684y0/ZzsBPwAAAAC9qSA++dIuP8CVAD8AAAAAvvokPnnBLz+F1v8+AAAAAKCDKT43rzA/43f+PgAAAAAkQy4+JpwxP2sP/T4AAAAAKzgzPkKIMj8rnfs+AAAAAORgOD5uczM/0iD6PgAAAABIvD0+s100P4ua+D4AAIA/h0hDPgNHNT9ACvc+AACAP6sEST5dLzY/zW/1PgAAgD/S7k4+oBY3PzDL8z4AAIA/0QVVPsr8Nz9pHPI+AACAP4BJWz7T4Tg/OWPwPgAAgD9wt2E+ocU5P3ef7j4AAIA/PE5oPlGoOj9n0ew+AACAP8gMbz6liTs/BPnqPgAAgD/x8XU+umk8PxQW6T4AAAAAmPx8PnxIPT/RKOc+AAAAAM8Vgj7PJT4/GDHlPgAAAAD4voU+vAE/P8ou4z4AAAAAYnmJPifcPz/hIeE+AAAAALREjT4OtUA/SQrfPgAAAABfIJE+aoxBPxzo3D4AAAAA5wuVPiBiQj9cu9o+AAAAAPkGmT4vNkM/B4TYPgAAAAApEZ0+kwhEPx5C1j4AAAAAJCqhPjrZRD+g9dM+AAAAAJ5RpT4XqEU/gp7RPgAAAAAyh6k+HXVGP548zz4AAAAAq8qtPj5ARz/9z8w+AAAAALQbsj50CUg/yFjKPgAAAADvebY+rdBIP/7Wxz4AAAAABeW6PuiVST+QSsU+AAAAAL9cvz4SWUo/n7PCPgAAAADl4MM+JhpLPykSwD4AAAAAH3HIPhbZSz8iZr0+AAAAADgNzT7dlUw/qq+6PgAAAAAMtdE+ZFBNP5futz4AAAAAY2jWPp8ITj/4IrU+AAAAAN4m2z6Mvk4//0yyPgAAAAA+8N8+InJPP7hsrz4AAAAASMTkPlcjUD88gqw+AAAAALWi6T4j0lA/lI2pPgAAAAA8i+4+b35RP/aOpj4AAAAArn3zPkkoUj8+hqM+AAAAAOt5+D6Uz1I/rnOgPgAAAAB3f/0+Q3RTP3lXnT4AAAAAHEcBP2MWVD+JMZo+AAAAAPjSAz/qtVQ/MgKXPgAAgD8uYwY/xlJVP2TJkz4AAIA/l/cIP/PsVT9ah5A+AACAPwGQCz9ihFY/nTyNPgAAgD9WLA4/IxlXPzjpiT4AAIA/bMwQPy6rVz+cjYY+AACAPw9wEz9wOlg/8ymDPgAAgD8cFxY/5MZYP0h9fz4AAIA/UcEYP6lQWT/ymHg+AACAP5duGz+u11k/UadxPgAAgD+4Hh4/9FtaPwOqaj4AAAAAcdEgP33dWj8zomM+AAAAAKeGIz9XXFs/bJFcPgAAAAAIPiY/hdhbP9J5VT4AAAAAbvcoPwRSXD9UXU4+AAAAAJ2yKz/eyFw/rj5HPgAAAABTby4/LT1dP7QgQD4AAAAAVC0xP/KuXT/5Bjk+AAAAAFnsMz83Hl4/M/UxPgAAAAAlrDY/FIteP0DwKj4AAAAAgmw5P5f1Xj+//SM+AAAAABwtPD/VXV8/7yMdPgAAAACr7T4/3cNfP3RqFj4AAAAA561BP9MnYD8K2g8+AAAAAJFtRD/KiWA//nwJPgAAAABaLEc/1OlgP89eAz4AAAAA9+lJPx5IYT+YGfs9AAAAACqmTD+4pGE/jCzwPQAAAACaYE8/wf9hP8AX5j0AAAAACRlSP2NZYj9L/9w9AAAAAD/PVD+5sWI/5AnVPQAAAADrglc/6AhjP3Vezj0AAAAAxjNaPxRfYz/eIsk9AAAAAJHhXD9htGM/MnnFPQAAAAAcjF8/8whkPwJ9wz0AAAAAKDNiP+1cZD83QsM9AAAAAInWZD9osGQ/4dHEPQAAAAD/dWc/nANlPz0qyD0AAAAAXxFqP5tWZT+/Ps09AAAAAD6obD+5qWU/kfrTPQAAAACSOm8/7/xlPwlA3D0AAAAAW8hxP3JQZj9I7uU9AAAAAH9RdD9NpGY/xeHwPQAAAADX1XY/rvhmP3b4/D0AAAAAUFV5P61NZz/SBwU+AAAAANnPez9Zo2c/hQQMPgAAAACARX4/6PlnP/VjEz4AAAAArHRocmVlX2Zvcm1hdKpSR0JBRm9ybWF0pHNpemXWFfoAAACkdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlp3Zpc2libGXHFWi0MTYxMTMzMDQxNjA1Mjg4MDYwMDmxYXR0cmlidXRlX3VwZGF0ZXLHFGizNjczNjM2MDE0NjY4MzY4NjYyMKhvdmVyZHJhd8cTaLIyNzk4OTgzNDczNDQyNzk5NTGvdW5pZm9ybV91cGRhdGVyxxRoszg5NTM3NDQzOTQ4ODI0MzEwMTmlZmFjZXPHFGizNTM5Mjc5MDQxODM1NTQyMDc0M6R1dWlktDE3MzA2MDY2MTMzMjgxNTYzNTYyrXZlcnRleF9zb3VyY2XaBmMjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSBmbG9hdCBhYnNvcnB0aW9uOwpmbG9hdCBnZXRfYWJzb3JwdGlvbigpe3JldHVybiBhYnNvcnB0aW9uO30KdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSBzYW1wbGVyM0Qgdm9sdW1lZGF0YTsKdW5pZm9ybSBmbG9hdCBpc292YWx1ZTsKZmxvYXQgZ2V0X2lzb3ZhbHVlKCl7cmV0dXJuIGlzb3ZhbHVlO30KdW5pZm9ybSB2ZWMyIGNvbG9ycmFuZ2U7CnZlYzIgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIG1hdDQgbW9kZWxpbnY7Cm1hdDQgZ2V0X21vZGVsaW52KCl7cmV0dXJuIG1vZGVsaW52O30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWMzIGV5ZXBvc2l0aW9uOwp2ZWMzIGdldF9leWVwb3NpdGlvbigpe3JldHVybiBleWVwb3NpdGlvbjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHVpbnQgYWxnb3JpdGhtOwp1aW50IGdldF9hbGdvcml0aG0oKXtyZXR1cm4gYWxnb3JpdGhtO30KdW5pZm9ybSBmbG9hdCBpc29yYW5nZTsKZmxvYXQgZ2V0X2lzb3JhbmdlKCl7cmV0dXJuIGlzb3JhbmdlO30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KCgoKb3V0IHZlYzMgZnJhZ192ZXJ0OwpvdXQgdmVjMyBvX2xpZ2h0X2RpcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uLCB2aWV3OwoKdm9pZCBtYWluKCkKewogICAgZnJhZ192ZXJ0ID0gcG9zaXRpb247CiAgICB2ZWM0IHdvcmxkX3ZlcnQgPSBtb2RlbCAqIHZlYzQocG9zaXRpb24sIDEpOwogICAgb19saWdodF9kaXIgPSB2ZWMzKG1vZGVsaW52ICogdmVjNChnZXRfbGlnaHRwb3NpdGlvbigpLCAxKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3ICogd29ybGRfdmVydDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwp9CgqvZnJhZ21lbnRfc291cmNl2iCLI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gZmxvYXQgYWJzb3JwdGlvbjsKZmxvYXQgZ2V0X2Fic29ycHRpb24oKXtyZXR1cm4gYWJzb3JwdGlvbjt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBzYW1wbGVyMkQgY29sb3JtYXA7CnVuaWZvcm0gc2FtcGxlcjNEIHZvbHVtZWRhdGE7CnVuaWZvcm0gZmxvYXQgaXNvdmFsdWU7CmZsb2F0IGdldF9pc292YWx1ZSgpe3JldHVybiBpc292YWx1ZTt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBtYXQ0IG1vZGVsaW52OwptYXQ0IGdldF9tb2RlbGludigpe3JldHVybiBtb2RlbGludjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjMyBleWVwb3NpdGlvbjsKdmVjMyBnZXRfZXllcG9zaXRpb24oKXtyZXR1cm4gZXllcG9zaXRpb247fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB1aW50IGFsZ29yaXRobTsKdWludCBnZXRfYWxnb3JpdGhtKCl7cmV0dXJuIGFsZ29yaXRobTt9CnVuaWZvcm0gZmxvYXQgaXNvcmFuZ2U7CmZsb2F0IGdldF9pc29yYW5nZSgpe3JldHVybiBpc29yYW5nZTt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CgpzdHJ1Y3QgTm90aGluZ3sgLy9Ob3RoaW5nIHR5cGUsIHRvIGVuY29kZSBpZiBzb21lIHZhcmlhYmxlIGRvZXNuJ3QgY29udGFpbiBhbnkgZGF0YQogICAgYm9vbCBfOyAvL2VtcHR5IHN0cnVjdHMgYXJlIG5vdCBhbGxvd2VkCn07CmluIHZlYzMgZnJhZ192ZXJ0OwppbiB2ZWMzIG9fbGlnaHRfZGlyOwoKY29uc3QgZmxvYXQgbWF4X2Rpc3RhbmNlID0gMS4zOwoKY29uc3QgaW50IG51bV9zYW1wbGVzID0gMjAwOwpjb25zdCBmbG9hdCBzdGVwX3NpemUgPSBtYXhfZGlzdGFuY2UgLyBmbG9hdChudW1fc2FtcGxlcyk7CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pCnsKICAgIHJldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7Cn0KCnZlYzQgY29sb3JfbG9va3VwKGZsb2F0IGludGVuc2l0eSwgc2FtcGxlcjJEIGNvbG9yX3JhbXAsIHZlYzIgbm9ybSkKewogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfcmFtcCwgdmVjMihfbm9ybWFsaXplKGludGVuc2l0eSwgbm9ybS54LCBub3JtLnkpLCAwLjApKTsKfQoKdmVjMyBnZW5ub3JtYWwodmVjMyB1dncsIGZsb2F0IGQpCnsKICAgIHZlYzMgYSwgYjsKICAgIC8vIGhhbmRsZSBub3JtYWxzIGF0IGVkZ2VzIQogICAgaWYodXZ3LnggKyBkID49IDEuMCl7CiAgICAgICAgcmV0dXJuIHZlYzMoMSwgMCwgMCk7CiAgICB9CiAgICBpZih1dncueSArIGQgPj0gMS4wKXsKICAgICAgICByZXR1cm4gdmVjMygwLCAxLCAwKTsKICAgIH0KICAgIGlmKHV2dy56ICsgZCA+PSAxLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIDAsIDEpOwogICAgfQoKICAgIGlmKHV2dy54IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKC0xLCAwLCAwKTsKICAgIH0KICAgIGlmKHV2dy55IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIC0xLCAwKTsKICAgIH0KICAgIGlmKHV2dy56IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIDAsIC0xKTsKICAgIH0KCiAgICBhLnggPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHV2dyAtIHZlYzMoZCwwLjAsMC4wKSkucjsKICAgIGIueCA9IHRleHR1cmUodm9sdW1lZGF0YSwgdXZ3ICsgdmVjMyhkLDAuMCwwLjApKS5yOwoKICAgIGEueSA9IHRleHR1cmUodm9sdW1lZGF0YSwgdXZ3IC0gdmVjMygwLjAsZCwwLjApKS5yOwogICAgYi55ID0gdGV4dHVyZSh2b2x1bWVkYXRhLCB1dncgKyB2ZWMzKDAuMCxkLDAuMCkpLnI7CgogICAgYS56ID0gdGV4dHVyZSh2b2x1bWVkYXRhLCB1dncgLSB2ZWMzKDAuMCwwLjAsZCkpLnI7CiAgICBiLnogPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHV2dyArIHZlYzMoMC4wLDAuMCxkKSkucjsKICAgIHJldHVybiBub3JtYWxpemUoYS1iKTsKfQoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCkgKyBtYXgoZG90KEwsIC1OKSwgMC4wKTsKICAgIC8vIHNwZWN1bGFyIGNvZWZmaWNpZW50CiAgICB2ZWMzIEggPSBub3JtYWxpemUoTCArIFYpOwogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApICsgbWF4KGRvdChILCAtTiksIDAuMCksIHNoaW5pbmVzcyk7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgYW1iaWVudCAqIGNvbG9yICsKICAgICAgICBkaWZmdXNlICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBzcGVjdWxhciAqIHNwZWNfY29lZmYKICAgICk7Cn0KCi8vIFNpbXBsZSByYW5kb20gZ2VuZXJhdG9yIGZvdW5kOgovLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQyMDAyMjQvcmFuZG9tLW5vaXNlLWZ1bmN0aW9ucy1mb3ItZ2xzbApmbG9hdCByYW5kKCl7CiAgICByZXR1cm4gZnJhY3Qoc2luKGdsX0ZyYWdDb29yZC54ICogMTIuOTg5OCArIGdsX0ZyYWdDb29yZC55ICogNzguMjMzKSAqIDQzNzU4LjU0NTMpOwp9Cgp2ZWM0IHZvbHVtZSh2ZWMzIGZyb250LCB2ZWMzIGRpcikKewogICAgLy8gVGhlIHBlci12b3hlbCBhbHBoYSBjaGFubmVsIGlzIHNwZWNpZmllZCBpbiB1bml0cyBvZiBvcGFjaXR5L2xlbmd0aC4KICAgIC8vIElmIG91ciB2b3hlbHMgYXJlIG5vdCBpc290cm9waWMsIHRoZW4gdGhlIGRpc3RhbmNlIHRoYXQgd2UgdHJhY2UgdGhyb3VnaAogICAgLy8gZGVwZW5kcyBvbiB0aGUgZGlyZWN0aW9uLgogICAgdmVjMyAgcG9zID0gZnJvbnQ7CiAgICBmbG9hdCBUID0gMS4wOwogICAgdmVjMyBMbyA9IHZlYzMoMC4wKTsKICAgIGludCBpID0gMDsKICAgIGZvciAoaTsgaSA8IG51bV9zYW1wbGVzOyArK2kpIHsKICAgICAgICBmbG9hdCBpbnRlbnNpdHkgPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHBvcykueDsKICAgICAgICB2ZWM0IGRlbnNpdHkgPSBjb2xvcl9sb29rdXAoaW50ZW5zaXR5LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICAgICAgZmxvYXQgb3BhY2l0eSA9IHN0ZXBfc2l6ZSAqIGRlbnNpdHkuYSAqIGFic29ycHRpb247CiAgICAgICAgVCAqPSAxLjAgLSBvcGFjaXR5OwogICAgICAgIGlmIChUIDw9IDAuMDEpCiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICBMbyArPSAoVCpvcGFjaXR5KSpkZW5zaXR5LnJnYjsKICAgICAgICBwb3MgKz0gZGlyOwogICAgfQogICAgcmV0dXJuIHZlYzQoTG8sIDEuMCAtIFQpOwp9CgoKdmVjNCB2b2x1bWVyZ2JhKHZlYzMgZnJvbnQsIHZlYzMgZGlyKQp7CiAgICB2ZWMzICBwb3MgPSBmcm9udDsKICAgIGZsb2F0IFQgPSAxLjA7CiAgICB2ZWMzIExvID0gdmVjMygwLjApOwogICAgaW50IGkgPSAwOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXMgOyArK2kpIHsKICAgICAgICB2ZWM0IGRlbnNpdHkgPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHBvcyk7CiAgICAgICAgZmxvYXQgb3BhY2l0eSA9IHN0ZXBfc2l6ZSAqIGRlbnNpdHkuYTsKICAgICAgICBUICo9IDEuMCAtIG9wYWNpdHk7CiAgICAgICAgaWYgKFQgPD0gMC4wMSkKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgIExvICs9IChUKm9wYWNpdHkpKmRlbnNpdHkucmdiOwogICAgICAgIHBvcyArPSBkaXI7CiAgICB9CiAgICByZXR1cm4gdmVjNChMbywgMS4wIC0gVCk7Cn0KCnZlYzQgY29udG91cnModmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICBmbG9hdCBUID0gMS4wOwogICAgdmVjMyBMbyA9IHZlYzMoMC4wKTsKICAgIGludCBpID0gMDsKICAgIHZlYzMgY2FtZGlyID0gbm9ybWFsaXplKC1kaXIpOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSkgewogICAgICAgIGZsb2F0IGludGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIHZlYzQgZGVuc2l0eSA9IGNvbG9yX2xvb2t1cChpbnRlbnNpdHksIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgICAgICBmbG9hdCBvcGFjaXR5ID0gZGVuc2l0eS5hOwogICAgICAgIGlmKG9wYWNpdHkgPiAwLjApewogICAgICAgICAgICB2ZWMzIE4gPSBnZW5ub3JtYWwocG9zLCBzdGVwX3NpemUpOwogICAgICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodF9kaXIgLSBwb3MpOwogICAgICAgICAgICB2ZWMzIG9wYXF1ZSA9IGJsaW5ucGhvbmcoTiwgY2FtZGlyLCBMLCBkZW5zaXR5LnJnYik7CiAgICAgICAgICAgIExvICs9IChUICogb3BhY2l0eSkgKiBvcGFxdWU7CiAgICAgICAgICAgIFQgKj0gMS4wIC0gb3BhY2l0eTsKICAgICAgICAgICAgaWYgKFQgPD0gMC4wMSkKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBwb3MgKz0gZGlyOwogICAgfQogICAgcmV0dXJuIHZlYzQoTG8sIDEuMCAtIFQpOwp9Cgp2ZWM0IGlzb3N1cmZhY2UodmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICB2ZWM0IGMgPSB2ZWM0KDAuMCk7CiAgICBpbnQgaSA9IDA7CiAgICB2ZWM0IGRpZmZ1c2VfY29sb3IgPSBjb2xvcl9sb29rdXAoaXNvdmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIHZlYzMgY2FtZGlyID0gbm9ybWFsaXplKC1kaXIpOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSl7CiAgICAgICAgZmxvYXQgZGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIGlmKGFicyhkZW5zaXR5IC0gaXNvdmFsdWUpIDwgaXNvcmFuZ2UpewogICAgICAgICAgICB2ZWMzIE4gPSBnZW5ub3JtYWwocG9zLCBzdGVwX3NpemUpOwogICAgICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodF9kaXIgLSBwb3MpOwogICAgICAgICAgICBjID0gdmVjNCgKICAgICAgICAgICAgICAgIGJsaW5ucGhvbmcoTiwgY2FtZGlyLCBMLCBkaWZmdXNlX2NvbG9yLnJnYiksCiAgICAgICAgICAgICAgICBkaWZmdXNlX2NvbG9yLmEKICAgICAgICAgICAgKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHBvcyArPSBkaXI7CiAgICB9CiAgICByZXR1cm4gYzsKfQoKdmVjNCBtaXAodmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICBpbnQgaSA9IDA7CiAgICBmbG9hdCBtYXhpbXVtID0gMC4wOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSwgcG9zICs9IGRpcil7CiAgICAgICAgZmxvYXQgZGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIGlmKG1heGltdW0gPCBkZW5zaXR5KQogICAgICAgICAgICBtYXhpbXVtID0gZGVuc2l0eTsKICAgIH0KICAgIHJldHVybiBjb2xvcl9sb29rdXAobWF4aW11bSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwp9Cgp1bmlmb3JtIHVpbnQgb2JqZWN0aWQ7Cgpjb25zdCBmbG9hdCB0eXBlbWF4ID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLjA7Cgpib29sIG5vX3NvbHV0aW9uKGZsb2F0IHgpewogICAgcmV0dXJuIHggPD0gMC4wMDAxIHx8IGlzaW5mKHgpIHx8IGlzbmFuKHgpOwp9CgpmbG9hdCBtaW5fYmlnZ2VyXzAoZmxvYXQgYSwgZmxvYXQgYil7CiAgICBib29sIGFfbm8gPSBub19zb2x1dGlvbihhKTsKICAgIGJvb2wgYl9ubyA9IG5vX3NvbHV0aW9uKGIpOwogICAgaWYoYV9ubyAmJiBiX25vKXsKICAgICAgICAvLyBubyBzb2x1dGlvbgogICAgICAgIHJldHVybiB0eXBlbWF4OwogICAgfQogICAgaWYoYV9ubyl7CiAgICAgICAgcmV0dXJuIGI7CiAgICB9CiAgICBpZihiX25vKXsKICAgICAgICByZXR1cm4gYTsKICAgIH0KICAgIHJldHVybiBtaW4oYSwgYik7Cn0KCmZsb2F0IG1pbl9iaWdnZXJfMCh2ZWMzIHYxLCB2ZWMzIHYyKXsKICAgIGZsb2F0IHggPSBtaW5fYmlnZ2VyXzAodjEueCwgdjIueCk7CiAgICBmbG9hdCB5ID0gbWluX2JpZ2dlcl8wKHYxLnksIHYyLnkpOwogICAgZmxvYXQgeiA9IG1pbl9iaWdnZXJfMCh2MS56LCB2Mi56KTsKICAgIHJldHVybiBtaW4oeCwgbWluKHksIHopKTsKfQoKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjNCBjb2xvcjsKICAgIHZlYzMgZXllX3VuaXQgPSB2ZWMzKG1vZGVsaW52ICogdmVjNChleWVwb3NpdGlvbiwgMSkpOwogICAgdmVjMyBiYWNrX3Bvc2l0aW9uID0gZnJhZ192ZXJ0OwogICAgdmVjMyBkaXIgPSBub3JtYWxpemUoZXllX3VuaXQgLSBiYWNrX3Bvc2l0aW9uKTsKICAgIC8vIHNvbHZlIGJhY2tfcG9zaXRpb24gKyBkaXN0YW5jZSAqIGRpciA9PSAxCiAgICAvLyBzb2x2ZSBiYWNrX3Bvc2l0aW9uICsgZGlzdGFuY2UgKiBkaXIgPT0gMAogICAgLy8gdG8gc2VlIHdoZXJlIGl0IGZpcnN0IGhpdHMgdW5pdCBjdWJlIQogICAgdmVjMyBzb2x1dGlvbl8xID0gKDEuMCAtIGJhY2tfcG9zaXRpb24pIC8gZGlyOwogICAgdmVjMyBzb2x1dGlvbl8wID0gKDAuMCAtIGJhY2tfcG9zaXRpb24pIC8gZGlyOwogICAgZmxvYXQgc29sdXRpb24gPSBtaW5fYmlnZ2VyXzAoc29sdXRpb25fMSwgc29sdXRpb25fMCk7CgogICAgdmVjMyBzdGFydCA9IGJhY2tfcG9zaXRpb24gKyBzb2x1dGlvbiAqIGRpcjsKICAgIHZlYzMgc3RlcF9pbl9kaXIgPSAoYmFja19wb3NpdGlvbiAtIHN0YXJ0KSAvIGZsb2F0KG51bV9zYW1wbGVzKTsKCiAgICBmbG9hdCBzdGVwcyA9IDAuMTsKICAgIGlmKGFsZ29yaXRobSA9PSB1aW50KDApKQogICAgICAgIGNvbG9yID0gaXNvc3VyZmFjZShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgxKSkKICAgICAgICBjb2xvciA9IHZvbHVtZShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgyKSkKICAgICAgICBjb2xvciA9IG1pcChzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgzKSkKICAgICAgICBjb2xvciA9IHZvbHVtZXJnYmEoc3RhcnQsIHN0ZXBfaW5fZGlyKTsKICAgIGVsc2UgaWYoYWxnb3JpdGhtID09IHVpbnQoNCkpCiAgICAgICAgY29sb3IgPSB2ZWM0KDAuMCk7CiAgICAgICAgLy8gY29sb3IgPSB2b2x1bWVpbmRleGVkcmdiYShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZQogICAgICAgIGNvbG9yID0gY29udG91cnMoc3RhcnQsIHN0ZXBfaW5fZGlyKTsKCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChjb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCB1aW50KDApKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGNvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBjb2xvcjsKCn0Kj6x0cmFuc3BhcmVuY3nHFGizNzk4NzU2OTI4MjA0NjYyMTAxNaVzcGFjZccUaLM0MjY4MDkyOTMyOTk2Nzg5NjM5rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE2NDkyNjMxODE0MTQyODE1OTIzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAACAPwAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKQAAAAKlsaW5ld2lkdGjKQAAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAALNDAEAHRK1saW5ld2lkdGhfZW5kykAAAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAgD8AAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXKPzHQSj8x0Epa75BpWNvbG9y2BcAAIA/AAAAAAAAAAAAAIA/p3Zpc2libGXHFGizMzA4NjgwNDc1MTU1MTAzMzEzNrFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMTg1NTQyODU5NDIzMTA0ODE0NqhvdmVyZHJhd8cVaLQxNTUzMDU4OTM3NzA2NzYyNjgzN691bmlmb3JtX3VwZGF0ZXLHFGizODQ2Njg0ODUyMzgxNjA5NDc5M6VmYWNlc8cVaLQxMjg2OTIyMzI1MTYwNzkzODE4N6R1dWlktDE2NDkyNjMxODE0MTQyODE1OTIzrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAADBBAACAvwAAMEEAADBBAACAvwAAMEEAAIC/AACAv61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAgL8AAIC/AAAwQQAAgL8AADBBAAAwQQAAgL8AADBBr2JhY2tncm91bmRjb2xvcscVaLQxMzI4MjAzNzI5ODM4NDA1NzI5OKlwaXhlbGFyZWHHFGizNTMyMDQyNzIxNjU5ODc5NzQ5NqZjYW1lcmHHFWi0MTUyMTM0NTQ3Njg0MDU0MDYxMjOkdXVpZLQxNDMzNjI1MzMyOTU4MzY3NTk3MatjYW0zZF9zdGF0ZYambG9va2F0xwwX/kPGQP5DxkAAAKBAq2V5ZXBvc2l0aW9uxwwXKPzHQSj8x0Epa75BqHVwdmVjdG9yxwwXAAAAAAAAAAAAAIA/o2ZvdspCNAAApG5lYXLKQC2wPaNmYXLKQqLVOapjbGVhcnNjZW5lwqhjaGlsZHJlbpCJp3Zpc2libGXHFGizNzk4OTE2OTYzOTgyNzE3Nzg0MaVwbG90c9wAH46sdHJhbnNwYXJlbmN5xxRoszMzMzI2OTQ4MDMzMTU1MjA3MTClc3BhY2XHEmixODkxOTEyNjU3MjEzMTg1MjKsdmVydGV4YXJyYXlzgahwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAANVDAAAsQgAAREQAACxCAADVQwAAEkQAAEREAAASRKRuYW1luW1lc2gtMTE4ODMyNjgxMTgzMzkxNjcwODmpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABe+aW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyw6liYWNrbGlnaHTKAAAAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAADIwgAAgD+nZGlmZnVzZccMF83MzD7NzMw+zczMPqpjb2xvcnJhbmdlw6dsb3djbGlw2BcAAAAAAAAAAAAAAAAAAAAAqGhpZ2hjbGlw2BcAAAAAAAAAAAAAAAAAAAAAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAAp3BhdHRlcm7CrG5vcm1hbG1hdHJpeMckFwAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAP6J1dtcXAAAAAAAAAACnc2hhZGluZ8Koc3BlY3VsYXLHDBfNzEw+zcxMPs3MTD6nbm9ybWFsc8cMFwAAAAAAAAAAAAAAAKdwaWNraW5nwqlvYmplY3RfaWQArXVuaWZvcm1fY29sb3LYFwAAgD8AAIA/AACAPwAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9ywqlzaGluaW5lc3PKQgAAAKhjb2xvcm1hcMOndmlzaWJsZccVaLQxMTg5MzQ4Njk5MzkzMTYwMDc2OLFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjI1MzY4NDU5MTUxNzgzNzE4NKhvdmVyZHJhd8cUaLM4NzE0MDM0MjU4NTU1MzE2MTE1r3VuaWZvcm1fdXBkYXRlcscVaLQxMjkzMzcyNzA1MTA4ODIxMzM1OaVmYWNlc8cVaLQxMzAwNTMxMTE1OTM3NDgzMDI1MaR1dWlktDExODgzMjY4MTE4MzM5MTY3MDg5rXZlcnRleF9zb3VyY2XaFCkjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCB1bmlmb3JtX2NvbG9yOwp2ZWM0IGdldF91bmlmb3JtX2NvbG9yKCl7cmV0dXJuIHVuaWZvcm1fY29sb3I7fQp1bmlmb3JtIGJvb2wgc2hhZGluZzsKYm9vbCBnZXRfc2hhZGluZygpe3JldHVybiBzaGFkaW5nO30KdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgdmVjMyBvX25vcm1hbDsKb3V0IHZlYzMgb19jYW1kaXI7Cm91dCB2ZWMzIG9fbGlnaHRkaXI7CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNChmbG9hdCB2KXtyZXR1cm4gdmVjNCh2LCAwLjAsIDAuMCwgMC4wKTt9CnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCB2ZXJ0ZXhfY29sb3IodmVjMyBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKHZlYzQgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGZsb2F0IHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIHZlYzQodmFsdWUsIDAuMCwgMC4wLCAwLjApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfQp9Cgp2b2lkIHJlbmRlcih2ZWM0IHBvc2l0aW9uX3dvcmxkLCB2ZWMzIG5vcm1hbCwgbWF0NCB2aWV3LCBtYXQ0IHByb2plY3Rpb24sIHZlYzMgbGlnaHRwb3NpdGlvbikKewogICAgLy8gbm9ybWFsIGluIHdvcmxkIHNwYWNlCiAgICBvX25vcm1hbCA9IGdldF9ub3JtYWxtYXRyaXgoKSAqIG5vcm1hbDsKICAgIC8vIHBvc2l0aW9uIGluIHZpZXcgc3BhY2UgKGFzIHNlZW4gZnJvbSBjYW1lcmEpCiAgICB2ZWM0IHZpZXdfcG9zID0gdmlldyAqIHBvc2l0aW9uX3dvcmxkOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3X3BvczsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGxpZ2h0CiAgICBvX2xpZ2h0ZGlyID0gbm9ybWFsaXplKHZpZXcqdmVjNChsaWdodHBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5ejsKICAgIC8vIGRpcmVjdGlvbiB0byBjYW1lcmEKICAgIC8vIFRoaXMgaXMgZXF1aXZhbGVudCB0bwogICAgLy8gbm9ybWFsaXplKHZpZXcqdmVjNChleWVwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXoKICAgIC8vIChieSBkZWZpbml0aW9uIGB2aWV3ICogZXllcG9zaXRpb24gPSAwYCkKICAgIG9fY2FtZGlyID0gbm9ybWFsaXplKC12aWV3X3BvcykueHl6Owp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIC8vIGdldF8qIGdldHMgdGhlIGdsb2JhbCBpbnB1dHMgKHVuaWZvcm0sIHNhbXBsZXIsIHBvc2l0aW9uIGFycmF5KQogICAgLy8gdGhvc2UgZnVuY3Rpb25zIHdpbGwgZ2V0IGluc2VydGVkIGJ5IHRoZSBzaGFkZXIgY3JlYXRpb24gcGlwZWxpbmUKICAgIHZlYzMgdmVydGV4X3Bvc2l0aW9uID0gdG92ZWMzKGdldF9wb3NpdGlvbigpKTsKICAgIGlmIChpc25hbih2ZXJ0ZXhfcG9zaXRpb24ueikpIHsKICAgICAgICB2ZXJ0ZXhfcG9zaXRpb24ueiA9IDAuMDsKICAgIH0KICAgIHZlYzQgcG9zaXRpb25fd29ybGQgPSBtb2RlbCAqIHZlYzQodmVydGV4X3Bvc2l0aW9uLCAxKTsKCiAgICByZW5kZXIocG9zaXRpb25fd29ybGQsIGdldF9ub3JtYWxzKCksIHZpZXcsIHByb2plY3Rpb24sIGdldF9saWdodHBvc2l0aW9uKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191diA9IHZlYzIoMS4wIC0gZnJhZ191di55LCBmcmFnX3V2LngpOwogICAgZnJhZ19jb2xvciA9IHZlcnRleF9jb2xvcihnZXRfY29sb3IoKSwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX1ZlcnRleElEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoVVCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIHZlYzMgbm9ybWFsczsKdmVjMyBnZXRfbm9ybWFscygpe3JldHVybiBub3JtYWxzO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gZmxvYXQgYmFja2xpZ2h0OwpmbG9hdCBnZXRfYmFja2xpZ2h0KCl7cmV0dXJuIGJhY2tsaWdodDt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IHVuaWZvcm1fY29sb3I7CnZlYzQgZ2V0X3VuaWZvcm1fY29sb3IoKXtyZXR1cm4gdW5pZm9ybV9jb2xvcjt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgppbiB2ZWMyIGZyYWdfdXY7CmluIHZlYzQgZnJhZ19jb2xvcjsKZmxhdCBpbiBpbnQgc2FtcGxlX2ZyYWdfY29sb3I7CgppbiB2ZWMzIG9fbm9ybWFsOwppbiB2ZWMzIG9fY2FtZGlyOwppbiB2ZWMzIG9fbGlnaHRkaXI7Cgp2ZWMzIGJsaW5ucGhvbmcodmVjMyBOLCB2ZWMzIFYsIHZlYzMgTCwgdmVjMyBjb2xvcil7CiAgICBmbG9hdCBkaWZmX2NvZWZmID0gbWF4KGRvdChMLCBOKSwgMC4wKTsKCiAgICAvLyBzcGVjdWxhciBjb2VmZmljaWVudAogICAgdmVjMyBIID0gbm9ybWFsaXplKEwgKyBWKTsKCiAgICBmbG9hdCBzcGVjX2NvZWZmID0gcG93KG1heChkb3QoSCwgTiksIDAuMCksIGdldF9zaGluaW5lc3MoKSk7CiAgICBpZiAoZGlmZl9jb2VmZiA8PSAwLjApCiAgICAgICAgc3BlY19jb2VmZiA9IDAuMDsKICAgIC8vIGZpbmFsIGxpZ2h0aW5nIG1vZGVsCiAgICByZXR1cm4gdmVjMygKICAgICAgICBnZXRfZGlmZnVzZSgpICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBnZXRfc3BlY3VsYXIoKSAqIHNwZWNfY29lZmYKICAgICk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzMgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjNCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBjb2xvcjsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBmcmFnX2NvbG9yOyAgLy8gY29sb3Igbm90IGluIHVuaWZvcm0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgaWYgKGdldF9wYXR0ZXJuKCkpIHsKICAgICAgICB2ZWMyIHNpemUgPSB2ZWMyKHRleHR1cmVTaXplKGNvbG9yLCAwKSk7CiAgICAgICAgdmVjMiBwb3MgPSBnbF9GcmFnQ29vcmQueHk7CiAgICAgICAgcmV0dXJuIHRleGVsRmV0Y2goY29sb3IsIGl2ZWMyKG1vZChwb3MueCwgc2l6ZS54KSwgbW9kKHBvcy55LCBzaXplLnkpKSwgMCk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7CiAgICB9Cn0KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCkpIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcChmcmFnX2NvbG9yLngsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZyYWdfY29sb3I7CiAgICB9Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCB2YWx1ZXMsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGZsb2F0IHZhbHVlID0gdGV4dHVyZSh2YWx1ZXMsIHV2KS54OwogICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgdmVjNCByZWFsX2NvbG9yID0gZ2V0X2NvbG9yKHVuaWZvcm1fY29sb3IsIGZyYWdfdXYsIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKICAgIHZlYzMgc2hhZGVkX2NvbG9yID0gcmVhbF9jb2xvci5yZ2I7CgogICAgaWYoZ2V0X3NoYWRpbmcoKSl7CiAgICAgICAgdmVjMyBMID0gbm9ybWFsaXplKG9fbGlnaHRkaXIpOwogICAgICAgIHZlYzMgTiA9IG5vcm1hbGl6ZShvX25vcm1hbCk7CiAgICAgICAgdmVjMyBsaWdodDEgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCBMLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgdmVjMyBsaWdodDIgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCAtTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHNoYWRlZF9jb2xvciA9IGdldF9hbWJpZW50KCkgKiByZWFsX2NvbG9yLnJnYiArIGxpZ2h0MSArIGdldF9iYWNrbGlnaHQoKSAqIGxpZ2h0MjsKICAgIH0KCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChyZWFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHJlYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IHZlYzQoc2hhZGVkX2NvbG9yLCByZWFsX2NvbG9yLmEpOwp9Co+sdHJhbnNwYXJlbmN5xxRoszMzMzI2OTQ4MDMzMTU1MjA3MTClc3BhY2XHEmixODkxOTEyNjU3MjEzMTg1MjKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTM1MjQ5ODEwNjMzMTg3MTM2NjWpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAAAApW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAMjCAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMoAAAAAqWxpbmV3aWR0aMoAAAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKAAAAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAAAAAKtkZXB0aF9zaGlmdMq3J8WsrWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAAACndmlzaWJsZccVaLQxMTg5MzQ4Njk5MzkzMTYwMDc2OLFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjkyMjk3ODcwNDI5NzI3OTczMKhvdmVyZHJhd8cUaLM4NzE0MDM0MjU4NTU1MzE2MTE1r3VuaWZvcm1fdXBkYXRlcscVaLQxMjE5ODI0NDIxMDg4ODI4MDU3M6VmYWNlc8cUaLM2MjM2OTAyMzM2NTM1NDY4MjgzpHV1aWS0MTM1MjQ5ODEwNjMzMTg3MTM2NjWtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAREQAACxCAABERAAAEkQAANVDAAASRAAA1UMAACxCrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAADVQwAALEIAAEREAAAsQgAAREQAABJEAADVQwAAEkSPrHRyYW5zcGFyZW5jeccUaLM3Nzc4Mjc2MjYwMDI3ODIzODg1pXNwYWNlxxRoszM1OTA5NzUyNTE2NDYyMTUwMjisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTU5MTE4MzE1MjMxNzk5MDIyMDapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAACPwvU9pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACDBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAj8L1PatkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAI/C9T2ndmlzaWJsZccVaLQxMDUyNjg5OTAwMjUyODEwNDQwNbFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxODAwODQ4NjgwNzgyNTE0ODc1OahvdmVyZHJhd8cUaLM0NTAzMzg2OTExNzQ4NTUxNTAwr3VuaWZvcm1fdXBkYXRlcscUaLM1NjAzNzI5MDg3NzA5MTgwODkzpWZhY2VzxxVotDEwMDEzMzI2NzAyODA4MTk3MDk0pHV1aWS0MTU5MTE4MzE1MjMxNzk5MDIyMDatdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoF5rZ70MAABJEM9MJRAAAEkSauRtEAAASRACgLUQAABJEZoY/RAAAEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBea2e9DAAAsQjPTCUQAACxCmrkbRAAALEIAoC1EAAAsQmaGP0QAACxCj6x0cmFuc3BhcmVuY3nHFWi0MTQwMjY5MjcwOTIwMDQ3MDk2NzClc3BhY2XHFWi0MTA4MTc1Mjg4MjQ1NzIwNDI3MzSsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtOTc1ODY4NzM1MTAxMjc1MTE1N6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAM3MTD2lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIMEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAADNzEw9q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAzcxMPad2aXNpYmxlxxNosjM3MjgyNzE1MjI3OTk3MjM3MLFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMDM2MzY5Mzk2NDQyNzIyMTMwOKhvdmVyZHJhd8cVaLQxMDUxMDMyNDY0ODU2MzE0MjgyMq91bmlmb3JtX3VwZGF0ZXLHFGizMTc2NjA5MjgwNjcwMzE1NDI1MaVmYWNlc8cVaLQxMjQ5Njg4NzE4Nzc3OTkyMTQwNqR1dWlkszk3NTg2ODczNTEwMTI3NTExNTetdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAABJEAOAARAAAEkRmxhJEAAASRM2sJEQAABJENJM2RAAAEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcz891DAAAsQgDgAEQAACxCZsYSRAAALELNrCREAAAsQjSTNkQAACxCj6x0cmFuc3BhcmVuY3nHFWi0MTUyMTAwODEzNTA4NDc4ODIxMDGlc3BhY2XHFGizNjMxNDM0NTYzNzI4MTA2ODg1Nax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy00MTI3ODA5NzQ4MjQ4Njc3NDgwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAj8L1PaVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgwQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAI/C9T2rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAACPwvU9p3Zpc2libGXHE2iyMTU1NTE2ODIyMjA2ODI5ODU4sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE1NDg3NDc4OTg4MzEzNTg3NTUzqG92ZXJkcmF3xxVotDE1NDQ5NTM1Njk0NzkwODczNjgzr3VuaWZvcm1fdXBkYXRlcscVaLQxODQyMjYyMTc4MzkyNTAyNzgyNaVmYWNlc8cUaLMzOTM3MTc2MTY0OTg2ODAyNzEwpHV1aWSzNDEyNzgwOTc0ODI0ODY3NzQ4MK12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAABERM1M+EIAAEREmVloQwAARERnRqpDAABERABg4EMAAEREzTwLRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAA1UPNTPhCAADVQ5lZaEMAANVDZ0aqQwAA1UMAYOBDAADVQ808C0SPrHRyYW5zcGFyZW5jeccVaLQxMzE2NjExNTM4ODA2MzIxNTEwMKVzcGFjZccSaLEzMTI0NjgxMTc4Mzk2MjYwOax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy03MDE1NDI4Mjc0NTI2MTUzMDEzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAzcxMPaVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgwQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAM3MTD2rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAADNzEw9p3Zpc2libGXHFGizNzEzNzMyNDAyMDExNzc0OTEzNrFhdHRyaWJ1dGVfdXBkYXRlcscUaLM2MzE5NDQ3OTA1NzQxMjQyMTE5qG92ZXJkcmF3xxVotDE2MzM2NTc4NTkxNTI4NTQzMzAwr3VuaWZvcm1fdXBkYXRlcscVaLQxMzY1MTI0MTg1MjY0NDA3NTY2NaVmYWNlc8cVaLQxODM0OTgwNTk2Mjc2OTE4OTk4NKR1dWlkszcwMTU0MjgyNzQ1MjYxNTMwMTOtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARESaGYxCAABERABAMkMAAEREmjmPQwAAREQzU8VDAABERM1s+0Otc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAANVDmhmMQgAA1UMAQDJDAADVQ5o5j0MAANVDM1PFQwAA1UPNbPtDj6x0cmFuc3BhcmVuY3nHFGizODQzMjgxOTIwODg0MDAxNTc4MaVzcGFjZccUaLMyNjYyMTEwMzkwMDE2ODQ2MTQ1rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyMDgxNjYzMDAwNjg1MTQ2OTk5qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizMTg3NDY2NDEzNDE5NTg4MzM1NrFhdHRyaWJ1dGVfdXBkYXRlcscTaLIyNzcxNzk4MzAyMTAzMzM0MDKob3ZlcmRyYXfHFWi0MTQ4ODg4ODYwNDYxMzU3NDk2ODKvdW5pZm9ybV91cGRhdGVyxxRoszY2ODI0MzAzNjI0ODc4Mzg2NDmlZmFjZXPHFWi0MTAwMzg5ODM1NjgyODM3MTkzNjekdXVpZLQxMjA4MTY2MzAwMDY4NTE0Njk5Oa12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXmtnvQwAAEkIz0wlEAAASQpq5G0QAABJCAKAtRAAAEkJmhj9EAAASQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoF5rZ70MAACpCM9MJRAAAKkKauRtEAAAqQgCgLUQAACpCZoY/RAAAKkKPrHRyYW5zcGFyZW5jeccVaLQxMjMxNTUyMDczMjcyMTU4MTk1OKVzcGFjZccUaLMzNDg2NzY2Mzg0OTM0MjQ5MTczrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZb9saW5lc2VnbWVudHMtMzUxNzc1ODA0MzQzNTAxNDUxqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizMTA5Mzc3MTU5OTA0MDc0NzcwNbFhdHRyaWJ1dGVfdXBkYXRlcscUaLM4ODQ3OTAyMDg4Mjk4NjAzMzkyqG92ZXJkcmF3xxVotDEyMTQzOTA0NjY5MjUzNTQxNjg1r3VuaWZvcm1fdXBkYXRlcscUaLM5NTQ4MTY1NzIyMDU5Mzc1MjgxpWZhY2VzxxVotDE1NDUwOTcwODUzNjAwMDc0OTY4pHV1aWSyMzUxNzc1ODA0MzQzNTAxNDUxrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcz891DAAAaQgDgAEQAABpCZsYSRAAAGkLNrCREAAAaQjSTNkQAABpCrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXM/PdQwAAKkIA4ABEAAAqQmbGEkQAACpCzawkRAAAKkI0kzZEAAAqQt4AEKx0cmFuc3BhcmVuY3nHFGizMjM1NzA4MTg1NzYxMTI1MjU3MKVzcGFjZccUaLM1MDk0OTM4MTA5MjMyOTA4ODEyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbl0ZXh0LTE4MjkyNjEyMTA3MjQ3MTU3ODY2qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxRoszQ0NjM4Mzk0ODYzNzU1MTczMzWrbWFya2Vyc3BhY2XHFWi0MTE1NTk2NTczMjM1MDYzODkyNjKxYXR0cmlidXRlX3VwZGF0ZXLHFGizMjY2NDg5NjExNjMyMjE0MjY1N6hvdmVyZHJhd8cVaLQxNzIyMDk5NDI2MzIxNTA4MjgxNq91bmlmb3JtX3VwZGF0ZXLHFGizNjYyMTM5NDQ3Njk4NjQ5Njc1NqVmYWNlc8cVaLQxODMwMjM4MDg2NTE0MjUyNjMzMqR1dWlktDE4MjkyNjEyMTA3MjQ3MTU3ODY2rXZlcnRleF9zb3VyY2XaGk0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoSiCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4ercXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXqm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrW1hcmtlcl9vZmZzZXSCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXpWNvbG9ygqt0eXBlX2xlbmd0aASkZmxhdMcAF691dl9vZmZzZXRfd2lkdGiCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXo3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTHABepcm90YXRpb25zgqt0eXBlX2xlbmd0aASkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxRoszE2OTc0NDk2MzY2OTA5MDg2NTOlc3BhY2XHFWi0MTE3MDM1ODY5MjM5NjQzNzMzMzesdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtODY1NTc3MjI2MzY2Nzk5MDQxNqljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+pb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFWi0MTY5Nzc1ODk5MjU4OTQ0MDYyMTmxYXR0cmlidXRlX3VwZGF0ZXLHFGizODgyMjgyNDQ3MDAyOTYyNTUwNKhvdmVyZHJhd8cUaLM3MjIxOTE2MTYyNzE3MjIzNTA2r3VuaWZvcm1fdXBkYXRlcscVaLQxNDA4NzA1NzcxNjI4ODAzOTQ2MaVmYWNlc8cVaLQxMDMxNzYxMzg3ODc2MTY0NTk0NKR1dWlkszg2NTU3NzIyNjM2Njc5OTA0MTatdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizNTUxNzMzOTk4MDQwNDYwNjA5NaVzcGFjZccUaLMxMjY4MzU2MDU4MjkwOTIyMjIxrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTI1ODA2NTk0Njg5MDM5MjUxOTapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccVaLQxMTA5MzE5MjEyODY5MDgzMDE2N7FhdHRyaWJ1dGVfdXBkYXRlcscUaLM1NjMzMjEzMzQ4ODY1ODE0NDk2qG92ZXJkcmF3xxVotDE1NDM1OTIyNzM3OTU4MTkzOTMyr3VuaWZvcm1fdXBkYXRlcscUaLMzOTk3NjQwNzA2MDExMzE0OTU4pWZhY2VzxxRoszg3Mzc3MDc5OTc4MjI1Mzg2NTSkdXVpZLMyNTgwNjU5NDY4OTAzOTI1MTk2rXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAgREQAACxCrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAwNRDAAAsQt4AEKx0cmFuc3BhcmVuY3nHFWi0MTIwMzgxNDc1Njk5MDgwMzM4MTClc3BhY2XHFGizNTM3Njg1OTAzODk3MDk2MTY0M6x2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIA/AACAPwAAgD8AAAAAAAAAAAAAgD8AAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAL8AAAC/AAAAPwAAAL8AAAC/AAAAPwAAAD8AAAA/pG5hbWW4dGV4dC02OTE4MjYwNTA3NDU3MTg3ODIyqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxRoszI1MzYxMTg1OTgwNzA3NjY4MzOrbWFya2Vyc3BhY2XHFWi0MTc1MTY0NzM2NTA5NDY0Njg3NzKxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTc3OTU1OTA4NTU4NzI4MzM5OTKob3ZlcmRyYXfHFWi0MTQ3ODU5ODg3MTg1NTQzOTYyNjSvdW5pZm9ybV91cGRhdGVyxxVotDE1MzE4MDM3MjU0MTgyMDk4ODgxpWZhY2VzxxNosjM1Nzc5NTgwODA0MjQ0OTI5MKR1dWlkszY5MTgyNjA1MDc0NTcxODc4MjKtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHMBeNl67AAADAwPypscAAAMDA5/upwBSux8BWDq3AFK7HwKjGi8AAAMDA5/upwBSux8CqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHMBdWDp1Bg8C6Qdv5nkGDwLpB9iicQQisvEGS7ZxBCKy8QVK4fkGDwLpBWmSbQQisvEGtbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHSBcEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAAEVo7AmG5ywQAAAAAEVg7BmG5ywQAAAAAAAAAAmG5ywQAAAAClY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/r3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHYBcAwJQ+AMDvPgBAqD4AYAM/AMCUPgCgDz8AQKg+ACAbPwDAlD4AICc/AECoPgDgMj8AwJQ+AOA+PwBAqD4AoEo/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z6jcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMdIF5rZ70MAAAhCAAAAADPTCUQAAAhCAAAAAJq5G0QAAAhCAAAAAACgLUQAAAhCAAAAAGaGP0QAAAhCAAAAAGaGP0QAAAhCAAAAAKlyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/j6x0cmFuc3BhcmVuY3nHFGizNjY1MzIxNDI4MzU5NzAzMDIzM6VzcGFjZccUaLMxNDA0ODcyNjcxODkwNDk2NjExrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTExMDgxNjgyOTU0MzMxNTU2NzAxqWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccTaLIxNDQyODIyODk0MTA1NTczMTWxYXR0cmlidXRlX3VwZGF0ZXLHFGizOTczNDMzNzQ3NDc5MTk4MDE2M6hvdmVyZHJhd8cUaLMyMzcwNTgwOTMzMzgxMDA4MTY3r3VuaWZvcm1fdXBkYXRlcscTaLI3NTcwNTY3NTE4OTYxMjY3MDOlZmFjZXPHFWi0MTA2Nzc5Njk0NjI2MzY4ODU0NzekdXVpZLQxMTA4MTY4Mjk1NDMzMTU1NjcwMa12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLMxNDgzMjExNDM2NTkyMTk2NDgxpXNwYWNlxxRoszU1NzE1NjgwMzEzNDY4MjM4MDOsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtNDgwODc0NDQzNDYyODE1MTg5MaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxVotDE2MTE2ODg0MTAzNjMwMjc3ODY2sWF0dHJpYnV0ZV91cGRhdGVyxxRoszQ0MDczMDU3NTcxNzQwMzg0NjGob3ZlcmRyYXfHFGizNDM2MjAyNzUzNTY4MTY1OTkyM691bmlmb3JtX3VwZGF0ZXLHFGizNDY3MjIwODgzNDYyNDY3MTU3N6VmYWNlc8cUaLMzNDE0ODgzNjg2MDAwNjg2OTYypHV1aWSzNDgwODc0NDQzNDYyODE1MTg5Ma12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAMDRQ81M+EIAwNFDmVloQwDA0UNnRqpDAMDRQwBg4EMAwNFDzTwLRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwDA1EPNTPhCAMDUQ5lZaEMAwNRDZ0aqQwDA1EMAYOBDAMDUQ808C0SPrHRyYW5zcGFyZW5jeccVaLQxMTI2ODIyNjQyNzc3OTQ0MzU1NqVzcGFjZccVaLQxMTgzMTk0OTIyODYxNTg4MjcwNax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIWxpbmVzZWdtZW50cy0xMjcwMDY2Njc3NTk4MzkxNjUxMKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxRoszY1MjkxMTExODQxOTM5MjY5NDixYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTM4MDI2MzIwMzY3Nzk0MzU2Mzeob3ZlcmRyYXfHFGizMjc3NDM1ODI5MzA0Njc0NjY5Mq91bmlmb3JtX3VwZGF0ZXLHFWi0MTA5NDgwNTcyOTc5MDgwOTE0MDalZmFjZXPHFGizNDM2MTE4MjkyMzY5OTU2MDQyN6R1dWlktDEyNzAwNjY2Nzc1OTgzOTE2NTEwrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAwNJDmhmMQgDA0kMAQDJDAMDSQ5o5j0MAwNJDM1PFQwDA0kPNbPtDrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAMDUQ5oZjEIAwNRDAEAyQwDA1EOaOY9DAMDUQzNTxUMAwNRDzWz7Q94AEKx0cmFuc3BhcmVuY3nHFGizMTcxMjUwODUyMjE3ODgwNDgxN6VzcGFjZccUaLM3MTkyMDc0ODkzMTM2MTE3NjA2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTU5Mjg0MzE4ODgxNjk2ODkwMTOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFGizMTMzMzc0MzA5MzU1MDQ5NDI1NqttYXJrZXJzcGFjZccVaLQxNDU2MzMwNTM3MTUwMjAyNDc3OLFhdHRyaWJ1dGVfdXBkYXRlcscUaLM5MjI3MjMyMzcxNjkzNTMxNDY0qG92ZXJkcmF3xxVotDE3MDg5MjUyOTI5NTQwODcxMTY5r3VuaWZvcm1fdXBkYXRlcscVaLQxMTQ2NTM3Mjc1ODA0ODEwNzQ2NaVmYWNlc8cVaLQxNTYzMzQ0NDY4NjczNTQ3Nzg3MqR1dWlkszU5Mjg0MzE4ODgxNjk2ODkwMTOtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHE2iyNzk3OTk3NTYxNTE3NDE0NjIypXNwYWNlxxVotDExODY1Nzg2MzE0NTc3MTk5MzM0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTQ1NTI1OTQ0MDM0OTE2OTY0MDipY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDEyOTU1OTE3NDM3OTMzNjM3NTY4sWF0dHJpYnV0ZV91cGRhdGVyxxRoszQzNTk4NDk2Mjg0MTMxNTQ4MDOob3ZlcmRyYXfHFGizODEzOTM3NjE4MzIxMjE5MjgyNK91bmlmb3JtX3VwZGF0ZXLHFWi0MTQwMjc0ODk4OTc4NTQ3OTgxOTClZmFjZXPHE2iyMjQwOTA2MjY3Mjc5NTAyMDI4pHV1aWSzNDU1MjU5NDQwMzQ5MTY5NjQwOK12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLM4NDk4NDM0ODczODAxMDMyNzI0pXNwYWNlxxRoszYwMDU1MjQ1ODAwMjkwNDExNDSsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTU1MDQyMzk4MTYzNjIwNjY1ODSpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAKBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccTaLIzMjg0MjUyODg1NzU2MTg2MjmxYXR0cmlidXRlX3VwZGF0ZXLHFGizMzY4NTA5ODEzNDc2MjE5Mjc5NKhvdmVyZHJhd8cUaLM2NzczOTg3OTUyMjcwMTcwMTUxr3VuaWZvcm1fdXBkYXRlcscUaLM0ODAxNTIwNDgxNjc0MDE2OTczpWZhY2VzxxVotDEwMjY4OTU3OTU3MzIzNjAwMTkzpHV1aWS0MTU1MDQyMzk4MTYzNjIwNjY1ODStdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXAADVQwAgEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAA1UMAACpC3gAQrHRyYW5zcGFyZW5jeccUaLM3MDEzNjMyMDk5NDA4Mjg2Njg1pXNwYWNlxxVotDExNDgxMzcyNzgyNzY0NDE0ODg2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTEyNzg5NDk4NDU5MDE1MTYwNTapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFWi0MTc1NzYwMDE2NzAwNTg2OTU5NjarbWFya2Vyc3BhY2XHFGizMTU1MjYzMDExNjg1ODY3NDIxN7FhdHRyaWJ1dGVfdXBkYXRlcscUaLMzMTczNzA4ODU1NDY5MDU0NjM2qG92ZXJkcmF3xxRoszUwNzU0MDQ0MDAzOTAxOTI4MjSvdW5pZm9ybV91cGRhdGVyxxRoszI1OTMzODM2Mzk0OTg4MTI5NjGlZmFjZXPHFGizMzM4NjY3MTAyMjkyNjcxMzA5M6R1dWlkszEyNzg5NDk4NDU5MDE1MTYwNTatdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHMBeNl67AAADAwPypscAAAMDA5/upwBSux8BWDq3AFK7HwKjGi8AAAMDA5/upwBSux8CqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHMBdWDp1Bg8C6Qdv5nkGDwLpB9iicQQisvEGS7ZxBCKy8QVK4fkGDwLpBWmSbQQisvEGtbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHSBcEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVo7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAClY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/r3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHYBcAwJQ+AMDvPgBAqD4AYAM/AMCUPgCgDz8AQKg+ACAbPwDAlD4AICc/AECoPgDgMj8AwJQ+AOA+PwBAqD4AoEo/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z6jcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMdIFwCAz0PNTPhCAAAAAACAz0OZWWhDAAAAAACAz0NnRqpDAAAAAACAz0MAYOBDAAAAAACAz0PNPAtEAAAAAACAz0PNPAtEAAAAAKlyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/j6x0cmFuc3BhcmVuY3nHFWi0MTE3MjQwNTQ2NzAwNzI2NDE1ODalc3BhY2XHFWi0MTQyMjIyNDI4NTM3MzYxMzQ4NzGsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTU1NDkwNzI4MzE5MzUxMTA3MTepY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszgxMzYxODgxNTM1Mzc2OTkzMjKxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTIzNzAyNzA2MzcwMDA1ODc5NDiob3ZlcmRyYXfHFGizNDU2NDYwODIzODg5NjExOTE3OK91bmlmb3JtX3VwZGF0ZXLHFWi0MTY3ODE2Mjk3MjEyNjc4MDY3MDmlZmFjZXPHFWi0MTc0NzU4MTg4MzY3NTAxNTIyMDakdXVpZLQxNTU0OTA3MjgzMTkzNTExMDcxN612ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLM0MTE0NTExOTE2MDc2NDU4MzI5pXNwYWNlxxVotDEzOTMwMjYyOTE3MzEzODU4NTg2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTk5MjA5MDA1NzMxNjg3ODc3MDGpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccVaLQxMTA0NzQ4MDg0MzI3MTk0NTgxObFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNTc5MTg0NzA1NTY3NTUwNDM0M6hvdmVyZHJhd8cUaLM2MTUzMzkzMjAwMjIwMzcyMTU2r3VuaWZvcm1fdXBkYXRlcscVaLQxNDczNTQ0NTkxODk3NTUyNTcxOKVmYWNlc8cUaLMyMTYzOTQyMjUyNDk3NzQyMDA4pHV1aWSzOTkyMDkwMDU3MzE2ODc4NzcwMa12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXmtnvQwCAE0Qz0wlEAIATRJq5G0QAgBNEAKAtRACAE0Rmhj9EAIATRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoF5rZ70MAABJEM9MJRAAAEkSauRtEAAASRACgLUQAABJEZoY/RAAAEkSPrHRyYW5zcGFyZW5jeccVaLQxMjg0MzQxNDU0Njk4MzU2MjcwM6VzcGFjZccTaLI3MzAzMjI1OTI4NzYzMTM0NzOsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1lv2xpbmVzZWdtZW50cy03NzEzNzMwOTI1ODU0ODgwMzOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccUaLM2MTU3MDI5MTk3MTI4NTg1MTU5sWF0dHJpYnV0ZV91cGRhdGVyxxRoszM5NjM5MzA4MTMzNTk5NjE0Njaob3ZlcmRyYXfHFWi0MTU4MzE3MTAwMDQ1OTY2NTMzNzavdW5pZm9ybV91cGRhdGVyxxVotDE0MjkwMTM4MDc0NTIxNzg4MzUwpWZhY2VzxxVotDE3MDY4MTQ4MzYxOTU5NDg2NjU2pHV1aWSyNzcxMzczMDkyNTg1NDg4MDMzrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAgEVEzUz4QgCARUSZWWhDAIBFRGdGqkMAgEVEAGDgQwCARUTNPAtErXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAABERM1M+EIAAEREmVloQwAARERnRqpDAABERABg4EMAAEREzTwLRI+sdHJhbnNwYXJlbmN5xxRoszM4MTA3ODM1NjY5MDYwNTUwNjOlc3BhY2XHFGizMjU3MDcxMjc0MDczMjE5MTA2Mqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy05NTM5OTQ4OTQ2MDM0OTc4MDk1qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTA0ODc5MTg4OTUwODUxOTk5MTCxYXR0cmlidXRlX3VwZGF0ZXLHFGizMTE5NTYzOTE2NzE4Njc0MDU5OahvdmVyZHJhd8cVaLQxMTIwMTU3MDIxNjc5MTczOTI4M691bmlmb3JtX3VwZGF0ZXLHFWi0MTQ1MDUyMDY2Mzc4MjM0Mjk1MjKlZmFjZXPHFGizNjQ0MzI0NDcyNDU3NzY0MjY2OaR1dWlkszk1Mzk5NDg5NDYwMzQ5NzgwOTWtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAABNEAOAARAAAE0RmxhJEAAATRM2sJEQAABNENJM2RAAAE0Stc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcz891DAAASRADgAEQAABJEZsYSRAAAEkTNrCREAAASRDSTNkQAABJEj6x0cmFuc3BhcmVuY3nHFGizODg2NDkyOTE3NzEyNjMzNTc4NaVzcGFjZccVaLQxNTIyMTgwNDQ2NDA4MTc4NzU2Oax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIWxpbmVzZWdtZW50cy0xNzk3MTA4NTAyNzY0NTI3OTk5MKljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxRoszg5MzExMzE3NzI5OTI5MzI3OTWxYXR0cmlidXRlX3VwZGF0ZXLHFGizMzk4ODA4OTQ4MjU3MjQwMzU0N6hvdmVyZHJhd8cVaLQxNDA1MjcyMzEzODAzNjg4ODI3OK91bmlmb3JtX3VwZGF0ZXLHFGizNDQzOTg2OTI5OTQzMDc5MDQ4MqVmYWNlc8cUaLM5Nzc1NTg3NTk2OTk4OTEzMzQ0pHV1aWS0MTc5NzEwODUwMjc2NDUyNzk5OTCtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARUSaGYxCAABFRABAMkMAAEVEmjmPQwAARUQzU8VDAABFRM1s+0Otc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAAEREmhmMQgAAREQAQDJDAABERJo5j0MAAEREM1PFQwAARETNbPtDj6x0cmFuc3BhcmVuY3nHFGizNTQ2NzU1Mjk0OTI2MDUzNzE2MqVzcGFjZccVaLQxNTQwOTEyOTY2MjUwMDAxNDEyNqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy0zNjM5ODc3MzM2MDY3NjgwMTAxqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTQ2MTc3NjM1NzI1NjMzMzY1MzixYXR0cmlidXRlX3VwZGF0ZXLHFGizODA5NDg3MTYzNTIxMTgwODQ5MKhvdmVyZHJhd8cVaLQxNzM3Njc4NTg0NjA4MzgxMjY1N691bmlmb3JtX3VwZGF0ZXLHFGizNjY5MTQwOTI4NTgyMzAxNjM2NqVmYWNlc8cUaLM0NzI0NTk4NjU0NTk4NjQ4NjAwpHV1aWSzMzYzOTg3NzMzNjA2NzY4MDEwMa12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAIEREAAASRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAMDUQwAAEkSPrHRyYW5zcGFyZW5jeccVaLQxNzM1NTI2MDA2MjY5MjY5MzEzN6VzcGFjZccVaLQxMzEyMTE5MjQ5MTEzNzk5NjUwNqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy0zNTA5MTY1OTQ1ODAzNjY4NzgzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTAzMzk2NDEwMjAzNDI5ODA3OTaxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTE3NDU5ODAxMDQyNDI1NTMzMzmob3ZlcmRyYXfHFGizNjM3MDA4NTkzNTQ3MDM0NjMxNK91bmlmb3JtX3VwZGF0ZXLHFGizNjk4MDQ2NjMyMzA0OTAxNzE5OKVmYWNlc8cUaLM5NTI1NDgwNjE3NDU5NTk3MjU0pHV1aWSzMzUwOTE2NTk0NTgwMzY2ODc4M612ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAAEREACASRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAABERAAAKkLeABCsdHJhbnNwYXJlbmN5xxVotDE4MDczNjUyOTU5NTc3MTAwODI2pXNwYWNlxxVotDEwMzcxMDY1ODc0NDI4NTM3Mjc0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbl0ZXh0LTEzNzc2MDY4NzgzNTMzMzc4MjI0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxRoszI0NzgyNTUxMDg1NTg0MDc4NTirbWFya2Vyc3BhY2XHFGizMjIyNzc5MjQ1MjA0NTUxMTAyM7FhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMDg4OTc1MTEzNDY5Nzg5NTUwM6hvdmVyZHJhd8cVaLQxMDAxMjU5MzMxMTU4NjA5NjY3Oa91bmlmb3JtX3VwZGF0ZXLHFGizOTUwMjc0NDQ2NTAzMjYwNjgwMKVmYWNlc8cUaLM3OTM0OTAwOTE1OTk5MzI1ODk5pHV1aWS0MTM3NzYwNjg3ODM1MzMzNzgyMjStdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizMTkwMDY4MzE3OTIyMTQzMTgzNKVzcGFjZccUaLM0OTMyMTcxNDg0NDIwNDgyMjUyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTI0NjQ2NjMwNzY4NDI2MzkzNDKpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDExMDQzNzg3NTk4NzQxMDcwMDcwsWF0dHJpYnV0ZV91cGRhdGVyxxVotDEzNzU4MzEzNzE4NzcwNDgxMDI4qG92ZXJkcmF3xxRoszg3NDEwMDc5MDUxNTk0NTU2MjKvdW5pZm9ybV91cGRhdGVyxxRoszY0Nzc2NzgxNzMxNzg3MjY5ODWlZmFjZXPHFGizNzMwOTExMjYwMTQ0ODk1OTk0N6R1dWlkszI0NjQ2NjMwNzY4NDI2MzkzNDKtdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAX3gAQrHRyYW5zcGFyZW5jeccUaLMxMzE3NDI3MjA0MjY4ODY2NTI2pXNwYWNlxxRoszkyODAzNzA2ODIyNzU4MTIyMTmsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luXRleHQtMTM0Nzc5MDcxNTI2ODM3MzEwNTOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFGizNTM5MjYyMTA3Mjg3NDg4OTA0NKttYXJrZXJzcGFjZccUaLM2NTIwOTM1NTk3OTcxODMxNzUwsWF0dHJpYnV0ZV91cGRhdGVyxxVotDE1NDg2NDE1NzE5NzQ4NjAxOTAyqG92ZXJkcmF3xxVotDE2Njk2MDEyODM4MzQxNzgzNjI2r3VuaWZvcm1fdXBkYXRlcscVaLQxNzQ5MzA5MzEyODYzODcxNjA3OaVmYWNlc8cUaLM3MzQyMzU2MzgyNzc0NTM1MTk3pHV1aWS0MTM0Nzc5MDcxNTI2ODM3MzEwNTOtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFWi0MTI2MTczNDY2ODgzOTIyMjE2Mzelc3BhY2XHFWi0MTA2Nzk3MzYwNTU5MTU3NTM4NDisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtNjAwNjMxNzc3OTcxMDM5MDMzOaljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+pb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFGizOTQ3MzY2MDk2MzIwNDkzMDE4NLFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxODM5NTI3MjkxODIxMzc0NDQxM6hvdmVyZHJhd8cUaLM0MjY1Mjk2NzA5NTM5NjIwMzE4r3VuaWZvcm1fdXBkYXRlcscVaLQxNzQ2Njk4NzQ4NDE3OTc0OTY2M6VmYWNlc8cUaLM5NDk3NDUxNTE0ODM4MDU2MzY2pHV1aWSzNjAwNjMxNzc3OTcxMDM5MDMzOa12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABeOrHRyYW5zcGFyZW5jeccVaLQxMTY2Nzk3NDQzMzgwNDg1MTIyM6VzcGFjZccVaLQxMzE1ODA2OTM1MzA4NTI5MTc4Nax2ZXJ0ZXhhcnJheXOCp25vcm1hbHOCq3R5cGVfbGVuZ3RoA6RmbGF0x2AXAADA/wAAwP8AAMD/AAAAAAAAAAAAAIA/AAAAAAAAAAD//38/AAAAAAAAAAD//38/AADA/wAAwP8AAMD/AAAAAAAAAAD//38/AAAAAAAAAAD//38/AAAAAAAAAAAAAIA/qHBvc2l0aW9ugqt0eXBlX2xlbmd0aAOkZmxhdMdgFwCA1UMAADBCAAAAAAAAREQAADBCAAAAAAAAREQAABJEAAAAAACA1UMAABJEAAAAAACA1UMAADBCAAAAAM1s3kMAADBCAAAAAM1s3kP//41CAAAAAACA1UP//41CAAAAAKRuYW1lt21lc2gtNjg5MDYzOTIwMzcxOTc0MDIzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAWvmludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcsOpYmFja2xpZ2h0ygAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAyEIAAIA/p2RpZmZ1c2XHDBfNzMw+zczMPs3MzD6qY29sb3JyYW5nZcOnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAAKhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKdwYXR0ZXJuwqxub3JtYWxtYXRyaXjHJBcAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+idXbXFwAAAAAAAAAAp3NoYWRpbmfCqHNwZWN1bGFyxwwXzcxMPs3MTD7NzEw+p3BpY2tpbmfCqW9iamVjdF9pZACtdW5pZm9ybV9jb2xvctgXAAAAAAAAAAAAAAAAzcxMPqtkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LCqXNoaW5pbmVzc8pCAAAAqGNvbG9ybWFww6d2aXNpYmxlxxVotDEyMjM4Njc1MjkzNzgwMTkyNDQ4sWF0dHJpYnV0ZV91cGRhdGVyxxRoszEzOTk3NTc2ODk4Nzc2NDg1ODmob3ZlcmRyYXfHFWi0MTEyNjIxNTkwOTkyNzEwMjQ5NDSvdW5pZm9ybV91cGRhdGVyxxVotDExNjE5MDkzMzAzMzg1NjUwMjgwpWZhY2VzxxVotDE2NTE1NDcxMTM0NjcxNzEwNDExpHV1aWSyNjg5MDYzOTIwMzcxOTc0MDIzrXZlcnRleF9zb3VyY2XaFCQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMyBub3JtYWxzOwp2ZWMzIGdldF9ub3JtYWxzKCl7cmV0dXJuIG5vcm1hbHM7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBhdHRlcm47CmJvb2wgZ2V0X3BhdHRlcm4oKXtyZXR1cm4gcGF0dGVybjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBmbG9hdCBiYWNrbGlnaHQ7CmZsb2F0IGdldF9iYWNrbGlnaHQoKXtyZXR1cm4gYmFja2xpZ2h0O30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gbWF0MyBub3JtYWxtYXRyaXg7Cm1hdDMgZ2V0X25vcm1hbG1hdHJpeCgpe3JldHVybiBub3JtYWxtYXRyaXg7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBjb2xvcjsKYm9vbCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIHZlYzQgdW5pZm9ybV9jb2xvcjsKdmVjNCBnZXRfdW5pZm9ybV9jb2xvcigpe3JldHVybiB1bmlmb3JtX2NvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KCgoKb3V0IHZlYzIgZnJhZ191djsKb3V0IHZlYzMgb19ub3JtYWw7Cm91dCB2ZWMzIG9fY2FtZGlyOwpvdXQgdmVjMyBvX2xpZ2h0ZGlyOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQoZmxvYXQgdil7cmV0dXJuIHZlYzQodiwgMC4wLCAwLjAsIDAuMCk7fQp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgdmVydGV4X2NvbG9yKHZlYzMgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcih2ZWM0IGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihmbG9hdCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiB2ZWM0KHZhbHVlLCAwLjAsIDAuMCwgMC4wKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0KfQoKdm9pZCByZW5kZXIodmVjNCBwb3NpdGlvbl93b3JsZCwgdmVjMyBub3JtYWwsIG1hdDQgdmlldywgbWF0NCBwcm9qZWN0aW9uLCB2ZWMzIGxpZ2h0cG9zaXRpb24pCnsKICAgIC8vIG5vcm1hbCBpbiB3b3JsZCBzcGFjZQogICAgb19ub3JtYWwgPSBnZXRfbm9ybWFsbWF0cml4KCkgKiBub3JtYWw7CiAgICAvLyBwb3NpdGlvbiBpbiB2aWV3IHNwYWNlIChhcyBzZWVuIGZyb20gY2FtZXJhKQogICAgdmVjNCB2aWV3X3BvcyA9IHZpZXcgKiBwb3NpdGlvbl93b3JsZDsKICAgIC8vIHBvc2l0aW9uIGluIGNsaXAgc3BhY2UgKHcvIGRlcHRoKQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uICogdmlld19wb3M7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKICAgIC8vIGRpcmVjdGlvbiB0byBsaWdodAogICAgb19saWdodGRpciA9IG5vcm1hbGl6ZSh2aWV3KnZlYzQobGlnaHRwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXo7CiAgICAvLyBkaXJlY3Rpb24gdG8gY2FtZXJhCiAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8KICAgIC8vIG5vcm1hbGl6ZSh2aWV3KnZlYzQoZXllcG9zaXRpb24sIDEuMCkgLSB2aWV3X3BvcykueHl6CiAgICAvLyAoYnkgZGVmaW5pdGlvbiBgdmlldyAqIGV5ZXBvc2l0aW9uID0gMGApCiAgICBvX2NhbWRpciA9IG5vcm1hbGl6ZSgtdmlld19wb3MpLnh5ejsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICAvLyBnZXRfKiBnZXRzIHRoZSBnbG9iYWwgaW5wdXRzICh1bmlmb3JtLCBzYW1wbGVyLCBwb3NpdGlvbiBhcnJheSkKICAgIC8vIHRob3NlIGZ1bmN0aW9ucyB3aWxsIGdldCBpbnNlcnRlZCBieSB0aGUgc2hhZGVyIGNyZWF0aW9uIHBpcGVsaW5lCiAgICB2ZWMzIHZlcnRleF9wb3NpdGlvbiA9IHRvdmVjMyhnZXRfcG9zaXRpb24oKSk7CiAgICBpZiAoaXNuYW4odmVydGV4X3Bvc2l0aW9uLnopKSB7CiAgICAgICAgdmVydGV4X3Bvc2l0aW9uLnogPSAwLjA7CiAgICB9CiAgICB2ZWM0IHBvc2l0aW9uX3dvcmxkID0gbW9kZWwgKiB2ZWM0KHZlcnRleF9wb3NpdGlvbiwgMSk7CgogICAgcmVuZGVyKHBvc2l0aW9uX3dvcmxkLCBnZXRfbm9ybWFscygpLCB2aWV3LCBwcm9qZWN0aW9uLCBnZXRfbGlnaHRwb3NpdGlvbigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXYgPSB2ZWMyKDEuMCAtIGZyYWdfdXYueSwgZnJhZ191di54KTsKICAgIGZyYWdfY29sb3IgPSB2ZXJ0ZXhfY29sb3IoZ2V0X2NvbG9yKCksIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9WZXJ0ZXhJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaFRojdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gZmxvYXQgYmFja2xpZ2h0OwpmbG9hdCBnZXRfYmFja2xpZ2h0KCl7cmV0dXJuIGJhY2tsaWdodDt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IHVuaWZvcm1fY29sb3I7CnZlYzQgZ2V0X3VuaWZvcm1fY29sb3IoKXtyZXR1cm4gdW5pZm9ybV9jb2xvcjt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgppbiB2ZWMyIGZyYWdfdXY7CmluIHZlYzQgZnJhZ19jb2xvcjsKZmxhdCBpbiBpbnQgc2FtcGxlX2ZyYWdfY29sb3I7CgppbiB2ZWMzIG9fbm9ybWFsOwppbiB2ZWMzIG9fY2FtZGlyOwppbiB2ZWMzIG9fbGlnaHRkaXI7Cgp2ZWMzIGJsaW5ucGhvbmcodmVjMyBOLCB2ZWMzIFYsIHZlYzMgTCwgdmVjMyBjb2xvcil7CiAgICBmbG9hdCBkaWZmX2NvZWZmID0gbWF4KGRvdChMLCBOKSwgMC4wKTsKCiAgICAvLyBzcGVjdWxhciBjb2VmZmljaWVudAogICAgdmVjMyBIID0gbm9ybWFsaXplKEwgKyBWKTsKCiAgICBmbG9hdCBzcGVjX2NvZWZmID0gcG93KG1heChkb3QoSCwgTiksIDAuMCksIGdldF9zaGluaW5lc3MoKSk7CiAgICBpZiAoZGlmZl9jb2VmZiA8PSAwLjApCiAgICAgICAgc3BlY19jb2VmZiA9IDAuMDsKICAgIC8vIGZpbmFsIGxpZ2h0aW5nIG1vZGVsCiAgICByZXR1cm4gdmVjMygKICAgICAgICBnZXRfZGlmZnVzZSgpICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBnZXRfc3BlY3VsYXIoKSAqIHNwZWNfY29lZmYKICAgICk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzMgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjNCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBjb2xvcjsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBmcmFnX2NvbG9yOyAgLy8gY29sb3Igbm90IGluIHVuaWZvcm0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgaWYgKGdldF9wYXR0ZXJuKCkpIHsKICAgICAgICB2ZWMyIHNpemUgPSB2ZWMyKHRleHR1cmVTaXplKGNvbG9yLCAwKSk7CiAgICAgICAgdmVjMiBwb3MgPSBnbF9GcmFnQ29vcmQueHk7CiAgICAgICAgcmV0dXJuIHRleGVsRmV0Y2goY29sb3IsIGl2ZWMyKG1vZChwb3MueCwgc2l6ZS54KSwgbW9kKHBvcy55LCBzaXplLnkpKSwgMCk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7CiAgICB9Cn0KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCkpIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcChmcmFnX2NvbG9yLngsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZyYWdfY29sb3I7CiAgICB9Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCB2YWx1ZXMsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGZsb2F0IHZhbHVlID0gdGV4dHVyZSh2YWx1ZXMsIHV2KS54OwogICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgdmVjNCByZWFsX2NvbG9yID0gZ2V0X2NvbG9yKHVuaWZvcm1fY29sb3IsIGZyYWdfdXYsIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKICAgIHZlYzMgc2hhZGVkX2NvbG9yID0gcmVhbF9jb2xvci5yZ2I7CgogICAgaWYoZ2V0X3NoYWRpbmcoKSl7CiAgICAgICAgdmVjMyBMID0gbm9ybWFsaXplKG9fbGlnaHRkaXIpOwogICAgICAgIHZlYzMgTiA9IG5vcm1hbGl6ZShvX25vcm1hbCk7CiAgICAgICAgdmVjMyBsaWdodDEgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCBMLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgdmVjMyBsaWdodDIgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCAtTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHNoYWRlZF9jb2xvciA9IGdldF9hbWJpZW50KCkgKiByZWFsX2NvbG9yLnJnYiArIGxpZ2h0MSArIGdldF9iYWNrbGlnaHQoKSAqIGxpZ2h0MjsKICAgIH0KCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChyZWFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHJlYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IHZlYzQoc2hhZGVkX2NvbG9yLCByZWFsX2NvbG9yLmEpOwp9Cq9iYWNrZ3JvdW5kY29sb3LHFGizNjc1NjgxNDQ1MDE1MDU5NjgzMalwaXhlbGFyZWHHFWi0MTIyMzM2NjA4ODg1NjczNTIyMDemY2FtZXJhxxVotDEyOTgzODM1NDMzODI1MzEwOTIxpHV1aWSzMTI5NDc0ODI1ODMxODk4OTQ2NqtjYW0zZF9zdGF0ZcCqY2xlYXJzY2VuZcKoY2hpbGRyZW6Riad2aXNpYmxlxxVotDE3MDAwMDU2OTYxNDEyMTY1ODMzpXBsb3RzkY6sdHJhbnNwYXJlbmN5xxVotDEzNzg3MzMyNzMyMDk1ODIzMjQ4pXNwYWNlxxVotDEyNzY3NDE1NDk3OTAzODYzNjk2rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0yAPIFwAAAAAAAIA/zczMPQAAgD/NzEw+AACAP5qZmT4AAIA/zczMPgAAgD8AAAA/AACAP5qZGT8AAIA/MzMzPwAAgD/NzEw/AACAP2ZmZj8AAIA/AACAPwAAgD8AAAAAZmZmP83MzD1mZmY/zcxMPmZmZj+amZk+ZmZmP83MzD5mZmY/AAAAP2ZmZj+amRk/ZmZmPzMzMz9mZmY/zcxMP2ZmZj9mZmY/ZmZmPwAAgD9mZmY/AAAAAM3MTD/NzMw9zcxMP83MTD7NzEw/mpmZPs3MTD/NzMw+zcxMPwAAAD/NzEw/mpkZP83MTD8zMzM/zcxMP83MTD/NzEw/ZmZmP83MTD8AAIA/zcxMPwAAAAAzMzM/zczMPTMzMz/NzEw+MzMzP5qZmT4zMzM/zczMPjMzMz8AAAA/MzMzP5qZGT8zMzM/MzMzPzMzMz/NzEw/MzMzP2ZmZj8zMzM/AACAPzMzMz8AAAAAmpkZP83MzD2amRk/zcxMPpqZGT+amZk+mpkZP83MzD6amRk/AAAAP5qZGT+amRk/mpkZPzMzMz+amRk/zcxMP5qZGT9mZmY/mpkZPwAAgD+amRk/AAAAAAAAAD/NzMw9AAAAP83MTD4AAAA/mpmZPgAAAD/NzMw+AAAAPwAAAD8AAAA/mpkZPwAAAD8zMzM/AAAAP83MTD8AAAA/ZmZmPwAAAD8AAIA/AAAAPwAAAADNzMw+zczMPc3MzD7NzEw+zczMPpqZmT7NzMw+zczMPs3MzD4AAAA/zczMPpqZGT/NzMw+MzMzP83MzD7NzEw/zczMPmZmZj/NzMw+AACAP83MzD4AAAAAmpmZPs3MzD2amZk+zcxMPpqZmT6amZk+mpmZPs3MzD6amZk+AAAAP5qZmT6amRk/mpmZPjMzMz+amZk+zcxMP5qZmT5mZmY/mpmZPgAAgD+amZk+AAAAAM3MTD7NzMw9zcxMPs3MTD7NzEw+mpmZPs3MTD7NzMw+zcxMPgAAAD/NzEw+mpkZP83MTD4zMzM/zcxMPs3MTD/NzEw+ZmZmP83MTD4AAIA/zcxMPgAAAADNzMw9zczMPc3MzD3NzEw+zczMPZqZmT7NzMw9zczMPs3MzD0AAAA/zczMPZqZGT/NzMw9MzMzP83MzD3NzEw/zczMPWZmZj/NzMw9AACAP83MzD0AAAAAAAAAAM3MzD0AAAAAzcxMPgAAAACamZk+AAAAAM3MzD4AAAAAAAAAPwAAAACamRk/AAAAADMzMz8AAAAAzcxMPwAAAABmZmY/AAAAAAAAgD8AAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAOkZmxhdMgFrBcAAAA/AAAAPwAAAAAAAMA/AAAAPwAAAAAAACBAAAAAPwAAAAAAAGBAAAAAPwAAAAAAAJBAAAAAPwAAAAAAALBAAAAAPwAAAAAAANBAAAAAPwAAAAAAAPBAAAAAPwAAAAAAAAhBAAAAPwAAAAAAABhBAAAAPwAAAAAAAChBAAAAPwAAAAAAAAA/AADAPwAAAAAAAMA/AADAPwAAAAAAACBAAADAPwAAAAAAAGBAAADAPwAAAAAAAJBAAADAPwAAAAAAALBAAADAPwAAAAAAANBAAADAPwAAAAAAAPBAAADAPwAAAAAAAAhBAADAPwAAAAAAABhBAADAPwAAAAAAAChBAADAPwAAAAAAAAA/AAAgQAAAAAAAAMA/AAAgQAAAAAAAACBAAAAgQAAAAAAAAGBAAAAgQAAAAAAAAJBAAAAgQAAAAAAAALBAAAAgQAAAAAAAANBAAAAgQAAAAAAAAPBAAAAgQAAAAAAAAAhBAAAgQAAAAAAAABhBAAAgQAAAAAAAAChBAAAgQAAAAAAAAAA/AABgQAAAAAAAAMA/AABgQAAAAAAAACBAAABgQAAAAAAAAGBAAABgQAAAAAAAAJBAAABgQAAAAAAAALBAAABgQAAAAAAAANBAAABgQAAAAAAAAPBAAABgQAAAAAAAAAhBAABgQAAAAAAAABhBAABgQAAAAAAAAChBAABgQAAAAAAAAAA/AACQQAAAAAAAAMA/AACQQAAAAAAAACBAAACQQAAAAAAAAGBAAACQQAAAAAAAAJBAAACQQAAAAAAAALBAAACQQAAAAAAAANBAAACQQAAAAAAAAPBAAACQQAAAAAAAAAhBAACQQAAAAAAAABhBAACQQAAAAAAAAChBAACQQAAAAAAAAAA/AACwQAAAAAAAAMA/AACwQAAAAAAAACBAAACwQAAAAAAAAGBAAACwQAAAAAAAAJBAAACwQAAAAAAAALBAAACwQAAAAAAAANBAAACwQAAAAAAAAPBAAACwQAAAAAAAAAhBAACwQAAAAAAAABhBAACwQAAAAAAAAChBAACwQAAAAAAAAAA/AADQQAAAAAAAAMA/AADQQAAAAAAAACBAAADQQAAAAAAAAGBAAADQQAAAAAAAAJBAAADQQAAAAAAAALBAAADQQAAAAAAAANBAAADQQAAAAAAAAPBAAADQQAAAAAAAAAhBAADQQAAAAAAAABhBAADQQAAAAAAAAChBAADQQAAAAAAAAAA/AADwQAAAAAAAAMA/AADwQAAAAAAAACBAAADwQAAAAAAAAGBAAADwQAAAAAAAAJBAAADwQAAAAAAAALBAAADwQAAAAAAAANBAAADwQAAAAAAAAPBAAADwQAAAAAAAAAhBAADwQAAAAAAAABhBAADwQAAAAAAAAChBAADwQAAAAAAAAAA/AAAIQQAAAAAAAMA/AAAIQQAAAAAAACBAAAAIQQAAAAAAAGBAAAAIQQAAAAAAAJBAAAAIQQAAAAAAALBAAAAIQQAAAAAAANBAAAAIQQAAAAAAAPBAAAAIQQAAAAAAAAhBAAAIQQAAAAAAABhBAAAIQQAAAAAAAChBAAAIQQAAAAAAAAA/AAAYQQAAAAAAAMA/AAAYQQAAAAAAACBAAAAYQQAAAAAAAGBAAAAYQQAAAAAAAJBAAAAYQQAAAAAAALBAAAAYQQAAAAAAANBAAAAYQQAAAAAAAPBAAAAYQQAAAAAAAAhBAAAYQQAAAAAAABhBAAAYQQAAAAAAAChBAAAYQQAAAAAAAAA/AAAoQQAAAAAAAMA/AAAoQQAAAAAAACBAAAAoQQAAAAAAAGBAAAAoQQAAAAAAAJBAAAAoQQAAAAAAALBAAAAoQQAAAAAAANBAAAAoQQAAAAAAAPBAAAAoQQAAAAAAAAhBAAAoQQAAAAAAABhBAAAoQQAAAAAAAChBAAAoQQAAAACkbmFtZbxoZWF0bWFwLTEwODkzMDc3MDc2OTMzODYwNDQ5qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAWvmludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcsOpYmFja2xpZ2h0ygAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2RpZmZ1c2XHDBcAAAAAAAAAAAAAAACqY29sb3JyYW5nZdcXvLyPO11EdD+nbG93Y2xpcNgXwLSIPhO2nzsVqag+AACAP6hoaWdoY2xpcNgXgEV+P+j5Zz/1YxM+AACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKdwYXR0ZXJuwqxub3JtYWxtYXRyaXjHJBcAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+nc2hhZGluZ8Koc3BlY3VsYXLHDBcAAAAAAAAAAAAAAACnbm9ybWFsc8cMFwAAAAAAAAAAAAAAAKdwaWNraW5nwqlvYmplY3RfaWQArXVuaWZvcm1fY29sb3KKqW1pbkZpbHRlcq1OZWFyZXN0RmlsdGVyqmFuaXNvdHJvcHnKP4AAAKltYWdGaWx0ZXKtTmVhcmVzdEZpbHRlcqV3cmFwU7NDbGFtcFRvRWRnZVdyYXBwaW5npGRhdGHIAZAX6jCjPRXmIj9xh5U+aP/zPBrohT0DzOk+l7PIPQTIHz9zwd08DG0SP2mgGD8ScW0/wr8hPsTUDj+hbwQ/CBBFPwg9ET9vHYc+39U1P+QmND/shsc+pwdwPyZxlj6j714/Khf4PiAAuz6HLjU/2UCtPVL58z5rT3w9ydxPP4Kl6T4NwdA+YEAzP+MO3D6timk/v/JaP2rf4D7J6T4/Yhd+PmGaGj75HxA9NaC6PVByHD50H+M+jiNfP4ONvT53ID0/6qr/PiRgUT+dB4U+MR82PwD78D0MBcY9NBY1Pwxebj+fYB8/whAVPyQ/Oz8xRDs/jppgP42UKz9dRHQ/U5wLP/kYkT5N68U8hI1CP8LRBD5dmgU/QoTTPlaSHD50V6o+hYofP3FbTD+REgU/glUNP25ygz4vORU/L2Q5P1sPsj6gkw8/GlYhP4tjhj4NtEk+0ajYPj5uFz+jnFc/a9RDPE0kSD//msI+iiIcPrwnxz4OoC0+4XcYP2MaGz+8vI874CoXP+4GaD/JyKE+Z7vxPax0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemXXFQoAAAAKAAAApXdyYXBUs0NsYW1wVG9FZGdlV3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvcsKpc2hpbmluZXNzygAAAACoY29sb3JtYXCJqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9weco/gAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOzQ2xhbXBUb0VkZ2VXcmFwcGluZ6RkYXRhyBAAF8C0iD4Ttp87FamoPgAAgD8leok+Sl4dPBa9qz4AAIA/GjaKPrKdbzw6ya4+AACAP33oij5oXaM8Ps2xPgAAgD9xkYs+f2nRPJvItD4AAIA/sTCMPgADAT2Vu7c+AACAP4LGjD7XoRo9YaW6PgAAgD/BUo0+deg0PSOGvT4AAIA/TtWNPoM1Tj23XcA+AACAP0hOjj7/s2Y9dyvDPgAAgD+yvY4+wYt+PWPvxT4AAIA/RiOPPprtij1Yqcg+AACAPyh/jz6nW5Y981jLPgAAgD9X0Y8+/pmhPRH+zT4AAIA/sRmQPvevrD2RmNA+AACAP1hYkD7Porc9DyjTPgAAgD8qjZA+xHfCPWms1T4AAIA/SriQPo8zzT1bJdg+AACAP5TZkD5J2Nc95pLaPgAAgD9O8ZA+nGniPaX03D4AAIA/Mv+QPqPp7D13St8+AACAP2QDkT7vWfc9OpThPgAAgD/j/ZA+TN4APszR4z4AAIA/0O6QPlcJBj7rAuY+AACAPyzWkD6dLgs+lSfoPgAAgD/2s5A+6E4QPqs/6j4AAIA/UYiQPvVpFT4KS+w+AACAP35TkD6NgBo+kEnuPgAAgD88FZA+85IfPh078D4AAIA/7s2PPiehJD7RH/I+AACAP5V9jz5tqyk+jPfzPgAAgD9TJI8+gbEuPivC9T4AAIA/SMKOPqezMz7Qf/c+AACAP5dXjj4gsjg+WTD5PgAAgD+C5I0+aaw9PunT+j4AAIA/TWmNPsKiQj6havw+AACAP9bljD4tlUc+XvT9PgAAgD+BWow+qYNMPkNx/z4AAIA/cceLPrFtUT7KcAA/AACAPwotiz6HU1Y+liIBPwAAgD9ui4o+5zRbPinOAT8AAIA/veKJPtMRYD6jcwI/AACAPxoziT4H6mQ+9RIDPwAAgD8sfYg+hL1pPmCsAz8AAIA/FsGHPgWMbj7VPwQ/AACAP9b+hj6KVXM+ls0EPwAAgD/0NoY+0hl4PpNVBT8AAIA/kGmFPh/ZfD4O2AU/AACAPw+XhD51yYA+GVUGPwAAgD+2v4M+eSODPtXMBj8AAIA/5+OCPt16hT51Pwc/AACAP8UDgj5fz4c+96wHPwAAgD+SH4E+/yCKPpAVCD8AAIA/tTeAPr1vjD5weQg/AACAP5qYfj6Zu44+qdgIPwAAgD8GvHw+cQSRPm4zCT8AAIA/8dl6PiNKkz7fiQk/AACAP53yeD4VjZU+L9wJPwAAgD/VBnc+4syXPl4qCj8AAIA/Hhd1PqsJmj7BdAo/AACAP7wjcz5wQ5w+VrsKPwAAgD+6LXE+U3qePmH+Cj8AAIA/oDVvPhCuoD7zPQs/AACAP/M7bT7K3qI+PnoLPwAAgD+zQGs+gAylPmOzCz8AAIA/7URpPlQ3pz6F6Qs/AACAP6FIZz5GX6k+xRwMPwAAgD+YTGU+VYSrPjRNDD8AAIA/FlFjPoOmrT4Deww/AACAP59WYT7vxa8+VaYMPwAAgD95XV8+m+KxPkrPDD8AAIA/J2ZdPmX8sz7k9Qw/AACAP+9wWz6yE7Y+ZRoNPwAAgD8Tflk+Xyi4Pt48DT8AAIA/GY5XPm06uj5fXQ0/AACAP0WhVT79Sbw+HHwNPwAAgD/Yt1M+EVe+PhOZDT8AAIA/GNJRPshhwD5XtA0/AACAP7/vTz4jasI+B84NPwAAgD+ZEU4+ZXDEPjbmDT8AAIA/YTdMPm10xj4F/Q0/AACAPxdhSj5cdsg+cxIOPwAAgD+Gj0g+MnbKPpEmDj8AAIA/J8JGPhB0zD6COQ4/AACAPzz5RD4ZcM4+RUsOPwAAgD/GNEM+TWrQPtlbDj8AAIA/CHVBPsxi0j5haw4/AACAP3y5Pz6WWdQ+3XkOPwAAgD9kAj4+z07WPl2HDj8AAIA/wk88PpZC2D7ikw4/AACAP1GhOj7KNNo+a58OPwAAgD/P9jg+ryXcPgiqDj8AAIA/wlA3PkQV3j68sw4/AACAP2CuNT6KA+A+lLwOPwAAgD+qDzQ+w/DhPnLEDj8AAIA/4nQyPs/c4z51yw4/AACAP0DdMD7vx+U+jdEOPwAAgD/DSC8+A7LnPsvWDj8AAIA/rrctPiyb6T4O2w4/AACAPzkpLD6Mg+s+dt4OPwAAgD+mnSo+I2vtPuPgDj8AAIA/bhQpPhFS7z5U4g4/AACAP1CNJz5YOPE+yuIOPwAAgD+NCCY+9x3zPkPiDj8AAIA/XoUkPjID9T6g4A4/AACAP8ADIz7F5/Y+390OPwAAgD+2gyE+FMz4PvHZDj8AAIA/PgUgPv+v+j7l1A4/AACAP9OHHj6Gk/w+ms4OPwAAgD90Cx0+yXb+PgDHDj8AAIA/ZJAbPuQsAD8Gvg4/AACAP2EWGj5UHgE/vLMOPwAAgD+unRg+oQ8CP/CnDj8AAIA/SiYXPu8AAz/Dmg4/AACAPzawFT4b8gM/9IsOPwAAgD+0OxQ+R+MEP4F7Dj8AAIA/gsgSPnTUBT9ZaQ4/AACAP2lXET6gxQY/bVUOPwAAgD+r6A8+u7YHP6s/Dj8AAIA/jXwOPuenCD8CKA4/AACAP5QTDT4TmQk/Ug4OPwAAgD+Krgs+UIoKP5nyDT8AAIA/vk4KPnx7Cz/Y1A0/AACAP+3zCD7KbAw/3bQNPwAAgD9mnwc+B14NP5aSDT8AAIA/9FEGPmZPDj/0bQ0/AACAPygNBT7EQA8/9kYNPwAAgD+J0QM+IzIQP1gdDT8AAIA/MKECPpIjET898Qw/AACAP+V8AT4BFRI/YcIMPwAAgD9JZwA+gQYTP+aQDD8AAIA/zsL+PfD3Ez+JXAw/AACAPyva/D1w6RQ/WyUMPwAAgD/bGPs94NoVPynrCz8AAIA/iIL5PU/MFj/zrQs/AACAP3Ec+D2+vRc/mG0LPwAAgD/I6vY9Ha8YPxcqCz8AAIA/y/L1PWqgGT8/4wo/AACAPzI59T2nkRo/MZkKPwAAgD+1wvQ9w4IbP7pLCj8AAIA/DJT0Pb1zHD+5+gk/AACAP4Gz9D2mZB0/L6YJPwAAgD/AJPU9XFUePwlOCT8AAIA/B+31PfFFHz858gg/AACAPw4R9z1ENiA/q5IIPwAAgD8Ulvg9YyYhP2IvCD8AAIA/t376PVEWIj8qyAc/AACAPzXQ/D3qBSM/A10HPwAAgD+ojP89QfUjP+7tBj8AAIA/mlsBPjLkJD/IegY/AACAPz0pAz7h0iU/ggMGPwAAgD9JMAU+GsEmPxqIBT8AAIA/Q3EHPv+uJz+BCAU/AACAP7PsCT5enCg/pYQEPwAAgD+Yogw+WYkpP3b8Az8AAIA/NpMPPrx1Kj/0bwM/AACAPwa+Ej6qYSs//N4CPwAAgD+BIhY+AU0sP6FJAj8AAIA/ZsAZPrA3LT/RrwE/AACAP2SWHT7JIS4/axEBPwAAgD+xoyE+OQsvP35uAD8AAIA/huclPvHzLz/Wjf8+AACAP05gKj7w2zA/gzX+PgAAgD/+DC8+JsMxP7/T/D4AAIA/iewzPpOpMj+taPs+AACAPxr9OD4VjzM/6fP5PgAAgD/mPT4+vXM0P7R1+D4AAIA/Ga1DPnlXNT/u7fY+AACAP+lJST5LOjY/dFz1PgAAgD9/Ek8+ERw3P0jB8z4AAIA/0QVVPsr8Nz9pHPI+AACAP9EiWz533Dg/123wPgAAgD8waGE+9bo5Py217j4AAIA/ndRnPmeYOj+u8uw+AACAPw5nbj6KdDs/WybrPgAAgD91HnU+f088P/BP6T4AAIA/xvl7PjUpPT+xb+c+AACAP/p7gT6KAT4/e4XlPgAAgD/6C4U+kNg+Py6R4z4AAIA/fqyIPiWuPz/JkuE+AACAP0JdjD5JgkA/K4rfPgAAgD/BHZA+/FRBP3V33T4AAIA/dO2TPhwmQj+nWts+AACAPxjMlz6p9UI/wjPZPgAAgD9JuZs+pMNDP8UC1z4AAIA/orSfPvyPRD+wx9Q+AACAPwG+oz6fWkU/hILSPgAAgD/h1Kc+jiNGPx4z0D4AAIA/HvmrPqfqRj9e2c0+AACAP3gqsD77r0c/hnXLPgAAgD+IaLQ+aXNIP5YHyT4AAIA/C7O4PvA0ST+Oj8Y+AACAP54JvT6Q9Ek/Tg3EPgAAgD9AbME+KbJKPziBwT4AAIA/jNrFPsptSz/q6r4+AACAPz9Uyj5SJ0w/pUq8PgAAgD842c4+095MP2qguT4AAIA/VWnTPhiUTT/267Y+AACAP1ME2D40R04/jC20PgAAgD/Oqdw+FvhOP01lsT4AAIA/o1nhPr2mTz86k64+AACAP5AT5j4aU1A/dLerPgAAgD9S1+o+Kv1QP/rRqD4AAIA/paTvPs+kUT8R46U+AACAP2d79D4nSlI/dOqiPgAAgD95W/k+A+1SP4ronz4AAIA/UkT+PmGNUz9y3Zw+AACAP/qaAT9SK1Q/DMmZPgAAgD8NGAQ/xcZUP72rlj4AAIA/QpkGP6tfVT9ihZM+AACAP3UeCT8B9lU/P1aQPgAAgD92pws/uYlWP9oejT4AAIA/MzQOP+MaVz8z34k+AACAP3rEED9+qVc/0JeGPgAAgD8ZWBM/ejVYP9RIgz4AAIA//u4VP8a+WD8A5X8+AACAP+iIGD+ERVk/PSt5PgAAgD/EJRs/o8lZP6Fkcj4AAIA/YcUdPyNLWj/Akms+AACAP3tnID8Eylo/prZkPgAAgD8CDCM/VkZbP6LRXT4AAIA/orIlPxrAWz/N5VY+AACAPzpbKD9QN1w/uvRPPgAAgD+WBSs/96tcPwgBST4AAIA/dbEtPzIeXT8TDUI+AACAP6JeMD8Ajl0/Qxw7PgAAgD/dDDM/YftdP74xND4AAIA/4Ls1P3dmXj+1US0+AACAP4trOD9Cz14/Z4EmPgAAgD+LGzs/4zVfPxHGHz4AAIA/m8s9P1uaXz+FJhk+AACAP3h7QD/K/F8/XKoSPgAAgD/gKkM/U11gP4FaDD4AAIA/odlFP/W7YD9wQQY+AACAP1WHSD/SGGE/K2oAPgAAgD/bM0s/HXRhPy7F9T0AAIA/395NP8TNYT/Fcus9AACAPw6IUD8LJmI/nP3hPQAAgD9FL1M/A31iP0yI2T0AAIA/QdRVP8zSYj8RONI9AACAP7B2WD+JJ2M/kDDMPQAAgD9dFls/W3tjP+qUxz0AAIA/B7NdP2TOYz8Cg8Q9AACAP4xMYD/FIGQ/bxLDPQAAgD+o4mI/n3JkP3JTwz0AAIA/OnVlPwXEZD9JS8U9AACAP/8DaD84FWU/w/XIPQAAgD/Wjmo/OGZlP7dEzj0AAIA/SBVtP2u3ZT8tI9U9AACAP2iXbz+vCGY/yXPdPQAAgD8zFXI/R1pmP5wX5z0AAIA/io50PzKsZj8Y7fE9AACAP0sDdz+k/mY/x9T9PQAAgD9kc3k/rVFnPxVXBT4AAIA/xt57P12lZz+6Lgw+AACAP4BFfj/o+Wc/9WMTPgAAgD+sdGhyZWVfZm9ybWF0qlJHQkFGb3JtYXSkc2l6ZdYVAAEAAKR0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWndmlzaWJsZccTaLI2ODE5NjI2NjU1MjkwNTcxODOxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTY5Mzk2OTg0OTE1MjEyMzMyODCob3ZlcmRyYXfHFGizMTI4NTExMzgzNTI0NDM3OTkwMa91bmlmb3JtX3VwZGF0ZXLHFWi0MTM4MDMxNzI0MzE3MTgyMTc2MzSlZmFjZXPHFGizMjc1ODAzMzgyNjUwNzc5ODkyN6R1dWlktDEwODkzMDc3MDc2OTMzODYwNDQ5rXZlcnRleF9zb3VyY2XaE9gjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgdmVjMyBvX25vcm1hbDsKb3V0IHZlYzMgb19jYW1kaXI7Cm91dCB2ZWMzIG9fbGlnaHRkaXI7CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNChmbG9hdCB2KXtyZXR1cm4gdmVjNCh2LCAwLjAsIDAuMCwgMC4wKTt9CnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCB2ZXJ0ZXhfY29sb3IodmVjMyBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKHZlYzQgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGZsb2F0IHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIHZlYzQodmFsdWUsIDAuMCwgMC4wLCAwLjApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfQp9Cgp2b2lkIHJlbmRlcih2ZWM0IHBvc2l0aW9uX3dvcmxkLCB2ZWMzIG5vcm1hbCwgbWF0NCB2aWV3LCBtYXQ0IHByb2plY3Rpb24sIHZlYzMgbGlnaHRwb3NpdGlvbikKewogICAgLy8gbm9ybWFsIGluIHdvcmxkIHNwYWNlCiAgICBvX25vcm1hbCA9IGdldF9ub3JtYWxtYXRyaXgoKSAqIG5vcm1hbDsKICAgIC8vIHBvc2l0aW9uIGluIHZpZXcgc3BhY2UgKGFzIHNlZW4gZnJvbSBjYW1lcmEpCiAgICB2ZWM0IHZpZXdfcG9zID0gdmlldyAqIHBvc2l0aW9uX3dvcmxkOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3X3BvczsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGxpZ2h0CiAgICBvX2xpZ2h0ZGlyID0gbm9ybWFsaXplKHZpZXcqdmVjNChsaWdodHBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5ejsKICAgIC8vIGRpcmVjdGlvbiB0byBjYW1lcmEKICAgIC8vIFRoaXMgaXMgZXF1aXZhbGVudCB0bwogICAgLy8gbm9ybWFsaXplKHZpZXcqdmVjNChleWVwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXoKICAgIC8vIChieSBkZWZpbml0aW9uIGB2aWV3ICogZXllcG9zaXRpb24gPSAwYCkKICAgIG9fY2FtZGlyID0gbm9ybWFsaXplKC12aWV3X3BvcykueHl6Owp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIC8vIGdldF8qIGdldHMgdGhlIGdsb2JhbCBpbnB1dHMgKHVuaWZvcm0sIHNhbXBsZXIsIHBvc2l0aW9uIGFycmF5KQogICAgLy8gdGhvc2UgZnVuY3Rpb25zIHdpbGwgZ2V0IGluc2VydGVkIGJ5IHRoZSBzaGFkZXIgY3JlYXRpb24gcGlwZWxpbmUKICAgIHZlYzMgdmVydGV4X3Bvc2l0aW9uID0gdG92ZWMzKGdldF9wb3NpdGlvbigpKTsKICAgIGlmIChpc25hbih2ZXJ0ZXhfcG9zaXRpb24ueikpIHsKICAgICAgICB2ZXJ0ZXhfcG9zaXRpb24ueiA9IDAuMDsKICAgIH0KICAgIHZlYzQgcG9zaXRpb25fd29ybGQgPSBtb2RlbCAqIHZlYzQodmVydGV4X3Bvc2l0aW9uLCAxKTsKCiAgICByZW5kZXIocG9zaXRpb25fd29ybGQsIGdldF9ub3JtYWxzKCksIHZpZXcsIHByb2plY3Rpb24sIGdldF9saWdodHBvc2l0aW9uKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191diA9IHZlYzIoMS4wIC0gZnJhZ191di55LCBmcmFnX3V2LngpOwogICAgZnJhZ19jb2xvciA9IHZlcnRleF9jb2xvcihnZXRfY29sb3IoKSwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX1ZlcnRleElEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoU3SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKaW4gdmVjMiBmcmFnX3V2OwppbiB2ZWM0IGZyYWdfY29sb3I7CmZsYXQgaW4gaW50IHNhbXBsZV9mcmFnX2NvbG9yOwoKaW4gdmVjMyBvX25vcm1hbDsKaW4gdmVjMyBvX2NhbWRpcjsKaW4gdmVjMyBvX2xpZ2h0ZGlyOwoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCk7CgogICAgLy8gc3BlY3VsYXIgY29lZmZpY2llbnQKICAgIHZlYzMgSCA9IG5vcm1hbGl6ZShMICsgVik7CgogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApLCBnZXRfc2hpbmluZXNzKCkpOwogICAgaWYgKGRpZmZfY29lZmYgPD0gMC4wKQogICAgICAgIHNwZWNfY29lZmYgPSAwLjA7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgZ2V0X2RpZmZ1c2UoKSAqIGRpZmZfY29lZmYgKiBjb2xvciArCiAgICAgICAgZ2V0X3NwZWN1bGFyKCkgKiBzcGVjX2NvZWZmCiAgICApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWMzIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gZnJhZ19jb2xvcjsgIC8vIGNvbG9yIG5vdCBpbiB1bmlmb3JtCn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfcGF0dGVybigpKSB7CiAgICAgICAgdmVjMiBzaXplID0gdmVjMih0ZXh0dXJlU2l6ZShjb2xvciwgMCkpOwogICAgICAgIHZlYzIgcG9zID0gZ2xfRnJhZ0Nvb3JkLnh5OwogICAgICAgIHJldHVybiB0ZXhlbEZldGNoKGNvbG9yLCBpdmVjMihtb2QocG9zLngsIHNpemUueCksIG1vZChwb3MueSwgc2l6ZS55KSksIDApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwogICAgfQp9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAoZnJhZ19jb2xvci54LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmcmFnX2NvbG9yOwogICAgfQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgdmFsdWVzLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBmbG9hdCB2YWx1ZSA9IHRleHR1cmUodmFsdWVzLCB1dikueDsKICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIHZlYzQgcmVhbF9jb2xvciA9IGdldF9jb2xvcih1bmlmb3JtX2NvbG9yLCBmcmFnX3V2LCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CiAgICB2ZWMzIHNoYWRlZF9jb2xvciA9IHJlYWxfY29sb3IucmdiOwoKICAgIGlmKGdldF9zaGFkaW5nKCkpewogICAgICAgIHZlYzMgTCA9IG5vcm1hbGl6ZShvX2xpZ2h0ZGlyKTsKICAgICAgICB2ZWMzIE4gPSBub3JtYWxpemUob19ub3JtYWwpOwogICAgICAgIHZlYzMgbGlnaHQxID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHZlYzMgbGlnaHQyID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgLUwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICBzaGFkZWRfY29sb3IgPSBnZXRfYW1iaWVudCgpICogcmVhbF9jb2xvci5yZ2IgKyBsaWdodDEgKyBnZXRfYmFja2xpZ2h0KCkgKiBsaWdodDI7CiAgICB9CgogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAocmVhbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChyZWFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSB2ZWM0KHNoYWRlZF9jb2xvciwgcmVhbF9jb2xvci5hKTsKfQqvYmFja2dyb3VuZGNvbG9yxxVotDEzNTg5NDk0NTI2NjY5OTcyMjY0qXBpeGVsYXJlYccVaLQxMDY2NDY5MTA0MjM0MjIzMzY1N6ZjYW1lcmHHFWi0MTI5NzI1ODI2MzE3NzE3MjkyOTekdXVpZLM0NjMzOTg2Mzg3MjA0ODU1MDAzq2NhbTNkX3N0YXRlwKpjbGVhcnNjZW5lwqhjaGlsZHJlbpCzMTMxODQ5NDE4MDA4NTIwNDk2MccVaLQxNDYzNTQzMTc1MzUzOTkyMTM5M7M4MTQ1ODQ2ODg3MTgzNjYxMzgxxxRoszI5ODIxNjkxNjY0NDM4MDE5NTS0MTM2OTE1MDAwNzQ4ODAzNDMwNTHHFWi0MTQ1NTIzNTc0NjMxMjIzNzE3OTazODgzMTE4ODA4OTI3NzQ3NDE3MscVaLQxNzg4NzI2MDM2OTM0NDAwMjExN9sAEa1AKCgpID0+IHsKICAgICAgICAgICAgaWYgKCF3aW5kb3cuSlNTRVJWRV9JTVBPUlRTKSB7CiAgICAgICAgICAgICAgICB3aW5kb3cuSlNTRVJWRV9JTVBPUlRTID0ge307CiAgICAgICAgICAgIH0KICAgICAgICAgICAgSlNTRVJWRV9JTVBPUlRTWydjYzRjNmFhNmExZjA2YTFiNTAxM2JjYTAxNzAyZjM2YTE4NGMwNDM5LXdnbG1ha2llLmpzJ10gPSBgZGF0YTphcHBsaWNhdGlvbi9qYXZhc2NyaXB0O2Jhc2U2NCxMeThnWkdWdWJ5MW1iWFF0YVdkdWIzSmxMV1pwYkdVS0x5OGdaR1Z1Ynkxc2FXNTBMV2xuYm05eVpTMW1hV3hsQ2k4dklGUm9hWE1nWTI5a1pTQjNZWE1nWW5WdVpHeGxaQ0IxYzJsdVp5QmdaR1Z1YnlCaWRXNWtiR1ZnSUdGdVpDQnBkQ2R6SUc1dmRDQnlaV052YlcxbGJtUmxaQ0IwYnlCbFpHbDBJR2wwSUcxaGJuVmhiR3g1Q2dwMllYSWdZMkVnUFNBaU1UTTJJaXdnUjNrZ1BTQjdDaUFnSUNCTVJVWlVPaUF3TEFvZ0lDQWdUVWxFUkV4Rk9pQXhMQW9nSUNBZ1VrbEhTRlE2SURJc0NpQWdJQ0JTVDFSQlZFVTZJREFzQ2lBZ0lDQkVUMHhNV1RvZ01Td0tJQ0FnSUZCQlRqb2dNZ3A5TENCV2VTQTlJSHNLSUNBZ0lGSlBWRUZVUlRvZ01Dd0tJQ0FnSUZCQlRqb2dNU3dLSUNBZ0lFUlBURXhaWDFCQlRqb2dNaXdLSUNBZ0lFUlBURXhaWDFKUFZFRlVSVG9nTXdwOUxDQjFkU0E5SURBc0lIUnNJRDBnTVN3Z1pIVWdQU0F5TENCWGVTQTlJRE1zSUhGNUlEMGdNQ3dnU0dNZ1BTQXhMQ0JtZFNBOUlESXNJR2x5SUQwZ015d2dRV2tnUFNBd0xDQnBkQ0E5SURFc0lFTnBJRDBnTWl3Z2EyTWdQU0F4TENCWWVTQTlJRElzSUhadUlEMGdNQ3dnYzNJZ1BTQXhMQ0J1YkNBOUlESXNJR2xzSUQwZ015d2djbXdnUFNBMExDQndkU0E5SURVc0lGOXBJRDBnTVRBd0xDQnRkU0E5SURFd01Td2daM1VnUFNBeE1ESXNJSE5zSUQwZ01UQXpMQ0J2YkNBOUlERXdOQ3dnZUhVZ1BTQXlNREFzSUhsMUlEMGdNakF4TENCMmRTQTlJREl3TWl3Z1gzVWdQU0F5TURNc0lFZGpJRDBnTWpBMExDQldZeUE5SURJd05Td2dUWFVnUFNBeU1EWXNJR0oxSUQwZ01qQTNMQ0IzZFNBOUlESXdPQ3dnVTNVZ1BTQXlNRGtzSUZSMUlEMGdNakV3TENCRmRTQTlJREFzSUVGMUlEMGdNU3dnUTNVZ1BTQXlMQ0JsWVNBOUlETXNJRXgxSUQwZ05Dd2dVblVnUFNBMUxDQlFkU0E5SURZc0lFbDFJRDBnTnl3Z1ZuTWdQU0F3TENCRWRTQTlJREVzSUVaMUlEMGdNaXdnWDI0Z1BTQXdMQ0JPZFNBOUlERXNJRUoxSUQwZ01pd2dlblVnUFNBekxDQlZkU0E5SURRc0lFOTFJRDBnTlN3Z2FHRWdQU0F6TURBc0lFSnBJRDBnTXpBeExDQjZhU0E5SURNd01pd2dSSE1nUFNBek1ETXNJRVp6SUQwZ016QTBMQ0JRY2lBOUlETXdOaXdnVjNNZ1BTQXpNRGNzSUU1eklEMGdNV1V6TENCMmRDQTlJREV3TURFc0lFSnpJRDBnTVRBd01pd2djblFnUFNBeE1EQXpMQ0IwWVNBOUlERXdNRFFzSUVwNUlEMGdNVEF3TkN3Z2JtRWdQU0F4TURBMUxDQlplU0E5SURFd01EVXNJSFIwSUQwZ01UQXdOaXdnVjJNZ1BTQXhNREEzTENCYWVTQTlJREV3TURjc0lGVnBJRDBnTVRBd09Dd2dKSGtnUFNBeE1EQTRMQ0J5YmlBOUlERXdNRGtzSUVoMUlEMGdNVEF4TUN3Z2EzVWdQU0F4TURFeExDQmpjaUE5SURFd01USXNJRWQxSUQwZ01UQXhNeXdnVUhNZ1BTQXhNREUwTENCdWJpQTlJREV3TVRVc0lHdHVJRDBnTVRBeE5pd2dWblVnUFNBeE1ERTNMQ0JYZFNBOUlERXdNVGdzSUhGMUlEMGdNVEF4T1N3Z1ZHa2dQU0F4TURJd0xDQllkU0E5SURFd01qRXNJRWR1SUQwZ01UQXlNaXdnWTNRZ1BTQXhNREl6TENCS2RTQTlJREV3TWpRc0lGbDFJRDBnTVRBeU5Td2dWbTRnUFNBeE1ESTJMQ0JNYVNBOUlERXdNamNzSUZwMUlEMGdNVEF5T0N3Z0pIVWdQU0F4TURJNUxDQnFkU0E5SURFd016QXNJRkYxSUQwZ01UQXpNU3dnUzNVZ1BTQXhNRE15TENCbFpDQTlJREV3TXpNc0lHRnNJRDBnTXpNM056WXNJR3hzSUQwZ016TTNOemNzSUdOc0lEMGdNek0zTnpnc0lHaHNJRDBnTXpNM056a3NJSFZzSUQwZ016VTROREFzSUdSc0lEMGdNelU0TkRFc0lHWnNJRDBnTXpVNE5ESXNJSEJzSUQwZ016VTRORE1zSUhSa0lEMGdNell4T1RZc0lHMXNJRDBnTXpjME9USXNJR2RzSUQwZ016YzBPVFlzSUc1a0lEMGdNemM0TURnc0lHbGtJRDBnTXpjNE1Ea3NJSEprSUQwZ016YzRNVEFzSUhOa0lEMGdNemM0TVRFc0lHOWtJRDBnTXpjNE1USXNJR0ZrSUQwZ016YzRNVE1zSUd4a0lEMGdNemM0TVRRc0lHTmtJRDBnTXpjNE1UVXNJR2hrSUQwZ016YzRNVFlzSUhWa0lEMGdNemM0TVRjc0lHUmtJRDBnTXpjNE1UZ3NJR1prSUQwZ016YzRNVGtzSUhCa0lEMGdNemM0TWpBc0lHMWtJRDBnTXpjNE1qRXNJR2RrSUQwZ016WTBPVElzSUhoa0lEMGdNemM0TkRBc0lIbGtJRDBnTXpjNE5ERXNJSFprSUQwZ016YzRORElzSUY5a0lEMGdNemM0TkRNc0lFMWtJRDBnTXpjNE5EUXNJR0prSUQwZ016YzRORFVzSUhka0lEMGdNemM0TkRZc0lGTmtJRDBnTXpjNE5EY3NJRlJrSUQwZ016YzRORGdzSUVWa0lEMGdNemM0TkRrc0lFRmtJRDBnTXpjNE5UQXNJRU5rSUQwZ016YzROVEVzSUV4a0lEMGdNemM0TlRJc0lGSmtJRDBnTXpjNE5UTXNJRkJrSUQwZ01qSXdNQ3dnU1dRZ1BTQXlNakF4TENCRVpDQTlJREl5TURJc0lIcHpJRDBnTWpNd01Dd2dWWE1nUFNBeU16QXhMQ0I1YnlBOUlESXpNRElzSUUxcElEMGdNalF3TUN3Z1lta2dQU0F5TkRBeExDQlBjeUE5SURJME1ESXNJSFZoSUQwZ01qVXdNQ3dnY1dNZ1BTQXlOVEF4TENCR1pDQTlJREFzSUdwNUlEMGdNU3dnVVhrZ1BTQXlMQ0JPZENBOUlETmxNeXdnVDJrZ1BTQXpNREF4TENCT1pDQTlJRE15TURBc0lFSmtJRDBnTXpJd01Td2dTR2tnUFNBd0xDQjZaQ0E5SURFc0lFdDVJRDBnTUN3Z2RtOGdQU0EzTmpnd0xDQmxNQ0E5SURjMk9ERXNJSFF3SUQwZ056WTRNaXdnYmpBZ1BTQTNOamd6TENCcE1DQTlJRE0wTURVMUxDQnlNQ0E5SURNME1EVTJMQ0J6TUNBOUlEVXpPRFlzSUc4d0lEMGdOVEV5TENCaE1DQTlJRFV4TXl3Z2JEQWdQU0ExTVRRc0lHTXdJRDBnTlRFMUxDQm9NQ0E5SURVeE5pd2dkVEFnUFNBMU1UY3NJR1F3SUQwZ05URTRMQ0JWWkNBOUlEVXhPU3dnYUhJZ1BTQXpOVEEwTkN3Z2RYSWdQU0F6TlRBME9Dd2daakFnUFNBek5UQTBNQ3dnY0RBZ1BTQXpOVEEwTlN3Z2JUQWdQU0F6TlRBME9Td2daekFnUFNBek5UQTBNU3dnZURBZ1BTQXpOVEEwTml3Z2VUQWdQU0F6TlRBMU1Dd2dkakFnUFNBek5UQTBNaXdnWHpBZ1BTQWlNVEF3SWl3Z2VHd2dQU0FpTXpBd0lHVnpJaXdnUlc0Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JoWkdSRmRtVnVkRXhwYzNSbGJtVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5c2FYTjBaVzVsY25NZ1BUMDlJSFp2YVdRZ01DQW1KaUFvZEdocGN5NWZiR2x6ZEdWdVpYSnpJRDBnZTMwcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVmYkdsemRHVnVaWEp6T3dvZ0lDQWdJQ0FnSUc1YlpWMGdQVDA5SUhadmFXUWdNQ0FtSmlBb2JsdGxYU0E5SUZ0ZEtTd2dibHRsWFM1cGJtUmxlRTltS0hRcElEMDlQU0F0TVNBbUppQnVXMlZkTG5CMWMyZ29kQ2s3Q2lBZ0lDQjlDaUFnSUNCb1lYTkZkbVZ1ZEV4cGMzUmxibVZ5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJ4cGMzUmxibVZ5Y3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmx0bFhTQWhQVDBnZG05cFpDQXdJQ1ltSUc1YlpWMHVhVzVrWlhoUFppaDBLU0FoUFQwZ0xURTdDaUFnSUNCOUNpQWdJQ0J5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMnhwYzNSbGJtVnljMXRsWFRzS0lDQWdJQ0FnSUNCcFppQW9hU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdhUzVwYm1SbGVFOW1LSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJQ0U5UFNBdE1TQW1KaUJwTG5Od2JHbGpaU2h5TENBeEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JrYVhOd1lYUmphRVYyWlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYMnhwYzNSbGJtVnljMXRsTG5SNWNHVmRPd29nSUNBZ0lDQWdJR2xtSUNodUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNTBZWEpuWlhRZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNHVjMnhwWTJVb01DazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCcExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bHBXM0pkTG1OaGJHd29kR2hwY3l3Z1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWRHRnlaMlYwSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBzSUhCMElEMGdXMTA3Q21admNpaHNaWFFnY3lBOUlEQTdJSE1nUENBeU5UWTdJSE1yS3lsd2RGdHpYU0E5SUNoeklEd2dNVFlnUHlBaU1DSWdPaUFpSWlrZ0t5QnpMblJ2VTNSeWFXNW5LREUyS1RzS2RtRnlJRlp5SUQwZ01USXpORFUyTnl3Z1YyNGdQU0JOWVhSb0xsQkpJQzhnTVRnd0xDQmtjaUE5SURFNE1DQXZJRTFoZEdndVVFazdDbVoxYm1OMGFXOXVJRVYwS0NrZ2V3b2dJQ0FnYkdWMElITWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBc0lHVWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBc0lIUWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBc0lHNGdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dOREk1TkRrMk56STVOU0I4SURBN0NpQWdJQ0J5WlhSMWNtNGdLSEIwVzNNZ0ppQXlOVFZkSUNzZ2NIUmJjeUErUGlBNElDWWdNalUxWFNBcklIQjBXM01nUGo0Z01UWWdKaUF5TlRWZElDc2djSFJiY3lBK1BpQXlOQ0FtSURJMU5WMGdLeUFpTFNJZ0t5QndkRnRsSUNZZ01qVTFYU0FySUhCMFcyVWdQajRnT0NBbUlESTFOVjBnS3lBaUxTSWdLeUJ3ZEZ0bElENCtJREUySUNZZ01UVWdmQ0EyTkYwZ0t5QndkRnRsSUQ0K0lESTBJQ1lnTWpVMVhTQXJJQ0l0SWlBcklIQjBXM1FnSmlBMk15QjhJREV5T0YwZ0t5QndkRnQwSUQ0K0lEZ2dKaUF5TlRWZElDc2dJaTBpSUNzZ2NIUmJkQ0ErUGlBeE5pQW1JREkxTlYwZ0t5QndkRnQwSUQ0K0lESTBJQ1lnTWpVMVhTQXJJSEIwVzI0Z0ppQXlOVFZkSUNzZ2NIUmJiaUErUGlBNElDWWdNalUxWFNBcklIQjBXMjRnUGo0Z01UWWdKaUF5TlRWZElDc2djSFJiYmlBK1BpQXlOQ0FtSURJMU5WMHBMblJ2VlhCd1pYSkRZWE5sS0NrN0NuMEtablZ1WTNScGIyNGdiWFFvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhNcEtUc0tmUXBtZFc1amRHbHZiaUJrWVNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z0tITWdKU0JsSUNzZ1pTa2dKU0JsT3dwOUNtWjFibU4wYVc5dUlFOWtLSE1zSUdVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUhKbGRIVnliaUJ1SUNzZ0tITWdMU0JsS1NBcUlDaHBJQzBnYmlrZ0x5QW9kQ0F0SUdVcE93cDlDbVoxYm1OMGFXOXVJRWhrS0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ0U5UFNCbElEOGdLSFFnTFNCektTQXZJQ2hsSUMwZ2N5a2dPaUF3T3dwOUNtWjFibU4wYVc5dUlHOXlLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlBb01TQXRJSFFwSUNvZ2N5QXJJSFFnS2lCbE93cDlDbVoxYm1OMGFXOXVJR3RrS0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUhKbGRIVnliaUJ2Y2loekxDQmxMQ0F4SUMwZ1RXRjBhQzVsZUhBb0xYUWdLaUJ1S1NrN0NuMEtablZ1WTNScGIyNGdSMlFvY3l3Z1pTQTlJREVwSUhzS0lDQWdJSEpsZEhWeWJpQmxJQzBnVFdGMGFDNWhZbk1vWkdFb2N5d2daU0FxSURJcElDMGdaU2s3Q24wS1puVnVZM1JwYjI0Z1ZtUW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BEMGdaU0EvSURBZ09pQnpJRDQ5SUhRZ1B5QXhJRG9nS0hNZ1BTQW9jeUF0SUdVcElDOGdLSFFnTFNCbEtTd2djeUFxSUhNZ0tpQW9NeUF0SURJZ0tpQnpLU2s3Q24wS1puVnVZM1JwYjI0Z1YyUW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BEMGdaU0EvSURBZ09pQnpJRDQ5SUhRZ1B5QXhJRG9nS0hNZ1BTQW9jeUF0SUdVcElDOGdLSFFnTFNCbEtTd2djeUFxSUhNZ0tpQnpJQ29nS0hNZ0tpQW9jeUFxSURZZ0xTQXhOU2tnS3lBeE1Da3BPd3A5Q21aMWJtTjBhVzl1SUhGa0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ3NnVFdGMGFDNW1iRzl2Y2loTllYUm9MbkpoYm1SdmJTZ3BJQ29nS0dVZ0xTQnpJQ3NnTVNrcE93cDlDbVoxYm1OMGFXOXVJRmhrS0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDc2dUV0YwYUM1eVlXNWtiMjBvS1NBcUlDaGxJQzBnY3lrN0NuMEtablZ1WTNScGIyNGdTbVFvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nS2lBb0xqVWdMU0JOWVhSb0xuSmhibVJ2YlNncEtUc0tmUXBtZFc1amRHbHZiaUJaWkNoektTQjdDaUFnSUNCeVpYUjFjbTRnY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hXY2lBOUlITWdKU0F5TVRRM05EZ3pOalEzS1N3Z1ZuSWdQU0JXY2lBcUlERTJPREEzSUNVZ01qRTBOelE0TXpZME55d2dLRlp5SUMwZ01Ta2dMeUF5TVRRM05EZ3pOalEyT3dwOUNtWjFibU4wYVc5dUlGcGtLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ29nVjI0N0NuMEtablZ1WTNScGIyNGdKR1FvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nS2lCa2Nqc0tmUXBtZFc1amRHbHZiaUJwWVNoektTQjdDaUFnSUNCeVpYUjFjbTRnS0hNZ0ppQnpJQzBnTVNrZ1BUMDlJREFnSmlZZ2N5QWhQVDBnTURzS2ZRcG1kVzVqZEdsdmJpQllZeWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdUV0YwYUM1d2IzY29NaXdnVFdGMGFDNWpaV2xzS0UxaGRHZ3ViRzluS0hNcElDOGdUV0YwYUM1TVRqSXBLVHNLZlFwbWRXNWpkR2x2YmlCS1l5aHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1RXRjBhQzV3YjNjb01pd2dUV0YwYUM1bWJHOXZjaWhOWVhSb0xteHZaeWh6S1NBdklFMWhkR2d1VEU0eUtTazdDbjBLWm5WdVkzUnBiMjRnYW1Rb2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdiR1YwSUhJZ1BTQk5ZWFJvTG1OdmN5d2dieUE5SUUxaGRHZ3VjMmx1TENCaElEMGdjaWgwSUM4Z01pa3NJR3dnUFNCdktIUWdMeUF5S1N3Z1l5QTlJSElvS0dVZ0t5QnVLU0F2SURJcExDQm9JRDBnYnlnb1pTQXJJRzRwSUM4Z01pa3NJSFVnUFNCeUtDaGxJQzBnYmlrZ0x5QXlLU3dnWkNBOUlHOG9LR1VnTFNCdUtTQXZJRElwTENCbUlEMGdjaWdvYmlBdElHVXBJQzhnTWlrc0lHMGdQU0J2S0NodUlDMGdaU2tnTHlBeUtUc0tJQ0FnSUhOM2FYUmphQ2hwS1hzS0lDQWdJQ0FnSUNCallYTmxJQ0pZV1ZnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J6TG5ObGRDaGhJQ29nYUN3Z2JDQXFJSFVzSUd3Z0tpQmtMQ0JoSUNvZ1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ0lsbGFXU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVjMlYwS0d3Z0tpQmtMQ0JoSUNvZ2FDd2diQ0FxSUhVc0lHRWdLaUJqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0FpV2xoYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1elpYUW9iQ0FxSUhVc0lHd2dLaUJrTENCaElDb2dhQ3dnWVNBcUlHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElDSllXbGdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQnpMbk5sZENoaElDb2dhQ3dnYkNBcUlHMHNJR3dnS2lCbUxDQmhJQ29nWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnSWxsWVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUhNdWMyVjBLR3dnS2lCbUxDQmhJQ29nYUN3Z2JDQXFJRzBzSUdFZ0tpQmpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQWlXbGxhSWpvS0lDQWdJQ0FnSUNBZ0lDQWdjeTV6WlhRb2JDQXFJRzBzSUd3Z0tpQm1MQ0JoSUNvZ2FDd2dZU0FxSUdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHaFZkR2xzY3pvZ0xuTmxkRkYxWVhSbGNtNXBiMjVHY205dFVISnZjR1Z5UlhWc1pYSW9LU0JsYm1OdmRXNTBaWEpsWkNCaGJpQjFibXR1YjNkdUlHOXlaR1Z5T2lBaUlDc2dhU2s3Q2lBZ0lDQjlDbjBLZG1GeUlFMHdJRDBnVDJKcVpXTjBMbVp5WldWNlpTaDdDaUFnSUNCZlgzQnliM1J2WDE4NklHNTFiR3dzQ2lBZ0lDQkVSVWN5VWtGRU9pQlhiaXdLSUNBZ0lGSkJSREpFUlVjNklHUnlMQW9nSUNBZ1oyVnVaWEpoZEdWVlZVbEVPaUJGZEN3S0lDQWdJR05zWVcxd09pQnRkQ3dLSUNBZ0lHVjFZMnhwWkdWaGJrMXZaSFZzYnpvZ1pHRXNDaUFnSUNCdFlYQk1hVzVsWVhJNklFOWtMQW9nSUNBZ2FXNTJaWEp6WlV4bGNuQTZJRWhrTEFvZ0lDQWdiR1Z5Y0RvZ2IzSXNDaUFnSUNCa1lXMXdPaUJyWkN3S0lDQWdJSEJwYm1kd2IyNW5PaUJIWkN3S0lDQWdJSE50YjI5MGFITjBaWEE2SUZaa0xBb2dJQ0FnYzIxdmIzUm9aWEp6ZEdWd09pQlhaQ3dLSUNBZ0lISmhibVJKYm5RNklIRmtMQW9nSUNBZ2NtRnVaRVpzYjJGME9pQllaQ3dLSUNBZ0lISmhibVJHYkc5aGRGTndjbVZoWkRvZ1NtUXNDaUFnSUNCelpXVmtaV1JTWVc1a2IyMDZJRmxrTEFvZ0lDQWdaR1ZuVkc5U1lXUTZJRnBrTEFvZ0lDQWdjbUZrVkc5RVpXYzZJQ1JrTEFvZ0lDQWdhWE5RYjNkbGNrOW1WSGR2T2lCcFlTd0tJQ0FnSUdObGFXeFFiM2RsY2s5bVZIZHZPaUJZWXl3S0lDQWdJR1pzYjI5eVVHOTNaWEpQWmxSM2J6b2dTbU1zQ2lBZ0lDQnpaWFJSZFdGMFpYSnVhVzl1Um5KdmJWQnliM0JsY2tWMWJHVnlPaUJxWkFwOUtTd2dXQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBd0xDQjBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjNhV1IwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSGRwWkhSb0tHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuZ2dQU0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJR2hsYVdkb2RDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUdobGFXZG9kQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTU1SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTXVlU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NUlEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVOdmJYQnZibVZ1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURBNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmdnUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVlU0E5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ltbHVaR1Y0SUdseklHOTFkQ0J2WmlCeVlXNW5aVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbmdzSUhSb2FYTXVlU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NExDQjBhR2x6TG5rZ1BTQmxMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNFOVBTQjJiMmxrSURBZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXlPaUF1WVdSa0tDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXVZV1JrVm1WamRHOXljeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVZV1JrVm1WamRHOXljeWhsTENCMEtTa2dPaUFvZEdocGN5NTRJQ3M5SUdVdWVDd2dkR2hwY3k1NUlDczlJR1V1ZVN3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCaFpHUlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0t6MGdaU3dnZEdocGN5NTVJQ3M5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDc2dkQzU0TENCMGFHbHpMbmtnUFNCbExua2dLeUIwTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUlRZMkZzWldSV1pXTjBiM0lvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0t6MGdaUzU0SUNvZ2RDd2dkR2hwY3k1NUlDczlJR1V1ZVNBcUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0lvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ0U5UFNCMmIybGtJREFnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJeU9pQXVjM1ZpS0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdWMzVmlWbVZqZEc5eWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1NrZ09pQW9kR2hwY3k1NElDMDlJR1V1ZUN3Z2RHaHBjeTU1SUMwOUlHVXVlU3dnZEdocGN5azdDaUFnSUNCOUNpQWdJQ0J6ZFdKVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnTFQwZ1pTd2dkR2hwY3k1NUlDMDlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdKV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUMwZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0xTQjBMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FxUFNCbExuZ3NJSFJvYVhNdWVTQXFQU0JsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FxUFNCbExDQjBhR2x6TG5rZ0tqMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwZG1sa1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXZQU0JsTG5nc0lIUm9hWE11ZVNBdlBTQmxMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYVhacFpHVlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VTJOaGJHRnlLREVnTHlCbEtUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TXlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCcFd6QmRJQ29nZENBcklHbGJNMTBnS2lCdUlDc2dhVnMyWFN3Z2RHaHBjeTU1SUQwZ2FWc3hYU0FxSUhRZ0t5QnBXelJkSUNvZ2JpQXJJR2xiTjEwc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGFXNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMXBiaWgwYUdsekxuZ3NJR1V1ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldsdUtIUm9hWE11ZVN3Z1pTNTVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtIUm9hWE11ZUN3Z1pTNTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTVMQ0JsTG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaGxMbmdzSUUxaGRHZ3ViV2x1S0hRdWVDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1V1ZVN3Z1RXRjBhQzV0YVc0b2RDNTVMQ0IwYUdsekxua3BLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zWVcxd1UyTmhiR0Z5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTU0S1Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQk1aVzVuZEdnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2JpQjhmQ0F4S1M1dGRXeDBhWEJzZVZOallXeGhjaWhOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQnVLU2twT3dvZ0lDQWdmUW9nSUNBZ1pteHZiM0lvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyVnBiQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVlQ2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXliM1Z1WkNoMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUlViMXBsY204b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlIUm9hWE11ZUNBOElEQWdQeUJOWVhSb0xtTmxhV3dvZEdocGN5NTRLU0E2SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ2RHaHBjeTU1SUR3Z01DQS9JRTFoZEdndVkyVnBiQ2gwYUdsekxua3BJRG9nVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYm1WbllYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0F0ZEdocGN5NTRMQ0IwYUdsekxua2dQU0F0ZEdocGN5NTVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaRzkwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ1pTNTRJQ3NnZEdocGN5NTVJQ29nWlM1NU93b2dJQ0FnZlFvZ0lDQWdZM0p2YzNNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQmxMbmtnTFNCMGFHbHpMbmtnS2lCbExuZzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHaFRjU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ29nZEdocGN5NTRJQ3NnZEdocGN5NTVJQ29nZEdocGN5NTVPd29nSUNBZ2ZRb2dJQ0FnYkdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xuTnhjblFvZEdocGN5NTRJQ29nZEdocGN5NTRJQ3NnZEdocGN5NTVJQ29nZEdocGN5NTVLVHNLSUNBZ0lIMEtJQ0FnSUcxaGJtaGhkSFJoYmt4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vZEdocGN5NTRLU0FySUUxaGRHZ3VZV0p6S0hSb2FYTXVlU2s3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdsMmFXUmxVMk5oYkdGeUtIUm9hWE11YkdWdVozUm9LQ2tnZkh3Z01TazdDaUFnSUNCOUNpQWdJQ0JoYm1kc1pTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aGRHRnVNaWd0ZEdocGN5NTVMQ0F0ZEdocGN5NTRLU0FySUUxaGRHZ3VVRWs3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1emNYSjBLSFJvYVhNdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTU0SUMwZ1pTNTRMQ0J1SUQwZ2RHaHBjeTU1SUMwZ1pTNTVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcklHNGdLaUJ1T3dvZ0lDQWdmUW9nSUNBZ2JXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlXSnpLSFJvYVhNdWVDQXRJR1V1ZUNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5rZ0xTQmxMbmtwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBUR1Z1WjNSb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3hwZW1Vb0tTNXRkV3gwYVhCc2VWTmpZV3hoY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3hsY25Bb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnS0dVdWVDQXRJSFJvYVhNdWVDa2dLaUIwTENCMGFHbHpMbmtnS3owZ0tHVXVlU0F0SUhSb2FYTXVlU2tnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljRlpsWTNSdmNuTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdnS3lBb2RDNTRJQzBnWlM1NEtTQXFJRzRzSUhSb2FYTXVlU0E5SUdVdWVTQXJJQ2gwTG5rZ0xTQmxMbmtwSUNvZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVlQ0E5UFQwZ2RHaHBjeTU0SUNZbUlHVXVlU0E5UFQwZ2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUZ5Y21GNUtHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVmJkRjBzSUhSb2FYTXVlU0E5SUdWYmRDQXJJREZkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCMGFHbHpMbmdzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTU1TENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnSVQwOUlIWnZhV1FnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqSTZJRzltWm5ObGRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0lHWnliMjBnTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTNGlLU3dnZEdocGN5NTRJRDBnWlM1blpYUllLSFFwTENCMGFHbHpMbmtnUFNCbExtZGxkRmtvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZCY205MWJtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1RXRjBhQzVqYjNNb2RDa3NJR2tnUFNCTllYUm9Mbk5wYmloMEtTd2djaUE5SUhSb2FYTXVlQ0F0SUdVdWVDd2dieUE5SUhSb2FYTXVlU0F0SUdVdWVUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ2NpQXFJRzRnTFNCdklDb2dhU0FySUdVdWVDd2dkR2hwY3k1NUlEMGdjaUFxSUdrZ0t5QnZJQ29nYmlBcklHVXVlU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEpoYm1SdmJTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1eVlXNWtiMjBvS1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5WVc1a2IyMG9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJQ3BiVTNsdFltOXNMbWwwWlhKaGRHOXlYU2dwSUhzS0lDQWdJQ0FnSUNCNWFXVnNaQ0IwYUdsekxuZ3NJSGxwWld4a0lIUm9hWE11ZVRzS0lDQWdJSDBLZlRzS1dDNXdjbTkwYjNSNWNHVXVhWE5XWldOMGIzSXlJRDBnSVRBN0NuWmhjaUJzZENBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVsYkdWdFpXNTBjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUYwc0lHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnZ1BpQXdJQ1ltSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWhkSEpwZURNNklIUm9aU0JqYjI1emRISjFZM1J2Y2lCdWJ5QnNiMjVuWlhJZ2NtVmhaSE1nWVhKbmRXMWxiblJ6TGlCMWMyVWdMbk5sZENncElHbHVjM1JsWVdRdUlpazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhRnN3WFNBOUlHVXNJR2hiTVYwZ1BTQnBMQ0JvV3pKZElEMGdZU3dnYUZzelhTQTlJSFFzSUdoYk5GMGdQU0J5TENCb1d6VmRJRDBnYkN3Z2FGczJYU0E5SUc0c0lHaGJOMTBnUFNCdkxDQm9XemhkSUQwZ1l5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbGtaVzUwYVhSNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3hMQ0F3TENBd0xDQXdMQ0F4TENBd0xDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmJNRjBnUFNCdVd6QmRMQ0IwV3pGZElEMGdibHN4WFN3Z2RGc3lYU0E5SUc1Yk1sMHNJSFJiTTEwZ1BTQnVXek5kTENCMFd6UmRJRDBnYmxzMFhTd2dkRnMxWFNBOUlHNWJOVjBzSUhSYk5sMGdQU0J1V3paZExDQjBXemRkSUQwZ2JsczNYU3dnZEZzNFhTQTlJRzViT0Ywc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIUnlZV04wUW1GemFYTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbk5sZEVaeWIyMU5ZWFJ5YVhnelEyOXNkVzF1S0hSb2FYTXNJREFwTENCMExuTmxkRVp5YjIxTllYUnlhWGd6UTI5c2RXMXVLSFJvYVhNc0lERXBMQ0J1TG5ObGRFWnliMjFOWVhSeWFYZ3pRMjlzZFcxdUtIUm9hWE1zSURJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlUxaGRISnBlRFFvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb2RGc3dYU3dnZEZzMFhTd2dkRnM0WFN3Z2RGc3hYU3dnZEZzMVhTd2dkRnM1WFN3Z2RGc3lYU3dnZEZzMlhTd2dkRnN4TUYwcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vZEdocGN5d2daU2s3Q2lBZ0lDQjlDaUFnSUNCd2NtVnRkV3gwYVhCc2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lobExDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1bGJHVnRaVzUwY3l3Z2FTQTlJSFF1Wld4bGJXVnVkSE1zSUhJZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCdklEMGdibHN3WFN3Z1lTQTlJRzViTTEwc0lHd2dQU0J1V3paZExDQmpJRDBnYmxzeFhTd2dhQ0E5SUc1Yk5GMHNJSFVnUFNCdVd6ZGRMQ0JrSUQwZ2Jsc3lYU3dnWmlBOUlHNWJOVjBzSUcwZ1BTQnVXemhkTENCNElEMGdhVnN3WFN3Z2RpQTlJR2xiTTEwc0lHY2dQU0JwV3paZExDQndJRDBnYVZzeFhTd2dYeUE5SUdsYk5GMHNJSGtnUFNCcFd6ZGRMQ0JpSUQwZ2FWc3lYU3dnUVNBOUlHbGJOVjBzSUV3Z1BTQnBXemhkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5V3pCZElEMGdieUFxSUhnZ0t5QmhJQ29nY0NBcklHd2dLaUJpTENCeVd6TmRJRDBnYnlBcUlIWWdLeUJoSUNvZ1h5QXJJR3dnS2lCQkxDQnlXelpkSUQwZ2J5QXFJR2NnS3lCaElDb2dlU0FySUd3Z0tpQk1MQ0J5V3pGZElEMGdZeUFxSUhnZ0t5Qm9JQ29nY0NBcklIVWdLaUJpTENCeVd6UmRJRDBnWXlBcUlIWWdLeUJvSUNvZ1h5QXJJSFVnS2lCQkxDQnlXemRkSUQwZ1l5QXFJR2NnS3lCb0lDb2dlU0FySUhVZ0tpQk1MQ0J5V3pKZElEMGdaQ0FxSUhnZ0t5Qm1JQ29nY0NBcklHMGdLaUJpTENCeVd6VmRJRDBnWkNBcUlIWWdLeUJtSUNvZ1h5QXJJRzBnS2lCQkxDQnlXemhkSUQwZ1pDQXFJR2NnS3lCbUlDb2dlU0FySUcwZ0tpQk1MQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzd1hTQXFQU0JsTENCMFd6TmRJQ285SUdVc0lIUmJObDBnS2owZ1pTd2dkRnN4WFNBcVBTQmxMQ0IwV3pSZElDbzlJR1VzSUhSYk4xMGdLajBnWlN3Z2RGc3lYU0FxUFNCbExDQjBXelZkSUNvOUlHVXNJSFJiT0YwZ0tqMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JsZEdWeWJXbHVZVzUwS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnZENBOUlHVmJNRjBzSUc0Z1BTQmxXekZkTENCcElEMGdaVnN5WFN3Z2NpQTlJR1ZiTTEwc0lHOGdQU0JsV3pSZExDQmhJRDBnWlZzMVhTd2diQ0E5SUdWYk5sMHNJR01nUFNCbFd6ZGRMQ0JvSUQwZ1pWczRYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FxSUc4Z0tpQm9JQzBnZENBcUlHRWdLaUJqSUMwZ2JpQXFJSElnS2lCb0lDc2diaUFxSUdFZ0tpQnNJQ3NnYVNBcUlISWdLaUJqSUMwZ2FTQXFJRzhnS2lCc093b2dJQ0FnZlFvZ0lDQWdhVzUyWlhKMEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwc0lHNGdQU0JsV3pGZExDQnBJRDBnWlZzeVhTd2djaUE5SUdWYk0xMHNJRzhnUFNCbFd6UmRMQ0JoSUQwZ1pWczFYU3dnYkNBOUlHVmJObDBzSUdNZ1BTQmxXemRkTENCb0lEMGdaVnM0WFN3Z2RTQTlJR2dnS2lCdklDMGdZU0FxSUdNc0lHUWdQU0JoSUNvZ2JDQXRJR2dnS2lCeUxDQm1JRDBnWXlBcUlISWdMU0J2SUNvZ2JDd2diU0E5SUhRZ0tpQjFJQ3NnYmlBcUlHUWdLeUJwSUNvZ1pqc0tJQ0FnSUNBZ0lDQnBaaUFvYlNBOVBUMGdNQ2tnY21WMGRYSnVJSFJvYVhNdWMyVjBLREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENCNElEMGdNU0F2SUcwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYk1GMGdQU0IxSUNvZ2VDd2daVnN4WFNBOUlDaHBJQ29nWXlBdElHZ2dLaUJ1S1NBcUlIZ3NJR1ZiTWwwZ1BTQW9ZU0FxSUc0Z0xTQnBJQ29nYnlrZ0tpQjRMQ0JsV3pOZElEMGdaQ0FxSUhnc0lHVmJORjBnUFNBb2FDQXFJSFFnTFNCcElDb2diQ2tnS2lCNExDQmxXelZkSUQwZ0tHa2dLaUJ5SUMwZ1lTQXFJSFFwSUNvZ2VDd2daVnMyWFNBOUlHWWdLaUI0TENCbFd6ZGRJRDBnS0c0Z0tpQnNJQzBnWXlBcUlIUXBJQ29nZUN3Z1pWczRYU0E5SUNodklDb2dkQ0F0SUc0Z0tpQnlLU0FxSUhnc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVc0lIUWdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMGdkRnN4WFN3Z2RGc3hYU0E5SUhSYk0xMHNJSFJiTTEwZ1BTQmxMQ0JsSUQwZ2RGc3lYU3dnZEZzeVhTQTlJSFJiTmwwc0lIUmJObDBnUFNCbExDQmxJRDBnZEZzMVhTd2dkRnMxWFNBOUlIUmJOMTBzSUhSYk4xMGdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFRtOXliV0ZzVFdGMGNtbDRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJHY205dFRXRjBjbWw0TkNobEtTNXBiblpsY25Rb0tTNTBjbUZ1YzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpjRzl6WlVsdWRHOUJjbkpoZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsV3pCZElEMGdkRnN3WFN3Z1pWc3hYU0E5SUhSYk0xMHNJR1ZiTWwwZ1BTQjBXelpkTENCbFd6TmRJRDBnZEZzeFhTd2daVnMwWFNBOUlIUmJORjBzSUdWYk5WMGdQU0IwV3pkZExDQmxXelpkSUQwZ2RGc3lYU3dnWlZzM1hTQTlJSFJiTlYwc0lHVmJPRjBnUFNCMFd6aGRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVlhaVWNtRnVjMlp2Y20wb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTa2dld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdUV0YwYUM1amIzTW9jaWtzSUdNZ1BTQk5ZWFJvTG5OcGJpaHlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9iaUFxSUd3c0lHNGdLaUJqTENBdGJpQXFJQ2hzSUNvZ2J5QXJJR01nS2lCaEtTQXJJRzhnS3lCbExDQXRhU0FxSUdNc0lHa2dLaUJzTENBdGFTQXFJQ2d0WXlBcUlHOGdLeUJzSUNvZ1lTa2dLeUJoSUNzZ2RDd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpZMkZzWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVd6QmRJQ285SUdVc0lHNWJNMTBnS2owZ1pTd2dibHMyWFNBcVBTQmxMQ0J1V3pGZElDbzlJSFFzSUc1Yk5GMGdLajBnZEN3Z2JsczNYU0FxUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1WTI5ektHVXBMQ0J1SUQwZ1RXRjBhQzV6YVc0b1pTa3NJR2tnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J5SUQwZ2FWc3dYU3dnYnlBOUlHbGJNMTBzSUdFZ1BTQnBXelpkTENCc0lEMGdhVnN4WFN3Z1l5QTlJR2xiTkYwc0lHZ2dQU0JwV3pkZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcFd6QmRJRDBnZENBcUlISWdLeUJ1SUNvZ2JDd2dhVnN6WFNBOUlIUWdLaUJ2SUNzZ2JpQXFJR01zSUdsYk5sMGdQU0IwSUNvZ1lTQXJJRzRnS2lCb0xDQnBXekZkSUQwZ0xXNGdLaUJ5SUNzZ2RDQXFJR3dzSUdsYk5GMGdQU0F0YmlBcUlHOGdLeUIwSUNvZ1l5d2dhVnMzWFNBOUlDMXVJQ29nWVNBcklIUWdLaUJvTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTnNZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1Yk1GMGdLejBnWlNBcUlHNWJNbDBzSUc1Yk0xMGdLejBnWlNBcUlHNWJOVjBzSUc1Yk5sMGdLejBnWlNBcUlHNWJPRjBzSUc1Yk1WMGdLejBnZENBcUlHNWJNbDBzSUc1Yk5GMGdLejBnZENBcUlHNWJOVjBzSUc1Yk4xMGdLejBnZENBcUlHNWJPRjBzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNRHNnYVNBOElEazdJR2tyS3lscFppQW9kRnRwWFNBaFBUMGdibHRwWFNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR1p5YjIxQmNuSmhlU2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENBNU95QnVLeXNwZEdocGN5NWxiR1Z0Wlc1MGMxdHVYU0E5SUdWYmJpQXJJSFJkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlCY25KaGVTaGxJRDBnVzEwc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2Jsc3dYU3dnWlZ0MElDc2dNVjBnUFNCdVd6RmRMQ0JsVzNRZ0t5QXlYU0E5SUc1Yk1sMHNJR1ZiZENBcklETmRJRDBnYmxzelhTd2daVnQwSUNzZ05GMGdQU0J1V3pSZExDQmxXM1FnS3lBMVhTQTlJRzViTlYwc0lHVmJkQ0FySURaZElEMGdibHMyWFN3Z1pWdDBJQ3NnTjEwZ1BTQnVXemRkTENCbFczUWdLeUE0WFNBOUlHNWJPRjBzSUdVN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVtY205dFFYSnlZWGtvZEdocGN5NWxiR1Z0Wlc1MGN5azdDaUFnSUNCOUNuMDdDbXgwTG5CeWIzUnZkSGx3WlM1cGMwMWhkSEpwZURNZ1BTQWhNRHNLWm5WdVkzUnBiMjRnV1dNb2N5a2dld29nSUNBZ2FXWWdLSE11YkdWdVozUm9JRDA5UFNBd0tTQnlaWFIxY200Z0xURWdMeUF3T3dvZ0lDQWdiR1YwSUdVZ1BTQnpXekJkT3dvZ0lDQWdabTl5S0d4bGRDQjBJRDBnTVN3Z2JpQTlJSE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dLeXQwS1hOYmRGMGdQaUJsSUNZbUlDaGxJRDBnYzF0MFhTazdDaUFnSUNCeVpYUjFjbTRnWlRzS2ZRcDJZWElnVVdRZ1BTQjdDaUFnSUNCSmJuUTRRWEp5WVhrc0NpQWdJQ0JWYVc1ME9FRnljbUY1TEFvZ0lDQWdWV2x1ZERoRGJHRnRjR1ZrUVhKeVlYa3NDaUFnSUNCSmJuUXhOa0Z5Y21GNUxBb2dJQ0FnVldsdWRERTJRWEp5WVhrc0NpQWdJQ0JKYm5Rek1rRnljbUY1TEFvZ0lDQWdWV2x1ZERNeVFYSnlZWGtzQ2lBZ0lDQkdiRzloZERNeVFYSnlZWGtzQ2lBZ0lDQkdiRzloZERZMFFYSnlZWGtLZlRzS1puVnVZM1JwYjI0Z2Qya29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJRzVsZHlCUlpGdHpYU2hsS1RzS2ZRcG1kVzVqZEdsdmJpQnhjeWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZEU1VEtDSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHhPVGs1TDNob2RHMXNJaXdnY3lrN0NuMEtkbUZ5SUhScExDQlpiaUE5SUdOc1lYTnpJSHNLSUNBZ0lITjBZWFJwWXlCblpYUkVZWFJoVlZKTUtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb0wxNWtZWFJoT2k5cExuUmxjM1FvWlM1emNtTXBJSHg4SUhSNWNHVnZaaUJJVkUxTVEyRnVkbUZ6Uld4bGJXVnVkQ0ErSUNKMUlpa2djbVYwZFhKdUlHVXVjM0pqT3dvZ0lDQWdJQ0FnSUd4bGRDQjBPd29nSUNBZ0lDQWdJR2xtSUNobElHbHVjM1JoYm1ObGIyWWdTRlJOVEVOaGJuWmhjMFZzWlcxbGJuUXBJSFFnUFNCbE93b2dJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDBhU0E5SUhGektDSmpZVzUyWVhNaUtTa3NJSFJwTG5kcFpIUm9JRDBnWlM1M2FXUjBhQ3dnZEdrdWFHVnBaMmgwSUQwZ1pTNW9aV2xuYUhRN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2t1WjJWMFEyOXVkR1Y0ZENnaU1tUWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTQnBibk4wWVc1alpXOW1JRWx0WVdkbFJHRjBZU0EvSUc0dWNIVjBTVzFoWjJWRVlYUmhLR1VzSURBc0lEQXBJRG9nYmk1a2NtRjNTVzFoWjJVb1pTd2dNQ3dnTUN3Z1pTNTNhV1IwYUN3Z1pTNW9aV2xuYUhRcExDQjBJRDBnZEdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExuZHBaSFJvSUQ0Z01qQTBPQ0I4ZkNCMExtaGxhV2RvZENBK0lESXdORGdnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiV0ZuWlZWMGFXeHpMbWRsZEVSaGRHRlZVa3c2SUVsdFlXZGxJR052Ym5abGNuUmxaQ0IwYnlCcWNHY2dabTl5SUhCbGNtWnZjbTFoYm1ObElISmxZWE52Ym5NaUxDQmxLU3dnZEM1MGIwUmhkR0ZWVWt3b0ltbHRZV2RsTDJwd1pXY2lMQ0F1TmlrcElEb2dkQzUwYjBSaGRHRlZVa3dvSW1sdFlXZGxMM0J1WnlJcE93b2dJQ0FnZlFwOUxDQkxaQ0E5SURBc0lHOTBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2IzUXVSRVZHUVZWTVZGOUpUVUZIUlN3Z2RDQTlJRzkwTGtSRlJrRlZURlJmVFVGUVVFbE9SeXdnYmlBOUlIWjBMQ0JwSUQwZ2RuUXNJSElnUFNCMGRDd2dieUE5SUZWcExDQmhJRDBnWTNRc0lHd2dQU0J5Yml3Z1l5QTlJREVzSUdnZ1BTQk9kQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2RHaHBjeXdnSW1sa0lpd2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nUzJRckt3b2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxuVjFhV1FnUFNCRmRDZ3BMQ0IwYUdsekxtNWhiV1VnUFNBaUlpd2dkR2hwY3k1cGJXRm5aU0E5SUdVc0lIUm9hWE11Yldsd2JXRndjeUE5SUZ0ZExDQjBhR2x6TG0xaGNIQnBibWNnUFNCMExDQjBhR2x6TG5keVlYQlRJRDBnYml3Z2RHaHBjeTUzY21Gd1ZDQTlJR2tzSUhSb2FYTXViV0ZuUm1sc2RHVnlJRDBnY2l3Z2RHaHBjeTV0YVc1R2FXeDBaWElnUFNCdkxDQjBhR2x6TG1GdWFYTnZkSEp2Y0hrZ1BTQmpMQ0IwYUdsekxtWnZjbTFoZENBOUlHRXNJSFJvYVhNdWFXNTBaWEp1WVd4R2IzSnRZWFFnUFNCdWRXeHNMQ0IwYUdsekxuUjVjR1VnUFNCc0xDQjBhR2x6TG05bVpuTmxkQ0E5SUc1bGR5QllLREFzSURBcExDQjBhR2x6TG5KbGNHVmhkQ0E5SUc1bGR5QllLREVzSURFcExDQjBhR2x6TG1ObGJuUmxjaUE5SUc1bGR5QllLREFzSURBcExDQjBhR2x6TG5KdmRHRjBhVzl1SUQwZ01Dd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdWJXRjBjbWw0SUQwZ2JtVjNJR3gwTENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V3TENCMGFHbHpMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRWdQU0FoTVN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V3TENCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRDQTlJRFFzSUhSb2FYTXVaVzVqYjJScGJtY2dQU0JvTENCMGFHbHpMblZ6WlhKRVlYUmhJRDBnZTMwc0lIUm9hWE11ZG1WeWMybHZiaUE5SURBc0lIUm9hWE11YjI1VmNHUmhkR1VnUFNCdWRXeHNMQ0IwYUdsekxtbHpVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaU0E5SUNFeE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRMbk5sZEZWMlZISmhibk5tYjNKdEtIUm9hWE11YjJabWMyVjBMbmdzSUhSb2FYTXViMlptYzJWMExua3NJSFJvYVhNdWNtVndaV0YwTG5nc0lIUm9hWE11Y21Wd1pXRjBMbmtzSUhSb2FYTXVjbTkwWVhScGIyNHNJSFJvYVhNdVkyVnVkR1Z5TG5nc0lIUm9hWE11WTJWdWRHVnlMbmtwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNWhiV1VnUFNCbExtNWhiV1VzSUhSb2FYTXVhVzFoWjJVZ1BTQmxMbWx0WVdkbExDQjBhR2x6TG0xcGNHMWhjSE1nUFNCbExtMXBjRzFoY0hNdWMyeHBZMlVvTUNrc0lIUm9hWE11YldGd2NHbHVaeUE5SUdVdWJXRndjR2x1Wnl3Z2RHaHBjeTUzY21Gd1V5QTlJR1V1ZDNKaGNGTXNJSFJvYVhNdWQzSmhjRlFnUFNCbExuZHlZWEJVTENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUdVdWJXRm5SbWxzZEdWeUxDQjBhR2x6TG0xcGJrWnBiSFJsY2lBOUlHVXViV2x1Um1sc2RHVnlMQ0IwYUdsekxtRnVhWE52ZEhKdmNIa2dQU0JsTG1GdWFYTnZkSEp2Y0hrc0lIUm9hWE11Wm05eWJXRjBJRDBnWlM1bWIzSnRZWFFzSUhSb2FYTXVhVzUwWlhKdVlXeEdiM0p0WVhRZ1BTQmxMbWx1ZEdWeWJtRnNSbTl5YldGMExDQjBhR2x6TG5SNWNHVWdQU0JsTG5SNWNHVXNJSFJvYVhNdWIyWm1jMlYwTG1OdmNIa29aUzV2Wm1aelpYUXBMQ0IwYUdsekxuSmxjR1ZoZEM1amIzQjVLR1V1Y21Wd1pXRjBLU3dnZEdocGN5NWpaVzUwWlhJdVkyOXdlU2hsTG1ObGJuUmxjaWtzSUhSb2FYTXVjbTkwWVhScGIyNGdQU0JsTG5KdmRHRjBhVzl1TENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0JsTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VzSUhSb2FYTXViV0YwY21sNExtTnZjSGtvWlM1dFlYUnlhWGdwTENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJR1V1WjJWdVpYSmhkR1ZOYVhCdFlYQnpMQ0IwYUdsekxuQnlaVzExYkhScGNHeDVRV3h3YUdFZ1BTQmxMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRXNJSFJvYVhNdVpteHBjRmtnUFNCbExtWnNhWEJaTENCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRDQTlJR1V1ZFc1d1lXTnJRV3hwWjI1dFpXNTBMQ0IwYUdsekxtVnVZMjlrYVc1bklEMGdaUzVsYm1OdlpHbHVaeXdnZEdocGN5NTFjMlZ5UkdGMFlTQTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29aUzUxYzJWeVJHRjBZU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVZ1BUMDlJSFp2YVdRZ01DQjhmQ0IwZVhCbGIyWWdaU0E5UFNBaWMzUnlhVzVuSWpzS0lDQWdJQ0FnSUNCcFppQW9JWFFnSmlZZ1pTNTBaWGgwZFhKbGMxdDBhR2x6TG5WMWFXUmRJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJsTG5SbGVIUjFjbVZ6VzNSb2FYTXVkWFZwWkYwN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGa1lYUmhPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpVkdWNGRIVnlaU0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBiM0k2SUNKVVpYaDBkWEpsTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFhWcFpEb2dkR2hwY3k1MWRXbGtMQW9nSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUIwYUdsekxtNWhiV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhjSEJwYm1jNklIUm9hWE11YldGd2NHbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2NtVndaV0YwT2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkpsY0dWaGRDNTRMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eVpYQmxZWFF1ZVFvZ0lDQWdJQ0FnSUNBZ0lDQmRMQW9nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFE2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViMlptYzJWMExuZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG05bVpuTmxkQzU1Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHNDaUFnSUNBZ0lDQWdJQ0FnSUdObGJuUmxjam9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWpaVzUwWlhJdWVDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTJWdWRHVnlMbmtLSUNBZ0lDQWdJQ0FnSUNBZ1hTd0tJQ0FnSUNBZ0lDQWdJQ0FnY205MFlYUnBiMjQ2SUhSb2FYTXVjbTkwWVhScGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUhkeVlYQTZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWQzSmhjRk1zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuZHlZWEJVQ2lBZ0lDQWdJQ0FnSUNBZ0lGMHNDaUFnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nZEdocGN5NW1iM0p0WVhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUm9hWE11ZEhsd1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1amIyUnBibWM2SUhSb2FYTXVaVzVqYjJScGJtY3NDaUFnSUNBZ0lDQWdJQ0FnSUcxcGJrWnBiSFJsY2pvZ2RHaHBjeTV0YVc1R2FXeDBaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhaMFpwYkhSbGNqb2dkR2hwY3k1dFlXZEdhV3gwWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z1YVhOdmRISnZjSGs2SUhSb2FYTXVZVzVwYzI5MGNtOXdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pteHBjRms2SUhSb2FYTXVabXhwY0Zrc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WlcxMWJIUnBjR3g1UVd4d2FHRTZJSFJvYVhNdWNISmxiWFZzZEdsd2JIbEJiSEJvWVN3S0lDQWdJQ0FnSUNBZ0lDQWdkVzV3WVdOclFXeHBaMjV0Wlc1ME9pQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVcxaFoyVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11YVcxaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBMblYxYVdRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MWRXbGtJRDBnUlhRb0tTa3NJQ0YwSUNZbUlHVXVhVzFoWjJWelcya3VkWFZwWkYwZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNocEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhJZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdMQ0JoSUQwZ2FTNXNaVzVuZEdnN0lHOGdQQ0JoT3lCdkt5c3BhVnR2WFM1cGMwUmhkR0ZVWlhoMGRYSmxJRDhnY2k1d2RYTm9LRjl2S0dsYmIxMHVhVzFoWjJVcEtTQTZJSEl1Y0hWemFDaGZieWhwVzI5ZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NpQTlJRjl2S0drcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNXBiV0ZuWlhOYmFTNTFkV2xrWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxZFdsa09pQnBMblYxYVdRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWEpzT2lCeUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVhVzFoWjJVZ1BTQnBMblYxYVdRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCS1UwOU9Mbk4wY21sdVoybG1lU2gwYUdsekxuVnpaWEpFWVhSaEtTQWhQVDBnSW50OUlpQW1KaUFvYmk1MWMyVnlSR0YwWVNBOUlIUm9hWE11ZFhObGNrUmhkR0VwTENCMElIeDhJQ2hsTG5SbGVIUjFjbVZ6VzNSb2FYTXVkWFZwWkYwZ1BTQnVLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1ScGMzQnZjMlVpQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzJadmNtMVZkaWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWJXRndjR2x1WnlBaFBUMGdhR0VwSUhKbGRIVnliaUJsT3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbUZ3Y0d4NVRXRjBjbWw0TXloMGFHbHpMbTFoZEhKcGVDa3NJR1V1ZUNBOElEQWdmSHdnWlM1NElENGdNU2tnYzNkcGRHTm9LSFJvYVhNdWQzSmhjRk1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUU1ek9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNTRJRDBnWlM1NElDMGdUV0YwYUM1bWJHOXZjaWhsTG5ncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZG5RNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbExuZ2dQU0JsTG5nZ1BDQXdJRDhnTUNBNklERTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCQ2N6b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFMWhkR2d1WVdKektFMWhkR2d1Wm14dmIzSW9aUzU0S1NBbElESXBJRDA5UFNBeElEOGdaUzU0SUQwZ1RXRjBhQzVqWldsc0tHVXVlQ2tnTFNCbExuZ2dPaUJsTG5nZ1BTQmxMbmdnTFNCTllYUm9MbVpzYjI5eUtHVXVlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVdWVTQThJREFnZkh3Z1pTNTVJRDRnTVNrZ2MzZHBkR05vS0hSb2FYTXVkM0poY0ZRcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFNXpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzU1SUQwZ1pTNTVJQzBnVFdGMGFDNW1iRzl2Y2lobExua3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RuUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbmtnUFNCbExua2dQQ0F3SUQ4Z01DQTZJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQkNjem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTFoZEdndVlXSnpLRTFoZEdndVpteHZiM0lvWlM1NUtTQWxJRElwSUQwOVBTQXhJRDhnWlM1NUlEMGdUV0YwYUM1alpXbHNLR1V1ZVNrZ0xTQmxMbmtnT2lCbExua2dQU0JsTG5rZ0xTQk5ZWFJvTG1ac2IyOXlLR1V1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpteHBjRmtnSmlZZ0tHVXVlU0E5SURFZ0xTQmxMbmtwTENCbE93b2dJQ0FnZlFvZ0lDQWdjMlYwSUc1bFpXUnpWWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JsSUQwOVBTQWhNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLenNLSUNBZ0lIMEtmVHNLYjNRdVJFVkdRVlZNVkY5SlRVRkhSU0E5SUhadmFXUWdNRHNLYjNRdVJFVkdRVlZNVkY5TlFWQlFTVTVISUQwZ2FHRTdDbTkwTG5CeWIzUnZkSGx3WlM1cGMxUmxlSFIxY21VZ1BTQWhNRHNLWm5WdVkzUnBiMjRnWDI4b2N5a2dld29nSUNBZ2NtVjBkWEp1SUhSNWNHVnZaaUJJVkUxTVNXMWhaMlZGYkdWdFpXNTBJRHdnSW5VaUlDWW1JSE1nYVc1emRHRnVZMlZ2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUh4OElIUjVjR1Z2WmlCSVZFMU1RMkZ1ZG1GelJXeGxiV1Z1ZENBOElDSjFJaUFtSmlCeklHbHVjM1JoYm1ObGIyWWdTRlJOVEVOaGJuWmhjMFZzWlcxbGJuUWdmSHdnZEhsd1pXOW1JRWx0WVdkbFFtbDBiV0Z3SUR3Z0luVWlJQ1ltSUhNZ2FXNXpkR0Z1WTJWdlppQkpiV0ZuWlVKcGRHMWhjQ0EvSUZsdUxtZGxkRVJoZEdGVlVrd29jeWtnT2lCekxtUmhkR0VnUHlCN0NpQWdJQ0FnSUNBZ1pHRjBZVG9nUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvY3k1a1lYUmhLU3dLSUNBZ0lDQWdJQ0IzYVdSMGFEb2djeTUzYVdSMGFDd0tJQ0FnSUNBZ0lDQm9aV2xuYUhRNklITXVhR1ZwWjJoMExBb2dJQ0FnSUNBZ0lIUjVjR1U2SUhNdVpHRjBZUzVqYjI1emRISjFZM1J2Y2k1dVlXMWxDaUFnSUNCOUlEb2dLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VkdWNGRIVnlaVG9nVlc1aFlteGxJSFJ2SUhObGNtbGhiR2w2WlNCVVpYaDBkWEpsTGlJcExDQjdmU2s3Q24wS2RtRnlJRlpsSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlEQXNJSFFnUFNBd0xDQnVJRDBnTUN3Z2FTQTlJREVwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE11ZVNBOUlIUXNJSFJvYVhNdWVpQTlJRzRzSUhSb2FYTXVkeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZDJsa2RHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVqc0tJQ0FnSUgwS0lDQWdJSE5sZENCM2FXUjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTU2SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR2RsZENCb1pXbG5hSFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkenNLSUNBZ0lIMEtJQ0FnSUhObGRDQm9aV2xuYUhRb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWR5QTlJR1U3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6TG5vZ1BTQnVMQ0IwYUdsekxuY2dQU0JwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdaU3dnZEdocGN5NTZJRDBnWlN3Z2RHaHBjeTUzSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTZJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGY29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuY2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXRjRzl1Wlc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZUNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTU1SUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbm9nUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbm83Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuYzdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbWx1WkdWNElHbHpJRzkxZENCdlppQnlZVzVuWlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5nc0lIUm9hWE11ZVN3Z2RHaHBjeTU2TENCMGFHbHpMbmNwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDd2dkR2hwY3k1NUlEMGdaUzU1TENCMGFHbHpMbm9nUFNCbExub3NJSFJvYVhNdWR5QTlJR1V1ZHlBaFBUMGdkbTlwWkNBd0lEOGdaUzUzSURvZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pRNklDNWhaR1FvS1NCdWIzY2diMjVzZVNCaFkyTmxjSFJ6SUc5dVpTQmhjbWQxYldWdWRDNGdWWE5sSUM1aFpHUldaV04wYjNKektDQmhMQ0JpSUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1aFpHUldaV04wYjNKektHVXNJSFFwS1NBNklDaDBhR2x6TG5nZ0t6MGdaUzU0TENCMGFHbHpMbmtnS3owZ1pTNTVMQ0IwYUdsekxub2dLejBnWlM1NkxDQjBhR2x6TG5jZ0t6MGdaUzUzTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdGa1pGTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQmxMQ0IwYUdsekxua2dLejBnWlN3Z2RHaHBjeTU2SUNzOUlHVXNJSFJvYVhNdWR5QXJQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa1ZtVmpkRzl5Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1V1ZUNBcklIUXVlQ3dnZEdocGN5NTVJRDBnWlM1NUlDc2dkQzU1TENCMGFHbHpMbm9nUFNCbExub2dLeUIwTG5vc0lIUm9hWE11ZHlBOUlHVXVkeUFySUhRdWR5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRk5qWVd4bFpGWmxZM1J2Y2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXJQU0JsTG5nZ0tpQjBMQ0IwYUdsekxua2dLejBnWlM1NUlDb2dkQ3dnZEdocGN5NTZJQ3M5SUdVdWVpQXFJSFFzSUhSb2FYTXVkeUFyUFNCbExuY2dLaUIwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNWaUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlORG9nTG5OMVlpZ3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbk4xWWxabFkzUnZjbk1vSUdFc0lHSWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbk4xWWxabFkzUnZjbk1vWlN3Z2RDa3BJRG9nS0hSb2FYTXVlQ0F0UFNCbExuZ3NJSFJvYVhNdWVTQXRQU0JsTG5rc0lIUm9hWE11ZWlBdFBTQmxMbm9zSUhSb2FYTXVkeUF0UFNCbExuY3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdjM1ZpVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQzA5SUdVc0lIUm9hWE11ZVNBdFBTQmxMQ0IwYUdsekxub2dMVDBnWlN3Z2RHaHBjeTUzSUMwOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQzBnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnTFNCMExua3NJSFJvYVhNdWVpQTlJR1V1ZWlBdElIUXVlaXdnZEdocGN5NTNJRDBnWlM1M0lDMGdkQzUzTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2owZ1pTNTRMQ0IwYUdsekxua2dLajBnWlM1NUxDQjBhR2x6TG5vZ0tqMGdaUzU2TENCMGFHbHpMbmNnS2owZ1pTNTNMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tqMGdaU3dnZEdocGN5NTVJQ285SUdVc0lIUm9hWE11ZWlBcVBTQmxMQ0IwYUdsekxuY2dLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE5DaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuZ3NJRzRnUFNCMGFHbHpMbmtzSUdrZ1BTQjBhR2x6TG5vc0lISWdQU0IwYUdsekxuY3NJRzhnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCdld6QmRJQ29nZENBcklHOWJORjBnS2lCdUlDc2diMXM0WFNBcUlHa2dLeUJ2V3pFeVhTQXFJSElzSUhSb2FYTXVlU0E5SUc5Yk1WMGdLaUIwSUNzZ2IxczFYU0FxSUc0Z0t5QnZXemxkSUNvZ2FTQXJJRzliTVROZElDb2djaXdnZEdocGN5NTZJRDBnYjFzeVhTQXFJSFFnS3lCdld6WmRJQ29nYmlBcklHOWJNVEJkSUNvZ2FTQXJJRzliTVRSZElDb2djaXdnZEdocGN5NTNJRDBnYjFzelhTQXFJSFFnS3lCdld6ZGRJQ29nYmlBcklHOWJNVEZkSUNvZ2FTQXJJRzliTVRWZElDb2djaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwZG1sa1pWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YlhWc2RHbHdiSGxUWTJGc1lYSW9NU0F2SUdVcE93b2dJQ0FnZlFvZ0lDQWdjMlYwUVhocGMwRnVaMnhsUm5KdmJWRjFZWFJsY201cGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SURJZ0tpQk5ZWFJvTG1GamIzTW9aUzUzS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUUxaGRHZ3VjM0Z5ZENneElDMGdaUzUzSUNvZ1pTNTNLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0E4SURGbExUUWdQeUFvZEdocGN5NTRJRDBnTVN3Z2RHaHBjeTU1SUQwZ01Dd2dkR2hwY3k1NklEMGdNQ2tnT2lBb2RHaHBjeTU0SUQwZ1pTNTRJQzhnZEN3Z2RHaHBjeTU1SUQwZ1pTNTVJQzhnZEN3Z2RHaHBjeTU2SUQwZ1pTNTZJQzhnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkJlR2x6UVc1bmJHVkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBMQ0J1TENCcExDQnlMQ0JzSUQwZ1pTNWxiR1Z0Wlc1MGN5d2dZeUE5SUd4Yk1GMHNJR2dnUFNCc1d6UmRMQ0IxSUQwZ2JGczRYU3dnWkNBOUlHeGJNVjBzSUdZZ1BTQnNXelZkTENCdElEMGdiRnM1WFN3Z2VDQTlJR3hiTWwwc0lIWWdQU0JzV3paZExDQm5JRDBnYkZzeE1GMDdDaUFnSUNBZ0lDQWdhV1lnS0UxaGRHZ3VZV0p6S0dnZ0xTQmtLU0E4SUM0d01TQW1KaUJOWVhSb0xtRmljeWgxSUMwZ2VDa2dQQ0F1TURFZ0ppWWdUV0YwYUM1aFluTW9iU0F0SUhZcElEd2dMakF4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoTllYUm9MbUZpY3lob0lDc2daQ2tnUENBdU1TQW1KaUJOWVhSb0xtRmljeWgxSUNzZ2VDa2dQQ0F1TVNBbUppQk5ZWFJvTG1GaWN5aHRJQ3NnZGlrZ1BDQXVNU0FtSmlCTllYUm9MbUZpY3loaklDc2daaUFySUdjZ0xTQXpLU0E4SUM0eEtTQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Td2dNQ3dnTUN3Z01Da3NJSFJvYVhNN0NpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCTllYUm9MbEJKT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlDaGpJQ3NnTVNrZ0x5QXlMQ0I1SUQwZ0tHWWdLeUF4S1NBdklESXNJR0lnUFNBb1p5QXJJREVwSUM4Z01pd2dRU0E5SUNob0lDc2daQ2tnTHlBMExDQk1JRDBnS0hVZ0t5QjRLU0F2SURRc0lFa2dQU0FvYlNBcklIWXBJQzhnTkRzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOGdQaUI1SUNZbUlGOGdQaUJpSUQ4Z1h5QThJQzR3TVNBL0lDaHVJRDBnTUN3Z2FTQTlJQzQzTURjeE1EWTNPREVzSUhJZ1BTQXVOekEzTVRBMk56Z3hLU0E2SUNodUlEMGdUV0YwYUM1emNYSjBLRjhwTENCcElEMGdRU0F2SUc0c0lISWdQU0JNSUM4Z2Jpa2dPaUI1SUQ0Z1lpQS9JSGtnUENBdU1ERWdQeUFvYmlBOUlDNDNNRGN4TURZM09ERXNJR2tnUFNBd0xDQnlJRDBnTGpjd056RXdOamM0TVNrZ09pQW9hU0E5SUUxaGRHZ3VjM0Z5ZENoNUtTd2diaUE5SUVFZ0x5QnBMQ0J5SUQwZ1NTQXZJR2twSURvZ1lpQThJQzR3TVNBL0lDaHVJRDBnTGpjd056RXdOamM0TVN3Z2FTQTlJQzQzTURjeE1EWTNPREVzSUhJZ1BTQXdLU0E2SUNoeUlEMGdUV0YwYUM1emNYSjBLR0lwTENCdUlEMGdUQ0F2SUhJc0lHa2dQU0JKSUM4Z2Npa3NJSFJvYVhNdWMyVjBLRzRzSUdrc0lISXNJSFFwTENCMGFHbHpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRTFoZEdndWMzRnlkQ2dvZGlBdElHMHBJQ29nS0hZZ0xTQnRLU0FySUNoMUlDMGdlQ2tnS2lBb2RTQXRJSGdwSUNzZ0tHUWdMU0JvS1NBcUlDaGtJQzBnYUNrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9MbUZpY3lod0tTQThJQzR3TURFZ0ppWWdLSEFnUFNBeEtTd2dkR2hwY3k1NElEMGdLSFlnTFNCdEtTQXZJSEFzSUhSb2FYTXVlU0E5SUNoMUlDMGdlQ2tnTHlCd0xDQjBhR2x6TG5vZ1BTQW9aQ0F0SUdncElDOGdjQ3dnZEdocGN5NTNJRDBnVFdGMGFDNWhZMjl6S0NoaklDc2daaUFySUdjZ0xTQXhLU0F2SURJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXbHVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTRMQ0JsTG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xcGJpaDBhR2x6TG5rc0lHVXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3ViV2x1S0hSb2FYTXVlaXdnWlM1NktTd2dkR2hwY3k1M0lEMGdUV0YwYUM1dGFXNG9kR2hwY3k1M0xDQmxMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGNEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1dFlYZ29kR2hwY3k1NExDQmxMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbTFoZUNoMGFHbHpMbmtzSUdVdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndWJXRjRLSFJvYVhNdWVpd2daUzU2S1N3Z2RHaHBjeTUzSUQwZ1RXRjBhQzV0WVhnb2RHaHBjeTUzTENCbExuY3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhBb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2hsTG5nc0lFMWhkR2d1YldsdUtIUXVlQ3dnZEdocGN5NTRLU2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0dVdWVTd2dUV0YwYUM1dGFXNG9kQzU1TENCMGFHbHpMbmtwS1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzV0WVhnb1pTNTZMQ0JOWVhSb0xtMXBiaWgwTG5vc0lIUm9hWE11ZWlrcExDQjBhR2x6TG5jZ1BTQk5ZWFJvTG0xaGVDaGxMbmNzSUUxaGRHZ3ViV2x1S0hRdWR5d2dkR2hwY3k1M0tTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0ZOallXeGhjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlQ2twTENCMGFHbHpMbmtnUFNCTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0IwYUdsekxua3BLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvWlN3Z1RXRjBhQzV0YVc0b2RDd2dkR2hwY3k1NktTa3NJSFJvYVhNdWR5QTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZHlrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJNWlc1bmRHZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9iaUI4ZkNBeEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0J1S1NrcE93b2dJQ0FnZlFvZ0lDQWdabXh2YjNJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtWnNiMjl5S0hSb2FYTXVlaWtzSUhSb2FYTXVkeUE5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTUzS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdObGFXd29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVkyVnBiQ2gwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtTmxhV3dvZEdocGN5NTVLU3dnZEdocGN5NTZJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVlaWtzSUhSb2FYTXVkeUE5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MWJtUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXliM1Z1WkNoMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9Mbkp2ZFc1a0tIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1Y205MWJtUW9kR2hwY3k1M0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkVzVrVkc5YVpYSnZLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0IwYUdsekxuZ2dQQ0F3SUQ4Z1RXRjBhQzVqWldsc0tIUm9hWE11ZUNrZ09pQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVDa3NJSFJvYVhNdWVTQTlJSFJvYVhNdWVTQThJREFnUHlCTllYUm9MbU5sYVd3b2RHaHBjeTU1S1NBNklFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NUtTd2dkR2hwY3k1NklEMGdkR2hwY3k1NklEd2dNQ0EvSUUxaGRHZ3VZMlZwYkNoMGFHbHpMbm9wSURvZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5vcExDQjBhR2x6TG5jZ1BTQjBhR2x6TG5jZ1BDQXdJRDhnVFdGMGFDNWpaV2xzS0hSb2FYTXVkeWtnT2lCTllYUm9MbVpzYjI5eUtIUm9hWE11ZHlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdVpXZGhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUMxMGFHbHpMbmdzSUhSb2FYTXVlU0E5SUMxMGFHbHpMbmtzSUhSb2FYTXVlaUE5SUMxMGFHbHpMbm9zSUhSb2FYTXVkeUE5SUMxMGFHbHpMbmNzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYjNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tpQmxMbmdnS3lCMGFHbHpMbmtnS2lCbExua2dLeUIwYUdsekxub2dLaUJsTG5vZ0t5QjBhR2x6TG5jZ0tpQmxMbmM3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2hUY1NncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1SUNzZ2RHaHBjeTU2SUNvZ2RHaHBjeTU2SUNzZ2RHaHBjeTUzSUNvZ2RHaHBjeTUzT3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1SUNzZ2RHaHBjeTU2SUNvZ2RHaHBjeTU2SUNzZ2RHaHBjeTUzSUNvZ2RHaHBjeTUzS1RzS0lDQWdJSDBLSUNBZ0lHMWhibWhoZEhSaGJreGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb2RHaHBjeTU0S1NBcklFMWhkR2d1WVdKektIUm9hWE11ZVNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5vcElDc2dUV0YwYUM1aFluTW9kR2hwY3k1M0tUc0tJQ0FnSUgwS0lDQWdJRzV2Y20xaGJHbDZaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvZEdocGN5NXNaVzVuZEdnb0tTQjhmQ0F4S1RzS0lDQWdJSDBLSUNBZ0lITmxkRXhsYm1kMGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbEtDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ3M5SUNobExuZ2dMU0IwYUdsekxuZ3BJQ29nZEN3Z2RHaHBjeTU1SUNzOUlDaGxMbmtnTFNCMGFHbHpMbmtwSUNvZ2RDd2dkR2hwY3k1NklDczlJQ2hsTG5vZ0xTQjBhR2x6TG5vcElDb2dkQ3dnZEdocGN5NTNJQ3M5SUNobExuY2dMU0IwYUdsekxuY3BJQ29nZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4bGNuQldaV04wYjNKektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ3NnS0hRdWVDQXRJR1V1ZUNrZ0tpQnVMQ0IwYUdsekxua2dQU0JsTG5rZ0t5QW9kQzU1SUMwZ1pTNTVLU0FxSUc0c0lIUm9hWE11ZWlBOUlHVXVlaUFySUNoMExub2dMU0JsTG5vcElDb2diaXdnZEdocGN5NTNJRDBnWlM1M0lDc2dLSFF1ZHlBdElHVXVkeWtnS2lCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNTRJRDA5UFNCMGFHbHpMbmdnSmlZZ1pTNTVJRDA5UFNCMGFHbHpMbmtnSmlZZ1pTNTZJRDA5UFNCMGFHbHpMbm9nSmlZZ1pTNTNJRDA5UFNCMGFHbHpMbmM3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pWdDBYU3dnZEdocGN5NTVJRDBnWlZ0MElDc2dNVjBzSUhSb2FYTXVlaUE5SUdWYmRDQXJJREpkTENCMGFHbHpMbmNnUFNCbFczUWdLeUF6WFN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlFYSnlZWGtvWlNBOUlGdGRMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2RHaHBjeTU0TENCbFczUWdLeUF4WFNBOUlIUm9hWE11ZVN3Z1pWdDBJQ3NnTWwwZ1BTQjBhR2x6TG5vc0lHVmJkQ0FySUROZElEMGdkR2hwY3k1M0xDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0lUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjalE2SUc5bVpuTmxkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtJR1p5YjIwZ0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9LUzRpS1N3Z2RHaHBjeTU0SUQwZ1pTNW5aWFJZS0hRcExDQjBhR2x6TG5rZ1BTQmxMbWRsZEZrb2RDa3NJSFJvYVhNdWVpQTlJR1V1WjJWMFdpaDBLU3dnZEdocGN5NTNJRDBnWlM1blpYUlhLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21GdVpHOXRLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbm9nUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxuY2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ0tsdFRlVzFpYjJ3dWFYUmxjbUYwYjNKZEtDa2dld29nSUNBZ0lDQWdJSGxwWld4a0lIUm9hWE11ZUN3Z2VXbGxiR1FnZEdocGN5NTVMQ0I1YVdWc1pDQjBhR2x6TG5vc0lIbHBaV3hrSUhSb2FYTXVkenNLSUNBZ0lIMEtmVHNLVm1VdWNISnZkRzkwZVhCbExtbHpWbVZqZEc5eU5DQTlJQ0V3T3dwMllYSWdRWFFnUFNCamJHRnpjeUJsZUhSbGJtUnpJRVZ1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRnUFNCN2ZTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5kcFpIUm9JRDBnWlN3Z2RHaHBjeTVvWldsbmFIUWdQU0IwTENCMGFHbHpMbVJsY0hSb0lEMGdNU3dnZEdocGN5NXpZMmx6YzI5eUlEMGdibVYzSUZabEtEQXNJREFzSUdVc0lIUXBMQ0IwYUdsekxuTmphWE56YjNKVVpYTjBJRDBnSVRFc0lIUm9hWE11ZG1sbGQzQnZjblFnUFNCdVpYY2dWbVVvTUN3Z01Dd2daU3dnZENrc0lIUm9hWE11ZEdWNGRIVnlaU0E5SUc1bGR5QnZkQ2gyYjJsa0lEQXNJRzR1YldGd2NHbHVaeXdnYmk1M2NtRndVeXdnYmk1M2NtRndWQ3dnYmk1dFlXZEdhV3gwWlhJc0lHNHViV2x1Um1sc2RHVnlMQ0J1TG1admNtMWhkQ3dnYmk1MGVYQmxMQ0J1TG1GdWFYTnZkSEp2Y0hrc0lHNHVaVzVqYjJScGJtY3BMQ0IwYUdsekxuUmxlSFIxY21VdWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDBnSVRBc0lIUm9hWE11ZEdWNGRIVnlaUzVwYldGblpTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2c2SURFS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnYmk1blpXNWxjbUYwWlUxcGNHMWhjSE1nSVQwOUlIWnZhV1FnTUNBL0lHNHVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEb2dJVEVzSUhSb2FYTXVkR1Y0ZEhWeVpTNXBiblJsY201aGJFWnZjbTFoZENBOUlHNHVhVzUwWlhKdVlXeEdiM0p0WVhRZ0lUMDlJSFp2YVdRZ01DQS9JRzR1YVc1MFpYSnVZV3hHYjNKdFlYUWdPaUJ1ZFd4c0xDQjBhR2x6TG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5SUQwZ2JpNXRhVzVHYVd4MFpYSWdJVDA5SUhadmFXUWdNQ0EvSUc0dWJXbHVSbWxzZEdWeUlEb2dkSFFzSUhSb2FYTXVaR1Z3ZEdoQ2RXWm1aWElnUFNCdUxtUmxjSFJvUW5WbVptVnlJQ0U5UFNCMmIybGtJREFnUHlCdUxtUmxjSFJvUW5WbVptVnlJRG9nSVRBc0lIUm9hWE11YzNSbGJtTnBiRUoxWm1abGNpQTlJRzR1YzNSbGJtTnBiRUoxWm1abGNpQWhQVDBnZG05cFpDQXdJRDhnYmk1emRHVnVZMmxzUW5WbVptVnlJRG9nSVRFc0lIUm9hWE11WkdWd2RHaFVaWGgwZFhKbElEMGdiaTVrWlhCMGFGUmxlSFIxY21VZ0lUMDlJSFp2YVdRZ01DQS9JRzR1WkdWd2RHaFVaWGgwZFhKbElEb2diblZzYkRzS0lDQWdJSDBLSUNBZ0lITmxkRlJsZUhSMWNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQjBhR2x6TG5kcFpIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhSb2FYTXVhR1ZwWjJoMExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFEb2dkR2hwY3k1a1pYQjBhQW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCelpYUlRhWHBsS0dVc0lIUXNJRzRnUFNBeEtTQjdDaUFnSUNBZ0lDQWdLSFJvYVhNdWQybGtkR2dnSVQwOUlHVWdmSHdnZEdocGN5NW9aV2xuYUhRZ0lUMDlJSFFnZkh3Z2RHaHBjeTVrWlhCMGFDQWhQVDBnYmlrZ0ppWWdLSFJvYVhNdWQybGtkR2dnUFNCbExDQjBhR2x6TG1obGFXZG9kQ0E5SUhRc0lIUm9hWE11WkdWd2RHZ2dQU0J1TENCMGFHbHpMblJsZUhSMWNtVXVhVzFoWjJVdWQybGtkR2dnUFNCbExDQjBhR2x6TG5SbGVIUjFjbVV1YVcxaFoyVXVhR1ZwWjJoMElEMGdkQ3dnZEdocGN5NTBaWGgwZFhKbExtbHRZV2RsTG1SbGNIUm9JRDBnYml3Z2RHaHBjeTVrYVhOd2IzTmxLQ2twTENCMGFHbHpMblpwWlhkd2IzSjBMbk5sZENnd0xDQXdMQ0JsTENCMEtTd2dkR2hwY3k1elkybHpjMjl5TG5ObGRDZ3dMQ0F3TENCbExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1M2FXUjBhQ0E5SUdVdWQybGtkR2dzSUhSb2FYTXVhR1ZwWjJoMElEMGdaUzVvWldsbmFIUXNJSFJvYVhNdVpHVndkR2dnUFNCbExtUmxjSFJvTENCMGFHbHpMblpwWlhkd2IzSjBMbU52Y0hrb1pTNTJhV1YzY0c5eWRDa3NJSFJvYVhNdWRHVjRkSFZ5WlNBOUlHVXVkR1Y0ZEhWeVpTNWpiRzl1WlNncExDQjBhR2x6TG5SbGVIUjFjbVV1YVcxaFoyVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDNHVMblJvYVhNdWRHVjRkSFZ5WlM1cGJXRm5aUW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaR1Z3ZEdoQ2RXWm1aWElnUFNCbExtUmxjSFJvUW5WbVptVnlMQ0IwYUdsekxuTjBaVzVqYVd4Q2RXWm1aWElnUFNCbExuTjBaVzVqYVd4Q2RXWm1aWElzSUhSb2FYTXVaR1Z3ZEdoVVpYaDBkWEpsSUQwZ1pTNWtaWEIwYUZSbGVIUjFjbVVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSmthWE53YjNObElnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRcDlPd3BCZEM1d2NtOTBiM1I1Y0dVdWFYTlhaV0pIVEZKbGJtUmxjbFJoY21kbGRDQTlJQ0V3T3dwMllYSWdXbU1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRUYwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTUwWlhoMGRYSmxPd29nSUNBZ0lDQWdJSFJvYVhNdWRHVjRkSFZ5WlNBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0J1T3lCeUt5c3BkR2hwY3k1MFpYaDBkWEpsVzNKZElEMGdhUzVqYkc5dVpTZ3BPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUybDZaU2hsTENCMExDQnVJRDBnTVNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuZHBaSFJvSUNFOVBTQmxJSHg4SUhSb2FYTXVhR1ZwWjJoMElDRTlQU0IwSUh4OElIUm9hWE11WkdWd2RHZ2dJVDA5SUc0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTNhV1IwYUNBOUlHVXNJSFJvYVhNdWFHVnBaMmgwSUQwZ2RDd2dkR2hwY3k1a1pYQjBhQ0E5SUc0N0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0IwYUdsekxuUmxlSFIxY21VdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYUm9hWE11ZEdWNGRIVnlaVnRwWFM1cGJXRm5aUzUzYVdSMGFDQTlJR1VzSUhSb2FYTXVkR1Y0ZEhWeVpWdHBYUzVwYldGblpTNW9aV2xuYUhRZ1BTQjBMQ0IwYUdsekxuUmxlSFIxY21WYmFWMHVhVzFoWjJVdVpHVndkR2dnUFNCdU93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0J2YzJVb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZG1sbGQzQnZjblF1YzJWMEtEQXNJREFzSUdVc0lIUXBMQ0IwYUdsekxuTmphWE56YjNJdWMyVjBLREFzSURBc0lHVXNJSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWthWE53YjNObEtDa3NJSFJvYVhNdWQybGtkR2dnUFNCbExuZHBaSFJvTENCMGFHbHpMbWhsYVdkb2RDQTlJR1V1YUdWcFoyaDBMQ0IwYUdsekxtUmxjSFJvSUQwZ1pTNWtaWEIwYUN3Z2RHaHBjeTUyYVdWM2NHOXlkQzV6WlhRb01Dd2dNQ3dnZEdocGN5NTNhV1IwYUN3Z2RHaHBjeTVvWldsbmFIUXBMQ0IwYUdsekxuTmphWE56YjNJdWMyVjBLREFzSURBc0lIUm9hWE11ZDJsa2RHZ3NJSFJvYVhNdWFHVnBaMmgwS1N3Z2RHaHBjeTVrWlhCMGFFSjFabVpsY2lBOUlHVXVaR1Z3ZEdoQ2RXWm1aWElzSUhSb2FYTXVjM1JsYm1OcGJFSjFabVpsY2lBOUlHVXVjM1JsYm1OcGJFSjFabVpsY2l3Z2RHaHBjeTVrWlhCMGFGUmxlSFIxY21VZ1BTQmxMbVJsY0hSb1ZHVjRkSFZ5WlN3Z2RHaHBjeTUwWlhoMGRYSmxMbXhsYm1kMGFDQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWRHVjRkSFZ5WlM1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGRHaHBjeTUwWlhoMGRYSmxXM1JkSUQwZ1pTNTBaWGgwZFhKbFczUmRMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDbjA3Q2xwakxuQnliM1J2ZEhsd1pTNXBjMWRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpJRDBnSVRBN0NuWmhjaUJZY3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nUVhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlBOUlIdDlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5OaGJYQnNaWE1nUFNBMExDQjBhR2x6TG1sbmJtOXlaVVJsY0hSb1JtOXlUWFZzZEdsellXMXdiR1ZEYjNCNUlEMGdiaTVwWjI1dmNtVkVaWEIwYUNBaFBUMGdkbTlwWkNBd0lEOGdiaTVwWjI1dmNtVkVaWEIwYUNBNklDRXdMQ0IwYUdsekxuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTQTlJRzR1ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUNFOVBTQjJiMmxrSURBZ1B5QnVMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0E2SUNFeExDQjBhR2x6TG5WelpWSmxibVJsY21KMVptWmxjaUE5SUhSb2FYTXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDA5UFNBaE1Uc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVMbU5oYkd3b2RHaHBjeXdnWlNrc0lIUm9hWE11YzJGdGNHeGxjeUE5SUdVdWMyRnRjR3hsY3l3Z2RHaHBjeTUxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVVnUFNCbExuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTd2dkR2hwY3k1MWMyVlNaVzVrWlhKaWRXWm1aWElnUFNCbExuVnpaVkpsYm1SbGNtSjFabVpsY2l3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLV0hNdWNISnZkRzkwZVhCbExtbHpWMlZpUjB4TmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkQ0E5SUNFd093cDJZWElnWjNRZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNQ3dnZENBOUlEQXNJRzRnUFNBd0xDQnBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHVXNJSFJvYVhNdVgza2dQU0IwTENCMGFHbHpMbDk2SUQwZ2Jpd2dkR2hwY3k1ZmR5QTlJR2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nYzJ4bGNuQW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklGTjBZWFJwWXlBdWMyeGxjbkFvS1NCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnY1cwdWMyeGxjbkJSZFdGMFpYSnVhVzl1Y3lnZ2NXRXNJSEZpTENCMElDa2dhVzV6ZEdWaFpDNGlLU3dnYmk1emJHVnljRkYxWVhSbGNtNXBiMjV6S0dVc0lIUXNJR2twT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhOc1pYSndSbXhoZENobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQnVXMmtnS3lBd1hTd2dZeUE5SUc1YmFTQXJJREZkTENCb0lEMGdibHRwSUNzZ01sMHNJSFVnUFNCdVcya2dLeUF6WFN3Z1pDQTlJSEpiYnlBcklEQmRMQ0JtSUQwZ2NsdHZJQ3NnTVYwc0lHMGdQU0J5VzI4Z0t5QXlYU3dnZUNBOUlISmJieUFySUROZE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUQwOVBTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVmJkQ0FySURCZElEMGdiQ3dnWlZ0MElDc2dNVjBnUFNCakxDQmxXM1FnS3lBeVhTQTlJR2dzSUdWYmRDQXJJRE5kSUQwZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1lTQTlQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsVzNRZ0t5QXdYU0E5SUdRc0lHVmJkQ0FySURGZElEMGdaaXdnWlZ0MElDc2dNbDBnUFNCdExDQmxXM1FnS3lBelhTQTlJSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFVnSVQwOUlIZ2dmSHdnYkNBaFBUMGdaQ0I4ZkNCaklDRTlQU0JtSUh4OElHZ2dJVDA5SUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0F4SUMwZ1lTd2daeUE5SUd3Z0tpQmtJQ3NnWXlBcUlHWWdLeUJvSUNvZ2JTQXJJSFVnS2lCNExDQndJRDBnWnlBK1BTQXdJRDhnTVNBNklDMHhMQ0JmSUQwZ01TQXRJR2NnS2lCbk93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1h5QStJRTUxYldKbGNpNUZVRk5KVEU5T0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlFMWhkR2d1YzNGeWRDaGZLU3dnUVNBOUlFMWhkR2d1WVhSaGJqSW9ZaXdnWnlBcUlIQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkaUE5SUUxaGRHZ3VjMmx1S0hZZ0tpQkJLU0F2SUdJc0lHRWdQU0JOWVhSb0xuTnBiaWhoSUNvZ1FTa2dMeUJpT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnWVNBcUlIQTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNJRDBnYkNBcUlIWWdLeUJrSUNvZ2VTd2dZeUE5SUdNZ0tpQjJJQ3NnWmlBcUlIa3NJR2dnUFNCb0lDb2dkaUFySUcwZ0tpQjVMQ0IxSUQwZ2RTQXFJSFlnS3lCNElDb2dlU3dnZGlBOVBUMGdNU0F0SUdFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpTVNBOUlERWdMeUJOWVhSb0xuTnhjblFvYkNBcUlHd2dLeUJqSUNvZ1l5QXJJR2dnS2lCb0lDc2dkU0FxSUhVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDQXFQU0JpTVN3Z1l5QXFQU0JpTVN3Z2FDQXFQU0JpTVN3Z2RTQXFQU0JpTVRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JsVzNSZElEMGdiQ3dnWlZ0MElDc2dNVjBnUFNCakxDQmxXM1FnS3lBeVhTQTlJR2dzSUdWYmRDQXJJRE5kSUQwZ2RUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QnRkV3gwYVhCc2VWRjFZWFJsY201cGIyNXpSbXhoZENobExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVcybGRMQ0JzSUQwZ2JsdHBJQ3NnTVYwc0lHTWdQU0J1VzJrZ0t5QXlYU3dnYUNBOUlHNWJhU0FySUROZExDQjFJRDBnY2x0dlhTd2daQ0E5SUhKYmJ5QXJJREZkTENCbUlEMGdjbHR2SUNzZ01sMHNJRzBnUFNCeVcyOGdLeUF6WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlZ0MFhTQTlJR0VnS2lCdElDc2dhQ0FxSUhVZ0t5QnNJQ29nWmlBdElHTWdLaUJrTENCbFczUWdLeUF4WFNBOUlHd2dLaUJ0SUNzZ2FDQXFJR1FnS3lCaklDb2dkU0F0SUdFZ0tpQm1MQ0JsVzNRZ0t5QXlYU0E5SUdNZ0tpQnRJQ3NnYUNBcUlHWWdLeUJoSUNvZ1pDQXRJR3dnS2lCMUxDQmxXM1FnS3lBelhTQTlJR2dnS2lCdElDMGdZU0FxSUhVZ0xTQnNJQ29nWkNBdElHTWdLaUJtTENCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZUNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIa29aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM2tnUFNCbExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZWlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZWpzS0lDQWdJSDBLSUNBZ0lITmxkQ0I2S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5NklEMGdaU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIY29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzYzdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2R5aGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZkeUE5SUdVc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1RzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCbExDQjBhR2x6TGw5NUlEMGdkQ3dnZEdocGN5NWZlaUE5SUc0c0lIUm9hWE11WDNjZ1BTQnBMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kR2hwY3k1ZmVDd2dkR2hwY3k1ZmVTd2dkR2hwY3k1ZmVpd2dkR2hwY3k1ZmR5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQTlJR1V1ZUN3Z2RHaHBjeTVmZVNBOUlHVXVlU3dnZEdocGN5NWZlaUE5SUdVdWVpd2dkR2hwY3k1ZmR5QTlJR1V1ZHl3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVVYxYkdWeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9JU2hsSUNZbUlHVXVhWE5GZFd4bGNpa3BJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lWRWhTUlVVdVVYVmhkR1Z5Ym1sdmJqb2dMbk5sZEVaeWIyMUZkV3hsY2lncElHNXZkeUJsZUhCbFkzUnpJR0Z1SUVWMWJHVnlJSEp2ZEdGMGFXOXVJSEpoZEdobGNpQjBhR0Z1SUdFZ1ZtVmpkRzl5TXlCaGJtUWdiM0prWlhJdUlpazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbDk0TENCcElEMGdaUzVmZVN3Z2NpQTlJR1V1WDNvc0lHOGdQU0JsTGw5dmNtUmxjaXdnWVNBOUlFMWhkR2d1WTI5ekxDQnNJRDBnVFdGMGFDNXphVzRzSUdNZ1BTQmhLRzRnTHlBeUtTd2dhQ0E5SUdFb2FTQXZJRElwTENCMUlEMGdZU2h5SUM4Z01pa3NJR1FnUFNCc0tHNGdMeUF5S1N3Z1ppQTlJR3dvYVNBdklESXBMQ0J0SUQwZ2JDaHlJQzhnTWlrN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0c4cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSllXVm9pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdRZ0tpQm9JQ29nZFNBcklHTWdLaUJtSUNvZ2JTd2dkR2hwY3k1ZmVTQTlJR01nS2lCbUlDb2dkU0F0SUdRZ0tpQm9JQ29nYlN3Z2RHaHBjeTVmZWlBOUlHTWdLaUJvSUNvZ2JTQXJJR1FnS2lCbUlDb2dkU3dnZEdocGN5NWZkeUE5SUdNZ0tpQm9JQ29nZFNBdElHUWdLaUJtSUNvZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWldGb2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1FnS2lCb0lDb2dkU0FySUdNZ0tpQm1JQ29nYlN3Z2RHaHBjeTVmZVNBOUlHTWdLaUJtSUNvZ2RTQXRJR1FnS2lCb0lDb2diU3dnZEdocGN5NWZlaUE5SUdNZ0tpQm9JQ29nYlNBdElHUWdLaUJtSUNvZ2RTd2dkR2hwY3k1ZmR5QTlJR01nS2lCb0lDb2dkU0FySUdRZ0tpQm1JQ29nYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0phV0ZraU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHUWdLaUJvSUNvZ2RTQXRJR01nS2lCbUlDb2diU3dnZEdocGN5NWZlU0E5SUdNZ0tpQm1JQ29nZFNBcklHUWdLaUJvSUNvZ2JTd2dkR2hwY3k1ZmVpQTlJR01nS2lCb0lDb2diU0FySUdRZ0tpQm1JQ29nZFN3Z2RHaHBjeTVmZHlBOUlHTWdLaUJvSUNvZ2RTQXRJR1FnS2lCbUlDb2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmFXVmdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdRZ0tpQm9JQ29nZFNBdElHTWdLaUJtSUNvZ2JTd2dkR2hwY3k1ZmVTQTlJR01nS2lCbUlDb2dkU0FySUdRZ0tpQm9JQ29nYlN3Z2RHaHBjeTVmZWlBOUlHTWdLaUJvSUNvZ2JTQXRJR1FnS2lCbUlDb2dkU3dnZEdocGN5NWZkeUE5SUdNZ0tpQm9JQ29nZFNBcklHUWdLaUJtSUNvZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWldsZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1FnS2lCb0lDb2dkU0FySUdNZ0tpQm1JQ29nYlN3Z2RHaHBjeTVmZVNBOUlHTWdLaUJtSUNvZ2RTQXJJR1FnS2lCb0lDb2diU3dnZEdocGN5NWZlaUE5SUdNZ0tpQm9JQ29nYlNBdElHUWdLaUJtSUNvZ2RTd2dkR2hwY3k1ZmR5QTlJR01nS2lCb0lDb2dkU0F0SUdRZ0tpQm1JQ29nYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pZV2xraU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHUWdLaUJvSUNvZ2RTQXRJR01nS2lCbUlDb2diU3dnZEdocGN5NWZlU0E5SUdNZ0tpQm1JQ29nZFNBdElHUWdLaUJvSUNvZ2JTd2dkR2hwY3k1ZmVpQTlJR01nS2lCb0lDb2diU0FySUdRZ0tpQm1JQ29nZFN3Z2RHaHBjeTVmZHlBOUlHTWdLaUJvSUNvZ2RTQXJJR1FnS2lCbUlDb2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVSZFdGMFpYSnVhVzl1T2lBdWMyVjBSbkp2YlVWMWJHVnlLQ2tnWlc1amIzVnVkR1Z5WldRZ1lXNGdkVzVyYm05M2JpQnZjbVJsY2pvZ0lpQXJJRzhwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdJVEVnSmlZZ2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVUY0YVhOQmJtZHNaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBJQzhnTWl3Z2FTQTlJRTFoZEdndWMybHVLRzRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRJRDBnWlM1NElDb2dhU3dnZEdocGN5NWZlU0E5SUdVdWVTQXFJR2tzSUhSb2FYTXVYM29nUFNCbExub2dLaUJwTENCMGFHbHpMbDkzSUQwZ1RXRjBhQzVqYjNNb2Jpa3NJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtVnNaVzFsYm5SekxDQnVJRDBnZEZzd1hTd2dhU0E5SUhSYk5GMHNJSElnUFNCMFd6aGRMQ0J2SUQwZ2RGc3hYU3dnWVNBOUlIUmJOVjBzSUd3Z1BTQjBXemxkTENCaklEMGdkRnN5WFN3Z2FDQTlJSFJiTmwwc0lIVWdQU0IwV3pFd1hTd2daQ0E5SUc0Z0t5QmhJQ3NnZFRzS0lDQWdJQ0FnSUNCcFppQW9aQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0F1TlNBdklFMWhkR2d1YzNGeWRDaGtJQ3NnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzY2dQU0F1TWpVZ0x5Qm1MQ0IwYUdsekxsOTRJRDBnS0dnZ0xTQnNLU0FxSUdZc0lIUm9hWE11WDNrZ1BTQW9jaUF0SUdNcElDb2daaXdnZEdocGN5NWZlaUE5SUNodklDMGdhU2tnS2lCbU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9iaUErSUdFZ0ppWWdiaUErSUhVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWXhJRDBnTWlBcUlFMWhkR2d1YzNGeWRDZ3hJQ3NnYmlBdElHRWdMU0IxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmR5QTlJQ2hvSUMwZ2JDa2dMeUJtTVN3Z2RHaHBjeTVmZUNBOUlDNHlOU0FxSUdZeExDQjBhR2x6TGw5NUlEMGdLR2tnS3lCdktTQXZJR1l4TENCMGFHbHpMbDk2SUQwZ0tISWdLeUJqS1NBdklHWXhPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWVNBK0lIVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1l5SUQwZ01pQXFJRTFoZEdndWMzRnlkQ2d4SUNzZ1lTQXRJRzRnTFNCMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkeUE5SUNoeUlDMGdZeWtnTHlCbU1pd2dkR2hwY3k1ZmVDQTlJQ2hwSUNzZ2J5a2dMeUJtTWl3Z2RHaHBjeTVmZVNBOUlDNHlOU0FxSUdZeUxDQjBhR2x6TGw5NklEMGdLR3dnS3lCb0tTQXZJR1l5T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtTXlBOUlESWdLaUJOWVhSb0xuTnhjblFvTVNBcklIVWdMU0J1SUMwZ1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2NnUFNBb2J5QXRJR2twSUM4Z1pqTXNJSFJvYVhNdVgzZ2dQU0FvY2lBcklHTXBJQzhnWmpNc0lIUm9hWE11WDNrZ1BTQW9iQ0FySUdncElDOGdaak1zSUhSb2FYTXVYM29nUFNBdU1qVWdLaUJtTXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVZibWwwVm1WamRHOXljeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbVJ2ZENoMEtTQXJJREU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnUENCT2RXMWlaWEl1UlZCVFNVeFBUaUEvSUNodUlEMGdNQ3dnVFdGMGFDNWhZbk1vWlM1NEtTQStJRTFoZEdndVlXSnpLR1V1ZWlrZ1B5QW9kR2hwY3k1ZmVDQTlJQzFsTG5rc0lIUm9hWE11WDNrZ1BTQmxMbmdzSUhSb2FYTXVYM29nUFNBd0xDQjBhR2x6TGw5M0lEMGdiaWtnT2lBb2RHaHBjeTVmZUNBOUlEQXNJSFJvYVhNdVgza2dQU0F0WlM1NkxDQjBhR2x6TGw5NklEMGdaUzU1TENCMGFHbHpMbDkzSUQwZ2Jpa3BJRG9nS0hSb2FYTXVYM2dnUFNCbExua2dLaUIwTG5vZ0xTQmxMbm9nS2lCMExua3NJSFJvYVhNdVgza2dQU0JsTG5vZ0tpQjBMbmdnTFNCbExuZ2dLaUIwTG5vc0lIUm9hWE11WDNvZ1BTQmxMbmdnS2lCMExua2dMU0JsTG5rZ0tpQjBMbmdzSUhSb2FYTXVYM2NnUFNCdUtTd2dkR2hwY3k1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUgwS0lDQWdJR0Z1WjJ4bFZHOG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUF5SUNvZ1RXRjBhQzVoWTI5ektFMWhkR2d1WVdKektHMTBLSFJvYVhNdVpHOTBLR1VwTENBdE1Td2dNU2twS1RzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlZSdmQyRnlaSE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1aGJtZHNaVlJ2S0dVcE93b2dJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQXdLU0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUUxaGRHZ3ViV2x1S0RFc0lIUWdMeUJ1S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpiR1Z5Y0NobExDQnBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2xrWlc1MGFYUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d3TENBd0xDQXdMQ0F4S1RzS0lDQWdJSDBLSUNBZ0lHbHVkbVZ5ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjI1cWRXZGhkR1VvS1RzS0lDQWdJSDBLSUNBZ0lHTnZibXAxWjJGMFpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQXFQU0F0TVN3Z2RHaHBjeTVmZVNBcVBTQXRNU3dnZEdocGN5NWZlaUFxUFNBdE1Td2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHOTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0FxSUdVdVgzZ2dLeUIwYUdsekxsOTVJQ29nWlM1ZmVTQXJJSFJvYVhNdVgzb2dLaUJsTGw5NklDc2dkR2hwY3k1ZmR5QXFJR1V1WDNjN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdoVGNTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQXFJSFJvYVhNdVgzZ2dLeUIwYUdsekxsOTVJQ29nZEdocGN5NWZlU0FySUhSb2FYTXVYM29nS2lCMGFHbHpMbDk2SUNzZ2RHaHBjeTVmZHlBcUlIUm9hWE11WDNjN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YzNGeWRDaDBhR2x6TGw5NElDb2dkR2hwY3k1ZmVDQXJJSFJvYVhNdVgza2dLaUIwYUdsekxsOTVJQ3NnZEdocGN5NWZlaUFxSUhSb2FYTXVYM29nS3lCMGFHbHpMbDkzSUNvZ2RHaHBjeTVmZHlrN0NpQWdJQ0I5Q2lBZ0lDQnViM0p0WVd4cGVtVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMDlQU0F3SUQ4Z0tIUm9hWE11WDNnZ1BTQXdMQ0IwYUdsekxsOTVJRDBnTUN3Z2RHaHBjeTVmZWlBOUlEQXNJSFJvYVhNdVgzY2dQU0F4S1NBNklDaGxJRDBnTVNBdklHVXNJSFJvYVhNdVgzZ2dQU0IwYUdsekxsOTRJQ29nWlN3Z2RHaHBjeTVmZVNBOUlIUm9hWE11WDNrZ0tpQmxMQ0IwYUdsekxsOTZJRDBnZEdocGN5NWZlaUFxSUdVc0lIUm9hWE11WDNjZ1BTQjBhR2x6TGw5M0lDb2daU2tzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVYVmhkR1Z5Ym1sdmJqb2dMbTExYkhScGNHeDVLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1YlhWc2RHbHdiSGxSZFdGMFpYSnVhVzl1Y3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YlhWc2RHbHdiSGxSZFdGMFpYSnVhVzl1Y3lobExDQjBLU2tnT2lCMGFHbHpMbTExYkhScGNHeDVVWFZoZEdWeWJtbHZibk1vZEdocGN5d2daU2s3Q2lBZ0lDQjlDaUFnSUNCd2NtVnRkV3gwYVhCc2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWN5aGxMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVVWFZoZEdWeWJtbHZibk1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVmZUN3Z2FTQTlJR1V1WDNrc0lISWdQU0JsTGw5NkxDQnZJRDBnWlM1ZmR5d2dZU0E5SUhRdVgzZ3NJR3dnUFNCMExsOTVMQ0JqSUQwZ2RDNWZlaXdnYUNBOUlIUXVYM2M3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dQU0J1SUNvZ2FDQXJJRzhnS2lCaElDc2dhU0FxSUdNZ0xTQnlJQ29nYkN3Z2RHaHBjeTVmZVNBOUlHa2dLaUJvSUNzZ2J5QXFJR3dnS3lCeUlDb2dZU0F0SUc0Z0tpQmpMQ0IwYUdsekxsOTZJRDBnY2lBcUlHZ2dLeUJ2SUNvZ1l5QXJJRzRnS2lCc0lDMGdhU0FxSUdFc0lIUm9hWE11WDNjZ1BTQnZJQ29nYUNBdElHNGdLaUJoSUMwZ2FTQXFJR3dnTFNCeUlDb2dZeXdnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMnhsY25Bb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBJRDA5UFNBd0tTQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnTVNrZ2NtVjBkWEp1SUhSb2FYTXVZMjl3ZVNobEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDNnc0lHa2dQU0IwYUdsekxsOTVMQ0J5SUQwZ2RHaHBjeTVmZWl3Z2J5QTlJSFJvYVhNdVgzY3NJR0VnUFNCdklDb2daUzVmZHlBcklHNGdLaUJsTGw5NElDc2dhU0FxSUdVdVgza2dLeUJ5SUNvZ1pTNWZlanNLSUNBZ0lDQWdJQ0JwWmlBb1lTQThJREFnUHlBb2RHaHBjeTVmZHlBOUlDMWxMbDkzTENCMGFHbHpMbDk0SUQwZ0xXVXVYM2dzSUhSb2FYTXVYM2tnUFNBdFpTNWZlU3dnZEdocGN5NWZlaUE5SUMxbExsOTZMQ0JoSUQwZ0xXRXBJRG9nZEdocGN5NWpiM0I1S0dVcExDQmhJRDQ5SURFcElISmxkSFZ5YmlCMGFHbHpMbDkzSUQwZ2J5d2dkR2hwY3k1ZmVDQTlJRzRzSUhSb2FYTXVYM2tnUFNCcExDQjBhR2x6TGw5NklEMGdjaXdnZEdocGN6c0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlERWdMU0JoSUNvZ1lUc0tJQ0FnSUNBZ0lDQnBaaUFvYkNBOFBTQk9kVzFpWlhJdVJWQlRTVXhQVGlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJREVnTFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmR5QTlJR1lnS2lCdklDc2dkQ0FxSUhSb2FYTXVYM2NzSUhSb2FYTXVYM2dnUFNCbUlDb2diaUFySUhRZ0tpQjBhR2x6TGw5NExDQjBhR2x6TGw5NUlEMGdaaUFxSUdrZ0t5QjBJQ29nZEdocGN5NWZlU3dnZEdocGN5NWZlaUE5SUdZZ0tpQnlJQ3NnZENBcUlIUm9hWE11WDNvc0lIUm9hWE11Ym05eWJXRnNhWHBsS0Nrc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0JOWVhSb0xuTnhjblFvYkNrc0lHZ2dQU0JOWVhSb0xtRjBZVzR5S0dNc0lHRXBMQ0IxSUQwZ1RXRjBhQzV6YVc0b0tERWdMU0IwS1NBcUlHZ3BJQzhnWXl3Z1pDQTlJRTFoZEdndWMybHVLSFFnS2lCb0tTQXZJR003Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzY2dQU0J2SUNvZ2RTQXJJSFJvYVhNdVgzY2dLaUJrTENCMGFHbHpMbDk0SUQwZ2JpQXFJSFVnS3lCMGFHbHpMbDk0SUNvZ1pDd2dkR2hwY3k1ZmVTQTlJR2tnS2lCMUlDc2dkR2hwY3k1ZmVTQXFJR1FzSUhSb2FYTXVYM29nUFNCeUlDb2dkU0FySUhSb2FYTXVYM29nS2lCa0xDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemJHVnljRkYxWVhSbGNtNXBiMjV6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbU52Y0hrb1pTa3VjMnhsY25Bb2RDd2diaWs3Q2lBZ0lDQjlDaUFnSUNCeVlXNWtiMjBvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwSUQwZ1RXRjBhQzV6Y1hKMEtERWdMU0JsS1N3Z2JpQTlJRTFoZEdndWMzRnlkQ2hsS1N3Z2FTQTlJRElnS2lCTllYUm9MbEJKSUNvZ1RXRjBhQzV5WVc1a2IyMG9LU3dnY2lBOUlESWdLaUJOWVhSb0xsQkpJQ29nVFdGMGFDNXlZVzVrYjIwb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb2RDQXFJRTFoZEdndVkyOXpLR2twTENCdUlDb2dUV0YwYUM1emFXNG9jaWtzSUc0Z0tpQk5ZWFJvTG1OdmN5aHlLU3dnZENBcUlFMWhkR2d1YzJsdUtHa3BLVHNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVgzZ2dQVDA5SUhSb2FYTXVYM2dnSmlZZ1pTNWZlU0E5UFQwZ2RHaHBjeTVmZVNBbUppQmxMbDk2SUQwOVBTQjBhR2x6TGw5NklDWW1JR1V1WDNjZ1BUMDlJSFJvYVhNdVgzYzdDaUFnSUNCOUNpQWdJQ0JtY205dFFYSnlZWGtvWlN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0E5SUdWYmRGMHNJSFJvYVhNdVgza2dQU0JsVzNRZ0t5QXhYU3dnZEdocGN5NWZlaUE5SUdWYmRDQXJJREpkTENCMGFHbHpMbDkzSUQwZ1pWdDBJQ3NnTTEwc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlFYSnlZWGtvWlNBOUlGdGRMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2RHaHBjeTVmZUN3Z1pWdDBJQ3NnTVYwZ1BTQjBhR2x6TGw5NUxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdVgzb3NJR1ZiZENBcklETmRJRDBnZEdocGN5NWZkeXdnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0SUQwZ1pTNW5aWFJZS0hRcExDQjBhR2x6TGw5NUlEMGdaUzVuWlhSWktIUXBMQ0IwYUdsekxsOTZJRDBnWlM1blpYUmFLSFFwTENCMGFHbHpMbDkzSUQwZ1pTNW5aWFJYS0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1gyOXVRMmhoYm1kbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BJSHQ5Q24wN0NtZDBMbkJ5YjNSdmRIbHdaUzVwYzFGMVlYUmxjbTVwYjI0Z1BTQWhNRHNLZG1GeUlFMGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTUN3Z2RDQTlJREFzSUc0Z1BTQXdLWHNLSUNBZ0lDQWdJQ0IwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6TG5vZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQTlQVDBnZG05cFpDQXdJQ1ltSUNodUlEMGdkR2hwY3k1NktTd2dkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnZEN3Z2RHaHBjeTU2SUQwZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTXVlU0E5SUdVc0lIUm9hWE11ZWlBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmtnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlaUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkRiMjF3YjI1bGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lITjNhWFJqYUNobEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXdPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1NElEMGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElERTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5rZ1BTQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZWlBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaWFXNWtaWGdnYVhNZ2IzVjBJRzltSUhKaGJtZGxPaUFpSUNzZ1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMjl0Y0c5dVpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuazdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5vN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ltbHVaR1Y0SUdseklHOTFkQ0J2WmlCeVlXNW5aVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbmdzSUhSb2FYTXVlU3dnZEdocGN5NTZLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTG5nc0lIUm9hWE11ZVNBOUlHVXVlU3dnZEdocGN5NTZJRDBnWlM1NkxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtRmtaQ2dwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG1Ga1pGWmxZM1J2Y25Nb0lHRXNJR0lnS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG1Ga1pGWmxZM1J2Y25Nb1pTd2dkQ2twSURvZ0tIUm9hWE11ZUNBclBTQmxMbmdzSUhSb2FYTXVlU0FyUFNCbExua3NJSFJvYVhNdWVpQXJQU0JsTG5vc0lIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1lXUmtVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJR1VzSUhSb2FYTXVlU0FyUFNCbExDQjBhR2x6TG5vZ0t6MGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkZabFkzUnZjbk1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdnS3lCMExuZ3NJSFJvYVhNdWVTQTlJR1V1ZVNBcklIUXVlU3dnZEdocGN5NTZJRDBnWlM1NklDc2dkQzU2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa1UyTmhiR1ZrVm1WamRHOXlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNzOUlHVXVlQ0FxSUhRc0lIUm9hWE11ZVNBclBTQmxMbmtnS2lCMExDQjBhR2x6TG5vZ0t6MGdaUzU2SUNvZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjFZaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUhadmFXUWdNQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pNNklDNXpkV0lvS1NCdWIzY2diMjVzZVNCaFkyTmxjSFJ6SUc5dVpTQmhjbWQxYldWdWRDNGdWWE5sSUM1emRXSldaV04wYjNKektDQmhMQ0JpSUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1emRXSldaV04wYjNKektHVXNJSFFwS1NBNklDaDBhR2x6TG5nZ0xUMGdaUzU0TENCMGFHbHpMbmtnTFQwZ1pTNTVMQ0IwYUdsekxub2dMVDBnWlM1NkxDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lITjFZbE5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXRQU0JsTENCMGFHbHpMbmtnTFQwZ1pTd2dkR2hwY3k1NklDMDlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdKV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUMwZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0xTQjBMbmtzSUhSb2FYTXVlaUE5SUdVdWVpQXRJSFF1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbTExYkhScGNHeDVLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1YlhWc2RHbHdiSGxXWldOMGIzSnpLQ0JoTENCaUlDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXRkV3gwYVhCc2VWWmxZM1J2Y25Nb1pTd2dkQ2twSURvZ0tIUm9hWE11ZUNBcVBTQmxMbmdzSUhSb2FYTXVlU0FxUFNCbExua3NJSFJvYVhNdWVpQXFQU0JsTG5vc0lIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3YkhsVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2owZ1pTd2dkR2hwY3k1NUlDbzlJR1VzSUhSb2FYTXVlaUFxUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3YkhsV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNvZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0tpQjBMbmtzSUhSb2FYTXVlaUE5SUdVdWVpQXFJSFF1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVSWFZzWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ1ltSUdVdWFYTkZkV3hsY2lCOGZDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVXWldOMGIzSXpPaUF1WVhCd2JIbEZkV3hsY2lncElHNXZkeUJsZUhCbFkzUnpJR0Z1SUVWMWJHVnlJSEp2ZEdGMGFXOXVJSEpoZEdobGNpQjBhR0Z1SUdFZ1ZtVmpkRzl5TXlCaGJtUWdiM0prWlhJdUlpa3NJSFJvYVhNdVlYQndiSGxSZFdGMFpYSnVhVzl1S0hsc0xuTmxkRVp5YjIxRmRXeGxjaWhsS1NrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVVGNGFYTkJibWRzWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYQndiSGxSZFdGMFpYSnVhVzl1S0hsc0xuTmxkRVp5YjIxQmVHbHpRVzVuYkdVb1pTd2dkQ2twT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZ3pLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVlQ3dnYmlBOUlIUm9hWE11ZVN3Z2FTQTlJSFJvYVhNdWVpd2djaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUhKYk1GMGdLaUIwSUNzZ2Nsc3pYU0FxSUc0Z0t5QnlXelpkSUNvZ2FTd2dkR2hwY3k1NUlEMGdjbHN4WFNBcUlIUWdLeUJ5V3pSZElDb2diaUFySUhKYk4xMGdLaUJwTENCMGFHbHpMbm9nUFNCeVd6SmRJQ29nZENBcklISmJOVjBnS2lCdUlDc2djbHM0WFNBcUlHa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVU1dmNtMWhiRTFoZEhKcGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYQndiSGxOWVhSeWFYZ3pLR1VwTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZUN3Z2JpQTlJSFJvYVhNdWVTd2dhU0E5SUhSb2FYTXVlaXdnY2lBOUlHVXVaV3hsYldWdWRITXNJRzhnUFNBeElDOGdLSEpiTTEwZ0tpQjBJQ3NnY2xzM1hTQXFJRzRnS3lCeVd6RXhYU0FxSUdrZ0t5QnlXekUxWFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUNoeVd6QmRJQ29nZENBcklISmJORjBnS2lCdUlDc2djbHM0WFNBcUlHa2dLeUJ5V3pFeVhTa2dLaUJ2TENCMGFHbHpMbmtnUFNBb2Nsc3hYU0FxSUhRZ0t5QnlXelZkSUNvZ2JpQXJJSEpiT1YwZ0tpQnBJQ3NnY2xzeE0xMHBJQ29nYnl3Z2RHaHBjeTU2SUQwZ0tISmJNbDBnS2lCMElDc2djbHMyWFNBcUlHNGdLeUJ5V3pFd1hTQXFJR2tnS3lCeVd6RTBYU2tnS2lCdkxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxSZFdGMFpYSnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZUN3Z2JpQTlJSFJvYVhNdWVTd2dhU0E5SUhSb2FYTXVlaXdnY2lBOUlHVXVlQ3dnYnlBOUlHVXVlU3dnWVNBOUlHVXVlaXdnYkNBOUlHVXVkeXdnWXlBOUlHd2dLaUIwSUNzZ2J5QXFJR2tnTFNCaElDb2diaXdnYUNBOUlHd2dLaUJ1SUNzZ1lTQXFJSFFnTFNCeUlDb2dhU3dnZFNBOUlHd2dLaUJwSUNzZ2NpQXFJRzRnTFNCdklDb2dkQ3dnWkNBOUlDMXlJQ29nZENBdElHOGdLaUJ1SUMwZ1lTQXFJR2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR01nS2lCc0lDc2daQ0FxSUMxeUlDc2dhQ0FxSUMxaElDMGdkU0FxSUMxdkxDQjBhR2x6TG5rZ1BTQm9JQ29nYkNBcklHUWdLaUF0YnlBcklIVWdLaUF0Y2lBdElHTWdLaUF0WVN3Z2RHaHBjeTU2SUQwZ2RTQXFJR3dnS3lCa0lDb2dMV0VnS3lCaklDb2dMVzhnTFNCb0lDb2dMWElzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J3Y205cVpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvWlM1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVcExtRndjR3g1VFdGMGNtbDROQ2hsTG5CeWIycGxZM1JwYjI1TllYUnlhWGdwT3dvZ0lDQWdmUW9nSUNBZ2RXNXdjbTlxWldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9aUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTa3VZWEJ3YkhsTllYUnlhWGcwS0dVdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZUN3Z2JpQTlJSFJvYVhNdWVTd2dhU0E5SUhSb2FYTXVlaXdnY2lBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlISmJNRjBnS2lCMElDc2djbHMwWFNBcUlHNGdLeUJ5V3poZElDb2dhU3dnZEdocGN5NTVJRDBnY2xzeFhTQXFJSFFnS3lCeVd6VmRJQ29nYmlBcklISmJPVjBnS2lCcExDQjBhR2x6TG5vZ1BTQnlXekpkSUNvZ2RDQXJJSEpiTmwwZ0tpQnVJQ3NnY2xzeE1GMGdLaUJwTENCMGFHbHpMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdmUW9nSUNBZ1pHbDJhV1JsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUM4OUlHVXVlQ3dnZEdocGN5NTVJQzg5SUdVdWVTd2dkR2hwY3k1NklDODlJR1V1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGRtbGtaVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsVFkyRnNZWElvTVNBdklHVXBPd29nSUNBZ2ZRb2dJQ0FnYldsdUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1dGFXNG9kR2hwY3k1NExDQmxMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbTFwYmloMGFHbHpMbmtzSUdVdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndWJXbHVLSFJvYVhNdWVpd2daUzU2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLSFJvYVhNdWVDd2daUzU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0WVhnb2RHaHBjeTU1TENCbExua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtMWhlQ2gwYUdsekxub3NJR1V1ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHRnRjQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtHVXVlQ3dnVFdGMGFDNXRhVzRvZEM1NExDQjBhR2x6TG5ncEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1dFlYZ29aUzU1TENCTllYUm9MbTFwYmloMExua3NJSFJvYVhNdWVTa3BMQ0IwYUdsekxub2dQU0JOWVhSb0xtMWhlQ2hsTG5vc0lFMWhkR2d1YldsdUtIUXVlaXdnZEdocGN5NTZLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNGTmpZV3hoY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZUNrcExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCMGFHbHpMbmtwS1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnZEdocGN5NTZLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNFeGxibWQwYUNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwZG1sa1pWTmpZV3hoY2lodUlIeDhJREVwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lHNHBLU2s3Q2lBZ0lDQjlDaUFnSUNCbWJHOXZjaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbVpzYjI5eUtIUm9hWE11ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTmxhV3dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbU5sYVd3b2RHaHBjeTU1S1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeWIzVnVaQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXliM1Z1WkNoMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9Mbkp2ZFc1a0tIUm9hWE11ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1Y205MWJtUW9kR2hwY3k1NktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkVzVrVkc5YVpYSnZLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0IwYUdsekxuZ2dQQ0F3SUQ4Z1RXRjBhQzVqWldsc0tIUm9hWE11ZUNrZ09pQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVDa3NJSFJvYVhNdWVTQTlJSFJvYVhNdWVTQThJREFnUHlCTllYUm9MbU5sYVd3b2RHaHBjeTU1S1NBNklFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NUtTd2dkR2hwY3k1NklEMGdkR2hwY3k1NklEd2dNQ0EvSUUxaGRHZ3VZMlZwYkNoMGFHbHpMbm9wSURvZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5vcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JtVm5ZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNBdGRHaHBjeTU0TENCMGFHbHpMbmtnUFNBdGRHaHBjeTU1TENCMGFHbHpMbm9nUFNBdGRHaHBjeTU2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkc5MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDb2daUzU0SUNzZ2RHaHBjeTU1SUNvZ1pTNTVJQ3NnZEdocGN5NTZJQ29nWlM1Nk93b2dJQ0FnZlFvZ0lDQWdiR1Z1WjNSb1UzRW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFJSFJvYVhNdWVDQXJJSFJvYVhNdWVTQXFJSFJvYVhNdWVTQXJJSFJvYVhNdWVpQXFJSFJvYVhNdWVqc0tJQ0FnSUgwS0lDQWdJR3hsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1emNYSjBLSFJvYVhNdWVDQXFJSFJvYVhNdWVDQXJJSFJvYVhNdWVTQXFJSFJvYVhNdWVTQXJJSFJvYVhNdWVpQXFJSFJvYVhNdWVpazdDaUFnSUNCOUNpQWdJQ0J0WVc1b1lYUjBZVzVNWlc1bmRHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndVlXSnpLSFJvYVhNdWVDa2dLeUJOWVhSb0xtRmljeWgwYUdsekxua3BJQ3NnVFdGMGFDNWhZbk1vZEdocGN5NTZLVHNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2RHaHBjeTVzWlc1bmRHZ29LU0I4ZkNBeEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEV4bGJtZDBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxLQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc1pYSndLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNzOUlDaGxMbmdnTFNCMGFHbHpMbmdwSUNvZ2RDd2dkR2hwY3k1NUlDczlJQ2hsTG5rZ0xTQjBhR2x6TG5rcElDb2dkQ3dnZEdocGN5NTZJQ3M5SUNobExub2dMU0IwYUdsekxub3BJQ29nZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4bGNuQldaV04wYjNKektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ3NnS0hRdWVDQXRJR1V1ZUNrZ0tpQnVMQ0IwYUdsekxua2dQU0JsTG5rZ0t5QW9kQzU1SUMwZ1pTNTVLU0FxSUc0c0lIUm9hWE11ZWlBOUlHVXVlaUFySUNoMExub2dMU0JsTG5vcElDb2diaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR055YjNOektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1OeWIzTnpLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1WTNKdmMzTldaV04wYjNKektDQmhMQ0JpSUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1amNtOXpjMVpsWTNSdmNuTW9aU3dnZENrcElEb2dkR2hwY3k1amNtOXpjMVpsWTNSdmNuTW9kR2hwY3l3Z1pTazdDaUFnSUNCOUNpQWdJQ0JqY205emMxWmxZM1J2Y25Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1NExDQnBJRDBnWlM1NUxDQnlJRDBnWlM1NkxDQnZJRDBnZEM1NExDQmhJRDBnZEM1NUxDQnNJRDBnZEM1Nk93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCcElDb2diQ0F0SUhJZ0tpQmhMQ0IwYUdsekxua2dQU0J5SUNvZ2J5QXRJRzRnS2lCc0xDQjBhR2x6TG5vZ1BTQnVJQ29nWVNBdElHa2dLaUJ2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY0hKdmFtVmpkRTl1Vm1WamRHOXlLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdWJHVnVaM1JvVTNFb0tUc0tJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdNQ2tnY21WMGRYSnVJSFJvYVhNdWMyVjBLREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVrYjNRb2RHaHBjeWtnTHlCME93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU52Y0hrb1pTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2JpazdDaUFnSUNCOUNpQWdJQ0J3Y205cVpXTjBUMjVRYkdGdVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTF2TG1OdmNIa29kR2hwY3lrdWNISnZhbVZqZEU5dVZtVmpkRzl5S0dVcExDQjBhR2x6TG5OMVlpaE5ieWs3Q2lBZ0lDQjlDaUFnSUNCeVpXWnNaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6ZFdJb1RXOHVZMjl3ZVNobEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lneUlDb2dkR2hwY3k1a2IzUW9aU2twS1RzS0lDQWdJSDBLSUNBZ0lHRnVaMnhsVkc4b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdUV0YwYUM1emNYSjBLSFJvYVhNdWJHVnVaM1JvVTNFb0tTQXFJR1V1YkdWdVozUm9VM0VvS1NrN0NpQWdJQ0FnSUNBZ2FXWWdLSFFnUFQwOUlEQXBJSEpsZEhWeWJpQk5ZWFJvTGxCSklDOGdNanNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVpHOTBLR1VwSUM4Z2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWTI5ektHMTBLRzRzSUMweExDQXhLU2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1emNYSjBLSFJvYVhNdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTU0SUMwZ1pTNTRMQ0J1SUQwZ2RHaHBjeTU1SUMwZ1pTNTVMQ0JwSUQwZ2RHaHBjeTU2SUMwZ1pTNTZPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcklHNGdLaUJ1SUNzZ2FTQXFJR2s3Q2lBZ0lDQjlDaUFnSUNCdFlXNW9ZWFIwWVc1RWFYTjBZVzVqWlZSdktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9kR2hwY3k1NElDMGdaUzU0S1NBcklFMWhkR2d1WVdKektIUm9hWE11ZVNBdElHVXVlU2tnS3lCTllYUm9MbUZpY3loMGFHbHpMbm9nTFNCbExub3BPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVk53YUdWeWFXTmhiQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwUm5KdmJWTndhR1Z5YVdOaGJFTnZiM0prY3lobExuSmhaR2wxY3l3Z1pTNXdhR2tzSUdVdWRHaGxkR0VwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZOd2FHVnlhV05oYkVOdmIzSmtjeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0JOWVhSb0xuTnBiaWgwS1NBcUlHVTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHa2dLaUJOWVhSb0xuTnBiaWh1S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVqYjNNb2RDa2dLaUJsTENCMGFHbHpMbm9nUFNCcElDb2dUV0YwYUM1amIzTW9iaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRM2xzYVc1a2NtbGpZV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMURlV3hwYm1SeWFXTmhiRU52YjNKa2N5aGxMbkpoWkdsMWN5d2daUzUwYUdWMFlTd2daUzU1S1RzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxRGVXeHBibVJ5YVdOaGJFTnZiM0prY3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVZ0tpQk5ZWFJvTG5OcGJpaDBLU3dnZEdocGN5NTVJRDBnYml3Z2RHaHBjeTU2SUQwZ1pTQXFJRTFoZEdndVkyOXpLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJSFJiTVRKZExDQjBhR2x6TG5rZ1BTQjBXekV6WFN3Z2RHaHBjeTU2SUQwZ2RGc3hORjBzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRUV0YwY21sNFUyTmhiR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0dVc0lEQXBMbXhsYm1kMGFDZ3BMQ0J1SUQwZ2RHaHBjeTV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0dVc0lERXBMbXhsYm1kMGFDZ3BMQ0JwSUQwZ2RHaHBjeTV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0dVc0lESXBMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQjBMQ0IwYUdsekxua2dQU0J1TENCMGFHbHpMbm9nUFNCcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabkp2YlVGeWNtRjVLR1V1Wld4bGJXVnVkSE1zSUhRZ0tpQTBLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFOWVhSeWFYZ3pRMjlzZFcxdUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW1jbTl0UVhKeVlYa29aUzVsYkdWdFpXNTBjeXdnZENBcUlETXBPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1NElEMDlQU0IwYUdsekxuZ2dKaVlnWlM1NUlEMDlQU0IwYUdsekxua2dKaVlnWlM1NklEMDlQU0IwYUdsekxubzdDaUFnSUNCOUNpQWdJQ0JtY205dFFYSnlZWGtvWlN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlZ0MFhTd2dkR2hwY3k1NUlEMGdaVnQwSUNzZ01WMHNJSFJvYVhNdWVpQTlJR1ZiZENBcklESmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlCY25KaGVTaGxJRDBnVzEwc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYmRGMGdQU0IwYUdsekxuZ3NJR1ZiZENBcklERmRJRDBnZEdocGN5NTVMQ0JsVzNRZ0t5QXlYU0E5SUhSb2FYTXVlaXdnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVJQ0U5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQnZabVp6WlhRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkNCbWNtOXRJQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrdUlpa3NJSFJvYVhNdWVDQTlJR1V1WjJWMFdDaDBLU3dnZEdocGN5NTVJRDBnWlM1blpYUlpLSFFwTENCMGFHbHpMbm9nUFNCbExtZGxkRm9vZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeVlXNWtiMjBvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbUZ1Wkc5dEtDa3NJSFJvYVhNdWVTQTlJRTFoZEdndWNtRnVaRzl0S0Nrc0lIUm9hWE11ZWlBOUlFMWhkR2d1Y21GdVpHOXRLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5WVc1a2IyMUVhWEpsWTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0FvVFdGMGFDNXlZVzVrYjIwb0tTQXRJQzQxS1NBcUlESXNJSFFnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nVFdGMGFDNVFTU0FxSURJc0lHNGdQU0JOWVhSb0xuTnhjblFvTVNBdElHVWdLaW9nTWlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUc0Z0tpQk5ZWFJvTG1OdmN5aDBLU3dnZEdocGN5NTVJRDBnYmlBcUlFMWhkR2d1YzJsdUtIUXBMQ0IwYUdsekxub2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnS2x0VGVXMWliMnd1YVhSbGNtRjBiM0pkS0NrZ2V3b2dJQ0FnSUNBZ0lIbHBaV3hrSUhSb2FYTXVlQ3dnZVdsbGJHUWdkR2hwY3k1NUxDQjVhV1ZzWkNCMGFHbHpMbm83Q2lBZ0lDQjlDbjA3Q2swdWNISnZkRzkwZVhCbExtbHpWbVZqZEc5eU15QTlJQ0V3T3dwMllYSWdUVzhnUFNCdVpYY2dUU3dnZVd3Z1BTQnVaWGNnWjNRc0lFeDBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5LREVnTHlBd0xDQXhJQzhnTUN3Z01TQXZJREFwTENCMElEMGdibVYzSUUwb0xURWdMeUF3TENBdE1TQXZJREFzSUMweElDOGdNQ2twZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV2x1SUQwZ1pTd2dkR2hwY3k1dFlYZ2dQU0IwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dVkyOXdlU2hsS1N3Z2RHaHBjeTV0WVhndVkyOXdlU2gwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFCY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0F4SUM4Z01Dd2diaUE5SURFZ0x5QXdMQ0JwSUQwZ01TQXZJREFzSUhJZ1BTQXRNU0F2SURBc0lHOGdQU0F0TVNBdklEQXNJR0VnUFNBdE1TQXZJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUQwZ01Dd2dZeUE5SUdVdWJHVnVaM1JvT3lCc0lEd2dZenNnYkNBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCbFcyeGRMQ0IxSUQwZ1pWdHNJQ3NnTVYwc0lHUWdQU0JsVzJ3Z0t5QXlYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDQThJSFFnSmlZZ0tIUWdQU0JvS1N3Z2RTQThJRzRnSmlZZ0tHNGdQU0IxS1N3Z1pDQThJR2tnSmlZZ0tHa2dQU0JrS1N3Z2FDQStJSElnSmlZZ0tISWdQU0JvS1N3Z2RTQStJRzhnSmlZZ0tHOGdQU0IxS1N3Z1pDQStJR0VnSmlZZ0tHRWdQU0JrS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG5ObGRDaDBMQ0J1TENCcEtTd2dkR2hwY3k1dFlYZ3VjMlYwS0hJc0lHOHNJR0VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0F4SUM4Z01Dd2diaUE5SURFZ0x5QXdMQ0JwSUQwZ01TQXZJREFzSUhJZ1BTQXRNU0F2SURBc0lHOGdQU0F0TVNBdklEQXNJR0VnUFNBdE1TQXZJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUQwZ01Dd2dZeUE5SUdVdVkyOTFiblE3SUd3Z1BDQmpPeUJzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJR1V1WjJWMFdDaHNLU3dnZFNBOUlHVXVaMlYwV1Noc0tTd2daQ0E5SUdVdVoyVjBXaWhzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhQ0E4SUhRZ0ppWWdLSFFnUFNCb0tTd2dkU0E4SUc0Z0ppWWdLRzRnUFNCMUtTd2daQ0E4SUdrZ0ppWWdLR2tnUFNCa0tTd2dhQ0ErSUhJZ0ppWWdLSElnUFNCb0tTd2dkU0ErSUc4Z0ppWWdLRzhnUFNCMUtTd2daQ0ErSUdFZ0ppWWdLR0VnUFNCa0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxuTmxkQ2gwTENCdUxDQnBLU3dnZEdocGN5NXRZWGd1YzJWMEtISXNJRzhzSUdFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCdmFXNTBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVd0bFJXMXdkSGtvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLR1ZiZEYwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU5sYm5SbGNrRnVaRk5wZW1Vb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnU21rdVkyOXdlU2gwS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1OdmNIa29aU2t1YzNWaUtHNHBMQ0IwYUdsekxtMWhlQzVqYjNCNUtHVXBMbUZrWkNodUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxUFltcGxZM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFoYTJWRmJYQjBlU2dwTENCMGFHbHpMbVY0Y0dGdVpFSjVUMkpxWldOMEtHVXBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNWpiM0I1S0dVdWJXbHVLU3dnZEdocGN5NXRZWGd1WTI5d2VTaGxMbTFoZUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxSVzF3ZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxuZ2dQU0IwYUdsekxtMXBiaTU1SUQwZ2RHaHBjeTV0YVc0dWVpQTlJREVnTHlBd0xDQjBhR2x6TG0xaGVDNTRJRDBnZEdocGN5NXRZWGd1ZVNBOUlIUm9hWE11YldGNExub2dQU0F0TVNBdklEQXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnBjMFZ0Y0hSNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xaGVDNTRJRHdnZEdocGN5NXRhVzR1ZUNCOGZDQjBhR2x6TG0xaGVDNTVJRHdnZEdocGN5NXRhVzR1ZVNCOGZDQjBhR2x6TG0xaGVDNTZJRHdnZEdocGN5NXRhVzR1ZWpzS0lDQWdJSDBLSUNBZ0lHZGxkRU5sYm5SbGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTkZiWEIwZVNncElEOGdaUzV6WlhRb01Dd2dNQ3dnTUNrZ09pQmxMbUZrWkZabFkzUnZjbk1vZEdocGN5NXRhVzRzSUhSb2FYTXViV0Y0S1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJUYVhwbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMwVnRjSFI1S0NrZ1B5QmxMbk5sZENnd0xDQXdMQ0F3S1NBNklHVXVjM1ZpVm1WamRHOXljeWgwYUdsekxtMWhlQ3dnZEdocGN5NXRhVzRwT3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG0xcGJpaGxLU3dnZEdocGN5NXRZWGd1YldGNEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWGh3WVc1a1FubFdaV04wYjNJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNXpkV0lvWlNrc0lIUm9hWE11YldGNExtRmtaQ2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWNGNHRnVaRUo1VTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1WVdSa1UyTmhiR0Z5S0MxbEtTd2dkR2hwY3k1dFlYZ3VZV1JrVTJOaGJHRnlLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhod1lXNWtRbmxQWW1wbFkzUW9aU2tnZXdvZ0lDQWdJQ0FnSUdVdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lURXNJQ0V4S1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVoyVnZiV1YwY25rN0NpQWdJQ0FnSUNBZ2RDQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtSnZkVzVrYVc1blFtOTRJRDA5UFNCdWRXeHNJQ1ltSUhRdVkyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDa3NJR0p2TG1OdmNIa29kQzVpYjNWdVpHbHVaMEp2ZUNrc0lHSnZMbUZ3Y0d4NVRXRjBjbWw0TkNobExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NTFibWx2YmloaWJ5a3BPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnYmk1c1pXNW5kR2c3SUdrZ1BDQnlPeUJwS3lzcGRHaHBjeTVsZUhCaGJtUkNlVTlpYW1WamRDaHVXMmxkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhLR1V1ZUNBOElIUm9hWE11YldsdUxuZ2dmSHdnWlM1NElENGdkR2hwY3k1dFlYZ3VlQ0I4ZkNCbExua2dQQ0IwYUdsekxtMXBiaTU1SUh4OElHVXVlU0ErSUhSb2FYTXViV0Y0TG5rZ2ZId2daUzU2SUR3Z2RHaHBjeTV0YVc0dWVpQjhmQ0JsTG5vZ1BpQjBhR2x6TG0xaGVDNTZLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVlQ0E4UFNCbExtMXBiaTU0SUNZbUlHVXViV0Y0TG5nZ1BEMGdkR2hwY3k1dFlYZ3VlQ0FtSmlCMGFHbHpMbTFwYmk1NUlEdzlJR1V1YldsdUxua2dKaVlnWlM1dFlYZ3VlU0E4UFNCMGFHbHpMbTFoZUM1NUlDWW1JSFJvYVhNdWJXbHVMbm9nUEQwZ1pTNXRhVzR1ZWlBbUppQmxMbTFoZUM1NklEdzlJSFJvYVhNdWJXRjRMbm83Q2lBZ0lDQjlDaUFnSUNCblpYUlFZWEpoYldWMFpYSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExuTmxkQ2dvWlM1NElDMGdkR2hwY3k1dGFXNHVlQ2tnTHlBb2RHaHBjeTV0WVhndWVDQXRJSFJvYVhNdWJXbHVMbmdwTENBb1pTNTVJQzBnZEdocGN5NXRhVzR1ZVNrZ0x5QW9kR2hwY3k1dFlYZ3VlU0F0SUhSb2FYTXViV2x1TG5rcExDQW9aUzU2SUMwZ2RHaHBjeTV0YVc0dWVpa2dMeUFvZEdocGN5NXRZWGd1ZWlBdElIUm9hWE11YldsdUxub3BLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOQ2IzZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoS0dVdWJXRjRMbmdnUENCMGFHbHpMbTFwYmk1NElIeDhJR1V1YldsdUxuZ2dQaUIwYUdsekxtMWhlQzU0SUh4OElHVXViV0Y0TG5rZ1BDQjBhR2x6TG0xcGJpNTVJSHg4SUdVdWJXbHVMbmtnUGlCMGFHbHpMbTFoZUM1NUlIeDhJR1V1YldGNExub2dQQ0IwYUdsekxtMXBiaTU2SUh4OElHVXViV2x1TG5vZ1BpQjBhR2x6TG0xaGVDNTZLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOVGNHaGxjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5zWVcxd1VHOXBiblFvWlM1alpXNTBaWElzSUVwcEtTd2dTbWt1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlM1alpXNTBaWElwSUR3OUlHVXVjbUZrYVhWeklDb2daUzV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBMQ0J1T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG01dmNtMWhiQzU0SUQ0Z01DQS9JQ2gwSUQwZ1pTNXViM0p0WVd3dWVDQXFJSFJvYVhNdWJXbHVMbmdzSUc0Z1BTQmxMbTV2Y20xaGJDNTRJQ29nZEdocGN5NXRZWGd1ZUNrZ09pQW9kQ0E5SUdVdWJtOXliV0ZzTG5nZ0tpQjBhR2x6TG0xaGVDNTRMQ0J1SUQwZ1pTNXViM0p0WVd3dWVDQXFJSFJvYVhNdWJXbHVMbmdwTENCbExtNXZjbTFoYkM1NUlENGdNQ0EvSUNoMElDczlJR1V1Ym05eWJXRnNMbmtnS2lCMGFHbHpMbTFwYmk1NUxDQnVJQ3M5SUdVdWJtOXliV0ZzTG5rZ0tpQjBhR2x6TG0xaGVDNTVLU0E2SUNoMElDczlJR1V1Ym05eWJXRnNMbmtnS2lCMGFHbHpMbTFoZUM1NUxDQnVJQ3M5SUdVdWJtOXliV0ZzTG5rZ0tpQjBhR2x6TG0xcGJpNTVLU3dnWlM1dWIzSnRZV3d1ZWlBK0lEQWdQeUFvZENBclBTQmxMbTV2Y20xaGJDNTZJQ29nZEdocGN5NXRhVzR1ZWl3Z2JpQXJQU0JsTG01dmNtMWhiQzU2SUNvZ2RHaHBjeTV0WVhndWVpa2dPaUFvZENBclBTQmxMbTV2Y20xaGJDNTZJQ29nZEdocGN5NXRZWGd1ZWl3Z2JpQXJQU0JsTG01dmNtMWhiQzU2SUNvZ2RHaHBjeTV0YVc0dWVpa3NJSFFnUEQwZ0xXVXVZMjl1YzNSaGJuUWdKaVlnYmlBK1BTQXRaUzVqYjI1emRHRnVkRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOVWNtbGhibWRzWlNobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhWE5GYlhCMGVTZ3BLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnZEdocGN5NW5aWFJEWlc1MFpYSW9XV2twTENCWGNpNXpkV0pXWldOMGIzSnpLSFJvYVhNdWJXRjRMQ0JaYVNrc0lHNXBMbk4xWWxabFkzUnZjbk1vWlM1aExDQlphU2tzSUdscExuTjFZbFpsWTNSdmNuTW9aUzVpTENCWmFTa3NJSEpwTG5OMVlsWmxZM1J2Y25Nb1pTNWpMQ0JaYVNrc0lIVnVMbk4xWWxabFkzUnZjbk1vYVdrc0lHNXBLU3dnWkc0dWMzVmlWbVZqZEc5eWN5aHlhU3dnYVdrcExDQlFiaTV6ZFdKV1pXTjBiM0p6S0c1cExDQnlhU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxMWJpNTZMQW9nSUNBZ0lDQWdJQ0FnSUNCMWJpNTVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0Wkc0dWVpd0tJQ0FnSUNBZ0lDQWdJQ0FnWkc0dWVTd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVkJ1TG5vc0NpQWdJQ0FnSUNBZ0lDQWdJRkJ1TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJSFZ1TG5vc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTFiaTU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtiaTU2TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdFpHNHVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1VHNHVlaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFZCdUxuZ3NDaUFnSUNBZ0lDQWdJQ0FnSUMxMWJpNTVMQW9nSUNBZ0lDQWdJQ0FnSUNCMWJpNTRMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0Wkc0dWVTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkc0dWVDd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVkJ1TG5rc0NpQWdJQ0FnSUNBZ0lDQWdJRkJ1TG5nc0NpQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoZDI4b2RDd2dibWtzSUdscExDQnlhU3dnVjNJcElIeDhJQ2gwSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2dJWGR2S0hRc0lHNXBMQ0JwYVN3Z2Nta3NJRmR5S1NrZ1B5QWhNU0E2SUNoeGNpNWpjbTl6YzFabFkzUnZjbk1vZFc0c0lHUnVLU3dnZENBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnY1hJdWVDd0tJQ0FnSUNBZ0lDQWdJQ0FnY1hJdWVTd0tJQ0FnSUNBZ0lDQWdJQ0FnY1hJdWVnb2dJQ0FnSUNBZ0lGMHNJSGR2S0hRc0lHNXBMQ0JwYVN3Z2Nta3NJRmR5S1NrN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0ZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWpiM0I1S0dVcExtTnNZVzF3S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkthUzVqYjNCNUtHVXBMbU5zWVcxd0tIUm9hWE11YldsdUxDQjBhR2x6TG0xaGVDa3VjM1ZpS0dVcExteGxibWQwYUNncE93b2dJQ0FnZlFvZ0lDQWdaMlYwUW05MWJtUnBibWRUY0dobGNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRU5sYm5SbGNpaGxMbU5sYm5SbGNpa3NJR1V1Y21Ga2FYVnpJRDBnZEdocGN5NW5aWFJUYVhwbEtFcHBLUzVzWlc1bmRHZ29LU0FxSUM0MUxDQmxPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXRjRLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV2x1S0dVdWJXRjRLU3dnZEdocGN5NXBjMFZ0Y0hSNUtDa2dKaVlnZEdocGN5NXRZV3RsUlcxd2RIa29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFZ1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHViV2x1S0dVdWJXbHVLU3dnZEdocGN5NXRZWGd1YldGNEtHVXViV0Y0S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE5DaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTkZiWEIwZVNncElEOGdkR2hwY3lBNklDZ2tkRnN3WFM1elpYUW9kR2hwY3k1dGFXNHVlQ3dnZEdocGN5NXRhVzR1ZVN3Z2RHaHBjeTV0YVc0dWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnN4WFM1elpYUW9kR2hwY3k1dGFXNHVlQ3dnZEdocGN5NXRhVzR1ZVN3Z2RHaHBjeTV0WVhndWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnN5WFM1elpYUW9kR2hwY3k1dGFXNHVlQ3dnZEdocGN5NXRZWGd1ZVN3Z2RHaHBjeTV0YVc0dWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnN6WFM1elpYUW9kR2hwY3k1dGFXNHVlQ3dnZEdocGN5NXRZWGd1ZVN3Z2RHaHBjeTV0WVhndWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnMwWFM1elpYUW9kR2hwY3k1dFlYZ3VlQ3dnZEdocGN5NXRhVzR1ZVN3Z2RHaHBjeTV0YVc0dWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnMxWFM1elpYUW9kR2hwY3k1dFlYZ3VlQ3dnZEdocGN5NXRhVzR1ZVN3Z2RHaHBjeTV0WVhndWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnMyWFM1elpYUW9kR2hwY3k1dFlYZ3VlQ3dnZEdocGN5NXRZWGd1ZVN3Z2RHaHBjeTV0YVc0dWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQWtkRnMzWFM1elpYUW9kR2hwY3k1dFlYZ3VlQ3dnZEdocGN5NXRZWGd1ZVN3Z2RHaHBjeTV0WVhndWVpa3VZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBhR2x6TG5ObGRFWnliMjFRYjJsdWRITW9KSFFwTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtRmtaQ2hsS1N3Z2RHaHBjeTV0WVhndVlXUmtLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dGFXNHVaWEYxWVd4ektIUm9hWE11YldsdUtTQW1KaUJsTG0xaGVDNWxjWFZoYkhNb2RHaHBjeTV0WVhncE93b2dJQ0FnZlFwOU93cE1kQzV3Y205MGIzUjVjR1V1YVhOQ2IzZ3pJRDBnSVRBN0NuWmhjaUFrZENBOUlGc0tJQ0FnSUc1bGR5Qk5MQW9nSUNBZ2JtVjNJRTBzQ2lBZ0lDQnVaWGNnVFN3S0lDQWdJRzVsZHlCTkxBb2dJQ0FnYm1WM0lFMHNDaUFnSUNCdVpYY2dUU3dLSUNBZ0lHNWxkeUJOTEFvZ0lDQWdibVYzSUUwS1hTd2dTbWtnUFNCdVpYY2dUU3dnWW04Z1BTQnVaWGNnVEhRc0lHNXBJRDBnYm1WM0lFMHNJR2xwSUQwZ2JtVjNJRTBzSUhKcElEMGdibVYzSUUwc0lIVnVJRDBnYm1WM0lFMHNJR1J1SUQwZ2JtVjNJRTBzSUZCdUlEMGdibVYzSUUwc0lGbHBJRDBnYm1WM0lFMHNJRmR5SUQwZ2JtVjNJRTBzSUhGeUlEMGdibVYzSUUwc0lFbHVJRDBnYm1WM0lFMDdDbVoxYm1OMGFXOXVJSGR2S0hNc0lHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnpMbXhsYm1kMGFDQXRJRE03SUhJZ1BEMGdienNnY2lBclBTQXpLWHNLSUNBZ0lDQWdJQ0JKYmk1bWNtOXRRWEp5WVhrb2N5d2djaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0JwTG5nZ0tpQk5ZWFJvTG1GaWN5aEpiaTU0S1NBcklHa3VlU0FxSUUxaGRHZ3VZV0p6S0VsdUxua3BJQ3NnYVM1NklDb2dUV0YwYUM1aFluTW9TVzR1ZWlrc0lHd2dQU0JsTG1SdmRDaEpiaWtzSUdNZ1BTQjBMbVJ2ZENoSmJpa3NJR2dnUFNCdUxtUnZkQ2hKYmlrN0NpQWdJQ0FnSUNBZ2FXWWdLRTFoZEdndWJXRjRLQzFOWVhSb0xtMWhlQ2hzTENCakxDQm9LU3dnVFdGMGFDNXRhVzRvYkN3Z1l5d2dhQ2twSUQ0Z1lTa2djbVYwZFhKdUlDRXhPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJQ0V3T3dwOUNuWmhjaUJsWmlBOUlHNWxkeUJNZEN3Z2Rtd2dQU0J1WlhjZ1RTd2dXSElnUFNCdVpYY2dUU3dnVTI4Z1BTQnVaWGNnVFN3Z1FXNGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lFMHNJSFFnUFNBdE1TbDdDaUFnSUNBZ0lDQWdkR2hwY3k1alpXNTBaWElnUFNCbExDQjBhR2x6TG5KaFpHbDFjeUE5SUhRN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1ObGJuUmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuSmhaR2wxY3lBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVHOXBiblJ6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyVnVkR1Z5T3dvZ0lDQWdJQ0FnSUhRZ0lUMDlJSFp2YVdRZ01DQS9JRzR1WTI5d2VTaDBLU0E2SUdWbUxuTmxkRVp5YjIxUWIybHVkSE1vWlNrdVoyVjBRMlZ1ZEdWeUtHNHBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQnZJRDBnWlM1c1pXNW5kR2c3SUhJZ1BDQnZPeUJ5S3lzcGFTQTlJRTFoZEdndWJXRjRLR2tzSUc0dVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pWdHlYU2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlFMWhkR2d1YzNGeWRDaHBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1ObGJuUmxjaTVqYjNCNUtHVXVZMlZ1ZEdWeUtTd2dkR2hwY3k1eVlXUnBkWE1nUFNCbExuSmhaR2wxY3l3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdselJXMXdkSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbUZrYVhWeklEd2dNRHNLSUNBZ0lIMEtJQ0FnSUcxaGEyVkZiWEIwZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWlc1MFpYSXVjMlYwS0RBc0lEQXNJREFwTENCMGFHbHpMbkpoWkdsMWN5QTlJQzB4TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dWRHRnBibk5RYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvZEdocGN5NWpaVzUwWlhJcElEdzlJSFJvYVhNdWNtRmthWFZ6SUNvZ2RHaHBjeTV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1ScGMzUmhibU5sVkc4b2RHaHBjeTVqWlc1MFpYSXBJQzBnZEdocGN5NXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpVM0JvWlhKbEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNtRmthWFZ6SUNzZ1pTNXlZV1JwZFhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVkyVnVkR1Z5TG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0hSb2FYTXVZMlZ1ZEdWeUtTQThQU0IwSUNvZ2REc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbWx1ZEdWeWMyVmpkSE5UY0dobGNtVW9kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpVR3hoYm1Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aGxMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaDBhR2x6TG1ObGJuUmxjaWtwSUR3OUlIUm9hWE11Y21Ga2FYVnpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQlFiMmx1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtTmxiblJsY2k1a2FYTjBZVzVqWlZSdlUzRjFZWEpsWkNobEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWpiM0I1S0dVcExDQnVJRDRnZEdocGN5NXlZV1JwZFhNZ0tpQjBhR2x6TG5KaFpHbDFjeUFtSmlBb2RDNXpkV0lvZEdocGN5NWpaVzUwWlhJcExtNXZjbTFoYkdsNlpTZ3BMQ0IwTG0xMWJIUnBjR3g1VTJOaGJHRnlLSFJvYVhNdWNtRmthWFZ6S1M1aFpHUW9kR2hwY3k1alpXNTBaWElwS1N3Z2REc0tJQ0FnSUgwS0lDQWdJR2RsZEVKdmRXNWthVzVuUW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMwVnRjSFI1S0NrZ1B5QW9aUzV0WVd0bFJXMXdkSGtvS1N3Z1pTa2dPaUFvWlM1elpYUW9kR2hwY3k1alpXNTBaWElzSUhSb2FYTXVZMlZ1ZEdWeUtTd2daUzVsZUhCaGJtUkNlVk5qWVd4aGNpaDBhR2x6TG5KaFpHbDFjeWtzSUdVcE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWlc1MFpYSXVZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBhR2x6TG5KaFpHbDFjeUE5SUhSb2FYTXVjbUZrYVhWeklDb2daUzVuWlhSTllYaFRZMkZzWlU5dVFYaHBjeWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTnNZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWlc1MFpYSXVZV1JrS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ1UyOHVjM1ZpVm1WamRHOXljeWhsTENCMGFHbHpMbU5sYm5SbGNpazdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQlRieTVzWlc1bmRHaFRjU2dwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBJRDRnZEdocGN5NXlZV1JwZFhNZ0tpQjBhR2x6TG5KaFpHbDFjeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlFMWhkR2d1YzNGeWRDaDBLU3dnYVNBOUlDaHVJQzBnZEdocGN5NXlZV1JwZFhNcElDb2dMalU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTJWdWRHVnlMbUZrWkNoVGJ5NXRkV3gwYVhCc2VWTmpZV3hoY2locElDOGdiaWtwTENCMGFHbHpMbkpoWkdsMWN5QXJQU0JwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFZ1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WlhGMVlXeHpLR1V1WTJWdWRHVnlLU0E5UFQwZ0lUQWdQeUJZY2k1elpYUW9NQ3dnTUN3Z01Ta3ViWFZzZEdsd2JIbFRZMkZzWVhJb1pTNXlZV1JwZFhNcElEb2dXSEl1YzNWaVZtVmpkRzl5Y3lobExtTmxiblJsY2l3Z2RHaHBjeTVqWlc1MFpYSXBMbTV2Y20xaGJHbDZaU2dwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1V1Y21Ga2FYVnpLU3dnZEdocGN5NWxlSEJoYm1SQ2VWQnZhVzUwS0hac0xtTnZjSGtvWlM1alpXNTBaWElwTG1Ga1pDaFljaWtwTENCMGFHbHpMbVY0Y0dGdVpFSjVVRzlwYm5Rb2Rtd3VZMjl3ZVNobExtTmxiblJsY2lrdWMzVmlLRmh5S1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtTmxiblJsY2k1bGNYVmhiSE1vZEdocGN5NWpaVzUwWlhJcElDWW1JR1V1Y21Ga2FYVnpJRDA5UFNCMGFHbHpMbkpoWkdsMWN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q24wc0lHcDBJRDBnYm1WM0lFMHNJRlJ2SUQwZ2JtVjNJRTBzSUVweUlEMGdibVYzSUUwc0lHWnVJRDBnYm1WM0lFMHNJRVZ2SUQwZ2JtVjNJRTBzSUZseUlEMGdibVYzSUUwc0lFRnZJRDBnYm1WM0lFMHNJRU51SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOTENCMElEMGdibVYzSUUwb01Dd2dNQ3dnTFRFcEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG05eWFXZHBiaUE5SUdVc0lIUm9hWE11WkdseVpXTjBhVzl1SUQwZ2REc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWIzSnBaMmx1TG1OdmNIa29aU2tzSUhSb2FYTXVaR2x5WldOMGFXOXVMbU52Y0hrb2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2Y21sbmFXNHVZMjl3ZVNobExtOXlhV2RwYmlrc0lIUm9hWE11WkdseVpXTjBhVzl1TG1OdmNIa29aUzVrYVhKbFkzUnBiMjRwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1OdmNIa29kR2hwY3k1a2FYSmxZM1JwYjI0cExtMTFiSFJwY0d4NVUyTmhiR0Z5S0dVcExtRmtaQ2gwYUdsekxtOXlhV2RwYmlrN0NpQWdJQ0I5Q2lBZ0lDQnNiMjlyUVhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1ScGNtVmpkR2x2Ymk1amIzQjVLR1VwTG5OMVlpaDBhR2x6TG05eWFXZHBiaWt1Ym05eWJXRnNhWHBsS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeVpXTmhjM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTl5YVdkcGJpNWpiM0I1S0hSb2FYTXVZWFFvWlN3Z2FuUXBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjNObGMzUlFiMmx1ZEZSdlVHOXBiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFF1YzNWaVZtVmpkRzl5Y3lobExDQjBhR2x6TG05eWFXZHBiaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwTG1SdmRDaDBhR2x6TG1ScGNtVmpkR2x2YmlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z1BDQXdJRDhnZEM1amIzQjVLSFJvYVhNdWIzSnBaMmx1S1NBNklIUXVZMjl3ZVNoMGFHbHpMbVJwY21WamRHbHZiaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9iaWt1WVdSa0tIUm9hWE11YjNKcFoybHVLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5UWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VjM0Z5ZENoMGFHbHpMbVJwYzNSaGJtTmxVM0ZVYjFCdmFXNTBLR1VwS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFUzRlViMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR3AwTG5OMVlsWmxZM1J2Y25Nb1pTd2dkR2hwY3k1dmNtbG5hVzRwTG1SdmRDaDBhR2x6TG1ScGNtVmpkR2x2YmlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ1BDQXdJRDhnZEdocGN5NXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa2dPaUFvYW5RdVkyOXdlU2gwYUdsekxtUnBjbVZqZEdsdmJpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2RDa3VZV1JrS0hSb2FYTXViM0pwWjJsdUtTd2dhblF1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrcE93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlRjVlJ2VTJWbmJXVnVkQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ1ZHOHVZMjl3ZVNobEtTNWhaR1FvZENrdWJYVnNkR2x3YkhsVFkyRnNZWElvTGpVcExDQktjaTVqYjNCNUtIUXBMbk4xWWlobEtTNXViM0p0WVd4cGVtVW9LU3dnWm00dVkyOXdlU2gwYUdsekxtOXlhV2RwYmlrdWMzVmlLRlJ2S1RzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVpHbHpkR0Z1WTJWVWJ5aDBLU0FxSUM0MUxDQnZJRDBnTFhSb2FYTXVaR2x5WldOMGFXOXVMbVJ2ZENoS2Npa3NJR0VnUFNCbWJpNWtiM1FvZEdocGN5NWthWEpsWTNScGIyNHBMQ0JzSUQwZ0xXWnVMbVJ2ZENoS2Npa3NJR01nUFNCbWJpNXNaVzVuZEdoVGNTZ3BMQ0JvSUQwZ1RXRjBhQzVoWW5Nb01TQXRJRzhnS2lCdktTd2dkU3dnWkN3Z1ppd2diVHNLSUNBZ0lDQWdJQ0JwWmlBb2FDQStJREFwSUdsbUlDaDFJRDBnYnlBcUlHd2dMU0JoTENCa0lEMGdieUFxSUdFZ0xTQnNMQ0J0SUQwZ2NpQXFJR2dzSUhVZ1BqMGdNQ2tnYVdZZ0tHUWdQajBnTFcwcElHbG1JQ2hrSUR3OUlHMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNBeElDOGdhRHNLSUNBZ0lDQWdJQ0FnSUNBZ2RTQXFQU0I0TENCa0lDbzlJSGdzSUdZZ1BTQjFJQ29nS0hVZ0t5QnZJQ29nWkNBcklESWdLaUJoS1NBcklHUWdLaUFvYnlBcUlIVWdLeUJrSUNzZ01pQXFJR3dwSUNzZ1l6c0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1pDQTlJSElzSUhVZ1BTQk5ZWFJvTG0xaGVDZ3dMQ0F0S0c4Z0tpQmtJQ3NnWVNrcExDQm1JRDBnTFhVZ0tpQjFJQ3NnWkNBcUlDaGtJQ3NnTWlBcUlHd3BJQ3NnWXpzS0lDQWdJQ0FnSUNCbGJITmxJR1FnUFNBdGNpd2dkU0E5SUUxaGRHZ3ViV0Y0S0RBc0lDMG9ieUFxSUdRZ0t5QmhLU2tzSUdZZ1BTQXRkU0FxSUhVZ0t5QmtJQ29nS0dRZ0t5QXlJQ29nYkNrZ0t5QmpPd29nSUNBZ0lDQWdJR1ZzYzJVZ1pDQThQU0F0YlNBL0lDaDFJRDBnVFdGMGFDNXRZWGdvTUN3Z0xTZ3RieUFxSUhJZ0t5QmhLU2tzSUdRZ1BTQjFJRDRnTUNBL0lDMXlJRG9nVFdGMGFDNXRhVzRvVFdGMGFDNXRZWGdvTFhJc0lDMXNLU3dnY2lrc0lHWWdQU0F0ZFNBcUlIVWdLeUJrSUNvZ0tHUWdLeUF5SUNvZ2JDa2dLeUJqS1NBNklHUWdQRDBnYlNBL0lDaDFJRDBnTUN3Z1pDQTlJRTFoZEdndWJXbHVLRTFoZEdndWJXRjRLQzF5TENBdGJDa3NJSElwTENCbUlEMGdaQ0FxSUNoa0lDc2dNaUFxSUd3cElDc2dZeWtnT2lBb2RTQTlJRTFoZEdndWJXRjRLREFzSUMwb2J5QXFJSElnS3lCaEtTa3NJR1FnUFNCMUlENGdNQ0EvSUhJZ09pQk5ZWFJvTG0xcGJpaE5ZWFJvTG0xaGVDZ3RjaXdnTFd3cExDQnlLU3dnWmlBOUlDMTFJQ29nZFNBcklHUWdLaUFvWkNBcklESWdLaUJzS1NBcklHTXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ1pDQTlJRzhnUGlBd0lEOGdMWElnT2lCeUxDQjFJRDBnVFdGMGFDNXRZWGdvTUN3Z0xTaHZJQ29nWkNBcklHRXBLU3dnWmlBOUlDMTFJQ29nZFNBcklHUWdLaUFvWkNBcklESWdLaUJzS1NBcklHTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdKaVlnYmk1amIzQjVLSFJvYVhNdVpHbHlaV04wYVc5dUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loMUtTNWhaR1FvZEdocGN5NXZjbWxuYVc0cExDQnBJQ1ltSUdrdVkyOXdlU2hLY2lrdWJYVnNkR2x3YkhsVFkyRnNZWElvWkNrdVlXUmtLRlJ2S1N3Z1pqc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkRk53YUdWeVpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FuUXVjM1ZpVm1WamRHOXljeWhsTG1ObGJuUmxjaXdnZEdocGN5NXZjbWxuYVc0cE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2FuUXVaRzkwS0hSb2FYTXVaR2x5WldOMGFXOXVLU3dnYVNBOUlHcDBMbVJ2ZENocWRDa2dMU0J1SUNvZ2Jpd2djaUE5SUdVdWNtRmthWFZ6SUNvZ1pTNXlZV1JwZFhNN0NpQWdJQ0FnSUNBZ2FXWWdLR2tnUGlCeUtTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRTFoZEdndWMzRnlkQ2h5SUMwZ2FTa3NJR0VnUFNCdUlDMGdieXdnYkNBOUlHNGdLeUJ2T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoSUR3Z01DQW1KaUJzSUR3Z01DQS9JRzUxYkd3Z09pQmhJRHdnTUNBL0lIUm9hWE11WVhRb2JDd2dkQ2tnT2lCMGFHbHpMbUYwS0dFc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFOd2FHVnlaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR2x6ZEdGdVkyVlRjVlJ2VUc5cGJuUW9aUzVqWlc1MFpYSXBJRHc5SUdVdWNtRmthWFZ6SUNvZ1pTNXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVR3hoYm1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzV1YjNKdFlXd3VaRzkwS0hSb2FYTXVaR2x5WldOMGFXOXVLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnTUNrZ2NtVjBkWEp1SUdVdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0hSb2FYTXViM0pwWjJsdUtTQTlQVDBnTUNBL0lEQWdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ0xTaDBhR2x6TG05eWFXZHBiaTVrYjNRb1pTNXViM0p0WVd3cElDc2daUzVqYjI1emRHRnVkQ2tnTHlCME93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlENDlJREFnUHlCdUlEb2diblZzYkRzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRGQnNZVzVsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVpHbHpkR0Z1WTJWVWIxQnNZVzVsS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlEMDlQU0J1ZFd4c0lEOGdiblZzYkNBNklIUm9hWE11WVhRb2Jpd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelVHeGhibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWthWE4wWVc1alpWUnZVRzlwYm5Rb2RHaHBjeTV2Y21sbmFXNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJRDA5UFNBd0lIeDhJR1V1Ym05eWJXRnNMbVJ2ZENoMGFHbHpMbVJwY21WamRHbHZiaWtnS2lCMElEd2dNRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEVKdmVDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01nUFNBeElDOGdkR2hwY3k1a2FYSmxZM1JwYjI0dWVDd2dhQ0E5SURFZ0x5QjBhR2x6TG1ScGNtVmpkR2x2Ymk1NUxDQjFJRDBnTVNBdklIUm9hWE11WkdseVpXTjBhVzl1TG5vc0lHUWdQU0IwYUdsekxtOXlhV2RwYmpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWXlBK1BTQXdJRDhnS0c0Z1BTQW9aUzV0YVc0dWVDQXRJR1F1ZUNrZ0tpQmpMQ0JwSUQwZ0tHVXViV0Y0TG5nZ0xTQmtMbmdwSUNvZ1l5a2dPaUFvYmlBOUlDaGxMbTFoZUM1NElDMGdaQzU0S1NBcUlHTXNJR2tnUFNBb1pTNXRhVzR1ZUNBdElHUXVlQ2tnS2lCaktTd2dhQ0ErUFNBd0lEOGdLSElnUFNBb1pTNXRhVzR1ZVNBdElHUXVlU2tnS2lCb0xDQnZJRDBnS0dVdWJXRjRMbmtnTFNCa0xua3BJQ29nYUNrZ09pQW9jaUE5SUNobExtMWhlQzU1SUMwZ1pDNTVLU0FxSUdnc0lHOGdQU0FvWlM1dGFXNHVlU0F0SUdRdWVTa2dLaUJvS1N3Z2JpQStJRzhnZkh3Z2NpQStJR2tnZkh3Z0tDaHlJRDRnYmlCOGZDQnVJQ0U5UFNCdUtTQW1KaUFvYmlBOUlISXBMQ0FvYnlBOElHa2dmSHdnYVNBaFBUMGdhU2tnSmlZZ0tHa2dQU0J2S1N3Z2RTQStQU0F3SUQ4Z0tHRWdQU0FvWlM1dGFXNHVlaUF0SUdRdWVpa2dLaUIxTENCc0lEMGdLR1V1YldGNExub2dMU0JrTG5vcElDb2dkU2tnT2lBb1lTQTlJQ2hsTG0xaGVDNTZJQzBnWkM1NktTQXFJSFVzSUd3Z1BTQW9aUzV0YVc0dWVpQXRJR1F1ZWlrZ0tpQjFLU3dnYmlBK0lHd2dmSHdnWVNBK0lHa3BJSHg4SUNnb1lTQStJRzRnZkh3Z2JpQWhQVDBnYmlrZ0ppWWdLRzRnUFNCaEtTd2dLR3dnUENCcElIeDhJR2tnSVQwOUlHa3BJQ1ltSUNocElEMGdiQ2tzSUdrZ1BDQXdLU0EvSUc1MWJHd2dPaUIwYUdsekxtRjBLRzRnUGowZ01DQS9JRzRnT2lCcExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOQ2IzZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHVkR1Z5YzJWamRFSnZlQ2hsTENCcWRDa2dJVDA5SUc1MWJHdzdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1JVY21saGJtZHNaU2hsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdSVzh1YzNWaVZtVmpkRzl5Y3loMExDQmxLU3dnV1hJdWMzVmlWbVZqZEc5eWN5aHVMQ0JsS1N3Z1FXOHVZM0p2YzNOV1pXTjBiM0p6S0VWdkxDQlpjaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwYUdsekxtUnBjbVZqZEdsdmJpNWtiM1FvUVc4cExDQmhPd29nSUNBZ0lDQWdJR2xtSUNodklENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNrZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUdFZ1BTQXhPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYnlBOElEQXBJR0VnUFNBdE1Td2dieUE5SUMxdk93b2dJQ0FnSUNBZ0lHVnNjMlVnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ1ptNHVjM1ZpVm1WamRHOXljeWgwYUdsekxtOXlhV2RwYml3Z1pTazdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQmhJQ29nZEdocGN5NWthWEpsWTNScGIyNHVaRzkwS0ZseUxtTnliM056Vm1WamRHOXljeWhtYml3Z1dYSXBLVHNLSUNBZ0lDQWdJQ0JwWmlBb2JDQThJREFwSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1lTQXFJSFJvYVhNdVpHbHlaV04wYVc5dUxtUnZkQ2hGYnk1amNtOXpjeWhtYmlrcE93b2dJQ0FnSUNBZ0lHbG1JQ2hqSUR3Z01DQjhmQ0JzSUNzZ1l5QStJRzhwSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ0xXRWdLaUJtYmk1a2IzUW9RVzhwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJvSUR3Z01DQS9JRzUxYkd3Z09pQjBhR2x6TG1GMEtHZ2dMeUJ2TENCeUtUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YjNKcFoybHVMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkR2hwY3k1a2FYSmxZM1JwYjI0dWRISmhibk5tYjNKdFJHbHlaV04wYVc5dUtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV2Y21sbmFXNHVaWEYxWVd4ektIUm9hWE11YjNKcFoybHVLU0FtSmlCbExtUnBjbVZqZEdsdmJpNWxjWFZoYkhNb2RHaHBjeTVrYVhKbFkzUnBiMjRwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmU3dnY0dVZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lIUm9hWE11Wld4bGJXVnVkSE1nUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkTENCaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01DQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TllYUnlhWGcwT2lCMGFHVWdZMjl1YzNSeWRXTjBiM0lnYm04Z2JHOXVaMlZ5SUhKbFlXUnpJR0Z5WjNWdFpXNTBjeTRnZFhObElDNXpaWFFvS1NCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01zSUdnc0lIVXNJR1FzSUdZc0lHMHNJSGdzSUhZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlIUm9hWE11Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2RiTUYwZ1BTQmxMQ0JuV3pSZElEMGdkQ3dnWjFzNFhTQTlJRzRzSUdkYk1USmRJRDBnYVN3Z1oxc3hYU0E5SUhJc0lHZGJOVjBnUFNCdkxDQm5XemxkSUQwZ1lTd2daMXN4TTEwZ1BTQnNMQ0JuV3pKZElEMGdZeXdnWjFzMlhTQTlJR2dzSUdkYk1UQmRJRDBnZFN3Z1oxc3hORjBnUFNCa0xDQm5Xek5kSUQwZ1ppd2daMXMzWFNBOUlHMHNJR2RiTVRGZElEMGdlQ3dnWjFzeE5WMGdQU0IyTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYVdSbGJuUnBkSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0RFc0lEQXNJREFzSURBc0lEQXNJREVzSURBc0lEQXNJREFzSURBc0lERXNJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QndaU2dwTG1aeWIyMUJjbkpoZVNoMGFHbHpMbVZzWlcxbGJuUnpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYk1GMGdQU0J1V3pCZExDQjBXekZkSUQwZ2Jsc3hYU3dnZEZzeVhTQTlJRzViTWwwc0lIUmJNMTBnUFNCdVd6TmRMQ0IwV3pSZElEMGdibHMwWFN3Z2RGczFYU0E5SUc1Yk5WMHNJSFJiTmwwZ1BTQnVXelpkTENCMFd6ZGRJRDBnYmxzM1hTd2dkRnM0WFNBOUlHNWJPRjBzSUhSYk9WMGdQU0J1V3psZExDQjBXekV3WFNBOUlHNWJNVEJkTENCMFd6RXhYU0E5SUc1Yk1URmRMQ0IwV3pFeVhTQTlJRzViTVRKZExDQjBXekV6WFNBOUlHNWJNVE5kTENCMFd6RTBYU0E5SUc1Yk1UUmRMQ0IwV3pFMVhTQTlJRzViTVRWZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVkJ2YzJsMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFd6RXlYU0E5SUc1Yk1USmRMQ0IwV3pFelhTQTlJRzViTVROZExDQjBXekUwWFNBOUlHNWJNVFJkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVTFoZEhKcGVETW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvZEZzd1hTd2dkRnN6WFN3Z2RGczJYU3dnTUN3Z2RGc3hYU3dnZEZzMFhTd2dkRnMzWFN3Z01Dd2dkRnN5WFN3Z2RGczFYU3dnZEZzNFhTd2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIUnlZV04wUW1GemFYTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbk5sZEVaeWIyMU5ZWFJ5YVhoRGIyeDFiVzRvZEdocGN5d2dNQ2tzSUhRdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaDBhR2x6TENBeEtTd2diaTV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0hSb2FYTXNJRElwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpVSmhjMmx6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvWlM1NExDQjBMbmdzSUc0dWVDd2dNQ3dnWlM1NUxDQjBMbmtzSUc0dWVTd2dNQ3dnWlM1NkxDQjBMbm9zSUc0dWVpd2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIUnlZV04wVW05MFlYUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVaV3hsYldWdWRITXNJR2tnUFNBeElDOGdjMmt1YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQXdLUzVzWlc1bmRHZ29LU3dnY2lBOUlERWdMeUJ6YVM1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHVXNJREVwTG14bGJtZDBhQ2dwTENCdklEMGdNU0F2SUhOcExuTmxkRVp5YjIxTllYUnlhWGhEYjJ4MWJXNG9aU3dnTWlrdWJHVnVaM1JvS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYk1GMGdQU0J1V3pCZElDb2dhU3dnZEZzeFhTQTlJRzViTVYwZ0tpQnBMQ0IwV3pKZElEMGdibHN5WFNBcUlHa3NJSFJiTTEwZ1BTQXdMQ0IwV3pSZElEMGdibHMwWFNBcUlISXNJSFJiTlYwZ1BTQnVXelZkSUNvZ2Npd2dkRnMyWFNBOUlHNWJObDBnS2lCeUxDQjBXemRkSUQwZ01Dd2dkRnM0WFNBOUlHNWJPRjBnS2lCdkxDQjBXemxkSUQwZ2JsczVYU0FxSUc4c0lIUmJNVEJkSUQwZ2Jsc3hNRjBnS2lCdkxDQjBXekV4WFNBOUlEQXNJSFJiTVRKZElEMGdNQ3dnZEZzeE0xMGdQU0F3TENCMFd6RTBYU0E5SURBc0lIUmJNVFZkSUQwZ01Td2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZTYjNSaGRHbHZia1p5YjIxRmRXeGxjaWhsS1NCN0NpQWdJQ0FnSUNBZ1pTQW1KaUJsTG1selJYVnNaWElnZkh3Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbTFoYTJWU2IzUmhkR2x2YmtaeWIyMUZkV3hsY2lncElHNXZkeUJsZUhCbFkzUnpJR0VnUlhWc1pYSWdjbTkwWVhScGIyNGdjbUYwYUdWeUlIUm9ZVzRnWVNCV1pXTjBiM0l6SUdGdVpDQnZjbVJsY2k0aUtUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUc0Z1BTQmxMbmdzSUdrZ1BTQmxMbmtzSUhJZ1BTQmxMbm9zSUc4Z1BTQk5ZWFJvTG1OdmN5aHVLU3dnWVNBOUlFMWhkR2d1YzJsdUtHNHBMQ0JzSUQwZ1RXRjBhQzVqYjNNb2FTa3NJR01nUFNCTllYUm9Mbk5wYmlocEtTd2dhQ0E5SUUxaGRHZ3VZMjl6S0hJcExDQjFJRDBnVFdGMGFDNXphVzRvY2lrN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1YjNKa1pYSWdQVDA5SUNKWVdWb2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2J5QXFJR2dzSUdZZ1BTQnZJQ29nZFN3Z2JTQTlJR0VnS2lCb0xDQjRJRDBnWVNBcUlIVTdDaUFnSUNBZ0lDQWdJQ0FnSUhSYk1GMGdQU0JzSUNvZ2FDd2dkRnMwWFNBOUlDMXNJQ29nZFN3Z2RGczRYU0E5SUdNc0lIUmJNVjBnUFNCbUlDc2diU0FxSUdNc0lIUmJOVjBnUFNCa0lDMGdlQ0FxSUdNc0lIUmJPVjBnUFNBdFlTQXFJR3dzSUhSYk1sMGdQU0I0SUMwZ1pDQXFJR01zSUhSYk5sMGdQU0J0SUNzZ1ppQXFJR01zSUhSYk1UQmRJRDBnYnlBcUlHdzdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hsTG05eVpHVnlJRDA5UFNBaVdWaGFJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkRFZ1BTQnNJQ29nYUN3Z1pqRWdQU0JzSUNvZ2RTd2diVEVnUFNCaklDb2dhQ3dnZURFZ1BTQmpJQ29nZFRzS0lDQWdJQ0FnSUNBZ0lDQWdkRnN3WFNBOUlHUXhJQ3NnZURFZ0tpQmhMQ0IwV3pSZElEMGdiVEVnS2lCaElDMGdaakVzSUhSYk9GMGdQU0J2SUNvZ1l5d2dkRnN4WFNBOUlHOGdLaUIxTENCMFd6VmRJRDBnYnlBcUlHZ3NJSFJiT1YwZ1BTQXRZU3dnZEZzeVhTQTlJR1l4SUNvZ1lTQXRJRzB4TENCMFd6WmRJRDBnZURFZ0t5QmtNU0FxSUdFc0lIUmJNVEJkSUQwZ2J5QXFJR3c3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNobExtOXlaR1Z5SUQwOVBTQWlXbGhaSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pESWdQU0JzSUNvZ2FDd2daaklnUFNCc0lDb2dkU3dnYlRJZ1BTQmpJQ29nYUN3Z2VESWdQU0JqSUNvZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZzd1hTQTlJR1F5SUMwZ2VESWdLaUJoTENCMFd6UmRJRDBnTFc4Z0tpQjFMQ0IwV3poZElEMGdiVElnS3lCbU1pQXFJR0VzSUhSYk1WMGdQU0JtTWlBcklHMHlJQ29nWVN3Z2RGczFYU0E5SUc4Z0tpQm9MQ0IwV3psZElEMGdlRElnTFNCa01pQXFJR0VzSUhSYk1sMGdQU0F0YnlBcUlHTXNJSFJiTmwwZ1BTQmhMQ0IwV3pFd1hTQTlJRzhnS2lCc093b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aUzV2Y21SbGNpQTlQVDBnSWxwWldDSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1F6SUQwZ2J5QXFJR2dzSUdZeklEMGdieUFxSUhVc0lHMHpJRDBnWVNBcUlHZ3NJSGd6SUQwZ1lTQXFJSFU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJNRjBnUFNCc0lDb2dhQ3dnZEZzMFhTQTlJRzB6SUNvZ1l5QXRJR1l6TENCMFd6aGRJRDBnWkRNZ0tpQmpJQ3NnZURNc0lIUmJNVjBnUFNCc0lDb2dkU3dnZEZzMVhTQTlJSGd6SUNvZ1l5QXJJR1F6TENCMFd6bGRJRDBnWmpNZ0tpQmpJQzBnYlRNc0lIUmJNbDBnUFNBdFl5d2dkRnMyWFNBOUlHRWdLaUJzTENCMFd6RXdYU0E5SUc4Z0tpQnNPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWlM1dmNtUmxjaUE5UFQwZ0lsbGFXQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRMElEMGdieUFxSUd3c0lHWTBJRDBnYnlBcUlHTXNJRzAwSUQwZ1lTQXFJR3dzSUhnMElEMGdZU0FxSUdNN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwZ1BTQnNJQ29nYUN3Z2RGczBYU0E5SUhnMElDMGdaRFFnS2lCMUxDQjBXemhkSUQwZ2JUUWdLaUIxSUNzZ1pqUXNJSFJiTVYwZ1BTQjFMQ0IwV3pWZElEMGdieUFxSUdnc0lIUmJPVjBnUFNBdFlTQXFJR2dzSUhSYk1sMGdQU0F0WXlBcUlHZ3NJSFJiTmwwZ1BTQm1OQ0FxSUhVZ0t5QnROQ3dnZEZzeE1GMGdQU0JrTkNBdElIZzBJQ29nZFRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHVXViM0prWlhJZ1BUMDlJQ0pZV2xraUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtOU0E5SUc4Z0tpQnNMQ0JtTlNBOUlHOGdLaUJqTENCdE5TQTlJR0VnS2lCc0xDQjROU0E5SUdFZ0tpQmpPd29nSUNBZ0lDQWdJQ0FnSUNCMFd6QmRJRDBnYkNBcUlHZ3NJSFJiTkYwZ1BTQXRkU3dnZEZzNFhTQTlJR01nS2lCb0xDQjBXekZkSUQwZ1pEVWdLaUIxSUNzZ2VEVXNJSFJiTlYwZ1BTQnZJQ29nYUN3Z2RGczVYU0E5SUdZMUlDb2dkU0F0SUcwMUxDQjBXekpkSUQwZ2JUVWdLaUIxSUMwZ1pqVXNJSFJiTmwwZ1BTQmhJQ29nYUN3Z2RGc3hNRjBnUFNCNE5TQXFJSFVnS3lCa05Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmJNMTBnUFNBd0xDQjBXemRkSUQwZ01Dd2dkRnN4TVYwZ1BTQXdMQ0IwV3pFeVhTQTlJREFzSUhSYk1UTmRJRDBnTUN3Z2RGc3hORjBnUFNBd0xDQjBXekUxWFNBOUlERXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXRjRzl6WlNoMFppd2daU3dnYm1ZcE93b2dJQ0FnZlFvZ0lDQWdiRzl2YTBGMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRk4wTG5OMVlsWmxZM1J2Y25Nb1pTd2dkQ2tzSUZOMExteGxibWQwYUZOeEtDa2dQVDA5SURBZ0ppWWdLRk4wTG5vZ1BTQXhLU3dnVTNRdWJtOXliV0ZzYVhwbEtDa3NJSEJ1TG1OeWIzTnpWbVZqZEc5eWN5aHVMQ0JUZENrc0lIQnVMbXhsYm1kMGFGTnhLQ2tnUFQwOUlEQWdKaVlnS0UxaGRHZ3VZV0p6S0c0dWVpa2dQVDA5SURFZ1B5QlRkQzU0SUNzOUlERmxMVFFnT2lCVGRDNTZJQ3M5SURGbExUUXNJRk4wTG01dmNtMWhiR2w2WlNncExDQndiaTVqY205emMxWmxZM1J2Y25Nb2Jpd2dVM1FwS1N3Z2NHNHVibTl5YldGc2FYcGxLQ2tzSUZweUxtTnliM056Vm1WamRHOXljeWhUZEN3Z2NHNHBMQ0JwV3pCZElEMGdjRzR1ZUN3Z2FWczBYU0E5SUZweUxuZ3NJR2xiT0YwZ1BTQlRkQzU0TENCcFd6RmRJRDBnY0c0dWVTd2dhVnMxWFNBOUlGcHlMbmtzSUdsYk9WMGdQU0JUZEM1NUxDQnBXekpkSUQwZ2NHNHVlaXdnYVZzMlhTQTlJRnB5TG5vc0lHbGJNVEJkSUQwZ1UzUXVlaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtMTFiSFJwY0d4NUtDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lobExDQjBLU2tnT2lCMGFHbHpMbTExYkhScGNHeDVUV0YwY21salpYTW9kR2hwY3l3Z1pTazdDaUFnSUNCOUNpQWdJQ0J3Y21WdGRXeDBhWEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhsTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1VFdGMGNtbGpaWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVsYkdWdFpXNTBjeXdnYVNBOUlIUXVaV3hsYldWdWRITXNJSElnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J2SUQwZ2Jsc3dYU3dnWVNBOUlHNWJORjBzSUd3Z1BTQnVXemhkTENCaklEMGdibHN4TWwwc0lHZ2dQU0J1V3pGZExDQjFJRDBnYmxzMVhTd2daQ0E5SUc1Yk9WMHNJR1lnUFNCdVd6RXpYU3dnYlNBOUlHNWJNbDBzSUhnZ1BTQnVXelpkTENCMklEMGdibHN4TUYwc0lHY2dQU0J1V3pFMFhTd2djQ0E5SUc1Yk0xMHNJRjhnUFNCdVd6ZGRMQ0I1SUQwZ2Jsc3hNVjBzSUdJZ1BTQnVXekUxWFN3Z1FTQTlJR2xiTUYwc0lFd2dQU0JwV3pSZExDQkpJRDBnYVZzNFhTd2dheUE5SUdsYk1USmRMQ0JDSUQwZ2FWc3hYU3dnVUNBOUlHbGJOVjBzSUhjZ1BTQnBXemxkTENCRklEMGdhVnN4TTEwc0lFUWdQU0JwV3pKZExDQlZJRDBnYVZzMlhTd2dSaUE5SUdsYk1UQmRMQ0JQSUQwZ2FWc3hORjBzSUc1bElEMGdhVnN6WFN3Z1kyVWdQU0JwV3pkZExDQldJRDBnYVZzeE1WMHNJRmNnUFNCcFd6RTFYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbHN3WFNBOUlHOGdLaUJCSUNzZ1lTQXFJRUlnS3lCc0lDb2dSQ0FySUdNZ0tpQnVaU3dnY2xzMFhTQTlJRzhnS2lCTUlDc2dZU0FxSUZBZ0t5QnNJQ29nVlNBcklHTWdLaUJqWlN3Z2NsczRYU0E5SUc4Z0tpQkpJQ3NnWVNBcUlIY2dLeUJzSUNvZ1JpQXJJR01nS2lCV0xDQnlXekV5WFNBOUlHOGdLaUJySUNzZ1lTQXFJRVVnS3lCc0lDb2dUeUFySUdNZ0tpQlhMQ0J5V3pGZElEMGdhQ0FxSUVFZ0t5QjFJQ29nUWlBcklHUWdLaUJFSUNzZ1ppQXFJRzVsTENCeVd6VmRJRDBnYUNBcUlFd2dLeUIxSUNvZ1VDQXJJR1FnS2lCVklDc2daaUFxSUdObExDQnlXemxkSUQwZ2FDQXFJRWtnS3lCMUlDb2dkeUFySUdRZ0tpQkdJQ3NnWmlBcUlGWXNJSEpiTVROZElEMGdhQ0FxSUdzZ0t5QjFJQ29nUlNBcklHUWdLaUJQSUNzZ1ppQXFJRmNzSUhKYk1sMGdQU0J0SUNvZ1FTQXJJSGdnS2lCQ0lDc2dkaUFxSUVRZ0t5Qm5JQ29nYm1Vc0lISmJObDBnUFNCdElDb2dUQ0FySUhnZ0tpQlFJQ3NnZGlBcUlGVWdLeUJuSUNvZ1kyVXNJSEpiTVRCZElEMGdiU0FxSUVrZ0t5QjRJQ29nZHlBcklIWWdLaUJHSUNzZ1p5QXFJRllzSUhKYk1UUmRJRDBnYlNBcUlHc2dLeUI0SUNvZ1JTQXJJSFlnS2lCUElDc2daeUFxSUZjc0lISmJNMTBnUFNCd0lDb2dRU0FySUY4Z0tpQkNJQ3NnZVNBcUlFUWdLeUJpSUNvZ2JtVXNJSEpiTjEwZ1BTQndJQ29nVENBcklGOGdLaUJRSUNzZ2VTQXFJRlVnS3lCaUlDb2dZMlVzSUhKYk1URmRJRDBnY0NBcUlFa2dLeUJmSUNvZ2R5QXJJSGtnS2lCR0lDc2dZaUFxSUZZc0lISmJNVFZkSUQwZ2NDQXFJR3NnS3lCZklDb2dSU0FySUhrZ0tpQlBJQ3NnWWlBcUlGY3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pCZElDbzlJR1VzSUhSYk5GMGdLajBnWlN3Z2RGczRYU0FxUFNCbExDQjBXekV5WFNBcVBTQmxMQ0IwV3pGZElDbzlJR1VzSUhSYk5WMGdLajBnWlN3Z2RGczVYU0FxUFNCbExDQjBXekV6WFNBcVBTQmxMQ0IwV3pKZElDbzlJR1VzSUhSYk5sMGdLajBnWlN3Z2RGc3hNRjBnS2owZ1pTd2dkRnN4TkYwZ0tqMGdaU3dnZEZzelhTQXFQU0JsTENCMFd6ZGRJQ285SUdVc0lIUmJNVEZkSUNvOUlHVXNJSFJiTVRWZElDbzlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrWlhSbGNtMXBibUZ1ZENncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUhRZ1BTQmxXekJkTENCdUlEMGdaVnMwWFN3Z2FTQTlJR1ZiT0Ywc0lISWdQU0JsV3pFeVhTd2dieUE5SUdWYk1WMHNJR0VnUFNCbFd6VmRMQ0JzSUQwZ1pWczVYU3dnWXlBOUlHVmJNVE5kTENCb0lEMGdaVnN5WFN3Z2RTQTlJR1ZiTmwwc0lHUWdQU0JsV3pFd1hTd2daaUE5SUdWYk1UUmRMQ0J0SUQwZ1pWc3pYU3dnZUNBOUlHVmJOMTBzSUhZZ1BTQmxXekV4WFN3Z1p5QTlJR1ZiTVRWZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdElDb2dLQ3R5SUNvZ2JDQXFJSFVnTFNCcElDb2dZeUFxSUhVZ0xTQnlJQ29nWVNBcUlHUWdLeUJ1SUNvZ1l5QXFJR1FnS3lCcElDb2dZU0FxSUdZZ0xTQnVJQ29nYkNBcUlHWXBJQ3NnZUNBcUlDZ3JkQ0FxSUd3Z0tpQm1JQzBnZENBcUlHTWdLaUJrSUNzZ2NpQXFJRzhnS2lCa0lDMGdhU0FxSUc4Z0tpQm1JQ3NnYVNBcUlHTWdLaUJvSUMwZ2NpQXFJR3dnS2lCb0tTQXJJSFlnS2lBb0szUWdLaUJqSUNvZ2RTQXRJSFFnS2lCaElDb2daaUF0SUhJZ0tpQnZJQ29nZFNBcklHNGdLaUJ2SUNvZ1ppQXJJSElnS2lCaElDb2dhQ0F0SUc0Z0tpQmpJQ29nYUNrZ0t5Qm5JQ29nS0MxcElDb2dZU0FxSUdnZ0xTQjBJQ29nYkNBcUlIVWdLeUIwSUNvZ1lTQXFJR1FnS3lCcElDb2dieUFxSUhVZ0xTQnVJQ29nYnlBcUlHUWdLeUJ1SUNvZ2JDQXFJR2dwT3dvZ0lDQWdmUW9nSUNBZ2RISmhibk53YjNObEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQTlJR1ZiTVYwc0lHVmJNVjBnUFNCbFd6UmRMQ0JsV3pSZElEMGdkQ3dnZENBOUlHVmJNbDBzSUdWYk1sMGdQU0JsV3poZExDQmxXemhkSUQwZ2RDd2dkQ0E5SUdWYk5sMHNJR1ZiTmwwZ1BTQmxXemxkTENCbFd6bGRJRDBnZEN3Z2RDQTlJR1ZiTTEwc0lHVmJNMTBnUFNCbFd6RXlYU3dnWlZzeE1sMGdQU0IwTENCMElEMGdaVnMzWFN3Z1pWczNYU0E5SUdWYk1UTmRMQ0JsV3pFelhTQTlJSFFzSUhRZ1BTQmxXekV4WFN3Z1pWc3hNVjBnUFNCbFd6RTBYU3dnWlZzeE5GMGdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVHOXphWFJwYjI0b1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVwYzFabFkzUnZjak1nUHlBb2FWc3hNbDBnUFNCbExuZ3NJR2xiTVROZElEMGdaUzU1TENCcFd6RTBYU0E5SUdVdWVpa2dPaUFvYVZzeE1sMGdQU0JsTENCcFd6RXpYU0E5SUhRc0lHbGJNVFJkSUQwZ2Jpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnBiblpsY25Rb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCMElEMGdaVnN3WFN3Z2JpQTlJR1ZiTVYwc0lHa2dQU0JsV3pKZExDQnlJRDBnWlZzelhTd2dieUE5SUdWYk5GMHNJR0VnUFNCbFd6VmRMQ0JzSUQwZ1pWczJYU3dnWXlBOUlHVmJOMTBzSUdnZ1BTQmxXemhkTENCMUlEMGdaVnM1WFN3Z1pDQTlJR1ZiTVRCZExDQm1JRDBnWlZzeE1WMHNJRzBnUFNCbFd6RXlYU3dnZUNBOUlHVmJNVE5kTENCMklEMGdaVnN4TkYwc0lHY2dQU0JsV3pFMVhTd2djQ0E5SUhVZ0tpQjJJQ29nWXlBdElIZ2dLaUJrSUNvZ1l5QXJJSGdnS2lCc0lDb2daaUF0SUdFZ0tpQjJJQ29nWmlBdElIVWdLaUJzSUNvZ1p5QXJJR0VnS2lCa0lDb2daeXdnWHlBOUlHMGdLaUJrSUNvZ1l5QXRJR2dnS2lCMklDb2dZeUF0SUcwZ0tpQnNJQ29nWmlBcklHOGdLaUIySUNvZ1ppQXJJR2dnS2lCc0lDb2daeUF0SUc4Z0tpQmtJQ29nWnl3Z2VTQTlJR2dnS2lCNElDb2dZeUF0SUcwZ0tpQjFJQ29nWXlBcklHMGdLaUJoSUNvZ1ppQXRJRzhnS2lCNElDb2daaUF0SUdnZ0tpQmhJQ29nWnlBcklHOGdLaUIxSUNvZ1p5d2dZaUE5SUcwZ0tpQjFJQ29nYkNBdElHZ2dLaUI0SUNvZ2JDQXRJRzBnS2lCaElDb2daQ0FySUc4Z0tpQjRJQ29nWkNBcklHZ2dLaUJoSUNvZ2RpQXRJRzhnS2lCMUlDb2dkaXdnUVNBOUlIUWdLaUJ3SUNzZ2JpQXFJRjhnS3lCcElDb2dlU0FySUhJZ0tpQmlPd29nSUNBZ0lDQWdJR2xtSUNoQklEMDlQU0F3S1NCeVpYUjFjbTRnZEdocGN5NXpaWFFvTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ2JHVjBJRXdnUFNBeElDOGdRVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnN3WFNBOUlIQWdLaUJNTENCbFd6RmRJRDBnS0hnZ0tpQmtJQ29nY2lBdElIVWdLaUIySUNvZ2NpQXRJSGdnS2lCcElDb2daaUFySUc0Z0tpQjJJQ29nWmlBcklIVWdLaUJwSUNvZ1p5QXRJRzRnS2lCa0lDb2daeWtnS2lCTUxDQmxXekpkSUQwZ0tHRWdLaUIySUNvZ2NpQXRJSGdnS2lCc0lDb2djaUFySUhnZ0tpQnBJQ29nWXlBdElHNGdLaUIySUNvZ1l5QXRJR0VnS2lCcElDb2daeUFySUc0Z0tpQnNJQ29nWnlrZ0tpQk1MQ0JsV3pOZElEMGdLSFVnS2lCc0lDb2djaUF0SUdFZ0tpQmtJQ29nY2lBdElIVWdLaUJwSUNvZ1l5QXJJRzRnS2lCa0lDb2dZeUFySUdFZ0tpQnBJQ29nWmlBdElHNGdLaUJzSUNvZ1ppa2dLaUJNTENCbFd6UmRJRDBnWHlBcUlFd3NJR1ZiTlYwZ1BTQW9hQ0FxSUhZZ0tpQnlJQzBnYlNBcUlHUWdLaUJ5SUNzZ2JTQXFJR2tnS2lCbUlDMGdkQ0FxSUhZZ0tpQm1JQzBnYUNBcUlHa2dLaUJuSUNzZ2RDQXFJR1FnS2lCbktTQXFJRXdzSUdWYk5sMGdQU0FvYlNBcUlHd2dLaUJ5SUMwZ2J5QXFJSFlnS2lCeUlDMGdiU0FxSUdrZ0tpQmpJQ3NnZENBcUlIWWdLaUJqSUNzZ2J5QXFJR2tnS2lCbklDMGdkQ0FxSUd3Z0tpQm5LU0FxSUV3c0lHVmJOMTBnUFNBb2J5QXFJR1FnS2lCeUlDMGdhQ0FxSUd3Z0tpQnlJQ3NnYUNBcUlHa2dLaUJqSUMwZ2RDQXFJR1FnS2lCaklDMGdieUFxSUdrZ0tpQm1JQ3NnZENBcUlHd2dLaUJtS1NBcUlFd3NJR1ZiT0YwZ1BTQjVJQ29nVEN3Z1pWczVYU0E5SUNodElDb2dkU0FxSUhJZ0xTQm9JQ29nZUNBcUlISWdMU0J0SUNvZ2JpQXFJR1lnS3lCMElDb2dlQ0FxSUdZZ0t5Qm9JQ29nYmlBcUlHY2dMU0IwSUNvZ2RTQXFJR2NwSUNvZ1RDd2daVnN4TUYwZ1BTQW9ieUFxSUhnZ0tpQnlJQzBnYlNBcUlHRWdLaUJ5SUNzZ2JTQXFJRzRnS2lCaklDMGdkQ0FxSUhnZ0tpQmpJQzBnYnlBcUlHNGdLaUJuSUNzZ2RDQXFJR0VnS2lCbktTQXFJRXdzSUdWYk1URmRJRDBnS0dnZ0tpQmhJQ29nY2lBdElHOGdLaUIxSUNvZ2NpQXRJR2dnS2lCdUlDb2dZeUFySUhRZ0tpQjFJQ29nWXlBcklHOGdLaUJ1SUNvZ1ppQXRJSFFnS2lCaElDb2daaWtnS2lCTUxDQmxXekV5WFNBOUlHSWdLaUJNTENCbFd6RXpYU0E5SUNob0lDb2dlQ0FxSUdrZ0xTQnRJQ29nZFNBcUlHa2dLeUJ0SUNvZ2JpQXFJR1FnTFNCMElDb2dlQ0FxSUdRZ0xTQm9JQ29nYmlBcUlIWWdLeUIwSUNvZ2RTQXFJSFlwSUNvZ1RDd2daVnN4TkYwZ1BTQW9iU0FxSUdFZ0tpQnBJQzBnYnlBcUlIZ2dLaUJwSUMwZ2JTQXFJRzRnS2lCc0lDc2dkQ0FxSUhnZ0tpQnNJQ3NnYnlBcUlHNGdLaUIySUMwZ2RDQXFJR0VnS2lCMktTQXFJRXdzSUdWYk1UVmRJRDBnS0c4Z0tpQjFJQ29nYVNBdElHZ2dLaUJoSUNvZ2FTQXJJR2dnS2lCdUlDb2diQ0F0SUhRZ0tpQjFJQ29nYkNBdElHOGdLaUJ1SUNvZ1pDQXJJSFFnS2lCaElDb2daQ2tnS2lCTUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyTmhiR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVlQ3dnYVNBOUlHVXVlU3dnY2lBOUlHVXVlanNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRnN3WFNBcVBTQnVMQ0IwV3pSZElDbzlJR2tzSUhSYk9GMGdLajBnY2l3Z2RGc3hYU0FxUFNCdUxDQjBXelZkSUNvOUlHa3NJSFJiT1YwZ0tqMGdjaXdnZEZzeVhTQXFQU0J1TENCMFd6WmRJQ285SUdrc0lIUmJNVEJkSUNvOUlISXNJSFJiTTEwZ0tqMGdiaXdnZEZzM1hTQXFQU0JwTENCMFd6RXhYU0FxUFNCeUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBUV0Y0VTJOaGJHVlBia0Y0YVhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCMElEMGdaVnN3WFNBcUlHVmJNRjBnS3lCbFd6RmRJQ29nWlZzeFhTQXJJR1ZiTWwwZ0tpQmxXekpkTENCdUlEMGdaVnMwWFNBcUlHVmJORjBnS3lCbFd6VmRJQ29nWlZzMVhTQXJJR1ZiTmwwZ0tpQmxXelpkTENCcElEMGdaVnM0WFNBcUlHVmJPRjBnS3lCbFd6bGRJQ29nWlZzNVhTQXJJR1ZiTVRCZElDb2daVnN4TUYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VjM0Z5ZENoTllYUm9MbTFoZUNoMExDQnVMQ0JwS1NrN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVkhKaGJuTnNZWFJwYjI0b1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENneExDQXdMQ0F3TENCbExDQXdMQ0F4TENBd0xDQjBMQ0F3TENBd0xDQXhMQ0J1TENBd0xDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZTYjNSaGRHbHZibGdvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1RXRjBhQzVqYjNNb1pTa3NJRzRnUFNCTllYUm9Mbk5wYmlobEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Td2dNQ3dnTUN3Z01Dd2dNQ3dnZEN3Z0xXNHNJREFzSURBc0lHNHNJSFFzSURBc0lEQXNJREFzSURBc0lERXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlZKdmRHRjBhVzl1V1NobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQk5ZWFJvTG1OdmN5aGxLU3dnYmlBOUlFMWhkR2d1YzJsdUtHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDaDBMQ0F3TENCdUxDQXdMQ0F3TENBeExDQXdMQ0F3TENBdGJpd2dNQ3dnZEN3Z01Dd2dNQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFVtOTBZWFJwYjI1YUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndVkyOXpLR1VwTENCdUlEMGdUV0YwYUM1emFXNG9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLSFFzSUMxdUxDQXdMQ0F3TENCdUxDQjBMQ0F3TENBd0xDQXdMQ0F3TENBeExDQXdMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlNiM1JoZEdsdmJrRjRhWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdUV0YwYUM1amIzTW9kQ2tzSUdrZ1BTQk5ZWFJvTG5OcGJpaDBLU3dnY2lBOUlERWdMU0J1TENCdklEMGdaUzU0TENCaElEMGdaUzU1TENCc0lEMGdaUzU2TENCaklEMGdjaUFxSUc4c0lHZ2dQU0J5SUNvZ1lUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb1l5QXFJRzhnS3lCdUxDQmpJQ29nWVNBdElHa2dLaUJzTENCaklDb2diQ0FySUdrZ0tpQmhMQ0F3TENCaklDb2dZU0FySUdrZ0tpQnNMQ0JvSUNvZ1lTQXJJRzRzSUdnZ0tpQnNJQzBnYVNBcUlHOHNJREFzSUdNZ0tpQnNJQzBnYVNBcUlHRXNJR2dnS2lCc0lDc2dhU0FxSUc4c0lISWdLaUJzSUNvZ2JDQXJJRzRzSURBc0lEQXNJREFzSURBc0lERXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlZOallXeGxLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9aU3dnTUN3Z01Dd2dNQ3dnTUN3Z2RDd2dNQ3dnTUN3Z01Dd2dNQ3dnYml3Z01Dd2dNQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFUyaGxZWElvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d4TENCdUxDQnlMQ0F3TENCbExDQXhMQ0J2TENBd0xDQjBMQ0JwTENBeExDQXdMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmJYQnZjMlVvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2djaUE5SUhRdVgzZ3NJRzhnUFNCMExsOTVMQ0JoSUQwZ2RDNWZlaXdnYkNBOUlIUXVYM2NzSUdNZ1BTQnlJQ3NnY2l3Z2FDQTlJRzhnS3lCdkxDQjFJRDBnWVNBcklHRXNJR1FnUFNCeUlDb2dZeXdnWmlBOUlISWdLaUJvTENCdElEMGdjaUFxSUhVc0lIZ2dQU0J2SUNvZ2FDd2dkaUE5SUc4Z0tpQjFMQ0JuSUQwZ1lTQXFJSFVzSUhBZ1BTQnNJQ29nWXl3Z1h5QTlJR3dnS2lCb0xDQjVJRDBnYkNBcUlIVXNJR0lnUFNCdUxuZ3NJRUVnUFNCdUxua3NJRXdnUFNCdUxubzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHbGJNRjBnUFNBb01TQXRJQ2g0SUNzZ1p5a3BJQ29nWWl3Z2FWc3hYU0E5SUNobUlDc2dlU2tnS2lCaUxDQnBXekpkSUQwZ0tHMGdMU0JmS1NBcUlHSXNJR2xiTTEwZ1BTQXdMQ0JwV3pSZElEMGdLR1lnTFNCNUtTQXFJRUVzSUdsYk5WMGdQU0FvTVNBdElDaGtJQ3NnWnlrcElDb2dRU3dnYVZzMlhTQTlJQ2gySUNzZ2NDa2dLaUJCTENCcFd6ZGRJRDBnTUN3Z2FWczRYU0E5SUNodElDc2dYeWtnS2lCTUxDQnBXemxkSUQwZ0tIWWdMU0J3S1NBcUlFd3NJR2xiTVRCZElEMGdLREVnTFNBb1pDQXJJSGdwS1NBcUlFd3NJR2xiTVRGZElEMGdNQ3dnYVZzeE1sMGdQU0JsTG5nc0lHbGJNVE5kSUQwZ1pTNTVMQ0JwV3pFMFhTQTlJR1V1ZWl3Z2FWc3hOVjBnUFNBeExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHVmpiMjF3YjNObEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUhJZ1BTQnphUzV6WlhRb2FWc3dYU3dnYVZzeFhTd2dhVnN5WFNrdWJHVnVaM1JvS0Nrc0lHOGdQU0J6YVM1elpYUW9hVnMwWFN3Z2FWczFYU3dnYVZzMlhTa3ViR1Z1WjNSb0tDa3NJR0VnUFNCemFTNXpaWFFvYVZzNFhTd2dhVnM1WFN3Z2FWc3hNRjBwTG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaR1YwWlhKdGFXNWhiblFvS1NBOElEQWdKaVlnS0hJZ1BTQXRjaWtzSUdVdWVDQTlJR2xiTVRKZExDQmxMbmtnUFNCcFd6RXpYU3dnWlM1NklEMGdhVnN4TkYwc0lFbDBMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0F4SUM4Z2Npd2dhQ0E5SURFZ0x5QnZMQ0IxSUQwZ01TQXZJR0U3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRWwwTG1Wc1pXMWxiblJ6V3pCZElDbzlJR01zSUVsMExtVnNaVzFsYm5Seld6RmRJQ285SUdNc0lFbDBMbVZzWlcxbGJuUnpXekpkSUNvOUlHTXNJRWwwTG1Wc1pXMWxiblJ6V3pSZElDbzlJR2dzSUVsMExtVnNaVzFsYm5Seld6VmRJQ285SUdnc0lFbDBMbVZzWlcxbGJuUnpXelpkSUNvOUlHZ3NJRWwwTG1Wc1pXMWxiblJ6V3poZElDbzlJSFVzSUVsMExtVnNaVzFsYm5Seld6bGRJQ285SUhVc0lFbDBMbVZzWlcxbGJuUnpXekV3WFNBcVBTQjFMQ0IwTG5ObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaEpkQ2tzSUc0dWVDQTlJSElzSUc0dWVTQTlJRzhzSUc0dWVpQTlJR0VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFVHVnljM0JsWTNScGRtVW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV0WVd0bFVHVnljM0JsWTNScGRtVW9LU0JvWVhNZ1ltVmxiaUJ5WldSbFptbHVaV1FnWVc1a0lHaGhjeUJoSUc1bGR5QnphV2R1WVhSMWNtVXVJRkJzWldGelpTQmphR1ZqYXlCMGFHVWdaRzlqY3k0aUtUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUd3Z1BTQXlJQ29nY2lBdklDaDBJQzBnWlNrc0lHTWdQU0F5SUNvZ2NpQXZJQ2h1SUMwZ2FTa3NJR2dnUFNBb2RDQXJJR1VwSUM4Z0tIUWdMU0JsS1N3Z2RTQTlJQ2h1SUNzZ2FTa2dMeUFvYmlBdElHa3BMQ0JrSUQwZ0xTaHZJQ3NnY2lrZ0x5QW9ieUF0SUhJcExDQm1JRDBnTFRJZ0tpQnZJQ29nY2lBdklDaHZJQzBnY2lrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGYk1GMGdQU0JzTENCaFd6UmRJRDBnTUN3Z1lWczRYU0E5SUdnc0lHRmJNVEpkSUQwZ01Dd2dZVnN4WFNBOUlEQXNJR0ZiTlYwZ1BTQmpMQ0JoV3psZElEMGdkU3dnWVZzeE0xMGdQU0F3TENCaFd6SmRJRDBnTUN3Z1lWczJYU0E5SURBc0lHRmJNVEJkSUQwZ1pDd2dZVnN4TkYwZ1BTQm1MQ0JoV3pOZElEMGdNQ3dnWVZzM1hTQTlJREFzSUdGYk1URmRJRDBnTFRFc0lHRmJNVFZkSUQwZ01Dd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZQY25Sb2IyZHlZWEJvYVdNb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYkNBOUlERWdMeUFvZENBdElHVXBMQ0JqSUQwZ01TQXZJQ2h1SUMwZ2FTa3NJR2dnUFNBeElDOGdLRzhnTFNCeUtTd2dkU0E5SUNoMElDc2daU2tnS2lCc0xDQmtJRDBnS0c0Z0t5QnBLU0FxSUdNc0lHWWdQU0FvYnlBcklISXBJQ29nYURzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVZzd1hTQTlJRElnS2lCc0xDQmhXelJkSUQwZ01Dd2dZVnM0WFNBOUlEQXNJR0ZiTVRKZElEMGdMWFVzSUdGYk1WMGdQU0F3TENCaFd6VmRJRDBnTWlBcUlHTXNJR0ZiT1YwZ1BTQXdMQ0JoV3pFelhTQTlJQzFrTENCaFd6SmRJRDBnTUN3Z1lWczJYU0E5SURBc0lHRmJNVEJkSUQwZ0xUSWdLaUJvTENCaFd6RTBYU0E5SUMxbUxDQmhXek5kSUQwZ01Dd2dZVnMzWFNBOUlEQXNJR0ZiTVRGZElEMGdNQ3dnWVZzeE5WMGdQU0F4TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQXhOanNnYVNzcktXbG1JQ2gwVzJsZElDRTlQU0J1VzJsZEtTQnlaWFIxY200Z0lURTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElERTJPeUJ1S3lzcGRHaHBjeTVsYkdWdFpXNTBjMXR1WFNBOUlHVmJiaUFySUhSZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdibHN3WFN3Z1pWdDBJQ3NnTVYwZ1BTQnVXekZkTENCbFczUWdLeUF5WFNBOUlHNWJNbDBzSUdWYmRDQXJJRE5kSUQwZ2Jsc3pYU3dnWlZ0MElDc2dORjBnUFNCdVd6UmRMQ0JsVzNRZ0t5QTFYU0E5SUc1Yk5WMHNJR1ZiZENBcklEWmRJRDBnYmxzMlhTd2daVnQwSUNzZ04xMGdQU0J1V3pkZExDQmxXM1FnS3lBNFhTQTlJRzViT0Ywc0lHVmJkQ0FySURsZElEMGdibHM1WFN3Z1pWdDBJQ3NnTVRCZElEMGdibHN4TUYwc0lHVmJkQ0FySURFeFhTQTlJRzViTVRGZExDQmxXM1FnS3lBeE1sMGdQU0J1V3pFeVhTd2daVnQwSUNzZ01UTmRJRDBnYmxzeE0xMHNJR1ZiZENBcklERTBYU0E5SUc1Yk1UUmRMQ0JsVzNRZ0t5QXhOVjBnUFNCdVd6RTFYU3dnWlRzS0lDQWdJSDBLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbWx6VFdGMGNtbDROQ0E5SUNFd093cDJZWElnYzJrZ1BTQnVaWGNnVFN3Z1NYUWdQU0J1WlhjZ2NHVXNJSFJtSUQwZ2JtVjNJRTBvTUN3Z01Dd2dNQ2tzSUc1bUlEMGdibVYzSUUwb01Td2dNU3dnTVNrc0lIQnVJRDBnYm1WM0lFMHNJRnB5SUQwZ2JtVjNJRTBzSUZOMElEMGdibVYzSUUwc0lGOXNJRDBnYm1WM0lIQmxMQ0JOYkNBOUlHNWxkeUJuZEN3Z1dtNGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTUN3Z2RDQTlJREFzSUc0Z1BTQXdMQ0JwSUQwZ1dtNHVSR1ZtWVhWc2RFOXlaR1Z5S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbDk0SUQwZ1pTd2dkR2hwY3k1ZmVTQTlJSFFzSUhSb2FYTXVYM29nUFNCdUxDQjBhR2x6TGw5dmNtUmxjaUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnZUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZURzS0lDQWdJSDBLSUNBZ0lITmxkQ0I0S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5NElEMGdaU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzazdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZlU0E5SUdVc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1RzS0lDQWdJSDBLSUNBZ0lHZGxkQ0I2S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk2T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSG9vWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNvZ1BTQmxMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2IzSmtaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMjl5WkdWeU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUc5eVpHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDl2Y21SbGNpQTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUxDQnBJRDBnZEdocGN5NWZiM0prWlhJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVXNJSFJvYVhNdVgza2dQU0IwTENCMGFHbHpMbDk2SUQwZ2Jpd2dkR2hwY3k1ZmIzSmtaWElnUFNCcExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTVmZUN3Z2RHaHBjeTVmZVN3Z2RHaHBjeTVmZWl3Z2RHaHBjeTVmYjNKa1pYSXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dQU0JsTGw5NExDQjBhR2x6TGw5NUlEMGdaUzVmZVN3Z2RHaHBjeTVmZWlBOUlHVXVYM29zSUhSb2FYTXVYMjl5WkdWeUlEMGdaUzVmYjNKa1pYSXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2hsTENCMElEMGdkR2hwY3k1ZmIzSmtaWElzSUc0Z1BTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1bGJHVnRaVzUwY3l3Z2NpQTlJR2xiTUYwc0lHOGdQU0JwV3pSZExDQmhJRDBnYVZzNFhTd2diQ0E5SUdsYk1WMHNJR01nUFNCcFd6VmRMQ0JvSUQwZ2FWczVYU3dnZFNBOUlHbGJNbDBzSUdRZ1BTQnBXelpkTENCbUlEMGdhVnN4TUYwN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0hRcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSllXVm9pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlU0E5SUUxaGRHZ3VZWE5wYmlodGRDaGhMQ0F0TVN3Z01Ta3BMQ0JOWVhSb0xtRmljeWhoS1NBOElDNDVPVGs1T1RrNUlEOGdLSFJvYVhNdVgzZ2dQU0JOWVhSb0xtRjBZVzR5S0Mxb0xDQm1LU3dnZEdocGN5NWZlaUE5SUUxaGRHZ3VZWFJoYmpJb0xXOHNJSElwS1NBNklDaDBhR2x6TGw5NElEMGdUV0YwYUM1aGRHRnVNaWhrTENCaktTd2dkR2hwY3k1ZmVpQTlJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGxZV2lJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDk0SUQwZ1RXRjBhQzVoYzJsdUtDMXRkQ2hvTENBdE1Td2dNU2twTENCTllYUm9MbUZpY3lob0tTQThJQzQ1T1RrNU9UazVJRDhnS0hSb2FYTXVYM2tnUFNCTllYUm9MbUYwWVc0eUtHRXNJR1lwTENCMGFHbHpMbDk2SUQwZ1RXRjBhQzVoZEdGdU1paHNMQ0JqS1NrZ09pQW9kR2hwY3k1ZmVTQTlJRTFoZEdndVlYUmhiaklvTFhVc0lISXBMQ0IwYUdsekxsOTZJRDBnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV2xoWklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNnZ1BTQk5ZWFJvTG1GemFXNG9iWFFvWkN3Z0xURXNJREVwS1N3Z1RXRjBhQzVoWW5Nb1pDa2dQQ0F1T1RrNU9UazVPU0EvSUNoMGFHbHpMbDk1SUQwZ1RXRjBhQzVoZEdGdU1pZ3RkU3dnWmlrc0lIUm9hWE11WDNvZ1BTQk5ZWFJvTG1GMFlXNHlLQzF2TENCaktTa2dPaUFvZEdocGN5NWZlU0E5SURBc0lIUm9hWE11WDNvZ1BTQk5ZWFJvTG1GMFlXNHlLR3dzSUhJcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKYVdWZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVTQTlJRTFoZEdndVlYTnBiaWd0YlhRb2RTd2dMVEVzSURFcEtTd2dUV0YwYUM1aFluTW9kU2tnUENBdU9UazVPVGs1T1NBL0lDaDBhR2x6TGw5NElEMGdUV0YwYUM1aGRHRnVNaWhrTENCbUtTd2dkR2hwY3k1ZmVpQTlJRTFoZEdndVlYUmhiaklvYkN3Z2Npa3BJRG9nS0hSb2FYTXVYM2dnUFNBd0xDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGRHRnVNaWd0Ynl3Z1l5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsbGFXQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTZJRDBnVFdGMGFDNWhjMmx1S0cxMEtHd3NJQzB4TENBeEtTa3NJRTFoZEdndVlXSnpLR3dwSUR3Z0xqazVPVGs1T1RrZ1B5QW9kR2hwY3k1ZmVDQTlJRTFoZEdndVlYUmhiaklvTFdnc0lHTXBMQ0IwYUdsekxsOTVJRDBnVFdGMGFDNWhkR0Z1TWlndGRTd2djaWtwSURvZ0tIUm9hWE11WDNnZ1BTQXdMQ0IwYUdsekxsOTVJRDBnVFdGMGFDNWhkR0Z1TWloaExDQm1LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXRnBaSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM29nUFNCTllYUm9MbUZ6YVc0b0xXMTBLRzhzSUMweExDQXhLU2tzSUUxaGRHZ3VZV0p6S0c4cElEd2dMams1T1RrNU9Ua2dQeUFvZEdocGN5NWZlQ0E5SUUxaGRHZ3VZWFJoYmpJb1pDd2dZeWtzSUhSb2FYTXVYM2tnUFNCTllYUm9MbUYwWVc0eUtHRXNJSElwS1NBNklDaDBhR2x6TGw5NElEMGdUV0YwYUM1aGRHRnVNaWd0YUN3Z1ppa3NJSFJvYVhNdVgza2dQU0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1RmRXeGxjam9nTG5ObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDZ3BJR1Z1WTI5MWJuUmxjbVZrSUdGdUlIVnVhMjV2ZDI0Z2IzSmtaWEk2SUNJZ0t5QjBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXlaR1Z5SUQwZ2RDd2diaUE5UFQwZ0lUQWdKaVlnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWRjFZWFJsY201cGIyNG9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmZiQzV0WVd0bFVtOTBZWFJwYjI1R2NtOXRVWFZoZEdWeWJtbHZiaWhsS1N3Z2RHaHBjeTV6WlhSR2NtOXRVbTkwWVhScGIyNU5ZWFJ5YVhnb1gyd3NJSFFzSUc0cE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWWmxZM1J2Y2pNb1pTd2dkQ0E5SUhSb2FYTXVYMjl5WkdWeUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtHVXVlQ3dnWlM1NUxDQmxMbm9zSUhRcE93b2dJQ0FnZlFvZ0lDQWdjbVZ2Y21SbGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFzTG5ObGRFWnliMjFGZFd4bGNpaDBhR2x6S1N3Z2RHaHBjeTV6WlhSR2NtOXRVWFZoZEdWeWJtbHZiaWhOYkN3Z1pTazdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTGw5NElEMDlQU0IwYUdsekxsOTRJQ1ltSUdVdVgza2dQVDA5SUhSb2FYTXVYM2tnSmlZZ1pTNWZlaUE5UFQwZ2RHaHBjeTVmZWlBbUppQmxMbDl2Y21SbGNpQTlQVDBnZEdocGN5NWZiM0prWlhJN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRJRDBnWlZzd1hTd2dkR2hwY3k1ZmVTQTlJR1ZiTVYwc0lIUm9hWE11WDNvZ1BTQmxXekpkTENCbFd6TmRJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11WDI5eVpHVnlJRDBnWlZzelhTa3NJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZRWEp5WVhrb1pTQTlJRnRkTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdkR2hwY3k1ZmVDd2daVnQwSUNzZ01WMGdQU0IwYUdsekxsOTVMQ0JsVzNRZ0t5QXlYU0E5SUhSb2FYTXVYM29zSUdWYmRDQXJJRE5kSUQwZ2RHaHBjeTVmYjNKa1pYSXNJR1U3Q2lBZ0lDQjlDaUFnSUNCMGIxWmxZM1J2Y2pNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDhnWlM1elpYUW9kR2hwY3k1ZmVDd2dkR2hwY3k1ZmVTd2dkR2hwY3k1ZmVpa2dPaUJ1WlhjZ1RTaDBhR2x6TGw5NExDQjBhR2x6TGw5NUxDQjBhR2x6TGw5NktUc0tJQ0FnSUgwS0lDQWdJRjl2YmtOb1lXNW5aU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1NCN2ZRcDlPd3BhYmk1d2NtOTBiM1I1Y0dVdWFYTkZkV3hsY2lBOUlDRXdPd3BhYmk1RVpXWmhkV3gwVDNKa1pYSWdQU0FpV0ZsYUlqc0tXbTR1VW05MFlYUnBiMjVQY21SbGNuTWdQU0JiQ2lBZ0lDQWlXRmxhSWl3S0lDQWdJQ0paV2xnaUxBb2dJQ0FnSWxwWVdTSXNDaUFnSUNBaVdGcFpJaXdLSUNBZ0lDSlpXRm9pTEFvZ0lDQWdJbHBaV0NJS1hUc0tkbUZ5SUVweklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMyc2dQU0F4T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYzJzZ1BTQW9NU0E4UENCbElId2dNQ2tnUGo0K0lEQTdDaUFnSUNCOUNpQWdJQ0JsYm1GaWJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z6YXlCOFBTQXhJRHc4SUdVZ2ZDQXdPd29nSUNBZ2ZRb2dJQ0FnWlc1aFlteGxRV3hzS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGemF5QTlJQzB4T3dvZ0lDQWdmUW9nSUNBZ2RHOW5aMnhsS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMyc2dYajBnTVNBOFBDQmxJSHdnTURzS0lDQWdJSDBLSUNBZ0lHUnBjMkZpYkdVb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRnpheUFtUFNCK0tERWdQRHdnWlNCOElEQXBPd29nSUNBZ2ZRb2dJQ0FnWkdsellXSnNaVUZzYkNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMyc2dQU0F3T3dvZ0lDQWdmUW9nSUNBZ2RHVnpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNoMGFHbHpMbTFoYzJzZ0ppQmxMbTFoYzJzcElDRTlQU0F3T3dvZ0lDQWdmUW9nSUNBZ2FYTkZibUZpYkdWa0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdLSFJvYVhNdWJXRnpheUFtSUNneElEdzhJR1VnZkNBd0tTa2dJVDA5SURBN0NpQWdJQ0I5Q24wc0lISm1JRDBnTUN3Z1ltd2dQU0J1WlhjZ1RTd2diMmtnUFNCdVpYY2daM1FzSUZGMElEMGdibVYzSUhCbExDQWtjaUE5SUc1bGR5Qk5MQ0JhYVNBOUlHNWxkeUJOTENCelppQTlJRzVsZHlCTkxDQnZaaUE5SUc1bGR5Qm5kQ3dnZDJ3Z1BTQnVaWGNnVFNneExDQXdMQ0F3S1N3Z1Uyd2dQU0J1WlhjZ1RTZ3dMQ0F4TENBd0tTd2dWR3dnUFNCdVpYY2dUU2d3TENBd0xDQXhLU3dnWVdZZ1BTQjdDaUFnSUNCMGVYQmxPaUFpWVdSa1pXUWlDbjBzSUVWc0lEMGdld29nSUNBZ2RIbHdaVG9nSW5KbGJXOTJaV1FpQ24wc0lFNWxJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUNKcFpDSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUhKbUt5c0tJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTFkV2xrSUQwZ1JYUW9LU3dnZEdocGN5NXVZVzFsSUQwZ0lpSXNJSFJvYVhNdWRIbHdaU0E5SUNKUFltcGxZM1F6UkNJc0lIUm9hWE11Y0dGeVpXNTBJRDBnYm5Wc2JDd2dkR2hwY3k1amFHbHNaSEpsYmlBOUlGdGRMQ0IwYUdsekxuVndJRDBnVG1VdVJHVm1ZWFZzZEZWd0xtTnNiMjVsS0NrN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJhYml3Z2JpQTlJRzVsZHlCbmRDd2dhU0E5SUc1bGR5Qk5LREVzSURFc0lERXBPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSElvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRzR1YzJWMFJuSnZiVVYxYkdWeUtIUXNJQ0V4S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2J5Z3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDNXpaWFJHY205dFVYVmhkR1Z5Ym1sdmJpaHVMQ0IyYjJsa0lEQXNJQ0V4S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDNWZiMjVEYUdGdVoyVW9jaWtzSUc0dVgyOXVRMmhoYm1kbEtHOHBMQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aDBhR2x6TENCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1bWFXZDFjbUZpYkdVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nWlFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCeWIzUmhkR2x2YmpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVabWxuZFhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdWRXMWxjbUZpYkdVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklIUUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjWFZoZEdWeWJtbHZiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZFcxbGNtRmliR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc0S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyTmhiR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJtWnBaM1Z5WVdKc1pUb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5WdFpYSmhZbXhsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCcENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXZaR1ZzVm1sbGQwMWhkSEpwZURvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QndaUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeE5ZWFJ5YVhnNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2diSFFLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxtMWhkSEpwZUNBOUlHNWxkeUJ3WlN3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNBOUlHNWxkeUJ3WlN3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnVG1VdVJHVm1ZWFZzZEUxaGRISnBlRUYxZEc5VmNHUmhkR1VzSUhSb2FYTXViV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxteGhlV1Z5Y3lBOUlHNWxkeUJLY3l3Z2RHaHBjeTUyYVhOcFlteGxJRDBnSVRBc0lIUm9hWE11WTJGemRGTm9ZV1J2ZHlBOUlDRXhMQ0IwYUdsekxuSmxZMlZwZG1WVGFHRmtiM2NnUFNBaE1Td2dkR2hwY3k1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnSVRBc0lIUm9hWE11Y21WdVpHVnlUM0prWlhJZ1BTQXdMQ0IwYUdsekxtRnVhVzFoZEdsdmJuTWdQU0JiWFN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUh0OU93b2dJQ0FnZlFvZ0lDQWdiMjVDWldadmNtVlNaVzVrWlhJb0tTQjdmUW9nSUNBZ2IyNUJablJsY2xKbGJtUmxjaWdwSUh0OUNpQWdJQ0JoY0hCc2VVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBbUppQjBhR2x6TG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0IwYUdsekxtMWhkSEpwZUM1d2NtVnRkV3gwYVhCc2VTaGxLU3dnZEdocGN5NXRZWFJ5YVhndVpHVmpiMjF3YjNObEtIUm9hWE11Y0c5emFYUnBiMjRzSUhSb2FYTXVjWFZoZEdWeWJtbHZiaXdnZEdocGN5NXpZMkZzWlNrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVZGMVlYUmxjbTVwYjI0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5GMVlYUmxjbTVwYjI0dWNISmxiWFZzZEdsd2JIa29aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSU2IzUmhkR2x2YmtaeWIyMUJlR2x6UVc1bmJHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y1hWaGRHVnlibWx2Ymk1elpYUkdjbTl0UVhocGMwRnVaMnhsS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtOTBZWFJwYjI1R2NtOXRSWFZzWlhJb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpNXpaWFJHY205dFJYVnNaWElvWlN3Z0lUQXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtOTBZWFJwYjI1R2NtOXRUV0YwY21sNEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwUm5KdmJWSnZkR0YwYVc5dVRXRjBjbWw0S0dVcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXhkV0YwWlhKdWFXOXVMbU52Y0hrb1pTazdDaUFnSUNCOUNpQWdJQ0J5YjNSaGRHVlBia0Y0YVhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2YVM1elpYUkdjbTl0UVhocGMwRnVaMnhsS0dVc0lIUXBMQ0IwYUdsekxuRjFZWFJsY201cGIyNHViWFZzZEdsd2JIa29iMmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxUMjVYYjNKc1pFRjRhWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZhUzV6WlhSR2NtOXRRWGhwYzBGdVoyeGxLR1VzSUhRcExDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dWNISmxiWFZzZEdsd2JIa29iMmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbTkwWVhSbFQyNUJlR2x6S0hkc0xDQmxLVHNLSUNBZ0lIMEtJQ0FnSUhKdmRHRjBaVmtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkp2ZEdGMFpVOXVRWGhwY3loVGJDd2daU2s3Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5YjNSaGRHVlBia0Y0YVhNb1ZHd3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbFQyNUJlR2x6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZbXd1WTI5d2VTaGxLUzVoY0hCc2VWRjFZWFJsY201cGIyNG9kR2hwY3k1eGRXRjBaWEp1YVc5dUtTd2dkR2hwY3k1d2IzTnBkR2x2Ymk1aFpHUW9ZbXd1YlhWc2RHbHdiSGxUWTJGc1lYSW9kQ2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTnNZWFJsV0NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEhKaGJuTnNZWFJsVDI1QmVHbHpLSGRzTENCbEtUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaVmtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJ5WVc1emJHRjBaVTl1UVhocGN5aFRiQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzJ4aGRHVmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBjbUZ1YzJ4aGRHVlBia0Y0YVhNb1ZHd3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHOWpZV3hVYjFkdmNteGtLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1aGNIQnNlVTFoZEhKcGVEUW9kR2hwY3k1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNCOUNpQWdJQ0IzYjNKc1pGUnZURzlqWVd3b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbUZ3Y0d4NVRXRjBjbWw0TkNoUmRDNWpiM0I1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwS1RzS0lDQWdJSDBLSUNBZ0lHeHZiMnRCZENobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ1pTNXBjMVpsWTNSdmNqTWdQeUFrY2k1amIzQjVLR1VwSURvZ0pISXVjMlYwS0dVc0lIUXNJRzRwT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NXdZWEpsYm5RN0NpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBMQ0JhYVM1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1dFlYUnlhWGhYYjNKc1pDa3NJSFJvYVhNdWFYTkRZVzFsY21FZ2ZId2dkR2hwY3k1cGMweHBaMmgwSUQ4Z1VYUXViRzl2YTBGMEtGcHBMQ0FrY2l3Z2RHaHBjeTUxY0NrZ09pQlJkQzVzYjI5clFYUW9KSElzSUZwcExDQjBhR2x6TG5Wd0tTd2dkR2hwY3k1eGRXRjBaWEp1YVc5dUxuTmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2hSZENrc0lHa2dKaVlnS0ZGMExtVjRkSEpoWTNSU2IzUmhkR2x2YmlocExtMWhkSEpwZUZkdmNteGtLU3dnYjJrdWMyVjBSbkp2YlZKdmRHRjBhVzl1VFdGMGNtbDRLRkYwS1N3Z2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5CeVpXMTFiSFJwY0d4NUtHOXBMbWx1ZG1WeWRDZ3BLU2s3Q2lBZ0lDQjlDaUFnSUNCaFpHUW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGhjbWQxYldWdWRITXViR1Z1WjNSb0lENGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dZWEpuZFcxbGJuUnpMbXhsYm1kMGFEc2dkQ3NyS1hSb2FYTXVZV1JrS0dGeVozVnRaVzUwYzF0MFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQTlQVDBnZEdocGN5QS9JQ2hqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UFltcGxZM1F6UkM1aFpHUTZJRzlpYW1WamRDQmpZVzRuZENCaVpTQmhaR1JsWkNCaGN5QmhJR05vYVd4a0lHOW1JR2wwYzJWc1ppNGlMQ0JsS1N3Z2RHaHBjeWtnT2lBb1pTQW1KaUJsTG1selQySnFaV04wTTBRZ1B5QW9aUzV3WVhKbGJuUWdJVDA5SUc1MWJHd2dKaVlnWlM1d1lYSmxiblF1Y21WdGIzWmxLR1VwTENCbExuQmhjbVZ1ZENBOUlIUm9hWE1zSUhSb2FYTXVZMmhwYkdSeVpXNHVjSFZ6YUNobEtTd2daUzVrYVhOd1lYUmphRVYyWlc1MEtHRm1LU2tnT2lCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVBZbXBsWTNRelJDNWhaR1E2SUc5aWFtVmpkQ0J1YjNRZ1lXNGdhVzV6ZEdGdVkyVWdiMllnVkVoU1JVVXVUMkpxWldOME0wUXVJaXdnWlNrc0lIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2NtVnRiM1psS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWVhKbmRXMWxiblJ6TG14bGJtZDBhQ0ErSURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUc0ckt5bDBhR2x6TG5KbGJXOTJaU2hoY21kMWJXVnVkSE5iYmwwcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5vYVd4a2NtVnVMbWx1WkdWNFQyWW9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlDMHhJQ1ltSUNobExuQmhjbVZ1ZENBOUlHNTFiR3dzSUhSb2FYTXVZMmhwYkdSeVpXNHVjM0JzYVdObEtIUXNJREVwTENCbExtUnBjM0JoZEdOb1JYWmxiblFvUld3cEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISmxiVzkyWlVaeWIyMVFZWEpsYm5Rb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG5CaGNtVnVkRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FoUFQwZ2JuVnNiQ0FtSmlCbExuSmxiVzkyWlNoMGFHbHpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zWldGeUtDa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaU0E5SURBN0lHVWdQQ0IwYUdsekxtTm9hV3hrY21WdUxteGxibWQwYURzZ1pTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5vYVd4a2NtVnVXMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJoY21WdWRDQTlJRzUxYkd3c0lIUXVaR2x6Y0dGMFkyaEZkbVZ1ZENoRmJDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Ob2FXeGtjbVZ1TG14bGJtZDBhQ0E5SURBc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaGRIUmhZMmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V3TENBaE1Ta3NJRkYwTG1OdmNIa29kR2hwY3k1dFlYUnlhWGhYYjNKc1pDa3VhVzUyWlhKMEtDa3NJR1V1Y0dGeVpXNTBJQ0U5UFNCdWRXeHNJQ1ltSUNobExuQmhjbVZ1ZEM1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCUmRDNXRkV3gwYVhCc2VTaGxMbkJoY21WdWRDNXRZWFJ5YVhoWGIzSnNaQ2twTENCbExtRndjR3g1VFdGMGNtbDROQ2hSZENrc0lIUm9hWE11WVdSa0tHVXBMQ0JsTG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFeExDQWhNQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSUFltcGxZM1JDZVVsa0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlBZbXBsWTNSQ2VWQnliM0JsY25SNUtDSnBaQ0lzSUdVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVDJKcVpXTjBRbmxPWVcxbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlBZbXBsWTNSQ2VWQnliM0JsY25SNUtDSnVZVzFsSWl3Z1pTazdDaUFnSUNCOUNpQWdJQ0JuWlhSUFltcGxZM1JDZVZCeWIzQmxjblI1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjMXRsWFNBOVBUMGdkQ2tnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUm9hWE11WTJocGJHUnlaVzR1YkdWdVozUm9PeUJ1SUR3Z2FUc2diaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TG1Ob2FXeGtjbVZ1VzI1ZExtZGxkRTlpYW1WamRFSjVVSEp2Y0dWeWRIa29aU3dnZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodklDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQnZPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdkbGRGZHZjbXhrVUc5emFYUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V3TENBaE1Ta3NJR1V1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIUm9hWE11YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVjI5eWJHUlJkV0YwWlhKdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtUmxZMjl0Y0c5elpTaGFhU3dnWlN3Z2MyWXBMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWMjl5YkdSVFkyRnNaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNWtaV052YlhCdmMyVW9XbWtzSUc5bUxDQmxLU3dnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkRmR2Y214a1JHbHlaV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXdMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ObGRDaDBXemhkTENCMFd6bGRMQ0IwV3pFd1hTa3VibTl5YldGc2FYcGxLQ2s3Q2lBZ0lDQjlDaUFnSUNCeVlYbGpZWE4wS0NrZ2UzMEtJQ0FnSUhSeVlYWmxjbk5sS0dVcElIc0tJQ0FnSUNBZ0lDQmxLSFJvYVhNcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGRGdHVYUzUwY21GMlpYSnpaU2hsS1RzS0lDQWdJSDBLSUNBZ0lIUnlZWFpsY25ObFZtbHphV0pzWlNobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVkbWx6YVdKc1pTQTlQVDBnSVRFcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCbEtIUm9hWE1wT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZEZ0dVhTNTBjbUYyWlhKelpWWnBjMmxpYkdVb1pTazdDaUFnSUNCOUNpQWdJQ0IwY21GMlpYSnpaVUZ1WTJWemRHOXljeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJoY21WdWREc0tJQ0FnSUNBZ0lDQjBJQ0U5UFNCdWRXeHNJQ1ltSUNobEtIUXBMQ0IwTG5SeVlYWmxjbk5sUVc1alpYTjBiM0p6S0dVcEtUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwZUNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGRISnBlQzVqYjIxd2IzTmxLSFJvYVhNdWNHOXphWFJwYjI0c0lIUm9hWE11Y1hWaGRHVnlibWx2Yml3Z2RHaHBjeTV6WTJGc1pTa3NJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQW1KaUIwYUdsekxuVndaR0YwWlUxaGRISnBlQ2dwTENBb2RHaHBjeTV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElIeDhJR1VwSUNZbUlDaDBhR2x6TG5CaGNtVnVkQ0E5UFQwZ2JuVnNiQ0EvSUhSb2FYTXViV0YwY21sNFYyOXliR1F1WTI5d2VTaDBhR2x6TG0xaGRISnBlQ2tnT2lCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vZEdocGN5NXdZWEpsYm5RdWJXRjBjbWw0VjI5eWJHUXNJSFJvYVhNdWJXRjBjbWw0S1N3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElEMGdJVEVzSUdVZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTm9hV3hrY21WdU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWwwVzI1ZExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1d1lYSmxiblE3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdQVDA5SUNFd0lDWW1JRzRnSVQwOUlHNTFiR3dnSmlZZ2JpNTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnSmlZZ2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dkR2hwY3k1d1lYSmxiblFnUFQwOUlHNTFiR3dnUHlCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29kR2hwY3k1dFlYUnlhWGdwSURvZ2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0hSb2FYTXVjR0Z5Wlc1MExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUNrc0lIUWdQVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdrdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktXbGJjbDB1ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRFc0lDRXdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTQTlQVDBnZG05cFpDQXdJSHg4SUhSNWNHVnZaaUJsSUQwOUlDSnpkSEpwYm1jaUxDQnVJRDBnZTMwN0NpQWdJQ0FnSUNBZ2RDQW1KaUFvWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWdmJXVjBjbWxsY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUhSbGVIUjFjbVZ6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVcxaFoyVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MydGxiR1YwYjI1ek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXNXBiV0YwYVc5dWN6b2dlMzBLSUNBZ0lDQWdJQ0I5TENCdUxtMWxkR0ZrWVhSaElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lBMExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0pQWW1wbFkzUWlMQW9nSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwYjNJNklDSlBZbXBsWTNRelJDNTBiMHBUVDA0aUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjdmVHNLSUNBZ0lDQWdJQ0JwTG5WMWFXUWdQU0IwYUdsekxuVjFhV1FzSUdrdWRIbHdaU0E5SUhSb2FYTXVkSGx3WlN3Z2RHaHBjeTV1WVcxbElDRTlQU0FpSWlBbUppQW9hUzV1WVcxbElEMGdkR2hwY3k1dVlXMWxLU3dnZEdocGN5NWpZWE4wVTJoaFpHOTNJRDA5UFNBaE1DQW1KaUFvYVM1allYTjBVMmhoWkc5M0lEMGdJVEFwTENCMGFHbHpMbkpsWTJWcGRtVlRhR0ZrYjNjZ1BUMDlJQ0V3SUNZbUlDaHBMbkpsWTJWcGRtVlRhR0ZrYjNjZ1BTQWhNQ2tzSUhSb2FYTXVkbWx6YVdKc1pTQTlQVDBnSVRFZ0ppWWdLR2t1ZG1semFXSnNaU0E5SUNFeEtTd2dkR2hwY3k1bWNuVnpkSFZ0UTNWc2JHVmtJRDA5UFNBaE1TQW1KaUFvYVM1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnSVRFcExDQjBhR2x6TG5KbGJtUmxjazl5WkdWeUlDRTlQU0F3SUNZbUlDaHBMbkpsYm1SbGNrOXlaR1Z5SUQwZ2RHaHBjeTV5Wlc1a1pYSlBjbVJsY2lrc0lFcFRUMDR1YzNSeWFXNW5hV1o1S0hSb2FYTXVkWE5sY2tSaGRHRXBJQ0U5UFNBaWUzMGlJQ1ltSUNocExuVnpaWEpFWVhSaElEMGdkR2hwY3k1MWMyVnlSR0YwWVNrc0lHa3ViR0Y1WlhKeklEMGdkR2hwY3k1c1lYbGxjbk11YldGemF5d2dhUzV0WVhSeWFYZ2dQU0IwYUdsekxtMWhkSEpwZUM1MGIwRnljbUY1S0Nrc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5UFQwZ0lURWdKaVlnS0drdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhLU3dnZEdocGN5NXBjMGx1YzNSaGJtTmxaRTFsYzJnZ0ppWWdLR2t1ZEhsd1pTQTlJQ0pKYm5OMFlXNWpaV1JOWlhOb0lpd2dhUzVqYjNWdWRDQTlJSFJvYVhNdVkyOTFiblFzSUdrdWFXNXpkR0Z1WTJWTllYUnlhWGdnUFNCMGFHbHpMbWx1YzNSaGJtTmxUV0YwY21sNExuUnZTbE5QVGlncExDQjBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSWdJVDA5SUc1MWJHd2dKaVlnS0drdWFXNXpkR0Z1WTJWRGIyeHZjaUE5SUhSb2FYTXVhVzV6ZEdGdVkyVkRiMnh2Y2k1MGIwcFRUMDRvS1NrcE93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlISW9ZU3dnYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZVnRzTG5WMWFXUmRJRDA5UFNCMmIybGtJREFnSmlZZ0tHRmJiQzUxZFdsa1hTQTlJR3d1ZEc5S1UwOU9LR1VwS1N3Z2JDNTFkV2xrT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1cGMxTmpaVzVsS1NCMGFHbHpMbUpoWTJ0bmNtOTFibVFnSmlZZ0tIUm9hWE11WW1GamEyZHliM1Z1WkM1cGMwTnZiRzl5SUQ4Z2FTNWlZV05yWjNKdmRXNWtJRDBnZEdocGN5NWlZV05yWjNKdmRXNWtMblJ2U2xOUFRpZ3BJRG9nZEdocGN5NWlZV05yWjNKdmRXNWtMbWx6VkdWNGRIVnlaU0FtSmlBb2FTNWlZV05yWjNKdmRXNWtJRDBnZEdocGN5NWlZV05yWjNKdmRXNWtMblJ2U2xOUFRpaGxLUzUxZFdsa0tTa3NJSFJvYVhNdVpXNTJhWEp2Ym0xbGJuUWdKaVlnZEdocGN5NWxiblpwY205dWJXVnVkQzVwYzFSbGVIUjFjbVVnSmlZZ0tHa3VaVzUyYVhKdmJtMWxiblFnUFNCMGFHbHpMbVZ1ZG1seWIyNXRaVzUwTG5SdlNsTlBUaWhsS1M1MWRXbGtLVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2gwYUdsekxtbHpUV1Z6YUNCOGZDQjBhR2x6TG1selRHbHVaU0I4ZkNCMGFHbHpMbWx6VUc5cGJuUnpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa3VaMlZ2YldWMGNua2dQU0J5S0dVdVoyVnZiV1YwY21sbGN5d2dkR2hwY3k1blpXOXRaWFJ5ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1blpXOXRaWFJ5ZVM1d1lYSmhiV1YwWlhKek93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lTQWhQVDBnZG05cFpDQXdJQ1ltSUdFdWMyaGhjR1Z6SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lTNXphR0Z3WlhNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoc0tTa2dabTl5S0d4bGRDQmpJRDBnTUN3Z2FDQTlJR3d1YkdWdVozUm9PeUJqSUR3Z2FEc2dZeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHeGJZMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NpaGxMbk5vWVhCbGN5d2dkU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElISW9aUzV6YUdGd1pYTXNJR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWx6VTJ0cGJtNWxaRTFsYzJnZ0ppWWdLR2t1WW1sdVpFMXZaR1VnUFNCMGFHbHpMbUpwYm1STmIyUmxMQ0JwTG1KcGJtUk5ZWFJ5YVhnZ1BTQjBhR2x6TG1KcGJtUk5ZWFJ5YVhndWRHOUJjbkpoZVNncExDQjBhR2x6TG5OclpXeGxkRzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLSElvWlM1emEyVnNaWFJ2Ym5Nc0lIUm9hWE11YzJ0bGJHVjBiMjRwTENCcExuTnJaV3hsZEc5dUlEMGdkR2hwY3k1emEyVnNaWFJ2Ymk1MWRXbGtLU2tzSUhSb2FYTXViV0YwWlhKcFlXd2dJVDA5SUhadmFXUWdNQ2tnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvZEdocGN5NXRZWFJsY21saGJDa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0V4SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkRFZ1BTQXdMQ0JqTVNBOUlIUm9hWE11YldGMFpYSnBZV3d1YkdWdVozUm9PeUJzTVNBOElHTXhPeUJzTVNzcktXRXhMbkIxYzJnb2NpaGxMbTFoZEdWeWFXRnNjeXdnZEdocGN5NXRZWFJsY21saGJGdHNNVjBwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhUzV0WVhSbGNtbGhiQ0E5SUdFeE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcExtMWhkR1Z5YVdGc0lEMGdjaWhsTG0xaGRHVnlhV0ZzY3l3Z2RHaHBjeTV0WVhSbGNtbGhiQ2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTJocGJHUnlaVzR1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwTG1Ob2FXeGtjbVZ1SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVRJZ1BTQXdPeUJoTWlBOElIUm9hWE11WTJocGJHUnlaVzR1YkdWdVozUm9PeUJoTWlzcktXa3VZMmhwYkdSeVpXNHVjSFZ6YUNoMGFHbHpMbU5vYVd4a2NtVnVXMkV5WFM1MGIwcFRUMDRvWlNrdWIySnFaV04wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVlXNXBiV0YwYVc5dWN5NXNaVzVuZEdnZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa3VZVzVwYldGMGFXOXVjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0V6SUQwZ01Ec2dZVE1nUENCMGFHbHpMbUZ1YVcxaGRHbHZibk11YkdWdVozUm9PeUJoTXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzTWlBOUlIUm9hWE11WVc1cGJXRjBhVzl1YzF0aE0xMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMbUZ1YVcxaGRHbHZibk11Y0hWemFDaHlLR1V1WVc1cGJXRjBhVzl1Y3l3Z2JESXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lUUWdQU0J2S0dVdVoyVnZiV1YwY21sbGN5a3NJR3d6SUQwZ2J5aGxMbTFoZEdWeWFXRnNjeWtzSUdNeUlEMGdieWhsTG5SbGVIUjFjbVZ6S1N3Z2FERWdQU0J2S0dVdWFXMWhaMlZ6S1N3Z2RURWdQU0J2S0dVdWMyaGhjR1Z6S1N3Z1pDQTlJRzhvWlM1emEyVnNaWFJ2Ym5NcExDQm1JRDBnYnlobExtRnVhVzFoZEdsdmJuTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaE5DNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtZGxiMjFsZEhKcFpYTWdQU0JoTkNrc0lHd3pMbXhsYm1kMGFDQStJREFnSmlZZ0tHNHViV0YwWlhKcFlXeHpJRDBnYkRNcExDQmpNaTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMblJsZUhSMWNtVnpJRDBnWXpJcExDQm9NUzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWx0WVdkbGN5QTlJR2d4S1N3Z2RURXViR1Z1WjNSb0lENGdNQ0FtSmlBb2JpNXphR0Z3WlhNZ1BTQjFNU2tzSUdRdWJHVnVaM1JvSUQ0Z01DQW1KaUFvYmk1emEyVnNaWFJ2Ym5NZ1BTQmtLU3dnWmk1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG1GdWFXMWhkR2x2Ym5NZ1BTQm1LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YjJKcVpXTjBJRDBnYVN3Z2Jqc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnZLR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklHbHVJR0VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JoVzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUdndWJXVjBZV1JoZEdFc0lHd3VjSFZ6YUNob0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsekxDQmxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU3dnZENBOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11Ym1GdFpTQTlJR1V1Ym1GdFpTd2dkR2hwY3k1MWNDNWpiM0I1S0dVdWRYQXBMQ0IwYUdsekxuQnZjMmwwYVc5dUxtTnZjSGtvWlM1d2IzTnBkR2x2Ymlrc0lIUm9hWE11Y205MFlYUnBiMjR1YjNKa1pYSWdQU0JsTG5KdmRHRjBhVzl1TG05eVpHVnlMQ0IwYUdsekxuRjFZWFJsY201cGIyNHVZMjl3ZVNobExuRjFZWFJsY201cGIyNHBMQ0IwYUdsekxuTmpZV3hsTG1OdmNIa29aUzV6WTJGc1pTa3NJSFJvYVhNdWJXRjBjbWw0TG1OdmNIa29aUzV0WVhSeWFYZ3BMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtMbU52Y0hrb1pTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJR1V1YldGMGNtbDRRWFYwYjFWd1pHRjBaU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUQwZ1pTNXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsTENCMGFHbHpMbXhoZVdWeWN5NXRZWE5ySUQwZ1pTNXNZWGxsY25NdWJXRnpheXdnZEdocGN5NTJhWE5wWW14bElEMGdaUzUyYVhOcFlteGxMQ0IwYUdsekxtTmhjM1JUYUdGa2IzY2dQU0JsTG1OaGMzUlRhR0ZrYjNjc0lIUm9hWE11Y21WalpXbDJaVk5vWVdSdmR5QTlJR1V1Y21WalpXbDJaVk5vWVdSdmR5d2dkR2hwY3k1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnWlM1bWNuVnpkSFZ0UTNWc2JHVmtMQ0IwYUdsekxuSmxibVJsY2s5eVpHVnlJRDBnWlM1eVpXNWtaWEpQY21SbGNpd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb1pTNTFjMlZ5UkdGMFlTa3BMQ0IwSUQwOVBTQWhNQ2tnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SUdVdVkyaHBiR1J5Wlc0dWJHVnVaM1JvT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdVkyaHBiR1J5Wlc1YmJsMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZV1JrS0drdVkyeHZibVVvS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRcDlPd3BPWlM1RVpXWmhkV3gwVlhBZ1BTQnVaWGNnVFNnd0xDQXhMQ0F3S1RzS1RtVXVSR1ZtWVhWc2RFMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNRHNLVG1VdWNISnZkRzkwZVhCbExtbHpUMkpxWldOME0wUWdQU0FoTURzS2RtRnlJRVIwSUQwZ2JtVjNJRTBzSUV0MElEMGdibVYzSUUwc0lFTnZJRDBnYm1WM0lFMHNJR1Z1SUQwZ2JtVjNJRTBzSUdGcElEMGdibVYzSUUwc0lHeHBJRDBnYm1WM0lFMHNJRUZzSUQwZ2JtVjNJRTBzSUV4dklEMGdibVYzSUUwc0lGSnZJRDBnYm1WM0lFMHNJRkJ2SUQwZ2JtVjNJRTBzSUc1MElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTkxDQjBJRDBnYm1WM0lFMHNJRzRnUFNCdVpYY2dUU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWhJRDBnWlN3Z2RHaHBjeTVpSUQwZ2RDd2dkR2hwY3k1aklEMGdianNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJuWlhST2IzSnRZV3dvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHa3VjM1ZpVm1WamRHOXljeWh1TENCMEtTd2dSSFF1YzNWaVZtVmpkRzl5Y3lobExDQjBLU3dnYVM1amNtOXpjeWhFZENrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCcExteGxibWQwYUZOeEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISWdQaUF3SUQ4Z2FTNXRkV3gwYVhCc2VWTmpZV3hoY2lneElDOGdUV0YwYUM1emNYSjBLSElwS1NBNklHa3VjMlYwS0RBc0lEQXNJREFwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdkbGRFSmhjbmxqYjI5eVpDaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ1JIUXVjM1ZpVm1WamRHOXljeWhwTENCMEtTd2dTM1F1YzNWaVZtVmpkRzl5Y3lodUxDQjBLU3dnUTI4dWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUVSMExtUnZkQ2hFZENrc0lHRWdQU0JFZEM1a2IzUW9TM1FwTENCc0lEMGdSSFF1Wkc5MEtFTnZLU3dnWXlBOUlFdDBMbVJ2ZENoTGRDa3NJR2dnUFNCTGRDNWtiM1FvUTI4cExDQjFJRDBnYnlBcUlHTWdMU0JoSUNvZ1lUc0tJQ0FnSUNBZ0lDQnBaaUFvZFNBOVBUMGdNQ2tnY21WMGRYSnVJSEl1YzJWMEtDMHlMQ0F0TVN3Z0xURXBPd29nSUNBZ0lDQWdJR3hsZENCa0lEMGdNU0F2SUhVc0lHWWdQU0FvWXlBcUlHd2dMU0JoSUNvZ2FDa2dLaUJrTENCdElEMGdLRzhnS2lCb0lDMGdZU0FxSUd3cElDb2daRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjaTV6WlhRb01TQXRJR1lnTFNCdExDQnRMQ0JtS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCamIyNTBZV2x1YzFCdmFXNTBLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJDWVhKNVkyOXZjbVFvWlN3Z2RDd2diaXdnYVN3Z1pXNHBMQ0JsYmk1NElENDlJREFnSmlZZ1pXNHVlU0ErUFNBd0lDWW1JR1Z1TG5nZ0t5QmxiaTU1SUR3OUlERTdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdaMlYwVlZZb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRUpoY25samIyOXlaQ2hsTENCMExDQnVMQ0JwTENCbGJpa3NJR3d1YzJWMEtEQXNJREFwTENCc0xtRmtaRk5qWVd4bFpGWmxZM1J2Y2loeUxDQmxiaTU0S1N3Z2JDNWhaR1JUWTJGc1pXUldaV04wYjNJb2J5d2daVzR1ZVNrc0lHd3VZV1JrVTJOaGJHVmtWbVZqZEc5eUtHRXNJR1Z1TG5vcExDQnNPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR2x6Um5KdmJuUkdZV05wYm1jb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkVkQzV6ZFdKV1pXTjBiM0p6S0c0c0lIUXBMQ0JMZEM1emRXSldaV04wYjNKektHVXNJSFFwTENCRWRDNWpjbTl6Y3loTGRDa3VaRzkwS0drcElEd2dNRHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVM1amIzQjVLR1VwTENCMGFHbHpMbUl1WTI5d2VTaDBLU3dnZEdocGN5NWpMbU52Y0hrb2Jpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVHOXBiblJ6UVc1a1NXNWthV05sY3lobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVM1amIzQjVLR1ZiZEYwcExDQjBhR2x6TG1JdVkyOXdlU2hsVzI1ZEtTd2dkR2hwY3k1akxtTnZjSGtvWlZ0cFhTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFFYUjBjbWxpZFhSbFFXNWtTVzVrYVdObGN5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VzSUhRcExDQjBhR2x6TG1JdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxMQ0J1S1N3Z2RHaHBjeTVqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dhU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVM1amIzQjVLR1V1WVNrc0lIUm9hWE11WWk1amIzQjVLR1V1WWlrc0lIUm9hWE11WXk1amIzQjVLR1V1WXlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkJjbVZoS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCRWRDNXpkV0pXWldOMGIzSnpLSFJvYVhNdVl5d2dkR2hwY3k1aUtTd2dTM1F1YzNWaVZtVmpkRzl5Y3loMGFHbHpMbUVzSUhSb2FYTXVZaWtzSUVSMExtTnliM056S0V0MEtTNXNaVzVuZEdnb0tTQXFJQzQxT3dvZ0lDQWdmUW9nSUNBZ1oyVjBUV2xrY0c5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1Ga1pGWmxZM1J2Y25Nb2RHaHBjeTVoTENCMGFHbHpMbUlwTG1Ga1pDaDBhR2x6TG1NcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0RFZ0x5QXpLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFNXZjbTFoYkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTBMbWRsZEU1dmNtMWhiQ2gwYUdsekxtRXNJSFJvYVhNdVlpd2dkR2hwY3k1akxDQmxLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnNZVzVsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpaWFJHY205dFEyOXdiR0Z1WVhKUWIybHVkSE1vZEdocGN5NWhMQ0IwYUdsekxtSXNJSFJvYVhNdVl5azdDaUFnSUNCOUNpQWdJQ0JuWlhSQ1lYSjVZMjl2Y21Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZEM1blpYUkNZWEo1WTI5dmNtUW9aU3dnZEdocGN5NWhMQ0IwYUdsekxtSXNJSFJvYVhNdVl5d2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlZWaWhsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTBMbWRsZEZWV0tHVXNJSFJvYVhNdVlTd2dkR2hwY3k1aUxDQjBhR2x6TG1Nc0lIUXNJRzRzSUdrc0lISXBPd29nSUNBZ2ZRb2dJQ0FnWTI5dWRHRnBibk5RYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUwTG1OdmJuUmhhVzV6VUc5cGJuUW9aU3dnZEdocGN5NWhMQ0IwYUdsekxtSXNJSFJvYVhNdVl5azdDaUFnSUNCOUNpQWdJQ0JwYzBaeWIyNTBSbUZqYVc1bktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblF1YVhOR2NtOXVkRVpoWTJsdVp5aDBhR2x6TG1Fc0lIUm9hWE11WWl3Z2RHaHBjeTVqTENCbEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbWx1ZEdWeWMyVmpkSE5VY21saGJtZHNaU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJR05zYjNObGMzUlFiMmx1ZEZSdlVHOXBiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1aExDQnBJRDBnZEdocGN5NWlMQ0J5SUQwZ2RHaHBjeTVqTENCdkxDQmhPd29nSUNBZ0lDQWdJR0ZwTG5OMVlsWmxZM1J2Y25Nb2FTd2diaWtzSUd4cExuTjFZbFpsWTNSdmNuTW9jaXdnYmlrc0lFeHZMbk4xWWxabFkzUnZjbk1vWlN3Z2JpazdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQmhhUzVrYjNRb1RHOHBMQ0JqSUQwZ2JHa3VaRzkwS0V4dktUc0tJQ0FnSUNBZ0lDQnBaaUFvYkNBOFBTQXdJQ1ltSUdNZ1BEMGdNQ2tnY21WMGRYSnVJSFF1WTI5d2VTaHVLVHNLSUNBZ0lDQWdJQ0JTYnk1emRXSldaV04wYjNKektHVXNJR2twT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnWVdrdVpHOTBLRkp2S1N3Z2RTQTlJR3hwTG1SdmRDaFNieWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tHZ2dQajBnTUNBbUppQjFJRHc5SUdncElISmxkSFZ5YmlCMExtTnZjSGtvYVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCc0lDb2dkU0F0SUdnZ0tpQmpPd29nSUNBZ0lDQWdJR2xtSUNoa0lEdzlJREFnSmlZZ2JDQStQU0F3SUNZbUlHZ2dQRDBnTUNrZ2NtVjBkWEp1SUc4Z1BTQnNJQzhnS0d3Z0xTQm9LU3dnZEM1amIzQjVLRzRwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhoYVN3Z2J5azdDaUFnSUNBZ0lDQWdVRzh1YzNWaVZtVmpkRzl5Y3lobExDQnlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJR0ZwTG1SdmRDaFFieWtzSUcwZ1BTQnNhUzVrYjNRb1VHOHBPd29nSUNBZ0lDQWdJR2xtSUNodElENDlJREFnSmlZZ1ppQThQU0J0S1NCeVpYUjFjbTRnZEM1amIzQjVLSElwT3dvZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnWmlBcUlHTWdMU0JzSUNvZ2JUc0tJQ0FnSUNBZ0lDQnBaaUFvZUNBOFBTQXdJQ1ltSUdNZ1BqMGdNQ0FtSmlCdElEdzlJREFwSUhKbGRIVnliaUJoSUQwZ1l5QXZJQ2hqSUMwZ2JTa3NJSFF1WTI5d2VTaHVLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iR2tzSUdFcE93b2dJQ0FnSUNBZ0lHeGxkQ0IySUQwZ2FDQXFJRzBnTFNCbUlDb2dkVHNLSUNBZ0lDQWdJQ0JwWmlBb2RpQThQU0F3SUNZbUlIVWdMU0JvSUQ0OUlEQWdKaVlnWmlBdElHMGdQajBnTUNrZ2NtVjBkWEp1SUVGc0xuTjFZbFpsWTNSdmNuTW9jaXdnYVNrc0lHRWdQU0FvZFNBdElHZ3BJQzhnS0hVZ0xTQm9JQ3NnS0dZZ0xTQnRLU2tzSUhRdVkyOXdlU2hwS1M1aFpHUlRZMkZzWldSV1pXTjBiM0lvUVd3c0lHRXBPd29nSUNBZ0lDQWdJR3hsZENCbklEMGdNU0F2SUNoMklDc2dlQ0FySUdRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdklEMGdlQ0FxSUdjc0lHRWdQU0JrSUNvZ1p5d2dkQzVqYjNCNUtHNHBMbUZrWkZOallXeGxaRlpsWTNSdmNpaGhhU3dnYnlrdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0d4cExDQmhLVHNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVlTNWxjWFZoYkhNb2RHaHBjeTVoS1NBbUppQmxMbUl1WlhGMVlXeHpLSFJvYVhNdVlpa2dKaVlnWlM1akxtVnhkV0ZzY3loMGFHbHpMbU1wT3dvZ0lDQWdmUXA5TENCc1ppQTlJREFzSUdSMElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJQ0pwWkNJc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR3htS3lzS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MWRXbGtJRDBnUlhRb0tTd2dkR2hwY3k1dVlXMWxJRDBnSWlJc0lIUm9hWE11ZEhsd1pTQTlJQ0pOWVhSbGNtbGhiQ0lzSUhSb2FYTXVabTluSUQwZ0lUQXNJSFJvYVhNdVlteGxibVJwYm1jZ1BTQnpjaXdnZEdocGN5NXphV1JsSUQwZ1FXa3NJSFJvYVhNdWRtVnlkR1Y0UTI5c2IzSnpJRDBnSVRFc0lIUm9hWE11YjNCaFkybDBlU0E5SURFc0lIUm9hWE11Wm05eWJXRjBJRDBnWTNRc0lIUm9hWE11ZEhKaGJuTndZWEpsYm5RZ1BTQWhNU3dnZEdocGN5NWliR1Z1WkZOeVl5QTlJRWRqTENCMGFHbHpMbUpzWlc1a1JITjBJRDBnVm1Nc0lIUm9hWE11WW14bGJtUkZjWFZoZEdsdmJpQTlJRjlwTENCMGFHbHpMbUpzWlc1a1UzSmpRV3h3YUdFZ1BTQnVkV3hzTENCMGFHbHpMbUpzWlc1a1JITjBRV3h3YUdFZ1BTQnVkV3hzTENCMGFHbHpMbUpzWlc1a1JYRjFZWFJwYjI1QmJIQm9ZU0E5SUc1MWJHd3NJSFJvYVhNdVpHVndkR2hHZFc1aklEMGdaV0VzSUhSb2FYTXVaR1Z3ZEdoVVpYTjBJRDBnSVRBc0lIUm9hWE11WkdWd2RHaFhjbWwwWlNBOUlDRXdMQ0IwYUdsekxuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ1BTQXlOVFVzSUhSb2FYTXVjM1JsYm1OcGJFWjFibU1nUFNCVlpDd2dkR2hwY3k1emRHVnVZMmxzVW1WbUlEMGdNQ3dnZEdocGN5NXpkR1Z1WTJsc1JuVnVZMDFoYzJzZ1BTQXlOVFVzSUhSb2FYTXVjM1JsYm1OcGJFWmhhV3dnUFNCMmJ5d2dkR2hwY3k1emRHVnVZMmxzV2taaGFXd2dQU0IyYnl3Z2RHaHBjeTV6ZEdWdVkybHNXbEJoYzNNZ1BTQjJieXdnZEdocGN5NXpkR1Z1WTJsc1YzSnBkR1VnUFNBaE1Td2dkR2hwY3k1amJHbHdjR2x1WjFCc1lXNWxjeUE5SUc1MWJHd3NJSFJvYVhNdVkyeHBjRWx1ZEdWeWMyVmpkR2x2YmlBOUlDRXhMQ0IwYUdsekxtTnNhWEJUYUdGa2IzZHpJRDBnSVRFc0lIUm9hWE11YzJoaFpHOTNVMmxrWlNBOUlHNTFiR3dzSUhSb2FYTXVZMjlzYjNKWGNtbDBaU0E5SUNFd0xDQjBhR2x6TG5CeVpXTnBjMmx2YmlBOUlHNTFiR3dzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZENBOUlDRXhMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJHWVdOMGIzSWdQU0F3TENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUE5SURBc0lIUm9hWE11WkdsMGFHVnlhVzVuSUQwZ0lURXNJSFJvYVhNdVlXeHdhR0ZVYjBOdmRtVnlZV2RsSUQwZ0lURXNJSFJvYVhNdWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaElEMGdJVEVzSUhSb2FYTXVkbWx6YVdKc1pTQTlJQ0V3TENCMGFHbHpMblJ2Ym1WTllYQndaV1FnUFNBaE1Dd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlIdDlMQ0IwYUdsekxuWmxjbk5wYjI0Z1BTQXdMQ0IwYUdsekxsOWhiSEJvWVZSbGMzUWdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1oyVjBJR0ZzY0doaFZHVnpkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZZV3h3YUdGVVpYTjBPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHRnNjR2hoVkdWemRDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZZV3h3YUdGVVpYTjBJRDRnTUNBaFBTQmxJRDRnTUNBbUppQjBhR2x6TG5abGNuTnBiMjRyS3l3Z2RHaHBjeTVmWVd4d2FHRlVaWE4wSUQwZ1pUc0tJQ0FnSUgwS0lDQWdJRzl1UW5WcGJHUW9LU0I3ZlFvZ0lDQWdiMjVDWldadmNtVlNaVzVrWlhJb0tTQjdmUW9nSUNBZ2IyNUNaV1p2Y21WRGIyMXdhV3hsS0NrZ2UzMEtJQ0FnSUdOMWMzUnZiVkJ5YjJkeVlXMURZV05vWlV0bGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmJrSmxabTl5WlVOdmJYQnBiR1V1ZEc5VGRISnBibWNvS1RzS0lDQWdJSDBLSUNBZ0lITmxkRlpoYkhWbGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SUhadmFXUWdNQ2tnWm05eUtHeGxkQ0IwSUdsdUlHVXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdWYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBaWEpwWVd3NklDY2lJQ3NnZENBcklDSW5JSEJoY21GdFpYUmxjaUJwY3lCMWJtUmxabWx1WldRdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdJbk5vWVdScGJtY2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGlJZ0t5QjBhR2x6TG5SNWNHVWdLeUFpT2lBdWMyaGhaR2x1WnlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdkR2hsSUdKdmIyeGxZVzRnTG1ac1lYUlRhR0ZrYVc1bklHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0J1SUQwOVBTQnJZenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM0aUlDc2dkR2hwY3k1MGVYQmxJQ3NnSWpvZ0p5SWdLeUIwSUNzZ0lpY2dhWE1nYm05MElHRWdjSEp2Y0dWeWRIa2diMllnZEdocGN5QnRZWFJsY21saGJDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2tnSmlZZ2FTNXBjME52Ykc5eUlEOGdhUzV6WlhRb2Jpa2dPaUJwSUNZbUlHa3VhWE5XWldOMGIzSXpJQ1ltSUc0Z0ppWWdiaTVwYzFabFkzUnZjak1nUHlCcExtTnZjSGtvYmlrZ09pQjBhR2x6VzNSZElEMGdianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTQTlQVDBnZG05cFpDQXdJSHg4SUhSNWNHVnZaaUJsSUQwOUlDSnpkSEpwYm1jaU93b2dJQ0FnSUNBZ0lIUWdKaVlnS0dVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSbGVIUjFjbVZ6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVcxaFoyVnpPaUI3ZlFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J0WlhSaFpHRjBZVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWMybHZiam9nTkM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSWsxaGRHVnlhV0ZzSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJ2Y2pvZ0lrMWhkR1Z5YVdGc0xuUnZTbE5QVGlJS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYmk1MWRXbGtJRDBnZEdocGN5NTFkV2xrTENCdUxuUjVjR1VnUFNCMGFHbHpMblI1Y0dVc0lIUm9hWE11Ym1GdFpTQWhQVDBnSWlJZ0ppWWdLRzR1Ym1GdFpTQTlJSFJvYVhNdWJtRnRaU2tzSUhSb2FYTXVZMjlzYjNJZ0ppWWdkR2hwY3k1amIyeHZjaTVwYzBOdmJHOXlJQ1ltSUNodUxtTnZiRzl5SUQwZ2RHaHBjeTVqYjJ4dmNpNW5aWFJJWlhnb0tTa3NJSFJvYVhNdWNtOTFaMmh1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWNtOTFaMmh1WlhOeklEMGdkR2hwY3k1eWIzVm5hRzVsYzNNcExDQjBhR2x6TG0xbGRHRnNibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG0xbGRHRnNibVZ6Y3lBOUlIUm9hWE11YldWMFlXeHVaWE56S1N3Z2RHaHBjeTV6YUdWbGJpQWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTm9aV1Z1SUQwZ2RHaHBjeTV6YUdWbGJpa3NJSFJvYVhNdWMyaGxaVzVEYjJ4dmNpQW1KaUIwYUdsekxuTm9aV1Z1UTI5c2IzSXVhWE5EYjJ4dmNpQW1KaUFvYmk1emFHVmxia052Ykc5eUlEMGdkR2hwY3k1emFHVmxia052Ykc5eUxtZGxkRWhsZUNncEtTd2dkR2hwY3k1emFHVmxibEp2ZFdkb2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdkR2hwY3k1emFHVmxibEp2ZFdkb2JtVnpjeWtzSUhSb2FYTXVaVzFwYzNOcGRtVWdKaVlnZEdocGN5NWxiV2x6YzJsMlpTNXBjME52Ykc5eUlDWW1JQ2h1TG1WdGFYTnphWFpsSUQwZ2RHaHBjeTVsYldsemMybDJaUzVuWlhSSVpYZ29LU2tzSUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dKaVlnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQWhQVDBnTVNBbUppQW9iaTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0E5SUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa3BMQ0IwYUdsekxuTndaV04xYkdGeUlDWW1JSFJvYVhNdWMzQmxZM1ZzWVhJdWFYTkRiMnh2Y2lBbUppQW9iaTV6Y0dWamRXeGhjaUE5SUhSb2FYTXVjM0JsWTNWc1lYSXVaMlYwU0dWNEtDa3BMQ0IwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhrZ1BTQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1S1N3Z2RHaHBjeTV6Y0dWamRXeGhja052Ykc5eUlDWW1JSFJvYVhNdWMzQmxZM1ZzWVhKRGIyeHZjaTVwYzBOdmJHOXlJQ1ltSUNodUxuTndaV04xYkdGeVEyOXNiM0lnUFNCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNJdVoyVjBTR1Y0S0NrcExDQjBhR2x6TG5Ob2FXNXBibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5Ob2FXNXBibVZ6Y3lBOUlIUm9hWE11YzJocGJtbHVaWE56S1N3Z2RHaHBjeTVqYkdWaGNtTnZZWFFnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVqYkdWaGNtTnZZWFFnUFNCMGFHbHpMbU5zWldGeVkyOWhkQ2tzSUhSb2FYTXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJRDBnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTXBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFMWhjQ0FtSmlCMGFHbHpMbU5zWldGeVkyOWhkRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVFdGd0lEMGdkR2hwY3k1amJHVmhjbU52WVhSTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0FtSmlCMGFHbHpMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJRDBnZEdocGN5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQXVkRzlLVTA5T0tHVXBMblYxYVdRc0lHNHVZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1VnUFNCMGFHbHpMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsTG5SdlFYSnlZWGtvS1Nrc0lIUm9hWE11YldGd0lDWW1JSFJvYVhNdWJXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXRZWEFnUFNCMGFHbHpMbTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ2tzSUhSb2FYTXViV0YwWTJGd0lDWW1JSFJvYVhNdWJXRjBZMkZ3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV0WVhSallYQWdQU0IwYUdsekxtMWhkR05oY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ2tzSUhSb2FYTXVZV3h3YUdGTllYQWdKaVlnZEdocGN5NWhiSEJvWVUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVlXeHdhR0ZOWVhBZ1BTQjBhR2x6TG1Gc2NHaGhUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NXNhV2RvZEUxaGNDQW1KaUIwYUdsekxteHBaMmgwVFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1c2FXZG9kRTFoY0NBOUlIUm9hWE11YkdsbmFIUk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVLU3dnZEdocGN5NWhiMDFoY0NBbUppQjBhR2x6TG1GdlRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNWhiMDFoY0NBOUlIUm9hWE11WVc5TllYQXVkRzlLVTA5T0tHVXBMblYxYVdRc0lHNHVZVzlOWVhCSmJuUmxibk5wZEhrZ1BTQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVLU3dnZEdocGN5NWlkVzF3VFdGd0lDWW1JSFJvYVhNdVluVnRjRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WW5WdGNFMWhjQ0E5SUhSb2FYTXVZblZ0Y0UxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkN3Z2JpNWlkVzF3VTJOaGJHVWdQU0IwYUdsekxtSjFiWEJUWTJGc1pTa3NJSFJvYVhNdWJtOXliV0ZzVFdGd0lDWW1JSFJvYVhNdWJtOXliV0ZzVFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1dWIzSnRZV3hOWVhBZ1BTQjBhR2x6TG01dmNtMWhiRTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ3dnYmk1dWIzSnRZV3hOWVhCVWVYQmxJRDBnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsTENCdUxtNXZjbTFoYkZOallXeGxJRDBnZEdocGN5NXViM0p0WVd4VFkyRnNaUzUwYjBGeWNtRjVLQ2twTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUIwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCdUxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1wTENCMGFHbHpMbkp2ZFdkb2JtVnpjMDFoY0NBbUppQjBhR2x6TG5KdmRXZG9ibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWNtOTFaMmh1WlhOelRXRndJRDBnZEdocGN5NXliM1ZuYUc1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtMWxkR0ZzYm1WemMwMWhjQ0FtSmlCMGFHbHpMbTFsZEdGc2JtVnpjMDFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1YldWMFlXeHVaWE56VFdGd0lEMGdkR2hwY3k1dFpYUmhiRzVsYzNOTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lDWW1JSFJvYVhNdVpXMXBjM05wZG1WTllYQXVhWE5VWlhoMGRYSmxJQ1ltSUNodUxtVnRhWE56YVhabFRXRndJRDBnZEdocGN5NWxiV2x6YzJsMlpVMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWMzQmxZM1ZzWVhKTllYQWdKaVlnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVjM0JsWTNWc1lYSk5ZWEFnUFNCMGFHbHpMbk53WldOMWJHRnlUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0FtSmlCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBOUlIUm9hWE11YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNKTllYQWdKaVlnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUQwZ2RHaHBjeTV6Y0dWamRXeGhja052Ykc5eVRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1bGJuWk5ZWEFnSmlZZ2RHaHBjeTVsYm5aTllYQXVhWE5VWlhoMGRYSmxJQ1ltSUNodUxtVnVkazFoY0NBOUlIUm9hWE11Wlc1MlRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0xDQjBhR2x6TG1OdmJXSnBibVVnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVqYjIxaWFXNWxJRDBnZEdocGN5NWpiMjFpYVc1bEtTa3NJSFJvYVhNdVpXNTJUV0Z3U1c1MFpXNXphWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1Wlc1MlRXRndTVzUwWlc1emFYUjVJRDBnZEdocGN5NWxiblpOWVhCSmJuUmxibk5wZEhrcExDQjBhR2x6TG5KbFpteGxZM1JwZG1sMGVTQWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuSmxabXhsWTNScGRtbDBlU0E5SUhSb2FYTXVjbVZtYkdWamRHbDJhWFI1S1N3Z2RHaHBjeTV5WldaeVlXTjBhVzl1VW1GMGFXOGdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNXlaV1p5WVdOMGFXOXVVbUYwYVc4Z1BTQjBhR2x6TG5KbFpuSmhZM1JwYjI1U1lYUnBieWtzSUhSb2FYTXVaM0poWkdsbGJuUk5ZWEFnSmlZZ2RHaHBjeTVuY21Ga2FXVnVkRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WjNKaFpHbGxiblJOWVhBZ1BTQjBhR2x6TG1keVlXUnBaVzUwVFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTUwY21GdWMyMXBjM05wYjI0Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1MGNtRnVjMjFwYzNOcGIyNGdQU0IwYUdsekxuUnlZVzV6YldsemMybHZiaWtzSUhSb2FYTXVkSEpoYm5OdGFYTnphVzl1VFdGd0lDWW1JSFJvYVhNdWRISmhibk50YVhOemFXOXVUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTUwY21GdWMyMXBjM05wYjI1TllYQWdQU0IwYUdsekxuUnlZVzV6YldsemMybHZiazFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ2tzSUhSb2FYTXVkR2hwWTJ0dVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVkR2hwWTJ0dVpYTnpJRDBnZEdocGN5NTBhR2xqYTI1bGMzTXBMQ0IwYUdsekxuUm9hV05yYm1WemMwMWhjQ0FtSmlCMGFHbHpMblJvYVdOcmJtVnpjMDFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1ZEdocFkydHVaWE56VFdGd0lEMGdkR2hwY3k1MGFHbGphMjVsYzNOTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG1GMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElEMGdkR2hwY3k1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObEtTd2dkR2hwY3k1aGRIUmxiblZoZEdsdmJrTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WVhSMFpXNTFZWFJwYjI1RGIyeHZjaUE5SUhSb2FYTXVZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpNW5aWFJJWlhnb0tTa3NJSFJvYVhNdWMybDZaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5wZW1VZ1BTQjBhR2x6TG5OcGVtVXBMQ0IwYUdsekxuTm9ZV1J2ZDFOcFpHVWdJVDA5SUc1MWJHd2dKaVlnS0c0dWMyaGhaRzkzVTJsa1pTQTlJSFJvYVhNdWMyaGhaRzkzVTJsa1pTa3NJSFJvYVhNdWMybDZaVUYwZEdWdWRXRjBhVzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnZEdocGN5NXphWHBsUVhSMFpXNTFZWFJwYjI0cExDQjBhR2x6TG1Kc1pXNWthVzVuSUNFOVBTQnpjaUFtSmlBb2JpNWliR1Z1WkdsdVp5QTlJSFJvYVhNdVlteGxibVJwYm1jcExDQjBhR2x6TG5OcFpHVWdJVDA5SUVGcElDWW1JQ2h1TG5OcFpHVWdQU0IwYUdsekxuTnBaR1VwTENCMGFHbHpMblpsY25SbGVFTnZiRzl5Y3lBbUppQW9iaTUyWlhKMFpYaERiMnh2Y25NZ1BTQWhNQ2tzSUhSb2FYTXViM0JoWTJsMGVTQThJREVnSmlZZ0tHNHViM0JoWTJsMGVTQTlJSFJvYVhNdWIzQmhZMmwwZVNrc0lIUm9hWE11Wm05eWJXRjBJQ0U5UFNCamRDQW1KaUFvYmk1bWIzSnRZWFFnUFNCMGFHbHpMbVp2Y20xaGRDa3NJSFJvYVhNdWRISmhibk53WVhKbGJuUWdQVDA5SUNFd0lDWW1JQ2h1TG5SeVlXNXpjR0Z5Wlc1MElEMGdkR2hwY3k1MGNtRnVjM0JoY21WdWRDa3NJRzR1WkdWd2RHaEdkVzVqSUQwZ2RHaHBjeTVrWlhCMGFFWjFibU1zSUc0dVpHVndkR2hVWlhOMElEMGdkR2hwY3k1a1pYQjBhRlJsYzNRc0lHNHVaR1Z3ZEdoWGNtbDBaU0E5SUhSb2FYTXVaR1Z3ZEdoWGNtbDBaU3dnYmk1amIyeHZjbGR5YVhSbElEMGdkR2hwY3k1amIyeHZjbGR5YVhSbExDQnVMbk4wWlc1amFXeFhjbWwwWlNBOUlIUm9hWE11YzNSbGJtTnBiRmR5YVhSbExDQnVMbk4wWlc1amFXeFhjbWwwWlUxaGMyc2dQU0IwYUdsekxuTjBaVzVqYVd4WGNtbDBaVTFoYzJzc0lHNHVjM1JsYm1OcGJFWjFibU1nUFNCMGFHbHpMbk4wWlc1amFXeEdkVzVqTENCdUxuTjBaVzVqYVd4U1pXWWdQU0IwYUdsekxuTjBaVzVqYVd4U1pXWXNJRzR1YzNSbGJtTnBiRVoxYm1OTllYTnJJRDBnZEdocGN5NXpkR1Z1WTJsc1JuVnVZMDFoYzJzc0lHNHVjM1JsYm1OcGJFWmhhV3dnUFNCMGFHbHpMbk4wWlc1amFXeEdZV2xzTENCdUxuTjBaVzVqYVd4YVJtRnBiQ0E5SUhSb2FYTXVjM1JsYm1OcGJGcEdZV2xzTENCdUxuTjBaVzVqYVd4YVVHRnpjeUE5SUhSb2FYTXVjM1JsYm1OcGJGcFFZWE56TENCMGFHbHpMbkp2ZEdGMGFXOXVJQ1ltSUhSb2FYTXVjbTkwWVhScGIyNGdJVDA5SURBZ0ppWWdLRzR1Y205MFlYUnBiMjRnUFNCMGFHbHpMbkp2ZEdGMGFXOXVLU3dnZEdocGN5NXdiMng1WjI5dVQyWm1jMlYwSUQwOVBTQWhNQ0FtSmlBb2JpNXdiMng1WjI5dVQyWm1jMlYwSUQwZ0lUQXBMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJHWVdOMGIzSWdJVDA5SURBZ0ppWWdLRzR1Y0c5c2VXZHZiazltWm5ObGRFWmhZM1J2Y2lBOUlIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRFWmhZM1J2Y2lrc0lIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6SUNFOVBTQXdJQ1ltSUNodUxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkRlZ1YVhSektTd2dkR2hwY3k1c2FXNWxkMmxrZEdnZ0ppWWdkR2hwY3k1c2FXNWxkMmxrZEdnZ0lUMDlJREVnSmlZZ0tHNHViR2x1WlhkcFpIUm9JRDBnZEdocGN5NXNhVzVsZDJsa2RHZ3BMQ0IwYUdsekxtUmhjMmhUYVhwbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVpHRnphRk5wZW1VZ1BTQjBhR2x6TG1SaGMyaFRhWHBsS1N3Z2RHaHBjeTVuWVhCVGFYcGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVaMkZ3VTJsNlpTQTlJSFJvYVhNdVoyRndVMmw2WlNrc0lIUm9hWE11YzJOaGJHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNXpZMkZzWlNBOUlIUm9hWE11YzJOaGJHVXBMQ0IwYUdsekxtUnBkR2hsY21sdVp5QTlQVDBnSVRBZ0ppWWdLRzR1WkdsMGFHVnlhVzVuSUQwZ0lUQXBMQ0IwYUdsekxtRnNjR2hoVkdWemRDQStJREFnSmlZZ0tHNHVZV3h3YUdGVVpYTjBJRDBnZEdocGN5NWhiSEJvWVZSbGMzUXBMQ0IwYUdsekxtRnNjR2hoVkc5RGIzWmxjbUZuWlNBOVBUMGdJVEFnSmlZZ0tHNHVZV3h3YUdGVWIwTnZkbVZ5WVdkbElEMGdkR2hwY3k1aGJIQm9ZVlJ2UTI5MlpYSmhaMlVwTENCMGFHbHpMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0E5UFQwZ0lUQWdKaVlnS0c0dWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaElEMGdkR2hwY3k1d2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFcExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOVBUMGdJVEFnSmlZZ0tHNHVkMmx5WldaeVlXMWxJRDBnZEdocGN5NTNhWEpsWm5KaGJXVXBMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQStJREVnSmlZZ0tHNHVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3BMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ0lUMDlJQ0p5YjNWdVpDSWdKaVlnS0c0dWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ2tzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdJVDA5SUNKeWIzVnVaQ0lnSmlZZ0tHNHVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUtTd2dkR2hwY3k1bWJHRjBVMmhoWkdsdVp5QTlQVDBnSVRBZ0ppWWdLRzR1Wm14aGRGTm9ZV1JwYm1jZ1BTQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bktTd2dkR2hwY3k1MmFYTnBZbXhsSUQwOVBTQWhNU0FtSmlBb2JpNTJhWE5wWW14bElEMGdJVEVwTENCMGFHbHpMblJ2Ym1WTllYQndaV1FnUFQwOUlDRXhJQ1ltSUNodUxuUnZibVZOWVhCd1pXUWdQU0FoTVNrc0lFcFRUMDR1YzNSeWFXNW5hV1o1S0hSb2FYTXVkWE5sY2tSaGRHRXBJQ0U5UFNBaWUzMGlJQ1ltSUNodUxuVnpaWEpFWVhSaElEMGdkR2hwY3k1MWMyVnlSR0YwWVNrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FTaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNCcGJpQnlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdjbHRoWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JzTG0xbGRHRmtZWFJoTENCdkxuQjFjMmdvYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdhU2hsTG5SbGVIUjFjbVZ6S1N3Z2J5QTlJR2tvWlM1cGJXRm5aWE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlMbXhsYm1kMGFDQStJREFnSmlZZ0tHNHVkR1Y0ZEhWeVpYTWdQU0J5S1N3Z2J5NXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtbHRZV2RsY3lBOUlHOHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNCbExtNWhiV1VzSUhSb2FYTXVabTluSUQwZ1pTNW1iMmNzSUhSb2FYTXVZbXhsYm1ScGJtY2dQU0JsTG1Kc1pXNWthVzVuTENCMGFHbHpMbk5wWkdVZ1BTQmxMbk5wWkdVc0lIUm9hWE11ZG1WeWRHVjRRMjlzYjNKeklEMGdaUzUyWlhKMFpYaERiMnh2Y25Nc0lIUm9hWE11YjNCaFkybDBlU0E5SUdVdWIzQmhZMmwwZVN3Z2RHaHBjeTVtYjNKdFlYUWdQU0JsTG1admNtMWhkQ3dnZEdocGN5NTBjbUZ1YzNCaGNtVnVkQ0E5SUdVdWRISmhibk53WVhKbGJuUXNJSFJvYVhNdVlteGxibVJUY21NZ1BTQmxMbUpzWlc1a1UzSmpMQ0IwYUdsekxtSnNaVzVrUkhOMElEMGdaUzVpYkdWdVpFUnpkQ3dnZEdocGN5NWliR1Z1WkVWeGRXRjBhVzl1SUQwZ1pTNWliR1Z1WkVWeGRXRjBhVzl1TENCMGFHbHpMbUpzWlc1a1UzSmpRV3h3YUdFZ1BTQmxMbUpzWlc1a1UzSmpRV3h3YUdFc0lIUm9hWE11WW14bGJtUkVjM1JCYkhCb1lTQTlJR1V1WW14bGJtUkVjM1JCYkhCb1lTd2dkR2hwY3k1aWJHVnVaRVZ4ZFdGMGFXOXVRV3h3YUdFZ1BTQmxMbUpzWlc1a1JYRjFZWFJwYjI1QmJIQm9ZU3dnZEdocGN5NWtaWEIwYUVaMWJtTWdQU0JsTG1SbGNIUm9SblZ1WXl3Z2RHaHBjeTVrWlhCMGFGUmxjM1FnUFNCbExtUmxjSFJvVkdWemRDd2dkR2hwY3k1a1pYQjBhRmR5YVhSbElEMGdaUzVrWlhCMGFGZHlhWFJsTENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlUxaGMyc2dQU0JsTG5OMFpXNWphV3hYY21sMFpVMWhjMnNzSUhSb2FYTXVjM1JsYm1OcGJFWjFibU1nUFNCbExuTjBaVzVqYVd4R2RXNWpMQ0IwYUdsekxuTjBaVzVqYVd4U1pXWWdQU0JsTG5OMFpXNWphV3hTWldZc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1OTllYTnJJRDBnWlM1emRHVnVZMmxzUm5WdVkwMWhjMnNzSUhSb2FYTXVjM1JsYm1OcGJFWmhhV3dnUFNCbExuTjBaVzVqYVd4R1lXbHNMQ0IwYUdsekxuTjBaVzVqYVd4YVJtRnBiQ0E5SUdVdWMzUmxibU5wYkZwR1lXbHNMQ0IwYUdsekxuTjBaVzVqYVd4YVVHRnpjeUE5SUdVdWMzUmxibU5wYkZwUVlYTnpMQ0IwYUdsekxuTjBaVzVqYVd4WGNtbDBaU0E5SUdVdWMzUmxibU5wYkZkeWFYUmxPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVqYkdsd2NHbHVaMUJzWVc1bGN5d2diaUE5SUc1MWJHdzdDaUFnSUNBZ0lDQWdhV1lnS0hRZ0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwTG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ2JpQTlJRzVsZHlCQmNuSmhlU2hwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTURzZ2NpQWhQVDBnYVRzZ0t5dHlLVzViY2wwZ1BTQjBXM0pkTG1Oc2IyNWxLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnNhWEJ3YVc1blVHeGhibVZ6SUQwZ2Jpd2dkR2hwY3k1amJHbHdTVzUwWlhKelpXTjBhVzl1SUQwZ1pTNWpiR2x3U1c1MFpYSnpaV04wYVc5dUxDQjBhR2x6TG1Oc2FYQlRhR0ZrYjNkeklEMGdaUzVqYkdsd1UyaGhaRzkzY3l3Z2RHaHBjeTV6YUdGa2IzZFRhV1JsSUQwZ1pTNXphR0ZrYjNkVGFXUmxMQ0IwYUdsekxtTnZiRzl5VjNKcGRHVWdQU0JsTG1OdmJHOXlWM0pwZEdVc0lIUm9hWE11Y0hKbFkybHphVzl1SUQwZ1pTNXdjbVZqYVhOcGIyNHNJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkQ0E5SUdVdWNHOXNlV2R2Yms5bVpuTmxkQ3dnZEdocGN5NXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlJRDBnWlM1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUxDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlHVXVjRzlzZVdkdmJrOW1abk5sZEZWdWFYUnpMQ0IwYUdsekxtUnBkR2hsY21sdVp5QTlJR1V1WkdsMGFHVnlhVzVuTENCMGFHbHpMbUZzY0doaFZHVnpkQ0E5SUdVdVlXeHdhR0ZVWlhOMExDQjBhR2x6TG1Gc2NHaGhWRzlEYjNabGNtRm5aU0E5SUdVdVlXeHdhR0ZVYjBOdmRtVnlZV2RsTENCMGFHbHpMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0E5SUdVdWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaExDQjBhR2x6TG5acGMybGliR1VnUFNCbExuWnBjMmxpYkdVc0lIUm9hWE11ZEc5dVpVMWhjSEJsWkNBOUlHVXVkRzl1WlUxaGNIQmxaQ3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29aUzUxYzJWeVJHRjBZU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6Y0c5elpTSUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUhObGRDQnVaV1ZrYzFWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ1pTQTlQVDBnSVRBZ0ppWWdkR2hwY3k1MlpYSnphVzl1S3lzN0NpQWdJQ0I5Q24wN0NtUjBMbkJ5YjNSdmRIbHdaUzVwYzAxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lBa1l5QTlJSHNLSUNBZ0lHRnNhV05sWW14MVpUb2dNVFUzT1RJek9ETXNDaUFnSUNCaGJuUnBjWFZsZDJocGRHVTZJREUyTkRRME16YzFMQW9nSUNBZ1lYRjFZVG9nTmpVMU16VXNDaUFnSUNCaGNYVmhiV0Z5YVc1bE9pQTRNemc0TlRZMExBb2dJQ0FnWVhwMWNtVTZJREUxTnprME1UYzFMQW9nSUNBZ1ltVnBaMlU2SURFMk1URTVNall3TEFvZ0lDQWdZbWx6Y1hWbE9pQXhOamMzTURJME5Dd0tJQ0FnSUdKc1lXTnJPaUF3TEFvZ0lDQWdZbXhoYm1Ob1pXUmhiRzF2Ym1RNklERTJOemN5TURRMUxBb2dJQ0FnWW14MVpUb2dNalUxTEFvZ0lDQWdZbXgxWlhacGIyeGxkRG9nT1RBMU5USXdNaXdLSUNBZ0lHSnliM2R1T2lBeE1EZ3lOREl6TkN3S0lDQWdJR0oxY214NWQyOXZaRG9nTVRRMU9UWXlNekVzQ2lBZ0lDQmpZV1JsZEdKc2RXVTZJRFl5TmpZMU1qZ3NDaUFnSUNCamFHRnlkSEpsZFhObE9pQTRNemc0TXpVeUxBb2dJQ0FnWTJodlkyOXNZWFJsT2lBeE16YzRPVFEzTUN3S0lDQWdJR052Y21Gc09pQXhOamMwTkRJM01pd0tJQ0FnSUdOdmNtNW1iRzkzWlhKaWJIVmxPaUEyTlRreE9UZ3hMQW9nSUNBZ1kyOXlibk5wYkdzNklERTJOemMxTXpnNExBb2dJQ0FnWTNKcGJYTnZiam9nTVRRME1qTXhNREFzQ2lBZ0lDQmplV0Z1T2lBMk5UVXpOU3dLSUNBZ0lHUmhjbXRpYkhWbE9pQXhNemtzQ2lBZ0lDQmtZWEpyWTNsaGJqb2dNelUzTWpNc0NpQWdJQ0JrWVhKcloyOXNaR1Z1Y205a09pQXhNakE1TWprek9Td0tJQ0FnSUdSaGNtdG5jbUY1T2lBeE1URXhPVEF4Tnl3S0lDQWdJR1JoY210bmNtVmxiam9nTWpVMk1EQXNDaUFnSUNCa1lYSnJaM0psZVRvZ01URXhNVGt3TVRjc0NpQWdJQ0JrWVhKcmEyaGhhMms2SURFeU5ETXpNalU1TEFvZ0lDQWdaR0Z5YTIxaFoyVnVkR0U2SURreE1EazJORE1zQ2lBZ0lDQmtZWEpyYjJ4cGRtVm5jbVZsYmpvZ05UVTVOems1T1N3S0lDQWdJR1JoY210dmNtRnVaMlU2SURFMk56UTNOVEl3TEFvZ0lDQWdaR0Z5YTI5eVkyaHBaRG9nTVRBd05EQXdNVElzQ2lBZ0lDQmtZWEpyY21Wa09pQTVNVEE1TlRBMExBb2dJQ0FnWkdGeWEzTmhiRzF2YmpvZ01UVXpNRGcwTVRBc0NpQWdJQ0JrWVhKcmMyVmhaM0psWlc0NklEazBNVGs1TVRrc0NpQWdJQ0JrWVhKcmMyeGhkR1ZpYkhWbE9pQTBOek0wTXpRM0xBb2dJQ0FnWkdGeWEzTnNZWFJsWjNKaGVUb2dNekV3TURRNU5Td0tJQ0FnSUdSaGNtdHpiR0YwWldkeVpYazZJRE14TURBME9UVXNDaUFnSUNCa1lYSnJkSFZ5Y1hWdmFYTmxPaUExTWprME5Td0tJQ0FnSUdSaGNtdDJhVzlzWlhRNklEazJPVGsxTXprc0NpQWdJQ0JrWldWd2NHbHVhem9nTVRZM01UWTVORGNzQ2lBZ0lDQmtaV1Z3YzJ0NVlteDFaVG9nTkRreE5URXNDaUFnSUNCa2FXMW5jbUY1T2lBMk9UQTRNalkxTEFvZ0lDQWdaR2x0WjNKbGVUb2dOamt3T0RJMk5Td0tJQ0FnSUdSdlpHZGxjbUpzZFdVNklESXdNRE14T1Rrc0NpQWdJQ0JtYVhKbFluSnBZMnM2SURFeE5qYzBNVFEyTEFvZ0lDQWdabXh2Y21Gc2QyaHBkR1U2SURFMk56YzFPVEl3TEFvZ0lDQWdabTl5WlhOMFozSmxaVzQ2SURJeU5qTTRORElzQ2lBZ0lDQm1kV05vYzJsaE9pQXhOamN4TVRrek5Td0tJQ0FnSUdkaGFXNXpZbTl5YnpvZ01UUTBOelEwTmpBc0NpQWdJQ0JuYUc5emRIZG9hWFJsT2lBeE5qTXhOalkzTVN3S0lDQWdJR2R2YkdRNklERTJOelkyTnpJd0xBb2dJQ0FnWjI5c1pHVnVjbTlrT2lBeE5ETXlPVEV5TUN3S0lDQWdJR2R5WVhrNklEZzBNakUxTURRc0NpQWdJQ0JuY21WbGJqb2dNekkzTmpnc0NpQWdJQ0JuY21WbGJubGxiR3h2ZHpvZ01URTBNRE13TlRVc0NpQWdJQ0JuY21WNU9pQTROREl4TlRBMExBb2dJQ0FnYUc5dVpYbGtaWGM2SURFMU56azBNVFl3TEFvZ0lDQWdhRzkwY0dsdWF6b2dNVFkzTXpnM05EQXNDaUFnSUNCcGJtUnBZVzV5WldRNklERXpORFU0TlRJMExBb2dJQ0FnYVc1a2FXZHZPaUEwT1RFMU16TXdMQW9nSUNBZ2FYWnZjbms2SURFMk56YzNNakF3TEFvZ0lDQWdhMmhoYTJrNklERTFOemczTmpZd0xBb2dJQ0FnYkdGMlpXNWtaWEk2SURFMU1UTXlOREV3TEFvZ0lDQWdiR0YyWlc1a1pYSmliSFZ6YURvZ01UWTNOek16TmpVc0NpQWdJQ0JzWVhkdVozSmxaVzQ2SURneE9UQTVOellzQ2lBZ0lDQnNaVzF2Ym1Ob2FXWm1iMjQ2SURFMk56YzFPRGcxTEFvZ0lDQWdiR2xuYUhSaWJIVmxPaUF4TVRNNU16STFOQ3dLSUNBZ0lHeHBaMmgwWTI5eVlXdzZJREUxTnpZeE5UTTJMQW9nSUNBZ2JHbG5hSFJqZVdGdU9pQXhORGMwTlRVNU9Td0tJQ0FnSUd4cFoyaDBaMjlzWkdWdWNtOWtlV1ZzYkc5M09pQXhOalEwT0RJeE1Dd0tJQ0FnSUd4cFoyaDBaM0poZVRvZ01UTTRPREl6TWpNc0NpQWdJQ0JzYVdkb2RHZHlaV1Z1T2lBNU5EazRNalUyTEFvZ0lDQWdiR2xuYUhSbmNtVjVPaUF4TXpnNE1qTXlNeXdLSUNBZ0lHeHBaMmgwY0dsdWF6b2dNVFkzTlRnME5qVXNDaUFnSUNCc2FXZG9kSE5oYkcxdmJqb2dNVFkzTlRJM05qSXNDaUFnSUNCc2FXZG9kSE5sWVdkeVpXVnVPaUF5TVRReU9Ea3dMQW9nSUNBZ2JHbG5hSFJ6YTNsaWJIVmxPaUE0T1RBd016UTJMQW9nSUNBZ2JHbG5hSFJ6YkdGMFpXZHlZWGs2SURjNE16TTNOVE1zQ2lBZ0lDQnNhV2RvZEhOc1lYUmxaM0psZVRvZ056Z3pNemMxTXl3S0lDQWdJR3hwWjJoMGMzUmxaV3hpYkhWbE9pQXhNVFU0TkRjek5Dd0tJQ0FnSUd4cFoyaDBlV1ZzYkc5M09pQXhOamMzTnpFNE5Dd0tJQ0FnSUd4cGJXVTZJRFkxTWpnd0xBb2dJQ0FnYkdsdFpXZHlaV1Z1T2lBek16STVNek13TEFvZ0lDQWdiR2x1Wlc0NklERTJORFExTmpjd0xBb2dJQ0FnYldGblpXNTBZVG9nTVRZM01URTVNelVzQ2lBZ0lDQnRZWEp2YjI0NklEZ3pPRGcyTURnc0NpQWdJQ0J0WldScGRXMWhjWFZoYldGeWFXNWxPaUEyTnpNM016SXlMQW9nSUNBZ2JXVmthWFZ0WW14MVpUb2dNakExTEFvZ0lDQWdiV1ZrYVhWdGIzSmphR2xrT2lBeE1qSXhNVFkyTnl3S0lDQWdJRzFsWkdsMWJYQjFjbkJzWlRvZ09UWTJNalk0TXl3S0lDQWdJRzFsWkdsMWJYTmxZV2R5WldWdU9pQXpPVGM0TURrM0xBb2dJQ0FnYldWa2FYVnRjMnhoZEdWaWJIVmxPaUE0TURnM056a3dMQW9nSUNBZ2JXVmthWFZ0YzNCeWFXNW5aM0psWlc0NklEWTBNVFUwTEFvZ0lDQWdiV1ZrYVhWdGRIVnljWFZ2YVhObE9pQTBOemN5TXpBd0xBb2dJQ0FnYldWa2FYVnRkbWx2YkdWMGNtVmtPaUF4TXpBME56RTNNeXdLSUNBZ0lHMXBaRzVwWjJoMFlteDFaVG9nTVRZME5Ea3hNaXdLSUNBZ0lHMXBiblJqY21WaGJUb2dNVFl4TWpFNE5UQXNDaUFnSUNCdGFYTjBlWEp2YzJVNklERTJOemN3TWpjekxBb2dJQ0FnYlc5alkyRnphVzQ2SURFMk56Y3dNakk1TEFvZ0lDQWdibUYyWVdwdmQyaHBkR1U2SURFMk56WTROamcxTEFvZ0lDQWdibUYyZVRvZ01USTRMQW9nSUNBZ2IyeGtiR0ZqWlRvZ01UWTJORE0xTlRnc0NpQWdJQ0J2YkdsMlpUb2dPRFF5TVRNM05pd0tJQ0FnSUc5c2FYWmxaSEpoWWpvZ056QTBPRGN6T1N3S0lDQWdJRzl5WVc1blpUb2dNVFkzTlRNNU1qQXNDaUFnSUNCdmNtRnVaMlZ5WldRNklERTJOekk1TXpRMExBb2dJQ0FnYjNKamFHbGtPaUF4TkRNeE5UY3pOQ3dLSUNBZ0lIQmhiR1ZuYjJ4a1pXNXliMlE2SURFMU5qVTNNVE13TEFvZ0lDQWdjR0ZzWldkeVpXVnVPaUF4TURBeU5UZzRNQ3dLSUNBZ0lIQmhiR1YwZFhKeGRXOXBjMlU2SURFeE5USTVPVFkyTEFvZ0lDQWdjR0ZzWlhacGIyeGxkSEpsWkRvZ01UUXpPREV5TURNc0NpQWdJQ0J3WVhCaGVXRjNhR2x3T2lBeE5qYzNNekEzTnl3S0lDQWdJSEJsWVdOb2NIVm1aam9nTVRZM05qYzJOek1zQ2lBZ0lDQndaWEoxT2lBeE16UTJPRGs1TVN3S0lDQWdJSEJwYm1zNklERTJOell4TURNMUxBb2dJQ0FnY0d4MWJUb2dNVFExTWpRMk16Y3NDaUFnSUNCd2IzZGtaWEppYkhWbE9pQXhNVFU1TVRreE1Dd0tJQ0FnSUhCMWNuQnNaVG9nT0RNNE9EY3pOaXdLSUNBZ0lISmxZbVZqWTJGd2RYSndiR1U2SURZMk9UYzRPREVzQ2lBZ0lDQnlaV1E2SURFMk56RXhOamd3TEFvZ0lDQWdjbTl6ZVdKeWIzZHVPaUF4TWpNMU56VXhPU3dLSUNBZ0lISnZlV0ZzWW14MVpUb2dOREk0TmprME5Td0tJQ0FnSUhOaFpHUnNaV0p5YjNkdU9pQTVNVEkzTVRnM0xBb2dJQ0FnYzJGc2JXOXVPaUF4TmpReE5qZzRNaXdLSUNBZ0lITmhibVI1WW5KdmQyNDZJREUyTURNeU9EWTBMQW9nSUNBZ2MyVmhaM0psWlc0NklETXdOVEF6TWpjc0NpQWdJQ0J6WldGemFHVnNiRG9nTVRZM056UTJNemdzQ2lBZ0lDQnphV1Z1Ym1FNklERXdOVEEyTnprM0xBb2dJQ0FnYzJsc2RtVnlPaUF4TWpZek1qSTFOaXdLSUNBZ0lITnJlV0pzZFdVNklEZzVNREF6TXpFc0NpQWdJQ0J6YkdGMFpXSnNkV1U2SURZNU56QXdOakVzQ2lBZ0lDQnpiR0YwWldkeVlYazZJRGN6TnpJNU5EUXNDaUFnSUNCemJHRjBaV2R5WlhrNklEY3pOekk1TkRRc0NpQWdJQ0J6Ym05M09pQXhOamMzTlRrek1Dd0tJQ0FnSUhOd2NtbHVaMmR5WldWdU9pQTJOVFF3Tnl3S0lDQWdJSE4wWldWc1lteDFaVG9nTkRZeU1EazRNQ3dLSUNBZ0lIUmhiam9nTVRNNE1EZzNPREFzQ2lBZ0lDQjBaV0ZzT2lBek1qZzVOaXdLSUNBZ0lIUm9hWE4wYkdVNklERTBNakEwT0RnNExBb2dJQ0FnZEc5dFlYUnZPaUF4Tmpjek56QTVOU3dLSUNBZ0lIUjFjbkYxYjJselpUb2dOREkxTVRnMU5pd0tJQ0FnSUhacGIyeGxkRG9nTVRVMk16RXdPRFlzQ2lBZ0lDQjNhR1ZoZERvZ01UWXhNVE16TXpFc0NpQWdJQ0IzYUdsMFpUb2dNVFkzTnpjeU1UVXNDaUFnSUNCM2FHbDBaWE50YjJ0bE9pQXhOakV4T1RJNE5Td0tJQ0FnSUhsbGJHeHZkem9nTVRZM056WTVOakFzQ2lBZ0lDQjVaV3hzYjNkbmNtVmxiam9nTVRBeE5EVXdOelFLZlN3Z1JuUWdQU0I3Q2lBZ0lDQm9PaUF3TEFvZ0lDQWdjem9nTUN3S0lDQWdJR3c2SURBS2ZTd2dhbklnUFNCN0NpQWdJQ0JvT2lBd0xBb2dJQ0FnY3pvZ01Dd0tJQ0FnSUd3NklEQUtmVHNLWm5WdVkzUnBiMjRnU1c4b2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJSFFnUENBd0lDWW1JQ2gwSUNzOUlERXBMQ0IwSUQ0Z01TQW1KaUFvZENBdFBTQXhLU3dnZENBOElERWdMeUEySUQ4Z2N5QXJJQ2hsSUMwZ2N5a2dLaUEySUNvZ2RDQTZJSFFnUENBeElDOGdNaUEvSUdVZ09pQjBJRHdnTWlBdklETWdQeUJ6SUNzZ0tHVWdMU0J6S1NBcUlEWWdLaUFvTWlBdklETWdMU0IwS1NBNklITTdDbjBLWm5WdVkzUnBiMjRnUkc4b2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BDQXVNRFF3TkRVZ1B5QnpJQ29nTGpBM056TTVPVE00TURnZ09pQk5ZWFJvTG5CdmR5aHpJQ29nTGprME56ZzJOekk1T0RZZ0t5QXVNRFV5TVRNeU56QXhOQ3dnTWk0MEtUc0tmUXBtZFc1amRHbHZiaUJHYnloektTQjdDaUFnSUNCeVpYUjFjbTRnY3lBOElDNHdNRE14TXpBNElEOGdjeUFxSURFeUxqa3lJRG9nTVM0d05UVWdLaUJOWVhSb0xuQnZkeWh6TENBdU5ERTJOallwSUMwZ0xqQTFOVHNLZlFwMllYSWdZV1VnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlHNGdQVDA5SUhadmFXUWdNQ0EvSUhSb2FYTXVjMlYwS0dVcElEb2dkR2hwY3k1elpYUlNSMElvWlN3Z2RDd2diaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUNZbUlHVXVhWE5EYjJ4dmNpQS9JSFJvYVhNdVkyOXdlU2hsS1NBNklIUjVjR1Z2WmlCbElEMDlJQ0p1ZFcxaVpYSWlJRDhnZEdocGN5NXpaWFJJWlhnb1pTa2dPaUIwZVhCbGIyWWdaU0E5UFNBaWMzUnlhVzVuSWlBbUppQjBhR2x6TG5ObGRGTjBlV3hsS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdaU3dnZEdocGN5NW5JRDBnWlN3Z2RHaHBjeTVpSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRWhsZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdQU0JOWVhSb0xtWnNiMjl5S0dVcExDQjBhR2x6TG5JZ1BTQW9aU0ErUGlBeE5pQW1JREkxTlNrZ0x5QXlOVFVzSUhSb2FYTXVaeUE5SUNobElENCtJRGdnSmlBeU5UVXBJQzhnTWpVMUxDQjBhR2x6TG1JZ1BTQW9aU0FtSURJMU5Ta2dMeUF5TlRVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlNSMElvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsTENCMGFHbHpMbWNnUFNCMExDQjBhR2x6TG1JZ1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwU0ZOTUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBOUlHUmhLR1VzSURFcExDQjBJRDBnYlhRb2RDd2dNQ3dnTVNrc0lHNGdQU0J0ZENodUxDQXdMQ0F4S1N3Z2RDQTlQVDBnTUNrZ2RHaHBjeTV5SUQwZ2RHaHBjeTVuSUQwZ2RHaHBjeTVpSUQwZ2Jqc0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVJRHc5SUM0MUlEOGdiaUFxSUNneElDc2dkQ2tnT2lCdUlDc2dkQ0F0SUc0Z0tpQjBMQ0J5SUQwZ01pQXFJRzRnTFNCcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSWdQU0JKYnloeUxDQnBMQ0JsSUNzZ01TQXZJRE1wTENCMGFHbHpMbWNnUFNCSmJ5aHlMQ0JwTENCbEtTd2dkR2hwY3k1aUlEMGdTVzhvY2l3Z2FTd2daU0F0SURFZ0x5QXpLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUZEhsc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZENocEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrZ0lUMDlJSFp2YVdRZ01DQW1KaUJ3WVhKelpVWnNiMkYwS0drcElEd2dNU0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrTnZiRzl5T2lCQmJIQm9ZU0JqYjIxd2IyNWxiblFnYjJZZ0lpQXJJR1VnS3lBaUlIZHBiR3dnWW1VZ2FXZHViM0psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUc0N0NpQWdJQ0FnSUNBZ2FXWWdLRzRnUFNBdlhpZ29QenB5WjJKOGFITnNLV0UvS1Z3b0tGdGVYQ2xkS2lsY0tTOHVaWGhsWXlobEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU3dnY2lBOUlHNWJNVjBzSUc4Z1BTQnVXekpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb2NpbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKeVoySWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWNtZGlZU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFNBdlhseHpLaWhjWkNzcFhITXFMRnh6S2loY1pDc3BYSE1xTEZ4ektpaGNaQ3NwWEhNcUtEODZMRnh6S2loY1pDcGNMajljWkNzcFhITXFLVDhrTHk1bGVHVmpLRzhwS1NCeVpYUjFjbTRnZEdocGN5NXlJRDBnVFdGMGFDNXRhVzRvTWpVMUxDQndZWEp6WlVsdWRDaHBXekZkTENBeE1Da3BJQzhnTWpVMUxDQjBhR2x6TG1jZ1BTQk5ZWFJvTG0xcGJpZ3lOVFVzSUhCaGNuTmxTVzUwS0dsYk1sMHNJREV3S1NrZ0x5QXlOVFVzSUhSb2FYTXVZaUE5SUUxaGRHZ3ViV2x1S0RJMU5Td2djR0Z5YzJWSmJuUW9hVnN6WFN3Z01UQXBLU0F2SURJMU5Td2dkQ2hwV3pSZEtTd2dkR2hwY3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlDOWVYSE1xS0Z4a0t5bGNKVnh6S2l4Y2N5b29YR1FyS1Z3bFhITXFMRnh6S2loY1pDc3BYQ1ZjY3lvb1B6b3NYSE1xS0Z4a0tsd3VQMXhrS3lsY2N5b3BQeVF2TG1WNFpXTW9ieWtwSUhKbGRIVnliaUIwYUdsekxuSWdQU0JOWVhSb0xtMXBiaWd4TURBc0lIQmhjbk5sU1c1MEtHbGJNVjBzSURFd0tTa2dMeUF4TURBc0lIUm9hWE11WnlBOUlFMWhkR2d1YldsdUtERXdNQ3dnY0dGeWMyVkpiblFvYVZzeVhTd2dNVEFwS1NBdklERXdNQ3dnZEdocGN5NWlJRDBnVFdGMGFDNXRhVzRvTVRBd0xDQndZWEp6WlVsdWRDaHBXek5kTENBeE1Da3BJQzhnTVRBd0xDQjBLR2xiTkYwcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlhSE5zSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbWh6YkdFaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMGdMMTVjY3lvb1hHUXFYQzQvWEdRcktWeHpLaXhjY3lvb1hHUXJLVndsWEhNcUxGeHpLaWhjWkNzcFhDVmNjeW9vUHpvc1hITXFLRnhrS2x3dVAxeGtLeWxjY3lvcFB5UXZMbVY0WldNb2J5a3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQndZWEp6WlVac2IyRjBLR2xiTVYwcElDOGdNell3TENCc0lEMGdjR0Z5YzJWSmJuUW9hVnN5WFN3Z01UQXBJQzhnTVRBd0xDQmpJRDBnY0dGeWMyVkpiblFvYVZzelhTd2dNVEFwSUM4Z01UQXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDaHBXelJkS1N3Z2RHaHBjeTV6WlhSSVUwd29ZU3dnYkN3Z1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h1SUQwZ0wxNWNJeWhiUVMxR1lTMW1YR1JkS3lra0x5NWxlR1ZqS0dVcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBNU0E5SUc1Yk1WMHNJSEl4SUQwZ2FURXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NqRWdQVDA5SURNcElISmxkSFZ5YmlCMGFHbHpMbklnUFNCd1lYSnpaVWx1ZENocE1TNWphR0Z5UVhRb01Da2dLeUJwTVM1amFHRnlRWFFvTUNrc0lERTJLU0F2SURJMU5Td2dkR2hwY3k1bklEMGdjR0Z5YzJWSmJuUW9hVEV1WTJoaGNrRjBLREVwSUNzZ2FURXVZMmhoY2tGMEtERXBMQ0F4TmlrZ0x5QXlOVFVzSUhSb2FYTXVZaUE5SUhCaGNuTmxTVzUwS0dreExtTm9ZWEpCZENneUtTQXJJR2t4TG1Ob1lYSkJkQ2d5S1N3Z01UWXBJQzhnTWpVMUxDQjBhR2x6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2pFZ1BUMDlJRFlwSUhKbGRIVnliaUIwYUdsekxuSWdQU0J3WVhKelpVbHVkQ2hwTVM1amFHRnlRWFFvTUNrZ0t5QnBNUzVqYUdGeVFYUW9NU2tzSURFMktTQXZJREkxTlN3Z2RHaHBjeTVuSUQwZ2NHRnljMlZKYm5Rb2FURXVZMmhoY2tGMEtESXBJQ3NnYVRFdVkyaGhja0YwS0RNcExDQXhOaWtnTHlBeU5UVXNJSFJvYVhNdVlpQTlJSEJoY25ObFNXNTBLR2t4TG1Ob1lYSkJkQ2cwS1NBcklHa3hMbU5vWVhKQmRDZzFLU3dnTVRZcElDOGdNalUxTENCMGFHbHpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FtSmlCbExteGxibWQwYUNBK0lEQWdQeUIwYUdsekxuTmxkRU52Ykc5eVRtRnRaU2hsS1NBNklIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkRiMnh2Y2s1aGJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnSkdOYlpTNTBiMHh2ZDJWeVEyRnpaU2dwWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdkR2hwY3k1elpYUklaWGdvZENrZ09pQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa052Ykc5eU9pQlZibXR1YjNkdUlHTnZiRzl5SUNJZ0t5QmxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuSXNJSFJvYVhNdVp5d2dkR2hwY3k1aUtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQmxMbklzSUhSb2FYTXVaeUE5SUdVdVp5d2dkR2hwY3k1aUlEMGdaUzVpTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VWTlNSMEpVYjB4cGJtVmhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUE5SUVSdktHVXVjaWtzSUhSb2FYTXVaeUE5SUVSdktHVXVaeWtzSUhSb2FYTXVZaUE5SUVSdktHVXVZaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVRHbHVaV0Z5Vkc5VFVrZENLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnUm04b1pTNXlLU3dnZEdocGN5NW5JRDBnUm04b1pTNW5LU3dnZEdocGN5NWlJRDBnUm04b1pTNWlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Ym5abGNuUlRVa2RDVkc5TWFXNWxZWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl3ZVZOU1IwSlViMHhwYm1WaGNpaDBhR2x6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmJuWmxjblJNYVc1bFlYSlViMU5TUjBJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5d2VVeHBibVZoY2xSdlUxSkhRaWgwYUdsektTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRWhsZUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUNvZ01qVTFJRHc4SURFMklGNGdkR2hwY3k1bklDb2dNalUxSUR3OElEZ2dYaUIwYUdsekxtSWdLaUF5TlRVZ1BEd2dNRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFaGxlRk4wY21sdVp5Z3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdLQ0l3TURBd01EQWlJQ3NnZEdocGN5NW5aWFJJWlhnb0tTNTBiMU4wY21sdVp5Z3hOaWtwTG5Oc2FXTmxLQzAyS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRWhUVENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5Jc0lHNGdQU0IwYUdsekxtY3NJR2tnUFNCMGFHbHpMbUlzSUhJZ1BTQk5ZWFJvTG0xaGVDaDBMQ0J1TENCcEtTd2dieUE5SUUxaGRHZ3ViV2x1S0hRc0lHNHNJR2twTENCaExDQnNMQ0JqSUQwZ0tHOGdLeUJ5S1NBdklESTdDaUFnSUNBZ0lDQWdhV1lnS0c4Z1BUMDlJSElwSUdFZ1BTQXdMQ0JzSUQwZ01Ec0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQnlJQzBnYnpzS0lDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tHd2dQU0JqSUR3OUlDNDFJRDhnYUNBdklDaHlJQ3NnYnlrZ09pQm9JQzhnS0RJZ0xTQnlJQzBnYnlrc0lISXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0VnUFNBb2JpQXRJR2twSUM4Z2FDQXJJQ2h1SUR3Z2FTQS9JRFlnT2lBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYmpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnS0drZ0xTQjBLU0F2SUdnZ0t5QXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCcE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0VnUFNBb2RDQXRJRzRwSUM4Z2FDQXJJRFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWVNBdlBTQTJPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVvSUQwZ1lTd2daUzV6SUQwZ2JDd2daUzVzSUQwZ1l5d2daVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGTjBlV3hsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaWNtZGlLQ0lnS3lBb2RHaHBjeTV5SUNvZ01qVTFJSHdnTUNrZ0t5QWlMQ0lnS3lBb2RHaHBjeTVuSUNvZ01qVTFJSHdnTUNrZ0t5QWlMQ0lnS3lBb2RHaHBjeTVpSUNvZ01qVTFJSHdnTUNrZ0t5QWlLU0k3Q2lBZ0lDQjlDaUFnSUNCdlptWnpaWFJJVTB3b1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVoVFRDaEdkQ2tzSUVaMExtZ2dLejBnWlN3Z1JuUXVjeUFyUFNCMExDQkdkQzVzSUNzOUlHNHNJSFJvYVhNdWMyVjBTRk5NS0VaMExtZ3NJRVowTG5Nc0lFWjBMbXdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlDczlJR1V1Y2l3Z2RHaHBjeTVuSUNzOUlHVXVaeXdnZEdocGN5NWlJQ3M5SUdVdVlpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRU52Ykc5eWN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUE5SUdVdWNpQXJJSFF1Y2l3Z2RHaHBjeTVuSUQwZ1pTNW5JQ3NnZEM1bkxDQjBhR2x6TG1JZ1BTQmxMbUlnS3lCMExtSXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdLejBnWlN3Z2RHaHBjeTVuSUNzOUlHVXNJSFJvYVhNdVlpQXJQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNWaUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdUV0YwYUM1dFlYZ29NQ3dnZEdocGN5NXlJQzBnWlM1eUtTd2dkR2hwY3k1bklEMGdUV0YwYUM1dFlYZ29NQ3dnZEdocGN5NW5JQzBnWlM1bktTd2dkR2hwY3k1aUlEMGdUV0YwYUM1dFlYZ29NQ3dnZEdocGN5NWlJQzBnWlM1aUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlDbzlJR1V1Y2l3Z2RHaHBjeTVuSUNvOUlHVXVaeXdnZEdocGN5NWlJQ285SUdVdVlpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUNvOUlHVXNJSFJvYVhNdVp5QXFQU0JsTENCMGFHbHpMbUlnS2owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeGxjbkFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ0t6MGdLR1V1Y2lBdElIUm9hWE11Y2lrZ0tpQjBMQ0IwYUdsekxtY2dLejBnS0dVdVp5QXRJSFJvYVhNdVp5a2dLaUIwTENCMGFHbHpMbUlnS3owZ0tHVXVZaUF0SUhSb2FYTXVZaWtnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JHVnljRU52Ykc5eWN5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlHVXVjaUFySUNoMExuSWdMU0JsTG5JcElDb2diaXdnZEdocGN5NW5JRDBnWlM1bklDc2dLSFF1WnlBdElHVXVaeWtnS2lCdUxDQjBhR2x6TG1JZ1BTQmxMbUlnS3lBb2RDNWlJQzBnWlM1aUtTQXFJRzRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzWlhKd1NGTk1LR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFaFRUQ2hHZENrc0lHVXVaMlYwU0ZOTUtHcHlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRzl5S0VaMExtZ3NJR3B5TG1nc0lIUXBMQ0JwSUQwZ2IzSW9SblF1Y3l3Z2FuSXVjeXdnZENrc0lISWdQU0J2Y2loR2RDNXNMQ0JxY2k1c0xDQjBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUklVMHdvYml3Z2FTd2djaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5JZ1BUMDlJSFJvYVhNdWNpQW1KaUJsTG1jZ1BUMDlJSFJvYVhNdVp5QW1KaUJsTG1JZ1BUMDlJSFJvYVhNdVlqc0tJQ0FnSUgwS0lDQWdJR1p5YjIxQmNuSmhlU2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsVzNSZExDQjBhR2x6TG1jZ1BTQmxXM1FnS3lBeFhTd2dkR2hwY3k1aUlEMGdaVnQwSUNzZ01sMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMEZ5Y21GNUtHVWdQU0JiWFN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlZ0MFhTQTlJSFJvYVhNdWNpd2daVnQwSUNzZ01WMGdQU0IwYUdsekxtY3NJR1ZiZENBcklESmRJRDBnZEdocGN5NWlMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUE5SUdVdVoyVjBXQ2gwS1N3Z2RHaHBjeTVuSUQwZ1pTNW5aWFJaS0hRcExDQjBhR2x6TG1JZ1BTQmxMbWRsZEZvb2RDa3NJR1V1Ym05eWJXRnNhWHBsWkNBOVBUMGdJVEFnSmlZZ0tIUm9hWE11Y2lBdlBTQXlOVFVzSUhSb2FYTXVaeUF2UFNBeU5UVXNJSFJvYVhNdVlpQXZQU0F5TlRVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVobGVDZ3BPd29nSUNBZ2ZRcDlPd3BoWlM1T1FVMUZVeUE5SUNSak93cGhaUzV3Y205MGIzUjVjR1V1YVhORGIyeHZjaUE5SUNFd093cGhaUzV3Y205MGIzUjVjR1V1Y2lBOUlERTdDbUZsTG5CeWIzUnZkSGx3WlM1bklEMGdNVHNLWVdVdWNISnZkRzkwZVhCbExtSWdQU0F4T3dwMllYSWdhRzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1IwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJazFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNneE5qYzNOekl4TlNrc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtRnZUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdWMzQmxZM1ZzWVhKTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWxiblpOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbU52YldKcGJtVWdQU0JXY3l3Z2RHaHBjeTV5Wldac1pXTjBhWFpwZEhrZ1BTQXhMQ0IwYUdsekxuSmxabkpoWTNScGIyNVNZWFJwYnlBOUlDNDVPQ3dnZEdocGN5NTNhWEpsWm5KaGJXVWdQU0FoTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNBeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnUFNBaWNtOTFibVFpTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVJRDBnSW5KdmRXNWtJaXdnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ1pTNXNhV2RvZEUxaGNDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlHVXViR2xuYUhSTllYQkpiblJsYm5OcGRIa3NJSFJvYVhNdVlXOU5ZWEFnUFNCbExtRnZUV0Z3TENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVoYjAxaGNFbHVkR1Z1YzJsMGVTd2dkR2hwY3k1emNHVmpkV3hoY2sxaGNDQTlJR1V1YzNCbFkzVnNZWEpOWVhBc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUdVdVpXNTJUV0Z3TENCMGFHbHpMbU52YldKcGJtVWdQU0JsTG1OdmJXSnBibVVzSUhSb2FYTXVjbVZtYkdWamRHbDJhWFI1SUQwZ1pTNXlaV1pzWldOMGFYWnBkSGtzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklEMGdaUzV5WldaeVlXTjBhVzl1VW1GMGFXOHNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaV05oY0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUdVdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q21odUxuQnliM1J2ZEhsd1pTNXBjMDFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJLWlNBOUlHNWxkeUJOTENCUmNpQTlJRzVsZHlCWUxDQlZaU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLR1VwS1NCMGFISnZkeUJ1WlhjZ1ZIbHdaVVZ5Y205eUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1U2SUdGeWNtRjVJSE5vYjNWc1pDQmlaU0JoSUZSNWNHVmtJRUZ5Y21GNUxpSXBPd29nSUNBZ0lDQWdJSFJvYVhNdWJtRnRaU0E5SUNJaUxDQjBhR2x6TG1GeWNtRjVJRDBnWlN3Z2RHaHBjeTVwZEdWdFUybDZaU0E5SUhRc0lIUm9hWE11WTI5MWJuUWdQU0JsSUNFOVBTQjJiMmxrSURBZ1B5QmxMbXhsYm1kMGFDQXZJSFFnT2lBd0xDQjBhR2x6TG01dmNtMWhiR2w2WldRZ1BTQnVJRDA5UFNBaE1Dd2dkR2hwY3k1MWMyRm5aU0E5SUdoeUxDQjBhR2x6TG5Wd1pHRjBaVkpoYm1kbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFE2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJR052ZFc1ME9pQXRNUW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVkbVZ5YzJsdmJpQTlJREE3Q2lBZ0lDQjlDaUFnSUNCdmJsVndiRzloWkVOaGJHeGlZV05yS0NrZ2UzMEtJQ0FnSUhObGRDQnVaV1ZrYzFWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ1pTQTlQVDBnSVRBZ0ppWWdkR2hwY3k1MlpYSnphVzl1S3lzN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJWYzJGblpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRYTmhaMlVnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibUZ0WlNBOUlHVXVibUZ0WlN3Z2RHaHBjeTVoY25KaGVTQTlJRzVsZHlCbExtRnljbUY1TG1OdmJuTjBjblZqZEc5eUtHVXVZWEp5WVhrcExDQjBhR2x6TG1sMFpXMVRhWHBsSUQwZ1pTNXBkR1Z0VTJsNlpTd2dkR2hwY3k1amIzVnVkQ0E5SUdVdVkyOTFiblFzSUhSb2FYTXVibTl5YldGc2FYcGxaQ0E5SUdVdWJtOXliV0ZzYVhwbFpDd2dkR2hwY3k1MWMyRm5aU0E5SUdVdWRYTmhaMlVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVFYUW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR1VnS2owZ2RHaHBjeTVwZEdWdFUybDZaU3dnYmlBcVBTQjBMbWwwWlcxVGFYcGxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0IwYUdsekxtbDBaVzFUYVhwbE95QnBJRHdnY2pzZ2FTc3JLWFJvYVhNdVlYSnlZWGxiWlNBcklHbGRJRDBnZEM1aGNuSmhlVnR1SUNzZ2FWMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVRWEp5WVhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeWNtRjVMbk5sZENobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGxEYjJ4dmNuTkJjbkpoZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1GeWNtRjVMQ0J1SUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdaUzVzWlc1bmRHZzdJR2tnUENCeU95QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVmJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQVDA5SUhadmFXUWdNQ0FtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVdVkyOXdlVU52Ykc5eWMwRnljbUY1S0NrNklHTnZiRzl5SUdseklIVnVaR1ZtYVc1bFpDSXNJR2twTENCdklEMGdibVYzSUdGbEtTd2dkRnR1S3l0ZElEMGdieTV5TENCMFcyNHJLMTBnUFNCdkxtY3NJSFJiYmlzclhTQTlJRzh1WWpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVZtVmpkRzl5TW5OQmNuSmhlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUZ5Y21GNUxDQnVJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ1pTNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdWYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1V1WTI5d2VWWmxZM1J2Y2pKelFYSnlZWGtvS1RvZ2RtVmpkRzl5SUdseklIVnVaR1ZtYVc1bFpDSXNJR2twTENCdklEMGdibVYzSUZncExDQjBXMjRySzEwZ1BTQnZMbmdzSUhSYmJpc3JYU0E5SUc4dWVUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVWbVZqZEc5eU0zTkJjbkpoZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1GeWNtRjVMQ0J1SUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdaUzVzWlc1bmRHZzdJR2tnUENCeU95QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVmJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQVDA5SUhadmFXUWdNQ0FtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVdVkyOXdlVlpsWTNSdmNqTnpRWEp5WVhrb0tUb2dkbVZqZEc5eUlHbHpJSFZ1WkdWbWFXNWxaQ0lzSUdrcExDQnZJRDBnYm1WM0lFMHBMQ0IwVzI0cksxMGdQU0J2TG5nc0lIUmJiaXNyWFNBOUlHOHVlU3dnZEZ0dUt5dGRJRDBnYnk1Nk93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIbFdaV04wYjNJMGMwRnljbUY1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WVhKeVlYa3NJRzRnUFNBd093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQmxMbXhsYm1kMGFEc2dhU0E4SUhJN0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1pWdHBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlQVDBnZG05cFpDQXdJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tGMGRISnBZblYwWlM1amIzQjVWbVZqZEc5eU5ITkJjbkpoZVNncE9pQjJaV04wYjNJZ2FYTWdkVzVrWldacGJtVmtJaXdnYVNrc0lHOGdQU0J1WlhjZ1ZtVXBMQ0IwVzI0cksxMGdQU0J2TG5nc0lIUmJiaXNyWFNBOUlHOHVlU3dnZEZ0dUt5dGRJRDBnYnk1NkxDQjBXMjRySzEwZ1BTQnZMbmM3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGd6S0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXBkR1Z0VTJsNlpTQTlQVDBnTWlrZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11WTI5MWJuUTdJSFFnUENCdU95QjBLeXNwVVhJdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBhR2x6TENCMEtTd2dVWEl1WVhCd2JIbE5ZWFJ5YVhnektHVXBMQ0IwYUdsekxuTmxkRmhaS0hRc0lGRnlMbmdzSUZGeUxua3BPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSFJvYVhNdWFYUmxiVk5wZW1VZ1BUMDlJRE1wSUdadmNpaHNaWFFnZERFZ1BTQXdMQ0J1TVNBOUlIUm9hWE11WTI5MWJuUTdJSFF4SUR3Z2JqRTdJSFF4S3lzcFNtVXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwYUdsekxDQjBNU2tzSUVwbExtRndjR3g1VFdGMGNtbDRNeWhsS1N3Z2RHaHBjeTV6WlhSWVdWb29kREVzSUVwbExuZ3NJRXBsTG5rc0lFcGxMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1amIzVnVkRHNnZENBOElHNDdJSFFyS3lsS1pTNTRJRDBnZEdocGN5NW5aWFJZS0hRcExDQktaUzU1SUQwZ2RHaHBjeTVuWlhSWktIUXBMQ0JLWlM1NklEMGdkR2hwY3k1blpYUmFLSFFwTENCS1pTNWhjSEJzZVUxaGRISnBlRFFvWlNrc0lIUm9hWE11YzJWMFdGbGFLSFFzSUVwbExuZ3NJRXBsTG5rc0lFcGxMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsT2IzSnRZV3hOWVhSeWFYZ29aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLVXBsTG5nZ1BTQjBhR2x6TG1kbGRGZ29kQ2tzSUVwbExua2dQU0IwYUdsekxtZGxkRmtvZENrc0lFcGxMbm9nUFNCMGFHbHpMbWRsZEZvb2RDa3NJRXBsTG1Gd2NHeDVUbTl5YldGc1RXRjBjbWw0S0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCS1pTNTRMQ0JLWlM1NUxDQktaUzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11WTI5MWJuUTdJSFFnUENCdU95QjBLeXNwU21VdWVDQTlJSFJvYVhNdVoyVjBXQ2gwS1N3Z1NtVXVlU0E5SUhSb2FYTXVaMlYwV1NoMEtTd2dTbVV1ZWlBOUlIUm9hWE11WjJWMFdpaDBLU3dnU21VdWRISmhibk5tYjNKdFJHbHlaV04wYVc5dUtHVXBMQ0IwYUdsekxuTmxkRmhaV2loMExDQktaUzU0TENCS1pTNTVMQ0JLWlM1NktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeWNtRjVMbk5sZENobExDQjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxYVHNLSUNBZ0lIMEtJQ0FnSUhObGRGZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNVcyVWdLaUIwYUdsekxtbDBaVzFUYVhwbFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySURGZE93b2dJQ0FnZlFvZ0lDQWdjMlYwV1NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGxiWlNBcUlIUm9hWE11YVhSbGJWTnBlbVVnS3lBeFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSYUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySURKZE93b2dJQ0FnZlFvZ0lDQWdjMlYwV2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGxiWlNBcUlIUm9hWE11YVhSbGJWTnBlbVVnS3lBeVhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSWEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNuSmhlVnRsSUNvZ2RHaHBjeTVwZEdWdFUybDZaU0FySUROZE93b2dJQ0FnZlFvZ0lDQWdjMlYwVnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGxiWlNBcUlIUm9hWE11YVhSbGJWTnBlbVVnS3lBelhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdLajBnZEdocGN5NXBkR1Z0VTJsNlpTd2dkR2hwY3k1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF4WFNBOUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1Zvb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ285SUhSb2FYTXVhWFJsYlZOcGVtVXNJSFJvYVhNdVlYSnlZWGxiWlNBcklEQmRJRDBnZEN3Z2RHaHBjeTVoY25KaGVWdGxJQ3NnTVYwZ1BTQnVMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXlYU0E5SUdrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXVnBYS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FxUFNCMGFHbHpMbWwwWlcxVGFYcGxMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXdYU0E5SUhRc0lIUm9hWE11WVhKeVlYbGJaU0FySURGZElEMGdiaXdnZEdocGN5NWhjbkpoZVZ0bElDc2dNbDBnUFNCcExDQjBhR2x6TG1GeWNtRjVXMlVnS3lBelhTQTlJSElzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J2YmxWd2JHOWhaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViMjVWY0d4dllXUkRZV3hzWW1GamF5QTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NWhjbkpoZVN3Z2RHaHBjeTVwZEdWdFUybDZaU2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJWTnBlbVU2SUhSb2FYTXVhWFJsYlZOcGVtVXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFJvYVhNdVlYSnlZWGt1WTI5dWMzUnlkV04wYjNJdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlZWGs2SUVGeWNtRjVMbkJ5YjNSdmRIbHdaUzV6YkdsalpTNWpZV3hzS0hSb2FYTXVZWEp5WVhrcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeHBlbVZrT2lCMGFHbHpMbTV2Y20xaGJHbDZaV1FLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNWhiV1VnSVQwOUlDSWlJQ1ltSUNobExtNWhiV1VnUFNCMGFHbHpMbTVoYldVcExDQjBhR2x6TG5WellXZGxJQ0U5UFNCb2NpQW1KaUFvWlM1MWMyRm5aU0E5SUhSb2FYTXVkWE5oWjJVcExDQW9kR2hwY3k1MWNHUmhkR1ZTWVc1blpTNXZabVp6WlhRZ0lUMDlJREFnZkh3Z2RHaHBjeTUxY0dSaGRHVlNZVzVuWlM1amIzVnVkQ0FoUFQwZ0xURXBJQ1ltSUNobExuVndaR0YwWlZKaGJtZGxJRDBnZEdocGN5NTFjR1JoZEdWU1lXNW5aU2tzSUdVN0NpQWdJQ0I5Q24wN0NsVmxMbkJ5YjNSdmRIbHdaUzVwYzBKMVptWmxja0YwZEhKcFluVjBaU0E5SUNFd093cDJZWElnYW1NZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QkpiblE0UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0JSWXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblE0UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0JMWXlBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblE0UTJ4aGJYQmxaRUZ5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZTd2daV2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCSmJuUXhOa0Z5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZTd2dXWE1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCVmFXNTBNVFpCY25KaGVTaGxLU3dnZEN3Z2JpazdDaUFnSUNCOUNuMHNJSFJvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJWWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ1NXNTBNekpCY25KaGVTaGxLU3dnZEN3Z2JpazdDaUFnSUNCOUNuMHNJRnB6SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJWWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ1ZXbHVkRE15UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0J1YUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lGVnBiblF4TmtGeWNtRjVLR1VwTENCMExDQnVLVHNLSUNBZ0lIMEtmVHNLYm1ndWNISnZkRzkwZVhCbExtbHpSbXh2WVhReE5rSjFabVpsY2tGMGRISnBZblYwWlNBOUlDRXdPd3AyWVhJZ1pHVWdQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQnBhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUVac2IyRjBOalJCY25KaGVTaGxLU3dnZEN3Z2JpazdDaUFnSUNCOUNuMHNJR05tSUQwZ01Dd2dVblFnUFNCdVpYY2djR1VzSUU1dklEMGdibVYzSUU1bExDQmphU0E5SUc1bGR5Qk5MQ0JVZENBOUlHNWxkeUJNZEN3Z0pHa2dQU0J1WlhjZ1RIUXNJR2gwSUQwZ2JtVjNJRTBzSUY5bElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJQ0pwWkNJc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR05tS3lzS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MWRXbGtJRDBnUlhRb0tTd2dkR2hwY3k1dVlXMWxJRDBnSWlJc0lIUm9hWE11ZEhsd1pTQTlJQ0pDZFdabVpYSkhaVzl0WlhSeWVTSXNJSFJvYVhNdWFXNWtaWGdnUFNCdWRXeHNMQ0IwYUdsekxtRjBkSEpwWW5WMFpYTWdQU0I3ZlN3Z2RHaHBjeTV0YjNKd2FFRjBkSEpwWW5WMFpYTWdQU0I3ZlN3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEhOU1pXeGhkR2wyWlNBOUlDRXhMQ0IwYUdsekxtZHliM1Z3Y3lBOUlGdGRMQ0IwYUdsekxtSnZkVzVrYVc1blFtOTRJRDBnYm5Wc2JDd2dkR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaU0E5SUc1MWJHd3NJSFJvYVhNdVpISmhkMUpoYm1kbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRG9nTUN3S0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklERWdMeUF3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUh0OU93b2dJQ0FnZlFvZ0lDQWdaMlYwU1c1a1pYZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFXNWtaWGc3Q2lBZ0lDQjlDaUFnSUNCelpYUkpibVJsZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFRnljbUY1TG1selFYSnlZWGtvWlNrZ1B5QjBhR2x6TG1sdVpHVjRJRDBnYm1WM0lDaFpZeWhsS1NBK0lEWTFOVE0xSUQ4Z1duTWdPaUJaY3lrb1pTd2dNU2tnT2lCMGFHbHpMbWx1WkdWNElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVGMGRISnBZblYwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhSMGNtbGlkWFJsYzF0bFhUc0tJQ0FnSUgwS0lDQWdJSE5sZEVGMGRISnBZblYwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYUjBjbWxpZFhSbGMxdGxYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa1pXeGxkR1ZCZEhSeWFXSjFkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCa1pXeGxkR1VnZEdocGN5NWhkSFJ5YVdKMWRHVnpXMlZkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYUdGelFYUjBjbWxpZFhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGRIUnlhV0oxZEdWelcyVmRJQ0U5UFNCMmIybGtJREE3Q2lBZ0lDQjlDaUFnSUNCaFpHUkhjbTkxY0NobExDQjBMQ0J1SUQwZ01Da2dld29nSUNBZ0lDQWdJSFJvYVhNdVozSnZkWEJ6TG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRG9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzU1c1a1pYZzZJRzRLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5UjNKdmRYQnpLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaM0p2ZFhCeklEMGdXMTA3Q2lBZ0lDQjlDaUFnSUNCelpYUkVjbUYzVW1GdVoyVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WkhKaGQxSmhibWRsTG5OMFlYSjBJRDBnWlN3Z2RHaHBjeTVrY21GM1VtRnVaMlV1WTI5MWJuUWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZWFIwY21saWRYUmxjeTV3YjNOcGRHbHZianNLSUNBZ0lDQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwTG01bFpXUnpWWEJrWVhSbElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbTV2Y20xaGJEc0tJQ0FnSUNBZ0lDQnBaaUFvYmlBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lHeDBLQ2t1WjJWMFRtOXliV0ZzVFdGMGNtbDRLR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVMbUZ3Y0d4NVRtOXliV0ZzVFdGMGNtbDRLSElwTENCdUxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG5SaGJtZGxiblE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2tnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWlNrc0lHa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Da3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dJVDA5SUc1MWJHd2dKaVlnZEdocGN5NWpiMjF3ZFhSbFFtOTFibVJwYm1kQ2IzZ29LU3dnZEdocGN5NWliM1Z1WkdsdVoxTndhR1Z5WlNBaFBUMGdiblZzYkNBbUppQjBhR2x6TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsUmRXRjBaWEp1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVblF1YldGclpWSnZkR0YwYVc5dVJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtGSjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEp2ZEdGMFpWZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJTZEM1dFlXdGxVbTkwWVhScGIyNVlLR1VwTENCMGFHbHpMbUZ3Y0d4NVRXRjBjbWw0TkNoU2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWWktHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVblF1YldGclpWSnZkR0YwYVc5dVdTaGxLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvVW5RcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsV2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGSjBMbTFoYTJWU2IzUmhkR2x2Ymxvb1pTa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRkowS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZKMExtMWhhMlZVY21GdWMyeGhkR2x2YmlobExDQjBMQ0J1S1N3Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb1VuUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMk5oYkdVb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCU2RDNXRZV3RsVTJOaGJHVW9aU3dnZEN3Z2Jpa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRkowS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4dmIydEJkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUU1dkxteHZiMnRCZENobEtTd2dUbTh1ZFhCa1lYUmxUV0YwY21sNEtDa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRTV2TG0xaGRISnBlQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqWlc1MFpYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDa3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3VaMlYwUTJWdWRHVnlLR05wS1M1dVpXZGhkR1VvS1N3Z2RHaHBjeTUwY21GdWMyeGhkR1VvWTJrdWVDd2dZMmt1ZVN3Z1kya3VlaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCbExteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnWlZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1d2RYTm9LSEl1ZUN3Z2NpNTVMQ0J5TG5vZ2ZId2dNQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvZEN3Z015a3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVSnZkVzVrYVc1blFtOTRLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WW05MWJtUnBibWRDYjNnZ1BTQnVaWGNnVEhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCMElEMGdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdKaVlnWlM1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9KMVJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMEp2ZUNncE9pQkhURUoxWm1abGNrRjBkSEpwWW5WMFpTQnlaWEYxYVhKbGN5QmhJRzFoYm5WaGJDQmliM1Z1WkdsdVp5QmliM2d1SUVGc2RHVnlibUYwYVhabGJIa2djMlYwSUNKdFpYTm9MbVp5ZFhOMGRXMURkV3hzWldRaUlIUnZJQ0ptWVd4elpTSXVKeXdnZEdocGN5a3NJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3VjMlYwS0c1bGR5Qk5LQzB4SUM4Z01Dd2dMVEVnTHlBd0xDQXRNU0F2SURBcExDQnVaWGNnVFNneElDOGdNQ3dnTVNBdklEQXNJREVnTHlBd0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWliM1Z1WkdsdVowSnZlQzV6WlhSR2NtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXBMQ0IwS1NCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBXMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVkhRdWMyVjBSbkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h5S1N3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEhOU1pXeGhkR2wyWlNBL0lDaG9kQzVoWkdSV1pXTjBiM0p6S0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxDQlVkQzV0YVc0cExDQjBhR2x6TG1KdmRXNWthVzVuUW05NExtVjRjR0Z1WkVKNVVHOXBiblFvYUhRcExDQm9kQzVoWkdSV1pXTjBiM0p6S0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldGNExDQlVkQzV0WVhncExDQjBhR2x6TG1KdmRXNWthVzVuUW05NExtVjRjR0Z1WkVKNVVHOXBiblFvYUhRcEtTQTZJQ2gwYUdsekxtSnZkVzVrYVc1blFtOTRMbVY0Y0dGdVpFSjVVRzlwYm5Rb1ZIUXViV2x1S1N3Z2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1bGVIQmhibVJDZVZCdmFXNTBLRlIwTG0xaGVDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldGclpVVnRjSFI1S0NrN0NpQWdJQ0FnSUNBZ0tHbHpUbUZPS0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxuZ3BJSHg4SUdselRtRk9LSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TG5rcElIeDhJR2x6VG1GT0tIUm9hWE11WW05MWJtUnBibWRDYjNndWJXbHVMbm9wS1NBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NkVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTNWpiMjF3ZFhSbFFtOTFibVJwYm1kQ2IzZ29LVG9nUTI5dGNIVjBaV1FnYldsdUwyMWhlQ0JvWVhabElFNWhUaUIyWVd4MVpYTXVJRlJvWlNBaWNHOXphWFJwYjI0aUlHRjBkSEpwWW5WMFpTQnBjeUJzYVd0bGJIa2dkRzhnYUdGMlpTQk9ZVTRnZG1Gc2RXVnpMaWNzSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVWdQU0J1WlhjZ1FXNHBPd29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQjBJRDBnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSmlZZ1pTNXBjMGRNUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSjFSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwT2lCSFRFSjFabVpsY2tGMGRISnBZblYwWlNCeVpYRjFhWEpsY3lCaElHMWhiblZoYkNCaWIzVnVaR2x1WnlCemNHaGxjbVV1SUVGc2RHVnlibUYwYVhabGJIa2djMlYwSUNKdFpYTm9MbVp5ZFhOMGRXMURkV3hzWldRaUlIUnZJQ0ptWVd4elpTSXVKeXdnZEdocGN5a3NJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVV1YzJWMEtHNWxkeUJOTENBeElDOGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxMbU5sYm5SbGNqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGUjBMbk5sZEVaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTa3NJSFFwSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCMExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrYVM1elpYUkdjbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR0VwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUQ4Z0tHaDBMbUZrWkZabFkzUnZjbk1vVkhRdWJXbHVMQ0FrYVM1dGFXNHBMQ0JVZEM1bGVIQmhibVJDZVZCdmFXNTBLR2gwS1N3Z2FIUXVZV1JrVm1WamRHOXljeWhVZEM1dFlYZ3NJQ1JwTG0xaGVDa3NJRlIwTG1WNGNHRnVaRUo1VUc5cGJuUW9hSFFwS1NBNklDaFVkQzVsZUhCaGJtUkNlVkJ2YVc1MEtDUnBMbTFwYmlrc0lGUjBMbVY0Y0dGdVpFSjVVRzlwYm5Rb0pHa3ViV0Y0S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ZIUXVaMlYwUTJWdWRHVnlLRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlEQTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2pFZ1BTQXdMQ0J2TVNBOUlHVXVZMjkxYm5RN0lISXhJRHdnYnpFN0lISXhLeXNwYUhRdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxMQ0J5TVNrc0lHa2dQU0JOWVhSb0xtMWhlQ2hwTENCdUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tHaDBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwS1NCbWIzSW9iR1YwSUhJeUlEMGdNQ3dnYnpJZ1BTQjBMbXhsYm1kMGFEc2djaklnUENCdk1qc2djaklyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZVEVnUFNCMFczSXlYU3dnYkNBOUlIUm9hWE11Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdMQ0JvSUQwZ1lURXVZMjkxYm5RN0lHTWdQQ0JvT3lCakt5c3BhSFF1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoaE1Td2dZeWtzSUd3Z0ppWWdLR05wTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dZeWtzSUdoMExtRmtaQ2hqYVNrcExDQnBJRDBnVFdGMGFDNXRZWGdvYVN3Z2JpNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaG9kQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VdWNtRmthWFZ6SUQwZ1RXRjBhQzV6Y1hKMEtHa3BMQ0JwYzA1aFRpaDBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxMbkpoWkdsMWN5a2dKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ25WRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmt1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDazZJRU52YlhCMWRHVmtJSEpoWkdsMWN5QnBjeUJPWVU0dUlGUm9aU0FpY0c5emFYUnBiMjRpSUdGMGRISnBZblYwWlNCcGN5QnNhV3RsYkhrZ2RHOGdhR0YyWlNCT1lVNGdkbUZzZFdWekxpY3NJSFJvYVhNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR052YlhCMWRHVlVZVzVuWlc1MGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdWFXNWtaWGdzSUhRZ1BTQjBhR2x6TG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlHNTFiR3dnZkh3Z2RDNXdiM05wZEdsdmJpQTlQVDBnZG05cFpDQXdJSHg4SUhRdWJtOXliV0ZzSUQwOVBTQjJiMmxrSURBZ2ZId2dkQzUxZGlBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1T2lBdVkyOXRjSFYwWlZSaGJtZGxiblJ6S0NrZ1ptRnBiR1ZrTGlCTmFYTnphVzVuSUhKbGNYVnBjbVZrSUdGMGRISnBZblYwWlhNZ0tHbHVaR1Y0TENCd2IzTnBkR2x2Yml3Z2JtOXliV0ZzSUc5eUlIVjJLU0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWhjbkpoZVN3Z2FTQTlJSFF1Y0c5emFYUnBiMjR1WVhKeVlYa3NJSElnUFNCMExtNXZjbTFoYkM1aGNuSmhlU3dnYnlBOUlIUXVkWFl1WVhKeVlYa3NJR0VnUFNCcExteGxibWQwYUNBdklETTdDaUFnSUNBZ0lDQWdkQzUwWVc1blpXNTBJRDA5UFNCMmIybGtJREFnSmlZZ2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luUmhibWRsYm5RaUxDQnVaWGNnVldVb2JtVjNJRVpzYjJGME16SkJjbkpoZVNnMElDb2dZU2tzSURRcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUXVkR0Z1WjJWdWRDNWhjbkpoZVN3Z1l5QTlJRnRkTENCb0lEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JDSUQwZ01Ec2dRaUE4SUdFN0lFSXJLeWxqVzBKZElEMGdibVYzSUUwc0lHaGJRbDBnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJRzVsZHlCTkxDQmtJRDBnYm1WM0lFMHNJR1lnUFNCdVpYY2dUU3dnYlNBOUlHNWxkeUJZTENCNElEMGdibVYzSUZnc0lIWWdQU0J1WlhjZ1dDd2daeUE5SUc1bGR5Qk5MQ0J3SUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWHloQ0xDQlFMQ0IzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFV1Wm5KdmJVRnljbUY1S0drc0lFSWdLaUF6S1N3Z1pDNW1jbTl0UVhKeVlYa29hU3dnVUNBcUlETXBMQ0JtTG1aeWIyMUJjbkpoZVNocExDQjNJQ29nTXlrc0lHMHVabkp2YlVGeWNtRjVLRzhzSUVJZ0tpQXlLU3dnZUM1bWNtOXRRWEp5WVhrb2J5d2dVQ0FxSURJcExDQjJMbVp5YjIxQmNuSmhlU2h2TENCM0lDb2dNaWtzSUdRdWMzVmlLSFVwTENCbUxuTjFZaWgxS1N3Z2VDNXpkV0lvYlNrc0lIWXVjM1ZpS0cwcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJREVnTHlBb2VDNTRJQ29nZGk1NUlDMGdkaTU0SUNvZ2VDNTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lXbHpSbWx1YVhSbEtFVXBJSHg4SUNobkxtTnZjSGtvWkNrdWJYVnNkR2x3YkhsVFkyRnNZWElvZGk1NUtTNWhaR1JUWTJGc1pXUldaV04wYjNJb1ppd2dMWGd1ZVNrdWJYVnNkR2x3YkhsVFkyRnNZWElvUlNrc0lIQXVZMjl3ZVNobUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loNExuZ3BMbUZrWkZOallXeGxaRlpsWTNSdmNpaGtMQ0F0ZGk1NEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loRktTd2dZMXRDWFM1aFpHUW9aeWtzSUdOYlVGMHVZV1JrS0djcExDQmpXM2RkTG1Ga1pDaG5LU3dnYUZ0Q1hTNWhaR1FvY0Nrc0lHaGJVRjB1WVdSa0tIQXBMQ0JvVzNkZExtRmtaQ2h3S1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ2RHaHBjeTVuY205MWNITTdDaUFnSUNBZ0lDQWdlUzVzWlc1bmRHZ2dQVDA5SURBZ0ppWWdLSGtnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKME9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklHNHViR1Z1WjNSb0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVJeElEMGdNQ3dnVUNBOUlIa3ViR1Z1WjNSb095QkNNU0E4SUZBN0lDc3JRakVwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZHlBOUlIbGJRakZkTENCRklEMGdkeTV6ZEdGeWRDd2dSQ0E5SUhjdVkyOTFiblE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ZTQTlJRVVzSUVZZ1BTQkZJQ3NnUkRzZ1ZTQThJRVk3SUZVZ0t6MGdNeWxmS0c1YlZTQXJJREJkTENCdVcxVWdLeUF4WFN3Z2JsdFZJQ3NnTWwwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWWlBOUlHNWxkeUJOTENCQklEMGdibVYzSUUwc0lFd2dQU0J1WlhjZ1RTd2dTU0E5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR3NvUWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JNTG1aeWIyMUJjbkpoZVNoeUxDQkNJQ29nTXlrc0lFa3VZMjl3ZVNoTUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGQWdQU0JqVzBKZE93b2dJQ0FnSUNBZ0lDQWdJQ0JpTG1OdmNIa29VQ2tzSUdJdWMzVmlLRXd1YlhWc2RHbHdiSGxUWTJGc1lYSW9UQzVrYjNRb1VDa3BLUzV1YjNKdFlXeHBlbVVvS1N3Z1FTNWpjbTl6YzFabFkzUnZjbk1vU1N3Z1VDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnUVM1a2IzUW9hRnRDWFNrZ1BDQXdJRDhnTFRFZ09pQXhPd29nSUNBZ0lDQWdJQ0FnSUNCc1cwSWdLaUEwWFNBOUlHSXVlQ3dnYkZ0Q0lDb2dOQ0FySURGZElEMGdZaTU1TENCc1cwSWdLaUEwSUNzZ01sMGdQU0JpTG5vc0lHeGJRaUFxSURRZ0t5QXpYU0E5SUVVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1FqSWdQU0F3TENCUU1TQTlJSGt1YkdWdVozUm9PeUJDTWlBOElGQXhPeUFySzBJeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIY3hJRDBnZVZ0Q01sMHNJRVV4SUQwZ2R6RXVjM1JoY25Rc0lFUXhJRDBnZHpFdVkyOTFiblE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ZURWdQU0JGTVN3Z1JqRWdQU0JGTVNBcklFUXhPeUJWTVNBOElFWXhPeUJWTVNBclBTQXpLV3NvYmx0Vk1TQXJJREJkS1N3Z2F5aHVXMVV4SUNzZ01WMHBMQ0JyS0c1YlZURWdLeUF5WFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpWWmxjblJsZUU1dmNtMWhiSE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbWx1WkdWNExDQjBJRDBnZEdocGN5NW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrN0NpQWdJQ0FnSUNBZ2FXWWdLSFFnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVoyVjBRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzRnUFQwOUlIWnZhV1FnTUNrZ2JpQTlJRzVsZHlCVlpTaHVaWGNnUm14dllYUXpNa0Z5Y21GNUtIUXVZMjkxYm5RZ0tpQXpLU3dnTXlrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUxDQnVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0JtYjNJb2JHVjBJR1FnUFNBd0xDQm1JRDBnYmk1amIzVnVkRHNnWkNBOElHWTdJR1FyS3lsdUxuTmxkRmhaV2loa0xDQXdMQ0F3TENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ1RTd2djaUE5SUc1bGR5Qk5MQ0J2SUQwZ2JtVjNJRTBzSUdFZ1BTQnVaWGNnVFN3Z2JDQTlJRzVsZHlCTkxDQmpJRDBnYm1WM0lFMHNJR2dnUFNCdVpYY2dUU3dnZFNBOUlHNWxkeUJOT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlNrZ1ptOXlLR3hsZENCa01TQTlJREFzSUdZeElEMGdaUzVqYjNWdWREc2daREVnUENCbU1Uc2daREVnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHVXVaMlYwV0Noa01TQXJJREFwTENCNElEMGdaUzVuWlhSWUtHUXhJQ3NnTVNrc0lIWWdQU0JsTG1kbGRGZ29aREVnS3lBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCdEtTd2djaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lIZ3BMQ0J2TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2dkaWtzSUdndWMzVmlWbVZqZEc5eWN5aHZMQ0J5S1N3Z2RTNXpkV0pXWldOMGIzSnpLR2tzSUhJcExDQm9MbU55YjNOektIVXBMQ0JoTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2Jpd2diU2tzSUd3dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHVMQ0I0S1N3Z1l5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLRzRzSUhZcExDQmhMbUZrWkNob0tTd2diQzVoWkdRb2FDa3NJR011WVdSa0tHZ3BMQ0J1TG5ObGRGaFpXaWh0TENCaExuZ3NJR0V1ZVN3Z1lTNTZLU3dnYmk1elpYUllXVm9vZUN3Z2JDNTRMQ0JzTG5rc0lHd3VlaWtzSUc0dWMyVjBXRmxhS0hZc0lHTXVlQ3dnWXk1NUxDQmpMbm9wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdabTl5S0d4bGRDQmtNaUE5SURBc0lHWXlJRDBnZEM1amIzVnVkRHNnWkRJZ1BDQm1NanNnWkRJZ0t6MGdNeWxwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2daRElnS3lBd0tTd2djaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lHUXlJQ3NnTVNrc0lHOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCa01pQXJJRElwTENCb0xuTjFZbFpsWTNSdmNuTW9ieXdnY2lrc0lIVXVjM1ZpVm1WamRHOXljeWhwTENCeUtTd2dhQzVqY205emN5aDFLU3dnYmk1elpYUllXVm9vWkRJZ0t5QXdMQ0JvTG5nc0lHZ3VlU3dnYUM1NktTd2diaTV6WlhSWVdWb29aRElnS3lBeExDQm9MbmdzSUdndWVTd2dhQzU2S1N3Z2JpNXpaWFJZV1Zvb1pESWdLeUF5TENCb0xuZ3NJR2d1ZVN3Z2FDNTZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV1YjNKdFlXeHBlbVZPYjNKdFlXeHpLQ2tzSUc0dWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnRaWEpuWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRW9aU0FtSmlCbExtbHpRblZtWm1WeVIyVnZiV1YwY25rcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG0xbGNtZGxLQ2s2SUdkbGIyMWxkSEo1SUc1dmRDQmhiaUJwYm5OMFlXNWpaU0J2WmlCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTNGlMQ0JsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBJRDA5UFNCMmIybGtJREFnSmlZZ0tIUWdQU0F3TENCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG0xbGNtZGxLQ2s2SUU5MlpYSjNjbWwwYVc1bklHOXlhV2RwYm1Gc0lHZGxiMjFsZEhKNUxDQnpkR0Z5ZEdsdVp5QmhkQ0J2Wm1aelpYUTlNQzRnVlhObElFSjFabVpsY2tkbGIyMWxkSEo1VlhScGJITXViV1Z5WjJWQ2RXWm1aWEpIWlc5dFpYUnlhV1Z6S0NrZ1ptOXlJR3h2YzNOc1pYTnpJRzFsY21kbExpSXBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dhVzRnYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobExtRjBkSEpwWW5WMFpYTmJhVjBnUFQwOUlIWnZhV1FnTUNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdibHRwWFM1aGNuSmhlU3dnWVNBOUlHVXVZWFIwY21saWRYUmxjMXRwWFN3Z2JDQTlJR0V1WVhKeVlYa3NJR01nUFNCaExtbDBaVzFUYVhwbElDb2dkQ3dnYUNBOUlFMWhkR2d1YldsdUtHd3ViR1Z1WjNSb0xDQnZMbXhsYm1kMGFDQXRJR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdZenNnZFNBOElHZzdJSFVyS3l3Z1pDc3JLVzliWkYwZ1BTQnNXM1ZkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzV2Y20xaGJHbDZaVTV2Y20xaGJITW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTXVibTl5YldGc093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLV2gwTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ2tzSUdoMExtNXZjbTFoYkdsNlpTZ3BMQ0JsTG5ObGRGaFpXaWgwTENCb2RDNTRMQ0JvZEM1NUxDQm9kQzU2S1RzS0lDQWdJSDBLSUNBZ0lIUnZUbTl1U1c1a1pYaGxaQ2dwSUhzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCbEtHRXNJR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQmhMbUZ5Y21GNUxDQm9JRDBnWVM1cGRHVnRVMmw2WlN3Z2RTQTlJR0V1Ym05eWJXRnNhWHBsWkN3Z1pDQTlJRzVsZHlCakxtTnZibk4wY25WamRHOXlLR3d1YkdWdVozUm9JQ29nYUNrc0lHWWdQU0F3TENCdElEMGdNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNElEMGdNQ3dnZGlBOUlHd3ViR1Z1WjNSb095QjRJRHdnZGpzZ2VDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0V1YVhOSmJuUmxjbXhsWVhabFpFSjFabVpsY2tGMGRISnBZblYwWlNBL0lHWWdQU0JzVzNoZElDb2dZUzVrWVhSaExuTjBjbWxrWlNBcklHRXViMlptYzJWMElEb2daaUE5SUd4YmVGMGdLaUJvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuSUQwZ01Ec2daeUE4SUdnN0lHY3JLeWxrVzIwcksxMGdQU0JqVzJZcksxMDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJWWlNoa0xDQm9MQ0IxS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFXNWtaWGdnUFQwOUlHNTFiR3dwSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMblJ2VG05dVNXNWtaWGhsWkNncE9pQkNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGN5QmhiSEpsWVdSNUlHNXZiaTFwYm1SbGVHVmtMaUlwTENCMGFHbHpPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUY5bExDQnVJRDBnZEdocGN5NXBibVJsZUM1aGNuSmhlU3dnYVNBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ2FXNGdhU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2FWdGhYU3dnWXlBOUlHVW9iQ3dnYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1YzJWMFFYUjBjbWxpZFhSbEtHRXNJR01wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXViVzl5Y0doQmRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lURWdhVzRnY2lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc01TQTlJRnRkTENCak1TQTlJSEpiWVRGZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2dnUFNBd0xDQjFJRDBnWXpFdWJHVnVaM1JvT3lCb0lEd2dkVHNnYUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1l6RmJhRjBzSUdZZ1BTQmxLR1FzSUc0cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JERXVjSFZ6YUNobUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBMbTF2Y25Cb1FYUjBjbWxpZFhSbGMxdGhNVjBnUFNCc01Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzV0YjNKd2FGUmhjbWRsZEhOU1pXeGhkR2wyWlNBOUlIUm9hWE11Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbWR5YjNWd2N6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRXlJRDBnTUN3Z2JESWdQU0J2TG14bGJtZDBhRHNnWVRJZ1BDQnNNanNnWVRJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpNaUE5SUc5YllUSmRPd29nSUNBZ0lDQWdJQ0FnSUNCMExtRmtaRWR5YjNWd0tHTXlMbk4wWVhKMExDQmpNaTVqYjNWdWRDd2dZekl1YldGMFpYSnBZV3hKYm1SbGVDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoWkdGMFlUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dOQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJa0oxWm1abGNrZGxiMjFsZEhKNUlpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSdmNqb2dJa0oxWm1abGNrZGxiMjFsZEhKNUxuUnZTbE5QVGlJS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVkWFZwWkNBOUlIUm9hWE11ZFhWcFpDd2daUzUwZVhCbElEMGdkR2hwY3k1MGVYQmxMQ0IwYUdsekxtNWhiV1VnSVQwOUlDSWlJQ1ltSUNobExtNWhiV1VnUFNCMGFHbHpMbTVoYldVcExDQlBZbXBsWTNRdWEyVjVjeWgwYUdsekxuVnpaWEpFWVhSaEtTNXNaVzVuZEdnZ1BpQXdJQ1ltSUNobExuVnpaWEpFWVhSaElEMGdkR2hwY3k1MWMyVnlSR0YwWVNrc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEdocGN5NXdZWEpoYldWMFpYSnpPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ2FXNGdiQ2xzVzJOZElDRTlQU0IyYjJsa0lEQWdKaVlnS0dWYlkxMGdQU0JzVzJOZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdVdVpHRjBZU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY21saWRYUmxjem9nZTMwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVwYm1SbGVEc0tJQ0FnSUNBZ0lDQjBJQ0U5UFNCdWRXeHNJQ1ltSUNobExtUmhkR0V1YVc1a1pYZ2dQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhRdVlYSnlZWGt1WTI5dWMzUnlkV04wYjNJdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYSnlZWGs2SUVGeWNtRjVMbkJ5YjNSdmRIbHdaUzV6YkdsalpTNWpZV3hzS0hRdVlYSnlZWGtwQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzTVNCcGJpQnVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR014SUQwZ2JsdHNNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVaR0YwWVM1aGRIUnlhV0oxZEdWelcyd3hYU0E5SUdNeExuUnZTbE5QVGlobExtUmhkR0VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUh0OUxDQnlJRDBnSVRFN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc01pQnBiaUIwYUdsekxtMXZjbkJvUVhSMGNtbGlkWFJsY3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCak1pQTlJSFJvYVhNdWJXOXljR2hCZEhSeWFXSjFkR1Z6VzJ3eVhTd2dhQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnWXpJdWJHVnVaM1JvT3lCMUlEd2daRHNnZFNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1l6SmJkVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvTG5CMWMyZ29aaTUwYjBwVFQwNG9aUzVrWVhSaEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhQzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHBXMnd5WFNBOUlHZ3NJSElnUFNBaE1DazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSElnSmlZZ0tHVXVaR0YwWVM1dGIzSndhRUYwZEhKcFluVjBaWE1nUFNCcExDQmxMbVJoZEdFdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVWdQU0IwYUdsekxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUc4dWJHVnVaM1JvSUQ0Z01DQW1KaUFvWlM1a1lYUmhMbWR5YjNWd2N5QTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29ieWtwS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0lUMDlJRzUxYkd3Z0ppWWdLR1V1WkdGMFlTNWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJWdWRHVnlPaUJoTG1ObGJuUmxjaTUwYjBGeWNtRjVLQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ1lTNXlZV1JwZFhNS0lDQWdJQ0FnSUNCOUtTd2daVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVaR1Y0SUQwZ2JuVnNiQ3dnZEdocGN5NWhkSFJ5YVdKMWRHVnpJRDBnZTMwc0lIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpJRDBnZTMwc0lIUm9hWE11WjNKdmRYQnpJRDBnVzEwc0lIUm9hWE11WW05MWJtUnBibWRDYjNnZ1BTQnVkV3hzTENCMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUh0OU93b2dJQ0FnSUNBZ0lIUm9hWE11Ym1GdFpTQTlJR1V1Ym1GdFpUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVhVzVrWlhnN0NpQWdJQ0FnSUNBZ2JpQWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxuTmxkRWx1WkdWNEtHNHVZMnh2Ym1Vb2RDa3BPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVoZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlCcGJpQnBLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCcFcyTmRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNoakxDQm9MbU5zYjI1bEtIUXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsTG0xdmNuQm9RWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR014SUdsdUlISXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhREVnUFNCYlhTd2dkU0E5SUhKYll6RmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdRZ1BTQXdMQ0JtSUQwZ2RTNXNaVzVuZEdnN0lHUWdQQ0JtT3lCa0t5c3BhREV1Y0hWemFDaDFXMlJkTG1Oc2IyNWxLSFFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE5iWXpGZElEMGdhREU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVnUFNCbExtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdaUzVuY205MWNITTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmpNaUE5SURBc0lHZ3lJRDBnYnk1c1pXNW5kR2c3SUdNeUlEd2dhREk3SUdNeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkVEVnUFNCdlcyTXlYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVoWkdSSGNtOTFjQ2gxTVM1emRHRnlkQ3dnZFRFdVkyOTFiblFzSUhVeExtMWhkR1Z5YVdGc1NXNWtaWGdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUdVdVltOTFibVJwYm1kQ2IzZzdDaUFnSUNBZ0lDQWdZU0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUNBOUlHRXVZMnh2Ym1Vb0tTazdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQmxMbUp2ZFc1a2FXNW5VM0JvWlhKbE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCc0lDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsSUQwZ2JDNWpiRzl1WlNncEtTd2dkR2hwY3k1a2NtRjNVbUZ1WjJVdWMzUmhjblFnUFNCbExtUnlZWGRTWVc1blpTNXpkR0Z5ZEN3Z2RHaHBjeTVrY21GM1VtRnVaMlV1WTI5MWJuUWdQU0JsTG1SeVlYZFNZVzVuWlM1amIzVnVkQ3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJR1V1ZFhObGNrUmhkR0VzSUdVdWNHRnlZVzFsZEdWeWN5QWhQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExuQmhjbUZ0WlhSbGNuTXBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltUnBjM0J2YzJVaUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNuMDdDbDlsTG5CeWIzUnZkSGx3WlM1cGMwSjFabVpsY2tkbGIyMWxkSEo1SUQwZ0lUQTdDblpoY2lCRGJDQTlJRzVsZHlCd1pTd2dhR2tnUFNCdVpYY2dRMjRzSUVKdklEMGdibVYzSUVGdUxDQnRiaUE5SUc1bGR5Qk5MQ0JuYmlBOUlHNWxkeUJOTENCNGJpQTlJRzVsZHlCTkxDQjZieUE5SUc1bGR5Qk5MQ0JWYnlBOUlHNWxkeUJOTENCUGJ5QTlJRzVsZHlCTkxDQkxjaUE5SUc1bGR5Qk5MQ0JsY3lBOUlHNWxkeUJOTENCMGN5QTlJRzVsZHlCTkxDQnVjeUE5SUc1bGR5QllMQ0JwY3lBOUlHNWxkeUJZTENCeWN5QTlJRzVsZHlCWUxDQklieUE5SUc1bGR5Qk5MQ0J6Y3lBOUlHNWxkeUJOTENCemRDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QmZaU3dnZENBOUlHNWxkeUJvYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUNJc0lIUm9hWE11WjJWdmJXVjBjbmtnUFNCbExDQjBhR2x6TG0xaGRHVnlhV0ZzSUQwZ2RDd2dkR2hwY3k1MWNHUmhkR1ZOYjNKd2FGUmhjbWRsZEhNb0tUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCbExtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN5QTlJR1V1Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWekxuTnNhV05sS0NrcExDQmxMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllU0E5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVLU2tzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0JsTG0xaGRHVnlhV0ZzTENCMGFHbHpMbWRsYjIxbGRISjVJRDBnWlM1blpXOXRaWFJ5ZVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTF2Y25Cb1ZHRnlaMlYwY3lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WjJWdmJXVjBjbms3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVhWE5DZFdabVpYSkhaVzl0WlhSeWVTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdWJXOXljR2hCZEhSeWFXSjFkR1Z6TENCdUlEMGdUMkpxWldOMExtdGxlWE1vZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUxteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkRnR1V3pCZFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeUE5SUZ0ZExDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMFJHbGpkR2x2Ym1GeWVTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdhVnR5WFM1dVlXMWxJSHg4SUZOMGNtbHVaeWh5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE11Y0hWemFDZ3dLU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkRVJwWTNScGIyNWhjbmxiWVYwZ1BTQnlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBNU0E5SUdVdWJXOXljR2hVWVhKblpYUnpPd29nSUNBZ0lDQWdJQ0FnSUNCME1TQWhQVDBnZG05cFpDQXdJQ1ltSUhReExteGxibWQwYUNBK0lEQWdKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXVnphQzUxY0dSaGRHVk5iM0p3YUZSaGNtZGxkSE1vS1NCdWJ5QnNiMjVuWlhJZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmhlV05oYzNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dhU0E5SUhSb2FYTXViV0YwWlhKcFlXd3NJSElnUFNCMGFHbHpMbTFoZEhKcGVGZHZjbXhrT3dvZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNCMmIybGtJREFnZkh3Z0tHNHVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdiaTVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2dRbTh1WTI5d2VTaHVMbUp2ZFc1a2FXNW5VM0JvWlhKbEtTd2dRbTh1WVhCd2JIbE5ZWFJ5YVhnMEtISXBMQ0JsTG5KaGVTNXBiblJsY25ObFkzUnpVM0JvWlhKbEtFSnZLU0E5UFQwZ0lURXBJSHg4SUNoRGJDNWpiM0I1S0hJcExtbHVkbVZ5ZENncExDQm9hUzVqYjNCNUtHVXVjbUY1S1M1aGNIQnNlVTFoZEhKcGVEUW9RMndwTENCdUxtSnZkVzVrYVc1blFtOTRJQ0U5UFNCdWRXeHNJQ1ltSUdocExtbHVkR1Z5YzJWamRITkNiM2dvYmk1aWIzVnVaR2x1WjBKdmVDa2dQVDA5SUNFeEtTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0J2T3dvZ0lDQWdJQ0FnSUdsbUlDaHVMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdUxtbHVaR1Y0TENCc0lEMGdiaTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCaklEMGdiaTV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJR2dnUFNCdUxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxMQ0IxSUQwZ2JpNWhkSFJ5YVdKMWRHVnpMblYyTENCa0lEMGdiaTVoZEhSeWFXSjFkR1Z6TG5WMk1pd2daaUE5SUc0dVozSnZkWEJ6TENCdElEMGdiaTVrY21GM1VtRnVaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoSUNFOVBTQnVkV3hzS1NCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNocEtTa2dabTl5S0d4bGRDQjRJRDBnTUN3Z2RpQTlJR1l1YkdWdVozUm9PeUI0SUR3Z2Rqc2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnWmx0NFhTd2djQ0E5SUdsYlp5NXRZWFJsY21saGJFbHVaR1Y0WFN3Z1h5QTlJRTFoZEdndWJXRjRLR2N1YzNSaGNuUXNJRzB1YzNSaGNuUXBMQ0I1SUQwZ1RXRjBhQzV0YVc0b1lTNWpiM1Z1ZEN3Z1RXRjBhQzV0YVc0b1p5NXpkR0Z5ZENBcklHY3VZMjkxYm5Rc0lHMHVjM1JoY25RZ0t5QnRMbU52ZFc1MEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHSWdQU0JmTENCQklEMGdlVHNnWWlBOElFRTdJR0lnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFd2dQU0JoTG1kbGRGZ29ZaWtzSUVrZ1BTQmhMbWRsZEZnb1lpQXJJREVwTENCcklEMGdZUzVuWlhSWUtHSWdLeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYjNNb2RHaHBjeXdnY0N3Z1pTd2dhR2tzSUd3c0lHTXNJR2dzSUhVc0lHUXNJRXdzSUVrc0lHc3BMQ0J2SUNZbUlDaHZMbVpoWTJWSmJtUmxlQ0E5SUUxaGRHZ3VabXh2YjNJb1lpQXZJRE1wTENCdkxtWmhZMlV1YldGMFpYSnBZV3hKYm1SbGVDQTlJR2N1YldGMFpYSnBZV3hKYm1SbGVDd2dkQzV3ZFhOb0tHOHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0TVNBOUlFMWhkR2d1YldGNEtEQXNJRzB1YzNSaGNuUXBMQ0IyTVNBOUlFMWhkR2d1YldsdUtHRXVZMjkxYm5Rc0lHMHVjM1JoY25RZ0t5QnRMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p6RWdQU0I0TVN3Z2NERWdQU0IyTVRzZ1p6RWdQQ0J3TVRzZ1p6RWdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4eElEMGdZUzVuWlhSWUtHY3hLU3dnZVRFZ1BTQmhMbWRsZEZnb1p6RWdLeUF4S1N3Z1lqRWdQU0JoTG1kbGRGZ29aekVnS3lBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2IzTW9kR2hwY3l3Z2FTd2daU3dnYUdrc0lHd3NJR01zSUdnc0lIVXNJR1FzSUY4eExDQjVNU3dnWWpFcExDQnZJQ1ltSUNodkxtWmhZMlZKYm1SbGVDQTlJRTFoZEdndVpteHZiM0lvWnpFZ0x5QXpLU3dnZEM1d2RYTm9LRzhwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoc0lDRTlQU0IyYjJsa0lEQXBJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLR2twS1NCbWIzSW9iR1YwSUhneUlEMGdNQ3dnZGpJZ1BTQm1MbXhsYm1kMGFEc2dlRElnUENCMk1qc2dlRElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeklnUFNCbVczZ3lYU3dnY0RJZ1BTQnBXMmN5TG0xaGRHVnlhV0ZzU1c1a1pYaGRMQ0JmTWlBOUlFMWhkR2d1YldGNEtHY3lMbk4wWVhKMExDQnRMbk4wWVhKMEtTd2dlVElnUFNCTllYUm9MbTFwYmloc0xtTnZkVzUwTENCTllYUm9MbTFwYmlobk1pNXpkR0Z5ZENBcklHY3lMbU52ZFc1MExDQnRMbk4wWVhKMElDc2diUzVqYjNWdWRDa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmlNaUE5SUY4eUxDQkJNU0E5SUhreU95QmlNaUE4SUVFeE95QmlNaUFyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1RERWdQU0JpTWl3Z1NURWdQU0JpTWlBcklERXNJR3N4SUQwZ1lqSWdLeUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J2Y3loMGFHbHpMQ0J3TWl3Z1pTd2dhR2tzSUd3c0lHTXNJR2dzSUhVc0lHUXNJRXd4TENCSk1Td2dhekVwTENCdklDWW1JQ2h2TG1aaFkyVkpibVJsZUNBOUlFMWhkR2d1Wm14dmIzSW9ZaklnTHlBektTd2dieTVtWVdObExtMWhkR1Z5YVdGc1NXNWtaWGdnUFNCbk1pNXRZWFJsY21saGJFbHVaR1Y0TENCMExuQjFjMmdvYnlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ3pJRDBnVFdGMGFDNXRZWGdvTUN3Z2JTNXpkR0Z5ZENrc0lIWXpJRDBnVFdGMGFDNXRhVzRvYkM1amIzVnVkQ3dnYlM1emRHRnlkQ0FySUcwdVkyOTFiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuTXlBOUlIZ3pMQ0J3TXlBOUlIWXpPeUJuTXlBOElIQXpPeUJuTXlBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYek1nUFNCbk15d2dlVE1nUFNCbk15QXJJREVzSUdJeklEMGdaek1nS3lBeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdmN5aDBhR2x6TENCcExDQmxMQ0JvYVN3Z2JDd2dZeXdnYUN3Z2RTd2daQ3dnWHpNc0lIa3pMQ0JpTXlrc0lHOGdKaVlnS0c4dVptRmpaVWx1WkdWNElEMGdUV0YwYUM1bWJHOXZjaWhuTXlBdklETXBMQ0IwTG5CMWMyZ29ieWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElHNHVhWE5IWlc5dFpYUnllU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5aWE5vTG5KaGVXTmhjM1FvS1NCdWJ5QnNiMjVuWlhJZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmUXA5T3dwemRDNXdjbTkwYjNSNWNHVXVhWE5OWlhOb0lEMGdJVEE3Q21aMWJtTjBhVzl1SUdobUtITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VwSUhzS0lDQWdJR3hsZENCc093b2dJQ0FnYVdZZ0tHVXVjMmxrWlNBOVBUMGdhWFFnUHlCc0lEMGdiaTVwYm5SbGNuTmxZM1JVY21saGJtZHNaU2h2TENCeUxDQnBMQ0FoTUN3Z1lTa2dPaUJzSUQwZ2JpNXBiblJsY25ObFkzUlVjbWxoYm1kc1pTaHBMQ0J5TENCdkxDQmxMbk5wWkdVZ0lUMDlJRU5wTENCaEtTd2diQ0E5UFQwZ2JuVnNiQ2tnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0J6Y3k1amIzQjVLR0VwTENCemN5NWhjSEJzZVUxaGRISnBlRFFvY3k1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNCc1pYUWdZeUE5SUhRdWNtRjVMbTl5YVdkcGJpNWthWE4wWVc1alpWUnZLSE56S1RzS0lDQWdJSEpsZEhWeWJpQmpJRHdnZEM1dVpXRnlJSHg4SUdNZ1BpQjBMbVpoY2lBL0lHNTFiR3dnT2lCN0NpQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklHTXNDaUFnSUNBZ0lDQWdjRzlwYm5RNklITnpMbU5zYjI1bEtDa3NDaUFnSUNBZ0lDQWdiMkpxWldOME9pQnpDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRzl6S0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNc0lHZ3NJSFVwSUhzS0lDQWdJRzF1TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTd2dZeWtzSUdkdUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hU3dnYUNrc0lIaHVMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVN3Z2RTazdDaUFnSUNCc1pYUWdaQ0E5SUhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpPd29nSUNBZ2FXWWdLSElnSmlZZ1pDa2dld29nSUNBZ0lDQWdJRXR5TG5ObGRDZ3dMQ0F3TENBd0tTd2daWE11YzJWMEtEQXNJREFzSURBcExDQjBjeTV6WlhRb01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdNQ3dnZUNBOUlISXViR1Z1WjNSb095QnRJRHdnZURzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCa1cyMWRMQ0JuSUQwZ2NsdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RpQWhQVDBnTUNBbUppQW9lbTh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobkxDQmpLU3dnVlc4dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaG5MQ0JvS1N3Z1QyOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2huTENCMUtTd2dieUEvSUNoTGNpNWhaR1JUWTJGc1pXUldaV04wYjNJb2VtOHNJSFlwTENCbGN5NWhaR1JUWTJGc1pXUldaV04wYjNJb1ZXOHNJSFlwTENCMGN5NWhaR1JUWTJGc1pXUldaV04wYjNJb1QyOHNJSFlwS1NBNklDaExjaTVoWkdSVFkyRnNaV1JXWldOMGIzSW9lbTh1YzNWaUtHMXVLU3dnZGlrc0lHVnpMbUZrWkZOallXeGxaRlpsWTNSdmNpaFZieTV6ZFdJb1oyNHBMQ0IyS1N3Z2RITXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtFOXZMbk4xWWloNGJpa3NJSFlwS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHMXVMbUZrWkNoTGNpa3NJR2R1TG1Ga1pDaGxjeWtzSUhodUxtRmtaQ2gwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnpMbWx6VTJ0cGJtNWxaRTFsYzJnZ0ppWWdLSE11WW05dVpWUnlZVzV6Wm05eWJTaGpMQ0J0Ymlrc0lITXVZbTl1WlZSeVlXNXpabTl5YlNob0xDQm5iaWtzSUhNdVltOXVaVlJ5WVc1elptOXliU2gxTENCNGJpa3BPd29nSUNBZ2JHVjBJR1lnUFNCb1ppaHpMQ0JsTENCMExDQnVMQ0J0Yml3Z1oyNHNJSGh1TENCSWJ5azdDaUFnSUNCcFppQW9aaWtnZXdvZ0lDQWdJQ0FnSUdFZ0ppWWdLRzV6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dZeWtzSUdsekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnYUNrc0lISnpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z2RTa3NJR1l1ZFhZZ1BTQnVkQzVuWlhSVlZpaElieXdnYlc0c0lHZHVMQ0I0Yml3Z2JuTXNJR2x6TENCeWN5d2dibVYzSUZncEtTd2diQ0FtSmlBb2JuTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hzTENCaktTd2dhWE11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoc0xDQm9LU3dnY25NdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHNMQ0IxS1N3Z1ppNTFkaklnUFNCdWRDNW5aWFJWVmloSWJ5d2diVzRzSUdkdUxDQjRiaXdnYm5Nc0lHbHpMQ0J5Y3l3Z2JtVjNJRmdwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiVEVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR0U2SUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR0k2SUdnc0NpQWdJQ0FnSUNBZ0lDQWdJR002SUhVc0NpQWdJQ0FnSUNBZ0lDQWdJRzV2Y20xaGJEb2dibVYzSUUwc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNTVzVrWlhnNklEQUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJRzUwTG1kbGRFNXZjbTFoYkNodGJpd2daMjRzSUhodUxDQnRNUzV1YjNKdFlXd3BMQ0JtTG1aaFkyVWdQU0J0TVRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbU93cDlDblpoY2lCM2JpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F4TENCdUlEMGdNU3dnYVNBOUlERXNJSElnUFNBeExDQnZJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRbTk0UjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb09pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRk5sWjIxbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhSVFpXZHRaVzUwY3pvZ2Npd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFRaV2R0Wlc1MGN6b2did29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lHa2dQU0JOWVhSb0xtWnNiMjl5S0drcExDQnlJRDBnVFdGMGFDNW1iRzl2Y2loeUtTd2dieUE5SUUxaGRHZ3VabXh2YjNJb2J5azdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQmJYU3dnWXlBOUlGdGRMQ0JvSUQwZ1cxMHNJSFVnUFNCYlhTd2daQ0E5SURBc0lHWWdQU0F3T3dvZ0lDQWdJQ0FnSUcwb0lub2lMQ0FpZVNJc0lDSjRJaXdnTFRFc0lDMHhMQ0J1TENCMExDQmxMQ0J2TENCeUxDQXdLU3dnYlNnaWVpSXNJQ0o1SWl3Z0luZ2lMQ0F4TENBdE1Td2diaXdnZEN3Z0xXVXNJRzhzSUhJc0lERXBMQ0J0S0NKNElpd2dJbm9pTENBaWVTSXNJREVzSURFc0lHVXNJRzRzSUhRc0lHa3NJRzhzSURJcExDQnRLQ0o0SWl3Z0lub2lMQ0FpZVNJc0lERXNJQzB4TENCbExDQnVMQ0F0ZEN3Z2FTd2dieXdnTXlrc0lHMG9JbmdpTENBaWVTSXNJQ0o2SWl3Z01Td2dMVEVzSUdVc0lIUXNJRzRzSUdrc0lISXNJRFFwTENCdEtDSjRJaXdnSW5raUxDQWllaUlzSUMweExDQXRNU3dnWlN3Z2RDd2dMVzRzSUdrc0lISXNJRFVwTENCMGFHbHpMbk5sZEVsdVpHVjRLR3dwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb1l5d2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0dnc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtIVXNJRElwS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdEtIZ3NJSFlzSUdjc0lIQXNJRjhzSUhrc0lHSXNJRUVzSUV3c0lFa3NJR3NwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVJZ1BTQjVJQzhnVEN3Z1VDQTlJR0lnTHlCSkxDQjNJRDBnZVNBdklESXNJRVVnUFNCaUlDOGdNaXdnUkNBOUlFRWdMeUF5TENCVklEMGdUQ0FySURFc0lFWWdQU0JKSUNzZ01Td2dUeUE5SURBc0lHNWxJRDBnTUN3Z1kyVWdQU0J1WlhjZ1RUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JXSUQwZ01Ec2dWaUE4SUVZN0lGWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1Z5QTlJRllnS2lCUUlDMGdSVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhR1VnUFNBd095Qm9aU0E4SUZVN0lHaGxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlNBOUlHaGxJQ29nUWlBdElIYzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJWYmVGMGdQU0JzWlNBcUlIQXNJR05sVzNaZElEMGdWeUFxSUY4c0lHTmxXMmRkSUQwZ1JDd2dZeTV3ZFhOb0tHTmxMbmdzSUdObExua3NJR05sTG5vcExDQmpaVnQ0WFNBOUlEQXNJR05sVzNaZElEMGdNQ3dnWTJWYloxMGdQU0JCSUQ0Z01DQS9JREVnT2lBdE1Td2dhQzV3ZFhOb0tHTmxMbmdzSUdObExua3NJR05sTG5vcExDQjFMbkIxYzJnb2FHVWdMeUJNS1N3Z2RTNXdkWE5vS0RFZ0xTQldJQzhnU1Nrc0lFOGdLejBnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZZeElEMGdNRHNnVmpFZ1BDQkpPeUJXTVNzcktXWnZjaWhzWlhRZ1Z6RWdQU0F3T3lCWE1TQThJRXc3SUZjeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobE1TQTlJR1FnS3lCWE1TQXJJRlVnS2lCV01Td2diR1V4SUQwZ1pDQXJJRmN4SUNzZ1ZTQXFJQ2hXTVNBcklERXBMQ0JtWlNBOUlHUWdLeUFvVnpFZ0t5QXhLU0FySUZVZ0tpQW9WakVnS3lBeEtTd2dRbVVnUFNCa0lDc2dLRmN4SUNzZ01Ta2dLeUJWSUNvZ1ZqRTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNMbkIxYzJnb2FHVXhMQ0JzWlRFc0lFSmxLU3dnYkM1d2RYTm9LR3hsTVN3Z1ptVXNJRUpsS1N3Z2JtVWdLejBnTmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCaExtRmtaRWR5YjNWd0tHWXNJRzVsTENCcktTd2daaUFyUFNCdVpTd2daQ0FyUFNCUE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCM2JpaGxMbmRwWkhSb0xDQmxMbWhsYVdkb2RDd2daUzVrWlhCMGFDd2daUzUzYVdSMGFGTmxaMjFsYm5SekxDQmxMbWhsYVdkb2RGTmxaMjFsYm5SekxDQmxMbVJsY0hSb1UyVm5iV1Z1ZEhNcE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQlNhU2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJSHQ5T3dvZ0lDQWdabTl5S0d4bGRDQjBJR2x1SUhNcGV3b2dJQ0FnSUNBZ0lHVmJkRjBnUFNCN2ZUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdhVzRnYzF0MFhTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYzF0MFhWdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTQW1KaUFvYVM1cGMwTnZiRzl5SUh4OElHa3VhWE5OWVhSeWFYZ3pJSHg4SUdrdWFYTk5ZWFJ5YVhnMElIeDhJR2t1YVhOV1pXTjBiM0l5SUh4OElHa3VhWE5XWldOMGIzSXpJSHg4SUdrdWFYTldaV04wYjNJMElIeDhJR2t1YVhOVVpYaDBkWEpsSUh4OElHa3VhWE5SZFdGMFpYSnVhVzl1S1NBL0lHVmJkRjFiYmwwZ1BTQnBMbU5zYjI1bEtDa2dPaUJCY25KaGVTNXBjMEZ5Y21GNUtHa3BJRDhnWlZ0MFhWdHVYU0E5SUdrdWMyeHBZMlVvS1NBNklHVmJkRjFiYmwwZ1BTQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsT3dwOUNtWjFibU4wYVc5dUlIbDBLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdlMzA3Q2lBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2djeTVzWlc1bmRHZzdJSFFyS3lsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCU2FTaHpXM1JkS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ2FXNGdiaWxsVzJsZElEMGdibHRwWFRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbE93cDlDblpoY2lCMVppQTlJSHNLSUNBZ0lHTnNiMjVsT2lCU2FTd0tJQ0FnSUcxbGNtZGxPaUI1ZEFwOUxDQmtaaUE5SUdCMmIybGtJRzFoYVc0b0tTQjdDZ2xuYkY5UWIzTnBkR2x2YmlBOUlIQnliMnBsWTNScGIyNU5ZWFJ5YVhnZ0tpQnRiMlJsYkZacFpYZE5ZWFJ5YVhnZ0tpQjJaV00wS0NCd2IzTnBkR2x2Yml3Z01TNHdJQ2s3Q24xZ0xDQm1aaUE5SUdCMmIybGtJRzFoYVc0b0tTQjdDZ2xuYkY5R2NtRm5RMjlzYjNJZ1BTQjJaV00wS0NBeExqQXNJREF1TUN3Z01DNHdMQ0F4TGpBZ0tUc0tmV0FzSUhOdUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGFHRmtaWEpOWVhSbGNtbGhiQ0lzSUhSb2FYTXVaR1ZtYVc1bGN5QTlJSHQ5TENCMGFHbHpMblZ1YVdadmNtMXpJRDBnZTMwc0lIUm9hWE11ZG1WeWRHVjRVMmhoWkdWeUlEMGdaR1lzSUhSb2FYTXVabkpoWjIxbGJuUlRhR0ZrWlhJZ1BTQm1aaXdnZEdocGN5NXNhVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdVptOW5JRDBnSVRFc0lIUm9hWE11YkdsbmFIUnpJRDBnSVRFc0lIUm9hWE11WTJ4cGNIQnBibWNnUFNBaE1Td2dkR2hwY3k1bGVIUmxibk5wYjI1eklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCa1pYSnBkbUYwYVhabGN6b2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2RFWlhCMGFEb2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUnlZWGRDZFdabVpYSnpPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkdWeVZHVjRkSFZ5WlV4UFJEb2dJVEVLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbVJsWm1GMWJIUkJkSFJ5YVdKMWRHVldZV3gxWlhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYWTZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHNDaUFnSUNBZ0lDQWdJQ0FnSUhWMk1qb2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0FnSUNBZ1hRb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWFXNWtaWGd3UVhSMGNtbGlkWFJsVG1GdFpTQTlJSFp2YVdRZ01Dd2dkR2hwY3k1MWJtbG1iM0p0YzA1bFpXUlZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NW5iSE5zVm1WeWMybHZiaUE5SUc1MWJHd3NJR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9aUzVoZEhSeWFXSjFkR1Z6SUNFOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VTJoaFpHVnlUV0YwWlhKcFlXdzZJR0YwZEhKcFluVjBaWE1nYzJodmRXeGtJRzV2ZHlCaVpTQmtaV1pwYm1Wa0lHbHVJRlJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1SUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVp5WVdkdFpXNTBVMmhoWkdWeUlEMGdaUzVtY21GbmJXVnVkRk5vWVdSbGNpd2dkR2hwY3k1MlpYSjBaWGhUYUdGa1pYSWdQU0JsTG5abGNuUmxlRk5vWVdSbGNpd2dkR2hwY3k1MWJtbG1iM0p0Y3lBOUlGSnBLR1V1ZFc1cFptOXliWE1wTENCMGFHbHpMbVJsWm1sdVpYTWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG1SbFptbHVaWE1wTENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUdVdWQybHlaV1p5WVcxbExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlHVXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9MQ0IwYUdsekxteHBaMmgwY3lBOUlHVXViR2xuYUhSekxDQjBhR2x6TG1Oc2FYQndhVzVuSUQwZ1pTNWpiR2x3Y0dsdVp5d2dkR2hwY3k1bGVIUmxibk5wYjI1eklEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzVsZUhSbGJuTnBiMjV6S1N3Z2RHaHBjeTVuYkhOc1ZtVnljMmx2YmlBOUlHVXVaMnh6YkZabGNuTnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSFF1WjJ4emJGWmxjbk5wYjI0Z1BTQjBhR2x6TG1kc2MyeFdaWEp6YVc5dUxDQjBMblZ1YVdadmNtMXpJRDBnZTMwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElHbHVJSFJvYVhNdWRXNXBabTl5YlhNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdWRXNXBabTl5YlhOYmFWMHVkbUZzZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnSmlZZ2J5NXBjMVJsZUhSMWNtVWdQeUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0luUWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHOHVkRzlLVTA5T0tHVXBMblYxYVdRS0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUc4Z0ppWWdieTVwYzBOdmJHOXlJRDhnZEM1MWJtbG1iM0p0YzF0cFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSmpJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnZMbWRsZEVobGVDZ3BDaUFnSUNBZ0lDQWdJQ0FnSUgwZ09pQnZJQ1ltSUc4dWFYTldaV04wYjNJeUlEOGdkQzUxYm1sbWIzSnRjMXRwWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKMk1pSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2J5NTBiMEZ5Y21GNUtDa0tJQ0FnSUNBZ0lDQWdJQ0FnZlNBNklHOGdKaVlnYnk1cGMxWmxZM1J2Y2pNZ1B5QjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW5Zeklpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdkxuUnZRWEp5WVhrb0tRb2dJQ0FnSUNBZ0lDQWdJQ0I5SURvZ2J5QW1KaUJ2TG1selZtVmpkRzl5TkNBL0lIUXVkVzVwWm05eWJYTmJhVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpZGpRaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc4dWRHOUJjbkpoZVNncENpQWdJQ0FnSUNBZ0lDQWdJSDBnT2lCdklDWW1JRzh1YVhOTllYUnlhWGd6SUQ4Z2RDNTFibWxtYjNKdGMxdHBYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0p0TXlJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYnk1MGIwRnljbUY1S0NrS0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUc4Z0ppWWdieTVwYzAxaGRISnBlRFFnUHlCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbTAwSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ2TG5SdlFYSnlZWGtvS1FvZ0lDQWdJQ0FnSUNBZ0lDQjlJRG9nZEM1MWJtbG1iM0p0YzF0cFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnZDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lFOWlhbVZqZEM1clpYbHpLSFJvYVhNdVpHVm1hVzVsY3lrdWJHVnVaM1JvSUQ0Z01DQW1KaUFvZEM1a1pXWnBibVZ6SUQwZ2RHaHBjeTVrWldacGJtVnpLU3dnZEM1MlpYSjBaWGhUYUdGa1pYSWdQU0IwYUdsekxuWmxjblJsZUZOb1lXUmxjaXdnZEM1bWNtRm5iV1Z1ZEZOb1lXUmxjaUE5SUhSb2FYTXVabkpoWjIxbGJuUlRhR0ZrWlhJN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCN2ZUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa3hJR2x1SUhSb2FYTXVaWGgwWlc1emFXOXVjeWwwYUdsekxtVjRkR1Z1YzJsdmJuTmJhVEZkSUQwOVBTQWhNQ0FtSmlBb2JsdHBNVjBnUFNBaE1DazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFOWlhbVZqZEM1clpYbHpLRzRwTG14bGJtZDBhQ0ErSURBZ0ppWWdLSFF1WlhoMFpXNXphVzl1Y3lBOUlHNHBMQ0IwT3dvZ0lDQWdmUXA5T3dwemJpNXdjbTkwYjNSNWNHVXVhWE5UYUdGa1pYSk5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdTWElnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRMkZ0WlhKaElpd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVZ1BTQnVaWGNnY0dVc0lIUm9hWE11Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ0E5SUc1bGR5QndaU3dnZEdocGN5NXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlNBOUlHNWxkeUJ3WlRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VzSUhRcExDQjBhR2x6TG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlM1amIzQjVLR1V1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1N3Z2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbU52Y0hrb1pTNXdjbTlxWldOMGFXOXVUV0YwY21sNEtTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtHVXVjSEp2YW1WamRHbHZiazFoZEhKcGVFbHVkbVZ5YzJVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBWMjl5YkdSRWFYSmxZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXViV0YwY21sNFYyOXliR1F1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YzJWMEtDMTBXemhkTENBdGRGczVYU3dnTFhSYk1UQmRLUzV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXVZMjl3ZVNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlZkdmNteGtUV0YwY21sNEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2hsTENCMEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVdVkyOXdlU2gwYUdsekxtMWhkSEpwZUZkdmNteGtLUzVwYm5abGNuUW9LVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNuMDdDa2x5TG5CeWIzUnZkSGx3WlM1cGMwTmhiV1Z5WVNBOUlDRXdPd3AyWVhJZ2RYUWdQU0JqYkdGemN5QmxlSFJsYm1SeklFbHlJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBMU1Dd2dkQ0E5SURFc0lHNGdQU0F1TVN3Z2FTQTlJREpsTXlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVR1Z5YzNCbFkzUnBkbVZEWVcxbGNtRWlMQ0IwYUdsekxtWnZkaUE5SUdVc0lIUm9hWE11ZW05dmJTQTlJREVzSUhSb2FYTXVibVZoY2lBOUlHNHNJSFJvYVhNdVptRnlJRDBnYVN3Z2RHaHBjeTVtYjJOMWN5QTlJREV3TENCMGFHbHpMbUZ6Y0dWamRDQTlJSFFzSUhSb2FYTXVkbWxsZHlBOUlHNTFiR3dzSUhSb2FYTXVabWxzYlVkaGRXZGxJRDBnTXpVc0lIUm9hWE11Wm1sc2JVOW1abk5sZENBOUlEQXNJSFJvYVhNdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU3dnZENrc0lIUm9hWE11Wm05MklEMGdaUzVtYjNZc0lIUm9hWE11ZW05dmJTQTlJR1V1ZW05dmJTd2dkR2hwY3k1dVpXRnlJRDBnWlM1dVpXRnlMQ0IwYUdsekxtWmhjaUE5SUdVdVptRnlMQ0IwYUdsekxtWnZZM1Z6SUQwZ1pTNW1iMk4xY3l3Z2RHaHBjeTVoYzNCbFkzUWdQU0JsTG1GemNHVmpkQ3dnZEdocGN5NTJhV1YzSUQwZ1pTNTJhV1YzSUQwOVBTQnVkV3hzSUQ4Z2JuVnNiQ0E2SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUdVdWRtbGxkeWtzSUhSb2FYTXVabWxzYlVkaGRXZGxJRDBnWlM1bWFXeHRSMkYxWjJVc0lIUm9hWE11Wm1sc2JVOW1abk5sZENBOUlHVXVabWxzYlU5bVpuTmxkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVadlkyRnNUR1Z1WjNSb0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJQzQxSUNvZ2RHaHBjeTVuWlhSR2FXeHRTR1ZwWjJoMEtDa2dMeUJsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVabTkySUQwZ1pISWdLaUF5SUNvZ1RXRjBhQzVoZEdGdUtIUXBMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRVp2WTJGc1RHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ1RXRjBhQzUwWVc0b1YyNGdLaUF1TlNBcUlIUm9hWE11Wm05MktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0xqVWdLaUIwYUdsekxtZGxkRVpwYkcxSVpXbG5hSFFvS1NBdklHVTdDaUFnSUNCOUNpQWdJQ0JuWlhSRlptWmxZM1JwZG1WR1QxWW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1J5SUNvZ01pQXFJRTFoZEdndVlYUmhiaWhOWVhSb0xuUmhiaWhYYmlBcUlDNDFJQ29nZEdocGN5NW1iM1lwSUM4Z2RHaHBjeTU2YjI5dEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEVacGJHMVhhV1IwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVtYVd4dFIyRjFaMlVnS2lCTllYUm9MbTFwYmloMGFHbHpMbUZ6Y0dWamRDd2dNU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3h0U0dWcFoyaDBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnBiRzFIWVhWblpTQXZJRTFoZEdndWJXRjRLSFJvYVhNdVlYTndaV04wTENBeEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEZacFpYZFBabVp6WlhRb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WVhOd1pXTjBJRDBnWlNBdklIUXNJSFJvYVhNdWRtbGxkeUE5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTUyYVdWM0lEMGdld29nSUNBZ0lDQWdJQ0FnSUNCbGJtRmliR1ZrT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWm5Wc2JGZHBaSFJvT2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0JtZFd4c1NHVnBaMmgwT2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUllPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhSWk9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQXhDaUFnSUNBZ0lDQWdmU2tzSUhSb2FYTXVkbWxsZHk1bGJtRmliR1ZrSUQwZ0lUQXNJSFJvYVhNdWRtbGxkeTVtZFd4c1YybGtkR2dnUFNCbExDQjBhR2x6TG5acFpYY3VablZzYkVobGFXZG9kQ0E5SUhRc0lIUm9hWE11ZG1sbGR5NXZabVp6WlhSWUlEMGdiaXdnZEdocGN5NTJhV1YzTG05bVpuTmxkRmtnUFNCcExDQjBhR2x6TG5acFpYY3VkMmxrZEdnZ1BTQnlMQ0IwYUdsekxuWnBaWGN1YUdWcFoyaDBJRDBnYnl3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0JqYkdWaGNsWnBaWGRQWm1aelpYUW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTJhV1YzSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG5acFpYY3VaVzVoWW14bFpDQTlJQ0V4S1N3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1dVpXRnlMQ0IwSUQwZ1pTQXFJRTFoZEdndWRHRnVLRmR1SUNvZ0xqVWdLaUIwYUdsekxtWnZkaWtnTHlCMGFHbHpMbnB2YjIwc0lHNGdQU0F5SUNvZ2RDd2dhU0E5SUhSb2FYTXVZWE53WldOMElDb2diaXdnY2lBOUlDMHVOU0FxSUdrc0lHOGdQU0IwYUdsekxuWnBaWGM3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11ZG1sbGR5QWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxuWnBaWGN1Wlc1aFlteGxaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHOHVablZzYkZkcFpIUm9MQ0JqSUQwZ2J5NW1kV3hzU0dWcFoyaDBPd29nSUNBZ0lDQWdJQ0FnSUNCeUlDczlJRzh1YjJabWMyVjBXQ0FxSUdrZ0x5QnNMQ0IwSUMwOUlHOHViMlptYzJWMFdTQXFJRzRnTHlCakxDQnBJQ285SUc4dWQybGtkR2dnTHlCc0xDQnVJQ285SUc4dWFHVnBaMmgwSUM4Z1l6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TG1acGJHMVBabVp6WlhRN0NpQWdJQ0FnSUNBZ1lTQWhQVDBnTUNBbUppQW9jaUFyUFNCbElDb2dZU0F2SUhSb2FYTXVaMlYwUm1sc2JWZHBaSFJvS0NrcExDQjBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGd1YldGclpWQmxjbk53WldOMGFYWmxLSElzSUhJZ0t5QnBMQ0IwTENCMElDMGdiaXdnWlN3Z2RHaHBjeTVtWVhJcExDQjBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGhKYm5abGNuTmxMbU52Y0hrb2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRLUzVwYm5abGNuUW9LVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCemRYQmxjaTUwYjBwVFQwNG9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YjJKcVpXTjBMbVp2ZGlBOUlIUm9hWE11Wm05MkxDQjBMbTlpYW1WamRDNTZiMjl0SUQwZ2RHaHBjeTU2YjI5dExDQjBMbTlpYW1WamRDNXVaV0Z5SUQwZ2RHaHBjeTV1WldGeUxDQjBMbTlpYW1WamRDNW1ZWElnUFNCMGFHbHpMbVpoY2l3Z2RDNXZZbXBsWTNRdVptOWpkWE1nUFNCMGFHbHpMbVp2WTNWekxDQjBMbTlpYW1WamRDNWhjM0JsWTNRZ1BTQjBhR2x6TG1GemNHVmpkQ3dnZEdocGN5NTJhV1YzSUNFOVBTQnVkV3hzSUNZbUlDaDBMbTlpYW1WamRDNTJhV1YzSUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z2RHaHBjeTUyYVdWM0tTa3NJSFF1YjJKcVpXTjBMbVpwYkcxSFlYVm5aU0E5SUhSb2FYTXVabWxzYlVkaGRXZGxMQ0IwTG05aWFtVmpkQzVtYVd4dFQyWm1jMlYwSUQwZ2RHaHBjeTVtYVd4dFQyWm1jMlYwTENCME93b2dJQ0FnZlFwOU93cDFkQzV3Y205MGIzUjVjR1V1YVhOUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNBOUlDRXdPd3AyWVhJZ2RXa2dQU0E1TUN3Z1pHa2dQU0F4TENBa2N5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTBlWEJsSUQwZ0lrTjFZbVZEWVcxbGNtRWlMQ0J1TG1selYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBJQ0U5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNURkV0psUTJGdFpYSmhPaUJVYUdVZ1kyOXVjM1J5ZFdOMGIzSWdibTkzSUdWNGNHVmpkSE1nWVc0Z2FXNXpkR0Z1WTJVZ2IyWWdWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUdGeklIUm9hWEprSUhCaGNtRnRaWFJsY2k0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuSmxibVJsY2xSaGNtZGxkQ0E5SUc0N0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dkWFFvZFdrc0lHUnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQnBMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TENCcExuVndMbk5sZENnd0xDQXRNU3dnTUNrc0lHa3ViRzl2YTBGMEtHNWxkeUJOS0RFc0lEQXNJREFwS1N3Z2RHaHBjeTVoWkdRb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnZFhRb2RXa3NJR1JwTENCbExDQjBLVHNLSUNBZ0lDQWdJQ0J5TG14aGVXVnljeUE5SUhSb2FYTXViR0Y1WlhKekxDQnlMblZ3TG5ObGRDZ3dMQ0F0TVN3Z01Da3NJSEl1Ykc5dmEwRjBLRzVsZHlCTktDMHhMQ0F3TENBd0tTa3NJSFJvYVhNdVlXUmtLSElwT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYm1WM0lIVjBLSFZwTENCa2FTd2daU3dnZENrN0NpQWdJQ0FnSUNBZ2J5NXNZWGxsY25NZ1BTQjBhR2x6TG14aGVXVnljeXdnYnk1MWNDNXpaWFFvTUN3Z01Dd2dNU2tzSUc4dWJHOXZhMEYwS0c1bGR5Qk5LREFzSURFc0lEQXBLU3dnZEdocGN5NWhaR1FvYnlrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2dkWFFvZFdrc0lHUnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQmhMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TENCaExuVndMbk5sZENnd0xDQXdMQ0F0TVNrc0lHRXViRzl2YTBGMEtHNWxkeUJOS0RBc0lDMHhMQ0F3S1Nrc0lIUm9hWE11WVdSa0tHRXBPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdibVYzSUhWMEtIVnBMQ0JrYVN3Z1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnYkM1c1lYbGxjbk1nUFNCMGFHbHpMbXhoZVdWeWN5d2diQzUxY0M1elpYUW9NQ3dnTFRFc0lEQXBMQ0JzTG14dmIydEJkQ2h1WlhjZ1RTZ3dMQ0F3TENBeEtTa3NJSFJvYVhNdVlXUmtLR3dwT3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYm1WM0lIVjBLSFZwTENCa2FTd2daU3dnZENrN0NpQWdJQ0FnSUNBZ1l5NXNZWGxsY25NZ1BTQjBhR2x6TG14aGVXVnljeXdnWXk1MWNDNXpaWFFvTUN3Z0xURXNJREFwTENCakxteHZiMnRCZENodVpYY2dUU2d3TENBd0xDQXRNU2twTENCMGFHbHpMbUZrWkNoaktUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3WVhKbGJuUWdQVDA5SUc1MWJHd2dKaVlnZEdocGN5NTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ3BPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1eVpXNWtaWEpVWVhKblpYUXNJRnRwTENCeUxDQnZMQ0JoTENCc0xDQmpYU0E5SUhSb2FYTXVZMmhwYkdSeVpXNHNJR2dnUFNCbExuaHlMbVZ1WVdKc1pXUXNJSFVnUFNCbExtZGxkRkpsYm1SbGNsUmhjbWRsZENncE93b2dJQ0FnSUNBZ0lHVXVlSEl1Wlc1aFlteGxaQ0E5SUNFeE93b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2JpNTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3pzS0lDQWdJQ0FnSUNCdUxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ0lURXNJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRzRzSURBcExDQmxMbkpsYm1SbGNpaDBMQ0JwS1N3Z1pTNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2Jpd2dNU2tzSUdVdWNtVnVaR1Z5S0hRc0lISXBMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2h1TENBeUtTd2daUzV5Wlc1a1pYSW9kQ3dnYnlrc0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHNHNJRE1wTENCbExuSmxibVJsY2loMExDQmhLU3dnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvYml3Z05Da3NJR1V1Y21WdVpHVnlLSFFzSUd3cExDQnVMblJsZUhSMWNtVXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdaQ3dnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvYml3Z05Ta3NJR1V1Y21WdVpHVnlLSFFzSUdNcExDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaDFLU3dnWlM1NGNpNWxibUZpYkdWa0lEMGdhRHNLSUNBZ0lIMEtmU3dnYTJrZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5MElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNc0lHZ3Bld29nSUNBZ0lDQWdJR1VnUFNCbElDRTlQU0IyYjJsa0lEQWdQeUJsSURvZ1cxMHNJSFFnUFNCMElDRTlQU0IyYjJsa0lEQWdQeUIwSURvZ1FtazdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXl3Z2FDazdDaUFnSUNBZ0lDQWdkR2hwY3k1bWJHbHdXU0E5SUNFeE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdsdFlXZGxjeWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiV0ZuWlRzS0lDQWdJSDBLSUNBZ0lITmxkQ0JwYldGblpYTW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzFoWjJVZ1BTQmxPd29nSUNBZ2ZRcDlPd3ByYVM1d2NtOTBiM1I1Y0dVdWFYTkRkV0psVkdWNGRIVnlaU0E5SUNFd093cDJZWElnYW5NZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVGMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lFNTFiV0psY2k1cGMwbHVkR1ZuWlhJb2RDa2dKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBPaUJqYjI1emRISjFZM1J2Y2lCemFXZHVZWFIxY21VZ2FYTWdibTkzSUZkbFlrZE1RM1ZpWlZKbGJtUmxjbFJoY21kbGRDZ2djMmw2WlN3Z2IzQjBhVzl1Y3lBcElpa3NJSFFnUFNCdUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCMElEMGdkQ0I4ZkNCN2ZTd2dkR2hwY3k1MFpYaDBkWEpsSUQwZ2JtVjNJR3RwS0hadmFXUWdNQ3dnZEM1dFlYQndhVzVuTENCMExuZHlZWEJUTENCMExuZHlZWEJVTENCMExtMWhaMFpwYkhSbGNpd2dkQzV0YVc1R2FXeDBaWElzSUhRdVptOXliV0YwTENCMExuUjVjR1VzSUhRdVlXNXBjMjkwY205d2VTd2dkQzVsYm1OdlpHbHVaeWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNXBjMUpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVVnUFNBaE1Dd2dkR2hwY3k1MFpYaDBkWEpsTG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUhRdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUNFOVBTQjJiMmxrSURBZ1B5QjBMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTZJQ0V4TENCMGFHbHpMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlJRDBnZEM1dGFXNUdhV3gwWlhJZ0lUMDlJSFp2YVdRZ01DQS9JSFF1YldsdVJtbHNkR1Z5SURvZ2RIUXNJSFJvYVhNdWRHVjRkSFZ5WlM1ZmJtVmxaSE5HYkdsd1JXNTJUV0Z3SUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JtY205dFJYRjFhWEpsWTNSaGJtZDFiR0Z5VkdWNGRIVnlaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MFpYaDBkWEpsTG5SNWNHVWdQU0IwTG5SNWNHVXNJSFJvYVhNdWRHVjRkSFZ5WlM1bWIzSnRZWFFnUFNCamRDd2dkR2hwY3k1MFpYaDBkWEpsTG1WdVkyOWthVzVuSUQwZ2RDNWxibU52WkdsdVp5d2dkR2hwY3k1MFpYaDBkWEpsTG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUhRdVoyVnVaWEpoZEdWTmFYQnRZWEJ6TENCMGFHbHpMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlJRDBnZEM1dGFXNUdhV3gwWlhJc0lIUm9hWE11ZEdWNGRIVnlaUzV0WVdkR2FXeDBaWElnUFNCMExtMWhaMFpwYkhSbGNqc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSRmNYVnBjbVZqZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dZQW9LQ1FrSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUkVhWEpsWTNScGIyNDdDZ29KQ1FrSmRtVmpNeUIwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUdsdUlIWmxZek1nWkdseUxDQnBiaUJ0WVhRMElHMWhkSEpwZUNBcElIc0tDZ2tKQ1FrSmNtVjBkWEp1SUc1dmNtMWhiR2w2WlNnZ0tDQnRZWFJ5YVhnZ0tpQjJaV00wS0NCa2FYSXNJREF1TUNBcElDa3VlSGw2SUNrN0Nnb0pDUWtKZlFvS0NRa0pDWFp2YVdRZ2JXRnBiaWdwSUhzS0Nna0pDUWtKZGxkdmNteGtSR2x5WldOMGFXOXVJRDBnZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCd2IzTnBkR2x2Yml3Z2JXOWtaV3hOWVhSeWFYZ2dLVHNLQ2drSkNRa0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NRa0pDUWtqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ29KQ1FrSmZRb0pDUWxnTEFvZ0lDQWdJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1lBb0tDUWtKQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhSRmNYVnBjbVZqZERzS0Nna0pDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrUkdseVpXTjBhVzl1T3dvS0NRa0pDU05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDZ29KQ1FrSmRtOXBaQ0J0WVdsdUtDa2dld29LQ1FrSkNRbDJaV016SUdScGNtVmpkR2x2YmlBOUlHNXZjbTFoYkdsNlpTZ2dkbGR2Y214a1JHbHlaV04wYVc5dUlDazdDZ29KQ1FrSkNYWmxZeklnYzJGdGNHeGxWVllnUFNCbGNYVnBjbVZqZEZWMktDQmthWEpsWTNScGIyNGdLVHNLQ2drSkNRa0paMnhmUm5KaFowTnZiRzl5SUQwZ2RHVjRkSFZ5WlRKRUtDQjBSWEYxYVhKbFkzUXNJSE5oYlhCc1pWVldJQ2s3Q2dvSkNRa0pmUW9KQ1FsZ0NpQWdJQ0FnSUNBZ2ZTd2dhU0E5SUc1bGR5QjNiaWcxTENBMUxDQTFLU3dnY2lBOUlHNWxkeUJ6YmloN0NpQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklDSkRkV0psYldGd1JuSnZiVVZ4ZFdseVpXTjBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklGSnBLRzR1ZFc1cFptOXliWE1wTEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUc0dWRtVnlkR1Y0VTJoaFpHVnlMQW9nSUNBZ0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nYmk1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdLSUNBZ0lDQWdJQ0FnSUNBZ2MybGtaVG9nYVhRc0NpQWdJQ0FnSUNBZ0lDQWdJR0pzWlc1a2FXNW5PaUIyYmdvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISXVkVzVwWm05eWJYTXVkRVZ4ZFdseVpXTjBMblpoYkhWbElEMGdkRHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRzVsZHlCemRDaHBMQ0J5S1N3Z1lTQTlJSFF1YldsdVJtbHNkR1Z5T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG0xcGJrWnBiSFJsY2lBOVBUMGdWV2tnSmlZZ0tIUXViV2x1Um1sc2RHVnlJRDBnZEhRcExDQnVaWGNnSkhNb01Td2dNVEFzSUhSb2FYTXBMblZ3WkdGMFpTaGxMQ0J2S1N3Z2RDNXRhVzVHYVd4MFpYSWdQU0JoTENCdkxtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dieTV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdWaGNpaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsTG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQTdJRzhnUENBMk95QnZLeXNwWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvZEdocGN5d2dieWtzSUdVdVkyeGxZWElvZEN3Z2Jpd2dhU2s3Q2lBZ0lDQWdJQ0FnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvY2lrN0NpQWdJQ0I5Q24wN0NtcHpMbkJ5YjNSdmRIbHdaUzVwYzFkbFlrZE1RM1ZpWlZKbGJtUmxjbFJoY21kbGRDQTlJQ0V3T3dwMllYSWdhMjhnUFNCdVpYY2dUU3dnY0dZZ1BTQnVaWGNnVFN3Z2JXWWdQU0J1WlhjZ2JIUXNJRmQwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOS0RFc0lEQXNJREFwTENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXViM0p0WVd3Z1BTQmxMQ0IwYUdsekxtTnZibk4wWVc1MElEMGdkRHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc0xtTnZjSGtvWlNrc0lIUm9hWE11WTI5dWMzUmhiblFnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBRMjl0Y0c5dVpXNTBjeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc0xuTmxkQ2hsTENCMExDQnVLU3dnZEdocGN5NWpiMjV6ZEdGdWRDQTlJR2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRUbTl5YldGc1FXNWtRMjl3YkdGdVlYSlFiMmx1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzTG1OdmNIa29aU2tzSUhSb2FYTXVZMjl1YzNSaGJuUWdQU0F0ZEM1a2IzUW9kR2hwY3k1dWIzSnRZV3dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU52Y0d4aGJtRnlVRzlwYm5SektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHdHZMbk4xWWxabFkzUnZjbk1vYml3Z2RDa3VZM0p2YzNNb2NHWXVjM1ZpVm1WamRHOXljeWhsTENCMEtTa3VibTl5YldGc2FYcGxLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBSbkp2YlU1dmNtMWhiRUZ1WkVOdmNHeGhibUZ5VUc5cGJuUW9hU3dnWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd3dVkyOXdlU2hsTG01dmNtMWhiQ2tzSUhSb2FYTXVZMjl1YzNSaGJuUWdQU0JsTG1OdmJuTjBZVzUwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYm05eWJXRnNhWHBsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ01TQXZJSFJvYVhNdWJtOXliV0ZzTG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtNXZjbTFoYkM1dGRXeDBhWEJzZVZOallXeGhjaWhsS1N3Z2RHaHBjeTVqYjI1emRHRnVkQ0FxUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JtVm5ZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU52Ym5OMFlXNTBJQ285SUMweExDQjBhR2x6TG01dmNtMWhiQzV1WldkaGRHVW9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxWRzlRYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzTG1SdmRDaGxLU0FySUhSb2FYTXVZMjl1YzNSaGJuUTdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWE4wWVc1alpWUnZVRzlwYm5Rb1pTNWpaVzUwWlhJcElDMGdaUzV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0J3Y205cVpXTjBVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1OdmNIa29kR2hwY3k1dWIzSnRZV3dwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzEwYUdsekxtUnBjM1JoYm1ObFZHOVFiMmx1ZENobEtTa3VZV1JrS0dVcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBUR2x1WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTG1SbGJIUmhLR3R2S1N3Z2FTQTlJSFJvYVhNdWJtOXliV0ZzTG1SdmRDaHVLVHNLSUNBZ0lDQWdJQ0JwWmlBb2FTQTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTXVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtHVXVjM1JoY25RcElEMDlQU0F3SUQ4Z2RDNWpiM0I1S0dVdWMzUmhjblFwSURvZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJQzBvWlM1emRHRnlkQzVrYjNRb2RHaHBjeTV1YjNKdFlXd3BJQ3NnZEdocGN5NWpiMjV6ZEdGdWRDa2dMeUJwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5SUR3Z01DQjhmQ0J5SUQ0Z01TQS9JRzUxYkd3Z09pQjBMbU52Y0hrb2Jpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2Npa3VZV1JrS0dVdWMzUmhjblFwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMweHBibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aUzV6ZEdGeWRDa3NJRzRnUFNCMGFHbHpMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxMbVZ1WkNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ1BDQXdJQ1ltSUc0Z1BpQXdJSHg4SUc0Z1BDQXdJQ1ltSUhRZ1BpQXdPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzBKdmVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YVc1MFpYSnpaV04wYzFCc1lXNWxLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMU53YUdWeVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YVc1MFpYSnpaV04wYzFCc1lXNWxLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdZMjl3YkdGdVlYSlFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZMjl3ZVNoMGFHbHpMbTV2Y20xaGJDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb0xYUm9hWE11WTI5dWMzUmhiblFwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUWdmSHdnYldZdVoyVjBUbTl5YldGc1RXRjBjbWw0S0dVcExDQnBJRDBnZEdocGN5NWpiM0JzWVc1aGNsQnZhVzUwS0d0dktTNWhjSEJzZVUxaGRISnBlRFFvWlNrc0lISWdQU0IwYUdsekxtNXZjbTFoYkM1aGNIQnNlVTFoZEhKcGVETW9iaWt1Ym05eWJXRnNhWHBsS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl1YzNSaGJuUWdQU0F0YVM1a2IzUW9jaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU52Ym5OMFlXNTBJQzA5SUdVdVpHOTBLSFJvYVhNdWJtOXliV0ZzS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWJtOXliV0ZzTG1WeGRXRnNjeWgwYUdsekxtNXZjbTFoYkNrZ0ppWWdaUzVqYjI1emRHRnVkQ0E5UFQwZ2RHaHBjeTVqYjI1emRHRnVkRHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNuMDdDbGQwTG5CeWIzUnZkSGx3WlM1cGMxQnNZVzVsSUQwZ0lUQTdDblpoY2lCbWFTQTlJRzVsZHlCQmJpd2dZWE1nUFNCdVpYY2dUU3dnUkhJZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZkMExDQjBJRDBnYm1WM0lGZDBMQ0J1SUQwZ2JtVjNJRmQwTENCcElEMGdibVYzSUZkMExDQnlJRDBnYm1WM0lGZDBMQ0J2SUQwZ2JtVjNJRmQwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbkJzWVc1bGN5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnY2l3S0lDQWdJQ0FnSUNBZ0lDQWdid29nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1d2JHRnVaWE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0ZiTUYwdVkyOXdlU2hsS1N3Z1lWc3hYUzVqYjNCNUtIUXBMQ0JoV3pKZExtTnZjSGtvYmlrc0lHRmJNMTB1WTI5d2VTaHBLU3dnWVZzMFhTNWpiM0I1S0hJcExDQmhXelZkTG1OdmNIa29ieWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHeGhibVZ6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENBMk95QnVLeXNwZEZ0dVhTNWpiM0I1S0dVdWNHeGhibVZ6VzI1ZEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFRY205cVpXTjBhVzl1VFdGMGNtbDRLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjR3hoYm1WekxDQnVJRDBnWlM1bGJHVnRaVzUwY3l3Z2FTQTlJRzViTUYwc0lISWdQU0J1V3pGZExDQnZJRDBnYmxzeVhTd2dZU0E5SUc1Yk0xMHNJR3dnUFNCdVd6UmRMQ0JqSUQwZ2JsczFYU3dnYUNBOUlHNWJObDBzSUhVZ1BTQnVXemRkTENCa0lEMGdibHM0WFN3Z1ppQTlJRzViT1Ywc0lHMGdQU0J1V3pFd1hTd2dlQ0E5SUc1Yk1URmRMQ0IySUQwZ2Jsc3hNbDBzSUdjZ1BTQnVXekV6WFN3Z2NDQTlJRzViTVRSZExDQmZJRDBnYmxzeE5WMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmJNRjB1YzJWMFEyOXRjRzl1Wlc1MGN5aGhJQzBnYVN3Z2RTQXRJR3dzSUhnZ0xTQmtMQ0JmSUMwZ2Rpa3VibTl5YldGc2FYcGxLQ2tzSUhSYk1WMHVjMlYwUTI5dGNHOXVaVzUwY3loaElDc2dhU3dnZFNBcklHd3NJSGdnS3lCa0xDQmZJQ3NnZGlrdWJtOXliV0ZzYVhwbEtDa3NJSFJiTWwwdWMyVjBRMjl0Y0c5dVpXNTBjeWhoSUNzZ2Npd2dkU0FySUdNc0lIZ2dLeUJtTENCZklDc2daeWt1Ym05eWJXRnNhWHBsS0Nrc0lIUmJNMTB1YzJWMFEyOXRjRzl1Wlc1MGN5aGhJQzBnY2l3Z2RTQXRJR01zSUhnZ0xTQm1MQ0JmSUMwZ1p5a3VibTl5YldGc2FYcGxLQ2tzSUhSYk5GMHVjMlYwUTI5dGNHOXVaVzUwY3loaElDMGdieXdnZFNBdElHZ3NJSGdnTFNCdExDQmZJQzBnY0NrdWJtOXliV0ZzYVhwbEtDa3NJSFJiTlYwdWMyVjBRMjl0Y0c5dVpXNTBjeWhoSUNzZ2J5d2dkU0FySUdnc0lIZ2dLeUJ0TENCZklDc2djQ2t1Ym05eWJXRnNhWHBsS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelQySnFaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaMlZ2YldWMGNuazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdkQzVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2dabWt1WTI5d2VTaDBMbUp2ZFc1a2FXNW5VM0JvWlhKbEtTNWhjSEJzZVUxaGRISnBlRFFvWlM1dFlYUnlhWGhYYjNKc1pDa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMxTndhR1Z5WlNobWFTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VTNCeWFYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWm1rdVkyVnVkR1Z5TG5ObGRDZ3dMQ0F3TENBd0tTd2dabWt1Y21Ga2FYVnpJRDBnTGpjd056RXdOamM0TVRFNE5qVTBOellzSUdacExtRndjR3g1VFdGMGNtbDROQ2hsTG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0dacEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5UY0dobGNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXdiR0Z1WlhNc0lHNGdQU0JsTG1ObGJuUmxjaXdnYVNBOUlDMWxMbkpoWkdsMWN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3T3lCeUlEd2dOanNnY2lzcktXbG1JQ2gwVzNKZExtUnBjM1JoYm1ObFZHOVFiMmx1ZENodUtTQThJR2twSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVRBN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpRbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y0d4aGJtVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0EyT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSYmJsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhjeTU0SUQwZ2FTNXViM0p0WVd3dWVDQStJREFnUHlCbExtMWhlQzU0SURvZ1pTNXRhVzR1ZUN3Z1lYTXVlU0E5SUdrdWJtOXliV0ZzTG5rZ1BpQXdJRDhnWlM1dFlYZ3VlU0E2SUdVdWJXbHVMbmtzSUdGekxub2dQU0JwTG01dmNtMWhiQzU2SUQ0Z01DQS9JR1V1YldGNExub2dPaUJsTG0xcGJpNTZMQ0JwTG1ScGMzUmhibU5sVkc5UWIybHVkQ2hoY3lrZ1BDQXdLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoTURzS0lDQWdJSDBLSUNBZ0lHTnZiblJoYVc1elVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV3YkdGdVpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJRFk3SUc0ckt5bHBaaUFvZEZ0dVhTNWthWE4wWVc1alpWUnZVRzlwYm5Rb1pTa2dQQ0F3S1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFd093b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z2NtZ29LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlHNTFiR3dzSUdVZ1BTQWhNU3dnZENBOUlHNTFiR3dzSUc0Z1BTQnVkV3hzT3dvZ0lDQWdablZ1WTNScGIyNGdhU2h5TENCdktTQjdDaUFnSUNBZ0lDQWdkQ2h5TENCdktTd2diaUE5SUhNdWNtVnhkV1Z6ZEVGdWFXMWhkR2x2YmtaeVlXMWxLR2twT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCemRHRnlkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1VnSVQwOUlDRXdJQ1ltSUhRZ0lUMDlJRzUxYkd3Z0ppWWdLRzRnUFNCekxuSmxjWFZsYzNSQmJtbHRZWFJwYjI1R2NtRnRaU2hwS1N3Z1pTQTlJQ0V3S1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITjBiM0E2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6TG1OaGJtTmxiRUZ1YVcxaGRHbHZia1p5WVcxbEtHNHBMQ0JsSUQwZ0lURTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhSQmJtbHRZWFJwYjI1TWIyOXdPaUJtZFc1amRHbHZiaWh5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCeU93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwUTI5dWRHVjRkRG9nWm5WdVkzUnBiMjRvY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6SUQwZ2Nqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJR2RtS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1pTNXBjMWRsWWtkTU1pd2diaUE5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnYVNoakxDQm9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIVWdQU0JqTG1GeWNtRjVMQ0JrSUQwZ1l5NTFjMkZuWlN3Z1ppQTlJSE11WTNKbFlYUmxRblZtWm1WeUtDazdDaUFnSUNBZ0lDQWdjeTVpYVc1a1FuVm1abVZ5S0dnc0lHWXBMQ0J6TG1KMVptWmxja1JoZEdFb2FDd2dkU3dnWkNrc0lHTXViMjVWY0d4dllXUkRZV3hzWW1GamF5Z3BPd29nSUNBZ0lDQWdJR3hsZENCdElEMGdOVEV5TmpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFNCcGJuTjBZVzVqWlc5bUlFWnNiMkYwTXpKQmNuSmhlU0EvSUcwZ1BTQTFNVEkySURvZ2RTQnBibk4wWVc1alpXOW1JRVpzYjJGME5qUkJjbkpoZVNBL0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4QmRIUnlhV0oxZEdWek9pQlZibk4xY0hCdmNuUmxaQ0JrWVhSaElHSjFabVpsY2lCbWIzSnRZWFE2SUVac2IyRjBOalJCY25KaGVTNGlLU0E2SUhVZ2FXNXpkR0Z1WTJWdlppQlZhVzUwTVRaQmNuSmhlU0EvSUdNdWFYTkdiRzloZERFMlFuVm1abVZ5UVhSMGNtbGlkWFJsSUQ4Z2RDQS9JRzBnUFNBMU1UTXhJRG9nWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURUYwZEhKcFluVjBaWE02SUZWellXZGxJRzltSUVac2IyRjBNVFpDZFdabVpYSkJkSFJ5YVdKMWRHVWdjbVZ4ZFdseVpYTWdWMlZpUjB3eUxpSXBJRG9nYlNBOUlEVXhNak1nT2lCMUlHbHVjM1JoYm1ObGIyWWdTVzUwTVRaQmNuSmhlU0EvSUcwZ1BTQTFNVEl5SURvZ2RTQnBibk4wWVc1alpXOW1JRlZwYm5Rek1rRnljbUY1SUQ4Z2JTQTlJRFV4TWpVZ09pQjFJR2x1YzNSaGJtTmxiMllnU1c1ME16SkJjbkpoZVNBL0lHMGdQU0ExTVRJMElEb2dkU0JwYm5OMFlXNWpaVzltSUVsdWREaEJjbkpoZVNBL0lHMGdQU0ExTVRJd0lEb2dLSFVnYVc1emRHRnVZMlZ2WmlCVmFXNTBPRUZ5Y21GNUlIeDhJSFVnYVc1emRHRnVZMlZ2WmlCVmFXNTBPRU5zWVcxd1pXUkJjbkpoZVNrZ0ppWWdLRzBnUFNBMU1USXhLU3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmlkV1ptWlhJNklHWXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJRzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHSjVkR1Z6VUdWeVJXeGxiV1Z1ZERvZ2RTNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWMybHZiam9nWXk1MlpYSnphVzl1Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlISW9ZeXdnYUN3Z2RTa2dld29nSUNBZ0lDQWdJR3hsZENCa0lEMGdhQzVoY25KaGVTd2daaUE5SUdndWRYQmtZWFJsVW1GdVoyVTdDaUFnSUNBZ0lDQWdjeTVpYVc1a1FuVm1abVZ5S0hVc0lHTXBMQ0JtTG1OdmRXNTBJRDA5UFNBdE1TQS9JSE11WW5WbVptVnlVM1ZpUkdGMFlTaDFMQ0F3TENCa0tTQTZJQ2gwSUQ4Z2N5NWlkV1ptWlhKVGRXSkVZWFJoS0hVc0lHWXViMlptYzJWMElDb2daQzVDV1ZSRlUxOVFSVkpmUlV4RlRVVk9WQ3dnWkN3Z1ppNXZabVp6WlhRc0lHWXVZMjkxYm5RcElEb2djeTVpZFdabVpYSlRkV0pFWVhSaEtIVXNJR1l1YjJabWMyVjBJQ29nWkM1Q1dWUkZVMTlRUlZKZlJVeEZUVVZPVkN3Z1pDNXpkV0poY25KaGVTaG1MbTltWm5ObGRDd2daaTV2Wm1aelpYUWdLeUJtTG1OdmRXNTBLU2tzSUdZdVkyOTFiblFnUFNBdE1TazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ2S0dNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1l5NXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxJQ1ltSUNoaklEMGdZeTVrWVhSaEtTd2diaTVuWlhRb1l5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoS0dNcElIc0tJQ0FnSUNBZ0lDQmpMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnSmlZZ0tHTWdQU0JqTG1SaGRHRXBPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdiaTVuWlhRb1l5azdDaUFnSUNBZ0lDQWdhQ0FtSmlBb2N5NWtaV3hsZEdWQ2RXWm1aWElvYUM1aWRXWm1aWElwTENCdUxtUmxiR1YwWlNoaktTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJzS0dNc0lHZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb1l5NXBjMGRNUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2JpNW5aWFFvWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ2doWkNCOGZDQmtMblpsY25OcGIyNGdQQ0JqTG5abGNuTnBiMjRwSUNZbUlHNHVjMlYwS0dNc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2pvZ1l5NWlkV1ptWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJqTG5SNWNHVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmllWFJsYzFCbGNrVnNaVzFsYm5RNklHTXVaV3hsYldWdWRGTnBlbVVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUJqTG5abGNuTnBiMjRLSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWXk1cGMwbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbElDWW1JQ2hqSUQwZ1l5NWtZWFJoS1RzS0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUc0dVoyVjBLR01wT3dvZ0lDQWdJQ0FnSUhVZ1BUMDlJSFp2YVdRZ01DQS9JRzR1YzJWMEtHTXNJR2tvWXl3Z2FDa3BJRG9nZFM1MlpYSnphVzl1SUR3Z1l5NTJaWEp6YVc5dUlDWW1JQ2h5S0hVdVluVm1abVZ5TENCakxDQm9LU3dnZFM1MlpYSnphVzl1SUQwZ1l5NTJaWEp6YVc5dUtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCdkxBb2dJQ0FnSUNBZ0lISmxiVzkyWlRvZ1lTd0tJQ0FnSUNBZ0lDQjFjR1JoZEdVNklHd0tJQ0FnSUgwN0NuMEtkbUZ5SUZCcElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJREVzSUc0Z1BTQXhMQ0JwSUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUd4aGJtVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2hUWldkdFpXNTBjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoMFUyVm5iV1Z1ZEhNNklHa0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdaU0F2SURJc0lHOGdQU0IwSUM4Z01pd2dZU0E5SUUxaGRHZ3VabXh2YjNJb2Jpa3NJR3dnUFNCTllYUm9MbVpzYjI5eUtHa3BMQ0JqSUQwZ1lTQXJJREVzSUdnZ1BTQnNJQ3NnTVN3Z2RTQTlJR1VnTHlCaExDQmtJRDBnZENBdklHd3NJR1lnUFNCYlhTd2diU0E5SUZ0ZExDQjRJRDBnVzEwc0lIWWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdjZ1BTQXdPeUJuSUR3Z2FEc2daeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm5JQ29nWkNBdElHODdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlEQTdJRjhnUENCak95QmZLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0JmSUNvZ2RTQXRJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0TG5CMWMyZ29lU3dnTFhBc0lEQXBMQ0I0TG5CMWMyZ29NQ3dnTUN3Z01Ta3NJSFl1Y0hWemFDaGZJQzhnWVNrc0lIWXVjSFZ6YUNneElDMGdaeUF2SUd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnpFZ1BTQXdPeUJuTVNBOElHdzdJR2N4S3lzcFptOXlLR3hsZENCd01TQTlJREE3SUhBeElEd2dZVHNnY0RFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZNU0E5SUhBeElDc2dZeUFxSUdjeExDQjVNU0E5SUhBeElDc2dZeUFxSUNobk1TQXJJREVwTENCaUlEMGdjREVnS3lBeElDc2dZeUFxSUNobk1TQXJJREVwTENCQklEMGdjREVnS3lBeElDc2dZeUFxSUdjeE93b2dJQ0FnSUNBZ0lDQWdJQ0JtTG5CMWMyZ29YekVzSUhreExDQkJLU3dnWmk1d2RYTm9LSGt4TENCaUxDQkJLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJKYm1SbGVDaG1LU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0cwc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2g0TENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNoMkxDQXlLU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVR2tvWlM1M2FXUjBhQ3dnWlM1b1pXbG5hSFFzSUdVdWQybGtkR2hUWldkdFpXNTBjeXdnWlM1b1pXbG5hSFJUWldkdFpXNTBjeWs3Q2lBZ0lDQjlDbjBzSUhobUlEMGdZQ05wWm1SbFppQlZVMFZmUVV4UVNFRk5RVkFLQ1dScFptWjFjMlZEYjJ4dmNpNWhJQ285SUhSbGVIUjFjbVV5UkNnZ1lXeHdhR0ZOWVhBc0lIWlZkaUFwTG1jN0NpTmxibVJwWm1Bc0lIbG1JRDBnWUNOcFptUmxaaUJWVTBWZlFVeFFTRUZOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHRnNjR2hoVFdGd093b2paVzVrYVdaZ0xDQjJaaUE5SUdBamFXWmtaV1lnVlZORlgwRk1VRWhCVkVWVFZBb0phV1lnS0NCa2FXWm1kWE5sUTI5c2IzSXVZU0E4SUdGc2NHaGhWR1Z6ZENBcElHUnBjMk5oY21RN0NpTmxibVJwWm1Bc0lGOW1JRDBnWUNOcFptUmxaaUJWVTBWZlFVeFFTRUZVUlZOVUNnbDFibWxtYjNKdElHWnNiMkYwSUdGc2NHaGhWR1Z6ZERzS0kyVnVaR2xtWUN3Z1RXWWdQU0JnSTJsbVpHVm1JRlZUUlY5QlQwMUJVQW9KWm14dllYUWdZVzFpYVdWdWRFOWpZMngxYzJsdmJpQTlJQ2dnZEdWNGRIVnlaVEpFS0NCaGIwMWhjQ3dnZGxWMk1pQXBMbklnTFNBeExqQWdLU0FxSUdGdlRXRndTVzUwWlc1emFYUjVJQ3NnTVM0d093b0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNvOUlHRnRZbWxsYm5SUFkyTnNkWE5wYjI0N0Nna2phV1lnWkdWbWFXNWxaQ2dnVlZORlgwVk9WazFCVUNBcElDWW1JR1JsWm1sdVpXUW9JRk5VUVU1RVFWSkVJQ2tLQ1FsbWJHOWhkQ0JrYjNST1ZpQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHZGxiMjFsZEhKNUxtNXZjbTFoYkN3Z1oyVnZiV1YwY25rdWRtbGxkMFJwY2lBcElDazdDZ2tKY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXFQU0JqYjIxd2RYUmxVM0JsWTNWc1lYSlBZMk5zZFhOcGIyNG9JR1J2ZEU1V0xDQmhiV0pwWlc1MFQyTmpiSFZ6YVc5dUxDQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTWdLVHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JpWmlBOUlHQWphV1prWldZZ1ZWTkZYMEZQVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmhiMDFoY0RzS0NYVnVhV1p2Y20wZ1pteHZZWFFnWVc5TllYQkpiblJsYm5OcGRIazdDaU5sYm1ScFptQXNJSGRtSUQwZ0luWmxZek1nZEhKaGJuTm1iM0p0WldRZ1BTQjJaV016S0NCd2IzTnBkR2x2YmlBcE95SXNJRk5tSUQwZ1lIWmxZek1nYjJKcVpXTjBUbTl5YldGc0lEMGdkbVZqTXlnZ2JtOXliV0ZzSUNrN0NpTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pkbVZqTXlCdlltcGxZM1JVWVc1blpXNTBJRDBnZG1Wak15Z2dkR0Z1WjJWdWRDNTRlWG9nS1RzS0kyVnVaR2xtWUN3Z1ZHWWdQU0JnZG1Wak15QkNVa1JHWDB4aGJXSmxjblFvSUdOdmJuTjBJR2x1SUhabFl6TWdaR2xtWm5WelpVTnZiRzl5SUNrZ2V3b0pjbVYwZFhKdUlGSkZRMGxRVWs5RFFVeGZVRWtnS2lCa2FXWm1kWE5sUTI5c2IzSTdDbjBLZG1Wak15QkdYMU5qYUd4cFkyc29JR052Ym5OMElHbHVJSFpsWXpNZ1pqQXNJR052Ym5OMElHbHVJR1pzYjJGMElHWTVNQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdaRzkwVmtnZ0tTQjdDZ2xtYkc5aGRDQm1jbVZ6Ym1Wc0lEMGdaWGh3TWlnZ0tDQXRJRFV1TlRVME56TWdLaUJrYjNSV1NDQXRJRFl1T1Rnek1UWWdLU0FxSUdSdmRGWklJQ2s3Q2dseVpYUjFjbTRnWmpBZ0tpQW9JREV1TUNBdElHWnlaWE51Wld3Z0tTQXJJQ2dnWmprd0lDb2dabkpsYzI1bGJDQXBPd3A5Q21ac2IyRjBJRlpmUjBkWVgxTnRhWFJvUTI5eWNtVnNZWFJsWkNnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnWVd4d2FHRXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRTVNTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JrYjNST1ZpQXBJSHNLQ1dac2IyRjBJR0V5SUQwZ2NHOTNNaWdnWVd4d2FHRWdLVHNLQ1dac2IyRjBJR2QySUQwZ1pHOTBUa3dnS2lCemNYSjBLQ0JoTWlBcklDZ2dNUzR3SUMwZ1lUSWdLU0FxSUhCdmR6SW9JR1J2ZEU1V0lDa2dLVHNLQ1dac2IyRjBJR2RzSUQwZ1pHOTBUbFlnS2lCemNYSjBLQ0JoTWlBcklDZ2dNUzR3SUMwZ1lUSWdLU0FxSUhCdmR6SW9JR1J2ZEU1TUlDa2dLVHNLQ1hKbGRIVnliaUF3TGpVZ0x5QnRZWGdvSUdkMklDc2daMndzSUVWUVUwbE1UMDRnS1RzS2ZRcG1iRzloZENCRVgwZEhXQ2dnWTI5dWMzUWdhVzRnWm14dllYUWdZV3h3YUdFc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdSdmRFNUlJQ2tnZXdvSlpteHZZWFFnWVRJZ1BTQndiM2N5S0NCaGJIQm9ZU0FwT3dvSlpteHZZWFFnWkdWdWIyMGdQU0J3YjNjeUtDQmtiM1JPU0NBcElDb2dLQ0JoTWlBdElERXVNQ0FwSUNzZ01TNHdPd29KY21WMGRYSnVJRkpGUTBsUVVrOURRVXhmVUVrZ0tpQmhNaUF2SUhCdmR6SW9JR1JsYm05dElDazdDbjBLZG1Wak15QkNVa1JHWDBkSFdDZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCc2FXZG9kRVJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUIyYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJtTUN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWmprd0xDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNZ0tTQjdDZ2xtYkc5aGRDQmhiSEJvWVNBOUlIQnZkeklvSUhKdmRXZG9ibVZ6Y3lBcE93b0pkbVZqTXlCb1lXeG1SR2x5SUQwZ2JtOXliV0ZzYVhwbEtDQnNhV2RvZEVScGNpQXJJSFpwWlhkRWFYSWdLVHNLQ1dac2IyRjBJR1J2ZEU1TUlEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ2JtOXliV0ZzTENCc2FXZG9kRVJwY2lBcElDazdDZ2xtYkc5aGRDQmtiM1JPVmlBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUc1dmNtMWhiQ3dnZG1sbGQwUnBjaUFwSUNrN0NnbG1iRzloZENCa2IzUk9TQ0E5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2dhR0ZzWmtScGNpQXBJQ2s3Q2dsbWJHOWhkQ0JrYjNSV1NDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lIWnBaWGRFYVhJc0lHaGhiR1pFYVhJZ0tTQXBPd29KZG1Wak15QkdJRDBnUmw5VFkyaHNhV05yS0NCbU1Dd2daamt3TENCa2IzUldTQ0FwT3dvSlpteHZZWFFnVmlBOUlGWmZSMGRZWDFOdGFYUm9RMjl5Y21Wc1lYUmxaQ2dnWVd4d2FHRXNJR1J2ZEU1TUxDQmtiM1JPVmlBcE93b0pabXh2WVhRZ1JDQTlJRVJmUjBkWUtDQmhiSEJvWVN3Z1pHOTBUa2dnS1RzS0NYSmxkSFZ5YmlCR0lDb2dLQ0JXSUNvZ1JDQXBPd3A5Q25abFl6SWdURlJEWDFWMktDQmpiMjV6ZENCcGJpQjJaV016SUU0c0lHTnZibk4wSUdsdUlIWmxZek1nVml3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnY205MVoyaHVaWE56SUNrZ2V3b0pZMjl1YzNRZ1pteHZZWFFnVEZWVVgxTkpXa1VnUFNBMk5DNHdPd29KWTI5dWMzUWdabXh2WVhRZ1RGVlVYMU5EUVV4RklEMGdLQ0JNVlZSZlUwbGFSU0F0SURFdU1DQXBJQzhnVEZWVVgxTkpXa1U3Q2dsamIyNXpkQ0JtYkc5aGRDQk1WVlJmUWtsQlV5QTlJREF1TlNBdklFeFZWRjlUU1ZwRk93b0pabXh2WVhRZ1pHOTBUbFlnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0JPTENCV0lDa2dLVHNLQ1habFl6SWdkWFlnUFNCMlpXTXlLQ0J5YjNWbmFHNWxjM01zSUhOeGNuUW9JREV1TUNBdElHUnZkRTVXSUNrZ0tUc0tDWFYySUQwZ2RYWWdLaUJNVlZSZlUwTkJURVVnS3lCTVZWUmZRa2xCVXpzS0NYSmxkSFZ5YmlCMWRqc0tmUXBtYkc5aGRDQk1WRU5mUTJ4cGNIQmxaRk53YUdWeVpVWnZjbTFHWVdOMGIzSW9JR052Ym5OMElHbHVJSFpsWXpNZ1ppQXBJSHNLQ1dac2IyRjBJR3dnUFNCc1pXNW5kR2dvSUdZZ0tUc0tDWEpsZEhWeWJpQnRZWGdvSUNnZ2JDQXFJR3dnS3lCbUxub2dLU0F2SUNnZ2JDQXJJREV1TUNBcExDQXdMakFnS1RzS2ZRcDJaV016SUV4VVExOUZaR2RsVm1WamRHOXlSbTl5YlVaaFkzUnZjaWdnWTI5dWMzUWdhVzRnZG1Wak15QjJNU3dnWTI5dWMzUWdhVzRnZG1Wak15QjJNaUFwSUhzS0NXWnNiMkYwSUhnZ1BTQmtiM1FvSUhZeExDQjJNaUFwT3dvSlpteHZZWFFnZVNBOUlHRmljeWdnZUNBcE93b0pabXh2WVhRZ1lTQTlJREF1T0RVME16azROU0FySUNnZ01DNDBPVFkxTVRVMUlDc2dNQzR3TVRRMU1qQTJJQ29nZVNBcElDb2dlVHNLQ1dac2IyRjBJR0lnUFNBekxqUXhOelU1TkRBZ0t5QW9JRFF1TVRZeE5qY3lOQ0FySUhrZ0tTQXFJSGs3Q2dsbWJHOWhkQ0IySUQwZ1lTQXZJR0k3Q2dsbWJHOWhkQ0IwYUdWMFlWOXphVzUwYUdWMFlTQTlJQ2dnZUNBK0lEQXVNQ0FwSUQ4Z2RpQTZJREF1TlNBcUlHbHVkbVZ5YzJWemNYSjBLQ0J0WVhnb0lERXVNQ0F0SUhnZ0tpQjRMQ0F4WlMwM0lDa2dLU0F0SUhZN0NnbHlaWFIxY200Z1kzSnZjM01vSUhZeExDQjJNaUFwSUNvZ2RHaGxkR0ZmYzJsdWRHaGxkR0U3Q24wS2RtVmpNeUJNVkVOZlJYWmhiSFZoZEdVb0lHTnZibk4wSUdsdUlIWmxZek1nVGl3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJXTENCamIyNXpkQ0JwYmlCMlpXTXpJRkFzSUdOdmJuTjBJR2x1SUcxaGRETWdiVWx1ZGl3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ5WldOMFEyOXZjbVJ6V3lBMElGMGdLU0I3Q2dsMlpXTXpJSFl4SUQwZ2NtVmpkRU52YjNKa2Mxc2dNU0JkSUMwZ2NtVmpkRU52YjNKa2Mxc2dNQ0JkT3dvSmRtVmpNeUIyTWlBOUlISmxZM1JEYjI5eVpITmJJRE1nWFNBdElISmxZM1JEYjI5eVpITmJJREFnWFRzS0NYWmxZek1nYkdsbmFIUk9iM0p0WVd3Z1BTQmpjbTl6Y3lnZ2RqRXNJSFl5SUNrN0NnbHBaaWdnWkc5MEtDQnNhV2RvZEU1dmNtMWhiQ3dnVUNBdElISmxZM1JEYjI5eVpITmJJREFnWFNBcElEd2dNQzR3SUNrZ2NtVjBkWEp1SUhabFl6TW9JREF1TUNBcE93b0pkbVZqTXlCVU1Td2dWREk3Q2dsVU1TQTlJRzV2Y20xaGJHbDZaU2dnVmlBdElFNGdLaUJrYjNRb0lGWXNJRTRnS1NBcE93b0pWRElnUFNBdElHTnliM056S0NCT0xDQlVNU0FwT3dvSmJXRjBNeUJ0WVhRZ1BTQnRTVzUySUNvZ2RISmhibk53YjNObFRXRjBNeWdnYldGME15Z2dWREVzSUZReUxDQk9JQ2tnS1RzS0NYWmxZek1nWTI5dmNtUnpXeUEwSUYwN0NnbGpiMjl5WkhOYklEQWdYU0E5SUcxaGRDQXFJQ2dnY21WamRFTnZiM0prYzFzZ01DQmRJQzBnVUNBcE93b0pZMjl2Y21Seld5QXhJRjBnUFNCdFlYUWdLaUFvSUhKbFkzUkRiMjl5WkhOYklERWdYU0F0SUZBZ0tUc0tDV052YjNKa2Mxc2dNaUJkSUQwZ2JXRjBJQ29nS0NCeVpXTjBRMjl2Y21Seld5QXlJRjBnTFNCUUlDazdDZ2xqYjI5eVpITmJJRE1nWFNBOUlHMWhkQ0FxSUNnZ2NtVmpkRU52YjNKa2Mxc2dNeUJkSUMwZ1VDQXBPd29KWTI5dmNtUnpXeUF3SUYwZ1BTQnViM0p0WVd4cGVtVW9JR052YjNKa2Mxc2dNQ0JkSUNrN0NnbGpiMjl5WkhOYklERWdYU0E5SUc1dmNtMWhiR2w2WlNnZ1kyOXZjbVJ6V3lBeElGMGdLVHNLQ1dOdmIzSmtjMXNnTWlCZElEMGdibTl5YldGc2FYcGxLQ0JqYjI5eVpITmJJRElnWFNBcE93b0pZMjl2Y21Seld5QXpJRjBnUFNCdWIzSnRZV3hwZW1Vb0lHTnZiM0prYzFzZ015QmRJQ2s3Q2dsMlpXTXpJSFpsWTNSdmNrWnZjbTFHWVdOMGIzSWdQU0IyWldNektDQXdMakFnS1RzS0NYWmxZM1J2Y2tadmNtMUdZV04wYjNJZ0t6MGdURlJEWDBWa1oyVldaV04wYjNKR2IzSnRSbUZqZEc5eUtDQmpiMjl5WkhOYklEQWdYU3dnWTI5dmNtUnpXeUF4SUYwZ0tUc0tDWFpsWTNSdmNrWnZjbTFHWVdOMGIzSWdLejBnVEZSRFgwVmtaMlZXWldOMGIzSkdiM0p0Um1GamRHOXlLQ0JqYjI5eVpITmJJREVnWFN3Z1kyOXZjbVJ6V3lBeUlGMGdLVHNLQ1habFkzUnZja1p2Y20xR1lXTjBiM0lnS3owZ1RGUkRYMFZrWjJWV1pXTjBiM0pHYjNKdFJtRmpkRzl5S0NCamIyOXlaSE5iSURJZ1hTd2dZMjl2Y21Seld5QXpJRjBnS1RzS0NYWmxZM1J2Y2tadmNtMUdZV04wYjNJZ0t6MGdURlJEWDBWa1oyVldaV04wYjNKR2IzSnRSbUZqZEc5eUtDQmpiMjl5WkhOYklETWdYU3dnWTI5dmNtUnpXeUF3SUYwZ0tUc0tDV1pzYjJGMElISmxjM1ZzZENBOUlFeFVRMTlEYkdsd2NHVmtVM0JvWlhKbFJtOXliVVpoWTNSdmNpZ2dkbVZqZEc5eVJtOXliVVpoWTNSdmNpQXBPd29KY21WMGRYSnVJSFpsWXpNb0lISmxjM1ZzZENBcE93cDlDbVpzYjJGMElFZGZRbXhwYm01UWFHOXVaMTlKYlhCc2FXTnBkQ2dnS1NCN0NnbHlaWFIxY200Z01DNHlOVHNLZlFwbWJHOWhkQ0JFWDBKc2FXNXVVR2h2Ym1jb0lHTnZibk4wSUdsdUlHWnNiMkYwSUhOb2FXNXBibVZ6Y3l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWkc5MFRrZ2dLU0I3Q2dseVpYUjFjbTRnVWtWRFNWQlNUME5CVEY5UVNTQXFJQ2dnYzJocGJtbHVaWE56SUNvZ01DNDFJQ3NnTVM0d0lDa2dLaUJ3YjNjb0lHUnZkRTVJTENCemFHbHVhVzVsYzNNZ0tUc0tmUXAyWldNeklFSlNSRVpmUW14cGJtNVFhRzl1WnlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJzYVdkb2RFUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnZG1Wak15QnpjR1ZqZFd4aGNrTnZiRzl5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J6YUdsdWFXNWxjM01nS1NCN0NnbDJaV016SUdoaGJHWkVhWElnUFNCdWIzSnRZV3hwZW1Vb0lHeHBaMmgwUkdseUlDc2dkbWxsZDBScGNpQXBPd29KWm14dllYUWdaRzkwVGtnZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUdoaGJHWkVhWElnS1NBcE93b0pabXh2WVhRZ1pHOTBWa2dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0IyYVdWM1JHbHlMQ0JvWVd4bVJHbHlJQ2tnS1RzS0NYWmxZek1nUmlBOUlFWmZVMk5vYkdsamF5Z2djM0JsWTNWc1lYSkRiMnh2Y2l3Z01TNHdMQ0JrYjNSV1NDQXBPd29KWm14dllYUWdSeUE5SUVkZlFteHBibTVRYUc5dVoxOUpiWEJzYVdOcGRDZ2dLVHNLQ1dac2IyRjBJRVFnUFNCRVgwSnNhVzV1VUdodmJtY29JSE5vYVc1cGJtVnpjeXdnWkc5MFRrZ2dLVHNLQ1hKbGRIVnliaUJHSUNvZ0tDQkhJQ29nUkNBcE93cDlDaU5wWmlCa1pXWnBibVZrS0NCVlUwVmZVMGhGUlU0Z0tRcG1iRzloZENCRVgwTm9ZWEpzYVdVb0lHWnNiMkYwSUhKdmRXZG9ibVZ6Y3l3Z1pteHZZWFFnWkc5MFRrZ2dLU0I3Q2dsbWJHOWhkQ0JoYkhCb1lTQTlJSEJ2ZHpJb0lISnZkV2RvYm1WemN5QXBPd29KWm14dllYUWdhVzUyUVd4d2FHRWdQU0F4TGpBZ0x5QmhiSEJvWVRzS0NXWnNiMkYwSUdOdmN6Sm9JRDBnWkc5MFRrZ2dLaUJrYjNST1NEc0tDV1pzYjJGMElITnBiakpvSUQwZ2JXRjRLQ0F4TGpBZ0xTQmpiM015YUN3Z01DNHdNRGM0TVRJMUlDazdDZ2x5WlhSMWNtNGdLQ0F5TGpBZ0t5QnBiblpCYkhCb1lTQXBJQ29nY0c5M0tDQnphVzR5YUN3Z2FXNTJRV3h3YUdFZ0tpQXdMalVnS1NBdklDZ2dNaTR3SUNvZ1VFa2dLVHNLZlFwbWJHOWhkQ0JXWDA1bGRXSmxiSFFvSUdac2IyRjBJR1J2ZEU1V0xDQm1iRzloZENCa2IzUk9UQ0FwSUhzS0NYSmxkSFZ5YmlCellYUjFjbUYwWlNnZ01TNHdJQzhnS0NBMExqQWdLaUFvSUdSdmRFNU1JQ3NnWkc5MFRsWWdMU0JrYjNST1RDQXFJR1J2ZEU1V0lDa2dLU0FwT3dwOUNuWmxZek1nUWxKRVJsOVRhR1ZsYmlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJzYVdkb2RFUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnZG1Wak15QnphR1ZsYmtOdmJHOXlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnphR1ZsYmxKdmRXZG9ibVZ6Y3lBcElIc0tDWFpsWXpNZ2FHRnNaa1JwY2lBOUlHNXZjbTFoYkdsNlpTZ2diR2xuYUhSRWFYSWdLeUIyYVdWM1JHbHlJQ2s3Q2dsbWJHOWhkQ0JrYjNST1RDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHNXZjbTFoYkN3Z2JHbG5hSFJFYVhJZ0tTQXBPd29KWm14dllYUWdaRzkwVGxZZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUhacFpYZEVhWElnS1NBcE93b0pabXh2WVhRZ1pHOTBUa2dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJR2hoYkdaRWFYSWdLU0FwT3dvSlpteHZZWFFnUkNBOUlFUmZRMmhoY214cFpTZ2djMmhsWlc1U2IzVm5hRzVsYzNNc0lHUnZkRTVJSUNrN0NnbG1iRzloZENCV0lEMGdWbDlPWlhWaVpXeDBLQ0JrYjNST1Zpd2daRzkwVGt3Z0tUc0tDWEpsZEhWeWJpQnphR1ZsYmtOdmJHOXlJQ29nS0NCRUlDb2dWaUFwT3dwOUNpTmxibVJwWm1Bc0lFVm1JRDBnWUNOcFptUmxaaUJWVTBWZlFsVk5VRTFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1luVnRjRTFoY0RzS0NYVnVhV1p2Y20wZ1pteHZZWFFnWW5WdGNGTmpZV3hsT3dvSmRtVmpNaUJrU0dSNGVWOW1kMlFvS1NCN0Nna0pkbVZqTWlCa1UxUmtlQ0E5SUdSR1pIZ29JSFpWZGlBcE93b0pDWFpsWXpJZ1pGTlVaSGtnUFNCa1JtUjVLQ0IyVlhZZ0tUc0tDUWxtYkc5aGRDQkliR3dnUFNCaWRXMXdVMk5oYkdVZ0tpQjBaWGgwZFhKbE1rUW9JR0oxYlhCTllYQXNJSFpWZGlBcExuZzdDZ2tKWm14dllYUWdaRUo0SUQwZ1luVnRjRk5qWVd4bElDb2dkR1Y0ZEhWeVpUSkVLQ0JpZFcxd1RXRndMQ0IyVlhZZ0t5QmtVMVJrZUNBcExuZ2dMU0JJYkd3N0Nna0pabXh2WVhRZ1pFSjVJRDBnWW5WdGNGTmpZV3hsSUNvZ2RHVjRkSFZ5WlRKRUtDQmlkVzF3VFdGd0xDQjJWWFlnS3lCa1UxUmtlU0FwTG5nZ0xTQkliR3c3Q2drSmNtVjBkWEp1SUhabFl6SW9JR1JDZUN3Z1pFSjVJQ2s3Q2dsOUNnbDJaV016SUhCbGNuUjFjbUpPYjNKdFlXeEJjbUlvSUhabFl6TWdjM1Z5Wmw5d2IzTXNJSFpsWXpNZ2MzVnlabDl1YjNKdExDQjJaV015SUdSSVpIaDVMQ0JtYkc5aGRDQm1ZV05sUkdseVpXTjBhVzl1SUNrZ2V3b0pDWFpsWXpNZ2RsTnBaMjFoV0NBOUlIWmxZek1vSUdSR1pIZ29JSE4xY21aZmNHOXpMbmdnS1N3Z1pFWmtlQ2dnYzNWeVpsOXdiM011ZVNBcExDQmtSbVI0S0NCemRYSm1YM0J2Y3k1NklDa2dLVHNLQ1FsMlpXTXpJSFpUYVdkdFlWa2dQU0IyWldNektDQmtSbVI1S0NCemRYSm1YM0J2Y3k1NElDa3NJR1JHWkhrb0lITjFjbVpmY0c5ekxua2dLU3dnWkVaa2VTZ2djM1Z5Wmw5d2IzTXVlaUFwSUNrN0Nna0pkbVZqTXlCMlRpQTlJSE4xY21aZmJtOXliVHNLQ1FsMlpXTXpJRkl4SUQwZ1kzSnZjM01vSUhaVGFXZHRZVmtzSUhaT0lDazdDZ2tKZG1Wak15QlNNaUE5SUdOeWIzTnpLQ0IyVGl3Z2RsTnBaMjFoV0NBcE93b0pDV1pzYjJGMElHWkVaWFFnUFNCa2IzUW9JSFpUYVdkdFlWZ3NJRkl4SUNrZ0tpQm1ZV05sUkdseVpXTjBhVzl1T3dvSkNYWmxZek1nZGtkeVlXUWdQU0J6YVdkdUtDQm1SR1YwSUNrZ0tpQW9JR1JJWkhoNUxuZ2dLaUJTTVNBcklHUklaSGg1TG5rZ0tpQlNNaUFwT3dvSkNYSmxkSFZ5YmlCdWIzSnRZV3hwZW1Vb0lHRmljeWdnWmtSbGRDQXBJQ29nYzNWeVpsOXViM0p0SUMwZ2RrZHlZV1FnS1RzS0NYMEtJMlZ1WkdsbVlDd2dRV1lnUFNCZ0kybG1JRTVWVFY5RFRFbFFVRWxPUjE5UVRFRk9SVk1nUGlBd0NnbDJaV00wSUhCc1lXNWxPd29KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1ZVNUpUMDVmUTB4SlVGQkpUa2RmVUV4QlRrVlRPeUJwSUNzcklDa2dld29KQ1hCc1lXNWxJRDBnWTJ4cGNIQnBibWRRYkdGdVpYTmJJR2tnWFRzS0NRbHBaaUFvSUdSdmRDZ2dka05zYVhCUWIzTnBkR2x2Yml3Z2NHeGhibVV1ZUhsNklDa2dQaUJ3YkdGdVpTNTNJQ2tnWkdselkyRnlaRHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2dramFXWWdWVTVKVDA1ZlEweEpVRkJKVGtkZlVFeEJUa1ZUSUR3Z1RsVk5YME5NU1ZCUVNVNUhYMUJNUVU1RlV3b0pDV0p2YjJ3Z1kyeHBjSEJsWkNBOUlIUnlkV1U3Q2drSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSkNXWnZjaUFvSUdsdWRDQnBJRDBnVlU1SlQwNWZRMHhKVUZCSlRrZGZVRXhCVGtWVE95QnBJRHdnVGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXpzZ2FTQXJLeUFwSUhzS0NRa0pjR3hoYm1VZ1BTQmpiR2x3Y0dsdVoxQnNZVzVsYzFzZ2FTQmRPd29KQ1FsamJHbHdjR1ZrSUQwZ0tDQmtiM1FvSUhaRGJHbHdVRzl6YVhScGIyNHNJSEJzWVc1bExuaDVlaUFwSUQ0Z2NHeGhibVV1ZHlBcElDWW1JR05zYVhCd1pXUTdDZ2tKZlFvSkNTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2drSmFXWWdLQ0JqYkdsd2NHVmtJQ2tnWkdselkyRnlaRHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JEWmlBOUlHQWphV1lnVGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXlBK0lEQUtDWFpoY25scGJtY2dkbVZqTXlCMlEyeHBjRkJ2YzJsMGFXOXVPd29KZFc1cFptOXliU0IyWldNMElHTnNhWEJ3YVc1blVHeGhibVZ6V3lCT1ZVMWZRMHhKVUZCSlRrZGZVRXhCVGtWVElGMDdDaU5sYm1ScFptQXNJRXhtSUQwZ1lDTnBaaUJPVlUxZlEweEpVRkJKVGtkZlVFeEJUa1ZUSUQ0Z01Bb0pkbUZ5ZVdsdVp5QjJaV016SUhaRGJHbHdVRzl6YVhScGIyNDdDaU5sYm1ScFptQXNJRkptSUQwZ1lDTnBaaUJPVlUxZlEweEpVRkJKVGtkZlVFeEJUa1ZUSUQ0Z01Bb0pka05zYVhCUWIzTnBkR2x2YmlBOUlDMGdiWFpRYjNOcGRHbHZiaTU0ZVhvN0NpTmxibVJwWm1Bc0lGQm1JRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSmZRVXhRU0VFZ0tRb0paR2xtWm5WelpVTnZiRzl5SUNvOUlIWkRiMnh2Y2pzS0kyVnNhV1lnWkdWbWFXNWxaQ2dnVlZORlgwTlBURTlTSUNrS0NXUnBabVoxYzJWRGIyeHZjaTV5WjJJZ0tqMGdka052Ykc5eU93b2paVzVrYVdaZ0xDQkpaaUE5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNYMEZNVUVoQklDa0tDWFpoY25scGJtY2dkbVZqTkNCMlEyOXNiM0k3Q2lObGJHbG1JR1JsWm1sdVpXUW9JRlZUUlY5RFQweFBVaUFwQ2dsMllYSjVhVzVuSUhabFl6TWdka052Ykc5eU93b2paVzVrYVdaZ0xDQkVaaUE5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNYMEZNVUVoQklDa0tDWFpoY25scGJtY2dkbVZqTkNCMlEyOXNiM0k3Q2lObGJHbG1JR1JsWm1sdVpXUW9JRlZUUlY5RFQweFBVaUFwSUh4OElHUmxabWx1WldRb0lGVlRSVjlKVGxOVVFVNURTVTVIWDBOUFRFOVNJQ2tLQ1haaGNubHBibWNnZG1Wak15QjJRMjlzYjNJN0NpTmxibVJwWm1Bc0lFWm1JRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUTA5TVQxSmZRVXhRU0VFZ0tRb0pka052Ykc5eUlEMGdkbVZqTkNnZ01TNHdJQ2s3Q2lObGJHbG1JR1JsWm1sdVpXUW9JRlZUUlY5RFQweFBVaUFwSUh4OElHUmxabWx1WldRb0lGVlRSVjlKVGxOVVFVNURTVTVIWDBOUFRFOVNJQ2tLQ1haRGIyeHZjaUE5SUhabFl6TW9JREV1TUNBcE93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOURUMHhQVWdvSmRrTnZiRzl5SUNvOUlHTnZiRzl5T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5SlRsTlVRVTVEU1U1SFgwTlBURTlTQ2dsMlEyOXNiM0l1ZUhsNklDbzlJR2x1YzNSaGJtTmxRMjlzYjNJdWVIbDZPd29qWlc1a2FXWmdMQ0JPWmlBOUlHQWpaR1ZtYVc1bElGQkpJRE11TVRReE5Ua3lOalV6TlRnNU56a3pDaU5rWldacGJtVWdVRWt5SURZdU1qZ3pNVGcxTXpBM01UYzVOVGcyQ2lOa1pXWnBibVVnVUVsZlNFRk1SaUF4TGpVM01EYzVOak15TmpjNU5EZzVOallLSTJSbFptbHVaU0JTUlVOSlVGSlBRMEZNWDFCSklEQXVNekU0TXpBNU9EZzJNVGd6Tnprd053b2paR1ZtYVc1bElGSkZRMGxRVWs5RFFVeGZVRWt5SURBdU1UVTVNVFUwT1RRek1Ea3hPRGsxTXpVS0kyUmxabWx1WlNCRlVGTkpURTlPSURGbExUWUtJMmxtYm1SbFppQnpZWFIxY21GMFpRb2paR1ZtYVc1bElITmhkSFZ5WVhSbEtDQmhJQ2tnWTJ4aGJYQW9JR0VzSURBdU1Dd2dNUzR3SUNrS0kyVnVaR2xtQ2lOa1pXWnBibVVnZDJocGRHVkRiMjF3YkdWdFpXNTBLQ0JoSUNrZ0tDQXhMakFnTFNCellYUjFjbUYwWlNnZ1lTQXBJQ2tLWm14dllYUWdjRzkzTWlnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnZUNBcElIc2djbVYwZFhKdUlIZ3FlRHNnZlFwbWJHOWhkQ0J3YjNjektDQmpiMjV6ZENCcGJpQm1iRzloZENCNElDa2dleUJ5WlhSMWNtNGdlQ3A0S25nN0lIMEtabXh2WVhRZ2NHOTNOQ2dnWTI5dWMzUWdhVzRnWm14dllYUWdlQ0FwSUhzZ1pteHZZWFFnZURJZ1BTQjRLbmc3SUhKbGRIVnliaUI0TWlwNE1qc2dmUXBtYkc5aGRDQnRZWGd6S0NCamIyNXpkQ0JwYmlCMlpXTXpJSFlnS1NCN0lISmxkSFZ5YmlCdFlYZ29JRzFoZUNnZ2RpNTRMQ0IyTG5rZ0tTd2dkaTU2SUNrN0lIMEtabXh2WVhRZ1lYWmxjbUZuWlNnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJqYjJ4dmNpQXBJSHNnY21WMGRYSnVJR1J2ZENnZ1kyOXNiM0lzSUhabFl6TW9JREF1TXpNek15QXBJQ2s3SUgwS2FHbG5hSEFnWm14dllYUWdjbUZ1WkNnZ1kyOXVjM1FnYVc0Z2RtVmpNaUIxZGlBcElIc0tDV052Ym5OMElHaHBaMmh3SUdac2IyRjBJR0VnUFNBeE1pNDVPRGs0TENCaUlEMGdOemd1TWpNekxDQmpJRDBnTkRNM05UZ3VOVFExTXpzS0NXaHBaMmh3SUdac2IyRjBJR1IwSUQwZ1pHOTBLQ0IxZGk1NGVTd2dkbVZqTWlnZ1lTeGlJQ2tnS1N3Z2MyNGdQU0J0YjJRb0lHUjBMQ0JRU1NBcE93b0pjbVYwZFhKdUlHWnlZV04wS0NCemFXNG9JSE51SUNrZ0tpQmpJQ2s3Q24wS0kybG1aR1ZtSUVoSlIwaGZVRkpGUTBsVFNVOU9DZ2xtYkc5aGRDQndjbVZqYVhOcGIyNVRZV1psVEdWdVozUm9LQ0IyWldNeklIWWdLU0I3SUhKbGRIVnliaUJzWlc1bmRHZ29JSFlnS1RzZ2ZRb2paV3h6WlFvSlpteHZZWFFnY0hKbFkybHphVzl1VTJGbVpVeGxibWQwYUNnZ2RtVmpNeUIySUNrZ2V3b0pDV1pzYjJGMElHMWhlRU52YlhCdmJtVnVkQ0E5SUcxaGVETW9JR0ZpY3lnZ2RpQXBJQ2s3Q2drSmNtVjBkWEp1SUd4bGJtZDBhQ2dnZGlBdklHMWhlRU52YlhCdmJtVnVkQ0FwSUNvZ2JXRjRRMjl0Y0c5dVpXNTBPd29KZlFvalpXNWthV1lLYzNSeWRXTjBJRWx1WTJsa1pXNTBUR2xuYUhRZ2V3b0pkbVZqTXlCamIyeHZjanNLQ1habFl6TWdaR2x5WldOMGFXOXVPd29KWW05dmJDQjJhWE5wWW14bE93cDlPd3B6ZEhKMVkzUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2V3b0pkbVZqTXlCa2FYSmxZM1JFYVdabWRYTmxPd29KZG1Wak15QmthWEpsWTNSVGNHVmpkV3hoY2pzS0NYWmxZek1nYVc1a2FYSmxZM1JFYVdabWRYTmxPd29KZG1Wak15QnBibVJwY21WamRGTndaV04xYkdGeU93cDlPd3B6ZEhKMVkzUWdSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQjdDZ2wyWldNeklIQnZjMmwwYVc5dU93b0pkbVZqTXlCdWIzSnRZV3c3Q2dsMlpXTXpJSFpwWlhkRWFYSTdDaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2dsMlpXTXpJR05zWldGeVkyOWhkRTV2Y20xaGJEc0tJMlZ1WkdsbUNuMDdDblpsWXpNZ2RISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQnBiaUIyWldNeklHUnBjaXdnYVc0Z2JXRjBOQ0J0WVhSeWFYZ2dLU0I3Q2dseVpYUjFjbTRnYm05eWJXRnNhWHBsS0NBb0lHMWhkSEpwZUNBcUlIWmxZelFvSUdScGNpd2dNQzR3SUNrZ0tTNTRlWG9nS1RzS2ZRcDJaV016SUdsdWRtVnljMlZVY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUdsdUlIWmxZek1nWkdseUxDQnBiaUJ0WVhRMElHMWhkSEpwZUNBcElIc0tDWEpsZEhWeWJpQnViM0p0WVd4cGVtVW9JQ2dnZG1Wak5DZ2daR2x5TENBd0xqQWdLU0FxSUcxaGRISnBlQ0FwTG5oNWVpQXBPd3A5Q20xaGRETWdkSEpoYm5Od2IzTmxUV0YwTXlnZ1kyOXVjM1FnYVc0Z2JXRjBNeUJ0SUNrZ2V3b0piV0YwTXlCMGJYQTdDZ2wwYlhCYklEQWdYU0E5SUhabFl6TW9JRzFiSURBZ1hTNTRMQ0J0V3lBeElGMHVlQ3dnYlZzZ01pQmRMbmdnS1RzS0NYUnRjRnNnTVNCZElEMGdkbVZqTXlnZ2JWc2dNQ0JkTG5rc0lHMWJJREVnWFM1NUxDQnRXeUF5SUYwdWVTQXBPd29KZEcxd1d5QXlJRjBnUFNCMlpXTXpLQ0J0V3lBd0lGMHVlaXdnYlZzZ01TQmRMbm9zSUcxYklESWdYUzU2SUNrN0NnbHlaWFIxY200Z2RHMXdPd3A5Q21ac2IyRjBJR3hwYm1WaGNsUnZVbVZzWVhScGRtVk1kVzFwYm1GdVkyVW9JR052Ym5OMElHbHVJSFpsWXpNZ1kyOXNiM0lnS1NCN0NnbDJaV016SUhkbGFXZG9kSE1nUFNCMlpXTXpLQ0F3TGpJeE1qWXNJREF1TnpFMU1pd2dNQzR3TnpJeUlDazdDZ2x5WlhSMWNtNGdaRzkwS0NCM1pXbG5hSFJ6TENCamIyeHZjaTV5WjJJZ0tUc0tmUXBpYjI5c0lHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JRzFoZERRZ2JTQXBJSHNLQ1hKbGRIVnliaUJ0V3lBeUlGMWJJRE1nWFNBOVBTQXRJREV1TURzS2ZRcDJaV015SUdWeGRXbHlaV04wVlhZb0lHbHVJSFpsWXpNZ1pHbHlJQ2tnZXdvSlpteHZZWFFnZFNBOUlHRjBZVzRvSUdScGNpNTZMQ0JrYVhJdWVDQXBJQ29nVWtWRFNWQlNUME5CVEY5UVNUSWdLeUF3TGpVN0NnbG1iRzloZENCMklEMGdZWE5wYmlnZ1kyeGhiWEFvSUdScGNpNTVMQ0F0SURFdU1Dd2dNUzR3SUNrZ0tTQXFJRkpGUTBsUVVrOURRVXhmVUVrZ0t5QXdMalU3Q2dseVpYUjFjbTRnZG1Wak1pZ2dkU3dnZGlBcE93cDlZQ3dnUW1ZZ1BTQmdJMmxtWkdWbUlFVk9WazFCVUY5VVdWQkZYME5WUWtWZlZWWUtDU05rWldacGJtVWdZM1ZpWlZWV1gyMWhlRTFwY0V4bGRtVnNJRGd1TUFvSkkyUmxabWx1WlNCamRXSmxWVlpmYldsdVRXbHdUR1YyWld3Z05DNHdDZ2tqWkdWbWFXNWxJR04xWW1WVlZsOXRZWGhVYVd4bFUybDZaU0F5TlRZdU1Bb0pJMlJsWm1sdVpTQmpkV0psVlZaZmJXbHVWR2xzWlZOcGVtVWdNVFl1TUFvSlpteHZZWFFnWjJWMFJtRmpaU2dnZG1Wak15QmthWEpsWTNScGIyNGdLU0I3Q2drSmRtVmpNeUJoWW5ORWFYSmxZM1JwYjI0Z1BTQmhZbk1vSUdScGNtVmpkR2x2YmlBcE93b0pDV1pzYjJGMElHWmhZMlVnUFNBdElERXVNRHNLQ1FscFppQW9JR0ZpYzBScGNtVmpkR2x2Ymk1NElENGdZV0p6UkdseVpXTjBhVzl1TG5vZ0tTQjdDZ2tKQ1dsbUlDZ2dZV0p6UkdseVpXTjBhVzl1TG5nZ1BpQmhZbk5FYVhKbFkzUnBiMjR1ZVNBcENna0pDUWxtWVdObElEMGdaR2x5WldOMGFXOXVMbmdnUGlBd0xqQWdQeUF3TGpBZ09pQXpMakE3Q2drSkNXVnNjMlVLQ1FrSkNXWmhZMlVnUFNCa2FYSmxZM1JwYjI0dWVTQStJREF1TUNBL0lERXVNQ0E2SURRdU1Ec0tDUWw5SUdWc2MyVWdld29KQ1FscFppQW9JR0ZpYzBScGNtVmpkR2x2Ymk1NklENGdZV0p6UkdseVpXTjBhVzl1TG5rZ0tRb0pDUWtKWm1GalpTQTlJR1JwY21WamRHbHZiaTU2SUQ0Z01DNHdJRDhnTWk0d0lEb2dOUzR3T3dvSkNRbGxiSE5sQ2drSkNRbG1ZV05sSUQwZ1pHbHlaV04wYVc5dUxua2dQaUF3TGpBZ1B5QXhMakFnT2lBMExqQTdDZ2tKZlFvSkNYSmxkSFZ5YmlCbVlXTmxPd29KZlFvSmRtVmpNaUJuWlhSVlZpZ2dkbVZqTXlCa2FYSmxZM1JwYjI0c0lHWnNiMkYwSUdaaFkyVWdLU0I3Q2drSmRtVmpNaUIxZGpzS0NRbHBaaUFvSUdaaFkyVWdQVDBnTUM0d0lDa2dld29KQ1FsMWRpQTlJSFpsWXpJb0lHUnBjbVZqZEdsdmJpNTZMQ0JrYVhKbFkzUnBiMjR1ZVNBcElDOGdZV0p6S0NCa2FYSmxZM1JwYjI0dWVDQXBPd29KQ1gwZ1pXeHpaU0JwWmlBb0lHWmhZMlVnUFQwZ01TNHdJQ2tnZXdvSkNRbDFkaUE5SUhabFl6SW9JQzBnWkdseVpXTjBhVzl1TG5nc0lDMGdaR2x5WldOMGFXOXVMbm9nS1NBdklHRmljeWdnWkdseVpXTjBhVzl1TG5rZ0tUc0tDUWw5SUdWc2MyVWdhV1lnS0NCbVlXTmxJRDA5SURJdU1DQXBJSHNLQ1FrSmRYWWdQU0IyWldNeUtDQXRJR1JwY21WamRHbHZiaTU0TENCa2FYSmxZM1JwYjI0dWVTQXBJQzhnWVdKektDQmthWEpsWTNScGIyNHVlaUFwT3dvSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdNeTR3SUNrZ2V3b0pDUWwxZGlBOUlIWmxZeklvSUMwZ1pHbHlaV04wYVc5dUxub3NJR1JwY21WamRHbHZiaTU1SUNrZ0x5QmhZbk1vSUdScGNtVmpkR2x2Ymk1NElDazdDZ2tKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBMExqQWdLU0I3Q2drSkNYVjJJRDBnZG1Wak1pZ2dMU0JrYVhKbFkzUnBiMjR1ZUN3Z1pHbHlaV04wYVc5dUxub2dLU0F2SUdGaWN5Z2daR2x5WldOMGFXOXVMbmtnS1RzS0NRbDlJR1ZzYzJVZ2V3b0pDUWwxZGlBOUlIWmxZeklvSUdScGNtVmpkR2x2Ymk1NExDQmthWEpsWTNScGIyNHVlU0FwSUM4Z1lXSnpLQ0JrYVhKbFkzUnBiMjR1ZWlBcE93b0pDWDBLQ1FseVpYUjFjbTRnTUM0MUlDb2dLQ0IxZGlBcklERXVNQ0FwT3dvSmZRb0pkbVZqTXlCaWFXeHBibVZoY2tOMVltVlZWaWdnYzJGdGNHeGxjakpFSUdWdWRrMWhjQ3dnZG1Wak15QmthWEpsWTNScGIyNHNJR1pzYjJGMElHMXBjRWx1ZENBcElIc0tDUWxtYkc5aGRDQm1ZV05sSUQwZ1oyVjBSbUZqWlNnZ1pHbHlaV04wYVc5dUlDazdDZ2tKWm14dllYUWdabWxzZEdWeVNXNTBJRDBnYldGNEtDQmpkV0psVlZaZmJXbHVUV2x3VEdWMlpXd2dMU0J0YVhCSmJuUXNJREF1TUNBcE93b0pDVzFwY0VsdWRDQTlJRzFoZUNnZ2JXbHdTVzUwTENCamRXSmxWVlpmYldsdVRXbHdUR1YyWld3Z0tUc0tDUWxtYkc5aGRDQm1ZV05sVTJsNlpTQTlJR1Y0Y0RJb0lHMXBjRWx1ZENBcE93b0pDV1pzYjJGMElIUmxlR1ZzVTJsNlpTQTlJREV1TUNBdklDZ2dNeTR3SUNvZ1kzVmlaVlZXWDIxaGVGUnBiR1ZUYVhwbElDazdDZ2tKZG1Wak1pQjFkaUE5SUdkbGRGVldLQ0JrYVhKbFkzUnBiMjRzSUdaaFkyVWdLU0FxSUNnZ1ptRmpaVk5wZW1VZ0xTQXhMakFnS1NBcklEQXVOVHNLQ1FscFppQW9JR1poWTJVZ1BpQXlMakFnS1NCN0Nna0pDWFYyTG5rZ0t6MGdabUZqWlZOcGVtVTdDZ2tKQ1daaFkyVWdMVDBnTXk0d093b0pDWDBLQ1FsMWRpNTRJQ3M5SUdaaFkyVWdLaUJtWVdObFUybDZaVHNLQ1FscFppQW9JRzFwY0VsdWRDQThJR04xWW1WVlZsOXRZWGhOYVhCTVpYWmxiQ0FwSUhzS0NRa0pkWFl1ZVNBclBTQXlMakFnS2lCamRXSmxWVlpmYldGNFZHbHNaVk5wZW1VN0Nna0pmUW9KQ1hWMkxua2dLejBnWm1sc2RHVnlTVzUwSUNvZ01pNHdJQ29nWTNWaVpWVldYMjFwYmxScGJHVlRhWHBsT3dvSkNYVjJMbmdnS3owZ015NHdJQ29nYldGNEtDQXdMakFzSUdOMVltVlZWbDl0WVhoVWFXeGxVMmw2WlNBdElESXVNQ0FxSUdaaFkyVlRhWHBsSUNrN0Nna0pkWFlnS2owZ2RHVjRaV3hUYVhwbE93b0pDWEpsZEhWeWJpQjBaWGgwZFhKbE1rUW9JR1Z1ZGsxaGNDd2dkWFlnS1M1eVoySTdDZ2w5Q2dralpHVm1hVzVsSUhJd0lERXVNQW9KSTJSbFptbHVaU0IyTUNBd0xqTXpPUW9KSTJSbFptbHVaU0J0TUNBdElESXVNQW9KSTJSbFptbHVaU0J5TVNBd0xqZ0tDU05rWldacGJtVWdkakVnTUM0eU56WUtDU05rWldacGJtVWdiVEVnTFNBeExqQUtDU05rWldacGJtVWdjalFnTUM0MENna2paR1ZtYVc1bElIWTBJREF1TURRMkNna2paR1ZtYVc1bElHMDBJREl1TUFvSkkyUmxabWx1WlNCeU5TQXdMak13TlFvSkkyUmxabWx1WlNCMk5TQXdMakF4TmdvSkkyUmxabWx1WlNCdE5TQXpMakFLQ1NOa1pXWnBibVVnY2pZZ01DNHlNUW9KSTJSbFptbHVaU0IyTmlBd0xqQXdNemdLQ1NOa1pXWnBibVVnYlRZZ05DNHdDZ2xtYkc5aGRDQnliM1ZuYUc1bGMzTlViMDFwY0NnZ1pteHZZWFFnY205MVoyaHVaWE56SUNrZ2V3b0pDV1pzYjJGMElHMXBjQ0E5SURBdU1Ec0tDUWxwWmlBb0lISnZkV2RvYm1WemN5QStQU0J5TVNBcElIc0tDUWtKYldsd0lEMGdLQ0J5TUNBdElISnZkV2RvYm1WemN5QXBJQ29nS0NCdE1TQXRJRzB3SUNrZ0x5QW9JSEl3SUMwZ2NqRWdLU0FySUcwd093b0pDWDBnWld4elpTQnBaaUFvSUhKdmRXZG9ibVZ6Y3lBK1BTQnlOQ0FwSUhzS0NRa0piV2x3SUQwZ0tDQnlNU0F0SUhKdmRXZG9ibVZ6Y3lBcElDb2dLQ0J0TkNBdElHMHhJQ2tnTHlBb0lISXhJQzBnY2pRZ0tTQXJJRzB4T3dvSkNYMGdaV3h6WlNCcFppQW9JSEp2ZFdkb2JtVnpjeUErUFNCeU5TQXBJSHNLQ1FrSmJXbHdJRDBnS0NCeU5DQXRJSEp2ZFdkb2JtVnpjeUFwSUNvZ0tDQnROU0F0SUcwMElDa2dMeUFvSUhJMElDMGdjalVnS1NBcklHMDBPd29KQ1gwZ1pXeHpaU0JwWmlBb0lISnZkV2RvYm1WemN5QStQU0J5TmlBcElIc0tDUWtKYldsd0lEMGdLQ0J5TlNBdElISnZkV2RvYm1WemN5QXBJQ29nS0NCdE5pQXRJRzAxSUNrZ0x5QW9JSEkxSUMwZ2NqWWdLU0FySUcwMU93b0pDWDBnWld4elpTQjdDZ2tKQ1cxcGNDQTlJQzBnTWk0d0lDb2diRzluTWlnZ01TNHhOaUFxSUhKdmRXZG9ibVZ6Y3lBcE93a0pmUW9KQ1hKbGRIVnliaUJ0YVhBN0NnbDlDZ2wyWldNMElIUmxlSFIxY21WRGRXSmxWVllvSUhOaGJYQnNaWEl5UkNCbGJuWk5ZWEFzSUhabFl6TWdjMkZ0Y0d4bFJHbHlMQ0JtYkc5aGRDQnliM1ZuYUc1bGMzTWdLU0I3Q2drSlpteHZZWFFnYldsd0lEMGdZMnhoYlhBb0lISnZkV2RvYm1WemMxUnZUV2x3S0NCeWIzVm5hRzVsYzNNZ0tTd2diVEFzSUdOMVltVlZWbDl0WVhoTmFYQk1aWFpsYkNBcE93b0pDV1pzYjJGMElHMXBjRVlnUFNCbWNtRmpkQ2dnYldsd0lDazdDZ2tKWm14dllYUWdiV2x3U1c1MElEMGdabXh2YjNJb0lHMXBjQ0FwT3dvSkNYWmxZek1nWTI5c2IzSXdJRDBnWW1sc2FXNWxZWEpEZFdKbFZWWW9JR1Z1ZGsxaGNDd2djMkZ0Y0d4bFJHbHlMQ0J0YVhCSmJuUWdLVHNLQ1FscFppQW9JRzFwY0VZZ1BUMGdNQzR3SUNrZ2V3b0pDUWx5WlhSMWNtNGdkbVZqTkNnZ1kyOXNiM0l3TENBeExqQWdLVHNLQ1FsOUlHVnNjMlVnZXdvSkNRbDJaV016SUdOdmJHOXlNU0E5SUdKcGJHbHVaV0Z5UTNWaVpWVldLQ0JsYm5aTllYQXNJSE5oYlhCc1pVUnBjaXdnYldsd1NXNTBJQ3NnTVM0d0lDazdDZ2tKQ1hKbGRIVnliaUIyWldNMEtDQnRhWGdvSUdOdmJHOXlNQ3dnWTI5c2IzSXhMQ0J0YVhCR0lDa3NJREV1TUNBcE93b0pDWDBLQ1gwS0kyVnVaR2xtWUN3Z2VtWWdQU0JnZG1Wak15QjBjbUZ1YzJadmNtMWxaRTV2Y20xaGJDQTlJRzlpYW1WamRFNXZjbTFoYkRzS0kybG1aR1ZtSUZWVFJWOUpUbE5VUVU1RFNVNUhDZ2x0WVhReklHMGdQU0J0WVhRektDQnBibk4wWVc1alpVMWhkSEpwZUNBcE93b0pkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd2dMejBnZG1Wak15Z2daRzkwS0NCdFd5QXdJRjBzSUcxYklEQWdYU0FwTENCa2IzUW9JRzFiSURFZ1hTd2diVnNnTVNCZElDa3NJR1J2ZENnZ2JWc2dNaUJkTENCdFd5QXlJRjBnS1NBcE93b0pkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd2dQU0J0SUNvZ2RISmhibk5tYjNKdFpXUk9iM0p0WVd3N0NpTmxibVJwWmdwMGNtRnVjMlp2Y20xbFpFNXZjbTFoYkNBOUlHNXZjbTFoYkUxaGRISnBlQ0FxSUhSeVlXNXpabTl5YldWa1RtOXliV0ZzT3dvamFXWmtaV1lnUmt4SlVGOVRTVVJGUkFvSmRISmhibk5tYjNKdFpXUk9iM0p0WVd3Z1BTQXRJSFJ5WVc1elptOXliV1ZrVG05eWJXRnNPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2wyWldNeklIUnlZVzV6Wm05eWJXVmtWR0Z1WjJWdWRDQTlJQ2dnYlc5a1pXeFdhV1YzVFdGMGNtbDRJQ29nZG1Wak5DZ2diMkpxWldOMFZHRnVaMlZ1ZEN3Z01DNHdJQ2tnS1M1NGVYbzdDZ2tqYVdaa1pXWWdSa3hKVUY5VFNVUkZSQW9KQ1hSeVlXNXpabTl5YldWa1ZHRnVaMlZ1ZENBOUlDMGdkSEpoYm5ObWIzSnRaV1JVWVc1blpXNTBPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRlZtSUQwZ1lDTnBabVJsWmlCVlUwVmZSRWxUVUV4QlEwVk5SVTVVVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmthWE53YkdGalpXMWxiblJOWVhBN0NnbDFibWxtYjNKdElHWnNiMkYwSUdScGMzQnNZV05sYldWdWRGTmpZV3hsT3dvSmRXNXBabTl5YlNCbWJHOWhkQ0JrYVhOd2JHRmpaVzFsYm5SQ2FXRnpPd29qWlc1a2FXWmdMQ0JQWmlBOUlHQWphV1prWldZZ1ZWTkZYMFJKVTFCTVFVTkZUVVZPVkUxQlVBb0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JtOXliV0ZzYVhwbEtDQnZZbXBsWTNST2IzSnRZV3dnS1NBcUlDZ2dkR1Y0ZEhWeVpUSkVLQ0JrYVhOd2JHRmpaVzFsYm5STllYQXNJSFpWZGlBcExuZ2dLaUJrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0FySUdScGMzQnNZV05sYldWdWRFSnBZWE1nS1RzS0kyVnVaR2xtWUN3Z1NHWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRVbFRVMGxXUlUxQlVBb0pkbVZqTkNCbGJXbHpjMmwyWlVOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCbGJXbHpjMmwyWlUxaGNDd2dkbFYySUNrN0NnbGxiV2x6YzJsMlpVTnZiRzl5TG5KbllpQTlJR1Z0YVhOemFYWmxUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2daVzFwYzNOcGRtVkRiMnh2Y2lBcExuSm5ZanNLQ1hSdmRHRnNSVzFwYzNOcGRtVlNZV1JwWVc1alpTQXFQU0JsYldsemMybDJaVU52Ykc5eUxuSm5ZanNLSTJWdVpHbG1ZQ3dnYTJZZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVFVsVFUwbFdSVTFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1pXMXBjM05wZG1WTllYQTdDaU5sYm1ScFptQXNJRWRtSUQwZ0ltZHNYMFp5WVdkRGIyeHZjaUE5SUd4cGJtVmhjbFJ2VDNWMGNIVjBWR1Y0Wld3b0lHZHNYMFp5WVdkRGIyeHZjaUFwT3lJc0lGWm1JRDBnWUhabFl6UWdUR2x1WldGeVZHOU1hVzVsWVhJb0lHbHVJSFpsWXpRZ2RtRnNkV1VnS1NCN0NnbHlaWFIxY200Z2RtRnNkV1U3Q24wS2RtVmpOQ0J6VWtkQ1ZHOU1hVzVsWVhJb0lHbHVJSFpsWXpRZ2RtRnNkV1VnS1NCN0NnbHlaWFIxY200Z2RtVmpOQ2dnYldsNEtDQndiM2NvSUhaaGJIVmxMbkpuWWlBcUlEQXVPVFEzT0RZM01qazROaUFySUhabFl6TW9JREF1TURVeU1UTXlOekF4TkNBcExDQjJaV016S0NBeUxqUWdLU0FwTENCMllXeDFaUzV5WjJJZ0tpQXdMakEzTnpNNU9UTTRNRGdzSUhabFl6TW9JR3hsYzNOVWFHRnVSWEYxWVd3b0lIWmhiSFZsTG5Kbllpd2dkbVZqTXlnZ01DNHdOREEwTlNBcElDa2dLU0FwTENCMllXeDFaUzVoSUNrN0NuMEtkbVZqTkNCTWFXNWxZWEpVYjNOU1IwSW9JR2x1SUhabFl6UWdkbUZzZFdVZ0tTQjdDZ2x5WlhSMWNtNGdkbVZqTkNnZ2JXbDRLQ0J3YjNjb0lIWmhiSFZsTG5Kbllpd2dkbVZqTXlnZ01DNDBNVFkyTmlBcElDa2dLaUF4TGpBMU5TQXRJSFpsWXpNb0lEQXVNRFUxSUNrc0lIWmhiSFZsTG5KbllpQXFJREV5TGpreUxDQjJaV016S0NCc1pYTnpWR2hoYmtWeGRXRnNLQ0IyWVd4MVpTNXlaMklzSUhabFl6TW9JREF1TURBek1UTXdPQ0FwSUNrZ0tTQXBMQ0IyWVd4MVpTNWhJQ2s3Q24xZ0xDQlhaaUE5SUdBamFXWmtaV1lnVlZORlgwVk9WazFCVUFvSkkybG1aR1ZtSUVWT1ZsOVhUMUpNUkZCUFV3b0pDWFpsWXpNZ1kyRnRaWEpoVkc5R2NtRm5Pd29KQ1dsbUlDZ2dhWE5QY25Sb2IyZHlZWEJvYVdNZ0tTQjdDZ2tKQ1dOaGJXVnlZVlJ2Um5KaFp5QTlJRzV2Y20xaGJHbDZaU2dnZG1Wak15Z2dMU0IyYVdWM1RXRjBjbWw0V3lBd0lGMWJJRElnWFN3Z0xTQjJhV1YzVFdGMGNtbDRXeUF4SUYxYklESWdYU3dnTFNCMmFXVjNUV0YwY21sNFd5QXlJRjFiSURJZ1hTQXBJQ2s3Q2drSmZTQmxiSE5sSUhzS0NRa0pZMkZ0WlhKaFZHOUdjbUZuSUQwZ2JtOXliV0ZzYVhwbEtDQjJWMjl5YkdSUWIzTnBkR2x2YmlBdElHTmhiV1Z5WVZCdmMybDBhVzl1SUNrN0Nna0pmUW9KQ1habFl6TWdkMjl5YkdST2IzSnRZV3dnUFNCcGJuWmxjbk5sVkhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCdWIzSnRZV3dzSUhacFpYZE5ZWFJ5YVhnZ0tUc0tDUWtqYVdaa1pXWWdSVTVXVFVGUVgwMVBSRVZmVWtWR1RFVkRWRWxQVGdvSkNRbDJaV016SUhKbFpteGxZM1JXWldNZ1BTQnlaV1pzWldOMEtDQmpZVzFsY21GVWIwWnlZV2NzSUhkdmNteGtUbTl5YldGc0lDazdDZ2tKSTJWc2MyVUtDUWtKZG1Wak15QnlaV1pzWldOMFZtVmpJRDBnY21WbWNtRmpkQ2dnWTJGdFpYSmhWRzlHY21GbkxDQjNiM0pzWkU1dmNtMWhiQ3dnY21WbWNtRmpkR2x2YmxKaGRHbHZJQ2s3Q2drSkkyVnVaR2xtQ2dralpXeHpaUW9KQ1habFl6TWdjbVZtYkdWamRGWmxZeUE5SUhaU1pXWnNaV04wT3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnUlU1V1RVRlFYMVJaVUVWZlExVkNSUW9KQ1habFl6UWdaVzUyUTI5c2IzSWdQU0IwWlhoMGRYSmxRM1ZpWlNnZ1pXNTJUV0Z3TENCMlpXTXpLQ0JtYkdsd1JXNTJUV0Z3SUNvZ2NtVm1iR1ZqZEZabFl5NTRMQ0J5Wldac1pXTjBWbVZqTG5sNklDa2dLVHNLQ1FsbGJuWkRiMnh2Y2lBOUlHVnVkazFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JR1Z1ZGtOdmJHOXlJQ2s3Q2dralpXeHBaaUJrWldacGJtVmtLQ0JGVGxaTlFWQmZWRmxRUlY5RFZVSkZYMVZXSUNrS0NRbDJaV00wSUdWdWRrTnZiRzl5SUQwZ2RHVjRkSFZ5WlVOMVltVlZWaWdnWlc1MlRXRndMQ0J5Wldac1pXTjBWbVZqTENBd0xqQWdLVHNLQ1NObGJITmxDZ2tKZG1Wak5DQmxiblpEYjJ4dmNpQTlJSFpsWXpRb0lEQXVNQ0FwT3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnUlU1V1RVRlFYMEpNUlU1RVNVNUhYMDFWVEZSSlVFeFpDZ2tKYjNWMFoyOXBibWRNYVdkb2RDQTlJRzFwZUNnZ2IzVjBaMjlwYm1kTWFXZG9kQ3dnYjNWMFoyOXBibWRNYVdkb2RDQXFJR1Z1ZGtOdmJHOXlMbmg1ZWl3Z2MzQmxZM1ZzWVhKVGRISmxibWQwYUNBcUlISmxabXhsWTNScGRtbDBlU0FwT3dvSkkyVnNhV1lnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMEpNUlU1RVNVNUhYMDFKV0NBcENna0piM1YwWjI5cGJtZE1hV2RvZENBOUlHMXBlQ2dnYjNWMFoyOXBibWRNYVdkb2RDd2daVzUyUTI5c2IzSXVlSGw2TENCemNHVmpkV3hoY2xOMGNtVnVaM1JvSUNvZ2NtVm1iR1ZqZEdsMmFYUjVJQ2s3Q2dralpXeHBaaUJrWldacGJtVmtLQ0JGVGxaTlFWQmZRa3hGVGtSSlRrZGZRVVJFSUNrS0NRbHZkWFJuYjJsdVoweHBaMmgwSUNzOUlHVnVka052Ykc5eUxuaDVlaUFxSUhOd1pXTjFiR0Z5VTNSeVpXNW5kR2dnS2lCeVpXWnNaV04wYVhacGRIazdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2djV1lnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUbFpOUVZBS0NYVnVhV1p2Y20wZ1pteHZZWFFnWlc1MlRXRndTVzUwWlc1emFYUjVPd29KZFc1cFptOXliU0JtYkc5aGRDQm1iR2x3Ulc1MlRXRndPd29KSTJsbVpHVm1JRVZPVmsxQlVGOVVXVkJGWDBOVlFrVUtDUWwxYm1sbWIzSnRJSE5oYlhCc1pYSkRkV0psSUdWdWRrMWhjRHNLQ1NObGJITmxDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWlc1MlRXRndPd29KSTJWdVpHbG1DZ2tLSTJWdVpHbG1ZQ3dnV0dZZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVGxaTlFWQUtDWFZ1YVdadmNtMGdabXh2WVhRZ2NtVm1iR1ZqZEdsMmFYUjVPd29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlDVlUxUVRVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMDVQVWsxQlRFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGQklUMDVISUNrS0NRa2paR1ZtYVc1bElFVk9WbDlYVDFKTVJGQlBVd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXWDFkUFVreEVVRTlUQ2drSmRtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pGQnZjMmwwYVc5dU93b0pDWFZ1YVdadmNtMGdabXh2WVhRZ2NtVm1jbUZqZEdsdmJsSmhkR2x2T3dvSkkyVnNjMlVLQ1FsMllYSjVhVzVuSUhabFl6TWdkbEpsWm14bFkzUTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dTbVlnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUbFpOUVZBS0NTTnBaaUJrWldacGJtVmtLQ0JWVTBWZlFsVk5VRTFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRlZUUlY5T1QxSk5RVXhOUVZBZ0tTQjhmR1JsWm1sdVpXUW9JRkJJVDA1SElDa0tDUWtqWkdWbWFXNWxJRVZPVmw5WFQxSk1SRkJQVXdvSkkyVnVaR2xtQ2dramFXWmtaV1lnUlU1V1gxZFBVa3hFVUU5VENna0pDZ2tKZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkZCdmMybDBhVzl1T3dvSkkyVnNjMlVLQ1FsMllYSjVhVzVuSUhabFl6TWdkbEpsWm14bFkzUTdDZ2tKZFc1cFptOXliU0JtYkc5aGRDQnlaV1p5WVdOMGFXOXVVbUYwYVc4N0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1dXWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRsWk5RVkFLQ1NOcFptUmxaaUJGVGxaZlYwOVNURVJRVDFNS0NRbDJWMjl5YkdSUWIzTnBkR2x2YmlBOUlIZHZjbXhrVUc5emFYUnBiMjR1ZUhsNk93b0pJMlZzYzJVS0NRbDJaV016SUdOaGJXVnlZVlJ2Vm1WeWRHVjRPd29KQ1dsbUlDZ2dhWE5QY25Sb2IyZHlZWEJvYVdNZ0tTQjdDZ2tKQ1dOaGJXVnlZVlJ2Vm1WeWRHVjRJRDBnYm05eWJXRnNhWHBsS0NCMlpXTXpLQ0F0SUhacFpYZE5ZWFJ5YVhoYklEQWdYVnNnTWlCZExDQXRJSFpwWlhkTllYUnlhWGhiSURFZ1hWc2dNaUJkTENBdElIWnBaWGROWVhSeWFYaGJJRElnWFZzZ01pQmRJQ2tnS1RzS0NRbDlJR1ZzYzJVZ2V3b0pDUWxqWVcxbGNtRlViMVpsY25SbGVDQTlJRzV2Y20xaGJHbDZaU2dnZDI5eWJHUlFiM05wZEdsdmJpNTRlWG9nTFNCallXMWxjbUZRYjNOcGRHbHZiaUFwT3dvSkNYMEtDUWwyWldNeklIZHZjbXhrVG05eWJXRnNJRDBnYVc1MlpYSnpaVlJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnZEhKaGJuTm1iM0p0WldST2IzSnRZV3dzSUhacFpYZE5ZWFJ5YVhnZ0tUc0tDUWtqYVdaa1pXWWdSVTVXVFVGUVgwMVBSRVZmVWtWR1RFVkRWRWxQVGdvSkNRbDJVbVZtYkdWamRDQTlJSEpsWm14bFkzUW9JR05oYldWeVlWUnZWbVZ5ZEdWNExDQjNiM0pzWkU1dmNtMWhiQ0FwT3dvSkNTTmxiSE5sQ2drSkNYWlNaV1pzWldOMElEMGdjbVZtY21GamRDZ2dZMkZ0WlhKaFZHOVdaWEowWlhnc0lIZHZjbXhrVG05eWJXRnNMQ0J5WldaeVlXTjBhVzl1VW1GMGFXOGdLVHNLQ1FralpXNWthV1lLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JhWmlBOUlHQWphV1prWldZZ1ZWTkZYMFpQUndvSmRrWnZaMFJsY0hSb0lEMGdMU0J0ZGxCdmMybDBhVzl1TG5vN0NpTmxibVJwWm1Bc0lDUm1JRDBnWUNOcFptUmxaaUJWVTBWZlJrOUhDZ2wyWVhKNWFXNW5JR1pzYjJGMElIWkdiMmRFWlhCMGFEc0tJMlZ1WkdsbVlDd2dhbVlnUFNCZ0kybG1aR1ZtSUZWVFJWOUdUMGNLQ1NOcFptUmxaaUJHVDBkZlJWaFFNZ29KQ1dac2IyRjBJR1p2WjBaaFkzUnZjaUE5SURFdU1DQXRJR1Y0Y0NnZ0xTQm1iMmRFWlc1emFYUjVJQ29nWm05blJHVnVjMmwwZVNBcUlIWkdiMmRFWlhCMGFDQXFJSFpHYjJkRVpYQjBhQ0FwT3dvSkkyVnNjMlVLQ1FsbWJHOWhkQ0JtYjJkR1lXTjBiM0lnUFNCemJXOXZkR2h6ZEdWd0tDQm1iMmRPWldGeUxDQm1iMmRHWVhJc0lIWkdiMmRFWlhCMGFDQXBPd29KSTJWdVpHbG1DZ2xuYkY5R2NtRm5RMjlzYjNJdWNtZGlJRDBnYldsNEtDQm5iRjlHY21GblEyOXNiM0l1Y21kaUxDQm1iMmREYjJ4dmNpd2dabTluUm1GamRHOXlJQ2s3Q2lObGJtUnBabUFzSUZGbUlEMGdZQ05wWm1SbFppQlZVMFZmUms5SENnbDFibWxtYjNKdElIWmxZek1nWm05blEyOXNiM0k3Q2dsMllYSjVhVzVuSUdac2IyRjBJSFpHYjJkRVpYQjBhRHNLQ1NOcFptUmxaaUJHVDBkZlJWaFFNZ29KQ1hWdWFXWnZjbTBnWm14dllYUWdabTluUkdWdWMybDBlVHNLQ1NObGJITmxDZ2tKZFc1cFptOXliU0JtYkc5aGRDQm1iMmRPWldGeU93b0pDWFZ1YVdadmNtMGdabXh2WVhRZ1ptOW5SbUZ5T3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUV0bUlEMGdZQ05wWm1SbFppQlZVMFZmUjFKQlJFbEZUbFJOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHZHlZV1JwWlc1MFRXRndPd29qWlc1a2FXWUtkbVZqTXlCblpYUkhjbUZrYVdWdWRFbHljbUZrYVdGdVkyVW9JSFpsWXpNZ2JtOXliV0ZzTENCMlpXTXpJR3hwWjJoMFJHbHlaV04wYVc5dUlDa2dld29KWm14dllYUWdaRzkwVGt3Z1BTQmtiM1FvSUc1dmNtMWhiQ3dnYkdsbmFIUkVhWEpsWTNScGIyNGdLVHNLQ1habFl6SWdZMjl2Y21RZ1BTQjJaV015S0NCa2IzUk9UQ0FxSURBdU5TQXJJREF1TlN3Z01DNHdJQ2s3Q2dramFXWmtaV1lnVlZORlgwZFNRVVJKUlU1VVRVRlFDZ2tKY21WMGRYSnVJSFpsWXpNb0lIUmxlSFIxY21VeVJDZ2daM0poWkdsbGJuUk5ZWEFzSUdOdmIzSmtJQ2t1Y2lBcE93b0pJMlZzYzJVS0NRbHlaWFIxY200Z0tDQmpiMjl5WkM1NElEd2dNQzQzSUNrZ1B5QjJaV016S0NBd0xqY2dLU0E2SUhabFl6TW9JREV1TUNBcE93b0pJMlZ1WkdsbUNuMWdMQ0JsY0NBOUlHQWphV1prWldZZ1ZWTkZYMHhKUjBoVVRVRlFDZ2wyWldNMElHeHBaMmgwVFdGd1ZHVjRaV3dnUFNCMFpYaDBkWEpsTWtRb0lHeHBaMmgwVFdGd0xDQjJWWFl5SUNrN0NnbDJaV016SUd4cFoyaDBUV0Z3U1hKeVlXUnBZVzVqWlNBOUlHeHBaMmgwVFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnYkdsbmFIUk5ZWEJVWlhobGJDQXBMbkpuWWlBcUlHeHBaMmgwVFdGd1NXNTBaVzV6YVhSNU93b0pJMmxtYm1SbFppQlFTRmxUU1VOQlRFeFpYME5QVWxKRlExUmZURWxIU0ZSVENna0piR2xuYUhSTllYQkpjbkpoWkdsaGJtTmxJQ285SUZCSk93b0pJMlZ1WkdsbUNnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ2JHbG5hSFJOWVhCSmNuSmhaR2xoYm1ObE93b2paVzVrYVdaZ0xDQjBjQ0E5SUdBamFXWmtaV1lnVlZORlgweEpSMGhVVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnNhV2RvZEUxaGNEc0tDWFZ1YVdadmNtMGdabXh2WVhRZ2JHbG5hSFJOWVhCSmJuUmxibk5wZEhrN0NpTmxibVJwWm1Bc0lHNXdJRDBnWUhabFl6TWdaR2xtWm5WelpTQTlJSFpsWXpNb0lERXVNQ0FwT3dwSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1T3dwblpXOXRaWFJ5ZVM1d2IzTnBkR2x2YmlBOUlHMTJVRzl6YVhScGIyNHVlSGw2T3dwblpXOXRaWFJ5ZVM1dWIzSnRZV3dnUFNCdWIzSnRZV3hwZW1Vb0lIUnlZVzV6Wm05eWJXVmtUbTl5YldGc0lDazdDbWRsYjIxbGRISjVMblpwWlhkRWFYSWdQU0FvSUdselQzSjBhRzluY21Gd2FHbGpJQ2tnUHlCMlpXTXpLQ0F3TENBd0xDQXhJQ2tnT2lCdWIzSnRZV3hwZW1Vb0lDMXRkbEJ2YzJsMGFXOXVMbmg1ZWlBcE93cEhaVzl0WlhSeWFXTkRiMjUwWlhoMElHSmhZMnRIWlc5dFpYUnllVHNLWW1GamEwZGxiMjFsZEhKNUxuQnZjMmwwYVc5dUlEMGdaMlZ2YldWMGNua3VjRzl6YVhScGIyNDdDbUpoWTJ0SFpXOXRaWFJ5ZVM1dWIzSnRZV3dnUFNBdFoyVnZiV1YwY25rdWJtOXliV0ZzT3dwaVlXTnJSMlZ2YldWMGNua3VkbWxsZDBScGNpQTlJR2RsYjIxbGRISjVMblpwWlhkRWFYSTdDblpNYVdkb2RFWnliMjUwSUQwZ2RtVmpNeWdnTUM0d0lDazdDblpKYm1ScGNtVmpkRVp5YjI1MElEMGdkbVZqTXlnZ01DNHdJQ2s3Q2lOcFptUmxaaUJFVDFWQ1RFVmZVMGxFUlVRS0NYWk1hV2RvZEVKaFkyc2dQU0IyWldNektDQXdMakFnS1RzS0NYWkpibVJwY21WamRFSmhZMnNnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tJMlZ1WkdsbUNrbHVZMmxrWlc1MFRHbG5hSFFnWkdseVpXTjBUR2xuYUhRN0NtWnNiMkYwSUdSdmRFNU1Pd3AyWldNeklHUnBjbVZqZEV4cFoyaDBRMjlzYjNKZlJHbG1ablZ6WlRzS2RrbHVaR2x5WldOMFJuSnZiblFnS3owZ1oyVjBRVzFpYVdWdWRFeHBaMmgwU1hKeVlXUnBZVzVqWlNnZ1lXMWlhV1Z1ZEV4cFoyaDBRMjlzYjNJZ0tUc0tka2x1WkdseVpXTjBSbkp2Ym5RZ0t6MGdaMlYwVEdsbmFIUlFjbTlpWlVseWNtRmthV0Z1WTJVb0lHeHBaMmgwVUhKdlltVXNJR2RsYjIxbGRISjVMbTV2Y20xaGJDQXBPd29qYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2dsMlNXNWthWEpsWTNSQ1lXTnJJQ3M5SUdkbGRFRnRZbWxsYm5STWFXZG9kRWx5Y21Ga2FXRnVZMlVvSUdGdFltbGxiblJNYVdkb2RFTnZiRzl5SUNrN0NnbDJTVzVrYVhKbFkzUkNZV05ySUNzOUlHZGxkRXhwWjJoMFVISnZZbVZKY25KaFpHbGhibU5sS0NCc2FXZG9kRkJ5YjJKbExDQmlZV05yUjJWdmJXVjBjbmt1Ym05eWJXRnNJQ2s3Q2lObGJtUnBaZ29qYVdZZ1RsVk5YMUJQU1U1VVgweEpSMGhVVXlBK0lEQUtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOVFUMGxPVkY5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSloyVjBVRzlwYm5STWFXZG9kRWx1Wm04b0lIQnZhVzUwVEdsbmFIUnpXeUJwSUYwc0lHZGxiMjFsZEhKNUxDQmthWEpsWTNSTWFXZG9kQ0FwT3dvSkNXUnZkRTVNSUQwZ1pHOTBLQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJR1JwY21WamRFeHBaMmgwTG1ScGNtVmpkR2x2YmlBcE93b0pDV1JwY21WamRFeHBaMmgwUTI5c2IzSmZSR2xtWm5WelpTQTlJR1JwY21WamRFeHBaMmgwTG1OdmJHOXlPd29KQ1haTWFXZG9kRVp5YjI1MElDczlJSE5oZEhWeVlYUmxLQ0JrYjNST1RDQXBJQ29nWkdseVpXTjBUR2xuYUhSRGIyeHZjbDlFYVdabWRYTmxPd29KQ1NOcFptUmxaaUJFVDFWQ1RFVmZVMGxFUlVRS0NRa0pka3hwWjJoMFFtRmpheUFyUFNCellYUjFjbUYwWlNnZ0xTQmtiM1JPVENBcElDb2daR2x5WldOMFRHbG5hSFJEYjJ4dmNsOUVhV1ptZFhObE93b0pDU05sYm1ScFpnb0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtJMlZ1WkdsbUNpTnBaaUJPVlUxZlUxQlBWRjlNU1VkSVZGTWdQaUF3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVTFCUFZGOU1TVWRJVkZNN0lHa2dLeXNnS1NCN0Nna0paMlYwVTNCdmRFeHBaMmgwU1c1bWJ5Z2djM0J2ZEV4cFoyaDBjMXNnYVNCZExDQm5aVzl0WlhSeWVTd2daR2x5WldOMFRHbG5hSFFnS1RzS0NRbGtiM1JPVENBOUlHUnZkQ2dnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tUc0tDUWxrYVhKbFkzUk1hV2RvZEVOdmJHOXlYMFJwWm1aMWMyVWdQU0JrYVhKbFkzUk1hV2RvZEM1amIyeHZjanNLQ1FsMlRHbG5hSFJHY205dWRDQXJQU0J6WVhSMWNtRjBaU2dnWkc5MFRrd2dLU0FxSUdScGNtVmpkRXhwWjJoMFEyOXNiM0pmUkdsbVpuVnpaVHNLQ1FramFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNna0pDWFpNYVdkb2RFSmhZMnNnS3owZ2MyRjBkWEpoZEdVb0lDMGdaRzkwVGt3Z0tTQXFJR1JwY21WamRFeHBaMmgwUTI5c2IzSmZSR2xtWm5WelpUc0tDUWtqWlc1a2FXWUtDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFpnb2phV1lnVGxWTlgwUkpVbDlNU1VkSVZGTWdQaUF3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmUkVsU1gweEpSMGhVVXpzZ2FTQXJLeUFwSUhzS0NRbG5aWFJFYVhKbFkzUnBiMjVoYkV4cFoyaDBTVzVtYnlnZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEhOYklHa2dYU3dnWjJWdmJXVjBjbmtzSUdScGNtVmpkRXhwWjJoMElDazdDZ2tKWkc5MFRrd2dQU0JrYjNRb0lHZGxiMjFsZEhKNUxtNXZjbTFoYkN3Z1pHbHlaV04wVEdsbmFIUXVaR2x5WldOMGFXOXVJQ2s3Q2drSlpHbHlaV04wVEdsbmFIUkRiMnh2Y2w5RWFXWm1kWE5sSUQwZ1pHbHlaV04wVEdsbmFIUXVZMjlzYjNJN0Nna0pka3hwWjJoMFJuSnZiblFnS3owZ2MyRjBkWEpoZEdVb0lHUnZkRTVNSUNrZ0tpQmthWEpsWTNSTWFXZG9kRU52Ykc5eVgwUnBabVoxYzJVN0Nna0pJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KQ1FsMlRHbG5hSFJDWVdOcklDczlJSE5oZEhWeVlYUmxLQ0F0SUdSdmRFNU1JQ2tnS2lCa2FYSmxZM1JNYVdkb2RFTnZiRzl5WDBScFptWjFjMlU3Q2drSkkyVnVaR2xtQ2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvalpXNWthV1lLSTJsbUlFNVZUVjlJUlUxSlgweEpSMGhVVXlBK0lEQUtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOUlSVTFKWDB4SlIwaFVVenNnYVNBckt5QXBJSHNLQ1FsMlNXNWthWEpsWTNSR2NtOXVkQ0FyUFNCblpYUklaVzFwYzNCb1pYSmxUR2xuYUhSSmNuSmhaR2xoYm1ObEtDQm9aVzFwYzNCb1pYSmxUR2xuYUhSeld5QnBJRjBzSUdkbGIyMWxkSEo1TG01dmNtMWhiQ0FwT3dvSkNTTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDUWtKZGtsdVpHbHlaV04wUW1GamF5QXJQU0JuWlhSSVpXMXBjM0JvWlhKbFRHbG5hSFJKY25KaFpHbGhibU5sS0NCb1pXMXBjM0JvWlhKbFRHbG5hSFJ6V3lCcElGMHNJR0poWTJ0SFpXOXRaWFJ5ZVM1dWIzSnRZV3dnS1RzS0NRa2paVzVrYVdZS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWm1Bc0lHbHdJRDBnWUhWdWFXWnZjbTBnWW05dmJDQnlaV05sYVhabFUyaGhaRzkzT3dwMWJtbG1iM0p0SUhabFl6TWdZVzFpYVdWdWRFeHBaMmgwUTI5c2IzSTdDblZ1YVdadmNtMGdkbVZqTXlCc2FXZG9kRkJ5YjJKbFd5QTVJRjA3Q25abFl6TWdjMmhIWlhSSmNuSmhaR2xoYm1ObFFYUW9JR2x1SUhabFl6TWdibTl5YldGc0xDQnBiaUIyWldNeklITm9RMjlsWm1acFkybGxiblJ6V3lBNUlGMGdLU0I3Q2dsbWJHOWhkQ0I0SUQwZ2JtOXliV0ZzTG5nc0lIa2dQU0J1YjNKdFlXd3VlU3dnZWlBOUlHNXZjbTFoYkM1Nk93b0pkbVZqTXlCeVpYTjFiSFFnUFNCemFFTnZaV1ptYVdOcFpXNTBjMXNnTUNCZElDb2dNQzQ0T0RZeU1qYzdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJREVnWFNBcUlESXVNQ0FxSURBdU5URXhOalkwSUNvZ2VUc0tDWEpsYzNWc2RDQXJQU0J6YUVOdlpXWm1hV05wWlc1MGMxc2dNaUJkSUNvZ01pNHdJQ29nTUM0MU1URTJOalFnS2lCNk93b0pjbVZ6ZFd4MElDczlJSE5vUTI5bFptWnBZMmxsYm5Seld5QXpJRjBnS2lBeUxqQWdLaUF3TGpVeE1UWTJOQ0FxSUhnN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklEUWdYU0FxSURJdU1DQXFJREF1TkRJNU1EUXpJQ29nZUNBcUlIazdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJRFVnWFNBcUlESXVNQ0FxSURBdU5ESTVNRFF6SUNvZ2VTQXFJSG83Q2dseVpYTjFiSFFnS3owZ2MyaERiMlZtWm1samFXVnVkSE5iSURZZ1hTQXFJQ2dnTUM0M05ETXhNalVnS2lCNklDb2dlaUF0SURBdU1qUTNOekE0SUNrN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklEY2dYU0FxSURJdU1DQXFJREF1TkRJNU1EUXpJQ29nZUNBcUlIbzdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJRGdnWFNBcUlEQXVOREk1TURReklDb2dLQ0I0SUNvZ2VDQXRJSGtnS2lCNUlDazdDZ2x5WlhSMWNtNGdjbVZ6ZFd4ME93cDlDblpsWXpNZ1oyVjBUR2xuYUhSUWNtOWlaVWx5Y21Ga2FXRnVZMlVvSUdOdmJuTjBJR2x1SUhabFl6TWdiR2xuYUhSUWNtOWlaVnNnT1NCZExDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ0FwSUhzS0NYWmxZek1nZDI5eWJHUk9iM0p0WVd3Z1BTQnBiblpsY25ObFZISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQnViM0p0WVd3c0lIWnBaWGROWVhSeWFYZ2dLVHNLQ1habFl6TWdhWEp5WVdScFlXNWpaU0E5SUhOb1IyVjBTWEp5WVdScFlXNWpaVUYwS0NCM2IzSnNaRTV2Y20xaGJDd2diR2xuYUhSUWNtOWlaU0FwT3dvSmNtVjBkWEp1SUdseWNtRmthV0Z1WTJVN0NuMEtkbVZqTXlCblpYUkJiV0pwWlc1MFRHbG5hSFJKY25KaFpHbGhibU5sS0NCamIyNXpkQ0JwYmlCMlpXTXpJR0Z0WW1sbGJuUk1hV2RvZEVOdmJHOXlJQ2tnZXdvSmRtVmpNeUJwY25KaFpHbGhibU5sSUQwZ1lXMWlhV1Z1ZEV4cFoyaDBRMjlzYjNJN0NnbHlaWFIxY200Z2FYSnlZV1JwWVc1alpUc0tmUXBtYkc5aGRDQm5aWFJFYVhOMFlXNWpaVUYwZEdWdWRXRjBhVzl1S0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0JzYVdkb2RFUnBjM1JoYm1ObExDQmpiMjV6ZENCcGJpQm1iRzloZENCamRYUnZabVpFYVhOMFlXNWpaU3dnWTI5dWMzUWdhVzRnWm14dllYUWdaR1ZqWVhsRmVIQnZibVZ1ZENBcElIc0tDU05wWmlCa1pXWnBibVZrSUNnZ1VFaFpVMGxEUVV4TVdWOURUMUpTUlVOVVgweEpSMGhVVXlBcENna0pabXh2WVhRZ1pHbHpkR0Z1WTJWR1lXeHNiMlptSUQwZ01TNHdJQzhnYldGNEtDQndiM2NvSUd4cFoyaDBSR2x6ZEdGdVkyVXNJR1JsWTJGNVJYaHdiMjVsYm5RZ0tTd2dNQzR3TVNBcE93b0pDV2xtSUNnZ1kzVjBiMlptUkdsemRHRnVZMlVnUGlBd0xqQWdLU0I3Q2drSkNXUnBjM1JoYm1ObFJtRnNiRzltWmlBcVBTQndiM2N5S0NCellYUjFjbUYwWlNnZ01TNHdJQzBnY0c5M05DZ2diR2xuYUhSRWFYTjBZVzVqWlNBdklHTjFkRzltWmtScGMzUmhibU5sSUNrZ0tTQXBPd29KQ1gwS0NRbHlaWFIxY200Z1pHbHpkR0Z1WTJWR1lXeHNiMlptT3dvSkkyVnNjMlVLQ1FscFppQW9JR04xZEc5bVprUnBjM1JoYm1ObElENGdNQzR3SUNZbUlHUmxZMkY1Ulhod2IyNWxiblFnUGlBd0xqQWdLU0I3Q2drSkNYSmxkSFZ5YmlCd2IzY29JSE5oZEhWeVlYUmxLQ0F0SUd4cFoyaDBSR2x6ZEdGdVkyVWdMeUJqZFhSdlptWkVhWE4wWVc1alpTQXJJREV1TUNBcExDQmtaV05oZVVWNGNHOXVaVzUwSUNrN0Nna0pmUW9KQ1hKbGRIVnliaUF4TGpBN0Nna2paVzVrYVdZS2ZRcG1iRzloZENCblpYUlRjRzkwUVhSMFpXNTFZWFJwYjI0b0lHTnZibk4wSUdsdUlHWnNiMkYwSUdOdmJtVkRiM05wYm1Vc0lHTnZibk4wSUdsdUlHWnNiMkYwSUhCbGJuVnRZbkpoUTI5emFXNWxMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmhibWRzWlVOdmMybHVaU0FwSUhzS0NYSmxkSFZ5YmlCemJXOXZkR2h6ZEdWd0tDQmpiMjVsUTI5emFXNWxMQ0J3Wlc1MWJXSnlZVU52YzJsdVpTd2dZVzVuYkdWRGIzTnBibVVnS1RzS2ZRb2phV1lnVGxWTlgwUkpVbDlNU1VkSVZGTWdQaUF3Q2dsemRISjFZM1FnUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0I3Q2drSmRtVmpNeUJrYVhKbFkzUnBiMjQ3Q2drSmRtVmpNeUJqYjJ4dmNqc0tDWDA3Q2dsMWJtbG1iM0p0SUVScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnWkdseVpXTjBhVzl1WVd4TWFXZG9kSE5iSUU1VlRWOUVTVkpmVEVsSFNGUlRJRjA3Q2dsMmIybGtJR2RsZEVScGNtVmpkR2x2Ym1Gc1RHbG5hSFJKYm1adktDQmpiMjV6ZENCcGJpQkVhWEpsWTNScGIyNWhiRXhwWjJoMElHUnBjbVZqZEdsdmJtRnNUR2xuYUhRc0lHTnZibk4wSUdsdUlFZGxiMjFsZEhKcFkwTnZiblJsZUhRZ1oyVnZiV1YwY25rc0lHOTFkQ0JKYm1OcFpHVnVkRXhwWjJoMElHeHBaMmgwSUNrZ2V3b0pDV3hwWjJoMExtTnZiRzl5SUQwZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEM1amIyeHZjanNLQ1Fsc2FXZG9kQzVrYVhKbFkzUnBiMjRnUFNCa2FYSmxZM1JwYjI1aGJFeHBaMmgwTG1ScGNtVmpkR2x2YmpzS0NRbHNhV2RvZEM1MmFYTnBZbXhsSUQwZ2RISjFaVHNLQ1gwS0kyVnVaR2xtQ2lOcFppQk9WVTFmVUU5SlRsUmZURWxIU0ZSVElENGdNQW9KYzNSeWRXTjBJRkJ2YVc1MFRHbG5hSFFnZXdvSkNYWmxZek1nY0c5emFYUnBiMjQ3Q2drSmRtVmpNeUJqYjJ4dmNqc0tDUWxtYkc5aGRDQmthWE4wWVc1alpUc0tDUWxtYkc5aGRDQmtaV05oZVRzS0NYMDdDZ2wxYm1sbWIzSnRJRkJ2YVc1MFRHbG5hSFFnY0c5cGJuUk1hV2RvZEhOYklFNVZUVjlRVDBsT1ZGOU1TVWRJVkZNZ1hUc0tDWFp2YVdRZ1oyVjBVRzlwYm5STWFXZG9kRWx1Wm04b0lHTnZibk4wSUdsdUlGQnZhVzUwVEdsbmFIUWdjRzlwYm5STWFXZG9kQ3dnWTI5dWMzUWdhVzRnUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllU3dnYjNWMElFbHVZMmxrWlc1MFRHbG5hSFFnYkdsbmFIUWdLU0I3Q2drSmRtVmpNeUJzVm1WamRHOXlJRDBnY0c5cGJuUk1hV2RvZEM1d2IzTnBkR2x2YmlBdElHZGxiMjFsZEhKNUxuQnZjMmwwYVc5dU93b0pDV3hwWjJoMExtUnBjbVZqZEdsdmJpQTlJRzV2Y20xaGJHbDZaU2dnYkZabFkzUnZjaUFwT3dvSkNXWnNiMkYwSUd4cFoyaDBSR2x6ZEdGdVkyVWdQU0JzWlc1bmRHZ29JR3hXWldOMGIzSWdLVHNLQ1Fsc2FXZG9kQzVqYjJ4dmNpQTlJSEJ2YVc1MFRHbG5hSFF1WTI5c2IzSTdDZ2tKYkdsbmFIUXVZMjlzYjNJZ0tqMGdaMlYwUkdsemRHRnVZMlZCZEhSbGJuVmhkR2x2YmlnZ2JHbG5hSFJFYVhOMFlXNWpaU3dnY0c5cGJuUk1hV2RvZEM1a2FYTjBZVzVqWlN3Z2NHOXBiblJNYVdkb2RDNWtaV05oZVNBcE93b0pDV3hwWjJoMExuWnBjMmxpYkdVZ1BTQW9JR3hwWjJoMExtTnZiRzl5SUNFOUlIWmxZek1vSURBdU1DQXBJQ2s3Q2dsOUNpTmxibVJwWmdvamFXWWdUbFZOWDFOUVQxUmZURWxIU0ZSVElENGdNQW9KYzNSeWRXTjBJRk53YjNSTWFXZG9kQ0I3Q2drSmRtVmpNeUJ3YjNOcGRHbHZianNLQ1FsMlpXTXpJR1JwY21WamRHbHZianNLQ1FsMlpXTXpJR052Ykc5eU93b0pDV1pzYjJGMElHUnBjM1JoYm1ObE93b0pDV1pzYjJGMElHUmxZMkY1T3dvSkNXWnNiMkYwSUdOdmJtVkRiM003Q2drSlpteHZZWFFnY0dWdWRXMWljbUZEYjNNN0NnbDlPd29KZFc1cFptOXliU0JUY0c5MFRHbG5hSFFnYzNCdmRFeHBaMmgwYzFzZ1RsVk5YMU5RVDFSZlRFbEhTRlJUSUYwN0NnbDJiMmxrSUdkbGRGTndiM1JNYVdkb2RFbHVabThvSUdOdmJuTjBJR2x1SUZOd2IzUk1hV2RvZENCemNHOTBUR2xuYUhRc0lHTnZibk4wSUdsdUlFZGxiMjFsZEhKcFkwTnZiblJsZUhRZ1oyVnZiV1YwY25rc0lHOTFkQ0JKYm1OcFpHVnVkRXhwWjJoMElHeHBaMmgwSUNrZ2V3b0pDWFpsWXpNZ2JGWmxZM1J2Y2lBOUlITndiM1JNYVdkb2RDNXdiM05wZEdsdmJpQXRJR2RsYjIxbGRISjVMbkJ2YzJsMGFXOXVPd29KQ1d4cFoyaDBMbVJwY21WamRHbHZiaUE5SUc1dmNtMWhiR2w2WlNnZ2JGWmxZM1J2Y2lBcE93b0pDV1pzYjJGMElHRnVaMnhsUTI5eklEMGdaRzkwS0NCc2FXZG9kQzVrYVhKbFkzUnBiMjRzSUhOd2IzUk1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tUc0tDUWxtYkc5aGRDQnpjRzkwUVhSMFpXNTFZWFJwYjI0Z1BTQm5aWFJUY0c5MFFYUjBaVzUxWVhScGIyNG9JSE53YjNSTWFXZG9kQzVqYjI1bFEyOXpMQ0J6Y0c5MFRHbG5hSFF1Y0dWdWRXMWljbUZEYjNNc0lHRnVaMnhsUTI5eklDazdDZ2tKYVdZZ0tDQnpjRzkwUVhSMFpXNTFZWFJwYjI0Z1BpQXdMakFnS1NCN0Nna0pDV1pzYjJGMElHeHBaMmgwUkdsemRHRnVZMlVnUFNCc1pXNW5kR2dvSUd4V1pXTjBiM0lnS1RzS0NRa0piR2xuYUhRdVkyOXNiM0lnUFNCemNHOTBUR2xuYUhRdVkyOXNiM0lnS2lCemNHOTBRWFIwWlc1MVlYUnBiMjQ3Q2drSkNXeHBaMmgwTG1OdmJHOXlJQ285SUdkbGRFUnBjM1JoYm1ObFFYUjBaVzUxWVhScGIyNG9JR3hwWjJoMFJHbHpkR0Z1WTJVc0lITndiM1JNYVdkb2RDNWthWE4wWVc1alpTd2djM0J2ZEV4cFoyaDBMbVJsWTJGNUlDazdDZ2tKQ1d4cFoyaDBMblpwYzJsaWJHVWdQU0FvSUd4cFoyaDBMbU52Ykc5eUlDRTlJSFpsWXpNb0lEQXVNQ0FwSUNrN0Nna0pmU0JsYkhObElIc0tDUWtKYkdsbmFIUXVZMjlzYjNJZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1FrSmJHbG5hSFF1ZG1semFXSnNaU0E5SUdaaGJITmxPd29KQ1gwS0NYMEtJMlZ1WkdsbUNpTnBaaUJPVlUxZlVrVkRWRjlCVWtWQlgweEpSMGhVVXlBK0lEQUtDWE4wY25WamRDQlNaV04wUVhKbFlVeHBaMmgwSUhzS0NRbDJaV016SUdOdmJHOXlPd29KQ1habFl6TWdjRzl6YVhScGIyNDdDZ2tKZG1Wak15Qm9ZV3htVjJsa2RHZzdDZ2tKZG1Wak15Qm9ZV3htU0dWcFoyaDBPd29KZlRzS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHeDBZMTh4T3dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCc2RHTmZNanNLQ1hWdWFXWnZjbTBnVW1WamRFRnlaV0ZNYVdkb2RDQnlaV04wUVhKbFlVeHBaMmgwYzFzZ1RsVk5YMUpGUTFSZlFWSkZRVjlNU1VkSVZGTWdYVHNLSTJWdVpHbG1DaU5wWmlCT1ZVMWZTRVZOU1Y5TVNVZElWRk1nUGlBd0NnbHpkSEoxWTNRZ1NHVnRhWE53YUdWeVpVeHBaMmgwSUhzS0NRbDJaV016SUdScGNtVmpkR2x2YmpzS0NRbDJaV016SUhOcmVVTnZiRzl5T3dvSkNYWmxZek1nWjNKdmRXNWtRMjlzYjNJN0NnbDlPd29KZFc1cFptOXliU0JJWlcxcGMzQm9aWEpsVEdsbmFIUWdhR1Z0YVhOd2FHVnlaVXhwWjJoMGMxc2dUbFZOWDBoRlRVbGZURWxIU0ZSVElGMDdDZ2wyWldNeklHZGxkRWhsYldsemNHaGxjbVZNYVdkb2RFbHljbUZrYVdGdVkyVW9JR052Ym5OMElHbHVJRWhsYldsemNHaGxjbVZNYVdkb2RDQm9aVzFwVEdsbmFIUXNJR052Ym5OMElHbHVJSFpsWXpNZ2JtOXliV0ZzSUNrZ2V3b0pDV1pzYjJGMElHUnZkRTVNSUQwZ1pHOTBLQ0J1YjNKdFlXd3NJR2hsYldsTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1RzS0NRbG1iRzloZENCb1pXMXBSR2xtWm5WelpWZGxhV2RvZENBOUlEQXVOU0FxSUdSdmRFNU1JQ3NnTUM0MU93b0pDWFpsWXpNZ2FYSnlZV1JwWVc1alpTQTlJRzFwZUNnZ2FHVnRhVXhwWjJoMExtZHliM1Z1WkVOdmJHOXlMQ0JvWlcxcFRHbG5hSFF1YzJ0NVEyOXNiM0lzSUdobGJXbEVhV1ptZFhObFYyVnBaMmgwSUNrN0Nna0pjbVYwZFhKdUlHbHljbUZrYVdGdVkyVTdDZ2w5Q2lObGJtUnBabUFzSUhKd0lEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZSVTVXVFVGUUlDa0tDU05wWm1SbFppQkZUbFpOUVZCZlRVOUVSVjlTUlVaU1FVTlVTVTlPQ2drSmRXNXBabTl5YlNCbWJHOWhkQ0J5WldaeVlXTjBhVzl1VW1GMGFXODdDZ2tqWlc1a2FXWUtDWFpsWXpNZ1oyVjBTVUpNU1hKeVlXUnBZVzVqWlNnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd2dLU0I3Q2drSkkybG1JR1JsWm1sdVpXUW9JRVZPVmsxQlVGOVVXVkJGWDBOVlFrVmZWVllnS1FvSkNRbDJaV016SUhkdmNteGtUbTl5YldGc0lEMGdhVzUyWlhKelpWUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2dibTl5YldGc0xDQjJhV1YzVFdGMGNtbDRJQ2s3Q2drSkNYWmxZelFnWlc1MlRXRndRMjlzYjNJZ1BTQjBaWGgwZFhKbFEzVmlaVlZXS0NCbGJuWk5ZWEFzSUhkdmNteGtUbTl5YldGc0xDQXhMakFnS1RzS0NRa0pjbVYwZFhKdUlGQkpJQ29nWlc1MlRXRndRMjlzYjNJdWNtZGlJQ29nWlc1MlRXRndTVzUwWlc1emFYUjVPd29KQ1NObGJITmxDZ2tKQ1hKbGRIVnliaUIyWldNektDQXdMakFnS1RzS0NRa2paVzVrYVdZS0NYMEtDWFpsWXpNZ1oyVjBTVUpNVW1Ga2FXRnVZMlVvSUdOdmJuTjBJR2x1SUhabFl6TWdkbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEp2ZFdkb2JtVnpjeUFwSUhzS0NRa2phV1lnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmlBcENna0pDWFpsWXpNZ2NtVm1iR1ZqZEZabFl6c0tDUWtKSTJsbVpHVm1JRVZPVmsxQlVGOU5UMFJGWDFKRlJreEZRMVJKVDA0S0NRa0pDWEpsWm14bFkzUldaV01nUFNCeVpXWnNaV04wS0NBdElIWnBaWGRFYVhJc0lHNXZjbTFoYkNBcE93b0pDUWtKY21WbWJHVmpkRlpsWXlBOUlHNXZjbTFoYkdsNlpTZ2diV2w0S0NCeVpXWnNaV04wVm1WakxDQnViM0p0WVd3c0lISnZkV2RvYm1WemN5QXFJSEp2ZFdkb2JtVnpjeWtnS1RzS0NRa0pJMlZzYzJVS0NRa0pDWEpsWm14bFkzUldaV01nUFNCeVpXWnlZV04wS0NBdElIWnBaWGRFYVhJc0lHNXZjbTFoYkN3Z2NtVm1jbUZqZEdsdmJsSmhkR2x2SUNrN0Nna0pDU05sYm1ScFpnb0pDUWx5Wldac1pXTjBWbVZqSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2NtVm1iR1ZqZEZabFl5d2dkbWxsZDAxaGRISnBlQ0FwT3dvSkNRbDJaV00wSUdWdWRrMWhjRU52Ykc5eUlEMGdkR1Y0ZEhWeVpVTjFZbVZWVmlnZ1pXNTJUV0Z3TENCeVpXWnNaV04wVm1WakxDQnliM1ZuYUc1bGMzTWdLVHNLQ1FrSmNtVjBkWEp1SUdWdWRrMWhjRU52Ykc5eUxuSm5ZaUFxSUdWdWRrMWhjRWx1ZEdWdWMybDBlVHNLQ1FralpXeHpaUW9KQ1FseVpYUjFjbTRnZG1Wak15Z2dNQzR3SUNrN0Nna0pJMlZ1WkdsbUNnbDlDaU5sYm1ScFptQXNJSE53SUQwZ1lGUnZiMjVOWVhSbGNtbGhiQ0J0WVhSbGNtbGhiRHNLYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlEMGdaR2xtWm5WelpVTnZiRzl5TG5KbllqdGdMQ0J2Y0NBOUlHQjJZWEo1YVc1bklIWmxZek1nZGxacFpYZFFiM05wZEdsdmJqc0tjM1J5ZFdOMElGUnZiMjVOWVhSbGNtbGhiQ0I3Q2dsMlpXTXpJR1JwWm1aMWMyVkRiMnh2Y2pzS2ZUc0tkbTlwWkNCU1JWOUVhWEpsWTNSZlZHOXZiaWdnWTI5dWMzUWdhVzRnU1c1amFXUmxiblJNYVdkb2RDQmthWEpsWTNSTWFXZG9kQ3dnWTI5dWMzUWdhVzRnUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllU3dnWTI5dWMzUWdhVzRnVkc5dmJrMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc0xDQnBibTkxZENCU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBJSHNLQ1habFl6TWdhWEp5WVdScFlXNWpaU0E5SUdkbGRFZHlZV1JwWlc1MFNYSnlZV1JwWVc1alpTZ2daMlZ2YldWMGNua3VibTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1NBcUlHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pjbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5TVlXMWlaWEowS0NCdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdLVHNLZlFwMmIybGtJRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaVjlVYjI5dUtDQmpiMjV6ZENCcGJpQjJaV016SUdseWNtRmthV0Z1WTJVc0lHTnZibk4wSUdsdUlFZGxiMjFsZEhKcFkwTnZiblJsZUhRZ1oyVnZiV1YwY25rc0lHTnZibk4wSUdsdUlGUnZiMjVOWVhSbGNtbGhiQ0J0WVhSbGNtbGhiQ3dnYVc1dmRYUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1NCN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ2FYSnlZV1JwWVc1alpTQXFJRUpTUkVaZlRHRnRZbVZ5ZENnZ2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJQ2s3Q24wS0kyUmxabWx1WlNCU1JWOUVhWEpsWTNRSkNRa0pVa1ZmUkdseVpXTjBYMVJ2YjI0S0kyUmxabWx1WlNCU1JWOUpibVJwY21WamRFUnBabVoxYzJVSkNWSkZYMGx1WkdseVpXTjBSR2xtWm5WelpWOVViMjl1Q2lOa1pXWnBibVVnVFdGMFpYSnBZV3hmVEdsbmFIUlFjbTlpWlV4UFJDZ2diV0YwWlhKcFlXd2dLUWtvTUNsZ0xDQmhjQ0E5SUdCQ2JHbHVibEJvYjI1blRXRjBaWEpwWVd3Z2JXRjBaWEpwWVd3N0NtMWhkR1Z5YVdGc0xtUnBabVoxYzJWRGIyeHZjaUE5SUdScFptWjFjMlZEYjJ4dmNpNXlaMkk3Q20xaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSWdQU0J6Y0dWamRXeGhjanNLYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpUYUdsdWFXNWxjM01nUFNCemFHbHVhVzVsYzNNN0NtMWhkR1Z5YVdGc0xuTndaV04xYkdGeVUzUnlaVzVuZEdnZ1BTQnpjR1ZqZFd4aGNsTjBjbVZ1WjNSb08yQXNJR3h3SUQwZ1lIWmhjbmxwYm1jZ2RtVmpNeUIyVm1sbGQxQnZjMmwwYVc5dU93cHpkSEoxWTNRZ1FteHBibTVRYUc5dVowMWhkR1Z5YVdGc0lIc0tDWFpsWXpNZ1pHbG1ablZ6WlVOdmJHOXlPd29KZG1Wak15QnpjR1ZqZFd4aGNrTnZiRzl5T3dvSlpteHZZWFFnYzNCbFkzVnNZWEpUYUdsdWFXNWxjM003Q2dsbWJHOWhkQ0J6Y0dWamRXeGhjbE4wY21WdVozUm9Pd3A5T3dwMmIybGtJRkpGWDBScGNtVmpkRjlDYkdsdWJsQm9iMjVuS0NCamIyNXpkQ0JwYmlCSmJtTnBaR1Z1ZEV4cFoyaDBJR1JwY21WamRFeHBaMmgwTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCamIyNXpkQ0JwYmlCQ2JHbHVibEJvYjI1blRXRjBaWEpwWVd3Z2JXRjBaWEpwWVd3c0lHbHViM1YwSUZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElDa2dld29KWm14dllYUWdaRzkwVGt3Z1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdScGNtVmpkRXhwWjJoMExtUnBjbVZqZEdsdmJpQXBJQ2s3Q2dsMlpXTXpJR2x5Y21Ga2FXRnVZMlVnUFNCa2IzUk9UQ0FxSUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBSR2xtWm5WelpTQXJQU0JwY25KaFpHbGhibU5sSUNvZ1FsSkVSbDlNWVcxaVpYSjBLQ0J0WVhSbGNtbGhiQzVrYVdabWRYTmxRMjlzYjNJZ0tUc0tDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEZOd1pXTjFiR0Z5SUNzOUlHbHljbUZrYVdGdVkyVWdLaUJDVWtSR1gwSnNhVzV1VUdodmJtY29JR1JwY21WamRFeHBaMmgwTG1ScGNtVmpkR2x2Yml3Z1oyVnZiV1YwY25rdWRtbGxkMFJwY2l3Z1oyVnZiV1YwY25rdWJtOXliV0ZzTENCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tOdmJHOXlMQ0J0WVhSbGNtbGhiQzV6Y0dWamRXeGhjbE5vYVc1cGJtVnpjeUFwSUNvZ2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKVGRISmxibWQwYURzS2ZRcDJiMmxrSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlY5Q2JHbHVibEJvYjI1bktDQmpiMjV6ZENCcGJpQjJaV016SUdseWNtRmthV0Z1WTJVc0lHTnZibk4wSUdsdUlFZGxiMjFsZEhKcFkwTnZiblJsZUhRZ1oyVnZiV1YwY25rc0lHTnZibk4wSUdsdUlFSnNhVzV1VUdodmJtZE5ZWFJsY21saGJDQnRZWFJsY21saGJDd2dhVzV2ZFhRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdLU0I3Q2dseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDbjBLSTJSbFptbHVaU0JTUlY5RWFYSmxZM1FKQ1FrSlVrVmZSR2x5WldOMFgwSnNhVzV1VUdodmJtY0tJMlJsWm1sdVpTQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVUpDVkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaVjlDYkdsdWJsQm9iMjVuQ2lOa1pXWnBibVVnVFdGMFpYSnBZV3hmVEdsbmFIUlFjbTlpWlV4UFJDZ2diV0YwWlhKcFlXd2dLUWtvTUNsZ0xDQmpjQ0E5SUdCUWFIbHphV05oYkUxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzT3dwdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdQU0JrYVdabWRYTmxRMjlzYjNJdWNtZGlJQ29nS0NBeExqQWdMU0J0WlhSaGJHNWxjM05HWVdOMGIzSWdLVHNLZG1Wak15QmtlSGtnUFNCdFlYZ29JR0ZpY3lnZ1pFWmtlQ2dnWjJWdmJXVjBjbmxPYjNKdFlXd2dLU0FwTENCaFluTW9JR1JHWkhrb0lHZGxiMjFsZEhKNVRtOXliV0ZzSUNrZ0tTQXBPd3BtYkc5aGRDQm5aVzl0WlhSeWVWSnZkV2RvYm1WemN5QTlJRzFoZUNnZ2JXRjRLQ0JrZUhrdWVDd2daSGg1TG5rZ0tTd2daSGg1TG5vZ0tUc0tiV0YwWlhKcFlXd3VjbTkxWjJodVpYTnpJRDBnYldGNEtDQnliM1ZuYUc1bGMzTkdZV04wYjNJc0lEQXVNRFV5TlNBcE8yMWhkR1Z5YVdGc0xuSnZkV2RvYm1WemN5QXJQU0JuWlc5dFpYUnllVkp2ZFdkb2JtVnpjenNLYldGMFpYSnBZV3d1Y205MVoyaHVaWE56SUQwZ2JXbHVLQ0J0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM01zSURFdU1DQXBPd29qYVdaa1pXWWdTVTlTQ2dramFXWmtaV1lnVTFCRlExVk1RVklLQ1FsbWJHOWhkQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVVpoWTNSdmNpQTlJSE53WldOMWJHRnlTVzUwWlc1emFYUjVPd29KQ1habFl6TWdjM0JsWTNWc1lYSkRiMnh2Y2taaFkzUnZjaUE5SUhOd1pXTjFiR0Z5UTI5c2IzSTdDZ2tKSTJsbVpHVm1JRlZUUlY5VFVFVkRWVXhCVWtsT1ZFVk9VMGxVV1UxQlVBb0pDUWx6Y0dWamRXeGhja2x1ZEdWdWMybDBlVVpoWTNSdmNpQXFQU0IwWlhoMGRYSmxNa1FvSUhOd1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xDQjJWWFlnS1M1aE93b0pDU05sYm1ScFpnb0pDU05wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpEVDB4UFVrMUJVQW9KQ1FsemNHVmpkV3hoY2tOdmJHOXlSbUZqZEc5eUlDbzlJSE53WldOMWJHRnlRMjlzYjNKTllYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCMFpYaDBkWEpsTWtRb0lITndaV04xYkdGeVEyOXNiM0pOWVhBc0lIWlZkaUFwSUNrdWNtZGlPd29KQ1NObGJtUnBaZ29KQ1cxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5Umprd0lEMGdiV2w0S0NCemNHVmpkV3hoY2tsdWRHVnVjMmwwZVVaaFkzUnZjaXdnTVM0d0xDQnRaWFJoYkc1bGMzTkdZV04wYjNJZ0tUc0tDU05sYkhObENna0pabXh2WVhRZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsR1lXTjBiM0lnUFNBeExqQTdDZ2tKZG1Wak15QnpjR1ZqZFd4aGNrTnZiRzl5Um1GamRHOXlJRDBnZG1Wak15Z2dNUzR3SUNrN0Nna0piV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkdPVEFnUFNBeExqQTdDZ2tqWlc1a2FXWUtDVzFoZEdWeWFXRnNMbk53WldOMWJHRnlRMjlzYjNJZ1BTQnRhWGdvSUcxcGJpZ2djRzkzTWlnZ0tDQnBiM0lnTFNBeExqQWdLU0F2SUNnZ2FXOXlJQ3NnTVM0d0lDa2dLU0FxSUhOd1pXTjFiR0Z5UTI5c2IzSkdZV04wYjNJc0lIWmxZek1vSURFdU1DQXBJQ2tnS2lCemNHVmpkV3hoY2tsdWRHVnVjMmwwZVVaaFkzUnZjaXdnWkdsbVpuVnpaVU52Ykc5eUxuSm5ZaXdnYldWMFlXeHVaWE56Um1GamRHOXlJQ2s3Q2lObGJITmxDZ2x0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUlEMGdiV2w0S0NCMlpXTXpLQ0F3TGpBMElDa3NJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySXNJRzFsZEdGc2JtVnpjMFpoWTNSdmNpQXBPd29KYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpHT1RBZ1BTQXhMakE3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSmJXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMElEMGdZMnhsWVhKamIyRjBPd29KYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUQwZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOek93b0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBSakFnUFNCMlpXTXpLQ0F3TGpBMElDazdDZ2x0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJHT1RBZ1BTQXhMakE3Q2dramFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZFMUJVQW9KQ1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZENBcVBTQjBaWGgwZFhKbE1rUW9JR05zWldGeVkyOWhkRTFoY0N3Z2RsVjJJQ2t1ZURzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUmZVazlWUjBoT1JWTlRUVUZRQ2drSmJXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDbzlJSFJsZUhSMWNtVXlSQ2dnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0xDQjJWWFlnS1M1NU93b0pJMlZ1WkdsbUNnbHRZWFJsY21saGJDNWpiR1ZoY21OdllYUWdQU0J6WVhSMWNtRjBaU2dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwSUNrN0NXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QTlJRzFoZUNnZ2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOekxDQXdMakExTWpVZ0tUc0tDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUFyUFNCblpXOXRaWFJ5ZVZKdmRXZG9ibVZ6Y3pzS0NXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QTlJRzFwYmlnZ2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOekxDQXhMakFnS1RzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlUwaEZSVTRLQ1cxaGRHVnlhV0ZzTG5Ob1pXVnVRMjlzYjNJZ1BTQnphR1ZsYmtOdmJHOXlPd29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUa05QVEU5U1RVRlFDZ2tKYldGMFpYSnBZV3d1YzJobFpXNURiMnh2Y2lBcVBTQnphR1ZsYmtOdmJHOXlUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0ZEhWeVpUSkVLQ0J6YUdWbGJrTnZiRzl5VFdGd0xDQjJWWFlnS1NBcExuSm5ZanNLQ1NObGJtUnBaZ29KYldGMFpYSnBZV3d1YzJobFpXNVNiM1ZuYUc1bGMzTWdQU0JqYkdGdGNDZ2djMmhsWlc1U2IzVm5hRzVsYzNNc0lEQXVNRGNzSURFdU1DQXBPd29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUbEpQVlVkSVRrVlRVMDFCVUFvSkNXMWhkR1Z5YVdGc0xuTm9aV1Z1VW05MVoyaHVaWE56SUNvOUlIUmxlSFIxY21VeVJDZ2djMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNJSFpWZGlBcExtRTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dhSEFnUFNCZ2MzUnlkV04wSUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dnZXdvSmRtVmpNeUJrYVdabWRYTmxRMjlzYjNJN0NnbG1iRzloZENCeWIzVm5hRzVsYzNNN0NnbDJaV016SUhOd1pXTjFiR0Z5UTI5c2IzSTdDZ2xtYkc5aGRDQnpjR1ZqZFd4aGNrWTVNRHNLQ1NOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVUNna0pabXh2WVhRZ1kyeGxZWEpqYjJGME93b0pDV1pzYjJGMElHTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN6c0tDUWwyWldNeklHTnNaV0Z5WTI5aGRFWXdPd29KQ1dac2IyRjBJR05zWldGeVkyOWhkRVk1TURzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGdvSkNYWmxZek1nYzJobFpXNURiMnh2Y2pzS0NRbG1iRzloZENCemFHVmxibEp2ZFdkb2JtVnpjenNLQ1NObGJtUnBaZ3A5T3dwMlpXTXpJR05zWldGeVkyOWhkRk53WldOMWJHRnlJRDBnZG1Wak15Z2dNQzR3SUNrN0NuWmxZek1nYzJobFpXNVRjR1ZqZFd4aGNpQTlJSFpsWXpNb0lEQXVNQ0FwT3dwbWJHOWhkQ0JKUWt4VGFHVmxia0pTUkVZb0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNMQ0JqYjI1emRDQnBiaUIyWldNeklIWnBaWGRFYVhJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUhKdmRXZG9ibVZ6Y3lrZ2V3b0pabXh2WVhRZ1pHOTBUbFlnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSWdLU0FwT3dvSlpteHZZWFFnY2pJZ1BTQnliM1ZuYUc1bGMzTWdLaUJ5YjNWbmFHNWxjM003Q2dsbWJHOWhkQ0JoSUQwZ2NtOTFaMmh1WlhOeklEd2dNQzR5TlNBL0lDMHpNemt1TWlBcUlISXlJQ3NnTVRZeExqUWdLaUJ5YjNWbmFHNWxjM01nTFNBeU5TNDVJRG9nTFRndU5EZ2dLaUJ5TWlBcklERTBMak1nS2lCeWIzVm5hRzVsYzNNZ0xTQTVMamsxT3dvSlpteHZZWFFnWWlBOUlISnZkV2RvYm1WemN5QThJREF1TWpVZ1B5QTBOQzR3SUNvZ2NqSWdMU0F5TXk0M0lDb2djbTkxWjJodVpYTnpJQ3NnTXk0eU5pQTZJREV1T1RjZ0tpQnlNaUF0SURNdU1qY2dLaUJ5YjNWbmFHNWxjM01nS3lBd0xqY3lPd29KWm14dllYUWdSRWNnUFNCbGVIQW9JR0VnS2lCa2IzUk9WaUFySUdJZ0tTQXJJQ2dnY205MVoyaHVaWE56SUR3Z01DNHlOU0EvSURBdU1DQTZJREF1TVNBcUlDZ2djbTkxWjJodVpYTnpJQzBnTUM0eU5TQXBJQ2s3Q2dseVpYUjFjbTRnYzJGMGRYSmhkR1VvSUVSSElDb2dVa1ZEU1ZCU1QwTkJURjlRU1NBcE93cDlDblpsWXpJZ1JFWkhRWEJ3Y205NEtDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQm1iRzloZENCeWIzVm5hRzVsYzNNZ0tTQjdDZ2xtYkc5aGRDQmtiM1JPVmlBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUc1dmNtMWhiQ3dnZG1sbGQwUnBjaUFwSUNrN0NnbGpiMjV6ZENCMlpXTTBJR013SUQwZ2RtVmpOQ2dnTFNBeExDQXRJREF1TURJM05Td2dMU0F3TGpVM01pd2dNQzR3TWpJZ0tUc0tDV052Ym5OMElIWmxZelFnWXpFZ1BTQjJaV00wS0NBeExDQXdMakEwTWpVc0lERXVNRFFzSUMwZ01DNHdOQ0FwT3dvSmRtVmpOQ0J5SUQwZ2NtOTFaMmh1WlhOeklDb2dZekFnS3lCak1Uc0tDV1pzYjJGMElHRXdNRFFnUFNCdGFXNG9JSEl1ZUNBcUlISXVlQ3dnWlhod01pZ2dMU0E1TGpJNElDb2daRzkwVGxZZ0tTQXBJQ29nY2k1NElDc2djaTU1T3dvSmRtVmpNaUJtWVdJZ1BTQjJaV015S0NBdElERXVNRFFzSURFdU1EUWdLU0FxSUdFd01EUWdLeUJ5TG5wM093b0pjbVYwZFhKdUlHWmhZanNLZlFwMlpXTXpJRVZ1ZG1seWIyNXRaVzUwUWxKRVJpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dzSUdOdmJuTjBJR2x1SUhabFl6TWdkbWxsZDBScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnpjR1ZqZFd4aGNrWTVNQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdjbTkxWjJodVpYTnpJQ2tnZXdvSmRtVmpNaUJtWVdJZ1BTQkVSa2RCY0hCeWIzZ29JRzV2Y20xaGJDd2dkbWxsZDBScGNpd2djbTkxWjJodVpYTnpJQ2s3Q2dseVpYUjFjbTRnYzNCbFkzVnNZWEpEYjJ4dmNpQXFJR1poWWk1NElDc2djM0JsWTNWc1lYSkdPVEFnS2lCbVlXSXVlVHNLZlFwMmIybGtJR052YlhCMWRHVk5kV3gwYVhOallYUjBaWEpwYm1jb0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNMQ0JqYjI1emRDQnBiaUIyWldNeklIWnBaWGRFYVhJc0lHTnZibk4wSUdsdUlIWmxZek1nYzNCbFkzVnNZWEpEYjJ4dmNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2MzQmxZM1ZzWVhKR09UQXNJR052Ym5OMElHbHVJR1pzYjJGMElISnZkV2RvYm1WemN5d2dhVzV2ZFhRZ2RtVmpNeUJ6YVc1bmJHVlRZMkYwZEdWeUxDQnBibTkxZENCMlpXTXpJRzExYkhScFUyTmhkSFJsY2lBcElIc0tDWFpsWXpJZ1ptRmlJRDBnUkVaSFFYQndjbTk0S0NCdWIzSnRZV3dzSUhacFpYZEVhWElzSUhKdmRXZG9ibVZ6Y3lBcE93b0pkbVZqTXlCR2MzTkZjM01nUFNCemNHVmpkV3hoY2tOdmJHOXlJQ29nWm1GaUxuZ2dLeUJ6Y0dWamRXeGhja1k1TUNBcUlHWmhZaTU1T3dvSlpteHZZWFFnUlhOeklEMGdabUZpTG5nZ0t5Qm1ZV0l1ZVRzS0NXWnNiMkYwSUVWdGN5QTlJREV1TUNBdElFVnpjenNLQ1habFl6TWdSbUYyWnlBOUlITndaV04xYkdGeVEyOXNiM0lnS3lBb0lERXVNQ0F0SUhOd1pXTjFiR0Z5UTI5c2IzSWdLU0FxSURBdU1EUTNOakU1T3dsMlpXTXpJRVp0Y3lBOUlFWnpjMFZ6Y3lBcUlFWmhkbWNnTHlBb0lERXVNQ0F0SUVWdGN5QXFJRVpoZG1jZ0tUc0tDWE5wYm1kc1pWTmpZWFIwWlhJZ0t6MGdSbk56UlhOek93b0piWFZzZEdsVFkyRjBkR1Z5SUNzOUlFWnRjeUFxSUVWdGN6c0tmUW9qYVdZZ1RsVk5YMUpGUTFSZlFWSkZRVjlNU1VkSVZGTWdQaUF3Q2dsMmIybGtJRkpGWDBScGNtVmpkRjlTWldOMFFYSmxZVjlRYUhsemFXTmhiQ2dnWTI5dWMzUWdhVzRnVW1WamRFRnlaV0ZNYVdkb2RDQnlaV04wUVhKbFlVeHBaMmgwTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCamIyNXpkQ0JwYmlCUWFIbHphV05oYkUxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzTENCcGJtOTFkQ0JTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBcElIc0tDUWwyWldNeklHNXZjbTFoYkNBOUlHZGxiMjFsZEhKNUxtNXZjbTFoYkRzS0NRbDJaV016SUhacFpYZEVhWElnUFNCblpXOXRaWFJ5ZVM1MmFXVjNSR2x5T3dvSkNYWmxZek1nY0c5emFYUnBiMjRnUFNCblpXOXRaWFJ5ZVM1d2IzTnBkR2x2YmpzS0NRbDJaV016SUd4cFoyaDBVRzl6SUQwZ2NtVmpkRUZ5WldGTWFXZG9kQzV3YjNOcGRHbHZianNLQ1FsMlpXTXpJR2hoYkdaWGFXUjBhQ0E5SUhKbFkzUkJjbVZoVEdsbmFIUXVhR0ZzWmxkcFpIUm9Pd29KQ1habFl6TWdhR0ZzWmtobGFXZG9kQ0E5SUhKbFkzUkJjbVZoVEdsbmFIUXVhR0ZzWmtobGFXZG9kRHNLQ1FsMlpXTXpJR3hwWjJoMFEyOXNiM0lnUFNCeVpXTjBRWEpsWVV4cFoyaDBMbU52Ykc5eU93b0pDV1pzYjJGMElISnZkV2RvYm1WemN5QTlJRzFoZEdWeWFXRnNMbkp2ZFdkb2JtVnpjenNLQ1FsMlpXTXpJSEpsWTNSRGIyOXlaSE5iSURRZ1hUc0tDUWx5WldOMFEyOXZjbVJ6V3lBd0lGMGdQU0JzYVdkb2RGQnZjeUFySUdoaGJHWlhhV1IwYUNBdElHaGhiR1pJWldsbmFIUTdDUWx5WldOMFEyOXZjbVJ6V3lBeElGMGdQU0JzYVdkb2RGQnZjeUF0SUdoaGJHWlhhV1IwYUNBdElHaGhiR1pJWldsbmFIUTdDZ2tKY21WamRFTnZiM0prYzFzZ01pQmRJRDBnYkdsbmFIUlFiM01nTFNCb1lXeG1WMmxrZEdnZ0t5Qm9ZV3htU0dWcFoyaDBPd29KQ1hKbFkzUkRiMjl5WkhOYklETWdYU0E5SUd4cFoyaDBVRzl6SUNzZ2FHRnNabGRwWkhSb0lDc2dhR0ZzWmtobGFXZG9kRHNLQ1FsMlpXTXlJSFYySUQwZ1RGUkRYMVYyS0NCdWIzSnRZV3dzSUhacFpYZEVhWElzSUhKdmRXZG9ibVZ6Y3lBcE93b0pDWFpsWXpRZ2RERWdQU0IwWlhoMGRYSmxNa1FvSUd4MFkxOHhMQ0IxZGlBcE93b0pDWFpsWXpRZ2RESWdQU0IwWlhoMGRYSmxNa1FvSUd4MFkxOHlMQ0IxZGlBcE93b0pDVzFoZERNZ2JVbHVkaUE5SUcxaGRETW9DZ2tKQ1habFl6TW9JSFF4TG5nc0lEQXNJSFF4TG5rZ0tTd0tDUWtKZG1Wak15Z2dJQ0FnTUN3Z01Td2dJQ0FnTUNBcExBb0pDUWwyWldNektDQjBNUzU2TENBd0xDQjBNUzUzSUNrS0NRa3BPd29KQ1habFl6TWdabkpsYzI1bGJDQTlJQ2dnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpQXFJSFF5TG5nZ0t5QW9JSFpsWXpNb0lERXVNQ0FwSUMwZ2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKRGIyeHZjaUFwSUNvZ2RESXVlU0FwT3dvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRk53WldOMWJHRnlJQ3M5SUd4cFoyaDBRMjlzYjNJZ0tpQm1jbVZ6Ym1Wc0lDb2dURlJEWDBWMllXeDFZWFJsS0NCdWIzSnRZV3dzSUhacFpYZEVhWElzSUhCdmMybDBhVzl1TENCdFNXNTJMQ0J5WldOMFEyOXZjbVJ6SUNrN0Nna0pjbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCc2FXZG9kRU52Ykc5eUlDb2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNvZ1RGUkRYMFYyWVd4MVlYUmxLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSXNJSEJ2YzJsMGFXOXVMQ0J0WVhRektDQXhMakFnS1N3Z2NtVmpkRU52YjNKa2N5QXBPd29KZlFvalpXNWthV1lLZG05cFpDQlNSVjlFYVhKbFkzUmZVR2g1YzJsallXd29JR052Ym5OMElHbHVJRWx1WTJsa1pXNTBUR2xuYUhRZ1pHbHlaV04wVEdsbmFIUXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJR052Ym5OMElHbHVJRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2tnZXdvSlpteHZZWFFnWkc5MFRrd2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHUnBjbVZqZEV4cFoyaDBMbVJwY21WamRHbHZiaUFwSUNrN0NnbDJaV016SUdseWNtRmthV0Z1WTJVZ1BTQmtiM1JPVENBcUlHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlFLQ1FsbWJHOWhkQ0JrYjNST1RHTmpJRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2daMlZ2YldWMGNua3VZMnhsWVhKamIyRjBUbTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1NBcE93b0pDWFpsWXpNZ1kyTkpjbkpoWkdsaGJtTmxJRDBnWkc5MFRreGpZeUFxSUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSkNXTnNaV0Z5WTI5aGRGTndaV04xYkdGeUlDczlJR05qU1hKeVlXUnBZVzVqWlNBcUlFSlNSRVpmUjBkWUtDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUdkbGIyMWxkSEo1TG1Oc1pXRnlZMjloZEU1dmNtMWhiQ3dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwUmpBc0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRFWTVNQ3dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNrN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZVMGhGUlU0S0NRbHphR1ZsYmxOd1pXTjFiR0Z5SUNzOUlHbHljbUZrYVdGdVkyVWdLaUJDVWtSR1gxTm9aV1Z1S0NCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNHNJR2RsYjIxbGRISjVMblpwWlhkRWFYSXNJR2RsYjIxbGRISjVMbTV2Y20xaGJDd2diV0YwWlhKcFlXd3VjMmhsWlc1RGIyeHZjaXdnYldGMFpYSnBZV3d1YzJobFpXNVNiM1ZuYUc1bGMzTWdLVHNLQ1NObGJtUnBaZ29KY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFUzQmxZM1ZzWVhJZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZSMGRZS0NCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNHNJR2RsYjIxbGRISjVMblpwWlhkRWFYSXNJR2RsYjIxbGRISjVMbTV2Y20xaGJDd2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkRiMnh2Y2l3Z2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKR09UQXNJRzFoZEdWeWFXRnNMbkp2ZFdkb2JtVnpjeUFwT3dvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBSR2xtWm5WelpTQXJQU0JwY25KaFpHbGhibU5sSUNvZ1FsSkVSbDlNWVcxaVpYSjBLQ0J0WVhSbGNtbGhiQzVrYVdabWRYTmxRMjlzYjNJZ0tUc0tmUXAyYjJsa0lGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpWOVFhSGx6YVdOaGJDZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCcGNuSmhaR2xoYm1ObExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQmpiMjV6ZENCcGJpQlFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc0xDQnBibTkxZENCU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBJSHNLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBSR2xtWm5WelpTQXJQU0JwY25KaFpHbGhibU5sSUNvZ1FsSkVSbDlNWVcxaVpYSjBLQ0J0WVhSbGNtbGhiQzVrYVdabWRYTmxRMjlzYjNJZ0tUc0tmUXAyYjJsa0lGSkZYMGx1WkdseVpXTjBVM0JsWTNWc1lYSmZVR2g1YzJsallXd29JR052Ym5OMElHbHVJSFpsWXpNZ2NtRmthV0Z1WTJVc0lHTnZibk4wSUdsdUlIWmxZek1nYVhKeVlXUnBZVzVqWlN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJqYkdWaGNtTnZZWFJTWVdScFlXNWpaU3dnWTI5dWMzUWdhVzRnUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllU3dnWTI5dWMzUWdhVzRnVUdoNWMybGpZV3hOWVhSbGNtbGhiQ0J0WVhSbGNtbGhiQ3dnYVc1dmRYUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFwSUhzS0NTTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2tKWTJ4bFlYSmpiMkYwVTNCbFkzVnNZWElnS3owZ1kyeGxZWEpqYjJGMFVtRmthV0Z1WTJVZ0tpQkZiblpwY205dWJXVnVkRUpTUkVZb0lHZGxiMjFsZEhKNUxtTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z1oyVnZiV1YwY25rdWRtbGxkMFJwY2l3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFJqQXNJRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRVk1TUN3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtDU05wWm1SbFppQlZVMFZmVTBoRlJVNEtDUWx6YUdWbGJsTndaV04xYkdGeUlDczlJR2x5Y21Ga2FXRnVZMlVnS2lCdFlYUmxjbWxoYkM1emFHVmxia052Ykc5eUlDb2dTVUpNVTJobFpXNUNVa1JHS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUcxaGRHVnlhV0ZzTG5Ob1pXVnVVbTkxWjJodVpYTnpJQ2s3Q2dralpXNWthV1lLQ1habFl6TWdjMmx1WjJ4bFUyTmhkSFJsY21sdVp5QTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpNeUJ0ZFd4MGFWTmpZWFIwWlhKcGJtY2dQU0IyWldNektDQXdMakFnS1RzS0NYWmxZek1nWTI5emFXNWxWMlZwWjJoMFpXUkpjbkpoWkdsaGJtTmxJRDBnYVhKeVlXUnBZVzVqWlNBcUlGSkZRMGxRVWs5RFFVeGZVRWs3Q2dsamIyMXdkWFJsVFhWc2RHbHpZMkYwZEdWeWFXNW5LQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJR2RsYjIxbGRISjVMblpwWlhkRWFYSXNJRzFoZEdWeWFXRnNMbk53WldOMWJHRnlRMjlzYjNJc0lHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVJqa3dMQ0J0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM01zSUhOcGJtZHNaVk5qWVhSMFpYSnBibWNzSUcxMWJIUnBVMk5oZEhSbGNtbHVaeUFwT3dvSmRtVmpNeUJrYVdabWRYTmxJRDBnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDb2dLQ0F4TGpBZ0xTQW9JSE5wYm1kc1pWTmpZWFIwWlhKcGJtY2dLeUJ0ZFd4MGFWTmpZWFIwWlhKcGJtY2dLU0FwT3dvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JUY0dWamRXeGhjaUFyUFNCeVlXUnBZVzVqWlNBcUlITnBibWRzWlZOallYUjBaWEpwYm1jN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEZOd1pXTjFiR0Z5SUNzOUlHMTFiSFJwVTJOaGRIUmxjbWx1WnlBcUlHTnZjMmx1WlZkbGFXZG9kR1ZrU1hKeVlXUnBZVzVqWlRzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCa2FXWm1kWE5sSUNvZ1kyOXphVzVsVjJWcFoyaDBaV1JKY25KaFpHbGhibU5sT3dwOUNpTmtaV1pwYm1VZ1VrVmZSR2x5WldOMENRa0pDVkpGWDBScGNtVmpkRjlRYUhsemFXTmhiQW9qWkdWbWFXNWxJRkpGWDBScGNtVmpkRjlTWldOMFFYSmxZUWtKVWtWZlJHbHlaV04wWDFKbFkzUkJjbVZoWDFCb2VYTnBZMkZzQ2lOa1pXWnBibVVnVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sQ1FsU1JWOUpibVJwY21WamRFUnBabVoxYzJWZlVHaDVjMmxqWVd3S0kyUmxabWx1WlNCU1JWOUpibVJwY21WamRGTndaV04xYkdGeUNRbFNSVjlKYm1ScGNtVmpkRk53WldOMWJHRnlYMUJvZVhOcFkyRnNDbVpzYjJGMElHTnZiWEIxZEdWVGNHVmpkV3hoY2s5alkyeDFjMmx2YmlnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnWkc5MFRsWXNJR052Ym5OMElHbHVJR1pzYjJGMElHRnRZbWxsYm5SUFkyTnNkWE5wYjI0c0lHTnZibk4wSUdsdUlHWnNiMkYwSUhKdmRXZG9ibVZ6Y3lBcElIc0tDWEpsZEhWeWJpQnpZWFIxY21GMFpTZ2djRzkzS0NCa2IzUk9WaUFySUdGdFltbGxiblJQWTJOc2RYTnBiMjRzSUdWNGNESW9JQzBnTVRZdU1DQXFJSEp2ZFdkb2JtVnpjeUF0SURFdU1DQXBJQ2tnTFNBeExqQWdLeUJoYldKcFpXNTBUMk5qYkhWemFXOXVJQ2s3Q24xZ0xDQjFjQ0E5SUdBS1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVRzS1oyVnZiV1YwY25rdWNHOXphWFJwYjI0Z1BTQXRJSFpXYVdWM1VHOXphWFJwYjI0N0NtZGxiMjFsZEhKNUxtNXZjbTFoYkNBOUlHNXZjbTFoYkRzS1oyVnZiV1YwY25rdWRtbGxkMFJwY2lBOUlDZ2dhWE5QY25Sb2IyZHlZWEJvYVdNZ0tTQS9JSFpsWXpNb0lEQXNJREFzSURFZ0tTQTZJRzV2Y20xaGJHbDZaU2dnZGxacFpYZFFiM05wZEdsdmJpQXBPd29qYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkFvSloyVnZiV1YwY25rdVkyeGxZWEpqYjJGMFRtOXliV0ZzSUQwZ1kyeGxZWEpqYjJGMFRtOXliV0ZzT3dvalpXNWthV1lLU1c1amFXUmxiblJNYVdkb2RDQmthWEpsWTNSTWFXZG9kRHNLSTJsbUlDZ2dUbFZOWDFCUFNVNVVYMHhKUjBoVVV5QStJREFnS1NBbUppQmtaV1pwYm1Wa0tDQlNSVjlFYVhKbFkzUWdLUW9KVUc5cGJuUk1hV2RvZENCd2IybHVkRXhwWjJoME93b0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0FtSmlCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NWQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ2NHOXBiblJNYVdkb2RGTm9ZV1J2ZHpzS0NTTmxibVJwWmdvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDFCUFNVNVVYMHhKUjBoVVV6c2dhU0FyS3lBcElIc0tDUWx3YjJsdWRFeHBaMmgwSUQwZ2NHOXBiblJNYVdkb2RITmJJR2tnWFRzS0NRbG5aWFJRYjJsdWRFeHBaMmgwU1c1bWJ5Z2djRzlwYm5STWFXZG9kQ3dnWjJWdmJXVjBjbmtzSUdScGNtVmpkRXhwWjJoMElDazdDZ2tKSTJsbUlHUmxabWx1WldRb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NBbUppQW9JRlZPVWs5TVRFVkVYMHhQVDFCZlNVNUVSVmdnUENCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUFwQ2drSmNHOXBiblJNYVdkb2RGTm9ZV1J2ZHlBOUlIQnZhVzUwVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjA3Q2drSlpHbHlaV04wVEdsbmFIUXVZMjlzYjNJZ0tqMGdZV3hzS0NCaWRtVmpNaWdnWkdseVpXTjBUR2xuYUhRdWRtbHphV0pzWlN3Z2NtVmpaV2wyWlZOb1lXUnZkeUFwSUNrZ1B5Qm5aWFJRYjJsdWRGTm9ZV1J2ZHlnZ2NHOXBiblJUYUdGa2IzZE5ZWEJiSUdrZ1hTd2djRzlwYm5STWFXZG9kRk5vWVdSdmR5NXphR0ZrYjNkTllYQlRhWHBsTENCd2IybHVkRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMEpwWVhNc0lIQnZhVzUwVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzVW1Ga2FYVnpMQ0IyVUc5cGJuUlRhR0ZrYjNkRGIyOXlaRnNnYVNCZExDQndiMmx1ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDBOaGJXVnlZVTVsWVhJc0lIQnZhVzUwVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzUTJGdFpYSmhSbUZ5SUNrZ09pQXhMakE3Q2drSkkyVnVaR2xtQ2drSlVrVmZSR2x5WldOMEtDQmthWEpsWTNSTWFXZG9kQ3dnWjJWdmJXVjBjbmtzSUcxaGRHVnlhV0ZzTENCeVpXWnNaV04wWldSTWFXZG9kQ0FwT3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0kyVnVaR2xtQ2lOcFppQW9JRTVWVFY5VFVFOVVYMHhKUjBoVVV5QStJREFnS1NBbUppQmtaV1pwYm1Wa0tDQlNSVjlFYVhKbFkzUWdLUW9KVTNCdmRFeHBaMmgwSUhOd2IzUk1hV2RvZERzS0NTTnBaaUJrWldacGJtVmtLQ0JWVTBWZlUwaEJSRTlYVFVGUUlDa2dKaVlnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1ZOd2IzUk1hV2RvZEZOb1lXUnZkeUJ6Y0c5MFRHbG5hSFJUYUdGa2IzYzdDZ2tqWlc1a2FXWUtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOVRVRTlVWDB4SlIwaFVVenNnYVNBckt5QXBJSHNLQ1FsemNHOTBUR2xuYUhRZ1BTQnpjRzkwVEdsbmFIUnpXeUJwSUYwN0Nna0paMlYwVTNCdmRFeHBaMmgwU1c1bWJ5Z2djM0J2ZEV4cFoyaDBMQ0JuWlc5dFpYUnllU3dnWkdseVpXTjBUR2xuYUhRZ0tUc0tDUWtqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMU5JUVVSUFYwMUJVQ0FwSUNZbUlDZ2dWVTVTVDB4TVJVUmZURTlQVUY5SlRrUkZXQ0E4SUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdLUW9KQ1hOd2IzUk1hV2RvZEZOb1lXUnZkeUE5SUhOd2IzUk1hV2RvZEZOb1lXUnZkM05iSUdrZ1hUc0tDUWxrYVhKbFkzUk1hV2RvZEM1amIyeHZjaUFxUFNCaGJHd29JR0oyWldNeUtDQmthWEpsWTNSTWFXZG9kQzUyYVhOcFlteGxMQ0J5WldObGFYWmxVMmhoWkc5M0lDa2dLU0EvSUdkbGRGTm9ZV1J2ZHlnZ2MzQnZkRk5vWVdSdmQwMWhjRnNnYVNCZExDQnpjRzkwVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzVFdGd1UybDZaU3dnYzNCdmRFeHBaMmgwVTJoaFpHOTNMbk5vWVdSdmQwSnBZWE1zSUhOd2IzUk1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZFNZV1JwZFhNc0lIWlRjRzkwVTJoaFpHOTNRMjl2Y21SYklHa2dYU0FwSURvZ01TNHdPd29KQ1NObGJtUnBaZ29KQ1ZKRlgwUnBjbVZqZENnZ1pHbHlaV04wVEdsbmFIUXNJR2RsYjIxbGRISjVMQ0J0WVhSbGNtbGhiQ3dnY21WbWJHVmpkR1ZrVEdsbmFIUWdLVHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2lObGJtUnBaZ29qYVdZZ0tDQk9WVTFmUkVsU1gweEpSMGhVVXlBK0lEQWdLU0FtSmlCa1pXWnBibVZrS0NCU1JWOUVhWEpsWTNRZ0tRb0pSR2x5WldOMGFXOXVZV3hNYVdkb2RDQmthWEpsWTNScGIyNWhiRXhwWjJoME93b0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0FtSmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dsRWFYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjN0Nna2paVzVrYVdZS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5RVNWSmZURWxIU0ZSVE95QnBJQ3NySUNrZ2V3b0pDV1JwY21WamRHbHZibUZzVEdsbmFIUWdQU0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBjMXNnYVNCZE93b0pDV2RsZEVScGNtVmpkR2x2Ym1Gc1RHbG5hSFJKYm1adktDQmthWEpsWTNScGIyNWhiRXhwWjJoMExDQm5aVzl0WlhSeWVTd2daR2x5WldOMFRHbG5hSFFnS1RzS0NRa2phV1lnWkdWbWFXNWxaQ2dnVlZORlgxTklRVVJQVjAxQlVDQXBJQ1ltSUNnZ1ZVNVNUMHhNUlVSZlRFOVBVRjlKVGtSRldDQThJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlBcENna0paR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHlBOUlHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6V3lCcElGMDdDZ2tKWkdseVpXTjBUR2xuYUhRdVkyOXNiM0lnS2owZ1lXeHNLQ0JpZG1Wak1pZ2daR2x5WldOMFRHbG5hSFF1ZG1semFXSnNaU3dnY21WalpXbDJaVk5vWVdSdmR5QXBJQ2tnUHlCblpYUlRhR0ZrYjNjb0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRndXeUJwSUYwc0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNUV0Z3VTJsNlpTd2daR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2RDYVdGekxDQmthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMUpoWkdsMWN5d2dka1JwY21WamRHbHZibUZzVTJoaFpHOTNRMjl2Y21SYklHa2dYU0FwSURvZ01TNHdPd29KQ1NObGJtUnBaZ29KQ1ZKRlgwUnBjbVZqZENnZ1pHbHlaV04wVEdsbmFIUXNJR2RsYjIxbGRISjVMQ0J0WVhSbGNtbGhiQ3dnY21WbWJHVmpkR1ZrVEdsbmFIUWdLVHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2lObGJtUnBaZ29qYVdZZ0tDQk9WVTFmVWtWRFZGOUJVa1ZCWDB4SlIwaFVVeUErSURBZ0tTQW1KaUJrWldacGJtVmtLQ0JTUlY5RWFYSmxZM1JmVW1WamRFRnlaV0VnS1FvSlVtVmpkRUZ5WldGTWFXZG9kQ0J5WldOMFFYSmxZVXhwWjJoME93b0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRBb0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVGxWTlgxSkZRMVJmUVZKRlFWOU1TVWRJVkZNN0lHa2dLeXNnS1NCN0Nna0pjbVZqZEVGeVpXRk1hV2RvZENBOUlISmxZM1JCY21WaFRHbG5hSFJ6V3lCcElGMDdDZ2tKVWtWZlJHbHlaV04wWDFKbFkzUkJjbVZoS0NCeVpXTjBRWEpsWVV4cFoyaDBMQ0JuWlc5dFpYUnllU3dnYldGMFpYSnBZV3dzSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2s3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvalpXNWthV1lLSTJsbUlHUmxabWx1WldRb0lGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpTQXBDZ2wyWldNeklHbGliRWx5Y21Ga2FXRnVZMlVnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWXpNZ2FYSnlZV1JwWVc1alpTQTlJR2RsZEVGdFltbGxiblJNYVdkb2RFbHljbUZrYVdGdVkyVW9JR0Z0WW1sbGJuUk1hV2RvZEVOdmJHOXlJQ2s3Q2dscGNuSmhaR2xoYm1ObElDczlJR2RsZEV4cFoyaDBVSEp2WW1WSmNuSmhaR2xoYm1ObEtDQnNhV2RvZEZCeWIySmxMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd2dLVHNLQ1NOcFppQW9JRTVWVFY5SVJVMUpYMHhKUjBoVVV5QStJREFnS1FvSkNTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NRbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlNFVk5TVjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKQ1dseWNtRmthV0Z1WTJVZ0t6MGdaMlYwU0dWdGFYTndhR1Z5WlV4cFoyaDBTWEp5WVdScFlXNWpaU2dnYUdWdGFYTndhR1Z5WlV4cFoyaDBjMXNnYVNCZExDQm5aVzl0WlhSeWVTNXViM0p0WVd3Z0tUc0tDUWw5Q2drSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLQ1NObGJtUnBaZ29qWlc1a2FXWUtJMmxtSUdSbFptbHVaV1FvSUZKRlgwbHVaR2x5WldOMFUzQmxZM1ZzWVhJZ0tRb0pkbVZqTXlCeVlXUnBZVzVqWlNBOUlIWmxZek1vSURBdU1DQXBPd29KZG1Wak15QmpiR1ZoY21OdllYUlNZV1JwWVc1alpTQTlJSFpsWXpNb0lEQXVNQ0FwT3dvalpXNWthV1pnTENCa2NDQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1VrVmZTVzVrYVhKbFkzUkVhV1ptZFhObElDa0tDU05wWm1SbFppQlZVMFZmVEVsSFNGUk5RVkFLQ1FsMlpXTTBJR3hwWjJoMFRXRndWR1Y0Wld3Z1BTQjBaWGgwZFhKbE1rUW9JR3hwWjJoMFRXRndMQ0IyVlhZeUlDazdDZ2tKZG1Wak15QnNhV2RvZEUxaGNFbHljbUZrYVdGdVkyVWdQU0JzYVdkb2RFMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lHeHBaMmgwVFdGd1ZHVjRaV3dnS1M1eVoySWdLaUJzYVdkb2RFMWhjRWx1ZEdWdWMybDBlVHNLQ1FramFXWnVaR1ZtSUZCSVdWTkpRMEZNVEZsZlEwOVNVa1ZEVkY5TVNVZElWRk1LQ1FrSmJHbG5hSFJOWVhCSmNuSmhaR2xoYm1ObElDbzlJRkJKT3dvSkNTTmxibVJwWmdvSkNXbHljbUZrYVdGdVkyVWdLejBnYkdsbmFIUk5ZWEJKY25KaFpHbGhibU5sT3dvSkkyVnVaR2xtQ2dramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBWT1ZrMUJVQ0FwSUNZbUlHUmxabWx1WldRb0lGTlVRVTVFUVZKRUlDa2dKaVlnWkdWbWFXNWxaQ2dnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmlBcENna0phV0pzU1hKeVlXUnBZVzVqWlNBclBTQm5aWFJKUWt4SmNuSmhaR2xoYm1ObEtDQm5aVzl0WlhSeWVTNXViM0p0WVd3Z0tUc0tDU05sYm1ScFpnb2paVzVrYVdZS0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5RlRsWk5RVkFnS1NBbUppQmtaV1pwYm1Wa0tDQlNSVjlKYm1ScGNtVmpkRk53WldOMWJHRnlJQ2tLQ1hKaFpHbGhibU5sSUNzOUlHZGxkRWxDVEZKaFpHbGhibU5sS0NCblpXOXRaWFJ5ZVM1MmFXVjNSR2x5TENCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUcxaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3lBcE93b0pJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlFLQ1FsamJHVmhjbU52WVhSU1lXUnBZVzVqWlNBclBTQm5aWFJKUWt4U1lXUnBZVzVqWlNnZ1oyVnZiV1YwY25rdWRtbGxkMFJwY2l3Z1oyVnZiV1YwY25rdVkyeGxZWEpqYjJGMFRtOXliV0ZzTENCdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ0tUc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQm1jQ0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dVa1ZmU1c1a2FYSmxZM1JFYVdabWRYTmxJQ2tLQ1ZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlNnZ2FYSnlZV1JwWVc1alpTd2daMlZ2YldWMGNua3NJRzFoZEdWeWFXRnNMQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBPd29qWlc1a2FXWUtJMmxtSUdSbFptbHVaV1FvSUZKRlgwbHVaR2x5WldOMFUzQmxZM1ZzWVhJZ0tRb0pVa1ZmU1c1a2FYSmxZM1JUY0dWamRXeGhjaWdnY21Ga2FXRnVZMlVzSUdsaWJFbHljbUZrYVdGdVkyVXNJR05zWldGeVkyOWhkRkpoWkdsaGJtTmxMQ0JuWlc5dFpYUnllU3dnYldGMFpYSnBZV3dzSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2s3Q2lObGJtUnBabUFzSUhCd0lEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZURTlIUkVWUVZFaENWVVlnS1NBbUppQmtaV1pwYm1Wa0tDQlZVMFZmVEU5SFJFVlFWRWhDVlVaZlJWaFVJQ2tLQ1dkc1gwWnlZV2RFWlhCMGFFVllWQ0E5SUhaSmMxQmxjbk53WldOMGFYWmxJRDA5SURBdU1DQS9JR2RzWDBaeVlXZERiMjl5WkM1NklEb2diRzluTWlnZ2RrWnlZV2RFWlhCMGFDQXBJQ29nYkc5blJHVndkR2hDZFdaR1F5QXFJREF1TlRzS0kyVnVaR2xtWUN3Z2JYQWdQU0JnSTJsbUlHUmxabWx1WldRb0lGVlRSVjlNVDBkRVJWQlVTRUpWUmlBcElDWW1JR1JsWm1sdVpXUW9JRlZUUlY5TVQwZEVSVkJVU0VKVlJsOUZXRlFnS1FvSmRXNXBabTl5YlNCbWJHOWhkQ0JzYjJkRVpYQjBhRUoxWmtaRE93b0pkbUZ5ZVdsdVp5Qm1iRzloZENCMlJuSmhaMFJsY0hSb093b0pkbUZ5ZVdsdVp5Qm1iRzloZENCMlNYTlFaWEp6Y0dWamRHbDJaVHNLSTJWdVpHbG1ZQ3dnWjNBZ1BTQmdJMmxtWkdWbUlGVlRSVjlNVDBkRVJWQlVTRUpWUmdvSkkybG1aR1ZtSUZWVFJWOU1UMGRFUlZCVVNFSlZSbDlGV0ZRS0NRbDJZWEo1YVc1bklHWnNiMkYwSUhaR2NtRm5SR1Z3ZEdnN0Nna0pkbUZ5ZVdsdVp5Qm1iRzloZENCMlNYTlFaWEp6Y0dWamRHbDJaVHNLQ1NObGJITmxDZ2tKZFc1cFptOXliU0JtYkc5aGRDQnNiMmRFWlhCMGFFSjFaa1pET3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUhod0lEMGdZQ05wWm1SbFppQlZVMFZmVEU5SFJFVlFWRWhDVlVZS0NTTnBabVJsWmlCVlUwVmZURTlIUkVWUVZFaENWVVpmUlZoVUNna0pka1p5WVdkRVpYQjBhQ0E5SURFdU1DQXJJR2RzWDFCdmMybDBhVzl1TG5jN0Nna0pka2x6VUdWeWMzQmxZM1JwZG1VZ1BTQm1iRzloZENnZ2FYTlFaWEp6Y0dWamRHbDJaVTFoZEhKcGVDZ2djSEp2YW1WamRHbHZiazFoZEhKcGVDQXBJQ2s3Q2dralpXeHpaUW9KQ1dsbUlDZ2dhWE5RWlhKemNHVmpkR2wyWlUxaGRISnBlQ2dnY0hKdmFtVmpkR2x2YmsxaGRISnBlQ0FwSUNrZ2V3b0pDUWxuYkY5UWIzTnBkR2x2Ymk1NklEMGdiRzluTWlnZ2JXRjRLQ0JGVUZOSlRFOU9MQ0JuYkY5UWIzTnBkR2x2Ymk1M0lDc2dNUzR3SUNrZ0tTQXFJR3h2WjBSbGNIUm9RblZtUmtNZ0xTQXhMakE3Q2drSkNXZHNYMUJ2YzJsMGFXOXVMbm9nS2owZ1oyeGZVRzl6YVhScGIyNHVkenNLQ1FsOUNna2paVzVrYVdZS0kyVnVaR2xtWUN3Z2VYQWdQU0JnSTJsbVpHVm1JRlZUUlY5TlFWQUtDWFpsWXpRZ2RHVjRaV3hEYjJ4dmNpQTlJSFJsZUhSMWNtVXlSQ2dnYldGd0xDQjJWWFlnS1RzS0NYUmxlR1ZzUTI5c2IzSWdQU0J0WVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IwWlhobGJFTnZiRzl5SUNrN0NnbGthV1ptZFhObFEyOXNiM0lnS2owZ2RHVjRaV3hEYjJ4dmNqc0tJMlZ1WkdsbVlDd2dkbkFnUFNCZ0kybG1aR1ZtSUZWVFJWOU5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUcxaGNEc0tJMlZ1WkdsbVlDd2dYM0FnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5TlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRVXhRU0VGTlFWQWdLUW9KZG1Wak1pQjFkaUE5SUNnZ2RYWlVjbUZ1YzJadmNtMGdLaUIyWldNektDQm5iRjlRYjJsdWRFTnZiM0prTG5nc0lERXVNQ0F0SUdkc1gxQnZhVzUwUTI5dmNtUXVlU3dnTVNBcElDa3VlSGs3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDAxQlVBb0pkbVZqTkNCdFlYQlVaWGhsYkNBOUlIUmxlSFIxY21VeVJDZ2diV0Z3TENCMWRpQXBPd29KWkdsbVpuVnpaVU52Ykc5eUlDbzlJRzFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JRzFoY0ZSbGVHVnNJQ2s3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBGTVVFaEJUVUZRQ2dsa2FXWm1kWE5sUTI5c2IzSXVZU0FxUFNCMFpYaDBkWEpsTWtRb0lHRnNjR2hoVFdGd0xDQjFkaUFwTG1jN0NpTmxibVJwWm1Bc0lFMXdJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwRk1VRWhCVFVGUUlDa0tDWFZ1YVdadmNtMGdiV0YwTXlCMWRsUnlZVzV6Wm05eWJUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCdFlYQTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMEZNVUVoQlRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JoYkhCb1lVMWhjRHNLSTJWdVpHbG1ZQ3dnWW5BZ1BTQmdabXh2WVhRZ2JXVjBZV3h1WlhOelJtRmpkRzl5SUQwZ2JXVjBZV3h1WlhOek93b2phV1prWldZZ1ZWTkZYMDFGVkVGTVRrVlRVMDFCVUFvSmRtVmpOQ0IwWlhobGJFMWxkR0ZzYm1WemN5QTlJSFJsZUhSMWNtVXlSQ2dnYldWMFlXeHVaWE56VFdGd0xDQjJWWFlnS1RzS0NXMWxkR0ZzYm1WemMwWmhZM1J2Y2lBcVBTQjBaWGhsYkUxbGRHRnNibVZ6Y3k1aU93b2paVzVrYVdaZ0xDQjNjQ0E5SUdBamFXWmtaV1lnVlZORlgwMUZWRUZNVGtWVFUwMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYldWMFlXeHVaWE56VFdGd093b2paVzVrYVdaZ0xDQlRjQ0E5SUdBamFXWmtaV1lnVlZORlgwMVBVbEJJVGs5U1RVRk1Vd29KYjJKcVpXTjBUbTl5YldGc0lDbzlJRzF2Y25Cb1ZHRnlaMlYwUW1GelpVbHVabXgxWlc1alpUc0tDU05wWm1SbFppQk5UMUpRU0ZSQlVrZEZWRk5mVkVWWVZGVlNSUW9KQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFMVBVbEJJVkVGU1IwVlVVMTlEVDFWT1ZEc2dhU0FyS3lBcElIc0tDUWtKYVdZZ0tDQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSUdrZ1hTQStJREF1TUNBcElHOWlhbVZqZEU1dmNtMWhiQ0FyUFNCblpYUk5iM0p3YUNnZ1oyeGZWbVZ5ZEdWNFNVUXNJR2tzSURFc0lESWdLU0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dhU0JkT3dvSkNYMEtDU05sYkhObENna0piMkpxWldOMFRtOXliV0ZzSUNzOUlHMXZjbkJvVG05eWJXRnNNQ0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dNQ0JkT3dvSkNXOWlhbVZqZEU1dmNtMWhiQ0FyUFNCdGIzSndhRTV2Y20xaGJERWdLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklERWdYVHNLQ1FsdlltcGxZM1JPYjNKdFlXd2dLejBnYlc5eWNHaE9iM0p0WVd3eUlDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBeUlGMDdDZ2tKYjJKcVpXTjBUbTl5YldGc0lDczlJRzF2Y25Cb1RtOXliV0ZzTXlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTXlCZE93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGUndJRDBnWUNOcFptUmxaaUJWVTBWZlRVOVNVRWhVUVZKSFJWUlRDZ2wxYm1sbWIzSnRJR1pzYjJGMElHMXZjbkJvVkdGeVoyVjBRbUZ6WlVsdVpteDFaVzVqWlRzS0NTTnBabVJsWmlCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JRb0pDWFZ1YVdadmNtMGdabXh2WVhRZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUJOVDFKUVNGUkJVa2RGVkZOZlEwOVZUbFFnWFRzS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJFRnljbUY1SUcxdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21VN0Nna0pkVzVwWm05eWJTQjJaV015SUcxdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21WVGFYcGxPd29KQ1habFl6TWdaMlYwVFc5eWNHZ29JR052Ym5OMElHbHVJR2x1ZENCMlpYSjBaWGhKYm1SbGVDd2dZMjl1YzNRZ2FXNGdhVzUwSUcxdmNuQm9WR0Z5WjJWMFNXNWtaWGdzSUdOdmJuTjBJR2x1SUdsdWRDQnZabVp6WlhRc0lHTnZibk4wSUdsdUlHbHVkQ0J6ZEhKcFpHVWdLU0I3Q2drSkNXWnNiMkYwSUhSbGVHVnNTVzVrWlhnZ1BTQm1iRzloZENnZ2RtVnlkR1Y0U1c1a1pYZ2dLaUJ6ZEhKcFpHVWdLeUJ2Wm1aelpYUWdLVHNLQ1FrSlpteHZZWFFnZVNBOUlHWnNiMjl5S0NCMFpYaGxiRWx1WkdWNElDOGdiVzl5Y0doVVlYSm5aWFJ6VkdWNGRIVnlaVk5wZW1VdWVDQXBPd29KQ1FsbWJHOWhkQ0I0SUQwZ2RHVjRaV3hKYm1SbGVDQXRJSGtnS2lCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbFUybDZaUzU0T3dvSkNRbDJaV016SUcxdmNuQm9WVllnUFNCMlpXTXpLQ0FvSUhnZ0t5QXdMalVnS1NBdklHMXZjbkJvVkdGeVoyVjBjMVJsZUhSMWNtVlRhWHBsTG5nc0lIa2dMeUJ0YjNKd2FGUmhjbWRsZEhOVVpYaDBkWEpsVTJsNlpTNTVMQ0J0YjNKd2FGUmhjbWRsZEVsdVpHVjRJQ2s3Q2drSkNYSmxkSFZ5YmlCMFpYaDBkWEpsS0NCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbExDQnRiM0p3YUZWV0lDa3VlSGw2T3dvSkNYMEtDU05sYkhObENna0pJMmxtYm1SbFppQlZVMFZmVFU5U1VFaE9UMUpOUVV4VENna0pDWFZ1YVdadmNtMGdabXh2WVhRZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUE0SUYwN0Nna0pJMlZzYzJVS0NRa0pkVzVwWm05eWJTQm1iRzloZENCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJRFFnWFRzS0NRa2paVzVrYVdZS0NTTmxibVJwWmdvalpXNWthV1pnTENCRmNDQTlJR0FqYVdaa1pXWWdWVk5GWDAxUFVsQklWRUZTUjBWVVV3b0pkSEpoYm5ObWIzSnRaV1FnS2owZ2JXOXljR2hVWVhKblpYUkNZWE5sU1c1bWJIVmxibU5sT3dvSkkybG1aR1ZtSUUxUFVsQklWRUZTUjBWVVUxOVVSVmhVVlZKRkNna0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVFU5U1VFaFVRVkpIUlZSVFgwTlBWVTVVT3lCcElDc3JJQ2tnZXdvSkNRa2phV1p1WkdWbUlGVlRSVjlOVDFKUVNFNVBVazFCVEZNS0NRa0pDV2xtSUNnZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUJwSUYwZ1BpQXdMakFnS1NCMGNtRnVjMlp2Y20xbFpDQXJQU0JuWlhSTmIzSndhQ2dnWjJ4ZlZtVnlkR1Y0U1VRc0lHa3NJREFzSURFZ0tTQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ2FTQmRPd29KQ1FralpXeHpaUW9KQ1FrSmFXWWdLQ0J0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklHa2dYU0ErSURBdU1DQXBJSFJ5WVc1elptOXliV1ZrSUNzOUlHZGxkRTF2Y25Cb0tDQm5iRjlXWlhKMFpYaEpSQ3dnYVN3Z01Dd2dNaUFwSUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUJwSUYwN0Nna0pDU05sYm1ScFpnb0pDWDBLQ1NObGJITmxDZ2tKZEhKaGJuTm1iM0p0WldRZ0t6MGdiVzl5Y0doVVlYSm5aWFF3SUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUF3SUYwN0Nna0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JXOXljR2hVWVhKblpYUXhJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXhJRjA3Q2drSmRISmhibk5tYjNKdFpXUWdLejBnYlc5eWNHaFVZWEpuWlhReUlDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBeUlGMDdDZ2tKZEhKaGJuTm1iM0p0WldRZ0t6MGdiVzl5Y0doVVlYSm5aWFF6SUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUF6SUYwN0Nna0pJMmxtYm1SbFppQlZVMFZmVFU5U1VFaE9UMUpOUVV4VENna0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBOQ0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dOQ0JkT3dvSkNRbDBjbUZ1YzJadmNtMWxaQ0FyUFNCdGIzSndhRlJoY21kbGREVWdLaUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklEVWdYVHNLQ1FrSmRISmhibk5tYjNKdFpXUWdLejBnYlc5eWNHaFVZWEpuWlhRMklDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBMklGMDdDZ2tKQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTnlBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTnlCZE93b0pDU05sYm1ScFpnb0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lFRndJRDBnWUdac2IyRjBJR1poWTJWRWFYSmxZM1JwYjI0Z1BTQm5iRjlHY205dWRFWmhZMmx1WnlBL0lERXVNQ0E2SUMwZ01TNHdPd29qYVdaa1pXWWdSa3hCVkY5VFNFRkVSVVFLQ1habFl6TWdabVI0SUQwZ2RtVmpNeWdnWkVaa2VDZ2dkbFpwWlhkUWIzTnBkR2x2Ymk1NElDa3NJR1JHWkhnb0lIWldhV1YzVUc5emFYUnBiMjR1ZVNBcExDQmtSbVI0S0NCMlZtbGxkMUJ2YzJsMGFXOXVMbm9nS1NBcE93b0pkbVZqTXlCbVpIa2dQU0IyWldNektDQmtSbVI1S0NCMlZtbGxkMUJ2YzJsMGFXOXVMbmdnS1N3Z1pFWmtlU2dnZGxacFpYZFFiM05wZEdsdmJpNTVJQ2tzSUdSR1pIa29JSFpXYVdWM1VHOXphWFJwYjI0dWVpQXBJQ2s3Q2dsMlpXTXpJRzV2Y20xaGJDQTlJRzV2Y20xaGJHbDZaU2dnWTNKdmMzTW9JR1prZUN3Z1ptUjVJQ2tnS1RzS0kyVnNjMlVLQ1habFl6TWdibTl5YldGc0lEMGdibTl5YldGc2FYcGxLQ0IyVG05eWJXRnNJQ2s3Q2dramFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNna0pibTl5YldGc0lEMGdibTl5YldGc0lDb2dabUZqWlVScGNtVmpkR2x2YmpzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUZWVFJWOVVRVTVIUlU1VUNna0pkbVZqTXlCMFlXNW5aVzUwSUQwZ2JtOXliV0ZzYVhwbEtDQjJWR0Z1WjJWdWRDQXBPd29KQ1habFl6TWdZbWwwWVc1blpXNTBJRDBnYm05eWJXRnNhWHBsS0NCMlFtbDBZVzVuWlc1MElDazdDZ2tKSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNRbDBZVzVuWlc1MElEMGdkR0Z1WjJWdWRDQXFJR1poWTJWRWFYSmxZM1JwYjI0N0Nna0pDV0pwZEdGdVoyVnVkQ0E5SUdKcGRHRnVaMlZ1ZENBcUlHWmhZMlZFYVhKbFkzUnBiMjQ3Q2drSkkyVnVaR2xtQ2drSkkybG1JR1JsWm1sdVpXUW9JRlJCVGtkRlRsUlRVRUZEUlY5T1QxSk5RVXhOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlEweEZRVkpEVDBGVVgwNVBVazFCVEUxQlVDQXBDZ2tKQ1cxaGRETWdkbFJDVGlBOUlHMWhkRE1vSUhSaGJtZGxiblFzSUdKcGRHRnVaMlZ1ZEN3Z2JtOXliV0ZzSUNrN0Nna0pJMlZ1WkdsbUNna2paVzVrYVdZS0kyVnVaR2xtQ25abFl6TWdaMlZ2YldWMGNubE9iM0p0WVd3Z1BTQnViM0p0WVd3N1lDd2dRM0FnUFNCZ0kybG1aR1ZtSUU5Q1NrVkRWRk5RUVVORlgwNVBVazFCVEUxQlVBb0pibTl5YldGc0lEMGdkR1Y0ZEhWeVpUSkVLQ0J1YjNKdFlXeE5ZWEFzSUhaVmRpQXBMbmg1ZWlBcUlESXVNQ0F0SURFdU1Ec0tDU05wWm1SbFppQkdURWxRWDFOSlJFVkVDZ2tKYm05eWJXRnNJRDBnTFNCdWIzSnRZV3c3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJFVDFWQ1RFVmZVMGxFUlVRS0NRbHViM0p0WVd3Z1BTQnViM0p0WVd3Z0tpQm1ZV05sUkdseVpXTjBhVzl1T3dvSkkyVnVaR2xtQ2dsdWIzSnRZV3dnUFNCdWIzSnRZV3hwZW1Vb0lHNXZjbTFoYkUxaGRISnBlQ0FxSUc1dmNtMWhiQ0FwT3dvalpXeHBaaUJrWldacGJtVmtLQ0JVUVU1SFJVNVVVMUJCUTBWZlRrOVNUVUZNVFVGUUlDa0tDWFpsWXpNZ2JXRndUaUE5SUhSbGVIUjFjbVV5UkNnZ2JtOXliV0ZzVFdGd0xDQjJWWFlnS1M1NGVYb2dLaUF5TGpBZ0xTQXhMakE3Q2dsdFlYQk9Mbmg1SUNvOUlHNXZjbTFoYkZOallXeGxPd29KSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2drSmJtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQjJWRUpPSUNvZ2JXRndUaUFwT3dvSkkyVnNjMlVLQ1FsdWIzSnRZV3dnUFNCd1pYSjBkWEppVG05eWJXRnNNa0Z5WWlnZ0xTQjJWbWxsZDFCdmMybDBhVzl1TENCdWIzSnRZV3dzSUcxaGNFNHNJR1poWTJWRWFYSmxZM1JwYjI0Z0tUc0tDU05sYm1ScFpnb2paV3hwWmlCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBDZ2x1YjNKdFlXd2dQU0J3WlhKMGRYSmlUbTl5YldGc1FYSmlLQ0F0SUhaV2FXVjNVRzl6YVhScGIyNHNJRzV2Y20xaGJDd2daRWhrZUhsZlpuZGtLQ2tzSUdaaFkyVkVhWEpsWTNScGIyNGdLVHNLSTJWdVpHbG1ZQ3dnVEhBZ1BTQmdJMmxtYm1SbFppQkdURUZVWDFOSVFVUkZSQW9KZG1GeWVXbHVaeUIyWldNeklIWk9iM0p0WVd3N0Nna2phV1prWldZZ1ZWTkZYMVJCVGtkRlRsUUtDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsUmhibWRsYm5RN0Nna0pkbUZ5ZVdsdVp5QjJaV016SUhaQ2FYUmhibWRsYm5RN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1VuQWdQU0JnSTJsbWJtUmxaaUJHVEVGVVgxTklRVVJGUkFvSmRtRnllV2x1WnlCMlpXTXpJSFpPYjNKdFlXdzdDZ2tqYVdaa1pXWWdWVk5GWDFSQlRrZEZUbFFLQ1FsMllYSjVhVzVuSUhabFl6TWdkbFJoYm1kbGJuUTdDZ2tKZG1GeWVXbHVaeUIyWldNeklIWkNhWFJoYm1kbGJuUTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dVSEFnUFNCZ0kybG1ibVJsWmlCR1RFRlVYMU5JUVVSRlJBb0pkazV2Y20xaGJDQTlJRzV2Y20xaGJHbDZaU2dnZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnS1RzS0NTTnBabVJsWmlCVlUwVmZWRUZPUjBWT1ZBb0pDWFpVWVc1blpXNTBJRDBnYm05eWJXRnNhWHBsS0NCMGNtRnVjMlp2Y20xbFpGUmhibWRsYm5RZ0tUc0tDUWwyUW1sMFlXNW5aVzUwSUQwZ2JtOXliV0ZzYVhwbEtDQmpjbTl6Y3lnZ2RrNXZjbTFoYkN3Z2RsUmhibWRsYm5RZ0tTQXFJSFJoYm1kbGJuUXVkeUFwT3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUVsd0lEMGdZQ05wWm1SbFppQlZVMFZmVGs5U1RVRk1UVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCdWIzSnRZV3hOWVhBN0NnbDFibWxtYjNKdElIWmxZeklnYm05eWJXRnNVMk5oYkdVN0NpTmxibVJwWmdvamFXWmtaV1lnVDBKS1JVTlVVMUJCUTBWZlRrOVNUVUZNVFVGUUNnbDFibWxtYjNKdElHMWhkRE1nYm05eWJXRnNUV0YwY21sNE93b2paVzVrYVdZS0kybG1JQ0VnWkdWbWFXNWxaQ0FvSUZWVFJWOVVRVTVIUlU1VUlDa2dKaVlnS0NCa1pXWnBibVZrSUNnZ1ZFRk9SMFZPVkZOUVFVTkZYMDVQVWsxQlRFMUJVQ0FwSUh4OElHUmxabWx1WldRZ0tDQlZVMFZmUTB4RlFWSkRUMEZVWDA1UFVrMUJURTFCVUNBcElDa0tDWFpsWXpNZ2NHVnlkSFZ5WWs1dmNtMWhiREpCY21Jb0lIWmxZek1nWlhsbFgzQnZjeXdnZG1Wak15QnpkWEptWDI1dmNtMHNJSFpsWXpNZ2JXRndUaXdnWm14dllYUWdabUZqWlVScGNtVmpkR2x2YmlBcElIc0tDUWwyWldNeklIRXdJRDBnZG1Wak15Z2daRVprZUNnZ1pYbGxYM0J2Y3k1NElDa3NJR1JHWkhnb0lHVjVaVjl3YjNNdWVTQXBMQ0JrUm1SNEtDQmxlV1ZmY0c5ekxub2dLU0FwT3dvSkNYWmxZek1nY1RFZ1BTQjJaV016S0NCa1JtUjVLQ0JsZVdWZmNHOXpMbmdnS1N3Z1pFWmtlU2dnWlhsbFgzQnZjeTU1SUNrc0lHUkdaSGtvSUdWNVpWOXdiM011ZWlBcElDazdDZ2tKZG1Wak1pQnpkREFnUFNCa1JtUjRLQ0IyVlhZdWMzUWdLVHNLQ1FsMlpXTXlJSE4wTVNBOUlHUkdaSGtvSUhaVmRpNXpkQ0FwT3dvSkNYWmxZek1nVGlBOUlITjFjbVpmYm05eWJUc0tDUWwyWldNeklIRXhjR1Z5Y0NBOUlHTnliM056S0NCeE1Td2dUaUFwT3dvSkNYWmxZek1nY1RCd1pYSndJRDBnWTNKdmMzTW9JRTRzSUhFd0lDazdDZ2tKZG1Wak15QlVJRDBnY1RGd1pYSndJQ29nYzNRd0xuZ2dLeUJ4TUhCbGNuQWdLaUJ6ZERFdWVEc0tDUWwyWldNeklFSWdQU0J4TVhCbGNuQWdLaUJ6ZERBdWVTQXJJSEV3Y0dWeWNDQXFJSE4wTVM1NU93b0pDV1pzYjJGMElHUmxkQ0E5SUcxaGVDZ2daRzkwS0NCVUxDQlVJQ2tzSUdSdmRDZ2dRaXdnUWlBcElDazdDZ2tKWm14dllYUWdjMk5oYkdVZ1BTQW9JR1JsZENBOVBTQXdMakFnS1NBL0lEQXVNQ0E2SUdaaFkyVkVhWEpsWTNScGIyNGdLaUJwYm5abGNuTmxjM0Z5ZENnZ1pHVjBJQ2s3Q2drSmNtVjBkWEp1SUc1dmNtMWhiR2w2WlNnZ1ZDQXFJQ2dnYldGd1RpNTRJQ29nYzJOaGJHVWdLU0FySUVJZ0tpQW9JRzFoY0U0dWVTQXFJSE5qWVd4bElDa2dLeUJPSUNvZ2JXRndUaTU2SUNrN0NnbDlDaU5sYm1ScFptQXNJRVJ3SUQwZ1lDTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2wyWldNeklHTnNaV0Z5WTI5aGRFNXZjbTFoYkNBOUlHZGxiMjFsZEhKNVRtOXliV0ZzT3dvalpXNWthV1pnTENCR2NDQTlJR0FqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkY5T1QxSk5RVXhOUVZBS0NYWmxZek1nWTJ4bFlYSmpiMkYwVFdGd1RpQTlJSFJsZUhSMWNtVXlSQ2dnWTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3TENCMlZYWWdLUzU0ZVhvZ0tpQXlMakFnTFNBeExqQTdDZ2xqYkdWaGNtTnZZWFJOWVhCT0xuaDVJQ285SUdOc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bE93b0pJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2tKWTJ4bFlYSmpiMkYwVG05eWJXRnNJRDBnYm05eWJXRnNhWHBsS0NCMlZFSk9JQ29nWTJ4bFlYSmpiMkYwVFdGd1RpQXBPd29KSTJWc2MyVUtDUWxqYkdWaGNtTnZZWFJPYjNKdFlXd2dQU0J3WlhKMGRYSmlUbTl5YldGc01rRnlZaWdnTFNCMlZtbGxkMUJ2YzJsMGFXOXVMQ0JqYkdWaGNtTnZZWFJPYjNKdFlXd3NJR05zWldGeVkyOWhkRTFoY0U0c0lHWmhZMlZFYVhKbFkzUnBiMjRnS1RzS0NTTmxibVJwWmdvalpXNWthV1pnTENCT2NDQTlJR0FqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkUxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdZMnhsWVhKamIyRjBUV0Z3T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSZlVrOVZSMGhPUlZOVFRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZGOU9UMUpOUVV4TlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR05zWldGeVkyOWhkRTV2Y20xaGJFMWhjRHNLQ1hWdWFXWnZjbTBnZG1Wak1pQmpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaVHNLSTJWdVpHbG1ZQ3dnUW5BZ1BTQmdJMmxtWkdWbUlFOVFRVkZWUlFwa2FXWm1kWE5sUTI5c2IzSXVZU0E5SURFdU1Ec0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZWRkpCVGxOTlNWTlRTVTlPQ21ScFptWjFjMlZEYjJ4dmNpNWhJQ285SUhSeVlXNXpiV2x6YzJsdmJrRnNjR2hoSUNzZ01DNHhPd29qWlc1a2FXWUtaMnhmUm5KaFowTnZiRzl5SUQwZ2RtVmpOQ2dnYjNWMFoyOXBibWRNYVdkb2RDd2daR2xtWm5WelpVTnZiRzl5TG1FZ0tUdGdMQ0I2Y0NBOUlHQjJaV016SUhCaFkydE9iM0p0WVd4VWIxSkhRaWdnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3Z0tTQjdDZ2x5WlhSMWNtNGdibTl5YldGc2FYcGxLQ0J1YjNKdFlXd2dLU0FxSURBdU5TQXJJREF1TlRzS2ZRcDJaV016SUhWdWNHRmphMUpIUWxSdlRtOXliV0ZzS0NCamIyNXpkQ0JwYmlCMlpXTXpJSEpuWWlBcElIc0tDWEpsZEhWeWJpQXlMakFnS2lCeVoySXVlSGw2SUMwZ01TNHdPd3A5Q21OdmJuTjBJR1pzYjJGMElGQmhZMnRWY0hOallXeGxJRDBnTWpVMkxpQXZJREkxTlM0N1kyOXVjM1FnWm14dllYUWdWVzV3WVdOclJHOTNibk5qWVd4bElEMGdNalUxTGlBdklESTFOaTQ3Q21OdmJuTjBJSFpsWXpNZ1VHRmphMFpoWTNSdmNuTWdQU0IyWldNektDQXlOVFl1SUNvZ01qVTJMaUFxSURJMU5pNHNJREkxTmk0Z0tpQXlOVFl1TENBeU5UWXVJQ2s3Q21OdmJuTjBJSFpsWXpRZ1ZXNXdZV05yUm1GamRHOXljeUE5SUZWdWNHRmphMFJ2ZDI1elkyRnNaU0F2SUhabFl6UW9JRkJoWTJ0R1lXTjBiM0p6TENBeExpQXBPd3BqYjI1emRDQm1iRzloZENCVGFHbG1kRkpwWjJoME9DQTlJREV1SUM4Z01qVTJManNLZG1Wak5DQndZV05yUkdWd2RHaFViMUpIUWtFb0lHTnZibk4wSUdsdUlHWnNiMkYwSUhZZ0tTQjdDZ2wyWldNMElISWdQU0IyWldNMEtDQm1jbUZqZENnZ2RpQXFJRkJoWTJ0R1lXTjBiM0p6SUNrc0lIWWdLVHNLQ1hJdWVYcDNJQzA5SUhJdWVIbDZJQ29nVTJocFpuUlNhV2RvZERnN0NYSmxkSFZ5YmlCeUlDb2dVR0ZqYTFWd2MyTmhiR1U3Q24wS1pteHZZWFFnZFc1d1lXTnJVa2RDUVZSdlJHVndkR2dvSUdOdmJuTjBJR2x1SUhabFl6UWdkaUFwSUhzS0NYSmxkSFZ5YmlCa2IzUW9JSFlzSUZWdWNHRmphMFpoWTNSdmNuTWdLVHNLZlFwMlpXTTBJSEJoWTJzeVNHRnNabFJ2VWtkQ1FTZ2dkbVZqTWlCMklDa2dld29KZG1Wak5DQnlJRDBnZG1Wak5DZ2dkaTU0TENCbWNtRmpkQ2dnZGk1NElDb2dNalUxTGpBZ0tTd2dkaTU1TENCbWNtRmpkQ2dnZGk1NUlDb2dNalUxTGpBZ0tTQXBPd29KY21WMGRYSnVJSFpsWXpRb0lISXVlQ0F0SUhJdWVTQXZJREkxTlM0d0xDQnlMbmtzSUhJdWVpQXRJSEl1ZHlBdklESTFOUzR3TENCeUxuY2dLVHNLZlFwMlpXTXlJSFZ1Y0dGamExSkhRa0ZVYnpKSVlXeG1LQ0IyWldNMElIWWdLU0I3Q2dseVpYUjFjbTRnZG1Wak1pZ2dkaTU0SUNzZ0tDQjJMbmtnTHlBeU5UVXVNQ0FwTENCMkxub2dLeUFvSUhZdWR5QXZJREkxTlM0d0lDa2dLVHNLZlFwbWJHOWhkQ0IyYVdWM1dsUnZUM0owYUc5bmNtRndhR2xqUkdWd2RHZ29JR052Ym5OMElHbHVJR1pzYjJGMElIWnBaWGRhTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J1WldGeUxDQmpiMjV6ZENCcGJpQm1iRzloZENCbVlYSWdLU0I3Q2dseVpYUjFjbTRnS0NCMmFXVjNXaUFySUc1bFlYSWdLU0F2SUNnZ2JtVmhjaUF0SUdaaGNpQXBPd3A5Q21ac2IyRjBJRzl5ZEdodlozSmhjR2hwWTBSbGNIUm9WRzlXYVdWM1dpZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2JHbHVaV0Z5UTJ4cGNGb3NJR052Ym5OMElHbHVJR1pzYjJGMElHNWxZWElzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1poY2lBcElIc0tDWEpsZEhWeWJpQnNhVzVsWVhKRGJHbHdXaUFxSUNnZ2JtVmhjaUF0SUdaaGNpQXBJQzBnYm1WaGNqc0tmUXBtYkc5aGRDQjJhV1YzV2xSdlVHVnljM0JsWTNScGRtVkVaWEIwYUNnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnZG1sbGQxb3NJR052Ym5OMElHbHVJR1pzYjJGMElHNWxZWElzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1poY2lBcElIc0tDWEpsZEhWeWJpQW9JQ2dnYm1WaGNpQXJJSFpwWlhkYUlDa2dLaUJtWVhJZ0tTQXZJQ2dnS0NCbVlYSWdMU0J1WldGeUlDa2dLaUIyYVdWM1dpQXBPd3A5Q21ac2IyRjBJSEJsY25Od1pXTjBhWFpsUkdWd2RHaFViMVpwWlhkYUtDQmpiMjV6ZENCcGJpQm1iRzloZENCcGJuWkRiR2x3V2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnYm1WaGNpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1ptRnlJQ2tnZXdvSmNtVjBkWEp1SUNnZ2JtVmhjaUFxSUdaaGNpQXBJQzhnS0NBb0lHWmhjaUF0SUc1bFlYSWdLU0FxSUdsdWRrTnNhWEJhSUMwZ1ptRnlJQ2s3Q24xZ0xDQlZjQ0E5SUdBamFXWmtaV1lnVUZKRlRWVk1WRWxRVEVsRlJGOUJURkJJUVFvSloyeGZSbkpoWjBOdmJHOXlMbkpuWWlBcVBTQm5iRjlHY21GblEyOXNiM0l1WVRzS0kyVnVaR2xtWUN3Z1QzQWdQU0JnZG1Wak5DQnRkbEJ2YzJsMGFXOXVJRDBnZG1Wak5DZ2dkSEpoYm5ObWIzSnRaV1FzSURFdU1DQXBPd29qYVdaa1pXWWdWVk5GWDBsT1UxUkJUa05KVGtjS0NXMTJVRzl6YVhScGIyNGdQU0JwYm5OMFlXNWpaVTFoZEhKcGVDQXFJRzEyVUc5emFYUnBiMjQ3Q2lObGJtUnBaZ3B0ZGxCdmMybDBhVzl1SUQwZ2JXOWtaV3hXYVdWM1RXRjBjbWw0SUNvZ2JYWlFiM05wZEdsdmJqc0taMnhmVUc5emFYUnBiMjRnUFNCd2NtOXFaV04wYVc5dVRXRjBjbWw0SUNvZ2JYWlFiM05wZEdsdmJqdGdMQ0JJY0NBOUlHQWphV1prWldZZ1JFbFVTRVZTU1U1SENnbG5iRjlHY21GblEyOXNiM0l1Y21kaUlEMGdaR2wwYUdWeWFXNW5LQ0JuYkY5R2NtRm5RMjlzYjNJdWNtZGlJQ2s3Q2lObGJtUnBabUFzSUd0d0lEMGdZQ05wWm1SbFppQkVTVlJJUlZKSlRrY0tDWFpsWXpNZ1pHbDBhR1Z5YVc1bktDQjJaV016SUdOdmJHOXlJQ2tnZXdvSkNXWnNiMkYwSUdkeWFXUmZjRzl6YVhScGIyNGdQU0J5WVc1a0tDQm5iRjlHY21GblEyOXZjbVF1ZUhrZ0tUc0tDUWwyWldNeklHUnBkR2hsY2w5emFHbG1kRjlTUjBJZ1BTQjJaV016S0NBd0xqSTFJQzhnTWpVMUxqQXNJQzB3TGpJMUlDOGdNalUxTGpBc0lEQXVNalVnTHlBeU5UVXVNQ0FwT3dvSkNXUnBkR2hsY2w5emFHbG1kRjlTUjBJZ1BTQnRhWGdvSURJdU1DQXFJR1JwZEdobGNsOXphR2xtZEY5U1IwSXNJQzB5TGpBZ0tpQmthWFJvWlhKZmMyaHBablJmVWtkQ0xDQm5jbWxrWDNCdmMybDBhVzl1SUNrN0Nna0pjbVYwZFhKdUlHTnZiRzl5SUNzZ1pHbDBhR1Z5WDNOb2FXWjBYMUpIUWpzS0NYMEtJMlZ1WkdsbVlDd2dSM0FnUFNCZ1pteHZZWFFnY205MVoyaHVaWE56Um1GamRHOXlJRDBnY205MVoyaHVaWE56T3dvamFXWmtaV1lnVlZORlgxSlBWVWRJVGtWVFUwMUJVQW9KZG1Wak5DQjBaWGhsYkZKdmRXZG9ibVZ6Y3lBOUlIUmxlSFIxY21VeVJDZ2djbTkxWjJodVpYTnpUV0Z3TENCMlZYWWdLVHNLQ1hKdmRXZG9ibVZ6YzBaaFkzUnZjaUFxUFNCMFpYaGxiRkp2ZFdkb2JtVnpjeTVuT3dvalpXNWthV1pnTENCV2NDQTlJR0FqYVdaa1pXWWdWVk5GWDFKUFZVZElUa1ZUVTAxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjbTkxWjJodVpYTnpUV0Z3T3dvalpXNWthV1pnTENCWGNDQTlJR0FqYVdaa1pXWWdWVk5GWDFOSVFVUlBWMDFCVUFvSkkybG1JRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDUWwxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0ZzZ1RsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmRtRnllV2x1WnlCMlpXTTBJSFpFYVhKbFkzUnBiMjVoYkZOb1lXUnZkME52YjNKa1d5Qk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbHpkSEoxWTNRZ1JHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeUI3Q2drSkNXWnNiMkYwSUhOb1lXUnZkMEpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjenNLQ1FrSmRtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDWDA3Q2drSmRXNXBabTl5YlNCRWFYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkeld5Qk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYzNCdmRGTm9ZV1J2ZDAxaGNGc2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWFpoY25scGJtY2dkbVZqTkNCMlUzQnZkRk5vWVdSdmQwTnZiM0prV3lCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmMzUnlkV04wSUZOd2IzUk1hV2RvZEZOb1lXUnZkeUI3Q2drSkNXWnNiMkYwSUhOb1lXUnZkMEpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjenNLQ1FrSmRtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDWDA3Q2drSmRXNXBabTl5YlNCVGNHOTBUR2xuYUhSVGFHRmtiM2NnYzNCdmRFeHBaMmgwVTJoaFpHOTNjMXNnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KSTJWdVpHbG1DZ2tqYVdZZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjRzlwYm5SVGFHRmtiM2ROWVhCYklFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna0pkbUZ5ZVdsdVp5QjJaV00wSUhaUWIybHVkRk5vWVdSdmQwTnZiM0prV3lCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYTjBjblZqZENCUWIybHVkRXhwWjJoMFUyaGhaRzkzSUhzS0NRa0pabXh2WVhRZ2MyaGhaRzkzUW1saGN6c0tDUWtKWm14dllYUWdjMmhoWkc5M1RtOXliV0ZzUW1saGN6c0tDUWtKWm14dllYUWdjMmhoWkc5M1VtRmthWFZ6T3dvSkNRbDJaV015SUhOb1lXUnZkMDFoY0ZOcGVtVTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwTmhiV1Z5WVVaaGNqc0tDUWw5T3dvSkNYVnVhV1p2Y20wZ1VHOXBiblJNYVdkb2RGTm9ZV1J2ZHlCd2IybHVkRXhwWjJoMFUyaGhaRzkzYzFzZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NTTmxibVJwWmdvSlpteHZZWFFnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJGdGNHeGxjakpFSUdSbGNIUm9jeXdnZG1Wak1pQjFkaXdnWm14dllYUWdZMjl0Y0dGeVpTQXBJSHNLQ1FseVpYUjFjbTRnYzNSbGNDZ2dZMjl0Y0dGeVpTd2dkVzV3WVdOclVrZENRVlJ2UkdWd2RHZ29JSFJsZUhSMWNtVXlSQ2dnWkdWd2RHaHpMQ0IxZGlBcElDa2dLVHNLQ1gwS0NYWmxZeklnZEdWNGRIVnlaVEpFUkdsemRISnBZblYwYVc5dUtDQnpZVzF3YkdWeU1rUWdjMmhoWkc5M0xDQjJaV015SUhWMklDa2dld29KQ1hKbGRIVnliaUIxYm5CaFkydFNSMEpCVkc4eVNHRnNaaWdnZEdWNGRIVnlaVEpFS0NCemFHRmtiM2NzSUhWMklDa2dLVHNLQ1gwS0NXWnNiMkYwSUZaVFRWTm9ZV1J2ZHlBb2MyRnRjR3hsY2pKRUlITm9ZV1J2ZHl3Z2RtVmpNaUIxZGl3Z1pteHZZWFFnWTI5dGNHRnlaU0FwZXdvSkNXWnNiMkYwSUc5alkyeDFjMmx2YmlBOUlERXVNRHNLQ1FsMlpXTXlJR1JwYzNSeWFXSjFkR2x2YmlBOUlIUmxlSFIxY21VeVJFUnBjM1J5YVdKMWRHbHZiaWdnYzJoaFpHOTNMQ0IxZGlBcE93b0pDV1pzYjJGMElHaGhjbVJmYzJoaFpHOTNJRDBnYzNSbGNDZ2dZMjl0Y0dGeVpTQXNJR1JwYzNSeWFXSjFkR2x2Ymk1NElDazdDZ2tKYVdZZ0tHaGhjbVJmYzJoaFpHOTNJQ0U5SURFdU1DQXBJSHNLQ1FrSlpteHZZWFFnWkdsemRHRnVZMlVnUFNCamIyMXdZWEpsSUMwZ1pHbHpkSEpwWW5WMGFXOXVMbmdnT3dvSkNRbG1iRzloZENCMllYSnBZVzVqWlNBOUlHMWhlQ2dnTUM0d01EQXdNQ3dnWkdsemRISnBZblYwYVc5dUxua2dLaUJrYVhOMGNtbGlkWFJwYjI0dWVTQXBPd29KQ1FsbWJHOWhkQ0J6YjJaMGJtVnpjMTl3Y205aVlXSnBiR2wwZVNBOUlIWmhjbWxoYm1ObElDOGdLSFpoY21saGJtTmxJQ3NnWkdsemRHRnVZMlVnS2lCa2FYTjBZVzVqWlNBcE93a0pDWE52Wm5SdVpYTnpYM0J5YjJKaFltbHNhWFI1SUQwZ1kyeGhiWEFvSUNnZ2MyOW1kRzVsYzNOZmNISnZZbUZpYVd4cGRIa2dMU0F3TGpNZ0tTQXZJQ2dnTUM0NU5TQXRJREF1TXlBcExDQXdMakFzSURFdU1DQXBPd2tKQ1c5alkyeDFjMmx2YmlBOUlHTnNZVzF3S0NCdFlYZ29JR2hoY21SZmMyaGhaRzkzTENCemIyWjBibVZ6YzE5d2NtOWlZV0pwYkdsMGVTQXBMQ0F3TGpBc0lERXVNQ0FwT3dvSkNYMEtDUWx5WlhSMWNtNGdiMk5qYkhWemFXOXVPd29KZlFvSlpteHZZWFFnWjJWMFUyaGhaRzkzS0NCellXMXdiR1Z5TWtRZ2MyaGhaRzkzVFdGd0xDQjJaV015SUhOb1lXUnZkMDFoY0ZOcGVtVXNJR1pzYjJGMElITm9ZV1J2ZDBKcFlYTXNJR1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjeXdnZG1Wak5DQnphR0ZrYjNkRGIyOXlaQ0FwSUhzS0NRbG1iRzloZENCemFHRmtiM2NnUFNBeExqQTdDZ2tKYzJoaFpHOTNRMjl2Y21RdWVIbDZJQzg5SUhOb1lXUnZkME52YjNKa0xuYzdDZ2tKYzJoaFpHOTNRMjl2Y21RdWVpQXJQU0J6YUdGa2IzZENhV0Z6T3dvSkNXSjJaV00wSUdsdVJuSjFjM1IxYlZabFl5QTlJR0oyWldNMElDZ2djMmhoWkc5M1EyOXZjbVF1ZUNBK1BTQXdMakFzSUhOb1lXUnZkME52YjNKa0xuZ2dQRDBnTVM0d0xDQnphR0ZrYjNkRGIyOXlaQzU1SUQ0OUlEQXVNQ3dnYzJoaFpHOTNRMjl2Y21RdWVTQThQU0F4TGpBZ0tUc0tDUWxpYjI5c0lHbHVSbkoxYzNSMWJTQTlJR0ZzYkNnZ2FXNUdjblZ6ZEhWdFZtVmpJQ2s3Q2drSlluWmxZeklnWm5KMWMzUjFiVlJsYzNSV1pXTWdQU0JpZG1Wak1pZ2dhVzVHY25WemRIVnRMQ0J6YUdGa2IzZERiMjl5WkM1NklEdzlJREV1TUNBcE93b0pDV0p2YjJ3Z1puSjFjM1IxYlZSbGMzUWdQU0JoYkd3b0lHWnlkWE4wZFcxVVpYTjBWbVZqSUNrN0Nna0phV1lnS0NCbWNuVnpkSFZ0VkdWemRDQXBJSHNLQ1FramFXWWdaR1ZtYVc1bFpDZ2dVMGhCUkU5WFRVRlFYMVJaVUVWZlVFTkdJQ2tLQ1FrSmRtVmpNaUIwWlhobGJGTnBlbVVnUFNCMlpXTXlLQ0F4TGpBZ0tTQXZJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pDV1pzYjJGMElHUjRNQ0E5SUMwZ2RHVjRaV3hUYVhwbExuZ2dLaUJ6YUdGa2IzZFNZV1JwZFhNN0Nna0pDV1pzYjJGMElHUjVNQ0E5SUMwZ2RHVjRaV3hUYVhwbExua2dLaUJ6YUdGa2IzZFNZV1JwZFhNN0Nna0pDV1pzYjJGMElHUjRNU0E5SUNzZ2RHVjRaV3hUYVhwbExuZ2dLaUJ6YUdGa2IzZFNZV1JwZFhNN0Nna0pDV1pzYjJGMElHUjVNU0E5SUNzZ2RHVjRaV3hUYVhwbExua2dLaUJ6YUdGa2IzZFNZV1JwZFhNN0Nna0pDV1pzYjJGMElHUjRNaUE5SUdSNE1DQXZJREl1TURzS0NRa0pabXh2WVhRZ1pIa3lJRDBnWkhrd0lDOGdNaTR3T3dvSkNRbG1iRzloZENCa2VETWdQU0JrZURFZ0x5QXlMakE3Q2drSkNXWnNiMkYwSUdSNU15QTlJR1I1TVNBdklESXVNRHNLQ1FrSmMyaGhaRzkzSUQwZ0tBb0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TUN3Z1pIa3dJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ01DNHdMQ0JrZVRBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURFc0lHUjVNQ0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNaXdnWkhreUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnTUM0d0xDQmtlVElnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlRE1zSUdSNU1pQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE1Dd2dNQzR3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd5TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2daSGd6TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VERXNJREF1TUNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TWl3Z1pIa3pJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ01DNHdMQ0JrZVRNZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURNc0lHUjVNeUFwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNQ3dnWkhreElDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnTUM0d0xDQmtlVEVnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlREVzSUdSNU1TQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa0tDUWtKS1NBcUlDZ2dNUzR3SUM4Z01UY3VNQ0FwT3dvSkNTTmxiR2xtSUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMUJEUmw5VFQwWlVJQ2tLQ1FrSmRtVmpNaUIwWlhobGJGTnBlbVVnUFNCMlpXTXlLQ0F4TGpBZ0tTQXZJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pDV1pzYjJGMElHUjRJRDBnZEdWNFpXeFRhWHBsTG5nN0Nna0pDV1pzYjJGMElHUjVJRDBnZEdWNFpXeFRhWHBsTG5rN0Nna0pDWFpsWXpJZ2RYWWdQU0J6YUdGa2IzZERiMjl5WkM1NGVUc0tDUWtKZG1Wak1pQm1JRDBnWm5KaFkzUW9JSFYySUNvZ2MyaGhaRzkzVFdGd1UybDZaU0FySURBdU5TQXBPd29KQ1FsMWRpQXRQU0JtSUNvZ2RHVjRaV3hUYVhwbE93b0pDUWx6YUdGa2IzY2dQU0FvQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYyTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUdSNExDQXdMakFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NBd0xqQXNJR1I1SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkR1Y0Wld4VGFYcGxMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmJXbDRLQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ0xXUjRMQ0F3TGpBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExDQUtDUWtKQ1FrZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JREl1TUNBcUlHUjRMQ0F3TGpBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExBb0pDUWtKQ1NCbUxuZ2dLU0FyQ2drSkNRbHRhWGdvSUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQXRaSGdzSUdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd2dDZ2tKQ1FrSklIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F5TGpBZ0tpQmtlQ3dnWkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExBb0pDUWtKQ1NCbUxuZ2dLU0FyQ2drSkNRbHRhWGdvSUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQXdMakFzSUMxa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NJQW9KQ1FrSkNTQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTUM0d0xDQXlMakFnS2lCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSklHWXVlU0FwSUNzS0NRa0pDVzFwZUNnZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JR1I0TENBdFpIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQ0FLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUdSNExDQXlMakFnS2lCa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSklHWXVlU0FwSUNzS0NRa0pDVzFwZUNnZ2JXbDRLQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ0xXUjRMQ0F0WkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExDQUtDUWtKQ1FrSklDQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTWk0d0lDb2daSGdzSUMxa2VTQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa3NDZ2tKQ1FrSkNTQWdaaTU0SUNrc0Nna0pDUWtKSUcxcGVDZ2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUMxa2VDd2dNaTR3SUNvZ1pIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQ0FLQ1FrSkNRa0pJQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ01pNHdJQ29nWkhnc0lESXVNQ0FxSUdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTd0tDUWtKQ1FrSklDQm1MbmdnS1N3S0NRa0pDUWtnWmk1NUlDa0tDUWtKS1NBcUlDZ2dNUzR3SUM4Z09TNHdJQ2s3Q2drSkkyVnNhV1lnWkdWbWFXNWxaQ2dnVTBoQlJFOVhUVUZRWDFSWlVFVmZWbE5OSUNrS0NRa0pjMmhoWkc5M0lEMGdWbE5OVTJoaFpHOTNLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVMQ0J6YUdGa2IzZERiMjl5WkM1NklDazdDZ2tKSTJWc2MyVUtDUWtKYzJoaFpHOTNJRDBnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBPd29KQ1NObGJtUnBaZ29KQ1gwS0NRbHlaWFIxY200Z2MyaGhaRzkzT3dvSmZRb0pkbVZqTWlCamRXSmxWRzlWVmlnZ2RtVmpNeUIyTENCbWJHOWhkQ0IwWlhobGJGTnBlbVZaSUNrZ2V3b0pDWFpsWXpNZ1lXSnpWaUE5SUdGaWN5Z2dkaUFwT3dvSkNXWnNiMkYwSUhOallXeGxWRzlEZFdKbElEMGdNUzR3SUM4Z2JXRjRLQ0JoWW5OV0xuZ3NJRzFoZUNnZ1lXSnpWaTU1TENCaFluTldMbm9nS1NBcE93b0pDV0ZpYzFZZ0tqMGdjMk5oYkdWVWIwTjFZbVU3Q2drSmRpQXFQU0J6WTJGc1pWUnZRM1ZpWlNBcUlDZ2dNUzR3SUMwZ01pNHdJQ29nZEdWNFpXeFRhWHBsV1NBcE93b0pDWFpsWXpJZ2NHeGhibUZ5SUQwZ2RpNTRlVHNLQ1FsbWJHOWhkQ0JoYkcxdmMzUkJWR1Y0Wld3Z1BTQXhMalVnS2lCMFpYaGxiRk5wZW1WWk93b0pDV1pzYjJGMElHRnNiVzl6ZEU5dVpTQTlJREV1TUNBdElHRnNiVzl6ZEVGVVpYaGxiRHNLQ1FscFppQW9JR0ZpYzFZdWVpQStQU0JoYkcxdmMzUlBibVVnS1NCN0Nna0pDV2xtSUNnZ2RpNTZJRDRnTUM0d0lDa0tDUWtKQ1hCc1lXNWhjaTU0SUQwZ05DNHdJQzBnZGk1NE93b0pDWDBnWld4elpTQnBaaUFvSUdGaWMxWXVlQ0ErUFNCaGJHMXZjM1JQYm1VZ0tTQjdDZ2tKQ1dac2IyRjBJSE5wWjI1WUlEMGdjMmxuYmlnZ2RpNTRJQ2s3Q2drSkNYQnNZVzVoY2k1NElEMGdkaTU2SUNvZ2MybG5ibGdnS3lBeUxqQWdLaUJ6YVdkdVdEc0tDUWw5SUdWc2MyVWdhV1lnS0NCaFluTldMbmtnUGowZ1lXeHRiM04wVDI1bElDa2dld29KQ1FsbWJHOWhkQ0J6YVdkdVdTQTlJSE5wWjI0b0lIWXVlU0FwT3dvSkNRbHdiR0Z1WVhJdWVDQTlJSFl1ZUNBcklESXVNQ0FxSUhOcFoyNVpJQ3NnTWk0d093b0pDUWx3YkdGdVlYSXVlU0E5SUhZdWVpQXFJSE5wWjI1WklDMGdNaTR3T3dvSkNYMEtDUWx5WlhSMWNtNGdkbVZqTWlnZ01DNHhNalVzSURBdU1qVWdLU0FxSUhCc1lXNWhjaUFySUhabFl6SW9JREF1TXpjMUxDQXdMamMxSUNrN0NnbDlDZ2xtYkc5aGRDQm5aWFJRYjJsdWRGTm9ZV1J2ZHlnZ2MyRnRjR3hsY2pKRUlITm9ZV1J2ZDAxaGNDd2dkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxMQ0JtYkc5aGRDQnphR0ZrYjNkQ2FXRnpMQ0JtYkc5aGRDQnphR0ZrYjNkU1lXUnBkWE1zSUhabFl6UWdjMmhoWkc5M1EyOXZjbVFzSUdac2IyRjBJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSXNJR1pzYjJGMElITm9ZV1J2ZDBOaGJXVnlZVVpoY2lBcElIc0tDUWwyWldNeUlIUmxlR1ZzVTJsNlpTQTlJSFpsWXpJb0lERXVNQ0FwSUM4Z0tDQnphR0ZrYjNkTllYQlRhWHBsSUNvZ2RtVmpNaWdnTkM0d0xDQXlMakFnS1NBcE93b0pDWFpsWXpNZ2JHbG5hSFJVYjFCdmMybDBhVzl1SUQwZ2MyaGhaRzkzUTI5dmNtUXVlSGw2T3dvSkNXWnNiMkYwSUdSd0lEMGdLQ0JzWlc1bmRHZ29JR3hwWjJoMFZHOVFiM05wZEdsdmJpQXBJQzBnYzJoaFpHOTNRMkZ0WlhKaFRtVmhjaUFwSUM4Z0tDQnphR0ZrYjNkRFlXMWxjbUZHWVhJZ0xTQnphR0ZrYjNkRFlXMWxjbUZPWldGeUlDazdDUWxrY0NBclBTQnphR0ZrYjNkQ2FXRnpPd29KQ1habFl6TWdZbVF6UkNBOUlHNXZjbTFoYkdsNlpTZ2diR2xuYUhSVWIxQnZjMmwwYVc5dUlDazdDZ2tKSTJsbUlHUmxabWx1WldRb0lGTklRVVJQVjAxQlVGOVVXVkJGWDFCRFJpQXBJSHg4SUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMUJEUmw5VFQwWlVJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1UwaEJSRTlYVFVGUVgxUlpVRVZmVmxOTklDa0tDUWtKZG1Wak1pQnZabVp6WlhRZ1BTQjJaV015S0NBdElERXNJREVnS1NBcUlITm9ZV1J2ZDFKaFpHbDFjeUFxSUhSbGVHVnNVMmw2WlM1NU93b0pDUWx5WlhSMWNtNGdLQW9KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NGVYa3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTVlWGtzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU0ZVhnc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NWVYZ3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDd2dkR1Y0Wld4VGFYcGxMbmtnS1N3Z1pIQWdLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJR04xWW1WVWIxVldLQ0JpWkRORUlDc2diMlptYzJWMExuaDRlU3dnZEdWNFpXeFRhWHBsTG5rZ0tTd2daSEFnS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUdOMVltVlViMVZXS0NCaVpETkVJQ3NnYjJabWMyVjBMbmw0ZVN3Z2RHVjRaV3hUYVhwbExua2dLU3dnWkhBZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lHTjFZbVZVYjFWV0tDQmlaRE5FSUNzZ2IyWm1jMlYwTG5oNGVDd2dkR1Y0Wld4VGFYcGxMbmtnS1N3Z1pIQWdLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJR04xWW1WVWIxVldLQ0JpWkRORUlDc2diMlptYzJWMExubDRlQ3dnZEdWNFpXeFRhWHBsTG5rZ0tTd2daSEFnS1FvSkNRa3BJQ29nS0NBeExqQWdMeUE1TGpBZ0tUc0tDUWtqWld4elpRb0pDUWx5WlhSMWNtNGdkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDd2dkR1Y0Wld4VGFYcGxMbmtnS1N3Z1pIQWdLVHNLQ1FralpXNWthV1lLQ1gwS0kyVnVaR2xtWUN3Z2NYQWdQU0JnSTJsbVpHVm1JRlZUUlY5VFNFRkVUMWROUVZBS0NTTnBaaUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tKZFc1cFptOXliU0J0WVhRMElHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0V3lCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsMllYSjVhVzVuSUhabFl6UWdka1JwY21WamRHbHZibUZzVTJoaFpHOTNRMjl2Y21SYklFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYTjBjblZqZENCRWFYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNJSHNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsMlpXTXlJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pmVHNLQ1FsMWJtbG1iM0p0SUVScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzY2daR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZDNOYklFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkkyVnVaR2xtQ2dramFXWWdUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDUWwxYm1sbWIzSnRJRzFoZERRZ2MzQnZkRk5vWVdSdmQwMWhkSEpwZUZzZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYWmhjbmxwYm1jZ2RtVmpOQ0IyVTNCdmRGTm9ZV1J2ZDBOdmIzSmtXeUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKYzNSeWRXTjBJRk53YjNSTWFXZG9kRk5vWVdSdmR5QjdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMUpoWkdsMWN6c0tDUWtKZG1Wak1pQnphR0ZrYjNkTllYQlRhWHBsT3dvSkNYMDdDZ2tKZFc1cFptOXliU0JUY0c5MFRHbG5hSFJUYUdGa2IzY2djM0J2ZEV4cFoyaDBVMmhoWkc5M2Mxc2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2drSmRXNXBabTl5YlNCdFlYUTBJSEJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRXeUJPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1haaGNubHBibWNnZG1Wak5DQjJVRzlwYm5SVGFHRmtiM2REYjI5eVpGc2dUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDUWx6ZEhKMVkzUWdVRzlwYm5STWFXZG9kRk5vWVdSdmR5QjdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMUpoWkdsMWN6c0tDUWtKZG1Wak1pQnphR0ZrYjNkTllYQlRhWHBsT3dvSkNRbG1iRzloZENCemFHRmtiM2REWVcxbGNtRk9aV0Z5T3dvSkNRbG1iRzloZENCemFHRmtiM2REWVcxbGNtRkdZWEk3Q2drSmZUc0tDUWwxYm1sbWIzSnRJRkJ2YVc1MFRHbG5hSFJUYUdGa2IzY2djRzlwYm5STWFXZG9kRk5vWVdSdmQzTmJJRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dXSEFnUFNCZ0kybG1aR1ZtSUZWVFJWOVRTRUZFVDFkTlFWQUtDU05wWmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3SUh4OElFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0lIeDhJRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElENGdNQW9KQ1habFl6TWdjMmhoWkc5M1YyOXliR1JPYjNKdFlXd2dQU0JwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0IwY21GdWMyWnZjbTFsWkU1dmNtMWhiQ3dnZG1sbGQwMWhkSEpwZUNBcE93b0pDWFpsWXpRZ2MyaGhaRzkzVjI5eWJHUlFiM05wZEdsdmJqc0tDU05sYm1ScFpnb0pJMmxtSUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVenNnYVNBckt5QXBJSHNLQ1FsemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dUlEMGdkMjl5YkdSUWIzTnBkR2x2YmlBcklIWmxZelFvSUhOb1lXUnZkMWR2Y214a1RtOXliV0ZzSUNvZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkM05iSUdrZ1hTNXphR0ZrYjNkT2IzSnRZV3hDYVdGekxDQXdJQ2s3Q2drSmRrUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTQTlJR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0YwY21sNFd5QnBJRjBnS2lCemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dU93b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05sYm1ScFpnb0pJMmxtSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUT3lCcElDc3JJQ2tnZXdvSkNYTm9ZV1J2ZDFkdmNteGtVRzl6YVhScGIyNGdQU0IzYjNKc1pGQnZjMmwwYVc5dUlDc2dkbVZqTkNnZ2MyaGhaRzkzVjI5eWJHUk9iM0p0WVd3Z0tpQnpjRzkwVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjB1YzJoaFpHOTNUbTl5YldGc1FtbGhjeXdnTUNBcE93b0pDWFpUY0c5MFUyaGhaRzkzUTI5dmNtUmJJR2tnWFNBOUlITndiM1JUYUdGa2IzZE5ZWFJ5YVhoYklHa2dYU0FxSUhOb1lXUnZkMWR2Y214a1VHOXphWFJwYjI0N0NnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRbHphR0ZrYjNkWGIzSnNaRkJ2YzJsMGFXOXVJRDBnZDI5eWJHUlFiM05wZEdsdmJpQXJJSFpsWXpRb0lITm9ZV1J2ZDFkdmNteGtUbTl5YldGc0lDb2djRzlwYm5STWFXZG9kRk5vWVdSdmQzTmJJR2tnWFM1emFHRmtiM2RPYjNKdFlXeENhV0Z6TENBd0lDazdDZ2tKZGxCdmFXNTBVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTQTlJSEJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRXeUJwSUYwZ0tpQnphR0ZrYjNkWGIzSnNaRkJ2YzJsMGFXOXVPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JLY0NBOUlHQm1iRzloZENCblpYUlRhR0ZrYjNkTllYTnJLQ2tnZXdvSlpteHZZWFFnYzJoaFpHOTNJRDBnTVM0d093b0pJMmxtWkdWbUlGVlRSVjlUU0VGRVQxZE5RVkFLQ1NOcFppQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0NnbEVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFE3Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gzTjBZWEowQ2dsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU03SUdrZ0t5c2dLU0I3Q2drSlpHbHlaV04wYVc5dVlXeE1hV2RvZENBOUlHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6V3lCcElGMDdDZ2tKYzJoaFpHOTNJQ285SUhKbFkyVnBkbVZUYUdGa2IzY2dQeUJuWlhSVGFHRmtiM2NvSUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd1d5QnBJRjBzSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFF1YzJoaFpHOTNUV0Z3VTJsNlpTd2daR2x5WldOMGFXOXVZV3hNYVdkb2RDNXphR0ZrYjNkQ2FXRnpMQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBMbk5vWVdSdmQxSmhaR2wxY3l3Z2RrUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTQXBJRG9nTVM0d093b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05sYm1ScFpnb0pJMmxtSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dsVGNHOTBUR2xuYUhSVGFHRmtiM2NnYzNCdmRFeHBaMmgwT3dvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRbHpjRzkwVEdsbmFIUWdQU0J6Y0c5MFRHbG5hSFJUYUdGa2IzZHpXeUJwSUYwN0Nna0pjMmhoWkc5M0lDbzlJSEpsWTJWcGRtVlRhR0ZrYjNjZ1B5Qm5aWFJUYUdGa2IzY29JSE53YjNSVGFHRmtiM2ROWVhCYklHa2dYU3dnYzNCdmRFeHBaMmgwTG5Ob1lXUnZkMDFoY0ZOcGVtVXNJSE53YjNSTWFXZG9kQzV6YUdGa2IzZENhV0Z6TENCemNHOTBUR2xuYUhRdWMyaGhaRzkzVW1Ga2FYVnpMQ0IyVTNCdmRGTm9ZV1J2ZDBOdmIzSmtXeUJwSUYwZ0tTQTZJREV1TURzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna2paVzVrYVdZS0NTTnBaaUJPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1ZCdmFXNTBUR2xuYUhSVGFHRmtiM2NnY0c5cGJuUk1hV2RvZERzS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVE95QnBJQ3NySUNrZ2V3b0pDWEJ2YVc1MFRHbG5hSFFnUFNCd2IybHVkRXhwWjJoMFUyaGhaRzkzYzFzZ2FTQmRPd29KQ1hOb1lXUnZkeUFxUFNCeVpXTmxhWFpsVTJoaFpHOTNJRDhnWjJWMFVHOXBiblJUYUdGa2IzY29JSEJ2YVc1MFUyaGhaRzkzVFdGd1d5QnBJRjBzSUhCdmFXNTBUR2xuYUhRdWMyaGhaRzkzVFdGd1UybDZaU3dnY0c5cGJuUk1hV2RvZEM1emFHRmtiM2RDYVdGekxDQndiMmx1ZEV4cFoyaDBMbk5vWVdSdmQxSmhaR2wxY3l3Z2RsQnZhVzUwVTJoaFpHOTNRMjl2Y21SYklHa2dYU3dnY0c5cGJuUk1hV2RvZEM1emFHRmtiM2REWVcxbGNtRk9aV0Z5TENCd2IybHVkRXhwWjJoMExuTm9ZV1J2ZDBOaGJXVnlZVVpoY2lBcElEb2dNUzR3T3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvSkkyVnVaR2xtQ2dseVpYUjFjbTRnYzJoaFpHOTNPd3A5WUN3Z1dYQWdQU0JnSTJsbVpHVm1JRlZUUlY5VFMwbE9Ua2xPUndvSmJXRjBOQ0JpYjI1bFRXRjBXQ0E5SUdkbGRFSnZibVZOWVhSeWFYZ29JSE5yYVc1SmJtUmxlQzU0SUNrN0NnbHRZWFEwSUdKdmJtVk5ZWFJaSUQwZ1oyVjBRbTl1WlUxaGRISnBlQ2dnYzJ0cGJrbHVaR1Y0TG5rZ0tUc0tDVzFoZERRZ1ltOXVaVTFoZEZvZ1BTQm5aWFJDYjI1bFRXRjBjbWw0S0NCemEybHVTVzVrWlhndWVpQXBPd29KYldGME5DQmliMjVsVFdGMFZ5QTlJR2RsZEVKdmJtVk5ZWFJ5YVhnb0lITnJhVzVKYm1SbGVDNTNJQ2s3Q2lObGJtUnBabUFzSUZwd0lEMGdZQ05wWm1SbFppQlZVMFZmVTB0SlRrNUpUa2NLQ1hWdWFXWnZjbTBnYldGME5DQmlhVzVrVFdGMGNtbDRPd29KZFc1cFptOXliU0J0WVhRMElHSnBibVJOWVhSeWFYaEpiblpsY25ObE93b0pJMmxtWkdWbUlFSlBUa1ZmVkVWWVZGVlNSUW9KQ1hWdWFXWnZjbTBnYUdsbmFIQWdjMkZ0Y0d4bGNqSkVJR0p2Ym1WVVpYaDBkWEpsT3dvSkNYVnVhV1p2Y20wZ2FXNTBJR0p2Ym1WVVpYaDBkWEpsVTJsNlpUc0tDUWx0WVhRMElHZGxkRUp2Ym1WTllYUnlhWGdvSUdOdmJuTjBJR2x1SUdac2IyRjBJR2tnS1NCN0Nna0pDV1pzYjJGMElHb2dQU0JwSUNvZ05DNHdPd29KQ1FsbWJHOWhkQ0I0SUQwZ2JXOWtLQ0JxTENCbWJHOWhkQ2dnWW05dVpWUmxlSFIxY21WVGFYcGxJQ2tnS1RzS0NRa0pabXh2WVhRZ2VTQTlJR1pzYjI5eUtDQnFJQzhnWm14dllYUW9JR0p2Ym1WVVpYaDBkWEpsVTJsNlpTQXBJQ2s3Q2drSkNXWnNiMkYwSUdSNElEMGdNUzR3SUM4Z1pteHZZWFFvSUdKdmJtVlVaWGgwZFhKbFUybDZaU0FwT3dvSkNRbG1iRzloZENCa2VTQTlJREV1TUNBdklHWnNiMkYwS0NCaWIyNWxWR1Y0ZEhWeVpWTnBlbVVnS1RzS0NRa0plU0E5SUdSNUlDb2dLQ0I1SUNzZ01DNDFJQ2s3Q2drSkNYWmxZelFnZGpFZ1BTQjBaWGgwZFhKbE1rUW9JR0p2Ym1WVVpYaDBkWEpsTENCMlpXTXlLQ0JrZUNBcUlDZ2dlQ0FySURBdU5TQXBMQ0I1SUNrZ0tUc0tDUWtKZG1Wak5DQjJNaUE5SUhSbGVIUjFjbVV5UkNnZ1ltOXVaVlJsZUhSMWNtVXNJSFpsWXpJb0lHUjRJQ29nS0NCNElDc2dNUzQxSUNrc0lIa2dLU0FwT3dvSkNRbDJaV00wSUhZeklEMGdkR1Y0ZEhWeVpUSkVLQ0JpYjI1bFZHVjRkSFZ5WlN3Z2RtVmpNaWdnWkhnZ0tpQW9JSGdnS3lBeUxqVWdLU3dnZVNBcElDazdDZ2tKQ1habFl6UWdkalFnUFNCMFpYaDBkWEpsTWtRb0lHSnZibVZVWlhoMGRYSmxMQ0IyWldNeUtDQmtlQ0FxSUNnZ2VDQXJJRE11TlNBcExDQjVJQ2tnS1RzS0NRa0piV0YwTkNCaWIyNWxJRDBnYldGME5DZ2dkakVzSUhZeUxDQjJNeXdnZGpRZ0tUc0tDUWtKY21WMGRYSnVJR0p2Ym1VN0Nna0pmUW9KSTJWc2MyVUtDUWwxYm1sbWIzSnRJRzFoZERRZ1ltOXVaVTFoZEhKcFkyVnpXeUJOUVZoZlFrOU9SVk1nWFRzS0NRbHRZWFEwSUdkbGRFSnZibVZOWVhSeWFYZ29JR052Ym5OMElHbHVJR1pzYjJGMElHa2dLU0I3Q2drSkNXMWhkRFFnWW05dVpTQTlJR0p2Ym1WTllYUnlhV05sYzFzZ2FXNTBLR2twSUYwN0Nna0pDWEpsZEhWeWJpQmliMjVsT3dvSkNYMEtDU05sYm1ScFpnb2paVzVrYVdaZ0xDQWtjQ0E5SUdBamFXWmtaV1lnVlZORlgxTkxTVTVPU1U1SENnbDJaV00wSUhOcmFXNVdaWEowWlhnZ1BTQmlhVzVrVFdGMGNtbDRJQ29nZG1Wak5DZ2dkSEpoYm5ObWIzSnRaV1FzSURFdU1DQXBPd29KZG1Wak5DQnphMmx1Ym1Wa0lEMGdkbVZqTkNnZ01DNHdJQ2s3Q2dsemEybHVibVZrSUNzOUlHSnZibVZOWVhSWUlDb2djMnRwYmxabGNuUmxlQ0FxSUhOcmFXNVhaV2xuYUhRdWVEc0tDWE5yYVc1dVpXUWdLejBnWW05dVpVMWhkRmtnS2lCemEybHVWbVZ5ZEdWNElDb2djMnRwYmxkbGFXZG9kQzU1T3dvSmMydHBibTVsWkNBclBTQmliMjVsVFdGMFdpQXFJSE5yYVc1V1pYSjBaWGdnS2lCemEybHVWMlZwWjJoMExubzdDZ2x6YTJsdWJtVmtJQ3M5SUdKdmJtVk5ZWFJYSUNvZ2MydHBibFpsY25SbGVDQXFJSE5yYVc1WFpXbG5hSFF1ZHpzS0NYUnlZVzV6Wm05eWJXVmtJRDBnS0NCaWFXNWtUV0YwY21sNFNXNTJaWEp6WlNBcUlITnJhVzV1WldRZ0tTNTRlWG83Q2lObGJtUnBabUFzSUdwd0lEMGdZQ05wWm1SbFppQlZVMFZmVTB0SlRrNUpUa2NLQ1cxaGREUWdjMnRwYmsxaGRISnBlQ0E5SUcxaGREUW9JREF1TUNBcE93b0pjMnRwYmsxaGRISnBlQ0FyUFNCemEybHVWMlZwWjJoMExuZ2dLaUJpYjI1bFRXRjBXRHNLQ1hOcmFXNU5ZWFJ5YVhnZ0t6MGdjMnRwYmxkbGFXZG9kQzU1SUNvZ1ltOXVaVTFoZEZrN0NnbHphMmx1VFdGMGNtbDRJQ3M5SUhOcmFXNVhaV2xuYUhRdWVpQXFJR0p2Ym1WTllYUmFPd29KYzJ0cGJrMWhkSEpwZUNBclBTQnphMmx1VjJWcFoyaDBMbmNnS2lCaWIyNWxUV0YwVnpzS0NYTnJhVzVOWVhSeWFYZ2dQU0JpYVc1a1RXRjBjbWw0U1c1MlpYSnpaU0FxSUhOcmFXNU5ZWFJ5YVhnZ0tpQmlhVzVrVFdGMGNtbDRPd29KYjJKcVpXTjBUbTl5YldGc0lEMGdkbVZqTkNnZ2MydHBiazFoZEhKcGVDQXFJSFpsWXpRb0lHOWlhbVZqZEU1dmNtMWhiQ3dnTUM0d0lDa2dLUzU0ZVhvN0Nna2phV1prWldZZ1ZWTkZYMVJCVGtkRlRsUUtDUWx2WW1wbFkzUlVZVzVuWlc1MElEMGdkbVZqTkNnZ2MydHBiazFoZEhKcGVDQXFJSFpsWXpRb0lHOWlhbVZqZEZSaGJtZGxiblFzSURBdU1DQXBJQ2t1ZUhsNk93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGRndJRDBnWUdac2IyRjBJSE53WldOMWJHRnlVM1J5Wlc1bmRHZzdDaU5wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpOUVZBS0NYWmxZelFnZEdWNFpXeFRjR1ZqZFd4aGNpQTlJSFJsZUhSMWNtVXlSQ2dnYzNCbFkzVnNZWEpOWVhBc0lIWlZkaUFwT3dvSmMzQmxZM1ZzWVhKVGRISmxibWQwYUNBOUlIUmxlR1ZzVTNCbFkzVnNZWEl1Y2pzS0kyVnNjMlVLQ1hOd1pXTjFiR0Z5VTNSeVpXNW5kR2dnUFNBeExqQTdDaU5sYm1ScFptQXNJRXR3SUQwZ1lDTnBabVJsWmlCVlUwVmZVMUJGUTFWTVFWSk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhOd1pXTjFiR0Z5VFdGd093b2paVzVrYVdaZ0xDQmxiU0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWRTlPUlY5TlFWQlFTVTVISUNrS0NXZHNYMFp5WVdkRGIyeHZjaTV5WjJJZ1BTQjBiMjVsVFdGd2NHbHVaeWdnWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUFwT3dvalpXNWthV1pnTENCMGJTQTlJR0FqYVdadVpHVm1JSE5oZEhWeVlYUmxDaU5rWldacGJtVWdjMkYwZFhKaGRHVW9JR0VnS1NCamJHRnRjQ2dnWVN3Z01DNHdMQ0F4TGpBZ0tRb2paVzVrYVdZS2RXNXBabTl5YlNCbWJHOWhkQ0IwYjI1bFRXRndjR2x1WjBWNGNHOXpkWEpsT3dwMlpXTXpJRXhwYm1WaGNsUnZibVZOWVhCd2FXNW5LQ0IyWldNeklHTnZiRzl5SUNrZ2V3b0pjbVYwZFhKdUlIUnZibVZOWVhCd2FXNW5SWGh3YjNOMWNtVWdLaUJqYjJ4dmNqc0tmUXAyWldNeklGSmxhVzVvWVhKa1ZHOXVaVTFoY0hCcGJtY29JSFpsWXpNZ1kyOXNiM0lnS1NCN0NnbGpiMnh2Y2lBcVBTQjBiMjVsVFdGd2NHbHVaMFY0Y0c5emRYSmxPd29KY21WMGRYSnVJSE5oZEhWeVlYUmxLQ0JqYjJ4dmNpQXZJQ2dnZG1Wak15Z2dNUzR3SUNrZ0t5QmpiMnh2Y2lBcElDazdDbjBLZG1Wak15QlBjSFJwYldsNlpXUkRhVzVsYjI1VWIyNWxUV0Z3Y0dsdVp5Z2dkbVZqTXlCamIyeHZjaUFwSUhzS0NXTnZiRzl5SUNvOUlIUnZibVZOWVhCd2FXNW5SWGh3YjNOMWNtVTdDZ2xqYjJ4dmNpQTlJRzFoZUNnZ2RtVmpNeWdnTUM0d0lDa3NJR052Ykc5eUlDMGdNQzR3TURRZ0tUc0tDWEpsZEhWeWJpQndiM2NvSUNnZ1kyOXNiM0lnS2lBb0lEWXVNaUFxSUdOdmJHOXlJQ3NnTUM0MUlDa2dLU0F2SUNnZ1kyOXNiM0lnS2lBb0lEWXVNaUFxSUdOdmJHOXlJQ3NnTVM0M0lDa2dLeUF3TGpBMklDa3NJSFpsWXpNb0lESXVNaUFwSUNrN0NuMEtkbVZqTXlCU1VsUkJibVJQUkZSR2FYUW9JSFpsWXpNZ2RpQXBJSHNLQ1habFl6TWdZU0E5SUhZZ0tpQW9JSFlnS3lBd0xqQXlORFUzT0RZZ0tTQXRJREF1TURBd01Ea3dOVE0zT3dvSmRtVmpNeUJpSUQwZ2RpQXFJQ2dnTUM0NU9ETTNNamtnS2lCMklDc2dNQzQwTXpJNU5URXdJQ2tnS3lBd0xqSXpPREE0TVRzS0NYSmxkSFZ5YmlCaElDOGdZanNLZlFwMlpXTXpJRUZEUlZOR2FXeHRhV05VYjI1bFRXRndjR2x1WnlnZ2RtVmpNeUJqYjJ4dmNpQXBJSHNLQ1dOdmJuTjBJRzFoZERNZ1FVTkZVMGx1Y0hWMFRXRjBJRDBnYldGME15Z0tDUWwyWldNektDQXdMalU1TnpFNUxDQXdMakEzTmpBd0xDQXdMakF5T0RRd0lDa3NDUWwyWldNektDQXdMak0xTkRVNExDQXdMamt3T0RNMExDQXdMakV6TXpneklDa3NDZ2tKZG1Wak15Z2dNQzR3TkRneU15d2dNQzR3TVRVMk5pd2dNQzQ0TXpjM055QXBDZ2twT3dvSlkyOXVjM1FnYldGME15QkJRMFZUVDNWMGNIVjBUV0YwSUQwZ2JXRjBNeWdLQ1FsMlpXTXpLQ0FnTVM0Mk1EUTNOU3dnTFRBdU1UQXlNRGdzSUMwd0xqQXdNekkzSUNrc0NRbDJaV016S0NBdE1DNDFNekV3T0N3Z0lERXVNVEE0TVRNc0lDMHdMakEzTWpjMklDa3NDZ2tKZG1Wak15Z2dMVEF1TURjek5qY3NJQzB3TGpBd05qQTFMQ0FnTVM0d056WXdNaUFwQ2drcE93b0pZMjlzYjNJZ0tqMGdkRzl1WlUxaGNIQnBibWRGZUhCdmMzVnlaU0F2SURBdU5qc0tDV052Ykc5eUlEMGdRVU5GVTBsdWNIVjBUV0YwSUNvZ1kyOXNiM0k3Q2dsamIyeHZjaUE5SUZKU1ZFRnVaRTlFVkVacGRDZ2dZMjlzYjNJZ0tUc0tDV052Ykc5eUlEMGdRVU5GVTA5MWRIQjFkRTFoZENBcUlHTnZiRzl5T3dvSmNtVjBkWEp1SUhOaGRIVnlZWFJsS0NCamIyeHZjaUFwT3dwOUNuWmxZek1nUTNWemRHOXRWRzl1WlUxaGNIQnBibWNvSUhabFl6TWdZMjlzYjNJZ0tTQjdJSEpsZEhWeWJpQmpiMnh2Y2pzZ2ZXQXNJRzV0SUQwZ1lDTnBabVJsWmlCVlUwVmZWRkpCVGxOTlNWTlRTVTlPQ2dsbWJHOWhkQ0IwY21GdWMyMXBjM05wYjI1QmJIQm9ZU0E5SURFdU1Ec0tDV1pzYjJGMElIUnlZVzV6YldsemMybHZia1poWTNSdmNpQTlJSFJ5WVc1emJXbHpjMmx2YmpzS0NXWnNiMkYwSUhSb2FXTnJibVZ6YzBaaFkzUnZjaUE5SUhSb2FXTnJibVZ6Y3pzS0NTTnBabVJsWmlCVlUwVmZWRkpCVGxOTlNWTlRTVTlPVFVGUUNna0pkSEpoYm5OdGFYTnphVzl1Um1GamRHOXlJQ285SUhSbGVIUjFjbVV5UkNnZ2RISmhibk50YVhOemFXOXVUV0Z3TENCMlZYWWdLUzV5T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgxUklTVU5MVGtWVFUwMUJVQW9KQ1hSb2FXTnJibVZ6YzBaaFkzUnZjaUFxUFNCMFpYaDBkWEpsTWtRb0lIUm9hV05yYm1WemMwMWhjQ3dnZGxWMklDa3VaenNLQ1NObGJtUnBaZ29KZG1Wak15QndiM01nUFNCMlYyOXliR1JRYjNOcGRHbHZianNLQ1habFl6TWdkaUE5SUc1dmNtMWhiR2w2WlNnZ1kyRnRaWEpoVUc5emFYUnBiMjRnTFNCd2IzTWdLVHNLQ1habFl6TWdiaUE5SUdsdWRtVnljMlZVY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUc1dmNtMWhiQ3dnZG1sbGQwMWhkSEpwZUNBcE93b0pkbVZqTkNCMGNtRnVjMjFwYzNOcGIyNGdQU0JuWlhSSlFreFdiMngxYldWU1pXWnlZV04wYVc5dUtBb0pDVzRzSUhZc0lISnZkV2RvYm1WemMwWmhZM1J2Y2l3Z2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlMQ0J0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUxDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrWTVNQ3dLQ1Fsd2IzTXNJRzF2WkdWc1RXRjBjbWw0TENCMmFXVjNUV0YwY21sNExDQndjbTlxWldOMGFXOXVUV0YwY21sNExDQnBiM0lzSUhSb2FXTnJibVZ6YzBaaFkzUnZjaXdLQ1FsaGRIUmxiblZoZEdsdmJrTnZiRzl5TENCaGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElDazdDZ2wwYjNSaGJFUnBabVoxYzJVZ1BTQnRhWGdvSUhSdmRHRnNSR2xtWm5WelpTd2dkSEpoYm5OdGFYTnphVzl1TG5Kbllpd2dkSEpoYm5OdGFYTnphVzl1Um1GamRHOXlJQ2s3Q2dsMGNtRnVjMjFwYzNOcGIyNUJiSEJvWVNBOUlHMXBlQ2dnZEhKaGJuTnRhWE56YVc5dVFXeHdhR0VzSUhSeVlXNXpiV2x6YzJsdmJpNWhMQ0IwY21GdWMyMXBjM05wYjI1R1lXTjBiM0lnS1RzS0kyVnVaR2xtWUN3Z2FXMGdQU0JnSTJsbVpHVm1JRlZUUlY5VVVrRk9VMDFKVTFOSlQwNEtDWFZ1YVdadmNtMGdabXh2WVhRZ2RISmhibk50YVhOemFXOXVPd29KZFc1cFptOXliU0JtYkc5aGRDQjBhR2xqYTI1bGMzTTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVTdDZ2wxYm1sbWIzSnRJSFpsWXpNZ1lYUjBaVzUxWVhScGIyNURiMnh2Y2pzS0NTTnBabVJsWmlCVlUwVmZWRkpCVGxOTlNWTlRTVTlPVFVGUUNna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdkSEpoYm5OdGFYTnphVzl1VFdGd093b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIUm9hV05yYm1WemMwMWhjRHNLQ1NObGJtUnBaZ29KZFc1cFptOXliU0IyWldNeUlIUnlZVzV6YldsemMybHZibE5oYlhCc1pYSlRhWHBsT3dvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNrMWhjRHNLQ1hWdWFXWnZjbTBnYldGME5DQnRiMlJsYkUxaGRISnBlRHNLQ1hWdWFXWnZjbTBnYldGME5DQndjbTlxWldOMGFXOXVUV0YwY21sNE93b0pkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRkJ2YzJsMGFXOXVPd29KZG1Wak15Qm5aWFJXYjJ4MWJXVlVjbUZ1YzIxcGMzTnBiMjVTWVhrb0lIWmxZek1nYml3Z2RtVmpNeUIyTENCbWJHOWhkQ0IwYUdsamEyNWxjM01zSUdac2IyRjBJR2x2Y2l3Z2JXRjBOQ0J0YjJSbGJFMWhkSEpwZUNBcElIc0tDUWwyWldNeklISmxabkpoWTNScGIyNVdaV04wYjNJZ1BTQnlaV1p5WVdOMEtDQXRJSFlzSUc1dmNtMWhiR2w2WlNnZ2JpQXBMQ0F4TGpBZ0x5QnBiM0lnS1RzS0NRbDJaV016SUcxdlpHVnNVMk5oYkdVN0Nna0piVzlrWld4VFkyRnNaUzU0SUQwZ2JHVnVaM1JvS0NCMlpXTXpLQ0J0YjJSbGJFMWhkSEpwZUZzZ01DQmRMbmg1ZWlBcElDazdDZ2tKYlc5a1pXeFRZMkZzWlM1NUlEMGdiR1Z1WjNSb0tDQjJaV016S0NCdGIyUmxiRTFoZEhKcGVGc2dNU0JkTG5oNWVpQXBJQ2s3Q2drSmJXOWtaV3hUWTJGc1pTNTZJRDBnYkdWdVozUm9LQ0IyWldNektDQnRiMlJsYkUxaGRISnBlRnNnTWlCZExuaDVlaUFwSUNrN0Nna0pjbVYwZFhKdUlHNXZjbTFoYkdsNlpTZ2djbVZtY21GamRHbHZibFpsWTNSdmNpQXBJQ29nZEdocFkydHVaWE56SUNvZ2JXOWtaV3hUWTJGc1pUc0tDWDBLQ1dac2IyRjBJR0Z3Y0d4NVNXOXlWRzlTYjNWbmFHNWxjM01vSUdac2IyRjBJSEp2ZFdkb2JtVnpjeXdnWm14dllYUWdhVzl5SUNrZ2V3b0pDWEpsZEhWeWJpQnliM1ZuYUc1bGMzTWdLaUJqYkdGdGNDZ2dhVzl5SUNvZ01pNHdJQzBnTWk0d0xDQXdMakFzSURFdU1DQXBPd29KZlFvSmRtVmpOQ0JuWlhSVWNtRnVjMjFwYzNOcGIyNVRZVzF3YkdVb0lIWmxZeklnWm5KaFowTnZiM0prTENCbWJHOWhkQ0J5YjNWbmFHNWxjM01zSUdac2IyRjBJR2x2Y2lBcElIc0tDUWxtYkc5aGRDQm1jbUZ0WldKMVptWmxja3h2WkNBOUlHeHZaeklvSUhSeVlXNXpiV2x6YzJsdmJsTmhiWEJzWlhKVGFYcGxMbmdnS1NBcUlHRndjR3g1U1c5eVZHOVNiM1ZuYUc1bGMzTW9JSEp2ZFdkb2JtVnpjeXdnYVc5eUlDazdDZ2tKSTJsbVpHVm1JRlJGV0ZSVlVrVmZURTlFWDBWWVZBb0pDUWx5WlhSMWNtNGdkR1Y0ZEhWeVpUSkVURzlrUlZoVUtDQjBjbUZ1YzIxcGMzTnBiMjVUWVcxd2JHVnlUV0Z3TENCbWNtRm5RMjl2Y21RdWVIa3NJR1p5WVcxbFluVm1abVZ5VEc5a0lDazdDZ2tKSTJWc2MyVUtDUWtKY21WMGRYSnVJSFJsZUhSMWNtVXlSQ2dnZEhKaGJuTnRhWE56YVc5dVUyRnRjR3hsY2sxaGNDd2dabkpoWjBOdmIzSmtMbmg1TENCbWNtRnRaV0oxWm1abGNreHZaQ0FwT3dvSkNTTmxibVJwWmdvSmZRb0pkbVZqTXlCaGNIQnNlVlp2YkhWdFpVRjBkR1Z1ZFdGMGFXOXVLQ0IyWldNeklISmhaR2xoYm1ObExDQm1iRzloZENCMGNtRnVjMjFwYzNOcGIyNUVhWE4wWVc1alpTd2dkbVZqTXlCaGRIUmxiblZoZEdsdmJrTnZiRzl5TENCbWJHOWhkQ0JoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUNrZ2V3b0pDV2xtSUNnZ1lYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQTlQU0F3TGpBZ0tTQjdDZ2tKQ1hKbGRIVnliaUJ5WVdScFlXNWpaVHNLQ1FsOUlHVnNjMlVnZXdvSkNRbDJaV016SUdGMGRHVnVkV0YwYVc5dVEyOWxabVpwWTJsbGJuUWdQU0F0Ykc5bktDQmhkSFJsYm5WaGRHbHZia052Ykc5eUlDa2dMeUJoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sT3dvSkNRbDJaV016SUhSeVlXNXpiV2wwZEdGdVkyVWdQU0JsZUhBb0lDMGdZWFIwWlc1MVlYUnBiMjVEYjJWbVptbGphV1Z1ZENBcUlIUnlZVzV6YldsemMybHZia1JwYzNSaGJtTmxJQ2s3Q1FrSmNtVjBkWEp1SUhSeVlXNXpiV2wwZEdGdVkyVWdLaUJ5WVdScFlXNWpaVHNLQ1FsOUNnbDlDZ2wyWldNMElHZGxkRWxDVEZadmJIVnRaVkpsWm5KaFkzUnBiMjRvSUhabFl6TWdiaXdnZG1Wak15QjJMQ0JtYkc5aGRDQnliM1ZuYUc1bGMzTXNJSFpsWXpNZ1pHbG1ablZ6WlVOdmJHOXlMQ0IyWldNeklITndaV04xYkdGeVEyOXNiM0lzSUdac2IyRjBJSE53WldOMWJHRnlSamt3TEFvSkNYWmxZek1nY0c5emFYUnBiMjRzSUcxaGREUWdiVzlrWld4TllYUnlhWGdzSUcxaGREUWdkbWxsZDAxaGRISnBlQ3dnYldGME5DQndjbTlxVFdGMGNtbDRMQ0JtYkc5aGRDQnBiM0lzSUdac2IyRjBJSFJvYVdOcmJtVnpjeXdLQ1FsMlpXTXpJR0YwZEdWdWRXRjBhVzl1UTI5c2IzSXNJR1pzYjJGMElHRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdLU0I3Q2drSmRtVmpNeUIwY21GdWMyMXBjM05wYjI1U1lYa2dQU0JuWlhSV2IyeDFiV1ZVY21GdWMyMXBjM05wYjI1U1lYa29JRzRzSUhZc0lIUm9hV05yYm1WemN5d2dhVzl5TENCdGIyUmxiRTFoZEhKcGVDQXBPd29KQ1habFl6TWdjbVZtY21GamRHVmtVbUY1UlhocGRDQTlJSEJ2YzJsMGFXOXVJQ3NnZEhKaGJuTnRhWE56YVc5dVVtRjVPd29KQ1habFl6UWdibVJqVUc5eklEMGdjSEp2YWsxaGRISnBlQ0FxSUhacFpYZE5ZWFJ5YVhnZ0tpQjJaV00wS0NCeVpXWnlZV04wWldSU1lYbEZlR2wwTENBeExqQWdLVHNLQ1FsMlpXTXlJSEpsWm5KaFkzUnBiMjVEYjI5eVpITWdQU0J1WkdOUWIzTXVlSGtnTHlCdVpHTlFiM011ZHpzS0NRbHlaV1p5WVdOMGFXOXVRMjl2Y21SeklDczlJREV1TURzS0NRbHlaV1p5WVdOMGFXOXVRMjl2Y21SeklDODlJREl1TURzS0NRbDJaV00wSUhSeVlXNXpiV2wwZEdWa1RHbG5hSFFnUFNCblpYUlVjbUZ1YzIxcGMzTnBiMjVUWVcxd2JHVW9JSEpsWm5KaFkzUnBiMjVEYjI5eVpITXNJSEp2ZFdkb2JtVnpjeXdnYVc5eUlDazdDZ2tKZG1Wak15QmhkSFJsYm5WaGRHVmtRMjlzYjNJZ1BTQmhjSEJzZVZadmJIVnRaVUYwZEdWdWRXRjBhVzl1S0NCMGNtRnVjMjFwZEhSbFpFeHBaMmgwTG5Kbllpd2diR1Z1WjNSb0tDQjBjbUZ1YzIxcGMzTnBiMjVTWVhrZ0tTd2dZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpd2dZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0FwT3dvSkNYWmxZek1nUmlBOUlFVnVkbWx5YjI1dFpXNTBRbEpFUmlnZ2Jpd2dkaXdnYzNCbFkzVnNZWEpEYjJ4dmNpd2djM0JsWTNWc1lYSkdPVEFzSUhKdmRXZG9ibVZ6Y3lBcE93b0pDWEpsZEhWeWJpQjJaV00wS0NBb0lERXVNQ0F0SUVZZ0tTQXFJR0YwZEdWdWRXRjBaV1JEYjJ4dmNpQXFJR1JwWm1aMWMyVkRiMnh2Y2l3Z2RISmhibk50YVhSMFpXUk1hV2RvZEM1aElDazdDZ2w5Q2lObGJtUnBabUFzSUhKdElEMGdZQ05wWmlBb0lHUmxabWx1WldRb0lGVlRSVjlWVmlBcElDWW1JQ0VnWkdWbWFXNWxaQ2dnVlZaVFgxWkZVbFJGV0Y5UFRreFpJQ2tnS1FvSmRtRnllV2x1WnlCMlpXTXlJSFpWZGpzS0kyVnVaR2xtWUN3Z2MyMGdQU0JnSTJsbVpHVm1JRlZUUlY5VlZnb0pJMmxtWkdWbUlGVldVMTlXUlZKVVJWaGZUMDVNV1FvSkNYWmxZeklnZGxWMk93b0pJMlZzYzJVS0NRbDJZWEo1YVc1bklIWmxZeklnZGxWMk93b0pJMlZ1WkdsbUNnbDFibWxtYjNKdElHMWhkRE1nZFhaVWNtRnVjMlp2Y20wN0NpTmxibVJwWm1Bc0lHOXRJRDBnWUNOcFptUmxaaUJWVTBWZlZWWUtDWFpWZGlBOUlDZ2dkWFpVY21GdWMyWnZjbTBnS2lCMlpXTXpLQ0IxZGl3Z01TQXBJQ2t1ZUhrN0NpTmxibVJwWm1Bc0lHRnRJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVEVsSFNGUk5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUVU5TlFWQWdLUW9KZG1GeWVXbHVaeUIyWldNeUlIWlZkakk3Q2lObGJtUnBabUFzSUd4dElEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZURWxIU0ZSTlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRVTlOUVZBZ0tRb0pZWFIwY21saWRYUmxJSFpsWXpJZ2RYWXlPd29KZG1GeWVXbHVaeUIyWldNeUlIWlZkakk3Q2dsMWJtbG1iM0p0SUcxaGRETWdkWFl5VkhKaGJuTm1iM0p0T3dvalpXNWthV1pnTENCamJTQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMHhKUjBoVVRVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMEZQVFVGUUlDa0tDWFpWZGpJZ1BTQW9JSFYyTWxSeVlXNXpabTl5YlNBcUlIWmxZek1vSUhWMk1pd2dNU0FwSUNrdWVIazdDaU5sYm1ScFptQXNJR2h0SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlJVNVdUVUZRSUNrZ2ZId2daR1ZtYVc1bFpDZ2dSRWxUVkVGT1EwVWdLU0I4ZkNCa1pXWnBibVZrSUNnZ1ZWTkZYMU5JUVVSUFYwMUJVQ0FwSUh4OElHUmxabWx1WldRZ0tDQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0lDa0tDWFpsWXpRZ2QyOXliR1JRYjNOcGRHbHZiaUE5SUhabFl6UW9JSFJ5WVc1elptOXliV1ZrTENBeExqQWdLVHNLQ1NOcFptUmxaaUJWVTBWZlNVNVRWRUZPUTBsT1J3b0pDWGR2Y214a1VHOXphWFJwYjI0Z1BTQnBibk4wWVc1alpVMWhkSEpwZUNBcUlIZHZjbXhrVUc5emFYUnBiMjQ3Q2dralpXNWthV1lLQ1hkdmNteGtVRzl6YVhScGIyNGdQU0J0YjJSbGJFMWhkSEpwZUNBcUlIZHZjbXhrVUc5emFYUnBiMjQ3Q2lObGJtUnBabUFzSUhWdElEMGdZSFpoY25scGJtY2dkbVZqTWlCMlZYWTdDblZ1YVdadmNtMGdiV0YwTXlCMWRsUnlZVzV6Wm05eWJUc0tkbTlwWkNCdFlXbHVLQ2tnZXdvSmRsVjJJRDBnS0NCMWRsUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lIVjJMQ0F4SUNrZ0tTNTRlVHNLQ1dkc1gxQnZjMmwwYVc5dUlEMGdkbVZqTkNnZ2NHOXphWFJwYjI0dWVIa3NJREV1TUN3Z01TNHdJQ2s3Q24xZ0xDQmtiU0E5SUdCMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCME1rUTdDblpoY25scGJtY2dkbVZqTWlCMlZYWTdDblp2YVdRZ2JXRnBiaWdwSUhzS0NYWmxZelFnZEdWNFEyOXNiM0lnUFNCMFpYaDBkWEpsTWtRb0lIUXlSQ3dnZGxWMklDazdDZ2xuYkY5R2NtRm5RMjlzYjNJZ1BTQnRZWEJVWlhobGJGUnZUR2x1WldGeUtDQjBaWGhEYjJ4dmNpQXBPd29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z1WTI5a2FXNW5jMTltY21GbmJXVnVkRDRLZldBc0lHWnRJRDBnWUhaaGNubHBibWNnZG1Wak15QjJWMjl5YkdSRWFYSmxZM1JwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1haWGIzSnNaRVJwY21WamRHbHZiaUE5SUhSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2NHOXphWFJwYjI0c0lHMXZaR1ZzVFdGMGNtbDRJQ2s3Q2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KWjJ4ZlVHOXphWFJwYjI0dWVpQTlJR2RzWDFCdmMybDBhVzl1TG5jN0NuMWdMQ0J3YlNBOUlHQWphVzVqYkhWa1pTQThaVzUyYldGd1gyTnZiVzF2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NuWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUkVhWEpsWTNScGIyNDdDaU5wYm1Oc2RXUmxJRHhqZFdKbFgzVjJYM0psWm14bFkzUnBiMjVmWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlncElIc0tDWFpsWXpNZ2RsSmxabXhsWTNRZ1BTQjJWMjl5YkdSRWFYSmxZM1JwYjI0N0Nna2phVzVqYkhWa1pTQThaVzUyYldGd1gyWnlZV2R0Wlc1MFBnb0paMnhmUm5KaFowTnZiRzl5SUQwZ1pXNTJRMjlzYjNJN0NnbG5iRjlHY21GblEyOXNiM0l1WVNBcVBTQnZjR0ZqYVhSNU93b0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWRENEtmV0FzSUcxdElEMGdZQ05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbUZ5ZVdsdVp5QjJaV015SUhaSWFXZG9VSEpsWTJsemFXOXVXbGM3Q25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybG1aR1ZtSUZWVFJWOUVTVk5RVEVGRFJVMUZUbFJOUVZBS0NRa2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJWdVpHbG1DZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NYWklhV2RvVUhKbFkybHphVzl1V2xjZ1BTQm5iRjlRYjNOcGRHbHZiaTU2ZHpzS2ZXQXNJR2R0SUQwZ1lDTnBaaUJFUlZCVVNGOVFRVU5MU1U1SElEMDlJRE15TURBS0NYVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJZWEo1YVc1bklIWmxZeklnZGtocFoyaFFjbVZqYVhOcGIyNWFWenNLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2dNUzR3SUNrN0Nna2phV1lnUkVWUVZFaGZVRUZEUzBsT1J5QTlQU0F6TWpBd0Nna0paR2xtWm5WelpVTnZiRzl5TG1FZ1BTQnZjR0ZqYVhSNU93b0pJMlZ1WkdsbUNna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDV1pzYjJGMElHWnlZV2REYjI5eVpGb2dQU0F3TGpVZ0tpQjJTR2xuYUZCeVpXTnBjMmx2YmxwWFd6QmRJQzhnZGtocFoyaFFjbVZqYVhOcGIyNWFWMXN4WFNBcklEQXVOVHNLQ1NOcFppQkVSVkJVU0Y5UVFVTkxTVTVISUQwOUlETXlNREFLQ1FsbmJGOUdjbUZuUTI5c2IzSWdQU0IyWldNMEtDQjJaV016S0NBeExqQWdMU0JtY21GblEyOXZjbVJhSUNrc0lHOXdZV05wZEhrZ0tUc0tDU05sYkdsbUlFUkZVRlJJWDFCQlEwdEpUa2NnUFQwZ016SXdNUW9KQ1dkc1gwWnlZV2REYjJ4dmNpQTlJSEJoWTJ0RVpYQjBhRlJ2VWtkQ1FTZ2dabkpoWjBOdmIzSmtXaUFwT3dvSkkyVnVaR2xtQ24xZ0xDQjRiU0E5SUdBalpHVm1hVzVsSUVSSlUxUkJUa05GQ25aaGNubHBibWNnZG1Wak15QjJWMjl5YkdSUWIzTnBkR2x2YmpzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEhWMlgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1WW1GelpWOTJaWEowWlhnK0Nna2phV1prWldZZ1ZWTkZYMFJKVTFCTVFVTkZUVVZPVkUxQlVBb0pDU05wYm1Oc2RXUmxJRHhpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2drSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDUWtqYVc1amJIVmtaU0E4YzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dralpXNWthV1lLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIZHZjbXhrY0c5elgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSmRsZHZjbXhrVUc5emFYUnBiMjRnUFNCM2IzSnNaRkJ2YzJsMGFXOXVMbmg1ZWpzS2ZXQXNJSGx0SUQwZ1lDTmtaV1pwYm1VZ1JFbFRWRUZPUTBVS2RXNXBabTl5YlNCMlpXTXpJSEpsWm1WeVpXNWpaVkJ2YzJsMGFXOXVPd3AxYm1sbWIzSnRJR1pzYjJGMElHNWxZWEpFYVhOMFlXNWpaVHNLZFc1cFptOXliU0JtYkc5aGRDQm1ZWEpFYVhOMFlXNWpaVHNLZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkZCdmMybDBhVzl1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGNHRmphMmx1Wno0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRnS0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2dNUzR3SUNrN0Nna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1dac2IyRjBJR1JwYzNRZ1BTQnNaVzVuZEdnb0lIWlhiM0pzWkZCdmMybDBhVzl1SUMwZ2NtVm1aWEpsYm1ObFVHOXphWFJwYjI0Z0tUc0tDV1JwYzNRZ1BTQW9JR1JwYzNRZ0xTQnVaV0Z5UkdsemRHRnVZMlVnS1NBdklDZ2dabUZ5UkdsemRHRnVZMlVnTFNCdVpXRnlSR2x6ZEdGdVkyVWdLVHNLQ1dScGMzUWdQU0J6WVhSMWNtRjBaU2dnWkdsemRDQXBPd29KWjJ4ZlJuSmhaME52Ykc5eUlEMGdjR0ZqYTBSbGNIUm9WRzlTUjBKQktDQmthWE4wSUNrN0NuMWdMQ0IyYlNBOUlHQjJZWEo1YVc1bklIWmxZek1nZGxkdmNteGtSR2x5WldOMGFXOXVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ3AyYjJsa0lHMWhhVzRvS1NCN0NnbDJWMjl5YkdSRWFYSmxZM1JwYjI0Z1BTQjBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9JSEJ2YzJsMGFXOXVMQ0J0YjJSbGJFMWhkSEpwZUNBcE93b0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S2ZXQXNJRjl0SUQwZ1lIVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIUkZjWFZwY21WamREc0tkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRVJwY21WamRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLZG05cFpDQnRZV2x1S0NrZ2V3b0pkbVZqTXlCa2FYSmxZM1JwYjI0Z1BTQnViM0p0WVd4cGVtVW9JSFpYYjNKc1pFUnBjbVZqZEdsdmJpQXBPd29KZG1Wak1pQnpZVzF3YkdWVlZpQTlJR1Z4ZFdseVpXTjBWWFlvSUdScGNtVmpkR2x2YmlBcE93b0pkbVZqTkNCMFpYaERiMnh2Y2lBOUlIUmxlSFIxY21VeVJDZ2dkRVZ4ZFdseVpXTjBMQ0J6WVcxd2JHVlZWaUFwT3dvSloyeGZSbkpoWjBOdmJHOXlJRDBnYldGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnZEdWNFEyOXNiM0lnS1RzS0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0NuMWdMQ0JOYlNBOUlHQjFibWxtYjNKdElHWnNiMkYwSUhOallXeGxPd3BoZEhSeWFXSjFkR1VnWm14dllYUWdiR2x1WlVScGMzUmhibU5sT3dwMllYSjVhVzVuSUdac2IyRjBJSFpNYVc1bFJHbHpkR0Z1WTJVN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZytDblp2YVdRZ2JXRnBiaWdwSUhzS0NYWk1hVzVsUkdsemRHRnVZMlVnUFNCelkyRnNaU0FxSUd4cGJtVkVhWE4wWVc1alpUc0tDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZkbVZ5ZEdWNFBncDlZQ3dnWW0wZ1BTQmdkVzVwWm05eWJTQjJaV016SUdScFptWjFjMlU3Q25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tkVzVwWm05eWJTQm1iRzloZENCa1lYTm9VMmw2WlRzS2RXNXBabTl5YlNCbWJHOWhkQ0IwYjNSaGJGTnBlbVU3Q25aaGNubHBibWNnWm14dllYUWdka3hwYm1WRWFYTjBZVzVqWlRzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NXbG1JQ2dnYlc5a0tDQjJUR2x1WlVScGMzUmhibU5sTENCMGIzUmhiRk5wZW1VZ0tTQStJR1JoYzJoVGFYcGxJQ2tnZXdvSkNXUnBjMk5oY21RN0NnbDlDZ2wyWldNeklHOTFkR2R2YVc1blRHbG5hSFFnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2daR2xtWm5WelpTd2diM0JoWTJsMGVTQXBPd29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgyWnlZV2R0Wlc1MFBnb0piM1YwWjI5cGJtZE1hV2RvZENBOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJN0Nna2phVzVqYkhWa1pTQThiM1YwY0hWMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhtYjJkZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThjSEpsYlhWc2RHbHdiR2xsWkY5aGJIQm9ZVjltY21GbmJXVnVkRDRLZldBc0lIZHRJRDBnWUNOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhWMk1sOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIVjJNbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZkbVZ5ZEdWNFBnb0pJMmxtSUdSbFptbHVaV1FnS0NCVlUwVmZSVTVXVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ0FvSUZWVFJWOVRTMGxPVGtsT1J5QXBDZ2tKSTJsdVkyeDFaR1VnUEdKbFoybHVibTl5YldGc1gzWmxjblJsZUQ0S0NRa2phVzVqYkhWa1pTQThiVzl5Y0dodWIzSnRZV3hmZG1WeWRHVjRQZ29KQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2drSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pDU05wYm1Oc2RXUmxJRHhrWldaaGRXeDBibTl5YldGc1gzWmxjblJsZUQ0S0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhkdmNteGtjRzl6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bGJuWnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NuMWdMQ0JUYlNBOUlHQjFibWxtYjNKdElIWmxZek1nWkdsbVpuVnpaVHNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phV1p1WkdWbUlFWk1RVlJmVTBoQlJFVkVDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrNXZjbTFoYkRzS0kyVnVaR2xtQ2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0Z2YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYMk52YlcxdmJsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqZFdKbFgzVjJYM0psWm14bFkzUnBiMjVmWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITndaV04xYkdGeWJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JR1JwWm1aMWMyVXNJRzl3WVdOcGRIa2dLVHNLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BITndaV04xYkdGeWJXRndYMlp5WVdkdFpXNTBQZ29KVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ1BTQlNaV1pzWldOMFpXUk1hV2RvZENnZ2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tnS1RzS0NTTnBabVJsWmlCVlUwVmZURWxIU0ZSTlFWQUtDUWwyWldNMElHeHBaMmgwVFdGd1ZHVjRaV3c5SUhSbGVIUjFjbVV5UkNnZ2JHbG5hSFJOWVhBc0lIWlZkaklnS1RzS0NRbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ2JHbG5hSFJOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0JzYVdkb2RFMWhjRlJsZUdWc0lDa3VjbWRpSUNvZ2JHbG5hSFJOWVhCSmJuUmxibk5wZEhrN0Nna2paV3h6WlFvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCMlpXTXpLQ0F4TGpBZ0tUc0tDU05sYm1ScFpnb0pJMmx1WTJ4MVpHVWdQR0Z2YldGd1gyWnlZV2R0Wlc1MFBnb0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNvOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJN0NnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0J5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVN0Nna2phVzVqYkhWa1pTQThaVzUyYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1MFBncDlZQ3dnVkcwZ1BTQmdJMlJsWm1sdVpTQk1RVTFDUlZKVUNuWmhjbmxwYm1jZ2RtVmpNeUIyVEdsbmFIUkdjbTl1ZERzS2RtRnllV2x1WnlCMlpXTXpJSFpKYm1ScGNtVmpkRVp5YjI1ME93b2phV1prWldZZ1JFOVZRa3hGWDFOSlJFVkVDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RreHBaMmgwUW1GamF6c0tDWFpoY25scGJtY2dkbVZqTXlCMlNXNWthWEpsWTNSQ1lXTnJPd29qWlc1a2FXWUtJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WW5Oa1puTStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR0Z5YzE5aVpXZHBiajRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSFYyTWw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUmxabUYxYkhSdWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhsYm5adFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXNZVzFpWlhKMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5MlpYSjBaWGcrQ24xZ0xDQkZiU0E5SUdCMWJtbG1iM0p0SUhabFl6TWdaR2xtWm5WelpUc0tkVzVwWm05eWJTQjJaV016SUdWdGFYTnphWFpsT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDblpoY25scGJtY2dkbVZqTXlCMlRHbG5hSFJHY205dWREc0tkbUZ5ZVdsdVp5QjJaV016SUhaSmJtUnBjbVZqZEVaeWIyNTBPd29qYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2dsMllYSjVhVzVuSUhabFl6TWdka3hwWjJoMFFtRmphenNLQ1haaGNubHBibWNnZG1Wak15QjJTVzVrYVhKbFkzUkNZV05yT3dvalpXNWthV1lLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0Z2YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WlcxcGMzTnBkbVZ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjlqYjIxdGIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFluTmtabk0rQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0dGeWMxOWlaV2RwYmo0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYTnJYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHpjR1ZqZFd4aGNtMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KZG1Wak5DQmthV1ptZFhObFEyOXNiM0lnUFNCMlpXTTBLQ0JrYVdabWRYTmxMQ0J2Y0dGamFYUjVJQ2s3Q2dsU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQTlJRkpsWm14bFkzUmxaRXhwWjJoMEtDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1NBcE93b0pkbVZqTXlCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVWdQU0JsYldsemMybDJaVHNLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BITndaV04xYkdGeWJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdGFYTnphWFpsYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBSR2xtWm5WelpTQXJQU0FvSUdkc1gwWnliMjUwUm1GamFXNW5JQ2tnUHlCMlNXNWthWEpsWTNSR2NtOXVkQ0E2SUhaSmJtUnBjbVZqZEVKaFkyczdDZ2tqWld4elpRb0pDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBclBTQjJTVzVrYVhKbFkzUkdjbTl1ZERzS0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYldGd1gyWnlZV2R0Wlc1MFBnb0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSRWFXWm1kWE5sSUNvOUlFSlNSRVpmVEdGdFltVnlkQ2dnWkdsbVpuVnpaVU52Ykc5eUxuSm5ZaUFwT3dvSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnUFNBb0lHZHNYMFp5YjI1MFJtRmphVzVuSUNrZ1B5QjJUR2xuYUhSR2NtOXVkQ0E2SUhaTWFXZG9kRUpoWTJzN0Nna2paV3h6WlFvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdQU0IyVEdsbmFIUkdjbTl1ZERzS0NTTmxibVJwWmdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBSR2xtWm5WelpTQXFQU0JDVWtSR1gweGhiV0psY25Rb0lHUnBabVoxYzJWRGIyeHZjaTV5WjJJZ0tTQXFJR2RsZEZOb1lXUnZkMDFoYzJzb0tUc0tDU05wYm1Oc2RXUmxJRHhoYjIxaGNGOW1jbUZuYldWdWRENEtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUhKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3lCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVTdDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1FXMGdQU0JnSTJSbFptbHVaU0JOUVZSRFFWQUtkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0dodWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNWlZWE5sWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGtaV1poZFd4MGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThabTluWDNabGNuUmxlRDRLQ1haV2FXVjNVRzl6YVhScGIyNGdQU0F0SUcxMlVHOXphWFJwYjI0dWVIbDZPd3A5WUN3Z1EyMGdQU0JnSTJSbFptbHVaU0JOUVZSRFFWQUtkVzVwWm05eWJTQjJaV016SUdScFptWjFjMlU3Q25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdiV0YwWTJGd093cDJZWEo1YVc1bklIWmxZek1nZGxacFpYZFFiM05wZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpZFcxd2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHViM0p0WVd4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2daR2xtWm5WelpTd2diM0JoWTJsMGVTQXBPd29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDJaeVlXZHRaVzUwWDJKbFoybHVQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjl0WVhCelBnb0pkbVZqTXlCMmFXVjNSR2x5SUQwZ2JtOXliV0ZzYVhwbEtDQjJWbWxsZDFCdmMybDBhVzl1SUNrN0NnbDJaV016SUhnZ1BTQnViM0p0WVd4cGVtVW9JSFpsWXpNb0lIWnBaWGRFYVhJdWVpd2dNQzR3TENBdElIWnBaWGRFYVhJdWVDQXBJQ2s3Q2dsMlpXTXpJSGtnUFNCamNtOXpjeWdnZG1sbGQwUnBjaXdnZUNBcE93b0pkbVZqTWlCMWRpQTlJSFpsWXpJb0lHUnZkQ2dnZUN3Z2JtOXliV0ZzSUNrc0lHUnZkQ2dnZVN3Z2JtOXliV0ZzSUNrZ0tTQXFJREF1TkRrMUlDc2dNQzQxT3dvSkkybG1aR1ZtSUZWVFJWOU5RVlJEUVZBS0NRbDJaV00wSUcxaGRHTmhjRU52Ykc5eUlEMGdkR1Y0ZEhWeVpUSkVLQ0J0WVhSallYQXNJSFYySUNrN0Nna0piV0YwWTJGd1EyOXNiM0lnUFNCdFlYUmpZWEJVWlhobGJGUnZUR2x1WldGeUtDQnRZWFJqWVhCRGIyeHZjaUFwT3dvSkkyVnNjMlVLQ1FsMlpXTTBJRzFoZEdOaGNFTnZiRzl5SUQwZ2RtVmpOQ2dnTVM0d0lDazdDZ2tqWlc1a2FXWUtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUdScFptWjFjMlZEYjJ4dmNpNXlaMklnS2lCdFlYUmpZWEJEYjJ4dmNpNXlaMkk3Q2dramFXNWpiSFZrWlNBOGIzVjBjSFYwWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeG1iMmRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGNISmxiWFZzZEdsd2JHbGxaRjloYkhCb1lWOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmWm5KaFoyMWxiblErQ24xZ0xDQk1iU0E5SUdBalpHVm1hVzVsSUU1UFVrMUJUQW9qYVdZZ1pHVm1hVzVsWkNnZ1JreEJWRjlUU0VGRVJVUWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZSQlRrZEZUbFJUVUVGRFJWOU9UMUpOUVV4TlFWQWdLUW9KZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q2lObGJtUnBaZ29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3hmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb2phV1lnWkdWbWFXNWxaQ2dnUmt4QlZGOVRTRUZFUlVRZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlFsVk5VRTFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRlJCVGtkRlRsUlRVRUZEUlY5T1QxSk5RVXhOUVZBZ0tRb0pkbFpwWlhkUWIzTnBkR2x2YmlBOUlDMGdiWFpRYjNOcGRHbHZiaTU0ZVhvN0NpTmxibVJwWmdwOVlDd2dVbTBnUFNCZ0kyUmxabWx1WlNCT1QxSk5RVXdLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phV1lnWkdWbWFXNWxaQ2dnUmt4QlZGOVRTRUZFUlVRZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlFsVk5VRTFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRlJCVGtkRlRsUlRVRUZEUlY5T1QxSk5RVXhOUVZBZ0tRb0pkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5sYm1ScFpnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSjFiWEJ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NXZHNYMFp5WVdkRGIyeHZjaUE5SUhabFl6UW9JSEJoWTJ0T2IzSnRZV3hVYjFKSFFpZ2dibTl5YldGc0lDa3NJRzl3WVdOcGRIa2dLVHNLZldBc0lGQnRJRDBnWUNOa1pXWnBibVVnVUVoUFRrY0tkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSFYyTWw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIVjJNbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm1KaGMyVmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdSbFptRjFiSFJ1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1haV2FXVjNVRzl6YVhScGIyNGdQU0F0SUcxMlVHOXphWFJwYjI0dWVIbDZPd29KSTJsdVkyeDFaR1VnUEhkdmNteGtjRzl6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bGJuWnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUVsdElEMGdZQ05rWldacGJtVWdVRWhQVGtjS2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdkbVZqTXlCbGJXbHpjMmwyWlRzS2RXNXBabTl5YlNCMlpXTXpJSE53WldOMWJHRnlPd3AxYm1sbWIzSnRJR1pzYjJGMElITm9hVzVwYm1WemN6c0tkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGNHRmphMmx1Wno0S0kybHVZMngxWkdVZ1BHUnBkR2hsY21sdVoxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGpKZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVc5dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHBaMmgwYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bGJXbHpjMmwyWlcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJOdmJXMXZibDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amRXSmxYM1YyWDNKbFpteGxZM1JwYjI1ZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0p6WkdaelBnb2phVzVqYkhWa1pTQThiR2xuYUhSelgzQmhjbk5mWW1WbmFXNCtDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHBaMmgwYzE5d2FHOXVaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhOd1pXTjFiR0Z5YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDVkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUQwZ1VtVm1iR1ZqZEdWa1RHbG5hSFFvSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBJQ2s3Q2dsMlpXTXpJSFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlNBOUlHVnRhWE56YVhabE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YzNCbFkzVnNZWEp0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KSTJsdVkyeDFaR1VnUEdWdGFYTnphWFpsYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdhRzl1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZlpuSmhaMjFsYm5SZlltVm5hVzQrQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDIxaGNITStDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMlZ1WkQ0S0NTTnBibU5zZFdSbElEeGhiMjFoY0Y5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSVGNHVmpkV3hoY2lBcklISmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wVTNCbFkzVnNZWElnS3lCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVTdDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1JHMGdQU0JnSTJSbFptbHVaU0JUVkVGT1JFRlNSQXAyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJsbVpHVm1JRlZUUlY5VVVrRk9VMDFKVTFOSlQwNEtDWFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JRYjNOcGRHbHZianNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSFYyTWw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhWMk1sOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JsWm1GMWJIUnViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDWFpXYVdWM1VHOXphWFJwYjI0Z1BTQXRJRzEyVUc5emFYUnBiMjR1ZUhsNk93b0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NpTnBabVJsWmlCVlUwVmZWRkpCVGxOTlNWTlRTVTlPQ2dsMlYyOXliR1JRYjNOcGRHbHZiaUE5SUhkdmNteGtVRzl6YVhScGIyNHVlSGw2T3dvalpXNWthV1lLZldBc0lFWnRJRDBnWUNOa1pXWnBibVVnVTFSQlRrUkJVa1FLSTJsbVpHVm1JRkJJV1ZOSlEwRk1DZ2tqWkdWbWFXNWxJRWxQVWdvSkkyUmxabWx1WlNCVFVFVkRWVXhCVWdvalpXNWthV1lLZFc1cFptOXliU0IyWldNeklHUnBabVoxYzJVN0NuVnVhV1p2Y20wZ2RtVmpNeUJsYldsemMybDJaVHNLZFc1cFptOXliU0JtYkc5aGRDQnliM1ZuYUc1bGMzTTdDblZ1YVdadmNtMGdabXh2WVhRZ2JXVjBZV3h1WlhOek93cDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q2lOcFptUmxaaUJKVDFJS0NYVnVhV1p2Y20wZ1pteHZZWFFnYVc5eU93b2paVzVrYVdZS0kybG1aR1ZtSUZOUVJVTlZURUZTQ2dsMWJtbG1iM0p0SUdac2IyRjBJSE53WldOMWJHRnlTVzUwWlc1emFYUjVPd29KZFc1cFptOXliU0IyWldNeklITndaV04xYkdGeVEyOXNiM0k3Q2dramFXWmtaV1lnVlZORlgxTlFSVU5WVEVGU1NVNVVSVTVUU1ZSWlRVRlFDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZVMUJGUTFWTVFWSkRUMHhQVWsxQlVBb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE53WldOMWJHRnlRMjlzYjNKTllYQTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2wxYm1sbWIzSnRJR1pzYjJGMElHTnNaV0Z5WTI5aGREc0tDWFZ1YVdadmNtMGdabXh2WVhRZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOek93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVRTRVZGVGdvSmRXNXBabTl5YlNCMlpXTXpJSE5vWldWdVEyOXNiM0k3Q2dsMWJtbG1iM0p0SUdac2IyRjBJSE5vWldWdVVtOTFaMmh1WlhOek93b0pJMmxtWkdWbUlGVlRSVjlUU0VWRlRrTlBURTlTVFVGUUNna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjMmhsWlc1RGIyeHZjazFoY0RzS0NTTmxibVJwWmdvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGxKUFZVZElUa1ZUVTAxQlVBb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE5vWldWdVVtOTFaMmh1WlhOelRXRndPd29KSTJWdVpHbG1DaU5sYm1ScFpncDJZWEo1YVc1bklIWmxZek1nZGxacFpYZFFiM05wZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDaU5wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnZiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzFwYzNOcGRtVnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0p6WkdaelBnb2phVzVqYkhWa1pTQThZM1ZpWlY5MWRsOXlaV1pzWldOMGFXOXVYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYMk52YlcxdmJsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDNCb2VYTnBZMkZzWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTl3WVhKelgySmxaMmx1UGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR2g1YzJsallXeGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIUnlZVzV6YldsemMybHZibDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc1pXRnlZMjloZEY5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Y205MVoyaHVaWE56YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFpYUmhiRzVsYzNOdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpRZ1pHbG1ablZ6WlVOdmJHOXlJRDBnZG1Wak5DZ2daR2xtWm5WelpTd2diM0JoWTJsMGVTQXBPd29KVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ1BTQlNaV1pzWldOMFpXUk1hV2RvZENnZ2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tnS1RzS0NYWmxZek1nZEc5MFlXeEZiV2x6YzJsMlpWSmhaR2xoYm1ObElEMGdaVzFwYzNOcGRtVTdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4eWIzVm5hRzVsYzNOdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YldWMFlXeHVaWE56YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOWlaV2RwYmo0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjejRLQ1NOcGJtTnNkV1JsSUR4amJHVmhjbU52WVhSZmJtOXliV0ZzWDJaeVlXZHRaVzUwWDJKbFoybHVQZ29KSTJsdVkyeDFaR1VnUEdOc1pXRnlZMjloZEY5dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDU05wYm1Oc2RXUmxJRHhsYldsemMybDJaVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHaDVjMmxqWVd4ZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTltY21GbmJXVnVkRjlsYm1RK0Nna2phVzVqYkhWa1pTQThZVzl0WVhCZlpuSmhaMjFsYm5RK0NnbDJaV016SUhSdmRHRnNSR2xtWm5WelpTQTlJSEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVTdDZ2wyWldNeklIUnZkR0ZzVTNCbFkzVnNZWElnUFNCeVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXJJSEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFUzQmxZM1ZzWVhJN0Nna2phVzVqYkhWa1pTQThkSEpoYm5OdGFYTnphVzl1WDJaeVlXZHRaVzUwUGdvSmRtVmpNeUJ2ZFhSbmIybHVaMHhwWjJoMElEMGdkRzkwWVd4RWFXWm1kWE5sSUNzZ2RHOTBZV3hUY0dWamRXeGhjaUFySUhSdmRHRnNSVzFwYzNOcGRtVlNZV1JwWVc1alpUc0tDU05wWm1SbFppQlZVMFZmVTBoRlJVNEtDUWxtYkc5aGRDQnphR1ZsYmtWdVpYSm5lVU52YlhBZ1BTQXhMakFnTFNBd0xqRTFOeUFxSUcxaGVETW9JRzFoZEdWeWFXRnNMbk5vWldWdVEyOXNiM0lnS1RzS0NRbHZkWFJuYjJsdVoweHBaMmgwSUQwZ2IzVjBaMjlwYm1kTWFXZG9kQ0FxSUhOb1pXVnVSVzVsY21kNVEyOXRjQ0FySUhOb1pXVnVVM0JsWTNWc1lYSTdDZ2tqWlc1a2FXWUtDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2drSlpteHZZWFFnWkc5MFRsWmpZeUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JR2RsYjIxbGRISjVMbU5zWldGeVkyOWhkRTV2Y20xaGJDd2daMlZ2YldWMGNua3VkbWxsZDBScGNpQXBJQ2s3Q2drSmRtVmpNeUJHWTJNZ1BTQkdYMU5qYUd4cFkyc29JRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRVl3TENCdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSR09UQXNJR1J2ZEU1V1kyTWdLVHNLQ1FsdmRYUm5iMmx1WjB4cFoyaDBJRDBnYjNWMFoyOXBibWRNYVdkb2RDQXFJQ2dnTVM0d0lDMGdiV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBJQ29nUm1OaklDa2dLeUJqYkdWaGNtTnZZWFJUY0dWamRXeGhjaUFxSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZERzS0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwUGdwOVlDd2dUbTBnUFNCZ0kyUmxabWx1WlNCVVQwOU9DblpoY25scGJtY2dkbVZqTXlCMlZtbGxkMUJ2YzJsMGFXOXVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4ZFhaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHgxZGpKZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4MWRqSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzVpWVhObFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrWldaaGRXeDBibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2wyVm1sbGQxQnZjMmwwYVc5dUlEMGdMU0J0ZGxCdmMybDBhVzl1TG5oNWVqc0tDU05wYm1Oc2RXUmxJRHgzYjNKc1pIQnZjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZkbVZ5ZEdWNFBncDlZQ3dnUW0wZ1BTQmdJMlJsWm1sdVpTQlVUMDlPQ25WdWFXWnZjbTBnZG1Wak15QmthV1ptZFhObE93cDFibWxtYjNKdElIWmxZek1nWlcxcGMzTnBkbVU3Q25WdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDaU5wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnZiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzFwYzNOcGRtVnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR2R5WVdScFpXNTBiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKelpHWnpQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JoY25OZlltVm5hVzQrQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3hmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOTBiMjl1WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0oxYlhCdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQmthV1ptZFhObExDQnZjR0ZqYVhSNUlDazdDZ2xTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBOUlGSmxabXhsWTNSbFpFeHBaMmgwS0NCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU0FwT3dvSmRtVmpNeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVZ1BTQmxiV2x6YzJsMlpUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NTTnBibU5zZFdSbElEeGxiV2x6YzJsMlpXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mZEc5dmJsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDJWdVpENEtDU05wYm1Oc2RXUmxJRHhoYjIxaGNGOW1jbUZuYldWdWRENEtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUhKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3lCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVTdDZ2tqYVc1amJIVmtaU0E4YjNWMGNIVjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z1WTI5a2FXNW5jMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Y0hKbGJYVnNkR2x3YkdsbFpGOWhiSEJvWVY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZabkpoWjIxbGJuUStDbjFnTENCNmJTQTlJR0IxYm1sbWIzSnRJR1pzYjJGMElITnBlbVU3Q25WdWFXWnZjbTBnWm14dllYUWdjMk5oYkdVN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZytDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NXZHNYMUJ2YVc1MFUybDZaU0E5SUhOcGVtVTdDZ2tqYVdaa1pXWWdWVk5GWDFOSldrVkJWRlJGVGxWQlZFbFBUZ29KQ1dKdmIyd2dhWE5RWlhKemNHVmpkR2wyWlNBOUlHbHpVR1Z5YzNCbFkzUnBkbVZOWVhSeWFYZ29JSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2dLVHNLQ1FscFppQW9JR2x6VUdWeWMzQmxZM1JwZG1VZ0tTQm5iRjlRYjJsdWRGTnBlbVVnS2owZ0tDQnpZMkZzWlNBdklDMGdiWFpRYjNOcGRHbHZiaTU2SUNrN0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHgzYjNKc1pIQnZjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S2ZXQXNJRlZ0SUQwZ1lIVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldGd1gzQmhjblJwWTJ4bFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pkbVZqTXlCdmRYUm5iMmx1WjB4cFoyaDBJRDBnZG1Wak15Z2dNQzR3SUNrN0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHRZWEJmY0dGeWRHbGpiR1ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgyWnlZV2R0Wlc1MFBnb0piM1YwWjI5cGJtZE1hV2RvZENBOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJN0Nna2phVzVqYkhWa1pTQThiM1YwY0hWMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhtYjJkZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThjSEpsYlhWc2RHbHdiR2xsWkY5aGJIQm9ZVjltY21GbmJXVnVkRDRLZldBc0lFOXRJRDBnWUNOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHVm1ZWFZzZEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGQyOXliR1J3YjNOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThabTluWDNabGNuUmxlRDRLZldBc0lFaHRJRDBnWUhWdWFXWnZjbTBnZG1Wak15QmpiMnh2Y2pzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4Y0dGamEybHVaejRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFluTmtabk0rQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0dGeWMxOWlaV2RwYmo0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGemExOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2xuYkY5R2NtRm5RMjlzYjNJZ1BTQjJaV00wS0NCamIyeHZjaXdnYjNCaFkybDBlU0FxSUNnZ01TNHdJQzBnWjJWMFUyaGhaRzkzVFdGemF5Z3BJQ2tnS1RzS0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdwOVlDd2dhMjBnUFNCZ2RXNXBabTl5YlNCbWJHOWhkQ0J5YjNSaGRHbHZianNLZFc1cFptOXliU0IyWldNeUlHTmxiblJsY2pzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4MWRsOTJaWEowWlhnK0NnbDJaV00wSUcxMlVHOXphWFJwYjI0Z1BTQnRiMlJsYkZacFpYZE5ZWFJ5YVhnZ0tpQjJaV00wS0NBd0xqQXNJREF1TUN3Z01DNHdMQ0F4TGpBZ0tUc0tDWFpsWXpJZ2MyTmhiR1U3Q2dselkyRnNaUzU0SUQwZ2JHVnVaM1JvS0NCMlpXTXpLQ0J0YjJSbGJFMWhkSEpwZUZzZ01DQmRMbmdzSUcxdlpHVnNUV0YwY21sNFd5QXdJRjB1ZVN3Z2JXOWtaV3hOWVhSeWFYaGJJREFnWFM1NklDa2dLVHNLQ1hOallXeGxMbmtnUFNCc1pXNW5kR2dvSUhabFl6TW9JRzF2WkdWc1RXRjBjbWw0V3lBeElGMHVlQ3dnYlc5a1pXeE5ZWFJ5YVhoYklERWdYUzU1TENCdGIyUmxiRTFoZEhKcGVGc2dNU0JkTG5vZ0tTQXBPd29KSTJsbWJtUmxaaUJWVTBWZlUwbGFSVUZVVkVWT1ZVRlVTVTlPQ2drSlltOXZiQ0JwYzFCbGNuTndaV04wYVhabElEMGdhWE5RWlhKemNHVmpkR2wyWlUxaGRISnBlQ2dnY0hKdmFtVmpkR2x2YmsxaGRISnBlQ0FwT3dvSkNXbG1JQ2dnYVhOUVpYSnpjR1ZqZEdsMlpTQXBJSE5qWVd4bElDbzlJQzBnYlhaUWIzTnBkR2x2Ymk1Nk93b0pJMlZ1WkdsbUNnbDJaV015SUdGc2FXZHVaV1JRYjNOcGRHbHZiaUE5SUNnZ2NHOXphWFJwYjI0dWVIa2dMU0FvSUdObGJuUmxjaUF0SUhabFl6SW9JREF1TlNBcElDa2dLU0FxSUhOallXeGxPd29KZG1Wak1pQnliM1JoZEdWa1VHOXphWFJwYjI0N0NnbHliM1JoZEdWa1VHOXphWFJwYjI0dWVDQTlJR052Y3lnZ2NtOTBZWFJwYjI0Z0tTQXFJR0ZzYVdkdVpXUlFiM05wZEdsdmJpNTRJQzBnYzJsdUtDQnliM1JoZEdsdmJpQXBJQ29nWVd4cFoyNWxaRkJ2YzJsMGFXOXVMbms3Q2dseWIzUmhkR1ZrVUc5emFYUnBiMjR1ZVNBOUlITnBiaWdnY205MFlYUnBiMjRnS1NBcUlHRnNhV2R1WldSUWIzTnBkR2x2Ymk1NElDc2dZMjl6S0NCeWIzUmhkR2x2YmlBcElDb2dZV3hwWjI1bFpGQnZjMmwwYVc5dUxuazdDZ2x0ZGxCdmMybDBhVzl1TG5oNUlDczlJSEp2ZEdGMFpXUlFiM05wZEdsdmJqc0tDV2RzWDFCdmMybDBhVzl1SUQwZ2NISnZhbVZqZEdsdmJrMWhkSEpwZUNBcUlHMTJVRzl6YVhScGIyNDdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUVkdElEMGdZSFZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOW1jbUZuYldWdWRENEtDVzkxZEdkdmFXNW5UR2xuYUhRZ1BTQmthV1ptZFhObFEyOXNiM0l1Y21kaU93b0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBncDlZQ3dnUm1VZ1BTQjdDaUFnSUNCaGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZERvZ2VHWXNDaUFnSUNCaGJIQm9ZVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUI1Wml3S0lDQWdJR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRG9nZG1Zc0NpQWdJQ0JoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWREb2dYMllzQ2lBZ0lDQmhiMjFoY0Y5bWNtRm5iV1Z1ZERvZ1RXWXNDaUFnSUNCaGIyMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQmlaaXdLSUNBZ0lHSmxaMmx1WDNabGNuUmxlRG9nZDJZc0NpQWdJQ0JpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGc2SUZObUxBb2dJQ0FnWW5Oa1puTTZJRlJtTEFvZ0lDQWdZblZ0Y0cxaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCRlppd0tJQ0FnSUdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRG9nUVdZc0NpQWdJQ0JqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1EyWXNDaUFnSUNCamJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnNklFeG1MQW9nSUNBZ1kyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRG9nVW1Zc0NpQWdJQ0JqYjJ4dmNsOW1jbUZuYldWdWREb2dVR1lzQ2lBZ0lDQmpiMnh2Y2w5d1lYSnpYMlp5WVdkdFpXNTBPaUJKWml3S0lDQWdJR052Ykc5eVgzQmhjbk5mZG1WeWRHVjRPaUJFWml3S0lDQWdJR052Ykc5eVgzWmxjblJsZURvZ1JtWXNDaUFnSUNCamIyMXRiMjQ2SUU1bUxBb2dJQ0FnWTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwT2lCQ1ppd0tJQ0FnSUdSbFptRjFiSFJ1YjNKdFlXeGZkbVZ5ZEdWNE9pQjZaaXdLSUNBZ0lHUnBjM0JzWVdObGJXVnVkRzFoY0Y5d1lYSnpYM1psY25SbGVEb2dWV1lzQ2lBZ0lDQmthWE53YkdGalpXMWxiblJ0WVhCZmRtVnlkR1Y0T2lCUFppd0tJQ0FnSUdWdGFYTnphWFpsYldGd1gyWnlZV2R0Wlc1ME9pQklaaXdLSUNBZ0lHVnRhWE56YVhabGJXRndYM0JoY25OZlpuSmhaMjFsYm5RNklHdG1MQW9nSUNBZ1pXNWpiMlJwYm1kelgyWnlZV2R0Wlc1ME9pQkhaaXdLSUNBZ0lHVnVZMjlrYVc1bmMxOXdZWEp6WDJaeVlXZHRaVzUwT2lCV1ppd0tJQ0FnSUdWdWRtMWhjRjltY21GbmJXVnVkRG9nVjJZc0NpQWdJQ0JsYm5adFlYQmZZMjl0Ylc5dVgzQmhjbk5mWm5KaFoyMWxiblE2SUhGbUxBb2dJQ0FnWlc1MmJXRndYM0JoY25OZlpuSmhaMjFsYm5RNklGaG1MQW9nSUNBZ1pXNTJiV0Z3WDNCaGNuTmZkbVZ5ZEdWNE9pQktaaXdLSUNBZ0lHVnVkbTFoY0Y5d2FIbHphV05oYkY5d1lYSnpYMlp5WVdkdFpXNTBPaUJ5Y0N3S0lDQWdJR1Z1ZG0xaGNGOTJaWEowWlhnNklGbG1MQW9nSUNBZ1ptOW5YM1psY25SbGVEb2dXbVlzQ2lBZ0lDQm1iMmRmY0dGeWMxOTJaWEowWlhnNklDUm1MQW9nSUNBZ1ptOW5YMlp5WVdkdFpXNTBPaUJxWml3S0lDQWdJR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBPaUJSWml3S0lDQWdJR2R5WVdScFpXNTBiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJRXRtTEFvZ0lDQWdiR2xuYUhSdFlYQmZabkpoWjIxbGJuUTZJR1Z3TEFvZ0lDQWdiR2xuYUhSdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2RIQXNDaUFnSUNCc2FXZG9kSE5mYkdGdFltVnlkRjkyWlhKMFpYZzZJRzV3TEFvZ0lDQWdiR2xuYUhSelgzQmhjbk5mWW1WbmFXNDZJR2x3TEFvZ0lDQWdiR2xuYUhSelgzUnZiMjVmWm5KaFoyMWxiblE2SUhOd0xBb2dJQ0FnYkdsbmFIUnpYM1J2YjI1ZmNHRnljMTltY21GbmJXVnVkRG9nYjNBc0NpQWdJQ0JzYVdkb2RITmZjR2h2Ym1kZlpuSmhaMjFsYm5RNklHRndMQW9nSUNBZ2JHbG5hSFJ6WDNCb2IyNW5YM0JoY25OZlpuSmhaMjFsYm5RNklHeHdMQW9nSUNBZ2JHbG5hSFJ6WDNCb2VYTnBZMkZzWDJaeVlXZHRaVzUwT2lCamNDd0tJQ0FnSUd4cFoyaDBjMTl3YUhsemFXTmhiRjl3WVhKelgyWnlZV2R0Wlc1ME9pQm9jQ3dLSUNBZ0lHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5aVpXZHBiam9nZFhBc0NpQWdJQ0JzYVdkb2RITmZabkpoWjIxbGJuUmZiV0Z3Y3pvZ1pIQXNDaUFnSUNCc2FXZG9kSE5mWm5KaFoyMWxiblJmWlc1a09pQm1jQ3dLSUNBZ0lHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBPaUJ3Y0N3S0lDQWdJR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUTZJRzF3TEFvZ0lDQWdiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnNklHZHdMQW9nSUNBZ2JHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNE9pQjRjQ3dLSUNBZ0lHMWhjRjltY21GbmJXVnVkRG9nZVhBc0NpQWdJQ0J0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nZG5Bc0NpQWdJQ0J0WVhCZmNHRnlkR2xqYkdWZlpuSmhaMjFsYm5RNklGOXdMQW9nSUNBZ2JXRndYM0JoY25ScFkyeGxYM0JoY25OZlpuSmhaMjFsYm5RNklFMXdMQW9nSUNBZ2JXVjBZV3h1WlhOemJXRndYMlp5WVdkdFpXNTBPaUJpY0N3S0lDQWdJRzFsZEdGc2JtVnpjMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUIzY0N3S0lDQWdJRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRG9nVTNBc0NpQWdJQ0J0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVEb2dWSEFzQ2lBZ0lDQnRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZzZJRVZ3TEFvZ0lDQWdibTl5YldGc1gyWnlZV2R0Wlc1MFgySmxaMmx1T2lCQmNDd0tJQ0FnSUc1dmNtMWhiRjltY21GbmJXVnVkRjl0WVhCek9pQkRjQ3dLSUNBZ0lHNXZjbTFoYkY5d1lYSnpYMlp5WVdkdFpXNTBPaUJNY0N3S0lDQWdJRzV2Y20xaGJGOXdZWEp6WDNabGNuUmxlRG9nVW5Bc0NpQWdJQ0J1YjNKdFlXeGZkbVZ5ZEdWNE9pQlFjQ3dLSUNBZ0lHNXZjbTFoYkcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCSmNDd0tJQ0FnSUdOc1pXRnlZMjloZEY5dWIzSnRZV3hmWm5KaFoyMWxiblJmWW1WbmFXNDZJRVJ3TEFvZ0lDQWdZMnhsWVhKamIyRjBYMjV2Y20xaGJGOW1jbUZuYldWdWRGOXRZWEJ6T2lCR2NDd0tJQ0FnSUdOc1pXRnlZMjloZEY5d1lYSnpYMlp5WVdkdFpXNTBPaUJPY0N3S0lDQWdJRzkxZEhCMWRGOW1jbUZuYldWdWREb2dRbkFzQ2lBZ0lDQndZV05yYVc1bk9pQjZjQ3dLSUNBZ0lIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUTZJRlZ3TEFvZ0lDQWdjSEp2YW1WamRGOTJaWEowWlhnNklFOXdMQW9nSUNBZ1pHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1ME9pQkljQ3dLSUNBZ0lHUnBkR2hsY21sdVoxOXdZWEp6WDJaeVlXZHRaVzUwT2lCcmNDd0tJQ0FnSUhKdmRXZG9ibVZ6YzIxaGNGOW1jbUZuYldWdWREb2dSM0FzQ2lBZ0lDQnliM1ZuYUc1bGMzTnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dWbkFzQ2lBZ0lDQnphR0ZrYjNkdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1YzQXNDaUFnSUNCemFHRmtiM2R0WVhCZmNHRnljMTkyWlhKMFpYZzZJSEZ3TEFvZ0lDQWdjMmhoWkc5M2JXRndYM1psY25SbGVEb2dXSEFzQ2lBZ0lDQnphR0ZrYjNkdFlYTnJYM0JoY25OZlpuSmhaMjFsYm5RNklFcHdMQW9nSUNBZ2MydHBibUpoYzJWZmRtVnlkR1Y0T2lCWmNDd0tJQ0FnSUhOcmFXNXVhVzVuWDNCaGNuTmZkbVZ5ZEdWNE9pQmFjQ3dLSUNBZ0lITnJhVzV1YVc1blgzWmxjblJsZURvZ0pIQXNDaUFnSUNCemEybHVibTl5YldGc1gzWmxjblJsZURvZ2FuQXNDaUFnSUNCemNHVmpkV3hoY20xaGNGOW1jbUZuYldWdWREb2dVWEFzQ2lBZ0lDQnpjR1ZqZFd4aGNtMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQkxjQ3dLSUNBZ0lIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBPaUJsYlN3S0lDQWdJSFJ2Ym1WdFlYQndhVzVuWDNCaGNuTmZabkpoWjIxbGJuUTZJSFJ0TEFvZ0lDQWdkSEpoYm5OdGFYTnphVzl1WDJaeVlXZHRaVzUwT2lCdWJTd0tJQ0FnSUhSeVlXNXpiV2x6YzJsdmJsOXdZWEp6WDJaeVlXZHRaVzUwT2lCcGJTd0tJQ0FnSUhWMlgzQmhjbk5mWm5KaFoyMWxiblE2SUhKdExBb2dJQ0FnZFhaZmNHRnljMTkyWlhKMFpYZzZJSE50TEFvZ0lDQWdkWFpmZG1WeWRHVjRPaUJ2YlN3S0lDQWdJSFYyTWw5d1lYSnpYMlp5WVdkdFpXNTBPaUJoYlN3S0lDQWdJSFYyTWw5d1lYSnpYM1psY25SbGVEb2diRzBzQ2lBZ0lDQjFkakpmZG1WeWRHVjRPaUJqYlN3S0lDQWdJSGR2Y214a2NHOXpYM1psY25SbGVEb2dhRzBzQ2lBZ0lDQmlZV05yWjNKdmRXNWtYM1psY25RNklIVnRMQW9nSUNBZ1ltRmphMmR5YjNWdVpGOW1jbUZuT2lCa2JTd0tJQ0FnSUdOMVltVmZkbVZ5ZERvZ1ptMHNDaUFnSUNCamRXSmxYMlp5WVdjNklIQnRMQW9nSUNBZ1pHVndkR2hmZG1WeWREb2diVzBzQ2lBZ0lDQmtaWEIwYUY5bWNtRm5PaUJuYlN3S0lDQWdJR1JwYzNSaGJtTmxVa2RDUVY5MlpYSjBPaUI0YlN3S0lDQWdJR1JwYzNSaGJtTmxVa2RDUVY5bWNtRm5PaUI1YlN3S0lDQWdJR1Z4ZFdseVpXTjBYM1psY25RNklIWnRMQW9nSUNBZ1pYRjFhWEpsWTNSZlpuSmhaem9nWDIwc0NpQWdJQ0JzYVc1bFpHRnphR1ZrWDNabGNuUTZJRTF0TEFvZ0lDQWdiR2x1WldSaGMyaGxaRjltY21Gbk9pQmliU3dLSUNBZ0lHMWxjMmhpWVhOcFkxOTJaWEowT2lCM2JTd0tJQ0FnSUcxbGMyaGlZWE5wWTE5bWNtRm5PaUJUYlN3S0lDQWdJRzFsYzJoc1lXMWlaWEowWDNabGNuUTZJRlJ0TEFvZ0lDQWdiV1Z6YUd4aGJXSmxjblJmWm5KaFp6b2dSVzBzQ2lBZ0lDQnRaWE5vYldGMFkyRndYM1psY25RNklFRnRMQW9nSUNBZ2JXVnphRzFoZEdOaGNGOW1jbUZuT2lCRGJTd0tJQ0FnSUcxbGMyaHViM0p0WVd4ZmRtVnlkRG9nVEcwc0NpQWdJQ0J0WlhOb2JtOXliV0ZzWDJaeVlXYzZJRkp0TEFvZ0lDQWdiV1Z6YUhCb2IyNW5YM1psY25RNklGQnRMQW9nSUNBZ2JXVnphSEJvYjI1blgyWnlZV2M2SUVsdExBb2dJQ0FnYldWemFIQm9lWE5wWTJGc1gzWmxjblE2SUVSdExBb2dJQ0FnYldWemFIQm9lWE5wWTJGc1gyWnlZV2M2SUVadExBb2dJQ0FnYldWemFIUnZiMjVmZG1WeWREb2dUbTBzQ2lBZ0lDQnRaWE5vZEc5dmJsOW1jbUZuT2lCQ2JTd0tJQ0FnSUhCdmFXNTBjMTkyWlhKME9pQjZiU3dLSUNBZ0lIQnZhVzUwYzE5bWNtRm5PaUJWYlN3S0lDQWdJSE5vWVdSdmQxOTJaWEowT2lCUGJTd0tJQ0FnSUhOb1lXUnZkMTltY21Gbk9pQkliU3dLSUNBZ0lITndjbWwwWlY5MlpYSjBPaUJyYlN3S0lDQWdJSE53Y21sMFpWOW1jbUZuT2lCSGJRcDlMQ0JwWlNBOUlIc0tJQ0FnSUdOdmJXMXZiam9nZXdvZ0lDQWdJQ0FnSUdScFptWjFjMlU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNneE5qYzNOekl4TlNrS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHOXdZV05wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUcxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkWFpVY21GdWMyWnZjbTA2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJzZEFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2RYWXlWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2diSFFLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdGc2NHaGhUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaGJIQm9ZVlJsYzNRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MzQmxZM1ZzWVhKdFlYQTZJSHNLSUNBZ0lDQWdJQ0J6Y0dWamRXeGhjazFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQmxiblp0WVhBNklIc0tJQ0FnSUNBZ0lDQmxiblpOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHWnNhWEJGYm5aTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUMweENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnlaV1pzWldOMGFYWnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR2x2Y2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUzQxQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCeVpXWnlZV04wYVc5dVVtRjBhVzg2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklDNDVPQW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCaGIyMWhjRG9nZXdvZ0lDQWdJQ0FnSUdGdlRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYjAxaGNFbHVkR1Z1YzJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnNhV2RvZEcxaGNEb2dld29nSUNBZ0lDQWdJR3hwWjJoMFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JzYVdkb2RFMWhjRWx1ZEdWdWMybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JsYldsemMybDJaVzFoY0RvZ2V3b2dJQ0FnSUNBZ0lHVnRhWE56YVhabFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdKMWJYQnRZWEE2SUhzS0lDQWdJQ0FnSUNCaWRXMXdUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaWRXMXdVMk5oYkdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2JtOXliV0ZzYldGd09pQjdDaUFnSUNBZ0lDQWdibTl5YldGc1RXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J1YjNKdFlXeFRZMkZzWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUZnb01Td2dNU2tLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1pHbHpjR3hoWTJWdFpXNTBiV0Z3T2lCN0NpQWdJQ0FnSUNBZ1pHbHpjR3hoWTJWdFpXNTBUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCa2FYTndiR0ZqWlcxbGJuUlRZMkZzWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWkdsemNHeGhZMlZ0Wlc1MFFtbGhjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J5YjNWbmFHNWxjM050WVhBNklIc0tJQ0FnSUNBZ0lDQnliM1ZuYUc1bGMzTk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2JXVjBZV3h1WlhOemJXRndPaUI3Q2lBZ0lDQWdJQ0FnYldWMFlXeHVaWE56VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR2R5WVdScFpXNTBiV0Z3T2lCN0NpQWdJQ0FnSUNBZ1ozSmhaR2xsYm5STllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWm05bk9pQjdDaUFnSUNBZ0lDQWdabTluUkdWdWMybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01qVmxMVFVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdadlowNWxZWEk2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1p2WjBaaGNqb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTW1VekNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm1iMmREYjJ4dmNqb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREUyTnpjM01qRTFLUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCc2FXZG9kSE02SUhzS0lDQWdJQ0FnSUNCaGJXSnBaVzUwVEdsbmFIUkRiMnh2Y2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUd4cFoyaDBVSEp2WW1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJFeHBaMmgwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliM0JsY25ScFpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZTMwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmQzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNVbUZrYVhWek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRk5wZW1VNklIdDlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWFJ5YVhnNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCemNHOTBUR2xuYUhSek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJtVkRiM002SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHVnVkVzFpY21GRGIzTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWallYazZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE53YjNSTWFXZG9kRk5vWVdSdmQzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNVbUZrYVhWek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRk5wZW1VNklIdDlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITndiM1JUYUdGa2IzZE5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6Y0c5MFUyaGhaRzkzVFdGMGNtbDRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjRzlwYm5STWFXZG9kSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldOaGVUb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nZTMwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUk1hV2RvZEZOb1lXUnZkM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkQ2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZOcGVtVTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNRMkZ0WlhKaFRtVmhjam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2REWVcxbGNtRkdZWEk2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhCdmFXNTBVMmhoWkc5M1RXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjRzlwYm5SVGFHRmtiM2ROWVhSeWFYZzZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm9aVzFwYzNCb1pYSmxUR2xuYUhSek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRHbGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnJlVU52Ykc5eU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2R5YjNWdVpFTnZiRzl5T2lCN2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCeVpXTjBRWEpsWVV4cFoyaDBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMHNDaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzQmxjblJwWlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dlMzBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdiSFJqWHpFNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHeDBZMTh5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lIQnZhVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lHUnBabVoxYzJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJRzl3WVdOcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITnBlbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5qWVd4bE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdFlYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR0ZzY0doaFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYkhCb1lWUmxjM1E2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFYyVkhKaGJuTm1iM0p0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnYkhRS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjM0J5YVhSbE9pQjdDaUFnSUNBZ0lDQWdaR2xtWm5WelpUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREUyTnpjM01qRTFLUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZMlZ1ZEdWeU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1dDZ3VOU3dnTGpVcENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnliM1JoZEdsdmJqb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTUFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2JXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYkhCb1lVMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVd4d2FHRlVaWE4wT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0IxZGxSeVlXNXpabTl5YlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUd4MENpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUxDQnhkQ0E5SUhzS0lDQWdJR0poYzJsak9pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WTI5dGJXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXpjR1ZqZFd4aGNtMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaVzUyYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1aGIyMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXViR2xuYUhSdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtWnZad29nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YldWemFHSmhjMmxqWDNabGNuUXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklFWmxMbTFsYzJoaVlYTnBZMTltY21GbkNpQWdJQ0I5TEFvZ0lDQWdiR0Z0WW1WeWREb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVjM0JsWTNWc1lYSnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVZ1ZG0xaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVlXOXRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbXhwWjJoMGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWxiV2x6YzJsMlpXMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVabTluTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVzYVdkb2RITXNDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdGFYTnphWFpsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNnd0tRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1dFpYTm9iR0Z0WW1WeWRGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1dFpYTm9iR0Z0WW1WeWRGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ2NHaHZibWM2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2VYUW9Xd29nSUNBZ0lDQWdJQ0FnSUNCcFpTNWpiMjF0YjI0c0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG5Od1pXTjFiR0Z5YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bGJuWnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbUZ2YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1c2FXZG9kRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WlcxcGMzTnBkbVZ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1KMWJYQnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbTV2Y20xaGJHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaR2x6Y0d4aFkyVnRaVzUwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY3NDaUFnSUNBZ0lDQWdJQ0FnSUdsbExteHBaMmgwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzFwYzNOcGRtVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREFwQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNCbFkzVnNZWEk2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR0ZsS0RFeE1UZzBPREVwQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJocGJtbHVaWE56T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklETXdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExtMWxjMmh3YUc5dVoxOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1dFpYTm9jR2h2Ym1kZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUhOMFlXNWtZWEprT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bGJuWnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbUZ2YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1c2FXZG9kRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WlcxcGMzTnBkbVZ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1KMWJYQnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbTV2Y20xaGJHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaR2x6Y0d4aFkyVnRaVzUwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1eWIzVm5hRzVsYzNOdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtMWxkR0ZzYm1WemMyMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVabTluTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVzYVdkb2RITXNDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdGFYTnphWFpsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNnd0tRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISnZkV2RvYm1WemN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldWMFlXeHVaWE56T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiblpOWVhCSmJuUmxibk5wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXRaWE5vY0doNWMybGpZV3hmZG1WeWRDd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXViV1Z6YUhCb2VYTnBZMkZzWDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0IwYjI5dU9pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WTI5dGJXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWhiMjFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVZ0YVhOemFYWmxiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVpZFcxd2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXViM0p0WVd4dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtUnBjM0JzWVdObGJXVnVkRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WjNKaFpHbGxiblJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1adlp5d0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJHbG5hSFJ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiV2x6YzJsMlpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1lXVW9NQ2tLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXViV1Z6YUhSdmIyNWZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphSFJ2YjI1ZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUcxaGRHTmhjRG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtTnZiVzF2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WW5WdGNHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVibTl5YldGc2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWthWE53YkdGalpXMWxiblJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1adlp5d0tJQ0FnSUNBZ0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGMFkyRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWJXVnphRzFoZEdOaGNGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1dFpYTm9iV0YwWTJGd1gyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCd2IybHVkSE02SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2VYUW9Xd29nSUNBZ0lDQWdJQ0FnSUNCcFpTNXdiMmx1ZEhNc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1adlp3b2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXVjRzlwYm5SelgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJRVpsTG5CdmFXNTBjMTltY21GbkNpQWdJQ0I5TEFvZ0lDQWdaR0Z6YUdWa09pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WTI5dGJXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNW1iMmNzQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpZV3hsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWE5vVTJsNlpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEc5MFlXeFRhWHBsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklESUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWJHbHVaV1JoYzJobFpGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1c2FXNWxaR0Z6YUdWa1gyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCa1pYQjBhRG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtTnZiVzF2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WkdsemNHeGhZMlZ0Wlc1MGJXRndDaUFnSUNBZ0lDQWdYU2tzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzVrWlhCMGFGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1a1pYQjBhRjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdibTl5YldGc09pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WTI5dGJXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWlkVzF3YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1dWIzSnRZV3h0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1ScGMzQnNZV05sYldWdWRHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExtMWxjMmh1YjNKdFlXeGZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphRzV2Y20xaGJGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ2MzQnlhWFJsT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVjM0J5YVhSbExBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY0tJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbk53Y21sMFpWOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1emNISnBkR1ZmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJR0poWTJ0bmNtOTFibVE2SUhzS0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IxZGxSeVlXNXpabTl5YlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QnNkQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwTWtRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdVltRmphMmR5YjNWdVpGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1aVlXTnJaM0p2ZFc1a1gyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCamRXSmxPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXNTJiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXVZM1ZpWlY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzVqZFdKbFgyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCbGNYVnBjbVZqZERvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSRmNYVnBjbVZqZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1bGNYVnBjbVZqZEY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzVsY1hWcGNtVmpkRjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdaR2x6ZEdGdVkyVlNSMEpCT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1a2FYTndiR0ZqWlcxbGJuUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxabVZ5Wlc1alpWQnZjMmwwYVc5dU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCTkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVmhja1JwYzNSaGJtTmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVlYSkVhWE4wWVc1alpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4WlRNS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1WkdsemRHRnVZMlZTUjBKQlgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJRVpsTG1ScGMzUmhibU5sVWtkQ1FWOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXViR2xuYUhSekxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY3NDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d3S1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1emFHRmtiM2RmZG1WeWRDd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXVjMmhoWkc5M1gyWnlZV2NLSUNBZ0lIMEtmVHNLY1hRdWNHaDVjMmxqWVd3Z1BTQjdDaUFnSUNCMWJtbG1iM0p0Y3pvZ2VYUW9Xd29nSUNBZ0lDQWdJSEYwTG5OMFlXNWtZWEprTG5WdWFXWnZjbTF6TEFvZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRkp2ZFdkb2JtVnpjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QllLREVzSURFcENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVEyOXNiM0k2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1lXVW9NQ2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNURiMnh2Y2sxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNVNiM1ZuYUc1bGMzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVVtOTFaMmh1WlhOelRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMjFwYzNOcGIyNDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emJXbHpjMmx2YmsxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTnRhWE56YVc5dVUyRnRjR3hsY2xOcGVtVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnV0FvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMjFwYzNOcGIyNVRZVzF3YkdWeVRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHbGphMjVsYzNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hV05yYm1WemMwMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZWFIwWlc1MVlYUnBiMjVEYjJ4dmNqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNnd0tRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVEyOXNiM0k2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1lXVW9NU3dnTVN3Z01Ta0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjM0JsWTNWc1lYSkRiMnh2Y2sxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUYwcExBb2dJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzV0WlhOb2NHaDVjMmxqWVd4ZmRtVnlkQ3dLSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXRaWE5vY0doNWMybGpZV3hmWm5KaFp3cDlPd3BtZFc1amRHbHZiaUJXYlNoekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnNaWFFnY2lBOUlHNWxkeUJoWlNnd0tTd2dieUE5SURBc0lHRXNJR3dzSUdNZ1BTQnVkV3hzTENCb0lEMGdNQ3dnZFNBOUlHNTFiR3c3Q2lBZ0lDQm1kVzVqZEdsdmJpQmtLRzBzSUhncElIc0tJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlDRXhMQ0JuSUQwZ2VDNXBjMU5qWlc1bElEMDlQU0FoTUNBL0lIZ3VZbUZqYTJkeWIzVnVaQ0E2SUc1MWJHdzdDaUFnSUNBZ0lDQWdaeUFtSmlCbkxtbHpWR1Y0ZEhWeVpTQW1KaUFvWnlBOUlHVXVaMlYwS0djcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlITXVlSElzSUY4Z1BTQndMbWRsZEZObGMzTnBiMjRnSmlZZ2NDNW5aWFJUWlhOemFXOXVLQ2s3Q2lBZ0lDQWdJQ0FnWHlBbUppQmZMbVZ1ZG1seWIyNXRaVzUwUW14bGJtUk5iMlJsSUQwOVBTQWlZV1JrYVhScGRtVWlJQ1ltSUNobklEMGdiblZzYkNrc0lHY2dQVDA5SUc1MWJHd2dQeUJtS0hJc0lHOHBJRG9nWnlBbUppQm5MbWx6UTI5c2IzSWdKaVlnS0dZb1p5d2dNU2tzSUhZZ1BTQWhNQ2tzSUNoekxtRjFkRzlEYkdWaGNpQjhmQ0IyS1NBbUppQnpMbU5zWldGeUtITXVZWFYwYjBOc1pXRnlRMjlzYjNJc0lITXVZWFYwYjBOc1pXRnlSR1Z3ZEdnc0lITXVZWFYwYjBOc1pXRnlVM1JsYm1OcGJDa3NJR2NnSmlZZ0tHY3VhWE5EZFdKbFZHVjRkSFZ5WlNCOGZDQm5MbTFoY0hCcGJtY2dQVDA5SUZCeUtTQS9JQ2hzSUQwOVBTQjJiMmxrSURBZ0ppWWdLR3dnUFNCdVpYY2djM1FvYm1WM0lIZHVLREVzSURFc0lERXBMQ0J1WlhjZ2MyNG9ld29nSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUFpUW1GamEyZHliM1Z1WkVOMVltVk5ZWFJsY21saGJDSXNDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCU2FTaHhkQzVqZFdKbExuVnVhV1p2Y20xektTd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQnhkQzVqZFdKbExuWmxjblJsZUZOb1lXUmxjaXdLSUNBZ0lDQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUhGMExtTjFZbVV1Wm5KaFoyMWxiblJUYUdGa1pYSXNDaUFnSUNBZ0lDQWdJQ0FnSUhOcFpHVTZJR2wwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZSbGMzUTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZkeWFYUmxPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdabTluT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnYkM1blpXOXRaWFJ5ZVM1a1pXeGxkR1ZCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lwTENCc0xtZGxiMjFsZEhKNUxtUmxiR1YwWlVGMGRISnBZblYwWlNnaWRYWWlLU3dnYkM1dmJrSmxabTl5WlZKbGJtUmxjaUE5SUdaMWJtTjBhVzl1S0hrc0lHSXNJRUVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNWpiM0I1VUc5emFYUnBiMjRvUVM1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdmU3dnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtHd3ViV0YwWlhKcFlXd3NJQ0psYm5aTllYQWlMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTFibWxtYjNKdGN5NWxiblpOWVhBdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLU3dnYmk1MWNHUmhkR1VvYkNrcExDQnNMbTFoZEdWeWFXRnNMblZ1YVdadmNtMXpMbVZ1ZGsxaGNDNTJZV3gxWlNBOUlHY3NJR3d1YldGMFpYSnBZV3d1ZFc1cFptOXliWE11Wm14cGNFVnVkazFoY0M1MllXeDFaU0E5SUdjdWFYTkRkV0psVkdWNGRIVnlaU0FtSmlCbkxtbHpVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaU0E5UFQwZ0lURWdQeUF0TVNBNklERXNJQ2hqSUNFOVBTQm5JSHg4SUdnZ0lUMDlJR2N1ZG1WeWMybHZiaUI4ZkNCMUlDRTlQU0J6TG5SdmJtVk5ZWEJ3YVc1bktTQW1KaUFvYkM1dFlYUmxjbWxoYkM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCaklEMGdaeXdnYUNBOUlHY3VkbVZ5YzJsdmJpd2dkU0E5SUhNdWRHOXVaVTFoY0hCcGJtY3BMQ0J0TG5WdWMyaHBablFvYkN3Z2JDNW5aVzl0WlhSeWVTd2diQzV0WVhSbGNtbGhiQ3dnTUN3Z01Dd2diblZzYkNrcElEb2daeUFtSmlCbkxtbHpWR1Y0ZEhWeVpTQW1KaUFvWVNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hoSUQwZ2JtVjNJSE4wS0c1bGR5QlFhU2d5TENBeUtTd2dibVYzSUhOdUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dJa0poWTJ0bmNtOTFibVJOWVhSbGNtbGhiQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQlNhU2h4ZEM1aVlXTnJaM0p2ZFc1a0xuVnVhV1p2Y20xektTd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQnhkQzVpWVdOclozSnZkVzVrTG5abGNuUmxlRk5vWVdSbGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJSEYwTG1KaFkydG5jbTkxYm1RdVpuSmhaMjFsYm5SVGFHRmtaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lITnBaR1U2SUVGcExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFGUmxjM1E2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhNUW9nSUNBZ0lDQWdJSDBwS1N3Z1lTNW5aVzl0WlhSeWVTNWtaV3hsZEdWQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJcExDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvWVM1dFlYUmxjbWxoYkN3Z0ltMWhjQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblZ1YVdadmNtMXpMblF5UkM1MllXeDFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHBMQ0J1TG5Wd1pHRjBaU2hoS1Nrc0lHRXViV0YwWlhKcFlXd3VkVzVwWm05eWJYTXVkREpFTG5aaGJIVmxJRDBnWnl3Z1p5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMDlQU0FoTUNBbUppQm5MblZ3WkdGMFpVMWhkSEpwZUNncExDQmhMbTFoZEdWeWFXRnNMblZ1YVdadmNtMXpMblYyVkhKaGJuTm1iM0p0TG5aaGJIVmxMbU52Y0hrb1p5NXRZWFJ5YVhncExDQW9ZeUFoUFQwZ1p5QjhmQ0JvSUNFOVBTQm5MblpsY25OcGIyNGdmSHdnZFNBaFBUMGdjeTUwYjI1bFRXRndjR2x1WnlrZ0ppWWdLR0V1YldGMFpYSnBZV3d1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnWXlBOUlHY3NJR2dnUFNCbkxuWmxjbk5wYjI0c0lIVWdQU0J6TG5SdmJtVk5ZWEJ3YVc1bktTd2diUzUxYm5Ob2FXWjBLR0VzSUdFdVoyVnZiV1YwY25rc0lHRXViV0YwWlhKcFlXd3NJREFzSURBc0lHNTFiR3dwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHWW9iU3dnZUNrZ2V3b2dJQ0FnSUNBZ0lIUXVZblZtWm1WeWN5NWpiMnh2Y2k1elpYUkRiR1ZoY2lodExuSXNJRzB1Wnl3Z2JTNWlMQ0I0TENCcEtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwUTJ4bFlYSkRiMnh2Y2pvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBRMnhsWVhKRGIyeHZjam9nWm5WdVkzUnBiMjRvYlN3Z2VDQTlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaTV6WlhRb2JTa3NJRzhnUFNCNExDQm1LSElzSUc4cE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdaMlYwUTJ4bFlYSkJiSEJvWVRvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBRMnhsWVhKQmJIQm9ZVG9nWm5WdVkzUnBiMjRvYlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JTd2daaWh5TENCdktUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSEpsYm1SbGNqb2daQW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJYYlNoekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUhNdVoyVjBVR0Z5WVcxbGRHVnlLRE0wT1RJeEtTd2djaUE5SUc0dWFYTlhaV0pIVERJZ1B5QnVkV3hzSURvZ1pTNW5aWFFvSWs5RlUxOTJaWEowWlhoZllYSnlZWGxmYjJKcVpXTjBJaWtzSUc4Z1BTQnVMbWx6VjJWaVIwd3lJSHg4SUhJZ0lUMDlJRzUxYkd3c0lHRWdQU0I3ZlN3Z2JDQTlJSGdvYm5Wc2JDa3NJR01nUFNCc093b2dJQ0FnWm5WdVkzUnBiMjRnYUNoRkxDQkVMQ0JWTENCR0xDQlBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNWxJRDBnSVRFN0NpQWdJQ0FnSUNBZ2FXWWdLRzhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdObElEMGdiU2hHTENCVkxDQkVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1l5QWhQVDBnWTJVZ0ppWWdLR01nUFNCalpTd2daQ2hqTG05aWFtVmpkQ2twTENCdVpTQTlJSFlvUml3Z1R5a3NJRzVsSUNZbUlHY29SaXdnVHlrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdObE1TQTlJRVF1ZDJseVpXWnlZVzFsSUQwOVBTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0tHTXVaMlZ2YldWMGNua2dJVDA5SUVZdWFXUWdmSHdnWXk1d2NtOW5jbUZ0SUNFOVBTQlZMbWxrSUh4OElHTXVkMmx5WldaeVlXMWxJQ0U5UFNCalpURXBJQ1ltSUNoakxtZGxiMjFsZEhKNUlEMGdSaTVwWkN3Z1l5NXdjbTluY21GdElEMGdWUzVwWkN3Z1l5NTNhWEpsWm5KaGJXVWdQU0JqWlRFc0lHNWxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQkZMbWx6U1c1emRHRnVZMlZrVFdWemFDQTlQVDBnSVRBZ0ppWWdLRzVsSUQwZ0lUQXBMQ0JQSUNFOVBTQnVkV3hzSUNZbUlIUXVkWEJrWVhSbEtFOHNJRE0wT1RZektTd2dibVVnSmlZZ0tFd29SU3dnUkN3Z1ZTd2dSaWtzSUU4Z0lUMDlJRzUxYkd3Z0ppWWdjeTVpYVc1a1FuVm1abVZ5S0RNME9UWXpMQ0IwTG1kbGRDaFBLUzVpZFdabVpYSXBLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVhWE5YWldKSFRESWdQeUJ6TG1OeVpXRjBaVlpsY25SbGVFRnljbUY1S0NrZ09pQnlMbU55WldGMFpWWmxjblJsZUVGeWNtRjVUMFZUS0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmtLRVVwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1cGMxZGxZa2RNTWlBL0lITXVZbWx1WkZabGNuUmxlRUZ5Y21GNUtFVXBJRG9nY2k1aWFXNWtWbVZ5ZEdWNFFYSnlZWGxQUlZNb1JTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJtS0VVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXBjMWRsWWtkTU1pQS9JSE11WkdWc1pYUmxWbVZ5ZEdWNFFYSnlZWGtvUlNrZ09pQnlMbVJsYkdWMFpWWmxjblJsZUVGeWNtRjVUMFZUS0VVcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiU2hGTENCRUxDQlZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFWWdQU0JWTG5kcGNtVm1jbUZ0WlNBOVBUMGdJVEFzSUU4Z1BTQmhXMFV1YVdSZE93b2dJQ0FnSUNBZ0lFOGdQVDA5SUhadmFXUWdNQ0FtSmlBb1R5QTlJSHQ5TENCaFcwVXVhV1JkSUQwZ1R5azdDaUFnSUNBZ0lDQWdiR1YwSUc1bElEMGdUMXRFTG1sa1hUc0tJQ0FnSUNBZ0lDQnVaU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaHVaU0E5SUh0OUxDQlBXMFF1YVdSZElEMGdibVVwT3dvZ0lDQWdJQ0FnSUd4bGRDQmpaU0E5SUc1bFcwWmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpaU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGpaU0E5SUhnb2RTZ3BLU3dnYm1WYlJsMGdQU0JqWlNrc0lHTmxPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZUNoRktTQjdDaUFnSUNBZ0lDQWdiR1YwSUVRZ1BTQmJYU3dnVlNBOUlGdGRMQ0JHSUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlBJRDBnTURzZ1R5QThJR2s3SUU4ckt5bEVXMDlkSUQwZ01Dd2dWVnRQWFNBOUlEQXNJRVpiVDEwZ1BTQXdPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUdkbGIyMWxkSEo1T2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOW5jbUZ0T2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FYSmxabkpoYldVNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYZEJkSFJ5YVdKMWRHVnpPaUJFTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxibUZpYkdWa1FYUjBjbWxpZFhSbGN6b2dWU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjbWxpZFhSbFJHbDJhWE52Y25NNklFWXNDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nUlN3S0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY21saWRYUmxjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIWW9SU3dnUkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ1l5NWhkSFJ5YVdKMWRHVnpMQ0JHSUQwZ1JTNWhkSFJ5YVdKMWRHVnpMQ0JQSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNWxJR2x1SUVZcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1kyVWdQU0JWVzI1bFhTd2dWaUE5SUVaYmJtVmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZMlVnUFQwOUlIWnZhV1FnTUNCOGZDQmpaUzVoZEhSeWFXSjFkR1VnSVQwOUlGWWdmSHdnWTJVdVpHRjBZU0FoUFQwZ1ZpNWtZWFJoS1NCeVpYUjFjbTRnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJRThyS3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNdVlYUjBjbWxpZFhSbGMwNTFiU0FoUFQwZ1R5QjhmQ0JqTG1sdVpHVjRJQ0U5UFNCRU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaeWhGTENCRUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZVZ1BTQjdmU3dnUmlBOUlFVXVZWFIwY21saWRYUmxjeXdnVHlBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVaU0JwYmlCR0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTmxJRDBnUmx0dVpWMHNJRllnUFNCN2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnVmk1aGRIUnlhV0oxZEdVZ1BTQmpaU3dnWTJVdVpHRjBZU0FtSmlBb1ZpNWtZWFJoSUQwZ1kyVXVaR0YwWVNrc0lGVmJibVZkSUQwZ1Zpd2dUeXNyT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCakxtRjBkSEpwWW5WMFpYTWdQU0JWTENCakxtRjBkSEpwWW5WMFpYTk9kVzBnUFNCUExDQmpMbWx1WkdWNElEMGdSRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhBb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUVVZ1BTQmpMbTVsZDBGMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCRUlEMGdNQ3dnVlNBOUlFVXViR1Z1WjNSb095QkVJRHdnVlRzZ1JDc3JLVVZiUkYwZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWHloRktTQjdDaUFnSUNBZ0lDQWdlU2hGTENBd0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGtvUlN3Z1JDa2dld29nSUNBZ0lDQWdJR3hsZENCVklEMGdZeTV1WlhkQmRIUnlhV0oxZEdWekxDQkdJRDBnWXk1bGJtRmliR1ZrUVhSMGNtbGlkWFJsY3l3Z1R5QTlJR011WVhSMGNtbGlkWFJsUkdsMmFYTnZjbk03Q2lBZ0lDQWdJQ0FnVlZ0RlhTQTlJREVzSUVaYlJWMGdQVDA5SURBZ0ppWWdLSE11Wlc1aFlteGxWbVZ5ZEdWNFFYUjBjbWxpUVhKeVlYa29SU2tzSUVaYlJWMGdQU0F4S1N3Z1QxdEZYU0FoUFQwZ1JDQW1KaUFvS0c0dWFYTlhaV0pIVERJZ1B5QnpJRG9nWlM1blpYUW9Ja0ZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNaUtTbGJiaTVwYzFkbFlrZE1NaUEvSUNKMlpYSjBaWGhCZEhSeWFXSkVhWFpwYzI5eUlpQTZJQ0oyWlhKMFpYaEJkSFJ5YVdKRWFYWnBjMjl5UVU1SFRFVWlYU2hGTENCRUtTd2dUMXRGWFNBOUlFUXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWWlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlHTXVibVYzUVhSMGNtbGlkWFJsY3l3Z1JDQTlJR011Wlc1aFlteGxaRUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JWSUQwZ01Dd2dSaUE5SUVRdWJHVnVaM1JvT3lCVklEd2dSanNnVlNzcktVUmJWVjBnSVQwOUlFVmJWVjBnSmlZZ0tITXVaR2x6WVdKc1pWWmxjblJsZUVGMGRISnBZa0Z5Y21GNUtGVXBMQ0JFVzFWZElEMGdNQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCQktFVXNJRVFzSUZVc0lFWXNJRThzSUc1bEtTQjdDaUFnSUNBZ0lDQWdiaTVwYzFkbFlrZE1NaUE5UFQwZ0lUQWdKaVlnS0ZVZ1BUMDlJRFV4TWpRZ2ZId2dWU0E5UFQwZ05URXlOU2tnUHlCekxuWmxjblJsZUVGMGRISnBZa2xRYjJsdWRHVnlLRVVzSUVRc0lGVXNJRThzSUc1bEtTQTZJSE11ZG1WeWRHVjRRWFIwY21saVVHOXBiblJsY2loRkxDQkVMQ0JWTENCR0xDQlBMQ0J1WlNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQk1LRVVzSUVRc0lGVXNJRVlwSUhzS0lDQWdJQ0FnSUNCcFppQW9iaTVwYzFkbFlrZE1NaUE5UFQwZ0lURWdKaVlnS0VVdWFYTkpibk4wWVc1alpXUk5aWE5vSUh4OElFWXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVTa2dKaVlnWlM1blpYUW9Ja0ZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNaUtTQTlQVDBnYm5Wc2JDa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lIQW9LVHNLSUNBZ0lDQWdJQ0JzWlhRZ1R5QTlJRVl1WVhSMGNtbGlkWFJsY3l3Z2JtVWdQU0JWTG1kbGRFRjBkSEpwWW5WMFpYTW9LU3dnWTJVZ1BTQkVMbVJsWm1GMWJIUkJkSFJ5YVdKMWRHVldZV3gxWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCV0lHbHVJRzVsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZjZ1BTQnVaVnRXWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZjdWJHOWpZWFJwYjI0Z1BqMGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHaGxJRDBnVDF0V1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hvWlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hXSUQwOVBTQWlhVzV6ZEdGdVkyVk5ZWFJ5YVhnaUlDWW1JRVV1YVc1emRHRnVZMlZOWVhSeWFYZ2dKaVlnS0dobElEMGdSUzVwYm5OMFlXNWpaVTFoZEhKcGVDa3NJRllnUFQwOUlDSnBibk4wWVc1alpVTnZiRzl5SWlBbUppQkZMbWx1YzNSaGJtTmxRMjlzYjNJZ0ppWWdLR2hsSUQwZ1JTNXBibk4wWVc1alpVTnZiRzl5S1Nrc0lHaGxJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkdVZ1BTQm9aUzV1YjNKdFlXeHBlbVZrTENCbVpTQTlJR2hsTG1sMFpXMVRhWHBsTENCQ1pTQTlJSFF1WjJWMEtHaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RbVVnUFQwOUlIWnZhV1FnTUNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZrZ1BTQkNaUzVpZFdabVpYSXNJRU5sSUQwZ1FtVXVkSGx3WlN3Z2VXVWdQU0JDWlM1aWVYUmxjMUJsY2tWc1pXMWxiblE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2hsTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2RsSUQwZ2FHVXVaR0YwWVN3Z2VHVWdQU0JuWlM1emRISnBaR1VzSUU5bElEMGdhR1V1YjJabWMyVjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWjJVZ0ppWWdaMlV1YVhOSmJuTjBZVzVqWldSSmJuUmxjbXhsWVhabFpFSjFabVpsY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkhJRDBnTURzZ1J5QThJRmN1Ykc5allYUnBiMjVUYVhwbE95QkhLeXNwZVNoWExteHZZMkYwYVc5dUlDc2dSeXdnWjJVdWJXVnphRkJsY2tGMGRISnBZblYwWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkZMbWx6U1c1emRHRnVZMlZrVFdWemFDQWhQVDBnSVRBZ0ppWWdSaTVmYldGNFNXNXpkR0Z1WTJWRGIzVnVkQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaEdMbDl0WVhoSmJuTjBZVzVqWlVOdmRXNTBJRDBnWjJVdWJXVnphRkJsY2tGMGRISnBZblYwWlNBcUlHZGxMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdadmNpaHNaWFFnUnpFZ1BTQXdPeUJITVNBOElGY3ViRzlqWVhScGIyNVRhWHBsT3lCSE1Tc3JLVjhvVnk1c2IyTmhkR2x2YmlBcklFY3hLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVpYVc1a1FuVm1abVZ5S0RNME9UWXlMQ0JaS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JITWlBOUlEQTdJRWN5SUR3Z1Z5NXNiMk5oZEdsdmJsTnBlbVU3SUVjeUt5c3BRU2hYTG14dlkyRjBhVzl1SUNzZ1J6SXNJR1psSUM4Z1Z5NXNiMk5oZEdsdmJsTnBlbVVzSUVObExDQnNaU3dnZUdVZ0tpQjVaU3dnS0U5bElDc2dabVVnTHlCWExteHZZMkYwYVc5dVUybDZaU0FxSUVjeUtTQXFJSGxsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hR1V1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1oyVXhJRDBnTURzZ1oyVXhJRHdnVnk1c2IyTmhkR2x2YmxOcGVtVTdJR2RsTVNzcktYa29WeTVzYjJOaGRHbHZiaUFySUdkbE1Td2dhR1V1YldWemFGQmxja0YwZEhKcFluVjBaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRkxtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBaFBUMGdJVEFnSmlZZ1JpNWZiV0Y0U1c1emRHRnVZMlZEYjNWdWRDQTlQVDBnZG05cFpDQXdJQ1ltSUNoR0xsOXRZWGhKYm5OMFlXNWpaVU52ZFc1MElEMGdhR1V1YldWemFGQmxja0YwZEhKcFluVjBaU0FxSUdobExtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR1p2Y2loc1pYUWdaMlV5SUQwZ01Ec2daMlV5SUR3Z1Z5NXNiMk5oZEdsdmJsTnBlbVU3SUdkbE1pc3JLVjhvVnk1c2IyTmhkR2x2YmlBcklHZGxNaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11WW1sdVpFSjFabVpsY2lnek5EazJNaXdnV1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWjJVeklEMGdNRHNnWjJVeklEd2dWeTVzYjJOaGRHbHZibE5wZW1VN0lHZGxNeXNyS1VFb1Z5NXNiMk5oZEdsdmJpQXJJR2RsTXl3Z1ptVWdMeUJYTG14dlkyRjBhVzl1VTJsNlpTd2dRMlVzSUd4bExDQm1aU0FxSUhsbExDQm1aU0F2SUZjdWJHOWpZWFJwYjI1VGFYcGxJQ29nWjJVeklDb2dlV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZMlVnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pURWdQU0JqWlZ0V1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JHVXhJQ0U5UFNCMmIybGtJREFwSUhOM2FYUmphQ2hzWlRFdWJHVnVaM1JvS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1MlpYSjBaWGhCZEhSeWFXSXlabllvVnk1c2IyTmhkR2x2Yml3Z2JHVXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURNNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMblpsY25SbGVFRjBkSEpwWWpObWRpaFhMbXh2WTJGMGFXOXVMQ0JzWlRFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdORG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdWRtVnlkR1Y0UVhSMGNtbGlOR1oyS0ZjdWJHOWpZWFJwYjI0c0lHeGxNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11ZG1WeWRHVjRRWFIwY21saU1XWjJLRmN1Ykc5allYUnBiMjRzSUd4bE1TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR0lvS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFa29LU0I3Q2lBZ0lDQWdJQ0FnVUNncE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1JTQnBiaUJoS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVRZ1BTQmhXMFZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGVWdhVzRnUkNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUVSYlZWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFOGdhVzRnUmlsbUtFWmJUMTB1YjJKcVpXTjBLU3dnWkdWc1pYUmxJRVpiVDEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXeGxkR1VnUkZ0VlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmtaV3hsZEdVZ1lWdEZYVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcktFVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1lWdEZMbWxrWFNBOVBUMGdkbTlwWkNBd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJRVFnUFNCaFcwVXVhV1JkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVlNCcGJpQkVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVlnUFNCRVcxVmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUU4Z2FXNGdSaWxtS0VaYlQxMHViMkpxWldOMEtTd2daR1ZzWlhSbElFWmJUMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCRVcxVmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JrWld4bGRHVWdZVnRGTG1sa1hUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRUlvUlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1JDQnBiaUJoS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZVZ1BTQmhXMFJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVlZ0RkxtbGtYU0E5UFQwZ2RtOXBaQ0F3S1NCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVZZ1BTQlZXMFV1YVdSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRThnYVc0Z1JpbG1LRVpiVDEwdWIySnFaV04wS1N3Z1pHVnNaWFJsSUVaYlQxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JWVzBVdWFXUmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZBb0tTQjdDaUFnSUNBZ0lDQWdkeWdwTENCaklDRTlQU0JzSUNZbUlDaGpJRDBnYkN3Z1pDaGpMbTlpYW1WamRDa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZHlncElIc0tJQ0FnSUNBZ0lDQnNMbWRsYjIxbGRISjVJRDBnYm5Wc2JDd2diQzV3Y205bmNtRnRJRDBnYm5Wc2JDd2diQzUzYVhKbFpuSmhiV1VnUFNBaE1Uc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdjMlYwZFhBNklHZ3NDaUFnSUNBZ0lDQWdjbVZ6WlhRNklGQXNDaUFnSUNBZ0lDQWdjbVZ6WlhSRVpXWmhkV3gwVTNSaGRHVTZJSGNzQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nU1N3S0lDQWdJQ0FnSUNCeVpXeGxZWE5sVTNSaGRHVnpUMlpIWlc5dFpYUnllVG9nYXl3S0lDQWdJQ0FnSUNCeVpXeGxZWE5sVTNSaGRHVnpUMlpRY205bmNtRnRPaUJDTEFvZ0lDQWdJQ0FnSUdsdWFYUkJkSFJ5YVdKMWRHVnpPaUJ3TEFvZ0lDQWdJQ0FnSUdWdVlXSnNaVUYwZEhKcFluVjBaVG9nWHl3S0lDQWdJQ0FnSUNCa2FYTmhZbXhsVlc1MWMyVmtRWFIwY21saWRYUmxjem9nWWdvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCeGJTaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlHNHVhWE5YWldKSFRESXNJSEk3Q2lBZ0lDQm1kVzVqZEdsdmJpQnZLR01wSUhzS0lDQWdJQ0FnSUNCeUlEMGdZenNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdFb1l5d2dhQ2tnZXdvZ0lDQWdJQ0FnSUhNdVpISmhkMEZ5Y21GNWN5aHlMQ0JqTENCb0tTd2dkQzUxY0dSaGRHVW9hQ3dnY2l3Z01TazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJzS0dNc0lHZ3NJSFVwSUhzS0lDQWdJQ0FnSUNCcFppQW9kU0E5UFQwZ01Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0JrTENCbU93b2dJQ0FnSUNBZ0lHbG1JQ2hwS1NCa0lEMGdjeXdnWmlBOUlDSmtjbUYzUVhKeVlYbHpTVzV6ZEdGdVkyVmtJanNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hrSUQwZ1pTNW5aWFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLU3dnWmlBOUlDSmtjbUYzUVhKeVlYbHpTVzV6ZEdGdVkyVmtRVTVIVEVVaUxDQmtJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVFuVm1abVZ5VW1WdVpHVnlaWEk2SUhWemFXNW5JRlJJVWtWRkxrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUdKMWRDQm9ZWEprZDJGeVpTQmtiMlZ6SUc1dmRDQnpkWEJ3YjNKMElHVjRkR1Z1YzJsdmJpQkJUa2RNUlY5cGJuTjBZVzVqWldSZllYSnlZWGx6TGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1JiWmwwb2Npd2dZeXdnYUN3Z2RTa3NJSFF1ZFhCa1lYUmxLR2dzSUhJc0lIVXBPd29nSUNBZ2ZRb2dJQ0FnZEdocGN5NXpaWFJOYjJSbElEMGdieXdnZEdocGN5NXlaVzVrWlhJZ1BTQmhMQ0IwYUdsekxuSmxibVJsY2tsdWMzUmhibU5sY3lBOUlHdzdDbjBLWm5WdVkzUnBiMjRnV0cwb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNDdDaUFnSUNCbWRXNWpkR2x2YmlCcEtDa2dld29nSUNBZ0lDQWdJR2xtSUNodUlDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQnVPd29nSUNBZ0lDQWdJR2xtSUNobExtaGhjeWdpUlZoVVgzUmxlSFIxY21WZlptbHNkR1Z5WDJGdWFYTnZkSEp2Y0dsaklpa2dQVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnWlM1blpYUW9Ja1ZZVkY5MFpYaDBkWEpsWDJacGJIUmxjbDloYm1semIzUnliM0JwWXlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J1SUQwZ2N5NW5aWFJRWVhKaGJXVjBaWElvVEM1TlFWaGZWRVZZVkZWU1JWOU5RVmhmUVU1SlUwOVVVazlRV1Y5RldGUXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQnVJRDBnTURzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlISW9UQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaE1JRDA5UFNBaWFHbG5hSEFpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoekxtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENnek5UWXpNeXdnTXpZek16Z3BMbkJ5WldOcGMybHZiaUErSURBZ0ppWWdjeTVuWlhSVGFHRmtaWEpRY21WamFYTnBiMjVHYjNKdFlYUW9NelUyTXpJc0lETTJNek00S1M1d2NtVmphWE5wYjI0Z1BpQXdLU0J5WlhSMWNtNGdJbWhwWjJod0lqc0tJQ0FnSUNBZ0lDQWdJQ0FnVENBOUlDSnRaV1JwZFcxd0lqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFd2dQVDA5SUNKdFpXUnBkVzF3SWlBbUppQnpMbWRsZEZOb1lXUmxjbEJ5WldOcGMybHZia1p2Y20xaGRDZ3pOVFl6TXl3Z016WXpNemNwTG5CeVpXTnBjMmx2YmlBK0lEQWdKaVlnY3k1blpYUlRhR0ZrWlhKUWNtVmphWE5wYjI1R2IzSnRZWFFvTXpVMk16SXNJRE0yTXpNM0tTNXdjbVZqYVhOcGIyNGdQaUF3SUQ4Z0ltMWxaR2wxYlhBaUlEb2dJbXh2ZDNBaU93b2dJQ0FnZlFvZ0lDQWdiR1YwSUc4Z1BTQjBlWEJsYjJZZ1YyVmlSMHd5VW1WdVpHVnlhVzVuUTI5dWRHVjRkQ0E4SUNKMUlpQW1KaUJ6SUdsdWMzUmhibU5sYjJZZ1YyVmlSMHd5VW1WdVpHVnlhVzVuUTI5dWRHVjRkQ0I4ZkNCMGVYQmxiMllnVjJWaVIwd3lRMjl0Y0hWMFpWSmxibVJsY21sdVowTnZiblJsZUhRZ1BDQWlkU0lnSmlZZ2N5QnBibk4wWVc1alpXOW1JRmRsWWtkTU1rTnZiWEIxZEdWU1pXNWtaWEpwYm1kRGIyNTBaWGgwTENCaElEMGdkQzV3Y21WamFYTnBiMjRnSVQwOUlIWnZhV1FnTUNBL0lIUXVjSEpsWTJsemFXOXVJRG9nSW1ocFoyaHdJaXdnYkNBOUlISW9ZU2s3Q2lBZ0lDQnNJQ0U5UFNCaElDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJaXdnWVN3Z0ltNXZkQ0J6ZFhCd2IzSjBaV1FzSUhWemFXNW5JaXdnYkN3Z0ltbHVjM1JsWVdRdUlpa3NJR0VnUFNCc0tUc0tJQ0FnSUd4bGRDQmpJRDBnYnlCOGZDQmxMbWhoY3lnaVYwVkNSMHhmWkhKaGQxOWlkV1ptWlhKeklpa3NJR2dnUFNCMExteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnUFQwOUlDRXdMQ0IxSUQwZ2N5NW5aWFJRWVhKaGJXVjBaWElvTXpRNU16QXBMQ0JrSUQwZ2N5NW5aWFJRWVhKaGJXVjBaWElvTXpVMk5qQXBMQ0JtSUQwZ2N5NW5aWFJRWVhKaGJXVjBaWElvTXpNM09Ta3NJRzBnUFNCekxtZGxkRkJoY21GdFpYUmxjaWd6TkRBM05pa3NJSGdnUFNCekxtZGxkRkJoY21GdFpYUmxjaWd6TkRreU1Ta3NJSFlnUFNCekxtZGxkRkJoY21GdFpYUmxjaWd6TmpNME55a3NJR2NnUFNCekxtZGxkRkJoY21GdFpYUmxjaWd6TmpNME9Da3NJSEFnUFNCekxtZGxkRkJoY21GdFpYUmxjaWd6TmpNME9Ta3NJRjhnUFNCa0lENGdNQ3dnZVNBOUlHOGdmSHdnWlM1b1lYTW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBJaWtzSUdJZ1BTQmZJQ1ltSUhrc0lFRWdQU0J2SUQ4Z2N5NW5aWFJRWVhKaGJXVjBaWElvTXpZeE9ETXBJRG9nTURzS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdhWE5YWldKSFRESTZJRzhzQ2lBZ0lDQWdJQ0FnWkhKaGQwSjFabVpsY25NNklHTXNDaUFnSUNBZ0lDQWdaMlYwVFdGNFFXNXBjMjkwY205d2VUb2dhU3dLSUNBZ0lDQWdJQ0JuWlhSTllYaFFjbVZqYVhOcGIyNDZJSElzQ2lBZ0lDQWdJQ0FnY0hKbFkybHphVzl1T2lCaExBb2dJQ0FnSUNBZ0lHeHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWEk2SUdnc0NpQWdJQ0FnSUNBZ2JXRjRWR1Y0ZEhWeVpYTTZJSFVzQ2lBZ0lDQWdJQ0FnYldGNFZtVnlkR1Y0VkdWNGRIVnlaWE02SUdRc0NpQWdJQ0FnSUNBZ2JXRjRWR1Y0ZEhWeVpWTnBlbVU2SUdZc0NpQWdJQ0FnSUNBZ2JXRjRRM1ZpWlcxaGNGTnBlbVU2SUcwc0NpQWdJQ0FnSUNBZ2JXRjRRWFIwY21saWRYUmxjem9nZUN3S0lDQWdJQ0FnSUNCdFlYaFdaWEowWlhoVmJtbG1iM0p0Y3pvZ2Rpd0tJQ0FnSUNBZ0lDQnRZWGhXWVhKNWFXNW5jem9nWnl3S0lDQWdJQ0FnSUNCdFlYaEdjbUZuYldWdWRGVnVhV1p2Y20xek9pQndMQW9nSUNBZ0lDQWdJSFpsY25SbGVGUmxlSFIxY21Wek9pQmZMQW9nSUNBZ0lDQWdJR1pzYjJGMFJuSmhaMjFsYm5SVVpYaDBkWEpsY3pvZ2VTd0tJQ0FnSUNBZ0lDQm1iRzloZEZabGNuUmxlRlJsZUhSMWNtVnpPaUJpTEFvZ0lDQWdJQ0FnSUcxaGVGTmhiWEJzWlhNNklFRUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdTbTBvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0IwYUdsekxDQjBJRDBnYm5Wc2JDd2diaUE5SURBc0lHa2dQU0FoTVN3Z2NpQTlJQ0V4TENCdklEMGdibVYzSUZkMExDQmhJRDBnYm1WM0lHeDBMQ0JzSUQwZ2V3b2dJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNMQW9nSUNBZ0lDQWdJRzVsWldSelZYQmtZWFJsT2lBaE1Rb2dJQ0FnZlRzS0lDQWdJSFJvYVhNdWRXNXBabTl5YlNBOUlHd3NJSFJvYVhNdWJuVnRVR3hoYm1WeklEMGdNQ3dnZEdocGN5NXVkVzFKYm5SbGNuTmxZM1JwYjI0Z1BTQXdMQ0IwYUdsekxtbHVhWFFnUFNCbWRXNWpkR2x2YmloMUxDQmtMQ0JtS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCMUxteGxibWQwYUNBaFBUMGdNQ0I4ZkNCa0lIeDhJRzRnSVQwOUlEQWdmSHdnYVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVNBOUlHUXNJSFFnUFNCb0tIVXNJR1lzSURBcExDQnVJRDBnZFM1c1pXNW5kR2dzSUcwN0NpQWdJQ0I5TENCMGFHbHpMbUpsWjJsdVUyaGhaRzkzY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSElnUFNBaE1Dd2dhQ2h1ZFd4c0tUc0tJQ0FnSUgwc0lIUm9hWE11Wlc1a1UyaGhaRzkzY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSElnUFNBaE1Td2dZeWdwT3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJUZEdGMFpTQTlJR1oxYm1OMGFXOXVLSFVzSUdRc0lHWXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJSFV1WTJ4cGNIQnBibWRRYkdGdVpYTXNJSGdnUFNCMUxtTnNhWEJKYm5SbGNuTmxZM1JwYjI0c0lIWWdQU0IxTG1Oc2FYQlRhR0ZrYjNkekxDQm5JRDBnY3k1blpYUW9kU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRnBJSHg4SUcwZ1BUMDlJRzUxYkd3Z2ZId2diUzVzWlc1bmRHZ2dQVDA5SURBZ2ZId2djaUFtSmlBaGRpa2djaUEvSUdnb2JuVnNiQ2tnT2lCaktDazdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdjaUEvSURBZ09pQnVMQ0JmSUQwZ2NDQXFJRFFzSUhrZ1BTQm5MbU5zYVhCd2FXNW5VM1JoZEdVZ2ZId2diblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdiQzUyWVd4MVpTQTlJSGtzSUhrZ1BTQm9LRzBzSUdRc0lGOHNJR1lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHSWdQU0F3T3lCaUlDRTlQU0JmT3lBcksySXBlVnRpWFNBOUlIUmJZbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHY3VZMnhwY0hCcGJtZFRkR0YwWlNBOUlIa3NJSFJvYVhNdWJuVnRTVzUwWlhKelpXTjBhVzl1SUQwZ2VDQS9JSFJvYVhNdWJuVnRVR3hoYm1WeklEb2dNQ3dnZEdocGN5NXVkVzFRYkdGdVpYTWdLejBnY0RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdZeWdwSUhzS0lDQWdJQ0FnSUNCc0xuWmhiSFZsSUNFOVBTQjBJQ1ltSUNoc0xuWmhiSFZsSUQwZ2RDd2diQzV1WldWa2MxVndaR0YwWlNBOUlHNGdQaUF3S1N3Z1pTNXVkVzFRYkdGdVpYTWdQU0J1TENCbExtNTFiVWx1ZEdWeWMyVmpkR2x2YmlBOUlEQTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJvS0hVc0lHUXNJR1lzSUcwcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlIVWdJVDA5SUc1MWJHd2dQeUIxTG14bGJtZDBhQ0E2SURBc0lIWWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2g0SUNFOVBTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gySUQwZ2JDNTJZV3gxWlN3Z2JTQWhQVDBnSVRBZ2ZId2dkaUE5UFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHY2dQU0JtSUNzZ2VDQXFJRFFzSUhBZ1BTQmtMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0V1WjJWMFRtOXliV0ZzVFdGMGNtbDRLSEFwTENBb2RpQTlQVDBnYm5Wc2JDQjhmQ0IyTG14bGJtZDBhQ0E4SUdjcElDWW1JQ2gySUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNobktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOGdQU0F3TENCNUlEMGdaanNnWHlBaFBUMGdlRHNnS3l0ZkxDQjVJQ3M5SURRcGJ5NWpiM0I1S0hWYlgxMHBMbUZ3Y0d4NVRXRjBjbWw0TkNod0xDQmhLU3dnYnk1dWIzSnRZV3d1ZEc5QmNuSmhlU2gyTENCNUtTd2dkbHQ1SUNzZ00xMGdQU0J2TG1OdmJuTjBZVzUwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd3dWRtRnNkV1VnUFNCMkxDQnNMbTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbTUxYlZCc1lXNWxjeUE5SUhnc0lHVXViblZ0U1c1MFpYSnpaV04wYVc5dUlEMGdNQ3dnZGpzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCWmJTaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z2RDaHZMQ0JoS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ1BUMDlJRVJ6SUQ4Z2J5NXRZWEJ3YVc1bklEMGdRbWtnT2lCaElEMDlQU0JHY3lBbUppQW9ieTV0WVhCd2FXNW5JRDBnZW1rcExDQnZPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYmlodktTQjdDaUFnSUNBZ0lDQWdhV1lnS0c4Z0ppWWdieTVwYzFSbGVIUjFjbVVnSmlZZ2J5NXBjMUpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVVnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2J5NXRZWEJ3YVc1bk93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lTQTlQVDBnUkhNZ2ZId2dZU0E5UFQwZ1JuTXBJR2xtSUNobExtaGhjeWh2S1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCbExtZGxkQ2h2S1M1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFFvYkN3Z2J5NXRZWEJ3YVc1bktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc01TQTlJRzh1YVcxaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkRFZ0ppWWdiREV1YUdWcFoyaDBJRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdjeTVuWlhSU1pXNWtaWEpVWVhKblpYUW9LU3dnYUNBOUlHNWxkeUJxY3loc01TNW9aV2xuYUhRZ0x5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYUM1bWNtOXRSWEYxYVhKbFkzUmhibWQxYkdGeVZHVjRkSFZ5WlNoekxDQnZLU3dnWlM1elpYUW9ieXdnYUNrc0lITXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHTXBMQ0J2TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCcEtTd2dkQ2hvTG5SbGVIUjFjbVVzSUc4dWJXRndjR2x1WnlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzg3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtHOHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzh1ZEdGeVoyVjBPd29nSUNBZ0lDQWdJR0V1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lHa3BPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdaUzVuWlhRb1lTazdDaUFnSUNBZ0lDQWdiQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbVJsYkdWMFpTaGhLU3dnYkM1a2FYTndiM05sS0NrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjaWdwSUhzS0lDQWdJQ0FnSUNCbElEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGREb2diaXdLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUJ5Q2lBZ0lDQjlPd3A5Q25aaGNpQkdjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdTWElnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlDMHhMQ0IwSUQwZ01Td2diaUE5SURFc0lHa2dQU0F0TVN3Z2NpQTlJQzR4TENCdklEMGdNbVV6S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlBjblJvYjJkeVlYQm9hV05EWVcxbGNtRWlMQ0IwYUdsekxucHZiMjBnUFNBeExDQjBhR2x6TG5acFpYY2dQU0J1ZFd4c0xDQjBhR2x6TG14bFpuUWdQU0JsTENCMGFHbHpMbkpwWjJoMElEMGdkQ3dnZEdocGN5NTBiM0FnUFNCdUxDQjBhR2x6TG1KdmRIUnZiU0E5SUdrc0lIUm9hWE11Ym1WaGNpQTlJSElzSUhSb2FYTXVabUZ5SUQwZ2J5d2dkR2hwY3k1MWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxMQ0IwS1N3Z2RHaHBjeTVzWldaMElEMGdaUzVzWldaMExDQjBhR2x6TG5KcFoyaDBJRDBnWlM1eWFXZG9kQ3dnZEdocGN5NTBiM0FnUFNCbExuUnZjQ3dnZEdocGN5NWliM1IwYjIwZ1BTQmxMbUp2ZEhSdmJTd2dkR2hwY3k1dVpXRnlJRDBnWlM1dVpXRnlMQ0IwYUdsekxtWmhjaUE5SUdVdVptRnlMQ0IwYUdsekxucHZiMjBnUFNCbExucHZiMjBzSUhSb2FYTXVkbWxsZHlBOUlHVXVkbWxsZHlBOVBUMGdiblZzYkNBL0lHNTFiR3dnT2lCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExuWnBaWGNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZtbGxkMDltWm5ObGRDaGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MmFXVjNJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMblpwWlhjZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWdVlXSnNaV1E2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtZFd4c1YybGtkR2c2SURFc0NpQWdJQ0FnSUNBZ0lDQWdJR1oxYkd4SVpXbG5hSFE2SURFc0NpQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGRGZzZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZEZrNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERUtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTJhV1YzTG1WdVlXSnNaV1FnUFNBaE1Dd2dkR2hwY3k1MmFXVjNMbVoxYkd4WGFXUjBhQ0E5SUdVc0lIUm9hWE11ZG1sbGR5NW1kV3hzU0dWcFoyaDBJRDBnZEN3Z2RHaHBjeTUyYVdWM0xtOW1abk5sZEZnZ1BTQnVMQ0IwYUdsekxuWnBaWGN1YjJabWMyVjBXU0E5SUdrc0lIUm9hWE11ZG1sbGR5NTNhV1IwYUNBOUlISXNJSFJvYVhNdWRtbGxkeTVvWldsbmFIUWdQU0J2TENCMGFHbHpMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUgwS0lDQWdJR05zWldGeVZtbGxkMDltWm5ObGRDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuWnBaWGNnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11ZG1sbGR5NWxibUZpYkdWa0lEMGdJVEVwTENCMGFHbHpMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQW9kR2hwY3k1eWFXZG9kQ0F0SUhSb2FYTXViR1ZtZENrZ0x5QW9NaUFxSUhSb2FYTXVlbTl2YlNrc0lIUWdQU0FvZEdocGN5NTBiM0FnTFNCMGFHbHpMbUp2ZEhSdmJTa2dMeUFvTWlBcUlIUm9hWE11ZW05dmJTa3NJRzRnUFNBb2RHaHBjeTV5YVdkb2RDQXJJSFJvYVhNdWJHVm1kQ2tnTHlBeUxDQnBJRDBnS0hSb2FYTXVkRzl3SUNzZ2RHaHBjeTVpYjNSMGIyMHBJQzhnTWl3Z2NpQTlJRzRnTFNCbExDQnZJRDBnYmlBcklHVXNJR0VnUFNCcElDc2dkQ3dnYkNBOUlHa2dMU0IwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5acFpYY2dJVDA5SUc1MWJHd2dKaVlnZEdocGN5NTJhV1YzTG1WdVlXSnNaV1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQW9kR2hwY3k1eWFXZG9kQ0F0SUhSb2FYTXViR1ZtZENrZ0x5QjBhR2x6TG5acFpYY3VablZzYkZkcFpIUm9JQzhnZEdocGN5NTZiMjl0TENCb0lEMGdLSFJvYVhNdWRHOXdJQzBnZEdocGN5NWliM1IwYjIwcElDOGdkR2hwY3k1MmFXVjNMbVoxYkd4SVpXbG5hSFFnTHlCMGFHbHpMbnB2YjIwN0NpQWdJQ0FnSUNBZ0lDQWdJSElnS3owZ1l5QXFJSFJvYVhNdWRtbGxkeTV2Wm1aelpYUllMQ0J2SUQwZ2NpQXJJR01nS2lCMGFHbHpMblpwWlhjdWQybGtkR2dzSUdFZ0xUMGdhQ0FxSUhSb2FYTXVkbWxsZHk1dlptWnpaWFJaTENCc0lEMGdZU0F0SUdnZ0tpQjBhR2x6TG5acFpYY3VhR1ZwWjJoME93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5CeWIycGxZM1JwYjI1TllYUnlhWGd1YldGclpVOXlkR2h2WjNKaGNHaHBZeWh5TENCdkxDQmhMQ0JzTENCMGFHbHpMbTVsWVhJc0lIUm9hWE11Wm1GeUtTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtIUm9hWE11Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ2t1YVc1MlpYSjBLQ2s3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG05aWFtVmpkQzU2YjI5dElEMGdkR2hwY3k1NmIyOXRMQ0IwTG05aWFtVmpkQzVzWldaMElEMGdkR2hwY3k1c1pXWjBMQ0IwTG05aWFtVmpkQzV5YVdkb2RDQTlJSFJvYVhNdWNtbG5hSFFzSUhRdWIySnFaV04wTG5SdmNDQTlJSFJvYVhNdWRHOXdMQ0IwTG05aWFtVmpkQzVpYjNSMGIyMGdQU0IwYUdsekxtSnZkSFJ2YlN3Z2RDNXZZbXBsWTNRdWJtVmhjaUE5SUhSb2FYTXVibVZoY2l3Z2RDNXZZbXBsWTNRdVptRnlJRDBnZEdocGN5NW1ZWElzSUhSb2FYTXVkbWxsZHlBaFBUMGdiblZzYkNBbUppQW9kQzV2WW1wbFkzUXVkbWxsZHlBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lIUm9hWE11ZG1sbGR5a3BMQ0IwT3dvZ0lDQWdmUXA5T3dwR2NpNXdjbTkwYjNSNWNHVXVhWE5QY25Sb2IyZHlZWEJvYVdORFlXMWxjbUVnUFNBaE1Ec0tkbUZ5SUVkcElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCemJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3aU93b2dJQ0FnZlFwOU93cEhhUzV3Y205MGIzUjVjR1V1YVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1JXa2dQU0EwTENCTmJpQTlJRGdzSUZaMElEMGdUV0YwYUM1d2IzY29NaXdnVFc0cExDQnphQ0E5SUZzS0lDQWdJQzR4TWpVc0NpQWdJQ0F1TWpFMUxBb2dJQ0FnTGpNMUxBb2dJQ0FnTGpRME5pd0tJQ0FnSUM0MU1qWXNDaUFnSUNBdU5UZ3lDbDBzSUc5b0lEMGdUVzRnTFNCRmFTQXJJREVnS3lCemFDNXNaVzVuZEdnc0lIQnBJRDBnTWpBc0lFaHpJRDBnZXdvZ0lDQWdXMDUwWFRvZ01Dd0tJQ0FnSUZ0UGFWMDZJREVLZlN3Z1IyOGdQU0J1WlhjZ1JuSXNJSHNnWDJ4dlpGQnNZVzVsY3pvZ2Fta2dMQ0JmYzJsNlpVeHZaSE02SUV4c0lDd2dYM05wWjIxaGN6b2diSE1nSUgwZ1BTQmFiU2dwTENCU2JDQTlJRzVsZHlCaFpTd2dWbThnUFNCdWRXeHNMQ0JQYmlBOUlDZ3hJQ3NnVFdGMGFDNXpjWEowS0RVcEtTQXZJRElzSUcxcElEMGdNU0F2SUU5dUxDQlFiQ0E5SUZzS0lDQWdJRzVsZHlCTktERXNJREVzSURFcExBb2dJQ0FnYm1WM0lFMG9MVEVzSURFc0lERXBMQW9nSUNBZ2JtVjNJRTBvTVN3Z01Td2dMVEVwTEFvZ0lDQWdibVYzSUUwb0xURXNJREVzSUMweEtTd0tJQ0FnSUc1bGR5Qk5LREFzSUU5dUxDQnRhU2tzQ2lBZ0lDQnVaWGNnVFNnd0xDQlBiaXdnTFcxcEtTd0tJQ0FnSUc1bGR5Qk5LRzFwTENBd0xDQlBiaWtzQ2lBZ0lDQnVaWGNnVFNndGJXa3NJREFzSUU5dUtTd0tJQ0FnSUc1bGR5Qk5LRTl1TENCdGFTd2dNQ2tzQ2lBZ0lDQnVaWGNnVFNndFQyNHNJRzFwTENBd0tRcGRMQ0JoYUNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lIUm9hWE11WDNKbGJtUmxjbVZ5SUQwZ1pTd2dkR2hwY3k1ZmNHbHVaMUJ2Ym1kU1pXNWtaWEpVWVhKblpYUWdQU0J1ZFd4c0xDQjBhR2x6TGw5aWJIVnlUV0YwWlhKcFlXd2dQU0FrYlNod2FTa3NJSFJvYVhNdVgyVnhkV2x5WldOMFUyaGhaR1Z5SUQwZ2JuVnNiQ3dnZEdocGN5NWZZM1ZpWlcxaGNGTm9ZV1JsY2lBOUlHNTFiR3dzSUhSb2FYTXVYMk52YlhCcGJHVk5ZWFJsY21saGJDaDBhR2x6TGw5aWJIVnlUV0YwWlhKcFlXd3BPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJWTmpaVzVsS0dVc0lIUWdQU0F3TENCdUlEMGdMakVzSUdrZ1BTQXhNREFwSUhzS0lDQWdJQ0FnSUNCV2J5QTlJSFJvYVhNdVgzSmxibVJsY21WeUxtZGxkRkpsYm1SbGNsUmhjbWRsZENncE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeTVmWVd4c2IyTmhkR1ZVWVhKblpYUnpLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzTmpaVzVsVkc5RGRXSmxWVllvWlN3Z2Jpd2dhU3dnY2lrc0lIUWdQaUF3SUNZbUlIUm9hWE11WDJKc2RYSW9jaXdnTUN3Z01Dd2dkQ2tzSUhSb2FYTXVYMkZ3Y0d4NVVFMVNSVTBvY2lrc0lIUm9hWE11WDJOc1pXRnVkWEFvY2lrc0lISTdDaUFnSUNCOUNpQWdJQ0JtY205dFJYRjFhWEpsWTNSaGJtZDFiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWm5KdmJWUmxlSFIxY21Vb1pTazdDaUFnSUNCOUNpQWdJQ0JtY205dFEzVmlaVzFoY0NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJaeWIyMVVaWGgwZFhKbEtHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNHbHNaVU4xWW1WdFlYQlRhR0ZrWlhJb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaUE5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmWTNWaVpXMWhjRk5vWVdSbGNpQTlJRVpzS0Nrc0lIUm9hWE11WDJOdmJYQnBiR1ZOWVhSbGNtbGhiQ2gwYUdsekxsOWpkV0psYldGd1UyaGhaR1Z5S1NrN0NpQWdJQ0I5Q2lBZ0lDQmpiMjF3YVd4bFJYRjFhWEpsWTNSaGJtZDFiR0Z5VTJoaFpHVnlLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYMlZ4ZFdseVpXTjBVMmhoWkdWeUlEMDlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lBOUlFUnNLQ2tzSUhSb2FYTXVYMk52YlhCcGJHVk5ZWFJsY21saGJDaDBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaWtwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5aWJIVnlUV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BMQ0IwYUdsekxsOWpkV0psYldGd1UyaGhaR1Z5SUNFOVBTQnVkV3hzSUNZbUlIUm9hWE11WDJOMVltVnRZWEJUYUdGa1pYSXVaR2x6Y0c5elpTZ3BMQ0IwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lBaFBUMGdiblZzYkNBbUppQjBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Ec2daU0E4SUdwcExteGxibWQwYURzZ1pTc3JLV3BwVzJWZExtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJRjlqYkdWaGJuVndLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDl3YVc1blVHOXVaMUpsYm1SbGNsUmhjbWRsZEM1a2FYTndiM05sS0Nrc0lIUm9hWE11WDNKbGJtUmxjbVZ5TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2hXYnlrc0lHVXVjMk5wYzNOdmNsUmxjM1FnUFNBaE1Td2dZM01vWlN3Z01Dd2dNQ3dnWlM1M2FXUjBhQ3dnWlM1b1pXbG5hSFFwT3dvZ0lDQWdmUW9nSUNBZ1gyWnliMjFVWlhoMGRYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCV2J5QTlJSFJvYVhNdVgzSmxibVJsY21WeUxtZGxkRkpsYm1SbGNsUmhjbWRsZENncE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWVd4c2IyTmhkR1ZVWVhKblpYUnpLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTBaWGgwZFhKbFZHOURkV0psVlZZb1pTd2dkQ2tzSUhSb2FYTXVYMkZ3Y0d4NVVFMVNSVTBvZENrc0lIUm9hWE11WDJOc1pXRnVkWEFvZENrc0lIUTdDaUFnSUNCOUNpQWdJQ0JmWVd4c2IyTmhkR1ZVWVhKblpYUnpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdiV0ZuUm1sc2RHVnlPaUIwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdiV2x1Um1sc2RHVnlPaUIwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHVk5hWEJ0WVhCek9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nYTI0c0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2dZM1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnVZMjlrYVc1bk9pQk9kQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hDZFdabVpYSTZJQ0V4Q2lBZ0lDQWdJQ0FnZlN3Z2JpQTlJRWxzS0hRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxtUmxjSFJvUW5WbVptVnlJRDBnSVdVc0lIUm9hWE11WDNCcGJtZFFiMjVuVW1WdVpHVnlWR0Z5WjJWMElEMGdTV3dvZENrc0lHNDdDaUFnSUNCOUNpQWdJQ0JmWTI5dGNHbHNaVTFoZEdWeWFXRnNLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUc1bGR5QnpkQ2hxYVZzd1hTd2daU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjbVZ1WkdWeVpYSXVZMjl0Y0dsc1pTaDBMQ0JIYnlrN0NpQWdJQ0I5Q2lBZ0lDQmZjMk5sYm1WVWIwTjFZbVZWVmlobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnZFhRb09UQXNJREVzSUhRc0lHNHBMQ0JzSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMHNJR01nUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURUtJQ0FnSUNBZ0lDQmRMQ0JvSUQwZ2RHaHBjeTVmY21WdVpHVnlaWElzSUhVZ1BTQm9MbUYxZEc5RGJHVmhjaXdnWkNBOUlHZ3VkRzl1WlUxaGNIQnBibWM3Q2lBZ0lDQWdJQ0FnYUM1blpYUkRiR1ZoY2tOdmJHOXlLRkpzS1N3Z2FDNTBiMjVsVFdGd2NHbHVaeUE5SUY5dUxDQm9MbUYxZEc5RGJHVmhjaUE5SUNFeE93b2dJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2JtVjNJR2h1S0hzS0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0lsQk5Va1ZOTGtKaFkydG5jbTkxYm1RaUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6YVdSbE9pQnBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvVkdWemREb2dJVEVLSUNBZ0lDQWdJQ0I5S1N3Z2JTQTlJRzVsZHlCemRDaHVaWGNnZDI0c0lHWXBMQ0I0SUQwZ0lURXNJSFlnUFNCbExtSmhZMnRuY205MWJtUTdDaUFnSUNBZ0lDQWdkaUEvSUhZdWFYTkRiMnh2Y2lBbUppQW9aaTVqYjJ4dmNpNWpiM0I1S0hZcExDQmxMbUpoWTJ0bmNtOTFibVFnUFNCdWRXeHNMQ0I0SUQwZ0lUQXBJRG9nS0dZdVkyOXNiM0l1WTI5d2VTaFNiQ2tzSUhnZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuSUQwZ01Ec2daeUE4SURZN0lHY3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ1p5QWxJRE03Q2lBZ0lDQWdJQ0FnSUNBZ0lIQWdQVDBnTUNBL0lDaGhMblZ3TG5ObGRDZ3dMQ0JzVzJkZExDQXdLU3dnWVM1c2IyOXJRWFFvWTF0blhTd2dNQ3dnTUNrcElEb2djQ0E5UFNBeElEOGdLR0V1ZFhBdWMyVjBLREFzSURBc0lHeGJaMTBwTENCaExteHZiMnRCZENnd0xDQmpXMmRkTENBd0tTa2dPaUFvWVM1MWNDNXpaWFFvTUN3Z2JGdG5YU3dnTUNrc0lHRXViRzl2YTBGMEtEQXNJREFzSUdOYloxMHBLU3dnWTNNb2FTd2djQ0FxSUZaMExDQm5JRDRnTWlBL0lGWjBJRG9nTUN3Z1ZuUXNJRlowS1N3Z2FDNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2FTa3NJSGdnSmlZZ2FDNXlaVzVrWlhJb2JTd2dZU2tzSUdndWNtVnVaR1Z5S0dVc0lHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J0TG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2JTNXRZWFJsY21saGJDNWthWE53YjNObEtDa3NJR2d1ZEc5dVpVMWhjSEJwYm1jZ1BTQmtMQ0JvTG1GMWRHOURiR1ZoY2lBOUlIVXNJR1V1WW1GamEyZHliM1Z1WkNBOUlIWTdDaUFnSUNCOUNpQWdJQ0JmYzJWMFJXNWpiMlJwYm1jb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM0psYm1SbGNtVnlMbU5oY0dGaWFXeHBkR2xsY3k1cGMxZGxZa2RNTWlBOVBUMGdJVEFnSmlZZ2RDNW1iM0p0WVhRZ1BUMDlJR04wSUNZbUlIUXVkSGx3WlNBOVBUMGdjbTRnSmlZZ2RDNWxibU52WkdsdVp5QTlQVDBnVDJrZ1B5QmxMblpoYkhWbElEMGdTSE5iVG5SZElEb2daUzUyWVd4MVpTQTlJRWh6VzNRdVpXNWpiMlJwYm1kZE93b2dJQ0FnZlFvZ0lDQWdYM1JsZUhSMWNtVlViME4xWW1WVlZpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbDl5Wlc1a1pYSmxjaXdnYVNBOUlHVXViV0Z3Y0dsdVp5QTlQVDBnUW1rZ2ZId2daUzV0WVhCd2FXNW5JRDA5UFNCNmFUc0tJQ0FnSUNBZ0lDQnBJRDhnZEdocGN5NWZZM1ZpWlcxaGNGTm9ZV1JsY2lBOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5amRXSmxiV0Z3VTJoaFpHVnlJRDBnUm13b0tTa2dPaUIwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lBOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaUE5SUVSc0tDa3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdhU0EvSUhSb2FYTXVYMk4xWW1WdFlYQlRhR0ZrWlhJZ09pQjBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaXdnYnlBOUlHNWxkeUJ6ZENocWFWc3dYU3dnY2lrc0lHRWdQU0J5TG5WdWFXWnZjbTF6T3dvZ0lDQWdJQ0FnSUdFdVpXNTJUV0Z3TG5aaGJIVmxJRDBnWlN3Z2FTQjhmQ0JoTG5SbGVHVnNVMmw2WlM1MllXeDFaUzV6WlhRb01TQXZJR1V1YVcxaFoyVXVkMmxrZEdnc0lERWdMeUJsTG1sdFlXZGxMbWhsYVdkb2RDa3NJSFJvYVhNdVgzTmxkRVZ1WTI5a2FXNW5LR0V1YVc1d2RYUkZibU52WkdsdVp5d2daU2tzSUdOektIUXNJREFzSURBc0lETWdLaUJXZEN3Z01pQXFJRlowS1N3Z2JpNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2RDa3NJRzR1Y21WdVpHVnlLRzhzSUVkdktUc0tJQ0FnSUgwS0lDQWdJRjloY0hCc2VWQk5Va1ZOS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDNKbGJtUmxjbVZ5TENCdUlEMGdkQzVoZFhSdlEyeGxZWEk3Q2lBZ0lDQWdJQ0FnZEM1aGRYUnZRMnhsWVhJZ1BTQWhNVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBeE95QnBJRHdnYjJnN0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1RXRjBhQzV6Y1hKMEtHeHpXMmxkSUNvZ2JITmJhVjBnTFNCc2MxdHBJQzBnTVYwZ0tpQnNjMXRwSUMwZ01WMHBMQ0J2SUQwZ1VHeGJLR2tnTFNBeEtTQWxJRkJzTG14bGJtZDBhRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJKc2RYSW9aU3dnYVNBdElERXNJR2tzSUhJc0lHOHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GMWRHOURiR1ZoY2lBOUlHNDdDaUFnSUNCOUNpQWdJQ0JmWW14MWNpaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbDl3YVc1blVHOXVaMUpsYm1SbGNsUmhjbWRsZERzS0lDQWdJQ0FnSUNCMGFHbHpMbDlvWVd4bVFteDFjaWhsTENCdkxDQjBMQ0J1TENCcExDQWliR0YwYVhSMVpHbHVZV3dpTENCeUtTd2dkR2hwY3k1ZmFHRnNaa0pzZFhJb2J5d2daU3dnYml3Z2Jpd2dhU3dnSW14dmJtZHBkSFZrYVc1aGJDSXNJSElwT3dvZ0lDQWdmUW9nSUNBZ1gyaGhiR1pDYkhWeUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFJvYVhNdVgzSmxibVJsY21WeUxDQmpJRDBnZEdocGN5NWZZbXgxY2sxaGRHVnlhV0ZzT3dvZ0lDQWdJQ0FnSUc4Z0lUMDlJQ0pzWVhScGRIVmthVzVoYkNJZ0ppWWdieUFoUFQwZ0lteHZibWRwZEhWa2FXNWhiQ0lnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpWW14MWNpQmthWEpsWTNScGIyNGdiWFZ6ZENCaVpTQmxhWFJvWlhJZ2JHRjBhWFIxWkdsdVlXd2diM0lnYkc5dVoybDBkV1JwYm1Gc0lTSXBPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdNeXdnZFNBOUlHNWxkeUJ6ZENocWFWdHBYU3dnWXlrc0lHUWdQU0JqTG5WdWFXWnZjbTF6TENCbUlEMGdUR3hiYmwwZ0xTQXhMQ0J0SUQwZ2FYTkdhVzVwZEdVb2Npa2dQeUJOWVhSb0xsQkpJQzhnS0RJZ0tpQm1LU0E2SURJZ0tpQk5ZWFJvTGxCSklDOGdLRElnS2lCd2FTQXRJREVwTENCNElEMGdjaUF2SUcwc0lIWWdQU0JwYzBacGJtbDBaU2h5S1NBL0lERWdLeUJOWVhSb0xtWnNiMjl5S0dnZ0tpQjRLU0E2SUhCcE93b2dJQ0FnSUNBZ0lIWWdQaUJ3YVNBbUppQmpiMjV6YjJ4bExuZGhjbTRvWUhOcFoyMWhVbUZrYVdGdWN5d2dKSHR5ZlN3Z2FYTWdkRzl2SUd4aGNtZGxJR0Z1WkNCM2FXeHNJR05zYVhBc0lHRnpJR2wwSUhKbGNYVmxjM1JsWkNBa2UzWjlJSE5oYlhCc1pYTWdkMmhsYmlCMGFHVWdiV0Y0YVcxMWJTQnBjeUJ6WlhRZ2RHOGdKSHR3YVgxZ0tUc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlGdGRMQ0J3SUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRWdQU0F3T3lCQklEd2djR2s3SUNzclFTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnUVNBdklIZ3NJRWtnUFNCTllYUm9MbVY0Y0NndFRDQXFJRXdnTHlBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWnk1d2RYTm9LRWtwTENCQklEMDlJREFnUHlCd0lDczlJRWtnT2lCQklEd2dkaUFtSmlBb2NDQXJQU0F5SUNvZ1NTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdRVEVnUFNBd095QkJNU0E4SUdjdWJHVnVaM1JvT3lCQk1Tc3JLV2RiUVRGZElEMGdaMXRCTVYwZ0x5QndPd29nSUNBZ0lDQWdJR1F1Wlc1MlRXRndMblpoYkhWbElEMGdaUzUwWlhoMGRYSmxMQ0JrTG5OaGJYQnNaWE11ZG1Gc2RXVWdQU0IyTENCa0xuZGxhV2RvZEhNdWRtRnNkV1VnUFNCbkxDQmtMbXhoZEdsMGRXUnBibUZzTG5aaGJIVmxJRDBnYnlBOVBUMGdJbXhoZEdsMGRXUnBibUZzSWl3Z1lTQW1KaUFvWkM1d2IyeGxRWGhwY3k1MllXeDFaU0E5SUdFcExDQmtMbVJVYUdWMFlTNTJZV3gxWlNBOUlHMHNJR1F1Yldsd1NXNTBMblpoYkhWbElEMGdUVzRnTFNCdU93b2dJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ1RHeGJhVjBzSUhrZ1BTQXpJQ29nVFdGMGFDNXRZWGdvTUN3Z1ZuUWdMU0F5SUNvZ1h5a3NJR0lnUFNBb2FTQTlQVDBnTUNBL0lEQWdPaUF5SUNvZ1ZuUXBJQ3NnTWlBcUlGOGdLaUFvYVNBK0lFMXVJQzBnUldrZ1B5QnBJQzBnVFc0Z0t5QkZhU0E2SURBcE93b2dJQ0FnSUNBZ0lHTnpLSFFzSUhrc0lHSXNJRE1nS2lCZkxDQXlJQ29nWHlrc0lHd3VjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIUXBMQ0JzTG5KbGJtUmxjaWgxTENCSGJ5azdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRnB0S0NrZ2V3b2dJQ0FnYkdWMElITWdQU0JiWFN3Z1pTQTlJRnRkTENCMElEMGdXMTBzSUc0Z1BTQk5ianNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQnZhRHNnYVNzcktYc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlFMWhkR2d1Y0c5M0tESXNJRzRwT3dvZ0lDQWdJQ0FnSUdVdWNIVnphQ2h5S1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SURFZ0x5QnlPd29nSUNBZ0lDQWdJR2tnUGlCTmJpQXRJRVZwSUQ4Z2J5QTlJSE5vVzJrZ0xTQk5iaUFySUVWcElDMGdNVjBnT2lCcElEMDlJREFnSmlZZ0tHOGdQU0F3S1N3Z2RDNXdkWE5vS0c4cE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ01TQXZJQ2h5SUMwZ01Ta3NJR3dnUFNBdFlTQXZJRElzSUdNZ1BTQXhJQ3NnWVNBdklESXNJR2dnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTXNDaUFnSUNBZ0lDQWdJQ0FnSUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdNS0lDQWdJQ0FnSUNCZExDQjFJRDBnTml3Z1pDQTlJRFlzSUdZZ1BTQXpMQ0J0SUQwZ01pd2dlQ0E5SURFc0lIWWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLR1lnS2lCa0lDb2dkU2tzSUdjZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtHMGdLaUJrSUNvZ2RTa3NJSEFnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0hnZ0tpQmtJQ29nZFNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNUlEMGdNRHNnZVNBOElIVTdJSGtyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdlU0FsSURNZ0tpQXlJQzhnTXlBdElERXNJRUVnUFNCNUlENGdNaUEvSURBZ09pQXRNU3dnVENBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkJMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0lnS3lBeUlDOGdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWlBcklESWdMeUF6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVNBcklERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWlBcklESWdMeUF6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVNBcklERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUVnS3lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjJMbk5sZENoTUxDQm1JQ29nWkNBcUlIa3BMQ0JuTG5ObGRDaG9MQ0J0SUNvZ1pDQXFJSGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU1NBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVFvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNCd0xuTmxkQ2hKTENCNElDb2daQ0FxSUhrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCZkxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2dWV1VvZGl3Z1ppa3BMQ0JmTG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2dWV1VvWnl3Z2JTa3BMQ0JmTG5ObGRFRjBkSEpwWW5WMFpTZ2labUZqWlVsdVpHVjRJaXdnYm1WM0lGVmxLSEFzSUhncEtTd2djeTV3ZFhOb0tGOHBMQ0J1SUQ0Z1JXa2dKaVlnYmkwdE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQmZiRzlrVUd4aGJtVnpPaUJ6TEFvZ0lDQWdJQ0FnSUY5emFYcGxURzlrY3pvZ1pTd0tJQ0FnSUNBZ0lDQmZjMmxuYldGek9pQjBDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRWxzS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnYm1WM0lFRjBLRE1nS2lCV2RDd2dNeUFxSUZaMExDQnpLVHNLSUNBZ0lISmxkSFZ5YmlCbExuUmxlSFIxY21VdWJXRndjR2x1WnlBOUlGQnlMQ0JsTG5SbGVIUjFjbVV1Ym1GdFpTQTlJQ0pRVFZKRlRTNWpkV0psVlhZaUxDQmxMbk5qYVhOemIzSlVaWE4wSUQwZ0lUQXNJR1U3Q24wS1puVnVZM1JwYjI0Z1kzTW9jeXdnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnY3k1MmFXVjNjRzl5ZEM1elpYUW9aU3dnZEN3Z2Jpd2dhU2tzSUhNdWMyTnBjM052Y2k1elpYUW9aU3dnZEN3Z2Jpd2dhU2s3Q24wS1puVnVZM1JwYjI0Z0pHMG9jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtITXBMQ0IwSUQwZ2JtVjNJRTBvTUN3Z01Td2dNQ2s3Q2lBZ0lDQnlaWFIxY200Z2JtVjNJRWRwS0hzS0lDQWdJQ0FnSUNCdVlXMWxPaUFpVTNCb1pYSnBZMkZzUjJGMWMzTnBZVzVDYkhWeUlpd0tJQ0FnSUNBZ0lDQmtaV1pwYm1Wek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUc0NklITUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnVkazFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMkZ0Y0d4bGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdkMlZwWjJoMGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHVUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdiR0YwYVhSMVpHbHVZV3c2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUFoTVFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCa1ZHaGxkR0U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUcxcGNFbHVkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0c5c1pVRjRhWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUIwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1ptRW9LU3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dZQW9LQ1FrSmNISmxZMmx6YVc5dUlHMWxaR2wxYlhBZ1pteHZZWFE3Q2drSkNYQnlaV05wYzJsdmJpQnRaV1JwZFcxd0lHbHVkRHNLQ2drSkNYWmhjbmxwYm1jZ2RtVmpNeUIyVDNWMGNIVjBSR2x5WldOMGFXOXVPd29LQ1FrSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1pXNTJUV0Z3T3dvSkNRbDFibWxtYjNKdElHbHVkQ0J6WVcxd2JHVnpPd29KQ1FsMWJtbG1iM0p0SUdac2IyRjBJSGRsYVdkb2RITmJJRzRnWFRzS0NRa0pkVzVwWm05eWJTQmliMjlzSUd4aGRHbDBkV1JwYm1Gc093b0pDUWwxYm1sbWIzSnRJR1pzYjJGMElHUlVhR1YwWVRzS0NRa0pkVzVwWm05eWJTQm1iRzloZENCdGFYQkpiblE3Q2drSkNYVnVhV1p2Y20wZ2RtVmpNeUJ3YjJ4bFFYaHBjenNLQ2drSkNTUjdjR0VvS1gwS0Nna0pDU05rWldacGJtVWdSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWZ29KQ1FramFXNWpiSFZrWlNBOFkzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1MFBnb0tDUWtKZG1Wak15Qm5aWFJUWVcxd2JHVW9JR1pzYjJGMElIUm9aWFJoTENCMlpXTXpJR0Y0YVhNZ0tTQjdDZ29KQ1FrSlpteHZZWFFnWTI5elZHaGxkR0VnUFNCamIzTW9JSFJvWlhSaElDazdDZ2tKQ1Frdkx5QlNiMlJ5YVdkMVpYTW5JR0Y0YVhNdFlXNW5iR1VnY205MFlYUnBiMjRLQ1FrSkNYWmxZek1nYzJGdGNHeGxSR2x5WldOMGFXOXVJRDBnZGs5MWRIQjFkRVJwY21WamRHbHZiaUFxSUdOdmMxUm9aWFJoQ2drSkNRa0pLeUJqY205emN5Z2dZWGhwY3l3Z2RrOTFkSEIxZEVScGNtVmpkR2x2YmlBcElDb2djMmx1S0NCMGFHVjBZU0FwQ2drSkNRa0pLeUJoZUdseklDb2daRzkwS0NCaGVHbHpMQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVJQ2tnS2lBb0lERXVNQ0F0SUdOdmMxUm9aWFJoSUNrN0Nnb0pDUWtKY21WMGRYSnVJR0pwYkdsdVpXRnlRM1ZpWlZWV0tDQmxiblpOWVhBc0lITmhiWEJzWlVScGNtVmpkR2x2Yml3Z2JXbHdTVzUwSUNrN0Nnb0pDUWw5Q2dvSkNRbDJiMmxrSUcxaGFXNG9LU0I3Q2dvSkNRa0pkbVZqTXlCaGVHbHpJRDBnYkdGMGFYUjFaR2x1WVd3Z1B5QndiMnhsUVhocGN5QTZJR055YjNOektDQndiMnhsUVhocGN5d2dkazkxZEhCMWRFUnBjbVZqZEdsdmJpQXBPd29LQ1FrSkNXbG1JQ2dnWVd4c0tDQmxjWFZoYkNnZ1lYaHBjeXdnZG1Wak15Z2dNQzR3SUNrZ0tTQXBJQ2tnZXdvS0NRa0pDUWxoZUdseklEMGdkbVZqTXlnZ2RrOTFkSEIxZEVScGNtVmpkR2x2Ymk1NkxDQXdMakFzSUMwZ2RrOTFkSEIxZEVScGNtVmpkR2x2Ymk1NElDazdDZ29KQ1FrSmZRb0tDUWtKQ1dGNGFYTWdQU0J1YjNKdFlXeHBlbVVvSUdGNGFYTWdLVHNLQ2drSkNRbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0F3TGpBc0lEQXVNQ3dnTUM0d0xDQXhMakFnS1RzS0NRa0pDV2RzWDBaeVlXZERiMnh2Y2k1eVoySWdLejBnZDJWcFoyaDBjMXNnTUNCZElDb2daMlYwVTJGdGNHeGxLQ0F3TGpBc0lHRjRhWE1nS1RzS0Nna0pDUWxtYjNJZ0tDQnBiblFnYVNBOUlERTdJR2tnUENCdU95QnBLeXNnS1NCN0Nnb0pDUWtKQ1dsbUlDZ2dhU0ErUFNCellXMXdiR1Z6SUNrZ2V3b0tDUWtKQ1FrSlluSmxZV3M3Q2dvSkNRa0pDWDBLQ2drSkNRa0pabXh2WVhRZ2RHaGxkR0VnUFNCa1ZHaGxkR0VnS2lCbWJHOWhkQ2dnYVNBcE93b0pDUWtKQ1dkc1gwWnlZV2REYjJ4dmNpNXlaMklnS3owZ2QyVnBaMmgwYzFzZ2FTQmRJQ29nWjJWMFUyRnRjR3hsS0NBdE1TNHdJQ29nZEdobGRHRXNJR0Y0YVhNZ0tUc0tDUWtKQ1FsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUNzOUlIZGxhV2RvZEhOYklHa2dYU0FxSUdkbGRGTmhiWEJzWlNnZ2RHaGxkR0VzSUdGNGFYTWdLVHNLQ2drSkNRbDlDZ29KQ1FsOUNna0pZQ3dLSUNBZ0lDQWdJQ0JpYkdWdVpHbHVaem9nZG00c0NpQWdJQ0FnSUNBZ1pHVndkR2hVWlhOME9pQWhNU3dLSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaE1Rb2dJQ0FnZlNrN0NuMEtablZ1WTNScGIyNGdSR3dvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJRzVsZHlCWUtERXNJREVwT3dvZ0lDQWdjbVYwZFhKdUlHNWxkeUJIYVNoN0NpQWdJQ0FnSUNBZ2JtRnRaVG9nSWtWeGRXbHlaV04wWVc1bmRXeGhjbFJ2UTNWaVpWVldJaXdLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxiblpOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUdWc1UybDZaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJSE1LSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUkZibU52WkdsdVp6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklFaHpXMDUwWFFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHWmhLQ2tzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR0FLQ2drSkNYQnlaV05wYzJsdmJpQnRaV1JwZFcxd0lHWnNiMkYwT3dvSkNRbHdjbVZqYVhOcGIyNGdiV1ZrYVhWdGNDQnBiblE3Q2dvSkNRbDJZWEo1YVc1bklIWmxZek1nZGs5MWRIQjFkRVJwY21WamRHbHZianNLQ2drSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHVnVkazFoY0RzS0NRa0pkVzVwWm05eWJTQjJaV015SUhSbGVHVnNVMmw2WlRzS0Nna0pDU1I3Y0dFb0tYMEtDZ2tKQ1NOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2dvSkNRbDJiMmxrSUcxaGFXNG9LU0I3Q2dvSkNRa0paMnhmUm5KaFowTnZiRzl5SUQwZ2RtVmpOQ2dnTUM0d0xDQXdMakFzSURBdU1Dd2dNUzR3SUNrN0Nnb0pDUWtKZG1Wak15QnZkWFJ3ZFhSRWFYSmxZM1JwYjI0Z1BTQnViM0p0WVd4cGVtVW9JSFpQZFhSd2RYUkVhWEpsWTNScGIyNGdLVHNLQ1FrSkNYWmxZeklnZFhZZ1BTQmxjWFZwY21WamRGVjJLQ0J2ZFhSd2RYUkVhWEpsWTNScGIyNGdLVHNLQ2drSkNRbDJaV015SUdZZ1BTQm1jbUZqZENnZ2RYWWdMeUIwWlhobGJGTnBlbVVnTFNBd0xqVWdLVHNLQ1FrSkNYVjJJQzA5SUdZZ0tpQjBaWGhsYkZOcGVtVTdDZ2tKQ1FsMlpXTXpJSFJzSUQwZ1pXNTJUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0ZEhWeVpUSkVJQ2dnWlc1MlRXRndMQ0IxZGlBcElDa3VjbWRpT3dvSkNRa0pkWFl1ZUNBclBTQjBaWGhsYkZOcGVtVXVlRHNLQ1FrSkNYWmxZek1nZEhJZ1BTQmxiblpOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IwWlhoMGRYSmxNa1FnS0NCbGJuWk5ZWEFzSUhWMklDa2dLUzV5WjJJN0Nna0pDUWwxZGk1NUlDczlJSFJsZUdWc1UybDZaUzU1T3dvSkNRa0pkbVZqTXlCaWNpQTlJR1Z1ZGsxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUhSbGVIUjFjbVV5UkNBb0lHVnVkazFoY0N3Z2RYWWdLU0FwTG5Kbllqc0tDUWtKQ1hWMkxuZ2dMVDBnZEdWNFpXeFRhWHBsTG5nN0Nna0pDUWwyWldNeklHSnNJRDBnWlc1MlRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRkSFZ5WlRKRUlDZ2daVzUyVFdGd0xDQjFkaUFwSUNrdWNtZGlPd29LQ1FrSkNYWmxZek1nZEcwZ1BTQnRhWGdvSUhSc0xDQjBjaXdnWmk1NElDazdDZ2tKQ1FsMlpXTXpJR0p0SUQwZ2JXbDRLQ0JpYkN3Z1luSXNJR1l1ZUNBcE93b0pDUWtKWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUE5SUcxcGVDZ2dkRzBzSUdKdExDQm1MbmtnS1RzS0Nna0pDWDBLQ1FsZ0xBb2dJQ0FnSUNBZ0lHSnNaVzVrYVc1bk9pQjJiaXdLSUNBZ0lDQWdJQ0JrWlhCMGFGUmxjM1E2SUNFeExBb2dJQ0FnSUNBZ0lHUmxjSFJvVjNKcGRHVTZJQ0V4Q2lBZ0lDQjlLVHNLZlFwbWRXNWpkR2x2YmlCR2JDZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCdVpYY2dSMmtvZXdvZ0lDQWdJQ0FnSUc1aGJXVTZJQ0pEZFdKbGJXRndWRzlEZFdKbFZWWWlMQW9nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnVkazFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhSRmJtTnZaR2x1WnpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUVoelcwNTBYUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUdaaEtDa3NDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklHQUtDZ2tKQ1hCeVpXTnBjMmx2YmlCdFpXUnBkVzF3SUdac2IyRjBPd29KQ1Fsd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCcGJuUTdDZ29KQ1FsMllYSjVhVzVuSUhabFl6TWdkazkxZEhCMWRFUnBjbVZqZEdsdmJqc0tDZ2tKQ1hWdWFXWnZjbTBnYzJGdGNHeGxja04xWW1VZ1pXNTJUV0Z3T3dvS0NRa0pKSHR3WVNncGZRb0tDUWtKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKQ1dkc1gwWnlZV2REYjJ4dmNpQTlJR1Z1ZGsxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUhSbGVIUjFjbVZEZFdKbEtDQmxiblpOWVhBc0lIWmxZek1vSUMwZ2RrOTFkSEIxZEVScGNtVmpkR2x2Ymk1NExDQjJUM1YwY0hWMFJHbHlaV04wYVc5dUxubDZJQ2tnS1NBcE93b0tDUWtKZlFvSkNXQXNDaUFnSUNBZ0lDQWdZbXhsYm1ScGJtYzZJSFp1TEFvZ0lDQWdJQ0FnSUdSbGNIUm9WR1Z6ZERvZ0lURXNDaUFnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlHWmhLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHQUtDZ2tKY0hKbFkybHphVzl1SUcxbFpHbDFiWEFnWm14dllYUTdDZ2tKY0hKbFkybHphVzl1SUcxbFpHbDFiWEFnYVc1ME93b0tDUWxoZEhSeWFXSjFkR1VnZG1Wak15QndiM05wZEdsdmJqc0tDUWxoZEhSeWFXSjFkR1VnZG1Wak1pQjFkanNLQ1FsaGRIUnlhV0oxZEdVZ1pteHZZWFFnWm1GalpVbHVaR1Y0T3dvS0NRbDJZWEo1YVc1bklIWmxZek1nZGs5MWRIQjFkRVJwY21WamRHbHZianNLQ2drSkx5OGdVa2dnWTI5dmNtUnBibUYwWlNCemVYTjBaVzA3SUZCTlVrVk5JR1poWTJVdGFXNWtaWGhwYm1jZ1kyOXVkbVZ1ZEdsdmJnb0pDWFpsWXpNZ1oyVjBSR2x5WldOMGFXOXVLQ0IyWldNeUlIVjJMQ0JtYkc5aGRDQm1ZV05sSUNrZ2V3b0tDUWtKZFhZZ1BTQXlMakFnS2lCMWRpQXRJREV1TURzS0Nna0pDWFpsWXpNZ1pHbHlaV04wYVc5dUlEMGdkbVZqTXlnZ2RYWXNJREV1TUNBcE93b0tDUWtKYVdZZ0tDQm1ZV05sSUQwOUlEQXVNQ0FwSUhzS0Nna0pDUWxrYVhKbFkzUnBiMjRnUFNCa2FYSmxZM1JwYjI0dWVubDRPeUF2THlBb0lERXNJSFlzSUhVZ0tTQndiM01nZUFvS0NRa0pmU0JsYkhObElHbG1JQ2dnWm1GalpTQTlQU0F4TGpBZ0tTQjdDZ29KQ1FrSlpHbHlaV04wYVc5dUlEMGdaR2x5WldOMGFXOXVMbmg2ZVRzS0NRa0pDV1JwY21WamRHbHZiaTU0ZWlBcVBTQXRNUzR3T3lBdkx5QW9JQzExTENBeExDQXRkaUFwSUhCdmN5QjVDZ29KQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlESXVNQ0FwSUhzS0Nna0pDUWxrYVhKbFkzUnBiMjR1ZUNBcVBTQXRNUzR3T3lBdkx5QW9JQzExTENCMkxDQXhJQ2tnY0c5eklIb0tDZ2tKQ1gwZ1pXeHpaU0JwWmlBb0lHWmhZMlVnUFQwZ015NHdJQ2tnZXdvS0NRa0pDV1JwY21WamRHbHZiaUE5SUdScGNtVmpkR2x2Ymk1NmVYZzdDZ2tKQ1Fsa2FYSmxZM1JwYjI0dWVIb2dLajBnTFRFdU1Ec2dMeThnS0NBdE1Td2dkaXdnTFhVZ0tTQnVaV2NnZUFvS0NRa0pmU0JsYkhObElHbG1JQ2dnWm1GalpTQTlQU0EwTGpBZ0tTQjdDZ29KQ1FrSlpHbHlaV04wYVc5dUlEMGdaR2x5WldOMGFXOXVMbmg2ZVRzS0NRa0pDV1JwY21WamRHbHZiaTU0ZVNBcVBTQXRNUzR3T3lBdkx5QW9JQzExTENBdE1Td2dkaUFwSUc1bFp5QjVDZ29KQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlEVXVNQ0FwSUhzS0Nna0pDUWxrYVhKbFkzUnBiMjR1ZWlBcVBTQXRNUzR3T3lBdkx5QW9JSFVzSUhZc0lDMHhJQ2tnYm1WbklIb0tDZ2tKQ1gwS0Nna0pDWEpsZEhWeWJpQmthWEpsWTNScGIyNDdDZ29KQ1gwS0Nna0pkbTlwWkNCdFlXbHVLQ2tnZXdvS0NRa0pkazkxZEhCMWRFUnBjbVZqZEdsdmJpQTlJR2RsZEVScGNtVmpkR2x2YmlnZ2RYWXNJR1poWTJWSmJtUmxlQ0FwT3dvSkNRbG5iRjlRYjNOcGRHbHZiaUE5SUhabFl6UW9JSEJ2YzJsMGFXOXVMQ0F4TGpBZ0tUc0tDZ2tKZlFvSllEc0tmUXBtZFc1amRHbHZiaUJ3WVNncElIc0tJQ0FnSUhKbGRIVnliaUJnQ2dvSkNYVnVhV1p2Y20wZ2FXNTBJR2x1Y0hWMFJXNWpiMlJwYm1jN0Nnb0pDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mY0dGeWMxOW1jbUZuYldWdWRENEtDZ2tKZG1Wak5DQnBibkIxZEZSbGVHVnNWRzlNYVc1bFlYSW9JSFpsWXpRZ2RtRnNkV1VnS1NCN0Nnb0pDUWxwWmlBb0lHbHVjSFYwUlc1amIyUnBibWNnUFQwZ01DQXBJSHNLQ2drSkNRbHlaWFIxY200Z2RtRnNkV1U3Q2dvSkNRbDlJR1ZzYzJVZ2V3b0tDUWtKQ1hKbGRIVnliaUJ6VWtkQ1ZHOU1hVzVsWVhJb0lIWmhiSFZsSUNrN0Nnb0pDUWw5Q2dvSkNYMEtDZ2tKZG1Wak5DQmxiblpOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IyWldNMElHTnZiRzl5SUNrZ2V3b0tDUWtKY21WMGRYSnVJR2x1Y0hWMFZHVjRaV3hVYjB4cGJtVmhjaWdnWTI5c2IzSWdLVHNLQ2drSmZRb0pZRHNLZlFwbWRXNWpkR2x2YmlCcWJTaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlHNWxkeUJYWldGclRXRndMQ0IwSUQwZ2JuVnNiRHNLSUNBZ0lHWjFibU4wYVc5dUlHNG9ZU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGhJQ1ltSUdFdWFYTlVaWGgwZFhKbElDWW1JR0V1YVhOU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbElEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR0V1YldGd2NHbHVaeXdnWXlBOUlHd2dQVDA5SUVSeklIeDhJR3dnUFQwOUlFWnpMQ0JvSUQwZ2JDQTlQVDBnUW1rZ2ZId2diQ0E5UFQwZ2VtazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpJSHg4SUdncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsTG1oaGN5aGhLU2tnY21WMGRYSnVJR1V1WjJWMEtHRXBMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JoTG1sdFlXZGxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpJQ1ltSUhVZ0ppWWdkUzVvWldsbmFIUWdQaUF3SUh4OElHZ2dKaVlnZFNBbUppQnBLSFVwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnY3k1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOVBUMGdiblZzYkNBbUppQW9kQ0E5SUc1bGR5QmhhQ2h6S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnWXlBL0lIUXVabkp2YlVWeGRXbHlaV04wWVc1bmRXeGhjaWhoS1NBNklIUXVabkp2YlVOMVltVnRZWEFvWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ObGRDaGhMQ0JtS1N3Z2N5NXpaWFJTWlc1a1pYSlVZWEpuWlhRb1pDa3NJR0V1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUhJcExDQm1MblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQmhPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYVNoaEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQXdMQ0JqSUQwZ05qc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHZ2dQU0F3T3lCb0lEd2dZenNnYUNzcktXRmJhRjBnSVQwOUlIWnZhV1FnTUNBbUppQnNLeXM3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR3dnUFQwOUlHTTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ5S0dFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHRXVkR0Z5WjJWME93b2dJQ0FnSUNBZ0lHd3VjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUhJcE93b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1pTNW5aWFFvYkNrN0NpQWdJQ0FnSUNBZ1l5QWhQVDBnZG05cFpDQXdJQ1ltSUNobExtUmxiR1YwWlNoc0tTd2dZeTVrYVhOd2IzTmxLQ2twT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2J5Z3BJSHNLSUNBZ0lDQWdJQ0JsSUQwZ2JtVjNJRmRsWVd0TllYQXNJSFFnSVQwOUlHNTFiR3dnSmlZZ0tIUXVaR2x6Y0c5elpTZ3BMQ0IwSUQwZ2JuVnNiQ2s3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGREb2diaXdLSUNBZ0lDQWdJQ0JrYVhOd2IzTmxPaUJ2Q2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUZGdEtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2UzMDdDaUFnSUNCbWRXNWpkR2x2YmlCMEtHNHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pWdHVYU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnWlZ0dVhUc0tJQ0FnSUNBZ0lDQnNaWFFnYVRzS0lDQWdJQ0FnSUNCemQybDBZMmdvYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsZEZRa2RNWDJSbGNIUm9YM1JsZUhSMWNtVWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0E5SUhNdVoyVjBSWGgwWlc1emFXOXVLQ0pYUlVKSFRGOWtaWEIwYUY5MFpYaDBkWEpsSWlrZ2ZId2djeTVuWlhSRmVIUmxibk5wYjI0b0lrMVBXbDlYUlVKSFRGOWtaWEIwYUY5MFpYaDBkWEpsSWlrZ2ZId2djeTVuWlhSRmVIUmxibk5wYjI0b0lsZEZRa3RKVkY5WFJVSkhURjlrWlhCMGFGOTBaWGgwZFhKbElpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCekxtZGxkRVY0ZEdWdWMybHZiaWdpUlZoVVgzUmxlSFIxY21WZlptbHNkR1Z5WDJGdWFYTnZkSEp2Y0dsaklpa2dmSHdnY3k1blpYUkZlSFJsYm5OcGIyNG9JazFQV2w5RldGUmZkR1Y0ZEhWeVpWOW1hV3gwWlhKZllXNXBjMjkwY205d2FXTWlLU0I4ZkNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVjBWQ1MwbFVYMFZZVkY5MFpYaDBkWEpsWDJacGJIUmxjbDloYm1semIzUnliM0JwWXlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl6TTNSaklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQU0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzTXpkR01pS1NCOGZDQnpMbWRsZEVWNGRHVnVjMmx2YmlnaVRVOWFYMWRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXpNM1JqSWlrZ2ZId2djeTVuWlhSRmVIUmxibk5wYjI0b0lsZEZRa3RKVkY5WFJVSkhURjlqYjIxd2NtVnpjMlZrWDNSbGVIUjFjbVZmY3pOMFl5SXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5d2RuSjBZeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2N5NW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl3ZG5KMFl5SXBJSHg4SUhNdVoyVjBSWGgwWlc1emFXOXVLQ0pYUlVKTFNWUmZWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzQjJjblJqSWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQnpMbWRsZEVWNGRHVnVjMmx2YmlodUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJibDBnUFNCcExDQnBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JvWVhNNklHWjFibU4wYVc5dUtHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRb2Jpa2dJVDA5SUc1MWJHdzdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JwYm1sME9pQm1kVzVqZEdsdmJpaHVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVhWE5YWldKSFRESWdQeUIwS0NKRldGUmZZMjlzYjNKZlluVm1abVZ5WDJac2IyRjBJaWtnT2lBb2RDZ2lWMFZDUjB4ZlpHVndkR2hmZEdWNGRIVnlaU0lwTENCMEtDSlBSVk5mZEdWNGRIVnlaVjltYkc5aGRDSXBMQ0IwS0NKUFJWTmZkR1Y0ZEhWeVpWOW9ZV3htWDJac2IyRjBJaWtzSUhRb0lrOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFJmYkdsdVpXRnlJaWtzSUhRb0lrOUZVMTl6ZEdGdVpHRnlaRjlrWlhKcGRtRjBhWFpsY3lJcExDQjBLQ0pQUlZOZlpXeGxiV1Z1ZEY5cGJtUmxlRjkxYVc1MElpa3NJSFFvSWs5RlUxOTJaWEowWlhoZllYSnlZWGxmYjJKcVpXTjBJaWtzSUhRb0lrRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1pS1Nrc0lIUW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBYMnhwYm1WaGNpSXBMQ0IwS0NKRldGUmZZMjlzYjNKZlluVm1abVZ5WDJoaGJHWmZabXh2WVhRaUtTd2dkQ2dpVjBWQ1IweGZiWFZzZEdsellXMXdiR1ZrWDNKbGJtUmxjbDkwYjE5MFpYaDBkWEpsSWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0c0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwS0c0cE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhU0E5UFQwZ2JuVnNiQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUNJZ0t5QnVJQ3NnSWlCbGVIUmxibk5wYjI0Z2JtOTBJSE4xY0hCdmNuUmxaQzRpS1N3Z2FUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRXR0S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnZTMwc0lISWdQU0J1WlhjZ1YyVmhhMDFoY0RzS0lDQWdJR1oxYm1OMGFXOXVJRzhvZFNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2RTNTBZWEpuWlhRN0NpQWdJQ0FnSUNBZ1pDNXBibVJsZUNBaFBUMGdiblZzYkNBbUppQmxMbkpsYlc5MlpTaGtMbWx1WkdWNEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMGdhVzRnWkM1aGRIUnlhV0oxZEdWektXVXVjbVZ0YjNabEtHUXVZWFIwY21saWRYUmxjMXR0WFNrN0NpQWdJQ0FnSUNBZ1pDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnYnlrc0lHUmxiR1YwWlNCcFcyUXVhV1JkT3dvZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnY2k1blpYUW9aQ2s3Q2lBZ0lDQWdJQ0FnWmlBbUppQW9aUzV5WlcxdmRtVW9aaWtzSUhJdVpHVnNaWFJsS0dRcEtTd2diaTV5Wld4bFlYTmxVM1JoZEdWelQyWkhaVzl0WlhSeWVTaGtLU3dnWkM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUQwOVBTQWhNQ0FtSmlCa1pXeGxkR1VnWkM1ZmJXRjRTVzV6ZEdGdVkyVkRiM1Z1ZEN3Z2RDNXRaVzF2Y25rdVoyVnZiV1YwY21sbGN5MHRPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWVNoMUxDQmtLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2xiWkM1cFpGMGdQVDA5SUNFd0lIeDhJQ2hrTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCdktTd2dhVnRrTG1sa1hTQTlJQ0V3TENCMExtMWxiVzl5ZVM1blpXOXRaWFJ5YVdWekt5c3BMQ0JrT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JDaDFLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0IxTG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElHbHVJR1FwWlM1MWNHUmhkR1VvWkZ0dFhTd2dNelE1TmpJcE93b2dJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2RTNXRiM0p3YUVGMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdE1TQnBiaUJtS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQm1XMjB4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjJJRDBnTUN3Z1p5QTlJSGd1YkdWdVozUm9PeUIySUR3Z1p6c2dkaXNyS1dVdWRYQmtZWFJsS0hoYmRsMHNJRE0wT1RZeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0hVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlGdGRMQ0JtSUQwZ2RTNXBibVJsZUN3Z2JTQTlJSFV1WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z2VDQTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tHWWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCbUxtRnljbUY1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjRJRDBnWmk1MlpYSnphVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOGdQU0F3TENCNUlEMGdjQzVzWlc1bmRHZzdJRjhnUENCNU95QmZJQ3M5SURNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCd1cxOGdLeUF3WFN3Z1FTQTlJSEJiWHlBcklERmRMQ0JNSUQwZ2NGdGZJQ3NnTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa0xuQjFjMmdvWWl3Z1FTd2dRU3dnVEN3Z1RDd2dZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NERWdQU0J0TG1GeWNtRjVPd29nSUNBZ0lDQWdJQ0FnSUNCNElEMGdiUzUyWlhKemFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4eElEMGdNQ3dnZVRFZ1BTQndNUzVzWlc1bmRHZ2dMeUF6SUMwZ01Uc2dYekVnUENCNU1Uc2dYekVnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWWpFZ1BTQmZNU0FySURBc0lFRXhJRDBnWHpFZ0t5QXhMQ0JNTVNBOUlGOHhJQ3NnTWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRdWNIVnphQ2hpTVN3Z1FURXNJRUV4TENCTU1Td2dUREVzSUdJeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUc1bGR5QW9XV01vWkNrZ1BpQTJOVFV6TlNBL0lGcHpJRG9nV1hNcEtHUXNJREVwT3dvZ0lDQWdJQ0FnSUhZdWRtVnljMmx2YmlBOUlIZzdDaUFnSUNBZ0lDQWdiR1YwSUdjZ1BTQnlMbWRsZENoMUtUc0tJQ0FnSUNBZ0lDQm5JQ1ltSUdVdWNtVnRiM1psS0djcExDQnlMbk5sZENoMUxDQjJLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdnb2RTa2dld29nSUNBZ0lDQWdJR3hsZENCa0lEMGdjaTVuWlhRb2RTazdDaUFnSUNBZ0lDQWdhV1lnS0dRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0IxTG1sdVpHVjRPd29nSUNBZ0lDQWdJQ0FnSUNCbUlDRTlQU0J1ZFd4c0lDWW1JR1F1ZG1WeWMybHZiaUE4SUdZdWRtVnljMmx2YmlBbUppQmpLSFVwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JqS0hVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeUxtZGxkQ2gxS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJoTEFvZ0lDQWdJQ0FnSUhWd1pHRjBaVG9nYkN3S0lDQWdJQ0FnSUNCblpYUlhhWEpsWm5KaGJXVkJkSFJ5YVdKMWRHVTZJR2dLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnWldjb2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCdUxtbHpWMlZpUjB3eUxDQnlPd29nSUNBZ1puVnVZM1JwYjI0Z2J5aGtLU0I3Q2lBZ0lDQWdJQ0FnY2lBOUlHUTdDaUFnSUNCOUNpQWdJQ0JzWlhRZ1lTd2diRHNLSUNBZ0lHWjFibU4wYVc5dUlHTW9aQ2tnZXdvZ0lDQWdJQ0FnSUdFZ1BTQmtMblI1Y0dVc0lHd2dQU0JrTG1KNWRHVnpVR1Z5Uld4bGJXVnVkRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdnb1pDd2daaWtnZXdvZ0lDQWdJQ0FnSUhNdVpISmhkMFZzWlcxbGJuUnpLSElzSUdZc0lHRXNJR1FnS2lCc0tTd2dkQzUxY0dSaGRHVW9aaXdnY2l3Z01TazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIxS0dRc0lHWXNJRzBwSUhzS0lDQWdJQ0FnSUNCcFppQW9iU0E5UFQwZ01Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0I0TENCMk93b2dJQ0FnSUNBZ0lHbG1JQ2hwS1NCNElEMGdjeXdnZGlBOUlDSmtjbUYzUld4bGJXVnVkSE5KYm5OMFlXNWpaV1FpT3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0hnZ1BTQmxMbWRsZENnaVFVNUhURVZmYVc1emRHRnVZMlZrWDJGeWNtRjVjeUlwTENCMklEMGdJbVJ5WVhkRmJHVnRaVzUwYzBsdWMzUmhibU5sWkVGT1IweEZJaXdnZUNBOVBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURWx1WkdWNFpXUkNkV1ptWlhKU1pXNWtaWEpsY2pvZ2RYTnBibWNnVkVoU1JVVXVTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rZ1luVjBJR2hoY21SM1lYSmxJR1J2WlhNZ2JtOTBJSE4xY0hCdmNuUWdaWGgwWlc1emFXOXVJRUZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZUZ0MlhTaHlMQ0JtTENCaExDQmtJQ29nYkN3Z2JTa3NJSFF1ZFhCa1lYUmxLR1lzSUhJc0lHMHBPd29nSUNBZ2ZRb2dJQ0FnZEdocGN5NXpaWFJOYjJSbElEMGdieXdnZEdocGN5NXpaWFJKYm1SbGVDQTlJR01zSUhSb2FYTXVjbVZ1WkdWeUlEMGdhQ3dnZEdocGN5NXlaVzVrWlhKSmJuTjBZVzVqWlhNZ1BTQjFPd3A5Q21aMWJtTjBhVzl1SUhSbktITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2V3b2dJQ0FnSUNBZ0lHZGxiMjFsZEhKcFpYTTZJREFzQ2lBZ0lDQWdJQ0FnZEdWNGRIVnlaWE02SURBS0lDQWdJSDBzSUhRZ1BTQjdDaUFnSUNBZ0lDQWdabkpoYldVNklEQXNDaUFnSUNBZ0lDQWdZMkZzYkhNNklEQXNDaUFnSUNBZ0lDQWdkSEpwWVc1bmJHVnpPaUF3TEFvZ0lDQWdJQ0FnSUhCdmFXNTBjem9nTUN3S0lDQWdJQ0FnSUNCc2FXNWxjem9nTUFvZ0lDQWdmVHNLSUNBZ0lHWjFibU4wYVc5dUlHNG9jaXdnYnl3Z1lTa2dld29nSUNBZ0lDQWdJSE4zYVhSamFDaDBMbU5oYkd4ekt5c3NJRzhwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExuUnlhV0Z1WjJ4bGN5QXJQU0JoSUNvZ0tISWdMeUF6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwTG14cGJtVnpJQ3M5SUdFZ0tpQW9jaUF2SURJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTXpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRdWJHbHVaWE1nS3owZ1lTQXFJQ2h5SUMwZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDNXNhVzVsY3lBclBTQmhJQ29nY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwTG5CdmFXNTBjeUFyUFNCaElDb2djanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweEpibVp2T2lCVmJtdHViM2R1SUdSeVlYY2diVzlrWlRvaUxDQnZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2tvS1NCN0NpQWdJQ0FnSUNBZ2RDNW1jbUZ0WlNzckxDQjBMbU5oYkd4eklEMGdNQ3dnZEM1MGNtbGhibWRzWlhNZ1BTQXdMQ0IwTG5CdmFXNTBjeUE5SURBc0lIUXViR2x1WlhNZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0J0WlcxdmNuazZJR1VzQ2lBZ0lDQWdJQ0FnY21WdVpHVnlPaUIwTEFvZ0lDQWdJQ0FnSUhCeWIyZHlZVzF6T2lCdWRXeHNMQW9nSUNBZ0lDQWdJR0YxZEc5U1pYTmxkRG9nSVRBc0NpQWdJQ0FnSUNBZ2NtVnpaWFE2SUdrc0NpQWdJQ0FnSUNBZ2RYQmtZWFJsT2lCdUNpQWdJQ0I5T3dwOUNuWmhjaUJSY3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzUxYkd3c0lIUWdQU0F4TENCdUlEMGdNU3dnYVNBOUlERXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNTFiR3dwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVhVzFoWjJVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdSaGRHRTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvT2lCcENpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1dFlXZEdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NXRhVzVHYVd4MFpYSWdQU0J5ZEN3Z2RHaHBjeTUzY21Gd1VpQTlJSFowTENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V4TENCMGFHbHpMbVpzYVhCWklEMGdJVEVzSUhSb2FYTXVkVzV3WVdOclFXeHBaMjV0Wlc1MElEMGdNVHNLSUNBZ0lIMEtmVHNLVVhNdWNISnZkRzkwZVhCbExtbHpSR0YwWVZSbGVIUjFjbVV5UkVGeWNtRjVJRDBnSVRBN0NtWjFibU4wYVc5dUlHNW5LSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6V3pCZElDMGdaVnN3WFRzS2ZRcG1kVzVqZEdsdmJpQnBaeWh6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vWlZzeFhTa2dMU0JOWVhSb0xtRmljeWh6V3pGZEtUc0tmUXBtZFc1amRHbHZiaUJPYkNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlERXNJRzRnUFNCbExtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdQeUJsTG1SaGRHRXVZWEp5WVhrZ09pQmxMbUZ5Y21GNU93b2dJQ0FnYmlCcGJuTjBZVzVqWlc5bUlFbHVkRGhCY25KaGVTQS9JSFFnUFNBeE1qY2dPaUJ1SUdsdWMzUmhibU5sYjJZZ1NXNTBNVFpCY25KaGVTQS9JSFFnUFNBek1qYzJOeUE2SUc0Z2FXNXpkR0Z1WTJWdlppQkpiblF6TWtGeWNtRjVJRDhnZENBOUlESXhORGMwT0RNMk5EY2dPaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURTF2Y25Cb2RHRnlaMlYwY3pvZ1ZXNXpkWEJ3YjNKMFpXUWdiVzl5Y0dnZ1lYUjBjbWxpZFhSbElHUmhkR0VnZEhsd1pUb2dJaXdnYmlrc0lITXVaR2wyYVdSbFUyTmhiR0Z5S0hRcE93cDlDbVoxYm1OMGFXOXVJSEpuS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdlMzBzSUdrZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtEZ3BMQ0J5SUQwZ2JtVjNJRmRsWVd0TllYQXNJRzhnUFNCdVpYY2dUU3dnWVNBOUlGdGRPd29nSUNBZ1ptOXlLR3hsZENCaklEMGdNRHNnWXlBOElEZzdJR01yS3lsaFcyTmRJRDBnV3dvZ0lDQWdJQ0FnSUdNc0NpQWdJQ0FnSUNBZ01Bb2dJQ0FnWFRzS0lDQWdJR1oxYm1OMGFXOXVJR3dvWXl3Z2FDd2dkU3dnWkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1l5NXRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVhWE5YWldKSFRESWdQVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnYUM1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjR1YkdWdVozUm9MQ0I0SUQwZ2NpNW5aWFFvYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNElEMDlQU0IyYjJsa0lEQWdmSHdnZUM1amIzVnVkQ0FoUFQwZ2JTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlIZ3VkR1Y0ZEhWeVpTNWthWE53YjNObEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkNBaFBUMGdkbTlwWkNBd0xDQmZJRDBnYUM1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUhrZ1BTQm9MbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXViM0p0WVd3Z2ZId2dXMTBzSUdJZ1BTQm9MbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjR1WTI5MWJuUXNJRUVnUFNCd0lEMDlQU0FoTUNBL0lESWdPaUF4TENCTUlEMGdZaUFxSUVFc0lFa2dQU0F4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVENBK0lHVXViV0Y0VkdWNGRIVnlaVk5wZW1VZ0ppWWdLRWtnUFNCTllYUm9MbU5sYVd3b1RDQXZJR1V1YldGNFZHVjRkSFZ5WlZOcGVtVXBMQ0JNSUQwZ1pTNXRZWGhVWlhoMGRYSmxVMmw2WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdheUE5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvVENBcUlFa2dLaUEwSUNvZ2JTa3NJRUlnUFNCdVpYY2dVWE1vYXl3Z1RDd2dTU3dnYlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ0xtWnZjbTFoZENBOUlHTjBMQ0JDTG5SNWNHVWdQU0J1Yml3Z1FpNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCQklDb2dORHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkeUE5SURBN0lIY2dQQ0J0T3lCM0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnWDF0M1hTd2dSQ0E5SUhsYmQxMHNJRlVnUFNCTUlDb2dTU0FxSURRZ0tpQjNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUmlBOUlEQTdJRVlnUENCRkxtTnZkVzUwT3lCR0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvUlN3Z1Jpa3NJRVV1Ym05eWJXRnNhWHBsWkNBOVBUMGdJVEFnSmlZZ1Rtd29ieXdnUlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlBJRDBnUmlBcUlGQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHdGJWU0FySUU4Z0t5QXdYU0E5SUc4dWVDd2dhMXRWSUNzZ1R5QXJJREZkSUQwZ2J5NTVMQ0JyVzFVZ0t5QlBJQ3NnTWwwZ1BTQnZMbm9zSUd0YlZTQXJJRThnS3lBelhTQTlJREFzSUhBZ1BUMDlJQ0V3SUNZbUlDaHZMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvUkN3Z1Jpa3NJRVF1Ym05eWJXRnNhWHBsWkNBOVBUMGdJVEFnSmlZZ1Rtd29ieXdnUkNrc0lHdGJWU0FySUU4Z0t5QTBYU0E5SUc4dWVDd2dhMXRWSUNzZ1R5QXJJRFZkSUQwZ2J5NTVMQ0JyVzFVZ0t5QlBJQ3NnTmwwZ1BTQnZMbm9zSUd0YlZTQXJJRThnS3lBM1hTQTlJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SUcwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEhWeVpUb2dRaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFYcGxPaUJ1WlhjZ1dDaE1MQ0JKS1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z2NpNXpaWFFvYUN3Z2VDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQXdPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBeElEMGdNRHNnY0RFZ1BDQm1MbXhsYm1kMGFEc2djREVyS3lsMklDczlJR1piY0RGZE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJR2d1Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VZ1B5QXhJRG9nTVNBdElIWTdDaUFnSUNBZ0lDQWdJQ0FnSUdRdVoyVjBWVzVwWm05eWJYTW9LUzV6WlhSV1lXeDFaU2h6TENBaWJXOXljR2hVWVhKblpYUkNZWE5sU1c1bWJIVmxibU5sSWl3Z1p5a3NJR1F1WjJWMFZXNXBabTl5YlhNb0tTNXpaWFJXWVd4MVpTaHpMQ0FpYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklpd2daaWtzSUdRdVoyVjBWVzVwWm05eWJYTW9LUzV6WlhSV1lXeDFaU2h6TENBaWJXOXljR2hVWVhKblpYUnpWR1Y0ZEhWeVpTSXNJSGd1ZEdWNGRIVnlaU3dnZENrc0lHUXVaMlYwVlc1cFptOXliWE1vS1M1elpYUldZV3gxWlNoekxDQWliVzl5Y0doVVlYSm5aWFJ6VkdWNGRIVnlaVk5wZW1VaUxDQjRMbk5wZW1VcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdE1TQTlJR1lnUFQwOUlIWnZhV1FnTUNBL0lEQWdPaUJtTG14bGJtZDBhQ3dnZURFZ1BTQnVXMmd1YVdSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2VERWdQVDA5SUhadmFXUWdNQ0I4ZkNCNE1TNXNaVzVuZEdnZ0lUMDlJRzB4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNE1TQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1TVNBOUlEQTdJSGt4SUR3Z2JURTdJSGt4S3lzcGVERmJlVEZkSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGt4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVXMmd1YVdSZElEMGdlREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1TWlBOUlEQTdJSGt5SUR3Z2JURTdJSGt5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0l4SUQwZ2VERmJlVEpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWpGYk1GMGdQU0I1TWl3Z1lqRmJNVjBnUFNCbVcza3lYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I0TVM1emIzSjBLR2xuS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVNeUE5SURBN0lIa3pJRHdnT0RzZ2VUTXJLeWw1TXlBOElHMHhJQ1ltSUhneFcza3pYVnN4WFNBL0lDaGhXM2t6WFZzd1hTQTlJSGd4VzNrelhWc3dYU3dnWVZ0NU0xMWJNVjBnUFNCNE1WdDVNMTFiTVYwcElEb2dLR0ZiZVROZFd6QmRJRDBnVG5WdFltVnlMazFCV0Y5VFFVWkZYMGxPVkVWSFJWSXNJR0ZiZVROZFd6RmRJRDBnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR0V1YzI5eWRDaHVaeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IyTVNBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQm5NU0E5SUdndWJXOXljR2hCZEhSeWFXSjFkR1Z6TG01dmNtMWhiQ3dnY0RJZ1BTQXdPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhrMElEMGdNRHNnZVRRZ1BDQTRPeUI1TkNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpTWlBOUlHRmJlVFJkTENCQk1TQTlJR0l5V3pCZExDQk1NU0E5SUdJeVd6RmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRVEVnSVQwOUlFNTFiV0psY2k1TlFWaGZVMEZHUlY5SlRsUkZSMFZTSUNZbUlFd3hJRDhnS0hZeElDWW1JR2d1WjJWMFFYUjBjbWxpZFhSbEtDSnRiM0p3YUZSaGNtZGxkQ0lnS3lCNU5Da2dJVDA5SUhZeFcwRXhYU0FtSmlCb0xuTmxkRUYwZEhKcFluVjBaU2dpYlc5eWNHaFVZWEpuWlhRaUlDc2dlVFFzSUhZeFcwRXhYU2tzSUdjeElDWW1JR2d1WjJWMFFYUjBjbWxpZFhSbEtDSnRiM0p3YUU1dmNtMWhiQ0lnS3lCNU5Da2dJVDA5SUdjeFcwRXhYU0FtSmlCb0xuTmxkRUYwZEhKcFluVjBaU2dpYlc5eWNHaE9iM0p0WVd3aUlDc2dlVFFzSUdjeFcwRXhYU2tzSUdsYmVUUmRJRDBnVERFc0lIQXlJQ3M5SUV3eEtTQTZJQ2gyTVNBbUppQm9MbWhoYzBGMGRISnBZblYwWlNnaWJXOXljR2hVWVhKblpYUWlJQ3NnZVRRcElEMDlQU0FoTUNBbUppQm9MbVJsYkdWMFpVRjBkSEpwWW5WMFpTZ2liVzl5Y0doVVlYSm5aWFFpSUNzZ2VUUXBMQ0JuTVNBbUppQm9MbWhoYzBGMGRISnBZblYwWlNnaWJXOXljR2hPYjNKdFlXd2lJQ3NnZVRRcElEMDlQU0FoTUNBbUppQm9MbVJsYkdWMFpVRjBkSEpwWW5WMFpTZ2liVzl5Y0doT2IzSnRZV3dpSUNzZ2VUUXBMQ0JwVzNrMFhTQTlJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZNU0E5SUdndWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVWdQeUF4SURvZ01TQXRJSEF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQmtMbWRsZEZWdWFXWnZjbTF6S0NrdWMyVjBWbUZzZFdVb2N5d2dJbTF2Y25Cb1ZHRnlaMlYwUW1GelpVbHVabXgxWlc1alpTSXNJRjh4S1N3Z1pDNW5aWFJWYm1sbWIzSnRjeWdwTG5ObGRGWmhiSFZsS0hNc0lDSnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1pTENCcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJSFZ3WkdGMFpUb2diQW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJ6WnloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnY2loc0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQnVMbkpsYm1SbGNpNW1jbUZ0WlN3Z2FDQTlJR3d1WjJWdmJXVjBjbmtzSUhVZ1BTQmxMbWRsZENoc0xDQm9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhUzVuWlhRb2RTa2dJVDA5SUdNZ0ppWWdLR1V1ZFhCa1lYUmxLSFVwTENCcExuTmxkQ2gxTENCaktTa3NJR3d1YVhOSmJuTjBZVzVqWldSTlpYTm9JQ1ltSUNoc0xtaGhjMFYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQmhLU0E5UFQwZ0lURWdKaVlnYkM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1lTa3NJSFF1ZFhCa1lYUmxLR3d1YVc1emRHRnVZMlZOWVhSeWFYZ3NJRE0wT1RZeUtTd2diQzVwYm5OMFlXNWpaVU52Ykc5eUlDRTlQU0J1ZFd4c0lDWW1JSFF1ZFhCa1lYUmxLR3d1YVc1emRHRnVZMlZEYjJ4dmNpd2dNelE1TmpJcEtTd2dkVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc4b0tTQjdDaUFnSUNBZ0lDQWdhU0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZU2hzS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCc0xuUmhjbWRsZERzS0lDQWdJQ0FnSUNCakxuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JoS1N3Z2RDNXlaVzF2ZG1Vb1l5NXBibk4wWVc1alpVMWhkSEpwZUNrc0lHTXVhVzV6ZEdGdVkyVkRiMnh2Y2lBaFBUMGdiblZzYkNBbUppQjBMbkpsYlc5MlpTaGpMbWx1YzNSaGJtTmxRMjlzYjNJcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQjFjR1JoZEdVNklISXNDaUFnSUNBZ0lDQWdaR2x6Y0c5elpUb2did29nSUNBZ2ZUc0tmUXAyWVhJZ2JXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklHOTBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdWRXeHNMQ0IwSUQwZ01Td2diaUE5SURFc0lHa2dQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1ZFd4c0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFEb2dhUW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXViV0ZuUm1sc2RHVnlJRDBnY25Rc0lIUm9hWE11YldsdVJtbHNkR1Z5SUQwZ2NuUXNJSFJvYVhNdWQzSmhjRklnUFNCMmRDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Td2dkR2hwY3k1bWJHbHdXU0E5SUNFeExDQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQ0E5SURFN0NpQWdJQ0I5Q24wN0NtMWhMbkJ5YjNSdmRIbHdaUzVwYzBSaGRHRlVaWGgwZFhKbE0wUWdQU0FoTURzS2RtRnlJR3hvSUQwZ2JtVjNJRzkwTENCamFDQTlJRzVsZHlCUmN5d2dhR2dnUFNCdVpYY2diV0VzSUhWb0lEMGdibVYzSUd0cExDQkNiQ0E5SUZ0ZExDQjZiQ0E5SUZ0ZExDQlZiQ0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvTVRZcExDQlBiQ0E5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvT1Nrc0lFaHNJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2cwS1RzS1puVnVZM1JwYjI0Z1Zta29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCeld6QmRPd29nSUNBZ2FXWWdLRzRnUEQwZ01DQjhmQ0J1SUQ0Z01Da2djbVYwZFhKdUlITTdDaUFnSUNCc1pYUWdhU0E5SUdVZ0tpQjBMQ0J5SUQwZ1FteGJhVjA3Q2lBZ0lDQnBaaUFvY2lBOVBUMGdkbTlwWkNBd0lDWW1JQ2h5SUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNocEtTd2dRbXhiYVYwZ1BTQnlLU3dnWlNBaFBUMGdNQ2tnZXdvZ0lDQWdJQ0FnSUc0dWRHOUJjbkpoZVNoeUxDQXdLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBeExDQmhJRDBnTURzZ2J5QWhQVDBnWlRzZ0t5dHZLV0VnS3owZ2RDd2djMXR2WFM1MGIwRnljbUY1S0hJc0lHRXBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSEk3Q24wS1puVnVZM1JwYjI0Z1RYUW9jeXdnWlNrZ2V3b2dJQ0FnYVdZZ0tITXViR1Z1WjNSb0lDRTlQU0JsTG14bGJtZDBhQ2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJSE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1dsbUlDaHpXM1JkSUNFOVBTQmxXM1JkS1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0J5WlhSMWNtNGdJVEE3Q24wS1puVnVZM1JwYjI0Z1gzUW9jeXdnWlNrZ2V3b2dJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYTmJkRjBnUFNCbFczUmRPd3A5Q21aMWJtTjBhVzl1SUV0ektITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdlbXhiWlYwN0NpQWdJQ0IwSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFFnUFNCdVpYY2dTVzUwTXpKQmNuSmhlU2hsS1N3Z2VteGJaVjBnUFNCMEtUc0tJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnSVQwOUlHVTdJQ3NyYmlsMFcyNWRJRDBnY3k1aGJHeHZZMkYwWlZSbGVIUjFjbVZWYm1sMEtDazdDaUFnSUNCeVpYUjFjbTRnZERzS2ZRcG1kVzVqZEdsdmJpQnZaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0IwV3pCZElDRTlQU0JsSUNZbUlDaHpMblZ1YVdadmNtMHhaaWgwYUdsekxtRmtaSElzSUdVcExDQjBXekJkSUQwZ1pTazdDbjBLWm5WdVkzUnBiMjRnWVdjb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ2FXWWdLR1V1ZUNBaFBUMGdkbTlwWkNBd0tTQW9kRnN3WFNBaFBUMGdaUzU0SUh4OElIUmJNVjBnSVQwOUlHVXVlU2tnSmlZZ0tITXVkVzVwWm05eWJUSm1LSFJvYVhNdVlXUmtjaXdnWlM1NExDQmxMbmtwTENCMFd6QmRJRDBnWlM1NExDQjBXekZkSUQwZ1pTNTVLVHNLSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdsbUlDaE5kQ2gwTENCbEtTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lITXVkVzVwWm05eWJUSm1kaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQnNaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0JwWmlBb1pTNTRJQ0U5UFNCMmIybGtJREFwSUNoMFd6QmRJQ0U5UFNCbExuZ2dmSHdnZEZzeFhTQWhQVDBnWlM1NUlIeDhJSFJiTWwwZ0lUMDlJR1V1ZWlrZ0ppWWdLSE11ZFc1cFptOXliVE5tS0hSb2FYTXVZV1JrY2l3Z1pTNTRMQ0JsTG5rc0lHVXVlaWtzSUhSYk1GMGdQU0JsTG5nc0lIUmJNVjBnUFNCbExua3NJSFJiTWwwZ1BTQmxMbm9wT3dvZ0lDQWdaV3h6WlNCcFppQW9aUzV5SUNFOVBTQjJiMmxrSURBcElDaDBXekJkSUNFOVBTQmxMbklnZkh3Z2RGc3hYU0FoUFQwZ1pTNW5JSHg4SUhSYk1sMGdJVDA5SUdVdVlpa2dKaVlnS0hNdWRXNXBabTl5YlRObUtIUm9hWE11WVdSa2Npd2daUzV5TENCbExtY3NJR1V1WWlrc0lIUmJNRjBnUFNCbExuSXNJSFJiTVYwZ1BTQmxMbWNzSUhSYk1sMGdQU0JsTG1JcE93b2dJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdhV1lnS0UxMEtIUXNJR1VwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnY3k1MWJtbG1iM0p0TTJaMktIUm9hWE11WVdSa2Npd2daU2tzSUY5MEtIUXNJR1VwT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUdObktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lHbG1JQ2hsTG5nZ0lUMDlJSFp2YVdRZ01Da2dLSFJiTUYwZ0lUMDlJR1V1ZUNCOGZDQjBXekZkSUNFOVBTQmxMbmtnZkh3Z2RGc3lYU0FoUFQwZ1pTNTZJSHg4SUhSYk0xMGdJVDA5SUdVdWR5a2dKaVlnS0hNdWRXNXBabTl5YlRSbUtIUm9hWE11WVdSa2Npd2daUzU0TENCbExua3NJR1V1ZWl3Z1pTNTNLU3dnZEZzd1hTQTlJR1V1ZUN3Z2RGc3hYU0E5SUdVdWVTd2dkRnN5WFNBOUlHVXVlaXdnZEZzelhTQTlJR1V1ZHlrN0NpQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQnBaaUFvVFhRb2RDd2daU2twSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0J6TG5WdWFXWnZjbTAwWm5Zb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnYUdjb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxMQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN6c0tJQ0FnSUdsbUlDaHVJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNCcFppQW9UWFFvZEN3Z1pTa3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnpMblZ1YVdadmNtMU5ZWFJ5YVhneVpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z1pTa3NJRjkwS0hRc0lHVXBPd29nSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNCcFppQW9UWFFvZEN3Z2Jpa3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQkliQzV6WlhRb2Jpa3NJSE11ZFc1cFptOXliVTFoZEhKcGVESm1kaWgwYUdsekxtRmtaSElzSUNFeExDQkliQ2tzSUY5MEtIUXNJRzRwT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUhWbktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aU3dnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNCcFppQW9iaUE5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRTEwS0hRc0lHVXBLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdjeTUxYm1sbWIzSnRUV0YwY21sNE0yWjJLSFJvYVhNdVlXUmtjaXdnSVRFc0lHVXBMQ0JmZENoMExDQmxLVHNLSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ2FXWWdLRTEwS0hRc0lHNHBLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdUMnd1YzJWMEtHNHBMQ0J6TG5WdWFXWnZjbTFOWVhSeWFYZ3pabllvZEdocGN5NWhaR1J5TENBaE1Td2dUMndwTENCZmRDaDBMQ0J1S1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCa1p5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1VzSUc0Z1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ2FXWWdLRzRnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hOZENoMExDQmxLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSE11ZFc1cFptOXliVTFoZEhKcGVEUm1kaWgwYUdsekxtRmtaSElzSUNFeExDQmxLU3dnWDNRb2RDd2daU2s3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hOZENoMExDQnVLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJRlZzTG5ObGRDaHVLU3dnY3k1MWJtbG1iM0p0VFdGMGNtbDROR1oyS0hSb2FYTXVZV1JrY2l3Z0lURXNJRlZzS1N3Z1gzUW9kQ3dnYmlrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1ptY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdkRnN3WFNBaFBUMGdaU0FtSmlBb2N5NTFibWxtYjNKdE1Xa29kR2hwY3k1aFpHUnlMQ0JsS1N3Z2RGc3dYU0E5SUdVcE93cDlDbVoxYm1OMGFXOXVJSEJuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUUxMEtIUXNJR1VwSUh4OElDaHpMblZ1YVdadmNtMHlhWFlvZEdocGN5NWhaR1J5TENCbEtTd2dYM1FvZEN3Z1pTa3BPd3A5Q21aMWJtTjBhVzl1SUcxbktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lFMTBLSFFzSUdVcElIeDhJQ2h6TG5WdWFXWnZjbTB6YVhZb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2twT3dwOUNtWjFibU4wYVc5dUlHZG5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJRTEwS0hRc0lHVXBJSHg4SUNoekxuVnVhV1p2Y20wMGFYWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrcE93cDlDbVoxYm1OMGFXOXVJSGhuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUhSYk1GMGdJVDA5SUdVZ0ppWWdLSE11ZFc1cFptOXliVEYxYVNoMGFHbHpMbUZrWkhJc0lHVXBMQ0IwV3pCZElEMGdaU2s3Q24wS1puVnVZM1JwYjI0Z2VXY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdUWFFvZEN3Z1pTa2dmSHdnS0hNdWRXNXBabTl5YlRKMWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrcE93cDlDbVoxYm1OMGFXOXVJSFpuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUUxMEtIUXNJR1VwSUh4OElDaHpMblZ1YVdadmNtMHpkV2wyS0hSb2FYTXVZV1JrY2l3Z1pTa3NJRjkwS0hRc0lHVXBLVHNLZlFwbWRXNWpkR2x2YmlCZlp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1U3Q2lBZ0lDQk5kQ2gwTENCbEtTQjhmQ0FvY3k1MWJtbG1iM0p0TkhWcGRpaDBhR2x6TG1Ga1pISXNJR1VwTENCZmRDaDBMQ0JsS1NrN0NuMEtablZ1WTNScGIyNGdUV2NvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1OaFkyaGxMQ0JwSUQwZ2RDNWhiR3h2WTJGMFpWUmxlSFIxY21WVmJtbDBLQ2s3Q2lBZ0lDQnVXekJkSUNFOVBTQnBJQ1ltSUNoekxuVnVhV1p2Y20weGFTaDBhR2x6TG1Ga1pISXNJR2twTENCdVd6QmRJRDBnYVNrc0lIUXVjMkZtWlZObGRGUmxlSFIxY21VeVJDaGxJSHg4SUd4b0xDQnBLVHNLZlFwbWRXNWpkR2x2YmlCaVp5aHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMkZqYUdVc0lHa2dQU0IwTG1Gc2JHOWpZWFJsVkdWNGRIVnlaVlZ1YVhRb0tUc0tJQ0FnSUc1Yk1GMGdJVDA5SUdrZ0ppWWdLSE11ZFc1cFptOXliVEZwS0hSb2FYTXVZV1JrY2l3Z2FTa3NJRzViTUYwZ1BTQnBLU3dnZEM1elpYUlVaWGgwZFhKbE0wUW9aU0I4ZkNCb2FDd2dhU2s3Q24wS1puVnVZM1JwYjI0Z2QyY29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU5oWTJobExDQnBJRDBnZEM1aGJHeHZZMkYwWlZSbGVIUjFjbVZWYm1sMEtDazdDaUFnSUNCdVd6QmRJQ0U5UFNCcElDWW1JQ2h6TG5WdWFXWnZjbTB4YVNoMGFHbHpMbUZrWkhJc0lHa3BMQ0J1V3pCZElEMGdhU2tzSUhRdWMyRm1aVk5sZEZSbGVIUjFjbVZEZFdKbEtHVWdmSHdnZFdnc0lHa3BPd3A5Q21aMWJtTjBhVzl1SUZObktITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWpZV05vWlN3Z2FTQTlJSFF1WVd4c2IyTmhkR1ZVWlhoMGRYSmxWVzVwZENncE93b2dJQ0FnYmxzd1hTQWhQVDBnYVNBbUppQW9jeTUxYm1sbWIzSnRNV2tvZEdocGN5NWhaR1J5TENCcEtTd2dibHN3WFNBOUlHa3BMQ0IwTG5ObGRGUmxlSFIxY21VeVJFRnljbUY1S0dVZ2ZId2dZMmdzSUdrcE93cDlDbVoxYm1OMGFXOXVJRlJuS0hNcElIc0tJQ0FnSUhOM2FYUmphQ2h6S1hzS0lDQWdJQ0FnSUNCallYTmxJRFV4TWpZNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOalkwT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lXYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJOVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUd4bk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qWTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjME9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhR2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTlRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIVm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOelk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCa1p6c0tJQ0FnSUNBZ0lDQmpZWE5sSURVeE1qUTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNRG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdabk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qYzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhCbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUcxbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qazZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNem9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdkbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSGhuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjVaenNLSUNBZ0lDQWdJQ0JqWVhObElETTJNamsxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RtYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY5bk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56ZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qRTVPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNams0T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TURZNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZNE1qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTFuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnprNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU9Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16QTNPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWW1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZNE1Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16QXdPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNRGc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TXpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIZG5Pd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPRGs2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13TXpvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpFeE9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9USTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJUWnpzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCRlp5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTB4Wm5Zb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCQlp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRlpwS0dVc0lIUm9hWE11YzJsNlpTd2dNaWs3Q2lBZ0lDQnpMblZ1YVdadmNtMHlabllvZEdocGN5NWhaR1J5TENCMEtUc0tmUXBtZFc1amRHbHZiaUJEWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlGWnBLR1VzSUhSb2FYTXVjMmw2WlN3Z015azdDaUFnSUNCekxuVnVhV1p2Y20welpuWW9kR2hwY3k1aFpHUnlMQ0IwS1RzS2ZRcG1kVzVqZEdsdmJpQk1aeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUZacEtHVXNJSFJvYVhNdWMybDZaU3dnTkNrN0NpQWdJQ0J6TG5WdWFXWnZjbTAwWm5Zb2RHaHBjeTVoWkdSeUxDQjBLVHNLZlFwbWRXNWpkR2x2YmlCU1p5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRlpwS0dVc0lIUm9hWE11YzJsNlpTd2dOQ2s3Q2lBZ0lDQnpMblZ1YVdadmNtMU5ZWFJ5YVhneVpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z2RDazdDbjBLWm5WdVkzUnBiMjRnVUdjb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQldhU2hsTENCMGFHbHpMbk5wZW1Vc0lEa3BPd29nSUNBZ2N5NTFibWxtYjNKdFRXRjBjbWw0TTJaMktIUm9hWE11WVdSa2Npd2dJVEVzSUhRcE93cDlDbVoxYm1OMGFXOXVJRWxuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1Zta29aU3dnZEdocGN5NXphWHBsTENBeE5pazdDaUFnSUNCekxuVnVhV1p2Y20xTllYUnlhWGcwWm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnZENrN0NuMEtablZ1WTNScGIyNGdSR2NvY3l3Z1pTa2dld29nSUNBZ2N5NTFibWxtYjNKdE1XbDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdSbWNvY3l3Z1pTa2dld29nSUNBZ2N5NTFibWxtYjNKdE1tbDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdUbWNvY3l3Z1pTa2dld29nSUNBZ2N5NTFibWxtYjNKdE0ybDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdRbWNvY3l3Z1pTa2dld29nSUNBZ2N5NTFibWxtYjNKdE5HbDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdlbWNvY3l3Z1pTa2dld29nSUNBZ2N5NTFibWxtYjNKdE1YVnBkaWgwYUdsekxtRmtaSElzSUdVcE93cDlDbVoxYm1OMGFXOXVJRlZuS0hNc0lHVXBJSHNLSUNBZ0lITXVkVzVwWm05eWJUSjFhWFlvZEdocGN5NWhaR1J5TENCbEtUc0tmUXBtZFc1amRHbHZiaUJQWnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMHpkV2wyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnU0djb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnROSFZwZGloMGFHbHpMbUZrWkhJc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUd0bktITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnWlM1c1pXNW5kR2dzSUdrZ1BTQkxjeWgwTENCdUtUc0tJQ0FnSUhNdWRXNXBabTl5YlRGcGRpaDBhR2x6TG1Ga1pISXNJR2twT3dvZ0lDQWdabTl5S0d4bGRDQnlJRDBnTURzZ2NpQWhQVDBnYmpzZ0t5dHlLWFF1YzJGbVpWTmxkRlJsZUhSMWNtVXlSQ2hsVzNKZElIeDhJR3hvTENCcFczSmRLVHNLZlFwbWRXNWpkR2x2YmlCSFp5aHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUdVdWJHVnVaM1JvTENCcElEMGdTM01vZEN3Z2JpazdDaUFnSUNCekxuVnVhV1p2Y20weGFYWW9kR2hwY3k1aFpHUnlMQ0JwS1RzS0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdJVDA5SUc0N0lDc3JjaWwwTG5ObGRGUmxlSFIxY21VelJDaGxXM0pkSUh4OElHaG9MQ0JwVzNKZEtUc0tmUXBtZFc1amRHbHZiaUJXWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJR1V1YkdWdVozUm9MQ0JwSUQwZ1MzTW9kQ3dnYmlrN0NpQWdJQ0J6TG5WdWFXWnZjbTB4YVhZb2RHaHBjeTVoWkdSeUxDQnBLVHNLSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ0lUMDlJRzQ3SUNzcmNpbDBMbk5oWm1WVFpYUlVaWGgwZFhKbFEzVmlaU2hsVzNKZElIeDhJSFZvTENCcFczSmRLVHNLZlFwbWRXNWpkR2x2YmlCWFp5aHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUdVdWJHVnVaM1JvTENCcElEMGdTM01vZEN3Z2JpazdDaUFnSUNCekxuVnVhV1p2Y20weGFYWW9kR2hwY3k1aFpHUnlMQ0JwS1RzS0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdJVDA5SUc0N0lDc3JjaWwwTG5ObGRGUmxlSFIxY21VeVJFRnljbUY1S0dWYmNsMGdmSHdnWTJnc0lHbGJjbDBwT3dwOUNtWjFibU4wYVc5dUlIRm5LSE1wSUhzS0lDQWdJSE4zYVhSamFDaHpLWHNLSUNBZ0lDQWdJQ0JqWVhObElEVXhNalk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRlp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qWTBPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUVdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk5Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRU5uT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpZNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk1aenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOamMwT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VtYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNOVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZCbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56WTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJKWnpzS0lDQWdJQ0FnSUNCallYTmxJRFV4TWpRNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRVJuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpjNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRVpuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM01qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRTVuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmprNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM016b0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRUpuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdOVEV5TlRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIcG5Pd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCVlp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVDJjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRWhuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpFNU9Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazRPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNRFk2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFk0TWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHdG5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOems2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1T1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpBM09nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSMmM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFk0TURvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpBd09nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVNem9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZabk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9EazZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qTXdNem9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekV4T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlhaenNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJZWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0IwYUdsekxtbGtJRDBnY3l3Z2RHaHBjeTVoWkdSeUlEMGdkQ3dnZEdocGN5NWpZV05vWlNBOUlGdGRMQ0IwYUdsekxuTmxkRlpoYkhWbElEMGdWR2NvWlM1MGVYQmxLVHNLZlFwbWRXNWpkR2x2YmlCa2FDaHpMQ0JsTENCMEtTQjdDaUFnSUNCMGFHbHpMbWxrSUQwZ2N5d2dkR2hwY3k1aFpHUnlJRDBnZEN3Z2RHaHBjeTVqWVdOb1pTQTlJRnRkTENCMGFHbHpMbk5wZW1VZ1BTQmxMbk5wZW1Vc0lIUm9hWE11YzJWMFZtRnNkV1VnUFNCeFp5aGxMblI1Y0dVcE93cDlDbVJvTG5CeWIzUnZkSGx3WlM1MWNHUmhkR1ZEWVdOb1pTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lITWdhVzV6ZEdGdVkyVnZaaUJHYkc5aGRETXlRWEp5WVhrZ0ppWWdaUzVzWlc1bmRHZ2dJVDA5SUhNdWJHVnVaM1JvSUNZbUlDaDBhR2x6TG1OaFkyaGxJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2h6TG14bGJtZDBhQ2twTENCZmRDaGxMQ0J6S1RzS2ZUc0tablZ1WTNScGIyNGdabWdvY3lrZ2V3b2dJQ0FnZEdocGN5NXBaQ0E5SUhNc0lIUm9hWE11YzJWeElEMGdXMTBzSUhSb2FYTXViV0Z3SUQwZ2UzMDdDbjBLWm1ndWNISnZkRzkwZVhCbExuTmxkRlpoYkhWbElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbk5sY1RzS0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0J1TG14bGJtZDBhRHNnYVNBaFBUMGdjanNnS3l0cEtYc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNWJhVjA3Q2lBZ0lDQWdJQ0FnYnk1elpYUldZV3gxWlNoekxDQmxXMjh1YVdSZExDQjBLVHNLSUNBZ0lIMEtmVHNLZG1GeUlGZHZJRDBnTHloY2R5c3BLRnhkS1Q4b1hGdDhYQzRwUHk5bk93cG1kVzVqZEdsdmJpQnJiQ2h6TENCbEtTQjdDaUFnSUNCekxuTmxjUzV3ZFhOb0tHVXBMQ0J6TG0xaGNGdGxMbWxrWFNBOUlHVTdDbjBLWm5WdVkzUnBiMjRnU21jb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J6TG01aGJXVXNJR2tnUFNCdUxteGxibWQwYURzS0lDQWdJR1p2Y2loWGJ5NXNZWE4wU1c1a1pYZ2dQU0F3T3pzcGV3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1YyOHVaWGhsWXlodUtTd2dieUE5SUZkdkxteGhjM1JKYm1SbGVDd2dZU0E5SUhKYk1WMHNJR3dnUFNCeVd6SmRJRDA5UFNBaVhTSXNJR01nUFNCeVd6TmRPd29nSUNBZ0lDQWdJR2xtSUNoc0lDWW1JQ2hoSUQwZ1lTQjhJREFwTENCaklEMDlQU0IyYjJsa0lEQWdmSHdnWXlBOVBUMGdJbHNpSUNZbUlHOGdLeUF5SUQwOVBTQnBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHdHNLSFFzSUdNZ1BUMDlJSFp2YVdRZ01DQS9JRzVsZHlCWVp5aGhMQ0J6TENCbEtTQTZJRzVsZHlCa2FDaGhMQ0J6TENCbEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnZEM1dFlYQmJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVWdQVDA5SUhadmFXUWdNQ0FtSmlBb2RTQTlJRzVsZHlCbWFDaGhLU3dnYTJ3b2RDd2dkU2twTENCMElEMGdkVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnWW00b2N5d2daU2tnZXdvZ0lDQWdkR2hwY3k1elpYRWdQU0JiWFN3Z2RHaHBjeTV0WVhBZ1BTQjdmVHNLSUNBZ0lHeGxkQ0IwSUQwZ2N5NW5aWFJRY205bmNtRnRVR0Z5WVcxbGRHVnlLR1VzSURNMU56RTRLVHNLSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQjBPeUFySzI0cGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2N5NW5aWFJCWTNScGRtVlZibWxtYjNKdEtHVXNJRzRwTENCeUlEMGdjeTVuWlhSVmJtbG1iM0p0VEc5allYUnBiMjRvWlN3Z2FTNXVZVzFsS1RzS0lDQWdJQ0FnSUNCS1p5aHBMQ0J5TENCMGFHbHpLVHNLSUNBZ0lIMEtmUXBpYmk1d2NtOTBiM1I1Y0dVdWMyVjBWbUZzZFdVZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlIUm9hWE11YldGd1cyVmRPd29nSUNBZ2FTQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWMyVjBWbUZzZFdVb2N5d2dkQ3dnYmlrN0NuMDdDbUp1TG5CeWIzUnZkSGx3WlM1elpYUlBjSFJwYjI1aGJDQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ1pWdDBYVHNLSUNBZ0lHNGdJVDA5SUhadmFXUWdNQ0FtSmlCMGFHbHpMbk5sZEZaaGJIVmxLSE1zSUhRc0lHNHBPd3A5T3dwaWJpNTFjR3h2WVdRZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdaUzVzWlc1bmRHZzdJR2tnSVQwOUlISTdJQ3NyYVNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbFcybGRMQ0JoSUQwZ2RGdHZMbWxrWFRzS0lDQWdJQ0FnSUNCaExtNWxaV1J6VlhCa1lYUmxJQ0U5UFNBaE1TQW1KaUJ2TG5ObGRGWmhiSFZsS0hNc0lHRXVkbUZzZFdVc0lHNHBPd29nSUNBZ2ZRcDlPd3BpYmk1elpYRlhhWFJvVm1Gc2RXVWdQU0JtZFc1amRHbHZiaWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhNdWJHVnVaM1JvT3lCdUlDRTlQU0JwT3lBcksyNHBld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdjMXR1WFRzS0lDQWdJQ0FnSUNCeUxtbGtJR2x1SUdVZ0ppWWdkQzV3ZFhOb0tISXBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSFE3Q24wN0NtWjFibU4wYVc5dUlFZHNLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2N5NWpjbVZoZEdWVGFHRmtaWElvWlNrN0NpQWdJQ0J5WlhSMWNtNGdjeTV6YUdGa1pYSlRiM1Z5WTJVb2Jpd2dkQ2tzSUhNdVkyOXRjR2xzWlZOb1lXUmxjaWh1S1N3Z2Jqc0tmUXAyWVhJZ1dXY2dQU0F3T3dwbWRXNWpkR2x2YmlCYVp5aHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlITXVjM0JzYVhRb1lBcGdLVHNLSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQmxMbXhsYm1kMGFEc2dkQ3NyS1dWYmRGMGdQU0IwSUNzZ01TQXJJQ0k2SUNJZ0t5QmxXM1JkT3dvZ0lDQWdjbVYwZFhKdUlHVXVhbTlwYmloZ0NtQXBPd3A5Q21aMWJtTjBhVzl1SUhCb0tITXBJSHNLSUNBZ0lITjNhWFJqYUNoektYc0tJQ0FnSUNBZ0lDQmpZWE5sSUU1ME9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJa3hwYm1WaGNpSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlLQ0IyWVd4MVpTQXBJZ29nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHTmhjMlVnVDJrNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWljMUpIUWlJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaUtDQjJZV3gxWlNBcElnb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVUhKdlozSmhiVG9nVlc1emRYQndiM0owWldRZ1pXNWpiMlJwYm1jNklpd2djeWtzSUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNKTWFXNWxZWElpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSWlnZ2RtRnNkV1VnS1NJS0lDQWdJQ0FnSUNBZ0lDQWdYVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJXYkNoekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSE11WjJWMFUyaGhaR1Z5VUdGeVlXMWxkR1Z5S0dVc0lETTFOekV6S1N3Z2FTQTlJSE11WjJWMFUyaGhaR1Z5U1c1bWIweHZaeWhsS1M1MGNtbHRLQ2s3Q2lBZ0lDQnlaWFIxY200Z2JpQW1KaUJwSUQwOVBTQWlJaUEvSUNJaUlEb2dkQzUwYjFWd2NHVnlRMkZ6WlNncElDc2dZQW9LWUNBcklHa2dLeUJnQ2dwZ0lDc2dXbWNvY3k1blpYUlRhR0ZrWlhKVGIzVnlZMlVvWlNrcE93cDlDbVoxYm1OMGFXOXVJRVJ1S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2NHZ29aU2s3Q2lBZ0lDQnlaWFIxY200Z0luWmxZelFnSWlBcklITWdLeUFpS0NCMlpXTTBJSFpoYkhWbElDa2dleUJ5WlhSMWNtNGdJaUFySUhSYk1GMGdLeUFpVkc5TWFXNWxZWElpSUNzZ2RGc3hYU0FySUNJN0lIMGlPd3A5Q21aMWJtTjBhVzl1SUNSbktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdjR2dvWlNrN0NpQWdJQ0J5WlhSMWNtNGdJblpsWXpRZ0lpQXJJSE1nS3lBaUtDQjJaV00wSUhaaGJIVmxJQ2tnZXlCeVpYUjFjbTRnVEdsdVpXRnlWRzhpSUNzZ2RGc3dYU0FySUhSYk1WMGdLeUFpT3lCOUlqc0tmUXBtZFc1amRHbHZiaUJxWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZERzS0lDQWdJSE4zYVhSamFDaGxLWHNLSUNBZ0lDQWdJQ0JqWVhObElFNTFPZ29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdJa3hwYm1WaGNpSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ1FuVTZDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQWlVbVZwYm1oaGNtUWlPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JqWVhObElIcDFPZ29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdJazl3ZEdsdGFYcGxaRU5wYm1WdmJpSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ1ZYVTZDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQWlRVU5GVTBacGJHMXBZeUk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdUM1U2Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0FpUTNWemRHOXRJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZCeWIyZHlZVzA2SUZWdWMzVndjRzl5ZEdWa0lIUnZibVZOWVhCd2FXNW5PaUlzSUdVcExDQjBJRDBnSWt4cGJtVmhjaUk3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnSW5abFl6TWdJaUFySUhNZ0t5QWlLQ0IyWldNeklHTnZiRzl5SUNrZ2V5QnlaWFIxY200Z0lpQXJJSFFnS3lBaVZHOXVaVTFoY0hCcGJtY29JR052Ykc5eUlDazdJSDBpT3dwOUNtWjFibU4wYVc5dUlGRm5LSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdjeTVsZUhSbGJuTnBiMjVFWlhKcGRtRjBhWFpsY3lCOGZDQnpMbVZ1ZGsxaGNFTjFZbVZWVmlCOGZDQnpMbUoxYlhCTllYQWdmSHdnY3k1MFlXNW5aVzUwVTNCaFkyVk9iM0p0WVd4TllYQWdmSHdnY3k1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ2ZId2djeTVtYkdGMFUyaGhaR2x1WnlCOGZDQnpMbk5vWVdSbGNrbEVJRDA5UFNBaWNHaDVjMmxqWVd3aUlEOGdJaU5sZUhSbGJuTnBiMjRnUjB4ZlQwVlRYM04wWVc1a1lYSmtYMlJsY21sMllYUnBkbVZ6SURvZ1pXNWhZbXhsSWlBNklDSWlMQW9nSUNBZ0lDQWdJQ2h6TG1WNGRHVnVjMmx2YmtaeVlXZEVaWEIwYUNCOGZDQnpMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJcElDWW1JSE11Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVHY21GblJHVndkR2dnUHlBaUkyVjRkR1Z1YzJsdmJpQkhURjlGV0ZSZlpuSmhaMTlrWlhCMGFDQTZJR1Z1WVdKc1pTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCekxtVjRkR1Z1YzJsdmJrUnlZWGRDZFdabVpYSnpJQ1ltSUhNdWNtVnVaR1Z5WlhKRmVIUmxibk5wYjI1RWNtRjNRblZtWm1WeWN5QS9JQ0lqWlhoMFpXNXphVzl1SUVkTVgwVllWRjlrY21GM1gySjFabVpsY25NZ09pQnlaWEYxYVhKbElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUNoekxtVjRkR1Z1YzJsdmJsTm9ZV1JsY2xSbGVIUjFjbVZNVDBRZ2ZId2djeTVsYm5aTllYQWdmSHdnY3k1MGNtRnVjMjFwYzNOcGIyNHBJQ1ltSUhNdWNtVnVaR1Z5WlhKRmVIUmxibk5wYjI1VGFHRmtaWEpVWlhoMGRYSmxURzlrSUQ4Z0lpTmxlSFJsYm5OcGIyNGdSMHhmUlZoVVgzTm9ZV1JsY2w5MFpYaDBkWEpsWDJ4dlpDQTZJR1Z1WVdKc1pTSWdPaUFpSWdvZ0lDQWdYUzVtYVd4MFpYSW9jbklwTG1wdmFXNG9ZQXBnS1RzS2ZRcG1kVzVqZEdsdmJpQkxaeWh6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJRnRkT3dvZ0lDQWdabTl5S0d4bGRDQjBJR2x1SUhNcGV3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2MxdDBYVHNLSUNBZ0lDQWdJQ0J1SUNFOVBTQWhNU0FtSmlCbExuQjFjMmdvSWlOa1pXWnBibVVnSWlBcklIUWdLeUFpSUNJZ0t5QnVLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsTG1wdmFXNG9ZQXBnS1RzS2ZRcG1kVzVqZEdsdmJpQmxlQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUh0OUxDQnVJRDBnY3k1blpYUlFjbTluY21GdFVHRnlZVzFsZEdWeUtHVXNJRE0xTnpJeEtUc0tJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQTdJR2tnUENCdU95QnBLeXNwZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnY3k1blpYUkJZM1JwZG1WQmRIUnlhV0lvWlN3Z2FTa3NJRzhnUFNCeUxtNWhiV1VzSUdFZ1BTQXhPd29nSUNBZ0lDQWdJSEl1ZEhsd1pTQTlQVDBnTXpVMk56UWdKaVlnS0dFZ1BTQXlLU3dnY2k1MGVYQmxJRDA5UFNBek5UWTNOU0FtSmlBb1lTQTlJRE1wTENCeUxuUjVjR1VnUFQwOUlETTFOamMySUNZbUlDaGhJRDBnTkNrc0lIUmJiMTBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklISXVkSGx3WlN3S0lDQWdJQ0FnSUNBZ0lDQWdiRzlqWVhScGIyNDZJSE11WjJWMFFYUjBjbWxpVEc5allYUnBiMjRvWlN3Z2J5a3NDaUFnSUNBZ0lDQWdJQ0FnSUd4dlkyRjBhVzl1VTJsNlpUb2dZUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZERzS2ZRcG1kVzVqZEdsdmJpQnljaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdjeUFoUFQwZ0lpSTdDbjBLWm5WdVkzUnBiMjRnVjJ3b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXVjbVZ3YkdGalpTZ3ZUbFZOWDBSSlVsOU1TVWRJVkZNdlp5d2daUzV1ZFcxRWFYSk1hV2RvZEhNcExuSmxjR3hoWTJVb0wwNVZUVjlUVUU5VVgweEpSMGhVVXk5bkxDQmxMbTUxYlZOd2IzUk1hV2RvZEhNcExuSmxjR3hoWTJVb0wwNVZUVjlTUlVOVVgwRlNSVUZmVEVsSFNGUlRMMmNzSUdVdWJuVnRVbVZqZEVGeVpXRk1hV2RvZEhNcExuSmxjR3hoWTJVb0wwNVZUVjlRVDBsT1ZGOU1TVWRJVkZNdlp5d2daUzV1ZFcxUWIybHVkRXhwWjJoMGN5a3VjbVZ3YkdGalpTZ3ZUbFZOWDBoRlRVbGZURWxIU0ZSVEwyY3NJR1V1Ym5WdFNHVnRhVXhwWjJoMGN5a3VjbVZ3YkdGalpTZ3ZUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUTDJjc0lHVXViblZ0UkdseVRHbG5hSFJUYUdGa2IzZHpLUzV5WlhCc1lXTmxLQzlPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVEwyY3NJR1V1Ym5WdFUzQnZkRXhwWjJoMFUyaGhaRzkzY3lrdWNtVndiR0ZqWlNndlRsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU12Wnl3Z1pTNXVkVzFRYjJsdWRFeHBaMmgwVTJoaFpHOTNjeWs3Q24wS1puVnVZM1JwYjI0Z2NXd29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE11Y21Wd2JHRmpaU2d2VGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXk5bkxDQmxMbTUxYlVOc2FYQndhVzVuVUd4aGJtVnpLUzV5WlhCc1lXTmxLQzlWVGtsUFRsOURURWxRVUVsT1IxOVFURUZPUlZNdlp5d2daUzV1ZFcxRGJHbHdjR2x1WjFCc1lXNWxjeUF0SUdVdWJuVnRRMnhwY0VsdWRHVnljMlZqZEdsdmJpazdDbjBLZG1GeUlIUjRJRDBnTDE1YklGeDBYU29qYVc1amJIVmtaU0FyUENoYlhIZGNaQzR2WFNzcFBpOW5iVHNLWm5WdVkzUnBiMjRnY21Fb2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNdWNtVndiR0ZqWlNoMGVDd2dibmdwT3dwOUNtWjFibU4wYVc5dUlHNTRLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnUm1WYlpWMDdDaUFnSUNCcFppQW9kQ0E5UFQwZ2RtOXBaQ0F3S1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWtOaGJpQnViM1FnY21WemIyeDJaU0FqYVc1amJIVmtaU0E4SWlBcklHVWdLeUFpUGlJcE93b2dJQ0FnY21WMGRYSnVJSEpoS0hRcE93cDlDblpoY2lCcGVDQTlJQzhqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3VzF4elhTcy9abTl5SUZ3b0lHbHVkQ0JwSUZ3OUlDaGNaQ3NwWERzZ2FTQThJQ2hjWkNzcFhEc2dhU0JjSzF3cklGd3BJRng3S0Z0Y2MxeFRYU3MvS1NnL1BWeDlLVng5TDJjc0lISjRJRDBnTHlOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblJjY3l0bWIzSmNjeXBjS0Z4ekttbHVkRnh6SzJsY2N5bzlYSE1xS0Z4a0t5bGNjeW83WEhNcWFWeHpLanhjY3lvb1hHUXJLVnh6S2p0Y2N5cHBYSE1xWEN0Y0sxeHpLbHdwWEhNcWV5aGJYSE5jVTEwclB5bDlYSE1ySTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUXZaenNLWm5WdVkzUnBiMjRnV0d3b2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNdWNtVndiR0ZqWlNoeWVDd2diV2dwTG5KbGNHeGhZMlVvYVhnc0lITjRLVHNLZlFwbWRXNWpkR2x2YmlCemVDaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pYWldKSFRGQnliMmR5WVcwNklDTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQWdjMmhoWkdWeUlITjViblJoZUNCcGN5QmtaWEJ5WldOaGRHVmtMaUJRYkdWaGMyVWdkWE5sSUNOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFnYzNsdWRHRjRJR2x1YzNSbFlXUXVJaWtzSUcxb0tITXNJR1VzSUhRc0lHNHBPd3A5Q21aMWJtTjBhVzl1SUcxb0tITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ0lpSTdDaUFnSUNCbWIzSW9iR1YwSUhJZ1BTQndZWEp6WlVsdWRDaGxLVHNnY2lBOElIQmhjbk5sU1c1MEtIUXBPeUJ5S3lzcGFTQXJQU0J1TG5KbGNHeGhZMlVvTDF4YlhITXFhVnh6S2x4ZEwyY3NJQ0piSUNJZ0t5QnlJQ3NnSWlCZElpa3VjbVZ3YkdGalpTZ3ZWVTVTVDB4TVJVUmZURTlQVUY5SlRrUkZXQzluTENCeUtUc0tJQ0FnSUhKbGRIVnliaUJwT3dwOUNtWjFibU4wYVc5dUlFcHNLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdJbkJ5WldOcGMybHZiaUFpSUNzZ2N5NXdjbVZqYVhOcGIyNGdLeUJnSUdac2IyRjBPd3B3Y21WamFYTnBiMjRnWUNBcklITXVjSEpsWTJsemFXOXVJQ3NnSWlCcGJuUTdJanNLSUNBZ0lISmxkSFZ5YmlCekxuQnlaV05wYzJsdmJpQTlQVDBnSW1ocFoyaHdJaUEvSUdVZ0t6MGdZQW9qWkdWbWFXNWxJRWhKUjBoZlVGSkZRMGxUU1U5T1lDQTZJSE11Y0hKbFkybHphVzl1SUQwOVBTQWliV1ZrYVhWdGNDSWdQeUJsSUNzOUlHQUtJMlJsWm1sdVpTQk5SVVJKVlUxZlVGSkZRMGxUU1U5T1lDQTZJSE11Y0hKbFkybHphVzl1SUQwOVBTQWliRzkzY0NJZ0ppWWdLR1VnS3owZ1lBb2paR1ZtYVc1bElFeFBWMTlRVWtWRFNWTkpUMDVnS1N3Z1pUc0tmUXBtZFc1amRHbHZiaUJ2ZUNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUNKVFNFRkVUMWROUVZCZlZGbFFSVjlDUVZOSlF5STdDaUFnSUNCeVpYUjFjbTRnY3k1emFHRmtiM2ROWVhCVWVYQmxJRDA5UFNCSVl5QS9JR1VnUFNBaVUwaEJSRTlYVFVGUVgxUlpVRVZmVUVOR0lpQTZJSE11YzJoaFpHOTNUV0Z3Vkhsd1pTQTlQVDBnWm5VZ1B5QmxJRDBnSWxOSVFVUlBWMDFCVUY5VVdWQkZYMUJEUmw5VFQwWlVJaUE2SUhNdWMyaGhaRzkzVFdGd1ZIbHdaU0E5UFQwZ2FYSWdKaVlnS0dVZ1BTQWlVMGhCUkU5WFRVRlFYMVJaVUVWZlZsTk5JaWtzSUdVN0NuMEtablZ1WTNScGIyNGdZWGdvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0FpUlU1V1RVRlFYMVJaVUVWZlExVkNSU0k3Q2lBZ0lDQnBaaUFvY3k1bGJuWk5ZWEFwSUhOM2FYUmphQ2h6TG1WdWRrMWhjRTF2WkdVcGV3b2dJQ0FnSUNBZ0lHTmhjMlVnUW1rNkNpQWdJQ0FnSUNBZ1kyRnpaU0I2YVRvS0lDQWdJQ0FnSUNBZ0lDQWdaU0E5SUNKRlRsWk5RVkJmVkZsUVJWOURWVUpGSWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0JRY2pvS0lDQWdJQ0FnSUNCallYTmxJRmR6T2dvZ0lDQWdJQ0FnSUNBZ0lDQmxJRDBnSWtWT1ZrMUJVRjlVV1ZCRlgwTlZRa1ZmVlZZaU93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQmxPd3A5Q21aMWJtTjBhVzl1SUd4NEtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ0lrVk9WazFCVUY5TlQwUkZYMUpGUmt4RlExUkpUMDRpT3dvZ0lDQWdhV1lnS0hNdVpXNTJUV0Z3S1NCemQybDBZMmdvY3k1bGJuWk5ZWEJOYjJSbEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUhwcE9nb2dJQ0FnSUNBZ0lHTmhjMlVnVjNNNkNpQWdJQ0FnSUNBZ0lDQWdJR1VnUFNBaVJVNVdUVUZRWDAxUFJFVmZVa1ZHVWtGRFZFbFBUaUk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdVN0NuMEtablZ1WTNScGIyNGdZM2dvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0FpUlU1V1RVRlFYMEpNUlU1RVNVNUhYMDVQVGtVaU93b2dJQ0FnYVdZZ0tITXVaVzUyVFdGd0tTQnpkMmwwWTJnb2N5NWpiMjFpYVc1bEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUZaek9nb2dJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ0lrVk9WazFCVUY5Q1RFVk9SRWxPUjE5TlZVeFVTVkJNV1NJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnUkhVNkNpQWdJQ0FnSUNBZ0lDQWdJR1VnUFNBaVJVNVdUVUZRWDBKTVJVNUVTVTVIWDAxSldDSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ1JuVTZDaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQWlSVTVXVFVGUVgwSk1SVTVFU1U1SFgwRkVSQ0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdVN0NuMEtablZ1WTNScGIyNGdhSGdvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0J6TG1kbGRFTnZiblJsZUhRb0tTd2djaUE5SUhRdVpHVm1hVzVsY3l3Z2J5QTlJSFF1ZG1WeWRHVjRVMmhoWkdWeUxDQmhJRDBnZEM1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdnYkNBOUlHOTRLSFFwTENCaklEMGdZWGdvZENrc0lHZ2dQU0JzZUNoMEtTd2dkU0E5SUdONEtIUXBMQ0JrSUQwZ2RDNXBjMWRsWWtkTU1pQS9JQ0lpSURvZ1VXY29kQ2tzSUdZZ1BTQkxaeWh5S1N3Z2JTQTlJR2t1WTNKbFlYUmxVSEp2WjNKaGJTZ3BMQ0I0TENCMkxDQm5JRDBnZEM1bmJITnNWbVZ5YzJsdmJpQS9JQ0lqZG1WeWMybHZiaUFpSUNzZ2RDNW5iSE5zVm1WeWMybHZiaUFySUdBS1lDQTZJQ0lpT3dvZ0lDQWdkQzVwYzFKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzSUQ4Z0tIZ2dQU0JiQ2lBZ0lDQWdJQ0FnWmdvZ0lDQWdYUzVtYVd4MFpYSW9jbklwTG1wdmFXNG9ZQXBnS1N3Z2VDNXNaVzVuZEdnZ1BpQXdJQ1ltSUNoNElDczlJR0FLWUNrc0lIWWdQU0JiQ2lBZ0lDQWdJQ0FnWkN3S0lDQWdJQ0FnSUNCbUNpQWdJQ0JkTG1acGJIUmxjaWh5Y2lrdWFtOXBiaWhnQ21BcExDQjJMbXhsYm1kMGFDQStJREFnSmlZZ0tIWWdLejBnWUFwZ0tTa2dPaUFvZUNBOUlGc0tJQ0FnSUNBZ0lDQktiQ2gwS1N3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCVFNFRkVSVkpmVGtGTlJTQWlJQ3NnZEM1emFHRmtaWEpPWVcxbExBb2dJQ0FnSUNBZ0lHWXNDaUFnSUNBZ0lDQWdkQzVwYm5OMFlXNWphVzVuSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMGxPVTFSQlRrTkpUa2NpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVwYm5OMFlXNWphVzVuUTI5c2IzSWdQeUFpSTJSbFptbHVaU0JWVTBWZlNVNVRWRUZPUTBsT1IxOURUMHhQVWlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5OMWNIQnZjblJ6Vm1WeWRHVjRWR1Y0ZEhWeVpYTWdQeUFpSTJSbFptbHVaU0JXUlZKVVJWaGZWRVZZVkZWU1JWTWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ1RVRllYMEpQVGtWVElDSWdLeUIwTG0xaGVFSnZibVZ6TEFvZ0lDQWdJQ0FnSUhRdWRYTmxSbTluSUNZbUlIUXVabTluSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMFpQUnlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5WelpVWnZaeUFtSmlCMExtWnZaMFY0Y0RJZ1B5QWlJMlJsWm1sdVpTQkdUMGRmUlZoUU1pSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOU5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlJVNVdUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wlc1MlRXRndJRDhnSWlOa1pXWnBibVVnSWlBcklHZ2dPaUFpSWl3S0lDQWdJQ0FnSUNCMExteHBaMmgwVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDB4SlIwaFVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WVc5TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVOU5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYldsemMybDJaVTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlGVFVsVFUwbFdSVTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1KMWJYQk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRbFZOVUUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtNXZjbTFoYkUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5T1QxSk5RVXhOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dWIzSnRZV3hOWVhBZ0ppWWdkQzV2WW1wbFkzUlRjR0ZqWlU1dmNtMWhiRTFoY0NBL0lDSWpaR1ZtYVc1bElFOUNTa1ZEVkZOUVFVTkZYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTV2Y20xaGJFMWhjQ0FtSmlCMExuUmhibWRsYm5SVGNHRmpaVTV2Y20xaGJFMWhjQ0EvSUNJalpHVm1hVzVsSUZSQlRrZEZUbFJUVUVGRFJWOU9UMUpOUVV4TlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBOTVJVRlNRMDlCVkY5U1QxVkhTRTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlEweEZRVkpEVDBGVVgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQjBMbk4xY0hCdmNuUnpWbVZ5ZEdWNFZHVjRkSFZ5WlhNZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUkVsVFVFeEJRMFZOUlU1VVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjM0JsWTNWc1lYSk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVMUJGUTFWTVFWSk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlUVUVWRFZVeEJVa2xPVkVWT1UwbFVXVTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVMUJGUTFWTVFWSkRUMHhQVWsxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuSnZkV2RvYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVNUMVZIU0U1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV0WlhSaGJHNWxjM05OWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVFVWVVFVeE9SVk5UVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVlXeHdhR0ZOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUVV4UVNFRk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwY21GdWMyMXBjM05wYjI0Z1B5QWlJMlJsWm1sdVpTQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRISmhibk50YVhOemFXOXVUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGsxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUm9hV05yYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVVTRWxEUzA1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdWbGJrTnZiRzl5VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFOSVJVVk9RMDlNVDFKTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFNFVkZUbEpQVlVkSVRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5abGNuUmxlRlJoYm1kbGJuUnpJRDhnSWlOa1pXWnBibVVnVlZORlgxUkJUa2RGVGxRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhEYjJ4dmNuTWdQeUFpSTJSbFptbHVaU0JWVTBWZlEwOU1UMUlpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaEJiSEJvWVhNZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTA5TVQxSmZRVXhRU0VFaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhWZG5NZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVlZZaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MWRuTldaWEowWlhoUGJteDVJRDhnSWlOa1pXWnBibVVnVlZaVFgxWkZVbFJGV0Y5UFRreFpJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVabXhoZEZOb1lXUnBibWNnUHlBaUkyUmxabWx1WlNCR1RFRlVYMU5JUVVSRlJDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTnJhVzV1YVc1bklEOGdJaU5rWldacGJtVWdWVk5GWDFOTFNVNU9TVTVISWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZFhObFZtVnlkR1Y0VkdWNGRIVnlaU0EvSUNJalpHVm1hVzVsSUVKUFRrVmZWRVZZVkZWU1JTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMXZjbkJvVkdGeVoyVjBjeUEvSUNJalpHVm1hVzVsSUZWVFJWOU5UMUpRU0ZSQlVrZEZWRk1pSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV0YjNKd2FFNXZjbTFoYkhNZ0ppWWdkQzVtYkdGMFUyaGhaR2x1WnlBOVBUMGdJVEVnUHlBaUkyUmxabWx1WlNCVlUwVmZUVTlTVUVoT1QxSk5RVXhUSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ylc5eWNHaFVZWEpuWlhSeklDWW1JSFF1YVhOWFpXSkhURElnUHlBaUkyUmxabWx1WlNCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMXZjbkJvVkdGeVoyVjBjeUFtSmlCMExtbHpWMlZpUjB3eUlEOGdJaU5rWldacGJtVWdUVTlTVUVoVVFWSkhSVlJUWDBOUFZVNVVJQ0lnS3lCMExtMXZjbkJvVkdGeVoyVjBjME52ZFc1MElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1a2IzVmliR1ZUYVdSbFpDQS9JQ0lqWkdWbWFXNWxJRVJQVlVKTVJWOVRTVVJGUkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1ac2FYQlRhV1JsWkNBL0lDSWpaR1ZtYVc1bElFWk1TVkJmVTBsRVJVUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXphR0ZrYjNkTllYQkZibUZpYkdWa0lEOGdJaU5rWldacGJtVWdWVk5GWDFOSVFVUlBWMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1lXUnZkMDFoY0VWdVlXSnNaV1FnUHlBaUkyUmxabWx1WlNBaUlDc2diQ0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmw2WlVGMGRHVnVkV0YwYVc5dUlEOGdJaU5rWldacGJtVWdWVk5GWDFOSldrVkJWRlJGVGxWQlZFbFBUaUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVEU5SFJFVlFWRWhDVlVZaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1c2IyZGhjbWwwYUcxcFkwUmxjSFJvUW5WbVptVnlJQ1ltSUhRdWNtVnVaR1Z5WlhKRmVIUmxibk5wYjI1R2NtRm5SR1Z3ZEdnZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVEU5SFJFVlFWRWhDVlVaZlJWaFVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lDSjFibWxtYjNKdElHMWhkRFFnYlc5a1pXeE5ZWFJ5YVhnN0lpd0tJQ0FnSUNBZ0lDQWlkVzVwWm05eWJTQnRZWFEwSUcxdlpHVnNWbWxsZDAxaGRISnBlRHNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUcxaGREUWdjSEp2YW1WamRHbHZiazFoZEhKcGVEc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJRzFoZERRZ2RtbGxkMDFoZEhKcGVEc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJRzFoZERNZ2JtOXliV0ZzVFdGMGNtbDRPeUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnZG1Wak15QmpZVzFsY21GUWIzTnBkR2x2YmpzaUxBb2dJQ0FnSUNBZ0lDSjFibWxtYjNKdElHSnZiMndnYVhOUGNuUm9iMmR5WVhCb2FXTTdJaXdLSUNBZ0lDQWdJQ0FpSTJsbVpHVm1JRlZUUlY5SlRsTlVRVTVEU1U1SElpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0J0WVhRMElHbHVjM1JoYm1ObFRXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0lpTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ0lpTnBabVJsWmlCVlUwVmZTVTVUVkVGT1EwbE9SMTlEVDB4UFVpSXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak15QnBibk4wWVc1alpVTnZiRzl5T3lJc0NpQWdJQ0FnSUNBZ0lpTmxibVJwWmlJc0NpQWdJQ0FnSUNBZ0ltRjBkSEpwWW5WMFpTQjJaV016SUhCdmMybDBhVzl1T3lJc0NpQWdJQ0FnSUNBZ0ltRjBkSEpwWW5WMFpTQjJaV016SUc1dmNtMWhiRHNpTEFvZ0lDQWdJQ0FnSUNKaGRIUnlhV0oxZEdVZ2RtVmpNaUIxZGpzaUxBb2dJQ0FnSUNBZ0lDSWphV1prWldZZ1ZWTkZYMVJCVGtkRlRsUWlMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6UWdkR0Z1WjJWdWREc2lMQW9nSUNBZ0lDQWdJQ0lqWlc1a2FXWWlMQW9nSUNBZ0lDQWdJQ0lqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSUNraUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpRZ1kyOXNiM0k3SWl3S0lDQWdJQ0FnSUNBaUkyVnNhV1lnWkdWbWFXNWxaQ2dnVlZORlgwTlBURTlTSUNraUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpNZ1kyOXNiM0k3SWl3S0lDQWdJQ0FnSUNBaUkyVnVaR2xtSWl3S0lDQWdJQ0FnSUNBaUkybG1JQ2dnWkdWbWFXNWxaQ2dnVlZORlgwMVBVbEJJVkVGU1IwVlVVeUFwSUNZbUlDRWdaR1ZtYVc1bFpDZ2dUVTlTVUVoVVFWSkhSVlJUWDFSRldGUlZVa1VnS1NBcElpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVkdGeVoyVjBNRHNpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZek1nYlc5eWNHaFVZWEpuWlhReE95SXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak15QnRiM0p3YUZSaGNtZGxkREk3SWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME16c2lMQW9nSUNBZ0lDQWdJQ0lKSTJsbVpHVm1JRlZUUlY5TlQxSlFTRTVQVWsxQlRGTWlMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1RtOXliV0ZzTURzaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVG05eWJXRnNNVHNpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9UbTl5YldGc01qc2lMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1RtOXliV0ZzTXpzaUxBb2dJQ0FnSUNBZ0lDSUpJMlZzYzJVaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVkdGeVoyVjBORHNpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME5Uc2lMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTmpzaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVkdGeVoyVjBOenNpTEFvZ0lDQWdJQ0FnSUNJSkkyVnVaR2xtSWl3S0lDQWdJQ0FnSUNBaUkyVnVaR2xtSWl3S0lDQWdJQ0FnSUNBaUkybG1aR1ZtSUZWVFJWOVRTMGxPVGtsT1J5SXNDaUFnSUNBZ0lDQWdJZ2xoZEhSeWFXSjFkR1VnZG1Wak5DQnphMmx1U1c1a1pYZzdJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTTBJSE5yYVc1WFpXbG5hSFE3SWl3S0lDQWdJQ0FnSUNBaUkyVnVaR2xtSWl3S0lDQWdJQ0FnSUNCZ0NtQUtJQ0FnSUYwdVptbHNkR1Z5S0hKeUtTNXFiMmx1S0dBS1lDa3NJSFlnUFNCYkNpQWdJQ0FnSUNBZ1pDd0tJQ0FnSUNBZ0lDQktiQ2gwS1N3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCVFNFRkVSVkpmVGtGTlJTQWlJQ3NnZEM1emFHRmtaWEpPWVcxbExBb2dJQ0FnSUNBZ0lHWXNDaUFnSUNBZ0lDQWdkQzUxYzJWR2IyY2dKaVlnZEM1bWIyY2dQeUFpSTJSbFptbHVaU0JWVTBWZlJrOUhJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkWE5sUm05bklDWW1JSFF1Wm05blJYaHdNaUEvSUNJalpHVm1hVzVsSUVaUFIxOUZXRkF5SWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YldGd0lEOGdJaU5rWldacGJtVWdWVk5GWDAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtMWhkR05oY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlOUVZSRFFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiblpOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUlU1V1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaVzUyVFdGd0lEOGdJaU5rWldacGJtVWdJaUFySUdNZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdWRrMWhjQ0EvSUNJalpHVm1hVzVsSUNJZ0t5Qm9JRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiblpOWVhBZ1B5QWlJMlJsWm1sdVpTQWlJQ3NnZFNBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YkdsbmFIUk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZURWxIU0ZSTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWhiMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlCVDAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtVnRhWE56YVhabFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwVk5TVk5UU1ZaRlRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZblZ0Y0UxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5Q1ZVMVFUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym05eWJXRnNUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTV2Y20xaGJFMWhjQ0FtSmlCMExtOWlhbVZqZEZOd1lXTmxUbTl5YldGc1RXRndJRDhnSWlOa1pXWnBibVVnVDBKS1JVTlVVMUJCUTBWZlRrOVNUVUZNVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJtOXliV0ZzVFdGd0lDWW1JSFF1ZEdGdVoyVnVkRk53WVdObFRtOXliV0ZzVFdGd0lEOGdJaU5rWldacGJtVWdWRUZPUjBWT1ZGTlFRVU5GWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Oc1pXRnlZMjloZENBL0lDSWpaR1ZtYVc1bElGVlRSVjlEVEVWQlVrTlBRVlFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVqYkdWaGNtTnZZWFJOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTB4RlFWSkRUMEZVVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwTk1SVUZTUTA5QlZGOVNUMVZIU0U1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk53WldOMWJHRnlUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5RUlVOVlRFRlNUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTFCRlExVk1RVkpKVGxSRlRsTkpWRmxOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5RUlVOVlRFRlNRMDlNVDFKTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXliM1ZuYUc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVazlWUjBoT1JWTlRUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YldWMFlXeHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDAxRlZFRk1Ua1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtRnNjR2hoVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBGTVVFaEJUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WVd4d2FHRlVaWE4wSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMEZNVUVoQlZFVlRWQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWldWdUlEOGdJaU5rWldacGJtVWdWVk5GWDFOSVJVVk9JaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmhsWlc1RGIyeHZjazFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlUU0VWRlRrTlBURTlTVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTBoRlJVNVNUMVZIU0U1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUwY21GdWMyMXBjM05wYjI0Z1B5QWlJMlJsWm1sdVpTQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRISmhibk50YVhOemFXOXVUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJTUVU1VFRVbFRVMGxQVGsxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUm9hV05yYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVVTRWxEUzA1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaFVZVzVuWlc1MGN5QS9JQ0lqWkdWbWFXNWxJRlZUUlY5VVFVNUhSVTVVSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZG1WeWRHVjRRMjlzYjNKeklIeDhJSFF1YVc1emRHRnVZMmx1WjBOdmJHOXlJRDhnSWlOa1pXWnBibVVnVlZORlgwTlBURTlTSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZG1WeWRHVjRRV3h3YUdGeklEOGdJaU5rWldacGJtVWdWVk5GWDBOUFRFOVNYMEZNVUVoQklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRtVnlkR1Y0VlhaeklEOGdJaU5rWldacGJtVWdWVk5GWDFWV0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRYWnpWbVZ5ZEdWNFQyNXNlU0EvSUNJalpHVm1hVzVsSUZWV1UxOVdSVkpVUlZoZlQwNU1XU0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbWR5WVdScFpXNTBUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMGRTUVVSSlJVNVVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wm14aGRGTm9ZV1JwYm1jZ1B5QWlJMlJsWm1sdVpTQkdURUZVWDFOSVFVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVJ2ZFdKc1pWTnBaR1ZrSUQ4Z0lpTmtaV1pwYm1VZ1JFOVZRa3hGWDFOSlJFVkVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVabXhwY0ZOcFpHVmtJRDhnSWlOa1pXWnBibVVnUmt4SlVGOVRTVVJGUkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1lXUnZkMDFoY0VWdVlXSnNaV1FnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGhCUkU5WFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmhoWkc5M1RXRndSVzVoWW14bFpDQS9JQ0lqWkdWbWFXNWxJQ0lnS3lCc0lEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1d2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFZ1B5QWlJMlJsWm1sdVpTQlFVa1ZOVlV4VVNWQk1TVVZFWDBGTVVFaEJJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjR2g1YzJsallXeHNlVU52Y25KbFkzUk1hV2RvZEhNZ1B5QWlJMlJsWm1sdVpTQlFTRmxUU1VOQlRFeFpYME5QVWxKRlExUmZURWxIU0ZSVElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaUEvSUNJalpHVm1hVzVsSUZWVFJWOU1UMGRFUlZCVVNFSlZSaUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJZ0ppWWdkQzV5Wlc1a1pYSmxja1Y0ZEdWdWMybHZia1p5WVdkRVpYQjBhQ0EvSUNJalpHVm1hVzVsSUZWVFJWOU1UMGRFUlZCVVNFSlZSbDlGV0ZRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnS0hRdVpYaDBaVzV6YVc5dVUyaGhaR1Z5VkdWNGRIVnlaVXhQUkNCOGZDQjBMbVZ1ZGsxaGNDa2dKaVlnZEM1eVpXNWtaWEpsY2tWNGRHVnVjMmx2YmxOb1lXUmxjbFJsZUhSMWNtVk1iMlFnUHlBaUkyUmxabWx1WlNCVVJWaFVWVkpGWDB4UFJGOUZXRlFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdiV0YwTkNCMmFXVjNUV0YwY21sNE95SXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdkbVZqTXlCallXMWxjbUZRYjNOcGRHbHZianNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUdKdmIyd2dhWE5QY25Sb2IyZHlZWEJvYVdNN0lpd0tJQ0FnSUNBZ0lDQjBMblJ2Ym1WTllYQndhVzVuSUNFOVBTQmZiaUEvSUNJalpHVm1hVzVsSUZSUFRrVmZUVUZRVUVsT1J5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUnZibVZOWVhCd2FXNW5JQ0U5UFNCZmJpQS9JRVpsTG5SdmJtVnRZWEJ3YVc1blgzQmhjbk5mWm5KaFoyMWxiblFnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblJ2Ym1WTllYQndhVzVuSUNFOVBTQmZiaUEvSUdwbktDSjBiMjVsVFdGd2NHbHVaeUlzSUhRdWRHOXVaVTFoY0hCcGJtY3BJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWthWFJvWlhKcGJtY2dQeUFpSTJSbFptbHVaU0JFU1ZSSVJWSkpUa2NpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVtYjNKdFlYUWdQVDA5SUVkdUlEOGdJaU5rWldacGJtVWdUMUJCVVZWRklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUVabExtVnVZMjlrYVc1bmMxOXdZWEp6WDJaeVlXZHRaVzUwTEFvZ0lDQWdJQ0FnSUhRdWJXRndJRDhnUkc0b0ltMWhjRlJsZUdWc1ZHOU1hVzVsWVhJaUxDQjBMbTFoY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YldGMFkyRndJRDhnUkc0b0ltMWhkR05oY0ZSbGVHVnNWRzlNYVc1bFlYSWlMQ0IwTG0xaGRHTmhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaVzUyVFdGd0lEOGdSRzRvSW1WdWRrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJaUxDQjBMbVZ1ZGsxaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpXMXBjM05wZG1WTllYQWdQeUJFYmlnaVpXMXBjM05wZG1WTllYQlVaWGhsYkZSdlRHbHVaV0Z5SWl3Z2RDNWxiV2x6YzJsMlpVMWhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQS9JRVJ1S0NKemNHVmpkV3hoY2tOdmJHOXlUV0Z3VkdWNFpXeFViMHhwYm1WaGNpSXNJSFF1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmhsWlc1RGIyeHZjazFoY0NBL0lFUnVLQ0p6YUdWbGJrTnZiRzl5VFdGd1ZHVjRaV3hVYjB4cGJtVmhjaUlzSUhRdWMyaGxaVzVEYjJ4dmNrMWhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViR2xuYUhSTllYQWdQeUJFYmlnaWJHbG5hSFJOWVhCVVpYaGxiRlJ2VEdsdVpXRnlJaXdnZEM1c2FXZG9kRTFoY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJQ1JuS0NKc2FXNWxZWEpVYjA5MWRIQjFkRlJsZUdWc0lpd2dkQzV2ZFhSd2RYUkZibU52WkdsdVp5a3NDaUFnSUNBZ0lDQWdkQzVrWlhCMGFGQmhZMnRwYm1jZ1B5QWlJMlJsWm1sdVpTQkVSVkJVU0Y5UVFVTkxTVTVISUNJZ0t5QjBMbVJsY0hSb1VHRmphMmx1WnlBNklDSWlMQW9nSUNBZ0lDQWdJR0FLWUFvZ0lDQWdYUzVtYVd4MFpYSW9jbklwTG1wdmFXNG9ZQXBnS1Nrc0lHOGdQU0J5WVNodktTd2dieUE5SUZkc0tHOHNJSFFwTENCdklEMGdjV3dvYnl3Z2RDa3NJR0VnUFNCeVlTaGhLU3dnWVNBOUlGZHNLR0VzSUhRcExDQmhJRDBnY1d3b1lTd2dkQ2tzSUc4Z1BTQlliQ2h2S1N3Z1lTQTlJRmhzS0dFcExDQjBMbWx6VjJWaVIwd3lJQ1ltSUhRdWFYTlNZWGRUYUdGa1pYSk5ZWFJsY21saGJDQWhQVDBnSVRBZ0ppWWdLR2NnUFNCZ0kzWmxjbk5wYjI0Z016QXdJR1Z6Q21Bc0lIZ2dQU0JiQ2lBZ0lDQWdJQ0FnSW5CeVpXTnBjMmx2YmlCdFpXUnBkVzF3SUhOaGJYQnNaWEl5UkVGeWNtRjVPeUlzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnWVhSMGNtbGlkWFJsSUdsdUlpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjJZWEo1YVc1bklHOTFkQ0lzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVEpFSUhSbGVIUjFjbVVpQ2lBZ0lDQmRMbXB2YVc0b1lBcGdLU0FySUdBS1lDQXJJSGdzSUhZZ1BTQmJDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdkbUZ5ZVdsdVp5QnBiaUlzQ2lBZ0lDQWdJQ0FnZEM1bmJITnNWbVZ5YzJsdmJpQTlQVDBnZUd3Z1B5QWlJaUE2SUNKc1lYbHZkWFFvYkc5allYUnBiMjRnUFNBd0tTQnZkWFFnYUdsbmFIQWdkbVZqTkNCd1kxOW1jbUZuUTI5c2IzSTdJaXdLSUNBZ0lDQWdJQ0IwTG1kc2MyeFdaWEp6YVc5dUlEMDlQU0I0YkNBL0lDSWlJRG9nSWlOa1pXWnBibVVnWjJ4ZlJuSmhaME52Ykc5eUlIQmpYMlp5WVdkRGIyeHZjaUlzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnWjJ4ZlJuSmhaMFJsY0hSb1JWaFVJR2RzWDBaeVlXZEVaWEIwYUNJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RHVjRkSFZ5WlRKRUlIUmxlSFIxY21VaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21WRGRXSmxJSFJsZUhSMWNtVWlMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFJsZUhSMWNtVXlSRkJ5YjJvZ2RHVjRkSFZ5WlZCeWIyb2lMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFJsZUhSMWNtVXlSRXh2WkVWWVZDQjBaWGgwZFhKbFRHOWtJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IwWlhoMGRYSmxNa1JRY205cVRHOWtSVmhVSUhSbGVIUjFjbVZRY205cVRHOWtJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IwWlhoMGRYSmxRM1ZpWlV4dlpFVllWQ0IwWlhoMGRYSmxURzlrSWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMFpYaDBkWEpsTWtSSGNtRmtSVmhVSUhSbGVIUjFjbVZIY21Ga0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbE1rUlFjbTlxUjNKaFpFVllWQ0IwWlhoMGRYSmxVSEp2YWtkeVlXUWlMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFJsZUhSMWNtVkRkV0psUjNKaFpFVllWQ0IwWlhoMGRYSmxSM0poWkNJS0lDQWdJRjB1YW05cGJpaGdDbUFwSUNzZ1lBcGdJQ3NnZGlrN0NpQWdJQ0JzWlhRZ2NDQTlJR2NnS3lCNElDc2dieXdnWHlBOUlHY2dLeUIySUNzZ1lTd2dlU0E5SUVkc0tHa3NJRE0xTmpNekxDQndLU3dnWWlBOUlFZHNLR2tzSURNMU5qTXlMQ0JmS1RzS0lDQWdJR2xtSUNocExtRjBkR0ZqYUZOb1lXUmxjaWh0TENCNUtTd2dhUzVoZEhSaFkyaFRhR0ZrWlhJb2JTd2dZaWtzSUhRdWFXNWtaWGd3UVhSMGNtbGlkWFJsVG1GdFpTQWhQVDBnZG05cFpDQXdJRDhnYVM1aWFXNWtRWFIwY21saVRHOWpZWFJwYjI0b2JTd2dNQ3dnZEM1cGJtUmxlREJCZEhSeWFXSjFkR1ZPWVcxbEtTQTZJSFF1Ylc5eWNHaFVZWEpuWlhSeklEMDlQU0FoTUNBbUppQnBMbUpwYm1SQmRIUnlhV0pNYjJOaGRHbHZiaWh0TENBd0xDQWljRzl6YVhScGIyNGlLU3dnYVM1c2FXNXJVSEp2WjNKaGJTaHRLU3dnY3k1a1pXSjFaeTVqYUdWamExTm9ZV1JsY2tWeWNtOXljeWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnYVM1blpYUlFjbTluY21GdFNXNW1iMHh2WnlodEtTNTBjbWx0S0Nrc0lHc2dQU0JwTG1kbGRGTm9ZV1JsY2tsdVptOU1iMmNvZVNrdWRISnBiU2dwTENCQ0lEMGdhUzVuWlhSVGFHRmtaWEpKYm1adlRHOW5LR0lwTG5SeWFXMG9LU3dnVUNBOUlDRXdMQ0IzSUQwZ0lUQTdDaUFnSUNBZ0lDQWdhV1lnS0drdVoyVjBVSEp2WjNKaGJWQmhjbUZ0WlhSbGNpaHRMQ0F6TlRjeE5Da2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUZBZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCV2JDaHBMQ0I1TENBaWRtVnlkR1Y0SWlrc0lFUWdQU0JXYkNocExDQmlMQ0FpWm5KaFoyMWxiblFpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFFjbTluY21GdE9pQlRhR0ZrWlhJZ1JYSnliM0lnSWlBcklHa3VaMlYwUlhKeWIzSW9LU0FySUNJZ0xTQldRVXhKUkVGVVJWOVRWRUZVVlZNZ0lpQXJJR2t1WjJWMFVISnZaM0poYlZCaGNtRnRaWFJsY2lodExDQXpOVGN4TlNrZ0t5QmdDZ3BRY205bmNtRnRJRWx1Wm04Z1RHOW5PaUJnSUNzZ1NTQXJJR0FLWUNBcklFVWdLeUJnQ21BZ0t5QkVLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdTU0FoUFQwZ0lpSWdQeUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VSEp2WjNKaGJUb2dVSEp2WjNKaGJTQkpibVp2SUV4dlp6b2lMQ0JKS1NBNklDaHJJRDA5UFNBaUlpQjhmQ0JDSUQwOVBTQWlJaWtnSmlZZ0tIY2dQU0FoTVNrN0NpQWdJQ0FnSUNBZ2R5QW1KaUFvZEdocGN5NWthV0ZuYm05emRHbGpjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjblZ1Ym1GaWJHVTZJRkFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliMmR5WVcxTWIyYzZJRWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkc5bk9pQnJMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEpsWm1sNE9pQjRDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNiMmM2SUVJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtVm1hWGc2SUhZS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUW9nSUNBZ2FTNWtaV3hsZEdWVGFHRmtaWElvZVNrc0lHa3VaR1ZzWlhSbFUyaGhaR1Z5S0dJcE93b2dJQ0FnYkdWMElFRTdDaUFnSUNCMGFHbHpMbWRsZEZWdWFXWnZjbTF6SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFRWdQVDA5SUhadmFXUWdNQ0FtSmlBb1FTQTlJRzVsZHlCaWJpaHBMQ0J0S1Nrc0lFRTdDaUFnSUNCOU93b2dJQ0FnYkdWMElFdzdDaUFnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJCZEhSeWFXSjFkR1Z6SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFd2dQVDA5SUhadmFXUWdNQ0FtSmlBb1RDQTlJR1Y0S0drc0lHMHBLU3dnVERzS0lDQWdJSDBzSUhSb2FYTXVaR1Z6ZEhKdmVTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUc0dWNtVnNaV0Z6WlZOMFlYUmxjMDltVUhKdlozSmhiU2gwYUdsektTd2dhUzVrWld4bGRHVlFjbTluY21GdEtHMHBMQ0IwYUdsekxuQnliMmR5WVcwZ1BTQjJiMmxrSURBN0NpQWdJQ0I5TENCMGFHbHpMbTVoYldVZ1BTQjBMbk5vWVdSbGNrNWhiV1VzSUhSb2FYTXVhV1FnUFNCWlp5c3JMQ0IwYUdsekxtTmhZMmhsUzJWNUlEMGdaU3dnZEdocGN5NTFjMlZrVkdsdFpYTWdQU0F4TENCMGFHbHpMbkJ5YjJkeVlXMGdQU0J0TENCMGFHbHpMblpsY25SbGVGTm9ZV1JsY2lBOUlIa3NJSFJvYVhNdVpuSmhaMjFsYm5SVGFHRmtaWElnUFNCaUxDQjBhR2x6T3dwOUNuWmhjaUIxZUNBOUlEQXNJR2RvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbk5vWVdSbGNrTmhZMmhsSUQwZ2JtVjNJRTFoY0N3Z2RHaHBjeTV0WVhSbGNtbGhiRU5oWTJobElEMGdibVYzSUUxaGNEc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG5abGNuUmxlRk5vWVdSbGNpd2diaUE5SUdVdVpuSmhaMjFsYm5SVGFHRmtaWElzSUdrZ1BTQjBhR2x6TGw5blpYUlRhR0ZrWlhKVGRHRm5aU2gwS1N3Z2NpQTlJSFJvYVhNdVgyZGxkRk5vWVdSbGNsTjBZV2RsS0c0cExDQnZJRDBnZEdocGN5NWZaMlYwVTJoaFpHVnlRMkZqYUdWR2IzSk5ZWFJsY21saGJDaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdieTVvWVhNb2FTa2dQVDA5SUNFeElDWW1JQ2h2TG1Ga1pDaHBLU3dnYVM1MWMyVmtWR2x0WlhNckt5a3NJRzh1YUdGektISXBJRDA5UFNBaE1TQW1KaUFvYnk1aFpHUW9jaWtzSUhJdWRYTmxaRlJwYldWekt5c3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbVZ0YjNabEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWJXRjBaWEpwWVd4RFlXTm9aUzVuWlhRb1pTazdDaUFnSUNBZ0lDQWdabTl5SUNoc1pYUWdiaUJ2WmlCMEtXNHVkWE5sWkZScGJXVnpMUzBzSUc0dWRYTmxaRlJwYldWeklEMDlQU0F3SUNZbUlIUm9hWE11YzJoaFpHVnlRMkZqYUdVdVpHVnNaWFJsS0c0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFoZEdWeWFXRnNRMkZqYUdVdVpHVnNaWFJsS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBWbVZ5ZEdWNFUyaGhaR1Z5U1VRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5blpYUlRhR0ZrWlhKVGRHRm5aU2hsTG5abGNuUmxlRk5vWVdSbGNpa3VhV1E3Q2lBZ0lDQjlDaUFnSUNCblpYUkdjbUZuYldWdWRGTm9ZV1JsY2tsRUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZloyVjBVMmhoWkdWeVUzUmhaMlVvWlM1bWNtRm5iV1Z1ZEZOb1lXUmxjaWt1YVdRN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWMyaGhaR1Z5UTJGamFHVXVZMnhsWVhJb0tTd2dkR2hwY3k1dFlYUmxjbWxoYkVOaFkyaGxMbU5zWldGeUtDazdDaUFnSUNCOUNpQWdJQ0JmWjJWMFUyaGhaR1Z5UTJGamFHVkdiM0pOWVhSbGNtbGhiQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbTFoZEdWeWFXRnNRMkZqYUdVN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWFHRnpLR1VwSUQwOVBTQWhNU0FtSmlCMExuTmxkQ2hsTENCdVpYY2dVMlYwS1N3Z2RDNW5aWFFvWlNrN0NpQWdJQ0I5Q2lBZ0lDQmZaMlYwVTJoaFpHVnlVM1JoWjJVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1emFHRmtaWEpEWVdOb1pUc0tJQ0FnSUNBZ0lDQnBaaUFvZEM1b1lYTW9aU2tnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJSGhvT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbk5sZENobExDQnVLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WjJWMEtHVXBPd29nSUNBZ2ZRcDlMQ0I0YUNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwWkNBOUlIVjRLeXNzSUhSb2FYTXVkWE5sWkZScGJXVnpJRDBnTURzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1pIZ29jeXdnWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnU25Nc0lHd2dQU0J1WlhjZ1oyZ3NJR01nUFNCYlhTd2dhQ0E5SUdrdWFYTlhaV0pIVERJc0lIVWdQU0JwTG14dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSXNJR1FnUFNCcExtWnNiMkYwVm1WeWRHVjRWR1Y0ZEhWeVpYTXNJR1lnUFNCcExtMWhlRlpsY25SbGVGVnVhV1p2Y20xekxDQnRJRDBnYVM1MlpYSjBaWGhVWlhoMGRYSmxjeXdnZUNBOUlHa3VjSEpsWTJsemFXOXVMQ0IySUQwZ2V3b2dJQ0FnSUNBZ0lFMWxjMmhFWlhCMGFFMWhkR1Z5YVdGc09pQWlaR1Z3ZEdnaUxBb2dJQ0FnSUNBZ0lFMWxjMmhFYVhOMFlXNWpaVTFoZEdWeWFXRnNPaUFpWkdsemRHRnVZMlZTUjBKQklpd0tJQ0FnSUNBZ0lDQk5aWE5vVG05eWJXRnNUV0YwWlhKcFlXdzZJQ0p1YjNKdFlXd2lMQW9nSUNBZ0lDQWdJRTFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNPaUFpWW1GemFXTWlMQW9nSUNBZ0lDQWdJRTFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3c2SUNKc1lXMWlaWEowSWl3S0lDQWdJQ0FnSUNCTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkRvZ0luQm9iMjVuSWl3S0lDQWdJQ0FnSUNCTlpYTm9WRzl2YmsxaGRHVnlhV0ZzT2lBaWRHOXZiaUlzQ2lBZ0lDQWdJQ0FnVFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3NklDSndhSGx6YVdOaGJDSXNDaUFnSUNBZ0lDQWdUV1Z6YUZCb2VYTnBZMkZzVFdGMFpYSnBZV3c2SUNKd2FIbHphV05oYkNJc0NpQWdJQ0FnSUNBZ1RXVnphRTFoZEdOaGNFMWhkR1Z5YVdGc09pQWliV0YwWTJGd0lpd0tJQ0FnSUNBZ0lDQk1hVzVsUW1GemFXTk5ZWFJsY21saGJEb2dJbUpoYzJsaklpd0tJQ0FnSUNBZ0lDQk1hVzVsUkdGemFHVmtUV0YwWlhKcFlXdzZJQ0prWVhOb1pXUWlMQW9nSUNBZ0lDQWdJRkJ2YVc1MGMwMWhkR1Z5YVdGc09pQWljRzlwYm5Seklpd0tJQ0FnSUNBZ0lDQlRhR0ZrYjNkTllYUmxjbWxoYkRvZ0luTm9ZV1J2ZHlJc0NpQWdJQ0FnSUNBZ1UzQnlhWFJsVFdGMFpYSnBZV3c2SUNKemNISnBkR1VpQ2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z1p5aDNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFUWdQU0IzTG5OclpXeGxkRzl1TG1KdmJtVnpPd29nSUNBZ0lDQWdJR2xtSUNoa0tTQnlaWFIxY200Z01UQXlORHNLSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHSUQwZ1RXRjBhQzVtYkc5dmNpZ29aaUF0SURJd0tTQXZJRFFwTENCUElEMGdUV0YwYUM1dGFXNG9SaXdnUkM1c1pXNW5kR2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1R5QThJRVF1YkdWdVozUm9JRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVTJ0bGJHVjBiMjRnYUdGeklDSWdLeUJFTG14bGJtZDBhQ0FySUNJZ1ltOXVaWE11SUZSb2FYTWdSMUJWSUhOMWNIQnZjblJ6SUNJZ0t5QlBJQ3NnSWk0aUtTd2dNQ2tnT2lCUE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSEFvZHlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JGT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIzSUNZbUlIY3VhWE5VWlhoMGRYSmxJRDhnUlNBOUlIY3VaVzVqYjJScGJtY2dPaUIzSUNZbUlIY3VhWE5YWldKSFRGSmxibVJsY2xSaGNtZGxkQ0EvSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVUhKdlozSmhiWE11WjJWMFZHVjRkSFZ5WlVWdVkyOWthVzVuUm5KdmJVMWhjRG9nWkc5dUozUWdkWE5sSUhKbGJtUmxjaUIwWVhKblpYUnpJR0Z6SUhSbGVIUjFjbVZ6TGlCVmMyVWdkR2hsYVhJZ0xuUmxlSFIxY21VZ2NISnZjR1Z5ZEhrZ2FXNXpkR1ZoWkM0aUtTd2dSU0E5SUhjdWRHVjRkSFZ5WlM1bGJtTnZaR2x1WnlrZ09pQkZJRDBnVG5Rc0lHZ2dKaVlnZHlBbUppQjNMbWx6VkdWNGRIVnlaU0FtSmlCM0xtWnZjbTFoZENBOVBUMGdZM1FnSmlZZ2R5NTBlWEJsSUQwOVBTQnliaUFtSmlCM0xtVnVZMjlrYVc1bklEMDlQU0JQYVNBbUppQW9SU0E5SUU1MEtTd2dSVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUY4b2R5d2dSU3dnUkN3Z1ZTd2dSaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlBJRDBnVlM1bWIyY3NJRzVsSUQwZ2R5NXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUQ4Z1ZTNWxiblpwY205dWJXVnVkQ0E2SUc1MWJHd3NJR05sSUQwZ0tIY3VhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNBL0lIUWdPaUJsS1M1blpYUW9keTVsYm5aTllYQWdmSHdnYm1VcExDQldJRDBnZGx0M0xuUjVjR1ZkTENCWElEMGdSaTVwYzFOcmFXNXVaV1JOWlhOb0lEOGdaeWhHS1NBNklEQTdDaUFnSUNBZ0lDQWdkeTV3Y21WamFYTnBiMjRnSVQwOUlHNTFiR3dnSmlZZ0tIZ2dQU0JwTG1kbGRFMWhlRkJ5WldOcGMybHZiaWgzTG5CeVpXTnBjMmx2Ymlrc0lIZ2dJVDA5SUhjdWNISmxZMmx6YVc5dUlDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFFjbTluY21GdExtZGxkRkJoY21GdFpYUmxjbk02SWl3Z2R5NXdjbVZqYVhOcGIyNHNJQ0p1YjNRZ2MzVndjRzl5ZEdWa0xDQjFjMmx1WnlJc0lIZ3NJQ0pwYm5OMFpXRmtMaUlwS1RzS0lDQWdJQ0FnSUNCc1pYUWdhR1VzSUd4bExDQm1aU3dnUW1VN0NpQWdJQ0FnSUNBZ2FXWWdLRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhobElEMGdjWFJiVmwwN0NpQWdJQ0FnSUNBZ0lDQWdJR2hsSUQwZ2VHVXVkbVZ5ZEdWNFUyaGhaR1Z5TENCc1pTQTlJSGhsTG1aeVlXZHRaVzUwVTJoaFpHVnlPd29nSUNBZ0lDQWdJSDBnWld4elpTQm9aU0E5SUhjdWRtVnlkR1Y0VTJoaFpHVnlMQ0JzWlNBOUlIY3VabkpoWjIxbGJuUlRhR0ZrWlhJc0lHd3VkWEJrWVhSbEtIY3BMQ0JtWlNBOUlHd3VaMlYwVm1WeWRHVjRVMmhoWkdWeVNVUW9keWtzSUVKbElEMGdiQzVuWlhSR2NtRm5iV1Z1ZEZOb1lXUmxja2xFS0hjcE93b2dJQ0FnSUNBZ0lHeGxkQ0JaSUQwZ2N5NW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tTd2dRMlVnUFNCM0xtRnNjR2hoVkdWemRDQStJREFzSUhsbElEMGdkeTVqYkdWaGNtTnZZWFFnUGlBd093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJR2x6VjJWaVIwd3lPaUJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrWlhKSlJEb2dWaXdLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaR1Z5VG1GdFpUb2dkeTUwZVhCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHaGxMQW9nSUNBZ0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nYkdVc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1sdVpYTTZJSGN1WkdWbWFXNWxjeXdLSUNBZ0lDQWdJQ0FnSUNBZ1kzVnpkRzl0Vm1WeWRHVjRVMmhoWkdWeVNVUTZJR1psTEFvZ0lDQWdJQ0FnSUNBZ0lDQmpkWE4wYjIxR2NtRm5iV1Z1ZEZOb1lXUmxja2xFT2lCQ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkRvZ2R5NXBjMUpoZDFOb1lXUmxjazFoZEdWeWFXRnNJRDA5UFNBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJ4emJGWmxjbk5wYjI0NklIY3VaMnh6YkZabGNuTnBiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaV05wYzJsdmJqb2dlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNXpkR0Z1WTJsdVp6b2dSaTVwYzBsdWMzUmhibU5sWkUxbGMyZ2dQVDA5SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm5OMFlXNWphVzVuUTI5c2IzSTZJRVl1YVhOSmJuTjBZVzVqWldSTlpYTm9JRDA5UFNBaE1DQW1KaUJHTG1sdWMzUmhibU5sUTI5c2IzSWdJVDA5SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUhOMWNIQnZjblJ6Vm1WeWRHVjRWR1Y0ZEhWeVpYTTZJRzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOTFkSEIxZEVWdVkyOWthVzVuT2lCWklDRTlQU0J1ZFd4c0lEOGdjQ2haTG5SbGVIUjFjbVVwSURvZ2N5NXZkWFJ3ZFhSRmJtTnZaR2x1Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdiV0Z3T2lBaElYY3ViV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRZWEJGYm1OdlpHbHVaem9nY0NoM0xtMWhjQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkR05oY0RvZ0lTRjNMbTFoZEdOaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFkyRndSVzVqYjJScGJtYzZJSEFvZHk1dFlYUmpZWEFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxiblpOWVhBNklDRWhZMlVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnVkazFoY0UxdlpHVTZJR05sSUNZbUlHTmxMbTFoY0hCcGJtY3NDaUFnSUNBZ0lDQWdJQ0FnSUdWdWRrMWhjRVZ1WTI5a2FXNW5PaUJ3S0dObEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1MlRXRndRM1ZpWlZWV09pQWhJV05sSUNZbUlDaGpaUzV0WVhCd2FXNW5JRDA5UFNCUWNpQjhmQ0JqWlM1dFlYQndhVzVuSUQwOVBTQlhjeWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeHBaMmgwVFdGd09pQWhJWGN1YkdsbmFIUk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeHBaMmgwVFdGd1JXNWpiMlJwYm1jNklIQW9keTVzYVdkb2RFMWhjQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRnZUV0Z3T2lBaElYY3VZVzlOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z0YVhOemFYWmxUV0Z3T2lBaElYY3VaVzFwYzNOcGRtVk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnRhWE56YVhabFRXRndSVzVqYjJScGJtYzZJSEFvZHk1bGJXbHpjMmwyWlUxaGNDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdKMWJYQk5ZWEE2SUNFaGR5NWlkVzF3VFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeE5ZWEE2SUNFaGR5NXViM0p0WVd4TllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRk53WVdObFRtOXliV0ZzVFdGd09pQjNMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BUMDlJSHBrTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBZVzVuWlc1MFUzQmhZMlZPYjNKdFlXeE5ZWEE2SUhjdWJtOXliV0ZzVFdGd1ZIbHdaU0E5UFQwZ1NHa3NDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZERvZ2VXVXNDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZEUxaGNEb2dlV1VnSmlZZ0lTRjNMbU5zWldGeVkyOWhkRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3T2lCNVpTQW1KaUFoSVhjdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbU52WVhST2IzSnRZV3hOWVhBNklIbGxJQ1ltSUNFaGR5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZV05sYldWdWRFMWhjRG9nSVNGM0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdjbTkxWjJodVpYTnpUV0Z3T2lBaElYY3VjbTkxWjJodVpYTnpUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoYkc1bGMzTk5ZWEE2SUNFaGR5NXRaWFJoYkc1bGMzTk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVRXRndPaUFoSVhjdWMzQmxZM1ZzWVhKTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd09pQWhJWGN1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlRMjlzYjNKTllYQTZJQ0VoZHk1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrTnZiRzl5VFdGd1JXNWpiMlJwYm1jNklIQW9keTV6Y0dWamRXeGhja052Ykc5eVRXRndLU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXeHdhR0ZOWVhBNklDRWhkeTVoYkhCb1lVMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXeHdhR0ZVWlhOME9pQkRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ozSmhaR2xsYm5STllYQTZJQ0VoZHk1bmNtRmthV1Z1ZEUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNDZJSGN1YzJobFpXNGdQaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR1ZsYmtOdmJHOXlUV0Z3T2lBaElYY3VjMmhsWlc1RGIyeHZjazFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhsWlc1RGIyeHZjazFoY0VWdVkyOWthVzVuT2lCd0tIY3VjMmhsWlc1RGIyeHZjazFoY0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWldWdVVtOTFaMmh1WlhOelRXRndPaUFoSVhjdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5WVc1emJXbHpjMmx2YmpvZ2R5NTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyMXBjM05wYjI1TllYQTZJQ0VoZHk1MGNtRnVjMjFwYzNOcGIyNU5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hV05yYm1WemMwMWhjRG9nSVNGM0xuUm9hV05yYm1WemMwMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXRZbWx1WlRvZ2R5NWpiMjFpYVc1bExBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaFVZVzVuWlc1MGN6b2dJU0YzTG01dmNtMWhiRTFoY0NBbUppQWhJVVl1WjJWdmJXVjBjbmtnSmlZZ0lTRkdMbWRsYjIxbGRISjVMbUYwZEhKcFluVjBaWE11ZEdGdVoyVnVkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUIzTG5abGNuUmxlRU52Ykc5eWN5d0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRV3h3YUdGek9pQjNMblpsY25SbGVFTnZiRzl5Y3lBOVBUMGdJVEFnSmlZZ0lTRkdMbWRsYjIxbGRISjVJQ1ltSUNFaFJpNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUlDWW1JRVl1WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3k1amIyeHZjaTVwZEdWdFUybDZaU0E5UFQwZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRWWFp6T2lBaElYY3ViV0Z3SUh4OElDRWhkeTVpZFcxd1RXRndJSHg4SUNFaGR5NXViM0p0WVd4TllYQWdmSHdnSVNGM0xuTndaV04xYkdGeVRXRndJSHg4SUNFaGR5NWhiSEJvWVUxaGNDQjhmQ0FoSVhjdVpXMXBjM05wZG1WTllYQWdmSHdnSVNGM0xuSnZkV2RvYm1WemMwMWhjQ0I4ZkNBaElYY3ViV1YwWVd4dVpYTnpUV0Z3SUh4OElDRWhkeTVqYkdWaGNtTnZZWFJOWVhBZ2ZId2dJU0YzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQjhmQ0FoSVhjdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lIeDhJQ0VoZHk1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnZkh3Z0lTRjNMblJ5WVc1emJXbHpjMmx2YmsxaGNDQjhmQ0FoSVhjdWRHaHBZMnR1WlhOelRXRndJSHg4SUNFaGR5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0I4ZkNBaElYY3VjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQjhmQ0FoSVhjdWMyaGxaVzVEYjJ4dmNrMWhjQ0I4ZkNBaElYY3VjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhWMmMxWmxjblJsZUU5dWJIazZJQ0VvSVNGM0xtMWhjQ0I4ZkNBaElYY3VZblZ0Y0UxaGNDQjhmQ0FoSVhjdWJtOXliV0ZzVFdGd0lIeDhJQ0VoZHk1emNHVmpkV3hoY2sxaGNDQjhmQ0FoSVhjdVlXeHdhR0ZOWVhBZ2ZId2dJU0YzTG1WdGFYTnphWFpsVFdGd0lIeDhJQ0VoZHk1eWIzVm5hRzVsYzNOTllYQWdmSHdnSVNGM0xtMWxkR0ZzYm1WemMwMWhjQ0I4ZkNBaElYY3VZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJSHg4SUhjdWRISmhibk50YVhOemFXOXVJRDRnTUNCOGZDQWhJWGN1ZEhKaGJuTnRhWE56YVc5dVRXRndJSHg4SUNFaGR5NTBhR2xqYTI1bGMzTk5ZWEFnZkh3Z0lTRjNMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUh4OElDRWhkeTV6Y0dWamRXeGhja052Ykc5eVRXRndJSHg4SUhjdWMyaGxaVzRnUGlBd0lIeDhJQ0VoZHk1emFHVmxia052Ykc5eVRXRndJSHg4SUNFaGR5NXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDa2dKaVlnSVNGM0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdabTluT2lBaElVOHNDaUFnSUNBZ0lDQWdJQ0FnSUhWelpVWnZaem9nZHk1bWIyY3NDaUFnSUNBZ0lDQWdJQ0FnSUdadlowVjRjREk2SUU4Z0ppWWdUeTVwYzBadlowVjRjRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnNZWFJUYUdGa2FXNW5PaUFoSVhjdVpteGhkRk5vWVdScGJtY3NDaUFnSUNBZ0lDQWdJQ0FnSUhOcGVtVkJkSFJsYm5WaGRHbHZiam9nZHk1emFYcGxRWFIwWlc1MVlYUnBiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWEk2SUhVc0NpQWdJQ0FnSUNBZ0lDQWdJSE5yYVc1dWFXNW5PaUJHTG1selUydHBibTVsWkUxbGMyZ2dQVDA5SUNFd0lDWW1JRmNnUGlBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J0WVhoQ2IyNWxjem9nVnl3S0lDQWdJQ0FnSUNBZ0lDQWdkWE5sVm1WeWRHVjRWR1Y0ZEhWeVpUb2daQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXOXljR2hVWVhKblpYUnpPaUFoSVVZdVoyVnZiV1YwY25rZ0ppWWdJU0ZHTG1kbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2JXOXljR2hPYjNKdFlXeHpPaUFoSVVZdVoyVnZiV1YwY25rZ0ppWWdJU0ZHTG1kbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeTV1YjNKdFlXd3NDaUFnSUNBZ0lDQWdJQ0FnSUcxdmNuQm9WR0Z5WjJWMGMwTnZkVzUwT2lBaElVWXVaMlZ2YldWMGNua2dKaVlnSVNGR0xtZGxiMjFsZEhKNUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2YmlBL0lFWXVaMlZ2YldWMGNua3ViVzl5Y0doQmRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxteGxibWQwYUNBNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVUnBja3hwWjJoMGN6b2dSUzVrYVhKbFkzUnBiMjVoYkM1c1pXNW5kR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJ2YVc1MFRHbG5hSFJ6T2lCRkxuQnZhVzUwTG14bGJtZDBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVM0J2ZEV4cFoyaDBjem9nUlM1emNHOTBMbXhsYm1kMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFVtVmpkRUZ5WldGTWFXZG9kSE02SUVVdWNtVmpkRUZ5WldFdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFJWlcxcFRHbG5hSFJ6T2lCRkxtaGxiV2t1YkdWdVozUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCdWRXMUVhWEpNYVdkb2RGTm9ZV1J2ZDNNNklFVXVaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWEF1YkdWdVozUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCdWRXMVFiMmx1ZEV4cFoyaDBVMmhoWkc5M2N6b2dSUzV3YjJsdWRGTm9ZV1J2ZDAxaGNDNXNaVzVuZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZOd2IzUk1hV2RvZEZOb1lXUnZkM002SUVVdWMzQnZkRk5vWVdSdmQwMWhjQzVzWlc1bmRHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVTnNhWEJ3YVc1blVHeGhibVZ6T2lCdkxtNTFiVkJzWVc1bGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFEyeHBjRWx1ZEdWeWMyVmpkR2x2YmpvZ2J5NXVkVzFKYm5SbGNuTmxZM1JwYjI0c0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2dkeTVtYjNKdFlYUXNDaUFnSUNBZ0lDQWdJQ0FnSUdScGRHaGxjbWx1WnpvZ2R5NWthWFJvWlhKcGJtY3NDaUFnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0VWdVlXSnNaV1E2SUhNdWMyaGhaRzkzVFdGd0xtVnVZV0pzWldRZ0ppWWdSQzVzWlc1bmRHZ2dQaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkTllYQlVlWEJsT2lCekxuTm9ZV1J2ZDAxaGNDNTBlWEJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHbHVaem9nZHk1MGIyNWxUV0Z3Y0dWa0lEOGdjeTUwYjI1bFRXRndjR2x1WnlBNklGOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCd2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjem9nY3k1d2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjeXdLSUNBZ0lDQWdJQ0FnSUNBZ2NISmxiWFZzZEdsd2JHbGxaRUZzY0doaE9pQjNMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHOTFZbXhsVTJsa1pXUTZJSGN1YzJsa1pTQTlQVDBnUTJrc0NpQWdJQ0FnSUNBZ0lDQWdJR1pzYVhCVGFXUmxaRG9nZHk1emFXUmxJRDA5UFNCcGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFFZV05yYVc1bk9pQjNMbVJsY0hSb1VHRmphMmx1WnlBaFBUMGdkbTlwWkNBd0lEOGdkeTVrWlhCMGFGQmhZMnRwYm1jZ09pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGd3UVhSMGNtbGlkWFJsVG1GdFpUb2dkeTVwYm1SbGVEQkJkSFJ5YVdKMWRHVk9ZVzFsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmxlSFJsYm5OcGIyNUVaWEpwZG1GMGFYWmxjem9nZHk1bGVIUmxibk5wYjI1eklDWW1JSGN1WlhoMFpXNXphVzl1Y3k1a1pYSnBkbUYwYVhabGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnWlhoMFpXNXphVzl1Um5KaFowUmxjSFJvT2lCM0xtVjRkR1Z1YzJsdmJuTWdKaVlnZHk1bGVIUmxibk5wYjI1ekxtWnlZV2RFWlhCMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnWlhoMFpXNXphVzl1UkhKaGQwSjFabVpsY25NNklIY3VaWGgwWlc1emFXOXVjeUFtSmlCM0xtVjRkR1Z1YzJsdmJuTXVaSEpoZDBKMVptWmxjbk1zQ2lBZ0lDQWdJQ0FnSUNBZ0lHVjRkR1Z1YzJsdmJsTm9ZV1JsY2xSbGVIUjFjbVZNVDBRNklIY3VaWGgwWlc1emFXOXVjeUFtSmlCM0xtVjRkR1Z1YzJsdmJuTXVjMmhoWkdWeVZHVjRkSFZ5WlV4UFJDd0tJQ0FnSUNBZ0lDQWdJQ0FnY21WdVpHVnlaWEpGZUhSbGJuTnBiMjVHY21GblJHVndkR2c2SUdnZ2ZId2diaTVvWVhNb0lrVllWRjltY21GblgyUmxjSFJvSWlrc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlSWGgwWlc1emFXOXVSSEpoZDBKMVptWmxjbk02SUdnZ2ZId2diaTVvWVhNb0lsZEZRa2RNWDJSeVlYZGZZblZtWm1WeWN5SXBMQW9nSUNBZ0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2tWNGRHVnVjMmx2YmxOb1lXUmxjbFJsZUhSMWNtVk1iMlE2SUdnZ2ZId2diaTVvWVhNb0lrVllWRjl6YUdGa1pYSmZkR1Y0ZEhWeVpWOXNiMlFpS1N3S0lDQWdJQ0FnSUNBZ0lDQWdZM1Z6ZEc5dFVISnZaM0poYlVOaFkyaGxTMlY1T2lCM0xtTjFjM1J2YlZCeWIyZHlZVzFEWVdOb1pVdGxlU2dwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIa29keWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQkZJRDBnVzEwN0NpQWdJQ0FnSUNBZ2FXWWdLSGN1YzJoaFpHVnlTVVFnUHlCRkxuQjFjMmdvZHk1emFHRmtaWEpKUkNrZ09pQW9SUzV3ZFhOb0tIY3VZM1Z6ZEc5dFZtVnlkR1Y0VTJoaFpHVnlTVVFwTENCRkxuQjFjMmdvZHk1amRYTjBiMjFHY21GbmJXVnVkRk5vWVdSbGNrbEVLU2tzSUhjdVpHVm1hVzVsY3lBaFBUMGdkbTlwWkNBd0tTQm1iM0lvYkdWMElFUWdhVzRnZHk1a1pXWnBibVZ6S1VVdWNIVnphQ2hFS1N3Z1JTNXdkWE5vS0hjdVpHVm1hVzVsYzF0RVhTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIY3VhWE5TWVhkVGFHRmtaWEpOWVhSbGNtbGhiQ0E5UFQwZ0lURWdKaVlnS0dJb1JTd2dkeWtzSUVFb1JTd2dkeWtzSUVVdWNIVnphQ2h6TG05MWRIQjFkRVZ1WTI5a2FXNW5LU2tzSUVVdWNIVnphQ2gzTG1OMWMzUnZiVkJ5YjJkeVlXMURZV05vWlV0bGVTa3NJRVV1YW05cGJpZ3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWWloM0xDQkZLU0I3Q2lBZ0lDQWdJQ0FnZHk1d2RYTm9LRVV1Y0hKbFkybHphVzl1S1N3Z2R5NXdkWE5vS0VVdWIzVjBjSFYwUlc1amIyUnBibWNwTENCM0xuQjFjMmdvUlM1dFlYQkZibU52WkdsdVp5a3NJSGN1Y0hWemFDaEZMbTFoZEdOaGNFVnVZMjlrYVc1bktTd2dkeTV3ZFhOb0tFVXVaVzUyVFdGd1RXOWtaU2tzSUhjdWNIVnphQ2hGTG1WdWRrMWhjRVZ1WTI5a2FXNW5LU3dnZHk1d2RYTm9LRVV1YkdsbmFIUk5ZWEJGYm1OdlpHbHVaeWtzSUhjdWNIVnphQ2hGTG1WdGFYTnphWFpsVFdGd1JXNWpiMlJwYm1jcExDQjNMbkIxYzJnb1JTNWpiMjFpYVc1bEtTd2dkeTV3ZFhOb0tFVXVkbVZ5ZEdWNFZYWnpLU3dnZHk1d2RYTm9LRVV1Wm05blJYaHdNaWtzSUhjdWNIVnphQ2hGTG5OcGVtVkJkSFJsYm5WaGRHbHZiaWtzSUhjdWNIVnphQ2hGTG0xaGVFSnZibVZ6S1N3Z2R5NXdkWE5vS0VVdWJXOXljR2hVWVhKblpYUnpRMjkxYm5RcExDQjNMbkIxYzJnb1JTNXVkVzFFYVhKTWFXZG9kSE1wTENCM0xuQjFjMmdvUlM1dWRXMVFiMmx1ZEV4cFoyaDBjeWtzSUhjdWNIVnphQ2hGTG01MWJWTndiM1JNYVdkb2RITXBMQ0IzTG5CMWMyZ29SUzV1ZFcxSVpXMXBUR2xuYUhSektTd2dkeTV3ZFhOb0tFVXViblZ0VW1WamRFRnlaV0ZNYVdkb2RITXBMQ0IzTG5CMWMyZ29SUzV1ZFcxRWFYSk1hV2RvZEZOb1lXUnZkM01wTENCM0xuQjFjMmdvUlM1dWRXMVFiMmx1ZEV4cFoyaDBVMmhoWkc5M2N5a3NJSGN1Y0hWemFDaEZMbTUxYlZOd2IzUk1hV2RvZEZOb1lXUnZkM01wTENCM0xuQjFjMmdvUlM1emFHRmtiM2ROWVhCVWVYQmxLU3dnZHk1d2RYTm9LRVV1ZEc5dVpVMWhjSEJwYm1jcExDQjNMbkIxYzJnb1JTNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5a3NJSGN1Y0hWemFDaEZMbTUxYlVOc2FYQkpiblJsY25ObFkzUnBiMjRwTENCM0xuQjFjMmdvUlM1bWIzSnRZWFFwTENCM0xuQjFjMmdvUlM1emNHVmpkV3hoY2tOdmJHOXlUV0Z3Ulc1amIyUnBibWNwTENCM0xuQjFjMmdvUlM1emFHVmxia052Ykc5eVRXRndSVzVqYjJScGJtY3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUVNoM0xDQkZLU0I3Q2lBZ0lDQWdJQ0FnWVM1a2FYTmhZbXhsUVd4c0tDa3NJRVV1YVhOWFpXSkhURElnSmlZZ1lTNWxibUZpYkdVb01Da3NJRVV1YzNWd2NHOXlkSE5XWlhKMFpYaFVaWGgwZFhKbGN5QW1KaUJoTG1WdVlXSnNaU2d4S1N3Z1JTNXBibk4wWVc1amFXNW5JQ1ltSUdFdVpXNWhZbXhsS0RJcExDQkZMbWx1YzNSaGJtTnBibWREYjJ4dmNpQW1KaUJoTG1WdVlXSnNaU2d6S1N3Z1JTNXRZWEFnSmlZZ1lTNWxibUZpYkdVb05Da3NJRVV1YldGMFkyRndJQ1ltSUdFdVpXNWhZbXhsS0RVcExDQkZMbVZ1ZGsxaGNDQW1KaUJoTG1WdVlXSnNaU2cyS1N3Z1JTNWxiblpOWVhCRGRXSmxWVllnSmlZZ1lTNWxibUZpYkdVb055a3NJRVV1YkdsbmFIUk5ZWEFnSmlZZ1lTNWxibUZpYkdVb09Da3NJRVV1WVc5TllYQWdKaVlnWVM1bGJtRmliR1VvT1Nrc0lFVXVaVzFwYzNOcGRtVk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01UQXBMQ0JGTG1KMWJYQk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01URXBMQ0JGTG01dmNtMWhiRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hNaWtzSUVVdWIySnFaV04wVTNCaFkyVk9iM0p0WVd4TllYQWdKaVlnWVM1bGJtRmliR1VvTVRNcExDQkZMblJoYm1kbGJuUlRjR0ZqWlU1dmNtMWhiRTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hOQ2tzSUVVdVkyeGxZWEpqYjJGMElDWW1JR0V1Wlc1aFlteGxLREUxS1N3Z1JTNWpiR1ZoY21OdllYUk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01UWXBMQ0JGTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQW1KaUJoTG1WdVlXSnNaU2d4Tnlrc0lFVXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJQ1ltSUdFdVpXNWhZbXhsS0RFNEtTd2dSUzVrYVhOd2JHRmpaVzFsYm5STllYQWdKaVlnWVM1bGJtRmliR1VvTVRrcExDQkZMbk53WldOMWJHRnlUV0Z3SUNZbUlHRXVaVzVoWW14bEtESXdLU3dnUlM1eWIzVm5hRzVsYzNOTllYQWdKaVlnWVM1bGJtRmliR1VvTWpFcExDQkZMbTFsZEdGc2JtVnpjMDFoY0NBbUppQmhMbVZ1WVdKc1pTZ3lNaWtzSUVVdVozSmhaR2xsYm5STllYQWdKaVlnWVM1bGJtRmliR1VvTWpNcExDQkZMbUZzY0doaFRXRndJQ1ltSUdFdVpXNWhZbXhsS0RJMEtTd2dSUzVoYkhCb1lWUmxjM1FnSmlZZ1lTNWxibUZpYkdVb01qVXBMQ0JGTG5abGNuUmxlRU52Ykc5eWN5QW1KaUJoTG1WdVlXSnNaU2d5Tmlrc0lFVXVkbVZ5ZEdWNFFXeHdhR0Z6SUNZbUlHRXVaVzVoWW14bEtESTNLU3dnUlM1MlpYSjBaWGhWZG5NZ0ppWWdZUzVsYm1GaWJHVW9NamdwTENCRkxuWmxjblJsZUZSaGJtZGxiblJ6SUNZbUlHRXVaVzVoWW14bEtESTVLU3dnUlM1MWRuTldaWEowWlhoUGJteDVJQ1ltSUdFdVpXNWhZbXhsS0RNd0tTd2dSUzVtYjJjZ0ppWWdZUzVsYm1GaWJHVW9NekVwTENCM0xuQjFjMmdvWVM1dFlYTnJLU3dnWVM1a2FYTmhZbXhsUVd4c0tDa3NJRVV1ZFhObFJtOW5JQ1ltSUdFdVpXNWhZbXhsS0RBcExDQkZMbVpzWVhSVGFHRmthVzVuSUNZbUlHRXVaVzVoWW14bEtERXBMQ0JGTG14dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSWdKaVlnWVM1bGJtRmliR1VvTWlrc0lFVXVjMnRwYm01cGJtY2dKaVlnWVM1bGJtRmliR1VvTXlrc0lFVXVkWE5sVm1WeWRHVjRWR1Y0ZEhWeVpTQW1KaUJoTG1WdVlXSnNaU2cwS1N3Z1JTNXRiM0p3YUZSaGNtZGxkSE1nSmlZZ1lTNWxibUZpYkdVb05Ta3NJRVV1Ylc5eWNHaE9iM0p0WVd4eklDWW1JR0V1Wlc1aFlteGxLRFlwTENCRkxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQW1KaUJoTG1WdVlXSnNaU2czS1N3Z1JTNXphR0ZrYjNkTllYQkZibUZpYkdWa0lDWW1JR0V1Wlc1aFlteGxLRGdwTENCRkxuQm9lWE5wWTJGc2JIbERiM0p5WldOMFRHbG5hSFJ6SUNZbUlHRXVaVzVoWW14bEtEa3BMQ0JGTG1SdmRXSnNaVk5wWkdWa0lDWW1JR0V1Wlc1aFlteGxLREV3S1N3Z1JTNW1iR2x3VTJsa1pXUWdKaVlnWVM1bGJtRmliR1VvTVRFcExDQkZMbVJsY0hSb1VHRmphMmx1WnlBbUppQmhMbVZ1WVdKc1pTZ3hNaWtzSUVVdVpHbDBhR1Z5YVc1bklDWW1JR0V1Wlc1aFlteGxLREV6S1N3Z1JTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0FtSmlCaExtVnVZV0pzWlNneE5Da3NJRVV1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0FtSmlCaExtVnVZV0pzWlNneE5Ta3NJRVV1ZEhKaGJuTnRhWE56YVc5dUlDWW1JR0V1Wlc1aFlteGxLREUyS1N3Z1JTNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVGNwTENCRkxuUm9hV05yYm1WemMwMWhjQ0FtSmlCaExtVnVZV0pzWlNneE9Da3NJRVV1YzJobFpXNGdKaVlnWVM1bGJtRmliR1VvTVRrcExDQkZMbk5vWldWdVEyOXNiM0pOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NakFwTENCRkxuTm9aV1Z1VW05MVoyaHVaWE56VFdGd0lDWW1JR0V1Wlc1aFlteGxLREl4S1N3Z2R5NXdkWE5vS0dFdWJXRnpheWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTUtIY3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJSFpiZHk1MGVYQmxYU3dnUkRzS0lDQWdJQ0FnSUNCcFppQW9SU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVlNBOUlIRjBXMFZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQkVJRDBnZFdZdVkyeHZibVVvVlM1MWJtbG1iM0p0Y3lrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUVRZ1BTQjNMblZ1YVdadmNtMXpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQkVPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnU1NoM0xDQkZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFUTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlZJRDBnTUN3Z1JpQTlJR011YkdWdVozUm9PeUJWSUR3Z1Jqc2dWU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUU4Z1BTQmpXMVZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVHk1allXTm9aVXRsZVNBOVBUMGdSU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUkNBOUlFOHNJQ3NyUkM1MWMyVmtWR2x0WlhNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1JDQTlQVDBnZG05cFpDQXdJQ1ltSUNoRUlEMGdibVYzSUdoNEtITXNJRVVzSUhjc0lISXBMQ0JqTG5CMWMyZ29SQ2twTENCRU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdheWgzS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLQzB0ZHk1MWMyVmtWR2x0WlhNZ1BUMDlJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQmpMbWx1WkdWNFQyWW9keWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmJSVjBnUFNCalcyTXViR1Z1WjNSb0lDMGdNVjBzSUdNdWNHOXdLQ2tzSUhjdVpHVnpkSEp2ZVNncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRUlvZHlrZ2V3b2dJQ0FnSUNBZ0lHd3VjbVZ0YjNabEtIY3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVUNncElIc0tJQ0FnSUNBZ0lDQnNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWjJWMFVHRnlZVzFsZEdWeWN6b2dYeXdLSUNBZ0lDQWdJQ0JuWlhSUWNtOW5jbUZ0UTJGamFHVkxaWGs2SUhrc0NpQWdJQ0FnSUNBZ1oyVjBWVzVwWm05eWJYTTZJRXdzQ2lBZ0lDQWdJQ0FnWVdOeGRXbHlaVkJ5YjJkeVlXMDZJRWtzQ2lBZ0lDQWdJQ0FnY21Wc1pXRnpaVkJ5YjJkeVlXMDZJR3NzQ2lBZ0lDQWdJQ0FnY21Wc1pXRnpaVk5vWVdSbGNrTmhZMmhsT2lCQ0xBb2dJQ0FnSUNBZ0lIQnliMmR5WVcxek9pQmpMQW9nSUNBZ0lDQWdJR1JwYzNCdmMyVTZJRkFLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnWm5nb0tTQjdDaUFnSUNCc1pYUWdjeUE5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnWlNoeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQnpMbWRsZENoeUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2J5QTlQVDBnZG05cFpDQXdJQ1ltSUNodklEMGdlMzBzSUhNdWMyVjBLSElzSUc4cEtTd2dienNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhRb2Npa2dld29nSUNBZ0lDQWdJSE11WkdWc1pYUmxLSElwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JpaHlMQ0J2TENCaEtTQjdDaUFnSUNBZ0lDQWdjeTVuWlhRb2NpbGJiMTBnUFNCaE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhU2dwSUhzS0lDQWdJQ0FnSUNCeklEMGdibVYzSUZkbFlXdE5ZWEE3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGREb2daU3dLSUNBZ0lDQWdJQ0J5WlcxdmRtVTZJSFFzQ2lBZ0lDQWdJQ0FnZFhCa1lYUmxPaUJ1TEFvZ0lDQWdJQ0FnSUdScGMzQnZjMlU2SUdrS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z2NIZ29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE11WjNKdmRYQlBjbVJsY2lBaFBUMGdaUzVuY205MWNFOXlaR1Z5SUQ4Z2N5NW5jbTkxY0U5eVpHVnlJQzBnWlM1bmNtOTFjRTl5WkdWeUlEb2djeTV5Wlc1a1pYSlBjbVJsY2lBaFBUMGdaUzV5Wlc1a1pYSlBjbVJsY2lBL0lITXVjbVZ1WkdWeVQzSmtaWElnTFNCbExuSmxibVJsY2s5eVpHVnlJRG9nY3k1dFlYUmxjbWxoYkM1cFpDQWhQVDBnWlM1dFlYUmxjbWxoYkM1cFpDQS9JSE11YldGMFpYSnBZV3d1YVdRZ0xTQmxMbTFoZEdWeWFXRnNMbWxrSURvZ2N5NTZJQ0U5UFNCbExub2dQeUJ6TG5vZ0xTQmxMbm9nT2lCekxtbGtJQzBnWlM1cFpEc0tmUXBtZFc1amRHbHZiaUJaYkNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NW5jbTkxY0U5eVpHVnlJQ0U5UFNCbExtZHliM1Z3VDNKa1pYSWdQeUJ6TG1keWIzVndUM0prWlhJZ0xTQmxMbWR5YjNWd1QzSmtaWElnT2lCekxuSmxibVJsY2s5eVpHVnlJQ0U5UFNCbExuSmxibVJsY2s5eVpHVnlJRDhnY3k1eVpXNWtaWEpQY21SbGNpQXRJR1V1Y21WdVpHVnlUM0prWlhJZ09pQnpMbm9nSVQwOUlHVXVlaUEvSUdVdWVpQXRJSE11ZWlBNklITXVhV1FnTFNCbExtbGtPd3A5Q21aMWJtTjBhVzl1SUZwc0tDa2dld29nSUNBZ2JHVjBJSE1nUFNCYlhTd2daU0E5SURBc0lIUWdQU0JiWFN3Z2JpQTlJRnRkTENCcElEMGdXMTA3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLQ2tnZXdvZ0lDQWdJQ0FnSUdVZ1BTQXdMQ0IwTG14bGJtZDBhQ0E5SURBc0lHNHViR1Z1WjNSb0lEMGdNQ3dnYVM1c1pXNW5kR2dnUFNBd093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdieWgxTENCa0xDQm1MQ0J0TENCNExDQjJLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHY2dQU0J6VzJWZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbklEMDlQU0IyYjJsa0lEQWdQeUFvWnlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdRNklIVXVhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ2RTd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWdmJXVjBjbms2SUdRc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNPaUJtTEFvZ0lDQWdJQ0FnSUNBZ0lDQm5jbTkxY0U5eVpHVnlPaUJ0TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKUGNtUmxjam9nZFM1eVpXNWtaWEpQY21SbGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnZWpvZ2VDd0tJQ0FnSUNBZ0lDQWdJQ0FnWjNKdmRYQTZJSFlLSUNBZ0lDQWdJQ0I5TENCelcyVmRJRDBnWnlrZ09pQW9aeTVwWkNBOUlIVXVhV1FzSUdjdWIySnFaV04wSUQwZ2RTd2daeTVuWlc5dFpYUnllU0E5SUdRc0lHY3ViV0YwWlhKcFlXd2dQU0JtTENCbkxtZHliM1Z3VDNKa1pYSWdQU0J0TENCbkxuSmxibVJsY2s5eVpHVnlJRDBnZFM1eVpXNWtaWEpQY21SbGNpd2daeTU2SUQwZ2VDd2daeTVuY205MWNDQTlJSFlwTENCbEt5c3NJR2M3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaEtIVXNJR1FzSUdZc0lHMHNJSGdzSUhZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHOG9kU3dnWkN3Z1ppd2diU3dnZUN3Z2RpazdDaUFnSUNBZ0lDQWdaaTUwY21GdWMyMXBjM05wYjI0Z1BpQXdJRDhnYmk1d2RYTm9LR2NwSURvZ1ppNTBjbUZ1YzNCaGNtVnVkQ0E5UFQwZ0lUQWdQeUJwTG5CMWMyZ29aeWtnT2lCMExuQjFjMmdvWnlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLSFVzSUdRc0lHWXNJRzBzSUhnc0lIWXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJRzhvZFN3Z1pDd2daaXdnYlN3Z2VDd2dkaWs3Q2lBZ0lDQWdJQ0FnWmk1MGNtRnVjMjFwYzNOcGIyNGdQaUF3SUQ4Z2JpNTFibk5vYVdaMEtHY3BJRG9nWmk1MGNtRnVjM0JoY21WdWRDQTlQVDBnSVRBZ1B5QnBMblZ1YzJocFpuUW9aeWtnT2lCMExuVnVjMmhwWm5Rb1p5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0hVc0lHUXBJSHNLSUNBZ0lDQWdJQ0IwTG14bGJtZDBhQ0ErSURFZ0ppWWdkQzV6YjNKMEtIVWdmSHdnY0hncExDQnVMbXhsYm1kMGFDQStJREVnSmlZZ2JpNXpiM0owS0dRZ2ZId2dXV3dwTENCcExteGxibWQwYUNBK0lERWdKaVlnYVM1emIzSjBLR1FnZkh3Z1dXd3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYUNncElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0JsTENCa0lEMGdjeTVzWlc1bmRHZzdJSFVnUENCa095QjFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlITmJkVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2htTG1sa0lEMDlQU0J1ZFd4c0tTQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaaTVwWkNBOUlHNTFiR3dzSUdZdWIySnFaV04wSUQwZ2JuVnNiQ3dnWmk1blpXOXRaWFJ5ZVNBOUlHNTFiR3dzSUdZdWJXRjBaWEpwWVd3Z1BTQnVkV3hzTENCbUxtZHliM1Z3SUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUc5d1lYRjFaVG9nZEN3S0lDQWdJQ0FnSUNCMGNtRnVjMjFwYzNOcGRtVTZJRzRzQ2lBZ0lDQWdJQ0FnZEhKaGJuTndZWEpsYm5RNklHa3NDaUFnSUNBZ0lDQWdhVzVwZERvZ2Npd0tJQ0FnSUNBZ0lDQndkWE5vT2lCaExBb2dJQ0FnSUNBZ0lIVnVjMmhwWm5RNklHd3NDaUFnSUNBZ0lDQWdabWx1YVhOb09pQm9MQW9nSUNBZ0lDQWdJSE52Y25RNklHTUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdiWGdvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdablZ1WTNScGIyNGdaU2h1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhNdWFHRnpLRzRwSUQwOVBTQWhNU0EvSUNoeUlEMGdibVYzSUZwc0xDQnpMbk5sZENodUxDQmJDaUFnSUNBZ0lDQWdJQ0FnSUhJS0lDQWdJQ0FnSUNCZEtTa2dPaUJwSUQ0OUlITXVaMlYwS0c0cExteGxibWQwYUNBL0lDaHlJRDBnYm1WM0lGcHNMQ0J6TG1kbGRDaHVLUzV3ZFhOb0tISXBLU0E2SUhJZ1BTQnpMbWRsZENodUtWdHBYU3dnY2pzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIUW9LU0I3Q2lBZ0lDQWdJQ0FnY3lBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHVXNDaUFnSUNBZ0lDQWdaR2x6Y0c5elpUb2dkQW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJuZUNncElIc0tJQ0FnSUd4bGRDQnpJRDBnZTMwN0NpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jMXRsTG1sa1hTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjMXRsTG1sa1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsTG5SNWNHVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVJHbHlaV04wYVc5dVlXeE1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCdVpYY2dUU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHNWxkeUJoWlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKVGNHOTBUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCdVpYY2dUU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x5WldOMGFXOXVPaUJ1WlhjZ1RTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUc1bGR5QmhaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym1WRGIzTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJsYm5WdFluSmhRMjl6T2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXTmhlVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUWIybHVkRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2JtVjNJRTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQnVaWGNnWVdVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzUmhibU5sT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXTmhlVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSVpXMXBjM0JvWlhKbFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nYm1WM0lFMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITnJlVU52Ykc5eU9pQnVaWGNnWVdVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkeWIzVnVaRU52Ykc5eU9pQnVaWGNnWVdVS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVVtVmpkRUZ5WldGTWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHNWxkeUJoWlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUc1bGR5Qk5MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZV3htVjJsa2RHZzZJRzVsZHlCTkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lXeG1TR1ZwWjJoME9pQnVaWGNnVFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITmJaUzVwWkYwZ1BTQjBMQ0IwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z2VIZ29LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlIdDlPd29nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOYlpTNXBaRjBnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhOYlpTNXBaRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTNTBlWEJsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa1JwY21WamRHbHZibUZzVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDBKcFlYTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxSmhaR2wxY3pvZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVFdGd1UybDZaVG9nYm1WM0lGZ0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVM0J2ZEV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkQ2FXRnpPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE9iM0p0WVd4Q2FXRnpPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZFNZV1JwZFhNNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDAxaGNGTnBlbVU2SUc1bGR5QllDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbEJ2YVc1MFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwSnBZWE02SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMUpoWkdsMWN6b2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1RXRndVMmw2WlRvZ2JtVjNJRmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSTZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVVaaGNqb2dNV1V6Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2MxdGxMbWxrWFNBOUlIUXNJSFE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmVHNLZlFwMllYSWdlWGdnUFNBd093cG1kVzVqZEdsdmJpQjJlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnS0dVdVkyRnpkRk5vWVdSdmR5QS9JREVnT2lBd0tTQXRJQ2h6TG1OaGMzUlRhR0ZrYjNjZ1B5QXhJRG9nTUNrN0NuMEtablZ1WTNScGIyNGdYM2dvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCdVpYY2daM2dzSUc0Z1BTQjRlQ2dwTENCcElEMGdld29nSUNBZ0lDQWdJSFpsY25OcGIyNDZJREFzQ2lBZ0lDQWdJQ0FnYUdGemFEb2dld29nSUNBZ0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJFeGxibWQwYURvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBUR1Z1WjNSb09pQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQnZkRXhsYm1kMGFEb2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxZM1JCY21WaFRHVnVaM1JvT2lBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWdGFVeGxibWQwYURvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJVUnBjbVZqZEdsdmJtRnNVMmhoWkc5M2N6b2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVkJ2YVc1MFUyaGhaRzkzY3pvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWTndiM1JUYUdGa2IzZHpPaUF0TVFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1lXMWlhV1Z1ZERvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ1hTd0tJQ0FnSUNBZ0lDQndjbTlpWlRvZ1cxMHNDaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVZV3c2SUZ0ZExBb2dJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M09pQmJYU3dLSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0RvZ1cxMHNDaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWFJ5YVhnNklGdGRMQW9nSUNBZ0lDQWdJSE53YjNRNklGdGRMQW9nSUNBZ0lDQWdJSE53YjNSVGFHRmtiM2M2SUZ0ZExBb2dJQ0FnSUNBZ0lITndiM1JUYUdGa2IzZE5ZWEE2SUZ0ZExBb2dJQ0FnSUNBZ0lITndiM1JUYUdGa2IzZE5ZWFJ5YVhnNklGdGRMQW9nSUNBZ0lDQWdJSEpsWTNSQmNtVmhPaUJiWFN3S0lDQWdJQ0FnSUNCeVpXTjBRWEpsWVV4VVF6RTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ2NtVmpkRUZ5WldGTVZFTXlPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lIQnZhVzUwT2lCYlhTd0tJQ0FnSUNBZ0lDQndiMmx1ZEZOb1lXUnZkem9nVzEwc0NpQWdJQ0FnSUNBZ2NHOXBiblJUYUdGa2IzZE5ZWEE2SUZ0ZExBb2dJQ0FnSUNBZ0lIQnZhVzUwVTJoaFpHOTNUV0YwY21sNE9pQmJYU3dLSUNBZ0lDQWdJQ0JvWlcxcE9pQmJYUW9nSUNBZ2ZUc0tJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQTdJR2dnUENBNU95Qm9LeXNwYVM1d2NtOWlaUzV3ZFhOb0tHNWxkeUJOS1RzS0lDQWdJR3hsZENCeUlEMGdibVYzSUUwc0lHOGdQU0J1WlhjZ2NHVXNJR0VnUFNCdVpYY2djR1U3Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLR2dzSUhVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlEQXNJR1lnUFNBd0xDQnRJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdzZ1BTQXdPeUJySUR3Z09Uc2dheXNyS1drdWNISnZZbVZiYTEwdWMyVjBLREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENCNElEMGdNQ3dnZGlBOUlEQXNJR2NnUFNBd0xDQndJRDBnTUN3Z1h5QTlJREFzSUhrZ1BTQXdMQ0JpSUQwZ01Dd2dRU0E5SURBN0NpQWdJQ0FnSUNBZ2FDNXpiM0owS0haNEtUc0tJQ0FnSUNBZ0lDQnNaWFFnVENBOUlIVWdJVDA5SUNFd0lEOGdUV0YwYUM1UVNTQTZJREU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JyTVNBOUlEQXNJRUlnUFNCb0xteGxibWQwYURzZ2F6RWdQQ0JDT3lCck1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCb1cyc3hYU3dnZHlBOUlGQXVZMjlzYjNJc0lFVWdQU0JRTG1sdWRHVnVjMmwwZVN3Z1JDQTlJRkF1WkdsemRHRnVZMlVzSUZVZ1BTQlFMbk5vWVdSdmR5QW1KaUJRTG5Ob1lXUnZkeTV0WVhBZ1B5QlFMbk5vWVdSdmR5NXRZWEF1ZEdWNGRIVnlaU0E2SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFFMbWx6UVcxaWFXVnVkRXhwWjJoMEtTQmtJQ3M5SUhjdWNpQXFJRVVnS2lCTUxDQm1JQ3M5SUhjdVp5QXFJRVVnS2lCTUxDQnRJQ3M5SUhjdVlpQXFJRVVnS2lCTU93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hRTG1selRHbG5hSFJRY205aVpTa2dabTl5S0d4bGRDQkdJRDBnTURzZ1JpQThJRGs3SUVZckt5bHBMbkJ5YjJKbFcwWmRMbUZrWkZOallXeGxaRlpsWTNSdmNpaFFMbk5vTG1OdlpXWm1hV05wWlc1MGMxdEdYU3dnUlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLRkF1YVhORWFYSmxZM1JwYjI1aGJFeHBaMmgwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSakVnUFNCMExtZGxkQ2hRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaEdNUzVqYjJ4dmNpNWpiM0I1S0ZBdVkyOXNiM0lwTG0xMWJIUnBjR3g1VTJOaGJHRnlLRkF1YVc1MFpXNXphWFI1SUNvZ1RDa3NJRkF1WTJGemRGTm9ZV1J2ZHlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUElEMGdVQzV6YUdGa2IzY3NJRzVsSUQwZ2JpNW5aWFFvVUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVV1YzJoaFpHOTNRbWxoY3lBOUlFOHVZbWxoY3l3Z2JtVXVjMmhoWkc5M1RtOXliV0ZzUW1saGN5QTlJRTh1Ym05eWJXRnNRbWxoY3l3Z2JtVXVjMmhoWkc5M1VtRmthWFZ6SUQwZ1R5NXlZV1JwZFhNc0lHNWxMbk5vWVdSdmQwMWhjRk5wZW1VZ1BTQlBMbTFoY0ZOcGVtVXNJR2t1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2RiZUYwZ1BTQnVaU3dnYVM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNGdDRYU0E5SUZVc0lHa3VaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWFJ5YVhoYmVGMGdQU0JRTG5Ob1lXUnZkeTV0WVhSeWFYZ3NJSGtyS3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdVpHbHlaV04wYVc5dVlXeGJlRjBnUFNCR01Td2dlQ3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRkF1YVhOVGNHOTBUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHTWlBOUlIUXVaMlYwS0ZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRVl5TG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaFFMbTFoZEhKcGVGZHZjbXhrS1N3Z1JqSXVZMjlzYjNJdVkyOXdlU2gzS1M1dGRXeDBhWEJzZVZOallXeGhjaWhGSUNvZ1RDa3NJRVl5TG1ScGMzUmhibU5sSUQwZ1JDd2dSakl1WTI5dVpVTnZjeUE5SUUxaGRHZ3VZMjl6S0ZBdVlXNW5iR1VwTENCR01pNXdaVzUxYldKeVlVTnZjeUE5SUUxaGRHZ3VZMjl6S0ZBdVlXNW5iR1VnS2lBb01TQXRJRkF1Y0dWdWRXMWljbUVwS1N3Z1JqSXVaR1ZqWVhrZ1BTQlFMbVJsWTJGNUxDQlFMbU5oYzNSVGFHRmtiM2NwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVHpFZ1BTQlFMbk5vWVdSdmR5d2dibVV4SUQwZ2JpNW5aWFFvVUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVV4TG5Ob1lXUnZkMEpwWVhNZ1BTQlBNUzVpYVdGekxDQnVaVEV1YzJoaFpHOTNUbTl5YldGc1FtbGhjeUE5SUU4eExtNXZjbTFoYkVKcFlYTXNJRzVsTVM1emFHRmtiM2RTWVdScGRYTWdQU0JQTVM1eVlXUnBkWE1zSUc1bE1TNXphR0ZrYjNkTllYQlRhWHBsSUQwZ1R6RXViV0Z3VTJsNlpTd2dhUzV6Y0c5MFUyaGhaRzkzVzJkZElEMGdibVV4TENCcExuTndiM1JUYUdGa2IzZE5ZWEJiWjEwZ1BTQlZMQ0JwTG5Od2IzUlRhR0ZrYjNkTllYUnlhWGhiWjEwZ1BTQlFMbk5vWVdSdmR5NXRZWFJ5YVhnc0lFRXJLenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1YzNCdmRGdG5YU0E5SUVZeUxDQm5LeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9VQzVwYzFKbFkzUkJjbVZoVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR015QTlJSFF1WjJWMEtGQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSak11WTI5c2IzSXVZMjl3ZVNoM0tTNXRkV3gwYVhCc2VWTmpZV3hoY2loRktTd2dSak11YUdGc1psZHBaSFJvTG5ObGRDaFFMbmRwWkhSb0lDb2dMalVzSURBc0lEQXBMQ0JHTXk1b1lXeG1TR1ZwWjJoMExuTmxkQ2d3TENCUUxtaGxhV2RvZENBcUlDNDFMQ0F3S1N3Z2FTNXlaV04wUVhKbFlWdHdYU0E5SUVZekxDQndLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9VQzVwYzFCdmFXNTBUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHTkNBOUlIUXVaMlYwS0ZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRVkwTG1OdmJHOXlMbU52Y0hrb1VDNWpiMnh2Y2lrdWJYVnNkR2x3YkhsVFkyRnNZWElvVUM1cGJuUmxibk5wZEhrZ0tpQk1LU3dnUmpRdVpHbHpkR0Z1WTJVZ1BTQlFMbVJwYzNSaGJtTmxMQ0JHTkM1a1pXTmhlU0E5SUZBdVpHVmpZWGtzSUZBdVkyRnpkRk5vWVdSdmR5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlBNaUE5SUZBdWMyaGhaRzkzTENCdVpUSWdQU0J1TG1kbGRDaFFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpUSXVjMmhoWkc5M1FtbGhjeUE5SUU4eUxtSnBZWE1zSUc1bE1pNXphR0ZrYjNkT2IzSnRZV3hDYVdGeklEMGdUekl1Ym05eWJXRnNRbWxoY3l3Z2JtVXlMbk5vWVdSdmQxSmhaR2wxY3lBOUlFOHlMbkpoWkdsMWN5d2dibVV5TG5Ob1lXUnZkMDFoY0ZOcGVtVWdQU0JQTWk1dFlYQlRhWHBsTENCdVpUSXVjMmhoWkc5M1EyRnRaWEpoVG1WaGNpQTlJRTh5TG1OaGJXVnlZUzV1WldGeUxDQnVaVEl1YzJoaFpHOTNRMkZ0WlhKaFJtRnlJRDBnVHpJdVkyRnRaWEpoTG1aaGNpd2dhUzV3YjJsdWRGTm9ZV1J2ZDF0MlhTQTlJRzVsTWl3Z2FTNXdiMmx1ZEZOb1lXUnZkMDFoY0Z0MlhTQTlJRlVzSUdrdWNHOXBiblJUYUdGa2IzZE5ZWFJ5YVhoYmRsMGdQU0JRTG5Ob1lXUnZkeTV0WVhSeWFYZ3NJR0lyS3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWNHOXBiblJiZGwwZ1BTQkdOQ3dnZGlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZBdWFYTklaVzFwYzNCb1pYSmxUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHTlNBOUlIUXVaMlYwS0ZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JqVXVjMnQ1UTI5c2IzSXVZMjl3ZVNoUUxtTnZiRzl5S1M1dGRXeDBhWEJzZVZOallXeGhjaWhGSUNvZ1RDa3NJRVkxTG1keWIzVnVaRU52Ykc5eUxtTnZjSGtvVUM1bmNtOTFibVJEYjJ4dmNpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1JTQXFJRXdwTENCcExtaGxiV2xiWDEwZ1BTQkdOU3dnWHlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhBZ1BpQXdJQ1ltSUNobExtbHpWMlZpUjB3eUlIeDhJSE11YUdGektDSlBSVk5mZEdWNGRIVnlaVjltYkc5aGRGOXNhVzVsWVhJaUtTQTlQVDBnSVRBZ1B5QW9hUzV5WldOMFFYSmxZVXhVUXpFZ1BTQnBaUzVNVkVOZlJreFBRVlJmTVN3Z2FTNXlaV04wUVhKbFlVeFVReklnUFNCcFpTNU1WRU5mUmt4UFFWUmZNaWtnT2lCekxtaGhjeWdpVDBWVFgzUmxlSFIxY21WZmFHRnNabDltYkc5aGRGOXNhVzVsWVhJaUtTQTlQVDBnSVRBZ1B5QW9hUzV5WldOMFFYSmxZVXhVUXpFZ1BTQnBaUzVNVkVOZlNFRk1SbDh4TENCcExuSmxZM1JCY21WaFRGUkRNaUE5SUdsbExreFVRMTlJUVV4R1h6SXBJRG9nWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVlc1aFlteGxJSFJ2SUhWelpTQlNaV04wUVhKbFlVeHBaMmgwTGlCTmFYTnphVzVuSUZkbFlrZE1JR1Y0ZEdWdWMybHZibk11SWlrcExDQnBMbUZ0WW1sbGJuUmJNRjBnUFNCa0xDQnBMbUZ0WW1sbGJuUmJNVjBnUFNCbUxDQnBMbUZ0WW1sbGJuUmJNbDBnUFNCdE93b2dJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ2FTNW9ZWE5vT3dvZ0lDQWdJQ0FnSUNoSkxtUnBjbVZqZEdsdmJtRnNUR1Z1WjNSb0lDRTlQU0I0SUh4OElFa3VjRzlwYm5STVpXNW5kR2dnSVQwOUlIWWdmSHdnU1M1emNHOTBUR1Z1WjNSb0lDRTlQU0JuSUh4OElFa3VjbVZqZEVGeVpXRk1aVzVuZEdnZ0lUMDlJSEFnZkh3Z1NTNW9aVzFwVEdWdVozUm9JQ0U5UFNCZklIeDhJRWt1Ym5WdFJHbHlaV04wYVc5dVlXeFRhR0ZrYjNkeklDRTlQU0I1SUh4OElFa3ViblZ0VUc5cGJuUlRhR0ZrYjNkeklDRTlQU0JpSUh4OElFa3ViblZ0VTNCdmRGTm9ZV1J2ZDNNZ0lUMDlJRUVwSUNZbUlDaHBMbVJwY21WamRHbHZibUZzTG14bGJtZDBhQ0E5SUhnc0lHa3VjM0J2ZEM1c1pXNW5kR2dnUFNCbkxDQnBMbkpsWTNSQmNtVmhMbXhsYm1kMGFDQTlJSEFzSUdrdWNHOXBiblF1YkdWdVozUm9JRDBnZGl3Z2FTNW9aVzFwTG14bGJtZDBhQ0E5SUY4c0lHa3VaR2x5WldOMGFXOXVZV3hUYUdGa2IzY3ViR1Z1WjNSb0lEMGdlU3dnYVM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNDNXNaVzVuZEdnZ1BTQjVMQ0JwTG5CdmFXNTBVMmhoWkc5M0xteGxibWQwYUNBOUlHSXNJR2t1Y0c5cGJuUlRhR0ZrYjNkTllYQXViR1Z1WjNSb0lEMGdZaXdnYVM1emNHOTBVMmhoWkc5M0xteGxibWQwYUNBOUlFRXNJR2t1YzNCdmRGTm9ZV1J2ZDAxaGNDNXNaVzVuZEdnZ1BTQkJMQ0JwTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGMGNtbDRMbXhsYm1kMGFDQTlJSGtzSUdrdWNHOXBiblJUYUdGa2IzZE5ZWFJ5YVhndWJHVnVaM1JvSUQwZ1lpd2dhUzV6Y0c5MFUyaGhaRzkzVFdGMGNtbDRMbXhsYm1kMGFDQTlJRUVzSUVrdVpHbHlaV04wYVc5dVlXeE1aVzVuZEdnZ1BTQjRMQ0JKTG5CdmFXNTBUR1Z1WjNSb0lEMGdkaXdnU1M1emNHOTBUR1Z1WjNSb0lEMGdaeXdnU1M1eVpXTjBRWEpsWVV4bGJtZDBhQ0E5SUhBc0lFa3VhR1Z0YVV4bGJtZDBhQ0E5SUY4c0lFa3ViblZ0UkdseVpXTjBhVzl1WVd4VGFHRmtiM2R6SUQwZ2VTd2dTUzV1ZFcxUWIybHVkRk5vWVdSdmQzTWdQU0JpTENCSkxtNTFiVk53YjNSVGFHRmtiM2R6SUQwZ1FTd2dhUzUyWlhKemFXOXVJRDBnZVhnckt5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0dnc0lIVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJREFzSUdZZ1BTQXdMQ0J0SUQwZ01Dd2dlQ0E5SURBc0lIWWdQU0F3TENCbklEMGdkUzV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3SUQwZ01Dd2dYeUE5SUdndWJHVnVaM1JvT3lCd0lEd2dYenNnY0NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0JvVzNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2VTNXBjMFJwY21WamRHbHZibUZzVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdhUzVrYVhKbFkzUnBiMjVoYkZ0a1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXVaR2x5WldOMGFXOXVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloNUxtMWhkSEpwZUZkdmNteGtLU3dnY2k1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9lUzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCaUxtUnBjbVZqZEdsdmJpNXpkV0lvY2lrc0lHSXVaR2x5WldOMGFXOXVMblJ5WVc1elptOXliVVJwY21WamRHbHZiaWhuS1N3Z1pDc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIa3VhWE5UY0c5MFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlNU0E5SUdrdWMzQnZkRnR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJeExuQnZjMmwwYVc5dUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWg1TG0xaGRISnBlRmR2Y214a0tTd2dZakV1Y0c5emFYUnBiMjR1WVhCd2JIbE5ZWFJ5YVhnMEtHY3BMQ0JpTVM1a2FYSmxZM1JwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSGt1YldGMGNtbDRWMjl5YkdRcExDQnlMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloNUxuUmhjbWRsZEM1dFlYUnlhWGhYYjNKc1pDa3NJR0l4TG1ScGNtVmpkR2x2Ymk1emRXSW9jaWtzSUdJeExtUnBjbVZqZEdsdmJpNTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aeWtzSUcwckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoNUxtbHpVbVZqZEVGeVpXRk1hV2RvZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0l5SUQwZ2FTNXlaV04wUVhKbFlWdDRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0l5TG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z1lqSXVjRzl6YVhScGIyNHVZWEJ3YkhsTllYUnlhWGcwS0djcExDQmhMbWxrWlc1MGFYUjVLQ2tzSUc4dVkyOXdlU2g1TG0xaGRISnBlRmR2Y214a0tTd2dieTV3Y21WdGRXeDBhWEJzZVNobktTd2dZUzVsZUhSeVlXTjBVbTkwWVhScGIyNG9ieWtzSUdJeUxtaGhiR1pYYVdSMGFDNXpaWFFvZVM1M2FXUjBhQ0FxSUM0MUxDQXdMQ0F3S1N3Z1lqSXVhR0ZzWmtobGFXZG9kQzV6WlhRb01Dd2dlUzVvWldsbmFIUWdLaUF1TlN3Z01Da3NJR0l5TG1oaGJHWlhhV1IwYUM1aGNIQnNlVTFoZEhKcGVEUW9ZU2tzSUdJeUxtaGhiR1pJWldsbmFIUXVZWEJ3YkhsTllYUnlhWGcwS0dFcExDQjRLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9lUzVwYzFCdmFXNTBUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpTXlBOUlHa3VjRzlwYm5SYlpsMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlNeTV3YjNOcGRHbHZiaTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2VTNXRZWFJ5YVhoWGIzSnNaQ2tzSUdJekxuQnZjMmwwYVc5dUxtRndjR3g1VFdGMGNtbDROQ2huS1N3Z1ppc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIa3VhWE5JWlcxcGMzQm9aWEpsVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaU5DQTlJR2t1YUdWdGFWdDJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0kwTG1ScGNtVmpkR2x2Ymk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9lUzV0WVhSeWFYaFhiM0pzWkNrc0lHSTBMbVJwY21WamRHbHZiaTUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWnlrc0lHSTBMbVJwY21WamRHbHZiaTV1YjNKdFlXeHBlbVVvS1N3Z2Rpc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQnpaWFIxY0RvZ2JDd0tJQ0FnSUNBZ0lDQnpaWFIxY0ZacFpYYzZJR01zQ2lBZ0lDQWdJQ0FnYzNSaGRHVTZJR2tLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnSkd3b2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQnVaWGNnWDNnb2N5d2daU2tzSUc0Z1BTQmJYU3dnYVNBOUlGdGRPd29nSUNBZ1puVnVZM1JwYjI0Z2NpZ3BJSHNLSUNBZ0lDQWdJQ0J1TG14bGJtZDBhQ0E5SURBc0lHa3ViR1Z1WjNSb0lEMGdNRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc4b2RTa2dld29nSUNBZ0lDQWdJRzR1Y0hWemFDaDFLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdFb2RTa2dld29nSUNBZ0lDQWdJR2t1Y0hWemFDaDFLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUd3b2RTa2dld29nSUNBZ0lDQWdJSFF1YzJWMGRYQW9iaXdnZFNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmpLSFVwSUhzS0lDQWdJQ0FnSUNCMExuTmxkSFZ3Vm1sbGR5aHVMQ0IxS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2FXNXBkRG9nY2l3S0lDQWdJQ0FnSUNCemRHRjBaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNhV2RvZEhOQmNuSmhlVG9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M2MwRnljbUY1T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0JzYVdkb2RITTZJSFFLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGRIVndUR2xuYUhSek9pQnNMQW9nSUNBZ0lDQWdJSE5sZEhWd1RHbG5hSFJ6Vm1sbGR6b2dZeXdLSUNBZ0lDQWdJQ0J3ZFhOb1RHbG5hSFE2SUc4c0NpQWdJQ0FnSUNBZ2NIVnphRk5vWVdSdmR6b2dZUW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJOZUNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z2JpaHlMQ0J2SUQwZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCaE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtaGhjeWh5S1NBOVBUMGdJVEVnUHlBb1lTQTlJRzVsZHlBa2JDaHpMQ0JsS1N3Z2RDNXpaWFFvY2l3Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0JoQ2lBZ0lDQWdJQ0FnWFNrcElEb2dieUErUFNCMExtZGxkQ2h5S1M1c1pXNW5kR2dnUHlBb1lTQTlJRzVsZHlBa2JDaHpMQ0JsS1N3Z2RDNW5aWFFvY2lrdWNIVnphQ2hoS1NrZ09pQmhJRDBnZEM1blpYUW9jaWxiYjEwc0lHRTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJwS0NrZ2V3b2dJQ0FnSUNBZ0lIUWdQU0J1WlhjZ1YyVmhhMDFoY0RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJ1TEFvZ0lDQWdJQ0FnSUdScGMzQnZjMlU2SUdrS0lDQWdJSDA3Q24wS2RtRnlJR1Z2SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1JHVndkR2hOWVhSbGNtbGhiQ0lzSUhSb2FYTXVaR1Z3ZEdoUVlXTnJhVzVuSUQwZ1RtUXNJSFJvYVhNdWJXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SURFc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SURBc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ0lURXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdNU3dnZEdocGN5NW1iMmNnUFNBaE1Td2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVrWlhCMGFGQmhZMnRwYm1jZ1BTQmxMbVJsY0hSb1VHRmphMmx1Wnl3Z2RHaHBjeTV0WVhBZ1BTQmxMbTFoY0N3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUdVdVlXeHdhR0ZOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1zSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NtVnZMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaEVaWEIwYUUxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCMGJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphRVJwYzNSaGJtTmxUV0YwWlhKcFlXd2lMQ0IwYUdsekxuSmxabVZ5Wlc1alpWQnZjMmwwYVc5dUlEMGdibVYzSUUwc0lIUm9hWE11Ym1WaGNrUnBjM1JoYm1ObElEMGdNU3dnZEdocGN5NW1ZWEpFYVhOMFlXNWpaU0E5SURGbE15d2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTVtYjJjZ1BTQWhNU3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1eVpXWmxjbVZ1WTJWUWIzTnBkR2x2Ymk1amIzQjVLR1V1Y21WbVpYSmxibU5sVUc5emFYUnBiMjRwTENCMGFHbHpMbTVsWVhKRWFYTjBZVzVqWlNBOUlHVXVibVZoY2tScGMzUmhibU5sTENCMGFHbHpMbVpoY2tScGMzUmhibU5sSUQwZ1pTNW1ZWEpFYVhOMFlXNWpaU3dnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdaUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NuUnZMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaEVhWE4wWVc1alpVMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQmllQ0E5SUdCMmIybGtJRzFoYVc0b0tTQjdDZ2xuYkY5UWIzTnBkR2x2YmlBOUlIWmxZelFvSUhCdmMybDBhVzl1TENBeExqQWdLVHNLZldBc0lIZDRJRDBnWUhWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhOb1lXUnZkMTl3WVhOek93cDFibWxtYjNKdElIWmxZeklnY21WemIyeDFkR2x2YmpzS2RXNXBabTl5YlNCbWJHOWhkQ0J5WVdScGRYTTdDaU5wYm1Oc2RXUmxJRHh3WVdOcmFXNW5QZ3AyYjJsa0lHMWhhVzRvS1NCN0NnbGpiMjV6ZENCbWJHOWhkQ0J6WVcxd2JHVnpJRDBnWm14dllYUW9JRlpUVFY5VFFVMVFURVZUSUNrN0NnbG1iRzloZENCdFpXRnVJRDBnTUM0d093b0pabXh2WVhRZ2MzRjFZWEpsWkY5dFpXRnVJRDBnTUM0d093b0pabXh2WVhRZ2RYWlRkSEpwWkdVZ1BTQnpZVzF3YkdWeklEdzlJREV1TUNBL0lEQXVNQ0E2SURJdU1DQXZJQ2dnYzJGdGNHeGxjeUF0SURFdU1DQXBPd29KWm14dllYUWdkWFpUZEdGeWRDQTlJSE5oYlhCc1pYTWdQRDBnTVM0d0lEOGdNQzR3SURvZ0xTQXhMakE3Q2dsbWIzSWdLQ0JtYkc5aGRDQnBJRDBnTUM0d095QnBJRHdnYzJGdGNHeGxjenNnYVNBckt5QXBJSHNLQ1FsbWJHOWhkQ0IxZGs5bVpuTmxkQ0E5SUhWMlUzUmhjblFnS3lCcElDb2dkWFpUZEhKcFpHVTdDZ2tKSTJsbVpHVm1JRWhQVWtsYVQwNVVRVXhmVUVGVFV3b0pDUWwyWldNeUlHUnBjM1J5YVdKMWRHbHZiaUE5SUhWdWNHRmphMUpIUWtGVWJ6SklZV3htS0NCMFpYaDBkWEpsTWtRb0lITm9ZV1J2ZDE5d1lYTnpMQ0FvSUdkc1gwWnlZV2REYjI5eVpDNTRlU0FySUhabFl6SW9JSFYyVDJabWMyVjBMQ0F3TGpBZ0tTQXFJSEpoWkdsMWN5QXBJQzhnY21WemIyeDFkR2x2YmlBcElDazdDZ2tKQ1cxbFlXNGdLejBnWkdsemRISnBZblYwYVc5dUxuZzdDZ2tKQ1hOeGRXRnlaV1JmYldWaGJpQXJQU0JrYVhOMGNtbGlkWFJwYjI0dWVTQXFJR1JwYzNSeWFXSjFkR2x2Ymk1NUlDc2daR2x6ZEhKcFluVjBhVzl1TG5nZ0tpQmthWE4wY21saWRYUnBiMjR1ZURzS0NRa2paV3h6WlFvSkNRbG1iRzloZENCa1pYQjBhQ0E5SUhWdWNHRmphMUpIUWtGVWIwUmxjSFJvS0NCMFpYaDBkWEpsTWtRb0lITm9ZV1J2ZDE5d1lYTnpMQ0FvSUdkc1gwWnlZV2REYjI5eVpDNTRlU0FySUhabFl6SW9JREF1TUN3Z2RYWlBabVp6WlhRZ0tTQXFJSEpoWkdsMWN5QXBJQzhnY21WemIyeDFkR2x2YmlBcElDazdDZ2tKQ1cxbFlXNGdLejBnWkdWd2RHZzdDZ2tKQ1hOeGRXRnlaV1JmYldWaGJpQXJQU0JrWlhCMGFDQXFJR1JsY0hSb093b0pDU05sYm1ScFpnb0pmUW9KYldWaGJpQTlJRzFsWVc0Z0x5QnpZVzF3YkdWek93b0pjM0YxWVhKbFpGOXRaV0Z1SUQwZ2MzRjFZWEpsWkY5dFpXRnVJQzhnYzJGdGNHeGxjenNLQ1dac2IyRjBJSE4wWkY5a1pYWWdQU0J6Y1hKMEtDQnpjWFZoY21Wa1gyMWxZVzRnTFNCdFpXRnVJQ29nYldWaGJpQXBPd29KWjJ4ZlJuSmhaME52Ykc5eUlEMGdjR0ZqYXpKSVlXeG1WRzlTUjBKQktDQjJaV015S0NCdFpXRnVMQ0J6ZEdSZlpHVjJJQ2tnS1RzS2ZXQTdDbVoxYm1OMGFXOXVJSGxvS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdibVYzSUVSeUxDQnBJRDBnYm1WM0lGZ3NJSElnUFNCdVpYY2dXQ3dnYnlBOUlHNWxkeUJXWlN3Z1lTQTlJRzVsZHlCbGJ5aDdDaUFnSUNBZ0lDQWdaR1Z3ZEdoUVlXTnJhVzVuT2lCQ1pBb2dJQ0FnZlNrc0lHd2dQU0J1WlhjZ2RHOHNJR01nUFNCN2ZTd2dhQ0E5SUhRdWJXRjRWR1Y0ZEhWeVpWTnBlbVVzSUhVZ1BTQjdDaUFnSUNBZ0lDQWdNRG9nYVhRc0NpQWdJQ0FnSUNBZ01Ub2dRV2tzQ2lBZ0lDQWdJQ0FnTWpvZ1Eya0tJQ0FnSUgwc0lHUWdQU0J1WlhjZ2MyNG9ld29nSUNBZ0lDQWdJR1JsWm1sdVpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZsTk5YMU5CVFZCTVJWTTZJRGdLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxOXdZWE56T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWE52YkhWMGFXOXVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUZnS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTkFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHSjRMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQjNlQW9nSUNBZ2ZTa3NJR1lnUFNCa0xtTnNiMjVsS0NrN0NpQWdJQ0JtTG1SbFptbHVaWE11U0U5U1NWcFBUbFJCVEY5UVFWTlRJRDBnTVRzS0lDQWdJR3hsZENCdElEMGdibVYzSUY5bE93b2dJQ0FnYlM1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lGVmxLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29Xd29nSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDNDFMQW9nSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0xqVXNDaUFnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBdU5Rb2dJQ0FnWFNrc0lETXBLVHNLSUNBZ0lHeGxkQ0I0SUQwZ2JtVjNJSE4wS0cwc0lHUXBMQ0IySUQwZ2RHaHBjenNLSUNBZ0lIUm9hWE11Wlc1aFlteGxaQ0E5SUNFeExDQjBhR2x6TG1GMWRHOVZjR1JoZEdVZ1BTQWhNQ3dnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG5SNWNHVWdQU0JJWXl3Z2RHaHBjeTV5Wlc1a1pYSWdQU0JtZFc1amRHbHZiaWg1TENCaUxDQkJLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIWXVaVzVoWW14bFpDQTlQVDBnSVRFZ2ZId2dkaTVoZFhSdlZYQmtZWFJsSUQwOVBTQWhNU0FtSmlCMkxtNWxaV1J6VlhCa1lYUmxJRDA5UFNBaE1TQjhmQ0I1TG14bGJtZDBhQ0E5UFQwZ01Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ2N5NW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tTd2dTU0E5SUhNdVoyVjBRV04wYVhabFEzVmlaVVpoWTJVb0tTd2dheUE5SUhNdVoyVjBRV04wYVhabFRXbHdiV0Z3VEdWMlpXd29LU3dnUWlBOUlITXVjM1JoZEdVN0NpQWdJQ0FnSUNBZ1FpNXpaWFJDYkdWdVpHbHVaeWgyYmlrc0lFSXVZblZtWm1WeWN5NWpiMnh2Y2k1elpYUkRiR1ZoY2lneExDQXhMQ0F4TENBeEtTd2dRaTVpZFdabVpYSnpMbVJsY0hSb0xuTmxkRlJsYzNRb0lUQXBMQ0JDTG5ObGRGTmphWE56YjNKVVpYTjBLQ0V4S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZBZ1BTQXdMQ0IzSUQwZ2VTNXNaVzVuZEdnN0lGQWdQQ0IzT3lCUUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUhsYlVGMHNJRVFnUFNCRkxuTm9ZV1J2ZHpzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VRZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGTm9ZV1J2ZDAxaGNEb2lMQ0JGTENBaWFHRnpJRzV2SUhOb1lXUnZkeTRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaEVMbUYxZEc5VmNHUmhkR1VnUFQwOUlDRXhJQ1ltSUVRdWJtVmxaSE5WY0dSaGRHVWdQVDA5SUNFeEtTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVM1amIzQjVLRVF1YldGd1UybDZaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ1JDNW5aWFJHY21GdFpVVjRkR1Z1ZEhNb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa3ViWFZzZEdsd2JIa29WU2tzSUhJdVkyOXdlU2hFTG0xaGNGTnBlbVVwTENBb2FTNTRJRDRnYUNCOGZDQnBMbmtnUGlCb0tTQW1KaUFvYVM1NElENGdhQ0FtSmlBb2NpNTRJRDBnVFdGMGFDNW1iRzl2Y2lob0lDOGdWUzU0S1N3Z2FTNTRJRDBnY2k1NElDb2dWUzU0TENCRUxtMWhjRk5wZW1VdWVDQTlJSEl1ZUNrc0lHa3VlU0ErSUdnZ0ppWWdLSEl1ZVNBOUlFMWhkR2d1Wm14dmIzSW9hQ0F2SUZVdWVTa3NJR2t1ZVNBOUlISXVlU0FxSUZVdWVTd2dSQzV0WVhCVGFYcGxMbmtnUFNCeUxua3BLU3dnUkM1dFlYQWdQVDA5SUc1MWJHd2dKaVlnSVVRdWFYTlFiMmx1ZEV4cFoyaDBVMmhoWkc5M0lDWW1JSFJvYVhNdWRIbHdaU0E5UFQwZ2FYSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxcGJrWnBiSFJsY2pvZ2RIUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldGblJtbHNkR1Z5T2lCMGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJR04wQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUkM1dFlYQWdQU0J1WlhjZ1FYUW9hUzU0TENCcExua3NJRThwTENCRUxtMWhjQzUwWlhoMGRYSmxMbTVoYldVZ1BTQkZMbTVoYldVZ0t5QWlMbk5vWVdSdmQwMWhjQ0lzSUVRdWJXRndVR0Z6Y3lBOUlHNWxkeUJCZENocExuZ3NJR2t1ZVN3Z1R5a3NJRVF1WTJGdFpYSmhMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUkM1dFlYQWdQVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUE1TQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGFXNUdhV3gwWlhJNklISjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaFowWnBiSFJsY2pvZ2NuUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eWJXRjBPaUJqZEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVRdWJXRndJRDBnYm1WM0lFRjBLR2t1ZUN3Z2FTNTVMQ0JQTVNrc0lFUXViV0Z3TG5SbGVIUjFjbVV1Ym1GdFpTQTlJRVV1Ym1GdFpTQXJJQ0l1YzJoaFpHOTNUV0Z3SWl3Z1JDNWpZVzFsY21FdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0VRdWJXRndLU3dnY3k1amJHVmhjaWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlFUXVaMlYwVm1sbGQzQnZjblJEYjNWdWRDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUU4eUlEMGdNRHNnVHpJZ1BDQkdPeUJQTWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1WlNBOUlFUXVaMlYwVm1sbGQzQnZjblFvVHpJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5NXpaWFFvY2k1NElDb2dibVV1ZUN3Z2NpNTVJQ29nYm1VdWVTd2djaTU0SUNvZ2JtVXVlaXdnY2k1NUlDb2dibVV1ZHlrc0lFSXVkbWxsZDNCdmNuUW9ieWtzSUVRdWRYQmtZWFJsVFdGMGNtbGpaWE1vUlN3Z1R6SXBMQ0J1SUQwZ1JDNW5aWFJHY25WemRIVnRLQ2tzSUY4b1lpd2dRU3dnUkM1allXMWxjbUVzSUVVc0lIUm9hWE11ZEhsd1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJVVF1YVhOUWIybHVkRXhwWjJoMFUyaGhaRzkzSUNZbUlIUm9hWE11ZEhsd1pTQTlQVDBnYVhJZ0ppWWdaeWhFTENCQktTd2dSQzV1WldWa2MxVndaR0YwWlNBOUlDRXhPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IyTG01bFpXUnpWWEJrWVhSbElEMGdJVEVzSUhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0V3c0lFa3NJR3NwT3dvZ0lDQWdmVHNLSUNBZ0lHWjFibU4wYVc5dUlHY29lU3dnWWlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JCSUQwZ1pTNTFjR1JoZEdVb2VDazdDaUFnSUNBZ0lDQWdaQzVrWldacGJtVnpMbFpUVFY5VFFVMVFURVZUSUNFOVBTQjVMbUpzZFhKVFlXMXdiR1Z6SUNZbUlDaGtMbVJsWm1sdVpYTXVWbE5OWDFOQlRWQk1SVk1nUFNCNUxtSnNkWEpUWVcxd2JHVnpMQ0JtTG1SbFptbHVaWE11VmxOTlgxTkJUVkJNUlZNZ1BTQjVMbUpzZFhKVFlXMXdiR1Z6TENCa0xtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lHWXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Da3NJR1F1ZFc1cFptOXliWE11YzJoaFpHOTNYM0JoYzNNdWRtRnNkV1VnUFNCNUxtMWhjQzUwWlhoMGRYSmxMQ0JrTG5WdWFXWnZjbTF6TG5KbGMyOXNkWFJwYjI0dWRtRnNkV1VnUFNCNUxtMWhjRk5wZW1Vc0lHUXVkVzVwWm05eWJYTXVjbUZrYVhWekxuWmhiSFZsSUQwZ2VTNXlZV1JwZFhNc0lITXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIa3ViV0Z3VUdGemN5a3NJSE11WTJ4bFlYSW9LU3dnY3k1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRb1lpd2diblZzYkN3Z1FTd2daQ3dnZUN3Z2JuVnNiQ2tzSUdZdWRXNXBabTl5YlhNdWMyaGhaRzkzWDNCaGMzTXVkbUZzZFdVZ1BTQjVMbTFoY0ZCaGMzTXVkR1Y0ZEhWeVpTd2daaTUxYm1sbWIzSnRjeTV5WlhOdmJIVjBhVzl1TG5aaGJIVmxJRDBnZVM1dFlYQlRhWHBsTENCbUxuVnVhV1p2Y20xekxuSmhaR2wxY3k1MllXeDFaU0E5SUhrdWNtRmthWFZ6TENCekxuTmxkRkpsYm1SbGNsUmhjbWRsZENoNUxtMWhjQ2tzSUhNdVkyeGxZWElvS1N3Z2N5NXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUW9ZaXdnYm5Wc2JDd2dRU3dnWml3Z2VDd2diblZzYkNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQndLSGtzSUdJc0lFRXNJRXdzSUVrc0lHc3NJRUlwSUhzS0lDQWdJQ0FnSUNCc1pYUWdVQ0E5SUc1MWJHd3NJSGNnUFNCTUxtbHpVRzlwYm5STWFXZG9kQ0E5UFQwZ0lUQWdQeUI1TG1OMWMzUnZiVVJwYzNSaGJtTmxUV0YwWlhKcFlXd2dPaUI1TG1OMWMzUnZiVVJsY0hSb1RXRjBaWEpwWVd3N0NpQWdJQ0FnSUNBZ2FXWWdLSGNnSVQwOUlIWnZhV1FnTUNBL0lGQWdQU0IzSURvZ1VDQTlJRXd1YVhOUWIybHVkRXhwWjJoMElEMDlQU0FoTUNBL0lHd2dPaUJoTENCekxteHZZMkZzUTJ4cGNIQnBibWRGYm1GaWJHVmtJQ1ltSUVFdVkyeHBjRk5vWVdSdmQzTWdQVDA5SUNFd0lDWW1JRUV1WTJ4cGNIQnBibWRRYkdGdVpYTXViR1Z1WjNSb0lDRTlQU0F3SUh4OElFRXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JRUV1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnSVQwOUlEQWdmSHdnUVM1aGJIQm9ZVTFoY0NBbUppQkJMbUZzY0doaFZHVnpkQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JRTG5WMWFXUXNJRVFnUFNCQkxuVjFhV1FzSUZVZ1BTQmpXMFZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQlZJRDA5UFNCMmIybGtJREFnSmlZZ0tGVWdQU0I3ZlN3Z1kxdEZYU0E5SUZVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRlZiUkYwN0NpQWdJQ0FnSUNBZ0lDQWdJRVlnUFQwOUlIWnZhV1FnTUNBbUppQW9SaUE5SUZBdVkyeHZibVVvS1N3Z1ZWdEVYU0E5SUVZcExDQlFJRDBnUmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZBdWRtbHphV0pzWlNBOUlFRXVkbWx6YVdKc1pTd2dVQzUzYVhKbFpuSmhiV1VnUFNCQkxuZHBjbVZtY21GdFpTd2dRaUE5UFQwZ2FYSWdQeUJRTG5OcFpHVWdQU0JCTG5Ob1lXUnZkMU5wWkdVZ0lUMDlJRzUxYkd3Z1B5QkJMbk5vWVdSdmQxTnBaR1VnT2lCQkxuTnBaR1VnT2lCUUxuTnBaR1VnUFNCQkxuTm9ZV1J2ZDFOcFpHVWdJVDA5SUc1MWJHd2dQeUJCTG5Ob1lXUnZkMU5wWkdVZ09pQjFXMEV1YzJsa1pWMHNJRkF1WVd4d2FHRk5ZWEFnUFNCQkxtRnNjR2hoVFdGd0xDQlFMbUZzY0doaFZHVnpkQ0E5SUVFdVlXeHdhR0ZVWlhOMExDQlFMbU5zYVhCVGFHRmtiM2R6SUQwZ1FTNWpiR2x3VTJoaFpHOTNjeXdnVUM1amJHbHdjR2x1WjFCc1lXNWxjeUE5SUVFdVkyeHBjSEJwYm1kUWJHRnVaWE1zSUZBdVkyeHBjRWx1ZEdWeWMyVmpkR2x2YmlBOUlFRXVZMnhwY0VsdWRHVnljMlZqZEdsdmJpd2dVQzVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0JCTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnVUM1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlFRXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJRkF1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUVFdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z1VDNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0JCTG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUN3Z1VDNXNhVzVsZDJsa2RHZ2dQU0JCTG14cGJtVjNhV1IwYUN3Z1RDNXBjMUJ2YVc1MFRHbG5hSFFnUFQwOUlDRXdJQ1ltSUZBdWFYTk5aWE5vUkdsemRHRnVZMlZOWVhSbGNtbGhiQ0E5UFQwZ0lUQWdKaVlnS0ZBdWNtVm1aWEpsYm1ObFVHOXphWFJwYjI0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLRXd1YldGMGNtbDRWMjl5YkdRcExDQlFMbTVsWVhKRWFYTjBZVzVqWlNBOUlFa3NJRkF1Wm1GeVJHbHpkR0Z1WTJVZ1BTQnJLU3dnVURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGOG9lU3dnWWl3Z1FTd2dUQ3dnU1NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2g1TG5acGMybGliR1VnUFQwOUlDRXhLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdhV1lnS0hrdWJHRjVaWEp6TG5SbGMzUW9ZaTVzWVhsbGNuTXBJQ1ltSUNoNUxtbHpUV1Z6YUNCOGZDQjVMbWx6VEdsdVpTQjhmQ0I1TG1selVHOXBiblJ6S1NBbUppQW9lUzVqWVhOMFUyaGhaRzkzSUh4OElIa3VjbVZqWldsMlpWTm9ZV1J2ZHlBbUppQkpJRDA5UFNCcGNpa2dKaVlnS0NGNUxtWnlkWE4wZFcxRGRXeHNaV1FnZkh3Z2JpNXBiblJsY25ObFkzUnpUMkpxWldOMEtIa3BLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjVMbTF2WkdWc1ZtbGxkMDFoZEhKcGVDNXRkV3gwYVhCc2VVMWhkSEpwWTJWektFRXViV0YwY21sNFYyOXliR1JKYm5abGNuTmxMQ0I1TG0xaGRISnBlRmR2Y214a0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGQWdQU0JsTG5Wd1pHRjBaU2g1S1N3Z2R5QTlJSGt1YldGMFpYSnBZV3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtIY3BLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJRkF1WjNKdmRYQnpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkVJRDBnTUN3Z1ZTQTlJRVV1YkdWdVozUm9PeUJFSUR3Z1ZUc2dSQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlFVmJSRjBzSUU4Z1BTQjNXMFl1YldGMFpYSnBZV3hKYm1SbGVGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFOGdKaVlnVHk1MmFYTnBZbXhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVaU0E5SUhBb2VTd2dVQ3dnVHl3Z1RDd2dRUzV1WldGeUxDQkJMbVpoY2l3Z1NTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBLRUVzSUc1MWJHd3NJRkFzSUc1bExDQjVMQ0JHS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2R5NTJhWE5wWW14bEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlRFZ1BTQndLSGtzSUZBc0lIY3NJRXdzSUVFdWJtVmhjaXdnUVM1bVlYSXNJRWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRb1FTd2diblZzYkN3Z1VDd2dSVEVzSUhrc0lHNTFiR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCQ0lEMGdlUzVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRkF4SUQwZ01Dd2dkekVnUFNCQ0xteGxibWQwYURzZ1VERWdQQ0IzTVRzZ1VERXJLeWxmS0VKYlVERmRMQ0JpTENCQkxDQk1MQ0JKS1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCVGVDaHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhRdWFYTlhaV0pIVERJN0NpQWdJQ0JtZFc1amRHbHZiaUJwS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JTSUQwZ0lURXNJR1ZsSUQwZ2JtVjNJRlpsTENCUklEMGdiblZzYkN3Z1JXVWdQU0J1WlhjZ1ZtVW9NQ3dnTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBUV0Z6YXpvZ1puVnVZM1JwYjI0b2JXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRkVnSVQwOUlHMWxJQ1ltSUNGU0lDWW1JQ2h6TG1OdmJHOXlUV0Z6YXlodFpTd2diV1VzSUcxbExDQnRaU2tzSUZFZ1BTQnRaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFeHZZMnRsWkRvZ1puVnVZM1JwYjI0b2JXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRklnUFNCdFpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlYwUTJ4bFlYSTZJR1oxYm1OMGFXOXVLRzFsTENCU1pTd2diMlVzSUV4bExDQllaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnV0dVZ1BUMDlJQ0V3SUNZbUlDaHRaU0FxUFNCTVpTd2dVbVVnS2owZ1RHVXNJRzlsSUNvOUlFeGxLU3dnWldVdWMyVjBLRzFsTENCU1pTd2diMlVzSUV4bEtTd2dSV1V1WlhGMVlXeHpLR1ZsS1NBOVBUMGdJVEVnSmlZZ0tITXVZMnhsWVhKRGIyeHZjaWh0WlN3Z1VtVXNJRzlsTENCTVpTa3NJRVZsTG1OdmNIa29aV1VwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VpQTlJQ0V4TENCUklEMGdiblZzYkN3Z1JXVXVjMlYwS0MweExDQXdMQ0F3TENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlNJRDBnSVRFc0lHVmxJRDBnYm5Wc2JDd2dVU0E5SUc1MWJHd3NJRVZsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJQ0FnSUNCelpYUlVaWE4wT2lCbWRXNWpkR2x2YmlodFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1VnUHlCc1pTZ3lPVEk1S1NBNklHWmxLREk1TWprcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJOWVhOck9pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWldVZ0lUMDlJRzFsSUNZbUlDRlNJQ1ltSUNoekxtUmxjSFJvVFdGemF5aHRaU2tzSUdWbElEMGdiV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelpYUkdkVzVqT2lCbWRXNWpkR2x2YmlodFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZFZ0lUMDlJRzFsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cxbEtTQnpkMmwwWTJnb2JXVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUVWMU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRUYxT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFTjFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URXpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUdWaE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRXgxT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGSjFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUZCMU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFMktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRWwxT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEUzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCekxtUmxjSFJvUm5WdVl5ZzFNVFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGRWdQU0J0WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBURzlqYTJWa09pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVWlBOUlHMWxPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSRGJHVmhjam9nWm5WdVkzUnBiMjRvYldVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFVmxJQ0U5UFNCdFpTQW1KaUFvY3k1amJHVmhja1JsY0hSb0tHMWxLU3dnUldVZ1BTQnRaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhKbGMyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZJZ1BTQWhNU3dnWldVZ1BTQnVkV3hzTENCUklEMGdiblZzYkN3Z1JXVWdQU0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHOG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGSWdQU0FoTVN3Z1pXVWdQU0J1ZFd4c0xDQlJJRDBnYm5Wc2JDd2dSV1VnUFNCdWRXeHNMQ0J0WlNBOUlHNTFiR3dzSUZKbElEMGdiblZzYkN3Z2IyVWdQU0J1ZFd4c0xDQk1aU0E5SUc1MWJHd3NJRmhsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJQ0FnSUNCelpYUlVaWE4wT2lCbWRXNWpkR2x2YmloWFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVaUI4ZkNBb1YyVWdQeUJzWlNneU9UWXdLU0E2SUdabEtESTVOakFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBUV0Z6YXpvZ1puVnVZM1JwYjI0b1YyVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZsSUNFOVBTQlhaU0FtSmlBaFVpQW1KaUFvY3k1emRHVnVZMmxzVFdGemF5aFhaU2tzSUdWbElEMGdWMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelpYUkdkVzVqT2lCbWRXNWpkR2x2YmloWFpTd2dWWFFzSUU5MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW9VU0FoUFQwZ1YyVWdmSHdnUldVZ0lUMDlJRlYwSUh4OElHMWxJQ0U5UFNCUGRDa2dKaVlnS0hNdWMzUmxibU5wYkVaMWJtTW9WMlVzSUZWMExDQlBkQ2tzSUZFZ1BTQlhaU3dnUldVZ1BTQlZkQ3dnYldVZ1BTQlBkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFOXdPaUJtZFc1amRHbHZiaWhYWlN3Z1ZYUXNJRTkwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb1VtVWdJVDA5SUZkbElIeDhJRzlsSUNFOVBTQlZkQ0I4ZkNCTVpTQWhQVDBnVDNRcElDWW1JQ2h6TG5OMFpXNWphV3hQY0NoWFpTd2dWWFFzSUU5MEtTd2dVbVVnUFNCWFpTd2diMlVnUFNCVmRDd2dUR1VnUFNCUGRDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEV4dlkydGxaRG9nWm5WdVkzUnBiMjRvVjJVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGSWdQU0JYWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBRMnhsWVhJNklHWjFibU4wYVc5dUtGZGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JZWlNBaFBUMGdWMlVnSmlZZ0tITXVZMnhsWVhKVGRHVnVZMmxzS0ZkbEtTd2dXR1VnUFNCWFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRklnUFNBaE1Td2daV1VnUFNCdWRXeHNMQ0JSSUQwZ2JuVnNiQ3dnUldVZ1BTQnVkV3hzTENCdFpTQTlJRzUxYkd3c0lGSmxJRDBnYm5Wc2JDd2diMlVnUFNCdWRXeHNMQ0JNWlNBOUlHNTFiR3dzSUZobElEMGdiblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdZU0E5SUc1bGR5QnBMQ0JzSUQwZ2JtVjNJSElzSUdNZ1BTQnVaWGNnYnl3Z2FDQTlJSHQ5TENCMUlEMGdlMzBzSUdRZ1BTQnVkV3hzTENCbUlEMGdJVEVzSUcwZ1BTQnVkV3hzTENCNElEMGdiblZzYkN3Z2RpQTlJRzUxYkd3c0lHY2dQU0J1ZFd4c0xDQndJRDBnYm5Wc2JDd2dYeUE5SUc1MWJHd3NJSGtnUFNCdWRXeHNMQ0JpSUQwZ0lURXNJRUVnUFNCdWRXeHNMQ0JNSUQwZ2JuVnNiQ3dnU1NBOUlHNTFiR3dzSUdzZ1BTQnVkV3hzTENCQ0lEMGdiblZzYkN3Z1VDQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTFOall4S1N3Z2R5QTlJQ0V4TENCRklEMGdNQ3dnUkNBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RjNU16Z3BPd29nSUNBZ1JDNXBibVJsZUU5bUtDSlhaV0pIVENJcElDRTlQU0F0TVNBL0lDaEZJRDBnY0dGeWMyVkdiRzloZENndlhsZGxZa2RNSUNoY1pDa3ZMbVY0WldNb1JDbGJNVjBwTENCM0lEMGdSU0ErUFNBeEtTQTZJRVF1YVc1a1pYaFBaaWdpVDNCbGJrZE1JRVZUSWlrZ0lUMDlJQzB4SUNZbUlDaEZJRDBnY0dGeWMyVkdiRzloZENndlhrOXdaVzVIVENCRlV5QW9YR1FwTHk1bGVHVmpLRVFwV3pGZEtTd2dkeUE5SUVVZ1BqMGdNaWs3Q2lBZ0lDQnNaWFFnVlNBOUlHNTFiR3dzSUVZZ1BTQjdmU3dnVHlBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNd09EZ3BMQ0J1WlNBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RJNU56Z3BMQ0JqWlNBOUlHNWxkeUJXWlNncExtWnliMjFCY25KaGVTaFBLU3dnVmlBOUlHNWxkeUJXWlNncExtWnliMjFCY25KaGVTaHVaU2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQlhLRklzSUdWbExDQlJLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFVmxJRDBnYm1WM0lGVnBiblE0UVhKeVlYa29OQ2tzSUcxbElEMGdjeTVqY21WaGRHVlVaWGgwZFhKbEtDazdDaUFnSUNBZ0lDQWdjeTVpYVc1a1ZHVjRkSFZ5WlNoU0xDQnRaU2tzSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hTTENBeE1ESTBNU3dnT1RjeU9Da3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaFNMQ0F4TURJME1Dd2dPVGN5T0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCU1pTQTlJREE3SUZKbElEd2dVVHNnVW1Vckt5bHpMblJsZUVsdFlXZGxNa1FvWldVZ0t5QlNaU3dnTUN3Z05qUXdPQ3dnTVN3Z01Td2dNQ3dnTmpRd09Dd2dOVEV5TVN3Z1JXVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnRaVHNLSUNBZ0lIMEtJQ0FnSUd4bGRDQm9aU0E5SUh0OU93b2dJQ0FnYUdWYk16VTFNMTBnUFNCWEtETTFOVE1zSURNMU5UTXNJREVwTENCb1pWc3pOREEyTjEwZ1BTQlhLRE0wTURZM0xDQXpOREEyT1N3Z05pa3NJR0V1YzJWMFEyeGxZWElvTUN3Z01Dd2dNQ3dnTVNrc0lHd3VjMlYwUTJ4bFlYSW9NU2tzSUdNdWMyVjBRMnhsWVhJb01Da3NJR3hsS0RJNU1qa3BMQ0JzTG5ObGRFWjFibU1vWldFcExDQlBaU2doTVNrc0lFY29kR3dwTENCc1pTZ3lPRGcwS1N3Z1oyVW9kbTRwT3dvZ0lDQWdablZ1WTNScGIyNGdiR1VvVWlrZ2V3b2dJQ0FnSUNBZ0lHaGJVbDBnSVQwOUlDRXdJQ1ltSUNoekxtVnVZV0pzWlNoU0tTd2dhRnRTWFNBOUlDRXdLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdabEtGSXBJSHNLSUNBZ0lDQWdJQ0JvVzFKZElDRTlQU0FoTVNBbUppQW9jeTVrYVhOaFlteGxLRklwTENCb1cxSmRJRDBnSVRFcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdRbVVvVWl3Z1pXVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkVnRTWFNBaFBUMGdaV1VnUHlBb2N5NWlhVzVrUm5KaGJXVmlkV1ptWlhJb1Vpd2daV1VwTENCMVcxSmRJRDBnWldVc0lHNGdKaVlnS0ZJZ1BUMDlJRE0yTURBNUlDWW1JQ2gxV3pNMk1UWXdYU0E5SUdWbEtTd2dVaUE5UFQwZ016WXhOakFnSmlZZ0tIVmJNell3TURsZElEMGdaV1VwS1N3Z0lUQXBJRG9nSVRFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlpLRklwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWkNBaFBUMGdVaUEvSUNoekxuVnpaVkJ5YjJkeVlXMG9VaWtzSUdRZ1BTQlNMQ0FoTUNrZ09pQWhNVHNLSUNBZ0lIMEtJQ0FnSUd4bGRDQkRaU0E5SUhzS0lDQWdJQ0FnSUNCYlgybGRPaUF6TWpjM05Dd0tJQ0FnSUNBZ0lDQmJiWFZkT2lBek1qYzNPQ3dLSUNBZ0lDQWdJQ0JiWjNWZE9pQXpNamMzT1FvZ0lDQWdmVHNLSUNBZ0lHbG1JQ2h1S1NCRFpWdHpiRjBnUFNBek1qYzNOU3dnUTJWYmIyeGRJRDBnTXpJM056WTdDaUFnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1VpQTlJR1V1WjJWMEtDSkZXRlJmWW14bGJtUmZiV2x1YldGNElpazdDaUFnSUNBZ0lDQWdVaUFoUFQwZ2JuVnNiQ0FtSmlBb1EyVmJjMnhkSUQwZ1VpNU5TVTVmUlZoVUxDQkRaVnR2YkYwZ1BTQlNMazFCV0Y5RldGUXBPd29nSUNBZ2ZRb2dJQ0FnYkdWMElIbGxJRDBnZXdvZ0lDQWdJQ0FnSUZ0NGRWMDZJREFzQ2lBZ0lDQWdJQ0FnVzNsMVhUb2dNU3dLSUNBZ0lDQWdJQ0JiZG5WZE9pQTNOamdzQ2lBZ0lDQWdJQ0FnVzBkalhUb2dOemN3TEFvZ0lDQWdJQ0FnSUZ0VWRWMDZJRGMzTml3S0lDQWdJQ0FnSUNCYmQzVmRPaUEzTnpRc0NpQWdJQ0FnSUNBZ1cwMTFYVG9nTnpjeUxBb2dJQ0FnSUNBZ0lGdGZkVjA2SURjMk9Td0tJQ0FnSUNBZ0lDQmJWbU5kT2lBM056RXNDaUFnSUNBZ0lDQWdXMU4xWFRvZ056YzFMQW9nSUNBZ0lDQWdJRnRpZFYwNklEYzNNd29nSUNBZ2ZUc0tJQ0FnSUdaMWJtTjBhVzl1SUdkbEtGSXNJR1ZsTENCUkxDQkZaU3dnYldVc0lGSmxMQ0J2WlN3Z1RHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1VpQTlQVDBnZG00cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWmlBOVBUMGdJVEFnSmlZZ0tHWmxLRE13TkRJcExDQm1JRDBnSVRFcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNobUlEMDlQU0FoTVNBbUppQW9iR1VvTXpBME1pa3NJR1lnUFNBaE1Da3NJRklnSVQwOUlIQjFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hTSUNFOVBTQnRJSHg4SUV4bElDRTlQU0JpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9LSGdnSVQwOUlGOXBJSHg4SUhBZ0lUMDlJRjlwS1NBbUppQW9jeTVpYkdWdVpFVnhkV0YwYVc5dUtETXlOemMwS1N3Z2VDQTlJRjlwTENCd0lEMGdYMmtwTENCTVpTa2djM2RwZEdOb0tGSXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdjM0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11WW14bGJtUkdkVzVqVTJWd1lYSmhkR1VvTVN3Z056Y3hMQ0F4TENBM056RXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUc1c09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtSnNaVzVrUm5WdVl5Z3hMQ0F4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQnBiRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVpYkdWdVpFWjFibU5UWlhCaGNtRjBaU2d3TENBd0xDQTNOamtzSURjM01TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnY213NkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdVlteGxibVJHZFc1alUyVndZWEpoZEdVb01Dd2dOelk0TENBd0xDQTNOekFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lCSmJuWmhiR2xrSUdKc1pXNWthVzVuT2lBaUxDQlNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSE4zYVhSamFDaFNLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSE55T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1Kc1pXNWtSblZ1WTFObGNHRnlZWFJsS0RjM01Dd2dOemN4TENBeExDQTNOekVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHNXNPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbUpzWlc1a1JuVnVZeWczTnpBc0lERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUdsc09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtSnNaVzVrUm5WdVl5Z3dMQ0EzTmprcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSEpzT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1Kc1pXNWtSblZ1WXlnd0xDQTNOamdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lCSmJuWmhiR2xrSUdKc1pXNWthVzVuT2lBaUxDQlNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMklEMGdiblZzYkN3Z1p5QTlJRzUxYkd3c0lGOGdQU0J1ZFd4c0xDQjVJRDBnYm5Wc2JDd2diU0E5SUZJc0lHSWdQU0JNWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUcxbElEMGdiV1VnZkh3Z1pXVXNJRkpsSUQwZ1VtVWdmSHdnVVN3Z2IyVWdQU0J2WlNCOGZDQkZaU3dnS0dWbElDRTlQU0I0SUh4OElHMWxJQ0U5UFNCd0tTQW1KaUFvY3k1aWJHVnVaRVZ4ZFdGMGFXOXVVMlZ3WVhKaGRHVW9RMlZiWldWZExDQkRaVnR0WlYwcExDQjRJRDBnWldVc0lIQWdQU0J0WlNrc0lDaFJJQ0U5UFNCMklIeDhJRVZsSUNFOVBTQm5JSHg4SUZKbElDRTlQU0JmSUh4OElHOWxJQ0U5UFNCNUtTQW1KaUFvY3k1aWJHVnVaRVoxYm1OVFpYQmhjbUYwWlNoNVpWdFJYU3dnZVdWYlJXVmRMQ0I1WlZ0U1pWMHNJSGxsVzI5bFhTa3NJSFlnUFNCUkxDQm5JRDBnUldVc0lGOGdQU0JTWlN3Z2VTQTlJRzlsS1N3Z2JTQTlJRklzSUdJZ1BTQnVkV3hzT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VHVW9VaXdnWldVcElIc0tJQ0FnSUNBZ0lDQlNMbk5wWkdVZ1BUMDlJRU5wSUQ4Z1ptVW9Namc0TkNrZ09pQnNaU2d5T0RnMEtUc0tJQ0FnSUNBZ0lDQnNaWFFnVVNBOUlGSXVjMmxrWlNBOVBUMGdhWFE3Q2lBZ0lDQWdJQ0FnWldVZ0ppWWdLRkVnUFNBaFVTa3NJRTlsS0ZFcExDQlNMbUpzWlc1a2FXNW5JRDA5UFNCemNpQW1KaUJTTG5SeVlXNXpjR0Z5Wlc1MElEMDlQU0FoTVNBL0lHZGxLSFp1S1NBNklHZGxLRkl1WW14bGJtUnBibWNzSUZJdVlteGxibVJGY1hWaGRHbHZiaXdnVWk1aWJHVnVaRk55WXl3Z1VpNWliR1Z1WkVSemRDd2dVaTVpYkdWdVpFVnhkV0YwYVc5dVFXeHdhR0VzSUZJdVlteGxibVJUY21OQmJIQm9ZU3dnVWk1aWJHVnVaRVJ6ZEVGc2NHaGhMQ0JTTG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNrc0lHd3VjMlYwUm5WdVl5aFNMbVJsY0hSb1JuVnVZeWtzSUd3dWMyVjBWR1Z6ZENoU0xtUmxjSFJvVkdWemRDa3NJR3d1YzJWMFRXRnpheWhTTG1SbGNIUm9WM0pwZEdVcExDQmhMbk5sZEUxaGMyc29VaTVqYjJ4dmNsZHlhWFJsS1RzS0lDQWdJQ0FnSUNCc1pYUWdSV1VnUFNCU0xuTjBaVzVqYVd4WGNtbDBaVHNLSUNBZ0lDQWdJQ0JqTG5ObGRGUmxjM1FvUldVcExDQkZaU0FtSmlBb1l5NXpaWFJOWVhOcktGSXVjM1JsYm1OcGJGZHlhWFJsVFdGemF5a3NJR011YzJWMFJuVnVZeWhTTG5OMFpXNWphV3hHZFc1akxDQlNMbk4wWlc1amFXeFNaV1lzSUZJdWMzUmxibU5wYkVaMWJtTk5ZWE5yS1N3Z1l5NXpaWFJQY0NoU0xuTjBaVzVqYVd4R1lXbHNMQ0JTTG5OMFpXNWphV3hhUm1GcGJDd2dVaTV6ZEdWdVkybHNXbEJoYzNNcEtTd2dTeWhTTG5CdmJIbG5iMjVQWm1aelpYUXNJRkl1Y0c5c2VXZHZiazltWm5ObGRFWmhZM1J2Y2l3Z1VpNXdiMng1WjI5dVQyWm1jMlYwVlc1cGRITXBMQ0JTTG1Gc2NHaGhWRzlEYjNabGNtRm5aU0E5UFQwZ0lUQWdQeUJzWlNnek1qa3lOaWtnT2lCbVpTZ3pNamt5TmlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlBaU2hTS1NCN0NpQWdJQ0FnSUNBZ1FTQWhQVDBnVWlBbUppQW9VaUEvSUhNdVpuSnZiblJHWVdObEtESXpNRFFwSURvZ2N5NW1jbTl1ZEVaaFkyVW9Nak13TlNrc0lFRWdQU0JTS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFY29VaWtnZXdvZ0lDQWdJQ0FnSUZJZ0lUMDlJSFYxSUQ4Z0tHeGxLREk0T0RRcExDQlNJQ0U5UFNCTUlDWW1JQ2hTSUQwOVBTQjBiQ0EvSUhNdVkzVnNiRVpoWTJVb01UQXlPU2tnT2lCU0lEMDlQU0JrZFNBL0lITXVZM1ZzYkVaaFkyVW9NVEF5T0NrZ09pQnpMbU4xYkd4R1lXTmxLREV3TXpJcEtTa2dPaUJtWlNneU9EZzBLU3dnVENBOUlGSTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJxS0ZJcElIc0tJQ0FnSUNBZ0lDQlNJQ0U5UFNCSklDWW1JQ2gzSUNZbUlITXViR2x1WlZkcFpIUm9LRklwTENCSklEMGdVaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTEtGSXNJR1ZsTENCUktTQjdDaUFnSUNBZ0lDQWdVaUEvSUNoc1pTZ3pNamd5TXlrc0lDaHJJQ0U5UFNCbFpTQjhmQ0JDSUNFOVBTQlJLU0FtSmlBb2N5NXdiMng1WjI5dVQyWm1jMlYwS0dWbExDQlJLU3dnYXlBOUlHVmxMQ0JDSUQwZ1VTa3BJRG9nWm1Vb016STRNak1wT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RXVW9VaWtnZXdvZ0lDQWdJQ0FnSUZJZ1B5QnNaU2d6TURnNUtTQTZJR1psS0RNd09Ea3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYzJVb1Vpa2dld29nSUNBZ0lDQWdJRklnUFQwOUlIWnZhV1FnTUNBbUppQW9VaUE5SURNek9UZzBJQ3NnVUNBdElERXBMQ0JWSUNFOVBTQlNJQ1ltSUNoekxtRmpkR2wyWlZSbGVIUjFjbVVvVWlrc0lGVWdQU0JTS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGTmxLRklzSUdWbEtTQjdDaUFnSUNBZ0lDQWdWU0E5UFQwZ2JuVnNiQ0FtSmlCelpTZ3BPd29nSUNBZ0lDQWdJR3hsZENCUklEMGdSbHRWWFRzS0lDQWdJQ0FnSUNCUklEMDlQU0IyYjJsa0lEQWdKaVlnS0ZFZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFp2YVdRZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRIVnlaVG9nZG05cFpDQXdDaUFnSUNBZ0lDQWdmU3dnUmx0VlhTQTlJRkVwTENBb1VTNTBlWEJsSUNFOVBTQlNJSHg4SUZFdWRHVjRkSFZ5WlNBaFBUMGdaV1VwSUNZbUlDaHpMbUpwYm1SVVpYaDBkWEpsS0ZJc0lHVmxJSHg4SUdobFcxSmRLU3dnVVM1MGVYQmxJRDBnVWl3Z1VTNTBaWGgwZFhKbElEMGdaV1VwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ZHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGSWdQU0JHVzFWZE93b2dJQ0FnSUNBZ0lGSWdJVDA5SUhadmFXUWdNQ0FtSmlCU0xuUjVjR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9jeTVpYVc1a1ZHVjRkSFZ5WlNoU0xuUjVjR1VzSUc1MWJHd3BMQ0JTTG5SNWNHVWdQU0IyYjJsa0lEQXNJRkl1ZEdWNGRIVnlaU0E5SUhadmFXUWdNQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUVpTZ3BJSHNLSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6TG1OdmJYQnlaWE56WldSVVpYaEpiV0ZuWlRKRUxtRndjR3g1S0hNc0lHRnlaM1Z0Wlc1MGN5azdDaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9VaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lJc0lGSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZsbEtDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11ZEdWNFUzVmlTVzFoWjJVeVJDNWhjSEJzZVNoekxDQmhjbWQxYldWdWRITXBPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLRklwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFRkR0YwWlRvaUxDQlNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCREtDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11ZEdWNFUzVmlTVzFoWjJVelJDNWhjSEJzZVNoekxDQmhjbWQxYldWdWRITXBPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLRklwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFRkR0YwWlRvaUxDQlNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCVUtDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11WTI5dGNISmxjM05sWkZSbGVGTjFZa2x0WVdkbE1rUXVZWEJ3Ykhrb2N5d2dZWEpuZFcxbGJuUnpLVHNLSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hTS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VM1JoZEdVNklpd2dVaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1NpZ3BJSHNLSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6TG5SbGVGTjBiM0poWjJVeVJDNWhjSEJzZVNoekxDQmhjbWQxYldWdWRITXBPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLRklwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFRkR0YwWlRvaUxDQlNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlBa0tDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11ZEdWNFUzUnZjbUZuWlRORUxtRndjR3g1S0hNc0lHRnlaM1Z0Wlc1MGN5azdDaUFnSUNBZ0lDQWdmU0JqWVhSamFDQW9VaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGTjBZWFJsT2lJc0lGSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhKbEtDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11ZEdWNFNXMWhaMlV5UkM1aGNIQnNlU2h6TENCaGNtZDFiV1Z1ZEhNcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tGSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4VGRHRjBaVG9pTENCU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJhS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVkR1Y0U1cxaFoyVXpSQzVoY0hCc2VTaHpMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JTS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQk5aU2hTS1NCN0NpQWdJQ0FnSUNBZ1kyVXVaWEYxWVd4ektGSXBJRDA5UFNBaE1TQW1KaUFvY3k1elkybHpjMjl5S0ZJdWVDd2dVaTU1TENCU0xub3NJRkl1ZHlrc0lHTmxMbU52Y0hrb1Vpa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZG1Vb1Vpa2dld29nSUNBZ0lDQWdJRll1WlhGMVlXeHpLRklwSUQwOVBTQWhNU0FtSmlBb2N5NTJhV1YzY0c5eWRDaFNMbmdzSUZJdWVTd2dVaTU2TENCU0xuY3BMQ0JXTG1OdmNIa29VaWtwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RHVW9LU0I3Q2lBZ0lDQWdJQ0FnY3k1a2FYTmhZbXhsS0RNd05ESXBMQ0J6TG1ScGMyRmliR1VvTWpnNE5Da3NJSE11WkdsellXSnNaU2d5T1RJNUtTd2djeTVrYVhOaFlteGxLRE15T0RJektTd2djeTVrYVhOaFlteGxLRE13T0RrcExDQnpMbVJwYzJGaWJHVW9NamsyTUNrc0lITXVaR2x6WVdKc1pTZ3pNamt5Tmlrc0lITXVZbXhsYm1SRmNYVmhkR2x2Ymlnek1qYzNOQ2tzSUhNdVlteGxibVJHZFc1aktERXNJREFwTENCekxtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtERXNJREFzSURFc0lEQXBMQ0J6TG1OdmJHOXlUV0Z6YXlnaE1Dd2dJVEFzSUNFd0xDQWhNQ2tzSUhNdVkyeGxZWEpEYjJ4dmNpZ3dMQ0F3TENBd0xDQXdLU3dnY3k1a1pYQjBhRTFoYzJzb0lUQXBMQ0J6TG1SbGNIUm9SblZ1WXlnMU1UTXBMQ0J6TG1Oc1pXRnlSR1Z3ZEdnb01Ta3NJSE11YzNSbGJtTnBiRTFoYzJzb05ESTVORGsyTnpJNU5Ta3NJSE11YzNSbGJtTnBiRVoxYm1Nb05URTVMQ0F3TENBME1qazBPVFkzTWprMUtTd2djeTV6ZEdWdVkybHNUM0FvTnpZNE1Dd2dOelk0TUN3Z056WTRNQ2tzSUhNdVkyeGxZWEpUZEdWdVkybHNLREFwTENCekxtTjFiR3hHWVdObEtERXdNamtwTENCekxtWnliMjUwUm1GalpTZ3lNekExS1N3Z2N5NXdiMng1WjI5dVQyWm1jMlYwS0RBc0lEQXBMQ0J6TG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRcExDQnpMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z2JuVnNiQ2tzSUc0Z1BUMDlJQ0V3SUNZbUlDaHpMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakF3T1N3Z2JuVnNiQ2tzSUhNdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1EQTRMQ0J1ZFd4c0tTa3NJSE11ZFhObFVISnZaM0poYlNodWRXeHNLU3dnY3k1c2FXNWxWMmxrZEdnb01Ta3NJSE11YzJOcGMzTnZjaWd3TENBd0xDQnpMbU5oYm5aaGN5NTNhV1IwYUN3Z2N5NWpZVzUyWVhNdWFHVnBaMmgwS1N3Z2N5NTJhV1YzY0c5eWRDZ3dMQ0F3TENCekxtTmhiblpoY3k1M2FXUjBhQ3dnY3k1allXNTJZWE11YUdWcFoyaDBLU3dnYUNBOUlIdDlMQ0JWSUQwZ2JuVnNiQ3dnUmlBOUlIdDlMQ0IxSUQwZ2UzMHNJR1FnUFNCdWRXeHNMQ0JtSUQwZ0lURXNJRzBnUFNCdWRXeHNMQ0I0SUQwZ2JuVnNiQ3dnZGlBOUlHNTFiR3dzSUdjZ1BTQnVkV3hzTENCd0lEMGdiblZzYkN3Z1h5QTlJRzUxYkd3c0lIa2dQU0J1ZFd4c0xDQmlJRDBnSVRFc0lFRWdQU0J1ZFd4c0xDQk1JRDBnYm5Wc2JDd2dTU0E5SUc1MWJHd3NJR3NnUFNCdWRXeHNMQ0JDSUQwZ2JuVnNiQ3dnWTJVdWMyVjBLREFzSURBc0lITXVZMkZ1ZG1GekxuZHBaSFJvTENCekxtTmhiblpoY3k1b1pXbG5hSFFwTENCV0xuTmxkQ2d3TENBd0xDQnpMbU5oYm5aaGN5NTNhV1IwYUN3Z2N5NWpZVzUyWVhNdWFHVnBaMmgwS1N3Z1lTNXlaWE5sZENncExDQnNMbkpsYzJWMEtDa3NJR011Y21WelpYUW9LVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWW5WbVptVnljem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHZzZJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lITjBaVzVqYVd3NklHTUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1Z1WVdKc1pUb2diR1VzQ2lBZ0lDQWdJQ0FnWkdsellXSnNaVG9nWm1Vc0NpQWdJQ0FnSUNBZ1ltbHVaRVp5WVcxbFluVm1abVZ5T2lCQ1pTd0tJQ0FnSUNBZ0lDQjFjMlZRY205bmNtRnRPaUJaTEFvZ0lDQWdJQ0FnSUhObGRFSnNaVzVrYVc1bk9pQm5aU3dLSUNBZ0lDQWdJQ0J6WlhSTllYUmxjbWxoYkRvZ2VHVXNDaUFnSUNBZ0lDQWdjMlYwUm14cGNGTnBaR1ZrT2lCUFpTd0tJQ0FnSUNBZ0lDQnpaWFJEZFd4c1JtRmpaVG9nUnl3S0lDQWdJQ0FnSUNCelpYUk1hVzVsVjJsa2RHZzZJR29zQ2lBZ0lDQWdJQ0FnYzJWMFVHOXNlV2R2Yms5bVpuTmxkRG9nU3l3S0lDQWdJQ0FnSUNCelpYUlRZMmx6YzI5eVZHVnpkRG9nZFdVc0NpQWdJQ0FnSUNBZ1lXTjBhWFpsVkdWNGRIVnlaVG9nYzJVc0NpQWdJQ0FnSUNBZ1ltbHVaRlJsZUhSMWNtVTZJRk5sTEFvZ0lDQWdJQ0FnSUhWdVltbHVaRlJsZUhSMWNtVTZJRlJsTEFvZ0lDQWdJQ0FnSUdOdmJYQnlaWE56WldSVVpYaEpiV0ZuWlRKRU9pQlFaU3dLSUNBZ0lDQWdJQ0IwWlhoSmJXRm5aVEpFT2lCeVpTd0tJQ0FnSUNBZ0lDQjBaWGhKYldGblpUTkVPaUJhTEFvZ0lDQWdJQ0FnSUhSbGVGTjBiM0poWjJVeVJEb2dTaXdLSUNBZ0lDQWdJQ0IwWlhoVGRHOXlZV2RsTTBRNklDUXNDaUFnSUNBZ0lDQWdkR1Y0VTNWaVNXMWhaMlV5UkRvZ1dXVXNDaUFnSUNBZ0lDQWdkR1Y0VTNWaVNXMWhaMlV6UkRvZ1F5d0tJQ0FnSUNBZ0lDQmpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV5UkRvZ1ZDd0tJQ0FnSUNBZ0lDQnpZMmx6YzI5eU9pQk5aU3dLSUNBZ0lDQWdJQ0IyYVdWM2NHOXlkRG9nZG1Vc0NpQWdJQ0FnSUNBZ2NtVnpaWFE2SUhSbENpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlGUjRLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRzhwSUhzS0lDQWdJR3hsZENCaElEMGdhUzVwYzFkbFlrZE1NaXdnYkNBOUlHa3ViV0Y0VkdWNGRIVnlaWE1zSUdNZ1BTQnBMbTFoZUVOMVltVnRZWEJUYVhwbExDQm9JRDBnYVM1dFlYaFVaWGgwZFhKbFUybDZaU3dnZFNBOUlHa3ViV0Y0VTJGdGNHeGxjeXdnWmlBOUlHVXVhR0Z6S0NKWFJVSkhURjl0ZFd4MGFYTmhiWEJzWldSZmNtVnVaR1Z5WDNSdlgzUmxlSFIxY21VaUtTQS9JR1V1WjJWMEtDSlhSVUpIVEY5dGRXeDBhWE5oYlhCc1pXUmZjbVZ1WkdWeVgzUnZYM1JsZUhSMWNtVWlLU0E2SUhadmFXUWdNQ3dnYlNBOUlHNWxkeUJYWldGclRXRndMQ0I0TENCMklEMGdJVEU3Q2lBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUhZZ1BTQjBlWEJsYjJZZ1QyWm1jMk55WldWdVEyRnVkbUZ6SUR3Z0luVWlJQ1ltSUc1bGR5QlBabVp6WTNKbFpXNURZVzUyWVhNb01Td2dNU2t1WjJWMFEyOXVkR1Y0ZENnaU1tUWlLU0FoUFQwZ2JuVnNiRHNLSUNBZ0lIMGdZMkYwWTJnZ0lIdDlDaUFnSUNCbWRXNWpkR2x2YmlCbktFTXNJRlFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZGlBL0lHNWxkeUJQWm1aelkzSmxaVzVEWVc1MllYTW9ReXdnVkNrZ09pQnhjeWdpWTJGdWRtRnpJaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCd0tFTXNJRlFzSUVvc0lDUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NtVWdQU0F4T3dvZ0lDQWdJQ0FnSUdsbUlDZ29ReTUzYVdSMGFDQStJQ1FnZkh3Z1F5NW9aV2xuYUhRZ1BpQWtLU0FtSmlBb2NtVWdQU0FrSUM4Z1RXRjBhQzV0WVhnb1F5NTNhV1IwYUN3Z1F5NW9aV2xuYUhRcEtTd2djbVVnUENBeElIeDhJRlFnUFQwOUlDRXdLU0JwWmlBb2RIbHdaVzltSUVoVVRVeEpiV0ZuWlVWc1pXMWxiblFnUENBaWRTSWdKaVlnUXlCcGJuTjBZVzVqWlc5bUlFaFVUVXhKYldGblpVVnNaVzFsYm5RZ2ZId2dkSGx3Wlc5bUlFaFVUVXhEWVc1MllYTkZiR1Z0Wlc1MElEd2dJblVpSUNZbUlFTWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVEyRnVkbUZ6Uld4bGJXVnVkQ0I4ZkNCMGVYQmxiMllnU1cxaFoyVkNhWFJ0WVhBZ1BDQWlkU0lnSmlZZ1F5QnBibk4wWVc1alpXOW1JRWx0WVdkbFFtbDBiV0Z3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCYUlEMGdWQ0EvSUVwaklEb2dUV0YwYUM1bWJHOXZjaXdnVFdVZ1BTQmFLSEpsSUNvZ1F5NTNhV1IwYUNrc0lIWmxJRDBnV2loeVpTQXFJRU11YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2VDQTlQVDBnZG05cFpDQXdJQ1ltSUNoNElEMGdaeWhOWlN3Z2RtVXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFJsSUQwZ1NpQS9JR2NvVFdVc0lIWmxLU0E2SUhnN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBaUzUzYVdSMGFDQTlJRTFsTENCMFpTNW9aV2xuYUhRZ1BTQjJaU3dnZEdVdVoyVjBRMjl1ZEdWNGRDZ2lNbVFpS1M1a2NtRjNTVzFoWjJVb1F5d2dNQ3dnTUN3Z1RXVXNJSFpsS1N3Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVVpYaDBkWEpsSUdoaGN5QmlaV1Z1SUhKbGMybDZaV1FnWm5KdmJTQW9JaUFySUVNdWQybGtkR2dnS3lBaWVDSWdLeUJETG1obGFXZG9kQ0FySUNJcElIUnZJQ2dpSUNzZ1RXVWdLeUFpZUNJZ0t5QjJaU0FySUNJcExpSXBMQ0IwWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJQ0prWVhSaElpQnBiaUJESUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1NXMWhaMlVnYVc0Z1JHRjBZVlJsZUhSMWNtVWdhWE1nZEc5dklHSnBaeUFvSWlBcklFTXVkMmxrZEdnZ0t5QWllQ0lnS3lCRExtaGxhV2RvZENBcklDSXBMaUlwTENCRE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCRE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdYeWhES1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsaEtFTXVkMmxrZEdncElDWW1JR2xoS0VNdWFHVnBaMmgwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIa29ReWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoSUQ4Z0lURWdPaUJETG5keVlYQlRJQ0U5UFNCMmRDQjhmQ0JETG5keVlYQlVJQ0U5UFNCMmRDQjhmQ0JETG0xcGJrWnBiSFJsY2lBaFBUMGdjblFnSmlZZ1F5NXRhVzVHYVd4MFpYSWdJVDA5SUhSME93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZaWhETENCVUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklDWW1JRlFnSmlZZ1F5NXRhVzVHYVd4MFpYSWdJVDA5SUhKMElDWW1JRU11YldsdVJtbHNkR1Z5SUNFOVBTQjBkRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVFb1F5a2dld29nSUNBZ0lDQWdJSE11WjJWdVpYSmhkR1ZOYVhCdFlYQW9ReWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTUtFTXNJRlFzSUVvc0lDUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1lTQTlQVDBnSVRFcElISmxkSFZ5YmlCVU93b2dJQ0FnSUNBZ0lHbG1JQ2hESUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoelcwTmRJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJ6VzBOZE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRUYwZEdWdGNIUWdkRzhnZFhObElHNXZiaTFsZUdsemRHbHVaeUJYWldKSFRDQnBiblJsY201aGJDQm1iM0p0WVhRZ0p5SWdLeUJESUNzZ0lpY2lLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElISmxJRDBnVkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVkNBOVBUMGdOalF3TXlBbUppQW9TaUE5UFQwZ05URXlOaUFtSmlBb2NtVWdQU0F6TXpNeU5pa3NJRW9nUFQwOUlEVXhNekVnSmlZZ0tISmxJRDBnTXpNek1qVXBMQ0JLSUQwOVBTQTFNVEl4SUNZbUlDaHlaU0E5SURNek16SXhLU2tzSUZRZ1BUMDlJRFkwTURjZ0ppWWdLRW9nUFQwOUlEVXhNallnSmlZZ0tISmxJRDBnTXpRNE16Y3BMQ0JLSUQwOVBTQTFNVE14SUNZbUlDaHlaU0E5SURNME9EUXpLU3dnU2lBOVBUMGdOVEV5TVNBbUppQW9jbVVnUFNBek1qZzBPU2twTENCVUlEMDlQU0EyTkRBNElDWW1JQ2hLSUQwOVBTQTFNVEkySUNZbUlDaHlaU0E5SURNME9ETTJLU3dnU2lBOVBUMGdOVEV6TVNBbUppQW9jbVVnUFNBek5EZzBNaWtzSUVvZ1BUMDlJRFV4TWpFZ0ppWWdLSEpsSUQwZ0pDQTlQVDBnVDJrZ1B5QXpOVGt3TnlBNklETXlPRFUyS1Nrc0lDaHlaU0E5UFQwZ016TXpNalVnZkh3Z2NtVWdQVDA5SURNek16STJJSHg4SUhKbElEMDlQU0F6TkRnME1pQjhmQ0J5WlNBOVBUMGdNelE0TXpZcElDWW1JR1V1WjJWMEtDSkZXRlJmWTI5c2IzSmZZblZtWm1WeVgyWnNiMkYwSWlrc0lISmxPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnU1NoRExDQlVMQ0JLS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdJb1F5d2dTaWtnUFQwOUlDRXdJSHg4SUVNdWFYTkdjbUZ0WldKMVptWmxjbFJsZUhSMWNtVWdKaVlnUXk1dGFXNUdhV3gwWlhJZ0lUMDlJSEowSUNZbUlFTXViV2x1Um1sc2RHVnlJQ0U5UFNCMGRDQS9JRTFoZEdndWJHOW5NaWhOWVhSb0xtMWhlQ2hVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ2twSUNzZ01TQTZJRU11Yldsd2JXRndjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlFTXViV2x3YldGd2N5NXNaVzVuZEdnZ1BpQXdJRDhnUXk1dGFYQnRZWEJ6TG14bGJtZDBhQ0E2SUVNdWFYTkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpTQW1KaUJCY25KaGVTNXBjMEZ5Y21GNUtFTXVhVzFoWjJVcElEOGdWQzV0YVhCdFlYQnpMbXhsYm1kMGFDQTZJREU3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcktFTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdReUE5UFQwZ2NuUWdmSHdnUXlBOVBUMGdkR0VnZkh3Z1F5QTlQVDBnYm1FZ1B5QTVOekk0SURvZ09UY3lPVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVJb1F5a2dld29nSUNBZ0lDQWdJR3hsZENCVUlEMGdReTUwWVhKblpYUTdDaUFnSUNBZ0lDQWdWQzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1Fpa3NJSGNvVkNrc0lGUXVhWE5XYVdSbGIxUmxlSFIxY21VZ0ppWWdiUzVrWld4bGRHVW9WQ2tzSUc4dWJXVnRiM0o1TG5SbGVIUjFjbVZ6TFMwN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlFLRU1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdWQ0E5SUVNdWRHRnlaMlYwT3dvZ0lDQWdJQ0FnSUZRdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJRkFwTENCRktGUXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZHloREtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZRZ1BTQnVMbWRsZENoREtUc0tJQ0FnSUNBZ0lDQlVMbDlmZDJWaVoyeEpibWwwSUNFOVBTQjJiMmxrSURBZ0ppWWdLSE11WkdWc1pYUmxWR1Y0ZEhWeVpTaFVMbDlmZDJWaVoyeFVaWGgwZFhKbEtTd2diaTV5WlcxdmRtVW9ReWtwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1JTaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGUWdQU0JETG5SbGVIUjFjbVVzSUVvZ1BTQnVMbWRsZENoREtTd2dKQ0E5SUc0dVoyVjBLRlFwT3dvZ0lDQWdJQ0FnSUdsbUlDZ2hJVU1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NRdVgxOTNaV0puYkZSbGVIUjFjbVVnSVQwOUlIWnZhV1FnTUNBbUppQW9jeTVrWld4bGRHVlVaWGgwZFhKbEtDUXVYMTkzWldKbmJGUmxlSFIxY21VcExDQnZMbTFsYlc5eWVTNTBaWGgwZFhKbGN5MHRLU3dnUXk1a1pYQjBhRlJsZUhSMWNtVWdKaVlnUXk1a1pYQjBhRlJsZUhSMWNtVXVaR2x6Y0c5elpTZ3BMQ0JETG1selYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBLU0JtYjNJb2JHVjBJSEpsSUQwZ01Ec2djbVVnUENBMk95QnlaU3NyS1hNdVpHVnNaWFJsUm5KaGJXVmlkV1ptWlhJb1NpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSmJjbVZkS1N3Z1NpNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSWdKaVlnY3k1a1pXeGxkR1ZTWlc1a1pYSmlkV1ptWlhJb1NpNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSmJjbVZkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCekxtUmxiR1YwWlVaeVlXMWxZblZtWm1WeUtFb3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlLU3dnU2k1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhJZ0ppWWdjeTVrWld4bGRHVlNaVzVrWlhKaWRXWm1aWElvU2k1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhJcExDQktMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lBbUppQnpMbVJsYkdWMFpVWnlZVzFsWW5WbVptVnlLRW91WDE5M1pXSm5iRTExYkhScGMyRnRjR3hsWkVaeVlXMWxZblZtWm1WeUtTd2dTaTVmWDNkbFltZHNRMjlzYjNKU1pXNWtaWEppZFdabVpYSWdKaVlnY3k1a1pXeGxkR1ZTWlc1a1pYSmlkV1ptWlhJb1NpNWZYM2RsWW1kc1EyOXNiM0pTWlc1a1pYSmlkV1ptWlhJcExDQktMbDlmZDJWaVoyeEVaWEIwYUZKbGJtUmxjbUoxWm1abGNpQW1KaUJ6TG1SbGJHVjBaVkpsYm1SbGNtSjFabVpsY2loS0xsOWZkMlZpWjJ4RVpYQjBhRkpsYm1SbGNtSjFabVpsY2lrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoRExtbHpWMlZpUjB4TmRXeDBhWEJzWlZKbGJtUmxjbFJoY21kbGRITXBJR1p2Y2loc1pYUWdjbVV4SUQwZ01Dd2dXaUE5SUZRdWJHVnVaM1JvT3lCeVpURWdQQ0JhT3lCeVpURXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1RXVWdQU0J1TG1kbGRDaFVXM0psTVYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1RXVXVYMTkzWldKbmJGUmxlSFIxY21VZ0ppWWdLSE11WkdWc1pYUmxWR1Y0ZEhWeVpTaE5aUzVmWDNkbFltZHNWR1Y0ZEhWeVpTa3NJRzh1YldWdGIzSjVMblJsZUhSMWNtVnpMUzBwTENCdUxuSmxiVzkyWlNoVVczSmxNVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUc0dWNtVnRiM1psS0ZRcExDQnVMbkpsYlc5MlpTaERLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCc1pYUWdSQ0E5SURBN0NpQWdJQ0JtZFc1amRHbHZiaUJWS0NrZ2V3b2dJQ0FnSUNBZ0lFUWdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1JpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1F5QTlJRVE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRU1nUGowZ2JDQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1WR1Y0ZEhWeVpYTTZJRlJ5ZVdsdVp5QjBieUIxYzJVZ0lpQXJJRU1nS3lBaUlIUmxlSFIxY21VZ2RXNXBkSE1nZDJocGJHVWdkR2hwY3lCSFVGVWdjM1Z3Y0c5eWRITWdiMjVzZVNBaUlDc2diQ2tzSUVRZ0t6MGdNU3dnUXpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFOG9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JLSUQwZ2JpNW5aWFFvUXlrN0NpQWdJQ0FnSUNBZ2FXWWdLRU11YVhOV2FXUmxiMVJsZUhSMWNtVWdKaVlnYzJVb1F5a3NJRU11ZG1WeWMybHZiaUErSURBZ0ppWWdTaTVmWDNabGNuTnBiMjRnSVQwOUlFTXVkbVZ5YzJsdmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdKQ0E5SUVNdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2drSUQwOVBTQjJiMmxrSURBcElHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZHVjRkSFZ5WlNCdFlYSnJaV1FnWm05eUlIVndaR0YwWlNCaWRYUWdhVzFoWjJVZ2FYTWdkVzVrWldacGJtVmtJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tDUXVZMjl0Y0d4bGRHVWdQVDA5SUNFeEtTQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklGUmxlSFIxY21VZ2JXRnlhMlZrSUdadmNpQjFjR1JoZEdVZ1luVjBJR2x0WVdkbElHbHpJR2x1WTI5dGNHeGxkR1VpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ1pTaEtMQ0JETENCVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QlVLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOVFV6TENCS0xsOWZkMlZpWjJ4VVpYaDBkWEpsS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHNWxLRU1zSUZRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnU2lBOUlHNHVaMlYwS0VNcE93b2dJQ0FnSUNBZ0lHbG1JQ2hETG5abGNuTnBiMjRnUGlBd0lDWW1JRW91WDE5MlpYSnphVzl1SUNFOVBTQkRMblpsY25OcGIyNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1FtVW9TaXdnUXl3Z1ZDazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1aFkzUnBkbVZVWlhoMGRYSmxLRE16T1RnMElDc2dWQ2tzSUhRdVltbHVaRlJsZUhSMWNtVW9NelU0TmpZc0lFb3VYMTkzWldKbmJGUmxlSFIxY21VcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZMlVvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJR3hsZENCS0lEMGdiaTVuWlhRb1F5azdDaUFnSUNBZ0lDQWdhV1lnS0VNdWRtVnljMmx2YmlBK0lEQWdKaVlnU2k1ZlgzWmxjbk5wYjI0Z0lUMDlJRU11ZG1WeWMybHZiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQkNaU2hLTENCRExDQlVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJVS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2d6TWpnM09Td2dTaTVmWDNkbFltZHNWR1Y0ZEhWeVpTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJXS0VNc0lGUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1NpQTlJRzR1WjJWMEtFTXBPd29nSUNBZ0lDQWdJR2xtSUNoRExuWmxjbk5wYjI0Z1BpQXdJQ1ltSUVvdVgxOTJaWEp6YVc5dUlDRTlQU0JETG5abGNuTnBiMjRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdXU2hLTENCRExDQlVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJVS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2d6TkRBMk55d2dTaTVmWDNkbFltZHNWR1Y0ZEhWeVpTazdDaUFnSUNCOUNpQWdJQ0JzWlhRZ1Z5QTlJSHNLSUNBZ0lDQWdJQ0JiVG5OZE9pQXhNRFE1Tnl3S0lDQWdJQ0FnSUNCYmRuUmRPaUF6TXpBM01Td0tJQ0FnSUNBZ0lDQmJRbk5kT2lBek16WTBPQW9nSUNBZ2ZTd2dhR1VnUFNCN0NpQWdJQ0FnSUNBZ1czSjBYVG9nT1RjeU9Dd0tJQ0FnSUNBZ0lDQmJkR0ZkT2lBNU9UZzBMQW9nSUNBZ0lDQWdJRnR1WVYwNklEazVPRFlzQ2lBZ0lDQWdJQ0FnVzNSMFhUb2dPVGN5T1N3S0lDQWdJQ0FnSUNCYlYyTmRPaUE1T1RnMUxBb2dJQ0FnSUNBZ0lGdFZhVjA2SURrNU9EY0tJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJzWlNoRExDQlVMQ0JLS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRW9nUHlBb2N5NTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lERXdNalF5TENCWFcxUXVkM0poY0ZOZEtTd2djeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpRekxDQlhXMVF1ZDNKaGNGUmRLU3dnS0VNZ1BUMDlJRE15T0RjNUlIeDhJRU1nUFQwOUlETTFPRFkyS1NBbUppQnpMblJsZUZCaGNtRnRaWFJsY21rb1F5d2dNekk0T0RJc0lGZGJWQzUzY21Gd1VsMHBMQ0J6TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnTVRBeU5EQXNJR2hsVzFRdWJXRm5SbWxzZEdWeVhTa3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F4TURJME1Td2dhR1ZiVkM1dGFXNUdhV3gwWlhKZEtTa2dPaUFvY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXlMQ0F6TXpBM01Ta3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F4TURJME15d2dNek13TnpFcExDQW9ReUE5UFQwZ016STROemtnZkh3Z1F5QTlQVDBnTXpVNE5qWXBJQ1ltSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hETENBek1qZzRNaXdnTXpNd056RXBMQ0FvVkM1M2NtRndVeUFoUFQwZ2RuUWdmSHdnVkM1M2NtRndWQ0FoUFQwZ2RuUXBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVkdWNGRIVnlaU0JwY3lCdWIzUWdjRzkzWlhJZ2IyWWdkSGR2TGlCVVpYaDBkWEpsTG5keVlYQlRJR0Z1WkNCVVpYaDBkWEpsTG5keVlYQlVJSE5vYjNWc1pDQmlaU0J6WlhRZ2RHOGdWRWhTUlVVdVEyeGhiWEJVYjBWa1oyVlhjbUZ3Y0dsdVp5NGlLU3dnY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXdMQ0JyS0ZRdWJXRm5SbWxzZEdWeUtTa3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F4TURJME1Td2dheWhVTG0xcGJrWnBiSFJsY2lrcExDQlVMbTFwYmtacGJIUmxjaUFoUFQwZ2NuUWdKaVlnVkM1dGFXNUdhV3gwWlhJZ0lUMDlJSFIwSUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZHVjRkSFZ5WlNCcGN5QnViM1FnY0c5M1pYSWdiMllnZEhkdkxpQlVaWGgwZFhKbExtMXBia1pwYkhSbGNpQnphRzkxYkdRZ1ltVWdjMlYwSUhSdklGUklVa1ZGTGs1bFlYSmxjM1JHYVd4MFpYSWdiM0lnVkVoU1JVVXVUR2x1WldGeVJtbHNkR1Z5TGlJcEtTd2daUzVvWVhNb0lrVllWRjkwWlhoMGRYSmxYMlpwYkhSbGNsOWhibWx6YjNSeWIzQnBZeUlwSUQwOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnSkNBOUlHVXVaMlYwS0NKRldGUmZkR1Y0ZEhWeVpWOW1hV3gwWlhKZllXNXBjMjkwY205d2FXTWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRlF1ZEhsd1pTQTlQVDBnYm00Z0ppWWdaUzVvWVhNb0lrOUZVMTkwWlhoMGRYSmxYMlpzYjJGMFgyeHBibVZoY2lJcElEMDlQU0FoTVNCOGZDQmhJRDA5UFNBaE1TQW1KaUJVTG5SNWNHVWdQVDA5SUd0dUlDWW1JR1V1YUdGektDSlBSVk5mZEdWNGRIVnlaVjlvWVd4bVgyWnNiMkYwWDJ4cGJtVmhjaUlwSUQwOVBTQWhNU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBb1ZDNWhibWx6YjNSeWIzQjVJRDRnTVNCOGZDQnVMbWRsZENoVUtTNWZYMk4xY25KbGJuUkJibWx6YjNSeWIzQjVLU0FtSmlBb2N5NTBaWGhRWVhKaGJXVjBaWEptS0VNc0lDUXVWRVZZVkZWU1JWOU5RVmhmUVU1SlUwOVVVazlRV1Y5RldGUXNJRTFoZEdndWJXbHVLRlF1WVc1cGMyOTBjbTl3ZVN3Z2FTNW5aWFJOWVhoQmJtbHpiM1J5YjNCNUtDa3BLU3dnYmk1blpYUW9WQ2t1WDE5amRYSnlaVzUwUVc1cGMyOTBjbTl3ZVNBOUlGUXVZVzVwYzI5MGNtOXdlU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ptVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lFTXVYMTkzWldKbmJFbHVhWFFnUFQwOUlIWnZhV1FnTUNBbUppQW9ReTVmWDNkbFltZHNTVzVwZENBOUlDRXdMQ0JVTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCQ0tTd2dReTVmWDNkbFltZHNWR1Y0ZEhWeVpTQTlJSE11WTNKbFlYUmxWR1Y0ZEhWeVpTZ3BMQ0J2TG0xbGJXOXllUzUwWlhoMGRYSmxjeXNyS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFSmxLRU1zSUZRc0lFb3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ0pDQTlJRE0xTlRNN0NpQWdJQ0FnSUNBZ1ZDNXBjMFJoZEdGVVpYaDBkWEpsTWtSQmNuSmhlU0FtSmlBb0pDQTlJRE0xT0RZMktTd2dWQzVwYzBSaGRHRlVaWGgwZFhKbE0wUWdKaVlnS0NRZ1BTQXpNamczT1Nrc0lHWmxLRU1zSUZRcExDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCS0tTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNna0xDQkRMbDlmZDJWaVoyeFVaWGgwZFhKbEtTd2djeTV3YVhobGJGTjBiM0psYVNnek56UTBNQ3dnVkM1bWJHbHdXU2tzSUhNdWNHbDRaV3hUZEc5eVpXa29NemMwTkRFc0lGUXVjSEpsYlhWc2RHbHdiSGxCYkhCb1lTa3NJSE11Y0dsNFpXeFRkRzl5Wldrb016TXhOeXdnVkM1MWJuQmhZMnRCYkdsbmJtMWxiblFwTENCekxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRRekxDQXdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NtVWdQU0I1S0ZRcElDWW1JRjhvVkM1cGJXRm5aU2tnUFQwOUlDRXhMQ0JhSUQwZ2NDaFVMbWx0WVdkbExDQnlaU3dnSVRFc0lHZ3BMQ0JOWlNBOUlGOG9XaWtnZkh3Z1lTd2dkbVVnUFNCeUxtTnZiblpsY25Rb1ZDNW1iM0p0WVhRcExDQjBaU0E5SUhJdVkyOXVkbVZ5ZENoVUxuUjVjR1VwTENCU0lEMGdUQ2hVTG1sdWRHVnlibUZzUm05eWJXRjBMQ0IyWlN3Z2RHVXNJRlF1Wlc1amIyUnBibWNwT3dvZ0lDQWdJQ0FnSUd4bEtDUXNJRlFzSUUxbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWldVc0lGRWdQU0JVTG0xcGNHMWhjSE1zSUVWbElEMGdZU0FtSmlCVUxtbHpWbWxrWlc5VVpYaDBkWEpsSUNFOVBTQWhNQ3dnYldVZ1BTQkRMbDlmZG1WeWMybHZiaUE5UFQwZ2RtOXBaQ0F3TENCU1pTQTlJRWtvVkN3Z1dpd2dUV1VwT3dvZ0lDQWdJQ0FnSUdsbUlDaFVMbWx6UkdWd2RHaFVaWGgwZFhKbEtTQlNJRDBnTmpRd01pd2dZU0EvSUZRdWRIbHdaU0E5UFQwZ2JtNGdQeUJTSUQwZ016WXdNVElnT2lCVUxuUjVjR1VnUFQwOUlGQnpJRDhnVWlBOUlETXpNVGt3SURvZ1ZDNTBlWEJsSUQwOVBTQlVhU0EvSUZJZ1BTQXpOVEExTmlBNklGSWdQU0F6TXpFNE9TQTZJRlF1ZEhsd1pTQTlQVDBnYm00Z0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVYyVmlSMHhTWlc1a1pYSmxjam9nUm14dllYUnBibWNnY0c5cGJuUWdaR1Z3ZEdnZ2RHVjRkSFZ5WlNCeVpYRjFhWEpsY3lCWFpXSkhUREl1SWlrc0lGUXVabTl5YldGMElEMDlQU0JXYmlBbUppQlNJRDA5UFNBMk5EQXlJQ1ltSUZRdWRIbHdaU0FoUFQwZ1kzSWdKaVlnVkM1MGVYQmxJQ0U5UFNCUWN5QW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJWYzJVZ1ZXNXphV2R1WldSVGFHOXlkRlI1Y0dVZ2IzSWdWVzV6YVdkdVpXUkpiblJVZVhCbElHWnZjaUJFWlhCMGFFWnZjbTFoZENCRVpYQjBhRlJsZUhSMWNtVXVJaWtzSUZRdWRIbHdaU0E5SUdOeUxDQjBaU0E5SUhJdVkyOXVkbVZ5ZENoVUxuUjVjR1VwS1N3Z1ZDNW1iM0p0WVhRZ1BUMDlJRXhwSUNZbUlGSWdQVDA5SURZME1ESWdKaVlnS0ZJZ1BTQXpOREEwTVN3Z1ZDNTBlWEJsSUNFOVBTQlVhU0FtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVmMyVWdWVzV6YVdkdVpXUkpiblF5TkRoVWVYQmxJR1p2Y2lCRVpYQjBhRk4wWlc1amFXeEdiM0p0WVhRZ1JHVndkR2hVWlhoMGRYSmxMaUlwTENCVUxuUjVjR1VnUFNCVWFTd2dkR1VnUFNCeUxtTnZiblpsY25Rb1ZDNTBlWEJsS1NrcExDQkZaU0FtSmlCdFpTQS9JSFF1ZEdWNFUzUnZjbUZuWlRKRUtETTFOVE1zSURFc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOVFV6TENBd0xDQlNMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ3dnTUN3Z2RtVXNJSFJsTENCdWRXeHNLVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hVTG1selJHRjBZVlJsZUhSMWNtVXBJR2xtSUNoUkxteGxibWQwYUNBK0lEQWdKaVlnVFdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUldVZ0ppWWdiV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGRmJNRjB1ZDJsa2RHZ3NJRkZiTUYwdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZaU0E5SURBc0lFeGxJRDBnVVM1c1pXNW5kR2c3SUc5bElEd2dUR1U3SUc5bEt5c3BaV1VnUFNCUlcyOWxYU3dnUldVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb016VTFNeXdnTUN3Z01Dd2dNQ3dnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z2RtVXNJSFJsTENCbFpTNWtZWFJoS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2d6TlRVekxDQnZaU3dnVWl3Z1pXVXVkMmxrZEdnc0lHVmxMbWhsYVdkb2RDd2dNQ3dnZG1Vc0lIUmxMQ0JsWlM1a1lYUmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZDNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdSV1VnUHlBb2JXVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwS1N3Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJREFzSURBc0lEQXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0IyWlN3Z2RHVXNJRm91WkdGMFlTa3BJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTFOVE1zSURBc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0F3TENCMlpTd2dkR1VzSUZvdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVkM1cGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVWbElDWW1JRzFsSUNZbUlIUXVkR1Y0VTNSdmNtRm5aVEpFS0RNMU5UTXNJRkpsTENCU0xDQlJXekJkTG5kcFpIUm9MQ0JSV3pCZExtaGxhV2RvZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiMlV4SUQwZ01Dd2dUR1V4SUQwZ1VTNXNaVzVuZEdnN0lHOWxNU0E4SUV4bE1Uc2diMlV4S3lzcFpXVWdQU0JSVzI5bE1WMHNJRlF1Wm05eWJXRjBJQ0U5UFNCamRDQW1KaUJVTG1admNtMWhkQ0FoUFQwZ1IyNGdQeUIyWlNBaFBUMGdiblZzYkNBL0lFVmxJRDhnZEM1amIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSQ2d6TlRVekxDQnZaVEVzSURBc0lEQXNJR1ZsTG5kcFpIUm9MQ0JsWlM1b1pXbG5hSFFzSUhabExDQmxaUzVrWVhSaEtTQTZJSFF1WTI5dGNISmxjM05sWkZSbGVFbHRZV2RsTWtRb016VTFNeXdnYjJVeExDQlNMQ0JsWlM1M2FXUjBhQ3dnWldVdWFHVnBaMmgwTENBd0xDQmxaUzVrWVhSaEtTQTZJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dRWFIwWlcxd2RDQjBieUJzYjJGa0lIVnVjM1Z3Y0c5eWRHVmtJR052YlhCeVpYTnpaV1FnZEdWNGRIVnlaU0JtYjNKdFlYUWdhVzRnTG5Wd2JHOWhaRlJsZUhSMWNtVW9LU0lwSURvZ1JXVWdQeUIwTG5SbGVGTjFZa2x0WVdkbE1rUW9NelUxTXl3Z2IyVXhMQ0F3TENBd0xDQmxaUzUzYVdSMGFDd2daV1V1YUdWcFoyaDBMQ0IyWlN3Z2RHVXNJR1ZsTG1SaGRHRXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTFOVE1zSUc5bE1Td2dVaXdnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z01Dd2dkbVVzSUhSbExDQmxaUzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRlF1YVhORVlYUmhWR1Y0ZEhWeVpUSkVRWEp5WVhrcElFVmxJRDhnS0cxbElDWW1JSFF1ZEdWNFUzUnZjbUZuWlRORUtETTFPRFkyTENCU1pTd2dVaXdnV2k1M2FXUjBhQ3dnV2k1b1pXbG5hSFFzSUZvdVpHVndkR2dwTENCMExuUmxlRk4xWWtsdFlXZGxNMFFvTXpVNE5qWXNJREFzSURBc0lEQXNJREFzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwTENCYUxtUmxjSFJvTENCMlpTd2dkR1VzSUZvdVpHRjBZU2twSURvZ2RDNTBaWGhKYldGblpUTkVLRE0xT0RZMkxDQXdMQ0JTTENCYUxuZHBaSFJvTENCYUxtaGxhV2RvZEN3Z1dpNWtaWEIwYUN3Z01Dd2dkbVVzSUhSbExDQmFMbVJoZEdFcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tGUXVhWE5FWVhSaFZHVjRkSFZ5WlRORUtTQkZaU0EvSUNodFpTQW1KaUIwTG5SbGVGTjBiM0poWjJVelJDZ3pNamczT1N3Z1VtVXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwTENCYUxtUmxjSFJvS1N3Z2RDNTBaWGhUZFdKSmJXRm5aVE5FS0RNeU9EYzVMQ0F3TENBd0xDQXdMQ0F3TENCYUxuZHBaSFJvTENCYUxtaGxhV2RvZEN3Z1dpNWtaWEIwYUN3Z2RtVXNJSFJsTENCYUxtUmhkR0VwS1NBNklIUXVkR1Y0U1cxaFoyVXpSQ2d6TWpnM09Td2dNQ3dnVWl3Z1dpNTNhV1IwYUN3Z1dpNW9aV2xuYUhRc0lGb3VaR1Z3ZEdnc0lEQXNJSFpsTENCMFpTd2dXaTVrWVhSaEtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFVMbWx6Um5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsS1NCRlpTQW1KaUJ0WlNBL0lIUXVkR1Y0VTNSdmNtRm5aVEpFS0RNMU5UTXNJRkpsTENCU0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDa2dPaUIwTG5SbGVFbHRZV2RsTWtRb016VTFNeXdnTUN3Z1Vpd2dXaTUzYVdSMGFDd2dXaTVvWldsbmFIUXNJREFzSUhabExDQjBaU3dnYm5Wc2JDazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9VUzVzWlc1bmRHZ2dQaUF3SUNZbUlFMWxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFVmxJQ1ltSUcxbElDWW1JSFF1ZEdWNFUzUnZjbUZuWlRKRUtETTFOVE1zSUZKbExDQlNMQ0JSV3pCZExuZHBaSFJvTENCUld6QmRMbWhsYVdkb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYjJVeUlEMGdNQ3dnVEdVeUlEMGdVUzVzWlc1bmRHZzdJRzlsTWlBOElFeGxNanNnYjJVeUt5c3BaV1VnUFNCUlcyOWxNbDBzSUVWbElEOGdkQzUwWlhoVGRXSkpiV0ZuWlRKRUtETTFOVE1zSUc5bE1pd2dNQ3dnTUN3Z2RtVXNJSFJsTENCbFpTa2dPaUIwTG5SbGVFbHRZV2RsTWtRb016VTFNeXdnYjJVeUxDQlNMQ0IyWlN3Z2RHVXNJR1ZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdWQzVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnUldVZ1B5QW9iV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMEtTd2dkQzUwWlhoVGRXSkpiV0ZuWlRKRUtETTFOVE1zSURBc0lEQXNJREFzSUhabExDQjBaU3dnV2lrcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJREFzSUZJc0lIWmxMQ0IwWlN3Z1dpazdDaUFnSUNBZ0lDQWdZaWhVTENCTlpTa2dKaVlnUVNna0tTd2dReTVmWDNabGNuTnBiMjRnUFNCVUxuWmxjbk5wYjI0c0lGUXViMjVWY0dSaGRHVWdKaVlnVkM1dmJsVndaR0YwWlNoVUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRmtvUXl3Z1ZDd2dTaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaFVMbWx0WVdkbExteGxibWQwYUNBaFBUMGdOaWtnY21WMGRYSnVPd29nSUNBZ0lDQWdJR1psS0VNc0lGUXBMQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QktLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOREEyTnl3Z1F5NWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lITXVjR2w0Wld4VGRHOXlaV2tvTXpjME5EQXNJRlF1Wm14cGNGa3BMQ0J6TG5CcGVHVnNVM1J2Y21WcEtETTNORFF4TENCVUxuQnlaVzExYkhScGNHeDVRV3h3YUdFcExDQnpMbkJwZUdWc1UzUnZjbVZwS0RNek1UY3NJRlF1ZFc1d1lXTnJRV3hwWjI1dFpXNTBLU3dnY3k1d2FYaGxiRk4wYjNKbGFTZ3pOelEwTXl3Z01DazdDaUFnSUNBZ0lDQWdiR1YwSUNRZ1BTQlVJQ1ltSUNoVUxtbHpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVWdmSHdnVkM1cGJXRm5aVnN3WFM1cGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbEtTd2djbVVnUFNCVUxtbHRZV2RsV3pCZElDWW1JRlF1YVcxaFoyVmJNRjB1YVhORVlYUmhWR1Y0ZEhWeVpTd2dXaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2IyVWdQU0F3T3lCdlpTQThJRFk3SUc5bEt5c3BJU1FnSmlZZ0lYSmxJRDhnV2x0dlpWMGdQU0J3S0ZRdWFXMWhaMlZiYjJWZExDQWhNU3dnSVRBc0lHTXBJRG9nV2x0dlpWMGdQU0J5WlNBL0lGUXVhVzFoWjJWYmIyVmRMbWx0WVdkbElEb2dWQzVwYldGblpWdHZaVjA3Q2lBZ0lDQWdJQ0FnYkdWMElFMWxJRDBnV2xzd1hTd2dkbVVnUFNCZktFMWxLU0I4ZkNCaExDQjBaU0E5SUhJdVkyOXVkbVZ5ZENoVUxtWnZjbTFoZENrc0lGSWdQU0J5TG1OdmJuWmxjblFvVkM1MGVYQmxLU3dnWldVZ1BTQk1LRlF1YVc1MFpYSnVZV3hHYjNKdFlYUXNJSFJsTENCU0xDQlVMbVZ1WTI5a2FXNW5LU3dnVVNBOUlHRWdKaVlnVkM1cGMxWnBaR1Z2VkdWNGRIVnlaU0FoUFQwZ0lUQXNJRVZsSUQwZ1F5NWZYM1psY25OcGIyNGdQVDA5SUhadmFXUWdNQ3dnYldVZ1BTQkpLRlFzSUUxbExDQjJaU2s3Q2lBZ0lDQWdJQ0FnYkdVb016UXdOamNzSUZRc0lIWmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1VtVTdDaUFnSUNBZ0lDQWdhV1lnS0NRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVVNBbUppQkZaU0FtSmlCMExuUmxlRk4wYjNKaFoyVXlSQ2d6TkRBMk55d2diV1VzSUdWbExDQk5aUzUzYVdSMGFDd2dUV1V1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdlpURWdQU0F3T3lCdlpURWdQQ0EyT3lCdlpURXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JTWlNBOUlGcGJiMlV4WFM1dGFYQnRZWEJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JNWlNBOUlEQTdJRXhsSUR3Z1VtVXViR1Z1WjNSb095Qk1aU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnV0dVZ1BTQlNaVnRNWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdWQzVtYjNKdFlYUWdJVDA5SUdOMElDWW1JRlF1Wm05eWJXRjBJQ0U5UFNCSGJpQS9JSFJsSUNFOVBTQnVkV3hzSUQ4Z1VTQS9JSFF1WTI5dGNISmxjM05sWkZSbGVGTjFZa2x0WVdkbE1rUW9NelF3TmprZ0t5QnZaVEVzSUV4bExDQXdMQ0F3TENCWVpTNTNhV1IwYUN3Z1dHVXVhR1ZwWjJoMExDQjBaU3dnV0dVdVpHRjBZU2tnT2lCMExtTnZiWEJ5WlhOelpXUlVaWGhKYldGblpUSkVLRE0wTURZNUlDc2diMlV4TENCTVpTd2daV1VzSUZobExuZHBaSFJvTENCWVpTNW9aV2xuYUhRc0lEQXNJRmhsTG1SaGRHRXBJRG9nWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJCZEhSbGJYQjBJSFJ2SUd4dllXUWdkVzV6ZFhCd2IzSjBaV1FnWTI5dGNISmxjM05sWkNCMFpYaDBkWEpsSUdadmNtMWhkQ0JwYmlBdWMyVjBWR1Y0ZEhWeVpVTjFZbVVvS1NJcElEb2dVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTVN3Z1RHVXNJREFzSURBc0lGaGxMbmRwWkhSb0xDQllaUzVvWldsbmFIUXNJSFJsTENCU0xDQllaUzVrWVhSaEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1Td2dUR1VzSUdWbExDQllaUzUzYVdSMGFDd2dXR1V1YUdWcFoyaDBMQ0F3TENCMFpTd2dVaXdnV0dVdVpHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JTWlNBOUlGUXViV2x3YldGd2N5d2dVU0FtSmlCRlpTQW1KaUFvVW1VdWJHVnVaM1JvSUQ0Z01DQW1KaUJ0WlNzckxDQjBMblJsZUZOMGIzSmhaMlV5UkNnek5EQTJOeXdnYldVc0lHVmxMQ0JhV3pCZExuZHBaSFJvTENCYVd6QmRMbWhsYVdkb2RDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc5bE1pQTlJREE3SUc5bE1pQThJRFk3SUc5bE1pc3JLV2xtSUNoeVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTWl3Z01Dd2dNQ3dnTUN3Z1dsdHZaVEpkTG5kcFpIUm9MQ0JhVzI5bE1sMHVhR1ZwWjJoMExDQjBaU3dnVWl3Z1dsdHZaVEpkTG1SaGRHRXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTBNRFk1SUNzZ2IyVXlMQ0F3TENCbFpTd2dXbHR2WlRKZExuZHBaSFJvTENCYVcyOWxNbDB1YUdWcFoyaDBMQ0F3TENCMFpTd2dVaXdnV2x0dlpUSmRMbVJoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCTVpURWdQU0F3T3lCTVpURWdQQ0JTWlM1c1pXNW5kR2c3SUV4bE1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWMlVnUFNCU1pWdE1aVEZkTG1sdFlXZGxXMjlsTWwwdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VTQS9JSFF1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNaXdnVEdVeElDc2dNU3dnTUN3Z01Dd2dWMlV1ZDJsa2RHZ3NJRmRsTG1obGFXZG9kQ3dnZEdVc0lGSXNJRmRsTG1SaGRHRXBJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTBNRFk1SUNzZ2IyVXlMQ0JNWlRFZ0t5QXhMQ0JsWlN3Z1YyVXVkMmxrZEdnc0lGZGxMbWhsYVdkb2RDd2dNQ3dnZEdVc0lGSXNJRmRsTG1SaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVVNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1pd2dNQ3dnTUN3Z01Dd2dkR1VzSUZJc0lGcGJiMlV5WFNrZ09pQjBMblJsZUVsdFlXZGxNa1FvTXpRd05qa2dLeUJ2WlRJc0lEQXNJR1ZsTENCMFpTd2dVaXdnV2x0dlpUSmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdUR1V5SUQwZ01Ec2dUR1V5SUR3Z1VtVXViR1Z1WjNSb095Qk1aVElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZobE1TQTlJRkpsVzB4bE1sMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVVNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1pd2dUR1V5SUNzZ01Td2dNQ3dnTUN3Z2RHVXNJRklzSUZobE1TNXBiV0ZuWlZ0dlpUSmRLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNaXdnVEdVeUlDc2dNU3dnWldVc0lIUmxMQ0JTTENCWVpURXVhVzFoWjJWYmIyVXlYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZaWhVTENCMlpTa2dKaVlnUVNnek5EQTJOeWtzSUVNdVgxOTJaWEp6YVc5dUlEMGdWQzUyWlhKemFXOXVMQ0JVTG05dVZYQmtZWFJsSUNZbUlGUXViMjVWY0dSaGRHVW9WQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCRFpTaERMQ0JVTENCS0xDQWtMQ0J5WlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JhSUQwZ2NpNWpiMjUyWlhKMEtFb3VabTl5YldGMEtTd2dUV1VnUFNCeUxtTnZiblpsY25Rb1NpNTBlWEJsS1N3Z2RtVWdQU0JNS0VvdWFXNTBaWEp1WVd4R2IzSnRZWFFzSUZvc0lFMWxMQ0JLTG1WdVkyOWthVzVuS1RzS0lDQWdJQ0FnSUNCdUxtZGxkQ2hVS1M1ZlgyaGhjMFY0ZEdWeWJtRnNWR1Y0ZEhWeVpYTWdmSHdnS0hKbElEMDlQU0F6TWpnM09TQjhmQ0J5WlNBOVBUMGdNelU0TmpZZ1B5QjBMblJsZUVsdFlXZGxNMFFvY21Vc0lEQXNJSFpsTENCVUxuZHBaSFJvTENCVUxtaGxhV2RvZEN3Z1ZDNWtaWEIwYUN3Z01Dd2dXaXdnVFdVc0lHNTFiR3dwSURvZ2RDNTBaWGhKYldGblpUSkVLSEpsTENBd0xDQjJaU3dnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFzSURBc0lGb3NJRTFsTENCdWRXeHNLU2tzSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0JES1N3Z1ZDNTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVWdQeUJtTG1aeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlRKRVRYVnNkR2x6WVcxd2JHVkZXRlFvTXpZeE5qQXNJQ1FzSUhKbExDQnVMbWRsZENoS0tTNWZYM2RsWW1kc1ZHVjRkSFZ5WlN3Z01Dd2dkV1VvVkNrcElEb2djeTVtY21GdFpXSjFabVpsY2xSbGVIUjFjbVV5UkNnek5qRTJNQ3dnSkN3Z2NtVXNJRzR1WjJWMEtFb3BMbDlmZDJWaVoyeFVaWGgwZFhKbExDQXdLU3dnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZeE5qQXNJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlV1VvUXl3Z1ZDd2dTaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaHpMbUpwYm1SU1pXNWtaWEppZFdabVpYSW9Nell4TmpFc0lFTXBMQ0JVTG1SbGNIUm9RblZtWm1WeUlDWW1JQ0ZVTG5OMFpXNWphV3hDZFdabVpYSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJQ1FnUFNBek16RTRPVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRW9nZkh3Z1ZDNTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeVpTQTlJRlF1WkdWd2RHaFVaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVWdKaVlnY21VdWFYTkVaWEIwYUZSbGVIUjFjbVVnSmlZZ0tISmxMblI1Y0dVZ1BUMDlJRzV1SUQ4Z0pDQTlJRE0yTURFeUlEb2djbVV1ZEhsd1pTQTlQVDBnVUhNZ0ppWWdLQ1FnUFNBek16RTVNQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGb2dQU0IxWlNoVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGUXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDhnWmk1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVkZXRlFvTXpZeE5qRXNJRm9zSUNRc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtTQTZJSE11Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlUxMWJIUnBjMkZ0Y0d4bEtETTJNVFl4TENCYUxDQWtMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCekxuSmxibVJsY21KMVptWmxjbE4wYjNKaFoyVW9Nell4TmpFc0lDUXNJRlF1ZDJsa2RHZ3NJRlF1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NW1jbUZ0WldKMVptWmxjbEpsYm1SbGNtSjFabVpsY2lnek5qRTJNQ3dnTXpZd09UWXNJRE0yTVRZeExDQkRLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZRdVpHVndkR2hDZFdabVpYSWdKaVlnVkM1emRHVnVZMmxzUW5WbVptVnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0FrTVNBOUlIVmxLRlFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQktJQ1ltSUZRdWRYTmxVbVZ1WkdWeVluVm1abVZ5SUQ4Z2N5NXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1VvTXpZeE5qRXNJQ1F4TENBek5UQTFOaXdnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFwSURvZ1ZDNTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVWdQeUJtTG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJWTmRXeDBhWE5oYlhCc1pVVllWQ2d6TmpFMk1Td2dKREVzSURNMU1EVTJMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ2tnT2lCekxuSmxibVJsY21KMVptWmxjbE4wYjNKaFoyVW9Nell4TmpFc0lETTBNRFF4TENCVUxuZHBaSFJvTENCVUxtaGxhV2RvZENrc0lITXVabkpoYldWaWRXWm1aWEpTWlc1a1pYSmlkV1ptWlhJb016WXhOakFzSURNek16QTJMQ0F6TmpFMk1Td2dReWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJQ1F5SUQwZ1ZDNXBjMWRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpJRDA5UFNBaE1DQS9JRlF1ZEdWNGRIVnlaVnN3WFNBNklGUXVkR1Y0ZEhWeVpTd2djbVV4SUQwZ2NpNWpiMjUyWlhKMEtDUXlMbVp2Y20xaGRDa3NJRm94SUQwZ2NpNWpiMjUyWlhKMEtDUXlMblI1Y0dVcExDQk5aU0E5SUV3b0pESXVhVzUwWlhKdVlXeEdiM0p0WVhRc0lISmxNU3dnV2pFc0lDUXlMbVZ1WTI5a2FXNW5LU3dnZG1VZ1BTQjFaU2hVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdTaUFtSmlCVUxuVnpaVkpsYm1SbGNtSjFabVpsY2lBL0lITXVjbVZ1WkdWeVluVm1abVZ5VTNSdmNtRm5aVTExYkhScGMyRnRjR3hsS0RNMk1UWXhMQ0IyWlN3Z1RXVXNJRlF1ZDJsa2RHZ3NJRlF1YUdWcFoyaDBLU0E2SUZRdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElEOGdaaTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdWRldGUW9Nell4TmpFc0lIWmxMQ0JOWlN3Z1ZDNTNhV1IwYUN3Z1ZDNW9aV2xuYUhRcElEb2djeTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsS0RNMk1UWXhMQ0JOWlN3Z1ZDNTNhV1IwYUN3Z1ZDNW9aV2xuYUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnpMbUpwYm1SU1pXNWtaWEppZFdabVpYSW9Nell4TmpFc0lHNTFiR3dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1oyVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hVSUNZbUlGUXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVJHVndkR2dnVkdWNGRIVnlaU0IzYVhSb0lHTjFZbVVnY21WdVpHVnlJSFJoY21kbGRITWdhWE1nYm05MElITjFjSEJ2Y25SbFpDSXBPd29nSUNBZ0lDQWdJR2xtSUNoMExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnUXlrc0lDRW9WQzVrWlhCMGFGUmxlSFIxY21VZ0ppWWdWQzVrWlhCMGFGUmxlSFIxY21VdWFYTkVaWEIwYUZSbGVIUjFjbVVwS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW5KbGJtUmxjbFJoY21kbGRDNWtaWEIwYUZSbGVIUjFjbVVnYlhWemRDQmlaU0JoYmlCcGJuTjBZVzVqWlNCdlppQlVTRkpGUlM1RVpYQjBhRlJsZUhSMWNtVWlLVHNLSUNBZ0lDQWdJQ0FvSVc0dVoyVjBLRlF1WkdWd2RHaFVaWGgwZFhKbEtTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNCOGZDQlVMbVJsY0hSb1ZHVjRkSFZ5WlM1cGJXRm5aUzUzYVdSMGFDQWhQVDBnVkM1M2FXUjBhQ0I4ZkNCVUxtUmxjSFJvVkdWNGRIVnlaUzVwYldGblpTNW9aV2xuYUhRZ0lUMDlJRlF1YUdWcFoyaDBLU0FtSmlBb1ZDNWtaWEIwYUZSbGVIUjFjbVV1YVcxaFoyVXVkMmxrZEdnZ1BTQlVMbmRwWkhSb0xDQlVMbVJsY0hSb1ZHVjRkSFZ5WlM1cGJXRm5aUzVvWldsbmFIUWdQU0JVTG1obGFXZG9kQ3dnVkM1a1pYQjBhRlJsZUhSMWNtVXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Da3NJRThvVkM1a1pYQjBhRlJsZUhSMWNtVXNJREFwT3dvZ0lDQWdJQ0FnSUd4bGRDQWtJRDBnYmk1blpYUW9WQzVrWlhCMGFGUmxlSFIxY21VcExsOWZkMlZpWjJ4VVpYaDBkWEpsTENCeVpTQTlJSFZsS0ZRcE93b2dJQ0FnSUNBZ0lHbG1JQ2hVTG1SbGNIUm9WR1Y0ZEhWeVpTNW1iM0p0WVhRZ1BUMDlJRlp1S1NCVUxuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTQS9JR1l1Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtSTmRXeDBhWE5oYlhCc1pVVllWQ2d6TmpFMk1Dd2dNell3T1RZc0lETTFOVE1zSUNRc0lEQXNJSEpsS1NBNklITXVabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1FvTXpZeE5qQXNJRE0yTURrMkxDQXpOVFV6TENBa0xDQXdLVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hVTG1SbGNIUm9WR1Y0ZEhWeVpTNW1iM0p0WVhRZ1BUMDlJRXhwS1NCVUxuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTQS9JR1l1Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtSTmRXeDBhWE5oYlhCc1pVVllWQ2d6TmpFMk1Dd2dNek16TURZc0lETTFOVE1zSUNRc0lEQXNJSEpsS1NBNklITXVabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1FvTXpZeE5qQXNJRE16TXpBMkxDQXpOVFV6TENBa0xDQXdLVHNLSUNBZ0lDQWdJQ0JsYkhObElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZXNXJibTkzYmlCa1pYQjBhRlJsZUhSMWNtVWdabTl5YldGMElpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI0WlNoREtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZRZ1BTQnVMbWRsZENoREtTd2dTaUE5SUVNdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnUFQwOUlDRXdPd29nSUNBZ0lDQWdJR2xtSUNoRExtUmxjSFJvVkdWNGRIVnlaU0FtSmlBaFZDNWZYMkYxZEc5QmJHeHZZMkYwWlVSbGNIUm9RblZtWm1WeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaEtLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JblJoY21kbGRDNWtaWEIwYUZSbGVIUjFjbVVnYm05MElITjFjSEJ2Y25SbFpDQnBiaUJEZFdKbElISmxibVJsY2lCMFlYSm5aWFJ6SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsS0ZRdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUxDQkRLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0VvcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVkM1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhJZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENBa0lEMGdNRHNnSkNBOElEWTdJQ1FyS3lsMExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnVkM1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhKYkpGMHBMQ0JVTGw5ZmQyVmlaMnhFWlhCMGFHSjFabVpsY2xza1hTQTlJSE11WTNKbFlYUmxVbVZ1WkdWeVluVm1abVZ5S0Nrc0lIbGxLRlF1WDE5M1pXSm5iRVJsY0hSb1luVm1abVZ5V3lSZExDQkRMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0JVTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lrc0lGUXVYMTkzWldKbmJFUmxjSFJvWW5WbVptVnlJRDBnY3k1amNtVmhkR1ZTWlc1a1pYSmlkV1ptWlhJb0tTd2dlV1VvVkM1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhJc0lFTXNJQ0V4S1RzS0lDQWdJQ0FnSUNCMExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnYm5Wc2JDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJQWlNoRExDQlVMQ0JLS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJQ1FnUFNCdUxtZGxkQ2hES1RzS0lDQWdJQ0FnSUNCVUlDRTlQU0IyYjJsa0lEQWdKaVlnUTJVb0pDNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXNJRU1zSUVNdWRHVjRkSFZ5WlN3Z016WXdOalFzSURNMU5UTXBMQ0JLSUNFOVBTQjJiMmxrSURBZ0ppWWdlR1VvUXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkhLRU1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdWQ0E5SUVNdWRHVjRkSFZ5WlN3Z1NpQTlJRzR1WjJWMEtFTXBMQ0FrSUQwZ2JpNW5aWFFvVkNrN0NpQWdJQ0FnSUNBZ1F5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dVQ2tzSUVNdWFYTlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN5QWhQVDBnSVRBZ0ppWWdLQ1F1WDE5M1pXSm5iRlJsZUhSMWNtVWdQVDA5SUhadmFXUWdNQ0FtSmlBb0pDNWZYM2RsWW1kc1ZHVjRkSFZ5WlNBOUlITXVZM0psWVhSbFZHVjRkSFZ5WlNncEtTd2dKQzVmWDNabGNuTnBiMjRnUFNCVUxuWmxjbk5wYjI0c0lHOHViV1Z0YjNKNUxuUmxlSFIxY21Wekt5c3BPd29nSUNBZ0lDQWdJR3hsZENCeVpTQTlJRU11YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUWdQVDA5SUNFd0xDQmFJRDBnUXk1cGMxZGxZa2RNVFhWc2RHbHdiR1ZTWlc1a1pYSlVZWEpuWlhSeklEMDlQU0FoTUN3Z1RXVWdQU0JVTG1selJHRjBZVlJsZUhSMWNtVXpSQ0I4ZkNCVUxtbHpSR0YwWVZSbGVIUjFjbVV5UkVGeWNtRjVMQ0IyWlNBOUlGOG9ReWtnZkh3Z1lUc0tJQ0FnSUNBZ0lDQnBaaUFvWVNBbUppQlVMbVp2Y20xaGRDQTlQVDBnUjI0Z0ppWWdLRlF1ZEhsd1pTQTlQVDBnYm00Z2ZId2dWQzUwZVhCbElEMDlQU0JyYmlrZ0ppWWdLRlF1Wm05eWJXRjBJRDBnWTNRc0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1VtVnVaR1Z5YVc1bklIUnZJSFJsZUhSMWNtVnpJSGRwZEdnZ1VrZENJR1p2Y20xaGRDQnBjeUJ1YjNRZ2MzVndjRzl5ZEdWa0xpQlZjMmx1WnlCU1IwSkJJR1p2Y20xaGRDQnBibk4wWldGa0xpSXBLU3dnY21VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnU2k1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhJZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMFpTQTlJREE3SUhSbElEd2dOanNnZEdVckt5bEtMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjbHQwWlYwZ1BTQnpMbU55WldGMFpVWnlZVzFsWW5WbVptVnlLQ2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoS0xsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNpQTlJSE11WTNKbFlYUmxSbkpoYldWaWRXWm1aWElvS1N3Z1dpa2dhV1lnS0drdVpISmhkMEoxWm1abGNuTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFJsTVNBOUlFTXVkR1Y0ZEhWeVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JTSUQwZ01Dd2daV1VnUFNCMFpURXViR1Z1WjNSb095QlNJRHdnWldVN0lGSXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VTQTlJRzR1WjJWMEtIUmxNVnRTWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCUkxsOWZkMlZpWjJ4VVpYaDBkWEpsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRkV1WDE5M1pXSm5iRlJsZUhSMWNtVWdQU0J6TG1OeVpXRjBaVlJsZUhSMWNtVW9LU3dnYnk1dFpXMXZjbmt1ZEdWNGRIVnlaWE1yS3lrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlhaV0pIVEUxMWJIUnBjR3hsVW1WdVpHVnlWR0Z5WjJWMGN5QmpZVzRnYjI1c2VTQmlaU0IxYzJWa0lIZHBkR2dnVjJWaVIwd3lJRzl5SUZkRlFrZE1YMlJ5WVhkZlluVm1abVZ5Y3lCbGVIUmxibk5wYjI0dUlpazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9ReTUxYzJWU1pXNWtaWEppZFdabVpYSXBJR2xtSUNoaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVvdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlJRDBnY3k1amNtVmhkR1ZHY21GdFpXSjFabVpsY2lncExDQktMbDlmZDJWaVoyeERiMnh2Y2xKbGJtUmxjbUoxWm1abGNpQTlJSE11WTNKbFlYUmxVbVZ1WkdWeVluVm1abVZ5S0Nrc0lITXVZbWx1WkZKbGJtUmxjbUoxWm1abGNpZ3pOakUyTVN3Z1NpNWZYM2RsWW1kc1EyOXNiM0pTWlc1a1pYSmlkV1ptWlhJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RHVXlJRDBnY2k1amIyNTJaWEowS0ZRdVptOXliV0YwS1N3Z1VqRWdQU0J5TG1OdmJuWmxjblFvVkM1MGVYQmxLU3dnWldVeElEMGdUQ2hVTG1sdWRHVnlibUZzUm05eWJXRjBMQ0IwWlRJc0lGSXhMQ0JVTG1WdVkyOWthVzVuS1N3Z1VURWdQU0IxWlNoREtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVW9Nell4TmpFc0lGRXhMQ0JsWlRFc0lFTXVkMmxrZEdnc0lFTXVhR1ZwWjJoMEtTd2dkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell4TmpBc0lFb3VYMTkzWldKbmJFMTFiSFJwYzJGdGNHeGxaRVp5WVcxbFluVm1abVZ5S1N3Z2N5NW1jbUZ0WldKMVptWmxjbEpsYm1SbGNtSjFabVpsY2lnek5qRTJNQ3dnTXpZd05qUXNJRE0yTVRZeExDQktMbDlmZDJWaVoyeERiMnh2Y2xKbGJtUmxjbUoxWm1abGNpa3NJSE11WW1sdVpGSmxibVJsY21KMVptWmxjaWd6TmpFMk1Td2diblZzYkNrc0lFTXVaR1Z3ZEdoQ2RXWm1aWElnSmlZZ0tFb3VYMTkzWldKbmJFUmxjSFJvVW1WdVpHVnlZblZtWm1WeUlEMGdjeTVqY21WaGRHVlNaVzVrWlhKaWRXWm1aWElvS1N3Z2VXVW9TaTVmWDNkbFltZHNSR1Z3ZEdoU1pXNWtaWEppZFdabVpYSXNJRU1zSUNFd0tTa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQnVkV3hzS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJYWldKSFRFMTFiSFJwYzJGdGNHeGxVbVZ1WkdWeVZHRnlaMlYwSUdOaGJpQnZibXg1SUdKbElIVnpaV1FnZDJsMGFDQlhaV0pIVERJdUlpazdDaUFnSUNBZ0lDQWdhV1lnS0hKbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhRdVltbHVaRlJsZUhSMWNtVW9NelF3Tmpjc0lDUXVYMTkzWldKbmJGUmxlSFIxY21VcExDQnNaU2d6TkRBMk55d2dWQ3dnZG1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFJsTXlBOUlEQTdJSFJsTXlBOElEWTdJSFJsTXlzcktVTmxLRW91WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5VzNSbE0xMHNJRU1zSUZRc0lETTJNRFkwTENBek5EQTJPU0FySUhSbE15azdDaUFnSUNBZ0lDQWdJQ0FnSUdJb1ZDd2dkbVVwSUNZbUlFRW9NelF3TmpjcExDQjBMblZ1WW1sdVpGUmxlSFIxY21Vb0tUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRm9wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhSbE5DQTlJRU11ZEdWNGRIVnlaVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCU01pQTlJREFzSUdWbE1pQTlJSFJsTkM1c1pXNW5kR2c3SUZJeUlEd2daV1V5T3lCU01pc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUk1pQTlJSFJsTkZ0U01sMHNJRVZsSUQwZ2JpNW5aWFFvVVRJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDNWlhVzVrVkdWNGRIVnlaU2d6TlRVekxDQkZaUzVmWDNkbFltZHNWR1Y0ZEhWeVpTa3NJR3hsS0RNMU5UTXNJRkV5TENCMlpTa3NJRU5sS0VvdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUxDQkRMQ0JSTWl3Z016WXdOalFnS3lCU01pd2dNelUxTXlrc0lHSW9VVElzSUhabEtTQW1KaUJCS0RNMU5UTXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFF1ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBaVFVnUFNBek5UVXpPd29nSUNBZ0lDQWdJQ0FnSUNCTlpTQW1KaUFvWVNBL0lIUmxOU0E5SUZRdWFYTkVZWFJoVkdWNGRIVnlaVE5FSUQ4Z016STROemtnT2lBek5UZzJOaUE2SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJHRjBZVlJsZUhSMWNtVXpSQ0JoYm1RZ1ZFaFNSVVV1UkdGMFlWUmxlSFIxY21VeVJFRnljbUY1SUc5dWJIa2djM1Z3Y0c5eWRHVmtJSGRwZEdnZ1YyVmlSMHd5TGlJcEtTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNoMFpUVXNJQ1F1WDE5M1pXSm5iRlJsZUhSMWNtVXBMQ0JzWlNoMFpUVXNJRlFzSUhabEtTd2dRMlVvU2k1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhJc0lFTXNJRlFzSURNMk1EWTBMQ0IwWlRVcExDQmlLRlFzSUhabEtTQW1KaUJCS0hSbE5Ta3NJSFF1ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JETG1SbGNIUm9RblZtWm1WeUlDWW1JSGhsS0VNcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhaWhES1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlFnUFNCZktFTXBJSHg4SUdFc0lFb2dQU0JETG1selYyVmlSMHhOZFd4MGFYQnNaVkpsYm1SbGNsUmhjbWRsZEhNZ1BUMDlJQ0V3SUQ4Z1F5NTBaWGgwZFhKbElEb2dXd29nSUNBZ0lDQWdJQ0FnSUNCRExuUmxlSFIxY21VS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ0pDQTlJREFzSUhKbElEMGdTaTVzWlc1bmRHZzdJQ1FnUENCeVpUc2dKQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZvZ1BTQktXeVJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWWloYUxDQlVLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFMWxJRDBnUXk1cGMxZGxZa2RNUTNWaVpWSmxibVJsY2xSaGNtZGxkQ0EvSURNME1EWTNJRG9nTXpVMU15d2dkbVVnUFNCdUxtZGxkQ2hhS1M1ZlgzZGxZbWRzVkdWNGRIVnlaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFF1WW1sdVpGUmxlSFIxY21Vb1RXVXNJSFpsS1N3Z1FTaE5aU2tzSUhRdWRXNWlhVzVrVkdWNGRIVnlaU2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnU3loREtTQjdDaUFnSUNBZ0lDQWdhV1lnS0VNdWRYTmxVbVZ1WkdWeVluVm1abVZ5S1NCcFppQW9ZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlFTXVkMmxrZEdnc0lFb2dQU0JETG1obGFXZG9kQ3dnSkNBOUlERTJNemcwTENCeVpTQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRE0yTURZMENpQWdJQ0FnSUNBZ0lDQWdJRjBzSUZvZ1BTQkRMbk4wWlc1amFXeENkV1ptWlhJZ1B5QXpNek13TmlBNklETTJNRGsyT3dvZ0lDQWdJQ0FnSUNBZ0lDQkRMbVJsY0hSb1FuVm1abVZ5SUNZbUlISmxMbkIxYzJnb1dpa3NJRU11YVdkdWIzSmxSR1Z3ZEdoR2IzSk5kV3gwYVhOaGJYQnNaVU52Y0hrZ2ZId2dLRU11WkdWd2RHaENkV1ptWlhJZ0ppWWdLQ1FnZkQwZ01qVTJLU3dnUXk1emRHVnVZMmxzUW5WbVptVnlJQ1ltSUNna0lIdzlJREV3TWpRcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFMWxJRDBnYmk1blpYUW9ReWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNREE0TENCTlpTNWZYM2RsWW1kc1RYVnNkR2x6WVcxd2JHVmtSbkpoYldWaWRXWm1aWElwTENCMExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qQXdPU3dnVFdVdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUtTd2dReTVwWjI1dmNtVkVaWEIwYUVadmNrMTFiSFJwYzJGdGNHeGxRMjl3ZVNBbUppQW9jeTVwYm5aaGJHbGtZWFJsUm5KaGJXVmlkV1ptWlhJb016WXdNRGdzSUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZvS0lDQWdJQ0FnSUNBZ0lDQWdYU2tzSUhNdWFXNTJZV3hwWkdGMFpVWnlZVzFsWW5WbVptVnlLRE0yTURBNUxDQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmFDaUFnSUNBZ0lDQWdJQ0FnSUYwcEtTd2djeTVpYkdsMFJuSmhiV1ZpZFdabVpYSW9NQ3dnTUN3Z1ZDd2dTaXdnTUN3Z01Dd2dWQ3dnU2l3Z0pDd2dPVGN5T0Nrc0lITXVhVzUyWVd4cFpHRjBaVVp5WVcxbFluVm1abVZ5S0RNMk1EQTRMQ0J5WlNrc0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNREE0TENCdWRXeHNLU3dnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZd01Ea3NJRTFsTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpazdDaUFnSUNBZ0lDQWdmU0JsYkhObElHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1YyVmlSMHhOZFd4MGFYTmhiWEJzWlZKbGJtUmxjbFJoY21kbGRDQmpZVzRnYjI1c2VTQmlaU0IxYzJWa0lIZHBkR2dnVjJWaVIwd3lMaUlwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RXVW9ReWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoSUNZbUlDaERMblZ6WlZKbGJtUmxjbUoxWm1abGNpQjhmQ0JETG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNrZ1B5Qk5ZWFJvTG0xcGJpaDFMQ0JETG5OaGJYQnNaWE1wSURvZ01Ec0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSE5sS0VNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlHOHVjbVZ1WkdWeUxtWnlZVzFsT3dvZ0lDQWdJQ0FnSUcwdVoyVjBLRU1wSUNFOVBTQlVJQ1ltSUNodExuTmxkQ2hETENCVUtTd2dReTUxY0dSaGRHVW9LU2s3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdVMlVnUFNBaE1Td2dWR1VnUFNBaE1Uc0tJQ0FnSUdaMWJtTjBhVzl1SUZCbEtFTXNJRlFwSUhzS0lDQWdJQ0FnSUNCRElDWW1JRU11YVhOWFpXSkhURkpsYm1SbGNsUmhjbWRsZENBbUppQW9VMlVnUFQwOUlDRXhJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVkdWNGRIVnlaWE11YzJGbVpWTmxkRlJsZUhSMWNtVXlSRG9nWkc5dUozUWdkWE5sSUhKbGJtUmxjaUIwWVhKblpYUnpJR0Z6SUhSbGVIUjFjbVZ6TGlCVmMyVWdkR2hsYVhJZ0xuUmxlSFIxY21VZ2NISnZjR1Z5ZEhrZ2FXNXpkR1ZoWkM0aUtTd2dVMlVnUFNBaE1Da3NJRU1nUFNCRExuUmxlSFIxY21VcExDQlBLRU1zSUZRcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdXV1VvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJRU1nSmlZZ1F5NXBjMWRsWWtkTVEzVmlaVkpsYm1SbGNsUmhjbWRsZENBbUppQW9WR1VnUFQwOUlDRXhJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVkdWNGRIVnlaWE11YzJGbVpWTmxkRlJsZUhSMWNtVkRkV0psT2lCa2IyNG5kQ0IxYzJVZ1kzVmlaU0J5Wlc1a1pYSWdkR0Z5WjJWMGN5QmhjeUIwWlhoMGRYSmxjeTRnVlhObElIUm9aV2x5SUM1MFpYaDBkWEpsSUhCeWIzQmxjblI1SUdsdWMzUmxZV1F1SWlrc0lGUmxJRDBnSVRBcExDQkRJRDBnUXk1MFpYaDBkWEpsS1N3Z1ZpaERMQ0JVS1RzS0lDQWdJSDBLSUNBZ0lIUm9hWE11WVd4c2IyTmhkR1ZVWlhoMGRYSmxWVzVwZENBOUlFWXNJSFJvYVhNdWNtVnpaWFJVWlhoMGRYSmxWVzVwZEhNZ1BTQlZMQ0IwYUdsekxuTmxkRlJsZUhSMWNtVXlSQ0E5SUU4c0lIUm9hWE11YzJWMFZHVjRkSFZ5WlRKRVFYSnlZWGtnUFNCdVpTd2dkR2hwY3k1elpYUlVaWGgwZFhKbE0wUWdQU0JqWlN3Z2RHaHBjeTV6WlhSVVpYaDBkWEpsUTNWaVpTQTlJRllzSUhSb2FYTXVjbVZpYVc1a1ZHVjRkSFZ5WlhNZ1BTQlBaU3dnZEdocGN5NXpaWFIxY0ZKbGJtUmxjbFJoY21kbGRDQTlJRWNzSUhSb2FYTXVkWEJrWVhSbFVtVnVaR1Z5VkdGeVoyVjBUV2x3YldGd0lEMGdhaXdnZEdocGN5NTFjR1JoZEdWTmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkQ0E5SUVzc0lIUm9hWE11YzJWMGRYQkVaWEIwYUZKbGJtUmxjbUoxWm1abGNpQTlJSGhsTENCMGFHbHpMbk5sZEhWd1JuSmhiV1ZDZFdabVpYSlVaWGgwZFhKbElEMGdRMlVzSUhSb2FYTXVjMkZtWlZObGRGUmxlSFIxY21VeVJDQTlJRkJsTENCMGFHbHpMbk5oWm1WVFpYUlVaWGgwZFhKbFEzVmlaU0E5SUZsbE93cDlDbVoxYm1OMGFXOXVJRVY0S0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdkQzVwYzFkbFlrZE1NanNLSUNBZ0lHWjFibU4wYVc5dUlHa29jaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnZPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0J5YmlrZ2NtVjBkWEp1SURVeE1qRTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRloxS1NCeVpYUjFjbTRnTXpJNE1UazdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRmQxS1NCeVpYUjFjbTRnTXpJNE1qQTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJSEYxS1NCeVpYUjFjbTRnTXpNMk16VTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRWgxS1NCeVpYUjFjbTRnTlRFeU1Ec0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdhM1VwSUhKbGRIVnliaUExTVRJeU93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQmpjaWtnY21WMGRYSnVJRFV4TWpNN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlFZDFLU0J5WlhSMWNtNGdOVEV5TkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1VITXBJSEpsZEhWeWJpQTFNVEkxT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCdWJpa2djbVYwZFhKdUlEVXhNalk3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUd0dUtTQnlaWFIxY200Z2JpQS9JRFV4TXpFZ09pQW9ieUE5SUdVdVoyVjBLQ0pQUlZOZmRHVjRkSFZ5WlY5b1lXeG1YMlpzYjJGMElpa3NJRzhnSVQwOUlHNTFiR3dnUHlCdkxraEJURVpmUmt4UFFWUmZUMFZUSURvZ2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZoMUtTQnlaWFIxY200Z05qUXdOanNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnUjI0cElISmxkSFZ5YmlBMk5EQTNPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JqZENrZ2NtVjBkWEp1SURZME1EZzdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRXAxS1NCeVpYUjFjbTRnTmpRd09Uc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdXWFVwSUhKbGRIVnliaUEyTkRFd093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQldiaWtnY21WMGRYSnVJRFkwTURJN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlFeHBLU0J5WlhSMWNtNGdNelF3TkRFN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlGcDFLU0J5WlhSMWNtNGdOalF3TXpzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ0pIVXBJSEpsZEhWeWJpQXpOakkwTkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2FuVXBJSEpsZEhWeWJpQXpNek14T1RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1VYVXBJSEpsZEhWeWJpQXpNek15TURzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1MzVXBJSEpsZEhWeWJpQXpOakkwT0RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1pXUXBJSEpsZEhWeWJpQXpOakkwT1RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1lXd2dmSHdnY2lBOVBUMGdiR3dnZkh3Z2NpQTlQVDBnWTJ3Z2ZId2djaUE5UFQwZ2FHd3BJR2xtSUNodklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJaWtzSUc4Z0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUdGc0tTQnlaWFIxY200Z2J5NURUMDFRVWtWVFUwVkVYMUpIUWw5VE0xUkRYMFJZVkRGZlJWaFVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2JHd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOVRNMVJEWDBSWVZERmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdZMndwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlUTTFSRFgwUllWRE5mUlZoVU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnYUd3cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5VE0xUkRYMFJZVkRWZlJWaFVPd29nSUNBZ0lDQWdJSDBnWld4elpTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZFd3Z2ZId2djaUE5UFQwZ1pHd2dmSHdnY2lBOVBUMGdabXdnZkh3Z2NpQTlQVDBnY0d3cElHbG1JQ2h2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl3ZG5KMFl5SXBMQ0J2SUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0IxYkNrZ2NtVjBkWEp1SUc4dVEwOU5VRkpGVTFORlJGOVNSMEpmVUZaU1ZFTmZORUpRVUZZeFgwbE5SenNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHUnNLU0J5WlhSMWNtNGdieTVEVDAxUVVrVlRVMFZFWDFKSFFsOVFWbEpVUTE4eVFsQlFWakZmU1UxSE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWm13cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5UVZsSlVRMTgwUWxCUVZqRmZTVTFIT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdjR3dwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlRVmxKVVExOHlRbEJRVmpGZlNVMUhPd29nSUNBZ0lDQWdJSDBnWld4elpTQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZEdRcElISmxkSFZ5YmlCdklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5bGRHTXhJaWtzSUc4Z0lUMDlJRzUxYkd3Z1B5QnZMa05QVFZCU1JWTlRSVVJmVWtkQ1gwVlVRekZmVjBWQ1Iwd2dPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2dvY2lBOVBUMGdiV3dnZkh3Z2NpQTlQVDBnWjJ3cElDWW1JQ2h2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjlsZEdNaUtTd2dieUFoUFQwZ2JuVnNiQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRzFzS1NCeVpYUjFjbTRnYnk1RFQwMVFVa1ZUVTBWRVgxSkhRamhmUlZSRE1qc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUdkc0tTQnlaWFIxY200Z2J5NURUMDFRVWtWVFUwVkVYMUpIUWtFNFgwVlVRekpmUlVGRE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdibVFnZkh3Z2NpQTlQVDBnYVdRZ2ZId2djaUE5UFQwZ2NtUWdmSHdnY2lBOVBUMGdjMlFnZkh3Z2NpQTlQVDBnYjJRZ2ZId2djaUE5UFQwZ1lXUWdmSHdnY2lBOVBUMGdiR1FnZkh3Z2NpQTlQVDBnWTJRZ2ZId2djaUE5UFQwZ2FHUWdmSHdnY2lBOVBUMGdkV1FnZkh3Z2NpQTlQVDBnWkdRZ2ZId2djaUE5UFQwZ1ptUWdmSHdnY2lBOVBUMGdjR1FnZkh3Z2NpQTlQVDBnYldRZ2ZId2djaUE5UFQwZ2VHUWdmSHdnY2lBOVBUMGdlV1FnZkh3Z2NpQTlQVDBnZG1RZ2ZId2djaUE5UFQwZ1gyUWdmSHdnY2lBOVBUMGdUV1FnZkh3Z2NpQTlQVDBnWW1RZ2ZId2djaUE5UFQwZ2QyUWdmSHdnY2lBOVBUMGdVMlFnZkh3Z2NpQTlQVDBnVkdRZ2ZId2djaUE5UFQwZ1JXUWdmSHdnY2lBOVBUMGdRV1FnZkh3Z2NpQTlQVDBnUTJRZ2ZId2djaUE5UFQwZ1RHUWdmSHdnY2lBOVBUMGdVbVFwSUhKbGRIVnliaUJ2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjloYzNSaklpa3NJRzhnSVQwOUlHNTFiR3dnUHlCeUlEb2diblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1oyUXBJSEpsZEhWeWJpQnZJRDBnWlM1blpYUW9Ja1ZZVkY5MFpYaDBkWEpsWDJOdmJYQnlaWE56YVc5dVgySndkR01pS1N3Z2J5QWhQVDBnYm5Wc2JDQS9JSElnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JVYVNrZ2NtVjBkWEp1SUc0Z1B5QXpOREEwTWlBNklDaHZJRDBnWlM1blpYUW9JbGRGUWtkTVgyUmxjSFJvWDNSbGVIUjFjbVVpS1N3Z2J5QWhQVDBnYm5Wc2JDQS9JRzh1VlU1VFNVZE9SVVJmU1U1VVh6STBYemhmVjBWQ1Iwd2dPaUJ1ZFd4c0tUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdZMjl1ZG1WeWREb2dhUW9nSUNBZ2ZUc0tmUXAyWVhJZ1oyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklIVjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYlhTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJXVnlZWE1nUFNCbE93b2dJQ0FnZlFwOU93cG5ZUzV3Y205MGIzUjVjR1V1YVhOQmNuSmhlVU5oYldWeVlTQTlJQ0V3T3dwMllYSWdTRzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlSM0p2ZFhBaU93b2dJQ0FnZlFwOU93cEliaTV3Y205MGIzUjVjR1V1YVhOSGNtOTFjQ0E5SUNFd093cDJZWElnUVhnZ1BTQjdDaUFnSUNCMGVYQmxPaUFpYlc5MlpTSUtmU3dnU1hNZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lIUm9hWE11WDNSaGNtZGxkRkpoZVNBOUlHNTFiR3dzSUhSb2FYTXVYMmR5YVhBZ1BTQnVkV3hzTENCMGFHbHpMbDlvWVc1a0lEMGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRWhoYm1SVGNHRmpaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZhR0Z1WkNBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZmFHRnVaQ0E5SUc1bGR5QkliaXdnZEdocGN5NWZhR0Z1WkM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVgyaGhibVF1ZG1semFXSnNaU0E5SUNFeExDQjBhR2x6TGw5b1lXNWtMbXB2YVc1MGN5QTlJSHQ5TENCMGFHbHpMbDlvWVc1a0xtbHVjSFYwVTNSaGRHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnBibU5vYVc1bk9pQWhNUW9nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbDlvWVc1a093b2dJQ0FnZlFvZ0lDQWdaMlYwVkdGeVoyVjBVbUY1VTNCaFkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzUmhjbWRsZEZKaGVTQTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZkR0Z5WjJWMFVtRjVJRDBnYm1WM0lFaHVMQ0IwYUdsekxsOTBZWEpuWlhSU1lYa3ViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMbDkwWVhKblpYUlNZWGt1ZG1semFXSnNaU0E5SUNFeExDQjBhR2x6TGw5MFlYSm5aWFJTWVhrdWFHRnpUR2x1WldGeVZtVnNiMk5wZEhrZ1BTQWhNU3dnZEdocGN5NWZkR0Z5WjJWMFVtRjVMbXhwYm1WaGNsWmxiRzlqYVhSNUlEMGdibVYzSUUwc0lIUm9hWE11WDNSaGNtZGxkRkpoZVM1b1lYTkJibWQxYkdGeVZtVnNiMk5wZEhrZ1BTQWhNU3dnZEdocGN5NWZkR0Z5WjJWMFVtRjVMbUZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJRzVsZHlCTktTd2dkR2hwY3k1ZmRHRnlaMlYwVW1GNU93b2dJQ0FnZlFvZ0lDQWdaMlYwUjNKcGNGTndZV05sS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDluY21sd0lEMDlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOW5jbWx3SUQwZ2JtVjNJRWh1TENCMGFHbHpMbDluY21sd0xtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWZaM0pwY0M1MmFYTnBZbXhsSUQwZ0lURXNJSFJvYVhNdVgyZHlhWEF1YUdGelRHbHVaV0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Td2dkR2hwY3k1ZlozSnBjQzVzYVc1bFlYSldaV3h2WTJsMGVTQTlJRzVsZHlCTkxDQjBhR2x6TGw5bmNtbHdMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFeExDQjBhR2x6TGw5bmNtbHdMbUZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJRzVsZHlCTktTd2dkR2hwY3k1ZlozSnBjRHNLSUNBZ0lIMEtJQ0FnSUdScGMzQmhkR05vUlhabGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTBZWEpuWlhSU1lYa2dJVDA5SUc1MWJHd2dKaVlnZEdocGN5NWZkR0Z5WjJWMFVtRjVMbVJwYzNCaGRHTm9SWFpsYm5Rb1pTa3NJSFJvYVhNdVgyZHlhWEFnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVmWjNKcGNDNWthWE53WVhSamFFVjJaVzUwS0dVcExDQjBhR2x6TGw5b1lXNWtJQ0U5UFNCdWRXeHNJQ1ltSUhSb2FYTXVYMmhoYm1RdVpHbHpjR0YwWTJoRmRtVnVkQ2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGMyTnZibTVsWTNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdselkyOXVibVZqZEdWa0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2daUW9nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbDkwWVhKblpYUlNZWGtnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDNSaGNtZGxkRkpoZVM1MmFYTnBZbXhsSUQwZ0lURXBMQ0IwYUdsekxsOW5jbWx3SUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5bmNtbHdMblpwYzJsaWJHVWdQU0FoTVNrc0lIUm9hWE11WDJoaGJtUWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMmhoYm1RdWRtbHphV0pzWlNBOUlDRXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVkV3hzTENCeUlEMGdiblZzYkN3Z2J5QTlJRzUxYkd3c0lHRWdQU0IwYUdsekxsOTBZWEpuWlhSU1lYa3NJR3dnUFNCMGFHbHpMbDluY21sd0xDQmpJRDBnZEdocGN5NWZhR0Z1WkRzS0lDQWdJQ0FnSUNCcFppQW9aU0FtSmlCMExuTmxjM05wYjI0dWRtbHphV0pwYkdsMGVWTjBZWFJsSUNFOVBTQWlkbWx6YVdKc1pTMWliSFZ5Y21Wa0lpa2dhV1lnS0dFZ0lUMDlJRzUxYkd3Z0ppWWdLR2tnUFNCMExtZGxkRkJ2YzJVb1pTNTBZWEpuWlhSU1lYbFRjR0ZqWlN3Z2Jpa3NJR2tnSVQwOUlHNTFiR3dnSmlZZ0tHRXViV0YwY21sNExtWnliMjFCY25KaGVTaHBMblJ5WVc1elptOXliUzV0WVhSeWFYZ3BMQ0JoTG0xaGRISnBlQzVrWldOdmJYQnZjMlVvWVM1d2IzTnBkR2x2Yml3Z1lTNXliM1JoZEdsdmJpd2dZUzV6WTJGc1pTa3NJR2t1YkdsdVpXRnlWbVZzYjJOcGRIa2dQeUFvWVM1b1lYTk1hVzVsWVhKV1pXeHZZMmwwZVNBOUlDRXdMQ0JoTG14cGJtVmhjbFpsYkc5amFYUjVMbU52Y0hrb2FTNXNhVzVsWVhKV1pXeHZZMmwwZVNrcElEb2dZUzVvWVhOTWFXNWxZWEpXWld4dlkybDBlU0E5SUNFeExDQnBMbUZ1WjNWc1lYSldaV3h2WTJsMGVTQS9JQ2hoTG1oaGMwRnVaM1ZzWVhKV1pXeHZZMmwwZVNBOUlDRXdMQ0JoTG1GdVozVnNZWEpXWld4dlkybDBlUzVqYjNCNUtHa3VZVzVuZFd4aGNsWmxiRzlqYVhSNUtTa2dPaUJoTG1oaGMwRnVaM1ZzWVhKV1pXeHZZMmwwZVNBOUlDRXhMQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvUVhncEtTa3NJR01nSmlZZ1pTNW9ZVzVrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaHNaWFFnZUNCdlppQmxMbWhoYm1RdWRtRnNkV1Z6S0NrcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCMExtZGxkRXB2YVc1MFVHOXpaU2g0TENCdUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqTG1wdmFXNTBjMXQ0TG1wdmFXNTBUbUZ0WlYwZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnYm1WM0lFaHVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhBdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0J3TG5acGMybGliR1VnUFNBaE1Td2dZeTVxYjJsdWRITmJlQzVxYjJsdWRFNWhiV1ZkSUQwZ2NDd2dZeTVoWkdRb2NDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHTXVhbTlwYm5SelczZ3VhbTlwYm5ST1lXMWxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFlnSVQwOUlHNTFiR3dnSmlZZ0tHY3ViV0YwY21sNExtWnliMjFCY25KaGVTaDJMblJ5WVc1elptOXliUzV0WVhSeWFYZ3BMQ0JuTG0xaGRISnBlQzVrWldOdmJYQnZjMlVvWnk1d2IzTnBkR2x2Yml3Z1p5NXliM1JoZEdsdmJpd2daeTV6WTJGc1pTa3NJR2N1YW05cGJuUlNZV1JwZFhNZ1BTQjJMbkpoWkdsMWN5a3NJR2N1ZG1semFXSnNaU0E5SUhZZ0lUMDlJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCakxtcHZhVzUwYzFzaWFXNWtaWGd0Wm1sdVoyVnlMWFJwY0NKZExDQjFJRDBnWXk1cWIybHVkSE5iSW5Sb2RXMWlMWFJwY0NKZExDQmtJRDBnYUM1d2IzTnBkR2x2Ymk1a2FYTjBZVzVqWlZSdktIVXVjRzl6YVhScGIyNHBMQ0JtSUQwZ0xqQXlMQ0J0SUQwZ0xqQXdOVHNLSUNBZ0lDQWdJQ0FnSUNBZ1l5NXBibkIxZEZOMFlYUmxMbkJwYm1Ob2FXNW5JQ1ltSUdRZ1BpQm1JQ3NnYlNBL0lDaGpMbWx1Y0hWMFUzUmhkR1V1Y0dsdVkyaHBibWNnUFNBaE1Td2dkR2hwY3k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSndhVzVqYUdWdVpDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZVzVrWldSdVpYTnpPaUJsTG1oaGJtUmxaRzVsYzNNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFlYSm5aWFE2SUhSb2FYTUtJQ0FnSUNBZ0lDQWdJQ0FnZlNrcElEb2dJV011YVc1d2RYUlRkR0YwWlM1d2FXNWphR2x1WnlBbUppQmtJRHc5SUdZZ0xTQnRJQ1ltSUNoakxtbHVjSFYwVTNSaGRHVXVjR2x1WTJocGJtY2dQU0FoTUN3Z2RHaHBjeTVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKd2FXNWphSE4wWVhKMElpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGhibVJsWkc1bGMzTTZJR1V1YUdGdVpHVmtibVZ6Y3l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSaGNtZGxkRG9nZEdocGN3b2dJQ0FnSUNBZ0lDQWdJQ0I5S1NrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUd3Z0lUMDlJRzUxYkd3Z0ppWWdaUzVuY21sd1UzQmhZMlVnSmlZZ0tISWdQU0IwTG1kbGRGQnZjMlVvWlM1bmNtbHdVM0JoWTJVc0lHNHBMQ0J5SUNFOVBTQnVkV3hzSUNZbUlDaHNMbTFoZEhKcGVDNW1jbTl0UVhKeVlYa29jaTUwY21GdWMyWnZjbTB1YldGMGNtbDRLU3dnYkM1dFlYUnlhWGd1WkdWamIyMXdiM05sS0d3dWNHOXphWFJwYjI0c0lHd3VjbTkwWVhScGIyNHNJR3d1YzJOaGJHVXBMQ0J5TG14cGJtVmhjbFpsYkc5amFYUjVJRDhnS0d3dWFHRnpUR2x1WldGeVZtVnNiMk5wZEhrZ1BTQWhNQ3dnYkM1c2FXNWxZWEpXWld4dlkybDBlUzVqYjNCNUtISXViR2x1WldGeVZtVnNiMk5wZEhrcEtTQTZJR3d1YUdGelRHbHVaV0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Td2djaTVoYm1kMWJHRnlWbVZzYjJOcGRIa2dQeUFvYkM1b1lYTkJibWQxYkdGeVZtVnNiMk5wZEhrZ1BTQWhNQ3dnYkM1aGJtZDFiR0Z5Vm1Wc2IyTnBkSGt1WTI5d2VTaHlMbUZ1WjNWc1lYSldaV3h2WTJsMGVTa3BJRG9nYkM1b1lYTkJibWQxYkdGeVZtVnNiMk5wZEhrZ1BTQWhNU2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoSUNFOVBTQnVkV3hzSUNZbUlDaGhMblpwYzJsaWJHVWdQU0JwSUNFOVBTQnVkV3hzS1N3Z2JDQWhQVDBnYm5Wc2JDQW1KaUFvYkM1MmFYTnBZbXhsSUQwZ2NpQWhQVDBnYm5Wc2JDa3NJR01nSVQwOUlHNTFiR3dnSmlZZ0tHTXVkbWx6YVdKc1pTQTlJRzhnSVQwOUlHNTFiR3dwTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0JyY3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXl3Z2FDbDdDaUFnSUNBZ0lDQWdhV1lnS0dnZ1BTQm9JQ0U5UFNCMmIybGtJREFnUHlCb0lEb2dWbTRzSUdnZ0lUMDlJRlp1SUNZbUlHZ2dJVDA5SUV4cEtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lrUmxjSFJvVkdWNGRIVnlaU0JtYjNKdFlYUWdiWFZ6ZENCaVpTQmxhWFJvWlhJZ1ZFaFNSVVV1UkdWd2RHaEdiM0p0WVhRZ2IzSWdWRWhTUlVVdVJHVndkR2hUZEdWdVkybHNSbTl5YldGMElpazdDaUFnSUNBZ0lDQWdiaUE5UFQwZ2RtOXBaQ0F3SUNZbUlHZ2dQVDA5SUZadUlDWW1JQ2h1SUQwZ1kzSXBMQ0J1SUQwOVBTQjJiMmxrSURBZ0ppWWdhQ0E5UFQwZ1RHa2dKaVlnS0c0Z1BTQlVhU2s3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9iblZzYkN3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnYUN3Z2Jpd2dZeWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBiV0ZuWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2RBb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWJXRm5SbWxzZEdWeUlEMGdZU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1lTQTZJSEowTENCMGFHbHpMbTFwYmtacGJIUmxjaUE5SUd3Z0lUMDlJSFp2YVdRZ01DQS9JR3dnT2lCeWRDd2dkR2hwY3k1bWJHbHdXU0E5SUNFeExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFeE93b2dJQ0FnZlFwOU93cHJjeTV3Y205MGIzUjVjR1V1YVhORVpYQjBhRlJsZUhSMWNtVWdQU0FoTURzS2RtRnlJSFpvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3l3Z2FTQTlJRzUxYkd3c0lISWdQU0F4TENCdklEMGdiblZzYkN3Z1lTQTlJQ0pzYjJOaGJDMW1iRzl2Y2lJc0lHd2dQU0JsTG1WNGRHVnVjMmx2Ym5NdWFHRnpLQ0pYUlVKSFRGOXRkV3gwYVhOaGJYQnNaV1JmY21WdVpHVnlYM1J2WDNSbGVIUjFjbVVpS1N3Z1l5QTlJRzUxYkd3c0lHZ2dQU0J1ZFd4c0xDQjFJRDBnYm5Wc2JDd2daQ0E5SUc1MWJHd3NJR1lnUFNBaE1Td2diU0E5SUc1MWJHd3NJSGdnUFNCMExtZGxkRU52Ym5SbGVIUkJkSFJ5YVdKMWRHVnpLQ2tzSUhZZ1BTQnVkV3hzTENCbklEMGdiblZzYkN3Z2NDQTlJRnRkTENCZklEMGdibVYzSUUxaGNDd2dlU0E5SUc1bGR5QjFkRHNLSUNBZ0lDQWdJQ0I1TG14aGVXVnljeTVsYm1GaWJHVW9NU2tzSUhrdWRtbGxkM0J2Y25RZ1BTQnVaWGNnVm1VN0NpQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCdVpYY2dkWFE3Q2lBZ0lDQWdJQ0FnWWk1c1lYbGxjbk11Wlc1aFlteGxLRElwTENCaUxuWnBaWGR3YjNKMElEMGdibVYzSUZabE93b2dJQ0FnSUNBZ0lHeGxkQ0JCSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQmlDaUFnSUNBZ0lDQWdYU3dnVENBOUlHNWxkeUJuWVRzS0lDQWdJQ0FnSUNCTUxteGhlV1Z5Y3k1bGJtRmliR1VvTVNrc0lFd3ViR0Y1WlhKekxtVnVZV0pzWlNneUtUc0tJQ0FnSUNBZ0lDQnNaWFFnU1NBOUlHNTFiR3dzSUdzZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUhSb2FYTXVZMkZ0WlhKaFFYVjBiMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpMbVZ1WVdKc1pXUWdQU0FoTVN3Z2RHaHBjeTVwYzFCeVpYTmxiblJwYm1jZ1BTQWhNU3dnZEdocGN5NW5aWFJEYjI1MGNtOXNiR1Z5SUQwZ1puVnVZM1JwYjI0b1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUhCYlZsMDdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJYSUQwOVBTQjJiMmxrSURBZ0ppWWdLRmNnUFNCdVpYY2dTWE1zSUhCYlZsMGdQU0JYS1N3Z1Z5NW5aWFJVWVhKblpYUlNZWGxUY0dGalpTZ3BPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwUTI5dWRISnZiR3hsY2tkeWFYQWdQU0JtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWElEMGdjRnRXWFRzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGY2dQVDA5SUhadmFXUWdNQ0FtSmlBb1Z5QTlJRzVsZHlCSmN5d2djRnRXWFNBOUlGY3BMQ0JYTG1kbGRFZHlhWEJUY0dGalpTZ3BPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwU0dGdVpDQTlJR1oxYm1OMGFXOXVLRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZjZ1BTQndXMVpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1Z5QTlQVDBnZG05cFpDQXdJQ1ltSUNoWElEMGdibVYzSUVsekxDQndXMVpkSUQwZ1Z5a3NJRmN1WjJWMFNHRnVaRk53WVdObEtDazdDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJDS0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGY2dQU0JmTG1kbGRDaFdMbWx1Y0hWMFUyOTFjbU5sS1RzS0lDQWdJQ0FnSUNBZ0lDQWdWeUFtSmlCWExtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dWaTUwZVhCbExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nVmk1cGJuQjFkRk52ZFhKalpRb2dJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1VDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1h5NW1iM0pGWVdOb0tHWjFibU4wYVc5dUtGWXNJRmNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZZdVpHbHpZMjl1Ym1WamRDaFhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NJRjh1WTJ4bFlYSW9LU3dnU1NBOUlHNTFiR3dzSUdzZ1BTQnVkV3hzTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENoMktTd2daQ0E5SUc1MWJHd3NJSFVnUFNCdWRXeHNMQ0JvSUQwZ2JuVnNiQ3dnYVNBOUlHNTFiR3dzSUdjZ1BTQnVkV3hzTENCalpTNXpkRzl3S0Nrc0lHNHVhWE5RY21WelpXNTBhVzVuSUQwZ0lURXNJRzR1WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWMyVnpjMmx2Ym1WdVpDSUtJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11YzJWMFJuSmhiV1ZpZFdabVpYSlRZMkZzWlVaaFkzUnZjaUE5SUdaMWJtTjBhVzl1S0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY2lBOUlGWXNJRzR1YVhOUWNtVnpaVzUwYVc1bklEMDlQU0FoTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWxoU1RXRnVZV2RsY2pvZ1EyRnVibTkwSUdOb1lXNW5aU0JtY21GdFpXSjFabVpsY2lCelkyRnNaU0IzYUdsc1pTQndjbVZ6Wlc1MGFXNW5MaUlwT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YzJWMFVtVm1aWEpsYm1ObFUzQmhZMlZVZVhCbElEMGdablZ1WTNScGIyNG9WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnVml3Z2JpNXBjMUJ5WlhObGJuUnBibWNnUFQwOUlDRXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlXRkpOWVc1aFoyVnlPaUJEWVc1dWIzUWdZMmhoYm1kbElISmxabVZ5Wlc1alpTQnpjR0ZqWlNCMGVYQmxJSGRvYVd4bElIQnlaWE5sYm5ScGJtY3VJaWs3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSU1pXWmxjbVZ1WTJWVGNHRmpaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdienNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbWRsZEVKaGMyVk1ZWGxsY2lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFNBaFBUMGdiblZzYkNBL0lIVWdPaUJrT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFFtbHVaR2x1WnlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYURzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1kbGRFWnlZVzFsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0T3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFUyVnpjMmx2YmlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVRzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5ObGRGTmxjM05wYjI0Z1BTQmhjM2x1WXlCbWRXNWpkR2x2YmloV0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDBnVml3Z2FTQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hZZ1BTQmxMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BMQ0JwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5ObGJHVmpkQ0lzSUVJcExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk5sYkdWamRITjBZWEowSWl3Z1Fpa3NJR2t1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYzJWc1pXTjBaVzVrSWl3Z1Fpa3NJR2t1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYzNGMVpXVjZaU0lzSUVJcExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk54ZFdWbGVtVnpkR0Z5ZENJc0lFSXBMQ0JwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5OeGRXVmxlbVZsYm1RaUxDQkNLU3dnYVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKbGJtUWlMQ0JRS1N3Z2FTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnBibkIxZEhOdmRYSmpaWE5qYUdGdVoyVWlMQ0IzS1N3Z2VDNTRja052YlhCaGRHbGliR1VnSVQwOUlDRXdJQ1ltSUdGM1lXbDBJSFF1YldGclpWaFNRMjl0Y0dGMGFXSnNaU2dwTENCcExuSmxibVJsY2xOMFlYUmxMbXhoZVdWeWN5QTlQVDBnZG05cFpDQXdJSHg4SUdVdVkyRndZV0pwYkdsMGFXVnpMbWx6VjJWaVIwd3lJRDA5UFNBaE1Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlhJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYm5ScFlXeHBZWE02SUdrdWNtVnVaR1Z5VTNSaGRHVXViR0Y1WlhKeklEMDlQU0IyYjJsa0lEQWdQeUI0TG1GdWRHbGhiR2xoY3lBNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhiSEJvWVRvZ2VDNWhiSEJvWVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHZzZJSGd1WkdWd2RHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBaVzVqYVd3NklIZ3VjM1JsYm1OcGJDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1puSmhiV1ZpZFdabVpYSlRZMkZzWlVaaFkzUnZjam9nY2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkNBOUlHNWxkeUJZVWxkbFlrZE1UR0Y1WlhJb2FTd2dkQ3dnVnlrc0lHa3VkWEJrWVhSbFVtVnVaR1Z5VTNSaGRHVW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlZWE5sVEdGNVpYSTZJR1FLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtTd2daeUE5SUc1bGR5QkJkQ2hrTG1aeVlXMWxZblZtWm1WeVYybGtkR2dzSUdRdVpuSmhiV1ZpZFdabVpYSklaV2xuYUhRc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwT2lCamRDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nY200c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdVkyOWthVzVuT2lCbExtOTFkSEIxZEVWdVkyOWthVzVuQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1lnUFNCNExtRnVkR2xoYkdsaGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1Z6RWdQU0J1ZFd4c0xDQm9aU0E5SUc1MWJHd3NJR3hsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNExtUmxjSFJvSUNZbUlDaHNaU0E5SUhndWMzUmxibU5wYkNBL0lETTFNRFUySURvZ016TXhPVEFzSUZjeElEMGdlQzV6ZEdWdVkybHNJRDhnVEdrZ09pQldiaXdnYUdVZ1BTQjRMbk4wWlc1amFXd2dQeUJVYVNBNklHTnlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdabVVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlSbTl5YldGME9pQjRMbUZzY0doaElIeDhJR1lnUHlBek1qZzFOaUE2SURNeU9EUTVMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUVadmNtMWhkRG9nYkdVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOallXeGxSbUZqZEc5eU9pQnlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9JRDBnYm1WM0lGaFNWMlZpUjB4Q2FXNWthVzVuS0drc0lIUXBMQ0IxSUQwZ2FDNWpjbVZoZEdWUWNtOXFaV04wYVc5dVRHRjVaWElvWm1VcExDQnBMblZ3WkdGMFpWSmxibVJsY2xOMFlYUmxLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR0Y1WlhKek9pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtTd2daaUEvSUdjZ1BTQnVaWGNnV0hNb2RTNTBaWGgwZFhKbFYybGtkR2dzSUhVdWRHVjRkSFZ5WlVobGFXZG9kQ3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJR04wTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQnliaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYaDBkWEpsT2lCdVpYY2dhM01vZFM1MFpYaDBkWEpsVjJsa2RHZ3NJSFV1ZEdWNGRIVnlaVWhsYVdkb2RDd2dhR1VzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJSFp2YVdRZ01Dd2dkbTlwWkNBd0xDQjJiMmxrSURBc0lGY3hLU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1JsYm1OcGJFSjFabVpsY2pvZ2VDNXpkR1Z1WTJsc0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFoyNXZjbVZFWlhCMGFEb2dkUzVwWjI1dmNtVkVaWEIwYUZaaGJIVmxjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxPaUJzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHbHVaem9nWlM1dmRYUndkWFJGYm1OdlpHbHVad29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcElEb2daeUE5SUc1bGR5QkJkQ2gxTG5SbGVIUjFjbVZYYVdSMGFDd2dkUzUwWlhoMGRYSmxTR1ZwWjJoMExDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ2VDNWhiSEJvWVNBL0lHTjBJRG9nUjI0c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSEp1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFGUmxlSFIxY21VNklHNWxkeUJyY3loMUxuUmxlSFIxY21WWGFXUjBhQ3dnZFM1MFpYaDBkWEpsU0dWcFoyaDBMQ0JvWlN3Z2RtOXBaQ0F3TENCMmIybGtJREFzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJSFp2YVdRZ01Dd2dWekVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEdWdVkybHNRblZtWm1WeU9pQjRMbk4wWlc1amFXd3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG5ibTl5WlVSbGNIUm9PaUIxTG1sbmJtOXlaVVJsY0hSb1ZtRnNkV1Z6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm1OdlpHbHVaem9nWlM1dmRYUndkWFJGYm1OdlpHbHVad29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSR2IzWmxZWFJwYjI0b01Ta3NJRzhnUFNCaGQyRnBkQ0JwTG5KbGNYVmxjM1JTWldabGNtVnVZMlZUY0dGalpTaGhLU3dnWTJVdWMyVjBRMjl1ZEdWNGRDaHBLU3dnWTJVdWMzUmhjblFvS1N3Z2JpNXBjMUJ5WlhObGJuUnBibWNnUFNBaE1Dd2diaTVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWljMlZ6YzJsdmJuTjBZWEowSWdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhjb1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUdrdWFXNXdkWFJUYjNWeVkyVnpPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdobElEMGdNRHNnYUdVZ1BDQndMbXhsYm1kMGFEc2dhR1VyS3lsZkxuTmxkQ2hYVzJobFhTd2djRnRvWlYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2hsTVNBOUlEQTdJR2hsTVNBOElGWXVjbVZ0YjNabFpDNXNaVzVuZEdnN0lHaGxNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUZZdWNtVnRiM1psWkZ0b1pURmRMQ0JtWlNBOUlGOHVaMlYwS0d4bEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmxJQ1ltSUNobVpTNWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVpHbHpZMjl1Ym1WamRHVmtJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1lYUmhPaUJzWlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrc0lGOHVaR1ZzWlhSbEtHeGxLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvWlRJZ1BTQXdPeUJvWlRJZ1BDQldMbUZrWkdWa0xteGxibWQwYURzZ2FHVXlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeGxNU0E5SUZZdVlXUmtaV1JiYUdVeVhTd2dabVV4SUQwZ1h5NW5aWFFvYkdVeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmxNU0FtSmlCbVpURXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltTnZibTVsWTNSbFpDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2diR1V4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJRzVsZHlCTkxDQkVJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdWU2hXTENCWExDQm9aU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQkZMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloWExtMWhkSEpwZUZkdmNteGtLU3dnUkM1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9hR1V1YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JHVWdQU0JGTG1ScGMzUmhibU5sVkc4b1JDa3NJR1psSUQwZ1Z5NXdjbTlxWldOMGFXOXVUV0YwY21sNExtVnNaVzFsYm5SekxDQkNaU0E5SUdobExuQnliMnBsWTNScGIyNU5ZWFJ5YVhndVpXeGxiV1Z1ZEhNc0lGa2dQU0JtWlZzeE5GMGdMeUFvWm1WYk1UQmRJQzBnTVNrc0lFTmxJRDBnWm1WYk1UUmRJQzhnS0dabFd6RXdYU0FySURFcExDQjVaU0E5SUNobVpWczVYU0FySURFcElDOGdabVZiTlYwc0lHZGxJRDBnS0dabFd6bGRJQzBnTVNrZ0x5Qm1aVnMxWFN3Z2VHVWdQU0FvWm1WYk9GMGdMU0F4S1NBdklHWmxXekJkTENCUFpTQTlJQ2hDWlZzNFhTQXJJREVwSUM4Z1FtVmJNRjBzSUVjZ1BTQlpJQ29nZUdVc0lHb2dQU0JaSUNvZ1QyVXNJRXNnUFNCc1pTQXZJQ2d0ZUdVZ0t5QlBaU2tzSUhWbElEMGdTeUFxSUMxNFpUc0tJQ0FnSUNBZ0lDQWdJQ0FnVnk1dFlYUnlhWGhYYjNKc1pDNWtaV052YlhCdmMyVW9WaTV3YjNOcGRHbHZiaXdnVmk1eGRXRjBaWEp1YVc5dUxDQldMbk5qWVd4bEtTd2dWaTUwY21GdWMyeGhkR1ZZS0hWbEtTd2dWaTUwY21GdWMyeGhkR1ZhS0VzcExDQldMbTFoZEhKcGVGZHZjbXhrTG1OdmJYQnZjMlVvVmk1d2IzTnBkR2x2Yml3Z1ZpNXhkV0YwWlhKdWFXOXVMQ0JXTG5OallXeGxLU3dnVmk1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVdVkyOXdlU2hXTG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElITmxJRDBnV1NBcklFc3NJRk5sSUQwZ1EyVWdLeUJMTENCVVpTQTlJRWNnTFNCMVpTd2dVR1VnUFNCcUlDc2dLR3hsSUMwZ2RXVXBMQ0JaWlNBOUlIbGxJQ29nUTJVZ0x5QlRaU0FxSUhObExDQkRJRDBnWjJVZ0tpQkRaU0F2SUZObElDb2djMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lGWXVjSEp2YW1WamRHbHZiazFoZEhKcGVDNXRZV3RsVUdWeWMzQmxZM1JwZG1Vb1ZHVXNJRkJsTENCWlpTd2dReXdnYzJVc0lGTmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnUmloV0xDQlhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGY2dQVDA5SUc1MWJHd2dQeUJXTG0xaGRISnBlRmR2Y214a0xtTnZjSGtvVmk1dFlYUnlhWGdwSURvZ1ZpNXRZWFJ5YVhoWGIzSnNaQzV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLRmN1YldGMGNtbDRWMjl5YkdRc0lGWXViV0YwY21sNEtTd2dWaTV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlV1WTI5d2VTaFdMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTUxY0dSaGRHVkRZVzFsY21FZ1BTQm1kVzVqZEdsdmJpaFdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQnVkV3hzS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lFd3VibVZoY2lBOUlHSXVibVZoY2lBOUlIa3VibVZoY2lBOUlGWXVibVZoY2l3Z1RDNW1ZWElnUFNCaUxtWmhjaUE5SUhrdVptRnlJRDBnVmk1bVlYSXNJQ2hKSUNFOVBTQk1MbTVsWVhJZ2ZId2dheUFoUFQwZ1RDNW1ZWElwSUNZbUlDaHBMblZ3WkdGMFpWSmxibVJsY2xOMFlYUmxLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb1RtVmhjam9nVEM1dVpXRnlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoR1lYSTZJRXd1Wm1GeUNpQWdJQ0FnSUNBZ0lDQWdJSDBwTENCSklEMGdUQzV1WldGeUxDQnJJRDBnVEM1bVlYSXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUZZdWNHRnlaVzUwTENCb1pTQTlJRXd1WTJGdFpYSmhjenNLSUNBZ0lDQWdJQ0FnSUNBZ1JpaE1MQ0JYS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm1aU0E5SURBN0lHWmxJRHdnYUdVdWJHVnVaM1JvT3lCbVpTc3JLVVlvYUdWYlptVmRMQ0JYS1RzS0lDQWdJQ0FnSUNBZ0lDQWdUQzV0WVhSeWFYaFhiM0pzWkM1a1pXTnZiWEJ2YzJVb1RDNXdiM05wZEdsdmJpd2dUQzV4ZFdGMFpYSnVhVzl1TENCTUxuTmpZV3hsS1N3Z1ZpNXdiM05wZEdsdmJpNWpiM0I1S0V3dWNHOXphWFJwYjI0cExDQldMbkYxWVhSbGNtNXBiMjR1WTI5d2VTaE1MbkYxWVhSbGNtNXBiMjRwTENCV0xuTmpZV3hsTG1OdmNIa29UQzV6WTJGc1pTa3NJRll1YldGMGNtbDRMbU52Y0hrb1RDNXRZWFJ5YVhncExDQldMbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29UQzV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pTQTlJRll1WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ptVXhJRDBnTUN3Z1FtVWdQU0JzWlM1c1pXNW5kR2c3SUdabE1TQThJRUpsT3lCbVpURXJLeWxzWlZ0bVpURmRMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ0V3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdhR1V1YkdWdVozUm9JRDA5UFNBeUlEOGdWU2hNTENCNUxDQmlLU0E2SUV3dWNISnZhbVZqZEdsdmJrMWhkSEpwZUM1amIzQjVLSGt1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSRFlXMWxjbUVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRXc3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVuWlhSR2IzWmxZWFJwYjI0Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFVnSVQwOUlHNTFiR3dwSUhKbGRIVnliaUIxTG1acGVHVmtSbTkyWldGMGFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aQ0FoUFQwZ2JuVnNiQ2tnY21WMGRYSnVJR1F1Wm1sNFpXUkdiM1psWVhScGIyNDdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXpaWFJHYjNabFlYUnBiMjRnUFNCbWRXNWpkR2x2YmloV0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhVZ0lUMDlJRzUxYkd3Z0ppWWdLSFV1Wm1sNFpXUkdiM1psWVhScGIyNGdQU0JXS1N3Z1pDQWhQVDBnYm5Wc2JDQW1KaUJrTG1acGVHVmtSbTkyWldGMGFXOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHUXVabWw0WldSR2IzWmxZWFJwYjI0Z1BTQldLVHNLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUd4bGRDQlBJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnVaU2hXTENCWEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpJRDBnVnk1blpYUldhV1YzWlhKUWIzTmxLRzhwTENCdElEMGdWeXdnWXlBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3hsSUQwZ1l5NTJhV1YzY3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRZ0lUMDlJRzUxYkd3Z0ppWWdLR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBSbkpoYldWaWRXWm1aWElvWnl3Z1pDNW1jbUZ0WldKMVptWmxjaWtzSUdVdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0djcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtWlNBOUlDRXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1V1YkdWdVozUm9JQ0U5UFNCTUxtTmhiV1Z5WVhNdWJHVnVaM1JvSUNZbUlDaE1MbU5oYldWeVlYTXViR1Z1WjNSb0lEMGdNQ3dnWm1VZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUpsSUQwZ01Ec2dRbVVnUENCc1pTNXNaVzVuZEdnN0lFSmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JaSUQwZ2JHVmJRbVZkTENCRFpTQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dRZ0lUMDlJRzUxYkd3cElFTmxJRDBnWkM1blpYUldhV1YzY0c5eWRDaFpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdkbElEMGdhQzVuWlhSV2FXVjNVM1ZpU1cxaFoyVW9kU3dnV1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVObElEMGdaMlV1ZG1sbGQzQnZjblFzSUVKbElEMDlQU0F3SUNZbUlDaGxMbk5sZEZKbGJtUmxjbFJoY21kbGRGUmxlSFIxY21WektHY3NJR2RsTG1OdmJHOXlWR1Y0ZEhWeVpTd2dkUzVwWjI1dmNtVkVaWEIwYUZaaGJIVmxjeUEvSUhadmFXUWdNQ0E2SUdkbExtUmxjSFJvVTNSbGJtTnBiRlJsZUhSMWNtVXBMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2huS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVaU0E5SUVGYlFtVmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhsbExtMWhkSEpwZUM1bWNtOXRRWEp5WVhrb1dTNTBjbUZ1YzJadmNtMHViV0YwY21sNEtTd2dlV1V1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQzVtY205dFFYSnlZWGtvV1M1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1N3Z2VXVXVkbWxsZDNCdmNuUXVjMlYwS0VObExuZ3NJRU5sTG5rc0lFTmxMbmRwWkhSb0xDQkRaUzVvWldsbmFIUXBMQ0JDWlNBOVBUMGdNQ0FtSmlCTUxtMWhkSEpwZUM1amIzQjVLSGxsTG0xaGRISnBlQ2tzSUdabElEMDlQU0FoTUNBbUppQk1MbU5oYldWeVlYTXVjSFZ6YUNoNVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobElEMGdhUzVwYm5CMWRGTnZkWEpqWlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiR1V4SUQwZ01Ec2diR1V4SUR3Z2NDNXNaVzVuZEdnN0lHeGxNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1aVEVnUFNCd1cyeGxNVjBzSUVKbE1TQTlJR2hsVzJ4bE1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1aVEV1ZFhCa1lYUmxLRUpsTVN3Z1Z5d2dieWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnVHlBbUppQlBLRllzSUZjcExDQnRJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdObElEMGdibVYzSUhKb093b2dJQ0FnSUNBZ0lHTmxMbk5sZEVGdWFXMWhkR2x2Ymt4dmIzQW9ibVVwTENCMGFHbHpMbk5sZEVGdWFXMWhkR2x2Ymt4dmIzQWdQU0JtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRThnUFNCV093b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVpHbHpjRzl6WlNBOUlHWjFibU4wYVc5dUtDa2dlMzA3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUVONEtITXBJSHNLSUNBZ0lHWjFibU4wYVc5dUlHVW9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3VabTluUTI5c2IzSXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnY0M1cGMwWnZaeUEvSUNobkxtWnZaMDVsWVhJdWRtRnNkV1VnUFNCd0xtNWxZWElzSUdjdVptOW5SbUZ5TG5aaGJIVmxJRDBnY0M1bVlYSXBJRG9nY0M1cGMwWnZaMFY0Y0RJZ0ppWWdLR2N1Wm05blJHVnVjMmwwZVM1MllXeDFaU0E5SUhBdVpHVnVjMmwwZVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjBLR2NzSUhBc0lGOHNJSGtzSUdJcElIc0tJQ0FnSUNBZ0lDQndMbWx6VFdWemFFSmhjMmxqVFdGMFpYSnBZV3dnUHlCdUtHY3NJSEFwSURvZ2NDNXBjMDFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3dnUHlBb2JpaG5MQ0J3S1N3Z2JDaG5MQ0J3S1NrZ09pQndMbWx6VFdWemFGUnZiMjVOWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCb0tHY3NJSEFwS1NBNklIQXVhWE5OWlhOb1VHaHZibWROWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCaktHY3NJSEFwS1NBNklIQXVhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNBL0lDaHVLR2NzSUhBcExDQndMbWx6VFdWemFGQm9lWE5wWTJGc1RXRjBaWEpwWVd3Z1B5QmtLR2NzSUhBc0lHSXBJRG9nZFNobkxDQndLU2tnT2lCd0xtbHpUV1Z6YUUxaGRHTmhjRTFoZEdWeWFXRnNJRDhnS0c0b1p5d2djQ2tzSUdZb1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoRVpYQjBhRTFoZEdWeWFXRnNJRDhnS0c0b1p5d2djQ2tzSUcwb1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoRWFYTjBZVzVqWlUxaGRHVnlhV0ZzSUQ4Z0tHNG9aeXdnY0Nrc0lIZ29aeXdnY0NrcElEb2djQzVwYzAxbGMyaE9iM0p0WVd4TllYUmxjbWxoYkNBL0lDaHVLR2NzSUhBcExDQjJLR2NzSUhBcEtTQTZJSEF1YVhOTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkNBL0lDaHBLR2NzSUhBcExDQndMbWx6VEdsdVpVUmhjMmhsWkUxaGRHVnlhV0ZzSUNZbUlISW9aeXdnY0NrcElEb2djQzVwYzFCdmFXNTBjMDFoZEdWeWFXRnNJRDhnYnlobkxDQndMQ0JmTENCNUtTQTZJSEF1YVhOVGNISnBkR1ZOWVhSbGNtbGhiQ0EvSUdFb1p5d2djQ2tnT2lCd0xtbHpVMmhoWkc5M1RXRjBaWEpwWVd3Z1B5QW9aeTVqYjJ4dmNpNTJZV3gxWlM1amIzQjVLSEF1WTI5c2IzSXBMQ0JuTG05d1lXTnBkSGt1ZG1Gc2RXVWdQU0J3TG05d1lXTnBkSGtwSURvZ2NDNXBjMU5vWVdSbGNrMWhkR1Z5YVdGc0lDWW1JQ2h3TG5WdWFXWnZjbTF6VG1WbFpGVndaR0YwWlNBOUlDRXhLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc0b1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUdjdWIzQmhZMmwwZVM1MllXeDFaU0E5SUhBdWIzQmhZMmwwZVN3Z2NDNWpiMnh2Y2lBbUppQm5MbVJwWm1aMWMyVXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnY0M1bGJXbHpjMmwyWlNBbUppQm5MbVZ0YVhOemFYWmxMblpoYkhWbExtTnZjSGtvY0M1bGJXbHpjMmwyWlNrdWJYVnNkR2x3YkhsVFkyRnNZWElvY0M1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNrc0lIQXViV0Z3SUNZbUlDaG5MbTFoY0M1MllXeDFaU0E5SUhBdWJXRndLU3dnY0M1aGJIQm9ZVTFoY0NBbUppQW9aeTVoYkhCb1lVMWhjQzUyWVd4MVpTQTlJSEF1WVd4d2FHRk5ZWEFwTENCd0xuTndaV04xYkdGeVRXRndJQ1ltSUNobkxuTndaV04xYkdGeVRXRndMblpoYkhWbElEMGdjQzV6Y0dWamRXeGhjazFoY0Nrc0lIQXVZV3h3YUdGVVpYTjBJRDRnTUNBbUppQW9aeTVoYkhCb1lWUmxjM1F1ZG1Gc2RXVWdQU0J3TG1Gc2NHaGhWR1Z6ZENrN0NpQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCekxtZGxkQ2h3S1M1bGJuWk5ZWEE3Q2lBZ0lDQWdJQ0FnWHlBbUppQW9aeTVsYm5aTllYQXVkbUZzZFdVZ1BTQmZMQ0JuTG1ac2FYQkZiblpOWVhBdWRtRnNkV1VnUFNCZkxtbHpRM1ZpWlZSbGVIUjFjbVVnSmlZZ1h5NXBjMUpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVVnUFQwOUlDRXhJRDhnTFRFZ09pQXhMQ0JuTG5KbFpteGxZM1JwZG1sMGVTNTJZV3gxWlNBOUlIQXVjbVZtYkdWamRHbDJhWFI1TENCbkxtbHZjaTUyWVd4MVpTQTlJSEF1YVc5eUxDQm5MbkpsWm5KaFkzUnBiMjVTWVhScGJ5NTJZV3gxWlNBOUlIQXVjbVZtY21GamRHbHZibEpoZEdsdktTd2djQzVzYVdkb2RFMWhjQ0FtSmlBb1p5NXNhV2RvZEUxaGNDNTJZV3gxWlNBOUlIQXViR2xuYUhSTllYQXNJR2N1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1S1N3Z2NDNWhiMDFoY0NBbUppQW9aeTVoYjAxaGNDNTJZV3gxWlNBOUlIQXVZVzlOWVhBc0lHY3VZVzlOWVhCSmJuUmxibk5wZEhrdWRtRnNkV1VnUFNCd0xtRnZUV0Z3U1c1MFpXNXphWFI1S1RzS0lDQWdJQ0FnSUNCc1pYUWdlVHNLSUNBZ0lDQWdJQ0J3TG0xaGNDQS9JSGtnUFNCd0xtMWhjQ0E2SUhBdWMzQmxZM1ZzWVhKTllYQWdQeUI1SUQwZ2NDNXpjR1ZqZFd4aGNrMWhjQ0E2SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQ4Z2VTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJRG9nY0M1dWIzSnRZV3hOWVhBZ1B5QjVJRDBnY0M1dWIzSnRZV3hOWVhBZ09pQndMbUoxYlhCTllYQWdQeUI1SUQwZ2NDNWlkVzF3VFdGd0lEb2djQzV5YjNWbmFHNWxjM05OWVhBZ1B5QjVJRDBnY0M1eWIzVm5hRzVsYzNOTllYQWdPaUJ3TG0xbGRHRnNibVZ6YzAxaGNDQS9JSGtnUFNCd0xtMWxkR0ZzYm1WemMwMWhjQ0E2SUhBdVlXeHdhR0ZOWVhBZ1B5QjVJRDBnY0M1aGJIQm9ZVTFoY0NBNklIQXVaVzFwYzNOcGRtVk5ZWEFnUHlCNUlEMGdjQzVsYldsemMybDJaVTFoY0NBNklIQXVZMnhsWVhKamIyRjBUV0Z3SUQ4Z2VTQTlJSEF1WTJ4bFlYSmpiMkYwVFdGd0lEb2djQzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnUHlCNUlEMGdjQzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnT2lCd0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0EvSUhrZ1BTQndMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBNklIQXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnUHlCNUlEMGdjQzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBNklIQXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQS9JSGtnUFNCd0xuTndaV04xYkdGeVEyOXNiM0pOWVhBZ09pQndMblJ5WVc1emJXbHpjMmx2YmsxaGNDQS9JSGtnUFNCd0xuUnlZVzV6YldsemMybHZiazFoY0NBNklIQXVkR2hwWTJ0dVpYTnpUV0Z3SUQ4Z2VTQTlJSEF1ZEdocFkydHVaWE56VFdGd0lEb2djQzV6YUdWbGJrTnZiRzl5VFdGd0lEOGdlU0E5SUhBdWMyaGxaVzVEYjJ4dmNrMWhjQ0E2SUhBdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBZ0ppWWdLSGtnUFNCd0xuTm9aV1Z1VW05MVoyaHVaWE56VFdGd0tTd2dlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDVMbWx6VjJWaVIweFNaVzVrWlhKVVlYSm5aWFFnSmlZZ0tIa2dQU0I1TG5SbGVIUjFjbVVwTENCNUxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BUMDlJQ0V3SUNZbUlIa3VkWEJrWVhSbFRXRjBjbWw0S0Nrc0lHY3VkWFpVY21GdWMyWnZjbTB1ZG1Gc2RXVXVZMjl3ZVNoNUxtMWhkSEpwZUNrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JpT3dvZ0lDQWdJQ0FnSUhBdVlXOU5ZWEFnUHlCaUlEMGdjQzVoYjAxaGNDQTZJSEF1YkdsbmFIUk5ZWEFnSmlZZ0tHSWdQU0J3TG14cFoyaDBUV0Z3S1N3Z1lpQWhQVDBnZG05cFpDQXdJQ1ltSUNoaUxtbHpWMlZpUjB4U1pXNWtaWEpVWVhKblpYUWdKaVlnS0dJZ1BTQmlMblJsZUhSMWNtVXBMQ0JpTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFQwOUlDRXdJQ1ltSUdJdWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUdjdWRYWXlWSEpoYm5ObWIzSnRMblpoYkhWbExtTnZjSGtvWWk1dFlYUnlhWGdwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHa29aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3VaR2xtWm5WelpTNTJZV3gxWlM1amIzQjVLSEF1WTI5c2IzSXBMQ0JuTG05d1lXTnBkSGt1ZG1Gc2RXVWdQU0J3TG05d1lXTnBkSGs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCeUtHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCbkxtUmhjMmhUYVhwbExuWmhiSFZsSUQwZ2NDNWtZWE5vVTJsNlpTd2daeTUwYjNSaGJGTnBlbVV1ZG1Gc2RXVWdQU0J3TG1SaGMyaFRhWHBsSUNzZ2NDNW5ZWEJUYVhwbExDQm5Mbk5qWVd4bExuWmhiSFZsSUQwZ2NDNXpZMkZzWlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHOG9aeXdnY0N3Z1h5d2dlU2tnZXdvZ0lDQWdJQ0FnSUdjdVpHbG1ablZ6WlM1MllXeDFaUzVqYjNCNUtIQXVZMjlzYjNJcExDQm5MbTl3WVdOcGRIa3VkbUZzZFdVZ1BTQndMbTl3WVdOcGRIa3NJR2N1YzJsNlpTNTJZV3gxWlNBOUlIQXVjMmw2WlNBcUlGOHNJR2N1YzJOaGJHVXVkbUZzZFdVZ1BTQjVJQ29nTGpVc0lIQXViV0Z3SUNZbUlDaG5MbTFoY0M1MllXeDFaU0E5SUhBdWJXRndLU3dnY0M1aGJIQm9ZVTFoY0NBbUppQW9aeTVoYkhCb1lVMWhjQzUyWVd4MVpTQTlJSEF1WVd4d2FHRk5ZWEFwTENCd0xtRnNjR2hoVkdWemRDQStJREFnSmlZZ0tHY3VZV3h3YUdGVVpYTjBMblpoYkhWbElEMGdjQzVoYkhCb1lWUmxjM1FwT3dvZ0lDQWdJQ0FnSUd4bGRDQmlPd29nSUNBZ0lDQWdJSEF1YldGd0lEOGdZaUE5SUhBdWJXRndJRG9nY0M1aGJIQm9ZVTFoY0NBbUppQW9ZaUE5SUhBdVlXeHdhR0ZOWVhBcExDQmlJQ0U5UFNCMmIybGtJREFnSmlZZ0tHSXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdZaTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2daeTUxZGxSeVlXNXpabTl5YlM1MllXeDFaUzVqYjNCNUtHSXViV0YwY21sNEtTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoS0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0JuTG1ScFptWjFjMlV1ZG1Gc2RXVXVZMjl3ZVNod0xtTnZiRzl5S1N3Z1p5NXZjR0ZqYVhSNUxuWmhiSFZsSUQwZ2NDNXZjR0ZqYVhSNUxDQm5Mbkp2ZEdGMGFXOXVMblpoYkhWbElEMGdjQzV5YjNSaGRHbHZiaXdnY0M1dFlYQWdKaVlnS0djdWJXRndMblpoYkhWbElEMGdjQzV0WVhBcExDQndMbUZzY0doaFRXRndJQ1ltSUNobkxtRnNjR2hoVFdGd0xuWmhiSFZsSUQwZ2NDNWhiSEJvWVUxaGNDa3NJSEF1WVd4d2FHRlVaWE4wSUQ0Z01DQW1KaUFvWnk1aGJIQm9ZVlJsYzNRdWRtRnNkV1VnUFNCd0xtRnNjR2hoVkdWemRDazdDaUFnSUNBZ0lDQWdiR1YwSUY4N0NpQWdJQ0FnSUNBZ2NDNXRZWEFnUHlCZklEMGdjQzV0WVhBZ09pQndMbUZzY0doaFRXRndJQ1ltSUNoZklEMGdjQzVoYkhCb1lVMWhjQ2tzSUY4Z0lUMDlJSFp2YVdRZ01DQW1KaUFvWHk1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlCZkxuVndaR0YwWlUxaGRISnBlQ2dwTENCbkxuVjJWSEpoYm5ObWIzSnRMblpoYkhWbExtTnZjSGtvWHk1dFlYUnlhWGdwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHd29aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXVaVzFwYzNOcGRtVk5ZWEFnSmlZZ0tHY3VaVzFwYzNOcGRtVk5ZWEF1ZG1Gc2RXVWdQU0J3TG1WdGFYTnphWFpsVFdGd0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR01vWnl3Z2NDa2dld29nSUNBZ0lDQWdJR2N1YzNCbFkzVnNZWEl1ZG1Gc2RXVXVZMjl3ZVNod0xuTndaV04xYkdGeUtTd2daeTV6YUdsdWFXNWxjM011ZG1Gc2RXVWdQU0JOWVhSb0xtMWhlQ2h3TG5Ob2FXNXBibVZ6Y3l3Z01XVXROQ2tzSUhBdVpXMXBjM05wZG1WTllYQWdKaVlnS0djdVpXMXBjM05wZG1WTllYQXVkbUZzZFdVZ1BTQndMbVZ0YVhOemFYWmxUV0Z3S1N3Z2NDNWlkVzF3VFdGd0lDWW1JQ2huTG1KMWJYQk5ZWEF1ZG1Gc2RXVWdQU0J3TG1KMWJYQk5ZWEFzSUdjdVluVnRjRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWlkVzF3VTJOaGJHVXNJSEF1YzJsa1pTQTlQVDBnYVhRZ0ppWWdLR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJQ285SUMweEtTa3NJSEF1Ym05eWJXRnNUV0Z3SUNZbUlDaG5MbTV2Y20xaGJFMWhjQzUyWVd4MVpTQTlJSEF1Ym05eWJXRnNUV0Z3TENCbkxtNXZjbTFoYkZOallXeGxMblpoYkhWbExtTnZjSGtvY0M1dWIzSnRZV3hUWTJGc1pTa3NJSEF1YzJsa1pTQTlQVDBnYVhRZ0ppWWdaeTV1YjNKdFlXeFRZMkZzWlM1MllXeDFaUzV1WldkaGRHVW9LU2tzSUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNZbUlDaG5MbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0xDQm5MbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnWnk1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHZ29aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXVaM0poWkdsbGJuUk5ZWEFnSmlZZ0tHY3VaM0poWkdsbGJuUk5ZWEF1ZG1Gc2RXVWdQU0J3TG1keVlXUnBaVzUwVFdGd0tTd2djQzVsYldsemMybDJaVTFoY0NBbUppQW9aeTVsYldsemMybDJaVTFoY0M1MllXeDFaU0E5SUhBdVpXMXBjM05wZG1WTllYQXBMQ0J3TG1KMWJYQk5ZWEFnSmlZZ0tHY3VZblZ0Y0UxaGNDNTJZV3gxWlNBOUlIQXVZblZ0Y0UxaGNDd2daeTVpZFcxd1UyTmhiR1V1ZG1Gc2RXVWdQU0J3TG1KMWJYQlRZMkZzWlN3Z2NDNXphV1JsSUQwOVBTQnBkQ0FtSmlBb1p5NWlkVzF3VTJOaGJHVXVkbUZzZFdVZ0tqMGdMVEVwS1N3Z2NDNXViM0p0WVd4TllYQWdKaVlnS0djdWJtOXliV0ZzVFdGd0xuWmhiSFZsSUQwZ2NDNXViM0p0WVd4TllYQXNJR2N1Ym05eWJXRnNVMk5oYkdVdWRtRnNkV1V1WTI5d2VTaHdMbTV2Y20xaGJGTmpZV3hsS1N3Z2NDNXphV1JsSUQwOVBTQnBkQ0FtSmlCbkxtNXZjbTFoYkZOallXeGxMblpoYkhWbExtNWxaMkYwWlNncEtTd2djQzVrYVhOd2JHRmpaVzFsYm5STllYQWdKaVlnS0djdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUdjdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQm5MbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZFNobkxDQndLU0I3Q2lBZ0lDQWdJQ0FnWnk1eWIzVm5hRzVsYzNNdWRtRnNkV1VnUFNCd0xuSnZkV2RvYm1WemN5d2daeTV0WlhSaGJHNWxjM011ZG1Gc2RXVWdQU0J3TG0xbGRHRnNibVZ6Y3l3Z2NDNXliM1ZuYUc1bGMzTk5ZWEFnSmlZZ0tHY3VjbTkxWjJodVpYTnpUV0Z3TG5aaGJIVmxJRDBnY0M1eWIzVm5hRzVsYzNOTllYQXBMQ0J3TG0xbGRHRnNibVZ6YzAxaGNDQW1KaUFvWnk1dFpYUmhiRzVsYzNOTllYQXVkbUZzZFdVZ1BTQndMbTFsZEdGc2JtVnpjMDFoY0Nrc0lIQXVaVzFwYzNOcGRtVk5ZWEFnSmlZZ0tHY3VaVzFwYzNOcGRtVk5ZWEF1ZG1Gc2RXVWdQU0J3TG1WdGFYTnphWFpsVFdGd0tTd2djQzVpZFcxd1RXRndJQ1ltSUNobkxtSjFiWEJOWVhBdWRtRnNkV1VnUFNCd0xtSjFiWEJOWVhBc0lHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElEMGdjQzVpZFcxd1UyTmhiR1VzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnS0djdVluVnRjRk5qWVd4bExuWmhiSFZsSUNvOUlDMHhLU2tzSUhBdWJtOXliV0ZzVFdGd0lDWW1JQ2huTG01dmNtMWhiRTFoY0M1MllXeDFaU0E5SUhBdWJtOXliV0ZzVFdGd0xDQm5MbTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbU52Y0hrb2NDNXViM0p0WVd4VFkyRnNaU2tzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1dVpXZGhkR1VvS1Nrc0lIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JQ2huTG1ScGMzQnNZV05sYldWdWRFMWhjQzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0JuTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z1p5NWthWE53YkdGalpXMWxiblJDYVdGekxuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJDYVdGektTd2djeTVuWlhRb2NDa3VaVzUyVFdGd0lDWW1JQ2huTG1WdWRrMWhjRWx1ZEdWdWMybDBlUzUyWVd4MVpTQTlJSEF1Wlc1MlRXRndTVzUwWlc1emFYUjVLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdRb1p5d2djQ3dnWHlrZ2V3b2dJQ0FnSUNBZ0lIVW9aeXdnY0Nrc0lHY3VhVzl5TG5aaGJIVmxJRDBnY0M1cGIzSXNJSEF1YzJobFpXNGdQaUF3SUNZbUlDaG5Mbk5vWldWdVEyOXNiM0l1ZG1Gc2RXVXVZMjl3ZVNod0xuTm9aV1Z1UTI5c2IzSXBMbTExYkhScGNHeDVVMk5oYkdGeUtIQXVjMmhsWlc0cExDQm5Mbk5vWldWdVVtOTFaMmh1WlhOekxuWmhiSFZsSUQwZ2NDNXphR1ZsYmxKdmRXZG9ibVZ6Y3l3Z2NDNXphR1ZsYmtOdmJHOXlUV0Z3SUNZbUlDaG5Mbk5vWldWdVEyOXNiM0pOWVhBdWRtRnNkV1VnUFNCd0xuTm9aV1Z1UTI5c2IzSk5ZWEFwTENCd0xuTm9aV1Z1VW05MVoyaHVaWE56VFdGd0lDWW1JQ2huTG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3TG5aaGJIVmxJRDBnY0M1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NrcExDQndMbU5zWldGeVkyOWhkQ0ErSURBZ0ppWWdLR2N1WTJ4bFlYSmpiMkYwTG5aaGJIVmxJRDBnY0M1amJHVmhjbU52WVhRc0lHY3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpMblpoYkhWbElEMGdjQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01zSUhBdVkyeGxZWEpqYjJGMFRXRndJQ1ltSUNobkxtTnNaV0Z5WTI5aGRFMWhjQzUyWVd4MVpTQTlJSEF1WTJ4bFlYSmpiMkYwVFdGd0tTd2djQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ0ppWWdLR2N1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0xuWmhiSFZsSUQwZ2NDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFwTENCd0xtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQW1KaUFvWnk1amJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pTNTJZV3gxWlM1amIzQjVLSEF1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVcExDQm5MbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQzUyWVd4MVpTQTlJSEF1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3TENCd0xuTnBaR1VnUFQwOUlHbDBJQ1ltSUdjdVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVXVkbUZzZFdVdWJtVm5ZWFJsS0NrcEtTd2djQzUwY21GdWMyMXBjM05wYjI0Z1BpQXdJQ1ltSUNobkxuUnlZVzV6YldsemMybHZiaTUyWVd4MVpTQTlJSEF1ZEhKaGJuTnRhWE56YVc5dUxDQm5MblJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpOWVhBdWRtRnNkV1VnUFNCZkxuUmxlSFIxY21Vc0lHY3VkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjbE5wZW1VdWRtRnNkV1V1YzJWMEtGOHVkMmxrZEdnc0lGOHVhR1ZwWjJoMEtTd2djQzUwY21GdWMyMXBjM05wYjI1TllYQWdKaVlnS0djdWRISmhibk50YVhOemFXOXVUV0Z3TG5aaGJIVmxJRDBnY0M1MGNtRnVjMjFwYzNOcGIyNU5ZWEFwTENCbkxuUm9hV05yYm1WemN5NTJZV3gxWlNBOUlIQXVkR2hwWTJ0dVpYTnpMQ0J3TG5Sb2FXTnJibVZ6YzAxaGNDQW1KaUFvWnk1MGFHbGphMjVsYzNOTllYQXVkbUZzZFdVZ1BTQndMblJvYVdOcmJtVnpjMDFoY0Nrc0lHY3VZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaUzUyWVd4MVpTQTlJSEF1WVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlN3Z1p5NWhkSFJsYm5WaGRHbHZia052Ykc5eUxuWmhiSFZsTG1OdmNIa29jQzVoZEhSbGJuVmhkR2x2YmtOdmJHOXlLU2tzSUdjdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhrdWRtRnNkV1VnUFNCd0xuTndaV04xYkdGeVNXNTBaVzV6YVhSNUxDQm5Mbk53WldOMWJHRnlRMjlzYjNJdWRtRnNkV1V1WTI5d2VTaHdMbk53WldOMWJHRnlRMjlzYjNJcExDQndMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUNZbUlDaG5Mbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3TG5aaGJIVmxJRDBnY0M1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDa3NJSEF1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0FtSmlBb1p5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0xuWmhiSFZsSUQwZ2NDNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR1lvWnl3Z2NDa2dld29nSUNBZ0lDQWdJSEF1YldGMFkyRndJQ1ltSUNobkxtMWhkR05oY0M1MllXeDFaU0E5SUhBdWJXRjBZMkZ3S1N3Z2NDNWlkVzF3VFdGd0lDWW1JQ2huTG1KMWJYQk5ZWEF1ZG1Gc2RXVWdQU0J3TG1KMWJYQk5ZWEFzSUdjdVluVnRjRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWlkVzF3VTJOaGJHVXNJSEF1YzJsa1pTQTlQVDBnYVhRZ0ppWWdLR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJQ285SUMweEtTa3NJSEF1Ym05eWJXRnNUV0Z3SUNZbUlDaG5MbTV2Y20xaGJFMWhjQzUyWVd4MVpTQTlJSEF1Ym05eWJXRnNUV0Z3TENCbkxtNXZjbTFoYkZOallXeGxMblpoYkhWbExtTnZjSGtvY0M1dWIzSnRZV3hUWTJGc1pTa3NJSEF1YzJsa1pTQTlQVDBnYVhRZ0ppWWdaeTV1YjNKdFlXeFRZMkZzWlM1MllXeDFaUzV1WldkaGRHVW9LU2tzSUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNZbUlDaG5MbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0xDQm5MbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnWnk1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHMG9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JQ2huTG1ScGMzQnNZV05sYldWdWRFMWhjQzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0JuTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z1p5NWthWE53YkdGalpXMWxiblJDYVdGekxuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJDYVdGektUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGdvWnl3Z2NDa2dld29nSUNBZ0lDQWdJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUNobkxtUnBjM0JzWVdObGJXVnVkRTFoY0M1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCbkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJUWTJGc1pTd2daeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLU3dnWnk1eVpXWmxjbVZ1WTJWUWIzTnBkR2x2Ymk1MllXeDFaUzVqYjNCNUtIQXVjbVZtWlhKbGJtTmxVRzl6YVhScGIyNHBMQ0JuTG01bFlYSkVhWE4wWVc1alpTNTJZV3gxWlNBOUlIQXVibVZoY2tScGMzUmhibU5sTENCbkxtWmhja1JwYzNSaGJtTmxMblpoYkhWbElEMGdjQzVtWVhKRWFYTjBZVzVqWlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIWW9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXVZblZ0Y0UxaGNDQW1KaUFvWnk1aWRXMXdUV0Z3TG5aaGJIVmxJRDBnY0M1aWRXMXdUV0Z3TENCbkxtSjFiWEJUWTJGc1pTNTJZV3gxWlNBOUlIQXVZblZ0Y0ZOallXeGxMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JQ2huTG1KMWJYQlRZMkZzWlM1MllXeDFaU0FxUFNBdE1Ta3BMQ0J3TG01dmNtMWhiRTFoY0NBbUppQW9aeTV1YjNKdFlXeE5ZWEF1ZG1Gc2RXVWdQU0J3TG01dmNtMWhiRTFoY0N3Z1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNWpiM0I1S0hBdWJtOXliV0ZzVTJOaGJHVXBMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JR2N1Ym05eWJXRnNVMk5oYkdVdWRtRnNkV1V1Ym1WbllYUmxLQ2twTENCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQW9aeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2daeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaUzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUdjdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3k1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lISmxabkpsYzJoR2IyZFZibWxtYjNKdGN6b2daU3dLSUNBZ0lDQWdJQ0J5WldaeVpYTm9UV0YwWlhKcFlXeFZibWxtYjNKdGN6b2dkQW9nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJNZUNncElIc0tJQ0FnSUd4bGRDQnpJRDBnY1hNb0ltTmhiblpoY3lJcE93b2dJQ0FnY21WMGRYSnVJSE11YzNSNWJHVXVaR2x6Y0d4aGVTQTlJQ0ppYkc5amF5SXNJSE03Q24wS1puVnVZM1JwYjI0Z2NXVW9jeUE5SUh0OUtTQjdDaUFnSUNCc1pYUWdaU0E5SUhNdVkyRnVkbUZ6SUNFOVBTQjJiMmxrSURBZ1B5QnpMbU5oYm5aaGN5QTZJRXg0S0Nrc0lIUWdQU0J6TG1OdmJuUmxlSFFnSVQwOUlIWnZhV1FnTUNBL0lITXVZMjl1ZEdWNGRDQTZJRzUxYkd3c0lHNGdQU0J6TG1Gc2NHaGhJQ0U5UFNCMmIybGtJREFnUHlCekxtRnNjR2hoSURvZ0lURXNJR2tnUFNCekxtUmxjSFJvSUNFOVBTQjJiMmxrSURBZ1B5QnpMbVJsY0hSb0lEb2dJVEFzSUhJZ1BTQnpMbk4wWlc1amFXd2dJVDA5SUhadmFXUWdNQ0EvSUhNdWMzUmxibU5wYkNBNklDRXdMQ0J2SUQwZ2N5NWhiblJwWVd4cFlYTWdJVDA5SUhadmFXUWdNQ0EvSUhNdVlXNTBhV0ZzYVdGeklEb2dJVEVzSUdFZ1BTQnpMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0FoUFQwZ2RtOXBaQ0F3SUQ4Z2N5NXdjbVZ0ZFd4MGFYQnNhV1ZrUVd4d2FHRWdPaUFoTUN3Z2JDQTlJSE11Y0hKbGMyVnlkbVZFY21GM2FXNW5RblZtWm1WeUlDRTlQU0IyYjJsa0lEQWdQeUJ6TG5CeVpYTmxjblpsUkhKaGQybHVaMEoxWm1abGNpQTZJQ0V4TENCaklEMGdjeTV3YjNkbGNsQnlaV1psY21WdVkyVWdJVDA5SUhadmFXUWdNQ0EvSUhNdWNHOTNaWEpRY21WbVpYSmxibU5sSURvZ0ltUmxabUYxYkhRaUxDQm9JRDBnY3k1bVlXbHNTV1pOWVdwdmNsQmxjbVp2Y20xaGJtTmxRMkYyWldGMElDRTlQU0IyYjJsa0lEQWdQeUJ6TG1aaGFXeEpaazFoYW05eVVHVnlabTl5YldGdVkyVkRZWFpsWVhRZ09pQWhNU3dnZFNBOUlHNTFiR3dzSUdRZ1BTQnVkV3hzTENCbUlEMGdXMTBzSUcwZ1BTQmJYVHNLSUNBZ0lIUm9hWE11Wkc5dFJXeGxiV1Z1ZENBOUlHVXNJSFJvYVhNdVpHVmlkV2NnUFNCN0NpQWdJQ0FnSUNBZ1kyaGxZMnRUYUdGa1pYSkZjbkp2Y25NNklDRXdDaUFnSUNCOUxDQjBhR2x6TG1GMWRHOURiR1ZoY2lBOUlDRXdMQ0IwYUdsekxtRjFkRzlEYkdWaGNrTnZiRzl5SUQwZ0lUQXNJSFJvYVhNdVlYVjBiME5zWldGeVJHVndkR2dnUFNBaE1Dd2dkR2hwY3k1aGRYUnZRMnhsWVhKVGRHVnVZMmxzSUQwZ0lUQXNJSFJvYVhNdWMyOXlkRTlpYW1WamRITWdQU0FoTUN3Z2RHaHBjeTVqYkdsd2NHbHVaMUJzWVc1bGN5QTlJRnRkTENCMGFHbHpMbXh2WTJGc1EyeHBjSEJwYm1kRmJtRmliR1ZrSUQwZ0lURXNJSFJvYVhNdWIzVjBjSFYwUlc1amIyUnBibWNnUFNCT2RDd2dkR2hwY3k1d2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjeUE5SUNFeExDQjBhR2x6TG5SdmJtVk5ZWEJ3YVc1bklEMGdYMjRzSUhSb2FYTXVkRzl1WlUxaGNIQnBibWRGZUhCdmMzVnlaU0E5SURFN0NpQWdJQ0JzWlhRZ2VDQTlJSFJvYVhNc0lIWWdQU0FoTVN3Z1p5QTlJREFzSUhBZ1BTQXdMQ0JmSUQwZ2JuVnNiQ3dnZVNBOUlDMHhMQ0JpSUQwZ2JuVnNiQ3dnUVNBOUlHNWxkeUJXWlN3Z1RDQTlJRzVsZHlCV1pTd2dTU0E5SUc1MWJHd3NJR3NnUFNCbExuZHBaSFJvTENCQ0lEMGdaUzVvWldsbmFIUXNJRkFnUFNBeExDQjNJRDBnYm5Wc2JDd2dSU0E5SUc1MWJHd3NJRVFnUFNCdVpYY2dWbVVvTUN3Z01Dd2dheXdnUWlrc0lGVWdQU0J1WlhjZ1ZtVW9NQ3dnTUN3Z2F5d2dRaWtzSUVZZ1BTQWhNU3dnVHlBOUlGdGRMQ0J1WlNBOUlHNWxkeUJFY2l3Z1kyVWdQU0FoTVN3Z1ZpQTlJQ0V4TENCWElEMGdiblZzYkN3Z2FHVWdQU0J1WlhjZ2NHVXNJR3hsSUQwZ2JtVjNJRTBzSUdabElEMGdld29nSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUc1MWJHd3NDaUFnSUNBZ0lDQWdabTluT2lCdWRXeHNMQW9nSUNBZ0lDQWdJR1Z1ZG1seWIyNXRaVzUwT2lCdWRXeHNMQW9nSUNBZ0lDQWdJRzkyWlhKeWFXUmxUV0YwWlhKcFlXdzZJRzUxYkd3c0NpQWdJQ0FnSUNBZ2FYTlRZMlZ1WlRvZ0lUQUtJQ0FnSUgwN0NpQWdJQ0JtZFc1amRHbHZiaUJDWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1h5QTlQVDBnYm5Wc2JDQS9JRkFnT2lBeE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUZrZ1BTQjBPd29nSUNBZ1puVnVZM1JwYjI0Z1EyVW9VeXdnVGlrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1NDQTlJREE3SUVnZ1BDQlRMbXhsYm1kMGFEc2dTQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhvZ1BTQlRXMGhkTENCeElEMGdaUzVuWlhSRGIyNTBaWGgwS0hvc0lFNHBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jU0FoUFQwZ2JuVnNiQ2tnY21WMGRYSnVJSEU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnZlFvZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNCc1pYUWdVeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZV3h3YUdFNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnpkR1Z1WTJsc09pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCaGJuUnBZV3hwWVhNNklHOHNDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVRvZ1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGMyVnlkbVZFY21GM2FXNW5RblZtWm1WeU9pQnNMQW9nSUNBZ0lDQWdJQ0FnSUNCd2IzZGxjbEJ5WldabGNtVnVZMlU2SUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR1poYVd4SlprMWhhbTl5VUdWeVptOXliV0Z1WTJWRFlYWmxZWFE2SUdnS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHbG1JQ2dpYzJWMFFYUjBjbWxpZFhSbElpQnBiaUJsSUNZbUlHVXVjMlYwUVhSMGNtbGlkWFJsS0NKa1lYUmhMV1Z1WjJsdVpTSXNJR0IwYUhKbFpTNXFjeUJ5Skh0allYMWdLU3dnWlM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKM1pXSm5iR052Ym5SbGVIUnNiM04wSWl3Z1JXVXNJQ0V4S1N3Z1pTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSjNaV0puYkdOdmJuUmxlSFJ5WlhOMGIzSmxaQ0lzSUcxbExDQWhNU2tzSUZrZ1BUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFNGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpZDJWaVoyd3lJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0ozWldKbmJDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlaWGh3WlhKcGJXVnVkR0ZzTFhkbFltZHNJZ29nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2VDNXBjMWRsWWtkTU1WSmxibVJsY21WeUlEMDlQU0FoTUNBbUppQk9Mbk5vYVdaMEtDa3NJRmtnUFNCRFpTaE9MQ0JUS1N3Z1dTQTlQVDBnYm5Wc2JDa2dkR2h5YjNjZ1EyVW9UaWtnUHlCdVpYY2dSWEp5YjNJb0lrVnljbTl5SUdOeVpXRjBhVzVuSUZkbFlrZE1JR052Ym5SbGVIUWdkMmwwYUNCNWIzVnlJSE5sYkdWamRHVmtJR0YwZEhKcFluVjBaWE11SWlrZ09pQnVaWGNnUlhKeWIzSW9Ja1Z5Y205eUlHTnlaV0YwYVc1bklGZGxZa2RNSUdOdmJuUmxlSFF1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGa3VaMlYwVTJoaFpHVnlVSEpsWTJsemFXOXVSbTl5YldGMElEMDlQU0IyYjJsa0lEQWdKaVlnS0ZrdVoyVjBVMmhoWkdWeVVISmxZMmx6YVc5dVJtOXliV0YwSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WVc1blpVMXBiam9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKaGJtZGxUV0Y0T2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISmxZMmx6YVc5dU9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUlHTmhkR05vSUNoVE1Ta2dld29nSUNBZ0lDQWdJSFJvY205M0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDSWdLeUJUTVM1dFpYTnpZV2RsS1N3Z1V6RTdDaUFnSUNCOUNpQWdJQ0JzWlhRZ2VXVXNJR2RsTENCNFpTd2dUMlVzSUVjc0lHb3NJRXNzSUhWbExDQnpaU3dnVTJVc0lGUmxMQ0JRWlN3Z1dXVXNJRU1zSUZRc0lFb3NJQ1FzSUhKbExDQmFMQ0JOWlN3Z2RtVXNJSFJsTENCU093b2dJQ0FnWm5WdVkzUnBiMjRnWldVb0tTQjdDaUFnSUNBZ0lDQWdlV1VnUFNCdVpYY2dVVzBvV1Nrc0lHZGxJRDBnYm1WM0lGaHRLRmtzSUhsbExDQnpLU3dnZVdVdWFXNXBkQ2huWlNrc0lIUmxJRDBnYm1WM0lFVjRLRmtzSUhsbExDQm5aU2tzSUhobElEMGdibVYzSUZONEtGa3NJSGxsTENCblpTa3NJRTliTUYwZ1BTQXhNREk1TENCUFpTQTlJRzVsZHlCMFp5aFpLU3dnUnlBOUlHNWxkeUJtZUN3Z2FpQTlJRzVsZHlCVWVDaFpMQ0I1WlN3Z2VHVXNJRWNzSUdkbExDQjBaU3dnVDJVcExDQkxJRDBnYm1WM0lGbHRLSGdwTENCMVpTQTlJRzVsZHlCcWJTaDRLU3dnYzJVZ1BTQnVaWGNnWjJZb1dTd2daMlVwTENCU0lEMGdibVYzSUZkdEtGa3NJSGxsTENCelpTd2daMlVwTENCVFpTQTlJRzVsZHlCTGJTaFpMQ0J6WlN3Z1QyVXNJRklwTENCVVpTQTlJRzVsZHlCelp5aFpMQ0JUWlN3Z2MyVXNJRTlsS1N3Z1dpQTlJRzVsZHlCeVp5aFpMQ0JuWlN3Z2Fpa3NJRW9nUFNCdVpYY2dTbTBvUnlrc0lGQmxJRDBnYm1WM0lHUjRLSGdzSUVzc0lIVmxMQ0I1WlN3Z1oyVXNJRklzSUVvcExDQlpaU0E5SUc1bGR5QkRlQ2hIS1N3Z1F5QTlJRzVsZHlCdGVDd2dWQ0E5SUc1bGR5Qk5lQ2g1WlN3Z1oyVXBMQ0J5WlNBOUlHNWxkeUJXYlNoNExDQkxMQ0I0WlN3Z1ZHVXNJR0VwTENBa0lEMGdibVYzSUhsb0tIZ3NJRlJsTENCblpTa3NJRTFsSUQwZ2JtVjNJSEZ0S0Zrc0lIbGxMQ0JQWlN3Z1oyVXBMQ0IyWlNBOUlHNWxkeUJsWnloWkxDQjVaU3dnVDJVc0lHZGxLU3dnVDJVdWNISnZaM0poYlhNZ1BTQlFaUzV3Y205bmNtRnRjeXdnZUM1allYQmhZbWxzYVhScFpYTWdQU0JuWlN3Z2VDNWxlSFJsYm5OcGIyNXpJRDBnZVdVc0lIZ3VjSEp2Y0dWeWRHbGxjeUE5SUVjc0lIZ3VjbVZ1WkdWeVRHbHpkSE1nUFNCRExDQjRMbk5vWVdSdmQwMWhjQ0E5SUNRc0lIZ3VjM1JoZEdVZ1BTQjRaU3dnZUM1cGJtWnZJRDBnVDJVN0NpQWdJQ0I5Q2lBZ0lDQmxaU2dwT3dvZ0lDQWdiR1YwSUZFZ1BTQnVaWGNnZG1nb2VDd2dXU2s3Q2lBZ0lDQjBhR2x6TG5oeUlEMGdVU3dnZEdocGN5NW5aWFJEYjI1MFpYaDBJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEVOdmJuUmxlSFJCZEhSeWFXSjFkR1Z6SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGa3VaMlYwUTI5dWRHVjRkRUYwZEhKcFluVjBaWE1vS1RzS0lDQWdJSDBzSUhSb2FYTXVabTl5WTJWRGIyNTBaWGgwVEc5emN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnZVdVdVoyVjBLQ0pYUlVKSFRGOXNiM05sWDJOdmJuUmxlSFFpS1RzS0lDQWdJQ0FnSUNCVElDWW1JRk11Ykc5elpVTnZiblJsZUhRb0tUc0tJQ0FnSUgwc0lIUm9hWE11Wm05eVkyVkRiMjUwWlhoMFVtVnpkRzl5WlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJR3hsZENCVElEMGdlV1V1WjJWMEtDSlhSVUpIVEY5c2IzTmxYMk52Ym5SbGVIUWlLVHNLSUNBZ0lDQWdJQ0JUSUNZbUlGTXVjbVZ6ZEc5eVpVTnZiblJsZUhRb0tUc0tJQ0FnSUgwc0lIUm9hWE11WjJWMFVHbDRaV3hTWVhScGJ5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJRT3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJRYVhobGJGSmhkR2x2SUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJRk1nSVQwOUlIWnZhV1FnTUNBbUppQW9VQ0E5SUZNc0lIUm9hWE11YzJWMFUybDZaU2hyTENCQ0xDQWhNU2twT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJUYVhwbElEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG5ObGRDaHJMQ0JDS1RzS0lDQWdJSDBzSUhSb2FYTXVjMlYwVTJsNlpTQTlJR1oxYm1OMGFXOXVLRk1zSUU0c0lFZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb1VTNXBjMUJ5WlhObGJuUnBibWNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkRZVzRuZENCamFHRnVaMlVnYzJsNlpTQjNhR2xzWlNCV1VpQmtaWFpwWTJVZ2FYTWdjSEpsYzJWdWRHbHVaeTRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnJJRDBnVXl3Z1FpQTlJRTRzSUdVdWQybGtkR2dnUFNCTllYUm9MbVpzYjI5eUtGTWdLaUJRS1N3Z1pTNW9aV2xuYUhRZ1BTQk5ZWFJvTG1ac2IyOXlLRTRnS2lCUUtTd2dTQ0FoUFQwZ0lURWdKaVlnS0dVdWMzUjViR1V1ZDJsa2RHZ2dQU0JUSUNzZ0luQjRJaXdnWlM1emRIbHNaUzVvWldsbmFIUWdQU0JPSUNzZ0luQjRJaWtzSUhSb2FYTXVjMlYwVm1sbGQzQnZjblFvTUN3Z01Dd2dVeXdnVGlrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEVSeVlYZHBibWRDZFdabVpYSlRhWHBsSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbk5sZENocklDb2dVQ3dnUWlBcUlGQXBMbVpzYjI5eUtDazdDaUFnSUNCOUxDQjBhR2x6TG5ObGRFUnlZWGRwYm1kQ2RXWm1aWEpUYVhwbElEMGdablZ1WTNScGIyNG9VeXdnVGl3Z1NDa2dld29nSUNBZ0lDQWdJR3NnUFNCVExDQkNJRDBnVGl3Z1VDQTlJRWdzSUdVdWQybGtkR2dnUFNCTllYUm9MbVpzYjI5eUtGTWdLaUJJS1N3Z1pTNW9aV2xuYUhRZ1BTQk5ZWFJvTG1ac2IyOXlLRTRnS2lCSUtTd2dkR2hwY3k1elpYUldhV1YzY0c5eWRDZ3dMQ0F3TENCVExDQk9LVHNLSUNBZ0lIMHNJSFJvYVhNdVoyVjBRM1Z5Y21WdWRGWnBaWGR3YjNKMElEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG1OdmNIa29RU2s3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRlpwWlhkd2IzSjBJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVExtTnZjSGtvUkNrN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEZacFpYZHdiM0owSUQwZ1puVnVZM1JwYjI0b1V5d2dUaXdnU0N3Z2Vpa2dld29nSUNBZ0lDQWdJRk11YVhOV1pXTjBiM0kwSUQ4Z1JDNXpaWFFvVXk1NExDQlRMbmtzSUZNdWVpd2dVeTUzS1NBNklFUXVjMlYwS0ZNc0lFNHNJRWdzSUhvcExDQjRaUzUyYVdWM2NHOXlkQ2hCTG1OdmNIa29SQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9VQ2t1Wm14dmIzSW9LU2s3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRk5qYVhOemIzSWdQU0JtZFc1amRHbHZiaWhUS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZNdVkyOXdlU2hWS1RzS0lDQWdJSDBzSUhSb2FYTXVjMlYwVTJOcGMzTnZjaUE5SUdaMWJtTjBhVzl1S0ZNc0lFNHNJRWdzSUhvcElIc0tJQ0FnSUNBZ0lDQlRMbWx6Vm1WamRHOXlOQ0EvSUZVdWMyVjBLRk11ZUN3Z1V5NTVMQ0JUTG5vc0lGTXVkeWtnT2lCVkxuTmxkQ2hUTENCT0xDQklMQ0I2S1N3Z2VHVXVjMk5wYzNOdmNpaE1MbU52Y0hrb1ZTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1VDa3VabXh2YjNJb0tTazdDaUFnSUNCOUxDQjBhR2x6TG1kbGRGTmphWE56YjNKVVpYTjBJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVZN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEZOamFYTnpiM0pVWlhOMElEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhobExuTmxkRk5qYVhOemIzSlVaWE4wS0VZZ1BTQlRLVHNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBUM0JoY1hWbFUyOXlkQ0E5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQjNJRDBnVXpzS0lDQWdJSDBzSUhSb2FYTXVjMlYwVkhKaGJuTndZWEpsYm5SVGIzSjBJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lFVWdQU0JUT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJEYkdWaGNrTnZiRzl5SUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbU52Y0hrb2NtVXVaMlYwUTJ4bFlYSkRiMnh2Y2lncEtUc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFEyeGxZWEpEYjJ4dmNpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbExuTmxkRU5zWldGeVEyOXNiM0l1WVhCd2JIa29jbVVzSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEVOc1pXRnlRV3h3YUdFZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbVV1WjJWMFEyeGxZWEpCYkhCb1lTZ3BPd29nSUNBZ2ZTd2dkR2hwY3k1elpYUkRiR1ZoY2tGc2NHaGhJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVXVjMlYwUTJ4bFlYSkJiSEJvWVM1aGNIQnNlU2h5WlN3Z1lYSm5kVzFsYm5SektUc0tJQ0FnSUgwc0lIUm9hWE11WTJ4bFlYSWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIb2dQU0F3T3dvZ0lDQWdJQ0FnSUNoVElEMDlQU0IyYjJsa0lEQWdmSHdnVXlrZ0ppWWdLSG9nZkQwZ01UWXpPRFFwTENBb1RpQTlQVDBnZG05cFpDQXdJSHg4SUU0cElDWW1JQ2g2SUh3OUlESTFOaWtzSUNoSUlEMDlQU0IyYjJsa0lEQWdmSHdnU0NrZ0ppWWdLSG9nZkQwZ01UQXlOQ2tzSUZrdVkyeGxZWElvZWlrN0NpQWdJQ0I5TENCMGFHbHpMbU5zWldGeVEyOXNiM0lnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1Oc1pXRnlLQ0V3TENBaE1Td2dJVEVwT3dvZ0lDQWdmU3dnZEdocGN5NWpiR1ZoY2tSbGNIUm9JRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYkdWaGNpZ2hNU3dnSVRBc0lDRXhLVHNLSUNBZ0lIMHNJSFJvYVhNdVkyeGxZWEpUZEdWdVkybHNJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYkdWaGNpZ2hNU3dnSVRFc0lDRXdLVHNLSUNBZ0lIMHNJSFJvYVhNdVpHbHpjRzl6WlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJR1V1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWQyVmlaMnhqYjI1MFpYaDBiRzl6ZENJc0lFVmxMQ0FoTVNrc0lHVXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpZDJWaVoyeGpiMjUwWlhoMGNtVnpkRzl5WldRaUxDQnRaU3dnSVRFcExDQkRMbVJwYzNCdmMyVW9LU3dnVkM1a2FYTndiM05sS0Nrc0lFY3VaR2x6Y0c5elpTZ3BMQ0JMTG1ScGMzQnZjMlVvS1N3Z2RXVXVaR2x6Y0c5elpTZ3BMQ0JVWlM1a2FYTndiM05sS0Nrc0lGSXVaR2x6Y0c5elpTZ3BMQ0JRWlM1a2FYTndiM05sS0Nrc0lGRXVaR2x6Y0c5elpTZ3BMQ0JSTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0luTmxjM05wYjI1emRHRnlkQ0lzSUZWMEtTd2dVUzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKelpYTnphVzl1Wlc1a0lpd2dUM1FwTENCWElDWW1JQ2hYTG1ScGMzQnZjMlVvS1N3Z1Z5QTlJRzUxYkd3cExDQk1iaTV6ZEc5d0tDazdDaUFnSUNCOU93b2dJQ0FnWm5WdVkzUnBiMjRnUldVb1V5a2dld29nSUNBZ0lDQWdJRk11Y0hKbGRtVnVkRVJsWm1GMWJIUW9LU3dnWTI5dWMyOXNaUzVzYjJjb0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRU52Ym5SbGVIUWdURzl6ZEM0aUtTd2dkaUE5SUNFd093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiV1VvS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUVOdmJuUmxlSFFnVW1WemRHOXlaV1F1SWlrc0lIWWdQU0FoTVRzS0lDQWdJQ0FnSUNCc1pYUWdVeUE5SUU5bExtRjFkRzlTWlhObGRDd2dUaUE5SUNRdVpXNWhZbXhsWkN3Z1NDQTlJQ1F1WVhWMGIxVndaR0YwWlN3Z2VpQTlJQ1F1Ym1WbFpITlZjR1JoZEdVc0lIRWdQU0FrTG5SNWNHVTdDaUFnSUNBZ0lDQWdaV1VvS1N3Z1QyVXVZWFYwYjFKbGMyVjBJRDBnVXl3Z0pDNWxibUZpYkdWa0lEMGdUaXdnSkM1aGRYUnZWWEJrWVhSbElEMGdTQ3dnSkM1dVpXVmtjMVZ3WkdGMFpTQTlJSG9zSUNRdWRIbHdaU0E5SUhFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlNaU2hUS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRTRnUFNCVExuUmhjbWRsZERzS0lDQWdJQ0FnSUNCT0xuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JTWlNrc0lHOWxLRTRwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2IyVW9VeWtnZXdvZ0lDQWdJQ0FnSUV4bEtGTXBMQ0JITG5KbGJXOTJaU2hUS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFeGxLRk1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdUaUE5SUVjdVoyVjBLRk1wTG5CeWIyZHlZVzF6T3dvZ0lDQWdJQ0FnSUU0Z0lUMDlJSFp2YVdRZ01DQW1KaUFvVGk1bWIzSkZZV05vS0daMWJtTjBhVzl1S0VncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVUdVdWNtVnNaV0Z6WlZCeWIyZHlZVzBvU0NrN0NpQWdJQ0FnSUNBZ2ZTa3NJRk11YVhOVGFHRmtaWEpOWVhSbGNtbGhiQ0FtSmlCUVpTNXlaV3hsWVhObFUyaGhaR1Z5UTJGamFHVW9VeWtwT3dvZ0lDQWdmUW9nSUNBZ2RHaHBjeTV5Wlc1a1pYSkNkV1ptWlhKRWFYSmxZM1FnUFNCbWRXNWpkR2x2YmloVExDQk9MQ0JJTENCNkxDQnhMQ0JpWlNrZ2V3b2dJQ0FnSUNBZ0lFNGdQVDA5SUc1MWJHd2dKaVlnS0U0Z1BTQm1aU2s3Q2lBZ0lDQWdJQ0FnYkdWMElFRmxJRDBnY1M1cGMwMWxjMmdnSmlZZ2NTNXRZWFJ5YVhoWGIzSnNaQzVrWlhSbGNtMXBibUZ1ZENncElEd2dNQ3dnU1dVZ1BTQnNkU2hUTENCT0xDQklMQ0I2TENCeEtUc0tJQ0FnSUNBZ0lDQjRaUzV6WlhSTllYUmxjbWxoYkNoNkxDQkJaU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIZGxJRDBnU0M1cGJtUmxlQ3dnU0dVZ1BTQklMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tIZGxJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hJWlNBOVBUMGdkbTlwWkNBd0lIeDhJRWhsTG1OdmRXNTBJRDA5UFNBd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDNaUzVqYjNWdWRDQTlQVDBnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQkVaU0E5SURFN0NpQWdJQ0FnSUNBZ2VpNTNhWEpsWm5KaGJXVWdQVDA5SUNFd0lDWW1JQ2gzWlNBOUlGTmxMbWRsZEZkcGNtVm1jbUZ0WlVGMGRISnBZblYwWlNoSUtTd2dSR1VnUFNBeUtTd2dVaTV6WlhSMWNDaHhMQ0I2TENCSlpTd2dTQ3dnZDJVcE93b2dJQ0FnSUNBZ0lHeGxkQ0I2WlN3Z2FtVWdQU0JOWlRzS0lDQWdJQ0FnSUNCM1pTQWhQVDBnYm5Wc2JDQW1KaUFvZW1VZ1BTQnpaUzVuWlhRb2QyVXBMQ0JxWlNBOUlIWmxMQ0JxWlM1elpYUkpibVJsZUNoNlpTa3BPd29nSUNBZ0lDQWdJR3hsZENCU2JpQTlJSGRsSUNFOVBTQnVkV3hzSUQ4Z2QyVXVZMjkxYm5RZ09pQklaUzVqYjNWdWRDd2daV2tnUFNCSUxtUnlZWGRTWVc1blpTNXpkR0Z5ZENBcUlFUmxMQ0JIWlNBOUlFZ3VaSEpoZDFKaGJtZGxMbU52ZFc1MElDb2dSR1VzSUVoMElEMGdZbVVnSVQwOUlHNTFiR3dnUHlCaVpTNXpkR0Z5ZENBcUlFUmxJRG9nTUN3Z1lYUWdQU0JpWlNBaFBUMGdiblZzYkNBL0lHSmxMbU52ZFc1MElDb2dSR1VnT2lBeElDOGdNQ3dnYTNRZ1BTQk5ZWFJvTG0xaGVDaGxhU3dnU0hRcExDQkhjaUE5SUUxaGRHZ3ViV2x1S0ZKdUxDQmxhU0FySUVkbExDQklkQ0FySUdGMEtTQXRJREVzSUVkMElEMGdUV0YwYUM1dFlYZ29NQ3dnUjNJZ0xTQnJkQ0FySURFcE93b2dJQ0FnSUNBZ0lHbG1JQ2hIZENBaFBUMGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY1M1cGMwMWxjMmdwSUhvdWQybHlaV1p5WVcxbElEMDlQU0FoTUNBL0lDaDRaUzV6WlhSTWFXNWxWMmxrZEdnb2VpNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dLaUJDWlNncEtTd2dhbVV1YzJWMFRXOWtaU2d4S1NrZ09pQnFaUzV6WlhSTmIyUmxLRFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaHhMbWx6VEdsdVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZwMElEMGdlaTVzYVc1bGQybGtkR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JhZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2hhZENBOUlERXBMQ0I0WlM1elpYUk1hVzVsVjJsa2RHZ29XblFnS2lCQ1pTZ3BLU3dnY1M1cGMweHBibVZUWldkdFpXNTBjeUEvSUdwbExuTmxkRTF2WkdVb01Ta2dPaUJ4TG1selRHbHVaVXh2YjNBZ1B5QnFaUzV6WlhSTmIyUmxLRElwSURvZ2FtVXVjMlYwVFc5a1pTZ3pLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhFdWFYTlFiMmx1ZEhNZ1B5QnFaUzV6WlhSTmIyUmxLREFwSURvZ2NTNXBjMU53Y21sMFpTQW1KaUJxWlM1elpYUk5iMlJsS0RRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NTNXBjMGx1YzNSaGJtTmxaRTFsYzJncElHcGxMbkpsYm1SbGNrbHVjM1JoYm1ObGN5aHJkQ3dnUjNRc0lIRXVZMjkxYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hJTG1selNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmFkREVnUFNCTllYUm9MbTFwYmloSUxtbHVjM1JoYm1ObFEyOTFiblFzSUVndVgyMWhlRWx1YzNSaGJtTmxRMjkxYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FtVXVjbVZ1WkdWeVNXNXpkR0Z1WTJWektHdDBMQ0JIZEN3Z1duUXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdwbExuSmxibVJsY2locmRDd2dSM1FwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzSUhSb2FYTXVZMjl0Y0dsc1pTQTlJR1oxYm1OMGFXOXVLRk1zSUU0cElIc0tJQ0FnSUNBZ0lDQmtJRDBnVkM1blpYUW9VeWtzSUdRdWFXNXBkQ2dwTENCdExuQjFjMmdvWkNrc0lGTXVkSEpoZG1WeWMyVldhWE5wWW14bEtHWjFibU4wYVc5dUtFZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1NDNXBjMHhwWjJoMElDWW1JRWd1YkdGNVpYSnpMblJsYzNRb1RpNXNZWGxsY25NcElDWW1JQ2hrTG5CMWMyaE1hV2RvZENoSUtTd2dTQzVqWVhOMFUyaGhaRzkzSUNZbUlHUXVjSFZ6YUZOb1lXUnZkeWhJS1NrN0NpQWdJQ0FnSUNBZ2ZTa3NJR1F1YzJWMGRYQk1hV2RvZEhNb2VDNXdhSGx6YVdOaGJHeDVRMjl5Y21WamRFeHBaMmgwY3lrc0lGTXVkSEpoZG1WeWMyVW9ablZ1WTNScGIyNG9TQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZWlBOUlFZ3ViV0YwWlhKcFlXdzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDZLU0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2g2S1NrZ1ptOXlLR3hsZENCeElEMGdNRHNnY1NBOElIb3ViR1Z1WjNSb095QnhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSmxJRDBnZWx0eFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIaHZLR0psTENCVExDQklLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIaHZLSG9zSUZNc0lFZ3BPd29nSUNBZ0lDQWdJSDBwTENCdExuQnZjQ2dwTENCa0lEMGdiblZzYkRzS0lDQWdJSDA3Q2lBZ0lDQnNaWFFnV0dVZ1BTQnVkV3hzT3dvZ0lDQWdablZ1WTNScGIyNGdWMlVvVXlrZ2V3b2dJQ0FnSUNBZ0lGaGxJQ1ltSUZobEtGTXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVlhRb0tTQjdDaUFnSUNBZ0lDQWdURzR1YzNSdmNDZ3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVDNRb0tTQjdDaUFnSUNBZ0lDQWdURzR1YzNSaGNuUW9LVHNLSUNBZ0lIMEtJQ0FnSUd4bGRDQk1iaUE5SUc1bGR5QnlhRHNLSUNBZ0lFeHVMbk5sZEVGdWFXMWhkR2x2Ymt4dmIzQW9WMlVwTENCMGVYQmxiMllnZDJsdVpHOTNJRHdnSW5VaUlDWW1JRXh1TG5ObGRFTnZiblJsZUhRb2QybHVaRzkzS1N3Z2RHaHBjeTV6WlhSQmJtbHRZWFJwYjI1TWIyOXdJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lGaGxJRDBnVXl3Z1VTNXpaWFJCYm1sdFlYUnBiMjVNYjI5d0tGTXBMQ0JUSUQwOVBTQnVkV3hzSUQ4Z1RHNHVjM1J2Y0NncElEb2dURzR1YzNSaGNuUW9LVHNLSUNBZ0lIMHNJRkV1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYzJWemMybHZibk4wWVhKMElpd2dWWFFwTENCUkxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTmxjM05wYjI1bGJtUWlMQ0JQZENrc0lIUm9hWE11Y21WdVpHVnlJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpa2dld29nSUNBZ0lDQWdJR2xtSUNoT0lDRTlQU0IyYjJsa0lEQWdKaVlnVGk1cGMwTmhiV1Z5WVNBaFBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNXlaVzVrWlhJNklHTmhiV1Z5WVNCcGN5QnViM1FnWVc0Z2FXNXpkR0Z1WTJVZ2IyWWdWRWhTUlVVdVEyRnRaWEpoTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMklEMDlQU0FoTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUZNdVlYVjBiMVZ3WkdGMFpTQTlQVDBnSVRBZ0ppWWdVeTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwTENCT0xuQmhjbVZ1ZENBOVBUMGdiblZzYkNBbUppQk9MblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2tzSUZFdVpXNWhZbXhsWkNBOVBUMGdJVEFnSmlZZ1VTNXBjMUJ5WlhObGJuUnBibWNnUFQwOUlDRXdJQ1ltSUNoUkxtTmhiV1Z5WVVGMWRHOVZjR1JoZEdVZ1BUMDlJQ0V3SUNZbUlGRXVkWEJrWVhSbFEyRnRaWEpoS0U0cExDQk9JRDBnVVM1blpYUkRZVzFsY21Fb0tTa3NJRk11YVhOVFkyVnVaU0E5UFQwZ0lUQWdKaVlnVXk1dmJrSmxabTl5WlZKbGJtUmxjaWg0TENCVExDQk9MQ0JmS1N3Z1pDQTlJRlF1WjJWMEtGTXNJRzB1YkdWdVozUm9LU3dnWkM1cGJtbDBLQ2tzSUcwdWNIVnphQ2hrS1N3Z2FHVXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aE9MbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3NJRTR1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1N3Z2JtVXVjMlYwUm5KdmJWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb2FHVXBMQ0JXSUQwZ2RHaHBjeTVzYjJOaGJFTnNhWEJ3YVc1blJXNWhZbXhsWkN3Z1kyVWdQU0JLTG1sdWFYUW9kR2hwY3k1amJHbHdjR2x1WjFCc1lXNWxjeXdnVml3Z1Rpa3NJSFVnUFNCRExtZGxkQ2hUTENCbUxteGxibWQwYUNrc0lIVXVhVzVwZENncExDQm1MbkIxYzJnb2RTa3NJRkZoS0ZNc0lFNHNJREFzSUhndWMyOXlkRTlpYW1WamRITXBMQ0IxTG1acGJtbHphQ2dwTENCNExuTnZjblJQWW1wbFkzUnpJRDA5UFNBaE1DQW1KaUIxTG5OdmNuUW9keXdnUlNrc0lHTmxJRDA5UFNBaE1DQW1KaUJLTG1KbFoybHVVMmhoWkc5M2N5Z3BPd29nSUNBZ0lDQWdJR3hsZENCSUlEMGdaQzV6ZEdGMFpTNXphR0ZrYjNkelFYSnlZWGs3Q2lBZ0lDQWdJQ0FnYVdZZ0tDUXVjbVZ1WkdWeUtFZ3NJRk1zSUU0cExDQmpaU0E5UFQwZ0lUQWdKaVlnU2k1bGJtUlRhR0ZrYjNkektDa3NJSFJvYVhNdWFXNW1ieTVoZFhSdlVtVnpaWFFnUFQwOUlDRXdJQ1ltSUhSb2FYTXVhVzVtYnk1eVpYTmxkQ2dwTENCeVpTNXlaVzVrWlhJb2RTd2dVeWtzSUdRdWMyVjBkWEJNYVdkb2RITW9lQzV3YUhsemFXTmhiR3g1UTI5eWNtVmpkRXhwWjJoMGN5a3NJRTR1YVhOQmNuSmhlVU5oYldWeVlTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlaUE5SUU0dVkyRnRaWEpoY3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnhJRDBnTUN3Z1ltVWdQU0I2TG14bGJtZDBhRHNnY1NBOElHSmxPeUJ4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUZsSUQwZ2VsdHhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRXRoS0hVc0lGTXNJRUZsTENCQlpTNTJhV1YzY0c5eWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnUzJFb2RTd2dVeXdnVGlrN0NpQWdJQ0FnSUNBZ1h5QWhQVDBnYm5Wc2JDQW1KaUFvYWk1MWNHUmhkR1ZOZFd4MGFYTmhiWEJzWlZKbGJtUmxjbFJoY21kbGRDaGZLU3dnYWk1MWNHUmhkR1ZTWlc1a1pYSlVZWEpuWlhSTmFYQnRZWEFvWHlrcExDQlRMbWx6VTJObGJtVWdQVDA5SUNFd0lDWW1JRk11YjI1QlpuUmxjbEpsYm1SbGNpaDRMQ0JUTENCT0tTd2dlR1V1WW5WbVptVnljeTVrWlhCMGFDNXpaWFJVWlhOMEtDRXdLU3dnZUdVdVluVm1abVZ5Y3k1a1pYQjBhQzV6WlhSTllYTnJLQ0V3S1N3Z2VHVXVZblZtWm1WeWN5NWpiMnh2Y2k1elpYUk5ZWE5yS0NFd0tTd2dlR1V1YzJWMFVHOXNlV2R2Yms5bVpuTmxkQ2doTVNrc0lGSXVjbVZ6WlhSRVpXWmhkV3gwVTNSaGRHVW9LU3dnZVNBOUlDMHhMQ0JpSUQwZ2JuVnNiQ3dnYlM1d2IzQW9LU3dnYlM1c1pXNW5kR2dnUGlBd0lEOGdaQ0E5SUcxYmJTNXNaVzVuZEdnZ0xTQXhYU0E2SUdRZ1BTQnVkV3hzTENCbUxuQnZjQ2dwTENCbUxteGxibWQwYUNBK0lEQWdQeUIxSUQwZ1psdG1MbXhsYm1kMGFDQXRJREZkSURvZ2RTQTlJRzUxYkd3N0NpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdVV0VvVXl3Z1Rpd2dTQ3dnZWlrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hUTG5acGMybGliR1VnUFQwOUlDRXhLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdhV1lnS0ZNdWJHRjVaWEp6TG5SbGMzUW9UaTVzWVhsbGNuTXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hUTG1selIzSnZkWEFwSUVnZ1BTQlRMbkpsYm1SbGNrOXlaR1Z5T3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFRMbWx6VEU5RUtTQlRMbUYxZEc5VmNHUmhkR1VnUFQwOUlDRXdJQ1ltSUZNdWRYQmtZWFJsS0U0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hUTG1selRHbG5hSFFwSUdRdWNIVnphRXhwWjJoMEtGTXBMQ0JUTG1OaGMzUlRhR0ZrYjNjZ0ppWWdaQzV3ZFhOb1UyaGhaRzkzS0ZNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hUTG1selUzQnlhWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JVk11Wm5KMWMzUjFiVU4xYkd4bFpDQjhmQ0J1WlM1cGJuUmxjbk5sWTNSelUzQnlhWFJsS0ZNcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZWlBbUppQnNaUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b1V5NXRZWFJ5YVhoWGIzSnNaQ2t1WVhCd2JIbE5ZWFJ5YVhnMEtHaGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRV1VnUFNCVVpTNTFjR1JoZEdVb1V5a3NJRWxsSUQwZ1V5NXRZWFJsY21saGJEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JKWlM1MmFYTnBZbXhsSUNZbUlIVXVjSFZ6YUNoVExDQkJaU3dnU1dVc0lFZ3NJR3hsTG5vc0lHNTFiR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLQ2hUTG1selRXVnphQ0I4ZkNCVExtbHpUR2x1WlNCOGZDQlRMbWx6VUc5cGJuUnpLU0FtSmlBb1V5NXBjMU5yYVc1dVpXUk5aWE5vSUNZbUlGTXVjMnRsYkdWMGIyNHVabkpoYldVZ0lUMDlJRTlsTG5KbGJtUmxjaTVtY21GdFpTQW1KaUFvVXk1emEyVnNaWFJ2Ymk1MWNHUmhkR1VvS1N3Z1V5NXphMlZzWlhSdmJpNW1jbUZ0WlNBOUlFOWxMbkpsYm1SbGNpNW1jbUZ0WlNrc0lDRlRMbVp5ZFhOMGRXMURkV3hzWldRZ2ZId2dibVV1YVc1MFpYSnpaV04wYzA5aWFtVmpkQ2hUS1NrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIb2dKaVlnYkdVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLRk11YldGMGNtbDRWMjl5YkdRcExtRndjR3g1VFdGMGNtbDROQ2hvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRV1V4SUQwZ1ZHVXVkWEJrWVhSbEtGTXBMQ0JKWlRFZ1BTQlRMbTFoZEdWeWFXRnNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29TV1V4S1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCM1pTQTlJRUZsTVM1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSVpTQTlJREFzSUVSbElEMGdkMlV1YkdWdVozUm9PeUJJWlNBOElFUmxPeUJJWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSHBsSUQwZ2QyVmJTR1ZkTENCcVpTQTlJRWxsTVZ0NlpTNXRZWFJsY21saGJFbHVaR1Y0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYW1VZ0ppWWdhbVV1ZG1semFXSnNaU0FtSmlCMUxuQjFjMmdvVXl3Z1FXVXhMQ0JxWlN3Z1NDd2diR1V1ZWl3Z2VtVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JKWlRFdWRtbHphV0pzWlNBbUppQjFMbkIxYzJnb1V5d2dRV1V4TENCSlpURXNJRWdzSUd4bExub3NJRzUxYkd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQmlaU0E5SUZNdVkyaHBiR1J5Wlc0N0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQlpUSWdQU0F3TENCSlpUSWdQU0JpWlM1c1pXNW5kR2c3SUVGbE1pQThJRWxsTWpzZ1FXVXlLeXNwVVdFb1ltVmJRV1V5WFN3Z1Rpd2dTQ3dnZWlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkxZU2hUTENCT0xDQklMQ0I2S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSEVnUFNCVExtOXdZWEYxWlN3Z1ltVWdQU0JUTG5SeVlXNXpiV2x6YzJsMlpTd2dRV1VnUFNCVExuUnlZVzV6Y0dGeVpXNTBPd29nSUNBZ0lDQWdJR1F1YzJWMGRYQk1hV2RvZEhOV2FXVjNLRWdwTENCaVpTNXNaVzVuZEdnZ1BpQXdJQ1ltSUc5MUtIRXNJRTRzSUVncExDQjZJQ1ltSUhobExuWnBaWGR3YjNKMEtFRXVZMjl3ZVNoNktTa3NJSEV1YkdWdVozUm9JRDRnTUNBbUppQnJjaWh4TENCT0xDQklLU3dnWW1VdWJHVnVaM1JvSUQ0Z01DQW1KaUJyY2loaVpTd2dUaXdnU0Nrc0lFRmxMbXhsYm1kMGFDQStJREFnSmlZZ2EzSW9RV1VzSUU0c0lFZ3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYjNVb1V5d2dUaXdnU0NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hYSUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQlpTQTlJRzhnUFQwOUlDRXdJQ1ltSUdkbExtbHpWMlZpUjB3eUlEMDlQU0FoTUNBL0lGaHpJRG9nUVhRN0NpQWdJQ0FnSUNBZ0lDQWdJRmNnUFNCdVpYY2dRV1VvTVRBeU5Dd2dNVEF5TkN3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVnVaWEpoZEdWTmFYQnRZWEJ6T2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhSbExtTnZiblpsY25Rb2EyNHBJQ0U5UFNCdWRXeHNJRDhnYTI0Z09pQnliaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFwYmtacGJIUmxjam9nVldrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlXZEdhV3gwWlhJNklISjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkM0poY0ZNNklIWjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkM0poY0ZRNklIWjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxPaUI1WlM1b1lYTW9JbGRGUWtkTVgyMTFiSFJwYzJGdGNHeGxaRjl5Wlc1a1pYSmZkRzlmZEdWNGRIVnlaU0lwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2VpQTlJSGd1WjJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2s3Q2lBZ0lDQWdJQ0FnZUM1elpYUlNaVzVrWlhKVVlYSm5aWFFvVnlrc0lIZ3VZMnhsWVhJb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnY1NBOUlIZ3VkRzl1WlUxaGNIQnBibWM3Q2lBZ0lDQWdJQ0FnZUM1MGIyNWxUV0Z3Y0dsdVp5QTlJRjl1TENCcmNpaFRMQ0JPTENCSUtTd2dlQzUwYjI1bFRXRndjR2x1WnlBOUlIRXNJR291ZFhCa1lYUmxUWFZzZEdsellXMXdiR1ZTWlc1a1pYSlVZWEpuWlhRb1Z5a3NJR291ZFhCa1lYUmxVbVZ1WkdWeVZHRnlaMlYwVFdsd2JXRndLRmNwTENCNExuTmxkRkpsYm1SbGNsUmhjbWRsZENoNktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3R5S0ZNc0lFNHNJRWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdlaUE5SUU0dWFYTlRZMlZ1WlNBOVBUMGdJVEFnUHlCT0xtOTJaWEp5YVdSbFRXRjBaWEpwWVd3Z09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY1NBOUlEQXNJR0psSUQwZ1V5NXNaVzVuZEdnN0lIRWdQQ0JpWlRzZ2NTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUZsSUQwZ1UxdHhYU3dnU1dVZ1BTQkJaUzV2WW1wbFkzUXNJSGRsSUQwZ1FXVXVaMlZ2YldWMGNua3NJRWhsSUQwZ2VpQTlQVDBnYm5Wc2JDQS9JRUZsTG0xaGRHVnlhV0ZzSURvZ2Vpd2dSR1VnUFNCQlpTNW5jbTkxY0RzS0lDQWdJQ0FnSUNBZ0lDQWdTV1V1YkdGNVpYSnpMblJsYzNRb1NDNXNZWGxsY25NcElDWW1JR0YxS0VsbExDQk9MQ0JJTENCM1pTd2dTR1VzSUVSbEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoZFNoVExDQk9MQ0JJTENCNkxDQnhMQ0JpWlNrZ2V3b2dJQ0FnSUNBZ0lGTXViMjVDWldadmNtVlNaVzVrWlhJb2VDd2dUaXdnU0N3Z2Vpd2djU3dnWW1VcExDQlRMbTF2WkdWc1ZtbGxkMDFoZEhKcGVDNXRkV3gwYVhCc2VVMWhkSEpwWTJWektFZ3ViV0YwY21sNFYyOXliR1JKYm5abGNuTmxMQ0JUTG0xaGRISnBlRmR2Y214a0tTd2dVeTV1YjNKdFlXeE5ZWFJ5YVhndVoyVjBUbTl5YldGc1RXRjBjbWw0S0ZNdWJXOWtaV3hXYVdWM1RXRjBjbWw0S1N3Z2NTNXZia0psWm05eVpWSmxibVJsY2loNExDQk9MQ0JJTENCNkxDQlRMQ0JpWlNrc0lIRXVkSEpoYm5Od1lYSmxiblFnUFQwOUlDRXdJQ1ltSUhFdWMybGtaU0E5UFQwZ1Eya2dQeUFvY1M1emFXUmxJRDBnYVhRc0lIRXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2dlQzV5Wlc1a1pYSkNkV1ptWlhKRWFYSmxZM1FvU0N3Z1Rpd2dlaXdnY1N3Z1V5d2dZbVVwTENCeExuTnBaR1VnUFNCQmFTd2djUzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0I0TG5KbGJtUmxja0oxWm1abGNrUnBjbVZqZENoSUxDQk9MQ0I2TENCeExDQlRMQ0JpWlNrc0lIRXVjMmxrWlNBOUlFTnBLU0E2SUhndWNtVnVaR1Z5UW5WbVptVnlSR2x5WldOMEtFZ3NJRTRzSUhvc0lIRXNJRk1zSUdKbEtTd2dVeTV2YmtGbWRHVnlVbVZ1WkdWeUtIZ3NJRTRzSUVnc0lIb3NJSEVzSUdKbEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGh2S0ZNc0lFNHNJRWdwSUhzS0lDQWdJQ0FnSUNCT0xtbHpVMk5sYm1VZ0lUMDlJQ0V3SUNZbUlDaE9JRDBnWm1VcE93b2dJQ0FnSUNBZ0lHeGxkQ0I2SUQwZ1J5NW5aWFFvVXlrc0lIRWdQU0JrTG5OMFlYUmxMbXhwWjJoMGN5d2dZbVVnUFNCa0xuTjBZWFJsTG5Ob1lXUnZkM05CY25KaGVTd2dRV1VnUFNCeExuTjBZWFJsTG5abGNuTnBiMjRzSUVsbElEMGdVR1V1WjJWMFVHRnlZVzFsZEdWeWN5aFRMQ0J4TG5OMFlYUmxMQ0JpWlN3Z1Rpd2dTQ2tzSUhkbElEMGdVR1V1WjJWMFVISnZaM0poYlVOaFkyaGxTMlY1S0VsbEtTd2dTR1VnUFNCNkxuQnliMmR5WVcxek93b2dJQ0FnSUNBZ0lIb3VaVzUyYVhKdmJtMWxiblFnUFNCVExtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnUHlCT0xtVnVkbWx5YjI1dFpXNTBJRG9nYm5Wc2JDd2dlaTVtYjJjZ1BTQk9MbVp2Wnl3Z2VpNWxiblpOWVhBZ1BTQW9VeTVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lEOGdkV1VnT2lCTEtTNW5aWFFvVXk1bGJuWk5ZWEFnZkh3Z2VpNWxiblpwY205dWJXVnVkQ2tzSUVobElEMDlQU0IyYjJsa0lEQWdKaVlnS0ZNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lGSmxLU3dnU0dVZ1BTQnVaWGNnVFdGd0xDQjZMbkJ5YjJkeVlXMXpJRDBnU0dVcE93b2dJQ0FnSUNBZ0lHeGxkQ0JFWlNBOUlFaGxMbWRsZENoM1pTazdDaUFnSUNBZ0lDQWdhV1lnS0VSbElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSG91WTNWeWNtVnVkRkJ5YjJkeVlXMGdQVDA5SUVSbElDWW1JSG91YkdsbmFIUnpVM1JoZEdWV1pYSnphVzl1SUQwOVBTQkJaU2tnY21WMGRYSnVJR1ZzS0ZNc0lFbGxLU3dnUkdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUVsbExuVnVhV1p2Y20xeklEMGdVR1V1WjJWMFZXNXBabTl5YlhNb1V5a3NJRk11YjI1Q2RXbHNaQ2hJTENCSlpTd2dlQ2tzSUZNdWIyNUNaV1p2Y21WRGIyMXdhV3hsS0VsbExDQjRLU3dnUkdVZ1BTQlFaUzVoWTNGMWFYSmxVSEp2WjNKaGJTaEpaU3dnZDJVcExDQklaUzV6WlhRb2QyVXNJRVJsS1N3Z2VpNTFibWxtYjNKdGN5QTlJRWxsTG5WdWFXWnZjbTF6T3dvZ0lDQWdJQ0FnSUd4bGRDQjZaU0E5SUhvdWRXNXBabTl5YlhNN0NpQWdJQ0FnSUNBZ0tDRlRMbWx6VTJoaFpHVnlUV0YwWlhKcFlXd2dKaVlnSVZNdWFYTlNZWGRUYUdGa1pYSk5ZWFJsY21saGJDQjhmQ0JUTG1Oc2FYQndhVzVuSUQwOVBTQWhNQ2tnSmlZZ0tIcGxMbU5zYVhCd2FXNW5VR3hoYm1WeklEMGdTaTUxYm1sbWIzSnRLU3dnWld3b1V5d2dTV1VwTENCNkxtNWxaV1J6VEdsbmFIUnpJRDBnYUhVb1V5a3NJSG91YkdsbmFIUnpVM1JoZEdWV1pYSnphVzl1SUQwZ1FXVXNJSG91Ym1WbFpITk1hV2RvZEhNZ0ppWWdLSHBsTG1GdFltbGxiblJNYVdkb2RFTnZiRzl5TG5aaGJIVmxJRDBnY1M1emRHRjBaUzVoYldKcFpXNTBMQ0I2WlM1c2FXZG9kRkJ5YjJKbExuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1d2NtOWlaU3dnZW1VdVpHbHlaV04wYVc5dVlXeE1hV2RvZEhNdWRtRnNkV1VnUFNCeExuTjBZWFJsTG1ScGNtVmpkR2x2Ym1Gc0xDQjZaUzVrYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M2N5NTJZV3gxWlNBOUlIRXVjM1JoZEdVdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNjc0lIcGxMbk53YjNSTWFXZG9kSE11ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbk53YjNRc0lIcGxMbk53YjNSTWFXZG9kRk5vWVdSdmQzTXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuTndiM1JUYUdGa2IzY3NJSHBsTG5KbFkzUkJjbVZoVEdsbmFIUnpMblpoYkhWbElEMGdjUzV6ZEdGMFpTNXlaV04wUVhKbFlTd2dlbVV1YkhSalh6RXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuSmxZM1JCY21WaFRGUkRNU3dnZW1VdWJIUmpYekl1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbkpsWTNSQmNtVmhURlJETWl3Z2VtVXVjRzlwYm5STWFXZG9kSE11ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbkJ2YVc1MExDQjZaUzV3YjJsdWRFeHBaMmgwVTJoaFpHOTNjeTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVjRzlwYm5SVGFHRmtiM2NzSUhwbExtaGxiV2x6Y0dobGNtVk1hV2RvZEhNdWRtRnNkV1VnUFNCeExuTjBZWFJsTG1obGJXa3NJSHBsTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd0xuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1a2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNDd2dlbVV1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhSeWFYZ3VkbUZzZFdVZ1BTQnhMbk4wWVhSbExtUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0TENCNlpTNXpjRzkwVTJoaFpHOTNUV0Z3TG5aaGJIVmxJRDBnY1M1emRHRjBaUzV6Y0c5MFUyaGhaRzkzVFdGd0xDQjZaUzV6Y0c5MFUyaGhaRzkzVFdGMGNtbDRMblpoYkhWbElEMGdjUzV6ZEdGMFpTNXpjRzkwVTJoaFpHOTNUV0YwY21sNExDQjZaUzV3YjJsdWRGTm9ZV1J2ZDAxaGNDNTJZV3gxWlNBOUlIRXVjM1JoZEdVdWNHOXBiblJUYUdGa2IzZE5ZWEFzSUhwbExuQnZhVzUwVTJoaFpHOTNUV0YwY21sNExuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1d2IybHVkRk5vWVdSdmQwMWhkSEpwZUNrN0NpQWdJQ0FnSUNBZ2JHVjBJR3BsSUQwZ1JHVXVaMlYwVlc1cFptOXliWE1vS1N3Z1VtNGdQU0JpYmk1elpYRlhhWFJvVm1Gc2RXVW9hbVV1YzJWeExDQjZaU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSG91WTNWeWNtVnVkRkJ5YjJkeVlXMGdQU0JFWlN3Z2VpNTFibWxtYjNKdGMweHBjM1FnUFNCU2Jpd2dSR1U3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCbGJDaFRMQ0JPS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRWdnUFNCSExtZGxkQ2hUS1RzS0lDQWdJQ0FnSUNCSUxtOTFkSEIxZEVWdVkyOWthVzVuSUQwZ1RpNXZkWFJ3ZFhSRmJtTnZaR2x1Wnl3Z1NDNXBibk4wWVc1amFXNW5JRDBnVGk1cGJuTjBZVzVqYVc1bkxDQklMbk5yYVc1dWFXNW5JRDBnVGk1emEybHVibWx1Wnl3Z1NDNXRiM0p3YUZSaGNtZGxkSE1nUFNCT0xtMXZjbkJvVkdGeVoyVjBjeXdnU0M1dGIzSndhRTV2Y20xaGJITWdQU0JPTG0xdmNuQm9UbTl5YldGc2N5d2dTQzV0YjNKd2FGUmhjbWRsZEhORGIzVnVkQ0E5SUU0dWJXOXljR2hVWVhKblpYUnpRMjkxYm5Rc0lFZ3ViblZ0UTJ4cGNIQnBibWRRYkdGdVpYTWdQU0JPTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6TENCSUxtNTFiVWx1ZEdWeWMyVmpkR2x2YmlBOUlFNHViblZ0UTJ4cGNFbHVkR1Z5YzJWamRHbHZiaXdnU0M1MlpYSjBaWGhCYkhCb1lYTWdQU0JPTG5abGNuUmxlRUZzY0doaGN5d2dTQzUyWlhKMFpYaFVZVzVuWlc1MGN5QTlJRTR1ZG1WeWRHVjRWR0Z1WjJWdWRITXNJRWd1ZEc5dVpVMWhjSEJwYm1jZ1BTQk9MblJ2Ym1WTllYQndhVzVuT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JIVW9VeXdnVGl3Z1NDd2dlaXdnY1NrZ2V3b2dJQ0FnSUNBZ0lFNHVhWE5UWTJWdVpTQWhQVDBnSVRBZ0ppWWdLRTRnUFNCbVpTa3NJR291Y21WelpYUlVaWGgwZFhKbFZXNXBkSE1vS1RzS0lDQWdJQ0FnSUNCc1pYUWdZbVVnUFNCT0xtWnZaeXdnUVdVZ1BTQjZMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1B5Qk9MbVZ1ZG1seWIyNXRaVzUwSURvZ2JuVnNiQ3dnU1dVZ1BTQmZJRDA5UFNCdWRXeHNJRDhnZUM1dmRYUndkWFJGYm1OdlpHbHVaeUE2SUY4dWRHVjRkSFZ5WlM1bGJtTnZaR2x1Wnl3Z2QyVWdQU0FvZWk1cGMwMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNJRDhnZFdVZ09pQkxLUzVuWlhRb2VpNWxiblpOWVhBZ2ZId2dRV1VwTENCSVpTQTlJSG91ZG1WeWRHVjRRMjlzYjNKeklEMDlQU0FoTUNBbUppQWhJVWd1WVhSMGNtbGlkWFJsY3k1amIyeHZjaUFtSmlCSUxtRjBkSEpwWW5WMFpYTXVZMjlzYjNJdWFYUmxiVk5wZW1VZ1BUMDlJRFFzSUVSbElEMGdJU0Y2TG01dmNtMWhiRTFoY0NBbUppQWhJVWd1WVhSMGNtbGlkWFJsY3k1MFlXNW5aVzUwTENCNlpTQTlJQ0VoU0M1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUdwbElEMGdJU0ZJTG0xdmNuQm9RWFIwY21saWRYUmxjeTV1YjNKdFlXd3NJRkp1SUQwZ1NDNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0Z1B5QklMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpNXNaVzVuZEdnZ09pQXdMQ0JsYVNBOUlIb3VkRzl1WlUxaGNIQmxaQ0EvSUhndWRHOXVaVTFoY0hCcGJtY2dPaUJmYml3Z1IyVWdQU0JITG1kbGRDaDZLU3dnU0hRZ1BTQmtMbk4wWVhSbExteHBaMmgwY3pzS0lDQWdJQ0FnSUNCcFppQW9ZMlVnUFQwOUlDRXdJQ1ltSUNoV0lEMDlQU0FoTUNCOGZDQlRJQ0U5UFNCaUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVSFFnUFNCVElEMDlQU0JpSUNZbUlIb3VhV1FnUFQwOUlIazdDaUFnSUNBZ0lDQWdJQ0FnSUVvdWMyVjBVM1JoZEdVb2Vpd2dVeXdnVUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWVhRZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I2TG5abGNuTnBiMjRnUFQwOUlFZGxMbDlmZG1WeWMybHZiaUEvSUNoSFpTNXVaV1ZrYzB4cFoyaDBjeUFtSmlCSFpTNXNhV2RvZEhOVGRHRjBaVlpsY25OcGIyNGdJVDA5SUVoMExuTjBZWFJsTG5abGNuTnBiMjRnZkh3Z1IyVXViM1YwY0hWMFJXNWpiMlJwYm1jZ0lUMDlJRWxsSUh4OElIRXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lDWW1JRWRsTG1sdWMzUmhibU5wYm1jZ1BUMDlJQ0V4SUh4OElDRnhMbWx6U1c1emRHRnVZMlZrVFdWemFDQW1KaUJIWlM1cGJuTjBZVzVqYVc1bklEMDlQU0FoTUNCOGZDQnhMbWx6VTJ0cGJtNWxaRTFsYzJnZ0ppWWdSMlV1YzJ0cGJtNXBibWNnUFQwOUlDRXhJSHg4SUNGeExtbHpVMnRwYm01bFpFMWxjMmdnSmlZZ1IyVXVjMnRwYm01cGJtY2dQVDA5SUNFd0lIeDhJRWRsTG1WdWRrMWhjQ0FoUFQwZ2QyVWdmSHdnZWk1bWIyY2dKaVlnUjJVdVptOW5JQ0U5UFNCaVpTQjhmQ0JIWlM1dWRXMURiR2x3Y0dsdVoxQnNZVzVsY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hIWlM1dWRXMURiR2x3Y0dsdVoxQnNZVzVsY3lBaFBUMGdTaTV1ZFcxUWJHRnVaWE1nZkh3Z1IyVXViblZ0U1c1MFpYSnpaV04wYVc5dUlDRTlQU0JLTG01MWJVbHVkR1Z5YzJWamRHbHZiaWtnZkh3Z1IyVXVkbVZ5ZEdWNFFXeHdhR0Z6SUNFOVBTQklaU0I4ZkNCSFpTNTJaWEowWlhoVVlXNW5aVzUwY3lBaFBUMGdSR1VnZkh3Z1IyVXViVzl5Y0doVVlYSm5aWFJ6SUNFOVBTQjZaU0I4ZkNCSFpTNXRiM0p3YUU1dmNtMWhiSE1nSVQwOUlHcGxJSHg4SUVkbExuUnZibVZOWVhCd2FXNW5JQ0U5UFNCbGFTQjhmQ0JuWlM1cGMxZGxZa2RNTWlBOVBUMGdJVEFnSmlZZ1IyVXViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUWdJVDA5SUZKdUtTQW1KaUFvWVhRZ1BTQWhNQ2tnT2lBb1lYUWdQU0FoTUN3Z1IyVXVYMTkyWlhKemFXOXVJRDBnZWk1MlpYSnphVzl1S1RzS0lDQWdJQ0FnSUNCc1pYUWdhM1FnUFNCSFpTNWpkWEp5Wlc1MFVISnZaM0poYlRzS0lDQWdJQ0FnSUNCaGRDQTlQVDBnSVRBZ0ppWWdLR3QwSUQwZ2VHOG9laXdnVGl3Z2NTa3BPd29nSUNBZ0lDQWdJR3hsZENCSGNpQTlJQ0V4TENCSGRDQTlJQ0V4TENCYWRDQTlJQ0V4TENCNGRDQTlJR3QwTG1kbGRGVnVhV1p2Y20xektDa3NJRmhwSUQwZ1IyVXVkVzVwWm05eWJYTTdDaUFnSUNBZ0lDQWdhV1lnS0hobExuVnpaVkJ5YjJkeVlXMG9hM1F1Y0hKdlozSmhiU2tnSmlZZ0tFZHlJRDBnSVRBc0lFZDBJRDBnSVRBc0lGcDBJRDBnSVRBcExDQjZMbWxrSUNFOVBTQjVJQ1ltSUNoNUlEMGdlaTVwWkN3Z1IzUWdQU0FoTUNrc0lFZHlJSHg4SUdJZ0lUMDlJRk1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hoMExuTmxkRlpoYkhWbEtGa3NJQ0p3Y205cVpXTjBhVzl1VFdGMGNtbDRJaXdnVXk1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1N3Z1oyVXViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2lBbUppQjRkQzV6WlhSV1lXeDFaU2haTENBaWJHOW5SR1Z3ZEdoQ2RXWkdReUlzSURJZ0x5QW9UV0YwYUM1c2IyY29VeTVtWVhJZ0t5QXhLU0F2SUUxaGRHZ3VURTR5S1Nrc0lHSWdJVDA5SUZNZ0ppWWdLR0lnUFNCVExDQkhkQ0E5SUNFd0xDQmFkQ0E5SUNFd0tTd2dlaTVwYzFOb1lXUmxjazFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vVUdodmJtZE5ZWFJsY21saGJDQjhmQ0I2TG1selRXVnphRlJ2YjI1TllYUmxjbWxoYkNCOGZDQjZMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z2ZId2dlaTVsYm5aTllYQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUWRERWdQU0I0ZEM1dFlYQXVZMkZ0WlhKaFVHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCUWRERWdJVDA5SUhadmFXUWdNQ0FtSmlCUWRERXVjMlYwVm1Gc2RXVW9XU3dnYkdVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLRk11YldGMGNtbDRWMjl5YkdRcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQW9laTVwYzAxbGMyaFFhRzl1WjAxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1ZHOXZiazFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vVEdGdFltVnlkRTFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vUW1GemFXTk5ZWFJsY21saGJDQjhmQ0I2TG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dmSHdnZWk1cGMxTm9ZV1JsY2sxaGRHVnlhV0ZzS1NBbUppQjRkQzV6WlhSV1lXeDFaU2haTENBaWFYTlBjblJvYjJkeVlYQm9hV01pTENCVExtbHpUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhJRDA5UFNBaE1Da3NJQ2g2TG1selRXVnphRkJvYjI1blRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaFViMjl1VFdGMFpYSnBZV3dnZkh3Z2VpNXBjMDFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3dnZkh3Z2VpNXBjMDFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0I4ZkNCNkxtbHpVMmhoWkdWeVRXRjBaWEpwWVd3Z2ZId2dlaTVwYzFOb1lXUnZkMDFoZEdWeWFXRnNJSHg4SUhFdWFYTlRhMmx1Ym1Wa1RXVnphQ2tnSmlZZ2VIUXVjMlYwVm1Gc2RXVW9XU3dnSW5acFpYZE5ZWFJ5YVhnaUxDQlRMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHhMbWx6VTJ0cGJtNWxaRTFsYzJncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZUhRdWMyVjBUM0IwYVc5dVlXd29XU3dnY1N3Z0ltSnBibVJOWVhSeWFYZ2lLU3dnZUhRdWMyVjBUM0IwYVc5dVlXd29XU3dnY1N3Z0ltSnBibVJOWVhSeWFYaEpiblpsY25ObElpazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlFkRElnUFNCeExuTnJaV3hsZEc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JRZERJZ0ppWWdLR2RsTG1ac2IyRjBWbVZ5ZEdWNFZHVjRkSFZ5WlhNZ1B5QW9VSFF5TG1KdmJtVlVaWGgwZFhKbElEMDlQU0J1ZFd4c0lDWW1JRkIwTWk1amIyMXdkWFJsUW05dVpWUmxlSFIxY21Vb0tTd2dlSFF1YzJWMFZtRnNkV1VvV1N3Z0ltSnZibVZVWlhoMGRYSmxJaXdnVUhReUxtSnZibVZVWlhoMGRYSmxMQ0JxS1N3Z2VIUXVjMlYwVm1Gc2RXVW9XU3dnSW1KdmJtVlVaWGgwZFhKbFUybDZaU0lzSUZCME1pNWliMjVsVkdWNGRIVnlaVk5wZW1VcEtTQTZJSGgwTG5ObGRFOXdkR2x2Ym1Gc0tGa3NJRkIwTWl3Z0ltSnZibVZOWVhSeWFXTmxjeUlwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFaFNDQW1KaUFvU0M1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRnSVQwOUlIWnZhV1FnTUNCOGZDQklMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXViM0p0WVd3Z0lUMDlJSFp2YVdRZ01Da2dKaVlnV2k1MWNHUmhkR1VvY1N3Z1NDd2dlaXdnYTNRcExDQW9SM1FnZkh3Z1IyVXVjbVZqWldsMlpWTm9ZV1J2ZHlBaFBUMGdjUzV5WldObGFYWmxVMmhoWkc5M0tTQW1KaUFvUjJVdWNtVmpaV2wyWlZOb1lXUnZkeUE5SUhFdWNtVmpaV2wyWlZOb1lXUnZkeXdnZUhRdWMyVjBWbUZzZFdVb1dTd2dJbkpsWTJWcGRtVlRhR0ZrYjNjaUxDQnhMbkpsWTJWcGRtVlRhR0ZrYjNjcEtTd2dSM1FnSmlZZ0tIaDBMbk5sZEZaaGJIVmxLRmtzSUNKMGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbElpd2dlQzUwYjI1bFRXRndjR2x1WjBWNGNHOXpkWEpsS1N3Z1IyVXVibVZsWkhOTWFXZG9kSE1nSmlZZ1kzVW9XR2tzSUZwMEtTd2dZbVVnSmlZZ2VpNW1iMmNnSmlZZ1dXVXVjbVZtY21WemFFWnZaMVZ1YVdadmNtMXpLRmhwTENCaVpTa3NJRmxsTG5KbFpuSmxjMmhOWVhSbGNtbGhiRlZ1YVdadmNtMXpLRmhwTENCNkxDQlFMQ0JDTENCWEtTd2dZbTR1ZFhCc2IyRmtLRmtzSUVkbExuVnVhV1p2Y20xelRHbHpkQ3dnV0drc0lHb3BLU3dnZWk1cGMxTm9ZV1JsY2sxaGRHVnlhV0ZzSUNZbUlIb3VkVzVwWm05eWJYTk9aV1ZrVlhCa1lYUmxJRDA5UFNBaE1DQW1KaUFvWW00dWRYQnNiMkZrS0Zrc0lFZGxMblZ1YVdadmNtMXpUR2x6ZEN3Z1dHa3NJR29wTENCNkxuVnVhV1p2Y20xelRtVmxaRlZ3WkdGMFpTQTlJQ0V4S1N3Z2VpNXBjMU53Y21sMFpVMWhkR1Z5YVdGc0lDWW1JSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSmpaVzUwWlhJaUxDQnhMbU5sYm5SbGNpa3NJSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSnRiMlJsYkZacFpYZE5ZWFJ5YVhnaUxDQnhMbTF2WkdWc1ZtbGxkMDFoZEhKcGVDa3NJSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSnViM0p0WVd4TllYUnlhWGdpTENCeExtNXZjbTFoYkUxaGRISnBlQ2tzSUhoMExuTmxkRlpoYkhWbEtGa3NJQ0p0YjJSbGJFMWhkSEpwZUNJc0lIRXViV0YwY21sNFYyOXliR1FwTENCcmREc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR04xS0ZNc0lFNHBJSHNLSUNBZ0lDQWdJQ0JUTG1GdFltbGxiblJNYVdkb2RFTnZiRzl5TG01bFpXUnpWWEJrWVhSbElEMGdUaXdnVXk1c2FXZG9kRkJ5YjJKbExtNWxaV1J6VlhCa1lYUmxJRDBnVGl3Z1V5NWthWEpsWTNScGIyNWhiRXhwWjJoMGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lGTXVaR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZDNNdWJtVmxaSE5WY0dSaGRHVWdQU0JPTENCVExuQnZhVzUwVEdsbmFIUnpMbTVsWldSelZYQmtZWFJsSUQwZ1Rpd2dVeTV3YjJsdWRFeHBaMmgwVTJoaFpHOTNjeTV1WldWa2MxVndaR0YwWlNBOUlFNHNJRk11YzNCdmRFeHBaMmgwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUZNdWMzQnZkRXhwWjJoMFUyaGhaRzkzY3k1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUZNdWNtVmpkRUZ5WldGTWFXZG9kSE11Ym1WbFpITlZjR1JoZEdVZ1BTQk9MQ0JUTG1obGJXbHpjR2hsY21WTWFXZG9kSE11Ym1WbFpITlZjR1JoZEdVZ1BTQk9Pd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYUhVb1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbWx6VFdWemFFeGhiV0psY25STllYUmxjbWxoYkNCOGZDQlRMbWx6VFdWemFGUnZiMjVOWVhSbGNtbGhiQ0I4ZkNCVExtbHpUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXd2dmSHdnVXk1cGMwMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNJSHg4SUZNdWFYTlRhR0ZrYjNkTllYUmxjbWxoYkNCOGZDQlRMbWx6VTJoaFpHVnlUV0YwWlhKcFlXd2dKaVlnVXk1c2FXZG9kSE1nUFQwOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnZEdocGN5NW5aWFJCWTNScGRtVkRkV0psUm1GalpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJuT3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJCWTNScGRtVk5hWEJ0WVhCTVpYWmxiQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCd093b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSU1pXNWtaWEpVWVhKblpYUWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWHpzS0lDQWdJSDBzSUhSb2FYTXVjMlYwVW1WdVpHVnlWR0Z5WjJWMFZHVjRkSFZ5WlhNZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUtTQjdDaUFnSUNBZ0lDQWdSeTVuWlhRb1V5NTBaWGgwZFhKbEtTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNBOUlFNHNJRWN1WjJWMEtGTXVaR1Z3ZEdoVVpYaDBkWEpsS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU0E5SUVnN0NpQWdJQ0FnSUNBZ2JHVjBJSG9nUFNCSExtZGxkQ2hUS1RzS0lDQWdJQ0FnSUNCNkxsOWZhR0Z6UlhoMFpYSnVZV3hVWlhoMGRYSmxjeUE5SUNFd0xDQjZMbDlmYUdGelJYaDBaWEp1WVd4VVpYaDBkWEpsY3lBbUppQW9laTVmWDJGMWRHOUJiR3h2WTJGMFpVUmxjSFJvUW5WbVptVnlJRDBnU0NBOVBUMGdkbTlwWkNBd0xDQjZMbDlmWVhWMGIwRnNiRzlqWVhSbFJHVndkR2hDZFdabVpYSWdmSHdnVXk1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaWNtVnVaR1Z5TFhSdkxYUmxlSFIxY21VZ1pYaDBaVzV6YVc5dUlIZGhjeUJrYVhOaFlteGxaQ0JpWldOaGRYTmxJR0Z1SUdWNGRHVnlibUZzSUhSbGVIUjFjbVVnZDJGeklIQnliM1pwWkdWa0lpa3NJRk11ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQwZ0lURXNJRk11ZFhObFVtVnVaR1Z5WW5WbVptVnlJRDBnSVRBcEtUc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBSbkpoYldWaWRXWm1aWElnUFNCbWRXNWpkR2x2YmloVExDQk9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFZ2dQU0JITG1kbGRDaFRLVHNLSUNBZ0lDQWdJQ0JJTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lBOUlFNHNJRWd1WDE5MWMyVkVaV1poZFd4MFJuSmhiV1ZpZFdabVpYSWdQU0JPSUQwOVBTQjJiMmxrSURBN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEZKbGJtUmxjbFJoY21kbGRDQTlJR1oxYm1OMGFXOXVLRk1zSUU0Z1BTQXdMQ0JJSUQwZ01Da2dld29nSUNBZ0lDQWdJRjhnUFNCVExDQm5JRDBnVGl3Z2NDQTlJRWc3Q2lBZ0lDQWdJQ0FnYkdWMElIb2dQU0FoTURzS0lDQWdJQ0FnSUNCcFppQW9VeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZDJVZ1BTQkhMbWRsZENoVEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJVdVgxOTFjMlZFWldaaGRXeDBSbkpoYldWaWRXWm1aWElnSVQwOUlIWnZhV1FnTUNBL0lDaDRaUzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell4TmpBc0lHNTFiR3dwTENCNklEMGdJVEVwSURvZ2QyVXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlJRDA5UFNCMmIybGtJREFnUHlCcUxuTmxkSFZ3VW1WdVpHVnlWR0Z5WjJWMEtGTXBJRG9nZDJVdVgxOW9ZWE5GZUhSbGNtNWhiRlJsZUhSMWNtVnpJQ1ltSUdvdWNtVmlhVzVrVkdWNGRIVnlaWE1vVXl3Z1J5NW5aWFFvVXk1MFpYaDBkWEpsS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU3dnUnk1blpYUW9VeTVrWlhCMGFGUmxlSFIxY21VcExsOWZkMlZpWjJ4VVpYaDBkWEpsS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSEVnUFNCdWRXeHNMQ0JpWlNBOUlDRXhMQ0JCWlNBOUlDRXhPd29nSUNBZ0lDQWdJR2xtSUNoVEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNaVEVnUFNCVExuUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ2gzWlRFdWFYTkVZWFJoVkdWNGRIVnlaVE5FSUh4OElIZGxNUzVwYzBSaGRHRlVaWGgwZFhKbE1rUkJjbkpoZVNrZ0ppWWdLRUZsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTR1VnUFNCSExtZGxkQ2hUS1M1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhJN0NpQWdJQ0FnSUNBZ0lDQWdJRk11YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUWdQeUFvY1NBOUlFaGxXMDVkTENCaVpTQTlJQ0V3S1NBNklGTXVkWE5sVW1WdVpHVnlZblZtWm1WeUlEOGdjU0E5SUVjdVoyVjBLRk1wTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpQTZJSEVnUFNCSVpTd2dRUzVqYjNCNUtGTXVkbWxsZDNCdmNuUXBMQ0JNTG1OdmNIa29VeTV6WTJsemMyOXlLU3dnU1NBOUlGTXVjMk5wYzNOdmNsUmxjM1E3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRUV1WTI5d2VTaEVLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaFFLUzVtYkc5dmNpZ3BMQ0JNTG1OdmNIa29WU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9VQ2t1Wm14dmIzSW9LU3dnU1NBOUlFWTdDaUFnSUNBZ0lDQWdhV1lnS0hobExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnY1NrZ0ppWWdaMlV1WkhKaGQwSjFabVpsY25NZ0ppWWdlaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZDJVeUlEMGdJVEU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hUS1NCcFppQW9VeTVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTR1V4SUQwZ1V5NTBaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRTh1YkdWdVozUm9JQ0U5UFNCSVpURXViR1Z1WjNSb0lIeDhJRTliTUYwZ0lUMDlJRE0yTURZMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JFWlNBOUlEQXNJSHBsSUQwZ1NHVXhMbXhsYm1kMGFEc2dSR1VnUENCNlpUc2dSR1VyS3lsUFcwUmxYU0E5SURNMk1EWTBJQ3NnUkdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUeTVzWlc1bmRHZ2dQU0JJWlRFdWJHVnVaM1JvTENCM1pUSWdQU0FoTURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElDaFBMbXhsYm1kMGFDQWhQVDBnTVNCOGZDQlBXekJkSUNFOVBTQXpOakEyTkNrZ0ppWWdLRTliTUYwZ1BTQXpOakEyTkN3Z1R5NXNaVzVuZEdnZ1BTQXhMQ0IzWlRJZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnS0U4dWJHVnVaM1JvSUNFOVBTQXhJSHg4SUU5Yk1GMGdJVDA5SURFd01qa3BJQ1ltSUNoUFd6QmRJRDBnTVRBeU9Td2dUeTVzWlc1bmRHZ2dQU0F4TENCM1pUSWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSGRsTWlBbUppQW9aMlV1YVhOWFpXSkhURElnUHlCWkxtUnlZWGRDZFdabVpYSnpLRThwSURvZ2VXVXVaMlYwS0NKWFJVSkhURjlrY21GM1gySjFabVpsY25NaUtTNWtjbUYzUW5WbVptVnljMWRGUWtkTUtFOHBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIaGxMblpwWlhkd2IzSjBLRUVwTENCNFpTNXpZMmx6YzI5eUtFd3BMQ0I0WlM1elpYUlRZMmx6YzI5eVZHVnpkQ2hKS1N3Z1ltVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGRsTXlBOUlFY3VaMlYwS0ZNdWRHVjRkSFZ5WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJRmt1Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb016WXhOakFzSURNMk1EWTBMQ0F6TkRBMk9TQXJJRTRzSUhkbE15NWZYM2RsWW1kc1ZHVjRkSFZ5WlN3Z1NDazdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hCWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyVTBJRDBnUnk1blpYUW9VeTUwWlhoMGRYSmxLU3dnU0dVeUlEMGdUaUI4ZkNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JaTG1aeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlV4aGVXVnlLRE0yTVRZd0xDQXpOakEyTkN3Z2QyVTBMbDlmZDJWaVoyeFVaWGgwZFhKbExDQklJSHg4SURBc0lFaGxNaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhrZ1BTQXRNVHNLSUNBZ0lIMHNJSFJvYVhNdWNtVmhaRkpsYm1SbGNsUmhjbWRsZEZCcGVHVnNjeUE5SUdaMWJtTjBhVzl1S0ZNc0lFNHNJRWdzSUhvc0lIRXNJR0psTENCQlpTa2dld29nSUNBZ0lDQWdJR2xtSUNnaEtGTWdKaVlnVXk1cGMxZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG5KbFlXUlNaVzVrWlhKVVlYSm5aWFJRYVhobGJITTZJSEpsYm1SbGNsUmhjbWRsZENCcGN5QnViM1FnVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJRWxsSUQwZ1J5NW5aWFFvVXlrdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeU93b2dJQ0FnSUNBZ0lHbG1JQ2hUTG1selYyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBJQ1ltSUVGbElDRTlQU0IyYjJsa0lEQWdKaVlnS0VsbElEMGdTV1ZiUVdWZEtTd2dTV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdlR1V1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQkpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyVWdQU0JUTG5SbGVIUjFjbVVzSUVobElEMGdkMlV1Wm05eWJXRjBMQ0JFWlNBOUlIZGxMblI1Y0dVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9TR1VnSVQwOUlHTjBJQ1ltSUhSbExtTnZiblpsY25Rb1NHVXBJQ0U5UFNCWkxtZGxkRkJoY21GdFpYUmxjaWd6TlRjek9Ta3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG5KbFlXUlNaVzVrWlhKVVlYSm5aWFJRYVhobGJITTZJSEpsYm1SbGNsUmhjbWRsZENCcGN5QnViM1FnYVc0Z1VrZENRU0J2Y2lCcGJYQnNaVzFsYm5SaGRHbHZiaUJrWldacGJtVmtJR1p2Y20xaGRDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VtVWdQU0JFWlNBOVBUMGdhMjRnSmlZZ0tIbGxMbWhoY3lnaVJWaFVYMk52Ykc5eVgySjFabVpsY2w5b1lXeG1YMlpzYjJGMElpa2dmSHdnWjJVdWFYTlhaV0pIVERJZ0ppWWdlV1V1YUdGektDSkZXRlJmWTI5c2IzSmZZblZtWm1WeVgyWnNiMkYwSWlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRVJsSUNFOVBTQnliaUFtSmlCMFpTNWpiMjUyWlhKMEtFUmxLU0FoUFQwZ1dTNW5aWFJRWVhKaGJXVjBaWElvTXpVM016Z3BJQ1ltSUNFb1JHVWdQVDA5SUc1dUlDWW1JQ2huWlM1cGMxZGxZa2RNTWlCOGZDQjVaUzVvWVhNb0lrOUZVMTkwWlhoMGRYSmxYMlpzYjJGMElpa2dmSHdnZVdVdWFHRnpLQ0pYUlVKSFRGOWpiMnh2Y2w5aWRXWm1aWEpmWm14dllYUWlLU2twSUNZbUlDRjZaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJdWNtVmhaRkpsYm1SbGNsUmhjbWRsZEZCcGVHVnNjem9nY21WdVpHVnlWR0Z5WjJWMElHbHpJRzV2ZENCcGJpQlZibk5wWjI1bFpFSjVkR1ZVZVhCbElHOXlJR2x0Y0d4bGJXVnVkR0YwYVc5dUlHUmxabWx1WldRZ2RIbHdaUzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWkxtTm9aV05yUm5KaGJXVmlkV1ptWlhKVGRHRjBkWE1vTXpZeE5qQXBJRDA5UFNBek5qQTFNeUEvSUU0Z1BqMGdNQ0FtSmlCT0lEdzlJRk11ZDJsa2RHZ2dMU0I2SUNZbUlFZ2dQajBnTUNBbUppQklJRHc5SUZNdWFHVnBaMmgwSUMwZ2NTQW1KaUJaTG5KbFlXUlFhWGhsYkhNb1Rpd2dTQ3dnZWl3Z2NTd2dkR1V1WTI5dWRtVnlkQ2hJWlNrc0lIUmxMbU52Ym5abGNuUW9SR1VwTENCaVpTa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbkpsWVdSU1pXNWtaWEpVWVhKblpYUlFhWGhsYkhNNklISmxZV1JRYVhobGJITWdabkp2YlNCeVpXNWtaWEpVWVhKblpYUWdabUZwYkdWa0xpQkdjbUZ0WldKMVptWmxjaUJ1YjNRZ1kyOXRjR3hsZEdVdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1ptbHVZV3hzZVhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNaVEVnUFNCZklDRTlQU0J1ZFd4c0lEOGdSeTVuWlhRb1h5a3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlJRG9nYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIaGxMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z2QyVXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0lIUm9hWE11WTI5d2VVWnlZVzFsWW5WbVptVnlWRzlVWlhoMGRYSmxJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpd2dTQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnBaaUFvVGk1cGMwWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpTQWhQVDBnSVRBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nWTI5d2VVWnlZVzFsWW5WbVptVnlWRzlVWlhoMGRYSmxLQ2tnWTJGdUlHOXViSGtnWW1VZ2RYTmxaQ0IzYVhSb0lFWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpTNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdlaUE5SUUxaGRHZ3VjRzkzS0RJc0lDMUlLU3dnY1NBOUlFMWhkR2d1Wm14dmIzSW9UaTVwYldGblpTNTNhV1IwYUNBcUlIb3BMQ0JpWlNBOUlFMWhkR2d1Wm14dmIzSW9UaTVwYldGblpTNW9aV2xuYUhRZ0tpQjZLVHNLSUNBZ0lDQWdJQ0JxTG5ObGRGUmxlSFIxY21VeVJDaE9MQ0F3S1N3Z1dTNWpiM0I1VkdWNFUzVmlTVzFoWjJVeVJDZ3pOVFV6TENCSUxDQXdMQ0F3TENCVExuZ3NJRk11ZVN3Z2NTd2dZbVVwTENCNFpTNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0I5TENCMGFHbHpMbU52Y0hsVVpYaDBkWEpsVkc5VVpYaDBkWEpsSUQwZ1puVnVZM1JwYjI0b1V5d2dUaXdnU0N3Z2VpQTlJREFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdjU0E5SUU0dWFXMWhaMlV1ZDJsa2RHZ3NJR0psSUQwZ1RpNXBiV0ZuWlM1b1pXbG5hSFFzSUVGbElEMGdkR1V1WTI5dWRtVnlkQ2hJTG1admNtMWhkQ2tzSUVsbElEMGdkR1V1WTI5dWRtVnlkQ2hJTG5SNWNHVXBPd29nSUNBZ0lDQWdJR291YzJWMFZHVjRkSFZ5WlRKRUtFZ3NJREFwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRRd0xDQklMbVpzYVhCWktTd2dXUzV3YVhobGJGTjBiM0psYVNnek56UTBNU3dnU0M1d2NtVnRkV3gwYVhCc2VVRnNjR2hoS1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TXpFM0xDQklMblZ1Y0dGamEwRnNhV2R1YldWdWRDa3NJRTR1YVhORVlYUmhWR1Y0ZEhWeVpTQS9JRmt1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOVFV6TENCNkxDQlRMbmdzSUZNdWVTd2djU3dnWW1Vc0lFRmxMQ0JKWlN3Z1RpNXBiV0ZuWlM1a1lYUmhLU0E2SUU0dWFYTkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpTQS9JRmt1WTI5dGNISmxjM05sWkZSbGVGTjFZa2x0WVdkbE1rUW9NelUxTXl3Z2Vpd2dVeTU0TENCVExua3NJRTR1Yldsd2JXRndjMXN3WFM1M2FXUjBhQ3dnVGk1dGFYQnRZWEJ6V3pCZExtaGxhV2RvZEN3Z1FXVXNJRTR1Yldsd2JXRndjMXN3WFM1a1lYUmhLU0E2SUZrdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TlRVekxDQjZMQ0JUTG5nc0lGTXVlU3dnUVdVc0lFbGxMQ0JPTG1sdFlXZGxLU3dnZWlBOVBUMGdNQ0FtSmlCSUxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBbUppQlpMbWRsYm1WeVlYUmxUV2x3YldGd0tETTFOVE1wTENCNFpTNTFibUpwYm1SVVpYaDBkWEpsS0NrN0NpQWdJQ0I5TENCMGFHbHpMbU52Y0hsVVpYaDBkWEpsVkc5VVpYaDBkWEpsTTBRZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUxDQjZMQ0J4SUQwZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNoNExtbHpWMlZpUjB3eFVtVnVaR1Z5WlhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbU52Y0hsVVpYaDBkWEpsVkc5VVpYaDBkWEpsTTBRNklHTmhiaUJ2Ym14NUlHSmxJSFZ6WldRZ2QybDBhQ0JYWldKSFRESXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR0psSUQwZ1V5NXRZWGd1ZUNBdElGTXViV2x1TG5nZ0t5QXhMQ0JCWlNBOUlGTXViV0Y0TG5rZ0xTQlRMbTFwYmk1NUlDc2dNU3dnU1dVZ1BTQlRMbTFoZUM1NklDMGdVeTV0YVc0dWVpQXJJREVzSUhkbElEMGdkR1V1WTI5dWRtVnlkQ2g2TG1admNtMWhkQ2tzSUVobElEMGdkR1V1WTI5dWRtVnlkQ2g2TG5SNWNHVXBMQ0JFWlRzS0lDQWdJQ0FnSUNCcFppQW9laTVwYzBSaGRHRlVaWGgwZFhKbE0wUXBJR291YzJWMFZHVjRkSFZ5WlRORUtIb3NJREFwTENCRVpTQTlJRE15T0RjNU93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tIb3VhWE5FWVhSaFZHVjRkSFZ5WlRKRVFYSnlZWGtwSUdvdWMyVjBWR1Y0ZEhWeVpUSkVRWEp5WVhrb2Vpd2dNQ2tzSUVSbElEMGdNelU0TmpZN0NpQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2k1amIzQjVWR1Y0ZEhWeVpWUnZWR1Y0ZEhWeVpUTkVPaUJ2Ym14NUlITjFjSEJ2Y25SeklGUklVa1ZGTGtSaGRHRlVaWGgwZFhKbE0wUWdZVzVrSUZSSVVrVkZMa1JoZEdGVVpYaDBkWEpsTWtSQmNuSmhlUzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQlpMbkJwZUdWc1UzUnZjbVZwS0RNM05EUXdMQ0I2TG1ac2FYQlpLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pOelEwTVN3Z2VpNXdjbVZ0ZFd4MGFYQnNlVUZzY0doaEtTd2dXUzV3YVhobGJGTjBiM0psYVNnek16RTNMQ0I2TG5WdWNHRmphMEZzYVdkdWJXVnVkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElIcGxJRDBnV1M1blpYUlFZWEpoYldWMFpYSW9Nek14TkNrc0lHcGxJRDBnV1M1blpYUlFZWEpoYldWMFpYSW9Nekk0TnpncExDQlNiaUE5SUZrdVoyVjBVR0Z5WVcxbGRHVnlLRE16TVRZcExDQmxhU0E5SUZrdVoyVjBVR0Z5WVcxbGRHVnlLRE16TVRVcExDQkhaU0E5SUZrdVoyVjBVR0Z5WVcxbGRHVnlLRE15T0RjM0tTd2dTSFFnUFNCSUxtbHpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVWdQeUJJTG0xcGNHMWhjSE5iTUYwZ09pQklMbWx0WVdkbE93b2dJQ0FnSUNBZ0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpNeE5Dd2dTSFF1ZDJsa2RHZ3BMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXlPRGM0TENCSWRDNW9aV2xuYUhRcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNek1UWXNJRk11YldsdUxuZ3BMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXpNVFVzSUZNdWJXbHVMbmtwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE15T0RjM0xDQlRMbTFwYmk1NktTd2dTQzVwYzBSaGRHRlVaWGgwZFhKbElIeDhJRWd1YVhORVlYUmhWR1Y0ZEhWeVpUTkVJRDhnV1M1MFpYaFRkV0pKYldGblpUTkVLRVJsTENCeExDQk9MbmdzSUU0dWVTd2dUaTU2TENCaVpTd2dRV1VzSUVsbExDQjNaU3dnU0dVc0lFaDBMbVJoZEdFcElEb2dTQzVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsSUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2k1amIzQjVWR1Y0ZEhWeVpWUnZWR1Y0ZEhWeVpUTkVPaUIxYm5SbGMzUmxaQ0J6ZFhCd2IzSjBJR1p2Y2lCamIyMXdjbVZ6YzJWa0lITnlZMVJsZUhSMWNtVXVJaWtzSUZrdVkyOXRjSEpsYzNObFpGUmxlRk4xWWtsdFlXZGxNMFFvUkdVc0lIRXNJRTR1ZUN3Z1RpNTVMQ0JPTG5vc0lHSmxMQ0JCWlN3Z1NXVXNJSGRsTENCSWRDNWtZWFJoS1NrZ09pQlpMblJsZUZOMVlrbHRZV2RsTTBRb1JHVXNJSEVzSUU0dWVDd2dUaTU1TENCT0xub3NJR0psTENCQlpTd2dTV1VzSUhkbExDQklaU3dnU0hRcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNek1UUXNJSHBsS1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TWpnM09Dd2dhbVVwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE16TVRZc0lGSnVLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pNekUxTENCbGFTa3NJRmt1Y0dsNFpXeFRkRzl5Wldrb016STROemNzSUVkbEtTd2djU0E5UFQwZ01DQW1KaUI2TG1kbGJtVnlZWFJsVFdsd2JXRndjeUFtSmlCWkxtZGxibVZ5WVhSbFRXbHdiV0Z3S0VSbEtTd2dlR1V1ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ2ZTd2dkR2hwY3k1cGJtbDBWR1Y0ZEhWeVpTQTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCcUxuTmxkRlJsZUhSMWNtVXlSQ2hUTENBd0tTd2dlR1V1ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ2ZTd2dkR2hwY3k1eVpYTmxkRk4wWVhSbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnWnlBOUlEQXNJSEFnUFNBd0xDQmZJRDBnYm5Wc2JDd2dlR1V1Y21WelpYUW9LU3dnVWk1eVpYTmxkQ2dwT3dvZ0lDQWdmU3dnZEhsd1pXOW1JRjlmVkVoU1JVVmZSRVZXVkU5UFRGTmZYeUE4SUNKMUlpQW1KaUJmWDFSSVVrVkZYMFJGVmxSUFQweFRYMTh1WkdsemNHRjBZMmhGZG1WdWRDaHVaWGNnUTNWemRHOXRSWFpsYm5Rb0ltOWljMlZ5ZG1VaUxDQjdDaUFnSUNBZ0lDQWdaR1YwWVdsc09pQjBhR2x6Q2lBZ0lDQjlLU2s3Q24wS2NXVXVjSEp2ZEc5MGVYQmxMbWx6VjJWaVIweFNaVzVrWlhKbGNpQTlJQ0V3T3dwMllYSWdYMmdnUFNCamJHRnpjeUJsZUhSbGJtUnpJSEZsSUhzS2ZUc0tYMmd1Y0hKdmRHOTBlWEJsTG1selYyVmlSMHd4VW1WdVpHVnlaWElnUFNBaE1Ec0tkbUZ5SUU1eUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ0E5SURJMVpTMDFLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNBaUlpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QmhaU2hsS1N3Z2RHaHBjeTVrWlc1emFYUjVJRDBnZERzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dUbklvZEdocGN5NWpiMnh2Y2l3Z2RHaHBjeTVrWlc1emFYUjVLVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVJtOW5SWGh3TWlJc0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjBhR2x6TG1OdmJHOXlMbWRsZEVobGVDZ3BMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pXNXphWFI1T2lCMGFHbHpMbVJsYm5OcGRIa0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRcDlPd3BPY2k1d2NtOTBiM1I1Y0dVdWFYTkdiMmRGZUhBeUlEMGdJVEE3Q25aaGNpQkNjaUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXhMQ0J1SUQwZ01XVXpLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNBaUlpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QmhaU2hsS1N3Z2RHaHBjeTV1WldGeUlEMGdkQ3dnZEdocGN5NW1ZWElnUFNCdU93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJDY2loMGFHbHpMbU52Ykc5eUxDQjBhR2x6TG01bFlYSXNJSFJvYVhNdVptRnlLVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVJtOW5JaXdLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUhSb2FYTXVZMjlzYjNJdVoyVjBTR1Y0S0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsWVhJNklIUm9hWE11Ym1WaGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnWm1GeU9pQjBhR2x6TG1aaGNnb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNuMDdDa0p5TG5CeWIzUnZkSGx3WlM1cGMwWnZaeUE5SUNFd093cDJZWElnYm04Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTJObGJtVWlMQ0IwYUdsekxtSmhZMnRuY205MWJtUWdQU0J1ZFd4c0xDQjBhR2x6TG1WdWRtbHliMjV0Wlc1MElEMGdiblZzYkN3Z2RHaHBjeTVtYjJjZ1BTQnVkV3hzTENCMGFHbHpMbTkyWlhKeWFXUmxUV0YwWlhKcFlXd2dQU0J1ZFd4c0xDQjBhR2x6TG1GMWRHOVZjR1JoZEdVZ1BTQWhNQ3dnZEhsd1pXOW1JRjlmVkVoU1JVVmZSRVZXVkU5UFRGTmZYeUE4SUNKMUlpQW1KaUJmWDFSSVVrVkZYMFJGVmxSUFQweFRYMTh1WkdsemNHRjBZMmhGZG1WdWRDaHVaWGNnUTNWemRHOXRSWFpsYm5Rb0ltOWljMlZ5ZG1VaUxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUdSbGRHRnBiRG9nZEdocGN3b2dJQ0FnSUNBZ0lIMHBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXNJSFFwTENCbExtSmhZMnRuY205MWJtUWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbUZqYTJkeWIzVnVaQ0E5SUdVdVltRmphMmR5YjNWdVpDNWpiRzl1WlNncEtTd2daUzVsYm5acGNtOXViV1Z1ZENBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1bGJuWnBjbTl1YldWdWRDQTlJR1V1Wlc1MmFYSnZibTFsYm5RdVkyeHZibVVvS1Nrc0lHVXVabTluSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG1adlp5QTlJR1V1Wm05bkxtTnNiMjVsS0NrcExDQmxMbTkyWlhKeWFXUmxUV0YwWlhKcFlXd2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXViM1psY25KcFpHVk5ZWFJsY21saGJDQTlJR1V1YjNabGNuSnBaR1ZOWVhSbGNtbGhiQzVqYkc5dVpTZ3BLU3dnZEdocGN5NWhkWFJ2VlhCa1lYUmxJRDBnWlM1aGRYUnZWWEJrWVhSbExDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNCbExtMWhkSEpwZUVGMWRHOVZjR1JoZEdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnZaeUFoUFQwZ2JuVnNiQ0FtSmlBb2RDNXZZbXBsWTNRdVptOW5JRDBnZEdocGN5NW1iMmN1ZEc5S1UwOU9LQ2twTENCME93b2dJQ0FnZlFwOU93cHVieTV3Y205MGIzUjVjR1V1YVhOVFkyVnVaU0E5SUNFd093cDJZWElnSkc0Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtRnljbUY1SUQwZ1pTd2dkR2hwY3k1emRISnBaR1VnUFNCMExDQjBhR2x6TG1OdmRXNTBJRDBnWlNBaFBUMGdkbTlwWkNBd0lEOGdaUzVzWlc1bmRHZ2dMeUIwSURvZ01Dd2dkR2hwY3k1MWMyRm5aU0E5SUdoeUxDQjBhR2x6TG5Wd1pHRjBaVkpoYm1kbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFE2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJR052ZFc1ME9pQXRNUW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVkbVZ5YzJsdmJpQTlJREFzSUhSb2FYTXVkWFZwWkNBOUlFVjBLQ2s3Q2lBZ0lDQjlDaUFnSUNCdmJsVndiRzloWkVOaGJHeGlZV05yS0NrZ2UzMEtJQ0FnSUhObGRDQnVaV1ZrYzFWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ1pTQTlQVDBnSVRBZ0ppWWdkR2hwY3k1MlpYSnphVzl1S3lzN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJWYzJGblpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRYTmhaMlVnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEp5WVhrZ1BTQnVaWGNnWlM1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2lobExtRnljbUY1S1N3Z2RHaHBjeTVqYjNWdWRDQTlJR1V1WTI5MWJuUXNJSFJvYVhNdWMzUnlhV1JsSUQwZ1pTNXpkSEpwWkdVc0lIUm9hWE11ZFhOaFoyVWdQU0JsTG5WellXZGxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVVGMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQmxJQ285SUhSb2FYTXVjM1J5YVdSbExDQnVJQ285SUhRdWMzUnlhV1JsT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMGFHbHpMbk4wY21sa1pUc2dhU0E4SUhJN0lHa3JLeWwwYUdsekxtRnljbUY1VzJVZ0t5QnBYU0E5SUhRdVlYSnlZWGxiYmlBcklHbGRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGt1YzJWMEtHVXNJSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVdVlYSnlZWGxDZFdabVpYSnpJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVZWEp5WVhsQ2RXWm1aWEp6SUQwZ2UzMHBMQ0IwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpDQTlQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ0E5SUVWMEtDa3BMQ0JsTG1GeWNtRjVRblZtWm1WeWMxdDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWlM1aGNuSmhlVUoxWm1abGNuTmJkR2hwY3k1aGNuSmhlUzVpZFdabVpYSXVYM1YxYVdSZElEMGdkR2hwY3k1aGNuSmhlUzV6YkdsalpTZ3dLUzVpZFdabVpYSXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUhSb2FYTXVZWEp5WVhrdVkyOXVjM1J5ZFdOMGIzSW9aUzVoY25KaGVVSjFabVpsY25OYmRHaHBjeTVoY25KaGVTNWlkV1ptWlhJdVgzVjFhV1JkS1N3Z2JpQTlJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0hRc0lIUm9hWE11YzNSeWFXUmxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6WlhSVmMyRm5aU2gwYUdsekxuVnpZV2RsS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJRzl1VlhCc2IyRmtLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZibFZ3Ykc5aFpFTmhiR3hpWVdOcklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WVhKeVlYbENkV1ptWlhKeklEMDlQU0IyYjJsa0lEQWdKaVlnS0dVdVlYSnlZWGxDZFdabVpYSnpJRDBnZTMwcExDQjBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkNBOVBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpDQTlJRVYwS0NrcExDQmxMbUZ5Y21GNVFuVm1abVZ5YzF0MGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaRjBnUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVoY25KaGVVSjFabVpsY25OYmRHaHBjeTVoY25KaGVTNWlkV1ptWlhJdVgzVjFhV1JkSUQwZ1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG5Oc2FXTmxMbU5oYkd3b2JtVjNJRlZwYm5Rek1rRnljbUY1S0hSb2FYTXVZWEp5WVhrdVluVm1abVZ5S1NrcExDQjdDaUFnSUNBZ0lDQWdJQ0FnSUhWMWFXUTZJSFJvYVhNdWRYVnBaQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1luVm1abVZ5T2lCMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nZEdocGN5NWhjbkpoZVM1amIyNXpkSEoxWTNSdmNpNXVZVzFsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnpkSEpwWkdVNklIUm9hWE11YzNSeWFXUmxDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtmVHNLSkc0dWNISnZkRzkwZVhCbExtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSWdQU0FoTURzS2RtRnlJRXRsSUQwZ2JtVjNJRTBzSUZOdUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTQTlJQ0V4S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NWtZWFJoSUQwZ1pTd2dkR2hwY3k1cGRHVnRVMmw2WlNBOUlIUXNJSFJvYVhNdWIyWm1jMlYwSUQwZ2Jpd2dkR2hwY3k1dWIzSnRZV3hwZW1Wa0lEMGdhU0E5UFQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ1kyOTFiblFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR0YwWVM1amIzVnVkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQmhjbkpoZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJRzVsWldSelZYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1SaGRHRXVibVZsWkhOVmNHUmhkR1VnUFNCbE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1a1lYUmhMbU52ZFc1ME95QjBJRHdnYmpzZ2RDc3JLVXRsTG5nZ1BTQjBhR2x6TG1kbGRGZ29kQ2tzSUV0bExua2dQU0IwYUdsekxtZGxkRmtvZENrc0lFdGxMbm9nUFNCMGFHbHpMbWRsZEZvb2RDa3NJRXRsTG1Gd2NHeDVUV0YwY21sNE5DaGxLU3dnZEdocGN5NXpaWFJZV1Zvb2RDd2dTMlV1ZUN3Z1MyVXVlU3dnUzJVdWVpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVTV2Y20xaGJFMWhkSEpwZUNobEtTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJSFJvYVhNdVkyOTFiblE3SUhRZ1BDQnVPeUIwS3lzcFMyVXVlQ0E5SUhSb2FYTXVaMlYwV0NoMEtTd2dTMlV1ZVNBOUlIUm9hWE11WjJWMFdTaDBLU3dnUzJVdWVpQTlJSFJvYVhNdVoyVjBXaWgwS1N3Z1MyVXVZWEJ3YkhsT2IzSnRZV3hOWVhSeWFYZ29aU2tzSUhSb2FYTXVjMlYwV0ZsYUtIUXNJRXRsTG5nc0lFdGxMbmtzSUV0bExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5tYjNKdFJHbHlaV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWpiM1Z1ZERzZ2RDQThJRzQ3SUhRckt5bExaUzU0SUQwZ2RHaHBjeTVuWlhSWUtIUXBMQ0JMWlM1NUlEMGdkR2hwY3k1blpYUlpLSFFwTENCTFpTNTZJRDBnZEdocGN5NW5aWFJhS0hRcExDQkxaUzUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWlNrc0lIUm9hWE11YzJWMFdGbGFLSFFzSUV0bExuZ3NJRXRsTG5rc0lFdGxMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ29nZEdocGN5NWtZWFJoTG5OMGNtbGtaU0FySUhSb2FYTXViMlptYzJWMFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWktHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUWdLeUF4WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJhS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRZ0t5QXlYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlhLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFnS3lBelhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSWUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhSZE93b2dJQ0FnZlFvZ0lDQWdaMlYwV1NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDb2dkR2hwY3k1a1lYUmhMbk4wY21sa1pTQXJJSFJvYVhNdWIyWm1jMlYwSUNzZ01WMDdDaUFnSUNCOUNpQWdJQ0JuWlhSYUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRZ0t5QXlYVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGY29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDQXJJRE5kT3dvZ0lDQWdmUW9nSUNBZ2MyVjBXRmtvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwZ1pTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZEN3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXdYU0E5SUhRc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNVjBnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXRmxhS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQTlJR1VnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUXNJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ3NnTUYwZ1BTQjBMQ0IwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FySURGZElEMGdiaXdnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS3lBeVhTQTlJR2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdWcFhLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQTlJR1VnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUXNJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ3NnTUYwZ1BTQjBMQ0IwYUdsekxtUmhkR0V1WVhKeVlYbGJaU0FySURGZElEMGdiaXdnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS3lBeVhTQTlJR2tzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ00xMGdQU0J5TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaGxJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSWxSSVVrVkZMa2x1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxMbU5zYjI1bEtDazZJRU5zYjI1cGJtY2dZVzRnYVc1MFpYSnNZWFpsWkNCaWRXWm1aWElnWVhSMGNtbGlkWFJsSUhkcGJHd2daR1ZwYm5SbGNteGxZWFpsSUdKMVptWmxjaUJrWVhSaExpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnZEdocGN5NWpiM1Z1ZERzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdiaUFxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQjBhR2x6TG1sMFpXMVRhWHBsT3lCeUt5c3BkQzV3ZFhOb0tIUm9hWE11WkdGMFlTNWhjbkpoZVZ0cElDc2djbDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1ZXVW9ibVYzSUhSb2FYTXVZWEp5WVhrdVkyOXVjM1J5ZFdOMGIzSW9kQ2tzSUhSb2FYTXVhWFJsYlZOcGVtVXNJSFJvYVhNdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdmU0JsYkhObElISmxkSFZ5YmlCbExtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWN5QTlQVDBnZG05cFpDQXdJQ1ltSUNobExtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWN5QTlJSHQ5S1N3Z1pTNXBiblJsY214bFlYWmxaRUoxWm1abGNuTmJkR2hwY3k1a1lYUmhMblYxYVdSZElEMDlQU0IyYjJsa0lEQWdKaVlnS0dVdWFXNTBaWEpzWldGMlpXUkNkV1ptWlhKelczUm9hWE11WkdGMFlTNTFkV2xrWFNBOUlIUm9hWE11WkdGMFlTNWpiRzl1WlNobEtTa3NJRzVsZHlCVGJpaGxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljMXQwYUdsekxtUmhkR0V1ZFhWcFpGMHNJSFJvYVhNdWFYUmxiVk5wZW1Vc0lIUm9hWE11YjJabWMyVjBMQ0IwYUdsekxtNXZjbTFoYkdsNlpXUXBPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9aU0E5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NKVVNGSkZSUzVKYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaUzUwYjBwVFQwNG9LVG9nVTJWeWFXRnNhWHBwYm1jZ1lXNGdhVzUwWlhKc1lYWmxaQ0JpZFdabVpYSWdZWFIwY21saWRYUmxJSGRwYkd3Z1pHVnBiblJsY214bFlYWmxJR0oxWm1abGNpQmtZWFJoTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2dkR2hwY3k1amIzVnVkRHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JpQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENCMGFHbHpMbWwwWlcxVGFYcGxPeUJ5S3lzcGRDNXdkWE5vS0hSb2FYTXVaR0YwWVM1aGNuSmhlVnRwSUNzZ2NsMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0VTJsNlpUb2dkR2hwY3k1cGRHVnRVMmw2WlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFJvYVhNdVlYSnlZWGt1WTI5dWMzUnlkV04wYjNJdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y21GNU9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc2FYcGxaRG9nZEdocGN5NXViM0p0WVd4cGVtVmtDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5Y3lBOVBUMGdkbTlwWkNBd0lDWW1JQ2hsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5Y3lBOUlIdDlLU3dnWlM1cGJuUmxjbXhsWVhabFpFSjFabVpsY25OYmRHaHBjeTVrWVhSaExuVjFhV1JkSUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6VzNSb2FYTXVaR0YwWVM1MWRXbGtYU0E5SUhSb2FYTXVaR0YwWVM1MGIwcFRUMDRvWlNrcExDQjdDaUFnSUNBZ0lDQWdJQ0FnSUdselNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCcGRHVnRVMmw2WlRvZ2RHaHBjeTVwZEdWdFUybDZaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nZEdocGN5NWtZWFJoTG5WMWFXUXNDaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRG9nZEdocGN5NXZabVp6WlhRc0NpQWdJQ0FnSUNBZ0lDQWdJRzV2Y20xaGJHbDZaV1E2SUhSb2FYTXVibTl5YldGc2FYcGxaQW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDbjA3Q2xOdUxuQnliM1J2ZEhsd1pTNXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxJRDBnSVRBN0NuWmhjaUJwYnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTNCeWFYUmxUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1eWIzUmhkR2x2YmlBOUlEQXNJSFJvYVhNdWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwZ0lUQXNJSFJvYVhNdWRISmhibk53WVhKbGJuUWdQU0FoTUN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsekxtMWhjQ0E5SUdVdWJXRndMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdaUzVoYkhCb1lVMWhjQ3dnZEdocGN5NXliM1JoZEdsdmJpQTlJR1V1Y205MFlYUnBiMjRzSUhSb2FYTXVjMmw2WlVGMGRHVnVkV0YwYVc5dUlEMGdaUzV6YVhwbFFYUjBaVzUxWVhScGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NtbHZMbkJ5YjNSdmRIbHdaUzVwYzFOd2NtbDBaVTFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJuYVN3Z1VXa2dQU0J1WlhjZ1RTd2dlR2tnUFNCdVpYY2dUU3dnZVdrZ1BTQnVaWGNnVFN3Z2Rta2dQU0J1WlhjZ1dDd2dTMmtnUFNCdVpYY2dXQ3dnVFdnZ1BTQnVaWGNnY0dVc0lHaHpJRDBnYm1WM0lFMHNJR1Z5SUQwZ2JtVjNJRTBzSUhWeklEMGdibVYzSUUwc0lHcHNJRDBnYm1WM0lGZ3NJSEZ2SUQwZ2JtVjNJRmdzSUZGc0lEMGdibVYzSUZnc0lISnZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5SNWNHVWdQU0FpVTNCeWFYUmxJaXdnWjJrZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCbmFTQTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB1TlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUMwdU5Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTFM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1TlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDMHVOU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ0lDQWdJRjBwTENCdUlEMGdibVYzSUNSdUtIUXNJRFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm5hUzV6WlhSSmJtUmxlQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lETUtJQ0FnSUNBZ0lDQWdJQ0FnWFNrc0lHZHBMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnVTI0b2Jpd2dNeXdnTUN3Z0lURXBLU3dnWjJrdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJUYmlodUxDQXlMQ0F6TENBaE1Ta3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxtZGxiMjFsZEhKNUlEMGdaMmtzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0JsSUNFOVBTQjJiMmxrSURBZ1B5QmxJRG9nYm1WM0lHbHZMQ0IwYUdsekxtTmxiblJsY2lBOUlHNWxkeUJZS0M0MUxDQXVOU2s3Q2lBZ0lDQjlDaUFnSUNCeVlYbGpZWE4wS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JsTG1OaGJXVnlZU0E5UFQwZ2JuVnNiQ0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ2RVU0ZKRlJTNVRjSEpwZEdVNklDSlNZWGxqWVhOMFpYSXVZMkZ0WlhKaElpQnVaV1ZrY3lCMGJ5QmlaU0J6WlhRZ2FXNGdiM0prWlhJZ2RHOGdjbUY1WTJGemRDQmhaMkZwYm5OMElITndjbWwwWlhNdUp5a3NJSGhwTG5ObGRFWnliMjFOWVhSeWFYaFRZMkZzWlNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3Z1RXZ3VZMjl3ZVNobExtTmhiV1Z5WVM1dFlYUnlhWGhYYjNKc1pDa3NJSFJvYVhNdWJXOWtaV3hXYVdWM1RXRjBjbWw0TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vWlM1allXMWxjbUV1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3Z2VXa3VjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hSb2FYTXViVzlrWld4V2FXVjNUV0YwY21sNEtTd2daUzVqWVcxbGNtRXVhWE5RWlhKemNHVmpkR2wyWlVOaGJXVnlZU0FtSmlCMGFHbHpMbTFoZEdWeWFXRnNMbk5wZW1WQmRIUmxiblZoZEdsdmJpQTlQVDBnSVRFZ0ppWWdlR2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MWGxwTG5vcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV0WVhSbGNtbGhiQzV5YjNSaGRHbHZiaXdnYVN3Z2Nqc0tJQ0FnSUNBZ0lDQnVJQ0U5UFNBd0lDWW1JQ2h5SUQwZ1RXRjBhQzVqYjNNb2Jpa3NJR2tnUFNCTllYUm9Mbk5wYmlodUtTazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TG1ObGJuUmxjanNLSUNBZ0lDQWdJQ0JrY3lob2N5NXpaWFFvTFM0MUxDQXRMalVzSURBcExDQjVhU3dnYnl3Z2VHa3NJR2tzSUhJcExDQmtjeWhsY2k1elpYUW9MalVzSUMwdU5Td2dNQ2tzSUhscExDQnZMQ0I0YVN3Z2FTd2djaWtzSUdSektIVnpMbk5sZENndU5Td2dMalVzSURBcExDQjVhU3dnYnl3Z2VHa3NJR2tzSUhJcExDQnFiQzV6WlhRb01Dd2dNQ2tzSUhGdkxuTmxkQ2d4TENBd0tTd2dVV3d1YzJWMEtERXNJREVwT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnWlM1eVlYa3VhVzUwWlhKelpXTjBWSEpwWVc1bmJHVW9hSE1zSUdWeUxDQjFjeXdnSVRFc0lGRnBLVHNLSUNBZ0lDQWdJQ0JwWmlBb1lTQTlQVDBnYm5Wc2JDQW1KaUFvWkhNb1pYSXVjMlYwS0MwdU5Td2dMalVzSURBcExDQjVhU3dnYnl3Z2VHa3NJR2tzSUhJcExDQnhieTV6WlhRb01Dd2dNU2tzSUdFZ1BTQmxMbkpoZVM1cGJuUmxjbk5sWTNSVWNtbGhibWRzWlNob2N5d2dkWE1zSUdWeUxDQWhNU3dnVVdrcExDQmhJRDA5UFNCdWRXeHNLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdaUzV5WVhrdWIzSnBaMmx1TG1ScGMzUmhibU5sVkc4b1VXa3BPd29nSUNBZ0lDQWdJR3dnUENCbExtNWxZWElnZkh3Z2JDQStJR1V1Wm1GeUlIeDhJSFF1Y0hWemFDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdScGMzUmhibU5sT2lCc0xBb2dJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWREb2dVV2t1WTJ4dmJtVW9LU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYWTZJRzUwTG1kbGRGVldLRkZwTENCb2N5d2daWElzSUhWekxDQnFiQ3dnY1c4c0lGRnNMQ0J1WlhjZ1dDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdaaFkyVTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2dkR2hwY3dvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUdVdVkyVnVkR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdkR2hwY3k1alpXNTBaWEl1WTI5d2VTaGxMbU5sYm5SbGNpa3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQmxMbTFoZEdWeWFXRnNMQ0IwYUdsek93b2dJQ0FnZlFwOU93cHlieTV3Y205MGIzUjVjR1V1YVhOVGNISnBkR1VnUFNBaE1Ec0tablZ1WTNScGIyNGdaSE1vY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdkbWt1YzNWaVZtVmpkRzl5Y3loekxDQjBLUzVoWkdSVFkyRnNZWElvTGpVcExtMTFiSFJwY0d4NUtHNHBMQ0JwSUNFOVBTQjJiMmxrSURBZ1B5QW9TMmt1ZUNBOUlISWdLaUIyYVM1NElDMGdhU0FxSUhacExua3NJRXRwTG5rZ1BTQnBJQ29nZG1rdWVDQXJJSElnS2lCMmFTNTVLU0E2SUV0cExtTnZjSGtvZG1rcExDQnpMbU52Y0hrb1pTa3NJSE11ZUNBclBTQkxhUzU0TENCekxua2dLejBnUzJrdWVTd2djeTVoY0hCc2VVMWhkSEpwZURRb1RXZ3BPd3A5Q25aaGNpQm1jeUE5SUc1bGR5Qk5MQ0JMYkNBOUlHNWxkeUJOTENCaWFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVgyTjFjbkpsYm5STVpYWmxiQ0E5SURBc0lIUm9hWE11ZEhsd1pTQTlJQ0pNVDBRaUxDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loMGFHbHpMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkbVZzY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNTFiV1Z5WVdKc1pUb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVhOTVQwUTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQWhNQW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdVlYVjBiMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1WTI5d2VTaGxMQ0FoTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExteGxkbVZzY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSYmJsMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZV1JrVEdWMlpXd29jaTV2WW1wbFkzUXVZMnh2Ym1Vb0tTd2djaTVrYVhOMFlXNWpaU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRjFkRzlWY0dSaGRHVWdQU0JsTG1GMWRHOVZjR1JoZEdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUk1aWFpsYkNobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lIUWdQU0JOWVhSb0xtRmljeWgwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXViR1YyWld4ekxDQnBPd29nSUNBZ0lDQWdJR1p2Y2locElEMGdNRHNnYVNBOElHNHViR1Z1WjNSb0lDWW1JQ0VvZENBOElHNWJhVjB1WkdsemRHRnVZMlVwT3lCcEt5c3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbk53YkdsalpTaHBMQ0F3TENCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklHVUtJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NWhaR1FvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRkWEp5Wlc1MFRHVjJaV3dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMk4xY25KbGJuUk1aWFpsYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRTlpYW1WamRFWnZja1JwYzNSaGJtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXViR1YyWld4ek93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNHNJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWh1SUQwZ01Td2dhU0E5SUhRdWJHVnVaM1JvT3lCdUlEd2dhU0FtSmlBaEtHVWdQQ0IwVzI1ZExtUnBjM1JoYm1ObEtUc2diaXNyS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUmJiaUF0SURGZExtOWlhbVZqZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNCOUNpQWdJQ0J5WVhsallYTjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXNaWFpsYkhNdWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCbWN5NXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXlZWGt1YjNKcFoybHVMbVJwYzNSaGJtTmxWRzhvWm5NcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRTlpYW1WamRFWnZja1JwYzNSaGJtTmxLR2twTG5KaGVXTmhjM1FvWlN3Z2RDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXViR1YyWld4ek93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG14bGJtZDBhQ0ErSURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm5NdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLR1V1YldGMGNtbDRWMjl5YkdRcExDQkxiQzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdabk11WkdsemRHRnVZMlZVYnloTGJDa2dMeUJsTG5wdmIyMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSYk1GMHViMkpxWldOMExuWnBjMmxpYkdVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tzSUhJN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2locElEMGdNU3dnY2lBOUlIUXViR1Z1WjNSb095QnBJRHdnY2lBbUppQnVJRDQ5SUhSYmFWMHVaR2x6ZEdGdVkyVTdJR2tyS3lsMFcya2dMU0F4WFM1dlltcGxZM1F1ZG1semFXSnNaU0E5SUNFeExDQjBXMmxkTG05aWFtVmpkQzUyYVhOcFlteGxJRDBnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loMGFHbHpMbDlqZFhKeVpXNTBUR1YyWld3Z1BTQnBJQzBnTVRzZ2FTQThJSEk3SUdrckt5bDBXMmxkTG05aWFtVmpkQzUyYVhOcFlteGxJRDBnSVRFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSE4xY0dWeUxuUnZTbE5QVGlobEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1GMWRHOVZjR1JoZEdVZ1BUMDlJQ0V4SUNZbUlDaDBMbTlpYW1WamRDNWhkWFJ2VlhCa1lYUmxJRDBnSVRFcExDQjBMbTlpYW1WamRDNXNaWFpsYkhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWJHVjJaV3h6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCdUxteGxibWQwYURzZ2FTQThJSEk3SUdrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYmx0cFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1dlltcGxZM1F1YkdWMlpXeHpMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IySnFaV04wT2lCdkxtOWlhbVZqZEM1MWRXbGtMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJRzh1WkdsemRHRnVZMlVLSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRcDlMQ0JsWXlBOUlHNWxkeUJOTENCMFl5QTlJRzVsZHlCV1pTd2dibU1nUFNCdVpYY2dWbVVzSUZKNElEMGdibVYzSUUwc0lHbGpJRDBnYm1WM0lIQmxMQ0J6YnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nYzNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZENrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbE5yYVc1dVpXUk5aWE5vSWl3Z2RHaHBjeTVpYVc1a1RXOWtaU0E5SUNKaGRIUmhZMmhsWkNJc0lIUm9hWE11WW1sdVpFMWhkSEpwZUNBOUlHNWxkeUJ3WlN3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0U1c1MlpYSnpaU0E5SUc1bGR5QndaVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1KcGJtUk5iMlJsSUQwZ1pTNWlhVzVrVFc5a1pTd2dkR2hwY3k1aWFXNWtUV0YwY21sNExtTnZjSGtvWlM1aWFXNWtUV0YwY21sNEtTd2dkR2hwY3k1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLR1V1WW1sdVpFMWhkSEpwZUVsdWRtVnljMlVwTENCMGFHbHpMbk5yWld4bGRHOXVJRDBnWlM1emEyVnNaWFJ2Yml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdKcGJtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YzJ0bGJHVjBiMjRnUFNCbExDQjBJRDA5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvSVRBcExDQjBhR2x6TG5OclpXeGxkRzl1TG1OaGJHTjFiR0YwWlVsdWRtVnljMlZ6S0Nrc0lIUWdQU0IwYUdsekxtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NWlhVzVrVFdGMGNtbDRMbU52Y0hrb2RDa3NJSFJvYVhNdVltbHVaRTFoZEhKcGVFbHVkbVZ5YzJVdVkyOXdlU2gwS1M1cGJuWmxjblFvS1RzS0lDQWdJSDBLSUNBZ0lIQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6YTJWc1pYUnZiaTV3YjNObEtDazdDaUFnSUNCOUNpQWdJQ0J1YjNKdFlXeHBlbVZUYTJsdVYyVnBaMmgwY3lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlHNWxkeUJXWlN3Z2RDQTlJSFJvYVhNdVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN5NXphMmx1VjJWcFoyaDBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG1OdmRXNTBPeUJ1SUR3Z2FUc2diaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdaUzU0SUQwZ2RDNW5aWFJZS0c0cExDQmxMbmtnUFNCMExtZGxkRmtvYmlrc0lHVXVlaUE5SUhRdVoyVjBXaWh1S1N3Z1pTNTNJRDBnZEM1blpYUlhLRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlERWdMeUJsTG0xaGJtaGhkSFJoYmt4bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJQ0U5UFNBeElDOGdNQ0EvSUdVdWJYVnNkR2x3YkhsVFkyRnNZWElvY2lrZ09pQmxMbk5sZENneExDQXdMQ0F3TENBd0tTd2dkQzV6WlhSWVdWcFhLRzRzSUdVdWVDd2daUzU1TENCbExub3NJR1V1ZHlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwTENCMGFHbHpMbUpwYm1STmIyUmxJRDA5UFNBaVlYUjBZV05vWldRaUlEOGdkR2hwY3k1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BJRG9nZEdocGN5NWlhVzVrVFc5a1pTQTlQVDBnSW1SbGRHRmphR1ZrSWlBL0lIUm9hWE11WW1sdVpFMWhkSEpwZUVsdWRtVnljMlV1WTI5d2VTaDBhR2x6TG1KcGJtUk5ZWFJ5YVhncExtbHVkbVZ5ZENncElEb2dZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVUYTJsdWJtVmtUV1Z6YURvZ1ZXNXlaV052WjI1cGVtVmtJR0pwYm1STmIyUmxPaUFpSUNzZ2RHaHBjeTVpYVc1a1RXOWtaU2s3Q2lBZ0lDQjlDaUFnSUNCaWIyNWxWSEpoYm5ObWIzSnRLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11YzJ0bGJHVjBiMjRzSUdrZ1BTQjBhR2x6TG1kbGIyMWxkSEo1T3dvZ0lDQWdJQ0FnSUhSakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hUzVoZEhSeWFXSjFkR1Z6TG5OcmFXNUpibVJsZUN3Z1pTa3NJRzVqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTNWhkSFJ5YVdKMWRHVnpMbk5yYVc1WFpXbG5hSFFzSUdVcExDQmxZeTVqYjNCNUtIUXBMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpMbUpwYm1STllYUnlhWGdwTENCMExuTmxkQ2d3TENBd0xDQXdLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd095QnlJRHdnTkRzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCdVl5NW5aWFJEYjIxd2IyNWxiblFvY2lrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodklDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSakxtZGxkRU52YlhCdmJtVnVkQ2h5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsakxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2JpNWliMjVsYzF0aFhTNXRZWFJ5YVhoWGIzSnNaQ3dnYmk1aWIyNWxTVzUyWlhKelpYTmJZVjBwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loU2VDNWpiM0I1S0dWaktTNWhjSEJzZVUxaGRISnBlRFFvYVdNcExDQnZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWhjSEJzZVUxaGRISnBlRFFvZEdocGN5NWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTazdDaUFnSUNCOUNuMDdDbk52TG5CeWIzUnZkSGx3WlM1cGMxTnJhVzV1WldSTlpYTm9JRDBnSVRBN0NuWmhjaUJ2YnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pDYjI1bElqc0tJQ0FnSUgwS2ZUc0tiMjh1Y0hKdmRHOTBlWEJsTG1selFtOXVaU0E5SUNFd093cDJZWElnY1c0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5MElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1ZFd4c0xDQjBJRDBnTVN3Z2JpQTlJREVzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01nUFNCeWRDd2dhQ0E5SUhKMExDQjFMQ0JrS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1ZFd4c0xDQnZMQ0JoTENCc0xDQmpMQ0JvTENCcExDQnlMQ0IxTENCa0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCdUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1dFlXZEdhV3gwWlhJZ1BTQmpMQ0IwYUdsekxtMXBia1pwYkhSbGNpQTlJR2dzSUhSb2FYTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdJVEVzSUhSb2FYTXVabXhwY0ZrZ1BTQWhNU3dnZEdocGN5NTFibkJoWTJ0QmJHbG5ibTFsYm5RZ1BTQXhPd29nSUNBZ2ZRcDlPd3B4Ymk1d2NtOTBiM1I1Y0dVdWFYTkVZWFJoVkdWNGRIVnlaU0E5SUNFd093cDJZWElnY21NZ1BTQnVaWGNnY0dVc0lGQjRJRDBnYm1WM0lIQmxMQ0JoYnlBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJYU3dnZENBOUlGdGRLWHNLSUNBZ0lDQWdJQ0IwYUdsekxuVjFhV1FnUFNCRmRDZ3BMQ0IwYUdsekxtSnZibVZ6SUQwZ1pTNXpiR2xqWlNnd0tTd2dkR2hwY3k1aWIyNWxTVzUyWlhKelpYTWdQU0IwTENCMGFHbHpMbUp2Ym1WTllYUnlhV05sY3lBOUlHNTFiR3dzSUhSb2FYTXVZbTl1WlZSbGVIUjFjbVVnUFNCdWRXeHNMQ0IwYUdsekxtSnZibVZVWlhoMGRYSmxVMmw2WlNBOUlEQXNJSFJvYVhNdVpuSmhiV1VnUFNBdE1Td2dkR2hwY3k1cGJtbDBLQ2s3Q2lBZ0lDQjlDaUFnSUNCcGJtbDBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWliMjVsY3l3Z2RDQTlJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbUp2Ym1WTllYUnlhV05sY3lBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1pTNXNaVzVuZEdnZ0tpQXhOaWtzSUhRdWJHVnVaM1JvSUQwOVBTQXdLU0IwYUdsekxtTmhiR04xYkdGMFpVbHVkbVZ5YzJWektDazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9aUzVzWlc1bmRHZ2dJVDA5SUhRdWJHVnVaM1JvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VTJ0bGJHVjBiMjQ2SUU1MWJXSmxjaUJ2WmlCcGJuWmxjbk5sSUdKdmJtVWdiV0YwY21salpYTWdaRzlsY3lCdWIzUWdiV0YwWTJnZ1lXMXZkVzUwSUc5bUlHSnZibVZ6TGlJcExDQjBhR2x6TG1KdmJtVkpiblpsY25ObGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkR2hwY3k1aWIyNWxjeTVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZEdocGN5NWliMjVsU1c1MlpYSnpaWE11Y0hWemFDaHVaWGNnY0dVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05oYkdOMWJHRjBaVWx1ZG1WeWMyVnpLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZbTl1WlVsdWRtVnljMlZ6TG14bGJtZDBhQ0E5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbElEMGdNQ3dnZENBOUlIUm9hWE11WW05dVpYTXViR1Z1WjNSb095QmxJRHdnZERzZ1pTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCdVpYY2djR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WW05dVpYTmJaVjBnSmlZZ2JpNWpiM0I1S0hSb2FYTXVZbTl1WlhOYlpWMHViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3k1d2RYTm9LRzRwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lIQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbElEMGdNQ3dnZENBOUlIUm9hWE11WW05dVpYTXViR1Z1WjNSb095QmxJRHdnZERzZ1pTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbUp2Ym1WelcyVmRPd29nSUNBZ0lDQWdJQ0FnSUNCdUlDWW1JRzR1YldGMGNtbDRWMjl5YkdRdVkyOXdlU2gwYUdsekxtSnZibVZKYm5abGNuTmxjMXRsWFNrdWFXNTJaWEowS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pURWdQU0F3TENCME1TQTlJSFJvYVhNdVltOXVaWE11YkdWdVozUm9PeUJsTVNBOElIUXhPeUJsTVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNHhJRDBnZEdocGN5NWliMjVsYzF0bE1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUc0eElDWW1JQ2h1TVM1d1lYSmxiblFnSmlZZ2JqRXVjR0Z5Wlc1MExtbHpRbTl1WlNBL0lDaHVNUzV0WVhSeWFYZ3VZMjl3ZVNodU1TNXdZWEpsYm5RdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BMQ0J1TVM1dFlYUnlhWGd1YlhWc2RHbHdiSGtvYmpFdWJXRjBjbWw0VjI5eWJHUXBLU0E2SUc0eExtMWhkSEpwZUM1amIzQjVLRzR4TG0xaGRISnBlRmR2Y214a0tTd2diakV1YldGMGNtbDRMbVJsWTI5dGNHOXpaU2h1TVM1d2IzTnBkR2x2Yml3Z2JqRXVjWFZoZEdWeWJtbHZiaXdnYmpFdWMyTmhiR1VwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1KdmJtVnpMQ0IwSUQwZ2RHaHBjeTVpYjI1bFNXNTJaWEp6WlhNc0lHNGdQU0IwYUdsekxtSnZibVZOWVhSeWFXTmxjeXdnYVNBOUlIUm9hWE11WW05dVpWUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHVXViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCbFczSmRJRDhnWlZ0eVhTNXRZWFJ5YVhoWGIzSnNaQ0E2SUZCNE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WXk1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0dFc0lIUmJjbDBwTENCeVl5NTBiMEZ5Y21GNUtHNHNJSElnS2lBeE5pazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2tnSVQwOUlHNTFiR3dnSmlZZ0tHa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1DazdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUdGdktIUm9hWE11WW05dVpYTXNJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJYQjFkR1ZDYjI1bFZHVjRkSFZ5WlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlFMWhkR2d1YzNGeWRDaDBhR2x6TG1KdmJtVnpMbXhsYm1kMGFDQXFJRFFwT3dvZ0lDQWdJQ0FnSUdVZ1BTQllZeWhsS1N3Z1pTQTlJRTFoZEdndWJXRjRLR1VzSURRcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNobElDb2daU0FxSURRcE93b2dJQ0FnSUNBZ0lIUXVjMlYwS0hSb2FYTXVZbTl1WlUxaGRISnBZMlZ6S1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc1bGR5QnhiaWgwTENCbExDQmxMQ0JqZEN3Z2JtNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdVltOXVaVTFoZEhKcFkyVnpJRDBnZEN3Z2RHaHBjeTVpYjI1bFZHVjRkSFZ5WlNBOUlHNHNJSFJvYVhNdVltOXVaVlJsZUhSMWNtVlRhWHBsSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRUp2Ym1WQ2VVNWhiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1KdmJtVnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVpYjI1bGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2t1Ym1GdFpTQTlQVDBnWlNrZ2NtVjBkWEp1SUdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtSnZibVZVWlhoMGRYSmxJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbUp2Ym1WVVpYaDBkWEpsTG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVpYjI1bFZHVjRkSFZ5WlNBOUlHNTFiR3dwT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkWFZwWkNBOUlHVXVkWFZwWkRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ1pTNWliMjVsY3k1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1V1WW05dVpYTmJibDBzSUc4Z1BTQjBXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZJRDA5UFNCMmIybGtJREFnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVMnRsYkdWMGIyNDZJRTV2SUdKdmJtVWdabTkxYm1RZ2QybDBhQ0JWVlVsRU9pSXNJSElwTENCdklEMGdibVYzSUc5dktTd2dkR2hwY3k1aWIyNWxjeTV3ZFhOb0tHOHBMQ0IwYUdsekxtSnZibVZKYm5abGNuTmxjeTV3ZFhOb0tHNWxkeUJ3WlNncExtWnliMjFCY25KaGVTaGxMbUp2Ym1WSmJuWmxjbk5sYzF0dVhTa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJtbDBLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWxkR0ZrWVhSaE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEp6YVc5dU9pQTBMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlVMnRsYkdWMGIyNGlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHOXlPaUFpVTJ0bGJHVjBiMjR1ZEc5S1UwOU9JZ29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JpYjI1bGN6b2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHSnZibVZKYm5abGNuTmxjem9nVzEwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHVXVkWFZwWkNBOUlIUm9hWE11ZFhWcFpEc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WW05dVpYTXNJRzRnUFNCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ2RDNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVltOXVaWE11Y0hWemFDaHZMblYxYVdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzViYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1WW05dVpVbHVkbVZ5YzJWekxuQjFjMmdvWVM1MGIwRnljbUY1S0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS2ZTd2dXRzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0IwZVhCbGIyWWdiaUE5UFNBaWJuVnRZbVZ5SWlBbUppQW9hU0E5SUc0c0lHNGdQU0FoTVN3Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVTVzV6ZEdGdVkyVmtRblZtWm1WeVFYUjBjbWxpZFhSbE9pQlVhR1VnWTI5dWMzUnlkV04wYjNJZ2JtOTNJR1Y0Y0dWamRITWdibTl5YldGc2FYcGxaQ0JoY3lCMGFHVWdkR2hwY21RZ1lYSm5kVzFsYm5RdUlpa3BPd29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0cE93b2dJQ0FnSUNBZ0lIUm9hWE11YldWemFGQmxja0YwZEhKcFluVjBaU0E5SUdrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXRaWE5vVUdWeVFYUjBjbWxpZFhSbElEMGdaUzV0WlhOb1VHVnlRWFIwY21saWRYUmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlNBOUlIUm9hWE11YldWemFGQmxja0YwZEhKcFluVjBaU3dnWlM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tGMGRISnBZblYwWlNBOUlDRXdMQ0JsT3dvZ0lDQWdmUXA5T3dwWWJpNXdjbTkwYjNSNWNHVXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdQU0FoTURzS2RtRnlJSE5qSUQwZ2JtVjNJSEJsTENCdll5QTlJRzVsZHlCd1pTd2djSE1nUFNCYlhTd2dkSElnUFNCdVpYY2djM1FzSUhoaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCemRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVjM1JoYm1ObFRXRjBjbWw0SUQwZ2JtVjNJRmh1S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvYmlBcUlERTJLU3dnTVRZcExDQjBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSWdQU0J1ZFd4c0xDQjBhR2x6TG1OdmRXNTBJRDBnYml3Z2RHaHBjeTVtY25WemRIVnRRM1ZzYkdWa0lEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzVqYjNCNUtHVXVhVzV6ZEdGdVkyVk5ZWFJ5YVhncExDQmxMbWx1YzNSaGJtTmxRMjlzYjNJZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdWFXNXpkR0Z1WTJWRGIyeHZjaUE5SUdVdWFXNXpkR0Z1WTJWRGIyeHZjaTVqYkc5dVpTZ3BLU3dnZEdocGN5NWpiM1Z1ZENBOUlHVXVZMjkxYm5Rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRiMnh2Y2tGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMExtWnliMjFCY25KaGVTaDBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSXVZWEp5WVhrc0lHVWdLaUF6S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZEhKcGVFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMbVp5YjIxQmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFRXRjBjbWw0TG1GeWNtRjVMQ0JsSUNvZ01UWXBPd29nSUNBZ2ZRb2dJQ0FnY21GNVkyRnpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG0xaGRISnBlRmR2Y214a0xDQnBJRDBnZEdocGN5NWpiM1Z1ZERzS0lDQWdJQ0FnSUNCcFppQW9kSEl1WjJWdmJXVjBjbmtnUFNCMGFHbHpMbWRsYjIxbGRISjVMQ0IwY2k1dFlYUmxjbWxoYkNBOUlIUm9hWE11YldGMFpYSnBZV3dzSUhSeUxtMWhkR1Z5YVdGc0lDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0JwT3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEUxaGRISnBlRUYwS0hJc0lITmpLU3dnYjJNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lodUxDQnpZeWtzSUhSeUxtMWhkSEpwZUZkdmNteGtJRDBnYjJNc0lIUnlMbkpoZVdOaGMzUW9aU3dnY0hNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd0xDQmhJRDBnY0hNdWJHVnVaM1JvT3lCdklEd2dZVHNnYnlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2NITmJiMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzTG1sdWMzUmhibU5sU1dRZ1BTQnlMQ0JzTG05aWFtVmpkQ0E5SUhSb2FYTXNJSFF1Y0hWemFDaHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J3Y3k1c1pXNW5kR2dnUFNBd093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE5sZEVOdmJHOXlRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFXNXpkR0Z1WTJWRGIyeHZjaUE5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVwYm5OMFlXNWpaVU52Ykc5eUlEMGdibVYzSUZodUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2RHaHBjeTVwYm5OMFlXNWpaVTFoZEhKcGVDNWpiM1Z1ZENBcUlETXBMQ0F6S1Nrc0lIUXVkRzlCY25KaGVTaDBhR2x6TG1sdWMzUmhibU5sUTI5c2IzSXVZWEp5WVhrc0lHVWdLaUF6S1RzS0lDQWdJSDBLSUNBZ0lITmxkRTFoZEhKcGVFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMblJ2UVhKeVlYa29kR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzVoY25KaGVTd2daU0FxSURFMktUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwSUh0OUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSmthWE53YjNObElnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRcDlPd3A0WVM1d2NtOTBiM1I1Y0dVdWFYTkpibk4wWVc1alpXUk5aWE5vSUQwZ0lUQTdDblpoY2lCbWRDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVUpoYzJsalRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXNhVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbXhwYm1WallYQWdQU0FpY205MWJtUWlMQ0IwYUdsekxteHBibVZxYjJsdUlEMGdJbkp2ZFc1a0lpd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbXhwYm1WM2FXUjBhQ0E5SUdVdWJHbHVaWGRwWkhSb0xDQjBhR2x6TG14cGJtVmpZWEFnUFNCbExteHBibVZqWVhBc0lIUm9hWE11YkdsdVpXcHZhVzRnUFNCbExteHBibVZxYjJsdUxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwbWRDNXdjbTkwYjNSNWNHVXVhWE5NYVc1bFFtRnphV05OWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnWVdNZ1BTQnVaWGNnVFN3Z2JHTWdQU0J1WlhjZ1RTd2dZMk1nUFNCdVpYY2djR1VzSUZodklEMGdibVYzSUVOdUxDQnRjeUE5SUc1bGR5QkJiaXdnYjI0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1gyVXNJSFFnUFNCdVpYY2dablFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lreHBibVVpTENCMGFHbHpMbWRsYjIxbGRISjVJRDBnWlN3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUhRc0lIUm9hWE11ZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXRZWFJsY21saGJDQTlJR1V1YldGMFpYSnBZV3dzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTG1kbGIyMWxkSEo1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVXhwYm1WRWFYTjBZVzVqWlhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1kbGIyMWxkSEo1T3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BJR2xtSUNobExtbHVaR1Y0SUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCdUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQW9nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBeExDQnlJRDBnZEM1amIzVnVkRHNnYVNBOElISTdJR2tyS3lsaFl5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFFzSUdrZ0xTQXhLU3dnYkdNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBMQ0JwS1N3Z2JsdHBYU0E5SUc1YmFTQXRJREZkTENCdVcybGRJQ3M5SUdGakxtUnBjM1JoYm1ObFZHOG9iR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbk5sZEVGMGRISnBZblYwWlNnaWJHbHVaVVJwYzNSaGJtTmxJaXdnYm1WM0lHUmxLRzRzSURFcEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hVzVsTG1OdmJYQjFkR1ZNYVc1bFJHbHpkR0Z1WTJWektDazZJRU52YlhCMWRHRjBhVzl1SUc5dWJIa2djRzl6YzJsaWJHVWdkMmwwYUNCdWIyNHRhVzVrWlhobFpDQkNkV1ptWlhKSFpXOXRaWFJ5ZVM0aUtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdVdWFYTkhaVzl0WlhSeWVTQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TWFXNWxMbU52YlhCMWRHVk1hVzVsUkdsemRHRnVZMlZ6S0NrZ2JtOGdiRzl1WjJWeUlITjFjSEJ2Y25SeklGUklVa1ZGTGtkbGIyMWxkSEo1TGlCVmMyVWdWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEpoZVdOaGMzUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnYVNBOUlIUm9hWE11YldGMGNtbDRWMjl5YkdRc0lISWdQU0JsTG5CaGNtRnRjeTVNYVc1bExuUm9jbVZ6YUc5c1pDd2dieUE5SUc0dVpISmhkMUpoYm1kbE93b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1KdmRXNWthVzVuVTNCb1pYSmxJRDA5UFNCdWRXeHNJQ1ltSUc0dVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2tzSUcxekxtTnZjSGtvYmk1aWIzVnVaR2x1WjFOd2FHVnlaU2tzSUcxekxtRndjR3g1VFdGMGNtbDROQ2hwS1N3Z2JYTXVjbUZrYVhWeklDczlJSElzSUdVdWNtRjVMbWx1ZEdWeWMyVmpkSE5UY0dobGNtVW9iWE1wSUQwOVBTQWhNU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR05qTG1OdmNIa29hU2t1YVc1MlpYSjBLQ2tzSUZodkxtTnZjSGtvWlM1eVlYa3BMbUZ3Y0d4NVRXRjBjbWw0TkNoall5azdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnlJQzhnS0NoMGFHbHpMbk5qWVd4bExuZ2dLeUIwYUdsekxuTmpZV3hsTG5rZ0t5QjBhR2x6TG5OallXeGxMbm9wSUM4Z015a3NJR3dnUFNCaElDb2dZU3dnWXlBOUlHNWxkeUJOTENCb0lEMGdibVYzSUUwc0lIVWdQU0J1WlhjZ1RTd2daQ0E5SUc1bGR5Qk5MQ0JtSUQwZ2RHaHBjeTVwYzB4cGJtVlRaV2R0Wlc1MGN5QS9JRElnT2lBeE93b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQnVMbWx1WkdWNExDQjJJRDBnYmk1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JTQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQk5ZWFJvTG0xaGVDZ3dMQ0J2TG5OMFlYSjBLU3dnY0NBOUlFMWhkR2d1YldsdUtHMHVZMjkxYm5Rc0lHOHVjM1JoY25RZ0t5QnZMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJR2NzSUhrZ1BTQndJQzBnTVRzZ1h5QThJSGs3SUY4Z0t6MGdaaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNCdExtZGxkRmdvWHlrc0lFRWdQU0J0TG1kbGRGZ29YeUFySURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kaXdnWWlrc0lHZ3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gyTENCQktTd2dXRzh1WkdsemRHRnVZMlZUY1ZSdlUyVm5iV1Z1ZENoakxDQm9MQ0JrTENCMUtTQStJR3dwSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ1pTNXlZWGt1YjNKcFoybHVMbVJwYzNSaGJtTmxWRzhvWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdTU0E4SUdVdWJtVmhjaUI4ZkNCSklENGdaUzVtWVhJZ2ZId2dkQzV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklFa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwT2lCMUxtTnNiMjVsS0NrdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURvZ1h5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRmpaVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptRmpaVWx1WkdWNE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJSFJvYVhNS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5NU0E5SUUxaGRHZ3ViV0Y0S0RBc0lHOHVjM1JoY25RcExDQndNU0E5SUUxaGRHZ3ViV2x1S0hZdVkyOTFiblFzSUc4dWMzUmhjblFnS3lCdkxtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHpFZ1BTQm5NU3dnZVRFZ1BTQndNU0F0SURFN0lGOHhJRHdnZVRFN0lGOHhJQ3M5SUdZcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kaXdnWHpFcExDQm9MbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZGl3Z1h6RWdLeUF4S1N3Z1dHOHVaR2x6ZEdGdVkyVlRjVlJ2VTJWbmJXVnVkQ2hqTENCb0xDQmtMQ0IxS1NBK0lHd3BJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJNU0E5SUdVdWNtRjVMbTl5YVdkcGJpNWthWE4wWVc1alpWUnZLR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRXhJRHdnWlM1dVpXRnlJSHg4SUVFeElENGdaUzVtWVhJZ2ZId2dkQzV3ZFhOb0tIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklFRXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiMmx1ZERvZ2RTNWpiRzl1WlNncExtRndjR3g1VFdGMGNtbDROQ2gwYUdsekxtMWhkSEpwZUZkdmNteGtLU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnNklGOHhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ZV05sT2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ZV05sU1c1a1pYZzZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nZEdocGN3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElHNHVhWE5IWlc5dFpYUnllU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1hVzVsTG5KaGVXTmhjM1FvS1NCdWJ5QnNiMjVuWlhJZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1blpXOXRaWFJ5ZVRzS0lDQWdJQ0FnSUNCcFppQW9aUzVwYzBKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXRiM0p3YUVGMGRISnBZblYwWlhNc0lHNGdQU0JQWW1wbFkzUXVhMlY1Y3loMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNHViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwVzI1Yk1GMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUQwZ1cxMHNJSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnZTMwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR2t1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0JwVzNKZExtNWhiV1VnZkh3Z1UzUnlhVzVuS0hJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3k1d2RYTm9LREFwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVZ0aFhTQTlJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFF4SUQwZ1pTNXRiM0p3YUZSaGNtZGxkSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXhJQ0U5UFNCMmIybGtJREFnSmlZZ2RERXViR1Z1WjNSb0lENGdNQ0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1hVzVsTG5Wd1pHRjBaVTF2Y25Cb1ZHRnlaMlYwY3lncElHUnZaWE1nYm05MElITjFjSEJ2Y25RZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlRzS2IyNHVjSEp2ZEc5MGVYQmxMbWx6VEdsdVpTQTlJQ0V3T3dwMllYSWdhR01nUFNCdVpYY2dUU3dnZFdNZ1BTQnVaWGNnVFN3Z2QzUWdQU0JqYkdGemN5QmxlSFJsYm1SeklHOXVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTWFXNWxVMlZuYldWdWRITWlPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVXhwYm1WRWFYTjBZVzVqWlhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1kbGIyMWxkSEo1T3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BJR2xtSUNobExtbHVaR1Y0SUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCdUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBMbU52ZFc1ME95QnBJRHdnY2pzZ2FTQXJQU0F5S1doakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnYVNrc0lIVmpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z2FTQXJJREVwTENCdVcybGRJRDBnYVNBOVBUMGdNQ0EvSURBZ09pQnVXMmtnTFNBeFhTd2dibHRwSUNzZ01WMGdQU0J1VzJsZElDc2dhR011WkdsemRHRnVZMlZVYnloMVl5azdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWMyVjBRWFIwY21saWRYUmxLQ0pzYVc1bFJHbHpkR0Z1WTJVaUxDQnVaWGNnWkdVb2Jpd2dNU2twT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cGJtVlRaV2R0Wlc1MGN5NWpiMjF3ZFhSbFRHbHVaVVJwYzNSaGJtTmxjeWdwT2lCRGIyMXdkWFJoZEdsdmJpQnZibXg1SUhCdmMzTnBZbXhsSUhkcGRHZ2dibTl1TFdsdVpHVjRaV1FnUW5WbVptVnlSMlZ2YldWMGNua3VJaWs3Q2lBZ0lDQWdJQ0FnWld4elpTQmxMbWx6UjJWdmJXVjBjbmtnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUR2x1WlZObFoyMWxiblJ6TG1OdmJYQjFkR1ZNYVc1bFJHbHpkR0Z1WTJWektDa2dibThnYkc5dVoyVnlJSE4xY0hCdmNuUnpJRlJJVWtWRkxrZGxiMjFsZEhKNUxpQlZjMlVnVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtmVHNLZDNRdWNISnZkRzkwZVhCbExtbHpUR2x1WlZObFoyMWxiblJ6SUQwZ0lUQTdDblpoY2lCNVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWt4cGJtVk1iMjl3SWpzS0lDQWdJSDBLZlRzS2VXRXVjSEp2ZEc5MGVYQmxMbWx6VEdsdVpVeHZiM0FnUFNBaE1Ec0tkbUZ5SUdwdUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKUWIybHVkSE5OWVhSbGNtbGhiQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnWVdVb01UWTNOemN5TVRVcExDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxuTnBlbVVnUFNBeExDQjBhR2x6TG5OcGVtVkJkSFJsYm5WaGRHbHZiaUE5SUNFd0xDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbk5wZW1VZ1BTQmxMbk5wZW1Vc0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnWlM1emFYcGxRWFIwWlc1MVlYUnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbXB1TG5CeWIzUnZkSGx3WlM1cGMxQnZhVzUwYzAxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCa1l5QTlJRzVsZHlCd1pTd2djMkVnUFNCdVpYY2dRMjRzSUdkeklEMGdibVYzSUVGdUxDQjRjeUE5SUc1bGR5Qk5MQ0I2Y2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCZlpTd2dkQ0E5SUc1bGR5QnFiaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHOXBiblJ6SWl3Z2RHaHBjeTVuWlc5dFpYUnllU0E5SUdVc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCMExDQjBhR2x6TG5Wd1pHRjBaVTF2Y25Cb1ZHRnlaMlYwY3lncE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0JsTG0xaGRHVnlhV0ZzTENCMGFHbHpMbWRsYjIxbGRISjVJRDBnWlM1blpXOXRaWFJ5ZVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKaGVXTmhjM1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2FTQTlJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXNJSElnUFNCbExuQmhjbUZ0Y3k1UWIybHVkSE11ZEdoeVpYTm9iMnhrTENCdklEMGdiaTVrY21GM1VtRnVaMlU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNHVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdiaTVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2daM011WTI5d2VTaHVMbUp2ZFc1a2FXNW5VM0JvWlhKbEtTd2daM011WVhCd2JIbE5ZWFJ5YVhnMEtHa3BMQ0JuY3k1eVlXUnBkWE1nS3owZ2Npd2daUzV5WVhrdWFXNTBaWEp6WldOMGMxTndhR1Z5WlNobmN5a2dQVDA5SUNFeEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ1pHTXVZMjl3ZVNocEtTNXBiblpsY25Rb0tTd2djMkV1WTI5d2VTaGxMbkpoZVNrdVlYQndiSGxOWVhSeWFYZzBLR1JqS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhJZ0x5QW9LSFJvYVhNdWMyTmhiR1V1ZUNBcklIUm9hWE11YzJOaGJHVXVlU0FySUhSb2FYTXVjMk5oYkdVdWVpa2dMeUF6S1N3Z2JDQTlJR0VnS2lCaE93b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnVMbWx1WkdWNExDQjFJRDBnYmk1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1l5QWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQk5ZWFJvTG0xaGVDZ3dMQ0J2TG5OMFlYSjBLU3dnWmlBOUlFMWhkR2d1YldsdUtHTXVZMjkxYm5Rc0lHOHVjM1JoY25RZ0t5QnZMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQTlJR1FzSUhnZ1BTQm1PeUJ0SUR3Z2VEc2diU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlHTXVaMlYwV0NodEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0Y3k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIVXNJSFlwTENCbVl5aDRjeXdnZGl3Z2JDd2dhU3dnWlN3Z2RDd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkRFZ1BTQk5ZWFJvTG0xaGVDZ3dMQ0J2TG5OMFlYSjBLU3dnWmpFZ1BTQk5ZWFJvTG0xcGJpaDFMbU52ZFc1MExDQnZMbk4wWVhKMElDc2dieTVqYjNWdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMHhJRDBnWkRFc0lIZ3hJRDBnWmpFN0lHMHhJRHdnZURFN0lHMHhLeXNwZUhNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDFMQ0J0TVNrc0lHWmpLSGh6TENCdE1Td2diQ3dnYVN3Z1pTd2dkQ3dnZEdocGN5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVHOXBiblJ6TG5KaGVXTmhjM1FvS1NCdWJ5QnNiMjVuWlhJZ2MzVndjRzl5ZEhNZ1ZFaFNSVVV1UjJWdmJXVjBjbmt1SUZWelpTQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1blpXOXRaWFJ5ZVRzS0lDQWdJQ0FnSUNCcFppQW9aUzVwYzBKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXRiM0p3YUVGMGRISnBZblYwWlhNc0lHNGdQU0JQWW1wbFkzUXVhMlY1Y3loMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNHViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwVzI1Yk1GMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUQwZ1cxMHNJSFJvYVhNdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVJRDBnZTMwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR2t1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0JwVzNKZExtNWhiV1VnZkh3Z1UzUnlhVzVuS0hJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3k1d2RYTm9LREFwTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVZ0aFhTQTlJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFF4SUQwZ1pTNXRiM0p3YUZSaGNtZGxkSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXhJQ0U5UFNCMmIybGtJREFnSmlZZ2RERXViR1Z1WjNSb0lENGdNQ0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFiMmx1ZEhNdWRYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDa2daRzlsY3lCdWIzUWdjM1Z3Y0c5eWRDQlVTRkpGUlM1SFpXOXRaWFJ5ZVM0Z1ZYTmxJRlJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1SUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOU93cDZjaTV3Y205MGIzUjVjR1V1YVhOUWIybHVkSE1nUFNBaE1Ec0tablZ1WTNScGIyNGdabU1vY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnYkdWMElHRWdQU0J6WVM1a2FYTjBZVzVqWlZOeFZHOVFiMmx1ZENoektUc0tJQ0FnSUdsbUlDaGhJRHdnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnYzJFdVkyeHZjMlZ6ZEZCdmFXNTBWRzlRYjJsdWRDaHpMQ0JzS1N3Z2JDNWhjSEJzZVUxaGRISnBlRFFvYmlrN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCcExuSmhlUzV2Y21sbmFXNHVaR2x6ZEdGdVkyVlVieWhzS1RzS0lDQWdJQ0FnSUNCcFppQW9ZeUE4SUdrdWJtVmhjaUI4ZkNCaklENGdhUzVtWVhJcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCeUxuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQmthWE4wWVc1alpUb2dZeXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJWVWIxSmhlVG9nVFdGMGFDNXpjWEowS0dFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWREb2diQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGc2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR1poWTJVNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ2J3b2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRcDlDblpoY2lCM2FDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5bDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVtYjNKdFlYUWdQU0JoSUNFOVBTQjJiMmxrSURBZ1B5QmhJRG9nUjI0c0lIUm9hWE11YldsdVJtbHNkR1Z5SUQwZ2J5QWhQVDBnZG05cFpDQXdJRDhnYnlBNklIUjBMQ0IwYUdsekxtMWhaMFpwYkhSbGNpQTlJSElnSVQwOUlIWnZhV1FnTUNBL0lISWdPaUIwZEN3Z2RHaHBjeTVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVRzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUhSb2FYTTdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdkU2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhQzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0JsTG5KbGNYVmxjM1JXYVdSbGIwWnlZVzFsUTJGc2JHSmhZMnNvZFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDSnlaWEYxWlhOMFZtbGtaVzlHY21GdFpVTmhiR3hpWVdOcklpQnBiaUJsSUNZbUlHVXVjbVZ4ZFdWemRGWnBaR1Z2Um5KaGJXVkRZV3hzWW1GamF5aDFLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbWx0WVdkbEtTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NXBiV0ZuWlRzS0lDQWdJQ0FnSUNBaWNtVnhkV1Z6ZEZacFpHVnZSbkpoYldWRFlXeHNZbUZqYXlJZ2FXNGdaU0E5UFQwZ0lURWdKaVlnWlM1eVpXRmtlVk4wWVhSbElENDlJR1V1U0VGV1JWOURWVkpTUlU1VVgwUkJWRUVnSmlZZ0tIUm9hWE11Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2s3Q2lBZ0lDQjlDbjA3Q25kb0xuQnliM1J2ZEhsd1pTNXBjMVpwWkdWdlZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ1UyZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklHOTBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2RBb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSFJvYVhNdVptOXliV0YwSUQwZ2Jpd2dkR2hwY3k1dFlXZEdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NXRhVzVHYVd4MFpYSWdQU0J5ZEN3Z2RHaHBjeTVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVN3Z2RHaHBjeTV1WldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRcDlPd3BUYUM1d2NtOTBiM1I1Y0dVdWFYTkdjbUZ0WldKMVptWmxjbFJsZUhSMWNtVWdQU0FoTURzS2RtRnlJSFpoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJ2ZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNMQ0JqTENCb0xDQjFMQ0JrS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1ZFd4c0xDQnZMQ0JoTENCc0xDQmpMQ0JvTENCcExDQnlMQ0IxTENCa0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdFlXZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJ1Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0YVhCdFlYQnpJRDBnWlN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V4TENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V4T3dvZ0lDQWdmUXA5T3dwMllTNXdjbTkwYjNSNWNHVXVhWE5EYjIxd2NtVnpjMlZrVkdWNGRIVnlaU0E5SUNFd093cDJZWElnVkdnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5MElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01wT3dvZ0lDQWdJQ0FnSUhSb2FYTXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS2ZUc0tWR2d1Y0hKdmRHOTBlWEJsTG1selEyRnVkbUZ6VkdWNGRIVnlaU0E5SUNFd093cDJZWElnWm5JZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdPQ3dnYmlBOUlEQXNJR2tnUFNCTllYUm9MbEJKSUNvZ01pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTJseVkyeGxSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWbmJXVnVkSE02SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFUzUmhjblE2SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFRHVnVaM1JvT2lCcENpQWdJQ0FnSUNBZ2ZTd2dkQ0E5SUUxaGRHZ3ViV0Y0S0RNc0lIUXBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdXMTBzSUc4Z1BTQmJYU3dnWVNBOUlGdGRMQ0JzSUQwZ1cxMHNJR01nUFNCdVpYY2dUU3dnYUNBOUlHNWxkeUJZT3dvZ0lDQWdJQ0FnSUc4dWNIVnphQ2d3TENBd0xDQXdLU3dnWVM1d2RYTm9LREFzSURBc0lERXBMQ0JzTG5CMWMyZ29MalVzSUM0MUtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdNenNnZFNBOFBTQjBPeUIxS3lzc0lHUWdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdiaUFySUhVZ0x5QjBJQ29nYVRzS0lDQWdJQ0FnSUNBZ0lDQWdZeTU0SUQwZ1pTQXFJRTFoZEdndVkyOXpLR1lwTENCakxua2dQU0JsSUNvZ1RXRjBhQzV6YVc0b1ppa3NJRzh1Y0hWemFDaGpMbmdzSUdNdWVTd2dZeTU2S1N3Z1lTNXdkWE5vS0RBc0lEQXNJREVwTENCb0xuZ2dQU0FvYjF0a1hTQXZJR1VnS3lBeEtTQXZJRElzSUdndWVTQTlJQ2h2VzJRZ0t5QXhYU0F2SUdVZ0t5QXhLU0F2SURJc0lHd3VjSFZ6YUNob0xuZ3NJR2d1ZVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RURWdQU0F4T3lCMU1TQThQU0IwT3lCMU1Tc3JLWEl1Y0hWemFDaDFNU3dnZFRFZ0t5QXhMQ0F3S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLSElwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2J5d2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0dFc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtHd3NJRElwS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJtY2lobExuSmhaR2wxY3l3Z1pTNXpaV2R0Wlc1MGN5d2daUzUwYUdWMFlWTjBZWEowTENCbExuUm9aWFJoVEdWdVozUm9LVHNLSUNBZ0lIMEtmU3dnU200Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNU3dnYmlBOUlERXNJR2tnUFNBNExDQnlJRDBnTVN3Z2J5QTlJQ0V4TENCaElEMGdNQ3dnYkNBOUlFMWhkR2d1VUVrZ0tpQXlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKRGVXeHBibVJsY2tkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTlViM0E2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWMwSnZkSFJ2YlRvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwWVd4VFpXZHRaVzUwY3pvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBVMlZuYldWdWRITTZJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXdaVzVGYm1SbFpEb2dieXdLSUNBZ0lDQWdJQ0FnSUNBZ2RHaGxkR0ZUZEdGeWREb2dZU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHaGxkR0ZNWlc1bmRHZzZJR3dLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnZEdocGN6c0tJQ0FnSUNBZ0lDQnBJRDBnVFdGMGFDNW1iRzl2Y2locEtTd2djaUE5SUUxaGRHZ3VabXh2YjNJb2NpazdDaUFnSUNBZ0lDQWdiR1YwSUdnZ1BTQmJYU3dnZFNBOUlGdGRMQ0JrSUQwZ1cxMHNJR1lnUFNCYlhTd2diU0E5SURBc0lIZ2dQU0JiWFN3Z2RpQTlJRzRnTHlBeUxDQm5JRDBnTURzS0lDQWdJQ0FnSUNCd0tDa3NJRzhnUFQwOUlDRXhJQ1ltSUNobElENGdNQ0FtSmlCZktDRXdLU3dnZENBK0lEQWdKaVlnWHlnaE1Ta3BMQ0IwYUdsekxuTmxkRWx1WkdWNEtHZ3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvZFN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLR1FzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0dZc0lESXBLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ3S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJRzVsZHlCTkxDQmlJRDBnYm1WM0lFMHNJRUVnUFNBd0xDQk1JRDBnS0hRZ0xTQmxLU0F2SUc0N0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdTU0E5SURBN0lFa2dQRDBnY2pzZ1NTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcklEMGdXMTBzSUVJZ1BTQkpJQzhnY2l3Z1VDQTlJRUlnS2lBb2RDQXRJR1VwSUNzZ1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2R5QTlJREE3SUhjZ1BEMGdhVHNnZHlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJSGNnTHlCcExDQkVJRDBnUlNBcUlHd2dLeUJoTENCVklEMGdUV0YwYUM1emFXNG9SQ2tzSUVZZ1BTQk5ZWFJvTG1OdmN5aEVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaUxuZ2dQU0JRSUNvZ1ZTd2dZaTU1SUQwZ0xVSWdLaUJ1SUNzZ2Rpd2dZaTU2SUQwZ1VDQXFJRVlzSUhVdWNIVnphQ2hpTG5nc0lHSXVlU3dnWWk1NktTd2dlUzV6WlhRb1ZTd2dUQ3dnUmlrdWJtOXliV0ZzYVhwbEtDa3NJR1F1Y0hWemFDaDVMbmdzSUhrdWVTd2dlUzU2S1N3Z1ppNXdkWE5vS0VVc0lERWdMU0JDS1N3Z2F5NXdkWE5vS0cwckt5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRMbkIxYzJnb2F5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkpNU0E5SURBN0lFa3hJRHdnYVRzZ1NURXJLeWxtYjNJb2JHVjBJR3N4SUQwZ01Ec2dhekVnUENCeU95QnJNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkNNU0E5SUhoYmF6RmRXMGt4WFN3Z1VERWdQU0I0VzJzeElDc2dNVjFiU1RGZExDQjNNU0E5SUhoYmF6RWdLeUF4WFZ0Sk1TQXJJREZkTENCRk1TQTlJSGhiYXpGZFcwa3hJQ3NnTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb0xuQjFjMmdvUWpFc0lGQXhMQ0JGTVNrc0lHZ3VjSFZ6YUNoUU1Td2dkekVzSUVVeEtTd2dRU0FyUFNBMk93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHTXVZV1JrUjNKdmRYQW9aeXdnUVN3Z01Da3NJR2NnS3owZ1FUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdYeWg1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaUlEMGdiU3dnUVNBOUlHNWxkeUJZTENCTUlEMGdibVYzSUUwc0lFa2dQU0F3TENCcklEMGdlU0E5UFQwZ0lUQWdQeUJsSURvZ2RDd2dRaUE5SUhrZ1BUMDlJQ0V3SUQ4Z01TQTZJQzB4T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIY2dQU0F4T3lCM0lEdzlJR2s3SUhjckt5bDFMbkIxYzJnb01Dd2dkaUFxSUVJc0lEQXBMQ0JrTG5CMWMyZ29NQ3dnUWl3Z01Da3NJR1l1Y0hWemFDZ3VOU3dnTGpVcExDQnRLeXM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JRSUQwZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IzTVNBOUlEQTdJSGN4SUR3OUlHazdJSGN4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVFnUFNCM01TQXZJR2tnS2lCc0lDc2dZU3dnVlNBOUlFMWhkR2d1WTI5ektFUXBMQ0JHSUQwZ1RXRjBhQzV6YVc0b1JDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk1MbmdnUFNCcklDb2dSaXdnVEM1NUlEMGdkaUFxSUVJc0lFd3VlaUE5SUdzZ0tpQlZMQ0IxTG5CMWMyZ29UQzU0TENCTUxua3NJRXd1ZWlrc0lHUXVjSFZ6YUNnd0xDQkNMQ0F3S1N3Z1FTNTRJRDBnVlNBcUlDNDFJQ3NnTGpVc0lFRXVlU0E5SUVZZ0tpQXVOU0FxSUVJZ0t5QXVOU3dnWmk1d2RYTm9LRUV1ZUN3Z1FTNTVLU3dnYlNzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2R6SWdQU0F3T3lCM01pQThJR2s3SUhjeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQmlJQ3NnZHpJc0lFUXhJRDBnVUNBcklIY3lPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU0E5UFQwZ0lUQWdQeUJvTG5CMWMyZ29SREVzSUVReElDc2dNU3dnUlNrZ09pQm9MbkIxYzJnb1JERWdLeUF4TENCRU1Td2dSU2tzSUVrZ0t6MGdNenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JqTG1Ga1pFZHliM1Z3S0djc0lFa3NJSGtnUFQwOUlDRXdJRDhnTVNBNklESXBMQ0JuSUNzOUlFazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFcHVLR1V1Y21Ga2FYVnpWRzl3TENCbExuSmhaR2wxYzBKdmRIUnZiU3dnWlM1b1pXbG5hSFFzSUdVdWNtRmthV0ZzVTJWbmJXVnVkSE1zSUdVdWFHVnBaMmgwVTJWbmJXVnVkSE1zSUdVdWIzQmxia1Z1WkdWa0xDQmxMblJvWlhSaFUzUmhjblFzSUdVdWRHaGxkR0ZNWlc1bmRHZ3BPd29nSUNBZ2ZRcDlMQ0J3Y2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nU200Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXhMQ0J1SUQwZ09Dd2dhU0E5SURFc0lISWdQU0FoTVN3Z2J5QTlJREFzSUdFZ1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9NQ3dnWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa052Ym1WSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbGhiRk5sWjIxbGJuUnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhSVFpXZHRaVzUwY3pvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYjNCbGJrVnVaR1ZrT2lCeUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdWMFlWTjBZWEowT2lCdkxBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdWMFlVeGxibWQwYURvZ1lRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2NISW9aUzV5WVdScGRYTXNJR1V1YUdWcFoyaDBMQ0JsTG5KaFpHbGhiRk5sWjIxbGJuUnpMQ0JsTG1obGFXZG9kRk5sWjIxbGJuUnpMQ0JsTG05d1pXNUZibVJsWkN3Z1pTNTBhR1YwWVZOMFlYSjBMQ0JsTG5Sb1pYUmhUR1Z1WjNSb0tUc0tJQ0FnSUgwS2ZTd2dZVzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJYU3dnZENBOUlGdGRMQ0J1SUQwZ01Td2dhU0E5SURBcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbEJ2Ykhsb1pXUnliMjVIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdsalpYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVaR2xqWlhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQnBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRnRkTENCdklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWVNocEtTd2dZeWh1S1N3Z2FDZ3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvY2l3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLSEl1YzJ4cFkyVW9LU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvYnl3Z01pa3BMQ0JwSUQwOVBTQXdJRDhnZEdocGN5NWpiMjF3ZFhSbFZtVnlkR1Y0VG05eWJXRnNjeWdwSURvZ2RHaHBjeTV1YjNKdFlXeHBlbVZPYjNKdFlXeHpLQ2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWVNod0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnYm1WM0lFMHNJSGtnUFNCdVpYY2dUU3dnWWlBOUlHNWxkeUJOT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRWdQU0F3T3lCQklEd2dkQzVzWlc1bmRHZzdJRUVnS3owZ015bG1LSFJiUVNBcklEQmRMQ0JmS1N3Z1ppaDBXMEVnS3lBeFhTd2dlU2tzSUdZb2RGdEJJQ3NnTWwwc0lHSXBMQ0JzS0Y4c0lIa3NJR0lzSUhBcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnNLSEFzSUY4c0lIa3NJR0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVFZ1BTQmlJQ3NnTVN3Z1RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFa2dQU0F3T3lCSklEdzlJRUU3SUVrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk1XMGxkSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYXlBOUlIQXVZMnh2Ym1Vb0tTNXNaWEp3S0hrc0lFa2dMeUJCS1N3Z1FpQTlJRjh1WTJ4dmJtVW9LUzVzWlhKd0tIa3NJRWtnTHlCQktTd2dVQ0E5SUVFZ0xTQkpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjNJRDBnTURzZ2R5QThQU0JRT3lCM0t5c3BkeUE5UFQwZ01DQW1KaUJKSUQwOVBTQkJJRDhnVEZ0SlhWdDNYU0E5SUdzZ09pQk1XMGxkVzNkZElEMGdheTVqYkc5dVpTZ3BMbXhsY25Bb1Fpd2dkeUF2SUZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1NURWdQU0F3T3lCSk1TQThJRUU3SUVreEt5c3BabTl5S0d4bGRDQnJNU0E5SURBN0lHc3hJRHdnTWlBcUlDaEJJQzBnU1RFcElDMGdNVHNnYXpFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUWpFZ1BTQk5ZWFJvTG1ac2IyOXlLR3N4SUM4Z01pazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnJNU0FsSURJZ1BUMDlJREFnUHlBb1pDaE1XMGt4WFZ0Q01TQXJJREZkS1N3Z1pDaE1XMGt4SUNzZ01WMWJRakZkS1N3Z1pDaE1XMGt4WFZ0Q01WMHBLU0E2SUNoa0tFeGJTVEZkVzBJeElDc2dNVjBwTENCa0tFeGJTVEVnS3lBeFhWdENNU0FySURGZEtTd2daQ2hNVzBreElDc2dNVjFiUWpGZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1l5aHdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREE3SUhrZ1BDQnlMbXhsYm1kMGFEc2dlU0FyUFNBektWOHVlQ0E5SUhKYmVTQXJJREJkTENCZkxua2dQU0J5VzNrZ0t5QXhYU3dnWHk1NklEMGdjbHQ1SUNzZ01sMHNJRjh1Ym05eWJXRnNhWHBsS0NrdWJYVnNkR2x3YkhsVFkyRnNZWElvY0Nrc0lISmJlU0FySURCZElEMGdYeTU0TENCeVcza2dLeUF4WFNBOUlGOHVlU3dnY2x0NUlDc2dNbDBnUFNCZkxubzdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2dvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SURBN0lGOGdQQ0J5TG14bGJtZDBhRHNnWHlBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEF1ZUNBOUlISmJYeUFySURCZExDQndMbmtnUFNCeVcxOGdLeUF4WFN3Z2NDNTZJRDBnY2x0ZklDc2dNbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJSFlvY0NrZ0x5QXlJQzhnVFdGMGFDNVFTU0FySUM0MUxDQmlJRDBnWnlod0tTQXZJRTFoZEdndVVFa2dLeUF1TlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4dWNIVnphQ2g1TENBeElDMGdZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYlNncExDQjFLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhVb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY0NBOUlEQTdJSEFnUENCdkxteGxibWQwYURzZ2NDQXJQU0EyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnYjF0d0lDc2dNRjBzSUhrZ1BTQnZXM0FnS3lBeVhTd2dZaUE5SUc5YmNDQXJJRFJkTENCQklEMGdUV0YwYUM1dFlYZ29YeXdnZVN3Z1lpa3NJRXdnUFNCTllYUm9MbTFwYmloZkxDQjVMQ0JpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFZ1BpQXVPU0FtSmlCTUlEd2dMakVnSmlZZ0tGOGdQQ0F1TWlBbUppQW9iMXR3SUNzZ01GMGdLejBnTVNrc0lIa2dQQ0F1TWlBbUppQW9iMXR3SUNzZ01sMGdLejBnTVNrc0lHSWdQQ0F1TWlBbUppQW9iMXR3SUNzZ05GMGdLejBnTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdRb2NDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeUxuQjFjMmdvY0M1NExDQndMbmtzSUhBdWVpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR1lvY0N3Z1h5a2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUhBZ0tpQXpPd29nSUNBZ0lDQWdJQ0FnSUNCZkxuZ2dQU0JsVzNrZ0t5QXdYU3dnWHk1NUlEMGdaVnQ1SUNzZ01WMHNJRjh1ZWlBOUlHVmJlU0FySURKZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnRLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlHNWxkeUJOTENCZklEMGdibVYzSUUwc0lIa2dQU0J1WlhjZ1RTd2dZaUE5SUc1bGR5Qk5MQ0JCSUQwZ2JtVjNJRmdzSUV3Z1BTQnVaWGNnV0N3Z1NTQTlJRzVsZHlCWU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3NnUFNBd0xDQkNJRDBnTURzZ2F5QThJSEl1YkdWdVozUm9PeUJySUNzOUlEa3NJRUlnS3owZ05pbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndMbk5sZENoeVcyc2dLeUF3WFN3Z2NsdHJJQ3NnTVYwc0lISmJheUFySURKZEtTd2dYeTV6WlhRb2NsdHJJQ3NnTTEwc0lISmJheUFySURSZExDQnlXMnNnS3lBMVhTa3NJSGt1YzJWMEtISmJheUFySURaZExDQnlXMnNnS3lBM1hTd2djbHRySUNzZ09GMHBMQ0JCTG5ObGRDaHZXMElnS3lBd1hTd2diMXRDSUNzZ01WMHBMQ0JNTG5ObGRDaHZXMElnS3lBeVhTd2diMXRDSUNzZ00xMHBMQ0JKTG5ObGRDaHZXMElnS3lBMFhTd2diMXRDSUNzZ05WMHBMQ0JpTG1OdmNIa29jQ2t1WVdSa0tGOHBMbUZrWkNoNUtTNWthWFpwWkdWVFkyRnNZWElvTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVQ0E5SUhZb1lpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRLRUVzSUVJZ0t5QXdMQ0J3TENCUUtTd2dlQ2hNTENCQ0lDc2dNaXdnWHl3Z1VDa3NJSGdvU1N3Z1FpQXJJRFFzSUhrc0lGQXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIZ29jQ3dnWHl3Z2VTd2dZaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmlJRHdnTUNBbUppQndMbmdnUFQwOUlERWdKaVlnS0c5YlgxMGdQU0J3TG5nZ0xTQXhLU3dnZVM1NElEMDlQU0F3SUNZbUlIa3VlaUE5UFQwZ01DQW1KaUFvYjF0ZlhTQTlJR0lnTHlBeUlDOGdUV0YwYUM1UVNTQXJJQzQxS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RpaHdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9MbUYwWVc0eUtIQXVlaXdnTFhBdWVDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2NvY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aGRHRnVNaWd0Y0M1NUxDQk5ZWFJvTG5OeGNuUW9jQzU0SUNvZ2NDNTRJQ3NnY0M1NklDb2djQzU2S1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUdGdUtHVXVkbVZ5ZEdsalpYTXNJR1V1YVc1a2FXTmxjeXdnWlM1eVlXUnBkWE1zSUdVdVpHVjBZV2xzY3lrN0NpQWdJQ0I5Q24wc0lHMXlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmhiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Td2dkQ0E5SURBcGV3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ0tERWdLeUJOWVhSb0xuTnhjblFvTlNrcElDOGdNaXdnYVNBOUlERWdMeUJ1TENCeUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGFTd0tJQ0FnSUNBZ0lDQWdJQ0FnTFc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBMQW9nSUNBZ0lDQWdJQ0FnSUNBdGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdrc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGFTd0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnTFc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHa3NDaUFnSUNBZ0lDQWdJQ0FnSUc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0YVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFdrc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCcENpQWdJQ0FnSUNBZ1hTd2dieUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURFMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UTXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJREU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOeXdLSUNBZ0lDQWdJQ0FnSUNBZ055d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRjc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJREUxTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOeXdLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnT0N3S0lDQWdJQ0FnSUNBZ0lDQWdNVGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4Tnl3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTJMQW9nSUNBZ0lDQWdJQ0FnSUNBNExBb2dJQ0FnSUNBZ0lDQWdJQ0F4Tml3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ09Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4T0N3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01UZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTml3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UTXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJREV6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRZc0NpQWdJQ0FnSUNBZ0lDQWdJREU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRNc0NpQWdJQ0FnSUNBZ0lDQWdJREU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4T0N3S0lDQWdJQ0FnSUNBZ0lDQWdPU3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURFNExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRRc0NpQWdJQ0FnSUNBZ0lDQWdJREV5TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1pd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnT0N3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEa3NDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJREU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Td0tJQ0FnSUNBZ0lDQWdJQ0FnTlN3S0lDQWdJQ0FnSUNBZ0lDQWdNVFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTVMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdNVGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFM0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UUXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREUwTEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQTVDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHlMQ0J2TENCbExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVJHOWtaV05oYUdWa2NtOXVSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWMFlXbHNPaUIwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ0Y2lobExuSmhaR2wxY3l3Z1pTNWtaWFJoYVd3cE93b2dJQ0FnZlFwOUxDQjVjeUE5SUc1bGR5Qk5MQ0IyY3lBOUlHNWxkeUJOTENCS2J5QTlJRzVsZHlCTkxDQmZjeUE5SUc1bGR5QnVkQ3dnWDJFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1ZFd4c0xDQjBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MGVYQmxJRDBnSWtWa1oyVnpSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxiMjFsZEhKNU9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFISmxjMmh2YkdSQmJtZHNaVG9nZEFvZ0lDQWdJQ0FnSUgwc0lHVWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCTllYUm9MbkJ2ZHlneE1Dd2dOQ2tzSUhJZ1BTQk5ZWFJvTG1OdmN5aFhiaUFxSUhRcExDQnZJRDBnWlM1blpYUkpibVJsZUNncExDQmhJRDBnWlM1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWtzSUd3Z1BTQnZJRDhnYnk1amIzVnVkQ0E2SUdFdVkyOTFiblFzSUdNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0FnSUNBZ1hTd2dhQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNKaElpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSmlJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0pqSWdvZ0lDQWdJQ0FnSUNBZ0lDQmRMQ0IxSUQwZ2JtVjNJRUZ5Y21GNUtETXBMQ0JrSUQwZ2UzMHNJR1lnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ01Ec2diU0E4SUd3N0lHMGdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEOGdLR05iTUYwZ1BTQnZMbWRsZEZnb2JTa3NJR05iTVYwZ1BTQnZMbWRsZEZnb2JTQXJJREVwTENCald6SmRJRDBnYnk1blpYUllLRzBnS3lBeUtTa2dPaUFvWTFzd1hTQTlJRzBzSUdOYk1WMGdQU0J0SUNzZ01Td2dZMXN5WFNBOUlHMGdLeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjdJR0U2SUhnZ0xDQmlPaUIySUN3Z1l6b2daeUFnZlNBOUlGOXpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hndVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGhMQ0JqV3pCZEtTd2dkaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dFc0lHTmJNVjBwTENCbkxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnWTFzeVhTa3NJRjl6TG1kbGRFNXZjbTFoYkNoS2J5a3NJSFZiTUYwZ1BTQmdKSHROWVhSb0xuSnZkVzVrS0hndWVDQXFJR2twZlN3a2UwMWhkR2d1Y205MWJtUW9lQzU1SUNvZ2FTbDlMQ1I3VFdGMGFDNXliM1Z1WkNoNExub2dLaUJwS1gxZ0xDQjFXekZkSUQwZ1lDUjdUV0YwYUM1eWIzVnVaQ2gyTG5nZ0tpQnBLWDBzSkh0TllYUm9Mbkp2ZFc1a0tIWXVlU0FxSUdrcGZTd2tlMDFoZEdndWNtOTFibVFvZGk1NklDb2dhU2w5WUN3Z2RWc3lYU0E5SUdBa2UwMWhkR2d1Y205MWJtUW9aeTU0SUNvZ2FTbDlMQ1I3VFdGMGFDNXliM1Z1WkNobkxua2dLaUJwS1gwc0pIdE5ZWFJvTG5KdmRXNWtLR2N1ZWlBcUlHa3BmV0FzSUNFb2RWc3dYU0E5UFQwZ2RWc3hYU0I4ZkNCMVd6RmRJRDA5UFNCMVd6SmRJSHg4SUhWYk1sMGdQVDA5SUhWYk1GMHBLU0JtYjNJb2JHVjBJSEFnUFNBd095QndJRHdnTXpzZ2NDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUNod0lDc2dNU2tnSlNBekxDQjVJRDBnZFZ0d1hTd2dZaUE5SUhWYlgxMHNJRUVnUFNCZmMxdG9XM0JkWFN3Z1RDQTlJRjl6VzJoYlgxMWRMQ0JKSUQwZ1lDUjdlWDFmSkh0aWZXQXNJR3NnUFNCZ0pIdGlmVjhrZTNsOVlEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JySUdsdUlHUWdKaVlnWkZ0clhTQS9JQ2hLYnk1a2IzUW9aRnRyWFM1dWIzSnRZV3dwSUR3OUlISWdKaVlnS0dZdWNIVnphQ2hCTG5nc0lFRXVlU3dnUVM1NktTd2daaTV3ZFhOb0tFd3VlQ3dnVEM1NUxDQk1Mbm9wS1N3Z1pGdHJYU0E5SUc1MWJHd3BJRG9nU1NCcGJpQmtJSHg4SUNoa1cwbGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVEQTZJR05iY0Ywc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRNVG9nWTF0ZlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzT2lCS2J5NWpiRzl1WlNncENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0TVNCcGJpQmtLV2xtSUNoa1cyMHhYU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIc2dhVzVrWlhnd09pQjRNU0FzSUdsdVpHVjRNVG9nZGpFZ0lIMGdQU0JrVzIweFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIbHpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z2VERXBMQ0IyY3k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHRXNJSFl4S1N3Z1ppNXdkWE5vS0hsekxuZ3NJSGx6TG5rc0lIbHpMbm9wTENCbUxuQjFjMmdvZG5NdWVDd2dkbk11ZVN3Z2RuTXVlaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0dZc0lETXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBzSUVOMElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTNWeWRtVWlMQ0IwYUdsekxtRnlZMHhsYm1kMGFFUnBkbWx6YVc5dWN5QTlJREl3TURzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa04xY25abE9pQXVaMlYwVUc5cGJuUW9LU0J1YjNRZ2FXMXdiR1Z0Wlc1MFpXUXVJaWtzSUc1MWJHdzdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVoyVjBWWFJ2VkcxaGNIQnBibWNvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwVUc5cGJuUW9iaXdnZENrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRITW9aU0E5SURVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQRDBnWlRzZ2Jpc3JLWFF1Y0hWemFDaDBhR2x6TG1kbGRGQnZhVzUwS0c0Z0x5QmxLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQjlDaUFnSUNCblpYUlRjR0ZqWldSUWIybHVkSE1vWlNBOUlEVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUEQwZ1pUc2diaXNyS1hRdWNIVnphQ2gwYUdsekxtZGxkRkJ2YVc1MFFYUW9iaUF2SUdVcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2REc0tJQ0FnSUgwS0lDQWdJR2RsZEV4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaMlYwVEdWdVozUm9jeWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzJVdWJHVnVaM1JvSUMwZ01WMDdDaUFnSUNCOUNpQWdJQ0JuWlhSTVpXNW5kR2h6S0dVZ1BTQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3lrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTmhZMmhsUVhKalRHVnVaM1JvY3lBbUppQjBhR2x6TG1OaFkyaGxRWEpqVEdWdVozUm9jeTVzWlc1bmRHZ2dQVDA5SUdVZ0t5QXhJQ1ltSUNGMGFHbHpMbTVsWldSelZYQmtZWFJsS1NCeVpYUjFjbTRnZEdocGN5NWpZV05vWlVGeVkweGxibWQwYUhNN0NpQWdJQ0FnSUNBZ2RHaHBjeTV1WldWa2MxVndaR0YwWlNBOUlDRXhPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdXMTBzSUc0c0lHa2dQU0IwYUdsekxtZGxkRkJ2YVc1MEtEQXBMQ0J5SUQwZ01Ec0tJQ0FnSUNBZ0lDQjBMbkIxYzJnb01DazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTVRzZ2J5QThQU0JsT3lCdkt5c3BiaUE5SUhSb2FYTXVaMlYwVUc5cGJuUW9ieUF2SUdVcExDQnlJQ3M5SUc0dVpHbHpkR0Z1WTJWVWJ5aHBLU3dnZEM1d2RYTm9LSElwTENCcElEMGdianNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1allXTm9aVUZ5WTB4bGJtZDBhSE1nUFNCMExDQjBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxRWEpqVEdWdVozUm9jeWdwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdVoyVjBUR1Z1WjNSb2N5Z3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZYUnZWRzFoY0hCcGJtY29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVuWlhSTVpXNW5kR2h6S0Nrc0lHa2dQU0F3TENCeUlEMGdiaTVzWlc1bmRHZ3NJRzg3Q2lBZ0lDQWdJQ0FnZENBL0lHOGdQU0IwSURvZ2J5QTlJR1VnS2lCdVczSWdMU0F4WFRzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SURBc0lHd2dQU0J5SUMwZ01Td2dZenNLSUNBZ0lDQWdJQ0JtYjNJb095QmhJRHc5SUd3N0tXbG1JQ2hwSUQwZ1RXRjBhQzVtYkc5dmNpaGhJQ3NnS0d3Z0xTQmhLU0F2SURJcExDQmpJRDBnYmx0cFhTQXRJRzhzSUdNZ1BDQXdLU0JoSUQwZ2FTQXJJREU3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvWXlBK0lEQXBJR3dnUFNCcElDMGdNVHNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkNBOUlHazdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2FTQTlJR3dzSUc1YmFWMGdQVDA5SUc4cElISmxkSFZ5YmlCcElDOGdLSElnTFNBeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHNWJhVjBzSUdRZ1BTQnVXMmtnS3lBeFhTQXRJR2dzSUdZZ1BTQW9ieUF0SUdncElDOGdaRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdLR2tnS3lCbUtTQXZJQ2h5SUMwZ01TazdDaUFnSUNCOUNpQWdJQ0JuWlhSVVlXNW5aVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1VnTFNBeFpTMDBMQ0J5SUQwZ1pTQXJJREZsTFRRN0NpQWdJQ0FnSUNBZ2FTQThJREFnSmlZZ0tHa2dQU0F3S1N3Z2NpQStJREVnSmlZZ0tISWdQU0F4S1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVaMlYwVUc5cGJuUW9hU2tzSUdFZ1BTQjBhR2x6TG1kbGRGQnZhVzUwS0hJcExDQnNJRDBnZENCOGZDQW9ieTVwYzFabFkzUnZjaklnUHlCdVpYY2dXQ0E2SUc1bGR5Qk5LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiQzVqYjNCNUtHRXBMbk4xWWlodktTNXViM0p0WVd4cGVtVW9LU3dnYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRlJoYm1kbGJuUkJkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1kbGRGVjBiMVJ0WVhCd2FXNW5LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRlJoYm1kbGJuUW9iaXdnZENrN0NpQWdJQ0I5Q2lBZ0lDQmpiMjF3ZFhSbFJuSmxibVYwUm5KaGJXVnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHNWxkeUJOTENCcElEMGdXMTBzSUhJZ1BTQmJYU3dnYnlBOUlGdGRMQ0JoSUQwZ2JtVjNJRTBzSUd3Z1BTQnVaWGNnY0dVN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbUlEMGdNRHNnWmlBOFBTQmxPeUJtS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJR1lnTHlCbE93b2dJQ0FnSUNBZ0lDQWdJQ0JwVzJaZElEMGdkR2hwY3k1blpYUlVZVzVuWlc1MFFYUW9iU3dnYm1WM0lFMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5V3pCZElEMGdibVYzSUUwc0lHOWJNRjBnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRTUxYldKbGNpNU5RVmhmVmtGTVZVVXNJR2dnUFNCTllYUm9MbUZpY3locFd6QmRMbmdwTENCMUlEMGdUV0YwYUM1aFluTW9hVnN3WFM1NUtTd2daQ0E5SUUxaGRHZ3VZV0p6S0dsYk1GMHVlaWs3Q2lBZ0lDQWdJQ0FnYUNBOFBTQmpJQ1ltSUNoaklEMGdhQ3dnYmk1elpYUW9NU3dnTUN3Z01Da3BMQ0IxSUR3OUlHTWdKaVlnS0dNZ1BTQjFMQ0J1TG5ObGRDZ3dMQ0F4TENBd0tTa3NJR1FnUEQwZ1l5QW1KaUJ1TG5ObGRDZ3dMQ0F3TENBeEtTd2dZUzVqY205emMxWmxZM1J2Y25Nb2FWc3dYU3dnYmlrdWJtOXliV0ZzYVhwbEtDa3NJSEpiTUYwdVkzSnZjM05XWldOMGIzSnpLR2xiTUYwc0lHRXBMQ0J2V3pCZExtTnliM056Vm1WamRHOXljeWhwV3pCZExDQnlXekJkS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZeElEMGdNVHNnWmpFZ1BEMGdaVHNnWmpFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlXMll4WFNBOUlISmJaakVnTFNBeFhTNWpiRzl1WlNncExDQnZXMll4WFNBOUlHOWJaakVnTFNBeFhTNWpiRzl1WlNncExDQmhMbU55YjNOelZtVmpkRzl5Y3locFcyWXhJQzBnTVYwc0lHbGJaakZkS1N3Z1lTNXNaVzVuZEdnb0tTQStJRTUxYldKbGNpNUZVRk5KVEU5T0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMHhJRDBnVFdGMGFDNWhZMjl6S0cxMEtHbGJaakVnTFNBeFhTNWtiM1FvYVZ0bU1WMHBMQ0F0TVN3Z01Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbHRtTVYwdVlYQndiSGxOWVhSeWFYZzBLR3d1YldGclpWSnZkR0YwYVc5dVFYaHBjeWhoTENCdE1Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzliWmpGZExtTnliM056Vm1WamRHOXljeWhwVzJZeFhTd2djbHRtTVYwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZeUlEMGdUV0YwYUM1aFkyOXpLRzEwS0hKYk1GMHVaRzkwS0hKYlpWMHBMQ0F0TVN3Z01Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCbU1pQXZQU0JsTENCcFd6QmRMbVJ2ZENoaExtTnliM056Vm1WamRHOXljeWh5V3pCZExDQnlXMlZkS1NrZ1BpQXdJQ1ltSUNobU1pQTlJQzFtTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiVElnUFNBeE95QnRNaUE4UFNCbE95QnRNaXNyS1hKYmJUSmRMbUZ3Y0d4NVRXRjBjbWw0TkNoc0xtMWhhMlZTYjNSaGRHbHZia0Y0YVhNb2FWdHRNbDBzSUdZeUlDb2diVElwS1N3Z2IxdHRNbDB1WTNKdmMzTldaV04wYjNKektHbGJiVEpkTENCeVcyMHlYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmhibWRsYm5Sek9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3h6T2lCeUxBb2dJQ0FnSUNBZ0lDQWdJQ0JpYVc1dmNtMWhiSE02SUc4S0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeUE5SUdVdVlYSmpUR1Z1WjNSb1JHbDJhWE5wYjI1ekxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J0WlhSaFpHRjBZVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWMybHZiam9nTkM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSWtOMWNuWmxJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUnZjam9nSWtOMWNuWmxMblJ2U2xOUFRpSUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVlYSmpUR1Z1WjNSb1JHbDJhWE5wYjI1eklEMGdkR2hwY3k1aGNtTk1aVzVuZEdoRWFYWnBjMmx2Ym5Nc0lHVXVkSGx3WlNBOUlIUm9hWE11ZEhsd1pTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY21OTVpXNW5kR2hFYVhacGMybHZibk1nUFNCbExtRnlZMHhsYm1kMGFFUnBkbWx6YVc5dWN5d2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1ZYSWdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBd0xDQjBJRDBnTUN3Z2JpQTlJREVzSUdrZ1BTQXhMQ0J5SUQwZ01Dd2dieUE5SUUxaGRHZ3VVRWtnS2lBeUxDQmhJRDBnSVRFc0lHd2dQU0F3S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkZiR3hwY0hObFEzVnlkbVVpTENCMGFHbHpMbUZZSUQwZ1pTd2dkR2hwY3k1aFdTQTlJSFFzSUhSb2FYTXVlRkpoWkdsMWN5QTlJRzRzSUhSb2FYTXVlVkpoWkdsMWN5QTlJR2tzSUhSb2FYTXVZVk4wWVhKMFFXNW5iR1VnUFNCeUxDQjBhR2x6TG1GRmJtUkJibWRzWlNBOUlHOHNJSFJvYVhNdVlVTnNiMk5yZDJselpTQTlJR0VzSUhSb2FYTXVZVkp2ZEdGMGFXOXVJRDBnYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRZ2ZId2dibVYzSUZnc0lHa2dQU0JOWVhSb0xsQkpJQ29nTWl3Z2NpQTlJSFJvYVhNdVlVVnVaRUZ1WjJ4bElDMGdkR2hwY3k1aFUzUmhjblJCYm1kc1pTd2dieUE5SUUxaGRHZ3VZV0p6S0hJcElEd2dUblZ0WW1WeUxrVlFVMGxNVDA0N0NpQWdJQ0FnSUNBZ1ptOXlLRHNnY2lBOElEQTdLWElnS3owZ2FUc0tJQ0FnSUNBZ0lDQm1iM0lvT3lCeUlENGdhVHNwY2lBdFBTQnBPd29nSUNBZ0lDQWdJSElnUENCT2RXMWlaWEl1UlZCVFNVeFBUaUFtSmlBb2J5QS9JSElnUFNBd0lEb2djaUE5SUdrcExDQjBhR2x6TG1GRGJHOWphM2RwYzJVZ1BUMDlJQ0V3SUNZbUlDRnZJQ1ltSUNoeUlEMDlQU0JwSUQ4Z2NpQTlJQzFwSURvZ2NpQTlJSElnTFNCcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11WVZOMFlYSjBRVzVuYkdVZ0t5QmxJQ29nY2l3Z2JDQTlJSFJvYVhNdVlWZ2dLeUIwYUdsekxuaFNZV1JwZFhNZ0tpQk5ZWFJvTG1OdmN5aGhLU3dnWXlBOUlIUm9hWE11WVZrZ0t5QjBhR2x6TG5sU1lXUnBkWE1nS2lCTllYUm9Mbk5wYmloaEtUc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWhVbTkwWVhScGIyNGdJVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JOWVhSb0xtTnZjeWgwYUdsekxtRlNiM1JoZEdsdmJpa3NJSFVnUFNCTllYUm9Mbk5wYmloMGFHbHpMbUZTYjNSaGRHbHZiaWtzSUdRZ1BTQnNJQzBnZEdocGN5NWhXQ3dnWmlBOUlHTWdMU0IwYUdsekxtRlpPd29nSUNBZ0lDQWdJQ0FnSUNCc0lEMGdaQ0FxSUdnZ0xTQm1JQ29nZFNBcklIUm9hWE11WVZnc0lHTWdQU0JrSUNvZ2RTQXJJR1lnS2lCb0lDc2dkR2hwY3k1aFdUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0d3c0lHTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WVZnZ1BTQmxMbUZZTENCMGFHbHpMbUZaSUQwZ1pTNWhXU3dnZEdocGN5NTRVbUZrYVhWeklEMGdaUzU0VW1Ga2FYVnpMQ0IwYUdsekxubFNZV1JwZFhNZ1BTQmxMbmxTWVdScGRYTXNJSFJvYVhNdVlWTjBZWEowUVc1bmJHVWdQU0JsTG1GVGRHRnlkRUZ1WjJ4bExDQjBhR2x6TG1GRmJtUkJibWRzWlNBOUlHVXVZVVZ1WkVGdVoyeGxMQ0IwYUdsekxtRkRiRzlqYTNkcGMyVWdQU0JsTG1GRGJHOWphM2RwYzJVc0lIUm9hWE11WVZKdmRHRjBhVzl1SUQwZ1pTNWhVbTkwWVhScGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1aFdDQTlJSFJvYVhNdVlWZ3NJR1V1WVZrZ1BTQjBhR2x6TG1GWkxDQmxMbmhTWVdScGRYTWdQU0IwYUdsekxuaFNZV1JwZFhNc0lHVXVlVkpoWkdsMWN5QTlJSFJvYVhNdWVWSmhaR2wxY3l3Z1pTNWhVM1JoY25SQmJtZHNaU0E5SUhSb2FYTXVZVk4wWVhKMFFXNW5iR1VzSUdVdVlVVnVaRUZ1WjJ4bElEMGdkR2hwY3k1aFJXNWtRVzVuYkdVc0lHVXVZVU5zYjJOcmQybHpaU0E5SUhSb2FYTXVZVU5zYjJOcmQybHpaU3dnWlM1aFVtOTBZWFJwYjI0Z1BTQjBhR2x6TG1GU2IzUmhkR2x2Yml3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVZVmdnUFNCbExtRllMQ0IwYUdsekxtRlpJRDBnWlM1aFdTd2dkR2hwY3k1NFVtRmthWFZ6SUQwZ1pTNTRVbUZrYVhWekxDQjBhR2x6TG5sU1lXUnBkWE1nUFNCbExubFNZV1JwZFhNc0lIUm9hWE11WVZOMFlYSjBRVzVuYkdVZ1BTQmxMbUZUZEdGeWRFRnVaMnhsTENCMGFHbHpMbUZGYm1SQmJtZHNaU0E5SUdVdVlVVnVaRUZ1WjJ4bExDQjBhR2x6TG1GRGJHOWphM2RwYzJVZ1BTQmxMbUZEYkc5amEzZHBjMlVzSUhSb2FYTXVZVkp2ZEdGMGFXOXVJRDBnWlM1aFVtOTBZWFJwYjI0c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q2xWeUxuQnliM1J2ZEhsd1pTNXBjMFZzYkdsd2MyVkRkWEoyWlNBOUlDRXdPd3AyWVhJZ1RXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklGVnlJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0c0lHNHNJR2tzSUhJc0lHOHBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKQmNtTkRkWEoyWlNJN0NpQWdJQ0I5Q24wN0NrMWhMbkJ5YjNSdmRIbHdaUzVwYzBGeVkwTjFjblpsSUQwZ0lUQTdDbVoxYm1OMGFXOXVJR0poS0NrZ2V3b2dJQ0FnYkdWMElITWdQU0F3TENCbElEMGdNQ3dnZENBOUlEQXNJRzRnUFNBd093b2dJQ0FnWm5WdVkzUnBiMjRnYVNoeUxDQnZMQ0JoTENCc0tTQjdDaUFnSUNBZ0lDQWdjeUE5SUhJc0lHVWdQU0JoTENCMElEMGdMVE1nS2lCeUlDc2dNeUFxSUc4Z0xTQXlJQ29nWVNBdElHd3NJRzRnUFNBeUlDb2djaUF0SURJZ0tpQnZJQ3NnWVNBcklHdzdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2x1YVhSRFlYUnRkV3hzVW05dE9pQm1kVzVqZEdsdmJpaHlMQ0J2TENCaExDQnNMQ0JqS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2tvYnl3Z1lTd2dZeUFxSUNoaElDMGdjaWtzSUdNZ0tpQW9iQ0F0SUc4cEtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR2x1YVhST2IyNTFibWxtYjNKdFEyRjBiWFZzYkZKdmJUb2dablZ1WTNScGIyNG9jaXdnYnl3Z1lTd2diQ3dnWXl3Z2FDd2dkU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlDaHZJQzBnY2lrZ0x5QmpJQzBnS0dFZ0xTQnlLU0F2SUNoaklDc2dhQ2tnS3lBb1lTQXRJRzhwSUM4Z2FDd2daaUE5SUNoaElDMGdieWtnTHlCb0lDMGdLR3dnTFNCdktTQXZJQ2hvSUNzZ2RTa2dLeUFvYkNBdElHRXBJQzhnZFRzS0lDQWdJQ0FnSUNBZ0lDQWdaQ0FxUFNCb0xDQm1JQ285SUdnc0lHa29ieXdnWVN3Z1pDd2daaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCallXeGpPaUJtZFc1amRHbHZiaWh5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdjaUFxSUhJc0lHRWdQU0J2SUNvZ2Nqc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSE1nS3lCbElDb2djaUFySUhRZ0tpQnZJQ3NnYmlBcUlHRTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZUc0tmUXAyWVhJZ1RYTWdQU0J1WlhjZ1RTd2dXVzhnUFNCdVpYY2dZbUVzSUZwdklEMGdibVYzSUdKaExDQWtieUE5SUc1bGR5QmlZU3dnZDJFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0JiWFN3Z2RDQTlJQ0V4TENCdUlEMGdJbU5sYm5SeWFYQmxkR0ZzSWl3Z2FTQTlJQzQxS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkRZWFJ0ZFd4c1VtOXRRM1Z5ZG1Veklpd2dkR2hwY3k1d2IybHVkSE1nUFNCbExDQjBhR2x6TG1Oc2IzTmxaQ0E5SUhRc0lIUm9hWE11WTNWeWRtVlVlWEJsSUQwZ2Jpd2dkR2hwY3k1MFpXNXphVzl1SUQwZ2FUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRZ1BTQnVaWGNnVFNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDd2dhU0E5SUhSb2FYTXVjRzlwYm5SekxDQnlJRDBnYVM1c1pXNW5kR2dzSUc4Z1BTQW9jaUF0SUNoMGFHbHpMbU5zYjNObFpDQS9JREFnT2lBeEtTa2dLaUJsTENCaElEMGdUV0YwYUM1bWJHOXZjaWh2S1N3Z2JDQTlJRzhnTFNCaE93b2dJQ0FnSUNBZ0lIUm9hWE11WTJ4dmMyVmtJRDhnWVNBclBTQmhJRDRnTUNBL0lEQWdPaUFvVFdGMGFDNW1iRzl2Y2loTllYUm9MbUZpY3loaEtTQXZJSElwSUNzZ01Ta2dLaUJ5SURvZ2JDQTlQVDBnTUNBbUppQmhJRDA5UFNCeUlDMGdNU0FtSmlBb1lTQTlJSElnTFNBeUxDQnNJRDBnTVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR01zSUdnN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYkc5elpXUWdmSHdnWVNBK0lEQWdQeUJqSUQwZ2FWc29ZU0F0SURFcElDVWdjbDBnT2lBb1RYTXVjM1ZpVm1WamRHOXljeWhwV3pCZExDQnBXekZkS1M1aFpHUW9hVnN3WFNrc0lHTWdQU0JOY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCcFcyRWdKU0J5WFN3Z1pDQTlJR2xiS0dFZ0t5QXhLU0FsSUhKZE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTnNiM05sWkNCOGZDQmhJQ3NnTWlBOElISWdQeUJvSUQwZ2FWc29ZU0FySURJcElDVWdjbDBnT2lBb1RYTXVjM1ZpVm1WamRHOXljeWhwVzNJZ0xTQXhYU3dnYVZ0eUlDMGdNbDBwTG1Ga1pDaHBXM0lnTFNBeFhTa3NJR2dnUFNCTmN5a3NJSFJvYVhNdVkzVnlkbVZVZVhCbElEMDlQU0FpWTJWdWRISnBjR1YwWVd3aUlIeDhJSFJvYVhNdVkzVnlkbVZVZVhCbElEMDlQU0FpWTJodmNtUmhiQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQjBhR2x6TG1OMWNuWmxWSGx3WlNBOVBUMGdJbU5vYjNKa1lXd2lJRDhnTGpVZ09pQXVNalVzSUcwZ1BTQk5ZWFJvTG5CdmR5aGpMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLSFVwTENCbUtTd2dlQ0E5SUUxaGRHZ3VjRzkzS0hVdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pDa3NJR1lwTENCMklEMGdUV0YwYUM1d2IzY29aQzVrYVhOMFlXNWpaVlJ2VTNGMVlYSmxaQ2hvS1N3Z1ppazdDaUFnSUNBZ0lDQWdJQ0FnSUhnZ1BDQXhaUzAwSUNZbUlDaDRJRDBnTVNrc0lHMGdQQ0F4WlMwMElDWW1JQ2h0SUQwZ2VDa3NJSFlnUENBeFpTMDBJQ1ltSUNoMklEMGdlQ2tzSUZsdkxtbHVhWFJPYjI1MWJtbG1iM0p0UTJGMGJYVnNiRkp2YlNoakxuZ3NJSFV1ZUN3Z1pDNTRMQ0JvTG5nc0lHMHNJSGdzSUhZcExDQmFieTVwYm1sMFRtOXVkVzVwWm05eWJVTmhkRzExYkd4U2IyMG9ZeTU1TENCMUxua3NJR1F1ZVN3Z2FDNTVMQ0J0TENCNExDQjJLU3dnSkc4dWFXNXBkRTV2Ym5WdWFXWnZjbTFEWVhSdGRXeHNVbTl0S0dNdWVpd2dkUzU2TENCa0xub3NJR2d1ZWl3Z2JTd2dlQ3dnZGlrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhSb2FYTXVZM1Z5ZG1WVWVYQmxJRDA5UFNBaVkyRjBiWFZzYkhKdmJTSWdKaVlnS0ZsdkxtbHVhWFJEWVhSdGRXeHNVbTl0S0dNdWVDd2dkUzU0TENCa0xuZ3NJR2d1ZUN3Z2RHaHBjeTUwWlc1emFXOXVLU3dnV204dWFXNXBkRU5oZEcxMWJHeFNiMjBvWXk1NUxDQjFMbmtzSUdRdWVTd2dhQzU1TENCMGFHbHpMblJsYm5OcGIyNHBMQ0FrYnk1cGJtbDBRMkYwYlhWc2JGSnZiU2hqTG5vc0lIVXVlaXdnWkM1NkxDQm9Mbm9zSUhSb2FYTXVkR1Z1YzJsdmJpa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbk5sZENoWmJ5NWpZV3hqS0d3cExDQmFieTVqWVd4aktHd3BMQ0FrYnk1allXeGpLR3dwS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVjRzlwYm5SekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHOXBiblJ6TG5CMWMyZ29hUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyeHZjMlZrSUQwZ1pTNWpiRzl6WldRc0lIUm9hWE11WTNWeWRtVlVlWEJsSUQwZ1pTNWpkWEoyWlZSNWNHVXNJSFJvYVhNdWRHVnVjMmx2YmlBOUlHVXVkR1Z1YzJsdmJpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUdVdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJSFJvYVhNdWNHOXBiblJ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1Y0c5cGJuUnpMbkIxYzJnb2FTNTBiMEZ5Y21GNUtDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVqYkc5elpXUWdQU0IwYUdsekxtTnNiM05sWkN3Z1pTNWpkWEoyWlZSNWNHVWdQU0IwYUdsekxtTjFjblpsVkhsd1pTd2daUzUwWlc1emFXOXVJRDBnZEdocGN5NTBaVzV6YVc5dUxDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG1aeWIyMUtVMDlPS0dVcExDQjBhR2x6TG5CdmFXNTBjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbkJ2YVc1MGN5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdWNHOXBiblJ6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQnZhVzUwY3k1d2RYTm9LRzVsZHlCTktDa3Vabkp2YlVGeWNtRjVLR2twS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMnh2YzJWa0lEMGdaUzVqYkc5elpXUXNJSFJvYVhNdVkzVnlkbVZVZVhCbElEMGdaUzVqZFhKMlpWUjVjR1VzSUhSb2FYTXVkR1Z1YzJsdmJpQTlJR1V1ZEdWdWMybHZiaXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tkMkV1Y0hKdmRHOTBlWEJsTG1selEyRjBiWFZzYkZKdmJVTjFjblpsTXlBOUlDRXdPd3BtZFc1amRHbHZiaUJ3WXloekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnNaWFFnY2lBOUlDaHVJQzBnWlNrZ0tpQXVOU3dnYnlBOUlDaHBJQzBnZENrZ0tpQXVOU3dnWVNBOUlITWdLaUJ6TENCc0lEMGdjeUFxSUdFN0NpQWdJQ0J5WlhSMWNtNGdLRElnS2lCMElDMGdNaUFxSUc0Z0t5QnlJQ3NnYnlrZ0tpQnNJQ3NnS0MweklDb2dkQ0FySURNZ0tpQnVJQzBnTWlBcUlISWdMU0J2S1NBcUlHRWdLeUJ5SUNvZ2N5QXJJSFE3Q24wS1puVnVZM1JwYjI0Z1NYZ29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0F4SUMwZ2N6c0tJQ0FnSUhKbGRIVnliaUIwSUNvZ2RDQXFJR1U3Q24wS1puVnVZM1JwYjI0Z1JIZ29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJRElnS2lBb01TQXRJSE1wSUNvZ2N5QXFJR1U3Q24wS1puVnVZM1JwYjI0Z1JuZ29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nS2lCeklDb2daVHNLZlFwbWRXNWpkR2x2YmlCaGNpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnlaWFIxY200Z1NYZ29jeXdnWlNrZ0t5QkVlQ2h6TENCMEtTQXJJRVo0S0hNc0lHNHBPd3A5Q21aMWJtTjBhVzl1SUU1NEtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdNU0F0SUhNN0NpQWdJQ0J5WlhSMWNtNGdkQ0FxSUhRZ0tpQjBJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQkNlQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SURFZ0xTQnpPd29nSUNBZ2NtVjBkWEp1SURNZ0tpQjBJQ29nZENBcUlITWdLaUJsT3dwOUNtWjFibU4wYVc5dUlIcDRLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUF6SUNvZ0tERWdMU0J6S1NBcUlITWdLaUJ6SUNvZ1pUc0tmUXBtZFc1amRHbHZiaUJWZUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QXFJSE1nS2lCeklDb2daVHNLZlFwbWRXNWpkR2x2YmlCc2NpaHpMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0J5WlhSMWNtNGdUbmdvY3l3Z1pTa2dLeUJDZUNoekxDQjBLU0FySUhwNEtITXNJRzRwSUNzZ1ZYZ29jeXdnYVNrN0NuMEtkbUZ5SUd4dklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGZ3NJSFFnUFNCdVpYY2dXQ3dnYmlBOUlHNWxkeUJZTENCcElEMGdibVYzSUZncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa04xWW1salFtVjZhV1Z5UTNWeWRtVWlMQ0IwYUdsekxuWXdJRDBnWlN3Z2RHaHBjeTUyTVNBOUlIUXNJSFJvYVhNdWRqSWdQU0J1TENCMGFHbHpMbll6SUQwZ2FUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRZ1BTQnVaWGNnV0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDd2dhU0E5SUhSb2FYTXVkakFzSUhJZ1BTQjBhR2x6TG5ZeExDQnZJRDBnZEdocGN5NTJNaXdnWVNBOUlIUm9hWE11ZGpNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMyVjBLR3h5S0dVc0lHa3VlQ3dnY2k1NExDQnZMbmdzSUdFdWVDa3NJR3h5S0dVc0lHa3VlU3dnY2k1NUxDQnZMbmtzSUdFdWVTa3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqQXVZMjl3ZVNobExuWXdLU3dnZEdocGN5NTJNUzVqYjNCNUtHVXVkakVwTENCMGFHbHpMbll5TG1OdmNIa29aUzUyTWlrc0lIUm9hWE11ZGpNdVkyOXdlU2hsTG5ZektTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5Zd0lEMGdkR2hwY3k1Mk1DNTBiMEZ5Y21GNUtDa3NJR1V1ZGpFZ1BTQjBhR2x6TG5ZeExuUnZRWEp5WVhrb0tTd2daUzUyTWlBOUlIUm9hWE11ZGpJdWRHOUJjbkpoZVNncExDQmxMbll6SUQwZ2RHaHBjeTUyTXk1MGIwRnljbUY1S0Nrc0lHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbVp5YjIxS1UwOU9LR1VwTENCMGFHbHpMbll3TG1aeWIyMUJjbkpoZVNobExuWXdLU3dnZEdocGN5NTJNUzVtY205dFFYSnlZWGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVabkp2YlVGeWNtRjVLR1V1ZGpJcExDQjBhR2x6TG5ZekxtWnliMjFCY25KaGVTaGxMbll6S1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLYkc4dWNISnZkRzkwZVhCbExtbHpRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpTQTlJQ0V3T3dwMllYSWdVMkVnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnVFN3Z2RDQTlJRzVsZHlCTkxDQnVJRDBnYm1WM0lFMHNJR2tnUFNCdVpYY2dUU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEzVmlhV05DWlhwcFpYSkRkWEoyWlRNaUxDQjBhR2x6TG5Zd0lEMGdaU3dnZEdocGN5NTJNU0E5SUhRc0lIUm9hWE11ZGpJZ1BTQnVMQ0IwYUdsekxuWXpJRDBnYVRzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFnUFNCdVpYY2dUU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEN3Z2FTQTlJSFJvYVhNdWRqQXNJSElnUFNCMGFHbHpMbll4TENCdklEMGdkR2hwY3k1Mk1pd2dZU0E5SUhSb2FYTXVkak03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtHeHlLR1VzSUdrdWVDd2djaTU0TENCdkxuZ3NJR0V1ZUNrc0lHeHlLR1VzSUdrdWVTd2djaTU1TENCdkxua3NJR0V1ZVNrc0lHeHlLR1VzSUdrdWVpd2djaTU2TENCdkxub3NJR0V1ZWlrcExDQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11ZGpBdVkyOXdlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNWpiM0I1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbU52Y0hrb1pTNTJNaWtzSUhSb2FYTXVkak11WTI5d2VTaGxMbll6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbll3SUQwZ2RHaHBjeTUyTUM1MGIwRnljbUY1S0Nrc0lHVXVkakVnUFNCMGFHbHpMbll4TG5SdlFYSnlZWGtvS1N3Z1pTNTJNaUE5SUhSb2FYTXVkakl1ZEc5QmNuSmhlU2dwTENCbExuWXpJRDBnZEdocGN5NTJNeTUwYjBGeWNtRjVLQ2tzSUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtWnliMjFLVTA5T0tHVXBMQ0IwYUdsekxuWXdMbVp5YjIxQmNuSmhlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNW1jbTl0UVhKeVlYa29aUzUyTVNrc0lIUm9hWE11ZGpJdVpuSnZiVUZ5Y21GNUtHVXVkaklwTENCMGFHbHpMbll6TG1aeWIyMUJjbkpoZVNobExuWXpLU3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0tVMkV1Y0hKdmRHOTBlWEJsTG1selEzVmlhV05DWlhwcFpYSkRkWEoyWlRNZ1BTQWhNRHNLZG1GeUlFOXlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmdzSUhRZ1BTQnVaWGNnV0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUR2x1WlVOMWNuWmxJaXdnZEdocGN5NTJNU0E5SUdVc0lIUm9hWE11ZGpJZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHOXBiblFvWlN3Z2RDQTlJRzVsZHlCWUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDA5UFNBeElEOGdiaTVqYjNCNUtIUm9hWE11ZGpJcElEb2dLRzR1WTI5d2VTaDBhR2x6TG5ZeUtTNXpkV0lvZEdocGN5NTJNU2tzSUc0dWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrdVlXUmtLSFJvYVhNdWRqRXBLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MFFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEZCdmFXNTBLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVkdGdVoyVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBJSHg4SUc1bGR5QllPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbU52Y0hrb2RHaHBjeTUyTWlrdWMzVmlLSFJvYVhNdWRqRXBMbTV2Y20xaGJHbDZaU2dwTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVkakV1WTI5d2VTaGxMbll4S1N3Z2RHaHBjeTUyTWk1amIzQjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZGpFZ1BTQjBhR2x6TG5ZeExuUnZRWEp5WVhrb0tTd2daUzUyTWlBOUlIUm9hWE11ZGpJdWRHOUJjbkpoZVNncExDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVtY205dFNsTlBUaWhsS1N3Z2RHaHBjeTUyTVM1bWNtOXRRWEp5WVhrb1pTNTJNU2tzSUhSb2FYTXVkakl1Wm5KdmJVRnljbUY1S0dVdWRqSXBMQ0IwYUdsek93b2dJQ0FnZlFwOU93cFBjaTV3Y205MGIzUjVjR1V1YVhOTWFXNWxRM1Z5ZG1VZ1BTQWhNRHNLZG1GeUlFVm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRTBzSUhRZ1BTQnVaWGNnVFNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUR2x1WlVOMWNuWmxNeUlzSUhSb2FYTXVhWE5NYVc1bFEzVnlkbVV6SUQwZ0lUQXNJSFJvYVhNdWRqRWdQU0JsTENCMGFHbHpMbll5SUQwZ2REc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRZ1BTQnVaWGNnVFNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2REc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQTlQVDBnTVNBL0lHNHVZMjl3ZVNoMGFHbHpMbll5S1NBNklDaHVMbU52Y0hrb2RHaHBjeTUyTWlrdWMzVmlLSFJvYVhNdWRqRXBMQ0J1TG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwTG1Ga1pDaDBhR2x6TG5ZeEtTa3NJRzQ3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEVGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJRYjJsdWRDaGxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuWXhMbU52Y0hrb1pTNTJNU2tzSUhSb2FYTXVkakl1WTI5d2VTaGxMbll5S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbll4SUQwZ2RHaHBjeTUyTVM1MGIwRnljbUY1S0Nrc0lHVXVkaklnUFNCMGFHbHpMbll5TG5SdlFYSnlZWGtvS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVkakV1Wm5KdmJVRnljbUY1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbVp5YjIxQmNuSmhlU2hsTG5ZeUtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1kyOGdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dXQ3dnZENBOUlHNWxkeUJZTENCdUlEMGdibVYzSUZncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbEYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsSWl3Z2RHaHBjeTUyTUNBOUlHVXNJSFJvYVhNdWRqRWdQU0IwTENCMGFHbHpMbll5SUQwZ2Jqc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRZ1BTQnVaWGNnV0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDd2dhU0E5SUhSb2FYTXVkakFzSUhJZ1BTQjBhR2x6TG5ZeExDQnZJRDBnZEdocGN5NTJNanNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6WlhRb1lYSW9aU3dnYVM1NExDQnlMbmdzSUc4dWVDa3NJR0Z5S0dVc0lHa3VlU3dnY2k1NUxDQnZMbmtwS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbll3TG1OdmNIa29aUzUyTUNrc0lIUm9hWE11ZGpFdVkyOXdlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNWpiM0I1S0dVdWRqSXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWRqQWdQU0IwYUdsekxuWXdMblJ2UVhKeVlYa29LU3dnWlM1Mk1TQTlJSFJvYVhNdWRqRXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeUlEMGdkR2hwY3k1Mk1pNTBiMEZ5Y21GNUtDa3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1aeWIyMUtVMDlPS0dVcExDQjBhR2x6TG5Zd0xtWnliMjFCY25KaGVTaGxMbll3S1N3Z2RHaHBjeTUyTVM1bWNtOXRRWEp5WVhrb1pTNTJNU2tzSUhSb2FYTXVkakl1Wm5KdmJVRnljbUY1S0dVdWRqSXBMQ0IwYUdsek93b2dJQ0FnZlFwOU93cGpieTV3Y205MGIzUjVjR1V1YVhOUmRXRmtjbUYwYVdOQ1pYcHBaWEpEZFhKMlpTQTlJQ0V3T3dwMllYSWdhRzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnVFN3Z2RDQTlJRzVsZHlCTkxDQnVJRDBnYm1WM0lFMHBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abE15SXNJSFJvYVhNdWRqQWdQU0JsTENCMGFHbHpMbll4SUQwZ2RDd2dkR2hwY3k1Mk1pQTlJRzQ3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZENobExDQjBJRDBnYm1WM0lFMHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFzSUdrZ1BTQjBhR2x6TG5Zd0xDQnlJRDBnZEdocGN5NTJNU3dnYnlBOUlIUm9hWE11ZGpJN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMyVjBLR0Z5S0dVc0lHa3VlQ3dnY2k1NExDQnZMbmdwTENCaGNpaGxMQ0JwTG5rc0lISXVlU3dnYnk1NUtTd2dZWElvWlN3Z2FTNTZMQ0J5TG5vc0lHOHVlaWtwTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVkakF1WTI5d2VTaGxMbll3S1N3Z2RHaHBjeTUyTVM1amIzQjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtTnZjSGtvWlM1Mk1pa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1Mk1DQTlJSFJvYVhNdWRqQXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeElEMGdkR2hwY3k1Mk1TNTBiMEZ5Y21GNUtDa3NJR1V1ZGpJZ1BTQjBhR2x6TG5ZeUxuUnZRWEp5WVhrb0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZGpBdVpuSnZiVUZ5Y21GNUtHVXVkakFwTENCMGFHbHpMbll4TG1aeWIyMUJjbkpoZVNobExuWXhLU3dnZEdocGN5NTJNaTVtY205dFFYSnlZWGtvWlM1Mk1pa3NJSFJvYVhNN0NpQWdJQ0I5Q24wN0NtaHZMbkJ5YjNSdmRIbHdaUzVwYzFGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abE15QTlJQ0V3T3dwMllYSWdkVzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJYU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUzQnNhVzVsUTNWeWRtVWlMQ0IwYUdsekxuQnZhVzUwY3lBOUlHVTdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkQ2hsTENCMElEMGdibVYzSUZncElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUXNJR2tnUFNCMGFHbHpMbkJ2YVc1MGN5d2djaUE5SUNocExteGxibWQwYUNBdElERXBJQ29nWlN3Z2J5QTlJRTFoZEdndVpteHZiM0lvY2lrc0lHRWdQU0J5SUMwZ2J5d2diQ0E5SUdsYmJ5QTlQVDBnTUNBL0lHOGdPaUJ2SUMwZ01WMHNJR01nUFNCcFcyOWRMQ0JvSUQwZ2FWdHZJRDRnYVM1c1pXNW5kR2dnTFNBeUlEOGdhUzVzWlc1bmRHZ2dMU0F4SURvZ2J5QXJJREZkTENCMUlEMGdhVnR2SUQ0Z2FTNXNaVzVuZEdnZ0xTQXpJRDhnYVM1c1pXNW5kR2dnTFNBeElEb2dieUFySURKZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxuTmxkQ2h3WXloaExDQnNMbmdzSUdNdWVDd2dhQzU0TENCMUxuZ3BMQ0J3WXloaExDQnNMbmtzSUdNdWVTd2dhQzU1TENCMUxua3BLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjRzlwYm5SeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWNHOXBiblJ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzV3YjJsdWRITmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0c5cGJuUnpMbkIxYzJnb2FTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0JsTG5CdmFXNTBjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG5CdmFXNTBjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Y0c5cGJuUnpXM1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbkJ2YVc1MGN5NXdkWE5vS0drdWRHOUJjbkpoZVNncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVjRzlwYm5SekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHOXBiblJ6TG5CMWMyZ29ibVYzSUZnb0tTNW1jbTl0UVhKeVlYa29hU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS2ZUc0tkVzh1Y0hKdmRHOTBlWEJsTG1selUzQnNhVzVsUTNWeWRtVWdQU0FoTURzS2RtRnlJRlJoSUQwZ1QySnFaV04wTG1aeVpXVjZaU2g3Q2lBZ0lDQmZYM0J5YjNSdlgxODZJRzUxYkd3c0NpQWdJQ0JCY21ORGRYSjJaVG9nVFdFc0NpQWdJQ0JEWVhSdGRXeHNVbTl0UTNWeWRtVXpPaUIzWVN3S0lDQWdJRU4xWW1salFtVjZhV1Z5UTNWeWRtVTZJR3h2TEFvZ0lDQWdRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpUTTZJRk5oTEFvZ0lDQWdSV3hzYVhCelpVTjFjblpsT2lCVmNpd0tJQ0FnSUV4cGJtVkRkWEoyWlRvZ1QzSXNDaUFnSUNCTWFXNWxRM1Z5ZG1Vek9pQkZhQ3dLSUNBZ0lGRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxPaUJqYnl3S0lDQWdJRkYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsTXpvZ2FHOHNDaUFnSUNCVGNHeHBibVZEZFhKMlpUb2dkVzhLZlNrc0lFRm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrTjFjblpsVUdGMGFDSXNJSFJvYVhNdVkzVnlkbVZ6SUQwZ1cxMHNJSFJvYVhNdVlYVjBiME5zYjNObElEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCaFpHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZM1Z5ZG1WekxuQjFjMmdvWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl6WlZCaGRHZ29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtTjFjblpsYzFzd1hTNW5aWFJRYjJsdWRDZ3dLU3dnZENBOUlIUm9hWE11WTNWeWRtVnpXM1JvYVhNdVkzVnlkbVZ6TG14bGJtZDBhQ0F0SURGZExtZGxkRkJ2YVc1MEtERXBPd29nSUNBZ0lDQWdJR1V1WlhGMVlXeHpLSFFwSUh4OElIUm9hWE11WTNWeWRtVnpMbkIxYzJnb2JtVjNJRTl5S0hRc0lHVXBLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1VnS2lCMGFHbHpMbWRsZEV4bGJtZDBhQ2dwTENCcElEMGdkR2hwY3k1blpYUkRkWEoyWlV4bGJtZDBhSE1vS1N3Z2NpQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtEc2djaUE4SUdrdWJHVnVaM1JvT3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocFczSmRJRDQ5SUc0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2FWdHlYU0F0SUc0c0lHRWdQU0IwYUdsekxtTjFjblpsYzF0eVhTd2diQ0E5SUdFdVoyVjBUR1Z1WjNSb0tDa3NJR01nUFNCc0lEMDlQU0F3SUQ4Z01DQTZJREVnTFNCdklDOGdiRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhMbWRsZEZCdmFXNTBRWFFvWXl3Z2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjaXNyT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJR2RsZEV4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaMlYwUTNWeWRtVk1aVzVuZEdoektDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJaUzVzWlc1bmRHZ2dMU0F4WFRzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlVGeVkweGxibWQwYUhNb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpMbU5oWTJobFRHVnVaM1JvY3lBOUlHNTFiR3dzSUhSb2FYTXVaMlYwUTNWeWRtVk1aVzVuZEdoektDazdDaUFnSUNCOUNpQWdJQ0JuWlhSRGRYSjJaVXhsYm1kMGFITW9LU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTJGamFHVk1aVzVuZEdoeklDWW1JSFJvYVhNdVkyRmphR1ZNWlc1bmRHaHpMbXhsYm1kMGFDQTlQVDBnZEdocGN5NWpkWEoyWlhNdWJHVnVaM1JvS1NCeVpYUjFjbTRnZEdocGN5NWpZV05vWlV4bGJtZDBhSE03Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0JiWFN3Z2RDQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhSb2FYTXVZM1Z5ZG1WekxteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDBJQ3M5SUhSb2FYTXVZM1Z5ZG1WelcyNWRMbWRsZEV4bGJtZDBhQ2dwTENCbExuQjFjMmdvZENrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMkZqYUdWTVpXNW5kR2h6SUQwZ1pTd2daVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGTndZV05sWkZCdmFXNTBjeWhsSUQwZ05EQXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUEQwZ1pUc2diaXNyS1hRdWNIVnphQ2gwYUdsekxtZGxkRkJ2YVc1MEtHNGdMeUJsS1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFYwYjBOc2IzTmxJQ1ltSUhRdWNIVnphQ2gwV3pCZEtTd2dkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwY3lobElEMGdNVElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZExDQnVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0IwYUdsekxtTjFjblpsY3pzZ2FTQThJSEl1YkdWdVozUm9PeUJwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSEpiYVYwc0lHRWdQU0J2SUNZbUlHOHVhWE5GYkd4cGNITmxRM1Z5ZG1VZ1B5QmxJQ29nTWlBNklHOGdKaVlnS0c4dWFYTk1hVzVsUTNWeWRtVWdmSHdnYnk1cGMweHBibVZEZFhKMlpUTXBJRDhnTVNBNklHOGdKaVlnYnk1cGMxTndiR2x1WlVOMWNuWmxJRDhnWlNBcUlHOHVjRzlwYm5SekxteGxibWQwYUNBNklHVXNJR3dnUFNCdkxtZGxkRkJ2YVc1MGN5aGhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNRHNnWXlBOElHd3ViR1Z1WjNSb095QmpLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JzVzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JpQW1KaUJ1TG1WeGRXRnNjeWhvS1NCOGZDQW9kQzV3ZFhOb0tHZ3BMQ0J1SUQwZ2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFYwYjBOc2IzTmxJQ1ltSUhRdWJHVnVaM1JvSUQ0Z01TQW1KaUFoZEZ0MExteGxibWQwYUNBdElERmRMbVZ4ZFdGc2N5aDBXekJkS1NBbUppQjBMbkIxYzJnb2RGc3dYU2tzSUhRN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU4xY25abGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCbExtTjFjblpsY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1WTNWeWRtVnpXM1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tHa3VZMnh2Ym1Vb0tTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GMWRHOURiRzl6WlNBOUlHVXVZWFYwYjBOc2IzTmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ1pTNWhkWFJ2UTJ4dmMyVWdQU0IwYUdsekxtRjFkRzlEYkc5elpTd2daUzVqZFhKMlpYTWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVqZFhKMlpYTXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMGFHbHpMbU4xY25abGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNWpkWEoyWlhNdWNIVnphQ2hwTG5SdlNsTlBUaWdwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVZWFYwYjBOc2IzTmxJRDBnWlM1aGRYUnZRMnh2YzJVc0lIUm9hWE11WTNWeWRtVnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVZM1Z5ZG1WekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1amRYSjJaWE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29ibVYzSUZSaFcya3VkSGx3WlYwb0tTNW1jbTl0U2xOUFRpaHBLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFwOUxDQm5jaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRV2dnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVR0YwYUNJc0lIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MElEMGdibVYzSUZnc0lHVWdKaVlnZEdocGN5NXpaWFJHY205dFVHOXBiblJ6S0dVcE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWQnZhVzUwY3lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dGIzWmxWRzhvWlZzd1hTNTRMQ0JsV3pCZExua3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURFc0lHNGdQU0JsTG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsMGFHbHpMbXhwYm1WVWJ5aGxXM1JkTG5nc0lHVmJkRjB1ZVNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0YjNabFZHOG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1elpYUW9aU3dnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc2FXNWxWRzhvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdibVYzSUU5eUtIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExtTnNiMjVsS0Nrc0lHNWxkeUJZS0dVc0lIUXBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSjJaWE11Y0hWemFDaHVLU3dnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1YzJWMEtHVXNJSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY1hWaFpISmhkR2xqUTNWeWRtVlVieWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dZMjhvZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1WTJ4dmJtVW9LU3dnYm1WM0lGZ29aU3dnZENrc0lHNWxkeUJZS0c0c0lHa3BLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSjJaWE11Y0hWemFDaHlLU3dnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1YzJWMEtHNHNJR2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWW1WNmFXVnlRM1Z5ZG1WVWJ5aGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnYkc4b2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdVkyeHZibVVvS1N3Z2JtVjNJRmdvWlN3Z2RDa3NJRzVsZHlCWUtHNHNJR2twTENCdVpYY2dXQ2h5TENCdktTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNWeWRtVnpMbkIxYzJnb1lTa3NJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbk5sZENoeUxDQnZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE53YkdsdVpWUm9jblVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzVqYkc5dVpTZ3BDaUFnSUNBZ0lDQWdYUzVqYjI1allYUW9aU2tzSUc0Z1BTQnVaWGNnZFc4b2RDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNWeWRtVnpMbkIxYzJnb2Jpa3NJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbU52Y0hrb1pWdGxMbXhsYm1kMGFDQXRJREZkS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGeVl5aGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNTRMQ0JzSUQwZ2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdWVUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoWW5OaGNtTW9aU0FySUdFc0lIUWdLeUJzTENCdUxDQnBMQ0J5TENCdktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmljMkZ5WXlobExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZV0p6Wld4c2FYQnpaU2hsTENCMExDQnVMQ0J1TENCcExDQnlMQ0J2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWc2JHbHdjMlVvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDa2dld29nSUNBZ0lDQWdJR3hsZENCaklEMGdkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVlQ3dnYUNBOUlIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExuazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVdKelpXeHNhWEJ6WlNobElDc2dZeXdnZENBcklHZ3NJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV0p6Wld4c2FYQnpaU2hsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQnVaWGNnVlhJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTNWeWRtVnpMbXhsYm1kMGFDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQmpMbWRsZEZCdmFXNTBLREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjFMbVZ4ZFdGc2N5aDBhR2x6TG1OMWNuSmxiblJRYjJsdWRDa2dmSHdnZEdocGN5NXNhVzVsVkc4b2RTNTRMQ0IxTG5rcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuWmxjeTV3ZFhOb0tHTXBPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdZeTVuWlhSUWIybHVkQ2d4S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1WTI5d2VTaG9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1amIzQjVLR1V1WTNWeWNtVnVkRkJ2YVc1MEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1OMWNuSmxiblJRYjJsdWRDQTlJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMblJ2UVhKeVlYa29LU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbVp5YjIxQmNuSmhlU2hsTG1OMWNuSmxiblJRYjJsdWRDa3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lGaDBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qm5jaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMblI1Y0dVZ1BTQWlVMmhoY0dVaUxDQjBhR2x6TG1odmJHVnpJRDBnVzEwN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRITkliMnhsY3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEdocGN5NW9iMnhsY3k1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGRGdHVYU0E5SUhSb2FYTXVhRzlzWlhOYmJsMHVaMlYwVUc5cGJuUnpLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwT3dvZ0lDQWdmUW9nSUNBZ1pYaDBjbUZqZEZCdmFXNTBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dVNklIUm9hWE11WjJWMFVHOXBiblJ6S0dVcExBb2dJQ0FnSUNBZ0lDQWdJQ0JvYjJ4bGN6b2dkR2hwY3k1blpYUlFiMmx1ZEhOSWIyeGxjeWhsS1FvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbWh2YkdWeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWFHOXNaWE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQmxMbWh2YkdWelczUmRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWh2YkdWekxuQjFjMmdvYVM1amJHOXVaU2dwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQmxMblYxYVdRZ1BTQjBhR2x6TG5WMWFXUXNJR1V1YUc5c1pYTWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVvYjJ4bGN5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVhRzlzWlhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWFHOXNaWE11Y0hWemFDaHBMblJ2U2xOUFRpZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWRYVnBaQ0E5SUdVdWRYVnBaQ3dnZEdocGN5NW9iMnhsY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0JsTG1odmJHVnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNW9iMnhsYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW9iMnhsY3k1d2RYTm9LRzVsZHlCbmNpZ3BMbVp5YjIxS1UwOU9LR2twS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNuMHNJRTk0SUQwZ2V3b2dJQ0FnZEhKcFlXNW5kV3hoZEdVNklHWjFibU4wYVc5dUtITXNJR1VzSUhRZ1BTQXlLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsSUNZbUlHVXViR1Z1WjNSb0xDQnBJRDBnYmlBL0lHVmJNRjBnS2lCMElEb2djeTVzWlc1bmRHZ3NJSElnUFNCRGFDaHpMQ0F3TENCcExDQjBMQ0FoTUNrc0lHOGdQU0JiWFRzS0lDQWdJQ0FnSUNCcFppQW9JWElnZkh3Z2NpNXVaWGgwSUQwOVBTQnlMbkJ5WlhZcElISmxkSFZ5YmlCdk93b2dJQ0FnSUNBZ0lHeGxkQ0JoTENCc0xDQmpMQ0JvTENCMUxDQmtMQ0JtT3dvZ0lDQWdJQ0FnSUdsbUlDaHVJQ1ltSUNoeUlEMGdWM2dvY3l3Z1pTd2djaXdnZENrcExDQnpMbXhsYm1kMGFDQStJRGd3SUNvZ2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNCaElEMGdZeUE5SUhOYk1GMHNJR3dnUFNCb0lEMGdjMXN4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRJRDBnZERzZ2JTQThJR2s3SUcwZ0t6MGdkQ2wxSUQwZ2MxdHRYU3dnWkNBOUlITmJiU0FySURGZExDQjFJRHdnWVNBbUppQW9ZU0E5SUhVcExDQmtJRHdnYkNBbUppQW9iQ0E5SUdRcExDQjFJRDRnWXlBbUppQW9ZeUE5SUhVcExDQmtJRDRnYUNBbUppQW9hQ0E5SUdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtSUQwZ1RXRjBhQzV0WVhnb1l5QXRJR0VzSUdnZ0xTQnNLU3dnWmlBOUlHWWdJVDA5SURBZ1B5QXhJQzhnWmlBNklEQTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjRjaWh5TENCdkxDQjBMQ0JoTENCc0xDQm1LU3dnYnpzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1EyZ29jeXdnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnYkdWMElISXNJRzg3Q2lBZ0lDQnBaaUFvYVNBOVBUMGdkSGtvY3l3Z1pTd2dkQ3dnYmlrZ1BpQXdLU0JtYjNJb2NpQTlJR1U3SUhJZ1BDQjBPeUJ5SUNzOUlHNHBieUE5SUcxaktISXNJSE5iY2wwc0lITmJjaUFySURGZExDQnZLVHNLSUNBZ0lHVnNjMlVnWm05eUtISWdQU0IwSUMwZ2Jqc2djaUErUFNCbE95QnlJQzA5SUc0cGJ5QTlJRzFqS0hJc0lITmJjbDBzSUhOYmNpQXJJREZkTENCdktUc0tJQ0FnSUhKbGRIVnliaUJ2SUNZbUlHWnZLRzhzSUc4dWJtVjRkQ2tnSmlZZ0tIWnlLRzhwTENCdklEMGdieTV1WlhoMEtTd2dienNLZlFwbWRXNWpkR2x2YmlCVWJpaHpMQ0JsS1NCN0NpQWdJQ0JwWmlBb0lYTXBJSEpsZEhWeWJpQnpPd29nSUNBZ1pTQjhmQ0FvWlNBOUlITXBPd29nSUNBZ2JHVjBJSFFnUFNCekxDQnVPd29nSUNBZ1pHOGdhV1lnS0c0Z1BTQWhNU3dnSVhRdWMzUmxhVzVsY2lBbUppQW9abThvZEN3Z2RDNXVaWGgwS1NCOGZDQWtaU2gwTG5CeVpYWXNJSFFzSUhRdWJtVjRkQ2tnUFQwOUlEQXBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIWnlLSFFwTENCMElEMGdaU0E5SUhRdWNISmxkaXdnZENBOVBUMGdkQzV1WlhoMEtTQmljbVZoYXpzS0lDQWdJQ0FnSUNCdUlEMGdJVEE3Q2lBZ0lDQjlJR1ZzYzJVZ2RDQTlJSFF1Ym1WNGREc0tJQ0FnSUhkb2FXeGxJQ2h1SUh4OElIUWdJVDA5SUdVcENpQWdJQ0J5WlhSMWNtNGdaVHNLZlFwbWRXNWpkR2x2YmlCNGNpaHpMQ0JsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQnBaaUFvSVhNcElISmxkSFZ5YmpzS0lDQWdJQ0Z2SUNZbUlISWdKaVlnV25nb2N5d2diaXdnYVN3Z2NpazdDaUFnSUNCc1pYUWdZU0E5SUhNc0lHd3NJR003Q2lBZ0lDQm1iM0lvT3lCekxuQnlaWFlnSVQwOUlITXVibVY0ZERzcGV3b2dJQ0FnSUNBZ0lHbG1JQ2hzSUQwZ2N5NXdjbVYyTENCaklEMGdjeTV1WlhoMExDQnlJRDhnYTNnb2N5d2diaXdnYVN3Z2Npa2dPaUJJZUNoektTa2dld29nSUNBZ0lDQWdJQ0FnSUNCbExuQjFjMmdvYkM1cElDOGdkQ2tzSUdVdWNIVnphQ2h6TG1rZ0x5QjBLU3dnWlM1d2RYTm9LR011YVNBdklIUXBMQ0IyY2loektTd2djeUE5SUdNdWJtVjRkQ3dnWVNBOUlHTXVibVY0ZERzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoeklEMGdZeXdnY3lBOVBUMGdZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZJRDhnYnlBOVBUMGdNU0EvSUNoeklEMGdSM2dvVkc0b2N5a3NJR1VzSUhRcExDQjRjaWh6TENCbExDQjBMQ0J1TENCcExDQnlMQ0F5S1NrZ09pQnZJRDA5UFNBeUlDWW1JRlo0S0hNc0lHVXNJSFFzSUc0c0lHa3NJSElwSURvZ2VISW9WRzRvY3lrc0lHVXNJSFFzSUc0c0lHa3NJSElzSURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdTSGdvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0J6TG5CeVpYWXNJSFFnUFNCekxDQnVJRDBnY3k1dVpYaDBPd29nSUNBZ2FXWWdLQ1JsS0dVc0lIUXNJRzRwSUQ0OUlEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lHeGxkQ0JwSUQwZ2N5NXVaWGgwTG01bGVIUTdDaUFnSUNCbWIzSW9PeUJwSUNFOVBTQnpMbkJ5WlhZN0tYc0tJQ0FnSUNBZ0lDQnBaaUFvVTJrb1pTNTRMQ0JsTG5rc0lIUXVlQ3dnZEM1NUxDQnVMbmdzSUc0dWVTd2dhUzU0TENCcExua3BJQ1ltSUNSbEtHa3VjSEpsZGl3Z2FTd2dhUzV1WlhoMEtTQStQU0F3S1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0FnSUNBZ2FTQTlJR2t1Ym1WNGREc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQWhNRHNLZlFwbWRXNWpkR2x2YmlCcmVDaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlITXVjSEpsZGl3Z2NpQTlJSE1zSUc4Z1BTQnpMbTVsZUhRN0NpQWdJQ0JwWmlBb0pHVW9hU3dnY2l3Z2J5a2dQajBnTUNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnYkdWMElHRWdQU0JwTG5nZ1BDQnlMbmdnUHlCcExuZ2dQQ0J2TG5nZ1B5QnBMbmdnT2lCdkxuZ2dPaUJ5TG5nZ1BDQnZMbmdnUHlCeUxuZ2dPaUJ2TG5nc0lHd2dQU0JwTG5rZ1BDQnlMbmtnUHlCcExua2dQQ0J2TG5rZ1B5QnBMbmtnT2lCdkxua2dPaUJ5TG5rZ1BDQnZMbmtnUHlCeUxua2dPaUJ2TG5rc0lHTWdQU0JwTG5nZ1BpQnlMbmdnUHlCcExuZ2dQaUJ2TG5nZ1B5QnBMbmdnT2lCdkxuZ2dPaUJ5TG5nZ1BpQnZMbmdnUHlCeUxuZ2dPaUJ2TG5nc0lHZ2dQU0JwTG5rZ1BpQnlMbmtnUHlCcExua2dQaUJ2TG5rZ1B5QnBMbmtnT2lCdkxua2dPaUJ5TG5rZ1BpQnZMbmtnUHlCeUxua2dPaUJ2TG5rc0lIVWdQU0J2WVNoaExDQnNMQ0JsTENCMExDQnVLU3dnWkNBOUlHOWhLR01zSUdnc0lHVXNJSFFzSUc0cExDQm1JRDBnY3k1d2NtVjJXaXdnYlNBOUlITXVibVY0ZEZvN0NpQWdJQ0JtYjNJb095Qm1JQ1ltSUdZdWVpQStQU0IxSUNZbUlHMGdKaVlnYlM1NklEdzlJR1E3S1hzS0lDQWdJQ0FnSUNCcFppQW9aaUFoUFQwZ2N5NXdjbVYySUNZbUlHWWdJVDA5SUhNdWJtVjRkQ0FtSmlCVGFTaHBMbmdzSUdrdWVTd2djaTU0TENCeUxua3NJRzh1ZUN3Z2J5NTVMQ0JtTG5nc0lHWXVlU2tnSmlZZ0pHVW9aaTV3Y21WMkxDQm1MQ0JtTG01bGVIUXBJRDQ5SURBZ2ZId2dLR1lnUFNCbUxuQnlaWFphTENCdElDRTlQU0J6TG5CeVpYWWdKaVlnYlNBaFBUMGdjeTV1WlhoMElDWW1JRk5wS0drdWVDd2dhUzU1TENCeUxuZ3NJSEl1ZVN3Z2J5NTRMQ0J2TG5rc0lHMHVlQ3dnYlM1NUtTQW1KaUFrWlNodExuQnlaWFlzSUcwc0lHMHVibVY0ZENrZ1BqMGdNQ2twSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCdElEMGdiUzV1WlhoMFdqc0tJQ0FnSUgwS0lDQWdJR1p2Y2lnN0lHWWdKaVlnWmk1NklENDlJSFU3S1hzS0lDQWdJQ0FnSUNCcFppQW9aaUFoUFQwZ2N5NXdjbVYySUNZbUlHWWdJVDA5SUhNdWJtVjRkQ0FtSmlCVGFTaHBMbmdzSUdrdWVTd2djaTU0TENCeUxua3NJRzh1ZUN3Z2J5NTVMQ0JtTG5nc0lHWXVlU2tnSmlZZ0pHVW9aaTV3Y21WMkxDQm1MQ0JtTG01bGVIUXBJRDQ5SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQm1JRDBnWmk1d2NtVjJXanNLSUNBZ0lIMEtJQ0FnSUdadmNpZzdJRzBnSmlZZ2JTNTZJRHc5SUdRN0tYc0tJQ0FnSUNBZ0lDQnBaaUFvYlNBaFBUMGdjeTV3Y21WMklDWW1JRzBnSVQwOUlITXVibVY0ZENBbUppQlRhU2hwTG5nc0lHa3VlU3dnY2k1NExDQnlMbmtzSUc4dWVDd2dieTU1TENCdExuZ3NJRzB1ZVNrZ0ppWWdKR1VvYlM1d2NtVjJMQ0J0TENCdExtNWxlSFFwSUQ0OUlEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0J0SUQwZ2JTNXVaWGgwV2pzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlBaE1Ec0tmUXBtZFc1amRHbHZiaUJIZUNoekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSE03Q2lBZ0lDQmtieUI3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1TG5CeVpYWXNJSElnUFNCdUxtNWxlSFF1Ym1WNGREc0tJQ0FnSUNBZ0lDQWhabThvYVN3Z2Npa2dKaVlnVEdnb2FTd2diaXdnYmk1dVpYaDBMQ0J5S1NBbUppQjVjaWhwTENCeUtTQW1KaUI1Y2loeUxDQnBLU0FtSmlBb1pTNXdkWE5vS0drdWFTQXZJSFFwTENCbExuQjFjMmdvYmk1cElDOGdkQ2tzSUdVdWNIVnphQ2h5TG1rZ0x5QjBLU3dnZG5Jb2Jpa3NJSFp5S0c0dWJtVjRkQ2tzSUc0Z1BTQnpJRDBnY2lrc0lHNGdQU0J1TG01bGVIUTdDaUFnSUNCOWQyaHBiR1VnS0c0Z0lUMDlJSE1wQ2lBZ0lDQnlaWFIxY200Z1ZHNG9iaWs3Q24wS1puVnVZM1JwYjI0Z1ZuZ29jeXdnWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ2JHVjBJRzhnUFNCek93b2dJQ0FnWkc4Z2V3b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2J5NXVaWGgwTG01bGVIUTdDaUFnSUNBZ0lDQWdabTl5S0RzZ1lTQWhQVDBnYnk1d2NtVjJPeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2TG1rZ0lUMDlJR0V1YVNBbUppQlJlQ2h2TENCaEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQlNhQ2h2TENCaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0JVYmlodkxDQnZMbTVsZUhRcExDQnNJRDBnVkc0b2JDd2diQzV1WlhoMEtTd2dlSElvYnl3Z1pTd2dkQ3dnYml3Z2FTd2djaWtzSUhoeUtHd3NJR1VzSUhRc0lHNHNJR2tzSUhJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdFZ1BTQmhMbTVsZUhRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHOGdQU0J2TG01bGVIUTdDaUFnSUNCOWQyaHBiR1VnS0c4Z0lUMDlJSE1wQ24wS1puVnVZM1JwYjI0Z1YzZ29jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQmJYU3dnY2l3Z2J5d2dZU3dnYkN3Z1l6c0tJQ0FnSUdadmNpaHlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1dFZ1BTQmxXM0pkSUNvZ2Jpd2diQ0E5SUhJZ1BDQnZJQzBnTVNBL0lHVmJjaUFySURGZElDb2diaUE2SUhNdWJHVnVaM1JvTENCaklEMGdRMmdvY3l3Z1lTd2diQ3dnYml3Z0lURXBMQ0JqSUQwOVBTQmpMbTVsZUhRZ0ppWWdLR011YzNSbGFXNWxjaUE5SUNFd0tTd2dhUzV3ZFhOb0tHcDRLR01wS1RzS0lDQWdJR1p2Y2locExuTnZjblFvY1hncExDQnlJRDBnTURzZ2NpQThJR2t1YkdWdVozUm9PeUJ5S3lzcFdIZ29hVnR5WFN3Z2RDa3NJSFFnUFNCVWJpaDBMQ0IwTG01bGVIUXBPd29nSUNBZ2NtVjBkWEp1SUhRN0NuMEtablZ1WTNScGIyNGdjWGdvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNdWVDQXRJR1V1ZURzS2ZRcG1kVzVqZEdsdmJpQlllQ2h6TENCbEtTQjdDaUFnSUNCcFppQW9aU0E5SUVwNEtITXNJR1VwTENCbEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQlNhQ2hsTENCektUc0tJQ0FnSUNBZ0lDQlViaWhsTENCbExtNWxlSFFwTENCVWJpaDBMQ0IwTG01bGVIUXBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJRXA0S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1pTd2diaUE5SUhNdWVDd2dhU0E5SUhNdWVTd2djaUE5SUMweElDOGdNQ3dnYnpzS0lDQWdJR1J2SUhzS0lDQWdJQ0FnSUNCcFppQW9hU0E4UFNCMExua2dKaVlnYVNBK1BTQjBMbTVsZUhRdWVTQW1KaUIwTG01bGVIUXVlU0FoUFQwZ2RDNTVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2RDNTRJQ3NnS0drZ0xTQjBMbmtwSUNvZ0tIUXVibVY0ZEM1NElDMGdkQzU0S1NBdklDaDBMbTVsZUhRdWVTQXRJSFF1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa0lEdzlJRzRnSmlZZ1pDQStJSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDBnWkN3Z1pDQTlQVDBnYmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMDlQU0IwTG5rcElISmxkSFZ5YmlCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMDlQU0IwTG01bGVIUXVlU2tnY21WMGRYSnVJSFF1Ym1WNGREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0IwTG5nZ1BDQjBMbTVsZUhRdWVDQS9JSFFnT2lCMExtNWxlSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQ0E5SUhRdWJtVjRkRHNLSUNBZ0lIMTNhR2xzWlNBb2RDQWhQVDBnWlNrS0lDQWdJR2xtSUNnaGJ5a2djbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQnBaaUFvYmlBOVBUMGdjaWtnY21WMGRYSnVJRzg3Q2lBZ0lDQnNaWFFnWVNBOUlHOHNJR3dnUFNCdkxuZ3NJR01nUFNCdkxua3NJR2dnUFNBeElDOGdNQ3dnZFRzS0lDQWdJSFFnUFNCdk93b2dJQ0FnWkc4Z2JpQStQU0IwTG5nZ0ppWWdkQzU0SUQ0OUlHd2dKaVlnYmlBaFBUMGdkQzU0SUNZbUlGTnBLR2tnUENCaklEOGdiaUE2SUhJc0lHa3NJR3dzSUdNc0lHa2dQQ0JqSUQ4Z2NpQTZJRzRzSUdrc0lIUXVlQ3dnZEM1NUtTQW1KaUFvZFNBOUlFMWhkR2d1WVdKektHa2dMU0IwTG5rcElDOGdLRzRnTFNCMExuZ3BMQ0I1Y2loMExDQnpLU0FtSmlBb2RTQThJR2dnZkh3Z2RTQTlQVDBnYUNBbUppQW9kQzU0SUQ0Z2J5NTRJSHg4SUhRdWVDQTlQVDBnYnk1NElDWW1JRmw0S0c4c0lIUXBLU2tnSmlZZ0tHOGdQU0IwTENCb0lEMGdkU2twTENCMElEMGdkQzV1WlhoME93b2dJQ0FnZDJocGJHVWdLSFFnSVQwOUlHRXBDaUFnSUNCeVpYUjFjbTRnYnpzS2ZRcG1kVzVqZEdsdmJpQlplQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnSkdVb2N5NXdjbVYyTENCekxDQmxMbkJ5WlhZcElEd2dNQ0FtSmlBa1pTaGxMbTVsZUhRc0lITXNJSE11Ym1WNGRDa2dQQ0F3T3dwOUNtWjFibU4wYVc5dUlGcDRLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdjenNLSUNBZ0lHUnZJR2t1ZWlBOVBUMGdiblZzYkNBbUppQW9hUzU2SUQwZ2IyRW9hUzU0TENCcExua3NJR1VzSUhRc0lHNHBLU3dnYVM1d2NtVjJXaUE5SUdrdWNISmxkaXdnYVM1dVpYaDBXaUE5SUdrdWJtVjRkQ3dnYVNBOUlHa3VibVY0ZERzS0lDQWdJSGRvYVd4bElDaHBJQ0U5UFNCektRb2dJQ0FnYVM1d2NtVjJXaTV1WlhoMFdpQTlJRzUxYkd3c0lHa3VjSEpsZGxvZ1BTQnVkV3hzTENBa2VDaHBLVHNLZlFwbWRXNWpkR2x2YmlBa2VDaHpLU0I3Q2lBZ0lDQnNaWFFnWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeUE5SURFN0NpQWdJQ0JrYnlCN0NpQWdJQ0FnSUNBZ1ptOXlLSFFnUFNCekxDQnpJRDBnYm5Wc2JDd2djaUE5SUc1MWJHd3NJRzhnUFNBd095QjBPeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWh2S3lzc0lHNGdQU0IwTENCaElEMGdNQ3dnWlNBOUlEQTdJR1VnUENCaklDWW1JQ2hoS3lzc0lHNGdQU0J1TG01bGVIUmFMQ0FoSVc0cE95QmxLeXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkNBOUlHTTdJR0VnUGlBd0lIeDhJR3dnUGlBd0lDWW1JRzQ3S1dFZ0lUMDlJREFnSmlZZ0tHd2dQVDA5SURBZ2ZId2dJVzRnZkh3Z2RDNTZJRHc5SUc0dWVpa2dQeUFvYVNBOUlIUXNJSFFnUFNCMExtNWxlSFJhTENCaExTMHBJRG9nS0drZ1BTQnVMQ0J1SUQwZ2JpNXVaWGgwV2l3Z2JDMHRLU3dnY2lBL0lISXVibVY0ZEZvZ1BTQnBJRG9nY3lBOUlHa3NJR2t1Y0hKbGRsb2dQU0J5TENCeUlEMGdhVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJRzQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhJdWJtVjRkRm9nUFNCdWRXeHNMQ0JqSUNvOUlESTdDaUFnSUNCOWQyaHBiR1VnS0c4Z1BpQXhLUW9nSUNBZ2NtVjBkWEp1SUhNN0NuMEtablZ1WTNScGIyNGdiMkVvY3l3Z1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ2NtVjBkWEp1SUhNZ1BTQXpNamMyTnlBcUlDaHpJQzBnZENrZ0tpQnBMQ0JsSUQwZ016STNOamNnS2lBb1pTQXRJRzRwSUNvZ2FTd2djeUE5SUNoeklId2djeUE4UENBNEtTQW1JREUyTnpFeE9UTTFMQ0J6SUQwZ0tITWdmQ0J6SUR3OElEUXBJQ1lnTWpVeU5qUTFNVE0xTENCeklEMGdLSE1nZkNCeklEdzhJRElwSUNZZ09EVTRPVGt6TkRVNUxDQnpJRDBnS0hNZ2ZDQnpJRHc4SURFcElDWWdNVFF6TVRZMU5UYzJOU3dnWlNBOUlDaGxJSHdnWlNBOFBDQTRLU0FtSURFMk56RXhPVE0xTENCbElEMGdLR1VnZkNCbElEdzhJRFFwSUNZZ01qVXlOalExTVRNMUxDQmxJRDBnS0dVZ2ZDQmxJRHc4SURJcElDWWdPRFU0T1Rrek5EVTVMQ0JsSUQwZ0tHVWdmQ0JsSUR3OElERXBJQ1lnTVRRek1UWTFOVGMyTlN3Z2N5QjhJR1VnUER3Z01Uc0tmUXBtZFc1amRHbHZiaUJxZUNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUhNc0lIUWdQU0J6T3dvZ0lDQWdaRzhnS0dVdWVDQThJSFF1ZUNCOGZDQmxMbmdnUFQwOUlIUXVlQ0FtSmlCbExua2dQQ0IwTG5rcElDWW1JQ2gwSUQwZ1pTa3NJR1VnUFNCbExtNWxlSFE3Q2lBZ0lDQjNhR2xzWlNBb1pTQWhQVDBnY3lrS0lDQWdJSEpsZEhWeWJpQjBPd3A5Q21aMWJtTjBhVzl1SUZOcEtITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VwSUhzS0lDQWdJSEpsZEhWeWJpQW9hU0F0SUc4cElDb2dLR1VnTFNCaEtTQXRJQ2h6SUMwZ2J5a2dLaUFvY2lBdElHRXBJRDQ5SURBZ0ppWWdLSE1nTFNCdktTQXFJQ2h1SUMwZ1lTa2dMU0FvZENBdElHOHBJQ29nS0dVZ0xTQmhLU0ErUFNBd0lDWW1JQ2gwSUMwZ2J5a2dLaUFvY2lBdElHRXBJQzBnS0drZ0xTQnZLU0FxSUNodUlDMGdZU2tnUGowZ01Ec0tmUXBtZFc1amRHbHZiaUJSZUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NXVaWGgwTG1rZ0lUMDlJR1V1YVNBbUppQnpMbkJ5WlhZdWFTQWhQVDBnWlM1cElDWW1JQ0ZMZUNoekxDQmxLU0FtSmlBb2VYSW9jeXdnWlNrZ0ppWWdlWElvWlN3Z2N5a2dKaVlnWlhrb2N5d2daU2tnSmlZZ0tDUmxLSE11Y0hKbGRpd2djeXdnWlM1d2NtVjJLU0I4ZkNBa1pTaHpMQ0JsTG5CeVpYWXNJR1VwS1NCOGZDQm1ieWh6TENCbEtTQW1KaUFrWlNoekxuQnlaWFlzSUhNc0lITXVibVY0ZENrZ1BpQXdJQ1ltSUNSbEtHVXVjSEpsZGl3Z1pTd2daUzV1WlhoMEtTQStJREFwT3dwOUNtWjFibU4wYVc5dUlDUmxLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlBb1pTNTVJQzBnY3k1NUtTQXFJQ2gwTG5nZ0xTQmxMbmdwSUMwZ0tHVXVlQ0F0SUhNdWVDa2dLaUFvZEM1NUlDMGdaUzU1S1RzS2ZRcG1kVzVqZEdsdmJpQm1ieWh6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1NElEMDlQU0JsTG5nZ0ppWWdjeTU1SUQwOVBTQmxMbms3Q24wS1puVnVZM1JwYjI0Z1RHZ29jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQjNjeWdrWlNoekxDQmxMQ0IwS1Nrc0lISWdQU0IzY3lna1pTaHpMQ0JsTENCdUtTa3NJRzhnUFNCM2N5Z2taU2gwTENCdUxDQnpLU2tzSUdFZ1BTQjNjeWdrWlNoMExDQnVMQ0JsS1NrN0NpQWdJQ0J5WlhSMWNtNGdJU0VvYVNBaFBUMGdjaUFtSmlCdklDRTlQU0JoSUh4OElHa2dQVDA5SURBZ0ppWWdZbk1vY3l3Z2RDd2daU2tnZkh3Z2NpQTlQVDBnTUNBbUppQmljeWh6TENCdUxDQmxLU0I4ZkNCdklEMDlQU0F3SUNZbUlHSnpLSFFzSUhNc0lHNHBJSHg4SUdFZ1BUMDlJREFnSmlZZ1luTW9kQ3dnWlN3Z2Jpa3BPd3A5Q21aMWJtTjBhVzl1SUdKektITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUJsTG5nZ1BEMGdUV0YwYUM1dFlYZ29jeTU0TENCMExuZ3BJQ1ltSUdVdWVDQStQU0JOWVhSb0xtMXBiaWh6TG5nc0lIUXVlQ2tnSmlZZ1pTNTVJRHc5SUUxaGRHZ3ViV0Y0S0hNdWVTd2dkQzU1S1NBbUppQmxMbmtnUGowZ1RXRjBhQzV0YVc0b2N5NTVMQ0IwTG5rcE93cDlDbVoxYm1OMGFXOXVJSGR6S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUQ0Z01DQS9JREVnT2lCeklEd2dNQ0EvSUMweElEb2dNRHNLZlFwbWRXNWpkR2x2YmlCTGVDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSE03Q2lBZ0lDQmtieUI3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUXVhU0FoUFQwZ2N5NXBJQ1ltSUhRdWJtVjRkQzVwSUNFOVBTQnpMbWtnSmlZZ2RDNXBJQ0U5UFNCbExta2dKaVlnZEM1dVpYaDBMbWtnSVQwOUlHVXVhU0FtSmlCTWFDaDBMQ0IwTG01bGVIUXNJSE1zSUdVcEtTQnlaWFIxY200Z0lUQTdDaUFnSUNBZ0lDQWdkQ0E5SUhRdWJtVjRkRHNLSUNBZ0lIMTNhR2xzWlNBb2RDQWhQVDBnY3lrS0lDQWdJSEpsZEhWeWJpQWhNVHNLZlFwbWRXNWpkR2x2YmlCNWNpaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdKR1VvY3k1d2NtVjJMQ0J6TENCekxtNWxlSFFwSUR3Z01DQS9JQ1JsS0hNc0lHVXNJSE11Ym1WNGRDa2dQajBnTUNBbUppQWtaU2h6TENCekxuQnlaWFlzSUdVcElENDlJREFnT2lBa1pTaHpMQ0JsTENCekxuQnlaWFlwSUR3Z01DQjhmQ0FrWlNoekxDQnpMbTVsZUhRc0lHVXBJRHdnTURzS2ZRcG1kVzVqZEdsdmJpQmxlU2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhNc0lHNGdQU0FoTVN3Z2FTQTlJQ2h6TG5nZ0t5QmxMbmdwSUM4Z01pd2djaUE5SUNoekxua2dLeUJsTG5rcElDOGdNanNLSUNBZ0lHUnZJSFF1ZVNBK0lISWdJVDBnZEM1dVpYaDBMbmtnUGlCeUlDWW1JSFF1Ym1WNGRDNTVJQ0U5UFNCMExua2dKaVlnYVNBOElDaDBMbTVsZUhRdWVDQXRJSFF1ZUNrZ0tpQW9jaUF0SUhRdWVTa2dMeUFvZEM1dVpYaDBMbmtnTFNCMExua3BJQ3NnZEM1NElDWW1JQ2h1SUQwZ0lXNHBMQ0IwSUQwZ2RDNXVaWGgwT3dvZ0lDQWdkMmhwYkdVZ0tIUWdJVDA5SUhNcENpQWdJQ0J5WlhSMWNtNGdianNLZlFwbWRXNWpkR2x2YmlCU2FDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCaFlTaHpMbWtzSUhNdWVDd2djeTU1S1N3Z2JpQTlJRzVsZHlCaFlTaGxMbWtzSUdVdWVDd2daUzU1S1N3Z2FTQTlJSE11Ym1WNGRDd2djaUE5SUdVdWNISmxkanNLSUNBZ0lISmxkSFZ5YmlCekxtNWxlSFFnUFNCbExDQmxMbkJ5WlhZZ1BTQnpMQ0IwTG01bGVIUWdQU0JwTENCcExuQnlaWFlnUFNCMExDQnVMbTVsZUhRZ1BTQjBMQ0IwTG5CeVpYWWdQU0J1TENCeUxtNWxlSFFnUFNCdUxDQnVMbkJ5WlhZZ1BTQnlMQ0J1T3dwOUNtWjFibU4wYVc5dUlHMWpLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdibVYzSUdGaEtITXNJR1VzSUhRcE93b2dJQ0FnY21WMGRYSnVJRzRnUHlBb2FTNXVaWGgwSUQwZ2JpNXVaWGgwTENCcExuQnlaWFlnUFNCdUxDQnVMbTVsZUhRdWNISmxkaUE5SUdrc0lHNHVibVY0ZENBOUlHa3BJRG9nS0drdWNISmxkaUE5SUdrc0lHa3VibVY0ZENBOUlHa3BMQ0JwT3dwOUNtWjFibU4wYVc5dUlIWnlLSE1wSUhzS0lDQWdJSE11Ym1WNGRDNXdjbVYySUQwZ2N5NXdjbVYyTENCekxuQnlaWFl1Ym1WNGRDQTlJSE11Ym1WNGRDd2djeTV3Y21WMldpQW1KaUFvY3k1d2NtVjJXaTV1WlhoMFdpQTlJSE11Ym1WNGRGb3BMQ0J6TG01bGVIUmFJQ1ltSUNoekxtNWxlSFJhTG5CeVpYWmFJRDBnY3k1d2NtVjJXaWs3Q24wS1puVnVZM1JwYjI0Z1lXRW9jeXdnWlN3Z2RDa2dld29nSUNBZ2RHaHBjeTVwSUQwZ2N5d2dkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnZEN3Z2RHaHBjeTV3Y21WMklEMGdiblZzYkN3Z2RHaHBjeTV1WlhoMElEMGdiblZzYkN3Z2RHaHBjeTU2SUQwZ2JuVnNiQ3dnZEdocGN5NXdjbVYyV2lBOUlHNTFiR3dzSUhSb2FYTXVibVY0ZEZvZ1BTQnVkV3hzTENCMGFHbHpMbk4wWldsdVpYSWdQU0FoTVRzS2ZRcG1kVzVqZEdsdmJpQjBlU2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJREE3Q2lBZ0lDQm1iM0lvYkdWMElISWdQU0JsTENCdklEMGdkQ0F0SUc0N0lISWdQQ0IwT3lCeUlDczlJRzRwYVNBclBTQW9jMXR2WFNBdElITmJjbDBwSUNvZ0tITmJjaUFySURGZElDc2djMXR2SUNzZ01WMHBMQ0J2SUQwZ2Nqc0tJQ0FnSUhKbGRIVnliaUJwT3dwOUNuWmhjaUJLZENBOUlHTnNZWE56SUhzS0lDQWdJSE4wWVhScFl5QmhjbVZoS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXViR1Z1WjNSb0xDQnVJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQjBJQzBnTVN3Z2NpQTlJREE3SUhJZ1BDQjBPeUJwSUQwZ2Npc3JLVzRnS3owZ1pWdHBYUzU0SUNvZ1pWdHlYUzU1SUMwZ1pWdHlYUzU0SUNvZ1pWdHBYUzU1T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1SUNvZ0xqVTdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdhWE5EYkc5amExZHBjMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCS2RDNWhjbVZoS0dVcElEd2dNRHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUIwY21saGJtZDFiR0YwWlZOb1lYQmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGdGRMQ0JwSUQwZ1cxMHNJSElnUFNCYlhUc0tJQ0FnSUNBZ0lDQm5ZeWhsS1N3Z2VHTW9iaXdnWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbExteGxibWQwYURzS0lDQWdJQ0FnSUNCMExtWnZja1ZoWTJnb1oyTXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiQ0E5SURBN0lHd2dQQ0IwTG14bGJtZDBhRHNnYkNzcktXa3VjSFZ6YUNodktTd2dieUFyUFNCMFcyeGRMbXhsYm1kMGFDd2dlR01vYml3Z2RGdHNYU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0JQZUM1MGNtbGhibWQxYkdGMFpTaHVMQ0JwS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUd3eElEMGdNRHNnYkRFZ1BDQmhMbXhsYm1kMGFEc2diREVnS3owZ015bHlMbkIxYzJnb1lTNXpiR2xqWlNoc01Td2diREVnS3lBektTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISTdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJR2RqS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnY3k1c1pXNW5kR2c3Q2lBZ0lDQmxJRDRnTWlBbUppQnpXMlVnTFNBeFhTNWxjWFZoYkhNb2Mxc3dYU2tnSmlZZ2N5NXdiM0FvS1RzS2ZRcG1kVzVqZEdsdmJpQjRZeWh6TENCbEtTQjdDaUFnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z1pTNXNaVzVuZEdnN0lIUXJLeWx6TG5CMWMyZ29aVnQwWFM1NEtTd2djeTV3ZFhOb0tHVmJkRjB1ZVNrN0NuMEtkbUZ5SUd4dUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGaDBLRnNLSUNBZ0lDQWdJQ0J1WlhjZ1dDZ3VOU3dnTGpVcExBb2dJQ0FnSUNBZ0lHNWxkeUJZS0MwdU5Td2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLQzB1TlN3Z0xTNDFLU3dLSUNBZ0lDQWdJQ0J1WlhjZ1dDZ3VOU3dnTFM0MUtRb2dJQ0FnWFNrc0lIUWdQU0I3ZlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlSWGgwY25Wa1pVZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCemFHRndaWE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJRzl3ZEdsdmJuTTZJSFFLSUNBZ0lDQWdJQ0I5TENCbElEMGdRWEp5WVhrdWFYTkJjbkpoZVNobEtTQS9JR1VnT2lCYkNpQWdJQ0FnSUNBZ0lDQWdJR1VLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5d2dhU0E5SUZ0ZExDQnlJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNQ3dnYkNBOUlHVXViR1Z1WjNSb095QmhJRHdnYkRzZ1lTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCbFcyRmRPd29nSUNBZ0lDQWdJQ0FnSUNCdktHTXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYVN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnWkdVb2Npd2dNaWtwTENCMGFHbHpMbU52YlhCMWRHVldaWEowWlhoT2IzSnRZV3h6S0NrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2J5aGhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1cxMHNJR01nUFNCMExtTjFjblpsVTJWbmJXVnVkSE1nSVQwOUlIWnZhV1FnTUNBL0lIUXVZM1Z5ZG1WVFpXZHRaVzUwY3lBNklERXlMQ0JvSUQwZ2RDNXpkR1Z3Y3lBaFBUMGdkbTlwWkNBd0lEOGdkQzV6ZEdWd2N5QTZJREVzSUhVZ1BTQjBMbVJsY0hSb0lDRTlQU0IyYjJsa0lEQWdQeUIwTG1SbGNIUm9JRG9nTVN3Z1pDQTlJSFF1WW1WMlpXeEZibUZpYkdWa0lDRTlQU0IyYjJsa0lEQWdQeUIwTG1KbGRtVnNSVzVoWW14bFpDQTZJQ0V3TENCbUlEMGdkQzVpWlhabGJGUm9hV05yYm1WemN5QWhQVDBnZG05cFpDQXdJRDhnZEM1aVpYWmxiRlJvYVdOcmJtVnpjeUE2SUM0eUxDQnRJRDBnZEM1aVpYWmxiRk5wZW1VZ0lUMDlJSFp2YVdRZ01DQS9JSFF1WW1WMlpXeFRhWHBsSURvZ1ppQXRJQzR4TENCNElEMGdkQzVpWlhabGJFOW1abk5sZENBaFBUMGdkbTlwWkNBd0lEOGdkQzVpWlhabGJFOW1abk5sZENBNklEQXNJSFlnUFNCMExtSmxkbVZzVTJWbmJXVnVkSE1nSVQwOUlIWnZhV1FnTUNBL0lIUXVZbVYyWld4VFpXZHRaVzUwY3lBNklETXNJR2NnUFNCMExtVjRkSEoxWkdWUVlYUm9MQ0J3SUQwZ2RDNVZWa2RsYm1WeVlYUnZjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNVZWa2RsYm1WeVlYUnZjaUE2SUc1NU93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG1GdGIzVnVkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa1Y0ZEhKMVpHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1lXMXZkVzUwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1pHVndkR2d1SWlrc0lIVWdQU0IwTG1GdGIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmTENCNUlEMGdJVEVzSUdJc0lFRXNJRXdzSUVrN0NpQWdJQ0FnSUNBZ0lDQWdJR2NnSmlZZ0tGOGdQU0JuTG1kbGRGTndZV05sWkZCdmFXNTBjeWhvS1N3Z2VTQTlJQ0V3TENCa0lEMGdJVEVzSUdJZ1BTQm5MbU52YlhCMWRHVkdjbVZ1WlhSR2NtRnRaWE1vYUN3Z0lURXBMQ0JCSUQwZ2JtVjNJRTBzSUV3Z1BTQnVaWGNnVFN3Z1NTQTlJRzVsZHlCTktTd2daQ0I4ZkNBb2RpQTlJREFzSUdZZ1BTQXdMQ0J0SUQwZ01Dd2dlQ0E5SURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2F5QTlJR0V1WlhoMGNtRmpkRkJ2YVc1MGN5aGpLU3dnUWlBOUlHc3VjMmhoY0dVc0lGQWdQU0JyTG1odmJHVnpPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9JVXAwTG1selEyeHZZMnRYYVhObEtFSXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JDSUQwZ1FpNXlaWFpsY25ObEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFY2dQU0F3TENCcUlEMGdVQzVzWlc1bmRHZzdJRWNnUENCcU95QkhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JMSUQwZ1VGdEhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCS2RDNXBjME5zYjJOclYybHpaU2hMS1NBbUppQW9VRnRIWFNBOUlFc3VjbVYyWlhKelpTZ3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJRXAwTG5SeWFXRnVaM1ZzWVhSbFUyaGhjR1VvUWl3Z1VDa3NJRVFnUFNCQ093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWN4SUQwZ01Dd2dhakVnUFNCUUxteGxibWQwYURzZ1J6RWdQQ0JxTVRzZ1J6RXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1N6RWdQU0JRVzBjeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFSWdQU0JDTG1OdmJtTmhkQ2hMTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1ZTaEhMQ0JxTENCTEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FpQjhmQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1RmVIUnlkV1JsUjJWdmJXVjBjbms2SUhabFl5QmtiMlZ6SUc1dmRDQmxlR2x6ZENJcExDQnFMbU5zYjI1bEtDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1N5a3VZV1JrS0VjcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHSUQwZ1FpNXNaVzVuZEdnc0lFOGdQU0JGTG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JtVW9SeXdnYWl3Z1N5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhWbExDQnpaU3dnVTJVc0lGUmxJRDBnUnk1NElDMGdhaTU0TENCUVpTQTlJRWN1ZVNBdElHb3VlU3dnV1dVZ1BTQkxMbmdnTFNCSExuZ3NJRU1nUFNCTExua2dMU0JITG5rc0lGUWdQU0JVWlNBcUlGUmxJQ3NnVUdVZ0tpQlFaU3dnU2lBOUlGUmxJQ29nUXlBdElGQmxJQ29nV1dVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9UV0YwYUM1aFluTW9TaWtnUGlCT2RXMWlaWEl1UlZCVFNVeFBUaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0FrSUQwZ1RXRjBhQzV6Y1hKMEtGUXBMQ0J5WlNBOUlFMWhkR2d1YzNGeWRDaFpaU0FxSUZsbElDc2dReUFxSUVNcExDQmFJRDBnYWk1NElDMGdVR1VnTHlBa0xDQk5aU0E5SUdvdWVTQXJJRlJsSUM4Z0pDd2dkbVVnUFNCTExuZ2dMU0JESUM4Z2NtVXNJSFJsSUQwZ1N5NTVJQ3NnV1dVZ0x5QnlaU3dnVWlBOUlDZ29kbVVnTFNCYUtTQXFJRU1nTFNBb2RHVWdMU0JOWlNrZ0tpQlpaU2tnTHlBb1ZHVWdLaUJESUMwZ1VHVWdLaUJaWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkV1VnUFNCYUlDc2dWR1VnS2lCU0lDMGdSeTU0TENCelpTQTlJRTFsSUNzZ1VHVWdLaUJTSUMwZ1J5NTVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmxaU0E5SUhWbElDb2dkV1VnS3lCelpTQXFJSE5sT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsWlNBOFBTQXlLU0J5WlhSMWNtNGdibVYzSUZnb2RXVXNJSE5sS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlRaU0E5SUUxaGRHZ3VjM0Z5ZENobFpTQXZJRElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdKREVnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JVWlNBK0lFNTFiV0psY2k1RlVGTkpURTlPSUQ4Z1dXVWdQaUJPZFcxaVpYSXVSVkJUU1V4UFRpQW1KaUFvSkRFZ1BTQWhNQ2tnT2lCVVpTQThJQzFPZFcxaVpYSXVSVkJUU1V4UFRpQS9JRmxsSUR3Z0xVNTFiV0psY2k1RlVGTkpURTlPSUNZbUlDZ2tNU0E5SUNFd0tTQTZJRTFoZEdndWMybG5iaWhRWlNrZ1BUMDlJRTFoZEdndWMybG5iaWhES1NBbUppQW9KREVnUFNBaE1Da3NJQ1F4SUQ4Z0tIVmxJRDBnTFZCbExDQnpaU0E5SUZSbExDQlRaU0E5SUUxaGRHZ3VjM0Z5ZENoVUtTa2dPaUFvZFdVZ1BTQlVaU3dnYzJVZ1BTQlFaU3dnVTJVZ1BTQk5ZWFJvTG5OeGNuUW9WQ0F2SURJcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dXQ2gxWlNBdklGTmxMQ0J6WlNBdklGTmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1kyVWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkhNaUE5SURBc0lHb3lJRDBnUkM1c1pXNW5kR2dzSUVzeUlEMGdhaklnTFNBeExDQjFaU0E5SUVjeUlDc2dNVHNnUnpJZ1BDQnFNanNnUnpJckt5d2dTeklyS3l3Z2RXVXJLeWxMTWlBOVBUMGdhaklnSmlZZ0tFc3lJRDBnTUNrc0lIVmxJRDA5UFNCcU1pQW1KaUFvZFdVZ1BTQXdLU3dnWTJWYlJ6SmRJRDBnYm1Vb1JGdEhNbDBzSUVSYlN6SmRMQ0JFVzNWbFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQldJRDBnVzEwc0lGY3NJR2hsSUQwZ1kyVXVZMjl1WTJGMEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnpNZ1BTQXdMQ0JxTXlBOUlGQXViR1Z1WjNSb095QkhNeUE4SUdvek95QkhNeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkxNeUE5SUZCYlJ6TmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdWeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMVpURWdQU0F3TENCelpTQTlJRXN6TG14bGJtZDBhQ3dnVTJVZ1BTQnpaU0F0SURFc0lGUmxJRDBnZFdVeElDc2dNVHNnZFdVeElEd2djMlU3SUhWbE1Tc3JMQ0JUWlNzckxDQlVaU3NyS1ZObElEMDlQU0J6WlNBbUppQW9VMlVnUFNBd0tTd2dWR1VnUFQwOUlITmxJQ1ltSUNoVVpTQTlJREFwTENCWFczVmxNVjBnUFNCdVpTaExNMXQxWlRGZExDQkxNMXRUWlYwc0lFc3pXMVJsWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCV0xuQjFjMmdvVnlrc0lHaGxJRDBnYUdVdVkyOXVZMkYwS0ZjcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1J6UWdQU0F3T3lCSE5DQThJSFk3SUVjMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdvMElEMGdSelFnTHlCMkxDQkxOQ0E5SUdZZ0tpQk5ZWFJvTG1OdmN5aHFOQ0FxSUUxaGRHZ3VVRWtnTHlBeUtTd2dkV1V5SUQwZ2JTQXFJRTFoZEdndWMybHVLR28wSUNvZ1RXRjBhQzVRU1NBdklESXBJQ3NnZURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYzJVeElEMGdNQ3dnVTJVeElEMGdSQzVzWlc1bmRHZzdJSE5sTVNBOElGTmxNVHNnYzJVeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlVaVEVnUFNCVktFUmJjMlV4WFN3Z1kyVmJjMlV4WFN3Z2RXVXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRFpTaFVaVEV1ZUN3Z1ZHVXhMbmtzSUMxTE5DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElITmxNaUE5SURBc0lGTmxNaUE5SUZBdWJHVnVaM1JvT3lCelpUSWdQQ0JUWlRJN0lITmxNaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVkdVeUlEMGdVRnR6WlRKZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRmNnUFNCV1czTmxNbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCUVpTQTlJREFzSUZsbElEMGdWR1V5TG14bGJtZDBhRHNnVUdVZ1BDQlpaVHNnVUdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JESUQwZ1ZTaFVaVEpiVUdWZExDQlhXMUJsWFN3Z2RXVXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRMlVvUXk1NExDQkRMbmtzSUMxTE5DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUcwZ0t5QjRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjMUlEMGdNRHNnUnpVZ1BDQkdPeUJITlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JxTlNBOUlHUWdQeUJWS0VKYlJ6VmRMQ0JvWlZ0SE5WMHNJR3hsS1NBNklFSmJSelZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVNBL0lDaE1MbU52Y0hrb1lpNXViM0p0WVd4eld6QmRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHFOUzU0S1N3Z1FTNWpiM0I1S0dJdVltbHViM0p0WVd4eld6QmRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHFOUzU1S1N3Z1NTNWpiM0I1S0Y5Yk1GMHBMbUZrWkNoTUtTNWhaR1FvUVNrc0lFTmxLRWt1ZUN3Z1NTNTVMQ0JKTG5vcEtTQTZJRU5sS0dvMUxuZ3NJR28xTG5rc0lEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSellnUFNBeE95QkhOaUE4UFNCb095QkhOaXNyS1dadmNpaHNaWFFnYWpZZ1BTQXdPeUJxTmlBOElFWTdJR28yS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRXMxSUQwZ1pDQS9JRlVvUWx0cU5sMHNJR2hsVzJvMlhTd2diR1VwSURvZ1FsdHFObDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1SUQ4Z0tFd3VZMjl3ZVNoaUxtNXZjbTFoYkhOYlJ6WmRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaExOUzU0S1N3Z1FTNWpiM0I1S0dJdVltbHViM0p0WVd4elcwYzJYU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9TelV1ZVNrc0lFa3VZMjl3ZVNoZlcwYzJYU2t1WVdSa0tFd3BMbUZrWkNoQktTd2dRMlVvU1M1NExDQkpMbmtzSUVrdWVpa3BJRG9nUTJVb1N6VXVlQ3dnU3pVdWVTd2dkU0F2SUdnZ0tpQkhOaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JITnlBOUlIWWdMU0F4T3lCSE55QStQU0F3T3lCSE55MHRLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcU55QTlJRWMzSUM4Z2Rpd2dTellnUFNCbUlDb2dUV0YwYUM1amIzTW9hamNnS2lCTllYUm9MbEJKSUM4Z01pa3NJSFZsTXlBOUlHMGdLaUJOWVhSb0xuTnBiaWhxTnlBcUlFMWhkR2d1VUVrZ0x5QXlLU0FySUhnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhObE15QTlJREFzSUZObE15QTlJRVF1YkdWdVozUm9PeUJ6WlRNZ1BDQlRaVE03SUhObE15c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWR1V6SUQwZ1ZTaEVXM05sTTEwc0lHTmxXM05sTTEwc0lIVmxNeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1EyVW9WR1V6TG5nc0lGUmxNeTU1TENCMUlDc2dTellwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J6WlRRZ1BTQXdMQ0JUWlRRZ1BTQlFMbXhsYm1kMGFEc2djMlUwSUR3Z1UyVTBPeUJ6WlRRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGUmxOQ0E5SUZCYmMyVTBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWElEMGdWbHR6WlRSZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdVR1V4SUQwZ01Dd2dXV1V4SUQwZ1ZHVTBMbXhsYm1kMGFEc2dVR1V4SUR3Z1dXVXhPeUJRWlRFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JETVNBOUlGVW9WR1UwVzFCbE1WMHNJRmRiVUdVeFhTd2dkV1V6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVNBL0lFTmxLRU14TG5nc0lFTXhMbmtnS3lCZlcyZ2dMU0F4WFM1NUxDQmZXMmdnTFNBeFhTNTRJQ3NnU3pZcElEb2dRMlVvUXpFdWVDd2dRekV1ZVN3Z2RTQXJJRXMyS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabVVvS1N3Z1FtVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1ptVW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1J5QTlJR2t1YkdWdVozUm9JQzhnTXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR29nUFNBd0xDQkxJRDBnUmlBcUlHbzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxWlNBOUlEQTdJSFZsSUR3Z1R6c2dkV1VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnpaU0E5SUVWYmRXVmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVaU2h6WlZzeVhTQXJJRXNzSUhObFd6RmRJQ3NnU3l3Z2MyVmJNRjBnS3lCTEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FpQTlJR2dnS3lCMklDb2dNaXdnU3lBOUlFWWdLaUJxT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RXVXhJRDBnTURzZ2RXVXhJRHdnVHpzZ2RXVXhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2MyVXhJRDBnUlZ0MVpURmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVaU2h6WlRGYk1GMGdLeUJMTENCelpURmJNVjBnS3lCTExDQnpaVEZiTWwwZ0t5QkxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FqRWdQU0F3T3lCcU1TQThJRTg3SUdveEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3pFZ1BTQkZXMm94WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVdVb1N6RmJNbDBzSUVzeFd6RmRMQ0JMTVZzd1hTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FqSWdQU0F3T3lCcU1pQThJRTg3SUdveUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3pJZ1BTQkZXMm95WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVdVb1N6SmJNRjBnS3lCR0lDb2dhQ3dnU3pKYk1WMGdLeUJHSUNvZ2FDd2dTekpiTWwwZ0t5QkdJQ29nYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiaTVoWkdSSGNtOTFjQ2hITENCcExteGxibWQwYUNBdklETWdMU0JITENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQkNaU2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkhJRDBnYVM1c1pXNW5kR2dnTHlBekxDQnFJRDBnTURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZrb1JDd2dhaWtzSUdvZ0t6MGdSQzVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFc2dQU0F3TENCMVpTQTlJRkF1YkdWdVozUm9PeUJMSUR3Z2RXVTdJRXNyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhObElEMGdVRnRMWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlpLSE5sTENCcUtTd2dhaUFyUFNCelpTNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUxtRmtaRWR5YjNWd0tFY3NJR2t1YkdWdVozUm9JQzhnTXlBdElFY3NJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUZrb1J5d2dhaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFc2dQU0JITG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lnN0lDMHRTeUErUFNBd095bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVmxJRDBnU3l3Z2MyVWdQU0JMSUMwZ01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6WlNBOElEQWdKaVlnS0hObElEMGdSeTVzWlc1bmRHZ2dMU0F4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGTmxJRDBnTUN3Z1ZHVWdQU0JvSUNzZ2RpQXFJREk3SUZObElEd2dWR1U3SUZObEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUdVZ1BTQkdJQ29nVTJVc0lGbGxJRDBnUmlBcUlDaFRaU0FySURFcExDQkRJRDBnYWlBcklIVmxJQ3NnVUdVc0lGUWdQU0JxSUNzZ2MyVWdLeUJRWlN3Z1NpQTlJR29nS3lCelpTQXJJRmxsTENBa0lEMGdhaUFySUhWbElDc2dXV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsS0VNc0lGUXNJRW9zSUNRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJEWlNoSExDQnFMQ0JMS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0xuQjFjMmdvUnlrc0lHd3VjSFZ6YUNocUtTd2diQzV3ZFhOb0tFc3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSGxsS0Vjc0lHb3NJRXNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhobEtFY3BMQ0I0WlNocUtTd2dlR1VvU3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkV1VnUFNCcExteGxibWQwYUNBdklETXNJSE5sSUQwZ2NDNW5aVzVsY21GMFpWUnZjRlZXS0c0c0lHa3NJSFZsSUMwZ015d2dkV1VnTFNBeUxDQjFaU0F0SURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1QyVW9jMlZiTUYwcExDQlBaU2h6WlZzeFhTa3NJRTlsS0hObFd6SmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJuWlNoSExDQnFMQ0JMTENCMVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlR1VvUnlrc0lIaGxLR29wTENCNFpTaDFaU2tzSUhobEtHb3BMQ0I0WlNoTEtTd2dlR1VvZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSE5sSUQwZ2FTNXNaVzVuZEdnZ0x5QXpMQ0JUWlNBOUlIQXVaMlZ1WlhKaGRHVlRhV1JsVjJGc2JGVldLRzRzSUdrc0lITmxJQzBnTml3Z2MyVWdMU0F6TENCelpTQXRJRElzSUhObElDMGdNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JQWlNoVFpWc3dYU2tzSUU5bEtGTmxXekZkS1N3Z1QyVW9VMlZiTTEwcExDQlBaU2hUWlZzeFhTa3NJRTlsS0ZObFd6SmRLU3dnVDJVb1UyVmJNMTBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhobEtFY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Y0hWemFDaHNXMGNnS2lBeklDc2dNRjBwTENCcExuQjFjMmdvYkZ0SElDb2dNeUFySURGZEtTd2dhUzV3ZFhOb0tHeGJSeUFxSURNZ0t5QXlYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnVDJVb1J5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaTV3ZFhOb0tFY3VlQ2tzSUhJdWNIVnphQ2hITG5rcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2tzSUhRZ1BTQjBhR2x6TG5CaGNtRnRaWFJsY25NdWMyaGhjR1Z6TENCdUlEMGdkR2hwY3k1d1lYSmhiV1YwWlhKekxtOXdkR2x2Ym5NN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsNUtIUXNJRzRzSUdVcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQmxMbk5vWVhCbGN5NXNaVzVuZEdnN0lISWdQQ0J2T3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSYlpTNXphR0Z3WlhOYmNsMWRPd29nSUNBZ0lDQWdJQ0FnSUNCdUxuQjFjMmdvWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXZjSFJwYjI1ekxtVjRkSEoxWkdWUVlYUm9Pd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHVXViM0IwYVc5dWN5NWxlSFJ5ZFdSbFVHRjBhQ0E5SUc1bGR5QlVZVnRwTG5SNWNHVmRLQ2t1Wm5KdmJVcFRUMDRvYVNrcExDQnVaWGNnYkc0b2Jpd2daUzV2Y0hScGIyNXpLVHNLSUNBZ0lIMEtmU3dnYm5rZ1BTQjdDaUFnSUNCblpXNWxjbUYwWlZSdmNGVldPaUJtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQmxXM1FnS2lBelhTd2dieUE5SUdWYmRDQXFJRE1nS3lBeFhTd2dZU0E5SUdWYmJpQXFJRE5kTENCc0lEMGdaVnR1SUNvZ015QXJJREZkTENCaklEMGdaVnRwSUNvZ00xMHNJR2dnUFNCbFcya2dLaUF6SUNzZ01WMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGZ29jaXdnYnlrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCWUtHRXNJR3dwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0NoakxDQm9LUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlMQW9nSUNBZ1oyVnVaWEpoZEdWVGFXUmxWMkZzYkZWV09pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxXM1FnS2lBelhTd2dZU0E5SUdWYmRDQXFJRE1nS3lBeFhTd2diQ0E5SUdWYmRDQXFJRE1nS3lBeVhTd2dZeUE5SUdWYmJpQXFJRE5kTENCb0lEMGdaVnR1SUNvZ015QXJJREZkTENCMUlEMGdaVnR1SUNvZ015QXJJREpkTENCa0lEMGdaVnRwSUNvZ00xMHNJR1lnUFNCbFcya2dLaUF6SUNzZ01WMHNJRzBnUFNCbFcya2dLaUF6SUNzZ01sMHNJSGdnUFNCbFczSWdLaUF6WFN3Z2RpQTlJR1ZiY2lBcUlETWdLeUF4WFN3Z1p5QTlJR1ZiY2lBcUlETWdLeUF5WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vWVNBdElHZ3BJRHdnVFdGMGFDNWhZbk1vYnlBdElHTXBJRDhnV3dvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0NodkxDQXhJQzBnYkNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCWUtHTXNJREVnTFNCMUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGZ29aQ3dnTVNBdElHMHBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXQ2g0TENBeElDMGdaeWtLSUNBZ0lDQWdJQ0JkSURvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaGhMQ0F4SUMwZ2JDa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLR2dzSURFZ0xTQjFLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRmdvWml3Z01TQXRJRzBwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0NoMkxDQXhJQzBnWnlrS0lDQWdJQ0FnSUNCZE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQnBlU2h6TENCbExDQjBLU0I3Q2lBZ0lDQnBaaUFvZEM1emFHRndaWE1nUFNCYlhTd2dRWEp5WVhrdWFYTkJjbkpoZVNoektTa2dabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSE11YkdWdVozUm9PeUJ1SUR3Z2FUc2diaXNyS1hzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhOYmJsMDdDaUFnSUNBZ0lDQWdkQzV6YUdGd1pYTXVjSFZ6YUNoeUxuVjFhV1FwT3dvZ0lDQWdmUW9nSUNBZ1pXeHpaU0IwTG5Ob1lYQmxjeTV3ZFhOb0tITXVkWFZwWkNrN0NpQWdJQ0J5WlhSMWNtNGdaUzVsZUhSeWRXUmxVR0YwYUNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwTG05d2RHbHZibk11WlhoMGNuVmtaVkJoZEdnZ1BTQmxMbVY0ZEhKMVpHVlFZWFJvTG5SdlNsTlBUaWdwS1N3Z2REc0tmUXAyWVhJZ1gzSWdQU0JqYkdGemN5QmxlSFJsYm1SeklHRnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNBb01TQXJJRTFoZEdndWMzRnlkQ2cxS1NrZ0x5QXlMQ0JwSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFc0c0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0J1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYU3dnY2lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TUN3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURFeExBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UQXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJREV3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBNExBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTVMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBNExBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQTVMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTml3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UQXNDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJSE4xY0dWeUtHa3NJSElzSUdVc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKSlkyOXpZV2hsWkhKdmJrZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBkWE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsZEdGcGJEb2dkQW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dYM0lvWlM1eVlXUnBkWE1zSUdVdVpHVjBZV2xzS1RzS0lDQWdJSDBLZlN3Z1RYSWdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYkNpQWdJQ0FnSUNBZ2JtVjNJRmdvTUN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDNDFMQ0F3S1N3S0lDQWdJQ0FnSUNCdVpYY2dXQ2d3TENBdExqVXBDaUFnSUNCZExDQjBJRDBnTVRJc0lHNGdQU0F3TENCcElEMGdUV0YwYUM1UVNTQXFJRElwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lreGhkR2hsUjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1MGN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhCb2FWTjBZWEowT2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0J3YUdsTVpXNW5kR2c2SUdrS0lDQWdJQ0FnSUNCOUxDQjBJRDBnVFdGMGFDNW1iRzl2Y2loMEtTd2dhU0E5SUcxMEtHa3NJREFzSUUxaGRHZ3VVRWtnS2lBeUtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlGdGRMQ0J2SUQwZ1cxMHNJR0VnUFNCYlhTd2diQ0E5SUZ0ZExDQmpJRDBnVzEwc0lHZ2dQU0F4SUM4Z2RDd2dkU0E5SUc1bGR5Qk5MQ0JrSUQwZ2JtVjNJRmdzSUdZZ1BTQnVaWGNnVFN3Z2JTQTlJRzVsZHlCTkxDQjRJRDBnYm1WM0lFMHNJSFlnUFNBd0xDQm5JRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUR3OUlHVXViR1Z1WjNSb0lDMGdNVHNnY0NzcktYTjNhWFJqYUNod0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXdPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkaUE5SUdWYmNDQXJJREZkTG5nZ0xTQmxXM0JkTG5nc0lHY2dQU0JsVzNBZ0t5QXhYUzU1SUMwZ1pWdHdYUzU1TENCbUxuZ2dQU0JuSUNvZ01Td2daaTU1SUQwZ0xYWXNJR1l1ZWlBOUlHY2dLaUF3TENCNExtTnZjSGtvWmlrc0lHWXVibTl5YldGc2FYcGxLQ2tzSUd3dWNIVnphQ2htTG5nc0lHWXVlU3dnWmk1NktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUdVdWJHVnVaM1JvSUMwZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHd3VjSFZ6YUNoNExuZ3NJSGd1ZVN3Z2VDNTZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkaUE5SUdWYmNDQXJJREZkTG5nZ0xTQmxXM0JkTG5nc0lHY2dQU0JsVzNBZ0t5QXhYUzU1SUMwZ1pWdHdYUzU1TENCbUxuZ2dQU0JuSUNvZ01Td2daaTU1SUQwZ0xYWXNJR1l1ZWlBOUlHY2dLaUF3TENCdExtTnZjSGtvWmlrc0lHWXVlQ0FyUFNCNExuZ3NJR1l1ZVNBclBTQjRMbmtzSUdZdWVpQXJQU0I0TG5vc0lHWXVibTl5YldGc2FYcGxLQ2tzSUd3dWNIVnphQ2htTG5nc0lHWXVlU3dnWmk1NktTd2dlQzVqYjNCNUtHMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSEF4SUQwZ01Ec2djREVnUEQwZ2REc2djREVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdiaUFySUhBeElDb2dhQ0FxSUdrc0lIa2dQU0JOWVhSb0xuTnBiaWhmS1N3Z1lpQTlJRTFoZEdndVkyOXpLRjhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFRWdQU0F3T3lCQklEdzlJR1V1YkdWdVozUm9JQzBnTVRzZ1FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1ZUNBOUlHVmJRVjB1ZUNBcUlIa3NJSFV1ZVNBOUlHVmJRVjB1ZVN3Z2RTNTZJRDBnWlZ0QlhTNTRJQ29nWWl3Z2J5NXdkWE5vS0hVdWVDd2dkUzU1TENCMUxub3BMQ0JrTG5nZ1BTQndNU0F2SUhRc0lHUXVlU0E5SUVFZ0x5QW9aUzVzWlc1bmRHZ2dMU0F4S1N3Z1lTNXdkWE5vS0dRdWVDd2daQzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnYkZzeklDb2dRU0FySURCZElDb2dlU3dnU1NBOUlHeGJNeUFxSUVFZ0t5QXhYU3dnYXlBOUlHeGJNeUFxSUVFZ0t5QXdYU0FxSUdJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCakxuQjFjMmdvVEN3Z1NTd2dheWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQndNaUE5SURBN0lIQXlJRHdnZERzZ2NESXJLeWxtYjNJb2JHVjBJRjh4SUQwZ01Ec2dYekVnUENCbExteGxibWQwYUNBdElERTdJRjh4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VURWdQU0JmTVNBcklIQXlJQ29nWlM1c1pXNW5kR2dzSUdJeElEMGdlVEVzSUVFeElEMGdlVEVnS3lCbExteGxibWQwYUN3Z1RERWdQU0I1TVNBcklHVXViR1Z1WjNSb0lDc2dNU3dnU1RFZ1BTQjVNU0FySURFN0NpQWdJQ0FnSUNBZ0lDQWdJSEl1Y0hWemFDaGlNU3dnUVRFc0lFa3hLU3dnY2k1d2RYTm9LRUV4TENCTU1Td2dTVEVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLSElwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2J5d2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9ZU3dnTWlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtHTXNJRE1wS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJOY2lobExuQnZhVzUwY3l3Z1pTNXpaV2R0Wlc1MGN5d2daUzV3YUdsVGRHRnlkQ3dnWlM1d2FHbE1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQkphU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZVzRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBd0tYc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNUW9nSUNBZ0lDQWdJRjBzSUdrZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lESUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJSE4xY0dWeUtHNHNJR2tzSUdVc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKUFkzUmhhR1ZrY205dVIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQjBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkphU2hsTG5KaFpHbDFjeXdnWlM1a1pYUmhhV3dwT3dvZ0lDQWdmUXA5TENCaWNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUM0MUxDQjBJRDBnTVN3Z2JpQTlJRGdzSUdrZ1BTQXhMQ0J5SUQwZ01Dd2dieUE5SUUxaGRHZ3VVRWtnS2lBeUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pTYVc1blIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsdWJtVnlVbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCdmRYUmxjbEpoWkdsMWN6b2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHaGxkR0ZUWldkdFpXNTBjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdjR2hwVTJWbmJXVnVkSE02SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFUzUmhjblE2SUhJc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvWlhSaFRHVnVaM1JvT2lCdkNpQWdJQ0FnSUNBZ2ZTd2diaUE5SUUxaGRHZ3ViV0Y0S0RNc0lHNHBMQ0JwSUQwZ1RXRjBhQzV0WVhnb01Td2dhU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0JiWFN3Z2JDQTlJRnRkTENCaklEMGdXMTBzSUdnZ1BTQmJYU3dnZFNBOUlHVXNJR1FnUFNBb2RDQXRJR1VwSUM4Z2FTd2daaUE5SUc1bGR5Qk5MQ0J0SUQwZ2JtVjNJRmc3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I0SUQwZ01Ec2dlQ0E4UFNCcE95QjRLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIWWdQU0F3T3lCMklEdzlJRzQ3SUhZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlISWdLeUIySUM4Z2JpQXFJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtTG5nZ1BTQjFJQ29nVFdGMGFDNWpiM01vWnlrc0lHWXVlU0E5SUhVZ0tpQk5ZWFJvTG5OcGJpaG5LU3dnYkM1d2RYTm9LR1l1ZUN3Z1ppNTVMQ0JtTG5vcExDQmpMbkIxYzJnb01Dd2dNQ3dnTVNrc0lHMHVlQ0E5SUNobUxuZ2dMeUIwSUNzZ01Ta2dMeUF5TENCdExua2dQU0FvWmk1NUlDOGdkQ0FySURFcElDOGdNaXdnYUM1d2RYTm9LRzB1ZUN3Z2JTNTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IxSUNzOUlHUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdlREVnUFNBd095QjRNU0E4SUdrN0lIZ3hLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGpFZ1BTQjRNU0FxSUNodUlDc2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p6RWdQU0F3T3lCbk1TQThJRzQ3SUdjeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm5NU0FySUhZeExDQmZJRDBnY0N3Z2VTQTlJSEFnS3lCdUlDc2dNU3dnWWlBOUlIQWdLeUJ1SUNzZ01pd2dRU0E5SUhBZ0t5QXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZUzV3ZFhOb0tGOHNJSGtzSUVFcExDQmhMbkIxYzJnb2VTd2dZaXdnUVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJKYm1SbGVDaGhLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0d3c0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hqTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNob0xDQXlLU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dZbklvWlM1cGJtNWxjbEpoWkdsMWN5d2daUzV2ZFhSbGNsSmhaR2wxY3l3Z1pTNTBhR1YwWVZObFoyMWxiblJ6TENCbExuQm9hVk5sWjIxbGJuUnpMQ0JsTG5Sb1pYUmhVM1JoY25Rc0lHVXVkR2hsZEdGTVpXNW5kR2dwT3dvZ0lDQWdmUXA5TENCRWFTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QllkQ2hiQ2lBZ0lDQWdJQ0FnYm1WM0lGZ29NQ3dnTGpVcExBb2dJQ0FnSUNBZ0lHNWxkeUJZS0MwdU5Td2dMUzQxS1N3S0lDQWdJQ0FnSUNCdVpYY2dXQ2d1TlN3Z0xTNDFLUW9nSUNBZ1hTa3NJSFFnUFNBeE1pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTJoaGNHVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1Z6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JqZFhKMlpWTmxaMjFsYm5Sek9pQjBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRnRkTENCcElEMGdXMTBzSUhJZ1BTQmJYU3dnYnlBOUlGdGRMQ0JoSUQwZ01Dd2diQ0E5SURBN0NpQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1pTa2dQVDA5SUNFeEtTQmpLR1VwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdabTl5S0d4bGRDQm9JRDBnTURzZ2FDQThJR1V1YkdWdVozUm9PeUJvS3lzcFl5aGxXMmhkS1N3Z2RHaHBjeTVoWkdSSGNtOTFjQ2hoTENCc0xDQm9LU3dnWVNBclBTQnNMQ0JzSUQwZ01Ec0tJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFbHVaR1Y0S0c0cExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9hU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtISXNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLRzhzSURJcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmpLR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQnBMbXhsYm1kMGFDQXZJRE1zSUdRZ1BTQm9MbVY0ZEhKaFkzUlFiMmx1ZEhNb2RDa3NJR1lnUFNCa0xuTm9ZWEJsTENCdElEMGdaQzVvYjJ4bGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnU25RdWFYTkRiRzlqYTFkcGMyVW9aaWtnUFQwOUlDRXhJQ1ltSUNobUlEMGdaaTV5WlhabGNuTmxLQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIWWdQU0F3TENCbklEMGdiUzVzWlc1bmRHZzdJSFlnUENCbk95QjJLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0J0VzNaZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1NuUXVhWE5EYkc5amExZHBjMlVvY0NrZ1BUMDlJQ0V3SUNZbUlDaHRXM1pkSUQwZ2NDNXlaWFpsY25ObEtDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdTblF1ZEhKcFlXNW5kV3hoZEdWVGFHRndaU2htTENCdEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IyTVNBOUlEQXNJR2N4SUQwZ2JTNXNaVzVuZEdnN0lIWXhJRHdnWnpFN0lIWXhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQXhJRDBnYlZ0Mk1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1JRDBnWmk1amIyNWpZWFFvY0RFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RqSWdQU0F3TENCbk1pQTlJR1l1YkdWdVozUm9PeUIyTWlBOElHY3lPeUIyTWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3TWlBOUlHWmJkakpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1d2RYTm9LSEF5TG5nc0lIQXlMbmtzSURBcExDQnlMbkIxYzJnb01Dd2dNQ3dnTVNrc0lHOHVjSFZ6YUNod01pNTRMQ0J3TWk1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIWXpJRDBnTUN3Z1p6TWdQU0I0TG14bGJtZDBhRHNnZGpNZ1BDQm5NenNnZGpNckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0RNZ1BTQjRXM1l6WFN3Z1h5QTlJSEF6V3pCZElDc2dkU3dnZVNBOUlIQXpXekZkSUNzZ2RTd2dZaUE5SUhBeld6SmRJQ3NnZFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0dWNIVnphQ2hmTENCNUxDQmlLU3dnYkNBclBTQXpPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0Nrc0lIUWdQU0IwYUdsekxuQmhjbUZ0WlhSbGNuTXVjMmhoY0dWek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeWVTaDBMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ1pTNXphR0Z3WlhNdWJHVnVaM1JvT3lCcElEd2djanNnYVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwVzJVdWMyaGhjR1Z6VzJsZFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYmk1d2RYTm9LRzhwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFUnBLRzRzSUdVdVkzVnlkbVZUWldkdFpXNTBjeWs3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUhKNUtITXNJR1VwSUhzS0lDQWdJR2xtSUNobExuTm9ZWEJsY3lBOUlGdGRMQ0JCY25KaGVTNXBjMEZ5Y21GNUtITXBLU0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2MxdDBYVHNLSUNBZ0lDQWdJQ0JsTG5Ob1lYQmxjeTV3ZFhOb0tHa3VkWFZwWkNrN0NpQWdJQ0I5Q2lBZ0lDQmxiSE5sSUdVdWMyaGhjR1Z6TG5CMWMyZ29jeTUxZFdsa0tUc0tJQ0FnSUhKbGRIVnliaUJsT3dwOUNuWmhjaUJHYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXpNaXdnYmlBOUlERTJMQ0JwSUQwZ01Dd2djaUE5SUUxaGRHZ3VVRWtnS2lBeUxDQnZJRDBnTUN3Z1lTQTlJRTFoZEdndVVFa3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxOd2FHVnlaVWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9VMlZuYldWdWRITTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZEZObFoyMWxiblJ6T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0J3YUdsVGRHRnlkRG9nYVN3S0lDQWdJQ0FnSUNBZ0lDQWdjR2hwVEdWdVozUm9PaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR1YwWVZOMFlYSjBPaUJ2TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR1YwWVV4bGJtZDBhRG9nWVFvZ0lDQWdJQ0FnSUgwc0lIUWdQU0JOWVhSb0xtMWhlQ2d6TENCTllYUm9MbVpzYjI5eUtIUXBLU3dnYmlBOUlFMWhkR2d1YldGNEtESXNJRTFoZEdndVpteHZiM0lvYmlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1RXRjBhQzV0YVc0b2J5QXJJR0VzSUUxaGRHZ3VVRWtwTENCaklEMGdNQ3dnYUNBOUlGdGRMQ0IxSUQwZ2JtVjNJRTBzSUdRZ1BTQnVaWGNnVFN3Z1ppQTlJRnRkTENCdElEMGdXMTBzSUhnZ1BTQmJYU3dnZGlBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaeUE5SURBN0lHY2dQRDBnYmpzZ1p5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCYlhTd2dYeUE5SUdjZ0x5QnVMQ0I1SUQwZ01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnWnlBOVBTQXdJQ1ltSUc4Z1BUMGdNQ0EvSUhrZ1BTQXVOU0F2SUhRZ09pQm5JRDA5SUc0Z0ppWWdiQ0E5UFNCTllYUm9MbEJKSUNZbUlDaDVJRDBnTFM0MUlDOGdkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lpQTlJREE3SUdJZ1BEMGdkRHNnWWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCSUQwZ1lpQXZJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTG5nZ1BTQXRaU0FxSUUxaGRHZ3VZMjl6S0drZ0t5QkJJQ29nY2lrZ0tpQk5ZWFJvTG5OcGJpaHZJQ3NnWHlBcUlHRXBMQ0IxTG5rZ1BTQmxJQ29nVFdGMGFDNWpiM01vYnlBcklGOGdLaUJoS1N3Z2RTNTZJRDBnWlNBcUlFMWhkR2d1YzJsdUtHa2dLeUJCSUNvZ2Npa2dLaUJOWVhSb0xuTnBiaWh2SUNzZ1h5QXFJR0VwTENCdExuQjFjMmdvZFM1NExDQjFMbmtzSUhVdWVpa3NJR1F1WTI5d2VTaDFLUzV1YjNKdFlXeHBlbVVvS1N3Z2VDNXdkWE5vS0dRdWVDd2daQzU1TENCa0xub3BMQ0IyTG5CMWMyZ29RU0FySUhrc0lERWdMU0JmS1N3Z2NDNXdkWE5vS0dNckt5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdhQzV3ZFhOb0tIQXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2N4SUQwZ01Ec2daekVnUENCdU95Qm5NU3NyS1dadmNpaHNaWFFnY0RFZ1BTQXdPeUJ3TVNBOElIUTdJSEF4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h6RWdQU0JvVzJjeFhWdHdNU0FySURGZExDQjVNU0E5SUdoYlp6RmRXM0F4WFN3Z1lqRWdQU0JvVzJjeElDc2dNVjFiY0RGZExDQkJNU0E5SUdoYlp6RWdLeUF4WFZ0d01TQXJJREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQW9aekVnSVQwOUlEQWdmSHdnYnlBK0lEQXBJQ1ltSUdZdWNIVnphQ2hmTVN3Z2VURXNJRUV4S1N3Z0tHY3hJQ0U5UFNCdUlDMGdNU0I4ZkNCc0lEd2dUV0YwYUM1UVNTa2dKaVlnWmk1d2RYTm9LSGt4TENCaU1Td2dRVEVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLR1lwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2JTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0hnc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtIWXNJRElwS1RzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJHYVNobExuSmhaR2wxY3l3Z1pTNTNhV1IwYUZObFoyMWxiblJ6TENCbExtaGxhV2RvZEZObFoyMWxiblJ6TENCbExuQm9hVk4wWVhKMExDQmxMbkJvYVV4bGJtZDBhQ3dnWlM1MGFHVjBZVk4wWVhKMExDQmxMblJvWlhSaFRHVnVaM1JvS1RzS0lDQWdJSDBLZlN3Z2QzSWdQU0JqYkdGemN5QmxlSFJsYm1SeklHRnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVLSUNBZ0lDQWdJQ0JkTENCcElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVMQ0JwTENCbExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVZHVjBjbUZvWldSeWIyNUhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhSaGFXdzZJSFFLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSGR5S0dVdWNtRmthWFZ6TENCbExtUmxkR0ZwYkNrN0NpQWdJQ0I5Q24wc0lGTnlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Td2dkQ0E5SUM0MExDQnVJRDBnT0N3Z2FTQTlJRFlzSUhJZ1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVZHOXlkWE5IWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMGRXSmxPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwWVd4VFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhWaWRXeGhjbE5sWjIxbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmhjbU02SUhJS0lDQWdJQ0FnSUNCOUxDQnVJRDBnVFdGMGFDNW1iRzl2Y2lodUtTd2dhU0E5SUUxaGRHZ3VabXh2YjNJb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmJYU3dnWVNBOUlGdGRMQ0JzSUQwZ1cxMHNJR01nUFNCYlhTd2dhQ0E5SUc1bGR5Qk5MQ0IxSUQwZ2JtVjNJRTBzSUdRZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdPeUJtSUR3OUlHNDdJR1lyS3lsbWIzSW9iR1YwSUcwZ1BTQXdPeUJ0SUR3OUlHazdJRzByS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdiU0F2SUdrZ0tpQnlMQ0IySUQwZ1ppQXZJRzRnS2lCTllYUm9MbEJKSUNvZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnZFM1NElEMGdLR1VnS3lCMElDb2dUV0YwYUM1amIzTW9kaWtwSUNvZ1RXRjBhQzVqYjNNb2VDa3NJSFV1ZVNBOUlDaGxJQ3NnZENBcUlFMWhkR2d1WTI5ektIWXBLU0FxSUUxaGRHZ3VjMmx1S0hncExDQjFMbm9nUFNCMElDb2dUV0YwYUM1emFXNG9kaWtzSUdFdWNIVnphQ2gxTG5nc0lIVXVlU3dnZFM1NktTd2dhQzU0SUQwZ1pTQXFJRTFoZEdndVkyOXpLSGdwTENCb0xua2dQU0JsSUNvZ1RXRjBhQzV6YVc0b2VDa3NJR1F1YzNWaVZtVmpkRzl5Y3loMUxDQm9LUzV1YjNKdFlXeHBlbVVvS1N3Z2JDNXdkWE5vS0dRdWVDd2daQzU1TENCa0xub3BMQ0JqTG5CMWMyZ29iU0F2SUdrcExDQmpMbkIxYzJnb1ppQXZJRzRwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZeElEMGdNVHNnWmpFZ1BEMGdianNnWmpFckt5bG1iM0lvYkdWMElHMHhJRDBnTVRzZ2JURWdQRDBnYVRzZ2JURXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0TVNBOUlDaHBJQ3NnTVNrZ0tpQm1NU0FySUcweElDMGdNU3dnZGpFZ1BTQW9hU0FySURFcElDb2dLR1l4SUMwZ01Ta2dLeUJ0TVNBdElERXNJR2NnUFNBb2FTQXJJREVwSUNvZ0tHWXhJQzBnTVNrZ0t5QnRNU3dnY0NBOUlDaHBJQ3NnTVNrZ0tpQm1NU0FySUcweE93b2dJQ0FnSUNBZ0lDQWdJQ0J2TG5CMWMyZ29lREVzSUhZeExDQndLU3dnYnk1d2RYTm9LSFl4TENCbkxDQndLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJKYm1SbGVDaHZLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0dFc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hzTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNoakxDQXlLU2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVM0lvWlM1eVlXUnBkWE1zSUdVdWRIVmlaU3dnWlM1eVlXUnBZV3hUWldkdFpXNTBjeXdnWlM1MGRXSjFiR0Z5VTJWbmJXVnVkSE1zSUdVdVlYSmpLVHNLSUNBZ0lIMEtmU3dnVkhJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdMalFzSUc0Z1BTQTJOQ3dnYVNBOUlEZ3NJSElnUFNBeUxDQnZJRDBnTXlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlWRzl5ZFhOTGJtOTBSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhWaVpUb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RIVmlkV3hoY2xObFoyMWxiblJ6T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScFlXeFRaV2R0Wlc1MGN6b2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NEb2djaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NUb2did29nSUNBZ0lDQWdJSDBzSUc0Z1BTQk5ZWFJvTG1ac2IyOXlLRzRwTENCcElEMGdUV0YwYUM1bWJHOXZjaWhwS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUZ0ZExDQnNJRDBnVzEwc0lHTWdQU0JiWFN3Z2FDQTlJRnRkTENCMUlEMGdibVYzSUUwc0lHUWdQU0J1WlhjZ1RTd2daaUE5SUc1bGR5Qk5MQ0J0SUQwZ2JtVjNJRTBzSUhnZ1BTQnVaWGNnVFN3Z2RpQTlJRzVsZHlCTkxDQm5JRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmZJRDBnTURzZ1h5QThQU0J1T3lBcksxOHBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUY4Z0x5QnVJQ29nY2lBcUlFMWhkR2d1VUVrZ0tpQXlPd29nSUNBZ0lDQWdJQ0FnSUNCd0tIa3NJSElzSUc4c0lHVXNJR1lwTENCd0tIa2dLeUF1TURFc0lISXNJRzhzSUdVc0lHMHBMQ0IyTG5OMVlsWmxZM1J2Y25Nb2JTd2daaWtzSUdjdVlXUmtWbVZqZEc5eWN5aHRMQ0JtS1N3Z2VDNWpjbTl6YzFabFkzUnZjbk1vZGl3Z1p5a3NJR2N1WTNKdmMzTldaV04wYjNKektIZ3NJSFlwTENCNExtNXZjbTFoYkdsNlpTZ3BMQ0JuTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0lnUFNBd095QmlJRHc5SUdrN0lDc3JZaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FTQTlJR0lnTHlCcElDb2dUV0YwYUM1UVNTQXFJRElzSUV3Z1BTQXRkQ0FxSUUxaGRHZ3VZMjl6S0VFcExDQkpJRDBnZENBcUlFMWhkR2d1YzJsdUtFRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkUzU0SUQwZ1ppNTRJQ3NnS0V3Z0tpQm5MbmdnS3lCSklDb2dlQzU0S1N3Z2RTNTVJRDBnWmk1NUlDc2dLRXdnS2lCbkxua2dLeUJKSUNvZ2VDNTVLU3dnZFM1NklEMGdaaTU2SUNzZ0tFd2dLaUJuTG5vZ0t5QkpJQ29nZUM1NktTd2diQzV3ZFhOb0tIVXVlQ3dnZFM1NUxDQjFMbm9wTENCa0xuTjFZbFpsWTNSdmNuTW9kU3dnWmlrdWJtOXliV0ZzYVhwbEtDa3NJR011Y0hWemFDaGtMbmdzSUdRdWVTd2daQzU2S1N3Z2FDNXdkWE5vS0Y4Z0x5QnVLU3dnYUM1d2RYTm9LR0lnTHlCcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4eElEMGdNVHNnWHpFZ1BEMGdianNnWHpFckt5bG1iM0lvYkdWMElIa3hJRDBnTVRzZ2VURWdQRDBnYVRzZ2VURXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpTVNBOUlDaHBJQ3NnTVNrZ0tpQW9YekVnTFNBeEtTQXJJQ2g1TVNBdElERXBMQ0JCTVNBOUlDaHBJQ3NnTVNrZ0tpQmZNU0FySUNoNU1TQXRJREVwTENCTU1TQTlJQ2hwSUNzZ01Ta2dLaUJmTVNBcklIa3hMQ0JKTVNBOUlDaHBJQ3NnTVNrZ0tpQW9YekVnTFNBeEtTQXJJSGt4T3dvZ0lDQWdJQ0FnSUNBZ0lDQmhMbkIxYzJnb1lqRXNJRUV4TENCSk1Ta3NJR0V1Y0hWemFDaEJNU3dnVERFc0lFa3hLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXpaWFJKYm1SbGVDaGhLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0d3c0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lzSUc1bGR5QmtaU2hqTENBektTa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0oxZGlJc0lHNWxkeUJrWlNob0xDQXlLU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnY0NoZkxDQjVMQ0JpTENCQkxDQk1LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ1RXRjBhQzVqYjNNb1h5a3NJR3NnUFNCTllYUm9Mbk5wYmloZktTd2dRaUE5SUdJZ0x5QjVJQ29nWHl3Z1VDQTlJRTFoZEdndVkyOXpLRUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQk1MbmdnUFNCQklDb2dLRElnS3lCUUtTQXFJQzQxSUNvZ1NTd2dUQzU1SUQwZ1FTQXFJQ2d5SUNzZ1VDa2dLaUJySUNvZ0xqVXNJRXd1ZWlBOUlFRWdLaUJOWVhSb0xuTnBiaWhDS1NBcUlDNDFPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QlVjaWhsTG5KaFpHbDFjeXdnWlM1MGRXSmxMQ0JsTG5SMVluVnNZWEpUWldkdFpXNTBjeXdnWlM1eVlXUnBZV3hUWldkdFpXNTBjeXdnWlM1d0xDQmxMbkVwT3dvZ0lDQWdmUXA5TENCRmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qm9ieWh1WlhjZ1RTZ3RNU3dnTFRFc0lEQXBMQ0J1WlhjZ1RTZ3RNU3dnTVN3Z01Da3NJRzVsZHlCTktERXNJREVzSURBcEtTd2dkQ0E5SURZMExDQnVJRDBnTVN3Z2FTQTlJRGdzSUhJZ1BTQWhNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVZIVmlaVWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndZWFJvT2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IwZFdKMWJHRnlVMlZuYldWdWRITTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FXRnNVMlZuYldWdWRITTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnNiM05sWkRvZ2Nnb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxMbU52YlhCMWRHVkdjbVZ1WlhSR2NtRnRaWE1vZEN3Z2NpazdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlXNW5aVzUwY3lBOUlHOHVkR0Z1WjJWdWRITXNJSFJvYVhNdWJtOXliV0ZzY3lBOUlHOHVibTl5YldGc2N5d2dkR2hwY3k1aWFXNXZjbTFoYkhNZ1BTQnZMbUpwYm05eWJXRnNjenNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzVsZHlCTkxDQnNJRDBnYm1WM0lFMHNJR01nUFNCdVpYY2dXQ3dnYUNBOUlHNWxkeUJOTENCMUlEMGdXMTBzSUdRZ1BTQmJYU3dnWmlBOUlGdGRMQ0J0SUQwZ1cxMDdDaUFnSUNBZ0lDQWdlQ2dwTENCMGFHbHpMbk5sZEVsdVpHVjRLRzBwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2RTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0dRc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtHWXNJRElwS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCNEtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4Z1BTQXdPeUJmSUR3Z2REc2dYeXNyS1hZb1h5azdDaUFnSUNBZ0lDQWdJQ0FnSUhZb2NpQTlQVDBnSVRFZ1B5QjBJRG9nTUNrc0lIQW9LU3dnWnlncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjJLRjhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhQ0E5SUdVdVoyVjBVRzlwYm5SQmRDaGZJQzhnZEN3Z2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnYnk1dWIzSnRZV3h6VzE5ZExDQmlJRDBnYnk1aWFXNXZjbTFoYkhOYlgxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUVNBOUlEQTdJRUVnUEQwZ2FUc2dRU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnUVNBdklHa2dLaUJOWVhSb0xsQkpJQ29nTWl3Z1NTQTlJRTFoZEdndWMybHVLRXdwTENCcklEMGdMVTFoZEdndVkyOXpLRXdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkM1NElEMGdheUFxSUhrdWVDQXJJRWtnS2lCaUxuZ3NJR3d1ZVNBOUlHc2dLaUI1TG5rZ0t5QkpJQ29nWWk1NUxDQnNMbm9nUFNCcklDb2dlUzU2SUNzZ1NTQXFJR0l1ZWl3Z2JDNXViM0p0WVd4cGVtVW9LU3dnWkM1d2RYTm9LR3d1ZUN3Z2JDNTVMQ0JzTG5vcExDQmhMbmdnUFNCb0xuZ2dLeUJ1SUNvZ2JDNTRMQ0JoTG5rZ1BTQm9MbmtnS3lCdUlDb2diQzU1TENCaExub2dQU0JvTG5vZ0t5QnVJQ29nYkM1NkxDQjFMbkIxYzJnb1lTNTRMQ0JoTG5rc0lHRXVlaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaeWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmZJRDBnTVRzZ1h5QThQU0IwT3lCZkt5c3BabTl5S0d4bGRDQjVJRDBnTVRzZ2VTQThQU0JwT3lCNUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQW9hU0FySURFcElDb2dLRjhnTFNBeEtTQXJJQ2g1SUMwZ01Ta3NJRUVnUFNBb2FTQXJJREVwSUNvZ1h5QXJJQ2g1SUMwZ01Ta3NJRXdnUFNBb2FTQXJJREVwSUNvZ1h5QXJJSGtzSUVrZ1BTQW9hU0FySURFcElDb2dLRjhnTFNBeEtTQXJJSGs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0TG5CMWMyZ29ZaXdnUVN3Z1NTa3NJRzB1Y0hWemFDaEJMQ0JNTENCSktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCd0tDa2dld29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4Z1BTQXdPeUJmSUR3OUlIUTdJRjhyS3lsbWIzSW9iR1YwSUhrZ1BTQXdPeUI1SUR3OUlHazdJSGtyS3lsakxuZ2dQU0JmSUM4Z2RDd2dZeTU1SUQwZ2VTQXZJR2tzSUdZdWNIVnphQ2hqTG5nc0lHTXVlU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1Y0dGMGFDQTlJSFJvYVhNdWNHRnlZVzFsZEdWeWN5NXdZWFJvTG5SdlNsTlBUaWdwTENCbE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVWeUtHNWxkeUJVWVZ0bExuQmhkR2d1ZEhsd1pWMG9LUzVtY205dFNsTlBUaWhsTG5CaGRHZ3BMQ0JsTG5SMVluVnNZWEpUWldkdFpXNTBjeXdnWlM1eVlXUnBkWE1zSUdVdWNtRmthV0ZzVTJWbmJXVnVkSE1zSUdVdVkyeHZjMlZrS1RzS0lDQWdJSDBLZlN3Z1JXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdWRXeHNLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblI1Y0dVZ1BTQWlWMmx5WldaeVlXMWxSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxiMjFsZEhKNU9pQmxDaUFnSUNBZ0lDQWdmU3dnWlNBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkTENCdUlEMGdibVYzSUZObGRDd2dhU0E5SUc1bGR5Qk5MQ0J5SUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsTG1sdVpHVjRJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1V1WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3Z1lTQTlJR1V1YVc1a1pYZ3NJR3dnUFNCbExtZHliM1Z3Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3dWJHVnVaM1JvSUQwOVBTQXdJQ1ltSUNoc0lEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052ZFc1ME9pQmhMbU52ZFc1MExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFlYUmxjbWxoYkVsdVpHVjRPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3TENCb0lEMGdiQzVzWlc1bmRHZzdJR01nUENCb095QXJLMk1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JGdGpYU3dnWkNBOUlIVXVjM1JoY25Rc0lHWWdQU0IxTG1OdmRXNTBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlHUXNJSGdnUFNCa0lDc2daanNnYlNBOElIZzdJRzBnS3owZ015bG1iM0lvYkdWMElIWWdQU0F3T3lCMklEd2dNenNnZGlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCaExtZGxkRmdvYlNBcklIWXBMQ0J3SUQwZ1lTNW5aWFJZS0cwZ0t5QW9kaUFySURFcElDVWdNeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNodkxDQm5LU3dnY2k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHOHNJSEFwTENCNVl5aHBMQ0J5TENCdUtTQTlQVDBnSVRBZ0ppWWdLSFF1Y0hWemFDaHBMbmdzSUdrdWVTd2dhUzU2S1N3Z2RDNXdkWE5vS0hJdWVDd2djaTU1TENCeUxub3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnpFZ1BTQmxMbUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0V4SUQwZ01Dd2diREVnUFNCdk1TNWpiM1Z1ZENBdklETTdJR0V4SUR3Z2JERTdJR0V4S3lzcFptOXlLR3hsZENCak1TQTlJREE3SUdNeElEd2dNenNnWXpFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ3hJRDBnTXlBcUlHRXhJQ3NnWXpFc0lIVXhJRDBnTXlBcUlHRXhJQ3NnS0dNeElDc2dNU2tnSlNBek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNodk1Td2dhREVwTENCeUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9iekVzSUhVeEtTd2dlV01vYVN3Z2Npd2diaWtnUFQwOUlDRXdJQ1ltSUNoMExuQjFjMmdvYVM1NExDQnBMbmtzSUdrdWVpa3NJSFF1Y0hWemFDaHlMbmdzSUhJdWVTd2djaTU2S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtIUXNJRE1wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlIbGpLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ1lDUjdjeTU0ZlN3a2UzTXVlWDBzSkh0ekxucDlMU1I3WlM1NGZTd2tlMlV1ZVgwc0pIdGxMbnA5WUN3Z2FTQTlJR0FrZTJVdWVIMHNKSHRsTG5sOUxDUjdaUzU2ZlMwa2UzTXVlSDBzSkh0ekxubDlMQ1I3Y3k1NmZXQTdDaUFnSUNCeVpYUjFjbTRnZEM1b1lYTW9iaWtnUFQwOUlDRXdJSHg4SUhRdWFHRnpLR2twSUQwOVBTQWhNQ0EvSUNFeElEb2dLSFF1WVdSa0tHNHNJR2twTENBaE1DazdDbjBLZG1GeUlIWmpJRDBnVDJKcVpXTjBMbVp5WldWNlpTaDdDaUFnSUNCZlgzQnliM1J2WDE4NklHNTFiR3dzQ2lBZ0lDQkNiM2hIWlc5dFpYUnllVG9nZDI0c0NpQWdJQ0JDYjNoQ2RXWm1aWEpIWlc5dFpYUnllVG9nZDI0c0NpQWdJQ0JEYVhKamJHVkhaVzl0WlhSeWVUb2dabklzQ2lBZ0lDQkRhWEpqYkdWQ2RXWm1aWEpIWlc5dFpYUnllVG9nWm5Jc0NpQWdJQ0JEYjI1bFIyVnZiV1YwY25rNklIQnlMQW9nSUNBZ1EyOXVaVUoxWm1abGNrZGxiMjFsZEhKNU9pQndjaXdLSUNBZ0lFTjViR2x1WkdWeVIyVnZiV1YwY25rNklFcHVMQW9nSUNBZ1EzbHNhVzVrWlhKQ2RXWm1aWEpIWlc5dFpYUnllVG9nU200c0NpQWdJQ0JFYjJSbFkyRm9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ2JYSXNDaUFnSUNCRWIyUmxZMkZvWldSeWIyNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2JYSXNDaUFnSUNCRlpHZGxjMGRsYjIxbGRISjVPaUJmWVN3S0lDQWdJRVY0ZEhKMVpHVkhaVzl0WlhSeWVUb2diRzRzQ2lBZ0lDQkZlSFJ5ZFdSbFFuVm1abVZ5UjJWdmJXVjBjbms2SUd4dUxBb2dJQ0FnU1dOdmMyRm9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ1gzSXNDaUFnSUNCSlkyOXpZV2hsWkhKdmJrSjFabVpsY2tkbGIyMWxkSEo1T2lCZmNpd0tJQ0FnSUV4aGRHaGxSMlZ2YldWMGNuazZJRTF5TEFvZ0lDQWdUR0YwYUdWQ2RXWm1aWEpIWlc5dFpYUnllVG9nVFhJc0NpQWdJQ0JQWTNSaGFHVmtjbTl1UjJWdmJXVjBjbms2SUVscExBb2dJQ0FnVDJOMFlXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJKYVN3S0lDQWdJRkJzWVc1bFIyVnZiV1YwY25rNklGQnBMQW9nSUNBZ1VHeGhibVZDZFdabVpYSkhaVzl0WlhSeWVUb2dVR2tzQ2lBZ0lDQlFiMng1YUdWa2NtOXVSMlZ2YldWMGNuazZJR0Z1TEFvZ0lDQWdVRzlzZVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQmhiaXdLSUNBZ0lGSnBibWRIWlc5dFpYUnllVG9nWW5Jc0NpQWdJQ0JTYVc1blFuVm1abVZ5UjJWdmJXVjBjbms2SUdKeUxBb2dJQ0FnVTJoaGNHVkhaVzl0WlhSeWVUb2dSR2tzQ2lBZ0lDQlRhR0Z3WlVKMVptWmxja2RsYjIxbGRISjVPaUJFYVN3S0lDQWdJRk53YUdWeVpVZGxiMjFsZEhKNU9pQkdhU3dLSUNBZ0lGTndhR1Z5WlVKMVptWmxja2RsYjIxbGRISjVPaUJHYVN3S0lDQWdJRlJsZEhKaGFHVmtjbTl1UjJWdmJXVjBjbms2SUhkeUxBb2dJQ0FnVkdWMGNtRm9aV1J5YjI1Q2RXWm1aWEpIWlc5dFpYUnllVG9nZDNJc0NpQWdJQ0JVYjNKMWMwZGxiMjFsZEhKNU9pQlRjaXdLSUNBZ0lGUnZjblZ6UW5WbVptVnlSMlZ2YldWMGNuazZJRk55TEFvZ0lDQWdWRzl5ZFhOTGJtOTBSMlZ2YldWMGNuazZJRlJ5TEFvZ0lDQWdWRzl5ZFhOTGJtOTBRblZtWm1WeVIyVnZiV1YwY25rNklGUnlMQW9nSUNBZ1ZIVmlaVWRsYjIxbGRISjVPaUJGY2l3S0lDQWdJRlIxWW1WQ2RXWm1aWEpIWlc5dFpYUnllVG9nUlhJc0NpQWdJQ0JYYVhKbFpuSmhiV1ZIWlc5dFpYUnllVG9nUldFS2ZTa3NJRUZoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pUYUdGa2IzZE5ZWFJsY21saGJDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvTUNrc0lIUm9hWE11ZEhKaGJuTndZWEpsYm5RZ1BTQWhNQ3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwQllTNXdjbTkwYjNSNWNHVXVhWE5UYUdGa2IzZE5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdjRzhnUFNCamJHRnpjeUJsZUhSbGJtUnpJR1IwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrWldacGJtVnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQlRWRUZPUkVGU1JEb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtERTJOemMzTWpFMUtTd2dkR2hwY3k1eWIzVm5hRzVsYzNNZ1BTQXhMQ0IwYUdsekxtMWxkR0ZzYm1WemN5QTlJREFzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1GdlRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WlcxcGMzTnBkbVVnUFNCdVpYY2dZV1VvTUNrc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJRzUxYkd3c0lIUm9hWE11Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJRWhwTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRmdvTVN3Z01Ta3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJREVzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJREFzSUhSb2FYTXVjbTkxWjJodVpYTnpUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXRaWFJoYkc1bGMzTk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVsYm5aTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1WdWRrMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnTGprNExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlDRXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQWljbTkxYm1RaUxDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdJVEVzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVpHVm1hVzVsY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVTFSQlRrUkJVa1E2SUNJaUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG5KdmRXZG9ibVZ6Y3lBOUlHVXVjbTkxWjJodVpYTnpMQ0IwYUdsekxtMWxkR0ZzYm1WemN5QTlJR1V1YldWMFlXeHVaWE56TENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndJRDBnWlM1c2FXZG9kRTFoY0N3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11WVc5TllYQWdQU0JsTG1GdlRXRndMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWhiMDFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVsYldsemMybDJaUzVqYjNCNUtHVXVaVzFwYzNOcGRtVXBMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJRDBnWlM1bGJXbHpjMmwyWlUxaGNDd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlHVXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa3NJSFJvYVhNdVluVnRjRTFoY0NBOUlHVXVZblZ0Y0UxaGNDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQmxMbUoxYlhCVFkyRnNaU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0JsTG01dmNtMWhiRTFoY0N3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdaUzV1YjNKdFlXeE5ZWEJVZVhCbExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bExtTnZjSGtvWlM1dWIzSnRZV3hUWTJGc1pTa3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE11Y205MVoyaHVaWE56VFdGd0lEMGdaUzV5YjNWbmFHNWxjM05OWVhBc0lIUm9hWE11YldWMFlXeHVaWE56VFdGd0lEMGdaUzV0WlhSaGJHNWxjM05OWVhBc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUdVdVpXNTJUV0Z3TENCMGFHbHpMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1Wlc1MlRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxuSmxabkpoWTNScGIyNVNZWFJwYnlBOUlHVXVjbVZtY21GamRHbHZibEpoZEdsdkxDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlHVXVkMmx5WldaeVlXMWxMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1TENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ1pTNW1iR0YwVTJoaFpHbHVaeXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tjRzh1Y0hKdmRHOTBlWEJsTG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRU5oSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJ3YnlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdVMVJCVGtSQlVrUTZJQ0lpTEFvZ0lDQWdJQ0FnSUNBZ0lDQlFTRmxUU1VOQlREb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dpTENCMGFHbHpMbU5zWldGeVkyOWhkRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJRDBnTUN3Z2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ1BTQnVkV3hzTENCMGFHbHpMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsSUQwZ2JtVjNJRmdvTVN3Z01Ta3NJSFJvYVhNdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVwYjNJZ1BTQXhMalVzSUU5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGVTaDBhR2x6TENBaWNtVm1iR1ZqZEdsMmFYUjVJaXdnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUcxMEtESXVOU0FxSUNoMGFHbHpMbWx2Y2lBdElERXBJQzhnS0hSb2FYTXVhVzl5SUNzZ01Ta3NJREFzSURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVc5eUlEMGdLREVnS3lBdU5DQXFJSFFwSUM4Z0tERWdMU0F1TkNBcUlIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdWMyaGxaVzVEYjJ4dmNpQTlJRzVsZHlCaFpTZ3dLU3dnZEdocGN5NXphR1ZsYmtOdmJHOXlUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6Y3lBOUlERXNJSFJvYVhNdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBZ1BTQnVkV3hzTENCMGFHbHpMblJ5WVc1emJXbHpjMmx2YmsxaGNDQTlJRzUxYkd3c0lIUm9hWE11ZEdocFkydHVaWE56SUQwZ01Dd2dkR2hwY3k1MGFHbGphMjVsYzNOTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1GMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVZ1BTQXdMQ0IwYUdsekxtRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJZ1BTQnVaWGNnWVdVb01Td2dNU3dnTVNrc0lIUm9hWE11YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV6Y0dWamRXeGhja052Ykc5eUlEMGdibVYzSUdGbEtERXNJREVzSURFcExDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxsOXphR1ZsYmlBOUlEQXNJSFJvYVhNdVgyTnNaV0Z5WTI5aGRDQTlJREFzSUhSb2FYTXVYM1J5WVc1emJXbHpjMmx2YmlBOUlEQXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMElITm9aV1Z1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl6YUdWbGJqc0tJQ0FnSUgwS0lDQWdJSE5sZENCemFHVmxiaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmYzJobFpXNGdQaUF3SUNFOUlHVWdQaUF3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyTENCMGFHbHpMbDl6YUdWbGJpQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUWdZMnhsWVhKamIyRjBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWpiR1ZoY21OdllYUTdDaUFnSUNCOUNpQWdJQ0J6WlhRZ1kyeGxZWEpqYjJGMEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOWpiR1ZoY21OdllYUWdQaUF3SUNFOUlHVWdQaUF3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyTENCMGFHbHpMbDlqYkdWaGNtTnZZWFFnUFNCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhSeVlXNXpiV2x6YzJsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmRISmhibk50YVhOemFXOXVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIUnlZVzV6YldsemMybHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZEhKaGJuTnRhWE56YVc5dUlENGdNQ0FoUFNCbElENGdNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLeXdnZEdocGN5NWZkSEpoYm5OdGFYTnphVzl1SUQwZ1pUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVJsWm1sdVpYTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGTlVRVTVFUVZKRU9pQWlJaXdLSUNBZ0lDQWdJQ0FnSUNBZ1VFaFpVMGxEUVV3NklDSWlDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NWpiR1ZoY21OdllYUWdQU0JsTG1Oc1pXRnlZMjloZEN3Z2RHaHBjeTVqYkdWaGNtTnZZWFJOWVhBZ1BTQmxMbU5zWldGeVkyOWhkRTFoY0N3Z2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01nUFNCbExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5d2dkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdQU0JsTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDd2dkR2hwY3k1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ1BTQmxMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ3dnZEdocGN5NWpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaUzVqYjNCNUtHVXVZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1VwTENCMGFHbHpMbWx2Y2lBOUlHVXVhVzl5TENCMGFHbHpMbk5vWldWdUlEMGdaUzV6YUdWbGJpd2dkR2hwY3k1emFHVmxia052Ykc5eUxtTnZjSGtvWlM1emFHVmxia052Ykc5eUtTd2dkR2hwY3k1emFHVmxia052Ykc5eVRXRndJRDBnWlM1emFHVmxia052Ykc5eVRXRndMQ0IwYUdsekxuTm9aV1Z1VW05MVoyaHVaWE56SUQwZ1pTNXphR1ZsYmxKdmRXZG9ibVZ6Y3l3Z2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ0E5SUdVdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBc0lIUm9hWE11ZEhKaGJuTnRhWE56YVc5dUlEMGdaUzUwY21GdWMyMXBjM05wYjI0c0lIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndJRDBnWlM1MGNtRnVjMjFwYzNOcGIyNU5ZWEFzSUhSb2FYTXVkR2hwWTJ0dVpYTnpJRDBnWlM1MGFHbGphMjVsYzNNc0lIUm9hWE11ZEdocFkydHVaWE56VFdGd0lEMGdaUzUwYUdsamEyNWxjM05OWVhBc0lIUm9hWE11WVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBOUlHVXVZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU3dnZEdocGN5NWhkSFJsYm5WaGRHbHZia052Ykc5eUxtTnZjSGtvWlM1aGRIUmxiblZoZEdsdmJrTnZiRzl5S1N3Z2RHaHBjeTV6Y0dWamRXeGhja2x1ZEdWdWMybDBlU0E5SUdVdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhrc0lIUm9hWE11YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBZ1BTQmxMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3TENCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNJdVkyOXdlU2hsTG5Od1pXTjFiR0Z5UTI5c2IzSXBMQ0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1BTQmxMbk53WldOMWJHRnlRMjlzYjNKTllYQXNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NrTmhMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaFFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQk1ZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdaSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTV6Y0dWamRXeGhjaUE5SUc1bGR5QmhaU2d4TVRFNE5EZ3hLU3dnZEdocGN5NXphR2x1YVc1bGMzTWdQU0F6TUN3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVlXOU5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1bGJXbHpjMmwyWlNBOUlHNWxkeUJoWlNnd0tTd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJREVzSUhSb2FYTXVibTl5YldGc1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnU0drc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV0NneExDQXhLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVkyOXRZbWx1WlNBOUlGWnpMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0E5SURFc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnTGprNExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlDRXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQWljbTkxYm1RaUxDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdJVEVzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXNiM0l1WTI5d2VTaGxMbU52Ykc5eUtTd2dkR2hwY3k1emNHVmpkV3hoY2k1amIzQjVLR1V1YzNCbFkzVnNZWElwTENCMGFHbHpMbk5vYVc1cGJtVnpjeUE5SUdVdWMyaHBibWx1WlhOekxDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ1pTNXNhV2RvZEUxaGNDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlHVXViR2xuYUhSTllYQkpiblJsYm5OcGRIa3NJSFJvYVhNdVlXOU5ZWEFnUFNCbExtRnZUV0Z3TENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVoYjAxaGNFbHVkR1Z1YzJsMGVTd2dkR2hwY3k1bGJXbHpjMmwyWlM1amIzQjVLR1V1WlcxcGMzTnBkbVVwTENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUQwZ1pTNWxiV2x6YzJsMlpVMWhjQ3dnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJR1V1WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJR1V1WW5WdGNFMWhjQ3dnZEdocGN5NWlkVzF3VTJOaGJHVWdQU0JsTG1KMWJYQlRZMkZzWlN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCbExtNXZjbTFoYkUxaGNDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnWlM1dWIzSnRZV3hOWVhCVWVYQmxMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxMbU52Y0hrb1pTNXViM0p0WVd4VFkyRnNaU2tzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdaUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJSFJvYVhNdWMzQmxZM1ZzWVhKTllYQWdQU0JsTG5Od1pXTjFiR0Z5VFdGd0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ1pTNWhiSEJvWVUxaGNDd2dkR2hwY3k1bGJuWk5ZWEFnUFNCbExtVnVkazFoY0N3Z2RHaHBjeTVqYjIxaWFXNWxJRDBnWlM1amIyMWlhVzVsTENCMGFHbHpMbkpsWm14bFkzUnBkbWwwZVNBOUlHVXVjbVZtYkdWamRHbDJhWFI1TENCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJR1V1Y21WbWNtRmpkR2x2YmxKaGRHbHZMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJR1V1ZDJseVpXWnlZVzFsTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnUFNCbExuZHBjbVZtY21GdFpVeHBibVZqWVhBc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNCbExuZHBjbVZtY21GdFpVeHBibVZxYjJsdUxDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdaUzVtYkdGMFUyaGhaR2x1Wnl3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLVEdFdWNISnZkRzkwZVhCbExtbHpUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRkpoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdWRTlQVGpvZ0lpSUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphRlJ2YjI1TllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVozSmhaR2xsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVZVzlOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NWxiV2x6YzJsMlpTQTlJRzVsZHlCaFpTZ3dLU3dnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SURFc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1NHa3NJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dDZ3hMQ0F4S1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnSVRFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ01Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxZMkZ3SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUNKeWIzVnVaQ0lzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXNiM0l1WTI5d2VTaGxMbU52Ykc5eUtTd2dkR2hwY3k1dFlYQWdQU0JsTG0xaGNDd2dkR2hwY3k1bmNtRmthV1Z1ZEUxaGNDQTlJR1V1WjNKaFpHbGxiblJOWVhBc0lIUm9hWE11YkdsbmFIUk5ZWEFnUFNCbExteHBaMmgwVFdGd0xDQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aGIwMWhjQ0E5SUdVdVlXOU5ZWEFzSUhSb2FYTXVZVzlOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbUZ2VFdGd1NXNTBaVzV6YVhSNUxDQjBhR2x6TG1WdGFYTnphWFpsTG1OdmNIa29aUzVsYldsemMybDJaU2tzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCbExtVnRhWE56YVhabFRXRndMQ0IwYUdsekxtVnRhWE56YVhabFNXNTBaVzV6YVhSNUlEMGdaUzVsYldsemMybDJaVWx1ZEdWdWMybDBlU3dnZEdocGN5NWlkVzF3VFdGd0lEMGdaUzVpZFcxd1RXRndMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJR1V1WW5WdGNGTmpZV3hsTENCMGFHbHpMbTV2Y20xaGJFMWhjQ0E5SUdVdWJtOXliV0ZzVFdGd0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JsTG01dmNtMWhiRTFoY0ZSNWNHVXNJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVXVZMjl3ZVNobExtNXZjbTFoYkZOallXeGxLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaV05oY0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUdVdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q2xKaExuQnliM1J2ZEhsd1pTNXBjMDFsYzJoVWIyOXVUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRkJoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1RtOXliV0ZzVFdGMFpYSnBZV3dpTENCMGFHbHpMbUoxYlhCTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlERXNJSFJvYVhNdWJtOXliV0ZzVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdTR2tzSUhSb2FYTXVibTl5YldGc1UyTmhiR1VnUFNCdVpYY2dXQ2d4TENBeEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdNU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJDYVdGeklEMGdNQ3dnZEdocGN5NTNhWEpsWm5KaGJXVWdQU0FoTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNBeExDQjBhR2x6TG1adlp5QTlJQ0V4TENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ0lURXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WW5WdGNFMWhjQ0E5SUdVdVluVnRjRTFoY0N3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNCbExtSjFiWEJUWTJGc1pTd2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQmxMbTV2Y20xaGJFMWhjQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1pTNXViM0p0WVd4TllYQlVlWEJsTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsTG1OdmNIa29aUzV1YjNKdFlXeFRZMkZzWlNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1zSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdVpteGhkRk5vWVdScGJtY2dQU0JsTG1ac1lYUlRhR0ZrYVc1bkxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwUVlTNXdjbTkwYjNSNWNHVXVhWE5OWlhOb1RtOXliV0ZzVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUVsaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9UR0Z0WW1WeWRFMWhkR1Z5YVdGc0lpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QmhaU2d4TmpjM056SXhOU2tzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1GdlRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WlcxcGMzTnBkbVVnUFNCdVpYY2dZV1VvTUNrc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVkyOXRZbWx1WlNBOUlGWnpMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0E5SURFc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnTGprNExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlDRXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQWljbTkxYm1RaUxDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXViR2xuYUhSTllYQWdQU0JsTG14cFoyaDBUV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnWlM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVoYjAxaGNDQTlJR1V1WVc5TllYQXNJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCbExtRnZUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbVZ0YVhOemFYWmxMbU52Y0hrb1pTNWxiV2x6YzJsMlpTa3NJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0JsTG1WdGFYTnphWFpsVFdGd0xDQjBhR2x6TG1WdGFYTnphWFpsU1c1MFpXNXphWFI1SUQwZ1pTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTd2dkR2hwY3k1emNHVmpkV3hoY2sxaGNDQTlJR1V1YzNCbFkzVnNZWEpOWVhBc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG1WdWRrMWhjQ0E5SUdVdVpXNTJUV0Z3TENCMGFHbHpMbU52YldKcGJtVWdQU0JsTG1OdmJXSnBibVVzSUhSb2FYTXVjbVZtYkdWamRHbDJhWFI1SUQwZ1pTNXlaV1pzWldOMGFYWnBkSGtzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklEMGdaUzV5WldaeVlXTjBhVzl1VW1GMGFXOHNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaV05oY0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGFtOXBiaUE5SUdVdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q2tsaExuQnliM1J2ZEhsd1pTNXBjMDFsYzJoTVlXMWlaWEowVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUVSaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVpHVm1hVzVsY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVFVGVVEwRlFPaUFpSWdvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1RXRjBZMkZ3VFdGMFpYSnBZV3dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtERTJOemMzTWpFMUtTd2dkR2hwY3k1dFlYUmpZWEFnUFNCdWRXeHNMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVluVnRjRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZblZ0Y0ZOallXeGxJRDBnTVN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtNXZjbTFoYkUxaGNGUjVjR1VnUFNCSWFTd2dkR2hwY3k1dWIzSnRZV3hUWTJGc1pTQTlJRzVsZHlCWUtERXNJREVwTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNBeExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNBd0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5SUNFeExDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbVJsWm1sdVpYTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFMUJWRU5CVURvZ0lpSUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWJXRjBZMkZ3SUQwZ1pTNXRZWFJqWVhBc0lIUm9hWE11YldGd0lEMGdaUzV0WVhBc0lIUm9hWE11WW5WdGNFMWhjQ0E5SUdVdVluVnRjRTFoY0N3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNCbExtSjFiWEJUWTJGc1pTd2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQmxMbTV2Y20xaGJFMWhjQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1pTNXViM0p0WVd4TllYQlVlWEJsTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsTG1OdmNIa29aUzV1YjNKdFlXeFRZMkZzWlNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1zSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ1pTNW1iR0YwVTJoaFpHbHVaeXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tSR0V1Y0hKdmRHOTBlWEJsTG1selRXVnphRTFoZEdOaGNFMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQkdZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdablFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUR2x1WlVSaGMyaGxaRTFoZEdWeWFXRnNJaXdnZEdocGN5NXpZMkZzWlNBOUlERXNJSFJvYVhNdVpHRnphRk5wZW1VZ1BTQXpMQ0IwYUdsekxtZGhjRk5wZW1VZ1BTQXhMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5OallXeGxJRDBnWlM1elkyRnNaU3dnZEdocGN5NWtZWE5vVTJsNlpTQTlJR1V1WkdGemFGTnBlbVVzSUhSb2FYTXVaMkZ3VTJsNlpTQTlJR1V1WjJGd1UybDZaU3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0tSbUV1Y0hKdmRHOTBlWEJsTG1selRHbHVaVVJoYzJobFpFMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQnplU0E5SUU5aWFtVmpkQzVtY21WbGVtVW9ld29nSUNBZ1gxOXdjbTkwYjE5Zk9pQnVkV3hzTEFvZ0lDQWdVMmhoWkc5M1RXRjBaWEpwWVd3NklFRmhMQW9nSUNBZ1UzQnlhWFJsVFdGMFpYSnBZV3c2SUdsdkxBb2dJQ0FnVW1GM1UyaGhaR1Z5VFdGMFpYSnBZV3c2SUVkcExBb2dJQ0FnVTJoaFpHVnlUV0YwWlhKcFlXdzZJSE51TEFvZ0lDQWdVRzlwYm5SelRXRjBaWEpwWVd3NklHcHVMQW9nSUNBZ1RXVnphRkJvZVhOcFkyRnNUV0YwWlhKcFlXdzZJRU5oTEFvZ0lDQWdUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3c2SUhCdkxBb2dJQ0FnVFdWemFGQm9iMjVuVFdGMFpYSnBZV3c2SUV4aExBb2dJQ0FnVFdWemFGUnZiMjVOWVhSbGNtbGhiRG9nVW1Fc0NpQWdJQ0JOWlhOb1RtOXliV0ZzVFdGMFpYSnBZV3c2SUZCaExBb2dJQ0FnVFdWemFFeGhiV0psY25STllYUmxjbWxoYkRvZ1NXRXNDaUFnSUNCTlpYTm9SR1Z3ZEdoTllYUmxjbWxoYkRvZ1pXOHNDaUFnSUNCTlpYTm9SR2x6ZEdGdVkyVk5ZWFJsY21saGJEb2dkRzhzQ2lBZ0lDQk5aWE5vUW1GemFXTk5ZWFJsY21saGJEb2dhRzRzQ2lBZ0lDQk5aWE5vVFdGMFkyRndUV0YwWlhKcFlXdzZJRVJoTEFvZ0lDQWdUR2x1WlVSaGMyaGxaRTFoZEdWeWFXRnNPaUJHWVN3S0lDQWdJRXhwYm1WQ1lYTnBZMDFoZEdWeWFXRnNPaUJtZEN3S0lDQWdJRTFoZEdWeWFXRnNPaUJrZEFwOUtTd2dXbVVnUFNCN0NpQWdJQ0JoY25KaGVWTnNhV05sT2lCbWRXNWpkR2x2YmloekxDQmxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZwbExtbHpWSGx3WldSQmNuSmhlU2h6S1NBL0lHNWxkeUJ6TG1OdmJuTjBjblZqZEc5eUtITXVjM1ZpWVhKeVlYa29aU3dnZENBaFBUMGdkbTlwWkNBd0lEOGdkQ0E2SUhNdWJHVnVaM1JvS1NrZ09pQnpMbk5zYVdObEtHVXNJSFFwT3dvZ0lDQWdmU3dLSUNBZ0lHTnZiblpsY25SQmNuSmhlVG9nWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoY3lCOGZDQWhkQ0FtSmlCekxtTnZibk4wY25WamRHOXlJRDA5UFNCbElEOGdjeUE2SUhSNWNHVnZaaUJsTGtKWlZFVlRYMUJGVWw5RlRFVk5SVTVVSUQwOUlDSnVkVzFpWlhJaUlEOGdibVYzSUdVb2N5a2dPaUJCY25KaGVTNXdjbTkwYjNSNWNHVXVjMnhwWTJVdVkyRnNiQ2h6S1RzS0lDQWdJSDBzQ2lBZ0lDQnBjMVI1Y0dWa1FYSnlZWGs2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1FYSnlZWGxDZFdabVpYSXVhWE5XYVdWM0tITXBJQ1ltSUNFb2N5QnBibk4wWVc1alpXOW1JRVJoZEdGV2FXVjNLVHNLSUNBZ0lIMHNDaUFnSUNCblpYUkxaWGxtY21GdFpVOXlaR1Z5T2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaU2hwTENCeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6VzJsZElDMGdjMXR5WFRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCekxteGxibWQwYUN3Z2JpQTlJRzVsZHlCQmNuSmhlU2gwS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUNFOVBTQjBPeUFySzJrcGJsdHBYU0E5SUdrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMyOXlkQ2hsS1N3Z2Jqc0tJQ0FnSUgwc0NpQWdJQ0J6YjNKMFpXUkJjbkpoZVRvZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2N5NXNaVzVuZEdnc0lHa2dQU0J1WlhjZ2N5NWpiMjV6ZEhKMVkzUnZjaWh1S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ01Ec2dieUFoUFQwZ2Jqc2dLeXR5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBXM0pkSUNvZ1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzSUQwZ01Ec2diQ0FoUFQwZ1pUc2dLeXRzS1dsYmJ5c3JYU0E5SUhOYllTQXJJR3hkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVRzS0lDQWdJSDBzQ2lBZ0lDQm1iR0YwZEdWdVNsTlBUam9nWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ01Td2djaUE5SUhOYk1GMDdDaUFnSUNBZ0lDQWdabTl5S0RzZ2NpQWhQVDBnZG05cFpDQXdJQ1ltSUhKYmJsMGdQVDA5SUhadmFXUWdNRHNwY2lBOUlITmJhU3NyWFRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0J5VzI1ZE93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUNFOVBTQjJiMmxrSURBcElHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHOHBLU0JrYnlCdklEMGdjbHR1WFN3Z2J5QWhQVDBnZG05cFpDQXdJQ1ltSUNobExuQjFjMmdvY2k1MGFXMWxLU3dnZEM1d2RYTm9MbUZ3Y0d4NUtIUXNJRzhwS1N3Z2NpQTlJSE5iYVNzclhUc0tJQ0FnSUNBZ0lDQjNhR2xzWlNBb2NpQWhQVDBnZG05cFpDQXdLUW9nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLRzh1ZEc5QmNuSmhlU0FoUFQwZ2RtOXBaQ0F3S1NCa2J5QnZJRDBnY2x0dVhTd2dieUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbkIxYzJnb2NpNTBhVzFsS1N3Z2J5NTBiMEZ5Y21GNUtIUXNJSFF1YkdWdVozUm9LU2tzSUhJZ1BTQnpXMmtySzEwN0NpQWdJQ0FnSUNBZ2QyaHBiR1VnS0hJZ0lUMDlJSFp2YVdRZ01Da0tJQ0FnSUNBZ0lDQmxiSE5sSUdSdklHOGdQU0J5VzI1ZExDQnZJQ0U5UFNCMmIybGtJREFnSmlZZ0tHVXVjSFZ6YUNoeUxuUnBiV1VwTENCMExuQjFjMmdvYnlrcExDQnlJRDBnYzF0cEt5dGRPd29nSUNBZ0lDQWdJSGRvYVd4bElDaHlJQ0U5UFNCMmIybGtJREFwQ2lBZ0lDQjlMQW9nSUNBZ2MzVmlZMnhwY0RvZ1puVnVZM1JwYjI0b2N5d2daU3dnZEN3Z2Jpd2dhU0E5SURNd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnpMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdjaTV1WVcxbElEMGdaVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQTdJR3dnUENCeUxuUnlZV05yY3k1c1pXNW5kR2c3SUNzcmJDbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnY2k1MGNtRmphM05iYkYwc0lHZ2dQU0JqTG1kbGRGWmhiSFZsVTJsNlpTZ3BMQ0IxSUQwZ1cxMHNJR1FnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtSUQwZ01Ec2daaUE4SUdNdWRHbHRaWE11YkdWdVozUm9PeUFySzJZcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCakxuUnBiV1Z6VzJaZElDb2dhVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaEtHMGdQQ0IwSUh4OElHMGdQajBnYmlrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxTG5CMWMyZ29ZeTUwYVcxbGMxdG1YU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNElEMGdNRHNnZUNBOElHZzdJQ3NyZUNsa0xuQjFjMmdvWXk1MllXeDFaWE5iWmlBcUlHZ2dLeUI0WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RTNXNaVzVuZEdnZ0lUMDlJREFnSmlZZ0tHTXVkR2x0WlhNZ1BTQmFaUzVqYjI1MlpYSjBRWEp5WVhrb2RTd2dZeTUwYVcxbGN5NWpiMjV6ZEhKMVkzUnZjaWtzSUdNdWRtRnNkV1Z6SUQwZ1dtVXVZMjl1ZG1WeWRFRnljbUY1S0dRc0lHTXVkbUZzZFdWekxtTnZibk4wY25WamRHOXlLU3dnYnk1d2RYTm9LR01wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NpNTBjbUZqYTNNZ1BTQnZPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdNU0F2SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc01TQTlJREE3SUd3eElEd2djaTUwY21GamEzTXViR1Z1WjNSb095QXJLMnd4S1dFZ1BpQnlMblJ5WVdOcmMxdHNNVjB1ZEdsdFpYTmJNRjBnSmlZZ0tHRWdQU0J5TG5SeVlXTnJjMXRzTVYwdWRHbHRaWE5iTUYwcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JESWdQU0F3T3lCc01pQThJSEl1ZEhKaFkydHpMbXhsYm1kMGFEc2dLeXRzTWlseUxuUnlZV05yYzF0c01sMHVjMmhwWm5Rb0xURWdLaUJoS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2k1eVpYTmxkRVIxY21GMGFXOXVLQ2tzSUhJN0NpQWdJQ0I5TEFvZ0lDQWdiV0ZyWlVOc2FYQkJaR1JwZEdsMlpUb2dablZ1WTNScGIyNG9jeXdnWlNBOUlEQXNJSFFnUFNCekxDQnVJRDBnTXpBcElIc0tJQ0FnSUNBZ0lDQnVJRHc5SURBZ0ppWWdLRzRnUFNBek1DazdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBMblJ5WVdOcmN5NXNaVzVuZEdnc0lISWdQU0JsSUM4Z2Jqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3T3lCdklEd2dhVHNnS3l0dktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwTG5SeVlXTnJjMXR2WFN3Z2JDQTlJR0V1Vm1Gc2RXVlVlWEJsVG1GdFpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd2dQVDA5SUNKaWIyOXNJaUI4ZkNCc0lEMDlQU0FpYzNSeWFXNW5JaWtnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2N5NTBjbUZqYTNNdVptbHVaQ2htZFc1amRHbHZiaWhuS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWnk1dVlXMWxJRDA5UFNCaExtNWhiV1VnSmlZZ1p5NVdZV3gxWlZSNWNHVk9ZVzFsSUQwOVBTQnNPd29nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTWdQVDA5SUhadmFXUWdNQ2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ01Dd2dkU0E5SUdFdVoyVjBWbUZzZFdWVGFYcGxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXVZM0psWVhSbFNXNTBaWEp3YjJ4aGJuUXVhWE5KYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUkhURlJHUTNWaWFXTlRjR3hwYm1VZ0ppWWdLR2dnUFNCMUlDOGdNeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ01Dd2daaUE5SUdNdVoyVjBWbUZzZFdWVGFYcGxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTXVZM0psWVhSbFNXNTBaWEp3YjJ4aGJuUXVhWE5KYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUkhURlJHUTNWaWFXTlRjR3hwYm1VZ0ppWWdLR1FnUFNCbUlDOGdNeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ1lTNTBhVzFsY3k1c1pXNW5kR2dnTFNBeExDQjRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE4UFNCaExuUnBiV1Z6V3pCZEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHZ3NJSEFnUFNCMUlDMGdhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGdnUFNCYVpTNWhjbkpoZVZOc2FXTmxLR0V1ZG1Gc2RXVnpMQ0JuTENCd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoeUlENDlJR0V1ZEdsdFpYTmJiVjBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm5NU0E5SUcwZ0tpQjFJQ3NnYUN3Z2NERWdQU0JuTVNBcklIVWdMU0JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUNBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvWVM1MllXeDFaWE1zSUdjeExDQndNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeklnUFNCaExtTnlaV0YwWlVsdWRHVnljRzlzWVc1MEtDa3NJSEF5SUQwZ2FDd2dYeUE5SUhVZ0xTQm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaekl1WlhaaGJIVmhkR1VvY2lrc0lIZ2dQU0JhWlM1aGNuSmhlVk5zYVdObEtHY3lMbkpsYzNWc2RFSjFabVpsY2l3Z2NESXNJRjhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd3Z1BUMDlJQ0p4ZFdGMFpYSnVhVzl1SWlBbUppQnVaWGNnWjNRb0tTNW1jbTl0UVhKeVlYa29lQ2t1Ym05eWJXRnNhWHBsS0NrdVkyOXVhblZuWVhSbEtDa3VkRzlCY25KaGVTaDRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCakxuUnBiV1Z6TG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbk15QTlJREE3SUdjeklEd2dkanNnS3l0bk15bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0RNZ1BTQm5NeUFxSUdZZ0t5QmtPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3Z1BUMDlJQ0p4ZFdGMFpYSnVhVzl1SWlrZ1ozUXViWFZzZEdsd2JIbFJkV0YwWlhKdWFXOXVjMFpzWVhRb1l5NTJZV3gxWlhNc0lIQXpMQ0I0TENBd0xDQmpMblpoYkhWbGN5d2djRE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOHhJRDBnWmlBdElHUWdLaUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREE3SUhrZ1BDQmZNVHNnS3l0NUtXTXVkbUZzZFdWelczQXpJQ3NnZVYwZ0xUMGdlRnQ1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjeTVpYkdWdVpFMXZaR1VnUFNCeFl5d2djenNLSUNBZ0lIMEtmU3dnWTI0Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1Y3lBOUlHVXNJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRJRDBnTUN3Z2RHaHBjeTV5WlhOMWJIUkNkV1ptWlhJZ1BTQnBJQ0U5UFNCMmIybGtJREFnUHlCcElEb2dibVYzSUhRdVkyOXVjM1J5ZFdOMGIzSW9iaWtzSUhSb2FYTXVjMkZ0Y0d4bFZtRnNkV1Z6SUQwZ2RDd2dkR2hwY3k1MllXeDFaVk5wZW1VZ1BTQnVMQ0IwYUdsekxuTmxkSFJwYm1keklEMGdiblZzYkN3Z2RHaHBjeTVFWldaaGRXeDBVMlYwZEdsdVozTmZJRDBnZTMwN0NpQWdJQ0I5Q2lBZ0lDQmxkbUZzZFdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWN5d2diaUE5SUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0TENCcElEMGdkRnR1WFN3Z2NpQTlJSFJiYmlBdElERmRPd29nSUNBZ0lDQWdJR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHODdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FUb2dhV1lnS0NFb1pTQThJR2twS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlHNGdLeUF5T3pzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsSUR3Z2Npa2dZbkpsWVdzZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOUlIUXViR1Z1WjNSb0xDQjBhR2x6TGw5allXTm9aV1JKYm1SbGVDQTlJRzRzSUhSb2FYTXVZV1owWlhKRmJtUmZLRzRnTFNBeExDQmxMQ0J5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUlEMDlQU0JoS1NCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDBnYVN3Z2FTQTlJSFJiS3l0dVhTd2daU0E4SUdrcElHSnlaV0ZySUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlIUXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lTaGxJRDQ5SUhJcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoTVNBOUlIUmJNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1VnUENCaE1TQW1KaUFvYmlBOUlESXNJSElnUFNCaE1TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJRzRnTFNBeU96c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRJRDBnTUN3Z2RHaHBjeTVpWldadmNtVlRkR0Z5ZEY4b01Dd2daU3dnYVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYmlBOVBUMGdiQ2tnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQTlJSElzSUhJZ1BTQjBXeTB0YmlBdElERmRMQ0JsSUQ0OUlISXBJR0p5WldGcklIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzRzSUc0Z1BTQXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXlCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtEc2diaUE4SUc4N0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lUSWdQU0J1SUNzZ2J5QStQajRnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxJRHdnZEZ0aE1sMGdQeUJ2SUQwZ1lUSWdPaUJ1SUQwZ1lUSWdLeUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQU0IwVzI1ZExDQnlJRDBnZEZ0dUlDMGdNVjBzSUhJZ1BUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlIUm9hWE11WDJOaFkyaGxaRWx1WkdWNElEMGdNQ3dnZEdocGN5NWlaV1p2Y21WVGRHRnlkRjhvTUN3Z1pTd2dhU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdiaUE5SUhRdWJHVnVaM1JvTENCMGFHbHpMbDlqWVdOb1pXUkpibVJsZUNBOUlHNHNJSFJvYVhNdVlXWjBaWEpGYm1SZktHNGdMU0F4TENCeUxDQmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOWpZV05vWldSSmJtUmxlQ0E5SUc0c0lIUm9hWE11YVc1MFpYSjJZV3hEYUdGdVoyVmtYeWh1TENCeUxDQnBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFXNTBaWEp3YjJ4aGRHVmZLRzRzSUhJc0lHVXNJR2twT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVMlYwZEdsdVozTmZLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkSFJwYm1keklIeDhJSFJvYVhNdVJHVm1ZWFZzZEZObGRIUnBibWR6WHpzS0lDQWdJSDBLSUNBZ0lHTnZjSGxUWVcxd2JHVldZV3gxWlY4b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1eVpYTjFiSFJDZFdabVpYSXNJRzRnUFNCMGFHbHpMbk5oYlhCc1pWWmhiSFZsY3l3Z2FTQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnlJRDBnWlNBcUlHazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTURzZ2J5QWhQVDBnYVRzZ0t5dHZLWFJiYjEwZ1BTQnVXM0lnS3lCdlhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2REc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWNHOXNZWFJsWHlncElIc0tJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ltTmhiR3dnZEc4Z1lXSnpkSEpoWTNRZ2JXVjBhRzlrSWlrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25aaGJFTm9ZVzVuWldSZktDa2dlMzBLZlRzS1kyNHVjSEp2ZEc5MGVYQmxMbUpsWm05eVpWTjBZWEowWHlBOUlHTnVMbkJ5YjNSdmRIbHdaUzVqYjNCNVUyRnRjR3hsVm1Gc2RXVmZPd3BqYmk1d2NtOTBiM1I1Y0dVdVlXWjBaWEpGYm1SZklEMGdZMjR1Y0hKdmRHOTBlWEJsTG1OdmNIbFRZVzF3YkdWV1lXeDFaVjg3Q25aaGNpQlFhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDd2diaXdnYVNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZDJWcFoyaDBVSEpsZGlBOUlDMHdMQ0IwYUdsekxsOXZabVp6WlhSUWNtVjJJRDBnTFRBc0lIUm9hWE11WDNkbGFXZG9kRTVsZUhRZ1BTQXRNQ3dnZEdocGN5NWZiMlptYzJWMFRtVjRkQ0E5SUMwd0xDQjBhR2x6TGtSbFptRjFiSFJUWlhSMGFXNW5jMThnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WkdsdVoxTjBZWEowT2lCTmFTd0tJQ0FnSUNBZ0lDQWdJQ0FnWlc1a2FXNW5SVzVrT2lCTmFRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuWmhiRU5vWVc1blpXUmZLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWNHRnlZVzFsZEdWeVVHOXphWFJwYjI1ekxDQnlJRDBnWlNBdElESXNJRzhnUFNCbElDc2dNU3dnWVNBOUlHbGJjbDBzSUd3Z1BTQnBXMjlkT3dvZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNCMmIybGtJREFwSUhOM2FYUmphQ2gwYUdsekxtZGxkRk5sZEhScGJtZHpYeWdwTG1WdVpHbHVaMU4wWVhKMEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQmlhVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElnUFNCbExDQmhJRDBnTWlBcUlIUWdMU0J1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdUM002Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5SUQwZ2FTNXNaVzVuZEdnZ0xTQXlMQ0JoSUQwZ2RDQXJJR2xiY2wwZ0xTQnBXM0lnS3lBeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlJR1VzSUdFZ1BTQnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2JDQTlQVDBnZG05cFpDQXdLU0J6ZDJsMFkyZ29kR2hwY3k1blpYUlRaWFIwYVc1bmMxOG9LUzVsYm1ScGJtZEZibVFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUdKcE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJR1VzSUd3Z1BTQXlJQ29nYmlBdElIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCUGN6b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0F4TENCc0lEMGdiaUFySUdsYk1WMGdMU0JwV3pCZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdaU0F0SURFc0lHd2dQU0IwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUNodUlDMGdkQ2tnS2lBdU5Td2dhQ0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxPd29nSUNBZ0lDQWdJSFJvYVhNdVgzZGxhV2RvZEZCeVpYWWdQU0JqSUM4Z0tIUWdMU0JoS1N3Z2RHaHBjeTVmZDJWcFoyaDBUbVY0ZENBOUlHTWdMeUFvYkNBdElHNHBMQ0IwYUdsekxsOXZabVp6WlhSUWNtVjJJRDBnY2lBcUlHZ3NJSFJvYVhNdVgyOW1abk5sZEU1bGVIUWdQU0J2SUNvZ2FEc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWNHOXNZWFJsWHlobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBhR2x6TG5KbGMzVnNkRUoxWm1abGNpd2dieUE5SUhSb2FYTXVjMkZ0Y0d4bFZtRnNkV1Z6TENCaElEMGdkR2hwY3k1MllXeDFaVk5wZW1Vc0lHd2dQU0JsSUNvZ1lTd2dZeUE5SUd3Z0xTQmhMQ0JvSUQwZ2RHaHBjeTVmYjJabWMyVjBVSEpsZGl3Z2RTQTlJSFJvYVhNdVgyOW1abk5sZEU1bGVIUXNJR1FnUFNCMGFHbHpMbDkzWldsbmFIUlFjbVYyTENCbUlEMGdkR2hwY3k1ZmQyVnBaMmgwVG1WNGRDd2diU0E5SUNodUlDMGdkQ2tnTHlBb2FTQXRJSFFwTENCNElEMGdiU0FxSUcwc0lIWWdQU0I0SUNvZ2JTd2daeUE5SUMxa0lDb2dkaUFySURJZ0tpQmtJQ29nZUNBdElHUWdLaUJ0TENCd0lEMGdLREVnS3lCa0tTQXFJSFlnS3lBb0xURXVOU0F0SURJZ0tpQmtLU0FxSUhnZ0t5QW9MUzQxSUNzZ1pDa2dLaUJ0SUNzZ01Td2dYeUE5SUNndE1TQXRJR1lwSUNvZ2RpQXJJQ2d4TGpVZ0t5Qm1LU0FxSUhnZ0t5QXVOU0FxSUcwc0lIa2dQU0JtSUNvZ2RpQXRJR1lnS2lCNE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lpQTlJREE3SUdJZ0lUMDlJR0U3SUNzcllpbHlXMkpkSUQwZ1p5QXFJRzliYUNBcklHSmRJQ3NnY0NBcUlHOWJZeUFySUdKZElDc2dYeUFxSUc5YmJDQXJJR0pkSUNzZ2VTQXFJRzliZFNBcklHSmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlPd29nSUNBZ2ZRcDlMQ0JPWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWTI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2FTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuQnZiR0YwWlY4b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1eVpYTjFiSFJDZFdabVpYSXNJRzhnUFNCMGFHbHpMbk5oYlhCc1pWWmhiSFZsY3l3Z1lTQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnNJRDBnWlNBcUlHRXNJR01nUFNCc0lDMGdZU3dnYUNBOUlDaHVJQzBnZENrZ0x5QW9hU0F0SUhRcExDQjFJRDBnTVNBdElHZzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmtJRDBnTURzZ1pDQWhQVDBnWVRzZ0t5dGtLWEpiWkYwZ1BTQnZXMk1nS3lCa1hTQXFJSFVnS3lCdlcyd2dLeUJrWFNBcUlHZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISTdDaUFnSUNCOUNuMHNJRWxvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJqYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWNHOXNZWFJsWHlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5d2VWTmhiWEJzWlZaaGJIVmxYeWhsSUMwZ01TazdDaUFnSUNCOUNuMHNJSHAwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVNsN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlIWnZhV1FnTUNrZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQjBjbUZqYXlCdVlXMWxJR2x6SUhWdVpHVm1hVzVsWkNJcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQjJiMmxrSURBZ2ZId2dkQzVzWlc1bmRHZ2dQVDA5SURBcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dibThnYTJWNVpuSmhiV1Z6SUdsdUlIUnlZV05ySUc1aGJXVmtJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0JsTENCMGFHbHpMblJwYldWeklEMGdXbVV1WTI5dWRtVnlkRUZ5Y21GNUtIUXNJSFJvYVhNdVZHbHRaVUoxWm1abGNsUjVjR1VwTENCMGFHbHpMblpoYkhWbGN5QTlJRnBsTG1OdmJuWmxjblJCY25KaGVTaHVMQ0IwYUdsekxsWmhiSFZsUW5WbVptVnlWSGx3WlNrc0lIUm9hWE11YzJWMFNXNTBaWEp3YjJ4aGRHbHZiaWhwSUh4OElIUm9hWE11UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0cE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbU52Ym5OMGNuVmpkRzl5TENCdU93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG5SdlNsTlBUaUFoUFQwZ2RHaHBjeTUwYjBwVFQwNHBJRzRnUFNCMExuUnZTbE5QVGlobEtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiaUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJR1V1Ym1GdFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnBiV1Z6T2lCYVpTNWpiMjUyWlhKMFFYSnlZWGtvWlM1MGFXMWxjeXdnUVhKeVlYa3BMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdWek9pQmFaUzVqYjI1MlpYSjBRWEp5WVhrb1pTNTJZV3gxWlhNc0lFRnljbUY1S1FvZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdVoyVjBTVzUwWlhKd2IyeGhkR2x2YmlncE93b2dJQ0FnSUNBZ0lDQWdJQ0JwSUNFOVBTQmxMa1JsWm1GMWJIUkpiblJsY25CdmJHRjBhVzl1SUNZbUlDaHVMbWx1ZEdWeWNHOXNZWFJwYjI0Z1BTQnBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1ZEhsd1pTQTlJR1V1Vm1Gc2RXVlVlWEJsVG1GdFpTd2dianNLSUNBZ0lIMEtJQ0FnSUVsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRVJwYzJOeVpYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFbG9LSFJvYVhNdWRHbHRaWE1zSUhSb2FYTXVkbUZzZFdWekxDQjBhR2x6TG1kbGRGWmhiSFZsVTJsNlpTZ3BMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lFbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkV4cGJtVmhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5Qk9ZU2gwYUdsekxuUnBiV1Z6TENCMGFHbHpMblpoYkhWbGN5d2dkR2hwY3k1blpYUldZV3gxWlZOcGVtVW9LU3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQkpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSVGJXOXZkR2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVR2dvZEdocGN5NTBhVzFsY3l3Z2RHaHBjeTUyWVd4MVpYTXNJSFJvYVhNdVoyVjBWbUZzZFdWVGFYcGxLQ2tzSUdVcE93b2dJQ0FnZlFvZ0lDQWdjMlYwU1c1MFpYSndiMnhoZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUTdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tHVXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJSHB6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIUm9hWE11U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtSR2x6WTNKbGRHVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCVmN6b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0IwYUdsekxrbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkV4cGJtVmhjanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElIbHZPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1UyMXZiM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNBaWRXNXpkWEJ3YjNKMFpXUWdhVzUwWlhKd2IyeGhkR2x2YmlCbWIzSWdJaUFySUhSb2FYTXVWbUZzZFdWVWVYQmxUbUZ0WlNBcklDSWdhMlY1Wm5KaGJXVWdkSEpoWTJzZ2JtRnRaV1FnSWlBcklIUm9hWE11Ym1GdFpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFnUFQwOUlIWnZhV1FnTUNrZ2FXWWdLR1VnSVQwOUlIUm9hWE11UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0cElIUm9hWE11YzJWMFNXNTBaWEp3YjJ4aGRHbHZiaWgwYUdsekxrUmxabUYxYkhSSmJuUmxjbkJ2YkdGMGFXOXVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9iaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrdGxlV1p5WVcxbFZISmhZMnM2SWl3Z2Jpa3NJSFJvYVhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU55WldGMFpVbHVkR1Z5Y0c5c1lXNTBJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFbHVkR1Z5Y0c5c1lYUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0hSb2FYTXVZM0psWVhSbFNXNTBaWEp3YjJ4aGJuUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJSFJvYVhNdVNXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrUkdselkzSmxkR1U2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlbk03Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZEdocGN5NUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSTWFXNWxZWEk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdWWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZEdocGN5NUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSVGJXOXZkR2c2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdlVzg3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1oyVjBWbUZzZFdWVGFYcGxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuWmhiSFZsY3k1c1pXNW5kR2dnTHlCMGFHbHpMblJwYldWekxteGxibWQwYURzS0lDQWdJSDBLSUNBZ0lITm9hV1owS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZEdsdFpYTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMExteGxibWQwYURzZ2JpQWhQVDBnYVRzZ0t5dHVLWFJiYmwwZ0t6MGdaVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpZMkZzWlNobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5ScGJXVnpPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdJVDA5SUdrN0lDc3JiaWwwVzI1ZElDbzlJR1U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpwYlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuUnBiV1Z6TENCcElEMGdiaTVzWlc1bmRHZ3NJSElnUFNBd0xDQnZJRDBnYVNBdElERTdDaUFnSUNBZ0lDQWdabTl5S0RzZ2NpQWhQVDBnYVNBbUppQnVXM0pkSUR3Z1pUc3BLeXR5T3dvZ0lDQWdJQ0FnSUdadmNpZzdJRzhnSVQwOUlDMHhJQ1ltSUc1YmIxMGdQaUIwT3lrdExXODdDaUFnSUNBZ0lDQWdhV1lnS0NzcmJ5d2djaUFoUFQwZ01DQjhmQ0J2SUNFOVBTQnBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISWdQajBnYnlBbUppQW9ieUE5SUUxaGRHZ3ViV0Y0S0c4c0lERXBMQ0J5SUQwZ2J5QXRJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11WjJWMFZtRnNkV1ZUYVhwbEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkR2x0WlhNZ1BTQmFaUzVoY25KaGVWTnNhV05sS0c0c0lISXNJRzhwTENCMGFHbHpMblpoYkhWbGN5QTlJRnBsTG1GeWNtRjVVMnhwWTJVb2RHaHBjeTUyWVd4MVpYTXNJSElnS2lCaExDQnZJQ29nWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZG1Gc2FXUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBaE1Dd2dkQ0E5SUhSb2FYTXVaMlYwVm1Gc2RXVlRhWHBsS0NrN0NpQWdJQ0FnSUNBZ2RDQXRJRTFoZEdndVpteHZiM0lvZENrZ0lUMDlJREFnSmlZZ0tHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3RsZVdaeVlXMWxWSEpoWTJzNklFbHVkbUZzYVdRZ2RtRnNkV1VnYzJsNlpTQnBiaUIwY21GamF5NGlMQ0IwYUdsektTd2daU0E5SUNFeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11ZEdsdFpYTXNJR2tnUFNCMGFHbHpMblpoYkhWbGN5d2djaUE5SUc0dWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUhJZ1BUMDlJREFnSmlZZ0tHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa3RsZVdaeVlXMWxWSEpoWTJzNklGUnlZV05ySUdseklHVnRjSFI1TGlJc0lIUm9hWE1wTENCbElEMGdJVEVwT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3T3lCaElDRTlQU0J5T3lCaEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUc1YllWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ2JDQTlQU0FpYm5WdFltVnlJaUFtSmlCcGMwNWhUaWhzS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvZ1ZHbHRaU0JwY3lCdWIzUWdZU0IyWVd4cFpDQnVkVzFpWlhJdUlpd2dkR2hwY3l3Z1lTd2diQ2tzSUdVZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2SUNFOVBTQnVkV3hzSUNZbUlHOGdQaUJzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUxaWGxtY21GdFpWUnlZV05yT2lCUGRYUWdiMllnYjNKa1pYSWdhMlY1Y3k0aUxDQjBhR2x6TENCaExDQnNMQ0J2S1N3Z1pTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUd3N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hwSUNFOVBTQjJiMmxrSURBZ0ppWWdXbVV1YVhOVWVYQmxaRUZ5Y21GNUtHa3BLU0JtYjNJb2JHVjBJR0V4SUQwZ01Dd2diREVnUFNCcExteGxibWQwYURzZ1lURWdJVDA5SUd3eE95QXJLMkV4S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnBXMkV4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dselRtRk9LR01wS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUxaWGxtY21GdFpWUnlZV05yT2lCV1lXeDFaU0JwY3lCdWIzUWdZU0IyWVd4cFpDQnVkVzFpWlhJdUlpd2dkR2hwY3l3Z1lURXNJR01wTENCbElEMGdJVEU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLSUNBZ0lHOXdkR2x0YVhwbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdXbVV1WVhKeVlYbFRiR2xqWlNoMGFHbHpMblJwYldWektTd2dkQ0E5SUZwbExtRnljbUY1VTJ4cFkyVW9kR2hwY3k1MllXeDFaWE1wTENCdUlEMGdkR2hwY3k1blpYUldZV3gxWlZOcGVtVW9LU3dnYVNBOUlIUm9hWE11WjJWMFNXNTBaWEp3YjJ4aGRHbHZiaWdwSUQwOVBTQjVieXdnY2lBOUlHVXViR1Z1WjNSb0lDMGdNU3dnYnlBOUlERTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTVRzZ1lTQThJSEk3SUNzcllTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnSVRFc0lHTWdQU0JsVzJGZExDQm9JRDBnWlZ0aElDc2dNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqSUNFOVBTQm9JQ1ltSUNoaElDRTlQU0F4SUh4OElHTWdJVDA5SUdWYk1GMHBLU0JwWmlBb2FTa2diQ0E5SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ1lTQXFJRzRzSUdRZ1BTQjFJQzBnYml3Z1ppQTlJSFVnS3lCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdNRHNnYlNBaFBUMGdianNnS3l0dEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJSFJiZFNBcklHMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDRJQ0U5UFNCMFcyUWdLeUJ0WFNCOGZDQjRJQ0U5UFNCMFcyWWdLeUJ0WFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0lEMGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dFZ0lUMDlJRzhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxXMjlkSUQwZ1pWdGhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkVEVnUFNCaElDb2diaXdnWkRFZ1BTQnZJQ29nYmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWXhJRDBnTURzZ1pqRWdJVDA5SUc0N0lDc3JaakVwZEZ0a01TQXJJR1l4WFNBOUlIUmJkVEVnS3lCbU1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXJLMjg3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVmJiMTBnUFNCbFczSmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFeElEMGdjaUFxSUc0c0lHd3hJRDBnYnlBcUlHNHNJR014SUQwZ01Ec2dZekVnSVQwOUlHNDdJQ3NyWXpFcGRGdHNNU0FySUdNeFhTQTlJSFJiWVRFZ0t5QmpNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDc3JienNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzhnSVQwOUlHVXViR1Z1WjNSb0lEOGdLSFJvYVhNdWRHbHRaWE1nUFNCYVpTNWhjbkpoZVZOc2FXTmxLR1VzSURBc0lHOHBMQ0IwYUdsekxuWmhiSFZsY3lBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvZEN3Z01Dd2dieUFxSUc0cEtTQTZJQ2gwYUdsekxuUnBiV1Z6SUQwZ1pTd2dkR2hwY3k1MllXeDFaWE1nUFNCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ1dtVXVZWEp5WVhsVGJHbGpaU2gwYUdsekxuUnBiV1Z6TENBd0tTd2dkQ0E5SUZwbExtRnljbUY1VTJ4cFkyVW9kR2hwY3k1MllXeDFaWE1zSURBcExDQnVJRDBnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaXdnYVNBOUlHNWxkeUJ1S0hSb2FYTXVibUZ0WlN3Z1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2t1WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFnUFNCMGFHbHpMbU55WldGMFpVbHVkR1Z5Y0c5c1lXNTBMQ0JwT3dvZ0lDQWdmUXA5T3dwNmRDNXdjbTkwYjNSNWNHVXVWR2x0WlVKMVptWmxjbFI1Y0dVZ1BTQkdiRzloZERNeVFYSnlZWGs3Q25wMExuQnliM1J2ZEhsd1pTNVdZV3gxWlVKMVptWmxjbFI1Y0dVZ1BTQkdiRzloZERNeVFYSnlZWGs3Q25wMExuQnliM1J2ZEhsd1pTNUVaV1poZFd4MFNXNTBaWEp3YjJ4aGRHbHZiaUE5SUZWek93cDJZWElnVVc0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhwMElIc0tmVHNLVVc0dWNISnZkRzkwZVhCbExsWmhiSFZsVkhsd1pVNWhiV1VnUFNBaVltOXZiQ0k3Q2xGdUxuQnliM1J2ZEhsd1pTNVdZV3gxWlVKMVptWmxjbFI1Y0dVZ1BTQkJjbkpoZVRzS1VXNHVjSEp2ZEc5MGVYQmxMa1JsWm1GMWJIUkpiblJsY25CdmJHRjBhVzl1SUQwZ2VuTTdDbEZ1TG5CeWIzUnZkSGx3WlM1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJNYVc1bFlYSWdQU0IyYjJsa0lEQTdDbEZ1TG5CeWIzUnZkSGx3WlM1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJUYlc5dmRHZ2dQU0IyYjJsa0lEQTdDblpoY2lCQ1lTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2VuUWdld3A5T3dwQ1lTNXdjbTkwYjNSNWNHVXVWbUZzZFdWVWVYQmxUbUZ0WlNBOUlDSmpiMnh2Y2lJN0NuWmhjaUJCY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nZW5RZ2V3cDlPd3BCY2k1d2NtOTBiM1I1Y0dVdVZtRnNkV1ZVZVhCbFRtRnRaU0E5SUNKdWRXMWlaWElpT3dwMllYSWdSR2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJR051SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXNJRzRzSUdrcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKd2IyeGhkR1ZmS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE11Y21WemRXeDBRblZtWm1WeUxDQnZJRDBnZEdocGN5NXpZVzF3YkdWV1lXeDFaWE1zSUdFZ1BTQjBhR2x6TG5aaGJIVmxVMmw2WlN3Z2JDQTlJQ2h1SUMwZ2RDa2dMeUFvYVNBdElIUXBMQ0JqSUQwZ1pTQXFJR0U3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ1l5QXJJR0U3SUdNZ0lUMDlJR2c3SUdNZ0t6MGdOQ2xuZEM1emJHVnljRVpzWVhRb2Npd2dNQ3dnYnl3Z1l5QXRJR0VzSUc4c0lHTXNJR3dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5T3dvZ0lDQWdmUXA5TENCWGFTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2VuUWdld29nSUNBZ1NXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrVEdsdVpXRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFUm9LSFJvYVhNdWRHbHRaWE1zSUhSb2FYTXVkbUZzZFdWekxDQjBhR2x6TG1kbGRGWmhiSFZsVTJsNlpTZ3BMQ0JsS1RzS0lDQWdJSDBLZlRzS1Yya3VjSEp2ZEc5MGVYQmxMbFpoYkhWbFZIbHdaVTVoYldVZ1BTQWljWFZoZEdWeWJtbHZiaUk3Q2xkcExuQnliM1J2ZEhsd1pTNUVaV1poZFd4MFNXNTBaWEp3YjJ4aGRHbHZiaUE5SUZWek93cFhhUzV3Y205MGIzUjVjR1V1U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtVMjF2YjNSb0lEMGdkbTlwWkNBd093cDJZWElnUzI0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhwMElIc0tmVHNLUzI0dWNISnZkRzkwZVhCbExsWmhiSFZsVkhsd1pVNWhiV1VnUFNBaWMzUnlhVzVuSWpzS1MyNHVjSEp2ZEc5MGVYQmxMbFpoYkhWbFFuVm1abVZ5Vkhsd1pTQTlJRUZ5Y21GNU93cExiaTV3Y205MGIzUjVjR1V1UkdWbVlYVnNkRWx1ZEdWeWNHOXNZWFJwYjI0Z1BTQjZjenNLUzI0dWNISnZkRzkwZVhCbExrbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkV4cGJtVmhjaUE5SUhadmFXUWdNRHNLUzI0dWNISnZkRzkwZVhCbExrbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkZOdGIyOTBhQ0E5SUhadmFXUWdNRHNLZG1GeUlFTnlJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjZkQ0I3Q24wN0NrTnlMbkJ5YjNSdmRIbHdaUzVXWVd4MVpWUjVjR1ZPWVcxbElEMGdJblpsWTNSdmNpSTdDblpoY2lCTWNpQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBdE1Td2diaXdnYVNBOUlIVmhLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNCbExDQjBhR2x6TG5SeVlXTnJjeUE5SUc0c0lIUm9hWE11WkhWeVlYUnBiMjRnUFNCMExDQjBhR2x6TG1Kc1pXNWtUVzlrWlNBOUlHa3NJSFJvYVhNdWRYVnBaQ0E5SUVWMEtDa3NJSFJvYVhNdVpIVnlZWFJwYjI0Z1BDQXdJQ1ltSUhSb2FYTXVjbVZ6WlhSRWRYSmhkR2x2YmlncE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklIQmhjbk5sS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRMQ0J1SUQwZ1pTNTBjbUZqYTNNc0lHa2dQU0F4SUM4Z0tHVXVabkJ6SUh4OElERXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBc0lHRWdQU0J1TG14bGJtZDBhRHNnYnlBaFBUMGdZVHNnS3l0dktYUXVjSFZ6YUNoaGVTaHVXMjlkS1M1elkyRnNaU2hwS1NrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dkR2hwY3lobExtNWhiV1VzSUdVdVpIVnlZWFJwYjI0c0lIUXNJR1V1WW14bGJtUk5iMlJsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2k1MWRXbGtJRDBnWlM1MWRXbGtMQ0J5T3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhTd2diaUE5SUdVdWRISmhZMnR6TENCcElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUJsTG01aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSMWNtRjBhVzl1T2lCbExtUjFjbUYwYVc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GamEzTTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVjFhV1E2SUdVdWRYVnBaQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1lteGxibVJOYjJSbE9pQmxMbUpzWlc1a1RXOWtaUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUc0dWJHVnVaM1JvT3lCeUlDRTlQU0J2T3lBckszSXBkQzV3ZFhOb0tIcDBMblJ2U2xOUFRpaHVXM0pkS1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1EzSmxZWFJsUm5KdmJVMXZjbkJvVkdGeVoyVjBVMlZ4ZFdWdVkyVW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEM1c1pXNW5kR2dzSUc4Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd095QmhJRHdnY2pzZ1lTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCYlhTd2dZeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JzTG5CMWMyZ29LR0VnS3lCeUlDMGdNU2tnSlNCeUxDQmhMQ0FvWVNBcklERXBJQ1VnY2lrc0lHTXVjSFZ6YUNnd0xDQXhMQ0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmFaUzVuWlhSTFpYbG1jbUZ0WlU5eVpHVnlLR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNJRDBnV21VdWMyOXlkR1ZrUVhKeVlYa29iQ3dnTVN3Z2FDa3NJR01nUFNCYVpTNXpiM0owWldSQmNuSmhlU2hqTENBeExDQm9LU3dnSVdrZ0ppWWdiRnN3WFNBOVBUMGdNQ0FtSmlBb2JDNXdkWE5vS0hJcExDQmpMbkIxYzJnb1kxc3dYU2twTENCdkxuQjFjMmdvYm1WM0lFRnlLQ0l1Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5SWdLeUIwVzJGZExtNWhiV1VnS3lBaVhTSXNJR3dzSUdNcExuTmpZV3hsS0RFZ0x5QnVLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeWhsTENBdE1Td2dieWs3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm1sdVpFSjVUbUZ0WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsT3dvZ0lDQWdJQ0FnSUdsbUlDZ2hRWEp5WVhrdWFYTkJjbkpoZVNobEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVN0NpQWdJQ0FnSUNBZ0lDQWdJRzRnUFNCcExtZGxiMjFsZEhKNUlDWW1JR2t1WjJWdmJXVjBjbmt1WVc1cGJXRjBhVzl1Y3lCOGZDQnBMbUZ1YVcxaGRHbHZibk03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVRFZ1BTQXdPeUJwTVNBOElHNHViR1Z1WjNSb095QnBNU3NyS1dsbUlDaHVXMmt4WFM1dVlXMWxJRDA5UFNCMEtTQnlaWFIxY200Z2JsdHBNVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1EzSmxZWFJsUTJ4cGNITkdjbTl0VFc5eWNHaFVZWEpuWlhSVFpYRjFaVzVqWlhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2UzMHNJSElnUFNBdlhpaGJYSGN0WFNvL0tTaGJYR1JkS3lra0x6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3TENCc0lEMGdaUzVzWlc1bmRHZzdJR0VnUENCc095QmhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHVmJZVjBzSUdnZ1BTQmpMbTVoYldVdWJXRjBZMmdvY2lrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNob0lDWW1JR2d1YkdWdVozUm9JRDRnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCb1d6RmRMQ0JrSUQwZ2FWdDFYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1FnZkh3Z0tHbGJkVjBnUFNCa0lEMGdXMTBwTENCa0xuQjFjMmdvWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFeElHbHVJR2twYnk1d2RYTm9LSFJvYVhNdVEzSmxZWFJsUm5KdmJVMXZjbkJvVkdGeVoyVjBVMlZ4ZFdWdVkyVW9ZVEVzSUdsYllURmRMQ0IwTENCdUtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHODdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjR0Z5YzJWQmJtbHRZWFJwYjI0b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDZ2haU2tnY21WMGRYSnVJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtGdWFXMWhkR2x2YmtOc2FYQTZJRTV2SUdGdWFXMWhkR2x2YmlCcGJpQktVMDlPVEc5aFpHVnlJR1JoZEdFdUlpa3NJRzUxYkd3N0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbWRXNWpkR2x2YmloMUxDQmtMQ0JtTENCdExDQjRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2htTG14bGJtZDBhQ0FoUFQwZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQmJYU3dnWnlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXbVV1Wm14aGRIUmxia3BUVDA0b1ppd2dkaXdnWnl3Z2JTa3NJSFl1YkdWdVozUm9JQ0U5UFNBd0lDWW1JSGd1Y0hWemFDaHVaWGNnZFNoa0xDQjJMQ0JuS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TENCcElEMGdXMTBzSUhJZ1BTQmxMbTVoYldVZ2ZId2dJbVJsWm1GMWJIUWlMQ0J2SUQwZ1pTNW1jSE1nZkh3Z016QXNJR0VnUFNCbExtSnNaVzVrVFc5a1pTd2diQ0E5SUdVdWJHVnVaM1JvSUh4OElDMHhMQ0JqSUQwZ1pTNW9hV1Z5WVhKamFIa2dmSHdnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMUlEMGdNRHNnZFNBOElHTXViR1Z1WjNSb095QjFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlHTmJkVjB1YTJWNWN6c0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRW9JV1FnZkh3Z1pDNXNaVzVuZEdnZ1BUMDlJREFwS1NCcFppQW9aRnN3WFM1dGIzSndhRlJoY21kbGRITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdlMzBzSUcwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iU0E5SURBN0lHMGdQQ0JrTG14bGJtZDBhRHNnYlNzcktXbG1JQ2hrVzIxZExtMXZjbkJvVkdGeVoyVjBjeWtnWm05eUtHeGxkQ0I0SUQwZ01Ec2dlQ0E4SUdSYmJWMHViVzl5Y0doVVlYSm5aWFJ6TG14bGJtZDBhRHNnZUNzcktXWmJaRnR0WFM1dGIzSndhRlJoY21kbGRITmJlRjFkSUQwZ0xURTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ3hJR2x1SUdZcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdXMTBzSUdjZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUNFOVBTQmtXMjFkTG0xdmNuQm9WR0Z5WjJWMGN5NXNaVzVuZEdnN0lDc3JjQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdaRnR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGk1d2RYTm9LRjh1ZEdsdFpTa3NJR2N1Y0hWemFDaGZMbTF2Y25Cb1ZHRnlaMlYwSUQwOVBTQjRNU0EvSURFZ09pQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzV3ZFhOb0tHNWxkeUJCY2lnaUxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxXeUlnS3lCNE1TQXJJQ0pkSWl3Z2Rpd2daeWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkNBOUlHWXViR1Z1WjNSb0lDb2dLRzhnZkh3Z01TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pqRWdQU0FpTG1KdmJtVnpXeUlnS3lCMFczVmRMbTVoYldVZ0t5QWlYU0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1S0VOeUxDQm1NU0FySUNJdWNHOXphWFJwYjI0aUxDQmtMQ0FpY0c5eklpd2dhU2tzSUc0b1Yya3NJR1l4SUNzZ0lpNXhkV0YwWlhKdWFXOXVJaXdnWkN3Z0luSnZkQ0lzSUdrcExDQnVLRU55TENCbU1TQXJJQ0l1YzJOaGJHVWlMQ0JrTENBaWMyTnNJaXdnYVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2t1YkdWdVozUm9JRDA5UFNBd0lEOGdiblZzYkNBNklHNWxkeUIwYUdsektISXNJR3dzSUdrc0lHRXBPd29nSUNBZ2ZRb2dJQ0FnY21WelpYUkVkWEpoZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdWRISmhZMnR6TENCMElEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnWlM1c1pXNW5kR2c3SUc0Z0lUMDlJR2s3SUNzcmJpbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5NTBjbUZqYTNOYmJsMDdDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQk5ZWFJvTG0xaGVDaDBMQ0J5TG5ScGJXVnpXM0l1ZEdsdFpYTXViR1Z1WjNSb0lDMGdNVjBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtkWEpoZEdsdmJpQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21sdEtDa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaU0E5SURBN0lHVWdQQ0IwYUdsekxuUnlZV05yY3k1c1pXNW5kR2c3SUdVckt5bDBhR2x6TG5SeVlXTnJjMXRsWFM1MGNtbHRLREFzSUhSb2FYTXVaSFZ5WVhScGIyNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RtRnNhV1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnZEdocGN5NTBjbUZqYTNNdWJHVnVaM1JvT3lCMEt5c3BaU0E5SUdVZ0ppWWdkR2hwY3k1MGNtRmphM05iZEYwdWRtRnNhV1JoZEdVb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS0lDQWdJRzl3ZEdsdGFYcGxLQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQTdJR1VnUENCMGFHbHpMblJ5WVdOcmN5NXNaVzVuZEdnN0lHVXJLeWwwYUdsekxuUnlZV05yYzF0bFhTNXZjSFJwYldsNlpTZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dkR2hwY3k1MGNtRmphM011YkdWdVozUm9PeUIwS3lzcFpTNXdkWE5vS0hSb2FYTXVkSEpoWTJ0elczUmRMbU5zYjI1bEtDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxtNWhiV1VzSUhSb2FYTXVaSFZ5WVhScGIyNHNJR1VzSUhSb2FYTXVZbXhsYm1STmIyUmxLVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaTUwYjBwVFQwNG9kR2hwY3lrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlHOTVLSE1wSUhzS0lDQWdJSE4zYVhSamFDaHpMblJ2VEc5M1pYSkRZWE5sS0NrcGV3b2dJQ0FnSUNBZ0lHTmhjMlVnSW5OallXeGhjaUk2Q2lBZ0lDQWdJQ0FnWTJGelpTQWlaRzkxWW14bElqb0tJQ0FnSUNBZ0lDQmpZWE5sSUNKbWJHOWhkQ0k2Q2lBZ0lDQWdJQ0FnWTJGelpTQWliblZ0WW1WeUlqb0tJQ0FnSUNBZ0lDQmpZWE5sSUNKcGJuUmxaMlZ5SWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFRnlPd29nSUNBZ0lDQWdJR05oYzJVZ0luWmxZM1J2Y2lJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpZG1WamRHOXlNaUk2Q2lBZ0lDQWdJQ0FnWTJGelpTQWlkbVZqZEc5eU15STZDaUFnSUNBZ0lDQWdZMkZ6WlNBaWRtVmpkRzl5TkNJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkRjanNLSUNBZ0lDQWdJQ0JqWVhObElDSmpiMnh2Y2lJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkNZVHNLSUNBZ0lDQWdJQ0JqWVhObElDSnhkV0YwWlhKdWFXOXVJam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZkcE93b2dJQ0FnSUNBZ0lHTmhjMlVnSW1KdmIyd2lPZ29nSUNBZ0lDQWdJR05oYzJVZ0ltSnZiMnhsWVc0aU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVVzQ3Q2lBZ0lDQWdJQ0FnWTJGelpTQWljM1J5YVc1bklqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRXR1T3dvZ0lDQWdmUW9nSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQlZibk4xY0hCdmNuUmxaQ0IwZVhCbFRtRnRaVG9nSWlBcklITXBPd3A5Q21aMWJtTjBhVzl1SUdGNUtITXBJSHNLSUNBZ0lHbG1JQ2h6TG5SNWNHVWdQVDA5SUhadmFXUWdNQ2tnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ0pVU0ZKRlJTNUxaWGxtY21GdFpWUnlZV05yT2lCMGNtRmpheUIwZVhCbElIVnVaR1ZtYVc1bFpDd2dZMkZ1SUc1dmRDQndZWEp6WlNJcE93b2dJQ0FnYkdWMElHVWdQU0J2ZVNoekxuUjVjR1VwT3dvZ0lDQWdhV1lnS0hNdWRHbHRaWE1nUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMHNJRzRnUFNCYlhUc0tJQ0FnSUNBZ0lDQmFaUzVtYkdGMGRHVnVTbE5QVGloekxtdGxlWE1zSUhRc0lHNHNJQ0oyWVd4MVpTSXBMQ0J6TG5ScGJXVnpJRDBnZEN3Z2N5NTJZV3gxWlhNZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJR1V1Y0dGeWMyVWdJVDA5SUhadmFXUWdNQ0EvSUdVdWNHRnljMlVvY3lrZ09pQnVaWGNnWlNoekxtNWhiV1VzSUhNdWRHbHRaWE1zSUhNdWRtRnNkV1Z6TENCekxtbHVkR1Z5Y0c5c1lYUnBiMjRwT3dwOUNuWmhjaUJPYVNBOUlIc0tJQ0FnSUdWdVlXSnNaV1E2SUNFeExBb2dJQ0FnWm1sc1pYTTZJSHQ5TEFvZ0lDQWdZV1JrT2lCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWxibUZpYkdWa0lDRTlQU0FoTVNBbUppQW9kR2hwY3k1bWFXeGxjMXR6WFNBOUlHVXBPd29nSUNBZ2ZTd0tJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1WdVlXSnNaV1FnSVQwOUlDRXhLU0J5WlhSMWNtNGdkR2hwY3k1bWFXeGxjMXR6WFRzS0lDQWdJSDBzQ2lBZ0lDQnlaVzF2ZG1VNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwY3k1bWFXeGxjMXR6WFRzS0lDQWdJSDBzQ2lBZ0lDQmpiR1ZoY2pvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1bWFXeGxjeUE5SUh0OU93b2dJQ0FnZlFwOUxDQjZZU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3l3Z2NpQTlJQ0V4TENCdklEMGdNQ3dnWVNBOUlEQXNJR3dzSUdNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0IwYUdsekxtOXVVM1JoY25RZ1BTQjJiMmxrSURBc0lIUm9hWE11YjI1TWIyRmtJRDBnWlN3Z2RHaHBjeTV2YmxCeWIyZHlaWE56SUQwZ2RDd2dkR2hwY3k1dmJrVnljbTl5SUQwZ2Jpd2dkR2hwY3k1cGRHVnRVM1JoY25RZ1BTQm1kVzVqZEdsdmJpaG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXJLeXdnY2lBOVBUMGdJVEVnSmlZZ2FTNXZibE4wWVhKMElDRTlQU0IyYjJsa0lEQWdKaVlnYVM1dmJsTjBZWEowS0dnc0lHOHNJR0VwTENCeUlEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVwZEdWdFJXNWtJRDBnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2S3lzc0lHa3ViMjVRY205bmNtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3ViMjVRY205bmNtVnpjeWhvTENCdkxDQmhLU3dnYnlBOVBUMGdZU0FtSmlBb2NpQTlJQ0V4TENCcExtOXVURzloWkNBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YjI1TWIyRmtLQ2twT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YVhSbGJVVnljbTl5SUQwZ1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcExtOXVSWEp5YjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG05dVJYSnliM0lvYUNrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1eVpYTnZiSFpsVlZKTUlEMGdablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JDQS9JR3dvYUNrZ09pQm9Pd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjMlYwVlZKTVRXOWthV1pwWlhJZ1BTQm1kVzVqZEdsdmJpaG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCc0lEMGdhQ3dnZEdocGN6c0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtRmtaRWhoYm1Sc1pYSWdQU0JtZFc1amRHbHZiaWhvTENCMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqTG5CMWMyZ29hQ3dnZFNrc0lIUm9hWE03Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV5WlcxdmRtVklZVzVrYkdWeUlEMGdablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHTXVhVzVrWlhoUFppaG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhVZ0lUMDlJQzB4SUNZbUlHTXVjM0JzYVdObEtIVXNJRElwTENCMGFHbHpPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwU0dGdVpHeGxjaUE5SUdaMWJtTjBhVzl1S0dncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxSUQwZ01Dd2daQ0E5SUdNdWJHVnVaM1JvT3lCMUlEd2daRHNnZFNBclBTQXlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdZMXQxWFN3Z2JTQTlJR05iZFNBcklERmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dZdVoyeHZZbUZzSUNZbUlDaG1MbXhoYzNSSmJtUmxlQ0E5SURBcExDQm1MblJsYzNRb2FDa3BJSEpsZEhWeWJpQnRPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q24wc0lHeDVJRDBnYm1WM0lIcGhMQ0JpZENBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lIUm9hWE11YldGdVlXZGxjaUE5SUdVZ0lUMDlJSFp2YVdRZ01DQS9JR1VnT2lCc2VTd2dkR2hwY3k1amNtOXpjMDl5YVdkcGJpQTlJQ0poYm05dWVXMXZkWE1pTENCMGFHbHpMbmRwZEdoRGNtVmtaVzUwYVdGc2N5QTlJQ0V4TENCMGFHbHpMbkJoZEdnZ1BTQWlJaXdnZEdocGN5NXlaWE52ZFhKalpWQmhkR2dnUFNBaUlpd2dkR2hwY3k1eVpYRjFaWE4wU0dWaFpHVnlJRDBnZTMwN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0NrZ2UzMEtJQ0FnSUd4dllXUkJjM2x1WXlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2YldselpTaG1kVzVqZEdsdmJpaHBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRzR1Ykc5aFpDaGxMQ0JwTENCMExDQnlLVHNLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sS0NrZ2UzMEtJQ0FnSUhObGRFTnliM056VDNKcFoybHVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpjbTl6YzA5eWFXZHBiaUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlhhWFJvUTNKbFpHVnVkR2xoYkhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5kcGRHaERjbVZrWlc1MGFXRnNjeUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlFZWFJvS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3WVhSb0lEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZKbGMyOTFjbU5sVUdGMGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtVnpiM1Z5WTJWUVlYUm9JRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGSmxjWFZsYzNSSVpXRmtaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFwOUxDQjBiaUE5SUh0OUxDQlpkQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQmxJRDA5UFNCMmIybGtJREFnSmlZZ0tHVWdQU0FpSWlrc0lIUm9hWE11Y0dGMGFDQWhQVDBnZG05cFpDQXdJQ1ltSUNobElEMGdkR2hwY3k1d1lYUm9JQ3NnWlNrc0lHVWdQU0IwYUdsekxtMWhibUZuWlhJdWNtVnpiMngyWlZWU1RDaGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRTVwTG1kbGRDaGxLVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkR2hwY3k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtTd2djMlYwVkdsdFpXOTFkQ2dvS1QwK2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwSUNZbUlIUW9jaWtzSUhSb2FYTXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBzSURBcExDQnlPd29nSUNBZ0lDQWdJR2xtSUNoMGJsdGxYU0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJ1VzJWZExuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjI1TWIyRmtPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjI1UWNtOW5jbVZ6Y3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXVSWEp5YjNJNklHa0tJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkRzViWlYwZ1BTQmJYU3dnZEc1YlpWMHVjSFZ6YUNoN0NpQWdJQ0FnSUNBZ0lDQWdJRzl1VEc5aFpEb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2IyNVFjbTluY21WemN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2IyNUZjbkp2Y2pvZ2FRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdibVYzSUZKbGNYVmxjM1FvWlN3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JvWldGa1pYSnpPaUJ1WlhjZ1NHVmhaR1Z5Y3loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExBb2dJQ0FnSUNBZ0lDQWdJQ0JqY21Wa1pXNTBhV0ZzY3pvZ2RHaHBjeTUzYVhSb1EzSmxaR1Z1ZEdsaGJITWdQeUFpYVc1amJIVmtaU0lnT2lBaWMyRnRaUzF2Y21sbmFXNGlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnWm1WMFkyZ29ieWt1ZEdobGJpZ29ZU2s5UG5zS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dFdWMzUmhkSFZ6SUQwOVBTQXlNREFnZkh3Z1lTNXpkR0YwZFhNZ1BUMDlJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhMbk4wWVhSMWN5QTlQVDBnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa1pwYkdWTWIyRmtaWEk2SUVoVVZGQWdVM1JoZEhWeklEQWdjbVZqWldsMlpXUXVJaWtzSUhSNWNHVnZaaUJTWldGa1lXSnNaVk4wY21WaGJTQStJQ0oxSWlCOGZDQmhMbUp2WkhrdVoyVjBVbVZoWkdWeUlEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQmhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQjBibHRsWFN3Z1l5QTlJR0V1WW05a2VTNW5aWFJTWldGa1pYSW9LU3dnYUNBOUlHRXVhR1ZoWkdWeWN5NW5aWFFvSWtOdmJuUmxiblF0VEdWdVozUm9JaWtzSUhVZ1BTQm9JRDhnY0dGeWMyVkpiblFvYUNrZ09pQXdMQ0JrSUQwZ2RTQWhQVDBnTUN3Z1ppQTlJREFzSUcwZ1BTQnVaWGNnVW1WaFpHRmliR1ZUZEhKbFlXMG9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBJQ2g0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdNdWNtVmhaQ2dwTG5Sb1pXNG9LSHNnWkc5dVpUb2daeUFzSUhaaGJIVmxPaUJ3SUNCOUtUMCtld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2huS1NCNExtTnNiM05sS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1lnS3owZ2NDNWllWFJsVEdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJRzVsZHlCUWNtOW5jbVZ6YzBWMlpXNTBLQ0p3Y205bmNtVnpjeUlzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsYm1kMGFFTnZiWEIxZEdGaWJHVTZJR1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNiMkZrWldRNklHWXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGIzUmhiRG9nZFFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVJRDBnTUN3Z1lpQTlJR3d1YkdWdVozUm9PeUI1SUR3Z1lqc2dlU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQklEMGdiRnQ1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUV1YjI1UWNtOW5jbVZ6Y3lBbUppQkJMbTl1VUhKdlozSmxjM01vWHlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQzVsYm5GMVpYVmxLSEFwTENCMktDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVbVZ6Y0c5dWMyVW9iU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCMGFISnZkeUJGY25KdmNpaGdabVYwWTJnZ1ptOXlJQ0lrZTJFdWRYSnNmU0lnY21WemNHOXVaR1ZrSUhkcGRHZ2dKSHRoTG5OMFlYUjFjMzA2SUNSN1lTNXpkR0YwZFhOVVpYaDBmV0FwT3dvZ0lDQWdJQ0FnSUgwcExuUm9aVzRvS0dFcFBUNTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwYUdsekxuSmxjM0J2Ym5ObFZIbHdaU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmhjbkpoZVdKMVptWmxjaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFdVlYSnlZWGxDZFdabVpYSW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltSnNiMklpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaExtSnNiMklvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbVJ2WTNWdFpXNTBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVM1MFpYaDBLQ2t1ZEdobGJpZ29iQ2s5UG01bGR5QkVUMDFRWVhKelpYSW9LUzV3WVhKelpVWnliMjFUZEhKcGJtY29iQ3dnZEdocGN5NXRhVzFsVkhsd1pTa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWFuTnZiaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFdWFuTnZiaWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVM1MFpYaDBLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlLUzUwYUdWdUtDaGhLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQk9hUzVoWkdRb1pTd2dZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RHNWJaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGJsdGxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNQ3dnYUNBOUlHd3ViR1Z1WjNSb095QmpJRHdnYURzZ1l5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdiRnRqWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdWIyNU1iMkZrSUNZbUlIVXViMjVNYjJGa0tHRXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTa3VZMkYwWTJnb0tHRXBQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RHNWJaVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzSUQwOVBTQjJiMmxrSURBcElIUm9jbTkzSUhSb2FYTXViV0Z1WVdkbGNpNXBkR1Z0UlhKeWIzSW9aU2tzSUdFN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQjBibHRsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTUN3Z2FDQTlJR3d1YkdWdVozUm9PeUJqSUR3Z2FEc2dZeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYkZ0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVXViMjVGY25KdmNpQW1KaUIxTG05dVJYSnliM0lvWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WVc1aFoyVnlMbWwwWlcxRmNuSnZjaWhsS1RzS0lDQWdJQ0FnSUNCOUtTNW1hVzVoYkd4NUtDZ3BQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YldGdVlXZGxjaTVwZEdWdFJXNWtLR1VwT3dvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG0xaGJtRm5aWEl1YVhSbGJWTjBZWEowS0dVcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW1WemNHOXVjMlZVZVhCbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVpYTndiMjV6WlZSNWNHVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRXbHRaVlI1Y0dVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJXVlVlWEJsSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1kza2dQU0JqYkdGemN5QmxlSFJsYm1SeklHSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHOWhaQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMQ0J2SUQwZ2JtVjNJRmwwS0hSb2FYTXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdieTV6WlhSUVlYUm9LSFJvYVhNdWNHRjBhQ2tzSUc4dWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExDQnZMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWgwYUdsekxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrc0lHOHViRzloWkNobExDQm1kVzVqZEdsdmJpaGhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwS0hJdWNHRnljMlVvU2xOUFRpNXdZWEp6WlNoaEtTa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDhnYVNoc0tTQTZJR052Ym5OdmJHVXVaWEp5YjNJb2JDa3NJSEl1YldGdVlXZGxjaTVwZEdWdFJYSnliM0lvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQmxMbXhsYm1kMGFEc2diaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQk1jaTV3WVhKelpTaGxXMjVkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkQzV3ZFhOb0tHa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRHNLSUNBZ0lIMEtmU3dnYUhrZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxDQnZJRDBnVzEwc0lHRWdQU0J1WlhjZ2RtRXNJR3dnUFNCdVpYY2dXWFFvZEdocGN5NXRZVzVoWjJWeUtUc0tJQ0FnSUNBZ0lDQnNMbk5sZEZCaGRHZ29kR2hwY3k1d1lYUm9LU3dnYkM1elpYUlNaWE53YjI1elpWUjVjR1VvSW1GeWNtRjVZblZtWm1WeUlpa3NJR3d1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTENCc0xuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aHlMbmRwZEdoRGNtVmtaVzUwYVdGc2N5azdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQXdPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2dvZFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzTG14dllXUW9aVnQxWFN3Z1puVnVZM1JwYjI0b1pDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQnlMbkJoY25ObEtHUXNJQ0V3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5YmRWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdZdWQybGtkR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCbUxtaGxhV2RvZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0p0WVhRNklHWXVabTl5YldGMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFwY0cxaGNITTZJR1l1Yldsd2JXRndjd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dnWXlBclBTQXhMQ0JqSUQwOVBTQTJJQ1ltSUNobUxtMXBjRzFoY0VOdmRXNTBJRDA5UFNBeElDWW1JQ2hoTG0xcGJrWnBiSFJsY2lBOUlIUjBLU3dnWVM1cGJXRm5aU0E5SUc4c0lHRXVabTl5YldGMElEMGdaaTVtYjNKdFlYUXNJR0V1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnZENBbUppQjBLR0VwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dnYml3Z2FTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLR1VwS1NCbWIzSW9iR1YwSUhVZ1BTQXdMQ0JrSUQwZ1pTNXNaVzVuZEdnN0lIVWdQQ0JrT3lBckszVXBhQ2gxS1RzS0lDQWdJQ0FnSUNCbGJITmxJR3d1Ykc5aFpDaGxMQ0JtZFc1amRHbHZiaWgxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdjaTV3WVhKelpTaDFMQ0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa0xtbHpRM1ZpWlcxaGNDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQmtMbTFwY0cxaGNITXViR1Z1WjNSb0lDOGdaQzV0YVhCdFlYQkRiM1Z1ZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlEQTdJRzBnUENCbU95QnRLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOWJiVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxcGNHMWhjSE02SUZ0ZENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhnZ1BTQXdPeUI0SUR3Z1pDNXRhWEJ0WVhCRGIzVnVkRHNnZUNzcktXOWJiVjB1Yldsd2JXRndjeTV3ZFhOb0tHUXViV2x3YldGd2MxdHRJQ29nWkM1dGFYQnRZWEJEYjNWdWRDQXJJSGhkS1N3Z2IxdHRYUzVtYjNKdFlYUWdQU0JrTG1admNtMWhkQ3dnYjF0dFhTNTNhV1IwYUNBOUlHUXVkMmxrZEdnc0lHOWJiVjB1YUdWcFoyaDBJRDBnWkM1b1pXbG5hSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoTG1sdFlXZGxJRDBnYnpzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHRXVhVzFoWjJVdWQybGtkR2dnUFNCa0xuZHBaSFJvTENCaExtbHRZV2RsTG1obGFXZG9kQ0E5SUdRdWFHVnBaMmgwTENCaExtMXBjRzFoY0hNZ1BTQmtMbTFwY0cxaGNITTdDaUFnSUNBZ0lDQWdJQ0FnSUdRdWJXbHdiV0Z3UTI5MWJuUWdQVDA5SURFZ0ppWWdLR0V1YldsdVJtbHNkR1Z5SUQwZ2RIUXBMQ0JoTG1admNtMWhkQ0E5SUdRdVptOXliV0YwTENCaExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUWdKaVlnZENoaEtUc0tJQ0FnSUNBZ0lDQjlMQ0J1TENCcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lUc0tJQ0FnSUgwS2ZTd2dVbklnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnZlFvZ0lDQWdiRzloWkNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1d1lYUm9JQ0U5UFNCMmIybGtJREFnSmlZZ0tHVWdQU0IwYUdsekxuQmhkR2dnS3lCbEtTd2daU0E5SUhSb2FYTXViV0Z1WVdkbGNpNXlaWE52YkhabFZWSk1LR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUU1cExtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCcFppQW9ieUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtTd2djMlYwVkdsdFpXOTFkQ2htZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0FtSmlCMEtHOHBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUxDQXdLU3dnYnpzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhGektDSnBiV2NpS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCc0tDa2dld29nSUNBZ0lDQWdJQ0FnSUNCb0tDa3NJRTVwTG1Ga1pDaGxMQ0IwYUdsektTd2dkQ0FtSmlCMEtIUm9hWE1wTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZeWgxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2dvS1N3Z2FTQW1KaUJwS0hVcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdhQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZUzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKc2IyRmtJaXdnYkN3Z0lURXBMQ0JoTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltVnljbTl5SWl3Z1l5d2dJVEVwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKc2IyRmtJaXdnYkN3Z0lURXBMQ0JoTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW1WeWNtOXlJaXdnWXl3Z0lURXBMQ0JsTG5OMVluTjBjaWd3TENBMUtTQWhQVDBnSW1SaGRHRTZJaUFtSmlCMGFHbHpMbU55YjNOelQzSnBaMmx1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1WTNKdmMzTlBjbWxuYVc0Z1BTQjBhR2x6TG1OeWIzTnpUM0pwWjJsdUtTd2djaTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1N3Z1lTNXpjbU1nUFNCbExDQmhPd29nSUNBZ2ZRcDlMQ0JHYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCcmFTd2dieUE5SUc1bGR5QlNjaWgwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lHOHVjMlYwUTNKdmMzTlBjbWxuYVc0b2RHaHBjeTVqY205emMwOXlhV2RwYmlrc0lHOHVjMlYwVUdGMGFDaDBhR2x6TG5CaGRHZ3BPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdNRHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJzS0dNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYnk1c2IyRmtLR1ZiWTEwc0lHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEl1YVcxaFoyVnpXMk5kSUQwZ2FDd2dZU3NyTENCaElEMDlQU0EySUNZbUlDaHlMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFFnSmlZZ2RDaHlLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNJSFp2YVdRZ01Dd2dhU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlBOUlEQTdJR01nUENCbExteGxibWQwYURzZ0t5dGpLV3dvWXlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJN0NpQWdJQ0I5Q24wc0lFNW9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnYnlBOUlHNWxkeUJ4Yml3Z1lTQTlJRzVsZHlCWmRDaDBhR2x6TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoTG5ObGRGSmxjM0J2Ym5ObFZIbHdaU2dpWVhKeVlYbGlkV1ptWlhJaUtTd2dZUzV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLSFJvYVhNdWNtVnhkV1Z6ZEVobFlXUmxjaWtzSUdFdWMyVjBVR0YwYUNoMGFHbHpMbkJoZEdncExDQmhMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWh5TG5kcGRHaERjbVZrWlc1MGFXRnNjeWtzSUdFdWJHOWhaQ2hsTENCbWRXNWpkR2x2Ymloc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnY2k1d1lYSnpaU2hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJV01nZkh3Z0tHTXVhVzFoWjJVZ0lUMDlJSFp2YVdRZ01DQS9JRzh1YVcxaFoyVWdQU0JqTG1sdFlXZGxJRG9nWXk1a1lYUmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVhVzFoWjJVdWQybGtkR2dnUFNCakxuZHBaSFJvTENCdkxtbHRZV2RsTG1obGFXZG9kQ0E5SUdNdWFHVnBaMmgwTENCdkxtbHRZV2RsTG1SaGRHRWdQU0JqTG1SaGRHRXBMQ0J2TG5keVlYQlRJRDBnWXk1M2NtRndVeUFoUFQwZ2RtOXBaQ0F3SUQ4Z1l5NTNjbUZ3VXlBNklIWjBMQ0J2TG5keVlYQlVJRDBnWXk1M2NtRndWQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z1l5NTNjbUZ3VkNBNklIWjBMQ0J2TG0xaFowWnBiSFJsY2lBOUlHTXViV0ZuUm1sc2RHVnlJQ0U5UFNCMmIybGtJREFnUHlCakxtMWhaMFpwYkhSbGNpQTZJSFIwTENCdkxtMXBia1pwYkhSbGNpQTlJR011YldsdVJtbHNkR1Z5SUNFOVBTQjJiMmxrSURBZ1B5QmpMbTFwYmtacGJIUmxjaUE2SUhSMExDQnZMbUZ1YVhOdmRISnZjSGtnUFNCakxtRnVhWE52ZEhKdmNIa2dJVDA5SUhadmFXUWdNQ0EvSUdNdVlXNXBjMjkwY205d2VTQTZJREVzSUdNdVpXNWpiMlJwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1bGJtTnZaR2x1WnlBOUlHTXVaVzVqYjJScGJtY3BMQ0JqTG1ac2FYQlpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVabXhwY0ZrZ1BTQmpMbVpzYVhCWktTd2dZeTVtYjNKdFlYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NW1iM0p0WVhRZ1BTQmpMbVp2Y20xaGRDa3NJR011ZEhsd1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuUjVjR1VnUFNCakxuUjVjR1VwTENCakxtMXBjRzFoY0hNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1dGFYQnRZWEJ6SUQwZ1l5NXRhWEJ0WVhCekxDQnZMbTFwYmtacGJIUmxjaUE5SUZWcEtTd2dZeTV0YVhCdFlYQkRiM1Z1ZENBOVBUMGdNU0FtSmlBb2J5NXRhVzVHYVd4MFpYSWdQU0IwZENrc0lHTXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ1l5NW5aVzVsY21GMFpVMXBjRzFoY0hNcExDQnZMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFFnSmlZZ2RDaHZMQ0JqS1NrN0NpQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrc0lHODdDaUFnSUNCOUNuMHNJRUpvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUc5MExDQnZJRDBnYm1WM0lGSnlLSFJvYVhNdWJXRnVZV2RsY2lrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4dWMyVjBRM0p2YzNOUGNtbG5hVzRvZEdocGN5NWpjbTl6YzA5eWFXZHBiaWtzSUc4dWMyVjBVR0YwYUNoMGFHbHpMbkJoZEdncExDQnZMbXh2WVdRb1pTd2dablZ1WTNScGIyNG9ZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlMbWx0WVdkbElEMGdZU3dnY2k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMElDRTlQU0IyYjJsa0lEQWdKaVlnZENoeUtUc0tJQ0FnSUNBZ0lDQjlMQ0J1TENCcEtTd2djanNLSUNBZ0lIMEtmU3dnUW5RZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pNYVdkb2RDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvWlNrc0lIUm9hWE11YVc1MFpXNXphWFI1SUQwZ2REc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3ZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZMjlzYjNJdVkyOXdlU2hsTG1OdmJHOXlLU3dnZEdocGN5NXBiblJsYm5OcGRIa2dQU0JsTG1sdWRHVnVjMmwwZVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCemRYQmxjaTUwYjBwVFQwNG9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YjJKcVpXTjBMbU52Ykc5eUlEMGdkR2hwY3k1amIyeHZjaTVuWlhSSVpYZ29LU3dnZEM1dlltcGxZM1F1YVc1MFpXNXphWFI1SUQwZ2RHaHBjeTVwYm5SbGJuTnBkSGtzSUhSb2FYTXVaM0p2ZFc1a1EyOXNiM0lnSVQwOUlIWnZhV1FnTUNBbUppQW9kQzV2WW1wbFkzUXVaM0p2ZFc1a1EyOXNiM0lnUFNCMGFHbHpMbWR5YjNWdVpFTnZiRzl5TG1kbGRFaGxlQ2dwS1N3Z2RHaHBjeTVrYVhOMFlXNWpaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbTlpYW1WamRDNWthWE4wWVc1alpTQTlJSFJvYVhNdVpHbHpkR0Z1WTJVcExDQjBhR2x6TG1GdVoyeGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUXViMkpxWldOMExtRnVaMnhsSUQwZ2RHaHBjeTVoYm1kc1pTa3NJSFJvYVhNdVpHVmpZWGtnSVQwOUlIWnZhV1FnTUNBbUppQW9kQzV2WW1wbFkzUXVaR1ZqWVhrZ1BTQjBhR2x6TG1SbFkyRjVLU3dnZEdocGN5NXdaVzUxYldKeVlTQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOWlhbVZqZEM1d1pXNTFiV0p5WVNBOUlIUm9hWE11Y0dWdWRXMWljbUVwTENCMGFHbHpMbk5vWVdSdmR5QWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOWlhbVZqZEM1emFHRmtiM2NnUFNCMGFHbHpMbk5vWVdSdmR5NTBiMHBUVDA0b0tTa3NJSFE3Q2lBZ0lDQjlDbjA3Q2tKMExuQnliM1J2ZEhsd1pTNXBjMHhwWjJoMElEMGdJVEE3Q25aaGNpQlZZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnYmlrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa2hsYldsemNHaGxjbVZNYVdkb2RDSXNJSFJvYVhNdWNHOXphWFJwYjI0dVkyOXdlU2hPWlM1RVpXWmhkV3gwVlhBcExDQjBhR2x6TG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0IwYUdsekxtZHliM1Z1WkVOdmJHOXlJRDBnYm1WM0lHRmxLSFFwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVKMExuQnliM1J2ZEhsd1pTNWpiM0I1TG1OaGJHd29kR2hwY3l3Z1pTa3NJSFJvYVhNdVozSnZkVzVrUTI5c2IzSXVZMjl3ZVNobExtZHliM1Z1WkVOdmJHOXlLU3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0tWV0V1Y0hKdmRHOTBlWEJsTG1selNHVnRhWE53YUdWeVpVeHBaMmgwSUQwZ0lUQTdDblpoY2lCZll5QTlJRzVsZHlCd1pTd2dUV01nUFNCdVpYY2dUU3dnWW1NZ1BTQnVaWGNnVFN3Z2JXOGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtTmhiV1Z5WVNBOUlHVXNJSFJvYVhNdVltbGhjeUE5SURBc0lIUm9hWE11Ym05eWJXRnNRbWxoY3lBOUlEQXNJSFJvYVhNdWNtRmthWFZ6SUQwZ01Td2dkR2hwY3k1aWJIVnlVMkZ0Y0d4bGN5QTlJRGdzSUhSb2FYTXViV0Z3VTJsNlpTQTlJRzVsZHlCWUtEVXhNaXdnTlRFeUtTd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG0xaGNGQmhjM01nUFNCdWRXeHNMQ0IwYUdsekxtMWhkSEpwZUNBOUlHNWxkeUJ3WlN3Z2RHaHBjeTVoZFhSdlZYQmtZWFJsSUQwZ0lUQXNJSFJvYVhNdWJtVmxaSE5WY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVmWm5KMWMzUjFiU0E5SUc1bGR5QkVjaXdnZEdocGN5NWZabkpoYldWRmVIUmxiblJ6SUQwZ2JtVjNJRmdvTVN3Z01Ta3NJSFJvYVhNdVgzWnBaWGR3YjNKMFEyOTFiblFnUFNBeExDQjBhR2x6TGw5MmFXVjNjRzl5ZEhNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QldaU2d3TENBd0xDQXhMQ0F4S1FvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJXYVdWM2NHOXlkRU52ZFc1MEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5MmFXVjNjRzl5ZEVOdmRXNTBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJuSjFjM1IxYlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWm5KMWMzUjFiVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcFkyVnpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZ0WlhKaExDQnVJRDBnZEdocGN5NXRZWFJ5YVhnN0NpQWdJQ0FnSUNBZ1RXTXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0dVdWJXRjBjbWw0VjI5eWJHUXBMQ0IwTG5CdmMybDBhVzl1TG1OdmNIa29UV01wTENCaVl5NXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvWlM1MFlYSm5aWFF1YldGMGNtbDRWMjl5YkdRcExDQjBMbXh2YjJ0QmRDaGlZeWtzSUhRdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0tTd2dYMk11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWgwTG5CeWIycGxZM1JwYjI1TllYUnlhWGdzSUhRdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTd2dkR2hwY3k1ZlpuSjFjM1IxYlM1elpYUkdjbTl0VUhKdmFtVmpkR2x2YmsxaGRISnBlQ2hmWXlrc0lHNHVjMlYwS0M0MUxDQXdMQ0F3TENBdU5Td2dNQ3dnTGpVc0lEQXNJQzQxTENBd0xDQXdMQ0F1TlN3Z0xqVXNJREFzSURBc0lEQXNJREVwTENCdUxtMTFiSFJwY0d4NUtIUXVjSEp2YW1WamRHbHZiazFoZEhKcGVDa3NJRzR1YlhWc2RHbHdiSGtvZEM1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVm1sbGQzQnZjblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkyYVdWM2NHOXlkSE5iWlYwN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHY21GdFpVVjRkR1Z1ZEhNb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJaeVlXMWxSWGgwWlc1MGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZWEFnSmlZZ2RHaHBjeTV0WVhBdVpHbHpjRzl6WlNncExDQjBhR2x6TG0xaGNGQmhjM01nSmlZZ2RHaHBjeTV0WVhCUVlYTnpMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTmhiV1Z5WVNBOUlHVXVZMkZ0WlhKaExtTnNiMjVsS0Nrc0lIUm9hWE11WW1saGN5QTlJR1V1WW1saGN5d2dkR2hwY3k1eVlXUnBkWE1nUFNCbExuSmhaR2wxY3l3Z2RHaHBjeTV0WVhCVGFYcGxMbU52Y0hrb1pTNXRZWEJUYVhwbEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCN2ZUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVpYVdGeklDRTlQU0F3SUNZbUlDaGxMbUpwWVhNZ1BTQjBhR2x6TG1KcFlYTXBMQ0IwYUdsekxtNXZjbTFoYkVKcFlYTWdJVDA5SURBZ0ppWWdLR1V1Ym05eWJXRnNRbWxoY3lBOUlIUm9hWE11Ym05eWJXRnNRbWxoY3lrc0lIUm9hWE11Y21Ga2FYVnpJQ0U5UFNBeElDWW1JQ2hsTG5KaFpHbDFjeUE5SUhSb2FYTXVjbUZrYVhWektTd2dLSFJvYVhNdWJXRndVMmw2WlM1NElDRTlQU0ExTVRJZ2ZId2dkR2hwY3k1dFlYQlRhWHBsTG5rZ0lUMDlJRFV4TWlrZ0ppWWdLR1V1YldGd1UybDZaU0E5SUhSb2FYTXViV0Z3VTJsNlpTNTBiMEZ5Y21GNUtDa3BMQ0JsTG1OaGJXVnlZU0E5SUhSb2FYTXVZMkZ0WlhKaExuUnZTbE5QVGlnaE1Ta3ViMkpxWldOMExDQmtaV3hsZEdVZ1pTNWpZVzFsY21FdWJXRjBjbWw0TENCbE93b2dJQ0FnZlFwOUxDQlBZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiVzhnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ2RYUW9OVEFzSURFc0lDNDFMQ0ExTURBcEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1adlkzVnpJRDBnTVRzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBZMlZ6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGdFpYSmhMQ0J1SUQwZ1pISWdLaUF5SUNvZ1pTNWhibWRzWlNBcUlIUm9hWE11Wm05amRYTXNJR2tnUFNCMGFHbHpMbTFoY0ZOcGVtVXVkMmxrZEdnZ0x5QjBhR2x6TG0xaGNGTnBlbVV1YUdWcFoyaDBMQ0J5SUQwZ1pTNWthWE4wWVc1alpTQjhmQ0IwTG1aaGNqc0tJQ0FnSUNBZ0lDQW9iaUFoUFQwZ2RDNW1iM1lnZkh3Z2FTQWhQVDBnZEM1aGMzQmxZM1FnZkh3Z2NpQWhQVDBnZEM1bVlYSXBJQ1ltSUNoMExtWnZkaUE5SUc0c0lIUXVZWE53WldOMElEMGdhU3dnZEM1bVlYSWdQU0J5TENCMExuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1Nrc0lITjFjR1Z5TG5Wd1pHRjBaVTFoZEhKcFkyVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVptOWpkWE1nUFNCbExtWnZZM1Z6TENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BQWVM1d2NtOTBiM1I1Y0dVdWFYTlRjRzkwVEdsbmFIUlRhR0ZrYjNjZ1BTQWhNRHNLZG1GeUlFaGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVJRDBnTUN3Z2FTQTlJRTFoZEdndVVFa2dMeUF6TENCeUlEMGdNQ3dnYnlBOUlERXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRjRzkwVEdsbmFIUWlMQ0IwYUdsekxuQnZjMmwwYVc5dUxtTnZjSGtvVG1VdVJHVm1ZWFZzZEZWd0tTd2dkR2hwY3k1MWNHUmhkR1ZOWVhSeWFYZ29LU3dnZEdocGN5NTBZWEpuWlhRZ1BTQnVaWGNnVG1Vc0lIUm9hWE11WkdsemRHRnVZMlVnUFNCdUxDQjBhR2x6TG1GdVoyeGxJRDBnYVN3Z2RHaHBjeTV3Wlc1MWJXSnlZU0E5SUhJc0lIUm9hWE11WkdWallYa2dQU0J2TENCMGFHbHpMbk5vWVdSdmR5QTlJRzVsZHlCUFlUc0tJQ0FnSUgwS0lDQWdJR2RsZENCd2IzZGxjaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiblJsYm5OcGRIa2dLaUJOWVhSb0xsQkpPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIQnZkMlZ5S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdWRHVnVjMmwwZVNBOUlHVWdMeUJOWVhSb0xsQkpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbk5vWVdSdmR5NWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVrYVhOMFlXNWpaU0E5SUdVdVpHbHpkR0Z1WTJVc0lIUm9hWE11WVc1bmJHVWdQU0JsTG1GdVoyeGxMQ0IwYUdsekxuQmxiblZ0WW5KaElEMGdaUzV3Wlc1MWJXSnlZU3dnZEdocGN5NWtaV05oZVNBOUlHVXVaR1ZqWVhrc0lIUm9hWE11ZEdGeVoyVjBJRDBnWlM1MFlYSm5aWFF1WTJ4dmJtVW9LU3dnZEdocGN5NXphR0ZrYjNjZ1BTQmxMbk5vWVdSdmR5NWpiRzl1WlNncExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwSVlTNXdjbTkwYjNSNWNHVXVhWE5UY0c5MFRHbG5hSFFnUFNBaE1Ec0tkbUZ5SUhkaklEMGdibVYzSUhCbExDQnVjaUE5SUc1bGR5Qk5MQ0JxYnlBOUlHNWxkeUJOTENCcllTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2JXOGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnZFhRb09UQXNJREVzSUM0MUxDQTFNREFwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbDltY21GdFpVVjRkR1Z1ZEhNZ1BTQnVaWGNnV0NnMExDQXlLU3dnZEdocGN5NWZkbWxsZDNCdmNuUkRiM1Z1ZENBOUlEWXNJSFJvYVhNdVgzWnBaWGR3YjNKMGN5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRlpsS0RJc0lERXNJREVzSURFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1ZtVW9NQ3dnTVN3Z01Td2dNU2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJXWlNnekxDQXhMQ0F4TENBeEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGWmxLREVzSURFc0lERXNJREVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVm1Vb015d2dNQ3dnTVN3Z01Ta3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QldaU2d4TENBd0xDQXhMQ0F4S1FvZ0lDQWdJQ0FnSUYwc0lIUm9hWE11WDJOMVltVkVhWEpsWTNScGIyNXpJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVFNneExDQXdMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb0xURXNJREFzSURBcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3dMQ0F3TENBeEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTUN3Z0xURXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dUU2d3TENBeExDQXdLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTUN3Z0xURXNJREFwQ2lBZ0lDQWdJQ0FnWFN3Z2RHaHBjeTVmWTNWaVpWVndjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Dd2dNU3dnTUNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCTktEQXNJREVzSURBcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3dMQ0F4TENBd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTVN3Z01Da3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5Qk5LREFzSURBc0lERXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dUU2d3TENBd0xDQXRNU2tLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbGpaWE1vWlN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMkZ0WlhKaExDQnBJRDBnZEdocGN5NXRZWFJ5YVhnc0lISWdQU0JsTG1ScGMzUmhibU5sSUh4OElHNHVabUZ5T3dvZ0lDQWdJQ0FnSUhJZ0lUMDlJRzR1Wm1GeUlDWW1JQ2h1TG1aaGNpQTlJSElzSUc0dWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwS1N3Z2JuSXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0dVdWJXRjBjbWw0VjI5eWJHUXBMQ0J1TG5CdmMybDBhVzl1TG1OdmNIa29ibklwTENCcWJ5NWpiM0I1S0c0dWNHOXphWFJwYjI0cExDQnFieTVoWkdRb2RHaHBjeTVmWTNWaVpVUnBjbVZqZEdsdmJuTmJkRjBwTENCdUxuVndMbU52Y0hrb2RHaHBjeTVmWTNWaVpWVndjMXQwWFNrc0lHNHViRzl2YTBGMEtHcHZLU3dnYmk1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNncExDQnBMbTFoYTJWVWNtRnVjMnhoZEdsdmJpZ3Ribkl1ZUN3Z0xXNXlMbmtzSUMxdWNpNTZLU3dnZDJNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lodUxuQnliMnBsWTNScGIyNU5ZWFJ5YVhnc0lHNHViV0YwY21sNFYyOXliR1JKYm5abGNuTmxLU3dnZEdocGN5NWZabkoxYzNSMWJTNXpaWFJHY205dFVISnZhbVZqZEdsdmJrMWhkSEpwZUNoM1l5azdDaUFnSUNCOUNuMDdDbXRoTG5CeWIzUnZkSGx3WlM1cGMxQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ1BTQWhNRHNLZG1GeUlFZGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVJRDBnTUN3Z2FTQTlJREVwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRYjJsdWRFeHBaMmgwSWl3Z2RHaHBjeTVrYVhOMFlXNWpaU0E5SUc0c0lIUm9hWE11WkdWallYa2dQU0JwTENCMGFHbHpMbk5vWVdSdmR5QTlJRzVsZHlCcllUc0tJQ0FnSUgwS0lDQWdJR2RsZENCd2IzZGxjaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiblJsYm5OcGRIa2dLaUEwSUNvZ1RXRjBhQzVRU1RzS0lDQWdJSDBLSUNBZ0lITmxkQ0J3YjNkbGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBiblJsYm5OcGRIa2dQU0JsSUM4Z0tEUWdLaUJOWVhSb0xsQkpLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6YUdGa2IzY3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WkdsemRHRnVZMlVnUFNCbExtUnBjM1JoYm1ObExDQjBhR2x6TG1SbFkyRjVJRDBnWlM1a1pXTmhlU3dnZEdocGN5NXphR0ZrYjNjZ1BTQmxMbk5vWVdSdmR5NWpiRzl1WlNncExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwSFlTNXdjbTkwYjNSNWNHVXVhWE5RYjJsdWRFeHBaMmgwSUQwZ0lUQTdDblpoY2lCV1lTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2JXOGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnUm5Jb0xUVXNJRFVzSURVc0lDMDFMQ0F1TlN3Z05UQXdLU2s3Q2lBZ0lDQjlDbjA3Q2xaaExuQnliM1J2ZEhsd1pTNXBjMFJwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjZ1BTQWhNRHNLZG1GeUlGZGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVJHbHlaV04wYVc5dVlXeE1hV2RvZENJc0lIUm9hWE11Y0c5emFYUnBiMjR1WTI5d2VTaE9aUzVFWldaaGRXeDBWWEFwTENCMGFHbHpMblZ3WkdGMFpVMWhkSEpwZUNncExDQjBhR2x6TG5SaGNtZGxkQ0E5SUc1bGR5Qk9aU3dnZEdocGN5NXphR0ZrYjNjZ1BTQnVaWGNnVm1FN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWMyaGhaRzkzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuUmhjbWRsZENBOUlHVXVkR0Z5WjJWMExtTnNiMjVsS0Nrc0lIUm9hWE11YzJoaFpHOTNJRDBnWlM1emFHRmtiM2N1WTJ4dmJtVW9LU3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0tWMkV1Y0hKdmRHOTBlWEJsTG1selJHbHlaV04wYVc5dVlXeE1hV2RvZENBOUlDRXdPd3AyWVhJZ2NXRWdQU0JqYkdGemN5QmxlSFJsYm1SeklFSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKQmJXSnBaVzUwVEdsbmFIUWlPd29nSUNBZ2ZRcDlPd3B4WVM1d2NtOTBiM1I1Y0dVdWFYTkJiV0pwWlc1MFRHbG5hSFFnUFNBaE1Ec0tkbUZ5SUZoaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCQ2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdNVEFzSUdrZ1BTQXhNQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZENrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbEpsWTNSQmNtVmhUR2xuYUhRaUxDQjBhR2x6TG5kcFpIUm9JRDBnYml3Z2RHaHBjeTVvWldsbmFIUWdQU0JwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSEJ2ZDJWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1sdWRHVnVjMmwwZVNBcUlIUm9hWE11ZDJsa2RHZ2dLaUIwYUdsekxtaGxhV2RvZENBcUlFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnY0c5M1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnWlNBdklDaDBhR2x6TG5kcFpIUm9JQ29nZEdocGN5NW9aV2xuYUhRZ0tpQk5ZWFJvTGxCSktUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbmRwWkhSb0lEMGdaUzUzYVdSMGFDd2dkR2hwY3k1b1pXbG5hSFFnUFNCbExtaGxhV2RvZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCemRYQmxjaTUwYjBwVFQwNG9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YjJKcVpXTjBMbmRwWkhSb0lEMGdkR2hwY3k1M2FXUjBhQ3dnZEM1dlltcGxZM1F1YUdWcFoyaDBJRDBnZEdocGN5NW9aV2xuYUhRc0lIUTdDaUFnSUNCOUNuMDdDbGhoTG5CeWIzUnZkSGx3WlM1cGMxSmxZM1JCY21WaFRHbG5hSFFnUFNBaE1Ec0tkbUZ5SUVwaElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OdlpXWm1hV05wWlc1MGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQTdJR1VnUENBNU95QmxLeXNwZEdocGN5NWpiMlZtWm1samFXVnVkSE11Y0hWemFDaHVaWGNnVFNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQTVPeUIwS3lzcGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhOYmRGMHVZMjl3ZVNobFczUmRLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIcGxjbThvS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbElEMGdNRHNnWlNBOElEazdJR1VyS3lsMGFHbHpMbU52WldabWFXTnBaVzUwYzF0bFhTNXpaWFFvTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJCZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTG5nc0lHa2dQU0JsTG5rc0lISWdQU0JsTG5vc0lHOGdQU0IwYUdsekxtTnZaV1ptYVdOcFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtHOWJNRjBwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzR5T0RJd09UVXBMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3pGZExDQXVORGc0TmpBeklDb2dhU2tzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk1sMHNJQzQwT0RnMk1ETWdLaUJ5S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2Ixc3pYU3dnTGpRNE9EWXdNeUFxSUc0cExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaHZXelJkTENBeExqQTVNalUwT0NBcUlDaHVJQ29nYVNrcExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaHZXelZkTENBeExqQTVNalUwT0NBcUlDaHBJQ29nY2lrcExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaHZXelpkTENBdU16RTFNemt5SUNvZ0tETWdLaUJ5SUNvZ2NpQXRJREVwS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczNYU3dnTVM0d09USTFORGdnS2lBb2JpQXFJSElwS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczRYU3dnTGpVME5qSTNOQ0FxSUNodUlDb2diaUF0SUdrZ0tpQnBLU2tzSUhRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJKY25KaFpHbGhibU5sUVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1NExDQnBJRDBnWlM1NUxDQnlJRDBnWlM1NkxDQnZJRDBnZEdocGN5NWpiMlZtWm1samFXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WTI5d2VTaHZXekJkS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1T0RnMk1qSTNLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzeFhTd2dNaUFxSUM0MU1URTJOalFnS2lCcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXN5WFN3Z01pQXFJQzQxTVRFMk5qUWdLaUJ5S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2Ixc3pYU3dnTWlBcUlDNDFNVEUyTmpRZ0tpQnVLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzMFhTd2dNaUFxSUM0ME1qa3dORE1nS2lCdUlDb2dhU2tzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk5WMHNJRElnS2lBdU5ESTVNRFF6SUNvZ2FTQXFJSElwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6WmRMQ0F1TnpRek1USTFJQ29nY2lBcUlISWdMU0F1TWpRM056QTRLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzM1hTd2dNaUFxSUM0ME1qa3dORE1nS2lCdUlDb2djaWtzSUhRdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0c5Yk9GMHNJQzQwTWprd05ETWdLaUFvYmlBcUlHNGdMU0JwSUNvZ2FTa3BMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1lXUmtLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z09Uc2dkQ3NyS1hSb2FYTXVZMjlsWm1acFkybGxiblJ6VzNSZExtRmtaQ2hsTG1OdlpXWm1hV05wWlc1MGMxdDBYU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1pXUlRTQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJRGs3SUc0ckt5bDBhR2x6TG1OdlpXWm1hV05wWlc1MGMxdHVYUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9aUzVqYjJWbVptbGphV1Z1ZEhOYmJsMHNJSFFwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMk5oYkdVb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0E1T3lCMEt5c3BkR2hwY3k1amIyVm1abWxqYVdWdWRITmJkRjB1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnNaWEp3S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnT1RzZ2Jpc3JLWFJvYVhNdVkyOWxabVpwWTJsbGJuUnpXMjVkTG14bGNuQW9aUzVqYjJWbVptbGphV1Z1ZEhOYmJsMHNJSFFwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnT1RzZ2RDc3JLV2xtSUNnaGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhOYmRGMHVaWEYxWVd4ektHVXVZMjlsWm1acFkybGxiblJ6VzNSZEtTa2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhNRHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2hsTG1OdlpXWm1hV05wWlc1MGN5azdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtTnZaV1ptYVdOcFpXNTBjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd095QnBJRHdnT1RzZ2FTc3JLVzViYVYwdVpuSnZiVUZ5Y21GNUtHVXNJSFFnS3lCcElDb2dNeWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMEZ5Y21GNUtHVWdQU0JiWFN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMjlsWm1acFkybGxiblJ6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQTdJR2tnUENBNU95QnBLeXNwYmx0cFhTNTBiMEZ5Y21GNUtHVXNJSFFnS3lCcElDb2dNeWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWjJWMFFtRnphWE5CZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTG5nc0lHa2dQU0JsTG5rc0lISWdQU0JsTG5vN0NpQWdJQ0FnSUNBZ2RGc3dYU0E5SUM0eU9ESXdPVFVzSUhSYk1WMGdQU0F1TkRnNE5qQXpJQ29nYVN3Z2RGc3lYU0E5SUM0ME9EZzJNRE1nS2lCeUxDQjBXek5kSUQwZ0xqUTRPRFl3TXlBcUlHNHNJSFJiTkYwZ1BTQXhMakE1TWpVME9DQXFJRzRnS2lCcExDQjBXelZkSUQwZ01TNHdPVEkxTkRnZ0tpQnBJQ29nY2l3Z2RGczJYU0E5SUM0ek1UVXpPVElnS2lBb015QXFJSElnS2lCeUlDMGdNU2tzSUhSYk4xMGdQU0F4TGpBNU1qVTBPQ0FxSUc0Z0tpQnlMQ0IwV3poZElEMGdMalUwTmpJM05DQXFJQ2h1SUNvZ2JpQXRJR2tnS2lCcEtUc0tJQ0FnSUgwS2ZUc0tTbUV1Y0hKdmRHOTBlWEJsTG1selUzQm9aWEpwWTJGc1NHRnliVzl1YVdOek15QTlJQ0V3T3dwMllYSWdTSElnUFNCamJHRnpjeUJsZUhSbGJtUnpJRUowSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnU21Fc0lIUWdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWgyYjJsa0lEQXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjMmdnUFNCbE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjMmd1WTI5d2VTaGxMbk5vS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYm5SbGJuTnBkSGtnUFNCbExtbHVkR1Z1YzJsMGVTd2dkR2hwY3k1emFDNW1jbTl0UVhKeVlYa29aUzV6YUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG05aWFtVmpkQzV6YUNBOUlIUm9hWE11YzJndWRHOUJjbkpoZVNncExDQjBPd29nSUNBZ2ZRcDlPd3BJY2k1d2NtOTBiM1I1Y0dVdWFYTk1hV2RvZEZCeWIySmxJRDBnSVRBN0NuWmhjaUI2YUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNBZ0lDQWdkR2hwY3k1MFpYaDBkWEpsY3lBOUlIdDlPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxDQnZJRDBnYm1WM0lGbDBLSEl1YldGdVlXZGxjaWs3Q2lBZ0lDQWdJQ0FnYnk1elpYUlFZWFJvS0hJdWNHRjBhQ2tzSUc4dWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loeUxuSmxjWFZsYzNSSVpXRmtaWElwTENCdkxuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aHlMbmRwZEdoRGNtVmtaVzUwYVdGc2N5a3NJRzh1Ykc5aFpDaGxMQ0JtZFc1amRHbHZiaWhoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMEtISXVjR0Z5YzJVb1NsTlBUaTV3WVhKelpTaGhLU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQ4Z2FTaHNLU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9iQ2tzSUhJdWJXRnVZV2RsY2k1cGRHVnRSWEp5YjNJb1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZEdWNGRIVnlaWE03Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYmloeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwVzNKZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUmxjbWxoYkV4dllXUmxjam9nVlc1a1pXWnBibVZrSUhSbGVIUjFjbVVpTENCeUtTd2dkRnR5WFRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2djM2xiWlM1MGVYQmxYVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNTFkV2xrSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZFhWcFpDQTlJR1V1ZFhWcFpDa3NJR1V1Ym1GdFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtNWhiV1VnUFNCbExtNWhiV1VwTENCbExtTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdhUzVqYjJ4dmNpQWhQVDBnZG05cFpDQXdJQ1ltSUdrdVkyOXNiM0l1YzJWMFNHVjRLR1V1WTI5c2IzSXBMQ0JsTG5KdmRXZG9ibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5KdmRXZG9ibVZ6Y3lBOUlHVXVjbTkxWjJodVpYTnpLU3dnWlM1dFpYUmhiRzVsYzNNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1dFpYUmhiRzVsYzNNZ1BTQmxMbTFsZEdGc2JtVnpjeWtzSUdVdWMyaGxaVzRnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdWbGJpQTlJR1V1YzJobFpXNHBMQ0JsTG5Ob1pXVnVRMjlzYjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emFHVmxia052Ykc5eUlEMGdibVYzSUdGbEtDa3VjMlYwU0dWNEtHVXVjMmhsWlc1RGIyeHZjaWtwTENCbExuTm9aV1Z1VW05MVoyaHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJobFpXNVNiM1ZuYUc1bGMzTWdQU0JsTG5Ob1pXVnVVbTkxWjJodVpYTnpLU3dnWlM1bGJXbHpjMmwyWlNBaFBUMGdkbTlwWkNBd0lDWW1JR2t1WlcxcGMzTnBkbVVnSVQwOUlIWnZhV1FnTUNBbUppQnBMbVZ0YVhOemFYWmxMbk5sZEVobGVDaGxMbVZ0YVhOemFYWmxLU3dnWlM1emNHVmpkV3hoY2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YzNCbFkzVnNZWElnSVQwOUlIWnZhV1FnTUNBbUppQnBMbk53WldOMWJHRnlMbk5sZEVobGVDaGxMbk53WldOMWJHRnlLU3dnWlM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1SUQwZ1pTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVTa3NJR1V1YzNCbFkzVnNZWEpEYjJ4dmNpQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWMzQmxZM1ZzWVhKRGIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VjM0JsWTNWc1lYSkRiMnh2Y2k1elpYUklaWGdvWlM1emNHVmpkV3hoY2tOdmJHOXlLU3dnWlM1emFHbHVhVzVsYzNNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emFHbHVhVzVsYzNNZ1BTQmxMbk5vYVc1cGJtVnpjeWtzSUdVdVkyeGxZWEpqYjJGMElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVkyeGxZWEpqYjJGMElEMGdaUzVqYkdWaGNtTnZZWFFwTENCbExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QTlJR1V1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56S1N3Z1pTNTBjbUZ1YzIxcGMzTnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUwY21GdWMyMXBjM05wYjI0Z1BTQmxMblJ5WVc1emJXbHpjMmx2Ymlrc0lHVXVkR2hwWTJ0dVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkR2hwWTJ0dVpYTnpJRDBnWlM1MGFHbGphMjVsYzNNcExDQmxMbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUQwZ1pTNWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxLU3dnWlM1aGRIUmxiblZoZEdsdmJrTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdhUzVoZEhSbGJuVmhkR2x2YmtOdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNWhkSFJsYm5WaGRHbHZia052Ykc5eUxuTmxkRWhsZUNobExtRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJcExDQmxMbVp2WnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1adlp5QTlJR1V1Wm05bktTd2daUzVtYkdGMFUyaGhaR2x1WnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1ac1lYUlRhR0ZrYVc1bklEMGdaUzVtYkdGMFUyaGhaR2x1Wnlrc0lHVXVZbXhsYm1ScGJtY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWliR1Z1WkdsdVp5QTlJR1V1WW14bGJtUnBibWNwTENCbExtTnZiV0pwYm1VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1amIyMWlhVzVsSUQwZ1pTNWpiMjFpYVc1bEtTd2daUzV6YVdSbElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMybGtaU0E5SUdVdWMybGtaU2tzSUdVdWMyaGhaRzkzVTJsa1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTm9ZV1J2ZDFOcFpHVWdQU0JsTG5Ob1lXUnZkMU5wWkdVcExDQmxMbTl3WVdOcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXZjR0ZqYVhSNUlEMGdaUzV2Y0dGamFYUjVLU3dnWlM1bWIzSnRZWFFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVtYjNKdFlYUWdQU0JsTG1admNtMWhkQ2tzSUdVdWRISmhibk53WVhKbGJuUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTBjbUZ1YzNCaGNtVnVkQ0E5SUdVdWRISmhibk53WVhKbGJuUXBMQ0JsTG1Gc2NHaGhWR1Z6ZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Gc2NHaGhWR1Z6ZENBOUlHVXVZV3h3YUdGVVpYTjBLU3dnWlM1a1pYQjBhRlJsYzNRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1a1pYQjBhRlJsYzNRZ1BTQmxMbVJsY0hSb1ZHVnpkQ2tzSUdVdVpHVndkR2hYY21sMFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtUmxjSFJvVjNKcGRHVWdQU0JsTG1SbGNIUm9WM0pwZEdVcExDQmxMbU52Ykc5eVYzSnBkR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVqYjJ4dmNsZHlhWFJsSUQwZ1pTNWpiMnh2Y2xkeWFYUmxLU3dnWlM1emRHVnVZMmxzVjNKcGRHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXpkR1Z1WTJsc1YzSnBkR1VnUFNCbExuTjBaVzVqYVd4WGNtbDBaU2tzSUdVdWMzUmxibU5wYkZkeWFYUmxUV0Z6YXlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNCbExuTjBaVzVqYVd4WGNtbDBaVTFoYzJzcExDQmxMbk4wWlc1amFXeEdkVzVqSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNSbGJtTnBiRVoxYm1NZ1BTQmxMbk4wWlc1amFXeEdkVzVqS1N3Z1pTNXpkR1Z1WTJsc1VtVm1JQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM1JsYm1OcGJGSmxaaUE5SUdVdWMzUmxibU5wYkZKbFppa3NJR1V1YzNSbGJtTnBiRVoxYm1OTllYTnJJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM1JsYm1OcGJFWjFibU5OWVhOcklEMGdaUzV6ZEdWdVkybHNSblZ1WTAxaGMyc3BMQ0JsTG5OMFpXNWphV3hHWVdsc0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkVaaGFXd2dQU0JsTG5OMFpXNWphV3hHWVdsc0tTd2daUzV6ZEdWdVkybHNXa1poYVd3Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emRHVnVZMmxzV2taaGFXd2dQU0JsTG5OMFpXNWphV3hhUm1GcGJDa3NJR1V1YzNSbGJtTnBiRnBRWVhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkZwUVlYTnpJRDBnWlM1emRHVnVZMmxzV2xCaGMzTXBMQ0JsTG5kcGNtVm1jbUZ0WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5kcGNtVm1jbUZ0WlNBOUlHVXVkMmx5WldaeVlXMWxLU3dnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ2tzSUdVdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnUFNCbExuZHBjbVZtY21GdFpVeHBibVZqWVhBcExDQmxMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1S1N3Z1pTNXliM1JoZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuSnZkR0YwYVc5dUlEMGdaUzV5YjNSaGRHbHZiaWtzSUdVdWJHbHVaWGRwWkhSb0lDRTlQU0F4SUNZbUlDaHBMbXhwYm1WM2FXUjBhQ0E5SUdVdWJHbHVaWGRwWkhSb0tTd2daUzVrWVhOb1UybDZaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVJoYzJoVGFYcGxJRDBnWlM1a1lYTm9VMmw2WlNrc0lHVXVaMkZ3VTJsNlpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtZGhjRk5wZW1VZ1BTQmxMbWRoY0ZOcGVtVXBMQ0JsTG5OallXeGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMk5oYkdVZ1BTQmxMbk5qWVd4bEtTd2daUzV3YjJ4NVoyOXVUMlptYzJWMElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWNHOXNlV2R2Yms5bVpuTmxkQ0E5SUdVdWNHOXNlV2R2Yms5bVpuTmxkQ2tzSUdVdWNHOXNlV2R2Yms5bVpuTmxkRVpoWTNSdmNpQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuQnZiSGxuYjI1UFptWnpaWFJHWVdOMGIzSWdQU0JsTG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJcExDQmxMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUE5SUdVdWNHOXNlV2R2Yms5bVpuTmxkRlZ1YVhSektTd2daUzVrYVhSb1pYSnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVrYVhSb1pYSnBibWNnUFNCbExtUnBkR2hsY21sdVp5a3NJR1V1WVd4d2FHRlViME52ZG1WeVlXZGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZV3h3YUdGVWIwTnZkbVZ5WVdkbElEMGdaUzVoYkhCb1lWUnZRMjkyWlhKaFoyVXBMQ0JsTG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBOUlHVXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhLU3dnWlM1MmFYTnBZbXhsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZG1semFXSnNaU0E5SUdVdWRtbHphV0pzWlNrc0lHVXVkRzl1WlUxaGNIQmxaQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblJ2Ym1WTllYQndaV1FnUFNCbExuUnZibVZOWVhCd1pXUXBMQ0JsTG5WelpYSkVZWFJoSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZFhObGNrUmhkR0VnUFNCbExuVnpaWEpFWVhSaEtTd2daUzUyWlhKMFpYaERiMnh2Y25NZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEhsd1pXOW1JR1V1ZG1WeWRHVjRRMjlzYjNKeklEMDlJQ0p1ZFcxaVpYSWlJRDhnYVM1MlpYSjBaWGhEYjJ4dmNuTWdQU0JsTG5abGNuUmxlRU52Ykc5eWN5QStJREFnT2lCcExuWmxjblJsZUVOdmJHOXljeUE5SUdVdWRtVnlkR1Y0UTI5c2IzSnpLU3dnWlM1MWJtbG1iM0p0Y3lBaFBUMGdkbTlwWkNBd0tTQm1iM0lvYkdWMElISWdhVzRnWlM1MWJtbG1iM0p0Y3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdaUzUxYm1sbWIzSnRjMXR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdjM2RwZEdOb0tHa3VkVzVwWm05eWJYTmJjbDBnUFNCN2ZTd2dieTUwZVhCbEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW5RaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1ZFc1cFptOXliWE5iY2wwdWRtRnNkV1VnUFNCdUtHOHVkbUZzZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpWXlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzUxYm1sbWIzSnRjMXR5WFM1MllXeDFaU0E5SUc1bGR5QmhaU2dwTG5ObGRFaGxlQ2h2TG5aaGJIVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0luWXlJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExuVnVhV1p2Y20xelczSmRMblpoYkhWbElEMGdibVYzSUZnb0tTNW1jbTl0UVhKeVlYa29ieTUyWVd4MVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKMk15STZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1MWJtbG1iM0p0YzF0eVhTNTJZV3gxWlNBOUlHNWxkeUJOS0NrdVpuSnZiVUZ5Y21GNUtHOHVkbUZzZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpZGpRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1ZFc1cFptOXliWE5iY2wwdWRtRnNkV1VnUFNCdVpYY2dWbVVvS1M1bWNtOXRRWEp5WVhrb2J5NTJZV3gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0p0TXlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzUxYm1sbWIzSnRjMXR5WFM1MllXeDFaU0E5SUc1bGR5QnNkQ2dwTG1aeWIyMUJjbkpoZVNodkxuWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbTAwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYm1WM0lIQmxLQ2t1Wm5KdmJVRnljbUY1S0c4dWRtRnNkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExuVnVhV1p2Y20xelczSmRMblpoYkhWbElEMGdieTUyWVd4MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aUzVrWldacGJtVnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR1ZtYVc1bGN5QTlJR1V1WkdWbWFXNWxjeWtzSUdVdWRtVnlkR1Y0VTJoaFpHVnlJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkbVZ5ZEdWNFUyaGhaR1Z5SUQwZ1pTNTJaWEowWlhoVGFHRmtaWElwTENCbExtWnlZV2R0Wlc1MFUyaGhaR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Wm5KaFoyMWxiblJUYUdGa1pYSWdQU0JsTG1aeVlXZHRaVzUwVTJoaFpHVnlLU3dnWlM1bGVIUmxibk5wYjI1eklDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdjakVnYVc0Z1pTNWxlSFJsYm5OcGIyNXpLV2t1WlhoMFpXNXphVzl1YzF0eU1WMGdQU0JsTG1WNGRHVnVjMmx2Ym5OYmNqRmRPd29nSUNBZ0lDQWdJR2xtSUNobExuTm9ZV1JwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bWJHRjBVMmhoWkdsdVp5QTlJR1V1YzJoaFpHbHVaeUE5UFQwZ01Ta3NJR1V1YzJsNlpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTnBlbVVnUFNCbExuTnBlbVVwTENCbExuTnBlbVZCZEhSbGJuVmhkR2x2YmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OcGVtVkJkSFJsYm5WaGRHbHZiaUE5SUdVdWMybDZaVUYwZEdWdWRXRjBhVzl1S1N3Z1pTNXRZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV0WVhBZ1BTQnVLR1V1YldGd0tTa3NJR1V1YldGMFkyRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3ViV0YwWTJGd0lEMGdiaWhsTG0xaGRHTmhjQ2twTENCbExtRnNjR2hoVFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVlXeHdhR0ZOWVhBZ1BTQnVLR1V1WVd4d2FHRk5ZWEFwS1N3Z1pTNWlkVzF3VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVluVnRjRTFoY0NBOUlHNG9aUzVpZFcxd1RXRndLU2tzSUdVdVluVnRjRk5qWVd4bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVluVnRjRk5qWVd4bElEMGdaUzVpZFcxd1UyTmhiR1VwTENCbExtNXZjbTFoYkUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtNXZjbTFoYkUxaGNDQTlJRzRvWlM1dWIzSnRZV3hOWVhBcEtTd2daUzV1YjNKdFlXeE5ZWEJVZVhCbElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWJtOXliV0ZzVFdGd1ZIbHdaU0E5SUdVdWJtOXliV0ZzVFdGd1ZIbHdaU2tzSUdVdWJtOXliV0ZzVTJOaGJHVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2pJZ1BTQmxMbTV2Y20xaGJGTmpZV3hsT3dvZ0lDQWdJQ0FnSUNBZ0lDQkJjbkpoZVM1cGMwRnljbUY1S0hJeUtTQTlQVDBnSVRFZ0ppWWdLSEl5SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NqSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlNZ29nSUNBZ0lDQWdJQ0FnSUNCZEtTd2dhUzV1YjNKdFlXeFRZMkZzWlNBOUlHNWxkeUJZS0NrdVpuSnZiVUZ5Y21GNUtISXlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdiaWhsTG1ScGMzQnNZV05sYldWdWRFMWhjQ2twTENCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxLU3dnWlM1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lrc0lHVXVjbTkxWjJodVpYTnpUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Y205MVoyaHVaWE56VFdGd0lEMGdiaWhsTG5KdmRXZG9ibVZ6YzAxaGNDa3BMQ0JsTG0xbGRHRnNibVZ6YzAxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtMWxkR0ZzYm1WemMwMWhjQ0E5SUc0b1pTNXRaWFJoYkc1bGMzTk5ZWEFwS1N3Z1pTNWxiV2x6YzJsMlpVMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVZ0YVhOemFYWmxUV0Z3SUQwZ2JpaGxMbVZ0YVhOemFYWmxUV0Z3S1Nrc0lHVXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJR1V1WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtwTENCbExuTndaV04xYkdGeVRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM0JsWTNWc1lYSk5ZWEFnUFNCdUtHVXVjM0JsWTNWc1lYSk5ZWEFwS1N3Z1pTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUQwZ2JpaGxMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3S1Nrc0lHVXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1BTQnVLR1V1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ2twTENCbExtVnVkazFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1WdWRrMWhjQ0E5SUc0b1pTNWxiblpOWVhBcEtTd2daUzVsYm5aTllYQkpiblJsYm5OcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWxiblpOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTa3NJR1V1Y21WbWJHVmpkR2wyYVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWNtVm1iR1ZqZEdsMmFYUjVJRDBnWlM1eVpXWnNaV04wYVhacGRIa3BMQ0JsTG5KbFpuSmhZM1JwYjI1U1lYUnBieUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJR1V1Y21WbWNtRmpkR2x2YmxKaGRHbHZLU3dnWlM1c2FXZG9kRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG14cFoyaDBUV0Z3SUQwZ2JpaGxMbXhwWjJoMFRXRndLU2tzSUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlHVXViR2xuYUhSTllYQkpiblJsYm5OcGRIa3BMQ0JsTG1GdlRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZVzlOWVhBZ1BTQnVLR1V1WVc5TllYQXBLU3dnWlM1aGIwMWhjRWx1ZEdWdWMybDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVoYjAxaGNFbHVkR1Z1YzJsMGVTa3NJR1V1WjNKaFpHbGxiblJOWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bmNtRmthV1Z1ZEUxaGNDQTlJRzRvWlM1bmNtRmthV1Z1ZEUxaGNDa3BMQ0JsTG1Oc1pXRnlZMjloZEUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtTnNaV0Z5WTI5aGRFMWhjQ0E5SUc0b1pTNWpiR1ZoY21OdllYUk5ZWEFwS1N3Z1pTNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ1BTQnVLR1V1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0tTa3NJR1V1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQwZ2JpaGxMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ2twTENCbExtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1VnUFNCdVpYY2dXQ2dwTG1aeWIyMUJjbkpoZVNobExtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxLU2tzSUdVdWRISmhibk50YVhOemFXOXVUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZEhKaGJuTnRhWE56YVc5dVRXRndJRDBnYmlobExuUnlZVzV6YldsemMybHZiazFoY0NrcExDQmxMblJvYVdOcmJtVnpjMDFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5Sb2FXTnJibVZ6YzAxaGNDQTlJRzRvWlM1MGFHbGphMjVsYzNOTllYQXBLU3dnWlM1emFHVmxia052Ykc5eVRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhsWlc1RGIyeHZjazFoY0NBOUlHNG9aUzV6YUdWbGJrTnZiRzl5VFdGd0tTa3NJR1V1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ0E5SUc0b1pTNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDa3BMQ0JwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWR1Y0ZEhWeVpYTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuUmxlSFIxY21WeklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dSM01nUFNCamJHRnpjeUI3Q2lBZ0lDQnpkR0YwYVdNZ1pHVmpiMlJsVkdWNGRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCVVpYaDBSR1ZqYjJSbGNpQThJQ0oxSWlrZ2NtVjBkWEp1SUc1bGR5QlVaWGgwUkdWamIyUmxjaWdwTG1SbFkyOWtaU2hsS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUNJaU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQmxMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWwwSUNzOUlGTjBjbWx1Wnk1bWNtOXRRMmhoY2tOdlpHVW9aVnR1WFNrN0NpQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENobGMyTmhjR1VvZENrcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdWNGRISmhZM1JWY214Q1lYTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdWJHRnpkRWx1WkdWNFQyWW9JaThpS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOVBUMGdMVEVnUHlBaUxpOGlJRG9nWlM1emRXSnpkSElvTUN3Z2RDQXJJREVwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhKbGMyOXNkbVZWVWt3b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwZVhCbGIyWWdaU0FoUFNBaWMzUnlhVzVuSWlCOGZDQmxJRDA5UFNBaUlpQS9JQ0lpSURvZ0tDOWVhSFIwY0hNL09sd3ZYQzh2YVM1MFpYTjBLSFFwSUNZbUlDOWVYQzh2TG5SbGMzUW9aU2tnSmlZZ0tIUWdQU0IwTG5KbGNHeGhZMlVvTHloZWFIUjBjSE0vT2x3dlhDOWJYbHd2WFNzcExpb3ZhU3dnSWlReElpa3BMQ0F2WGlob2RIUndjejg2S1Q5Y0wxd3ZMMmt1ZEdWemRDaGxLU0I4ZkNBdlhtUmhkR0U2TGlvc0xpb2tMMmt1ZEdWemRDaGxLU0I4ZkNBdlhtSnNiMkk2TGlva0wya3VkR1Z6ZENobEtTQS9JR1VnT2lCMElDc2daU2s3Q2lBZ0lDQjlDbjBzSUZsaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJaXdnZEdocGN5NXBibk4wWVc1alpVTnZkVzUwSUQwZ01TQXZJREE3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1cGJuTjBZVzVqWlVOdmRXNTBJRDBnWlM1cGJuTjBZVzVqWlVOdmRXNTBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWgwYUdsektUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXBibk4wWVc1alpVTnZkVzUwSUQwZ2RHaHBjeTVwYm5OMFlXNWpaVU52ZFc1MExDQmxMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua2dQU0FoTUN3Z1pUc0tJQ0FnSUgwS2ZUc0tXV0V1Y0hKdmRHOTBlWEJsTG1selNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtnUFNBaE1Ec0tkbUZ5SUZWb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUc1bGR5QlpkQ2h5TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUc4dWMyVjBVR0YwYUNoeUxuQmhkR2dwTENCdkxuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb2NpNXlaWEYxWlhOMFNHVmhaR1Z5S1N3Z2J5NXpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9jaTUzYVhSb1EzSmxaR1Z1ZEdsaGJITXBMQ0J2TG14dllXUW9aU3dnWm5WdVkzUnBiMjRvWVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDaHlMbkJoY25ObEtFcFRUMDR1Y0dGeWMyVW9ZU2twS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JqWVhSamFDQW9iQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBL0lHa29iQ2tnT2lCamIyNXpiMnhsTG1WeWNtOXlLR3dwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ5Y205eUtHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjdmU3dnYmlBOUlIdDlPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR2tvWml3Z2JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kRnR0WFNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2RGdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCbUxtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWMxdHRYU3dnWnlBOUlISW9aaXdnZGk1aWRXWm1aWElwTENCd0lEMGdkMmtvZGk1MGVYQmxMQ0JuS1N3Z1h5QTlJRzVsZHlBa2JpaHdMQ0IyTG5OMGNtbGtaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCZkxuVjFhV1FnUFNCMkxuVjFhV1FzSUhSYmJWMGdQU0JmTENCZk93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnlLR1lzSUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNWJiVjBnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUc1YmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnWmk1aGNuSmhlVUoxWm1abGNuTmJiVjBzSUdjZ1BTQnVaWGNnVldsdWRETXlRWEp5WVhrb2Rpa3VZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibHR0WFNBOUlHY3NJR2M3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SUQ4Z2JtVjNJRmxoSURvZ2JtVjNJRjlsTENCaElEMGdaUzVrWVhSaExtbHVaR1Y0T3dvZ0lDQWdJQ0FnSUdsbUlDaGhJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQjNhU2hoTG5SNWNHVXNJR0V1WVhKeVlYa3BPd29nSUNBZ0lDQWdJQ0FnSUNCdkxuTmxkRWx1WkdWNEtHNWxkeUJWWlNobUxDQXhLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWlM1a1lYUmhMbUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtTVNCcGJpQnNLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCc1cyWXhYU3dnZURzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cwdWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQnBLR1V1WkdGMFlTd2diUzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dQU0J1WlhjZ1UyNG9kaXdnYlM1cGRHVnRVMmw2WlN3Z2JTNXZabVp6WlhRc0lHMHVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkakVnUFNCM2FTaHRMblI1Y0dVc0lHMHVZWEp5WVhrcExDQm5JRDBnYlM1cGMwbHVjM1JoYm1ObFpFSjFabVpsY2tGMGRISnBZblYwWlNBL0lGaHVJRG9nVldVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNElEMGdibVYzSUdjb2RqRXNJRzB1YVhSbGJWTnBlbVVzSUcwdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiUzV1WVcxbElDRTlQU0IyYjJsa0lEQWdKaVlnS0hndWJtRnRaU0E5SUcwdWJtRnRaU2tzSUcwdWRYTmhaMlVnSVQwOUlIWnZhV1FnTUNBbUppQjRMbk5sZEZWellXZGxLRzB1ZFhOaFoyVXBMQ0J0TG5Wd1pHRjBaVkpoYm1kbElDRTlQU0IyYjJsa0lEQWdKaVlnS0hndWRYQmtZWFJsVW1GdVoyVXViMlptYzJWMElEMGdiUzUxY0dSaGRHVlNZVzVuWlM1dlptWnpaWFFzSUhndWRYQmtZWFJsVW1GdVoyVXVZMjkxYm5RZ1BTQnRMblZ3WkdGMFpWSmhibWRsTG1OdmRXNTBLU3dnYnk1elpYUkJkSFJ5YVdKMWRHVW9aakVzSUhncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHVXVaR0YwWVM1dGIzSndhRUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tHTXBJR1p2Y2loc1pYUWdaaklnYVc0Z1l5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRNU0E5SUdOYlpqSmRMQ0I0TVNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhZeUlEMGdNQ3dnWnpFZ1BTQnRNUzVzWlc1bmRHZzdJSFl5SUR3Z1p6RTdJSFl5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCdE1WdDJNbDBzSUY4N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jQzVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQnBLR1V1WkdGMFlTd2djQzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JmSUQwZ2JtVjNJRk51S0hrc0lIQXVhWFJsYlZOcGVtVXNJSEF1YjJabWMyVjBMQ0J3TG01dmNtMWhiR2w2WldRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVRFZ1BTQjNhU2h3TG5SNWNHVXNJSEF1WVhKeVlYa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUY4Z1BTQnVaWGNnVldVb2VURXNJSEF1YVhSbGJWTnBlbVVzSUhBdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndMbTVoYldVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWHk1dVlXMWxJRDBnY0M1dVlXMWxLU3dnZURFdWNIVnphQ2hmS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCdkxtMXZjbkJvUVhSMGNtbGlkWFJsYzF0bU1sMGdQU0I0TVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1pTNWtZWFJoTG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabElDWW1JQ2h2TG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnWlM1a1lYUmhMbWR5YjNWd2N5QjhmQ0JsTG1SaGRHRXVaSEpoZDJOaGJHeHpJSHg4SUdVdVpHRjBZUzV2Wm1aelpYUnpPd29nSUNBZ0lDQWdJR2xtSUNoMUlDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdaak1nUFNBd0xDQnRNaUE5SUhVdWJHVnVaM1JvT3lCbU15QWhQVDBnYlRJN0lDc3Jaak1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZURJZ1BTQjFXMll6WFRzS0lDQWdJQ0FnSUNBZ0lDQWdieTVoWkdSSGNtOTFjQ2g0TWk1emRHRnlkQ3dnZURJdVkyOTFiblFzSUhneUxtMWhkR1Z5YVdGc1NXNWtaWGdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdVdVpHRjBZUzVpYjNWdVpHbHVaMU53YUdWeVpUc0tJQ0FnSUNBZ0lDQnBaaUFvWkNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1OQ0E5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJQ0FnSUNCa0xtTmxiblJsY2lBaFBUMGdkbTlwWkNBd0lDWW1JR1kwTG1aeWIyMUJjbkpoZVNoa0xtTmxiblJsY2lrc0lHOHVZbTkxYm1ScGJtZFRjR2hsY21VZ1BTQnVaWGNnUVc0b1pqUXNJR1F1Y21Ga2FYVnpLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1Ym1GdFpTQW1KaUFvYnk1dVlXMWxJRDBnWlM1dVlXMWxLU3dnWlM1MWMyVnlSR0YwWVNBbUppQW9ieTUxYzJWeVJHRjBZU0E5SUdVdWRYTmxja1JoZEdFcExDQnZPd29nSUNBZ2ZRcDlMQ0IxZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNc0lHOGdQU0IwYUdsekxuQmhkR2dnUFQwOUlDSWlJRDhnUjNNdVpYaDBjbUZqZEZWeWJFSmhjMlVvWlNrZ09pQjBhR2x6TG5CaGRHZzdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZkWEpqWlZCaGRHZ2dQU0IwYUdsekxuSmxjMjkxY21ObFVHRjBhQ0I4ZkNCdk93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2JtVjNJRmwwS0hSb2FYTXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdZUzV6WlhSUVlYUm9LSFJvYVhNdWNHRjBhQ2tzSUdFdWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExDQmhMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWgwYUdsekxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrc0lHRXViRzloWkNobExDQm1kVzVqZEdsdmJpaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR01nUFNCS1UwOU9MbkJoY25ObEtHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJQ0U5UFNCMmIybGtJREFnSmlZZ2FTaDFLU3dnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVNlQySnFaV04wVEc5aFpHVnlPaUJEWVc0bmRDQndZWEp6WlNBaUlDc2daU0FySUNJdUlpd2dkUzV0WlhOellXZGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHTXViV1YwWVdSaGRHRTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaG9JRDA5UFNCMmIybGtJREFnZkh3Z2FDNTBlWEJsSUQwOVBTQjJiMmxrSURBZ2ZId2dhQzUwZVhCbExuUnZURzkzWlhKRFlYTmxLQ2tnUFQwOUlDSm5aVzl0WlhSeWVTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dRMkZ1SjNRZ2JHOWhaQ0FpSUNzZ1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NpNXdZWEp6WlNoakxDQjBLVHNLSUNBZ0lDQWdJQ0I5TENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUdGemVXNWpJR3h2WVdSQmMzbHVZeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TENCcElEMGdkR2hwY3k1d1lYUm9JRDA5UFNBaUlpQS9JRWR6TG1WNGRISmhZM1JWY214Q1lYTmxLR1VwSURvZ2RHaHBjeTV3WVhSb093b2dJQ0FnSUNBZ0lIUm9hWE11Y21WemIzVnlZMlZRWVhSb0lEMGdkR2hwY3k1eVpYTnZkWEpqWlZCaGRHZ2dmSHdnYVRzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5QlpkQ2gwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lISXVjMlYwVUdGMGFDaDBhR2x6TG5CaGRHZ3BMQ0J5TG5ObGRGSmxjWFZsYzNSSVpXRmtaWElvZEdocGN5NXlaWEYxWlhOMFNHVmhaR1Z5S1N3Z2NpNXpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9kR2hwY3k1M2FYUm9RM0psWkdWdWRHbGhiSE1wT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWVhkaGFYUWdjaTVzYjJGa1FYTjVibU1vWlN3Z2RDa3NJR0VnUFNCS1UwOU9MbkJoY25ObEtHOHBMQ0JzSUQwZ1lTNXRaWFJoWkdGMFlUc0tJQ0FnSUNBZ0lDQnBaaUFvYkNBOVBUMGdkbTlwWkNBd0lIeDhJR3d1ZEhsd1pTQTlQVDBnZG05cFpDQXdJSHg4SUd3dWRIbHdaUzUwYjB4dmQyVnlRMkZ6WlNncElEMDlQU0FpWjJWdmJXVjBjbmtpS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWxSSVVrVkZMazlpYW1WamRFeHZZV1JsY2pvZ1EyRnVKM1FnYkc5aFpDQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGM1lXbDBJRzR1Y0dGeWMyVkJjM2x1WXloaEtUc0tJQ0FnSUgwS0lDQWdJSEJoY25ObEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVjR0Z5YzJWQmJtbHRZWFJwYjI1ektHVXVZVzVwYldGMGFXOXVjeWtzSUdrZ1BTQjBhR2x6TG5CaGNuTmxVMmhoY0dWektHVXVjMmhoY0dWektTd2djaUE5SUhSb2FYTXVjR0Z5YzJWSFpXOXRaWFJ5YVdWektHVXVaMlZ2YldWMGNtbGxjeXdnYVNrc0lHOGdQU0IwYUdsekxuQmhjbk5sU1cxaFoyVnpLR1V1YVcxaFoyVnpMQ0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlIUW9ZeWs3Q2lBZ0lDQWdJQ0FnZlNrc0lHRWdQU0IwYUdsekxuQmhjbk5sVkdWNGRIVnlaWE1vWlM1MFpYaDBkWEpsY3l3Z2J5a3NJR3dnUFNCMGFHbHpMbkJoY25ObFRXRjBaWEpwWVd4ektHVXViV0YwWlhKcFlXeHpMQ0JoS1N3Z1l5QTlJSFJvYVhNdWNHRnljMlZQWW1wbFkzUW9aUzV2WW1wbFkzUXNJSElzSUd3c0lHRXNJRzRwTENCb0lEMGdkR2hwY3k1d1lYSnpaVk5yWld4bGRHOXVjeWhsTG5OclpXeGxkRzl1Y3l3Z1l5azdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZbWx1WkZOclpXeGxkRzl1Y3loakxDQm9LU3dnZENBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaQ0JwYmlCdktXbG1JQ2h2VzJSZElHbHVjM1JoYm1ObGIyWWdTRlJOVEVsdFlXZGxSV3hsYldWdWRDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkU0E5SUNFd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZFNBOVBUMGdJVEVnSmlZZ2RDaGpLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR003Q2lBZ0lDQjlDaUFnSUNCaGMzbHVZeUJ3WVhKelpVRnplVzVqS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y0dGeWMyVkJibWx0WVhScGIyNXpLR1V1WVc1cGJXRjBhVzl1Y3lrc0lHNGdQU0IwYUdsekxuQmhjbk5sVTJoaGNHVnpLR1V1YzJoaGNHVnpLU3dnYVNBOUlIUm9hWE11Y0dGeWMyVkhaVzl0WlhSeWFXVnpLR1V1WjJWdmJXVjBjbWxsY3l3Z2Jpa3NJSElnUFNCaGQyRnBkQ0IwYUdsekxuQmhjbk5sU1cxaFoyVnpRWE41Ym1Nb1pTNXBiV0ZuWlhNcExDQnZJRDBnZEdocGN5NXdZWEp6WlZSbGVIUjFjbVZ6S0dVdWRHVjRkSFZ5WlhNc0lISXBMQ0JoSUQwZ2RHaHBjeTV3WVhKelpVMWhkR1Z5YVdGc2N5aGxMbTFoZEdWeWFXRnNjeXdnYnlrc0lHd2dQU0IwYUdsekxuQmhjbk5sVDJKcVpXTjBLR1V1YjJKcVpXTjBMQ0JwTENCaExDQnZMQ0IwS1N3Z1l5QTlJSFJvYVhNdWNHRnljMlZUYTJWc1pYUnZibk1vWlM1emEyVnNaWFJ2Ym5Nc0lHd3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1KcGJtUlRhMlZzWlhSdmJuTW9iQ3dnWXlrc0lHdzdDaUFnSUNCOUNpQWdJQ0J3WVhKelpWTm9ZWEJsY3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjdmVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnZG05cFpDQXdLU0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnWlM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCWWRDZ3BMbVp5YjIxS1UwOU9LR1ZiYmwwcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwVzNJdWRYVnBaRjBnUFNCeU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2REc0tJQ0FnSUgwS0lDQWdJSEJoY25ObFUydGxiR1YwYjI1ektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUh0OUxDQnBJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FXWWdLSFF1ZEhKaGRtVnljMlVvWm5WdVkzUnBiMjRvY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5TG1selFtOXVaU0FtSmlBb2FWdHlMblYxYVdSZElEMGdjaWs3Q2lBZ0lDQWdJQ0FnZlNrc0lHVWdJVDA5SUhadmFXUWdNQ2tnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdVdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1WlhjZ1lXOG9LUzVtY205dFNsTlBUaWhsVzNKZExDQnBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JsdGhMblYxYVdSZElEMGdZVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzQ3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVWRsYjIxbGRISnBaWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdlMzA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNWxkeUJWYURzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhMQ0JzSUQwZ1pWdHlYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaHNMblI1Y0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lrSjFabVpsY2tkbGIyMWxkSEo1SWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0VnUFNCcExuQmhjbk5sS0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pIWlc5dFpYUnllU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dWR2hsSUd4bFoyRmplU0JIWlc5dFpYUnllU0IwZVhCbElHbHpJRzV2SUd4dmJtZGxjaUJ6ZFhCd2IzSjBaV1F1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3d1ZEhsd1pTQnBiaUIyWXlBL0lHRWdQU0IyWTF0c0xuUjVjR1ZkTG1aeWIyMUtVMDlPS0d3c0lIUXBJRG9nWTI5dWMyOXNaUzUzWVhKdUtHQlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1YzNWd2NHOXlkR1ZrSUdkbGIyMWxkSEo1SUhSNWNHVWdJaVI3YkM1MGVYQmxmU0pnS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFdWRYVnBaQ0E5SUd3dWRYVnBaQ3dnYkM1dVlXMWxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHRXVibUZ0WlNBOUlHd3VibUZ0WlNrc0lHRXVhWE5DZFdabVpYSkhaVzl0WlhSeWVTQTlQVDBnSVRBZ0ppWWdiQzUxYzJWeVJHRjBZU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGhMblZ6WlhKRVlYUmhJRDBnYkM1MWMyVnlSR0YwWVNrc0lHNWJiQzUxZFdsa1hTQTlJR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNDdDaUFnSUNCOUNpQWdJQ0J3WVhKelpVMWhkR1Z5YVdGc2N5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCN2ZTd2dhU0E5SUh0OU93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ2VtZzdDaUFnSUNBZ0lDQWdJQ0FnSUhJdWMyVjBWR1Y0ZEhWeVpYTW9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREFzSUdFZ1BTQmxMbXhsYm1kMGFEc2dieUE4SUdFN0lHOHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR1ZiYjEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQzUwZVhCbElEMDlQU0FpVFhWc2RHbE5ZWFJsY21saGJDSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBN0lHZ2dQQ0JzTG0xaGRHVnlhV0ZzY3k1c1pXNW5kR2c3SUdnckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JDNXRZWFJsY21saGJITmJhRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzViZFM1MWRXbGtYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaHVXM1V1ZFhWcFpGMGdQU0J5TG5CaGNuTmxLSFVwS1N3Z1l5NXdkWE5vS0c1YmRTNTFkV2xrWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsYmJDNTFkV2xrWFNBOUlHTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2JsdHNMblYxYVdSZElEMDlQU0IyYjJsa0lEQWdKaVlnS0c1YmJDNTFkV2xrWFNBOUlISXVjR0Z5YzJVb2JDa3BMQ0JwVzJ3dWRYVnBaRjBnUFNCdVcyd3VkWFZwWkYwN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVUZ1YVcxaGRHbHZibk1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2UzMDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJR1V1YkdWdVozUm9PeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1ZiYmwwc0lISWdQU0JNY2k1d1lYSnpaU2hwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkRnR5TG5WMWFXUmRJRDBnY2pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlVsdFlXZGxjeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TENCcElEMGdlMzBzSUhJN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2J5aHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxtMWhibUZuWlhJdWFYUmxiVk4wWVhKMEtHd3BMQ0J5TG14dllXUW9iQ3dnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNoc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z2RtOXBaQ0F3TENCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNHViV0Z1WVdkbGNpNXBkR1Z0UlhKeWIzSW9iQ2tzSUc0dWJXRnVZV2RsY2k1cGRHVnRSVzVrS0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1lTaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdiQ0E5UFNBaWMzUnlhVzVuSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCc0xDQm9JRDBnTDE0b1hDOWNMeWw4S0Z0aExYcGRLem9vWEM5Y0x5ay9LUzlwTG5SbGMzUW9ZeWtnUHlCaklEb2diaTV5WlhOdmRYSmpaVkJoZEdnZ0t5QmpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHOG9hQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnYkM1a1lYUmhJRDhnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2dkMmtvYkM1MGVYQmxMQ0JzTG1SaGRHRXBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHd3VkMmxrZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUd3dWFHVnBaMmgwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdkbTlwWkNBd0lDWW1JR1V1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJRzVsZHlCNllTaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlJRzVsZHlCU2NpaHNLU3dnY2k1elpYUkRjbTl6YzA5eWFXZHBiaWgwYUdsekxtTnliM056VDNKcFoybHVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNQ3dnYUNBOUlHVXViR1Z1WjNSb095QmpJRHdnYURzZ1l5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdaVnRqWFN3Z1pDQTlJSFV1ZFhKc093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1pDa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFczVXVkWFZwWkYwZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdMQ0J0SUQwZ1pDNXNaVzVuZEdnN0lHWWdQQ0J0T3lCbUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlHUmJabDBzSUhZZ1BTQmhLSGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IySUNFOVBTQnVkV3hzSUNZbUlDaDJJR2x1YzNSaGJtTmxiMllnU0ZSTlRFbHRZV2RsUld4bGJXVnVkQ0EvSUdsYmRTNTFkV2xrWFM1d2RYTm9LSFlwSURvZ2FWdDFMblYxYVdSZExuQjFjMmdvYm1WM0lIRnVLSFl1WkdGMFlTd2dkaTUzYVdSMGFDd2dkaTVvWldsbmFIUXBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmpFZ1BTQmhLSFV1ZFhKc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtTVNBaFBUMGdiblZzYkNBbUppQW9hVnQxTG5WMWFXUmRJRDBnWmpFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwT3dvZ0lDQWdmUW9nSUNBZ1lYTjVibU1nY0dGeWMyVkpiV0ZuWlhOQmMzbHVZeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMQ0J1SUQwZ2UzMHNJR2s3Q2lBZ0lDQWdJQ0FnWVhONWJtTWdablZ1WTNScGIyNGdjaWh2S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnYnlBOVBTQWljM1J5YVc1bklpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnZMQ0JzSUQwZ0wxNG9YQzljTHlsOEtGdGhMWHBkS3pvb1hDOWNMeWsvS1M5cExuUmxjM1FvWVNrZ1B5QmhJRG9nZEM1eVpYTnZkWEpqWlZCaGRHZ2dLeUJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0YzWVdsMElHa3ViRzloWkVGemVXNWpLR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVjBkWEp1SUc4dVpHRjBZU0EvSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSaGRHRTZJSGRwS0c4dWRIbHdaU3dnYnk1a1lYUmhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQnZMbmRwWkhSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCdkxtaGxhV2RvZEFvZ0lDQWdJQ0FnSUNBZ0lDQjlJRG9nYm5Wc2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01DQW1KaUJsTG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVNBOUlHNWxkeUJTY2loMGFHbHpMbTFoYm1GblpYSXBMQ0JwTG5ObGRFTnliM056VDNKcFoybHVLSFJvYVhNdVkzSnZjM05QY21sbmFXNHBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdMQ0JoSUQwZ1pTNXNaVzVuZEdnN0lHOGdQQ0JoT3lCdkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQmxXMjlkTENCaklEMGdiQzUxY213N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoaktTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1YmJDNTFkV2xrWFNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQXNJSFVnUFNCakxteGxibWQwYURzZ2FDQThJSFU3SUdnckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1kxdG9YU3dnWmlBOUlHRjNZV2wwSUhJb1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWWdJVDA5SUc1MWJHd2dKaVlnS0dZZ2FXNXpkR0Z1WTJWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MElEOGdibHRzTG5WMWFXUmRMbkIxYzJnb1ppa2dPaUJ1VzJ3dWRYVnBaRjB1Y0hWemFDaHVaWGNnY1c0b1ppNWtZWFJoTENCbUxuZHBaSFJvTENCbUxtaGxhV2RvZENrcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9NU0E5SUdGM1lXbDBJSElvYkM1MWNtd3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdneElDRTlQU0J1ZFd4c0lDWW1JQ2h1VzJ3dWRYVnBaRjBnUFNCb01TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0N0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlZSbGVIUjFjbVZ6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ1S0hJc0lHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSNWNHVnZaaUJ5SUQwOUlDSnVkVzFpWlhJaUlEOGdjaUE2SUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjaTV3WVhKelpWUmxlSFIxY21VNklFTnZibk4wWVc1MElITm9iM1ZzWkNCaVpTQnBiaUJ1ZFcxbGNtbGpJR1p2Y20wdUlpd2djaWtzSUc5YmNsMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCbExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnWlZ0eVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1cGJXRm5aU0E5UFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWduVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lCT2J5QWlhVzFoWjJVaUlITndaV05wWm1sbFpDQm1iM0luTENCaExuVjFhV1FwTENCMFcyRXVhVzFoWjJWZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0JwYldGblpTSXNJR0V1YVcxaFoyVXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ3dnWXlBOUlIUmJZUzVwYldGblpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUVGeWNtRjVMbWx6UVhKeVlYa29ZeWtnUHlBb2JDQTlJRzVsZHlCcmFTaGpLU3dnWXk1c1pXNW5kR2dnUFQwOUlEWWdKaVlnS0d3dWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrcElEb2dLR01nSmlZZ1l5NWtZWFJoSUQ4Z2JDQTlJRzVsZHlCeGJpaGpMbVJoZEdFc0lHTXVkMmxrZEdnc0lHTXVhR1ZwWjJoMEtTQTZJR3dnUFNCdVpYY2diM1FvWXlrc0lHTWdKaVlnS0d3dWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrcExDQnNMblYxYVdRZ1BTQmhMblYxYVdRc0lHRXVibUZ0WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG01aGJXVWdQU0JoTG01aGJXVXBMQ0JoTG0xaGNIQnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzV0WVhCd2FXNW5JRDBnYmloaExtMWhjSEJwYm1jc0lHUjVLU2tzSUdFdWIyWm1jMlYwSUNFOVBTQjJiMmxrSURBZ0ppWWdiQzV2Wm1aelpYUXVabkp2YlVGeWNtRjVLR0V1YjJabWMyVjBLU3dnWVM1eVpYQmxZWFFnSVQwOUlIWnZhV1FnTUNBbUppQnNMbkpsY0dWaGRDNW1jbTl0UVhKeVlYa29ZUzV5WlhCbFlYUXBMQ0JoTG1ObGJuUmxjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHd3VZMlZ1ZEdWeUxtWnliMjFCY25KaGVTaGhMbU5sYm5SbGNpa3NJR0V1Y205MFlYUnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzV5YjNSaGRHbHZiaUE5SUdFdWNtOTBZWFJwYjI0cExDQmhMbmR5WVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1M2NtRndVeUE5SUc0b1lTNTNjbUZ3V3pCZExDQlRZeWtzSUd3dWQzSmhjRlFnUFNCdUtHRXVkM0poY0ZzeFhTd2dVMk1wS1N3Z1lTNW1iM0p0WVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1bWIzSnRZWFFnUFNCaExtWnZjbTFoZENrc0lHRXVkSGx3WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG5SNWNHVWdQU0JoTG5SNWNHVXBMQ0JoTG1WdVkyOWthVzVuSUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1Wlc1amIyUnBibWNnUFNCaExtVnVZMjlrYVc1bktTd2dZUzV0YVc1R2FXeDBaWElnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzV0YVc1R2FXeDBaWElnUFNCdUtHRXViV2x1Um1sc2RHVnlMQ0JVWXlrcExDQmhMbTFoWjBacGJIUmxjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHNMbTFoWjBacGJIUmxjaUE5SUc0b1lTNXRZV2RHYVd4MFpYSXNJRlJqS1Nrc0lHRXVZVzVwYzI5MGNtOXdlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHNMbUZ1YVhOdmRISnZjSGtnUFNCaExtRnVhWE52ZEhKdmNIa3BMQ0JoTG1ac2FYQlpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VabXhwY0ZrZ1BTQmhMbVpzYVhCWktTd2dZUzV3Y21WdGRXeDBhWEJzZVVGc2NHaGhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VjSEpsYlhWc2RHbHdiSGxCYkhCb1lTQTlJR0V1Y0hKbGJYVnNkR2x3YkhsQmJIQm9ZU2tzSUdFdWRXNXdZV05yUVd4cFoyNXRaVzUwSUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1ZFc1d1lXTnJRV3hwWjI1dFpXNTBJRDBnWVM1MWJuQmhZMnRCYkdsbmJtMWxiblFwTENCaExuVnpaWEpFWVhSaElDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dWRYTmxja1JoZEdFZ1BTQmhMblZ6WlhKRVlYUmhLU3dnYVZ0aExuVjFhV1JkSUQwZ2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHazdDaUFnSUNCOUNpQWdJQ0J3WVhKelpVOWlhbVZqZENobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHODdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZU2hrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBXMlJkSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklGVnVaR1ZtYVc1bFpDQm5aVzl0WlhSeWVTSXNJR1FwTENCMFcyUmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJzS0dRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWkNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQTlJREFzSUhnZ1BTQmtMbXhsYm1kMGFEc2diU0E4SUhnN0lHMHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdaRnR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmx0MlhTQTlQVDBnZG05cFpDQXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUJWYm1SbFptbHVaV1FnYldGMFpYSnBZV3dpTENCMktTd2daaTV3ZFhOb0tHNWJkbDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVXMlJkSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklGVnVaR1ZtYVc1bFpDQnRZWFJsY21saGJDSXNJR1FwTENCdVcyUmRPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHTW9aQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FWdGtYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lCVmJtUmxabWx1WldRZ2RHVjRkSFZ5WlNJc0lHUXBMQ0JwVzJSZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYUN3Z2RUc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTNTBlWEJsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVUyTmxibVVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJ1Ynl3Z1pTNWlZV05yWjNKdmRXNWtJQ0U5UFNCMmIybGtJREFnSmlZZ0tFNTFiV0psY2k1cGMwbHVkR1ZuWlhJb1pTNWlZV05yWjNKdmRXNWtLU0EvSUc4dVltRmphMmR5YjNWdVpDQTlJRzVsZHlCaFpTaGxMbUpoWTJ0bmNtOTFibVFwSURvZ2J5NWlZV05yWjNKdmRXNWtJRDBnWXlobExtSmhZMnRuY205MWJtUXBLU3dnWlM1bGJuWnBjbTl1YldWdWRDQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtVnVkbWx5YjI1dFpXNTBJRDBnWXlobExtVnVkbWx5YjI1dFpXNTBLU2tzSUdVdVptOW5JQ0U5UFNCMmIybGtJREFnSmlZZ0tHVXVabTluTG5SNWNHVWdQVDA5SUNKR2IyY2lJRDhnYnk1bWIyY2dQU0J1WlhjZ1FuSW9aUzVtYjJjdVkyOXNiM0lzSUdVdVptOW5MbTVsWVhJc0lHVXVabTluTG1aaGNpa2dPaUJsTG1adlp5NTBlWEJsSUQwOVBTQWlSbTluUlhod01pSWdKaVlnS0c4dVptOW5JRDBnYm1WM0lFNXlLR1V1Wm05bkxtTnZiRzl5TENCbExtWnZaeTVrWlc1emFYUjVLU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbEJsY25Od1pXTjBhWFpsUTJGdFpYSmhJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2dkWFFvWlM1bWIzWXNJR1V1WVhOd1pXTjBMQ0JsTG01bFlYSXNJR1V1Wm1GeUtTd2daUzVtYjJOMWN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtWnZZM1Z6SUQwZ1pTNW1iMk4xY3lrc0lHVXVlbTl2YlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5wdmIyMGdQU0JsTG5wdmIyMHBMQ0JsTG1acGJHMUhZWFZuWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1acGJHMUhZWFZuWlNBOUlHVXVabWxzYlVkaGRXZGxLU3dnWlM1bWFXeHRUMlptYzJWMElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVptbHNiVTltWm5ObGRDQTlJR1V1Wm1sc2JVOW1abk5sZENrc0lHVXVkbWxsZHlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5acFpYY2dQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5acFpYY3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlBjblJvYjJkeVlYQm9hV05EWVcxbGNtRWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QkdjaWhsTG14bFpuUXNJR1V1Y21sbmFIUXNJR1V1ZEc5d0xDQmxMbUp2ZEhSdmJTd2daUzV1WldGeUxDQmxMbVpoY2lrc0lHVXVlbTl2YlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5wdmIyMGdQU0JsTG5wdmIyMHBMQ0JsTG5acFpYY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NTJhV1YzSUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNTJhV1YzS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpUVcxaWFXVnVkRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ2NXRW9aUzVqYjJ4dmNpd2daUzVwYm5SbGJuTnBkSGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa1JwY21WamRHbHZibUZzVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QlhZU2hsTG1OdmJHOXlMQ0JsTG1sdWRHVnVjMmwwZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVUc5cGJuUk1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdibVYzSUVkaEtHVXVZMjlzYjNJc0lHVXVhVzUwWlc1emFYUjVMQ0JsTG1ScGMzUmhibU5sTENCbExtUmxZMkY1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pTWldOMFFYSmxZVXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ1dHRW9aUzVqYjJ4dmNpd2daUzVwYm5SbGJuTnBkSGtzSUdVdWQybGtkR2dzSUdVdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pUY0c5MFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJJWVNobExtTnZiRzl5TENCbExtbHVkR1Z1YzJsMGVTd2daUzVrYVhOMFlXNWpaU3dnWlM1aGJtZHNaU3dnWlM1d1pXNTFiV0p5WVN3Z1pTNWtaV05oZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpU0dWdGFYTndhR1Z5WlV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2dWV0VvWlM1amIyeHZjaXdnWlM1bmNtOTFibVJEYjJ4dmNpd2daUzVwYm5SbGJuTnBkSGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa3hwWjJoMFVISnZZbVVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJJY2lncExtWnliMjFLVTA5T0tHVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsTnJhVzV1WldSTlpYTm9Jam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2dnUFNCaEtHVXVaMlZ2YldWMGNua3BMQ0IxSUQwZ2JDaGxMbTFoZEdWeWFXRnNLU3dnYnlBOUlHNWxkeUJ6Ynlob0xDQjFLU3dnWlM1aWFXNWtUVzlrWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1KcGJtUk5iMlJsSUQwZ1pTNWlhVzVrVFc5a1pTa3NJR1V1WW1sdVpFMWhkSEpwZUNBaFBUMGdkbTlwWkNBd0lDWW1JRzh1WW1sdVpFMWhkSEpwZUM1bWNtOXRRWEp5WVhrb1pTNWlhVzVrVFdGMGNtbDRLU3dnWlM1emEyVnNaWFJ2YmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5OclpXeGxkRzl1SUQwZ1pTNXphMlZzWlhSdmJpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVRXVnphQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvSUQwZ1lTaGxMbWRsYjIxbGRISjVLU3dnZFNBOUlHd29aUzV0WVhSbGNtbGhiQ2tzSUc4Z1BTQnVaWGNnYzNRb2FDd2dkU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlTVzV6ZEdGdVkyVmtUV1Z6YUNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb0lEMGdZU2hsTG1kbGIyMWxkSEo1S1N3Z2RTQTlJR3dvWlM1dFlYUmxjbWxoYkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdVdVkyOTFiblFzSUdZZ1BTQmxMbWx1YzNSaGJtTmxUV0YwY21sNExDQnRJRDBnWlM1cGJuTjBZVzVqWlVOdmJHOXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QjRZU2hvTENCMUxDQmtLU3dnYnk1cGJuTjBZVzVqWlUxaGRISnBlQ0E5SUc1bGR5QlliaWh1WlhjZ1JteHZZWFF6TWtGeWNtRjVLR1l1WVhKeVlYa3BMQ0F4Tmlrc0lHMGdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXBibk4wWVc1alpVTnZiRzl5SUQwZ2JtVjNJRmh1S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvYlM1aGNuSmhlU2tzSUcwdWFYUmxiVk5wZW1VcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKTVQwUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QmlhRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSk1hVzVsSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnYjI0b1lTaGxMbWRsYjIxbGRISjVLU3dnYkNobExtMWhkR1Z5YVdGc0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVRHbHVaVXh2YjNBaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCNVlTaGhLR1V1WjJWdmJXVjBjbmtwTENCc0tHVXViV0YwWlhKcFlXd3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSk1hVzVsVTJWbmJXVnVkSE1pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUIzZENoaEtHVXVaMlZ2YldWMGNua3BMQ0JzS0dVdWJXRjBaWEpwWVd3cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUWIybHVkRU5zYjNWa0lqb0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVRzlwYm5Seklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ2VuSW9ZU2hsTG1kbGIyMWxkSEo1S1N3Z2JDaGxMbTFoZEdWeWFXRnNLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVM0J5YVhSbElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ2NtOG9iQ2hsTG0xaGRHVnlhV0ZzS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpUjNKdmRYQWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QklianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkNiMjVsSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnYjI4N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnVG1VN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2h2TG5WMWFXUWdQU0JsTG5WMWFXUXNJR1V1Ym1GdFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtNWhiV1VnUFNCbExtNWhiV1VwTENCbExtMWhkSEpwZUNBaFBUMGdkbTlwWkNBd0lEOGdLRzh1YldGMGNtbDRMbVp5YjIxQmNuSmhlU2hsTG0xaGRISnBlQ2tzSUdVdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNCbExtMWhkSEpwZUVGMWRHOVZjR1JoZEdVcExDQnZMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdKaVlnYnk1dFlYUnlhWGd1WkdWamIyMXdiM05sS0c4dWNHOXphWFJwYjI0c0lHOHVjWFZoZEdWeWJtbHZiaXdnYnk1elkyRnNaU2twSURvZ0tHVXVjRzl6YVhScGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlCdkxuQnZjMmwwYVc5dUxtWnliMjFCY25KaGVTaGxMbkJ2YzJsMGFXOXVLU3dnWlM1eWIzUmhkR2x2YmlBaFBUMGdkbTlwWkNBd0lDWW1JRzh1Y205MFlYUnBiMjR1Wm5KdmJVRnljbUY1S0dVdWNtOTBZWFJwYjI0cExDQmxMbkYxWVhSbGNtNXBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQnZMbkYxWVhSbGNtNXBiMjR1Wm5KdmJVRnljbUY1S0dVdWNYVmhkR1Z5Ym1sdmJpa3NJR1V1YzJOaGJHVWdJVDA5SUhadmFXUWdNQ0FtSmlCdkxuTmpZV3hsTG1aeWIyMUJjbkpoZVNobExuTmpZV3hsS1Nrc0lHVXVZMkZ6ZEZOb1lXUnZkeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbU5oYzNSVGFHRmtiM2NnUFNCbExtTmhjM1JUYUdGa2IzY3BMQ0JsTG5KbFkyVnBkbVZUYUdGa2IzY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXlaV05sYVhabFUyaGhaRzkzSUQwZ1pTNXlaV05sYVhabFUyaGhaRzkzS1N3Z1pTNXphR0ZrYjNjZ0ppWWdLR1V1YzJoaFpHOTNMbUpwWVhNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1emFHRmtiM2N1WW1saGN5QTlJR1V1YzJoaFpHOTNMbUpwWVhNcExDQmxMbk5vWVdSdmR5NXViM0p0WVd4Q2FXRnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVjMmhoWkc5M0xtNXZjbTFoYkVKcFlYTWdQU0JsTG5Ob1lXUnZkeTV1YjNKdFlXeENhV0Z6S1N3Z1pTNXphR0ZrYjNjdWNtRmthWFZ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1YzJoaFpHOTNMbkpoWkdsMWN5QTlJR1V1YzJoaFpHOTNMbkpoWkdsMWN5a3NJR1V1YzJoaFpHOTNMbTFoY0ZOcGVtVWdJVDA5SUhadmFXUWdNQ0FtSmlCdkxuTm9ZV1J2ZHk1dFlYQlRhWHBsTG1aeWIyMUJjbkpoZVNobExuTm9ZV1J2ZHk1dFlYQlRhWHBsS1N3Z1pTNXphR0ZrYjNjdVkyRnRaWEpoSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1YzJoaFpHOTNMbU5oYldWeVlTQTlJSFJvYVhNdWNHRnljMlZQWW1wbFkzUW9aUzV6YUdGa2IzY3VZMkZ0WlhKaEtTa3BMQ0JsTG5acGMybGliR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTUyYVhOcFlteGxJRDBnWlM1MmFYTnBZbXhsS1N3Z1pTNW1jblZ6ZEhWdFEzVnNiR1ZrSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Wm5KMWMzUjFiVU4xYkd4bFpDQTlJR1V1Wm5KMWMzUjFiVU4xYkd4bFpDa3NJR1V1Y21WdVpHVnlUM0prWlhJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1eVpXNWtaWEpQY21SbGNpQTlJR1V1Y21WdVpHVnlUM0prWlhJcExDQmxMblZ6WlhKRVlYUmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVkWE5sY2tSaGRHRWdQU0JsTG5WelpYSkVZWFJoS1N3Z1pTNXNZWGxsY25NZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1c1lYbGxjbk11YldGemF5QTlJR1V1YkdGNVpYSnpLU3dnWlM1amFHbHNaSEpsYmlBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtNU0E5SUdVdVkyaHBiR1J5Wlc0N0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaakVnUFNBd095Qm1NU0E4SUdReExteGxibWQwYURzZ1pqRXJLeWx2TG1Ga1pDaDBhR2x6TG5CaGNuTmxUMkpxWldOMEtHUXhXMll4WFN3Z2RDd2diaXdnYVN3Z2Npa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pTNWhibWx0WVhScGIyNXpJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdReUlEMGdaUzVoYm1sdFlYUnBiMjV6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWXlJRDBnTURzZ1pqSWdQQ0JrTWk1c1pXNW5kR2c3SUdZeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcweElEMGdaREpiWmpKZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5NWhibWx0WVhScGIyNXpMbkIxYzJnb2NsdHRNVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNobExuUjVjR1VnUFQwOUlDSk1UMFFpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1WVhWMGIxVndaR0YwWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1GMWRHOVZjR1JoZEdVZ1BTQmxMbUYxZEc5VmNHUmhkR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkRNZ1BTQmxMbXhsZG1Wc2N6c0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtTXlBOUlEQTdJR1l6SUR3Z1pETXViR1Z1WjNSb095Qm1NeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRNaUE5SUdRelcyWXpYU3dnZUNBOUlHOHVaMlYwVDJKcVpXTjBRbmxRY205d1pYSjBlU2dpZFhWcFpDSXNJRzB5TG05aWFtVmpkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0SUNFOVBTQjJiMmxrSURBZ0ppWWdieTVoWkdSTVpYWmxiQ2g0TENCdE1pNWthWE4wWVc1alpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4N0NpQWdJQ0I5Q2lBZ0lDQmlhVzVrVTJ0bGJHVjBiMjV6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JQWW1wbFkzUXVhMlY1Y3loMEtTNXNaVzVuZEdnZ0lUMDlJREFnSmlZZ1pTNTBjbUYyWlhKelpTaG1kVzVqZEdsdmJpaHVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1TG1selUydHBibTVsWkUxbGMyZ2dQVDA5SUNFd0lDWW1JRzR1YzJ0bGJHVjBiMjRnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMFcyNHVjMnRsYkdWMGIyNWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0E5UFQwZ2RtOXBaQ0F3SUQ4Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNSTWIyRmtaWEk2SUU1dklITnJaV3hsZEc5dUlHWnZkVzVrSUhkcGRHZ2dWVlZKUkRvaUxDQnVMbk5yWld4bGRHOXVLU0E2SUc0dVltbHVaQ2hwTENCdUxtSnBibVJOWVhSeWFYZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0J6WlhSVVpYaDBkWEpsVUdGMGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQXVjMlYwVkdWNGRIVnlaVkJoZEdnb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV6WlhSU1pYTnZkWEpqWlZCaGRHZ29LUzRpS1N3Z2RHaHBjeTV6WlhSU1pYTnZkWEpqWlZCaGRHZ29aU2s3Q2lBZ0lDQjlDbjBzSUdSNUlEMGdld29nSUNBZ1ZWWk5ZWEJ3YVc1bk9pQm9ZU3dLSUNBZ0lFTjFZbVZTWldac1pXTjBhVzl1VFdGd2NHbHVaem9nUW1rc0NpQWdJQ0JEZFdKbFVtVm1jbUZqZEdsdmJrMWhjSEJwYm1jNklIcHBMQW9nSUNBZ1JYRjFhWEpsWTNSaGJtZDFiR0Z5VW1WbWJHVmpkR2x2YmsxaGNIQnBibWM2SUVSekxBb2dJQ0FnUlhGMWFYSmxZM1JoYm1kMWJHRnlVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJRVp6TEFvZ0lDQWdRM1ZpWlZWV1VtVm1iR1ZqZEdsdmJrMWhjSEJwYm1jNklGQnlMQW9nSUNBZ1EzVmlaVlZXVW1WbWNtRmpkR2x2YmsxaGNIQnBibWM2SUZkekNuMHNJRk5qSUQwZ2V3b2dJQ0FnVW1Wd1pXRjBWM0poY0hCcGJtYzZJRTV6TEFvZ0lDQWdRMnhoYlhCVWIwVmtaMlZYY21Gd2NHbHVaem9nZG5Rc0NpQWdJQ0JOYVhKeWIzSmxaRkpsY0dWaGRGZHlZWEJ3YVc1bk9pQkNjd3A5TENCVVl5QTlJSHNLSUNBZ0lFNWxZWEpsYzNSR2FXeDBaWEk2SUhKMExBb2dJQ0FnVG1WaGNtVnpkRTFwY0cxaGNFNWxZWEpsYzNSR2FXeDBaWEk2SUhSaExBb2dJQ0FnVG1WaGNtVnpkRTFwY0cxaGNFeHBibVZoY2tacGJIUmxjam9nYm1Fc0NpQWdJQ0JNYVc1bFlYSkdhV3gwWlhJNklIUjBMQW9nSUNBZ1RHbHVaV0Z5VFdsd2JXRndUbVZoY21WemRFWnBiSFJsY2pvZ1YyTXNDaUFnSUNCTWFXNWxZWEpOYVhCdFlYQk1hVzVsWVhKR2FXeDBaWEk2SUZWcENuMHNJRTlvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUNBZ0lDQjBlWEJsYjJZZ1kzSmxZWFJsU1cxaFoyVkNhWFJ0WVhBZ1BpQWlkU0lnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiV0ZuWlVKcGRHMWhjRXh2WVdSbGNqb2dZM0psWVhSbFNXMWhaMlZDYVhSdFlYQW9LU0J1YjNRZ2MzVndjRzl5ZEdWa0xpSXBMQ0IwZVhCbGIyWWdabVYwWTJnZ1BpQWlkU0lnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiV0ZuWlVKcGRHMWhjRXh2WVdSbGNqb2dabVYwWTJnb0tTQnViM1FnYzNWd2NHOXlkR1ZrTGlJcExDQjBhR2x6TG05d2RHbHZibk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WlcxMWJIUnBjR3g1UVd4d2FHRTZJQ0p1YjI1bElnb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6WlhSUGNIUnBiMjV6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2Y0hScGIyNXpJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUdVZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWlNBOUlDSWlLU3dnZEdocGN5NXdZWFJvSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1VnUFNCMGFHbHpMbkJoZEdnZ0t5QmxLU3dnWlNBOUlIUm9hWE11YldGdVlXZGxjaTV5WlhOdmJIWmxWVkpNS0dVcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnYnlBOUlFNXBMbWRsZENobEtUc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2NpNXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLU3dnYzJWMFZHbHRaVzkxZENobWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBbUppQjBLRzhwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlMQ0F3S1N3Z2J6c0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIdDlPd29nSUNBZ0lDQWdJR0V1WTNKbFpHVnVkR2xoYkhNZ1BTQjBhR2x6TG1OeWIzTnpUM0pwWjJsdUlEMDlQU0FpWVc1dmJubHRiM1Z6SWlBL0lDSnpZVzFsTFc5eWFXZHBiaUlnT2lBaWFXNWpiSFZrWlNJc0lHRXVhR1ZoWkdWeWN5QTlJSFJvYVhNdWNtVnhkV1Z6ZEVobFlXUmxjaXdnWm1WMFkyZ29aU3dnWVNrdWRHaGxiaWhtZFc1amRHbHZiaWhzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnNMbUpzYjJJb0tUc0tJQ0FnSUNBZ0lDQjlLUzUwYUdWdUtHWjFibU4wYVc5dUtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOeVpXRjBaVWx0WVdkbFFtbDBiV0Z3S0d3c0lFOWlhbVZqZEM1aGMzTnBaMjRvY2k1dmNIUnBiMjV6TENCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjbE53WVdObFEyOXVkbVZ5YzJsdmJqb2dJbTV2Ym1VaUNpQWdJQ0FnSUNBZ0lDQWdJSDBwS1RzS0lDQWdJQ0FnSUNCOUtTNTBhR1Z1S0daMWJtTjBhVzl1S0d3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnVG1rdVlXUmtLR1VzSUd3cExDQjBJQ1ltSUhRb2JDa3NJSEl1YldGdVlXZGxjaTVwZEdWdFJXNWtLR1VwT3dvZ0lDQWdJQ0FnSUgwcExtTmhkR05vS0daMWJtTjBhVzl1S0d3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVNBbUppQnBLR3dwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ5Y205eUtHVXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUtTd2djaTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1RzS0lDQWdJSDBLZlRzS1QyZ3VjSEp2ZEc5MGVYQmxMbWx6U1cxaFoyVkNhWFJ0WVhCTWIyRmtaWElnUFNBaE1Ec0tkbUZ5SUZOekxDQklhQ0E5SUhzS0lDQWdJR2RsZEVOdmJuUmxlSFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVGN5QTlQVDBnZG05cFpDQXdJQ1ltSUNoVGN5QTlJRzVsZHlBb2QybHVaRzkzTGtGMVpHbHZRMjl1ZEdWNGRDQjhmQ0IzYVc1a2IzY3VkMlZpYTJsMFFYVmthVzlEYjI1MFpYaDBLU2tzSUZOek93b2dJQ0FnZlN3S0lDQWdJSE5sZEVOdmJuUmxlSFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQlRjeUE5SUhNN0NpQWdJQ0I5Q24wc0lHdG9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnYnlBOUlHNWxkeUJaZENoMGFHbHpMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJRzh1YzJWMFVtVnpjRzl1YzJWVWVYQmxLQ0poY25KaGVXSjFabVpsY2lJcExDQnZMbk5sZEZCaGRHZ29kR2hwY3k1d1lYUm9LU3dnYnk1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0hSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2lrc0lHOHVjMlYwVjJsMGFFTnlaV1JsYm5ScFlXeHpLSFJvYVhNdWQybDBhRU55WldSbGJuUnBZV3h6S1N3Z2J5NXNiMkZrS0dVc0lHWjFibU4wYVc5dUtHRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdZUzV6YkdsalpTZ3dLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRWhvTG1kbGRFTnZiblJsZUhRb0tTNWtaV052WkdWQmRXUnBiMFJoZEdFb2JDd2dablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUW9hQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JqWVhSamFDQW9iREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1B5QnBLR3d4S1NBNklHTnZibk52YkdVdVpYSnliM0lvYkRFcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTazdDaUFnSUNCOUNuMHNJRWRvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJJY2lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1SUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2RtOXBaQ0F3TENCdUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNWxkeUJoWlNncExuTmxkQ2hsS1N3Z2NpQTlJRzVsZHlCaFpTZ3BMbk5sZENoMEtTd2dieUE5SUc1bGR5Qk5LR2t1Y2l3Z2FTNW5MQ0JwTG1JcExDQmhJRDBnYm1WM0lFMG9jaTV5TENCeUxtY3NJSEl1WWlrc0lHd2dQU0JOWVhSb0xuTnhjblFvVFdGMGFDNVFTU2tzSUdNZ1BTQnNJQ29nVFdGMGFDNXpjWEowS0M0M05TazdDaUFnSUNBZ0lDQWdkR2hwY3k1emFDNWpiMlZtWm1samFXVnVkSE5iTUYwdVkyOXdlU2h2S1M1aFpHUW9ZU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9iQ2tzSUhSb2FYTXVjMmd1WTI5bFptWnBZMmxsYm5Seld6RmRMbU52Y0hrb2J5a3VjM1ZpS0dFcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0dNcE93b2dJQ0FnZlFwOU93cEhhQzV3Y205MGIzUjVjR1V1YVhOSVpXMXBjM0JvWlhKbFRHbG5hSFJRY205aVpTQTlJQ0V3T3dwMllYSWdWbWdnUFNCamJHRnpjeUJsZUhSbGJtUnpJRWh5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWgyYjJsa0lEQXNJSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYm1WM0lHRmxLQ2t1YzJWMEtHVXBPd29nSUNBZ0lDQWdJSFJvYVhNdWMyZ3VZMjlsWm1acFkybGxiblJ6V3pCZExuTmxkQ2h1TG5Jc0lHNHVaeXdnYmk1aUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lneUlDb2dUV0YwYUM1emNYSjBLRTFoZEdndVVFa3BLVHNLSUNBZ0lIMEtmVHNLVm1ndWNISnZkRzkwZVhCbExtbHpRVzFpYVdWdWRFeHBaMmgwVUhKdlltVWdQU0FoTURzS2RtRnlJRVZqSUQwZ2JtVjNJSEJsTENCQll5QTlJRzVsZHlCd1pTd2dSbTRnUFNCdVpYY2djR1VzSUdaNUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTNSbGNtVnZRMkZ0WlhKaElpd2dkR2hwY3k1aGMzQmxZM1FnUFNBeExDQjBhR2x6TG1WNVpWTmxjQ0E5SUM0d05qUXNJSFJvYVhNdVkyRnRaWEpoVENBOUlHNWxkeUIxZEN3Z2RHaHBjeTVqWVcxbGNtRk1MbXhoZVdWeWN5NWxibUZpYkdVb01Ta3NJSFJvYVhNdVkyRnRaWEpoVEM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVkyRnRaWEpoVWlBOUlHNWxkeUIxZEN3Z2RHaHBjeTVqWVcxbGNtRlNMbXhoZVdWeWN5NWxibUZpYkdVb01pa3NJSFJvYVhNdVkyRnRaWEpoVWk1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVgyTmhZMmhsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjJOMWN6b2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdabTkyT2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNCaGMzQmxZM1E2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bFlYSTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJR1poY2pvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2VtOXZiVG9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnWlhsbFUyVndPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWpZV05vWlRzS0lDQWdJQ0FnSUNCcFppQW9kQzVtYjJOMWN5QWhQVDBnWlM1bWIyTjFjeUI4ZkNCMExtWnZkaUFoUFQwZ1pTNW1iM1lnZkh3Z2RDNWhjM0JsWTNRZ0lUMDlJR1V1WVhOd1pXTjBJQ29nZEdocGN5NWhjM0JsWTNRZ2ZId2dkQzV1WldGeUlDRTlQU0JsTG01bFlYSWdmSHdnZEM1bVlYSWdJVDA5SUdVdVptRnlJSHg4SUhRdWVtOXZiU0FoUFQwZ1pTNTZiMjl0SUh4OElIUXVaWGxsVTJWd0lDRTlQU0IwYUdsekxtVjVaVk5sY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwTG1adlkzVnpJRDBnWlM1bWIyTjFjeXdnZEM1bWIzWWdQU0JsTG1admRpd2dkQzVoYzNCbFkzUWdQU0JsTG1GemNHVmpkQ0FxSUhSb2FYTXVZWE53WldOMExDQjBMbTVsWVhJZ1BTQmxMbTVsWVhJc0lIUXVabUZ5SUQwZ1pTNW1ZWElzSUhRdWVtOXZiU0E5SUdVdWVtOXZiU3dnZEM1bGVXVlRaWEFnUFNCMGFHbHpMbVY1WlZObGNDd2dSbTR1WTI5d2VTaGxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhRdVpYbGxVMlZ3SUM4Z01pd2djaUE5SUdrZ0tpQjBMbTVsWVhJZ0x5QjBMbVp2WTNWekxDQnZJRDBnZEM1dVpXRnlJQ29nVFdGMGFDNTBZVzRvVjI0Z0tpQjBMbVp2ZGlBcUlDNDFLU0F2SUhRdWVtOXZiU3dnWVN3Z2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnUVdNdVpXeGxiV1Z1ZEhOYk1USmRJRDBnTFdrc0lFVmpMbVZzWlcxbGJuUnpXekV5WFNBOUlHa3NJR0VnUFNBdGJ5QXFJSFF1WVhOd1pXTjBJQ3NnY2l3Z2JDQTlJRzhnS2lCMExtRnpjR1ZqZENBcklISXNJRVp1TG1Wc1pXMWxiblJ6V3pCZElEMGdNaUFxSUhRdWJtVmhjaUF2SUNoc0lDMGdZU2tzSUVadUxtVnNaVzFsYm5Seld6aGRJRDBnS0d3Z0t5QmhLU0F2SUNoc0lDMGdZU2tzSUhSb2FYTXVZMkZ0WlhKaFRDNXdjbTlxWldOMGFXOXVUV0YwY21sNExtTnZjSGtvUm00cExDQmhJRDBnTFc4Z0tpQjBMbUZ6Y0dWamRDQXRJSElzSUd3Z1BTQnZJQ29nZEM1aGMzQmxZM1FnTFNCeUxDQkdiaTVsYkdWdFpXNTBjMXN3WFNBOUlESWdLaUIwTG01bFlYSWdMeUFvYkNBdElHRXBMQ0JHYmk1bGJHVnRaVzUwYzFzNFhTQTlJQ2hzSUNzZ1lTa2dMeUFvYkNBdElHRXBMQ0IwYUdsekxtTmhiV1Z5WVZJdWNISnZhbVZqZEdsdmJrMWhkSEpwZUM1amIzQjVLRVp1S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTVqWVcxbGNtRk1MbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29aUzV0WVhSeWFYaFhiM0pzWkNrdWJYVnNkR2x3Ykhrb1FXTXBMQ0IwYUdsekxtTmhiV1Z5WVZJdWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNobExtMWhkSEpwZUZkdmNteGtLUzV0ZFd4MGFYQnNlU2hGWXlrN0NpQWdJQ0I5Q24wc0lGZG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUNFd0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1GMWRHOVRkR0Z5ZENBOUlHVXNJSFJvYVhNdWMzUmhjblJVYVcxbElEMGdNQ3dnZEdocGN5NXZiR1JVYVcxbElEMGdNQ3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaU0E5SURBc0lIUm9hWE11Y25WdWJtbHVaeUE5SUNFeE93b2dJQ0FnZlFvZ0lDQWdjM1JoY25Rb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1emRHRnlkRlJwYldVZ1BTQkRZeWdwTENCMGFHbHpMbTlzWkZScGJXVWdQU0IwYUdsekxuTjBZWEowVkdsdFpTd2dkR2hwY3k1bGJHRndjMlZrVkdsdFpTQTlJREFzSUhSb2FYTXVjblZ1Ym1sdVp5QTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ2MzUnZjQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEVWc1lYQnpaV1JVYVcxbEtDa3NJSFJvYVhNdWNuVnVibWx1WnlBOUlDRXhMQ0IwYUdsekxtRjFkRzlUZEdGeWRDQTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ1oyVjBSV3hoY0hObFpGUnBiV1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwUkdWc2RHRW9LU3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFUmxiSFJoS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ01Ec0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWhkWFJ2VTNSaGNuUWdKaVlnSVhSb2FYTXVjblZ1Ym1sdVp5a2djbVYwZFhKdUlIUm9hWE11YzNSaGNuUW9LU3dnTURzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1eWRXNXVhVzVuS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdRMk1vS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaU0E5SUNoMElDMGdkR2hwY3k1dmJHUlVhVzFsS1NBdklERmxNeXdnZEdocGN5NXZiR1JVYVcxbElEMGdkQ3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaU0FyUFNCbE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdRMk1vS1NCN0NpQWdJQ0J5WlhSMWNtNGdLSFI1Y0dWdlppQndaWEptYjNKdFlXNWpaU0ErSUNKMUlpQS9JRVJoZEdVZ09pQndaWEptYjNKdFlXNWpaU2t1Ym05M0tDazdDbjBLZG1GeUlFNXVJRDBnYm1WM0lFMHNJRXhqSUQwZ2JtVjNJR2QwTENCd2VTQTlJRzVsZHlCTkxDQkNiaUE5SUc1bGR5Qk5MQ0J0ZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pCZFdScGIweHBjM1JsYm1WeUlpd2dkR2hwY3k1amIyNTBaWGgwSUQwZ1NHZ3VaMlYwUTI5dWRHVjRkQ2dwTENCMGFHbHpMbWRoYVc0Z1BTQjBhR2x6TG1OdmJuUmxlSFF1WTNKbFlYUmxSMkZwYmlncExDQjBhR2x6TG1kaGFXNHVZMjl1Ym1WamRDaDBhR2x6TG1OdmJuUmxlSFF1WkdWemRHbHVZWFJwYjI0cExDQjBhR2x6TG1acGJIUmxjaUE5SUc1MWJHd3NJSFJvYVhNdWRHbHRaVVJsYkhSaElEMGdNQ3dnZEdocGN5NWZZMnh2WTJzZ1BTQnVaWGNnVjJnN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJKYm5CMWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxSbWxzZEdWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1acGJIUmxjaUFoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVuWVdsdUxtUnBjMk52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWElwTENCMGFHbHpMbVpwYkhSbGNpNWthWE5qYjI1dVpXTjBLSFJvYVhNdVkyOXVkR1Y0ZEM1a1pYTjBhVzVoZEdsdmJpa3NJSFJvYVhNdVoyRnBiaTVqYjI1dVpXTjBLSFJvYVhNdVkyOXVkR1Y0ZEM1a1pYTjBhVzVoZEdsdmJpa3NJSFJvYVhNdVptbHNkR1Z5SUQwZ2JuVnNiQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeDBaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabWxzZEdWeU93b2dJQ0FnZlFvZ0lDQWdjMlYwUm1sc2RHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW1hV3gwWlhJZ0lUMDlJRzUxYkd3Z1B5QW9kR2hwY3k1bllXbHVMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhJcExDQjBhR2x6TG1acGJIUmxjaTVrYVhOamIyNXVaV04wS0hSb2FYTXVZMjl1ZEdWNGRDNWtaWE4wYVc1aGRHbHZiaWtwSURvZ2RHaHBjeTVuWVdsdUxtUnBjMk52Ym01bFkzUW9kR2hwY3k1amIyNTBaWGgwTG1SbGMzUnBibUYwYVc5dUtTd2dkR2hwY3k1bWFXeDBaWElnUFNCbExDQjBhR2x6TG1kaGFXNHVZMjl1Ym1WamRDaDBhR2x6TG1acGJIUmxjaWtzSUhSb2FYTXVabWxzZEdWeUxtTnZibTVsWTNRb2RHaHBjeTVqYjI1MFpYaDBMbVJsYzNScGJtRjBhVzl1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFMWhjM1JsY2xadmJIVnRaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1TG1kaGFXNHVkbUZzZFdVN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJOWVhOMFpYSldiMngxYldVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kaGFXNHVaMkZwYmk1elpYUlVZWEpuWlhSQmRGUnBiV1VvWlN3Z2RHaHBjeTVqYjI1MFpYaDBMbU4xY25KbGJuUlVhVzFsTENBdU1ERXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpiMjUwWlhoMExteHBjM1JsYm1WeUxDQnVJRDBnZEdocGN5NTFjRHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUwYVcxbFJHVnNkR0VnUFNCMGFHbHpMbDlqYkc5amF5NW5aWFJFWld4MFlTZ3BMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtMbVJsWTI5dGNHOXpaU2hPYml3Z1RHTXNJSEI1S1N3Z1FtNHVjMlYwS0RBc0lEQXNJQzB4S1M1aGNIQnNlVkYxWVhSbGNtNXBiMjRvVEdNcExDQjBMbkJ2YzJsMGFXOXVXQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlNBcklIUm9hWE11ZEdsdFpVUmxiSFJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJ2YzJsMGFXOXVXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaE9iaTU0TENCcEtTd2dkQzV3YjNOcGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9UbTR1ZVN3Z2FTa3NJSFF1Y0c5emFYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRTV1TG5vc0lHa3BMQ0IwTG1admNuZGhjbVJZTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRUp1TG5nc0lHa3BMQ0IwTG1admNuZGhjbVJaTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRUp1TG5rc0lHa3BMQ0IwTG1admNuZGhjbVJhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRUp1TG5vc0lHa3BMQ0IwTG5Wd1dDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNodUxuZ3NJR2twTENCMExuVndXUzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaHVMbmtzSUdrcExDQjBMblZ3V2k1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2h1TG5vc0lHa3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQjBMbk5sZEZCdmMybDBhVzl1S0U1dUxuZ3NJRTV1TG5rc0lFNXVMbm9wTENCMExuTmxkRTl5YVdWdWRHRjBhVzl1S0VKdUxuZ3NJRUp1TG5rc0lFSnVMbm9zSUc0dWVDd2diaTU1TENCdUxub3BPd29nSUNBZ2ZRcDlMQ0JhWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUVhWa2FXOGlMQ0IwYUdsekxteHBjM1JsYm1WeUlEMGdaU3dnZEdocGN5NWpiMjUwWlhoMElEMGdaUzVqYjI1MFpYaDBMQ0IwYUdsekxtZGhhVzRnUFNCMGFHbHpMbU52Ym5SbGVIUXVZM0psWVhSbFIyRnBiaWdwTENCMGFHbHpMbWRoYVc0dVkyOXVibVZqZENobExtZGxkRWx1Y0hWMEtDa3BMQ0IwYUdsekxtRjFkRzl3YkdGNUlEMGdJVEVzSUhSb2FYTXVZblZtWm1WeUlEMGdiblZzYkN3Z2RHaHBjeTVrWlhSMWJtVWdQU0F3TENCMGFHbHpMbXh2YjNBZ1BTQWhNU3dnZEdocGN5NXNiMjl3VTNSaGNuUWdQU0F3TENCMGFHbHpMbXh2YjNCRmJtUWdQU0F3TENCMGFHbHpMbTltWm5ObGRDQTlJREFzSUhSb2FYTXVaSFZ5WVhScGIyNGdQU0IyYjJsa0lEQXNJSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxJRDBnTVN3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFNBaE1Td2dkR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BTQWhNQ3dnZEdocGN5NXpiM1Z5WTJVZ1BTQnVkV3hzTENCMGFHbHpMbk52ZFhKalpWUjVjR1VnUFNBaVpXMXdkSGtpTENCMGFHbHpMbDl6ZEdGeWRHVmtRWFFnUFNBd0xDQjBhR2x6TGw5d2NtOW5jbVZ6Y3lBOUlEQXNJSFJvYVhNdVgyTnZibTVsWTNSbFpDQTlJQ0V4TENCMGFHbHpMbVpwYkhSbGNuTWdQU0JiWFRzS0lDQWdJSDBLSUNBZ0lHZGxkRTkxZEhCMWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRtOWtaVk52ZFhKalpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMGdJVEVzSUhSb2FYTXVjMjkxY21ObFZIbHdaU0E5SUNKaGRXUnBiMDV2WkdVaUxDQjBhR2x6TG5OdmRYSmpaU0E5SUdVc0lIUm9hWE11WTI5dWJtVmpkQ2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRXVmthV0ZGYkdWdFpXNTBVMjkxY21ObEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BTQWhNU3dnZEdocGN5NXpiM1Z5WTJWVWVYQmxJRDBnSW0xbFpHbGhUbTlrWlNJc0lIUm9hWE11YzI5MWNtTmxJRDBnZEdocGN5NWpiMjUwWlhoMExtTnlaV0YwWlUxbFpHbGhSV3hsYldWdWRGTnZkWEpqWlNobEtTd2dkR2hwY3k1amIyNXVaV04wS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUk5aV1JwWVZOMGNtVmhiVk52ZFhKalpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMGdJVEVzSUhSb2FYTXVjMjkxY21ObFZIbHdaU0E5SUNKdFpXUnBZVk4wY21WaGJVNXZaR1VpTENCMGFHbHpMbk52ZFhKalpTQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amNtVmhkR1ZOWldScFlWTjBjbVZoYlZOdmRYSmpaU2hsS1N3Z2RHaHBjeTVqYjI1dVpXTjBLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSQ2RXWm1aWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUoxWm1abGNpQTlJR1VzSUhSb2FYTXVjMjkxY21ObFZIbHdaU0E5SUNKaWRXWm1aWElpTENCMGFHbHpMbUYxZEc5d2JHRjVJQ1ltSUhSb2FYTXVjR3hoZVNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NHeGhlU2hsSUQwZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWx6VUd4aGVXbHVaeUE5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ1FYVmthVzhnYVhNZ1lXeHlaV0ZrZVNCd2JHRjVhVzVuTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWhoYzFCc1lYbGlZV05yUTI5dWRISnZiQ0E5UFQwZ0lURXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ2RHaHBjeUJCZFdScGJ5Qm9ZWE1nYm04Z2NHeGhlV0poWTJzZ1kyOXVkSEp2YkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxsOXpkR0Z5ZEdWa1FYUWdQU0IwYUdsekxtTnZiblJsZUhRdVkzVnljbVZ1ZEZScGJXVWdLeUJsT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpiMjUwWlhoMExtTnlaV0YwWlVKMVptWmxjbE52ZFhKalpTZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbUoxWm1abGNpQTlJSFJvYVhNdVluVm1abVZ5TENCMExteHZiM0FnUFNCMGFHbHpMbXh2YjNBc0lIUXViRzl2Y0ZOMFlYSjBJRDBnZEdocGN5NXNiMjl3VTNSaGNuUXNJSFF1Ykc5dmNFVnVaQ0E5SUhSb2FYTXViRzl2Y0VWdVpDd2dkQzV2Ym1WdVpHVmtJRDBnZEdocGN5NXZia1Z1WkdWa0xtSnBibVFvZEdocGN5a3NJSFF1YzNSaGNuUW9kR2hwY3k1ZmMzUmhjblJsWkVGMExDQjBhR2x6TGw5d2NtOW5jbVZ6Y3lBcklIUm9hWE11YjJabWMyVjBMQ0IwYUdsekxtUjFjbUYwYVc5dUtTd2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BTQWhNQ3dnZEdocGN5NXpiM1Z5WTJVZ1BTQjBMQ0IwYUdsekxuTmxkRVJsZEhWdVpTaDBhR2x6TG1SbGRIVnVaU2tzSUhSb2FYTXVjMlYwVUd4aGVXSmhZMnRTWVhSbEtIUm9hWE11Y0d4aGVXSmhZMnRTWVhSbEtTd2dkR2hwY3k1amIyNXVaV04wS0NrN0NpQWdJQ0I5Q2lBZ0lDQndZWFZ6WlNncElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUhSb2FYTWdRWFZrYVc4Z2FHRnpJRzV2SUhCc1lYbGlZV05ySUdOdmJuUnliMnd1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhOUWJHRjVhVzVuSUQwOVBTQWhNQ0FtSmlBb2RHaHBjeTVmY0hKdlozSmxjM01nS3owZ1RXRjBhQzV0WVhnb2RHaHBjeTVqYjI1MFpYaDBMbU4xY25KbGJuUlVhVzFsSUMwZ2RHaHBjeTVmYzNSaGNuUmxaRUYwTENBd0tTQXFJSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxMQ0IwYUdsekxteHZiM0FnUFQwOUlDRXdJQ1ltSUNoMGFHbHpMbDl3Y205bmNtVnpjeUE5SUhSb2FYTXVYM0J5YjJkeVpYTnpJQ1VnS0hSb2FYTXVaSFZ5WVhScGIyNGdmSHdnZEdocGN5NWlkV1ptWlhJdVpIVnlZWFJwYjI0cEtTd2dkR2hwY3k1emIzVnlZMlV1YzNSdmNDZ3BMQ0IwYUdsekxuTnZkWEpqWlM1dmJtVnVaR1ZrSUQwZ2JuVnNiQ3dnZEdocGN5NXBjMUJzWVhscGJtY2dQU0FoTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRHOXdLQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dkR2hwY3lCQmRXUnBieUJvWVhNZ2JtOGdjR3hoZVdKaFkyc2dZMjl1ZEhKdmJDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZjSEp2WjNKbGMzTWdQU0F3TENCMGFHbHpMbk52ZFhKalpTNXpkRzl3S0Nrc0lIUm9hWE11YzI5MWNtTmxMbTl1Wlc1a1pXUWdQU0J1ZFd4c0xDQjBhR2x6TG1selVHeGhlV2x1WnlBOUlDRXhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl1Ym1WamRDZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVtYVd4MFpYSnpMbXhsYm1kMGFDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1emIzVnlZMlV1WTI5dWJtVmpkQ2gwYUdsekxtWnBiSFJsY25OYk1GMHBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdVZ1BTQXhMQ0IwSUQwZ2RHaHBjeTVtYVd4MFpYSnpMbXhsYm1kMGFEc2daU0E4SUhRN0lHVXJLeWwwYUdsekxtWnBiSFJsY25OYlpTQXRJREZkTG1OdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhKelcyVmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVtYVd4MFpYSnpXM1JvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2dnTFNBeFhTNWpiMjV1WldOMEtIUm9hWE11WjJWMFQzVjBjSFYwS0NrcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCMGFHbHpMbk52ZFhKalpTNWpiMjV1WldOMEtIUm9hWE11WjJWMFQzVjBjSFYwS0NrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlqYjI1dVpXTjBaV1FnUFNBaE1Dd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjMk52Ym01bFkzUW9LU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11Wm1sc2RHVnljeTVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWMyOTFjbU5sTG1ScGMyTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSnpXekJkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTVN3Z2RDQTlJSFJvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2c3SUdVZ1BDQjBPeUJsS3lzcGRHaHBjeTVtYVd4MFpYSnpXMlVnTFNBeFhTNWthWE5qYjI1dVpXTjBLSFJvYVhNdVptbHNkR1Z5YzF0bFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVabWxzZEdWeWMxdDBhR2x6TG1acGJIUmxjbk11YkdWdVozUm9JQzBnTVYwdVpHbHpZMjl1Ym1WamRDaDBhR2x6TG1kbGRFOTFkSEIxZENncEtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2RHaHBjeTV6YjNWeVkyVXVaR2x6WTI5dWJtVmpkQ2gwYUdsekxtZGxkRTkxZEhCMWRDZ3BLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlkyOXVibVZqZEdWa0lEMGdJVEVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeDBaWEp6S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVpwYkhSbGNuTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2FXeDBaWEp6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQjhmQ0FvWlNBOUlGdGRLU3dnZEdocGN5NWZZMjl1Ym1WamRHVmtJRDA5UFNBaE1DQS9JQ2gwYUdsekxtUnBjMk52Ym01bFkzUW9LU3dnZEdocGN5NW1hV3gwWlhKeklEMGdaUzV6YkdsalpTZ3BMQ0IwYUdsekxtTnZibTVsWTNRb0tTa2dPaUIwYUdsekxtWnBiSFJsY25NZ1BTQmxMbk5zYVdObEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJFWlhSMWJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1SbGRIVnVaU0E5SUdVc0lIUm9hWE11YzI5MWNtTmxMbVJsZEhWdVpTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkR2hwY3k1cGMxQnNZWGxwYm1jZ1BUMDlJQ0V3SUNZbUlIUm9hWE11YzI5MWNtTmxMbVJsZEhWdVpTNXpaWFJVWVhKblpYUkJkRlJwYldVb2RHaHBjeTVrWlhSMWJtVXNJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTd2dMakF4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFUmxkSFZ1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWlhSMWJtVTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeDBaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMlYwUm1sc2RHVnljeWdwV3pCZE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm1sc2RHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJHYVd4MFpYSnpLR1VnUHlCYkNpQWdJQ0FnSUNBZ0lDQWdJR1VLSUNBZ0lDQWdJQ0JkSURvZ1cxMHBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVHeGhlV0poWTJ0U1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UVhWa2FXODZJSFJvYVhNZ1FYVmthVzhnYUdGeklHNXZJSEJzWVhsaVlXTnJJR052Ym5SeWIyd3VJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR3hoZVdKaFkydFNZWFJsSUQwZ1pTd2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BUMDlJQ0V3SUNZbUlIUm9hWE11YzI5MWNtTmxMbkJzWVhsaVlXTnJVbUYwWlM1elpYUlVZWEpuWlhSQmRGUnBiV1VvZEdocGN5NXdiR0Y1WW1GamExSmhkR1VzSUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU3dnTGpBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRkJzWVhsaVlXTnJVbUYwWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3YkdGNVltRmphMUpoZEdVN0NpQWdJQ0I5Q2lBZ0lDQnZia1Z1WkdWa0tDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFYTlFiR0Y1YVc1bklEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCblpYUk1iMjl3S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWhoYzFCc1lYbGlZV05yUTI5dWRISnZiQ0E5UFQwZ0lURWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nZEdocGN5QkJkV1JwYnlCb1lYTWdibThnY0d4aGVXSmhZMnNnWTI5dWRISnZiQzRpS1N3Z0lURXBJRG9nZEdocGN5NXNiMjl3T3dvZ0lDQWdmUW9nSUNBZ2MyVjBURzl2Y0NobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhR0Z6VUd4aGVXSmhZMnREYjI1MGNtOXNJRDA5UFNBaE1Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrRjFaR2x2T2lCMGFHbHpJRUYxWkdsdklHaGhjeUJ1YnlCd2JHRjVZbUZqYXlCamIyNTBjbTlzTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG14dmIzQWdQU0JsTENCMGFHbHpMbWx6VUd4aGVXbHVaeUE5UFQwZ0lUQWdKaVlnS0hSb2FYTXVjMjkxY21ObExteHZiM0FnUFNCMGFHbHpMbXh2YjNBcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBURzl2Y0ZOMFlYSjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXNiMjl3VTNSaGNuUWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHOXZjRVZ1WkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ykc5dmNFVnVaQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUldiMngxYldVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJGcGJpNW5ZV2x1TG5aaGJIVmxPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZtOXNkVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdUxtZGhhVzR1YzJWMFZHRnlaMlYwUVhSVWFXMWxLR1VzSUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU3dnTGpBeEtTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z2VtNGdQU0J1WlhjZ1RTd2dVbU1nUFNCdVpYY2daM1FzSUdkNUlEMGdibVYzSUUwc0lGVnVJRDBnYm1WM0lFMHNJSGg1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJhWVNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CaGJtNWxjaUE5SUhSb2FYTXVZMjl1ZEdWNGRDNWpjbVZoZEdWUVlXNXVaWElvS1N3Z2RHaHBjeTV3WVc1dVpYSXVjR0Z1Ym1sdVowMXZaR1ZzSUQwZ0lraFNWRVlpTENCMGFHbHpMbkJoYm01bGNpNWpiMjV1WldOMEtIUm9hWE11WjJGcGJpazdDaUFnSUNCOUNpQWdJQ0JuWlhSUGRYUndkWFFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0Z1Ym1WeU93b2dJQ0FnZlFvZ0lDQWdaMlYwVW1WbVJHbHpkR0Z1WTJVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlMbkpsWmtScGMzUmhibU5sT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbVZtUkdsemRHRnVZMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXlaV1pFYVhOMFlXNWpaU0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlNiMnhzYjJabVJtRmpkRzl5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXliMnhzYjJabVJtRmpkRzl5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbTlzYkc5bVprWmhZM1J2Y2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlMbkp2Ykd4dlptWkdZV04wYjNJZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUkdsemRHRnVZMlZOYjJSbGJDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lXNXVaWEl1WkdsemRHRnVZMlZOYjJSbGJEc0tJQ0FnSUgwS0lDQWdJSE5sZEVScGMzUmhibU5sVFc5a1pXd29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhibTVsY2k1a2FYTjBZVzVqWlUxdlpHVnNJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFMWhlRVJwYzNSaGJtTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhibTVsY2k1dFlYaEVhWE4wWVc1alpUc0tJQ0FnSUgwS0lDQWdJSE5sZEUxaGVFUnBjM1JoYm1ObEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lXNXVaWEl1YldGNFJHbHpkR0Z1WTJVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUkdseVpXTjBhVzl1WVd4RGIyNWxLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lXNXVaWEl1WTI5dVpVbHVibVZ5UVc1bmJHVWdQU0JsTENCMGFHbHpMbkJoYm01bGNpNWpiMjVsVDNWMFpYSkJibWRzWlNBOUlIUXNJSFJvYVhNdWNHRnVibVZ5TG1OdmJtVlBkWFJsY2tkaGFXNGdQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h6ZFhCbGNpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU3dnZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFd0lDWW1JSFJvYVhNdWFYTlFiR0Y1YVc1bklEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhSb2FYTXViV0YwY21sNFYyOXliR1F1WkdWamIyMXdiM05sS0hwdUxDQlNZeXdnWjNrcExDQlZiaTV6WlhRb01Dd2dNQ3dnTVNrdVlYQndiSGxSZFdGMFpYSnVhVzl1S0ZKaktUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y0dGdWJtVnlPd29nSUNBZ0lDQWdJR2xtSUNoMExuQnZjMmwwYVc5dVdDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU0FySUhSb2FYTXViR2x6ZEdWdVpYSXVkR2x0WlVSbGJIUmhPd29nSUNBZ0lDQWdJQ0FnSUNCMExuQnZjMmwwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoNmJpNTRMQ0J1S1N3Z2RDNXdiM05wZEdsdmJsa3ViR2x1WldGeVVtRnRjRlJ2Vm1Gc2RXVkJkRlJwYldVb2VtNHVlU3dnYmlrc0lIUXVjRzl6YVhScGIyNWFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtIcHVMbm9zSUc0cExDQjBMbTl5YVdWdWRHRjBhVzl1V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2hWYmk1NExDQnVLU3dnZEM1dmNtbGxiblJoZEdsdmJsa3ViR2x1WldGeVVtRnRjRlJ2Vm1Gc2RXVkJkRlJwYldVb1ZXNHVlU3dnYmlrc0lIUXViM0pwWlc1MFlYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLRlZ1TG5vc0lHNHBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjBMbk5sZEZCdmMybDBhVzl1S0hwdUxuZ3NJSHB1TG5rc0lIcHVMbm9wTENCMExuTmxkRTl5YVdWdWRHRjBhVzl1S0ZWdUxuZ3NJRlZ1TG5rc0lGVnVMbm9wT3dvZ0lDQWdmUXA5TENCeGFDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeU1EUTRLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtRnVZV3g1YzJWeUlEMGdaUzVqYjI1MFpYaDBMbU55WldGMFpVRnVZV3g1YzJWeUtDa3NJSFJvYVhNdVlXNWhiSGx6WlhJdVptWjBVMmw2WlNBOUlIUXNJSFJvYVhNdVpHRjBZU0E5SUc1bGR5QlZhVzUwT0VGeWNtRjVLSFJvYVhNdVlXNWhiSGx6WlhJdVpuSmxjWFZsYm1ONVFtbHVRMjkxYm5RcExDQmxMbWRsZEU5MWRIQjFkQ2dwTG1OdmJtNWxZM1FvZEdocGN5NWhibUZzZVhObGNpazdDaUFnSUNCOUNpQWdJQ0JuWlhSR2NtVnhkV1Z1WTNsRVlYUmhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnVZV3g1YzJWeUxtZGxkRUo1ZEdWR2NtVnhkV1Z1WTNsRVlYUmhLSFJvYVhNdVpHRjBZU2tzSUhSb2FYTXVaR0YwWVRzS0lDQWdJSDBLSUNBZ0lHZGxkRUYyWlhKaFoyVkdjbVZ4ZFdWdVkza29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0F3TENCMElEMGdkR2hwY3k1blpYUkdjbVZ4ZFdWdVkzbEVZWFJoS0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElIUXViR1Z1WjNSb095QnVLeXNwWlNBclBTQjBXMjVkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUM4Z2RDNXNaVzVuZEdnN0NpQWdJQ0I5Q24wc0lGaG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdkR2hwY3k1aWFXNWthVzVuSUQwZ1pTd2dkR2hwY3k1MllXeDFaVk5wZW1VZ1BTQnVPd29nSUNBZ0lDQWdJR3hsZENCcExDQnlMQ0J2T3dvZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwS1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWNYVmhkR1Z5Ym1sdmJpSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnZEdocGN5NWZjMnhsY25Bc0lISWdQU0IwYUdsekxsOXpiR1Z5Y0VGa1pHbDBhWFpsTENCdklEMGdkR2hwY3k1ZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVWRjFZWFJsY201cGIyNHNJSFJvYVhNdVluVm1abVZ5SUQwZ2JtVjNJRVpzYjJGME5qUkJjbkpoZVNodUlDb2dOaWtzSUhSb2FYTXVYM2R2Y210SmJtUmxlQ0E5SURVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpYzNSeWFXNW5Jam9LSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpWW05dmJDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnZEdocGN5NWZjMlZzWldOMExDQnlJRDBnZEdocGN5NWZjMlZzWldOMExDQnZJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVTkwYUdWeUxDQjBhR2x6TG1KMVptWmxjaUE5SUc1bGR5QkJjbkpoZVNodUlDb2dOU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCMGFHbHpMbDlzWlhKd0xDQnlJRDBnZEdocGN5NWZiR1Z5Y0VGa1pHbDBhWFpsTENCdklEMGdkR2hwY3k1ZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVVNTFiV1Z5YVdNc0lIUm9hWE11WW5WbVptVnlJRDBnYm1WM0lFWnNiMkYwTmpSQmNuSmhlU2h1SUNvZ05TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmlBOUlHa3NJSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmtGa1pHbDBhWFpsSUQwZ2Npd2dkR2hwY3k1ZmMyVjBTV1JsYm5ScGRIa2dQU0J2TENCMGFHbHpMbDl2Y21sblNXNWtaWGdnUFNBekxDQjBhR2x6TGw5aFpHUkpibVJsZUNBOUlEUXNJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZENBOUlEQXNJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZEVGa1pHbDBhWFpsSUQwZ01Dd2dkR2hwY3k1MWMyVkRiM1Z1ZENBOUlEQXNJSFJvYVhNdWNtVm1aWEpsYm1ObFEyOTFiblFnUFNBd093b2dJQ0FnZlFvZ0lDQWdZV05qZFcxMWJHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1KMVptWmxjaXdnYVNBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCeUlEMGdaU0FxSUdrZ0t5QnBMQ0J2SUQwZ2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBPd29nSUNBZ0lDQWdJR2xtSUNodklEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdJVDA5SUdrN0lDc3JZU2x1VzNJZ0t5QmhYU0E5SUc1YllWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BTQjBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z0t6MGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0V4SUQwZ2RDQXZJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDIxcGVFSjFabVpsY2xKbFoybHZiaWh1TENCeUxDQXdMQ0JoTVN3Z2FTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdVkzVnRkV3hoZEdsMlpWZGxhV2RvZENBOUlHODdDaUFnSUNCOUNpQWdJQ0JoWTJOMWJYVnNZWFJsUVdSa2FYUnBkbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVpZFdabVpYSXNJRzRnUFNCMGFHbHpMblpoYkhWbFUybDZaU3dnYVNBOUlHNGdLaUIwYUdsekxsOWhaR1JKYm1SbGVEc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OMWJYVnNZWFJwZG1WWFpXbG5hSFJCWkdScGRHbDJaU0E5UFQwZ01DQW1KaUIwYUdsekxsOXpaWFJKWkdWdWRHbDBlU2dwTENCMGFHbHpMbDl0YVhoQ2RXWm1aWEpTWldkcGIyNUJaR1JwZEdsMlpTaDBMQ0JwTENBd0xDQmxMQ0J1S1N3Z2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBRV1JrYVhScGRtVWdLejBnWlRzS0lDQWdJSDBLSUNBZ0lHRndjR3g1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCdUlEMGdkR2hwY3k1aWRXWm1aWElzSUdrZ1BTQmxJQ29nZENBcklIUXNJSElnUFNCMGFHbHpMbU4xYlhWc1lYUnBkbVZYWldsbmFIUXNJRzhnUFNCMGFHbHpMbU4xYlhWc1lYUnBkbVZYWldsbmFIUkJaR1JwZEdsMlpTd2dZU0E5SUhSb2FYTXVZbWx1WkdsdVp6c0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWpkVzExYkdGMGFYWmxWMlZwWjJoMElEMGdNQ3dnZEdocGN5NWpkVzExYkdGMGFYWmxWMlZwWjJoMFFXUmthWFJwZG1VZ1BTQXdMQ0J5SUR3Z01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhRZ0tpQjBhR2x6TGw5dmNtbG5TVzVrWlhnN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmlodUxDQnBMQ0JzTENBeElDMGdjaXdnZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHOGdQaUF3SUNZbUlIUm9hWE11WDIxcGVFSjFabVpsY2xKbFoybHZia0ZrWkdsMGFYWmxLRzRzSUdrc0lIUm9hWE11WDJGa1pFbHVaR1Y0SUNvZ2RDd2dNU3dnZENrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc01TQTlJSFFzSUdNZ1BTQjBJQ3NnZERzZ2JERWdJVDA5SUdNN0lDc3JiREVwYVdZZ0tHNWJiREZkSUNFOVBTQnVXMnd4SUNzZ2RGMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1lTNXpaWFJXWVd4MVpTaHVMQ0JwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjMkYyWlU5eWFXZHBibUZzVTNSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtSnBibVJwYm1jc0lIUWdQU0IwYUdsekxtSjFabVpsY2l3Z2JpQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnBJRDBnYmlBcUlIUm9hWE11WDI5eWFXZEpibVJsZURzS0lDQWdJQ0FnSUNCbExtZGxkRlpoYkhWbEtIUXNJR2twT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlHNHNJRzhnUFNCcE95QnlJQ0U5UFNCdk95QXJLM0lwZEZ0eVhTQTlJSFJiYVNBcklISWdKU0J1WFRzS0lDQWdJQ0FnSUNCMGFHbHpMbDl6WlhSSlpHVnVkR2wwZVNncExDQjBhR2x6TG1OMWJYVnNZWFJwZG1WWFpXbG5hSFFnUFNBd0xDQjBhR2x6TG1OMWJYVnNZWFJwZG1WWFpXbG5hSFJCWkdScGRHbDJaU0E5SURBN0NpQWdJQ0I5Q2lBZ0lDQnlaWE4wYjNKbFQzSnBaMmx1WVd4VGRHRjBaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxJQ29nTXpzS0lDQWdJQ0FnSUNCMGFHbHpMbUpwYm1ScGJtY3VjMlYwVm1Gc2RXVW9kR2hwY3k1aWRXWm1aWElzSUdVcE93b2dJQ0FnZlFvZ0lDQWdYM05sZEVGa1pHbDBhWFpsU1dSbGJuUnBkSGxPZFcxbGNtbGpLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZZV1JrU1c1a1pYZ2dLaUIwYUdsekxuWmhiSFZsVTJsNlpTd2dkQ0E5SUdVZ0t5QjBhR2x6TG5aaGJIVmxVMmw2WlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQmxPeUJ1SUR3Z2REc2diaXNyS1hSb2FYTXVZblZtWm1WeVcyNWRJRDBnTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJCWkdScGRHbDJaVWxrWlc1MGFYUjVVWFZoZEdWeWJtbHZiaWdwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDl6WlhSQlpHUnBkR2wyWlVsa1pXNTBhWFI1VG5WdFpYSnBZeWdwTENCMGFHbHpMbUoxWm1abGNsdDBhR2x6TGw5aFpHUkpibVJsZUNBcUlIUm9hWE11ZG1Gc2RXVlRhWHBsSUNzZ00xMGdQU0F4T3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRUZrWkdsMGFYWmxTV1JsYm5ScGRIbFBkR2hsY2lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDI5eWFXZEpibVJsZUNBcUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCMElEMGdkR2hwY3k1ZllXUmtTVzVrWlhnZ0tpQjBhR2x6TG5aaGJIVmxVMmw2WlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z2RHaHBjeTUyWVd4MVpWTnBlbVU3SUc0ckt5bDBhR2x6TG1KMVptWmxjbHQwSUNzZ2JsMGdQU0IwYUdsekxtSjFabVpsY2x0bElDc2dibDA3Q2lBZ0lDQjlDaUFnSUNCZmMyVnNaV04wS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2FTQStQU0F1TlNrZ1ptOXlLR3hsZENCdklEMGdNRHNnYnlBaFBUMGdjanNnS3l0dktXVmJkQ0FySUc5ZElEMGdaVnR1SUNzZ2IxMDdDaUFnSUNCOUNpQWdJQ0JmYzJ4bGNuQW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUdkMExuTnNaWEp3Um14aGRDaGxMQ0IwTENCbExDQjBMQ0JsTENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUY5emJHVnljRUZrWkdsMGFYWmxLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WDNkdmNtdEpibVJsZUNBcUlISTdDaUFnSUNBZ0lDQWdaM1F1YlhWc2RHbHdiSGxSZFdGMFpYSnVhVzl1YzBac1lYUW9aU3dnYnl3Z1pTd2dkQ3dnWlN3Z2Jpa3NJR2QwTG5Oc1pYSndSbXhoZENobExDQjBMQ0JsTENCMExDQmxMQ0J2TENCcEtUc0tJQ0FnSUgwS0lDQWdJRjlzWlhKd0tHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SURFZ0xTQnBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBN0lHRWdJVDA5SUhJN0lDc3JZU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RDQXJJR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVmJiRjBnUFNCbFcyeGRJQ29nYnlBcklHVmJiaUFySUdGZElDb2dhVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCZmJHVnljRUZrWkdsMGFYWmxLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3T3lCdklDRTlQU0J5T3lBcksyOHBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhRZ0t5QnZPd29nSUNBZ0lDQWdJQ0FnSUNCbFcyRmRJRDBnWlZ0aFhTQXJJR1ZiYmlBcklHOWRJQ29nYVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wc0lDUmhJRDBnSWx4Y1cxeGNYVnhjTGpwY1hDOGlMQ0I1ZVNBOUlHNWxkeUJTWldkRmVIQW9JbHNpSUNzZ0pHRWdLeUFpWFNJc0lDSm5JaWtzSUdwaElEMGdJbHRlSWlBcklDUmhJQ3NnSWwwaUxDQjJlU0E5SUNKYlhpSWdLeUFrWVM1eVpYQnNZV05sS0NKY1hDNGlMQ0FpSWlrZ0t5QWlYU0lzSUY5NUlEMGdMeWdvUHpwWFF5dGJYQzg2WFNrcUtTOHVjMjkxY21ObExuSmxjR3hoWTJVb0lsZERJaXdnYW1FcExDQk5lU0E5SUM4b1YwTlBSQ3NwUHk4dWMyOTFjbU5sTG5KbGNHeGhZMlVvSWxkRFQwUWlMQ0IyZVNrc0lHSjVJRDBnTHlnL09sd3VLRmRES3lrb1B6cGNXeWd1S3lsY1hTay9LVDh2TG5OdmRYSmpaUzV5WlhCc1lXTmxLQ0pYUXlJc0lHcGhLU3dnZDNrZ1BTQXZYQzRvVjBNcktTZy9PbHhiS0M0cktWeGRLVDh2TG5OdmRYSmpaUzV5WlhCc1lXTmxLQ0pYUXlJc0lHcGhLU3dnVTNrZ1BTQnVaWGNnVW1WblJYaHdLQ0plSWlBcklGOTVJQ3NnVFhrZ0t5QmllU0FySUhkNUlDc2dJaVFpS1N3Z1ZIa2dQU0JiQ2lBZ0lDQWliV0YwWlhKcFlXd2lMQW9nSUNBZ0ltMWhkR1Z5YVdGc2N5SXNDaUFnSUNBaVltOXVaWE1pQ2wwc0lFcG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVJSHg4SUd0bExuQmhjbk5sVkhKaFkydE9ZVzFsS0hRcE93b2dJQ0FnSUNBZ0lIUm9hWE11WDNSaGNtZGxkRWR5YjNWd0lEMGdaU3dnZEdocGN5NWZZbWx1WkdsdVozTWdQU0JsTG5OMVluTmpjbWxpWlY4b2RDd2dhU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUldZV3gxWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWlhVzVrS0NrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbDkwWVhKblpYUkhjbTkxY0M1dVEyRmphR1ZrVDJKcVpXTjBjMThzSUdrZ1BTQjBhR2x6TGw5aWFXNWthVzVuYzF0dVhUc0tJQ0FnSUNBZ0lDQnBJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNW5aWFJXWVd4MVpTaGxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lITmxkRlpoYkhWbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYMkpwYm1ScGJtZHpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SUhSb2FYTXVYM1JoY21kbGRFZHliM1Z3TG01RFlXTm9aV1JQWW1wbFkzUnpYeXdnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwYmx0cFhTNXpaWFJXWVd4MVpTaGxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lHSnBibVFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDlpYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNCMGFHbHpMbDkwWVhKblpYUkhjbTkxY0M1dVEyRmphR1ZrVDJKcVpXTjBjMThzSUc0Z1BTQmxMbXhsYm1kMGFEc2dkQ0FoUFQwZ2Jqc2dLeXQwS1dWYmRGMHVZbWx1WkNncE93b2dJQ0FnZlFvZ0lDQWdkVzVpYVc1a0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZlltbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdkR2hwY3k1ZmRHRnlaMlYwUjNKdmRYQXVia05oWTJobFpFOWlhbVZqZEhOZkxDQnVJRDBnWlM1c1pXNW5kR2c3SUhRZ0lUMDlJRzQ3SUNzcmRDbGxXM1JkTG5WdVltbHVaQ2dwT3dvZ0lDQWdmUXA5TENCclpTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lIUm9hWE11Y0dGMGFDQTlJSFFzSUhSb2FYTXVjR0Z5YzJWa1VHRjBhQ0E5SUc0Z2ZId2dhMlV1Y0dGeWMyVlVjbUZqYTA1aGJXVW9kQ2tzSUhSb2FYTXVibTlrWlNBOUlHdGxMbVpwYm1ST2IyUmxLR1VzSUhSb2FYTXVjR0Z5YzJWa1VHRjBhQzV1YjJSbFRtRnRaU2tnZkh3Z1pTd2dkR2hwY3k1eWIyOTBUbTlrWlNBOUlHVXNJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5blpYUldZV3gxWlY5MWJtSnZkVzVrTENCMGFHbHpMbk5sZEZaaGJIVmxJRDBnZEdocGN5NWZjMlYwVm1Gc2RXVmZkVzVpYjNWdVpEc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QmpjbVZoZEdVb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDWW1JR1V1YVhOQmJtbHRZWFJwYjI1UFltcGxZM1JIY205MWNDQS9JRzVsZHlCclpTNURiMjF3YjNOcGRHVW9aU3dnZEN3Z2Jpa2dPaUJ1WlhjZ2EyVW9aU3dnZEN3Z2JpazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjMkZ1YVhScGVtVk9iMlJsVG1GdFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1Y21Wd2JHRmpaU2d2WEhNdlp5d2dJbDhpS1M1eVpYQnNZV05sS0hsNUxDQWlJaWs3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nY0dGeWMyVlVjbUZqYTA1aGJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVTNrdVpYaGxZeWhsS1RzS0lDQWdJQ0FnSUNCcFppQW9JWFFwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJEWVc1dWIzUWdjR0Z5YzJVZ2RISmhZMnRPWVcxbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzV2WkdWT1lXMWxPaUIwV3pKZExBb2dJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUk9ZVzFsT2lCMFd6TmRMQW9nSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1JKYm1SbGVEb2dkRnMwWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEp2Y0dWeWRIbE9ZVzFsT2lCMFd6VmRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowZVVsdVpHVjRPaUIwV3paZENpQWdJQ0FnSUNBZ2ZTd2dhU0E5SUc0dWJtOWtaVTVoYldVZ0ppWWdiaTV1YjJSbFRtRnRaUzVzWVhOMFNXNWtaWGhQWmlnaUxpSXBPd29nSUNBZ0lDQWdJR2xtSUNocElDRTlQU0IyYjJsa0lEQWdKaVlnYVNBaFBUMGdMVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVMbTV2WkdWT1lXMWxMbk4xWW5OMGNtbHVaeWhwSUNzZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUZSNUxtbHVaR1Y0VDJZb2Npa2dJVDA5SUMweElDWW1JQ2h1TG01dlpHVk9ZVzFsSUQwZ2JpNXViMlJsVG1GdFpTNXpkV0p6ZEhKcGJtY29NQ3dnYVNrc0lHNHViMkpxWldOMFRtRnRaU0E5SUhJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvYmk1d2NtOXdaWEowZVU1aGJXVWdQVDA5SUc1MWJHd2dmSHdnYmk1d2NtOXdaWEowZVU1aGJXVXViR1Z1WjNSb0lEMDlQU0F3S1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWxCeWIzQmxjblI1UW1sdVpHbHVaem9nWTJGdUlHNXZkQ0J3WVhKelpTQndjbTl3WlhKMGVVNWhiV1VnWm5KdmJTQjBjbUZqYTA1aGJXVTZJQ0lnS3lCbEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1hVzVrVG05a1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLQ0YwSUh4OElIUWdQVDA5SUNJaUlIeDhJSFFnUFQwOUlDSXVJaUI4ZkNCMElEMDlQU0F0TVNCOGZDQjBJRDA5UFNCbExtNWhiV1VnZkh3Z2RDQTlQVDBnWlM1MWRXbGtLU0J5WlhSMWNtNGdaVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXphMlZzWlhSdmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdWMydGxiR1YwYjI0dVoyVjBRbTl1WlVKNVRtRnRaU2gwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c0Z0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlHNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNobExtTm9hV3hrY21WdUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVNU0E5SUdaMWJtTjBhVzl1S0hJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREE3SUc4Z1BDQnlMbXhsYm1kMGFEc2dieXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlISmJiMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0V1Ym1GdFpTQTlQVDBnZENCOGZDQmhMblYxYVdRZ1BUMDlJSFFwSUhKbGRIVnliaUJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2JqRW9ZUzVqYUdsc1pISmxiaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dwSUhKbGRIVnliaUJzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJSDBzSUdrZ1BTQnVNU2hsTG1Ob2FXeGtjbVZ1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drcElISmxkSFZ5YmlCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUY5blpYUldZV3gxWlY5MWJtRjJZV2xzWVdKc1pTZ3BJSHQ5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZkVzVoZG1GcGJHRmliR1VvS1NCN2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDJScGNtVmpkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdaVnQwWFNBOUlIUm9hWE11ZEdGeVoyVjBUMkpxWldOMFczUm9hWE11Y0hKdmNHVnlkSGxPWVcxbFhUc0tJQ0FnSUgwS0lDQWdJRjluWlhSV1lXeDFaVjloY25KaGVTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTUN3Z2NpQTlJRzR1YkdWdVozUm9PeUJwSUNFOVBTQnlPeUFySzJrcFpWdDBLeXRkSUQwZ2JsdHBYVHNLSUNBZ0lIMEtJQ0FnSUY5blpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHVmJkRjBnUFNCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIbGJkR2hwY3k1d2NtOXdaWEowZVVsdVpHVjRYVHNLSUNBZ0lIMEtJQ0FnSUY5blpYUldZV3gxWlY5MGIwRnljbUY1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrdWRHOUJjbkpoZVNobExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5a2FYSmxZM1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWRHRnlaMlYwVDJKcVpXTjBXM1JvYVhNdWNISnZjR1Z5ZEhsT1lXMWxYU0E5SUdWYmRGMDdDaUFnSUNCOUNpQWdJQ0JmYzJWMFZtRnNkV1ZmWkdseVpXTjBYM05sZEU1bFpXUnpWWEJrWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMblJoY21kbGRFOWlhbVZqZEZ0MGFHbHpMbkJ5YjNCbGNuUjVUbUZ0WlYwZ1BTQmxXM1JkTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyUnBjbVZqZEY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkRnQwYUdsekxuQnliM0JsY25SNVRtRnRaVjBnUFNCbFczUmRMQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkQzV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZllYSnlZWGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCdUxteGxibWQwYURzZ2FTQWhQVDBnY2pzZ0t5dHBLVzViYVYwZ1BTQmxXM1FySzEwN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZZWEp5WVhsZmMyVjBUbVZsWkhOVmNHUmhkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCdUxteGxibWQwYURzZ2FTQWhQVDBnY2pzZ0t5dHBLVzViYVYwZ1BTQmxXM1FySzEwN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwWVhKblpYUlBZbXBsWTNRdWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ2JpNXNaVzVuZEdnN0lHa2dJVDA5SUhJN0lDc3JhU2x1VzJsZElEMGdaVnQwS3l0ZE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMExtMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjloY25KaGVVVnNaVzFsYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVWdDBhR2x6TG5CeWIzQmxjblI1U1c1a1pYaGRJRDBnWlZ0MFhUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjloY25KaGVVVnNaVzFsYm5SZmMyVjBUbVZsWkhOVmNHUmhkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVZ0MGFHbHpMbkJ5YjNCbGNuUjVTVzVrWlhoZElEMGdaVnQwWFN3Z2RHaHBjeTUwWVhKblpYUlBZbXBsWTNRdWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVVWc1pXMWxiblJmYzJWMFRXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1VzNSb2FYTXVjSEp2Y0dWeWRIbEpibVJsZUYwZ1BTQmxXM1JkTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZabkp2YlVGeWNtRjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGt1Wm5KdmJVRnljbUY1S0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJaeWIyMUJjbkpoZVY5elpYUk9aV1ZrYzFWd1pHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1TG1aeWIyMUJjbkpoZVNobExDQjBLU3dnZEdocGN5NTBZWEpuWlhSUFltcGxZM1F1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5bWNtOXRRWEp5WVhsZmMyVjBUV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNUxtWnliMjFCY25KaGVTaGxMQ0IwS1N3Z2RHaHBjeTUwWVhKblpYUlBZbXBsWTNRdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYMmRsZEZaaGJIVmxYM1Z1WW05MWJtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WW1sdVpDZ3BMQ0IwYUdsekxtZGxkRlpoYkhWbEtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgzVnVZbTkxYm1Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZbWx1WkNncExDQjBhR2x6TG5ObGRGWmhiSFZsS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWW1sdVpDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdWJtOWtaU3dnZENBOUlIUm9hWE11Y0dGeWMyVmtVR0YwYUN3Z2JpQTlJSFF1YjJKcVpXTjBUbUZ0WlN3Z2FTQTlJSFF1Y0hKdmNHVnlkSGxPWVcxbExDQnlJRDBnZEM1d2NtOXdaWEowZVVsdVpHVjRPd29nSUNBZ0lDQWdJR2xtSUNobElIeDhJQ2hsSUQwZ2EyVXVabWx1WkU1dlpHVW9kR2hwY3k1eWIyOTBUbTlrWlN3Z2RDNXViMlJsVG1GdFpTa2dmSHdnZEdocGN5NXliMjkwVG05a1pTd2dkR2hwY3k1dWIyUmxJRDBnWlNrc0lIUm9hWE11WjJWMFZtRnNkV1VnUFNCMGFHbHpMbDluWlhSV1lXeDFaVjkxYm1GMllXbHNZV0pzWlN3Z2RHaHBjeTV6WlhSV1lXeDFaU0E5SUhSb2FYTXVYM05sZEZaaGJIVmxYM1Z1WVhaaGFXeGhZbXhsTENBaFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklGUnllV2x1WnlCMGJ5QjFjR1JoZEdVZ2JtOWtaU0JtYjNJZ2RISmhZMnM2SUNJZ0t5QjBhR2x6TG5CaGRHZ2dLeUFpSUdKMWRDQnBkQ0IzWVhOdUozUWdabTkxYm1RdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCMExtOWlhbVZqZEVsdVpHVjRPd29nSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0p0WVhSbGNtbGhiSE1pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWlM1dFlYUmxjbWxoYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhiaUJ1YjNRZ1ltbHVaQ0IwYnlCdFlYUmxjbWxoYkNCaGN5QnViMlJsSUdSdlpYTWdibTkwSUdoaGRtVWdZU0J0WVhSbGNtbGhiQzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV1V1YldGMFpYSnBZV3d1YldGMFpYSnBZV3h6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1EyRnVJRzV2ZENCaWFXNWtJSFJ2SUcxaGRHVnlhV0ZzTG0xaGRHVnlhV0ZzY3lCaGN5QnViMlJsTG0xaGRHVnlhV0ZzSUdSdlpYTWdibTkwSUdoaGRtVWdZU0J0WVhSbGNtbGhiSE1nWVhKeVlYa3VJaXdnZEdocGN5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlHVXViV0YwWlhKcFlXd3ViV0YwWlhKcFlXeHpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVltOXVaWE1pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWlM1emEyVnNaWFJ2YmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhiaUJ1YjNRZ1ltbHVaQ0IwYnlCaWIyNWxjeUJoY3lCdWIyUmxJR1J2WlhNZ2JtOTBJR2hoZG1VZ1lTQnphMlZzWlhSdmJpNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ1pTNXphMlZzWlhSdmJpNWliMjVsY3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHZ2dQU0F3T3lCb0lEd2daUzVzWlc1bmRHZzdJR2dyS3lscFppQW9aVnRvWFM1dVlXMWxJRDA5UFNCaktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTWdQU0JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxXMjVkSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQkRZVzRnYm05MElHSnBibVFnZEc4Z2IySnFaV04wVG1GdFpTQnZaaUJ1YjJSbElIVnVaR1ZtYVc1bFpDNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ1pWdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1l5QWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pWdGpYU0E5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJVY25scGJtY2dkRzhnWW1sdVpDQjBieUJ2WW1wbFkzUkpibVJsZUNCdlppQnZZbXBsWTNST1lXMWxMQ0JpZFhRZ2FYTWdkVzVrWldacGJtVmtMaUlzSUhSb2FYTXNJR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BTQmxXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCdklEMGdaVnRwWFRzS0lDQWdJQ0FnSUNCcFppQW9ieUE5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCak1TQTlJSFF1Ym05a1pVNWhiV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dWSEo1YVc1bklIUnZJSFZ3WkdGMFpTQndjbTl3WlhKMGVTQm1iM0lnZEhKaFkyczZJQ0lnS3lCak1TQXJJQ0l1SWlBcklHa2dLeUFpSUdKMWRDQnBkQ0IzWVhOdUozUWdabTkxYm1RdUlpd2daU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpMbFpsY25OcGIyNXBibWN1VG05dVpUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDQTlJR1VzSUdVdWJtVmxaSE5WY0dSaGRHVWdJVDA5SUhadmFXUWdNQ0EvSUdFZ1BTQjBhR2x6TGxabGNuTnBiMjVwYm1jdVRtVmxaSE5WY0dSaGRHVWdPaUJsTG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb1lTQTlJSFJvYVhNdVZtVnljMmx2Ym1sdVp5NU5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsS1RzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSb2FYTXVRbWx1WkdsdVoxUjVjR1V1UkdseVpXTjBPd29nSUNBZ0lDQWdJR2xtSUNoeUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFQwOUlDSnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1pS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV1V1WjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1nWW1WallYVnpaU0J1YjJSbElHUnZaWE1nYm05MElHaGhkbVVnWVNCblpXOXRaWFJ5ZVM0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aUzVuWlc5dFpYUnllUzVwYzBKMVptWmxja2RsYjIxbGRISjVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZsTG1kbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUVOaGJpQnViM1FnWW1sdVpDQjBieUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNZ1ltVmpZWFZ6WlNCdWIyUmxJR1J2WlhNZ2JtOTBJR2hoZG1VZ1lTQm5aVzl0WlhSeWVTNXRiM0p3YUVGMGRISnBZblYwWlhNdUlpd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzV0YjNKd2FGUmhjbWRsZEVScFkzUnBiMjVoY25sYmNsMGdJVDA5SUhadmFXUWdNQ0FtSmlBb2NpQTlJR1V1Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNVczSmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCRFlXNGdibTkwSUdKcGJtUWdkRzhnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklHOXVJRlJJVWtWRkxrZGxiMjFsZEhKNUxpQlZjMlVnVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJSFJvYVhNdVFtbHVaR2x1WjFSNWNHVXVRWEp5WVhsRmJHVnRaVzUwTENCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa2dQU0J2TENCMGFHbHpMbkJ5YjNCbGNuUjVTVzVrWlhnZ1BTQnlPd29nSUNBZ0lDQWdJSDBnWld4elpTQnZMbVp5YjIxQmNuSmhlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVkRzlCY25KaGVTQWhQVDBnZG05cFpDQXdJRDhnS0d3Z1BTQjBhR2x6TGtKcGJtUnBibWRVZVhCbExraGhjMFp5YjIxVWIwRnljbUY1TENCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa2dQU0J2S1NBNklFRnljbUY1TG1selFYSnlZWGtvYnlrZ1B5QW9iQ0E5SUhSb2FYTXVRbWx1WkdsdVoxUjVjR1V1Ulc1MGFYSmxRWEp5WVhrc0lIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlU0E5SUc4cElEb2dkR2hwY3k1d2NtOXdaWEowZVU1aGJXVWdQU0JwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxrZGxkSFJsY2tKNVFtbHVaR2x1WjFSNWNHVmJiRjBzSUhSb2FYTXVjMlYwVm1Gc2RXVWdQU0IwYUdsekxsTmxkSFJsY2tKNVFtbHVaR2x1WjFSNWNHVkJibVJXWlhKemFXOXVhVzVuVzJ4ZFcyRmRPd29nSUNBZ2ZRb2dJQ0FnZFc1aWFXNWtLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVibTlrWlNBOUlHNTFiR3dzSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxsOW5aWFJXWVd4MVpWOTFibUp2ZFc1a0xDQjBhR2x6TG5ObGRGWmhiSFZsSUQwZ2RHaHBjeTVmYzJWMFZtRnNkV1ZmZFc1aWIzVnVaRHNLSUNBZ0lIMEtmVHNLYTJVdVEyOXRjRzl6YVhSbElEMGdTbWc3Q210bExuQnliM1J2ZEhsd1pTNUNhVzVrYVc1blZIbHdaU0E5SUhzS0lDQWdJRVJwY21WamREb2dNQ3dLSUNBZ0lFVnVkR2x5WlVGeWNtRjVPaUF4TEFvZ0lDQWdRWEp5WVhsRmJHVnRaVzUwT2lBeUxBb2dJQ0FnU0dGelJuSnZiVlJ2UVhKeVlYazZJRE1LZlRzS2EyVXVjSEp2ZEc5MGVYQmxMbFpsY25OcGIyNXBibWNnUFNCN0NpQWdJQ0JPYjI1bE9pQXdMQW9nSUNBZ1RtVmxaSE5WY0dSaGRHVTZJREVzQ2lBZ0lDQk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsT2lBeUNuMDdDbXRsTG5CeWIzUnZkSGx3WlM1SFpYUjBaWEpDZVVKcGJtUnBibWRVZVhCbElEMGdXd29nSUNBZ2EyVXVjSEp2ZEc5MGVYQmxMbDluWlhSV1lXeDFaVjlrYVhKbFkzUXNDaUFnSUNCclpTNXdjbTkwYjNSNWNHVXVYMmRsZEZaaGJIVmxYMkZ5Y21GNUxBb2dJQ0FnYTJVdWNISnZkRzkwZVhCbExsOW5aWFJXWVd4MVpWOWhjbkpoZVVWc1pXMWxiblFzQ2lBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDJkbGRGWmhiSFZsWDNSdlFYSnlZWGtLWFRzS2EyVXVjSEp2ZEc5MGVYQmxMbE5sZEhSbGNrSjVRbWx1WkdsdVoxUjVjR1ZCYm1SV1pYSnphVzl1YVc1bklEMGdXd29nSUNBZ1d3b2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWkdseVpXTjBMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpHbHlaV04wWDNObGRFNWxaV1J6VlhCa1lYUmxMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpHbHlaV04wWDNObGRFMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VLSUNBZ0lGMHNDaUFnSUNCYkNpQWdJQ0FnSUNBZ2EyVXVjSEp2ZEc5MGVYQmxMbDl6WlhSV1lXeDFaVjloY25KaGVTd0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVYM05sZEU1bFpXUnpWWEJrWVhSbExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWVhKeVlYbGZjMlYwVFdGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpRb2dJQ0FnWFN3S0lDQWdJRnNLSUNBZ0lDQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgzTmxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkQ3dLSUNBZ0lDQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgzTmxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkRjl6WlhST1pXVmtjMVZ3WkdGMFpTd0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRGOXpaWFJOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbENpQWdJQ0JkTEFvZ0lDQWdXd29nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNUxBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1WDNObGRFNWxaV1J6VlhCa1lYUmxMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNVgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVS0lDQWdJRjBLWFRzS2RtRnlJRmxvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMbDl2WW1wbFkzUnpJRDBnUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvWVhKbmRXMWxiblJ6S1N3Z2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxOGdQU0F3T3dvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmYVc1a2FXTmxjMEo1VlZWSlJDQTlJR1U3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUc0Z0lUMDlJR2s3SUNzcmJpbGxXMkZ5WjNWdFpXNTBjMXR1WFM1MWRXbGtYU0E5SUc0N0NpQWdJQ0FnSUNBZ2RHaHBjeTVmY0dGMGFITWdQU0JiWFN3Z2RHaHBjeTVmY0dGeWMyVmtVR0YwYUhNZ1BTQmJYU3dnZEdocGN5NWZZbWx1WkdsdVozTWdQU0JiWFN3Z2RHaHBjeTVmWW1sdVpHbHVaM05KYm1ScFkyVnpRbmxRWVhSb0lEMGdlMzA3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lIUm9hWE11YzNSaGRITWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0IwYjNSaGJDQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVgyOWlhbVZqZEhNdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRHOTBZV3dnTFNCMExtNURZV05vWldSUFltcGxZM1J6WHpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJR0pwYm1ScGJtZHpVR1Z5VDJKcVpXTjBJQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTGw5aWFXNWthVzVuY3k1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWVdSa0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmIySnFaV04wY3l3Z2RDQTlJSFJvYVhNdVgybHVaR2xqWlhOQ2VWVlZTVVFzSUc0Z1BTQjBhR2x6TGw5d1lYUm9jeXdnYVNBOUlIUm9hWE11WDNCaGNuTmxaRkJoZEdoekxDQnlJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzhnUFNCeUxteGxibWQwYUN3Z1lTd2diQ0E5SUdVdWJHVnVaM1JvTENCaklEMGdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMTg3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JvSUQwZ01Dd2dkU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUdnZ0lUMDlJSFU3SUNzcmFDbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWVhKbmRXMWxiblJ6VzJoZExDQm1JRDBnWkM1MWRXbGtMQ0J0SUQwZ2RGdG1YVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzBnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JTQTlJR3dyS3l3Z2RGdG1YU0E5SUcwc0lHVXVjSFZ6YUNoa0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VDQTlJREFzSUhZZ1BTQnZPeUI0SUNFOVBTQjJPeUFySzNncGNsdDRYUzV3ZFhOb0tHNWxkeUJyWlNoa0xDQnVXM2hkTENCcFczaGRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9iU0E4SUdNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JsVzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGd4SUQwZ0xTMWpMQ0IyTVNBOUlHVmJlREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEZ0Mk1TNTFkV2xrWFNBOUlHMHNJR1ZiYlYwZ1BTQjJNU3dnZEZ0bVhTQTlJSGd4TENCbFczZ3hYU0E5SUdRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdjZ1BTQXdMQ0J3SUQwZ2J6c2daeUFoUFQwZ2NEc2dLeXRuS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlISmJaMTBzSUhrZ1BTQmZXM2d4WFN3Z1lpQTlJRjliYlYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYMXR0WFNBOUlIa3NJR0lnUFQwOUlIWnZhV1FnTUNBbUppQW9ZaUE5SUc1bGR5QnJaU2hrTENCdVcyZGRMQ0JwVzJkZEtTa3NJRjliZURGZElEMGdZanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdWYmJWMGdJVDA5SUdFZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UVc1cGJXRjBhVzl1VDJKcVpXTjBSM0p2ZFhBNklFUnBabVpsY21WdWRDQnZZbXBsWTNSeklIZHBkR2dnZEdobElITmhiV1VnVlZWSlJDQmtaWFJsWTNSbFpDNGdRMnhsWVc0Z2RHaGxJR05oWTJobGN5QnZjaUJ5WldOeVpXRjBaU0I1YjNWeUlHbHVabkpoYzNSeWRXTjBkWEpsSUhkb1pXNGdjbVZzYjJGa2FXNW5JSE5qWlc1bGN5NGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4Z1BTQmpPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZiMkpxWldOMGN5d2dkQ0E5SUhSb2FYTXVYMmx1WkdsalpYTkNlVlZWU1VRc0lHNGdQU0IwYUdsekxsOWlhVzVrYVc1bmN5d2dhU0E5SUc0dWJHVnVaM1JvTENCeUlEMGdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMTg3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Dd2dZU0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUc4Z0lUMDlJR0U3SUNzcmJ5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVhKbmRXMWxiblJ6VzI5ZExDQmpJRDBnYkM1MWRXbGtMQ0JvSUQwZ2RGdGpYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2dnSVQwOUlIWnZhV1FnTUNBbUppQm9JRDQ5SUhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2Npc3JMQ0JrSUQwZ1pWdDFYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJiWkM1MWRXbGtYU0E5SUdnc0lHVmJhRjBnUFNCa0xDQjBXMk5kSUQwZ2RTd2daVnQxWFNBOUlHdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F3TENCdElEMGdhVHNnWmlBaFBUMGdiVHNnS3l0bUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJRzViWmwwc0lIWWdQU0I0VzNWZExDQm5JRDBnZUZ0b1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0VzJoZElEMGdkaXdnZUZ0MVhTQTlJR2M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThnUFNCeU93b2dJQ0FnZlFvZ0lDQWdkVzVqWVdOb1pTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgyOWlhbVZqZEhNc0lIUWdQU0IwYUdsekxsOXBibVJwWTJWelFubFZWVWxFTENCdUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHa2dQU0J1TG14bGJtZDBhQ3dnY2lBOUlIUm9hWE11YmtOaFkyaGxaRTlpYW1WamRITmZMQ0J2SUQwZ1pTNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNQ3dnYkNBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHRWdJVDA5SUd3N0lDc3JZU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ1lYSm5kVzFsYm5SelcyRmRMQ0JvSUQwZ1l5NTFkV2xrTENCMUlEMGdkRnRvWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hVZ0lUMDlJSFp2YVdRZ01Da2dhV1lnS0dSbGJHVjBaU0IwVzJoZExDQjFJRHdnY2lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNBdExYSXNJR1lnUFNCbFcyUmRMQ0J0SUQwZ0xTMXZMQ0I0SUQwZ1pWdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJiWmk1MWRXbGtYU0E5SUhVc0lHVmJkVjBnUFNCbUxDQjBXM2d1ZFhWcFpGMGdQU0JrTENCbFcyUmRJRDBnZUN3Z1pTNXdiM0FvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZGlBOUlEQXNJR2NnUFNCcE95QjJJQ0U5UFNCbk95QXJLM1lwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2JsdDJYU3dnWHlBOUlIQmJaRjBzSUhrZ1BTQndXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmJkVjBnUFNCZkxDQndXMlJkSUQwZ2VTd2djQzV3YjNBb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa01TQTlJQzB0Ynl3Z1pqRWdQU0JsVzJReFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUXhJRDRnTUNBbUppQW9kRnRtTVM1MWRXbGtYU0E5SUhVcExDQmxXM1ZkSUQwZ1pqRXNJR1V1Y0c5d0tDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHMHhJRDBnTUN3Z2VERWdQU0JwT3lCdE1TQWhQVDBnZURFN0lDc3JiVEVwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IyTVNBOUlHNWJiVEZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWXhXM1ZkSUQwZ2RqRmJaREZkTENCMk1TNXdiM0FvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxtNURZV05vWldSUFltcGxZM1J6WHlBOUlISTdDaUFnSUNCOUNpQWdJQ0J6ZFdKelkzSnBZbVZmS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgySnBibVJwYm1kelNXNWthV05sYzBKNVVHRjBhQ3dnYVNBOUlHNWJaVjBzSUhJZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3pzS0lDQWdJQ0FnSUNCcFppQW9hU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnY2x0cFhUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WDNCaGRHaHpMQ0JoSUQwZ2RHaHBjeTVmY0dGeWMyVmtVR0YwYUhNc0lHd2dQU0IwYUdsekxsOXZZbXBsWTNSekxDQmpJRDBnYkM1c1pXNW5kR2dzSUdnZ1BTQjBhR2x6TG01RFlXTm9aV1JQWW1wbFkzUnpYeXdnZFNBOUlHNWxkeUJCY25KaGVTaGpLVHNLSUNBZ0lDQWdJQ0JwSUQwZ2NpNXNaVzVuZEdnc0lHNWJaVjBnUFNCcExDQnZMbkIxYzJnb1pTa3NJR0V1Y0hWemFDaDBLU3dnY2k1d2RYTm9LSFVwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWkNBOUlHZ3NJR1lnUFNCc0xteGxibWQwYURzZ1pDQWhQVDBnWmpzZ0t5dGtLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCc1cyUmRPd29nSUNBZ0lDQWdJQ0FnSUNCMVcyUmRJRDBnYm1WM0lHdGxLRzBzSUdVc0lIUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkVHNLSUNBZ0lIMEtJQ0FnSUhWdWMzVmljMk55YVdKbFh5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWlhVzVrYVc1bmMwbHVaR2xqWlhOQ2VWQmhkR2dzSUc0Z1BTQjBXMlZkT3dvZ0lDQWdJQ0FnSUdsbUlDaHVJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TGw5d1lYUm9jeXdnY2lBOUlIUm9hWE11WDNCaGNuTmxaRkJoZEdoekxDQnZJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJR0VnUFNCdkxteGxibWQwYUNBdElERXNJR3dnUFNCdlcyRmRMQ0JqSUQwZ1pWdGhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGdGpYU0E5SUc0c0lHOWJibDBnUFNCc0xDQnZMbkJ2Y0NncExDQnlXMjVkSUQwZ2NsdGhYU3dnY2k1d2IzQW9LU3dnYVZ0dVhTQTlJR2xiWVYwc0lHa3VjRzl3S0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOU93cFphQzV3Y205MGIzUjVjR1V1YVhOQmJtbHRZWFJwYjI1UFltcGxZM1JIY205MWNDQTlJQ0V3T3dwMllYSWdXbWdnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVJRDBnYm5Wc2JDd2dhU0E5SUhRdVlteGxibVJOYjJSbEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5dGFYaGxjaUE5SUdVc0lIUm9hWE11WDJOc2FYQWdQU0IwTENCMGFHbHpMbDlzYjJOaGJGSnZiM1FnUFNCdUxDQjBhR2x6TG1Kc1pXNWtUVzlrWlNBOUlHazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBMblJ5WVdOcmN5d2dieUE5SUhJdWJHVnVaM1JvTENCaElEMGdibVYzSUVGeWNtRjVLRzhwTENCc0lEMGdld29nSUNBZ0lDQWdJQ0FnSUNCbGJtUnBibWRUZEdGeWREb2dUV2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnVaR2x1WjBWdVpEb2dUV2tLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlBOUlEQTdJR01nSVQwOUlHODdJQ3NyWXlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdjbHRqWFM1amNtVmhkR1ZKYm5SbGNuQnZiR0Z1ZENodWRXeHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1lWdGpYU0E5SUdnc0lHZ3VjMlYwZEdsdVozTWdQU0JzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbDlwYm5SbGNuQnZiR0Z1ZEZObGRIUnBibWR6SUQwZ2JDd2dkR2hwY3k1ZmFXNTBaWEp3YjJ4aGJuUnpJRDBnWVN3Z2RHaHBjeTVmY0hKdmNHVnlkSGxDYVc1a2FXNW5jeUE5SUc1bGR5QkJjbkpoZVNodktTd2dkR2hwY3k1ZlkyRmphR1ZKYm1SbGVDQTlJRzUxYkd3c0lIUm9hWE11WDJKNVEyeHBjRU5oWTJobFNXNWtaWGdnUFNCdWRXeHNMQ0IwYUdsekxsOTBhVzFsVTJOaGJHVkpiblJsY25CdmJHRnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVgzZGxhV2RvZEVsdWRHVnljRzlzWVc1MElEMGdiblZzYkN3Z2RHaHBjeTVzYjI5d0lEMGdTV1FzSUhSb2FYTXVYMnh2YjNCRGIzVnVkQ0E5SUMweExDQjBhR2x6TGw5emRHRnlkRlJwYldVZ1BTQnVkV3hzTENCMGFHbHpMblJwYldVZ1BTQXdMQ0IwYUdsekxuUnBiV1ZUWTJGc1pTQTlJREVzSUhSb2FYTXVYMlZtWm1WamRHbDJaVlJwYldWVFkyRnNaU0E5SURFc0lIUm9hWE11ZDJWcFoyaDBJRDBnTVN3Z2RHaHBjeTVmWldabVpXTjBhWFpsVjJWcFoyaDBJRDBnTVN3Z2RHaHBjeTV5WlhCbGRHbDBhVzl1Y3lBOUlERWdMeUF3TENCMGFHbHpMbkJoZFhObFpDQTlJQ0V4TENCMGFHbHpMbVZ1WVdKc1pXUWdQU0FoTUN3Z2RHaHBjeTVqYkdGdGNGZG9aVzVHYVc1cGMyaGxaQ0E5SUNFeExDQjBhR2x6TG5wbGNtOVRiRzl3WlVGMFUzUmhjblFnUFNBaE1Dd2dkR2hwY3k1NlpYSnZVMnh2Y0dWQmRFVnVaQ0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdjR3hoZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYldsNFpYSXVYMkZqZEdsMllYUmxRV04wYVc5dUtIUm9hWE1wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNSdmNDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmJXbDRaWEl1WDJSbFlXTjBhWFpoZEdWQlkzUnBiMjRvZEdocGN5a3NJSFJvYVhNdWNtVnpaWFFvS1RzS0lDQWdJSDBLSUNBZ0lISmxjMlYwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoZFhObFpDQTlJQ0V4TENCMGFHbHpMbVZ1WVdKc1pXUWdQU0FoTUN3Z2RHaHBjeTUwYVcxbElEMGdNQ3dnZEdocGN5NWZiRzl2Y0VOdmRXNTBJRDBnTFRFc0lIUm9hWE11WDNOMFlYSjBWR2x0WlNBOUlHNTFiR3dzSUhSb2FYTXVjM1J2Y0VaaFpHbHVaeWdwTG5OMGIzQlhZWEp3YVc1bktDazdDaUFnSUNCOUNpQWdJQ0JwYzFKMWJtNXBibWNvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaVzVoWW14bFpDQW1KaUFoZEdocGN5NXdZWFZ6WldRZ0ppWWdkR2hwY3k1MGFXMWxVMk5oYkdVZ0lUMDlJREFnSmlZZ2RHaHBjeTVmYzNSaGNuUlVhVzFsSUQwOVBTQnVkV3hzSUNZbUlIUm9hWE11WDIxcGVHVnlMbDlwYzBGamRHbDJaVUZqZEdsdmJpaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHbHpVMk5vWldSMWJHVmtLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXRhWGhsY2k1ZmFYTkJZM1JwZG1WQlkzUnBiMjRvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0J6ZEdGeWRFRjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZjM1JoY25SVWFXMWxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFeHZiM0FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG14dmIzQWdQU0JsTENCMGFHbHpMbkpsY0dWMGFYUnBiMjV6SUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVZtWm1WamRHbDJaVmRsYVdkb2RDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWQyVnBaMmgwSUQwZ1pTd2dkR2hwY3k1ZlpXWm1aV04wYVhabFYyVnBaMmgwSUQwZ2RHaHBjeTVsYm1GaWJHVmtJRDhnWlNBNklEQXNJSFJvYVhNdWMzUnZjRVpoWkdsdVp5Z3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJXWm1aV04wYVhabFYyVnBaMmgwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlsWm1abFkzUnBkbVZYWldsbmFIUTdDaUFnSUNCOUNpQWdJQ0JtWVdSbFNXNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXpZMmhsWkhWc1pVWmhaR2x1WnlobExDQXdMQ0F4S1RzS0lDQWdJSDBLSUNBZ0lHWmhaR1ZQZFhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5elkyaGxaSFZzWlVaaFpHbHVaeWhsTENBeExDQXdLVHNLSUNBZ0lIMEtJQ0FnSUdOeWIzTnpSbUZrWlVaeWIyMG9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR2xtSUNobExtWmhaR1ZQZFhRb2RDa3NJSFJvYVhNdVptRmtaVWx1S0hRcExDQnVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmWTJ4cGNDNWtkWEpoZEdsdmJpd2djaUE5SUdVdVgyTnNhWEF1WkhWeVlYUnBiMjRzSUc4Z1BTQnlJQzhnYVN3Z1lTQTlJR2tnTHlCeU93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5kaGNuQW9NU3dnYnl3Z2RDa3NJSFJvYVhNdWQyRnljQ2hoTENBeExDQjBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpjbTl6YzBaaFpHVlVieWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WTNKdmMzTkdZV1JsUm5KdmJTaDBhR2x6TENCMExDQnVLVHNLSUNBZ0lIMEtJQ0FnSUhOMGIzQkdZV1JwYm1jb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TGw5M1pXbG5hSFJKYm5SbGNuQnZiR0Z1ZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RZ1BTQnVkV3hzTENCMGFHbHpMbDl0YVhobGNpNWZkR0ZyWlVKaFkydERiMjUwY205c1NXNTBaWEp3YjJ4aGJuUW9aU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJXWm1aV04wYVhabFZHbHRaVk5qWVd4bEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MGFXMWxVMk5oYkdVZ1BTQmxMQ0IwYUdsekxsOWxabVpsWTNScGRtVlVhVzFsVTJOaGJHVWdQU0IwYUdsekxuQmhkWE5sWkNBL0lEQWdPaUJsTENCMGFHbHpMbk4wYjNCWFlYSndhVzVuS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJGWm1abFkzUnBkbVZVYVcxbFUyTmhiR1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMlZtWm1WamRHbDJaVlJwYldWVFkyRnNaVHNLSUNBZ0lIMEtJQ0FnSUhObGRFUjFjbUYwYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MGFXMWxVMk5oYkdVZ1BTQjBhR2x6TGw5amJHbHdMbVIxY21GMGFXOXVJQzhnWlN3Z2RHaHBjeTV6ZEc5d1YyRnljR2x1WnlncE93b2dJQ0FnZlFvZ0lDQWdjM2x1WTFkcGRHZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuUnBiV1VnUFNCbExuUnBiV1VzSUhSb2FYTXVkR2x0WlZOallXeGxJRDBnWlM1MGFXMWxVMk5oYkdVc0lIUm9hWE11YzNSdmNGZGhjbkJwYm1jb0tUc0tJQ0FnSUgwS0lDQWdJR2hoYkhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5kaGNuQW9kR2hwY3k1ZlpXWm1aV04wYVhabFZHbHRaVk5qWVd4bExDQXdMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lIZGhjbkFvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWZiV2w0WlhJc0lISWdQU0JwTG5ScGJXVXNJRzhnUFNCMGFHbHpMblJwYldWVFkyRnNaU3dnWVNBOUlIUm9hWE11WDNScGJXVlRZMkZzWlVsdWRHVnljRzlzWVc1ME93b2dJQ0FnSUNBZ0lHRWdQVDA5SUc1MWJHd2dKaVlnS0dFZ1BTQnBMbDlzWlc1a1EyOXVkSEp2YkVsdWRHVnljRzlzWVc1MEtDa3NJSFJvYVhNdVgzUnBiV1ZUWTJGc1pVbHVkR1Z5Y0c5c1lXNTBJRDBnWVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCaExuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWN5d2dZeUE5SUdFdWMyRnRjR3hsVm1Gc2RXVnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnNXekJkSUQwZ2Npd2diRnN4WFNBOUlISWdLeUJ1TENCald6QmRJRDBnWlNBdklHOHNJR05iTVYwZ1BTQjBJQzhnYnl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhOMGIzQlhZWEp3YVc1bktDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmRHbHRaVk5qWVd4bFNXNTBaWEp3YjJ4aGJuUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYM1JwYldWVFkyRnNaVWx1ZEdWeWNHOXNZVzUwSUQwZ2JuVnNiQ3dnZEdocGN5NWZiV2w0WlhJdVgzUmhhMlZDWVdOclEyOXVkSEp2YkVsdWRHVnljRzlzWVc1MEtHVXBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEUxcGVHVnlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXRhWGhsY2pzS0lDQWdJSDBLSUNBZ0lHZGxkRU5zYVhBb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJOc2FYQTdDaUFnSUNCOUNpQWdJQ0JuWlhSU2IyOTBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXNiMk5oYkZKdmIzUWdmSHdnZEdocGN5NWZiV2w0WlhJdVgzSnZiM1E3Q2lBZ0lDQjlDaUFnSUNCZmRYQmtZWFJsS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVaVzVoWW14bFpDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDkxY0dSaGRHVlhaV2xuYUhRb1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxsOXpkR0Z5ZEZScGJXVTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0FvWlNBdElISXBJQ29nYmpzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3Z1BDQXdJSHg4SUc0Z1BUMDlJREFwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmYzNSaGNuUlVhVzFsSUQwZ2JuVnNiQ3dnZENBOUlHNGdLaUJzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMElDbzlJSFJvYVhNdVgzVndaR0YwWlZScGJXVlRZMkZzWlNobEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WDNWd1pHRjBaVlJwYldVb2RDa3NJR0VnUFNCMGFHbHpMbDkxY0dSaGRHVlhaV2xuYUhRb1pTazdDaUFnSUNBZ0lDQWdhV1lnS0dFZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzTVNBOUlIUm9hWE11WDJsdWRHVnljRzlzWVc1MGN5d2dZeUE5SUhSb2FYTXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwYUdsekxtSnNaVzVrVFc5a1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhGak9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBc0lIVWdQU0JzTVM1c1pXNW5kR2c3SUdnZ0lUMDlJSFU3SUNzcmFDbHNNVnRvWFM1bGRtRnNkV0YwWlNodktTd2dZMXRvWFM1aFkyTjFiWFZzWVhSbFFXUmthWFJwZG1Vb1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhWaE9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHZ3hJRDBnTUN3Z2RURWdQU0JzTVM1c1pXNW5kR2c3SUdneElDRTlQU0IxTVRzZ0t5dG9NU2xzTVZ0b01WMHVaWFpoYkhWaGRHVW9ieWtzSUdOYmFERmRMbUZqWTNWdGRXeGhkR1VvYVN3Z1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmZkWEJrWVhSbFYyVnBaMmgwS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlEQTdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVaVzVoWW14bFpDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdkR2hwY3k1M1pXbG5hSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVmZDJWcFoyaDBTVzUwWlhKd2IyeGhiblE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1SUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc0dVpYWmhiSFZoZEdVb1pTbGJNRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUNvOUlHa3NJR1VnUGlCdUxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWMxc3hYU0FtSmlBb2RHaHBjeTV6ZEc5d1JtRmthVzVuS0Nrc0lHa2dQVDA5SURBZ0ppWWdLSFJvYVhNdVpXNWhZbXhsWkNBOUlDRXhLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJWbVptVmpkR2wyWlZkbGFXZG9kQ0E5SUhRc0lIUTdDaUFnSUNCOUNpQWdJQ0JmZFhCa1lYUmxWR2x0WlZOallXeGxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SURBN0NpQWdJQ0FnSUNBZ2FXWWdLQ0YwYUdsekxuQmhkWE5sWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2RHaHBjeTUwYVcxbFUyTmhiR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVmZEdsdFpWTmpZV3hsU1c1MFpYSndiMnhoYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJRzRnSVQwOUlHNTFiR3dnSmlZZ0tIUWdLajBnYmk1bGRtRnNkV0YwWlNobEtWc3dYU3dnWlNBK0lHNHVjR0Z5WVcxbGRHVnlVRzl6YVhScGIyNXpXekZkSUNZbUlDaDBhR2x6TG5OMGIzQlhZWEp3YVc1bktDa3NJSFFnUFQwOUlEQWdQeUIwYUdsekxuQmhkWE5sWkNBOUlDRXdJRG9nZEdocGN5NTBhVzFsVTJOaGJHVWdQU0IwS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlsWm1abFkzUnBkbVZVYVcxbFUyTmhiR1VnUFNCMExDQjBPd29nSUNBZ2ZRb2dJQ0FnWDNWd1pHRjBaVlJwYldVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZlkyeHBjQzVrZFhKaGRHbHZiaXdnYmlBOUlIUm9hWE11Ykc5dmNDd2dhU0E5SUhSb2FYTXVkR2x0WlNBcklHVXNJSElnUFNCMGFHbHpMbDlzYjI5d1EyOTFiblFzSUc4Z1BTQnVJRDA5UFNCRVpEc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBOVBUMGdNQ2tnY21WMGRYSnVJSElnUFQwOUlDMHhJRDhnYVNBNklHOGdKaVlnS0hJZ0ppQXhLU0E5UFQwZ01TQS9JSFFnTFNCcElEb2dhVHNLSUNBZ0lDQWdJQ0JwWmlBb2JpQTlQVDBnVUdRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY2lBOVBUMGdMVEVnSmlZZ0tIUm9hWE11WDJ4dmIzQkRiM1Z1ZENBOUlEQXNJSFJvYVhNdVgzTmxkRVZ1WkdsdVozTW9JVEFzSUNFd0xDQWhNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQStQU0IwS1NCcElEMGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLR2tnUENBd0tTQnBJRDBnTURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkR2x0WlNBOUlHazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXc2daVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyeGhiWEJYYUdWdVJtbHVhWE5vWldRZ1B5QjBhR2x6TG5CaGRYTmxaQ0E5SUNFd0lEb2dkR2hwY3k1bGJtRmliR1ZrSUQwZ0lURXNJSFJvYVhNdWRHbHRaU0E5SUdrc0lIUm9hWE11WDIxcGVHVnlMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSm1hVzVwYzJobFpDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdOMGFXOXVPaUIwYUdsekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwY21WamRHbHZiam9nWlNBOElEQWdQeUF0TVNBNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJQzB4SUNZbUlDaGxJRDQ5SURBZ1B5QW9jaUE5SURBc0lIUm9hWE11WDNObGRFVnVaR2x1WjNNb0lUQXNJSFJvYVhNdWNtVndaWFJwZEdsdmJuTWdQVDA5SURBc0lHOHBLU0E2SUhSb2FYTXVYM05sZEVWdVpHbHVaM01vZEdocGN5NXlaWEJsZEdsMGFXOXVjeUE5UFQwZ01Dd2dJVEFzSUc4cEtTd2dhU0ErUFNCMElIeDhJR2tnUENBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlFMWhkR2d1Wm14dmIzSW9hU0F2SUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQXRQU0IwSUNvZ1lTd2djaUFyUFNCTllYUm9MbUZpY3loaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RHaHBjeTV5WlhCbGRHbDBhVzl1Y3lBdElISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkNBOFBTQXdLU0IwYUdsekxtTnNZVzF3VjJobGJrWnBibWx6YUdWa0lEOGdkR2hwY3k1d1lYVnpaV1FnUFNBaE1DQTZJSFJvYVhNdVpXNWhZbXhsWkNBOUlDRXhMQ0JwSUQwZ1pTQStJREFnUHlCMElEb2dNQ3dnZEdocGN5NTBhVzFsSUQwZ2FTd2dkR2hwY3k1ZmJXbDRaWEl1WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbVpwYm1semFHVmtJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaFkzUnBiMjQ2SUhSb2FYTXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCbElENGdNQ0EvSURFZ09pQXRNUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDQTlQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUdVZ1BDQXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5elpYUkZibVJwYm1kektHTXNJQ0ZqTENCdktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdkR2hwY3k1ZmMyVjBSVzVrYVc1bmN5Z2hNU3dnSVRFc0lHOHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMnh2YjNCRGIzVnVkQ0E5SUhJc0lIUm9hWE11ZEdsdFpTQTlJR2tzSUhSb2FYTXVYMjFwZUdWeUxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWliRzl2Y0NJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGamRHbHZiam9nZEdocGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOXZjRVJsYkhSaE9pQmhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjBhR2x6TG5ScGJXVWdQU0JwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYnlBbUppQW9jaUFtSURFcElEMDlQU0F4S1NCeVpYUjFjbTRnZENBdElHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnBPd29nSUNBZ2ZRb2dJQ0FnWDNObGRFVnVaR2x1WjNNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmYVc1MFpYSndiMnhoYm5SVFpYUjBhVzVuY3pzS0lDQWdJQ0FnSUNCdUlEOGdLR2t1Wlc1a2FXNW5VM1JoY25RZ1BTQmlhU3dnYVM1bGJtUnBibWRGYm1RZ1BTQmlhU2tnT2lBb1pTQS9JR2t1Wlc1a2FXNW5VM1JoY25RZ1BTQjBhR2x6TG5wbGNtOVRiRzl3WlVGMFUzUmhjblFnUHlCaWFTQTZJRTFwSURvZ2FTNWxibVJwYm1kVGRHRnlkQ0E5SUU5ekxDQjBJRDhnYVM1bGJtUnBibWRGYm1RZ1BTQjBhR2x6TG5wbGNtOVRiRzl3WlVGMFJXNWtJRDhnWW1rZ09pQk5hU0E2SUdrdVpXNWthVzVuUlc1a0lEMGdUM01wT3dvZ0lDQWdmUW9nSUNBZ1gzTmphR1ZrZFd4bFJtRmthVzVuS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMjFwZUdWeUxDQnlJRDBnYVM1MGFXMWxMQ0J2SUQwZ2RHaHBjeTVmZDJWcFoyaDBTVzUwWlhKd2IyeGhiblE3Q2lBZ0lDQWdJQ0FnYnlBOVBUMGdiblZzYkNBbUppQW9ieUE5SUdrdVgyeGxibVJEYjI1MGNtOXNTVzUwWlhKd2IyeGhiblFvS1N3Z2RHaHBjeTVmZDJWcFoyaDBTVzUwWlhKd2IyeGhiblFnUFNCdktUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHOHVjR0Z5WVcxbGRHVnlVRzl6YVhScGIyNXpMQ0JzSUQwZ2J5NXpZVzF3YkdWV1lXeDFaWE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0ZiTUYwZ1BTQnlMQ0JzV3pCZElEMGdkQ3dnWVZzeFhTQTlJSElnS3lCbExDQnNXekZkSUQwZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z0pHZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklFVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjbTl2ZENBOUlHVXNJSFJvYVhNdVgybHVhWFJOWlcxdmNubE5ZVzVoWjJWeUtDa3NJSFJvYVhNdVgyRmpZM1ZKYm1SbGVDQTlJREFzSUhSb2FYTXVkR2x0WlNBOUlEQXNJSFJvYVhNdWRHbHRaVk5qWVd4bElEMGdNVHNLSUNBZ0lIMEtJQ0FnSUY5aWFXNWtRV04wYVc5dUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdVgyeHZZMkZzVW05dmRDQjhmQ0IwYUdsekxsOXliMjkwTENCcElEMGdaUzVmWTJ4cGNDNTBjbUZqYTNNc0lISWdQU0JwTG14bGJtZDBhQ3dnYnlBOUlHVXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTXNJR0VnUFNCbExsOXBiblJsY25CdmJHRnVkSE1zSUd3Z1BTQnVMblYxYVdRc0lHTWdQU0IwYUdsekxsOWlhVzVrYVc1bmMwSjVVbTl2ZEVGdVpFNWhiV1VzSUdnZ1BTQmpXMnhkT3dvZ0lDQWdJQ0FnSUdnZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYUNBOUlIdDlMQ0JqVzJ4ZElEMGdhQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxSUQwZ01Ec2dkU0FoUFQwZ2Nqc2dLeXQxS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQnBXM1ZkTENCbUlEMGdaQzV1WVcxbExDQnRJRDBnYUZ0bVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMGdJVDA5SUhadmFXUWdNQ2tnYjF0MVhTQTlJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMGdQU0J2VzNWZExDQnRJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRMbDlqWVdOb1pVbHVaR1Y0SUQwOVBTQnVkV3hzSUNZbUlDZ3JLMjB1Y21WbVpYSmxibU5sUTI5MWJuUXNJSFJvYVhNdVgyRmtaRWx1WVdOMGFYWmxRbWx1WkdsdVp5aHRMQ0JzTENCbUtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJSFFnSmlZZ2RDNWZjSEp2Y0dWeWRIbENhVzVrYVc1bmMxdDFYUzVpYVc1a2FXNW5MbkJoY25ObFpGQmhkR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0SUQwZ2JtVjNJRmhvS0d0bExtTnlaV0YwWlNodUxDQm1MQ0I0S1N3Z1pDNVdZV3gxWlZSNWNHVk9ZVzFsTENCa0xtZGxkRlpoYkhWbFUybDZaU2dwS1N3Z0t5dHRMbkpsWm1WeVpXNWpaVU52ZFc1MExDQjBhR2x6TGw5aFpHUkpibUZqZEdsMlpVSnBibVJwYm1jb2JTd2diQ3dnWmlrc0lHOWJkVjBnUFNCdE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHRmJkVjB1Y21WemRXeDBRblZtWm1WeUlEMGdiUzVpZFdabVpYSTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWDJGamRHbDJZWFJsUVdOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9JWFJvYVhNdVgybHpRV04wYVhabFFXTjBhVzl1S0dVcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxMbDlqWVdOb1pVbHVaR1Y0SUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUNobExsOXNiMk5oYkZKdmIzUWdmSHdnZEdocGN5NWZjbTl2ZENrdWRYVnBaQ3dnYVNBOUlHVXVYMk5zYVhBdWRYVnBaQ3dnY2lBOUlIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQmJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOWlhVzVrUVdOMGFXOXVLR1VzSUhJZ0ppWWdjaTVyYm05M2JrRmpkR2x2Ym5OYk1GMHBMQ0IwYUdsekxsOWhaR1JKYm1GamRHbDJaVUZqZEdsdmJpaGxMQ0JwTENCdUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmpFZ1BTQXdMQ0JwTVNBOUlIUXViR1Z1WjNSb095QnVNU0FoUFQwZ2FURTdJQ3NyYmpFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEl4SUQwZ2RGdHVNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5TVM1MWMyVkRiM1Z1ZENzcklEMDlQU0F3SUNZbUlDaDBhR2x6TGw5c1pXNWtRbWx1WkdsdVp5aHlNU2tzSUhJeExuTmhkbVZQY21sbmFXNWhiRk4wWVhSbEtDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyeGxibVJCWTNScGIyNG9aU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1gyUmxZV04wYVhaaGRHVkJZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbDlwYzBGamRHbDJaVUZqZEdsdmJpaGxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVYM0J5YjNCbGNuUjVRbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMExteGxibWQwYURzZ2JpQWhQVDBnYVRzZ0t5dHVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdkRnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUMwdGNpNTFjMlZEYjNWdWRDQTlQVDBnTUNBbUppQW9jaTV5WlhOMGIzSmxUM0pwWjJsdVlXeFRkR0YwWlNncExDQjBhR2x6TGw5MFlXdGxRbUZqYTBKcGJtUnBibWNvY2lrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNSaGEyVkNZV05yUVdOMGFXOXVLR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lGOXBibWwwVFdWdGIzSjVUV0Z1WVdkbGNpZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOWhZM1JwYjI1eklEMGdXMTBzSUhSb2FYTXVYMjVCWTNScGRtVkJZM1JwYjI1eklEMGdNQ3dnZEdocGN5NWZZV04wYVc5dWMwSjVRMnhwY0NBOUlIdDlMQ0IwYUdsekxsOWlhVzVrYVc1bmN5QTlJRnRkTENCMGFHbHpMbDl1UVdOMGFYWmxRbWx1WkdsdVozTWdQU0F3TENCMGFHbHpMbDlpYVc1a2FXNW5jMEo1VW05dmRFRnVaRTVoYldVZ1BTQjdmU3dnZEdocGN5NWZZMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjeUE5SUZ0ZExDQjBhR2x6TGw5dVFXTjBhWFpsUTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3lBOUlEQTdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUhSb2FYTXVjM1JoZEhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdGamRHbHZibk02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQjBiM1JoYkNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDJGamRHbHZibk11YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCcGJsVnpaU0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVXVYMjVCWTNScGRtVkJZM1JwYjI1ek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmlhVzVrYVc1bmN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwSUhSdmRHRnNJQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWZZbWx1WkdsdVozTXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0JwYmxWelpTQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVgyNUJZM1JwZG1WQ2FXNWthVzVuY3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwSUhSdmRHRnNJQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWZZMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjeTVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlYwSUdsdVZYTmxJQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWZia0ZqZEdsMlpVTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRITTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdYMmx6UVdOMGFYWmxRV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WDJOaFkyaGxTVzVrWlhnN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJRzUxYkd3Z0ppWWdkQ0E4SUhSb2FYTXVYMjVCWTNScGRtVkJZM1JwYjI1ek93b2dJQ0FnZlFvZ0lDQWdYMkZrWkVsdVlXTjBhWFpsUVdOMGFXOXVLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVgyRmpkR2x2Ym5Nc0lISWdQU0IwYUdsekxsOWhZM1JwYjI1elFubERiR2x3TENCdklEMGdjbHQwWFRzS0lDQWdJQ0FnSUNCcFppQW9ieUE5UFQwZ2RtOXBaQ0F3S1NCdklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCcmJtOTNia0ZqZEdsdmJuTTZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1VLSUNBZ0lDQWdJQ0FnSUNBZ1hTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVdOMGFXOXVRbmxTYjI5ME9pQjdmUW9nSUNBZ0lDQWdJSDBzSUdVdVgySjVRMnhwY0VOaFkyaGxTVzVrWlhnZ1BTQXdMQ0J5VzNSZElEMGdienNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J2TG10dWIzZHVRV04wYVc5dWN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1ZllubERiR2x3UTJGamFHVkpibVJsZUNBOUlHRXViR1Z1WjNSb0xDQmhMbkIxYzJnb1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1V1WDJOaFkyaGxTVzVrWlhnZ1BTQnBMbXhsYm1kMGFDd2dhUzV3ZFhOb0tHVXBMQ0J2TG1GamRHbHZia0o1VW05dmRGdHVYU0E5SUdVN0NpQWdJQ0I5Q2lBZ0lDQmZjbVZ0YjNabFNXNWhZM1JwZG1WQlkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWVdOMGFXOXVjeXdnYmlBOUlIUmJkQzVzWlc1bmRHZ2dMU0F4WFN3Z2FTQTlJR1V1WDJOaFkyaGxTVzVrWlhnN0NpQWdJQ0FnSUNBZ2JpNWZZMkZqYUdWSmJtUmxlQ0E5SUdrc0lIUmJhVjBnUFNCdUxDQjBMbkJ2Y0NncExDQmxMbDlqWVdOb1pVbHVaR1Y0SUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1V1WDJOc2FYQXVkWFZwWkN3Z2J5QTlJSFJvYVhNdVgyRmpkR2x2Ym5OQ2VVTnNhWEFzSUdFZ1BTQnZXM0pkTENCc0lEMGdZUzVyYm05M2JrRmpkR2x2Ym5Nc0lHTWdQU0JzVzJ3dWJHVnVaM1JvSUMwZ01WMHNJR2dnUFNCbExsOWllVU5zYVhCRFlXTm9aVWx1WkdWNE93b2dJQ0FnSUNBZ0lHTXVYMko1UTJ4cGNFTmhZMmhsU1c1a1pYZ2dQU0JvTENCc1cyaGRJRDBnWXl3Z2JDNXdiM0FvS1N3Z1pTNWZZbmxEYkdsd1EyRmphR1ZKYm1SbGVDQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCaExtRmpkR2x2YmtKNVVtOXZkQ3dnWkNBOUlDaGxMbDlzYjJOaGJGSnZiM1FnZkh3Z2RHaHBjeTVmY205dmRDa3VkWFZwWkRzS0lDQWdJQ0FnSUNCa1pXeGxkR1VnZFZ0a1hTd2diQzVzWlc1bmRHZ2dQVDA5SURBZ0ppWWdaR1ZzWlhSbElHOWJjbDBzSUhSb2FYTXVYM0psYlc5MlpVbHVZV04wYVhabFFtbHVaR2x1WjNOR2IzSkJZM1JwYjI0b1pTazdDaUFnSUNCOUNpQWdJQ0JmY21WdGIzWmxTVzVoWTNScGRtVkNhVzVrYVc1bmMwWnZja0ZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTGw5d2NtOXdaWEowZVVKcGJtUnBibWR6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMExteGxibWQwYURzZ2JpQWhQVDBnYVRzZ0t5dHVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMFcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNBdExYSXVjbVZtWlhKbGJtTmxRMjkxYm5RZ1BUMDlJREFnSmlZZ2RHaHBjeTVmY21WdGIzWmxTVzVoWTNScGRtVkNhVzVrYVc1bktISXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUY5c1pXNWtRV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVgyRmpkR2x2Ym5Nc0lHNGdQU0JsTGw5allXTm9aVWx1WkdWNExDQnBJRDBnZEdocGN5NWZia0ZqZEdsMlpVRmpkR2x2Ym5Nckt5d2djaUE5SUhSYmFWMDdDaUFnSUNBZ0lDQWdaUzVmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQmxMQ0J5TGw5allXTm9aVWx1WkdWNElEMGdiaXdnZEZ0dVhTQTlJSEk3Q2lBZ0lDQjlDaUFnSUNCZmRHRnJaVUpoWTJ0QlkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWVdOMGFXOXVjeXdnYmlBOUlHVXVYMk5oWTJobFNXNWtaWGdzSUdrZ1BTQXRMWFJvYVhNdVgyNUJZM1JwZG1WQlkzUnBiMjV6TENCeUlEMGdkRnRwWFRzS0lDQWdJQ0FnSUNCbExsOWpZV05vWlVsdVpHVjRJRDBnYVN3Z2RGdHBYU0E5SUdVc0lISXVYMk5oWTJobFNXNWtaWGdnUFNCdUxDQjBXMjVkSUQwZ2Nqc0tJQ0FnSUgwS0lDQWdJRjloWkdSSmJtRmpkR2wyWlVKcGJtUnBibWNvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWZZbWx1WkdsdVozTkNlVkp2YjNSQmJtUk9ZVzFsTENCeUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHOGdQU0JwVzNSZE93b2dJQ0FnSUNBZ0lHOGdQVDA5SUhadmFXUWdNQ0FtSmlBb2J5QTlJSHQ5TENCcFczUmRJRDBnYnlrc0lHOWJibDBnUFNCbExDQmxMbDlqWVdOb1pVbHVaR1Y0SUQwZ2NpNXNaVzVuZEdnc0lISXVjSFZ6YUNobEtUc0tJQ0FnSUgwS0lDQWdJRjl5WlcxdmRtVkpibUZqZEdsMlpVSnBibVJwYm1jb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHNGdQU0JsTG1KcGJtUnBibWNzSUdrZ1BTQnVMbkp2YjNST2IyUmxMblYxYVdRc0lISWdQU0J1TG5CaGRHZ3NJRzhnUFNCMGFHbHpMbDlpYVc1a2FXNW5jMEo1VW05dmRFRnVaRTVoYldVc0lHRWdQU0J2VzJsZExDQnNJRDBnZEZ0MExteGxibWQwYUNBdElERmRMQ0JqSUQwZ1pTNWZZMkZqYUdWSmJtUmxlRHNLSUNBZ0lDQWdJQ0JzTGw5allXTm9aVWx1WkdWNElEMGdZeXdnZEZ0alhTQTlJR3dzSUhRdWNHOXdLQ2tzSUdSbGJHVjBaU0JoVzNKZExDQlBZbXBsWTNRdWEyVjVjeWhoS1M1c1pXNW5kR2dnUFQwOUlEQWdKaVlnWkdWc1pYUmxJRzliYVYwN0NpQWdJQ0I5Q2lBZ0lDQmZiR1Z1WkVKcGJtUnBibWNvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUc0Z1BTQmxMbDlqWVdOb1pVbHVaR1Y0TENCcElEMGdkR2hwY3k1ZmJrRmpkR2wyWlVKcGJtUnBibWR6S3lzc0lISWdQU0IwVzJsZE93b2dJQ0FnSUNBZ0lHVXVYMk5oWTJobFNXNWtaWGdnUFNCcExDQjBXMmxkSUQwZ1pTd2djaTVmWTJGamFHVkpibVJsZUNBOUlHNHNJSFJiYmwwZ1BTQnlPd29nSUNBZ2ZRb2dJQ0FnWDNSaGEyVkNZV05yUW1sdVpHbHVaeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlpYVc1a2FXNW5jeXdnYmlBOUlHVXVYMk5oWTJobFNXNWtaWGdzSUdrZ1BTQXRMWFJvYVhNdVgyNUJZM1JwZG1WQ2FXNWthVzVuY3l3Z2NpQTlJSFJiYVYwN0NpQWdJQ0FnSUNBZ1pTNWZZMkZqYUdWSmJtUmxlQ0E5SUdrc0lIUmJhVjBnUFNCbExDQnlMbDlqWVdOb1pVbHVaR1Y0SUQwZ2Jpd2dkRnR1WFNBOUlISTdDaUFnSUNCOUNpQWdJQ0JmYkdWdVpFTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgyTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRITXNJSFFnUFNCMGFHbHpMbDl1UVdOMGFYWmxRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjeXNyTENCdUlEMGdaVnQwWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h1SUQwZ2JtVjNJRTVoS0c1bGR5QkdiRzloZERNeVFYSnlZWGtvTWlrc0lHNWxkeUJHYkc5aGRETXlRWEp5WVhrb01pa3NJREVzSUhSb2FYTXVYMk52Ym5SeWIyeEpiblJsY25CdmJHRnVkSE5TWlhOMWJIUkNkV1ptWlhJcExDQnVMbDlmWTJGamFHVkpibVJsZUNBOUlIUXNJR1ZiZEYwZ1BTQnVLU3dnYmpzS0lDQWdJSDBLSUNBZ0lGOTBZV3RsUW1GamEwTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWpiMjUwY205c1NXNTBaWEp3YjJ4aGJuUnpMQ0J1SUQwZ1pTNWZYMk5oWTJobFNXNWtaWGdzSUdrZ1BTQXRMWFJvYVhNdVgyNUJZM1JwZG1WRGIyNTBjbTlzU1c1MFpYSndiMnhoYm5SekxDQnlJRDBnZEZ0cFhUc0tJQ0FnSUNBZ0lDQmxMbDlmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQmxMQ0J5TGw5ZlkyRmphR1ZKYm1SbGVDQTlJRzRzSUhSYmJsMGdQU0J5T3dvZ0lDQWdmUW9nSUNBZ1kyeHBjRUZqZEdsdmJpaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBJSHg4SUhSb2FYTXVYM0p2YjNRc0lISWdQU0JwTG5WMWFXUXNJRzhnUFNCMGVYQmxiMllnWlNBOVBTQWljM1J5YVc1bklpQS9JRXh5TG1acGJtUkNlVTVoYldVb2FTd2daU2tnT2lCbExDQmhJRDBnYnlBaFBUMGdiblZzYkNBL0lHOHVkWFZwWkNBNklHVXNJR3dnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd1cyRmRMQ0JqSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb2JpQTlQVDBnZG05cFpDQXdJQ1ltSUNodklDRTlQU0J1ZFd4c0lEOGdiaUE5SUc4dVlteGxibVJOYjJSbElEb2diaUE5SUhWaEtTd2diQ0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdiQzVoWTNScGIyNUNlVkp2YjNSYmNsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDFJQ0U5UFNCMmIybGtJREFnSmlZZ2RTNWliR1Z1WkUxdlpHVWdQVDA5SUc0cElISmxkSFZ5YmlCMU93b2dJQ0FnSUNBZ0lDQWdJQ0JqSUQwZ2JDNXJibTkzYmtGamRHbHZibk5iTUYwc0lHOGdQVDA5SUc1MWJHd2dKaVlnS0c4Z1BTQmpMbDlqYkdsd0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0c4Z1BUMDlJRzUxYkd3cElISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdibVYzSUZwb0tIUm9hWE1zSUc4c0lIUXNJRzRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWlhVzVrUVdOMGFXOXVLR2dzSUdNcExDQjBhR2x6TGw5aFpHUkpibUZqZEdsMlpVRmpkR2x2Ymlob0xDQmhMQ0J5S1N3Z2FEc0tJQ0FnSUgwS0lDQWdJR1Y0YVhOMGFXNW5RV04wYVc5dUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRZ2ZId2dkR2hwY3k1ZmNtOXZkQ3dnYVNBOUlHNHVkWFZwWkN3Z2NpQTlJSFI1Y0dWdlppQmxJRDA5SUNKemRISnBibWNpSUQ4Z1RISXVabWx1WkVKNVRtRnRaU2h1TENCbEtTQTZJR1VzSUc4Z1BTQnlJRDhnY2k1MWRXbGtJRG9nWlN3Z1lTQTlJSFJvYVhNdVgyRmpkR2x2Ym5OQ2VVTnNhWEJiYjEwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdFZ0lUMDlJSFp2YVdRZ01DQW1KaUJoTG1GamRHbHZia0o1VW05dmRGdHBYU0I4ZkNCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnYzNSdmNFRnNiRUZqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgyRmpkR2x2Ym5Nc0lIUWdQU0IwYUdsekxsOXVRV04wYVhabFFXTjBhVzl1Y3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQjBJQzBnTVRzZ2JpQStQU0F3T3lBdExXNHBaVnR1WFM1emRHOXdLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR1VnS2owZ2RHaHBjeTUwYVcxbFUyTmhiR1U3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWhZM1JwYjI1ekxDQnVJRDBnZEdocGN5NWZia0ZqZEdsMlpVRmpkR2x2Ym5Nc0lHa2dQU0IwYUdsekxuUnBiV1VnS3owZ1pTd2djaUE5SUUxaGRHZ3VjMmxuYmlobEtTd2dieUE5SUhSb2FYTXVYMkZqWTNWSmJtUmxlQ0JlUFNBeE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJREE3SUdNZ0lUMDlJRzQ3SUNzcll5bDBXMk5kTGw5MWNHUmhkR1VvYVN3Z1pTd2djaXdnYnlrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpMbDlpYVc1a2FXNW5jeXdnYkNBOUlIUm9hWE11WDI1QlkzUnBkbVZDYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR014SUQwZ01Ec2dZekVnSVQwOUlHdzdJQ3NyWXpFcFlWdGpNVjB1WVhCd2JIa29ieWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJVYVcxbEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuUnBiV1VnUFNBd093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQjBhR2x6TGw5aFkzUnBiMjV6TG14bGJtZDBhRHNnZENzcktYUm9hWE11WDJGamRHbHZibk5iZEYwdWRHbHRaU0E5SURBN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWEJrWVhSbEtHVXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVtOXZkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZjbTl2ZERzS0lDQWdJSDBLSUNBZ0lIVnVZMkZqYUdWRGJHbHdLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJRzRnUFNCbExuVjFhV1FzSUdrZ1BTQjBhR2x6TGw5aFkzUnBiMjV6UW5sRGJHbHdMQ0J5SUQwZ2FWdHVYVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2NpNXJibTkzYmtGamRHbHZibk03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREFzSUd3Z1BTQnZMbXhsYm1kMGFEc2dZU0FoUFQwZ2JEc2dLeXRoS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYjF0aFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJSbFlXTjBhWFpoZEdWQlkzUnBiMjRvWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUdNdVgyTmhZMmhsU1c1a1pYZ3NJSFVnUFNCMFczUXViR1Z1WjNSb0lDMGdNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqTGw5allXTm9aVWx1WkdWNElEMGdiblZzYkN3Z1l5NWZZbmxEYkdsd1EyRmphR1ZKYm1SbGVDQTlJRzUxYkd3c0lIVXVYMk5oWTJobFNXNWtaWGdnUFNCb0xDQjBXMmhkSUQwZ2RTd2dkQzV3YjNBb0tTd2dkR2hwY3k1ZmNtVnRiM1psU1c1aFkzUnBkbVZDYVc1a2FXNW5jMFp2Y2tGamRHbHZiaWhqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCa1pXeGxkR1VnYVZ0dVhUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IxYm1OaFkyaGxVbTl2ZENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMblYxYVdRc0lHNGdQU0IwYUdsekxsOWhZM1JwYjI1elFubERiR2x3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlCcGJpQnVLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVcyOWRMbUZqZEdsdmJrSjVVbTl2ZEN3Z2JDQTlJR0ZiZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR3dnSVQwOUlIWnZhV1FnTUNBbUppQW9kR2hwY3k1ZlpHVmhZM1JwZG1GMFpVRmpkR2x2Ymloc0tTd2dkR2hwY3k1ZmNtVnRiM1psU1c1aFkzUnBkbVZCWTNScGIyNG9iQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMkpwYm1ScGJtZHpRbmxTYjI5MFFXNWtUbUZ0WlN3Z2NpQTlJR2xiZEYwN0NpQWdJQ0FnSUNBZ2FXWWdLSElnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCdk1TQnBiaUJ5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFeElEMGdjbHR2TVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR0V4TG5KbGMzUnZjbVZQY21sbmFXNWhiRk4wWVhSbEtDa3NJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUW1sdVpHbHVaeWhoTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkVzVqWVdOb1pVRmpkR2x2YmlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtVjRhWE4wYVc1blFXTjBhVzl1S0dVc0lIUXBPd29nSUNBZ0lDQWdJRzRnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDJSbFlXTjBhWFpoZEdWQlkzUnBiMjRvYmlrc0lIUm9hWE11WDNKbGJXOTJaVWx1WVdOMGFYWmxRV04wYVc5dUtHNHBLVHNLSUNBZ0lIMEtmVHNLSkdndWNISnZkRzkwZVhCbExsOWpiMjUwY205c1NXNTBaWEp3YjJ4aGJuUnpVbVZ6ZFd4MFFuVm1abVZ5SUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNneEtUc0tkbUZ5SUdkdklEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdkSGx3Wlc5bUlHVWdQVDBnSW5OMGNtbHVaeUlnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWVzVwWm05eWJUb2dWSGx3WlNCd1lYSmhiV1YwWlhJZ2FYTWdibThnYkc5dVoyVnlJRzVsWldSbFpDNGlLU3dnWlNBOUlHRnlaM1Z0Wlc1MGMxc3hYU2tzSUhSb2FYTXVkbUZzZFdVZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCbmJ5aDBhR2x6TG5aaGJIVmxMbU5zYjI1bElEMDlQU0IyYjJsa0lEQWdQeUIwYUdsekxuWmhiSFZsSURvZ2RHaHBjeTUyWVd4MVpTNWpiRzl1WlNncEtUc0tJQ0FnSUgwS2ZTd2dhbWdnUFNCamJHRnpjeUJsZUhSbGJtUnpJQ1J1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWxjMmhRWlhKQmRIUnlhV0oxZEdVZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11YldWemFGQmxja0YwZEhKcFluVjBaU0E5SUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhOMWNHVnlMbU5zYjI1bEtHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVWdQU0IwYUdsekxtMWxjMmhRWlhKQmRIUnlhV0oxZEdVc0lIUTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbWx6U1c1emRHRnVZMlZrU1c1MFpYSnNaV0YyWldSQ2RXWm1aWElnUFNBaE1Dd2dkQzV0WlhOb1VHVnlRWFIwY21saWRYUmxJRDBnZEdocGN5NXRaWE5vVUdWeVFYUjBjbWxpZFhSbExDQjBPd29nSUNBZ2ZRcDlPd3BxYUM1d2NtOTBiM1I1Y0dVdWFYTkpibk4wWVc1alpXUkpiblJsY214bFlYWmxaRUoxWm1abGNpQTlJQ0V3T3dwMllYSWdVV2dnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1KMVptWmxjaUE5SUdVc0lIUm9hWE11ZEhsd1pTQTlJSFFzSUhSb2FYTXVhWFJsYlZOcGVtVWdQU0J1TENCMGFHbHpMbVZzWlcxbGJuUlRhWHBsSUQwZ2FTd2dkR2hwY3k1amIzVnVkQ0E5SUhJc0lIUm9hWE11ZG1WeWMybHZiaUE5SURBN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnYm1WbFpITlZjR1JoZEdVb1pTa2dld29nSUNBZ0lDQWdJR1VnUFQwOUlDRXdJQ1ltSUhSb2FYTXVkbVZ5YzJsdmJpc3JPd29nSUNBZ2ZRb2dJQ0FnYzJWMFFuVm1abVZ5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVpZFdabVpYSWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZIbHdaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEhsd1pTQTlJR1VzSUhSb2FYTXVaV3hsYldWdWRGTnBlbVVnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBTWFJsYlZOcGVtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbDBaVzFUYVhwbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVOdmRXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiM1Z1ZENBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NsRm9MbkJ5YjNSdmRIbHdaUzVwYzBkTVFuVm1abVZ5UVhSMGNtbGlkWFJsSUQwZ0lUQTdDblpoY2lCRmVTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQXdMQ0JwSUQwZ01TQXZJREFwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjbUY1SUQwZ2JtVjNJRU51S0dVc0lIUXBMQ0IwYUdsekxtNWxZWElnUFNCdUxDQjBhR2x6TG1aaGNpQTlJR2tzSUhSb2FYTXVZMkZ0WlhKaElEMGdiblZzYkN3Z2RHaHBjeTVzWVhsbGNuTWdQU0J1WlhjZ1NuTXNJSFJvYVhNdWNHRnlZVzF6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JOWlhOb09pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1RHbHVaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdoeVpYTm9iMnhrT2lBeENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lFeFBSRG9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJRkJ2YVc1MGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5WlhOb2IyeGtPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUZOd2NtbDBaVG9nZTMwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmhlUzV6WlhRb1pTd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTJGdFpYSmhLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBJQ1ltSUhRdWFYTlFaWEp6Y0dWamRHbDJaVU5oYldWeVlTQS9JQ2gwYUdsekxuSmhlUzV2Y21sbmFXNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hRdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxuSmhlUzVrYVhKbFkzUnBiMjR1YzJWMEtHVXVlQ3dnWlM1NUxDQXVOU2t1ZFc1d2NtOXFaV04wS0hRcExuTjFZaWgwYUdsekxuSmhlUzV2Y21sbmFXNHBMbTV2Y20xaGJHbDZaU2dwTENCMGFHbHpMbU5oYldWeVlTQTlJSFFwSURvZ2RDQW1KaUIwTG1selQzSjBhRzluY21Gd2FHbGpRMkZ0WlhKaElEOGdLSFJvYVhNdWNtRjVMbTl5YVdkcGJpNXpaWFFvWlM1NExDQmxMbmtzSUNoMExtNWxZWElnS3lCMExtWmhjaWtnTHlBb2RDNXVaV0Z5SUMwZ2RDNW1ZWElwS1M1MWJuQnliMnBsWTNRb2RDa3NJSFJvYVhNdWNtRjVMbVJwY21WamRHbHZiaTV6WlhRb01Dd2dNQ3dnTFRFcExuUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaDBMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTVqWVcxbGNtRWdQU0IwS1NBNklHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEpoZVdOaGMzUmxjam9nVlc1emRYQndiM0owWldRZ1kyRnRaWEpoSUhSNWNHVTZJQ0lnS3lCMExuUjVjR1VwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMFQySnFaV04wS0dVc0lIUWdQU0FoTUN3Z2JpQTlJRnRkS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUd4aEtHVXNJSFJvYVhNc0lHNHNJSFFwTENCdUxuTnZjblFvVUdNcExDQnVPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wVDJKcVpXTjBjeWhsTENCMElEMGdJVEFzSUc0Z1BTQmJYU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCbExteGxibWQwYURzZ2FTQThJSEk3SUdrckt5bHNZU2hsVzJsZExDQjBhR2x6TENCdUxDQjBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTV6YjNKMEtGQmpLU3dnYmpzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1VHTW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE11WkdsemRHRnVZMlVnTFNCbExtUnBjM1JoYm1ObE93cDlDbVoxYm1OMGFXOXVJR3hoS0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUdsbUlDaHpMbXhoZVdWeWN5NTBaWE4wS0dVdWJHRjVaWEp6S1NBbUppQnpMbkpoZVdOaGMzUW9aU3dnZENrc0lHNGdQVDA5SUNFd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnpMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0JwTG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lsc1lTaHBXM0pkTENCbExDQjBMQ0FoTUNrN0NpQWdJQ0I5Q24wS2RtRnlJRUY1SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBd0xDQnVJRDBnTUNsN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbUZrYVhWeklEMGdaU3dnZEdocGN5NXdhR2tnUFNCMExDQjBhR2x6TG5Sb1pYUmhJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRDBnWlN3Z2RHaHBjeTV3YUdrZ1BTQjBMQ0IwYUdsekxuUm9aWFJoSUQwZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJR1V1Y21Ga2FYVnpMQ0IwYUdsekxuQm9hU0E5SUdVdWNHaHBMQ0IwYUdsekxuUm9aWFJoSUQwZ1pTNTBhR1YwWVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlRZV1psS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJvYVNBOUlFMWhkR2d1YldGNEtERmxMVFlzSUUxaGRHZ3ViV2x1S0UxaGRHZ3VVRWtnTFNBeFpTMDJMQ0IwYUdsekxuQm9hU2twTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVlpsWTNSdmNqTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRVp5YjIxRFlYSjBaWE5wWVc1RGIyOXlaSE1vWlM1NExDQmxMbmtzSUdVdWVpazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMkZ5ZEdWemFXRnVRMjl2Y21SektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WVdScGRYTWdQU0JOWVhSb0xuTnhjblFvWlNBcUlHVWdLeUIwSUNvZ2RDQXJJRzRnS2lCdUtTd2dkR2hwY3k1eVlXUnBkWE1nUFQwOUlEQWdQeUFvZEdocGN5NTBhR1YwWVNBOUlEQXNJSFJvYVhNdWNHaHBJRDBnTUNrZ09pQW9kR2hwY3k1MGFHVjBZU0E5SUUxaGRHZ3VZWFJoYmpJb1pTd2diaWtzSUhSb2FYTXVjR2hwSUQwZ1RXRjBhQzVoWTI5ektHMTBLSFFnTHlCMGFHbHpMbkpoWkdsMWN5d2dMVEVzSURFcEtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUXA5TENCRGVTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNQ3dnYmlBOUlEQXBld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUdVc0lIUm9hWE11ZEdobGRHRWdQU0IwTENCMGFHbHpMbmtnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCbExDQjBhR2x6TG5Sb1pYUmhJRDBnZEN3Z2RHaHBjeTU1SUQwZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJR1V1Y21Ga2FYVnpMQ0IwYUdsekxuUm9aWFJoSUQwZ1pTNTBhR1YwWVN3Z2RHaHBjeTU1SUQwZ1pTNTVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWWmxZM1J2Y2pNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRFWnliMjFEWVhKMFpYTnBZVzVEYjI5eVpITW9aUzU0TENCbExua3NJR1V1ZWlrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEyRnlkR1Z6YVdGdVEyOXZjbVJ6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlZV1JwZFhNZ1BTQk5ZWFJvTG5OeGNuUW9aU0FxSUdVZ0t5QnVJQ29nYmlrc0lIUm9hWE11ZEdobGRHRWdQU0JOWVhSb0xtRjBZVzR5S0dVc0lHNHBMQ0IwYUdsekxua2dQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS2ZTd2dTV01nUFNCdVpYY2dXQ3dnY1drZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZnb01TQXZJREFzSURFZ0x5QXdLU3dnZENBOUlHNWxkeUJZS0MweElDOGdNQ3dnTFRFZ0x5QXdLU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRhVzRnUFNCbExDQjBhR2x6TG0xaGVDQTlJSFE3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1amIzQjVLR1VwTENCMGFHbHpMbTFoZUM1amIzQjVLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVkJ2YVc1MGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZV3RsUlcxd2RIa29LVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnWlM1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGRHaHBjeTVsZUhCaGJtUkNlVkJ2YVc1MEtHVmJkRjBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVTmxiblJsY2tGdVpGTnBlbVVvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdTV011WTI5d2VTaDBLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VOU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbU52Y0hrb1pTa3VjM1ZpS0c0cExDQjBhR2x6TG0xaGVDNWpiM0I1S0dVcExtRmtaQ2h1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVZMjl3ZVNobExtMXBiaWtzSUhSb2FYTXViV0Y0TG1OdmNIa29aUzV0WVhncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVVZ0Y0hSNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNTRJRDBnZEdocGN5NXRhVzR1ZVNBOUlERWdMeUF3TENCMGFHbHpMbTFoZUM1NElEMGdkR2hwY3k1dFlYZ3VlU0E5SUMweElDOGdNQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2x6Ulcxd2RIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXRjRMbmdnUENCMGFHbHpMbTFwYmk1NElIeDhJSFJvYVhNdWJXRjRMbmtnUENCMGFHbHpMbTFwYmk1NU93b2dJQ0FnZlFvZ0lDQWdaMlYwUTJWdWRHVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBjMFZ0Y0hSNUtDa2dQeUJsTG5ObGRDZ3dMQ0F3S1NBNklHVXVZV1JrVm1WamRHOXljeWgwYUdsekxtMXBiaXdnZEdocGN5NXRZWGdwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzQxS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRk5wZW1Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1selJXMXdkSGtvS1NBL0lHVXVjMlYwS0RBc0lEQXBJRG9nWlM1emRXSldaV04wYjNKektIUm9hWE11YldGNExDQjBhR2x6TG0xcGJpazdDaUFnSUNCOUNpQWdJQ0JsZUhCaGJtUkNlVkJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHViV2x1S0dVcExDQjBhR2x6TG0xaGVDNXRZWGdvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGVIQmhibVJDZVZabFkzUnZjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG5OMVlpaGxLU3dnZEdocGN5NXRZWGd1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWGh3WVc1a1FubFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNWhaR1JUWTJGc1lYSW9MV1VwTENCMGFHbHpMbTFoZUM1aFpHUlRZMkZzWVhJb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiMjUwWVdsdWMxQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lTaGxMbmdnUENCMGFHbHpMbTFwYmk1NElIeDhJR1V1ZUNBK0lIUm9hWE11YldGNExuZ2dmSHdnWlM1NUlEd2dkR2hwY3k1dGFXNHVlU0I4ZkNCbExua2dQaUIwYUdsekxtMWhlQzU1S1RzS0lDQWdJSDBLSUNBZ0lHTnZiblJoYVc1elFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1ZUNBOFBTQmxMbTFwYmk1NElDWW1JR1V1YldGNExuZ2dQRDBnZEdocGN5NXRZWGd1ZUNBbUppQjBhR2x6TG0xcGJpNTVJRHc5SUdVdWJXbHVMbmtnSmlZZ1pTNXRZWGd1ZVNBOFBTQjBhR2x6TG0xaGVDNTVPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVHRnlZVzFsZEdWeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1elpYUW9LR1V1ZUNBdElIUm9hWE11YldsdUxuZ3BJQzhnS0hSb2FYTXViV0Y0TG5nZ0xTQjBhR2x6TG0xcGJpNTRLU3dnS0dVdWVTQXRJSFJvYVhNdWJXbHVMbmtwSUM4Z0tIUm9hWE11YldGNExua2dMU0IwYUdsekxtMXBiaTU1S1NrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpRbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lTaGxMbTFoZUM1NElEd2dkR2hwY3k1dGFXNHVlQ0I4ZkNCbExtMXBiaTU0SUQ0Z2RHaHBjeTV0WVhndWVDQjhmQ0JsTG0xaGVDNTVJRHdnZEdocGN5NXRhVzR1ZVNCOGZDQmxMbTFwYmk1NUlENGdkR2hwY3k1dFlYZ3VlU2s3Q2lBZ0lDQjlDaUFnSUNCamJHRnRjRkJ2YVc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1amIzQjVLR1VwTG1Oc1lXMXdLSFJvYVhNdWJXbHVMQ0IwYUdsekxtMWhlQ2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCSll5NWpiM0I1S0dVcExtTnNZVzF3S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrdWMzVmlLR1VwTG14bGJtZDBhQ2dwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHViV0Y0S0dVdWJXbHVLU3dnZEdocGN5NXRZWGd1YldsdUtHVXViV0Y0S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhWdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldsdUtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndWJXRjRLR1V1YldGNEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6YkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbUZrWkNobEtTd2dkR2hwY3k1dFlYZ3VZV1JrS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXRhVzR1WlhGMVlXeHpLSFJvYVhNdWJXbHVLU0FtSmlCbExtMWhlQzVsY1hWaGJITW9kR2hwY3k1dFlYZ3BPd29nSUNBZ2ZRcDlPd3B4YVM1d2NtOTBiM1I1Y0dVdWFYTkNiM2d5SUQwZ0lUQTdDblpoY2lCRVl5QTlJRzVsZHlCTkxDQlVjeUE5SUc1bGR5Qk5MQ0JMYUNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnVFN3Z2RDQTlJRzVsZHlCTktYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5OMFlYSjBJRDBnWlN3Z2RHaHBjeTVsYm1RZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpkR0Z5ZEM1amIzQjVLR1VwTENCMGFHbHpMbVZ1WkM1amIzQjVLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMzUmhjblF1WTI5d2VTaGxMbk4wWVhKMEtTd2dkR2hwY3k1bGJtUXVZMjl3ZVNobExtVnVaQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSRFpXNTBaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtRmtaRlpsWTNSdmNuTW9kR2hwY3k1emRHRnlkQ3dnZEdocGN5NWxibVFwTG0xMWJIUnBjR3g1VTJOaGJHRnlLQzQxS1RzS0lDQWdJSDBLSUNBZ0lHUmxiSFJoS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpkV0pXWldOMGIzSnpLSFJvYVhNdVpXNWtMQ0IwYUdsekxuTjBZWEowS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFUzRW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMzUmhjblF1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvZEdocGN5NWxibVFwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNSaGNuUXVaR2x6ZEdGdVkyVlVieWgwYUdsekxtVnVaQ2s3Q2lBZ0lDQjlDaUFnSUNCaGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR1ZzZEdFb2RDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1pTa3VZV1JrS0hSb2FYTXVjM1JoY25RcE93b2dJQ0FnZlFvZ0lDQWdZMnh2YzJWemRGQnZhVzUwVkc5UWIybHVkRkJoY21GdFpYUmxjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdSR011YzNWaVZtVmpkRzl5Y3lobExDQjBhR2x6TG5OMFlYSjBLU3dnVkhNdWMzVmlWbVZqZEc5eWN5aDBhR2x6TG1WdVpDd2dkR2hwY3k1emRHRnlkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JVY3k1a2IzUW9WSE1wTENCeUlEMGdWSE11Wkc5MEtFUmpLU0F2SUc0N0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0ppWWdLSElnUFNCdGRDaHlMQ0F3TENBeEtTa3NJSEk3Q2lBZ0lDQjlDaUFnSUNCamJHOXpaWE4wVUc5cGJuUlViMUJ2YVc1MEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WTJ4dmMyVnpkRkJ2YVc1MFZHOVFiMmx1ZEZCaGNtRnRaWFJsY2lobExDQjBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1pXeDBZU2h1S1M1dGRXeDBhWEJzZVZOallXeGhjaWhwS1M1aFpHUW9kR2hwY3k1emRHRnlkQ2s3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVTFoZEhKcGVEUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTjBZWEowTG1Gd2NHeDVUV0YwY21sNE5DaGxLU3dnZEdocGN5NWxibVF1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6ZEdGeWRDNWxjWFZoYkhNb2RHaHBjeTV6ZEdGeWRDa2dKaVlnWlM1bGJtUXVaWEYxWVd4ektIUm9hWE11Wlc1a0tUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q24wc0lFWmpJRDBnYm1WM0lFMHNJRXg1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJPWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWJHbG5hSFFnUFNCbExDQjBhR2x6TG14cFoyaDBMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2tzSUhSb2FYTXViV0YwY21sNElEMGdaUzV0WVhSeWFYaFhiM0pzWkN3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WTI5c2IzSWdQU0IwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYm1WM0lGOWxMQ0JwSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBc0lHRWdQU0F4TENCc0lEMGdNekk3SUc4Z1BDQnNPeUJ2S3lzc0lHRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2J5QXZJR3dnS2lCTllYUm9MbEJKSUNvZ01pd2dhQ0E5SUdFZ0x5QnNJQ29nVFdGMGFDNVFTU0FxSURJN0NpQWdJQ0FnSUNBZ0lDQWdJR2t1Y0hWemFDaE5ZWFJvTG1OdmN5aGpLU3dnVFdGMGFDNXphVzRvWXlrc0lERXNJRTFoZEdndVkyOXpLR2dwTENCTllYUm9Mbk5wYmlob0tTd2dNU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUc0dWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2hwTENBektTazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnWm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjJjNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVZMjl1WlNBOUlHNWxkeUIzZENodUxDQnlLU3dnZEdocGN5NWhaR1FvZEdocGN5NWpiMjVsS1N3Z2RHaHBjeTUxY0dSaGRHVW9LVHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYjI1bExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1amIyNWxMbTFoZEdWeWFXRnNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbXhwWjJoMExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDazdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG14cFoyaDBMbVJwYzNSaGJtTmxJRDhnZEdocGN5NXNhV2RvZEM1a2FYTjBZVzVqWlNBNklERmxNeXdnZENBOUlHVWdLaUJOWVhSb0xuUmhiaWgwYUdsekxteHBaMmgwTG1GdVoyeGxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtTnZibVV1YzJOaGJHVXVjMlYwS0hRc0lIUXNJR1VwTENCR1l5NXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZEdocGN5NXNhV2RvZEM1MFlYSm5aWFF1YldGMGNtbDRWMjl5YkdRcExDQjBhR2x6TG1OdmJtVXViRzl2YTBGMEtFWmpLU3dnZEdocGN5NWpiMnh2Y2lBaFBUMGdkbTlwWkNBd0lEOGdkR2hwY3k1amIyNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxuTmxkQ2gwYUdsekxtTnZiRzl5S1NBNklIUm9hWE11WTI5dVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1amIzQjVLSFJvYVhNdWJHbG5hSFF1WTI5c2IzSXBPd29nSUNBZ2ZRcDlMQ0I1YmlBOUlHNWxkeUJOTENCRmN5QTlJRzVsZHlCd1pTd2dVVzhnUFNCdVpYY2djR1VzSUdWMUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCM2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFIxS0dVcExDQnVJRDBnYm1WM0lGOWxMQ0JwSUQwZ1cxMHNJSElnUFNCYlhTd2dieUE5SUc1bGR5QmhaU2d3TENBd0xDQXhLU3dnWVNBOUlHNWxkeUJoWlNnd0xDQXhMQ0F3S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdPeUJqSUR3Z2RDNXNaVzVuZEdnN0lHTXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2RGdGpYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDNXdZWEpsYm5RZ0ppWWdhQzV3WVhKbGJuUXVhWE5DYjI1bElDWW1JQ2hwTG5CMWMyZ29NQ3dnTUN3Z01Da3NJR2t1Y0hWemFDZ3dMQ0F3TENBd0tTd2djaTV3ZFhOb0tHOHVjaXdnYnk1bkxDQnZMbUlwTENCeUxuQjFjMmdvWVM1eUxDQmhMbWNzSUdFdVlpa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J1TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9hU3dnTXlrcExDQnVMbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2daR1VvY2l3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hVWlhOME9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnZibVZOWVhCd1pXUTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzNCaGNtVnVkRG9nSVRBS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodUxDQnNLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUydGxiR1YwYjI1SVpXeHdaWElpTENCMGFHbHpMbWx6VTJ0bGJHVjBiMjVJWld4d1pYSWdQU0FoTUN3Z2RHaHBjeTV5YjI5MElEMGdaU3dnZEdocGN5NWliMjVsY3lBOUlIUXNJSFJvYVhNdWJXRjBjbWw0SUQwZ1pTNXRZWFJ5YVhoWGIzSnNaQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1KdmJtVnpMQ0J1SUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnYVNBOUlHNHVaMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJcE93b2dJQ0FnSUNBZ0lGRnZMbU52Y0hrb2RHaHBjeTV5YjI5MExtMWhkSEpwZUZkdmNteGtLUzVwYm5abGNuUW9LVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQnZJRDBnTURzZ2NpQThJSFF1YkdWdVozUm9PeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJiY2wwN0NpQWdJQ0FnSUNBZ0lDQWdJR0V1Y0dGeVpXNTBJQ1ltSUdFdWNHRnlaVzUwTG1selFtOXVaU0FtSmlBb1JYTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aFJieXdnWVM1dFlYUnlhWGhYYjNKc1pDa3NJSGx1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaEZjeWtzSUdrdWMyVjBXRmxhS0c4c0lIbHVMbmdzSUhsdUxua3NJSGx1TG5vcExDQkZjeTV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLRkZ2TENCaExuQmhjbVZ1ZEM1dFlYUnlhWGhYYjNKc1pDa3NJSGx1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaEZjeWtzSUdrdWMyVjBXRmxhS0c4Z0t5QXhMQ0I1Ymk1NExDQjViaTU1TENCNWJpNTZLU3dnYnlBclBTQXlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYmk1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWt1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnYzNWd1pYSXVkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2s3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUhSMUtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ1cxMDdDaUFnSUNCeklDWW1JSE11YVhOQ2IyNWxJQ1ltSUdVdWNIVnphQ2h6S1RzS0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0J6TG1Ob2FXeGtjbVZ1TG14bGJtZDBhRHNnZENzcktXVXVjSFZ6YUM1aGNIQnNlU2hsTENCMGRTaHpMbU5vYVd4a2NtVnVXM1JkS1NrN0NpQWdJQ0J5WlhSMWNtNGdaVHNLZlFwMllYSWdVbmtnUFNCamJHRnpjeUJsZUhSbGJtUnpJSE4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYm1WM0lFWnBLSFFzSURRc0lESXBMQ0J5SUQwZ2JtVjNJR2h1S0hzS0lDQWdJQ0FnSUNBZ0lDQWdkMmx5WldaeVlXMWxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdabTluT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHBMQ0J5S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbXhwWjJoMElEMGdaU3dnZEdocGN5NXNhV2RvZEM1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNncExDQjBhR2x6TG1OdmJHOXlJRDBnYml3Z2RHaHBjeTUwZVhCbElEMGdJbEJ2YVc1MFRHbG5hSFJJWld4d1pYSWlMQ0IwYUdsekxtMWhkSEpwZUNBOUlIUm9hWE11YkdsbmFIUXViV0YwY21sNFYyOXliR1FzSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMblZ3WkdGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiMnh2Y2lBaFBUMGdkbTlwWkNBd0lEOGdkR2hwY3k1dFlYUmxjbWxoYkM1amIyeHZjaTV6WlhRb2RHaHBjeTVqYjJ4dmNpa2dPaUIwYUdsekxtMWhkR1Z5YVdGc0xtTnZiRzl5TG1OdmNIa29kR2hwY3k1c2FXZG9kQzVqYjJ4dmNpazdDaUFnSUNCOUNuMHNJRkI1SUQwZ2JtVjNJRTBzSUU1aklEMGdibVYzSUdGbExDQkNZeUE5SUc1bGR5QmhaU3dnU1hrZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVdkb2RDQTlJR1VzSUhSb2FYTXViR2xuYUhRdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0tTd2dkR2hwY3k1dFlYUnlhWGdnUFNCbExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWpiMnh2Y2lBOUlHNDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnU1drb2RDazdDaUFnSUNBZ0lDQWdhUzV5YjNSaGRHVlpLRTFoZEdndVVFa2dLaUF1TlNrc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCdVpYY2dhRzRvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjNhWEpsWm5KaGJXVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1iMmM2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxtTnZiRzl5SUQwOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWJXRjBaWEpwWVd3dWRtVnlkR1Y0UTI5c2IzSnpJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2FTNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrc0lHOGdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLSEl1WTI5MWJuUWdLaUF6S1RzS0lDQWdJQ0FnSUNCcExuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1ZXVW9ieXdnTXlrcExDQjBhR2x6TG1Ga1pDaHVaWGNnYzNRb2FTd2dkR2hwY3k1dFlYUmxjbWxoYkNrcExDQjBhR2x6TG5Wd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1Ob2FXeGtjbVZ1V3pCZExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1amFHbHNaSEpsYmxzd1hTNXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtTm9hV3hrY21WdVd6QmRPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbU52Ykc5eUlDRTlQU0IyYjJsa0lEQXBJSFJvYVhNdWJXRjBaWEpwWVd3dVkyOXNiM0l1YzJWMEtIUm9hWE11WTI5c2IzSXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WjJWdmJXVjBjbmt1WjJWMFFYUjBjbWxpZFhSbEtDSmpiMnh2Y2lJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JPWXk1amIzQjVLSFJvYVhNdWJHbG5hSFF1WTI5c2IzSXBMQ0JDWXk1amIzQjVLSFJvYVhNdWJHbG5hSFF1WjNKdmRXNWtRMjlzYjNJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1amIzVnVkRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc0Z1BDQnBJQzhnTWlBL0lFNWpJRG9nUW1NN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExuTmxkRmhaV2lodUxDQnlMbklzSUhJdVp5d2djaTVpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHVXViRzl2YTBGMEtGQjVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloMGFHbHpMbXhwWjJoMExtMWhkSEpwZUZkdmNteGtLUzV1WldkaGRHVW9LU2s3Q2lBZ0lDQjlDbjBzSUc1MUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCM2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVRBc0lIUWdQU0F4TUN3Z2JpQTlJRFEwTnpNNU1qUXNJR2tnUFNBNE9UUTNPRFE0S1hzS0lDQWdJQ0FnSUNCdUlEMGdibVYzSUdGbEtHNHBMQ0JwSUQwZ2JtVjNJR0ZsS0drcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RDQXZJRElzSUc4Z1BTQmxJQzhnZEN3Z1lTQTlJR1VnTHlBeUxDQnNJRDBnVzEwc0lHTWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdRZ1BTQXdMQ0JtSUQwZ01Dd2diU0E5SUMxaE95QmtJRHc5SUhRN0lHUXJLeXdnYlNBclBTQnZLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JDNXdkWE5vS0MxaExDQXdMQ0J0TENCaExDQXdMQ0J0S1N3Z2JDNXdkWE5vS0cwc0lEQXNJQzFoTENCdExDQXdMQ0JoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQmtJRDA5UFNCeUlEOGdiaUE2SUdrN0NpQWdJQ0FnSUNBZ0lDQWdJSGd1ZEc5QmNuSmhlU2hqTENCbUtTd2daaUFyUFNBekxDQjRMblJ2UVhKeVlYa29ZeXdnWmlrc0lHWWdLejBnTXl3Z2VDNTBiMEZ5Y21GNUtHTXNJR1lwTENCbUlDczlJRE1zSUhndWRHOUJjbkpoZVNoakxDQm1LU3dnWmlBclBTQXpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQm9Mbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2JDd2dNeWtwTENCb0xuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1pHVW9ZeXdnTXlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFEyOXNiM0p6T2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaG9MQ0IxS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlSM0pwWkVobGJIQmxjaUk3Q2lBZ0lDQjlDbjBzSUVSNUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCM2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVRBc0lIUWdQU0F4Tml3Z2JpQTlJRGdzSUdrZ1BTQTJOQ3dnY2lBOUlEUTBOek01TWpRc0lHOGdQU0E0T1RRM09EUTRLWHNLSUNBZ0lDQWdJQ0J5SUQwZ2JtVjNJR0ZsS0hJcExDQnZJRDBnYm1WM0lHRmxLRzhwT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnVzEwc0lHd2dQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdPeUIxSUR3OUlIUTdJSFVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdkU0F2SUhRZ0tpQW9UV0YwYUM1UVNTQXFJRElwTENCbUlEMGdUV0YwYUM1emFXNG9aQ2tnS2lCbExDQnRJRDBnVFdGMGFDNWpiM01vWkNrZ0tpQmxPd29nSUNBZ0lDQWdJQ0FnSUNCaExuQjFjMmdvTUN3Z01Dd2dNQ2tzSUdFdWNIVnphQ2htTENBd0xDQnRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCMUlDWWdNU0EvSUhJZ09pQnZPd29nSUNBZ0lDQWdJQ0FnSUNCc0xuQjFjMmdvZUM1eUxDQjRMbWNzSUhndVlpa3NJR3d1Y0hWemFDaDRMbklzSUhndVp5d2dlQzVpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMU1TQTlJREE3SUhVeElEdzlJRzQ3SUhVeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaREVnUFNCMU1TQW1JREVnUHlCeUlEb2dieXdnWmpFZ1BTQmxJQzBnWlNBdklHNGdLaUIxTVRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRNU0E5SURBN0lHMHhJRHdnYVRzZ2JURXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VERWdQU0J0TVNBdklHa2dLaUFvVFdGMGFDNVFTU0FxSURJcExDQjJJRDBnVFdGMGFDNXphVzRvZURFcElDb2daakVzSUdjZ1BTQk5ZWFJvTG1OdmN5aDRNU2tnS2lCbU1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRXVjSFZ6YUNoMkxDQXdMQ0JuS1N3Z2JDNXdkWE5vS0dReExuSXNJR1F4TG1jc0lHUXhMbUlwTENCNE1TQTlJQ2h0TVNBcklERXBJQzhnYVNBcUlDaE5ZWFJvTGxCSklDb2dNaWtzSUhZZ1BTQk5ZWFJvTG5OcGJpaDRNU2tnS2lCbU1Td2daeUE5SUUxaGRHZ3VZMjl6S0hneEtTQXFJR1l4TENCaExuQjFjMmdvZGl3Z01Dd2daeWtzSUd3dWNIVnphQ2hrTVM1eUxDQmtNUzVuTENCa01TNWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCakxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvWVN3Z015a3BMQ0JqTG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnWkdVb2JDd2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2loakxDQm9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHOXNZWEpIY21sa1NHVnNjR1Z5SWpzS0lDQWdJSDBLZlN3Z2VtTWdQU0J1WlhjZ1RTd2dRWE1nUFNCdVpYY2dUU3dnVldNZ1BTQnVaWGNnVFN3Z1Jua2dQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXZG9kQ0E5SUdVc0lIUm9hWE11YkdsbmFIUXVkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9LU3dnZEdocGN5NXRZWFJ5YVhnZ1BTQmxMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVqYjJ4dmNpQTlJRzRzSUhRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvZENBOUlERXBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdibVYzSUY5bE93b2dJQ0FnSUNBZ0lHa3VjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNoYkNpQWdJQ0FnSUNBZ0lDQWdJQzEwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXRkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFhRc0NpQWdJQ0FnSUNBZ0lDQWdJQzEwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEN3S0lDQWdJQ0FnSUNBZ0lDQWdNQW9nSUNBZ0lDQWdJRjBzSURNcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUJtZENoN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2WnpvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhV2RvZEZCc1lXNWxJRDBnYm1WM0lHOXVLR2tzSUhJcExDQjBhR2x6TG1Ga1pDaDBhR2x6TG14cFoyaDBVR3hoYm1VcExDQnBJRDBnYm1WM0lGOWxMQ0JwTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9Xd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYU3dnTXlrcExDQjBhR2x6TG5SaGNtZGxkRXhwYm1VZ1BTQnVaWGNnYjI0b2FTd2djaWtzSUhSb2FYTXVZV1JrS0hSb2FYTXVkR0Z5WjJWMFRHbHVaU2tzSUhSb2FYTXVkWEJrWVhSbEtDazdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViR2xuYUhSUWJHRnVaUzVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXViR2xuYUhSUWJHRnVaUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaUzVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2VtTXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hSb2FYTXViR2xuYUhRdWJXRjBjbWw0VjI5eWJHUXBMQ0JCY3k1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1c2FXZG9kQzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCVll5NXpkV0pXWldOMGIzSnpLRUZ6TENCNll5a3NJSFJvYVhNdWJHbG5hSFJRYkdGdVpTNXNiMjlyUVhRb1FYTXBMQ0IwYUdsekxtTnZiRzl5SUNFOVBTQjJiMmxrSURBZ1B5QW9kR2hwY3k1c2FXZG9kRkJzWVc1bExtMWhkR1Z5YVdGc0xtTnZiRzl5TG5ObGRDaDBhR2x6TG1OdmJHOXlLU3dnZEdocGN5NTBZWEpuWlhSTWFXNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxuTmxkQ2gwYUdsekxtTnZiRzl5S1NrZ09pQW9kR2hwY3k1c2FXZG9kRkJzWVc1bExtMWhkR1Z5YVdGc0xtTnZiRzl5TG1OdmNIa29kR2hwY3k1c2FXZG9kQzVqYjJ4dmNpa3NJSFJvYVhNdWRHRnlaMlYwVEdsdVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1amIzQjVLSFJvYVhNdWJHbG5hSFF1WTI5c2IzSXBLU3dnZEdocGN5NTBZWEpuWlhSTWFXNWxMbXh2YjJ0QmRDaEJjeWtzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaUzV6WTJGc1pTNTZJRDBnVldNdWJHVnVaM1JvS0NrN0NpQWdJQ0I5Q24wc0lFTnpJRDBnYm1WM0lFMHNJRkZsSUQwZ2JtVjNJRWx5TENCT2VTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2QzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J1WlhjZ1gyVXNJRzRnUFNCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ01UWTNOemN5TVRVc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVFTnZiRzl5Y3pvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2tzSUdrZ1BTQmJYU3dnY2lBOUlGdGRMQ0J2SUQwZ2UzMHNJR0VnUFNCdVpYY2dZV1VvTVRZM05UVXlNREFwTENCc0lEMGdibVYzSUdGbEtERTJOekV4Tmpnd0tTd2dZeUE5SUc1bGR5QmhaU2cwTXpjM05Ta3NJR2dnUFNCdVpYY2dZV1VvTVRZM056Y3lNVFVwTENCMUlEMGdibVYzSUdGbEtETXpOVFUwTkRNcE93b2dJQ0FnSUNBZ0lHUW9JbTR4SWl3Z0ltNHlJaXdnWVNrc0lHUW9JbTR5SWl3Z0ltNDBJaXdnWVNrc0lHUW9JbTQwSWl3Z0ltNHpJaXdnWVNrc0lHUW9JbTR6SWl3Z0ltNHhJaXdnWVNrc0lHUW9JbVl4SWl3Z0ltWXlJaXdnWVNrc0lHUW9JbVl5SWl3Z0ltWTBJaXdnWVNrc0lHUW9JbVkwSWl3Z0ltWXpJaXdnWVNrc0lHUW9JbVl6SWl3Z0ltWXhJaXdnWVNrc0lHUW9JbTR4SWl3Z0ltWXhJaXdnWVNrc0lHUW9JbTR5SWl3Z0ltWXlJaXdnWVNrc0lHUW9JbTR6SWl3Z0ltWXpJaXdnWVNrc0lHUW9JbTQwSWl3Z0ltWTBJaXdnWVNrc0lHUW9JbkFpTENBaWJqRWlMQ0JzS1N3Z1pDZ2ljQ0lzSUNKdU1pSXNJR3dwTENCa0tDSndJaXdnSW00eklpd2diQ2tzSUdRb0luQWlMQ0FpYmpRaUxDQnNLU3dnWkNnaWRURWlMQ0FpZFRJaUxDQmpLU3dnWkNnaWRUSWlMQ0FpZFRNaUxDQmpLU3dnWkNnaWRUTWlMQ0FpZFRFaUxDQmpLU3dnWkNnaVl5SXNJQ0owSWl3Z2FDa3NJR1FvSW5BaUxDQWlZeUlzSUhVcExDQmtLQ0pqYmpFaUxDQWlZMjR5SWl3Z2RTa3NJR1FvSW1OdU15SXNJQ0pqYmpRaUxDQjFLU3dnWkNnaVkyWXhJaXdnSW1ObU1pSXNJSFVwTENCa0tDSmpaak1pTENBaVkyWTBJaXdnZFNrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1pDaHRMQ0I0TENCMktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdZb2JTd2dkaWtzSUdZb2VDd2dkaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdZb2JTd2dlQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBMbkIxYzJnb01Dd2dNQ3dnTUNrc0lISXVjSFZ6YUNoNExuSXNJSGd1Wnl3Z2VDNWlLU3dnYjF0dFhTQTlQVDBnZG05cFpDQXdJQ1ltSUNodlcyMWRJRDBnVzEwcExDQnZXMjFkTG5CMWMyZ29hUzVzWlc1bmRHZ2dMeUF6SUMwZ01TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFF1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHBMQ0F6S1Nrc0lIUXVjMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlzSUc1bGR5QmtaU2h5TENBektTazdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2RDd2diaWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrTmhiV1Z5WVVobGJIQmxjaUlzSUhSb2FYTXVZMkZ0WlhKaElEMGdaU3dnZEdocGN5NWpZVzFsY21FdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ0FtSmlCMGFHbHpMbU5oYldWeVlTNTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0Nrc0lIUm9hWE11YldGMGNtbDRJRDBnWlM1dFlYUnlhWGhYYjNKc1pDd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdWNHOXBiblJOWVhBZ1BTQnZMQ0IwYUdsekxuVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2RDQTlJSFJvYVhNdWNHOXBiblJOWVhBc0lHNGdQU0F4TENCcElEMGdNVHNLSUNBZ0lDQWdJQ0JSWlM1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtIUm9hWE11WTJGdFpYSmhMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYaEpiblpsY25ObEtTd2daWFFvSW1NaUxDQjBMQ0JsTENCUlpTd2dNQ3dnTUN3Z0xURXBMQ0JsZENnaWRDSXNJSFFzSUdVc0lGRmxMQ0F3TENBd0xDQXhLU3dnWlhRb0ltNHhJaXdnZEN3Z1pTd2dVV1VzSUMxdUxDQXRhU3dnTFRFcExDQmxkQ2dpYmpJaUxDQjBMQ0JsTENCUlpTd2diaXdnTFdrc0lDMHhLU3dnWlhRb0ltNHpJaXdnZEN3Z1pTd2dVV1VzSUMxdUxDQnBMQ0F0TVNrc0lHVjBLQ0p1TkNJc0lIUXNJR1VzSUZGbExDQnVMQ0JwTENBdE1Ta3NJR1YwS0NKbU1TSXNJSFFzSUdVc0lGRmxMQ0F0Yml3Z0xXa3NJREVwTENCbGRDZ2laaklpTENCMExDQmxMQ0JSWlN3Z2Jpd2dMV2tzSURFcExDQmxkQ2dpWmpNaUxDQjBMQ0JsTENCUlpTd2dMVzRzSUdrc0lERXBMQ0JsZENnaVpqUWlMQ0IwTENCbExDQlJaU3dnYml3Z2FTd2dNU2tzSUdWMEtDSjFNU0lzSUhRc0lHVXNJRkZsTENCdUlDb2dMamNzSUdrZ0tpQXhMakVzSUMweEtTd2daWFFvSW5VeUlpd2dkQ3dnWlN3Z1VXVXNJQzF1SUNvZ0xqY3NJR2tnS2lBeExqRXNJQzB4S1N3Z1pYUW9JblV6SWl3Z2RDd2daU3dnVVdVc0lEQXNJR2tnS2lBeUxDQXRNU2tzSUdWMEtDSmpaakVpTENCMExDQmxMQ0JSWlN3Z0xXNHNJREFzSURFcExDQmxkQ2dpWTJZeUlpd2dkQ3dnWlN3Z1VXVXNJRzRzSURBc0lERXBMQ0JsZENnaVkyWXpJaXdnZEN3Z1pTd2dVV1VzSURBc0lDMXBMQ0F4S1N3Z1pYUW9JbU5tTkNJc0lIUXNJR1VzSUZGbExDQXdMQ0JwTENBeEtTd2daWFFvSW1OdU1TSXNJSFFzSUdVc0lGRmxMQ0F0Yml3Z01Dd2dMVEVwTENCbGRDZ2lZMjR5SWl3Z2RDd2daU3dnVVdVc0lHNHNJREFzSUMweEtTd2daWFFvSW1OdU15SXNJSFFzSUdVc0lGRmxMQ0F3TENBdGFTd2dMVEVwTENCbGRDZ2lZMjQwSWl3Z2RDd2daU3dnVVdVc0lEQXNJR2tzSUMweEtTd2daUzVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NW5aVzl0WlhSeWVTNWthWE53YjNObEtDa3NJSFJvYVhNdWJXRjBaWEpwWVd3dVpHbHpjRzl6WlNncE93b2dJQ0FnZlFwOU93cG1kVzVqZEdsdmJpQmxkQ2h6TENCbExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0JEY3k1elpYUW9hU3dnY2l3Z2J5a3VkVzV3Y205cVpXTjBLRzRwT3dvZ0lDQWdiR1YwSUdFZ1BTQmxXM05kT3dvZ0lDQWdhV1lnS0dFZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdkQzVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTUN3Z2FDQTlJR0V1YkdWdVozUm9PeUJqSUR3Z2FEc2dZeXNyS1d3dWMyVjBXRmxhS0dGYlkxMHNJRU56TG5nc0lFTnpMbmtzSUVOekxub3BPd29nSUNBZ2ZRcDlDblpoY2lCTWN5QTlJRzVsZHlCTWRDd2dhWFVnUFNCamJHRnpjeUJsZUhSbGJtUnpJSGQwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4TmpjM05qazJNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ1ZXbHVkREUyUVhKeVlYa29Xd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNDaUFnSUNBZ0lDQWdYU2tzSUdrZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtEZ2dLaUF6S1N3Z2NpQTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQnlMbk5sZEVsdVpHVjRLRzVsZHlCVlpTaHVMQ0F4S1Nrc0lISXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJWWlNocExDQXpLU2s3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9jaXdnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndaV1E2SUNFeENpQWdJQ0FnSUNBZ2ZTa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWIySnFaV04wSUQwZ1pTd2dkR2hwY3k1MGVYQmxJRDBnSWtKdmVFaGxiSEJsY2lJc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG5Wd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW05NFNHVnNjR1Z5T2lBdWRYQmtZWFJsS0NrZ2FHRnpJRzV2SUd4dmJtZGxjaUJoY21kMWJXVnVkSE11SWlrc0lIUm9hWE11YjJKcVpXTjBJQ0U5UFNCMmIybGtJREFnSmlZZ1RITXVjMlYwUm5KdmJVOWlhbVZqZENoMGFHbHpMbTlpYW1WamRDa3NJRXh6TG1selJXMXdkSGtvS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVEhNdWJXbHVMQ0J1SUQwZ1RITXViV0Y0TENCcElEMGdkR2hwY3k1blpXOXRaWFJ5ZVM1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQnlJRDBnYVM1aGNuSmhlVHNLSUNBZ0lDQWdJQ0J5V3pCZElEMGdiaTU0TENCeVd6RmRJRDBnYmk1NUxDQnlXekpkSUQwZ2JpNTZMQ0J5V3pOZElEMGdkQzU0TENCeVd6UmRJRDBnYmk1NUxDQnlXelZkSUQwZ2JpNTZMQ0J5V3paZElEMGdkQzU0TENCeVd6ZGRJRDBnZEM1NUxDQnlXemhkSUQwZ2JpNTZMQ0J5V3psZElEMGdiaTU0TENCeVd6RXdYU0E5SUhRdWVTd2djbHN4TVYwZ1BTQnVMbm9zSUhKYk1USmRJRDBnYmk1NExDQnlXekV6WFNBOUlHNHVlU3dnY2xzeE5GMGdQU0IwTG5vc0lISmJNVFZkSUQwZ2RDNTRMQ0J5V3pFMlhTQTlJRzR1ZVN3Z2Nsc3hOMTBnUFNCMExub3NJSEpiTVRoZElEMGdkQzU0TENCeVd6RTVYU0E5SUhRdWVTd2djbHN5TUYwZ1BTQjBMbm9zSUhKYk1qRmRJRDBnYmk1NExDQnlXekl5WFNBOUlIUXVlU3dnY2xzeU0xMGdQU0IwTG5vc0lHa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2dkR2hwY3k1blpXOXRaWFJ5ZVM1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFQWW1wbFkzUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtOWlhbVZqZENBOUlHVXNJSFJvYVhNdWRYQmtZWFJsS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZDNRdWNISnZkRzkwZVhCbExtTnZjSGt1WTJGc2JDaDBhR2x6TENCbEtTd2dkR2hwY3k1dlltcGxZM1FnUFNCbExtOWlhbVZqZEN3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnUW5rZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhkMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeE5qYzNOamsyTUNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCdVpYY2dWV2x1ZERFMlFYSnlZWGtvV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EzQ2lBZ0lDQWdJQ0FnWFNrc0lHa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFS0lDQWdJQ0FnSUNCZExDQnlJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJSEl1YzJWMFNXNWtaWGdvYm1WM0lGVmxLRzRzSURFcEtTd2djaTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHa3NJRE1wS1RzS0lDQWdJQ0FnSUNCemRYQmxjaWh5TENCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWliM2dnUFNCbExDQjBhR2x6TG5SNWNHVWdQU0FpUW05NE0waGxiSEJsY2lJc0lIUm9hWE11WjJWdmJXVjBjbmt1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUp2ZURzS0lDQWdJQ0FnSUNCMExtbHpSVzF3ZEhrb0tTQjhmQ0FvZEM1blpYUkRaVzUwWlhJb2RHaHBjeTV3YjNOcGRHbHZiaWtzSUhRdVoyVjBVMmw2WlNoMGFHbHpMbk5qWVd4bEtTd2dkR2hwY3k1elkyRnNaUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VOU2tzSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwS1RzS0lDQWdJSDBLZlN3Z2Vua2dQU0JqYkdGemN5QmxlSFJsYm1SeklHOXVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXhMQ0J1SUQwZ01UWTNOelk1TmpBcGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2Jpd2djaUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnWFN3Z2J5QTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQnZMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2Npd2dNeWtwTENCdkxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLRzhzSUc1bGR5Qm1kQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHeGhibVZJWld4d1pYSWlMQ0IwYUdsekxuQnNZVzVsSUQwZ1pTd2dkR2hwY3k1emFYcGxJRDBnZERzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNUW9nSUNBZ0lDQWdJRjBzSUd3Z1BTQnVaWGNnWDJVN0NpQWdJQ0FnSUNBZ2JDNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0dFc0lETXBLU3dnYkM1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LU3dnZEdocGN5NWhaR1FvYm1WM0lITjBLR3dzSUc1bGR5Qm9iaWg3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUF1TWl3S0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5Od1lYSmxiblE2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLU2twT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdMWFJvYVhNdWNHeGhibVV1WTI5dWMzUmhiblE3Q2lBZ0lDQWdJQ0FnVFdGMGFDNWhZbk1vZENrZ1BDQXhaUzA0SUNZbUlDaDBJRDBnTVdVdE9Da3NJSFJvYVhNdWMyTmhiR1V1YzJWMEtDNDFJQ29nZEdocGN5NXphWHBsTENBdU5TQXFJSFJvYVhNdWMybDZaU3dnZENrc0lIUm9hWE11WTJocGJHUnlaVzViTUYwdWJXRjBaWEpwWVd3dWMybGtaU0E5SUhRZ1BDQXdJRDhnYVhRZ09pQkJhU3dnZEdocGN5NXNiMjlyUVhRb2RHaHBjeTV3YkdGdVpTNXViM0p0WVd3cExDQnpkWEJsY2k1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtUc0tJQ0FnSUgwS2ZTd2dUMk1nUFNCdVpYY2dUU3dnVW5Nc0lFdHZMQ0JWZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTktEQXNJREFzSURFcExDQjBJRDBnYm1WM0lFMG9NQ3dnTUN3Z01Da3NJRzRnUFNBeExDQnBJRDBnTVRZM056WTVOakFzSUhJZ1BTQnVJQ29nTGpJc0lHOGdQU0J5SUNvZ0xqSXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtGeWNtOTNTR1ZzY0dWeUlpd2dVbk1nUFQwOUlIWnZhV1FnTUNBbUppQW9Vbk1nUFNCdVpYY2dYMlVzSUZKekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnWFN3Z015a3BMQ0JMYnlBOUlHNWxkeUJLYmlnd0xDQXVOU3dnTVN3Z05Td2dNU2tzSUV0dkxuUnlZVzV6YkdGMFpTZ3dMQ0F0TGpVc0lEQXBLU3dnZEdocGN5NXdiM05wZEdsdmJpNWpiM0I1S0hRcExDQjBhR2x6TG14cGJtVWdQU0J1WlhjZ2IyNG9Vbk1zSUc1bGR5Qm1kQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnZEdocGN5NXNhVzVsTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1aFpHUW9kR2hwY3k1c2FXNWxLU3dnZEdocGN5NWpiMjVsSUQwZ2JtVjNJSE4wS0V0dkxDQnVaWGNnYUc0b2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1Nrc0lIUm9hWE11WTI5dVpTNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVZV1JrS0hSb2FYTXVZMjl1WlNrc0lIUm9hWE11YzJWMFJHbHlaV04wYVc5dUtHVXBMQ0IwYUdsekxuTmxkRXhsYm1kMGFDaHVMQ0J5TENCdktUc0tJQ0FnSUgwS0lDQWdJSE5sZEVScGNtVmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dVdWVTQStJQzQ1T1RrNU9Ta2dkR2hwY3k1eGRXRjBaWEp1YVc5dUxuTmxkQ2d3TENBd0xDQXdMQ0F4S1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNobExua2dQQ0F0TGprNU9UazVLU0IwYUdsekxuRjFZWFJsY201cGIyNHVjMlYwS0RFc0lEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQlBZeTV6WlhRb1pTNTZMQ0F3TENBdFpTNTRLUzV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQk5ZWFJvTG1GamIzTW9aUzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eGRXRjBaWEp1YVc5dUxuTmxkRVp5YjIxQmVHbHpRVzVuYkdVb1QyTXNJSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lITmxkRXhsYm1kMGFDaGxMQ0IwSUQwZ1pTQXFJQzR5TENCdUlEMGdkQ0FxSUM0eUtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXNWxMbk5qWVd4bExuTmxkQ2d4TENCTllYUm9MbTFoZUNneFpTMDBMQ0JsSUMwZ2RDa3NJREVwTENCMGFHbHpMbXhwYm1VdWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUhSb2FYTXVZMjl1WlM1elkyRnNaUzV6WlhRb2Jpd2dkQ3dnYmlrc0lIUm9hWE11WTI5dVpTNXdiM05wZEdsdmJpNTVJRDBnWlN3Z2RHaHBjeTVqYjI1bExuVndaR0YwWlUxaGRISnBlQ2dwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBRMjlzYjNJb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJHbHVaUzV0WVhSbGNtbGhiQzVqYjJ4dmNpNXpaWFFvWlNrc0lIUm9hWE11WTI5dVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQWhNU2tzSUhSb2FYTXViR2x1WlM1amIzQjVLR1V1YkdsdVpTa3NJSFJvYVhNdVkyOXVaUzVqYjNCNUtHVXVZMjl1WlNrc0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUhKMUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCM2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVNsN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNCZExDQnVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdU5pd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMallzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDNDJMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2dhU0E5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0JwTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9kQ3dnTXlrcExDQnBMbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2daR1VvYml3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhwTENCeUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUVhobGMwaGxiSEJsY2lJN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjJ4dmNuTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdibVYzSUdGbExDQnlJRDBnZEdocGN5NW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbU52Ykc5eUxtRnljbUY1T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwTG5ObGRDaGxLU3dnYVM1MGIwRnljbUY1S0hJc0lEQXBMQ0JwTG5SdlFYSnlZWGtvY2l3Z015a3NJR2t1YzJWMEtIUXBMQ0JwTG5SdlFYSnlZWGtvY2l3Z05pa3NJR2t1ZEc5QmNuSmhlU2h5TENBNUtTd2dhUzV6WlhRb2Jpa3NJR2t1ZEc5QmNuSmhlU2h5TENBeE1pa3NJR2t1ZEc5QmNuSmhlU2h5TENBeE5Ta3NJSFJvYVhNdVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN5NWpiMnh2Y2k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNuMHNJRTk1SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMmhoY0dWUVlYUm9JaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlN3Z2RHaHBjeTV6ZFdKUVlYUm9jeUE5SUZ0ZExDQjBhR2x6TG1OMWNuSmxiblJRWVhSb0lEMGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHMXZkbVZVYnlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzVnljbVZ1ZEZCaGRHZ2dQU0J1WlhjZ1ozSXNJSFJvYVhNdWMzVmlVR0YwYUhNdWNIVnphQ2gwYUdsekxtTjFjbkpsYm5SUVlYUm9LU3dnZEdocGN5NWpkWEp5Wlc1MFVHRjBhQzV0YjNabFZHOG9aU3dnZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc2FXNWxWRzhvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuSmxiblJRWVhSb0xteHBibVZVYnlobExDQjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEYxWVdSeVlYUnBZME4xY25abFZHOG9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUVlYUm9MbkYxWVdSeVlYUnBZME4xY25abFZHOG9aU3dnZEN3Z2Jpd2dhU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JpWlhwcFpYSkRkWEoyWlZSdktHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKeVpXNTBVR0YwYUM1aVpYcHBaWEpEZFhKMlpWUnZLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM0JzYVc1bFZHaHlkU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQmhkR2d1YzNCc2FXNWxWR2h5ZFNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZVMmhoY0dWektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdUtIQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjhnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1SUQwZ01Dd2dZaUE5SUhBdWJHVnVaM1JvT3lCNUlEd2dZanNnZVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCSUQwZ2NGdDVYU3dnVENBOUlHNWxkeUJZZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUV3dVkzVnlkbVZ6SUQwZ1FTNWpkWEoyWlhNc0lGOHVjSFZ6YUNoTUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1h6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdhU2h3TENCZktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnWHk1c1pXNW5kR2dzSUdJZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQklEMGdlU0F0SURFc0lFd2dQU0F3T3lCTUlEd2dlVHNnUVNBOUlFd3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NTQTlJRjliUVYwc0lHc2dQU0JmVzB4ZExDQkNJRDBnYXk1NElDMGdTUzU0TENCUUlEMGdheTU1SUMwZ1NTNTVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0UxaGRHZ3VZV0p6S0ZBcElENGdUblZ0WW1WeUxrVlFVMGxNVDA0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1VDQThJREFnSmlZZ0tFa2dQU0JmVzB4ZExDQkNJRDBnTFVJc0lHc2dQU0JmVzBGZExDQlFJRDBnTFZBcExDQndMbmtnUENCSkxua2dmSHdnY0M1NUlENGdheTU1S1NCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0M1NUlEMDlQU0JKTG5rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEF1ZUNBOVBUMGdTUzU0S1NCeVpYUjFjbTRnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGNnUFNCUUlDb2dLSEF1ZUNBdElFa3VlQ2tnTFNCQ0lDb2dLSEF1ZVNBdElFa3VlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoM0lEMDlQU0F3S1NCeVpYUjFjbTRnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDNJRHdnTUNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJZ1BTQWhZanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3TG5rZ0lUMDlJRWt1ZVNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dzdWVDQThQU0J3TG5nZ0ppWWdjQzU0SUR3OUlFa3VlQ0I4ZkNCSkxuZ2dQRDBnY0M1NElDWW1JSEF1ZUNBOFBTQnJMbmdwSUhKbGRIVnliaUFoTURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWWpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCS2RDNXBjME5zYjJOclYybHpaU3dnYnlBOUlIUm9hWE11YzNWaVVHRjBhSE03Q2lBZ0lDQWdJQ0FnYVdZZ0tHOHViR1Z1WjNSb0lEMDlQU0F3S1NCeVpYUjFjbTRnVzEwN0NpQWdJQ0FnSUNBZ2FXWWdLSFFnUFQwOUlDRXdLU0J5WlhSMWNtNGdiaWh2S1RzS0lDQWdJQ0FnSUNCc1pYUWdZU3dnYkN3Z1l5d2dhQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHbG1JQ2h2TG14bGJtZDBhQ0E5UFQwZ01Ta2djbVYwZFhKdUlHd2dQU0J2V3pCZExDQmpJRDBnYm1WM0lGaDBMQ0JqTG1OMWNuWmxjeUE5SUd3dVkzVnlkbVZ6TENCb0xuQjFjMmdvWXlrc0lHZzdDaUFnSUNBZ0lDQWdiR1YwSUhVZ1BTQWhjaWh2V3pCZExtZGxkRkJ2YVc1MGN5Z3BLVHNLSUNBZ0lDQWdJQ0IxSUQwZ1pTQS9JQ0YxSURvZ2RUc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlGdGRMQ0JtSUQwZ1cxMHNJRzBnUFNCYlhTd2dlQ0E5SURBc0lIWTdDaUFnSUNBZ0lDQWdabHQ0WFNBOUlIWnZhV1FnTUN3Z2JWdDRYU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREFzSUY4Z1BTQnZMbXhsYm1kMGFEc2djQ0E4SUY4N0lIQXJLeWxzSUQwZ2IxdHdYU3dnZGlBOUlHd3VaMlYwVUc5cGJuUnpLQ2tzSUdFZ1BTQnlLSFlwTENCaElEMGdaU0EvSUNGaElEb2dZU3dnWVNBL0lDZ2hkU0FtSmlCbVczaGRJQ1ltSUhnckt5d2dabHQ0WFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY3pvZ2JtVjNJRmgwTEFvZ0lDQWdJQ0FnSUNBZ0lDQndPaUIyQ2lBZ0lDQWdJQ0FnZlN3Z1psdDRYUzV6TG1OMWNuWmxjeUE5SUd3dVkzVnlkbVZ6TENCMUlDWW1JSGdyS3l3Z2JWdDRYU0E5SUZ0ZEtTQTZJRzFiZUYwdWNIVnphQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZzZJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQTZJSFpiTUYwS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnBaaUFvSVdaYk1GMHBJSEpsZEhWeWJpQnVLRzhwT3dvZ0lDQWdJQ0FnSUdsbUlDaG1MbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBeElEMGdJVEVzSUY4eElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VTQTlJREFzSUdJZ1BTQm1MbXhsYm1kMGFEc2dlU0E4SUdJN0lIa3JLeWxrVzNsZElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VURWdQU0F3TENCaU1TQTlJR1l1YkdWdVozUm9PeUI1TVNBOElHSXhPeUI1TVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCSUQwZ2JWdDVNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRXdnUFNBd095Qk1JRHdnUVM1c1pXNW5kR2c3SUV3ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFa2dQU0JCVzB4ZExDQnJJRDBnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkNJRDBnTURzZ1FpQThJR1l1YkdWdVozUm9PeUJDS3lzcGFTaEpMbkFzSUdaYlFsMHVjQ2tnSmlZZ0tIa3hJQ0U5UFNCQ0lDWW1JRjh4TG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1jbTl0Y3pvZ2VURXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnZjem9nUWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUc5c1pUb2dUQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcExDQnJJRDhnS0dzZ1BTQWhNU3dnWkZ0Q1hTNXdkWE5vS0VrcEtTQTZJSEF4SUQwZ0lUQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdzZ0ppWWdaRnQ1TVYwdWNIVnphQ2hKS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCZk1TNXNaVzVuZEdnZ1BpQXdJQ1ltSUNod01TQjhmQ0FvYlNBOUlHUXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHYzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQndNaUE5SURBc0lGOHlJRDBnWmk1c1pXNW5kR2c3SUhBeUlEd2dYekk3SUhBeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCaklEMGdabHR3TWwwdWN5d2dhQzV3ZFhOb0tHTXBMQ0JuSUQwZ2JWdHdNbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VUSWdQU0F3TENCaU1pQTlJR2N1YkdWdVozUm9PeUI1TWlBOElHSXlPeUI1TWlzcktXTXVhRzlzWlhNdWNIVnphQ2huVzNreVhTNW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2c3Q2lBZ0lDQjlDbjBzSUhOMUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTZ3hLU3dnU0hrZ1BTQnVaWGNnU1c1ME16SkJjbkpoZVNoemRTNWlkV1ptWlhJcExDQnJlU0E5SUdOc1lYTnpJSHNLSUNBZ0lITjBZWFJwWXlCMGIwaGhiR1pHYkc5aGRDaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNBK0lEWTFOVEEwSUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa1JoZEdGVmRHbHNjeTUwYjBoaGJHWkdiRzloZENncE9pQjJZV3gxWlNCbGVHTmxaV1J6SURZMU5UQTBMaUlwTENCbElEMGdOalUxTURRcExDQnpkVnN3WFNBOUlHVTdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQkllVnN3WFN3Z2JpQTlJSFFnUGo0Z01UWWdKaUF6TWpjMk9Dd2dhU0E5SUhRZ1BqNGdNVElnSmlBeU1EUTNMQ0J5SUQwZ2RDQStQaUF5TXlBbUlESTFOVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjaUE4SURFd015QS9JRzRnT2lCeUlENGdNVFF5SUQ4Z0tHNGdmRDBnTXpFM05EUXNJRzRnZkQwZ0tISWdQVDBnTWpVMUlEOGdNQ0E2SURFcElDWW1JSFFnSmlBNE16ZzROakEzTENCdUtTQTZJSElnUENBeE1UTWdQeUFvYVNCOFBTQXlNRFE0TENCdUlIdzlJQ2hwSUQ0K0lERXhOQ0F0SUhJcElDc2dLR2tnUGo0Z01URXpJQzBnY2lBbUlERXBMQ0J1S1NBNklDaHVJSHc5SUhJZ0xTQXhNVElnUER3Z01UQWdmQ0JwSUQ0K0lERXNJRzRnS3owZ2FTQW1JREVzSUc0cE93b2dJQ0FnZlFwOUxDQmlNQ0E5SURBc0lIY3dJRDBnTVN3Z1V6QWdQU0F3TENCVU1DQTlJREVzSUVVd0lEMGdNanNLWm5WdVkzUnBiMjRnUVRBb2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXVnphRVpoWTJWTllYUmxjbWxoYkNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdZVzRnUVhKeVlYa2dhVzV6ZEdWaFpDNGlLU3dnY3pzS2ZRcG1kVzVqZEdsdmJpQkRNQ2h6SUQwZ1cxMHBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMTFiSFJwVFdGMFpYSnBZV3dnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHRnVJRUZ5Y21GNUlHbHVjM1JsWVdRdUlpa3NJSE11YVhOTmRXeDBhVTFoZEdWeWFXRnNJRDBnSVRBc0lITXViV0YwWlhKcFlXeHpJRDBnY3l3Z2N5NWpiRzl1WlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpMbk5zYVdObEtDazdDaUFnSUNCOUxDQnpPd3A5Q21aMWJtTjBhVzl1SUV3d0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJ2YVc1MFEyeHZkV1FnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlCVVNGSkZSUzVRYjJsdWRITXVJaWtzSUc1bGR5QjZjaWh6TENCbEtUc0tmUXBtZFc1amRHbHZiaUJTTUNoektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UVlYSjBhV05zWlNCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklGUklVa1ZGTGxOd2NtbDBaUzRpS1N3Z2JtVjNJSEp2S0hNcE93cDlDbVoxYm1OMGFXOXVJRkF3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsQmhjblJwWTJ4bFUzbHpkR1Z0SUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1VUc5cGJuUnpMaUlwTENCdVpYY2dlbklvY3l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnU1RBb2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVHOXBiblJEYkc5MVpFMWhkR1Z5YVdGc0lHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdWRWhTUlVVdVVHOXBiblJ6VFdGMFpYSnBZV3d1SWlrc0lHNWxkeUJxYmloektUc0tmUXBtZFc1amRHbHZiaUJFTUNoektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UVlYSjBhV05zWlVKaGMybGpUV0YwWlhKcFlXd2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUJVU0ZKRlJTNVFiMmx1ZEhOTllYUmxjbWxoYkM0aUtTd2dibVYzSUdwdUtITXBPd3A5Q21aMWJtTjBhVzl1SUVZd0tITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsQmhjblJwWTJ4bFUzbHpkR1Z0VFdGMFpYSnBZV3dnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlCVVNGSkZSUzVRYjJsdWRITk5ZWFJsY21saGJDNGlLU3dnYm1WM0lHcHVLSE1wT3dwOUNtWjFibU4wYVc5dUlFNHdLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxjblJsZUNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdWRWhTUlVVdVZtVmpkRzl5TXlCcGJuTjBaV0ZrTGlJcExDQnVaWGNnVFNoekxDQmxMQ0IwS1RzS2ZRcG1kVzVqZEdsdmJpQkNNQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1RWVXNWhiV2xqUW5WbVptVnlRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrdWMyVjBWWE5oWjJVb0lGUklVa1ZGTGtSNWJtRnRhV05FY21GM1ZYTmhaMlVnS1NCcGJuTjBaV0ZrTGlJcExDQnVaWGNnVldVb2N5d2daU2t1YzJWMFZYTmhaMlVvZFhJcE93cDlDbVoxYm1OMGFXOXVJSG93S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrbHVkRGhCZEhSeWFXSjFkR1VnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHNWxkeUJVU0ZKRlJTNUpiblE0UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJR3BqS0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUZVd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFZwYm5RNFFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1VldsdWREaENkV1ptWlhKQmRIUnlhV0oxZEdVb0tTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ1VXTW9jeXdnWlNrN0NuMEtablZ1WTNScGIyNGdUekFvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZXbHVkRGhEYkdGdGNHVmtRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVZXbHVkRGhEYkdGdGNHVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lFdGpLSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJRWd3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrbHVkREUyUVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVTVzUwTVRaQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1NCcGJuTjBaV0ZrTGlJcExDQnVaWGNnWldnb2N5d2daU2s3Q24wS1puVnVZM1JwYjI0Z2F6QW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VldsdWRERTJRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVZXbHVkREUyUW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJRmx6S0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUVjd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa2x1ZERNeVFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1U1c1ME16SkNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ2RHZ29jeXdnWlNrN0NuMEtablZ1WTNScGIyNGdWakFvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZXbHVkRE15UVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVWV2x1ZERNeVFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUZwektITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlGY3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtac2IyRjBNekpCZEhSeWFXSjFkR1VnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHNWxkeUJVU0ZKRlJTNUdiRzloZERNeVFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUdSbEtITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlIRXdLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtac2IyRjBOalJCZEhSeWFXSjFkR1VnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHNWxkeUJVU0ZKRlJTNUdiRzloZERZMFFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUdsb0tITXNJR1VwT3dwOUNrTjBMbU55WldGMFpTQTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbXh2WnlnaVZFaFNSVVV1UTNWeWRtVXVZM0psWVhSbEtDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQ0lwTENCekxuQnliM1J2ZEhsd1pTQTlJRTlpYW1WamRDNWpjbVZoZEdVb1EzUXVjSEp2ZEc5MGVYQmxLU3dnY3k1d2NtOTBiM1I1Y0dVdVkyOXVjM1J5ZFdOMGIzSWdQU0J6TENCekxuQnliM1J2ZEhsd1pTNW5aWFJRYjJsdWRDQTlJR1VzSUhNN0NuMDdDbWR5TG5CeWIzUnZkSGx3WlM1bWNtOXRVRzlwYm5SeklEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVR0YwYURvZ0xtWnliMjFRYjJsdWRITW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1elpYUkdjbTl0VUc5cGJuUnpLQ2t1SWlrc0lIUm9hWE11YzJWMFJuSnZiVkJ2YVc1MGN5aHpLVHNLZlRzS1puVnVZM1JwYjI0Z1dEQW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRWGhwYzBobGJIQmxjaUJvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUZSSVVrVkZMa0Y0WlhOSVpXeHdaWEl1SWlrc0lHNWxkeUJ5ZFNoektUc0tmUXBtZFc1amRHbHZiaUJLTUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM1Z1WkdsdVowSnZlRWhsYkhCbGNpQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJEY21WaGRHbHVaeUJoSUZSSVVrVkZMa0p2ZUVobGJIQmxjaUJwYm5OMFpXRmtMaUlwTENCdVpYY2dhWFVvY3l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnV1RBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVSV1JuWlhOSVpXeHdaWElnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElGUklVa1ZGTGtWa1oyVnpSMlZ2YldWMGNua2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lIZDBLRzVsZHlCZllTaHpMbWRsYjIxbGRISjVLU3dnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0JqYjJ4dmNqb2daU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1pTQTZJREUyTnpjM01qRTFDaUFnSUNCOUtTazdDbjBLYm5VdWNISnZkRzkwZVhCbExuTmxkRU52Ykc5eWN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UjNKcFpFaGxiSEJsY2pvZ2MyVjBRMjlzYjNKektDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQ3dnY0dGemN5QjBhR1Z0SUdsdUlIUm9aU0JqYjI1emRISjFZM1J2Y2lCcGJuTjBaV0ZrTGlJcE93cDlPd3BsZFM1d2NtOTBiM1I1Y0dVdWRYQmtZWFJsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVRhMlZzWlhSdmJraGxiSEJsY2pvZ2RYQmtZWFJsS0NrZ2JtOGdiRzl1WjJWeUlHNWxaV1J6SUhSdklHSmxJR05oYkd4bFpDNGlLVHNLZlRzS1puVnVZM1JwYjI0Z1dqQW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJseVpXWnlZVzFsU0dWc2NHVnlJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCVVNGSkZSUzVYYVhKbFpuSmhiV1ZIWlc5dFpYUnllU0JwYm5OMFpXRmtMaUlwTENCdVpYY2dkM1FvYm1WM0lFVmhLSE11WjJWdmJXVjBjbmtwTENCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUdOdmJHOXlPaUJsSUNFOVBTQjJiMmxrSURBZ1B5QmxJRG9nTVRZM056Y3lNVFVLSUNBZ0lIMHBLVHNLZlFwaWRDNXdjbTkwYjNSNWNHVXVaWGgwY21GamRGVnliRUpoYzJVZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1iMkZrWlhJNklDNWxlSFJ5WVdOMFZYSnNRbUZ6WlNncElHaGhjeUJpWldWdUlHUmxjSEpsWTJGMFpXUXVJRlZ6WlNCVVNGSkZSUzVNYjJGa1pYSlZkR2xzY3k1bGVIUnlZV04wVlhKc1FtRnpaU2dwSUdsdWMzUmxZV1F1SWlrc0lFZHpMbVY0ZEhKaFkzUlZjbXhDWVhObEtITXBPd3A5T3dwaWRDNUlZVzVrYkdWeWN5QTlJSHNLSUNBZ0lHRmtaRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVURzloWkdWeU9pQklZVzVrYkdWeWN5NWhaR1FvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdURzloWkdsdVowMWhibUZuWlhJdVlXUmtTR0Z1Wkd4bGNpZ3BJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQjlMQW9nSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1iMkZrWlhJNklFaGhibVJzWlhKekxtZGxkQ2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQk1iMkZrYVc1blRXRnVZV2RsY2k1blpYUklZVzVrYkdWeUtDa2dhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnSkRBb2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVdFaFNURzloWkdWeUlHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdWRWhTUlVVdVJtbHNaVXh2WVdSbGNpNGlLU3dnYm1WM0lGbDBLSE1wT3dwOUNtWjFibU4wYVc5dUlHb3dLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0pwYm1GeWVWUmxlSFIxY21WTWIyRmtaWElnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlCVVNGSkZSUzVFWVhSaFZHVjRkSFZ5WlV4dllXUmxjaTRpS1N3Z2JtVjNJRTVvS0hNcE93cDlDbkZwTG5CeWIzUnZkSGx3WlM1alpXNTBaWElnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3lPaUF1WTJWdWRHVnlLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBRMlZ1ZEdWeUtDa3VJaWtzSUhSb2FYTXVaMlYwUTJWdWRHVnlLSE1wT3dwOU93cHhhUzV3Y205MGIzUjVjR1V1Wlcxd2RIa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0p2ZURJNklDNWxiWEIwZVNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx6Ulcxd2RIa29LUzRpS1N3Z2RHaHBjeTVwYzBWdGNIUjVLQ2s3Q24wN0NuRnBMbkJ5YjNSdmRIbHdaUzVwYzBsdWRHVnljMlZqZEdsdmJrSnZlQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKdmVESTZJQzVwYzBsdWRHVnljMlZqZEdsdmJrSnZlQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHVkR1Z5YzJWamRITkNiM2dvS1M0aUtTd2dkR2hwY3k1cGJuUmxjbk5sWTNSelFtOTRLSE1wT3dwOU93cHhhUzV3Y205MGIzUjVjR1V1YzJsNlpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0p2ZURJNklDNXphWHBsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwVTJsNlpTZ3BMaUlwTENCMGFHbHpMbWRsZEZOcGVtVW9jeWs3Q24wN0NreDBMbkJ5YjNSdmRIbHdaUzVqWlc1MFpYSWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNnek9pQXVZMlZ1ZEdWeUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFEyVnVkR1Z5S0NrdUlpa3NJSFJvYVhNdVoyVjBRMlZ1ZEdWeUtITXBPd3A5T3dwTWRDNXdjbTkwYjNSNWNHVXVaVzF3ZEhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSnZlRE02SUM1bGJYQjBlU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHpSVzF3ZEhrb0tTNGlLU3dnZEdocGN5NXBjMFZ0Y0hSNUtDazdDbjA3Q2t4MExuQnliM1J2ZEhsd1pTNXBjMGx1ZEdWeWMyVmpkR2x2YmtKdmVDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0p2ZURNNklDNXBjMGx1ZEdWeWMyVmpkR2x2YmtKdmVDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1sdWRHVnljMlZqZEhOQ2IzZ29LUzRpS1N3Z2RHaHBjeTVwYm5SbGNuTmxZM1J6UW05NEtITXBPd3A5T3dwTWRDNXdjbTkwYjNSNWNHVXVhWE5KYm5SbGNuTmxZM1JwYjI1VGNHaGxjbVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3pPaUF1YVhOSmJuUmxjbk5sWTNScGIyNVRjR2hsY21Vb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLQ2t1SWlrc0lIUm9hWE11YVc1MFpYSnpaV04wYzFOd2FHVnlaU2h6S1RzS2ZUc0tUSFF1Y0hKdmRHOTBlWEJsTG5OcGVtVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNnek9pQXVjMmw2WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEZOcGVtVW9LUzRpS1N3Z2RHaHBjeTVuWlhSVGFYcGxLSE1wT3dwOU93cEJiaTV3Y205MGIzUjVjR1V1Wlcxd2RIa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbE53YUdWeVpUb2dMbVZ0Y0hSNUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YVhORmJYQjBlU2dwTGlJcExDQjBhR2x6TG1selJXMXdkSGtvS1RzS2ZUc0tSSEl1Y0hKdmRHOTBlWEJsTG5ObGRFWnliMjFOWVhSeWFYZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVHY25WemRIVnRPaUF1YzJWMFJuSnZiVTFoZEhKcGVDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG5ObGRFWnliMjFRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2t1SWlrc0lIUm9hWE11YzJWMFJuSnZiVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29jeWs3Q24wN0NrdG9MbkJ5YjNSdmRIbHdaUzVqWlc1MFpYSWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVc1bE16b2dMbU5sYm5SbGNpZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRFTmxiblJsY2lncExpSXBMQ0IwYUdsekxtZGxkRU5sYm5SbGNpaHpLVHNLZlRzS2JIUXVjSEp2ZEc5MGVYQmxMbVpzWVhSMFpXNVViMEZ5Y21GNVQyWm1jMlYwSUQwZ1puVnVZM1JwYjI0b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE16b2dMbVpzWVhSMFpXNVViMEZ5Y21GNVQyWm1jMlYwS0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUM1MGIwRnljbUY1S0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1MGIwRnljbUY1S0hNc0lHVXBPd3A5T3dwc2RDNXdjbTkwYjNSNWNHVXViWFZzZEdsd2JIbFdaV04wYjNJeklEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE16b2dMbTExYkhScGNHeDVWbVZqZEc5eU15Z3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCMlpXTjBiM0l1WVhCd2JIbE5ZWFJ5YVhnektDQnRZWFJ5YVhnZ0tTQnBibk4wWldGa0xpSXBMQ0J6TG1Gd2NHeDVUV0YwY21sNE15aDBhR2x6S1RzS2ZUc0tiSFF1Y0hKdmRHOTBlWEJsTG0xMWJIUnBjR3g1Vm1WamRHOXlNMEZ5Y21GNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZ3pPaUF1YlhWc2RHbHdiSGxXWldOMGIzSXpRWEp5WVhrb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwc2RDNXdjbTkwYjNSNWNHVXVZWEJ3YkhsVWIwSjFabVpsY2tGMGRISnBZblYwWlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURNNklDNWhjSEJzZVZSdlFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJR0YwZEhKcFluVjBaUzVoY0hCc2VVMWhkSEpwZURNb0lHMWhkSEpwZUNBcElHbHVjM1JsWVdRdUlpa3NJSE11WVhCd2JIbE5ZWFJ5YVhnektIUm9hWE1wT3dwOU93cHNkQzV3Y205MGIzUjVjR1V1WVhCd2JIbFViMVpsWTNSdmNqTkJjbkpoZVNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE16b2dMbUZ3Y0d4NVZHOVdaV04wYjNJelFYSnlZWGtvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3BzZEM1d2NtOTBiM1I1Y0dVdVoyVjBTVzUyWlhKelpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVETTZJQzVuWlhSSmJuWmxjbk5sS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRzFoZEhKcGVFbHVkaTVqYjNCNUtDQnRZWFJ5YVhnZ0tTNXBiblpsY25Rb0tUc2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NWpiM0I1S0hNcExtbHVkbVZ5ZENncE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdVpYaDBjbUZqZEZCdmMybDBhVzl1SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtVjRkSEpoWTNSUWIzTnBkR2x2YmlncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbU52Y0hsUWIzTnBkR2x2YmlncExpSXBMQ0IwYUdsekxtTnZjSGxRYjNOcGRHbHZiaWh6S1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG1ac1lYUjBaVzVVYjBGeWNtRjVUMlptYzJWMElEMGdablZ1WTNScGIyNG9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG1ac1lYUjBaVzVVYjBGeWNtRjVUMlptYzJWMEtDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElDNTBiMEZ5Y21GNUtDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NTBiMEZ5Y21GNUtITXNJR1VwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1WjJWMFVHOXphWFJwYjI0Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNW5aWFJRYjNOcGRHbHZiaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQldaV04wYjNJekxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWdnYldGMGNtbDRJQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJRTBvS1M1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtIUm9hWE1zSURNcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWMyVjBVbTkwWVhScGIyNUdjbTl0VVhWaGRHVnlibWx2YmlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXpaWFJTYjNSaGRHbHZia1p5YjIxUmRXRjBaWEp1YVc5dUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YldGclpWSnZkR0YwYVc5dVJuSnZiVkYxWVhSbGNtNXBiMjRvS1M0aUtTd2dkR2hwY3k1dFlXdGxVbTkwWVhScGIyNUdjbTl0VVhWaGRHVnlibWx2YmloektUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtMTFiSFJwY0d4NVZHOUJjbkpoZVNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXViWFZzZEdsd2JIbFViMEZ5Y21GNUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbTExYkhScGNHeDVWbVZqZEc5eU15QTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV0ZFd4MGFYQnNlVlpsWTNSdmNqTW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2RtVmpkRzl5TG1Gd2NHeDVUV0YwY21sNE5DZ2diV0YwY21sNElDa2dhVzV6ZEdWaFpDNGlLU3dnY3k1aGNIQnNlVTFoZEhKcGVEUW9kR2hwY3lrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1dGRXeDBhWEJzZVZabFkzUnZjalFnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWJYVnNkR2x3YkhsV1pXTjBiM0kwS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJSFpsWTNSdmNpNWhjSEJzZVUxaGRISnBlRFFvSUcxaGRISnBlQ0FwSUdsdWMzUmxZV1F1SWlrc0lITXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXViWFZzZEdsd2JIbFdaV04wYjNJelFYSnlZWGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXRkV3gwYVhCc2VWWmxZM1J2Y2pOQmNuSmhlU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1eWIzUmhkR1ZCZUdseklEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1Y205MFlYUmxRWGhwY3lncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JXWldOMGIzSXpMblJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnYldGMGNtbDRJQ2tnYVc1emRHVmhaQzRpS1N3Z2N5NTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9kR2hwY3lrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1amNtOXpjMVpsWTNSdmNpQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzVqY205emMxWmxZM1J2Y2lncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0IyWldOMGIzSXVZWEJ3YkhsTllYUnlhWGcwS0NCdFlYUnlhWGdnS1NCcGJuTjBaV0ZrTGlJcExDQnpMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMblJ5WVc1emJHRjBaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xuUnlZVzV6YkdGMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV5YjNSaGRHVllJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWNtOTBZWFJsV0NncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXliM1JoZEdWWklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1Y205MFlYUmxXU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1eWIzUmhkR1ZhSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVjbTkwWVhSbFdpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV5YjNSaGRHVkNlVUY0YVhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV5YjNSaGRHVkNlVUY0YVhNb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVZWEJ3YkhsVWIwSjFabVpsY2tGMGRISnBZblYwWlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNWhjSEJzZVZSdlFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJR0YwZEhKcFluVjBaUzVoY0hCc2VVMWhkSEpwZURRb0lHMWhkSEpwZUNBcElHbHVjM1JsWVdRdUlpa3NJSE11WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE1wT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1WVhCd2JIbFViMVpsWTNSdmNqTkJjbkpoZVNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbUZ3Y0d4NVZHOVdaV04wYjNJelFYSnlZWGtvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWJXRnJaVVp5ZFhOMGRXMGdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXViV0ZyWlVaeWRYTjBkVzBvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdMbTFoYTJWUVpYSnpjR1ZqZEdsMlpTZ2diR1ZtZEN3Z2NtbG5hSFFzSUhSdmNDd2dZbTkwZEc5dExDQnVaV0Z5TENCbVlYSWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbTFoYTJWUVpYSnpjR1ZqZEdsMlpTaHpMQ0JsTENCdUxDQjBMQ0JwTENCeUtUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtZGxkRWx1ZG1WeWMyVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1WjJWMFNXNTJaWEp6WlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J0WVhSeWFYaEpibll1WTI5d2VTZ2diV0YwY21sNElDa3VhVzUyWlhKMEtDazdJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVZMjl3ZVNoektTNXBiblpsY25Rb0tUc0tmVHNLVjNRdWNISnZkRzkwZVhCbExtbHpTVzUwWlhKelpXTjBhVzl1VEdsdVpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJzWVc1bE9pQXVhWE5KYm5SbGNuTmxZM1JwYjI1TWFXNWxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWFXNTBaWEp6WldOMGMweHBibVVvS1M0aUtTd2dkR2hwY3k1cGJuUmxjbk5sWTNSelRHbHVaU2h6S1RzS2ZUc0taM1F1Y0hKdmRHOTBlWEJsTG0xMWJIUnBjR3g1Vm1WamRHOXlNeUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklDNXRkV3gwYVhCc2VWWmxZM1J2Y2pNb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYVhNZ2JtOTNJSFpsWTNSdmNpNWhjSEJzZVZGMVlYUmxjbTVwYjI0b0lIRjFZWFJsY201cGIyNGdLU0JwYm5OMFpXRmtMaUlwTENCekxtRndjR3g1VVhWaGRHVnlibWx2YmloMGFHbHpLVHNLZlRzS1ozUXVjSEp2ZEc5MGVYQmxMbWx1ZG1WeWMyVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEYxWVhSbGNtNXBiMjQ2SUM1cGJuWmxjbk5sS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QnBiblpsY25Rb0tTNGlLU3dnZEdocGN5NXBiblpsY25Rb0tUc0tmVHNLUTI0dWNISnZkRzkwZVhCbExtbHpTVzUwWlhKelpXTjBhVzl1UW05NElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVbUY1T2lBdWFYTkpiblJsY25ObFkzUnBiMjVDYjNnb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVwYm5SbGNuTmxZM1J6UW05NEtDa3VJaWtzSUhSb2FYTXVhVzUwWlhKelpXTjBjMEp2ZUNoektUc0tmVHNLUTI0dWNISnZkRzkwZVhCbExtbHpTVzUwWlhKelpXTjBhVzl1VUd4aGJtVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVTWVhrNklDNXBjMGx1ZEdWeWMyVmpkR2x2YmxCc1lXNWxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWFXNTBaWEp6WldOMGMxQnNZVzVsS0NrdUlpa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMxQnNZVzVsS0hNcE93cDlPd3BEYmk1d2NtOTBiM1I1Y0dVdWFYTkpiblJsY25ObFkzUnBiMjVUY0dobGNtVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVTWVhrNklDNXBjMGx1ZEdWeWMyVmpkR2x2YmxOd2FHVnlaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHVkR1Z5YzJWamRITlRjR2hsY21Vb0tTNGlLU3dnZEdocGN5NXBiblJsY25ObFkzUnpVM0JvWlhKbEtITXBPd3A5T3dwdWRDNXdjbTkwYjNSNWNHVXVZWEpsWVNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZISnBZVzVuYkdVNklDNWhjbVZoS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwUVhKbFlTZ3BMaUlwTENCMGFHbHpMbWRsZEVGeVpXRW9LVHNLZlRzS2JuUXVjSEp2ZEc5MGVYQmxMbUpoY25samIyOXlaRVp5YjIxUWIybHVkQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsUnlhV0Z1WjJ4bE9pQXVZbUZ5ZVdOdmIzSmtSbkp2YlZCdmFXNTBLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBRbUZ5ZVdOdmIzSmtLQ2t1SWlrc0lIUm9hWE11WjJWMFFtRnllV052YjNKa0tITXNJR1VwT3dwOU93cHVkQzV3Y205MGIzUjVjR1V1Yldsa2NHOXBiblFnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VWNtbGhibWRzWlRvZ0xtMXBaSEJ2YVc1MEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFRXbGtjRzlwYm5Rb0tTNGlLU3dnZEdocGN5NW5aWFJOYVdSd2IybHVkQ2h6S1RzS2ZUc0tiblF1Y0hKdmRHOTBlWEJsYm05eWJXRnNJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VkhKcFlXNW5iR1U2SUM1dWIzSnRZV3dvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW5aWFJPYjNKdFlXd29LUzRpS1N3Z2RHaHBjeTVuWlhST2IzSnRZV3dvY3lrN0NuMDdDbTUwTG5CeWIzUnZkSGx3WlM1d2JHRnVaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxSeWFXRnVaMnhsT2lBdWNHeGhibVVvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW5aWFJRYkdGdVpTZ3BMaUlwTENCMGFHbHpMbWRsZEZCc1lXNWxLSE1wT3dwOU93cHVkQzVpWVhKNVkyOXZjbVJHY205dFVHOXBiblFnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVVjbWxoYm1kc1pUb2dMbUpoY25samIyOXlaRVp5YjIxUWIybHVkQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRUpoY25samIyOXlaQ2dwTGlJcExDQnVkQzVuWlhSQ1lYSjVZMjl2Y21Rb2N5d2daU3dnZEN3Z2Jpd2dhU2s3Q24wN0NtNTBMbTV2Y20xaGJDQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFJ5YVdGdVoyeGxPaUF1Ym05eWJXRnNLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBUbTl5YldGc0tDa3VJaWtzSUc1MExtZGxkRTV2Y20xaGJDaHpMQ0JsTENCMExDQnVLVHNLZlRzS1dIUXVjSEp2ZEc5MGVYQmxMbVY0ZEhKaFkzUkJiR3hRYjJsdWRITWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVUYUdGd1pUb2dMbVY0ZEhKaFkzUkJiR3hRYjJsdWRITW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xtVjRkSEpoWTNSUWIybHVkSE1vS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG1WNGRISmhZM1JRYjJsdWRITW9jeWs3Q24wN0NsaDBMbkJ5YjNSdmRIbHdaUzVsZUhSeWRXUmxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VTJoaGNHVTZJQzVsZUhSeWRXUmxLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElFVjRkSEoxWkdWSFpXOXRaWFJ5ZVNncElHbHVjM1JsWVdRdUlpa3NJRzVsZHlCc2JpaDBhR2x6TENCektUc0tmVHNLV0hRdWNISnZkRzkwZVhCbExtMWhhMlZIWlc5dFpYUnllU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxOb1lYQmxPaUF1YldGclpVZGxiMjFsZEhKNUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUZOb1lYQmxSMlZ2YldWMGNua29LU0JwYm5OMFpXRmtMaUlwTENCdVpYY2dSR2tvZEdocGN5d2djeWs3Q24wN0NsZ3VjSEp2ZEc5MGVYQmxMbVp5YjIxQmRIUnlhV0oxZEdVZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l5T2lBdVpuSnZiVUYwZEhKcFluVjBaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9LUzRpS1N3Z2RHaHBjeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hNc0lHVXNJSFFwT3dwOU93cFlMbkJ5YjNSdmRIbHdaUzVrYVhOMFlXNWpaVlJ2VFdGdWFHRjBkR0Z1SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TWpvZ0xtUnBjM1JoYm1ObFZHOU5ZVzVvWVhSMFlXNG9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1dFlXNW9ZWFIwWVc1RWFYTjBZVzVqWlZSdktDa3VJaWtzSUhSb2FYTXViV0Z1YUdGMGRHRnVSR2x6ZEdGdVkyVlVieWh6S1RzS2ZUc0tXQzV3Y205MGIzUjVjR1V1YkdWdVozUm9UV0Z1YUdGMGRHRnVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXlPaUF1YkdWdVozUm9UV0Z1YUdGMGRHRnVLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWJXRnVhR0YwZEdGdVRHVnVaM1JvS0NrdUlpa3NJSFJvYVhNdWJXRnVhR0YwZEdGdVRHVnVaM1JvS0NrN0NuMDdDazB1Y0hKdmRHOTBlWEJsTG5ObGRFVjFiR1Z5Um5KdmJWSnZkR0YwYVc5dVRXRjBjbWw0SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXVjMlYwUlhWc1pYSkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1JYVnNaWEl1YzJWMFJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNEtDa2dhVzV6ZEdWaFpDNGlLVHNLZlRzS1RTNXdjbTkwYjNSNWNHVXVjMlYwUlhWc1pYSkdjbTl0VVhWaGRHVnlibWx2YmlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbk5sZEVWMWJHVnlSbkp2YlZGMVlYUmxjbTVwYjI0b0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnUlhWc1pYSXVjMlYwUm5KdmJWRjFZWFJsY201cGIyNG9LU0JwYm5OMFpXRmtMaUlwT3dwOU93cE5MbkJ5YjNSdmRIbHdaUzVuWlhSUWIzTnBkR2x2YmtaeWIyMU5ZWFJ5YVhnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXVaMlYwVUc5emFYUnBiMjVHY205dFRXRjBjbWw0S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0NrdUlpa3NJSFJvYVhNdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSE1wT3dwOU93cE5MbkJ5YjNSdmRIbHdaUzVuWlhSVFkyRnNaVVp5YjIxTllYUnlhWGdnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdVoyVjBVMk5oYkdWR2NtOXRUV0YwY21sNEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YzJWMFJuSnZiVTFoZEhKcGVGTmpZV3hsS0NrdUlpa3NJSFJvYVhNdWMyVjBSbkp2YlUxaGRISnBlRk5qWVd4bEtITXBPd3A5T3dwTkxuQnliM1J2ZEhsd1pTNW5aWFJEYjJ4MWJXNUdjbTl0VFdGMGNtbDRJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtZGxkRU52YkhWdGJrWnliMjFOWVhSeWFYZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtDa3VJaWtzSUhSb2FYTXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWhsTENCektUc0tmVHNLVFM1d2NtOTBiM1I1Y0dVdVlYQndiSGxRY205cVpXTjBhVzl1SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtRndjR3g1VUhKdmFtVmpkR2x2YmlncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0F1WVhCd2JIbE5ZWFJ5YVhnMEtDQnRJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb2N5azdDbjA3Q2swdWNISnZkRzkwZVhCbExtWnliMjFCZEhSeWFXSjFkR1VnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXpPaUF1Wm5KdmJVRjBkSEpwWW5WMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTNGlLU3dnZEdocGN5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSE1zSUdVc0lIUXBPd3A5T3dwTkxuQnliM1J2ZEhsd1pTNWthWE4wWVc1alpWUnZUV0Z1YUdGMGRHRnVJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1ScGMzUmhibU5sVkc5TllXNW9ZWFIwWVc0b0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV0WVc1b1lYUjBZVzVFYVhOMFlXNWpaVlJ2S0NrdUlpa3NJSFJvYVhNdWJXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aHpLVHNLZlRzS1RTNXdjbTkwYjNSNWNHVXViR1Z1WjNSb1RXRnVhR0YwZEdGdUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXViR1Z1WjNSb1RXRnVhR0YwZEdGdUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YldGdWFHRjBkR0Z1VEdWdVozUm9LQ2t1SWlrc0lIUm9hWE11YldGdWFHRjBkR0Z1VEdWdVozUm9LQ2s3Q24wN0NsWmxMbkJ5YjNSdmRIbHdaUzVtY205dFFYUjBjbWxpZFhSbElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TkRvZ0xtWnliMjFCZEhSeWFXSjFkR1VvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLQ2t1SWlrc0lIUm9hWE11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoekxDQmxMQ0IwS1RzS2ZUc0tWbVV1Y0hKdmRHOTBlWEJsTG14bGJtZDBhRTFoYm1oaGRIUmhiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlORG9nTG14bGJtZDBhRTFoYm1oaGRIUmhiaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtMWhibWhoZEhSaGJreGxibWQwYUNncExpSXBMQ0IwYUdsekxtMWhibWhoZEhSaGJreGxibWQwYUNncE93cDlPd3BPWlM1d2NtOTBiM1I1Y0dVdVoyVjBRMmhwYkdSQ2VVNWhiV1VnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1F6UkRvZ0xtZGxkRU5vYVd4a1FubE9ZVzFsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwVDJKcVpXTjBRbmxPWVcxbEtDa3VJaWtzSUhSb2FYTXVaMlYwVDJKcVpXTjBRbmxPWVcxbEtITXBPd3A5T3dwT1pTNXdjbTkwYjNSNWNHVXVjbVZ1WkdWeVJHVndkR2dnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wTTBRNklDNXlaVzVrWlhKRVpYQjBhQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xuSmxibVJsY2s5eVpHVnlMQ0JwYm5OMFpXRmtMaUlwT3dwOU93cE9aUzV3Y205MGIzUjVjR1V1ZEhKaGJuTnNZWFJsSUQwZ1puVnVZM1JwYjI0b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOME0wUTZJQzUwY21GdWMyeGhkR1VvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdMblJ5WVc1emJHRjBaVTl1UVhocGN5Z2dZWGhwY3l3Z1pHbHpkR0Z1WTJVZ0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxuUnlZVzV6YkdGMFpVOXVRWGhwY3lobExDQnpLVHNLZlRzS1RtVXVjSEp2ZEc5MGVYQmxMbWRsZEZkdmNteGtVbTkwWVhScGIyNGdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGs5aWFtVmpkRE5FT2lBdVoyVjBWMjl5YkdSU2IzUmhkR2x2YmlncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JVU0ZKRlJTNVBZbXBsWTNRelJDNW5aWFJYYjNKc1pGRjFZWFJsY201cGIyNG9JSFJoY21kbGRDQXBJR2x1YzNSbFlXUXVJaWs3Q24wN0NrNWxMbkJ5YjNSdmRIbHdaUzVoY0hCc2VVMWhkSEpwZUNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZERORU9pQXVZWEJ3YkhsTllYUnlhWGdvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNWhjSEJzZVUxaGRISnBlRFFvS1M0aUtTd2dkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9jeWs3Q24wN0NrOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBhV1Z6S0U1bExuQnliM1J2ZEhsd1pTd2dld29nSUNBZ1pYVnNaWEpQY21SbGNqb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRE5FT2lBdVpYVnNaWEpQY21SbGNpQnBjeUJ1YjNjZ0xuSnZkR0YwYVc5dUxtOXlaR1Z5TGlJcExDQjBhR2x6TG5KdmRHRjBhVzl1TG05eVpHVnlPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOME0wUTZJQzVsZFd4bGNrOXlaR1Z5SUdseklHNXZkeUF1Y205MFlYUnBiMjR1YjNKa1pYSXVJaWtzSUhSb2FYTXVjbTkwWVhScGIyNHViM0prWlhJZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCMWMyVlJkV0YwWlhKdWFXOXVPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNRelJEb2dMblZ6WlZGMVlYUmxjbTVwYjI0Z2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZHaGxJR3hwWW5KaGNua2dibTkzSUhWelpYTWdjWFZoZEdWeWJtbHZibk1nWW5rZ1pHVm1ZWFZzZEM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wTTBRNklDNTFjMlZSZFdGMFpYSnVhVzl1SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZSb1pTQnNhV0p5WVhKNUlHNXZkeUIxYzJWeklIRjFZWFJsY201cGIyNXpJR0o1SUdSbFptRjFiSFF1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUtUc0tjM1F1Y0hKdmRHOTBlWEJsTG5ObGRFUnlZWGROYjJSbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWlhOb09pQXVjMlYwUkhKaGQwMXZaR1VvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVWFHVWdjbVZ1WkdWeVpYSWdibTkzSUdGc2QyRjVjeUJoYzNOMWJXVnpJRlJJVWtWRkxsUnlhV0Z1WjJ4bGMwUnlZWGROYjJSbExpQlVjbUZ1YzJadmNtMGdlVzkxY2lCblpXOXRaWFJ5ZVNCMmFXRWdRblZtWm1WeVIyVnZiV1YwY25sVmRHbHNjeTUwYjFSeWFXRnVaMnhsYzBSeVlYZE5iMlJsS0NrZ2FXWWdibVZqWlhOellYSjVMaUlwT3dwOU93cFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loemRDNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lHUnlZWGROYjJSbE9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxbGMyZzZJQzVrY21GM1RXOWtaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJVYUdVZ2NtVnVaR1Z5WlhJZ2JtOTNJR0ZzZDJGNWN5QmhjM04xYldWeklGUklVa1ZGTGxSeWFXRnVaMnhsYzBSeVlYZE5iMlJsTGlJcExDQkdaRHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFsYzJnNklDNWtjbUYzVFc5a1pTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlVhR1VnY21WdVpHVnlaWElnYm05M0lHRnNkMkY1Y3lCaGMzTjFiV1Z6SUZSSVVrVkZMbFJ5YVdGdVoyeGxjMFJ5WVhkTmIyUmxMaUJVY21GdWMyWnZjbTBnZVc5MWNpQm5aVzl0WlhSeWVTQjJhV0VnUW5WbVptVnlSMlZ2YldWMGNubFZkR2xzY3k1MGIxUnlhV0Z1WjJ4bGMwUnlZWGROYjJSbEtDa2dhV1lnYm1WalpYTnpZWEo1TGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDbk52TG5CeWIzUnZkSGx3WlM1cGJtbDBRbTl1WlhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbE5yYVc1dVpXUk5aWE5vT2lCcGJtbDBRbTl1WlhNb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwMWRDNXdjbTkwYjNSNWNHVXVjMlYwVEdWdWN5QTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVHVnljM0JsWTNScGRtVkRZVzFsY21FdWMyVjBUR1Z1Y3lCcGN5QmtaWEJ5WldOaGRHVmtMaUJWYzJVZ0xuTmxkRVp2WTJGc1RHVnVaM1JvSUdGdVpDQXVabWxzYlVkaGRXZGxJR1p2Y2lCaElIQm9iM1J2WjNKaGNHaHBZeUJ6WlhSMWNDNGlLU3dnWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxtWnBiRzFIWVhWblpTQTlJR1VwTENCMGFHbHpMbk5sZEVadlkyRnNUR1Z1WjNSb0tITXBPd3A5T3dwUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhDZEM1d2NtOTBiM1I1Y0dVc0lIc0tJQ0FnSUc5dWJIbFRhR0ZrYjNjNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YjI1c2VWTm9ZV1J2ZHlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZERZVzFsY21GR2IzWTZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xuTm9ZV1J2ZDBOaGJXVnlZVVp2ZGlCcGN5QnViM2NnTG5Ob1lXUnZkeTVqWVcxbGNtRXVabTkyTGlJcExDQjBhR2x6TG5Ob1lXUnZkeTVqWVcxbGNtRXVabTkySUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNRMkZ0WlhKaFRHVm1kRG9nZXdvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXVjMmhoWkc5M1EyRnRaWEpoVEdWbWRDQnBjeUJ1YjNjZ0xuTm9ZV1J2ZHk1allXMWxjbUV1YkdWbWRDNGlLU3dnZEdocGN5NXphR0ZrYjNjdVkyRnRaWEpoTG14bFpuUWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkRFlXMWxjbUZTYVdkb2REb2dld29nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBaMmgwT2lBdWMyaGhaRzkzUTJGdFpYSmhVbWxuYUhRZ2FYTWdibTkzSUM1emFHRmtiM2N1WTJGdFpYSmhMbkpwWjJoMExpSXBMQ0IwYUdsekxuTm9ZV1J2ZHk1allXMWxjbUV1Y21sbmFIUWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkRFlXMWxjbUZVYjNBNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkME5oYldWeVlWUnZjQ0JwY3lCdWIzY2dMbk5vWVdSdmR5NWpZVzFsY21FdWRHOXdMaUlwTENCMGFHbHpMbk5vWVdSdmR5NWpZVzFsY21FdWRHOXdJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1EyRnRaWEpoUW05MGRHOXRPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkRFlXMWxjbUZDYjNSMGIyMGdhWE1nYm05M0lDNXphR0ZrYjNjdVkyRnRaWEpoTG1KdmRIUnZiUzRpS1N3Z2RHaHBjeTV6YUdGa2IzY3VZMkZ0WlhKaExtSnZkSFJ2YlNBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkME5oYldWeVlVNWxZWEk2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwTmhiV1Z5WVU1bFlYSWdhWE1nYm05M0lDNXphR0ZrYjNjdVkyRnRaWEpoTG01bFlYSXVJaWtzSUhSb2FYTXVjMmhoWkc5M0xtTmhiV1Z5WVM1dVpXRnlJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1EyRnRaWEpoUm1GeU9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2REWVcxbGNtRkdZWElnYVhNZ2JtOTNJQzV6YUdGa2IzY3VZMkZ0WlhKaExtWmhjaTRpS1N3Z2RHaHBjeTV6YUdGa2IzY3VZMkZ0WlhKaExtWmhjaUE5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVZacGMybGliR1U2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXVjMmhoWkc5M1EyRnRaWEpoVm1semFXSnNaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2JtVjNJRlJJVWtWRkxrTmhiV1Z5WVVobGJIQmxjaWdnYkdsbmFIUXVjMmhoWkc5M0xtTmhiV1Z5WVNBcElHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkMEpwWVhNNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkMEpwWVhNZ2FYTWdibTkzSUM1emFHRmtiM2N1WW1saGN5NGlLU3dnZEdocGN5NXphR0ZrYjNjdVltbGhjeUE5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwUmhjbXR1WlhOek9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkMFJoY210dVpYTnpJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDAxaGNGZHBaSFJvT2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsbmFIUTZJQzV6YUdGa2IzZE5ZWEJYYVdSMGFDQnBjeUJ1YjNjZ0xuTm9ZV1J2ZHk1dFlYQlRhWHBsTG5kcFpIUm9MaUlwTENCMGFHbHpMbk5vWVdSdmR5NXRZWEJUYVhwbExuZHBaSFJvSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNUV0Z3U0dWcFoyaDBPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkTllYQklaV2xuYUhRZ2FYTWdibTkzSUM1emFHRmtiM2N1YldGd1UybDZaUzVvWldsbmFIUXVJaWtzSUhSb2FYTXVjMmhoWkc5M0xtMWhjRk5wZW1VdWFHVnBaMmgwSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHBPd3BQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aFZaUzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJR3hsYm1kMGFEb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja0YwZEhKcFluVjBaVG9nTG14bGJtZDBhQ0JvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdMbU52ZFc1MElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdVlYSnlZWGt1YkdWdVozUm9Pd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCa2VXNWhiV2xqT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVFYUjBjbWxpZFhSbE9pQXVaSGx1WVcxcFl5Qm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ0xuVnpZV2RsSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11ZFhOaFoyVWdQVDA5SUhWeU93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1U2SUM1a2VXNWhiV2xqSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRdUlGVnpaU0F1ZFhOaFoyVWdhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXpaWFJWYzJGblpTaDFjaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5S1RzS1ZXVXVjSEp2ZEc5MGVYQmxMbk5sZEVSNWJtRnRhV01nUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1U2SUM1elpYUkVlVzVoYldsaktDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElDNXpaWFJWYzJGblpTZ3BJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjMlYwVlhOaFoyVW9jeUE5UFQwZ0lUQWdQeUIxY2lBNklHaHlLU3dnZEdocGN6c0tmVHNLVldVdWNISnZkRzkwZVhCbExtTnZjSGxKYm1ScFkyVnpRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dMbU52Y0hsSmJtUnBZMlZ6UVhKeVlYa29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOUxDQlZaUzV3Y205MGIzUjVjR1V1YzJWMFFYSnlZWGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tGMGRISnBZblYwWlRvZ0xuTmxkRUZ5Y21GNUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JDZFdabVpYSkhaVzl0WlhSeWVTQXVjMlYwUVhSMGNtbGlkWFJsSUhSdklISmxjR3hoWTJVdmNtVnphWHBsSUdGMGRISnBZblYwWlNCaWRXWm1aWEp6SWlrN0NuMDdDbDlsTG5CeWIzUnZkSGx3WlM1aFpHUkpibVJsZUNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rNklDNWhaR1JKYm1SbGVDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG5ObGRFbHVaR1Y0S0NrdUlpa3NJSFJvYVhNdWMyVjBTVzVrWlhnb2N5azdDbjA3Q2w5bExuQnliM1J2ZEhsd1pTNWhaR1JCZEhSeWFXSjFkR1VnUFNCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtRmtaRUYwZEhKcFluVjBaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xuTmxkRUYwZEhKcFluVjBaU2dwTGlJcExDQWhLR1VnSmlZZ1pTNXBjMEoxWm1abGNrRjBkSEpwWW5WMFpTa2dKaVlnSVNobElDWW1JR1V1YVhOSmJuUmxjbXhsWVhabFpFSjFabVpsY2tGMGRISnBZblYwWlNrZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbUZrWkVGMGRISnBZblYwWlNncElHNXZkeUJsZUhCbFkzUnpJQ2dnYm1GdFpTd2dZWFIwY21saWRYUmxJQ2t1SWlrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtITXNJRzVsZHlCVlpTaGhjbWQxYldWdWRITmJNVjBzSUdGeVozVnRaVzUwYzFzeVhTa3BLU0E2SUhNZ1BUMDlJQ0pwYm1SbGVDSWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllUzVoWkdSQmRIUnlhV0oxZEdVNklGVnpaU0F1YzJWMFNXNWtaWGdvS1NCbWIzSWdhVzVrWlhnZ1lYUjBjbWxpZFhSbExpSXBMQ0IwYUdsekxuTmxkRWx1WkdWNEtHVXBMQ0IwYUdsektTQTZJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLSE1zSUdVcE93cDlPd3BmWlM1d2NtOTBiM1I1Y0dVdVlXUmtSSEpoZDBOaGJHd2dQU0JtZFc1amRHbHZiaWh6TENCbExDQjBLU0I3Q2lBZ0lDQjBJQ0U5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtRmtaRVJ5WVhkRFlXeHNLQ2tnYm04Z2JHOXVaMlZ5SUhOMWNIQnZjblJ6SUdsdVpHVjRUMlptYzJWMExpSXBMQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVPaUF1WVdSa1JISmhkME5oYkd3b0tTQnBjeUJ1YjNjZ0xtRmtaRWR5YjNWd0tDa3VJaWtzSUhSb2FYTXVZV1JrUjNKdmRYQW9jeXdnWlNrN0NuMDdDbDlsTG5CeWIzUnZkSGx3WlM1amJHVmhja1J5WVhkRFlXeHNjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1Oc1pXRnlSSEpoZDBOaGJHeHpLQ2tnYVhNZ2JtOTNJQzVqYkdWaGNrZHliM1Z3Y3lncExpSXBMQ0IwYUdsekxtTnNaV0Z5UjNKdmRYQnpLQ2s3Q24wN0NsOWxMbkJ5YjNSdmRIbHdaUzVqYjIxd2RYUmxUMlptYzJWMGN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbU52YlhCMWRHVlBabVp6WlhSektDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS1gyVXVjSEp2ZEc5MGVYQmxMbkpsYlc5MlpVRjBkSEpwWW5WMFpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNU9pQXVjbVZ0YjNabFFYUjBjbWxpZFhSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WkdWc1pYUmxRWFIwY21saWRYUmxLQ2t1SWlrc0lIUm9hWE11WkdWc1pYUmxRWFIwY21saWRYUmxLSE1wT3dwOU93cGZaUzV3Y205MGIzUjVjR1V1WVhCd2JIbE5ZWFJ5YVhnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtRndjR3g1VFdGMGNtbDRLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVlYQndiSGxOWVhSeWFYZzBLQ2t1SWlrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtITXBPd3A5T3dwUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhmWlM1d2NtOTBiM1I1Y0dVc0lIc0tJQ0FnSUdSeVlYZGpZV3hzY3pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbVJ5WVhkallXeHNjeUJvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1bmNtOTFjSE11SWlrc0lIUm9hWE11WjNKdmRYQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCdlptWnpaWFJ6T2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rNklDNXZabVp6WlhSeklHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWR5YjNWd2N5NGlLU3dnZEdocGN5NW5jbTkxY0hNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUtUc0tKRzR1Y0hKdmRHOTBlWEJsTG5ObGRFUjVibUZ0YVdNZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiblJsY214bFlYWmxaRUoxWm1abGNqb2dMbk5sZEVSNWJtRnRhV01vS1NCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnTG5ObGRGVnpZV2RsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1elpYUlZjMkZuWlNoeklEMDlQU0FoTUNBL0lIVnlJRG9nYUhJcExDQjBhR2x6T3dwOU93b2tiaTV3Y205MGIzUjVjR1V1YzJWMFFYSnlZWGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrbHVkR1Z5YkdWaGRtVmtRblZtWm1WeU9pQXVjMlYwUVhKeVlYa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUVKMVptWmxja2RsYjIxbGRISjVJQzV6WlhSQmRIUnlhV0oxZEdVZ2RHOGdjbVZ3YkdGalpTOXlaWE5wZW1VZ1lYUjBjbWxpZFhSbElHSjFabVpsY25NaUtUc0tmVHNLYkc0dWNISnZkRzkwZVhCbExtZGxkRUZ5Y21GNWN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UlhoMGNuVmtaVWRsYjIxbGRISjVPaUF1WjJWMFFYSnlZWGx6S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLYkc0dWNISnZkRzkwZVhCbExtRmtaRk5vWVhCbFRHbHpkQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVJYaDBjblZrWlVkbGIyMWxkSEo1T2lBdVlXUmtVMmhoY0dWTWFYTjBLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tiRzR1Y0hKdmRHOTBlWEJsTG1Ga1pGTm9ZWEJsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUZlSFJ5ZFdSbFIyVnZiV1YwY25rNklDNWhaR1JUYUdGd1pTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NtNXZMbkJ5YjNSdmRIbHdaUzVrYVhOd2IzTmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1VFkyVnVaVG9nTG1ScGMzQnZjMlVvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3BuYnk1d2NtOTBiM1I1Y0dVdWIyNVZjR1JoZEdVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsVnVhV1p2Y20wNklDNXZibFZ3WkdGMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdlltcGxZM1F1YjI1Q1pXWnZjbVZTWlc1a1pYSW9LU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpPd3A5T3dwUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhrZEM1d2NtOTBiM1I1Y0dVc0lIc0tJQ0FnSUhkeVlYQkJjbTkxYm1RNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHVnlhV0ZzT2lBdWQzSmhjRUZ5YjNWdVpDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJsY21saGJEb2dMbmR5WVhCQmNtOTFibVFnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdiM1psY21SeVlYYzZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkR1Z5YVdGc09pQXViM1psY21SeVlYY2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwWlhKcFlXdzZJQzV2ZG1WeVpISmhkeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQjNjbUZ3VWtkQ09pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMFpYSnBZV3c2SUM1M2NtRndVa2RDSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrc0lHNWxkeUJoWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkdsdVp6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxpSWdLeUIwYUdsekxuUjVjR1VnS3lBaU9pQXVjMmhoWkdsdVp5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnZEdobElHSnZiMnhsWVc0Z0xtWnNZWFJUYUdGa2FXNW5JR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzRpSUNzZ2RHaHBjeTUwZVhCbElDc2dJam9nTG5Ob1lXUnBibWNnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElIUm9aU0JpYjI5c1pXRnVJQzVtYkdGMFUyaGhaR2x1WnlCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdjeUE5UFQwZ2EyTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOMFpXNWphV3hOWVhOck9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1SWlBcklIUm9hWE11ZEhsd1pTQXJJQ0k2SUM1emRHVnVZMmxzVFdGemF5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG5OMFpXNWphV3hHZFc1alRXRnpheUJwYm5OMFpXRmtMaUlwTENCMGFHbHpMbk4wWlc1amFXeEdkVzVqVFdGemF6c0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxpSWdLeUIwYUdsekxuUjVjR1VnS3lBaU9pQXVjM1JsYm1OcGJFMWhjMnNnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElDNXpkR1Z1WTJsc1JuVnVZMDFoYzJzZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1emRHVnVZMmxzUm5WdVkwMWhjMnNnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0IyWlhKMFpYaFVZVzVuWlc1MGN6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdUlpQXJJSFJvYVhNdWRIbHdaU0FySUNJNklDNTJaWEowWlhoVVlXNW5aVzUwY3lCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM0aUlDc2dkR2hwY3k1MGVYQmxJQ3NnSWpvZ0xuWmxjblJsZUZSaGJtZGxiblJ6SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUtUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb2MyNHVjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQmtaWEpwZG1GMGFYWmxjem9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsTm9ZV1JsY2sxaGRHVnlhV0ZzT2lBdVpHVnlhWFpoZEdsMlpYTWdhR0Z6SUdKbFpXNGdiVzkyWldRZ2RHOGdMbVY0ZEdWdWMybHZibk11WkdWeWFYWmhkR2wyWlhNdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NWtaWEpwZG1GMGFYWmxjenNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMaUJUYUdGa1pYSk5ZWFJsY21saGJEb2dMbVJsY21sMllYUnBkbVZ6SUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM1bGVIUmxibk5wYjI1ekxtUmxjbWwyWVhScGRtVnpMaUlwTENCMGFHbHpMbVY0ZEdWdWMybHZibk11WkdWeWFYWmhkR2wyWlhNZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q25GbExuQnliM1J2ZEhsd1pTNWpiR1ZoY2xSaGNtZGxkQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1Oc1pXRnlWR0Z5WjJWMEtDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElDNXpaWFJTWlc1a1pYSlVZWEpuWlhRb0tTQmhibVFnTG1Oc1pXRnlLQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV6WlhSU1pXNWtaWEpVWVhKblpYUW9jeWtzSUhSb2FYTXVZMnhsWVhJb1pTd2dkQ3dnYmlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1aGJtbHRZWFJsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVlXNXBiV0YwWlNncElHbHpJRzV2ZHlBdWMyVjBRVzVwYldGMGFXOXVURzl2Y0NncExpSXBMQ0IwYUdsekxuTmxkRUZ1YVcxaGRHbHZia3h2YjNBb2N5azdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNW5aWFJEZFhKeVpXNTBVbVZ1WkdWeVZHRnlaMlYwSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJWMFEzVnljbVZ1ZEZKbGJtUmxjbFJoY21kbGRDZ3BJR2x6SUc1dmR5QXVaMlYwVW1WdVpHVnlWR0Z5WjJWMEtDa3VJaWtzSUhSb2FYTXVaMlYwVW1WdVpHVnlWR0Z5WjJWMEtDazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNW5aWFJOWVhoQmJtbHpiM1J5YjNCNUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyVjBUV0Y0UVc1cGMyOTBjbTl3ZVNncElHbHpJRzV2ZHlBdVkyRndZV0pwYkdsMGFXVnpMbWRsZEUxaGVFRnVhWE52ZEhKdmNIa29LUzRpS1N3Z2RHaHBjeTVqWVhCaFltbHNhWFJwWlhNdVoyVjBUV0Y0UVc1cGMyOTBjbTl3ZVNncE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdVoyVjBVSEpsWTJsemFXOXVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMlYwVUhKbFkybHphVzl1S0NrZ2FYTWdibTkzSUM1allYQmhZbWxzYVhScFpYTXVjSEpsWTJsemFXOXVMaUlwTENCMGFHbHpMbU5oY0dGaWFXeHBkR2xsY3k1d2NtVmphWE5wYjI0N0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1eVpYTmxkRWRNVTNSaGRHVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXlaWE5sZEVkTVUzUmhkR1VvS1NCcGN5QnViM2NnTG5OMFlYUmxMbkpsYzJWMEtDa3VJaWtzSUhSb2FYTXVjM1JoZEdVdWNtVnpaWFFvS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5OMWNIQnZjblJ6Um14dllYUlVaWGgwZFhKbGN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTjFjSEJ2Y25SelJteHZZWFJVWlhoMGRYSmxjeWdwSUdseklHNXZkeUF1WlhoMFpXNXphVzl1Y3k1blpYUW9JQ2RQUlZOZmRHVjRkSFZ5WlY5bWJHOWhkQ2NnS1M0aUtTd2dkR2hwY3k1bGVIUmxibk5wYjI1ekxtZGxkQ2dpVDBWVFgzUmxlSFIxY21WZlpteHZZWFFpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5OMWNIQnZjblJ6U0dGc1prWnNiMkYwVkdWNGRIVnlaWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6ZFhCd2IzSjBjMGhoYkdaR2JHOWhkRlJsZUhSMWNtVnpLQ2tnYVhNZ2JtOTNJQzVsZUhSbGJuTnBiMjV6TG1kbGRDZ2dKMDlGVTE5MFpYaDBkWEpsWDJoaGJHWmZabXh2WVhRbklDa3VJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVuWlhRb0lrOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFFpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5OMWNIQnZjblJ6VTNSaGJtUmhjbVJFWlhKcGRtRjBhWFpsY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5OMWNIQnZjblJ6VTNSaGJtUmhjbVJFWlhKcGRtRjBhWFpsY3lncElHbHpJRzV2ZHlBdVpYaDBaVzV6YVc5dWN5NW5aWFFvSUNkUFJWTmZjM1JoYm1SaGNtUmZaR1Z5YVhaaGRHbDJaWE1uSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWs5RlUxOXpkR0Z1WkdGeVpGOWtaWEpwZG1GMGFYWmxjeUlwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YzNWd2NHOXlkSE5EYjIxd2NtVnpjMlZrVkdWNGRIVnlaVk16VkVNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emRYQndiM0owYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsVXpOVVF5Z3BJR2x6SUc1dmR5QXVaWGgwWlc1emFXOXVjeTVuWlhRb0lDZFhSVUpIVEY5amIyMXdjbVZ6YzJWa1gzUmxlSFIxY21WZmN6TjBZeWNnS1M0aUtTd2dkR2hwY3k1bGVIUmxibk5wYjI1ekxtZGxkQ2dpVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM016ZEdNaUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTjFjSEJ2Y25SelEyOXRjSEpsYzNObFpGUmxlSFIxY21WUVZsSlVReUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk4xY0hCdmNuUnpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVlFWbEpVUXlncElHbHpJRzV2ZHlBdVpYaDBaVzV6YVc5dWN5NW5aWFFvSUNkWFJVSkhURjlqYjIxd2NtVnpjMlZrWDNSbGVIUjFjbVZmY0haeWRHTW5JQ2t1SWlrc0lIUm9hWE11WlhoMFpXNXphVzl1Y3k1blpYUW9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXdkbkowWXlJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWMzVndjRzl5ZEhOQ2JHVnVaRTFwYmsxaGVDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTjFjSEJ2Y25SelFteGxibVJOYVc1TllYZ29LU0JwY3lCdWIzY2dMbVY0ZEdWdWMybHZibk11WjJWMEtDQW5SVmhVWDJKc1pXNWtYMjFwYm0xaGVDY2dLUzRpS1N3Z2RHaHBjeTVsZUhSbGJuTnBiMjV6TG1kbGRDZ2lSVmhVWDJKc1pXNWtYMjFwYm0xaGVDSXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVjM1Z3Y0c5eWRITldaWEowWlhoVVpYaDBkWEpsY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5OMWNIQnZjblJ6Vm1WeWRHVjRWR1Y0ZEhWeVpYTW9LU0JwY3lCdWIzY2dMbU5oY0dGaWFXeHBkR2xsY3k1MlpYSjBaWGhVWlhoMGRYSmxjeTRpS1N3Z2RHaHBjeTVqWVhCaFltbHNhWFJwWlhNdWRtVnlkR1Y0VkdWNGRIVnlaWE03Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzV6ZFhCd2IzSjBjMGx1YzNSaGJtTmxaRUZ5Y21GNWN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTjFjSEJ2Y25SelNXNXpkR0Z1WTJWa1FYSnlZWGx6S0NrZ2FYTWdibTkzSUM1bGVIUmxibk5wYjI1ekxtZGxkQ2dnSjBGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTW5JQ2t1SWlrc0lIUm9hWE11WlhoMFpXNXphVzl1Y3k1blpYUW9Ja0ZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNaUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExtVnVZV0pzWlZOamFYTnpiM0pVWlhOMElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaVzVoWW14bFUyTnBjM052Y2xSbGMzUW9LU0JwY3lCdWIzY2dMbk5sZEZOamFYTnpiM0pVWlhOMEtDa3VJaWtzSUhSb2FYTXVjMlYwVTJOcGMzTnZjbFJsYzNRb2N5azdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXBibWwwVFdGMFpYSnBZV3dnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1sdWFYUk5ZWFJsY21saGJDZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVoWkdSUWNtVlFiSFZuYVc0Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtRmtaRkJ5WlZCc2RXZHBiaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1aFpHUlFiM04wVUd4MVoybHVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzVoWkdSUWIzTjBVR3gxWjJsdUtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMblZ3WkdGMFpWTm9ZV1J2ZDAxaGNDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVkWEJrWVhSbFUyaGhaRzkzVFdGd0tDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk5sZEVaaFkyVkRkV3hzYVc1bklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpaWFJHWVdObFEzVnNiR2x1WnlncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNWhiR3h2WTFSbGVIUjFjbVZWYm1sMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNWhiR3h2WTFSbGVIUjFjbVZWYm1sMEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk5sZEZSbGVIUjFjbVVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5ObGRGUmxlSFIxY21Vb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVjMlYwVkdWNGRIVnlaVEpFSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1elpYUlVaWGgwZFhKbE1rUW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YzJWMFZHVjRkSFZ5WlVOMVltVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5sZEZSbGVIUjFjbVZEZFdKbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbWRsZEVGamRHbDJaVTFwY0UxaGNFeGxkbVZzSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJWMFFXTjBhWFpsVFdsd1RXRndUR1YyWld3b0tTQnBjeUJ1YjNjZ0xtZGxkRUZqZEdsMlpVMXBjRzFoY0V4bGRtVnNLQ2t1SWlrc0lIUm9hWE11WjJWMFFXTjBhWFpsVFdsd2JXRndUR1YyWld3b0tUc0tmVHNLVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25ScFpYTW9jV1V1Y0hKdmRHOTBlWEJsTENCN0NpQWdJQ0J6YUdGa2IzZE5ZWEJGYm1GaWJHVmtPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMmhoWkc5M1RXRndMbVZ1WVdKc1pXUTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNCcGN5QnViM2NnTG5Ob1lXUnZkMDFoY0M1bGJtRmliR1ZrTGlJcExDQjBhR2x6TG5Ob1lXUnZkMDFoY0M1bGJtRmliR1ZrSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNUV0Z3Vkhsd1pUb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTm9ZV1J2ZDAxaGNDNTBlWEJsT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjRlI1Y0dVZ2FYTWdibTkzSUM1emFHRmtiM2ROWVhBdWRIbHdaUzRpS1N3Z2RHaHBjeTV6YUdGa2IzZE5ZWEF1ZEhsd1pTQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDAxaGNFTjFiR3hHWVdObE9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1YzJoaFpHOTNUV0Z3UTNWc2JFWmhZMlVnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElFMWhkR1Z5YVdGc0xuTm9ZV1J2ZDFOcFpHVWdhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNFTjFiR3hHWVdObElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0JOWVhSbGNtbGhiQzV6YUdGa2IzZFRhV1JsSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR052Ym5SbGVIUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WTI5dWRHVjRkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xtZGxkRU52Ym5SbGVIUW9LU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbWRsZEVOdmJuUmxlSFFvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdkbkk2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWRuSWdhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1ZUhJaUtTd2dkR2hwY3k1NGNqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWjJGdGJXRkpibkIxZERvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNW5ZVzF0WVVsdWNIVjBJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRk5sZENCMGFHVWdaVzVqYjJScGJtY2dabTl5SUhSbGVIUjFjbVZ6SUhacFlTQlVaWGgwZFhKbExtVnVZMjlrYVc1bklHbHVjM1JsWVdRdUlpa3NJQ0V4T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMkZ0YldGSmJuQjFkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ2RHaGxJR1Z1WTI5a2FXNW5JR1p2Y2lCMFpYaDBkWEpsY3lCMmFXRWdWR1Y0ZEhWeVpTNWxibU52WkdsdVp5QnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCbllXMXRZVTkxZEhCMWREb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzVuWVcxdFlVOTFkSEIxZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdWMlZpUjB4U1pXNWtaWEpsY2k1dmRYUndkWFJGYm1OdlpHbHVaeUJwYm5OMFpXRmtMaUlwTENBaE1Uc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1bllXMXRZVTkxZEhCMWRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnVjJWaVIweFNaVzVrWlhKbGNpNXZkWFJ3ZFhSRmJtTnZaR2x1WnlCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG05MWRIQjFkRVZ1WTI5a2FXNW5JRDBnY3lBOVBUMGdJVEFnUHlCUGFTQTZJRTUwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQjBiMjVsVFdGd2NHbHVaMWRvYVhSbFVHOXBiblE2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWRHOXVaVTFoY0hCcGJtZFhhR2wwWlZCdmFXNTBJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWtzSURFN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzUwYjI1bFRXRndjR2x1WjFkb2FYUmxVRzlwYm5RZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWjJGdGJXRkdZV04wYjNJNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMkZ0YldGR1lXTjBiM0lnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1N3Z01qc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1kaGJXMWhSbUZqZEc5eUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlLVHNLVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25ScFpYTW9lV2d1Y0hKdmRHOTBlWEJsTENCN0NpQWdJQ0JqZFd4c1JtRmpaVG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNDNWpkV3hzUm1GalpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnVFdGMFpYSnBZV3d1YzJoaFpHOTNVMmxrWlNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1YzJoaFpHOTNUV0Z3TG1OMWJHeEdZV05sSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZObGRDQk5ZWFJsY21saGJDNXphR0ZrYjNkVGFXUmxJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lISmxibVJsY2xKbGRtVnljMlZUYVdSbFpEb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0M1eVpXNWtaWEpTWlhabGNuTmxVMmxrWldRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1UyVjBJRTFoZEdWeWFXRnNMbk5vWVdSdmQxTnBaR1VnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjQzV5Wlc1a1pYSlNaWFpsY25ObFUybGtaV1FnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElFMWhkR1Z5YVdGc0xuTm9ZV1J2ZDFOcFpHVWdhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2NtVnVaR1Z5VTJsdVoyeGxVMmxrWldRNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6YUdGa2IzZE5ZWEF1Y21WdVpHVnlVMmx1WjJ4bFUybGtaV1FnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElFMWhkR1Z5YVdGc0xuTm9ZV1J2ZDFOcFpHVWdhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNDNXlaVzVrWlhKVGFXNW5iR1ZUYVdSbFpDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnVFdGMFpYSnBZV3d1YzJoaFpHOTNVMmxrWlNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDbVoxYm1OMGFXOXVJRkV3S0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBRM1ZpWlNnZ2QybGtkR2dzSUdobGFXZG9kQ3dnYjNCMGFXOXVjeUFwSUdseklHNXZkeUJYWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRb0lITnBlbVVzSUc5d2RHbHZibk1nS1M0aUtTd2dibVYzSUdwektITXNJSFFwT3dwOUNrOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBhV1Z6S0VGMExuQnliM1J2ZEhsd1pTd2dld29nSUNBZ2QzSmhjRk02SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbmR5WVhCVElHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1M2NtRndVeTRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbmR5WVhCVE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNTNjbUZ3VXlCcGN5QnViM2NnTG5SbGVIUjFjbVV1ZDNKaGNGTXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNTNjbUZ3VXlBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhkeVlYQlVPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNTNjbUZ3VkNCcGN5QnViM2NnTG5SbGVIUjFjbVV1ZDNKaGNGUXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNTNjbUZ3VkRzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdWQzSmhjRlFnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbmR5WVhCVUxpSXBMQ0IwYUdsekxuUmxlSFIxY21VdWQzSmhjRlFnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J0WVdkR2FXeDBaWEk2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbTFoWjBacGJIUmxjaUJwY3lCdWIzY2dMblJsZUhSMWNtVXViV0ZuUm1sc2RHVnlMaUlwTENCMGFHbHpMblJsZUhSMWNtVXViV0ZuUm1sc2RHVnlPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzV0WVdkR2FXeDBaWElnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbTFoWjBacGJIUmxjaTRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbTFoWjBacGJIUmxjaUE5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJRzFwYmtacGJIUmxjam9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXViV2x1Um1sc2RHVnlJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNXRhVzVHYVd4MFpYSXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNXRhVzVHYVd4MFpYSTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbTFwYmtacGJIUmxjaUJwY3lCdWIzY2dMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlMaUlwTENCMGFHbHpMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdZVzVwYzI5MGNtOXdlVG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVZVzVwYzI5MGNtOXdlU0JwY3lCdWIzY2dMblJsZUhSMWNtVXVZVzVwYzI5MGNtOXdlUzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbUZ1YVhOdmRISnZjSGs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG1GdWFYTnZkSEp2Y0hrZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG1GdWFYTnZkSEp2Y0hrdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1aGJtbHpiM1J5YjNCNUlEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2IyWm1jMlYwT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzV2Wm1aelpYUWdhWE1nYm05M0lDNTBaWGgwZFhKbExtOW1abk5sZEM0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG05bVpuTmxkRHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1YjJabWMyVjBJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNXZabVp6WlhRdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1dlptWnpaWFFnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J5WlhCbFlYUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xuSmxjR1ZoZENCcGN5QnViM2NnTG5SbGVIUjFjbVV1Y21Wd1pXRjBMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVjbVZ3WldGME93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNXlaWEJsWVhRZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5KbGNHVmhkQzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbkpsY0dWaGRDQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHWnZjbTFoZERvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1Wm05eWJXRjBJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNW1iM0p0WVhRdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1bWIzSnRZWFE3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG1admNtMWhkQ0JwY3lCdWIzY2dMblJsZUhSMWNtVXVabTl5YldGMExpSXBMQ0IwYUdsekxuUmxlSFIxY21VdVptOXliV0YwSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnZEhsd1pUb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdWRIbHdaU0JwY3lCdWIzY2dMblJsZUhSMWNtVXVkSGx3WlM0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG5SNWNHVTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMblI1Y0dVZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5SNWNHVXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNTBlWEJsSUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWjJWdVpYSmhkR1ZOYVhCdFlYQnpPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNW5aVzVsY21GMFpVMXBjRzFoY0hNZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG1kbGJtVnlZWFJsVFdsd2JXRndjeTRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbWRsYm1WeVlYUmxUV2x3YldGd2N6c0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1blpXNWxjbUYwWlUxcGNHMWhjSE11SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlNrN0NscGhMbkJ5YjNSdmRIbHdaUzVzYjJGa0lEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dMbXh2WVdRZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUZSSVVrVkZMa0YxWkdsdlRHOWhaR1Z5SUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUd0b0tDa3ViRzloWkNoekxDQm1kVzVqZEdsdmJpaHVLU0I3Q2lBZ0lDQWdJQ0FnWlM1elpYUkNkV1ptWlhJb2JpazdDaUFnSUNCOUtTd2dkR2hwY3pzS2ZUc0tjV2d1Y0hKdmRHOTBlWEJsTG1kbGRFUmhkR0VnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtGMVpHbHZRVzVoYkhselpYSTZJQzVuWlhSRVlYUmhLQ2tnYVhNZ2JtOTNJQzVuWlhSR2NtVnhkV1Z1WTNsRVlYUmhLQ2t1SWlrc0lIUm9hWE11WjJWMFJuSmxjWFZsYm1ONVJHRjBZU2dwT3dwOU93b2tjeTV3Y205MGIzUjVjR1V1ZFhCa1lYUmxRM1ZpWlUxaGNDQTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOMVltVkRZVzFsY21FNklDNTFjR1JoZEdWRGRXSmxUV0Z3S0NrZ2FYTWdibTkzSUM1MWNHUmhkR1VvS1M0aUtTd2dkR2hwY3k1MWNHUmhkR1VvY3l3Z1pTazdDbjA3Q2lSekxuQnliM1J2ZEhsd1pTNWpiR1ZoY2lBOUlHWjFibU4wYVc5dUtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrTjFZbVZEWVcxbGNtRTZJQzVqYkdWaGNpZ3BJR2x6SUc1dmR5QXVjbVZ1WkdWeVZHRnlaMlYwTG1Oc1pXRnlLQ2t1SWlrc0lIUm9hWE11Y21WdVpHVnlWR0Z5WjJWMExtTnNaV0Z5S0hNc0lHVXNJSFFzSUc0cE93cDlPd3BaYmk1amNtOXpjMDl5YVdkcGJpQTlJSFp2YVdRZ01Ec0tXVzR1Ykc5aFpGUmxlSFIxY21VZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa2x0WVdkbFZYUnBiSE11Ykc5aFpGUmxlSFIxY21VZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUZSSVVrVkZMbFJsZUhSMWNtVk1iMkZrWlhJb0tTQnBibk4wWldGa0xpSXBPd29nSUNBZ2JHVjBJR2tnUFNCdVpYY2dRbWc3Q2lBZ0lDQnBMbk5sZEVOeWIzTnpUM0pwWjJsdUtIUm9hWE11WTNKdmMzTlBjbWxuYVc0cE93b2dJQ0FnYkdWMElISWdQU0JwTG14dllXUW9jeXdnZEN3Z2RtOXBaQ0F3TENCdUtUc0tJQ0FnSUhKbGRIVnliaUJsSUNZbUlDaHlMbTFoY0hCcGJtY2dQU0JsS1N3Z2Nqc0tmVHNLV1c0dWJHOWhaRlJsZUhSMWNtVkRkV0psSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUpiV0ZuWlZWMGFXeHpMbXh2WVdSVVpYaDBkWEpsUTNWaVpTQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ1ZFaFNSVVV1UTNWaVpWUmxlSFIxY21WTWIyRmtaWElvS1NCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnYkdWMElHa2dQU0J1WlhjZ1JtZzdDaUFnSUNCcExuTmxkRU55YjNOelQzSnBaMmx1S0hSb2FYTXVZM0p2YzNOUGNtbG5hVzRwT3dvZ0lDQWdiR1YwSUhJZ1BTQnBMbXh2WVdRb2N5d2dkQ3dnZG05cFpDQXdMQ0J1S1RzS0lDQWdJSEpsZEhWeWJpQmxJQ1ltSUNoeUxtMWhjSEJwYm1jZ1BTQmxLU3dnY2pzS2ZUc0tXVzR1Ykc5aFpFTnZiWEJ5WlhOelpXUlVaWGgwZFhKbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVKYldGblpWVjBhV3h6TG14dllXUkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVkVoU1JVVXVSRVJUVEc5aFpHVnlJR2x1YzNSbFlXUXVJaWs3Q24wN0NsbHVMbXh2WVdSRGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlVOMVltVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtsdFlXZGxWWFJwYkhNdWJHOWhaRU52YlhCeVpYTnpaV1JVWlhoMGRYSmxRM1ZpWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdWRWhTUlVVdVJFUlRURzloWkdWeUlHbHVjM1JsWVdRdUlpazdDbjA3Q21aMWJtTjBhVzl1SUVzd0tDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVRMkZ1ZG1GelVtVnVaR1Z5WlhJZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkNJcE93cDlDbVoxYm1OMGFXOXVJR1YyS0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVNsTlBUa3h2WVdSbGNpQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5Q25aaGNpQjBkaUE5SUhzS0lDQWdJR055WldGMFpVMTFiSFJwVFdGMFpYSnBZV3hQWW1wbFkzUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsTmpaVzVsVlhScGJITWdhR0Z6SUdKbFpXNGdiVzkyWldRZ2RHOGdMMlY0WVcxd2JHVnpMMnB6YlM5MWRHbHNjeTlUWTJWdVpWVjBhV3h6TG1weklpazdDaUFnSUNCOUxBb2dJQ0FnWkdWMFlXTm9PaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVRZMlZ1WlZWMGFXeHpJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzlsZUdGdGNHeGxjeTlxYzIwdmRYUnBiSE12VTJObGJtVlZkR2xzY3k1cWN5SXBPd29nSUNBZ2ZTd0tJQ0FnSUdGMGRHRmphRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVMk5sYm1WVmRHbHNjeUJvWVhNZ1ltVmxiaUJ0YjNabFpDQjBieUF2WlhoaGJYQnNaWE12YW5OdEwzVjBhV3h6TDFOalpXNWxWWFJwYkhNdWFuTWlLVHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnYm5Zb0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1aVzV6Um14aGNtVWdhR0Z6SUdKbFpXNGdiVzkyWldRZ2RHOGdMMlY0WVcxd2JHVnpMMnB6YlM5dlltcGxZM1J6TDB4bGJuTm1iR0Z5WlM1cWN5SXBPd3A5Q21aMWJtTjBhVzl1SUdsMktDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQmhjbUZ0WlhSeWFXTkhaVzl0WlhSeWVTQm9ZWE1nWW1WbGJpQnRiM1psWkNCMGJ5QXZaWGhoYlhCc1pYTXZhbk50TDJkbGIyMWxkSEpwWlhNdlVHRnlZVzFsZEhKcFkwZGxiMjFsZEhKNUxtcHpJaWtzSUc1bGR5QmZaVHNLZlFwbWRXNWpkR2x2YmlCeWRpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVVaWGgwUjJWdmJXVjBjbmtnYUdGeklHSmxaVzRnYlc5MlpXUWdkRzhnTDJWNFlXMXdiR1Z6TDJwemJTOW5aVzl0WlhSeWFXVnpMMVJsZUhSSFpXOXRaWFJ5ZVM1cWN5SXBMQ0J1WlhjZ1gyVTdDbjBLWm5WdVkzUnBiMjRnYzNZb0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUdiMjUwVEc5aFpHVnlJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzlsZUdGdGNHeGxjeTlxYzIwdmJHOWhaR1Z5Y3k5R2IyNTBURzloWkdWeUxtcHpJaWs3Q24wS1puVnVZM1JwYjI0Z2IzWW9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVHYjI1MElHaGhjeUJpWldWdUlHMXZkbVZrSUhSdklDOWxlR0Z0Y0d4bGN5OXFjMjB2Ykc5aFpHVnljeTlHYjI1MFRHOWhaR1Z5TG1weklpazdDbjBLWm5WdVkzUnBiMjRnWVhZb0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUpiVzFsWkdsaGRHVlNaVzVrWlhKUFltcGxZM1FnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZRcDBlWEJsYjJZZ1gxOVVTRkpGUlY5RVJWWlVUMDlNVTE5ZklEd2dJblVpSUNZbUlGOWZWRWhTUlVWZlJFVldWRTlQVEZOZlh5NWthWE53WVhSamFFVjJaVzUwS0c1bGR5QkRkWE4wYjIxRmRtVnVkQ2dpY21WbmFYTjBaWElpTENCN0NpQWdJQ0JrWlhSaGFXdzZJSHNLSUNBZ0lDQWdJQ0J5WlhacGMybHZiam9nWTJFS0lDQWdJSDBLZlNrcE93cDBlWEJsYjJZZ2QybHVaRzkzSUR3Z0luVWlJQ1ltSUNoM2FXNWtiM2N1WDE5VVNGSkZSVjlmSUQ4Z1kyOXVjMjlzWlM1M1lYSnVLQ0pYUVZKT1NVNUhPaUJOZFd4MGFYQnNaU0JwYm5OMFlXNWpaWE1nYjJZZ1ZHaHlaV1V1YW5NZ1ltVnBibWNnYVcxd2IzSjBaV1F1SWlrZ09pQjNhVzVrYjNjdVgxOVVTRkpGUlY5ZklEMGdZMkVwT3dwamIyNXpkQ0J0YjJRZ1BTQjdDaUFnSUNCQlEwVlRSbWxzYldsalZHOXVaVTFoY0hCcGJtYzZJRlYxTEFvZ0lDQWdRV1JrUlhGMVlYUnBiMjQ2SUY5cExBb2dJQ0FnUVdSa1QzQmxjbUYwYVc5dU9pQkdkU3dLSUNBZ0lFRmtaR2wwYVhabFFXNXBiV0YwYVc5dVFteGxibVJOYjJSbE9pQnhZeXdLSUNBZ0lFRmtaR2wwYVhabFFteGxibVJwYm1jNklHNXNMQW9nSUNBZ1FXeHdhR0ZHYjNKdFlYUTZJRmgxTEFvZ0lDQWdRV3gzWVhselJHVndkR2c2SUVGMUxBb2dJQ0FnUVd4M1lYbHpVM1JsYm1OcGJFWjFibU02SUZWa0xBb2dJQ0FnUVcxaWFXVnVkRXhwWjJoME9pQnhZU3dLSUNBZ0lFRnRZbWxsYm5STWFXZG9kRkJ5YjJKbE9pQldhQ3dLSUNBZ0lFRnVhVzFoZEdsdmJrTnNhWEE2SUV4eUxBb2dJQ0FnUVc1cGJXRjBhVzl1VEc5aFpHVnlPaUJqZVN3S0lDQWdJRUZ1YVcxaGRHbHZiazFwZUdWeU9pQWthQ3dLSUNBZ0lFRnVhVzFoZEdsdmJrOWlhbVZqZEVkeWIzVndPaUJaYUN3S0lDQWdJRUZ1YVcxaGRHbHZibFYwYVd4ek9pQmFaU3dLSUNBZ0lFRnlZME4xY25abE9pQk5ZU3dLSUNBZ0lFRnljbUY1UTJGdFpYSmhPaUJuWVN3S0lDQWdJRUZ5Y205M1NHVnNjR1Z5T2lCVmVTd0tJQ0FnSUVGMVpHbHZPaUJhWVN3S0lDQWdJRUYxWkdsdlFXNWhiSGx6WlhJNklIRm9MQW9nSUNBZ1FYVmthVzlEYjI1MFpYaDBPaUJJYUN3S0lDQWdJRUYxWkdsdlRHbHpkR1Z1WlhJNklHMTVMQW9nSUNBZ1FYVmthVzlNYjJGa1pYSTZJR3RvTEFvZ0lDQWdRWGhsYzBobGJIQmxjam9nY25Vc0NpQWdJQ0JCZUdselNHVnNjR1Z5T2lCWU1Dd0tJQ0FnSUVKaFkydFRhV1JsT2lCcGRDd0tJQ0FnSUVKaGMybGpSR1Z3ZEdoUVlXTnJhVzVuT2lCT1pDd0tJQ0FnSUVKaGMybGpVMmhoWkc5M1RXRndPaUJ4ZVN3S0lDQWdJRUpwYm1GeWVWUmxlSFIxY21WTWIyRmtaWEk2SUdvd0xBb2dJQ0FnUW05dVpUb2diMjhzQ2lBZ0lDQkNiMjlzWldGdVMyVjVabkpoYldWVWNtRmphem9nVVc0c0NpQWdJQ0JDYjNWdVpHbHVaMEp2ZUVobGJIQmxjam9nU2pBc0NpQWdJQ0JDYjNneU9pQnhhU3dLSUNBZ0lFSnZlRE02SUV4MExBb2dJQ0FnUW05NE0waGxiSEJsY2pvZ1Fua3NDaUFnSUNCQ2IzaENkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2QyNHNDaUFnSUNCQ2IzaEhaVzl0WlhSeWVUb2dkMjRzQ2lBZ0lDQkNiM2hJWld4d1pYSTZJR2wxTEFvZ0lDQWdRblZtWm1WeVFYUjBjbWxpZFhSbE9pQlZaU3dLSUNBZ0lFSjFabVpsY2tkbGIyMWxkSEo1T2lCZlpTd0tJQ0FnSUVKMVptWmxja2RsYjIxbGRISjVURzloWkdWeU9pQlZhQ3dLSUNBZ0lFSjVkR1ZVZVhCbE9pQklkU3dLSUNBZ0lFTmhZMmhsT2lCT2FTd0tJQ0FnSUVOaGJXVnlZVG9nU1hJc0NpQWdJQ0JEWVcxbGNtRklaV3h3WlhJNklFNTVMQW9nSUNBZ1EyRnVkbUZ6VW1WdVpHVnlaWEk2SUVzd0xBb2dJQ0FnUTJGdWRtRnpWR1Y0ZEhWeVpUb2dWR2dzQ2lBZ0lDQkRZWFJ0ZFd4c1VtOXRRM1Z5ZG1Vek9pQjNZU3dLSUNBZ0lFTnBibVZ2YmxSdmJtVk5ZWEJ3YVc1bk9pQjZkU3dLSUNBZ0lFTnBjbU5zWlVKMVptWmxja2RsYjIxbGRISjVPaUJtY2l3S0lDQWdJRU5wY21Oc1pVZGxiMjFsZEhKNU9pQm1jaXdLSUNBZ0lFTnNZVzF3Vkc5RlpHZGxWM0poY0hCcGJtYzZJSFowTEFvZ0lDQWdRMnh2WTJzNklGZG9MQW9nSUNBZ1EyOXNiM0k2SUdGbExBb2dJQ0FnUTI5c2IzSkxaWGxtY21GdFpWUnlZV05yT2lCQ1lTd0tJQ0FnSUVOdmJYQnlaWE56WldSVVpYaDBkWEpsT2lCMllTd0tJQ0FnSUVOdmJYQnlaWE56WldSVVpYaDBkWEpsVEc5aFpHVnlPaUJvZVN3S0lDQWdJRU52Ym1WQ2RXWm1aWEpIWlc5dFpYUnllVG9nY0hJc0NpQWdJQ0JEYjI1bFIyVnZiV1YwY25rNklIQnlMQW9nSUNBZ1EzVmlaVU5oYldWeVlUb2dKSE1zQ2lBZ0lDQkRkV0psVW1WbWJHVmpkR2x2YmsxaGNIQnBibWM2SUVKcExBb2dJQ0FnUTNWaVpWSmxabkpoWTNScGIyNU5ZWEJ3YVc1bk9pQjZhU3dLSUNBZ0lFTjFZbVZVWlhoMGRYSmxPaUJyYVN3S0lDQWdJRU4xWW1WVVpYaDBkWEpsVEc5aFpHVnlPaUJHYUN3S0lDQWdJRU4xWW1WVlZsSmxabXhsWTNScGIyNU5ZWEJ3YVc1bk9pQlFjaXdLSUNBZ0lFTjFZbVZWVmxKbFpuSmhZM1JwYjI1TllYQndhVzVuT2lCWGN5d0tJQ0FnSUVOMVltbGpRbVY2YVdWeVEzVnlkbVU2SUd4dkxBb2dJQ0FnUTNWaWFXTkNaWHBwWlhKRGRYSjJaVE02SUZOaExBb2dJQ0FnUTNWaWFXTkpiblJsY25CdmJHRnVkRG9nVUdnc0NpQWdJQ0JEZFd4c1JtRmpaVUpoWTJzNklIUnNMQW9nSUNBZ1EzVnNiRVpoWTJWR2NtOXVkRG9nWkhVc0NpQWdJQ0JEZFd4c1JtRmpaVVp5YjI1MFFtRmphem9nVjNrc0NpQWdJQ0JEZFd4c1JtRmpaVTV2Ym1VNklIVjFMQW9nSUNBZ1EzVnlkbVU2SUVOMExBb2dJQ0FnUTNWeWRtVlFZWFJvT2lCQmFDd0tJQ0FnSUVOMWMzUnZiVUpzWlc1a2FXNW5PaUJ3ZFN3S0lDQWdJRU4xYzNSdmJWUnZibVZOWVhCd2FXNW5PaUJQZFN3S0lDQWdJRU41YkdsdVpHVnlRblZtWm1WeVIyVnZiV1YwY25rNklFcHVMQW9nSUNBZ1EzbHNhVzVrWlhKSFpXOXRaWFJ5ZVRvZ1NtNHNDaUFnSUNCRGVXeHBibVJ5YVdOaGJEb2dRM2tzQ2lBZ0lDQkVZWFJoVkdWNGRIVnlaVG9nY1c0c0NpQWdJQ0JFWVhSaFZHVjRkSFZ5WlRKRVFYSnlZWGs2SUZGekxBb2dJQ0FnUkdGMFlWUmxlSFIxY21VelJEb2diV0VzQ2lBZ0lDQkVZWFJoVkdWNGRIVnlaVXh2WVdSbGNqb2dUbWdzQ2lBZ0lDQkVZWFJoVlhScGJITTZJR3Q1TEFvZ0lDQWdSR1ZqY21WdFpXNTBVM1JsYm1OcGJFOXdPaUJ1TUN3S0lDQWdJRVJsWTNKbGJXVnVkRmR5WVhCVGRHVnVZMmxzVDNBNklISXdMQW9nSUNBZ1JHVm1ZWFZzZEV4dllXUnBibWROWVc1aFoyVnlPaUJzZVN3S0lDQWdJRVJsY0hSb1JtOXliV0YwT2lCV2Jpd0tJQ0FnSUVSbGNIUm9VM1JsYm1OcGJFWnZjbTFoZERvZ1RHa3NDaUFnSUNCRVpYQjBhRlJsZUhSMWNtVTZJR3R6TEFvZ0lDQWdSR2x5WldOMGFXOXVZV3hNYVdkb2REb2dWMkVzQ2lBZ0lDQkVhWEpsWTNScGIyNWhiRXhwWjJoMFNHVnNjR1Z5T2lCR2VTd0tJQ0FnSUVScGMyTnlaWFJsU1c1MFpYSndiMnhoYm5RNklFbG9MQW9nSUNBZ1JHOWtaV05oYUdWa2NtOXVRblZtWm1WeVIyVnZiV1YwY25rNklHMXlMQW9nSUNBZ1JHOWtaV05oYUdWa2NtOXVSMlZ2YldWMGNuazZJRzF5TEFvZ0lDQWdSRzkxWW14bFUybGtaVG9nUTJrc0NpQWdJQ0JFYzNSQmJIQm9ZVVpoWTNSdmNqb2dUWFVzQ2lBZ0lDQkVjM1JEYjJ4dmNrWmhZM1J2Y2pvZ2QzVXNDaUFnSUNCRWVXNWhiV2xqUW5WbVptVnlRWFIwY21saWRYUmxPaUJDTUN3S0lDQWdJRVI1Ym1GdGFXTkRiM0I1VlhOaFoyVTZJSGt3TEFvZ0lDQWdSSGx1WVcxcFkwUnlZWGRWYzJGblpUb2dkWElzQ2lBZ0lDQkVlVzVoYldsalVtVmhaRlZ6WVdkbE9pQnRNQ3dLSUNBZ0lFVmtaMlZ6UjJWdmJXVjBjbms2SUY5aExBb2dJQ0FnUldSblpYTklaV3h3WlhJNklGa3dMQW9nSUNBZ1JXeHNhWEJ6WlVOMWNuWmxPaUJWY2l3S0lDQWdJRVZ4ZFdGc1JHVndkR2c2SUV4MUxBb2dJQ0FnUlhGMVlXeFRkR1Z1WTJsc1JuVnVZem9nYkRBc0NpQWdJQ0JGY1hWcGNtVmpkR0Z1WjNWc1lYSlNaV1pzWldOMGFXOXVUV0Z3Y0dsdVp6b2dSSE1zQ2lBZ0lDQkZjWFZwY21WamRHRnVaM1ZzWVhKU1pXWnlZV04wYVc5dVRXRndjR2x1WnpvZ1JuTXNDaUFnSUNCRmRXeGxjam9nV200c0NpQWdJQ0JGZG1WdWRFUnBjM0JoZEdOb1pYSTZJRVZ1TEFvZ0lDQWdSWGgwY25Wa1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCc2Jpd0tJQ0FnSUVWNGRISjFaR1ZIWlc5dFpYUnllVG9nYkc0c0NpQWdJQ0JHWVdObFEyOXNiM0p6T2lCVU1Dd0tJQ0FnSUVacGJHVk1iMkZrWlhJNklGbDBMQW9nSUNBZ1JteGhkRk5vWVdScGJtYzZJR3RqTEFvZ0lDQWdSbXh2WVhReE5rSjFabVpsY2tGMGRISnBZblYwWlRvZ2JtZ3NDaUFnSUNCR2JHOWhkRE15UVhSMGNtbGlkWFJsT2lCWE1Dd0tJQ0FnSUVac2IyRjBNekpDZFdabVpYSkJkSFJ5YVdKMWRHVTZJR1JsTEFvZ0lDQWdSbXh2WVhRMk5FRjBkSEpwWW5WMFpUb2djVEFzQ2lBZ0lDQkdiRzloZERZMFFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCcGFDd0tJQ0FnSUVac2IyRjBWSGx3WlRvZ2JtNHNDaUFnSUNCR2IyYzZJRUp5TEFvZ0lDQWdSbTluUlhod01qb2dUbklzQ2lBZ0lDQkdiMjUwT2lCdmRpd0tJQ0FnSUVadmJuUk1iMkZrWlhJNklITjJMQW9nSUNBZ1JuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE9pQlRhQ3dLSUNBZ0lFWnliMjUwVTJsa1pUb2dRV2tzQ2lBZ0lDQkdjblZ6ZEhWdE9pQkVjaXdLSUNBZ0lFZE1RblZtWm1WeVFYUjBjbWxpZFhSbE9pQlJhQ3dLSUNBZ0lFZE1VMHd4T2lCZk1Dd0tJQ0FnSUVkTVUwd3pPaUI0YkN3S0lDQWdJRWR5WldGMFpYSkVaWEIwYURvZ1VIVXNDaUFnSUNCSGNtVmhkR1Z5UlhGMVlXeEVaWEIwYURvZ1VuVXNDaUFnSUNCSGNtVmhkR1Z5UlhGMVlXeFRkR1Z1WTJsc1JuVnVZem9nWkRBc0NpQWdJQ0JIY21WaGRHVnlVM1JsYm1OcGJFWjFibU02SUdnd0xBb2dJQ0FnUjNKcFpFaGxiSEJsY2pvZ2JuVXNDaUFnSUNCSGNtOTFjRG9nU0c0c0NpQWdJQ0JJWVd4bVJteHZZWFJVZVhCbE9pQnJiaXdLSUNBZ0lFaGxiV2x6Y0dobGNtVk1hV2RvZERvZ1ZXRXNDaUFnSUNCSVpXMXBjM0JvWlhKbFRHbG5hSFJJWld4d1pYSTZJRWw1TEFvZ0lDQWdTR1Z0YVhOd2FHVnlaVXhwWjJoMFVISnZZbVU2SUVkb0xBb2dJQ0FnU1dOdmMyRm9aV1J5YjI1Q2RXWm1aWEpIWlc5dFpYUnllVG9nWDNJc0NpQWdJQ0JKWTI5ellXaGxaSEp2YmtkbGIyMWxkSEo1T2lCZmNpd0tJQ0FnSUVsdFlXZGxRbWwwYldGd1RHOWhaR1Z5T2lCUGFDd0tJQ0FnSUVsdFlXZGxURzloWkdWeU9pQlNjaXdLSUNBZ0lFbHRZV2RsVlhScGJITTZJRmx1TEFvZ0lDQWdTVzF0WldScFlYUmxVbVZ1WkdWeVQySnFaV04wT2lCaGRpd0tJQ0FnSUVsdVkzSmxiV1Z1ZEZOMFpXNWphV3hQY0RvZ2REQXNDaUFnSUNCSmJtTnlaVzFsYm5SWGNtRndVM1JsYm1OcGJFOXdPaUJwTUN3S0lDQWdJRWx1YzNSaGJtTmxaRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dXRzRzQ2lBZ0lDQkpibk4wWVc1alpXUkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1dXRXNDaUFnSUNCSmJuTjBZVzVqWldSSmJuUmxjbXhsWVhabFpFSjFabVpsY2pvZ2FtZ3NDaUFnSUNCSmJuTjBZVzVqWldSTlpYTm9PaUI0WVN3S0lDQWdJRWx1ZERFMlFYUjBjbWxpZFhSbE9pQklNQ3dLSUNBZ0lFbHVkREUyUW5WbVptVnlRWFIwY21saWRYUmxPaUJsYUN3S0lDQWdJRWx1ZERNeVFYUjBjbWxpZFhSbE9pQkhNQ3dLSUNBZ0lFbHVkRE15UW5WbVptVnlRWFIwY21saWRYUmxPaUIwYUN3S0lDQWdJRWx1ZERoQmRIUnlhV0oxZEdVNklIb3dMQW9nSUNBZ1NXNTBPRUoxWm1abGNrRjBkSEpwWW5WMFpUb2dhbU1zQ2lBZ0lDQkpiblJVZVhCbE9pQkhkU3dLSUNBZ0lFbHVkR1Z5YkdWaGRtVmtRblZtWm1WeU9pQWtiaXdLSUNBZ0lFbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbE9pQlRiaXdLSUNBZ0lFbHVkR1Z5Y0c5c1lXNTBPaUJqYml3S0lDQWdJRWx1ZEdWeWNHOXNZWFJsUkdselkzSmxkR1U2SUhwekxBb2dJQ0FnU1c1MFpYSndiMnhoZEdWTWFXNWxZWEk2SUZWekxBb2dJQ0FnU1c1MFpYSndiMnhoZEdWVGJXOXZkR2c2SUhsdkxBb2dJQ0FnU1c1MlpYSjBVM1JsYm1OcGJFOXdPaUJ6TUN3S0lDQWdJRXBUVDA1TWIyRmtaWEk2SUdWMkxBb2dJQ0FnUzJWbGNGTjBaVzVqYVd4UGNEb2dkbThzQ2lBZ0lDQkxaWGxtY21GdFpWUnlZV05yT2lCNmRDd0tJQ0FnSUV4UFJEb2dZbWdzQ2lBZ0lDQk1ZWFJvWlVKMVptWmxja2RsYjIxbGRISjVPaUJOY2l3S0lDQWdJRXhoZEdobFIyVnZiV1YwY25rNklFMXlMQW9nSUNBZ1RHRjVaWEp6T2lCS2N5d0tJQ0FnSUV4bGJuTkdiR0Z5WlRvZ2JuWXNDaUFnSUNCTVpYTnpSR1Z3ZEdnNklFTjFMQW9nSUNBZ1RHVnpjMFZ4ZFdGc1JHVndkR2c2SUdWaExBb2dJQ0FnVEdWemMwVnhkV0ZzVTNSbGJtTnBiRVoxYm1NNklHTXdMQW9nSUNBZ1RHVnpjMU4wWlc1amFXeEdkVzVqT2lCaE1Dd0tJQ0FnSUV4cFoyaDBPaUJDZEN3S0lDQWdJRXhwWjJoMFVISnZZbVU2SUVoeUxBb2dJQ0FnVEdsdVpUb2diMjRzQ2lBZ0lDQk1hVzVsTXpvZ1MyZ3NDaUFnSUNCTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkRvZ1puUXNDaUFnSUNCTWFXNWxRM1Z5ZG1VNklFOXlMQW9nSUNBZ1RHbHVaVU4xY25abE16b2dSV2dzQ2lBZ0lDQk1hVzVsUkdGemFHVmtUV0YwWlhKcFlXdzZJRVpoTEFvZ0lDQWdUR2x1WlV4dmIzQTZJSGxoTEFvZ0lDQWdUR2x1WlZCcFpXTmxjem9nZHpBc0NpQWdJQ0JNYVc1bFUyVm5iV1Z1ZEhNNklIZDBMQW9nSUNBZ1RHbHVaVk4wY21sd09pQmlNQ3dLSUNBZ0lFeHBibVZoY2tWdVkyOWthVzVuT2lCT2RDd0tJQ0FnSUV4cGJtVmhja1pwYkhSbGNqb2dkSFFzQ2lBZ0lDQk1hVzVsWVhKSmJuUmxjbkJ2YkdGdWREb2dUbUVzQ2lBZ0lDQk1hVzVsWVhKTmFYQk5ZWEJNYVc1bFlYSkdhV3gwWlhJNklDUjVMQW9nSUNBZ1RHbHVaV0Z5VFdsd1RXRndUbVZoY21WemRFWnBiSFJsY2pvZ1dua3NDaUFnSUNCTWFXNWxZWEpOYVhCdFlYQk1hVzVsWVhKR2FXeDBaWEk2SUZWcExBb2dJQ0FnVEdsdVpXRnlUV2x3YldGd1RtVmhjbVZ6ZEVacGJIUmxjam9nVjJNc0NpQWdJQ0JNYVc1bFlYSlViMjVsVFdGd2NHbHVaem9nVG5Vc0NpQWdJQ0JNYjJGa1pYSTZJR0owTEFvZ0lDQWdURzloWkdWeVZYUnBiSE02SUVkekxBb2dJQ0FnVEc5aFpHbHVaMDFoYm1GblpYSTZJSHBoTEFvZ0lDQWdURzl2Y0U5dVkyVTZJRkJrTEFvZ0lDQWdURzl2Y0ZCcGJtZFFiMjVuT2lCRVpDd0tJQ0FnSUV4dmIzQlNaWEJsWVhRNklFbGtMQW9nSUNBZ1RIVnRhVzVoYm1ObFFXeHdhR0ZHYjNKdFlYUTZJRmwxTEFvZ0lDQWdUSFZ0YVc1aGJtTmxSbTl5YldGME9pQktkU3dLSUNBZ0lFMVBWVk5GT2lCSGVTd0tJQ0FnSUUxaGRHVnlhV0ZzT2lCa2RDd0tJQ0FnSUUxaGRHVnlhV0ZzVEc5aFpHVnlPaUI2YUN3S0lDQWdJRTFoZEdnNklFMHdMQW9nSUNBZ1RXRjBhRlYwYVd4ek9pQk5NQ3dLSUNBZ0lFMWhkSEpwZURNNklHeDBMQW9nSUNBZ1RXRjBjbWw0TkRvZ2NHVXNDaUFnSUNCTllYaEZjWFZoZEdsdmJqb2diMndzQ2lBZ0lDQk5aWE5vT2lCemRDd0tJQ0FnSUUxbGMyaENZWE5wWTAxaGRHVnlhV0ZzT2lCb2Jpd0tJQ0FnSUUxbGMyaEVaWEIwYUUxaGRHVnlhV0ZzT2lCbGJ5d0tJQ0FnSUUxbGMyaEVhWE4wWVc1alpVMWhkR1Z5YVdGc09pQjBieXdLSUNBZ0lFMWxjMmhHWVdObFRXRjBaWEpwWVd3NklFRXdMQW9nSUNBZ1RXVnphRXhoYldKbGNuUk5ZWFJsY21saGJEb2dTV0VzQ2lBZ0lDQk5aWE5vVFdGMFkyRndUV0YwWlhKcFlXdzZJRVJoTEFvZ0lDQWdUV1Z6YUU1dmNtMWhiRTFoZEdWeWFXRnNPaUJRWVN3S0lDQWdJRTFsYzJoUWFHOXVaMDFoZEdWeWFXRnNPaUJNWVN3S0lDQWdJRTFsYzJoUWFIbHphV05oYkUxaGRHVnlhV0ZzT2lCRFlTd0tJQ0FnSUUxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc09pQndieXdLSUNBZ0lFMWxjMmhVYjI5dVRXRjBaWEpwWVd3NklGSmhMQW9nSUNBZ1RXbHVSWEYxWVhScGIyNDZJSE5zTEFvZ0lDQWdUV2x5Y205eVpXUlNaWEJsWVhSWGNtRndjR2x1WnpvZ1FuTXNDaUFnSUNCTmFYaFBjR1Z5WVhScGIyNDZJRVIxTEFvZ0lDQWdUWFZzZEdsTllYUmxjbWxoYkRvZ1F6QXNDaUFnSUNCTmRXeDBhWEJzZVVKc1pXNWthVzVuT2lCeWJDd0tJQ0FnSUUxMWJIUnBjR3g1VDNCbGNtRjBhVzl1T2lCV2N5d0tJQ0FnSUU1bFlYSmxjM1JHYVd4MFpYSTZJSEowTEFvZ0lDQWdUbVZoY21WemRFMXBjRTFoY0V4cGJtVmhja1pwYkhSbGNqb2dXWGtzQ2lBZ0lDQk9aV0Z5WlhOMFRXbHdUV0Z3VG1WaGNtVnpkRVpwYkhSbGNqb2dTbmtzQ2lBZ0lDQk9aV0Z5WlhOMFRXbHdiV0Z3VEdsdVpXRnlSbWxzZEdWeU9pQnVZU3dLSUNBZ0lFNWxZWEpsYzNSTmFYQnRZWEJPWldGeVpYTjBSbWxzZEdWeU9pQjBZU3dLSUNBZ0lFNWxkbVZ5UkdWd2RHZzZJRVYxTEFvZ0lDQWdUbVYyWlhKVGRHVnVZMmxzUm5WdVl6b2diekFzQ2lBZ0lDQk9iMEpzWlc1a2FXNW5PaUIyYml3S0lDQWdJRTV2UTI5c2IzSnpPaUJUTUN3S0lDQWdJRTV2Vkc5dVpVMWhjSEJwYm1jNklGOXVMQW9nSUNBZ1RtOXliV0ZzUVc1cGJXRjBhVzl1UW14bGJtUk5iMlJsT2lCMVlTd0tJQ0FnSUU1dmNtMWhiRUpzWlc1a2FXNW5PaUJ6Y2l3S0lDQWdJRTV2ZEVWeGRXRnNSR1Z3ZEdnNklFbDFMQW9nSUNBZ1RtOTBSWEYxWVd4VGRHVnVZMmxzUm5WdVl6b2dkVEFzQ2lBZ0lDQk9kVzFpWlhKTFpYbG1jbUZ0WlZSeVlXTnJPaUJCY2l3S0lDQWdJRTlpYW1WamRETkVPaUJPWlN3S0lDQWdJRTlpYW1WamRFeHZZV1JsY2pvZ2RYa3NDaUFnSUNCUFltcGxZM1JUY0dGalpVNXZjbTFoYkUxaGNEb2dlbVFzQ2lBZ0lDQlBZM1JoYUdWa2NtOXVRblZtWm1WeVIyVnZiV1YwY25rNklFbHBMQW9nSUNBZ1QyTjBZV2hsWkhKdmJrZGxiMjFsZEhKNU9pQkphU3dLSUNBZ0lFOXVaVVpoWTNSdmNqb2dlWFVzQ2lBZ0lDQlBibVZOYVc1MWMwUnpkRUZzY0doaFJtRmpkRzl5T2lCaWRTd0tJQ0FnSUU5dVpVMXBiblZ6UkhOMFEyOXNiM0pHWVdOMGIzSTZJRk4xTEFvZ0lDQWdUMjVsVFdsdWRYTlRjbU5CYkhCb1lVWmhZM1J2Y2pvZ1ZtTXNDaUFnSUNCUGJtVk5hVzUxYzFOeVkwTnZiRzl5Um1GamRHOXlPaUJmZFN3S0lDQWdJRTl5ZEdodlozSmhjR2hwWTBOaGJXVnlZVG9nUm5Jc0NpQWdJQ0JRUTBaVGFHRmtiM2ROWVhBNklFaGpMQW9nSUNBZ1VFTkdVMjltZEZOb1lXUnZkMDFoY0RvZ1puVXNDaUFnSUNCUVRWSkZUVWRsYm1WeVlYUnZjam9nWVdnc0NpQWdJQ0JRWVhKaGJXVjBjbWxqUjJWdmJXVjBjbms2SUdsMkxBb2dJQ0FnVUdGeWRHbGpiR1U2SUZJd0xBb2dJQ0FnVUdGeWRHbGpiR1ZDWVhOcFkwMWhkR1Z5YVdGc09pQkVNQ3dLSUNBZ0lGQmhjblJwWTJ4bFUzbHpkR1Z0T2lCUU1Dd0tJQ0FnSUZCaGNuUnBZMnhsVTNsemRHVnRUV0YwWlhKcFlXdzZJRVl3TEFvZ0lDQWdVR0YwYURvZ1ozSXNDaUFnSUNCUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVRvZ2RYUXNDaUFnSUNCUWJHRnVaVG9nVjNRc0NpQWdJQ0JRYkdGdVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCUWFTd0tJQ0FnSUZCc1lXNWxSMlZ2YldWMGNuazZJRkJwTEFvZ0lDQWdVR3hoYm1WSVpXeHdaWEk2SUhwNUxBb2dJQ0FnVUc5cGJuUkRiRzkxWkRvZ1REQXNDaUFnSUNCUWIybHVkRU5zYjNWa1RXRjBaWEpwWVd3NklFa3dMQW9nSUNBZ1VHOXBiblJNYVdkb2REb2dSMkVzQ2lBZ0lDQlFiMmx1ZEV4cFoyaDBTR1ZzY0dWeU9pQlNlU3dLSUNBZ0lGQnZhVzUwY3pvZ2VuSXNDaUFnSUNCUWIybHVkSE5OWVhSbGNtbGhiRG9nYW00c0NpQWdJQ0JRYjJ4aGNrZHlhV1JJWld4d1pYSTZJRVI1TEFvZ0lDQWdVRzlzZVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQmhiaXdLSUNBZ0lGQnZiSGxvWldSeWIyNUhaVzl0WlhSeWVUb2dZVzRzQ2lBZ0lDQlFiM05wZEdsdmJtRnNRWFZrYVc4NklIaDVMQW9nSUNBZ1VISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCclpTd0tJQ0FnSUZCeWIzQmxjblI1VFdsNFpYSTZJRmhvTEFvZ0lDQWdVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVU2SUdOdkxBb2dJQ0FnVVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1Vek9pQm9ieXdLSUNBZ0lGRjFZWFJsY201cGIyNDZJR2QwTEFvZ0lDQWdVWFZoZEdWeWJtbHZia3RsZVdaeVlXMWxWSEpoWTJzNklGZHBMQW9nSUNBZ1VYVmhkR1Z5Ym1sdmJreHBibVZoY2tsdWRHVnljRzlzWVc1ME9pQkVhQ3dLSUNBZ0lGSkZWa2xUU1U5T09pQmpZU3dLSUNBZ0lGSkhRa0ZFWlhCMGFGQmhZMnRwYm1jNklFSmtMQW9nSUNBZ1VrZENRVVp2Y20xaGREb2dZM1FzQ2lBZ0lDQlNSMEpCU1c1MFpXZGxja1p2Y20xaGREb2daV1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZNVEI0TVRCZlJtOXliV0YwT2lCbVpDd0tJQ0FnSUZKSFFrRmZRVk5VUTE4eE1IZzFYMFp2Y20xaGREb2dhR1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZNVEI0Tmw5R2IzSnRZWFE2SUhWa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpFd2VEaGZSbTl5YldGME9pQmtaQ3dLSUNBZ0lGSkhRa0ZmUVZOVVExOHhNbmd4TUY5R2IzSnRZWFE2SUhCa0xBb2dJQ0FnVWtkQ1FWOUJVMVJEWHpFeWVERXlYMFp2Y20xaGREb2diV1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZOSGcwWDBadmNtMWhkRG9nYm1Rc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTlhnMFgwWnZjbTFoZERvZ2FXUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk5YZzFYMFp2Y20xaGREb2djbVFzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZObmcxWDBadmNtMWhkRG9nYzJRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTm5nMlgwWnZjbTFoZERvZ2IyUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk9IZzFYMFp2Y20xaGREb2dZV1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZPSGcyWDBadmNtMWhkRG9nYkdRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mT0hnNFgwWnZjbTFoZERvZ1kyUXNDaUFnSUNCU1IwSkJYMEpRVkVOZlJtOXliV0YwT2lCblpDd0tJQ0FnSUZKSFFrRmZSVlJETWw5RlFVTmZSbTl5YldGME9pQm5iQ3dLSUNBZ0lGSkhRa0ZmVUZaU1ZFTmZNa0pRVUZZeFgwWnZjbTFoZERvZ2NHd3NDaUFnSUNCU1IwSkJYMUJXVWxSRFh6UkNVRkJXTVY5R2IzSnRZWFE2SUdac0xBb2dJQ0FnVWtkQ1FWOVRNMVJEWDBSWVZERmZSbTl5YldGME9pQnNiQ3dLSUNBZ0lGSkhRa0ZmVXpOVVExOUVXRlF6WDBadmNtMWhkRG9nWTJ3c0NpQWdJQ0JTUjBKQlgxTXpWRU5mUkZoVU5WOUdiM0p0WVhRNklHaHNMQW9nSUNBZ1VrZENSbTl5YldGME9pQkhiaXdLSUNBZ0lGSkhRa2x1ZEdWblpYSkdiM0p0WVhRNklFdDFMQW9nSUNBZ1VrZENYMFZVUXpGZlJtOXliV0YwT2lCMFpDd0tJQ0FnSUZKSFFsOUZWRU15WDBadmNtMWhkRG9nYld3c0NpQWdJQ0JTUjBKZlVGWlNWRU5mTWtKUVVGWXhYMFp2Y20xaGREb2daR3dzQ2lBZ0lDQlNSMEpmVUZaU1ZFTmZORUpRVUZZeFgwWnZjbTFoZERvZ2RXd3NDaUFnSUNCU1IwSmZVek5VUTE5RVdGUXhYMFp2Y20xaGREb2dZV3dzQ2lBZ0lDQlNSMFp2Y20xaGREb2dhblVzQ2lBZ0lDQlNSMGx1ZEdWblpYSkdiM0p0WVhRNklGRjFMQW9nSUNBZ1VtRjNVMmhoWkdWeVRXRjBaWEpwWVd3NklFZHBMQW9nSUNBZ1VtRjVPaUJEYml3S0lDQWdJRkpoZVdOaGMzUmxjam9nUlhrc0NpQWdJQ0JTWldOMFFYSmxZVXhwWjJoME9pQllZU3dLSUNBZ0lGSmxaRVp2Y20xaGREb2dXblVzQ2lBZ0lDQlNaV1JKYm5SbFoyVnlSbTl5YldGME9pQWtkU3dLSUNBZ0lGSmxhVzVvWVhKa1ZHOXVaVTFoY0hCcGJtYzZJRUoxTEFvZ0lDQWdVbVZ3WldGMFYzSmhjSEJwYm1jNklFNXpMQW9nSUNBZ1VtVndiR0ZqWlZOMFpXNWphV3hQY0RvZ1pUQXNDaUFnSUNCU1pYWmxjbk5sVTNWaWRISmhZM1JGY1hWaGRHbHZiam9nWjNVc0NpQWdJQ0JTYVc1blFuVm1abVZ5UjJWdmJXVjBjbms2SUdKeUxBb2dJQ0FnVW1sdVowZGxiMjFsZEhKNU9pQmljaXdLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6RXdlREV3WDBadmNtMWhkRG9nUTJRc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTh4TUhnMVgwWnZjbTFoZERvZ1ZHUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4eE1IZzJYMFp2Y20xaGREb2dSV1FzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExOHhNSGc0WDBadmNtMWhkRG9nUVdRc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTh4TW5neE1GOUdiM0p0WVhRNklFeGtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk1USjRNVEpmUm05eWJXRjBPaUJTWkN3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYelI0TkY5R2IzSnRZWFE2SUhoa0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTlhnMFgwWnZjbTFoZERvZ2VXUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4MWVEVmZSbTl5YldGME9pQjJaQ3dLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6WjROVjlHYjNKdFlYUTZJRjlrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZObmcyWDBadmNtMWhkRG9nVFdRc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTg0ZURWZlJtOXliV0YwT2lCaVpDd0tJQ0FnSUZOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpoNE5sOUdiM0p0WVhRNklIZGtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk9IZzRYMFp2Y20xaGREb2dVMlFzQ2lBZ0lDQlRZMlZ1WlRvZ2JtOHNDaUFnSUNCVFkyVnVaVlYwYVd4ek9pQjBkaXdLSUNBZ0lGTm9ZV1JsY2tOb2RXNXJPaUJHWlN3S0lDQWdJRk5vWVdSbGNreHBZam9nY1hRc0NpQWdJQ0JUYUdGa1pYSk5ZWFJsY21saGJEb2djMjRzQ2lBZ0lDQlRhR0ZrYjNkTllYUmxjbWxoYkRvZ1FXRXNDaUFnSUNCVGFHRndaVG9nV0hRc0NpQWdJQ0JUYUdGd1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCRWFTd0tJQ0FnSUZOb1lYQmxSMlZ2YldWMGNuazZJRVJwTEFvZ0lDQWdVMmhoY0dWUVlYUm9PaUJQZVN3S0lDQWdJRk5vWVhCbFZYUnBiSE02SUVwMExBb2dJQ0FnVTJodmNuUlVlWEJsT2lCcmRTd0tJQ0FnSUZOclpXeGxkRzl1T2lCaGJ5d0tJQ0FnSUZOclpXeGxkRzl1U0dWc2NHVnlPaUJsZFN3S0lDQWdJRk5yYVc1dVpXUk5aWE5vT2lCemJ5d0tJQ0FnSUZOdGIyOTBhRk5vWVdScGJtYzZJRmg1TEFvZ0lDQWdVM0JvWlhKbE9pQkJiaXdLSUNBZ0lGTndhR1Z5WlVKMVptWmxja2RsYjIxbGRISjVPaUJHYVN3S0lDQWdJRk53YUdWeVpVZGxiMjFsZEhKNU9pQkdhU3dLSUNBZ0lGTndhR1Z5YVdOaGJEb2dRWGtzQ2lBZ0lDQlRjR2hsY21sallXeElZWEp0YjI1cFkzTXpPaUJLWVN3S0lDQWdJRk53YkdsdVpVTjFjblpsT2lCMWJ5d0tJQ0FnSUZOd2IzUk1hV2RvZERvZ1NHRXNDaUFnSUNCVGNHOTBUR2xuYUhSSVpXeHdaWEk2SUV4NUxBb2dJQ0FnVTNCeWFYUmxPaUJ5Ynl3S0lDQWdJRk53Y21sMFpVMWhkR1Z5YVdGc09pQnBieXdLSUNBZ0lGTnlZMEZzY0doaFJtRmpkRzl5T2lCSFl5d0tJQ0FnSUZOeVkwRnNjR2hoVTJGMGRYSmhkR1ZHWVdOMGIzSTZJRlIxTEFvZ0lDQWdVM0pqUTI5c2IzSkdZV04wYjNJNklIWjFMQW9nSUNBZ1UzUmhkR2xqUTI5d2VWVnpZV2RsT2lCNE1Dd0tJQ0FnSUZOMFlYUnBZMFJ5WVhkVmMyRm5aVG9nYUhJc0NpQWdJQ0JUZEdGMGFXTlNaV0ZrVlhOaFoyVTZJSEF3TEFvZ0lDQWdVM1JsY21WdlEyRnRaWEpoT2lCbWVTd0tJQ0FnSUZOMGNtVmhiVU52Y0hsVmMyRm5aVG9nZGpBc0NpQWdJQ0JUZEhKbFlXMUVjbUYzVlhOaFoyVTZJR1l3TEFvZ0lDQWdVM1J5WldGdFVtVmhaRlZ6WVdkbE9pQm5NQ3dLSUNBZ0lGTjBjbWx1WjB0bGVXWnlZVzFsVkhKaFkyczZJRXR1TEFvZ0lDQWdVM1ZpZEhKaFkzUkZjWFZoZEdsdmJqb2diWFVzQ2lBZ0lDQlRkV0owY21GamRHbDJaVUpzWlc1a2FXNW5PaUJwYkN3S0lDQWdJRlJQVlVOSU9pQldlU3dLSUNBZ0lGUmhibWRsYm5SVGNHRmpaVTV2Y20xaGJFMWhjRG9nU0drc0NpQWdJQ0JVWlhSeVlXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUIzY2l3S0lDQWdJRlJsZEhKaGFHVmtjbTl1UjJWdmJXVjBjbms2SUhkeUxBb2dJQ0FnVkdWNGRFZGxiMjFsZEhKNU9pQnlkaXdLSUNBZ0lGUmxlSFIxY21VNklHOTBMQW9nSUNBZ1ZHVjRkSFZ5WlV4dllXUmxjam9nUW1nc0NpQWdJQ0JVYjNKMWMwSjFabVpsY2tkbGIyMWxkSEo1T2lCVGNpd0tJQ0FnSUZSdmNuVnpSMlZ2YldWMGNuazZJRk55TEFvZ0lDQWdWRzl5ZFhOTGJtOTBRblZtWm1WeVIyVnZiV1YwY25rNklGUnlMQW9nSUNBZ1ZHOXlkWE5MYm05MFIyVnZiV1YwY25rNklGUnlMQW9nSUNBZ1ZISnBZVzVuYkdVNklHNTBMQW9nSUNBZ1ZISnBZVzVuYkdWR1lXNUVjbUYzVFc5a1pUb2dVWGtzQ2lBZ0lDQlVjbWxoYm1kc1pWTjBjbWx3UkhKaGQwMXZaR1U2SUdwNUxBb2dJQ0FnVkhKcFlXNW5iR1Z6UkhKaGQwMXZaR1U2SUVaa0xBb2dJQ0FnVkhWaVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCRmNpd0tJQ0FnSUZSMVltVkhaVzl0WlhSeWVUb2dSWElzQ2lBZ0lDQlZWazFoY0hCcGJtYzZJR2hoTEFvZ0lDQWdWV2x1ZERFMlFYUjBjbWxpZFhSbE9pQnJNQ3dLSUNBZ0lGVnBiblF4TmtKMVptWmxja0YwZEhKcFluVjBaVG9nV1hNc0NpQWdJQ0JWYVc1ME16SkJkSFJ5YVdKMWRHVTZJRll3TEFvZ0lDQWdWV2x1ZERNeVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCYWN5d0tJQ0FnSUZWcGJuUTRRWFIwY21saWRYUmxPaUJWTUN3S0lDQWdJRlZwYm5RNFFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCUll5d0tJQ0FnSUZWcGJuUTRRMnhoYlhCbFpFRjBkSEpwWW5WMFpUb2dUekFzQ2lBZ0lDQlZhVzUwT0VOc1lXMXdaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVTZJRXRqTEFvZ0lDQWdWVzVwWm05eWJUb2daMjhzQ2lBZ0lDQlZibWxtYjNKdGMweHBZam9nYVdVc0NpQWdJQ0JWYm1sbWIzSnRjMVYwYVd4ek9pQjFaaXdLSUNBZ0lGVnVjMmxuYm1Wa1FubDBaVlI1Y0dVNklISnVMQW9nSUNBZ1ZXNXphV2R1WldSSmJuUXlORGhVZVhCbE9pQlVhU3dLSUNBZ0lGVnVjMmxuYm1Wa1NXNTBWSGx3WlRvZ1VITXNDaUFnSUNCVmJuTnBaMjVsWkZOb2IzSjBORFEwTkZSNWNHVTZJRloxTEFvZ0lDQWdWVzV6YVdkdVpXUlRhRzl5ZERVMU5URlVlWEJsT2lCWGRTd0tJQ0FnSUZWdWMybG5ibVZrVTJodmNuUTFOalZVZVhCbE9pQnhkU3dLSUNBZ0lGVnVjMmxuYm1Wa1UyaHZjblJVZVhCbE9pQmpjaXdLSUNBZ0lGWlRUVk5vWVdSdmQwMWhjRG9nYVhJc0NpQWdJQ0JXWldOMGIzSXlPaUJZTEFvZ0lDQWdWbVZqZEc5eU16b2dUU3dLSUNBZ0lGWmxZM1J2Y2pRNklGWmxMQW9nSUNBZ1ZtVmpkRzl5UzJWNVpuSmhiV1ZVY21GamF6b2dRM0lzQ2lBZ0lDQldaWEowWlhnNklFNHdMQW9nSUNBZ1ZtVnlkR1Y0UTI5c2IzSnpPaUJGTUN3S0lDQWdJRlpwWkdWdlZHVjRkSFZ5WlRvZ2QyZ3NDaUFnSUNCWFpXSkhUREZTWlc1a1pYSmxjam9nWDJnc0NpQWdJQ0JYWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRNklHcHpMQW9nSUNBZ1YyVmlSMHhOZFd4MGFYQnNaVkpsYm1SbGNsUmhjbWRsZEhNNklGcGpMQW9nSUNBZ1YyVmlSMHhOZFd4MGFYTmhiWEJzWlZKbGJtUmxjbFJoY21kbGREb2dXSE1zQ2lBZ0lDQlhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dRWFFzQ2lBZ0lDQlhaV0pIVEZKbGJtUmxjbFJoY21kbGRFTjFZbVU2SUZFd0xBb2dJQ0FnVjJWaVIweFNaVzVrWlhKbGNqb2djV1VzQ2lBZ0lDQlhaV0pIVEZWMGFXeHpPaUJGZUN3S0lDQWdJRmRwY21WbWNtRnRaVWRsYjIxbGRISjVPaUJGWVN3S0lDQWdJRmRwY21WbWNtRnRaVWhsYkhCbGNqb2dXakFzQ2lBZ0lDQlhjbUZ3UVhKdmRXNWtSVzVrYVc1bk9pQlBjeXdLSUNBZ0lGaElVa3h2WVdSbGNqb2dKREFzQ2lBZ0lDQmFaWEp2UTNWeWRtRjBkWEpsUlc1a2FXNW5PaUJOYVN3S0lDQWdJRnBsY205R1lXTjBiM0k2SUhoMUxBb2dJQ0FnV21WeWIxTnNiM0JsUlc1a2FXNW5PaUJpYVN3S0lDQWdJRnBsY205VGRHVnVZMmxzVDNBNklFdDVMQW9nSUNBZ2MxSkhRa1Z1WTI5a2FXNW5PaUJQYVFwOU93cG1kVzVqZEdsdmJpQm5aWFJYWldKSFRFVnljbTl5VFdWemMyRm5aU2dwSUhzS0lDQWdJSEpsZEhWeWJpQm5aWFJGY25KdmNrMWxjM05oWjJVb01TazdDbjBLWm5WdVkzUnBiMjRnWjJWMFJYSnliM0pOWlhOellXZGxLSFpsY25OcGIyNHBJSHNLSUNBZ0lIWmhjaUJ1WVcxbGN5QTlJSHNLSUNBZ0lDQWdJQ0F4T2lBaVYyVmlSMHdpTEFvZ0lDQWdJQ0FnSURJNklDSlhaV0pIVENBeUlnb2dJQ0FnZlRzS0lDQWdJSFpoY2lCamIyNTBaWGgwY3lBOUlIc0tJQ0FnSUNBZ0lDQXhPaUIzYVc1a2IzY3VWMlZpUjB4U1pXNWtaWEpwYm1kRGIyNTBaWGgwTEFvZ0lDQWdJQ0FnSURJNklIZHBibVJ2ZHk1WFpXSkhUREpTWlc1a1pYSnBibWREYjI1MFpYaDBDaUFnSUNCOU93b2dJQ0FnZG1GeUlHMWxjM05oWjJVZ1BTQW5XVzkxY2lBa01DQmtiMlZ6SUc1dmRDQnpaV1Z0SUhSdklITjFjSEJ2Y25RZ1BHRWdhSEpsWmowaWFIUjBjRG92TDJ0b2NtOXViM011YjNKbkwzZGxZbWRzTDNkcGEya3ZSMlYwZEdsdVoxOWhYMWRsWWtkTVgwbHRjR3hsYldWdWRHRjBhVzl1SWlCemRIbHNaVDBpWTI5c2IzSTZJekF3TUNJK0pERThMMkUrSnpzS0lDQWdJSFpoY2lCbGJHVnRaVzUwSUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2dpWkdsMklpazdDaUFnSUNCbGJHVnRaVzUwTG1sa0lEMGdJbmRsWW1kc2JXVnpjMkZuWlNJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExtWnZiblJHWVcxcGJIa2dQU0FpYlc5dWIzTndZV05sSWpzS0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdVptOXVkRk5wZW1VZ1BTQWlNVE53ZUNJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExtWnZiblJYWldsbmFIUWdQU0FpYm05eWJXRnNJanNLSUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1ZEdWNGRFRnNhV2R1SUQwZ0ltTmxiblJsY2lJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExtSmhZMnRuY205MWJtUWdQU0FpSTJabVppSTdDaUFnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbU52Ykc5eUlEMGdJaU13TURBaU93b2dJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNXdZV1JrYVc1bklEMGdJakV1TldWdElqc0tJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVkMmxrZEdnZ1BTQWlOREF3Y0hnaU93b2dJQ0FnWld4bGJXVnVkQzV6ZEhsc1pTNXRZWEpuYVc0Z1BTQWlOV1Z0SUdGMWRHOGdNQ0k3Q2lBZ0lDQnBaaUFvWTI5dWRHVjRkSE5iZG1WeWMybHZibDBwSUhzS0lDQWdJQ0FnSUNCdFpYTnpZV2RsSUQwZ2JXVnpjMkZuWlM1eVpYQnNZV05sS0NJa01DSXNJQ0puY21Gd2FHbGpjeUJqWVhKa0lpazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUcxbGMzTmhaMlVnUFNCdFpYTnpZV2RsTG5KbGNHeGhZMlVvSWlRd0lpd2dJbUp5YjNkelpYSWlLVHNLSUNBZ0lIMEtJQ0FnSUcxbGMzTmhaMlVnUFNCdFpYTnpZV2RsTG5KbGNHeGhZMlVvSWlReElpd2dibUZ0WlhOYmRtVnljMmx2YmwwcE93b2dJQ0FnWld4bGJXVnVkQzVwYm01bGNraFVUVXdnUFNCdFpYTnpZV2RsT3dvZ0lDQWdjbVYwZFhKdUlHVnNaVzFsYm5RN0NuMEtZMjl1YzNRZ2NHbDRaV3hTWVhScGJ5QTlJSGRwYm1SdmR5NWtaWFpwWTJWUWFYaGxiRkpoZEdsdklIeDhJREV1TURzS1puVnVZM1JwYjI0Z1pYWmxiblF5YzJObGJtVmZjR2w0Wld3b2MyTmxibVVzSUdWMlpXNTBLU0I3Q2lBZ0lDQmpiMjV6ZENCN0lHTmhiblpoY3lBZ2ZTQTlJSE5qWlc1bExuTmpjbVZsYmpzS0lDQWdJR052Ym5OMElISmxZM1FnUFNCallXNTJZWE11WjJWMFFtOTFibVJwYm1kRGJHbGxiblJTWldOMEtDazdDaUFnSUNCamIyNXpkQ0I0SUQwZ0tHVjJaVzUwTG1Oc2FXVnVkRmdnTFNCeVpXTjBMbXhsWm5RcElDb2djR2w0Wld4U1lYUnBienNLSUNBZ0lHTnZibk4wSUhrZ1BTQW9jbVZqZEM1b1pXbG5hSFFnTFNBb1pYWmxiblF1WTJ4cFpXNTBXU0F0SUhKbFkzUXVkRzl3S1NrZ0tpQndhWGhsYkZKaGRHbHZPd29nSUNBZ2NtVjBkWEp1SUZzS0lDQWdJQ0FnSUNCNExBb2dJQ0FnSUNBZ0lIa0tJQ0FnSUYwN0NuMEtablZ1WTNScGIyNGdTV1JsYm5ScGRIazBlRFFvS1NCN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUhCbEtDazdDbjBLWm5WdVkzUnBiMjRnYVc1ZmMyTmxibVVvYzJObGJtVXNJRzF2ZFhObFgyVjJaVzUwS1NCN0NpQWdJQ0JqYjI1emRDQmJlQ3dnZVYwZ1BTQmxkbVZ1ZERKelkyVnVaVjl3YVhobGJDaHpZMlZ1WlN3Z2JXOTFjMlZmWlhabGJuUXBPd29nSUNBZ1kyOXVjM1FnVzNONExDQnplU3dnYzNjc0lITm9YU0E5SUhOalpXNWxMbkJwZUdWc1lYSmxZUzUyWVd4MVpUc0tJQ0FnSUhKbGRIVnliaUI0SUQ0OUlITjRJQ1ltSUhnZ1BDQnplQ0FySUhOM0lDWW1JSGtnUGowZ2Mza2dKaVlnZVNBOElITjVJQ3NnYzJnN0NuMEtablZ1WTNScGIyNGdZWFIwWVdOb1h6TmtYMk5oYldWeVlTaGpZVzUyWVhNc0lHMWhhMmxsWDJOaGJXVnlZU3dnWTJGdE0yUXNJSE5qWlc1bEtTQjdDaUFnSUNCcFppQW9ZMkZ0TTJRZ1BUMDlJSFZ1WkdWbWFXNWxaQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJRnQzTENCb1hTQTlJRzFoYTJsbFgyTmhiV1Z5WVM1eVpYTnZiSFYwYVc5dUxuWmhiSFZsT3dvZ0lDQWdZMjl1YzNRZ1kyRnRaWEpoSUQwZ2JtVjNJSFYwS0dOaGJUTmtMbVp2ZGl3Z2R5QXZJR2dzSUdOaGJUTmtMbTVsWVhJc0lHTmhiVE5rTG1aaGNpazdDaUFnSUNCamIyNXpkQ0JqWlc1MFpYSWdQU0J1WlhjZ1RTZ3VMaTVqWVcwelpDNXNiMjlyWVhRcE93b2dJQ0FnWTJGdFpYSmhMblZ3SUQwZ2JtVjNJRTBvTGk0dVkyRnRNMlF1ZFhCMlpXTjBiM0lwT3dvZ0lDQWdZMkZ0WlhKaExuQnZjMmwwYVc5dUxuTmxkQ2d1TGk1allXMHpaQzVsZVdWd2IzTnBkR2x2YmlrN0NpQWdJQ0JqWVcxbGNtRXViRzl2YTBGMEtHTmxiblJsY2lrN0NpQWdJQ0JtZFc1amRHbHZiaUIxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnWTJGdFpYSmhMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0tUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMmFXVjNJRDBnWTJGdFpYSmhMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQndjbTlxWldOMGFXOXVJRDBnWTJGdFpYSmhMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZzdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1czZHBaSFJvTENCb1pXbG5hSFJkSUQwZ2JXRnJhV1ZmWTJGdFpYSmhMbkpsYzI5c2RYUnBiMjR1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1czZ3NJSGtzSUhwZElEMGdZMkZ0WlhKaExuQnZjMmwwYVc5dU93b2dJQ0FnSUNBZ0lHMWhhMmxsWDJOaGJXVnlZUzUxY0dSaGRHVmZiV0YwY21salpYTW9kbWxsZHk1bGJHVnRaVzUwY3l3Z2NISnZhbVZqZEdsdmJpNWxiR1Z0Wlc1MGN5d2dXd29nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwQ2lBZ0lDQWdJQ0FnWFN3Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0I0TEFvZ0lDQWdJQ0FnSUNBZ0lDQjVMQW9nSUNBZ0lDQWdJQ0FnSUNCNkNpQWdJQ0FnSUNBZ1hTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoWkdSTmIzVnpaVWhoYm1Sc1pYSW9aRzl0VDJKcVpXTjBMQ0JrY21GbkxDQjZiMjl0U1c0c0lIcHZiMjFQZFhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYzNSaGNuUkVjbUZuV0NBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYkdWMElITjBZWEowUkhKaFoxa2dQU0J1ZFd4c093b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHMXZkWE5sVjJobFpXeElZVzVrYkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJSGRwYm1SdmR5NWxkbVZ1ZENCOGZDQmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV2x1WDNOalpXNWxLSE5qWlc1bExDQmxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHUmxiSFJoSUQwZ1RXRjBhQzV6YVdkdUtHVXVaR1ZzZEdGWktUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUmxiSFJoSUQwOUlDMHhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I2YjI5dFQzVjBLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aR1ZzZEdFZ1BUMGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZW05dmJVbHVLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWlM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdGIzVnpaVVJ2ZDI1SVlXNWtiR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnBibDl6WTJWdVpTaHpZMlZ1WlN3Z1pTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZEVSeVlXZFlJRDBnWlM1amJHbGxiblJZT3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZEVSeVlXZFpJRDBnWlM1amJHbGxiblJaT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzF2ZFhObFRXOTJaVWhoYm1Sc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdsdVgzTmpaVzVsS0hOalpXNWxMQ0JsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpkR0Z5ZEVSeVlXZFlJRDA5UFNCdWRXeHNJSHg4SUhOMFlYSjBSSEpoWjFrZ1BUMDlJRzUxYkd3cElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dSeVlXY3BJR1J5WVdjb1pTNWpiR2xsYm5SWUlDMGdjM1JoY25SRWNtRm5XQ3dnWlM1amJHbGxiblJaSUMwZ2MzUmhjblJFY21GbldTazdDaUFnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBSSEpoWjFnZ1BTQmxMbU5zYVdWdWRGZzdDaUFnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBSSEpoWjFrZ1BTQmxMbU5zYVdWdWRGazdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JXOTFjMlZWY0VoaGJtUnNaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXbHVYM05qWlc1bEtITmpaVzVsTENCbEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHMXZkWE5sVFc5MlpVaGhibVJzWlhJdVkyRnNiQ2gwYUdsekxDQmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2MzUmhjblJFY21GbldDQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKMFJISmhaMWtnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCbExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHUnZiVTlpYW1WamRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSjNhR1ZsYkNJc0lHMXZkWE5sVjJobFpXeElZVzVrYkdWeUtUc0tJQ0FnSUNBZ0lDQmtiMjFQWW1wbFkzUXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2liVzkxYzJWa2IzZHVJaXdnYlc5MWMyVkViM2R1U0dGdVpHeGxjaWs3Q2lBZ0lDQWdJQ0FnWkc5dFQySnFaV04wTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW0xdmRYTmxiVzkyWlNJc0lHMXZkWE5sVFc5MlpVaGhibVJzWlhJcE93b2dJQ0FnSUNBZ0lHUnZiVTlpYW1WamRDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnRiM1Z6WlhWd0lpd2diVzkxYzJWVmNFaGhibVJzWlhJcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaSEpoWnloa1pXeDBZVmdzSUdSbGJIUmhXU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSEpoWkZCbGNsQnBlR1ZzSUQwZ1RXRjBhQzVRU1NBdklEUTFNRHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmtaV3gwWVZCb2FTQTlJSEpoWkZCbGNsQnBlR1ZzSUNvZ1pHVnNkR0ZZT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJR1JsYkhSaFZHaGxkR0VnUFNCeVlXUlFaWEpRYVhobGJDQXFJR1JsYkhSaFdUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCd2IzTWdQU0JqWVcxbGNtRXVjRzl6YVhScGIyNHVjM1ZpS0dObGJuUmxjaWs3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdjbUZrYVhWeklEMGdjRzl6TG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBhR1YwWVNBOUlFMWhkR2d1WVdOdmN5aHdiM011ZWlBdklISmhaR2wxY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJSEJvYVNBOUlFMWhkR2d1WVhSaGJqSW9jRzl6TG5rc0lIQnZjeTU0S1RzS0lDQWdJQ0FnSUNCMGFHVjBZU0E5SUUxaGRHZ3ViV2x1S0UxaGRHZ3ViV0Y0S0hSb1pYUmhJQzBnWkdWc2RHRlVhR1YwWVN3Z01Da3NJRTFoZEdndVVFa3BPd29nSUNBZ0lDQWdJSEJvYVNBdFBTQmtaV3gwWVZCb2FUc0tJQ0FnSUNBZ0lDQndiM011ZUNBOUlISmhaR2wxY3lBcUlFMWhkR2d1YzJsdUtIUm9aWFJoS1NBcUlFMWhkR2d1WTI5ektIQm9hU2s3Q2lBZ0lDQWdJQ0FnY0c5ekxua2dQU0J5WVdScGRYTWdLaUJOWVhSb0xuTnBiaWgwYUdWMFlTa2dLaUJOWVhSb0xuTnBiaWh3YUdrcE93b2dJQ0FnSUNBZ0lIQnZjeTU2SUQwZ2NtRmthWFZ6SUNvZ1RXRjBhQzVqYjNNb2RHaGxkR0VwT3dvZ0lDQWdJQ0FnSUdOaGJXVnlZUzV3YjNOcGRHbHZiaTVoWkdRb1kyVnVkR1Z5S1RzS0lDQWdJQ0FnSUNCallXMWxjbUV1Ykc5dmEwRjBLR05sYm5SbGNpazdDaUFnSUNBZ0lDQWdkWEJrWVhSbEtDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI2YjI5dFNXNG9LU0I3Q2lBZ0lDQWdJQ0FnWTJGdFpYSmhMbkJ2YzJsMGFXOXVMbk4xWWloalpXNTBaWElwTG0xMWJIUnBjR3g1VTJOaGJHRnlLREF1T1NrdVlXUmtLR05sYm5SbGNpazdDaUFnSUNBZ0lDQWdkWEJrWVhSbEtDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUI2YjI5dFQzVjBLQ2tnZXdvZ0lDQWdJQ0FnSUdOaGJXVnlZUzV3YjNOcGRHbHZiaTV6ZFdJb1kyVnVkR1Z5S1M1dGRXeDBhWEJzZVZOallXeGhjaWd4TGpFcExtRmtaQ2hqWlc1MFpYSXBPd29nSUNBZ0lDQWdJSFZ3WkdGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWVdSa1RXOTFjMlZJWVc1a2JHVnlLR05oYm5aaGN5d2daSEpoWnl3Z2VtOXZiVWx1TENCNmIyOXRUM1YwS1RzS2ZRcG1kVzVqZEdsdmJpQnRkV3dvWVN3Z1lpa2dld29nSUNBZ2NtVjBkWEp1SUdJdVkyeHZibVVvS1M1dGRXeDBhWEJzZVNoaEtUc0tmUXBtZFc1amRHbHZiaUJ2Y25Sb2IyZHlZWEJvYVdOd2NtOXFaV04wYVc5dUtHeGxablFzSUhKcFoyaDBMQ0JpYjNSMGIyMHNJSFJ2Y0N3Z2VtNWxZWElzSUhwbVlYSXBJSHNLSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ01pQXZJQ2h5YVdkb2RDQXRJR3hsWm5RcExBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01pQXZJQ2gwYjNBZ0xTQmliM1IwYjIwcExBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0xUSWdMeUFvZW1aaGNpQXRJSHB1WldGeUtTd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQzBvY21sbmFIUWdLeUJzWldaMEtTQXZJQ2h5YVdkb2RDQXRJR3hsWm5RcExBb2dJQ0FnSUNBZ0lDMG9kRzl3SUNzZ1ltOTBkRzl0S1NBdklDaDBiM0FnTFNCaWIzUjBiMjBwTEFvZ0lDQWdJQ0FnSUMwb2VtWmhjaUFySUhwdVpXRnlLU0F2SUNoNlptRnlJQzBnZW01bFlYSXBMQW9nSUNBZ0lDQWdJREVLSUNBZ0lGMDdDbjBLWm5WdVkzUnBiMjRnY0dsNFpXeGZjM0JoWTJWZmFXNTJaWEp6WlNoM0xDQm9MQ0J1WldGeUtTQjdDaUFnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSURBdU5TQXFJSGNzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TGpVZ0tpQm9MQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdibVZoY2l3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXVOU0FxSUhjc0NpQWdJQ0FnSUNBZ01DNDFJQ29nYUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lERUtJQ0FnSUYwN0NuMEtablZ1WTNScGIyNGdjbVZzWVhScGRtVmZjM0JoWTJVb0tTQjdDaUFnSUNCamIyNXpkQ0J5Wld4aGRHbDJaU0E5SUVsa1pXNTBhWFI1TkhnMEtDazdDaUFnSUNCeVpXeGhkR2wyWlM1bWNtOXRRWEp5WVhrb1d3b2dJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTVFvZ0lDQWdYU2s3Q2lBZ0lDQnlaWFIxY200Z2NtVnNZWFJwZG1VN0NuMEtZMnhoYzNNZ1RXRnJhV1ZEWVcxbGNtRWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuWnBaWGNnUFNCdVpYY2daMjhvU1dSbGJuUnBkSGswZURRb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXFaV04wYVc5dUlEMGdibVYzSUdkdktFbGtaVzUwYVhSNU5IZzBLQ2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjSEp2YW1WamRHbHZiblpwWlhjZ1BTQnVaWGNnWjI4b1NXUmxiblJwZEhrMGVEUW9LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdhWGhsYkY5emNHRmpaU0E5SUc1bGR5Qm5ieWhKWkdWdWRHbDBlVFI0TkNncEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CcGVHVnNYM053WVdObFgybHVkbVZ5YzJVZ1BTQnVaWGNnWjI4b1NXUmxiblJwZEhrMGVEUW9LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdjbTlxWldOMGFXOXVkbWxsZDE5cGJuWmxjbk5sSUQwZ2JtVjNJR2R2S0Vsa1pXNTBhWFI1TkhnMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNtVnNZWFJwZG1WZmMzQmhZMlVnUFNCdVpYY2daMjhvY21Wc1lYUnBkbVZmYzNCaFkyVW9LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaV3hoZEdsMlpWOXBiblpsY25ObElEMGdibVYzSUdkdktISmxiR0YwYVhabFgzTndZV05sS0NrdWFXNTJaWEowS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11WTJ4cGNGOXpjR0ZqWlNBOUlHNWxkeUJuYnloSlpHVnVkR2wwZVRSNE5DZ3BLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZFhScGIyNGdQU0J1WlhjZ1oyOG9ibVYzSUZnb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1bGVXVndiM05wZEdsdmJpQTlJRzVsZHlCbmJ5aHVaWGNnVFNncEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CeVpYQnliMnBsWTNScGIyNXpJRDBnZTMwN0NpQWdJQ0I5Q2lBZ0lDQmpZV3hqZFd4aGRHVmZiV0YwY21salpYTW9LU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXM2NzSUdoZElEMGdkR2hwY3k1eVpYTnZiSFYwYVc5dUxuWmhiSFZsT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJRzVsWVhKamJHbHdJRDBnTFRFd1h6QXdNRHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnBlR1ZzWDNOd1lXTmxMblpoYkhWbExtWnliMjFCY25KaGVTaHZjblJvYjJkeVlYQm9hV053Y205cVpXTjBhVzl1S0RBc0lIY3NJREFzSUdnc0lHNWxZWEpqYkdsd0xDQXhNRjh3TURBcEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5CcGVHVnNYM053WVdObFgybHVkbVZ5YzJVdWRtRnNkV1V1Wm5KdmJVRnljbUY1S0hCcGVHVnNYM053WVdObFgybHVkbVZ5YzJVb2R5d2dhQ3dnYm1WaGNtTnNhWEFwS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3Y205cVgzWnBaWGNnUFNCdGRXd29kR2hwY3k1MmFXVjNMblpoYkhWbExDQjBhR2x6TG5CeWIycGxZM1JwYjI0dWRtRnNkV1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjSEp2YW1WamRHbHZiblpwWlhjdWRtRnNkV1VnUFNCd2NtOXFYM1pwWlhjN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205cVpXTjBhVzl1ZG1sbGQxOXBiblpsY25ObExuWmhiSFZsSUQwZ2NISnZhbDkyYVdWM0xtTnNiMjVsS0NrdWFXNTJaWEowS0NrN0NpQWdJQ0FnSUNBZ1QySnFaV04wTG10bGVYTW9kR2hwY3k1d2NtVndjbTlxWldOMGFXOXVjeWt1Wm05eVJXRmphQ2dvYTJWNUtUMCtld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JiYzNCaFkyVXNJRzFoY210bGNuTndZV05sWFNBOUlHdGxlUzV6Y0d4cGRDZ2lMQ0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CeVpYQnliMnBsWTNScGIyNXpXMnRsZVYwdWRtRnNkV1VnUFNCMGFHbHpMbU5oYkdOMWJHRjBaVjl3Y21Wd2NtOXFaV04wYVc5dVgyMWhkSEpwZUNoemNHRmpaU3dnYldGeWEyVnljM0JoWTJVcE93b2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxYMjFoZEhKcFkyVnpLSFpwWlhjc0lIQnliMnBsWTNScGIyNHNJSEpsYzI5c2RYUnBiMjRzSUdWNVpYQnZjeWtnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkbWxsZHk1MllXeDFaUzVtY205dFFYSnlZWGtvZG1sbGR5azdDaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXFaV04wYVc5dUxuWmhiSFZsTG1aeWIyMUJjbkpoZVNod2NtOXFaV04wYVc5dUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOXNkWFJwYjI0dWRtRnNkV1V1Wm5KdmJVRnljbUY1S0hKbGMyOXNkWFJwYjI0cE93b2dJQ0FnSUNBZ0lIUm9hWE11WlhsbGNHOXphWFJwYjI0dWRtRnNkV1V1Wm5KdmJVRnljbUY1S0dWNVpYQnZjeWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpZV3hqZFd4aGRHVmZiV0YwY21salpYTW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNpQWdJQ0JqYkdsd1gzUnZYM053WVdObEtITndZV05sS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSE53WVdObElEMDlQU0FpWkdGMFlTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjSEp2YW1WamRHbHZiblpwWlhkZmFXNTJaWEp6WlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hOd1lXTmxJRDA5UFNBaWNHbDRaV3dpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CcGVHVnNYM053WVdObFgybHVkbVZ5YzJVdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoemNHRmpaU0E5UFQwZ0luSmxiR0YwYVhabElpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlaV3hoZEdsMlpWOXBiblpsY25ObExuWmhiSFZsT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzQmhZMlVnUFQwOUlDSmpiR2x3SWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amJHbHdYM053WVdObExuWmhiSFZsT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loZ1UzQmhZMlVnSkh0emNHRmpaWDBnYm05MElISmxZMjluYm1sNlpXUmdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCemNHRmpaVjkwYjE5amJHbHdLSE53WVdObEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hOd1lXTmxJRDA5UFNBaVpHRjBZU0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0hKdmFtVmpkR2x2Ym5acFpYY3VkbUZzZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbkJwZUdWc0lpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdhWGhsYkY5emNHRmpaUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSE53WVdObElEMDlQU0FpY21Wc1lYUnBkbVVpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KbGJHRjBhWFpsWDNOd1lXTmxMblpoYkhWbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9jM0JoWTJVZ1BUMDlJQ0pqYkdsd0lpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiR2x3WDNOd1lXTmxMblpoYkhWbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGdVM0JoWTJVZ0pIdHpjR0ZqWlgwZ2JtOTBJSEpsWTI5bmJtbDZaV1JnS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmpZV3hqZFd4aGRHVmZjSEpsY0hKdmFtVmpkR2x2Ymw5dFlYUnlhWGdvYzNCaFkyVXNJRzFoY210bGNuTndZV05sS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWTNBZ1BTQjBhR2x6TG1Oc2FYQmZkRzlmYzNCaFkyVW9iV0Z5YTJWeWMzQmhZMlVwT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJSE5qSUQwZ2RHaHBjeTV6Y0dGalpWOTBiMTlqYkdsd0tITndZV05sS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYlhWc0tITmpMQ0JqY0NrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ3Y205cVpXTjBhVzl1WDIxaGRISnBlQ2h6Y0dGalpTd2diV0Z5YTJWeWMzQmhZMlVwSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0JyWlhrZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUhOd1lXTmxMQW9nSUNBZ0lDQWdJQ0FnSUNCdFlYSnJaWEp6Y0dGalpRb2dJQ0FnSUNBZ0lGMDdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2JXRjBjbWw0WDNWdWFXWnZjbTBnUFNCMGFHbHpMbkJ5WlhCeWIycGxZM1JwYjI1elcydGxlVjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHMWhkSEpwZUY5MWJtbG1iM0p0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnRZWFJ5YVhoZmRXNXBabTl5YlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdFlYUnlhWGdnUFNCMGFHbHpMbU5oYkdOMWJHRjBaVjl3Y21Wd2NtOXFaV04wYVc5dVgyMWhkSEpwZUNoemNHRmpaU3dnYldGeWEyVnljM0JoWTJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQjFibWxtYjNKdElEMGdibVYzSUdkdktHMWhkSEpwZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNISmxjSEp2YW1WamRHbHZibk5iYTJWNVhTQTlJSFZ1YVdadmNtMDdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIxYm1sbWIzSnRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmUXBqYjI1emRDQnpZMlZ1WlY5allXTm9aU0E5SUh0OU93cGpiMjV6ZENCd2JHOTBYMk5oWTJobElEMGdlMzA3Q21OdmJuTjBJRlJGV0ZSVlVrVmZRVlJNUVZNZ1BTQmJDaUFnSUNCMWJtUmxabWx1WldRS1hUc0tablZ1WTNScGIyNGdZV1JrWDNOalpXNWxLSE5qWlc1bFgybGtMQ0IwYUhKbFpWOXpZMlZ1WlNrZ2V3b2dJQ0FnYzJObGJtVmZZMkZqYUdWYmMyTmxibVZmYVdSZElEMGdkR2h5WldWZmMyTmxibVU3Q24wS1puVnVZM1JwYjI0Z1ptbHVaRjl6WTJWdVpTaHpZMlZ1WlY5cFpDa2dld29nSUNBZ2NtVjBkWEp1SUhOalpXNWxYMk5oWTJobFczTmpaVzVsWDJsa1hUc0tmUXBtZFc1amRHbHZiaUJrWld4bGRHVmZjMk5sYm1Vb2MyTmxibVZmYVdRcElIc0tJQ0FnSUdOdmJuTjBJSE5qWlc1bElEMGdjMk5sYm1WZlkyRmphR1ZiYzJObGJtVmZhV1JkT3dvZ0lDQWdhV1lnS0NGelkyVnVaU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lIMEtJQ0FnSUhkb2FXeGxLSE5qWlc1bExtTm9hV3hrY21WdUxteGxibWQwYUNBK0lEQXBld29nSUNBZ0lDQWdJSE5qWlc1bExuSmxiVzkyWlNoelkyVnVaUzVqYUdsc1pISmxibHN3WFNrN0NpQWdJQ0I5Q2lBZ0lDQmtaV3hsZEdVZ2MyTmxibVZmWTJGamFHVmJjMk5sYm1WZmFXUmRPd3A5Q21aMWJtTjBhVzl1SUdacGJtUmZjR3h2ZEhNb2NHeHZkRjkxZFdsa2N5a2dld29nSUNBZ1kyOXVjM1FnY0d4dmRITWdQU0JiWFRzS0lDQWdJSEJzYjNSZmRYVnBaSE11Wm05eVJXRmphQ2dvYVdRcFBUNTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NHeHZkQ0E5SUhCc2IzUmZZMkZqYUdWYmFXUmRPd29nSUNBZ0lDQWdJR2xtSUNod2JHOTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1J6TG5CMWMyZ29jR3h2ZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlNrN0NpQWdJQ0J5WlhSMWNtNGdjR3h2ZEhNN0NuMEtablZ1WTNScGIyNGdaR1ZzWlhSbFgzTmpaVzVsY3loelkyVnVaVjkxZFdsa2N5d2djR3h2ZEY5MWRXbGtjeWtnZXdvZ0lDQWdjR3h2ZEY5MWRXbGtjeTVtYjNKRllXTm9LQ2h3Ykc5MFgybGtLVDArZXdvZ0lDQWdJQ0FnSUdSbGJHVjBaU0J3Ykc5MFgyTmhZMmhsVzNCc2IzUmZhV1JkT3dvZ0lDQWdmU2s3Q2lBZ0lDQnpZMlZ1WlY5MWRXbGtjeTVtYjNKRllXTm9LQ2h6WTJWdVpWOXBaQ2s5UG5zS0lDQWdJQ0FnSUNCa1pXeGxkR1ZmYzJObGJtVW9jMk5sYm1WZmFXUXBPd29nSUNBZ2ZTazdDbjBLWm5WdVkzUnBiMjRnYVc1elpYSjBYM0JzYjNRb2MyTmxibVZmYVdRc0lIQnNiM1JmWkdGMFlTa2dld29nSUNBZ1kyOXVjM1FnYzJObGJtVWdQU0JtYVc1a1gzTmpaVzVsS0hOalpXNWxYMmxrS1RzS0lDQWdJSEJzYjNSZlpHRjBZUzVtYjNKRllXTm9LQ2h3Ykc5MEtUMCtld29nSUNBZ0lDQWdJR0ZrWkY5d2JHOTBLSE5qWlc1bExDQndiRzkwS1RzS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlHUmxiR1YwWlY5d2JHOTBjeWh6WTJWdVpWOXBaQ3dnY0d4dmRGOTFkV2xrY3lrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVzYjJjb1lHUmxiR1YwYVc1bklIQnNiM1J6SVRvZ0pIdHdiRzkwWDNWMWFXUnpmV0FwT3dvZ0lDQWdZMjl1YzNRZ2MyTmxibVVnUFNCbWFXNWtYM05qWlc1bEtITmpaVzVsWDJsa0tUc0tJQ0FnSUdOdmJuTjBJSEJzYjNSeklEMGdabWx1WkY5d2JHOTBjeWh3Ykc5MFgzVjFhV1J6S1RzS0lDQWdJSEJzYjNSekxtWnZja1ZoWTJnb0tIQXBQVDU3Q2lBZ0lDQWdJQ0FnYzJObGJtVXVjbVZ0YjNabEtIQXBPd29nSUNBZ0lDQWdJR1JsYkdWMFpTQndiRzkwWDJOaFkyaGxXM0JkT3dvZ0lDQWdmU2s3Q24wS1puVnVZM1JwYjI0Z1kyOXVkbVZ5ZEY5MFpYaDBkWEpsS0dSaGRHRXBJSHNLSUNBZ0lHTnZibk4wSUhSbGVDQTlJR055WldGMFpWOTBaWGgwZFhKbEtHUmhkR0VwT3dvZ0lDQWdkR1Y0TG01bFpXUnpWWEJrWVhSbElEMGdkSEoxWlRzS0lDQWdJSFJsZUM1dGFXNUdhV3gwWlhJZ1BTQnRiMlJiWkdGMFlTNXRhVzVHYVd4MFpYSmRPd29nSUNBZ2RHVjRMbTFoWjBacGJIUmxjaUE5SUcxdlpGdGtZWFJoTG0xaFowWnBiSFJsY2wwN0NpQWdJQ0IwWlhndVlXNXBjMjkwY205d2VTQTlJR1JoZEdFdVlXNXBjMjkwY205d2VUc0tJQ0FnSUhSbGVDNTNjbUZ3VXlBOUlHMXZaRnRrWVhSaExuZHlZWEJUWFRzS0lDQWdJR2xtSUNoa1lYUmhMbk5wZW1VdWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJSFJsZUM1M2NtRndWQ0E5SUcxdlpGdGtZWFJoTG5keVlYQlVYVHNLSUNBZ0lIMEtJQ0FnSUdsbUlDaGtZWFJoTG5OcGVtVXViR1Z1WjNSb0lENGdNaWtnZXdvZ0lDQWdJQ0FnSUhSbGVDNTNjbUZ3VWlBOUlHMXZaRnRrWVhSaExuZHlZWEJTWFRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCMFpYZzdDbjBLWm5WdVkzUnBiMjRnYVhOZmRHaHlaV1ZmWm1sNFpXUmZZWEp5WVhrb2RtRnNkV1VwSUhzS0lDQWdJSEpsZEhWeWJpQjJZV3gxWlNCcGJuTjBZVzVqWlc5bUlHMXZaQzVXWldOMGIzSXlJSHg4SUhaaGJIVmxJR2x1YzNSaGJtTmxiMllnYlc5a0xsWmxZM1J2Y2pNZ2ZId2dkbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQnRiMlF1Vm1WamRHOXlOQ0I4ZkNCMllXeDFaU0JwYm5OMFlXNWpaVzltSUcxdlpDNU5ZWFJ5YVhnME93cDlDbVoxYm1OMGFXOXVJSFJ2WDNWdWFXWnZjbTBvWkdGMFlTa2dld29nSUNBZ2FXWWdLR1JoZEdFdWRIbHdaU0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0dSaGRHRXVkSGx3WlNBOVBTQWlVMkZ0Y0d4bGNpSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuWmxjblJmZEdWNGRIVnlaU2hrWVhSaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtHQlVlWEJsSUNSN1pHRjBZUzUwZVhCbGZTQnViM1FnYTI1dmQyNWdLVHNLSUNBZ0lIMEtJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dSaGRHRXBJSHg4SUVGeWNtRjVRblZtWm1WeUxtbHpWbWxsZHloa1lYUmhLU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDZ2haR0YwWVM1bGRtVnllU2dvZUNrOVBuUjVjR1Z2WmlCNElEMDlQU0FpYm5WdFltVnlJaWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHUmhkR0U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG14bGJtZDBhQ0E5UFNBeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2JXOWtMbFpsWTNSdmNqSW9LUzVtY205dFFYSnlZWGtvWkdGMFlTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoa1lYUmhMbXhsYm1kMGFDQTlQU0F6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnYlc5a0xsWmxZM1J2Y2pNb0tTNW1jbTl0UVhKeVlYa29aR0YwWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExteGxibWQwYUNBOVBTQTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2diVzlrTGxabFkzUnZjalFvS1M1bWNtOXRRWEp5WVhrb1pHRjBZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG14bGJtZDBhQ0E5UFNBeE5pa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J0WVhRZ1BTQnVaWGNnYlc5a0xrMWhkSEpwZURRb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMExtWnliMjFCY25KaGVTaGtZWFJoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHMWhkRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnWkdGMFlUc0tmUXBtZFc1amRHbHZiaUJrWlhObGNtbGhiR2w2WlY5MWJtbG1iM0p0Y3loa1lYUmhLU0I3Q2lBZ0lDQmpiMjV6ZENCeVpYTjFiSFFnUFNCN2ZUc0tJQ0FnSUdadmNpaGpiMjV6ZENCdVlXMWxJR2x1SUdSaGRHRXBld29nSUNBZ0lDQWdJR052Ym5OMElIWmhiSFZsSUQwZ1pHRjBZVnR1WVcxbFhUc0tJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJ0YjJRdVZXNXBabTl5YlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhOMWJIUmJibUZ0WlYwZ1BTQjJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCelpYSWdQU0IwYjE5MWJtbG1iM0p0S0haaGJIVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwVzI1aGJXVmRJRDBnYm1WM0lHMXZaQzVWYm1sbWIzSnRLSE5sY2lrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlISmxjM1ZzZERzS2ZRcG1kVzVqZEdsdmJpQmtaWE5sY21saGJHbDZaVjl3Ykc5MEtHUmhkR0VwSUhzS0lDQWdJR3hsZENCdFpYTm9Pd29nSUNBZ2FXWWdLQ0pwYm5OMFlXNWpaVjloZEhSeWFXSjFkR1Z6SWlCcGJpQmtZWFJoS1NCN0NpQWdJQ0FnSUNBZ2JXVnphQ0E5SUdOeVpXRjBaVjlwYm5OMFlXNWpaV1JmYldWemFDaGtZWFJoS1RzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdiV1Z6YUNBOUlHTnlaV0YwWlY5dFpYTm9LR1JoZEdFcE93b2dJQ0FnZlFvZ0lDQWdiV1Z6YUM1dVlXMWxJRDBnWkdGMFlTNXVZVzFsT3dvZ0lDQWdiV1Z6YUM1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnWm1Gc2MyVTdDaUFnSUNCdFpYTm9MbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0JtWVd4elpUc0tJQ0FnSUcxbGMyZ3VjR3h2ZEY5MWRXbGtJRDBnWkdGMFlTNTFkV2xrT3dvZ0lDQWdZMjl1YzNRZ2RYQmtZWFJsWDNacGMybGliR1VnUFNBb2RpazlQbnNLSUNBZ0lDQWdJQ0J0WlhOb0xuWnBjMmxpYkdVZ1BTQjJPd29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwN0NpQWdJQ0IxY0dSaGRHVmZkbWx6YVdKc1pTaGtZWFJoTG5acGMybGliR1V1ZG1Gc2RXVXBPd29nSUNBZ1pHRjBZUzUyYVhOcFlteGxMbTl1S0hWd1pHRjBaVjkyYVhOcFlteGxLVHNLSUNBZ0lHTnZibTVsWTNSZmRXNXBabTl5YlhNb2JXVnphQ3dnWkdGMFlTNTFibWxtYjNKdFgzVndaR0YwWlhJcE93b2dJQ0FnWTI5dWJtVmpkRjloZEhSeWFXSjFkR1Z6S0cxbGMyZ3NJR1JoZEdFdVlYUjBjbWxpZFhSbFgzVndaR0YwWlhJcE93b2dJQ0FnY21WMGRYSnVJRzFsYzJnN0NuMEtZMjl1YzNRZ1QwNWZUa1ZZVkY5SlRsTkZVbFFnUFNCdVpYY2dVMlYwS0NrN0NtWjFibU4wYVc5dUlHOXVYMjVsZUhSZmFXNXpaWEowS0dZcElIc0tJQ0FnSUU5T1gwNUZXRlJmU1U1VFJWSlVMbUZrWkNobUtUc0tmUXBtZFc1amRHbHZiaUJoWkdSZmNHeHZkQ2h6WTJWdVpTd2djR3h2ZEY5a1lYUmhLU0I3Q2lBZ0lDQmpiMjV6ZENCallXMGdQU0J6WTJWdVpTNTNaMnhmWTJGdFpYSmhPd29nSUNBZ1kyOXVjM1FnYVdSbGJuUnBkSGtnUFNCdVpYY2diVzlrTGxWdWFXWnZjbTBvYm1WM0lHMXZaQzVOWVhSeWFYZzBLQ2twT3dvZ0lDQWdhV1lnS0hCc2IzUmZaR0YwWVM1allXMWZjM0JoWTJVZ1BUMGdJbVJoZEdFaUtTQjdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMblpwWlhjZ1BTQmpZVzB1ZG1sbGR6c0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiaUE5SUdOaGJTNXdjbTlxWldOMGFXOXVPd29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTV3Y205cVpXTjBhVzl1ZG1sbGR5QTlJR05oYlM1d2NtOXFaV04wYVc5dWRtbGxkenNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11WlhsbGNHOXphWFJwYjI0Z1BTQmpZVzB1WlhsbGNHOXphWFJwYjI0N0NpQWdJQ0I5SUdWc2MyVWdhV1lnS0hCc2IzUmZaR0YwWVM1allXMWZjM0JoWTJVZ1BUMGdJbkJwZUdWc0lpa2dld29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTUyYVdWM0lEMGdhV1JsYm5ScGRIazdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbkJ5YjJwbFkzUnBiMjRnUFNCallXMHVjR2w0Wld4ZmMzQmhZMlU3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeWIycGxZM1JwYjI1MmFXVjNJRDBnWTJGdExuQnBlR1ZzWDNOd1lXTmxPd29nSUNBZ2ZTQmxiSE5sSUdsbUlDaHdiRzkwWDJSaGRHRXVZMkZ0WDNOd1lXTmxJRDA5SUNKeVpXeGhkR2wyWlNJcElIc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVkbWxsZHlBOUlHbGtaVzUwYVhSNU93b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NXdjbTlxWldOMGFXOXVJRDBnWTJGdExuSmxiR0YwYVhabFgzTndZV05sT3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dWRtbGxkeUE5SUdOaGJTNXlaV3hoZEdsMlpWOXpjR0ZqWlRzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMblpwWlhjZ1BTQnBaR1Z1ZEdsMGVUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiaUE5SUdsa1pXNTBhWFI1T3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dWRtbGxkeUE5SUdsa1pXNTBhWFI1T3dvZ0lDQWdmUW9nSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuSmxjMjlzZFhScGIyNGdQU0JqWVcwdWNtVnpiMngxZEdsdmJqc0tJQ0FnSUdsbUlDaHdiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEpsY0hKdmFtVmpkR2x2YmlrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhzZ2MzQmhZMlVnTENCdFlYSnJaWEp6Y0dGalpTQWdmU0E5SUhCc2IzUmZaR0YwWVRzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNISmxjSEp2YW1WamRHbHZiaUE5SUdOaGJTNXdjbVZ3Y205cVpXTjBhVzl1WDIxaGRISnBlQ2h6Y0dGalpTNTJZV3gxWlN3Z2JXRnlhMlZ5YzNCaFkyVXVkbUZzZFdVcE93b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2NDQTlJR1JsYzJWeWFXRnNhWHBsWDNCc2IzUW9jR3h2ZEY5a1lYUmhLVHNLSUNBZ0lIQnNiM1JmWTJGamFHVmJjR3h2ZEY5a1lYUmhMblYxYVdSZElEMGdjRHNLSUNBZ0lITmpaVzVsTG1Ga1pDaHdLVHNLSUNBZ0lHTnZibk4wSUc1bGVIUmZhVzV6WlhKMElEMGdibVYzSUZObGRDaFBUbDlPUlZoVVgwbE9VMFZTVkNrN0NpQWdJQ0J1WlhoMFgybHVjMlZ5ZEM1bWIzSkZZV05vS0NobUtUMCtaaWdwS1RzS2ZRcG1kVzVqZEdsdmJpQmpiMjV1WldOMFgzVnVhV1p2Y20xektHMWxjMmdzSUhWd1pHRjBaWElwSUhzS0lDQWdJSFZ3WkdGMFpYSXViMjRvS0Z0dVlXMWxMQ0JrWVhSaFhTazlQbnNLSUNBZ0lDQWdJQ0JwWmlBb2JtRnRaU0E5UFQwZ0ltNXZibVVpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZMjl1YzNRZ2RXNXBabTl5YlNBOUlHMWxjMmd1YldGMFpYSnBZV3d1ZFc1cFptOXliWE5iYm1GdFpWMDdDaUFnSUNBZ0lDQWdhV1lnS0hWdWFXWnZjbTB1ZG1Gc2RXVXVhWE5VWlhoMGRYSmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsdFgyUmhkR0VnUFNCMWJtbG1iM0p0TG5aaGJIVmxMbWx0WVdkbE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmJjMmw2WlN3Z2RHVjRYMlJoZEdGZElEMGdaR0YwWVRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSbGVGOWtZWFJoTG14bGJtZDBhQ0E5UFNCcGJWOWtZWFJoTG1SaGRHRXViR1Z1WjNSb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBiVjlrWVhSaExtUmhkR0V1YzJWMEtIUmxlRjlrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHOXNaRjkwWlhoMGRYSmxJRDBnZFc1cFptOXliUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20wdWRtRnNkV1VnUFNCeVpWOWpjbVZoZEdWZmRHVjRkSFZ5WlNodmJHUmZkR1Y0ZEhWeVpTd2dkR1Y0WDJSaGRHRXNJSE5wZW1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IyeGtYM1JsZUhSMWNtVXVaR2x6Y0c5elpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMHVkbUZzZFdVdWJtVmxaSE5WY0dSaGRHVWdQU0IwY25WbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGMxOTBhSEpsWlY5bWFYaGxaRjloY25KaGVTaDFibWxtYjNKdExuWmhiSFZsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlM1MllXeDFaUzVtY205dFFYSnlZWGtvWkdGMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRMblpoYkhWbElEMGdaR0YwWVRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjkwWlhoMGRYSmxLR1JoZEdFcElIc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJR1JoZEdFdVpHRjBZVHNLSUNBZ0lHbG1JQ2hrWVhSaExuTnBlbVV1YkdWdVozUm9JRDA5SURNcElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMFpYZ2dQU0J1WlhjZ2JXOWtMa1JoZEdGVVpYaDBkWEpsTTBRb1luVm1abVZ5TENCa1lYUmhMbk5wZW1WYk1GMHNJR1JoZEdFdWMybDZaVnN4WFN3Z1pHRjBZUzV6YVhwbFd6SmRLVHNLSUNBZ0lDQWdJQ0IwWlhndVptOXliV0YwSUQwZ2JXOWtXMlJoZEdFdWRHaHlaV1ZmWm05eWJXRjBYVHNLSUNBZ0lDQWdJQ0IwWlhndWRIbHdaU0E5SUcxdlpGdGtZWFJoTG5Sb2NtVmxYM1I1Y0dWZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFpYZzdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSFJsZUY5a1lYUmhJRDBnWW5WbVptVnlJRDA5SUNKMFpYaDBkWEpsWDJGMGJHRnpJaUEvSUZSRldGUlZVa1ZmUVZSTVFWTmJNRjB1ZG1Gc2RXVWdPaUJpZFdabVpYSTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ0YjJRdVJHRjBZVlJsZUhSMWNtVW9kR1Y0WDJSaGRHRXNJR1JoZEdFdWMybDZaVnN3WFN3Z1pHRjBZUzV6YVhwbFd6RmRMQ0J0YjJSYlpHRjBZUzUwYUhKbFpWOW1iM0p0WVhSZExDQnRiMlJiWkdGMFlTNTBhSEpsWlY5MGVYQmxYU2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnY21WZlkzSmxZWFJsWDNSbGVIUjFjbVVvYjJ4a1gzUmxlSFIxY21Vc0lHSjFabVpsY2l3Z2MybDZaU2tnZXdvZ0lDQWdhV1lnS0hOcGVtVXViR1Z1WjNSb0lEMDlJRE1wSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0IwWlhnZ1BTQnVaWGNnYlc5a0xrUmhkR0ZVWlhoMGRYSmxNMFFvWW5WbVptVnlMQ0J6YVhwbFd6QmRMQ0J6YVhwbFd6RmRMQ0J6YVhwbFd6SmRLVHNLSUNBZ0lDQWdJQ0IwWlhndVptOXliV0YwSUQwZ2IyeGtYM1JsZUhSMWNtVXVabTl5YldGME93b2dJQ0FnSUNBZ0lIUmxlQzUwZVhCbElEMGdiMnhrWDNSbGVIUjFjbVV1ZEhsd1pUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHVjRPd29nSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHMXZaQzVFWVhSaFZHVjRkSFZ5WlNoaWRXWm1aWElzSUhOcGVtVmJNRjBzSUhOcGVtVmJNVjBnUHlCemFYcGxXekZkSURvZ01Td2diMnhrWDNSbGVIUjFjbVV1Wm05eWJXRjBMQ0J2YkdSZmRHVjRkSFZ5WlM1MGVYQmxLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZblZtWm1WeUtTQjdDaUFnSUNCamIyNXpkQ0JxYzJKMVptWWdQU0J1WlhjZ2JXOWtMa0oxWm1abGNrRjBkSEpwWW5WMFpTaGlkV1ptWlhJdVpteGhkQ3dnWW5WbVptVnlMblI1Y0dWZmJHVnVaM1JvS1RzS0lDQWdJR3B6WW5WbVppNXpaWFJWYzJGblpTaHRiMlF1UkhsdVlXMXBZMFJ5WVhkVmMyRm5aU2s3Q2lBZ0lDQnlaWFIxY200Z2FuTmlkV1ptT3dwOUNtWjFibU4wYVc5dUlFbHVjM1JoYm1ObFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dKMVptWmxjaWtnZXdvZ0lDQWdZMjl1YzNRZ2FuTmlkV1ptSUQwZ2JtVjNJRzF2WkM1SmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWW5WbVptVnlMbVpzWVhRc0lHSjFabVpsY2k1MGVYQmxYMnhsYm1kMGFDazdDaUFnSUNCcWMySjFabVl1YzJWMFZYTmhaMlVvYlc5a0xrUjVibUZ0YVdORWNtRjNWWE5oWjJVcE93b2dJQ0FnY21WMGRYSnVJR3B6WW5WbVpqc0tmUXBtZFc1amRHbHZiaUJoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQjJaWEowWlhoaGNuSmhlWE1zSUdaaFkyVnpLU0I3Q2lBZ0lDQm1iM0lvWTI5dWMzUWdibUZ0WlNCcGJpQjJaWEowWlhoaGNuSmhlWE1wZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1ZZ1BTQjJaWEowWlhoaGNuSmhlWE5iYm1GdFpWMDdDaUFnSUNBZ0lDQWdiR1YwSUdKMVptWmxjanNLSUNBZ0lDQWdJQ0JwWmlBb1luVm1aaTUwYjE5MWNHUmhkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeUlEMGdibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb1luVm1aaTUwYjE5MWNHUmhkR1VzSUdKMVptWXVhWFJsYlZOcGVtVXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjaUE5SUVKMVptWmxja0YwZEhKcFluVjBaU2hpZFdabUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxuTmxkRUYwZEhKcFluVjBaU2h1WVcxbExDQmlkV1ptWlhJcE93b2dJQ0FnZlFvZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxuTmxkRWx1WkdWNEtHWmhZMlZ6S1RzS0lDQWdJR0oxWm1abGNsOW5aVzl0WlhSeWVTNWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlHNWxkeUJ0YjJRdVUzQm9aWEpsS0NrN0NpQWdJQ0JpZFdabVpYSmZaMlZ2YldWMGNua3VZbTkxYm1ScGJtZFRjR2hsY21VdWNtRmthWFZ6SUQwZ01UQXdNREF3TURBd01EQXdNREE3Q2lBZ0lDQmlkV1ptWlhKZloyVnZiV1YwY25rdVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUdaaGJITmxPd29nSUNBZ2NtVjBkWEp1SUdKMVptWmxjbDluWlc5dFpYUnllVHNLZlFwbWRXNWpkR2x2YmlCaGRIUmhZMmhmYVc1emRHRnVZMlZrWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnYVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lrZ2V3b2dJQ0FnWm05eUtHTnZibk4wSUc1aGJXVWdhVzRnYVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lsN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WbVptVnlJRDBnU1c1emRHRnVZMlZDZFdabVpYSkJkSFJ5YVdKMWRHVW9hVzV6ZEdGdVkyVmZZWFIwY21saWRYUmxjMXR1WVcxbFhTazdDaUFnSUNBZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxuTmxkRUYwZEhKcFluVjBaU2h1WVcxbExDQmlkV1ptWlhJcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlISmxZM0psWVhSbFgyZGxiMjFsZEhKNUtHMWxjMmdzSUhabGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcElIc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNsOW5aVzl0WlhSeWVTQTlJRzVsZHlCdGIyUXVRblZtWm1WeVIyVnZiV1YwY25rb0tUc0tJQ0FnSUdGMGRHRmphRjluWlc5dFpYUnllU2hpZFdabVpYSmZaMlZ2YldWMGNua3NJSFpsY25SbGVHRnljbUY1Y3l3Z1ptRmpaWE1wT3dvZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0NrN0NpQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUlEMGdZblZtWm1WeVgyZGxiMjFsZEhKNU93b2dJQ0FnYldWemFDNXVaV1ZrYzFWd1pHRjBaU0E5SUhSeWRXVTdDbjBLWm5WdVkzUnBiMjRnY21WamNtVmhkR1ZmYVc1emRHRnVZMlZrWDJkbGIyMWxkSEo1S0cxbGMyZ3BJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjbDluWlc5dFpYUnllU0E5SUc1bGR5QnRiMlF1U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua29LVHNLSUNBZ0lHTnZibk4wSUhabGNuUmxlR0Z5Y21GNWN5QTlJSHQ5T3dvZ0lDQWdZMjl1YzNRZ2FXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGN5QTlJSHQ5T3dvZ0lDQWdZMjl1YzNRZ1ptRmpaWE1nUFNCYkNpQWdJQ0FnSUNBZ0xpNHViV1Z6YUM1blpXOXRaWFJ5ZVM1cGJtUmxlQzVoY25KaGVRb2dJQ0FnWFRzS0lDQWdJRTlpYW1WamRDNXJaWGx6S0cxbGMyZ3VaMlZ2YldWMGNua3VZWFIwY21saWRYUmxjeWt1Wm05eVJXRmphQ2dvYm1GdFpTazlQbnNLSUNBZ0lDQWdJQ0JqYjI1emRDQmlkV1ptWlhJZ1BTQnRaWE5vTG1kbGIyMWxkSEo1TG1GMGRISnBZblYwWlhOYmJtRnRaVjA3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdZMjl3ZVNBOUlHSjFabVpsY2k1MGIxOTFjR1JoZEdVZ1B5QmlkV1ptWlhJdWRHOWZkWEJrWVhSbElEb2dZblZtWm1WeUxtRnljbUY1TG0xaGNDZ29lQ2s5UG5ncE93b2dJQ0FnSUNBZ0lHbG1JQ2hpZFdabVpYSXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGMxdHVZVzFsWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNZWFE2SUdOdmNIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsWDJ4bGJtZDBhRG9nWW5WbVptVnlMbWwwWlcxVGFYcGxDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFlYSnlZWGx6VzI1aGJXVmRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14aGREb2dZMjl3ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVmZiR1Z1WjNSb09pQmlkV1ptWlhJdWFYUmxiVk5wZW1VS0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlLVHNLSUNBZ0lHRjBkR0ZqYUY5blpXOXRaWFJ5ZVNoaWRXWm1aWEpmWjJWdmJXVjBjbmtzSUhabGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcE93b2dJQ0FnWVhSMFlXTm9YMmx1YzNSaGJtTmxaRjluWlc5dFpYUnllU2hpZFdabVpYSmZaMlZ2YldWMGNua3NJR2x1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1wT3dvZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0NrN0NpQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUlEMGdZblZtWm1WeVgyZGxiMjFsZEhKNU93b2dJQ0FnYldWemFDNXVaV1ZrYzFWd1pHRjBaU0E5SUhSeWRXVTdDbjBLWm5WdVkzUnBiMjRnWTNKbFlYUmxYMjFoZEdWeWFXRnNLSEJ5YjJkeVlXMHBJSHNLSUNBZ0lHTnZibk4wSUdselgzWnZiSFZ0WlNBOUlDSjJiMngxYldWa1lYUmhJaUJwYmlCd2NtOW5jbUZ0TG5WdWFXWnZjbTF6T3dvZ0lDQWdjbVYwZFhKdUlHNWxkeUJ0YjJRdVVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3b2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQmtaWE5sY21saGJHbDZaVjkxYm1sbWIzSnRjeWh3Y205bmNtRnRMblZ1YVdadmNtMXpLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklIQnliMmR5WVcwdWRtVnlkR1Y0WDNOdmRYSmpaU3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2djSEp2WjNKaGJTNW1jbUZuYldWdWRGOXpiM1Z5WTJVc0NpQWdJQ0FnSUNBZ2MybGtaVG9nYVhOZmRtOXNkVzFsSUQ4Z2JXOWtMa0poWTJ0VGFXUmxJRG9nYlc5a0xrUnZkV0pzWlZOcFpHVXNDaUFnSUNBZ0lDQWdkSEpoYm5Od1lYSmxiblE2SUhSeWRXVXNDaUFnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoY0hKdlozSmhiUzV2ZG1WeVpISmhkeTUyWVd4MVpTd0tJQ0FnSUNBZ0lDQmtaWEIwYUZkeWFYUmxPaUFoY0hKdlozSmhiUzUwY21GdWMzQmhjbVZ1WTNrdWRtRnNkV1VLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjl0WlhOb0tIQnliMmR5WVcwcElIc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNsOW5aVzl0WlhSeWVTQTlJRzVsZHlCdGIyUXVRblZtWm1WeVIyVnZiV1YwY25rb0tUc0tJQ0FnSUdOdmJuTjBJR1poWTJWeklEMGdibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb2NISnZaM0poYlM1bVlXTmxjeTUyWVd4MVpTd2dNU2s3Q2lBZ0lDQmhkSFJoWTJoZloyVnZiV1YwY25rb1luVm1abVZ5WDJkbGIyMWxkSEo1TENCd2NtOW5jbUZ0TG5abGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcE93b2dJQ0FnWTI5dWMzUWdiV0YwWlhKcFlXd2dQU0JqY21WaGRHVmZiV0YwWlhKcFlXd29jSEp2WjNKaGJTazdDaUFnSUNCamIyNXpkQ0J0WlhOb0lEMGdibVYzSUcxdlpDNU5aWE5vS0dKMVptWmxjbDluWlc5dFpYUnllU3dnYldGMFpYSnBZV3dwT3dvZ0lDQWdjSEp2WjNKaGJTNW1ZV05sY3k1dmJpZ29lQ2s5UG5zS0lDQWdJQ0FnSUNCdFpYTm9MbWRsYjIxbGRISjVMbk5sZEVsdVpHVjRLRzVsZHlCdGIyUXVRblZtWm1WeVFYUjBjbWxpZFhSbEtIZ3NJREVwS1RzS0lDQWdJSDBwT3dvZ0lDQWdjbVYwZFhKdUlHMWxjMmc3Q24wS1puVnVZM1JwYjI0Z1kzSmxZWFJsWDJsdWMzUmhibU5sWkY5dFpYTm9LSEJ5YjJkeVlXMHBJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjbDluWlc5dFpYUnllU0E5SUc1bGR5QnRiMlF1U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua29LVHNLSUNBZ0lHTnZibk4wSUdaaFkyVnpJRDBnYm1WM0lHMXZaQzVDZFdabVpYSkJkSFJ5YVdKMWRHVW9jSEp2WjNKaGJTNW1ZV05sY3k1MllXeDFaU3dnTVNrN0NpQWdJQ0JoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQndjbTluY21GdExuWmxjblJsZUdGeWNtRjVjeXdnWm1GalpYTXBPd29nSUNBZ1lYUjBZV05vWDJsdWMzUmhibU5sWkY5blpXOXRaWFJ5ZVNoaWRXWm1aWEpmWjJWdmJXVjBjbmtzSUhCeWIyZHlZVzB1YVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lrN0NpQWdJQ0JqYjI1emRDQnRZWFJsY21saGJDQTlJR055WldGMFpWOXRZWFJsY21saGJDaHdjbTluY21GdEtUc0tJQ0FnSUdOdmJuTjBJRzFsYzJnZ1BTQnVaWGNnYlc5a0xrMWxjMmdvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0J0WVhSbGNtbGhiQ2s3Q2lBZ0lDQndjbTluY21GdExtWmhZMlZ6TG05dUtDaDRLVDArZXdvZ0lDQWdJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua3VjMlYwU1c1a1pYZ29ibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb2VDd2dNU2twT3dvZ0lDQWdmU2s3Q2lBZ0lDQnlaWFIxY200Z2JXVnphRHNLZlFwbWRXNWpkR2x2YmlCbWFYSnpkQ2g0S1NCN0NpQWdJQ0J5WlhSMWNtNGdlRnRQWW1wbFkzUXVhMlY1Y3loNEtWc3dYVjA3Q24wS1puVnVZM1JwYjI0Z1kyOXVibVZqZEY5aGRIUnlhV0oxZEdWektHMWxjMmdzSUhWd1pHRjBaWElwSUhzS0lDQWdJR052Ym5OMElHbHVjM1JoYm1ObFgySjFabVpsY25NZ1BTQjdmVHNLSUNBZ0lHTnZibk4wSUdkbGIyMWxkSEo1WDJKMVptWmxjbk1nUFNCN2ZUc0tJQ0FnSUd4bGRDQm1hWEp6ZEY5cGJuTjBZVzVqWlY5aWRXWm1aWEk3Q2lBZ0lDQmpiMjV6ZENCeVpXRnNYMmx1YzNSaGJtTmxYMnhsYm1kMGFDQTlJRnNLSUNBZ0lDQWdJQ0F3Q2lBZ0lDQmRPd29nSUNBZ2JHVjBJR1pwY25OMFgyZGxiMjFsZEhKNVgySjFabVpsY2pzS0lDQWdJR052Ym5OMElISmxZV3hmWjJWdmJXVjBjbmxmYkdWdVozUm9JRDBnV3dvZ0lDQWdJQ0FnSURBS0lDQWdJRjA3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlaVjloYzNOcFoyNWZZblZtWm1WeWN5Z3BJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmhkSFJ5YVdKMWRHVnpJRDBnYldWemFDNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0dGMGRISnBZblYwWlhNcExtWnZja1ZoWTJnb0tHNWhiV1VwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHSjFabVpsY2lBOUlHRjBkSEpwWW5WMFpYTmJibUZ0WlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaWRXWm1aWEl1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWMzUmhibU5sWDJKMVptWmxjbk5iYm1GdFpWMGdQU0JpZFdabVpYSTdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc5dFpYUnllVjlpZFdabVpYSnpXMjVoYldWZElEMGdZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ1ptbHljM1JmYVc1emRHRnVZMlZmWW5WbVptVnlJRDBnWm1seWMzUW9hVzV6ZEdGdVkyVmZZblZtWm1WeWN5azdDaUFnSUNBZ0lDQWdhV1lnS0dacGNuTjBYMmx1YzNSaGJtTmxYMkoxWm1abGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpXRnNYMmx1YzNSaGJtTmxYMnhsYm1kMGFGc3dYU0E5SUdacGNuTjBYMmx1YzNSaGJtTmxYMkoxWm1abGNpNWpiM1Z1ZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptbHljM1JmWjJWdmJXVjBjbmxmWW5WbVptVnlJRDBnWm1seWMzUW9aMlZ2YldWMGNubGZZblZtWm1WeWN5azdDaUFnSUNBZ0lDQWdjbVZoYkY5blpXOXRaWFJ5ZVY5c1pXNW5kR2hiTUYwZ1BTQm1hWEp6ZEY5blpXOXRaWFJ5ZVY5aWRXWm1aWEl1WTI5MWJuUTdDaUFnSUNCOUNpQWdJQ0J5WlY5aGMzTnBaMjVmWW5WbVptVnljeWdwT3dvZ0lDQWdkWEJrWVhSbGNpNXZiaWdvVzI1aGJXVXNJRzVsZDE5MllXeDFaWE1zSUd4bGJtZDBhRjBwUFQ1N0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WbVptVnlJRDBnYldWemFDNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpXMjVoYldWZE93b2dJQ0FnSUNBZ0lHeGxkQ0JpZFdabVpYSnpPd29nSUNBZ0lDQWdJR3hsZENCeVpXRnNYMnhsYm1kMGFEc0tJQ0FnSUNBZ0lDQnNaWFFnYVhOZmFXNXpkR0Z1WTJVZ1BTQm1ZV3h6WlRzS0lDQWdJQ0FnSUNCcFppQW9ibUZ0WlNCcGJpQnBibk4wWVc1alpWOWlkV1ptWlhKektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjbk1nUFNCcGJuTjBZVzVqWlY5aWRXWm1aWEp6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1hWEp6ZEY5cGJuTjBZVzVqWlY5aWRXWm1aWEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxZV3hmYkdWdVozUm9JRDBnY21WaGJGOXBibk4wWVc1alpWOXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJR2x6WDJsdWMzUmhibU5sSUQwZ2RISjFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEp6SUQwZ1oyVnZiV1YwY25sZlluVm1abVZ5Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdabWx5YzNSZloyVnZiV1YwY25sZlluVm1abVZ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaV0ZzWDJ4bGJtZDBhQ0E5SUhKbFlXeGZaMlZ2YldWMGNubGZiR1Z1WjNSb093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvYkdWdVozUm9JRHc5SUhKbFlXeGZiR1Z1WjNSb1d6QmRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2k1elpYUW9ibVYzWDNaaGJIVmxjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2k1dVpXVmtjMVZ3WkdGMFpTQTlJSFJ5ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGMxOXBibk4wWVc1alpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1cGJuTjBZVzVqWlVOdmRXNTBJRDBnYkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeUxuUnZYM1Z3WkdGMFpTQTlJRzVsZDE5MllXeDFaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdGc2JGOW9ZWFpsWDNOaGJXVmZiR1Z1WjNSb0lEMGdUMkpxWldOMExuWmhiSFZsY3loaWRXWm1aWEp6S1M1bGRtVnllU2dvZUNrOVBuZ3VkRzlmZFhCa1lYUmxJQ1ltSUhndWRHOWZkWEJrWVhSbExteGxibWQwYUNBdklIZ3VhWFJsYlZOcGVtVWdQVDBnYkdWdVozUm9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0ZzYkY5b1lYWmxYM05oYldWZmJHVnVaM1JvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWE5mYVc1emRHRnVZMlVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV055WldGMFpWOXBibk4wWVc1alpXUmZaMlZ2YldWMGNua29iV1Z6YUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZmWVhOemFXZHVYMkoxWm1abGNuTW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpYTm9MbWRsYjIxbGRISjVMbWx1YzNSaGJtTmxRMjkxYm5RZ1BTQnVaWGRmZG1Gc2RXVnpMbXhsYm1kMGFDQXZJR0oxWm1abGNpNXBkR1Z0VTJsNlpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZqY21WaGRHVmZaMlZ2YldWMGNua29iV1Z6YUN3Z1luVm1abVZ5Y3l3Z2JXVnphQzVuWlc5dFpYUnllUzVwYm1SbGVDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WZllYTnphV2R1WDJKMVptWmxjbk1vS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdSbGMyVnlhV0ZzYVhwbFgzTmpaVzVsS0dSaGRHRXNJSE5qY21WbGJpa2dld29nSUNBZ1kyOXVjM1FnYzJObGJtVWdQU0J1WlhjZ2JXOWtMbE5qWlc1bEtDazdDaUFnSUNCelkyVnVaUzV6WTNKbFpXNGdQU0J6WTNKbFpXNDdDaUFnSUNCamIyNXpkQ0I3SUdOaGJuWmhjeUFnZlNBOUlITmpjbVZsYmpzS0lDQWdJR0ZrWkY5elkyVnVaU2hrWVhSaExuVjFhV1FzSUhOalpXNWxLVHNLSUNBZ0lITmpaVzVsTG5OalpXNWxYM1YxYVdRZ1BTQmtZWFJoTG5WMWFXUTdDaUFnSUNCelkyVnVaUzVtY25WemRIVnRRM1ZzYkdWa0lEMGdabUZzYzJVN0NpQWdJQ0J6WTJWdVpTNXdhWGhsYkdGeVpXRWdQU0JrWVhSaExuQnBlR1ZzWVhKbFlUc0tJQ0FnSUhOalpXNWxMbUpoWTJ0bmNtOTFibVJqYjJ4dmNpQTlJR1JoZEdFdVltRmphMmR5YjNWdVpHTnZiRzl5T3dvZ0lDQWdjMk5sYm1VdVkyeGxZWEp6WTJWdVpTQTlJR1JoZEdFdVkyeGxZWEp6WTJWdVpUc0tJQ0FnSUhOalpXNWxMblpwYzJsaWJHVWdQU0JrWVhSaExuWnBjMmxpYkdVN0NpQWdJQ0JqYjI1emRDQmpZVzFsY21FZ1BTQnVaWGNnVFdGcmFXVkRZVzFsY21Fb0tUc0tJQ0FnSUhOalpXNWxMbmRuYkY5allXMWxjbUVnUFNCallXMWxjbUU3Q2lBZ0lDQm1kVzVqZEdsdmJpQjFjR1JoZEdWZlkyRnRLR05oYldWeVlWOXRZWFJ5YVdObGN5a2dld29nSUNBZ0lDQWdJR052Ym5OMElGdDJhV1YzTENCd2NtOXFaV04wYVc5dUxDQnlaWE52YkhWMGFXOXVMQ0JsZVdWd2IzTmRJRDBnWTJGdFpYSmhYMjFoZEhKcFkyVnpPd29nSUNBZ0lDQWdJR05oYldWeVlTNTFjR1JoZEdWZmJXRjBjbWxqWlhNb2RtbGxkeXdnY0hKdmFtVmpkR2x2Yml3Z2NtVnpiMngxZEdsdmJpd2daWGxsY0c5ektUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpWOWpZVzBvWkdGMFlTNWpZVzFsY21FdWRtRnNkV1VwT3dvZ0lDQWdhV1lnS0dSaGRHRXVZMkZ0TTJSZmMzUmhkR1VwSUhzS0lDQWdJQ0FnSUNCaGRIUmhZMmhmTTJSZlkyRnRaWEpoS0dOaGJuWmhjeXdnWTJGdFpYSmhMQ0JrWVhSaExtTmhiVE5rWDNOMFlYUmxMQ0J6WTJWdVpTazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdSaGRHRXVZMkZ0WlhKaExtOXVLSFZ3WkdGMFpWOWpZVzBwT3dvZ0lDQWdmUW9nSUNBZ1pHRjBZUzV3Ykc5MGN5NW1iM0pGWVdOb0tDaHdiRzkwWDJSaGRHRXBQVDU3Q2lBZ0lDQWdJQ0FnWVdSa1gzQnNiM1FvYzJObGJtVXNJSEJzYjNSZlpHRjBZU2s3Q2lBZ0lDQjlLVHNLSUNBZ0lITmpaVzVsTG5OalpXNWxYMk5vYVd4a2NtVnVJRDBnWkdGMFlTNWphR2xzWkhKbGJpNXRZWEFvS0dOb2FXeGtLVDArWkdWelpYSnBZV3hwZW1WZmMyTmxibVVvWTJocGJHUXNJSE5qY21WbGJpa3BPd29nSUNBZ2NtVjBkWEp1SUhOalpXNWxPd3A5Q21aMWJtTjBhVzl1SUdSbGJHVjBaVjl3Ykc5MEtIQnNiM1FwSUhzS0lDQWdJR1JsYkdWMFpTQndiRzkwWDJOaFkyaGxXM0JzYjNRdWNHeHZkRjkxZFdsa1hUc0tJQ0FnSUdOdmJuTjBJSHNnY0dGeVpXNTBJQ0I5SUQwZ2NHeHZkRHNLSUNBZ0lHbG1JQ2h3WVhKbGJuUXBJSHNLSUNBZ0lDQWdJQ0J3WVhKbGJuUXVjbVZ0YjNabEtIQnNiM1FwT3dvZ0lDQWdmUW9nSUNBZ2NHeHZkQzVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQndiRzkwTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS2ZRcG1kVzVqZEdsdmJpQmtaV3hsZEdWZmRHaHlaV1ZmYzJObGJtVW9jMk5sYm1VcElIc0tJQ0FnSUdSbGJHVjBaU0J6WTJWdVpWOWpZV05vWlZ0elkyVnVaUzV6WTJWdVpWOTFkV2xrWFRzS0lDQWdJSE5qWlc1bExuTmpaVzVsWDJOb2FXeGtjbVZ1TG1admNrVmhZMmdvWkdWc1pYUmxYM1JvY21WbFgzTmpaVzVsS1RzS0lDQWdJSGRvYVd4bEtITmpaVzVsTG1Ob2FXeGtjbVZ1TG14bGJtZDBhQ0ErSURBcGV3b2dJQ0FnSUNBZ0lHUmxiR1YwWlY5d2JHOTBLSE5qWlc1bExtTm9hV3hrY21WdVd6QmRLVHNLSUNBZ0lIMEtmUXAzYVc1a2IzY3VWRWhTUlVVZ1BTQnRiMlE3Q21OdmJuTjBJSEJwZUdWc1VtRjBhVzh4SUQwZ2QybHVaRzkzTG1SbGRtbGpaVkJwZUdWc1VtRjBhVzhnZkh3Z01TNHdPd3BtZFc1amRHbHZiaUJ5Wlc1a1pYSmZjMk5sYm1Vb2MyTmxibVVzSUhCcFkydHBibWNnUFNCbVlXeHpaU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QmpZVzFsY21FZ0xDQnlaVzVrWlhKbGNpQWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOdmJuTjBJR05oYm5aaGN5QTlJSEpsYm1SbGNtVnlMbVJ2YlVWc1pXMWxiblE3Q2lBZ0lDQnBaaUFvSVdSdlkzVnRaVzUwTG1KdlpIa3VZMjl1ZEdGcGJuTW9ZMkZ1ZG1GektTa2dld29nSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NKRldFbFVTVTVISUZkSFRDSXBPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk4wWVhSbExuSmxjMlYwS0NrN0NpQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdVpHbHpjRzl6WlNncE93b2dJQ0FnSUNBZ0lHUmxiR1YwWlY5MGFISmxaVjl6WTJWdVpTaHpZMlZ1WlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPd29nSUNBZ2ZRb2dJQ0FnYVdZZ0tDRnpZMlZ1WlM1MmFYTnBZbXhsTG5aaGJIVmxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdVN0NpQWdJQ0I5Q2lBZ0lDQnlaVzVrWlhKbGNpNWhkWFJ2UTJ4bFlYSWdQU0J6WTJWdVpTNWpiR1ZoY25OalpXNWxPd29nSUNBZ1kyOXVjM1FnWVhKbFlTQTlJSE5qWlc1bExuQnBlR1ZzWVhKbFlTNTJZV3gxWlRzS0lDQWdJR2xtSUNoaGNtVmhLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXM2dzSUhrc0lIY3NJR2hkSUQwZ1lYSmxZUzV0WVhBb0tIUXBQVDUwSUM4Z2NHbDRaV3hTWVhScGJ6RXBPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZacFpYZHdiM0owS0hnc0lIa3NJSGNzSUdncE93b2dJQ0FnSUNBZ0lISmxibVJsY21WeUxuTmxkRk5qYVhOemIzSW9lQ3dnZVN3Z2R5d2dhQ2s3Q2lBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1YzJWMFUyTnBjM052Y2xSbGMzUW9kSEoxWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLSEJwWTJ0cGJtY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdWMyVjBRMnhsWVhKQmJIQm9ZU2d3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwUTJ4bFlYSkRiMnh2Y2lodVpYY2diVzlrTGtOdmJHOXlLREFwTENBd0xqQXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRFTnNaV0Z5UTI5c2IzSW9jMk5sYm1VdVltRmphMmR5YjNWdVpHTnZiRzl5TG5aaGJIVmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1Y21WdVpHVnlLSE5qWlc1bExDQmpZVzFsY21FcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlITmpaVzVsTG5OalpXNWxYMk5vYVd4a2NtVnVMbVYyWlhKNUtDaDRLVDArY21WdVpHVnlYM05qWlc1bEtIZ3NJSEJwWTJ0cGJtY3BLVHNLZlFwbWRXNWpkR2x2YmlCemRHRnlkRjl5Wlc1a1pYSnNiMjl3S0hSb2NtVmxYM05qWlc1bEtTQjdDaUFnSUNCamIyNXpkQ0I3SUdad2N5QWdmU0E5SUhSb2NtVmxYM05qWlc1bExuTmpjbVZsYmpzS0lDQWdJR052Ym5OMElIUnBiV1ZmY0dWeVgyWnlZVzFsSUQwZ01TQXZJR1p3Y3lBcUlERXdNREE3Q2lBZ0lDQnNaWFFnYkdGemRGOTBhVzFsWDNOMFlXMXdJRDBnY0dWeVptOXliV0Z1WTJVdWJtOTNLQ2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlaVzVrWlhKc2IyOXdLSFJwYldWemRHRnRjQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhVzFsYzNSaGJYQWdMU0JzWVhOMFgzUnBiV1ZmYzNSaGJYQWdQaUIwYVcxbFgzQmxjbDltY21GdFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JoYkd4ZmNtVnVaR1Z5WldRZ1BTQnlaVzVrWlhKZmMyTmxibVVvZEdoeVpXVmZjMk5sYm1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRnNiRjl5Wlc1a1pYSmxaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hoYzNSZmRHbHRaVjl6ZEdGdGNDQTlJSEJsY21admNtMWhibU5sTG01dmR5Z3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IzYVc1a2IzY3VjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS0hKbGJtUmxjbXh2YjNBcE93b2dJQ0FnZlFvZ0lDQWdjbVZ1WkdWeVgzTmpaVzVsS0hSb2NtVmxYM05qWlc1bEtUc0tJQ0FnSUhKbGJtUmxjbXh2YjNBb0tUc0tmUXBtZFc1amRHbHZiaUIwYUhKdmRIUnNaVjltZFc1amRHbHZiaWhtZFc1akxDQmtaV3hoZVNrZ2V3b2dJQ0FnYkdWMElIQnlaWFlnUFNBd093b2dJQ0FnY21WMGRYSnVJQ2d1TGk1aGNtZHpLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRzV2ZHlBOUlHNWxkeUJFWVhSbEtDa3VaMlYwVkdsdFpTZ3BPd29nSUNBZ0lDQWdJR2xtSUNodWIzY2dMU0J3Y21WMklENGdaR1ZzWVhrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGRpQTlJRzV2ZHpzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU1vTGk0dVlYSm5jeWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCMGFISmxaV3B6WDIxdlpIVnNaU2hqWVc1MllYTXNJR052Ylcwc0lIZHBaSFJvTENCb1pXbG5hSFFwSUhzS0lDQWdJR3hsZENCamIyNTBaWGgwSUQwZ1kyRnVkbUZ6TG1kbGRFTnZiblJsZUhRb0luZGxZbWRzTWlJc0lIc0tJQ0FnSUNBZ0lDQndjbVZ6WlhKMlpVUnlZWGRwYm1kQ2RXWm1aWEk2SUhSeWRXVUtJQ0FnSUgwcE93b2dJQ0FnYVdZZ0tDRmpiMjUwWlhoMEtTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKWFpXSkhUQ0F5TGpBZ2JtOTBJSE4xY0hCdmNuUmxaQ0JpZVNCaWNtOTNjMlZ5TENCbVlXeHNhVzVuSUdKaFkyc2dkRzhnVjJWaVIwd2dNUzR3SUNoV2IyeDFiV1VnY0d4dmRITWdkMmxzYkNCdWIzUWdkMjl5YXlraUtUc0tJQ0FnSUNBZ0lDQmpiMjUwWlhoMElEMGdZMkZ1ZG1GekxtZGxkRU52Ym5SbGVIUW9JbmRsWW1kc0lpd2dld29nSUNBZ0lDQWdJQ0FnSUNCd2NtVnpaWEoyWlVSeVlYZHBibWRDZFdabVpYSTZJSFJ5ZFdVS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJR2xtSUNnaFkyOXVkR1Y0ZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhKbGJtUmxjbVZ5SUQwZ2JtVjNJRzF2WkM1WFpXSkhURkpsYm1SbGNtVnlLSHNLSUNBZ0lDQWdJQ0JoYm5ScFlXeHBZWE02SUhSeWRXVXNDaUFnSUNBZ0lDQWdZMkZ1ZG1Gek9pQmpZVzUyWVhNc0NpQWdJQ0FnSUNBZ1kyOXVkR1Y0ZERvZ1kyOXVkR1Y0ZEN3S0lDQWdJQ0FnSUNCd2IzZGxjbEJ5WldabGNtVnVZMlU2SUNKb2FXZG9MWEJsY21admNtMWhibU5sSWdvZ0lDQWdmU2s3Q2lBZ0lDQnlaVzVrWlhKbGNpNXpaWFJEYkdWaGNrTnZiRzl5S0NJalptWm1abVptSWlrN0NpQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSUWFYaGxiRkpoZEdsdktIQnBlR1ZzVW1GMGFXOHhLVHNLSUNBZ0lISmxibVJsY21WeUxuTmxkRk5wZW1Vb2QybGtkR2dnTHlCd2FYaGxiRkpoZEdsdk1Td2dhR1ZwWjJoMElDOGdjR2w0Wld4U1lYUnBiekVwT3dvZ0lDQWdZMjl1YzNRZ2JXOTFjMlZmWTJGc2JHSmhZMnNnUFNBb2VDd2dlU2s5UG1OdmJXMHVibTkwYVdaNUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYlc5MWMyVndiM05wZEdsdmJqb2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtLSUNBZ0lDQWdJQ0FnSUNBZ1hRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ1kyOXVjM1FnYm05MGFXWjVYMjF2ZFhObFgzUm9jbTkwZEd4bFpDQTlJSFJvY205MGRHeGxYMloxYm1OMGFXOXVLRzF2ZFhObFgyTmhiR3hpWVdOckxDQTBNQ2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQnRiM1Z6WlcxdmRtVW9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQjJZWElnY21WamRDQTlJR05oYm5aaGN5NW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvS1RzS0lDQWdJQ0FnSUNCMllYSWdlQ0E5SUNobGRtVnVkQzVqYkdsbGJuUllJQzBnY21WamRDNXNaV1owS1NBcUlIQnBlR1ZzVW1GMGFXOHhPd29nSUNBZ0lDQWdJSFpoY2lCNUlEMGdLR1YyWlc1MExtTnNhV1Z1ZEZrZ0xTQnlaV04wTG5SdmNDa2dLaUJ3YVhobGJGSmhkR2x2TVRzS0lDQWdJQ0FnSUNCdWIzUnBabmxmYlc5MWMyVmZkR2h5YjNSMGJHVmtLSGdzSUhrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXMXZkbVVpTENCdGIzVnpaVzF2ZG1VcE93b2dJQ0FnWm5WdVkzUnBiMjRnYlc5MWMyVmtiM2R1S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0J0YjNWelpXUnZkMjQ2SUdWMlpXNTBMbUoxZEhSdmJuTUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJXOTFjMlZrYjNkdUlpd2diVzkxYzJWa2IzZHVLVHNLSUNBZ0lHWjFibU4wYVc5dUlHMXZkWE5sZFhBb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxkWEE2SUdWMlpXNTBMbUoxZEhSdmJuTUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJXOTFjMlYxY0NJc0lHMXZkWE5sZFhBcE93b2dJQ0FnWm5WdVkzUnBiMjRnZDJobFpXd29aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmpjbTlzYkRvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pYWmxiblF1WkdWc2RHRllMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMV1YyWlc1MExtUmxiSFJoV1FvZ0lDQWdJQ0FnSUNBZ0lDQmRDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnWlhabGJuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3Q2lBZ0lDQjlDaUFnSUNCallXNTJZWE11WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpZDJobFpXd2lMQ0IzYUdWbGJDazdDaUFnSUNCbWRXNWpkR2x2YmlCclpYbGtiM2R1S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyWlhsa2IzZHVPaUJsZG1WdWRDNWpiMlJsQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPd29nSUNBZ2ZRb2dJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbXRsZVdSdmQyNGlMQ0JyWlhsa2IzZHVLVHNLSUNBZ0lHWjFibU4wYVc5dUlHdGxlWFZ3S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyWlhsMWNEb2daWFpsYm5RdVkyOWtaUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnJaWGwxY0NJc0lHdGxlWFZ3S1RzS0lDQWdJR1oxYm1OMGFXOXVJR052Ym5SbGVIUnRaVzUxS0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyWlhsMWNEb2dJbVJsYkdWMFpWOXJaWGx6SWdvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pqYjI1MFpYaDBiV1Z1ZFNJc0lDaGxLVDArWlM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwS1RzS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSm1iMk4xYzI5MWRDSXNJR052Ym5SbGVIUnRaVzUxS1RzS0lDQWdJSEpsZEhWeWJpQnlaVzVrWlhKbGNqc0tmUXBtZFc1amRHbHZiaUJqY21WaGRHVmZjMk5sYm1Vb2QzSmhjSEJsY2l3Z1kyRnVkbUZ6TENCallXNTJZWE5mZDJsa2RHZ3NJSE5qWlc1bGN5d2dZMjl0YlN3Z2QybGtkR2dzSUdobGFXZG9kQ3dnWm5CekxDQjBaWGgwZFhKbFgyRjBiR0Z6WDI5aWN5a2dld29nSUNBZ1kyOXVjM1FnY21WdVpHVnlaWElnUFNCMGFISmxaV3B6WDIxdlpIVnNaU2hqWVc1MllYTXNJR052Ylcwc0lIZHBaSFJvTENCb1pXbG5hSFFwT3dvZ0lDQWdWRVZZVkZWU1JWOUJWRXhCVTFzd1hTQTlJSFJsZUhSMWNtVmZZWFJzWVhOZmIySnpPd29nSUNBZ2FXWWdLSEpsYm1SbGNtVnlLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdZMkZ0WlhKaElEMGdibVYzSUcxdlpDNVFaWEp6Y0dWamRHbDJaVU5oYldWeVlTZzBOU3dnTVN3Z01Dd2dNVEF3S1RzS0lDQWdJQ0FnSUNCallXMWxjbUV1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElITnBlbVVnUFNCdVpYY2diVzlrTGxabFkzUnZjaklvS1RzS0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1blpYUkVjbUYzYVc1blFuVm1abVZ5VTJsNlpTaHphWHBsS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3YVdOcmFXNW5YM1JoY21kbGRDQTlJRzVsZHlCdGIyUXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUW9jMmw2WlM1NExDQnphWHBsTG5rcE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhOamNtVmxiaUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVpYSXNDaUFnSUNBZ0lDQWdJQ0FnSUhCcFkydHBibWRmZEdGeVoyVjBMQW9nSUNBZ0lDQWdJQ0FnSUNCallXMWxjbUVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWndjeXdLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnVkbUZ6Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCamIyNXpkQ0IwYUhKbFpWOXpZMlZ1WlNBOUlHUmxjMlZ5YVdGc2FYcGxYM05qWlc1bEtITmpaVzVsY3l3Z2MyTnlaV1Z1S1RzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5aDBhSEpsWlY5elkyVnVaU2s3Q2lBZ0lDQWdJQ0FnYzNSaGNuUmZjbVZ1WkdWeWJHOXZjQ2gwYUhKbFpWOXpZMlZ1WlNrN0NpQWdJQ0FnSUNBZ1kyRnVkbUZ6WDNkcFpIUm9MbTl1S0NoM1gyZ3BQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhCcGVHVnNVbUYwYVc4Z1BTQnlaVzVrWlhKbGNpNW5aWFJRYVhobGJGSmhkR2x2S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZOcGVtVW9kMTlvV3pCZElDOGdjR2w0Wld4U1lYUnBieXdnZDE5b1d6RmRJQzhnY0dsNFpXeFNZWFJwYnlrN0NpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSGRoY201cGJtY2dQU0JuWlhSWFpXSkhURVZ5Y205eVRXVnpjMkZuWlNncE93b2dJQ0FnSUNBZ0lIZHlZWEJ3WlhJdVlYQndaVzVrUTJocGJHUW9kMkZ5Ym1sdVp5azdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdjMlYwWDNCcFkydHBibWRmZFc1cFptOXliWE1vYzJObGJtVXNJR3hoYzNSZmFXUXNJSEJwWTJ0cGJtY3NJSEJwWTJ0bFpGOXdiRzkwY3l3Z2NHeHZkSE1zSUdsa1gzUnZYM0JzYjNRcElIc0tJQ0FnSUhOalpXNWxMbU5vYVd4a2NtVnVMbVp2Y2tWaFkyZ29LSEJzYjNRc0lHbHVaR1Y0S1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhzZ2JXRjBaWEpwWVd3Z0lIMGdQU0J3Ykc5ME93b2dJQ0FnSUNBZ0lHTnZibk4wSUhzZ2RXNXBabTl5YlhNZ0lIMGdQU0J0WVhSbGNtbGhiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NHbGphMmx1WnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjeTV2WW1wbFkzUmZhV1F1ZG1Gc2RXVWdQU0JzWVhOMFgybGtJQ3NnYVc1a1pYZzdDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6TG5CcFkydHBibWN1ZG1Gc2RXVWdQU0IwY25WbE93b2dJQ0FnSUNBZ0lDQWdJQ0J0WVhSbGNtbGhiQzVpYkdWdVpHbHVaeUE5SUcxdlpDNU9iMEpzWlc1a2FXNW5Pd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6TG5CcFkydHBibWN1ZG1Gc2RXVWdQU0JtWVd4elpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFpYSnBZV3d1WW14bGJtUnBibWNnUFNCdGIyUXVUbTl5YldGc1FteGxibVJwYm1jN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnZFc1cFptOXliWE11YjJKcVpXTjBYMmxrTG5aaGJIVmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hV1FnYVc0Z2NHbGphMlZrWDNCc2IzUnpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Ykc5MGN5NXdkWE5vS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiRzkwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnBZMnRsWkY5d2JHOTBjMXRwWkYwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXUmZkRzlmY0d4dmRGdHBaRjBnUFNCd2JHOTBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlNrN0NpQWdJQ0JzWlhRZ2JtVjRkRjlwWkNBOUlHeGhjM1JmYVdRZ0t5QnpZMlZ1WlM1amFHbHNaSEpsYmk1c1pXNW5kR2c3Q2lBZ0lDQnpZMlZ1WlM1elkyVnVaVjlqYUdsc1pISmxiaTVtYjNKRllXTm9LQ2h6WTJWdVpTazlQbnNLSUNBZ0lDQWdJQ0J1WlhoMFgybGtJRDBnYzJWMFgzQnBZMnRwYm1kZmRXNXBabTl5YlhNb2MyTmxibVVzSUc1bGVIUmZhV1FzSUhCcFkydHBibWNzSUhCcFkydGxaRjl3Ykc5MGN5d2djR3h2ZEhNc0lHbGtYM1J2WDNCc2IzUXBPd29nSUNBZ2ZTazdDaUFnSUNCeVpYUjFjbTRnYm1WNGRGOXBaRHNLZlFwbWRXNWpkR2x2YmlCd2FXTnJYMjVoZEdsMlpTaHpZMlZ1WlN3Z2VDd2dlU3dnZHl3Z2FDa2dld29nSUNBZ1kyOXVjM1FnZXlCeVpXNWtaWEpsY2lBc0lIQnBZMnRwYm1kZmRHRnlaMlYwSUNCOUlEMGdjMk5sYm1VdWMyTnlaV1Z1T3dvZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIQnBZMnRwYm1kZmRHRnlaMlYwS1RzS0lDQWdJSE5sZEY5d2FXTnJhVzVuWDNWdWFXWnZjbTF6S0hOalpXNWxMQ0F4TENCMGNuVmxLVHNLSUNBZ0lISmxibVJsY2w5elkyVnVaU2h6WTJWdVpTd2dkSEoxWlNrN0NpQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSU1pXNWtaWEpVWVhKblpYUW9iblZzYkNrN0NpQWdJQ0JqYjI1emRDQnVZbmwwWlhNZ1BTQjNJQ29nYUNBcUlEUTdDaUFnSUNCamIyNXpkQ0J3YVhobGJGOWllWFJsY3lBOUlHNWxkeUJWYVc1ME9FRnljbUY1S0c1aWVYUmxjeWs3Q2lBZ0lDQnlaVzVrWlhKbGNpNXlaV0ZrVW1WdVpHVnlWR0Z5WjJWMFVHbDRaV3h6S0hCcFkydHBibWRmZEdGeVoyVjBMQ0I0TENCNUxDQjNMQ0JvTENCd2FYaGxiRjlpZVhSbGN5azdDaUFnSUNCamIyNXpkQ0J3YVdOclpXUmZjR3h2ZEhNZ1BTQjdmVHNLSUNBZ0lHTnZibk4wSUhCcFkydGxaRjl3Ykc5MGMxOWhjbkpoZVNBOUlGdGRPd29nSUNBZ1kyOXVjM1FnY21WcGJuUmxjbkJ5WlhSZmRtbGxkeUE5SUc1bGR5QkVZWFJoVm1sbGR5aHdhWGhsYkY5aWVYUmxjeTVpZFdabVpYSXBPd29nSUNBZ1ptOXlLR3hsZENCcElEMGdNRHNnYVNBOElIQnBlR1ZzWDJKNWRHVnpMbXhsYm1kMGFDQXZJRFE3SUdrckt5bDdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXUWdQU0J5WldsdWRHVnljSEpsZEY5MmFXVjNMbWRsZEZWcGJuUXhOaWhwSUNvZ05DazdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXNWtaWGdnUFNCeVpXbHVkR1Z5Y0hKbGRGOTJhV1YzTG1kbGRGVnBiblF4TmlocElDb2dOQ0FySURJcE93b2dJQ0FnSUNBZ0lIQnBZMnRsWkY5d2JHOTBjMTloY25KaGVTNXdkWE5vS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0Q2lBZ0lDQWdJQ0FnWFNrN0NpQWdJQ0FnSUNBZ2NHbGphMlZrWDNCc2IzUnpXMmxrWFNBOUlHbHVaR1Y0T3dvZ0lDQWdmUW9nSUNBZ1kyOXVjM1FnY0d4dmRITWdQU0JiWFRzS0lDQWdJR052Ym5OMElHbGtYM1J2WDNCc2IzUWdQU0I3ZlRzS0lDQWdJSE5sZEY5d2FXTnJhVzVuWDNWdWFXWnZjbTF6S0hOalpXNWxMQ0F3TENCbVlXeHpaU3dnY0dsamEyVmtYM0JzYjNSekxDQndiRzkwY3l3Z2FXUmZkRzlmY0d4dmRDazdDaUFnSUNCamIyNXpkQ0J3YVdOclpXUmZjR3h2ZEhOZmJXRjBjbWw0SUQwZ2NHbGphMlZrWDNCc2IzUnpYMkZ5Y21GNUxtMWhjQ2dvVzJsa0xDQnBibVJsZUYwcFBUNTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NDQTlJR2xrWDNSdlgzQnNiM1JiYVdSZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJSEFnUHlCd0xuQnNiM1JmZFhWcFpDQTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNENpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUgwcE93b2dJQ0FnWTI5dWMzUWdjR3h2ZEY5dFlYUnlhWGdnUFNCN0NpQWdJQ0FnSUNBZ1pHRjBZVG9nY0dsamEyVmtYM0JzYjNSelgyMWhkSEpwZUN3S0lDQWdJQ0FnSUNCemFYcGxPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lIY3NDaUFnSUNBZ0lDQWdJQ0FnSUdnS0lDQWdJQ0FnSUNCZENpQWdJQ0I5T3dvZ0lDQWdjbVYwZFhKdUlGc0tJQ0FnSUNBZ0lDQndiRzkwWDIxaGRISnBlQ3dLSUNBZ0lDQWdJQ0J3Ykc5MGN3b2dJQ0FnWFRzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDJOc2IzTmxjM1FvYzJObGJtVXNJSGg1TENCeVlXNW5aU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QndhV05yYVc1blgzUmhjbWRsZENBZ2ZTQTlJSE5qWlc1bExuTmpjbVZsYmpzS0lDQWdJR052Ym5OMElIc2dkMmxrZEdnZ0xDQm9aV2xuYUhRZ0lIMGdQU0J3YVdOcmFXNW5YM1JoY21kbGREc0tJQ0FnSUdsbUlDZ2hLREV1TUNBOFBTQjRlVnN3WFNBOFBTQjNhV1IwYUNBbUppQXhMakFnUEQwZ2VIbGJNVjBnUEQwZ2FHVnBaMmgwS1NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmUW9nSUNBZ1kyOXVjM1FnZURBZ1BTQk5ZWFJvTG0xaGVDZ3hMQ0I0ZVZzd1hTQXRJSEpoYm1kbEtUc0tJQ0FnSUdOdmJuTjBJSGt3SUQwZ1RXRjBhQzV0WVhnb01Td2dlSGxiTVYwZ0xTQnlZVzVuWlNrN0NpQWdJQ0JqYjI1emRDQjRNU0E5SUUxaGRHZ3ViV2x1S0hkcFpIUm9MQ0JOWVhSb0xtWnNiMjl5S0hoNVd6QmRJQ3NnY21GdVoyVXBLVHNLSUNBZ0lHTnZibk4wSUhreElEMGdUV0YwYUM1dGFXNG9hR1ZwWjJoMExDQk5ZWFJvTG1ac2IyOXlLSGg1V3pGZElDc2djbUZ1WjJVcEtUc0tJQ0FnSUdOdmJuTjBJR1I0SUQwZ2VERWdMU0I0TURzS0lDQWdJR052Ym5OMElHUjVJRDBnZVRFZ0xTQjVNRHNLSUNBZ0lHTnZibk4wSUZ0d2JHOTBYMlJoZEdFc0lGOWRJRDBnY0dsamExOXVZWFJwZG1Vb2MyTmxibVVzSUhnd0xDQjVNQ3dnWkhnc0lHUjVLVHNLSUNBZ0lHTnZibk4wSUhCc2IzUmZiV0YwY21sNElEMGdjR3h2ZEY5a1lYUmhMbVJoZEdFN0NpQWdJQ0JzWlhRZ2JXbHVYMlJwYzNRZ1BTQnlZVzVuWlNCZUlESTdDaUFnSUNCc1pYUWdjMlZzWldOMGFXOXVJRDBnV3dvZ0lDQWdJQ0FnSUc1MWJHd3NDaUFnSUNBZ0lDQWdNQW9nSUNBZ1hUc0tJQ0FnSUdOdmJuTjBJSGdnUFNCNGVWc3dYU0FySURFZ0xTQjRNRHNLSUNBZ0lHTnZibk4wSUhrZ1BTQjRlVnN4WFNBcklERWdMU0I1TURzS0lDQWdJR3hsZENCd2FXNWtaWGdnUFNBd093b2dJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Uc2dhU0E4UFNCa2VEc2dhU3NyS1hzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdvZ1BTQXhPeUJxSUR3OUlHUjRPeUJxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmtJRDBnZUNBdElHa2dYaUF5SUNzZ0tIa2dMU0JxS1NCZUlESTdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRnR3Ykc5MFgzVjFhV1FzSUdsdVpHVjRYU0E5SUhCc2IzUmZiV0YwY21sNFczQnBibVJsZUYwN0NpQWdJQ0FnSUNBZ0lDQWdJSEJwYm1SbGVDQTlJSEJwYm1SbGVDQXJJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrSUR3Z2JXbHVYMlJwYzNRZ0ppWWdjR3h2ZEY5MWRXbGtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVc1ZlpHbHpkQ0E5SUdRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeGxZM1JwYjI0Z1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0d4dmRGOTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSE5sYkdWamRHbHZianNLZlFwbWRXNWpkR2x2YmlCd2FXTnJYM052Y25SbFpDaHpZMlZ1WlN3Z2VIa3NJSEpoYm1kbEtTQjdDaUFnSUNCamIyNXpkQ0I3SUhCcFkydHBibWRmZEdGeVoyVjBJQ0I5SUQwZ2MyTmxibVV1YzJOeVpXVnVPd29nSUNBZ1kyOXVjM1FnZXlCM2FXUjBhQ0FzSUdobGFXZG9kQ0FnZlNBOUlIQnBZMnRwYm1kZmRHRnlaMlYwT3dvZ0lDQWdhV1lnS0NFb01TNHdJRHc5SUhoNVd6QmRJRHc5SUhkcFpIUm9JQ1ltSURFdU1DQThQU0I0ZVZzeFhTQThQU0JvWldsbmFIUXBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUNpQWdJQ0JqYjI1emRDQjRNQ0E5SUUxaGRHZ3ViV0Y0S0RFc0lIaDVXekJkSUMwZ2NtRnVaMlVwT3dvZ0lDQWdZMjl1YzNRZ2VUQWdQU0JOWVhSb0xtMWhlQ2d4TENCNGVWc3hYU0F0SUhKaGJtZGxLVHNLSUNBZ0lHTnZibk4wSUhneElEMGdUV0YwYUM1dGFXNG9kMmxrZEdnc0lFMWhkR2d1Wm14dmIzSW9lSGxiTUYwZ0t5QnlZVzVuWlNrcE93b2dJQ0FnWTI5dWMzUWdlVEVnUFNCTllYUm9MbTFwYmlob1pXbG5hSFFzSUUxaGRHZ3VabXh2YjNJb2VIbGJNVjBnS3lCeVlXNW5aU2twT3dvZ0lDQWdZMjl1YzNRZ1pIZ2dQU0I0TVNBdElIZ3dPd29nSUNBZ1kyOXVjM1FnWkhrZ1BTQjVNU0F0SUhrd093b2dJQ0FnWTI5dWMzUWdXM0JzYjNSZlpHRjBZU3dnYzJWc1pXTjBaV1JkSUQwZ2NHbGphMTl1WVhScGRtVW9jMk5sYm1Vc0lIZ3dMQ0I1TUN3Z1pIZ3NJR1I1S1RzS0lDQWdJR2xtSUNoelpXeGxZM1JsWkM1c1pXNW5kR2dnUFQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmJYVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEJzYjNSZmJXRjBjbWw0SUQwZ2NHeHZkRjlrWVhSaExtUmhkR0U3Q2lBZ0lDQmpiMjV6ZENCa2FYTjBZVzVqWlhNZ1BTQnpaV3hsWTNSbFpDNXRZWEFvS0hncFBUNXlZVzVuWlNCZUlESXBPd29nSUNBZ1kyOXVjM1FnZUNBOUlIaDVXekJkSUNzZ01TQXRJSGd3T3dvZ0lDQWdZMjl1YzNRZ2VTQTlJSGg1V3pGZElDc2dNU0F0SUhrd093b2dJQ0FnYkdWMElIQnBibVJsZUNBOUlEQTdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQXhPeUJwSUR3OUlHUjRPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FpQTlJREU3SUdvZ1BEMGdaSGc3SUdvckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1FnUFNCNElDMGdhU0JlSURJZ0t5QW9lU0F0SUdvcElGNGdNanNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnVzNCc2IzUmZkWFZwWkN3Z2FXNWtaWGhkSUQwZ2NHeHZkRjl0WVhSeWFYaGJjR2x1WkdWNFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnY0dsdVpHVjRJRDBnY0dsdVpHVjRJQ3NnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NHeHZkRjlwYm1SbGVDQTlJSE5sYkdWamRHVmtMbVpwYm1SSmJtUmxlQ2dvZUNrOVBuaGJNRjB1Y0d4dmRGOTFkV2xrSUQwOUlIQnNiM1JmZFhWcFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdiRzkwWDJsdVpHVjRJRDQ5SURBZ0ppWWdaQ0E4SUdScGMzUmhibU5sYzF0d2JHOTBYMmx1WkdWNFhTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVnpXM0JzYjNSZmFXNWtaWGhkSUQwZ1pEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhOdmNuUmxaRjlwYm1ScFkyVnpJRDBnUVhKeVlYa3Vabkp2YlNoQmNuSmhlU2hrYVhOMFlXNWpaWE11YkdWdVozUm9LUzVyWlhsektDa3BMbk52Y25Rb0tHRXNJR0lwUFQ1a2FYTjBZVzVqWlhOYllWMGdQQ0JrYVhOMFlXNWpaWE5iWWwwZ1B5QXRNU0E2SUdScGMzUmhibU5sYzF0aVhTQThJR1JwYzNSaGJtTmxjMXRoWFNCOElEQXBPd29nSUNBZ2NtVjBkWEp1SUhOdmNuUmxaRjlwYm1ScFkyVnpMbTFoY0Nnb2FXUjRLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnR3Ykc5MExDQnBibVJsZUYwZ1BTQnpaV3hsWTNSbFpGdHBaSGhkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1F1Y0d4dmRGOTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUFvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDI1aGRHbDJaVjkxZFdsa0tITmpaVzVsTENCNExDQjVMQ0IzTENCb0tTQjdDaUFnSUNCamIyNXpkQ0JiWHl3Z2NHbGphMlZrWDNCc2IzUnpYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNExDQjVMQ0IzTENCb0tUc0tJQ0FnSUhKbGRIVnliaUJ3YVdOclpXUmZjR3h2ZEhNdWJXRndLQ2hiY0N3Z2FXNWtaWGhkS1QwK1d3b2dJQ0FnSUNBZ0lDQWdJQ0J3TG5Cc2IzUmZkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnS0lDQWdJQ0FnSUNCZEtUc0tmUXBtZFc1amRHbHZiaUJ3YVdOclgyNWhkR2wyWlY5dFlYUnlhWGdvYzJObGJtVXNJSGdzSUhrc0lIY3NJR2dwSUhzS0lDQWdJR052Ym5OMElGdHRZWFJ5YVhnc0lGOWRJRDBnY0dsamExOXVZWFJwZG1Vb2MyTmxibVVzSUhnc0lIa3NJSGNzSUdncE93b2dJQ0FnY21WMGRYSnVJRzFoZEhKcGVEc0tmUXBtZFc1amRHbHZiaUJ5WldkcGMzUmxjbDl3YjNCMWNDaHdiM0IxY0N3Z2MyTmxibVVzSUhCc2IzUnpYM1J2WDNCcFkyc3NJR05oYkd4aVlXTnJLU0I3Q2lBZ0lDQnBaaUFvSVhOalpXNWxJSHg4SUNGelkyVnVaUzV6WTNKbFpXNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNpQWdJQ0JqYjI1emRDQjdJR05oYm5aaGN5QWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXUnZkMjRpTENBb1pYWmxiblFwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLQ0Z3YjNCMWNDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9Jbk5vYjNjaUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCd2IzQjFjQzVqYkdGemMweHBjM1F1WVdSa0tDSnphRzkzSWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIQnZjSFZ3TG5OMGVXeGxMbXhsWm5RZ1BTQmxkbVZ1ZEM1d1lXZGxXQ0FySUNKd2VDSTdDaUFnSUNBZ0lDQWdjRzl3ZFhBdWMzUjViR1V1ZEc5d0lEMGdaWFpsYm5RdWNHRm5aVmtnS3lBaWNIZ2lPd29nSUNBZ0lDQWdJR052Ym5OMElGdDRMQ0I1WFNBOUlGZEhURTFoYTJsbExtVjJaVzUwTW5OalpXNWxYM0JwZUdWc0tITmpaVzVsTENCbGRtVnVkQ2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXMThzSUhCcFkydHpYU0E5SUZkSFRFMWhhMmxsTG5CcFkydGZibUYwYVhabEtITmpaVzVsTENCNExDQjVMQ0F4TENBeEtUc0tJQ0FnSUNBZ0lDQnBaaUFvY0dsamEzTXViR1Z1WjNSb0lEMDlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czQnNiM1FzSUdsdVpHVjRYU0E5SUhCcFkydHpXekJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0d4dmRITmZkRzlmY0dsamF5NW9ZWE1vY0d4dmRDNXdiRzkwWDNWMWFXUXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnlaWE4xYkhRZ1BTQmpZV3hzWW1GamF5aHdiRzkwTENCcGJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhKbGMzVnNkQ0E5UFQwZ0luTjBjbWx1WnlJZ2ZId2djbVZ6ZFd4MElHbHVjM1JoYm1ObGIyWWdVM1J5YVc1bktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2RYQXVhVzV1WlhKVVpYaDBJRDBnY21WemRXeDBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNCMWNDNXBibTVsY2toVVRVd2dQU0J5WlhOMWJIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NKemFHOTNJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU2s3Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWEyVjVkWEFpTENBb1pYWmxiblFwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtdGxlU0E5UFQwZ0lrVnpZMkZ3WlNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2RYQXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ2ljMmh2ZHlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwcE93cDlDbmRwYm1SdmR5NVhSMHdnUFNCN0NpQWdJQ0JrWlhObGNtbGhiR2w2WlY5elkyVnVaU3dLSUNBZ0lIUm9jbVZsYW5OZmJXOWtkV3hsTEFvZ0lDQWdjM1JoY25SZmNtVnVaR1Z5Ykc5dmNDd0tJQ0FnSUdSbGJHVjBaVjl3Ykc5MGN5d0tJQ0FnSUdsdWMyVnlkRjl3Ykc5MExBb2dJQ0FnWm1sdVpGOXdiRzkwY3l3S0lDQWdJR1JsYkdWMFpWOXpZMlZ1WlN3S0lDQWdJR1pwYm1SZmMyTmxibVVzQ2lBZ0lDQnpZMlZ1WlY5allXTm9aU3dLSUNBZ0lIQnNiM1JmWTJGamFHVXNDaUFnSUNCa1pXeGxkR1ZmYzJObGJtVnpMQW9nSUNBZ1kzSmxZWFJsWDNOalpXNWxMQW9nSUNBZ1pYWmxiblF5YzJObGJtVmZjR2w0Wld3c0NpQWdJQ0J2Ymw5dVpYaDBYMmx1YzJWeWRBcDlPd3BsZUhCdmNuUWdleUJrWlhObGNtbGhiR2w2WlY5elkyVnVaU0JoY3lCa1pYTmxjbWxoYkdsNlpWOXpZMlZ1WlN3Z2RHaHlaV1ZxYzE5dGIyUjFiR1VnWVhNZ2RHaHlaV1ZxYzE5dGIyUjFiR1VzSUhOMFlYSjBYM0psYm1SbGNteHZiM0FnWVhNZ2MzUmhjblJmY21WdVpHVnliRzl2Y0N3Z1pHVnNaWFJsWDNCc2IzUnpJR0Z6SUdSbGJHVjBaVjl3Ykc5MGN5d2dhVzV6WlhKMFgzQnNiM1FnWVhNZ2FXNXpaWEowWDNCc2IzUXNJR1pwYm1SZmNHeHZkSE1nWVhNZ1ptbHVaRjl3Ykc5MGN5d2daR1ZzWlhSbFgzTmpaVzVsSUdGeklHUmxiR1YwWlY5elkyVnVaU3dnWm1sdVpGOXpZMlZ1WlNCaGN5Qm1hVzVrWDNOalpXNWxMQ0J6WTJWdVpWOWpZV05vWlNCaGN5QnpZMlZ1WlY5allXTm9aU3dnY0d4dmRGOWpZV05vWlNCaGN5QndiRzkwWDJOaFkyaGxMQ0JrWld4bGRHVmZjMk5sYm1WeklHRnpJR1JsYkdWMFpWOXpZMlZ1WlhNc0lHTnlaV0YwWlY5elkyVnVaU0JoY3lCamNtVmhkR1ZmYzJObGJtVXNJR1YyWlc1ME1uTmpaVzVsWDNCcGVHVnNJR0Z6SUdWMlpXNTBNbk5qWlc1bFgzQnBlR1ZzTENCdmJsOXVaWGgwWDJsdWMyVnlkQ0JoY3lCdmJsOXVaWGgwWDJsdWMyVnlkQ0I5T3dwbGVIQnZjblFnZXlCeVpXNWtaWEpmYzJObGJtVWdZWE1nY21WdVpHVnlYM05qWlc1bElIMDdDbVY0Y0c5eWRDQjdJSEJwWTJ0ZmJtRjBhWFpsSUdGeklIQnBZMnRmYm1GMGFYWmxJSDA3Q21WNGNHOXlkQ0I3SUhCcFkydGZZMnh2YzJWemRDQmhjeUJ3YVdOclgyTnNiM05sYzNRZ2ZUc0taWGh3YjNKMElIc2djR2xqYTE5emIzSjBaV1FnWVhNZ2NHbGphMTl6YjNKMFpXUWdmVHNLWlhod2IzSjBJSHNnY0dsamExOXVZWFJwZG1WZmRYVnBaQ0JoY3lCd2FXTnJYMjVoZEdsMlpWOTFkV2xrSUgwN0NtVjRjRzl5ZENCN0lIQnBZMnRmYm1GMGFYWmxYMjFoZEhKcGVDQmhjeUJ3YVdOclgyNWhkR2wyWlY5dFlYUnlhWGdnZlRzS1pYaHdiM0owSUhzZ2NtVm5hWE4wWlhKZmNHOXdkWEFnWVhNZ2NtVm5hWE4wWlhKZmNHOXdkWEFnZlRzS0NnPT1gOwogICAgICAgICAgICByZXR1cm4gaW1wb3J0KEpTU0VSVkVfSU1QT1JUU1snY2M0YzZhYTZhMWYwNmExYjUwMTNiY2EwMTcwMmYzNmExODRjMDQzOS13Z2xtYWtpZS5qcyddKTsKICAgICAgICB9KSgpLnRoZW4oV0dMID0+IHsKICAgIC8vIHdlbGwuLi4uIG5vdCBuaWNlLCBidXQgY2FuJ3QgZGVhbCB3aXRoIHRoZSBgUHJvbWlzZWAgaW4gYWxsIHRoZSBvdGhlciBmdW5jdGlvbnMKICAgIHdpbmRvdy5XR0xNYWtpZSA9IFdHTAogICAgV0dMLmNyZWF0ZV9zY2VuZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjkiXScpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjEwIl0nKSwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxMzE4NDk0MTgwMDg1MjA0OTYxJyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnNjQwNzk5MTAzMjQ0MTk2NDU0MScpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzEzNjkxNTAwMDc0ODgwMzQzMDUxJyksIDgwMCwgNjAwLCAzMC4wLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzgxNDU4NDY4ODcxODM2NjEzODEnKSkKICAgIF9fbG9va3VwX2ludGVycG9sYXRlZCgnODgzMTE4ODA4OTI3NzQ3NDE3MicpLm5vdGlmeSh0cnVlKQp9KQrZQS9ob21lL3J1bm5lci93b3JrL01ha2llLmpsL01ha2llLmpsL1dHTE1ha2llL3NyYy90aHJlZV9wbG90LmpsOjU0qG1zZ190eXBloTLIAXZrkscsapPZJDE4YjM0MTVhLTZhNmEtNGU4NS05Y2E3LTU0NDcxNzcwNmUwOICjc3VigqdwYXlsb2FkyAEuZpOBtDE3MTY3MjM1NDQ3MTE5MTA0NTQ2xxVotDE2MzIyMjMwODA4OTMwMTk2NjI12b8oKG5vZGUpID0+IHsKICAgIG5vZGVbJ29uaW5wdXQnXSA9IChldmVudCk9PiB7CiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzE3MTY3MjM1NDQ3MTE5MTA0NTQ2Jykubm90aWZ5KHBhcnNlSW50KGV2ZW50LnNyY0VsZW1lbnQudmFsdWUpKQp9Cn0pKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWpzY2FsbC1pZD0iNyJdJykpO9k8L2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3pHZWZrL3NyYy93aWRnZXRzLmpsOjY2qG1zZ190eXBloTKobXNnX3R5cGWhOcguzmuSxyxqk9kkMThiMzQxNWEtNmE2YS00ZTg1LTljYTctNTQ0NzE3NzA2ZTA4gKNzdWKCp3BheWxvYWTILoZmk4G0MTQwOTgzNTA4ODQ4ODM5ODcwNjWKoTOWx3NrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXNkU4PHaRfz+iaWS0MTM4MDMxNzI0MzE3MTgyMTc2MzSobXNnX3R5cGWhMMgCC2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAXhxcNPmy4BT8LY0s/UWIrPTZFODwScS0+oZjtPmR/fT/62Zo+1TpuP8AH6z5y6zw/nFlkP+xnFD+FoI0+MSP+PnTDfT+tccg+AnNUPwUYoz4aw+w+V1dgP3HoOj9mJqk+yzuUPr28ST92kX8/E1z8Poez1D1p2Nk+KF5MPVUKqD7zcm4/YZxZP1mvcT5zpAQ/j5SMPhGwxj4sAt0+7NDJPucUfz+rzCA+m30TP8VWGT/aVPE+EOdJPlf7Uz87ijI/VYKaPnjZbD/Ufpw+Rd4yP874ej+WQuk+N182P/uohz6hv2I/0779PriWAj/oskM/8yTgPq3O9D5qD18/2BE/PyWAND9/52k/akP3PqGZOj8UqEs+xAcpP2oD4T5W8z4+dIobP/3qhT7ZNg8/Ssm6PZvgrD0qpzQ/wlvAPlY6TD9o1sk+eAewPfSX3T1+1SI+XdyFPg7RGz+3sNw89Q/SPcngDD8wFzo+sJQmP0DYfj+jx/E+JLCWPnjwNT9SGjs/APxtPi+2Wz9T5m8/YXH/PqJpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwx6ZrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAQEAAAIA/omlkszg0NjY4NDg1MjM4MTYwOTQ3OTOobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWQDomlktDE1MjgxMzM1ODgwNzEzMDA0ODYxqG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTOiaWSzODk3Mjc5MDUyNjkwMjQ3MzY4OKhtc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKEzomlkszQwNzQ3NzYxMDQ4MDMwMjc4OTKobXNnX3R5cGWhMKE0lsdza5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSqmNvbG9ycmFuZ2XXF1x0vTpQEn0/omlktDEzODAzMTcyNDMxNzE4MjE3NjM0qG1zZ190eXBloTDIAgtrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKtdW5pZm9ybV9jb2xvcpLXFQoAAAAKAAAAyAGQF87yLz/tg78++SB1PYaFojx0LE8/j3l0P6IFhD6HQbw+5g0xP+1Liz5GsjM9m39WPzRNSj8jzoQ+S8tSP8l99D7Kfs4+YijnPi+NFT+Pj7I+JdsvPnEF4z6IGD0+SLBmP7Q9Jj6QOhI/42KxPWcyhD4uPWs/6syRPlpJNT7XaDY+Gc5jP9pQUT/qfVM/ayscP/a+eT/l+Wg/sXUvPxL/cj2O8z0/Rge2PghKGD/mk4g+ITfsPgzAWT8euXQ+Th1HP6LyID9/63o/lEx8P4S20Dsw9i4/UBJ9P+7O6T7omMc99e95PjeIkT5jwTo/c5wLP4Frdj7mhLI+4zLJPtW9ZT5cuUg/Gb/yPgn3UT8VGmU+FsBBPqHEMj6rR1U/hKYYPmaPnT7e404+pT5GPjYJbT9+voA9H3R6P5DLWD/dARk/Mvd1P5mNGT9hr7Y+x+5FPV1U2j45D2Y/49uNPu74Fz+GFnk9PdslPlYhGT+q2+8+5cwAP+DvJD7Y8Y0+XHS9Osqhdj9ukew+9TFaP9Uucj+iaWS0MTM4MDMxNzI0MzE3MTgyMTc2MzSobXNnX3R5cGWhMMema5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIBAAACAP6JpZLM4NDY2ODQ4NTIzODE2MDk0NzkzqG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkBKJpZLQxNTI4MTMzNTg4MDcxMzAwNDg2Mahtc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKE0omlkszg5NzI3OTA1MjY5MDI0NzM2ODiobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWShNKJpZLM0MDc0Nzc2MTA0ODAzMDI3ODkyqG1zZ190eXBloTChMZbHc2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xe8vI87XUR0P6JpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwyAILa5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBfqMKM9FeYiP3GHlT5o//M8GuiFPQPM6T6Xs8g9BMgfP3PB3TwMbRI/aaAYPxJxbT/CvyE+xNQOP6FvBD8IEEU/CD0RP28dhz7f1TU/5CY0P+yGxz6nB3A/JnGWPqPvXj8qF/g+IAC7PocuNT/ZQK09UvnzPmtPfD3J3E8/gqXpPg3B0D5gQDM/4w7cPq2KaT+/8lo/at/gPsnpPj9iF34+YZoaPvkfED01oLo9UHIcPnQf4z6OI18/g429PncgPT/qqv8+JGBRP50HhT4xHzY/APvwPQwFxj00FjU/DF5uP59gHz/CEBU/JD87PzFEOz+OmmA/jZQrP11EdD9TnAs/+RiRPk3rxTyEjUI/wtEEPl2aBT9ChNM+VpIcPnRXqj6Fih8/cVtMP5ESBT+CVQ0/bnKDPi85FT8vZDk/Ww+yPqCTDz8aViE/i2OGPg20ST7RqNg+Pm4XP6OcVz9r1EM8TSRIP/+awj6KIhw+vCfHPg6gLT7hdxg/YxobP7y8jzvgKhc/7gZoP8nIoT5nu/E9omlktDEzODAzMTcyNDMxNzE4MjE3NjM0qG1zZ190eXBloTDHpmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAgD+iaWSzODQ2Njg0ODUyMzgxNjA5NDc5M6htc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZAGiaWS0MTUyODEzMzU4ODA3MTMwMDQ4NjGobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWShMaJpZLM4OTcyNzkwNTI2OTAyNDczNjg4qG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTGiaWSzNDA3NDc3NjEwNDgwMzAyNzg5Mqhtc2dfdHlwZaEwoTWWx3NrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXtdjwO0vYfT+iaWS0MTM4MDMxNzI0MzE3MTgyMTc2MzSobXNnX3R5cGWhMMgCC2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAXzMtkP7H8Zz612PA7UXucPqZ4qj4/+lI/0ikDP6HjVz/j6Ds/mG1wP2Ft3j5C/rE+XqtkP4Jrsj6qNSM/NYcWPrXuID4kZyM/e4uFPno6HD/jmCU/5MbsPYxQBz4Nv6U+Ij0IP+qt8D4UJUQ/DTqmPrzoTz+nSD4/Q09KP6/43j4wvck+hPk0P05tZz/FMlQ/j4nyPgOFCj9g4Js+IOEtP6kH7D4aRmw/lz0OP92g/z5kNVM+F7oYPkvYfT+/AFs/4kZrP+4pUj/hrCY/wg0lP8tMNz8GAMw9hJMJP85Krz7iV/I+SaOWPbP+IT/Md0o/AUNkP4Sj6z7uVUw/iQfYPVmbPj+Nmu8+/v+tPsHKPj846ZY+h9pIPV3tij5tZPM+72cuP0OEwj2MvTo/T+8eP7WyTz9RRi8+H4VnP/9hRz9fc2g9LRwdPzEBaD9DakI+A3QVPoO4dD+X4TM/5BtRPnFMMj/dENs8D4R0P7sYqT5IiP0+hqsMP3GwGD/Skj0+Uzo2P2O1nT7kkm4/TSD/PaJpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwx6ZrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAoEAAAIA/omlkszg0NjY4NDg1MjM4MTYwOTQ3OTOobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWQFomlktDE1MjgxMzM1ODgwNzEzMDA0ODYxqG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTWiaWSzODk3Mjc5MDUyNjkwMjQ3MzY4OKhtc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKE1omlkszQwNzQ3NzYxMDQ4MDMwMjc4OTKobXNnX3R5cGWhMKEylsdza5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSqmNvbG9ycmFuZ2XXF7YvGTx+k34/omlktDEzODAzMTcyNDMxNzE4MjE3NjM0qG1zZ190eXBloTDIAgtrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKtdW5pZm9ybV9jb2xvcpLXFQoAAAAKAAAAyAGQF4dGFz5fFVk9bcE3Pz0+3D0Gghw/jg9gP5E6AD9+k34/2jDcPhs5LT/rbDo/sIooP+DiIj/3m/s+4CgfPnDGND+KweE8gvRTPsRgaz915Lw+JasDPx2lzj55KV4/w5spPtkOlj6ZYAE/QbE5P3yP9z4G5MI+174GPyixXT80gn4/7ASDPqRreT9UsP0+kHtZP10eNj7sM3w/fuVAPxfbuT5ivFE/1WIwP05FTD9lezQ/56elPm9zEj/39x4/EMe3PrQ3uT62h34/YCAPPyuJCz/Cj0M/QBwEP9GsEj8rrAQ/5dxCP2RB+DwFdis/wpT4Ple/1D6jDS8/leocPyF5Aj+N2nE/+2OOPjXXwD4S8ew+JCEQP5N17D1w1mQ+832ZPr2oXz9fXE8/zb/xPWgxHj+oxns/5DdIPyL66j53HV0/uAXhPfGMVD1wPkA/RU8NP3CIcD4G+ys/ti8ZPMl18z46UMQ+Q2hgP8z+BD+K/LY+0Dc8P4fLwD5Inb8+x/x/PkwzQD91roI+mS3CPtvpCD+iaWS0MTM4MDMxNzI0MzE3MTgyMTc2MzSobXNnX3R5cGWhMMema5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAABAAACAP6JpZLM4NDY2ODQ4NTIzODE2MDk0NzkzqG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkAqJpZLQxNTI4MTMzNTg4MDcxMzAwNDg2Mahtc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKEyomlkszg5NzI3OTA1MjY5MDI0NzM2ODiobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWShMqJpZLM0MDc0Nzc2MTA0ODAzMDI3ODkyqG1zZ190eXBloTChNpbHc2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xdFt9Q8KLh+P6JpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwyAILa5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBfN2iY/zDDrPn7/Qz4rdm4/5wkxP7lrWT/4oys//4VHP0z+mj7Yax8/5o/5PfkDZz9QNHw/+cQ3Pyy5JT/Iw1o/S6Z8P4SYoz55QDg/Uq/rPvg5Nj8k+jY/UDJWP2VG+D4H+cE+TFmNPjnWSD8aLl0/Ls8LP8dMWj/f8dQ+3vqxPlo/KT+Ppyw+jUNMPsGnsD7JgGs/O0GdPscVAD9RXSg+DCkqP/QlaT9vrU0++7A9PxkEgz6WzNw+cWAWP+hSVz8Oh2U+XF58P39uLT5+elY+YjMpP/h0JD/FucI+G80yP8Xd/z78exg/ODkWP4HtJz9gnv8+QAA/Pupk3j6Ng4w9CbteP85iCz9o2u0+MXJQP5OqyD6l2xs+ZFYTP0IYGz854Eg/woE8Pl4jHT8KhEQ/TjxOP0cT/j73RMA+IWsoPwdAWT9J/1U/Zf8UP3MVBT+pNnc/N6yNPii4fj/oe2E/AmyHPZ4z+T3vwBU/AcqqPq5xAj3IBnE+MpbUPkW31Dx4XBc9uqajPjumaT5mZJg+omlktDEzODAzMTcyNDMxNzE4MjE3NjM0qG1zZ190eXBloTDHpmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAADAQAAAgD+iaWSzODQ2Njg0ODUyMzgxNjA5NDc5M6htc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZAaiaWS0MTUyODEzMzU4ODA3MTMwMDQ4NjGobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWShNqJpZLM4OTcyNzkwNTI2OTAyNDczNjg4qG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTaiaWSzNDA3NDc3NjEwNDgwMzAyNzg5Mqhtc2dfdHlwZaEwoTeWx3NrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXIdwLPIR+dj+iaWS0MTM4MDMxNzI0MzE3MTgyMTc2MzSobXNnX3R5cGWhMMgCC2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAXHaprPiCPOj6RaB8/rMX6PsCHEj/OK4w+eULoPttGpj5iitk+5/8rPkrPFz6qzxk+0Ss7P2HQWj8KXjA/rr0FP+tPwz605BA/7dkAP8uH8D6Z9gM/VY4MP8FFFD9tYEs/tuULPLKhsj6EfnY/GjcNP2D+ET8n9Fw/MJtiPyW1bT4rql8/BYRUP+JVYz/ayyM/o2fHPhDBij1nPYA9bmBgPqt2Lz+n8nY+xTwjPj07Tz+8mRA+piCFPsd3Jz+fMdI+U9UjP80Eaj8h3As8KBTzPsNAQj0MfKA9T+JAPVJzvDx/GW4/8YZPPtH4MD+G7vk+nc1mPuki6j6NSh4//RAePzBswD6/fN8+bHCHPTIgHD9Fqu8+iFkaP8PPrD5dUGo/yk0yP0N8LD7PxCQ/z5ZpP2rWET+f+hc/K4j0PgzyZz76Tms/rkQrPwD/oj4tQmg9AcksP4/3zz7Dkg8/lrhMP00aOz+1d4Y+y1hnPygjsT5SJ0g+YLNVP3FW9z5yU+0+1iITP5BPDT6/0qs+NfLUPqJpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwx6ZrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAA4EAAAIA/omlkszg0NjY4NDg1MjM4MTYwOTQ3OTOobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWQHomlktDE1MjgxMzM1ODgwNzEzMDA0ODYxqG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTeiaWSzODk3Mjc5MDUyNjkwMjQ3MzY4OKhtc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKE3omlkszQwNzQ3NzYxMDQ4MDMwMjc4OTKobXNnX3R5cGWhMKIxMJbHc2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xfYZfk8LSh8P6JpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwyAILa5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBdPmhg/00/zPtsrnD6AEZY9hPExP+y7+z7PzC8/i2hDPz2bsT6EJ4s+ToA4PuiywD1BFL8+19ReP0HO/jyfv5U+kxEAPVKsbj7uXno/l9cEP6I59z31rlA/DPgvP5dsrj5T/kM/LSh8P7nv0z4qXnY/VE3CPQJeqT4Rfss+JYUUPijwwz4H7ZY+TXlpPobzTT9i91M/OyP3Pk0JlT6fAHg/rhtiP/OI2T7Dpkw+0ScXP1jmhz5377A+SNItPtPvOD+g6w4+6AzJPT0olj7k30I/HFnlPgCq5j4XcAY+TW0VPzpI7z6SIHM/6b2uPkWcYD+zEIw9zChTP28ebD6PD1s/Nnw4PmT3PD+jhMk+PBTzPoWC3T5XUzs/2GX5PPhVSj9Alh89GdsUPyvOwz02s04+Kbc+P18mIT/m9W8/7LIcP3bcIj6HSDg/Bg+2PsWo5T6PVF0+Fe1cP4iMgz5+FJM+GJNLPqoAPz42lHY9sE03PhBywz6mK0w/iGY1Pzi/4j7sBwo/DqqqPsCC1j7kFhk/omlktDEzODAzMTcyNDMxNzE4MjE3NjM0qG1zZ190eXBloTDHpmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+iaWSzODQ2Njg0ODUyMzgxNjA5NDc5M6htc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZAqiaWS0MTUyODEzMzU4ODA3MTMwMDQ4NjGobXNnX3R5cGWhMMdfa5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSiMTCiaWSzODk3Mjc5MDUyNjkwMjQ3MzY4OKhtc2dfdHlwZaEwx19rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKIxMKJpZLM0MDc0Nzc2MTA0ODAzMDI3ODkyqG1zZ190eXBloTChOZbHc2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xfXKJQ8lap7P6JpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwyAILa5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBcJiUw/OBR1P5N6YT4hnnE/JIBWPg/EvT5QzdM97HU5PiH4iT5CC9w+b5VCP4SXFz8CvtQ9fh4YPyCl7z0Bjkg+u0UHPkYuVz/XKJQ8qgYwPvWklD0GVls/n1FbP5038D79hFM+0VtqP78FDj9IcXU/izVgP1r5kD0McDQ/bnTuPoLlBD/cIVI/7/ZBP9wCgj5EHeI9yfIcP0c3+z50h7c9+DwwP7wzvj4TAJs+hCc+P5+aKD4sMnM/bynsPZp8NT8KL0E93DfVPgZxWD9wbWg/NM++PvLIoj6Xu1s/H3p0PssgKD6jnmA9KHAYPQrD0T7guQM/KPwnP5Wqez9+83U/nTFaP7Kr9D7dL3g/xIByP4V7Xj6kRro+NncJP7ioQT75lGI/gxQ4P2zLyD3+l1c+K+42P1AyHz89M14/eHWHPgAJAT/Pc9Q+oc+RPf8pYj+xhSY9ClEjP+Jjnj1pyBc/+lIlPviymD5THD4/Xc/2PglZpj2WM3s/CzR6Pw4iGj8I/ds+uC1PPmRpBz8Qc3I/omlktDEzODAzMTcyNDMxNzE4MjE3NjM0qG1zZ190eXBloTDHpmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAQQQAAgD+iaWSzODQ2Njg0ODUyMzgxNjA5NDc5M6htc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZAmiaWS0MTUyODEzMzU4ODA3MTMwMDQ4NjGobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWShOaJpZLM4OTcyNzkwNTI2OTAyNDczNjg4qG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTmiaWSzNDA3NDc3NjEwNDgwMzAyNzg5Mqhtc2dfdHlwZaEwoTiWx3NrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXkEAvPBBFfT+iaWS0MTM4MDMxNzI0MzE3MTgyMTc2MzSobXNnX3R5cGWhMMgCC2uSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAX/XFHP82hXj8N3nA/sKSSPtHwFT7+BvA+yWG/PQk/Xj7wL3g/t/ZkPzxz9T7TfM8+n+E4P/XCSz9kguw9a1ddP3m4OD/xAh4/D1LgPrY70z1weZ4+wDT/Pa9fLD+aJjY/mIqYPur4wD7qcLo+xUk6Pz0slD6w+xY/yAhyP2I8VD8qZyM+Lyi5Peizez8VGyQ/iL3BPgqPiT5n5gI/UAtVPpA9fT7lbFs/kFp3PzqQnj0duJI+4YIIPQ0edj8+W04/8JVHP81mYz+IRkc/EEV9P2oSQz7f1hU/RF5BP7Eb/T5lGXQ/iv/cPkqZwD5r/1I8NmF0PzkiGj/SFRg/UaTxPqkjAT9GERk+h5pgPyCGfz78ZCU/WBUUP9+wfj1anUE+clRePQBLoz6o32E/lHZAPgADZz6gKCA/NIHzPq5riT30kHs/8TpJPxuNZT5670s/PEMRPkwOAj9mjTE+h+5wPwlStT61N/E+e8GRPZBALzxo55I9JD5NP1w8ej/NfHE+45hAPxm5uT3Eyao+C2kQP6JpZLQxMzgwMzE3MjQzMTcxODIxNzYzNKhtc2dfdHlwZaEwx6ZrksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAEEAAIA/omlkszg0NjY4NDg1MjM4MTYwOTQ3OTOobXNnX3R5cGWhMMdea5LHLWqT2SRlZjMzMWIzYi1mOTlhLTRhNjYtOTMyOS0wMzQ2MzdmMWE2YzGApHJvb3SDp3BheWxvYWQIomlktDE1MjgxMzM1ODgwNzEzMDA0ODYxqG1zZ190eXBloTDHXmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290g6dwYXlsb2FkoTiiaWSzODk3Mjc5MDUyNjkwMjQ3MzY4OKhtc2dfdHlwZaEwx15rksctapPZJGVmMzMxYjNiLWY5OWEtNGE2Ni05MzI5LTAzNDYzN2YxYTZjMYCkcm9vdIOncGF5bG9hZKE4omlkszQwNzQ3NzYxMDQ4MDMwMjc4OTKobXNnX3R5cGWhMNoC4kpTU2VydmUuZmV0Y2hfYmluYXJ5KCdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsa3Njc2FwUFpKREU0WWpNME1UVmhMVFpoTm1FdE5HVTROUzA1WTJFM0xUVTBORGN4Tnpjd05tVXdPSUNqYzNWaWtjY1ZhTFF4TmpNeU1qSXpNRGd3T0Rrek1ERTVOall5TlE9PScpLnRoZW4oYmluYXJ5ID0+IHsKICAgIGNvbnN0IHN0YXRlbWFwID0gX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxNDA5ODM1MDg4NDg4Mzk4NzA2NScpCiAgICBjb25zb2xlLmxvZyhzdGF0ZW1hcCkKICAgIGNvbnN0IG9ic2VydmFibGVzID0gSlNTZXJ2ZS5kZWNvZGVfYmluYXJ5KGJpbmFyeSwgZmFsc2UpOwogICAgSlNTZXJ2ZS5vbmFueShvYnNlcnZhYmxlcywgKHN0YXRlcykgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHN0YXRlcykKICAgICAgICAvLyBtZXNzYWdlcyB0byBzZW5kIGZvciB0aGlzIHN0YXRlIG9mIHRoYXQgb2JzZXJ2YWJsZQogICAgICAgIGNvbnN0IG1lc3NhZ2VzID0gc3RhdGVtYXBbc3RhdGVzXQogICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2VzKQogICAgICAgIC8vIG5vdCBhbGwgc3RhdGVzIHRyaWdnZXIgZXZlbnRzCiAgICAgICAgLy8gc28gc29tZSBzdGF0ZXMgd29uJ3QgaGF2ZSBhbnkgbWVzc2FnZXMgcmVjb3JkZWQKICAgICAgICBpZiAobWVzc2FnZXMpewogICAgICAgICAgICBtZXNzYWdlcy5mb3JFYWNoKEpTU2VydmUucHJvY2Vzc19tZXNzYWdlKQogICAgICAgIH0KICAgIH0pCn0pCtk8L2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3pHZWZrL3NyYy9leHBvcnQuamw6MTI2qG1zZ190eXBloTLHRmuSxy1qk9kkZWYzMzFiM2ItZjk5YS00YTY2LTkzMjktMDM0NjM3ZjFhNmMxgKRyb290gqdwYXlsb2FkkKhtc2dfdHlwZaE5qG1zZ190eXBloTk=').then(msgs=> JSServe.init_session('18b3415a-6a6a-4e85-9ca7-544717706e08', msgs, 'sub'));
" type="module"></script>
  <div id="18b3415a-6a6a-4e85-9ca7-544717706e08" data-jscall-id="subsession-application-dom">
    <div data-jscall-id="5">
      <div data-jscall-id="6">z-index: 
        <input step="1" max="10" min="1" data-jscall-id="7" value="1" oninput="" type="range" />
        <span data-jscall-id="8">1</span>
      </div>
      <div data-jscall-id="9">
        <canvas data-jscall-id="10" tabindex="0"></canvas>
      </div>
    </div>
  </div>
  <div>
    <script src="data:application/javascript;base64,// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var ca = "136", Gy = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2,
    ROTATE: 0,
    DOLLY: 1,
    PAN: 2
}, Vy = {
    ROTATE: 0,
    PAN: 1,
    DOLLY_PAN: 2,
    DOLLY_ROTATE: 3
}, uu = 0, tl = 1, du = 2, Wy = 3, qy = 0, Hc = 1, fu = 2, ir = 3, Ai = 0, it = 1, Ci = 2, kc = 1, Xy = 2, vn = 0, sr = 1, nl = 2, il = 3, rl = 4, pu = 5, _i = 100, mu = 101, gu = 102, sl = 103, ol = 104, xu = 200, yu = 201, vu = 202, _u = 203, Gc = 204, Vc = 205, Mu = 206, bu = 207, wu = 208, Su = 209, Tu = 210, Eu = 0, Au = 1, Cu = 2, ea = 3, Lu = 4, Ru = 5, Pu = 6, Iu = 7, Vs = 0, Du = 1, Fu = 2, _n = 0, Nu = 1, Bu = 2, zu = 3, Uu = 4, Ou = 5, ha = 300, Bi = 301, zi = 302, Ds = 303, Fs = 304, Pr = 306, Ws = 307, Ns = 1e3, vt = 1001, Bs = 1002, rt = 1003, ta = 1004, Jy = 1004, na = 1005, Yy = 1005, tt = 1006, Wc = 1007, Zy = 1007, Ui = 1008, $y = 1008, rn = 1009, Hu = 1010, ku = 1011, cr = 1012, Gu = 1013, Ps = 1014, nn = 1015, kn = 1016, Vu = 1017, Wu = 1018, qu = 1019, Ti = 1020, Xu = 1021, Gn = 1022, ct = 1023, Ju = 1024, Yu = 1025, Vn = 1026, Li = 1027, Zu = 1028, $u = 1029, ju = 1030, Qu = 1031, Ku = 1032, ed = 1033, al = 33776, ll = 33777, cl = 33778, hl = 33779, ul = 35840, dl = 35841, fl = 35842, pl = 35843, td = 36196, ml = 37492, gl = 37496, nd = 37808, id = 37809, rd = 37810, sd = 37811, od = 37812, ad = 37813, ld = 37814, cd = 37815, hd = 37816, ud = 37817, dd = 37818, fd = 37819, pd = 37820, md = 37821, gd = 36492, xd = 37840, yd = 37841, vd = 37842, _d = 37843, Md = 37844, bd = 37845, wd = 37846, Sd = 37847, Td = 37848, Ed = 37849, Ad = 37850, Cd = 37851, Ld = 37852, Rd = 37853, Pd = 2200, Id = 2201, Dd = 2202, zs = 2300, Us = 2301, yo = 2302, Mi = 2400, bi = 2401, Os = 2402, ua = 2500, qc = 2501, Fd = 0, jy = 1, Qy = 2, Nt = 3e3, Oi = 3001, Nd = 3200, Bd = 3201, Hi = 0, zd = 1, Ky = 0, vo = 7680, e0 = 7681, t0 = 7682, n0 = 7683, i0 = 34055, r0 = 34056, s0 = 5386, o0 = 512, a0 = 513, l0 = 514, c0 = 515, h0 = 516, u0 = 517, d0 = 518, Ud = 519, hr = 35044, ur = 35048, f0 = 35040, p0 = 35045, m0 = 35049, g0 = 35041, x0 = 35046, y0 = 35050, v0 = 35042, _0 = "100", xl = "300 es", En = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        let n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        let n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        let i = this._listeners[e];
        if (i !== void 0) {
            let r = i.indexOf(t);
            r !== -1 && i.splice(r, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        let n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            let i = n.slice(0);
            for(let r = 0, o = i.length; r < o; r++)i[r].call(this, e);
            e.target = null;
        }
    }
}, pt = [];
for(let s = 0; s < 256; s++)pt[s] = (s < 16 ? "0" : "") + s.toString(16);
var Vr = 1234567, Wn = Math.PI / 180, dr = 180 / Math.PI;
function Et() {
    let s = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0;
    return (pt[s & 255] + pt[s >> 8 & 255] + pt[s >> 16 & 255] + pt[s >> 24 & 255] + "-" + pt[e & 255] + pt[e >> 8 & 255] + "-" + pt[e >> 16 & 15 | 64] + pt[e >> 24 & 255] + "-" + pt[t & 63 | 128] + pt[t >> 8 & 255] + "-" + pt[t >> 16 & 255] + pt[t >> 24 & 255] + pt[n & 255] + pt[n >> 8 & 255] + pt[n >> 16 & 255] + pt[n >> 24 & 255]).toUpperCase();
}
function mt(s, e, t) {
    return Math.max(e, Math.min(t, s));
}
function da(s, e) {
    return (s % e + e) % e;
}
function Od(s, e, t, n, i) {
    return n + (s - e) * (i - n) / (t - e);
}
function Hd(s, e, t) {
    return s !== e ? (t - s) / (e - s) : 0;
}
function or(s, e, t) {
    return (1 - t) * s + t * e;
}
function kd(s, e, t, n) {
    return or(s, e, 1 - Math.exp(-t * n));
}
function Gd(s, e = 1) {
    return e - Math.abs(da(s, e * 2) - e);
}
function Vd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * (3 - 2 * s));
}
function Wd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * s * (s * (s * 6 - 15) + 10));
}
function qd(s, e) {
    return s + Math.floor(Math.random() * (e - s + 1));
}
function Xd(s, e) {
    return s + Math.random() * (e - s);
}
function Jd(s) {
    return s * (.5 - Math.random());
}
function Yd(s) {
    return s !== void 0 && (Vr = s % 2147483647), Vr = Vr * 16807 % 2147483647, (Vr - 1) / 2147483646;
}
function Zd(s) {
    return s * Wn;
}
function $d(s) {
    return s * dr;
}
function ia(s) {
    return (s & s - 1) === 0 && s !== 0;
}
function Xc(s) {
    return Math.pow(2, Math.ceil(Math.log(s) / Math.LN2));
}
function Jc(s) {
    return Math.pow(2, Math.floor(Math.log(s) / Math.LN2));
}
function jd(s, e, t, n, i) {
    let r = Math.cos, o = Math.sin, a = r(t / 2), l = o(t / 2), c = r((e + n) / 2), h = o((e + n) / 2), u = r((e - n) / 2), d = o((e - n) / 2), f = r((n - e) / 2), m = o((n - e) / 2);
    switch(i){
        case "XYX":
            s.set(a * h, l * u, l * d, a * c);
            break;
        case "YZY":
            s.set(l * d, a * h, l * u, a * c);
            break;
        case "ZXZ":
            s.set(l * u, l * d, a * h, a * c);
            break;
        case "XZX":
            s.set(a * h, l * m, l * f, a * c);
            break;
        case "YXY":
            s.set(l * f, a * h, l * m, a * c);
            break;
        case "ZYZ":
            s.set(l * m, l * f, a * h, a * c);
            break;
        default:
            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
    }
}
var M0 = Object.freeze({
    __proto__: null,
    DEG2RAD: Wn,
    RAD2DEG: dr,
    generateUUID: Et,
    clamp: mt,
    euclideanModulo: da,
    mapLinear: Od,
    inverseLerp: Hd,
    lerp: or,
    damp: kd,
    pingpong: Gd,
    smoothstep: Vd,
    smootherstep: Wd,
    randInt: qd,
    randFloat: Xd,
    randFloatSpread: Jd,
    seededRandom: Yd,
    degToRad: Zd,
    radToDeg: $d,
    isPowerOfTwo: ia,
    ceilPowerOfTwo: Xc,
    floorPowerOfTwo: Jc,
    setQuaternionFromProperEuler: jd
}), X = class {
    constructor(e = 0, t = 0){
        this.x = e, this.y = t;
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return this.x = e, this.y = t, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this;
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
    }
    rotateAround(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
        return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
};
X.prototype.isVector2 = !0;
var lt = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c) {
        let h = this.elements;
        return h[0] = e, h[1] = i, h[2] = a, h[3] = t, h[4] = r, h[5] = l, h[6] = n, h[7] = o, h[8] = c, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;
    }
    setFromMatrix4(e) {
        let t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[3], l = n[6], c = n[1], h = n[4], u = n[7], d = n[2], f = n[5], m = n[8], x = i[0], v = i[3], g = i[6], p = i[1], _ = i[4], y = i[7], b = i[2], A = i[5], L = i[8];
        return r[0] = o * x + a * p + l * b, r[3] = o * v + a * _ + l * A, r[6] = o * g + a * y + l * L, r[1] = c * x + h * p + u * b, r[4] = c * v + h * _ + u * A, r[7] = c * g + h * y + u * L, r[2] = d * x + f * p + m * b, r[5] = d * v + f * _ + m * A, r[8] = d * g + f * y + m * L, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8];
        return t * o * h - t * a * c - n * r * h + n * a * l + i * r * c - i * o * l;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = h * o - a * c, d = a * l - h * r, f = c * r - o * l, m = t * u + n * d + i * f;
        if (m === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        let x = 1 / m;
        return e[0] = u * x, e[1] = (i * c - h * n) * x, e[2] = (a * n - i * o) * x, e[3] = d * x, e[4] = (h * t - i * l) * x, e[5] = (i * r - a * t) * x, e[6] = f * x, e[7] = (n * l - c * t) * x, e[8] = (o * t - n * r) * x, this;
    }
    transpose() {
        let e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        let t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
    }
    setUvTransform(e, t, n, i, r, o, a) {
        let l = Math.cos(r), c = Math.sin(r);
        return this.set(n * l, n * c, -n * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + t, 0, 0, 1), this;
    }
    scale(e, t) {
        let n = this.elements;
        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
    }
    rotate(e) {
        let t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], a = i[6], l = i[1], c = i[4], h = i[7];
        return i[0] = t * r + n * l, i[3] = t * o + n * c, i[6] = t * a + n * h, i[1] = -n * r + t * l, i[4] = -n * o + t * c, i[7] = -n * a + t * h, this;
    }
    translate(e, t) {
        let n = this.elements;
        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 9; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 9; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
};
lt.prototype.isMatrix3 = !0;
function Yc(s) {
    if (s.length === 0) return -1 / 0;
    let e = s[0];
    for(let t = 1, n = s.length; t < n; ++t)s[t] > e && (e = s[t]);
    return e;
}
var Qd = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array
};
function wi(s, e) {
    return new Qd[s](e);
}
function qs(s) {
    return document.createElementNS("http://www.w3.org/1999/xhtml", s);
}
var ti, Yn = class {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            ti === void 0 && (ti = qs("canvas")), ti.width = e.width, ti.height = e.height;
            let n = ti.getContext("2d");
            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = ti;
        }
        return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png");
    }
}, Kd = 0, ot = class extends En {
    constructor(e = ot.DEFAULT_IMAGE, t = ot.DEFAULT_MAPPING, n = vt, i = vt, r = tt, o = Ui, a = ct, l = rn, c = 1, h = Nt){
        super();
        Object.defineProperty(this, "id", {
            value: Kd++
        }), this.uuid = Et(), this.name = "", this.image = e, this.mipmaps = [], this.mapping = t, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new X(0, 0), this.repeat = new X(1, 1), this.center = new X(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new lt, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = h, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1;
    }
    updateMatrix() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
        let n = {
            metadata: {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [
                this.repeat.x,
                this.repeat.y
            ],
            offset: [
                this.offset.x,
                this.offset.y
            ],
            center: [
                this.center.x,
                this.center.y
            ],
            rotation: this.rotation,
            wrap: [
                this.wrapS,
                this.wrapT
            ],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        if (this.image !== void 0) {
            let i = this.image;
            if (i.uuid === void 0 && (i.uuid = Et()), !t && e.images[i.uuid] === void 0) {
                let r;
                if (Array.isArray(i)) {
                    r = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? r.push(_o(i[o].image)) : r.push(_o(i[o]));
                } else r = _o(i);
                e.images[i.uuid] = {
                    uuid: i.uuid,
                    url: r
                };
            }
            n.image = i.uuid;
        }
        return JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData), t || (e.textures[this.uuid] = n), n;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    transformUv(e) {
        if (this.mapping !== ha) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
            case Ns:
                e.x = e.x - Math.floor(e.x);
                break;
            case vt:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                break;
        }
        if (e.y < 0 || e.y > 1) switch(this.wrapT){
            case Ns:
                e.y = e.y - Math.floor(e.y);
                break;
            case vt:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                break;
        }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
ot.DEFAULT_IMAGE = void 0;
ot.DEFAULT_MAPPING = ha;
ot.prototype.isTexture = !0;
function _o(s) {
    return typeof HTMLImageElement < "u" && s instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && s instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && s instanceof ImageBitmap ? Yn.getDataURL(s) : s.data ? {
        data: Array.prototype.slice.call(s.data),
        width: s.width,
        height: s.height,
        type: s.data.constructor.name
    } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
var Ve = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this.x = e, this.y = t, this.z = n, this.w = i;
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return this.x = e, this.y = t, this.z = n, this.w = i, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this.w = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setW(e) {
        return this.w = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this.w += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        let t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, r, l = e.elements, c = l[0], h = l[4], u = l[8], d = l[1], f = l[5], m = l[9], x = l[2], v = l[6], g = l[10];
        if (Math.abs(h - d) < .01 && Math.abs(u - x) < .01 && Math.abs(m - v) < .01) {
            if (Math.abs(h + d) < .1 && Math.abs(u + x) < .1 && Math.abs(m + v) < .1 && Math.abs(c + f + g - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let _ = (c + 1) / 2, y = (f + 1) / 2, b = (g + 1) / 2, A = (h + d) / 4, L = (u + x) / 4, I = (m + v) / 4;
            return _ > y && _ > b ? _ < .01 ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(_), i = A / n, r = L / n) : y > b ? y < .01 ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(y), n = A / i, r = I / i) : b < .01 ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(b), n = L / r, i = I / r), this.set(n, i, r, t), this;
        }
        let p = Math.sqrt((v - m) * (v - m) + (u - x) * (u - x) + (d - h) * (d - h));
        return Math.abs(p) < .001 && (p = 1), this.x = (v - m) / p, this.y = (u - x) / p, this.z = (d - h) / p, this.w = Math.acos((c + f + g - 1) / 2), this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
};
Ve.prototype.isVector4 = !0;
var At = class extends En {
    constructor(e, t, n = {}){
        super();
        this.width = e, this.height = t, this.depth = 1, this.scissor = new Ve(0, 0, e, t), this.scissorTest = !1, this.viewport = new Ve(0, 0, e, t), this.texture = new ot(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = !0, this.texture.image = {
            width: e,
            height: t,
            depth: 1
        }, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.internalFormat = n.internalFormat !== void 0 ? n.internalFormat : null, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : tt, this.depthBuffer = n.depthBuffer !== void 0 ? n.depthBuffer : !0, this.stencilBuffer = n.stencilBuffer !== void 0 ? n.stencilBuffer : !1, this.depthTexture = n.depthTexture !== void 0 ? n.depthTexture : null;
    }
    setTexture(e) {
        e.image = {
            width: this.width,
            height: this.height,
            depth: this.depth
        }, this.texture = e;
    }
    setSize(e, t, n = 1) {
        (this.width !== e || this.height !== t || this.depth !== n) && (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = {
            ...this.texture.image
        }, this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
At.prototype.isWebGLRenderTarget = !0;
var Zc = class extends At {
    constructor(e, t, n){
        super(e, t);
        let i = this.texture;
        this.texture = [];
        for(let r = 0; r < n; r++)this.texture[r] = i.clone();
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            this.width = e, this.height = t, this.depth = n;
            for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = n;
            this.dispose();
        }
        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this;
    }
    copy(e) {
        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
        for(let t = 0, n = e.texture.length; t < n; t++)this.texture[t] = e.texture[t].clone();
        return this;
    }
};
Zc.prototype.isWebGLMultipleRenderTargets = !0;
var Xs = class extends At {
    constructor(e, t, n = {}){
        super(e, t, n);
        this.samples = 4, this.ignoreDepthForMultisampleCopy = n.ignoreDepth !== void 0 ? n.ignoreDepth : !0, this.useRenderToTexture = n.useRenderToTexture !== void 0 ? n.useRenderToTexture : !1, this.useRenderbuffer = this.useRenderToTexture === !1;
    }
    copy(e) {
        return super.copy.call(this, e), this.samples = e.samples, this.useRenderToTexture = e.useRenderToTexture, this.useRenderbuffer = e.useRenderbuffer, this;
    }
};
Xs.prototype.isWebGLMultisampleRenderTarget = !0;
var gt = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this._x = e, this._y = t, this._z = n, this._w = i;
    }
    static slerp(e, t, n, i) {
        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, i);
    }
    static slerpFlat(e, t, n, i, r, o, a) {
        let l = n[i + 0], c = n[i + 1], h = n[i + 2], u = n[i + 3], d = r[o + 0], f = r[o + 1], m = r[o + 2], x = r[o + 3];
        if (a === 0) {
            e[t + 0] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
            return;
        }
        if (a === 1) {
            e[t + 0] = d, e[t + 1] = f, e[t + 2] = m, e[t + 3] = x;
            return;
        }
        if (u !== x || l !== d || c !== f || h !== m) {
            let v = 1 - a, g = l * d + c * f + h * m + u * x, p = g >= 0 ? 1 : -1, _ = 1 - g * g;
            if (_ > Number.EPSILON) {
                let b = Math.sqrt(_), A = Math.atan2(b, g * p);
                v = Math.sin(v * A) / b, a = Math.sin(a * A) / b;
            }
            let y = a * p;
            if (l = l * v + d * y, c = c * v + f * y, h = h * v + m * y, u = u * v + x * y, v === 1 - a) {
                let b1 = 1 / Math.sqrt(l * l + c * c + h * h + u * u);
                l *= b1, c *= b1, h *= b1, u *= b1;
            }
        }
        e[t] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
    }
    static multiplyQuaternionsFlat(e, t, n, i, r, o) {
        let a = n[i], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o], d = r[o + 1], f = r[o + 2], m = r[o + 3];
        return e[t] = a * m + h * u + l * f - c * d, e[t + 1] = l * m + h * d + c * u - a * f, e[t + 2] = c * m + h * f + a * d - l * u, e[t + 3] = h * m - a * u - l * d - c * f, e;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        this._w = e, this._onChangeCallback();
    }
    set(e, t, n, i) {
        return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
    }
    setFromEuler(e, t) {
        if (!(e && e.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        let n = e._x, i = e._y, r = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(n / 2), h = a(i / 2), u = a(r / 2), d = l(n / 2), f = l(i / 2), m = l(r / 2);
        switch(o){
            case "XYZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "YXZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "ZXY":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "ZYX":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "YZX":
                this._x = d * h * u + c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "XZY":
                this._x = d * h * u - c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u + d * f * m;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
        }
        return t !== !1 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        let n = t / 2, i = Math.sin(n);
        return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e) {
        let t = e.elements, n = t[0], i = t[4], r = t[8], o = t[1], a = t[5], l = t[9], c = t[2], h = t[6], u = t[10], d = n + a + u;
        if (d > 0) {
            let f = .5 / Math.sqrt(d + 1);
            this._w = .25 / f, this._x = (h - l) * f, this._y = (r - c) * f, this._z = (o - i) * f;
        } else if (n > a && n > u) {
            let f1 = 2 * Math.sqrt(1 + n - a - u);
            this._w = (h - l) / f1, this._x = .25 * f1, this._y = (i + o) / f1, this._z = (r + c) / f1;
        } else if (a > u) {
            let f2 = 2 * Math.sqrt(1 + a - n - u);
            this._w = (r - c) / f2, this._x = (i + o) / f2, this._y = .25 * f2, this._z = (l + h) / f2;
        } else {
            let f3 = 2 * Math.sqrt(1 + u - n - a);
            this._w = (o - i) / f3, this._x = (r + c) / f3, this._y = (l + h) / f3, this._z = .25 * f3;
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(mt(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        let n = this.angleTo(e);
        if (n === 0) return this;
        let i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
    }
    dot(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    }
    lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
        let e = this.length();
        return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        let n = e._x, i = e._y, r = e._z, o = e._w, a = t._x, l = t._y, c = t._z, h = t._w;
        return this._x = n * h + o * a + i * c - r * l, this._y = i * h + o * l + r * a - n * c, this._z = r * h + o * c + n * l - i * a, this._w = o * h - n * a - i * l - r * c, this._onChangeCallback(), this;
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        let n = this._x, i = this._y, r = this._z, o = this._w, a = o * e._w + n * e._x + i * e._y + r * e._z;
        if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
        let l = 1 - a * a;
        if (l <= Number.EPSILON) {
            let f = 1 - t;
            return this._w = f * o + t * this._w, this._x = f * n + t * this._x, this._y = f * i + t * this._y, this._z = f * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        let c = Math.sqrt(l), h = Math.atan2(c, a), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
        return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
    }
    slerpQuaternions(e, t, n) {
        this.copy(e).slerp(t, n);
    }
    random() {
        let e = Math.random(), t = Math.sqrt(1 - e), n = Math.sqrt(e), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();
        return this.set(t * Math.cos(i), n * Math.sin(r), n * Math.cos(r), t * Math.sin(i));
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    }
    fromArray(e, t = 0) {
        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
    }
    fromBufferAttribute(e, t) {
        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
gt.prototype.isQuaternion = !0;
var M = class {
    constructor(e = 0, t = 0, n = 0){
        this.x = e, this.y = t, this.z = n;
    }
    set(e, t, n) {
        return n === void 0 && (n = this.z), this.x = e, this.y = t, this.z = n, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this;
    }
    multiplyVectors(e, t) {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
    }
    applyEuler(e) {
        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(yl.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(yl.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
    }
    applyQuaternion(e) {
        let t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, a = e.z, l = e.w, c = l * t + o * i - a * n, h = l * n + a * t - r * i, u = l * i + r * n - o * t, d = -r * t - o * n - a * i;
        return this.x = c * l + d * -r + h * -a - u * -o, this.y = h * l + d * -o + u * -r - c * -a, this.z = u * l + d * -a + c * -o - h * -r, this;
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
    }
    transformDirection(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this;
    }
    cross(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        let n = e.x, i = e.y, r = e.z, o = t.x, a = t.y, l = t.z;
        return this.x = i * l - r * a, this.y = r * o - n * l, this.z = n * a - i * o, this;
    }
    projectOnVector(e) {
        let t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        let n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return Mo.copy(this).projectOnVector(e), this.sub(Mo);
    }
    reflect(e) {
        return this.sub(Mo.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(mt(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        let i = Math.sin(t) * e;
        return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
    }
    setFromMatrixPosition(e) {
        let t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this;
    }
    setFromMatrixScale(e) {
        let t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = i, this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
    }
    randomDirection() {
        let e = (Math.random() - .5) * 2, t = Math.random() * Math.PI * 2, n = Math.sqrt(1 - e ** 2);
        return this.x = n * Math.cos(t), this.y = n * Math.sin(t), this.z = e, this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
};
M.prototype.isVector3 = !0;
var Mo = new M, yl = new gt, Lt = class {
    constructor(e = new M(1 / 0, 1 / 0, 1 / 0), t = new M(-1 / 0, -1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.length; l < c; l += 3){
            let h = e[l], u = e[l + 1], d = e[l + 2];
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromBufferAttribute(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.count; l < c; l++){
            let h = e.getX(l), u = e.getY(l), d = e.getZ(l);
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ji.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e) {
        return this.makeEmpty(), this.expandByObject(e);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e) {
        e.updateWorldMatrix(!1, !1);
        let t = e.geometry;
        t !== void 0 && (t.boundingBox === null && t.computeBoundingBox(), bo.copy(t.boundingBox), bo.applyMatrix4(e.matrixWorld), this.union(bo));
        let n = e.children;
        for(let i = 0, r = n.length; i < r; i++)this.expandByObject(n[i]);
        return this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
    }
    intersectsSphere(e) {
        return this.clampPoint(e.center, Ji), Ji.distanceToSquared(e.center) <= e.radius * e.radius;
    }
    intersectsPlane(e) {
        let t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(Yi), Wr.subVectors(this.max, Yi), ni.subVectors(e.a, Yi), ii.subVectors(e.b, Yi), ri.subVectors(e.c, Yi), un.subVectors(ii, ni), dn.subVectors(ri, ii), Pn.subVectors(ni, ri);
        let t = [
            0,
            -un.z,
            un.y,
            0,
            -dn.z,
            dn.y,
            0,
            -Pn.z,
            Pn.y,
            un.z,
            0,
            -un.x,
            dn.z,
            0,
            -dn.x,
            Pn.z,
            0,
            -Pn.x,
            -un.y,
            un.x,
            0,
            -dn.y,
            dn.x,
            0,
            -Pn.y,
            Pn.x,
            0
        ];
        return !wo(t, ni, ii, ri, Wr) || (t = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], !wo(t, ni, ii, ri, Wr)) ? !1 : (qr.crossVectors(un, dn), t = [
            qr.x,
            qr.y,
            qr.z
        ], wo(t, ni, ii, ri, Wr));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ji.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    getBoundingSphere(e) {
        return this.getCenter(e.center), e.radius = this.getSize(Ji).length() * .5, e;
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty() ? this : ($t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), $t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), $t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), $t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), $t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), $t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), $t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), $t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints($t), this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
Lt.prototype.isBox3 = !0;
var $t = [
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M
], Ji = new M, bo = new Lt, ni = new M, ii = new M, ri = new M, un = new M, dn = new M, Pn = new M, Yi = new M, Wr = new M, qr = new M, In = new M;
function wo(s, e, t, n, i) {
    for(let r = 0, o = s.length - 3; r <= o; r += 3){
        In.fromArray(s, r);
        let a = i.x * Math.abs(In.x) + i.y * Math.abs(In.y) + i.z * Math.abs(In.z), l = e.dot(In), c = t.dot(In), h = n.dot(In);
        if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return !1;
    }
    return !0;
}
var ef = new Lt, vl = new M, Xr = new M, So = new M, An = class {
    constructor(e = new M, t = -1){
        this.center = e, this.radius = t;
    }
    set(e, t) {
        return this.center.copy(e), this.radius = t, this;
    }
    setFromPoints(e, t) {
        let n = this.center;
        t !== void 0 ? n.copy(t) : ef.setFromPoints(e).getCenter(n);
        let i = 0;
        for(let r = 0, o = e.length; r < o; r++)i = Math.max(i, n.distanceToSquared(e[r]));
        return this.radius = Math.sqrt(i), this;
    }
    copy(e) {
        return this.center.copy(e.center), this.radius = e.radius, this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), this.radius = -1, this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        let t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        let n = this.center.distanceToSquared(e);
        return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
    }
    getBoundingBox(e) {
        return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
    }
    applyMatrix4(e) {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        So.subVectors(e, this.center);
        let t = So.lengthSq();
        if (t > this.radius * this.radius) {
            let n = Math.sqrt(t), i = (n - this.radius) * .5;
            this.center.add(So.multiplyScalar(i / n)), this.radius += i;
        }
        return this;
    }
    union(e) {
        return this.center.equals(e.center) === !0 ? Xr.set(0, 0, 1).multiplyScalar(e.radius) : Xr.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(vl.copy(e.center).add(Xr)), this.expandByPoint(vl.copy(e.center).sub(Xr)), this;
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, jt = new M, To = new M, Jr = new M, fn = new M, Eo = new M, Yr = new M, Ao = new M, Cn = class {
    constructor(e = new M, t = new M(0, 0, -1)){
        this.origin = e, this.direction = t;
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
    }
    at(e, t) {
        return t.copy(this.direction).multiplyScalar(e).add(this.origin);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, jt)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        let n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        let t = jt.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (jt.copy(this.direction).multiplyScalar(t).add(this.origin), jt.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        To.copy(e).add(t).multiplyScalar(.5), Jr.copy(t).sub(e).normalize(), fn.copy(this.origin).sub(To);
        let r = e.distanceTo(t) * .5, o = -this.direction.dot(Jr), a = fn.dot(this.direction), l = -fn.dot(Jr), c = fn.lengthSq(), h = Math.abs(1 - o * o), u, d, f, m;
        if (h > 0) if (u = o * l - a, d = o * a - l, m = r * h, u >= 0) if (d >= -m) if (d <= m) {
            let x = 1 / h;
            u *= x, d *= x, f = u * (u + o * d + 2 * a) + d * (o * u + d + 2 * l) + c;
        } else d = r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d = -r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d <= -m ? (u = Math.max(0, -(-o * r + a)), d = u > 0 ? -r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c) : d <= m ? (u = 0, d = Math.min(Math.max(-r, -l), r), f = d * (d + 2 * l) + c) : (u = Math.max(0, -(o * r + a)), d = u > 0 ? r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c);
        else d = o > 0 ? -r : r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        return n && n.copy(this.direction).multiplyScalar(u).add(this.origin), i && i.copy(Jr).multiplyScalar(d).add(To), f;
    }
    intersectSphere(e, t) {
        jt.subVectors(e.center, this.origin);
        let n = jt.dot(this.direction), i = jt.dot(jt) - n * n, r = e.radius * e.radius;
        if (i > r) return null;
        let o = Math.sqrt(r - i), a = n - o, l = n + o;
        return a < 0 && l < 0 ? null : a < 0 ? this.at(l, t) : this.at(a, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        let t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        let n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        let n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        let t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, r, o, a, l, c = 1 / this.direction.x, h = 1 / this.direction.y, u = 1 / this.direction.z, d = this.origin;
        return c >= 0 ? (n = (e.min.x - d.x) * c, i = (e.max.x - d.x) * c) : (n = (e.max.x - d.x) * c, i = (e.min.x - d.x) * c), h >= 0 ? (r = (e.min.y - d.y) * h, o = (e.max.y - d.y) * h) : (r = (e.max.y - d.y) * h, o = (e.min.y - d.y) * h), n > o || r > i || ((r > n || n !== n) && (n = r), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - d.z) * u, l = (e.max.z - d.z) * u) : (a = (e.max.z - d.z) * u, l = (e.min.z - d.z) * u), n > l || a > i) || ((a > n || n !== n) && (n = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(n >= 0 ? n : i, t);
    }
    intersectsBox(e) {
        return this.intersectBox(e, jt) !== null;
    }
    intersectTriangle(e, t, n, i, r) {
        Eo.subVectors(t, e), Yr.subVectors(n, e), Ao.crossVectors(Eo, Yr);
        let o = this.direction.dot(Ao), a;
        if (o > 0) {
            if (i) return null;
            a = 1;
        } else if (o < 0) a = -1, o = -o;
        else return null;
        fn.subVectors(this.origin, e);
        let l = a * this.direction.dot(Yr.crossVectors(fn, Yr));
        if (l < 0) return null;
        let c = a * this.direction.dot(Eo.cross(fn));
        if (c < 0 || l + c > o) return null;
        let h = -a * fn.dot(Ao);
        return h < 0 ? null : this.at(h / o, r);
    }
    applyMatrix4(e) {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
    }
    equals(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, pe = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c, h, u, d, f, m, x, v) {
        let g = this.elements;
        return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = a, g[13] = l, g[2] = c, g[6] = h, g[10] = u, g[14] = d, g[3] = f, g[7] = m, g[11] = x, g[15] = v, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new pe().fromArray(this.elements);
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
    }
    copyPosition(e) {
        let t = this.elements, n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
    }
    setFromMatrix3(e) {
        let t = e.elements;
        return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
    }
    makeBasis(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
    }
    extractRotation(e) {
        let t = this.elements, n = e.elements, i = 1 / si.setFromMatrixColumn(e, 0).length(), r = 1 / si.setFromMatrixColumn(e, 1).length(), o = 1 / si.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromEuler(e) {
        e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        let t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), a = Math.sin(n), l = Math.cos(i), c = Math.sin(i), h = Math.cos(r), u = Math.sin(r);
        if (e.order === "XYZ") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = -l * u, t[8] = c, t[1] = f + m * c, t[5] = d - x * c, t[9] = -a * l, t[2] = x - d * c, t[6] = m + f * c, t[10] = o * l;
        } else if (e.order === "YXZ") {
            let d1 = l * h, f1 = l * u, m1 = c * h, x1 = c * u;
            t[0] = d1 + x1 * a, t[4] = m1 * a - f1, t[8] = o * c, t[1] = o * u, t[5] = o * h, t[9] = -a, t[2] = f1 * a - m1, t[6] = x1 + d1 * a, t[10] = o * l;
        } else if (e.order === "ZXY") {
            let d2 = l * h, f2 = l * u, m2 = c * h, x2 = c * u;
            t[0] = d2 - x2 * a, t[4] = -o * u, t[8] = m2 + f2 * a, t[1] = f2 + m2 * a, t[5] = o * h, t[9] = x2 - d2 * a, t[2] = -o * c, t[6] = a, t[10] = o * l;
        } else if (e.order === "ZYX") {
            let d3 = o * h, f3 = o * u, m3 = a * h, x3 = a * u;
            t[0] = l * h, t[4] = m3 * c - f3, t[8] = d3 * c + x3, t[1] = l * u, t[5] = x3 * c + d3, t[9] = f3 * c - m3, t[2] = -c, t[6] = a * l, t[10] = o * l;
        } else if (e.order === "YZX") {
            let d4 = o * l, f4 = o * c, m4 = a * l, x4 = a * c;
            t[0] = l * h, t[4] = x4 - d4 * u, t[8] = m4 * u + f4, t[1] = u, t[5] = o * h, t[9] = -a * h, t[2] = -c * h, t[6] = f4 * u + m4, t[10] = d4 - x4 * u;
        } else if (e.order === "XZY") {
            let d5 = o * l, f5 = o * c, m5 = a * l, x5 = a * c;
            t[0] = l * h, t[4] = -u, t[8] = c * h, t[1] = d5 * u + x5, t[5] = o * h, t[9] = f5 * u - m5, t[2] = m5 * u - f5, t[6] = a * h, t[10] = x5 * u + d5;
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromQuaternion(e) {
        return this.compose(tf, e, nf);
    }
    lookAt(e, t, n) {
        let i = this.elements;
        return St.subVectors(e, t), St.lengthSq() === 0 && (St.z = 1), St.normalize(), pn.crossVectors(n, St), pn.lengthSq() === 0 && (Math.abs(n.z) === 1 ? St.x += 1e-4 : St.z += 1e-4, St.normalize(), pn.crossVectors(n, St)), pn.normalize(), Zr.crossVectors(St, pn), i[0] = pn.x, i[4] = Zr.x, i[8] = St.x, i[1] = pn.y, i[5] = Zr.y, i[9] = St.y, i[2] = pn.z, i[6] = Zr.z, i[10] = St.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[4], l = n[8], c = n[12], h = n[1], u = n[5], d = n[9], f = n[13], m = n[2], x = n[6], v = n[10], g = n[14], p = n[3], _ = n[7], y = n[11], b = n[15], A = i[0], L = i[4], I = i[8], k = i[12], B = i[1], P = i[5], w = i[9], E = i[13], D = i[2], U = i[6], F = i[10], O = i[14], ne = i[3], ce = i[7], V = i[11], W = i[15];
        return r[0] = o * A + a * B + l * D + c * ne, r[4] = o * L + a * P + l * U + c * ce, r[8] = o * I + a * w + l * F + c * V, r[12] = o * k + a * E + l * O + c * W, r[1] = h * A + u * B + d * D + f * ne, r[5] = h * L + u * P + d * U + f * ce, r[9] = h * I + u * w + d * F + f * V, r[13] = h * k + u * E + d * O + f * W, r[2] = m * A + x * B + v * D + g * ne, r[6] = m * L + x * P + v * U + g * ce, r[10] = m * I + x * w + v * F + g * V, r[14] = m * k + x * E + v * O + g * W, r[3] = p * A + _ * B + y * D + b * ne, r[7] = p * L + _ * P + y * U + b * ce, r[11] = p * I + _ * w + y * F + b * V, r[15] = p * k + _ * E + y * O + b * W, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], a = e[5], l = e[9], c = e[13], h = e[2], u = e[6], d = e[10], f = e[14], m = e[3], x = e[7], v = e[11], g = e[15];
        return m * (+r * l * u - i * c * u - r * a * d + n * c * d + i * a * f - n * l * f) + x * (+t * l * f - t * c * d + r * o * d - i * o * f + i * c * h - r * l * h) + v * (+t * c * u - t * a * f - r * o * u + n * o * f + r * a * h - n * c * h) + g * (-i * a * h - t * l * u + t * a * d + i * o * u - n * o * d + n * l * h);
    }
    transpose() {
        let e = this.elements, t;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
    }
    setPosition(e, t, n) {
        let i = this.elements;
        return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = e[9], d = e[10], f = e[11], m = e[12], x = e[13], v = e[14], g = e[15], p = u * v * c - x * d * c + x * l * f - a * v * f - u * l * g + a * d * g, _ = m * d * c - h * v * c - m * l * f + o * v * f + h * l * g - o * d * g, y = h * x * c - m * u * c + m * a * f - o * x * f - h * a * g + o * u * g, b = m * u * l - h * x * l - m * a * d + o * x * d + h * a * v - o * u * v, A = t * p + n * _ + i * y + r * b;
        if (A === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        let L = 1 / A;
        return e[0] = p * L, e[1] = (x * d * r - u * v * r - x * i * f + n * v * f + u * i * g - n * d * g) * L, e[2] = (a * v * r - x * l * r + x * i * c - n * v * c - a * i * g + n * l * g) * L, e[3] = (u * l * r - a * d * r - u * i * c + n * d * c + a * i * f - n * l * f) * L, e[4] = _ * L, e[5] = (h * v * r - m * d * r + m * i * f - t * v * f - h * i * g + t * d * g) * L, e[6] = (m * l * r - o * v * r - m * i * c + t * v * c + o * i * g - t * l * g) * L, e[7] = (o * d * r - h * l * r + h * i * c - t * d * c - o * i * f + t * l * f) * L, e[8] = y * L, e[9] = (m * u * r - h * x * r - m * n * f + t * x * f + h * n * g - t * u * g) * L, e[10] = (o * x * r - m * a * r + m * n * c - t * x * c - o * n * g + t * a * g) * L, e[11] = (h * a * r - o * u * r - h * n * c + t * u * c + o * n * f - t * a * f) * L, e[12] = b * L, e[13] = (h * x * i - m * u * i + m * n * d - t * x * d - h * n * v + t * u * v) * L, e[14] = (m * a * i - o * x * i - m * n * l + t * x * l + o * n * v - t * a * v) * L, e[15] = (o * u * i - h * a * i + h * n * l - t * u * l - o * n * d + t * a * d) * L, this;
    }
    scale(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z;
        return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
    }
    getMaxScaleOnAxis() {
        let e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
    }
    makeRotationX(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, a = e.y, l = e.z, c = r * o, h = r * a;
        return this.set(c * o + n, c * a - i * l, c * l + i * a, 0, c * a + i * l, h * a + n, h * l - i * o, 0, c * l - i * a, h * l + i * o, r * l * l + n, 0, 0, 0, 0, 1), this;
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, r, o) {
        return this.set(1, n, r, 0, e, 1, o, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        let i = this.elements, r = t._x, o = t._y, a = t._z, l = t._w, c = r + r, h = o + o, u = a + a, d = r * c, f = r * h, m = r * u, x = o * h, v = o * u, g = a * u, p = l * c, _ = l * h, y = l * u, b = n.x, A = n.y, L = n.z;
        return i[0] = (1 - (x + g)) * b, i[1] = (f + y) * b, i[2] = (m - _) * b, i[3] = 0, i[4] = (f - y) * A, i[5] = (1 - (d + g)) * A, i[6] = (v + p) * A, i[7] = 0, i[8] = (m + _) * L, i[9] = (v - p) * L, i[10] = (1 - (d + x)) * L, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
    }
    decompose(e, t, n) {
        let i = this.elements, r = si.set(i[0], i[1], i[2]).length(), o = si.set(i[4], i[5], i[6]).length(), a = si.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], It.copy(this);
        let c = 1 / r, h = 1 / o, u = 1 / a;
        return It.elements[0] *= c, It.elements[1] *= c, It.elements[2] *= c, It.elements[4] *= h, It.elements[5] *= h, It.elements[6] *= h, It.elements[8] *= u, It.elements[9] *= u, It.elements[10] *= u, t.setFromRotationMatrix(It), n.x = r, n.y = o, n.z = a, this;
    }
    makePerspective(e, t, n, i, r, o) {
        o === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        let a = this.elements, l = 2 * r / (t - e), c = 2 * r / (n - i), h = (t + e) / (t - e), u = (n + i) / (n - i), d = -(o + r) / (o - r), f = -2 * o * r / (o - r);
        return a[0] = l, a[4] = 0, a[8] = h, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = d, a[14] = f, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;
    }
    makeOrthographic(e, t, n, i, r, o) {
        let a = this.elements, l = 1 / (t - e), c = 1 / (n - i), h = 1 / (o - r), u = (t + e) * l, d = (n + i) * c, f = (o + r) * h;
        return a[0] = 2 * l, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -d, a[2] = 0, a[6] = 0, a[10] = -2 * h, a[14] = -f, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 16; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 16; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
    }
};
pe.prototype.isMatrix4 = !0;
var si = new M, It = new pe, tf = new M(0, 0, 0), nf = new M(1, 1, 1), pn = new M, Zr = new M, St = new M, _l = new pe, Ml = new gt, Zn = class {
    constructor(e = 0, t = 0, n = 0, i = Zn.DefaultOrder){
        this._x = e, this._y = t, this._z = n, this._order = i;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        this._order = e, this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return this._x = e, this._y = t, this._z = n, this._order = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        let i = e.elements, r = i[0], o = i[4], a = i[8], l = i[1], c = i[5], h = i[9], u = i[2], d = i[6], f = i[10];
        switch(t){
            case "XYZ":
                this._y = Math.asin(mt(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(d, c), this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-mt(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(a, f), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, r), this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(mt(d, -1, 1)), Math.abs(d) < .9999999 ? (this._y = Math.atan2(-u, f), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, r));
                break;
            case "ZYX":
                this._y = Math.asin(-mt(u, -1, 1)), Math.abs(u) < .9999999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(l, r)) : (this._x = 0, this._z = Math.atan2(-o, c));
                break;
            case "YZX":
                this._z = Math.asin(mt(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(a, f));
                break;
            case "XZY":
                this._z = Math.asin(-mt(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-h, f), this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
        }
        return this._order = t, n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return _l.makeRotationFromQuaternion(e), this.setFromRotationMatrix(_l, t, n);
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return Ml.setFromEuler(this), this.setFromQuaternion(Ml, e);
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    }
    fromArray(e) {
        return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
    }
    toVector3(e) {
        return e ? e.set(this._x, this._y, this._z) : new M(this._x, this._y, this._z);
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
Zn.prototype.isEuler = !0;
Zn.DefaultOrder = "XYZ";
Zn.RotationOrders = [
    "XYZ",
    "YZX",
    "ZXY",
    "XZY",
    "YXZ",
    "ZYX"
];
var Js = class {
    constructor(){
        this.mask = 1;
    }
    set(e) {
        this.mask = (1 << e | 0) >>> 0;
    }
    enable(e) {
        this.mask |= 1 << e | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= 1 << e | 0;
    }
    disable(e) {
        this.mask &= ~(1 << e | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & (1 << e | 0)) !== 0;
    }
}, rf = 0, bl = new M, oi = new gt, Qt = new pe, $r = new M, Zi = new M, sf = new M, of = new gt, wl = new M(1, 0, 0), Sl = new M(0, 1, 0), Tl = new M(0, 0, 1), af = {
    type: "added"
}, El = {
    type: "removed"
}, Ne = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: rf++
        }), this.uuid = Et(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ne.DefaultUp.clone();
        let e = new M, t = new Zn, n = new gt, i = new M(1, 1, 1);
        function r() {
            n.setFromEuler(t, !1);
        }
        function o() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(r), n._onChange(o), Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new pe
            },
            normalMatrix: {
                value: new lt
            }
        }), this.matrix = new pe, this.matrixWorld = new pe, this.matrixAutoUpdate = Ne.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Js, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
    }
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.multiply(oi), this;
    }
    rotateOnWorldAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.premultiply(oi), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(wl, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(Sl, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis(Tl, e);
    }
    translateOnAxis(e, t) {
        return bl.copy(e).applyQuaternion(this.quaternion), this.position.add(bl.multiplyScalar(t)), this;
    }
    translateX(e) {
        return this.translateOnAxis(wl, e);
    }
    translateY(e) {
        return this.translateOnAxis(Sl, e);
    }
    translateZ(e) {
        return this.translateOnAxis(Tl, e);
    }
    localToWorld(e) {
        return e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return e.applyMatrix4(Qt.copy(this.matrixWorld).invert());
    }
    lookAt(e, t, n) {
        e.isVector3 ? $r.copy(e) : $r.set(e, t, n);
        let i = this.parent;
        this.updateWorldMatrix(!0, !1), Zi.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Qt.lookAt(Zi, $r, this.up) : Qt.lookAt($r, Zi, this.up), this.quaternion.setFromRotationMatrix(Qt), i && (Qt.extractRotation(i.matrixWorld), oi.setFromRotationMatrix(Qt), this.quaternion.premultiply(oi.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);
            return this;
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(af)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for(let n = 0; n < arguments.length; n++)this.remove(arguments[n]);
            return this;
        }
        let t = this.children.indexOf(e);
        return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(El)), this;
    }
    removeFromParent() {
        let e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        for(let e = 0; e < this.children.length; e++){
            let t = this.children[e];
            t.parent = null, t.dispatchEvent(El);
        }
        return this.children.length = 0, this;
    }
    attach(e) {
        return this.updateWorldMatrix(!0, !1), Qt.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), Qt.multiply(e.parent.matrixWorld)), e.applyMatrix4(Qt), this.add(e), e.updateWorldMatrix(!1, !0), this;
    }
    getObjectById(e) {
        return this.getObjectByProperty("id", e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty("name", e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for(let n = 0, i = this.children.length; n < i; n++){
            let o = this.children[n].getObjectByProperty(e, t);
            if (o !== void 0) return o;
        }
    }
    getWorldPosition(e) {
        return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
    }
    getWorldQuaternion(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, e, sf), e;
    }
    getWorldScale(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, of, e), e;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        let t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].updateMatrixWorld(e);
    }
    updateWorldMatrix(e, t) {
        let n = this.parent;
        if (e === !0 && n !== null && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
            let i = this.children;
            for(let r = 0, o = i.length; r < o; r++)i[r].updateWorldMatrix(!1, !0);
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string", n = {};
        t && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {},
            shapes: {},
            skeletons: {},
            animations: {}
        }, n.metadata = {
            version: 4.5,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        let i = {};
        i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
        function r(a, l) {
            return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
        }
        if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = r(e.geometries, this.geometry);
            let a = this.geometry.parameters;
            if (a !== void 0 && a.shapes !== void 0) {
                let l = a.shapes;
                if (Array.isArray(l)) for(let c = 0, h = l.length; c < h; c++){
                    let u = l[c];
                    r(e.shapes, u);
                }
                else r(e.shapes, l);
            }
        }
        if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (r(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
            let a1 = [];
            for(let l1 = 0, c1 = this.material.length; l1 < c1; l1++)a1.push(r(e.materials, this.material[l1]));
            i.material = a1;
        } else i.material = r(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for(let a2 = 0; a2 < this.children.length; a2++)i.children.push(this.children[a2].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for(let a3 = 0; a3 < this.animations.length; a3++){
                let l2 = this.animations[a3];
                i.animations.push(r(e.animations, l2));
            }
        }
        if (t) {
            let a4 = o(e.geometries), l3 = o(e.materials), c2 = o(e.textures), h1 = o(e.images), u1 = o(e.shapes), d = o(e.skeletons), f = o(e.animations);
            a4.length > 0 && (n.geometries = a4), l3.length > 0 && (n.materials = l3), c2.length > 0 && (n.textures = c2), h1.length > 0 && (n.images = h1), u1.length > 0 && (n.shapes = u1), d.length > 0 && (n.skeletons = d), f.length > 0 && (n.animations = f);
        }
        return n.object = i, n;
        function o(a) {
            let l = [];
            for(let c in a){
                let h = a[c];
                delete h.metadata, l.push(h);
            }
            return l;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0) for(let n = 0; n < e.children.length; n++){
            let i = e.children[n];
            this.add(i.clone());
        }
        return this;
    }
};
Ne.DefaultUp = new M(0, 1, 0);
Ne.DefaultMatrixAutoUpdate = !0;
Ne.prototype.isObject3D = !0;
var Dt = new M, Kt = new M, Co = new M, en = new M, ai = new M, li = new M, Al = new M, Lo = new M, Ro = new M, Po = new M, nt = class {
    constructor(e = new M, t = new M, n = new M){
        this.a = e, this.b = t, this.c = n;
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Dt.subVectors(e, t), i.cross(Dt);
        let r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, r) {
        Dt.subVectors(i, t), Kt.subVectors(n, t), Co.subVectors(e, t);
        let o = Dt.dot(Dt), a = Dt.dot(Kt), l = Dt.dot(Co), c = Kt.dot(Kt), h = Kt.dot(Co), u = o * c - a * a;
        if (u === 0) return r.set(-2, -1, -1);
        let d = 1 / u, f = (c * l - a * h) * d, m = (o * h - a * l) * d;
        return r.set(1 - f - m, m, f);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, en), en.x >= 0 && en.y >= 0 && en.x + en.y <= 1;
    }
    static getUV(e, t, n, i, r, o, a, l) {
        return this.getBarycoord(e, t, n, i, en), l.set(0, 0), l.addScaledVector(r, en.x), l.addScaledVector(o, en.y), l.addScaledVector(a, en.z), l;
    }
    static isFrontFacing(e, t, n, i) {
        return Dt.subVectors(n, t), Kt.subVectors(e, t), Dt.cross(Kt).dot(i) < 0;
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, n), this.c.fromBufferAttribute(e, i), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return Dt.subVectors(this.c, this.b), Kt.subVectors(this.a, this.b), Dt.cross(Kt).length() * .5;
    }
    getMidpoint(e) {
        return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return nt.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return nt.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getUV(e, t, n, i, r) {
        return nt.getUV(e, this.a, this.b, this.c, t, n, i, r);
    }
    containsPoint(e) {
        return nt.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return nt.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        let n = this.a, i = this.b, r = this.c, o, a;
        ai.subVectors(i, n), li.subVectors(r, n), Lo.subVectors(e, n);
        let l = ai.dot(Lo), c = li.dot(Lo);
        if (l <= 0 && c <= 0) return t.copy(n);
        Ro.subVectors(e, i);
        let h = ai.dot(Ro), u = li.dot(Ro);
        if (h >= 0 && u <= h) return t.copy(i);
        let d = l * u - h * c;
        if (d <= 0 && l >= 0 && h <= 0) return o = l / (l - h), t.copy(n).addScaledVector(ai, o);
        Po.subVectors(e, r);
        let f = ai.dot(Po), m = li.dot(Po);
        if (m >= 0 && f <= m) return t.copy(r);
        let x = f * c - l * m;
        if (x <= 0 && c >= 0 && m <= 0) return a = c / (c - m), t.copy(n).addScaledVector(li, a);
        let v = h * m - f * u;
        if (v <= 0 && u - h >= 0 && f - m >= 0) return Al.subVectors(r, i), a = (u - h) / (u - h + (f - m)), t.copy(i).addScaledVector(Al, a);
        let g = 1 / (v + x + d);
        return o = x * g, a = d * g, t.copy(n).addScaledVector(ai, o).addScaledVector(li, a);
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}, lf = 0, dt = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: lf++
        }), this.uuid = Et(), this.name = "", this.type = "Material", this.fog = !0, this.blending = sr, this.side = Ai, this.vertexColors = !1, this.opacity = 1, this.format = ct, this.transparent = !1, this.blendSrc = Gc, this.blendDst = Vc, this.blendEquation = _i, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = ea, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = Ud, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = vo, this.stencilZFail = vo, this.stencilZPass = vo, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
    }
    onBuild() {}
    onBeforeRender() {}
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0) for(let t in e){
            let n = e[t];
            if (n === void 0) {
                console.warn("THREE.Material: '" + t + "' parameter is undefined.");
                continue;
            }
            if (t === "shading") {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = n === kc;
                continue;
            }
            let i = this[t];
            if (i === void 0) {
                console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
                continue;
            }
            i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n;
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        t && (e = {
            textures: {},
            images: {}
        });
        let n = {
            metadata: {
                version: 4.5,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        n.uuid = this.uuid, n.type = this.type, this.name !== "" && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), this.roughness !== void 0 && (n.roughness = this.roughness), this.metalness !== void 0 && (n.metalness = this.metalness), this.sheen !== void 0 && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (n.shininess = this.shininess), this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (n.combine = this.combine)), this.envMapIntensity !== void 0 && (n.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (n.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && (n.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (n.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (n.size = this.size), this.shadowSide !== null && (n.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== sr && (n.blending = this.blending), this.side !== Ai && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.format !== ct && (n.format = this.format), this.transparent === !0 && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && this.rotation !== 0 && (n.rotation = this.rotation), this.polygonOffset === !0 && (n.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (n.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && this.linewidth !== 1 && (n.linewidth = this.linewidth), this.dashSize !== void 0 && (n.dashSize = this.dashSize), this.gapSize !== void 0 && (n.gapSize = this.gapSize), this.scale !== void 0 && (n.scale = this.scale), this.dithering === !0 && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), this.alphaToCoverage === !0 && (n.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === !0 && (n.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (n.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (n.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (n.flatShading = this.flatShading), this.visible === !1 && (n.visible = !1), this.toneMapped === !1 && (n.toneMapped = !1), JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData);
        function i(r) {
            let o = [];
            for(let a in r){
                let l = r[a];
                delete l.metadata, o.push(l);
            }
            return o;
        }
        if (t) {
            let r = i(e.textures), o = i(e.images);
            r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.format = e.format, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        let t = e.clippingPlanes, n = null;
        if (t !== null) {
            let i = t.length;
            n = new Array(i);
            for(let r = 0; r !== i; ++r)n[r] = t[r].clone();
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
dt.prototype.isMaterial = !0;
var $c = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, Ft = {
    h: 0,
    s: 0,
    l: 0
}, jr = {
    h: 0,
    s: 0,
    l: 0
};
function Io(s, e, t) {
    return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? s + (e - s) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? s + (e - s) * 6 * (2 / 3 - t) : s;
}
function Do(s) {
    return s < .04045 ? s * .0773993808 : Math.pow(s * .9478672986 + .0521327014, 2.4);
}
function Fo(s) {
    return s < .0031308 ? s * 12.92 : 1.055 * Math.pow(s, .41666) - .055;
}
var ae = class {
    constructor(e, t, n){
        return t === void 0 && n === void 0 ? this.set(e) : this.setRGB(e, t, n);
    }
    set(e) {
        return e && e.isColor ? this.copy(e) : typeof e == "number" ? this.setHex(e) : typeof e == "string" && this.setStyle(e), this;
    }
    setScalar(e) {
        return this.r = e, this.g = e, this.b = e, this;
    }
    setHex(e) {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, this;
    }
    setRGB(e, t, n) {
        return this.r = e, this.g = t, this.b = n, this;
    }
    setHSL(e, t, n) {
        if (e = da(e, 1), t = mt(t, 0, 1), n = mt(n, 0, 1), t === 0) this.r = this.g = this.b = n;
        else {
            let i = n <= .5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
            this.r = Io(r, i, e + 1 / 3), this.g = Io(r, i, e), this.b = Io(r, i, e - 1 / 3);
        }
        return this;
    }
    setStyle(e) {
        function t(i) {
            i !== void 0 && parseFloat(i) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
        }
        let n;
        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
            let i, r = n[1], o = n[2];
            switch(r){
                case "rgb":
                case "rgba":
                    if (i = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[4]), this;
                    if (i = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[4]), this;
                    break;
                case "hsl":
                case "hsla":
                    if (i = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) {
                        let a = parseFloat(i[1]) / 360, l = parseInt(i[2], 10) / 100, c = parseInt(i[3], 10) / 100;
                        return t(i[4]), this.setHSL(a, l, c);
                    }
                    break;
            }
        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
            let i1 = n[1], r1 = i1.length;
            if (r1 === 3) return this.r = parseInt(i1.charAt(0) + i1.charAt(0), 16) / 255, this.g = parseInt(i1.charAt(1) + i1.charAt(1), 16) / 255, this.b = parseInt(i1.charAt(2) + i1.charAt(2), 16) / 255, this;
            if (r1 === 6) return this.r = parseInt(i1.charAt(0) + i1.charAt(1), 16) / 255, this.g = parseInt(i1.charAt(2) + i1.charAt(3), 16) / 255, this.b = parseInt(i1.charAt(4) + i1.charAt(5), 16) / 255, this;
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
    }
    setColorName(e) {
        let t = $c[e.toLowerCase()];
        return t !== void 0 ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this;
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return this.r = e.r, this.g = e.g, this.b = e.b, this;
    }
    copySRGBToLinear(e) {
        return this.r = Do(e.r), this.g = Do(e.g), this.b = Do(e.b), this;
    }
    copyLinearToSRGB(e) {
        return this.r = Fo(e.r), this.g = Fo(e.g), this.b = Fo(e.b), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex() {
        return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;
    }
    getHexString() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
    }
    getHSL(e) {
        let t = this.r, n = this.g, i = this.b, r = Math.max(t, n, i), o = Math.min(t, n, i), a, l, c = (o + r) / 2;
        if (o === r) a = 0, l = 0;
        else {
            let h = r - o;
            switch(l = c <= .5 ? h / (r + o) : h / (2 - r - o), r){
                case t:
                    a = (n - i) / h + (n < i ? 6 : 0);
                    break;
                case n:
                    a = (i - t) / h + 2;
                    break;
                case i:
                    a = (t - n) / h + 4;
                    break;
            }
            a /= 6;
        }
        return e.h = a, e.s = l, e.l = c, e;
    }
    getStyle() {
        return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
    }
    offsetHSL(e, t, n) {
        return this.getHSL(Ft), Ft.h += e, Ft.s += t, Ft.l += n, this.setHSL(Ft.h, Ft.s, Ft.l), this;
    }
    add(e) {
        return this.r += e.r, this.g += e.g, this.b += e.b, this;
    }
    addColors(e, t) {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
    }
    addScalar(e) {
        return this.r += e, this.g += e, this.b += e, this;
    }
    sub(e) {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
    }
    multiply(e) {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
    }
    multiplyScalar(e) {
        return this.r *= e, this.g *= e, this.b *= e, this;
    }
    lerp(e, t) {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
    }
    lerpColors(e, t, n) {
        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this;
    }
    lerpHSL(e, t) {
        this.getHSL(Ft), e.getHSL(jr);
        let n = or(Ft.h, jr.h, t), i = or(Ft.s, jr.s, t), r = or(Ft.l, jr.l, t);
        return this.setHSL(n, i, r), this;
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
    }
    fromBufferAttribute(e, t) {
        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), e.normalized === !0 && (this.r /= 255, this.g /= 255, this.b /= 255), this;
    }
    toJSON() {
        return this.getHex();
    }
};
ae.NAMES = $c;
ae.prototype.isColor = !0;
ae.prototype.r = 1;
ae.prototype.g = 1;
ae.prototype.b = 1;
var hn = class extends dt {
    constructor(e){
        super();
        this.type = "MeshBasicMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
hn.prototype.isMeshBasicMaterial = !0;
var Je = new M, Qr = new X, Ue = class {
    constructor(e, t, n){
        if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = n === !0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0;
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.itemSize, n *= t.itemSize;
        for(let i = 0, r = this.itemSize; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    copyColorsArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new ae), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
        }
        return this;
    }
    copyVector2sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new X), t[n++] = o.x, t[n++] = o.y;
        }
        return this;
    }
    copyVector3sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new M), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
        }
        return this;
    }
    copyVector4sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new Ve), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
        }
        return this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2) for(let t = 0, n = this.count; t < n; t++)Qr.fromBufferAttribute(this, t), Qr.applyMatrix3(e), this.setXY(t, Qr.x, Qr.y);
        else if (this.itemSize === 3) for(let t1 = 0, n1 = this.count; t1 < n1; t1++)Je.fromBufferAttribute(this, t1), Je.applyMatrix3(e), this.setXYZ(t1, Je.x, Je.y, Je.z);
        return this;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyMatrix4(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyNormalMatrix(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.transformDirection(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getX(e) {
        return this.array[e * this.itemSize];
    }
    setX(e, t) {
        return this.array[e * this.itemSize] = t, this;
    }
    getY(e) {
        return this.array[e * this.itemSize + 1];
    }
    setY(e, t) {
        return this.array[e * this.itemSize + 1] = t, this;
    }
    getZ(e) {
        return this.array[e * this.itemSize + 2];
    }
    setZ(e, t) {
        return this.array[e * this.itemSize + 2] = t, this;
    }
    getW(e) {
        return this.array[e * this.itemSize + 3];
    }
    setW(e, t) {
        return this.array[e * this.itemSize + 3] = t, this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized
        };
        return this.name !== "" && (e.name = this.name), this.usage !== hr && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
    }
};
Ue.prototype.isBufferAttribute = !0;
var jc = class extends Ue {
    constructor(e, t, n){
        super(new Int8Array(e), t, n);
    }
}, Qc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8Array(e), t, n);
    }
}, Kc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8ClampedArray(e), t, n);
    }
}, eh = class extends Ue {
    constructor(e, t, n){
        super(new Int16Array(e), t, n);
    }
}, Ys = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
}, th = class extends Ue {
    constructor(e, t, n){
        super(new Int32Array(e), t, n);
    }
}, Zs = class extends Ue {
    constructor(e, t, n){
        super(new Uint32Array(e), t, n);
    }
}, nh = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
};
nh.prototype.isFloat16BufferAttribute = !0;
var de = class extends Ue {
    constructor(e, t, n){
        super(new Float32Array(e), t, n);
    }
}, ih = class extends Ue {
    constructor(e, t, n){
        super(new Float64Array(e), t, n);
    }
}, cf = 0, Rt = new pe, No = new Ne, ci = new M, Tt = new Lt, $i = new Lt, ht = new M, _e = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: cf++
        }), this.uuid = Et(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {};
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return Array.isArray(e) ? this.index = new (Yc(e) > 65535 ? Zs : Ys)(e, 1) : this.index = e, this;
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return this.attributes[e] = t, this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: n
        });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        this.drawRange.start = e, this.drawRange.count = t;
    }
    applyMatrix4(e) {
        let t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
        let n = this.attributes.normal;
        if (n !== void 0) {
            let r = new lt().getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0;
        }
        let i = this.attributes.tangent;
        return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
    }
    applyQuaternion(e) {
        return Rt.makeRotationFromQuaternion(e), this.applyMatrix4(Rt), this;
    }
    rotateX(e) {
        return Rt.makeRotationX(e), this.applyMatrix4(Rt), this;
    }
    rotateY(e) {
        return Rt.makeRotationY(e), this.applyMatrix4(Rt), this;
    }
    rotateZ(e) {
        return Rt.makeRotationZ(e), this.applyMatrix4(Rt), this;
    }
    translate(e, t, n) {
        return Rt.makeTranslation(e, t, n), this.applyMatrix4(Rt), this;
    }
    scale(e, t, n) {
        return Rt.makeScale(e, t, n), this.applyMatrix4(Rt), this;
    }
    lookAt(e) {
        return No.lookAt(e), No.updateMatrix(), this.applyMatrix4(No.matrix), this;
    }
    center() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(ci).negate(), this.translate(ci.x, ci.y, ci.z), this;
    }
    setFromPoints(e) {
        let t = [];
        for(let n = 0, i = e.length; n < i; n++){
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute("position", new de(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Lt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new M(-1 / 0, -1 / 0, -1 / 0), new M(1 / 0, 1 / 0, 1 / 0));
            return;
        }
        if (e !== void 0) {
            if (this.boundingBox.setFromBufferAttribute(e), t) for(let n = 0, i = t.length; n < i; n++){
                let r = t[n];
                Tt.setFromBufferAttribute(r), this.morphTargetsRelative ? (ht.addVectors(this.boundingBox.min, Tt.min), this.boundingBox.expandByPoint(ht), ht.addVectors(this.boundingBox.max, Tt.max), this.boundingBox.expandByPoint(ht)) : (this.boundingBox.expandByPoint(Tt.min), this.boundingBox.expandByPoint(Tt.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new An);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new M, 1 / 0);
            return;
        }
        if (e) {
            let n = this.boundingSphere.center;
            if (Tt.setFromBufferAttribute(e), t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r];
                $i.setFromBufferAttribute(a), this.morphTargetsRelative ? (ht.addVectors(Tt.min, $i.min), Tt.expandByPoint(ht), ht.addVectors(Tt.max, $i.max), Tt.expandByPoint(ht)) : (Tt.expandByPoint($i.min), Tt.expandByPoint($i.max));
            }
            Tt.getCenter(n);
            let i = 0;
            for(let r1 = 0, o1 = e.count; r1 < o1; r1++)ht.fromBufferAttribute(e, r1), i = Math.max(i, n.distanceToSquared(ht));
            if (t) for(let r2 = 0, o2 = t.length; r2 < o2; r2++){
                let a1 = t[r2], l = this.morphTargetsRelative;
                for(let c = 0, h = a1.count; c < h; c++)ht.fromBufferAttribute(a1, c), l && (ci.fromBufferAttribute(e, c), ht.add(ci)), i = Math.max(i, n.distanceToSquared(ht));
            }
            this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
    }
    computeTangents() {
        let e = this.index, t = this.attributes;
        if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
            console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
            return;
        }
        let n = e.array, i = t.position.array, r = t.normal.array, o = t.uv.array, a = i.length / 3;
        t.tangent === void 0 && this.setAttribute("tangent", new Ue(new Float32Array(4 * a), 4));
        let l = t.tangent.array, c = [], h = [];
        for(let B = 0; B < a; B++)c[B] = new M, h[B] = new M;
        let u = new M, d = new M, f = new M, m = new X, x = new X, v = new X, g = new M, p = new M;
        function _(B, P, w) {
            u.fromArray(i, B * 3), d.fromArray(i, P * 3), f.fromArray(i, w * 3), m.fromArray(o, B * 2), x.fromArray(o, P * 2), v.fromArray(o, w * 2), d.sub(u), f.sub(u), x.sub(m), v.sub(m);
            let E = 1 / (x.x * v.y - v.x * x.y);
            !isFinite(E) || (g.copy(d).multiplyScalar(v.y).addScaledVector(f, -x.y).multiplyScalar(E), p.copy(f).multiplyScalar(x.x).addScaledVector(d, -v.x).multiplyScalar(E), c[B].add(g), c[P].add(g), c[w].add(g), h[B].add(p), h[P].add(p), h[w].add(p));
        }
        let y = this.groups;
        y.length === 0 && (y = [
            {
                start: 0,
                count: n.length
            }
        ]);
        for(let B1 = 0, P = y.length; B1 < P; ++B1){
            let w = y[B1], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)_(n[U + 0], n[U + 1], n[U + 2]);
        }
        let b = new M, A = new M, L = new M, I = new M;
        function k(B) {
            L.fromArray(r, B * 3), I.copy(L);
            let P = c[B];
            b.copy(P), b.sub(L.multiplyScalar(L.dot(P))).normalize(), A.crossVectors(I, P);
            let E = A.dot(h[B]) < 0 ? -1 : 1;
            l[B * 4] = b.x, l[B * 4 + 1] = b.y, l[B * 4 + 2] = b.z, l[B * 4 + 3] = E;
        }
        for(let B2 = 0, P1 = y.length; B2 < P1; ++B2){
            let w1 = y[B2], E1 = w1.start, D1 = w1.count;
            for(let U1 = E1, F1 = E1 + D1; U1 < F1; U1 += 3)k(n[U1 + 0]), k(n[U1 + 1]), k(n[U1 + 2]);
        }
    }
    computeVertexNormals() {
        let e = this.index, t = this.getAttribute("position");
        if (t !== void 0) {
            let n = this.getAttribute("normal");
            if (n === void 0) n = new Ue(new Float32Array(t.count * 3), 3), this.setAttribute("normal", n);
            else for(let d = 0, f = n.count; d < f; d++)n.setXYZ(d, 0, 0, 0);
            let i = new M, r = new M, o = new M, a = new M, l = new M, c = new M, h = new M, u = new M;
            if (e) for(let d1 = 0, f1 = e.count; d1 < f1; d1 += 3){
                let m = e.getX(d1 + 0), x = e.getX(d1 + 1), v = e.getX(d1 + 2);
                i.fromBufferAttribute(t, m), r.fromBufferAttribute(t, x), o.fromBufferAttribute(t, v), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), a.fromBufferAttribute(n, m), l.fromBufferAttribute(n, x), c.fromBufferAttribute(n, v), a.add(h), l.add(h), c.add(h), n.setXYZ(m, a.x, a.y, a.z), n.setXYZ(x, l.x, l.y, l.z), n.setXYZ(v, c.x, c.y, c.z);
            }
            else for(let d2 = 0, f2 = t.count; d2 < f2; d2 += 3)i.fromBufferAttribute(t, d2 + 0), r.fromBufferAttribute(t, d2 + 1), o.fromBufferAttribute(t, d2 + 2), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), n.setXYZ(d2 + 0, h.x, h.y, h.z), n.setXYZ(d2 + 1, h.x, h.y, h.z), n.setXYZ(d2 + 2, h.x, h.y, h.z);
            this.normalizeNormals(), n.needsUpdate = !0;
        }
    }
    merge(e, t) {
        if (!(e && e.isBufferGeometry)) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
            return;
        }
        t === void 0 && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
        let n = this.attributes;
        for(let i in n){
            if (e.attributes[i] === void 0) continue;
            let o = n[i].array, a = e.attributes[i], l = a.array, c = a.itemSize * t, h = Math.min(l.length, o.length - c);
            for(let u = 0, d = c; u < h; u++, d++)o[d] = l[u];
        }
        return this;
    }
    normalizeNormals() {
        let e = this.attributes.normal;
        for(let t = 0, n = e.count; t < n; t++)ht.fromBufferAttribute(e, t), ht.normalize(), e.setXYZ(t, ht.x, ht.y, ht.z);
    }
    toNonIndexed() {
        function e(a, l) {
            let c = a.array, h = a.itemSize, u = a.normalized, d = new c.constructor(l.length * h), f = 0, m = 0;
            for(let x = 0, v = l.length; x < v; x++){
                a.isInterleavedBufferAttribute ? f = l[x] * a.data.stride + a.offset : f = l[x] * h;
                for(let g = 0; g < h; g++)d[m++] = c[f++];
            }
            return new Ue(d, h, u);
        }
        if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
        let t = new _e, n = this.index.array, i = this.attributes;
        for(let a in i){
            let l = i[a], c = e(l, n);
            t.setAttribute(a, c);
        }
        let r = this.morphAttributes;
        for(let a1 in r){
            let l1 = [], c1 = r[a1];
            for(let h = 0, u = c1.length; h < u; h++){
                let d = c1[h], f = e(d, n);
                l1.push(f);
            }
            t.morphAttributes[a1] = l1;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        let o = this.groups;
        for(let a2 = 0, l2 = o.length; a2 < l2; a2++){
            let c2 = o[a2];
            t.addGroup(c2.start, c2.count, c2.materialIndex);
        }
        return t;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
            let l = this.parameters;
            for(let c in l)l[c] !== void 0 && (e[c] = l[c]);
            return e;
        }
        e.data = {
            attributes: {}
        };
        let t = this.index;
        t !== null && (e.data.index = {
            type: t.array.constructor.name,
            array: Array.prototype.slice.call(t.array)
        });
        let n = this.attributes;
        for(let l1 in n){
            let c1 = n[l1];
            e.data.attributes[l1] = c1.toJSON(e.data);
        }
        let i = {}, r = !1;
        for(let l2 in this.morphAttributes){
            let c2 = this.morphAttributes[l2], h = [];
            for(let u = 0, d = c2.length; u < d; u++){
                let f = c2[u];
                h.push(f.toJSON(e.data));
            }
            h.length > 0 && (i[l2] = h, r = !0);
        }
        r && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
        let o = this.groups;
        o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
        let a = this.boundingSphere;
        return a !== null && (e.data.boundingSphere = {
            center: a.center.toArray(),
            radius: a.radius
        }), e;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
        let t = {};
        this.name = e.name;
        let n = e.index;
        n !== null && this.setIndex(n.clone(t));
        let i = e.attributes;
        for(let c in i){
            let h = i[c];
            this.setAttribute(c, h.clone(t));
        }
        let r = e.morphAttributes;
        for(let c1 in r){
            let h1 = [], u = r[c1];
            for(let d = 0, f = u.length; d < f; d++)h1.push(u[d].clone(t));
            this.morphAttributes[c1] = h1;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        let o = e.groups;
        for(let c2 = 0, h2 = o.length; c2 < h2; c2++){
            let u1 = o[c2];
            this.addGroup(u1.start, u1.count, u1.materialIndex);
        }
        let a = e.boundingBox;
        a !== null && (this.boundingBox = a.clone());
        let l = e.boundingSphere;
        return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, e.parameters !== void 0 && (this.parameters = Object.assign({}, e.parameters)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
_e.prototype.isBufferGeometry = !0;
var Cl = new pe, hi = new Cn, Bo = new An, mn = new M, gn = new M, xn = new M, zo = new M, Uo = new M, Oo = new M, Kr = new M, es = new M, ts = new M, ns = new X, is = new X, rs = new X, Ho = new M, ss = new M, st = class extends Ne {
    constructor(e = new _e, t = new hn){
        super();
        this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this;
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
    raycast(e, t) {
        let n = this.geometry, i = this.material, r = this.matrixWorld;
        if (i === void 0 || (n.boundingSphere === null && n.computeBoundingSphere(), Bo.copy(n.boundingSphere), Bo.applyMatrix4(r), e.ray.intersectsSphere(Bo) === !1) || (Cl.copy(r).invert(), hi.copy(e.ray).applyMatrix4(Cl), n.boundingBox !== null && hi.intersectsBox(n.boundingBox) === !1)) return;
        let o;
        if (n.isBufferGeometry) {
            let a = n.index, l = n.attributes.position, c = n.morphAttributes.position, h = n.morphTargetsRelative, u = n.attributes.uv, d = n.attributes.uv2, f = n.groups, m = n.drawRange;
            if (a !== null) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(a.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = a.getX(b), I = a.getX(b + 1), k = a.getX(b + 2);
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x1 = Math.max(0, m.start), v1 = Math.min(a.count, m.start + m.count);
                for(let g1 = x1, p1 = v1; g1 < p1; g1 += 3){
                    let _1 = a.getX(g1), y1 = a.getX(g1 + 1), b1 = a.getX(g1 + 2);
                    o = os(this, i, e, hi, l, c, h, u, d, _1, y1, b1), o && (o.faceIndex = Math.floor(g1 / 3), t.push(o));
                }
            }
            else if (l !== void 0) if (Array.isArray(i)) for(let x2 = 0, v2 = f.length; x2 < v2; x2++){
                let g2 = f[x2], p2 = i[g2.materialIndex], _2 = Math.max(g2.start, m.start), y2 = Math.min(l.count, Math.min(g2.start + g2.count, m.start + m.count));
                for(let b2 = _2, A1 = y2; b2 < A1; b2 += 3){
                    let L1 = b2, I1 = b2 + 1, k1 = b2 + 2;
                    o = os(this, p2, e, hi, l, c, h, u, d, L1, I1, k1), o && (o.faceIndex = Math.floor(b2 / 3), o.face.materialIndex = g2.materialIndex, t.push(o));
                }
            }
            else {
                let x3 = Math.max(0, m.start), v3 = Math.min(l.count, m.start + m.count);
                for(let g3 = x3, p3 = v3; g3 < p3; g3 += 3){
                    let _3 = g3, y3 = g3 + 1, b3 = g3 + 2;
                    o = os(this, i, e, hi, l, c, h, u, d, _3, y3, b3), o && (o.faceIndex = Math.floor(g3 / 3), t.push(o));
                }
            }
        } else n.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
};
st.prototype.isMesh = !0;
function hf(s, e, t, n, i, r, o, a) {
    let l;
    if (e.side === it ? l = n.intersectTriangle(o, r, i, !0, a) : l = n.intersectTriangle(i, r, o, e.side !== Ci, a), l === null) return null;
    ss.copy(a), ss.applyMatrix4(s.matrixWorld);
    let c = t.ray.origin.distanceTo(ss);
    return c < t.near || c > t.far ? null : {
        distance: c,
        point: ss.clone(),
        object: s
    };
}
function os(s, e, t, n, i, r, o, a, l, c, h, u) {
    mn.fromBufferAttribute(i, c), gn.fromBufferAttribute(i, h), xn.fromBufferAttribute(i, u);
    let d = s.morphTargetInfluences;
    if (r && d) {
        Kr.set(0, 0, 0), es.set(0, 0, 0), ts.set(0, 0, 0);
        for(let m = 0, x = r.length; m < x; m++){
            let v = d[m], g = r[m];
            v !== 0 && (zo.fromBufferAttribute(g, c), Uo.fromBufferAttribute(g, h), Oo.fromBufferAttribute(g, u), o ? (Kr.addScaledVector(zo, v), es.addScaledVector(Uo, v), ts.addScaledVector(Oo, v)) : (Kr.addScaledVector(zo.sub(mn), v), es.addScaledVector(Uo.sub(gn), v), ts.addScaledVector(Oo.sub(xn), v)));
        }
        mn.add(Kr), gn.add(es), xn.add(ts);
    }
    s.isSkinnedMesh && (s.boneTransform(c, mn), s.boneTransform(h, gn), s.boneTransform(u, xn));
    let f = hf(s, e, t, n, mn, gn, xn, Ho);
    if (f) {
        a && (ns.fromBufferAttribute(a, c), is.fromBufferAttribute(a, h), rs.fromBufferAttribute(a, u), f.uv = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X)), l && (ns.fromBufferAttribute(l, c), is.fromBufferAttribute(l, h), rs.fromBufferAttribute(l, u), f.uv2 = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X));
        let m1 = {
            a: c,
            b: h,
            c: u,
            normal: new M,
            materialIndex: 0
        };
        nt.getNormal(mn, gn, xn, m1.normal), f.face = m1;
    }
    return f;
}
var wn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1, r = 1, o = 1){
        super();
        this.type = "BoxGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: o
        };
        let a = this;
        i = Math.floor(i), r = Math.floor(r), o = Math.floor(o);
        let l = [], c = [], h = [], u = [], d = 0, f = 0;
        m("z", "y", "x", -1, -1, n, t, e, o, r, 0), m("z", "y", "x", 1, -1, n, t, -e, o, r, 1), m("x", "z", "y", 1, 1, e, n, t, i, o, 2), m("x", "z", "y", 1, -1, e, n, -t, i, o, 3), m("x", "y", "z", 1, -1, e, t, n, i, r, 4), m("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(l), this.setAttribute("position", new de(c, 3)), this.setAttribute("normal", new de(h, 3)), this.setAttribute("uv", new de(u, 2));
        function m(x, v, g, p, _, y, b, A, L, I, k) {
            let B = y / L, P = b / I, w = y / 2, E = b / 2, D = A / 2, U = L + 1, F = I + 1, O = 0, ne = 0, ce = new M;
            for(let V = 0; V < F; V++){
                let W = V * P - E;
                for(let he = 0; he < U; he++){
                    let le = he * B - w;
                    ce[x] = le * p, ce[v] = W * _, ce[g] = D, c.push(ce.x, ce.y, ce.z), ce[x] = 0, ce[v] = 0, ce[g] = A > 0 ? 1 : -1, h.push(ce.x, ce.y, ce.z), u.push(he / L), u.push(1 - V / I), O += 1;
                }
            }
            for(let V1 = 0; V1 < I; V1++)for(let W1 = 0; W1 < L; W1++){
                let he1 = d + W1 + U * V1, le1 = d + W1 + U * (V1 + 1), fe = d + (W1 + 1) + U * (V1 + 1), Be = d + (W1 + 1) + U * V1;
                l.push(he1, le1, Be), l.push(le1, fe, Be), ne += 6;
            }
            a.addGroup(f, ne, k), f += ne, d += O;
        }
    }
    static fromJSON(e) {
        return new wn(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
    }
};
function Ri(s) {
    let e = {};
    for(let t in s){
        e[t] = {};
        for(let n in s[t]){
            let i = s[t][n];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? e[t][n] = i.clone() : Array.isArray(i) ? e[t][n] = i.slice() : e[t][n] = i;
        }
    }
    return e;
}
function yt(s) {
    let e = {};
    for(let t = 0; t < s.length; t++){
        let n = Ri(s[t]);
        for(let i in n)e[i] = n[i];
    }
    return e;
}
var uf = {
    clone: Ri,
    merge: yt
}, df = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, ff = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, sn = class extends dt {
    constructor(e){
        super();
        this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = df, this.fragmentShader = ff, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [
                1,
                1,
                1
            ],
            uv: [
                0,
                0
            ],
            uv2: [
                0,
                0
            ]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && (e.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
    }
    copy(e) {
        return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Ri(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        t.glslVersion = this.glslVersion, t.uniforms = {};
        for(let i in this.uniforms){
            let o = this.uniforms[i].value;
            o && o.isTexture ? t.uniforms[i] = {
                type: "t",
                value: o.toJSON(e).uuid
            } : o && o.isColor ? t.uniforms[i] = {
                type: "c",
                value: o.getHex()
            } : o && o.isVector2 ? t.uniforms[i] = {
                type: "v2",
                value: o.toArray()
            } : o && o.isVector3 ? t.uniforms[i] = {
                type: "v3",
                value: o.toArray()
            } : o && o.isVector4 ? t.uniforms[i] = {
                type: "v4",
                value: o.toArray()
            } : o && o.isMatrix3 ? t.uniforms[i] = {
                type: "m3",
                value: o.toArray()
            } : o && o.isMatrix4 ? t.uniforms[i] = {
                type: "m4",
                value: o.toArray()
            } : t.uniforms[i] = {
                value: o
            };
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
        let n = {};
        for(let i1 in this.extensions)this.extensions[i1] === !0 && (n[i1] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
};
sn.prototype.isShaderMaterial = !0;
var Ir = class extends Ne {
    constructor(){
        super();
        this.type = "Camera", this.matrixWorldInverse = new pe, this.projectionMatrix = new pe, this.projectionMatrixInverse = new pe;
    }
    copy(e, t) {
        return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(-t[8], -t[9], -t[10]).normalize();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Ir.prototype.isCamera = !0;
var ut = class extends Ir {
    constructor(e = 50, t = 1, n = .1, i = 2e3){
        super();
        this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
    }
    setFocalLength(e) {
        let t = .5 * this.getFilmHeight() / e;
        this.fov = dr * 2 * Math.atan(t), this.updateProjectionMatrix();
    }
    getFocalLength() {
        let e = Math.tan(Wn * .5 * this.fov);
        return .5 * this.getFilmHeight() / e;
    }
    getEffectiveFOV() {
        return dr * 2 * Math.atan(Math.tan(Wn * .5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    setViewOffset(e, t, n, i, r, o) {
        this.aspect = e / t, this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = this.near, t = e * Math.tan(Wn * .5 * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -.5 * i, o = this.view;
        if (this.view !== null && this.view.enabled) {
            let l = o.fullWidth, c = o.fullHeight;
            r += o.offsetX * i / l, t -= o.offsetY * n / c, i *= o.width / l, n *= o.height / c;
        }
        let a = this.filmOffset;
        a !== 0 && (r += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
    }
};
ut.prototype.isPerspectiveCamera = !0;
var ui = 90, di = 1, $s = class extends Ne {
    constructor(e, t, n){
        super();
        if (this.type = "CubeCamera", n.isWebGLCubeRenderTarget !== !0) {
            console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
            return;
        }
        this.renderTarget = n;
        let i = new ut(ui, di, e, t);
        i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new M(1, 0, 0)), this.add(i);
        let r = new ut(ui, di, e, t);
        r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new M(-1, 0, 0)), this.add(r);
        let o = new ut(ui, di, e, t);
        o.layers = this.layers, o.up.set(0, 0, 1), o.lookAt(new M(0, 1, 0)), this.add(o);
        let a = new ut(ui, di, e, t);
        a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new M(0, -1, 0)), this.add(a);
        let l = new ut(ui, di, e, t);
        l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new M(0, 0, 1)), this.add(l);
        let c = new ut(ui, di, e, t);
        c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new M(0, 0, -1)), this.add(c);
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        let n = this.renderTarget, [i, r, o, a, l, c] = this.children, h = e.xr.enabled, u = e.getRenderTarget();
        e.xr.enabled = !1;
        let d = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, r), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, a), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = d, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(u), e.xr.enabled = h;
    }
}, ki = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        e = e !== void 0 ? e : [], t = t !== void 0 ? t : Bi;
        super(e, t, n, i, r, o, a, l, c, h);
        this.flipY = !1;
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
};
ki.prototype.isCubeTexture = !0;
var js = class extends At {
    constructor(e, t, n){
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n);
        super(e, e, t);
        t = t || {}, this.texture = new ki(void 0, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.encoding), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : tt, this.texture._needsFlipEnvMap = !1;
    }
    fromEquirectangularTexture(e, t) {
        this.texture.type = t.type, this.texture.format = ct, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
        let n = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
            fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
        }, i = new wn(5, 5, 5), r = new sn({
            name: "CubemapFromEquirect",
            uniforms: Ri(n.uniforms),
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            side: it,
            blending: vn
        });
        r.uniforms.tEquirect.value = t;
        let o = new st(i, r), a = t.minFilter;
        return t.minFilter === Ui && (t.minFilter = tt), new $s(1, 10, this).update(e, o), t.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
    }
    clear(e, t, n, i) {
        let r = e.getRenderTarget();
        for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(t, n, i);
        e.setRenderTarget(r);
    }
};
js.prototype.isWebGLCubeRenderTarget = !0;
var ko = new M, pf = new M, mf = new lt, Wt = class {
    constructor(e = new M(1, 0, 0), t = 0){
        this.normal = e, this.constant = t;
    }
    set(e, t) {
        return this.normal.copy(e), this.constant = t, this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), this.constant = i, this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
    }
    setFromCoplanarPoints(e, t, n) {
        let i = ko.subVectors(n, t).cross(pf.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), this.constant = e.constant, this;
    }
    normalize() {
        let e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this;
    }
    negate() {
        return this.constant *= -1, this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
    }
    intersectLine(e, t) {
        let n = e.delta(ko), i = this.normal.dot(n);
        if (i === 0) return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        let r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1 ? null : t.copy(n).multiplyScalar(r).add(e.start);
    }
    intersectsLine(e) {
        let t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0;
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        let n = t || mf.getNormalMatrix(e), i = this.coplanarPoint(ko).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
        return this.constant = -i.dot(r), this;
    }
    translate(e) {
        return this.constant -= e.dot(this.normal), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Wt.prototype.isPlane = !0;
var fi = new An, as = new M, Dr = class {
    constructor(e = new Wt, t = new Wt, n = new Wt, i = new Wt, r = new Wt, o = new Wt){
        this.planes = [
            e,
            t,
            n,
            i,
            r,
            o
        ];
    }
    set(e, t, n, i, r, o) {
        let a = this.planes;
        return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(o), this;
    }
    copy(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e) {
        let t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], f = n[9], m = n[10], x = n[11], v = n[12], g = n[13], p = n[14], _ = n[15];
        return t[0].setComponents(a - i, u - l, x - d, _ - v).normalize(), t[1].setComponents(a + i, u + l, x + d, _ + v).normalize(), t[2].setComponents(a + r, u + c, x + f, _ + g).normalize(), t[3].setComponents(a - r, u - c, x - f, _ - g).normalize(), t[4].setComponents(a - o, u - h, x - m, _ - p).normalize(), t[5].setComponents(a + o, u + h, x + m, _ + p).normalize(), this;
    }
    intersectsObject(e) {
        let t = e.geometry;
        return t.boundingSphere === null && t.computeBoundingSphere(), fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSprite(e) {
        return fi.center.set(0, 0, 0), fi.radius = .7071067811865476, fi.applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSphere(e) {
        let t = this.planes, n = e.center, i = -e.radius;
        for(let r = 0; r < 6; r++)if (t[r].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++){
            let i = t[n];
            if (as.x = i.normal.x > 0 ? e.max.x : e.min.x, as.y = i.normal.y > 0 ? e.max.y : e.min.y, as.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(as) < 0) return !1;
        }
        return !0;
    }
    containsPoint(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
function rh() {
    let s = null, e = !1, t = null, n = null;
    function i(r, o) {
        t(r, o), n = s.requestAnimationFrame(i);
    }
    return {
        start: function() {
            e !== !0 && t !== null && (n = s.requestAnimationFrame(i), e = !0);
        },
        stop: function() {
            s.cancelAnimationFrame(n), e = !1;
        },
        setAnimationLoop: function(r) {
            t = r;
        },
        setContext: function(r) {
            s = r;
        }
    };
}
function gf(s, e) {
    let t = e.isWebGL2, n = new WeakMap;
    function i(c, h) {
        let u = c.array, d = c.usage, f = s.createBuffer();
        s.bindBuffer(h, f), s.bufferData(h, u, d), c.onUploadCallback();
        let m = 5126;
        return u instanceof Float32Array ? m = 5126 : u instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : u instanceof Uint16Array ? c.isFloat16BufferAttribute ? t ? m = 5131 : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : m = 5123 : u instanceof Int16Array ? m = 5122 : u instanceof Uint32Array ? m = 5125 : u instanceof Int32Array ? m = 5124 : u instanceof Int8Array ? m = 5120 : (u instanceof Uint8Array || u instanceof Uint8ClampedArray) && (m = 5121), {
            buffer: f,
            type: m,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: c.version
        };
    }
    function r(c, h, u) {
        let d = h.array, f = h.updateRange;
        s.bindBuffer(u, c), f.count === -1 ? s.bufferSubData(u, 0, d) : (t ? s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d, f.offset, f.count) : s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d.subarray(f.offset, f.offset + f.count)), f.count = -1);
    }
    function o(c) {
        return c.isInterleavedBufferAttribute && (c = c.data), n.get(c);
    }
    function a(c) {
        c.isInterleavedBufferAttribute && (c = c.data);
        let h = n.get(c);
        h && (s.deleteBuffer(h.buffer), n.delete(c));
    }
    function l(c, h) {
        if (c.isGLBufferAttribute) {
            let d = n.get(c);
            (!d || d.version < c.version) && n.set(c, {
                buffer: c.buffer,
                type: c.type,
                bytesPerElement: c.elementSize,
                version: c.version
            });
            return;
        }
        c.isInterleavedBufferAttribute && (c = c.data);
        let u = n.get(c);
        u === void 0 ? n.set(c, i(c, h)) : u.version < c.version && (r(u.buffer, c, h), u.version = c.version);
    }
    return {
        get: o,
        remove: a,
        update: l
    };
}
var Pi = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1){
        super();
        this.type = "PlaneGeometry", this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: i
        };
        let r = e / 2, o = t / 2, a = Math.floor(n), l = Math.floor(i), c = a + 1, h = l + 1, u = e / a, d = t / l, f = [], m = [], x = [], v = [];
        for(let g = 0; g < h; g++){
            let p = g * d - o;
            for(let _ = 0; _ < c; _++){
                let y = _ * u - r;
                m.push(y, -p, 0), x.push(0, 0, 1), v.push(_ / a), v.push(1 - g / l);
            }
        }
        for(let g1 = 0; g1 < l; g1++)for(let p1 = 0; p1 < a; p1++){
            let _1 = p1 + c * g1, y1 = p1 + c * (g1 + 1), b = p1 + 1 + c * (g1 + 1), A = p1 + 1 + c * g1;
            f.push(_1, y1, A), f.push(y1, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Pi(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}, xf = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, yf = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, vf = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, _f = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Mf = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, bf = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, wf = "vec3 transformed = vec3( position );", Sf = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Tf = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, Ef = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Af = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Cf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Lf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Rf = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Pf = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, If = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Df = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Ff = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, Nf = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, Bf = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, zf = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Uf = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Of = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Hf = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, kf = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Gf = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Vf = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, Wf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, qf = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Xf = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Jf = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Yf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Zf = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, $f = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, jf = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Qf = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Kf = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, ep = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, tp = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, np = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, ip = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, rp = `#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, sp = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, op = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, ap = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, lp = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, cp = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, hp = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, up = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, dp = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, fp = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, pp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, mp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, gp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, xp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, yp = `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`, vp = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, _p = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Mp = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, bp = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, wp = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Sp = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Tp = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Ep = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, Ap = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, Cp = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Lp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Rp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Pp = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Ip = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, Dp = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Fp = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, Np = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, Bp = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, zp = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, Up = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Op = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Hp = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, kp = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Gp = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Vp = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Wp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, qp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, Xp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, Jp = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Yp = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, Zp = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`, $p = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, jp = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qp = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Kp = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, em = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, tm = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, nm = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, im = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, rm = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, sm = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, om = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, am = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, lm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, cm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, hm = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`, um = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, dm = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, fm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, pm = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, mm = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, gm = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, xm = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, ym = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, vm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, _m = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Mm = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, bm = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, wm = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Sm = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Tm = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Em = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Am = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Cm = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lm = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Rm = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`, Pm = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Im = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Dm = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Fm = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Nm = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Bm = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, zm = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Um = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Om = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Hm = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, km = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Gm = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Fe = {
    alphamap_fragment: xf,
    alphamap_pars_fragment: yf,
    alphatest_fragment: vf,
    alphatest_pars_fragment: _f,
    aomap_fragment: Mf,
    aomap_pars_fragment: bf,
    begin_vertex: wf,
    beginnormal_vertex: Sf,
    bsdfs: Tf,
    bumpmap_pars_fragment: Ef,
    clipping_planes_fragment: Af,
    clipping_planes_pars_fragment: Cf,
    clipping_planes_pars_vertex: Lf,
    clipping_planes_vertex: Rf,
    color_fragment: Pf,
    color_pars_fragment: If,
    color_pars_vertex: Df,
    color_vertex: Ff,
    common: Nf,
    cube_uv_reflection_fragment: Bf,
    defaultnormal_vertex: zf,
    displacementmap_pars_vertex: Uf,
    displacementmap_vertex: Of,
    emissivemap_fragment: Hf,
    emissivemap_pars_fragment: kf,
    encodings_fragment: Gf,
    encodings_pars_fragment: Vf,
    envmap_fragment: Wf,
    envmap_common_pars_fragment: qf,
    envmap_pars_fragment: Xf,
    envmap_pars_vertex: Jf,
    envmap_physical_pars_fragment: rp,
    envmap_vertex: Yf,
    fog_vertex: Zf,
    fog_pars_vertex: $f,
    fog_fragment: jf,
    fog_pars_fragment: Qf,
    gradientmap_pars_fragment: Kf,
    lightmap_fragment: ep,
    lightmap_pars_fragment: tp,
    lights_lambert_vertex: np,
    lights_pars_begin: ip,
    lights_toon_fragment: sp,
    lights_toon_pars_fragment: op,
    lights_phong_fragment: ap,
    lights_phong_pars_fragment: lp,
    lights_physical_fragment: cp,
    lights_physical_pars_fragment: hp,
    lights_fragment_begin: up,
    lights_fragment_maps: dp,
    lights_fragment_end: fp,
    logdepthbuf_fragment: pp,
    logdepthbuf_pars_fragment: mp,
    logdepthbuf_pars_vertex: gp,
    logdepthbuf_vertex: xp,
    map_fragment: yp,
    map_pars_fragment: vp,
    map_particle_fragment: _p,
    map_particle_pars_fragment: Mp,
    metalnessmap_fragment: bp,
    metalnessmap_pars_fragment: wp,
    morphnormal_vertex: Sp,
    morphtarget_pars_vertex: Tp,
    morphtarget_vertex: Ep,
    normal_fragment_begin: Ap,
    normal_fragment_maps: Cp,
    normal_pars_fragment: Lp,
    normal_pars_vertex: Rp,
    normal_vertex: Pp,
    normalmap_pars_fragment: Ip,
    clearcoat_normal_fragment_begin: Dp,
    clearcoat_normal_fragment_maps: Fp,
    clearcoat_pars_fragment: Np,
    output_fragment: Bp,
    packing: zp,
    premultiplied_alpha_fragment: Up,
    project_vertex: Op,
    dithering_fragment: Hp,
    dithering_pars_fragment: kp,
    roughnessmap_fragment: Gp,
    roughnessmap_pars_fragment: Vp,
    shadowmap_pars_fragment: Wp,
    shadowmap_pars_vertex: qp,
    shadowmap_vertex: Xp,
    shadowmask_pars_fragment: Jp,
    skinbase_vertex: Yp,
    skinning_pars_vertex: Zp,
    skinning_vertex: $p,
    skinnormal_vertex: jp,
    specularmap_fragment: Qp,
    specularmap_pars_fragment: Kp,
    tonemapping_fragment: em,
    tonemapping_pars_fragment: tm,
    transmission_fragment: nm,
    transmission_pars_fragment: im,
    uv_pars_fragment: rm,
    uv_pars_vertex: sm,
    uv_vertex: om,
    uv2_pars_fragment: am,
    uv2_pars_vertex: lm,
    uv2_vertex: cm,
    worldpos_vertex: hm,
    background_vert: um,
    background_frag: dm,
    cube_vert: fm,
    cube_frag: pm,
    depth_vert: mm,
    depth_frag: gm,
    distanceRGBA_vert: xm,
    distanceRGBA_frag: ym,
    equirect_vert: vm,
    equirect_frag: _m,
    linedashed_vert: Mm,
    linedashed_frag: bm,
    meshbasic_vert: wm,
    meshbasic_frag: Sm,
    meshlambert_vert: Tm,
    meshlambert_frag: Em,
    meshmatcap_vert: Am,
    meshmatcap_frag: Cm,
    meshnormal_vert: Lm,
    meshnormal_frag: Rm,
    meshphong_vert: Pm,
    meshphong_frag: Im,
    meshphysical_vert: Dm,
    meshphysical_frag: Fm,
    meshtoon_vert: Nm,
    meshtoon_frag: Bm,
    points_vert: zm,
    points_frag: Um,
    shadow_vert: Om,
    shadow_frag: Hm,
    sprite_vert: km,
    sprite_frag: Gm
}, ie = {
    common: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        uvTransform: {
            value: new lt
        },
        uv2Transform: {
            value: new lt
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        }
    },
    specularmap: {
        specularMap: {
            value: null
        }
    },
    envmap: {
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        ior: {
            value: 1.5
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalScale: {
            value: new X(1, 1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        }
    },
    gradientmap: {
        gradientMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new ae(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        lightProbe: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {}
            }
        },
        directionalLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {}
            }
        },
        spotLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {
            value: []
        },
        spotShadowMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {}
            }
        },
        pointLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        },
        rectAreaLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                width: {},
                height: {}
            }
        },
        ltc_1: {
            value: null
        },
        ltc_2: {
            value: null
        }
    },
    points: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    },
    sprite: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        center: {
            value: new X(.5, .5)
        },
        rotation: {
            value: 0
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    }
}, qt = {
    basic: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.fog
        ]),
        vertexShader: Fe.meshbasic_vert,
        fragmentShader: Fe.meshbasic_frag
    },
    lambert: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshlambert_vert,
        fragmentShader: Fe.meshlambert_frag
    },
    phong: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                specular: {
                    value: new ae(1118481)
                },
                shininess: {
                    value: 30
                }
            }
        ]),
        vertexShader: Fe.meshphong_vert,
        fragmentShader: Fe.meshphong_frag
    },
    standard: {
        uniforms: yt([
            ie.common,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.roughnessmap,
            ie.metalnessmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshphysical_vert,
        fragmentShader: Fe.meshphysical_frag
    },
    toon: {
        uniforms: yt([
            ie.common,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.gradientmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshtoon_vert,
        fragmentShader: Fe.meshtoon_frag
    },
    matcap: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            {
                matcap: {
                    value: null
                }
            }
        ]),
        vertexShader: Fe.meshmatcap_vert,
        fragmentShader: Fe.meshmatcap_frag
    },
    points: {
        uniforms: yt([
            ie.points,
            ie.fog
        ]),
        vertexShader: Fe.points_vert,
        fragmentShader: Fe.points_frag
    },
    dashed: {
        uniforms: yt([
            ie.common,
            ie.fog,
            {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }
        ]),
        vertexShader: Fe.linedashed_vert,
        fragmentShader: Fe.linedashed_frag
    },
    depth: {
        uniforms: yt([
            ie.common,
            ie.displacementmap
        ]),
        vertexShader: Fe.depth_vert,
        fragmentShader: Fe.depth_frag
    },
    normal: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshnormal_vert,
        fragmentShader: Fe.meshnormal_frag
    },
    sprite: {
        uniforms: yt([
            ie.sprite,
            ie.fog
        ]),
        vertexShader: Fe.sprite_vert,
        fragmentShader: Fe.sprite_frag
    },
    background: {
        uniforms: {
            uvTransform: {
                value: new lt
            },
            t2D: {
                value: null
            }
        },
        vertexShader: Fe.background_vert,
        fragmentShader: Fe.background_frag
    },
    cube: {
        uniforms: yt([
            ie.envmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.cube_vert,
        fragmentShader: Fe.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            }
        },
        vertexShader: Fe.equirect_vert,
        fragmentShader: Fe.equirect_frag
    },
    distanceRGBA: {
        uniforms: yt([
            ie.common,
            ie.displacementmap,
            {
                referencePosition: {
                    value: new M
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }
        ]),
        vertexShader: Fe.distanceRGBA_vert,
        fragmentShader: Fe.distanceRGBA_frag
    },
    shadow: {
        uniforms: yt([
            ie.lights,
            ie.fog,
            {
                color: {
                    value: new ae(0)
                },
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.shadow_vert,
        fragmentShader: Fe.shadow_frag
    }
};
qt.physical = {
    uniforms: yt([
        qt.standard.uniforms,
        {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new X(1, 1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: 0
            },
            sheenColor: {
                value: new ae(0)
            },
            sheenColorMap: {
                value: null
            },
            sheenRoughness: {
                value: 0
            },
            sheenRoughnessMap: {
                value: null
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            },
            transmissionSamplerSize: {
                value: new X
            },
            transmissionSamplerMap: {
                value: null
            },
            thickness: {
                value: 0
            },
            thicknessMap: {
                value: null
            },
            attenuationDistance: {
                value: 0
            },
            attenuationColor: {
                value: new ae(0)
            },
            specularIntensity: {
                value: 0
            },
            specularIntensityMap: {
                value: null
            },
            specularColor: {
                value: new ae(1, 1, 1)
            },
            specularColorMap: {
                value: null
            }
        }
    ]),
    vertexShader: Fe.meshphysical_vert,
    fragmentShader: Fe.meshphysical_frag
};
function Vm(s, e, t, n, i) {
    let r = new ae(0), o = 0, a, l, c = null, h = 0, u = null;
    function d(m, x) {
        let v = !1, g = x.isScene === !0 ? x.background : null;
        g && g.isTexture && (g = e.get(g));
        let p = s.xr, _ = p.getSession && p.getSession();
        _ && _.environmentBlendMode === "additive" && (g = null), g === null ? f(r, o) : g && g.isColor && (f(g, 1), v = !0), (s.autoClear || v) && s.clear(s.autoClearColor, s.autoClearDepth, s.autoClearStencil), g && (g.isCubeTexture || g.mapping === Pr) ? (l === void 0 && (l = new st(new wn(1, 1, 1), new sn({
            name: "BackgroundCubeMaterial",
            uniforms: Ri(qt.cube.uniforms),
            vertexShader: qt.cube.vertexShader,
            fragmentShader: qt.cube.fragmentShader,
            side: it,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), l.geometry.deleteAttribute("normal"), l.geometry.deleteAttribute("uv"), l.onBeforeRender = function(y, b, A) {
            this.matrixWorld.copyPosition(A.matrixWorld);
        }, Object.defineProperty(l.material, "envMap", {
            get: function() {
                return this.uniforms.envMap.value;
            }
        }), n.update(l)), l.material.uniforms.envMap.value = g, l.material.uniforms.flipEnvMap.value = g.isCubeTexture && g.isRenderTargetTexture === !1 ? -1 : 1, (c !== g || h !== g.version || u !== s.toneMapping) && (l.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(l, l.geometry, l.material, 0, 0, null)) : g && g.isTexture && (a === void 0 && (a = new st(new Pi(2, 2), new sn({
            name: "BackgroundMaterial",
            uniforms: Ri(qt.background.uniforms),
            vertexShader: qt.background.vertexShader,
            fragmentShader: qt.background.fragmentShader,
            side: Ai,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), a.geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
            get: function() {
                return this.uniforms.t2D.value;
            }
        }), n.update(a)), a.material.uniforms.t2D.value = g, g.matrixAutoUpdate === !0 && g.updateMatrix(), a.material.uniforms.uvTransform.value.copy(g.matrix), (c !== g || h !== g.version || u !== s.toneMapping) && (a.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(a, a.geometry, a.material, 0, 0, null));
    }
    function f(m, x) {
        t.buffers.color.setClear(m.r, m.g, m.b, x, i);
    }
    return {
        getClearColor: function() {
            return r;
        },
        setClearColor: function(m, x = 1) {
            r.set(m), o = x, f(r, o);
        },
        getClearAlpha: function() {
            return o;
        },
        setClearAlpha: function(m) {
            o = m, f(r, o);
        },
        render: d
    };
}
function Wm(s, e, t, n) {
    let i = s.getParameter(34921), r = n.isWebGL2 ? null : e.get("OES_vertex_array_object"), o = n.isWebGL2 || r !== null, a = {}, l = x(null), c = l;
    function h(E, D, U, F, O) {
        let ne = !1;
        if (o) {
            let ce = m(F, U, D);
            c !== ce && (c = ce, d(c.object)), ne = v(F, O), ne && g(F, O);
        } else {
            let ce1 = D.wireframe === !0;
            (c.geometry !== F.id || c.program !== U.id || c.wireframe !== ce1) && (c.geometry = F.id, c.program = U.id, c.wireframe = ce1, ne = !0);
        }
        E.isInstancedMesh === !0 && (ne = !0), O !== null && t.update(O, 34963), ne && (L(E, D, U, F), O !== null && s.bindBuffer(34963, t.get(O).buffer));
    }
    function u() {
        return n.isWebGL2 ? s.createVertexArray() : r.createVertexArrayOES();
    }
    function d(E) {
        return n.isWebGL2 ? s.bindVertexArray(E) : r.bindVertexArrayOES(E);
    }
    function f(E) {
        return n.isWebGL2 ? s.deleteVertexArray(E) : r.deleteVertexArrayOES(E);
    }
    function m(E, D, U) {
        let F = U.wireframe === !0, O = a[E.id];
        O === void 0 && (O = {}, a[E.id] = O);
        let ne = O[D.id];
        ne === void 0 && (ne = {}, O[D.id] = ne);
        let ce = ne[F];
        return ce === void 0 && (ce = x(u()), ne[F] = ce), ce;
    }
    function x(E) {
        let D = [], U = [], F = [];
        for(let O = 0; O < i; O++)D[O] = 0, U[O] = 0, F[O] = 0;
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: D,
            enabledAttributes: U,
            attributeDivisors: F,
            object: E,
            attributes: {},
            index: null
        };
    }
    function v(E, D) {
        let U = c.attributes, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = U[ne], V = F[ne];
            if (ce === void 0 || ce.attribute !== V || ce.data !== V.data) return !0;
            O++;
        }
        return c.attributesNum !== O || c.index !== D;
    }
    function g(E, D) {
        let U = {}, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = F[ne], V = {};
            V.attribute = ce, ce.data && (V.data = ce.data), U[ne] = V, O++;
        }
        c.attributes = U, c.attributesNum = O, c.index = D;
    }
    function p() {
        let E = c.newAttributes;
        for(let D = 0, U = E.length; D < U; D++)E[D] = 0;
    }
    function _(E) {
        y(E, 0);
    }
    function y(E, D) {
        let U = c.newAttributes, F = c.enabledAttributes, O = c.attributeDivisors;
        U[E] = 1, F[E] === 0 && (s.enableVertexAttribArray(E), F[E] = 1), O[E] !== D && ((n.isWebGL2 ? s : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](E, D), O[E] = D);
    }
    function b() {
        let E = c.newAttributes, D = c.enabledAttributes;
        for(let U = 0, F = D.length; U < F; U++)D[U] !== E[U] && (s.disableVertexAttribArray(U), D[U] = 0);
    }
    function A(E, D, U, F, O, ne) {
        n.isWebGL2 === !0 && (U === 5124 || U === 5125) ? s.vertexAttribIPointer(E, D, U, O, ne) : s.vertexAttribPointer(E, D, U, F, O, ne);
    }
    function L(E, D, U, F) {
        if (n.isWebGL2 === !1 && (E.isInstancedMesh || F.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
        p();
        let O = F.attributes, ne = U.getAttributes(), ce = D.defaultAttributeValues;
        for(let V in ne){
            let W = ne[V];
            if (W.location >= 0) {
                let he = O[V];
                if (he === void 0 && (V === "instanceMatrix" && E.instanceMatrix && (he = E.instanceMatrix), V === "instanceColor" && E.instanceColor && (he = E.instanceColor)), he !== void 0) {
                    let le = he.normalized, fe = he.itemSize, Be = t.get(he);
                    if (Be === void 0) continue;
                    let Y = Be.buffer, Ce = Be.type, ye = Be.bytesPerElement;
                    if (he.isInterleavedBufferAttribute) {
                        let ge = he.data, xe = ge.stride, Oe = he.offset;
                        if (ge && ge.isInstancedInterleavedBuffer) {
                            for(let G = 0; G < W.locationSize; G++)y(W.location + G, ge.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = ge.meshPerAttribute * ge.count);
                        } else for(let G1 = 0; G1 < W.locationSize; G1++)_(W.location + G1);
                        s.bindBuffer(34962, Y);
                        for(let G2 = 0; G2 < W.locationSize; G2++)A(W.location + G2, fe / W.locationSize, Ce, le, xe * ye, (Oe + fe / W.locationSize * G2) * ye);
                    } else {
                        if (he.isInstancedBufferAttribute) {
                            for(let ge1 = 0; ge1 < W.locationSize; ge1++)y(W.location + ge1, he.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = he.meshPerAttribute * he.count);
                        } else for(let ge2 = 0; ge2 < W.locationSize; ge2++)_(W.location + ge2);
                        s.bindBuffer(34962, Y);
                        for(let ge3 = 0; ge3 < W.locationSize; ge3++)A(W.location + ge3, fe / W.locationSize, Ce, le, fe * ye, fe / W.locationSize * ge3 * ye);
                    }
                } else if (ce !== void 0) {
                    let le1 = ce[V];
                    if (le1 !== void 0) switch(le1.length){
                        case 2:
                            s.vertexAttrib2fv(W.location, le1);
                            break;
                        case 3:
                            s.vertexAttrib3fv(W.location, le1);
                            break;
                        case 4:
                            s.vertexAttrib4fv(W.location, le1);
                            break;
                        default:
                            s.vertexAttrib1fv(W.location, le1);
                    }
                }
            }
        }
        b();
    }
    function I() {
        P();
        for(let E in a){
            let D = a[E];
            for(let U in D){
                let F = D[U];
                for(let O in F)f(F[O].object), delete F[O];
                delete D[U];
            }
            delete a[E];
        }
    }
    function k(E) {
        if (a[E.id] === void 0) return;
        let D = a[E.id];
        for(let U in D){
            let F = D[U];
            for(let O in F)f(F[O].object), delete F[O];
            delete D[U];
        }
        delete a[E.id];
    }
    function B(E) {
        for(let D in a){
            let U = a[D];
            if (U[E.id] === void 0) continue;
            let F = U[E.id];
            for(let O in F)f(F[O].object), delete F[O];
            delete U[E.id];
        }
    }
    function P() {
        w(), c !== l && (c = l, d(c.object));
    }
    function w() {
        l.geometry = null, l.program = null, l.wireframe = !1;
    }
    return {
        setup: h,
        reset: P,
        resetDefaultState: w,
        dispose: I,
        releaseStatesOfGeometry: k,
        releaseStatesOfProgram: B,
        initAttributes: p,
        enableAttribute: _,
        disableUnusedAttributes: b
    };
}
function qm(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(c) {
        r = c;
    }
    function a(c, h) {
        s.drawArrays(r, c, h), t.update(h, r, 1);
    }
    function l(c, h, u) {
        if (u === 0) return;
        let d, f;
        if (i) d = s, f = "drawArraysInstanced";
        else if (d = e.get("ANGLE_instanced_arrays"), f = "drawArraysInstancedANGLE", d === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        d[f](r, c, h, u), t.update(h, r, u);
    }
    this.setMode = o, this.render = a, this.renderInstances = l;
}
function Xm(s, e, t) {
    let n;
    function i() {
        if (n !== void 0) return n;
        if (e.has("EXT_texture_filter_anisotropic") === !0) {
            let L = e.get("EXT_texture_filter_anisotropic");
            n = s.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else n = 0;
        return n;
    }
    function r(L) {
        if (L === "highp") {
            if (s.getShaderPrecisionFormat(35633, 36338).precision > 0 && s.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
            L = "mediump";
        }
        return L === "mediump" && s.getShaderPrecisionFormat(35633, 36337).precision > 0 && s.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
    }
    let o = typeof WebGL2RenderingContext < "u" && s instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && s instanceof WebGL2ComputeRenderingContext, a = t.precision !== void 0 ? t.precision : "highp", l = r(a);
    l !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", l, "instead."), a = l);
    let c = o || e.has("WEBGL_draw_buffers"), h = t.logarithmicDepthBuffer === !0, u = s.getParameter(34930), d = s.getParameter(35660), f = s.getParameter(3379), m = s.getParameter(34076), x = s.getParameter(34921), v = s.getParameter(36347), g = s.getParameter(36348), p = s.getParameter(36349), _ = d > 0, y = o || e.has("OES_texture_float"), b = _ && y, A = o ? s.getParameter(36183) : 0;
    return {
        isWebGL2: o,
        drawBuffers: c,
        getMaxAnisotropy: i,
        getMaxPrecision: r,
        precision: a,
        logarithmicDepthBuffer: h,
        maxTextures: u,
        maxVertexTextures: d,
        maxTextureSize: f,
        maxCubemapSize: m,
        maxAttributes: x,
        maxVertexUniforms: v,
        maxVaryings: g,
        maxFragmentUniforms: p,
        vertexTextures: _,
        floatFragmentTextures: y,
        floatVertexTextures: b,
        maxSamples: A
    };
}
function Jm(s) {
    let e = this, t = null, n = 0, i = !1, r = !1, o = new Wt, a = new lt, l = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(u, d, f) {
        let m = u.length !== 0 || d || n !== 0 || i;
        return i = d, t = h(u, f, 0), n = u.length, m;
    }, this.beginShadows = function() {
        r = !0, h(null);
    }, this.endShadows = function() {
        r = !1, c();
    }, this.setState = function(u, d, f) {
        let m = u.clippingPlanes, x = u.clipIntersection, v = u.clipShadows, g = s.get(u);
        if (!i || m === null || m.length === 0 || r && !v) r ? h(null) : c();
        else {
            let p = r ? 0 : n, _ = p * 4, y = g.clippingState || null;
            l.value = y, y = h(m, d, _, f);
            for(let b = 0; b !== _; ++b)y[b] = t[b];
            g.clippingState = y, this.numIntersection = x ? this.numPlanes : 0, this.numPlanes += p;
        }
    };
    function c() {
        l.value !== t && (l.value = t, l.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function h(u, d, f, m) {
        let x = u !== null ? u.length : 0, v = null;
        if (x !== 0) {
            if (v = l.value, m !== !0 || v === null) {
                let g = f + x * 4, p = d.matrixWorldInverse;
                a.getNormalMatrix(p), (v === null || v.length < g) && (v = new Float32Array(g));
                for(let _ = 0, y = f; _ !== x; ++_, y += 4)o.copy(u[_]).applyMatrix4(p, a), o.normal.toArray(v, y), v[y + 3] = o.constant;
            }
            l.value = v, l.needsUpdate = !0;
        }
        return e.numPlanes = x, e.numIntersection = 0, v;
    }
}
function Ym(s) {
    let e = new WeakMap;
    function t(o, a) {
        return a === Ds ? o.mapping = Bi : a === Fs && (o.mapping = zi), o;
    }
    function n(o) {
        if (o && o.isTexture && o.isRenderTargetTexture === !1) {
            let a = o.mapping;
            if (a === Ds || a === Fs) if (e.has(o)) {
                let l = e.get(o).texture;
                return t(l, o.mapping);
            } else {
                let l1 = o.image;
                if (l1 && l1.height > 0) {
                    let c = s.getRenderTarget(), h = new js(l1.height / 2);
                    return h.fromEquirectangularTexture(s, o), e.set(o, h), s.setRenderTarget(c), o.addEventListener("dispose", i), t(h.texture, o.mapping);
                } else return null;
            }
        }
        return o;
    }
    function i(o) {
        let a = o.target;
        a.removeEventListener("dispose", i);
        let l = e.get(a);
        l !== void 0 && (e.delete(a), l.dispose());
    }
    function r() {
        e = new WeakMap;
    }
    return {
        get: n,
        dispose: r
    };
}
var Fr = class extends Ir {
    constructor(e = -1, t = 1, n = 1, i = -1, r = .1, o = 2e3){
        super();
        this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = r, this.far = o, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
    }
    setViewOffset(e, t, n, i, r, o) {
        this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, a = i + t, l = i - t;
        if (this.view !== null && this.view.enabled) {
            let c = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            r += c * this.view.offsetX, o = r + c * this.view.width, a -= h * this.view.offsetY, l = a - h * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(r, o, a, l, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
    }
};
Fr.prototype.isOrthographicCamera = !0;
var Gi = class extends sn {
    constructor(e){
        super(e);
        this.type = "RawShaderMaterial";
    }
};
Gi.prototype.isRawShaderMaterial = !0;
var Ei = 4, Mn = 8, Vt = Math.pow(2, Mn), sh = [
    .125,
    .215,
    .35,
    .446,
    .526,
    .582
], oh = Mn - Ei + 1 + sh.length, pi = 20, Hs = {
    [Nt]: 0,
    [Oi]: 1
}, Go = new Fr, { _lodPlanes: ji , _sizeLods: Ll , _sigmas: ls  } = Zm(), Rl = new ae, Vo = null, On = (1 + Math.sqrt(5)) / 2, mi = 1 / On, Pl = [
    new M(1, 1, 1),
    new M(-1, 1, 1),
    new M(1, 1, -1),
    new M(-1, 1, -1),
    new M(0, On, mi),
    new M(0, On, -mi),
    new M(mi, 0, On),
    new M(-mi, 0, On),
    new M(On, mi, 0),
    new M(-On, mi, 0)
], ah = class {
    constructor(e){
        this._renderer = e, this._pingPongRenderTarget = null, this._blurMaterial = $m(pi), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = .1, i = 100) {
        Vo = this._renderer.getRenderTarget();
        let r = this._allocateTargets();
        return this._sceneToCubeUV(e, n, i, r), t > 0 && this._blur(r, 0, 0, t), this._applyPMREM(r), this._cleanup(r), r;
    }
    fromEquirectangular(e) {
        return this._fromTexture(e);
    }
    fromCubemap(e) {
        return this._fromTexture(e);
    }
    compileCubemapShader() {
        this._cubemapShader === null && (this._cubemapShader = Fl(), this._compileMaterial(this._cubemapShader));
    }
    compileEquirectangularShader() {
        this._equirectShader === null && (this._equirectShader = Dl(), this._compileMaterial(this._equirectShader));
    }
    dispose() {
        this._blurMaterial.dispose(), this._cubemapShader !== null && this._cubemapShader.dispose(), this._equirectShader !== null && this._equirectShader.dispose();
        for(let e = 0; e < ji.length; e++)ji[e].dispose();
    }
    _cleanup(e) {
        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Vo), e.scissorTest = !1, cs(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e) {
        Vo = this._renderer.getRenderTarget();
        let t = this._allocateTargets(e);
        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t;
    }
    _allocateTargets(e) {
        let t = {
            magFilter: tt,
            minFilter: tt,
            generateMipmaps: !1,
            type: kn,
            format: ct,
            encoding: Nt,
            depthBuffer: !1
        }, n = Il(t);
        return n.depthBuffer = !e, this._pingPongRenderTarget = Il(t), n;
    }
    _compileMaterial(e) {
        let t = new st(ji[0], e);
        this._renderer.compile(t, Go);
    }
    _sceneToCubeUV(e, t, n, i) {
        let a = new ut(90, 1, t, n), l = [
            1,
            -1,
            1,
            1,
            1,
            1
        ], c = [
            1,
            1,
            1,
            -1,
            -1,
            -1
        ], h = this._renderer, u = h.autoClear, d = h.toneMapping;
        h.getClearColor(Rl), h.toneMapping = _n, h.autoClear = !1;
        let f = new hn({
            name: "PMREM.Background",
            side: it,
            depthWrite: !1,
            depthTest: !1
        }), m = new st(new wn, f), x = !1, v = e.background;
        v ? v.isColor && (f.color.copy(v), e.background = null, x = !0) : (f.color.copy(Rl), x = !0);
        for(let g = 0; g < 6; g++){
            let p = g % 3;
            p == 0 ? (a.up.set(0, l[g], 0), a.lookAt(c[g], 0, 0)) : p == 1 ? (a.up.set(0, 0, l[g]), a.lookAt(0, c[g], 0)) : (a.up.set(0, l[g], 0), a.lookAt(0, 0, c[g])), cs(i, p * Vt, g > 2 ? Vt : 0, Vt, Vt), h.setRenderTarget(i), x && h.render(m, a), h.render(e, a);
        }
        m.geometry.dispose(), m.material.dispose(), h.toneMapping = d, h.autoClear = u, e.background = v;
    }
    _setEncoding(e, t) {
        this._renderer.capabilities.isWebGL2 === !0 && t.format === ct && t.type === rn && t.encoding === Oi ? e.value = Hs[Nt] : e.value = Hs[t.encoding];
    }
    _textureToCubeUV(e, t) {
        let n = this._renderer, i = e.mapping === Bi || e.mapping === zi;
        i ? this._cubemapShader == null && (this._cubemapShader = Fl()) : this._equirectShader == null && (this._equirectShader = Dl());
        let r = i ? this._cubemapShader : this._equirectShader, o = new st(ji[0], r), a = r.uniforms;
        a.envMap.value = e, i || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), this._setEncoding(a.inputEncoding, e), cs(t, 0, 0, 3 * Vt, 2 * Vt), n.setRenderTarget(t), n.render(o, Go);
    }
    _applyPMREM(e) {
        let t = this._renderer, n = t.autoClear;
        t.autoClear = !1;
        for(let i = 1; i < oh; i++){
            let r = Math.sqrt(ls[i] * ls[i] - ls[i - 1] * ls[i - 1]), o = Pl[(i - 1) % Pl.length];
            this._blur(e, i - 1, i, r, o);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, r) {
        let o = this._pingPongRenderTarget;
        this._halfBlur(e, o, t, n, i, "latitudinal", r), this._halfBlur(o, e, n, n, i, "longitudinal", r);
    }
    _halfBlur(e, t, n, i, r, o, a) {
        let l = this._renderer, c = this._blurMaterial;
        o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
        let h = 3, u = new st(ji[i], c), d = c.uniforms, f = Ll[n] - 1, m = isFinite(r) ? Math.PI / (2 * f) : 2 * Math.PI / (2 * pi - 1), x = r / m, v = isFinite(r) ? 1 + Math.floor(h * x) : pi;
        v > pi && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${pi}`);
        let g = [], p = 0;
        for(let A = 0; A < pi; ++A){
            let L = A / x, I = Math.exp(-L * L / 2);
            g.push(I), A == 0 ? p += I : A < v && (p += 2 * I);
        }
        for(let A1 = 0; A1 < g.length; A1++)g[A1] = g[A1] / p;
        d.envMap.value = e.texture, d.samples.value = v, d.weights.value = g, d.latitudinal.value = o === "latitudinal", a && (d.poleAxis.value = a), d.dTheta.value = m, d.mipInt.value = Mn - n;
        let _ = Ll[i], y = 3 * Math.max(0, Vt - 2 * _), b = (i === 0 ? 0 : 2 * Vt) + 2 * _ * (i > Mn - Ei ? i - Mn + Ei : 0);
        cs(t, y, b, 3 * _, 2 * _), l.setRenderTarget(t), l.render(u, Go);
    }
};
function Zm() {
    let s = [], e = [], t = [], n = Mn;
    for(let i = 0; i < oh; i++){
        let r = Math.pow(2, n);
        e.push(r);
        let o = 1 / r;
        i > Mn - Ei ? o = sh[i - Mn + Ei - 1] : i == 0 && (o = 0), t.push(o);
        let a = 1 / (r - 1), l = -a / 2, c = 1 + a / 2, h = [
            l,
            l,
            c,
            l,
            c,
            c,
            l,
            l,
            c,
            c,
            l,
            c
        ], u = 6, d = 6, f = 3, m = 2, x = 1, v = new Float32Array(f * d * u), g = new Float32Array(m * d * u), p = new Float32Array(x * d * u);
        for(let y = 0; y < u; y++){
            let b = y % 3 * 2 / 3 - 1, A = y > 2 ? 0 : -1, L = [
                b,
                A,
                0,
                b + 2 / 3,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A + 1,
                0
            ];
            v.set(L, f * d * y), g.set(h, m * d * y);
            let I = [
                y,
                y,
                y,
                y,
                y,
                y
            ];
            p.set(I, x * d * y);
        }
        let _ = new _e;
        _.setAttribute("position", new Ue(v, f)), _.setAttribute("uv", new Ue(g, m)), _.setAttribute("faceIndex", new Ue(p, x)), s.push(_), n > Ei && n--;
    }
    return {
        _lodPlanes: s,
        _sizeLods: e,
        _sigmas: t
    };
}
function Il(s) {
    let e = new At(3 * Vt, 3 * Vt, s);
    return e.texture.mapping = Pr, e.texture.name = "PMREM.cubeUv", e.scissorTest = !0, e;
}
function cs(s, e, t, n, i) {
    s.viewport.set(e, t, n, i), s.scissor.set(e, t, n, i);
}
function $m(s) {
    let e = new Float32Array(s), t = new M(0, 1, 0);
    return new Gi({
        name: "SphericalGaussianBlur",
        defines: {
            n: s
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: e
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: t
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${pa()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Dl() {
    let s = new X(1, 1);
    return new Gi({
        name: "EquirectangularToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            texelSize: {
                value: s
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${pa()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Fl() {
    return new Gi({
        name: "CubemapToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${pa()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function fa() {
    return `

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function pa() {
    return `

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;
}
function jm(s) {
    let e = new WeakMap, t = null;
    function n(a) {
        if (a && a.isTexture && a.isRenderTargetTexture === !1) {
            let l = a.mapping, c = l === Ds || l === Fs, h = l === Bi || l === zi;
            if (c || h) {
                if (e.has(a)) return e.get(a).texture;
                {
                    let u = a.image;
                    if (c && u && u.height > 0 || h && u && i(u)) {
                        let d = s.getRenderTarget();
                        t === null && (t = new ah(s));
                        let f = c ? t.fromEquirectangular(a) : t.fromCubemap(a);
                        return e.set(a, f), s.setRenderTarget(d), a.addEventListener("dispose", r), f.texture;
                    } else return null;
                }
            }
        }
        return a;
    }
    function i(a) {
        let l = 0, c = 6;
        for(let h = 0; h < c; h++)a[h] !== void 0 && l++;
        return l === c;
    }
    function r(a) {
        let l = a.target;
        l.removeEventListener("dispose", r);
        let c = e.get(l);
        c !== void 0 && (e.delete(l), c.dispose());
    }
    function o() {
        e = new WeakMap, t !== null && (t.dispose(), t = null);
    }
    return {
        get: n,
        dispose: o
    };
}
function Qm(s) {
    let e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch(n){
            case "WEBGL_depth_texture":
                i = s.getExtension("WEBGL_depth_texture") || s.getExtension("MOZ_WEBGL_depth_texture") || s.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case "EXT_texture_filter_anisotropic":
                i = s.getExtension("EXT_texture_filter_anisotropic") || s.getExtension("MOZ_EXT_texture_filter_anisotropic") || s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                i = s.getExtension("WEBGL_compressed_texture_s3tc") || s.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                i = s.getExtension("WEBGL_compressed_texture_pvrtc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                i = s.getExtension(n);
        }
        return e[n] = i, i;
    }
    return {
        has: function(n) {
            return t(n) !== null;
        },
        init: function(n) {
            n.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
        },
        get: function(n) {
            let i = t(n);
            return i === null && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), i;
        }
    };
}
function Km(s, e, t, n) {
    let i = {}, r = new WeakMap;
    function o(u) {
        let d = u.target;
        d.index !== null && e.remove(d.index);
        for(let m in d.attributes)e.remove(d.attributes[m]);
        d.removeEventListener("dispose", o), delete i[d.id];
        let f = r.get(d);
        f && (e.remove(f), r.delete(d)), n.releaseStatesOfGeometry(d), d.isInstancedBufferGeometry === !0 && delete d._maxInstanceCount, t.memory.geometries--;
    }
    function a(u, d) {
        return i[d.id] === !0 || (d.addEventListener("dispose", o), i[d.id] = !0, t.memory.geometries++), d;
    }
    function l(u) {
        let d = u.attributes;
        for(let m in d)e.update(d[m], 34962);
        let f = u.morphAttributes;
        for(let m1 in f){
            let x = f[m1];
            for(let v = 0, g = x.length; v < g; v++)e.update(x[v], 34962);
        }
    }
    function c(u) {
        let d = [], f = u.index, m = u.attributes.position, x = 0;
        if (f !== null) {
            let p = f.array;
            x = f.version;
            for(let _ = 0, y = p.length; _ < y; _ += 3){
                let b = p[_ + 0], A = p[_ + 1], L = p[_ + 2];
                d.push(b, A, A, L, L, b);
            }
        } else {
            let p1 = m.array;
            x = m.version;
            for(let _1 = 0, y1 = p1.length / 3 - 1; _1 < y1; _1 += 3){
                let b1 = _1 + 0, A1 = _1 + 1, L1 = _1 + 2;
                d.push(b1, A1, A1, L1, L1, b1);
            }
        }
        let v = new (Yc(d) > 65535 ? Zs : Ys)(d, 1);
        v.version = x;
        let g = r.get(u);
        g && e.remove(g), r.set(u, v);
    }
    function h(u) {
        let d = r.get(u);
        if (d) {
            let f = u.index;
            f !== null && d.version < f.version && c(u);
        } else c(u);
        return r.get(u);
    }
    return {
        get: a,
        update: l,
        getWireframeAttribute: h
    };
}
function eg(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(d) {
        r = d;
    }
    let a, l;
    function c(d) {
        a = d.type, l = d.bytesPerElement;
    }
    function h(d, f) {
        s.drawElements(r, f, a, d * l), t.update(f, r, 1);
    }
    function u(d, f, m) {
        if (m === 0) return;
        let x, v;
        if (i) x = s, v = "drawElementsInstanced";
        else if (x = e.get("ANGLE_instanced_arrays"), v = "drawElementsInstancedANGLE", x === null) {
            console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        x[v](r, f, a, d * l, m), t.update(f, r, m);
    }
    this.setMode = o, this.setIndex = c, this.render = h, this.renderInstances = u;
}
function tg(s) {
    let e = {
        geometries: 0,
        textures: 0
    }, t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    function n(r, o, a) {
        switch(t.calls++, o){
            case 4:
                t.triangles += a * (r / 3);
                break;
            case 1:
                t.lines += a * (r / 2);
                break;
            case 3:
                t.lines += a * (r - 1);
                break;
            case 2:
                t.lines += a * r;
                break;
            case 0:
                t.points += a * r;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                break;
        }
    }
    function i() {
        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n
    };
}
var Qs = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
Qs.prototype.isDataTexture2DArray = !0;
function ng(s, e) {
    return s[0] - e[0];
}
function ig(s, e) {
    return Math.abs(e[1]) - Math.abs(s[1]);
}
function Nl(s, e) {
    let t = 1, n = e.isInterleavedBufferAttribute ? e.data.array : e.array;
    n instanceof Int8Array ? t = 127 : n instanceof Int16Array ? t = 32767 : n instanceof Int32Array ? t = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", n), s.divideScalar(t);
}
function rg(s, e, t) {
    let n = {}, i = new Float32Array(8), r = new WeakMap, o = new M, a = [];
    for(let c = 0; c < 8; c++)a[c] = [
        c,
        0
    ];
    function l(c, h, u, d) {
        let f = c.morphTargetInfluences;
        if (e.isWebGL2 === !0) {
            let m = h.morphAttributes.position.length, x = r.get(h);
            if (x === void 0 || x.count !== m) {
                x !== void 0 && x.texture.dispose();
                let p = h.morphAttributes.normal !== void 0, _ = h.morphAttributes.position, y = h.morphAttributes.normal || [], b = h.attributes.position.count, A = p === !0 ? 2 : 1, L = b * A, I = 1;
                L > e.maxTextureSize && (I = Math.ceil(L / e.maxTextureSize), L = e.maxTextureSize);
                let k = new Float32Array(L * I * 4 * m), B = new Qs(k, L, I, m);
                B.format = ct, B.type = nn, B.needsUpdate = !0;
                let P = A * 4;
                for(let w = 0; w < m; w++){
                    let E = _[w], D = y[w], U = L * I * 4 * w;
                    for(let F = 0; F < E.count; F++){
                        o.fromBufferAttribute(E, F), E.normalized === !0 && Nl(o, E);
                        let O = F * P;
                        k[U + O + 0] = o.x, k[U + O + 1] = o.y, k[U + O + 2] = o.z, k[U + O + 3] = 0, p === !0 && (o.fromBufferAttribute(D, F), D.normalized === !0 && Nl(o, D), k[U + O + 4] = o.x, k[U + O + 5] = o.y, k[U + O + 6] = o.z, k[U + O + 7] = 0);
                    }
                }
                x = {
                    count: m,
                    texture: B,
                    size: new X(L, I)
                }, r.set(h, x);
            }
            let v = 0;
            for(let p1 = 0; p1 < f.length; p1++)v += f[p1];
            let g = h.morphTargetsRelative ? 1 : 1 - v;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", g), d.getUniforms().setValue(s, "morphTargetInfluences", f), d.getUniforms().setValue(s, "morphTargetsTexture", x.texture, t), d.getUniforms().setValue(s, "morphTargetsTextureSize", x.size);
        } else {
            let m1 = f === void 0 ? 0 : f.length, x1 = n[h.id];
            if (x1 === void 0 || x1.length !== m1) {
                x1 = [];
                for(let y1 = 0; y1 < m1; y1++)x1[y1] = [
                    y1,
                    0
                ];
                n[h.id] = x1;
            }
            for(let y2 = 0; y2 < m1; y2++){
                let b1 = x1[y2];
                b1[0] = y2, b1[1] = f[y2];
            }
            x1.sort(ig);
            for(let y3 = 0; y3 < 8; y3++)y3 < m1 && x1[y3][1] ? (a[y3][0] = x1[y3][0], a[y3][1] = x1[y3][1]) : (a[y3][0] = Number.MAX_SAFE_INTEGER, a[y3][1] = 0);
            a.sort(ng);
            let v1 = h.morphAttributes.position, g1 = h.morphAttributes.normal, p2 = 0;
            for(let y4 = 0; y4 < 8; y4++){
                let b2 = a[y4], A1 = b2[0], L1 = b2[1];
                A1 !== Number.MAX_SAFE_INTEGER && L1 ? (v1 && h.getAttribute("morphTarget" + y4) !== v1[A1] && h.setAttribute("morphTarget" + y4, v1[A1]), g1 && h.getAttribute("morphNormal" + y4) !== g1[A1] && h.setAttribute("morphNormal" + y4, g1[A1]), i[y4] = L1, p2 += L1) : (v1 && h.hasAttribute("morphTarget" + y4) === !0 && h.deleteAttribute("morphTarget" + y4), g1 && h.hasAttribute("morphNormal" + y4) === !0 && h.deleteAttribute("morphNormal" + y4), i[y4] = 0);
            }
            let _1 = h.morphTargetsRelative ? 1 : 1 - p2;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", _1), d.getUniforms().setValue(s, "morphTargetInfluences", i);
        }
    }
    return {
        update: l
    };
}
function sg(s, e, t, n) {
    let i = new WeakMap;
    function r(l) {
        let c = n.render.frame, h = l.geometry, u = e.get(l, h);
        return i.get(u) !== c && (e.update(u), i.set(u, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), t.update(l.instanceMatrix, 34962), l.instanceColor !== null && t.update(l.instanceColor, 34962)), u;
    }
    function o() {
        i = new WeakMap;
    }
    function a(l) {
        let c = l.target;
        c.removeEventListener("dispose", a), t.remove(c.instanceMatrix), c.instanceColor !== null && t.remove(c.instanceColor);
    }
    return {
        update: r,
        dispose: o
    };
}
var ma = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
ma.prototype.isDataTexture3D = !0;
var lh = new ot, ch = new Qs, hh = new ma, uh = new ki, Bl = [], zl = [], Ul = new Float32Array(16), Ol = new Float32Array(9), Hl = new Float32Array(4);
function Vi(s, e, t) {
    let n = s[0];
    if (n <= 0 || n > 0) return s;
    let i = e * t, r = Bl[i];
    if (r === void 0 && (r = new Float32Array(i), Bl[i] = r), e !== 0) {
        n.toArray(r, 0);
        for(let o = 1, a = 0; o !== e; ++o)a += t, s[o].toArray(r, a);
    }
    return r;
}
function Mt(s, e) {
    if (s.length !== e.length) return !1;
    for(let t = 0, n = s.length; t < n; t++)if (s[t] !== e[t]) return !1;
    return !0;
}
function _t(s, e) {
    for(let t = 0, n = e.length; t < n; t++)s[t] = e[t];
}
function Ks(s, e) {
    let t = zl[e];
    t === void 0 && (t = new Int32Array(e), zl[e] = t);
    for(let n = 0; n !== e; ++n)t[n] = s.allocateTextureUnit();
    return t;
}
function og(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1f(this.addr, e), t[0] = e);
}
function ag(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (Mt(t, e)) return;
        s.uniform2fv(this.addr, e), _t(t, e);
    }
}
function lg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else if (e.r !== void 0) (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (s.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
    else {
        if (Mt(t, e)) return;
        s.uniform3fv(this.addr, e), _t(t, e);
    }
}
function cg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (Mt(t, e)) return;
        s.uniform4fv(this.addr, e), _t(t, e);
    }
}
function hg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix2fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Hl.set(n), s.uniformMatrix2fv(this.addr, !1, Hl), _t(t, n);
    }
}
function ug(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix3fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ol.set(n), s.uniformMatrix3fv(this.addr, !1, Ol), _t(t, n);
    }
}
function dg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix4fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ul.set(n), s.uniformMatrix4fv(this.addr, !1, Ul), _t(t, n);
    }
}
function fg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1i(this.addr, e), t[0] = e);
}
function pg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2iv(this.addr, e), _t(t, e));
}
function mg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3iv(this.addr, e), _t(t, e));
}
function gg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4iv(this.addr, e), _t(t, e));
}
function xg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1ui(this.addr, e), t[0] = e);
}
function yg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2uiv(this.addr, e), _t(t, e));
}
function vg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3uiv(this.addr, e), _t(t, e));
}
function _g(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4uiv(this.addr, e), _t(t, e));
}
function Mg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTexture2D(e || lh, i);
}
function bg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture3D(e || hh, i);
}
function wg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTextureCube(e || uh, i);
}
function Sg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture2DArray(e || ch, i);
}
function Tg(s) {
    switch(s){
        case 5126:
            return og;
        case 35664:
            return ag;
        case 35665:
            return lg;
        case 35666:
            return cg;
        case 35674:
            return hg;
        case 35675:
            return ug;
        case 35676:
            return dg;
        case 5124:
        case 35670:
            return fg;
        case 35667:
        case 35671:
            return pg;
        case 35668:
        case 35672:
            return mg;
        case 35669:
        case 35673:
            return gg;
        case 5125:
            return xg;
        case 36294:
            return yg;
        case 36295:
            return vg;
        case 36296:
            return _g;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return Mg;
        case 35679:
        case 36299:
        case 36307:
            return bg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return wg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Sg;
    }
}
function Eg(s, e) {
    s.uniform1fv(this.addr, e);
}
function Ag(s, e) {
    let t = Vi(e, this.size, 2);
    s.uniform2fv(this.addr, t);
}
function Cg(s, e) {
    let t = Vi(e, this.size, 3);
    s.uniform3fv(this.addr, t);
}
function Lg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniform4fv(this.addr, t);
}
function Rg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniformMatrix2fv(this.addr, !1, t);
}
function Pg(s, e) {
    let t = Vi(e, this.size, 9);
    s.uniformMatrix3fv(this.addr, !1, t);
}
function Ig(s, e) {
    let t = Vi(e, this.size, 16);
    s.uniformMatrix4fv(this.addr, !1, t);
}
function Dg(s, e) {
    s.uniform1iv(this.addr, e);
}
function Fg(s, e) {
    s.uniform2iv(this.addr, e);
}
function Ng(s, e) {
    s.uniform3iv(this.addr, e);
}
function Bg(s, e) {
    s.uniform4iv(this.addr, e);
}
function zg(s, e) {
    s.uniform1uiv(this.addr, e);
}
function Ug(s, e) {
    s.uniform2uiv(this.addr, e);
}
function Og(s, e) {
    s.uniform3uiv(this.addr, e);
}
function Hg(s, e) {
    s.uniform4uiv(this.addr, e);
}
function kg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTexture2D(e[r] || lh, i[r]);
}
function Gg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture3D(e[r] || hh, i[r]);
}
function Vg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTextureCube(e[r] || uh, i[r]);
}
function Wg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture2DArray(e[r] || ch, i[r]);
}
function qg(s) {
    switch(s){
        case 5126:
            return Eg;
        case 35664:
            return Ag;
        case 35665:
            return Cg;
        case 35666:
            return Lg;
        case 35674:
            return Rg;
        case 35675:
            return Pg;
        case 35676:
            return Ig;
        case 5124:
        case 35670:
            return Dg;
        case 35667:
        case 35671:
            return Fg;
        case 35668:
        case 35672:
            return Ng;
        case 35669:
        case 35673:
            return Bg;
        case 5125:
            return zg;
        case 36294:
            return Ug;
        case 36295:
            return Og;
        case 36296:
            return Hg;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return kg;
        case 35679:
        case 36299:
        case 36307:
            return Gg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return Vg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Wg;
    }
}
function Xg(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.setValue = Tg(e.type);
}
function dh(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.size = e.size, this.setValue = qg(e.type);
}
dh.prototype.updateCache = function(s) {
    let e = this.cache;
    s instanceof Float32Array && e.length !== s.length && (this.cache = new Float32Array(s.length)), _t(e, s);
};
function fh(s) {
    this.id = s, this.seq = [], this.map = {};
}
fh.prototype.setValue = function(s, e, t) {
    let n = this.seq;
    for(let i = 0, r = n.length; i !== r; ++i){
        let o = n[i];
        o.setValue(s, e[o.id], t);
    }
};
var Wo = /(\w+)(\])?(\[|\.)?/g;
function kl(s, e) {
    s.seq.push(e), s.map[e.id] = e;
}
function Jg(s, e, t) {
    let n = s.name, i = n.length;
    for(Wo.lastIndex = 0;;){
        let r = Wo.exec(n), o = Wo.lastIndex, a = r[1], l = r[2] === "]", c = r[3];
        if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
            kl(t, c === void 0 ? new Xg(a, s, e) : new dh(a, s, e));
            break;
        } else {
            let u = t.map[a];
            u === void 0 && (u = new fh(a), kl(t, u)), t = u;
        }
    }
}
function bn(s, e) {
    this.seq = [], this.map = {};
    let t = s.getProgramParameter(e, 35718);
    for(let n = 0; n < t; ++n){
        let i = s.getActiveUniform(e, n), r = s.getUniformLocation(e, i.name);
        Jg(i, r, this);
    }
}
bn.prototype.setValue = function(s, e, t, n) {
    let i = this.map[e];
    i !== void 0 && i.setValue(s, t, n);
};
bn.prototype.setOptional = function(s, e, t) {
    let n = e[t];
    n !== void 0 && this.setValue(s, t, n);
};
bn.upload = function(s, e, t, n) {
    for(let i = 0, r = e.length; i !== r; ++i){
        let o = e[i], a = t[o.id];
        a.needsUpdate !== !1 && o.setValue(s, a.value, n);
    }
};
bn.seqWithValue = function(s, e) {
    let t = [];
    for(let n = 0, i = s.length; n !== i; ++n){
        let r = s[n];
        r.id in e && t.push(r);
    }
    return t;
};
function Gl(s, e, t) {
    let n = s.createShader(e);
    return s.shaderSource(n, t), s.compileShader(n), n;
}
var Yg = 0;
function Zg(s) {
    let e = s.split(`
`);
    for(let t = 0; t < e.length; t++)e[t] = t + 1 + ": " + e[t];
    return e.join(`
`);
}
function ph(s) {
    switch(s){
        case Nt:
            return [
                "Linear",
                "( value )"
            ];
        case Oi:
            return [
                "sRGB",
                "( value )"
            ];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported encoding:", s), [
                "Linear",
                "( value )"
            ];
    }
}
function Vl(s, e, t) {
    let n = s.getShaderParameter(e, 35713), i = s.getShaderInfoLog(e).trim();
    return n && i === "" ? "" : t.toUpperCase() + `

` + i + `

` + Zg(s.getShaderSource(e));
}
function Dn(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return " + t[0] + "ToLinear" + t[1] + "; }";
}
function $g(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function jg(s, e) {
    let t;
    switch(e){
        case Nu:
            t = "Linear";
            break;
        case Bu:
            t = "Reinhard";
            break;
        case zu:
            t = "OptimizedCineon";
            break;
        case Uu:
            t = "ACESFilmic";
            break;
        case Ou:
            t = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
    }
    return "vec3 " + s + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function Qg(s) {
    return [
        s.extensionDerivatives || s.envMapCubeUV || s.bumpMap || s.tangentSpaceNormalMap || s.clearcoatNormalMap || s.flatShading || s.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
        (s.extensionFragDepth || s.logarithmicDepthBuffer) && s.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
        s.extensionDrawBuffers && s.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
        (s.extensionShaderTextureLOD || s.envMap || s.transmission) && s.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
    ].filter(rr).join(`
`);
}
function Kg(s) {
    let e = [];
    for(let t in s){
        let n = s[t];
        n !== !1 && e.push("#define " + t + " " + n);
    }
    return e.join(`
`);
}
function ex(s, e) {
    let t = {}, n = s.getProgramParameter(e, 35721);
    for(let i = 0; i < n; i++){
        let r = s.getActiveAttrib(e, i), o = r.name, a = 1;
        r.type === 35674 && (a = 2), r.type === 35675 && (a = 3), r.type === 35676 && (a = 4), t[o] = {
            type: r.type,
            location: s.getAttribLocation(e, o),
            locationSize: a
        };
    }
    return t;
}
function rr(s) {
    return s !== "";
}
function Wl(s, e) {
    return s.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function ql(s, e) {
    return s.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
var tx = /^[ \t]*#include +<([\w\d./]+)>/gm;
function ra(s) {
    return s.replace(tx, nx);
}
function nx(s, e) {
    let t = Fe[e];
    if (t === void 0) throw new Error("Can not resolve #include <" + e + ">");
    return ra(t);
}
var ix = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, rx = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Xl(s) {
    return s.replace(rx, mh).replace(ix, sx);
}
function sx(s, e, t, n) {
    return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), mh(s, e, t, n);
}
function mh(s, e, t, n) {
    let i = "";
    for(let r = parseInt(e); r < parseInt(t); r++)i += n.replace(/\[\s*i\s*\]/g, "[ " + r + " ]").replace(/UNROLLED_LOOP_INDEX/g, r);
    return i;
}
function Jl(s) {
    let e = "precision " + s.precision + ` float;
precision ` + s.precision + " int;";
    return s.precision === "highp" ? e += `
#define HIGH_PRECISION` : s.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : s.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function ox(s) {
    let e = "SHADOWMAP_TYPE_BASIC";
    return s.shadowMapType === Hc ? e = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === fu ? e = "SHADOWMAP_TYPE_PCF_SOFT" : s.shadowMapType === ir && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function ax(s) {
    let e = "ENVMAP_TYPE_CUBE";
    if (s.envMap) switch(s.envMapMode){
        case Bi:
        case zi:
            e = "ENVMAP_TYPE_CUBE";
            break;
        case Pr:
        case Ws:
            e = "ENVMAP_TYPE_CUBE_UV";
            break;
    }
    return e;
}
function lx(s) {
    let e = "ENVMAP_MODE_REFLECTION";
    if (s.envMap) switch(s.envMapMode){
        case zi:
        case Ws:
            e = "ENVMAP_MODE_REFRACTION";
            break;
    }
    return e;
}
function cx(s) {
    let e = "ENVMAP_BLENDING_NONE";
    if (s.envMap) switch(s.combine){
        case Vs:
            e = "ENVMAP_BLENDING_MULTIPLY";
            break;
        case Du:
            e = "ENVMAP_BLENDING_MIX";
            break;
        case Fu:
            e = "ENVMAP_BLENDING_ADD";
            break;
    }
    return e;
}
function hx(s, e, t, n) {
    let i = s.getContext(), r = t.defines, o = t.vertexShader, a = t.fragmentShader, l = ox(t), c = ax(t), h = lx(t), u = cx(t), d = t.isWebGL2 ? "" : Qg(t), f = Kg(r), m = i.createProgram(), x, v, g = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
    t.isRawShaderMaterial ? (x = [
        f
    ].filter(rr).join(`
`), x.length > 0 && (x += `
`), v = [
        d,
        f
    ].filter(rr).join(`
`), v.length > 0 && (v += `
`)) : (x = [
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
        "#define MAX_BONES " + t.maxBones,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + h : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.displacementMap && t.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.useVertexTexture ? "#define BONE_TEXTURE" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`
    ].filter(rr).join(`
`), v = [
        d,
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + c : "",
        t.envMap ? "#define " + h : "",
        t.envMap ? "#define " + u : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        (t.extensionShaderTextureLOD || t.envMap) && t.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== _n ? "#define TONE_MAPPING" : "",
        t.toneMapping !== _n ? Fe.tonemapping_pars_fragment : "",
        t.toneMapping !== _n ? jg("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.format === Gn ? "#define OPAQUE" : "",
        Fe.encodings_pars_fragment,
        t.map ? Dn("mapTexelToLinear", t.mapEncoding) : "",
        t.matcap ? Dn("matcapTexelToLinear", t.matcapEncoding) : "",
        t.envMap ? Dn("envMapTexelToLinear", t.envMapEncoding) : "",
        t.emissiveMap ? Dn("emissiveMapTexelToLinear", t.emissiveMapEncoding) : "",
        t.specularColorMap ? Dn("specularColorMapTexelToLinear", t.specularColorMapEncoding) : "",
        t.sheenColorMap ? Dn("sheenColorMapTexelToLinear", t.sheenColorMapEncoding) : "",
        t.lightMap ? Dn("lightMapTexelToLinear", t.lightMapEncoding) : "",
        $g("linearToOutputTexel", t.outputEncoding),
        t.depthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`
    ].filter(rr).join(`
`)), o = ra(o), o = Wl(o, t), o = ql(o, t), a = ra(a), a = Wl(a, t), a = ql(a, t), o = Xl(o), a = Xl(a), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (g = `#version 300 es
`, x = [
        "precision mediump sampler2DArray;",
        "#define attribute in",
        "#define varying out",
        "#define texture2D texture"
    ].join(`
`) + `
` + x, v = [
        "#define varying in",
        t.glslVersion === xl ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
        t.glslVersion === xl ? "" : "#define gl_FragColor pc_fragColor",
        "#define gl_FragDepthEXT gl_FragDepth",
        "#define texture2D texture",
        "#define textureCube texture",
        "#define texture2DProj textureProj",
        "#define texture2DLodEXT textureLod",
        "#define texture2DProjLodEXT textureProjLod",
        "#define textureCubeLodEXT textureLod",
        "#define texture2DGradEXT textureGrad",
        "#define texture2DProjGradEXT textureProjGrad",
        "#define textureCubeGradEXT textureGrad"
    ].join(`
`) + `
` + v);
    let p = g + x + o, _ = g + v + a, y = Gl(i, 35633, p), b = Gl(i, 35632, _);
    if (i.attachShader(m, y), i.attachShader(m, b), t.index0AttributeName !== void 0 ? i.bindAttribLocation(m, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(m, 0, "position"), i.linkProgram(m), s.debug.checkShaderErrors) {
        let I = i.getProgramInfoLog(m).trim(), k = i.getShaderInfoLog(y).trim(), B = i.getShaderInfoLog(b).trim(), P = !0, w = !0;
        if (i.getProgramParameter(m, 35714) === !1) {
            P = !1;
            let E = Vl(i, y, "vertex"), D = Vl(i, b, "fragment");
            console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(m, 35715) + `

Program Info Log: ` + I + `
` + E + `
` + D);
        } else I !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", I) : (k === "" || B === "") && (w = !1);
        w && (this.diagnostics = {
            runnable: P,
            programLog: I,
            vertexShader: {
                log: k,
                prefix: x
            },
            fragmentShader: {
                log: B,
                prefix: v
            }
        });
    }
    i.deleteShader(y), i.deleteShader(b);
    let A;
    this.getUniforms = function() {
        return A === void 0 && (A = new bn(i, m)), A;
    };
    let L;
    return this.getAttributes = function() {
        return L === void 0 && (L = ex(i, m)), L;
    }, this.destroy = function() {
        n.releaseStatesOfProgram(this), i.deleteProgram(m), this.program = void 0;
    }, this.name = t.shaderName, this.id = Yg++, this.cacheKey = e, this.usedTimes = 1, this.program = m, this.vertexShader = y, this.fragmentShader = b, this;
}
var ux = 0, gh = class {
    constructor(){
        this.shaderCache = new Map, this.materialCache = new Map;
    }
    update(e) {
        let t = e.vertexShader, n = e.fragmentShader, i = this._getShaderStage(t), r = this._getShaderStage(n), o = this._getShaderCacheForMaterial(e);
        return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(r) === !1 && (o.add(r), r.usedTimes++), this;
    }
    remove(e) {
        let t = this.materialCache.get(e);
        for (let n of t)n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        let t = this.materialCache;
        return t.has(e) === !1 && t.set(e, new Set), t.get(e);
    }
    _getShaderStage(e) {
        let t = this.shaderCache;
        if (t.has(e) === !1) {
            let n = new xh;
            t.set(e, n);
        }
        return t.get(e);
    }
}, xh = class {
    constructor(){
        this.id = ux++, this.usedTimes = 0;
    }
};
function dx(s, e, t, n, i, r, o) {
    let a = new Js, l = new gh, c = [], h = i.isWebGL2, u = i.logarithmicDepthBuffer, d = i.floatVertexTextures, f = i.maxVertexUniforms, m = i.vertexTextures, x = i.precision, v = {
        MeshDepthMaterial: "depth",
        MeshDistanceMaterial: "distanceRGBA",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshToonMaterial: "toon",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        MeshMatcapMaterial: "matcap",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points",
        ShadowMaterial: "shadow",
        SpriteMaterial: "sprite"
    };
    function g(w) {
        let D = w.skeleton.bones;
        if (d) return 1024;
        {
            let F = Math.floor((f - 20) / 4), O = Math.min(F, D.length);
            return O < D.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + D.length + " bones. This GPU supports " + O + "."), 0) : O;
        }
    }
    function p(w) {
        let E;
        return w && w.isTexture ? E = w.encoding : w && w.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), E = w.texture.encoding) : E = Nt, h && w && w.isTexture && w.format === ct && w.type === rn && w.encoding === Oi && (E = Nt), E;
    }
    function _(w, E, D, U, F) {
        let O = U.fog, ne = w.isMeshStandardMaterial ? U.environment : null, ce = (w.isMeshStandardMaterial ? t : e).get(w.envMap || ne), V = v[w.type], W = F.isSkinnedMesh ? g(F) : 0;
        w.precision !== null && (x = i.getMaxPrecision(w.precision), x !== w.precision && console.warn("THREE.WebGLProgram.getParameters:", w.precision, "not supported, using", x, "instead."));
        let he, le, fe, Be;
        if (V) {
            let xe = qt[V];
            he = xe.vertexShader, le = xe.fragmentShader;
        } else he = w.vertexShader, le = w.fragmentShader, l.update(w), fe = l.getVertexShaderID(w), Be = l.getFragmentShaderID(w);
        let Y = s.getRenderTarget(), Ce = w.alphaTest > 0, ye = w.clearcoat > 0;
        return {
            isWebGL2: h,
            shaderID: V,
            shaderName: w.type,
            vertexShader: he,
            fragmentShader: le,
            defines: w.defines,
            customVertexShaderID: fe,
            customFragmentShaderID: Be,
            isRawShaderMaterial: w.isRawShaderMaterial === !0,
            glslVersion: w.glslVersion,
            precision: x,
            instancing: F.isInstancedMesh === !0,
            instancingColor: F.isInstancedMesh === !0 && F.instanceColor !== null,
            supportsVertexTextures: m,
            outputEncoding: Y !== null ? p(Y.texture) : s.outputEncoding,
            map: !!w.map,
            mapEncoding: p(w.map),
            matcap: !!w.matcap,
            matcapEncoding: p(w.matcap),
            envMap: !!ce,
            envMapMode: ce && ce.mapping,
            envMapEncoding: p(ce),
            envMapCubeUV: !!ce && (ce.mapping === Pr || ce.mapping === Ws),
            lightMap: !!w.lightMap,
            lightMapEncoding: p(w.lightMap),
            aoMap: !!w.aoMap,
            emissiveMap: !!w.emissiveMap,
            emissiveMapEncoding: p(w.emissiveMap),
            bumpMap: !!w.bumpMap,
            normalMap: !!w.normalMap,
            objectSpaceNormalMap: w.normalMapType === zd,
            tangentSpaceNormalMap: w.normalMapType === Hi,
            clearcoat: ye,
            clearcoatMap: ye && !!w.clearcoatMap,
            clearcoatRoughnessMap: ye && !!w.clearcoatRoughnessMap,
            clearcoatNormalMap: ye && !!w.clearcoatNormalMap,
            displacementMap: !!w.displacementMap,
            roughnessMap: !!w.roughnessMap,
            metalnessMap: !!w.metalnessMap,
            specularMap: !!w.specularMap,
            specularIntensityMap: !!w.specularIntensityMap,
            specularColorMap: !!w.specularColorMap,
            specularColorMapEncoding: p(w.specularColorMap),
            alphaMap: !!w.alphaMap,
            alphaTest: Ce,
            gradientMap: !!w.gradientMap,
            sheen: w.sheen > 0,
            sheenColorMap: !!w.sheenColorMap,
            sheenColorMapEncoding: p(w.sheenColorMap),
            sheenRoughnessMap: !!w.sheenRoughnessMap,
            transmission: w.transmission > 0,
            transmissionMap: !!w.transmissionMap,
            thicknessMap: !!w.thicknessMap,
            combine: w.combine,
            vertexTangents: !!w.normalMap && !!F.geometry && !!F.geometry.attributes.tangent,
            vertexColors: w.vertexColors,
            vertexAlphas: w.vertexColors === !0 && !!F.geometry && !!F.geometry.attributes.color && F.geometry.attributes.color.itemSize === 4,
            vertexUvs: !!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatMap || !!w.clearcoatRoughnessMap || !!w.clearcoatNormalMap || !!w.displacementMap || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || !!w.sheenColorMap || !!w.sheenRoughnessMap,
            uvsVertexOnly: !(!!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatNormalMap || w.transmission > 0 || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || w.sheen > 0 || !!w.sheenColorMap || !!w.sheenRoughnessMap) && !!w.displacementMap,
            fog: !!O,
            useFog: w.fog,
            fogExp2: O && O.isFogExp2,
            flatShading: !!w.flatShading,
            sizeAttenuation: w.sizeAttenuation,
            logarithmicDepthBuffer: u,
            skinning: F.isSkinnedMesh === !0 && W > 0,
            maxBones: W,
            useVertexTexture: d,
            morphTargets: !!F.geometry && !!F.geometry.morphAttributes.position,
            morphNormals: !!F.geometry && !!F.geometry.morphAttributes.normal,
            morphTargetsCount: !!F.geometry && !!F.geometry.morphAttributes.position ? F.geometry.morphAttributes.position.length : 0,
            numDirLights: E.directional.length,
            numPointLights: E.point.length,
            numSpotLights: E.spot.length,
            numRectAreaLights: E.rectArea.length,
            numHemiLights: E.hemi.length,
            numDirLightShadows: E.directionalShadowMap.length,
            numPointLightShadows: E.pointShadowMap.length,
            numSpotLightShadows: E.spotShadowMap.length,
            numClippingPlanes: o.numPlanes,
            numClipIntersection: o.numIntersection,
            format: w.format,
            dithering: w.dithering,
            shadowMapEnabled: s.shadowMap.enabled && D.length > 0,
            shadowMapType: s.shadowMap.type,
            toneMapping: w.toneMapped ? s.toneMapping : _n,
            physicallyCorrectLights: s.physicallyCorrectLights,
            premultipliedAlpha: w.premultipliedAlpha,
            doubleSided: w.side === Ci,
            flipSided: w.side === it,
            depthPacking: w.depthPacking !== void 0 ? w.depthPacking : !1,
            index0AttributeName: w.index0AttributeName,
            extensionDerivatives: w.extensions && w.extensions.derivatives,
            extensionFragDepth: w.extensions && w.extensions.fragDepth,
            extensionDrawBuffers: w.extensions && w.extensions.drawBuffers,
            extensionShaderTextureLOD: w.extensions && w.extensions.shaderTextureLOD,
            rendererExtensionFragDepth: h || n.has("EXT_frag_depth"),
            rendererExtensionDrawBuffers: h || n.has("WEBGL_draw_buffers"),
            rendererExtensionShaderTextureLod: h || n.has("EXT_shader_texture_lod"),
            customProgramCacheKey: w.customProgramCacheKey()
        };
    }
    function y(w) {
        let E = [];
        if (w.shaderID ? E.push(w.shaderID) : (E.push(w.customVertexShaderID), E.push(w.customFragmentShaderID)), w.defines !== void 0) for(let D in w.defines)E.push(D), E.push(w.defines[D]);
        return w.isRawShaderMaterial === !1 && (b(E, w), A(E, w), E.push(s.outputEncoding)), E.push(w.customProgramCacheKey), E.join();
    }
    function b(w, E) {
        w.push(E.precision), w.push(E.outputEncoding), w.push(E.mapEncoding), w.push(E.matcapEncoding), w.push(E.envMapMode), w.push(E.envMapEncoding), w.push(E.lightMapEncoding), w.push(E.emissiveMapEncoding), w.push(E.combine), w.push(E.vertexUvs), w.push(E.fogExp2), w.push(E.sizeAttenuation), w.push(E.maxBones), w.push(E.morphTargetsCount), w.push(E.numDirLights), w.push(E.numPointLights), w.push(E.numSpotLights), w.push(E.numHemiLights), w.push(E.numRectAreaLights), w.push(E.numDirLightShadows), w.push(E.numPointLightShadows), w.push(E.numSpotLightShadows), w.push(E.shadowMapType), w.push(E.toneMapping), w.push(E.numClippingPlanes), w.push(E.numClipIntersection), w.push(E.format), w.push(E.specularColorMapEncoding), w.push(E.sheenColorMapEncoding);
    }
    function A(w, E) {
        a.disableAll(), E.isWebGL2 && a.enable(0), E.supportsVertexTextures && a.enable(1), E.instancing && a.enable(2), E.instancingColor && a.enable(3), E.map && a.enable(4), E.matcap && a.enable(5), E.envMap && a.enable(6), E.envMapCubeUV && a.enable(7), E.lightMap && a.enable(8), E.aoMap && a.enable(9), E.emissiveMap && a.enable(10), E.bumpMap && a.enable(11), E.normalMap && a.enable(12), E.objectSpaceNormalMap && a.enable(13), E.tangentSpaceNormalMap && a.enable(14), E.clearcoat && a.enable(15), E.clearcoatMap && a.enable(16), E.clearcoatRoughnessMap && a.enable(17), E.clearcoatNormalMap && a.enable(18), E.displacementMap && a.enable(19), E.specularMap && a.enable(20), E.roughnessMap && a.enable(21), E.metalnessMap && a.enable(22), E.gradientMap && a.enable(23), E.alphaMap && a.enable(24), E.alphaTest && a.enable(25), E.vertexColors && a.enable(26), E.vertexAlphas && a.enable(27), E.vertexUvs && a.enable(28), E.vertexTangents && a.enable(29), E.uvsVertexOnly && a.enable(30), E.fog && a.enable(31), w.push(a.mask), a.disableAll(), E.useFog && a.enable(0), E.flatShading && a.enable(1), E.logarithmicDepthBuffer && a.enable(2), E.skinning && a.enable(3), E.useVertexTexture && a.enable(4), E.morphTargets && a.enable(5), E.morphNormals && a.enable(6), E.premultipliedAlpha && a.enable(7), E.shadowMapEnabled && a.enable(8), E.physicallyCorrectLights && a.enable(9), E.doubleSided && a.enable(10), E.flipSided && a.enable(11), E.depthPacking && a.enable(12), E.dithering && a.enable(13), E.specularIntensityMap && a.enable(14), E.specularColorMap && a.enable(15), E.transmission && a.enable(16), E.transmissionMap && a.enable(17), E.thicknessMap && a.enable(18), E.sheen && a.enable(19), E.sheenColorMap && a.enable(20), E.sheenRoughnessMap && a.enable(21), w.push(a.mask);
    }
    function L(w) {
        let E = v[w.type], D;
        if (E) {
            let U = qt[E];
            D = uf.clone(U.uniforms);
        } else D = w.uniforms;
        return D;
    }
    function I(w, E) {
        let D;
        for(let U = 0, F = c.length; U < F; U++){
            let O = c[U];
            if (O.cacheKey === E) {
                D = O, ++D.usedTimes;
                break;
            }
        }
        return D === void 0 && (D = new hx(s, E, w, r), c.push(D)), D;
    }
    function k(w) {
        if (--w.usedTimes === 0) {
            let E = c.indexOf(w);
            c[E] = c[c.length - 1], c.pop(), w.destroy();
        }
    }
    function B(w) {
        l.remove(w);
    }
    function P() {
        l.dispose();
    }
    return {
        getParameters: _,
        getProgramCacheKey: y,
        getUniforms: L,
        acquireProgram: I,
        releaseProgram: k,
        releaseShaderCache: B,
        programs: c,
        dispose: P
    };
}
function fx() {
    let s = new WeakMap;
    function e(r) {
        let o = s.get(r);
        return o === void 0 && (o = {}, s.set(r, o)), o;
    }
    function t(r) {
        s.delete(r);
    }
    function n(r, o, a) {
        s.get(r)[o] = a;
    }
    function i() {
        s = new WeakMap;
    }
    return {
        get: e,
        remove: t,
        update: n,
        dispose: i
    };
}
function px(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.material.id !== e.material.id ? s.material.id - e.material.id : s.z !== e.z ? s.z - e.z : s.id - e.id;
}
function Yl(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.z !== e.z ? e.z - s.z : s.id - e.id;
}
function Zl() {
    let s = [], e = 0, t = [], n = [], i = [];
    function r() {
        e = 0, t.length = 0, n.length = 0, i.length = 0;
    }
    function o(u, d, f, m, x, v) {
        let g = s[e];
        return g === void 0 ? (g = {
            id: u.id,
            object: u,
            geometry: d,
            material: f,
            groupOrder: m,
            renderOrder: u.renderOrder,
            z: x,
            group: v
        }, s[e] = g) : (g.id = u.id, g.object = u, g.geometry = d, g.material = f, g.groupOrder = m, g.renderOrder = u.renderOrder, g.z = x, g.group = v), e++, g;
    }
    function a(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.push(g) : f.transparent === !0 ? i.push(g) : t.push(g);
    }
    function l(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.unshift(g) : f.transparent === !0 ? i.unshift(g) : t.unshift(g);
    }
    function c(u, d) {
        t.length > 1 && t.sort(u || px), n.length > 1 && n.sort(d || Yl), i.length > 1 && i.sort(d || Yl);
    }
    function h() {
        for(let u = e, d = s.length; u < d; u++){
            let f = s[u];
            if (f.id === null) break;
            f.id = null, f.object = null, f.geometry = null, f.material = null, f.group = null;
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: r,
        push: a,
        unshift: l,
        finish: h,
        sort: c
    };
}
function mx() {
    let s = new WeakMap;
    function e(n, i) {
        let r;
        return s.has(n) === !1 ? (r = new Zl, s.set(n, [
            r
        ])) : i >= s.get(n).length ? (r = new Zl, s.get(n).push(r)) : r = s.get(n)[i], r;
    }
    function t() {
        s = new WeakMap;
    }
    return {
        get: e,
        dispose: t
    };
}
function gx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        direction: new M,
                        color: new ae
                    };
                    break;
                case "SpotLight":
                    t = {
                        position: new M,
                        direction: new M,
                        color: new ae,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    t = {
                        position: new M,
                        color: new ae,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    t = {
                        direction: new M,
                        skyColor: new ae,
                        groundColor: new ae
                    };
                    break;
                case "RectAreaLight":
                    t = {
                        color: new ae,
                        position: new M,
                        halfWidth: new M,
                        halfHeight: new M
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
function xx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "SpotLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "PointLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
var yx = 0;
function vx(s, e) {
    return (e.castShadow ? 1 : 0) - (s.castShadow ? 1 : 0);
}
function _x(s, e) {
    let t = new gx, n = xx(), i = {
        version: 0,
        hash: {
            directionalLength: -1,
            pointLength: -1,
            spotLength: -1,
            rectAreaLength: -1,
            hemiLength: -1,
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1
        },
        ambient: [
            0,
            0,
            0
        ],
        probe: [],
        directional: [],
        directionalShadow: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotShadow: [],
        spotShadowMap: [],
        spotShadowMatrix: [],
        rectArea: [],
        rectAreaLTC1: null,
        rectAreaLTC2: null,
        point: [],
        pointShadow: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: []
    };
    for(let h = 0; h < 9; h++)i.probe.push(new M);
    let r = new M, o = new pe, a = new pe;
    function l(h, u) {
        let d = 0, f = 0, m = 0;
        for(let k = 0; k < 9; k++)i.probe[k].set(0, 0, 0);
        let x = 0, v = 0, g = 0, p = 0, _ = 0, y = 0, b = 0, A = 0;
        h.sort(vx);
        let L = u !== !0 ? Math.PI : 1;
        for(let k1 = 0, B = h.length; k1 < B; k1++){
            let P = h[k1], w = P.color, E = P.intensity, D = P.distance, U = P.shadow && P.shadow.map ? P.shadow.map.texture : null;
            if (P.isAmbientLight) d += w.r * E * L, f += w.g * E * L, m += w.b * E * L;
            else if (P.isLightProbe) for(let F = 0; F < 9; F++)i.probe[F].addScaledVector(P.sh.coefficients[F], E);
            else if (P.isDirectionalLight) {
                let F1 = t.get(P);
                if (F1.color.copy(P.color).multiplyScalar(P.intensity * L), P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.directionalShadow[x] = ne, i.directionalShadowMap[x] = U, i.directionalShadowMatrix[x] = P.shadow.matrix, y++;
                }
                i.directional[x] = F1, x++;
            } else if (P.isSpotLight) {
                let F2 = t.get(P);
                if (F2.position.setFromMatrixPosition(P.matrixWorld), F2.color.copy(w).multiplyScalar(E * L), F2.distance = D, F2.coneCos = Math.cos(P.angle), F2.penumbraCos = Math.cos(P.angle * (1 - P.penumbra)), F2.decay = P.decay, P.castShadow) {
                    let O1 = P.shadow, ne1 = n.get(P);
                    ne1.shadowBias = O1.bias, ne1.shadowNormalBias = O1.normalBias, ne1.shadowRadius = O1.radius, ne1.shadowMapSize = O1.mapSize, i.spotShadow[g] = ne1, i.spotShadowMap[g] = U, i.spotShadowMatrix[g] = P.shadow.matrix, A++;
                }
                i.spot[g] = F2, g++;
            } else if (P.isRectAreaLight) {
                let F3 = t.get(P);
                F3.color.copy(w).multiplyScalar(E), F3.halfWidth.set(P.width * .5, 0, 0), F3.halfHeight.set(0, P.height * .5, 0), i.rectArea[p] = F3, p++;
            } else if (P.isPointLight) {
                let F4 = t.get(P);
                if (F4.color.copy(P.color).multiplyScalar(P.intensity * L), F4.distance = P.distance, F4.decay = P.decay, P.castShadow) {
                    let O2 = P.shadow, ne2 = n.get(P);
                    ne2.shadowBias = O2.bias, ne2.shadowNormalBias = O2.normalBias, ne2.shadowRadius = O2.radius, ne2.shadowMapSize = O2.mapSize, ne2.shadowCameraNear = O2.camera.near, ne2.shadowCameraFar = O2.camera.far, i.pointShadow[v] = ne2, i.pointShadowMap[v] = U, i.pointShadowMatrix[v] = P.shadow.matrix, b++;
                }
                i.point[v] = F4, v++;
            } else if (P.isHemisphereLight) {
                let F5 = t.get(P);
                F5.skyColor.copy(P.color).multiplyScalar(E * L), F5.groundColor.copy(P.groundColor).multiplyScalar(E * L), i.hemi[_] = F5, _++;
            }
        }
        p > 0 && (e.isWebGL2 || s.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_FLOAT_1, i.rectAreaLTC2 = ie.LTC_FLOAT_2) : s.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_HALF_1, i.rectAreaLTC2 = ie.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = d, i.ambient[1] = f, i.ambient[2] = m;
        let I = i.hash;
        (I.directionalLength !== x || I.pointLength !== v || I.spotLength !== g || I.rectAreaLength !== p || I.hemiLength !== _ || I.numDirectionalShadows !== y || I.numPointShadows !== b || I.numSpotShadows !== A) && (i.directional.length = x, i.spot.length = g, i.rectArea.length = p, i.point.length = v, i.hemi.length = _, i.directionalShadow.length = y, i.directionalShadowMap.length = y, i.pointShadow.length = b, i.pointShadowMap.length = b, i.spotShadow.length = A, i.spotShadowMap.length = A, i.directionalShadowMatrix.length = y, i.pointShadowMatrix.length = b, i.spotShadowMatrix.length = A, I.directionalLength = x, I.pointLength = v, I.spotLength = g, I.rectAreaLength = p, I.hemiLength = _, I.numDirectionalShadows = y, I.numPointShadows = b, I.numSpotShadows = A, i.version = yx++);
    }
    function c(h, u) {
        let d = 0, f = 0, m = 0, x = 0, v = 0, g = u.matrixWorldInverse;
        for(let p = 0, _ = h.length; p < _; p++){
            let y = h[p];
            if (y.isDirectionalLight) {
                let b = i.directional[d];
                b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), d++;
            } else if (y.isSpotLight) {
                let b1 = i.spot[m];
                b1.position.setFromMatrixPosition(y.matrixWorld), b1.position.applyMatrix4(g), b1.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b1.direction.sub(r), b1.direction.transformDirection(g), m++;
            } else if (y.isRectAreaLight) {
                let b2 = i.rectArea[x];
                b2.position.setFromMatrixPosition(y.matrixWorld), b2.position.applyMatrix4(g), a.identity(), o.copy(y.matrixWorld), o.premultiply(g), a.extractRotation(o), b2.halfWidth.set(y.width * .5, 0, 0), b2.halfHeight.set(0, y.height * .5, 0), b2.halfWidth.applyMatrix4(a), b2.halfHeight.applyMatrix4(a), x++;
            } else if (y.isPointLight) {
                let b3 = i.point[f];
                b3.position.setFromMatrixPosition(y.matrixWorld), b3.position.applyMatrix4(g), f++;
            } else if (y.isHemisphereLight) {
                let b4 = i.hemi[v];
                b4.direction.setFromMatrixPosition(y.matrixWorld), b4.direction.transformDirection(g), b4.direction.normalize(), v++;
            }
        }
    }
    return {
        setup: l,
        setupView: c,
        state: i
    };
}
function $l(s, e) {
    let t = new _x(s, e), n = [], i = [];
    function r() {
        n.length = 0, i.length = 0;
    }
    function o(u) {
        n.push(u);
    }
    function a(u) {
        i.push(u);
    }
    function l(u) {
        t.setup(n, u);
    }
    function c(u) {
        t.setupView(n, u);
    }
    return {
        init: r,
        state: {
            lightsArray: n,
            shadowsArray: i,
            lights: t
        },
        setupLights: l,
        setupLightsView: c,
        pushLight: o,
        pushShadow: a
    };
}
function Mx(s, e) {
    let t = new WeakMap;
    function n(r, o = 0) {
        let a;
        return t.has(r) === !1 ? (a = new $l(s, e), t.set(r, [
            a
        ])) : o >= t.get(r).length ? (a = new $l(s, e), t.get(r).push(a)) : a = t.get(r)[o], a;
    }
    function i() {
        t = new WeakMap;
    }
    return {
        get: n,
        dispose: i
    };
}
var eo = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDepthMaterial", this.depthPacking = Nd, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
    }
};
eo.prototype.isMeshDepthMaterial = !0;
var to = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDistanceMaterial", this.referencePosition = new M, this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
    }
};
to.prototype.isMeshDistanceMaterial = !0;
var bx = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, wx = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function yh(s, e, t) {
    let n = new Dr, i = new X, r = new X, o = new Ve, a = new eo({
        depthPacking: Bd
    }), l = new to, c = {}, h = t.maxTextureSize, u = {
        0: it,
        1: Ai,
        2: Ci
    }, d = new sn({
        defines: {
            VSM_SAMPLES: 8
        },
        uniforms: {
            shadow_pass: {
                value: null
            },
            resolution: {
                value: new X
            },
            radius: {
                value: 4
            }
        },
        vertexShader: bx,
        fragmentShader: wx
    }), f = d.clone();
    f.defines.HORIZONTAL_PASS = 1;
    let m = new _e;
    m.setAttribute("position", new Ue(new Float32Array([
        -1,
        -1,
        .5,
        3,
        -1,
        .5,
        -1,
        3,
        .5
    ]), 3));
    let x = new st(m, d), v = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Hc, this.render = function(y, b, A) {
        if (v.enabled === !1 || v.autoUpdate === !1 && v.needsUpdate === !1 || y.length === 0) return;
        let L = s.getRenderTarget(), I = s.getActiveCubeFace(), k = s.getActiveMipmapLevel(), B = s.state;
        B.setBlending(vn), B.buffers.color.setClear(1, 1, 1, 1), B.buffers.depth.setTest(!0), B.setScissorTest(!1);
        for(let P = 0, w = y.length; P < w; P++){
            let E = y[P], D = E.shadow;
            if (D === void 0) {
                console.warn("THREE.WebGLShadowMap:", E, "has no shadow.");
                continue;
            }
            if (D.autoUpdate === !1 && D.needsUpdate === !1) continue;
            i.copy(D.mapSize);
            let U = D.getFrameExtents();
            if (i.multiply(U), r.copy(D.mapSize), (i.x > h || i.y > h) && (i.x > h && (r.x = Math.floor(h / U.x), i.x = r.x * U.x, D.mapSize.x = r.x), i.y > h && (r.y = Math.floor(h / U.y), i.y = r.y * U.y, D.mapSize.y = r.y)), D.map === null && !D.isPointLightShadow && this.type === ir) {
                let O = {
                    minFilter: tt,
                    magFilter: tt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.mapPass = new At(i.x, i.y, O), D.camera.updateProjectionMatrix();
            }
            if (D.map === null) {
                let O1 = {
                    minFilter: rt,
                    magFilter: rt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O1), D.map.texture.name = E.name + ".shadowMap", D.camera.updateProjectionMatrix();
            }
            s.setRenderTarget(D.map), s.clear();
            let F = D.getViewportCount();
            for(let O2 = 0; O2 < F; O2++){
                let ne = D.getViewport(O2);
                o.set(r.x * ne.x, r.y * ne.y, r.x * ne.z, r.y * ne.w), B.viewport(o), D.updateMatrices(E, O2), n = D.getFrustum(), _(b, A, D.camera, E, this.type);
            }
            !D.isPointLightShadow && this.type === ir && g(D, A), D.needsUpdate = !1;
        }
        v.needsUpdate = !1, s.setRenderTarget(L, I, k);
    };
    function g(y, b) {
        let A = e.update(x);
        d.defines.VSM_SAMPLES !== y.blurSamples && (d.defines.VSM_SAMPLES = y.blurSamples, f.defines.VSM_SAMPLES = y.blurSamples, d.needsUpdate = !0, f.needsUpdate = !0), d.uniforms.shadow_pass.value = y.map.texture, d.uniforms.resolution.value = y.mapSize, d.uniforms.radius.value = y.radius, s.setRenderTarget(y.mapPass), s.clear(), s.renderBufferDirect(b, null, A, d, x, null), f.uniforms.shadow_pass.value = y.mapPass.texture, f.uniforms.resolution.value = y.mapSize, f.uniforms.radius.value = y.radius, s.setRenderTarget(y.map), s.clear(), s.renderBufferDirect(b, null, A, f, x, null);
    }
    function p(y, b, A, L, I, k, B) {
        let P = null, w = L.isPointLight === !0 ? y.customDistanceMaterial : y.customDepthMaterial;
        if (w !== void 0 ? P = w : P = L.isPointLight === !0 ? l : a, s.localClippingEnabled && A.clipShadows === !0 && A.clippingPlanes.length !== 0 || A.displacementMap && A.displacementScale !== 0 || A.alphaMap && A.alphaTest > 0) {
            let E = P.uuid, D = A.uuid, U = c[E];
            U === void 0 && (U = {}, c[E] = U);
            let F = U[D];
            F === void 0 && (F = P.clone(), U[D] = F), P = F;
        }
        return P.visible = A.visible, P.wireframe = A.wireframe, B === ir ? P.side = A.shadowSide !== null ? A.shadowSide : A.side : P.side = A.shadowSide !== null ? A.shadowSide : u[A.side], P.alphaMap = A.alphaMap, P.alphaTest = A.alphaTest, P.clipShadows = A.clipShadows, P.clippingPlanes = A.clippingPlanes, P.clipIntersection = A.clipIntersection, P.displacementMap = A.displacementMap, P.displacementScale = A.displacementScale, P.displacementBias = A.displacementBias, P.wireframeLinewidth = A.wireframeLinewidth, P.linewidth = A.linewidth, L.isPointLight === !0 && P.isMeshDistanceMaterial === !0 && (P.referencePosition.setFromMatrixPosition(L.matrixWorld), P.nearDistance = I, P.farDistance = k), P;
    }
    function _(y, b, A, L, I) {
        if (y.visible === !1) return;
        if (y.layers.test(b.layers) && (y.isMesh || y.isLine || y.isPoints) && (y.castShadow || y.receiveShadow && I === ir) && (!y.frustumCulled || n.intersectsObject(y))) {
            y.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse, y.matrixWorld);
            let P = e.update(y), w = y.material;
            if (Array.isArray(w)) {
                let E = P.groups;
                for(let D = 0, U = E.length; D < U; D++){
                    let F = E[D], O = w[F.materialIndex];
                    if (O && O.visible) {
                        let ne = p(y, P, O, L, A.near, A.far, I);
                        s.renderBufferDirect(A, null, P, ne, y, F);
                    }
                }
            } else if (w.visible) {
                let E1 = p(y, P, w, L, A.near, A.far, I);
                s.renderBufferDirect(A, null, P, E1, y, null);
            }
        }
        let B = y.children;
        for(let P1 = 0, w1 = B.length; P1 < w1; P1++)_(B[P1], b, A, L, I);
    }
}
function Sx(s, e, t) {
    let n = t.isWebGL2;
    function i() {
        let R = !1, ee = new Ve, Q = null, Ee = new Ve(0, 0, 0, 0);
        return {
            setMask: function(me) {
                Q !== me && !R && (s.colorMask(me, me, me, me), Q = me);
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me, Re, oe, Le, Xe) {
                Xe === !0 && (me *= Le, Re *= Le, oe *= Le), ee.set(me, Re, oe, Le), Ee.equals(ee) === !1 && (s.clearColor(me, Re, oe, Le), Ee.copy(ee));
            },
            reset: function() {
                R = !1, Q = null, Ee.set(-1, 0, 0, 0);
            }
        };
    }
    function r() {
        let R = !1, ee = null, Q = null, Ee = null;
        return {
            setTest: function(me) {
                me ? le(2929) : fe(2929);
            },
            setMask: function(me) {
                ee !== me && !R && (s.depthMask(me), ee = me);
            },
            setFunc: function(me) {
                if (Q !== me) {
                    if (me) switch(me){
                        case Eu:
                            s.depthFunc(512);
                            break;
                        case Au:
                            s.depthFunc(519);
                            break;
                        case Cu:
                            s.depthFunc(513);
                            break;
                        case ea:
                            s.depthFunc(515);
                            break;
                        case Lu:
                            s.depthFunc(514);
                            break;
                        case Ru:
                            s.depthFunc(518);
                            break;
                        case Pu:
                            s.depthFunc(516);
                            break;
                        case Iu:
                            s.depthFunc(517);
                            break;
                        default:
                            s.depthFunc(515);
                    }
                    else s.depthFunc(515);
                    Q = me;
                }
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me) {
                Ee !== me && (s.clearDepth(me), Ee = me);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null;
            }
        };
    }
    function o() {
        let R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
        return {
            setTest: function(We) {
                R || (We ? le(2960) : fe(2960));
            },
            setMask: function(We) {
                ee !== We && !R && (s.stencilMask(We), ee = We);
            },
            setFunc: function(We, Ut, Ot) {
                (Q !== We || Ee !== Ut || me !== Ot) && (s.stencilFunc(We, Ut, Ot), Q = We, Ee = Ut, me = Ot);
            },
            setOp: function(We, Ut, Ot) {
                (Re !== We || oe !== Ut || Le !== Ot) && (s.stencilOp(We, Ut, Ot), Re = We, oe = Ut, Le = Ot);
            },
            setLocked: function(We) {
                R = We;
            },
            setClear: function(We) {
                Xe !== We && (s.clearStencil(We), Xe = We);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
            }
        };
    }
    let a = new i, l = new r, c = new o, h = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, P = s.getParameter(35661), w = !1, E = 0, D = s.getParameter(7938);
    D.indexOf("WebGL") !== -1 ? (E = parseFloat(/^WebGL (\d)/.exec(D)[1]), w = E >= 1) : D.indexOf("OpenGL ES") !== -1 && (E = parseFloat(/^OpenGL ES (\d)/.exec(D)[1]), w = E >= 2);
    let U = null, F = {}, O = s.getParameter(3088), ne = s.getParameter(2978), ce = new Ve().fromArray(O), V = new Ve().fromArray(ne);
    function W(R, ee, Q) {
        let Ee = new Uint8Array(4), me = s.createTexture();
        s.bindTexture(R, me), s.texParameteri(R, 10241, 9728), s.texParameteri(R, 10240, 9728);
        for(let Re = 0; Re < Q; Re++)s.texImage2D(ee + Re, 0, 6408, 1, 1, 0, 6408, 5121, Ee);
        return me;
    }
    let he = {};
    he[3553] = W(3553, 3553, 1), he[34067] = W(34067, 34069, 6), a.setClear(0, 0, 0, 1), l.setClear(1), c.setClear(0), le(2929), l.setFunc(ea), Oe(!1), G(tl), le(2884), ge(vn);
    function le(R) {
        h[R] !== !0 && (s.enable(R), h[R] = !0);
    }
    function fe(R) {
        h[R] !== !1 && (s.disable(R), h[R] = !1);
    }
    function Be(R, ee) {
        return u[R] !== ee ? (s.bindFramebuffer(R, ee), u[R] = ee, n && (R === 36009 && (u[36160] = ee), R === 36160 && (u[36009] = ee)), !0) : !1;
    }
    function Y(R) {
        return d !== R ? (s.useProgram(R), d = R, !0) : !1;
    }
    let Ce = {
        [_i]: 32774,
        [mu]: 32778,
        [gu]: 32779
    };
    if (n) Ce[sl] = 32775, Ce[ol] = 32776;
    else {
        let R = e.get("EXT_blend_minmax");
        R !== null && (Ce[sl] = R.MIN_EXT, Ce[ol] = R.MAX_EXT);
    }
    let ye = {
        [xu]: 0,
        [yu]: 1,
        [vu]: 768,
        [Gc]: 770,
        [Tu]: 776,
        [wu]: 774,
        [Mu]: 772,
        [_u]: 769,
        [Vc]: 771,
        [Su]: 775,
        [bu]: 773
    };
    function ge(R, ee, Q, Ee, me, Re, oe, Le) {
        if (R === vn) {
            f === !0 && (fe(3042), f = !1);
            return;
        }
        if (f === !1 && (le(3042), f = !0), R !== pu) {
            if (R !== m || Le !== b) {
                if ((x !== _i || p !== _i) && (s.blendEquation(32774), x = _i, p = _i), Le) switch(R){
                    case sr:
                        s.blendFuncSeparate(1, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(1, 1);
                        break;
                    case il:
                        s.blendFuncSeparate(0, 0, 769, 771);
                        break;
                    case rl:
                        s.blendFuncSeparate(0, 768, 0, 770);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                else switch(R){
                    case sr:
                        s.blendFuncSeparate(770, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(770, 1);
                        break;
                    case il:
                        s.blendFunc(0, 769);
                        break;
                    case rl:
                        s.blendFunc(0, 768);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                v = null, g = null, _ = null, y = null, m = R, b = Le;
            }
            return;
        }
        me = me || ee, Re = Re || Q, oe = oe || Ee, (ee !== x || me !== p) && (s.blendEquationSeparate(Ce[ee], Ce[me]), x = ee, p = me), (Q !== v || Ee !== g || Re !== _ || oe !== y) && (s.blendFuncSeparate(ye[Q], ye[Ee], ye[Re], ye[oe]), v = Q, g = Ee, _ = Re, y = oe), m = R, b = null;
    }
    function xe(R, ee) {
        R.side === Ci ? fe(2884) : le(2884);
        let Q = R.side === it;
        ee && (Q = !Q), Oe(Q), R.blending === sr && R.transparent === !1 ? ge(vn) : ge(R.blending, R.blendEquation, R.blendSrc, R.blendDst, R.blendEquationAlpha, R.blendSrcAlpha, R.blendDstAlpha, R.premultipliedAlpha), l.setFunc(R.depthFunc), l.setTest(R.depthTest), l.setMask(R.depthWrite), a.setMask(R.colorWrite);
        let Ee = R.stencilWrite;
        c.setTest(Ee), Ee && (c.setMask(R.stencilWriteMask), c.setFunc(R.stencilFunc, R.stencilRef, R.stencilFuncMask), c.setOp(R.stencilFail, R.stencilZFail, R.stencilZPass)), K(R.polygonOffset, R.polygonOffsetFactor, R.polygonOffsetUnits), R.alphaToCoverage === !0 ? le(32926) : fe(32926);
    }
    function Oe(R) {
        A !== R && (R ? s.frontFace(2304) : s.frontFace(2305), A = R);
    }
    function G(R) {
        R !== uu ? (le(2884), R !== L && (R === tl ? s.cullFace(1029) : R === du ? s.cullFace(1028) : s.cullFace(1032))) : fe(2884), L = R;
    }
    function j(R) {
        R !== I && (w && s.lineWidth(R), I = R);
    }
    function K(R, ee, Q) {
        R ? (le(32823), (k !== ee || B !== Q) && (s.polygonOffset(ee, Q), k = ee, B = Q)) : fe(32823);
    }
    function ue(R) {
        R ? le(3089) : fe(3089);
    }
    function se(R) {
        R === void 0 && (R = 33984 + P - 1), U !== R && (s.activeTexture(R), U = R);
    }
    function Se(R, ee) {
        U === null && se();
        let Q = F[U];
        Q === void 0 && (Q = {
            type: void 0,
            texture: void 0
        }, F[U] = Q), (Q.type !== R || Q.texture !== ee) && (s.bindTexture(R, ee || he[R]), Q.type = R, Q.texture = ee);
    }
    function Te() {
        let R = F[U];
        R !== void 0 && R.type !== void 0 && (s.bindTexture(R.type, null), R.type = void 0, R.texture = void 0);
    }
    function Pe() {
        try {
            s.compressedTexImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Ye() {
        try {
            s.texSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function C() {
        try {
            s.texSubImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function T() {
        try {
            s.compressedTexSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function J() {
        try {
            s.texStorage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function $() {
        try {
            s.texStorage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function re() {
        try {
            s.texImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Z() {
        try {
            s.texImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Me(R) {
        ce.equals(R) === !1 && (s.scissor(R.x, R.y, R.z, R.w), ce.copy(R));
    }
    function ve(R) {
        V.equals(R) === !1 && (s.viewport(R.x, R.y, R.z, R.w), V.copy(R));
    }
    function te() {
        s.disable(3042), s.disable(2884), s.disable(2929), s.disable(32823), s.disable(3089), s.disable(2960), s.disable(32926), s.blendEquation(32774), s.blendFunc(1, 0), s.blendFuncSeparate(1, 0, 1, 0), s.colorMask(!0, !0, !0, !0), s.clearColor(0, 0, 0, 0), s.depthMask(!0), s.depthFunc(513), s.clearDepth(1), s.stencilMask(4294967295), s.stencilFunc(519, 0, 4294967295), s.stencilOp(7680, 7680, 7680), s.clearStencil(0), s.cullFace(1029), s.frontFace(2305), s.polygonOffset(0, 0), s.activeTexture(33984), s.bindFramebuffer(36160, null), n === !0 && (s.bindFramebuffer(36009, null), s.bindFramebuffer(36008, null)), s.useProgram(null), s.lineWidth(1), s.scissor(0, 0, s.canvas.width, s.canvas.height), s.viewport(0, 0, s.canvas.width, s.canvas.height), h = {}, U = null, F = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, ce.set(0, 0, s.canvas.width, s.canvas.height), V.set(0, 0, s.canvas.width, s.canvas.height), a.reset(), l.reset(), c.reset();
    }
    return {
        buffers: {
            color: a,
            depth: l,
            stencil: c
        },
        enable: le,
        disable: fe,
        bindFramebuffer: Be,
        useProgram: Y,
        setBlending: ge,
        setMaterial: xe,
        setFlipSided: Oe,
        setCullFace: G,
        setLineWidth: j,
        setPolygonOffset: K,
        setScissorTest: ue,
        activeTexture: se,
        bindTexture: Se,
        unbindTexture: Te,
        compressedTexImage2D: Pe,
        texImage2D: re,
        texImage3D: Z,
        texStorage2D: J,
        texStorage3D: $,
        texSubImage2D: Ye,
        texSubImage3D: C,
        compressedTexSubImage2D: T,
        scissor: Me,
        viewport: ve,
        reset: te
    };
}
function Tx(s, e, t, n, i, r, o) {
    let a = i.isWebGL2, l = i.maxTextures, c = i.maxCubemapSize, h = i.maxTextureSize, u = i.maxSamples, f = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : void 0, m = new WeakMap, x, v = !1;
    try {
        v = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
    } catch  {}
    function g(C, T) {
        return v ? new OffscreenCanvas(C, T) : qs("canvas");
    }
    function p(C, T, J, $) {
        let re = 1;
        if ((C.width > $ || C.height > $) && (re = $ / Math.max(C.width, C.height)), re < 1 || T === !0) if (typeof HTMLImageElement < "u" && C instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && C instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && C instanceof ImageBitmap) {
            let Z = T ? Jc : Math.floor, Me = Z(re * C.width), ve = Z(re * C.height);
            x === void 0 && (x = g(Me, ve));
            let te = J ? g(Me, ve) : x;
            return te.width = Me, te.height = ve, te.getContext("2d").drawImage(C, 0, 0, Me, ve), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + C.width + "x" + C.height + ") to (" + Me + "x" + ve + ")."), te;
        } else return "data" in C && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + C.width + "x" + C.height + ")."), C;
        return C;
    }
    function _(C) {
        return ia(C.width) && ia(C.height);
    }
    function y(C) {
        return a ? !1 : C.wrapS !== vt || C.wrapT !== vt || C.minFilter !== rt && C.minFilter !== tt;
    }
    function b(C, T) {
        return C.generateMipmaps && T && C.minFilter !== rt && C.minFilter !== tt;
    }
    function A(C) {
        s.generateMipmap(C);
    }
    function L(C, T, J, $) {
        if (a === !1) return T;
        if (C !== null) {
            if (s[C] !== void 0) return s[C];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + C + "'");
        }
        let re = T;
        return T === 6403 && (J === 5126 && (re = 33326), J === 5131 && (re = 33325), J === 5121 && (re = 33321)), T === 6407 && (J === 5126 && (re = 34837), J === 5131 && (re = 34843), J === 5121 && (re = 32849)), T === 6408 && (J === 5126 && (re = 34836), J === 5131 && (re = 34842), J === 5121 && (re = $ === Oi ? 35907 : 32856)), (re === 33325 || re === 33326 || re === 34842 || re === 34836) && e.get("EXT_color_buffer_float"), re;
    }
    function I(C, T, J) {
        return b(C, J) === !0 || C.isFramebufferTexture && C.minFilter !== rt && C.minFilter !== tt ? Math.log2(Math.max(T.width, T.height)) + 1 : C.mipmaps !== void 0 && C.mipmaps.length > 0 ? C.mipmaps.length : C.isCompressedTexture && Array.isArray(C.image) ? T.mipmaps.length : 1;
    }
    function k(C) {
        return C === rt || C === ta || C === na ? 9728 : 9729;
    }
    function B(C) {
        let T = C.target;
        T.removeEventListener("dispose", B), w(T), T.isVideoTexture && m.delete(T), o.memory.textures--;
    }
    function P(C) {
        let T = C.target;
        T.removeEventListener("dispose", P), E(T);
    }
    function w(C) {
        let T = n.get(C);
        T.__webglInit !== void 0 && (s.deleteTexture(T.__webglTexture), n.remove(C));
    }
    function E(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        if (!!C) {
            if ($.__webglTexture !== void 0 && (s.deleteTexture($.__webglTexture), o.memory.textures--), C.depthTexture && C.depthTexture.dispose(), C.isWebGLCubeRenderTarget) for(let re = 0; re < 6; re++)s.deleteFramebuffer(J.__webglFramebuffer[re]), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer[re]);
            else s.deleteFramebuffer(J.__webglFramebuffer), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer), J.__webglMultisampledFramebuffer && s.deleteFramebuffer(J.__webglMultisampledFramebuffer), J.__webglColorRenderbuffer && s.deleteRenderbuffer(J.__webglColorRenderbuffer), J.__webglDepthRenderbuffer && s.deleteRenderbuffer(J.__webglDepthRenderbuffer);
            if (C.isWebGLMultipleRenderTargets) for(let re1 = 0, Z = T.length; re1 < Z; re1++){
                let Me = n.get(T[re1]);
                Me.__webglTexture && (s.deleteTexture(Me.__webglTexture), o.memory.textures--), n.remove(T[re1]);
            }
            n.remove(T), n.remove(C);
        }
    }
    let D = 0;
    function U() {
        D = 0;
    }
    function F() {
        let C = D;
        return C >= l && console.warn("THREE.WebGLTextures: Trying to use " + C + " texture units while this GPU supports only " + l), D += 1, C;
    }
    function O(C, T) {
        let J = n.get(C);
        if (C.isVideoTexture && se(C), C.version > 0 && J.__version !== C.version) {
            let $ = C.image;
            if ($ === void 0) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else if ($.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            else {
                Be(J, C, T);
                return;
            }
        }
        t.activeTexture(33984 + T), t.bindTexture(3553, J.__webglTexture);
    }
    function ne(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(35866, J.__webglTexture);
    }
    function ce(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(32879, J.__webglTexture);
    }
    function V(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Y(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(34067, J.__webglTexture);
    }
    let W = {
        [Ns]: 10497,
        [vt]: 33071,
        [Bs]: 33648
    }, he = {
        [rt]: 9728,
        [ta]: 9984,
        [na]: 9986,
        [tt]: 9729,
        [Wc]: 9985,
        [Ui]: 9987
    };
    function le(C, T, J) {
        if (J ? (s.texParameteri(C, 10242, W[T.wrapS]), s.texParameteri(C, 10243, W[T.wrapT]), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, W[T.wrapR]), s.texParameteri(C, 10240, he[T.magFilter]), s.texParameteri(C, 10241, he[T.minFilter])) : (s.texParameteri(C, 10242, 33071), s.texParameteri(C, 10243, 33071), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, 33071), (T.wrapS !== vt || T.wrapT !== vt) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), s.texParameteri(C, 10240, k(T.magFilter)), s.texParameteri(C, 10241, k(T.minFilter)), T.minFilter !== rt && T.minFilter !== tt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), e.has("EXT_texture_filter_anisotropic") === !0) {
            let $ = e.get("EXT_texture_filter_anisotropic");
            if (T.type === nn && e.has("OES_texture_float_linear") === !1 || a === !1 && T.type === kn && e.has("OES_texture_half_float_linear") === !1) return;
            (T.anisotropy > 1 || n.get(T).__currentAnisotropy) && (s.texParameterf(C, $.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(T.anisotropy, i.getMaxAnisotropy())), n.get(T).__currentAnisotropy = T.anisotropy);
        }
    }
    function fe(C, T) {
        C.__webglInit === void 0 && (C.__webglInit = !0, T.addEventListener("dispose", B), C.__webglTexture = s.createTexture(), o.memory.textures++);
    }
    function Be(C, T, J) {
        let $ = 3553;
        T.isDataTexture2DArray && ($ = 35866), T.isDataTexture3D && ($ = 32879), fe(C, T), t.activeTexture(33984 + J), t.bindTexture($, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let re = y(T) && _(T.image) === !1, Z = p(T.image, re, !1, h), Me = _(Z) || a, ve = r.convert(T.format), te = r.convert(T.type), R = L(T.internalFormat, ve, te, T.encoding);
        le($, T, Me);
        let ee, Q = T.mipmaps, Ee = a && T.isVideoTexture !== !0, me = C.__version === void 0, Re = I(T, Z, Me);
        if (T.isDepthTexture) R = 6402, a ? T.type === nn ? R = 36012 : T.type === Ps ? R = 33190 : T.type === Ti ? R = 35056 : R = 33189 : T.type === nn && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), T.format === Vn && R === 6402 && T.type !== cr && T.type !== Ps && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), T.type = cr, te = r.convert(T.type)), T.format === Li && R === 6402 && (R = 34041, T.type !== Ti && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), T.type = Ti, te = r.convert(T.type))), Ee && me ? t.texStorage2D(3553, 1, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (T.isDataTexture) if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, 0, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, Z.width, Z.height, ve, te, Z.data)) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, Z.data);
        else if (T.isCompressedTexture) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe1 = 0, Le1 = Q.length; oe1 < Le1; oe1++)ee = Q[oe1], T.format !== ct && T.format !== Gn ? ve !== null ? Ee ? t.compressedTexSubImage2D(3553, oe1, 0, 0, ee.width, ee.height, ve, ee.data) : t.compressedTexImage2D(3553, oe1, R, ee.width, ee.height, 0, ee.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Ee ? t.texSubImage2D(3553, oe1, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe1, R, ee.width, ee.height, 0, ve, te, ee.data);
        } else if (T.isDataTexture2DArray) Ee ? (me && t.texStorage3D(35866, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(35866, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(35866, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isDataTexture3D) Ee ? (me && t.texStorage3D(32879, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(32879, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(32879, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isFramebufferTexture) Ee && me ? t.texStorage2D(3553, Re, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe2 = 0, Le2 = Q.length; oe2 < Le2; oe2++)ee = Q[oe2], Ee ? t.texSubImage2D(3553, oe2, 0, 0, ve, te, ee) : t.texImage2D(3553, oe2, R, ve, te, ee);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, ve, te, Z)) : t.texImage2D(3553, 0, R, ve, te, Z);
        b(T, Me) && A($), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Y(C, T, J) {
        if (T.image.length !== 6) return;
        fe(C, T), t.activeTexture(33984 + J), t.bindTexture(34067, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let $ = T && (T.isCompressedTexture || T.image[0].isCompressedTexture), re = T.image[0] && T.image[0].isDataTexture, Z = [];
        for(let oe = 0; oe < 6; oe++)!$ && !re ? Z[oe] = p(T.image[oe], !1, !0, c) : Z[oe] = re ? T.image[oe].image : T.image[oe];
        let Me = Z[0], ve = _(Me) || a, te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = a && T.isVideoTexture !== !0, Ee = C.__version === void 0, me = I(T, Me, ve);
        le(34067, T, ve);
        let Re;
        if ($) {
            Q && Ee && t.texStorage2D(34067, me, ee, Me.width, Me.height);
            for(let oe1 = 0; oe1 < 6; oe1++){
                Re = Z[oe1].mipmaps;
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    T.format !== ct && T.format !== Gn ? te !== null ? Q ? t.compressedTexSubImage2D(34069 + oe1, Le, 0, 0, Xe.width, Xe.height, te, Xe.data) : t.compressedTexImage2D(34069 + oe1, Le, ee, Xe.width, Xe.height, 0, Xe.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : Q ? t.texSubImage2D(34069 + oe1, Le, 0, 0, Xe.width, Xe.height, te, R, Xe.data) : t.texImage2D(34069 + oe1, Le, ee, Xe.width, Xe.height, 0, te, R, Xe.data);
                }
            }
        } else {
            Re = T.mipmaps, Q && Ee && (Re.length > 0 && me++, t.texStorage2D(34067, me, ee, Z[0].width, Z[0].height));
            for(let oe2 = 0; oe2 < 6; oe2++)if (re) {
                Q ? t.texSubImage2D(34069 + oe2, 0, 0, 0, Z[oe2].width, Z[oe2].height, te, R, Z[oe2].data) : t.texImage2D(34069 + oe2, 0, ee, Z[oe2].width, Z[oe2].height, 0, te, R, Z[oe2].data);
                for(let Le1 = 0; Le1 < Re.length; Le1++){
                    let We = Re[Le1].image[oe2].image;
                    Q ? t.texSubImage2D(34069 + oe2, Le1 + 1, 0, 0, We.width, We.height, te, R, We.data) : t.texImage2D(34069 + oe2, Le1 + 1, ee, We.width, We.height, 0, te, R, We.data);
                }
            } else {
                Q ? t.texSubImage2D(34069 + oe2, 0, 0, 0, te, R, Z[oe2]) : t.texImage2D(34069 + oe2, 0, ee, te, R, Z[oe2]);
                for(let Le2 = 0; Le2 < Re.length; Le2++){
                    let Xe1 = Re[Le2];
                    Q ? t.texSubImage2D(34069 + oe2, Le2 + 1, 0, 0, te, R, Xe1.image[oe2]) : t.texImage2D(34069 + oe2, Le2 + 1, ee, te, R, Xe1.image[oe2]);
                }
            }
        }
        b(T, ve) && A(34067), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Ce(C, T, J, $, re) {
        let Z = r.convert(J.format), Me = r.convert(J.type), ve = L(J.internalFormat, Z, Me, J.encoding);
        n.get(T).__hasExternalTextures || (re === 32879 || re === 35866 ? t.texImage3D(re, 0, ve, T.width, T.height, T.depth, 0, Z, Me, null) : t.texImage2D(re, 0, ve, T.width, T.height, 0, Z, Me, null)), t.bindFramebuffer(36160, C), T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, $, re, n.get(J).__webglTexture, 0, ue(T)) : s.framebufferTexture2D(36160, $, re, n.get(J).__webglTexture, 0), t.bindFramebuffer(36160, null);
    }
    function ye(C, T, J) {
        if (s.bindRenderbuffer(36161, C), T.depthBuffer && !T.stencilBuffer) {
            let $ = 33189;
            if (J || T.useRenderToTexture) {
                let re = T.depthTexture;
                re && re.isDepthTexture && (re.type === nn ? $ = 36012 : re.type === Ps && ($ = 33190));
                let Z = ue(T);
                T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, Z, $, T.width, T.height) : s.renderbufferStorageMultisample(36161, Z, $, T.width, T.height);
            } else s.renderbufferStorage(36161, $, T.width, T.height);
            s.framebufferRenderbuffer(36160, 36096, 36161, C);
        } else if (T.depthBuffer && T.stencilBuffer) {
            let $1 = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, $1, 35056, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, $1, 35056, T.width, T.height) : s.renderbufferStorage(36161, 34041, T.width, T.height), s.framebufferRenderbuffer(36160, 33306, 36161, C);
        } else {
            let $2 = T.isWebGLMultipleRenderTargets === !0 ? T.texture[0] : T.texture, re1 = r.convert($2.format), Z1 = r.convert($2.type), Me = L($2.internalFormat, re1, Z1, $2.encoding), ve = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, ve, Me, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, ve, Me, T.width, T.height) : s.renderbufferStorage(36161, Me, T.width, T.height);
        }
        s.bindRenderbuffer(36161, null);
    }
    function ge(C, T) {
        if (T && T.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
        if (t.bindFramebuffer(36160, C), !(T.depthTexture && T.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        (!n.get(T.depthTexture).__webglTexture || T.depthTexture.image.width !== T.width || T.depthTexture.image.height !== T.height) && (T.depthTexture.image.width = T.width, T.depthTexture.image.height = T.height, T.depthTexture.needsUpdate = !0), O(T.depthTexture, 0);
        let $ = n.get(T.depthTexture).__webglTexture, re = ue(T);
        if (T.depthTexture.format === Vn) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, $, 0, re) : s.framebufferTexture2D(36160, 36096, 3553, $, 0);
        else if (T.depthTexture.format === Li) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, $, 0, re) : s.framebufferTexture2D(36160, 33306, 3553, $, 0);
        else throw new Error("Unknown depthTexture format");
    }
    function xe(C) {
        let T = n.get(C), J = C.isWebGLCubeRenderTarget === !0;
        if (C.depthTexture && !T.__autoAllocateDepthBuffer) {
            if (J) throw new Error("target.depthTexture not supported in Cube render targets");
            ge(T.__webglFramebuffer, C);
        } else if (J) {
            T.__webglDepthbuffer = [];
            for(let $ = 0; $ < 6; $++)t.bindFramebuffer(36160, T.__webglFramebuffer[$]), T.__webglDepthbuffer[$] = s.createRenderbuffer(), ye(T.__webglDepthbuffer[$], C, !1);
        } else t.bindFramebuffer(36160, T.__webglFramebuffer), T.__webglDepthbuffer = s.createRenderbuffer(), ye(T.__webglDepthbuffer, C, !1);
        t.bindFramebuffer(36160, null);
    }
    function Oe(C, T, J) {
        let $ = n.get(C);
        T !== void 0 && Ce($.__webglFramebuffer, C, C.texture, 36064, 3553), J !== void 0 && xe(C);
    }
    function G(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        C.addEventListener("dispose", P), C.isWebGLMultipleRenderTargets !== !0 && ($.__webglTexture === void 0 && ($.__webglTexture = s.createTexture()), $.__version = T.version, o.memory.textures++);
        let re = C.isWebGLCubeRenderTarget === !0, Z = C.isWebGLMultipleRenderTargets === !0, Me = T.isDataTexture3D || T.isDataTexture2DArray, ve = _(C) || a;
        if (a && T.format === Gn && (T.type === nn || T.type === kn) && (T.format = ct, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), re) {
            J.__webglFramebuffer = [];
            for(let te = 0; te < 6; te++)J.__webglFramebuffer[te] = s.createFramebuffer();
        } else if (J.__webglFramebuffer = s.createFramebuffer(), Z) if (i.drawBuffers) {
            let te1 = C.texture;
            for(let R = 0, ee = te1.length; R < ee; R++){
                let Q = n.get(te1[R]);
                Q.__webglTexture === void 0 && (Q.__webglTexture = s.createTexture(), o.memory.textures++);
            }
        } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
        else if (C.useRenderbuffer) if (a) {
            J.__webglMultisampledFramebuffer = s.createFramebuffer(), J.__webglColorRenderbuffer = s.createRenderbuffer(), s.bindRenderbuffer(36161, J.__webglColorRenderbuffer);
            let te2 = r.convert(T.format), R1 = r.convert(T.type), ee1 = L(T.internalFormat, te2, R1, T.encoding), Q1 = ue(C);
            s.renderbufferStorageMultisample(36161, Q1, ee1, C.width, C.height), t.bindFramebuffer(36160, J.__webglMultisampledFramebuffer), s.framebufferRenderbuffer(36160, 36064, 36161, J.__webglColorRenderbuffer), s.bindRenderbuffer(36161, null), C.depthBuffer && (J.__webglDepthRenderbuffer = s.createRenderbuffer(), ye(J.__webglDepthRenderbuffer, C, !0)), t.bindFramebuffer(36160, null);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        if (re) {
            t.bindTexture(34067, $.__webglTexture), le(34067, T, ve);
            for(let te3 = 0; te3 < 6; te3++)Ce(J.__webglFramebuffer[te3], C, T, 36064, 34069 + te3);
            b(T, ve) && A(34067), t.unbindTexture();
        } else if (Z) {
            let te4 = C.texture;
            for(let R2 = 0, ee2 = te4.length; R2 < ee2; R2++){
                let Q2 = te4[R2], Ee = n.get(Q2);
                t.bindTexture(3553, Ee.__webglTexture), le(3553, Q2, ve), Ce(J.__webglFramebuffer, C, Q2, 36064 + R2, 3553), b(Q2, ve) && A(3553);
            }
            t.unbindTexture();
        } else {
            let te5 = 3553;
            Me && (a ? te5 = T.isDataTexture3D ? 32879 : 35866 : console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")), t.bindTexture(te5, $.__webglTexture), le(te5, T, ve), Ce(J.__webglFramebuffer, C, T, 36064, te5), b(T, ve) && A(te5), t.unbindTexture();
        }
        C.depthBuffer && xe(C);
    }
    function j(C) {
        let T = _(C) || a, J = C.isWebGLMultipleRenderTargets === !0 ? C.texture : [
            C.texture
        ];
        for(let $ = 0, re = J.length; $ < re; $++){
            let Z = J[$];
            if (b(Z, T)) {
                let Me = C.isWebGLCubeRenderTarget ? 34067 : 3553, ve = n.get(Z).__webglTexture;
                t.bindTexture(Me, ve), A(Me), t.unbindTexture();
            }
        }
    }
    function K(C) {
        if (C.useRenderbuffer) if (a) {
            let T = C.width, J = C.height, $ = 16384, re = [
                36064
            ], Z = C.stencilBuffer ? 33306 : 36096;
            C.depthBuffer && re.push(Z), C.ignoreDepthForMultisampleCopy || (C.depthBuffer && ($ |= 256), C.stencilBuffer && ($ |= 1024));
            let Me = n.get(C);
            t.bindFramebuffer(36008, Me.__webglMultisampledFramebuffer), t.bindFramebuffer(36009, Me.__webglFramebuffer), C.ignoreDepthForMultisampleCopy && (s.invalidateFramebuffer(36008, [
                Z
            ]), s.invalidateFramebuffer(36009, [
                Z
            ])), s.blitFramebuffer(0, 0, T, J, 0, 0, T, J, $, 9728), s.invalidateFramebuffer(36008, re), t.bindFramebuffer(36008, null), t.bindFramebuffer(36009, Me.__webglMultisampledFramebuffer);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }
    function ue(C) {
        return a && (C.useRenderbuffer || C.useRenderToTexture) ? Math.min(u, C.samples) : 0;
    }
    function se(C) {
        let T = o.render.frame;
        m.get(C) !== T && (m.set(C, T), C.update());
    }
    let Se = !1, Te = !1;
    function Pe(C, T) {
        C && C.isWebGLRenderTarget && (Se === !1 && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), Se = !0), C = C.texture), O(C, T);
    }
    function Ye(C, T) {
        C && C.isWebGLCubeRenderTarget && (Te === !1 && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Te = !0), C = C.texture), V(C, T);
    }
    this.allocateTextureUnit = F, this.resetTextureUnits = U, this.setTexture2D = O, this.setTexture2DArray = ne, this.setTexture3D = ce, this.setTextureCube = V, this.rebindTextures = Oe, this.setupRenderTarget = G, this.updateRenderTargetMipmap = j, this.updateMultisampleRenderTarget = K, this.setupDepthRenderbuffer = xe, this.setupFrameBufferTexture = Ce, this.safeSetTexture2D = Pe, this.safeSetTextureCube = Ye;
}
function Ex(s, e, t) {
    let n = t.isWebGL2;
    function i(r) {
        let o;
        if (r === rn) return 5121;
        if (r === Vu) return 32819;
        if (r === Wu) return 32820;
        if (r === qu) return 33635;
        if (r === Hu) return 5120;
        if (r === ku) return 5122;
        if (r === cr) return 5123;
        if (r === Gu) return 5124;
        if (r === Ps) return 5125;
        if (r === nn) return 5126;
        if (r === kn) return n ? 5131 : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
        if (r === Xu) return 6406;
        if (r === Gn) return 6407;
        if (r === ct) return 6408;
        if (r === Ju) return 6409;
        if (r === Yu) return 6410;
        if (r === Vn) return 6402;
        if (r === Li) return 34041;
        if (r === Zu) return 6403;
        if (r === $u) return 36244;
        if (r === ju) return 33319;
        if (r === Qu) return 33320;
        if (r === Ku) return 36248;
        if (r === ed) return 36249;
        if (r === al || r === ll || r === cl || r === hl) if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
            if (r === al) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (r === ll) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (r === cl) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (r === hl) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else return null;
        if (r === ul || r === dl || r === fl || r === pl) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
            if (r === ul) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (r === dl) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (r === fl) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (r === pl) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        } else return null;
        if (r === td) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
        if ((r === ml || r === gl) && (o = e.get("WEBGL_compressed_texture_etc"), o !== null)) {
            if (r === ml) return o.COMPRESSED_RGB8_ETC2;
            if (r === gl) return o.COMPRESSED_RGBA8_ETC2_EAC;
        }
        if (r === nd || r === id || r === rd || r === sd || r === od || r === ad || r === ld || r === cd || r === hd || r === ud || r === dd || r === fd || r === pd || r === md || r === xd || r === yd || r === vd || r === _d || r === Md || r === bd || r === wd || r === Sd || r === Td || r === Ed || r === Ad || r === Cd || r === Ld || r === Rd) return o = e.get("WEBGL_compressed_texture_astc"), o !== null ? r : null;
        if (r === gd) return o = e.get("EXT_texture_compression_bptc"), o !== null ? r : null;
        if (r === Ti) return n ? 34042 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null);
    }
    return {
        convert: i
    };
}
var ga = class extends ut {
    constructor(e = []){
        super();
        this.cameras = e;
    }
};
ga.prototype.isArrayCamera = !0;
var Hn = class extends Ne {
    constructor(){
        super();
        this.type = "Group";
    }
};
Hn.prototype.isGroup = !0;
var Ax = {
    type: "move"
}, Is = class {
    constructor(){
        this._targetRay = null, this._grip = null, this._hand = null;
    }
    getHandSpace() {
        return this._hand === null && (this._hand = new Hn, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
            pinching: !1
        }), this._hand;
    }
    getTargetRaySpace() {
        return this._targetRay === null && (this._targetRay = new Hn, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new M, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new M), this._targetRay;
    }
    getGripSpace() {
        return this._grip === null && (this._grip = new Hn, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new M, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new M), this._grip;
    }
    dispatchEvent(e) {
        return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
    }
    disconnect(e) {
        return this.dispatchEvent({
            type: "disconnected",
            data: e
        }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
    }
    update(e, t, n) {
        let i = null, r = null, o = null, a = this._targetRay, l = this._grip, c = this._hand;
        if (e && t.session.visibilityState !== "visible-blurred") if (a !== null && (i = t.getPose(e.targetRaySpace, n), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Ax))), c && e.hand) {
            o = !0;
            for (let x of e.hand.values()){
                let v = t.getJointPose(x, n);
                if (c.joints[x.jointName] === void 0) {
                    let p = new Hn;
                    p.matrixAutoUpdate = !1, p.visible = !1, c.joints[x.jointName] = p, c.add(p);
                }
                let g = c.joints[x.jointName];
                v !== null && (g.matrix.fromArray(v.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.jointRadius = v.radius), g.visible = v !== null;
            }
            let h = c.joints["index-finger-tip"], u = c.joints["thumb-tip"], d = h.position.distanceTo(u.position), f = .02, m = .005;
            c.inputState.pinching && d > f + m ? (c.inputState.pinching = !1, this.dispatchEvent({
                type: "pinchend",
                handedness: e.handedness,
                target: this
            })) : !c.inputState.pinching && d <= f - m && (c.inputState.pinching = !0, this.dispatchEvent({
                type: "pinchstart",
                handedness: e.handedness,
                target: this
            }));
        } else l !== null && e.gripSpace && (r = t.getPose(e.gripSpace, n), r !== null && (l.matrix.fromArray(r.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), r.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(r.linearVelocity)) : l.hasLinearVelocity = !1, r.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(r.angularVelocity)) : l.hasAngularVelocity = !1));
        return a !== null && (a.visible = i !== null), l !== null && (l.visible = r !== null), c !== null && (c.visible = o !== null), this;
    }
}, ks = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        if (h = h !== void 0 ? h : Vn, h !== Vn && h !== Li) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        n === void 0 && h === Vn && (n = cr), n === void 0 && h === Li && (n = Ti);
        super(null, i, r, o, a, l, h, n, c);
        this.image = {
            width: e,
            height: t
        }, this.magFilter = a !== void 0 ? a : rt, this.minFilter = l !== void 0 ? l : rt, this.flipY = !1, this.generateMipmaps = !1;
    }
};
ks.prototype.isDepthTexture = !0;
var vh = class extends En {
    constructor(e, t){
        super();
        let n = this, i = null, r = 1, o = null, a = "local-floor", l = e.extensions.has("WEBGL_multisampled_render_to_texture"), c = null, h = null, u = null, d = null, f = !1, m = null, x = t.getContextAttributes(), v = null, g = null, p = [], _ = new Map, y = new ut;
        y.layers.enable(1), y.viewport = new Ve;
        let b = new ut;
        b.layers.enable(2), b.viewport = new Ve;
        let A = [
            y,
            b
        ], L = new ga;
        L.layers.enable(1), L.layers.enable(2);
        let I = null, k = null;
        this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getTargetRaySpace();
        }, this.getControllerGrip = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getGripSpace();
        }, this.getHand = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getHandSpace();
        };
        function B(V) {
            let W = _.get(V.inputSource);
            W && W.dispatchEvent({
                type: V.type,
                data: V.inputSource
            });
        }
        function P() {
            _.forEach(function(V, W) {
                V.disconnect(W);
            }), _.clear(), I = null, k = null, e.setRenderTarget(v), d = null, u = null, h = null, i = null, g = null, ce.stop(), n.isPresenting = !1, n.dispatchEvent({
                type: "sessionend"
            });
        }
        this.setFramebufferScaleFactor = function(V) {
            r = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
        }, this.setReferenceSpaceType = function(V) {
            a = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
        }, this.getReferenceSpace = function() {
            return o;
        }, this.getBaseLayer = function() {
            return u !== null ? u : d;
        }, this.getBinding = function() {
            return h;
        }, this.getFrame = function() {
            return m;
        }, this.getSession = function() {
            return i;
        }, this.setSession = async function(V) {
            if (i = V, i !== null) {
                if (v = e.getRenderTarget(), i.addEventListener("select", B), i.addEventListener("selectstart", B), i.addEventListener("selectend", B), i.addEventListener("squeeze", B), i.addEventListener("squeezestart", B), i.addEventListener("squeezeend", B), i.addEventListener("end", P), i.addEventListener("inputsourceschange", w), x.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
                    let W = {
                        antialias: i.renderState.layers === void 0 ? x.antialias : !0,
                        alpha: x.alpha,
                        depth: x.depth,
                        stencil: x.stencil,
                        framebufferScaleFactor: r
                    };
                    d = new XRWebGLLayer(i, t, W), i.updateRenderState({
                        baseLayer: d
                    }), g = new At(d.framebufferWidth, d.framebufferHeight, {
                        format: ct,
                        type: rn,
                        encoding: e.outputEncoding
                    });
                } else {
                    f = x.antialias;
                    let W1 = null, he = null, le = null;
                    x.depth && (le = x.stencil ? 35056 : 33190, W1 = x.stencil ? Li : Vn, he = x.stencil ? Ti : cr);
                    let fe = {
                        colorFormat: x.alpha || f ? 32856 : 32849,
                        depthFormat: le,
                        scaleFactor: r
                    };
                    h = new XRWebGLBinding(i, t), u = h.createProjectionLayer(fe), i.updateRenderState({
                        layers: [
                            u
                        ]
                    }), f ? g = new Xs(u.textureWidth, u.textureHeight, {
                        format: ct,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W1),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        useRenderToTexture: l,
                        encoding: e.outputEncoding
                    }) : g = new At(u.textureWidth, u.textureHeight, {
                        format: x.alpha ? ct : Gn,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W1),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        encoding: e.outputEncoding
                    });
                }
                this.setFoveation(1), o = await i.requestReferenceSpace(a), ce.setContext(i), ce.start(), n.isPresenting = !0, n.dispatchEvent({
                    type: "sessionstart"
                });
            }
        };
        function w(V) {
            let W = i.inputSources;
            for(let he = 0; he < p.length; he++)_.set(W[he], p[he]);
            for(let he1 = 0; he1 < V.removed.length; he1++){
                let le = V.removed[he1], fe = _.get(le);
                fe && (fe.dispatchEvent({
                    type: "disconnected",
                    data: le
                }), _.delete(le));
            }
            for(let he2 = 0; he2 < V.added.length; he2++){
                let le1 = V.added[he2], fe1 = _.get(le1);
                fe1 && fe1.dispatchEvent({
                    type: "connected",
                    data: le1
                });
            }
        }
        let E = new M, D = new M;
        function U(V, W, he) {
            E.setFromMatrixPosition(W.matrixWorld), D.setFromMatrixPosition(he.matrixWorld);
            let le = E.distanceTo(D), fe = W.projectionMatrix.elements, Be = he.projectionMatrix.elements, Y = fe[14] / (fe[10] - 1), Ce = fe[14] / (fe[10] + 1), ye = (fe[9] + 1) / fe[5], ge = (fe[9] - 1) / fe[5], xe = (fe[8] - 1) / fe[0], Oe = (Be[8] + 1) / Be[0], G = Y * xe, j = Y * Oe, K = le / (-xe + Oe), ue = K * -xe;
            W.matrixWorld.decompose(V.position, V.quaternion, V.scale), V.translateX(ue), V.translateZ(K), V.matrixWorld.compose(V.position, V.quaternion, V.scale), V.matrixWorldInverse.copy(V.matrixWorld).invert();
            let se = Y + K, Se = Ce + K, Te = G - ue, Pe = j + (le - ue), Ye = ye * Ce / Se * se, C = ge * Ce / Se * se;
            V.projectionMatrix.makePerspective(Te, Pe, Ye, C, se, Se);
        }
        function F(V, W) {
            W === null ? V.matrixWorld.copy(V.matrix) : V.matrixWorld.multiplyMatrices(W.matrixWorld, V.matrix), V.matrixWorldInverse.copy(V.matrixWorld).invert();
        }
        this.updateCamera = function(V) {
            if (i === null) return;
            L.near = b.near = y.near = V.near, L.far = b.far = y.far = V.far, (I !== L.near || k !== L.far) && (i.updateRenderState({
                depthNear: L.near,
                depthFar: L.far
            }), I = L.near, k = L.far);
            let W = V.parent, he = L.cameras;
            F(L, W);
            for(let fe = 0; fe < he.length; fe++)F(he[fe], W);
            L.matrixWorld.decompose(L.position, L.quaternion, L.scale), V.position.copy(L.position), V.quaternion.copy(L.quaternion), V.scale.copy(L.scale), V.matrix.copy(L.matrix), V.matrixWorld.copy(L.matrixWorld);
            let le = V.children;
            for(let fe1 = 0, Be = le.length; fe1 < Be; fe1++)le[fe1].updateMatrixWorld(!0);
            he.length === 2 ? U(L, y, b) : L.projectionMatrix.copy(y.projectionMatrix);
        }, this.getCamera = function() {
            return L;
        }, this.getFoveation = function() {
            if (u !== null) return u.fixedFoveation;
            if (d !== null) return d.fixedFoveation;
        }, this.setFoveation = function(V) {
            u !== null && (u.fixedFoveation = V), d !== null && d.fixedFoveation !== void 0 && (d.fixedFoveation = V);
        };
        let O = null;
        function ne(V, W) {
            if (c = W.getViewerPose(o), m = W, c !== null) {
                let le = c.views;
                d !== null && (e.setRenderTargetFramebuffer(g, d.framebuffer), e.setRenderTarget(g));
                let fe = !1;
                le.length !== L.cameras.length && (L.cameras.length = 0, fe = !0);
                for(let Be = 0; Be < le.length; Be++){
                    let Y = le[Be], Ce = null;
                    if (d !== null) Ce = d.getViewport(Y);
                    else {
                        let ge = h.getViewSubImage(u, Y);
                        Ce = ge.viewport, Be === 0 && (e.setRenderTargetTextures(g, ge.colorTexture, u.ignoreDepthValues ? void 0 : ge.depthStencilTexture), e.setRenderTarget(g));
                    }
                    let ye = A[Be];
                    ye.matrix.fromArray(Y.transform.matrix), ye.projectionMatrix.fromArray(Y.projectionMatrix), ye.viewport.set(Ce.x, Ce.y, Ce.width, Ce.height), Be === 0 && L.matrix.copy(ye.matrix), fe === !0 && L.cameras.push(ye);
                }
            }
            let he = i.inputSources;
            for(let le1 = 0; le1 < p.length; le1++){
                let fe1 = p[le1], Be1 = he[le1];
                fe1.update(Be1, W, o);
            }
            O && O(V, W), m = null;
        }
        let ce = new rh;
        ce.setAnimationLoop(ne), this.setAnimationLoop = function(V) {
            O = V;
        }, this.dispose = function() {};
    }
};
function Cx(s) {
    function e(g, p) {
        g.fogColor.value.copy(p.color), p.isFog ? (g.fogNear.value = p.near, g.fogFar.value = p.far) : p.isFogExp2 && (g.fogDensity.value = p.density);
    }
    function t(g, p, _, y, b) {
        p.isMeshBasicMaterial ? n(g, p) : p.isMeshLambertMaterial ? (n(g, p), l(g, p)) : p.isMeshToonMaterial ? (n(g, p), h(g, p)) : p.isMeshPhongMaterial ? (n(g, p), c(g, p)) : p.isMeshStandardMaterial ? (n(g, p), p.isMeshPhysicalMaterial ? d(g, p, b) : u(g, p)) : p.isMeshMatcapMaterial ? (n(g, p), f(g, p)) : p.isMeshDepthMaterial ? (n(g, p), m(g, p)) : p.isMeshDistanceMaterial ? (n(g, p), x(g, p)) : p.isMeshNormalMaterial ? (n(g, p), v(g, p)) : p.isLineBasicMaterial ? (i(g, p), p.isLineDashedMaterial && r(g, p)) : p.isPointsMaterial ? o(g, p, _, y) : p.isSpriteMaterial ? a(g, p) : p.isShadowMaterial ? (g.color.value.copy(p.color), g.opacity.value = p.opacity) : p.isShaderMaterial && (p.uniformsNeedUpdate = !1);
    }
    function n(g, p) {
        g.opacity.value = p.opacity, p.color && g.diffuse.value.copy(p.color), p.emissive && g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity), p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.specularMap && (g.specularMap.value = p.specularMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _ = s.get(p).envMap;
        _ && (g.envMap.value = _, g.flipEnvMap.value = _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1, g.reflectivity.value = p.reflectivity, g.ior.value = p.ior, g.refractionRatio.value = p.refractionRatio), p.lightMap && (g.lightMap.value = p.lightMap, g.lightMapIntensity.value = p.lightMapIntensity), p.aoMap && (g.aoMap.value = p.aoMap, g.aoMapIntensity.value = p.aoMapIntensity);
        let y;
        p.map ? y = p.map : p.specularMap ? y = p.specularMap : p.displacementMap ? y = p.displacementMap : p.normalMap ? y = p.normalMap : p.bumpMap ? y = p.bumpMap : p.roughnessMap ? y = p.roughnessMap : p.metalnessMap ? y = p.metalnessMap : p.alphaMap ? y = p.alphaMap : p.emissiveMap ? y = p.emissiveMap : p.clearcoatMap ? y = p.clearcoatMap : p.clearcoatNormalMap ? y = p.clearcoatNormalMap : p.clearcoatRoughnessMap ? y = p.clearcoatRoughnessMap : p.specularIntensityMap ? y = p.specularIntensityMap : p.specularColorMap ? y = p.specularColorMap : p.transmissionMap ? y = p.transmissionMap : p.thicknessMap ? y = p.thicknessMap : p.sheenColorMap ? y = p.sheenColorMap : p.sheenRoughnessMap && (y = p.sheenRoughnessMap), y !== void 0 && (y.isWebGLRenderTarget && (y = y.texture), y.matrixAutoUpdate === !0 && y.updateMatrix(), g.uvTransform.value.copy(y.matrix));
        let b;
        p.aoMap ? b = p.aoMap : p.lightMap && (b = p.lightMap), b !== void 0 && (b.isWebGLRenderTarget && (b = b.texture), b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uv2Transform.value.copy(b.matrix));
    }
    function i(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity;
    }
    function r(g, p) {
        g.dashSize.value = p.dashSize, g.totalSize.value = p.dashSize + p.gapSize, g.scale.value = p.scale;
    }
    function o(g, p, _, y) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.size.value = p.size * _, g.scale.value = y * .5, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let b;
        p.map ? b = p.map : p.alphaMap && (b = p.alphaMap), b !== void 0 && (b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uvTransform.value.copy(b.matrix));
    }
    function a(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.rotation.value = p.rotation, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _;
        p.map ? _ = p.map : p.alphaMap && (_ = p.alphaMap), _ !== void 0 && (_.matrixAutoUpdate === !0 && _.updateMatrix(), g.uvTransform.value.copy(_.matrix));
    }
    function l(g, p) {
        p.emissiveMap && (g.emissiveMap.value = p.emissiveMap);
    }
    function c(g, p) {
        g.specular.value.copy(p.specular), g.shininess.value = Math.max(p.shininess, 1e-4), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function h(g, p) {
        p.gradientMap && (g.gradientMap.value = p.gradientMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function u(g, p) {
        g.roughness.value = p.roughness, g.metalness.value = p.metalness, p.roughnessMap && (g.roughnessMap.value = p.roughnessMap), p.metalnessMap && (g.metalnessMap.value = p.metalnessMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), s.get(p).envMap && (g.envMapIntensity.value = p.envMapIntensity);
    }
    function d(g, p, _) {
        u(g, p), g.ior.value = p.ior, p.sheen > 0 && (g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen), g.sheenRoughness.value = p.sheenRoughness, p.sheenColorMap && (g.sheenColorMap.value = p.sheenColorMap), p.sheenRoughnessMap && (g.sheenRoughnessMap.value = p.sheenRoughnessMap)), p.clearcoat > 0 && (g.clearcoat.value = p.clearcoat, g.clearcoatRoughness.value = p.clearcoatRoughness, p.clearcoatMap && (g.clearcoatMap.value = p.clearcoatMap), p.clearcoatRoughnessMap && (g.clearcoatRoughnessMap.value = p.clearcoatRoughnessMap), p.clearcoatNormalMap && (g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale), g.clearcoatNormalMap.value = p.clearcoatNormalMap, p.side === it && g.clearcoatNormalScale.value.negate())), p.transmission > 0 && (g.transmission.value = p.transmission, g.transmissionSamplerMap.value = _.texture, g.transmissionSamplerSize.value.set(_.width, _.height), p.transmissionMap && (g.transmissionMap.value = p.transmissionMap), g.thickness.value = p.thickness, p.thicknessMap && (g.thicknessMap.value = p.thicknessMap), g.attenuationDistance.value = p.attenuationDistance, g.attenuationColor.value.copy(p.attenuationColor)), g.specularIntensity.value = p.specularIntensity, g.specularColor.value.copy(p.specularColor), p.specularIntensityMap && (g.specularIntensityMap.value = p.specularIntensityMap), p.specularColorMap && (g.specularColorMap.value = p.specularColorMap);
    }
    function f(g, p) {
        p.matcap && (g.matcap.value = p.matcap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function m(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function x(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), g.referencePosition.value.copy(p.referencePosition), g.nearDistance.value = p.nearDistance, g.farDistance.value = p.farDistance;
    }
    function v(g, p) {
        p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    return {
        refreshFogUniforms: e,
        refreshMaterialUniforms: t
    };
}
function Lx() {
    let s = qs("canvas");
    return s.style.display = "block", s;
}
function qe(s = {}) {
    let e = s.canvas !== void 0 ? s.canvas : Lx(), t = s.context !== void 0 ? s.context : null, n = s.alpha !== void 0 ? s.alpha : !1, i = s.depth !== void 0 ? s.depth : !0, r = s.stencil !== void 0 ? s.stencil : !0, o = s.antialias !== void 0 ? s.antialias : !1, a = s.premultipliedAlpha !== void 0 ? s.premultipliedAlpha : !0, l = s.preserveDrawingBuffer !== void 0 ? s.preserveDrawingBuffer : !1, c = s.powerPreference !== void 0 ? s.powerPreference : "default", h = s.failIfMajorPerformanceCaveat !== void 0 ? s.failIfMajorPerformanceCaveat : !1, u = null, d = null, f = [], m = [];
    this.domElement = e, this.debug = {
        checkShaderErrors: !0
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.outputEncoding = Nt, this.physicallyCorrectLights = !1, this.toneMapping = _n, this.toneMappingExposure = 1;
    let x = this, v = !1, g = 0, p = 0, _ = null, y = -1, b = null, A = new Ve, L = new Ve, I = null, k = e.width, B = e.height, P = 1, w = null, E = null, D = new Ve(0, 0, k, B), U = new Ve(0, 0, k, B), F = !1, O = [], ne = new Dr, ce = !1, V = !1, W = null, he = new pe, le = new M, fe = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0
    };
    function Be() {
        return _ === null ? P : 1;
    }
    let Y = t;
    function Ce(S, N) {
        for(let H = 0; H < S.length; H++){
            let z = S[H], q = e.getContext(z, N);
            if (q !== null) return q;
        }
        return null;
    }
    try {
        let S = {
            alpha: n,
            depth: i,
            stencil: r,
            antialias: o,
            premultipliedAlpha: a,
            preserveDrawingBuffer: l,
            powerPreference: c,
            failIfMajorPerformanceCaveat: h
        };
        if ("setAttribute" in e && e.setAttribute("data-engine", `three.js r${ca}`), e.addEventListener("webglcontextlost", Ee, !1), e.addEventListener("webglcontextrestored", me, !1), Y === null) {
            let N = [
                "webgl2",
                "webgl",
                "experimental-webgl"
            ];
            if (x.isWebGL1Renderer === !0 && N.shift(), Y = Ce(N, S), Y === null) throw Ce(N) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
        }
        Y.getShaderPrecisionFormat === void 0 && (Y.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            };
        });
    } catch (S1) {
        throw console.error("THREE.WebGLRenderer: " + S1.message), S1;
    }
    let ye, ge, xe, Oe, G, j, K, ue, se, Se, Te, Pe, Ye, C, T, J, $, re, Z, Me, ve, te, R;
    function ee() {
        ye = new Qm(Y), ge = new Xm(Y, ye, s), ye.init(ge), te = new Ex(Y, ye, ge), xe = new Sx(Y, ye, ge), O[0] = 1029, Oe = new tg(Y), G = new fx, j = new Tx(Y, ye, xe, G, ge, te, Oe), K = new Ym(x), ue = new jm(x), se = new gf(Y, ge), R = new Wm(Y, ye, se, ge), Se = new Km(Y, se, Oe, R), Te = new sg(Y, Se, se, Oe), Z = new rg(Y, ge, j), J = new Jm(G), Pe = new dx(x, K, ue, ye, ge, R, J), Ye = new Cx(G), C = new mx, T = new Mx(ye, ge), re = new Vm(x, K, xe, Te, a), $ = new yh(x, Te, ge), Me = new qm(Y, ye, Oe, ge), ve = new eg(Y, ye, Oe, ge), Oe.programs = Pe.programs, x.capabilities = ge, x.extensions = ye, x.properties = G, x.renderLists = C, x.shadowMap = $, x.state = xe, x.info = Oe;
    }
    ee();
    let Q = new vh(x, Y);
    this.xr = Q, this.getContext = function() {
        return Y;
    }, this.getContextAttributes = function() {
        return Y.getContextAttributes();
    }, this.forceContextLoss = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.loseContext();
    }, this.forceContextRestore = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.restoreContext();
    }, this.getPixelRatio = function() {
        return P;
    }, this.setPixelRatio = function(S) {
        S !== void 0 && (P = S, this.setSize(k, B, !1));
    }, this.getSize = function(S) {
        return S.set(k, B);
    }, this.setSize = function(S, N, H) {
        if (Q.isPresenting) {
            console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            return;
        }
        k = S, B = N, e.width = Math.floor(S * P), e.height = Math.floor(N * P), H !== !1 && (e.style.width = S + "px", e.style.height = N + "px"), this.setViewport(0, 0, S, N);
    }, this.getDrawingBufferSize = function(S) {
        return S.set(k * P, B * P).floor();
    }, this.setDrawingBufferSize = function(S, N, H) {
        k = S, B = N, P = H, e.width = Math.floor(S * H), e.height = Math.floor(N * H), this.setViewport(0, 0, S, N);
    }, this.getCurrentViewport = function(S) {
        return S.copy(A);
    }, this.getViewport = function(S) {
        return S.copy(D);
    }, this.setViewport = function(S, N, H, z) {
        S.isVector4 ? D.set(S.x, S.y, S.z, S.w) : D.set(S, N, H, z), xe.viewport(A.copy(D).multiplyScalar(P).floor());
    }, this.getScissor = function(S) {
        return S.copy(U);
    }, this.setScissor = function(S, N, H, z) {
        S.isVector4 ? U.set(S.x, S.y, S.z, S.w) : U.set(S, N, H, z), xe.scissor(L.copy(U).multiplyScalar(P).floor());
    }, this.getScissorTest = function() {
        return F;
    }, this.setScissorTest = function(S) {
        xe.setScissorTest(F = S);
    }, this.setOpaqueSort = function(S) {
        w = S;
    }, this.setTransparentSort = function(S) {
        E = S;
    }, this.getClearColor = function(S) {
        return S.copy(re.getClearColor());
    }, this.setClearColor = function() {
        re.setClearColor.apply(re, arguments);
    }, this.getClearAlpha = function() {
        return re.getClearAlpha();
    }, this.setClearAlpha = function() {
        re.setClearAlpha.apply(re, arguments);
    }, this.clear = function(S, N, H) {
        let z = 0;
        (S === void 0 || S) && (z |= 16384), (N === void 0 || N) && (z |= 256), (H === void 0 || H) && (z |= 1024), Y.clear(z);
    }, this.clearColor = function() {
        this.clear(!0, !1, !1);
    }, this.clearDepth = function() {
        this.clear(!1, !0, !1);
    }, this.clearStencil = function() {
        this.clear(!1, !1, !0);
    }, this.dispose = function() {
        e.removeEventListener("webglcontextlost", Ee, !1), e.removeEventListener("webglcontextrestored", me, !1), C.dispose(), T.dispose(), G.dispose(), K.dispose(), ue.dispose(), Te.dispose(), R.dispose(), Pe.dispose(), Q.dispose(), Q.removeEventListener("sessionstart", Ut), Q.removeEventListener("sessionend", Ot), W && (W.dispose(), W = null), Ln.stop();
    };
    function Ee(S) {
        S.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), v = !0;
    }
    function me() {
        console.log("THREE.WebGLRenderer: Context Restored."), v = !1;
        let S = Oe.autoReset, N = $.enabled, H = $.autoUpdate, z = $.needsUpdate, q = $.type;
        ee(), Oe.autoReset = S, $.enabled = N, $.autoUpdate = H, $.needsUpdate = z, $.type = q;
    }
    function Re(S) {
        let N = S.target;
        N.removeEventListener("dispose", Re), oe(N);
    }
    function oe(S) {
        Le(S), G.remove(S);
    }
    function Le(S) {
        let N = G.get(S).programs;
        N !== void 0 && (N.forEach(function(H) {
            Pe.releaseProgram(H);
        }), S.isShaderMaterial && Pe.releaseShaderCache(S));
    }
    this.renderBufferDirect = function(S, N, H, z, q, be) {
        N === null && (N = fe);
        let Ae = q.isMesh && q.matrixWorld.determinant() < 0, Ie = lu(S, N, H, z, q);
        xe.setMaterial(z, Ae);
        let we = H.index, He = H.attributes.position;
        if (we === null) {
            if (He === void 0 || He.count === 0) return;
        } else if (we.count === 0) return;
        let De = 1;
        z.wireframe === !0 && (we = Se.getWireframeAttribute(H), De = 2), R.setup(q, z, Ie, H, we);
        let ze, je = Me;
        we !== null && (ze = se.get(we), je = ve, je.setIndex(ze));
        let Rn = we !== null ? we.count : He.count, ei = H.drawRange.start * De, Ge = H.drawRange.count * De, Ht = be !== null ? be.start * De : 0, at = be !== null ? be.count * De : 1 / 0, kt = Math.max(ei, Ht), Gr = Math.min(Rn, ei + Ge, Ht + at) - 1, Gt = Math.max(0, Gr - kt + 1);
        if (Gt !== 0) {
            if (q.isMesh) z.wireframe === !0 ? (xe.setLineWidth(z.wireframeLinewidth * Be()), je.setMode(1)) : je.setMode(4);
            else if (q.isLine) {
                let Zt = z.linewidth;
                Zt === void 0 && (Zt = 1), xe.setLineWidth(Zt * Be()), q.isLineSegments ? je.setMode(1) : q.isLineLoop ? je.setMode(2) : je.setMode(3);
            } else q.isPoints ? je.setMode(0) : q.isSprite && je.setMode(4);
            if (q.isInstancedMesh) je.renderInstances(kt, Gt, q.count);
            else if (H.isInstancedBufferGeometry) {
                let Zt1 = Math.min(H.instanceCount, H._maxInstanceCount);
                je.renderInstances(kt, Gt, Zt1);
            } else je.render(kt, Gt);
        }
    }, this.compile = function(S, N) {
        d = T.get(S), d.init(), m.push(d), S.traverseVisible(function(H) {
            H.isLight && H.layers.test(N.layers) && (d.pushLight(H), H.castShadow && d.pushShadow(H));
        }), d.setupLights(x.physicallyCorrectLights), S.traverse(function(H) {
            let z = H.material;
            if (z) if (Array.isArray(z)) for(let q = 0; q < z.length; q++){
                let be = z[q];
                xo(be, S, H);
            }
            else xo(z, S, H);
        }), m.pop(), d = null;
    };
    let Xe = null;
    function We(S) {
        Xe && Xe(S);
    }
    function Ut() {
        Ln.stop();
    }
    function Ot() {
        Ln.start();
    }
    let Ln = new rh;
    Ln.setAnimationLoop(We), typeof window < "u" && Ln.setContext(window), this.setAnimationLoop = function(S) {
        Xe = S, Q.setAnimationLoop(S), S === null ? Ln.stop() : Ln.start();
    }, Q.addEventListener("sessionstart", Ut), Q.addEventListener("sessionend", Ot), this.render = function(S, N) {
        if (N !== void 0 && N.isCamera !== !0) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return;
        }
        if (v === !0) return;
        S.autoUpdate === !0 && S.updateMatrixWorld(), N.parent === null && N.updateMatrixWorld(), Q.enabled === !0 && Q.isPresenting === !0 && (Q.cameraAutoUpdate === !0 && Q.updateCamera(N), N = Q.getCamera()), S.isScene === !0 && S.onBeforeRender(x, S, N, _), d = T.get(S, m.length), d.init(), m.push(d), he.multiplyMatrices(N.projectionMatrix, N.matrixWorldInverse), ne.setFromProjectionMatrix(he), V = this.localClippingEnabled, ce = J.init(this.clippingPlanes, V, N), u = C.get(S, f.length), u.init(), f.push(u), Qa(S, N, 0, x.sortObjects), u.finish(), x.sortObjects === !0 && u.sort(w, E), ce === !0 && J.beginShadows();
        let H = d.state.shadowsArray;
        if ($.render(H, S, N), ce === !0 && J.endShadows(), this.info.autoReset === !0 && this.info.reset(), re.render(u, S), d.setupLights(x.physicallyCorrectLights), N.isArrayCamera) {
            let z = N.cameras;
            for(let q = 0, be = z.length; q < be; q++){
                let Ae = z[q];
                Ka(u, S, Ae, Ae.viewport);
            }
        } else Ka(u, S, N);
        _ !== null && (j.updateMultisampleRenderTarget(_), j.updateRenderTargetMipmap(_)), S.isScene === !0 && S.onAfterRender(x, S, N), xe.buffers.depth.setTest(!0), xe.buffers.depth.setMask(!0), xe.buffers.color.setMask(!0), xe.setPolygonOffset(!1), R.resetDefaultState(), y = -1, b = null, m.pop(), m.length > 0 ? d = m[m.length - 1] : d = null, f.pop(), f.length > 0 ? u = f[f.length - 1] : u = null;
    };
    function Qa(S, N, H, z) {
        if (S.visible === !1) return;
        if (S.layers.test(N.layers)) {
            if (S.isGroup) H = S.renderOrder;
            else if (S.isLOD) S.autoUpdate === !0 && S.update(N);
            else if (S.isLight) d.pushLight(S), S.castShadow && d.pushShadow(S);
            else if (S.isSprite) {
                if (!S.frustumCulled || ne.intersectsSprite(S)) {
                    z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                    let Ae = Te.update(S), Ie = S.material;
                    Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
                }
            } else if ((S.isMesh || S.isLine || S.isPoints) && (S.isSkinnedMesh && S.skeleton.frame !== Oe.render.frame && (S.skeleton.update(), S.skeleton.frame = Oe.render.frame), !S.frustumCulled || ne.intersectsObject(S))) {
                z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                let Ae1 = Te.update(S), Ie1 = S.material;
                if (Array.isArray(Ie1)) {
                    let we = Ae1.groups;
                    for(let He = 0, De = we.length; He < De; He++){
                        let ze = we[He], je = Ie1[ze.materialIndex];
                        je && je.visible && u.push(S, Ae1, je, H, le.z, ze);
                    }
                } else Ie1.visible && u.push(S, Ae1, Ie1, H, le.z, null);
            }
        }
        let be = S.children;
        for(let Ae2 = 0, Ie2 = be.length; Ae2 < Ie2; Ae2++)Qa(be[Ae2], N, H, z);
    }
    function Ka(S, N, H, z) {
        let q = S.opaque, be = S.transmissive, Ae = S.transparent;
        d.setupLightsView(H), be.length > 0 && ou(q, N, H), z && xe.viewport(A.copy(z)), q.length > 0 && kr(q, N, H), be.length > 0 && kr(be, N, H), Ae.length > 0 && kr(Ae, N, H);
    }
    function ou(S, N, H) {
        if (W === null) {
            let Ae = o === !0 && ge.isWebGL2 === !0 ? Xs : At;
            W = new Ae(1024, 1024, {
                generateMipmaps: !0,
                type: te.convert(kn) !== null ? kn : rn,
                minFilter: Ui,
                magFilter: rt,
                wrapS: vt,
                wrapT: vt,
                useRenderToTexture: ye.has("WEBGL_multisampled_render_to_texture")
            });
        }
        let z = x.getRenderTarget();
        x.setRenderTarget(W), x.clear();
        let q = x.toneMapping;
        x.toneMapping = _n, kr(S, N, H), x.toneMapping = q, j.updateMultisampleRenderTarget(W), j.updateRenderTargetMipmap(W), x.setRenderTarget(z);
    }
    function kr(S, N, H) {
        let z = N.isScene === !0 ? N.overrideMaterial : null;
        for(let q = 0, be = S.length; q < be; q++){
            let Ae = S[q], Ie = Ae.object, we = Ae.geometry, He = z === null ? Ae.material : z, De = Ae.group;
            Ie.layers.test(H.layers) && au(Ie, N, H, we, He, De);
        }
    }
    function au(S, N, H, z, q, be) {
        S.onBeforeRender(x, N, H, z, q, be), S.modelViewMatrix.multiplyMatrices(H.matrixWorldInverse, S.matrixWorld), S.normalMatrix.getNormalMatrix(S.modelViewMatrix), q.onBeforeRender(x, N, H, z, S, be), q.transparent === !0 && q.side === Ci ? (q.side = it, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ai, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ci) : x.renderBufferDirect(H, N, z, q, S, be), S.onAfterRender(x, N, H, z, q, be);
    }
    function xo(S, N, H) {
        N.isScene !== !0 && (N = fe);
        let z = G.get(S), q = d.state.lights, be = d.state.shadowsArray, Ae = q.state.version, Ie = Pe.getParameters(S, q.state, be, N, H), we = Pe.getProgramCacheKey(Ie), He = z.programs;
        z.environment = S.isMeshStandardMaterial ? N.environment : null, z.fog = N.fog, z.envMap = (S.isMeshStandardMaterial ? ue : K).get(S.envMap || z.environment), He === void 0 && (S.addEventListener("dispose", Re), He = new Map, z.programs = He);
        let De = He.get(we);
        if (De !== void 0) {
            if (z.currentProgram === De && z.lightsStateVersion === Ae) return el(S, Ie), De;
        } else Ie.uniforms = Pe.getUniforms(S), S.onBuild(H, Ie, x), S.onBeforeCompile(Ie, x), De = Pe.acquireProgram(Ie, we), He.set(we, De), z.uniforms = Ie.uniforms;
        let ze = z.uniforms;
        (!S.isShaderMaterial && !S.isRawShaderMaterial || S.clipping === !0) && (ze.clippingPlanes = J.uniform), el(S, Ie), z.needsLights = hu(S), z.lightsStateVersion = Ae, z.needsLights && (ze.ambientLightColor.value = q.state.ambient, ze.lightProbe.value = q.state.probe, ze.directionalLights.value = q.state.directional, ze.directionalLightShadows.value = q.state.directionalShadow, ze.spotLights.value = q.state.spot, ze.spotLightShadows.value = q.state.spotShadow, ze.rectAreaLights.value = q.state.rectArea, ze.ltc_1.value = q.state.rectAreaLTC1, ze.ltc_2.value = q.state.rectAreaLTC2, ze.pointLights.value = q.state.point, ze.pointLightShadows.value = q.state.pointShadow, ze.hemisphereLights.value = q.state.hemi, ze.directionalShadowMap.value = q.state.directionalShadowMap, ze.directionalShadowMatrix.value = q.state.directionalShadowMatrix, ze.spotShadowMap.value = q.state.spotShadowMap, ze.spotShadowMatrix.value = q.state.spotShadowMatrix, ze.pointShadowMap.value = q.state.pointShadowMap, ze.pointShadowMatrix.value = q.state.pointShadowMatrix);
        let je = De.getUniforms(), Rn = bn.seqWithValue(je.seq, ze);
        return z.currentProgram = De, z.uniformsList = Rn, De;
    }
    function el(S, N) {
        let H = G.get(S);
        H.outputEncoding = N.outputEncoding, H.instancing = N.instancing, H.skinning = N.skinning, H.morphTargets = N.morphTargets, H.morphNormals = N.morphNormals, H.morphTargetsCount = N.morphTargetsCount, H.numClippingPlanes = N.numClippingPlanes, H.numIntersection = N.numClipIntersection, H.vertexAlphas = N.vertexAlphas, H.vertexTangents = N.vertexTangents, H.toneMapping = N.toneMapping;
    }
    function lu(S, N, H, z, q) {
        N.isScene !== !0 && (N = fe), j.resetTextureUnits();
        let be = N.fog, Ae = z.isMeshStandardMaterial ? N.environment : null, Ie = _ === null ? x.outputEncoding : _.texture.encoding, we = (z.isMeshStandardMaterial ? ue : K).get(z.envMap || Ae), He = z.vertexColors === !0 && !!H.attributes.color && H.attributes.color.itemSize === 4, De = !!z.normalMap && !!H.attributes.tangent, ze = !!H.morphAttributes.position, je = !!H.morphAttributes.normal, Rn = H.morphAttributes.position ? H.morphAttributes.position.length : 0, ei = z.toneMapped ? x.toneMapping : _n, Ge = G.get(z), Ht = d.state.lights;
        if (ce === !0 && (V === !0 || S !== b)) {
            let Pt = S === b && z.id === y;
            J.setState(z, S, Pt);
        }
        let at = !1;
        z.version === Ge.__version ? (Ge.needsLights && Ge.lightsStateVersion !== Ht.state.version || Ge.outputEncoding !== Ie || q.isInstancedMesh && Ge.instancing === !1 || !q.isInstancedMesh && Ge.instancing === !0 || q.isSkinnedMesh && Ge.skinning === !1 || !q.isSkinnedMesh && Ge.skinning === !0 || Ge.envMap !== we || z.fog && Ge.fog !== be || Ge.numClippingPlanes !== void 0 && (Ge.numClippingPlanes !== J.numPlanes || Ge.numIntersection !== J.numIntersection) || Ge.vertexAlphas !== He || Ge.vertexTangents !== De || Ge.morphTargets !== ze || Ge.morphNormals !== je || Ge.toneMapping !== ei || ge.isWebGL2 === !0 && Ge.morphTargetsCount !== Rn) && (at = !0) : (at = !0, Ge.__version = z.version);
        let kt = Ge.currentProgram;
        at === !0 && (kt = xo(z, N, q));
        let Gr = !1, Gt = !1, Zt = !1, xt = kt.getUniforms(), Xi = Ge.uniforms;
        if (xe.useProgram(kt.program) && (Gr = !0, Gt = !0, Zt = !0), z.id !== y && (y = z.id, Gt = !0), Gr || b !== S) {
            if (xt.setValue(Y, "projectionMatrix", S.projectionMatrix), ge.logarithmicDepthBuffer && xt.setValue(Y, "logDepthBufFC", 2 / (Math.log(S.far + 1) / Math.LN2)), b !== S && (b = S, Gt = !0, Zt = !0), z.isShaderMaterial || z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshStandardMaterial || z.envMap) {
                let Pt1 = xt.map.cameraPosition;
                Pt1 !== void 0 && Pt1.setValue(Y, le.setFromMatrixPosition(S.matrixWorld));
            }
            (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial) && xt.setValue(Y, "isOrthographic", S.isOrthographicCamera === !0), (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial || z.isShadowMaterial || q.isSkinnedMesh) && xt.setValue(Y, "viewMatrix", S.matrixWorldInverse);
        }
        if (q.isSkinnedMesh) {
            xt.setOptional(Y, q, "bindMatrix"), xt.setOptional(Y, q, "bindMatrixInverse");
            let Pt2 = q.skeleton;
            Pt2 && (ge.floatVertexTextures ? (Pt2.boneTexture === null && Pt2.computeBoneTexture(), xt.setValue(Y, "boneTexture", Pt2.boneTexture, j), xt.setValue(Y, "boneTextureSize", Pt2.boneTextureSize)) : xt.setOptional(Y, Pt2, "boneMatrices"));
        }
        return !!H && (H.morphAttributes.position !== void 0 || H.morphAttributes.normal !== void 0) && Z.update(q, H, z, kt), (Gt || Ge.receiveShadow !== q.receiveShadow) && (Ge.receiveShadow = q.receiveShadow, xt.setValue(Y, "receiveShadow", q.receiveShadow)), Gt && (xt.setValue(Y, "toneMappingExposure", x.toneMappingExposure), Ge.needsLights && cu(Xi, Zt), be && z.fog && Ye.refreshFogUniforms(Xi, be), Ye.refreshMaterialUniforms(Xi, z, P, B, W), bn.upload(Y, Ge.uniformsList, Xi, j)), z.isShaderMaterial && z.uniformsNeedUpdate === !0 && (bn.upload(Y, Ge.uniformsList, Xi, j), z.uniformsNeedUpdate = !1), z.isSpriteMaterial && xt.setValue(Y, "center", q.center), xt.setValue(Y, "modelViewMatrix", q.modelViewMatrix), xt.setValue(Y, "normalMatrix", q.normalMatrix), xt.setValue(Y, "modelMatrix", q.matrixWorld), kt;
    }
    function cu(S, N) {
        S.ambientLightColor.needsUpdate = N, S.lightProbe.needsUpdate = N, S.directionalLights.needsUpdate = N, S.directionalLightShadows.needsUpdate = N, S.pointLights.needsUpdate = N, S.pointLightShadows.needsUpdate = N, S.spotLights.needsUpdate = N, S.spotLightShadows.needsUpdate = N, S.rectAreaLights.needsUpdate = N, S.hemisphereLights.needsUpdate = N;
    }
    function hu(S) {
        return S.isMeshLambertMaterial || S.isMeshToonMaterial || S.isMeshPhongMaterial || S.isMeshStandardMaterial || S.isShadowMaterial || S.isShaderMaterial && S.lights === !0;
    }
    this.getActiveCubeFace = function() {
        return g;
    }, this.getActiveMipmapLevel = function() {
        return p;
    }, this.getRenderTarget = function() {
        return _;
    }, this.setRenderTargetTextures = function(S, N, H) {
        G.get(S.texture).__webglTexture = N, G.get(S.depthTexture).__webglTexture = H;
        let z = G.get(S);
        z.__hasExternalTextures = !0, z.__hasExternalTextures && (z.__autoAllocateDepthBuffer = H === void 0, z.__autoAllocateDepthBuffer || S.useRenderToTexture && (console.warn("render-to-texture extension was disabled because an external texture was provided"), S.useRenderToTexture = !1, S.useRenderbuffer = !0));
    }, this.setRenderTargetFramebuffer = function(S, N) {
        let H = G.get(S);
        H.__webglFramebuffer = N, H.__useDefaultFramebuffer = N === void 0;
    }, this.setRenderTarget = function(S, N = 0, H = 0) {
        _ = S, g = N, p = H;
        let z = !0;
        if (S) {
            let we = G.get(S);
            we.__useDefaultFramebuffer !== void 0 ? (xe.bindFramebuffer(36160, null), z = !1) : we.__webglFramebuffer === void 0 ? j.setupRenderTarget(S) : we.__hasExternalTextures && j.rebindTextures(S, G.get(S.texture).__webglTexture, G.get(S.depthTexture).__webglTexture);
        }
        let q = null, be = !1, Ae = !1;
        if (S) {
            let we1 = S.texture;
            (we1.isDataTexture3D || we1.isDataTexture2DArray) && (Ae = !0);
            let He = G.get(S).__webglFramebuffer;
            S.isWebGLCubeRenderTarget ? (q = He[N], be = !0) : S.useRenderbuffer ? q = G.get(S).__webglMultisampledFramebuffer : q = He, A.copy(S.viewport), L.copy(S.scissor), I = S.scissorTest;
        } else A.copy(D).multiplyScalar(P).floor(), L.copy(U).multiplyScalar(P).floor(), I = F;
        if (xe.bindFramebuffer(36160, q) && ge.drawBuffers && z) {
            let we2 = !1;
            if (S) if (S.isWebGLMultipleRenderTargets) {
                let He1 = S.texture;
                if (O.length !== He1.length || O[0] !== 36064) {
                    for(let De = 0, ze = He1.length; De < ze; De++)O[De] = 36064 + De;
                    O.length = He1.length, we2 = !0;
                }
            } else (O.length !== 1 || O[0] !== 36064) && (O[0] = 36064, O.length = 1, we2 = !0);
            else (O.length !== 1 || O[0] !== 1029) && (O[0] = 1029, O.length = 1, we2 = !0);
            we2 && (ge.isWebGL2 ? Y.drawBuffers(O) : ye.get("WEBGL_draw_buffers").drawBuffersWEBGL(O));
        }
        if (xe.viewport(A), xe.scissor(L), xe.setScissorTest(I), be) {
            let we3 = G.get(S.texture);
            Y.framebufferTexture2D(36160, 36064, 34069 + N, we3.__webglTexture, H);
        } else if (Ae) {
            let we4 = G.get(S.texture), He2 = N || 0;
            Y.framebufferTextureLayer(36160, 36064, we4.__webglTexture, H || 0, He2);
        }
        y = -1;
    }, this.readRenderTargetPixels = function(S, N, H, z, q, be, Ae) {
        if (!(S && S.isWebGLRenderTarget)) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            return;
        }
        let Ie = G.get(S).__webglFramebuffer;
        if (S.isWebGLCubeRenderTarget && Ae !== void 0 && (Ie = Ie[Ae]), Ie) {
            xe.bindFramebuffer(36160, Ie);
            try {
                let we = S.texture, He = we.format, De = we.type;
                if (He !== ct && te.convert(He) !== Y.getParameter(35739)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    return;
                }
                let ze = De === kn && (ye.has("EXT_color_buffer_half_float") || ge.isWebGL2 && ye.has("EXT_color_buffer_float"));
                if (De !== rn && te.convert(De) !== Y.getParameter(35738) && !(De === nn && (ge.isWebGL2 || ye.has("OES_texture_float") || ye.has("WEBGL_color_buffer_float"))) && !ze) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    return;
                }
                Y.checkFramebufferStatus(36160) === 36053 ? N >= 0 && N <= S.width - z && H >= 0 && H <= S.height - q && Y.readPixels(N, H, z, q, te.convert(He), te.convert(De), be) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
            } finally{
                let we1 = _ !== null ? G.get(_).__webglFramebuffer : null;
                xe.bindFramebuffer(36160, we1);
            }
        }
    }, this.copyFramebufferToTexture = function(S, N, H = 0) {
        if (N.isFramebufferTexture !== !0) {
            console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");
            return;
        }
        let z = Math.pow(2, -H), q = Math.floor(N.image.width * z), be = Math.floor(N.image.height * z);
        j.setTexture2D(N, 0), Y.copyTexSubImage2D(3553, H, 0, 0, S.x, S.y, q, be), xe.unbindTexture();
    }, this.copyTextureToTexture = function(S, N, H, z = 0) {
        let q = N.image.width, be = N.image.height, Ae = te.convert(H.format), Ie = te.convert(H.type);
        j.setTexture2D(H, 0), Y.pixelStorei(37440, H.flipY), Y.pixelStorei(37441, H.premultiplyAlpha), Y.pixelStorei(3317, H.unpackAlignment), N.isDataTexture ? Y.texSubImage2D(3553, z, S.x, S.y, q, be, Ae, Ie, N.image.data) : N.isCompressedTexture ? Y.compressedTexSubImage2D(3553, z, S.x, S.y, N.mipmaps[0].width, N.mipmaps[0].height, Ae, N.mipmaps[0].data) : Y.texSubImage2D(3553, z, S.x, S.y, Ae, Ie, N.image), z === 0 && H.generateMipmaps && Y.generateMipmap(3553), xe.unbindTexture();
    }, this.copyTextureToTexture3D = function(S, N, H, z, q = 0) {
        if (x.isWebGL1Renderer) {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
            return;
        }
        let be = S.max.x - S.min.x + 1, Ae = S.max.y - S.min.y + 1, Ie = S.max.z - S.min.z + 1, we = te.convert(z.format), He = te.convert(z.type), De;
        if (z.isDataTexture3D) j.setTexture3D(z, 0), De = 32879;
        else if (z.isDataTexture2DArray) j.setTexture2DArray(z, 0), De = 35866;
        else {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
            return;
        }
        Y.pixelStorei(37440, z.flipY), Y.pixelStorei(37441, z.premultiplyAlpha), Y.pixelStorei(3317, z.unpackAlignment);
        let ze = Y.getParameter(3314), je = Y.getParameter(32878), Rn = Y.getParameter(3316), ei = Y.getParameter(3315), Ge = Y.getParameter(32877), Ht = H.isCompressedTexture ? H.mipmaps[0] : H.image;
        Y.pixelStorei(3314, Ht.width), Y.pixelStorei(32878, Ht.height), Y.pixelStorei(3316, S.min.x), Y.pixelStorei(3315, S.min.y), Y.pixelStorei(32877, S.min.z), H.isDataTexture || H.isDataTexture3D ? Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht.data) : H.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), Y.compressedTexSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, Ht.data)) : Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht), Y.pixelStorei(3314, ze), Y.pixelStorei(32878, je), Y.pixelStorei(3316, Rn), Y.pixelStorei(3315, ei), Y.pixelStorei(32877, Ge), q === 0 && z.generateMipmaps && Y.generateMipmap(De), xe.unbindTexture();
    }, this.initTexture = function(S) {
        j.setTexture2D(S, 0), xe.unbindTexture();
    }, this.resetState = function() {
        g = 0, p = 0, _ = null, xe.reset(), R.reset();
    }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
        detail: this
    }));
}
qe.prototype.isWebGLRenderer = !0;
var _h = class extends qe {
};
_h.prototype.isWebGL1Renderer = !0;
var Nr = class {
    constructor(e, t = 25e-5){
        this.name = "", this.color = new ae(e), this.density = t;
    }
    clone() {
        return new Nr(this.color, this.density);
    }
    toJSON() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        };
    }
};
Nr.prototype.isFogExp2 = !0;
var Br = class {
    constructor(e, t = 1, n = 1e3){
        this.name = "", this.color = new ae(e), this.near = t, this.far = n;
    }
    clone() {
        return new Br(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        };
    }
};
Br.prototype.isFog = !0;
var no = class extends Ne {
    constructor(){
        super();
        this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    copy(e, t) {
        return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.fog !== null && (t.object.fog = this.fog.toJSON()), t;
    }
};
no.prototype.isScene = !0;
var $n = class {
    constructor(e, t){
        this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0, this.uuid = Et();
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.stride, n *= t.stride;
        for(let i = 0, r = this.stride; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
        let t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    toJSON(e) {
        return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
            uuid: this.uuid,
            buffer: this.array.buffer._uuid,
            type: this.array.constructor.name,
            stride: this.stride
        };
    }
};
$n.prototype.isInterleavedBuffer = !0;
var Ke = new M, Sn = class {
    constructor(e, t, n, i = !1){
        this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = i === !0;
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.data.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyMatrix4(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyNormalMatrix(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.transformDirection(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    setX(e, t) {
        return this.data.array[e * this.data.stride + this.offset] = t, this;
    }
    setY(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
    }
    setZ(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
    }
    setW(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
    }
    getX(e) {
        return this.data.array[e * this.data.stride + this.offset];
    }
    getY(e) {
        return this.data.array[e * this.data.stride + this.offset + 1];
    }
    getZ(e) {
        return this.data.array[e * this.data.stride + this.offset + 2];
    }
    getW(e) {
        return this.data.array[e * this.data.stride + this.offset + 3];
    }
    setXY(e, t, n) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
    }
    clone(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return new Ue(new this.array.constructor(t), this.itemSize, this.normalized);
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new Sn(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
    }
    toJSON(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized
            };
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
            isInterleavedBufferAttribute: !0,
            itemSize: this.itemSize,
            data: this.data.uuid,
            offset: this.offset,
            normalized: this.normalized
        };
    }
};
Sn.prototype.isInterleavedBufferAttribute = !0;
var io = class extends dt {
    constructor(e){
        super();
        this.type = "SpriteMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
io.prototype.isSpriteMaterial = !0;
var gi, Qi = new M, xi = new M, yi = new M, vi = new X, Ki = new X, Mh = new pe, hs = new M, er = new M, us = new M, jl = new X, qo = new X, Ql = new X, ro = class extends Ne {
    constructor(e){
        super();
        if (this.type = "Sprite", gi === void 0) {
            gi = new _e;
            let t = new Float32Array([
                -.5,
                -.5,
                0,
                0,
                0,
                .5,
                -.5,
                0,
                1,
                0,
                .5,
                .5,
                0,
                1,
                1,
                -.5,
                .5,
                0,
                0,
                1
            ]), n = new $n(t, 5);
            gi.setIndex([
                0,
                1,
                2,
                0,
                2,
                3
            ]), gi.setAttribute("position", new Sn(n, 3, 0, !1)), gi.setAttribute("uv", new Sn(n, 2, 3, !1));
        }
        this.geometry = gi, this.material = e !== void 0 ? e : new io, this.center = new X(.5, .5);
    }
    raycast(e, t) {
        e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), xi.setFromMatrixScale(this.matrixWorld), Mh.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), yi.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && xi.multiplyScalar(-yi.z);
        let n = this.material.rotation, i, r;
        n !== 0 && (r = Math.cos(n), i = Math.sin(n));
        let o = this.center;
        ds(hs.set(-.5, -.5, 0), yi, o, xi, i, r), ds(er.set(.5, -.5, 0), yi, o, xi, i, r), ds(us.set(.5, .5, 0), yi, o, xi, i, r), jl.set(0, 0), qo.set(1, 0), Ql.set(1, 1);
        let a = e.ray.intersectTriangle(hs, er, us, !1, Qi);
        if (a === null && (ds(er.set(-.5, .5, 0), yi, o, xi, i, r), qo.set(0, 1), a = e.ray.intersectTriangle(hs, us, er, !1, Qi), a === null)) return;
        let l = e.ray.origin.distanceTo(Qi);
        l < e.near || l > e.far || t.push({
            distance: l,
            point: Qi.clone(),
            uv: nt.getUV(Qi, hs, er, us, jl, qo, Ql, new X),
            face: null,
            object: this
        });
    }
    copy(e) {
        return super.copy(e), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
    }
};
ro.prototype.isSprite = !0;
function ds(s, e, t, n, i, r) {
    vi.subVectors(s, t).addScalar(.5).multiply(n), i !== void 0 ? (Ki.x = r * vi.x - i * vi.y, Ki.y = i * vi.x + r * vi.y) : Ki.copy(vi), s.copy(e), s.x += Ki.x, s.y += Ki.y, s.applyMatrix4(Mh);
}
var fs = new M, Kl = new M, bh = class extends Ne {
    constructor(){
        super();
        this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            isLOD: {
                value: !0
            }
        }), this.autoUpdate = !0;
    }
    copy(e) {
        super.copy(e, !1);
        let t = e.levels;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            this.addLevel(r.object.clone(), r.distance);
        }
        return this.autoUpdate = e.autoUpdate, this;
    }
    addLevel(e, t = 0) {
        t = Math.abs(t);
        let n = this.levels, i;
        for(i = 0; i < n.length && !(t < n[i].distance); i++);
        return n.splice(i, 0, {
            distance: t,
            object: e
        }), this.add(e), this;
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        let t = this.levels;
        if (t.length > 0) {
            let n, i;
            for(n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            fs.setFromMatrixPosition(this.matrixWorld);
            let i = e.ray.origin.distanceTo(fs);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        let t = this.levels;
        if (t.length > 1) {
            fs.setFromMatrixPosition(e.matrixWorld), Kl.setFromMatrixPosition(this.matrixWorld);
            let n = fs.distanceTo(Kl) / e.zoom;
            t[0].object.visible = !0;
            let i, r;
            for(i = 1, r = t.length; i < r && n >= t[i].distance; i++)t[i - 1].object.visible = !1, t[i].object.visible = !0;
            for(this._currentLevel = i - 1; i < r; i++)t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        let t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
        let n = this.levels;
        for(let i = 0, r = n.length; i < r; i++){
            let o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            });
        }
        return t;
    }
}, ec = new M, tc = new Ve, nc = new Ve, Rx = new M, ic = new pe, so = class extends st {
    constructor(e, t){
        super(e, t);
        this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new pe, this.bindMatrixInverse = new pe;
    }
    copy(e) {
        return super.copy(e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this;
    }
    bind(e, t) {
        this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        let e = new Ve, t = this.geometry.attributes.skinWeight;
        for(let n = 0, i = t.count; n < i; n++){
            e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
    }
    boneTransform(e, t) {
        let n = this.skeleton, i = this.geometry;
        tc.fromBufferAttribute(i.attributes.skinIndex, e), nc.fromBufferAttribute(i.attributes.skinWeight, e), ec.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
        for(let r = 0; r < 4; r++){
            let o = nc.getComponent(r);
            if (o !== 0) {
                let a = tc.getComponent(r);
                ic.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]), t.addScaledVector(Rx.copy(ec).applyMatrix4(ic), o);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
};
so.prototype.isSkinnedMesh = !0;
var oo = class extends Ne {
    constructor(){
        super();
        this.type = "Bone";
    }
};
oo.prototype.isBone = !0;
var qn = class extends ot {
    constructor(e = null, t = 1, n = 1, i, r, o, a, l, c = rt, h = rt, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            data: e,
            width: t,
            height: n
        }, this.magFilter = c, this.minFilter = h, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
qn.prototype.isDataTexture = !0;
var rc = new pe, Px = new pe, ao = class {
    constructor(e = [], t = []){
        this.uuid = Et(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init();
    }
    init() {
        let e = this.bones, t = this.boneInverses;
        if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0) this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
            for(let n = 0, i = this.bones.length; n < i; n++)this.boneInverses.push(new pe);
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = new pe;
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n);
        }
    }
    pose() {
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for(let e1 = 0, t1 = this.bones.length; e1 < t1; e1++){
            let n1 = this.bones[e1];
            n1 && (n1.parent && n1.parent.isBone ? (n1.matrix.copy(n1.parent.matrixWorld).invert(), n1.matrix.multiply(n1.matrixWorld)) : n1.matrix.copy(n1.matrixWorld), n1.matrix.decompose(n1.position, n1.quaternion, n1.scale));
        }
    }
    update() {
        let e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;
        for(let r = 0, o = e.length; r < o; r++){
            let a = e[r] ? e[r].matrixWorld : Px;
            rc.multiplyMatrices(a, t[r]), rc.toArray(n, r * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new ao(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        e = Xc(e), e = Math.max(e, 4);
        let t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        let n = new qn(t, e, e, ct, nn);
        return n.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this;
    }
    getBoneByName(e) {
        for(let t = 0, n = this.bones.length; t < n; t++){
            let i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for(let n = 0, i = e.bones.length; n < i; n++){
            let r = e.bones[n], o = t[r];
            o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", r), o = new oo), this.bones.push(o), this.boneInverses.push(new pe().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Skeleton",
                generator: "Skeleton.toJSON"
            },
            bones: [],
            boneInverses: []
        };
        e.uuid = this.uuid;
        let t = this.bones, n = this.boneInverses;
        for(let i = 0, r = t.length; i < r; i++){
            let o = t[i];
            e.bones.push(o.uuid);
            let a = n[i];
            e.boneInverses.push(a.toArray());
        }
        return e;
    }
}, Xn = class extends Ue {
    constructor(e, t, n, i = 1){
        typeof n == "number" && (i = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));
        super(e, t, n);
        this.meshPerAttribute = i;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
    }
};
Xn.prototype.isInstancedBufferAttribute = !0;
var sc = new pe, oc = new pe, ps = [], tr = new st, xa = class extends st {
    constructor(e, t, n){
        super(e, t);
        this.instanceMatrix = new Xn(new Float32Array(n * 16), 16), this.instanceColor = null, this.count = n, this.frustumCulled = !1;
    }
    copy(e) {
        return super.copy(e), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this;
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    raycast(e, t) {
        let n = this.matrixWorld, i = this.count;
        if (tr.geometry = this.geometry, tr.material = this.material, tr.material !== void 0) for(let r = 0; r < i; r++){
            this.getMatrixAt(r, sc), oc.multiplyMatrices(n, sc), tr.matrixWorld = oc, tr.raycast(e, ps);
            for(let o = 0, a = ps.length; o < a; o++){
                let l = ps[o];
                l.instanceId = r, l.object = this, t.push(l);
            }
            ps.length = 0;
        }
    }
    setColorAt(e, t) {
        this.instanceColor === null && (this.instanceColor = new Xn(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    updateMorphTargets() {}
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
xa.prototype.isInstancedMesh = !0;
var ft = class extends dt {
    constructor(e){
        super();
        this.type = "LineBasicMaterial", this.color = new ae(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
    }
};
ft.prototype.isLineBasicMaterial = !0;
var ac = new M, lc = new M, cc = new pe, Xo = new Cn, ms = new An, on = class extends Ne {
    constructor(e = new _e, t = new ft){
        super();
        this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [
                0
            ];
            for(let i = 1, r = t.count; i < r; i++)ac.fromBufferAttribute(t, i - 1), lc.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += ac.distanceTo(lc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Line.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), ms.copy(n.boundingSphere), ms.applyMatrix4(i), ms.radius += r, e.ray.intersectsSphere(ms) === !1) return;
        cc.copy(i).invert(), Xo.copy(e.ray).applyMatrix4(cc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = new M, h = new M, u = new M, d = new M, f = this.isLineSegments ? 2 : 1;
        if (n.isBufferGeometry) {
            let m = n.index, v = n.attributes.position;
            if (m !== null) {
                let g = Math.max(0, o.start), p = Math.min(m.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    let b = m.getX(_), A = m.getX(_ + 1);
                    if (c.fromBufferAttribute(v, b), h.fromBufferAttribute(v, A), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let I = e.ray.origin.distanceTo(d);
                    I < e.near || I > e.far || t.push({
                        distance: I,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            } else {
                let g1 = Math.max(0, o.start), p1 = Math.min(v.count, o.start + o.count);
                for(let _1 = g1, y1 = p1 - 1; _1 < y1; _1 += f){
                    if (c.fromBufferAttribute(v, _1), h.fromBufferAttribute(v, _1 + 1), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let A1 = e.ray.origin.distanceTo(d);
                    A1 < e.near || A1 > e.far || t.push({
                        distance: A1,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _1,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            }
        } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
on.prototype.isLine = !0;
var hc = new M, uc = new M, wt = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineSegments";
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [];
            for(let i = 0, r = t.count; i < r; i += 2)hc.fromBufferAttribute(t, i), uc.fromBufferAttribute(t, i + 1), n[i] = i === 0 ? 0 : n[i - 1], n[i + 1] = n[i] + hc.distanceTo(uc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
};
wt.prototype.isLineSegments = !0;
var ya = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineLoop";
    }
};
ya.prototype.isLineLoop = !0;
var jn = class extends dt {
    constructor(e){
        super();
        this.type = "PointsMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
jn.prototype.isPointsMaterial = !0;
var dc = new pe, sa = new Cn, gs = new An, xs = new M, zr = class extends Ne {
    constructor(e = new _e, t = new jn){
        super();
        this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), gs.copy(n.boundingSphere), gs.applyMatrix4(i), gs.radius += r, e.ray.intersectsSphere(gs) === !1) return;
        dc.copy(i).invert(), sa.copy(e.ray).applyMatrix4(dc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a;
        if (n.isBufferGeometry) {
            let c = n.index, u = n.attributes.position;
            if (c !== null) {
                let d = Math.max(0, o.start), f = Math.min(c.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++){
                    let v = c.getX(m);
                    xs.fromBufferAttribute(u, v), fc(xs, v, l, i, e, t, this);
                }
            } else {
                let d1 = Math.max(0, o.start), f1 = Math.min(u.count, o.start + o.count);
                for(let m1 = d1, x1 = f1; m1 < x1; m1++)xs.fromBufferAttribute(u, m1), fc(xs, m1, l, i, e, t, this);
            }
        } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
zr.prototype.isPoints = !0;
function fc(s, e, t, n, i, r, o) {
    let a = sa.distanceSqToPoint(s);
    if (a < t) {
        let l = new M;
        sa.closestPointToPoint(s, l), l.applyMatrix4(n);
        let c = i.ray.origin.distanceTo(l);
        if (c < i.near || c > i.far) return;
        r.push({
            distance: c,
            distanceToRay: Math.sqrt(a),
            point: l,
            index: e,
            face: null,
            object: o
        });
    }
}
var wh = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.format = a !== void 0 ? a : Gn, this.minFilter = o !== void 0 ? o : tt, this.magFilter = r !== void 0 ? r : tt, this.generateMipmaps = !1;
        let h = this;
        function u() {
            h.needsUpdate = !0, e.requestVideoFrameCallback(u);
        }
        "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(u);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        let e = this.image;
        "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
    }
};
wh.prototype.isVideoTexture = !0;
var Sh = class extends ot {
    constructor(e, t, n){
        super({
            width: e,
            height: t
        });
        this.format = n, this.magFilter = rt, this.minFilter = rt, this.generateMipmaps = !1, this.needsUpdate = !0;
    }
};
Sh.prototype.isFramebufferTexture = !0;
var va = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
    }
};
va.prototype.isCompressedTexture = !0;
var Th = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.needsUpdate = !0;
    }
};
Th.prototype.isCanvasTexture = !0;
var fr = class extends _e {
    constructor(e = 1, t = 8, n = 0, i = Math.PI * 2){
        super();
        this.type = "CircleGeometry", this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: i
        }, t = Math.max(3, t);
        let r = [], o = [], a = [], l = [], c = new M, h = new X;
        o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
        for(let u = 0, d = 3; u <= t; u++, d += 3){
            let f = n + u / t * i;
            c.x = e * Math.cos(f), c.y = e * Math.sin(f), o.push(c.x, c.y, c.z), a.push(0, 0, 1), h.x = (o[d] / e + 1) / 2, h.y = (o[d + 1] / e + 1) / 2, l.push(h.x, h.y);
        }
        for(let u1 = 1; u1 <= t; u1++)r.push(u1, u1 + 1, 0);
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("normal", new de(a, 3)), this.setAttribute("uv", new de(l, 2));
    }
    static fromJSON(e) {
        return new fr(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}, Jn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 8, r = 1, o = !1, a = 0, l = Math.PI * 2){
        super();
        this.type = "CylinderGeometry", this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: o,
            thetaStart: a,
            thetaLength: l
        };
        let c = this;
        i = Math.floor(i), r = Math.floor(r);
        let h = [], u = [], d = [], f = [], m = 0, x = [], v = n / 2, g = 0;
        p(), o === !1 && (e > 0 && _(!0), t > 0 && _(!1)), this.setIndex(h), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function p() {
            let y = new M, b = new M, A = 0, L = (t - e) / n;
            for(let I = 0; I <= r; I++){
                let k = [], B = I / r, P = B * (t - e) + e;
                for(let w = 0; w <= i; w++){
                    let E = w / i, D = E * l + a, U = Math.sin(D), F = Math.cos(D);
                    b.x = P * U, b.y = -B * n + v, b.z = P * F, u.push(b.x, b.y, b.z), y.set(U, L, F).normalize(), d.push(y.x, y.y, y.z), f.push(E, 1 - B), k.push(m++);
                }
                x.push(k);
            }
            for(let I1 = 0; I1 < i; I1++)for(let k1 = 0; k1 < r; k1++){
                let B1 = x[k1][I1], P1 = x[k1 + 1][I1], w1 = x[k1 + 1][I1 + 1], E1 = x[k1][I1 + 1];
                h.push(B1, P1, E1), h.push(P1, w1, E1), A += 6;
            }
            c.addGroup(g, A, 0), g += A;
        }
        function _(y) {
            let b = m, A = new X, L = new M, I = 0, k = y === !0 ? e : t, B = y === !0 ? 1 : -1;
            for(let w = 1; w <= i; w++)u.push(0, v * B, 0), d.push(0, B, 0), f.push(.5, .5), m++;
            let P = m;
            for(let w1 = 0; w1 <= i; w1++){
                let D = w1 / i * l + a, U = Math.cos(D), F = Math.sin(D);
                L.x = k * F, L.y = v * B, L.z = k * U, u.push(L.x, L.y, L.z), d.push(0, B, 0), A.x = U * .5 + .5, A.y = F * .5 * B + .5, f.push(A.x, A.y), m++;
            }
            for(let w2 = 0; w2 < i; w2++){
                let E = b + w2, D1 = P + w2;
                y === !0 ? h.push(D1, D1 + 1, E) : h.push(D1 + 1, D1, E), I += 3;
            }
            c.addGroup(g, I, y === !0 ? 1 : 2), g += I;
        }
    }
    static fromJSON(e) {
        return new Jn(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, pr = class extends Jn {
    constructor(e = 1, t = 1, n = 8, i = 1, r = !1, o = 0, a = Math.PI * 2){
        super(0, e, t, n, i, r, o, a);
        this.type = "ConeGeometry", this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: o,
            thetaLength: a
        };
    }
    static fromJSON(e) {
        return new pr(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, an = class extends _e {
    constructor(e = [], t = [], n = 1, i = 0){
        super();
        this.type = "PolyhedronGeometry", this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: i
        };
        let r = [], o = [];
        a(i), c(n), h(), this.setAttribute("position", new de(r, 3)), this.setAttribute("normal", new de(r.slice(), 3)), this.setAttribute("uv", new de(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function a(p) {
            let _ = new M, y = new M, b = new M;
            for(let A = 0; A < t.length; A += 3)f(t[A + 0], _), f(t[A + 1], y), f(t[A + 2], b), l(_, y, b, p);
        }
        function l(p, _, y, b) {
            let A = b + 1, L = [];
            for(let I = 0; I <= A; I++){
                L[I] = [];
                let k = p.clone().lerp(y, I / A), B = _.clone().lerp(y, I / A), P = A - I;
                for(let w = 0; w <= P; w++)w === 0 && I === A ? L[I][w] = k : L[I][w] = k.clone().lerp(B, w / P);
            }
            for(let I1 = 0; I1 < A; I1++)for(let k1 = 0; k1 < 2 * (A - I1) - 1; k1++){
                let B1 = Math.floor(k1 / 2);
                k1 % 2 === 0 ? (d(L[I1][B1 + 1]), d(L[I1 + 1][B1]), d(L[I1][B1])) : (d(L[I1][B1 + 1]), d(L[I1 + 1][B1 + 1]), d(L[I1 + 1][B1]));
            }
        }
        function c(p) {
            let _ = new M;
            for(let y = 0; y < r.length; y += 3)_.x = r[y + 0], _.y = r[y + 1], _.z = r[y + 2], _.normalize().multiplyScalar(p), r[y + 0] = _.x, r[y + 1] = _.y, r[y + 2] = _.z;
        }
        function h() {
            let p = new M;
            for(let _ = 0; _ < r.length; _ += 3){
                p.x = r[_ + 0], p.y = r[_ + 1], p.z = r[_ + 2];
                let y = v(p) / 2 / Math.PI + .5, b = g(p) / Math.PI + .5;
                o.push(y, 1 - b);
            }
            m(), u();
        }
        function u() {
            for(let p = 0; p < o.length; p += 6){
                let _ = o[p + 0], y = o[p + 2], b = o[p + 4], A = Math.max(_, y, b), L = Math.min(_, y, b);
                A > .9 && L < .1 && (_ < .2 && (o[p + 0] += 1), y < .2 && (o[p + 2] += 1), b < .2 && (o[p + 4] += 1));
            }
        }
        function d(p) {
            r.push(p.x, p.y, p.z);
        }
        function f(p, _) {
            let y = p * 3;
            _.x = e[y + 0], _.y = e[y + 1], _.z = e[y + 2];
        }
        function m() {
            let p = new M, _ = new M, y = new M, b = new M, A = new X, L = new X, I = new X;
            for(let k = 0, B = 0; k < r.length; k += 9, B += 6){
                p.set(r[k + 0], r[k + 1], r[k + 2]), _.set(r[k + 3], r[k + 4], r[k + 5]), y.set(r[k + 6], r[k + 7], r[k + 8]), A.set(o[B + 0], o[B + 1]), L.set(o[B + 2], o[B + 3]), I.set(o[B + 4], o[B + 5]), b.copy(p).add(_).add(y).divideScalar(3);
                let P = v(b);
                x(A, B + 0, p, P), x(L, B + 2, _, P), x(I, B + 4, y, P);
            }
        }
        function x(p, _, y, b) {
            b < 0 && p.x === 1 && (o[_] = p.x - 1), y.x === 0 && y.z === 0 && (o[_] = b / 2 / Math.PI + .5);
        }
        function v(p) {
            return Math.atan2(p.z, -p.x);
        }
        function g(p) {
            return Math.atan2(-p.y, Math.sqrt(p.x * p.x + p.z * p.z));
        }
    }
    static fromJSON(e) {
        return new an(e.vertices, e.indices, e.radius, e.details);
    }
}, mr = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            0,
            -n,
            0,
            -i,
            n,
            0,
            -i,
            -n,
            0,
            i,
            n,
            0,
            i
        ], o = [
            3,
            11,
            7,
            3,
            7,
            15,
            3,
            15,
            13,
            7,
            19,
            17,
            7,
            17,
            6,
            7,
            6,
            15,
            17,
            4,
            8,
            17,
            8,
            10,
            17,
            10,
            6,
            8,
            0,
            16,
            8,
            16,
            2,
            8,
            2,
            10,
            0,
            12,
            1,
            0,
            1,
            18,
            0,
            18,
            16,
            6,
            10,
            2,
            6,
            2,
            13,
            6,
            13,
            15,
            2,
            16,
            18,
            2,
            18,
            3,
            2,
            3,
            13,
            18,
            1,
            9,
            18,
            9,
            11,
            18,
            11,
            3,
            4,
            14,
            12,
            4,
            12,
            0,
            4,
            0,
            8,
            11,
            9,
            5,
            11,
            5,
            19,
            11,
            19,
            7,
            19,
            5,
            14,
            19,
            14,
            4,
            19,
            4,
            17,
            1,
            12,
            14,
            1,
            14,
            5,
            1,
            5,
            9
        ];
        super(r, o, e, t);
        this.type = "DodecahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new mr(e.radius, e.detail);
    }
}, ys = new M, vs = new M, Jo = new M, _s = new nt, _a = class extends _e {
    constructor(e = null, t = 1){
        super();
        if (this.type = "EdgesGeometry", this.parameters = {
            geometry: e,
            thresholdAngle: t
        }, e !== null) {
            let i = Math.pow(10, 4), r = Math.cos(Wn * t), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                0,
                0,
                0
            ], h = [
                "a",
                "b",
                "c"
            ], u = new Array(3), d = {}, f = [];
            for(let m = 0; m < l; m += 3){
                o ? (c[0] = o.getX(m), c[1] = o.getX(m + 1), c[2] = o.getX(m + 2)) : (c[0] = m, c[1] = m + 1, c[2] = m + 2);
                let { a: x , b: v , c: g  } = _s;
                if (x.fromBufferAttribute(a, c[0]), v.fromBufferAttribute(a, c[1]), g.fromBufferAttribute(a, c[2]), _s.getNormal(Jo), u[0] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(x.z * i)}`, u[1] = `${Math.round(v.x * i)},${Math.round(v.y * i)},${Math.round(v.z * i)}`, u[2] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(g.z * i)}`, !(u[0] === u[1] || u[1] === u[2] || u[2] === u[0])) for(let p = 0; p < 3; p++){
                    let _ = (p + 1) % 3, y = u[p], b = u[_], A = _s[h[p]], L = _s[h[_]], I = `${y}_${b}`, k = `${b}_${y}`;
                    k in d && d[k] ? (Jo.dot(d[k].normal) <= r && (f.push(A.x, A.y, A.z), f.push(L.x, L.y, L.z)), d[k] = null) : I in d || (d[I] = {
                        index0: c[p],
                        index1: c[_],
                        normal: Jo.clone()
                    });
                }
            }
            for(let m1 in d)if (d[m1]) {
                let { index0: x1 , index1: v1  } = d[m1];
                ys.fromBufferAttribute(a, x1), vs.fromBufferAttribute(a, v1), f.push(ys.x, ys.y, ys.z), f.push(vs.x, vs.y, vs.z);
            }
            this.setAttribute("position", new de(f, 3));
        }
    }
}, Ct = class {
    constructor(){
        this.type = "Curve", this.arcLengthDivisions = 200;
    }
    getPoint() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
    }
    getPointAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        let e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        let t = [], n, i = this.getPoint(0), r = 0;
        t.push(0);
        for(let o = 1; o <= e; o++)n = this.getPoint(o / e), r += n.distanceTo(i), t.push(r), i = n;
        return this.cacheArcLengths = t, t;
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.getLengths();
    }
    getUtoTmapping(e, t) {
        let n = this.getLengths(), i = 0, r = n.length, o;
        t ? o = t : o = e * n[r - 1];
        let a = 0, l = r - 1, c;
        for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = n[i] - o, c < 0) a = i + 1;
        else if (c > 0) l = i - 1;
        else {
            l = i;
            break;
        }
        if (i = l, n[i] === o) return i / (r - 1);
        let h = n[i], d = n[i + 1] - h, f = (o - h) / d;
        return (i + f) / (r - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4, r = e + 1e-4;
        i < 0 && (i = 0), r > 1 && (r = 1);
        let o = this.getPoint(i), a = this.getPoint(r), l = t || (o.isVector2 ? new X : new M);
        return l.copy(a).sub(o).normalize(), l;
    }
    getTangentAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        let n = new M, i = [], r = [], o = [], a = new M, l = new pe;
        for(let f = 0; f <= e; f++){
            let m = f / e;
            i[f] = this.getTangentAt(m, new M);
        }
        r[0] = new M, o[0] = new M;
        let c = Number.MAX_VALUE, h = Math.abs(i[0].x), u = Math.abs(i[0].y), d = Math.abs(i[0].z);
        h <= c && (c = h, n.set(1, 0, 0)), u <= c && (c = u, n.set(0, 1, 0)), d <= c && n.set(0, 0, 1), a.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], a), o[0].crossVectors(i[0], r[0]);
        for(let f1 = 1; f1 <= e; f1++){
            if (r[f1] = r[f1 - 1].clone(), o[f1] = o[f1 - 1].clone(), a.crossVectors(i[f1 - 1], i[f1]), a.length() > Number.EPSILON) {
                a.normalize();
                let m1 = Math.acos(mt(i[f1 - 1].dot(i[f1]), -1, 1));
                r[f1].applyMatrix4(l.makeRotationAxis(a, m1));
            }
            o[f1].crossVectors(i[f1], r[f1]);
        }
        if (t === !0) {
            let f2 = Math.acos(mt(r[0].dot(r[e]), -1, 1));
            f2 /= e, i[0].dot(a.crossVectors(r[0], r[e])) > 0 && (f2 = -f2);
            for(let m2 = 1; m2 <= e; m2++)r[m2].applyMatrix4(l.makeRotationAxis(i[m2], f2 * m2)), o[m2].crossVectors(i[m2], r[m2]);
        }
        return {
            tangents: i,
            normals: r,
            binormals: o
        };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
    }
    fromJSON(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
}, Ur = class extends Ct {
    constructor(e = 0, t = 0, n = 1, i = 1, r = 0, o = Math.PI * 2, a = !1, l = 0){
        super();
        this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
    }
    getPoint(e, t) {
        let n = t || new X, i = Math.PI * 2, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON;
        for(; r < 0;)r += i;
        for(; r > i;)r -= i;
        r < Number.EPSILON && (o ? r = 0 : r = i), this.aClockwise === !0 && !o && (r === i ? r = -i : r = r - i);
        let a = this.aStartAngle + e * r, l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
        if (this.aRotation !== 0) {
            let h = Math.cos(this.aRotation), u = Math.sin(this.aRotation), d = l - this.aX, f = c - this.aY;
            l = d * h - f * u + this.aX, c = d * u + f * h + this.aY;
        }
        return n.set(l, c);
    }
    copy(e) {
        return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
};
Ur.prototype.isEllipseCurve = !0;
var Ma = class extends Ur {
    constructor(e, t, n, i, r, o){
        super(e, t, n, n, i, r, o);
        this.type = "ArcCurve";
    }
};
Ma.prototype.isArcCurve = !0;
function ba() {
    let s = 0, e = 0, t = 0, n = 0;
    function i(r, o, a, l) {
        s = r, e = a, t = -3 * r + 3 * o - 2 * a - l, n = 2 * r - 2 * o + a + l;
    }
    return {
        initCatmullRom: function(r, o, a, l, c) {
            i(o, a, c * (a - r), c * (l - o));
        },
        initNonuniformCatmullRom: function(r, o, a, l, c, h, u) {
            let d = (o - r) / c - (a - r) / (c + h) + (a - o) / h, f = (a - o) / h - (l - o) / (h + u) + (l - a) / u;
            d *= h, f *= h, i(o, a, d, f);
        },
        calc: function(r) {
            let o = r * r, a = o * r;
            return s + e * r + t * o + n * a;
        }
    };
}
var Ms = new M, Yo = new ba, Zo = new ba, $o = new ba, wa = class extends Ct {
    constructor(e = [], t = !1, n = "centripetal", i = .5){
        super();
        this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = n, this.tension = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.points, r = i.length, o = (r - (this.closed ? 0 : 1)) * e, a = Math.floor(o), l = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / r) + 1) * r : l === 0 && a === r - 1 && (a = r - 2, l = 1);
        let c, h;
        this.closed || a > 0 ? c = i[(a - 1) % r] : (Ms.subVectors(i[0], i[1]).add(i[0]), c = Ms);
        let u = i[a % r], d = i[(a + 1) % r];
        if (this.closed || a + 2 < r ? h = i[(a + 2) % r] : (Ms.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), h = Ms), this.curveType === "centripetal" || this.curveType === "chordal") {
            let f = this.curveType === "chordal" ? .5 : .25, m = Math.pow(c.distanceToSquared(u), f), x = Math.pow(u.distanceToSquared(d), f), v = Math.pow(d.distanceToSquared(h), f);
            x < 1e-4 && (x = 1), m < 1e-4 && (m = x), v < 1e-4 && (v = x), Yo.initNonuniformCatmullRom(c.x, u.x, d.x, h.x, m, x, v), Zo.initNonuniformCatmullRom(c.y, u.y, d.y, h.y, m, x, v), $o.initNonuniformCatmullRom(c.z, u.z, d.z, h.z, m, x, v);
        } else this.curveType === "catmullrom" && (Yo.initCatmullRom(c.x, u.x, d.x, h.x, this.tension), Zo.initCatmullRom(c.y, u.y, d.y, h.y, this.tension), $o.initCatmullRom(c.z, u.z, d.z, h.z, this.tension));
        return n.set(Yo.calc(l), Zo.calc(l), $o.calc(l)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new M().fromArray(i));
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
};
wa.prototype.isCatmullRomCurve3 = !0;
function pc(s, e, t, n, i) {
    let r = (n - e) * .5, o = (i - t) * .5, a = s * s, l = s * a;
    return (2 * t - 2 * n + r + o) * l + (-3 * t + 3 * n - 2 * r - o) * a + r * s + t;
}
function Ix(s, e) {
    let t = 1 - s;
    return t * t * e;
}
function Dx(s, e) {
    return 2 * (1 - s) * s * e;
}
function Fx(s, e) {
    return s * s * e;
}
function ar(s, e, t, n) {
    return Ix(s, e) + Dx(s, t) + Fx(s, n);
}
function Nx(s, e) {
    let t = 1 - s;
    return t * t * t * e;
}
function Bx(s, e) {
    let t = 1 - s;
    return 3 * t * t * s * e;
}
function zx(s, e) {
    return 3 * (1 - s) * s * s * e;
}
function Ux(s, e) {
    return s * s * s * e;
}
function lr(s, e, t, n, i) {
    return Nx(s, e) + Bx(s, t) + zx(s, n) + Ux(s, i);
}
var lo = class extends Ct {
    constructor(e = new X, t = new X, n = new X, i = new X){
        super();
        this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
lo.prototype.isCubicBezierCurve = !0;
var Sa = class extends Ct {
    constructor(e = new M, t = new M, n = new M, i = new M){
        super();
        this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y), lr(e, i.z, r.z, o.z, a.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
Sa.prototype.isCubicBezierCurve3 = !0;
var Or = class extends Ct {
    constructor(e = new X, t = new X){
        super();
        this.type = "LineCurve", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new X) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t) {
        let n = t || new X;
        return n.copy(this.v2).sub(this.v1).normalize(), n;
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
Or.prototype.isLineCurve = !0;
var Eh = class extends Ct {
    constructor(e = new M, t = new M){
        super();
        this.type = "LineCurve3", this.isLineCurve3 = !0, this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new M) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, co = class extends Ct {
    constructor(e = new X, t = new X, n = new X){
        super();
        this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
co.prototype.isQuadraticBezierCurve = !0;
var ho = class extends Ct {
    constructor(e = new M, t = new M, n = new M){
        super();
        this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y), ar(e, i.z, r.z, o.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
ho.prototype.isQuadraticBezierCurve3 = !0;
var uo = class extends Ct {
    constructor(e = []){
        super();
        this.type = "SplineCurve", this.points = e;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), a = r - o, l = i[o === 0 ? o : o - 1], c = i[o], h = i[o > i.length - 2 ? i.length - 1 : o + 1], u = i[o > i.length - 3 ? i.length - 1 : o + 2];
        return n.set(pc(a, l.x, c.x, h.x, u.x), pc(a, l.y, c.y, h.y, u.y)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new X().fromArray(i));
        }
        return this;
    }
};
uo.prototype.isSplineCurve = !0;
var Ta = Object.freeze({
    __proto__: null,
    ArcCurve: Ma,
    CatmullRomCurve3: wa,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    EllipseCurve: Ur,
    LineCurve: Or,
    LineCurve3: Eh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    SplineCurve: uo
}), Ah = class extends Ct {
    constructor(){
        super();
        this.type = "CurvePath", this.curves = [], this.autoClose = !1;
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        let e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new Or(t, e));
    }
    getPoint(e, t) {
        let n = e * this.getLength(), i = this.getCurveLengths(), r = 0;
        for(; r < i.length;){
            if (i[r] >= n) {
                let o = i[r] - n, a = this.curves[r], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                return a.getPointAt(c, t);
            }
            r++;
        }
        return null;
    }
    getLength() {
        let e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
    }
    getCurveLengths() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        let e = [], t = 0;
        for(let n = 0, i = this.curves.length; n < i; n++)t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e;
    }
    getSpacedPoints(e = 40) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        let t = [], n;
        for(let i = 0, r = this.curves; i < r.length; i++){
            let o = r[i], a = o && o.isEllipseCurve ? e * 2 : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
            for(let c = 0; c < l.length; c++){
                let h = l[c];
                n && n.equals(h) || (t.push(h), n = h);
            }
        }
        return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
    }
    copy(e) {
        super.copy(e), this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(i.clone());
        }
        return this.autoClose = e.autoClose, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.autoClose = this.autoClose, e.curves = [];
        for(let t = 0, n = this.curves.length; t < n; t++){
            let i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(new Ta[i.type]().fromJSON(i));
        }
        return this;
    }
}, gr = class extends Ah {
    constructor(e){
        super();
        this.type = "Path", this.currentPoint = new X, e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for(let t = 1, n = e.length; t < n; t++)this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        let n = new Or(this.currentPoint.clone(), new X(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        let r = new co(this.currentPoint.clone(), new X(e, t), new X(n, i));
        return this.curves.push(r), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        let a = new lo(this.currentPoint.clone(), new X(e, t), new X(n, i), new X(r, o));
        return this.curves.push(a), this.currentPoint.set(r, o), this;
    }
    splineThru(e) {
        let t = [
            this.currentPoint.clone()
        ].concat(e), n = new uo(t);
        return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this;
    }
    arc(e, t, n, i, r, o) {
        let a = this.currentPoint.x, l = this.currentPoint.y;
        return this.absarc(e + a, t + l, n, i, r, o), this;
    }
    absarc(e, t, n, i, r, o) {
        return this.absellipse(e, t, n, n, i, r, o), this;
    }
    ellipse(e, t, n, i, r, o, a, l) {
        let c = this.currentPoint.x, h = this.currentPoint.y;
        return this.absellipse(e + c, t + h, n, i, r, o, a, l), this;
    }
    absellipse(e, t, n, i, r, o, a, l) {
        let c = new Ur(e, t, n, i, r, o, a, l);
        if (this.curves.length > 0) {
            let u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(c);
        let h = c.getPoint(1);
        return this.currentPoint.copy(h), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.currentPoint = this.currentPoint.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
    }
}, Xt = class extends gr {
    constructor(e){
        super(e);
        this.uuid = Et(), this.type = "Shape", this.holes = [];
    }
    getPointsHoles(e) {
        let t = [];
        for(let n = 0, i = this.holes.length; n < i; n++)t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        };
    }
    copy(e) {
        super.copy(e), this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.uuid = this.uuid, e.holes = [];
        for(let t = 0, n = this.holes.length; t < n; t++){
            let i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(new gr().fromJSON(i));
        }
        return this;
    }
}, Ox = {
    triangulate: function(s, e, t = 2) {
        let n = e && e.length, i = n ? e[0] * t : s.length, r = Ch(s, 0, i, t, !0), o = [];
        if (!r || r.next === r.prev) return o;
        let a, l, c, h, u, d, f;
        if (n && (r = Wx(s, e, r, t)), s.length > 80 * t) {
            a = c = s[0], l = h = s[1];
            for(let m = t; m < i; m += t)u = s[m], d = s[m + 1], u < a && (a = u), d < l && (l = d), u > c && (c = u), d > h && (h = d);
            f = Math.max(c - a, h - l), f = f !== 0 ? 1 / f : 0;
        }
        return xr(r, o, t, a, l, f), o;
    }
};
function Ch(s, e, t, n, i) {
    let r, o;
    if (i === ty(s, e, t, n) > 0) for(r = e; r < t; r += n)o = mc(r, s[r], s[r + 1], o);
    else for(r = t - n; r >= e; r -= n)o = mc(r, s[r], s[r + 1], o);
    return o && fo(o, o.next) && (vr(o), o = o.next), o;
}
function Tn(s, e) {
    if (!s) return s;
    e || (e = s);
    let t = s, n;
    do if (n = !1, !t.steiner && (fo(t, t.next) || $e(t.prev, t, t.next) === 0)) {
        if (vr(t), t = e = t.prev, t === t.next) break;
        n = !0;
    } else t = t.next;
    while (n || t !== e)
    return e;
}
function xr(s, e, t, n, i, r, o) {
    if (!s) return;
    !o && r && Zx(s, n, i, r);
    let a = s, l, c;
    for(; s.prev !== s.next;){
        if (l = s.prev, c = s.next, r ? kx(s, n, i, r) : Hx(s)) {
            e.push(l.i / t), e.push(s.i / t), e.push(c.i / t), vr(s), s = c.next, a = c.next;
            continue;
        }
        if (s = c, s === a) {
            o ? o === 1 ? (s = Gx(Tn(s), e, t), xr(s, e, t, n, i, r, 2)) : o === 2 && Vx(s, e, t, n, i, r) : xr(Tn(s), e, t, n, i, r, 1);
            break;
        }
    }
}
function Hx(s) {
    let e = s.prev, t = s, n = s.next;
    if ($e(e, t, n) >= 0) return !1;
    let i = s.next.next;
    for(; i !== s.prev;){
        if (Si(e.x, e.y, t.x, t.y, n.x, n.y, i.x, i.y) && $e(i.prev, i, i.next) >= 0) return !1;
        i = i.next;
    }
    return !0;
}
function kx(s, e, t, n) {
    let i = s.prev, r = s, o = s.next;
    if ($e(i, r, o) >= 0) return !1;
    let a = i.x < r.x ? i.x < o.x ? i.x : o.x : r.x < o.x ? r.x : o.x, l = i.y < r.y ? i.y < o.y ? i.y : o.y : r.y < o.y ? r.y : o.y, c = i.x > r.x ? i.x > o.x ? i.x : o.x : r.x > o.x ? r.x : o.x, h = i.y > r.y ? i.y > o.y ? i.y : o.y : r.y > o.y ? r.y : o.y, u = oa(a, l, e, t, n), d = oa(c, h, e, t, n), f = s.prevZ, m = s.nextZ;
    for(; f && f.z >= u && m && m.z <= d;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0 || (f = f.prevZ, m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0)) return !1;
        m = m.nextZ;
    }
    for(; f && f.z >= u;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0) return !1;
        f = f.prevZ;
    }
    for(; m && m.z <= d;){
        if (m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0) return !1;
        m = m.nextZ;
    }
    return !0;
}
function Gx(s, e, t) {
    let n = s;
    do {
        let i = n.prev, r = n.next.next;
        !fo(i, r) && Lh(i, n, n.next, r) && yr(i, r) && yr(r, i) && (e.push(i.i / t), e.push(n.i / t), e.push(r.i / t), vr(n), vr(n.next), n = s = r), n = n.next;
    }while (n !== s)
    return Tn(n);
}
function Vx(s, e, t, n, i, r) {
    let o = s;
    do {
        let a = o.next.next;
        for(; a !== o.prev;){
            if (o.i !== a.i && Qx(o, a)) {
                let l = Rh(o, a);
                o = Tn(o, o.next), l = Tn(l, l.next), xr(o, e, t, n, i, r), xr(l, e, t, n, i, r);
                return;
            }
            a = a.next;
        }
        o = o.next;
    }while (o !== s)
}
function Wx(s, e, t, n) {
    let i = [], r, o, a, l, c;
    for(r = 0, o = e.length; r < o; r++)a = e[r] * n, l = r < o - 1 ? e[r + 1] * n : s.length, c = Ch(s, a, l, n, !1), c === c.next && (c.steiner = !0), i.push(jx(c));
    for(i.sort(qx), r = 0; r < i.length; r++)Xx(i[r], t), t = Tn(t, t.next);
    return t;
}
function qx(s, e) {
    return s.x - e.x;
}
function Xx(s, e) {
    if (e = Jx(s, e), e) {
        let t = Rh(e, s);
        Tn(e, e.next), Tn(t, t.next);
    }
}
function Jx(s, e) {
    let t = e, n = s.x, i = s.y, r = -1 / 0, o;
    do {
        if (i <= t.y && i >= t.next.y && t.next.y !== t.y) {
            let d = t.x + (i - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
            if (d <= n && d > r) {
                if (r = d, d === n) {
                    if (i === t.y) return t;
                    if (i === t.next.y) return t.next;
                }
                o = t.x < t.next.x ? t : t.next;
            }
        }
        t = t.next;
    }while (t !== e)
    if (!o) return null;
    if (n === r) return o;
    let a = o, l = o.x, c = o.y, h = 1 / 0, u;
    t = o;
    do n >= t.x && t.x >= l && n !== t.x && Si(i < c ? n : r, i, l, c, i < c ? r : n, i, t.x, t.y) && (u = Math.abs(i - t.y) / (n - t.x), yr(t, s) && (u < h || u === h && (t.x > o.x || t.x === o.x && Yx(o, t))) && (o = t, h = u)), t = t.next;
    while (t !== a)
    return o;
}
function Yx(s, e) {
    return $e(s.prev, s, e.prev) < 0 && $e(e.next, s, s.next) < 0;
}
function Zx(s, e, t, n) {
    let i = s;
    do i.z === null && (i.z = oa(i.x, i.y, e, t, n)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
    while (i !== s)
    i.prevZ.nextZ = null, i.prevZ = null, $x(i);
}
function $x(s) {
    let e, t, n, i, r, o, a, l, c = 1;
    do {
        for(t = s, s = null, r = null, o = 0; t;){
            for(o++, n = t, a = 0, e = 0; e < c && (a++, n = n.nextZ, !!n); e++);
            for(l = c; a > 0 || l > 0 && n;)a !== 0 && (l === 0 || !n || t.z <= n.z) ? (i = t, t = t.nextZ, a--) : (i = n, n = n.nextZ, l--), r ? r.nextZ = i : s = i, i.prevZ = r, r = i;
            t = n;
        }
        r.nextZ = null, c *= 2;
    }while (o > 1)
    return s;
}
function oa(s, e, t, n, i) {
    return s = 32767 * (s - t) * i, e = 32767 * (e - n) * i, s = (s | s << 8) & 16711935, s = (s | s << 4) & 252645135, s = (s | s << 2) & 858993459, s = (s | s << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, s | e << 1;
}
function jx(s) {
    let e = s, t = s;
    do (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
    while (e !== s)
    return t;
}
function Si(s, e, t, n, i, r, o, a) {
    return (i - o) * (e - a) - (s - o) * (r - a) >= 0 && (s - o) * (n - a) - (t - o) * (e - a) >= 0 && (t - o) * (r - a) - (i - o) * (n - a) >= 0;
}
function Qx(s, e) {
    return s.next.i !== e.i && s.prev.i !== e.i && !Kx(s, e) && (yr(s, e) && yr(e, s) && ey(s, e) && ($e(s.prev, s, e.prev) || $e(s, e.prev, e)) || fo(s, e) && $e(s.prev, s, s.next) > 0 && $e(e.prev, e, e.next) > 0);
}
function $e(s, e, t) {
    return (e.y - s.y) * (t.x - e.x) - (e.x - s.x) * (t.y - e.y);
}
function fo(s, e) {
    return s.x === e.x && s.y === e.y;
}
function Lh(s, e, t, n) {
    let i = ws($e(s, e, t)), r = ws($e(s, e, n)), o = ws($e(t, n, s)), a = ws($e(t, n, e));
    return !!(i !== r && o !== a || i === 0 && bs(s, t, e) || r === 0 && bs(s, n, e) || o === 0 && bs(t, s, n) || a === 0 && bs(t, e, n));
}
function bs(s, e, t) {
    return e.x <= Math.max(s.x, t.x) && e.x >= Math.min(s.x, t.x) && e.y <= Math.max(s.y, t.y) && e.y >= Math.min(s.y, t.y);
}
function ws(s) {
    return s > 0 ? 1 : s < 0 ? -1 : 0;
}
function Kx(s, e) {
    let t = s;
    do {
        if (t.i !== s.i && t.next.i !== s.i && t.i !== e.i && t.next.i !== e.i && Lh(t, t.next, s, e)) return !0;
        t = t.next;
    }while (t !== s)
    return !1;
}
function yr(s, e) {
    return $e(s.prev, s, s.next) < 0 ? $e(s, e, s.next) >= 0 && $e(s, s.prev, e) >= 0 : $e(s, e, s.prev) < 0 || $e(s, s.next, e) < 0;
}
function ey(s, e) {
    let t = s, n = !1, i = (s.x + e.x) / 2, r = (s.y + e.y) / 2;
    do t.y > r != t.next.y > r && t.next.y !== t.y && i < (t.next.x - t.x) * (r - t.y) / (t.next.y - t.y) + t.x && (n = !n), t = t.next;
    while (t !== s)
    return n;
}
function Rh(s, e) {
    let t = new aa(s.i, s.x, s.y), n = new aa(e.i, e.x, e.y), i = s.next, r = e.prev;
    return s.next = e, e.prev = s, t.next = i, i.prev = t, n.next = t, t.prev = n, r.next = n, n.prev = r, n;
}
function mc(s, e, t, n) {
    let i = new aa(s, e, t);
    return n ? (i.next = n.next, i.prev = n, n.next.prev = i, n.next = i) : (i.prev = i, i.next = i), i;
}
function vr(s) {
    s.next.prev = s.prev, s.prev.next = s.next, s.prevZ && (s.prevZ.nextZ = s.nextZ), s.nextZ && (s.nextZ.prevZ = s.prevZ);
}
function aa(s, e, t) {
    this.i = s, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function ty(s, e, t, n) {
    let i = 0;
    for(let r = e, o = t - n; r < t; r += n)i += (s[o] - s[r]) * (s[r + 1] + s[o + 1]), o = r;
    return i;
}
var Jt = class {
    static area(e) {
        let t = e.length, n = 0;
        for(let i = t - 1, r = 0; r < t; i = r++)n += e[i].x * e[r].y - e[r].x * e[i].y;
        return n * .5;
    }
    static isClockWise(e) {
        return Jt.area(e) < 0;
    }
    static triangulateShape(e, t) {
        let n = [], i = [], r = [];
        gc(e), xc(n, e);
        let o = e.length;
        t.forEach(gc);
        for(let l = 0; l < t.length; l++)i.push(o), o += t[l].length, xc(n, t[l]);
        let a = Ox.triangulate(n, i);
        for(let l1 = 0; l1 < a.length; l1 += 3)r.push(a.slice(l1, l1 + 3));
        return r;
    }
};
function gc(s) {
    let e = s.length;
    e > 2 && s[e - 1].equals(s[0]) && s.pop();
}
function xc(s, e) {
    for(let t = 0; t < e.length; t++)s.push(e[t].x), s.push(e[t].y);
}
var ln = class extends _e {
    constructor(e = new Xt([
        new X(.5, .5),
        new X(-.5, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = {}){
        super();
        this.type = "ExtrudeGeometry", this.parameters = {
            shapes: e,
            options: t
        }, e = Array.isArray(e) ? e : [
            e
        ];
        let n = this, i = [], r = [];
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a];
            o(c);
        }
        this.setAttribute("position", new de(i, 3)), this.setAttribute("uv", new de(r, 2)), this.computeVertexNormals();
        function o(a) {
            let l = [], c = t.curveSegments !== void 0 ? t.curveSegments : 12, h = t.steps !== void 0 ? t.steps : 1, u = t.depth !== void 0 ? t.depth : 1, d = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, f = t.bevelThickness !== void 0 ? t.bevelThickness : .2, m = t.bevelSize !== void 0 ? t.bevelSize : f - .1, x = t.bevelOffset !== void 0 ? t.bevelOffset : 0, v = t.bevelSegments !== void 0 ? t.bevelSegments : 3, g = t.extrudePath, p = t.UVGenerator !== void 0 ? t.UVGenerator : ny;
            t.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), u = t.amount);
            let _, y = !1, b, A, L, I;
            g && (_ = g.getSpacedPoints(h), y = !0, d = !1, b = g.computeFrenetFrames(h, !1), A = new M, L = new M, I = new M), d || (v = 0, f = 0, m = 0, x = 0);
            let k = a.extractPoints(c), B = k.shape, P = k.holes;
            if (!Jt.isClockWise(B)) {
                B = B.reverse();
                for(let G = 0, j = P.length; G < j; G++){
                    let K = P[G];
                    Jt.isClockWise(K) && (P[G] = K.reverse());
                }
            }
            let E = Jt.triangulateShape(B, P), D = B;
            for(let G1 = 0, j1 = P.length; G1 < j1; G1++){
                let K1 = P[G1];
                B = B.concat(K1);
            }
            function U(G, j, K) {
                return j || console.error("THREE.ExtrudeGeometry: vec does not exist"), j.clone().multiplyScalar(K).add(G);
            }
            let F = B.length, O = E.length;
            function ne(G, j, K) {
                let ue, se, Se, Te = G.x - j.x, Pe = G.y - j.y, Ye = K.x - G.x, C = K.y - G.y, T = Te * Te + Pe * Pe, J = Te * C - Pe * Ye;
                if (Math.abs(J) > Number.EPSILON) {
                    let $ = Math.sqrt(T), re = Math.sqrt(Ye * Ye + C * C), Z = j.x - Pe / $, Me = j.y + Te / $, ve = K.x - C / re, te = K.y + Ye / re, R = ((ve - Z) * C - (te - Me) * Ye) / (Te * C - Pe * Ye);
                    ue = Z + Te * R - G.x, se = Me + Pe * R - G.y;
                    let ee = ue * ue + se * se;
                    if (ee <= 2) return new X(ue, se);
                    Se = Math.sqrt(ee / 2);
                } else {
                    let $1 = !1;
                    Te > Number.EPSILON ? Ye > Number.EPSILON && ($1 = !0) : Te < -Number.EPSILON ? Ye < -Number.EPSILON && ($1 = !0) : Math.sign(Pe) === Math.sign(C) && ($1 = !0), $1 ? (ue = -Pe, se = Te, Se = Math.sqrt(T)) : (ue = Te, se = Pe, Se = Math.sqrt(T / 2));
                }
                return new X(ue / Se, se / Se);
            }
            let ce = [];
            for(let G2 = 0, j2 = D.length, K2 = j2 - 1, ue = G2 + 1; G2 < j2; G2++, K2++, ue++)K2 === j2 && (K2 = 0), ue === j2 && (ue = 0), ce[G2] = ne(D[G2], D[K2], D[ue]);
            let V = [], W, he = ce.concat();
            for(let G3 = 0, j3 = P.length; G3 < j3; G3++){
                let K3 = P[G3];
                W = [];
                for(let ue1 = 0, se = K3.length, Se = se - 1, Te = ue1 + 1; ue1 < se; ue1++, Se++, Te++)Se === se && (Se = 0), Te === se && (Te = 0), W[ue1] = ne(K3[ue1], K3[Se], K3[Te]);
                V.push(W), he = he.concat(W);
            }
            for(let G4 = 0; G4 < v; G4++){
                let j4 = G4 / v, K4 = f * Math.cos(j4 * Math.PI / 2), ue2 = m * Math.sin(j4 * Math.PI / 2) + x;
                for(let se1 = 0, Se1 = D.length; se1 < Se1; se1++){
                    let Te1 = U(D[se1], ce[se1], ue2);
                    Ce(Te1.x, Te1.y, -K4);
                }
                for(let se2 = 0, Se2 = P.length; se2 < Se2; se2++){
                    let Te2 = P[se2];
                    W = V[se2];
                    for(let Pe = 0, Ye = Te2.length; Pe < Ye; Pe++){
                        let C = U(Te2[Pe], W[Pe], ue2);
                        Ce(C.x, C.y, -K4);
                    }
                }
            }
            let le = m + x;
            for(let G5 = 0; G5 < F; G5++){
                let j5 = d ? U(B[G5], he[G5], le) : B[G5];
                y ? (L.copy(b.normals[0]).multiplyScalar(j5.x), A.copy(b.binormals[0]).multiplyScalar(j5.y), I.copy(_[0]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(j5.x, j5.y, 0);
            }
            for(let G6 = 1; G6 <= h; G6++)for(let j6 = 0; j6 < F; j6++){
                let K5 = d ? U(B[j6], he[j6], le) : B[j6];
                y ? (L.copy(b.normals[G6]).multiplyScalar(K5.x), A.copy(b.binormals[G6]).multiplyScalar(K5.y), I.copy(_[G6]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(K5.x, K5.y, u / h * G6);
            }
            for(let G7 = v - 1; G7 >= 0; G7--){
                let j7 = G7 / v, K6 = f * Math.cos(j7 * Math.PI / 2), ue3 = m * Math.sin(j7 * Math.PI / 2) + x;
                for(let se3 = 0, Se3 = D.length; se3 < Se3; se3++){
                    let Te3 = U(D[se3], ce[se3], ue3);
                    Ce(Te3.x, Te3.y, u + K6);
                }
                for(let se4 = 0, Se4 = P.length; se4 < Se4; se4++){
                    let Te4 = P[se4];
                    W = V[se4];
                    for(let Pe1 = 0, Ye1 = Te4.length; Pe1 < Ye1; Pe1++){
                        let C1 = U(Te4[Pe1], W[Pe1], ue3);
                        y ? Ce(C1.x, C1.y + _[h - 1].y, _[h - 1].x + K6) : Ce(C1.x, C1.y, u + K6);
                    }
                }
            }
            fe(), Be();
            function fe() {
                let G = i.length / 3;
                if (d) {
                    let j = 0, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[2] + K, se[1] + K, se[0] + K);
                    }
                    j = h + v * 2, K = F * j;
                    for(let ue1 = 0; ue1 < O; ue1++){
                        let se1 = E[ue1];
                        ye(se1[0] + K, se1[1] + K, se1[2] + K);
                    }
                } else {
                    for(let j1 = 0; j1 < O; j1++){
                        let K1 = E[j1];
                        ye(K1[2], K1[1], K1[0]);
                    }
                    for(let j2 = 0; j2 < O; j2++){
                        let K2 = E[j2];
                        ye(K2[0] + F * h, K2[1] + F * h, K2[2] + F * h);
                    }
                }
                n.addGroup(G, i.length / 3 - G, 0);
            }
            function Be() {
                let G = i.length / 3, j = 0;
                Y(D, j), j += D.length;
                for(let K = 0, ue = P.length; K < ue; K++){
                    let se = P[K];
                    Y(se, j), j += se.length;
                }
                n.addGroup(G, i.length / 3 - G, 1);
            }
            function Y(G, j) {
                let K = G.length;
                for(; --K >= 0;){
                    let ue = K, se = K - 1;
                    se < 0 && (se = G.length - 1);
                    for(let Se = 0, Te = h + v * 2; Se < Te; Se++){
                        let Pe = F * Se, Ye = F * (Se + 1), C = j + ue + Pe, T = j + se + Pe, J = j + se + Ye, $ = j + ue + Ye;
                        ge(C, T, J, $);
                    }
                }
            }
            function Ce(G, j, K) {
                l.push(G), l.push(j), l.push(K);
            }
            function ye(G, j, K) {
                xe(G), xe(j), xe(K);
                let ue = i.length / 3, se = p.generateTopUV(n, i, ue - 3, ue - 2, ue - 1);
                Oe(se[0]), Oe(se[1]), Oe(se[2]);
            }
            function ge(G, j, K, ue) {
                xe(G), xe(j), xe(ue), xe(j), xe(K), xe(ue);
                let se = i.length / 3, Se = p.generateSideWallUV(n, i, se - 6, se - 3, se - 2, se - 1);
                Oe(Se[0]), Oe(Se[1]), Oe(Se[3]), Oe(Se[1]), Oe(Se[2]), Oe(Se[3]);
            }
            function xe(G) {
                i.push(l[G * 3 + 0]), i.push(l[G * 3 + 1]), i.push(l[G * 3 + 2]);
            }
            function Oe(G) {
                r.push(G.x), r.push(G.y);
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes, n = this.parameters.options;
        return iy(t, n, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let r = 0, o = e.shapes.length; r < o; r++){
            let a = t[e.shapes[r]];
            n.push(a);
        }
        let i = e.options.extrudePath;
        return i !== void 0 && (e.options.extrudePath = new Ta[i.type]().fromJSON(i)), new ln(n, e.options);
    }
}, ny = {
    generateTopUV: function(s, e, t, n, i) {
        let r = e[t * 3], o = e[t * 3 + 1], a = e[n * 3], l = e[n * 3 + 1], c = e[i * 3], h = e[i * 3 + 1];
        return [
            new X(r, o),
            new X(a, l),
            new X(c, h)
        ];
    },
    generateSideWallUV: function(s, e, t, n, i, r) {
        let o = e[t * 3], a = e[t * 3 + 1], l = e[t * 3 + 2], c = e[n * 3], h = e[n * 3 + 1], u = e[n * 3 + 2], d = e[i * 3], f = e[i * 3 + 1], m = e[i * 3 + 2], x = e[r * 3], v = e[r * 3 + 1], g = e[r * 3 + 2];
        return Math.abs(a - h) < Math.abs(o - c) ? [
            new X(o, 1 - l),
            new X(c, 1 - u),
            new X(d, 1 - m),
            new X(x, 1 - g)
        ] : [
            new X(a, 1 - l),
            new X(h, 1 - u),
            new X(f, 1 - m),
            new X(v, 1 - g)
        ];
    }
};
function iy(s, e, t) {
    if (t.shapes = [], Array.isArray(s)) for(let n = 0, i = s.length; n < i; n++){
        let r = s[n];
        t.shapes.push(r.uuid);
    }
    else t.shapes.push(s.uuid);
    return e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
var _r = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = [
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            0,
            0,
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            n,
            0,
            -1,
            n,
            0,
            1,
            -n,
            0,
            -1,
            -n,
            0,
            1
        ], r = [
            0,
            11,
            5,
            0,
            5,
            1,
            0,
            1,
            7,
            0,
            7,
            10,
            0,
            10,
            11,
            1,
            5,
            9,
            5,
            11,
            4,
            11,
            10,
            2,
            10,
            7,
            6,
            7,
            1,
            8,
            3,
            9,
            4,
            3,
            4,
            2,
            3,
            2,
            6,
            3,
            6,
            8,
            3,
            8,
            9,
            4,
            9,
            5,
            2,
            4,
            11,
            6,
            2,
            10,
            8,
            6,
            7,
            9,
            8,
            1
        ];
        super(i, r, e, t);
        this.type = "IcosahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new _r(e.radius, e.detail);
    }
}, Mr = class extends _e {
    constructor(e = [
        new X(0, .5),
        new X(.5, 0),
        new X(0, -.5)
    ], t = 12, n = 0, i = Math.PI * 2){
        super();
        this.type = "LatheGeometry", this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: i
        }, t = Math.floor(t), i = mt(i, 0, Math.PI * 2);
        let r = [], o = [], a = [], l = [], c = [], h = 1 / t, u = new M, d = new X, f = new M, m = new M, x = new M, v = 0, g = 0;
        for(let p = 0; p <= e.length - 1; p++)switch(p){
            case 0:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, x.copy(f), f.normalize(), l.push(f.x, f.y, f.z);
                break;
            case e.length - 1:
                l.push(x.x, x.y, x.z);
                break;
            default:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, m.copy(f), f.x += x.x, f.y += x.y, f.z += x.z, f.normalize(), l.push(f.x, f.y, f.z), x.copy(m);
        }
        for(let p1 = 0; p1 <= t; p1++){
            let _ = n + p1 * h * i, y = Math.sin(_), b = Math.cos(_);
            for(let A = 0; A <= e.length - 1; A++){
                u.x = e[A].x * y, u.y = e[A].y, u.z = e[A].x * b, o.push(u.x, u.y, u.z), d.x = p1 / t, d.y = A / (e.length - 1), a.push(d.x, d.y);
                let L = l[3 * A + 0] * y, I = l[3 * A + 1], k = l[3 * A + 0] * b;
                c.push(L, I, k);
            }
        }
        for(let p2 = 0; p2 < t; p2++)for(let _1 = 0; _1 < e.length - 1; _1++){
            let y1 = _1 + p2 * e.length, b1 = y1, A1 = y1 + e.length, L1 = y1 + e.length + 1, I1 = y1 + 1;
            r.push(b1, A1, I1), r.push(A1, L1, I1);
        }
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("uv", new de(a, 2)), this.setAttribute("normal", new de(c, 3));
    }
    static fromJSON(e) {
        return new Mr(e.points, e.segments, e.phiStart, e.phiLength);
    }
}, Ii = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1
        ], i = [
            0,
            2,
            4,
            0,
            4,
            3,
            0,
            3,
            5,
            0,
            5,
            2,
            1,
            2,
            5,
            1,
            5,
            3,
            1,
            3,
            4,
            1,
            4,
            2
        ];
        super(n, i, e, t);
        this.type = "OctahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new Ii(e.radius, e.detail);
    }
}, br = class extends _e {
    constructor(e = .5, t = 1, n = 8, i = 1, r = 0, o = Math.PI * 2){
        super();
        this.type = "RingGeometry", this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: o
        }, n = Math.max(3, n), i = Math.max(1, i);
        let a = [], l = [], c = [], h = [], u = e, d = (t - e) / i, f = new M, m = new X;
        for(let x = 0; x <= i; x++){
            for(let v = 0; v <= n; v++){
                let g = r + v / n * o;
                f.x = u * Math.cos(g), f.y = u * Math.sin(g), l.push(f.x, f.y, f.z), c.push(0, 0, 1), m.x = (f.x / t + 1) / 2, m.y = (f.y / t + 1) / 2, h.push(m.x, m.y);
            }
            u += d;
        }
        for(let x1 = 0; x1 < i; x1++){
            let v1 = x1 * (n + 1);
            for(let g1 = 0; g1 < n; g1++){
                let p = g1 + v1, _ = p, y = p + n + 1, b = p + n + 2, A = p + 1;
                a.push(_, y, A), a.push(y, b, A);
            }
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
    }
    static fromJSON(e) {
        return new br(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
    }
}, Di = class extends _e {
    constructor(e = new Xt([
        new X(0, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = 12){
        super();
        this.type = "ShapeGeometry", this.parameters = {
            shapes: e,
            curveSegments: t
        };
        let n = [], i = [], r = [], o = [], a = 0, l = 0;
        if (Array.isArray(e) === !1) c(e);
        else for(let h = 0; h < e.length; h++)c(e[h]), this.addGroup(a, l, h), a += l, l = 0;
        this.setIndex(n), this.setAttribute("position", new de(i, 3)), this.setAttribute("normal", new de(r, 3)), this.setAttribute("uv", new de(o, 2));
        function c(h) {
            let u = i.length / 3, d = h.extractPoints(t), f = d.shape, m = d.holes;
            Jt.isClockWise(f) === !1 && (f = f.reverse());
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                Jt.isClockWise(p) === !0 && (m[v] = p.reverse());
            }
            let x = Jt.triangulateShape(f, m);
            for(let v1 = 0, g1 = m.length; v1 < g1; v1++){
                let p1 = m[v1];
                f = f.concat(p1);
            }
            for(let v2 = 0, g2 = f.length; v2 < g2; v2++){
                let p2 = f[v2];
                i.push(p2.x, p2.y, 0), r.push(0, 0, 1), o.push(p2.x, p2.y);
            }
            for(let v3 = 0, g3 = x.length; v3 < g3; v3++){
                let p3 = x[v3], _ = p3[0] + u, y = p3[1] + u, b = p3[2] + u;
                n.push(_, y, b), l += 3;
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes;
        return ry(t, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let i = 0, r = e.shapes.length; i < r; i++){
            let o = t[e.shapes[i]];
            n.push(o);
        }
        return new Di(n, e.curveSegments);
    }
};
function ry(s, e) {
    if (e.shapes = [], Array.isArray(s)) for(let t = 0, n = s.length; t < n; t++){
        let i = s[t];
        e.shapes.push(i.uuid);
    }
    else e.shapes.push(s.uuid);
    return e;
}
var Fi = class extends _e {
    constructor(e = 1, t = 32, n = 16, i = 0, r = Math.PI * 2, o = 0, a = Math.PI){
        super();
        this.type = "SphereGeometry", this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: o,
            thetaLength: a
        }, t = Math.max(3, Math.floor(t)), n = Math.max(2, Math.floor(n));
        let l = Math.min(o + a, Math.PI), c = 0, h = [], u = new M, d = new M, f = [], m = [], x = [], v = [];
        for(let g = 0; g <= n; g++){
            let p = [], _ = g / n, y = 0;
            g == 0 && o == 0 ? y = .5 / t : g == n && l == Math.PI && (y = -.5 / t);
            for(let b = 0; b <= t; b++){
                let A = b / t;
                u.x = -e * Math.cos(i + A * r) * Math.sin(o + _ * a), u.y = e * Math.cos(o + _ * a), u.z = e * Math.sin(i + A * r) * Math.sin(o + _ * a), m.push(u.x, u.y, u.z), d.copy(u).normalize(), x.push(d.x, d.y, d.z), v.push(A + y, 1 - _), p.push(c++);
            }
            h.push(p);
        }
        for(let g1 = 0; g1 < n; g1++)for(let p1 = 0; p1 < t; p1++){
            let _1 = h[g1][p1 + 1], y1 = h[g1][p1], b1 = h[g1 + 1][p1], A1 = h[g1 + 1][p1 + 1];
            (g1 !== 0 || o > 0) && f.push(_1, y1, A1), (g1 !== n - 1 || l < Math.PI) && f.push(y1, b1, A1);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Fi(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
    }
}, wr = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            1,
            -1,
            -1
        ], i = [
            2,
            1,
            0,
            0,
            3,
            2,
            1,
            3,
            0,
            2,
            3,
            1
        ];
        super(n, i, e, t);
        this.type = "TetrahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new wr(e.radius, e.detail);
    }
}, Sr = class extends _e {
    constructor(e = 1, t = .4, n = 8, i = 6, r = Math.PI * 2){
        super();
        this.type = "TorusGeometry", this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        }, n = Math.floor(n), i = Math.floor(i);
        let o = [], a = [], l = [], c = [], h = new M, u = new M, d = new M;
        for(let f = 0; f <= n; f++)for(let m = 0; m <= i; m++){
            let x = m / i * r, v = f / n * Math.PI * 2;
            u.x = (e + t * Math.cos(v)) * Math.cos(x), u.y = (e + t * Math.cos(v)) * Math.sin(x), u.z = t * Math.sin(v), a.push(u.x, u.y, u.z), h.x = e * Math.cos(x), h.y = e * Math.sin(x), d.subVectors(u, h).normalize(), l.push(d.x, d.y, d.z), c.push(m / i), c.push(f / n);
        }
        for(let f1 = 1; f1 <= n; f1++)for(let m1 = 1; m1 <= i; m1++){
            let x1 = (i + 1) * f1 + m1 - 1, v1 = (i + 1) * (f1 - 1) + m1 - 1, g = (i + 1) * (f1 - 1) + m1, p = (i + 1) * f1 + m1;
            o.push(x1, v1, p), o.push(v1, g, p);
        }
        this.setIndex(o), this.setAttribute("position", new de(a, 3)), this.setAttribute("normal", new de(l, 3)), this.setAttribute("uv", new de(c, 2));
    }
    static fromJSON(e) {
        return new Sr(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
    }
}, Tr = class extends _e {
    constructor(e = 1, t = .4, n = 64, i = 8, r = 2, o = 3){
        super();
        this.type = "TorusKnotGeometry", this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: o
        }, n = Math.floor(n), i = Math.floor(i);
        let a = [], l = [], c = [], h = [], u = new M, d = new M, f = new M, m = new M, x = new M, v = new M, g = new M;
        for(let _ = 0; _ <= n; ++_){
            let y = _ / n * r * Math.PI * 2;
            p(y, r, o, e, f), p(y + .01, r, o, e, m), v.subVectors(m, f), g.addVectors(m, f), x.crossVectors(v, g), g.crossVectors(x, v), x.normalize(), g.normalize();
            for(let b = 0; b <= i; ++b){
                let A = b / i * Math.PI * 2, L = -t * Math.cos(A), I = t * Math.sin(A);
                u.x = f.x + (L * g.x + I * x.x), u.y = f.y + (L * g.y + I * x.y), u.z = f.z + (L * g.z + I * x.z), l.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), c.push(d.x, d.y, d.z), h.push(_ / n), h.push(b / i);
            }
        }
        for(let _1 = 1; _1 <= n; _1++)for(let y1 = 1; y1 <= i; y1++){
            let b1 = (i + 1) * (_1 - 1) + (y1 - 1), A1 = (i + 1) * _1 + (y1 - 1), L1 = (i + 1) * _1 + y1, I1 = (i + 1) * (_1 - 1) + y1;
            a.push(b1, A1, I1), a.push(A1, L1, I1);
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
        function p(_, y, b, A, L) {
            let I = Math.cos(_), k = Math.sin(_), B = b / y * _, P = Math.cos(B);
            L.x = A * (2 + P) * .5 * I, L.y = A * (2 + P) * k * .5, L.z = A * Math.sin(B) * .5;
        }
    }
    static fromJSON(e) {
        return new Tr(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
    }
}, Er = class extends _e {
    constructor(e = new ho(new M(-1, -1, 0), new M(-1, 1, 0), new M(1, 1, 0)), t = 64, n = 1, i = 8, r = !1){
        super();
        this.type = "TubeGeometry", this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: i,
            closed: r
        };
        let o = e.computeFrenetFrames(t, r);
        this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
        let a = new M, l = new M, c = new X, h = new M, u = [], d = [], f = [], m = [];
        x(), this.setIndex(m), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function x() {
            for(let _ = 0; _ < t; _++)v(_);
            v(r === !1 ? t : 0), p(), g();
        }
        function v(_) {
            h = e.getPointAt(_ / t, h);
            let y = o.normals[_], b = o.binormals[_];
            for(let A = 0; A <= i; A++){
                let L = A / i * Math.PI * 2, I = Math.sin(L), k = -Math.cos(L);
                l.x = k * y.x + I * b.x, l.y = k * y.y + I * b.y, l.z = k * y.z + I * b.z, l.normalize(), d.push(l.x, l.y, l.z), a.x = h.x + n * l.x, a.y = h.y + n * l.y, a.z = h.z + n * l.z, u.push(a.x, a.y, a.z);
            }
        }
        function g() {
            for(let _ = 1; _ <= t; _++)for(let y = 1; y <= i; y++){
                let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
                m.push(b, A, I), m.push(A, L, I);
            }
        }
        function p() {
            for(let _ = 0; _ <= t; _++)for(let y = 0; y <= i; y++)c.x = _ / t, c.y = y / i, f.push(c.x, c.y);
        }
    }
    toJSON() {
        let e = super.toJSON();
        return e.path = this.parameters.path.toJSON(), e;
    }
    static fromJSON(e) {
        return new Er(new Ta[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
    }
}, Ea = class extends _e {
    constructor(e = null){
        super();
        if (this.type = "WireframeGeometry", this.parameters = {
            geometry: e
        }, e !== null) {
            let t = [], n = new Set, i = new M, r = new M;
            if (e.index !== null) {
                let o = e.attributes.position, a = e.index, l = e.groups;
                l.length === 0 && (l = [
                    {
                        start: 0,
                        count: a.count,
                        materialIndex: 0
                    }
                ]);
                for(let c = 0, h = l.length; c < h; ++c){
                    let u = l[c], d = u.start, f = u.count;
                    for(let m = d, x = d + f; m < x; m += 3)for(let v = 0; v < 3; v++){
                        let g = a.getX(m + v), p = a.getX(m + (v + 1) % 3);
                        i.fromBufferAttribute(o, g), r.fromBufferAttribute(o, p), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                    }
                }
            } else {
                let o1 = e.attributes.position;
                for(let a1 = 0, l1 = o1.count / 3; a1 < l1; a1++)for(let c1 = 0; c1 < 3; c1++){
                    let h1 = 3 * a1 + c1, u1 = 3 * a1 + (c1 + 1) % 3;
                    i.fromBufferAttribute(o1, h1), r.fromBufferAttribute(o1, u1), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                }
            }
            this.setAttribute("position", new de(t, 3));
        }
    }
};
function yc(s, e, t) {
    let n = `${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n, i), !0);
}
var vc = Object.freeze({
    __proto__: null,
    BoxGeometry: wn,
    BoxBufferGeometry: wn,
    CircleGeometry: fr,
    CircleBufferGeometry: fr,
    ConeGeometry: pr,
    ConeBufferGeometry: pr,
    CylinderGeometry: Jn,
    CylinderBufferGeometry: Jn,
    DodecahedronGeometry: mr,
    DodecahedronBufferGeometry: mr,
    EdgesGeometry: _a,
    ExtrudeGeometry: ln,
    ExtrudeBufferGeometry: ln,
    IcosahedronGeometry: _r,
    IcosahedronBufferGeometry: _r,
    LatheGeometry: Mr,
    LatheBufferGeometry: Mr,
    OctahedronGeometry: Ii,
    OctahedronBufferGeometry: Ii,
    PlaneGeometry: Pi,
    PlaneBufferGeometry: Pi,
    PolyhedronGeometry: an,
    PolyhedronBufferGeometry: an,
    RingGeometry: br,
    RingBufferGeometry: br,
    ShapeGeometry: Di,
    ShapeBufferGeometry: Di,
    SphereGeometry: Fi,
    SphereBufferGeometry: Fi,
    TetrahedronGeometry: wr,
    TetrahedronBufferGeometry: wr,
    TorusGeometry: Sr,
    TorusBufferGeometry: Sr,
    TorusKnotGeometry: Tr,
    TorusKnotBufferGeometry: Tr,
    TubeGeometry: Er,
    TubeBufferGeometry: Er,
    WireframeGeometry: Ea
}), Aa = class extends dt {
    constructor(e){
        super();
        this.type = "ShadowMaterial", this.color = new ae(0), this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this;
    }
};
Aa.prototype.isShadowMaterial = !0;
var po = class extends dt {
    constructor(e){
        super();
        this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new ae(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: ""
        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
po.prototype.isMeshStandardMaterial = !0;
var Ca = class extends po {
    constructor(e){
        super();
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new X(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
            get: function() {
                return mt(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
            },
            set: function(t) {
                this.ior = (1 + .4 * t) / (1 - .4 * t);
            }
        }), this.sheenColor = new ae(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 0, this.attenuationColor = new ae(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new ae(1, 1, 1), this.specularColorMap = null, this._sheen = 0, this._clearcoat = 0, this._transmission = 0, this.setValues(e);
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
    }
};
Ca.prototype.isMeshPhysicalMaterial = !0;
var La = class extends dt {
    constructor(e){
        super();
        this.type = "MeshPhongMaterial", this.color = new ae(16777215), this.specular = new ae(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
La.prototype.isMeshPhongMaterial = !0;
var Ra = class extends dt {
    constructor(e){
        super();
        this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.color = new ae(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ra.prototype.isMeshToonMaterial = !0;
var Pa = class extends dt {
    constructor(e){
        super();
        this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
    }
};
Pa.prototype.isMeshNormalMaterial = !0;
var Ia = class extends dt {
    constructor(e){
        super();
        this.type = "MeshLambertMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ia.prototype.isMeshLambertMaterial = !0;
var Da = class extends dt {
    constructor(e){
        super();
        this.defines = {
            MATCAP: ""
        }, this.type = "MeshMatcapMaterial", this.color = new ae(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            MATCAP: ""
        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this;
    }
};
Da.prototype.isMeshMatcapMaterial = !0;
var Fa = class extends ft {
    constructor(e){
        super();
        this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
    }
};
Fa.prototype.isLineDashedMaterial = !0;
var sy = Object.freeze({
    __proto__: null,
    ShadowMaterial: Aa,
    SpriteMaterial: io,
    RawShaderMaterial: Gi,
    ShaderMaterial: sn,
    PointsMaterial: jn,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshPhongMaterial: La,
    MeshToonMaterial: Ra,
    MeshNormalMaterial: Pa,
    MeshLambertMaterial: Ia,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshBasicMaterial: hn,
    MeshMatcapMaterial: Da,
    LineDashedMaterial: Fa,
    LineBasicMaterial: ft,
    Material: dt
}), Ze = {
    arraySlice: function(s, e, t) {
        return Ze.isTypedArray(s) ? new s.constructor(s.subarray(e, t !== void 0 ? t : s.length)) : s.slice(e, t);
    },
    convertArray: function(s, e, t) {
        return !s || !t && s.constructor === e ? s : typeof e.BYTES_PER_ELEMENT == "number" ? new e(s) : Array.prototype.slice.call(s);
    },
    isTypedArray: function(s) {
        return ArrayBuffer.isView(s) && !(s instanceof DataView);
    },
    getKeyframeOrder: function(s) {
        function e(i, r) {
            return s[i] - s[r];
        }
        let t = s.length, n = new Array(t);
        for(let i = 0; i !== t; ++i)n[i] = i;
        return n.sort(e), n;
    },
    sortedArray: function(s, e, t) {
        let n = s.length, i = new s.constructor(n);
        for(let r = 0, o = 0; o !== n; ++r){
            let a = t[r] * e;
            for(let l = 0; l !== e; ++l)i[o++] = s[a + l];
        }
        return i;
    },
    flattenJSON: function(s, e, t, n) {
        let i = 1, r = s[0];
        for(; r !== void 0 && r[n] === void 0;)r = s[i++];
        if (r === void 0) return;
        let o = r[n];
        if (o !== void 0) if (Array.isArray(o)) do o = r[n], o !== void 0 && (e.push(r.time), t.push.apply(t, o)), r = s[i++];
        while (r !== void 0)
        else if (o.toArray !== void 0) do o = r[n], o !== void 0 && (e.push(r.time), o.toArray(t, t.length)), r = s[i++];
        while (r !== void 0)
        else do o = r[n], o !== void 0 && (e.push(r.time), t.push(o)), r = s[i++];
        while (r !== void 0)
    },
    subclip: function(s, e, t, n, i = 30) {
        let r = s.clone();
        r.name = e;
        let o = [];
        for(let l = 0; l < r.tracks.length; ++l){
            let c = r.tracks[l], h = c.getValueSize(), u = [], d = [];
            for(let f = 0; f < c.times.length; ++f){
                let m = c.times[f] * i;
                if (!(m < t || m >= n)) {
                    u.push(c.times[f]);
                    for(let x = 0; x < h; ++x)d.push(c.values[f * h + x]);
                }
            }
            u.length !== 0 && (c.times = Ze.convertArray(u, c.times.constructor), c.values = Ze.convertArray(d, c.values.constructor), o.push(c));
        }
        r.tracks = o;
        let a = 1 / 0;
        for(let l1 = 0; l1 < r.tracks.length; ++l1)a > r.tracks[l1].times[0] && (a = r.tracks[l1].times[0]);
        for(let l2 = 0; l2 < r.tracks.length; ++l2)r.tracks[l2].shift(-1 * a);
        return r.resetDuration(), r;
    },
    makeClipAdditive: function(s, e = 0, t = s, n = 30) {
        n <= 0 && (n = 30);
        let i = t.tracks.length, r = e / n;
        for(let o = 0; o < i; ++o){
            let a = t.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            let c = s.tracks.find(function(g) {
                return g.name === a.name && g.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let h = 0, u = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = u / 3);
            let d = 0, f = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (d = f / 3);
            let m = a.times.length - 1, x;
            if (r <= a.times[0]) {
                let g = h, p = u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else if (r >= a.times[m]) {
                let g1 = m * u + h, p1 = g1 + u - h;
                x = Ze.arraySlice(a.values, g1, p1);
            } else {
                let g2 = a.createInterpolant(), p2 = h, _ = u - h;
                g2.evaluate(r), x = Ze.arraySlice(g2.resultBuffer, p2, _);
            }
            l === "quaternion" && new gt().fromArray(x).normalize().conjugate().toArray(x);
            let v = c.times.length;
            for(let g3 = 0; g3 < v; ++g3){
                let p3 = g3 * f + d;
                if (l === "quaternion") gt.multiplyQuaternionsFlat(c.values, p3, x, 0, c.values, p3);
                else {
                    let _1 = f - d * 2;
                    for(let y = 0; y < _1; ++y)c.values[p3 + y] -= x[y];
                }
            }
        }
        return s.blendMode = qc, s;
    }
}, cn = class {
    constructor(e, t, n, i){
        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};
    }
    evaluate(e) {
        let t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
        e: {
            t: {
                let o;
                n: {
                    i: if (!(e < i)) {
                        for(let a = n + 2;;){
                            if (i === void 0) {
                                if (e < r) break i;
                                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
                            }
                            if (n === a) break;
                            if (r = i, i = t[++n], e < i) break t;
                        }
                        o = t.length;
                        break n;
                    }
                    if (!(e >= r)) {
                        let a1 = t[1];
                        e < a1 && (n = 2, r = a1);
                        for(let l = n - 2;;){
                            if (r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                            if (n === l) break;
                            if (i = r, r = t[--n - 1], e >= r) break t;
                        }
                        o = n, n = 0;
                        break n;
                    }
                    break e;
                }
                for(; n < o;){
                    let a2 = n + o >>> 1;
                    e < t[a2] ? o = a2 : n = a2 + 1;
                }
                if (i = t[n], r = t[n - 1], r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                if (i === void 0) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
            }
            this._cachedIndex = n, this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        let t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i;
        for(let o = 0; o !== i; ++o)t[o] = n[r + o];
        return t;
    }
    interpolate_() {
        throw new Error("call to abstract method");
    }
    intervalChanged_() {}
};
cn.prototype.beforeStart_ = cn.prototype.copySampleValue_;
cn.prototype.afterEnd_ = cn.prototype.copySampleValue_;
var Ph = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
        this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
            endingStart: Mi,
            endingEnd: Mi
        };
    }
    intervalChanged_(e, t, n) {
        let i = this.parameterPositions, r = e - 2, o = e + 1, a = i[r], l = i[o];
        if (a === void 0) switch(this.getSettings_().endingStart){
            case bi:
                r = e, a = 2 * t - n;
                break;
            case Os:
                r = i.length - 2, a = t + i[r] - i[r + 1];
                break;
            default:
                r = e, a = n;
        }
        if (l === void 0) switch(this.getSettings_().endingEnd){
            case bi:
                o = e, l = 2 * n - t;
                break;
            case Os:
                o = 1, l = n + i[1] - i[0];
                break;
            default:
                o = e - 1, l = t;
        }
        let c = (n - t) * .5, h = this.valueSize;
        this._weightPrev = c / (t - a), this._weightNext = c / (l - n), this._offsetPrev = r * h, this._offsetNext = o * h;
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = this._offsetPrev, u = this._offsetNext, d = this._weightPrev, f = this._weightNext, m = (n - t) / (i - t), x = m * m, v = x * m, g = -d * v + 2 * d * x - d * m, p = (1 + d) * v + (-1.5 - 2 * d) * x + (-.5 + d) * m + 1, _ = (-1 - f) * v + (1.5 + f) * x + .5 * m, y = f * v - f * x;
        for(let b = 0; b !== a; ++b)r[b] = g * o[h + b] + p * o[c + b] + _ * o[l + b] + y * o[u + b];
        return r;
    }
}, Na = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = (n - t) / (i - t), u = 1 - h;
        for(let d = 0; d !== a; ++d)r[d] = o[c + d] * u + o[l + d] * h;
        return r;
    }
}, Ih = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}, zt = class {
    constructor(e, t, n, i){
        if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (t === void 0 || t.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e, this.times = Ze.convertArray(t, this.TimeBufferType), this.values = Ze.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        let t = e.constructor, n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: Ze.convertArray(e.times, Array),
                values: Ze.convertArray(e.values, Array)
            };
            let i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return n.type = e.ValueTypeName, n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new Ih(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new Na(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new Ph(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch(e){
            case zs:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Us:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case yo:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            let n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
            else throw new Error(n);
            return console.warn("THREE.KeyframeTrack:", n), this;
        }
        return this.createInterpolant = t, this;
    }
    getInterpolation() {
        switch(this.createInterpolant){
            case this.InterpolantFactoryMethodDiscrete:
                return zs;
            case this.InterpolantFactoryMethodLinear:
                return Us;
            case this.InterpolantFactoryMethodSmooth:
                return yo;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        let n = this.times, i = n.length, r = 0, o = i - 1;
        for(; r !== i && n[r] < e;)++r;
        for(; o !== -1 && n[o] > t;)--o;
        if (++o, r !== 0 || o !== i) {
            r >= o && (o = Math.max(o, 1), r = o - 1);
            let a = this.getValueSize();
            this.times = Ze.arraySlice(n, r, o), this.values = Ze.arraySlice(this.values, r * a, o * a);
        }
        return this;
    }
    validate() {
        let e = !0, t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
        let n = this.times, i = this.values, r = n.length;
        r === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
        let o = null;
        for(let a = 0; a !== r; a++){
            let l = n[a];
            if (typeof l == "number" && isNaN(l)) {
                console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                break;
            }
            if (o !== null && o > l) {
                console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                break;
            }
            o = l;
        }
        if (i !== void 0 && Ze.isTypedArray(i)) for(let a1 = 0, l1 = i.length; a1 !== l1; ++a1){
            let c = i[a1];
            if (isNaN(c)) {
                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a1, c), e = !1;
                break;
            }
        }
        return e;
    }
    optimize() {
        let e = Ze.arraySlice(this.times), t = Ze.arraySlice(this.values), n = this.getValueSize(), i = this.getInterpolation() === yo, r = e.length - 1, o = 1;
        for(let a = 1; a < r; ++a){
            let l = !1, c = e[a], h = e[a + 1];
            if (c !== h && (a !== 1 || c !== e[0])) if (i) l = !0;
            else {
                let u = a * n, d = u - n, f = u + n;
                for(let m = 0; m !== n; ++m){
                    let x = t[u + m];
                    if (x !== t[d + m] || x !== t[f + m]) {
                        l = !0;
                        break;
                    }
                }
            }
            if (l) {
                if (a !== o) {
                    e[o] = e[a];
                    let u1 = a * n, d1 = o * n;
                    for(let f1 = 0; f1 !== n; ++f1)t[d1 + f1] = t[u1 + f1];
                }
                ++o;
            }
        }
        if (r > 0) {
            e[o] = e[r];
            for(let a1 = r * n, l1 = o * n, c1 = 0; c1 !== n; ++c1)t[l1 + c1] = t[a1 + c1];
            ++o;
        }
        return o !== e.length ? (this.times = Ze.arraySlice(e, 0, o), this.values = Ze.arraySlice(t, 0, o * n)) : (this.times = e, this.values = t), this;
    }
    clone() {
        let e = Ze.arraySlice(this.times, 0), t = Ze.arraySlice(this.values, 0), n = this.constructor, i = new n(this.name, e, t);
        return i.createInterpolant = this.createInterpolant, i;
    }
};
zt.prototype.TimeBufferType = Float32Array;
zt.prototype.ValueBufferType = Float32Array;
zt.prototype.DefaultInterpolation = Us;
var Qn = class extends zt {
};
Qn.prototype.ValueTypeName = "bool";
Qn.prototype.ValueBufferType = Array;
Qn.prototype.DefaultInterpolation = zs;
Qn.prototype.InterpolantFactoryMethodLinear = void 0;
Qn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Ba = class extends zt {
};
Ba.prototype.ValueTypeName = "color";
var Ar = class extends zt {
};
Ar.prototype.ValueTypeName = "number";
var Dh = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (n - t) / (i - t), c = e * a;
        for(let h = c + a; c !== h; c += 4)gt.slerpFlat(r, 0, o, c - a, o, c, l);
        return r;
    }
}, Wi = class extends zt {
    InterpolantFactoryMethodLinear(e) {
        return new Dh(this.times, this.values, this.getValueSize(), e);
    }
};
Wi.prototype.ValueTypeName = "quaternion";
Wi.prototype.DefaultInterpolation = Us;
Wi.prototype.InterpolantFactoryMethodSmooth = void 0;
var Kn = class extends zt {
};
Kn.prototype.ValueTypeName = "string";
Kn.prototype.ValueBufferType = Array;
Kn.prototype.DefaultInterpolation = zs;
Kn.prototype.InterpolantFactoryMethodLinear = void 0;
Kn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Cr = class extends zt {
};
Cr.prototype.ValueTypeName = "vector";
var Lr = class {
    constructor(e, t = -1, n, i = ua){
        this.name = e, this.tracks = n, this.duration = t, this.blendMode = i, this.uuid = Et(), this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        let t = [], n = e.tracks, i = 1 / (e.fps || 1);
        for(let o = 0, a = n.length; o !== a; ++o)t.push(ay(n[o]).scale(i));
        let r = new this(e.name, e.duration, t, e.blendMode);
        return r.uuid = e.uuid, r;
    }
    static toJSON(e) {
        let t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t,
            uuid: e.uuid,
            blendMode: e.blendMode
        };
        for(let r = 0, o = n.length; r !== o; ++r)t.push(zt.toJSON(n[r]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        let r = t.length, o = [];
        for(let a = 0; a < r; a++){
            let l = [], c = [];
            l.push((a + r - 1) % r, a, (a + 1) % r), c.push(0, 1, 0);
            let h = Ze.getKeyframeOrder(l);
            l = Ze.sortedArray(l, 1, h), c = Ze.sortedArray(c, 1, h), !i && l[0] === 0 && (l.push(r), c.push(c[0])), o.push(new Ar(".morphTargetInfluences[" + t[a].name + "]", l, c).scale(1 / n));
        }
        return new this(e, -1, o);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            let i = e;
            n = i.geometry && i.geometry.animations || i.animations;
        }
        for(let i1 = 0; i1 < n.length; i1++)if (n[i1].name === t) return n[i1];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        let i = {}, r = /^([\w-]*?)([\d]+)$/;
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a], h = c.name.match(r);
            if (h && h.length > 1) {
                let u = h[1], d = i[u];
                d || (i[u] = d = []), d.push(c);
            }
        }
        let o = [];
        for(let a1 in i)o.push(this.CreateFromMorphTargetSequence(a1, i[a1], t, n));
        return o;
    }
    static parseAnimation(e, t) {
        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        let n = function(u, d, f, m, x) {
            if (f.length !== 0) {
                let v = [], g = [];
                Ze.flattenJSON(f, v, g, m), v.length !== 0 && x.push(new u(d, v, g));
            }
        }, i = [], r = e.name || "default", o = e.fps || 30, a = e.blendMode, l = e.length || -1, c = e.hierarchy || [];
        for(let u = 0; u < c.length; u++){
            let d = c[u].keys;
            if (!(!d || d.length === 0)) if (d[0].morphTargets) {
                let f = {}, m;
                for(m = 0; m < d.length; m++)if (d[m].morphTargets) for(let x = 0; x < d[m].morphTargets.length; x++)f[d[m].morphTargets[x]] = -1;
                for(let x1 in f){
                    let v = [], g = [];
                    for(let p = 0; p !== d[m].morphTargets.length; ++p){
                        let _ = d[m];
                        v.push(_.time), g.push(_.morphTarget === x1 ? 1 : 0);
                    }
                    i.push(new Ar(".morphTargetInfluence[" + x1 + "]", v, g));
                }
                l = f.length * (o || 1);
            } else {
                let f1 = ".bones[" + t[u].name + "]";
                n(Cr, f1 + ".position", d, "pos", i), n(Wi, f1 + ".quaternion", d, "rot", i), n(Cr, f1 + ".scale", d, "scl", i);
            }
        }
        return i.length === 0 ? null : new this(r, l, i, a);
    }
    resetDuration() {
        let e = this.tracks, t = 0;
        for(let n = 0, i = e.length; n !== i; ++n){
            let r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
        }
        return this.duration = t, this;
    }
    trim() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for(let t = 0; t < this.tracks.length; t++)e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
        return this;
    }
    clone() {
        let e = [];
        for(let t = 0; t < this.tracks.length; t++)e.push(this.tracks[t].clone());
        return new this.constructor(this.name, this.duration, e, this.blendMode);
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
};
function oy(s) {
    switch(s.toLowerCase()){
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return Ar;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return Cr;
        case "color":
            return Ba;
        case "quaternion":
            return Wi;
        case "bool":
        case "boolean":
            return Qn;
        case "string":
            return Kn;
    }
    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + s);
}
function ay(s) {
    if (s.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    let e = oy(s.type);
    if (s.times === void 0) {
        let t = [], n = [];
        Ze.flattenJSON(s.keys, t, n, "value"), s.times = t, s.values = n;
    }
    return e.parse !== void 0 ? e.parse(s) : new e(s.name, s.times, s.values, s.interpolation);
}
var Ni = {
    enabled: !1,
    files: {},
    add: function(s, e) {
        this.enabled !== !1 && (this.files[s] = e);
    },
    get: function(s) {
        if (this.enabled !== !1) return this.files[s];
    },
    remove: function(s) {
        delete this.files[s];
    },
    clear: function() {
        this.files = {};
    }
}, za = class {
    constructor(e, t, n){
        let i = this, r = !1, o = 0, a = 0, l, c = [];
        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(h) {
            a++, r === !1 && i.onStart !== void 0 && i.onStart(h, o, a), r = !0;
        }, this.itemEnd = function(h) {
            o++, i.onProgress !== void 0 && i.onProgress(h, o, a), o === a && (r = !1, i.onLoad !== void 0 && i.onLoad());
        }, this.itemError = function(h) {
            i.onError !== void 0 && i.onError(h);
        }, this.resolveURL = function(h) {
            return l ? l(h) : h;
        }, this.setURLModifier = function(h) {
            return l = h, this;
        }, this.addHandler = function(h, u) {
            return c.push(h, u), this;
        }, this.removeHandler = function(h) {
            let u = c.indexOf(h);
            return u !== -1 && c.splice(u, 2), this;
        }, this.getHandler = function(h) {
            for(let u = 0, d = c.length; u < d; u += 2){
                let f = c[u], m = c[u + 1];
                if (f.global && (f.lastIndex = 0), f.test(h)) return m;
            }
            return null;
        };
    }
}, ly = new za, bt = class {
    constructor(e){
        this.manager = e !== void 0 ? e : ly, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
    }
    load() {}
    loadAsync(e, t) {
        let n = this;
        return new Promise(function(i, r) {
            n.load(e, i, t, r);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return this.crossOrigin = e, this;
    }
    setWithCredentials(e) {
        return this.withCredentials = e, this;
    }
    setPath(e) {
        return this.path = e, this;
    }
    setResourcePath(e) {
        return this.resourcePath = e, this;
    }
    setRequestHeader(e) {
        return this.requestHeader = e, this;
    }
}, tn = {}, Yt = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = Ni.get(e);
        if (r !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
            t && t(r), this.manager.itemEnd(e);
        }, 0), r;
        if (tn[e] !== void 0) {
            tn[e].push({
                onLoad: t,
                onProgress: n,
                onError: i
            });
            return;
        }
        tn[e] = [], tn[e].push({
            onLoad: t,
            onProgress: n,
            onError: i
        });
        let o = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? "include" : "same-origin"
        });
        fetch(o).then((a)=>{
            if (a.status === 200 || a.status === 0) {
                if (a.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || a.body.getReader === void 0) return a;
                let l = tn[e], c = a.body.getReader(), h = a.headers.get("Content-Length"), u = h ? parseInt(h) : 0, d = u !== 0, f = 0, m = new ReadableStream({
                    start (x) {
                        v();
                        function v() {
                            c.read().then(({ done: g , value: p  })=>{
                                if (g) x.close();
                                else {
                                    f += p.byteLength;
                                    let _ = new ProgressEvent("progress", {
                                        lengthComputable: d,
                                        loaded: f,
                                        total: u
                                    });
                                    for(let y = 0, b = l.length; y < b; y++){
                                        let A = l[y];
                                        A.onProgress && A.onProgress(_);
                                    }
                                    x.enqueue(p), v();
                                }
                            });
                        }
                    }
                });
                return new Response(m);
            } else throw Error(`fetch for "${a.url}" responded with ${a.status}: ${a.statusText}`);
        }).then((a)=>{
            switch(this.responseType){
                case "arraybuffer":
                    return a.arrayBuffer();
                case "blob":
                    return a.blob();
                case "document":
                    return a.text().then((l)=>new DOMParser().parseFromString(l, this.mimeType));
                case "json":
                    return a.json();
                default:
                    return a.text();
            }
        }).then((a)=>{
            Ni.add(e, a);
            let l = tn[e];
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onLoad && u.onLoad(a);
            }
        }).catch((a)=>{
            let l = tn[e];
            if (l === void 0) throw this.manager.itemError(e), a;
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onError && u.onError(a);
            }
            this.manager.itemError(e);
        }).finally(()=>{
            this.manager.itemEnd(e);
        }), this.manager.itemStart(e);
    }
    setResponseType(e) {
        return this.responseType = e, this;
    }
    setMimeType(e) {
        return this.mimeType = e, this;
    }
}, cy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = [];
        for(let n = 0; n < e.length; n++){
            let i = Lr.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}, hy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = [], a = new va, l = new Yt(this.manager);
        l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(r.withCredentials);
        let c = 0;
        function h(u) {
            l.load(e[u], function(d) {
                let f = r.parse(d, !0);
                o[u] = {
                    width: f.width,
                    height: f.height,
                    format: f.format,
                    mipmaps: f.mipmaps
                }, c += 1, c === 6 && (f.mipmapCount === 1 && (a.minFilter = tt), a.image = o, a.format = f.format, a.needsUpdate = !0, t && t(a));
            }, n, i);
        }
        if (Array.isArray(e)) for(let u = 0, d = e.length; u < d; ++u)h(u);
        else l.load(e, function(u) {
            let d = r.parse(u, !0);
            if (d.isCubemap) {
                let f = d.mipmaps.length / d.mipmapCount;
                for(let m = 0; m < f; m++){
                    o[m] = {
                        mipmaps: []
                    };
                    for(let x = 0; x < d.mipmapCount; x++)o[m].mipmaps.push(d.mipmaps[m * d.mipmapCount + x]), o[m].format = d.format, o[m].width = d.width, o[m].height = d.height;
                }
                a.image = o;
            } else a.image.width = d.width, a.image.height = d.height, a.mipmaps = d.mipmaps;
            d.mipmapCount === 1 && (a.minFilter = tt), a.format = d.format, a.needsUpdate = !0, t && t(a);
        }, n, i);
        return a;
    }
}, Rr = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = qs("img");
        function l() {
            h(), Ni.add(e, this), t && t(this), r.manager.itemEnd(e);
        }
        function c(u) {
            h(), i && i(u), r.manager.itemError(e), r.manager.itemEnd(e);
        }
        function h() {
            a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
        }
        return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(e), a.src = e, a;
    }
}, Fh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ki, o = new Rr(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        let a = 0;
        function l(c) {
            o.load(e[c], function(h) {
                r.images[c] = h, a++, a === 6 && (r.needsUpdate = !0, t && t(r));
            }, void 0, i);
        }
        for(let c = 0; c < e.length; ++c)l(c);
        return r;
    }
}, Nh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new qn, a = new Yt(this.manager);
        return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(r.withCredentials), a.load(e, function(l) {
            let c = r.parse(l);
            !c || (c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : vt, o.wrapT = c.wrapT !== void 0 ? c.wrapT : vt, o.magFilter = c.magFilter !== void 0 ? c.magFilter : tt, o.minFilter = c.minFilter !== void 0 ? c.minFilter : tt, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.encoding !== void 0 && (o.encoding = c.encoding), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = Ui), c.mipmapCount === 1 && (o.minFilter = tt), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, t && t(o, c));
        }, n, i), o;
    }
}, Bh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ot, o = new Rr(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
            r.image = a, r.needsUpdate = !0, t !== void 0 && t(r);
        }, n, i), r;
    }
}, Bt = class extends Ne {
    constructor(e, t = 1){
        super();
        this.type = "Light", this.color = new ae(e), this.intensity = t;
    }
    dispose() {}
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.intensity = e.intensity, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
    }
};
Bt.prototype.isLight = !0;
var Ua = class extends Bt {
    constructor(e, t, n){
        super(e, n);
        this.type = "HemisphereLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.groundColor = new ae(t);
    }
    copy(e) {
        return Bt.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
    }
};
Ua.prototype.isHemisphereLight = !0;
var _c = new pe, Mc = new M, bc = new M, mo = class {
    constructor(e){
        this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new X(512, 512), this.map = null, this.mapPass = null, this.matrix = new pe, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new Dr, this._frameExtents = new X(1, 1), this._viewportCount = 1, this._viewports = [
            new Ve(0, 0, 1, 1)
        ];
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        let t = this.camera, n = this.matrix;
        Mc.setFromMatrixPosition(e.matrixWorld), t.position.copy(Mc), bc.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(bc), t.updateMatrixWorld(), _c.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(_c), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = {};
        return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
    }
}, Oa = class extends mo {
    constructor(){
        super(new ut(50, 1, .5, 500));
        this.focus = 1;
    }
    updateMatrices(e) {
        let t = this.camera, n = dr * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || r !== t.far) && (t.fov = n, t.aspect = i, t.far = r, t.updateProjectionMatrix()), super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), this.focus = e.focus, this;
    }
};
Oa.prototype.isSpotLightShadow = !0;
var Ha = class extends Bt {
    constructor(e, t, n = 0, i = Math.PI / 3, r = 0, o = 1){
        super(e, t);
        this.type = "SpotLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.distance = n, this.angle = i, this.penumbra = r, this.decay = o, this.shadow = new Oa;
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Ha.prototype.isSpotLight = !0;
var wc = new pe, nr = new M, jo = new M, ka = class extends mo {
    constructor(){
        super(new ut(90, 1, .5, 500));
        this._frameExtents = new X(4, 2), this._viewportCount = 6, this._viewports = [
            new Ve(2, 1, 1, 1),
            new Ve(0, 1, 1, 1),
            new Ve(3, 1, 1, 1),
            new Ve(1, 1, 1, 1),
            new Ve(3, 0, 1, 1),
            new Ve(1, 0, 1, 1)
        ], this._cubeDirections = [
            new M(1, 0, 0),
            new M(-1, 0, 0),
            new M(0, 0, 1),
            new M(0, 0, -1),
            new M(0, 1, 0),
            new M(0, -1, 0)
        ], this._cubeUps = [
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 0, 1),
            new M(0, 0, -1)
        ];
    }
    updateMatrices(e, t = 0) {
        let n = this.camera, i = this.matrix, r = e.distance || n.far;
        r !== n.far && (n.far = r, n.updateProjectionMatrix()), nr.setFromMatrixPosition(e.matrixWorld), n.position.copy(nr), jo.copy(n.position), jo.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(jo), n.updateMatrixWorld(), i.makeTranslation(-nr.x, -nr.y, -nr.z), wc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(wc);
    }
};
ka.prototype.isPointLightShadow = !0;
var Ga = class extends Bt {
    constructor(e, t, n = 0, i = 1){
        super(e, t);
        this.type = "PointLight", this.distance = n, this.decay = i, this.shadow = new ka;
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
    }
};
Ga.prototype.isPointLight = !0;
var Va = class extends mo {
    constructor(){
        super(new Fr(-5, 5, 5, -5, .5, 500));
    }
};
Va.prototype.isDirectionalLightShadow = !0;
var Wa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "DirectionalLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.shadow = new Va;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Wa.prototype.isDirectionalLight = !0;
var qa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "AmbientLight";
    }
};
qa.prototype.isAmbientLight = !0;
var Xa = class extends Bt {
    constructor(e, t, n = 10, i = 10){
        super(e, t);
        this.type = "RectAreaLight", this.width = n, this.height = i;
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return super.copy(e), this.width = e.width, this.height = e.height, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.width = this.width, t.object.height = this.height, t;
    }
};
Xa.prototype.isRectAreaLight = !0;
var Ja = class {
    constructor(){
        this.coefficients = [];
        for(let e = 0; e < 9; e++)this.coefficients.push(new M);
    }
    set(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.282095), t.addScaledVector(o[1], .488603 * i), t.addScaledVector(o[2], .488603 * r), t.addScaledVector(o[3], .488603 * n), t.addScaledVector(o[4], 1.092548 * (n * i)), t.addScaledVector(o[5], 1.092548 * (i * r)), t.addScaledVector(o[6], .315392 * (3 * r * r - 1)), t.addScaledVector(o[7], 1.092548 * (n * r)), t.addScaledVector(o[8], .546274 * (n * n - i * i)), t;
    }
    getIrradianceAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.886227), t.addScaledVector(o[1], 2 * .511664 * i), t.addScaledVector(o[2], 2 * .511664 * r), t.addScaledVector(o[3], 2 * .511664 * n), t.addScaledVector(o[4], 2 * .429043 * n * i), t.addScaledVector(o[5], 2 * .429043 * i * r), t.addScaledVector(o[6], .743125 * r * r - .247708), t.addScaledVector(o[7], 2 * .429043 * n * r), t.addScaledVector(o[8], .429043 * (n * n - i * i)), t;
    }
    add(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for(let t = 0; t < 9; t++)if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        let n = e.x, i = e.y, r = e.z;
        t[0] = .282095, t[1] = .488603 * i, t[2] = .488603 * r, t[3] = .488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = .315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = .546274 * (n * n - i * i);
    }
};
Ja.prototype.isSphericalHarmonics3 = !0;
var Hr = class extends Bt {
    constructor(e = new Ja, t = 1){
        super(void 0, t);
        this.sh = e;
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.sh = this.sh.toArray(), t;
    }
};
Hr.prototype.isLightProbe = !0;
var zh = class extends bt {
    constructor(e){
        super(e);
        this.textures = {};
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = this.textures;
        function n(r) {
            return t[r] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", r), t[r];
        }
        let i = new sy[e.type];
        if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new ae().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.format !== void 0 && (i.format = e.format), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== 1 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(let r in e.uniforms){
            let o = e.uniforms[r];
            switch(i.uniforms[r] = {}, o.type){
                case "t":
                    i.uniforms[r].value = n(o.value);
                    break;
                case "c":
                    i.uniforms[r].value = new ae().setHex(o.value);
                    break;
                case "v2":
                    i.uniforms[r].value = new X().fromArray(o.value);
                    break;
                case "v3":
                    i.uniforms[r].value = new M().fromArray(o.value);
                    break;
                case "v4":
                    i.uniforms[r].value = new Ve().fromArray(o.value);
                    break;
                case "m3":
                    i.uniforms[r].value = new lt().fromArray(o.value);
                    break;
                case "m4":
                    i.uniforms[r].value = new pe().fromArray(o.value);
                    break;
                default:
                    i.uniforms[r].value = o.value;
            }
        }
        if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.extensions !== void 0) for(let r1 in e.extensions)i.extensions[r1] = e.extensions[r1];
        if (e.shading !== void 0 && (i.flatShading = e.shading === 1), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = n(e.map)), e.matcap !== void 0 && (i.matcap = n(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
            let r2 = e.normalScale;
            Array.isArray(r2) === !1 && (r2 = [
                r2,
                r2
            ]), i.normalScale = new X().fromArray(r2);
        }
        return e.displacementMap !== void 0 && (i.displacementMap = n(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = n(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = n(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = n(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new X().fromArray(e.clearcoatNormalScale)), e.transmissionMap !== void 0 && (i.transmissionMap = n(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = n(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = n(e.sheenRoughnessMap)), i;
    }
    setTextures(e) {
        return this.textures = e, this;
    }
}, Gs = class {
    static decodeText(e) {
        if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
        let t = "";
        for(let n = 0, i = e.length; n < i; n++)t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch  {
            return t;
        }
    }
    static extractUrlBase(e) {
        let t = e.lastIndexOf("/");
        return t === -1 ? "./" : e.substr(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
    }
}, Ya = class extends _e {
    constructor(){
        super();
        this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
    }
    copy(e) {
        return super.copy(e), this.instanceCount = e.instanceCount, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = super.toJSON(this);
        return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
    }
};
Ya.prototype.isInstancedBufferGeometry = !0;
var Uh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = {}, n = {};
        function i(f, m) {
            if (t[m] !== void 0) return t[m];
            let v = f.interleavedBuffers[m], g = r(f, v.buffer), p = wi(v.type, g), _ = new $n(p, v.stride);
            return _.uuid = v.uuid, t[m] = _, _;
        }
        function r(f, m) {
            if (n[m] !== void 0) return n[m];
            let v = f.arrayBuffers[m], g = new Uint32Array(v).buffer;
            return n[m] = g, g;
        }
        let o = e.isInstancedBufferGeometry ? new Ya : new _e, a = e.data.index;
        if (a !== void 0) {
            let f = wi(a.type, a.array);
            o.setIndex(new Ue(f, 1));
        }
        let l = e.data.attributes;
        for(let f1 in l){
            let m = l[f1], x;
            if (m.isInterleavedBufferAttribute) {
                let v = i(e.data, m.data);
                x = new Sn(v, m.itemSize, m.offset, m.normalized);
            } else {
                let v1 = wi(m.type, m.array), g = m.isInstancedBufferAttribute ? Xn : Ue;
                x = new g(v1, m.itemSize, m.normalized);
            }
            m.name !== void 0 && (x.name = m.name), m.usage !== void 0 && x.setUsage(m.usage), m.updateRange !== void 0 && (x.updateRange.offset = m.updateRange.offset, x.updateRange.count = m.updateRange.count), o.setAttribute(f1, x);
        }
        let c = e.data.morphAttributes;
        if (c) for(let f2 in c){
            let m1 = c[f2], x1 = [];
            for(let v2 = 0, g1 = m1.length; v2 < g1; v2++){
                let p = m1[v2], _;
                if (p.isInterleavedBufferAttribute) {
                    let y = i(e.data, p.data);
                    _ = new Sn(y, p.itemSize, p.offset, p.normalized);
                } else {
                    let y1 = wi(p.type, p.array);
                    _ = new Ue(y1, p.itemSize, p.normalized);
                }
                p.name !== void 0 && (_.name = p.name), x1.push(_);
            }
            o.morphAttributes[f2] = x1;
        }
        e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
        let u = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (u !== void 0) for(let f3 = 0, m2 = u.length; f3 !== m2; ++f3){
            let x2 = u[f3];
            o.addGroup(x2.start, x2.count, x2.materialIndex);
        }
        let d = e.data.boundingSphere;
        if (d !== void 0) {
            let f4 = new M;
            d.center !== void 0 && f4.fromArray(d.center), o.boundingSphere = new An(f4, d.radius);
        }
        return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
    }
}, uy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        let a = new Yt(this.manager);
        a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
            let c = null;
            try {
                c = JSON.parse(l);
            } catch (u) {
                i !== void 0 && i(u), console.error("THREE:ObjectLoader: Can't parse " + e + ".", u.message);
                return;
            }
            let h = c.metadata;
            if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry") {
                console.error("THREE.ObjectLoader: Can't load " + e);
                return;
            }
            r.parse(c, t);
        }, n, i);
    }
    async loadAsync(e, t) {
        let n = this, i = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        let r = new Yt(this.manager);
        r.setPath(this.path), r.setRequestHeader(this.requestHeader), r.setWithCredentials(this.withCredentials);
        let o = await r.loadAsync(e, t), a = JSON.parse(o), l = a.metadata;
        if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(a);
    }
    parse(e, t) {
        let n = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), r = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
            t !== void 0 && t(c);
        }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, r, l, a, n), h = this.parseSkeletons(e.skeletons, c);
        if (this.bindSkeletons(c, h), t !== void 0) {
            let u = !1;
            for(let d in o)if (o[d] instanceof HTMLImageElement) {
                u = !0;
                break;
            }
            u === !1 && t(c);
        }
        return c;
    }
    async parseAsync(e) {
        let t = this.parseAnimations(e.animations), n = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, n), r = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, r), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, t), c = this.parseSkeletons(e.skeletons, l);
        return this.bindSkeletons(l, c), l;
    }
    parseShapes(e) {
        let t = {};
        if (e !== void 0) for(let n = 0, i = e.length; n < i; n++){
            let r = new Xt().fromJSON(e[n]);
            t[r.uuid] = r;
        }
        return t;
    }
    parseSkeletons(e, t) {
        let n = {}, i = {};
        if (t.traverse(function(r) {
            r.isBone && (i[r.uuid] = r);
        }), e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = new ao().fromJSON(e[r], i);
            n[a.uuid] = a;
        }
        return n;
    }
    parseGeometries(e, t) {
        let n = {};
        if (e !== void 0) {
            let i = new Uh;
            for(let r = 0, o = e.length; r < o; r++){
                let a, l = e[r];
                switch(l.type){
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = i.parse(l);
                        break;
                    case "Geometry":
                        console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");
                        break;
                    default:
                        l.type in vc ? a = vc[l.type].fromJSON(l, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                }
                a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), a.isBufferGeometry === !0 && l.userData !== void 0 && (a.userData = l.userData), n[l.uuid] = a;
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        let n = {}, i = {};
        if (e !== void 0) {
            let r = new zh;
            r.setTextures(t);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o];
                if (l.type === "MultiMaterial") {
                    let c = [];
                    for(let h = 0; h < l.materials.length; h++){
                        let u = l.materials[h];
                        n[u.uuid] === void 0 && (n[u.uuid] = r.parse(u)), c.push(n[u.uuid]);
                    }
                    i[l.uuid] = c;
                } else n[l.uuid] === void 0 && (n[l.uuid] = r.parse(l)), i[l.uuid] = n[l.uuid];
            }
        }
        return i;
    }
    parseAnimations(e) {
        let t = {};
        if (e !== void 0) for(let n = 0; n < e.length; n++){
            let i = e[n], r = Lr.parse(i);
            t[r.uuid] = r;
        }
        return t;
    }
    parseImages(e, t) {
        let n = this, i = {}, r;
        function o(l) {
            return n.manager.itemStart(l), r.load(l, function() {
                n.manager.itemEnd(l);
            }, void 0, function() {
                n.manager.itemError(l), n.manager.itemEnd(l);
            });
        }
        function a(l) {
            if (typeof l == "string") {
                let c = l, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : n.resourcePath + c;
                return o(h);
            } else return l.data ? {
                data: wi(l.type, l.data),
                width: l.width,
                height: l.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            let l = new za(t);
            r = new Rr(l), r.setCrossOrigin(this.crossOrigin);
            for(let c = 0, h = e.length; c < h; c++){
                let u = e[c], d = u.url;
                if (Array.isArray(d)) {
                    i[u.uuid] = [];
                    for(let f = 0, m = d.length; f < m; f++){
                        let x = d[f], v = a(x);
                        v !== null && (v instanceof HTMLImageElement ? i[u.uuid].push(v) : i[u.uuid].push(new qn(v.data, v.width, v.height)));
                    }
                } else {
                    let f1 = a(u.url);
                    f1 !== null && (i[u.uuid] = f1);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        let t = this, n = {}, i;
        async function r(o) {
            if (typeof o == "string") {
                let a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : t.resourcePath + a;
                return await i.loadAsync(l);
            } else return o.data ? {
                data: wi(o.type, o.data),
                width: o.width,
                height: o.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            i = new Rr(this.manager), i.setCrossOrigin(this.crossOrigin);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o], c = l.url;
                if (Array.isArray(c)) {
                    n[l.uuid] = [];
                    for(let h = 0, u = c.length; h < u; h++){
                        let d = c[h], f = await r(d);
                        f !== null && (f instanceof HTMLImageElement ? n[l.uuid].push(f) : n[l.uuid].push(new qn(f.data, f.width, f.height)));
                    }
                } else {
                    let h1 = await r(l.url);
                    h1 !== null && (n[l.uuid] = h1);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(r, o) {
            return typeof r == "number" ? r : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", r), o[r]);
        }
        let i = {};
        if (e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = e[r];
            a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), t[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
            let l, c = t[a.image];
            Array.isArray(c) ? (l = new ki(c), c.length === 6 && (l.needsUpdate = !0)) : (c && c.data ? l = new qn(c.data, c.width, c.height) : l = new ot(c), c && (l.needsUpdate = !0)), l.uuid = a.uuid, a.name !== void 0 && (l.name = a.name), a.mapping !== void 0 && (l.mapping = n(a.mapping, dy)), a.offset !== void 0 && l.offset.fromArray(a.offset), a.repeat !== void 0 && l.repeat.fromArray(a.repeat), a.center !== void 0 && l.center.fromArray(a.center), a.rotation !== void 0 && (l.rotation = a.rotation), a.wrap !== void 0 && (l.wrapS = n(a.wrap[0], Sc), l.wrapT = n(a.wrap[1], Sc)), a.format !== void 0 && (l.format = a.format), a.type !== void 0 && (l.type = a.type), a.encoding !== void 0 && (l.encoding = a.encoding), a.minFilter !== void 0 && (l.minFilter = n(a.minFilter, Tc)), a.magFilter !== void 0 && (l.magFilter = n(a.magFilter, Tc)), a.anisotropy !== void 0 && (l.anisotropy = a.anisotropy), a.flipY !== void 0 && (l.flipY = a.flipY), a.premultiplyAlpha !== void 0 && (l.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (l.unpackAlignment = a.unpackAlignment), a.userData !== void 0 && (l.userData = a.userData), i[a.uuid] = l;
        }
        return i;
    }
    parseObject(e, t, n, i, r) {
        let o;
        function a(d) {
            return t[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", d), t[d];
        }
        function l(d) {
            if (d !== void 0) {
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, x = d.length; m < x; m++){
                        let v = d[m];
                        n[v] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", v), f.push(n[v]);
                    }
                    return f;
                }
                return n[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", d), n[d];
            }
        }
        function c(d) {
            return i[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", d), i[d];
        }
        let h, u;
        switch(e.type){
            case "Scene":
                o = new no, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new ae(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new Br(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new Nr(e.fog.color, e.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new ut(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                o = new Fr(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                o = new qa(e.color, e.intensity);
                break;
            case "DirectionalLight":
                o = new Wa(e.color, e.intensity);
                break;
            case "PointLight":
                o = new Ga(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                o = new Xa(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                o = new Ha(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                o = new Ua(e.color, e.groundColor, e.intensity);
                break;
            case "LightProbe":
                o = new Hr().fromJSON(e);
                break;
            case "SkinnedMesh":
                h = a(e.geometry), u = l(e.material), o = new so(h, u), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                break;
            case "Mesh":
                h = a(e.geometry), u = l(e.material), o = new st(h, u);
                break;
            case "InstancedMesh":
                h = a(e.geometry), u = l(e.material);
                let d = e.count, f = e.instanceMatrix, m = e.instanceColor;
                o = new xa(h, u, d), o.instanceMatrix = new Xn(new Float32Array(f.array), 16), m !== void 0 && (o.instanceColor = new Xn(new Float32Array(m.array), m.itemSize));
                break;
            case "LOD":
                o = new bh;
                break;
            case "Line":
                o = new on(a(e.geometry), l(e.material));
                break;
            case "LineLoop":
                o = new ya(a(e.geometry), l(e.material));
                break;
            case "LineSegments":
                o = new wt(a(e.geometry), l(e.material));
                break;
            case "PointCloud":
            case "Points":
                o = new zr(a(e.geometry), l(e.material));
                break;
            case "Sprite":
                o = new ro(l(e.material));
                break;
            case "Group":
                o = new Hn;
                break;
            case "Bone":
                o = new oo;
                break;
            default:
                o = new Ne;
        }
        if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
            let d1 = e.children;
            for(let f1 = 0; f1 < d1.length; f1++)o.add(this.parseObject(d1[f1], t, n, i, r));
        }
        if (e.animations !== void 0) {
            let d2 = e.animations;
            for(let f2 = 0; f2 < d2.length; f2++){
                let m1 = d2[f2];
                o.animations.push(r[m1]);
            }
        }
        if (e.type === "LOD") {
            e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
            let d3 = e.levels;
            for(let f3 = 0; f3 < d3.length; f3++){
                let m2 = d3[f3], x = o.getObjectByProperty("uuid", m2.object);
                x !== void 0 && o.addLevel(x, m2.distance);
            }
        }
        return o;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 && e.traverse(function(n) {
            if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                let i = t[n.skeleton];
                i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", n.skeleton) : n.bind(i, n.bindMatrix);
            }
        });
    }
    setTexturePath(e) {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
    }
}, dy = {
    UVMapping: ha,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws
}, Sc = {
    RepeatWrapping: Ns,
    ClampToEdgeWrapping: vt,
    MirroredRepeatWrapping: Bs
}, Tc = {
    NearestFilter: rt,
    NearestMipmapNearestFilter: ta,
    NearestMipmapLinearFilter: na,
    LinearFilter: tt,
    LinearMipmapNearestFilter: Wc,
    LinearMipmapLinearFilter: Ui
}, Oh = class extends bt {
    constructor(e){
        super(e);
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
            premultiplyAlpha: "none"
        };
    }
    setOptions(e) {
        return this.options = e, this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = {};
        a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader, fetch(e, a).then(function(l) {
            return l.blob();
        }).then(function(l) {
            return createImageBitmap(l, Object.assign(r.options, {
                colorSpaceConversion: "none"
            }));
        }).then(function(l) {
            Ni.add(e, l), t && t(l), r.manager.itemEnd(e);
        }).catch(function(l) {
            i && i(l), r.manager.itemError(e), r.manager.itemEnd(e);
        }), r.manager.itemStart(e);
    }
};
Oh.prototype.isImageBitmapLoader = !0;
var Ss, Hh = {
    getContext: function() {
        return Ss === void 0 && (Ss = new (window.AudioContext || window.webkitAudioContext)), Ss;
    },
    setContext: function(s) {
        Ss = s;
    }
}, kh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                let l = a.slice(0);
                Hh.getContext().decodeAudioData(l, function(h) {
                    t(h);
                });
            } catch (l1) {
                i ? i(l1) : console.error(l1), r.manager.itemError(e);
            }
        }, n, i);
    }
}, Gh = class extends Hr {
    constructor(e, t, n = 1){
        super(void 0, n);
        let i = new ae().set(e), r = new ae().set(t), o = new M(i.r, i.g, i.b), a = new M(r.r, r.g, r.b), l = Math.sqrt(Math.PI), c = l * Math.sqrt(.75);
        this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c);
    }
};
Gh.prototype.isHemisphereLightProbe = !0;
var Vh = class extends Hr {
    constructor(e, t = 1){
        super(void 0, t);
        let n = new ae().set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
    }
};
Vh.prototype.isAmbientLightProbe = !0;
var Ec = new pe, Ac = new pe, Fn = new pe, fy = class {
    constructor(){
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new ut, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new ut, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        };
    }
    update(e) {
        let t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, Fn.copy(e.projectionMatrix);
            let i = t.eyeSep / 2, r = i * t.near / t.focus, o = t.near * Math.tan(Wn * t.fov * .5) / t.zoom, a, l;
            Ac.elements[12] = -i, Ec.elements[12] = i, a = -o * t.aspect + r, l = o * t.aspect + r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(Fn), a = -o * t.aspect - r, l = o * t.aspect - r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(Fn);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ac), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ec);
    }
}, Wh = class {
    constructor(e = !0){
        this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
    }
    start() {
        this.startTime = Cc(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
    }
    stop() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            let t = Cc();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
        }
        return e;
    }
};
function Cc() {
    return (typeof performance > "u" ? Date : performance).now();
}
var Nn = new M, Lc = new gt, py = new M, Bn = new M, my = class extends Ne {
    constructor(){
        super();
        this.type = "AudioListener", this.context = Hh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Wh;
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        let t = this.context.listener, n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Nn, Lc, py), Bn.set(0, 0, -1).applyQuaternion(Lc), t.positionX) {
            let i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Nn.x, i), t.positionY.linearRampToValueAtTime(Nn.y, i), t.positionZ.linearRampToValueAtTime(Nn.z, i), t.forwardX.linearRampToValueAtTime(Bn.x, i), t.forwardY.linearRampToValueAtTime(Bn.y, i), t.forwardZ.linearRampToValueAtTime(Bn.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
        } else t.setPosition(Nn.x, Nn.y, Nn.z), t.setOrientation(Bn.x, Bn.y, Bn.z, n.x, n.y, n.z);
    }
}, Za = class extends Ne {
    constructor(e){
        super();
        this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
    }
    setMediaElementSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
    }
    setMediaStreamSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
    }
    setBuffer(e) {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this._startedAt = this.context.currentTime + e;
        let t = this.context.createBufferSource();
        return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this._connected = !0, this;
    }
    disconnect() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else this.source.disconnect(this.getOutput());
        return this._connected = !1, this;
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
    }
    setDetune(e) {
        if (this.detune = e, this.source.detune !== void 0) return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [
            e
        ] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
    }
    setLoopStart(e) {
        return this.loopStart = e, this;
    }
    setLoopEnd(e) {
        return this.loopEnd = e, this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
}, zn = new M, Rc = new gt, gy = new M, Un = new M, xy = class extends Za {
    constructor(e){
        super(e);
        this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return this.panner.refDistance = e, this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return this.panner.rolloffFactor = e, this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return this.panner.distanceModel = e, this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return this.panner.maxDistance = e, this;
    }
    setDirectionalCone(e, t, n) {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
    }
    updateMatrixWorld(e) {
        if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
        this.matrixWorld.decompose(zn, Rc, gy), Un.set(0, 0, 1).applyQuaternion(Rc);
        let t = this.panner;
        if (t.positionX) {
            let n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(zn.x, n), t.positionY.linearRampToValueAtTime(zn.y, n), t.positionZ.linearRampToValueAtTime(zn.z, n), t.orientationX.linearRampToValueAtTime(Un.x, n), t.orientationY.linearRampToValueAtTime(Un.y, n), t.orientationZ.linearRampToValueAtTime(Un.z, n);
        } else t.setPosition(zn.x, zn.y, zn.z), t.setOrientation(Un.x, Un.y, Un.z);
    }
}, qh = class {
    constructor(e, t = 2048){
        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0, t = this.getFrequencyData();
        for(let n = 0; n < t.length; n++)e += t[n];
        return e / t.length;
    }
}, Xh = class {
    constructor(e, t, n){
        this.binding = e, this.valueSize = n;
        let i, r, o;
        switch(t){
            case "quaternion":
                i = this._slerp, r = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(n * 6), this._workIndex = 5;
                break;
            case "string":
            case "bool":
                i = this._select, r = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(n * 5);
                break;
            default:
                i = this._lerp, r = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(n * 5);
        }
        this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
    }
    accumulate(e, t) {
        let n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
        if (o === 0) {
            for(let a = 0; a !== i; ++a)n[r + a] = n[a];
            o = t;
        } else {
            o += t;
            let a1 = t / o;
            this._mixBufferRegion(n, r, 0, a1, i);
        }
        this.cumulativeWeight = o;
    }
    accumulateAdditive(e) {
        let t = this.buffer, n = this.valueSize, i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, n), this.cumulativeWeightAdditive += e;
    }
    apply(e) {
        let t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
        if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {
            let l = t * this._origIndex;
            this._mixBufferRegion(n, i, l, 1 - r, t);
        }
        o > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for(let l1 = t, c = t + t; l1 !== c; ++l1)if (n[l1] !== n[l1 + t]) {
            a.setValue(n, i);
            break;
        }
    }
    saveOriginalState() {
        let e = this.binding, t = this.buffer, n = this.valueSize, i = n * this._origIndex;
        e.getValue(t, i);
        for(let r = n, o = i; r !== o; ++r)t[r] = t[i + r % n];
        this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
    }
    restoreOriginalState() {
        let e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        let e = this._addIndex * this.valueSize, t = e + this.valueSize;
        for(let n = e; n < t; n++)this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
    }
    _setAdditiveIdentityOther() {
        let e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
        for(let n = 0; n < this.valueSize; n++)this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, r) {
        if (i >= .5) for(let o = 0; o !== r; ++o)e[t + o] = e[n + o];
    }
    _slerp(e, t, n, i) {
        gt.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, r) {
        let o = this._workIndex * r;
        gt.multiplyQuaternionsFlat(e, o, e, t, e, n), gt.slerpFlat(e, t, e, t, e, o, i);
    }
    _lerp(e, t, n, i, r) {
        let o = 1 - i;
        for(let a = 0; a !== r; ++a){
            let l = t + a;
            e[l] = e[l] * o + e[n + a] * i;
        }
    }
    _lerpAdditive(e, t, n, i, r) {
        for(let o = 0; o !== r; ++o){
            let a = t + o;
            e[a] = e[a] + e[n + o] * i;
        }
    }
}, $a = "\\[\\]\\.:\\/", yy = new RegExp("[" + $a + "]", "g"), ja = "[^" + $a + "]", vy = "[^" + $a.replace("\\.", "") + "]", _y = /((?:WC+[\/:])*)/.source.replace("WC", ja), My = /(WCOD+)?/.source.replace("WCOD", vy), by = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", ja), wy = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", ja), Sy = new RegExp("^" + _y + My + by + wy + "$"), Ty = [
    "material",
    "materials",
    "bones"
], Jh = class {
    constructor(e, t, n){
        let i = n || ke.parseTrackName(t);
        this._targetGroup = e, this._bindings = e.subscribe_(t, i);
    }
    getValue(e, t) {
        this.bind();
        let n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        let n = this._bindings;
        for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(e, t);
    }
    bind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].bind();
    }
    unbind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].unbind();
    }
}, ke = class {
    constructor(e, t, n){
        this.path = t, this.parsedPath = n || ke.parseTrackName(t), this.node = ke.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup ? new ke.Composite(e, t, n) : new ke(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, "_").replace(yy, "");
    }
    static parseTrackName(e) {
        let t = Sy.exec(e);
        if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
        let n = {
            nodeName: t[2],
            objectName: t[3],
            objectIndex: t[4],
            propertyName: t[5],
            propertyIndex: t[6]
        }, i = n.nodeName && n.nodeName.lastIndexOf(".");
        if (i !== void 0 && i !== -1) {
            let r = n.nodeName.substring(i + 1);
            Ty.indexOf(r) !== -1 && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
        }
        if (n.propertyName === null || n.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
        return n;
    }
    static findNode(e, t) {
        if (!t || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid) return e;
        if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            let n1 = function(r) {
                for(let o = 0; o < r.length; o++){
                    let a = r[o];
                    if (a.name === t || a.uuid === t) return a;
                    let l = n1(a.children);
                    if (l) return l;
                }
                return null;
            }, i = n1(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
        if (e || (e = ke.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
            console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            return;
        }
        if (n) {
            let c = t.objectIndex;
            switch(n){
                case "materials":
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.materials) {
                        console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        return;
                    }
                    e = e.material.materials;
                    break;
                case "bones":
                    if (!e.skeleton) {
                        console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        return;
                    }
                    e = e.skeleton.bones;
                    for(let h = 0; h < e.length; h++)if (e[h].name === c) {
                        c = h;
                        break;
                    }
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        return;
                    }
                    e = e[n];
            }
            if (c !== void 0) {
                if (e[c] === void 0) {
                    console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                    return;
                }
                e = e[c];
            }
        }
        let o = e[i];
        if (o === void 0) {
            let c1 = t.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + c1 + "." + i + " but it wasn't found.", e);
            return;
        }
        let a = this.Versioning.None;
        this.targetObject = e, e.needsUpdate !== void 0 ? a = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
        let l = this.BindingType.Direct;
        if (r !== void 0) {
            if (i === "morphTargetInfluences") {
                if (!e.geometry) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    return;
                }
                if (e.geometry.isBufferGeometry) {
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[r] !== void 0 && (r = e.morphTargetDictionary[r]);
                } else {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                    return;
                }
            }
            l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = r;
        } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
    }
    unbind() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
};
ke.Composite = Jh;
ke.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3
};
ke.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2
};
ke.prototype.GetterByBindingType = [
    ke.prototype._getValue_direct,
    ke.prototype._getValue_array,
    ke.prototype._getValue_arrayElement,
    ke.prototype._getValue_toArray
];
ke.prototype.SetterByBindingTypeAndVersioning = [
    [
        ke.prototype._setValue_direct,
        ke.prototype._setValue_direct_setNeedsUpdate,
        ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_array,
        ke.prototype._setValue_array_setNeedsUpdate,
        ke.prototype._setValue_array_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_arrayElement,
        ke.prototype._setValue_arrayElement_setNeedsUpdate,
        ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_fromArray,
        ke.prototype._setValue_fromArray_setNeedsUpdate,
        ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
    ]
];
var Yh = class {
    constructor(){
        this.uuid = Et(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        let e = {};
        this._indicesByUUID = e;
        for(let n = 0, i = arguments.length; n !== i; ++n)e[arguments[n].uuid] = n;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        let t = this;
        this.stats = {
            objects: {
                get total () {
                    return t._objects.length;
                },
                get inUse () {
                    return this.total - t.nCachedObjects_;
                }
            },
            get bindingsPerObject () {
                return t._bindings.length;
            }
        };
    }
    add() {
        let e = this._objects, t = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, o = r.length, a, l = e.length, c = this.nCachedObjects_;
        for(let h = 0, u = arguments.length; h !== u; ++h){
            let d = arguments[h], f = d.uuid, m = t[f];
            if (m === void 0) {
                m = l++, t[f] = m, e.push(d);
                for(let x = 0, v = o; x !== v; ++x)r[x].push(new ke(d, n[x], i[x]));
            } else if (m < c) {
                a = e[m];
                let x1 = --c, v1 = e[x1];
                t[v1.uuid] = m, e[m] = v1, t[f] = x1, e[x1] = d;
                for(let g = 0, p = o; g !== p; ++g){
                    let _ = r[g], y = _[x1], b = _[m];
                    _[m] = y, b === void 0 && (b = new ke(d, n[g], i[g])), _[x1] = b;
                }
            } else e[m] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = c;
    }
    remove() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_;
        for(let o = 0, a = arguments.length; o !== a; ++o){
            let l = arguments[o], c = l.uuid, h = t[c];
            if (h !== void 0 && h >= r) {
                let u = r++, d = e[u];
                t[d.uuid] = h, e[h] = d, t[c] = u, e[u] = l;
                for(let f = 0, m = i; f !== m; ++f){
                    let x = n[f], v = x[u], g = x[h];
                    x[h] = v, x[u] = g;
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    uncache() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_, o = e.length;
        for(let a = 0, l = arguments.length; a !== l; ++a){
            let c = arguments[a], h = c.uuid, u = t[h];
            if (u !== void 0) if (delete t[h], u < r) {
                let d = --r, f = e[d], m = --o, x = e[m];
                t[f.uuid] = u, e[u] = f, t[x.uuid] = d, e[d] = x, e.pop();
                for(let v = 0, g = i; v !== g; ++v){
                    let p = n[v], _ = p[d], y = p[m];
                    p[u] = _, p[d] = y, p.pop();
                }
            } else {
                let d1 = --o, f1 = e[d1];
                d1 > 0 && (t[f1.uuid] = u), e[u] = f1, e.pop();
                for(let m1 = 0, x1 = i; m1 !== x1; ++m1){
                    let v1 = n[m1];
                    v1[u] = v1[d1], v1.pop();
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    subscribe_(e, t) {
        let n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
        if (i !== void 0) return r[i];
        let o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, h = this.nCachedObjects_, u = new Array(c);
        i = r.length, n[e] = i, o.push(e), a.push(t), r.push(u);
        for(let d = h, f = l.length; d !== f; ++d){
            let m = l[d];
            u[d] = new ke(m, e, t);
        }
        return u;
    }
    unsubscribe_(e) {
        let t = this._bindingsIndicesByPath, n = t[e];
        if (n !== void 0) {
            let i = this._paths, r = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
            t[c] = n, o[n] = l, o.pop(), r[n] = r[a], r.pop(), i[n] = i[a], i.pop();
        }
    }
};
Yh.prototype.isAnimationObjectGroup = !0;
var Zh = class {
    constructor(e, t, n = null, i = t.blendMode){
        this._mixer = e, this._clip = t, this._localRoot = n, this.blendMode = i;
        let r = t.tracks, o = r.length, a = new Array(o), l = {
            endingStart: Mi,
            endingEnd: Mi
        };
        for(let c = 0; c !== o; ++c){
            let h = r[c].createInterpolant(null);
            a[c] = h, h.settings = l;
        }
        this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Id, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
    }
    isRunning() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return this._startTime = e, this;
    }
    setLoop(e, t) {
        return this.loop = e, this.repetitions = t, this;
    }
    setEffectiveWeight(e) {
        return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if (e.fadeOut(t), this.fadeIn(t), n) {
            let i = this._clip.duration, r = e._clip.duration, o = r / i, a = i / r;
            e.warp(1, o, t), this.warp(a, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        let e = this._weightInterpolant;
        return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    setEffectiveTimeScale(e) {
        return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return this.timeScale = this._clip.duration / e, this.stopWarping();
    }
    syncWith(e) {
        return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        let i = this._mixer, r = i.time, o = this.timeScale, a = this._timeScaleInterpolant;
        a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
        let l = a.parameterPositions, c = a.sampleValues;
        return l[0] = r, l[1] = r + n, c[0] = e / o, c[1] = t / o, this;
    }
    stopWarping() {
        let e = this._timeScaleInterpolant;
        return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        let r = this._startTime;
        if (r !== null) {
            let l = (e - r) * n;
            if (l < 0 || n === 0) return;
            this._startTime = null, t = n * l;
        }
        t *= this._updateTimeScale(e);
        let o = this._updateTime(t), a = this._updateWeight(e);
        if (a > 0) {
            let l1 = this._interpolants, c = this._propertyBindings;
            switch(this.blendMode){
                case qc:
                    for(let h = 0, u = l1.length; h !== u; ++h)l1[h].evaluate(o), c[h].accumulateAdditive(a);
                    break;
                case ua:
                default:
                    for(let h1 = 0, u1 = l1.length; h1 !== u1; ++h1)l1[h1].evaluate(o), c[h1].accumulate(i, a);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return this._effectiveWeight = t, t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            n !== null && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t));
        }
        return this._effectiveTimeScale = t, t;
    }
    _updateTime(e) {
        let t = this._clip.duration, n = this.loop, i = this.time + e, r = this._loopCount, o = n === Dd;
        if (e === 0) return r === -1 ? i : o && (r & 1) === 1 ? t - i : i;
        if (n === Pd) {
            r === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                });
            }
        } else {
            if (r === -1 && (e >= 0 ? (r = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= t || i < 0) {
                let a = Math.floor(i / t);
                i -= t * a, r += Math.abs(a);
                let l = this.repetitions - r;
                if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1
                });
                else {
                    if (l === 1) {
                        let c = e < 0;
                        this._setEndings(c, !c, o);
                    } else this._setEndings(!1, !1, o);
                    this._loopCount = r, this.time = i, this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: a
                    });
                }
            } else this.time = i;
            if (o && (r & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        let i = this._interpolantSettings;
        n ? (i.endingStart = bi, i.endingEnd = bi) : (e ? i.endingStart = this.zeroSlopeAtStart ? bi : Mi : i.endingStart = Os, t ? i.endingEnd = this.zeroSlopeAtEnd ? bi : Mi : i.endingEnd = Os);
    }
    _scheduleFading(e, t, n) {
        let i = this._mixer, r = i.time, o = this._weightInterpolant;
        o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
        let a = o.parameterPositions, l = o.sampleValues;
        return a[0] = r, l[0] = t, a[1] = r + e, l[1] = n, this;
    }
}, $h = class extends En {
    constructor(e){
        super();
        this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
    }
    _bindAction(e, t) {
        let n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, a = e._interpolants, l = n.uuid, c = this._bindingsByRootAndName, h = c[l];
        h === void 0 && (h = {}, c[l] = h);
        for(let u = 0; u !== r; ++u){
            let d = i[u], f = d.name, m = h[f];
            if (m !== void 0) o[u] = m;
            else {
                if (m = o[u], m !== void 0) {
                    m._cacheIndex === null && (++m.referenceCount, this._addInactiveBinding(m, l, f));
                    continue;
                }
                let x = t && t._propertyBindings[u].binding.parsedPath;
                m = new Xh(ke.create(n, f, x), d.ValueTypeName, d.getValueSize()), ++m.referenceCount, this._addInactiveBinding(m, l, f), o[u] = m;
            }
            a[u].resultBuffer = m.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                let n = (e._localRoot || this._root).uuid, i = e._clip.uuid, r = this._actionsByClip[i];
                this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, i, n);
            }
            let t = e._propertyBindings;
            for(let n1 = 0, i1 = t.length; n1 !== i1; ++n1){
                let r1 = t[n1];
                r1.useCount++ === 0 && (this._lendBinding(r1), r1.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                --r.useCount === 0 && (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        let e = this;
        this.stats = {
            actions: {
                get total () {
                    return e._actions.length;
                },
                get inUse () {
                    return e._nActiveActions;
                }
            },
            bindings: {
                get total () {
                    return e._bindings.length;
                },
                get inUse () {
                    return e._nActiveBindings;
                }
            },
            controlInterpolants: {
                get total () {
                    return e._controlInterpolants.length;
                },
                get inUse () {
                    return e._nActiveControlInterpolants;
                }
            }
        };
    }
    _isActiveAction(e) {
        let t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        let i = this._actions, r = this._actionsByClip, o = r[t];
        if (o === void 0) o = {
            knownActions: [
                e
            ],
            actionByRoot: {}
        }, e._byClipCacheIndex = 0, r[t] = o;
        else {
            let a = o.knownActions;
            e._byClipCacheIndex = a.length, a.push(e);
        }
        e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
    }
    _removeInactiveAction(e) {
        let t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
        n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
        let r = e._clip.uuid, o = this._actionsByClip, a = o[r], l = a.knownActions, c = l[l.length - 1], h = e._byClipCacheIndex;
        c._byClipCacheIndex = h, l[h] = c, l.pop(), e._byClipCacheIndex = null;
        let u = a.actionByRoot, d = (e._localRoot || this._root).uuid;
        delete u[d], l.length === 0 && delete o[r], this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        let t = e._propertyBindings;
        for(let n = 0, i = t.length; n !== i; ++n){
            let r = t[n];
            --r.referenceCount === 0 && this._removeInactiveBinding(r);
        }
    }
    _lendAction(e) {
        let t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackAction(e) {
        let t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _addInactiveBinding(e, t, n) {
        let i = this._bindingsByRootAndName, r = this._bindings, o = i[t];
        o === void 0 && (o = {}, i[t] = o), o[n] = e, e._cacheIndex = r.length, r.push(e);
    }
    _removeInactiveBinding(e) {
        let t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, a = o[i], l = t[t.length - 1], c = e._cacheIndex;
        l._cacheIndex = c, t[c] = l, t.pop(), delete a[r], Object.keys(a).length === 0 && delete o[i];
    }
    _lendBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _lendControlInterpolant() {
        let e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
        return n === void 0 && (n = new Na(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = t, e[t] = n), n;
    }
    _takeBackControlInterpolant(e) {
        let t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
        e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
    }
    clipAction(e, t, n) {
        let i = t || this._root, r = i.uuid, o = typeof e == "string" ? Lr.findByName(i, e) : e, a = o !== null ? o.uuid : e, l = this._actionsByClip[a], c = null;
        if (n === void 0 && (o !== null ? n = o.blendMode : n = ua), l !== void 0) {
            let u = l.actionByRoot[r];
            if (u !== void 0 && u.blendMode === n) return u;
            c = l.knownActions[0], o === null && (o = c._clip);
        }
        if (o === null) return null;
        let h = new Zh(this, o, t, n);
        return this._bindAction(h, c), this._addInactiveAction(h, a, r), h;
    }
    existingAction(e, t) {
        let n = t || this._root, i = n.uuid, r = typeof e == "string" ? Lr.findByName(n, e) : e, o = r ? r.uuid : e, a = this._actionsByClip[o];
        return a !== void 0 && a.actionByRoot[i] || null;
    }
    stopAllAction() {
        let e = this._actions, t = this._nActiveActions;
        for(let n = t - 1; n >= 0; --n)e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        let t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1;
        for(let c = 0; c !== n; ++c)t[c]._update(i, e, r, o);
        let a = this._bindings, l = this._nActiveBindings;
        for(let c1 = 0; c1 !== l; ++c1)a[c1].apply(o);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        let t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
        if (r !== void 0) {
            let o = r.knownActions;
            for(let a = 0, l = o.length; a !== l; ++a){
                let c = o[a];
                this._deactivateAction(c);
                let h = c._cacheIndex, u = t[t.length - 1];
                c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = h, t[h] = u, t.pop(), this._removeInactiveBindingsForAction(c);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        let t = e.uuid, n = this._actionsByClip;
        for(let o in n){
            let a = n[o].actionByRoot, l = a[t];
            l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
        }
        let i = this._bindingsByRootAndName, r = i[t];
        if (r !== void 0) for(let o1 in r){
            let a1 = r[o1];
            a1.restoreOriginalState(), this._removeInactiveBinding(a1);
        }
    }
    uncacheAction(e, t) {
        let n = this.existingAction(e, t);
        n !== null && (this._deactivateAction(n), this._removeInactiveAction(n));
    }
};
$h.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
var go = class {
    constructor(e){
        typeof e == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
    }
    clone() {
        return new go(this.value.clone === void 0 ? this.value : this.value.clone());
    }
}, jh = class extends $n {
    constructor(e, t, n = 1){
        super(e, t);
        this.meshPerAttribute = n;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    clone(e) {
        let t = super.clone(e);
        return t.meshPerAttribute = this.meshPerAttribute, t;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
    }
};
jh.prototype.isInstancedInterleavedBuffer = !0;
var Qh = class {
    constructor(e, t, n, i, r){
        this.buffer = e, this.type = t, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return this.buffer = e, this;
    }
    setType(e, t) {
        return this.type = e, this.elementSize = t, this;
    }
    setItemSize(e) {
        return this.itemSize = e, this;
    }
    setCount(e) {
        return this.count = e, this;
    }
};
Qh.prototype.isGLBufferAttribute = !0;
var Ey = class {
    constructor(e, t, n = 0, i = 1 / 0){
        this.ray = new Cn(e, t), this.near = n, this.far = i, this.camera = null, this.layers = new Js, this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        };
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
    }
    intersectObject(e, t = !0, n = []) {
        return la(e, this, n, t), n.sort(Pc), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for(let i = 0, r = e.length; i < r; i++)la(e[i], this, n, t);
        return n.sort(Pc), n;
    }
};
function Pc(s, e) {
    return s.distance - e.distance;
}
function la(s, e, t, n) {
    if (s.layers.test(e.layers) && s.raycast(e, t), n === !0) {
        let i = s.children;
        for(let r = 0, o = i.length; r < o; r++)la(i[r], e, t, !0);
    }
}
var Ay = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
    }
    makeSafe() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + t * t + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(mt(t / this.radius, -1, 1))), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Cy = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Ic = new X, qi = class {
    constructor(e = new X(1 / 0, 1 / 0), t = new X(-1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ic.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ic.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
qi.prototype.isBox2 = !0;
var Dc = new M, Ts = new M, Kh = class {
    constructor(e = new M, t = new M){
        this.start = e, this.end = t;
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        Dc.subVectors(e, this.start), Ts.subVectors(this.end, this.start);
        let n = Ts.dot(Ts), r = Ts.dot(Dc) / n;
        return t && (r = mt(r, 0, 1)), r;
    }
    closestPointToPoint(e, t, n) {
        let i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Fc = new M, Ly = class extends Ne {
    constructor(e, t){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
        let n = new _e, i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1
        ];
        for(let o = 0, a = 1, l = 32; o < l; o++, a++){
            let c = o / l * Math.PI * 2, h = a / l * Math.PI * 2;
            i.push(Math.cos(c), Math.sin(c), 1, Math.cos(h), Math.sin(h), 1);
        }
        n.setAttribute("position", new de(i, 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new wt(n, r), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateMatrixWorld();
        let e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e), Fc.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Fc), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
    }
}, yn = new M, Es = new pe, Qo = new pe, eu = class extends wt {
    constructor(e){
        let t = tu(e), n = new _e, i = [], r = [], o = new ae(0, 0, 1), a = new ae(0, 1, 0);
        for(let c = 0; c < t.length; c++){
            let h = t[c];
            h.parent && h.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(a.r, a.g, a.b));
        }
        n.setAttribute("position", new de(i, 3)), n.setAttribute("color", new de(r, 3));
        let l = new ft({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        super(n, l);
        this.type = "SkeletonHelper", this.isSkeletonHelper = !0, this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    }
    updateMatrixWorld(e) {
        let t = this.bones, n = this.geometry, i = n.getAttribute("position");
        Qo.copy(this.root.matrixWorld).invert();
        for(let r = 0, o = 0; r < t.length; r++){
            let a = t[r];
            a.parent && a.parent.isBone && (Es.multiplyMatrices(Qo, a.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o, yn.x, yn.y, yn.z), Es.multiplyMatrices(Qo, a.parent.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o + 1, yn.x, yn.y, yn.z), o += 2);
        }
        n.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
    }
};
function tu(s) {
    let e = [];
    s && s.isBone && e.push(s);
    for(let t = 0; t < s.children.length; t++)e.push.apply(e, tu(s.children[t]));
    return e;
}
var Ry = class extends st {
    constructor(e, t, n){
        let i = new Fi(t, 4, 2), r = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        super(i, r);
        this.light = e, this.light.updateMatrixWorld(), this.color = n, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
    }
}, Py = new M, Nc = new ae, Bc = new ae, Iy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
        let i = new Ii(t);
        i.rotateY(Math.PI * .5), this.material = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }), this.color === void 0 && (this.material.vertexColors = !0);
        let r = i.getAttribute("position"), o = new Float32Array(r.count * 3);
        i.setAttribute("color", new Ue(o, 3)), this.add(new st(i, this.material)), this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
    update() {
        let e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            let t = e.geometry.getAttribute("color");
            Nc.copy(this.light.color), Bc.copy(this.light.groundColor);
            for(let n = 0, i = t.count; n < i; n++){
                let r = n < i / 2 ? Nc : Bc;
                t.setXYZ(n, r.r, r.g, r.b);
            }
            t.needsUpdate = !0;
        }
        e.lookAt(Py.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}, nu = class extends wt {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848){
        n = new ae(n), i = new ae(i);
        let r = t / 2, o = e / t, a = e / 2, l = [], c = [];
        for(let d = 0, f = 0, m = -a; d <= t; d++, m += o){
            l.push(-a, 0, m, a, 0, m), l.push(m, 0, -a, m, 0, a);
            let x = d === r ? n : i;
            x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3;
        }
        let h = new _e;
        h.setAttribute("position", new de(l, 3)), h.setAttribute("color", new de(c, 3));
        let u = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(h, u);
        this.type = "GridHelper";
    }
}, Dy = class extends wt {
    constructor(e = 10, t = 16, n = 8, i = 64, r = 4473924, o = 8947848){
        r = new ae(r), o = new ae(o);
        let a = [], l = [];
        for(let u = 0; u <= t; u++){
            let d = u / t * (Math.PI * 2), f = Math.sin(d) * e, m = Math.cos(d) * e;
            a.push(0, 0, 0), a.push(f, 0, m);
            let x = u & 1 ? r : o;
            l.push(x.r, x.g, x.b), l.push(x.r, x.g, x.b);
        }
        for(let u1 = 0; u1 <= n; u1++){
            let d1 = u1 & 1 ? r : o, f1 = e - e / n * u1;
            for(let m1 = 0; m1 < i; m1++){
                let x1 = m1 / i * (Math.PI * 2), v = Math.sin(x1) * f1, g = Math.cos(x1) * f1;
                a.push(v, 0, g), l.push(d1.r, d1.g, d1.b), x1 = (m1 + 1) / i * (Math.PI * 2), v = Math.sin(x1) * f1, g = Math.cos(x1) * f1, a.push(v, 0, g), l.push(d1.r, d1.g, d1.b);
            }
        }
        let c = new _e;
        c.setAttribute("position", new de(a, 3)), c.setAttribute("color", new de(l, 3));
        let h = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(c, h);
        this.type = "PolarGridHelper";
    }
}, zc = new M, As = new M, Uc = new M, Fy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, t === void 0 && (t = 1);
        let i = new _e;
        i.setAttribute("position", new de([
            -t,
            t,
            0,
            t,
            t,
            0,
            t,
            -t,
            0,
            -t,
            -t,
            0,
            -t,
            t,
            0
        ], 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new on(i, r), this.add(this.lightPlane), i = new _e, i.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            0,
            1
        ], 3)), this.targetLine = new on(i, r), this.add(this.targetLine), this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
    }
    update() {
        zc.setFromMatrixPosition(this.light.matrixWorld), As.setFromMatrixPosition(this.light.target.matrixWorld), Uc.subVectors(As, zc), this.lightPlane.lookAt(As), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(As), this.targetLine.scale.z = Uc.length();
    }
}, Cs = new M, Qe = new Ir, Ny = class extends wt {
    constructor(e){
        let t = new _e, n = new ft({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        }), i = [], r = [], o = {}, a = new ae(16755200), l = new ae(16711680), c = new ae(43775), h = new ae(16777215), u = new ae(3355443);
        d("n1", "n2", a), d("n2", "n4", a), d("n4", "n3", a), d("n3", "n1", a), d("f1", "f2", a), d("f2", "f4", a), d("f4", "f3", a), d("f3", "f1", a), d("n1", "f1", a), d("n2", "f2", a), d("n3", "f3", a), d("n4", "f4", a), d("p", "n1", l), d("p", "n2", l), d("p", "n3", l), d("p", "n4", l), d("u1", "u2", c), d("u2", "u3", c), d("u3", "u1", c), d("c", "t", h), d("p", "c", u), d("cn1", "cn2", u), d("cn3", "cn4", u), d("cf1", "cf2", u), d("cf3", "cf4", u);
        function d(m, x, v) {
            f(m, v), f(x, v);
        }
        function f(m, x) {
            i.push(0, 0, 0), r.push(x.r, x.g, x.b), o[m] === void 0 && (o[m] = []), o[m].push(i.length / 3 - 1);
        }
        t.setAttribute("position", new de(i, 3)), t.setAttribute("color", new de(r, 3));
        super(t, n);
        this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
    }
    update() {
        let e = this.geometry, t = this.pointMap, n = 1, i = 1;
        Qe.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), et("c", t, e, Qe, 0, 0, -1), et("t", t, e, Qe, 0, 0, 1), et("n1", t, e, Qe, -n, -i, -1), et("n2", t, e, Qe, n, -i, -1), et("n3", t, e, Qe, -n, i, -1), et("n4", t, e, Qe, n, i, -1), et("f1", t, e, Qe, -n, -i, 1), et("f2", t, e, Qe, n, -i, 1), et("f3", t, e, Qe, -n, i, 1), et("f4", t, e, Qe, n, i, 1), et("u1", t, e, Qe, n * .7, i * 1.1, -1), et("u2", t, e, Qe, -n * .7, i * 1.1, -1), et("u3", t, e, Qe, 0, i * 2, -1), et("cf1", t, e, Qe, -n, 0, 1), et("cf2", t, e, Qe, n, 0, 1), et("cf3", t, e, Qe, 0, -i, 1), et("cf4", t, e, Qe, 0, i, 1), et("cn1", t, e, Qe, -n, 0, -1), et("cn2", t, e, Qe, n, 0, -1), et("cn3", t, e, Qe, 0, -i, -1), et("cn4", t, e, Qe, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function et(s, e, t, n, i, r, o) {
    Cs.set(i, r, o).unproject(n);
    let a = e[s];
    if (a !== void 0) {
        let l = t.getAttribute("position");
        for(let c = 0, h = a.length; c < h; c++)l.setXYZ(a[c], Cs.x, Cs.y, Cs.z);
    }
}
var Ls = new Lt, iu = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = new Float32Array(8 * 3), r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new Ue(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
    }
    update(e) {
        if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Ls.setFromObject(this.object), Ls.isEmpty()) return;
        let t = Ls.min, n = Ls.max, i = this.geometry.attributes.position, r = i.array;
        r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return this.object = e, this.update(), this;
    }
    copy(e) {
        return wt.prototype.copy.call(this, e), this.object = e.object, this;
    }
}, By = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            -1
        ], r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new de(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        let t = this.box;
        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
    }
}, zy = class extends on {
    constructor(e, t = 1, n = 16776960){
        let i = n, r = [
            1,
            -1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ], o = new _e;
        o.setAttribute("position", new de(r, 3)), o.computeBoundingSphere();
        super(o, new ft({
            color: i,
            toneMapped: !1
        }));
        this.type = "PlaneHelper", this.plane = e, this.size = t;
        let a = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1
        ], l = new _e;
        l.setAttribute("position", new de(a, 3)), l.computeBoundingSphere(), this.add(new st(l, new hn({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })));
    }
    updateMatrixWorld(e) {
        let t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? it : Ai, this.lookAt(this.plane.normal), super.updateMatrixWorld(e);
    }
}, Oc = new M, Rs, Ko, Uy = class extends Ne {
    constructor(e = new M(0, 0, 1), t = new M(0, 0, 0), n = 1, i = 16776960, r = n * .2, o = r * .2){
        super();
        this.type = "ArrowHelper", Rs === void 0 && (Rs = new _e, Rs.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            1,
            0
        ], 3)), Ko = new Jn(0, .5, 1, 5, 1), Ko.translate(0, -.5, 0)), this.position.copy(t), this.line = new on(Rs, new ft({
            color: i,
            toneMapped: !1
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new st(Ko, new hn({
            color: i,
            toneMapped: !1
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
    }
    setDirection(e) {
        if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            Oc.set(e.z, 0, -e.x).normalize();
            let t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(Oc, t);
        }
    }
    setLength(e, t = e * .2, n = t * .2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
    }
}, ru = class extends wt {
    constructor(e = 1){
        let t = [
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e
        ], n = [
            1,
            0,
            0,
            1,
            .6,
            0,
            0,
            1,
            0,
            .6,
            1,
            0,
            0,
            0,
            1,
            0,
            .6,
            1
        ], i = new _e;
        i.setAttribute("position", new de(t, 3)), i.setAttribute("color", new de(n, 3));
        let r = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(i, r);
        this.type = "AxesHelper";
    }
    setColors(e, t, n) {
        let i = new ae, r = this.geometry.attributes.color.array;
        return i.set(e), i.toArray(r, 0), i.toArray(r, 3), i.set(t), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, Oy = class {
    constructor(){
        this.type = "ShapePath", this.color = new ae, this.subPaths = [], this.currentPath = null;
    }
    moveTo(e, t) {
        return this.currentPath = new gr, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        return this.currentPath.bezierCurveTo(e, t, n, i, r, o), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e, t) {
        function n(p) {
            let _ = [];
            for(let y = 0, b = p.length; y < b; y++){
                let A = p[y], L = new Xt;
                L.curves = A.curves, _.push(L);
            }
            return _;
        }
        function i(p, _) {
            let y = _.length, b = !1;
            for(let A = y - 1, L = 0; L < y; A = L++){
                let I = _[A], k = _[L], B = k.x - I.x, P = k.y - I.y;
                if (Math.abs(P) > Number.EPSILON) {
                    if (P < 0 && (I = _[L], B = -B, k = _[A], P = -P), p.y < I.y || p.y > k.y) continue;
                    if (p.y === I.y) {
                        if (p.x === I.x) return !0;
                    } else {
                        let w = P * (p.x - I.x) - B * (p.y - I.y);
                        if (w === 0) return !0;
                        if (w < 0) continue;
                        b = !b;
                    }
                } else {
                    if (p.y !== I.y) continue;
                    if (k.x <= p.x && p.x <= I.x || I.x <= p.x && p.x <= k.x) return !0;
                }
            }
            return b;
        }
        let r = Jt.isClockWise, o = this.subPaths;
        if (o.length === 0) return [];
        if (t === !0) return n(o);
        let a, l, c, h = [];
        if (o.length === 1) return l = o[0], c = new Xt, c.curves = l.curves, h.push(c), h;
        let u = !r(o[0].getPoints());
        u = e ? !u : u;
        let d = [], f = [], m = [], x = 0, v;
        f[x] = void 0, m[x] = [];
        for(let p = 0, _ = o.length; p < _; p++)l = o[p], v = l.getPoints(), a = r(v), a = e ? !a : a, a ? (!u && f[x] && x++, f[x] = {
            s: new Xt,
            p: v
        }, f[x].s.curves = l.curves, u && x++, m[x] = []) : m[x].push({
            h: l,
            p: v[0]
        });
        if (!f[0]) return n(o);
        if (f.length > 1) {
            let p1 = !1, _1 = [];
            for(let y = 0, b = f.length; y < b; y++)d[y] = [];
            for(let y1 = 0, b1 = f.length; y1 < b1; y1++){
                let A = m[y1];
                for(let L = 0; L < A.length; L++){
                    let I = A[L], k = !0;
                    for(let B = 0; B < f.length; B++)i(I.p, f[B].p) && (y1 !== B && _1.push({
                        froms: y1,
                        tos: B,
                        hole: L
                    }), k ? (k = !1, d[B].push(I)) : p1 = !0);
                    k && d[y1].push(I);
                }
            }
            _1.length > 0 && (p1 || (m = d));
        }
        let g;
        for(let p2 = 0, _2 = f.length; p2 < _2; p2++){
            c = f[p2].s, h.push(c), g = m[p2];
            for(let y2 = 0, b2 = g.length; y2 < b2; y2++)c.holes.push(g[y2].h);
        }
        return h;
    }
}, su = new Float32Array(1), Hy = new Int32Array(su.buffer), ky = class {
    static toHalfFloat(e) {
        e > 65504 && (console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."), e = 65504), su[0] = e;
        let t = Hy[0], n = t >> 16 & 32768, i = t >> 12 & 2047, r = t >> 23 & 255;
        return r < 103 ? n : r > 142 ? (n |= 31744, n |= (r == 255 ? 0 : 1) && t & 8388607, n) : r < 113 ? (i |= 2048, n |= (i >> 114 - r) + (i >> 113 - r & 1), n) : (n |= r - 112 << 10 | i >> 1, n += i & 1, n);
    }
}, b0 = 0, w0 = 1, S0 = 0, T0 = 1, E0 = 2;
function A0(s) {
    return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), s;
}
function C0(s = []) {
    return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), s.isMultiMaterial = !0, s.materials = s, s.clone = function() {
        return s.slice();
    }, s;
}
function L0(s, e) {
    return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new zr(s, e);
}
function R0(s) {
    return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ro(s);
}
function P0(s, e) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new zr(s, e);
}
function I0(s) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function D0(s) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function F0(s) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function N0(s, e, t) {
    return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new M(s, e, t);
}
function B0(s, e) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new Ue(s, e).setUsage(ur);
}
function z0(s, e) {
    return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new jc(s, e);
}
function U0(s, e) {
    return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new Qc(s, e);
}
function O0(s, e) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Kc(s, e);
}
function H0(s, e) {
    return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new eh(s, e);
}
function k0(s, e) {
    return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Ys(s, e);
}
function G0(s, e) {
    return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new th(s, e);
}
function V0(s, e) {
    return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Zs(s, e);
}
function W0(s, e) {
    return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new de(s, e);
}
function q0(s, e) {
    return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new ih(s, e);
}
Ct.create = function(s, e) {
    return console.log("THREE.Curve.create() has been deprecated"), s.prototype = Object.create(Ct.prototype), s.prototype.constructor = s, s.prototype.getPoint = e, s;
};
gr.prototype.fromPoints = function(s) {
    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(s);
};
function X0(s) {
    return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new ru(s);
}
function J0(s, e) {
    return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new iu(s, e);
}
function Y0(s, e) {
    return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new wt(new _a(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
nu.prototype.setColors = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
};
eu.prototype.update = function() {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
};
function Z0(s, e) {
    return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new wt(new Ea(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
bt.prototype.extractUrlBase = function(s) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Gs.extractUrlBase(s);
};
bt.Handlers = {
    add: function() {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");
    },
    get: function() {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");
    }
};
function $0(s) {
    return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new Yt(s);
}
function j0(s) {
    return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new Nh(s);
}
qi.prototype.center = function(s) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
qi.prototype.empty = function() {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
qi.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
qi.prototype.size = function(s) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(s);
};
Lt.prototype.center = function(s) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
Lt.prototype.empty = function() {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Lt.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Lt.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
Lt.prototype.size = function(s) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(s);
};
An.prototype.empty = function() {
    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Dr.prototype.setFromMatrix = function(s) {
    return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(s);
};
Kh.prototype.center = function(s) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
lt.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
lt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
};
lt.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
};
lt.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
pe.prototype.extractPosition = function(s) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(s);
};
pe.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
pe.prototype.getPosition = function() {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), new M().setFromMatrixColumn(this, 3);
};
pe.prototype.setRotationFromQuaternion = function(s) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(s);
};
pe.prototype.multiplyToArray = function() {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
};
pe.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector4 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
};
pe.prototype.rotateAxis = function(s) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), s.transformDirection(this);
};
pe.prototype.crossVector = function(s) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.translate = function() {
    console.error("THREE.Matrix4: .translate() has been removed.");
};
pe.prototype.rotateX = function() {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
};
pe.prototype.rotateY = function() {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
};
pe.prototype.rotateZ = function() {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
};
pe.prototype.rotateByAxis = function() {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
};
pe.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
};
pe.prototype.makeFrustum = function(s, e, t, n, i, r) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(s, e, n, t, i, r);
};
pe.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
Wt.prototype.isIntersectionLine = function(s) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(s);
};
gt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), s.applyQuaternion(this);
};
gt.prototype.inverse = function() {
    return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert();
};
Cn.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Cn.prototype.isIntersectionPlane = function(s) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(s);
};
Cn.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
nt.prototype.area = function() {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
};
nt.prototype.barycoordFromPoint = function(s, e) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(s, e);
};
nt.prototype.midpoint = function(s) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(s);
};
nt.prototypenormal = function(s) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(s);
};
nt.prototype.plane = function(s) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(s);
};
nt.barycoordFromPoint = function(s, e, t, n, i) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), nt.getBarycoord(s, e, t, n, i);
};
nt.normal = function(s, e, t, n) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), nt.getNormal(s, e, t, n);
};
Xt.prototype.extractAllPoints = function(s) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(s);
};
Xt.prototype.extrude = function(s) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new ln(this, s);
};
Xt.prototype.makeGeometry = function(s) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Di(this, s);
};
X.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
X.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
X.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
M.prototype.setEulerFromRotationMatrix = function() {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
};
M.prototype.setEulerFromQuaternion = function() {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
};
M.prototype.getPositionFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(s);
};
M.prototype.getScaleFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(s);
};
M.prototype.getColumnFromMatrix = function(s, e) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, s);
};
M.prototype.applyProjection = function(s) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(s);
};
M.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
M.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
M.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ve.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
Ve.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ne.prototype.getChildByName = function(s) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(s);
};
Ne.prototype.renderDepth = function() {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
};
Ne.prototype.translate = function(s, e) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, s);
};
Ne.prototype.getWorldRotation = function() {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
};
Ne.prototype.applyMatrix = function(s) {
    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(Ne.prototype, {
    eulerOrder: {
        get: function() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
        },
        set: function(s) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = s;
        }
    },
    useQuaternion: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        },
        set: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        }
    }
});
st.prototype.setDrawMode = function() {
    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
};
Object.defineProperties(st.prototype, {
    drawMode: {
        get: function() {
            return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), Fd;
        },
        set: function() {
            console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
        }
    }
});
so.prototype.initBones = function() {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
};
ut.prototype.setLens = function(s, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), e !== void 0 && (this.filmGauge = e), this.setFocalLength(s);
};
Object.defineProperties(Bt.prototype, {
    onlyShadow: {
        set: function() {
            console.warn("THREE.Light: .onlyShadow has been removed.");
        }
    },
    shadowCameraFov: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = s;
        }
    },
    shadowCameraLeft: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = s;
        }
    },
    shadowCameraRight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = s;
        }
    },
    shadowCameraTop: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = s;
        }
    },
    shadowCameraBottom: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = s;
        }
    },
    shadowCameraNear: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = s;
        }
    },
    shadowCameraFar: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = s;
        }
    },
    shadowCameraVisible: {
        set: function() {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
        }
    },
    shadowBias: {
        set: function(s) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = s;
        }
    },
    shadowDarkness: {
        set: function() {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
        }
    },
    shadowMapWidth: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = s;
        }
    },
    shadowMapHeight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = s;
        }
    }
});
Object.defineProperties(Ue.prototype, {
    length: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
        }
    },
    dynamic: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === ur;
        },
        set: function() {
            console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(ur);
        }
    }
});
Ue.prototype.setDynamic = function(s) {
    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
Ue.prototype.copyIndicesArray = function() {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
}, Ue.prototype.setArray = function() {
    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
_e.prototype.addIndex = function(s) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(s);
};
_e.prototype.addAttribute = function(s, e) {
    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), !(e && e.isBufferAttribute) && !(e && e.isInterleavedBufferAttribute) ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(s, new Ue(arguments[1], arguments[2]))) : s === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e), this) : this.setAttribute(s, e);
};
_e.prototype.addDrawCall = function(s, e, t) {
    t !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(s, e);
};
_e.prototype.clearDrawCalls = function() {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
};
_e.prototype.computeOffsets = function() {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
};
_e.prototype.removeAttribute = function(s) {
    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(s);
};
_e.prototype.applyMatrix = function(s) {
    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(_e.prototype, {
    drawcalls: {
        get: function() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
        }
    },
    offsets: {
        get: function() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
        }
    }
});
$n.prototype.setDynamic = function(s) {
    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
$n.prototype.setArray = function() {
    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
ln.prototype.getArrays = function() {
    console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.");
};
ln.prototype.addShapeList = function() {
    console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.");
};
ln.prototype.addShape = function() {
    console.error("THREE.ExtrudeGeometry: .addShape() has been removed.");
};
no.prototype.dispose = function() {
    console.error("THREE.Scene: .dispose() has been removed.");
};
go.prototype.onUpdate = function() {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
};
Object.defineProperties(dt.prototype, {
    wrapAround: {
        get: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        }
    },
    overdraw: {
        get: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        }
    },
    wrapRGB: {
        get: function() {
            return console.warn("THREE.Material: .wrapRGB has been removed."), new ae;
        }
    },
    shading: {
        get: function() {
            console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = s === kc;
        }
    },
    stencilMask: {
        get: function() {
            return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask;
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = s;
        }
    },
    vertexTangents: {
        get: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        },
        set: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        }
    }
});
Object.defineProperties(sn.prototype, {
    derivatives: {
        get: function() {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
        },
        set: function(s) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = s;
        }
    }
});
qe.prototype.clearTarget = function(s, e, t, n) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(s), this.clear(e, t, n);
};
qe.prototype.animate = function(s) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(s);
};
qe.prototype.getCurrentRenderTarget = function() {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
};
qe.prototype.getMaxAnisotropy = function() {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
};
qe.prototype.getPrecision = function() {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
};
qe.prototype.resetGLState = function() {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
};
qe.prototype.supportsFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
};
qe.prototype.supportsHalfFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
};
qe.prototype.supportsStandardDerivatives = function() {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
};
qe.prototype.supportsCompressedTextureS3TC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
};
qe.prototype.supportsCompressedTexturePVRTC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
};
qe.prototype.supportsBlendMinMax = function() {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
};
qe.prototype.supportsVertexTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
};
qe.prototype.supportsInstancedArrays = function() {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
};
qe.prototype.enableScissorTest = function(s) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(s);
};
qe.prototype.initMaterial = function() {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
};
qe.prototype.addPrePlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
};
qe.prototype.addPostPlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
};
qe.prototype.updateShadowMap = function() {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
};
qe.prototype.setFaceCulling = function() {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
};
qe.prototype.allocTextureUnit = function() {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
};
qe.prototype.setTexture = function() {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
};
qe.prototype.setTexture2D = function() {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
};
qe.prototype.setTextureCube = function() {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
};
qe.prototype.getActiveMipMapLevel = function() {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
};
Object.defineProperties(qe.prototype, {
    shadowMapEnabled: {
        get: function() {
            return this.shadowMap.enabled;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = s;
        }
    },
    shadowMapType: {
        get: function() {
            return this.shadowMap.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = s;
        }
    },
    shadowMapCullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    context: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
        }
    },
    vr: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr;
        }
    },
    gammaInput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
        }
    },
    gammaOutput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = s === !0 ? Oi : Nt;
        }
    },
    toneMappingWhitePoint: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");
        }
    },
    gammaFactor: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
        }
    }
});
Object.defineProperties(yh.prototype, {
    cullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    renderReverseSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        }
    },
    renderSingleSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        }
    }
});
function Q0(s, e, t) {
    return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new js(s, t);
}
Object.defineProperties(At.prototype, {
    wrapS: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = s;
        }
    },
    wrapT: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = s;
        }
    },
    magFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = s;
        }
    },
    minFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = s;
        }
    },
    anisotropy: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = s;
        }
    },
    offset: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = s;
        }
    },
    repeat: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = s;
        }
    },
    format: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = s;
        }
    },
    type: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = s;
        }
    },
    generateMipmaps: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = s;
        }
    }
});
Za.prototype.load = function(s) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    let e = this;
    return new kh().load(s, function(n) {
        e.setBuffer(n);
    }), this;
};
qh.prototype.getData = function() {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
};
$s.prototype.updateCubeMap = function(s, e) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(s, e);
};
$s.prototype.clear = function(s, e, t, n) {
    return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(s, e, t, n);
};
Yn.crossOrigin = void 0;
Yn.loadTexture = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    let i = new Bh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadTextureCube = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    let i = new Fh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadCompressedTexture = function() {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
};
Yn.loadCompressedTextureCube = function() {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
};
function K0() {
    console.error("THREE.CanvasRenderer has been removed");
}
function ev() {
    console.error("THREE.JSONLoader has been removed.");
}
var tv = {
    createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    }
};
function nv() {
    console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js");
}
function iv() {
    return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"), new _e;
}
function rv() {
    return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"), new _e;
}
function sv() {
    console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js");
}
function ov() {
    console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js");
}
function av() {
    console.error("THREE.ImmediateRenderObject has been removed.");
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
    detail: {
        revision: ca
    }
}));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = ca);
const mod = {
    ACESFilmicToneMapping: Uu,
    AddEquation: _i,
    AddOperation: Fu,
    AdditiveAnimationBlendMode: qc,
    AdditiveBlending: nl,
    AlphaFormat: Xu,
    AlwaysDepth: Au,
    AlwaysStencilFunc: Ud,
    AmbientLight: qa,
    AmbientLightProbe: Vh,
    AnimationClip: Lr,
    AnimationLoader: cy,
    AnimationMixer: $h,
    AnimationObjectGroup: Yh,
    AnimationUtils: Ze,
    ArcCurve: Ma,
    ArrayCamera: ga,
    ArrowHelper: Uy,
    Audio: Za,
    AudioAnalyser: qh,
    AudioContext: Hh,
    AudioListener: my,
    AudioLoader: kh,
    AxesHelper: ru,
    AxisHelper: X0,
    BackSide: it,
    BasicDepthPacking: Nd,
    BasicShadowMap: qy,
    BinaryTextureLoader: j0,
    Bone: oo,
    BooleanKeyframeTrack: Qn,
    BoundingBoxHelper: J0,
    Box2: qi,
    Box3: Lt,
    Box3Helper: By,
    BoxBufferGeometry: wn,
    BoxGeometry: wn,
    BoxHelper: iu,
    BufferAttribute: Ue,
    BufferGeometry: _e,
    BufferGeometryLoader: Uh,
    ByteType: Hu,
    Cache: Ni,
    Camera: Ir,
    CameraHelper: Ny,
    CanvasRenderer: K0,
    CanvasTexture: Th,
    CatmullRomCurve3: wa,
    CineonToneMapping: zu,
    CircleBufferGeometry: fr,
    CircleGeometry: fr,
    ClampToEdgeWrapping: vt,
    Clock: Wh,
    Color: ae,
    ColorKeyframeTrack: Ba,
    CompressedTexture: va,
    CompressedTextureLoader: hy,
    ConeBufferGeometry: pr,
    ConeGeometry: pr,
    CubeCamera: $s,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    CubeTexture: ki,
    CubeTextureLoader: Fh,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    CubicInterpolant: Ph,
    CullFaceBack: tl,
    CullFaceFront: du,
    CullFaceFrontBack: Wy,
    CullFaceNone: uu,
    Curve: Ct,
    CurvePath: Ah,
    CustomBlending: pu,
    CustomToneMapping: Ou,
    CylinderBufferGeometry: Jn,
    CylinderGeometry: Jn,
    Cylindrical: Cy,
    DataTexture: qn,
    DataTexture2DArray: Qs,
    DataTexture3D: ma,
    DataTextureLoader: Nh,
    DataUtils: ky,
    DecrementStencilOp: n0,
    DecrementWrapStencilOp: r0,
    DefaultLoadingManager: ly,
    DepthFormat: Vn,
    DepthStencilFormat: Li,
    DepthTexture: ks,
    DirectionalLight: Wa,
    DirectionalLightHelper: Fy,
    DiscreteInterpolant: Ih,
    DodecahedronBufferGeometry: mr,
    DodecahedronGeometry: mr,
    DoubleSide: Ci,
    DstAlphaFactor: Mu,
    DstColorFactor: wu,
    DynamicBufferAttribute: B0,
    DynamicCopyUsage: y0,
    DynamicDrawUsage: ur,
    DynamicReadUsage: m0,
    EdgesGeometry: _a,
    EdgesHelper: Y0,
    EllipseCurve: Ur,
    EqualDepth: Lu,
    EqualStencilFunc: l0,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    Euler: Zn,
    EventDispatcher: En,
    ExtrudeBufferGeometry: ln,
    ExtrudeGeometry: ln,
    FaceColors: T0,
    FileLoader: Yt,
    FlatShading: kc,
    Float16BufferAttribute: nh,
    Float32Attribute: W0,
    Float32BufferAttribute: de,
    Float64Attribute: q0,
    Float64BufferAttribute: ih,
    FloatType: nn,
    Fog: Br,
    FogExp2: Nr,
    Font: ov,
    FontLoader: sv,
    FramebufferTexture: Sh,
    FrontSide: Ai,
    Frustum: Dr,
    GLBufferAttribute: Qh,
    GLSL1: _0,
    GLSL3: xl,
    GreaterDepth: Pu,
    GreaterEqualDepth: Ru,
    GreaterEqualStencilFunc: d0,
    GreaterStencilFunc: h0,
    GridHelper: nu,
    Group: Hn,
    HalfFloatType: kn,
    HemisphereLight: Ua,
    HemisphereLightHelper: Iy,
    HemisphereLightProbe: Gh,
    IcosahedronBufferGeometry: _r,
    IcosahedronGeometry: _r,
    ImageBitmapLoader: Oh,
    ImageLoader: Rr,
    ImageUtils: Yn,
    ImmediateRenderObject: av,
    IncrementStencilOp: t0,
    IncrementWrapStencilOp: i0,
    InstancedBufferAttribute: Xn,
    InstancedBufferGeometry: Ya,
    InstancedInterleavedBuffer: jh,
    InstancedMesh: xa,
    Int16Attribute: H0,
    Int16BufferAttribute: eh,
    Int32Attribute: G0,
    Int32BufferAttribute: th,
    Int8Attribute: z0,
    Int8BufferAttribute: jc,
    IntType: Gu,
    InterleavedBuffer: $n,
    InterleavedBufferAttribute: Sn,
    Interpolant: cn,
    InterpolateDiscrete: zs,
    InterpolateLinear: Us,
    InterpolateSmooth: yo,
    InvertStencilOp: s0,
    JSONLoader: ev,
    KeepStencilOp: vo,
    KeyframeTrack: zt,
    LOD: bh,
    LatheBufferGeometry: Mr,
    LatheGeometry: Mr,
    Layers: Js,
    LensFlare: nv,
    LessDepth: Cu,
    LessEqualDepth: ea,
    LessEqualStencilFunc: c0,
    LessStencilFunc: a0,
    Light: Bt,
    LightProbe: Hr,
    Line: on,
    Line3: Kh,
    LineBasicMaterial: ft,
    LineCurve: Or,
    LineCurve3: Eh,
    LineDashedMaterial: Fa,
    LineLoop: ya,
    LinePieces: w0,
    LineSegments: wt,
    LineStrip: b0,
    LinearEncoding: Nt,
    LinearFilter: tt,
    LinearInterpolant: Na,
    LinearMipMapLinearFilter: $y,
    LinearMipMapNearestFilter: Zy,
    LinearMipmapLinearFilter: Ui,
    LinearMipmapNearestFilter: Wc,
    LinearToneMapping: Nu,
    Loader: bt,
    LoaderUtils: Gs,
    LoadingManager: za,
    LoopOnce: Pd,
    LoopPingPong: Dd,
    LoopRepeat: Id,
    LuminanceAlphaFormat: Yu,
    LuminanceFormat: Ju,
    MOUSE: Gy,
    Material: dt,
    MaterialLoader: zh,
    Math: M0,
    MathUtils: M0,
    Matrix3: lt,
    Matrix4: pe,
    MaxEquation: ol,
    Mesh: st,
    MeshBasicMaterial: hn,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshFaceMaterial: A0,
    MeshLambertMaterial: Ia,
    MeshMatcapMaterial: Da,
    MeshNormalMaterial: Pa,
    MeshPhongMaterial: La,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshToonMaterial: Ra,
    MinEquation: sl,
    MirroredRepeatWrapping: Bs,
    MixOperation: Du,
    MultiMaterial: C0,
    MultiplyBlending: rl,
    MultiplyOperation: Vs,
    NearestFilter: rt,
    NearestMipMapLinearFilter: Yy,
    NearestMipMapNearestFilter: Jy,
    NearestMipmapLinearFilter: na,
    NearestMipmapNearestFilter: ta,
    NeverDepth: Eu,
    NeverStencilFunc: o0,
    NoBlending: vn,
    NoColors: S0,
    NoToneMapping: _n,
    NormalAnimationBlendMode: ua,
    NormalBlending: sr,
    NotEqualDepth: Iu,
    NotEqualStencilFunc: u0,
    NumberKeyframeTrack: Ar,
    Object3D: Ne,
    ObjectLoader: uy,
    ObjectSpaceNormalMap: zd,
    OctahedronBufferGeometry: Ii,
    OctahedronGeometry: Ii,
    OneFactor: yu,
    OneMinusDstAlphaFactor: bu,
    OneMinusDstColorFactor: Su,
    OneMinusSrcAlphaFactor: Vc,
    OneMinusSrcColorFactor: _u,
    OrthographicCamera: Fr,
    PCFShadowMap: Hc,
    PCFSoftShadowMap: fu,
    PMREMGenerator: ah,
    ParametricGeometry: iv,
    Particle: R0,
    ParticleBasicMaterial: D0,
    ParticleSystem: P0,
    ParticleSystemMaterial: F0,
    Path: gr,
    PerspectiveCamera: ut,
    Plane: Wt,
    PlaneBufferGeometry: Pi,
    PlaneGeometry: Pi,
    PlaneHelper: zy,
    PointCloud: L0,
    PointCloudMaterial: I0,
    PointLight: Ga,
    PointLightHelper: Ry,
    Points: zr,
    PointsMaterial: jn,
    PolarGridHelper: Dy,
    PolyhedronBufferGeometry: an,
    PolyhedronGeometry: an,
    PositionalAudio: xy,
    PropertyBinding: ke,
    PropertyMixer: Xh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    Quaternion: gt,
    QuaternionKeyframeTrack: Wi,
    QuaternionLinearInterpolant: Dh,
    REVISION: ca,
    RGBADepthPacking: Bd,
    RGBAFormat: ct,
    RGBAIntegerFormat: ed,
    RGBA_ASTC_10x10_Format: fd,
    RGBA_ASTC_10x5_Format: hd,
    RGBA_ASTC_10x6_Format: ud,
    RGBA_ASTC_10x8_Format: dd,
    RGBA_ASTC_12x10_Format: pd,
    RGBA_ASTC_12x12_Format: md,
    RGBA_ASTC_4x4_Format: nd,
    RGBA_ASTC_5x4_Format: id,
    RGBA_ASTC_5x5_Format: rd,
    RGBA_ASTC_6x5_Format: sd,
    RGBA_ASTC_6x6_Format: od,
    RGBA_ASTC_8x5_Format: ad,
    RGBA_ASTC_8x6_Format: ld,
    RGBA_ASTC_8x8_Format: cd,
    RGBA_BPTC_Format: gd,
    RGBA_ETC2_EAC_Format: gl,
    RGBA_PVRTC_2BPPV1_Format: pl,
    RGBA_PVRTC_4BPPV1_Format: fl,
    RGBA_S3TC_DXT1_Format: ll,
    RGBA_S3TC_DXT3_Format: cl,
    RGBA_S3TC_DXT5_Format: hl,
    RGBFormat: Gn,
    RGBIntegerFormat: Ku,
    RGB_ETC1_Format: td,
    RGB_ETC2_Format: ml,
    RGB_PVRTC_2BPPV1_Format: dl,
    RGB_PVRTC_4BPPV1_Format: ul,
    RGB_S3TC_DXT1_Format: al,
    RGFormat: ju,
    RGIntegerFormat: Qu,
    RawShaderMaterial: Gi,
    Ray: Cn,
    Raycaster: Ey,
    RectAreaLight: Xa,
    RedFormat: Zu,
    RedIntegerFormat: $u,
    ReinhardToneMapping: Bu,
    RepeatWrapping: Ns,
    ReplaceStencilOp: e0,
    ReverseSubtractEquation: gu,
    RingBufferGeometry: br,
    RingGeometry: br,
    SRGB8_ALPHA8_ASTC_10x10_Format: Cd,
    SRGB8_ALPHA8_ASTC_10x5_Format: Td,
    SRGB8_ALPHA8_ASTC_10x6_Format: Ed,
    SRGB8_ALPHA8_ASTC_10x8_Format: Ad,
    SRGB8_ALPHA8_ASTC_12x10_Format: Ld,
    SRGB8_ALPHA8_ASTC_12x12_Format: Rd,
    SRGB8_ALPHA8_ASTC_4x4_Format: xd,
    SRGB8_ALPHA8_ASTC_5x4_Format: yd,
    SRGB8_ALPHA8_ASTC_5x5_Format: vd,
    SRGB8_ALPHA8_ASTC_6x5_Format: _d,
    SRGB8_ALPHA8_ASTC_6x6_Format: Md,
    SRGB8_ALPHA8_ASTC_8x5_Format: bd,
    SRGB8_ALPHA8_ASTC_8x6_Format: wd,
    SRGB8_ALPHA8_ASTC_8x8_Format: Sd,
    Scene: no,
    SceneUtils: tv,
    ShaderChunk: Fe,
    ShaderLib: qt,
    ShaderMaterial: sn,
    ShadowMaterial: Aa,
    Shape: Xt,
    ShapeBufferGeometry: Di,
    ShapeGeometry: Di,
    ShapePath: Oy,
    ShapeUtils: Jt,
    ShortType: ku,
    Skeleton: ao,
    SkeletonHelper: eu,
    SkinnedMesh: so,
    SmoothShading: Xy,
    Sphere: An,
    SphereBufferGeometry: Fi,
    SphereGeometry: Fi,
    Spherical: Ay,
    SphericalHarmonics3: Ja,
    SplineCurve: uo,
    SpotLight: Ha,
    SpotLightHelper: Ly,
    Sprite: ro,
    SpriteMaterial: io,
    SrcAlphaFactor: Gc,
    SrcAlphaSaturateFactor: Tu,
    SrcColorFactor: vu,
    StaticCopyUsage: x0,
    StaticDrawUsage: hr,
    StaticReadUsage: p0,
    StereoCamera: fy,
    StreamCopyUsage: v0,
    StreamDrawUsage: f0,
    StreamReadUsage: g0,
    StringKeyframeTrack: Kn,
    SubtractEquation: mu,
    SubtractiveBlending: il,
    TOUCH: Vy,
    TangentSpaceNormalMap: Hi,
    TetrahedronBufferGeometry: wr,
    TetrahedronGeometry: wr,
    TextGeometry: rv,
    Texture: ot,
    TextureLoader: Bh,
    TorusBufferGeometry: Sr,
    TorusGeometry: Sr,
    TorusKnotBufferGeometry: Tr,
    TorusKnotGeometry: Tr,
    Triangle: nt,
    TriangleFanDrawMode: Qy,
    TriangleStripDrawMode: jy,
    TrianglesDrawMode: Fd,
    TubeBufferGeometry: Er,
    TubeGeometry: Er,
    UVMapping: ha,
    Uint16Attribute: k0,
    Uint16BufferAttribute: Ys,
    Uint32Attribute: V0,
    Uint32BufferAttribute: Zs,
    Uint8Attribute: U0,
    Uint8BufferAttribute: Qc,
    Uint8ClampedAttribute: O0,
    Uint8ClampedBufferAttribute: Kc,
    Uniform: go,
    UniformsLib: ie,
    UniformsUtils: uf,
    UnsignedByteType: rn,
    UnsignedInt248Type: Ti,
    UnsignedIntType: Ps,
    UnsignedShort4444Type: Vu,
    UnsignedShort5551Type: Wu,
    UnsignedShort565Type: qu,
    UnsignedShortType: cr,
    VSMShadowMap: ir,
    Vector2: X,
    Vector3: M,
    Vector4: Ve,
    VectorKeyframeTrack: Cr,
    Vertex: N0,
    VertexColors: E0,
    VideoTexture: wh,
    WebGL1Renderer: _h,
    WebGLCubeRenderTarget: js,
    WebGLMultipleRenderTargets: Zc,
    WebGLMultisampleRenderTarget: Xs,
    WebGLRenderTarget: At,
    WebGLRenderTargetCube: Q0,
    WebGLRenderer: qe,
    WebGLUtils: Ex,
    WireframeGeometry: Ea,
    WireframeHelper: Z0,
    WrapAroundEnding: Os,
    XHRLoader: $0,
    ZeroCurvatureEnding: Mi,
    ZeroFactor: xu,
    ZeroSlopeEnding: bi,
    ZeroStencilOp: Ky,
    sRGBEncoding: Oi
};
function getWebGLErrorMessage() {
    return getErrorMessage(1);
}
function getErrorMessage(version) {
    var names = {
        1: "WebGL",
        2: "WebGL 2"
    };
    var contexts = {
        1: window.WebGLRenderingContext,
        2: window.WebGL2RenderingContext
    };
    var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
    var element = document.createElement("div");
    element.id = "webglmessage";
    element.style.fontFamily = "monospace";
    element.style.fontSize = "13px";
    element.style.fontWeight = "normal";
    element.style.textAlign = "center";
    element.style.background = "#fff";
    element.style.color = "#000";
    element.style.padding = "1.5em";
    element.style.width = "400px";
    element.style.margin = "5em auto 0";
    if (contexts[version]) {
        message = message.replace("$0", "graphics card");
    } else {
        message = message.replace("$0", "browser");
    }
    message = message.replace("$1", names[version]);
    element.innerHTML = message;
    return element;
}
const pixelRatio = window.devicePixelRatio || 1.0;
function event2scene_pixel(scene, event) {
    const { canvas  } = scene.screen;
    const rect = canvas.getBoundingClientRect();
    const x = (event.clientX - rect.left) * pixelRatio;
    const y = (rect.height - (event.clientY - rect.top)) * pixelRatio;
    return [
        x,
        y
    ];
}
function Identity4x4() {
    return new pe();
}
function in_scene(scene, mouse_event) {
    const [x, y] = event2scene_pixel(scene, mouse_event);
    const [sx, sy, sw, sh] = scene.pixelarea.value;
    return x >= sx && x < sx + sw && y >= sy && y < sy + sh;
}
function attach_3d_camera(canvas, makie_camera, cam3d, scene) {
    if (cam3d === undefined) {
        return;
    }
    const [w, h] = makie_camera.resolution.value;
    const camera = new ut(cam3d.fov, w / h, cam3d.near, cam3d.far);
    const center = new M(...cam3d.lookat);
    camera.up = new M(...cam3d.upvector);
    camera.position.set(...cam3d.eyeposition);
    camera.lookAt(center);
    function update() {
        camera.updateProjectionMatrix();
        camera.updateWorldMatrix();
        const view = camera.matrixWorldInverse;
        const projection = camera.projectionMatrix;
        const [width, height] = makie_camera.resolution.value;
        const [x, y, z] = camera.position;
        makie_camera.update_matrices(view.elements, projection.elements, [
            width,
            height
        ], [
            x,
            y,
            z
        ]);
    }
    function addMouseHandler(domObject, drag, zoomIn, zoomOut) {
        let startDragX = null;
        let startDragY = null;
        function mouseWheelHandler(e) {
            e = window.event || e;
            if (!in_scene(scene, e)) {
                return;
            }
            const delta = Math.sign(e.deltaY);
            if (delta == -1) {
                zoomOut();
            } else if (delta == 1) {
                zoomIn();
            }
            e.preventDefault();
        }
        function mouseDownHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseMoveHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            if (startDragX === null || startDragY === null) return;
            if (drag) drag(e.clientX - startDragX, e.clientY - startDragY);
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseUpHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            mouseMoveHandler.call(this, e);
            startDragX = null;
            startDragY = null;
            e.preventDefault();
        }
        domObject.addEventListener("wheel", mouseWheelHandler);
        domObject.addEventListener("mousedown", mouseDownHandler);
        domObject.addEventListener("mousemove", mouseMoveHandler);
        domObject.addEventListener("mouseup", mouseUpHandler);
    }
    function drag(deltaX, deltaY) {
        const radPerPixel = Math.PI / 450;
        const deltaPhi = radPerPixel * deltaX;
        const deltaTheta = radPerPixel * deltaY;
        const pos = camera.position.sub(center);
        const radius = pos.length();
        let theta = Math.acos(pos.z / radius);
        let phi = Math.atan2(pos.y, pos.x);
        theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);
        phi -= deltaPhi;
        pos.x = radius * Math.sin(theta) * Math.cos(phi);
        pos.y = radius * Math.sin(theta) * Math.sin(phi);
        pos.z = radius * Math.cos(theta);
        camera.position.add(center);
        camera.lookAt(center);
        update();
    }
    function zoomIn() {
        camera.position.sub(center).multiplyScalar(0.9).add(center);
        update();
    }
    function zoomOut() {
        camera.position.sub(center).multiplyScalar(1.1).add(center);
        update();
    }
    addMouseHandler(canvas, drag, zoomIn, zoomOut);
}
function mul(a, b) {
    return b.clone().multiply(a);
}
function orthographicprojection(left, right, bottom, top, znear, zfar) {
    return [
        2 / (right - left),
        0,
        0,
        0,
        0,
        2 / (top - bottom),
        0,
        0,
        0,
        0,
        -2 / (zfar - znear),
        0,
        -(right + left) / (right - left),
        -(top + bottom) / (top - bottom),
        -(zfar + znear) / (zfar - znear),
        1
    ];
}
function pixel_space_inverse(w, h, near) {
    return [
        0.5 * w,
        0,
        0,
        0,
        0,
        0.5 * h,
        0,
        0,
        0,
        0,
        near,
        0,
        0.5 * w,
        0.5 * h,
        0,
        1
    ];
}
function relative_space() {
    const relative = Identity4x4();
    relative.fromArray([
        2,
        0,
        0,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        1,
        0,
        -1,
        -1,
        0,
        1
    ]);
    return relative;
}
class MakieCamera {
    constructor(){
        this.view = new go(Identity4x4());
        this.projection = new go(Identity4x4());
        this.projectionview = new go(Identity4x4());
        this.pixel_space = new go(Identity4x4());
        this.pixel_space_inverse = new go(Identity4x4());
        this.projectionview_inverse = new go(Identity4x4());
        this.relative_space = new go(relative_space());
        this.relative_inverse = new go(relative_space().invert());
        this.clip_space = new go(Identity4x4());
        this.resolution = new go(new X());
        this.eyeposition = new go(new M());
        this.preprojections = {};
    }
    calculate_matrices() {
        const [w, h] = this.resolution.value;
        const nearclip = -10_000;
        this.pixel_space.value.fromArray(orthographicprojection(0, w, 0, h, nearclip, 10_000));
        this.pixel_space_inverse.value.fromArray(pixel_space_inverse(w, h, nearclip));
        const proj_view = mul(this.view.value, this.projection.value);
        this.projectionview.value = proj_view;
        this.projectionview_inverse.value = proj_view.clone().invert();
        Object.keys(this.preprojections).forEach((key)=>{
            const [space, markerspace] = key.split(",");
            this.preprojections[key].value = this.calculate_preprojection_matrix(space, markerspace);
        });
    }
    update_matrices(view, projection, resolution, eyepos) {
        this.view.value.fromArray(view);
        this.projection.value.fromArray(projection);
        this.resolution.value.fromArray(resolution);
        this.eyeposition.value.fromArray(eyepos);
        this.calculate_matrices();
        return;
    }
    clip_to_space(space) {
        if (space === "data") {
            return this.projectionview_inverse.value;
        } else if (space === "pixel") {
            return this.pixel_space_inverse.value;
        } else if (space === "relative") {
            return this.relative_inverse.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    space_to_clip(space) {
        if (space === "data") {
            return this.projectionview.value;
        } else if (space === "pixel") {
            return this.pixel_space.value;
        } else if (space === "relative") {
            return this.relative_space.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    calculate_preprojection_matrix(space, markerspace) {
        const cp = this.clip_to_space(markerspace);
        const sc = this.space_to_clip(space);
        return mul(sc, cp);
    }
    preprojection_matrix(space, markerspace) {
        const key = [
            space,
            markerspace
        ];
        const matrix_uniform = this.preprojections[key];
        if (matrix_uniform) {
            return matrix_uniform;
        } else {
            const matrix = this.calculate_preprojection_matrix(space, markerspace);
            const uniform = new go(matrix);
            this.preprojections[key] = uniform;
            return uniform;
        }
    }
}
const scene_cache = {};
const plot_cache = {};
const TEXTURE_ATLAS = [
    undefined
];
function add_scene(scene_id, three_scene) {
    scene_cache[scene_id] = three_scene;
}
function find_scene(scene_id) {
    return scene_cache[scene_id];
}
function delete_scene(scene_id) {
    const scene = scene_cache[scene_id];
    if (!scene) {
        return;
    }
    while(scene.children.length > 0){
        scene.remove(scene.children[0]);
    }
    delete scene_cache[scene_id];
}
function find_plots(plot_uuids) {
    const plots = [];
    plot_uuids.forEach((id)=>{
        const plot = plot_cache[id];
        if (plot) {
            plots.push(plot);
        }
    });
    return plots;
}
function delete_scenes(scene_uuids, plot_uuids) {
    plot_uuids.forEach((plot_id)=>{
        delete plot_cache[plot_id];
    });
    scene_uuids.forEach((scene_id)=>{
        delete_scene(scene_id);
    });
}
function insert_plot(scene_id, plot_data) {
    const scene = find_scene(scene_id);
    plot_data.forEach((plot)=>{
        add_plot(scene, plot);
    });
}
function delete_plots(scene_id, plot_uuids) {
    console.log(`deleting plots!: ${plot_uuids}`);
    const scene = find_scene(scene_id);
    const plots = find_plots(plot_uuids);
    plots.forEach((p)=>{
        scene.remove(p);
        delete plot_cache[p];
    });
}
function convert_texture(data) {
    const tex = create_texture(data);
    tex.needsUpdate = true;
    tex.minFilter = mod[data.minFilter];
    tex.magFilter = mod[data.magFilter];
    tex.anisotropy = data.anisotropy;
    tex.wrapS = mod[data.wrapS];
    if (data.size.length > 1) {
        tex.wrapT = mod[data.wrapT];
    }
    if (data.size.length > 2) {
        tex.wrapR = mod[data.wrapR];
    }
    return tex;
}
function is_three_fixed_array(value) {
    return value instanceof mod.Vector2 || value instanceof mod.Vector3 || value instanceof mod.Vector4 || value instanceof mod.Matrix4;
}
function to_uniform(data) {
    if (data.type !== undefined) {
        if (data.type == "Sampler") {
            return convert_texture(data);
        }
        throw new Error(`Type ${data.type} not known`);
    }
    if (Array.isArray(data) || ArrayBuffer.isView(data)) {
        if (!data.every((x)=>typeof x === "number")) {
            return data;
        }
        if (data.length == 2) {
            return new mod.Vector2().fromArray(data);
        }
        if (data.length == 3) {
            return new mod.Vector3().fromArray(data);
        }
        if (data.length == 4) {
            return new mod.Vector4().fromArray(data);
        }
        if (data.length == 16) {
            const mat = new mod.Matrix4();
            mat.fromArray(data);
            return mat;
        }
    }
    return data;
}
function deserialize_uniforms(data) {
    const result = {};
    for(const name in data){
        const value = data[name];
        if (value instanceof mod.Uniform) {
            result[name] = value;
        } else {
            const ser = to_uniform(value);
            result[name] = new mod.Uniform(ser);
        }
    }
    return result;
}
function deserialize_plot(data) {
    let mesh;
    if ("instance_attributes" in data) {
        mesh = create_instanced_mesh(data);
    } else {
        mesh = create_mesh(data);
    }
    mesh.name = data.name;
    mesh.frustumCulled = false;
    mesh.matrixAutoUpdate = false;
    mesh.plot_uuid = data.uuid;
    const update_visible = (v)=>{
        mesh.visible = v;
        return;
    };
    update_visible(data.visible.value);
    data.visible.on(update_visible);
    connect_uniforms(mesh, data.uniform_updater);
    connect_attributes(mesh, data.attribute_updater);
    return mesh;
}
const ON_NEXT_INSERT = new Set();
function on_next_insert(f) {
    ON_NEXT_INSERT.add(f);
}
function add_plot(scene, plot_data) {
    const cam = scene.wgl_camera;
    const identity = new mod.Uniform(new mod.Matrix4());
    if (plot_data.cam_space == "data") {
        plot_data.uniforms.view = cam.view;
        plot_data.uniforms.projection = cam.projection;
        plot_data.uniforms.projectionview = cam.projectionview;
        plot_data.uniforms.eyeposition = cam.eyeposition;
    } else if (plot_data.cam_space == "pixel") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.pixel_space;
        plot_data.uniforms.projectionview = cam.pixel_space;
    } else if (plot_data.cam_space == "relative") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.relative_space;
        plot_data.uniforms.projectionview = cam.relative_space;
    } else {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = identity;
        plot_data.uniforms.projectionview = identity;
    }
    plot_data.uniforms.resolution = cam.resolution;
    if (plot_data.uniforms.preprojection) {
        const { space , markerspace  } = plot_data;
        plot_data.uniforms.preprojection = cam.preprojection_matrix(space.value, markerspace.value);
    }
    const p = deserialize_plot(plot_data);
    plot_cache[plot_data.uuid] = p;
    scene.add(p);
    const next_insert = new Set(ON_NEXT_INSERT);
    next_insert.forEach((f)=>f());
}
function connect_uniforms(mesh, updater) {
    updater.on(([name, data])=>{
        if (name === "none") {
            return;
        }
        const uniform = mesh.material.uniforms[name];
        if (uniform.value.isTexture) {
            const im_data = uniform.value.image;
            const [size, tex_data] = data;
            if (tex_data.length == im_data.data.length) {
                im_data.data.set(tex_data);
            } else {
                const old_texture = uniform.value;
                uniform.value = re_create_texture(old_texture, tex_data, size);
                old_texture.dispose();
            }
            uniform.value.needsUpdate = true;
        } else {
            if (is_three_fixed_array(uniform.value)) {
                uniform.value.fromArray(data);
            } else {
                uniform.value = data;
            }
        }
    });
}
function create_texture(data) {
    const buffer = data.data;
    if (data.size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, data.size[0], data.size[1], data.size[2]);
        tex.format = mod[data.three_format];
        tex.type = mod[data.three_type];
        return tex;
    } else {
        const tex_data = buffer == "texture_atlas" ? TEXTURE_ATLAS[0].value : buffer;
        return new mod.DataTexture(tex_data, data.size[0], data.size[1], mod[data.three_format], mod[data.three_type]);
    }
}
function re_create_texture(old_texture, buffer, size) {
    if (size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, size[0], size[1], size[2]);
        tex.format = old_texture.format;
        tex.type = old_texture.type;
        return tex;
    } else {
        return new mod.DataTexture(buffer, size[0], size[1] ? size[1] : 1, old_texture.format, old_texture.type);
    }
}
function BufferAttribute(buffer) {
    const jsbuff = new mod.BufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function InstanceBufferAttribute(buffer) {
    const jsbuff = new mod.InstancedBufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function attach_geometry(buffer_geometry, vertexarrays, faces) {
    for(const name in vertexarrays){
        const buff = vertexarrays[name];
        let buffer;
        if (buff.to_update) {
            buffer = new mod.BufferAttribute(buff.to_update, buff.itemSize);
        } else {
            buffer = BufferAttribute(buff);
        }
        buffer_geometry.setAttribute(name, buffer);
    }
    buffer_geometry.setIndex(faces);
    buffer_geometry.boundingSphere = new mod.Sphere();
    buffer_geometry.boundingSphere.radius = 10000000000000;
    buffer_geometry.frustumCulled = false;
    return buffer_geometry;
}
function attach_instanced_geometry(buffer_geometry, instance_attributes) {
    for(const name in instance_attributes){
        const buffer = InstanceBufferAttribute(instance_attributes[name]);
        buffer_geometry.setAttribute(name, buffer);
    }
}
function recreate_geometry(mesh, vertexarrays, faces) {
    const buffer_geometry = new mod.BufferGeometry();
    attach_geometry(buffer_geometry, vertexarrays, faces);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function recreate_instanced_geometry(mesh) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const vertexarrays = {};
    const instance_attributes = {};
    const faces = [
        ...mesh.geometry.index.array
    ];
    Object.keys(mesh.geometry.attributes).forEach((name)=>{
        const buffer = mesh.geometry.attributes[name];
        const copy = buffer.to_update ? buffer.to_update : buffer.array.map((x)=>x);
        if (buffer.isInstancedBufferAttribute) {
            instance_attributes[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        } else {
            vertexarrays[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        }
    });
    attach_geometry(buffer_geometry, vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, instance_attributes);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function create_material(program) {
    const is_volume = "volumedata" in program.uniforms;
    return new mod.RawShaderMaterial({
        uniforms: deserialize_uniforms(program.uniforms),
        vertexShader: program.vertex_source,
        fragmentShader: program.fragment_source,
        side: is_volume ? mod.BackSide : mod.DoubleSide,
        transparent: true,
        depthTest: !program.overdraw.value,
        depthWrite: !program.transparency.value
    });
}
function create_mesh(program) {
    const buffer_geometry = new mod.BufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function create_instanced_mesh(program) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, program.instance_attributes);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function first(x) {
    return x[Object.keys(x)[0]];
}
function connect_attributes(mesh, updater) {
    const instance_buffers = {};
    const geometry_buffers = {};
    let first_instance_buffer;
    const real_instance_length = [
        0
    ];
    let first_geometry_buffer;
    const real_geometry_length = [
        0
    ];
    function re_assign_buffers() {
        const attributes = mesh.geometry.attributes;
        Object.keys(attributes).forEach((name)=>{
            const buffer = attributes[name];
            if (buffer.isInstancedBufferAttribute) {
                instance_buffers[name] = buffer;
            } else {
                geometry_buffers[name] = buffer;
            }
        });
        first_instance_buffer = first(instance_buffers);
        if (first_instance_buffer) {
            real_instance_length[0] = first_instance_buffer.count;
        }
        first_geometry_buffer = first(geometry_buffers);
        real_geometry_length[0] = first_geometry_buffer.count;
    }
    re_assign_buffers();
    updater.on(([name, new_values, length])=>{
        const buffer = mesh.geometry.attributes[name];
        let buffers;
        let real_length;
        let is_instance = false;
        if (name in instance_buffers) {
            buffers = instance_buffers;
            first_instance_buffer;
            real_length = real_instance_length;
            is_instance = true;
        } else {
            buffers = geometry_buffers;
            first_geometry_buffer;
            real_length = real_geometry_length;
        }
        if (length <= real_length[0]) {
            buffer.set(new_values);
            buffer.needsUpdate = true;
            if (is_instance) {
                mesh.geometry.instanceCount = length;
            }
        } else {
            buffer.to_update = new_values;
            const all_have_same_length = Object.values(buffers).every((x)=>x.to_update && x.to_update.length / x.itemSize == length);
            if (all_have_same_length) {
                if (is_instance) {
                    recreate_instanced_geometry(mesh);
                    re_assign_buffers();
                    mesh.geometry.instanceCount = new_values.length / buffer.itemSize;
                } else {
                    recreate_geometry(mesh, buffers, mesh.geometry.index);
                    re_assign_buffers();
                }
            }
        }
    });
}
function deserialize_scene(data, screen) {
    const scene = new mod.Scene();
    scene.screen = screen;
    const { canvas  } = screen;
    add_scene(data.uuid, scene);
    scene.scene_uuid = data.uuid;
    scene.frustumCulled = false;
    scene.pixelarea = data.pixelarea;
    scene.backgroundcolor = data.backgroundcolor;
    scene.clearscene = data.clearscene;
    scene.visible = data.visible;
    const camera = new MakieCamera();
    scene.wgl_camera = camera;
    function update_cam(camera_matrices) {
        const [view, projection, resolution, eyepos] = camera_matrices;
        camera.update_matrices(view, projection, resolution, eyepos);
    }
    update_cam(data.camera.value);
    if (data.cam3d_state) {
        attach_3d_camera(canvas, camera, data.cam3d_state, scene);
    } else {
        data.camera.on(update_cam);
    }
    data.plots.forEach((plot_data)=>{
        add_plot(scene, plot_data);
    });
    scene.scene_children = data.children.map((child)=>deserialize_scene(child, screen));
    return scene;
}
function delete_plot(plot) {
    delete plot_cache[plot.plot_uuid];
    const { parent  } = plot;
    if (parent) {
        parent.remove(plot);
    }
    plot.geometry.dispose();
    plot.material.dispose();
}
function delete_three_scene(scene) {
    delete scene_cache[scene.scene_uuid];
    scene.scene_children.forEach(delete_three_scene);
    while(scene.children.length > 0){
        delete_plot(scene.children[0]);
    }
}
window.THREE = mod;
const pixelRatio1 = window.devicePixelRatio || 1.0;
function render_scene(scene, picking = false) {
    const { camera , renderer  } = scene.screen;
    const canvas = renderer.domElement;
    if (!document.body.contains(canvas)) {
        console.log("EXITING WGL");
        renderer.state.reset();
        renderer.dispose();
        delete_three_scene(scene);
        return false;
    }
    if (!scene.visible.value) {
        return true;
    }
    renderer.autoClear = scene.clearscene;
    const area = scene.pixelarea.value;
    if (area) {
        const [x, y, w, h] = area.map((t)=>t / pixelRatio1);
        renderer.setViewport(x, y, w, h);
        renderer.setScissor(x, y, w, h);
        renderer.setScissorTest(true);
        if (picking) {
            renderer.setClearAlpha(0);
            renderer.setClearColor(new mod.Color(0), 0.0);
        } else {
            renderer.setClearColor(scene.backgroundcolor.value);
        }
        renderer.render(scene, camera);
    }
    return scene.scene_children.every((x)=>render_scene(x, picking));
}
function start_renderloop(three_scene) {
    const { fps  } = three_scene.screen;
    const time_per_frame = 1 / fps * 1000;
    let last_time_stamp = performance.now();
    function renderloop(timestamp) {
        if (timestamp - last_time_stamp > time_per_frame) {
            const all_rendered = render_scene(three_scene);
            if (!all_rendered) {
                return;
            }
            last_time_stamp = performance.now();
        }
        window.requestAnimationFrame(renderloop);
    }
    render_scene(three_scene);
    renderloop();
}
function throttle_function(func, delay) {
    let prev = 0;
    return (...args)=>{
        const now = new Date().getTime();
        if (now - prev > delay) {
            prev = now;
            return func(...args);
        }
    };
}
function threejs_module(canvas, comm, width, height) {
    let context = canvas.getContext("webgl2", {
        preserveDrawingBuffer: true
    });
    if (!context) {
        console.warn("WebGL 2.0 not supported by browser, falling back to WebGL 1.0 (Volume plots will not work)");
        context = canvas.getContext("webgl", {
            preserveDrawingBuffer: true
        });
    }
    if (!context) {
        return;
    }
    const renderer = new mod.WebGLRenderer({
        antialias: true,
        canvas: canvas,
        context: context,
        powerPreference: "high-performance"
    });
    renderer.setClearColor("#ffffff");
    renderer.setPixelRatio(pixelRatio1);
    renderer.setSize(width / pixelRatio1, height / pixelRatio1);
    const mouse_callback = (x, y)=>comm.notify({
            mouseposition: [
                x,
                y
            ]
        });
    const notify_mouse_throttled = throttle_function(mouse_callback, 40);
    function mousemove(event) {
        var rect = canvas.getBoundingClientRect();
        var x = (event.clientX - rect.left) * pixelRatio1;
        var y = (event.clientY - rect.top) * pixelRatio1;
        notify_mouse_throttled(x, y);
        return false;
    }
    canvas.addEventListener("mousemove", mousemove);
    function mousedown(event) {
        comm.notify({
            mousedown: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mousedown", mousedown);
    function mouseup(event) {
        comm.notify({
            mouseup: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mouseup", mouseup);
    function wheel(event) {
        comm.notify({
            scroll: [
                event.deltaX,
                -event.deltaY
            ]
        });
        event.preventDefault();
        return false;
    }
    canvas.addEventListener("wheel", wheel);
    function keydown(event) {
        comm.notify({
            keydown: event.code
        });
        return false;
    }
    canvas.addEventListener("keydown", keydown);
    function keyup(event) {
        comm.notify({
            keyup: event.code
        });
        return false;
    }
    canvas.addEventListener("keyup", keyup);
    function contextmenu(event) {
        comm.notify({
            keyup: "delete_keys"
        });
        return false;
    }
    canvas.addEventListener("contextmenu", (e)=>e.preventDefault());
    canvas.addEventListener("focusout", contextmenu);
    return renderer;
}
function create_scene(wrapper, canvas, canvas_width, scenes, comm, width, height, fps, texture_atlas_obs) {
    const renderer = threejs_module(canvas, comm, width, height);
    TEXTURE_ATLAS[0] = texture_atlas_obs;
    if (renderer) {
        const camera = new mod.PerspectiveCamera(45, 1, 0, 100);
        camera.updateProjectionMatrix();
        const size = new mod.Vector2();
        renderer.getDrawingBufferSize(size);
        const picking_target = new mod.WebGLRenderTarget(size.x, size.y);
        const screen = {
            renderer,
            picking_target,
            camera,
            fps,
            canvas
        };
        const three_scene = deserialize_scene(scenes, screen);
        console.log(three_scene);
        start_renderloop(three_scene);
        canvas_width.on((w_h)=>{
            const pixelRatio = renderer.getPixelRatio();
            renderer.setSize(w_h[0] / pixelRatio, w_h[1] / pixelRatio);
        });
    } else {
        const warning = getWebGLErrorMessage();
        wrapper.appendChild(warning);
    }
}
function set_picking_uniforms(scene, last_id, picking, picked_plots, plots, id_to_plot) {
    scene.children.forEach((plot, index)=>{
        const { material  } = plot;
        const { uniforms  } = material;
        if (picking) {
            uniforms.object_id.value = last_id + index;
            uniforms.picking.value = true;
            material.blending = mod.NoBlending;
        } else {
            uniforms.picking.value = false;
            material.blending = mod.NormalBlending;
            const id = uniforms.object_id.value;
            if (id in picked_plots) {
                plots.push([
                    plot,
                    picked_plots[id]
                ]);
                id_to_plot[id] = plot;
            }
        }
    });
    let next_id = last_id + scene.children.length;
    scene.scene_children.forEach((scene)=>{
        next_id = set_picking_uniforms(scene, next_id, picking, picked_plots, plots, id_to_plot);
    });
    return next_id;
}
function pick_native(scene, x, y, w, h) {
    const { renderer , picking_target  } = scene.screen;
    renderer.setRenderTarget(picking_target);
    set_picking_uniforms(scene, 1, true);
    render_scene(scene, true);
    renderer.setRenderTarget(null);
    const nbytes = w * h * 4;
    const pixel_bytes = new Uint8Array(nbytes);
    renderer.readRenderTargetPixels(picking_target, x, y, w, h, pixel_bytes);
    const picked_plots = {};
    const picked_plots_array = [];
    const reinterpret_view = new DataView(pixel_bytes.buffer);
    for(let i = 0; i < pixel_bytes.length / 4; i++){
        const id = reinterpret_view.getUint16(i * 4);
        const index = reinterpret_view.getUint16(i * 4 + 2);
        picked_plots_array.push([
            id,
            index
        ]);
        picked_plots[id] = index;
    }
    const plots = [];
    const id_to_plot = {};
    set_picking_uniforms(scene, 0, false, picked_plots, plots, id_to_plot);
    const picked_plots_matrix = picked_plots_array.map(([id, index])=>{
        const p = id_to_plot[id];
        return [
            p ? p.plot_uuid : null,
            index
        ];
    });
    const plot_matrix = {
        data: picked_plots_matrix,
        size: [
            w,
            h
        ]
    };
    return [
        plot_matrix,
        plots
    ];
}
function pick_closest(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, _] = pick_native(scene, x0, y0, dx, dy);
    const plot_matrix = plot_data.data;
    let min_dist = range ^ 2;
    let selection = [
        null,
        0
    ];
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            if (d < min_dist && plot_uuid) {
                min_dist = d;
                selection = [
                    plot_uuid,
                    index
                ];
            }
        }
    }
    return selection;
}
function pick_sorted(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, selected] = pick_native(scene, x0, y0, dx, dy);
    if (selected.length == 0) {
        return [];
    }
    const plot_matrix = plot_data.data;
    const distances = selected.map((x)=>range ^ 2);
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            const plot_index = selected.findIndex((x)=>x[0].plot_uuid == plot_uuid);
            if (plot_index >= 0 && d < distances[plot_index]) {
                distances[plot_index] = d;
            }
        }
    }
    const sorted_indices = Array.from(Array(distances.length).keys()).sort((a, b)=>distances[a] < distances[b] ? -1 : distances[b] < distances[a] | 0);
    return sorted_indices.map((idx)=>{
        const [plot, index] = selected[idx];
        return [
            plot.plot_uuid,
            index
        ];
    });
}
function pick_native_uuid(scene, x, y, w, h) {
    const [_, picked_plots] = pick_native(scene, x, y, w, h);
    return picked_plots.map(([p, index])=>[
            p.plot_uuid,
            index
        ]);
}
function pick_native_matrix(scene, x, y, w, h) {
    const [matrix, _] = pick_native(scene, x, y, w, h);
    return matrix;
}
function register_popup(popup, scene, plots_to_pick, callback) {
    if (!scene || !scene.screen) {
        return;
    }
    const { canvas  } = scene.screen;
    canvas.addEventListener("mousedown", (event)=>{
        if (!popup.classList.contains("show")) {
            popup.classList.add("show");
        }
        popup.style.left = event.pageX + "px";
        popup.style.top = event.pageY + "px";
        const [x, y] = WGLMakie.event2scene_pixel(scene, event);
        const [_, picks] = WGLMakie.pick_native(scene, x, y, 1, 1);
        if (picks.length == 1) {
            const [plot, index] = picks[0];
            if (plots_to_pick.has(plot.plot_uuid)) {
                const result = callback(plot, index);
                if (typeof result === "string" || result instanceof String) {
                    popup.innerText = result;
                } else {
                    popup.innerHTML = result;
                }
            }
        } else {
            popup.classList.remove("show");
        }
    });
    canvas.addEventListener("keyup", (event)=>{
        if (event.key === "Escape") {
            popup.classList.remove("show");
        }
    });
}
window.WGL = {
    deserialize_scene,
    threejs_module,
    start_renderloop,
    delete_plots,
    insert_plot,
    find_plots,
    delete_scene,
    find_scene,
    scene_cache,
    plot_cache,
    delete_scenes,
    create_scene,
    event2scene_pixel,
    on_next_insert
};
export { deserialize_scene as deserialize_scene, threejs_module as threejs_module, start_renderloop as start_renderloop, delete_plots as delete_plots, insert_plot as insert_plot, find_plots as find_plots, delete_scene as delete_scene, find_scene as find_scene, scene_cache as scene_cache, plot_cache as plot_cache, delete_scenes as delete_scenes, create_scene as create_scene, event2scene_pixel as event2scene_pixel, on_next_insert as on_next_insert };
export { render_scene as render_scene };
export { pick_native as pick_native };
export { pick_closest as pick_closest };
export { pick_sorted as pick_sorted };
export { pick_native_uuid as pick_native_uuid };
export { pick_native_matrix as pick_native_matrix };
export { register_popup as register_popup };

" type="module"></script>
  </div>
</div>~~~
