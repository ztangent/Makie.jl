~~~
<div>
  <script src="data:application/javascript;base64,    JSServe.fetch_binary('data:application/octet-stream;base64,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AABjAAAAoAAAAJ8AAABkAAAAZQAAAKEAAABkAAAAoQAAAKAAAABlAAAAZgAAAKIAAABlAAAAogAAAKEAAABmAAAAZwAAAKMAAABmAAAAowAAAKIAAABnAAAAaAAAAKQAAABnAAAApAAAAKMAAABoAAAAaQAAAKUAAABoAAAApQAAAKQAAABpAAAAagAAAKYAAABpAAAApgAAAKUAAABqAAAAawAAAKcAAABqAAAApwAAAKYAAABrAAAAbAAAAKgAAABrAAAAqAAAAKcAAABsAAAAbQAAAKkAAABsAAAAqQAAAKgAAABtAAAAbgAAAKoAAABtAAAAqgAAAKkAAABuAAAAbwAAAKsAAABuAAAAqwAAAKoAAABvAAAAcAAAAKwAAABvAAAArAAAAKsAAABwAAAAcQAAAK0AAABwAAAArQAAAKwAAABxAAAAcgAAAK4AAABxAAAArgAAAK0AAAByAAAAcwAAAK8AAAByAAAArwAAAK4AAABzAAAAdAAAALAAAABzAAAAsAAAAK8AAAB0AAAAdQAAALEAAAB0AAAAsQAAALAAAAB1AAAAdgAAALIAAAB1AAAAsgAAALEAAAB2AAAAdwAAALMAAAB2AAAAswAAALIAAAB4AAAAeQAAALUAAAB4AAAAtQAAALQAAAB5AAAAegAAALYAAAB5AAAAtgAAALUAAAB6AAAAewAAALcAAAB6AAAAtwAAALYAAAB7AAAAfAAAALgAAAB7AAAAuAAAALcAAAB8AAAAfQAAALkAAAB8AAAAuQAAALgAAAB9AAAAfgAAALoAAAB9AAAAugAAALkAAAB+AAAAfwAAALsAAAB+AAAAuwAAALoAAAB/AAAAgAAAALwAAAB/AAAAvAAAALsAAACAAAAAgQAAAL0AAACAAAAAvQAAALwAAACBAAAAggAAAL4AAACBAAAAvgAAAL0AAACCAAAAgwAAAL8AAACCAAAAvwAAAL4AAACDAAAAhAAAAMAAAACDAAAAwAAAAL8AAACEAAAAhQAAAMEAAACEAAAAwQAAAMAAAACFAAAAhgAAAMIAAACFAAAAwgAAAMEAAACGAAAAhwAAAMMAAACGAAAAwwAAAMIAAACHAAAAiAAAAMQAAACHAAAAxAAAAMMAAACIAAAAiQAAAMUAAACIAAAAxQAAAMQAAACJAAAAigAAAMYAAACJAAAAxgAAAMUAAACKAAAAiwAAAMcAAACKAAAAxwAAAMYAAACLAAAAjAAAAMgAAACLAAAAyAAAAMcAAACMAAAAjQAAAMkAAACMAAAAyQAAAMgAAACNAAAAjgAAAMoAAACNAAAAygAAAMkAAACOAAAAjwAAAMsAAACOAAAAywAAAMoAAACPAAAAkAAAAMwAAACPAAAAzAAAAMsAAACQAAAAkQAAAM0AAACQAAAAzQAAAMwAAACRAAAAkgAAAM4AAACRAAAAzgAAAM0AAACSAAAAkwAAAM8AAACSAAAAzwAAAM4AAACTAAAAlAAAANAAAACTAAAA0AAAAM8AAACUAAAAlQAAANEAAACUAAAA0QAAANAAAACVAAAAlgAAANIAAACVAAAA0gAAANEAAACWAAAAlwAAANMAAACWAAAA0wAAANIAAACXAAAAmAAAANQAAACXAAAA1AAAANMAAACYAAAAmQAAANUAAACYAAAA1QAAANQAAACZAAAAmgAAANYAAACZAAAA1gAAANUAAACaAAAAmwAAANcAAACaAAAA1wAAANYAAACbAAAAnAAAANgAAACbAAAA2AAAANcAAACcAAAAnQAAANkAAACcAAAA2QAAANgAAACdAAAAngAAANoAAACdAAAA2gAAANkAAACeAAAAnwAAANsAAACeAAAA2wAAANoAAACfAAAAoAAAANwAAACfAAAA3AAAANsAAACgAAAAoQAAAN0AAACgAAAA3QAAANwAAAChAAAAogAAAN4AAAChAAAA3gAAAN0AAACiAAAAowAAAN8AAACiAAAA3wAAAN4AAACjAAAApAAAAOAAAACjAAAA4AAAAN8AAACkAAAApQAAAOEAAACkAAAA4QAAAOAAAAClAAAApgAAAOIAAAClAAAA4gAAAOEAAACmAAAApwAAAOMAAACmAAAA4wAAAOIAAACnAAAAqAAAAOQAAACnAAAA5AAAAOMAAACoAAAAqQAAAOUAAACoAAAA5QAAAOQAAACpAAAAqgAAAOYAAACpAAAA5gAAAOUAAACqAAAAqwAAAOcAAACqAAAA5wAAAOYAAACrAAAArAAAAOgAAACrAAAA6AAAAOcAAACsAAAArQAAAOkAAACsAAAA6QAAAOgAAACtAAAArgAAAOoAAACtAAAA6gAAAOkAAACuAAAArwAAAOsAAACuAAAA6wAAAOoAAACvAAAAsAAAAOwAAACvAAAA7AAAAOsAAACwAAAAsQAAAO0AAACwAAAA7QAAAOwAAACxAAAAsgAAAO4AAACxAAAA7gAAAO0AAACyAAAAswAAAO8AAACyAAAA7wAAAO4AAAC0AAAAtQAAAPEAAAC0AAAA8QAAAPAAAAC1AAAAtgAAAPIAAAC1AAAA8gAAAPEAAAC2AAAAtwAAAPMAAAC2AAAA8wAAAPIAAAC3AAAAuAAAAPQAAAC3AAAA9AAAAPMAAAC4AAAAuQAAAPUAAAC4AAAA9QAAAPQAAAC5AAAAugAAAPYAAAC5AAAA9gAAAPUAAAC6AAAAuwAAAPcAAAC6AAAA9wAAAPYAAAC7AAAAvAAAAPgAAAC7AAAA+AAAAPcAAAC8AAAAvQAAAPkAAAC8AAAA+QAAAPgAAAC9AAAAvgAAAPoAAAC9AAAA+gAAAPkAAAC+AAAAvwAAAPsAAAC+AAAA+wAAAPoAAAC/AAAAwAAAAPwAAAC/AAAA/AAAAPsAAADAAAAAwQAAAP0AAADAAAAA/QAAAPwAAADBAAAAwgAAAP4AAADBAAAA/gAAAP0AAADCAAAAwwAAAP8AAADCAAAA/wAAAP4AAADDAAAAxAAAAAABAADDAAAAAAEAAP8AAADEAAAAxQAAAAEBAADEAAAAAQEAAAABAADFAAAAxgAAAAIBAADFAAAAAgEAAAEBAADGAAAAxwAAAAMBAADGAAAAAwEAAAIBAADHAAAAyAAAAAQBAADHAAAABAEAAAMBAADIAAAAyQAAAAUBAADIAAAABQEAAAQBAADJAAAAygAAAAYBAADJAAAABgEAAAUBAADKAAAAywAAAAcBAADKAAAABwEAAAYBAADLAAAAzAAAAAgBAADLAAAACAEAAAcBAADMAAAAzQAAAAkBAADMAAAACQEAAAgBAADNAAAAzgAAAAoBAADNAAAACgEAAAkBAADOAAAAzwAAAAsBAADOAAAACwEAAAoBAADPAAAA0AAAAAwBAADPAAAADAEAAAsBAADQAAAA0QAAAA0BAADQAAAADQEAAAwBAADRAAAA0gAAAA4BAADRAAAADgEAAA0BAADSAAAA0wAAAA8BAADSAAAADwEAAA4BAADTAAAA1AAAABABAADTAAAAEAEAAA8BAADUAAAA1QAAABEBAADUAAAAEQEAABABAADVAAAA1gAAABIBAADVAAAAEgEAABEBAADWAAAA1wAAABMBAADWAAAAEwEAABIBAADXAAAA2AAAABQBAADXAAAAFAEAABMBAADYAAAA2QAAABUBAADYAAAAFQEAABQBAADZAAAA2gAAABYBAADZAAAAFgEAABUBAADaAAAA2wAAABcBAADaAAAAFwEAABYBAADbAAAA3AAAABgBAADbAAAAGAEAABcBAADcAAAA3QAAABkBAADcAAAAGQEAABgBAADdAAAA3gAAABoBAADdAAAAGgEAABkBAADeAAAA3wAAABsBAADeAAAAGwEAABoBAADfAAAA4AAAABwBAADfAAAAHAEAABsBAADgAAAA4QAAAB0BAADgAAAAHQEAABwBAADhAAAA4gAAAB4BAADhAAAAHgEAAB0BAADiAAAA4wAAAB8BAADiAAAAHwEAAB4BAADjAAAA5AAAACABAADjAAAAIAEAAB8BAADkAAAA5QAAACEBAADkAAAAIQEAACABAADlAAAA5gAAACIBAADlAAAAIgEAACEBAADmAAAA5wAAACMBAADmAAAAIwEAACIBAADnAAAA6AAAACQBAADnAAAAJAEAACMBAADoAAAA6QAAACUBAADoAAAAJQEAACQBAADpAAAA6gAAACYBAADpAAAAJgEAACUBAADqAAAA6wAAACcBAADqAAAAJwEAACYBAADrAAAA7AAAACgBAADrAAAAKAEAACcBAADsAAAA7QAAACkBAADsAAAAKQEAACgBAADtAAAA7gAAACoBAADtAAAAKgEAACkBAADuAAAA7wAAACsBAADuAAAAKwEAACoBAADwAAAA8QAAAC0BAADwAAAALQEAACwBAADxAAAA8gAAAC4BAADxAAAALgEAAC0BAADyAAAA8wAAAC8BAADyAAAALwEAAC4BAADzAAAA9AAAADABAADzAAAAMAEAAC8BAAD0AAAA9QAAADEBAAD0AAAAMQEAADABAAD1AAAA9gAAADIBAAD1AAAAMgEAADEBAAD2AAAA9wAAADMBAAD2AAAAMwEAADIBAAD3AAAA+AAAADQBAAD3AAAANAEAADMBAAD4AAAA+QAAADUBAAD4AAAANQEAADQBAAD5AAAA+gAAADYBAAD5AAAANgEAADUBAAD6AAAA+wAAADcBAAD6AAAANwEAADYBAAD7AAAA/AAAADgBAAD7AAAAOAEAADcBAAD8AAAA/QAAADkB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AABIAQAAhQEAAIQBAABJAQAASgEAAIYBAABJAQAAhgEAAIUBAABKAQAASwEAAIcBAABKAQAAhwEAAIYBAABLAQAATAEAAIgBAABLAQAAiAEAAIcBAABMAQAATQEAAIkBAABMAQAAiQEAAIgBAABNAQAATgEAAIoBAABNAQAAigEAAIkBAABOAQAATwEAAIsBAABOAQAAiwEAAIoBAABPAQAAUAEAAIwBAABPAQAAjAEAAIsBAABQAQAAUQEAAI0BAABQAQAAjQEAAIwBAABRAQAAUgEAAI4BAABRAQAAjgEAAI0BAABSAQAAUwEAAI8BAABSAQAAjwEAAI4BAABTAQAAVAEAAJABAABTAQAAkAEAAI8BAABUAQAAVQEAAJEBAABUAQAAkQEAAJABAABVAQAAVgEAAJIBAABVAQAAkgEAAJEBAABWAQAAVwEAAJMBAABWAQAAkwEAAJIBAABXAQAAWAEAAJQBAABXAQAAlAEAAJMBAABYAQAAWQEAAJUBAABYAQAAlQEAAJQBAABZAQAAWgEAAJYBAABZAQAAlgEAAJUBAABaAQAAWwEAAJcBAABaAQAAlwEAAJYBAABbAQAAXAEAAJgBAABbAQAAmAEAAJcBAABcAQAAXQEAAJkBAABcAQAAmQEAAJgBAABdAQAAXgEAAJoBAABdAQAAmgEAAJkBAABeAQAAXwEAAJsBAABeAQAAmwEAAJoBAABfAQAAYAEAAJwBAABfAQAAnAEAAJsBAABgAQAAYQEAAJ0BAABgAQAAnQEAAJwBAABhAQAAYgEAAJ4BAABhAQAAngEAAJ0BAABiAQAAYwEAAJ8BAABiAQAAnwEAAJ4BAABjAQAAZAEAAKABAABjAQAAoAEAAJ8BAABkAQAAZQEAAKEBAABkAQAAoQEAAKABAABlAQAAZgEAAKIBAABlAQAAogEAAKEBAABmAQAAZwEAAKMBAABmAQAAowEAAKIBAABoAQAAaQEAAKUBAABoAQAApQEAAKQBAABpAQAAagEAAKYBAABpAQAApgEAAKUBAABqAQAAawEAAKcBAABqAQAApwEAAKYBAABrAQAAbAEAAKgBAABrAQAAqAEAAKcBAABsAQAAbQEAAKkBAABsAQAAqQEAAKgBAABtAQAAbgEAAKoBAABtAQAAqgEAAKkBAABuAQAAbwEAAKsBAABuAQAAqwEAAKoBAABvAQAAcAEAAKwBAABvAQAArAEAAKsBAABwAQAAcQEAAK0BAABwAQAArQEAAKwBAABxAQAAcgEAAK4BAABxAQAArgEAAK0BAAByAQAAcwEAAK8BAAByAQAArwEAAK4BAABzAQAAdAEAALABAABzAQAAsAEAAK8BAAB0AQAAdQEAALEBAAB0AQAAsQEAALABAAB1AQAAdgEAALIBAAB1AQAAsgEAALEBAAB2AQAAdwEAALMBAAB2AQAAswEAALIBAAB3AQAAeAEAALQBAAB3AQAAtAEAALMBAAB4AQAAeQEAALUBAAB4AQAAtQEAALQBAAB5AQAAegEAALYBAAB5AQAAtgEAALUBAAB6AQAAewEAALcBAAB6AQAAtwEAALYBAAB7AQAAfAEAALgBAAB7AQAAuAEAALcBAAB8AQAAfQEAALkBAAB8AQAAuQEAALgBAAB9AQAAfgEAALoBAAB9AQAAugEAALkBAAB+AQAAfwEAALsBAAB+AQAAuwEAALoBAAB/AQAAgAEAALwBAAB/AQAAvAEAALsBAACAAQAAgQEAAL0BAACAAQAAvQEAALwBAACBAQAAggEAAL4BAACBAQAAvgEAAL0BAACCAQAAgwEAAL8BAACCAQAAvwEAAL4BAACDAQAAhAEAAMABAACDAQAAwAEAAL8BAACEAQAAhQEAAMEBAACEAQAAwQEAAMABAACFAQAAhgEAAMIBAACFAQAAwgEAAMEBAACGAQAAhwEAAMMBAACGAQAAwwEAAMIBAACHAQAAiAEAAMQBAACHAQAAxAEAAMMBAACIAQAAiQEAAMUBAACIAQAAxQEAAMQBAACJAQAAigEAAMYBAACJAQAAxgEAAMUBAACKAQAAiwEAAMcBAACKAQAAxwEAAMYBAACLAQAAjAEAAMgBAACLAQAAyAEAAMcBAACMAQAAjQEAAMkBAACMAQAAyQEAAMgBAACNAQAAjgEAAMoBAACNAQAAygEAAMkBAACOAQAAjwEAAMsBAACOAQAAywEAAMoBAACPAQAAkAEAAMwBAACPAQAAzAEAAMsBAACQAQAAkQEAAM0BAACQAQAAzQEAAMwBAACRAQAAkgEAAM4BAACRAQAAzgEAAM0BAACSAQAAkwEAAM8BAACSAQAAzwEAAM4BAACTAQAAlAEAANABAACTAQAA0AEAAM8BAACUAQAAlQEAANEBAACUAQAA0QEAANABAACVAQAAlgEAANIBAACVAQAA0gEAANEBAACWAQAAlwEAANMBAACWAQAA0wEAANIBAACXAQAAmAEAANQBAACXAQAA1AEAANMBAACYAQAAmQEAANUBAACYAQAA1QEAANQBAACZAQAAmgEAANYBAACZAQAA1gEAANUBAACaAQAAmwEAANcBAACaAQAA1wEAANYBAACbAQAAnAEAANgBAACbAQAA2AEAANcBAACcAQAAnQEAANkBAACcAQAA2QEAANgBAACdAQAAngEAANoBAACdAQAA2gEAANkBAACeAQAAnwEAANsBAACeAQAA2wEAANoBAACfAQAAoAEAANwBAACfAQAA3AEAANsBAACgAQAAoQEAAN0BAACgAQAA3QEAANwBAAChAQAAogEAAN4BAAChAQAA3gEAAN0BAACiAQAAowEAAN8BAACiAQAA3wEAAN4BAACkAQAApQEAAOEBAACkAQAA4QEAAOABAAClAQAApgEAAOIBAAClAQAA4gEAAOEBAACmAQAApwEAAOMBAACmAQAA4wEAAOIBAACnAQAAqAEAAOQBAACnAQAA5AEAAOMBAACoAQAAqQEAAOUBAACoAQAA5QEAAOQBAACpAQAAqgEAAOYBAACpAQAA5gEAAOUBAACqAQAAqwEAAOcBAACqAQAA5wEAAOYBAACrAQAArAEAAOgBAACrAQAA6AEAAOcBAACsAQAArQEAAOkBAACsAQAA6QEAAOgBAACtAQAArgEAAOoBAACtAQAA6gEAAOkBAACuAQAArwEAAOsBAACuAQAA6wEAAOoBAACvAQAAsAEAAOwBAACvAQAA7AEAAOsBAACwAQAAsQEAAO0BAACwAQAA7QEAAOwBAACxAQAAsgEAAO4BAACxAQAA7gEAAO0BAACyAQAAswEAAO8BAACyAQAA7wEAAO4BAACzAQAAtAEAAPABAACzAQAA8AEAAO8BAAC0AQAAtQEAAPEBAAC0AQAA8QEAAPABAAC1AQAAtgEAAPIBAAC1AQAA8gEAAPEBAAC2AQAAtwEAAPMBAAC2AQAA8wEAAPIBAAC3AQAAuAEAAPQBAAC3AQAA9AEAAPMBAAC4AQAAuQEAAPUBAAC4AQAA9QEAAPQBAAC5AQAAugEAAPYBAAC5AQAA9gEAAPUBAAC6AQAAuwEAAPcBAAC6AQAA9wEAAPYBAAC7AQAAvAEAAPgBAAC7AQAA+AEAAPcBAAC8AQAAvQEAAPkBAAC8AQAA+QEAAPgBAAC9AQAAvgEAAPoBAAC9AQAA+gEAAPkBAAC+AQAAvwEAAPsBAAC+AQAA+wEAAPoBAAC/AQAAwAEAAPwBAAC/AQAA/AEAAPsBAADAAQAAwQEAAP0BAADAAQAA/QEAAPwBAADBAQAAwgEAAP4BAADBAQAA/gEAAP0BAADCAQAAwwEAAP8BAADCAQAA/wEAAP4BAADDAQAAxAEAAAACAADDAQAAAAIAAP8BAADEAQAAxQEAAAECAADEAQAAAQIAAAACAADFAQAAxgEAAAICAADFAQAAAgIAAAECAADGAQAAxwEAAAMCAADGAQAAAwIAAAICAADHAQAAyAEAAAQCAADHAQAABAIAAAMCAADIAQAAyQEAAAUCAADIAQAABQIAAAQCAADJAQAAygEAAAYCAADJAQAABgIAAAUCAADKAQAAywEAAAcCAADKAQAABwIAAAYCAADLAQAAzAEAAAgCAADLAQAACAIAAAcCAADMAQAAzQEAAAkCAADMAQAACQIAAAgCAADNAQAAzgEAAAoCAADNAQAACgIAAAkCAADOAQAAzwEAAAsCAADOAQAACwIAAAoCAADPAQAA0AEAAAwCAADPAQAADAIAAAsCAADQAQAA0QEAAA0CAADQAQAADQIAAAwCAADRAQAA0gEAAA4CAADRAQAADgIAAA0CAADSAQAA0wEAAA8CAADSAQAADwIAAA4CAADTAQAA1AEAABACAADTAQAAEAIAAA8CAADUAQAA1QEAABECAADUAQAAEQIAABACAADVAQAA1gEAABICAADVAQAAEgIAABECAADWAQAA1wEAABMCAADWAQAAEwIAABICAADXAQAA2AEAABQCAADXAQAAFAIAABMCAADYAQAA2QEAABUCAADYAQAAFQIAABQCAADZAQAA2gEAABYCAADZAQAAFgIAABUCAADaAQAA2wEAABcCAADaAQAAFwIAABYCAADbAQAA3AEAABgCAADbAQAAGAIAABcCAADcAQAA3QEAABkCAADcAQAAGQIAABgCAADdAQAA3gEAABoCAADdAQAAGgIAABkCAADeAQAA3wEAABsCAADeAQAAGwIAABoCAADgAQAA4QEAAB0CAADgAQAAHQIAABwCAADhAQAA4gEAAB4CAADhAQAAHgIAAB0CAADiAQAA4wEAAB8CAADiAQAAHwIAAB4CAADjAQAA5AEAACACAADjAQAAIAIAAB8CAADkAQAA5QEAACECAADkAQAAIQIAACACAADlAQAA5gEAACICAADlAQAAIgIAACECAADmAQAA5wEAACMCAADmAQAAIwIAACICAADnAQAA6AEAACQCAADnAQAAJAIAACMCAADoAQAA6QEAACUCAADoAQAAJQIAACQCAADpAQAA6gEAACYCAADpAQAAJgIAACUCAADqAQAA6wEAACcCAADqAQAAJwIAACYCAADrAQAA7AEAACgCAADrAQAAKAIAACcCAADsAQAA7QEAACkCAADsAQAAKQIAACgCAADtAQAA7gEAACoCAADtAQAAKgIAACkCAADuAQAA7wEAACsCAADuAQAAKwIAACoCAADvAQAA8AEAACwCAADvAQAALAIAACsCAADwAQAA8QEAAC0CAADwAQAALQIAACwCAADxAQAA8gEAAC4CAADxAQAALgIAAC0CAADyAQAA8wEAAC8CAADyAQAALwIAAC4CAADzAQAA9AEAADACAADzAQAAMAIAAC8CAAD0AQAA9QEAADECAAD0AQAAMQIAADACAAD1AQAA9gEAADICAAD1AQAAMgIAADECAAD2AQAA9wEAADMCAAD2AQAAMwIAADICAAD3AQAA+AEAADQCAAD3AQAANAIAADMCAAD4AQAA+QEAADUCAAD4AQAANQIAADQCAAD5AQAA+gEAADYCAAD5AQAANgIAADUCAAD6AQAA+wEAADcCAAD6AQAANwIAADYCAAD7AQAA/AEAADgCAAD7AQAAOAIAADcCAAD8AQAA/QEAADkCAAD8AQAAOQIAADgCAAD9AQAA/gEAADoCAAD9AQAAOgIAADkCAAD+AQAA/wEAADsCAAD+AQAAOwIAADoCAAD/AQAAAAIAADwCAAD/AQAAPAIAADsCAAAAAgAAAQIAAD0CAAAAAgAAPQIAADwCAAABAgAAAgIAAD4CAAABAgAAPgIAAD0CAAACAgAAAwIAAD8CAAACAgAAPwIAAD4CAAADAgAABAIAAEACAAADAgAAQAIAAD8CAAAEAgAABQIAAEECAAAEAgAAQQIAAEACAAAFAgAABgIAAEICAAAFAgAAQgIAAEECAAAGAgAABwIAAEMCAAAGAgAAQwIAAEICAAAHAgAACAIAAEQCAAAHAgAARAIAAEMCAAAIAgAACQIAAEUCAAAIAgAARQIAAEQCAAAJAgAACgIAAEYCAAAJAgAARgIAAEUCAAAKAgAACwIAAEcCAAAKAgAARwIAAEYCAAALAgAADAIAAEgCAAALAgAASAIAAEcCAAAMAgAADQIAAEkCAAAMAgAASQIAAEgCAAANAgAADgIAAEoCAAANAgAASgIAAEkCAAAOAgAADwIAAEsCAAAOAgAASwIAAEoCAAAPAgAAEAIAAEwCAAAPAgAATAIAAEsCAAAQAgAAEQIAAE0CAAAQAgAATQIAAEwCAAARAgAAEgIAAE4CAAARAgAATgIAAE0CAAASAgAAEwIAAE8CAAASAgAATwIAAE4CAAATAgAAFAIAAFACAAATAgAAUAIAAE8CAAAUAgAAFQIAAFECAAAUAgAAUQIAAFACAAAVAgAAFgIAAFICAAAVAgAAUgIAAFECAAAWAgAAFwIAAFMCAAAWAgAAUwIAAFICAAAXAgAAGAIAAFQCAAAXAgAAVAIAAFMCAAAYAgAAGQIAAFUCAAAYAgAAVQIAAFQCAAAZAgAAGgIAAFYCAAAZAgAAVgIAAFUCAAAaAgAAGwIAAFcCAAAaAgAAVwIAAFYCAAAcAgAAHQIAAFkCAAAcAgAAWQIAAFgCAAAdAgAAHgIAAFoCAAAdAgAAWgIAAFkCAAAeAgAAHwIAAFsCAAAeAgAAWwIAAFoCAAAfAgAAIAIAAFwCAAAfAgAAXAIAAFsCAAAgAgAAIQIAAF0CAAAgAgAAXQIAAFwCAAAhAgAAIgIAAF4CAAAhAgAAXgIAAF0CAAAiAgAAIwIAAF8CAAAiAgAAXwIAAF4CAAAjAgAAJAIAAGACAAAjAgAAYAIAAF8CAAAkAgAAJQIAAGECAAAkAgAAYQIAAGACAAAlAgAAJgIAAGICAAAlAgAAYgIAAGECAAAmAgAAJwIAAGMCAAAmAgAAYwIAAGICAAAnAgAAKAIAAGQCAAAnAgAAZAIAAGMCAAAoAgAAKQIAAGUCAAAoAgAAZQIAAGQCAAApAgAAKgIAAGYCAAApAgAAZgIAAGUCAAAqAgAAKwIAAGcCAAAqAgAAZwIAAGYCAAArAgAALAIAAGgCAAArAgAAaAIAAGcCAAAsAgAALQIAAGkCAAAsAgAAaQIAAGgCAAAtAgAALgIAAGoCAAAtAgAAagIAAGkCAAAuAgAALwIAAGsCAAAuAgAAawIAAGoCAAAvAgAAMAIAAGwCAAAvAgAAbAIAAGsCAAAwAgAAMQIAAG0CAAAwAgAAbQIAAGwCAAAxAgAAMgIAAG4CAAAxAgAAbgIAAG0CAAAyAgAAMwIAAG8CAAAyAgAAbwIAAG4CAAAzAgAANAIAAHACAAAzAgAAcAIAAG8CAAA0AgAANQIAAHECAAA0AgAAcQIAAHACAAA1AgAANgIAAHICAAA1AgAAcgIAAHECAAA2AgAANwIAAHMCAAA2AgAAcwIAAHICAAA3AgAAOAIAAHQCAAA3AgAAdAIAAHMCAAA4AgAAOQIAAHUCAAA4AgAAdQIAAHQCAAA5AgAAOgIAAHYCAAA5AgAAdgIAAHUCAAA6AgAAOwIAAHcCAAA6AgAAdwIAAHYCAAA7AgAAPAIAAHgCAAA7AgAAeAIAAHcCAAA8AgAAPQIAAHkCAAA8AgAAeQIAAHgCAAA9AgAAPgIAAHoCAAA9AgAAegIAAHkCAAA+AgAAPwIAAHsCAAA+AgAAewIAAHoCAAA/AgAAQAIAAHwCAAA/AgAAfAIAAHsCAABAAgAAQQIAAH0CAABAAgAAfQIAAHwCAABBAgAAQgIAAH4CAABBAgAAfgIAAH0CAABCAgAAQwIAAH8CAABCAgAAfwIAAH4CAABDAgAARAIAAIACAABDAgAAgAIAAH8CAABEAgAARQIAAIECAABEAgAAgQIAAIACAABFAgAARgIAAIICAABFAgAAggIAAIECAABGAgAARwIAAIMCAABGAgAAgwIAAIICAABHAgAASAIAAIQCAABHAgAAhAIAAIMCAABIAgAASQIAAIUCAABIAgAAhQIAAIQCAABJAgAASgIAAIYCAABJAgAAhgIAAIUCAABKAgAASwIAAIcCAABKAgAAhwIAAIYCAABLAgAATAIAAIgCAABLAgAAiAIAAIcCAABMAgAATQIAAIkCAABMAgAAiQIAAIgCAABNAgAATgIAAIoCAABNAgAAigIAAIkCAABOAgAATwIAAIsCAABOAgAAiwIAAIoCAABPAgAAUAIAAIwCAABPAgAAjAIAAIsCAABQAgAAUQIAAI0CAABQAgAAjQIAAIwCAABRAgAAUgIAAI4CAABRAgAAjgIAAI0CAABSAgAAUwIAAI8CAABSAgAAjwIAAI4CAABTAgAAVAIAAJACAABTAgAAkAIAAI8CAABUAgAAVQIAAJECAABUAgAAkQIAAJACAABVAgAAVgIAAJICAABVAgAAkgIAAJECAABWAgAAVwIAAJMCAABWAgAAkwIAAJICAABYAgAAWQIAAJUCAABYAgAAlQIAAJQCAABZAgAAWgIAAJYCAABZAgAAlgIAAJUCAABaAgAAWwIAAJcCAABaAgAAlwIAAJYCAABbAgAAXAIAAJgCAABbAgAAmAIAAJcCAABcAgAAXQIAAJkCAABcAgAAmQIAAJgCAABdAgAAXgIAAJoCAABdAgAAmgIAAJkCAABeAgAAXwIAAJsCAABeAgAAmwIAAJoCAABfAgAAYAIAAJwCAABfAgAAnAIAAJsCAABgAgAAYQIAAJ0CAABgAgAAnQIAAJwCAABhAgAAYgIAAJ4CAABhAgAAngIAAJ0CAABiAgAAYwIAAJ8CAABiAgAAnwIAAJ4CAABjAgAAZAIAAKACAABjAgAAoAIAAJ8CAABkAgAAZQIAAKECAABkAgAAoQIAAKACAABlAgAAZgIAAKICAABlAgAAogIAAKECAABmAgAAZwIAAKMCAABmAgAAowIAAKICAABnAgAAaAIAAKQCAABnAgAApAIAAKMCAABoAgAAaQIAAKUCAABoAgAApQIAAKQCAABpAgAAagIAAKYCAABpAgAApgIAAKUCAABqAgAAawIAAKcCAABqAgAApwIAAKYCAABrAgAAbAIAAKgCAABrAgAAqAIAAKcCAABsAgAAbQIAAKkCAABsAgAAqQIAAKgCAABtAgAAbgIAAKoCAABtAgAAqgIAAKkCAABuAgAAbwIAAKsCAABuAgAAqwIAAKoCAABvAgAAcAIAAKwCAABvAgAArAIAAKsCAABwAgAAcQIAAK0CAABwAgAArQIAAKwCAABxAgAAcgIAAK4CAABxAgAArgIAAK0CAAByAgAAcwIAAK8CAAByAgAArwIAAK4CAABzAgAAdAIAALACAABzAgAAsAIAAK8CAAB0AgAAdQIAALECAAB0AgAAsQIAALACAAB1AgAAdgIAALICAAB1AgAAsgIAALECAAB2AgAAdwIAALMCAAB2AgAAswIAALICAAB3AgAAeAIAALQCAAB3AgAAtAIAALMCAAB4AgAAeQIAALUCAAB4AgAAtQIAALQCAAB5AgAAegIAALYCAAB5AgAAtgIAALUCAAB6AgAAewIAALcCAAB6AgAAtwIAALYCAAB7AgAAfAIAALgCAAB7AgAAuAIAALcCAAB8AgAAfQIAALkCAAB8AgAAuQIAALgCAAB9AgAAfgIAALoCAAB9AgAAugIAALkCAAB+AgAAfwIAALsCAAB+AgAAuwIAALoCAAB/AgAAgAIAALwCAAB/AgAAvAIAALsCAACAAgAAgQIAAL0CAACAAgAAvQIAALwCAACBAgAAggIAAL4CAACBAgAAvgIAAL0CAACCAgAAgwIAAL8CAACCAgAAvwIAAL4CAACDAgAAhAIAAMACAACDAgAAwAIAAL8CAACEAgAAhQIAAMECAACEAgAAwQIAAMACAACFAgAAhgIAAMICAACFAgAAwgIAAMECAACGAgAAhwIAAMMCAACGAgAAwwIAAMICAACHAgAAiAIAAMQCAACHAgAAxAIAAMMCAACIAgAAiQIAAMUCAACIAgAAxQIAAMQCAACJAgAAigIAAMYCAACJAgAAxgIAAMUCAACKAgAAiwIAAMcCAACKAgAAxwIAAMYCAACLAgAAjAIAAMgCAACLAgAAyAIAAMcCAACMAgAAjQIAAMkCAACMAgAAyQIAAMgCAACNAgAAjgIAAMoCAACNAgAAygIAAMkCAACOAgAAjwIAAMsCAACOAgAAywIAAMoCAACPAgAAkAIAAMwCAACPAgAAzAIAAMsCAACQAgAAkQIAAM0CAACQAgAAzQIAAMwCAACRAgAAkgIAAM4CAACRAgAAzgIAAM0CAACSAgAAkwIAAM8CAACSAgAAzwIAAM4CAACUAgAAlQIAANECAACUAgAA0QIAANACAACVAgAAlgIAANICAACVAgAA0gIAANECAACWAgAAlwIAANMCAACWAgAA0wIAANICAACXAgAAmAIAANQCAACXAgAA1AIAANMCAACYAgAAmQIAANUCAACYAgAA1QIAANQCAACZAgAAmgIAANYCAACZAgAA1gIAANUCAACaAgAAmwIAANcCAACaAgAA1wIAANYCAACbAgAAnAIAANgCAACbAgAA2AIAANcCAACcAgAAnQIAANkCAACcAgAA2QIAANgCAACdAgAAngIAANoCAACdAgAA2gIAANkCAACeAgAAnwIAANsCAACeAgAA2wIAANoCAACfAgAAoAIAANwCAACfAgAA3AIAANsCAACgAgAAoQIAAN0CAACgAgAA3QIAANwCAAChAgAAogIAAN4CAAChAgAA3gIAAN0CAACiAgAAowIAAN8CAACiAgAA3wIAAN4CAACjAgAApAIAAOACAACjAgAA4AIAAN8CAACkAgAApQIAAOECAACkAgAA4QIAAOACAAClAgAApgIAAOICAAClAgAA4gIAAOECAACmAgAApwIAAOMCAACmAgAA4wIAAOICAACnAgAAqAIAAOQCAACnAgAA5AIAAOMCAACoAgAAqQIAAOUCAACoAgAA5QIAAOQCAACpAgAAqgIAAOYCAACpAgAA5gIAAOUCAACqAgAAqwIAAOcCAACqAgAA5wIAAOYCAACrAgAArAIAAOgCAACrAgAA6AIAAOcCAACsAgAArQIAAOkCAACsAgAA6QIAAOgCAACtAgAArgIAAOoCAACtAgAA6gIAAOkCAACuAgAArwIAAOsCAACuAgAA6wIAAOoCAACvAgAAsAIAAOwCAACvAgAA7AIAAOsCAACwAgAAsQIAAO0CAACwAgAA7QIAAOwCAACxAgAAsgIAAO4CAACxAgAA7gIAAO0CAACyAgAAswIAAO8CAACyAgAA7wIAAO4CAACzAgAAtAIAAPACAACzAgAA8AIAAO8CAAC0AgAAtQIAAPECAAC0AgAA8QIAAPACAAC1AgAAtgIAAPICAAC1AgAA8gIAAPECAAC2AgAAtwIAAPMCAAC2AgAA8wIAAPICAAC3AgAAuAIAAPQCAAC3AgAA9AIAAPMCAAC4AgAAuQIAAPUCAAC4AgAA9QIAAPQCAAC5AgAAugIAAPYCAAC5AgAA9gIAAPUCAAC6AgAAuwIAAPcCAAC6AgAA9wIAAPYCAAC7AgAAvAIAAPgCAAC7AgAA+AIAAPcCAAC8AgAAvQIAAPkCAAC8AgAA+QIAAPgCAAC9AgAAvgIAAPoCAAC9AgAA+gIAAPkCAAC+AgAAvwIAAPsCAAC+AgAA+wIAAPoCAAC/AgAAwAIAAPwCAAC/AgAA/AIAAPsCAADAAgAAwQIAAP0CAADAAgAA/QIAAPwCAADBAgAAwgIAAP4CAADBAgAA/gIAAP0CAADCAgAAwwIAAP8CAADCAgAA/wIAAP4CAADDAgAAxAIAAAADAADDAgAAAAMAAP8CAADEAgAAxQIAAAEDAADEAgAAAQMAAAADAADFAgAAxgIAAAIDAADFAgAAAgMAAAEDAADGAgAAxwIAAAMDAADGAgAAAwMAAAIDAADHAgAAyAIAAAQDAADHAgAABAMAAAMDAADIAgAAyQIAAAUDAADIAgAABQMAAAQDAADJAgAAygIAAAYDAADJAgAABgMAAAUDAADKAgAAywIAAAcDAADKAgAABwMAAAYDAADLAgAAzAIAAAgDAADLAgAACAMAAAcDAADMAgAAzQIAAAkDAADMAgAACQMAAAgDAADNAgAAzgIAAAoDAADNAgAACgMAAAkDAADOAgAAzwIAAAsDAADOAgAACwMAAAoDAADQAgAA0QIAAA0DAADQAgAADQMAAAwDAADRAgAA0gIAAA4DAADRAgAADgMAAA0DAADSAgAA0wIAAA8DAADSAgAADwMAAA4DAADTAgAA1AIAABADAADTAgAAEAMAAA8DAADUAgAA1QIAABEDAADUAgAAEQMAABADAADVAgAA1gIAABIDAADVAgAAEgMAABEDAADWAgAA1wIAABMDAADWAgAAEwMAABIDAADXAgAA2AIAABQDAADXAgAAFAMAABMDAADYAgAA2QIAABUDAADYAgAAFQMAABQDAADZAgAA2gIAABYDAADZAgAAFgMAABUDAADaAgAA2wIAABcDAADaAgAAFwMAABYDAADbAgAA3AIAABgDAADbAgAAGAMAABcDAADcAgAA3QIAABkDAADcAgAAGQMAABgDAADdAgAA3gIAABoDAADdAgAAGgMAABkDAADeAgAA3wIAABsDAADeAgAAGwMAABoDAADfAgAA4AIAABwDAADfAgAAHAMAABsDAADgAgAA4QIAAB0DAADgAgAAHQMAABwDAADhAgAA4gIAAB4DAADhAgAAHgMAAB0DAADiAgAA4wIAAB8DAADiAgAAHwMAAB4DAADjAgAA5AIAACADAADjAgAAIAMAAB8DAADkAgAA5QIAACEDAADkAgAAIQMAACADAADlAgAA5gIAACIDAADlAgAAIgMAACEDAADmAgAA5wIAACMDAADmAgAAIwMAACIDAADnAgAA6AIAACQDAADnAgAAJAMAACMDAADoAgAA6QIAACUDAADoAgAAJQMAACQDAADpAgAA6gIAACYDAADpAgAAJgMAACUDAADqAgAA6wIAACcDAADqAgAAJwMAACYDAADrAgAA7AIAACgDAADrAgAAKAMAACcDAADsAgAA7QIAACkDAADsAgAAKQMAACgDAADtAgAA7gIAACoDAADtAgAAKgMAACkDAADuAgAA7wIAACsDAADuAgAAKwMAACoDAADvAgAA8AIAACwDAADvAgAALAMAACsDAADwAgAA8QIAAC0DAADwAgAALQMAACwDAADxAgAA8gIAAC4DAADxAgAALgMAAC0DAADyAgAA8wIAAC8DAADyAgAALwMAAC4DAADzAgAA9AIAADADAADzAgAAMAMAAC8DAAD0AgAA9QIAADEDAAD0AgAAMQMAADADAAD1AgAA9gIAADIDAAD1AgAAMgMAADEDAAD2AgAA9wIAADMDAAD2AgAAMwMAADIDAAD3AgAA+AIAADQDAAD3AgAANAMAADMDAAD4AgAA+QIAADUDAAD4AgAANQMAADQDAAD5AgAA+gIAADYDAAD5AgAANgMAADUDAAD6AgAA+wIAADcDAAD6AgAANwMAADYDAAD7AgAA/AIAADgDAAD7AgAAOAMAADcDAAD8AgAA/QIAADkDAAD8AgAAOQMAADgDAAD9AgAA/gIAADoDAAD9AgAAOgMAADkDAAD+AgAA/wIAADsDAAD+AgAAOwMAADoDAAD/AgAAAAMAADwDAAD/AgAAPAMAADsDAAAAAwAAAQMAAD0DAAAAAwAAPQMAADwDAAABAwAAAgMAAD4DAAABAwAAPgMAAD0DAAACAwAAAwMAAD8DAAACAwAAPwMAAD4DAAADAwAABAMAAEADAAADAwAAQAMAAD8DAAAEAwAABQMAAEEDAAAEAwAAQQMAAEADAAAFAwAABgMAAEIDAAAFAwAAQgMAAEEDAAAGAwAABwMAAEMDAAAGAwAAQwMAAEIDAAAHAwAACAMAAEQDAAAHAwAARAMAAEMDAAAIAwAACQMAAEUDAAAIAwAARQMAAEQDAAAJAwAACgMAAEYDAAAJAwAARgMAAEUDAAAKAwAACwMAAEcDAAAKAwAARwMAAEYDAAAMAwAADQMAAEkDAAAMAwAASQMAAEgDAAANAwAADgMAAEoDAAANAwAASgMAAEkDAAAOAwAADwMAAEsDAAAOAwAASwMAAEoDAAAPAwAAEAMAAEwDAAAPAwAATAMAAEsDAAAQAwAAEQMAAE0DAAAQAwAATQMAAEwDAAARAwAAEgMAAE4DAAARAwAATgMAAE0DAAASAwAAEwMAAE8DAAASAwAATwMAAE4DAAATAwAAFAMAAFADAAATAwAAUAMAAE8DAAAUAwAAFQMAAFEDAAAUAwAAUQMAAFADAAAVAwAAFgMAAFIDAAAVAwAAUgMAAFEDAAAWAwAAFwMAAFMDAAAWAwAAUwMAAFIDAAAXAwAAGAMAAFQDAAAXAwAAVAMAAFMDAAAYAwAAGQMAAFUDAAAYAwAAVQMAAFQDAAAZAwAAGgMAAFYDAAAZAwAAVgMAAFUDAAAaAwAAGwMAAFcDAAAaAwAAVwMAAFYDAAAbAwAAHAMAAFgDAAAbAwAAWAMAAFcDAAAcAwAAHQMAAFkDAAAcAwAAWQMAAFgDAAAdAwAAHgMAAFoDAAAdAwAAWgMAAFkDAAAeAwAAHwMAAFsDAAAeAwAAWwMAAFoDAAAfAwAAIAMAAFwDAAAfAwAAXAMAAFsDAAAgAwAAIQMAAF0DAAAgAwAAXQMAAFwDAAAhAwAAIgMAAF4DAAAhAwAAXgMAAF0DAAAiAwAAIwMAAF8DAAAiAwAAXwMAAF4DAAAjAwAAJAMAAGADAAAjAwAAYAMAAF8DAAAkAwAAJQMAAGEDAAAkAwAAYQMAAGADAAAlAwAAJgMAAGIDAAAlAwAAYgMAAGEDAAAmAwAAJwMAAGMDAAAmAwAAYwMAAGIDAAAnAwAAKAMAAGQDAAAnAwAAZAMAAGMDAAAoAwAAKQMAAGUDAAAoAwAAZQMAAGQDAAApAwAAKgMAAGYDAAApAwAAZgMAAGUDAAAqAwAAKwMAAGcDAAAqAwAAZwMAAGYDAAArAwAALAMAAGgDAAArAwAAaAMAAGcDAAAsAwAALQMAAGkDAAAsAwAAaQMAAGgDAAAtAwAALgMAAGoDAAAtAwAAagMAAGkDAAAuAwAALwMAAGsDAAAuAwAAawMAAGoDAAAvAwAAMAMAAGwDAAAvAwAAbAMAAGsDAAAwAwAAMQMAAG0DAAAwAwAAbQMAAGwDAAAxAwAAMgMAAG4DAAAxAwAAbgMAAG0DAAAyAwAAMwMAAG8DAAAyAwAAbwMAAG4DAAAzAwAANAMAAHADAAAzAwAAcAMAAG8DAAA0AwAANQMAAHEDAAA0AwAAcQMAAHADAAA1AwAANgMAAHIDAAA1AwAAcgMAAHEDAAA2AwAANwMAAHMDAAA2AwAAcwMAAHIDAAA3AwAAOAMAAHQDAAA3AwAAdAMAAHMDAAA4AwAAOQMAAHUDAAA4AwAAdQMAAHQDAAA5AwAAOgMAAHYDAAA5AwAAdgMAAHUDAAA6AwAAOwMAAHcDAAA6AwAAdwMAAHYDAAA7AwAAPAMAAHgDAAA7AwAAeAMAAHcDAAA8AwAAPQMAAHkDAAA8AwAAeQMAAHgDAAA9AwAAPgMAAHoDAAA9AwAAegMAAHkDAAA+AwAAPwMAAHsDAAA+AwAAewMAAHoDAAA/AwAAQAMAAHwDAAA/AwAAfAMAAHsDAABAAwAAQQMAAH0DAABAAwAAfQMAAHwDAABBAwAAQgMAAH4DAABBAwAAfgMAAH0DAABCAwAAQwMAAH8DAABCAwAAfwMAAH4DAABDAwAARAMAAIADAABDAwAAgAMAAH8DAABEAwAARQMAAIEDAABEAwAAgQMAAIADAABFAwAARgMAAIIDAABFAwAAggMAAIEDAABGAwAARwMAAIMDAABGAwAAgwMAAIIDAABIAwAASQMAAIUDAABIAwAAhQMAAIQDAABJAwAASgMAAIYDAABJAwAAhgMAAIUDAABKAwAASwMAAIcDAABKAwAAhwMAAIYDAABLAwAATAMAAIgDAABLAwAAiAMAAIcDAABMAwAATQMAAIkDAABMAwAAiQMAAIgDAABNAwAATgMAAIoDAABNAwAAigMAAIkDAABOAwAATwMAAIsDAABOAwAAiwMAAIoDAABPAwAAUAMAAIwDAABPAwAAjAMAAIsDAABQAwAAUQMAAI0DAABQAwAAjQMAAIwDAABRAwAAUgMAAI4DAABRAwAAjgMAAI0DAABSAwAAUwMAAI8DAABSAwAAjwMAAI4DAABTAwAAVAMAAJADAABTAwAAkAMAAI8DAABUAwAAVQMAAJEDAABUAwAAkQMAAJADAABVAwAAVgMAAJIDAABVAwAAkgMAAJEDAABWAwAAVwMAAJMDAABWAwAAkwMAAJIDAABXAwAAWAMAAJQDAABXAwAAlAMAAJMDAABYAwAAWQMAAJUDAABYAwAAlQMAAJQDAABZAwAAWgMAAJYDAABZAwAAlgMAAJUDAABaAwAAWwMAAJcDAABaAwAAlwMAAJYDAABbAwAAXAMAAJgDAABbAwAAmAMAAJcDAABcAwAAXQMAAJkDAABcAwAAmQMAAJgDAABdAwAAXgMAAJoDAABdAwAAmgMAAJkDAABeAwAAXwMAAJsDAABeAwAAmwMAAJoDAABfAwAAYAMAAJwDAABfAwAAnAMAAJsDAABgAwAAYQMAAJ0DAABgAwAAnQMAAJwDAABhAwAAYgMAAJ4DAABhAwAAngMAAJ0DAABiAwAAYwMAAJ8DAABiAwAAnwMAAJ4DAABjAwAAZAMAAKADAABjAwAAoAMAAJ8DAABkAwAAZQMAAKEDAABkAwAAoQMAAKADAABlAwAAZgMAAKIDAABlAwAAogMAAKEDAABmAwAAZwMAAKMDAABmAwAAowMAAKIDAABnAwAAaAMAAKQDAABnAwAApAMAAKMDAABoAwAAaQMAAKUDAABoAwAApQMAAKQDAABpAwAAagMAAKYDAABpAwAApgMAAKUDAABqAwAAawMAAKcDAABqAwAApwMAAKYDAABrAwAAbAMAAKgDAABrAwAAqAMAAKcDAABsAwAAbQMAAKkDAABsAwAAqQMAAKgDAABtAwAAbgMAAKoDAABtAwAAqgMAAKkDAABuAwAAbwMAAKsDAABuAwAAqwMAAKoDAABvAwAAcAMAAKwDAABvAwAArAMAAKsDAABwAwAAcQMAAK0DAABwAwAArQMAAKwDAABxAwAAcgMAAK4DAABxAwAArgMAAK0DAAByAwAAcwMAAK8DAAByAwAArwMAAK4DAABzAwAAdAMAALADAABzAwAAsAMAAK8DAAB0AwAAdQMAALEDAAB0AwAAsQMAALADAAB1AwAAdgMAALIDAAB1AwAAsgMAALEDAAB2AwAAdwMAALMDAAB2AwAAswMAALIDAAB3AwAAeAMAALQDAAB3AwAAtAMAALMDAAB4AwAAeQMAALUDAAB4AwAAtQMAALQDAAB5AwAAegMAALYDAAB5AwAAtgMAALUDAAB6AwAAewMAALcDAAB6AwAAtwMAALYDAAB7AwAAfAMAALgDAAB7AwAAuAMAALcDAAB8AwAAfQMAALkDAAB8AwAAuQMAALgDAAB9AwAAfgMAALoDAAB9AwAAugMAALkDAAB+AwAAfwMAALsDAAB+AwAAuwMAALoDAAB/AwAAgAMAALwDAAB/AwAAvAMAALsDAACAAwAAgQMAAL0DAACAAwAAvQMAALwDAACBAwAAggMAAL4DAACBAwAAvgMAAL0DAACCAwAAgwMAAL8DAACCAwAAvwMAAL4DAACEAwAAhQMAAMEDAACEAwAAwQMAAMADAACFAwAAhgMAAMIDAACFAwAAwgMAAMEDAACGAwAAhwMAAMMDAACGAwAAwwMAAMIDAACHAwAAiAMAAMQDAACHAwAAxAMAAMMDAACIAwAAiQMAAMUDAACIAwAAxQMAAMQDAACJAwAAigMAAMYDAACJAwAAxgMAAMUDAACKAwAAiwMAAMcDAACKAwAAxwMAAMYDAACLAwAAjAMAAMgDAACLAwAAyAMAAMcDAACMAwAAjQMAAMkDAACMAwAAyQMAAMgDAACNAwAAjgMAAMoDAACNAwAAygMAAMkDAACOAwAAjwMAAMsDAACOAwAAywMAAMoDAACPAwAAkAMAAMwDAACPAwAAzAMAAMsDAACQAwAAkQMAAM0DAACQAwAAzQMAAMwDAACRAwAAkgMAAM4DAACRAwAAzgMAAM0DAACSAwAAkwMAAM8DAACSAwAAzwMAAM4DAACTAwAAlAMAANADAACTAwAA0AMAAM8DAACUAwAAlQMAANEDAACUAwAA0QMAANADAACVAwAAlgMAANIDAACVAwAA0gMAANEDAACWAwAAlwMAANMDAACWAwAA0wMAANIDAACXAwAAmAMAANQDAACXAwAA1AMAANMDAACYAwAAmQMAANUDAACYAwAA1QMAANQDAACZAwAAmgMAANYDAACZAwAA1gMAANUDAACaAwAAmwMAANcDAACaAwAA1wMAANYDAACbAwAAnAMAANgDAACbAwAA2AMAANcDAACcAwAAnQMAANkDAACcAwAA2QMAANgDAACdAwAAngMAANoDAACdAwAA2gMAANkDAACeAwAAnwMAANsDAACeAwAA2wMAANoDAACfAwAAoAMAANwDAACfAwAA3AMAANsDAACgAwAAoQMAAN0DAACgAwAA3QMAANwDAAChAwAAogMAAN4DAAChAwAA3gMAAN0DAACiAwAAowMAAN8DAACiAwAA3wMAAN4DAACjAwAApAMAAOADAACjAwAA4AMAAN8DAACkAwAApQMAAOEDAACkAwAA4QMAAOADAAClAwAApgMAAOIDAAClAwAA4gMAAOEDAACmAwAApwMAAOMDAACmAwAA4wMAAOIDAACnAwAAqAMAAOQDAACnAwAA5AMAAOMDAACoAwAAqQMAAOUDAACoAwAA5QMAAOQDAACpAwAAqgMAAOYDAACpAwAA5gMAAOUDAACqAwAAqwMAAOcDAACqAwAA5wMAAOYDAACrAwAArAMAAOgDAACrAwAA6AMAAOcDAACsAwAArQMAAOkDAACsAwAA6QMAAOgDAACtAwAArgMAAOoDAACtAwAA6gMAAOkDAACuAwAArwMAAOsDAACuAwAA6wMAAOoDAACvAwAAsAMAAOwDAACvAwAA7AMAAOsDAACwAwAAsQMAAO0DAACwAwAA7QMAAOwDAACxAwAAsgMAAO4DAACxAwAA7gMAAO0DAACyAwAAswMAAO8DAACyAwAA7wMAAO4DAACzAwAAtAMAAPADAACzAwAA8AMAAO8DAAC0AwAAtQMAAPEDAAC0AwAA8QMAAPADAAC1AwAAtgMAAPIDAAC1AwAA8gMAAPEDAAC2AwAAtwMAAPMDAAC2AwAA8wMAAPIDAAC3AwAAuAMAAPQDAAC3AwAA9AMAAPMDAAC4AwAAuQMAAPUDAAC4AwAA9QMAAPQDAAC5AwAAugMAAPYDAAC5AwAA9gMAAPUDAAC6AwAAuwMAAPcDAAC6AwAA9wMAAPYDAAC7AwAAvAMAAPgDAAC7AwAA+AMAAPcDAAC8AwAAvQMAAPkDAAC8AwAA+QMAAPgDAAC9AwAAvgMAAPoDAAC9AwAA+gMAAPkDAAC+AwAAvwMAAPsDAAC+AwAA+wMAAPoDAADAAwAAwQMAAP0DAADAAwAA/QMAAPwDAADBAwAAwgMAAP4DAADBAwAA/gMAAP0DAADCAwAAwwMAAP8DAADCAwAA/wMAAP4DAADDAwAAxAMAAAAEAADDAwAAAAQAAP8DAADEAwAAxQMAAAEEAADEAwAAAQQAAAAEAADFAwAAxgMAAAIEAADFAwAAAgQAAAEEAADGAwAAxwMAAAMEAADGAwAAAwQAAAIEAADHAwAAyAMAAAQEAADHAwAABAQAAAMEAADIAwAAyQMAAAUEAADIAwAABQQAAAQEAADJAwAAygMAAAYEAADJAwAABgQAAAUEAADKAwAAywMAAAcEAADKAwAABwQAAAYEAADLAwAAzAMAAAgEAADLAwAACAQAAAcEAADMAwAAzQMAAAkEAADMAwAACQQAAAgEAADNAwAAzgMAAAoEAADNAwAACgQAAAkEAADOAwAAzwMAAAsEAADOAwAACwQAAAoEAADPAwAA0AMAAAwEAADPAwAADAQAAAsEAADQAwAA0QMAAA0EAADQAwAADQQAAAwEAADRAwAA0gMAAA4EAADRAwAADgQAAA0EAADSAwAA0wMAAA8EAADSAwAADwQAAA4EAADTAwAA1AMAABAEAADTAwAAEAQAAA8EAADUAwAA1QMAABEEAADUAwAAEQQAABAEAADVAwAA1gMAABIEAADVAwAAEgQAABEEAADWAwAA1wMAABMEAADWAwAAEwQAABIEAADXAwAA2AMAABQEAADXAwAAFAQAABMEAADYAwAA2QMAABUEAADYAwAAFQQAABQEAADZAwAA2gMAABYEAADZAwAAFgQAABUEAADaAwAA2wMAABcEAADaAwAAFwQAABYEAADbAwAA3AMAABgEAADbAwAAGAQAABcEAADcAwAA3QMAABkEAADcAwAAGQQAABgEAADdAwAA3gMAABoEAADdAwAAGgQAABkEAADeAwAA3wMAABsEAADeAwAAGwQAABoEAADfAwAA4AMAABwEAADfAwAAHAQAABsEAADgAwAA4QMAAB0EAADgAwAAHQQAABwEAADhAwAA4gMAAB4EAADhAwAAHgQAAB0EAADiAwAA4wMAAB8EAADiAwAAHwQAAB4EAADjAwAA5AMAACAEAADjAwAAIAQAAB8EAADkAwAA5QMAACEEAADkAwAAIQQAACAEAADlAwAA5gMAACIEAADlAwAAIgQAACEEAADmAwAA5wMAACMEAADmAwAAIwQAACIEAADnAwAA6AMAACQEAADnAwAAJAQAACMEAADoAwAA6QMAACUEAADoAwAAJQQAACQEAADpAwAA6gMAACYEAADpAwAAJgQAACUEAADqAwAA6wMAACcEAADqAwAAJwQAACYEAADrAwAA7AMAACgEAADrAwAAKAQAACcEAADsAwAA7QMAACkEAADsAwAAKQQAACgEAADtAwAA7gMAACoEAADtAwAAKgQAACkEAADuAwAA7wMAACsEAADuAwAAKwQAACoEAADvAwAA8AMAACwEAADvAwAALAQAACsEAADwAwAA8QMAAC0EAADwAwAALQQAACwEAADxAwAA8gMAAC4EAADxAwAALgQAAC0EAADyAwAA8wMAAC8EAADyAwAALwQAAC4EAADzAwAA9AMAADAEAADzAwAAMAQAAC8EAAD0AwAA9QMAADEEAAD0AwAAMQQAADAEAAD1AwAA9gMAADIEAAD1AwAAMgQAADEEAAD2AwAA9wMAADME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AADbBAAAGAUAABcFAADcBAAA3QQAABkFAADcBAAAGQUAABgFAADdBAAA3gQAABoFAADdBAAAGgUAABkFAADeBAAA3wQAABsFAADeBAAAGwUAABoFAADfBAAA4AQAABwFAADfBAAAHAUAABsFAADgBAAA4QQAAB0FAADgBAAAHQUAABwFAADhBAAA4gQAAB4FAADhBAAAHgUAAB0FAADiBAAA4wQAAB8FAADiBAAAHwUAAB4FAADjBAAA5AQAACAFAADjBAAAIAUAAB8FAADkBAAA5QQAACEFAADkBAAAIQUAACAFAADlBAAA5gQAACIFAADlBAAAIgUAACEFAADmBAAA5wQAACMFAADmBAAAIwUAACIFAADnBAAA6AQAACQFAADnBAAAJAUAACMFAADoBAAA6QQAACUFAADoBAAAJQUAACQFAADpBAAA6gQAACYFAADpBAAAJgUAACUFAADqBAAA6wQAACcFAADqBAAAJwUAACYFAADsBAAA7QQAACkFAADsBAAAKQUAACgFAADtBAAA7gQAACoFAADtBAAAKgUAACkFAADuBAAA7wQAACsFAADuBAAAKwUAACoFAADvBAAA8AQAACwFAADvBAAALAUAACsFAADwBAAA8QQAAC0FAADwBAAALQUAACwFAADxBAAA8gQAAC4FAADxBAAALgUAAC0FAADyBAAA8wQAAC8FAADyBAAALwUAAC4FAADzBAAA9AQAADAFAADzBAAAMAUAAC8FAAD0BAAA9QQAADEFAAD0BAAAMQUAADAFAAD1BAAA9gQAADIFAAD1BAAAMgUAADEFAAD2BAAA9wQAADMFAAD2BAAAMwUAADIFAAD3BAAA+AQAADQFAAD3BAAANAUAADMFAAD4BAAA+QQAADUFAAD4BAAANQUAADQFAAD5BAAA+gQAADYFAAD5BAAANgUAADUFAAD6BAAA+wQAADcFAAD6BAAANwUAADYFAAD7BAAA/AQAADgFAAD7BAAAOAUAADcFAAD8BAAA/QQAADkFAAD8BAAAOQUAADgFAAD9BAAA/gQAADoFAAD9BAAAOgUAADkFAAD+BAAA/wQAADsFAAD+BAAAOwUAADoFAAD/BAAAAAUAADwFAAD/BAAAPAUAADsFAAAABQAAAQUAAD0FAAAABQAAPQUAADwFAAABBQAAAgUAAD4FAAABBQAAPgUAAD0FAAACBQAAAwUAAD8FAAACBQAAPwUAAD4FAAADBQAABAUAAEAFAAADBQAAQAUAAD8FAAAEBQAABQUAAEEFAAAEBQAAQQUAAEAFAAAFBQAABgUAAEIFAAAFBQAAQgUAAEEFAAAGBQAABwUAAEMFAAAGBQAAQwUAAEIFAAAHBQAACAUAAEQFAAAHBQAARAUAAEMFAAAIBQAACQUAAEUFAAAIBQAARQUAAEQFAAAJBQAACgUAAEYFAAAJBQAARgUAAEUFAAAKBQAACwUAAEcFAAAKBQAARwUAAEYFAAALBQAADAUAAEgFAAALBQAASAUAAEcFAAAMBQAADQUAAEkFAAAMBQAASQUAAEgFAAANBQAADgUAAEoFAAANBQAASgUAAEkFAAAOBQAADwUAAEsFAAAOBQAASwUAAEoFAAAPBQAAEAUAAEwFAAAPBQAATAUAAEsFAAAQBQAAEQUAAE0FAAAQBQAATQUAAEwFAAARBQAAEgUAAE4FAAARBQAATgUAAE0FAAASBQAAEwUAAE8FAAASBQAATwUAAE4FAAATBQAAFAUAAFAFAAATBQAAUAUAAE8FAAAUBQAAFQUAAFEFAAAUBQAAUQUAAFAFAAAVBQAAFgUAAFIFAAAVBQAAUgUAAFEFAAAWBQAAFwUAAFMFAAAWBQAAUwUAAFIFAAAXBQAAGAUAAFQFAAAXBQAAVAUAAFMFAAAYBQAAGQUAAFUFAAAYBQAAVQUAAFQFAAAZBQAAGgUAAFYFAAAZBQAAVgUAAFUFAAAaBQAAGwUAAFcFAAAaBQAAVwUAAFYFAAAbBQAAHAUAAFgFAAAbBQAAWAUAAFcFAAAcBQAAHQUAAFkFAAAcBQAAWQUAAFgFAAAdBQAAHgUAAFoFAAAdBQAAWgUAAFkFAAAeBQAAHwUAAFsFAAAeBQAAWwUAAFoFAAAfBQAAIAUAAFwFAAAfBQAAXAUAAFsFAAAgBQAAIQUAAF0FAAAgBQAAXQUAAFwFAAAhBQAAIgUAAF4FAAAhBQAAXgUAAF0FAAAiBQAAIwUAAF8FAAAiBQAAXwUAAF4FAAAjBQAAJAUAAGAFAAAjBQAAYAUAAF8FAAAkBQAAJQUAAGEFAAAkBQAAYQUAAGAFAAAlBQAAJgUAAGIFAAAlBQAAYgUAAGEFAAAmBQAAJwUAAGMFAAAmBQAAYwUAAGIFAAAoBQAAKQUAAGUFAAAoBQAAZQUAAGQFAAApBQAAKgUAAGYFAAApBQAAZgUAAGUFAAAqBQAAKwUAAGcFAAAqBQAAZwUAAGYFAAArBQAALAUAAGgFAAArBQAAaAUAAGcFAAAsBQAALQUAAGkFAAAsBQAAaQUAAGgFAAAtBQAALgUAAGoFAAAtBQAAagUAAGkFAAAuBQAALwUAAGsFAAAuBQAAawUAAGoFAAAvBQAAMAUAAGwFAAAvBQAAbAUAAGsFAAAwBQAAMQUAAG0FAAAwBQAAbQUAAGwFAAAxBQAAMgUAAG4FAAAxBQAAbgUAAG0FAAAyBQAAMwUAAG8FAAAyBQAAbwUAAG4FAAAzBQAANAUAAHAFAAAzBQAAcAUAAG8FAAA0BQAANQUAAHEFAAA0BQAAcQUAAHAFAAA1BQAANgUAAHIFAAA1BQAAcgUAAHEFAAA2BQAANwUAAHMFAAA2BQAAcwUAAHIFAAA3BQAAOAUAAHQFAAA3BQAAdAUAAHMFAAA4BQAAOQUAAHUFAAA4BQAAdQUAAHQFAAA5BQAAOgUAAHYFAAA5BQAAdgUAAHUFAAA6BQAAOwUAAHcFAAA6BQAAdwUAAHYFAAA7BQAAPAUAAHgFAAA7BQAAeAUAAHcFAAA8BQAAPQUAAHkFAAA8BQAAeQUAAHgFAAA9BQAAPgUAAHoFAAA9BQAAegUAAHkFAAA+BQAAPwUAAHsFAAA+BQAAewUAAHoFAAA/BQAAQAUAAHwFAAA/BQAAfAUAAHsFAABABQAAQQUAAH0FAABABQAAfQUAAHwFAABBBQAAQgUAAH4FAABBBQAAfgUAAH0FAABCBQAAQwUAAH8FAABCBQAAfwUAAH4FAABDBQAARAUAAIAFAABDBQAAgAUAAH8FAABEBQAARQUAAIEFAABEBQAAgQUAAIAFAABFBQAARgUAAIIFAABFBQAAggUAAIEFAABGBQAARwUAAIMFAABGBQAAgwUAAIIFAABHBQAASAUAAIQFAABHBQAAhAUAAIMFAABIBQAASQUAAIUFAABIBQAAhQUAAIQFAABJBQAASgUAAIYFAABJBQAAhgUAAIUFAABKBQAASwUAAIcFAABKBQAAhwUAAIYFAABLBQAATAUAAIgFAABLBQAAiAUAAIcFAABMBQAATQUAAIkFAABMBQAAiQUAAIgFAABNBQAATgUAAIoFAABNBQAAigUAAIkFAABOBQAATwUAAIsFAABOBQAAiwUAAIoFAABPBQAAUAUAAIwFAABPBQAAjAUAAIsFAABQBQAAUQUAAI0FAABQBQAAjQUAAIwFAABRBQAAUgUAAI4FAABRBQAAjgUAAI0FAABSBQAAUwUAAI8FAABSBQAAjwUAAI4FAABTBQAAVAUAAJAFAABTBQAAkAUAAI8FAABUBQAAVQUAAJEFAABUBQAAkQUAAJAFAABVBQAAVgUAAJIFAABVBQAAkgUAAJEFAABWBQAAVwUAAJMFAABWBQAAkwUAAJIFAABXBQAAWAUAAJQFAABXBQAAlAUAAJMFAABYBQAAWQUAAJUFAABYBQAAlQUAAJQFAABZBQAAWgUAAJYFAABZBQAAlgUAAJUFAABaBQAAWwUAAJcFAABaBQAAlwUAAJYFAABbBQAAXAUAAJgFAABbBQAAmAUAAJcFAABcBQAAXQUAAJkFAABcBQAAmQUAAJgFAABdBQAAXgUAAJoFAABdBQAAmgUAAJkFAABeBQAAXwUAAJsFAABeBQAAmwUAAJoFAABfBQAAYAUAAJwFAABfBQAAnAUAAJsFAABgBQAAYQUAAJ0FAABgBQAAnQUAAJwFAABhBQAAYgUAAJ4FAABhBQAAngUAAJ0FAABiBQAAYwUAAJ8FAABiBQAAnwUAAJ4FAABkBQAAZQUAAKEFAABkBQAAoQUAAKAFAABlBQAAZgUAAKIFAABlBQAAogUAAKEFAABmBQAAZwUAAKMFAABmBQAAowUAAKIFAABnBQAAaAUAAKQFAABnBQAApAUAAKMFAABoBQAAaQUAAKUFAABoBQAApQUAAKQFAABpBQAAagUAAKYFAABpBQAApgUAAKUFAABqBQAAawUAAKcFAABqBQAApwUAAKYFAABrBQAAbAUAAKgFAABrBQAAqAUAAKcFAABsBQAAbQUAAKkFAABsBQAAqQUAAKgFAABtBQAAbgUAAKoFAABtBQAAqgUAAKkFAABuBQAAbwUAAKsFAABuBQAAqwUAAKoFAABvBQAAcAUAAKwFAABvBQAArAUAAKsFAABwBQAAcQUAAK0FAABwBQAArQUAAKwFAABxBQAAcgUAAK4FAABxBQAArgUAAK0FAAByBQAAcwUAAK8FAAByBQAArwUAAK4FAABzBQAAdAUAALAFAABzBQAAsAUAAK8FAAB0BQAAdQUAALEFAAB0BQAAsQUAALAFAAB1BQAAdgUAALIFAAB1BQAAsgUAALEFAAB2BQAAdwUAALMFAAB2BQAAswUAALIFAAB3BQAAeAUAALQFAAB3BQAAtAUAALMFAAB4BQAAeQUAALUFAAB4BQAAtQUAALQFAAB5BQAAegUAALYFAAB5BQAAtgUAALUFAAB6BQAAewUAALcFAAB6BQAAtwUAALYFAAB7BQAAfAUAALgFAAB7BQAAuAUAALcFAAB8BQAAfQUAALkFAAB8BQAAuQUAALgFAAB9BQAAfgUAALoFAAB9BQAAugUAALkFAAB+BQAAfwUAALsFAAB+BQAAuwUAALoFAAB/BQAAgAUAALwFAAB/BQAAvAUAALsFAACABQAAgQUAAL0FAACABQAAvQUAALwFAACBBQAAggUAAL4FAACBBQAAvgUAAL0FAACCBQAAgwUAAL8FAACCBQAAvwUAAL4FAACDBQAAhAUAAMAFAACDBQAAwAUAAL8FAACEBQAAhQUAAMEFAACEBQAAwQUAAMAFAACFBQAAhgUAAMIFAACFBQAAwgUAAMEFAACGBQAAhwUAAMMFAACGBQAAwwUAAMIFAACHBQAAiAUAAMQFAACHBQAAxAUAAMMFAACIBQAAiQUAAMUFAACIBQAAxQUAAMQFAACJBQAAigUAAMYFAACJBQAAxgUAAMUFAACKBQAAiwUAAMcFAACKBQAAxwUAAMYFAACLBQAAjAUAAMgFAACLBQAAyAUAAMcFAACMBQAAjQUAAMkFAACMBQAAyQUAAMgFAACNBQAAjgUAAMoFAACNBQAAygUAAMkFAACOBQAAjwUAAMsFAACOBQAAywUAAMoFAACPBQAAkAUAAMwFAACPBQAAzAUAAMsFAACQBQAAkQUAAM0FAACQBQAAzQUAAMwFAACRBQAAkgUAAM4FAACRBQAAzgUAAM0FAACSBQAAkwUAAM8FAACSBQAAzwUAAM4FAACTBQAAlAUAANAFAACTBQAA0AUAAM8FAACUBQAAlQUAANEFAACUBQAA0QUAANAFAACVBQAAlgUAANIFAACVBQAA0gUAANEFAACWBQAAlwUAANMFAACWBQAA0wUAANIFAACXBQAAmAUAANQFAACXBQAA1AUAANMFAACYBQAAmQUAANUFAACYBQAA1QUAANQFAACZBQAAmgUAANYFAACZBQAA1gUAANUFAACaBQAAmwUAANcFAACaBQAA1wUAANYFAACbBQAAnAUAANgFAACbBQAA2AUAANcFAACcBQAAnQUAANkFAACcBQAA2QUAANgFAACdBQAAngUAANoFAACdBQAA2gUAANkFAACeBQAAnwUAANsFAACeBQAA2wUAANoFAACgBQAAoQUAAN0FAACgBQAA3QUAANwFAAChBQAAogUAAN4FAAChBQAA3gUAAN0FAACiBQAAowUAAN8FAACiBQAA3wUAAN4FAACjBQAApAUAAOAFAACjBQAA4AUAAN8FAACkBQAApQUAAOEFAACkBQAA4QUAAOAFAAClBQAApgUAAOIFAAClBQAA4gUAAOEFAACmBQAApwUAAOMFAACmBQAA4wUAAOIFAACnBQAAqAUAAOQFAACnBQAA5AUAAOMFAACoBQAAqQUAAOUFAACoBQAA5QUAAOQFAACpBQAAqgUAAOYFAACpBQAA5gUAAOUFAACqBQAAqwUAAOcFAACqBQAA5wUAAOYFAACrBQAArAUAAOgFAACrBQAA6AUAAOcFAACsBQAArQUAAOkFAACsBQAA6QUAAOgFAACtBQAArgUAAOoFAACtBQAA6gUAAOkFAACuBQAArwUAAOsFAACuBQAA6wUAAOoFAACvBQAAsAUAAOwFAACvBQAA7AUAAOsFAACwBQAAsQUAAO0FAACwBQAA7QUAAOwFAACxBQAAsgUAAO4FAACxBQAA7gUAAO0FAACyBQAAswUAAO8FAACyBQAA7wUAAO4FAACzBQAAtAUAAPAFAACzBQAA8AUAAO8FAAC0BQAAtQUAAPEFAAC0BQAA8QUAAPAFAAC1BQAAtgUAAPIFAAC1BQAA8gUAAPEFAAC2BQAAtwUAAPMFAAC2BQAA8wUAAPIFAAC3BQAAuAUAAPQFAAC3BQAA9AUAAPMFAAC4BQAAuQUAAPUFAAC4BQAA9QUAAPQFAAC5BQAAugUAAPYFAAC5BQAA9gUAAPUFAAC6BQAAuwUAAPcFAAC6BQAA9wUAAPYFAAC7BQAAvAUAAPgFAAC7BQAA+AUAAPcFAAC8BQAAvQUAAPkFAAC8BQAA+QUAAPgFAAC9BQAAvgUAAPoFAAC9BQAA+gUAAPkFAAC+BQAAvwUAAPsFAAC+BQAA+wUAAPoFAAC/BQAAwAUAAPwFAAC/BQAA/AUAAPsFAADABQAAwQUAAP0FAADABQAA/QUAAPwFAADBBQAAwgUAAP4FAADBBQAA/gUAAP0FAADCBQAAwwUAAP8FAADCBQAA/wUAAP4FAADDBQAAxAUAAAAGAADDBQAAAAYAAP8FAADEBQAAxQUAAAEGAADEBQAAAQYAAAAGAADFBQAAxgUAAAIGAADFBQAAAgYAAAEGAADGBQAAxwUAAAMGAADGBQAAAwYAAAIGAADHBQAAyAUAAAQGAADHBQAABAYAAAMGAADIBQAAyQUAAAUGAADIBQAABQYAAAQGAADJBQAAygUAAAYGAADJBQAABgYAAAUGAADKBQAAywUAAAcGAADKBQAABwYAAAYGAADLBQAAzAUAAAgGAADLBQAACAYAAAcGAADMBQAAzQUAAAkGAADMBQAACQYAAAgGAADNBQAAzgUAAAoGAADNBQAACgYAAAkGAADOBQAAzwUAAAsGAADOBQAACwYAAAoGAADPBQAA0AUAAAwGAADPBQAADAYAAAsGAADQBQAA0QUAAA0GAADQBQAADQYAAAwGAADRBQAA0gUAAA4GAADRBQAADgYAAA0GAADSBQAA0wUAAA8GAADSBQAADwYAAA4GAADTBQAA1AUAABAGAADTBQAAEAYAAA8GAADUBQAA1QUAABEGAADUBQAAEQYAABAGAADVBQAA1gUAABIGAADVBQAAEgYAABEGAADWBQAA1wUAABMGAADWBQAAEwYAABIGAADXBQAA2AUAABQGAADXBQAAFAYAABMGAADYBQAA2QUAABUGAADYBQAAFQYAABQGAADZBQAA2gUAABYGAADZBQAAFgYAABUGAADaBQAA2wUAABcGAADaBQAAFwYAABYGAADcBQAA3QUAABkGAADcBQAAGQYAABgGAADdBQAA3gUAABoGAADdBQAAGgYAABkGAADeBQAA3wUAABsGAADeBQAAGwYAABoGAADfBQAA4AUAABwGAADfBQAAHAYAABsGAADgBQAA4QUAAB0GAADgBQAAHQYAABwGAADhBQAA4gUAAB4GAADhBQAAHgYAAB0GAADiBQAA4wUAAB8GAADiBQAAHwYAAB4GAADjBQAA5AUAACAGAADjBQAAIAYAAB8GAADkBQAA5QUAACEGAADkBQAAIQYAACAGAADlBQAA5gUAACIGAADlBQAAIgYAACEGAADmBQAA5wUAACMGAADmBQAAIwYAACIGAADnBQAA6AUAACQGAADnBQAAJAYAACMGAADoBQAA6QUAACUGAADoBQAAJQYAACQGAADpBQAA6gUAACYGAADpBQAAJgYAACUGAADqBQAA6wUAACcGAADqBQAAJwYAACYGAADrBQAA7AUAACgGAADrBQAAKAYAACcGAADsBQAA7QUAACkGAADsBQAAKQYAACgGAADtBQAA7gUAACoGAADtBQAAKgYAACkGAADuBQAA7wUAACsGAADuBQAAKwYAACoGAADvBQAA8AUAACwGAADvBQAALAYAACsGAADwBQAA8QUAAC0GAADwBQAALQYAACwGAADxBQAA8gUAAC4GAADxBQAALgYAAC0GAADyBQAA8wUAAC8GAADyBQAALwYAAC4GAADzBQAA9AUAADAGAADzBQAAMAYAAC8GAAD0BQAA9QUAADEGAAD0BQAAMQYAADAGAAD1BQAA9gUAADIGAAD1BQAAMgYAADEGAAD2BQAA9wUAADMGAAD2BQAAMwYAADIGAAD3BQAA+AUAADQGAAD3BQAANAYAADMGAAD4BQAA+QUAADUGAAD4BQAANQYAADQGAAD5BQAA+gUAADYGAAD5BQAANgYAADUGAAD6BQAA+wUAADcGAAD6BQAANwYAADYGAAD7BQAA/AUAADgGAAD7BQAAOAYAADcGAAD8BQAA/QUAADkGAAD8BQAAOQYAADgGAAD9BQAA/gUAADoGAAD9BQAAOgYAADkGAAD+BQAA/wUAADsGAAD+BQAAOwYAADoGAAD/BQAAAAYAADwGAAD/BQAAPAYAADsGAAAABgAAAQYAAD0GAAAABgAAPQYAADwGAAABBgAAAgYAAD4GAAABBgAAPgYAAD0GAAACBgAAAwYAAD8GAAACBgAAPwYAAD4GAAADBgAABAYAAEAGAAADBgAAQAYAAD8GAAAEBgAABQYAAEEGAAAEBgAAQQYAAEAGAAAFBgAABgYAAEIGAAAFBgAAQgYAAEEGAAAGBgAABwYAAEMGAAAGBgAAQwYAAEIGAAAHBgAACAYAAEQGAAAHBgAARAYAAEMGAAAIBgAACQYAAEUGAAAIBgAARQYAAEQGAAAJBgAACgYAAEYGAAAJBgAARgYAAEUGAAAKBgAACwYAAEcGAAAKBgAARwYAAEYGAAALBgAADAYAAEgGAAALBgAASAYAAEcGAAAMBgAADQYAAEkGAAAMBgAASQYAAEgGAAANBgAADgYAAEoGAAANBgAASgYAAEkGAAAOBgAADwYAAEsGAAAOBgAASwYAAEoGAAAPBgAAEAYAAEwGAAAPBgAATAYAAEsGAAAQBgAAEQYAAE0GAAAQBgAATQYAAEwGAAARBgAAEgYAAE4GAAARBgAATgYAAE0GAAASBgAAEwYAAE8GAAASBgAATwYAAE4GAAATBgAAFAYAAFAGAAATBgAAUAYAAE8GAAAUBgAAFQYAAFEGAAAUBgAAUQYAAFAGAAAVBgAAFgYAAFIGAAAVBgAAUgYAAFEGAAAWBgAAFwYAAFMGAAAWBgAAUwYAAFIGAAAYBgAAGQYAAFUGAAAYBgAAVQYAAFQGAAAZBgAAGgYAAFYGAAAZBgAAVgYAAFUGAAAaBgAAGwYAAFcGAAAaBgAAVwYAAFYGAAAbBgAAHAYAAFgGAAAbBgAAWAYAAFcGAAAcBgAAHQYAAFkGAAAcBgAAWQYAAFgGAAAdBgAAHgYAAFoGAAAdBgAAWgYAAFkGAAAeBgAAHwYAAFsGAAAeBgAAWwYAAFoGAAAfBgAAIAYAAFwGAAAfBgAAXAYAAFsGAAAgBgAAIQYAAF0GAAAgBgAAXQYAAFwGAAAhBgAAIgYAAF4GAAAhBgAAXgYAAF0GAAAiBgAAIwYAAF8GAAAiBgAAXwYAAF4GAAAjBgAAJAYAAGAGAAAjBgAAYAYAAF8GAAAkBgAAJQYAAGEGAAAkBgAAYQYAAGAGAAAlBgAAJgYAAGIGAAAlBgAAYgYAAGEGAAAmBgAAJwYAAGMGAAAmBgAAYwYAAGIGAAAnBgAAKAYAAGQGAAAnBgAAZAYAAGMGAAAoBgAAKQYAAGUGAAAoBgAAZQYAAGQGAAApBgAAKgYAAGYGAAApBgAAZgYAAGUGAAAqBgAAKwYAAGcGAAAqBgAAZwYAAGYGAAArBgAALAYAAGgGAAArBgAAaAYAAGcGAAAsBgAALQYAAGkGAAAsBgAAaQYAAGgGAAAtBgAALgYAAGoGAAAtBgAAagYAAGkGAAAuBgAALwYAAGsGAAAuBgAAawYAAGoGAAAvBgAAMAYAAGwGAAAvBgAAbAYAAGsGAAAwBgAAMQYAAG0GAAAwBgAAbQYAAGwGAAAxBgAAMgYAAG4GAAAxBgAAbgYAAG0GAAAyBgAAMwYAAG8GAAAyBgAAbwYAAG4GAAAzBgAANAYAAHAGAAAzBgAAcAYAAG8GAAA0BgAANQYAAHEGAAA0BgAAcQYAAHAGAAA1BgAANgYAAHIGAAA1BgAAcgYAAHEGAAA2BgAANwYAAHMGAAA2BgAAcwYAAHIGAAA3BgAAOAYAAHQGAAA3BgAAdAYAAHMGAAA4BgAAOQYAAHUGAAA4BgAAdQYAAHQGAAA5BgAAOgYAAHYGAAA5BgAAdgYAAHUGAAA6BgAAOwYAAHcGAAA6BgAAdwYAAHYGAAA7BgAAPAYAAHgGAAA7BgAAeAYAAHcGAAA8BgAAPQYAAHkGAAA8BgAAeQYAAHgGAAA9BgAAPgYAAHoGAAA9BgAAegYAAHkGAAA+BgAAPwYAAHsGAAA+BgAAewYAAHoGAAA/BgAAQAYAAHwGAAA/BgAAfAYAAHsGAABABgAAQQYAAH0GAABABgAAfQYAAHwGAABBBgAAQgYAAH4GAABBBgAAfgYAAH0GAABCBgAAQwYAAH8GAABCBgAAfwYAAH4GAABDBgAARAYAAIAGAABDBgAAgAYAAH8GAABEBgAARQYAAIEGAABEBgAAgQYAAIAGAABFBgAARgYAAIIGAABFBgAAggYAAIEGAABGBgAARwYAAIMGAABGBgAAgwYAAIIGAABHBgAASAYAAIQGAABHBgAAhAYAAIMGAABIBgAASQYAAIUGAABIBgAAhQYAAIQGAABJBgAASgYAAIYGAABJBgAAhgYAAIUGAABKBgAASwYAAIcGAABKBgAAhwYAAIYGAABLBgAATAYAAIgGAABLBgAAiAYAAIcGAABMBgAATQYAAIkGAABMBgAAiQYAAIgGAABNBgAATgYAAIoGAABNBgAAigYAAIkGAABOBgAATwYAAIsGAABOBgAAiwYAAIoGAABPBgAAUAYAAIwGAABPBgAAjAYAAIsGAABQBgAAUQYAAI0GAABQBgAAjQYAAIwGAABRBgAAUgYAAI4GAABRBgAAjgYAAI0GAABSBgAAUwYAAI8GAABSBgAAjwYAAI4GAABUBgAAVQYAAJEGAABUBgAAkQYAAJAGAABVBgAAVgYAAJIGAABVBgAAkgYAAJEGAABWBgAAVwYAAJMGAABWBgAAkwYAAJIGAABXBgAAWAYAAJQGAABXBgAAlAYAAJMGAABYBgAAWQYAAJUGAABYBgAAlQYAAJQGAABZBgAAWgYAAJYGAABZBgAAlgYAAJUGAABaBgAAWwYAAJcGAABaBgAAlwYAAJYGAABbBgAAXAYAAJgGAABbBgAAmAYAAJcGAABcBgAAXQYAAJkGAABcBgAAmQYAAJgGAABdBgAAXgYAAJoGAABdBgAAmgYAAJkGAABeBgAAXwYAAJsGAABeBgAAmwYAAJoGAABfBgAAYAYAAJwGAABfBgAAnAYAAJsGAABgBgAAYQYAAJ0GAABgBgAAnQYAAJwGAABhBgAAYgYAAJ4GAABhBgAAngYAAJ0GAABiBgAAYwYAAJ8GAABiBgAAnwYAAJ4GAABjBgAAZAYAAKAGAABjBgAAoAYAAJ8GAABkBgAAZQYAAKEGAABkBgAAoQYAAKAGAABlBgAAZgYAAKIGAABlBgAAogYAAKEGAABmBgAAZwYAAKMGAABmBgAAowYAAKIGAABnBgAAaAYAAKQGAABnBgAApAYAAKMGAABoBgAAaQYAAKUGAABoBgAApQYAAKQGAABpBgAAagYAAKYGAABpBgAApgYAAKUGAABqBgAAawYAAKcGAABqBgAApwYAAKYGAABrBgAAbAYAAKgGAABrBgAAqAYAAKcGAABsBgAAbQYAAKkGAABsBgAAqQYAAKgGAABtBgAAbgYAAKoGAABtBgAAqgYAAKkGAABuBgAAbwYAAKsGAABuBgAAqwYAAKoGAABvBgAAcAYAAKwGAABvBgAArAYAAKsGAABwBgAAcQYAAK0GAABwBgAArQYAAKwGAABxBgAAcgYAAK4GAABxBgAArgYAAK0GAAByBgAAcwYAAK8GAAByBgAArwYAAK4GAABzBgAAdAYAALAGAABzBgAAsAYAAK8GAAB0BgAAdQYAALEGAAB0BgAAsQYAALAGAAB1BgAAdgYAALIGAAB1BgAAsgYAALEGAAB2BgAAdwYAALMGAAB2BgAAswYAALIGAAB3BgAAeAYAALQGAAB3BgAAtAYAALMGAAB4BgAAeQYAALUGAAB4BgAAtQYAALQGAAB5BgAAegYAALYGAAB5BgAAtgYAALUGAAB6BgAAewYAALcGAAB6BgAAtwYAALYGAAB7BgAAfAYAALgGAAB7BgAAuAYAALcGAAB8BgAAfQYAALkGAAB8BgAAuQYAALgGAAB9BgAAfgYAALoGAAB9BgAAugYAALkGAAB+BgAAfwYAALsGAAB+BgAAuwYAALoGAAB/BgAAgAYAALwGAAB/BgAAvAYAALsGAACABgAAgQYAAL0GAACABgAAvQYAALwGAACBBgAAggYAAL4GAACBBgAAvgYAAL0GAACCBgAAgwYAAL8GAACCBgAAvwYAAL4GAACDBgAAhAYAAMAGAACDBgAAwAYAAL8GAACEBgAAhQYAAMEGAACEBgAAwQYAAMAGAACFBgAAhgYAAMIGAACFBgAAwgYAAMEGAACGBgAAhwYAAMMGAACGBgAAwwYAAMIGAACHBgAAiAYAAMQGAACHBgAAxAYAAMMGAACIBgAAiQYAAMUGAACIBgAAxQYAAMQGAACJBgAAigYAAMYGAACJBgAAxgYAAMUGAACKBgAAiwYAAMcGAACKBgAAxwYAAMYGAACLBgAAjAYAAMgGAACLBgAAyAYAAMcGAACMBgAAjQYAAMkGAACMBgAAyQYAAMgGAACNBgAAjgYAAMoGAACNBgAAygYAAMkGAACOBgAAjwYAAMsGAACOBgAAywYAAMoGAACQBgAAkQYAAM0GAACQBgAAzQYAAMwGAACRBgAAkgYAAM4GAACRBgAAzgYAAM0GAACSBgAAkwYAAM8GAACSBgAAzwYAAM4GAACTBgAAlAYAANAGAACTBgAA0AYAAM8GAACUBgAAlQYAANEGAACUBgAA0QYAANAGAACVBgAAlgYAANIGAACVBgAA0gYAANEGAACWBgAAlwYAANMGAACWBgAA0wYAANIGAACXBgAAmAYAANQGAACXBgAA1AYAANMGAACYBgAAmQYAANUGAACYBgAA1QYAANQGAACZBgAAmgYAANYGAACZBgAA1gYAANUGAACaBgAAmwYAANcGAACaBgAA1wYAANYGAACbBgAAnAYAANgGAACbBgAA2AYAANcGAACcBgAAnQYAANkGAACcBgAA2QYAANgGAACdBgAAngYAANoGAACdBgAA2gYAANkGAACeBgAAnwYAANsGAACeBgAA2wYAANoGAACfBgAAoAYAANwGAACfBgAA3AYAANsGAACgBgAAoQYAAN0GAACgBgAA3QYAANwGAAChBgAAogYAAN4GAAChBgAA3gYAAN0GAACiBgAAowYAAN8GAACiBgAA3wYAAN4GAACjBgAApAYAAOAGAACjBgAA4AYAAN8GAACkBgAApQYAAOEGAACkBgAA4QYAAOAGAAClBgAApgYAAOIGAAClBgAA4gYAAOEGAACmBgAApwYAAOMGAACmBgAA4wYAAOIGAACnBgAAqAYAAOQGAACnBgAA5AYAAOMGAACoBgAAqQYAAOUGAACoBgAA5QYAAOQGAACpBgAAqgYAAOYGAACpBgAA5gYAAOUGAACqBgAAqwYAAOcGAACqBgAA5wYAAOYGAACrBgAArAYAAOgGAACrBgAA6AYAAOcGAACsBgAArQYAAOkGAACsBgAA6QYAAOgGAACtBgAArgYAAOoGAACtBgAA6gYAAOkGAACuBgAArwYAAOsGAACuBgAA6wYAAOoGAACvBgAAsAYAAOwGAACvBgAA7AYAAOsGAACwBgAAsQYAAO0GAACwBgAA7QYAAOwGAACxBgAAsgYAAO4GAACxBgAA7gYAAO0GAACyBgAAswYAAO8GAACyBgAA7wYAAO4GAACzBgAAtAYAAPAGAACzBgAA8AYAAO8GAAC0BgAAtQYAAPEGAAC0BgAA8QYAAPAGAAC1BgAAtgYAAPIGAAC1BgAA8gYAAPEGAAC2BgAAtwYAAPMGAAC2BgAA8wYAAPIGAAC3BgAAuAYAAPQGAAC3BgAA9AYAAPMGAAC4BgAAuQYAAPUGAAC4BgAA9QYAAPQGAAC5BgAAugYAAPYGAAC5BgAA9gYAAPUGAAC6BgAAuwYAAPcGAAC6BgAA9wYAAPYGAAC7BgAAvAYAAPgGAAC7BgAA+AYAAPcGAAC8BgAAvQYAAPkGAAC8BgAA+QYAAPgGAAC9BgAAvgYAAPoGAAC9BgAA+gYAAPkGAAC+BgAAvwYAAPsGAAC+BgAA+wYAAPoGAAC/BgAAwAYAAPwGAAC/BgAA/AYAAPsGAADABgAAwQYAAP0GAADABgAA/QYAAPwGAADBBgAAwgYAAP4GAADBBgAA/gYAAP0GAADCBgAAwwYAAP8GAADCBgAA/wYAAP4GAADDBgAAxAYAAAAHAADDBgAAAAcAAP8GAADEBgAAxQYAAAEHAADEBgAAAQcAAAAHAADFBgAAxgYAAAIHAADFBgAAAgcAAAEHAADGBgAAxwYAAAMHAADGBgAAAwcAAAIHAADHBgAAyAYAAAQHAADHBgAABAcAAAMHAADIBgAAyQYAAAUHAADIBgAABQcAAAQHAADJBgAAygYAAAYHAADJBgAABgcAAAUHAADKBgAAywYAAAcHAADKBgAABwcAAAYHAADMBgAAzQYAAAkHAADMBgAACQcAAAgHAADNBgAAzgYAAAoHAADNBgAACgcAAAkHAADOBgAAzwYAAAsHAADOBgAACwcAAAoHAADPBgAA0AYAAAwHAADPBgAADAcAAAsHAADQBgAA0QYAAA0HAADQBgAADQcAAAwHAADRBgAA0gYAAA4HAADRBgAADgcAAA0HAADSBgAA0wYAAA8HAADSBgAADwcAAA4HAADTBgAA1AYAABAHAADTBgAAEAcAAA8HAADUBgAA1QYAABEHAADUBgAAEQcAABAHAADVBgAA1gYAABIHAADVBgAAEgcAABEHAADWBgAA1wYAABMHAADWBgAAEwcAABIHAADXBgAA2AYAABQHAADXBgAAFAcAABMHAADYBgAA2QYAABUHAADYBgAAFQcAABQHAADZBgAA2gYAABYHAADZBgAAFgcAABUHAADaBgAA2wYAABcHAADaBgAAFwcAABYHAADbBgAA3AYAABgHAADbBgAAGAcAABcHAADcBgAA3QYAABkHAADcBgAAGQcAABgHAADdBgAA3gYAABoHAADdBgAAGgcAABkHAADeBgAA3wYAABsHAADeBgAAGwcAABoHAADfBgAA4AYAABwHAADfBgAAHAcAABsHAADgBgAA4QYAAB0HAADgBgAAHQcAABwHAADhBgAA4gYAAB4HAADhBgAAHgcAAB0HAADiBgAA4wYAAB8HAADiBgAAHwcAAB4HAADjBgAA5AYAACAHAADjBgAAIAcAAB8HAADkBgAA5QYAACEHAADkBgAAIQcAACAHAADlBgAA5gYAACIHAADlBgAAIgcAACEHAADmBgAA5wYAACMHAADmBgAAIwcAACIHAADnBgAA6AYAACQHAADnBgAAJAcAACMHAADoBgAA6QYAACUHAADoBgAAJQcAACQHAADpBgAA6gYAACYHAADpBgAAJgcAACUHAADqBgAA6wYAACcHAADqBgAAJwcAACYHAADrBgAA7AYAACgHAADrBgAAKAcAACcHAADsBgAA7QYAACkHAADsBgAAKQcAACgHAADtBgAA7gYAACoHAADtBgAAKgcAACkHAADuBgAA7wYAACsHAADuBgAAKwcAACoHAADvBgAA8AYAACwHAADvBgAALAcAACsHAADwBgAA8QYAAC0HAADwBgAALQcAACwHAADxBgAA8gYAAC4HAADxBgAALgcAAC0HAADyBgAA8wYAAC8HAADyBgAALwcAAC4HAADzBgAA9AYAADAHAADzBgAAMAcAAC8HAAD0BgAA9QYAADEHAAD0BgAAMQcAADAHAAD1BgAA9gYAADIHAAD1BgAAMgcAADEHAAD2BgAA9wYAADMHAAD2BgAAMwcAADIHAAD3BgAA+AYAADQHAAD3BgAANAcAADMHAAD4BgAA+QYAADUHAAD4BgAANQcAADQHAAD5BgAA+gYAADYHAAD5BgAANgcAADUHAAD6BgAA+wYAADcHAAD6BgAANwcAADYHAAD7BgAA/AYAADgHAAD7BgAAOAcAADcHAAD8BgAA/QYAADkHAAD8BgAAOQcAADgHAAD9BgAA/gYAADoHAAD9BgAAOgcAADkHAAD+BgAA/wYAADsHAAD+BgAAOwcAADoHAAD/BgAAAAcAADwHAAD/BgAAPAcAADsHAAAABwAAAQcAAD0HAAAABwAAPQcAADwHAAABBwAAAgcAAD4HAAABBwAAPgcAAD0HAAACBwAAAwcAAD8HAAACBwAAPwcAAD4HAAADBwAABAcAAEAHAAADBwAAQAcAAD8HAAAEBwAABQcAAEEHAAAEBwAAQQcAAEAHAAAFBwAABgcAAEIHAAAFBwAAQgcAAEEHAAAGBwAABwcAAEMHAAAGBwAAQwcAAEIHAAAIBwAACQcAAEUHAAAIBwAARQcAAEQHAAAJBwAACgcAAEYHAAAJBwAARgcAAEUHAAAKBwAACwcAAEcHAAAKBwAARwcAAEYHAAALBwAADAcAAEgHAAALBwAASAcAAEcHAAAMBwAADQcAAEkHAAAMBwAASQcAAEgHAAANBwAADgcAAEoHAAANBwAASgcAAEkHAAAOBwAADwcAAEsHAAAOBwAASwcAAEoHAAAPBwAAEAcAAEwHAAAPBwAATAcAAEsHAAAQBwAAEQcAAE0HAAAQBwAATQcAAEwHAAARBwAAEgcAAE4HAAARBwAATgcAAE0HAAASBwAAEwcAAE8HAAASBwAATwcAAE4HAAATBwAAFAcAAFAHAAATBwAAUAcAAE8HAAAUBwAAFQcAAFEHAAAUBwAAUQcAAFAHAAAVBwAAFgcAAFIHAAAVBwAAUgcAAFEHAAAWBwAAFwcAAFMHAAAWBwAAUwcAAFIHAAAXBwAAGAcAAFQHAAAXBwAAVAcAAFMHAAAYBwAAGQcAAFUHAAAYBwAAVQcAAFQHAAAZBwAAGgcAAFYHAAAZBwAAVgcAAFUHAAAaBwAAGwcAAFcHAAAaBwAAVwcAAFYHAAAbBwAAHAcAAFgHAAAbBwAAWAcAAFcHAAAcBwAAHQcAAFkHAAAcBwAAWQcAAFgHAAAdBwAAHgcAAFoHAAAdBwAAWgcAAFkHAAAeBwAAHwcAAFsHAAAeBwAAWwcAAFoHAAAfBwAAIAcAAFwHAAAfBwAAXAcAAFsHAAAgBwAAIQcAAF0HAAAgBwAAXQcAAFwHAAAhBwAAIgcAAF4HAAAhBwAAXgcAAF0HAAAiBwAAIwcAAF8HAAAiBwAAXwcAAF4HAAAjBwAAJAcAAGAHAAAjBwAAYAcAAF8HAAAkBwAAJQcAAGEHAAAkBwAAYQcAAGAHAAAlBwAAJgcAAGIHAAAlBwAAYgcAAGEHAAAmBwAAJwcAAGMHAAAmBwAAYwcAAGIHAAAnBwAAKAcAAGQHAAAnBwAAZAcAAGMHAAAoBwAAKQcAAGUHAAAoBwAAZQcAAGQHAAApBwAAKgcAAGYHAAApBwAAZgcAAGUHAAAqBwAAKwcAAGcHAAAqBwAAZwcAAGYHAAArBwAALAcAAGgHAAArBwAAaAcAAGcHAAAsBwAALQcAAGkHAAAsBwAAaQcAAGgHAAAtBwAALgcAAGoHAAAtBwAAagcAAGkHAAAuBwAALwcAAGsHAAAuBwAAawcAAGoHAAAvBwAAMAcAAGwHAAAvBwAAbAcAAGsHAAAwBwAAMQcAAG0HAAAwBwAAbQcAAGwHAAAxBwAAMgcAAG4HAAAxBwAAbgcAAG0HAAAyBwAAMwcAAG8HAAAyBwAAbwcAAG4HAAAzBwAANAcAAHAHAAAzBwAAcAcAAG8HAAA0BwAANQcAAHEHAAA0BwAAcQcAAHAHAAA1BwAANgcAAHIHAAA1BwAAcgcAAHEHAAA2BwAANwcAAHMHAAA2BwAAcwcAAHIHAAA3BwAAOAcAAHQHAAA3BwAAdAcAAHMHAAA4BwAAOQcAAHUHAAA4BwAAdQcAAHQHAAA5BwAAOgcAAHYHAAA5BwAAdgcAAHUHAAA6BwAAOwcAAHcHAAA6BwAAdwcAAHYHAAA7BwAAPAcAAHgHAAA7BwAAeAcAAHcHAAA8BwAAPQcAAHkHAAA8BwAAeQcAAHgHAAA9BwAAPgcAAHoHAAA9BwAAegcAAHkHAAA+BwAAPwcAAHsHAAA+BwAAewcAAHoHAAA/BwAAQAcAAHwHAAA/BwAAfAcAAHsHAABABwAAQQcAAH0HAABABwAAfQcAAHwHAABBBwAAQgcAAH4HAABBBwAAfgcAAH0HAABCBwAAQwcAAH8HAABCBwAAfwcAAH4HAABEBwAARQcAAIEHAABEBwAAgQcAAIAHAABFBwAARgcAAIIHAABFBwAAggcAAIEHAABGBwAARwcAAIMHAABGBwAAgwcAAIIHAABHBwAASAcAAIQHAABHBwAAhAcAAIMHAABIBwAASQcAAIUHAABIBwAAhQcAAIQHAABJBwAASgcAAIYHAABJBwAAhgcAAIUHAABKBwAASwcAAIcHAABKBwAAhwcAAIYHAABLBwAATAcAAIgHAABLBwAAiAcAAIcHAABMBwAATQcAAIkHAABMBwAAiQcAAIgHAABNBwAATgcAAIoHAABNBwAAigcAAIkHAABOBwAATwcAAIsHAABOBwAAiwcAAIoHAABPBwAAUAcAAIwHAABPBwAAjAcAAIsHAABQBwAAUQcAAI0HAABQBwAAjQcAAIwHAABRBwAAUgcAAI4HAABRBwAAjgcAAI0HAABSBwAAUwcAAI8HAABSBwAAjwcAAI4HAABTBwAAVAcAAJAHAABTBwAAkAcAAI8HAABUBwAAVQcAAJEHAABUBwAAkQcAAJAHAABVBwAAVgcAAJIHAABVBwAAkgcAAJEHAABWBwAAVwcAAJMHAABWBwAAkwcAAJIHAABXBwAAWAcAAJQHAABXBwAAlAcAAJMHAABYBwAAWQcAAJUHAABYBwAAlQcAAJQHAABZBwAAWgcAAJYHAABZBwAAlgcAAJUHAABaBwAAWwcAAJcHAABaBwAAlwcAAJYHAABbBwAAXAcAAJgHAABbBwAAmAcAAJcHAABcBwAAXQcAAJkHAABcBwAAmQcAAJgHAABdBwAAXgcAAJoHAABdBwAAmgcAAJkHAABeBwAAXwcAAJsHAABeBwAAmwcAAJoHAABfBwAAYAcAAJwHAABfBwAAnAcAAJsHAABgBwAAYQcAAJ0HAABgBwAAnQcAAJwHAABhBwAAYgcAAJ4HAABhBwAAngcAAJ0HAABiBwAAYwcAAJ8HAABiBwAAnwcAAJ4HAABjBwAAZAcAAKAHAABjBwAAoAcAAJ8HAABkBwAAZQcAAKEHAABkBwAAoQcAAKAHAABlBwAAZgcAAKIHAABlBwAAogcAAKEHAABmBwAAZwcAAKMHAABmBwAAowcAAKIHAABnBwAAaAcAAKQHAABnBwAApAcAAKMHAABoBwAAaQcAAKUHAABoBwAApQcAAKQHAABpBwAAagcAAKYHAABpBwAApgcAAKUHAABqBwAAawcAAKcHAABqBwAApwcAAKYHAABrBwAAbAcAAKgHAABrBwAAqAcAAKcHAABsBwAAbQcAAKkHAABsBwAAqQcAAKgHAABtBwAAbgcAAKoHAABtBwAAqgcAAKkHAABuBwAAbwcAAKsHAABuBwAAqwcAAKoHAABvBwAAcAcAAKwHAABvBwAArAcAAKsHAABwBwAAcQcAAK0HAABwBwAArQcAAKwHAABxBwAAcgcAAK4HAABxBwAArgcAAK0HAAByBwAAcwcAAK8HAAByBwAArwcAAK4HAABzBwAAdAcAALAHAABzBwAAsAcAAK8HAAB0BwAAdQcAALEHAAB0BwAAsQcAALAHAAB1BwAAdgcAALIHAAB1BwAAsgcAALEHAAB2BwAAdwcAALMHAAB2BwAAswcAALIHAAB3BwAAeAcAALQHAAB3BwAAtAcAALMHAAB4BwAAeQcAALUHAAB4BwAAtQcAALQHAAB5BwAAegcAALYHAAB5BwAAtgcAALUHAAB6BwAAewcAALcHAAB6BwAAtwcAALYHAAB7BwAAfAcAALgHAAB7BwAAuAcAALcHAAB8BwAAfQcAALkHAAB8BwAAuQcAALgHAAB9BwAAfgcAALoHAAB9BwAAugcAALkHAAB+BwAAfwcAALsHAAB+BwAAuwcAALoHAACABwAAgQcAAL0HAACABwAAvQcAALwHAACBBwAAggcAAL4HAACBBwAAvgcAAL0HAACCBwAAgwcAAL8HAACCBwAAvwcAAL4HAACDBwAAhAcAAMAHAACDBwAAwAcAAL8HAACEBwAAhQcAAMEHAACEBwAAwQcAAMAHAACFBwAAhgcAAMIHAACFBwAAwgcAAMEHAACGBwAAhwcAAMMHAACGBwAAwwcAAMIHAACHBwAAiAcAAMQHAACHBwAAxAcAAMMHAACIBwAAiQcAAMUHAACIBwAAxQcAAMQHAACJBwAAigcAAMYHAACJBwAAxgcAAMUHAACKBwAAiwcAAMcHAACKBwAAxwcAAMYHAACLBwAAjAcAAMgHAACLBwAAyAcAAMcHAACMBwAAjQcAAMkHAACMBwAAyQcAAMgHAACNBwAAjgcAAMoHAACNBwAAygcAAMkHAACOBwAAjwcAAMsHAACOBwAAywcAAMoHAACPBwAAkAcAAMwHAACPBwAAzAcAAMsHAACQBwAAkQcAAM0HAACQBwAAzQcAAMwHAACRBwAAkgcAAM4HAACRBwAAzgcAAM0HAACSBwAAkwcAAM8HAACSBwAAzwcAAM4HAACTBwAAlAcAANAHAACTBwAA0AcAAM8HAACUBwAAlQcAANEHAACUBwAA0QcAANAHAACVBwAAlgcAANIHAACVBwAA0gcAANEHAACWBwAAlwcAANMHAACWBwAA0wcAANIHAACXBwAAmAcAANQHAACXBwAA1AcAANMHAACYBwAAmQcAANUHAACYBwAA1QcAANQHAACZBwAAmgcAANYHAACZBwAA1gcAANUHAACaBwAAmwcAANcHAACaBwAA1wcAANYHAACbBwAAnAcAANgHAACbBwAA2AcAANcHAACcBwAAnQcAANkHAACcBwAA2QcAANgHAACdBwAAngcAANoHAACdBwAA2gcAANkHAACeBwAAnwcAANsHAACeBwAA2wcAANoHAACfBwAAoAcAANwHAACfBwAA3AcAANsHAACgBwAAoQcAAN0HAACgBwAA3QcAANwHAAChBwAAogcAAN4HAAChBwAA3gcAAN0HAACiBwAAowcAAN8HAACiBwAA3wcAAN4HAACjBwAApAcAAOAHAACjBwAA4AcAAN8HAACkBwAApQcAAOEHAACkBwAA4QcAAOAHAAClBwAApgcAAOIHAAClBwAA4gcAAOEHAACmBwAApwcAAOMHAACmBwAA4wcAAOIHAACnBwAAqAcAAOQHAACnBwAA5AcAAOMHAACoBwAAqQcAAOUHAACoBwAA5QcAAOQHAACpBwAAqgcAAOYHAACpBwAA5gcAAOUHAACqBwAAqwcAAOcHAACqBwAA5wcAAOYHAACrBwAArAcAAOgHAACrBwAA6AcAAOcHAACsBwAArQcAAOkHAACsBwAA6QcAAOgHAACtBwAArgcAAOoHAACtBwAA6gcAAOkHAACuBwAArwcAAOsHAACuBwAA6wcAAOoHAACvBwAAsAcAAOwHAACvBwAA7AcAAOsHAACwBwAAsQcAAO0HAACwBwAA7QcAAOwHAACxBwAAsgcAAO4HAACxBwAA7gcAAO0HAACyBwAAswcAAO8HAACyBwAA7wcAAO4HAACzBwAAtAcAAPAHAACzBwAA8AcAAO8HAAC0BwAAtQcAAPEHAAC0BwAA8QcAAPAHAAC1BwAAtgcAAPIHAAC1BwAA8gcAAPEHAAC2BwAAtwcAAPMHAAC2BwAA8wcAAPIHAAC3BwAAuAcAAPQHAAC3BwAA9AcAAPMHAAC4BwAAuQcAAPUHAAC4BwAA9QcAAPQHAAC5BwAAugcAAPYHAAC5BwAA9gcAAPUHAAC6BwAAuwcAAPcHAAC6BwAA9wcAAPYHAAC8BwAAvQcAAPkHAAC8BwAA+QcAAPgHAAC9BwAAvgcAAPoHAAC9BwAA+gcAAPkHAAC+BwAAvwcAAPsHAAC+BwAA+wcAAPoHAAC/BwAAwAcAAPwHAAC/BwAA/AcAAPsHAADABwAAwQcAAP0HAADABwAA/QcAAPwHAADBBwAAwgcAAP4HAADBBwAA/gcAAP0HAADCBwAAwwcAAP8HAADCBwAA/wcAAP4HAADDBwAAxAcAAAAIAADDBwAAAAgAAP8HAADEBwAAxQcAAAEIAADEBwAAAQgAAAAIAADFBwAAxgcAAAIIAADFBwAAAggAAAEIAADGBwAAxwcAAAMIAADGBwAAAwgAAAIIAADHBwAAyAcAAAQIAADHBwAABAgAAAMIAADIBwAAyQcAAAUIAADIBwAABQgAAAQIAADJBwAAygcAAAYIAADJBwAABggAAAUIAADKBwAAywcAAAcIAADKBwAABwgAAAYIAADLBwAAzAcAAAgIAADLBwAACAgAAAcIAADMBwAAzQcAAAkIAADMBwAACQgAAAgIAADNBwAAzgcAAAoIAADNBwAACggAAAkIAADOBwAAzwcAAAsIAADOBwAACwgAAAoIAADPBwAA0AcAAAwIAADPBwAADAgAAAsIAADQBwAA0QcAAA0IAADQBwAADQgAAAwIAADRBwAA0gcAAA4IAADRBwAADggAAA0IAADSBwAA0wcAAA8IAADSBwAADwgAAA4IAADTBwAA1AcAABAIAADTBwAAEAgAAA8IAADUBwAA1QcAABEIAADUBwAAEQgAABAIAADVBwAA1gcAABIIAADVBwAAEggAABEIAADWBwAA1wcAABMIAADWBwAAEwgAABIIAADXBwAA2AcAABQIAADXBwAAFAgAABMIAADYBwAA2QcAABUIAADYBwAAFQgAABQIAADZBwAA2gcAABYIAADZBwAAFggAABUIAADaBwAA2wcAABcIAADaBwAAFwgAABYIAADbBwAA3AcAABgIAADbBwAAGAgAABcIAADcBwAA3QcAABkIAADcBwAAGQgAABgIAADdBwAA3gcAABoIAADdBwAAGggAABkIAADeBwAA3wcAABsIAADeBwAAGwgAABoIAADfBwAA4AcAABwIAADfBwAAHAgAABsIAADgBwAA4QcAAB0IAADgBwAAHQgAABwIAADhBwAA4gcAAB4IAADhBwAAHggAAB0IAADiBwAA4wcAAB8IAADiBwAAHwgAAB4IAADjBwAA5AcAACAIAADjBwAAIAgAAB8IAADkBwAA5QcAACEIAADkBwAAIQgAACAIAADlBwAA5gcAACIIAADlBwAAIggAACEIAADmBwAA5wcAACMIAADmBwAAIwgAACIIAADnBwAA6AcAACQIAADnBwAAJAgAACMIAADoBwAA6QcAACUIAADoBwAAJQgAACQIAADpBwAA6gcAACYIAADpBwAAJggAACUIAADqBwAA6wcAACcIAADqBwAAJwgAACYIAADrBwAA7AcAACgIAADrBwAAKAgAACcIAADsBwAA7QcAACkIAADsBwAAKQgAACgIAADtBwAA7gcAACoIAADtBwAAKggAACkIAADuBwAA7wcAACsIAADuBwAAKwgAACoIAADvBwAA8AcAACwIAADvBwAALAgAACsIAADwBwAA8QcAAC0IAADwBwAALQgAACwIAADxBwAA8gcAAC4IAADxBwAALggAAC0IAADyBwAA8wcAAC8IAADyBwAALwgAAC4IAADzBwAA9AcAADAIAADzBwAAMAgAAC8IAAD0BwAA9QcAADEIAAD0BwAAMQgAADAIAAD1BwAA9gcAADIIAAD1BwAAMggAADEIAAD2BwAA9wcAADMIAAD2BwAAMwgAADIIAAD4BwAA+QcAADUIAAD4BwAANQgAADQIAAD5BwAA+gcAADYIAAD5BwAANggAADUIAAD6BwAA+wcAADcIAAD6BwAANwgAADYIAAD7BwAA/AcAADgIAAD7BwAAOAgAADcIAAD8BwAA/QcAADkIAAD8BwAAOQgAADgIAAD9BwAA/gcAADoIAAD9BwAAOggAADkIAAD+BwAA/wcAADsIAAD+BwAAOwgAADoIAAD/BwAAAAgAADwIAAD/BwAAPAgAADsIAAAACAAAAQgAAD0IAAAACAAAPQgAADwIAAABCAAAAggAAD4IAAABCAAAPggAAD0IAAACCAAAAwgAAD8IAAACCAAAPwgAAD4IAAADCAAABAgAAEAIAAADCAAAQAgAAD8IAAAECAAABQgAAEEIAAAECAAAQQgAAEAIAAAFCAAABggAAEIIAAAFCAAAQggAAEEIAAAGCAAABwgAAEMIAAAGCAAAQwgAAEIIAAAHCAAACAgAAEQIAAAHCAAARAgAAEMIAAAICAAACQgAAEUIAAAICAAARQgAAEQIAAAJCAAACggAAEYIAAAJCAAARggAAEUIAAAKCAAACwgAAEcIAAAKCAAARwgAAEYIAAALCAAADAgAAEgIAAALCAAASAgAAEcIAAAMCAAADQgAAEkIAAAMCAAASQgAAEgIAAANCAAADggAAEoIAAANCAAASggAAEkIAAAOCAAADwgAAEsIAAAOCAAASwgAAEoIAAAPCAAAEAgAAEwIAAAPCAAATAgAAEsIAAAQCAAAEQgAAE0IAAAQCAAATQgAAEwIAAARCAAAEggAAE4IAAARCAAATggAAE0IAAASCAAAEwgAAE8IAAASCAAATwgAAE4IAAATCAAAFAgAAFAIAAATCAAAUAgAAE8IAAAUCAAAFQgAAFEIAAAUCAAAUQgAAFAIAAAVCAAAFggAAFIIAAAVCAAAUggAAFEIAAAWCAAAFwgAAFMIAAAWCAAAUwgAAFIIAAAXCAAAGAgAAFQIAAAXCAAAVAgAAFMIAAAYCAAAGQgAAFUIAAAYCAAAVQgAAFQIAAAZCAAAGggAAFYIAAAZCAAAVggAAFUIAAAaCAAAGwgAAFcIAAAaCAAAVwgAAFYIAAAbCAAAHAgAAFgIAAAbCAAAWAgAAFcIAAAcCAAAHQgAAFkIAAAcCAAAWQgAAFgIAAAdCAAAHggAAFoIAAAdCAAAWggAAFkIAAAeCAAAHwgAAFsIAAAeCAAAWwgAAFoIAAAfCAAAIAgAAFwIAAAfCAAAXAgAAFsIAAAgCAAAIQgAAF0IAAAgCAAAXQgAAFwIAAAhCAAAIggAAF4IAAAhCAAAXggAAF0IAAAiCAAAIwgAAF8IAAAiCAAAXwgAAF4IAAAjCAAAJAgAAGAIAAAjCAAAYAgAAF8IAAAkCAAAJQgAAGEIAAAkCAAAYQgAAGAIAAAlCAAAJggAAGIIAAAlCAAAYggAAGEIAAAmCAAAJwgAAGMIAAAmCAAAYwgAAGIIAAAnCAAAKAgAAGQIAAAnCAAAZAgAAGMIAAAoCAAAKQgAAGUIAAAoCAAAZQgAAGQIAAApCAAAKggAAGYIAAApCAAAZggAAGUIAAAqCAAAKwgAAGcIAAAqCAAAZwgAAGYIAAArCAAALAgAAGgIAAArCAAAaAgAAGcIAAAsCAAALQgAAGkIAAAsCAAAaQgAAGgIAAAtCAAALggAAGoIAAAtCAAAaggAAGkIAAAuCAAALwgAAGsIAAAuCAAAawgAAGoIAAAvCAAAMAgAAGwIAAAvCAAAbAgAAGsIAAAwCAAAMQgAAG0IAAAwCAAAbQgAAGwIAAAxCAAAMggAAG4IAAAxCAAAbggAAG0IAAAyCAAAMwgAAG8IAAAyCAAAbwgAAG4IAAA0CAAANQgAAHEIAAA0CAAAcQgAAHAIAAA1CAAANggAAHIIAAA1CAAAcggAAHEIAAA2CAAANwgAAHMIAAA2CAAAcwgAAHIIAAA3CAAAOAgAAHQIAAA3CAAAdAgAAHMIAAA4CAAAOQgAAHUIAAA4CAAAdQgAAHQIAAA5CAAAOggAAHYIAAA5CAAAdggAAHUIAAA6CAAAOwgAAHcIAAA6CAAAdwgAAHYIAAA7CAAAPAgAAHgIAAA7CAAAeAgAAHcIAAA8CAAAPQgAAHkIAAA8CAAAeQgAAHgIAAA9CAAAPggAAHoIAAA9CAAAeggAAHkIAAA+CAAAPwgAAHsIAAA+CAAAewgAAHoIAAA/CAAAQAgAAHwIAAA/CAAAfAgAAHsIAABACAAAQQgAAH0IAABACAAAfQgAAHwIAABBCAAAQggAAH4IAABBCAAAfggAAH0IAABCCAAAQwgAAH8IAABCCAAAfwgAAH4IAABDCAAARAgAAIAIAABDCAAAgAgAAH8IAABECAAARQgAAIEIAABECAAAgQgAAIAIAABFCAAARggAAIIIAABFCAAAgggAAIEIAABGCAAARwgAAIMIAABGCAAAgwgAAIIIAABHCAAASAgAAIQIAABHCAAAhAgAAIMIAABICAAASQgAAIUIAABICAAAhQgAAIQIAABJCAAASggAAIYIAABJCAAAhggAAIUIAABKCAAASwgAAIcIAABKCAAAhwgAAIYIAABLCAAATAgAAIgIAABLCAAAiAgAAIcIAABMCAAATQgAAIkIAABMCAAAiQgAAIgIAABNCAAATggAAIoIAABNCAAAiggAAIkIAABOCAAATwgAAIsIAABOCAAAiwgAAIoIAABPCAAAUAgAAIwIAABPCAAAjAgAAIsIAABQCAAAUQgAAI0IAABQCAAAjQgAAIwIAABRCAAAUggAAI4IAABRCAAAjggAAI0IAABSCAAAUwgAAI8IAABSCAAAjwgAAI4IAABTCAAAVAgAAJAIAABTCAAAkAgAAI8IAABUCAAAVQgAAJEIAABUCAAAkQgAAJAIAABVCAAAVggAAJIIAABVCAAAkggAAJEIAABWCAAAVwgAAJMIAABWCAAAkwgAAJIIAABXCAAAWAgAAJQIAABXCAAAlAgAAJMIAABYCAAAWQgAAJUIAABYCAAAlQgAAJQIAABZCAAAWggAAJYIAABZCAAAlggAAJUIAABaCAAAWwgAAJcIAABaCAAAlwgAAJYIAABbCAAAXAgAAJgIAABbCAAAmAgAAJcIAABcCAAAXQgAAJkIAABcCAAAmQgAAJgIAABdCAAAXggAAJoIAABdCAAAmggAAJkIAABeCAAAXwgAAJsIAABeCAAAmwgAAJoIAABfCAAAYAgAAJwIAABfCAAAnAgAAJsIAABgCAAAYQgAAJ0IAABgCAAAnQgAAJwIAABhCAAAYggAAJ4IAABhCAAAnggAAJ0IAABiCAAAYwgAAJ8IAABiCAAAnwgAAJ4IAABjCAAAZAgAAKAIAABjCAAAoAgAAJ8IAABkCAAAZQgAAKEIAABkCAAAoQgAAKAIAABlCAAAZggAAKIIAABlCAAAoggAAKEIAABmCAAAZwgAAKMIAABmCAAAowgAAKIIAABnCAAAaAgAAKQIAABnCAAApAgAAKMIAABoCAAAaQgAAKUIAABoCAAApQgAAKQIAABpCAAAaggAAKYIAABpCAAApggAAKUIAABqCAAAawgAAKcIAABqCAAApwgAAKYIAABrCAAAbAgAAKgIAABrCAAAqAgAAKcIAABsCAAAbQgAAKkIAABsCAAAqQgAAKgIAABtCAAAbggAAKoIAABtCAAAqggAAKkIAABuCAAAbwgAAKsIAABuCAAAqwgAAKoIAABwCAAAcQgAAK0IAABwCAAArQgAAKwIAABxCAAAcggAAK4IAABxCAAArggAAK0IAAByCAAAcwgAAK8IAAByCAAArwgAAK4IAABzCAAAdAgAALAIAABzCAAAsAgAAK8IAAB0CAAAdQgAALEIAAB0CAAAsQgAALAIAAB1CAAAdggAALIIAAB1CAAAsggAALEIAAB2CAAAdwgAALMIAAB2CAAAswgAALIIAAB3CAAAeAgAALQIAAB3CAAAtAgAALMIAAB4CAAAeQgAALUIAAB4CAAAtQgAALQIAAB5CAAAeggAALYIAAB5CAAAtggAALUIAAB6CAAAewgAALcIAAB6CAAAtwgAALYIAAB7CAAAfAgAALgIAAB7CAAAuAgAALcIAAB8CAAAfQgAALkIAAB8CAAAuQgAALgIAAB9CAAAfggAALoIAAB9CAAAuggAALkIAAB+CAAAfwgAALsIAAB+CAAAuwgAALoIAAB/CAAAgAgAALwIAAB/CAAAvAgAALsIAACACAAAgQgAAL0IAACACAAAvQgAALwIAACBCAAAgggAAL4IAACBCAAAvggAAL0IAACCCAAAgwgAAL8IAACCCAAAvwgAAL4IAACDCAAAhAgAAMAIAACDCAAAwAgAAL8IAACECAAAhQgAAMEIAACECAAAwQgAAMAIAACFCAAAhggAAMIIAACFCAAAwggAAMEIAACGCAAAhwgAAMMIAACGCAAAwwgAAMIIAACHCAAAiAgAAMQIAACHCAAAxAgAAMMIAACICAAAiQgAAMUIAACICAAAxQgAAMQIAACJCAAAiggAAMYIAACJCAAAxggAAMUIAACKCAAAiwgAAMcIAACKCAAAxwgAAMYIAACLCAAAjAgAAMgIAACLCAAAyAgAAMcIAACMCAAAjQgAAMkIAACMCAAAyQgAAMgIAACNCAAAjggAAMoIAACNCAAAyggAAMkIAACOCAAAjwgAAMsIAACOCAAAywgAAMoIAACPCAAAkAgAAMwIAACPCAAAzAgAAMsIAACQCAAAkQgAAM0IAACQCAAAzQgAAMwIAACRCAAAkggAAM4IAACRCAAAzggAAM0IAACSCAAAkwgAAM8IAACSCAAAzwgAAM4IAACTCAAAlAgAANAIAACTCAAA0AgAAM8IAACUCAAAlQgAANEIAACUCAAA0QgAANAIAACVCAAAlggAANIIAACVCAAA0ggAANEIAACWCAAAlwgAANMIAACWCAAA0wgAANIIAACXCAAAmAgAANQIAACXCAAA1AgAANMIAACYCAAAmQgAANUIAACYCAAA1QgAANQIAACZCAAAmggAANYIAACZCAAA1ggAANUIAACaCAAAmwgAANcIAACaCAAA1wgAANYIAACbCAAAnAgAANgIAACbCAAA2AgAANcIAACcCAAAnQgAANkIAACcCAAA2QgAANgIAACdCAAAnggAANoIAACdCAAA2ggAANkIAACeCAAAnwgAANsIAACeCAAA2wgAANoIAACfCAAAoAgAANwIAACfCAAA3AgAANsIAACgCAAAoQgAAN0IAACgCAAA3QgAANwIAAChCAAAoggAAN4IAAChCAAA3ggAAN0IAACiCAAAowgAAN8IAACiCAAA3wgAAN4IAACjCAAApAgAAOAIAACjCAAA4AgAAN8IAACkCAAApQgAAOEIAACkCAAA4QgAAOAIAAClCAAApggAAOIIAAClCAAA4ggAAOEIAACmCAAApwgAAOMIAACmCAAA4wgAAOIIAACnCAAAqAgAAOQIAACnCAAA5AgAAOMIAACoCAAAqQgAAOUIAACoCAAA5QgAAOQIAACpCAAAqggAAOYIAACpCAAA5ggAAOUIAACqCAAAqwgAAOcIAACqCAAA5wgAAOYIAACsCAAArQgAAOkIAACsCAAA6QgAAOgIAACtCAAArggAAOoIAACtCAAA6ggAAOkIAACuCAAArwgAAOsIAACuCAAA6wgAAOoIAACvCAAAsAgAAOwIAACvCAAA7AgAAOsIAACwCAAAsQgAAO0IAACwCAAA7QgAAOwIAACxCAAAsggAAO4IAACxCAAA7ggAAO0IAACyCAAAswgAAO8IAACyCAAA7wgAAO4IAACzCAAAtAgAAPAIAACzCAAA8AgAAO8IAAC0CAAAtQgAAPEIAAC0CAAA8QgAAPAIAAC1CAAAtggAAPIIAAC1CAAA8ggAAPEIAAC2CAAAtwgAAPMIAAC2CAAA8wgAAPIIAAC3CAAAuAgAAPQIAAC3CAAA9AgAAPMIAAC4CAAAuQgAAPUIAAC4CAAA9QgAAPQIAAC5CAAAuggAAPYIAAC5CAAA9ggAAPUIAAC6CAAAuwgAAPcIAAC6CAAA9wgAAPYIAAC7CAAAvAgAAPgIAAC7CAAA+AgAAPcIAAC8CAAAvQgAAPkIAAC8CAAA+QgAAPgIAAC9CAAAvggAAPoIAAC9CAAA+ggAAPkIAAC+CAAAvwgAAPsIAAC+CAAA+wgAAPoIAAC/CAAAwAgAAPwIAAC/CAAA/AgAAPsIAADACAAAwQgAAP0IAADACAAA/QgAAPwIAADBCAAAwggAAP4IAADBCAAA/ggAAP0IAADCCAAAwwgAAP8IAADCCAAA/wgAAP4IAADDCAAAxAgAAAAJAADDCAAAAAkAAP8IAADECAAAxQgAAAEJAADECAAAAQkAAAAJAADFCAAAxggAAAIJAADFCAAAAgkAAAEJAADGCAAAxwgAAAMJAADGCAAAAwkAAAIJAADHCAAAyAgAAAQJAADHCAAABAkAAAMJAADICAAAyQgAAAUJAADICAAABQkAAAQJAADJCAAAyggAAAYJAADJCAAABgkAAAUJAADKCAAAywgAAAcJAADKCAAABwkAAAYJAADLCAAAzAgAAAgJAADLCAAACAkAAAcJAADMCAAAzQgAAAkJAADMCAAACQkAAAgJAADNCAAAzggAAAoJAADNCAAACgkAAAkJAADOCAAAzwgAAAsJAADOCAAACwkAAAoJAADPCAAA0AgAAAwJAADPCAAADAkAAAsJAADQCAAA0QgAAA0JAADQCAAADQkAAAwJAADRCAAA0ggAAA4JAADRCAAADgkAAA0JAADSCAAA0wgAAA8JAADSCAAADwkAAA4JAADTCAAA1AgAABAJAADTCAAAEAkAAA8JAADUCAAA1QgAABEJAADUCAAAEQkAABAJAADVCAAA1ggAABIJAADVCAAAEgkAABEJAADWCAAA1wgAABMJAADWCAAAEwkAABIJAADXCAAA2AgAABQJAADXCAAAFAkAABMJAADYCAAA2QgAABUJAADYCAAAFQkAABQJAADZCAAA2ggAABYJAADZCAAAFgkAABUJAADaCAAA2wgAABcJAADaCAAAFwkAABYJAADbCAAA3AgAABgJAADbCAAAGAkAABcJAADcCAAA3QgAABkJAADcCAAAGQkAABgJAADdCAAA3ggAABoJAADdCAAAGgkAABkJAADeCAAA3wgAABsJAADeCAAAGwkAABoJAADfCAAA4AgAABwJAADfCAAAHAkAABsJAADgCAAA4QgAAB0JAADgCAAAHQkAABwJAADhCAAA4ggAAB4JAADhCAAAHgkAAB0JAADiCAAA4wgAAB8JAADiCAAAHwkAAB4JAADjCAAA5AgAACAJAADjCAAAIAkAAB8JAADkCAAA5QgAACEJAADkCAAAIQkAACAJAADlCAAA5ggAACIJAADlCAAAIgkAACEJAADmCAAA5wgAACMJAADmCAAAIwkAACIJAADoCAAA6QgAACUJAADoCAAAJQkAACQJAADpCAAA6ggAACYJAADpCAAAJgkAACUJAADqCAAA6wgAACcJAADqCAAAJwkAACYJAADrCAAA7AgAACgJAADrCAAAKAkAACcJAADsCAAA7QgAACkJAADsCAAAKQkAACgJAADtCAAA7ggAACoJAADtCAAAKgkAACkJAADuCAAA7wgAACsJAADuCAAAKwkAACoJAADvCAAA8AgAACwJAADvCAAALAkAACsJAADwCAAA8QgAAC0JAADwCAAALQkAACwJAADxCAAA8ggAAC4JAADxCAAALgkAAC0JAADyCAAA8wgAAC8JAADyCAAALwkAAC4JAADzCAAA9AgAADAJAADzCAAAMAkAAC8JAAD0CAAA9QgAADEJAAD0CAAAMQkAADAJAAD1CAAA9ggAADIJAAD1CAAAMgkAADEJAAD2CAAA9wgAADMJAAD2CAAAMwkAADIJAAD3CAAA+AgAADQJAAD3CAAANAkAADMJAAD4CAAA+QgAADUJAAD4CAAANQkAADQJAAD5CAAA+ggAADYJAAD5CAAANgkAADUJAAD6CAAA+wgAADcJAAD6CAAANwkAADYJAAD7CAAA/AgAADgJAAD7CAAAOAkAADcJAAD8CAAA/QgAADkJAAD8CAAAOQkAADgJAAD9CAAA/ggAADoJAAD9CAAAOgkAADkJAAD+CAAA/wgAADsJAAD+CAAAOwkAADoJAAD/CAAAAAkAADwJAAD/CAAAPAkAADsJAAAACQAAAQkAAD0JAAAACQAAPQkAADwJAAABCQAAAgkAAD4JAAABCQAAPgkAAD0JAAACCQAAAwkAAD8JAAACCQAAPwkAAD4JAAADCQAABAkAAEAJAAADCQAAQAkAAD8JAAAECQAABQkAAEEJAAAECQAAQQkAAEAJAAAFCQAABgkAAEIJAAAFCQAAQgkAAEEJAAAGCQAABwkAAEMJAAAGCQAAQwkAAEIJAAAHCQAACAkAAEQJAAAHCQAARAkAAEMJAAAICQAACQkAAEUJAAAICQAARQkAAEQJAAAJCQAACgkAAEYJAAAJCQAARgkAAEUJAAAKCQAACwkAAEcJAAAKCQAARwkAAEYJAAALCQAADAkAAEgJAAALCQAASAkAAEcJAAAMCQAADQkAAEkJAAAMCQAASQkAAEgJAAANCQAADgkAAEoJAAANCQAASgkAAEkJAAAOCQAADwkAAEsJAAAOCQAASwkAAEoJAAAPCQAAEAkAAEwJAAAPCQAATAkAAEsJAAAQCQAAEQkAAE0JAAAQCQAATQkAAEwJAAARCQAAEgkAAE4JAAARCQAATgkAAE0JAAASCQAAEwkAAE8JAAASCQAATwkAAE4JAAATCQAAFAkAAFAJAAATCQAAUAkAAE8JAAAUCQAAFQkAAFEJAAAUCQAAUQkAAFAJAAAVCQAAFgkAAFIJAAAVCQAAUgkAAFEJAAAWCQAAFwkAAFMJAAAWCQAAUwkAAFIJAAAXCQAAGAkAAFQJAAAXCQAAVAkAAFMJAAAYCQAAGQkAAFUJAAAYCQAAVQkAAFQJAAAZCQAAGgkAAFYJAAAZCQAAVgkAAFUJAAAaCQAAGwkAAFcJAAAaCQAAVwkAAFYJAAAbCQAAHAkAAFgJAAAbCQAAWAkAAFcJAAAcCQAAHQkAAFkJAAAcCQAAWQkAAFgJAAAdCQAAHgkAAFoJAAAdCQAAWgkAAFkJAAAeCQAAHwkAAFsJAAAeCQAAWwkAAFoJAAAfCQAAIAkAAFwJAAAfCQAAXAkAAFsJAAAgCQAAIQkAAF0JAAAgCQAAXQkAAFwJAAAhCQAAIgkAAF4JAAAhCQAAXgkAAF0JAAAiCQAAIwkAAF8JAAAiCQAAXwkAAF4JAAAkCQAAJQkAAGEJAAAkCQAAYQkAAGAJAAAlCQAAJgkAAGIJAAAlCQAAYgkAAGEJAAAmCQAAJwkAAGMJAAAmCQAAYwkAAGIJAAAnCQAAKAkAAGQJAAAnCQAAZAkAAGMJAAAoCQAAKQkAAGUJAAAoCQAAZQkAAGQJAAApCQAAKgkAAGYJAAApCQAAZgkAAGUJAAAqCQAAKwkAAGcJAAAqCQAAZwkAAGYJAAArCQAALAkAAGgJAAArCQAAaAkAAGcJAAAsCQAALQkAAGkJAAAsCQAAaQkAAGgJAAAtCQAALgkAAGoJAAAtCQAAagkAAGkJAAAuCQAALwkAAGsJAAAuCQAAawkAAGoJAAAvCQAAMAkAAGwJAAAvCQAAbAkAAGsJAAAwCQAAMQkAAG0JAAAwCQAAbQkAAGwJAAAxCQAAMgkAAG4JAAAxCQAAbgkAAG0JAAAyCQAAMwkAAG8JAAAyCQAAbwkAAG4JAAAzCQAANAkAAHAJAAAzCQAAcAkAAG8JAAA0CQAANQkAAHEJAAA0CQAAcQkAAHAJAAA1CQAANgkAAHIJAAA1CQAAcgkAAHEJAAA2CQAANwkAAHMJAAA2CQAAcwkAAHIJAAA3CQAAOAkAAHQJAAA3CQAAdAkAAHMJAAA4CQAAOQkAAHUJAAA4CQAAdQkAAHQJAAA5CQAAOgkAAHYJAAA5CQAAdgkAAHUJAAA6CQAAOwkAAHcJAAA6CQAAdwkAAHYJAAA7CQAAPAkAAHgJAAA7CQAAeAkAAHcJAAA8CQAAPQkAAHkJAAA8CQAAeQkAAHgJAAA9CQAAPgkAAHoJAAA9CQAAegkAAHkJAAA+CQAAPwkAAHsJAAA+CQAAewkAAHoJAAA/CQAAQAkAAHwJAAA/CQAAfAkAAHsJAABACQAAQQkAAH0JAABACQAAfQkAAHwJAABBCQAAQgkAAH4JAABBCQAAfgkAAH0JAABCCQAAQwkAAH8JAABCCQAAfwkAAH4JAABDCQAARAkAAIAJAABDCQAAgAkAAH8JAABECQAARQkAAIEJAABECQAAgQkAAIAJAABFCQAARgkAAIIJAABFCQAAggkAAIEJAABGCQAARwkAAIMJAABGCQAAgwkAAIIJAABHCQAASAkAAIQJAABHCQAAhAkAAIMJAABICQAASQkAAIUJAABICQAAhQkAAIQJAABJCQAASgkAAIYJAABJCQAAhgkAAIUJAABKCQAASwkAAIcJAABKCQAAhwkAAIYJAABLCQAATAkAAIgJAABLCQAAiAkAAIcJAABMCQAATQkAAIkJAABMCQAAiQkAAIgJAABNCQAATgkAAIoJAABNCQAAigkAAIkJAABOCQAATwkAAIsJAABOCQAAiwkAAIoJAABPCQAAUAkAAIwJAABPCQAAjAkAAIsJAABQCQAAUQkAAI0JAABQCQAAjQkAAIwJAABRCQAAUgkAAI4JAABRCQAAjgkAAI0JAABSCQAAUwkAAI8JAABSCQAAjwkAAI4JAABTCQAAVAkAAJAJAABTCQAAkAkAAI8JAABUCQAAVQkAAJEJAABUCQAAkQkAAJAJAABVCQAAVgkAAJIJAABVCQAAkgkAAJEJAABWCQAAVwkAAJMJAABWCQAAkwkAAJIJAABXCQAAWAkAAJQJAABXCQAAlAkAAJMJAABYCQAAWQkAAJUJAABYCQAAlQkAAJQJAABZCQAAWgkAAJYJAABZCQAAlgkAAJUJAABaCQAAWwkAAJcJAABaCQAAlwkAAJYJAABbCQAAXAkAAJgJAABbCQAAmAkAAJcJAABcCQAAXQkAAJkJAABcCQAAmQkAAJgJAABdCQAAXgkAAJoJAABdCQAAmgkAAJkJAABeCQAAXwkAAJsJAABeCQAAmwkAAJoJAABgCQAAYQkAAJ0JAABgCQAAnQkAAJwJAABhCQAAYgkAAJ4JAABhCQAAngkAAJ0JAABiCQAAYwkAAJ8JAABiCQAAnwkAAJ4JAABjCQAAZAkAAKAJAABjCQAAoAkAAJ8JAABkCQAAZQkAAKEJAABkCQAAoQkAAKAJAABlCQAAZgkAAKIJAABlCQAAogkAAKEJAABmCQAAZwkAAKMJAABmCQAAowkAAKIJAABnCQAAaAkAAKQJAABnCQAApAkAAKMJAABoCQAAaQkAAKUJAABoCQAApQkAAKQJAABpCQAAagkAAKYJAABpCQAApgkAAKUJAABqCQAAawkAAKcJAABqCQAApwkAAKYJAABrCQAAbAkAAKgJAABrCQAAqAkAAKcJAABsCQAAbQkAAKkJAABsCQAAqQkAAKgJAABtCQAAbgkAAKoJAABtCQAAqgkAAKkJAABuCQAAbwkAAKsJAABuCQAAqwkAAKoJAABvCQAAcAkAAKwJAABvCQAArAkAAKsJAABwCQAAcQkAAK0JAABwCQAArQkAAKwJAABxCQAAcgkAAK4JAABxCQAArgkAAK0JAAByCQAAcwkAAK8JAAByCQAArwkAAK4JAABzCQAAdAkAALAJAABzCQAAsAkAAK8JAAB0CQAAdQkAALEJAAB0CQAAsQkAALAJAAB1CQAAdgkAALIJAAB1CQAAsgkAALEJAAB2CQAAdwkAALMJAAB2CQAAswkAALIJAAB3CQAAeAkAALQJAAB3CQAAtAkAALMJAAB4CQAAeQkAALUJAAB4CQAAtQkAALQJAAB5CQAAegkAALYJAAB5CQAAtgkAALUJAAB6CQAAewkAALcJAAB6CQAAtwkAALYJAAB7CQAAfAkAALgJAAB7CQAAuAkAALcJAAB8CQAAfQkAALkJAAB8CQAAuQkAALgJAAB9CQAAfgkAALoJAAB9CQAAugkAALkJAAB+CQAAfwkAALsJAAB+CQAAuwkAALoJAAB/CQAAgAkAALwJAAB/CQAAvAkAALsJAACACQAAgQkAAL0JAACACQAAvQkAALwJAACBCQAAggkAAL4JAACBCQAAvgkAAL0JAACCCQAAgwkAAL8JAACCCQAAvwkAAL4JAACDCQAAhAkAAMAJAACDCQAAwAkAAL8JAACECQAAhQkAAMEJAACECQAAwQkAAMAJAACFCQAAhgkAAMIJAACFCQAAwgkAAMEJAACGCQAAhwkAAMMJAACGCQAAwwkAAMIJAACHCQAAiAkAAMQJAACHCQAAxAkAAMMJAACICQAAiQkAAMUJAACICQAAxQkAAMQJAACJCQAAigkAAMYJAACJCQAAxgkAAMUJAACKCQAAiwkAAMcJAACKCQAAxwkAAMYJAACLCQAAjAkAAMgJAACLCQAAyAkAAMcJAACMCQAAjQkAAMkJAACMCQAAyQkAAMgJAACNCQAAjgkAAMoJAACNCQAAygkAAMkJAACOCQAAjwkAAMsJAACOCQAAywkAAMoJAACPCQAAkAkAAMwJAACPCQAAzAkAAMsJAACQCQAAkQkAAM0JAACQCQAAzQkAAMwJAACRCQAAkgkAAM4JAACRCQAAzgkAAM0JAACSCQAAkwkAAM8JAACSCQAAzwkAAM4JAACTCQAAlAkAANAJAACTCQAA0AkAAM8JAACUCQAAlQkAANEJAACUCQAA0QkAANAJAACVCQAAlgkAANIJAACVCQAA0gkAANEJAACWCQAAlwkAANMJAACWCQAA0wkAANIJAACXCQAAmAkAANQJAACXCQAA1AkAANMJAACYCQAAmQkAANUJAACYCQAA1QkAANQJAACZCQAAmgkAANYJAACZCQAA1gkAANUJAACaCQAAmwkAANcJAACaCQAA1wkAANYJAACcCQAAnQkAANkJAACcCQAA2QkAANgJAACdCQAAngkAANoJAACdCQAA2gkAANkJAACeCQAAnwkAANsJAACeCQAA2wkAANoJAACfCQAAoAkAANwJAACfCQAA3AkAANsJAACgCQAAoQkAAN0JAACgCQAA3QkAANwJAAChCQAAogkAAN4JAAChCQAA3gkAAN0JAACiCQAAowkAAN8JAACiCQAA3wkAAN4JAACjCQAApAkAAOAJAACjCQAA4AkAAN8JAACkCQAApQkAAOEJAACkCQAA4QkAAOAJAAClCQAApgkAAOIJAAClCQAA4gkAAOEJAACmCQAApwkAAOMJAACmCQAA4wkAAOIJAACnCQAAqAkAAOQJAACnCQAA5AkAAOMJAACoCQAAqQkAAOUJAACoCQAA5QkAAOQJAACpCQAAqgkAAOYJAACpCQAA5gkAAOUJAACqCQAAqwkAAOcJAACqCQAA5wkAAOYJAACrCQAArAkAAOgJAACrCQAA6AkAAOcJAACsCQAArQkAAOkJAACsCQAA6QkAAOgJAACtCQAArgkAAOoJAACtCQAA6gkAAOkJAACuCQAArwkAAOsJAACuCQAA6wkAAOoJAACvCQAAsAkAAOwJAACvCQAA7AkAAOsJAACwCQAAsQkAAO0JAACwCQAA7QkAAOwJAACxCQAAsgkAAO4JAACxCQAA7gkAAO0JAACyCQAAswkAAO8JAACyCQAA7wkAAO4JAACzCQAAtAkAAPAJAACzCQAA8AkAAO8JAAC0CQAAtQkAAPEJAAC0CQAA8QkAAPAJAAC1CQAAtgkAAPIJAAC1CQAA8gkAAPEJAAC2CQAAtwkAAPMJAAC2CQAA8wkAAPIJAAC3CQAAuAkAAPQJAAC3CQAA9AkAAPMJAAC4CQAAuQkAAPUJAAC4CQAA9QkAAPQJAAC5CQAAugkAAPYJAAC5CQAA9gkAAPUJAAC6CQAAuwkAAPcJAAC6CQAA9wkAAPYJAAC7CQAAvAkAAPgJAAC7CQAA+AkAAPcJAAC8CQAAvQkAAPkJAAC8CQAA+QkAAPgJAAC9CQAAvgkAAPoJAAC9CQAA+gkAAPkJAAC+CQAAvwkAAPsJAAC+CQAA+wkAAPoJAAC/CQAAwAkAAPwJAAC/CQAA/AkAAPsJAADACQAAwQkAAP0JAADACQAA/QkAAPwJAADBCQAAwgkAAP4JAADBCQAA/gkAAP0JAADCCQAAwwkAAP8JAADCCQAA/wkAAP4JAADDCQAAxAkAAAAKAADDCQAAAAoAAP8JAADECQAAxQkAAAEKAADECQAAAQoAAAAKAADFCQAAxgkAAAIKAADFCQAAAgoAAAEKAADGCQAAxwkAAAMKAADGCQAAAwoAAAIKAADHCQAAyAkAAAQKAADHCQAABAoAAAMKAADICQAAyQkAAAUKAADICQAABQoAAAQKAADJCQAAygkAAAYKAADJCQAABgoAAAUKAADKCQAAywkAAAcKAADKCQAABwoAAAYKAADLCQAAzAkAAAgKAADLCQAACAoAAAcKAADMCQAAzQkAAAkKAADMCQAACQoAAAgKAADNCQAAzgkAAAoKAADNCQAACgoAAAkKAADOCQAAzwkAAAsKAADOCQAACwoAAAoKAADPCQAA0AkAAAwKAADPCQAADAoAAAsKAADQCQAA0QkAAA0KAADQCQAADQoAAAwKAADRCQAA0gkAAA4KAADRCQAADgoAAA0KAADSCQAA0wkAAA8KAADSCQAADwoAAA4KAADTCQAA1AkAABAKAADTCQAAEAoAAA8KAADUCQAA1QkAABEKAADUCQAAEQoAABAKAADVCQAA1gkAABIKAADVCQAAEgoAABEKAADWCQAA1wkAABMKAADWCQAAEwoAABIKAADYCQAA2QkAABUKAADYCQAAFQoAABQKAADZCQAA2gkAABYKAADZCQAAFgoAABUKAADaCQAA2wkAABcKAADaCQAAFwoAABYKAADbCQAA3AkAABgKAADbCQAAGAoAABcKAADcCQAA3QkAABkKAADcCQAAGQoAABgKAADdCQAA3gkAABoKAADdCQAAGgoAABkKAADeCQAA3wkAABsKAADeCQAAGwoAABoKAADfCQAA4AkAABwKAADfCQAAHAoAABsKAADgCQAA4QkAAB0KAADgCQAAHQoAABwKAADhCQAA4gkAAB4KAADhCQAAHgoAAB0KAADiCQAA4wkAAB8KAADiCQAAHwoAAB4KAADjCQAA5AkAACAKAADjCQAAIAoAAB8KAADkCQAA5QkAACEKAADkCQAAIQoAACAKAADlCQAA5gkAACIKAADlCQAAIgoAACEKAADmCQAA5wkAACMKAADmCQAAIwoAACIKAADnCQAA6AkAACQKAADnCQAAJAoAACMKAADoCQAA6QkAACUKAADoCQAAJQoAACQKAADpCQAA6gkAACYKAADpCQAAJgoAACUKAADqCQAA6wkAACcKAADqCQAAJwoAACYKAADrCQAA7AkAACgKAADrCQAAKAoAACcKAADsCQAA7QkAACkK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AACECgAAwQoAAMAKAACFCgAAhgoAAMIKAACFCgAAwgoAAMEKAACGCgAAhwoAAMMKAACGCgAAwwoAAMIKAACHCgAAiAoAAMQKAACHCgAAxAoAAMMKAACICgAAiQoAAMUKAACICgAAxQoAAMQKAACJCgAAigoAAMYKAACJCgAAxgoAAMUKAACKCgAAiwoAAMcKAACKCgAAxwoAAMYKAACMCgAAjQoAAMkKAACMCgAAyQoAAMgKAACNCgAAjgoAAMoKAACNCgAAygoAAMkKAACOCgAAjwoAAMsKAACOCgAAywoAAMoKAACPCgAAkAoAAMwKAACPCgAAzAoAAMsKAACQCgAAkQoAAM0KAACQCgAAzQoAAMwKAACRCgAAkgoAAM4KAACRCgAAzgoAAM0KAACSCgAAkwoAAM8KAACSCgAAzwoAAM4KAACTCgAAlAoAANAKAACTCgAA0AoAAM8KAACUCgAAlQoAANEKAACUCgAA0QoAANAKAACVCgAAlgoAANIKAACVCgAA0goAANEKAACWCgAAlwoAANMKAACWCgAA0woAANIKAACXCgAAmAoAANQKAACXCgAA1AoAANMKAACYCgAAmQoAANUKAACYCgAA1QoAANQKAACZCgAAmgoAANYKAACZCgAA1goAANUKAACaCgAAmwoAANcKAACaCgAA1woAANYKAACbCgAAnAoAANgKAACbCgAA2AoAANcKAACcCgAAnQoAANkKAACcCgAA2QoAANgKAACdCgAAngoAANoKAACdCgAA2goAANkKAACeCgAAnwoAANsKAACeCgAA2woAANoKAACfCgAAoAoAANwKAACfCgAA3AoAANsKAACgCgAAoQoAAN0KAACgCgAA3QoAANwKAAChCgAAogoAAN4KAAChCgAA3goAAN0KAACiCgAAowoAAN8KAACiCgAA3woAAN4KAACjCgAApAoAAOAKAACjCgAA4AoAAN8KAACkCgAApQoAAOEKAACkCgAA4QoAAOAKAAClCgAApgoAAOIKAAClCgAA4goAAOEKAACmCgAApwoAAOMKAACmCgAA4woAAOIKAACnCgAAqAoAAOQKAACnCgAA5AoAAOMKAACoCgAAqQoAAOUKAACoCgAA5QoAAOQKAACpCgAAqgoAAOYKAACpCgAA5goAAOUKAACqCgAAqwoAAOcKAACqCgAA5woAAOYKAACrCgAArAoAAOgKAACrCgAA6AoAAOcKAACsCgAArQoAAOkKAACsCgAA6QoAAOgKAACtCgAArgoAAOoKAACtCgAA6goAAOkKAACuCgAArwoAAOsKAACuCgAA6woAAOoKAACvCgAAsAoAAOwKAACvCgAA7AoAAOsKAACwCgAAsQoAAO0KAACwCgAA7QoAAOwKAACxCgAAsgoAAO4KAACxCgAA7goAAO0KAACyCgAAswoAAO8KAACyCgAA7woAAO4KAACzCgAAtAoAAPAKAACzCgAA8AoAAO8KAAC0CgAAtQoAAPEKAAC0CgAA8QoAAPAKAAC1CgAAtgoAAPIKAAC1CgAA8goAAPEKAAC2CgAAtwoAAPMKAAC2CgAA8woAAPIKAAC3CgAAuAoAAPQKAAC3CgAA9AoAAPMKAAC4CgAAuQoAAPUKAAC4CgAA9QoAAPQKAAC5CgAAugoAAPYKAAC5CgAA9goAAPUKAAC6CgAAuwoAAPcKAAC6CgAA9woAAPYKAAC7CgAAvAoAAPgKAAC7CgAA+AoAAPcKAAC8CgAAvQoAAPkKAAC8CgAA+QoAAPgKAAC9CgAAvgoAAPoKAAC9CgAA+goAAPkKAAC+CgAAvwoAAPsKAAC+CgAA+woAAPoKAAC/CgAAwAoAAPwKAAC/CgAA/AoAAPsKAADACgAAwQoAAP0KAADACgAA/QoAAPwKAADBCgAAwgoAAP4KAADBCgAA/goAAP0KAADCCgAAwwoAAP8KAADCCgAA/woAAP4KAADDCgAAxAoAAAALAADDCgAAAAsAAP8KAADECgAAxQoAAAELAADECgAAAQsAAAALAADFCgAAxgoAAAILAADFCgAAAgsAAAELAADGCgAAxwoAAAMLAADGCgAAAwsAAAILAADICgAAyQoAAAULAADICgAABQsAAAQLAADJCgAAygoAAAYLAADJCgAABgsAAAULAADKCgAAywoAAAcLAADKCgAABwsAAAYLAADLCgAAzAoAAAgLAADLCgAACAsAAAcLAADMCgAAzQoAAAkLAADMCgAACQsAAAgLAADNCgAAzgoAAAoLAADNCgAACgsAAAkLAADOCgAAzwoAAAsLAADOCgAACwsAAAoLAADPCgAA0AoAAAwLAADPCgAADAsAAAsLAADQCgAA0QoAAA0LAADQCgAADQsAAAwLAADRCgAA0goAAA4LAADRCgAADgsAAA0LAADSCgAA0woAAA8LAADSCgAADwsAAA4LAADTCgAA1AoAABALAADTCgAAEAsAAA8LAADUCgAA1QoAABELAADUCgAAEQsAABALAADVCgAA1goAABILAADVCgAAEgsAABELAADWCgAA1woAABMLAADWCgAAEwsAABILAADXCgAA2AoAABQLAADXCgAAFAsAABMLAADYCgAA2QoAABULAADYCgAAFQsAABQLAADZCgAA2goAABYLAADZCgAAFgsAABULAADaCgAA2woAABcLAADaCgAAFwsAABYLAADbCgAA3AoAABgLAADbCgAAGAsAABcLAADcCgAA3QoAABkLAADcCgAAGQsAABgLAADdCgAA3goAABoLAADdCgAAGgsAABkLAADeCgAA3woAABsLAADeCgAAGwsAABoLAADfCgAA4AoAABwLAADfCgAAHAsAABsLAADgCgAA4QoAAB0LAADgCgAAHQsAABwLAADhCgAA4goAAB4LAADhCgAAHgsAAB0LAADiCgAA4woAAB8LAADiCgAAHwsAAB4LAADjCgAA5AoAACALAADjCgAAIAsAAB8LAADkCgAA5QoAACELAADkCgAAIQsAACALAADlCgAA5goAACILAADlCgAAIgsAACELAADmCgAA5woAACMLAADmCgAAIwsAACILAADnCgAA6AoAACQLAADnCgAAJAsAACMLAADoCgAA6QoAACULAADoCgAAJQsAACQLAADpCgAA6goAACYLAADpCgAAJgsAACULAADqCgAA6woAACcLAADqCgAAJwsAACYLAADrCgAA7AoAACgLAADrCgAAKAsAACcLAADsCgAA7QoAACkLAADsCgAAKQsAACgLAADtCgAA7goAACoLAADtCgAAKgsAACkLAADuCgAA7woAACsLAADuCgAAKwsAACoLAADvCgAA8AoAACwLAADvCgAALAsAACsLAADwCgAA8QoAAC0LAADwCgAALQsAACwLAADxCgAA8goAAC4LAADxCgAALgsAAC0LAADyCgAA8woAAC8LAADyCgAALwsAAC4LAADzCgAA9AoAADALAADzCgAAMAsAAC8LAAD0CgAA9QoAADELAAD0CgAAMQsAADALAAD1CgAA9goAADILAAD1CgAAMgsAADELAAD2CgAA9woAADMLAAD2CgAAMwsAADILAAD3CgAA+AoAADQLAAD3CgAANAsAADMLAAD4CgAA+QoAADULAAD4CgAANQsAADQLAAD5CgAA+goAADYLAAD5CgAANgsAADULAAD6CgAA+woAADcLAAD6CgAANwsAADYLAAD7CgAA/AoAADgLAAD7CgAAOAsAADcLAAD8CgAA/QoAADkLAAD8CgAAOQsAADgLAAD9CgAA/goAADoLAAD9CgAAOgsAADkLAAD+CgAA/woAADsLAAD+CgAAOwsAADoLAAD/CgAAAAsAADwLAAD/CgAAPAsAADsLAAAACwAAAQsAAD0LAAAACwAAPQsAADwLAAABCwAAAgsAAD4LAAABCwAAPgsAAD0LAAACCwAAAwsAAD8LAAACCwAAPwsAAD4LAAAECwAABQsAAEELAAAECwAAQQsAAEALAAAFCwAABgsAAEILAAAFCwAAQgsAAEELAAAGCwAABwsAAEMLAAAGCwAAQwsAAEILAAAHCwAACAsAAEQLAAAHCwAARAsAAEMLAAAICwAACQsAAEULAAAICwAARQsAAEQLAAAJCwAACgsAAEYLAAAJCwAARgsAAEULAAAKCwAACwsAAEcLAAAKCwAARwsAAEYLAAALCwAADAsAAEgLAAALCwAASAsAAEcLAAAMCwAADQsAAEkLAAAMCwAASQsAAEgLAAANCwAADgsAAEoLAAANCwAASgsAAEkLAAAOCwAADwsAAEsLAAAOCwAASwsAAEoLAAAPCwAAEAsAAEwLAAAPCwAATAsAAEsLAAAQCwAAEQsAAE0LAAAQCwAATQsAAEwLAAARCwAAEgsAAE4LAAARCwAATgsAAE0LAAASCwAAEwsAAE8LAAASCwAATwsAAE4LAAATCwAAFAsAAFALAAATCwAAUAsAAE8LAAAUCwAAFQsAAFELAAAUCwAAUQsAAFALAAAVCwAAFgsAAFILAAAVCwAAUgsAAFELAAAWCwAAFwsAAFMLAAAWCwAAUwsAAFILAAAXCwAAGAsAAFQLAAAXCwAAVAsAAFMLAAAYCwAAGQsAAFULAAAYCwAAVQsAAFQLAAAZCwAAGgsAAFYLAAAZCwAAVgsAAFULAAAaCwAAGwsAAFcLAAAaCwAAVwsAAFYLAAAbCwAAHAsAAFgLAAAbCwAAWAsAAFcLAAAcCwAAHQsAAFkLAAAcCwAAWQsAAFgLAAAdCwAAHgsAAFoLAAAdCwAAWgsAAFkLAAAeCwAAHwsAAFsLAAAeCwAAWwsAAFoLAAAfCwAAIAsAAFwLAAAfCwAAXAsAAFsLAAAgCwAAIQsAAF0LAAAgCwAAXQsAAFwLAAAhCwAAIgsAAF4LAAAhCwAAXgsAAF0LAAAiCwAAIwsAAF8LAAAiCwAAXwsAAF4LAAAjCwAAJAsAAGALAAAjCwAAYAsAAF8LAAAkCwAAJQsAAGELAAAkCwAAYQsAAGALAAAlCwAAJgsAAGILAAAlCwAAYgsAAGELAAAmCwAAJwsAAGMLAAAmCwAAYwsAAGILAAAnCwAAKAsAAGQLAAAnCwAAZAsAAGMLAAAoCwAAKQsAAGULAAAoCwAAZQsAAGQLAAApCwAAKgsAAGYLAAApCwAAZgsAAGULAAAqCwAAKwsAAGcLAAAqCwAAZwsAAGYLAAArCwAALAsAAGgLAAArCwAAaAsAAGcLAAAsCwAALQsAAGkLAAAsCwAAaQsAAGgLAAAtCwAALgsAAGoLAAAtCwAAagsAAGkLAAAuCwAALwsAAGsLAAAuCwAAawsAAGoLAAAvCwAAMAsAAGwLAAAvCwAAbAsAAGsLAAAwCwAAMQsAAG0LAAAwCwAAbQsAAGwLAAAxCwAAMgsAAG4LAAAxCwAAbgsAAG0LAAAyCwAAMwsAAG8LAAAyCwAAbwsAAG4LAAAzCwAANAsAAHALAAAzCwAAcAsAAG8LAAA0CwAANQsAAHELAAA0CwAAcQsAAHALAAA1CwAANgsAAHILAAA1CwAAcgsAAHELAAA2CwAANwsAAHMLAAA2CwAAcwsAAHILAAA3CwAAOAsAAHQLAAA3CwAAdAsAAHMLAAA4CwAAOQsAAHULAAA4CwAAdQsAAHQLAAA5CwAAOgsAAHYLAAA5CwAAdgsAAHULAAA6CwAAOwsAAHcLAAA6CwAAdwsAAHYLAAA7CwAAPAsAAHgLAAA7CwAAeAsAAHcLAAA8CwAAPQsAAHkLAAA8CwAAeQsAAHgLAAA9CwAAPgsAAHoLAAA9CwAAegsAAHkLAAA+CwAAPwsAAHsLAAA+CwAAewsAAHoLAABACwAAQQsAAH0LAABACwAAfQsAAHwLAABBCwAAQgsAAH4LAABBCwAAfgsAAH0LAABCCwAAQwsAAH8LAABCCwAAfwsAAH4LAABDCwAARAsAAIALAABDCwAAgAsAAH8LAABECwAARQsAAIELAABECwAAgQsAAIALAABFCwAARgsAAIILAABFCwAAggsAAIELAABGCwAARwsAAIMLAABGCwAAgwsAAIILAABHCwAASAsAAIQLAABHCwAAhAsAAIMLAABICwAASQsAAIULAABICwAAhQsAAIQLAABJCwAASgsAAIYLAABJCwAAhgsAAIULAABKCwAASwsAAIcLAABKCwAAhwsAAIYLAABLCwAATAsAAIgLAABLCwAAiAsAAIcLAABMCwAATQsAAIkLAABMCwAAiQsAAIgLAABNCwAATgsAAIoLAABNCwAAigsAAIkLAABOCwAATwsAAIsLAABOCwAAiwsAAIoLAABPCwAAUAsAAIwLAABPCwAAjAsAAIsLAABQCwAAUQsAAI0LAABQCwAAjQsAAIwLAABRCwAAUgsAAI4LAABRCwAAjgsAAI0LAABSCwAAUwsAAI8LAABSCwAAjwsAAI4LAABTCwAAVAsAAJALAABTCwAAkAsAAI8LAABUCwAAVQsAAJELAABUCwAAkQsAAJALAABVCwAAVgsAAJILAABVCwAAkgsAAJELAABWCwAAVwsAAJMLAABWCwAAkwsAAJILAABXCwAAWAsAAJQLAABXCwAAlAsAAJMLAABYCwAAWQsAAJULAABYCwAAlQsAAJQLAABZCwAAWgsAAJYLAABZCwAAlgsAAJULAABaCwAAWwsAAJcLAABaCwAAlwsAAJYLAABbCwAAXAsAAJgLAABbCwAAmAsAAJcLAABcCwAAXQsAAJkLAABcCwAAmQsAAJgLAABdCwAAXgsAAJoLAABdCwAAmgsAAJkLAABeCwAAXwsAAJsLAABeCwAAmwsAAJoLAABfCwAAYAsAAJwLAABfCwAAnAsAAJsLAABgCwAAYQsAAJ0LAABgCwAAnQsAAJwLAABhCwAAYgsAAJ4LAABhCwAAngsAAJ0LAABiCwAAYwsAAJ8LAABiCwAAnwsAAJ4LAABjCwAAZAsAAKALAABjCwAAoAsAAJ8LAABkCwAAZQsAAKELAABkCwAAoQsAAKALAABlCwAAZgsAAKILAABlCwAAogsAAKELAABmCwAAZwsAAKMLAABmCwAAowsAAKILAABnCwAAaAsAAKQLAABnCwAApAsAAKMLAABoCwAAaQsAAKULAABoCwAApQsAAKQLAABpCwAAagsAAKYLAABpCwAApgsAAKULAABqCwAAawsAAKcLAABqCwAApwsAAKYLAABrCwAAbAsAAKgLAABrCwAAqAsAAKcLAABsCwAAbQsAAKkLAABsCwAAqQsAAKgLAABtCwAAbgsAAKoLAABtCwAAqgsAAKkLAABuCwAAbwsAAKsLAABuCwAAqwsAAKoLAABvCwAAcAsAAKwLAABvCwAArAsAAKsLAABwCwAAcQsAAK0LAABwCwAArQsAAKwLAABxCwAAcgsAAK4LAABxCwAArgsAAK0LAAByCwAAcwsAAK8LAAByCwAArwsAAK4LAABzCwAAdAsAALALAABzCwAAsAsAAK8LAAB0CwAAdQsAALELAAB0CwAAsQsAALALAAB1CwAAdgsAALILAAB1CwAAsgsAALELAAB2CwAAdwsAALMLAAB2CwAAswsAALILAAB3CwAAeAsAALQLAAB3CwAAtAsAALMLAAB4CwAAeQsAALULAAB4CwAAtQsAALQLAAB5CwAAegsAALYLAAB5CwAAtgsAALULAAB6CwAAewsAALcLAAB6CwAAtwsAALYLAAB8CwAAfQsAALkLAAB8CwAAuQsAALgLAAB9CwAAfgsAALoLAAB9CwAAugsAALkLAAB+CwAAfwsAALsLAAB+CwAAuwsAALoLAAB/CwAAgAsAALwLAAB/CwAAvAsAALsLAACACwAAgQsAAL0LAACACwAAvQsAALwLAACBCwAAggsAAL4LAACBCwAAvgsAAL0LAACCCwAAgwsAAL8LAACCCwAAvwsAAL4LAACDCwAAhAsAAMALAACDCwAAwAsAAL8LAACECwAAhQsAAMELAACECwAAwQsAAMALAACFCwAAhgsAAMILAACFCwAAwgsAAMELAACGCwAAhwsAAMMLAACGCwAAwwsAAMILAACHCwAAiAsAAMQLAACHCwAAxAsAAMMLAACICwAAiQsAAMULAACICwAAxQsAAMQLAACJCwAAigsAAMYLAACJCwAAxgsAAMULAACKCwAAiwsAAMcLAACKCwAAxwsAAMYLAACLCwAAjAsAAMgLAACLCwAAyAsAAMcLAACMCwAAjQsAAMkLAACMCwAAyQsAAMgLAACNCwAAjgsAAMoLAACNCwAAygsAAMkLAACOCwAAjwsAAMsLAACOCwAAywsAAMoLAACPCwAAkAsAAMwLAACPCwAAzAsAAMsLAACQCwAAkQsAAM0LAACQCwAAzQsAAMwLAACRCwAAkgsAAM4LAACRCwAAzgsAAM0LAACSCwAAkwsAAM8LAACSCwAAzwsAAM4LAACTCwAAlAsAANALAACTCwAA0AsAAM8LAACUCwAAlQsAANELAACUCwAA0QsAANALAACVCwAAlgsAANILAACVCwAA0gsAANELAACWCwAAlwsAANMLAACWCwAA0wsAANILAACXCwAAmAsAANQLAACXCwAA1AsAANMLAACYCwAAmQsAANULAACYCwAA1QsAANQLAACZCwAAmgsAANYLAACZCwAA1gsAANULAACaCwAAmwsAANcLAACaCwAA1wsAANYLAACbCwAAnAsAANgLAACbCwAA2AsAANcLAACcCwAAnQsAANkLAACcCwAA2QsAANgLAACdCwAAngsAANoLAACdCwAA2gsAANkLAACeCwAAnwsAANsLAACeCwAA2wsAANoLAACfCwAAoAsAANwLAACfCwAA3AsAANsLAACgCwAAoQsAAN0LAACgCwAA3QsAANwLAAChCwAAogsAAN4LAAChCwAA3gsAAN0LAACiCwAAowsAAN8LAACiCwAA3wsAAN4LAACjCwAApAsAAOALAACjCwAA4AsAAN8LAACkCwAApQsAAOELAACkCwAA4QsAAOALAAClCwAApgsAAOILAAClCwAA4gsAAOELAACmCwAApwsAAOMLAACmCwAA4wsAAOILAACnCwAAqAsAAOQLAACnCwAA5AsAAOMLAACoCwAAqQsAAOULAACoCwAA5QsAAOQLAACpCwAAqgsAAOYLAACpCwAA5gsAAOULAACqCwAAqwsAAOcLAACqCwAA5wsAAOYLAACrCwAArAsAAOgLAACrCwAA6AsAAOcLAACsCwAArQsAAOkLAACsCwAA6QsAAOgLAACtCwAArgsAAOoLAACtCwAA6gsAAOkLAACuCwAArwsAAOsLAACuCwAA6wsAAOoLAACvCwAAsAsAAOwLAACvCwAA7AsAAOsLAACwCwAAsQsAAO0LAACwCwAA7QsAAOwLAACxCwAAsgsAAO4LAACxCwAA7gsAAO0LAACyCwAAswsAAO8LAACyCwAA7wsAAO4LAACzCwAAtAsAAPALAACzCwAA8AsAAO8LAAC0CwAAtQsAAPELAAC0CwAA8QsAAPALAAC1CwAAtgsAAPILAAC1CwAA8gsAAPELAAC2CwAAtwsAAPMLAAC2CwAA8wsAAPILAAC4CwAAuQsAAPULAAC4CwAA9QsAAPQLAAC5CwAAugsAAPYLAAC5CwAA9gsAAPULAAC6CwAAuwsAAPcLAAC6CwAA9wsAAPYLAAC7CwAAvAsAAPgLAAC7CwAA+AsAAPcLAAC8CwAAvQsAAPkLAAC8CwAA+QsAAPgLAAC9CwAAvgsAAPoLAAC9CwAA+gsAAPkLAAC+CwAAvwsAAPsLAAC+CwAA+wsAAPoLAAC/CwAAwAsAAPwLAAC/CwAA/AsAAPsLAADACwAAwQsAAP0LAADACwAA/QsAAPwLAADBCwAAwgsAAP4LAADBCwAA/gsAAP0LAADCCwAAwwsAAP8LAADCCwAA/wsAAP4LAADDCwAAxAsAAAAMAADDCwAAAAwAAP8LAADECwAAxQsAAAEMAADECwAAAQwAAAAMAADFCwAAxgsAAAIMAADFCwAAAgwAAAEMAADGCwAAxwsAAAMMAADGCwAAAwwAAAIMAADHCwAAyAsAAAQMAADHCwAABAwAAAMMAADICwAAyQsAAAUMAADICwAABQwAAAQMAADJCwAAygsAAAYMAADJCwAABgwAAAUMAADKCwAAywsAAAcMAADKCwAABwwAAAYMAADLCwAAzAsAAAgMAADLCwAACAwAAAcMAADMCwAAzQsAAAkMAADMCwAACQwAAAgMAADNCwAAzgsAAAoMAADNCwAACgwAAAkMAADOCwAAzwsAAAsMAADOCwAACwwAAAoMAADPCwAA0AsAAAwMAADPCwAADAwAAAsMAADQCwAA0QsAAA0MAADQCwAADQwAAAwMAADRCwAA0gsAAA4MAADRCwAADgwAAA0MAADSCwAA0wsAAA8MAADSCwAADwwAAA4MAADTCwAA1AsAABAMAADTCwAAEAwAAA8MAADUCwAA1QsAABEMAADUCwAAEQwAABAMAADVCwAA1gsAABIMAADVCwAAEgwAABEMAADWCwAA1wsAABMMAADWCwAAEwwAABIMAADXCwAA2AsAABQMAADXCwAAFAwAABMMAADYCwAA2QsAABUMAADYCwAAFQwAABQMAADZCwAA2gsAABYMAADZCwAAFgwAABUMAADaCwAA2wsAABcMAADaCwAAFwwAABYMAADbCwAA3AsAABgMAADbCwAAGAwAABcMAADcCwAA3QsAABkMAADcCwAAGQwAABgMAADdCwAA3gsAABoMAADdCwAAGgwAABkMAADeCwAA3wsAABsMAADeCwAAGwwAABoMAADfCwAA4AsAABwMAADfCwAAHAwAABsMAADgCwAA4QsAAB0MAADgCwAAHQwAABwMAADhCwAA4gsAAB4MAADhCwAAHgwAAB0MAADiCwAA4wsAAB8MAADiCwAAHwwAAB4MAADjCwAA5AsAACAMAADjCwAAIAwAAB8MAADkCwAA5QsAACEMAADkCwAAIQwAACAMAADlCwAA5gsAACIMAADlCwAAIgwAACEMAADmCwAA5wsAACMMAADmCwAAIwwAACIMAADnCwAA6AsAACQMAADnCwAAJAwAACMMAADoCwAA6QsAACUMAADoCwAAJQwAACQMAADpCwAA6gsAACYMAADpCwAAJgwAACUMAADqCwAA6wsAACcMAADqCwAAJwwAACYMAADrCwAA7AsAACgMAADrCwAAKAwAACcMAADsCwAA7QsAACkMAADsCwAAKQwAACgMAADtCwAA7gsAACoMAADtCwAAKgwAACkMAADuCwAA7wsAACsMAADuCwAAKwwAACoMAADvCwAA8AsAACwMAADvCwAALAwAACsMAADwCwAA8QsAAC0MAADwCwAALQwAACwMAADxCwAA8gsAAC4MAADxCwAALgwAAC0MAADyCwAA8wsAAC8MAADyCwAALwwAAC4MAAD0CwAA9QsAADEMAAD0CwAAMQwAADAMAAD1CwAA9gsAADIMAAD1CwAAMgwAADEMAAD2CwAA9wsAADMMAAD2CwAAMwwAADIMAAD3CwAA+AsAADQMAAD3CwAANAwAADMMAAD4CwAA+QsAADUMAAD4CwAANQwAADQMAAD5CwAA+gsAADYMAAD5CwAANgwAADUMAAD6CwAA+wsAADcMAAD6CwAANwwAADYMAAD7CwAA/AsAADgMAAD7CwAAOAwAADcMAAD8CwAA/QsAADkMAAD8CwAAOQwAADgMAAD9CwAA/gsAADoMAAD9CwAAOgwAADkMAAD+CwAA/wsAADsMAAD+CwAAOwwAADoMAAD/CwAAAAwAADwMAAD/CwAAPAwAADsMAAAADAAAAQwAAD0MAAAADAAAPQwAADwMAAABDAAAAgwAAD4MAAABDAAAPgwAAD0MAAACDAAAAwwAAD8MAAACDAAAPwwAAD4MAAADDAAABAwAAEAMAAADDAAAQAwAAD8MAAAEDAAABQwAAEEMAAAEDAAAQQwAAEAMAAAFDAAABgwAAEIMAAAFDAAAQgwAAEEMAAAGDAAABwwAAEMMAAAGDAAAQwwAAEIMAAAHDAAACAwAAEQMAAAHDAAARAwAAEMMAAAIDAAACQwAAEUMAAAIDAAARQwAAEQMAAAJDAAACgwAAEYMAAAJDAAARgwAAEUMAAAKDAAACwwAAEcMAAAKDAAARwwAAEYMAAALDAAADAwAAEgMAAALDAAASAwAAEcMAAAMDAAADQwAAEkMAAAMDAAASQwAAEgMAAANDAAADgwAAEoMAAANDAAASgwAAEkMAAAODAAADwwAAEsMAAAODAAASwwAAEoMAAAPDAAAEAwAAEwMAAAPDAAATAwAAEsMAAAQDAAAEQwAAE0MAAAQDAAATQwAAEwMAAARDAAAEgwAAE4MAAARDAAATgwAAE0MAAASDAAAEwwAAE8MAAASDAAATwwAAE4MAAATDAAAFAwAAFAMAAATDAAAUAwAAE8MAAAUDAAAFQwAAFEMAAAUDAAAUQwAAFAMAAAVDAAAFgwAAFIMAAAVDAAAUgwAAFEMAAAWDAAAFwwAAFMMAAAWDAAAUwwAAFIMAAAXDAAAGAwAAFQMAAAXDAAAVAwAAFMMAAAYDAAAGQwAAFUMAAAYDAAAVQwAAFQMAAAZDAAAGgwAAFYMAAAZDAAAVgwAAFUMAAAaDAAAGwwAAFcMAAAaDAAAVwwAAFYMAAAbDAAAHAwAAFgMAAAbDAAAWAwAAFcMAAAcDAAAHQwAAFkMAAAcDAAAWQwAAFgMAAAdDAAAHgwAAFoMAAAdDAAAWgwAAFkMAAAeDAAAHwwAAFsMAAAeDAAAWwwAAFoMAAAfDAAAIAwAAFwMAAAfDAAAXAwAAFsMAAAgDAAAIQwAAF0MAAAgDAAAXQwAAFwMAAAhDAAAIgwAAF4MAAAhDAAAXgwAAF0MAAAiDAAAIwwAAF8MAAAiDAAAXwwAAF4MAAAjDAAAJAwAAGAMAAAjDAAAYAwAAF8MAAAkDAAAJQwAAGEMAAAkDAAAYQwAAGAMAAAlDAAAJgwAAGIMAAAlDAAAYgwAAGEMAAAmDAAAJwwAAGMMAAAmDAAAYwwAAGIMAAAnDAAAKAwAAGQMAAAnDAAAZAwAAGMMAAAoDAAAKQwAAGUMAAAoDAAAZQwAAGQMAAApDAAAKgwAAGYMAAApDAAAZgwAAGUMAAAqDAAAKwwAAGcMAAAqDAAAZwwAAGYMAAArDAAALAwAAGgMAAArDAAAaAwAAGcMAAAsDAAALQwAAGkMAAAsDAAAaQwAAGgMAAAtDAAALgwAAGoMAAAtDAAAagwAAGkMAAAuDAAALwwAAGsMAAAuDAAAawwAAGoMAAAwDAAAMQwAAG0MAAAwDAAAbQwAAGwMAAAxDAAAMgwAAG4MAAAxDAAAbgwAAG0MAAAyDAAAMwwAAG8MAAAyDAAAbwwAAG4MAAAzDAAANAwAAHAMAAAzDAAAcAwAAG8MAAA0DAAANQwAAHEMAAA0DAAAcQwAAHAMAAA1DAAANgwAAHIMAAA1DAAAcgwAAHEMAAA2DAAANwwAAHMMAAA2DAAAcwwAAHIMAAA3DAAAOAwAAHQMAAA3DAAAdAwAAHMMAAA4DAAAOQwAAHUMAAA4DAAAdQwAAHQMAAA5DAAAOgwAAHYMAAA5DAAAdgwAAHUMAAA6DAAAOwwAAHcMAAA6DAAAdwwAAHYMAAA7DAAAPAwAAHgMAAA7DAAAeAwAAHcMAAA8DAAAPQwAAHkMAAA8DAAAeQwAAHgMAAA9DAAAPgwAAHoMAAA9DAAAegwAAHkMAAA+DAAAPwwAAHsMAAA+DAAAewwAAHoMAAA/DAAAQAwAAHwMAAA/DAAAfAwAAHsMAABADAAAQQwAAH0MAABADAAAfQwAAHwMAABBDAAAQgwAAH4MAABBDAAAfgwAAH0MAABCDAAAQwwAAH8MAABCDAAAfwwAAH4MAABDDAAARAwAAIAMAABDDAAAgAwAAH8MAABEDAAARQwAAIEMAABEDAAAgQwAAIAMAABFDAAARgwAAIIMAABFDAAAggwAAIEMAABGDAAARwwAAIMMAABGDAAAgwwAAIIMAABHDAAASAwAAIQMAABHDAAAhAwAAIMMAABIDAAASQwAAIUMAABIDAAAhQwAAIQMAABJDAAASgwAAIYMAABJDAAAhgwAAIUMAABKDAAASwwAAIcMAABKDAAAhwwAAIYMAABLDAAATAwAAIgMAABLDAAAiAwAAIcMAABMDAAATQwAAIkMAABMDAAAiQwAAIgMAABNDAAATgwAAIoMAABNDAAAigwAAIkMAABODAAATwwAAIsMAABODAAAiwwAAIoMAABPDAAAUAwAAIwMAABPDAAAjAwAAIsMAABQDAAAUQwAAI0MAABQDAAAjQwAAIwMAABRDAAAUgwAAI4MAABRDAAAjgwAAI0MAABSDAAAUwwAAI8MAABSDAAAjwwAAI4MAABTDAAAVAwAAJAMAABTDAAAkAwAAI8MAABUDAAAVQwAAJEMAABUDAAAkQwAAJAMAABVDAAAVgwAAJIMAABVDAAAkgwAAJEMAABWDAAAVwwAAJMMAABWDAAAkwwAAJIMAABXDAAAWAwAAJQMAABXDAAAlAwAAJMMAABYDAAAWQwAAJUMAABYDAAAlQwAAJQMAABZDAAAWgwAAJYMAABZDAAAlgwAAJUMAABaDAAAWwwAAJcMAABaDAAAlwwAAJYMAABbDAAAXAwAAJgMAABbDAAAmAwAAJcMAABcDAAAXQwAAJkMAABcDAAAmQwAAJgMAABdDAAAXgwAAJoMAABdDAAAmgwAAJkMAABeDAAAXwwAAJsMAABeDAAAmwwAAJoMAABfDAAAYAwAAJwMAABfDAAAnAwAAJsMAABgDAAAYQwAAJ0MAABgDAAAnQwAAJwMAABhDAAAYgwAAJ4MAABhDAAAngwAAJ0MAABiDAAAYwwAAJ8MAABiDAAAnwwAAJ4MAABjDAAAZAwAAKAMAABjDAAAoAwAAJ8MAABkDAAAZQwAAKEMAABkDAAAoQwAAKAMAABlDAAAZgwAAKIMAABlDAAAogwAAKEMAABmDAAAZwwAAKMMAABmDAAAowwAAKIMAABnDAAAaAwAAKQMAABnDAAApAwAAKMMAABoDAAAaQwAAKUMAABoDAAApQwAAKQMAABpDAAAagwAAKYMAABpDAAApgwAAKUMAABqDAAAawwAAKcMAABqDAAApwwAAKYMAABsDAAAbQwAAKkMAABsDAAAqQwAAKgMAABtDAAAbgwAAKoMAABtDAAAqgwAAKkMAABuDAAAbwwAAKsMAABuDAAAqwwAAKoMAABvDAAAcAwAAKwMAABvDAAArAwAAKsMAABwDAAAcQwAAK0MAABwDAAArQwAAKwMAABxDAAAcgwAAK4MAABxDAAArgwAAK0MAAByDAAAcwwAAK8MAAByDAAArwwAAK4MAABzDAAAdAwAALAMAABzDAAAsAwAAK8MAAB0DAAAdQwAALEMAAB0DAAAsQwAALAMAAB1DAAAdgwAALIMAAB1DAAAsgwAALEMAAB2DAAAdwwAALMMAAB2DAAAswwAALIMAAB3DAAAeAwAALQMAAB3DAAAtAwAALMMAAB4DAAAeQwAALUMAAB4DAAAtQwAALQMAAB5DAAAegwAALYMAAB5DAAAtgwAALUMAAB6DAAAewwAALcMAAB6DAAAtwwAALYMAAB7DAAAfAwAALgMAAB7DAAAuAwAALcMAAB8DAAAfQwAALkMAAB8DAAAuQwAALgMAAB9DAAAfgwAALoMAAB9DAAAugwAALkMAAB+DAAAfwwAALsMAAB+DAAAuwwAALoMAAB/DAAAgAwAALwMAAB/DAAAvAwAALsMAACADAAAgQwAAL0MAACADAAAvQwAALwMAACBDAAAggwAAL4MAACBDAAAvgwAAL0MAACCDAAAgwwAAL8MAACCDAAAvwwAAL4MAACDDAAAhAwAAMAMAACDDAAAwAwAAL8MAACEDAAAhQwAAMEMAACEDAAAwQwAAMAMAACFDAAAhgwAAMIMAACFDAAAwgwAAMEMAACGDAAAhwwAAMMMAACGDAAAwwwAAMIMAACHDAAAiAwAAMQMAACHDAAAxAwAAMMMAACIDAAAiQwAAMUMAACIDAAAxQwAAMQMAACJDAAAigwAAMYMAACJDAAAxgwAAMUMAACKDAAAiwwAAMcMAACKDAAAxwwAAMYMAACLDAAAjAwAAMgMAACLDAAAyAwAAMcMAACMDAAAjQwAAMkMAACMDAAAyQwAAMgMAACNDAAAjgwAAMoMAACNDAAAygwAAMkMAACODAAAjwwAAMsMAACODAAAywwAAMoMAACPDAAAkAwAAMwMAACPDAAAzAwAAMsMAACQDAAAkQwAAM0MAACQDAAAzQwAAMwMAACRDAAAkgwAAM4MAACRDAAAzgwAAM0MAACSDAAAkwwAAM8MAACSDAAAzwwAAM4MAACTDAAAlAwAANAMAACTDAAA0AwAAM8MAACUDAAAlQwAANEMAACUDAAA0QwAANAMAACVDAAAlgwAANIMAACVDAAA0gwAANEMAACWDAAAlwwAANMMAACWDAAA0wwAANIMAACXDAAAmAwAANQMAACXDAAA1AwAANMMAACYDAAAmQwAANUMAACYDAAA1QwAANQMAACZDAAAmgwAANYMAACZDAAA1gwAANUMAACaDAAAmwwAANcMAACaDAAA1wwAANYMAACbDAAAnAwAANgMAACbDAAA2AwAANcMAACcDAAAnQwAANkMAACcDAAA2QwAANgMAACdDAAAngwAANoMAACdDAAA2gwAANkMAACeDAAAnwwAANsMAACeDAAA2wwAANoMAACfDAAAoAwAANwMAACfDAAA3AwAANsMAACgDAAAoQwAAN0MAACgDAAA3QwAANwMAAChDAAAogwAAN4MAAChDAAA3gwAAN0MAACiDAAAowwAAN8MAACiDAAA3wwAAN4MAACjDAAApAwAAOAMAACjDAAA4AwAAN8MAACkDAAApQwAAOEMAACkDAAA4QwAAOAMAAClDAAApgwAAOIMAAClDAAA4gwAAOEMAACmDAAApwwAAOMMAACmDAAA4wwAAOIMAACoDAAAqQwAAOUMAACoDAAA5QwAAOQMAACpDAAAqgwAAOYMAACpDAAA5gwAAOUMAACqDAAAqwwAAOcMAACqDAAA5wwAAOYMAACrDAAArAwAAOgMAACrDAAA6AwAAOcMAACsDAAArQwAAOkMAACsDAAA6QwAAOgMAACtDAAArgwAAOoMAACtDAAA6gwAAOkMAACuDAAArwwAAOsMAACuDAAA6wwAAOoMAACvDAAAsAwAAOwMAACvDAAA7AwAAOsMAACwDAAAsQwAAO0MAACwDAAA7QwAAOwMAACxDAAAsgwAAO4MAACxDAAA7gwAAO0MAACyDAAAswwAAO8MAACyDAAA7wwAAO4MAACzDAAAtAwAAPAMAACzDAAA8AwAAO8MAAC0DAAAtQwAAPEMAAC0DAAA8QwAAPAMAAC1DAAAtgwAAPIMAAC1DAAA8gwAAPEMAAC2DAAAtwwAAPMMAAC2DAAA8wwAAPIMAAC3DAAAuAwAAPQMAAC3DAAA9AwAAPMMAAC4DAAAuQwAAPUMAAC4DAAA9QwAAPQMAAC5DAAAugwAAPYMAAC5DAAA9gwAAPUMAAC6DAAAuwwAAPcMAAC6DAAA9wwAAPYMAAC7DAAAvAwAAPgMAAC7DAAA+AwAAPcMAAC8DAAAvQwAAPkMAAC8DAAA+QwAAPgMAAC9DAAAvgwAAPoMAAC9DAAA+gwAAPkMAAC+DAAAvwwAAPsMAAC+DAAA+wwAAPoMAAC/DAAAwAwAAPwMAAC/DAAA/AwAAPsMAADADAAAwQwAAP0MAADADAAA/QwAAPwMAADBDAAAwgwAAP4MAADBDAAA/gwAAP0MAADCDAAAwwwAAP8MAADCDAAA/wwAAP4MAADDDAAAxAwAAAANAADDDAAAAA0AAP8MAADEDAAAxQwAAAENAADEDAAAAQ0AAAANAADFDAAAxgwAAAINAADFDAAAAg0AAAENAADGDAAAxwwAAAMNAADGDAAAAw0AAAINAADHDAAAyAwAAAQNAADHDAAABA0AAAMNAADIDAAAyQwAAAUNAADIDAAABQ0AAAQNAADJDAAAygwAAAYNAADJDAAABg0AAAUNAADKDAAAywwAAAcNAADKDAAABw0AAAYNAADLDAAAzAwAAAgNAADLDAAACA0AAAcNAADMDAAAzQwAAAkNAADMDAAACQ0AAAgNAADNDAAAzgwAAAoNAADNDAAACg0AAAkNAADODAAAzwwAAAsNAADODAAACw0AAAoNAADPDAAA0AwAAAwNAADPDAAADA0AAAsNAADQDAAA0QwAAA0NAADQDAAADQ0AAAwNAADRDAAA0gwAAA4NAADRDAAADg0AAA0NAADSDAAA0wwAAA8NAADSDAAADw0AAA4NAADTDAAA1AwAABANAADTDAAAEA0AAA8NAADUDAAA1QwAABENAADUDAAAEQ0AABANAADVDAAA1gwAABINAADVDAAAEg0AABENAADWDAAA1wwAABMNAADWDAAAEw0AABINAADXDAAA2AwAABQNAADXDAAAFA0AABMNAADYDAAA2QwAABUNAADYDAAAFQ0AABQNAADZDAAA2gwAABYNAADZDAAAFg0AABUNAADaDAAA2wwAABcNAADaDAAAFw0AABYNAADbDAAA3AwAABgNAADbDAAAGA0AABcNAADcDAAA3QwAABkNAADcDAAAGQ0AABgNAADdDAAA3gwAABoNAADdDAAAGg0AABkNAADeDAAA3wwAABsNAADeDAAAGw0AABoNAADfDAAA4AwAABwNAADfDAAAHA0AABsNAADgDAAA4QwAAB0NAADgDAAAHQ0AABwNAADhDAAA4gwAAB4NAADhDAAAHg0AAB0NAADiDAAA4wwAAB8NAADiDAAAHw0AAB4NAADkDAAA5QwAACENAADkDAAAIQ0AACANAADlDAAA5gwAACINAADlDAAAIg0AACENAADmDAAA5wwAACMNAADmDAAAIw0AACINAADnDAAA6AwAACQNAADnDAAAJA0AACMNAADoDAAA6QwAACUNAADoDAAAJQ0AACQNAADpDAAA6gwAACYNAADpDAAAJg0AACUNAADqDAAA6wwAACcNAADqDAAAJw0AACYNAADrDAAA7AwAACgNAADrDAAAKA0AACcNAADsDAAA7QwAACkNAADsDAAAKQ0AACgNAADtDAAA7gwAACoNAADtDAAAKg0AACkNAADuDAAA7wwAACsNAADuDAAAKw0AACoNAADvDAAA8AwAACwNAADvDAAALA0AACsNAADwDAAA8QwAAC0NAADwDAAALQ0AACwNAADxDAAA8gwAAC4NAADxDAAALg0AAC0NAADyDAAA8wwAAC8NAADyDAAALw0AAC4NAADzDAAA9AwAADANAADzDAAAMA0AAC8NAAD0DAAA9QwAADENAAD0DAAAMQ0AADANAAD1DAAA9gwAADINAAD1DAAAMg0AADENAAD2DAAA9wwAADMNAAD2DAAAMw0AADINAAD3DAAA+AwAADQNAAD3DAAANA0AADMNAAD4DAAA+QwAADUNAAD4DAAANQ0AADQNAAD5DAAA+gwAADYNAAD5DAAANg0AADUNAAD6DAAA+wwAADcNAAD6DAAANw0AADYNAAD7DAAA/AwAADgNAAD7DAAAOA0AADcNAAD8DAAA/QwAADkNAAD8DAAAOQ0AADgNAAD9DAAA/gwAADoNAAD9DAAAOg0AADkNAAD+DAAA/wwAADsNAAD+DAAAOw0AADoNAAD/DAAAAA0AADwNAAD/DAAAPA0AADsNAAAADQAAAQ0AAD0NAAAADQAAPQ0AADwNAAABDQAAAg0AAD4NAAABDQAAPg0AAD0NAAACDQAAAw0AAD8NAAACDQAAPw0AAD4NAAADDQAABA0AAEANAAADDQAAQA0AAD8NAAAEDQAABQ0AAEENAAAEDQAAQQ0AAEANAAAFDQAABg0AAEINAAAFDQAAQg0AAEENAAAGDQAABw0AAEMNAAAGDQAAQw0AAEINAAAHDQAACA0AAEQNAAAHDQAARA0AAEMNAAAIDQAACQ0AAEUNAAAIDQAARQ0AAEQNAAAJDQAACg0AAEYNAAAJDQAARg0AAEUNAAAKDQAACw0AAEcNAAAKDQAARw0AAEYNAAALDQAADA0AAEgNAAALDQAASA0AAEcNAAAMDQAADQ0AAEkNAAAMDQAASQ0AAEgNAAANDQAADg0AAEoNAAANDQAASg0AAEkNAAAODQAADw0AAEsNAAAODQAASw0AAEoNAAAPDQAAEA0AAEwNAAAPDQAATA0AAEsNAAAQDQAAEQ0AAE0NAAAQDQAATQ0AAEwNAAARDQAAEg0AAE4NAAARDQAATg0AAE0NAAASDQAAEw0AAE8NAAASDQAATw0AAE4NAAATDQAAFA0AAFANAAATDQAAUA0AAE8NAAAUDQAAFQ0AAFENAAAUDQAAUQ0AAFANAAAVDQAAFg0AAFINAAAVDQAAUg0AAFENAAAWDQAAFw0AAFMNAAAWDQAAUw0AAFINAAAXDQAAGA0AAFQNAAAXDQAAVA0AAFMNAAAYDQAAGQ0AAFUNAAAYDQAAVQ0AAFQNAAAZDQAAGg0AAFYNAAAZDQAAVg0AAFUNAAAaDQAAGw0AAFcNAAAaDQAAVw0AAFYNAAAbDQAAHA0AAFgNAAAbDQAAWA0AAFcNAAAcDQAAHQ0AAFkNAAAcDQAAWQ0AAFgNAAAdDQAAHg0AAFoNAAAdDQAAWg0AAFkNAAAeDQAAHw0AAFsNAAAeDQAAWw0AAFoNAAAgDQAAIQ0AAF0NAAAgDQAAXQ0AAFwNAAAhDQAAIg0AAF4NAAAhDQAAXg0AAF0NAAAiDQAAIw0AAF8NAAAiDQAAXw0AAF4NAAAjDQAAJA0AAGANAAAjDQAAYA0AAF8NAAAkDQAAJQ0AAGENAAAkDQAAYQ0AAGANAAAlDQAAJg0AAGINAAAlDQAAYg0AAGENAAAmDQAAJw0AAGMNAAAmDQAAYw0AAGINAAAnDQAAKA0AAGQNAAAnDQAAZA0AAGMNAAAoDQAAKQ0AAGUNAAAoDQAAZQ0AAGQNAAApDQAAKg0AAGYNAAApDQAAZg0AAGUNAAAqDQAAKw0AAGcNAAAqDQAAZw0AAGYNAAArDQAALA0AAGgNAAArDQAAaA0AAGcNAAAsDQAALQ0AAGkNAAAsDQAAaQ0AAGgNAAAtDQAALg0AAGoNAAAtDQAAag0AAGkNAAAuDQAALw0AAGsNAAAuDQAAaw0AAGoNAAAvDQAAMA0AAGwNAAAvDQAAbA0AAGsNAAAwDQAAMQ0AAG0NAAAwDQAAbQ0AAGwNAAAxDQAAMg0AAG4NAAAxDQAAbg0AAG0NAAAyDQAAMw0AAG8NAAAyDQAAbw0AAG4NAAAzDQAANA0AAHANAAAzDQAAcA0AAG8NAAA0DQAANQ0AAHENAAA0DQAAcQ0AAHANAAA1DQAANg0AAHINAAA1DQAAcg0AAHENAAA2DQAANw0AAHMNAAA2DQAAcw0AAHINAAA3DQAAOA0AAHQNAAA3DQAAdA0AAHMNAAA4DQAAOQ0AAHUNAAA4DQAAdQ0AAHQNAAA5DQAAOg0AAHYNAAA5DQAAdg0AAHUNAAA6DQAAOw0AAHcNAAA6DQAAdw0AAHYNAAA7DQAAPA0AAHgNAAA7DQAAeA0AAHcNAAA8DQAAPQ0AAHkNAAA8DQAAeQ0AAHgNAAA9DQAAPg0AAHoNAAA9DQAAeg0AAHkNAAA+DQAAPw0AAHsNAAA+DQAAew0AAHoNAAA/DQAAQA0AAHwNAAA/DQAAfA0AAHsNAABADQAAQQ0AAH0NAABADQAAfQ0AAHwNAABBDQAAQg0AAH4NAABBDQAAfg0AAH0NAABCDQAAQw0AAH8NAABCDQAAfw0AAH4NAABDDQAARA0AAIANAABDDQAAgA0AAH8NAABEDQAARQ0AAIENAABEDQAAgQ0AAIANAABFDQAARg0AAIINAABFDQAAgg0AAIENAABGDQAARw0AAIMNAABGDQAAgw0AAIINAABHDQAASA0AAIQNAABHDQAAhA0AAIMNAABIDQAASQ0AAIUNAABIDQAAhQ0AAIQNAABJDQAASg0AAIYNAABJDQAAhg0AAIUNAABKDQAASw0AAIcNAABKDQAAhw0AAIYNAABLDQAATA0AAIgNAABLDQAAiA0AAIcNAABMDQAATQ0AAIkNAABMDQAAiQ0AAIgNAABNDQAATg0AAIoNAABNDQAAig0AAIkNAABODQAATw0AAIsNAABODQAAiw0AAIoNAABPDQAAUA0AAIwNAABPDQAAjA0AAIsNAABQDQAAUQ0AAI0NAABQDQAAjQ0AAIwNAABRDQAAUg0AAI4NAABRDQAAjg0AAI0NAABSDQAAUw0AAI8NAABSDQAAjw0AAI4NAABTDQAAVA0AAJANAABTDQAAkA0AAI8NAABUDQAAVQ0AAJENAABUDQAAkQ0AAJANAABVDQAAVg0AAJINAABVDQAAkg0AAJENAABWDQAAVw0AAJMNAABWDQAAkw0AAJINAABXDQAAWA0AAJQNAABXDQAAlA0AAJMNAABYDQAAWQ0AAJUNAABYDQAAlQ0AAJQNAABZDQAAWg0AAJYNAABZDQAAlg0AAJUNAABaDQAAWw0AAJcNAABaDQAAlw0AAJYNAABcDQAAXQ0AAJkNAABcDQAAmQ0AAJgNAABdDQAAXg0AAJoNAABdDQAAmg0AAJkNAABeDQAAXw0AAJsNAABeDQAAmw0AAJoNAABfDQAAYA0AAJwNAABfDQAAnA0AAJsNAABgDQAAYQ0AAJ0NAABgDQAAnQ0AAJwNAABhDQAAYg0AAJ4NAABhDQAAng0AAJ0NAABiDQAAYw0AAJ8NAABiDQAAnw0AAJ4NAABjDQAAZA0AAKANAABjDQAAoA0AAJ8NAABkDQAAZQ0AAKENAABkDQAAoQ0AAKANAABlDQAAZg0AAKINAABlDQAAog0AAKENAABmDQAAZw0AAKMNAABmDQAAow0AAKINAABnDQAAaA0AAKQNAABnDQAApA0AAKMNAABoDQAAaQ0AAKUNAABoDQAApQ0AAKQNAABpDQAAag0AAKYNAABpDQAApg0AAKUNAABqDQAAaw0AAKcNAABqDQAApw0AAKYNAABrDQAAbA0AAKgNAABrDQAAqA0AAKcNAABsDQAAbQ0AAKkNAABsDQAAqQ0AAKgNAABtDQAAbg0AAKoNAABtDQAAqg0AAKkNAABuDQAAbw0AAKsNAABuDQAAqw0AAKoNAABvDQAAcA0AAKwNAABvDQAArA0AAKsNAABwDQAAcQ0AAK0NAABwDQAArQ0AAKwNAABxDQAAcg0AAK4NAABxDQAArg0AAK0NAAByDQAAcw0AAK8NAAByDQAArw0AAK4NAABzDQAAdA0AALANAABzDQAAsA0AAK8NAAB0DQAAdQ0AALENAAB0DQAAsQ0AALANAAB1DQAAdg0AALINAAB1DQAAsg0AALENAAB2DQAAdw0AALMNAAB2DQAAsw0AALINAAB3DQAAeA0AALQNAAB3DQAAtA0AALMNAAB4DQAAeQ0AALUNAAB4DQAAtQ0AALQNAAB5DQAAeg0AALYNAAB5DQAAtg0AALUNAAB6DQAAew0AALcNAAB6DQAAtw0AALYNAAB7DQAAfA0AALgNAAB7DQAAuA0AALcNAAB8DQAAfQ0AALkNAAB8DQAAuQ0AALgNAAB9DQAAfg0AALoNAAB9DQAAug0AALkNAAB+DQAAfw0AALsNAAB+DQAAuw0AALoNAAB/DQAAgA0AALwNAAB/DQAAvA0AALsNAACADQAAgQ0AAL0NAACADQAAvQ0AALwNAACBDQAAgg0AAL4NAACBDQAAvg0AAL0NAACCDQAAgw0AAL8NAACCDQAAvw0AAL4NAACDDQAAhA0AAMANAACDDQAAwA0AAL8NAACEDQAAhQ0AAMENAACEDQAAwQ0AAMANAACFDQAAhg0AAMINAACFDQAAwg0AAMENAACGDQAAhw0AAMMNAACGDQAAww0AAMINAACHDQAAiA0AAMQNAACHDQAAxA0AAMMNAACIDQAAiQ0AAMUNAACIDQAAxQ0AAMQNAACJDQAAig0AAMYNAACJDQAAxg0AAMUNAACKDQAAiw0AAMcNAACKDQAAxw0AAMYNAACLDQAAjA0AAMgNAACLDQAAyA0AAMcNAACMDQAAjQ0AAMkNAACMDQAAyQ0AAMgNAACNDQAAjg0AAMoNAACNDQAAyg0AAMkNAACODQAAjw0AAMsNAACODQAAyw0AAMoNAACPDQAAkA0AAMwNAACPDQAAzA0AAMsNAACQDQAAkQ0AAM0NAACQDQAAzQ0AAMwNAACRDQAAkg0AAM4NAACRDQAAzg0AAM0NAACSDQAAkw0AAM8NAACSDQAAzw0AAM4NAACTDQAAlA0AANANAACTDQAA0A0AAM8NAACUDQAAlQ0AANENAACUDQAA0Q0AANANAACVDQAAlg0AANINAACVDQAA0g0AANENAACWDQAAlw0AANMNAACWDQAA0w0AANINAACYDQAAmQ0AANUNAACYDQAA1Q0AANQNAACZDQAAmg0AANYNAACZDQAA1g0AANUNAACaDQAAmw0AANcNAACaDQAA1w0AANYNAACbDQAAnA0AANgNAACbDQAA2A0AANcNAACcDQAAnQ0AANkNAACcDQAA2Q0AANgNAACdDQAAng0AANoNAACdDQAA2g0AANkNAACeDQAAnw0AANsNAACeDQAA2w0AANoNAACfDQAAoA0AANwNAACfDQAA3A0AANsNAACgDQAAoQ0AAN0NAACgDQAA3Q0AANwNAAChDQAAog0AAN4NAAChDQAA3g0AAN0NAACiDQAAow0AAN8NAACiDQAA3w0AAN4NAACjDQAApA0AAOANAACjDQAA4A0AAN8NAACkDQAApQ0AAOENAACkDQAA4Q0AAOANAAClDQAApg0AAOINAAClDQAA4g0AAOENAACmDQAApw0AAOMNAACmDQAA4w0AAOINAACnDQAAqA0AAOQNAACnDQAA5A0AAOMNAACoDQAAqQ0AAOUNAACoDQAA5Q0AAOQNAACpDQAAqg0AAOYNAACpDQAA5g0AAOUNAACqDQAAqw0AAOcNAACqDQAA5w0AAOYNAACrDQAArA0AAOgNAACrDQAA6A0AAOcNAACsDQAArQ0AAOkNAACsDQAA6Q0AAOgNAACtDQAArg0AAOoNAACtDQAA6g0AAOkNAACuDQAArw0AAOsNAACuDQAA6w0AAOoNAACvDQAAsA0AAOwNAACvDQAA7A0AAOsNAACwDQAAsQ0AAO0NAACwDQAA7Q0AAOwNAACxDQAAsg0AAO4NAACxDQAA7g0AAO0NAACyDQAAsw0AAO8NAACyDQAA7w0AAO4NAACzDQAAtA0AAPANAACzDQAA8A0AAO8NAAC0DQAAtQ0AAPENAAC0DQAA8Q0AAPANAAC1DQAAtg0AAPINAAC1DQAA8g0AAPENAAC2DQAAtw0AAPMNAAC2DQAA8w0AAPINAAC3DQAAuA0AAPQNAAC3DQAA9A0AAPMNAAC4DQAAuQ0AAPUNAAC4DQAA9Q0AAPQNAAC5DQAAug0AAPYNAAC5DQAA9g0AAPUNAAC6DQAAuw0AAPcNAAC6DQAA9w0AAPYNAAC7DQAAvA0AAPgNAAC7DQAA+A0AAPcNAAC8DQAAvQ0AAPkNAAC8DQAA+Q0AAPgNAAC9DQAAvg0AAPoNAAC9DQAA+g0AAPkNAAC+DQAAvw0AAPsNAAC+DQAA+w0AAPoNAAC/DQAAwA0AAPwNAAC/DQAA/A0AAPsNAADADQAAwQ0AAP0NAADADQAA/Q0AAPwNAADBDQAAwg0AAP4NAADBDQAA/g0AAP0NAADCDQAAww0AAP8NAADCDQAA/w0AAP4NAADDDQAAxA0AAAAOAADDDQAAAA4AAP8NAADEDQAAxQ0AAAEOAADEDQAAAQ4AAAAOAADFDQAAxg0AAAIOAADFDQAAAg4AAAEOAADGDQAAxw0AAAMOAADGDQAAAw4AAAIOAADHDQAAyA0AAAQOAADHDQAABA4AAAMOAADIDQAAyQ0AAAUOAADIDQAABQ4AAAQOAADJDQAAyg0AAAYOAADJDQAABg4AAAUOAADKDQAAyw0AAAcOAADKDQAABw4AAAYOAADLDQAAzA0AAAgO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AAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABARAAADkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXnHJEQD3uQ0D2rVJAp3Zpc2libGXHE2iyNDAzMTUyOTExNjUwNTUzNTI2q21hcmtlcnNwYWNlxxRoszE2ODgzNTQ4ODkxMTk1NDA4NDWxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTcxMDMzMDg2MTgzMzkzNTMzNzmob3ZlcmRyYXfHFWi0MTUwNzAxNzQyNzc0NzYyNjkwMjGvdW5pZm9ybV91cGRhdGVyxxRoszI2NTkwMzAwNjc2Nzg5Mjg5NjKlZmFjZXPHEmixMzcyODMxMTU4ODI4NDU5MDakdXVpZLMxMzE0NTY5ODg5MjAyODUxMTE5rXZlcnRleF9zb3VyY2XaGk0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoSiCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNl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b24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHE2iyOTk3NDIwNTE3MDM3Njg2ODEypXNwYWNlxxRoszYwNTgyOTQ4NzY0MzAzNzEwNjisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTQyNjgzNjU0Mzc1ODI1MzA0MTCpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAAQEQAAA5EpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBecckRAPe5DQPatUkCpb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHE2iyNDAzMTUyOTExNjUwNTUzNTI2sWF0dHJpYnV0ZV91cGRhdGVyxxRoszcyNzY3NDUwNzI1NDc4Mjc5Nzaob3ZlcmRyYXfHFGizNzU5NjE3Mzg5Njc2NjY0MDgxMq91bmlmb3JtX3VwZGF0ZXLHFGizOTAwOTI1Mzg0MzExODA1MDc2MKVmYWNlc8cVaLQxNTA3OTkxNjgwMDAwNzExNTc0NqR1dWlktDE0MjY4MzY1NDM3NTgyNTMwNDEwrXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzMgc2VnbWVudF9zdGFydDsKdmVjMyBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMzIHNlZ21lbnRfZW5kOwp2ZWMzIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0yAHwFwAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8A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PGg4KT+p+/K9ZLN/PfflMT+p+/K9qYHJPYeTOj+p+/K9mkr3PRZBQz+p+/K97nMDPqXuSz+p+/K9aDf5PTScVD+p+/K9SfTRPcNJXT+p+/K9eyeXPVL3ZT+p+/K9hNAgPeKkbj+p+/K9shVAO3FSdz+p+/K91cv/vAAAgD+p+/K99qZ0vQAAgL8wj629TSpqvXFSd78wj629AQbkvOKkbr8wj629gPLgO1L3Zb8wj629M4wxPcNJXb8wj629ut2ePTScVL8wj629LffXPaXuS78wj6297n/8PRZBQ78wj629VEgDPoeTOr8wj629Dq7yPfflMb8wj629mlbAPWg4Kb8wj629gJhkPdmKIL8wj629NvPoO0rdF78wj629evNDvbsvD78wj629uCbUvSuCBr8wj629B7sdvjip+74wj6298JBFvhpO6r4wj6297aVbvvzy2L4wj6291hFbvt2Xx74wj629LnZAvr88tr4wj629eGMKvqHhpL4wj629/FpmvYKGk74wj629pd47PWQrgr4wj629DjcqPougYb4wj629nKiYPk7qPr4wj629lhPePhE0HL4wj629ansQP6n78r0wj629EHcuPzCPrb0wj629AfhGP2xFUL0wj629jlBYP/PYirwwj629C01hP/PYijwwj629C01hP2xFUD0wj629jlBYPzCPrT0wj629AfhGP6n78j0wj629EHcuPxE0HD4wj629ansQP07qPj4wj629lhPePougYT4wj629nKiYPmQrgj4wj629DjcqPoKGkz4wj629pd47PaHhpD4wj629/Fpmvb88tj4wj629eGMKvt2Xxz4wj629LnZAvvzy2D4wj6291hFbvhpO6j4wj6297aVbvjip+z4wj6298JBFviuCBj8wj629B7sdvrsvDz8wj629uCbUvUrdFz8wj629evNDvdmKID8wj629NvPoO2g4KT8wj629gJhkPfflMT8wj629mlbAPYeTOj8wj629Dq7yPRZBQz8wj629VEgDPqXuSz8wj6297n/8PTScVD8wj629LffXPcNJXT8wj629ut2ePVL3ZT8wj629M4wxPeKkbj8wj629gPLgO3FSdz8wj629AQbkvAAAgD8wj629TSpqvQAAgL9sRVC9jPVivXFSd79sRVC93SzRvOKkbr9sRVC9V8kbPFL3Zb9sRVC9uK08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Omg4KT9sRVA9XdNRPfflMT9sRVA9Etu5PYeTOj9sRVA9iUHvPRZBQz9sRVA98gQDPqXuSz9sRVA9GnX+PTScVD9sRVA9ZNHbPcNJXT9sRVA9ce2jPVL3ZT9sRVA9uK08PeKkbj9sRVA9V8kbPHFSdz9sRVA93SzRvAAAgD9sRVA9jPVivQAAgL8wj609TSpqvXFSd78wj609AQbkvOKkbr8wj609gPLgO1L3Zb8wj609M4wxPcNJXb8wj609ut2ePTScVL8wj609LffXPaXuS78wj6097n/8PRZBQ78wj609VEgDPoeTOr8wj609Dq7yPfflMb8wj609mlbAPWg4Kb8wj609gJhkPdmKIL8wj609NvPoO0rdF78wj609evNDvbsvD78wj609uCbUvSuCBr8wj609B7sdvjip+74wj6098JBFvhpO6r4wj6097aVbvvzy2L4wj6091hFbvt2Xx74wj609LnZAvr88tr4wj609eGMKvqHhpL4wj609/FpmvYKGk74wj609pd47PWQrgr4wj609DjcqPougYb4wj609nKiYPk7qPr4wj609lhPePhE0HL4wj609ansQP6n78r0wj609EHcuPzCPrb0wj609AfhGP2xFUL0wj609jlBYP/PYirwwj609C01hP/PYijwwj609C01hP2xFUD0wj609jlBYPzCPrT0wj609AfhGP6n78j0wj609EHcuPxE0HD4wj609ansQP07qPj4wj609lhPePougYT4wj609nKiYPmQrgj4wj609DjcqPoKGkz4wj609pd47PaHhpD4wj609/Fpmvb88tj4wj609eGMKvt2Xxz4wj609LnZAvvzy2D4wj6091hFbvhpO6j4wj6097aVbvjip+z4wj6098JBFviuCBj8wj609B7sdvrsvDz8wj609uCbUvUrdFz8wj609evNDvdmKID8wj609NvPoO2g4KT8wj609gJhkPfflMT8wj609mlbAPYeTOj8wj609Dq7yPRZBQz8wj609VEgDPqXuSz8wj6097n/8PTScVD8wj609LffXPcNJXT8wj609ut2ePVL3ZT8wj609M4wxPeKkbj8wj609gPLgO3FSdz8wj609AQbkvAAAgD8wj609TSpqvQAAgL+p+/I99qZ0vXFSd7+p+/I91cv/vOKkbr+p+/I9shVAO1L3Zb+p+/I9hNAg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PWg4KT/dl8c+VEgDPvflMT/dl8c+dV3/PYeTOj/dl8c+tiDjPRZBQz/dl8c+BxG1PaXuSz/dl8c+I8BzPTScVD/dl8c+SCndPMNJXT/dl8c+SyfHu1L3ZT/dl8c+1VgWveKkbj/dl8c+X79+vXFSdz/dl8c+566kvQAAgD/dl8c+wUW4vQAAgL/88tg+cNu6vXFSd7/88tg+JSGvveKkbr/88tg+PY+RvVL3Zb/88tg+KWpIvcNJXb/88tg+iraqvDScVL/88tg+rYkxPKXuS7/88tg+M4wxPRZBQ7/88tg+eyeXPYeTOr/88tg+wq3LPfflMb/88tg+yXbxPWg4Kb/88tg+42oCPtmKIL/88tg+ZtIBPkrdF7/88tg+LHDtPbsvD7/88tg+6nfDPSuCBr/88tg+xoeIPTip+7788tg+9lQBPRpO6r788tg+Hfbzu/zy2L788tg+evNDvd2Xx7788tg+2Guyvb88tr788tg+ixb8vaHhpL788tg+B7sdvoKGk7788tg+1iI3vmQrgr788tg+ks9JvougYb788tg+w/lVvk7qPr788tg+nW9cvhE0HL788tg+mW9evqn78r388tg+HHhdvjCPrb388tg+1hFbvmxFUL388tg+B5tYvvPYirz88tg+qBlXvvPYijz88tg+qBlXvmxFUD388tg+B5tYvjCPrT388tg+1hFbvqn78j388tg+HHhdvhE0HD788tg+mW9evk7qPj788tg+nW9cvougYT788tg+w/lVvmQrgj788tg+ks9JvoKGkz788tg+1iI3vqHhpD788tg+B7sdvr88tj788tg+ixb8vd2Xxz788tg+2Guyvfzy2D788tg+evNDvRpO6j788tg+Hfbzuzip+z788tg+9lQBPSuCBj/88tg+xoeIPbsvDz/88tg+6nfDPUrdFz/88tg+LHDtPdmKID/88tg+ZtIBPmg4KT/88tg+42oCPvflMT/88tg+yXbxPYeTOj/88tg+wq3LPRZBQz/88tg+eyeXPaXuSz/88tg+M4wxPTScVD/88tg+rYkxPMNJXT/88tg+iraqvFL3ZT/88tg+KWpIveKkbj/88tg+PY+RvXFSdz/88tg+JSGvvQAAgD/88tg+cNu6vQAAgL8aTuo+2Dm6vXFSd78aTuo+XrW2veKkbr8aTuo+n4yhvVL3Zb8aTuo+pA94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aW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQppbiB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBzYW1wbGVyMkQgY29sb3JtYXA7CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gc2FtcGxlcjJEIHVuaWZvcm1fY29sb3I7CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBiYWNrbGlnaHQ7CmZsb2F0IGdldF9iYWNrbGlnaHQoKXtyZXR1cm4gYmFja2xpZ2h0O30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KCgoKb3V0IHZlYzIgZnJhZ191djsKb3V0IHZlYzMgb19ub3JtYWw7Cm91dCB2ZWMzIG9fY2FtZGlyOwpvdXQgdmVjMyBvX2xpZ2h0ZGlyOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQoZmxvYXQgdil7cmV0dXJuIHZlYzQodiwgMC4wLCAwLjAsIDAuMCk7fQp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgdmVydGV4X2NvbG9yKHZlYzMgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcih2ZWM0IGNvbG9yLCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihib29sIHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICAvLyBjb2xvciBzYW1wbGluZyBoYXBwZW5zIGluIGZyYWdtZW50IHNoYWRlcgogICAgcmV0dXJuIHZlYzQoMC4wLCAwLjAsIDAuMCwgMC4wKTsKfQp2ZWM0IHZlcnRleF9jb2xvcihmbG9hdCB2YWx1ZSwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiB2ZWM0KHZhbHVlLCAwLjAsIDAuMCwgMC4wKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0KfQoKdm9pZCByZW5kZXIodmVjNCBwb3NpdGlvbl93b3JsZCwgdmVjMyBub3JtYWwsIG1hdDQgdmlldywgbWF0NCBwcm9qZWN0aW9uLCB2ZWMzIGxpZ2h0cG9zaXRpb24pCnsKICAgIC8vIG5vcm1hbCBpbiB3b3JsZCBzcGFjZQogICAgb19ub3JtYWwgPSBnZXRfbm9ybWFsbWF0cml4KCkgKiBub3JtYWw7CiAgICAvLyBwb3NpdGlvbiBpbiB2aWV3IHNwYWNlIChhcyBzZWVuIGZyb20gY2FtZXJhKQogICAgdmVjNCB2aWV3X3BvcyA9IHZpZXcgKiBwb3NpdGlvbl93b3JsZDsKICAgIC8vIHBvc2l0aW9uIGluIGNsaXAgc3BhY2UgKHcvIGRlcHRoKQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uICogdmlld19wb3M7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKICAgIC8vIGRpcmVjdGlvbiB0byBsaWdodAogICAgb19saWdodGRpciA9IG5vcm1hbGl6ZSh2aWV3KnZlYzQobGlnaHRwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXo7CiAgICAvLyBkaXJlY3Rpb24gdG8gY2FtZXJhCiAgICAvLyBUaGlzIGlzIGVxdWl2YWxlbnQgdG8KICAgIC8vIG5vcm1hbGl6ZSh2aWV3KnZlYzQoZXllcG9zaXRpb24sIDEuMCkgLSB2aWV3X3BvcykueHl6CiAgICAvLyAoYnkgZGVmaW5pdGlvbiBgdmlldyAqIGV5ZXBvc2l0aW9uID0gMGApCiAgICBvX2NhbWRpciA9IG5vcm1hbGl6ZSgtdmlld19wb3MpLnh5ejsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICAvLyBnZXRfKiBnZXRzIHRoZSBnbG9iYWwgaW5wdXRzICh1bmlmb3JtLCBzYW1wbGVyLCBwb3NpdGlvbiBhcnJheSkKICAgIC8vIHRob3NlIGZ1bmN0aW9ucyB3aWxsIGdldCBpbnNlcnRlZCBieSB0aGUgc2hhZGVyIGNyZWF0aW9uIHBpcGVsaW5lCiAgICB2ZWMzIHZlcnRleF9wb3NpdGlvbiA9IHRvdmVjMyhnZXRfcG9zaXRpb24oKSk7CiAgICBpZiAoaXNuYW4odmVydGV4X3Bvc2l0aW9uLnopKSB7CiAgICAgICAgdmVydGV4X3Bvc2l0aW9uLnogPSAwLjA7CiAgICB9CiAgICB2ZWM0IHBvc2l0aW9uX3dvcmxkID0gbW9kZWwgKiB2ZWM0KHZlcnRleF9wb3NpdGlvbiwgMSk7CgogICAgcmVuZGVyKHBvc2l0aW9uX3dvcmxkLCBnZXRfbm9ybWFscygpLCB2aWV3LCBwcm9qZWN0aW9uLCBnZXRfbGlnaHRwb3NpdGlvbigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXYgPSB2ZWMyKDEuMCAtIGZyYWdfdXYueSwgZnJhZ191di54KTsKICAgIGZyYWdfY29sb3IgPSB2ZXJ0ZXhfY29sb3IoZ2V0X2NvbG9yKCksIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9WZXJ0ZXhJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaFKMjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWMyIGNvbG9ycmFuZ2U7CnZlYzIgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSBib29sIHBhdHRlcm47CmJvb2wgZ2V0X3BhdHRlcm4oKXtyZXR1cm4gcGF0dGVybjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQoKaW4gdmVjMiBmcmFnX3V2OwppbiB2ZWM0IGZyYWdfY29sb3I7CmZsYXQgaW4gaW50IHNhbXBsZV9mcmFnX2NvbG9yOwoKaW4gdmVjMyBvX25vcm1hbDsKaW4gdmVjMyBvX2NhbWRpcjsKaW4gdmVjMyBvX2xpZ2h0ZGlyOwoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCk7CgogICAgLy8gc3BlY3VsYXIgY29lZmZpY2llbnQKICAgIHZlYzMgSCA9IG5vcm1hbGl6ZShMICsgVik7CgogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApLCBnZXRfc2hpbmluZXNzKCkpOwogICAgaWYgKGRpZmZfY29lZmYgPD0gMC4wKQogICAgICAgIHNwZWNfY29lZmYgPSAwLjA7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgZ2V0X2RpZmZ1c2UoKSAqIGRpZmZfY29lZmYgKiBjb2xvciArCiAgICAgICAgZ2V0X3NwZWN1bGFyKCkgKiBzcGVjX2NvZWZmCiAgICApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWMzIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gZnJhZ19jb2xvcjsgIC8vIGNvbG9yIG5vdCBpbiB1bmlmb3JtCn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfcGF0dGVybigpKSB7CiAgICAgICAgdmVjMiBzaXplID0gdmVjMih0ZXh0dXJlU2l6ZShjb2xvciwgMCkpOwogICAgICAgIHZlYzIgcG9zID0gZ2xfRnJhZ0Nvb3JkLnh5OwogICAgICAgIHJldHVybiB0ZXhlbEZldGNoKGNvbG9yLCBpdmVjMihtb2QocG9zLngsIHNpemUueCksIG1vZChwb3MueSwgc2l6ZS55KSksIDApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwogICAgfQp9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAoZnJhZ19jb2xvci54LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmcmFnX2NvbG9yOwogICAgfQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgdmFsdWVzLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBmbG9hdCB2YWx1ZSA9IHRleHR1cmUodmFsdWVzLCB1dikueDsKICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIHZlYzQgcmVhbF9jb2xvciA9IGdldF9jb2xvcih1bmlmb3JtX2NvbG9yLCBmcmFnX3V2LCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CiAgICB2ZWMzIHNoYWRlZF9jb2xvciA9IHJlYWxfY29sb3IucmdiOwoKICAgIGlmKGdldF9zaGFkaW5nKCkpewogICAgICAgIHZlYzMgTCA9IG5vcm1hbGl6ZShvX2xpZ2h0ZGlyKTsKICAgICAgICB2ZWMzIE4gPSBub3JtYWxpemUob19ub3JtYWwpOwogICAgICAgIHZlYzMgbGlnaHQxID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHZlYzMgbGlnaHQyID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgLUwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICBzaGFkZWRfY29sb3IgPSBnZXRfYW1iaWVudCgpICogcmVhbF9jb2xvci5yZ2IgKyBsaWdodDEgKyBnZXRfYmFja2xpZ2h0KCkgKiBsaWdodDI7CiAgICB9CgogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAocmVhbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChyZWFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSB2ZWM0KHNoYWRlZF9jb2xvciwgcmVhbF9jb2xvci5hKTsKfQqvYmFja2dyb3VuZGNvbG9yxxVotDEwMzk2Nzc5ODk3NjIzMTYxNjk1qXBpeGVsYXJlYccVaLQxMTIxMzUyNjgyNjIyNDQxODQ4OaZjYW1lcmHHFWi0MTMwMjgzNjA2NjQ1MjY4MDI1OTSkdXVpZLQxNDI3NTIxNDYxMzcyMjMzMDk2MKtjYW0zZF9zdGF0ZYambG9va2F0xwwXGC8oPijpHz5Y8sU+q2V5ZXBvc2l0aW9uxwwXnHJEQD3uQ0D2rVJAqHVwdmVjdG9yxwwXAAAAAAAAAAAAAIA/o2ZvdspCNAAApG5lYXLKPtazXaNmYXLKQUlIJ6pjbGVhcnNjZW5lwqhjaGlsZHJlbpDbABGtPygoKSA9PiB7CiAgICAgICAgICAgIGlmICghd2luZG93LkpTU0VSVkVfSU1QT1JUUykgewogICAgICAgICAgICAgICAgd2luZG93LkpTU0VSVkVfSU1QT1JUUyA9IHt9OwogICAgICAgICAgICB9CiAgICAgICAgICAgIEpTU0VSVkVfSU1QT1JUU1snY2M0YzZhYTZhMWYwNmExYjUwMTNiY2EwMTcwMmYzNmExODRjMDQzOS13Z2xtYWtpZS5qcyddID0gYGRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdDtiYXNlNjQsTHk4Z1pHVnVieTFtYlhRdGFXZHViM0psTFdacGJHVUtMeThnWkdWdWJ5MXNhVzUwTFdsbmJtOXlaUzFtYVd4bENpOHZJRlJvYVhNZ1kyOWtaU0IzWVhNZ1luVnVaR3hsWkNCMWMybHVaeUJnWkdWdWJ5QmlkVzVrYkdWZ0lHRnVaQ0JwZENkeklHNXZkQ0J5WldOdmJXMWxibVJsWkNCMGJ5QmxaR2wwSUdsMElHMWhiblZoYkd4NUNncDJZWElnWTJFZ1BTQWlNVE0ySWl3Z1Iza2dQU0I3Q2lBZ0lDQk1SVVpVT2lBd0xBb2dJQ0FnVFVsRVJFeEZPaUF4TEFvZ0lDQWdVa2xIU0ZRNklESXNDaUFnSUNCU1QxUkJWRVU2SURBc0NpQWdJQ0JFVDB4TVdUb2dNU3dLSUNBZ0lGQkJUam9nTWdwOUxDQldlU0E5SUhzS0lDQWdJRkpQVkVGVVJUb2dNQ3dLSUNBZ0lGQkJUam9nTVN3S0lDQWdJRVJQVEV4WlgxQkJUam9nTWl3S0lDQWdJRVJQVEV4WlgxSlBWRUZVUlRvZ013cDlMQ0IxZFNBOUlEQXNJSFJzSUQwZ01Td2daSFVnUFNBeUxDQlhlU0E5SURNc0lIRjVJRDBnTUN3Z1NHTWdQU0F4TENCbWRTQTlJRElzSUdseUlEMGdNeXdnUVdrZ1BTQXdMQ0JwZENBOUlERXNJRU5wSUQwZ01pd2dhMk1nUFNBeExDQlllU0E5SURJc0lIWnVJRDBnTUN3Z2MzSWdQU0F4TENCdWJDQTlJRElzSUdsc0lEMGdNeXdnY213Z1BTQTBMQ0J3ZFNBOUlEVXNJRjlwSUQwZ01UQXdMQ0J0ZFNBOUlERXdNU3dnWjNVZ1BTQXhNRElzSUhOc0lEMGdNVEF6TENCdmJDQTlJREV3TkN3Z2VIVWdQU0F5TURBc0lIbDFJRDBnTWpBeExDQjJkU0E5SURJd01pd2dYM1VnUFNBeU1ETXNJRWRqSUQwZ01qQTBMQ0JXWXlBOUlESXdOU3dnVFhVZ1BTQXlNRFlzSUdKMUlEMGdNakEzTENCM2RTQTlJREl3T0N3Z1UzVWdQU0F5TURrc0lGUjFJRDBnTWpFd0xDQkZkU0E5SURBc0lFRjFJRDBnTVN3Z1EzVWdQU0F5TENCbFlTQTlJRE1zSUV4MUlEMGdOQ3dnVW5VZ1BTQTFMQ0JRZFNBOUlEWXNJRWwxSUQwZ055d2dWbk1nUFNBd0xDQkVkU0E5SURFc0lFWjFJRDBnTWl3Z1gyNGdQU0F3TENCT2RTQTlJREVzSUVKMUlEMGdNaXdnZW5VZ1BTQXpMQ0JWZFNBOUlEUXNJRTkxSUQwZ05Td2dhR0VnUFNBek1EQXNJRUpwSUQwZ016QXhMQ0I2YVNBOUlETXdNaXdnUkhNZ1BTQXpNRE1zSUVaeklEMGdNekEwTENCUWNpQTlJRE13Tml3Z1YzTWdQU0F6TURjc0lFNXpJRDBnTVdVekxDQjJkQ0E5SURFd01ERXNJRUp6SUQwZ01UQXdNaXdnY25RZ1BTQXhNREF6TENCMFlTQTlJREV3TURRc0lFcDVJRDBnTVRBd05Dd2dibUVnUFNBeE1EQTFMQ0JaZVNBOUlERXdNRFVzSUhSMElEMGdNVEF3Tml3Z1YyTWdQU0F4TURBM0xDQmFlU0E5SURFd01EY3NJRlZwSUQwZ01UQXdPQ3dnSkhrZ1BTQXhNREE0TENCeWJpQTlJREV3TURrc0lFaDFJRDBnTVRBeE1Dd2dhM1VnUFNBeE1ERXhMQ0JqY2lBOUlERXdNVElzSUVkMUlEMGdNVEF4TXl3Z1VITWdQU0F4TURFMExDQnViaUE5SURFd01UVXNJR3R1SUQwZ01UQXhOaXdnVm5VZ1BTQXhNREUzTENCWGRTQTlJREV3TVRnc0lIRjFJRDBnTVRBeE9Td2dWR2tnUFNBeE1ESXdMQ0JZZFNBOUlERXdNakVzSUVkdUlEMGdNVEF5TWl3Z1kzUWdQU0F4TURJekxDQktkU0E5SURFd01qUXNJRmwxSUQwZ01UQXlOU3dnVm00Z1BTQXhNREkyTENCTWFTQTlJREV3TWpjc0lGcDFJRDBnTVRBeU9Dd2dKSFVnUFNBeE1ESTVMQ0JxZFNBOUlERXdNekFzSUZGMUlEMGdNVEF6TVN3Z1MzVWdQU0F4TURNeUxDQmxaQ0E5SURFd016TXNJR0ZzSUQwZ016TTNOellzSUd4c0lEMGdNek0zTnpjc0lHTnNJRDBnTXpNM056Z3NJR2hzSUQwZ016TTNOemtzSUhWc0lEMGdNelU0TkRBc0lHUnNJRDBnTXpVNE5ERXNJR1pzSUQwZ016VTRORElzSUhCc0lEMGdNelU0TkRNc0lIUmtJRDBnTXpZeE9UWXNJRzFzSUQwZ016YzBPVElzSUdkc0lEMGdNemMwT1RZc0lHNWtJRDBnTXpjNE1EZ3NJR2xrSUQwZ016YzRNRGtzSUhKa0lEMGdNemM0TVRBc0lITmtJRDBnTXpjNE1URXNJRzlrSUQwZ016YzRNVElzSUdGa0lEMGdNemM0TVRNc0lHeGtJRDBnTXpjNE1UUXNJR05rSUQwZ016YzRNVFVzSUdoa0lEMGdNemM0TVRZc0lIVmtJRDBnTXpjNE1UY3NJR1JrSUQwZ016YzRNVGdzSUdaa0lEMGdNemM0TVRrc0lIQmtJRDBnTXpjNE1qQXNJRzFrSUQwZ016YzRNakVzSUdka0lEMGdNelkwT1RJc0lIaGtJRDBnTXpjNE5EQXNJSGxrSUQwZ016YzROREVzSUhaa0lEMGdNemM0TkRJc0lGOWtJRDBnTXpjNE5ETXNJRTFrSUQwZ016YzRORFFzSUdKa0lEMGdNemM0TkRVc0lIZGtJRDBnTXpjNE5EWXNJRk5rSUQwZ016YzRORGNzSUZSa0lEMGdNemM0TkRnc0lFVmtJRDBnTXpjNE5Ea3NJRUZrSUQwZ016YzROVEFzSUVOa0lEMGdNemM0TlRFc0lFeGtJRDBnTXpjNE5USXNJRkprSUQwZ016YzROVE1zSUZCa0lEMGdNakl3TUN3Z1NXUWdQU0F5TWpBeExDQkVaQ0E5SURJeU1ESXNJSHB6SUQwZ01qTXdNQ3dnVlhNZ1BTQXlNekF4TENCNWJ5QTlJREl6TURJc0lFMXBJRDBnTWpRd01Dd2dZbWtnUFNBeU5EQXhMQ0JQY3lBOUlESTBNRElzSUhWaElEMGdNalV3TUN3Z2NXTWdQU0F5TlRBeExDQkdaQ0E5SURBc0lHcDVJRDBnTVN3Z1VYa2dQU0F5TENCT2RDQTlJRE5sTXl3Z1Qya2dQU0F6TURBeExDQk9aQ0E5SURNeU1EQXNJRUprSUQwZ016SXdNU3dnU0drZ1BTQXdMQ0I2WkNBOUlERXNJRXQ1SUQwZ01Dd2dkbThnUFNBM05qZ3dMQ0JsTUNBOUlEYzJPREVzSUhRd0lEMGdOelk0TWl3Z2JqQWdQU0EzTmpnekxDQnBNQ0E5SURNME1EVTFMQ0J5TUNBOUlETTBNRFUyTENCek1DQTlJRFV6T0RZc0lHOHdJRDBnTlRFeUxDQmhNQ0E5SURVeE15d2diREFnUFNBMU1UUXNJR013SUQwZ05URTFMQ0JvTUNBOUlEVXhOaXdnZFRBZ1BTQTFNVGNzSUdRd0lEMGdOVEU0TENCVlpDQTlJRFV4T1N3Z2FISWdQU0F6TlRBME5Dd2dkWElnUFNBek5UQTBPQ3dnWmpBZ1BTQXpOVEEwTUN3Z2NEQWdQU0F6TlRBME5Td2diVEFnUFNBek5UQTBPU3dnWnpBZ1BTQXpOVEEwTVN3Z2VEQWdQU0F6TlRBME5pd2dlVEFnUFNBek5UQTFNQ3dnZGpBZ1BTQXpOVEEwTWl3Z1h6QWdQU0FpTVRBd0lpd2dlR3dnUFNBaU16QXdJR1Z6SWl3Z1JXNGdQU0JqYkdGemN5QjdDaUFnSUNCaFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXNhWE4wWlc1bGNuTWdQVDA5SUhadmFXUWdNQ0FtSmlBb2RHaHBjeTVmYkdsemRHVnVaWEp6SUQwZ2UzMHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1ZmJHbHpkR1Z1WlhKek93b2dJQ0FnSUNBZ0lHNWJaVjBnUFQwOUlIWnZhV1FnTUNBbUppQW9ibHRsWFNBOUlGdGRLU3dnYmx0bFhTNXBibVJsZUU5bUtIUXBJRDA5UFNBdE1TQW1KaUJ1VzJWZExuQjFjMmdvZENrN0NpQWdJQ0I5Q2lBZ0lDQm9ZWE5GZG1WdWRFeHBjM1JsYm1WeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgyeHBjM1JsYm1WeWN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JsdGxYU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHNWJaVjB1YVc1a1pYaFBaaWgwS1NBaFBUMGdMVEU3Q2lBZ0lDQjlDaUFnSUNCeVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJ4cGMzUmxibVZ5YzF0bFhUc0tJQ0FnSUNBZ0lDQnBaaUFvYVNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVM1cGJtUmxlRTltS0hRcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5SUNFOVBTQXRNU0FtSmlCcExuTndiR2xqWlNoeUxDQXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCa2FYTndZWFJqYUVWMlpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMDlQU0IyYjJsa0lEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJ4cGMzUmxibVZ5YzF0bExuUjVjR1ZkT3dvZ0lDQWdJQ0FnSUdsbUlDaHVJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaUzUwWVhKblpYUWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzR1YzJ4cFkyVW9NQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWxwVzNKZExtTmhiR3dvZEdocGN5d2daU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVkR0Z5WjJWMElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wc0lIQjBJRDBnVzEwN0NtWnZjaWhzWlhRZ2N5QTlJREE3SUhNZ1BDQXlOVFk3SUhNckt5bHdkRnR6WFNBOUlDaHpJRHdnTVRZZ1B5QWlNQ0lnT2lBaUlpa2dLeUJ6TG5SdlUzUnlhVzVuS0RFMktUc0tkbUZ5SUZaeUlEMGdNVEl6TkRVMk55d2dWMjRnUFNCTllYUm9MbEJKSUM4Z01UZ3dMQ0JrY2lBOUlERTRNQ0F2SUUxaGRHZ3VVRWs3Q21aMWJtTjBhVzl1SUVWMEtDa2dld29nSUNBZ2JHVjBJSE1nUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJR1VnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJSFFnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQXNJRzRnUFNCTllYUm9MbkpoYm1SdmJTZ3BJQ29nTkRJNU5EazJOekk1TlNCOElEQTdDaUFnSUNCeVpYUjFjbTRnS0hCMFczTWdKaUF5TlRWZElDc2djSFJiY3lBK1BpQTRJQ1lnTWpVMVhTQXJJSEIwVzNNZ1BqNGdNVFlnSmlBeU5UVmRJQ3NnY0hSYmN5QStQaUF5TkNBbUlESTFOVjBnS3lBaUxTSWdLeUJ3ZEZ0bElDWWdNalUxWFNBcklIQjBXMlVnUGo0Z09DQW1JREkxTlYwZ0t5QWlMU0lnS3lCd2RGdGxJRDQrSURFMklDWWdNVFVnZkNBMk5GMGdLeUJ3ZEZ0bElENCtJREkwSUNZZ01qVTFYU0FySUNJdElpQXJJSEIwVzNRZ0ppQTJNeUI4SURFeU9GMGdLeUJ3ZEZ0MElENCtJRGdnSmlBeU5UVmRJQ3NnSWkwaUlDc2djSFJiZENBK1BpQXhOaUFtSURJMU5WMGdLeUJ3ZEZ0MElENCtJREkwSUNZZ01qVTFYU0FySUhCMFcyNGdKaUF5TlRWZElDc2djSFJiYmlBK1BpQTRJQ1lnTWpVMVhTQXJJSEIwVzI0Z1BqNGdNVFlnSmlBeU5UVmRJQ3NnY0hSYmJpQStQaUF5TkNBbUlESTFOVjBwTG5SdlZYQndaWEpEWVhObEtDazdDbjBLWm5WdVkzUnBiMjRnYlhRb2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lITXBLVHNLZlFwbWRXNWpkR2x2YmlCa1lTaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdLSE1nSlNCbElDc2daU2tnSlNCbE93cDlDbVoxYm1OMGFXOXVJRTlrS0hNc0lHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lISmxkSFZ5YmlCdUlDc2dLSE1nTFNCbEtTQXFJQ2hwSUMwZ2Jpa2dMeUFvZENBdElHVXBPd3A5Q21aMWJtTjBhVzl1SUVoa0tITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNFOVBTQmxJRDhnS0hRZ0xTQnpLU0F2SUNobElDMGdjeWtnT2lBd093cDlDbVoxYm1OMGFXOXVJRzl5S0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQW9NU0F0SUhRcElDb2djeUFySUhRZ0tpQmxPd3A5Q21aMWJtTjBhVzl1SUd0a0tITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lISmxkSFZ5YmlCdmNpaHpMQ0JsTENBeElDMGdUV0YwYUM1bGVIQW9MWFFnS2lCdUtTazdDbjBLWm5WdVkzUnBiMjRnUjJRb2N5d2daU0E5SURFcElIc0tJQ0FnSUhKbGRIVnliaUJsSUMwZ1RXRjBhQzVoWW5Nb1pHRW9jeXdnWlNBcUlESXBJQzBnWlNrN0NuMEtablZ1WTNScGIyNGdWbVFvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlITWdQRDBnWlNBL0lEQWdPaUJ6SUQ0OUlIUWdQeUF4SURvZ0tITWdQU0FvY3lBdElHVXBJQzhnS0hRZ0xTQmxLU3dnY3lBcUlITWdLaUFvTXlBdElESWdLaUJ6S1NrN0NuMEtablZ1WTNScGIyNGdWMlFvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlITWdQRDBnWlNBL0lEQWdPaUJ6SUQ0OUlIUWdQeUF4SURvZ0tITWdQU0FvY3lBdElHVXBJQzhnS0hRZ0xTQmxLU3dnY3lBcUlITWdLaUJ6SUNvZ0tITWdLaUFvY3lBcUlEWWdMU0F4TlNrZ0t5QXhNQ2twT3dwOUNtWjFibU4wYVc5dUlIRmtLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNzZ1RXRjBhQzVtYkc5dmNpaE5ZWFJvTG5KaGJtUnZiU2dwSUNvZ0tHVWdMU0J6SUNzZ01Ta3BPd3A5Q21aMWJtTjBhVzl1SUZoa0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpJQ3NnVFdGMGFDNXlZVzVrYjIwb0tTQXFJQ2hsSUMwZ2N5azdDbjBLWm5WdVkzUnBiMjRnU21Rb2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNZ0tpQW9MalVnTFNCTllYUm9MbkpoYm1SdmJTZ3BLVHNLZlFwbWRXNWpkR2x2YmlCWlpDaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QWhQVDBnZG05cFpDQXdJQ1ltSUNoV2NpQTlJSE1nSlNBeU1UUTNORGd6TmpRM0tTd2dWbklnUFNCV2NpQXFJREUyT0RBM0lDVWdNakUwTnpRNE16WTBOeXdnS0ZaeUlDMGdNU2tnTHlBeU1UUTNORGd6TmpRMk93cDlDbVoxYm1OMGFXOXVJRnBrS0hNcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNvZ1YyNDdDbjBLWm5WdVkzUnBiMjRnSkdRb2N5a2dld29nSUNBZ2NtVjBkWEp1SUhNZ0tpQmtjanNLZlFwbWRXNWpkR2x2YmlCcFlTaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z0tITWdKaUJ6SUMwZ01Ta2dQVDA5SURBZ0ppWWdjeUFoUFQwZ01Ec0tmUXBtZFc1amRHbHZiaUJZWXloektTQjdDaUFnSUNCeVpYUjFjbTRnVFdGMGFDNXdiM2NvTWl3Z1RXRjBhQzVqWldsc0tFMWhkR2d1Ykc5bktITXBJQzhnVFdGMGFDNU1UaklwS1RzS2ZRcG1kVzVqZEdsdmJpQktZeWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdUV0YwYUM1d2IzY29NaXdnVFdGMGFDNW1iRzl2Y2loTllYUm9MbXh2WnloektTQXZJRTFoZEdndVRFNHlLU2s3Q24wS1puVnVZM1JwYjI0Z2FtUW9jeXdnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnYkdWMElISWdQU0JOWVhSb0xtTnZjeXdnYnlBOUlFMWhkR2d1YzJsdUxDQmhJRDBnY2loMElDOGdNaWtzSUd3Z1BTQnZLSFFnTHlBeUtTd2dZeUE5SUhJb0tHVWdLeUJ1S1NBdklESXBMQ0JvSUQwZ2J5Z29aU0FySUc0cElDOGdNaWtzSUhVZ1BTQnlLQ2hsSUMwZ2Jpa2dMeUF5S1N3Z1pDQTlJRzhvS0dVZ0xTQnVLU0F2SURJcExDQm1JRDBnY2lnb2JpQXRJR1VwSUM4Z01pa3NJRzBnUFNCdktDaHVJQzBnWlNrZ0x5QXlLVHNLSUNBZ0lITjNhWFJqYUNocEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdWZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNCekxuTmxkQ2hoSUNvZ2FDd2diQ0FxSUhVc0lHd2dLaUJrTENCaElDb2dZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdJbGxhV1NJNkNpQWdJQ0FnSUNBZ0lDQWdJSE11YzJWMEtHd2dLaUJrTENCaElDb2dhQ3dnYkNBcUlIVXNJR0VnS2lCaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdZMkZ6WlNBaVdsaGFJam9LSUNBZ0lDQWdJQ0FnSUNBZ2N5NXpaWFFvYkNBcUlIVXNJR3dnS2lCa0xDQmhJQ29nYUN3Z1lTQXFJR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCallYTmxJQ0pZV2xnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0J6TG5ObGRDaGhJQ29nYUN3Z2JDQXFJRzBzSUd3Z0tpQm1MQ0JoSUNvZ1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ0lsbFlXU0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVjMlYwS0d3Z0tpQm1MQ0JoSUNvZ2FDd2diQ0FxSUcwc0lHRWdLaUJqS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1kyRnpaU0FpV2xsYUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1elpYUW9iQ0FxSUcwc0lHd2dLaUJtTENCaElDb2dhQ3dnWVNBcUlHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkR2hWZEdsc2N6b2dMbk5sZEZGMVlYUmxjbTVwYjI1R2NtOXRVSEp2Y0dWeVJYVnNaWElvS1NCbGJtTnZkVzUwWlhKbFpDQmhiaUIxYm10dWIzZHVJRzl5WkdWeU9pQWlJQ3NnYVNrN0NpQWdJQ0I5Q24wS2RtRnlJRTB3SUQwZ1QySnFaV04wTG1aeVpXVjZaU2g3Q2lBZ0lDQmZYM0J5YjNSdlgxODZJRzUxYkd3c0NpQWdJQ0JFUlVjeVVrRkVPaUJYYml3S0lDQWdJRkpCUkRKRVJVYzZJR1J5TEFvZ0lDQWdaMlZ1WlhKaGRHVlZWVWxFT2lCRmRDd0tJQ0FnSUdOc1lXMXdPaUJ0ZEN3S0lDQWdJR1YxWTJ4cFpHVmhiazF2WkhWc2J6b2daR0VzQ2lBZ0lDQnRZWEJNYVc1bFlYSTZJRTlrTEFvZ0lDQWdhVzUyWlhKelpVeGxjbkE2SUVoa0xBb2dJQ0FnYkdWeWNEb2diM0lzQ2lBZ0lDQmtZVzF3T2lCclpDd0tJQ0FnSUhCcGJtZHdiMjVuT2lCSFpDd0tJQ0FnSUhOdGIyOTBhSE4wWlhBNklGWmtMQW9nSUNBZ2MyMXZiM1JvWlhKemRHVndPaUJYWkN3S0lDQWdJSEpoYm1SSmJuUTZJSEZrTEFvZ0lDQWdjbUZ1WkVac2IyRjBPaUJZWkN3S0lDQWdJSEpoYm1SR2JHOWhkRk53Y21WaFpEb2dTbVFzQ2lBZ0lDQnpaV1ZrWldSU1lXNWtiMjA2SUZsa0xBb2dJQ0FnWkdWblZHOVNZV1E2SUZwa0xBb2dJQ0FnY21Ga1ZHOUVaV2M2SUNSa0xBb2dJQ0FnYVhOUWIzZGxjazltVkhkdk9pQnBZU3dLSUNBZ0lHTmxhV3hRYjNkbGNrOW1WSGR2T2lCWVl5d0tJQ0FnSUdac2IyOXlVRzkzWlhKUFpsUjNiem9nU21Nc0NpQWdJQ0J6WlhSUmRXRjBaWEp1YVc5dVJuSnZiVkJ5YjNCbGNrVjFiR1Z5T2lCcVpBcDlLU3dnV0NBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXdMQ0IwSUQwZ01DbDdDaUFnSUNBZ0lDQWdkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnZERzS0lDQWdJSDBLSUNBZ0lHZGxkQ0IzYVdSMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NE93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhkcFpIUm9LR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbmdnUFNCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUdobGFXZG9kQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHaGxhV2RvZENobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1NUlEMGdaVHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE11ZVNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpMbmtnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTVJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFTnZiWEJ2Ym1WdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEQTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5nZ1BTQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZVNBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaWFXNWtaWGdnYVhNZ2IzVjBJRzltSUhKaGJtZGxPaUFpSUNzZ1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMjl0Y0c5dVpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuazdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbWx1WkdWNElHbHpJRzkxZENCdlppQnlZVzVuWlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5nc0lIUm9hWE11ZVNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRMQ0IwYUdsekxua2dQU0JsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0IyYjJsa0lEQWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l5T2lBdVlXUmtLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1WVdSa1ZtVmpkRzl5Y3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WVdSa1ZtVmpkRzl5Y3lobExDQjBLU2tnT2lBb2RHaHBjeTU0SUNzOUlHVXVlQ3dnZEdocGN5NTVJQ3M5SUdVdWVTd2dkR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnWlN3Z2RHaHBjeTU1SUNzOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ3NnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnS3lCMExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JUWTJGc1pXUldaV04wYjNJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLejBnWlM1NElDb2dkQ3dnZEdocGN5NTVJQ3M5SUdVdWVTQXFJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNFOVBTQjJiMmxrSURBZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXlPaUF1YzNWaUtDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXVjM1ZpVm1WamRHOXljeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjM1ZpVm1WamRHOXljeWhsTENCMEtTa2dPaUFvZEdocGN5NTRJQzA5SUdVdWVDd2dkR2hwY3k1NUlDMDlJR1V1ZVN3Z2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCemRXSlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0xUMGdaU3dnZEdocGN5NTVJQzA5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDMGdkQzU0TENCMGFHbHpMbmtnUFNCbExua2dMU0IwTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcVBTQmxMbmdzSUhSb2FYTXVlU0FxUFNCbExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcVBTQmxMQ0IwYUdsekxua2dLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGRtbGtaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0F2UFNCbExuZ3NJSFJvYVhNdWVTQXZQU0JsTG5rc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYWnBaR1ZUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVUyTmhiR0Z5S0RFZ0x5QmxLVHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE15aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuZ3NJRzRnUFNCMGFHbHpMbmtzSUdrZ1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnBXekJkSUNvZ2RDQXJJR2xiTTEwZ0tpQnVJQ3NnYVZzMlhTd2dkR2hwY3k1NUlEMGdhVnN4WFNBcUlIUWdLeUJwV3pSZElDb2diaUFySUdsYk4xMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRhVzRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFwYmloMGFHbHpMbmdzSUdVdWVDa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXbHVLSFJvYVhNdWVTd2daUzU1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLSFJvYVhNdWVDd2daUzU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0WVhnb2RHaHBjeTU1TENCbExua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhBb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JOWVhSb0xtMWhlQ2hsTG5nc0lFMWhkR2d1YldsdUtIUXVlQ3dnZEdocGN5NTRLU2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0dVdWVTd2dUV0YwYUM1dGFXNG9kQzU1TENCMGFHbHpMbmtwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc1lXMXdVMk5oYkdGeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRZWGdvWlN3Z1RXRjBhQzV0YVc0b2RDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJNWlc1bmRHZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVzWlc1bmRHZ29LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9iaUI4ZkNBeEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0J1S1NrcE93b2dJQ0FnZlFvZ0lDQWdabXh2YjNJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMlZwYkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZUNrc0lIUm9hWE11ZVNBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVJVYjFwbGNtOG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJSFJvYVhNdWVDQThJREFnUHlCTllYUm9MbU5sYVd3b2RHaHBjeTU0S1NBNklFMWhkR2d1Wm14dmIzSW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdkR2hwY3k1NUlEd2dNQ0EvSUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmtwSURvZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JtVm5ZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNBdGRHaHBjeTU0TENCMGFHbHpMbmtnUFNBdGRHaHBjeTU1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkc5MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDb2daUzU0SUNzZ2RHaHBjeTU1SUNvZ1pTNTVPd29nSUNBZ2ZRb2dJQ0FnWTNKdmMzTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLaUJsTG5rZ0xTQjBhR2x6TG5rZ0tpQmxMbmc3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2hUY1NncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9Mbk54Y25Rb2RHaHBjeTU0SUNvZ2RHaHBjeTU0SUNzZ2RHaHBjeTU1SUNvZ2RHaHBjeTU1S1RzS0lDQWdJSDBLSUNBZ0lHMWhibWhoZEhSaGJreGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb2RHaHBjeTU0S1NBcklFMWhkR2d1WVdKektIUm9hWE11ZVNrN0NpQWdJQ0I5Q2lBZ0lDQnViM0p0WVd4cGVtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHbDJhV1JsVTJOaGJHRnlLSFJvYVhNdWJHVnVaM1JvS0NrZ2ZId2dNU2s3Q2lBZ0lDQjlDaUFnSUNCaGJtZHNaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhkR0Z1TWlndGRHaHBjeTU1TENBdGRHaHBjeTU0S1NBcklFMWhkR2d1VUVrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXpjWEowS0hSb2FYTXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1NElDMGdaUzU0TENCdUlEMGdkR2hwY3k1NUlDMGdaUzU1T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNvZ2RDQXJJRzRnS2lCdU93b2dJQ0FnZlFvZ0lDQWdiV0Z1YUdGMGRHRnVSR2x6ZEdGdVkyVlVieWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZV0p6S0hSb2FYTXVlQ0F0SUdVdWVDa2dLeUJOWVhSb0xtRmljeWgwYUdsekxua2dMU0JsTG5rcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVEdWdVozUm9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXViM0p0WVd4cGVtVW9LUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4bGNuQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ0tHVXVlQ0F0SUhSb2FYTXVlQ2tnS2lCMExDQjBhR2x6TG5rZ0t6MGdLR1V1ZVNBdElIUm9hWE11ZVNrZ0tpQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiR1Z5Y0ZabFkzUnZjbk1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTG5nZ0t5QW9kQzU0SUMwZ1pTNTRLU0FxSUc0c0lIUm9hWE11ZVNBOUlHVXVlU0FySUNoMExua2dMU0JsTG5rcElDb2diaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZUNBOVBUMGdkR2hwY3k1NElDWW1JR1V1ZVNBOVBUMGdkR2hwY3k1NU93b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1ZiZEYwc0lIUm9hWE11ZVNBOUlHVmJkQ0FySURGZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5nc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1NUxDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0lUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjakk2SUc5bVpuTmxkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtJR1p5YjIwZ0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9LUzRpS1N3Z2RHaHBjeTU0SUQwZ1pTNW5aWFJZS0hRcExDQjBhR2x6TG5rZ1BTQmxMbWRsZEZrb2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWQmNtOTFibVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdUV0YwYUM1amIzTW9kQ2tzSUdrZ1BTQk5ZWFJvTG5OcGJpaDBLU3dnY2lBOUlIUm9hWE11ZUNBdElHVXVlQ3dnYnlBOUlIUm9hWE11ZVNBdElHVXVlVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdjaUFxSUc0Z0xTQnZJQ29nYVNBcklHVXVlQ3dnZEdocGN5NTVJRDBnY2lBcUlHa2dLeUJ2SUNvZ2JpQXJJR1V1ZVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKaGJtUnZiU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXlZVzVrYjIwb0tTd2dkR2hwY3k1NUlEMGdUV0YwYUM1eVlXNWtiMjBvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUNwYlUzbHRZbTlzTG1sMFpYSmhkRzl5WFNncElIc0tJQ0FnSUNBZ0lDQjVhV1ZzWkNCMGFHbHpMbmdzSUhscFpXeGtJSFJvYVhNdWVUc0tJQ0FnSUgwS2ZUc0tXQzV3Y205MGIzUjVjR1V1YVhOV1pXTjBiM0l5SUQwZ0lUQTdDblpoY2lCc2RDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1bGJHVnRaVzUwY3lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMHNJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZ2dQaUF3SUNZbUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVETTZJSFJvWlNCamIyNXpkSEoxWTNSdmNpQnVieUJzYjI1blpYSWdjbVZoWkhNZ1lYSm5kVzFsYm5SekxpQjFjMlVnTG5ObGRDZ3BJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5a2dld29nSUNBZ0lDQWdJR3hsZENCb0lEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYUZzd1hTQTlJR1VzSUdoYk1WMGdQU0JwTENCb1d6SmRJRDBnWVN3Z2FGc3pYU0E5SUhRc0lHaGJORjBnUFNCeUxDQm9XelZkSUQwZ2JDd2dhRnMyWFNBOUlHNHNJR2hiTjEwZ1BTQnZMQ0JvV3poZElEMGdZeXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2xrWlc1MGFYUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d4TENBd0xDQXdMQ0F3TENBeExDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ1BTQnVXekJkTENCMFd6RmRJRDBnYmxzeFhTd2dkRnN5WFNBOUlHNWJNbDBzSUhSYk0xMGdQU0J1V3pOZExDQjBXelJkSUQwZ2JsczBYU3dnZEZzMVhTQTlJRzViTlYwc0lIUmJObDBnUFNCdVd6WmRMQ0IwV3pkZElEMGdibHMzWFN3Z2RGczRYU0E5SUc1Yk9GMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxlSFJ5WVdOMFFtRnphWE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ObGRFWnliMjFOWVhSeWFYZ3pRMjlzZFcxdUtIUm9hWE1zSURBcExDQjBMbk5sZEVaeWIyMU5ZWFJ5YVhnelEyOXNkVzF1S0hSb2FYTXNJREVwTENCdUxuTmxkRVp5YjIxTllYUnlhWGd6UTI5c2RXMXVLSFJvYVhNc0lESXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9kRnN3WFN3Z2RGczBYU3dnZEZzNFhTd2dkRnN4WFN3Z2RGczFYU3dnZEZzNVhTd2dkRnN5WFN3Z2RGczJYU3dnZEZzeE1GMHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aGxMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVUV0YwY21salpYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN5d2dhU0E5SUhRdVpXeGxiV1Z1ZEhNc0lISWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnZJRDBnYmxzd1hTd2dZU0E5SUc1Yk0xMHNJR3dnUFNCdVd6WmRMQ0JqSUQwZ2Jsc3hYU3dnYUNBOUlHNWJORjBzSUhVZ1BTQnVXemRkTENCa0lEMGdibHN5WFN3Z1ppQTlJRzViTlYwc0lHMGdQU0J1V3poZExDQjRJRDBnYVZzd1hTd2dkaUE5SUdsYk0xMHNJR2NnUFNCcFd6WmRMQ0J3SUQwZ2FWc3hYU3dnWHlBOUlHbGJORjBzSUhrZ1BTQnBXemRkTENCaUlEMGdhVnN5WFN3Z1FTQTlJR2xiTlYwc0lFd2dQU0JwV3poZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeVd6QmRJRDBnYnlBcUlIZ2dLeUJoSUNvZ2NDQXJJR3dnS2lCaUxDQnlXek5kSUQwZ2J5QXFJSFlnS3lCaElDb2dYeUFySUd3Z0tpQkJMQ0J5V3paZElEMGdieUFxSUdjZ0t5QmhJQ29nZVNBcklHd2dLaUJNTENCeVd6RmRJRDBnWXlBcUlIZ2dLeUJvSUNvZ2NDQXJJSFVnS2lCaUxDQnlXelJkSUQwZ1l5QXFJSFlnS3lCb0lDb2dYeUFySUhVZ0tpQkJMQ0J5V3pkZElEMGdZeUFxSUdjZ0t5Qm9JQ29nZVNBcklIVWdLaUJNTENCeVd6SmRJRDBnWkNBcUlIZ2dLeUJtSUNvZ2NDQXJJRzBnS2lCaUxDQnlXelZkSUQwZ1pDQXFJSFlnS3lCbUlDb2dYeUFySUcwZ0tpQkJMQ0J5V3poZElEMGdaQ0FxSUdjZ0t5Qm1JQ29nZVNBcklHMGdLaUJNTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3dYU0FxUFNCbExDQjBXek5kSUNvOUlHVXNJSFJiTmwwZ0tqMGdaU3dnZEZzeFhTQXFQU0JsTENCMFd6UmRJQ285SUdVc0lIUmJOMTBnS2owZ1pTd2dkRnN5WFNBcVBTQmxMQ0IwV3pWZElDbzlJR1VzSUhSYk9GMGdLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdSbGRHVnliV2x1WVc1MEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2RDQTlJR1ZiTUYwc0lHNGdQU0JsV3pGZExDQnBJRDBnWlZzeVhTd2djaUE5SUdWYk0xMHNJRzhnUFNCbFd6UmRMQ0JoSUQwZ1pWczFYU3dnYkNBOUlHVmJObDBzSUdNZ1BTQmxXemRkTENCb0lEMGdaVnM0WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBcUlHOGdLaUJvSUMwZ2RDQXFJR0VnS2lCaklDMGdiaUFxSUhJZ0tpQm9JQ3NnYmlBcUlHRWdLaUJzSUNzZ2FTQXFJSElnS2lCaklDMGdhU0FxSUc4Z0tpQnNPd29nSUNBZ2ZRb2dJQ0FnYVc1MlpYSjBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2dkQ0E5SUdWYk1GMHNJRzRnUFNCbFd6RmRMQ0JwSUQwZ1pWc3lYU3dnY2lBOUlHVmJNMTBzSUc4Z1BTQmxXelJkTENCaElEMGdaVnMxWFN3Z2JDQTlJR1ZiTmwwc0lHTWdQU0JsV3pkZExDQm9JRDBnWlZzNFhTd2dkU0E5SUdnZ0tpQnZJQzBnWVNBcUlHTXNJR1FnUFNCaElDb2diQ0F0SUdnZ0tpQnlMQ0JtSUQwZ1l5QXFJSElnTFNCdklDb2diQ3dnYlNBOUlIUWdLaUIxSUNzZ2JpQXFJR1FnS3lCcElDb2daanNLSUNBZ0lDQWdJQ0JwWmlBb2JTQTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0RBc0lEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnTVNBdklHMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJNRjBnUFNCMUlDb2dlQ3dnWlZzeFhTQTlJQ2hwSUNvZ1l5QXRJR2dnS2lCdUtTQXFJSGdzSUdWYk1sMGdQU0FvWVNBcUlHNGdMU0JwSUNvZ2J5a2dLaUI0TENCbFd6TmRJRDBnWkNBcUlIZ3NJR1ZiTkYwZ1BTQW9hQ0FxSUhRZ0xTQnBJQ29nYkNrZ0tpQjRMQ0JsV3pWZElEMGdLR2tnS2lCeUlDMGdZU0FxSUhRcElDb2dlQ3dnWlZzMlhTQTlJR1lnS2lCNExDQmxXemRkSUQwZ0tHNGdLaUJzSUMwZ1l5QXFJSFFwSUNvZ2VDd2daVnM0WFNBOUlDaHZJQ29nZENBdElHNGdLaUJ5S1NBcUlIZ3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVXNJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDBnZEZzeFhTd2dkRnN4WFNBOUlIUmJNMTBzSUhSYk0xMGdQU0JsTENCbElEMGdkRnN5WFN3Z2RGc3lYU0E5SUhSYk5sMHNJSFJiTmwwZ1BTQmxMQ0JsSUQwZ2RGczFYU3dnZEZzMVhTQTlJSFJiTjEwc0lIUmJOMTBnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBUbTl5YldGc1RXRjBjbWw0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSR2NtOXRUV0YwY21sNE5DaGxLUzVwYm5abGNuUW9LUzUwY21GdWMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Y0c5elpVbHVkRzlCY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFd6QmRJRDBnZEZzd1hTd2daVnN4WFNBOUlIUmJNMTBzSUdWYk1sMGdQU0IwV3paZExDQmxXek5kSUQwZ2RGc3hYU3dnWlZzMFhTQTlJSFJiTkYwc0lHVmJOVjBnUFNCMFd6ZGRMQ0JsV3paZElEMGdkRnN5WFN3Z1pWczNYU0E5SUhSYk5WMHNJR1ZiT0YwZ1BTQjBXemhkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZYWlVjbUZ1YzJadmNtMG9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnVFdGMGFDNWpiM01vY2lrc0lHTWdQU0JOWVhSb0xuTnBiaWh5S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvYmlBcUlHd3NJRzRnS2lCakxDQXRiaUFxSUNoc0lDb2dieUFySUdNZ0tpQmhLU0FySUc4Z0t5QmxMQ0F0YVNBcUlHTXNJR2tnS2lCc0xDQXRhU0FxSUNndFl5QXFJRzhnS3lCc0lDb2dZU2tnS3lCaElDc2dkQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WTJGc1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVXekJkSUNvOUlHVXNJRzViTTEwZ0tqMGdaU3dnYmxzMlhTQXFQU0JsTENCdVd6RmRJQ285SUhRc0lHNWJORjBnS2owZ2RDd2dibHMzWFNBcVBTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndVkyOXpLR1VwTENCdUlEMGdUV0YwYUM1emFXNG9aU2tzSUdrZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCeUlEMGdhVnN3WFN3Z2J5QTlJR2xiTTEwc0lHRWdQU0JwV3paZExDQnNJRDBnYVZzeFhTd2dZeUE5SUdsYk5GMHNJR2dnUFNCcFd6ZGRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBXekJkSUQwZ2RDQXFJSElnS3lCdUlDb2diQ3dnYVZzelhTQTlJSFFnS2lCdklDc2diaUFxSUdNc0lHbGJObDBnUFNCMElDb2dZU0FySUc0Z0tpQm9MQ0JwV3pGZElEMGdMVzRnS2lCeUlDc2dkQ0FxSUd3c0lHbGJORjBnUFNBdGJpQXFJRzhnS3lCMElDb2dZeXdnYVZzM1hTQTlJQzF1SUNvZ1lTQXJJSFFnS2lCb0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWJNRjBnS3owZ1pTQXFJRzViTWwwc0lHNWJNMTBnS3owZ1pTQXFJRzViTlYwc0lHNWJObDBnS3owZ1pTQXFJRzViT0Ywc0lHNWJNVjBnS3owZ2RDQXFJRzViTWwwc0lHNWJORjBnS3owZ2RDQXFJRzViTlYwc0lHNWJOMTBnS3owZ2RDQXFJRzViT0Ywc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJRGs3SUdrckt5bHBaaUFvZEZ0cFhTQWhQVDBnYmx0cFhTa2djbVYwZFhKdUlDRXhPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhNRHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUJjbkpoZVNobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQTVPeUJ1S3lzcGRHaHBjeTVsYkdWdFpXNTBjMXR1WFNBOUlHVmJiaUFySUhSZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdibHN3WFN3Z1pWdDBJQ3NnTVYwZ1BTQnVXekZkTENCbFczUWdLeUF5WFNBOUlHNWJNbDBzSUdWYmRDQXJJRE5kSUQwZ2Jsc3pYU3dnWlZ0MElDc2dORjBnUFNCdVd6UmRMQ0JsVzNRZ0t5QTFYU0E5SUc1Yk5WMHNJR1ZiZENBcklEWmRJRDBnYmxzMlhTd2daVnQwSUNzZ04xMGdQU0J1V3pkZExDQmxXM1FnS3lBNFhTQTlJRzViT0Ywc0lHVTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1bWNtOXRRWEp5WVhrb2RHaHBjeTVsYkdWdFpXNTBjeWs3Q2lBZ0lDQjlDbjA3Q214MExuQnliM1J2ZEhsd1pTNXBjMDFoZEhKcGVETWdQU0FoTURzS1puVnVZM1JwYjI0Z1dXTW9jeWtnZXdvZ0lDQWdhV1lnS0hNdWJHVnVaM1JvSUQwOVBTQXdLU0J5WlhSMWNtNGdMVEVnTHlBd093b2dJQ0FnYkdWMElHVWdQU0J6V3pCZE93b2dJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Td2diaUE5SUhNdWJHVnVaM1JvT3lCMElEd2dianNnS3l0MEtYTmJkRjBnUGlCbElDWW1JQ2hsSUQwZ2MxdDBYU2s3Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXAyWVhJZ1VXUWdQU0I3Q2lBZ0lDQkpiblE0UVhKeVlYa3NDaUFnSUNCVmFXNTBPRUZ5Y21GNUxBb2dJQ0FnVldsdWREaERiR0Z0Y0dWa1FYSnlZWGtzQ2lBZ0lDQkpiblF4TmtGeWNtRjVMQW9nSUNBZ1ZXbHVkREUyUVhKeVlYa3NDaUFnSUNCSmJuUXpNa0Z5Y21GNUxBb2dJQ0FnVldsdWRETXlRWEp5WVhrc0NpQWdJQ0JHYkc5aGRETXlRWEp5WVhrc0NpQWdJQ0JHYkc5aGREWTBRWEp5WVhrS2ZUc0tablZ1WTNScGIyNGdkMmtvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUc1bGR5QlJaRnR6WFNobEtUc0tmUXBtZFc1amRHbHZiaUJ4Y3loektTQjdDaUFnSUNCeVpYUjFjbTRnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRFNVRLQ0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUwzaG9kRzFzSWl3Z2N5azdDbjBLZG1GeUlIUnBMQ0JaYmlBOUlHTnNZWE56SUhzS0lDQWdJSE4wWVhScFl5Qm5aWFJFWVhSaFZWSk1LR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9MMTVrWVhSaE9pOXBMblJsYzNRb1pTNXpjbU1wSUh4OElIUjVjR1Z2WmlCSVZFMU1RMkZ1ZG1GelJXeGxiV1Z1ZENBK0lDSjFJaWtnY21WMGRYSnVJR1V1YzNKak93b2dJQ0FnSUNBZ0lHeGxkQ0IwT3dvZ0lDQWdJQ0FnSUdsbUlDaGxJR2x1YzNSaGJtTmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFwSUhRZ1BTQmxPd29nSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwYVNBOVBUMGdkbTlwWkNBd0lDWW1JQ2gwYVNBOUlIRnpLQ0pqWVc1MllYTWlLU2tzSUhScExuZHBaSFJvSUQwZ1pTNTNhV1IwYUN3Z2RHa3VhR1ZwWjJoMElEMGdaUzVvWldsbmFIUTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdrdVoyVjBRMjl1ZEdWNGRDZ2lNbVFpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdaU0JwYm5OMFlXNWpaVzltSUVsdFlXZGxSR0YwWVNBL0lHNHVjSFYwU1cxaFoyVkVZWFJoS0dVc0lEQXNJREFwSURvZ2JpNWtjbUYzU1cxaFoyVW9aU3dnTUN3Z01Dd2daUzUzYVdSMGFDd2daUzVvWldsbmFIUXBMQ0IwSUQwZ2RHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbmRwWkhSb0lENGdNakEwT0NCOGZDQjBMbWhsYVdkb2RDQStJREl3TkRnZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpWVjBhV3h6TG1kbGRFUmhkR0ZWVWt3NklFbHRZV2RsSUdOdmJuWmxjblJsWkNCMGJ5QnFjR2NnWm05eUlIQmxjbVp2Y20xaGJtTmxJSEpsWVhOdmJuTWlMQ0JsS1N3Z2RDNTBiMFJoZEdGVlVrd29JbWx0WVdkbEwycHdaV2NpTENBdU5pa3BJRG9nZEM1MGIwUmhkR0ZWVWt3b0ltbHRZV2RsTDNCdVp5SXBPd29nSUNBZ2ZRcDlMQ0JMWkNBOUlEQXNJRzkwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdiM1F1UkVWR1FWVk1WRjlKVFVGSFJTd2dkQ0E5SUc5MExrUkZSa0ZWVEZSZlRVRlFVRWxPUnl3Z2JpQTlJSFowTENCcElEMGdkblFzSUhJZ1BTQjBkQ3dnYnlBOUlGVnBMQ0JoSUQwZ1kzUXNJR3dnUFNCeWJpd2dZeUE5SURFc0lHZ2dQU0JPZENsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29kR2hwY3l3Z0ltbGtJaXdnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1MyUXJLd29nSUNBZ0lDQWdJSDBwTENCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NXBiV0ZuWlNBOUlHVXNJSFJvYVhNdWJXbHdiV0Z3Y3lBOUlGdGRMQ0IwYUdsekxtMWhjSEJwYm1jZ1BTQjBMQ0IwYUdsekxuZHlZWEJUSUQwZ2Jpd2dkR2hwY3k1M2NtRndWQ0E5SUdrc0lIUm9hWE11YldGblJtbHNkR1Z5SUQwZ2Npd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQnZMQ0IwYUdsekxtRnVhWE52ZEhKdmNIa2dQU0JqTENCMGFHbHpMbVp2Y20xaGRDQTlJR0VzSUhSb2FYTXVhVzUwWlhKdVlXeEdiM0p0WVhRZ1BTQnVkV3hzTENCMGFHbHpMblI1Y0dVZ1BTQnNMQ0IwYUdsekxtOW1abk5sZENBOUlHNWxkeUJZS0RBc0lEQXBMQ0IwYUdsekxuSmxjR1ZoZENBOUlHNWxkeUJZS0RFc0lERXBMQ0IwYUdsekxtTmxiblJsY2lBOUlHNWxkeUJZS0RBc0lEQXBMQ0IwYUdsekxuSnZkR0YwYVc5dUlEMGdNQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXViV0YwY21sNElEMGdibVYzSUd4MExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFd0xDQjBhR2x6TG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VnUFNBaE1Td2dkR2hwY3k1bWJHbHdXU0E5SUNFd0xDQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQ0E5SURRc0lIUm9hWE11Wlc1amIyUnBibWNnUFNCb0xDQjBhR2x6TG5WelpYSkVZWFJoSUQwZ2UzMHNJSFJvYVhNdWRtVnljMmx2YmlBOUlEQXNJSFJvYVhNdWIyNVZjR1JoZEdVZ1BTQnVkV3hzTENCMGFHbHpMbWx6VW1WdVpHVnlWR0Z5WjJWMFZHVjRkSFZ5WlNBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0TG5ObGRGVjJWSEpoYm5ObWIzSnRLSFJvYVhNdWIyWm1jMlYwTG5nc0lIUm9hWE11YjJabWMyVjBMbmtzSUhSb2FYTXVjbVZ3WldGMExuZ3NJSFJvYVhNdWNtVndaV0YwTG5rc0lIUm9hWE11Y205MFlYUnBiMjRzSUhSb2FYTXVZMlZ1ZEdWeUxuZ3NJSFJvYVhNdVkyVnVkR1Z5TG5rcE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTVoYldVZ1BTQmxMbTVoYldVc0lIUm9hWE11YVcxaFoyVWdQU0JsTG1sdFlXZGxMQ0IwYUdsekxtMXBjRzFoY0hNZ1BTQmxMbTFwY0cxaGNITXVjMnhwWTJVb01Da3NJSFJvYVhNdWJXRndjR2x1WnlBOUlHVXViV0Z3Y0dsdVp5d2dkR2hwY3k1M2NtRndVeUE5SUdVdWQzSmhjRk1zSUhSb2FYTXVkM0poY0ZRZ1BTQmxMbmR5WVhCVUxDQjBhR2x6TG0xaFowWnBiSFJsY2lBOUlHVXViV0ZuUm1sc2RHVnlMQ0IwYUdsekxtMXBia1pwYkhSbGNpQTlJR1V1YldsdVJtbHNkR1Z5TENCMGFHbHpMbUZ1YVhOdmRISnZjSGtnUFNCbExtRnVhWE52ZEhKdmNIa3NJSFJvYVhNdVptOXliV0YwSUQwZ1pTNW1iM0p0WVhRc0lIUm9hWE11YVc1MFpYSnVZV3hHYjNKdFlYUWdQU0JsTG1sdWRHVnlibUZzUm05eWJXRjBMQ0IwYUdsekxuUjVjR1VnUFNCbExuUjVjR1VzSUhSb2FYTXViMlptYzJWMExtTnZjSGtvWlM1dlptWnpaWFFwTENCMGFHbHpMbkpsY0dWaGRDNWpiM0I1S0dVdWNtVndaV0YwS1N3Z2RHaHBjeTVqWlc1MFpYSXVZMjl3ZVNobExtTmxiblJsY2lrc0lIUm9hWE11Y205MFlYUnBiMjRnUFNCbExuSnZkR0YwYVc5dUxDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNCbExtMWhkSEpwZUVGMWRHOVZjR1JoZEdVc0lIUm9hWE11YldGMGNtbDRMbU52Y0hrb1pTNXRZWFJ5YVhncExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUdVdVoyVnVaWEpoZEdWTmFYQnRZWEJ6TENCMGFHbHpMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRWdQU0JsTG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VzSUhSb2FYTXVabXhwY0ZrZ1BTQmxMbVpzYVhCWkxDQjBhR2x6TG5WdWNHRmphMEZzYVdkdWJXVnVkQ0E5SUdVdWRXNXdZV05yUVd4cFoyNXRaVzUwTENCMGFHbHpMbVZ1WTI5a2FXNW5JRDBnWlM1bGJtTnZaR2x1Wnl3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVWdQVDA5SUhadmFXUWdNQ0I4ZkNCMGVYQmxiMllnWlNBOVBTQWljM1J5YVc1bklqc0tJQ0FnSUNBZ0lDQnBaaUFvSVhRZ0ppWWdaUzUwWlhoMGRYSmxjMXQwYUdsekxuVjFhV1JkSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCbExuUmxlSFIxY21WelczUm9hWE11ZFhWcFpGMDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHRmtZWFJoT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lBMExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVZHVjRkSFZ5WlNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpXNWxjbUYwYjNJNklDSlVaWGgwZFhKbExuUnZTbE5QVGlJS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RYVnBaRG9nZEdocGN5NTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lCMGFHbHpMbTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoY0hCcGJtYzZJSFJvYVhNdWJXRndjR2x1Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ3WldGME9pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KbGNHVmhkQzU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWEJsWVhRdWVRb2dJQ0FnSUNBZ0lDQWdJQ0JkTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YjJabWMyVjBMbmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtOW1abk5sZEM1NUNpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTmxiblJsY2pvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqWlc1MFpYSXVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyVnVkR1Z5TG5rS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtOTBZWFJwYjI0NklIUm9hWE11Y205MFlYUnBiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHlZWEE2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVkM0poY0ZNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmR5WVhCVUNpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ2RHaHBjeTVtYjNKdFlYUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFJvYVhNdWRIbHdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXNWpiMlJwYm1jNklIUm9hWE11Wlc1amIyUnBibWNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2dkR2hwY3k1dGFXNUdhV3gwWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoWjBacGJIUmxjam9nZEdocGN5NXRZV2RHYVd4MFpYSXNDaUFnSUNBZ0lDQWdJQ0FnSUdGdWFYTnZkSEp2Y0hrNklIUm9hWE11WVc1cGMyOTBjbTl3ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdabXhwY0ZrNklIUm9hWE11Wm14cGNGa3NDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpXMTFiSFJwY0d4NVFXeHdhR0U2SUhSb2FYTXVjSEpsYlhWc2RHbHdiSGxCYkhCb1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1d1lXTnJRV3hwWjI1dFpXNTBPaUIwYUdsekxuVnVjR0ZqYTBGc2FXZHViV1Z1ZEFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFXMWhaMlVnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwTG5WMWFXUWdQVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTFkV2xrSUQwZ1JYUW9LU2tzSUNGMElDWW1JR1V1YVcxaFoyVnpXMmt1ZFhWcFpGMGdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHBLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3TENCaElEMGdhUzVzWlc1bmRHZzdJRzhnUENCaE95QnZLeXNwYVZ0dlhTNXBjMFJoZEdGVVpYaDBkWEpsSUQ4Z2NpNXdkWE5vS0Y5dktHbGJiMTB1YVcxaFoyVXBLU0E2SUhJdWNIVnphQ2hmYnlocFcyOWRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjaUE5SUY5dktHa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzVwYldGblpYTmJhUzUxZFdsa1hTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWRXbGtPaUJwTG5WMWFXUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc09pQnlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzR1YVcxaFoyVWdQU0JwTG5WMWFXUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQktVMDlPTG5OMGNtbHVaMmxtZVNoMGFHbHpMblZ6WlhKRVlYUmhLU0FoUFQwZ0ludDlJaUFtSmlBb2JpNTFjMlZ5UkdGMFlTQTlJSFJvYVhNdWRYTmxja1JoZEdFcExDQjBJSHg4SUNobExuUmxlSFIxY21WelczUm9hWE11ZFhWcFpGMGdQU0J1S1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltUnBjM0J2YzJVaUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyWnZjbTFWZGlobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXViV0Z3Y0dsdVp5QWhQVDBnYUdFcElISmxkSFZ5YmlCbE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1Gd2NHeDVUV0YwY21sNE15aDBhR2x6TG0xaGRISnBlQ2tzSUdVdWVDQThJREFnZkh3Z1pTNTRJRDRnTVNrZ2MzZHBkR05vS0hSb2FYTXVkM0poY0ZNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFNXpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaUzU0SUQwZ1pTNTRJQzBnVFdGMGFDNW1iRzl2Y2lobExuZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RuUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbmdnUFNCbExuZ2dQQ0F3SUQ4Z01DQTZJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQkNjem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRTFoZEdndVlXSnpLRTFoZEdndVpteHZiM0lvWlM1NEtTQWxJRElwSUQwOVBTQXhJRDhnWlM1NElEMGdUV0YwYUM1alpXbHNLR1V1ZUNrZ0xTQmxMbmdnT2lCbExuZ2dQU0JsTG5nZ0xTQk5ZWFJvTG1ac2IyOXlLR1V1ZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVlU0E4SURBZ2ZId2daUzU1SUQ0Z01Ta2djM2RwZEdOb0tIUm9hWE11ZDNKaGNGUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRTV6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlM1NUlEMGdaUzU1SUMwZ1RXRjBhQzVtYkc5dmNpaGxMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdkblE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG5rZ1BTQmxMbmtnUENBd0lEOGdNQ0E2SURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JDY3pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUUxaGRHZ3VZV0p6S0UxaGRHZ3VabXh2YjNJb1pTNTVLU0FsSURJcElEMDlQU0F4SUQ4Z1pTNTVJRDBnVFdGMGFDNWpaV2xzS0dVdWVTa2dMU0JsTG5rZ09pQmxMbmtnUFNCbExua2dMU0JOWVhSb0xtWnNiMjl5S0dVdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVabXhwY0ZrZ0ppWWdLR1V1ZVNBOUlERWdMU0JsTG5rcExDQmxPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHNWxaV1J6VlhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCbElEMDlQU0FoTUNBbUppQjBhR2x6TG5abGNuTnBiMjRyS3pzS0lDQWdJSDBLZlRzS2IzUXVSRVZHUVZWTVZGOUpUVUZIUlNBOUlIWnZhV1FnTURzS2IzUXVSRVZHUVZWTVZGOU5RVkJRU1U1SElEMGdhR0U3Q205MExuQnliM1J2ZEhsd1pTNXBjMVJsZUhSMWNtVWdQU0FoTURzS1puVnVZM1JwYjI0Z1gyOG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlIUjVjR1Z2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUR3Z0luVWlJQ1ltSUhNZ2FXNXpkR0Z1WTJWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MElIeDhJSFI1Y0dWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQThJQ0oxSWlBbUppQnpJR2x1YzNSaGJtTmxiMllnU0ZSTlRFTmhiblpoYzBWc1pXMWxiblFnZkh3Z2RIbHdaVzltSUVsdFlXZGxRbWwwYldGd0lEd2dJblVpSUNZbUlITWdhVzV6ZEdGdVkyVnZaaUJKYldGblpVSnBkRzFoY0NBL0lGbHVMbWRsZEVSaGRHRlZVa3dvY3lrZ09pQnpMbVJoZEdFZ1B5QjdDaUFnSUNBZ0lDQWdaR0YwWVRvZ1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG5Oc2FXTmxMbU5oYkd3b2N5NWtZWFJoS1N3S0lDQWdJQ0FnSUNCM2FXUjBhRG9nY3k1M2FXUjBhQ3dLSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSE11YUdWcFoyaDBMQW9nSUNBZ0lDQWdJSFI1Y0dVNklITXVaR0YwWVM1amIyNXpkSEoxWTNSdmNpNXVZVzFsQ2lBZ0lDQjlJRG9nS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZHVjRkSFZ5WlRvZ1ZXNWhZbXhsSUhSdklITmxjbWxoYkdsNlpTQlVaWGgwZFhKbExpSXBMQ0I3ZlNrN0NuMEtkbUZ5SUZabElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREFzSUhRZ1BTQXdMQ0J1SUQwZ01Dd2dhU0E5SURFcGV3b2dJQ0FnSUNBZ0lIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJSFFzSUhSb2FYTXVlaUE5SUc0c0lIUm9hWE11ZHlBOUlHazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2QybGtkR2dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlanNLSUNBZ0lIMEtJQ0FnSUhObGRDQjNhV1IwYUNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1NklEMGdaVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQm9aV2xuYUhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZHpzS0lDQWdJSDBLSUNBZ0lITmxkQ0JvWldsbmFIUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkeUE5SUdVN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6TG5rZ1BTQjBMQ0IwYUdsekxub2dQU0J1TENCMGFHbHpMbmNnUFNCcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaU3dnZEdocGN5NTVJRDBnWlN3Z2RHaHBjeTU2SUQwZ1pTd2dkR2hwY3k1M0lEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV1NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZVNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU2SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRmNvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmNnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBRMjl0Y0c5dVpXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWVDQTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXhPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1NUlEMGdkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElESTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5vZ1BTQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ016b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZHlBOUlIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaWFXNWtaWGdnYVhNZ2IzVjBJRzltSUhKaGJtZGxPaUFpSUNzZ1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMjl0Y0c5dVpXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmc3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuazdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5vN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ016b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmM3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuZ3NJSFJvYVhNdWVTd2dkR2hwY3k1NkxDQjBhR2x6TG5jcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ3dnZEdocGN5NTVJRDBnWlM1NUxDQjBhR2x6TG5vZ1BTQmxMbm9zSUhSb2FYTXVkeUE5SUdVdWR5QWhQVDBnZG05cFpDQXdJRDhnWlM1M0lEb2dNU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqUTZJQzVoWkdRb0tTQnViM2NnYjI1c2VTQmhZMk5sY0hSeklHOXVaU0JoY21kMWJXVnVkQzRnVlhObElDNWhaR1JXWldOMGIzSnpLQ0JoTENCaUlDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NWhaR1JXWldOMGIzSnpLR1VzSUhRcEtTQTZJQ2gwYUdsekxuZ2dLejBnWlM1NExDQjBhR2x6TG5rZ0t6MGdaUzU1TENCMGFHbHpMbm9nS3owZ1pTNTZMQ0IwYUdsekxuY2dLejBnWlM1M0xDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHRmtaRk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXJQU0JsTENCMGFHbHpMbmtnS3owZ1pTd2dkR2hwY3k1NklDczlJR1VzSUhSb2FYTXVkeUFyUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtWbVZqZEc5eWN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVdWVDQXJJSFF1ZUN3Z2RHaHBjeTU1SUQwZ1pTNTVJQ3NnZEM1NUxDQjBhR2x6TG5vZ1BTQmxMbm9nS3lCMExub3NJSFJvYVhNdWR5QTlJR1V1ZHlBcklIUXVkeXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkZOallXeGxaRlpsWTNSdmNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FyUFNCbExuZ2dLaUIwTENCMGFHbHpMbmtnS3owZ1pTNTVJQ29nZEN3Z2RHaHBjeTU2SUNzOUlHVXVlaUFxSUhRc0lIUm9hWE11ZHlBclBTQmxMbmNnS2lCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzVmlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TkRvZ0xuTjFZaWdwSUc1dmR5QnZibXg1SUdGalkyVndkSE1nYjI1bElHRnlaM1Z0Wlc1MExpQlZjMlVnTG5OMVlsWmxZM1J2Y25Nb0lHRXNJR0lnS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG5OMVlsWmxZM1J2Y25Nb1pTd2dkQ2twSURvZ0tIUm9hWE11ZUNBdFBTQmxMbmdzSUhSb2FYTXVlU0F0UFNCbExua3NJSFJvYVhNdWVpQXRQU0JsTG5vc0lIUm9hWE11ZHlBdFBTQmxMbmNzSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnYzNWaVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUMwOUlHVXNJSFJvYVhNdWVTQXRQU0JsTENCMGFHbHpMbm9nTFQwZ1pTd2dkR2hwY3k1M0lDMDlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZFdKV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUMwZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0xTQjBMbmtzSUhSb2FYTXVlaUE5SUdVdWVpQXRJSFF1ZWl3Z2RHaHBjeTUzSUQwZ1pTNTNJQzBnZEM1M0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3Ykhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tqMGdaUzU0TENCMGFHbHpMbmtnS2owZ1pTNTVMQ0IwYUdsekxub2dLajBnWlM1NkxDQjBhR2x6TG5jZ0tqMGdaUzUzTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLajBnWlN3Z2RHaHBjeTU1SUNvOUlHVXNJSFJvYVhNdWVpQXFQU0JsTENCMGFHbHpMbmNnS2owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0IwYUdsekxub3NJSElnUFNCMGFHbHpMbmNzSUc4Z1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnZXekJkSUNvZ2RDQXJJRzliTkYwZ0tpQnVJQ3NnYjFzNFhTQXFJR2tnS3lCdld6RXlYU0FxSUhJc0lIUm9hWE11ZVNBOUlHOWJNVjBnS2lCMElDc2diMXMxWFNBcUlHNGdLeUJ2V3psZElDb2dhU0FySUc5Yk1UTmRJQ29nY2l3Z2RHaHBjeTU2SUQwZ2Ixc3lYU0FxSUhRZ0t5QnZXelpkSUNvZ2JpQXJJRzliTVRCZElDb2dhU0FySUc5Yk1UUmRJQ29nY2l3Z2RHaHBjeTUzSUQwZ2Ixc3pYU0FxSUhRZ0t5QnZXemRkSUNvZ2JpQXJJRzliTVRGZElDb2dhU0FySUc5Yk1UVmRJQ29nY2l3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGRtbGtaVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsVFkyRnNZWElvTVNBdklHVXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFFYaHBjMEZ1WjJ4bFJuSnZiVkYxWVhSbGNtNXBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZHlBOUlESWdLaUJOWVhSb0xtRmpiM01vWlM1M0tUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1YzNGeWRDZ3hJQzBnWlM1M0lDb2daUzUzS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOElERmxMVFFnUHlBb2RHaHBjeTU0SUQwZ01Td2dkR2hwY3k1NUlEMGdNQ3dnZEdocGN5NTZJRDBnTUNrZ09pQW9kR2hwY3k1NElEMGdaUzU0SUM4Z2RDd2dkR2hwY3k1NUlEMGdaUzU1SUM4Z2RDd2dkR2hwY3k1NklEMGdaUzU2SUM4Z2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJCZUdselFXNW5iR1ZHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwTENCdUxDQnBMQ0J5TENCc0lEMGdaUzVsYkdWdFpXNTBjeXdnWXlBOUlHeGJNRjBzSUdnZ1BTQnNXelJkTENCMUlEMGdiRnM0WFN3Z1pDQTlJR3hiTVYwc0lHWWdQU0JzV3pWZExDQnRJRDBnYkZzNVhTd2dlQ0E5SUd4Yk1sMHNJSFlnUFNCc1d6WmRMQ0JuSUQwZ2JGc3hNRjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMWhkR2d1WVdKektHZ2dMU0JrS1NBOElDNHdNU0FtSmlCTllYUm9MbUZpY3loMUlDMGdlQ2tnUENBdU1ERWdKaVlnVFdGMGFDNWhZbk1vYlNBdElIWXBJRHdnTGpBeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaE5ZWFJvTG1GaWN5aG9JQ3NnWkNrZ1BDQXVNU0FtSmlCTllYUm9MbUZpY3loMUlDc2dlQ2tnUENBdU1TQW1KaUJOWVhSb0xtRmljeWh0SUNzZ2Rpa2dQQ0F1TVNBbUppQk5ZWFJvTG1GaWN5aGpJQ3NnWmlBcklHY2dMU0F6S1NBOElDNHhLU0J5WlhSMWNtNGdkR2hwY3k1elpYUW9NU3dnTUN3Z01Dd2dNQ2tzSUhSb2FYTTdDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQk5ZWFJvTGxCSk93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJQ2hqSUNzZ01Ta2dMeUF5TENCNUlEMGdLR1lnS3lBeEtTQXZJRElzSUdJZ1BTQW9aeUFySURFcElDOGdNaXdnUVNBOUlDaG9JQ3NnWkNrZ0x5QTBMQ0JNSUQwZ0tIVWdLeUI0S1NBdklEUXNJRWtnUFNBb2JTQXJJSFlwSUM4Z05Ec0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRjhnUGlCNUlDWW1JRjhnUGlCaUlEOGdYeUE4SUM0d01TQS9JQ2h1SUQwZ01Dd2dhU0E5SUM0M01EY3hNRFkzT0RFc0lISWdQU0F1TnpBM01UQTJOemd4S1NBNklDaHVJRDBnVFdGMGFDNXpjWEowS0Y4cExDQnBJRDBnUVNBdklHNHNJSElnUFNCTUlDOGdiaWtnT2lCNUlENGdZaUEvSUhrZ1BDQXVNREVnUHlBb2JpQTlJQzQzTURjeE1EWTNPREVzSUdrZ1BTQXdMQ0J5SUQwZ0xqY3dOekV3TmpjNE1Ta2dPaUFvYVNBOUlFMWhkR2d1YzNGeWRDaDVLU3dnYmlBOUlFRWdMeUJwTENCeUlEMGdTU0F2SUdrcElEb2dZaUE4SUM0d01TQS9JQ2h1SUQwZ0xqY3dOekV3TmpjNE1Td2dhU0E5SUM0M01EY3hNRFkzT0RFc0lISWdQU0F3S1NBNklDaHlJRDBnVFdGMGFDNXpjWEowS0dJcExDQnVJRDBnVENBdklISXNJR2tnUFNCSklDOGdjaWtzSUhSb2FYTXVjMlYwS0c0c0lHa3NJSElzSUhRcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUUxaGRHZ3VjM0Z5ZENnb2RpQXRJRzBwSUNvZ0tIWWdMU0J0S1NBcklDaDFJQzBnZUNrZ0tpQW9kU0F0SUhncElDc2dLR1FnTFNCb0tTQXFJQ2hrSUMwZ2FDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GaWN5aHdLU0E4SUM0d01ERWdKaVlnS0hBZ1BTQXhLU3dnZEdocGN5NTRJRDBnS0hZZ0xTQnRLU0F2SUhBc0lIUm9hWE11ZVNBOUlDaDFJQzBnZUNrZ0x5QndMQ0IwYUdsekxub2dQU0FvWkNBdElHZ3BJQzhnY0N3Z2RHaHBjeTUzSUQwZ1RXRjBhQzVoWTI5ektDaGpJQ3NnWmlBcklHY2dMU0F4S1NBdklESXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV2x1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV0YVc0b2RHaHBjeTU0TENCbExuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtMXBiaWgwYUdsekxua3NJR1V1ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1YldsdUtIUm9hWE11ZWl3Z1pTNTZLU3dnZEdocGN5NTNJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTNMQ0JsTG5jcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRjRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTRMQ0JsTG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xaGVDaDBhR2x6TG5rc0lHVXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVlaXdnWlM1NktTd2dkR2hwY3k1M0lEMGdUV0YwYUM1dFlYZ29kR2hwY3k1M0xDQmxMbmNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFoZUNobExuZ3NJRTFoZEdndWJXbHVLSFF1ZUN3Z2RHaHBjeTU0S1Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtHVXVlU3dnVFdGMGFDNXRhVzRvZEM1NUxDQjBhR2x6TG5rcEtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29aUzU2TENCTllYUm9MbTFwYmloMExub3NJSFJvYVhNdWVpa3BMQ0IwYUdsekxuY2dQU0JOWVhSb0xtMWhlQ2hsTG5jc0lFMWhkR2d1YldsdUtIUXVkeXdnZEdocGN5NTNLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNGTmpZV3hoY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLR1VzSUUxaGRHZ3ViV2x1S0hRc0lIUm9hWE11ZUNrcExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCMGFHbHpMbmtwS1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnZEdocGN5NTZLU2tzSUhSb2FYTXVkeUE5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWR5a3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCTVpXNW5kR2dvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1c1pXNW5kR2dvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvYmlCOGZDQXhLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaE5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCdUtTa3BPd29nSUNBZ2ZRb2dJQ0FnWm14dmIzSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9MbVpzYjI5eUtIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1Wm14dmIzSW9kR2hwY3k1M0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTmxhV3dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VZMlZwYkNoMGFHbHpMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbU5sYVd3b2RHaHBjeTU1S1N3Z2RHaHBjeTU2SUQwZ1RXRjBhQzVqWldsc0tIUm9hWE11ZWlrc0lIUm9hWE11ZHlBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5jcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTFibVFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KdmRXNWtLSFJvYVhNdWVpa3NJSFJvYVhNdWR5QTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTNLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEp2ZFc1a1ZHOWFaWEp2S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCMGFHbHpMbmdnUENBd0lEOGdUV0YwYUM1alpXbHNLSFJvYVhNdWVDa2dPaUJOWVhSb0xtWnNiMjl5S0hSb2FYTXVlQ2tzSUhSb2FYTXVlU0E5SUhSb2FYTXVlU0E4SURBZ1B5Qk5ZWFJvTG1ObGFXd29kR2hwY3k1NUtTQTZJRTFoZEdndVpteHZiM0lvZEdocGN5NTVLU3dnZEdocGN5NTZJRDBnZEdocGN5NTZJRHdnTUNBL0lFMWhkR2d1WTJWcGJDaDBhR2x6TG5vcElEb2dUV0YwYUM1bWJHOXZjaWgwYUdsekxub3BMQ0IwYUdsekxuY2dQU0IwYUdsekxuY2dQQ0F3SUQ4Z1RXRjBhQzVqWldsc0tIUm9hWE11ZHlrZ09pQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWR5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnVaV2RoZEdVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlDMTBhR2x6TG5nc0lIUm9hWE11ZVNBOUlDMTBhR2x6TG5rc0lIUm9hWE11ZWlBOUlDMTBhR2x6TG5vc0lIUm9hWE11ZHlBOUlDMTBhR2x6TG5jc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2IzUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLaUJsTG5nZ0t5QjBhR2x6TG5rZ0tpQmxMbmtnS3lCMGFHbHpMbm9nS2lCbExub2dLeUIwYUdsekxuY2dLaUJsTG5jN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdoVGNTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDb2dkR2hwY3k1NElDc2dkR2hwY3k1NUlDb2dkR2hwY3k1NUlDc2dkR2hwY3k1NklDb2dkR2hwY3k1NklDc2dkR2hwY3k1M0lDb2dkR2hwY3k1M093b2dJQ0FnZlFvZ0lDQWdiR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5OeGNuUW9kR2hwY3k1NElDb2dkR2hwY3k1NElDc2dkR2hwY3k1NUlDb2dkR2hwY3k1NUlDc2dkR2hwY3k1NklDb2dkR2hwY3k1NklDc2dkR2hwY3k1M0lDb2dkR2hwY3k1M0tUc0tJQ0FnSUgwS0lDQWdJRzFoYm1oaGRIUmhia3hsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9kR2hwY3k1NEtTQXJJRTFoZEdndVlXSnpLSFJvYVhNdWVTa2dLeUJOWVhSb0xtRmljeWgwYUdsekxub3BJQ3NnVFdGMGFDNWhZbk1vZEdocGN5NTNLVHNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2RHaHBjeTVzWlc1bmRHZ29LU0I4ZkNBeEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEV4bGJtZDBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc2FYcGxLQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc1pYSndLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNzOUlDaGxMbmdnTFNCMGFHbHpMbmdwSUNvZ2RDd2dkR2hwY3k1NUlDczlJQ2hsTG5rZ0xTQjBhR2x6TG5rcElDb2dkQ3dnZEdocGN5NTZJQ3M5SUNobExub2dMU0IwYUdsekxub3BJQ29nZEN3Z2RHaHBjeTUzSUNzOUlDaGxMbmNnTFNCMGFHbHpMbmNwSUNvZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeGxjbkJXWldOMGIzSnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNzZ0tIUXVlQ0F0SUdVdWVDa2dLaUJ1TENCMGFHbHpMbmtnUFNCbExua2dLeUFvZEM1NUlDMGdaUzU1S1NBcUlHNHNJSFJvYVhNdWVpQTlJR1V1ZWlBcklDaDBMbm9nTFNCbExub3BJQ29nYml3Z2RHaHBjeTUzSUQwZ1pTNTNJQ3NnS0hRdWR5QXRJR1V1ZHlrZ0tpQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzU0SUQwOVBTQjBhR2x6TG5nZ0ppWWdaUzU1SUQwOVBTQjBhR2x6TG5rZ0ppWWdaUzU2SUQwOVBTQjBhR2x6TG5vZ0ppWWdaUzUzSUQwOVBTQjBhR2x6TG5jN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaVnQwWFN3Z2RHaHBjeTU1SUQwZ1pWdDBJQ3NnTVYwc0lIUm9hWE11ZWlBOUlHVmJkQ0FySURKZExDQjBhR2x6TG5jZ1BTQmxXM1FnS3lBelhTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZRWEp5WVhrb1pTQTlJRnRkTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdkR2hwY3k1NExDQmxXM1FnS3lBeFhTQTlJSFJvYVhNdWVTd2daVnQwSUNzZ01sMGdQU0IwYUdsekxub3NJR1ZiZENBcklETmRJRDBnZEdocGN5NTNMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdJVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pRNklHOW1abk5sZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrSUdaeWIyMGdMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1M0aUtTd2dkR2hwY3k1NElEMGdaUzVuWlhSWUtIUXBMQ0IwYUdsekxua2dQU0JsTG1kbGRGa29kQ2tzSUhSb2FYTXVlaUE5SUdVdVoyVjBXaWgwS1N3Z2RHaHBjeTUzSUQwZ1pTNW5aWFJYS0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtRnVaRzl0S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbmNnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdLbHRUZVcxaWIyd3VhWFJsY21GMGIzSmRLQ2tnZXdvZ0lDQWdJQ0FnSUhscFpXeGtJSFJvYVhNdWVDd2dlV2xsYkdRZ2RHaHBjeTU1TENCNWFXVnNaQ0IwYUdsekxub3NJSGxwWld4a0lIUm9hWE11ZHpzS0lDQWdJSDBLZlRzS1ZtVXVjSEp2ZEc5MGVYQmxMbWx6Vm1WamRHOXlOQ0E5SUNFd093cDJZWElnUVhRZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQjdmU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuZHBaSFJvSUQwZ1pTd2dkR2hwY3k1b1pXbG5hSFFnUFNCMExDQjBhR2x6TG1SbGNIUm9JRDBnTVN3Z2RHaHBjeTV6WTJsemMyOXlJRDBnYm1WM0lGWmxLREFzSURBc0lHVXNJSFFwTENCMGFHbHpMbk5qYVhOemIzSlVaWE4wSUQwZ0lURXNJSFJvYVhNdWRtbGxkM0J2Y25RZ1BTQnVaWGNnVm1Vb01Dd2dNQ3dnWlN3Z2RDa3NJSFJvYVhNdWRHVjRkSFZ5WlNBOUlHNWxkeUJ2ZENoMmIybGtJREFzSUc0dWJXRndjR2x1Wnl3Z2JpNTNjbUZ3VXl3Z2JpNTNjbUZ3VkN3Z2JpNXRZV2RHYVd4MFpYSXNJRzR1YldsdVJtbHNkR1Z5TENCdUxtWnZjbTFoZEN3Z2JpNTBlWEJsTENCdUxtRnVhWE52ZEhKdmNIa3NJRzR1Wlc1amIyUnBibWNwTENCMGFHbHpMblJsZUhSMWNtVXVhWE5TWlc1a1pYSlVZWEpuWlhSVVpYaDBkWEpsSUQwZ0lUQXNJSFJvYVhNdWRHVjRkSFZ5WlM1cGJXRm5aU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdnNklERUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ2JpNW5aVzVsY21GMFpVMXBjRzFoY0hNZ0lUMDlJSFp2YVdRZ01DQS9JRzR1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRG9nSVRFc0lIUm9hWE11ZEdWNGRIVnlaUzVwYm5SbGNtNWhiRVp2Y20xaGRDQTlJRzR1YVc1MFpYSnVZV3hHYjNKdFlYUWdJVDA5SUhadmFXUWdNQ0EvSUc0dWFXNTBaWEp1WVd4R2IzSnRZWFFnT2lCdWRXeHNMQ0IwYUdsekxuUmxlSFIxY21VdWJXbHVSbWxzZEdWeUlEMGdiaTV0YVc1R2FXeDBaWElnSVQwOUlIWnZhV1FnTUNBL0lHNHViV2x1Um1sc2RHVnlJRG9nZEhRc0lIUm9hWE11WkdWd2RHaENkV1ptWlhJZ1BTQnVMbVJsY0hSb1FuVm1abVZ5SUNFOVBTQjJiMmxrSURBZ1B5QnVMbVJsY0hSb1FuVm1abVZ5SURvZ0lUQXNJSFJvYVhNdWMzUmxibU5wYkVKMVptWmxjaUE5SUc0dWMzUmxibU5wYkVKMVptWmxjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2JpNXpkR1Z1WTJsc1FuVm1abVZ5SURvZ0lURXNJSFJvYVhNdVpHVndkR2hVWlhoMGRYSmxJRDBnYmk1a1pYQjBhRlJsZUhSMWNtVWdJVDA5SUhadmFXUWdNQ0EvSUc0dVpHVndkR2hVWlhoMGRYSmxJRG9nYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJSE5sZEZSbGVIUjFjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHVXVhVzFoWjJVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwYUdsekxuZHBaSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklIUm9hWE11YUdWcFoyaDBMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nZEdocGN5NWtaWEIwYUFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZEdWNGRIVnlaU0E5SUdVN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJUYVhwbEtHVXNJSFFzSUc0Z1BTQXhLU0I3Q2lBZ0lDQWdJQ0FnS0hSb2FYTXVkMmxrZEdnZ0lUMDlJR1VnZkh3Z2RHaHBjeTVvWldsbmFIUWdJVDA5SUhRZ2ZId2dkR2hwY3k1a1pYQjBhQ0FoUFQwZ2Jpa2dKaVlnS0hSb2FYTXVkMmxrZEdnZ1BTQmxMQ0IwYUdsekxtaGxhV2RvZENBOUlIUXNJSFJvYVhNdVpHVndkR2dnUFNCdUxDQjBhR2x6TG5SbGVIUjFjbVV1YVcxaFoyVXVkMmxrZEdnZ1BTQmxMQ0IwYUdsekxuUmxlSFIxY21VdWFXMWhaMlV1YUdWcFoyaDBJRDBnZEN3Z2RHaHBjeTUwWlhoMGRYSmxMbWx0WVdkbExtUmxjSFJvSUQwZ2Jpd2dkR2hwY3k1a2FYTndiM05sS0NrcExDQjBhR2x6TG5acFpYZHdiM0owTG5ObGRDZ3dMQ0F3TENCbExDQjBLU3dnZEdocGN5NXpZMmx6YzI5eUxuTmxkQ2d3TENBd0xDQmxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTNhV1IwYUNBOUlHVXVkMmxrZEdnc0lIUm9hWE11YUdWcFoyaDBJRDBnWlM1b1pXbG5hSFFzSUhSb2FYTXVaR1Z3ZEdnZ1BTQmxMbVJsY0hSb0xDQjBhR2x6TG5acFpYZHdiM0owTG1OdmNIa29aUzUyYVdWM2NHOXlkQ2tzSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJR1V1ZEdWNGRIVnlaUzVqYkc5dVpTZ3BMQ0IwYUdsekxuUmxlSFIxY21VdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQzR1TG5Sb2FYTXVkR1Y0ZEhWeVpTNXBiV0ZuWlFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WkdWd2RHaENkV1ptWlhJZ1BTQmxMbVJsY0hSb1FuVm1abVZ5TENCMGFHbHpMbk4wWlc1amFXeENkV1ptWlhJZ1BTQmxMbk4wWlc1amFXeENkV1ptWlhJc0lIUm9hWE11WkdWd2RHaFVaWGgwZFhKbElEMGdaUzVrWlhCMGFGUmxlSFIxY21Vc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0prYVhOd2IzTmxJZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUXA5T3dwQmRDNXdjbTkwYjNSNWNHVXVhWE5YWldKSFRGSmxibVJsY2xSaGNtZGxkQ0E5SUNFd093cDJZWElnV21NZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVGMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENCdU95QnlLeXNwZEdocGN5NTBaWGgwZFhKbFczSmRJRDBnYVM1amJHOXVaU2dwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVMmw2WlNobExDQjBMQ0J1SUQwZ01Ta2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbmRwWkhSb0lDRTlQU0JsSUh4OElIUm9hWE11YUdWcFoyaDBJQ0U5UFNCMElIeDhJSFJvYVhNdVpHVndkR2dnSVQwOUlHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTUzYVdSMGFDQTlJR1VzSUhSb2FYTXVhR1ZwWjJoMElEMGdkQ3dnZEdocGN5NWtaWEIwYUNBOUlHNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMGFHbHpMblJsZUhSMWNtVXViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWFJvYVhNdWRHVjRkSFZ5WlZ0cFhTNXBiV0ZuWlM1M2FXUjBhQ0E5SUdVc0lIUm9hWE11ZEdWNGRIVnlaVnRwWFM1cGJXRm5aUzVvWldsbmFIUWdQU0IwTENCMGFHbHpMblJsZUhSMWNtVmJhVjB1YVcxaFoyVXVaR1Z3ZEdnZ1BTQnVPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbVJwYzNCdmMyVW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRtbGxkM0J2Y25RdWMyVjBLREFzSURBc0lHVXNJSFFwTENCMGFHbHpMbk5qYVhOemIzSXVjMlYwS0RBc0lEQXNJR1VzSUhRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrYVhOd2IzTmxLQ2tzSUhSb2FYTXVkMmxrZEdnZ1BTQmxMbmRwWkhSb0xDQjBhR2x6TG1obGFXZG9kQ0E5SUdVdWFHVnBaMmgwTENCMGFHbHpMbVJsY0hSb0lEMGdaUzVrWlhCMGFDd2dkR2hwY3k1MmFXVjNjRzl5ZEM1elpYUW9NQ3dnTUN3Z2RHaHBjeTUzYVdSMGFDd2dkR2hwY3k1b1pXbG5hSFFwTENCMGFHbHpMbk5qYVhOemIzSXVjMlYwS0RBc0lEQXNJSFJvYVhNdWQybGtkR2dzSUhSb2FYTXVhR1ZwWjJoMEtTd2dkR2hwY3k1a1pYQjBhRUoxWm1abGNpQTlJR1V1WkdWd2RHaENkV1ptWlhJc0lIUm9hWE11YzNSbGJtTnBiRUoxWm1abGNpQTlJR1V1YzNSbGJtTnBiRUoxWm1abGNpd2dkR2hwY3k1a1pYQjBhRlJsZUhSMWNtVWdQU0JsTG1SbGNIUm9WR1Y0ZEhWeVpTd2dkR2hwY3k1MFpYaDBkWEpsTG14bGJtZDBhQ0E5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVkR1Y0ZEhWeVpTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BkR2hwY3k1MFpYaDBkWEpsVzNSZElEMGdaUzUwWlhoMGRYSmxXM1JkTG1Oc2IyNWxLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q24wN0NscGpMbkJ5YjNSdmRIbHdaUzVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwZ0lUQTdDblpoY2lCWWN5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FYUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpQTlJSHQ5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMExDQnVLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuTmhiWEJzWlhNZ1BTQTBMQ0IwYUdsekxtbG5ibTl5WlVSbGNIUm9SbTl5VFhWc2RHbHpZVzF3YkdWRGIzQjVJRDBnYmk1cFoyNXZjbVZFWlhCMGFDQWhQVDBnZG05cFpDQXdJRDhnYmk1cFoyNXZjbVZFWlhCMGFDQTZJQ0V3TENCMGFHbHpMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0E5SUc0dWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElDRTlQU0IyYjJsa0lEQWdQeUJ1TG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBNklDRXhMQ0IwYUdsekxuVnpaVkpsYm1SbGNtSjFabVpsY2lBOUlIUm9hWE11ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQwOVBTQWhNVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1TG1OaGJHd29kR2hwY3l3Z1pTa3NJSFJvYVhNdWMyRnRjR3hsY3lBOUlHVXVjMkZ0Y0d4bGN5d2dkR2hwY3k1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VZ1BTQmxMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU3dnZEdocGN5NTFjMlZTWlc1a1pYSmlkV1ptWlhJZ1BTQmxMblZ6WlZKbGJtUmxjbUoxWm1abGNpd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1dITXVjSEp2ZEc5MGVYQmxMbWx6VjJWaVIweE5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENBOUlDRXdPd3AyWVhJZ1ozUWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTUN3Z2RDQTlJREFzSUc0Z1BTQXdMQ0JwSUQwZ01TbDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYM2tnUFNCMExDQjBhR2x6TGw5NklEMGdiaXdnZEdocGN5NWZkeUE5SUdrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2MyeGxjbkFvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsRjFZWFJsY201cGIyNDZJRk4wWVhScFl5QXVjMnhsY25Bb0tTQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ2NXMHVjMnhsY25CUmRXRjBaWEp1YVc5dWN5Z2djV0VzSUhGaUxDQjBJQ2tnYVc1emRHVmhaQzRpS1N3Z2JpNXpiR1Z5Y0ZGMVlYUmxjbTVwYjI1ektHVXNJSFFzSUdrcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklITnNaWEp3Um14aGRDaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0J1VzJrZ0t5QXdYU3dnWXlBOUlHNWJhU0FySURGZExDQm9JRDBnYmx0cElDc2dNbDBzSUhVZ1BTQnVXMmtnS3lBelhTd2daQ0E5SUhKYmJ5QXJJREJkTENCbUlEMGdjbHR2SUNzZ01WMHNJRzBnUFNCeVcyOGdLeUF5WFN3Z2VDQTlJSEpiYnlBcklETmRPd29nSUNBZ0lDQWdJR2xtSUNoaElEMDlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZiZENBcklEQmRJRDBnYkN3Z1pWdDBJQ3NnTVYwZ1BTQmpMQ0JsVzNRZ0t5QXlYU0E5SUdnc0lHVmJkQ0FySUROZElEMGdkVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9ZU0E5UFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCbFczUWdLeUF3WFNBOUlHUXNJR1ZiZENBcklERmRJRDBnWml3Z1pWdDBJQ3NnTWwwZ1BTQnRMQ0JsVzNRZ0t5QXpYU0E5SUhnN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hVZ0lUMDlJSGdnZkh3Z2JDQWhQVDBnWkNCOGZDQmpJQ0U5UFNCbUlIeDhJR2dnSVQwOUlHMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNBeElDMGdZU3dnWnlBOUlHd2dLaUJrSUNzZ1l5QXFJR1lnS3lCb0lDb2diU0FySUhVZ0tpQjRMQ0J3SUQwZ1p5QStQU0F3SUQ4Z01TQTZJQzB4TENCZklEMGdNU0F0SUdjZ0tpQm5Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9YeUErSUU1MWJXSmxjaTVGVUZOSlRFOU9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRTFoZEdndWMzRnlkQ2hmS1N3Z1FTQTlJRTFoZEdndVlYUmhiaklvWWl3Z1p5QXFJSEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGlBOUlFMWhkR2d1YzJsdUtIWWdLaUJCS1NBdklHSXNJR0VnUFNCTllYUm9Mbk5wYmloaElDb2dRU2tnTHlCaU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ1lTQXFJSEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzSUQwZ2JDQXFJSFlnS3lCa0lDb2dlU3dnWXlBOUlHTWdLaUIySUNzZ1ppQXFJSGtzSUdnZ1BTQm9JQ29nZGlBcklHMGdLaUI1TENCMUlEMGdkU0FxSUhZZ0t5QjRJQ29nZVN3Z2RpQTlQVDBnTVNBdElHRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaU1TQTlJREVnTHlCTllYUm9Mbk54Y25Rb2JDQXFJR3dnS3lCaklDb2dZeUFySUdnZ0tpQm9JQ3NnZFNBcUlIVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiQ0FxUFNCaU1Td2dZeUFxUFNCaU1Td2dhQ0FxUFNCaU1Td2dkU0FxUFNCaU1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbFczUmRJRDBnYkN3Z1pWdDBJQ3NnTVYwZ1BTQmpMQ0JsVzNRZ0t5QXlYU0E5SUdnc0lHVmJkQ0FySUROZElEMGdkVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJ0ZFd4MGFYQnNlVkYxWVhSbGNtNXBiMjV6Um14aGRDaGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVXMmxkTENCc0lEMGdibHRwSUNzZ01WMHNJR01nUFNCdVcya2dLeUF5WFN3Z2FDQTlJRzViYVNBcklETmRMQ0IxSUQwZ2NsdHZYU3dnWkNBOUlISmJieUFySURGZExDQm1JRDBnY2x0dklDc2dNbDBzSUcwZ1BTQnlXMjhnS3lBelhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWdDBYU0E5SUdFZ0tpQnRJQ3NnYUNBcUlIVWdLeUJzSUNvZ1ppQXRJR01nS2lCa0xDQmxXM1FnS3lBeFhTQTlJR3dnS2lCdElDc2dhQ0FxSUdRZ0t5QmpJQ29nZFNBdElHRWdLaUJtTENCbFczUWdLeUF5WFNBOUlHTWdLaUJ0SUNzZ2FDQXFJR1lnS3lCaElDb2daQ0F0SUd3Z0tpQjFMQ0JsVzNRZ0t5QXpYU0E5SUdnZ0tpQnRJQzBnWVNBcUlIVWdMU0JzSUNvZ1pDQXRJR01nS2lCbUxDQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZzdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2VDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdVc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1RzS0lDQWdJSDBLSUNBZ0lHZGxkQ0I1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNrZ1BTQmxMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2VpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVqc0tJQ0FnSUgwS0lDQWdJSE5sZENCNktHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTZJRDBnWlN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSGNvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2M3Q2lBZ0lDQjlDaUFnSUNCelpYUWdkeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZHlBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ1BTQmxMQ0IwYUdsekxsOTVJRDBnZEN3Z2RHaHBjeTVmZWlBOUlHNHNJSFJvYVhNdVgzY2dQU0JwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NWZlQ3dnZEdocGN5NWZlU3dnZEdocGN5NWZlaXdnZEdocGN5NWZkeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0E5SUdVdWVDd2dkR2hwY3k1ZmVTQTlJR1V1ZVN3Z2RHaHBjeTVmZWlBOUlHVXVlaXdnZEdocGN5NWZkeUE5SUdVdWR5d2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVWMWJHVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvSVNobElDWW1JR1V1YVhORmRXeGxjaWtwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVkVoU1JVVXVVWFZoZEdWeWJtbHZiam9nTG5ObGRFWnliMjFGZFd4bGNpZ3BJRzV2ZHlCbGVIQmxZM1J6SUdGdUlFVjFiR1Z5SUhKdmRHRjBhVzl1SUhKaGRHaGxjaUIwYUdGdUlHRWdWbVZqZEc5eU15QmhibVFnYjNKa1pYSXVJaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTGw5NExDQnBJRDBnWlM1ZmVTd2djaUE5SUdVdVgzb3NJRzhnUFNCbExsOXZjbVJsY2l3Z1lTQTlJRTFoZEdndVkyOXpMQ0JzSUQwZ1RXRjBhQzV6YVc0c0lHTWdQU0JoS0c0Z0x5QXlLU3dnYUNBOUlHRW9hU0F2SURJcExDQjFJRDBnWVNoeUlDOGdNaWtzSUdRZ1BTQnNLRzRnTHlBeUtTd2daaUE5SUd3b2FTQXZJRElwTENCdElEMGdiQ2h5SUM4Z01pazdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tHOHBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pZV1ZvaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHUWdLaUJvSUNvZ2RTQXJJR01nS2lCbUlDb2diU3dnZEdocGN5NWZlU0E5SUdNZ0tpQm1JQ29nZFNBdElHUWdLaUJvSUNvZ2JTd2dkR2hwY3k1ZmVpQTlJR01nS2lCb0lDb2diU0FySUdRZ0tpQm1JQ29nZFN3Z2RHaHBjeTVmZHlBOUlHTWdLaUJvSUNvZ2RTQXRJR1FnS2lCbUlDb2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlpXRm9pT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdRZ0tpQm9JQ29nZFNBcklHTWdLaUJtSUNvZ2JTd2dkR2hwY3k1ZmVTQTlJR01nS2lCbUlDb2dkU0F0SUdRZ0tpQm9JQ29nYlN3Z2RHaHBjeTVmZWlBOUlHTWdLaUJvSUNvZ2JTQXRJR1FnS2lCbUlDb2dkU3dnZEdocGN5NWZkeUE5SUdNZ0tpQm9JQ29nZFNBcklHUWdLaUJtSUNvZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKYVdGa2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1FnS2lCb0lDb2dkU0F0SUdNZ0tpQm1JQ29nYlN3Z2RHaHBjeTVmZVNBOUlHTWdLaUJtSUNvZ2RTQXJJR1FnS2lCb0lDb2diU3dnZEdocGN5NWZlaUE5SUdNZ0tpQm9JQ29nYlNBcklHUWdLaUJtSUNvZ2RTd2dkR2hwY3k1ZmR5QTlJR01nS2lCb0lDb2dkU0F0SUdRZ0tpQm1JQ29nYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0phV1ZnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHUWdLaUJvSUNvZ2RTQXRJR01nS2lCbUlDb2diU3dnZEdocGN5NWZlU0E5SUdNZ0tpQm1JQ29nZFNBcklHUWdLaUJvSUNvZ2JTd2dkR2hwY3k1ZmVpQTlJR01nS2lCb0lDb2diU0F0SUdRZ0tpQm1JQ29nZFN3Z2RHaHBjeTVmZHlBOUlHTWdLaUJvSUNvZ2RTQXJJR1FnS2lCbUlDb2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlpXbGdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdRZ0tpQm9JQ29nZFNBcklHTWdLaUJtSUNvZ2JTd2dkR2hwY3k1ZmVTQTlJR01nS2lCbUlDb2dkU0FySUdRZ0tpQm9JQ29nYlN3Z2RHaHBjeTVmZWlBOUlHTWdLaUJvSUNvZ2JTQXRJR1FnS2lCbUlDb2dkU3dnZEdocGN5NWZkeUE5SUdNZ0tpQm9JQ29nZFNBdElHUWdLaUJtSUNvZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdsa2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1FnS2lCb0lDb2dkU0F0SUdNZ0tpQm1JQ29nYlN3Z2RHaHBjeTVmZVNBOUlHTWdLaUJtSUNvZ2RTQXRJR1FnS2lCb0lDb2diU3dnZEdocGN5NWZlaUE5SUdNZ0tpQm9JQ29nYlNBcklHUWdLaUJtSUNvZ2RTd2dkR2hwY3k1ZmR5QTlJR01nS2lCb0lDb2dkU0FySUdRZ0tpQm1JQ29nYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UmRXRjBaWEp1YVc5dU9pQXVjMlYwUm5KdmJVVjFiR1Z5S0NrZ1pXNWpiM1Z1ZEdWeVpXUWdZVzRnZFc1cmJtOTNiaUJ2Y21SbGNqb2dJaUFySUc4cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnSVRFZ0ppWWdkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVGNGFYTkJibWRzWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwSUM4Z01pd2dhU0E5SUUxaGRHZ3VjMmx1S0c0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0SUQwZ1pTNTRJQ29nYVN3Z2RHaHBjeTVmZVNBOUlHVXVlU0FxSUdrc0lIUm9hWE11WDNvZ1BTQmxMbm9nS2lCcExDQjBhR2x6TGw5M0lEMGdUV0YwYUM1amIzTW9iaWtzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbVZzWlcxbGJuUnpMQ0J1SUQwZ2RGc3dYU3dnYVNBOUlIUmJORjBzSUhJZ1BTQjBXemhkTENCdklEMGdkRnN4WFN3Z1lTQTlJSFJiTlYwc0lHd2dQU0IwV3psZExDQmpJRDBnZEZzeVhTd2dhQ0E5SUhSYk5sMHNJSFVnUFNCMFd6RXdYU3dnWkNBOUlHNGdLeUJoSUNzZ2RUc0tJQ0FnSUNBZ0lDQnBaaUFvWkNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNBdU5TQXZJRTFoZEdndWMzRnlkQ2hrSUNzZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2NnUFNBdU1qVWdMeUJtTENCMGFHbHpMbDk0SUQwZ0tHZ2dMU0JzS1NBcUlHWXNJSFJvYVhNdVgza2dQU0FvY2lBdElHTXBJQ29nWml3Z2RHaHBjeTVmZWlBOUlDaHZJQzBnYVNrZ0tpQm1Pd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYmlBK0lHRWdKaVlnYmlBK0lIVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1l4SUQwZ01pQXFJRTFoZEdndWMzRnlkQ2d4SUNzZ2JpQXRJR0VnTFNCMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZkeUE5SUNob0lDMGdiQ2tnTHlCbU1Td2dkR2hwY3k1ZmVDQTlJQzR5TlNBcUlHWXhMQ0IwYUdsekxsOTVJRDBnS0drZ0t5QnZLU0F2SUdZeExDQjBhR2x6TGw5NklEMGdLSElnS3lCaktTQXZJR1l4T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1lTQStJSFVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZeUlEMGdNaUFxSUUxaGRHZ3VjM0Z5ZENneElDc2dZU0F0SUc0Z0xTQjFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZHlBOUlDaHlJQzBnWXlrZ0x5Qm1NaXdnZEdocGN5NWZlQ0E5SUNocElDc2dieWtnTHlCbU1pd2dkR2hwY3k1ZmVTQTlJQzR5TlNBcUlHWXlMQ0IwYUdsekxsOTZJRDBnS0d3Z0t5Qm9LU0F2SUdZeU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbU15QTlJRElnS2lCTllYUm9Mbk54Y25Rb01TQXJJSFVnTFNCdUlDMGdZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNjZ1BTQW9ieUF0SUdrcElDOGdaak1zSUhSb2FYTXVYM2dnUFNBb2NpQXJJR01wSUM4Z1pqTXNJSFJvYVhNdVgza2dQU0FvYkNBcklHZ3BJQzhnWmpNc0lIUm9hWE11WDNvZ1BTQXVNalVnS2lCbU16c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFWYm1sMFZtVmpkRzl5Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JsTG1SdmRDaDBLU0FySURFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z1BDQk9kVzFpWlhJdVJWQlRTVXhQVGlBL0lDaHVJRDBnTUN3Z1RXRjBhQzVoWW5Nb1pTNTRLU0ErSUUxaGRHZ3VZV0p6S0dVdWVpa2dQeUFvZEdocGN5NWZlQ0E5SUMxbExua3NJSFJvYVhNdVgza2dQU0JsTG5nc0lIUm9hWE11WDNvZ1BTQXdMQ0IwYUdsekxsOTNJRDBnYmlrZ09pQW9kR2hwY3k1ZmVDQTlJREFzSUhSb2FYTXVYM2tnUFNBdFpTNTZMQ0IwYUdsekxsOTZJRDBnWlM1NUxDQjBhR2x6TGw5M0lEMGdiaWtwSURvZ0tIUm9hWE11WDNnZ1BTQmxMbmtnS2lCMExub2dMU0JsTG5vZ0tpQjBMbmtzSUhSb2FYTXVYM2tnUFNCbExub2dLaUIwTG5nZ0xTQmxMbmdnS2lCMExub3NJSFJvYVhNdVgzb2dQU0JsTG5nZ0tpQjBMbmtnTFNCbExua2dLaUIwTG5nc0lIUm9hWE11WDNjZ1BTQnVLU3dnZEdocGN5NXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lIMEtJQ0FnSUdGdVoyeGxWRzhvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBeUlDb2dUV0YwYUM1aFkyOXpLRTFoZEdndVlXSnpLRzEwS0hSb2FYTXVaRzkwS0dVcExDQXRNU3dnTVNrcEtUc0tJQ0FnSUgwS0lDQWdJSEp2ZEdGMFpWUnZkMkZ5WkhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWhibWRzWlZSdktHVXBPd29nSUNBZ0lDQWdJR2xtSUNodUlEMDlQU0F3S1NCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlFMWhkR2d1YldsdUtERXNJSFFnTHlCdUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6YkdWeWNDaGxMQ0JwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdsa1pXNTBhWFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENnd0xDQXdMQ0F3TENBeEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZG1WeWRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIyNXFkV2RoZEdVb0tUc0tJQ0FnSUgwS0lDQWdJR052Ym1wMVoyRjBaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0FxUFNBdE1Td2dkR2hwY3k1ZmVTQXFQU0F0TVN3Z2RHaHBjeTVmZWlBcVBTQXRNU3dnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaRzkwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBcUlHVXVYM2dnS3lCMGFHbHpMbDk1SUNvZ1pTNWZlU0FySUhSb2FYTXVYM29nS2lCbExsOTZJQ3NnZEdocGN5NWZkeUFxSUdVdVgzYzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHaFRjU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0FxSUhSb2FYTXVYM2dnS3lCMGFHbHpMbDk1SUNvZ2RHaHBjeTVmZVNBcklIUm9hWE11WDNvZ0tpQjBhR2x6TGw5NklDc2dkR2hwY3k1ZmR5QXFJSFJvYVhNdVgzYzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHZ29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2gwYUdsekxsOTRJQ29nZEdocGN5NWZlQ0FySUhSb2FYTXVYM2tnS2lCMGFHbHpMbDk1SUNzZ2RHaHBjeTVmZWlBcUlIUm9hWE11WDNvZ0t5QjBhR2x6TGw5M0lDb2dkR2hwY3k1ZmR5azdDaUFnSUNCOUNpQWdJQ0J1YjNKdFlXeHBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDA5UFNBd0lEOGdLSFJvYVhNdVgzZ2dQU0F3TENCMGFHbHpMbDk1SUQwZ01Dd2dkR2hwY3k1ZmVpQTlJREFzSUhSb2FYTXVYM2NnUFNBeEtTQTZJQ2hsSUQwZ01TQXZJR1VzSUhSb2FYTXVYM2dnUFNCMGFHbHpMbDk0SUNvZ1pTd2dkR2hwY3k1ZmVTQTlJSFJvYVhNdVgza2dLaUJsTENCMGFHbHpMbDk2SUQwZ2RHaHBjeTVmZWlBcUlHVXNJSFJvYVhNdVgzY2dQU0IwYUdsekxsOTNJQ29nWlNrc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVWFZoZEdWeWJtbHZiam9nTG0xMWJIUnBjR3g1S0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdWJYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWJYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWN5aGxMQ0IwS1NrZ09pQjBhR2x6TG0xMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbFJkV0YwWlhKdWFXOXVjeWhsTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1VVhWaGRHVnlibWx2Ym5Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1ZmVDd2dhU0E5SUdVdVgza3NJSElnUFNCbExsOTZMQ0J2SUQwZ1pTNWZkeXdnWVNBOUlIUXVYM2dzSUd3Z1BTQjBMbDk1TENCaklEMGdkQzVmZWl3Z2FDQTlJSFF1WDNjN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCdUlDb2dhQ0FySUc4Z0tpQmhJQ3NnYVNBcUlHTWdMU0J5SUNvZ2JDd2dkR2hwY3k1ZmVTQTlJR2tnS2lCb0lDc2dieUFxSUd3Z0t5QnlJQ29nWVNBdElHNGdLaUJqTENCMGFHbHpMbDk2SUQwZ2NpQXFJR2dnS3lCdklDb2dZeUFySUc0Z0tpQnNJQzBnYVNBcUlHRXNJSFJvYVhNdVgzY2dQU0J2SUNvZ2FDQXRJRzRnS2lCaElDMGdhU0FxSUd3Z0xTQnlJQ29nWXl3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJ4bGNuQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQXdLU0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ01Ta2djbVYwZFhKdUlIUm9hWE11WTI5d2VTaGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgzZ3NJR2tnUFNCMGFHbHpMbDk1TENCeUlEMGdkR2hwY3k1ZmVpd2dieUE5SUhSb2FYTXVYM2NzSUdFZ1BTQnZJQ29nWlM1ZmR5QXJJRzRnS2lCbExsOTRJQ3NnYVNBcUlHVXVYM2tnS3lCeUlDb2daUzVmZWpzS0lDQWdJQ0FnSUNCcFppQW9ZU0E4SURBZ1B5QW9kR2hwY3k1ZmR5QTlJQzFsTGw5M0xDQjBhR2x6TGw5NElEMGdMV1V1WDNnc0lIUm9hWE11WDNrZ1BTQXRaUzVmZVN3Z2RHaHBjeTVmZWlBOUlDMWxMbDk2TENCaElEMGdMV0VwSURvZ2RHaHBjeTVqYjNCNUtHVXBMQ0JoSUQ0OUlERXBJSEpsZEhWeWJpQjBhR2x6TGw5M0lEMGdieXdnZEdocGN5NWZlQ0E5SUc0c0lIUm9hWE11WDNrZ1BTQnBMQ0IwYUdsekxsOTZJRDBnY2l3Z2RHaHBjenNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJREVnTFNCaElDb2dZVHNLSUNBZ0lDQWdJQ0JwWmlBb2JDQThQU0JPZFcxaVpYSXVSVkJUU1V4UFRpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SURFZ0xTQjBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkeUE5SUdZZ0tpQnZJQ3NnZENBcUlIUm9hWE11WDNjc0lIUm9hWE11WDNnZ1BTQm1JQ29nYmlBcklIUWdLaUIwYUdsekxsOTRMQ0IwYUdsekxsOTVJRDBnWmlBcUlHa2dLeUIwSUNvZ2RHaHBjeTVmZVN3Z2RHaHBjeTVmZWlBOUlHWWdLaUJ5SUNzZ2RDQXFJSFJvYVhNdVgzb3NJSFJvYVhNdWJtOXliV0ZzYVhwbEtDa3NJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCTllYUm9Mbk54Y25Rb2JDa3NJR2dnUFNCTllYUm9MbUYwWVc0eUtHTXNJR0VwTENCMUlEMGdUV0YwYUM1emFXNG9LREVnTFNCMEtTQXFJR2dwSUM4Z1l5d2daQ0E5SUUxaGRHZ3VjMmx1S0hRZ0tpQm9LU0F2SUdNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2NnUFNCdklDb2dkU0FySUhSb2FYTXVYM2NnS2lCa0xDQjBhR2x6TGw5NElEMGdiaUFxSUhVZ0t5QjBhR2x6TGw5NElDb2daQ3dnZEdocGN5NWZlU0E5SUdrZ0tpQjFJQ3NnZEdocGN5NWZlU0FxSUdRc0lIUm9hWE11WDNvZ1BTQnlJQ29nZFNBcklIUm9hWE11WDNvZ0tpQmtMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpiR1Z5Y0ZGMVlYUmxjbTVwYjI1ektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OdmNIa29aU2t1YzJ4bGNuQW9kQ3dnYmlrN0NpQWdJQ0I5Q2lBZ0lDQnlZVzVrYjIwb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMElEMGdUV0YwYUM1emNYSjBLREVnTFNCbEtTd2diaUE5SUUxaGRHZ3VjM0Z5ZENobEtTd2dhU0E5SURJZ0tpQk5ZWFJvTGxCSklDb2dUV0YwYUM1eVlXNWtiMjBvS1N3Z2NpQTlJRElnS2lCTllYUm9MbEJKSUNvZ1RXRjBhQzV5WVc1a2IyMG9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9kQ0FxSUUxaGRHZ3VZMjl6S0drcExDQnVJQ29nVFdGMGFDNXphVzRvY2lrc0lHNGdLaUJOWVhSb0xtTnZjeWh5S1N3Z2RDQXFJRTFoZEdndWMybHVLR2twS1RzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVYM2dnUFQwOUlIUm9hWE11WDNnZ0ppWWdaUzVmZVNBOVBUMGdkR2hwY3k1ZmVTQW1KaUJsTGw5NklEMDlQU0IwYUdsekxsOTZJQ1ltSUdVdVgzY2dQVDA5SUhSb2FYTXVYM2M3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVmJkRjBzSUhSb2FYTXVYM2tnUFNCbFczUWdLeUF4WFN3Z2RHaHBjeTVmZWlBOUlHVmJkQ0FySURKZExDQjBhR2x6TGw5M0lEMGdaVnQwSUNzZ00xMHNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZRWEp5WVhrb1pTQTlJRnRkTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsVzNSZElEMGdkR2hwY3k1ZmVDd2daVnQwSUNzZ01WMGdQU0IwYUdsekxsOTVMQ0JsVzNRZ0t5QXlYU0E5SUhSb2FYTXVYM29zSUdWYmRDQXJJRE5kSUQwZ2RHaHBjeTVmZHl3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElEMGdaUzVuWlhSWUtIUXBMQ0IwYUdsekxsOTVJRDBnWlM1blpYUlpLSFFwTENCMGFHbHpMbDk2SUQwZ1pTNW5aWFJhS0hRcExDQjBhR2x6TGw5M0lEMGdaUzVuWlhSWEtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdYMjl1UTJoaGJtZGxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5QTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwSUh0OUNuMDdDbWQwTG5CeWIzUnZkSGx3WlM1cGMxRjFZWFJsY201cGIyNGdQU0FoTURzS2RtRnlJRTBnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Dd2dkQ0E5SURBc0lHNGdQU0F3S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbmdnUFNCbExDQjBhR2x6TG5rZ1BTQjBMQ0IwYUdsekxub2dQU0J1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHVJRDBnZEdocGN5NTZLU3dnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ2RDd2dkR2hwY3k1NklEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdVc0lIUm9hWE11ZVNBOUlHVXNJSFJvYVhNdWVpQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZWlBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjIxd2IyNWxiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSE4zYVhSamFDaGxLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F3T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTRJRDBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxua2dQU0IwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWVpQTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lhVzVrWlhnZ2FYTWdiM1YwSUc5bUlISmhibWRsT2lBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUTI5dGNHOXVaVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxubzdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbWx1WkdWNElHbHpJRzkxZENCdlppQnlZVzVuWlRvZ0lpQXJJR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5nc0lIUm9hWE11ZVN3Z2RHaHBjeTU2S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ3NJSFJvYVhNdWVTQTlJR1V1ZVN3Z2RHaHBjeTU2SUQwZ1pTNTZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV1JrS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbUZrWkNncElHNXZkeUJ2Ym14NUlHRmpZMlZ3ZEhNZ2IyNWxJR0Z5WjNWdFpXNTBMaUJWYzJVZ0xtRmtaRlpsWTNSdmNuTW9JR0VzSUdJZ0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxtRmtaRlpsWTNSdmNuTW9aU3dnZENrcElEb2dLSFJvYVhNdWVDQXJQU0JsTG5nc0lIUm9hWE11ZVNBclBTQmxMbmtzSUhSb2FYTXVlaUFyUFNCbExub3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdZV1JrVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ3M5SUdVc0lIUm9hWE11ZVNBclBTQmxMQ0IwYUdsekxub2dLejBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pGWmxZM1J2Y25Nb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTG5nZ0t5QjBMbmdzSUhSb2FYTXVlU0E5SUdVdWVTQXJJSFF1ZVN3Z2RHaHBjeTU2SUQwZ1pTNTZJQ3NnZEM1NkxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtVMk5oYkdWa1ZtVmpkRzl5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJR1V1ZUNBcUlIUXNJSFJvYVhNdWVTQXJQU0JsTG5rZ0tpQjBMQ0IwYUdsekxub2dLejBnWlM1NklDb2dkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4xWWlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlIWnZhV1FnTUNBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqTTZJQzV6ZFdJb0tTQnViM2NnYjI1c2VTQmhZMk5sY0hSeklHOXVaU0JoY21kMWJXVnVkQzRnVlhObElDNXpkV0pXWldOMGIzSnpLQ0JoTENCaUlDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXpkV0pXWldOMGIzSnpLR1VzSUhRcEtTQTZJQ2gwYUdsekxuZ2dMVDBnWlM1NExDQjBhR2x6TG5rZ0xUMGdaUzU1TENCMGFHbHpMbm9nTFQwZ1pTNTZMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJSE4xWWxOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0F0UFNCbExDQjBhR2x6TG5rZ0xUMGdaU3dnZEdocGN5NTZJQzA5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDMGdkQzU0TENCMGFHbHpMbmtnUFNCbExua2dMU0IwTG5rc0lIUm9hWE11ZWlBOUlHVXVlaUF0SUhRdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG0xMWJIUnBjR3g1S0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdWJYVnNkR2x3YkhsV1pXTjBiM0p6S0NCaExDQmlJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV0ZFd4MGFYQnNlVlpsWTNSdmNuTW9aU3dnZENrcElEb2dLSFJvYVhNdWVDQXFQU0JsTG5nc0lIUm9hWE11ZVNBcVBTQmxMbmtzSUhSb2FYTXVlaUFxUFNCbExub3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0tqMGdaU3dnZEdocGN5NTVJQ285SUdVc0lIUm9hWE11ZWlBcVBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIbFdaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDb2dkQzU0TENCMGFHbHpMbmtnUFNCbExua2dLaUIwTG5rc0lIUm9hWE11ZWlBOUlHVXVlaUFxSUhRdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1UlhWc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUNZbUlHVXVhWE5GZFd4bGNpQjhmQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdVlYQndiSGxGZFd4bGNpZ3BJRzV2ZHlCbGVIQmxZM1J6SUdGdUlFVjFiR1Z5SUhKdmRHRjBhVzl1SUhKaGRHaGxjaUIwYUdGdUlHRWdWbVZqZEc5eU15QmhibVFnYjNKa1pYSXVJaWtzSUhSb2FYTXVZWEJ3YkhsUmRXRjBaWEp1YVc5dUtIbHNMbk5sZEVaeWIyMUZkV3hsY2lobEtTazdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVRjRhWE5CYm1kc1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEJ3YkhsUmRXRjBaWEp1YVc5dUtIbHNMbk5sZEVaeWIyMUJlR2x6UVc1bmJHVW9aU3dnZENrcE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGd6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11ZUN3Z2JpQTlJSFJvYVhNdWVTd2dhU0E5SUhSb2FYTXVlaXdnY2lBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlISmJNRjBnS2lCMElDc2djbHN6WFNBcUlHNGdLeUJ5V3paZElDb2dhU3dnZEdocGN5NTVJRDBnY2xzeFhTQXFJSFFnS3lCeVd6UmRJQ29nYmlBcklISmJOMTBnS2lCcExDQjBhR2x6TG5vZ1BTQnlXekpkSUNvZ2RDQXJJSEpiTlYwZ0tpQnVJQ3NnY2xzNFhTQXFJR2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVNXZjbTFoYkUxaGRISnBlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEJ3YkhsTllYUnlhWGd6S0dVcExtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWVDd2diaUE5SUhSb2FYTXVlU3dnYVNBOUlIUm9hWE11ZWl3Z2NpQTlJR1V1Wld4bGJXVnVkSE1zSUc4Z1BTQXhJQzhnS0hKYk0xMGdLaUIwSUNzZ2NsczNYU0FxSUc0Z0t5QnlXekV4WFNBcUlHa2dLeUJ5V3pFMVhTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlDaHlXekJkSUNvZ2RDQXJJSEpiTkYwZ0tpQnVJQ3NnY2xzNFhTQXFJR2tnS3lCeVd6RXlYU2tnS2lCdkxDQjBhR2x6TG5rZ1BTQW9jbHN4WFNBcUlIUWdLeUJ5V3pWZElDb2diaUFySUhKYk9WMGdLaUJwSUNzZ2Nsc3hNMTBwSUNvZ2J5d2dkR2hwY3k1NklEMGdLSEpiTWwwZ0tpQjBJQ3NnY2xzMlhTQXFJRzRnS3lCeVd6RXdYU0FxSUdrZ0t5QnlXekUwWFNrZ0tpQnZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsUmRXRjBaWEp1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWVDd2diaUE5SUhSb2FYTXVlU3dnYVNBOUlIUm9hWE11ZWl3Z2NpQTlJR1V1ZUN3Z2J5QTlJR1V1ZVN3Z1lTQTlJR1V1ZWl3Z2JDQTlJR1V1ZHl3Z1l5QTlJR3dnS2lCMElDc2dieUFxSUdrZ0xTQmhJQ29nYml3Z2FDQTlJR3dnS2lCdUlDc2dZU0FxSUhRZ0xTQnlJQ29nYVN3Z2RTQTlJR3dnS2lCcElDc2djaUFxSUc0Z0xTQnZJQ29nZEN3Z1pDQTlJQzF5SUNvZ2RDQXRJRzhnS2lCdUlDMGdZU0FxSUdrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdNZ0tpQnNJQ3NnWkNBcUlDMXlJQ3NnYUNBcUlDMWhJQzBnZFNBcUlDMXZMQ0IwYUdsekxua2dQU0JvSUNvZ2JDQXJJR1FnS2lBdGJ5QXJJSFVnS2lBdGNpQXRJR01nS2lBdFlTd2dkR2hwY3k1NklEMGdkU0FxSUd3Z0t5QmtJQ29nTFdFZ0t5QmpJQ29nTFc4Z0xTQm9JQ29nTFhJc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCd2NtOXFaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb1pTNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXBMbUZ3Y0d4NVRXRjBjbWw0TkNobExuQnliMnBsWTNScGIyNU5ZWFJ5YVhncE93b2dJQ0FnZlFvZ0lDQWdkVzV3Y205cVpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvWlM1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaU2t1WVhCd2JIbE5ZWFJ5YVhnMEtHVXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5tYjNKdFJHbHlaV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWVDd2diaUE5SUhSb2FYTXVlU3dnYVNBOUlIUm9hWE11ZWl3Z2NpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJSEpiTUYwZ0tpQjBJQ3NnY2xzMFhTQXFJRzRnS3lCeVd6aGRJQ29nYVN3Z2RHaHBjeTU1SUQwZ2Nsc3hYU0FxSUhRZ0t5QnlXelZkSUNvZ2JpQXJJSEpiT1YwZ0tpQnBMQ0IwYUdsekxub2dQU0J5V3pKZElDb2dkQ0FySUhKYk5sMGdLaUJ1SUNzZ2Nsc3hNRjBnS2lCcExDQjBhR2x6TG01dmNtMWhiR2w2WlNncE93b2dJQ0FnZlFvZ0lDQWdaR2wyYVdSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDODlJR1V1ZUN3Z2RHaHBjeTU1SUM4OUlHVXVlU3dnZEdocGN5NTZJQzg5SUdVdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBkbWxrWlZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbFRZMkZzWVhJb01TQXZJR1VwT3dvZ0lDQWdmUW9nSUNBZ2JXbHVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnVFdGMGFDNXRhVzRvZEdocGN5NTRMQ0JsTG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG0xcGJpaDBhR2x6TG5rc0lHVXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3ViV2x1S0hSb2FYTXVlaXdnWlM1NktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVlQ3dnWlM1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1dFlYZ29kR2hwY3k1NUxDQmxMbmtwTENCMGFHbHpMbm9nUFNCTllYUm9MbTFoZUNoMGFHbHpMbm9zSUdVdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWJXRjRLR1V1ZUN3Z1RXRjBhQzV0YVc0b2RDNTRMQ0IwYUdsekxuZ3BLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRZWGdvWlM1NUxDQk5ZWFJvTG0xcGJpaDBMbmtzSUhSb2FYTXVlU2twTENCMGFHbHpMbm9nUFNCTllYUm9MbTFoZUNobExub3NJRTFoZEdndWJXbHVLSFF1ZWl3Z2RHaHBjeTU2S1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHRnRjRk5qWVd4aGNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWVDa3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQjBhR2x6TG5rcEtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTU2S1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHRnRjRXhsYm1kMGFDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1ScGRtbGtaVk5qWVd4aGNpaHVJSHg4SURFcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0UxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJRzRwS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1iRzl2Y2lncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05sYVd3b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG1ObGFXd29kR2hwY3k1NUtTd2dkR2hwY3k1NklEMGdUV0YwYUM1alpXbHNLSFJvYVhNdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnliM1Z1WkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV5YjNWdVpDaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG5KdmRXNWtLSFJvYVhNdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndWNtOTFibVFvZEdocGN5NTZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEp2ZFc1a1ZHOWFaWEp2S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCMGFHbHpMbmdnUENBd0lEOGdUV0YwYUM1alpXbHNLSFJvYVhNdWVDa2dPaUJOWVhSb0xtWnNiMjl5S0hSb2FYTXVlQ2tzSUhSb2FYTXVlU0E5SUhSb2FYTXVlU0E4SURBZ1B5Qk5ZWFJvTG1ObGFXd29kR2hwY3k1NUtTQTZJRTFoZEdndVpteHZiM0lvZEdocGN5NTVLU3dnZEdocGN5NTZJRDBnZEdocGN5NTZJRHdnTUNBL0lFMWhkR2d1WTJWcGJDaDBhR2x6TG5vcElEb2dUV0YwYUM1bWJHOXZjaWgwYUdsekxub3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdibVZuWVhSbEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQXRkR2hwY3k1NExDQjBhR2x6TG5rZ1BTQXRkR2hwY3k1NUxDQjBhR2x6TG5vZ1BTQXRkR2hwY3k1NkxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHOTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ29nWlM1NElDc2dkR2hwY3k1NUlDb2daUzU1SUNzZ2RHaHBjeTU2SUNvZ1pTNTZPd29nSUNBZ2ZRb2dJQ0FnYkdWdVozUm9VM0VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FxSUhSb2FYTXVlQ0FySUhSb2FYTXVlU0FxSUhSb2FYTXVlU0FySUhSb2FYTXVlaUFxSUhSb2FYTXVlanNLSUNBZ0lIMEtJQ0FnSUd4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXpjWEowS0hSb2FYTXVlQ0FxSUhSb2FYTXVlQ0FySUhSb2FYTXVlU0FxSUhSb2FYTXVlU0FySUhSb2FYTXVlaUFxSUhSb2FYTXVlaWs3Q2lBZ0lDQjlDaUFnSUNCdFlXNW9ZWFIwWVc1TVpXNW5kR2dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VZV0p6S0hSb2FYTXVlQ2tnS3lCTllYUm9MbUZpY3loMGFHbHpMbmtwSUNzZ1RXRjBhQzVoWW5Nb2RHaHBjeTU2S1RzS0lDQWdJSDBLSUNBZ0lHNXZjbTFoYkdsNlpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9kR2hwY3k1c1pXNW5kR2dvS1NCOGZDQXhLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFeGxibWQwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNhWHBsS0NrdWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNaWEp3S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJQ2hsTG5nZ0xTQjBhR2x6TG5ncElDb2dkQ3dnZEdocGN5NTVJQ3M5SUNobExua2dMU0IwYUdsekxua3BJQ29nZEN3Z2RHaHBjeTU2SUNzOUlDaGxMbm9nTFNCMGFHbHpMbm9wSUNvZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeGxjbkJXWldOMGIzSnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNzZ0tIUXVlQ0F0SUdVdWVDa2dLaUJ1TENCMGFHbHpMbmtnUFNCbExua2dLeUFvZEM1NUlDMGdaUzU1S1NBcUlHNHNJSFJvYVhNdWVpQTlJR1V1ZWlBcklDaDBMbm9nTFNCbExub3BJQ29nYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOeWIzTnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtTnliM056S0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdVkzSnZjM05XWldOMGIzSnpLQ0JoTENCaUlDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NWpjbTl6YzFabFkzUnZjbk1vWlN3Z2RDa3BJRG9nZEdocGN5NWpjbTl6YzFabFkzUnZjbk1vZEdocGN5d2daU2s3Q2lBZ0lDQjlDaUFnSUNCamNtOXpjMVpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNTRMQ0JwSUQwZ1pTNTVMQ0J5SUQwZ1pTNTZMQ0J2SUQwZ2RDNTRMQ0JoSUQwZ2RDNTVMQ0JzSUQwZ2RDNTZPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQnBJQ29nYkNBdElISWdLaUJoTENCMGFHbHpMbmtnUFNCeUlDb2dieUF0SUc0Z0tpQnNMQ0IwYUdsekxub2dQU0J1SUNvZ1lTQXRJR2tnS2lCdkxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NISnZhbVZqZEU5dVZtVmpkRzl5S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXViR1Z1WjNSb1UzRW9LVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnTUNrZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0RBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1a2IzUW9kR2hwY3lrZ0x5QjBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OdmNIa29aU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9iaWs3Q2lBZ0lDQjlDaUFnSUNCd2NtOXFaV04wVDI1UWJHRnVaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxdkxtTnZjSGtvZEdocGN5a3VjSEp2YW1WamRFOXVWbVZqZEc5eUtHVXBMQ0IwYUdsekxuTjFZaWhOYnlrN0NpQWdJQ0I5Q2lBZ0lDQnlaV1pzWldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1emRXSW9UVzh1WTI5d2VTaGxLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3lJQ29nZEdocGN5NWtiM1FvWlNrcEtUc0tJQ0FnSUgwS0lDQWdJR0Z1WjJ4bFZHOG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVFdGMGFDNXpjWEowS0hSb2FYTXViR1Z1WjNSb1UzRW9LU0FxSUdVdWJHVnVaM1JvVTNFb0tTazdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJREFwSUhKbGRIVnliaUJOWVhSb0xsQkpJQzhnTWpzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaRzkwS0dVcElDOGdkRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFkyOXpLRzEwS0c0c0lDMHhMQ0F4S1NrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNXpjWEowS0hSb2FYTXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1NElDMGdaUzU0TENCdUlEMGdkR2hwY3k1NUlDMGdaUzU1TENCcElEMGdkR2hwY3k1NklDMGdaUzU2T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUNvZ2RDQXJJRzRnS2lCdUlDc2dhU0FxSUdrN0NpQWdJQ0I5Q2lBZ0lDQnRZVzVvWVhSMFlXNUVhWE4wWVc1alpWUnZLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vZEdocGN5NTRJQzBnWlM1NEtTQXJJRTFoZEdndVlXSnpLSFJvYVhNdWVTQXRJR1V1ZVNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5vZ0xTQmxMbm9wT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZOd2FHVnlhV05oYkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMFJuSnZiVk53YUdWeWFXTmhiRU52YjNKa2N5aGxMbkpoWkdsMWN5d2daUzV3YUdrc0lHVXVkR2hsZEdFcE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWTndhR1Z5YVdOaGJFTnZiM0prY3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCTllYUm9Mbk5wYmloMEtTQXFJR1U3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR2tnS2lCTllYUm9Mbk5wYmlodUtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1amIzTW9kQ2tnS2lCbExDQjBhR2x6TG5vZ1BTQnBJQ29nVFdGMGFDNWpiM01vYmlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTNsc2FXNWtjbWxqWVd3b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRFWnliMjFEZVd4cGJtUnlhV05oYkVOdmIzSmtjeWhsTG5KaFpHbDFjeXdnWlM1MGFHVjBZU3dnWlM1NUtUc0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMURlV3hwYm1SeWFXTmhiRU52YjNKa2N5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVWdLaUJOWVhSb0xuTnBiaWgwS1N3Z2RHaHBjeTU1SUQwZ2Jpd2dkR2hwY3k1NklEMGdaU0FxSUUxaGRHZ3VZMjl6S0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUhSYk1USmRMQ0IwYUdsekxua2dQU0IwV3pFelhTd2dkR2hwY3k1NklEMGdkRnN4TkYwc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VFdGMGNtbDRVMk5oYkdVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHVXNJREFwTG14bGJtZDBhQ2dwTENCdUlEMGdkR2hwY3k1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHVXNJREVwTG14bGJtZDBhQ2dwTENCcElEMGdkR2hwY3k1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtHVXNJRElwTG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0IwTENCMGFHbHpMbmtnUFNCdUxDQjBhR2x6TG5vZ1BTQnBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm5KdmJVRnljbUY1S0dVdVpXeGxiV1Z1ZEhNc0lIUWdLaUEwS1RzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxTllYUnlhWGd6UTI5c2RXMXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVtY205dFFYSnlZWGtvWlM1bGJHVnRaVzUwY3l3Z2RDQXFJRE1wT3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNTRJRDA5UFNCMGFHbHpMbmdnSmlZZ1pTNTVJRDA5UFNCMGFHbHpMbmtnSmlZZ1pTNTZJRDA5UFNCMGFHbHpMbm83Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pWdDBYU3dnZEdocGN5NTVJRDBnWlZ0MElDc2dNVjBzSUhSb2FYTXVlaUE5SUdWYmRDQXJJREpkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5QmNuSmhlU2hsSUQwZ1cxMHNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVmJkRjBnUFNCMGFHbHpMbmdzSUdWYmRDQXJJREZkSUQwZ2RHaHBjeTU1TENCbFczUWdLeUF5WFNBOUlIUm9hWE11ZWl3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1SUNFOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXpPaUJ2Wm1aelpYUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDQm1jbTl0SUM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtDa3VJaWtzSUhSb2FYTXVlQ0E5SUdVdVoyVjBXQ2gwS1N3Z2RHaHBjeTU1SUQwZ1pTNW5aWFJaS0hRcExDQjBhR2x6TG5vZ1BTQmxMbWRsZEZvb2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnlZVzVrYjIwb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Y21GdVpHOXRLQ2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3VjbUZ1Wkc5dEtDa3NJSFJvYVhNdWVpQTlJRTFoZEdndWNtRnVaRzl0S0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeVlXNWtiMjFFYVhKbFkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBb1RXRjBhQzV5WVc1a2IyMG9LU0F0SUM0MUtTQXFJRElzSUhRZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwSUNvZ1RXRjBhQzVRU1NBcUlESXNJRzRnUFNCTllYUm9Mbk54Y25Rb01TQXRJR1VnS2lvZ01pazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHNGdLaUJOWVhSb0xtTnZjeWgwS1N3Z2RHaHBjeTU1SUQwZ2JpQXFJRTFoZEdndWMybHVLSFFwTENCMGFHbHpMbm9nUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ0tsdFRlVzFpYjJ3dWFYUmxjbUYwYjNKZEtDa2dld29nSUNBZ0lDQWdJSGxwWld4a0lIUm9hWE11ZUN3Z2VXbGxiR1FnZEdocGN5NTVMQ0I1YVdWc1pDQjBhR2x6TG5vN0NpQWdJQ0I5Q24wN0NrMHVjSEp2ZEc5MGVYQmxMbWx6Vm1WamRHOXlNeUE5SUNFd093cDJZWElnVFc4Z1BTQnVaWGNnVFN3Z2VXd2dQU0J1WlhjZ1ozUXNJRXgwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOS0RFZ0x5QXdMQ0F4SUM4Z01Dd2dNU0F2SURBcExDQjBJRDBnYm1WM0lFMG9MVEVnTHlBd0xDQXRNU0F2SURBc0lDMHhJQzhnTUNrcGV3b2dJQ0FnSUNBZ0lIUm9hWE11YldsdUlEMGdaU3dnZEdocGN5NXRZWGdnUFNCME93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVZMjl3ZVNobEtTd2dkR2hwY3k1dFlYZ3VZMjl3ZVNoMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxQmNuSmhlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNBeElDOGdNQ3dnYmlBOUlERWdMeUF3TENCcElEMGdNU0F2SURBc0lISWdQU0F0TVNBdklEQXNJRzhnUFNBdE1TQXZJREFzSUdFZ1BTQXRNU0F2SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc0lEMGdNQ3dnWXlBOUlHVXViR1Z1WjNSb095QnNJRHdnWXpzZ2JDQXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmxXMnhkTENCMUlEMGdaVnRzSUNzZ01WMHNJR1FnUFNCbFcyd2dLeUF5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdhQ0E4SUhRZ0ppWWdLSFFnUFNCb0tTd2dkU0E4SUc0Z0ppWWdLRzRnUFNCMUtTd2daQ0E4SUdrZ0ppWWdLR2tnUFNCa0tTd2dhQ0ErSUhJZ0ppWWdLSElnUFNCb0tTd2dkU0ErSUc4Z0ppWWdLRzhnUFNCMUtTd2daQ0ErSUdFZ0ppWWdLR0VnUFNCa0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxuTmxkQ2gwTENCdUxDQnBLU3dnZEdocGN5NXRZWGd1YzJWMEtISXNJRzhzSUdFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNBeElDOGdNQ3dnYmlBOUlERWdMeUF3TENCcElEMGdNU0F2SURBc0lISWdQU0F0TVNBdklEQXNJRzhnUFNBdE1TQXZJREFzSUdFZ1BTQXRNU0F2SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc0lEMGdNQ3dnWXlBOUlHVXVZMjkxYm5RN0lHd2dQQ0JqT3lCc0t5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUdVdVoyVjBXQ2hzS1N3Z2RTQTlJR1V1WjJWMFdTaHNLU3dnWkNBOUlHVXVaMlYwV2loc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUNBOElIUWdKaVlnS0hRZ1BTQm9LU3dnZFNBOElHNGdKaVlnS0c0Z1BTQjFLU3dnWkNBOElHa2dKaVlnS0drZ1BTQmtLU3dnYUNBK0lISWdKaVlnS0hJZ1BTQm9LU3dnZFNBK0lHOGdKaVlnS0c4Z1BTQjFLU3dnWkNBK0lHRWdKaVlnS0dFZ1BTQmtLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbk5sZENoMExDQnVMQ0JwS1N3Z2RHaHBjeTV0WVhndWMyVjBLSElzSUc4c0lHRXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWQnZhVzUwY3lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlXdGxSVzF3ZEhrb0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZEdocGN5NWxlSEJoYm1SQ2VWQnZhVzUwS0dWYmRGMHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVObGJuUmxja0Z1WkZOcGVtVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1Nta3VZMjl3ZVNoMEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU5TazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtTnZjSGtvWlNrdWMzVmlLRzRwTENCMGFHbHpMbTFoZUM1amIzQjVLR1VwTG1Ga1pDaHVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVBZbXBsWTNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xaGEyVkZiWEIwZVNncExDQjBhR2x6TG1WNGNHRnVaRUo1VDJKcVpXTjBLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVqYjNCNUtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndVkyOXdlU2hsTG0xaGVDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsUlcxd2RIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbmdnUFNCMGFHbHpMbTFwYmk1NUlEMGdkR2hwY3k1dGFXNHVlaUE5SURFZ0x5QXdMQ0IwYUdsekxtMWhlQzU0SUQwZ2RHaHBjeTV0WVhndWVTQTlJSFJvYVhNdWJXRjRMbm9nUFNBdE1TQXZJREFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JwYzBWdGNIUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMWhlQzU0SUR3Z2RHaHBjeTV0YVc0dWVDQjhmQ0IwYUdsekxtMWhlQzU1SUR3Z2RHaHBjeTV0YVc0dWVTQjhmQ0IwYUdsekxtMWhlQzU2SUR3Z2RHaHBjeTV0YVc0dWVqc0tJQ0FnSUgwS0lDQWdJR2RsZEVObGJuUmxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhWE5GYlhCMGVTZ3BJRDhnWlM1elpYUW9NQ3dnTUN3Z01Da2dPaUJsTG1Ga1pGWmxZM1J2Y25Nb2RHaHBjeTV0YVc0c0lIUm9hWE11YldGNEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU5TazdDaUFnSUNCOUNpQWdJQ0JuWlhSVGFYcGxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBjMFZ0Y0hSNUtDa2dQeUJsTG5ObGRDZ3dMQ0F3TENBd0tTQTZJR1V1YzNWaVZtVmpkRzl5Y3loMGFHbHpMbTFoZUN3Z2RHaHBjeTV0YVc0cE93b2dJQ0FnZlFvZ0lDQWdaWGh3WVc1a1FubFFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtMXBiaWhsS1N3Z2RHaHBjeTV0WVhndWJXRjRLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhod1lXNWtRbmxXWldOMGIzSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTV6ZFdJb1pTa3NJSFJvYVhNdWJXRjRMbUZrWkNobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVjRjR0Z1WkVKNVUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dVlXUmtVMk5oYkdGeUtDMWxLU3dnZEdocGN5NXRZWGd1WVdSa1UyTmhiR0Z5S0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sUFltcGxZM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHVXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEVzSUNFeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaMlZ2YldWMGNuazdDaUFnSUNBZ0lDQWdkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbUp2ZFc1a2FXNW5RbTk0SUQwOVBTQnVkV3hzSUNZbUlIUXVZMjl0Y0hWMFpVSnZkVzVrYVc1blFtOTRLQ2tzSUdKdkxtTnZjSGtvZEM1aWIzVnVaR2x1WjBKdmVDa3NJR0p2TG1Gd2NHeDVUV0YwY21sNE5DaGxMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTUxYm1sdmJpaGlieWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1amFHbHNaSEpsYmpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ2JpNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3BkR2hwY3k1bGVIQmhibVJDZVU5aWFtVmpkQ2h1VzJsZEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoS0dVdWVDQThJSFJvYVhNdWJXbHVMbmdnZkh3Z1pTNTRJRDRnZEdocGN5NXRZWGd1ZUNCOGZDQmxMbmtnUENCMGFHbHpMbTFwYmk1NUlIeDhJR1V1ZVNBK0lIUm9hWE11YldGNExua2dmSHdnWlM1NklEd2dkR2hwY3k1dGFXNHVlaUI4ZkNCbExub2dQaUIwYUdsekxtMWhlQzU2S1RzS0lDQWdJSDBLSUNBZ0lHTnZiblJoYVc1elFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1ZUNBOFBTQmxMbTFwYmk1NElDWW1JR1V1YldGNExuZ2dQRDBnZEdocGN5NXRZWGd1ZUNBbUppQjBhR2x6TG0xcGJpNTVJRHc5SUdVdWJXbHVMbmtnSmlZZ1pTNXRZWGd1ZVNBOFBTQjBhR2x6TG0xaGVDNTVJQ1ltSUhSb2FYTXViV2x1TG5vZ1BEMGdaUzV0YVc0dWVpQW1KaUJsTG0xaGVDNTZJRHc5SUhSb2FYTXViV0Y0TG5vN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRWVhKaGJXVjBaWElvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbk5sZENnb1pTNTRJQzBnZEdocGN5NXRhVzR1ZUNrZ0x5QW9kR2hwY3k1dFlYZ3VlQ0F0SUhSb2FYTXViV2x1TG5ncExDQW9aUzU1SUMwZ2RHaHBjeTV0YVc0dWVTa2dMeUFvZEdocGN5NXRZWGd1ZVNBdElIUm9hWE11YldsdUxua3BMQ0FvWlM1NklDMGdkR2hwY3k1dGFXNHVlaWtnTHlBb2RHaHBjeTV0WVhndWVpQXRJSFJvYVhNdWJXbHVMbm9wS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaEtHVXViV0Y0TG5nZ1BDQjBhR2x6TG0xcGJpNTRJSHg4SUdVdWJXbHVMbmdnUGlCMGFHbHpMbTFoZUM1NElIeDhJR1V1YldGNExua2dQQ0IwYUdsekxtMXBiaTU1SUh4OElHVXViV2x1TG5rZ1BpQjBhR2x6TG0xaGVDNTVJSHg4SUdVdWJXRjRMbm9nUENCMGFHbHpMbTFwYmk1NklIeDhJR1V1YldsdUxub2dQaUIwYUdsekxtMWhlQzU2S1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITlRjR2hsY21Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Oc1lXMXdVRzlwYm5Rb1pTNWpaVzUwWlhJc0lFcHBLU3dnU21rdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTNWpaVzUwWlhJcElEdzlJR1V1Y21Ga2FYVnpJQ29nWlM1eVlXUnBkWE03Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelVHeGhibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwTENCdU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtNXZjbTFoYkM1NElENGdNQ0EvSUNoMElEMGdaUzV1YjNKdFlXd3VlQ0FxSUhSb2FYTXViV2x1TG5nc0lHNGdQU0JsTG01dmNtMWhiQzU0SUNvZ2RHaHBjeTV0WVhndWVDa2dPaUFvZENBOUlHVXVibTl5YldGc0xuZ2dLaUIwYUdsekxtMWhlQzU0TENCdUlEMGdaUzV1YjNKdFlXd3VlQ0FxSUhSb2FYTXViV2x1TG5ncExDQmxMbTV2Y20xaGJDNTVJRDRnTUNBL0lDaDBJQ3M5SUdVdWJtOXliV0ZzTG5rZ0tpQjBhR2x6TG0xcGJpNTVMQ0J1SUNzOUlHVXVibTl5YldGc0xua2dLaUIwYUdsekxtMWhlQzU1S1NBNklDaDBJQ3M5SUdVdWJtOXliV0ZzTG5rZ0tpQjBhR2x6TG0xaGVDNTVMQ0J1SUNzOUlHVXVibTl5YldGc0xua2dLaUIwYUdsekxtMXBiaTU1S1N3Z1pTNXViM0p0WVd3dWVpQStJREFnUHlBb2RDQXJQU0JsTG01dmNtMWhiQzU2SUNvZ2RHaHBjeTV0YVc0dWVpd2diaUFyUFNCbExtNXZjbTFoYkM1NklDb2dkR2hwY3k1dFlYZ3VlaWtnT2lBb2RDQXJQU0JsTG01dmNtMWhiQzU2SUNvZ2RHaHBjeTV0WVhndWVpd2diaUFyUFNCbExtNXZjbTFoYkM1NklDb2dkR2hwY3k1dGFXNHVlaWtzSUhRZ1BEMGdMV1V1WTI5dWMzUmhiblFnSmlZZ2JpQStQU0F0WlM1amIyNXpkR0Z1ZERzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITlVjbWxoYm1kc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVhORmJYQjBlU2dwS1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0FnSUNBZ2RHaHBjeTVuWlhSRFpXNTBaWElvV1drcExDQlhjaTV6ZFdKV1pXTjBiM0p6S0hSb2FYTXViV0Y0TENCWmFTa3NJRzVwTG5OMVlsWmxZM1J2Y25Nb1pTNWhMQ0JaYVNrc0lHbHBMbk4xWWxabFkzUnZjbk1vWlM1aUxDQlphU2tzSUhKcExuTjFZbFpsWTNSdmNuTW9aUzVqTENCWmFTa3NJSFZ1TG5OMVlsWmxZM1J2Y25Nb2FXa3NJRzVwS1N3Z1pHNHVjM1ZpVm1WamRHOXljeWh5YVN3Z2FXa3BMQ0JRYmk1emRXSldaV04wYjNKektHNXBMQ0J5YVNrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTFiaTU2TEFvZ0lDQWdJQ0FnSUNBZ0lDQjFiaTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdFpHNHVlaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHNHVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFZCdUxub3NDaUFnSUNBZ0lDQWdJQ0FnSUZCdUxua3NDaUFnSUNBZ0lDQWdJQ0FnSUhWdUxub3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzExYmk1NExBb2dJQ0FnSUNBZ0lDQWdJQ0JrYmk1NkxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRaRzR1ZUN3S0lDQWdJQ0FnSUNBZ0lDQWdVRzR1ZWl3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xWQnVMbmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTFiaTU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjFiaTU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdFpHNHVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHNHVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFZCdUxua3NDaUFnSUNBZ0lDQWdJQ0FnSUZCdUxuZ3NDaUFnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaGQyOG9kQ3dnYm1rc0lHbHBMQ0J5YVN3Z1YzSXBJSHg4SUNoMElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYU3dnSVhkdktIUXNJRzVwTENCcGFTd2djbWtzSUZkeUtTa2dQeUFoTVNBNklDaHhjaTVqY205emMxWmxZM1J2Y25Nb2RXNHNJR1J1S1N3Z2RDQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2NYSXVlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2NYSXVlU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NYSXVlZ29nSUNBZ0lDQWdJRjBzSUhkdktIUXNJRzVwTENCcGFTd2djbWtzSUZkeUtTazdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNGQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtHVXBMbU5zWVcxd0tIUm9hWE11YldsdUxDQjBhR2x6TG0xaGVDazdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJLYVM1amIzQjVLR1VwTG1Oc1lXMXdLSFJvYVhNdWJXbHVMQ0IwYUdsekxtMWhlQ2t1YzNWaUtHVXBMbXhsYm1kMGFDZ3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFFtOTFibVJwYm1kVGNHaGxjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVObGJuUmxjaWhsTG1ObGJuUmxjaWtzSUdVdWNtRmthWFZ6SUQwZ2RHaHBjeTVuWlhSVGFYcGxLRXBwS1M1c1pXNW5kR2dvS1NBcUlDNDFMQ0JsT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHViV0Y0S0dVdWJXbHVLU3dnZEdocGN5NXRZWGd1YldsdUtHVXViV0Y0S1N3Z2RHaHBjeTVwYzBWdGNIUjVLQ2tnSmlZZ2RHaHBjeTV0WVd0bFJXMXdkSGtvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhWdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldsdUtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndWJXRjRLR1V1YldGNEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhWE5GYlhCMGVTZ3BJRDhnZEdocGN5QTZJQ2drZEZzd1hTNXpaWFFvZEdocGN5NXRhVzR1ZUN3Z2RHaHBjeTV0YVc0dWVTd2dkR2hwY3k1dGFXNHVlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzeFhTNXpaWFFvZEdocGN5NXRhVzR1ZUN3Z2RHaHBjeTV0YVc0dWVTd2dkR2hwY3k1dFlYZ3VlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzeVhTNXpaWFFvZEdocGN5NXRhVzR1ZUN3Z2RHaHBjeTV0WVhndWVTd2dkR2hwY3k1dGFXNHVlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzelhTNXpaWFFvZEdocGN5NXRhVzR1ZUN3Z2RHaHBjeTV0WVhndWVTd2dkR2hwY3k1dFlYZ3VlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzMFhTNXpaWFFvZEdocGN5NXRZWGd1ZUN3Z2RHaHBjeTV0YVc0dWVTd2dkR2hwY3k1dGFXNHVlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzMVhTNXpaWFFvZEdocGN5NXRZWGd1ZUN3Z2RHaHBjeTV0YVc0dWVTd2dkR2hwY3k1dFlYZ3VlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzMlhTNXpaWFFvZEdocGN5NXRZWGd1ZUN3Z2RHaHBjeTV0WVhndWVTd2dkR2hwY3k1dGFXNHVlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0FrZEZzM1hTNXpaWFFvZEdocGN5NXRZWGd1ZUN3Z2RHaHBjeTV0WVhndWVTd2dkR2hwY3k1dFlYZ3VlaWt1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwYUdsekxuTmxkRVp5YjIxUWIybHVkSE1vSkhRcExDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6YkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbUZrWkNobEtTd2dkR2hwY3k1dFlYZ3VZV1JrS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXRhVzR1WlhGMVlXeHpLSFJvYVhNdWJXbHVLU0FtSmlCbExtMWhlQzVsY1hWaGJITW9kR2hwY3k1dFlYZ3BPd29nSUNBZ2ZRcDlPd3BNZEM1d2NtOTBiM1I1Y0dVdWFYTkNiM2d6SUQwZ0lUQTdDblpoY2lBa2RDQTlJRnNLSUNBZ0lHNWxkeUJOTEFvZ0lDQWdibVYzSUUwc0NpQWdJQ0J1WlhjZ1RTd0tJQ0FnSUc1bGR5Qk5MQW9nSUNBZ2JtVjNJRTBzQ2lBZ0lDQnVaWGNnVFN3S0lDQWdJRzVsZHlCTkxBb2dJQ0FnYm1WM0lFMEtYU3dnU21rZ1BTQnVaWGNnVFN3Z1ltOGdQU0J1WlhjZ1RIUXNJRzVwSUQwZ2JtVjNJRTBzSUdscElEMGdibVYzSUUwc0lISnBJRDBnYm1WM0lFMHNJSFZ1SUQwZ2JtVjNJRTBzSUdSdUlEMGdibVYzSUUwc0lGQnVJRDBnYm1WM0lFMHNJRmxwSUQwZ2JtVjNJRTBzSUZkeUlEMGdibVYzSUUwc0lIRnlJRDBnYm1WM0lFMHNJRWx1SUQwZ2JtVjNJRTA3Q21aMWJtTjBhVzl1SUhkdktITXNJR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0J6TG14bGJtZDBhQ0F0SURNN0lISWdQRDBnYnpzZ2NpQXJQU0F6S1hzS0lDQWdJQ0FnSUNCSmJpNW1jbTl0UVhKeVlYa29jeXdnY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCcExuZ2dLaUJOWVhSb0xtRmljeWhKYmk1NEtTQXJJR2t1ZVNBcUlFMWhkR2d1WVdKektFbHVMbmtwSUNzZ2FTNTZJQ29nVFdGMGFDNWhZbk1vU1c0dWVpa3NJR3dnUFNCbExtUnZkQ2hKYmlrc0lHTWdQU0IwTG1SdmRDaEpiaWtzSUdnZ1BTQnVMbVJ2ZENoSmJpazdDaUFnSUNBZ0lDQWdhV1lnS0UxaGRHZ3ViV0Y0S0MxTllYUm9MbTFoZUNoc0xDQmpMQ0JvS1N3Z1RXRjBhQzV0YVc0b2JDd2dZeXdnYUNrcElENGdZU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUNFd093cDlDblpoY2lCbFppQTlJRzVsZHlCTWRDd2dkbXdnUFNCdVpYY2dUU3dnV0hJZ1BTQnVaWGNnVFN3Z1UyOGdQU0J1WlhjZ1RTd2dRVzRnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRTBzSUhRZ1BTQXRNU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpaVzUwWlhJZ1BTQmxMQ0IwYUdsekxuSmhaR2wxY3lBOUlIUTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTmxiblJsY2k1amIzQjVLR1VwTENCMGFHbHpMbkpoWkdsMWN5QTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZMlZ1ZEdWeU93b2dJQ0FnSUNBZ0lIUWdJVDA5SUhadmFXUWdNQ0EvSUc0dVkyOXdlU2gwS1NBNklHVm1Mbk5sZEVaeWIyMVFiMmx1ZEhNb1pTa3VaMlYwUTJWdWRHVnlLRzRwT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ1pTNXNaVzVuZEdnN0lISWdQQ0J2T3lCeUt5c3BhU0E5SUUxaGRHZ3ViV0Y0S0drc0lHNHVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aVnR5WFNrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJRTFoZEdndWMzRnlkQ2hwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTmxiblJsY2k1amIzQjVLR1V1WTJWdWRHVnlLU3dnZEdocGN5NXlZV1JwZFhNZ1BTQmxMbkpoWkdsMWN5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbHpSVzF3ZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRHdnTURzS0lDQWdJSDBLSUNBZ0lHMWhhMlZGYlhCMGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1YzJWMEtEQXNJREFzSURBcExDQjBhR2x6TG5KaFpHbDFjeUE5SUMweExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXVkR0ZwYm5OUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb2RHaHBjeTVqWlc1MFpYSXBJRHc5SUhSb2FYTXVjbUZrYVhWeklDb2dkR2hwY3k1eVlXUnBkWE03Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtUnBjM1JoYm1ObFZHOG9kR2hwY3k1alpXNTBaWElwSUMwZ2RHaHBjeTV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjbUZrYVhWeklDc2daUzV5WVdScGRYTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZMlZ1ZEdWeUxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tIUm9hWE11WTJWdWRHVnlLU0E4UFNCMElDb2dkRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOQ2IzZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWhsTG1ScGMzUmhibU5sVkc5UWIybHVkQ2gwYUdsekxtTmxiblJsY2lrcElEdzlJSFJvYVhNdWNtRmthWFZ6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEJRYjJsdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU5sYm5SbGNpNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtHVXBMQ0J1SUQ0Z2RHaHBjeTV5WVdScGRYTWdLaUIwYUdsekxuSmhaR2wxY3lBbUppQW9kQzV6ZFdJb2RHaHBjeTVqWlc1MFpYSXBMbTV2Y20xaGJHbDZaU2dwTENCMExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hSb2FYTXVjbUZrYVhWektTNWhaR1FvZEdocGN5NWpaVzUwWlhJcEtTd2dkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFSnZkVzVrYVc1blFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBjMFZ0Y0hSNUtDa2dQeUFvWlM1dFlXdGxSVzF3ZEhrb0tTd2daU2tnT2lBb1pTNXpaWFFvZEdocGN5NWpaVzUwWlhJc0lIUm9hWE11WTJWdWRHVnlLU3dnWlM1bGVIQmhibVJDZVZOallXeGhjaWgwYUdsekxuSmhaR2wxY3lrc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WVhCd2JIbE5ZWFJ5YVhnMEtHVXBMQ0IwYUdsekxuSmhaR2wxY3lBOUlIUm9hWE11Y21Ga2FYVnpJQ29nWlM1blpYUk5ZWGhUWTJGc1pVOXVRWGhwY3lncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1alpXNTBaWEl1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWGh3WVc1a1FubFFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdVMjh1YzNWaVZtVmpkRzl5Y3lobExDQjBhR2x6TG1ObGJuUmxjaWs3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JUYnk1c1pXNW5kR2hUY1NncE93b2dJQ0FnSUNBZ0lHbG1JQ2gwSUQ0Z2RHaHBjeTV5WVdScGRYTWdLaUIwYUdsekxuSmhaR2wxY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRTFoZEdndWMzRnlkQ2gwS1N3Z2FTQTlJQ2h1SUMwZ2RHaHBjeTV5WVdScGRYTXBJQ29nTGpVN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVkyVnVkR1Z5TG1Ga1pDaFRieTV0ZFd4MGFYQnNlVk5qWVd4aGNpaHBJQzhnYmlrcExDQjBhR2x6TG5KaFpHbDFjeUFyUFNCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhWdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpaVzUwWlhJdVpYRjFZV3h6S0dVdVkyVnVkR1Z5S1NBOVBUMGdJVEFnUHlCWWNpNXpaWFFvTUN3Z01Dd2dNU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9aUzV5WVdScGRYTXBJRG9nV0hJdWMzVmlWbVZqZEc5eWN5aGxMbU5sYm5SbGNpd2dkR2hwY3k1alpXNTBaWElwTG01dmNtMWhiR2w2WlNncExtMTFiSFJwY0d4NVUyTmhiR0Z5S0dVdWNtRmthWFZ6S1N3Z2RHaHBjeTVsZUhCaGJtUkNlVkJ2YVc1MEtIWnNMbU52Y0hrb1pTNWpaVzUwWlhJcExtRmtaQ2hZY2lrcExDQjBhR2x6TG1WNGNHRnVaRUo1VUc5cGJuUW9kbXd1WTI5d2VTaGxMbU5sYm5SbGNpa3VjM1ZpS0ZoeUtTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxjWFZoYkhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbU5sYm5SbGNpNWxjWFZoYkhNb2RHaHBjeTVqWlc1MFpYSXBJQ1ltSUdVdWNtRmthWFZ6SUQwOVBTQjBhR2x6TG5KaFpHbDFjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNuMHNJR3AwSUQwZ2JtVjNJRTBzSUZSdklEMGdibVYzSUUwc0lFcHlJRDBnYm1WM0lFMHNJR1p1SUQwZ2JtVjNJRTBzSUVWdklEMGdibVYzSUUwc0lGbHlJRDBnYm1WM0lFMHNJRUZ2SUQwZ2JtVjNJRTBzSUVOdUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTkxDQjBJRDBnYm1WM0lFMG9NQ3dnTUN3Z0xURXBLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtOXlhV2RwYmlBOUlHVXNJSFJvYVhNdVpHbHlaV04wYVc5dUlEMGdkRHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViM0pwWjJsdUxtTnZjSGtvWlNrc0lIUm9hWE11WkdseVpXTjBhVzl1TG1OdmNIa29kQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmNtbG5hVzR1WTI5d2VTaGxMbTl5YVdkcGJpa3NJSFJvYVhNdVpHbHlaV04wYVc5dUxtTnZjSGtvWlM1a2FYSmxZM1JwYjI0cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtTnZjSGtvZEdocGN5NWthWEpsWTNScGIyNHBMbTExYkhScGNHeDVVMk5oYkdGeUtHVXBMbUZrWkNoMGFHbHpMbTl5YVdkcGJpazdDaUFnSUNCOUNpQWdJQ0JzYjI5clFYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBjbVZqZEdsdmJpNWpiM0I1S0dVcExuTjFZaWgwYUdsekxtOXlhV2RwYmlrdWJtOXliV0ZzYVhwbEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnlaV05oYzNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG05eWFXZHBiaTVqYjNCNUtIUm9hWE11WVhRb1pTd2dhblFwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IzTmxjM1JRYjJsdWRGUnZVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhRdWMzVmlWbVZqZEc5eWN5aGxMQ0IwYUdsekxtOXlhV2RwYmlrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMExtUnZkQ2gwYUdsekxtUnBjbVZqZEdsdmJpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdQQ0F3SUQ4Z2RDNWpiM0I1S0hSb2FYTXViM0pwWjJsdUtTQTZJSFF1WTI5d2VTaDBhR2x6TG1ScGNtVmpkR2x2YmlrdWJYVnNkR2x3YkhsVFkyRnNZWElvYmlrdVlXUmtLSFJvYVhNdWIzSnBaMmx1S1RzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFZHOVFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YzNGeWRDaDBhR2x6TG1ScGMzUmhibU5sVTNGVWIxQnZhVzUwS0dVcEtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxVM0ZVYjFCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdwMExuTjFZbFpsWTNSdmNuTW9aU3dnZEdocGN5NXZjbWxuYVc0cExtUnZkQ2gwYUdsekxtUnBjbVZqZEdsdmJpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdQQ0F3SUQ4Z2RHaHBjeTV2Y21sbmFXNHVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2tnT2lBb2FuUXVZMjl3ZVNoMGFHbHpMbVJwY21WamRHbHZiaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9kQ2t1WVdSa0tIUm9hWE11YjNKcFoybHVLU3dnYW5RdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb1pTa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlZUY1ZSdlUyVm5iV1Z1ZENobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdWRzh1WTI5d2VTaGxLUzVoWkdRb2RDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb0xqVXBMQ0JLY2k1amIzQjVLSFFwTG5OMVlpaGxLUzV1YjNKdFlXeHBlbVVvS1N3Z1ptNHVZMjl3ZVNoMGFHbHpMbTl5YVdkcGJpa3VjM1ZpS0ZSdktUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHVXVaR2x6ZEdGdVkyVlVieWgwS1NBcUlDNDFMQ0J2SUQwZ0xYUm9hWE11WkdseVpXTjBhVzl1TG1SdmRDaEtjaWtzSUdFZ1BTQm1iaTVrYjNRb2RHaHBjeTVrYVhKbFkzUnBiMjRwTENCc0lEMGdMV1p1TG1SdmRDaEtjaWtzSUdNZ1BTQm1iaTVzWlc1bmRHaFRjU2dwTENCb0lEMGdUV0YwYUM1aFluTW9NU0F0SUc4Z0tpQnZLU3dnZFN3Z1pDd2daaXdnYlRzS0lDQWdJQ0FnSUNCcFppQW9hQ0ErSURBcElHbG1JQ2gxSUQwZ2J5QXFJR3dnTFNCaExDQmtJRDBnYnlBcUlHRWdMU0JzTENCdElEMGdjaUFxSUdnc0lIVWdQajBnTUNrZ2FXWWdLR1FnUGowZ0xXMHBJR2xtSUNoa0lEdzlJRzBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQXhJQzhnYURzS0lDQWdJQ0FnSUNBZ0lDQWdkU0FxUFNCNExDQmtJQ285SUhnc0lHWWdQU0IxSUNvZ0tIVWdLeUJ2SUNvZ1pDQXJJRElnS2lCaEtTQXJJR1FnS2lBb2J5QXFJSFVnS3lCa0lDc2dNaUFxSUd3cElDc2dZenNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdaQ0E5SUhJc0lIVWdQU0JOWVhSb0xtMWhlQ2d3TENBdEtHOGdLaUJrSUNzZ1lTa3BMQ0JtSUQwZ0xYVWdLaUIxSUNzZ1pDQXFJQ2hrSUNzZ01pQXFJR3dwSUNzZ1l6c0tJQ0FnSUNBZ0lDQmxiSE5sSUdRZ1BTQXRjaXdnZFNBOUlFMWhkR2d1YldGNEtEQXNJQzBvYnlBcUlHUWdLeUJoS1Nrc0lHWWdQU0F0ZFNBcUlIVWdLeUJrSUNvZ0tHUWdLeUF5SUNvZ2JDa2dLeUJqT3dvZ0lDQWdJQ0FnSUdWc2MyVWdaQ0E4UFNBdGJTQS9JQ2gxSUQwZ1RXRjBhQzV0WVhnb01Dd2dMU2d0YnlBcUlISWdLeUJoS1Nrc0lHUWdQU0IxSUQ0Z01DQS9JQzF5SURvZ1RXRjBhQzV0YVc0b1RXRjBhQzV0WVhnb0xYSXNJQzFzS1N3Z2Npa3NJR1lnUFNBdGRTQXFJSFVnS3lCa0lDb2dLR1FnS3lBeUlDb2diQ2tnS3lCaktTQTZJR1FnUEQwZ2JTQS9JQ2gxSUQwZ01Dd2daQ0E5SUUxaGRHZ3ViV2x1S0UxaGRHZ3ViV0Y0S0MxeUxDQXRiQ2tzSUhJcExDQm1JRDBnWkNBcUlDaGtJQ3NnTWlBcUlHd3BJQ3NnWXlrZ09pQW9kU0E5SUUxaGRHZ3ViV0Y0S0RBc0lDMG9ieUFxSUhJZ0t5QmhLU2tzSUdRZ1BTQjFJRDRnTUNBL0lISWdPaUJOWVhSb0xtMXBiaWhOWVhSb0xtMWhlQ2d0Y2l3Z0xXd3BMQ0J5S1N3Z1ppQTlJQzExSUNvZ2RTQXJJR1FnS2lBb1pDQXJJRElnS2lCc0tTQXJJR01wT3dvZ0lDQWdJQ0FnSUdWc2MyVWdaQ0E5SUc4Z1BpQXdJRDhnTFhJZ09pQnlMQ0IxSUQwZ1RXRjBhQzV0WVhnb01Dd2dMU2h2SUNvZ1pDQXJJR0VwS1N3Z1ppQTlJQzExSUNvZ2RTQXJJR1FnS2lBb1pDQXJJRElnS2lCc0tTQXJJR003Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnSmlZZ2JpNWpiM0I1S0hSb2FYTXVaR2x5WldOMGFXOXVLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaDFLUzVoWkdRb2RHaHBjeTV2Y21sbmFXNHBMQ0JwSUNZbUlHa3VZMjl3ZVNoS2Npa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1pDa3VZV1JrS0ZSdktTd2daanNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEZOd2FHVnlaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdhblF1YzNWaVZtVmpkRzl5Y3lobExtTmxiblJsY2l3Z2RHaHBjeTV2Y21sbmFXNHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdhblF1Wkc5MEtIUm9hWE11WkdseVpXTjBhVzl1S1N3Z2FTQTlJR3AwTG1SdmRDaHFkQ2tnTFNCdUlDb2diaXdnY2lBOUlHVXVjbUZrYVhWeklDb2daUzV5WVdScGRYTTdDaUFnSUNBZ0lDQWdhV1lnS0drZ1BpQnlLU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUUxaGRHZ3VjM0Z5ZENoeUlDMGdhU2tzSUdFZ1BTQnVJQzBnYnl3Z2JDQTlJRzRnS3lCdk93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaElEd2dNQ0FtSmlCc0lEd2dNQ0EvSUc1MWJHd2dPaUJoSUR3Z01DQS9JSFJvYVhNdVlYUW9iQ3dnZENrZ09pQjBhR2x6TG1GMEtHRXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMxTndhR1Z5WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdsemRHRnVZMlZUY1ZSdlVHOXBiblFvWlM1alpXNTBaWElwSUR3OUlHVXVjbUZrYVhWeklDb2daUzV5WVdScGRYTTdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1dWIzSnRZV3d1Wkc5MEtIUm9hWE11WkdseVpXTjBhVzl1S1RzS0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ01Da2djbVYwZFhKdUlHVXVaR2x6ZEdGdVkyVlViMUJ2YVc1MEtIUm9hWE11YjNKcFoybHVLU0E5UFQwZ01DQS9JREFnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdMU2gwYUdsekxtOXlhV2RwYmk1a2IzUW9aUzV1YjNKdFlXd3BJQ3NnWlM1amIyNXpkR0Z1ZENrZ0x5QjBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVJRDQ5SURBZ1B5QnVJRG9nYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkRkJzWVc1bEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaR2x6ZEdGdVkyVlViMUJzWVc1bEtHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVJRDA5UFNCdWRXeHNJRDhnYm5Wc2JDQTZJSFJvYVhNdVlYUW9iaXdnZENrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpVR3hoYm1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVrYVhOMFlXNWpaVlJ2VUc5cGJuUW9kR2hwY3k1dmNtbG5hVzRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwSUQwOVBTQXdJSHg4SUdVdWJtOXliV0ZzTG1SdmRDaDBhR2x6TG1ScGNtVmpkR2x2YmlrZ0tpQjBJRHdnTURzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRFSnZlQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNZ1BTQXhJQzhnZEdocGN5NWthWEpsWTNScGIyNHVlQ3dnYUNBOUlERWdMeUIwYUdsekxtUnBjbVZqZEdsdmJpNTVMQ0IxSUQwZ01TQXZJSFJvYVhNdVpHbHlaV04wYVc5dUxub3NJR1FnUFNCMGFHbHpMbTl5YVdkcGJqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1l5QStQU0F3SUQ4Z0tHNGdQU0FvWlM1dGFXNHVlQ0F0SUdRdWVDa2dLaUJqTENCcElEMGdLR1V1YldGNExuZ2dMU0JrTG5ncElDb2dZeWtnT2lBb2JpQTlJQ2hsTG0xaGVDNTRJQzBnWkM1NEtTQXFJR01zSUdrZ1BTQW9aUzV0YVc0dWVDQXRJR1F1ZUNrZ0tpQmpLU3dnYUNBK1BTQXdJRDhnS0hJZ1BTQW9aUzV0YVc0dWVTQXRJR1F1ZVNrZ0tpQm9MQ0J2SUQwZ0tHVXViV0Y0TG5rZ0xTQmtMbmtwSUNvZ2FDa2dPaUFvY2lBOUlDaGxMbTFoZUM1NUlDMGdaQzU1S1NBcUlHZ3NJRzhnUFNBb1pTNXRhVzR1ZVNBdElHUXVlU2tnS2lCb0tTd2diaUErSUc4Z2ZId2djaUErSUdrZ2ZId2dLQ2h5SUQ0Z2JpQjhmQ0J1SUNFOVBTQnVLU0FtSmlBb2JpQTlJSElwTENBb2J5QThJR2tnZkh3Z2FTQWhQVDBnYVNrZ0ppWWdLR2tnUFNCdktTd2dkU0ErUFNBd0lEOGdLR0VnUFNBb1pTNXRhVzR1ZWlBdElHUXVlaWtnS2lCMUxDQnNJRDBnS0dVdWJXRjRMbm9nTFNCa0xub3BJQ29nZFNrZ09pQW9ZU0E5SUNobExtMWhlQzU2SUMwZ1pDNTZLU0FxSUhVc0lHd2dQU0FvWlM1dGFXNHVlaUF0SUdRdWVpa2dLaUIxS1N3Z2JpQStJR3dnZkh3Z1lTQStJR2twSUh4OElDZ29ZU0ErSUc0Z2ZId2diaUFoUFQwZ2Jpa2dKaVlnS0c0Z1BTQmhLU3dnS0d3Z1BDQnBJSHg4SUdrZ0lUMDlJR2twSUNZbUlDaHBJRDBnYkNrc0lHa2dQQ0F3S1NBL0lHNTFiR3dnT2lCMGFHbHpMbUYwS0c0Z1BqMGdNQ0EvSUc0Z09pQnBMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx1ZEdWeWMyVmpkRUp2ZUNobExDQnFkQ2tnSVQwOUlHNTFiR3c3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSVWNtbGhibWRzWlNobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnUlc4dWMzVmlWbVZqZEc5eWN5aDBMQ0JsS1N3Z1dYSXVjM1ZpVm1WamRHOXljeWh1TENCbEtTd2dRVzh1WTNKdmMzTldaV04wYjNKektFVnZMQ0JaY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbVJwY21WamRHbHZiaTVrYjNRb1FXOHBMQ0JoT3dvZ0lDQWdJQ0FnSUdsbUlDaHZJRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTa2djbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0F4T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2J5QThJREFwSUdFZ1BTQXRNU3dnYnlBOUlDMXZPd29nSUNBZ0lDQWdJR1ZzYzJVZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdabTR1YzNWaVZtVmpkRzl5Y3loMGFHbHpMbTl5YVdkcGJpd2daU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JoSUNvZ2RHaHBjeTVrYVhKbFkzUnBiMjR1Wkc5MEtGbHlMbU55YjNOelZtVmpkRzl5Y3lobWJpd2dXWElwS1RzS0lDQWdJQ0FnSUNCcFppQW9iQ0E4SURBcElISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdZU0FxSUhSb2FYTXVaR2x5WldOMGFXOXVMbVJ2ZENoRmJ5NWpjbTl6Y3lobWJpa3BPd29nSUNBZ0lDQWdJR2xtSUNoaklEd2dNQ0I4ZkNCc0lDc2dZeUErSUc4cElISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdMV0VnS2lCbWJpNWtiM1FvUVc4cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCb0lEd2dNQ0EvSUc1MWJHd2dPaUIwYUdsekxtRjBLR2dnTHlCdkxDQnlLVHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVUV0YwY21sNE5DaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWIzSnBaMmx1TG1Gd2NHeDVUV0YwY21sNE5DaGxLU3dnZEdocGN5NWthWEpsWTNScGIyNHVkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dmNtbG5hVzR1WlhGMVlXeHpLSFJvYVhNdWIzSnBaMmx1S1NBbUppQmxMbVJwY21WamRHbHZiaTVsY1hWaGJITW9kR2hwY3k1a2FYSmxZM1JwYjI0cE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLZlN3Z2NHVWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSFJvYVhNdVpXeGxiV1Z1ZEhNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZExDQmhjbWQxYldWdWRITXViR1Z1WjNSb0lENGdNQ0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQjBhR1VnWTI5dWMzUnlkV04wYjNJZ2JtOGdiRzl1WjJWeUlISmxZV1J6SUdGeVozVnRaVzUwY3k0Z2RYTmxJQzV6WlhRb0tTQnBibk4wWldGa0xpSXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNc0lHZ3NJSFVzSUdRc0lHWXNJRzBzSUhnc0lIWXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJSFJvYVhNdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdkYk1GMGdQU0JsTENCbld6UmRJRDBnZEN3Z1oxczRYU0E5SUc0c0lHZGJNVEpkSUQwZ2FTd2daMXN4WFNBOUlISXNJR2RiTlYwZ1BTQnZMQ0JuV3psZElEMGdZU3dnWjFzeE0xMGdQU0JzTENCbld6SmRJRDBnWXl3Z1oxczJYU0E5SUdnc0lHZGJNVEJkSUQwZ2RTd2daMXN4TkYwZ1BTQmtMQ0JuV3pOZElEMGdaaXdnWjFzM1hTQTlJRzBzSUdkYk1URmRJRDBnZUN3Z1oxc3hOVjBnUFNCMkxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2FXUmxiblJwZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtERXNJREFzSURBc0lEQXNJREFzSURFc0lEQXNJREFzSURBc0lEQXNJREVzSURBc0lEQXNJREFzSURBc0lERXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ3WlNncExtWnliMjFCY25KaGVTaDBhR2x6TG1Wc1pXMWxiblJ6S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnYmlBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmJNRjBnUFNCdVd6QmRMQ0IwV3pGZElEMGdibHN4WFN3Z2RGc3lYU0E5SUc1Yk1sMHNJSFJiTTEwZ1BTQnVXek5kTENCMFd6UmRJRDBnYmxzMFhTd2dkRnMxWFNBOUlHNWJOVjBzSUhSYk5sMGdQU0J1V3paZExDQjBXemRkSUQwZ2JsczNYU3dnZEZzNFhTQTlJRzViT0Ywc0lIUmJPVjBnUFNCdVd6bGRMQ0IwV3pFd1hTQTlJRzViTVRCZExDQjBXekV4WFNBOUlHNWJNVEZkTENCMFd6RXlYU0E5SUc1Yk1USmRMQ0IwV3pFelhTQTlJRzViTVROZExDQjBXekUwWFNBOUlHNWJNVFJkTENCMFd6RTFYU0E5SUc1Yk1UVmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVZCdmMybDBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUc0Z1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBXekV5WFNBOUlHNWJNVEpkTENCMFd6RXpYU0E5SUc1Yk1UTmRMQ0IwV3pFMFhTQTlJRzViTVRSZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlUxaGRISnBlRE1vWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb2RGc3dYU3dnZEZzelhTd2dkRnMyWFN3Z01Dd2dkRnN4WFN3Z2RGczBYU3dnZEZzM1hTd2dNQ3dnZEZzeVhTd2dkRnMxWFN3Z2RGczRYU3dnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxlSFJ5WVdOMFFtRnphWE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b2RHaHBjeXdnTUNrc0lIUXVjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWgwYUdsekxDQXhLU3dnYmk1elpYUkdjbTl0VFdGMGNtbDRRMjlzZFcxdUtIUm9hWE1zSURJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVUpoYzJsektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb1pTNTRMQ0IwTG5nc0lHNHVlQ3dnTUN3Z1pTNTVMQ0IwTG5rc0lHNHVlU3dnTUN3Z1pTNTZMQ0IwTG5vc0lHNHVlaXdnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxlSFJ5WVdOMFVtOTBZWFJwYjI0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JpQTlJR1V1Wld4bGJXVnVkSE1zSUdrZ1BTQXhJQzhnYzJrdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaGxMQ0F3S1M1c1pXNW5kR2dvS1N3Z2NpQTlJREVnTHlCemFTNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLR1VzSURFcExteGxibWQwYUNncExDQnZJRDBnTVNBdklITnBMbk5sZEVaeWIyMU5ZWFJ5YVhoRGIyeDFiVzRvWlN3Z01pa3ViR1Z1WjNSb0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUmJNRjBnUFNCdVd6QmRJQ29nYVN3Z2RGc3hYU0E5SUc1Yk1WMGdLaUJwTENCMFd6SmRJRDBnYmxzeVhTQXFJR2tzSUhSYk0xMGdQU0F3TENCMFd6UmRJRDBnYmxzMFhTQXFJSElzSUhSYk5WMGdQU0J1V3pWZElDb2djaXdnZEZzMlhTQTlJRzViTmwwZ0tpQnlMQ0IwV3pkZElEMGdNQ3dnZEZzNFhTQTlJRzViT0YwZ0tpQnZMQ0IwV3psZElEMGdibHM1WFNBcUlHOHNJSFJiTVRCZElEMGdibHN4TUYwZ0tpQnZMQ0IwV3pFeFhTQTlJREFzSUhSYk1USmRJRDBnTUN3Z2RGc3hNMTBnUFNBd0xDQjBXekUwWFNBOUlEQXNJSFJiTVRWZElEMGdNU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWU2IzUmhkR2x2YmtaeWIyMUZkV3hsY2lobEtTQjdDaUFnSUNBZ0lDQWdaU0FtSmlCbExtbHpSWFZzWlhJZ2ZId2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG0xaGEyVlNiM1JoZEdsdmJrWnliMjFGZFd4bGNpZ3BJRzV2ZHlCbGVIQmxZM1J6SUdFZ1JYVnNaWElnY205MFlYUnBiMjRnY21GMGFHVnlJSFJvWVc0Z1lTQldaV04wYjNJeklHRnVaQ0J2Y21SbGNpNGlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHNGdQU0JsTG5nc0lHa2dQU0JsTG5rc0lISWdQU0JsTG5vc0lHOGdQU0JOWVhSb0xtTnZjeWh1S1N3Z1lTQTlJRTFoZEdndWMybHVLRzRwTENCc0lEMGdUV0YwYUM1amIzTW9hU2tzSUdNZ1BTQk5ZWFJvTG5OcGJpaHBLU3dnYUNBOUlFMWhkR2d1WTI5ektISXBMQ0IxSUQwZ1RXRjBhQzV6YVc0b2NpazdDaUFnSUNBZ0lDQWdhV1lnS0dVdWIzSmtaWElnUFQwOUlDSllXVm9pS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdieUFxSUdnc0lHWWdQU0J2SUNvZ2RTd2diU0E5SUdFZ0tpQm9MQ0I0SUQwZ1lTQXFJSFU3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJNRjBnUFNCc0lDb2dhQ3dnZEZzMFhTQTlJQzFzSUNvZ2RTd2dkRnM0WFNBOUlHTXNJSFJiTVYwZ1BTQm1JQ3NnYlNBcUlHTXNJSFJiTlYwZ1BTQmtJQzBnZUNBcUlHTXNJSFJiT1YwZ1BTQXRZU0FxSUd3c0lIUmJNbDBnUFNCNElDMGdaQ0FxSUdNc0lIUmJObDBnUFNCdElDc2daaUFxSUdNc0lIUmJNVEJkSUQwZ2J5QXFJR3c3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNobExtOXlaR1Z5SUQwOVBTQWlXVmhhSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pERWdQU0JzSUNvZ2FDd2daakVnUFNCc0lDb2dkU3dnYlRFZ1BTQmpJQ29nYUN3Z2VERWdQU0JqSUNvZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZzd1hTQTlJR1F4SUNzZ2VERWdLaUJoTENCMFd6UmRJRDBnYlRFZ0tpQmhJQzBnWmpFc0lIUmJPRjBnUFNCdklDb2dZeXdnZEZzeFhTQTlJRzhnS2lCMUxDQjBXelZkSUQwZ2J5QXFJR2dzSUhSYk9WMGdQU0F0WVN3Z2RGc3lYU0E5SUdZeElDb2dZU0F0SUcweExDQjBXelpkSUQwZ2VERWdLeUJrTVNBcUlHRXNJSFJiTVRCZElEMGdieUFxSUd3N0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGxMbTl5WkdWeUlEMDlQU0FpV2xoWklpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaRElnUFNCc0lDb2dhQ3dnWmpJZ1BTQnNJQ29nZFN3Z2JUSWdQU0JqSUNvZ2FDd2dlRElnUFNCaklDb2dkVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGc3dYU0E5SUdReUlDMGdlRElnS2lCaExDQjBXelJkSUQwZ0xXOGdLaUIxTENCMFd6aGRJRDBnYlRJZ0t5Qm1NaUFxSUdFc0lIUmJNVjBnUFNCbU1pQXJJRzB5SUNvZ1lTd2dkRnMxWFNBOUlHOGdLaUJvTENCMFd6bGRJRDBnZURJZ0xTQmtNaUFxSUdFc0lIUmJNbDBnUFNBdGJ5QXFJR01zSUhSYk5sMGdQU0JoTENCMFd6RXdYU0E5SUc4Z0tpQnNPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWlM1dmNtUmxjaUE5UFQwZ0lscFpXQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdReklEMGdieUFxSUdnc0lHWXpJRDBnYnlBcUlIVXNJRzB6SUQwZ1lTQXFJR2dzSUhneklEMGdZU0FxSUhVN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwZ1BTQnNJQ29nYUN3Z2RGczBYU0E5SUcweklDb2dZeUF0SUdZekxDQjBXemhkSUQwZ1pETWdLaUJqSUNzZ2VETXNJSFJiTVYwZ1BTQnNJQ29nZFN3Z2RGczFYU0E5SUhneklDb2dZeUFySUdRekxDQjBXemxkSUQwZ1pqTWdLaUJqSUMwZ2JUTXNJSFJiTWwwZ1BTQXRZeXdnZEZzMlhTQTlJR0VnS2lCc0xDQjBXekV3WFNBOUlHOGdLaUJzT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1pTNXZjbVJsY2lBOVBUMGdJbGxhV0NJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUTBJRDBnYnlBcUlHd3NJR1kwSUQwZ2J5QXFJR01zSUcwMElEMGdZU0FxSUd3c0lIZzBJRDBnWVNBcUlHTTdDaUFnSUNBZ0lDQWdJQ0FnSUhSYk1GMGdQU0JzSUNvZ2FDd2dkRnMwWFNBOUlIZzBJQzBnWkRRZ0tpQjFMQ0IwV3poZElEMGdiVFFnS2lCMUlDc2daalFzSUhSYk1WMGdQU0IxTENCMFd6VmRJRDBnYnlBcUlHZ3NJSFJiT1YwZ1BTQXRZU0FxSUdnc0lIUmJNbDBnUFNBdFl5QXFJR2dzSUhSYk5sMGdQU0JtTkNBcUlIVWdLeUJ0TkN3Z2RGc3hNRjBnUFNCa05DQXRJSGcwSUNvZ2RUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR1V1YjNKa1pYSWdQVDA5SUNKWVdsa2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrTlNBOUlHOGdLaUJzTENCbU5TQTlJRzhnS2lCakxDQnROU0E5SUdFZ0tpQnNMQ0I0TlNBOUlHRWdLaUJqT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBXekJkSUQwZ2JDQXFJR2dzSUhSYk5GMGdQU0F0ZFN3Z2RGczRYU0E5SUdNZ0tpQm9MQ0IwV3pGZElEMGdaRFVnS2lCMUlDc2dlRFVzSUhSYk5WMGdQU0J2SUNvZ2FDd2dkRnM1WFNBOUlHWTFJQ29nZFNBdElHMDFMQ0IwV3pKZElEMGdiVFVnS2lCMUlDMGdaalVzSUhSYk5sMGdQU0JoSUNvZ2FDd2dkRnN4TUYwZ1BTQjROU0FxSUhVZ0t5QmtOVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTTEwZ1BTQXdMQ0IwV3pkZElEMGdNQ3dnZEZzeE1WMGdQU0F3TENCMFd6RXlYU0E5SURBc0lIUmJNVE5kSUQwZ01Dd2dkRnN4TkYwZ1BTQXdMQ0IwV3pFMVhTQTlJREVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFVtOTBZWFJwYjI1R2NtOXRVWFZoZEdWeWJtbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl0Y0c5elpTaDBaaXdnWlN3Z2JtWXBPd29nSUNBZ2ZRb2dJQ0FnYkc5dmEwRjBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZOMExuTjFZbFpsWTNSdmNuTW9aU3dnZENrc0lGTjBMbXhsYm1kMGFGTnhLQ2tnUFQwOUlEQWdKaVlnS0ZOMExub2dQU0F4S1N3Z1UzUXVibTl5YldGc2FYcGxLQ2tzSUhCdUxtTnliM056Vm1WamRHOXljeWh1TENCVGRDa3NJSEJ1TG14bGJtZDBhRk54S0NrZ1BUMDlJREFnSmlZZ0tFMWhkR2d1WVdKektHNHVlaWtnUFQwOUlERWdQeUJUZEM1NElDczlJREZsTFRRZ09pQlRkQzU2SUNzOUlERmxMVFFzSUZOMExtNXZjbTFoYkdsNlpTZ3BMQ0J3Ymk1amNtOXpjMVpsWTNSdmNuTW9iaXdnVTNRcEtTd2djRzR1Ym05eWJXRnNhWHBsS0Nrc0lGcHlMbU55YjNOelZtVmpkRzl5Y3loVGRDd2djRzRwTENCcFd6QmRJRDBnY0c0dWVDd2dhVnMwWFNBOUlGcHlMbmdzSUdsYk9GMGdQU0JUZEM1NExDQnBXekZkSUQwZ2NHNHVlU3dnYVZzMVhTQTlJRnB5TG5rc0lHbGJPVjBnUFNCVGRDNTVMQ0JwV3pKZElEMGdjRzR1ZWl3Z2FWczJYU0E5SUZweUxub3NJR2xiTVRCZElEMGdVM1F1ZWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbTExYkhScGNHeDVLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aGxMQ0IwS1NrZ09pQjBhR2x6TG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vZEdocGN5d2daU2s3Q2lBZ0lDQjlDaUFnSUNCd2NtVnRkV3gwYVhCc2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJYVnNkR2x3YkhsTllYUnlhV05sY3lobExDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1bGJHVnRaVzUwY3l3Z2FTQTlJSFF1Wld4bGJXVnVkSE1zSUhJZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6TENCdklEMGdibHN3WFN3Z1lTQTlJRzViTkYwc0lHd2dQU0J1V3poZExDQmpJRDBnYmxzeE1sMHNJR2dnUFNCdVd6RmRMQ0IxSUQwZ2JsczFYU3dnWkNBOUlHNWJPVjBzSUdZZ1BTQnVXekV6WFN3Z2JTQTlJRzViTWwwc0lIZ2dQU0J1V3paZExDQjJJRDBnYmxzeE1GMHNJR2NnUFNCdVd6RTBYU3dnY0NBOUlHNWJNMTBzSUY4Z1BTQnVXemRkTENCNUlEMGdibHN4TVYwc0lHSWdQU0J1V3pFMVhTd2dRU0E5SUdsYk1GMHNJRXdnUFNCcFd6UmRMQ0JKSUQwZ2FWczRYU3dnYXlBOUlHbGJNVEpkTENCQ0lEMGdhVnN4WFN3Z1VDQTlJR2xiTlYwc0lIY2dQU0JwV3psZExDQkZJRDBnYVZzeE0xMHNJRVFnUFNCcFd6SmRMQ0JWSUQwZ2FWczJYU3dnUmlBOUlHbGJNVEJkTENCUElEMGdhVnN4TkYwc0lHNWxJRDBnYVZzelhTd2dZMlVnUFNCcFd6ZGRMQ0JXSUQwZ2FWc3hNVjBzSUZjZ1BTQnBXekUxWFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2xzd1hTQTlJRzhnS2lCQklDc2dZU0FxSUVJZ0t5QnNJQ29nUkNBcklHTWdLaUJ1WlN3Z2NsczBYU0E5SUc4Z0tpQk1JQ3NnWVNBcUlGQWdLeUJzSUNvZ1ZTQXJJR01nS2lCalpTd2djbHM0WFNBOUlHOGdLaUJKSUNzZ1lTQXFJSGNnS3lCc0lDb2dSaUFySUdNZ0tpQldMQ0J5V3pFeVhTQTlJRzhnS2lCcklDc2dZU0FxSUVVZ0t5QnNJQ29nVHlBcklHTWdLaUJYTENCeVd6RmRJRDBnYUNBcUlFRWdLeUIxSUNvZ1FpQXJJR1FnS2lCRUlDc2daaUFxSUc1bExDQnlXelZkSUQwZ2FDQXFJRXdnS3lCMUlDb2dVQ0FySUdRZ0tpQlZJQ3NnWmlBcUlHTmxMQ0J5V3psZElEMGdhQ0FxSUVrZ0t5QjFJQ29nZHlBcklHUWdLaUJHSUNzZ1ppQXFJRllzSUhKYk1UTmRJRDBnYUNBcUlHc2dLeUIxSUNvZ1JTQXJJR1FnS2lCUElDc2daaUFxSUZjc0lISmJNbDBnUFNCdElDb2dRU0FySUhnZ0tpQkNJQ3NnZGlBcUlFUWdLeUJuSUNvZ2JtVXNJSEpiTmwwZ1BTQnRJQ29nVENBcklIZ2dLaUJRSUNzZ2RpQXFJRlVnS3lCbklDb2dZMlVzSUhKYk1UQmRJRDBnYlNBcUlFa2dLeUI0SUNvZ2R5QXJJSFlnS2lCR0lDc2daeUFxSUZZc0lISmJNVFJkSUQwZ2JTQXFJR3NnS3lCNElDb2dSU0FySUhZZ0tpQlBJQ3NnWnlBcUlGY3NJSEpiTTEwZ1BTQndJQ29nUVNBcklGOGdLaUJDSUNzZ2VTQXFJRVFnS3lCaUlDb2dibVVzSUhKYk4xMGdQU0J3SUNvZ1RDQXJJRjhnS2lCUUlDc2dlU0FxSUZVZ0t5QmlJQ29nWTJVc0lISmJNVEZkSUQwZ2NDQXFJRWtnS3lCZklDb2dkeUFySUhrZ0tpQkdJQ3NnWWlBcUlGWXNJSEpiTVRWZElEMGdjQ0FxSUdzZ0t5QmZJQ29nUlNBcklIa2dLaUJQSUNzZ1lpQXFJRmNzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFd6QmRJQ285SUdVc0lIUmJORjBnS2owZ1pTd2dkRnM0WFNBcVBTQmxMQ0IwV3pFeVhTQXFQU0JsTENCMFd6RmRJQ285SUdVc0lIUmJOVjBnS2owZ1pTd2dkRnM1WFNBcVBTQmxMQ0IwV3pFelhTQXFQU0JsTENCMFd6SmRJQ285SUdVc0lIUmJObDBnS2owZ1pTd2dkRnN4TUYwZ0tqMGdaU3dnZEZzeE5GMGdLajBnWlN3Z2RGc3pYU0FxUFNCbExDQjBXemRkSUNvOUlHVXNJSFJiTVRGZElDbzlJR1VzSUhSYk1UVmRJQ285SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCa1pYUmxjbTFwYm1GdWRDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lIUWdQU0JsV3pCZExDQnVJRDBnWlZzMFhTd2dhU0E5SUdWYk9GMHNJSElnUFNCbFd6RXlYU3dnYnlBOUlHVmJNVjBzSUdFZ1BTQmxXelZkTENCc0lEMGdaVnM1WFN3Z1l5QTlJR1ZiTVROZExDQm9JRDBnWlZzeVhTd2dkU0E5SUdWYk5sMHNJR1FnUFNCbFd6RXdYU3dnWmlBOUlHVmJNVFJkTENCdElEMGdaVnN6WFN3Z2VDQTlJR1ZiTjEwc0lIWWdQU0JsV3pFeFhTd2daeUE5SUdWYk1UVmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnRJQ29nS0N0eUlDb2diQ0FxSUhVZ0xTQnBJQ29nWXlBcUlIVWdMU0J5SUNvZ1lTQXFJR1FnS3lCdUlDb2dZeUFxSUdRZ0t5QnBJQ29nWVNBcUlHWWdMU0J1SUNvZ2JDQXFJR1lwSUNzZ2VDQXFJQ2dyZENBcUlHd2dLaUJtSUMwZ2RDQXFJR01nS2lCa0lDc2djaUFxSUc4Z0tpQmtJQzBnYVNBcUlHOGdLaUJtSUNzZ2FTQXFJR01nS2lCb0lDMGdjaUFxSUd3Z0tpQm9LU0FySUhZZ0tpQW9LM1FnS2lCaklDb2dkU0F0SUhRZ0tpQmhJQ29nWmlBdElISWdLaUJ2SUNvZ2RTQXJJRzRnS2lCdklDb2daaUFySUhJZ0tpQmhJQ29nYUNBdElHNGdLaUJqSUNvZ2FDa2dLeUJuSUNvZ0tDMXBJQ29nWVNBcUlHZ2dMU0IwSUNvZ2JDQXFJSFVnS3lCMElDb2dZU0FxSUdRZ0t5QnBJQ29nYnlBcUlIVWdMU0J1SUNvZ2J5QXFJR1FnS3lCdUlDb2diQ0FxSUdncE93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Od2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2dkRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0E5SUdWYk1WMHNJR1ZiTVYwZ1BTQmxXelJkTENCbFd6UmRJRDBnZEN3Z2RDQTlJR1ZiTWwwc0lHVmJNbDBnUFNCbFd6aGRMQ0JsV3poZElEMGdkQ3dnZENBOUlHVmJObDBzSUdWYk5sMGdQU0JsV3psZExDQmxXemxkSUQwZ2RDd2dkQ0E5SUdWYk0xMHNJR1ZiTTEwZ1BTQmxXekV5WFN3Z1pWc3hNbDBnUFNCMExDQjBJRDBnWlZzM1hTd2daVnMzWFNBOUlHVmJNVE5kTENCbFd6RXpYU0E5SUhRc0lIUWdQU0JsV3pFeFhTd2daVnN4TVYwZ1BTQmxXekUwWFN3Z1pWc3hORjBnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBVRzl6YVhScGIyNG9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1cGMxWmxZM1J2Y2pNZ1B5QW9hVnN4TWwwZ1BTQmxMbmdzSUdsYk1UTmRJRDBnWlM1NUxDQnBXekUwWFNBOUlHVXVlaWtnT2lBb2FWc3hNbDBnUFNCbExDQnBXekV6WFNBOUlIUXNJR2xiTVRSZElEMGdiaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JwYm5abGNuUW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQjBJRDBnWlZzd1hTd2diaUE5SUdWYk1WMHNJR2tnUFNCbFd6SmRMQ0J5SUQwZ1pWc3pYU3dnYnlBOUlHVmJORjBzSUdFZ1BTQmxXelZkTENCc0lEMGdaVnMyWFN3Z1l5QTlJR1ZiTjEwc0lHZ2dQU0JsV3poZExDQjFJRDBnWlZzNVhTd2daQ0E5SUdWYk1UQmRMQ0JtSUQwZ1pWc3hNVjBzSUcwZ1BTQmxXekV5WFN3Z2VDQTlJR1ZiTVROZExDQjJJRDBnWlZzeE5GMHNJR2NnUFNCbFd6RTFYU3dnY0NBOUlIVWdLaUIySUNvZ1l5QXRJSGdnS2lCa0lDb2dZeUFySUhnZ0tpQnNJQ29nWmlBdElHRWdLaUIySUNvZ1ppQXRJSFVnS2lCc0lDb2daeUFySUdFZ0tpQmtJQ29nWnl3Z1h5QTlJRzBnS2lCa0lDb2dZeUF0SUdnZ0tpQjJJQ29nWXlBdElHMGdLaUJzSUNvZ1ppQXJJRzhnS2lCMklDb2daaUFySUdnZ0tpQnNJQ29nWnlBdElHOGdLaUJrSUNvZ1p5d2dlU0E5SUdnZ0tpQjRJQ29nWXlBdElHMGdLaUIxSUNvZ1l5QXJJRzBnS2lCaElDb2daaUF0SUc4Z0tpQjRJQ29nWmlBdElHZ2dLaUJoSUNvZ1p5QXJJRzhnS2lCMUlDb2daeXdnWWlBOUlHMGdLaUIxSUNvZ2JDQXRJR2dnS2lCNElDb2diQ0F0SUcwZ0tpQmhJQ29nWkNBcklHOGdLaUI0SUNvZ1pDQXJJR2dnS2lCaElDb2dkaUF0SUc4Z0tpQjFJQ29nZGl3Z1FTQTlJSFFnS2lCd0lDc2diaUFxSUY4Z0t5QnBJQ29nZVNBcklISWdLaUJpT3dvZ0lDQWdJQ0FnSUdsbUlDaEJJRDA5UFNBd0tTQnlaWFIxY200Z2RHaHBjeTV6WlhRb01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdiR1YwSUV3Z1BTQXhJQzhnUVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlZzd1hTQTlJSEFnS2lCTUxDQmxXekZkSUQwZ0tIZ2dLaUJrSUNvZ2NpQXRJSFVnS2lCMklDb2djaUF0SUhnZ0tpQnBJQ29nWmlBcklHNGdLaUIySUNvZ1ppQXJJSFVnS2lCcElDb2daeUF0SUc0Z0tpQmtJQ29nWnlrZ0tpQk1MQ0JsV3pKZElEMGdLR0VnS2lCMklDb2djaUF0SUhnZ0tpQnNJQ29nY2lBcklIZ2dLaUJwSUNvZ1l5QXRJRzRnS2lCMklDb2dZeUF0SUdFZ0tpQnBJQ29nWnlBcklHNGdLaUJzSUNvZ1p5a2dLaUJNTENCbFd6TmRJRDBnS0hVZ0tpQnNJQ29nY2lBdElHRWdLaUJrSUNvZ2NpQXRJSFVnS2lCcElDb2dZeUFySUc0Z0tpQmtJQ29nWXlBcklHRWdLaUJwSUNvZ1ppQXRJRzRnS2lCc0lDb2daaWtnS2lCTUxDQmxXelJkSUQwZ1h5QXFJRXdzSUdWYk5WMGdQU0FvYUNBcUlIWWdLaUJ5SUMwZ2JTQXFJR1FnS2lCeUlDc2diU0FxSUdrZ0tpQm1JQzBnZENBcUlIWWdLaUJtSUMwZ2FDQXFJR2tnS2lCbklDc2dkQ0FxSUdRZ0tpQm5LU0FxSUV3c0lHVmJObDBnUFNBb2JTQXFJR3dnS2lCeUlDMGdieUFxSUhZZ0tpQnlJQzBnYlNBcUlHa2dLaUJqSUNzZ2RDQXFJSFlnS2lCaklDc2dieUFxSUdrZ0tpQm5JQzBnZENBcUlHd2dLaUJuS1NBcUlFd3NJR1ZiTjEwZ1BTQW9ieUFxSUdRZ0tpQnlJQzBnYUNBcUlHd2dLaUJ5SUNzZ2FDQXFJR2tnS2lCaklDMGdkQ0FxSUdRZ0tpQmpJQzBnYnlBcUlHa2dLaUJtSUNzZ2RDQXFJR3dnS2lCbUtTQXFJRXdzSUdWYk9GMGdQU0I1SUNvZ1RDd2daVnM1WFNBOUlDaHRJQ29nZFNBcUlISWdMU0JvSUNvZ2VDQXFJSElnTFNCdElDb2diaUFxSUdZZ0t5QjBJQ29nZUNBcUlHWWdLeUJvSUNvZ2JpQXFJR2NnTFNCMElDb2dkU0FxSUdjcElDb2dUQ3dnWlZzeE1GMGdQU0FvYnlBcUlIZ2dLaUJ5SUMwZ2JTQXFJR0VnS2lCeUlDc2diU0FxSUc0Z0tpQmpJQzBnZENBcUlIZ2dLaUJqSUMwZ2J5QXFJRzRnS2lCbklDc2dkQ0FxSUdFZ0tpQm5LU0FxSUV3c0lHVmJNVEZkSUQwZ0tHZ2dLaUJoSUNvZ2NpQXRJRzhnS2lCMUlDb2djaUF0SUdnZ0tpQnVJQ29nWXlBcklIUWdLaUIxSUNvZ1l5QXJJRzhnS2lCdUlDb2daaUF0SUhRZ0tpQmhJQ29nWmlrZ0tpQk1MQ0JsV3pFeVhTQTlJR0lnS2lCTUxDQmxXekV6WFNBOUlDaG9JQ29nZUNBcUlHa2dMU0J0SUNvZ2RTQXFJR2tnS3lCdElDb2diaUFxSUdRZ0xTQjBJQ29nZUNBcUlHUWdMU0JvSUNvZ2JpQXFJSFlnS3lCMElDb2dkU0FxSUhZcElDb2dUQ3dnWlZzeE5GMGdQU0FvYlNBcUlHRWdLaUJwSUMwZ2J5QXFJSGdnS2lCcElDMGdiU0FxSUc0Z0tpQnNJQ3NnZENBcUlIZ2dLaUJzSUNzZ2J5QXFJRzRnS2lCMklDMGdkQ0FxSUdFZ0tpQjJLU0FxSUV3c0lHVmJNVFZkSUQwZ0tHOGdLaUIxSUNvZ2FTQXRJR2dnS2lCaElDb2dhU0FySUdnZ0tpQnVJQ29nYkNBdElIUWdLaUIxSUNvZ2JDQXRJRzhnS2lCdUlDb2daQ0FySUhRZ0tpQmhJQ29nWkNrZ0tpQk1MQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMk5oYkdVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JpQTlJR1V1ZUN3Z2FTQTlJR1V1ZVN3Z2NpQTlJR1V1ZWpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEZzd1hTQXFQU0J1TENCMFd6UmRJQ285SUdrc0lIUmJPRjBnS2owZ2Npd2dkRnN4WFNBcVBTQnVMQ0IwV3pWZElDbzlJR2tzSUhSYk9WMGdLajBnY2l3Z2RGc3lYU0FxUFNCdUxDQjBXelpkSUNvOUlHa3NJSFJiTVRCZElDbzlJSElzSUhSYk0xMGdLajBnYml3Z2RGczNYU0FxUFNCcExDQjBXekV4WFNBcVBTQnlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwVFdGNFUyTmhiR1ZQYmtGNGFYTW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQjBJRDBnWlZzd1hTQXFJR1ZiTUYwZ0t5QmxXekZkSUNvZ1pWc3hYU0FySUdWYk1sMGdLaUJsV3pKZExDQnVJRDBnWlZzMFhTQXFJR1ZiTkYwZ0t5QmxXelZkSUNvZ1pWczFYU0FySUdWYk5sMGdLaUJsV3paZExDQnBJRDBnWlZzNFhTQXFJR1ZiT0YwZ0t5QmxXemxkSUNvZ1pWczVYU0FySUdWYk1UQmRJQ29nWlZzeE1GMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1YzNGeWRDaE5ZWFJvTG0xaGVDaDBMQ0J1TENCcEtTazdDaUFnSUNCOUNpQWdJQ0J0WVd0bFZISmhibk5zWVhScGIyNG9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3hMQ0F3TENBd0xDQmxMQ0F3TENBeExDQXdMQ0IwTENBd0xDQXdMQ0F4TENCdUxDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWU2IzUmhkR2x2Ymxnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdUV0YwYUM1amIzTW9aU2tzSUc0Z1BTQk5ZWFJvTG5OcGJpaGxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9NU3dnTUN3Z01Dd2dNQ3dnTUN3Z2RDd2dMVzRzSURBc0lEQXNJRzRzSUhRc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWSnZkR0YwYVc5dVdTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JOWVhSb0xtTnZjeWhsS1N3Z2JpQTlJRTFoZEdndWMybHVLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2gwTENBd0xDQnVMQ0F3TENBd0xDQXhMQ0F3TENBd0xDQXRiaXdnTUN3Z2RDd2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVbTkwWVhScGIyNWFLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUUxaGRHZ3VZMjl6S0dVcExDQnVJRDBnVFdGMGFDNXphVzRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0hRc0lDMXVMQ0F3TENBd0xDQnVMQ0IwTENBd0xDQXdMQ0F3TENBd0xDQXhMQ0F3TENBd0xDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZTYjNSaGRHbHZia0Y0YVhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnVFdGMGFDNWpiM01vZENrc0lHa2dQU0JOWVhSb0xuTnBiaWgwS1N3Z2NpQTlJREVnTFNCdUxDQnZJRDBnWlM1NExDQmhJRDBnWlM1NUxDQnNJRDBnWlM1NkxDQmpJRDBnY2lBcUlHOHNJR2dnUFNCeUlDb2dZVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9ZeUFxSUc4Z0t5QnVMQ0JqSUNvZ1lTQXRJR2tnS2lCc0xDQmpJQ29nYkNBcklHa2dLaUJoTENBd0xDQmpJQ29nWVNBcklHa2dLaUJzTENCb0lDb2dZU0FySUc0c0lHZ2dLaUJzSUMwZ2FTQXFJRzhzSURBc0lHTWdLaUJzSUMwZ2FTQXFJR0VzSUdnZ0tpQnNJQ3NnYVNBcUlHOHNJSElnS2lCc0lDb2diQ0FySUc0c0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpWTmpZV3hsS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvWlN3Z01Dd2dNQ3dnTUN3Z01Dd2dkQ3dnTUN3Z01Dd2dNQ3dnTUN3Z2Jpd2dNQ3dnTUN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVMmhsWVhJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENneExDQnVMQ0J5TENBd0xDQmxMQ0F4TENCdkxDQXdMQ0IwTENCcExDQXhMQ0F3TENBd0xDQXdMQ0F3TENBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZiWEJ2YzJVb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnY2lBOUlIUXVYM2dzSUc4Z1BTQjBMbDk1TENCaElEMGdkQzVmZWl3Z2JDQTlJSFF1WDNjc0lHTWdQU0J5SUNzZ2Npd2dhQ0E5SUc4Z0t5QnZMQ0IxSUQwZ1lTQXJJR0VzSUdRZ1BTQnlJQ29nWXl3Z1ppQTlJSElnS2lCb0xDQnRJRDBnY2lBcUlIVXNJSGdnUFNCdklDb2dhQ3dnZGlBOUlHOGdLaUIxTENCbklEMGdZU0FxSUhVc0lIQWdQU0JzSUNvZ1l5d2dYeUE5SUd3Z0tpQm9MQ0I1SUQwZ2JDQXFJSFVzSUdJZ1BTQnVMbmdzSUVFZ1BTQnVMbmtzSUV3Z1BTQnVMbm83Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2xiTUYwZ1BTQW9NU0F0SUNoNElDc2daeWtwSUNvZ1lpd2dhVnN4WFNBOUlDaG1JQ3NnZVNrZ0tpQmlMQ0JwV3pKZElEMGdLRzBnTFNCZktTQXFJR0lzSUdsYk0xMGdQU0F3TENCcFd6UmRJRDBnS0dZZ0xTQjVLU0FxSUVFc0lHbGJOVjBnUFNBb01TQXRJQ2hrSUNzZ1p5a3BJQ29nUVN3Z2FWczJYU0E5SUNoMklDc2djQ2tnS2lCQkxDQnBXemRkSUQwZ01Dd2dhVnM0WFNBOUlDaHRJQ3NnWHlrZ0tpQk1MQ0JwV3psZElEMGdLSFlnTFNCd0tTQXFJRXdzSUdsYk1UQmRJRDBnS0RFZ0xTQW9aQ0FySUhncEtTQXFJRXdzSUdsYk1URmRJRDBnTUN3Z2FWc3hNbDBnUFNCbExuZ3NJR2xiTVROZElEMGdaUzU1TENCcFd6RTBYU0E5SUdVdWVpd2dhVnN4TlYwZ1BTQXhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR1ZqYjIxd2IzTmxLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lISWdQU0J6YVM1elpYUW9hVnN3WFN3Z2FWc3hYU3dnYVZzeVhTa3ViR1Z1WjNSb0tDa3NJRzhnUFNCemFTNXpaWFFvYVZzMFhTd2dhVnMxWFN3Z2FWczJYU2t1YkdWdVozUm9LQ2tzSUdFZ1BTQnphUzV6WlhRb2FWczRYU3dnYVZzNVhTd2dhVnN4TUYwcExteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lIUm9hWE11WkdWMFpYSnRhVzVoYm5Rb0tTQThJREFnSmlZZ0tISWdQU0F0Y2lrc0lHVXVlQ0E5SUdsYk1USmRMQ0JsTG5rZ1BTQnBXekV6WFN3Z1pTNTZJRDBnYVZzeE5GMHNJRWwwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNBeElDOGdjaXdnYUNBOUlERWdMeUJ2TENCMUlEMGdNU0F2SUdFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVsMExtVnNaVzFsYm5Seld6QmRJQ285SUdNc0lFbDBMbVZzWlcxbGJuUnpXekZkSUNvOUlHTXNJRWwwTG1Wc1pXMWxiblJ6V3pKZElDbzlJR01zSUVsMExtVnNaVzFsYm5Seld6UmRJQ285SUdnc0lFbDBMbVZzWlcxbGJuUnpXelZkSUNvOUlHZ3NJRWwwTG1Wc1pXMWxiblJ6V3paZElDbzlJR2dzSUVsMExtVnNaVzFsYm5Seld6aGRJQ285SUhVc0lFbDBMbVZzWlcxbGJuUnpXemxkSUNvOUlIVXNJRWwwTG1Wc1pXMWxiblJ6V3pFd1hTQXFQU0IxTENCMExuTmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2hKZENrc0lHNHVlQ0E5SUhJc0lHNHVlU0E5SUc4c0lHNHVlaUE5SUdFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVR1Z5YzNCbFkzUnBkbVVvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1dFlXdGxVR1Z5YzNCbFkzUnBkbVVvS1NCb1lYTWdZbVZsYmlCeVpXUmxabWx1WldRZ1lXNWtJR2hoY3lCaElHNWxkeUJ6YVdkdVlYUjFjbVV1SUZCc1pXRnpaU0JqYUdWamF5QjBhR1VnWkc5amN5NGlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHd2dQU0F5SUNvZ2NpQXZJQ2gwSUMwZ1pTa3NJR01nUFNBeUlDb2djaUF2SUNodUlDMGdhU2tzSUdnZ1BTQW9kQ0FySUdVcElDOGdLSFFnTFNCbEtTd2dkU0E5SUNodUlDc2dhU2tnTHlBb2JpQXRJR2twTENCa0lEMGdMU2h2SUNzZ2Npa2dMeUFvYnlBdElISXBMQ0JtSUQwZ0xUSWdLaUJ2SUNvZ2NpQXZJQ2h2SUMwZ2NpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRmJNRjBnUFNCc0xDQmhXelJkSUQwZ01Dd2dZVnM0WFNBOUlHZ3NJR0ZiTVRKZElEMGdNQ3dnWVZzeFhTQTlJREFzSUdGYk5WMGdQU0JqTENCaFd6bGRJRDBnZFN3Z1lWc3hNMTBnUFNBd0xDQmhXekpkSUQwZ01Dd2dZVnMyWFNBOUlEQXNJR0ZiTVRCZElEMGdaQ3dnWVZzeE5GMGdQU0JtTENCaFd6TmRJRDBnTUN3Z1lWczNYU0E5SURBc0lHRmJNVEZkSUQwZ0xURXNJR0ZiTVRWZElEMGdNQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWUGNuUm9iMmR5WVhCb2FXTW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJR3hsZENCaElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JDQTlJREVnTHlBb2RDQXRJR1VwTENCaklEMGdNU0F2SUNodUlDMGdhU2tzSUdnZ1BTQXhJQzhnS0c4Z0xTQnlLU3dnZFNBOUlDaDBJQ3NnWlNrZ0tpQnNMQ0JrSUQwZ0tHNGdLeUJwS1NBcUlHTXNJR1lnUFNBb2J5QXJJSElwSUNvZ2FEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1lWc3dYU0E5SURJZ0tpQnNMQ0JoV3pSZElEMGdNQ3dnWVZzNFhTQTlJREFzSUdGYk1USmRJRDBnTFhVc0lHRmJNVjBnUFNBd0xDQmhXelZkSUQwZ01pQXFJR01zSUdGYk9WMGdQU0F3TENCaFd6RXpYU0E5SUMxa0xDQmhXekpkSUQwZ01Dd2dZVnMyWFNBOUlEQXNJR0ZiTVRCZElEMGdMVElnS2lCb0xDQmhXekUwWFNBOUlDMW1MQ0JoV3pOZElEMGdNQ3dnWVZzM1hTQTlJREFzSUdGYk1URmRJRDBnTUN3Z1lWc3hOVjBnUFNBeExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Wld4bGJXVnVkSE1zSUc0Z1BTQmxMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0F4TmpzZ2FTc3JLV2xtSUNoMFcybGRJQ0U5UFNCdVcybGRLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUZ5Y21GNUtHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJREUyT3lCdUt5c3BkR2hwY3k1bGJHVnRaVzUwYzF0dVhTQTlJR1ZiYmlBcklIUmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFczUmRJRDBnYmxzd1hTd2daVnQwSUNzZ01WMGdQU0J1V3pGZExDQmxXM1FnS3lBeVhTQTlJRzViTWwwc0lHVmJkQ0FySUROZElEMGdibHN6WFN3Z1pWdDBJQ3NnTkYwZ1BTQnVXelJkTENCbFczUWdLeUExWFNBOUlHNWJOVjBzSUdWYmRDQXJJRFpkSUQwZ2JsczJYU3dnWlZ0MElDc2dOMTBnUFNCdVd6ZGRMQ0JsVzNRZ0t5QTRYU0E5SUc1Yk9GMHNJR1ZiZENBcklEbGRJRDBnYmxzNVhTd2daVnQwSUNzZ01UQmRJRDBnYmxzeE1GMHNJR1ZiZENBcklERXhYU0E5SUc1Yk1URmRMQ0JsVzNRZ0t5QXhNbDBnUFNCdVd6RXlYU3dnWlZ0MElDc2dNVE5kSUQwZ2Jsc3hNMTBzSUdWYmRDQXJJREUwWFNBOUlHNWJNVFJkTENCbFczUWdLeUF4TlYwZ1BTQnVXekUxWFN3Z1pUc0tJQ0FnSUgwS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG1selRXRjBjbWw0TkNBOUlDRXdPd3AyWVhJZ2Mya2dQU0J1WlhjZ1RTd2dTWFFnUFNCdVpYY2djR1VzSUhSbUlEMGdibVYzSUUwb01Dd2dNQ3dnTUNrc0lHNW1JRDBnYm1WM0lFMG9NU3dnTVN3Z01Ta3NJSEJ1SUQwZ2JtVjNJRTBzSUZweUlEMGdibVYzSUUwc0lGTjBJRDBnYm1WM0lFMHNJRjlzSUQwZ2JtVjNJSEJsTENCTmJDQTlJRzVsZHlCbmRDd2dXbTRnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Dd2dkQ0E5SURBc0lHNGdQU0F3TENCcElEMGdXbTR1UkdWbVlYVnNkRTl5WkdWeUtYc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5NElEMGdaU3dnZEdocGN5NWZlU0E5SUhRc0lIUm9hWE11WDNvZ1BTQnVMQ0IwYUdsekxsOXZjbVJsY2lBOUlHazdDaUFnSUNCOUNpQWdJQ0JuWlhRZ2VDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVEc0tJQ0FnSUgwS0lDQWdJSE5sZENCNEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnWlN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2s3Q2lBZ0lDQjlDaUFnSUNCelpYUWdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZVNBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZENCNktDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5Nk93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhvb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgzb2dQU0JsTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdiM0prWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDI5eVpHVnlPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHOXlaR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5dmNtUmxjaUE5SUdVc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1RzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVMQ0JwSUQwZ2RHaHBjeTVmYjNKa1pYSXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQTlJR1VzSUhSb2FYTXVYM2tnUFNCMExDQjBhR2x6TGw5NklEMGdiaXdnZEdocGN5NWZiM0prWlhJZ1BTQnBMQ0IwYUdsekxsOXZia05vWVc1blpVTmhiR3hpWVdOcktDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kR2hwY3k1ZmVDd2dkR2hwY3k1ZmVTd2dkR2hwY3k1ZmVpd2dkR2hwY3k1ZmIzSmtaWElwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2dnUFNCbExsOTRMQ0IwYUdsekxsOTVJRDBnWlM1ZmVTd2dkR2hwY3k1ZmVpQTlJR1V1WDNvc0lIUm9hWE11WDI5eVpHVnlJRDBnWlM1ZmIzSmtaWElzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNobExDQjBJRDBnZEdocGN5NWZiM0prWlhJc0lHNGdQU0FoTUNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNWxiR1Z0Wlc1MGN5d2djaUE5SUdsYk1GMHNJRzhnUFNCcFd6UmRMQ0JoSUQwZ2FWczRYU3dnYkNBOUlHbGJNVjBzSUdNZ1BTQnBXelZkTENCb0lEMGdhVnM1WFN3Z2RTQTlJR2xiTWwwc0lHUWdQU0JwV3paZExDQm1JRDBnYVZzeE1GMDdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tIUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pZV1ZvaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhOcGJpaHRkQ2hoTENBdE1Td2dNU2twTENCTllYUm9MbUZpY3loaEtTQThJQzQ1T1RrNU9UazVJRDhnS0hSb2FYTXVYM2dnUFNCTllYUm9MbUYwWVc0eUtDMW9MQ0JtS1N3Z2RHaHBjeTVmZWlBOUlFMWhkR2d1WVhSaGJqSW9MVzhzSUhJcEtTQTZJQ2gwYUdsekxsOTRJRDBnVFdGMGFDNWhkR0Z1TWloa0xDQmpLU3dnZEdocGN5NWZlaUE5SURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxsWVdpSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NElEMGdUV0YwYUM1aGMybHVLQzF0ZENob0xDQXRNU3dnTVNrcExDQk5ZWFJvTG1GaWN5aG9LU0E4SUM0NU9UazVPVGs1SUQ4Z0tIUm9hWE11WDNrZ1BTQk5ZWFJvTG1GMFlXNHlLR0VzSUdZcExDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGRHRnVNaWhzTENCaktTa2dPaUFvZEdocGN5NWZlU0E5SUUxaGRHZ3VZWFJoYmpJb0xYVXNJSElwTENCMGFHbHpMbDk2SUQwZ01DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdsaFpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzZ2dQU0JOWVhSb0xtRnphVzRvYlhRb1pDd2dMVEVzSURFcEtTd2dUV0YwYUM1aFluTW9aQ2tnUENBdU9UazVPVGs1T1NBL0lDaDBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWd0ZFN3Z1ppa3NJSFJvYVhNdVgzb2dQU0JOWVhSb0xtRjBZVzR5S0MxdkxDQmpLU2tnT2lBb2RHaHBjeTVmZVNBOUlEQXNJSFJvYVhNdVgzb2dQU0JOWVhSb0xtRjBZVzR5S0d3c0lISXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmFXVmdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlU0E5SUUxaGRHZ3VZWE5wYmlndGJYUW9kU3dnTFRFc0lERXBLU3dnVFdGMGFDNWhZbk1vZFNrZ1BDQXVPVGs1T1RrNU9TQS9JQ2gwYUdsekxsOTRJRDBnVFdGMGFDNWhkR0Z1TWloa0xDQm1LU3dnZEdocGN5NWZlaUE5SUUxaGRHZ3VZWFJoYmpJb2JDd2djaWtwSURvZ0tIUm9hWE11WDNnZ1BTQXdMQ0IwYUdsekxsOTZJRDBnVFdGMGFDNWhkR0Z1TWlndGJ5d2dZeWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGxhV0NJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDk2SUQwZ1RXRjBhQzVoYzJsdUtHMTBLR3dzSUMweExDQXhLU2tzSUUxaGRHZ3VZV0p6S0d3cElEd2dMams1T1RrNU9Ua2dQeUFvZEdocGN5NWZlQ0E5SUUxaGRHZ3VZWFJoYmpJb0xXZ3NJR01wTENCMGFHbHpMbDk1SUQwZ1RXRjBhQzVoZEdGdU1pZ3RkU3dnY2lrcElEb2dLSFJvYVhNdVgzZ2dQU0F3TENCMGFHbHpMbDk1SUQwZ1RXRjBhQzVoZEdGdU1paGhMQ0JtS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpV0ZwWklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNvZ1BTQk5ZWFJvTG1GemFXNG9MVzEwS0c4c0lDMHhMQ0F4S1Nrc0lFMWhkR2d1WVdKektHOHBJRHdnTGprNU9UazVPVGtnUHlBb2RHaHBjeTVmZUNBOUlFMWhkR2d1WVhSaGJqSW9aQ3dnWXlrc0lIUm9hWE11WDNrZ1BTQk5ZWFJvTG1GMFlXNHlLR0VzSUhJcEtTQTZJQ2gwYUdsekxsOTRJRDBnVFdGMGFDNWhkR0Z1TWlndGFDd2daaWtzSUhSb2FYTXVYM2tnUFNBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUZkV3hsY2pvZ0xuTmxkRVp5YjIxU2IzUmhkR2x2YmsxaGRISnBlQ2dwSUdWdVkyOTFiblJsY21Wa0lHRnVJSFZ1YTI1dmQyNGdiM0prWlhJNklDSWdLeUIwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMjl5WkdWeUlEMGdkQ3dnYmlBOVBUMGdJVEFnSmlZZ2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVkYxWVhSbGNtNXBiMjRvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJmYkM1dFlXdGxVbTkwWVhScGIyNUdjbTl0VVhWaGRHVnlibWx2YmlobEtTd2dkR2hwY3k1elpYUkdjbTl0VW05MFlYUnBiMjVOWVhSeWFYZ29YMndzSUhRc0lHNHBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVlpsWTNSdmNqTW9aU3dnZENBOUlIUm9hWE11WDI5eVpHVnlLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLR1V1ZUN3Z1pTNTVMQ0JsTG5vc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnY21WdmNtUmxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxc0xuTmxkRVp5YjIxRmRXeGxjaWgwYUdsektTd2dkR2hwY3k1elpYUkdjbTl0VVhWaGRHVnlibWx2YmloTmJDd2daU2s3Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExsOTRJRDA5UFNCMGFHbHpMbDk0SUNZbUlHVXVYM2tnUFQwOUlIUm9hWE11WDNrZ0ppWWdaUzVmZWlBOVBUMGdkR2hwY3k1ZmVpQW1KaUJsTGw5dmNtUmxjaUE5UFQwZ2RHaHBjeTVmYjNKa1pYSTdDaUFnSUNCOUNpQWdJQ0JtY205dFFYSnlZWGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDk0SUQwZ1pWc3dYU3dnZEdocGN5NWZlU0E5SUdWYk1WMHNJSFJvYVhNdVgzb2dQU0JsV3pKZExDQmxXek5kSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdVgyOXlaR1Z5SUQwZ1pWc3pYU2tzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2UVhKeVlYa29aU0E5SUZ0ZExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFczUmRJRDBnZEdocGN5NWZlQ3dnWlZ0MElDc2dNVjBnUFNCMGFHbHpMbDk1TENCbFczUWdLeUF5WFNBOUlIUm9hWE11WDNvc0lHVmJkQ0FySUROZElEMGdkR2hwY3k1ZmIzSmtaWElzSUdVN0NpQWdJQ0I5Q2lBZ0lDQjBiMVpsWTNSdmNqTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQ4Z1pTNXpaWFFvZEdocGN5NWZlQ3dnZEdocGN5NWZlU3dnZEdocGN5NWZlaWtnT2lCdVpYY2dUU2gwYUdsekxsOTRMQ0IwYUdsekxsOTVMQ0IwYUdsekxsOTZLVHNLSUNBZ0lIMEtJQ0FnSUY5dmJrTm9ZVzVuWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1gyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTQjdmUXA5T3dwYWJpNXdjbTkwYjNSNWNHVXVhWE5GZFd4bGNpQTlJQ0V3T3dwYWJpNUVaV1poZFd4MFQzSmtaWElnUFNBaVdGbGFJanNLV200dVVtOTBZWFJwYjI1UGNtUmxjbk1nUFNCYkNpQWdJQ0FpV0ZsYUlpd0tJQ0FnSUNKWldsZ2lMQW9nSUNBZ0lscFlXU0lzQ2lBZ0lDQWlXRnBaSWl3S0lDQWdJQ0paV0ZvaUxBb2dJQ0FnSWxwWldDSUtYVHNLZG1GeUlFcHpJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnNnUFNBeE93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xaGMyc2dQU0FvTVNBOFBDQmxJSHdnTUNrZ1BqNCtJREE3Q2lBZ0lDQjlDaUFnSUNCbGJtRmliR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGemF5QjhQU0F4SUR3OElHVWdmQ0F3T3dvZ0lDQWdmUW9nSUNBZ1pXNWhZbXhsUVd4c0tDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRnpheUE5SUMweE93b2dJQ0FnZlFvZ0lDQWdkRzluWjJ4bEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnNnWGowZ01TQThQQ0JsSUh3Z01Ec0tJQ0FnSUgwS0lDQWdJR1JwYzJGaWJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z6YXlBbVBTQitLREVnUER3Z1pTQjhJREFwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpZV0pzWlVGc2JDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnNnUFNBd093b2dJQ0FnZlFvZ0lDQWdkR1Z6ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDaDBhR2x6TG0xaGMyc2dKaUJsTG0xaGMyc3BJQ0U5UFNBd093b2dJQ0FnZlFvZ0lDQWdhWE5GYm1GaWJHVmtLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0hSb2FYTXViV0Z6YXlBbUlDZ3hJRHc4SUdVZ2ZDQXdLU2tnSVQwOUlEQTdDaUFnSUNCOUNuMHNJSEptSUQwZ01Dd2dZbXdnUFNCdVpYY2dUU3dnYjJrZ1BTQnVaWGNnWjNRc0lGRjBJRDBnYm1WM0lIQmxMQ0FrY2lBOUlHNWxkeUJOTENCYWFTQTlJRzVsZHlCTkxDQnpaaUE5SUc1bGR5Qk5MQ0J2WmlBOUlHNWxkeUJuZEN3Z2Qyd2dQU0J1WlhjZ1RTZ3hMQ0F3TENBd0tTd2dVMndnUFNCdVpYY2dUU2d3TENBeExDQXdLU3dnVkd3Z1BTQnVaWGNnVFNnd0xDQXdMQ0F4S1N3Z1lXWWdQU0I3Q2lBZ0lDQjBlWEJsT2lBaVlXUmtaV1FpQ24wc0lFVnNJRDBnZXdvZ0lDQWdkSGx3WlRvZ0luSmxiVzkyWldRaUNuMHNJRTVsSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklISm1LeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdSWFFvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSlBZbXBsWTNRelJDSXNJSFJvYVhNdWNHRnlaVzUwSUQwZ2JuVnNiQ3dnZEdocGN5NWphR2xzWkhKbGJpQTlJRnRkTENCMGFHbHpMblZ3SUQwZ1RtVXVSR1ZtWVhWc2RGVndMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnVaWGNnVFN3Z2RDQTlJRzVsZHlCYWJpd2diaUE5SUc1bGR5Qm5kQ3dnYVNBOUlHNWxkeUJOS0RFc0lERXNJREVwT3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhJb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc0dWMyVjBSbkp2YlVWMWJHVnlLSFFzSUNFeEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdieWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQzV6WlhSR2NtOXRVWFZoZEdWeWJtbHZiaWh1TENCMmIybGtJREFzSUNFeEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzVmYjI1RGFHRnVaMlVvY2lrc0lHNHVYMjl1UTJoaGJtZGxLRzhwTENCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWgwYUdsekxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNW1hV2QxY21GaWJHVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1pRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnliM1JoZEdsdmJqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1Wm1sbmRYSmhZbXhsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVkVzFsY21GaWJHVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJSFFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnY1hWaGRHVnlibWx2YmpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVabWxuZFhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWdWRXMWxjbUZpYkdVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMk5oYkdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibVpwWjNWeVlXSnNaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuVnRaWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnBDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRzF2WkdWc1ZtbGxkMDFoZEhKcGVEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJ3WlFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hOWVhSeWFYZzZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnYkhRS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbTFoZEhKcGVDQTlJRzVsZHlCd1pTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pDQTlJRzVsZHlCd1pTd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ1RtVXVSR1ZtWVhWc2RFMWhkSEpwZUVGMWRHOVZjR1JoZEdVc0lIUm9hWE11YldGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMbXhoZVdWeWN5QTlJRzVsZHlCS2N5d2dkR2hwY3k1MmFYTnBZbXhsSUQwZ0lUQXNJSFJvYVhNdVkyRnpkRk5vWVdSdmR5QTlJQ0V4TENCMGFHbHpMbkpsWTJWcGRtVlRhR0ZrYjNjZ1BTQWhNU3dnZEdocGN5NW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ0lUQXNJSFJvYVhNdWNtVnVaR1Z5VDNKa1pYSWdQU0F3TENCMGFHbHpMbUZ1YVcxaGRHbHZibk1nUFNCYlhTd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlIdDlPd29nSUNBZ2ZRb2dJQ0FnYjI1Q1pXWnZjbVZTWlc1a1pYSW9LU0I3ZlFvZ0lDQWdiMjVCWm5SbGNsSmxibVJsY2lncElIdDlDaUFnSUNCaGNIQnNlVTFoZEhKcGVEUW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQW1KaUIwYUdsekxuVndaR0YwWlUxaGRISnBlQ2dwTENCMGFHbHpMbTFoZEhKcGVDNXdjbVZ0ZFd4MGFYQnNlU2hsS1N3Z2RHaHBjeTV0WVhSeWFYZ3VaR1ZqYjIxd2IzTmxLSFJvYVhNdWNHOXphWFJwYjI0c0lIUm9hWE11Y1hWaGRHVnlibWx2Yml3Z2RHaHBjeTV6WTJGc1pTazdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VWRjFZWFJsY201cGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuRjFZWFJsY201cGIyNHVjSEpsYlhWc2RHbHdiSGtvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlNiM1JoZEdsdmJrWnliMjFCZUdselFXNW5iR1VvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpNXpaWFJHY205dFFYaHBjMEZ1WjJ4bEtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbTkwWVhScGIyNUdjbTl0UlhWc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV6WlhSR2NtOXRSWFZzWlhJb1pTd2dJVEFwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbTkwWVhScGIyNUdjbTl0VFdGMGNtbDRLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkYxWVhSbGNtNXBiMjR1YzJWMFJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNEtHVXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtOTBZWFJwYjI1R2NtOXRVWFZoZEdWeWJtbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG1OdmNIa29aU2s3Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZQYmtGNGFYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdmFTNXpaWFJHY205dFFYaHBjMEZ1WjJ4bEtHVXNJSFFwTENCMGFHbHpMbkYxWVhSbGNtNXBiMjR1YlhWc2RHbHdiSGtvYjJrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsVDI1WGIzSnNaRUY0YVhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2YVM1elpYUkdjbTl0UVhocGMwRnVaMnhsS0dVc0lIUXBMQ0IwYUdsekxuRjFZWFJsY201cGIyNHVjSEpsYlhWc2RHbHdiSGtvYjJrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtOTBZWFJsV0NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y205MFlYUmxUMjVCZUdsektIZHNMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlZrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KdmRHRjBaVTl1UVhocGN5aFRiQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWYUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eWIzUmhkR1ZQYmtGNGFYTW9WR3dzSUdVcE93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Oc1lYUmxUMjVCZUdsektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWW13dVkyOXdlU2hsS1M1aGNIQnNlVkYxWVhSbGNtNXBiMjRvZEdocGN5NXhkV0YwWlhKdWFXOXVLU3dnZEdocGN5NXdiM05wZEdsdmJpNWhaR1FvWW13dWJYVnNkR2x3YkhsVFkyRnNZWElvZENrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISmhibk5zWVhSbFdDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRISmhibk5zWVhSbFQyNUJlR2x6S0hkc0xDQmxLVHNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlZrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5SeVlXNXpiR0YwWlU5dVFYaHBjeWhUYkN3Z1pTazdDaUFnSUNCOUNpQWdJQ0IwY21GdWMyeGhkR1ZhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwY21GdWMyeGhkR1ZQYmtGNGFYTW9WR3dzSUdVcE93b2dJQ0FnZlFvZ0lDQWdiRzlqWVd4VWIxZHZjbXhrS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhjSEJzZVUxaGRISnBlRFFvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQjlDaUFnSUNCM2IzSnNaRlJ2VEc5allXd29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1Gd2NHeDVUV0YwY21sNE5DaFJkQzVqYjNCNUtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncEtUc0tJQ0FnSUgwS0lDQWdJR3h2YjJ0QmRDaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdaUzVwYzFabFkzUnZjak1nUHlBa2NpNWpiM0I1S0dVcElEb2dKSEl1YzJWMEtHVXNJSFFzSUc0cE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTV3WVhKbGJuUTdDaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCYWFTNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2tzSUhSb2FYTXVhWE5EWVcxbGNtRWdmSHdnZEdocGN5NXBjMHhwWjJoMElEOGdVWFF1Ykc5dmEwRjBLRnBwTENBa2Npd2dkR2hwY3k1MWNDa2dPaUJSZEM1c2IyOXJRWFFvSkhJc0lGcHBMQ0IwYUdsekxuVndLU3dnZEdocGN5NXhkV0YwWlhKdWFXOXVMbk5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNoUmRDa3NJR2tnSmlZZ0tGRjBMbVY0ZEhKaFkzUlNiM1JoZEdsdmJpaHBMbTFoZEhKcGVGZHZjbXhrS1N3Z2Iya3VjMlYwUm5KdmJWSnZkR0YwYVc5dVRXRjBjbWw0S0ZGMEtTd2dkR2hwY3k1eGRXRjBaWEp1YVc5dUxuQnlaVzExYkhScGNHeDVLRzlwTG1sdWRtVnlkQ2dwS1NrN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hoY21kMWJXVnVkSE11YkdWdVozUm9JRDRnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnWVhKbmRXMWxiblJ6TG14bGJtZDBhRHNnZENzcktYUm9hWE11WVdSa0tHRnlaM1Z0Wlc1MGMxdDBYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0E5UFQwZ2RHaHBjeUEvSUNoamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVBZbXBsWTNRelJDNWhaR1E2SUc5aWFtVmpkQ0JqWVc0bmRDQmlaU0JoWkdSbFpDQmhjeUJoSUdOb2FXeGtJRzltSUdsMGMyVnNaaTRpTENCbEtTd2dkR2hwY3lrZ09pQW9aU0FtSmlCbExtbHpUMkpxWldOME0wUWdQeUFvWlM1d1lYSmxiblFnSVQwOUlHNTFiR3dnSmlZZ1pTNXdZWEpsYm5RdWNtVnRiM1psS0dVcExDQmxMbkJoY21WdWRDQTlJSFJvYVhNc0lIUm9hWE11WTJocGJHUnlaVzR1Y0hWemFDaGxLU3dnWlM1a2FYTndZWFJqYUVWMlpXNTBLR0ZtS1NrZ09pQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVQWW1wbFkzUXpSQzVoWkdRNklHOWlhbVZqZENCdWIzUWdZVzRnYVc1emRHRnVZMlVnYjJZZ1ZFaFNSVVV1VDJKcVpXTjBNMFF1SWl3Z1pTa3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdjbVZ0YjNabEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1lYSm5kVzFsYm5SekxteGxibWQwYUNBK0lERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHNHJLeWwwYUdsekxuSmxiVzkyWlNoaGNtZDFiV1Z1ZEhOYmJsMHBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1TG1sdVpHVjRUMllvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJQzB4SUNZbUlDaGxMbkJoY21WdWRDQTlJRzUxYkd3c0lIUm9hWE11WTJocGJHUnlaVzR1YzNCc2FXTmxLSFFzSURFcExDQmxMbVJwYzNCaGRHTm9SWFpsYm5Rb1JXd3BLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEpsYlc5MlpVWnliMjFRWVhKbGJuUW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxuQmhjbVZ1ZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBaFBUMGdiblZzYkNBbUppQmxMbkpsYlc5MlpTaDBhR2x6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc1pXRnlLQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQTdJR1VnUENCMGFHbHpMbU5vYVd4a2NtVnVMbXhsYm1kMGFEc2daU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1VzJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG5CaGNtVnVkQ0E5SUc1MWJHd3NJSFF1WkdsemNHRjBZMmhGZG1WdWRDaEZiQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTm9hV3hrY21WdUxteGxibWQwYUNBOUlEQXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhkSFJoWTJnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFd0xDQWhNU2tzSUZGMExtTnZjSGtvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2t1YVc1MlpYSjBLQ2tzSUdVdWNHRnlaVzUwSUNFOVBTQnVkV3hzSUNZbUlDaGxMbkJoY21WdWRDNTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQlJkQzV0ZFd4MGFYQnNlU2hsTG5CaGNtVnVkQzV0WVhSeWFYaFhiM0pzWkNrcExDQmxMbUZ3Y0d4NVRXRjBjbWw0TkNoUmRDa3NJSFJvYVhNdVlXUmtLR1VwTENCbExuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXhMQ0FoTUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlBZbXBsWTNSQ2VVbGtLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJQWW1wbFkzUkNlVkJ5YjNCbGNuUjVLQ0pwWkNJc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFQySnFaV04wUW5sT1lXMWxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5aWFJQWW1wbFkzUkNlVkJ5YjNCbGNuUjVLQ0p1WVcxbElpd2daU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlBZbXBsWTNSQ2VWQnliM0JsY25SNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwYzF0bFhTQTlQVDBnZENrZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSFJvYVhNdVkyaHBiR1J5Wlc0dWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwYUdsekxtTm9hV3hrY21WdVcyNWRMbWRsZEU5aWFtVmpkRUo1VUhKdmNHVnlkSGtvWlN3Z2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJ2T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHZGxkRmR2Y214a1VHOXphWFJwYjI0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFd0xDQWhNU2tzSUdVdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFYyOXliR1JSZFdGMFpYSnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtMbVJsWTI5dGNHOXpaU2hhYVN3Z1pTd2djMllwTENCbE93b2dJQ0FnZlFvZ0lDQWdaMlYwVjI5eWJHUlRZMkZzWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRBc0lDRXhLU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQzVrWldOdmJYQnZjMlVvV21rc0lHOW1MQ0JsS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEZkdmNteGtSR2x5WldOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V3TENBaE1TazdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuTmxkQ2gwV3poZExDQjBXemxkTENCMFd6RXdYU2t1Ym05eWJXRnNhWHBsS0NrN0NpQWdJQ0I5Q2lBZ0lDQnlZWGxqWVhOMEtDa2dlMzBLSUNBZ0lIUnlZWFpsY25ObEtHVXBJSHNLSUNBZ0lDQWdJQ0JsS0hSb2FYTXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amFHbHNaSEpsYmpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3BkRnR1WFM1MGNtRjJaWEp6WlNobEtUc0tJQ0FnSUgwS0lDQWdJSFJ5WVhabGNuTmxWbWx6YVdKc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11ZG1semFXSnNaU0E5UFQwZ0lURXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQmxLSFJvYVhNcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGRGdHVYUzUwY21GMlpYSnpaVlpwYzJsaWJHVW9aU2s3Q2lBZ0lDQjlDaUFnSUNCMGNtRjJaWEp6WlVGdVkyVnpkRzl5Y3lobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5CaGNtVnVkRHNLSUNBZ0lDQWdJQ0IwSUNFOVBTQnVkV3hzSUNZbUlDaGxLSFFwTENCMExuUnlZWFpsY25ObFFXNWpaWE4wYjNKektHVXBLVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcGVDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhkSEpwZUM1amIyMXdiM05sS0hSb2FYTXVjRzl6YVhScGIyNHNJSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpd2dkR2hwY3k1elkyRnNaU2tzSUhSb2FYTXViV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0FtSmlCMGFHbHpMblZ3WkdGMFpVMWhkSEpwZUNncExDQW9kR2hwY3k1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJSHg4SUdVcElDWW1JQ2gwYUdsekxuQmhjbVZ1ZENBOVBUMGdiblZzYkNBL0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVkyOXdlU2gwYUdsekxtMWhkSEpwZUNrZ09pQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2RHaHBjeTV3WVhKbGJuUXViV0YwY21sNFYyOXliR1FzSUhSb2FYTXViV0YwY21sNEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnSVRFc0lHVWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5vYVd4a2NtVnVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMFcyNWRMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXdZWEpsYm5RN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnUFQwOUlDRXdJQ1ltSUc0Z0lUMDlJRzUxYkd3Z0ppWWdiaTUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ0ppWWdkR2hwY3k1MWNHUmhkR1ZOWVhSeWFYZ29LU3dnZEdocGN5NXdZWEpsYm5RZ1BUMDlJRzUxYkd3Z1B5QjBhR2x6TG0xaGRISnBlRmR2Y214a0xtTnZjSGtvZEdocGN5NXRZWFJ5YVhncElEb2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pDNXRkV3gwYVhCc2VVMWhkSEpwWTJWektIUm9hWE11Y0dGeVpXNTBMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVDa3NJSFFnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVqYUdsc1pISmxianNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHa3ViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLV2xiY2wwdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lURXNJQ0V3S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaU0E5UFQwZ2RtOXBaQ0F3SUh4OElIUjVjR1Z2WmlCbElEMDlJQ0p6ZEhKcGJtY2lMQ0J1SUQwZ2UzMDdDaUFnSUNBZ0lDQWdkQ0FtSmlBb1pTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1oyVnZiV1YwY21sbGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkR1Z5YVdGc2N6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFIxY21Wek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXMWhaMlZ6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMnRsYkdWMGIyNXpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZVzVwYldGMGFXOXVjem9nZTMwS0lDQWdJQ0FnSUNCOUxDQnVMbTFsZEdGa1lYUmhJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEp6YVc5dU9pQTBMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKUFltcGxZM1FpTEFvZ0lDQWdJQ0FnSUNBZ0lDQm5aVzVsY21GMGIzSTZJQ0pQWW1wbFkzUXpSQzUwYjBwVFQwNGlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0I3ZlRzS0lDQWdJQ0FnSUNCcExuVjFhV1FnUFNCMGFHbHpMblYxYVdRc0lHa3VkSGx3WlNBOUlIUm9hWE11ZEhsd1pTd2dkR2hwY3k1dVlXMWxJQ0U5UFNBaUlpQW1KaUFvYVM1dVlXMWxJRDBnZEdocGN5NXVZVzFsS1N3Z2RHaHBjeTVqWVhOMFUyaGhaRzkzSUQwOVBTQWhNQ0FtSmlBb2FTNWpZWE4wVTJoaFpHOTNJRDBnSVRBcExDQjBhR2x6TG5KbFkyVnBkbVZUYUdGa2IzY2dQVDA5SUNFd0lDWW1JQ2hwTG5KbFkyVnBkbVZUYUdGa2IzY2dQU0FoTUNrc0lIUm9hWE11ZG1semFXSnNaU0E5UFQwZ0lURWdKaVlnS0drdWRtbHphV0pzWlNBOUlDRXhLU3dnZEdocGN5NW1jblZ6ZEhWdFEzVnNiR1ZrSUQwOVBTQWhNU0FtSmlBb2FTNW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ0lURXBMQ0IwYUdsekxuSmxibVJsY2s5eVpHVnlJQ0U5UFNBd0lDWW1JQ2hwTG5KbGJtUmxjazl5WkdWeUlEMGdkR2hwY3k1eVpXNWtaWEpQY21SbGNpa3NJRXBUVDA0dWMzUnlhVzVuYVdaNUtIUm9hWE11ZFhObGNrUmhkR0VwSUNFOVBTQWllMzBpSUNZbUlDaHBMblZ6WlhKRVlYUmhJRDBnZEdocGN5NTFjMlZ5UkdGMFlTa3NJR2t1YkdGNVpYSnpJRDBnZEdocGN5NXNZWGxsY25NdWJXRnpheXdnYVM1dFlYUnlhWGdnUFNCMGFHbHpMbTFoZEhKcGVDNTBiMEZ5Y21GNUtDa3NJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOVBUMGdJVEVnSmlZZ0tHa3ViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4S1N3Z2RHaHBjeTVwYzBsdWMzUmhibU5sWkUxbGMyZ2dKaVlnS0drdWRIbHdaU0E5SUNKSmJuTjBZVzVqWldSTlpYTm9JaXdnYVM1amIzVnVkQ0E5SUhSb2FYTXVZMjkxYm5Rc0lHa3VhVzV6ZEdGdVkyVk5ZWFJ5YVhnZ1BTQjBhR2x6TG1sdWMzUmhibU5sVFdGMGNtbDRMblJ2U2xOUFRpZ3BMQ0IwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0lnSVQwOUlHNTFiR3dnSmlZZ0tHa3VhVzV6ZEdGdVkyVkRiMnh2Y2lBOUlIUm9hWE11YVc1emRHRnVZMlZEYjJ4dmNpNTBiMHBUVDA0b0tTa3BPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSElvWVN3Z2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVZ0c0xuVjFhV1JkSUQwOVBTQjJiMmxrSURBZ0ppWWdLR0ZiYkM1MWRXbGtYU0E5SUd3dWRHOUtVMDlPS0dVcEtTd2diQzUxZFdsa093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXBjMU5qWlc1bEtTQjBhR2x6TG1KaFkydG5jbTkxYm1RZ0ppWWdLSFJvYVhNdVltRmphMmR5YjNWdVpDNXBjME52Ykc5eUlEOGdhUzVpWVdOclozSnZkVzVrSUQwZ2RHaHBjeTVpWVdOclozSnZkVzVrTG5SdlNsTlBUaWdwSURvZ2RHaHBjeTVpWVdOclozSnZkVzVrTG1selZHVjRkSFZ5WlNBbUppQW9hUzVpWVdOclozSnZkVzVrSUQwZ2RHaHBjeTVpWVdOclozSnZkVzVrTG5SdlNsTlBUaWhsS1M1MWRXbGtLU2tzSUhSb2FYTXVaVzUyYVhKdmJtMWxiblFnSmlZZ2RHaHBjeTVsYm5acGNtOXViV1Z1ZEM1cGMxUmxlSFIxY21VZ0ppWWdLR2t1Wlc1MmFYSnZibTFsYm5RZ1BTQjBhR2x6TG1WdWRtbHliMjV0Wlc1MExuUnZTbE5QVGlobEtTNTFkV2xrS1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoMGFHbHpMbWx6VFdWemFDQjhmQ0IwYUdsekxtbHpUR2x1WlNCOGZDQjBhR2x6TG1selVHOXBiblJ6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2t1WjJWdmJXVjBjbmtnUFNCeUtHVXVaMlZ2YldWMGNtbGxjeXdnZEdocGN5NW5aVzl0WlhSeWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NW5aVzl0WlhSeWVTNXdZWEpoYldWMFpYSnpPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHRXVjMmhoY0dWeklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdZUzV6YUdGd1pYTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHNLU2tnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUd3dWJHVnVaM1JvT3lCaklEd2dhRHNnWXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR3hiWTEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaWhsTG5Ob1lYQmxjeXdnZFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSElvWlM1emFHRndaWE1zSUd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1selUydHBibTVsWkUxbGMyZ2dKaVlnS0drdVltbHVaRTF2WkdVZ1BTQjBhR2x6TG1KcGJtUk5iMlJsTENCcExtSnBibVJOWVhSeWFYZ2dQU0IwYUdsekxtSnBibVJOWVhSeWFYZ3VkRzlCY25KaGVTZ3BMQ0IwYUdsekxuTnJaV3hsZEc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0hJb1pTNXphMlZzWlhSdmJuTXNJSFJvYVhNdWMydGxiR1YwYjI0cExDQnBMbk5yWld4bGRHOXVJRDBnZEdocGN5NXphMlZzWlhSdmJpNTFkV2xrS1Nrc0lIUm9hWE11YldGMFpYSnBZV3dnSVQwOUlIWnZhV1FnTUNrZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2RHaHBjeTV0WVhSbGNtbGhiQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFeElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JERWdQU0F3TENCak1TQTlJSFJvYVhNdWJXRjBaWEpwWVd3dWJHVnVaM1JvT3lCc01TQThJR014T3lCc01Tc3JLV0V4TG5CMWMyZ29jaWhsTG0xaGRHVnlhV0ZzY3l3Z2RHaHBjeTV0WVhSbGNtbGhiRnRzTVYwcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVM1dFlYUmxjbWxoYkNBOUlHRXhPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBMbTFoZEdWeWFXRnNJRDBnY2lobExtMWhkR1Z5YVdGc2N5d2dkR2hwY3k1dFlYUmxjbWxoYkNrN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkyaHBiR1J5Wlc0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcExtTm9hV3hrY21WdUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lUSWdQU0F3T3lCaE1pQThJSFJvYVhNdVkyaHBiR1J5Wlc0dWJHVnVaM1JvT3lCaE1pc3JLV2t1WTJocGJHUnlaVzR1Y0hWemFDaDBhR2x6TG1Ob2FXeGtjbVZ1VzJFeVhTNTBiMHBUVDA0b1pTa3ViMkpxWldOMEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZVzVwYldGMGFXOXVjeTVzWlc1bmRHZ2dQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2t1WVc1cGJXRjBhVzl1Y3lBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFeklEMGdNRHNnWVRNZ1BDQjBhR2x6TG1GdWFXMWhkR2x2Ym5NdWJHVnVaM1JvT3lCaE15c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc01pQTlJSFJvYVhNdVlXNXBiV0YwYVc5dWMxdGhNMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG1GdWFXMWhkR2x2Ym5NdWNIVnphQ2h5S0dVdVlXNXBiV0YwYVc5dWN5d2diRElwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZVFFnUFNCdktHVXVaMlZ2YldWMGNtbGxjeWtzSUd3eklEMGdieWhsTG0xaGRHVnlhV0ZzY3lrc0lHTXlJRDBnYnlobExuUmxlSFIxY21WektTd2dhREVnUFNCdktHVXVhVzFoWjJWektTd2dkVEVnUFNCdktHVXVjMmhoY0dWektTd2daQ0E5SUc4b1pTNXphMlZzWlhSdmJuTXBMQ0JtSUQwZ2J5aGxMbUZ1YVcxaGRHbHZibk1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmhOQzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWRsYjIxbGRISnBaWE1nUFNCaE5Da3NJR3d6TG14bGJtZDBhQ0ErSURBZ0ppWWdLRzR1YldGMFpYSnBZV3h6SUQwZ2JETXBMQ0JqTWk1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG5SbGVIUjFjbVZ6SUQwZ1l6SXBMQ0JvTVM1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG1sdFlXZGxjeUE5SUdneEtTd2dkVEV1YkdWdVozUm9JRDRnTUNBbUppQW9iaTV6YUdGd1pYTWdQU0IxTVNrc0lHUXViR1Z1WjNSb0lENGdNQ0FtSmlBb2JpNXphMlZzWlhSdmJuTWdQU0JrS1N3Z1ppNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtRnVhVzFoZEdsdmJuTWdQU0JtS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWIySnFaV04wSUQwZ2FTd2dianNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ2S0dFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmpJR2x1SUdFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCaFcyTmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElHZ3ViV1YwWVdSaGRHRXNJR3d1Y0hWemFDaG9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDQTlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWJtRnRaU0E5SUdVdWJtRnRaU3dnZEdocGN5NTFjQzVqYjNCNUtHVXVkWEFwTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb1pTNXdiM05wZEdsdmJpa3NJSFJvYVhNdWNtOTBZWFJwYjI0dWIzSmtaWElnUFNCbExuSnZkR0YwYVc5dUxtOXlaR1Z5TENCMGFHbHpMbkYxWVhSbGNtNXBiMjR1WTI5d2VTaGxMbkYxWVhSbGNtNXBiMjRwTENCMGFHbHpMbk5qWVd4bExtTnZjSGtvWlM1elkyRnNaU2tzSUhSb2FYTXViV0YwY21sNExtTnZjSGtvWlM1dFlYUnlhWGdwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29aUzV0WVhSeWFYaFhiM0pzWkNrc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUdVdWJXRjBjbWw0UVhWMGIxVndaR0YwWlN3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElEMGdaUzV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbExDQjBhR2x6TG14aGVXVnljeTV0WVhOcklEMGdaUzVzWVhsbGNuTXViV0Z6YXl3Z2RHaHBjeTUyYVhOcFlteGxJRDBnWlM1MmFYTnBZbXhsTENCMGFHbHpMbU5oYzNSVGFHRmtiM2NnUFNCbExtTmhjM1JUYUdGa2IzY3NJSFJvYVhNdWNtVmpaV2wyWlZOb1lXUnZkeUE5SUdVdWNtVmpaV2wyWlZOb1lXUnZkeXdnZEdocGN5NW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ1pTNW1jblZ6ZEhWdFEzVnNiR1ZrTENCMGFHbHpMbkpsYm1SbGNrOXlaR1Z5SUQwZ1pTNXlaVzVrWlhKUGNtUmxjaXdnZEdocGN5NTFjMlZ5UkdGMFlTQTlJRXBUVDA0dWNHRnljMlVvU2xOUFRpNXpkSEpwYm1kcFpua29aUzUxYzJWeVJHRjBZU2twTENCMElEMDlQU0FoTUNrZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElHVXVZMmhwYkdSeVpXNHViR1Z1WjNSb095QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVZMmhwYkdSeVpXNWJibDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WVdSa0tHa3VZMnh2Ym1Vb0tTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUXA5T3dwT1pTNUVaV1poZFd4MFZYQWdQU0J1WlhjZ1RTZ3dMQ0F4TENBd0tUc0tUbVV1UkdWbVlYVnNkRTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTURzS1RtVXVjSEp2ZEc5MGVYQmxMbWx6VDJKcVpXTjBNMFFnUFNBaE1Ec0tkbUZ5SUVSMElEMGdibVYzSUUwc0lFdDBJRDBnYm1WM0lFMHNJRU52SUQwZ2JtVjNJRTBzSUdWdUlEMGdibVYzSUUwc0lHRnBJRDBnYm1WM0lFMHNJR3hwSUQwZ2JtVjNJRTBzSUVGc0lEMGdibVYzSUUwc0lFeHZJRDBnYm1WM0lFMHNJRkp2SUQwZ2JtVjNJRTBzSUZCdklEMGdibVYzSUUwc0lHNTBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5MQ0IwSUQwZ2JtVjNJRTBzSUc0Z1BTQnVaWGNnVFNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVoSUQwZ1pTd2dkR2hwY3k1aUlEMGdkQ3dnZEdocGN5NWpJRDBnYmpzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCblpYUk9iM0p0WVd3b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR2t1YzNWaVZtVmpkRzl5Y3lodUxDQjBLU3dnUkhRdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1N3Z2FTNWpjbTl6Y3loRWRDazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnBMbXhsYm1kMGFGTnhLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSElnUGlBd0lEOGdhUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3hJQzhnVFdGMGFDNXpjWEowS0hJcEtTQTZJR2t1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHZGxkRUpoY25samIyOXlaQ2hsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdSSFF1YzNWaVZtVmpkRzl5Y3locExDQjBLU3dnUzNRdWMzVmlWbVZqZEc5eWN5aHVMQ0IwS1N3Z1EyOHVjM1ZpVm1WamRHOXljeWhsTENCMEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlFUjBMbVJ2ZENoRWRDa3NJR0VnUFNCRWRDNWtiM1FvUzNRcExDQnNJRDBnUkhRdVpHOTBLRU52S1N3Z1l5QTlJRXQwTG1SdmRDaExkQ2tzSUdnZ1BTQkxkQzVrYjNRb1EyOHBMQ0IxSUQwZ2J5QXFJR01nTFNCaElDb2dZVHNLSUNBZ0lDQWdJQ0JwWmlBb2RTQTlQVDBnTUNrZ2NtVjBkWEp1SUhJdWMyVjBLQzB5TENBdE1Td2dMVEVwT3dvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnTVNBdklIVXNJR1lnUFNBb1l5QXFJR3dnTFNCaElDb2dhQ2tnS2lCa0xDQnRJRDBnS0c4Z0tpQm9JQzBnWVNBcUlHd3BJQ29nWkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2k1elpYUW9NU0F0SUdZZ0xTQnRMQ0J0TENCbUtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QmpiMjUwWVdsdWMxQnZhVzUwS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSQ1lYSjVZMjl2Y21Rb1pTd2dkQ3dnYml3Z2FTd2daVzRwTENCbGJpNTRJRDQ5SURBZ0ppWWdaVzR1ZVNBK1BTQXdJQ1ltSUdWdUxuZ2dLeUJsYmk1NUlEdzlJREU3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWjJWMFZWWW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEVKaGNubGpiMjl5WkNobExDQjBMQ0J1TENCcExDQmxiaWtzSUd3dWMyVjBLREFzSURBcExDQnNMbUZrWkZOallXeGxaRlpsWTNSdmNpaHlMQ0JsYmk1NEtTd2diQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9ieXdnWlc0dWVTa3NJR3d1WVdSa1UyTmhiR1ZrVm1WamRHOXlLR0VzSUdWdUxub3BMQ0JzT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdselJuSnZiblJHWVdOcGJtY29aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJFZEM1emRXSldaV04wYjNKektHNHNJSFFwTENCTGRDNXpkV0pXWldOMGIzSnpLR1VzSUhRcExDQkVkQzVqY205emN5aExkQ2t1Wkc5MEtHa3BJRHdnTURzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNWpiM0I1S0dVcExDQjBhR2x6TG1JdVkyOXdlU2gwS1N3Z2RHaHBjeTVqTG1OdmNIa29iaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRVRzlwYm5SelFXNWtTVzVrYVdObGN5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNWpiM0I1S0dWYmRGMHBMQ0IwYUdsekxtSXVZMjl3ZVNobFcyNWRLU3dnZEdocGN5NWpMbU52Y0hrb1pWdHBYU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRWFIwY21saWRYUmxRVzVrU1c1a2FXTmxjeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dVc0lIUXBMQ0IwYUdsekxtSXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCdUtTd2dkR2hwY3k1akxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnYVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlTNWpiM0I1S0dVdVlTa3NJSFJvYVhNdVlpNWpiM0I1S0dVdVlpa3NJSFJvYVhNdVl5NWpiM0I1S0dVdVl5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJCY21WaEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkVkQzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXVZeXdnZEdocGN5NWlLU3dnUzNRdWMzVmlWbVZqZEc5eWN5aDBhR2x6TG1Fc0lIUm9hWE11WWlrc0lFUjBMbU55YjNOektFdDBLUzVzWlc1bmRHZ29LU0FxSUM0MU93b2dJQ0FnZlFvZ0lDQWdaMlYwVFdsa2NHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtRmtaRlpsWTNSdmNuTW9kR2hwY3k1aExDQjBhR2x6TG1JcExtRmtaQ2gwYUdsekxtTXBMbTExYkhScGNHeDVVMk5oYkdGeUtERWdMeUF6S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRTV2Y20xaGJDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUwTG1kbGRFNXZjbTFoYkNoMGFHbHpMbUVzSUhSb2FYTXVZaXdnZEdocGN5NWpMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRkJzWVc1bEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6WlhSR2NtOXRRMjl3YkdGdVlYSlFiMmx1ZEhNb2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeWs3Q2lBZ0lDQjlDaUFnSUNCblpYUkNZWEo1WTI5dmNtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRDNW5aWFJDWVhKNVkyOXZjbVFvWlN3Z2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeXdnZENrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJWVmlobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUwTG1kbGRGVldLR1VzSUhSb2FYTXVZU3dnZEdocGN5NWlMQ0IwYUdsekxtTXNJSFFzSUc0c0lHa3NJSElwT3dvZ0lDQWdmUW9nSUNBZ1kyOXVkR0ZwYm5OUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MExtTnZiblJoYVc1elVHOXBiblFvWlN3Z2RHaHBjeTVoTENCMGFHbHpMbUlzSUhSb2FYTXVZeWs3Q2lBZ0lDQjlDaUFnSUNCcGMwWnliMjUwUm1GamFXNW5LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm5RdWFYTkdjbTl1ZEVaaFkybHVaeWgwYUdsekxtRXNJSFJvYVhNdVlpd2dkR2hwY3k1akxDQmxLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOQ2IzZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1sdWRHVnljMlZqZEhOVWNtbGhibWRzWlNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IzTmxjM1JRYjJsdWRGUnZVRzlwYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWhMQ0JwSUQwZ2RHaHBjeTVpTENCeUlEMGdkR2hwY3k1akxDQnZMQ0JoT3dvZ0lDQWdJQ0FnSUdGcExuTjFZbFpsWTNSdmNuTW9hU3dnYmlrc0lHeHBMbk4xWWxabFkzUnZjbk1vY2l3Z2Jpa3NJRXh2TG5OMVlsWmxZM1J2Y25Nb1pTd2diaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JoYVM1a2IzUW9URzhwTENCaklEMGdiR2t1Wkc5MEtFeHZLVHNLSUNBZ0lDQWdJQ0JwWmlBb2JDQThQU0F3SUNZbUlHTWdQRDBnTUNrZ2NtVjBkWEp1SUhRdVkyOXdlU2h1S1RzS0lDQWdJQ0FnSUNCU2J5NXpkV0pXWldOMGIzSnpLR1VzSUdrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1lXa3VaRzkwS0ZKdktTd2dkU0E5SUd4cExtUnZkQ2hTYnlrN0NpQWdJQ0FnSUNBZ2FXWWdLR2dnUGowZ01DQW1KaUIxSUR3OUlHZ3BJSEpsZEhWeWJpQjBMbU52Y0hrb2FTazdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQnNJQ29nZFNBdElHZ2dLaUJqT3dvZ0lDQWdJQ0FnSUdsbUlDaGtJRHc5SURBZ0ppWWdiQ0ErUFNBd0lDWW1JR2dnUEQwZ01Da2djbVYwZFhKdUlHOGdQU0JzSUM4Z0tHd2dMU0JvS1N3Z2RDNWpiM0I1S0c0cExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loaGFTd2dieWs3Q2lBZ0lDQWdJQ0FnVUc4dWMzVmlWbVZqZEc5eWN5aGxMQ0J5S1RzS0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUdGcExtUnZkQ2hRYnlrc0lHMGdQU0JzYVM1a2IzUW9VRzhwT3dvZ0lDQWdJQ0FnSUdsbUlDaHRJRDQ5SURBZ0ppWWdaaUE4UFNCdEtTQnlaWFIxY200Z2RDNWpiM0I1S0hJcE93b2dJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ1ppQXFJR01nTFNCc0lDb2diVHNLSUNBZ0lDQWdJQ0JwWmlBb2VDQThQU0F3SUNZbUlHTWdQajBnTUNBbUppQnRJRHc5SURBcElISmxkSFZ5YmlCaElEMGdZeUF2SUNoaklDMGdiU2tzSUhRdVkyOXdlU2h1S1M1aFpHUlRZMkZzWldSV1pXTjBiM0lvYkdrc0lHRXBPd29nSUNBZ0lDQWdJR3hsZENCMklEMGdhQ0FxSUcwZ0xTQm1JQ29nZFRzS0lDQWdJQ0FnSUNCcFppQW9kaUE4UFNBd0lDWW1JSFVnTFNCb0lENDlJREFnSmlZZ1ppQXRJRzBnUGowZ01Da2djbVYwZFhKdUlFRnNMbk4xWWxabFkzUnZjbk1vY2l3Z2FTa3NJR0VnUFNBb2RTQXRJR2dwSUM4Z0tIVWdMU0JvSUNzZ0tHWWdMU0J0S1Nrc0lIUXVZMjl3ZVNocEtTNWhaR1JUWTJGc1pXUldaV04wYjNJb1FXd3NJR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQm5JRDBnTVNBdklDaDJJQ3NnZUNBcklHUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZJRDBnZUNBcUlHY3NJR0VnUFNCa0lDb2daeXdnZEM1amIzQjVLRzRwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhoYVN3Z2J5a3VZV1JrVTJOaGJHVmtWbVZqZEc5eUtHeHBMQ0JoS1RzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZUzVsY1hWaGJITW9kR2hwY3k1aEtTQW1KaUJsTG1JdVpYRjFZV3h6S0hSb2FYTXVZaWtnSmlZZ1pTNWpMbVZ4ZFdGc2N5aDBhR2x6TG1NcE93b2dJQ0FnZlFwOUxDQnNaaUE5SURBc0lHUjBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUNKcFpDSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUd4bUt5c0tJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTFkV2xrSUQwZ1JYUW9LU3dnZEdocGN5NXVZVzFsSUQwZ0lpSXNJSFJvYVhNdWRIbHdaU0E5SUNKTllYUmxjbWxoYkNJc0lIUm9hWE11Wm05bklEMGdJVEFzSUhSb2FYTXVZbXhsYm1ScGJtY2dQU0J6Y2l3Z2RHaHBjeTV6YVdSbElEMGdRV2tzSUhSb2FYTXVkbVZ5ZEdWNFEyOXNiM0p6SUQwZ0lURXNJSFJvYVhNdWIzQmhZMmwwZVNBOUlERXNJSFJvYVhNdVptOXliV0YwSUQwZ1kzUXNJSFJvYVhNdWRISmhibk53WVhKbGJuUWdQU0FoTVN3Z2RHaHBjeTVpYkdWdVpGTnlZeUE5SUVkakxDQjBhR2x6TG1Kc1pXNWtSSE4wSUQwZ1ZtTXNJSFJvYVhNdVlteGxibVJGY1hWaGRHbHZiaUE5SUY5cExDQjBhR2x6TG1Kc1pXNWtVM0pqUVd4d2FHRWdQU0J1ZFd4c0xDQjBhR2x6TG1Kc1pXNWtSSE4wUVd4d2FHRWdQU0J1ZFd4c0xDQjBhR2x6TG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVNBOUlHNTFiR3dzSUhSb2FYTXVaR1Z3ZEdoR2RXNWpJRDBnWldFc0lIUm9hWE11WkdWd2RHaFVaWE4wSUQwZ0lUQXNJSFJvYVhNdVpHVndkR2hYY21sMFpTQTlJQ0V3TENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlUxaGMyc2dQU0F5TlRVc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1NZ1BTQlZaQ3dnZEdocGN5NXpkR1Z1WTJsc1VtVm1JRDBnTUN3Z2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyc2dQU0F5TlRVc0lIUm9hWE11YzNSbGJtTnBiRVpoYVd3Z1BTQjJieXdnZEdocGN5NXpkR1Z1WTJsc1drWmhhV3dnUFNCMmJ5d2dkR2hwY3k1emRHVnVZMmxzV2xCaGMzTWdQU0IyYnl3Z2RHaHBjeTV6ZEdWdVkybHNWM0pwZEdVZ1BTQWhNU3dnZEdocGN5NWpiR2x3Y0dsdVoxQnNZVzVsY3lBOUlHNTFiR3dzSUhSb2FYTXVZMnhwY0VsdWRHVnljMlZqZEdsdmJpQTlJQ0V4TENCMGFHbHpMbU5zYVhCVGFHRmtiM2R6SUQwZ0lURXNJSFJvYVhNdWMyaGhaRzkzVTJsa1pTQTlJRzUxYkd3c0lIUm9hWE11WTI5c2IzSlhjbWwwWlNBOUlDRXdMQ0IwYUdsekxuQnlaV05wYzJsdmJpQTlJRzUxYkd3c0lIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRDQTlJQ0V4TENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lnUFNBd0xDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlEQXNJSFJvYVhNdVpHbDBhR1Z5YVc1bklEMGdJVEVzSUhSb2FYTXVZV3h3YUdGVWIwTnZkbVZ5WVdkbElEMGdJVEVzSUhSb2FYTXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRDBnSVRFc0lIUm9hWE11ZG1semFXSnNaU0E5SUNFd0xDQjBhR2x6TG5SdmJtVk5ZWEJ3WldRZ1BTQWhNQ3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5TENCMGFHbHpMblpsY25OcGIyNGdQU0F3TENCMGFHbHpMbDloYkhCb1lWUmxjM1FnUFNBd093b2dJQ0FnZlFvZ0lDQWdaMlYwSUdGc2NHaGhWR1Z6ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWVd4d2FHRlVaWE4wT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR0ZzY0doaFZHVnpkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWVd4d2FHRlVaWE4wSUQ0Z01DQWhQU0JsSUQ0Z01DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt5d2dkR2hwY3k1ZllXeHdhR0ZVWlhOMElEMGdaVHNLSUNBZ0lIMEtJQ0FnSUc5dVFuVnBiR1FvS1NCN2ZRb2dJQ0FnYjI1Q1pXWnZjbVZTWlc1a1pYSW9LU0I3ZlFvZ0lDQWdiMjVDWldadmNtVkRiMjF3YVd4bEtDa2dlMzBLSUNBZ0lHTjFjM1J2YlZCeWIyZHlZVzFEWVdOb1pVdGxlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZia0psWm05eVpVTnZiWEJwYkdVdWRHOVRkSEpwYm1jb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZEZaaGJIVmxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCMElHbHVJR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwWlhKcFlXdzZJQ2NpSUNzZ2RDQXJJQ0luSUhCaGNtRnRaWFJsY2lCcGN5QjFibVJsWm1sdVpXUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnSW5Ob1lXUnBibWNpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxpSWdLeUIwYUdsekxuUjVjR1VnS3lBaU9pQXVjMmhoWkdsdVp5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnZEdobElHSnZiMnhsWVc0Z0xtWnNZWFJUYUdGa2FXNW5JR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNCdUlEMDlQU0JyWXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNGlJQ3NnZEdocGN5NTBlWEJsSUNzZ0lqb2dKeUlnS3lCMElDc2dJaWNnYVhNZ2JtOTBJR0VnY0hKdmNHVnlkSGtnYjJZZ2RHaHBjeUJ0WVhSbGNtbGhiQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdrZ0ppWWdhUzVwYzBOdmJHOXlJRDhnYVM1elpYUW9iaWtnT2lCcElDWW1JR2t1YVhOV1pXTjBiM0l6SUNZbUlHNGdKaVlnYmk1cGMxWmxZM1J2Y2pNZ1B5QnBMbU52Y0hrb2Jpa2dPaUIwYUdselczUmRJRDBnYmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaU0E5UFQwZ2RtOXBaQ0F3SUh4OElIUjVjR1Z2WmlCbElEMDlJQ0p6ZEhKcGJtY2lPd29nSUNBZ0lDQWdJSFFnSmlZZ0tHVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFIxY21Wek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXMWhaMlZ6T2lCN2ZRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdFpYUmhaR0YwWVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0lrMWhkR1Z5YVdGc0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSdmNqb2dJazFoZEdWeWFXRnNMblJ2U2xOUFRpSUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JpNTFkV2xrSUQwZ2RHaHBjeTUxZFdsa0xDQnVMblI1Y0dVZ1BTQjBhR2x6TG5SNWNHVXNJSFJvYVhNdWJtRnRaU0FoUFQwZ0lpSWdKaVlnS0c0dWJtRnRaU0E5SUhSb2FYTXVibUZ0WlNrc0lIUm9hWE11WTI5c2IzSWdKaVlnZEdocGN5NWpiMnh2Y2k1cGMwTnZiRzl5SUNZbUlDaHVMbU52Ykc5eUlEMGdkR2hwY3k1amIyeHZjaTVuWlhSSVpYZ29LU2tzSUhSb2FYTXVjbTkxWjJodVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVjbTkxWjJodVpYTnpJRDBnZEdocGN5NXliM1ZuYUc1bGMzTXBMQ0IwYUdsekxtMWxkR0ZzYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxtMWxkR0ZzYm1WemN5QTlJSFJvYVhNdWJXVjBZV3h1WlhOektTd2dkR2hwY3k1emFHVmxiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5vWldWdUlEMGdkR2hwY3k1emFHVmxiaWtzSUhSb2FYTXVjMmhsWlc1RGIyeHZjaUFtSmlCMGFHbHpMbk5vWldWdVEyOXNiM0l1YVhORGIyeHZjaUFtSmlBb2JpNXphR1ZsYmtOdmJHOXlJRDBnZEdocGN5NXphR1ZsYmtOdmJHOXlMbWRsZEVobGVDZ3BLU3dnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5Ob1pXVnVVbTkxWjJodVpYTnpJRDBnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6Y3lrc0lIUm9hWE11WlcxcGMzTnBkbVVnSmlZZ2RHaHBjeTVsYldsemMybDJaUzVwYzBOdmJHOXlJQ1ltSUNodUxtVnRhWE56YVhabElEMGdkR2hwY3k1bGJXbHpjMmwyWlM1blpYUklaWGdvS1Nrc0lIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnSmlZZ2RHaHBjeTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0FoUFQwZ01TQW1KaUFvYmk1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlIUm9hWE11WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtwTENCMGFHbHpMbk53WldOMWJHRnlJQ1ltSUhSb2FYTXVjM0JsWTNWc1lYSXVhWE5EYjJ4dmNpQW1KaUFvYmk1emNHVmpkV3hoY2lBOUlIUm9hWE11YzNCbFkzVnNZWEl1WjJWMFNHVjRLQ2twTENCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa2dQU0IwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNUtTd2dkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlJQ1ltSUhSb2FYTXVjM0JsWTNWc1lYSkRiMnh2Y2k1cGMwTnZiRzl5SUNZbUlDaHVMbk53WldOMWJHRnlRMjlzYjNJZ1BTQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSXVaMlYwU0dWNEtDa3BMQ0IwYUdsekxuTm9hVzVwYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTm9hVzVwYm1WemN5QTlJSFJvYVhNdWMyaHBibWx1WlhOektTd2dkR2hwY3k1amJHVmhjbU52WVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1amJHVmhjbU52WVhRZ1BTQjBhR2x6TG1Oc1pXRnlZMjloZENrc0lIUm9hWE11WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01wTENCMGFHbHpMbU5zWldGeVkyOWhkRTFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFRXRndJRDBnZEdocGN5NWpiR1ZoY21OdllYUk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0FtSmlCMGFHbHpMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lEMGdkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVZ1BTQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bExuUnZRWEp5WVhrb0tTa3NJSFJvYVhNdWJXRndJQ1ltSUhSb2FYTXViV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV0WVhBZ1BTQjBhR2x6TG0xaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11YldGMFkyRndJQ1ltSUhSb2FYTXViV0YwWTJGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1dFlYUmpZWEFnUFNCMGFHbHpMbTFoZEdOaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11WVd4d2FHRk5ZWEFnSmlZZ2RHaHBjeTVoYkhCb1lVMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZV3h3YUdGTllYQWdQU0IwYUdsekxtRnNjR2hoVFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTVzYVdkb2RFMWhjQ0FtSmlCMGFHbHpMbXhwWjJoMFRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXNhV2RvZEUxaGNDQTlJSFJvYVhNdWJHbG5hSFJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1S1N3Z2RHaHBjeTVoYjAxaGNDQW1KaUIwYUdsekxtRnZUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTVoYjAxaGNDQTlJSFJvYVhNdVlXOU5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1WVc5TllYQkpiblJsYm5OcGRIa2dQU0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1S1N3Z2RHaHBjeTVpZFcxd1RXRndJQ1ltSUhSb2FYTXVZblZ0Y0UxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVluVnRjRTFoY0NBOUlIUm9hWE11WW5WdGNFMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDd2diaTVpZFcxd1UyTmhiR1VnUFNCMGFHbHpMbUoxYlhCVFkyRnNaU2tzSUhSb2FYTXVibTl5YldGc1RXRndJQ1ltSUhSb2FYTXVibTl5YldGc1RXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXViM0p0WVd4TllYQWdQU0IwYUdsekxtNXZjbTFoYkUxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkN3Z2JpNXViM0p0WVd4TllYQlVlWEJsSUQwZ2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbExDQnVMbTV2Y20xaGJGTmpZV3hsSUQwZ2RHaHBjeTV1YjNKdFlXeFRZMkZzWlM1MGIwRnljbUY1S0NrcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQXVkRzlLVTA5T0tHVXBMblYxYVdRc0lHNHVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQnVMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNcExDQjBhR2x6TG5KdmRXZG9ibVZ6YzAxaGNDQW1KaUIwYUdsekxuSnZkV2RvYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVjbTkxWjJodVpYTnpUV0Z3SUQwZ2RHaHBjeTV5YjNWbmFHNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbTFsZEdGc2JtVnpjMDFoY0NBbUppQjBhR2x6TG0xbGRHRnNibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWJXVjBZV3h1WlhOelRXRndJRDBnZEdocGN5NXRaWFJoYkc1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJQ1ltSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbVZ0YVhOemFYWmxUV0Z3SUQwZ2RHaHBjeTVsYldsemMybDJaVTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ2tzSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnSmlZZ2RHaHBjeTV6Y0dWamRXeGhjazFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1YzNCbFkzVnNZWEpOWVhBZ1BTQjBhR2x6TG5Od1pXTjFiR0Z5VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBbUppQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQTlJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnSmlZZ2RHaHBjeTV6Y0dWamRXeGhja052Ykc5eVRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lEMGdkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NWxiblpOWVhBZ0ppWWdkR2hwY3k1bGJuWk5ZWEF1YVhOVVpYaDBkWEpsSUNZbUlDaHVMbVZ1ZGsxaGNDQTlJSFJvYVhNdVpXNTJUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtMQ0IwYUdsekxtTnZiV0pwYm1VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1amIyMWlhVzVsSUQwZ2RHaHBjeTVqYjIxaWFXNWxLU2tzSUhSb2FYTXVaVzUyVFdGd1NXNTBaVzV6YVhSNUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVpXNTJUV0Z3U1c1MFpXNXphWFI1SUQwZ2RHaHBjeTVsYm5aTllYQkpiblJsYm5OcGRIa3BMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbkpsWm14bFkzUnBkbWwwZVNBOUlIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUtTd2dkR2hwY3k1eVpXWnlZV04wYVc5dVVtRjBhVzhnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTV5WldaeVlXTjBhVzl1VW1GMGFXOGdQU0IwYUdsekxuSmxabkpoWTNScGIyNVNZWFJwYnlrc0lIUm9hWE11WjNKaFpHbGxiblJOWVhBZ0ppWWdkR2hwY3k1bmNtRmthV1Z1ZEUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVozSmhaR2xsYm5STllYQWdQU0IwYUdsekxtZHlZV1JwWlc1MFRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1MGNtRnVjMjFwYzNOcGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNTBjbUZ1YzIxcGMzTnBiMjRnUFNCMGFHbHpMblJ5WVc1emJXbHpjMmx2Ymlrc0lIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndJQ1ltSUhSb2FYTXVkSEpoYm5OdGFYTnphVzl1VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnUFNCMGFHbHpMblJ5WVc1emJXbHpjMmx2YmsxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11ZEdocFkydHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1ZEdocFkydHVaWE56SUQwZ2RHaHBjeTUwYUdsamEyNWxjM01wTENCMGFHbHpMblJvYVdOcmJtVnpjMDFoY0NBbUppQjBhR2x6TG5Sb2FXTnJibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWRHaHBZMnR1WlhOelRXRndJRDBnZEdocGN5NTBhR2xqYTI1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJRDBnZEdocGN5NWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxLU3dnZEdocGN5NWhkSFJsYm5WaGRHbHZia052Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVlYUjBaVzUxWVhScGIyNURiMnh2Y2lBOUlIUm9hWE11WVhSMFpXNTFZWFJwYjI1RGIyeHZjaTVuWlhSSVpYZ29LU2tzSUhSb2FYTXVjMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5OcGVtVWdQU0IwYUdsekxuTnBlbVVwTENCMGFHbHpMbk5vWVdSdmQxTnBaR1VnSVQwOUlHNTFiR3dnSmlZZ0tHNHVjMmhoWkc5M1UybGtaU0E5SUhSb2FYTXVjMmhoWkc5M1UybGtaU2tzSUhSb2FYTXVjMmw2WlVGMGRHVnVkV0YwYVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwZ2RHaHBjeTV6YVhwbFFYUjBaVzUxWVhScGIyNHBMQ0IwYUdsekxtSnNaVzVrYVc1bklDRTlQU0J6Y2lBbUppQW9iaTVpYkdWdVpHbHVaeUE5SUhSb2FYTXVZbXhsYm1ScGJtY3BMQ0IwYUdsekxuTnBaR1VnSVQwOUlFRnBJQ1ltSUNodUxuTnBaR1VnUFNCMGFHbHpMbk5wWkdVcExDQjBhR2x6TG5abGNuUmxlRU52Ykc5eWN5QW1KaUFvYmk1MlpYSjBaWGhEYjJ4dmNuTWdQU0FoTUNrc0lIUm9hWE11YjNCaFkybDBlU0E4SURFZ0ppWWdLRzR1YjNCaFkybDBlU0E5SUhSb2FYTXViM0JoWTJsMGVTa3NJSFJvYVhNdVptOXliV0YwSUNFOVBTQmpkQ0FtSmlBb2JpNW1iM0p0WVhRZ1BTQjBhR2x6TG1admNtMWhkQ2tzSUhSb2FYTXVkSEpoYm5Od1lYSmxiblFnUFQwOUlDRXdJQ1ltSUNodUxuUnlZVzV6Y0dGeVpXNTBJRDBnZEdocGN5NTBjbUZ1YzNCaGNtVnVkQ2tzSUc0dVpHVndkR2hHZFc1aklEMGdkR2hwY3k1a1pYQjBhRVoxYm1Nc0lHNHVaR1Z3ZEdoVVpYTjBJRDBnZEdocGN5NWtaWEIwYUZSbGMzUXNJRzR1WkdWd2RHaFhjbWwwWlNBOUlIUm9hWE11WkdWd2RHaFhjbWwwWlN3Z2JpNWpiMnh2Y2xkeWFYUmxJRDBnZEdocGN5NWpiMnh2Y2xkeWFYUmxMQ0J1TG5OMFpXNWphV3hYY21sMFpTQTlJSFJvYVhNdWMzUmxibU5wYkZkeWFYUmxMQ0J1TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlUxaGMyc3NJRzR1YzNSbGJtTnBiRVoxYm1NZ1BTQjBhR2x6TG5OMFpXNWphV3hHZFc1akxDQnVMbk4wWlc1amFXeFNaV1lnUFNCMGFHbHpMbk4wWlc1amFXeFNaV1lzSUc0dWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyc3NJRzR1YzNSbGJtTnBiRVpoYVd3Z1BTQjBhR2x6TG5OMFpXNWphV3hHWVdsc0xDQnVMbk4wWlc1amFXeGFSbUZwYkNBOUlIUm9hWE11YzNSbGJtTnBiRnBHWVdsc0xDQnVMbk4wWlc1amFXeGFVR0Z6Y3lBOUlIUm9hWE11YzNSbGJtTnBiRnBRWVhOekxDQjBhR2x6TG5KdmRHRjBhVzl1SUNZbUlIUm9hWE11Y205MFlYUnBiMjRnSVQwOUlEQWdKaVlnS0c0dWNtOTBZWFJwYjI0Z1BTQjBhR2x6TG5KdmRHRjBhVzl1S1N3Z2RHaHBjeTV3YjJ4NVoyOXVUMlptYzJWMElEMDlQU0FoTUNBbUppQW9iaTV3YjJ4NVoyOXVUMlptYzJWMElEMGdJVEFwTENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lnSVQwOUlEQWdKaVlnS0c0dWNHOXNlV2R2Yms5bVpuTmxkRVpoWTNSdmNpQTlJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkRVpoWTNSdmNpa3NJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkRlZ1YVhSeklDRTlQU0F3SUNZbUlDaHVMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUE5SUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZEZWdWFYUnpLU3dnZEdocGN5NXNhVzVsZDJsa2RHZ2dKaVlnZEdocGN5NXNhVzVsZDJsa2RHZ2dJVDA5SURFZ0ppWWdLRzR1YkdsdVpYZHBaSFJvSUQwZ2RHaHBjeTVzYVc1bGQybGtkR2dwTENCMGFHbHpMbVJoYzJoVGFYcGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVaR0Z6YUZOcGVtVWdQU0IwYUdsekxtUmhjMmhUYVhwbEtTd2dkR2hwY3k1bllYQlRhWHBsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WjJGd1UybDZaU0E5SUhSb2FYTXVaMkZ3VTJsNlpTa3NJSFJvYVhNdWMyTmhiR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTV6WTJGc1pTQTlJSFJvYVhNdWMyTmhiR1VwTENCMGFHbHpMbVJwZEdobGNtbHVaeUE5UFQwZ0lUQWdKaVlnS0c0dVpHbDBhR1Z5YVc1bklEMGdJVEFwTENCMGFHbHpMbUZzY0doaFZHVnpkQ0ErSURBZ0ppWWdLRzR1WVd4d2FHRlVaWE4wSUQwZ2RHaHBjeTVoYkhCb1lWUmxjM1FwTENCMGFHbHpMbUZzY0doaFZHOURiM1psY21GblpTQTlQVDBnSVRBZ0ppWWdLRzR1WVd4d2FHRlViME52ZG1WeVlXZGxJRDBnZEdocGN5NWhiSEJvWVZSdlEyOTJaWEpoWjJVcExDQjBhR2x6TG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBOVBUMGdJVEFnSmlZZ0tHNHVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhJRDBnZEdocGN5NXdjbVZ0ZFd4MGFYQnNhV1ZrUVd4d2FHRXBMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlQVDBnSVRBZ0ppWWdLRzR1ZDJseVpXWnlZVzFsSUQwZ2RHaHBjeTUzYVhKbFpuSmhiV1VwTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0ErSURFZ0ppWWdLRzR1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dwTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdJVDA5SUNKeWIzVnVaQ0lnSmlZZ0tHNHVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0Nrc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnSVQwOUlDSnliM1Z1WkNJZ0ppWWdLRzR1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVLU3dnZEdocGN5NW1iR0YwVTJoaFpHbHVaeUE5UFQwZ0lUQWdKaVlnS0c0dVpteGhkRk5vWVdScGJtY2dQU0IwYUdsekxtWnNZWFJUYUdGa2FXNW5LU3dnZEdocGN5NTJhWE5wWW14bElEMDlQU0FoTVNBbUppQW9iaTUyYVhOcFlteGxJRDBnSVRFcExDQjBhR2x6TG5SdmJtVk5ZWEJ3WldRZ1BUMDlJQ0V4SUNZbUlDaHVMblJ2Ym1WTllYQndaV1FnUFNBaE1Ta3NJRXBUVDA0dWMzUnlhVzVuYVdaNUtIUm9hWE11ZFhObGNrUmhkR0VwSUNFOVBTQWllMzBpSUNZbUlDaHVMblZ6WlhKRVlYUmhJRDBnZEdocGN5NTFjMlZ5UkdGMFlTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdhU2h5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQnBiaUJ5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnY2x0aFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCc0xtMWxkR0ZrWVhSaExDQnZMbkIxYzJnb2JDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVNobExuUmxlSFIxY21WektTd2dieUE5SUdrb1pTNXBiV0ZuWlhNcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5TG14bGJtZDBhQ0ErSURBZ0ppWWdLRzR1ZEdWNGRIVnlaWE1nUFNCeUtTd2dieTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbWx0WVdkbGN5QTlJRzhwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmpzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQmxMbTVoYldVc0lIUm9hWE11Wm05bklEMGdaUzVtYjJjc0lIUm9hWE11WW14bGJtUnBibWNnUFNCbExtSnNaVzVrYVc1bkxDQjBhR2x6TG5OcFpHVWdQU0JsTG5OcFpHVXNJSFJvYVhNdWRtVnlkR1Y0UTI5c2IzSnpJRDBnWlM1MlpYSjBaWGhEYjJ4dmNuTXNJSFJvYVhNdWIzQmhZMmwwZVNBOUlHVXViM0JoWTJsMGVTd2dkR2hwY3k1bWIzSnRZWFFnUFNCbExtWnZjbTFoZEN3Z2RHaHBjeTUwY21GdWMzQmhjbVZ1ZENBOUlHVXVkSEpoYm5Od1lYSmxiblFzSUhSb2FYTXVZbXhsYm1SVGNtTWdQU0JsTG1Kc1pXNWtVM0pqTENCMGFHbHpMbUpzWlc1a1JITjBJRDBnWlM1aWJHVnVaRVJ6ZEN3Z2RHaHBjeTVpYkdWdVpFVnhkV0YwYVc5dUlEMGdaUzVpYkdWdVpFVnhkV0YwYVc5dUxDQjBhR2x6TG1Kc1pXNWtVM0pqUVd4d2FHRWdQU0JsTG1Kc1pXNWtVM0pqUVd4d2FHRXNJSFJvYVhNdVlteGxibVJFYzNSQmJIQm9ZU0E5SUdVdVlteGxibVJFYzNSQmJIQm9ZU3dnZEdocGN5NWliR1Z1WkVWeGRXRjBhVzl1UVd4d2FHRWdQU0JsTG1Kc1pXNWtSWEYxWVhScGIyNUJiSEJvWVN3Z2RHaHBjeTVrWlhCMGFFWjFibU1nUFNCbExtUmxjSFJvUm5WdVl5d2dkR2hwY3k1a1pYQjBhRlJsYzNRZ1BTQmxMbVJsY0hSb1ZHVnpkQ3dnZEdocGN5NWtaWEIwYUZkeWFYUmxJRDBnWlM1a1pYQjBhRmR5YVhSbExDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNCbExuTjBaVzVqYVd4WGNtbDBaVTFoYzJzc0lIUm9hWE11YzNSbGJtTnBiRVoxYm1NZ1BTQmxMbk4wWlc1amFXeEdkVzVqTENCMGFHbHpMbk4wWlc1amFXeFNaV1lnUFNCbExuTjBaVzVqYVd4U1pXWXNJSFJvYVhNdWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ1pTNXpkR1Z1WTJsc1JuVnVZMDFoYzJzc0lIUm9hWE11YzNSbGJtTnBiRVpoYVd3Z1BTQmxMbk4wWlc1amFXeEdZV2xzTENCMGFHbHpMbk4wWlc1amFXeGFSbUZwYkNBOUlHVXVjM1JsYm1OcGJGcEdZV2xzTENCMGFHbHpMbk4wWlc1amFXeGFVR0Z6Y3lBOUlHVXVjM1JsYm1OcGJGcFFZWE56TENCMGFHbHpMbk4wWlc1amFXeFhjbWwwWlNBOUlHVXVjM1JsYm1OcGJGZHlhWFJsT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1amJHbHdjR2x1WjFCc1lXNWxjeXdnYmlBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMExteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdiaUE5SUc1bGR5QkJjbkpoZVNocEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2FUc2dLeXR5S1c1YmNsMGdQU0IwVzNKZExtTnNiMjVsS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5zYVhCd2FXNW5VR3hoYm1WeklEMGdiaXdnZEdocGN5NWpiR2x3U1c1MFpYSnpaV04wYVc5dUlEMGdaUzVqYkdsd1NXNTBaWEp6WldOMGFXOXVMQ0IwYUdsekxtTnNhWEJUYUdGa2IzZHpJRDBnWlM1amJHbHdVMmhoWkc5M2N5d2dkR2hwY3k1emFHRmtiM2RUYVdSbElEMGdaUzV6YUdGa2IzZFRhV1JsTENCMGFHbHpMbU52Ykc5eVYzSnBkR1VnUFNCbExtTnZiRzl5VjNKcGRHVXNJSFJvYVhNdWNISmxZMmx6YVc5dUlEMGdaUzV3Y21WamFYTnBiMjRzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZENBOUlHVXVjRzlzZVdkdmJrOW1abk5sZEN3Z2RHaHBjeTV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5SUQwZ1pTNXdiMng1WjI5dVQyWm1jMlYwUm1GamRHOXlMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJR1V1Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6TENCMGFHbHpMbVJwZEdobGNtbHVaeUE5SUdVdVpHbDBhR1Z5YVc1bkxDQjBhR2x6TG1Gc2NHaGhWR1Z6ZENBOUlHVXVZV3h3YUdGVVpYTjBMQ0IwYUdsekxtRnNjR2hoVkc5RGIzWmxjbUZuWlNBOUlHVXVZV3h3YUdGVWIwTnZkbVZ5WVdkbExDQjBhR2x6TG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBOUlHVXVjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhMQ0IwYUdsekxuWnBjMmxpYkdVZ1BTQmxMblpwYzJsaWJHVXNJSFJvYVhNdWRHOXVaVTFoY0hCbFpDQTlJR1V1ZEc5dVpVMWhjSEJsWkN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdsemNHOXpaU0lLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJSDBLSUNBZ0lITmxkQ0J1WldWa2MxVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ0lUQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5czdDaUFnSUNCOUNuMDdDbVIwTG5CeWIzUnZkSGx3WlM1cGMwMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQWtZeUE5SUhzS0lDQWdJR0ZzYVdObFlteDFaVG9nTVRVM09USXpPRE1zQ2lBZ0lDQmhiblJwY1hWbGQyaHBkR1U2SURFMk5EUTBNemMxTEFvZ0lDQWdZWEYxWVRvZ05qVTFNelVzQ2lBZ0lDQmhjWFZoYldGeWFXNWxPaUE0TXpnNE5UWTBMQW9nSUNBZ1lYcDFjbVU2SURFMU56azBNVGMxTEFvZ0lDQWdZbVZwWjJVNklERTJNVEU1TWpZd0xBb2dJQ0FnWW1semNYVmxPaUF4TmpjM01ESTBOQ3dLSUNBZ0lHSnNZV05yT2lBd0xBb2dJQ0FnWW14aGJtTm9aV1JoYkcxdmJtUTZJREUyTnpjeU1EUTFMQW9nSUNBZ1lteDFaVG9nTWpVMUxBb2dJQ0FnWW14MVpYWnBiMnhsZERvZ09UQTFOVEl3TWl3S0lDQWdJR0p5YjNkdU9pQXhNRGd5TkRJek5Dd0tJQ0FnSUdKMWNteDVkMjl2WkRvZ01UUTFPVFl5TXpFc0NpQWdJQ0JqWVdSbGRHSnNkV1U2SURZeU5qWTFNamdzQ2lBZ0lDQmphR0Z5ZEhKbGRYTmxPaUE0TXpnNE16VXlMQW9nSUNBZ1kyaHZZMjlzWVhSbE9pQXhNemM0T1RRM01Dd0tJQ0FnSUdOdmNtRnNPaUF4TmpjME5ESTNNaXdLSUNBZ0lHTnZjbTVtYkc5M1pYSmliSFZsT2lBMk5Ua3hPVGd4TEFvZ0lDQWdZMjl5Ym5OcGJHczZJREUyTnpjMU16ZzRMQW9nSUNBZ1kzSnBiWE52YmpvZ01UUTBNak14TURBc0NpQWdJQ0JqZVdGdU9pQTJOVFV6TlN3S0lDQWdJR1JoY210aWJIVmxPaUF4TXprc0NpQWdJQ0JrWVhKclkzbGhiam9nTXpVM01qTXNDaUFnSUNCa1lYSnJaMjlzWkdWdWNtOWtPaUF4TWpBNU1qa3pPU3dLSUNBZ0lHUmhjbXRuY21GNU9pQXhNVEV4T1RBeE55d0tJQ0FnSUdSaGNtdG5jbVZsYmpvZ01qVTJNREFzQ2lBZ0lDQmtZWEpyWjNKbGVUb2dNVEV4TVRrd01UY3NDaUFnSUNCa1lYSnJhMmhoYTJrNklERXlORE16TWpVNUxBb2dJQ0FnWkdGeWEyMWhaMlZ1ZEdFNklEa3hNRGsyTkRNc0NpQWdJQ0JrWVhKcmIyeHBkbVZuY21WbGJqb2dOVFU1TnprNU9Td0tJQ0FnSUdSaGNtdHZjbUZ1WjJVNklERTJOelEzTlRJd0xBb2dJQ0FnWkdGeWEyOXlZMmhwWkRvZ01UQXdOREF3TVRJc0NpQWdJQ0JrWVhKcmNtVmtPaUE1TVRBNU5UQTBMQW9nSUNBZ1pHRnlhM05oYkcxdmJqb2dNVFV6TURnME1UQXNDaUFnSUNCa1lYSnJjMlZoWjNKbFpXNDZJRGswTVRrNU1Ua3NDaUFnSUNCa1lYSnJjMnhoZEdWaWJIVmxPaUEwTnpNME16UTNMQW9nSUNBZ1pHRnlhM05zWVhSbFozSmhlVG9nTXpFd01EUTVOU3dLSUNBZ0lHUmhjbXR6YkdGMFpXZHlaWGs2SURNeE1EQTBPVFVzQ2lBZ0lDQmtZWEpyZEhWeWNYVnZhWE5sT2lBMU1qazBOU3dLSUNBZ0lHUmhjbXQyYVc5c1pYUTZJRGsyT1RrMU16a3NDaUFnSUNCa1pXVndjR2x1YXpvZ01UWTNNVFk1TkRjc0NpQWdJQ0JrWldWd2MydDVZbXgxWlRvZ05Ea3hOVEVzQ2lBZ0lDQmthVzFuY21GNU9pQTJPVEE0TWpZMUxBb2dJQ0FnWkdsdFozSmxlVG9nTmprd09ESTJOU3dLSUNBZ0lHUnZaR2RsY21Kc2RXVTZJREl3TURNeE9Ua3NDaUFnSUNCbWFYSmxZbkpwWTJzNklERXhOamMwTVRRMkxBb2dJQ0FnWm14dmNtRnNkMmhwZEdVNklERTJOemMxT1RJd0xBb2dJQ0FnWm05eVpYTjBaM0psWlc0NklESXlOak00TkRJc0NpQWdJQ0JtZFdOb2MybGhPaUF4TmpjeE1Ua3pOU3dLSUNBZ0lHZGhhVzV6WW05eWJ6b2dNVFEwTnpRME5qQXNDaUFnSUNCbmFHOXpkSGRvYVhSbE9pQXhOak14TmpZM01Td0tJQ0FnSUdkdmJHUTZJREUyTnpZMk56SXdMQW9nSUNBZ1oyOXNaR1Z1Y205a09pQXhORE15T1RFeU1Dd0tJQ0FnSUdkeVlYazZJRGcwTWpFMU1EUXNDaUFnSUNCbmNtVmxiam9nTXpJM05qZ3NDaUFnSUNCbmNtVmxibmxsYkd4dmR6b2dNVEUwTURNd05UVXNDaUFnSUNCbmNtVjVPaUE0TkRJeE5UQTBMQW9nSUNBZ2FHOXVaWGxrWlhjNklERTFOemswTVRZd0xBb2dJQ0FnYUc5MGNHbHVhem9nTVRZM016ZzNOREFzQ2lBZ0lDQnBibVJwWVc1eVpXUTZJREV6TkRVNE5USTBMQW9nSUNBZ2FXNWthV2R2T2lBME9URTFNek13TEFvZ0lDQWdhWFp2Y25rNklERTJOemMzTWpBd0xBb2dJQ0FnYTJoaGEyazZJREUxTnpnM05qWXdMQW9nSUNBZ2JHRjJaVzVrWlhJNklERTFNVE15TkRFd0xBb2dJQ0FnYkdGMlpXNWtaWEppYkhWemFEb2dNVFkzTnpNek5qVXNDaUFnSUNCc1lYZHVaM0psWlc0NklEZ3hPVEE1TnpZc0NpQWdJQ0JzWlcxdmJtTm9hV1ptYjI0NklERTJOemMxT0RnMUxBb2dJQ0FnYkdsbmFIUmliSFZsT2lBeE1UTTVNekkxTkN3S0lDQWdJR3hwWjJoMFkyOXlZV3c2SURFMU56WXhOVE0yTEFvZ0lDQWdiR2xuYUhSamVXRnVPaUF4TkRjME5UVTVPU3dLSUNBZ0lHeHBaMmgwWjI5c1pHVnVjbTlrZVdWc2JHOTNPaUF4TmpRME9ESXhNQ3dLSUNBZ0lHeHBaMmgwWjNKaGVUb2dNVE00T0RJek1qTXNDaUFnSUNCc2FXZG9kR2R5WldWdU9pQTVORGs0TWpVMkxBb2dJQ0FnYkdsbmFIUm5jbVY1T2lBeE16ZzRNak15TXl3S0lDQWdJR3hwWjJoMGNHbHVhem9nTVRZM05UZzBOalVzQ2lBZ0lDQnNhV2RvZEhOaGJHMXZiam9nTVRZM05USTNOaklzQ2lBZ0lDQnNhV2RvZEhObFlXZHlaV1Z1T2lBeU1UUXlPRGt3TEFvZ0lDQWdiR2xuYUhSemEzbGliSFZsT2lBNE9UQXdNelEyTEFvZ0lDQWdiR2xuYUhSemJHRjBaV2R5WVhrNklEYzRNek0zTlRNc0NpQWdJQ0JzYVdkb2RITnNZWFJsWjNKbGVUb2dOemd6TXpjMU15d0tJQ0FnSUd4cFoyaDBjM1JsWld4aWJIVmxPaUF4TVRVNE5EY3pOQ3dLSUNBZ0lHeHBaMmgwZVdWc2JHOTNPaUF4TmpjM056RTROQ3dLSUNBZ0lHeHBiV1U2SURZMU1qZ3dMQW9nSUNBZ2JHbHRaV2R5WldWdU9pQXpNekk1TXpNd0xBb2dJQ0FnYkdsdVpXNDZJREUyTkRRMU5qY3dMQW9nSUNBZ2JXRm5aVzUwWVRvZ01UWTNNVEU1TXpVc0NpQWdJQ0J0WVhKdmIyNDZJRGd6T0RnMk1EZ3NDaUFnSUNCdFpXUnBkVzFoY1hWaGJXRnlhVzVsT2lBMk56TTNNekl5TEFvZ0lDQWdiV1ZrYVhWdFlteDFaVG9nTWpBMUxBb2dJQ0FnYldWa2FYVnRiM0pqYUdsa09pQXhNakl4TVRZMk55d0tJQ0FnSUcxbFpHbDFiWEIxY25Cc1pUb2dPVFkyTWpZNE15d0tJQ0FnSUcxbFpHbDFiWE5sWVdkeVpXVnVPaUF6T1RjNE1EazNMQW9nSUNBZ2JXVmthWFZ0YzJ4aGRHVmliSFZsT2lBNE1EZzNOemt3TEFvZ0lDQWdiV1ZrYVhWdGMzQnlhVzVuWjNKbFpXNDZJRFkwTVRVMExBb2dJQ0FnYldWa2FYVnRkSFZ5Y1hWdmFYTmxPaUEwTnpjeU16QXdMQW9nSUNBZ2JXVmthWFZ0ZG1sdmJHVjBjbVZrT2lBeE16QTBOekUzTXl3S0lDQWdJRzFwWkc1cFoyaDBZbXgxWlRvZ01UWTBORGt4TWl3S0lDQWdJRzFwYm5SamNtVmhiVG9nTVRZeE1qRTROVEFzQ2lBZ0lDQnRhWE4wZVhKdmMyVTZJREUyTnpjd01qY3pMQW9nSUNBZ2JXOWpZMkZ6YVc0NklERTJOemN3TWpJNUxBb2dJQ0FnYm1GMllXcHZkMmhwZEdVNklERTJOelk0TmpnMUxBb2dJQ0FnYm1GMmVUb2dNVEk0TEFvZ0lDQWdiMnhrYkdGalpUb2dNVFkyTkRNMU5UZ3NDaUFnSUNCdmJHbDJaVG9nT0RReU1UTTNOaXdLSUNBZ0lHOXNhWFpsWkhKaFlqb2dOekEwT0Rjek9Td0tJQ0FnSUc5eVlXNW5aVG9nTVRZM05UTTVNakFzQ2lBZ0lDQnZjbUZ1WjJWeVpXUTZJREUyTnpJNU16UTBMQW9nSUNBZ2IzSmphR2xrT2lBeE5ETXhOVGN6TkN3S0lDQWdJSEJoYkdWbmIyeGtaVzV5YjJRNklERTFOalUzTVRNd0xBb2dJQ0FnY0dGc1pXZHlaV1Z1T2lBeE1EQXlOVGc0TUN3S0lDQWdJSEJoYkdWMGRYSnhkVzlwYzJVNklERXhOVEk1T1RZMkxBb2dJQ0FnY0dGc1pYWnBiMnhsZEhKbFpEb2dNVFF6T0RFeU1ETXNDaUFnSUNCd1lYQmhlV0YzYUdsd09pQXhOamMzTXpBM055d0tJQ0FnSUhCbFlXTm9jSFZtWmpvZ01UWTNOamMyTnpNc0NpQWdJQ0J3WlhKMU9pQXhNelEyT0RrNU1Td0tJQ0FnSUhCcGJtczZJREUyTnpZeE1ETTFMQW9nSUNBZ2NHeDFiVG9nTVRRMU1qUTJNemNzQ2lBZ0lDQndiM2RrWlhKaWJIVmxPaUF4TVRVNU1Ua3hNQ3dLSUNBZ0lIQjFjbkJzWlRvZ09ETTRPRGN6Tml3S0lDQWdJSEpsWW1WalkyRndkWEp3YkdVNklEWTJPVGM0T0RFc0NpQWdJQ0J5WldRNklERTJOekV4Tmpnd0xBb2dJQ0FnY205emVXSnliM2R1T2lBeE1qTTFOelV4T1N3S0lDQWdJSEp2ZVdGc1lteDFaVG9nTkRJNE5qazBOU3dLSUNBZ0lITmhaR1JzWldKeWIzZHVPaUE1TVRJM01UZzNMQW9nSUNBZ2MyRnNiVzl1T2lBeE5qUXhOamc0TWl3S0lDQWdJSE5oYm1SNVluSnZkMjQ2SURFMk1ETXlPRFkwTEFvZ0lDQWdjMlZoWjNKbFpXNDZJRE13TlRBek1qY3NDaUFnSUNCelpXRnphR1ZzYkRvZ01UWTNOelEyTXpnc0NpQWdJQ0J6YVdWdWJtRTZJREV3TlRBMk56azNMQW9nSUNBZ2MybHNkbVZ5T2lBeE1qWXpNakkxTml3S0lDQWdJSE5yZVdKc2RXVTZJRGc1TURBek16RXNDaUFnSUNCemJHRjBaV0pzZFdVNklEWTVOekF3TmpFc0NpQWdJQ0J6YkdGMFpXZHlZWGs2SURjek56STVORFFzQ2lBZ0lDQnpiR0YwWldkeVpYazZJRGN6TnpJNU5EUXNDaUFnSUNCemJtOTNPaUF4TmpjM05Ua3pNQ3dLSUNBZ0lITndjbWx1WjJkeVpXVnVPaUEyTlRRd055d0tJQ0FnSUhOMFpXVnNZbXgxWlRvZ05EWXlNRGs0TUN3S0lDQWdJSFJoYmpvZ01UTTRNRGczT0RBc0NpQWdJQ0IwWldGc09pQXpNamc1Tml3S0lDQWdJSFJvYVhOMGJHVTZJREUwTWpBME9EZzRMQW9nSUNBZ2RHOXRZWFJ2T2lBeE5qY3pOekE1TlN3S0lDQWdJSFIxY25GMWIybHpaVG9nTkRJMU1UZzFOaXdLSUNBZ0lIWnBiMnhsZERvZ01UVTJNekV3T0RZc0NpQWdJQ0IzYUdWaGREb2dNVFl4TVRNek16RXNDaUFnSUNCM2FHbDBaVG9nTVRZM056Y3lNVFVzQ2lBZ0lDQjNhR2wwWlhOdGIydGxPaUF4TmpFeE9USTROU3dLSUNBZ0lIbGxiR3h2ZHpvZ01UWTNOelk1TmpBc0NpQWdJQ0I1Wld4c2IzZG5jbVZsYmpvZ01UQXhORFV3TnpRS2ZTd2dSblFnUFNCN0NpQWdJQ0JvT2lBd0xBb2dJQ0FnY3pvZ01Dd0tJQ0FnSUd3NklEQUtmU3dnYW5JZ1BTQjdDaUFnSUNCb09pQXdMQW9nSUNBZ2N6b2dNQ3dLSUNBZ0lHdzZJREFLZlRzS1puVnVZM1JwYjI0Z1NXOG9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUhRZ1BDQXdJQ1ltSUNoMElDczlJREVwTENCMElENGdNU0FtSmlBb2RDQXRQU0F4S1N3Z2RDQThJREVnTHlBMklEOGdjeUFySUNobElDMGdjeWtnS2lBMklDb2dkQ0E2SUhRZ1BDQXhJQzhnTWlBL0lHVWdPaUIwSUR3Z01pQXZJRE1nUHlCeklDc2dLR1VnTFNCektTQXFJRFlnS2lBb01pQXZJRE1nTFNCMEtTQTZJSE03Q24wS1puVnVZM1JwYjI0Z1JHOG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlITWdQQ0F1TURRd05EVWdQeUJ6SUNvZ0xqQTNOek01T1RNNE1EZ2dPaUJOWVhSb0xuQnZkeWh6SUNvZ0xqazBOemcyTnpJNU9EWWdLeUF1TURVeU1UTXlOekF4TkN3Z01pNDBLVHNLZlFwbWRXNWpkR2x2YmlCR2J5aHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QThJQzR3TURNeE16QTRJRDhnY3lBcUlERXlMamt5SURvZ01TNHdOVFVnS2lCTllYUm9MbkJ2ZHloekxDQXVOREUyTmpZcElDMGdMakExTlRzS2ZRcDJZWElnWVdVZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOVBUMGdkbTlwWkNBd0lDWW1JRzRnUFQwOUlIWnZhV1FnTUNBL0lIUm9hWE11YzJWMEtHVXBJRG9nZEdocGN5NXpaWFJTUjBJb1pTd2dkQ3dnYmlrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDWW1JR1V1YVhORGIyeHZjaUEvSUhSb2FYTXVZMjl3ZVNobEtTQTZJSFI1Y0dWdlppQmxJRDA5SUNKdWRXMWlaWElpSUQ4Z2RHaHBjeTV6WlhSSVpYZ29aU2tnT2lCMGVYQmxiMllnWlNBOVBTQWljM1J5YVc1bklpQW1KaUIwYUdsekxuTmxkRk4wZVd4bEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnWlN3Z2RHaHBjeTVuSUQwZ1pTd2dkR2hwY3k1aUlEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVobGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnUFNCTllYUm9MbVpzYjI5eUtHVXBMQ0IwYUdsekxuSWdQU0FvWlNBK1BpQXhOaUFtSURJMU5Ta2dMeUF5TlRVc0lIUm9hWE11WnlBOUlDaGxJRDQrSURnZ0ppQXlOVFVwSUM4Z01qVTFMQ0IwYUdsekxtSWdQU0FvWlNBbUlESTFOU2tnTHlBeU5UVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJTUjBJb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnUFNCbExDQjBhR2x6TG1jZ1BTQjBMQ0IwYUdsekxtSWdQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFNGTk1LR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlJR1JoS0dVc0lERXBMQ0IwSUQwZ2JYUW9kQ3dnTUN3Z01Ta3NJRzRnUFNCdGRDaHVMQ0F3TENBeEtTd2dkQ0E5UFQwZ01Da2dkR2hwY3k1eUlEMGdkR2hwY3k1bklEMGdkR2hwY3k1aUlEMGdianNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1SUR3OUlDNDFJRDhnYmlBcUlDZ3hJQ3NnZENrZ09pQnVJQ3NnZENBdElHNGdLaUIwTENCeUlEMGdNaUFxSUc0Z0xTQnBPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbklnUFNCSmJ5aHlMQ0JwTENCbElDc2dNU0F2SURNcExDQjBhR2x6TG1jZ1BTQkpieWh5TENCcExDQmxLU3dnZEdocGN5NWlJRDBnU1c4b2Npd2dhU3dnWlNBdElERWdMeUF6S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSVGRIbHNaU2hsS1NCN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RDaHBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dJVDA5SUhadmFXUWdNQ0FtSmlCd1lYSnpaVVpzYjJGMEtHa3BJRHdnTVNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa052Ykc5eU9pQkJiSEJvWVNCamIyMXdiMjVsYm5RZ2IyWWdJaUFySUdVZ0t5QWlJSGRwYkd3Z1ltVWdhV2R1YjNKbFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHNDdDaUFnSUNBZ0lDQWdhV1lnS0c0Z1BTQXZYaWdvUHpweVoySjhhSE5zS1dFL0tWd29LRnRlWENsZEtpbGNLUzh1WlhobFl5aGxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVN3Z2NpQTlJRzViTVYwc0lHOGdQU0J1V3pKZE93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29jaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSnlaMklpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWljbWRpWVNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BTQXZYbHh6S2loY1pDc3BYSE1xTEZ4ektpaGNaQ3NwWEhNcUxGeHpLaWhjWkNzcFhITXFLRDg2TEZ4ektpaGNaQ3BjTGo5Y1pDc3BYSE1xS1Q4a0x5NWxlR1ZqS0c4cEtTQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1RXRjBhQzV0YVc0b01qVTFMQ0J3WVhKelpVbHVkQ2hwV3pGZExDQXhNQ2twSUM4Z01qVTFMQ0IwYUdsekxtY2dQU0JOWVhSb0xtMXBiaWd5TlRVc0lIQmhjbk5sU1c1MEtHbGJNbDBzSURFd0tTa2dMeUF5TlRVc0lIUm9hWE11WWlBOUlFMWhkR2d1YldsdUtESTFOU3dnY0dGeWMyVkpiblFvYVZzelhTd2dNVEFwS1NBdklESTFOU3dnZENocFd6UmRLU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FTQTlJQzllWEhNcUtGeGtLeWxjSlZ4ektpeGNjeW9vWEdRcktWd2xYSE1xTEZ4ektpaGNaQ3NwWENWY2N5b29Qem9zWEhNcUtGeGtLbHd1UDF4a0t5bGNjeW9wUHlRdkxtVjRaV01vYnlrcElISmxkSFZ5YmlCMGFHbHpMbklnUFNCTllYUm9MbTFwYmlneE1EQXNJSEJoY25ObFNXNTBLR2xiTVYwc0lERXdLU2tnTHlBeE1EQXNJSFJvYVhNdVp5QTlJRTFoZEdndWJXbHVLREV3TUN3Z2NHRnljMlZKYm5Rb2FWc3lYU3dnTVRBcEtTQXZJREV3TUN3Z2RHaHBjeTVpSUQwZ1RXRjBhQzV0YVc0b01UQXdMQ0J3WVhKelpVbHVkQ2hwV3pOZExDQXhNQ2twSUM4Z01UQXdMQ0IwS0dsYk5GMHBMQ0IwYUdsek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpYUhOc0lqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1oemJHRWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDBnTDE1Y2N5b29YR1FxWEM0L1hHUXJLVnh6S2l4Y2N5b29YR1FyS1Z3bFhITXFMRnh6S2loY1pDc3BYQ1ZjY3lvb1B6b3NYSE1xS0Z4a0tsd3VQMXhrS3lsY2N5b3BQeVF2TG1WNFpXTW9ieWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J3WVhKelpVWnNiMkYwS0dsYk1WMHBJQzhnTXpZd0xDQnNJRDBnY0dGeWMyVkpiblFvYVZzeVhTd2dNVEFwSUM4Z01UQXdMQ0JqSUQwZ2NHRnljMlZKYm5Rb2FWc3pYU3dnTVRBcElDOGdNVEF3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ2hwV3pSZEtTd2dkR2hwY3k1elpYUklVMHdvWVN3Z2JDd2dZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNodUlEMGdMMTVjSXloYlFTMUdZUzFtWEdSZEt5a2tMeTVsZUdWaktHVXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwTVNBOUlHNWJNVjBzSUhJeElEMGdhVEV1YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jakVnUFQwOUlETXBJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQndZWEp6WlVsdWRDaHBNUzVqYUdGeVFYUW9NQ2tnS3lCcE1TNWphR0Z5UVhRb01Da3NJREUyS1NBdklESTFOU3dnZEdocGN5NW5JRDBnY0dGeWMyVkpiblFvYVRFdVkyaGhja0YwS0RFcElDc2dhVEV1WTJoaGNrRjBLREVwTENBeE5pa2dMeUF5TlRVc0lIUm9hWE11WWlBOUlIQmhjbk5sU1c1MEtHa3hMbU5vWVhKQmRDZ3lLU0FySUdreExtTm9ZWEpCZENneUtTd2dNVFlwSUM4Z01qVTFMQ0IwYUdsek93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NqRWdQVDA5SURZcElISmxkSFZ5YmlCMGFHbHpMbklnUFNCd1lYSnpaVWx1ZENocE1TNWphR0Z5UVhRb01Da2dLeUJwTVM1amFHRnlRWFFvTVNrc0lERTJLU0F2SURJMU5Td2dkR2hwY3k1bklEMGdjR0Z5YzJWSmJuUW9hVEV1WTJoaGNrRjBLRElwSUNzZ2FURXVZMmhoY2tGMEtETXBMQ0F4TmlrZ0x5QXlOVFVzSUhSb2FYTXVZaUE5SUhCaGNuTmxTVzUwS0dreExtTm9ZWEpCZENnMEtTQXJJR2t4TG1Ob1lYSkJkQ2cxS1N3Z01UWXBJQzhnTWpVMUxDQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBbUppQmxMbXhsYm1kMGFDQStJREFnUHlCMGFHbHpMbk5sZEVOdmJHOXlUbUZ0WlNobEtTQTZJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJEYjJ4dmNrNWhiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ0pHTmJaUzUwYjB4dmQyVnlRMkZ6WlNncFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnZEdocGN5NXpaWFJJWlhnb2RDa2dPaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOdmJHOXlPaUJWYm10dWIzZHVJR052Ykc5eUlDSWdLeUJsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbklzSUhSb2FYTXVaeXdnZEdocGN5NWlLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdQU0JsTG5Jc0lIUm9hWE11WnlBOUlHVXVaeXdnZEdocGN5NWlJRDBnWlM1aUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVk5TUjBKVWIweHBibVZoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlFUnZLR1V1Y2lrc0lIUm9hWE11WnlBOUlFUnZLR1V1Wnlrc0lIUm9hWE11WWlBOUlFUnZLR1V1WWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVUR2x1WldGeVZHOVRVa2RDS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1JtOG9aUzV5S1N3Z2RHaHBjeTVuSUQwZ1JtOG9aUzVuS1N3Z2RHaHBjeTVpSUQwZ1JtOG9aUzVpS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmJuWmxjblJUVWtkQ1ZHOU1hVzVsWVhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5d2VWTlNSMEpVYjB4cGJtVmhjaWgwYUdsektTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZiblpsY25STWFXNWxZWEpVYjFOU1IwSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXdlVXhwYm1WaGNsUnZVMUpIUWloMGFHbHpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVobGVDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlDb2dNalUxSUR3OElERTJJRjRnZEdocGN5NW5JQ29nTWpVMUlEdzhJRGdnWGlCMGFHbHpMbUlnS2lBeU5UVWdQRHdnTURzS0lDQWdJSDBLSUNBZ0lHZGxkRWhsZUZOMGNtbHVaeWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0NJd01EQXdNREFpSUNzZ2RHaHBjeTVuWlhSSVpYZ29LUzUwYjFOMGNtbHVaeWd4TmlrcExuTnNhV05sS0MwMktUc0tJQ0FnSUgwS0lDQWdJR2RsZEVoVFRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuSXNJRzRnUFNCMGFHbHpMbWNzSUdrZ1BTQjBhR2x6TG1Jc0lISWdQU0JOWVhSb0xtMWhlQ2gwTENCdUxDQnBLU3dnYnlBOUlFMWhkR2d1YldsdUtIUXNJRzRzSUdrcExDQmhMQ0JzTENCaklEMGdLRzhnS3lCeUtTQXZJREk3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdQVDA5SUhJcElHRWdQU0F3TENCc0lEMGdNRHNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0J5SUMwZ2J6c0tJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9LR3dnUFNCaklEdzlJQzQxSUQ4Z2FDQXZJQ2h5SUNzZ2J5a2dPaUJvSUM4Z0tESWdMU0J5SUMwZ2J5a3NJSElwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQjBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFZ1BTQW9iaUF0SUdrcElDOGdhQ0FySUNodUlEd2dhU0EvSURZZ09pQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2Jqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ0tHa2dMU0IwS1NBdklHZ2dLeUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQnBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFZ1BTQW9kQ0F0SUc0cElDOGdhQ0FySURRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1lTQXZQU0EyT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1b0lEMGdZU3dnWlM1eklEMGdiQ3dnWlM1c0lEMGdZeXdnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkRk4wZVd4bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQWljbWRpS0NJZ0t5QW9kR2hwY3k1eUlDb2dNalUxSUh3Z01Da2dLeUFpTENJZ0t5QW9kR2hwY3k1bklDb2dNalUxSUh3Z01Da2dLeUFpTENJZ0t5QW9kR2hwY3k1aUlDb2dNalUxSUh3Z01Da2dLeUFpS1NJN0NpQWdJQ0I5Q2lBZ0lDQnZabVp6WlhSSVUwd29aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRFaFRUQ2hHZENrc0lFWjBMbWdnS3owZ1pTd2dSblF1Y3lBclBTQjBMQ0JHZEM1c0lDczlJRzRzSUhSb2FYTXVjMlYwU0ZOTUtFWjBMbWdzSUVaMExuTXNJRVowTG13cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXUmtLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJQ3M5SUdVdWNpd2dkR2hwY3k1bklDczlJR1V1Wnl3Z2RHaHBjeTVpSUNzOUlHVXVZaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZrWkVOdmJHOXljeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlHVXVjaUFySUhRdWNpd2dkR2hwY3k1bklEMGdaUzVuSUNzZ2RDNW5MQ0IwYUdsekxtSWdQU0JsTG1JZ0t5QjBMbUlzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnS3owZ1pTd2dkR2hwY3k1bklDczlJR1VzSUhSb2FYTXVZaUFyUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzVmlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJRDBnVFdGMGFDNXRZWGdvTUN3Z2RHaHBjeTV5SUMwZ1pTNXlLU3dnZEdocGN5NW5JRDBnVFdGMGFDNXRZWGdvTUN3Z2RHaHBjeTVuSUMwZ1pTNW5LU3dnZEdocGN5NWlJRDBnVFdGMGFDNXRZWGdvTUN3Z2RHaHBjeTVpSUMwZ1pTNWlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJQ285SUdVdWNpd2dkR2hwY3k1bklDbzlJR1V1Wnl3Z2RHaHBjeTVpSUNvOUlHVXVZaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlDbzlJR1VzSUhSb2FYTXVaeUFxUFNCbExDQjBhR2x6TG1JZ0tqMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3hsY25Bb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSWdLejBnS0dVdWNpQXRJSFJvYVhNdWNpa2dLaUIwTENCMGFHbHpMbWNnS3owZ0tHVXVaeUF0SUhSb2FYTXVaeWtnS2lCMExDQjBhR2x6TG1JZ0t6MGdLR1V1WWlBdElIUm9hWE11WWlrZ0tpQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiR1Z5Y0VOdmJHOXljeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQTlJR1V1Y2lBcklDaDBMbklnTFNCbExuSXBJQ29nYml3Z2RHaHBjeTVuSUQwZ1pTNW5JQ3NnS0hRdVp5QXRJR1V1WnlrZ0tpQnVMQ0IwYUdsekxtSWdQU0JsTG1JZ0t5QW9kQzVpSUMwZ1pTNWlLU0FxSUc0c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc1pYSndTRk5NS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRWhUVENoR2RDa3NJR1V1WjJWMFNGTk1LR3B5S1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc5eUtFWjBMbWdzSUdweUxtZ3NJSFFwTENCcElEMGdiM0lvUm5RdWN5d2dhbkl1Y3l3Z2RDa3NJSElnUFNCdmNpaEdkQzVzTENCcWNpNXNMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFJJVTB3b2Jpd2dhU3dnY2lrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCbGNYVmhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuSWdQVDA5SUhSb2FYTXVjaUFtSmlCbExtY2dQVDA5SUhSb2FYTXVaeUFtSmlCbExtSWdQVDA5SUhSb2FYTXVZanNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUJjbkpoZVNobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnUFNCbFczUmRMQ0IwYUdsekxtY2dQU0JsVzNRZ0t5QXhYU3dnZEdocGN5NWlJRDBnWlZ0MElDc2dNbDBzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBGeWNtRjVLR1VnUFNCYlhTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWdDBYU0E5SUhSb2FYTXVjaXdnWlZ0MElDc2dNVjBnUFNCMGFHbHpMbWNzSUdWYmRDQXJJREpkSUQwZ2RHaHBjeTVpTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y2lBOUlHVXVaMlYwV0NoMEtTd2dkR2hwY3k1bklEMGdaUzVuWlhSWktIUXBMQ0IwYUdsekxtSWdQU0JsTG1kbGRGb29kQ2tzSUdVdWJtOXliV0ZzYVhwbFpDQTlQVDBnSVRBZ0ppWWdLSFJvYVhNdWNpQXZQU0F5TlRVc0lIUm9hWE11WnlBdlBTQXlOVFVzSUhSb2FYTXVZaUF2UFNBeU5UVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRFaGxlQ2dwT3dvZ0lDQWdmUXA5T3dwaFpTNU9RVTFGVXlBOUlDUmpPd3BoWlM1d2NtOTBiM1I1Y0dVdWFYTkRiMnh2Y2lBOUlDRXdPd3BoWlM1d2NtOTBiM1I1Y0dVdWNpQTlJREU3Q21GbExuQnliM1J2ZEhsd1pTNW5JRDBnTVRzS1lXVXVjSEp2ZEc5MGVYQmxMbUlnUFNBeE93cDJZWElnYUc0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWsxbGMyaENZWE5wWTAxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta3NJSFJvYVhNdWJXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbUZ2VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVsYm5aTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1OdmJXSnBibVVnUFNCV2N5d2dkR2hwY3k1eVpXWnNaV04wYVhacGRIa2dQU0F4TENCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJQzQ1T0N3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQWljbTkxYm1RaUxDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsekxtMWhjQ0E5SUdVdWJXRndMQ0IwYUdsekxteHBaMmgwVFdGd0lEMGdaUzVzYVdkb2RFMWhjQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVZVzlOWVhBZ1BTQmxMbUZ2VFdGd0xDQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVJRDBnWlM1aGIwMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQ0E5SUdVdWMzQmxZM1ZzWVhKTllYQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxtVnVkazFoY0NBOUlHVXVaVzUyVFdGd0xDQjBhR2x6TG1OdmJXSnBibVVnUFNCbExtTnZiV0pwYm1Vc0lIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUlEMGdaUzV5Wldac1pXTjBhWFpwZEhrc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnWlM1eVpXWnlZV04wYVc5dVVtRjBhVzhzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNHNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NtaHVMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaENZWE5wWTAxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCS1pTQTlJRzVsZHlCTkxDQlJjaUE5SUc1bGR5QllMQ0JWWlNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dVcEtTQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVNklHRnljbUY1SUhOb2IzVnNaQ0JpWlNCaElGUjVjR1ZrSUVGeWNtRjVMaUlwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlDSWlMQ0IwYUdsekxtRnljbUY1SUQwZ1pTd2dkR2hwY3k1cGRHVnRVMmw2WlNBOUlIUXNJSFJvYVhNdVkyOTFiblFnUFNCbElDRTlQU0IyYjJsa0lEQWdQeUJsTG14bGJtZDBhQ0F2SUhRZ09pQXdMQ0IwYUdsekxtNXZjbTFoYkdsNlpXUWdQU0J1SUQwOVBTQWhNQ3dnZEdocGN5NTFjMkZuWlNBOUlHaHlMQ0IwYUdsekxuVndaR0YwWlZKaGJtZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdOdmRXNTBPaUF0TVFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZG1WeWMybHZiaUE5SURBN0NpQWdJQ0I5Q2lBZ0lDQnZibFZ3Ykc5aFpFTmhiR3hpWVdOcktDa2dlMzBLSUNBZ0lITmxkQ0J1WldWa2MxVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ0lUQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5czdDaUFnSUNCOUNpQWdJQ0J6WlhSVmMyRm5aU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWE5oWjJVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym1GdFpTQTlJR1V1Ym1GdFpTd2dkR2hwY3k1aGNuSmhlU0E5SUc1bGR5QmxMbUZ5Y21GNUxtTnZibk4wY25WamRHOXlLR1V1WVhKeVlYa3BMQ0IwYUdsekxtbDBaVzFUYVhwbElEMGdaUzVwZEdWdFUybDZaU3dnZEdocGN5NWpiM1Z1ZENBOUlHVXVZMjkxYm5Rc0lIUm9hWE11Ym05eWJXRnNhWHBsWkNBOUlHVXVibTl5YldGc2FYcGxaQ3dnZEdocGN5NTFjMkZuWlNBOUlHVXVkWE5oWjJVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVRWFFvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUdVZ0tqMGdkR2hwY3k1cGRHVnRVMmw2WlN3Z2JpQXFQU0IwTG1sMFpXMVRhWHBsT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMGFHbHpMbWwwWlcxVGFYcGxPeUJwSUR3Z2Nqc2dhU3NyS1hSb2FYTXVZWEp5WVhsYlpTQXJJR2xkSUQwZ2RDNWhjbkpoZVZ0dUlDc2dhVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1UVhKeVlYa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnljbUY1TG5ObGRDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hsRGIyeHZjbk5CY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtRnljbUY1TENCdUlEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnWlM1c1pXNW5kR2c3SUdrZ1BDQnlPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1ZiYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVXVZMjl3ZVVOdmJHOXljMEZ5Y21GNUtDazZJR052Ykc5eUlHbHpJSFZ1WkdWbWFXNWxaQ0lzSUdrcExDQnZJRDBnYm1WM0lHRmxLU3dnZEZ0dUt5dGRJRDBnYnk1eUxDQjBXMjRySzEwZ1BTQnZMbWNzSUhSYmJpc3JYU0E5SUc4dVlqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVWbVZqZEc5eU1uTkJjbkpoZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1GeWNtRjVMQ0J1SUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdaUzVzWlc1bmRHZzdJR2tnUENCeU95QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVmJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQVDA5SUhadmFXUWdNQ0FtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVdVkyOXdlVlpsWTNSdmNqSnpRWEp5WVhrb0tUb2dkbVZqZEc5eUlHbHpJSFZ1WkdWbWFXNWxaQ0lzSUdrcExDQnZJRDBnYm1WM0lGZ3BMQ0IwVzI0cksxMGdQU0J2TG5nc0lIUmJiaXNyWFNBOUlHOHVlVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1Vm1WamRHOXlNM05CY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtRnljbUY1TENCdUlEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnWlM1c1pXNW5kR2c3SUdrZ1BDQnlPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1ZiYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVXVZMjl3ZVZabFkzUnZjak56UVhKeVlYa29LVG9nZG1WamRHOXlJR2x6SUhWdVpHVm1hVzVsWkNJc0lHa3BMQ0J2SUQwZ2JtVjNJRTBwTENCMFcyNHJLMTBnUFNCdkxuZ3NJSFJiYmlzclhTQTlJRzh1ZVN3Z2RGdHVLeXRkSUQwZ2J5NTZPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGxXWldOMGIzSTBjMEZ5Y21GNUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVlYSnlZWGtzSUc0Z1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0JsTG14bGJtZDBhRHNnYVNBOElISTdJR2tyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdaVnRwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdieUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrRjBkSEpwWW5WMFpTNWpiM0I1Vm1WamRHOXlOSE5CY25KaGVTZ3BPaUIyWldOMGIzSWdhWE1nZFc1a1pXWnBibVZrSWl3Z2FTa3NJRzhnUFNCdVpYY2dWbVVwTENCMFcyNHJLMTBnUFNCdkxuZ3NJSFJiYmlzclhTQTlJRzh1ZVN3Z2RGdHVLeXRkSUQwZ2J5NTZMQ0IwVzI0cksxMGdQU0J2TG5jN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnektHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwZEdWdFUybDZaU0E5UFQwZ01pa2dabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJSFJvYVhNdVkyOTFiblE3SUhRZ1BDQnVPeUIwS3lzcFVYSXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwYUdsekxDQjBLU3dnVVhJdVlYQndiSGxOWVhSeWFYZ3pLR1VwTENCMGFHbHpMbk5sZEZoWktIUXNJRkZ5TG5nc0lGRnlMbmtwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0hSb2FYTXVhWFJsYlZOcGVtVWdQVDA5SURNcElHWnZjaWhzWlhRZ2RERWdQU0F3TENCdU1TQTlJSFJvYVhNdVkyOTFiblE3SUhReElEd2diakU3SUhReEt5c3BTbVV1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMGFHbHpMQ0IwTVNrc0lFcGxMbUZ3Y0d4NVRXRjBjbWw0TXlobEtTd2dkR2hwY3k1elpYUllXVm9vZERFc0lFcGxMbmdzSUVwbExua3NJRXBsTG5vcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWpiM1Z1ZERzZ2RDQThJRzQ3SUhRckt5bEtaUzU0SUQwZ2RHaHBjeTVuWlhSWUtIUXBMQ0JLWlM1NUlEMGdkR2hwY3k1blpYUlpLSFFwTENCS1pTNTZJRDBnZEdocGN5NW5aWFJhS0hRcExDQktaUzVoY0hCc2VVMWhkSEpwZURRb1pTa3NJSFJvYVhNdWMyVjBXRmxhS0hRc0lFcGxMbmdzSUVwbExua3NJRXBsTG5vcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE9iM0p0WVd4TllYUnlhWGdvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQjBhR2x6TG1OdmRXNTBPeUIwSUR3Z2Jqc2dkQ3NyS1VwbExuZ2dQU0IwYUdsekxtZGxkRmdvZENrc0lFcGxMbmtnUFNCMGFHbHpMbWRsZEZrb2RDa3NJRXBsTG5vZ1BTQjBhR2x6TG1kbGRGb29kQ2tzSUVwbExtRndjR3g1VG05eWJXRnNUV0YwY21sNEtHVXBMQ0IwYUdsekxuTmxkRmhaV2loMExDQktaUzU0TENCS1pTNTVMQ0JLWlM1NktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJSFJvYVhNdVkyOTFiblE3SUhRZ1BDQnVPeUIwS3lzcFNtVXVlQ0E5SUhSb2FYTXVaMlYwV0NoMEtTd2dTbVV1ZVNBOUlIUm9hWE11WjJWMFdTaDBLU3dnU21VdWVpQTlJSFJvYVhNdVoyVjBXaWgwS1N3Z1NtVXVkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLR1VwTENCMGFHbHpMbk5sZEZoWldpaDBMQ0JLWlM1NExDQktaUzU1TENCS1pTNTZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnljbUY1TG5ObGRDaGxMQ0IwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRGZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnljbUY1VzJVZ0tpQjBhR2x6TG1sMFpXMVRhWHBsWFRzS0lDQWdJSDBLSUNBZ0lITmxkRmdvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeWNtRjVXMlVnS2lCMGFHbHpMbWwwWlcxVGFYcGxYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjbkpoZVZ0bElDb2dkR2hwY3k1cGRHVnRVMmw2WlNBcklERmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEp5WVhsYlpTQXFJSFJvYVhNdWFYUmxiVk5wZW1VZ0t5QXhYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjbkpoZVZ0bElDb2dkR2hwY3k1cGRHVnRVMmw2WlNBcklESmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEp5WVhsYlpTQXFJSFJvYVhNdWFYUmxiVk5wZW1VZ0t5QXlYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUlhLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjbkpoZVZ0bElDb2dkR2hwY3k1cGRHVnRVMmw2WlNBcklETmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZ5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEp5WVhsYlpTQXFJSFJvYVhNdWFYUmxiVk5wZW1VZ0t5QXpYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnS2owZ2RHaHBjeTVwZEdWdFUybDZaU3dnZEdocGN5NWhjbkpoZVZ0bElDc2dNRjBnUFNCMExDQjBhR2x6TG1GeWNtRjVXMlVnS3lBeFhTQTlJRzRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdWb29aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUNvOUlIUm9hWE11YVhSbGJWTnBlbVVzSUhSb2FYTXVZWEp5WVhsYlpTQXJJREJkSUQwZ2RDd2dkR2hwY3k1aGNuSmhlVnRsSUNzZ01WMGdQU0J1TENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF5WFNBOUlHa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1ZwWEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBcVBTQjBhR2x6TG1sMFpXMVRhWHBsTENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF3WFNBOUlIUXNJSFJvYVhNdVlYSnlZWGxiWlNBcklERmRJRDBnYml3Z2RHaHBjeTVoY25KaGVWdGxJQ3NnTWwwZ1BTQnBMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXpYU0E5SUhJc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdmJsVndiRzloWkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YjI1VmNHeHZZV1JEWVd4c1ltRmpheUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTVoY25KaGVTd2dkR2hwY3k1cGRHVnRVMmw2WlNrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiVk5wZW1VNklIUm9hWE11YVhSbGJWTnBlbVVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhSb2FYTXVZWEp5WVhrdVkyOXVjM1J5ZFdOMGIzSXVibUZ0WlN3S0lDQWdJQ0FnSUNBZ0lDQWdZWEp5WVhrNklFRnljbUY1TG5CeWIzUnZkSGx3WlM1emJHbGpaUzVqWVd4c0tIUm9hWE11WVhKeVlYa3BMQW9nSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hwZW1Wa09pQjBhR2x6TG01dmNtMWhiR2w2WldRS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTVoYldVZ0lUMDlJQ0lpSUNZbUlDaGxMbTVoYldVZ1BTQjBhR2x6TG01aGJXVXBMQ0IwYUdsekxuVnpZV2RsSUNFOVBTQm9jaUFtSmlBb1pTNTFjMkZuWlNBOUlIUm9hWE11ZFhOaFoyVXBMQ0FvZEdocGN5NTFjR1JoZEdWU1lXNW5aUzV2Wm1aelpYUWdJVDA5SURBZ2ZId2dkR2hwY3k1MWNHUmhkR1ZTWVc1blpTNWpiM1Z1ZENBaFBUMGdMVEVwSUNZbUlDaGxMblZ3WkdGMFpWSmhibWRsSUQwZ2RHaHBjeTUxY0dSaGRHVlNZVzVuWlNrc0lHVTdDaUFnSUNCOUNuMDdDbFZsTG5CeWIzUnZkSGx3WlM1cGMwSjFabVpsY2tGMGRISnBZblYwWlNBOUlDRXdPd3AyWVhJZ2FtTWdQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJKYm5RNFFYSnlZWGtvWlNrc0lIUXNJRzRwT3dvZ0lDQWdmUXA5TENCUll5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ZXVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRlZwYm5RNFFYSnlZWGtvWlNrc0lIUXNJRzRwT3dvZ0lDQWdmUXA5TENCTFl5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ZXVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRlZwYm5RNFEyeGhiWEJsWkVGeWNtRjVLR1VwTENCMExDQnVLVHNLSUNBZ0lIMEtmU3dnWldnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QkpiblF4TmtGeWNtRjVLR1VwTENCMExDQnVLVHNLSUNBZ0lIMEtmU3dnV1hNZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QlZhVzUwTVRaQmNuSmhlU2hsS1N3Z2RDd2diaWs3Q2lBZ0lDQjlDbjBzSUhSb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCVlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dTVzUwTXpKQmNuSmhlU2hsS1N3Z2RDd2diaWs3Q2lBZ0lDQjlDbjBzSUZweklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCVlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dWV2x1ZERNeVFYSnlZWGtvWlNrc0lIUXNJRzRwT3dvZ0lDQWdmUXA5TENCdWFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ZXVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRlZwYm5ReE5rRnljbUY1S0dVcExDQjBMQ0J1S1RzS0lDQWdJSDBLZlRzS2JtZ3VjSEp2ZEc5MGVYQmxMbWx6Um14dllYUXhOa0oxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3T3dwMllYSWdaR1VnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29aU2tzSUhRc0lHNHBPd29nSUNBZ2ZRcDlMQ0JwYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVldVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm1WM0lFWnNiMkYwTmpSQmNuSmhlU2hsS1N3Z2RDd2diaWs3Q2lBZ0lDQjlDbjBzSUdObUlEMGdNQ3dnVW5RZ1BTQnVaWGNnY0dVc0lFNXZJRDBnYm1WM0lFNWxMQ0JqYVNBOUlHNWxkeUJOTENCVWRDQTlJRzVsZHlCTWRDd2dKR2tnUFNCdVpYY2dUSFFzSUdoMElEMGdibVYzSUUwc0lGOWxJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25SNUtIUm9hWE1zSUNKcFpDSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUdObUt5c0tJQ0FnSUNBZ0lDQjlLU3dnZEdocGN5NTFkV2xrSUQwZ1JYUW9LU3dnZEdocGN5NXVZVzFsSUQwZ0lpSXNJSFJvYVhNdWRIbHdaU0E5SUNKQ2RXWm1aWEpIWlc5dFpYUnllU0lzSUhSb2FYTXVhVzVrWlhnZ1BTQnVkV3hzTENCMGFHbHpMbUYwZEhKcFluVjBaWE1nUFNCN2ZTd2dkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE1nUFNCN2ZTd2dkR2hwY3k1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpTQTlJQ0V4TENCMGFHbHpMbWR5YjNWd2N5QTlJRnRkTENCMGFHbHpMbUp2ZFc1a2FXNW5RbTk0SUQwZ2JuVnNiQ3dnZEdocGN5NWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlHNTFiR3dzSUhSb2FYTXVaSEpoZDFKaGJtZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZERvZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5MWJuUTZJREVnTHlBd0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlIdDlPd29nSUNBZ2ZRb2dJQ0FnWjJWMFNXNWtaWGdvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzVrWlhnN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJKYm1SbGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRUZ5Y21GNUxtbHpRWEp5WVhrb1pTa2dQeUIwYUdsekxtbHVaR1Y0SUQwZ2JtVjNJQ2haWXlobEtTQStJRFkxTlRNMUlEOGdXbk1nT2lCWmN5a29aU3dnTVNrZ09pQjBhR2x6TG1sdVpHVjRJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFRjBkSEpwWW5WMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYUjBjbWxpZFhSbGMxdGxYVHNLSUNBZ0lIMEtJQ0FnSUhObGRFRjBkSEpwWW5WMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFIwY21saWRYUmxjMXRsWFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmtaV3hsZEdWQmRIUnlhV0oxZEdVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmtaV3hsZEdVZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzJWZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2FHRnpRWFIwY21saWRYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhkSFJ5YVdKMWRHVnpXMlZkSUNFOVBTQjJiMmxrSURBN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JIY205MWNDaGxMQ0IwTENCdUlEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaM0p2ZFhCekxuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpkR0Z5ZERvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5MWJuUTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkR1Z5YVdGc1NXNWtaWGc2SUc0S0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJR05zWldGeVIzSnZkWEJ6S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WjNKdmRYQnpJRDBnVzEwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJFY21GM1VtRnVaMlVvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVpISmhkMUpoYm1kbExuTjBZWEowSUQwZ1pTd2dkR2hwY3k1a2NtRjNVbUZ1WjJVdVkyOTFiblFnUFNCME93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2YmpzS0lDQWdJQ0FnSUNCMElDRTlQU0IyYjJsa0lEQWdKaVlnS0hRdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMExtNWxaV1J6VlhCa1lYUmxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG01dmNtMWhiRHNLSUNBZ0lDQWdJQ0JwWmlBb2JpQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJR3gwS0NrdVoyVjBUbTl5YldGc1RXRjBjbWw0S0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0J1TG1Gd2NHeDVUbTl5YldGc1RXRjBjbWw0S0hJcExDQnVMbTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1aGRIUnlhV0oxZEdWekxuUmhibWRsYm5RN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b1pTa3NJR2t1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2tzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2dnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVqYjIxd2RYUmxRbTkxYm1ScGJtZENiM2dvS1N3Z2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTQWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxtTnZiWEIxZEdWQ2IzVnVaR2x1WjFOd2FHVnlaU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbFJkV0YwWlhKdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVW5RdWJXRnJaVkp2ZEdGMGFXOXVSbkp2YlZGMVlYUmxjbTVwYjI0b1pTa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLRkowS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKdmRHRjBaVmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCU2RDNXRZV3RsVW05MFlYUnBiMjVZS0dVcExDQjBhR2x6TG1Gd2NHeDVUV0YwY21sNE5DaFNkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5YjNSaGRHVlpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVW5RdWJXRnJaVkp2ZEdGMGFXOXVXU2hsS1N3Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb1VuUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbFdpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRkowTG0xaGEyVlNiM1JoZEdsdmJsb29aU2tzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0ZKMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6YkdGMFpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGSjBMbTFoYTJWVWNtRnVjMnhoZEdsdmJpaGxMQ0IwTENCdUtTd2dkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9VblFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJOaGJHVW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlNkQzV0WVd0bFUyTmhiR1VvWlN3Z2RDd2diaWtzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0ZKMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeHZiMnRCZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFNXZMbXh2YjJ0QmRDaGxLU3dnVG04dWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0U1dkxtMWhkSEpwZUNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCalpXNTBaWElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl0Y0hWMFpVSnZkVzVrYVc1blFtOTRLQ2tzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2d1WjJWMFEyVnVkR1Z5S0dOcEtTNXVaV2RoZEdVb0tTd2dkR2hwY3k1MGNtRnVjMnhoZEdVb1kya3VlQ3dnWTJrdWVTd2dZMmt1ZWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VUc5cGJuUnpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQmxMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1pWdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDNXdkWE5vS0hJdWVDd2djaTU1TENCeUxub2dmSHdnTUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2RDd2dNeWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVUp2ZFc1a2FXNW5RbTk0S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WW05MWJtUnBibWRDYjNnZ1BUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dQU0J1WlhjZ1RIUXBPd29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQjBJRDBnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSmlZZ1pTNXBjMGRNUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSjFSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtTnZiWEIxZEdWQ2IzVnVaR2x1WjBKdmVDZ3BPaUJIVEVKMVptWmxja0YwZEhKcFluVjBaU0J5WlhGMWFYSmxjeUJoSUcxaGJuVmhiQ0JpYjNWdVpHbHVaeUJpYjNndUlFRnNkR1Z5Ym1GMGFYWmxiSGtnYzJWMElDSnRaWE5vTG1aeWRYTjBkVzFEZFd4c1pXUWlJSFJ2SUNKbVlXeHpaU0l1Snl3Z2RHaHBjeWtzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2d1YzJWMEtHNWxkeUJOS0MweElDOGdNQ3dnTFRFZ0x5QXdMQ0F0TVNBdklEQXBMQ0J1WlhjZ1RTZ3hJQzhnTUN3Z01TQXZJREFzSURFZ0x5QXdLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVpYjNWdVpHbHVaMEp2ZUM1elpYUkdjbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR1VwTENCMEtTQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0IwVzI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ZIUXVjMlYwUm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoeUtTd2dkR2hwY3k1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpTQS9JQ2hvZEM1aFpHUldaV04wYjNKektIUm9hWE11WW05MWJtUnBibWRDYjNndWJXbHVMQ0JVZEM1dGFXNHBMQ0IwYUdsekxtSnZkVzVrYVc1blFtOTRMbVY0Y0dGdVpFSjVVRzlwYm5Rb2FIUXBMQ0JvZEM1aFpHUldaV04wYjNKektIUm9hWE11WW05MWJtUnBibWRDYjNndWJXRjRMQ0JVZEM1dFlYZ3BMQ0IwYUdsekxtSnZkVzVrYVc1blFtOTRMbVY0Y0dGdVpFSjVVRzlwYm5Rb2FIUXBLU0E2SUNoMGFHbHpMbUp2ZFc1a2FXNW5RbTk0TG1WNGNHRnVaRUo1VUc5cGJuUW9WSFF1YldsdUtTd2dkR2hwY3k1aWIzVnVaR2x1WjBKdmVDNWxlSEJoYm1SQ2VWQnZhVzUwS0ZSMExtMWhlQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIUm9hWE11WW05MWJtUnBibWRDYjNndWJXRnJaVVZ0Y0hSNUtDazdDaUFnSUNBZ0lDQWdLR2x6VG1GT0tIUm9hWE11WW05MWJtUnBibWRDYjNndWJXbHVMbmdwSUh4OElHbHpUbUZPS0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxua3BJSHg4SUdselRtRk9LSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TG5vcEtTQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDZFVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllUzVqYjIxd2RYUmxRbTkxYm1ScGJtZENiM2dvS1RvZ1EyOXRjSFYwWldRZ2JXbHVMMjFoZUNCb1lYWmxJRTVoVGlCMllXeDFaWE11SUZSb1pTQWljRzl6YVhScGIyNGlJR0YwZEhKcFluVjBaU0JwY3lCc2FXdGxiSGtnZEc4Z2FHRjJaU0JPWVU0Z2RtRnNkV1Z6TGljc0lIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVVnUFNCdVpYY2dRVzRwT3dvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0IwSUQwZ2RHaHBjeTV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0ppWWdaUzVwYzBkTVFuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0oxUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncE9pQkhURUoxWm1abGNrRjBkSEpwWW5WMFpTQnlaWEYxYVhKbGN5QmhJRzFoYm5WaGJDQmliM1Z1WkdsdVp5QnpjR2hsY21VdUlFRnNkR1Z5Ym1GMGFYWmxiSGtnYzJWMElDSnRaWE5vTG1aeWRYTjBkVzFEZFd4c1pXUWlJSFJ2SUNKbVlXeHpaU0l1Snl3Z2RHaHBjeWtzSUhSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VdWMyVjBLRzVsZHlCTkxDQXhJQzhnTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsTG1ObGJuUmxjanNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRlIwTG5ObGRFWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU2tzSUhRcElHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQjBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJiY2wwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa2FTNXpaWFJHY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dFcExDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabElEOGdLR2gwTG1Ga1pGWmxZM1J2Y25Nb1ZIUXViV2x1TENBa2FTNXRhVzRwTENCVWRDNWxlSEJoYm1SQ2VWQnZhVzUwS0doMEtTd2dhSFF1WVdSa1ZtVmpkRzl5Y3loVWRDNXRZWGdzSUNScExtMWhlQ2tzSUZSMExtVjRjR0Z1WkVKNVVHOXBiblFvYUhRcEtTQTZJQ2hVZEM1bGVIQmhibVJDZVZCdmFXNTBLQ1JwTG0xcGJpa3NJRlIwTG1WNGNHRnVaRUo1VUc5cGJuUW9KR2t1YldGNEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdWSFF1WjJWMFEyVnVkR1Z5S0c0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJREE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NqRWdQU0F3TENCdk1TQTlJR1V1WTI5MWJuUTdJSEl4SUR3Z2J6RTdJSEl4S3lzcGFIUXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCeU1Ta3NJR2tnUFNCTllYUm9MbTFoZUNocExDQnVMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLR2gwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMEtTQm1iM0lvYkdWMElISXlJRDBnTUN3Z2J6SWdQU0IwTG14bGJtZDBhRHNnY2pJZ1BDQnZNanNnY2pJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVRFZ1BTQjBXM0l5WFN3Z2JDQTlJSFJvYVhNdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3TENCb0lEMGdZVEV1WTI5MWJuUTdJR01nUENCb095QmpLeXNwYUhRdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGhNU3dnWXlrc0lHd2dKaVlnS0dOcExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnWXlrc0lHaDBMbUZrWkNoamFTa3BMQ0JwSUQwZ1RXRjBhQzV0WVhnb2FTd2diaTVrYVhOMFlXNWpaVlJ2VTNGMVlYSmxaQ2hvZENrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVXVjbUZrYVhWeklEMGdUV0YwYUM1emNYSjBLR2twTENCcGMwNWhUaWgwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsTG5KaFpHbDFjeWtnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWduVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rdVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2s2SUVOdmJYQjFkR1ZrSUhKaFpHbDFjeUJwY3lCT1lVNHVJRlJvWlNBaWNHOXphWFJwYjI0aUlHRjBkSEpwWW5WMFpTQnBjeUJzYVd0bGJIa2dkRzhnYUdGMlpTQk9ZVTRnZG1Gc2RXVnpMaWNzSUhSb2FYTXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOdmJYQjFkR1ZVWVc1blpXNTBjeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVhVzVrWlhnc0lIUWdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdhV1lnS0dVZ1BUMDlJRzUxYkd3Z2ZId2dkQzV3YjNOcGRHbHZiaUE5UFQwZ2RtOXBaQ0F3SUh4OElIUXVibTl5YldGc0lEMDlQU0IyYjJsa0lEQWdmSHdnZEM1MWRpQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNU9pQXVZMjl0Y0hWMFpWUmhibWRsYm5SektDa2dabUZwYkdWa0xpQk5hWE56YVc1bklISmxjWFZwY21Wa0lHRjBkSEpwWW5WMFpYTWdLR2x1WkdWNExDQndiM05wZEdsdmJpd2dibTl5YldGc0lHOXlJSFYyS1NJcE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVoY25KaGVTd2dhU0E5SUhRdWNHOXphWFJwYjI0dVlYSnlZWGtzSUhJZ1BTQjBMbTV2Y20xaGJDNWhjbkpoZVN3Z2J5QTlJSFF1ZFhZdVlYSnlZWGtzSUdFZ1BTQnBMbXhsYm1kMGFDQXZJRE03Q2lBZ0lDQWdJQ0FnZEM1MFlXNW5aVzUwSUQwOVBTQjJiMmxrSURBZ0ppWWdkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblJoYm1kbGJuUWlMQ0J1WlhjZ1ZXVW9ibVYzSUVac2IyRjBNekpCY25KaGVTZzBJQ29nWVNrc0lEUXBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFF1ZEdGdVoyVnVkQzVoY25KaGVTd2dZeUE5SUZ0ZExDQm9JRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQ0lEMGdNRHNnUWlBOElHRTdJRUlyS3lsalcwSmRJRDBnYm1WM0lFMHNJR2hiUWwwZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUc1bGR5Qk5MQ0JrSUQwZ2JtVjNJRTBzSUdZZ1BTQnVaWGNnVFN3Z2JTQTlJRzVsZHlCWUxDQjRJRDBnYm1WM0lGZ3NJSFlnUFNCdVpYY2dXQ3dnWnlBOUlHNWxkeUJOTENCd0lEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1h5aENMQ0JRTENCM0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhVdVpuSnZiVUZ5Y21GNUtHa3NJRUlnS2lBektTd2daQzVtY205dFFYSnlZWGtvYVN3Z1VDQXFJRE1wTENCbUxtWnliMjFCY25KaGVTaHBMQ0IzSUNvZ015a3NJRzB1Wm5KdmJVRnljbUY1S0c4c0lFSWdLaUF5S1N3Z2VDNW1jbTl0UVhKeVlYa29ieXdnVUNBcUlESXBMQ0IyTG1aeWIyMUJjbkpoZVNodkxDQjNJQ29nTWlrc0lHUXVjM1ZpS0hVcExDQm1Mbk4xWWloMUtTd2dlQzV6ZFdJb2JTa3NJSFl1YzNWaUtHMHBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SURFZ0x5QW9lQzU0SUNvZ2RpNTVJQzBnZGk1NElDb2dlQzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJV2x6Um1sdWFYUmxLRVVwSUh4OElDaG5MbU52Y0hrb1pDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2RpNTVLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9aaXdnTFhndWVTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1JTa3NJSEF1WTI5d2VTaG1LUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaDRMbmdwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhrTENBdGRpNTRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZLU3dnWTF0Q1hTNWhaR1FvWnlrc0lHTmJVRjB1WVdSa0tHY3BMQ0JqVzNkZExtRmtaQ2huS1N3Z2FGdENYUzVoWkdRb2NDa3NJR2hiVUYwdVlXUmtLSEFwTENCb1czZGRMbUZrWkNod0tTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCNUlEMGdkR2hwY3k1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnZVM1c1pXNW5kR2dnUFQwOUlEQWdKaVlnS0hrZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5MWJuUTZJRzR1YkdWdVozUm9DaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCZEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFSXhJRDBnTUN3Z1VDQTlJSGt1YkdWdVozUm9PeUJDTVNBOElGQTdJQ3NyUWpFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2R5QTlJSGxiUWpGZExDQkZJRDBnZHk1emRHRnlkQ3dnUkNBOUlIY3VZMjkxYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdWU0E5SUVVc0lFWWdQU0JGSUNzZ1JEc2dWU0E4SUVZN0lGVWdLejBnTXlsZktHNWJWU0FySURCZExDQnVXMVVnS3lBeFhTd2dibHRWSUNzZ01sMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1lpQTlJRzVsZHlCTkxDQkJJRDBnYm1WM0lFMHNJRXdnUFNCdVpYY2dUU3dnU1NBOUlHNWxkeUJOT3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdzb1Fpa2dld29nSUNBZ0lDQWdJQ0FnSUNCTUxtWnliMjFCY25KaGVTaHlMQ0JDSUNvZ015a3NJRWt1WTI5d2VTaE1LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCalcwSmRPd29nSUNBZ0lDQWdJQ0FnSUNCaUxtTnZjSGtvVUNrc0lHSXVjM1ZpS0V3dWJYVnNkR2x3YkhsVFkyRnNZWElvVEM1a2IzUW9VQ2twS1M1dWIzSnRZV3hwZW1Vb0tTd2dRUzVqY205emMxWmxZM1J2Y25Nb1NTd2dVQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ1FTNWtiM1FvYUZ0Q1hTa2dQQ0F3SUQ4Z0xURWdPaUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNXMElnS2lBMFhTQTlJR0l1ZUN3Z2JGdENJQ29nTkNBcklERmRJRDBnWWk1NUxDQnNXMElnS2lBMElDc2dNbDBnUFNCaUxub3NJR3hiUWlBcUlEUWdLeUF6WFNBOUlFVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdRaklnUFNBd0xDQlFNU0E5SUhrdWJHVnVaM1JvT3lCQ01pQThJRkF4T3lBckswSXlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGN4SUQwZ2VWdENNbDBzSUVVeElEMGdkekV1YzNSaGNuUXNJRVF4SUQwZ2R6RXVZMjkxYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdWVEVnUFNCRk1Td2dSakVnUFNCRk1TQXJJRVF4T3lCVk1TQThJRVl4T3lCVk1TQXJQU0F6S1dzb2JsdFZNU0FySURCZEtTd2dheWh1VzFVeElDc2dNVjBwTENCcktHNWJWVEVnS3lBeVhTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWTI5dGNIVjBaVlpsY25SbGVFNXZjbTFoYkhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1sdVpHVjRMQ0IwSUQwZ2RHaHBjeTVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpazdDaUFnSUNBZ0lDQWdhV1lnS0hRZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaMlYwUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c0Z1BUMDlJSFp2YVdRZ01Da2diaUE5SUc1bGR5QlZaU2h1WlhjZ1JteHZZWFF6TWtGeWNtRjVLSFF1WTI5MWJuUWdLaUF6S1N3Z015a3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLQ0p1YjNKdFlXd2lMQ0J1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCbWIzSW9iR1YwSUdRZ1BTQXdMQ0JtSUQwZ2JpNWpiM1Z1ZERzZ1pDQThJR1k3SUdRckt5bHVMbk5sZEZoWldpaGtMQ0F3TENBd0xDQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dUU3dnY2lBOUlHNWxkeUJOTENCdklEMGdibVYzSUUwc0lHRWdQU0J1WlhjZ1RTd2diQ0E5SUc1bGR5Qk5MQ0JqSUQwZ2JtVjNJRTBzSUdnZ1BTQnVaWGNnVFN3Z2RTQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pTa2dabTl5S0d4bGRDQmtNU0E5SURBc0lHWXhJRDBnWlM1amIzVnVkRHNnWkRFZ1BDQm1NVHNnWkRFZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JTQTlJR1V1WjJWMFdDaGtNU0FySURBcExDQjRJRDBnWlM1blpYUllLR1F4SUNzZ01Ta3NJSFlnUFNCbExtZGxkRmdvWkRFZ0t5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMExDQnRLU3dnY2k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUXNJSGdwTENCdkxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnZGlrc0lHZ3VjM1ZpVm1WamRHOXljeWh2TENCeUtTd2dkUzV6ZFdKV1pXTjBiM0p6S0drc0lISXBMQ0JvTG1OeWIzTnpLSFVwTENCaExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9iaXdnYlNrc0lHd3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h1TENCNEtTd2dZeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0c0c0lIWXBMQ0JoTG1Ga1pDaG9LU3dnYkM1aFpHUW9hQ2tzSUdNdVlXUmtLR2dwTENCdUxuTmxkRmhaV2lodExDQmhMbmdzSUdFdWVTd2dZUzU2S1N3Z2JpNXpaWFJZV1Zvb2VDd2diQzU0TENCc0xua3NJR3d1ZWlrc0lHNHVjMlYwV0ZsYUtIWXNJR011ZUN3Z1l5NTVMQ0JqTG5vcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnWm05eUtHeGxkQ0JrTWlBOUlEQXNJR1l5SUQwZ2RDNWpiM1Z1ZERzZ1pESWdQQ0JtTWpzZ1pESWdLejBnTXlscExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnWkRJZ0t5QXdLU3dnY2k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUXNJR1F5SUNzZ01Ta3NJRzh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMExDQmtNaUFySURJcExDQm9Mbk4xWWxabFkzUnZjbk1vYnl3Z2Npa3NJSFV1YzNWaVZtVmpkRzl5Y3locExDQnlLU3dnYUM1amNtOXpjeWgxS1N3Z2JpNXpaWFJZV1Zvb1pESWdLeUF3TENCb0xuZ3NJR2d1ZVN3Z2FDNTZLU3dnYmk1elpYUllXVm9vWkRJZ0t5QXhMQ0JvTG5nc0lHZ3VlU3dnYUM1NktTd2diaTV6WlhSWVdWb29aRElnS3lBeUxDQm9MbmdzSUdndWVTd2dhQzU2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dWIzSnRZV3hwZW1WT2IzSnRZV3h6S0Nrc0lHNHVibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J0WlhKblpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLQ0VvWlNBbUppQmxMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtMWxjbWRsS0NrNklHZGxiMjFsZEhKNUlHNXZkQ0JoYmlCcGJuTjBZVzVqWlNCdlppQlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllUzRpTENCbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFFnUFNBd0xDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxtMWxjbWRsS0NrNklFOTJaWEozY21sMGFXNW5JRzl5YVdkcGJtRnNJR2RsYjIxbGRISjVMQ0J6ZEdGeWRHbHVaeUJoZENCdlptWnpaWFE5TUM0Z1ZYTmxJRUoxWm1abGNrZGxiMjFsZEhKNVZYUnBiSE11YldWeVoyVkNkV1ptWlhKSFpXOXRaWFJ5YVdWektDa2dabTl5SUd4dmMzTnNaWE56SUcxbGNtZGxMaUlwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVZWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnYVc0Z2JpbDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxMbUYwZEhKcFluVjBaWE5iYVYwZ1BUMDlJSFp2YVdRZ01Da2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYmx0cFhTNWhjbkpoZVN3Z1lTQTlJR1V1WVhSMGNtbGlkWFJsYzF0cFhTd2diQ0E5SUdFdVlYSnlZWGtzSUdNZ1BTQmhMbWwwWlcxVGFYcGxJQ29nZEN3Z2FDQTlJRTFoZEdndWJXbHVLR3d1YkdWdVozUm9MQ0J2TG14bGJtZDBhQ0F0SUdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnWXpzZ2RTQThJR2c3SUhVckt5d2daQ3NyS1c5YlpGMGdQU0JzVzNWZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUc1dmNtMWhiR2w2WlU1dmNtMWhiSE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbUYwZEhKcFluVjBaWE11Ym05eWJXRnNPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0JsTG1OdmRXNTBPeUIwSUR3Z2Jqc2dkQ3NyS1doMExtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9aU3dnZENrc0lHaDBMbTV2Y20xaGJHbDZaU2dwTENCbExuTmxkRmhaV2loMExDQm9kQzU0TENCb2RDNTVMQ0JvZEM1NktUc0tJQ0FnSUgwS0lDQWdJSFJ2VG05dVNXNWtaWGhsWkNncElIc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQmxLR0VzSUd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JoTG1GeWNtRjVMQ0JvSUQwZ1lTNXBkR1Z0VTJsNlpTd2dkU0E5SUdFdWJtOXliV0ZzYVhwbFpDd2daQ0E5SUc1bGR5QmpMbU52Ym5OMGNuVmpkRzl5S0d3dWJHVnVaM1JvSUNvZ2FDa3NJR1lnUFNBd0xDQnRJRDBnTURzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjRJRDBnTUN3Z2RpQTlJR3d1YkdWdVozUm9PeUI0SUR3Z2Rqc2dlQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFdWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQS9JR1lnUFNCc1czaGRJQ29nWVM1a1lYUmhMbk4wY21sa1pTQXJJR0V1YjJabWMyVjBJRG9nWmlBOUlHeGJlRjBnS2lCb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNRHNnWnlBOElHZzdJR2NyS3lsa1cyMHJLMTBnUFNCalcyWXJLMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCVlpTaGtMQ0JvTENCMUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhVzVrWlhnZ1BUMDlJRzUxYkd3cElISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG5SdlRtOXVTVzVrWlhobFpDZ3BPaUJDZFdabVpYSkhaVzl0WlhSeWVTQnBjeUJoYkhKbFlXUjVJRzV2YmkxcGJtUmxlR1ZrTGlJcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYm1WM0lGOWxMQ0J1SUQwZ2RHaHBjeTVwYm1SbGVDNWhjbkpoZVN3Z2FTQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdhVzRnYVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdhVnRoWFN3Z1l5QTlJR1VvYkN3Z2JpazdDaUFnSUNBZ0lDQWdJQ0FnSUhRdWMyVjBRWFIwY21saWRYUmxLR0VzSUdNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZVEVnYVc0Z2NpbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNNU0E5SUZ0ZExDQmpNU0E5SUhKYllURmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdnZ1BTQXdMQ0IxSUQwZ1l6RXViR1Z1WjNSb095Qm9JRHdnZFRzZ2FDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdZekZiYUYwc0lHWWdQU0JsS0dRc0lHNHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiREV1Y0hWemFDaG1LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IwTG0xdmNuQm9RWFIwY21saWRYUmxjMXRoTVYwZ1BTQnNNVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1dGIzSndhRlJoY21kbGRITlNaV3hoZEdsMlpTQTlJSFJvYVhNdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVTdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TG1keWIzVndjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0V5SUQwZ01Dd2diRElnUFNCdkxteGxibWQwYURzZ1lUSWdQQ0JzTWpzZ1lUSXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqTWlBOUlHOWJZVEpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbUZrWkVkeWIzVndLR015TG5OMFlYSjBMQ0JqTWk1amIzVnVkQ3dnWXpJdWJXRjBaWEpwWVd4SmJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J0WlhSaFpHRjBZVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWMybHZiam9nTkM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSWtKMVptWmxja2RsYjIxbGRISjVJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUnZjam9nSWtKMVptWmxja2RsYjIxbGRISjVMblJ2U2xOUFRpSUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1ZFhWcFpDQTlJSFJvYVhNdWRYVnBaQ3dnWlM1MGVYQmxJRDBnZEdocGN5NTBlWEJsTENCMGFHbHpMbTVoYldVZ0lUMDlJQ0lpSUNZbUlDaGxMbTVoYldVZ1BTQjBhR2x6TG01aGJXVXBMQ0JQWW1wbFkzUXVhMlY1Y3loMGFHbHpMblZ6WlhKRVlYUmhLUzVzWlc1bmRHZ2dQaUF3SUNZbUlDaGxMblZ6WlhKRVlYUmhJRDBnZEdocGN5NTFjMlZ5UkdGMFlTa3NJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RHaHBjeTV3WVhKaGJXVjBaWEp6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdhVzRnYkNsc1cyTmRJQ0U5UFNCMmIybGtJREFnSmlZZ0tHVmJZMTBnUFNCc1cyTmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHVXVaR0YwWVNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNtbGlkWFJsY3pvZ2UzMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1cGJtUmxlRHNLSUNBZ0lDQWdJQ0IwSUNFOVBTQnVkV3hzSUNZbUlDaGxMbVJoZEdFdWFXNWtaWGdnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUXVZWEp5WVhrdVkyOXVjM1J5ZFdOMGIzSXVibUZ0WlN3S0lDQWdJQ0FnSUNBZ0lDQWdZWEp5WVhrNklFRnljbUY1TG5CeWIzUnZkSGx3WlM1emJHbGpaUzVqWVd4c0tIUXVZWEp5WVhrcENpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc01TQnBiaUJ1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNeElEMGdibHRzTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1WkdGMFlTNWhkSFJ5YVdKMWRHVnpXMnd4WFNBOUlHTXhMblJ2U2xOUFRpaGxMbVJoZEdFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIdDlMQ0J5SUQwZ0lURTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNNaUJwYmlCMGFHbHpMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpNaUE5SUhSb2FYTXViVzl5Y0doQmRIUnlhV0oxZEdWelcyd3lYU3dnYUNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdMQ0JrSUQwZ1l6SXViR1Z1WjNSb095QjFJRHdnWkRzZ2RTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdZekpiZFYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb0xuQjFjMmdvWmk1MGIwcFRUMDRvWlM1a1lYUmhLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYUM1c1pXNW5kR2dnUGlBd0lDWW1JQ2hwVzJ3eVhTQTlJR2dzSUhJZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhJZ0ppWWdLR1V1WkdGMFlTNXRiM0p3YUVGMGRISnBZblYwWlhNZ1BTQnBMQ0JsTG1SaGRHRXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVnUFNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVaM0p2ZFhCek93b2dJQ0FnSUNBZ0lHOHViR1Z1WjNSb0lENGdNQ0FtSmlBb1pTNWtZWFJoTG1keWIzVndjeUE5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvYnlrcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdJVDA5SUc1MWJHd2dKaVlnS0dVdVpHRjBZUzVpYjNWdVpHbHVaMU53YUdWeVpTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyVnVkR1Z5T2lCaExtTmxiblJsY2k1MGIwRnljbUY1S0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2dZUzV5WVdScGRYTUtJQ0FnSUNBZ0lDQjlLU3dnWlRzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWx1WkdWNElEMGdiblZzYkN3Z2RHaHBjeTVoZEhSeWFXSjFkR1Z6SUQwZ2UzMHNJSFJvYVhNdWJXOXljR2hCZEhSeWFXSjFkR1Z6SUQwZ2UzMHNJSFJvYVhNdVozSnZkWEJ6SUQwZ1cxMHNJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dQU0J1ZFd4c0xDQjBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIdDlPd29nSUNBZ0lDQWdJSFJvYVhNdWJtRnRaU0E5SUdVdWJtRnRaVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1YVc1a1pYZzdDaUFnSUNBZ0lDQWdiaUFoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbk5sZEVsdVpHVjRLRzR1WTJ4dmJtVW9kQ2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1aGRIUnlhV0oxZEdWek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QnBiaUJwS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQnBXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTaGpMQ0JvTG1Oc2IyNWxLSFFwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbExtMXZjbkJvUVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNeElHbHVJSElwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYURFZ1BTQmJYU3dnZFNBOUlISmJZekZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHUWdQU0F3TENCbUlEMGdkUzVzWlc1bmRHZzdJR1FnUENCbU95QmtLeXNwYURFdWNIVnphQ2gxVzJSZExtTnNiMjVsS0hRcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhOYll6RmRJRDBnYURFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VZ1BTQmxMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlM1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqTWlBOUlEQXNJR2d5SUQwZ2J5NXNaVzVuZEdnN0lHTXlJRHdnYURJN0lHTXlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFRFZ1BTQnZXMk15WFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1aFpHUkhjbTkxY0NoMU1TNXpkR0Z5ZEN3Z2RURXVZMjkxYm5Rc0lIVXhMbTFoZEdWeWFXRnNTVzVrWlhncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHVXVZbTkxYm1ScGJtZENiM2c3Q2lBZ0lDQWdJQ0FnWVNBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDQTlJR0V1WTJ4dmJtVW9LU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JsTG1KdmRXNWthVzVuVTNCb1pYSmxPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnNJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMGdiQzVqYkc5dVpTZ3BLU3dnZEdocGN5NWtjbUYzVW1GdVoyVXVjM1JoY25RZ1BTQmxMbVJ5WVhkU1lXNW5aUzV6ZEdGeWRDd2dkR2hwY3k1a2NtRjNVbUZ1WjJVdVkyOTFiblFnUFNCbExtUnlZWGRTWVc1blpTNWpiM1Z1ZEN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUdVdWRYTmxja1JoZEdFc0lHVXVjR0Z5WVcxbGRHVnljeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMbkJoY21GdFpYUmxjbk1wS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbVJwYzNCdmMyVWlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDbjA3Q2w5bExuQnliM1J2ZEhsd1pTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUlEMGdJVEE3Q25aaGNpQkRiQ0E5SUc1bGR5QndaU3dnYUdrZ1BTQnVaWGNnUTI0c0lFSnZJRDBnYm1WM0lFRnVMQ0J0YmlBOUlHNWxkeUJOTENCbmJpQTlJRzVsZHlCTkxDQjRiaUE5SUc1bGR5Qk5MQ0I2YnlBOUlHNWxkeUJOTENCVmJ5QTlJRzVsZHlCTkxDQlBieUE5SUc1bGR5Qk5MQ0JMY2lBOUlHNWxkeUJOTENCbGN5QTlJRzVsZHlCTkxDQjBjeUE5SUc1bGR5Qk5MQ0J1Y3lBOUlHNWxkeUJZTENCcGN5QTlJRzVsZHlCWUxDQnljeUE5SUc1bGR5QllMQ0JJYnlBOUlHNWxkeUJOTENCemN5QTlJRzVsZHlCTkxDQnpkQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJmWlN3Z2RDQTlJRzVsZHlCb2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFDSXNJSFJvYVhNdVoyVnZiV1YwY25rZ1BTQmxMQ0IwYUdsekxtMWhkR1Z5YVdGc0lEMGdkQ3dnZEdocGN5NTFjR1JoZEdWTmIzSndhRlJoY21kbGRITW9LVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQmxMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeUE5SUdVdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpMbk5zYVdObEtDa3BMQ0JsTG0xdmNuQm9WR0Z5WjJWMFJHbGpkR2x2Ym1GeWVTQWhQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVNBOUlFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1S1Nrc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCbExtMWhkR1Z5YVdGc0xDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1pTNW5aVzl0WlhSeWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVnZiV1YwY25rN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1YVhOQ2RXWm1aWEpIWlc5dFpYUnllU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXViVzl5Y0doQmRIUnlhV0oxZEdWekxDQnVJRDBnVDJKcVpXTjBMbXRsZVhNb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVMbXhsYm1kMGFDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEZ0dVd6QmRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3lBOUlGdGRMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllU0E5SUh0OU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0JwTG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYVZ0eVhTNXVZVzFsSUh4OElGTjBjbWx1WnloeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNdWNIVnphQ2d3S1N3Z2RHaHBjeTV0YjNKd2FGUmhjbWRsZEVScFkzUnBiMjVoY25sYllWMGdQU0J5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwTVNBOUlHVXViVzl5Y0doVVlYSm5aWFJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQjBNU0FoUFQwZ2RtOXBaQ0F3SUNZbUlIUXhMbXhsYm1kMGFDQStJREFnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV1Z6YUM1MWNHUmhkR1ZOYjNKd2FGUmhjbWRsZEhNb0tTQnVieUJzYjI1blpYSWdjM1Z3Y0c5eWRITWdWRWhTUlVVdVIyVnZiV1YwY25rdUlGVnpaU0JVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSEpoZVdOaGMzUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnYVNBOUlIUm9hWE11YldGMFpYSnBZV3dzSUhJZ1BTQjBhR2x6TG0xaGRISnBlRmR2Y214a093b2dJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQjJiMmxrSURBZ2ZId2dLRzR1WW05MWJtUnBibWRUY0dobGNtVWdQVDA5SUc1MWJHd2dKaVlnYmk1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LU3dnUW04dVkyOXdlU2h1TG1KdmRXNWthVzVuVTNCb1pYSmxLU3dnUW04dVlYQndiSGxOWVhSeWFYZzBLSElwTENCbExuSmhlUzVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLRUp2S1NBOVBUMGdJVEVwSUh4OElDaERiQzVqYjNCNUtISXBMbWx1ZG1WeWRDZ3BMQ0JvYVM1amIzQjVLR1V1Y21GNUtTNWhjSEJzZVUxaGRISnBlRFFvUTJ3cExDQnVMbUp2ZFc1a2FXNW5RbTk0SUNFOVBTQnVkV3hzSUNZbUlHaHBMbWx1ZEdWeWMyVmpkSE5DYjNnb2JpNWliM1Z1WkdsdVowSnZlQ2tnUFQwOUlDRXhLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCdk93b2dJQ0FnSUNBZ0lHbG1JQ2h1TG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVMbWx1WkdWNExDQnNJRDBnYmk1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQmpJRDBnYmk1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRzSUdnZ1BTQnVMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsTENCMUlEMGdiaTVoZEhSeWFXSjFkR1Z6TG5WMkxDQmtJRDBnYmk1aGRIUnlhV0oxZEdWekxuVjJNaXdnWmlBOUlHNHVaM0p2ZFhCekxDQnRJRDBnYmk1a2NtRjNVbUZ1WjJVN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaElDRTlQU0J1ZFd4c0tTQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHBLU2tnWm05eUtHeGxkQ0I0SUQwZ01Dd2dkaUE5SUdZdWJHVnVaM1JvT3lCNElEd2dkanNnZUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ1psdDRYU3dnY0NBOUlHbGJaeTV0WVhSbGNtbGhiRWx1WkdWNFhTd2dYeUE5SUUxaGRHZ3ViV0Y0S0djdWMzUmhjblFzSUcwdWMzUmhjblFwTENCNUlEMGdUV0YwYUM1dGFXNG9ZUzVqYjNWdWRDd2dUV0YwYUM1dGFXNG9aeTV6ZEdGeWRDQXJJR2N1WTI5MWJuUXNJRzB1YzNSaGNuUWdLeUJ0TG1OdmRXNTBLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0lnUFNCZkxDQkJJRDBnZVRzZ1lpQThJRUU3SUdJZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRXdnUFNCaExtZGxkRmdvWWlrc0lFa2dQU0JoTG1kbGRGZ29ZaUFySURFcExDQnJJRDBnWVM1blpYUllLR0lnS3lBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2IzTW9kR2hwY3l3Z2NDd2daU3dnYUdrc0lHd3NJR01zSUdnc0lIVXNJR1FzSUV3c0lFa3NJR3NwTENCdklDWW1JQ2h2TG1aaFkyVkpibVJsZUNBOUlFMWhkR2d1Wm14dmIzSW9ZaUF2SURNcExDQnZMbVpoWTJVdWJXRjBaWEpwWVd4SmJtUmxlQ0E5SUdjdWJXRjBaWEpwWVd4SmJtUmxlQ3dnZEM1d2RYTm9LRzhwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNE1TQTlJRTFoZEdndWJXRjRLREFzSUcwdWMzUmhjblFwTENCMk1TQTlJRTFoZEdndWJXbHVLR0V1WTI5MWJuUXNJRzB1YzNSaGNuUWdLeUJ0TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaekVnUFNCNE1Td2djREVnUFNCMk1Uc2daekVnUENCd01Uc2daekVnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOHhJRDBnWVM1blpYUllLR2N4S1N3Z2VURWdQU0JoTG1kbGRGZ29aekVnS3lBeEtTd2dZakVnUFNCaExtZGxkRmdvWnpFZ0t5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdiM01vZEdocGN5d2dhU3dnWlN3Z2FHa3NJR3dzSUdNc0lHZ3NJSFVzSUdRc0lGOHhMQ0I1TVN3Z1lqRXBMQ0J2SUNZbUlDaHZMbVpoWTJWSmJtUmxlQ0E5SUUxaGRHZ3VabXh2YjNJb1p6RWdMeUF6S1N3Z2RDNXdkWE5vS0c4cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaHNJQ0U5UFNCMmIybGtJREFwSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0drcEtTQm1iM0lvYkdWMElIZ3lJRDBnTUN3Z2RqSWdQU0JtTG14bGJtZDBhRHNnZURJZ1BDQjJNanNnZURJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnpJZ1BTQm1XM2d5WFN3Z2NESWdQU0JwVzJjeUxtMWhkR1Z5YVdGc1NXNWtaWGhkTENCZk1pQTlJRTFoZEdndWJXRjRLR2N5TG5OMFlYSjBMQ0J0TG5OMFlYSjBLU3dnZVRJZ1BTQk5ZWFJvTG0xcGJpaHNMbU52ZFc1MExDQk5ZWFJvTG0xcGJpaG5NaTV6ZEdGeWRDQXJJR2N5TG1OdmRXNTBMQ0J0TG5OMFlYSjBJQ3NnYlM1amIzVnVkQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JpTWlBOUlGOHlMQ0JCTVNBOUlIa3lPeUJpTWlBOElFRXhPeUJpTWlBclBTQXpLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUREVnUFNCaU1pd2dTVEVnUFNCaU1pQXJJREVzSUdzeElEMGdZaklnS3lBeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdmN5aDBhR2x6TENCd01pd2daU3dnYUdrc0lHd3NJR01zSUdnc0lIVXNJR1FzSUV3eExDQkpNU3dnYXpFcExDQnZJQ1ltSUNodkxtWmhZMlZKYm1SbGVDQTlJRTFoZEdndVpteHZiM0lvWWpJZ0x5QXpLU3dnYnk1bVlXTmxMbTFoZEdWeWFXRnNTVzVrWlhnZ1BTQm5NaTV0WVhSbGNtbGhiRWx1WkdWNExDQjBMbkIxYzJnb2J5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGd6SUQwZ1RXRjBhQzV0WVhnb01Dd2diUzV6ZEdGeWRDa3NJSFl6SUQwZ1RXRjBhQzV0YVc0b2JDNWpiM1Z1ZEN3Z2JTNXpkR0Z5ZENBcklHMHVZMjkxYm5RcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbk15QTlJSGd6TENCd015QTlJSFl6T3lCbk15QThJSEF6T3lCbk15QXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHpNZ1BTQm5NeXdnZVRNZ1BTQm5NeUFySURFc0lHSXpJRDBnWnpNZ0t5QXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnZjeWgwYUdsekxDQnBMQ0JsTENCb2FTd2diQ3dnWXl3Z2FDd2dkU3dnWkN3Z1h6TXNJSGt6TENCaU15a3NJRzhnSmlZZ0tHOHVabUZqWlVsdVpHVjRJRDBnVFdGMGFDNW1iRzl2Y2lobk15QXZJRE1wTENCMExuQjFjMmdvYnlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRzR1YVhOSFpXOXRaWFJ5ZVNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWlhOb0xuSmhlV05oYzNRb0tTQnVieUJzYjI1blpYSWdjM1Z3Y0c5eWRITWdWRWhTUlVVdVIyVnZiV1YwY25rdUlGVnpaU0JVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnZlFwOU93cHpkQzV3Y205MGIzUjVjR1V1YVhOTlpYTm9JRDBnSVRBN0NtWjFibU4wYVc5dUlHaG1LSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFcElIc0tJQ0FnSUd4bGRDQnNPd29nSUNBZ2FXWWdLR1V1YzJsa1pTQTlQVDBnYVhRZ1B5QnNJRDBnYmk1cGJuUmxjbk5sWTNSVWNtbGhibWRzWlNodkxDQnlMQ0JwTENBaE1Dd2dZU2tnT2lCc0lEMGdiaTVwYm5SbGNuTmxZM1JVY21saGJtZHNaU2hwTENCeUxDQnZMQ0JsTG5OcFpHVWdJVDA5SUVOcExDQmhLU3dnYkNBOVBUMGdiblZzYkNrZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNCemN5NWpiM0I1S0dFcExDQnpjeTVoY0hCc2VVMWhkSEpwZURRb2N5NXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQnNaWFFnWXlBOUlIUXVjbUY1TG05eWFXZHBiaTVrYVhOMFlXNWpaVlJ2S0hOektUc0tJQ0FnSUhKbGRIVnliaUJqSUR3Z2RDNXVaV0Z5SUh4OElHTWdQaUIwTG1aaGNpQS9JRzUxYkd3Z09pQjdDaUFnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJR01zQ2lBZ0lDQWdJQ0FnY0c5cGJuUTZJSE56TG1Oc2IyNWxLQ2tzQ2lBZ0lDQWdJQ0FnYjJKcVpXTjBPaUJ6Q2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUc5ektITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXNJR2dzSUhVcElIc0tJQ0FnSUcxdUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hU3dnWXlrc0lHZHVMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVN3Z2FDa3NJSGh1TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTd2dkU2s3Q2lBZ0lDQnNaWFFnWkNBOUlITXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6T3dvZ0lDQWdhV1lnS0hJZ0ppWWdaQ2tnZXdvZ0lDQWdJQ0FnSUV0eUxuTmxkQ2d3TENBd0xDQXdLU3dnWlhNdWMyVjBLREFzSURBc0lEQXBMQ0IwY3k1elpYUW9NQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnRJRDBnTUN3Z2VDQTlJSEl1YkdWdVozUm9PeUJ0SUR3Z2VEc2diU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQmtXMjFkTENCbklEMGdjbHR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdkaUFoUFQwZ01DQW1KaUFvZW04dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaG5MQ0JqS1N3Z1ZXOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2huTENCb0tTd2dUMjh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobkxDQjFLU3dnYnlBL0lDaExjaTVoWkdSVFkyRnNaV1JXWldOMGIzSW9lbThzSUhZcExDQmxjeTVoWkdSVFkyRnNaV1JXWldOMGIzSW9WVzhzSUhZcExDQjBjeTVoWkdSVFkyRnNaV1JXWldOMGIzSW9UMjhzSUhZcEtTQTZJQ2hMY2k1aFpHUlRZMkZzWldSV1pXTjBiM0lvZW04dWMzVmlLRzF1S1N3Z2Rpa3NJR1Z6TG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhWYnk1emRXSW9aMjRwTENCMktTd2dkSE11WVdSa1UyTmhiR1ZrVm1WamRHOXlLRTl2TG5OMVlpaDRiaWtzSUhZcEtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRzF1TG1Ga1pDaExjaWtzSUdkdUxtRmtaQ2hsY3lrc0lIaHVMbUZrWkNoMGN5azdDaUFnSUNCOUNpQWdJQ0J6TG1selUydHBibTVsWkUxbGMyZ2dKaVlnS0hNdVltOXVaVlJ5WVc1elptOXliU2hqTENCdGJpa3NJSE11WW05dVpWUnlZVzV6Wm05eWJTaG9MQ0JuYmlrc0lITXVZbTl1WlZSeVlXNXpabTl5YlNoMUxDQjRiaWtwT3dvZ0lDQWdiR1YwSUdZZ1BTQm9aaWh6TENCbExDQjBMQ0J1TENCdGJpd2daMjRzSUhodUxDQklieWs3Q2lBZ0lDQnBaaUFvWmlrZ2V3b2dJQ0FnSUNBZ0lHRWdKaVlnS0c1ekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnWXlrc0lHbHpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z2FDa3NJSEp6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dkU2tzSUdZdWRYWWdQU0J1ZEM1blpYUlZWaWhJYnl3Z2JXNHNJR2R1TENCNGJpd2dibk1zSUdsekxDQnljeXdnYm1WM0lGZ3BLU3dnYkNBbUppQW9ibk11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoc0xDQmpLU3dnYVhNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHNMQ0JvS1N3Z2NuTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hzTENCMUtTd2daaTUxZGpJZ1BTQnVkQzVuWlhSVlZpaElieXdnYlc0c0lHZHVMQ0I0Yml3Z2JuTXNJR2x6TENCeWN5d2dibVYzSUZncEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYlRFZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdFNklHTXNDaUFnSUNBZ0lDQWdJQ0FnSUdJNklHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUdNNklIVXNDaUFnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiRG9nYm1WM0lFMHNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzU1c1a1pYZzZJREFLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUc1MExtZGxkRTV2Y20xaGJDaHRiaXdnWjI0c0lIaHVMQ0J0TVM1dWIzSnRZV3dwTENCbUxtWmhZMlVnUFNCdE1Uc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQm1Pd3A5Q25aaGNpQjNiaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBeExDQnVJRDBnTVN3Z2FTQTlJREVzSUhJZ1BTQXhMQ0J2SUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUW05NFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUZObFoyMWxiblJ6T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2djaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hUWldkdFpXNTBjem9nYndvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpPd29nSUNBZ0lDQWdJR2tnUFNCTllYUm9MbVpzYjI5eUtHa3BMQ0J5SUQwZ1RXRjBhQzVtYkc5dmNpaHlLU3dnYnlBOUlFMWhkR2d1Wm14dmIzSW9ieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JiWFN3Z1l5QTlJRnRkTENCb0lEMGdXMTBzSUhVZ1BTQmJYU3dnWkNBOUlEQXNJR1lnUFNBd093b2dJQ0FnSUNBZ0lHMG9Jbm9pTENBaWVTSXNJQ0o0SWl3Z0xURXNJQzB4TENCdUxDQjBMQ0JsTENCdkxDQnlMQ0F3S1N3Z2JTZ2llaUlzSUNKNUlpd2dJbmdpTENBeExDQXRNU3dnYml3Z2RDd2dMV1VzSUc4c0lISXNJREVwTENCdEtDSjRJaXdnSW5vaUxDQWllU0lzSURFc0lERXNJR1VzSUc0c0lIUXNJR2tzSUc4c0lESXBMQ0J0S0NKNElpd2dJbm9pTENBaWVTSXNJREVzSUMweExDQmxMQ0J1TENBdGRDd2dhU3dnYnl3Z015a3NJRzBvSW5naUxDQWllU0lzSUNKNklpd2dNU3dnTFRFc0lHVXNJSFFzSUc0c0lHa3NJSElzSURRcExDQnRLQ0o0SWl3Z0lua2lMQ0FpZWlJc0lDMHhMQ0F0TVN3Z1pTd2dkQ3dnTFc0c0lHa3NJSElzSURVcExDQjBhR2x6TG5ObGRFbHVaR1Y0S0d3cExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9ZeXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtHZ3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLSFVzSURJcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnRLSGdzSUhZc0lHY3NJSEFzSUY4c0lIa3NJR0lzSUVFc0lFd3NJRWtzSUdzcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFSWdQU0I1SUM4Z1RDd2dVQ0E5SUdJZ0x5QkpMQ0IzSUQwZ2VTQXZJRElzSUVVZ1BTQmlJQzhnTWl3Z1JDQTlJRUVnTHlBeUxDQlZJRDBnVENBcklERXNJRVlnUFNCSklDc2dNU3dnVHlBOUlEQXNJRzVsSUQwZ01Dd2dZMlVnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCV0lEMGdNRHNnVmlBOElFWTdJRllyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWeUE5SUZZZ0tpQlFJQzBnUlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUdVZ1BTQXdPeUJvWlNBOElGVTdJR2hsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pTQTlJR2hsSUNvZ1FpQXRJSGM3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyVmJlRjBnUFNCc1pTQXFJSEFzSUdObFczWmRJRDBnVnlBcUlGOHNJR05sVzJkZElEMGdSQ3dnWXk1d2RYTm9LR05sTG5nc0lHTmxMbmtzSUdObExub3BMQ0JqWlZ0NFhTQTlJREFzSUdObFczWmRJRDBnTUN3Z1kyVmJaMTBnUFNCQklENGdNQ0EvSURFZ09pQXRNU3dnYUM1d2RYTm9LR05sTG5nc0lHTmxMbmtzSUdObExub3BMQ0IxTG5CMWMyZ29hR1VnTHlCTUtTd2dkUzV3ZFhOb0tERWdMU0JXSUM4Z1NTa3NJRThnS3owZ01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGWXhJRDBnTURzZ1ZqRWdQQ0JKT3lCV01Tc3JLV1p2Y2loc1pYUWdWekVnUFNBd095QlhNU0E4SUV3N0lGY3hLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHaGxNU0E5SUdRZ0t5QlhNU0FySUZVZ0tpQldNU3dnYkdVeElEMGdaQ0FySUZjeElDc2dWU0FxSUNoV01TQXJJREVwTENCbVpTQTlJR1FnS3lBb1Z6RWdLeUF4S1NBcklGVWdLaUFvVmpFZ0t5QXhLU3dnUW1VZ1BTQmtJQ3NnS0ZjeElDc2dNU2tnS3lCVklDb2dWakU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzTG5CMWMyZ29hR1V4TENCc1pURXNJRUpsS1N3Z2JDNXdkWE5vS0d4bE1Td2dabVVzSUVKbEtTd2dibVVnS3owZ05qc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmhMbUZrWkVkeWIzVndLR1lzSUc1bExDQnJLU3dnWmlBclBTQnVaU3dnWkNBclBTQlBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjNiaWhsTG5kcFpIUm9MQ0JsTG1obGFXZG9kQ3dnWlM1a1pYQjBhQ3dnWlM1M2FXUjBhRk5sWjIxbGJuUnpMQ0JsTG1obGFXZG9kRk5sWjIxbGJuUnpMQ0JsTG1SbGNIUm9VMlZuYldWdWRITXBPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJTYVNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUh0OU93b2dJQ0FnWm05eUtHeGxkQ0IwSUdsdUlITXBld29nSUNBZ0lDQWdJR1ZiZEYwZ1BTQjdmVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnYVc0Z2MxdDBYU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2MxdDBYVnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdhU0FtSmlBb2FTNXBjME52Ykc5eUlIeDhJR2t1YVhOTllYUnlhWGd6SUh4OElHa3VhWE5OWVhSeWFYZzBJSHg4SUdrdWFYTldaV04wYjNJeUlIeDhJR2t1YVhOV1pXTjBiM0l6SUh4OElHa3VhWE5XWldOMGIzSTBJSHg4SUdrdWFYTlVaWGgwZFhKbElIeDhJR2t1YVhOUmRXRjBaWEp1YVc5dUtTQS9JR1ZiZEYxYmJsMGdQU0JwTG1Oc2IyNWxLQ2tnT2lCQmNuSmhlUzVwYzBGeWNtRjVLR2twSUQ4Z1pWdDBYVnR1WFNBOUlHa3VjMnhwWTJVb0tTQTZJR1ZiZEYxYmJsMGdQU0JwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbE93cDlDbVoxYm1OMGFXOXVJSGwwS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnY3k1c1pXNW5kR2c3SUhRckt5bDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQlNhU2h6VzNSZEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dhVzRnYmlsbFcybGRJRDBnYmx0cFhUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQmxPd3A5Q25aaGNpQjFaaUE5SUhzS0lDQWdJR05zYjI1bE9pQlNhU3dLSUNBZ0lHMWxjbWRsT2lCNWRBcDlMQ0JrWmlBOUlHQjJiMmxrSUcxaGFXNG9LU0I3Q2dsbmJGOVFiM05wZEdsdmJpQTlJSEJ5YjJwbFkzUnBiMjVOWVhSeWFYZ2dLaUJ0YjJSbGJGWnBaWGROWVhSeWFYZ2dLaUIyWldNMEtDQndiM05wZEdsdmJpd2dNUzR3SUNrN0NuMWdMQ0JtWmlBOUlHQjJiMmxrSUcxaGFXNG9LU0I3Q2dsbmJGOUdjbUZuUTI5c2IzSWdQU0IyWldNMEtDQXhMakFzSURBdU1Dd2dNQzR3TENBeExqQWdLVHNLZldBc0lITnVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRhR0ZrWlhKTllYUmxjbWxoYkNJc0lIUm9hWE11WkdWbWFXNWxjeUE5SUh0OUxDQjBhR2x6TG5WdWFXWnZjbTF6SUQwZ2UzMHNJSFJvYVhNdWRtVnlkR1Y0VTJoaFpHVnlJRDBnWkdZc0lIUm9hWE11Wm5KaFoyMWxiblJUYUdGa1pYSWdQU0JtWml3Z2RHaHBjeTVzYVc1bGQybGtkR2dnUFNBeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlDRXhMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJREVzSUhSb2FYTXVabTluSUQwZ0lURXNJSFJvYVhNdWJHbG5hSFJ6SUQwZ0lURXNJSFJvYVhNdVkyeHBjSEJwYm1jZ1BTQWhNU3dnZEdocGN5NWxlSFJsYm5OcGIyNXpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEpwZG1GMGFYWmxjem9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJR1p5WVdkRVpYQjBhRG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJR1J5WVhkQ2RXWm1aWEp6T2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHVnlWR1Y0ZEhWeVpVeFBSRG9nSVRFS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1SbFptRjFiSFJCZEhSeWFXSjFkR1ZXWVd4MVpYTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3S0lDQWdJQ0FnSUNBZ0lDQWdkWFk2SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ0lDQWdJRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVjJNam9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNBZ0lDQWdYUW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXVhVzVrWlhnd1FYUjBjbWxpZFhSbFRtRnRaU0E5SUhadmFXUWdNQ3dnZEdocGN5NTFibWxtYjNKdGMwNWxaV1JWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVuYkhOc1ZtVnljMmx2YmlBOUlHNTFiR3dzSUdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWlM1aGRIUnlhV0oxZEdWeklDRTlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVUyaGhaR1Z5VFdGMFpYSnBZV3c2SUdGMGRISnBZblYwWlhNZ2MyaHZkV3hrSUc1dmR5QmlaU0JrWldacGJtVmtJR2x1SUZSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUlHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1aeVlXZHRaVzUwVTJoaFpHVnlJRDBnWlM1bWNtRm5iV1Z1ZEZOb1lXUmxjaXdnZEdocGN5NTJaWEowWlhoVGFHRmtaWElnUFNCbExuWmxjblJsZUZOb1lXUmxjaXdnZEdocGN5NTFibWxtYjNKdGN5QTlJRkpwS0dVdWRXNXBabTl5YlhNcExDQjBhR2x6TG1SbFptbHVaWE1nUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExtUmxabWx1WlhNcExDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlHVXVkMmx5WldaeVlXMWxMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvTENCMGFHbHpMbXhwWjJoMGN5QTlJR1V1YkdsbmFIUnpMQ0IwYUdsekxtTnNhWEJ3YVc1bklEMGdaUzVqYkdsd2NHbHVaeXdnZEdocGN5NWxlSFJsYm5OcGIyNXpJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlM1bGVIUmxibk5wYjI1ektTd2dkR2hwY3k1bmJITnNWbVZ5YzJsdmJpQTlJR1V1WjJ4emJGWmxjbk5wYjI0c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhRdVoyeHpiRlpsY25OcGIyNGdQU0IwYUdsekxtZHNjMnhXWlhKemFXOXVMQ0IwTG5WdWFXWnZjbTF6SUQwZ2UzMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnBJR2x1SUhSb2FYTXVkVzVwWm05eWJYTXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVkVzVwWm05eWJYTmJhVjB1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z0ppWWdieTVwYzFSbGVIUjFjbVVnUHlCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJblFpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzh1ZEc5S1UwOU9LR1VwTG5WMWFXUUtJQ0FnSUNBZ0lDQWdJQ0FnZlNBNklHOGdKaVlnYnk1cGMwTnZiRzl5SUQ4Z2RDNTFibWxtYjNKdGMxdHBYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0pqSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ2TG1kbGRFaGxlQ2dwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUJ2SUNZbUlHOHVhWE5XWldOMGIzSXlJRDhnZEM1MWJtbG1iM0p0YzF0cFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSjJNaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dieTUwYjBGeWNtRjVLQ2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTZJRzhnSmlZZ2J5NXBjMVpsWTNSdmNqTWdQeUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0luWXpJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnZMblJ2UVhKeVlYa29LUW9nSUNBZ0lDQWdJQ0FnSUNCOUlEb2dieUFtSmlCdkxtbHpWbVZqZEc5eU5DQS9JSFF1ZFc1cFptOXliWE5iYVYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWRqUWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHOHVkRzlCY25KaGVTZ3BDaUFnSUNBZ0lDQWdJQ0FnSUgwZ09pQnZJQ1ltSUc4dWFYTk5ZWFJ5YVhneklEOGdkQzUxYm1sbWIzSnRjMXRwWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKdE15SXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2J5NTBiMEZ5Y21GNUtDa0tJQ0FnSUNBZ0lDQWdJQ0FnZlNBNklHOGdKaVlnYnk1cGMwMWhkSEpwZURRZ1B5QjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW0wMElpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdkxuUnZRWEp5WVhrb0tRb2dJQ0FnSUNBZ0lDQWdJQ0I5SURvZ2RDNTFibWxtYjNKdGMxdHBYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ2Q2lBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0hSb2FYTXVaR1ZtYVc1bGN5a3ViR1Z1WjNSb0lENGdNQ0FtSmlBb2RDNWtaV1pwYm1WeklEMGdkR2hwY3k1a1pXWnBibVZ6S1N3Z2RDNTJaWEowWlhoVGFHRmtaWElnUFNCMGFHbHpMblpsY25SbGVGTm9ZV1JsY2l3Z2RDNW1jbUZuYldWdWRGTm9ZV1JsY2lBOUlIUm9hWE11Wm5KaFoyMWxiblJUYUdGa1pYSTdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjdmVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2t4SUdsdUlIUm9hWE11WlhoMFpXNXphVzl1Y3lsMGFHbHpMbVY0ZEdWdWMybHZibk5iYVRGZElEMDlQU0FoTUNBbUppQW9ibHRwTVYwZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTlpYW1WamRDNXJaWGx6S0c0cExteGxibWQwYUNBK0lEQWdKaVlnS0hRdVpYaDBaVzV6YVc5dWN5QTlJRzRwTENCME93b2dJQ0FnZlFwOU93cHpiaTV3Y205MGIzUjVjR1V1YVhOVGFHRmtaWEpOWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnU1hJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTJGdFpYSmhJaXdnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVWdQU0J1WlhjZ2NHVXNJSFJvYVhNdWNISnZhbVZqZEdsdmJrMWhkSEpwZUNBOUlHNWxkeUJ3WlN3Z2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTQTlJRzVsZHlCd1pUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVc0lIUXBMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTNWpiM0I1S0dVdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG1OdmNIa29aUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRLU3dnZEdocGN5NXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLR1V1Y0hKdmFtVmpkR2x2YmsxaGRISnBlRWx1ZG1WeWMyVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwVjI5eWJHUkVhWEpsWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEFzSUNFeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YldGMGNtbDRWMjl5YkdRdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWMyVjBLQzEwV3poZExDQXRkRnM1WFN3Z0xYUmJNVEJkS1M1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLR1VwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1N3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlV1WTI5d2VTaDBhR2x6TG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNobExDQjBLU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXVZMjl3ZVNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjA3Q2tseUxuQnliM1J2ZEhsd1pTNXBjME5oYldWeVlTQTlJQ0V3T3dwMllYSWdkWFFnUFNCamJHRnpjeUJsZUhSbGJtUnpJRWx5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQTFNQ3dnZENBOUlERXNJRzRnUFNBdU1Td2dhU0E5SURKbE15bDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUdWeWMzQmxZM1JwZG1WRFlXMWxjbUVpTENCMGFHbHpMbVp2ZGlBOUlHVXNJSFJvYVhNdWVtOXZiU0E5SURFc0lIUm9hWE11Ym1WaGNpQTlJRzRzSUhSb2FYTXVabUZ5SUQwZ2FTd2dkR2hwY3k1bWIyTjFjeUE5SURFd0xDQjBhR2x6TG1GemNHVmpkQ0E5SUhRc0lIUm9hWE11ZG1sbGR5QTlJRzUxYkd3c0lIUm9hWE11Wm1sc2JVZGhkV2RsSUQwZ016VXNJSFJvYVhNdVptbHNiVTltWm5ObGRDQTlJREFzSUhSb2FYTXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlN3Z2RDa3NJSFJvYVhNdVptOTJJRDBnWlM1bWIzWXNJSFJvYVhNdWVtOXZiU0E5SUdVdWVtOXZiU3dnZEdocGN5NXVaV0Z5SUQwZ1pTNXVaV0Z5TENCMGFHbHpMbVpoY2lBOUlHVXVabUZ5TENCMGFHbHpMbVp2WTNWeklEMGdaUzVtYjJOMWN5d2dkR2hwY3k1aGMzQmxZM1FnUFNCbExtRnpjR1ZqZEN3Z2RHaHBjeTUyYVdWM0lEMGdaUzUyYVdWM0lEMDlQU0J1ZFd4c0lEOGdiblZzYkNBNklFOWlhbVZqZEM1aGMzTnBaMjRvZTMwc0lHVXVkbWxsZHlrc0lIUm9hWE11Wm1sc2JVZGhkV2RsSUQwZ1pTNW1hV3h0UjJGMVoyVXNJSFJvYVhNdVptbHNiVTltWm5ObGRDQTlJR1V1Wm1sc2JVOW1abk5sZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnZZMkZzVEdWdVozUm9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUM0MUlDb2dkR2hwY3k1blpYUkdhV3h0U0dWcFoyaDBLQ2tnTHlCbE93b2dJQ0FnSUNBZ0lIUm9hWE11Wm05MklEMGdaSElnS2lBeUlDb2dUV0YwYUM1aGRHRnVLSFFwTENCMGFHbHpMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZEVadlkyRnNUR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdUV0YwYUM1MFlXNG9WMjRnS2lBdU5TQXFJSFJvYVhNdVptOTJLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdMalVnS2lCMGFHbHpMbWRsZEVacGJHMUlaV2xuYUhRb0tTQXZJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUkZabVpsWTNScGRtVkdUMVlvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdSeUlDb2dNaUFxSUUxaGRHZ3VZWFJoYmloTllYUm9MblJoYmloWGJpQXFJQzQxSUNvZ2RHaHBjeTVtYjNZcElDOGdkR2hwY3k1NmIyOXRLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFWnBiRzFYYVdSMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bWFXeHRSMkYxWjJVZ0tpQk5ZWFJvTG0xcGJpaDBhR2x6TG1GemNHVmpkQ3dnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4dFNHVnBaMmgwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVpwYkcxSFlYVm5aU0F2SUUxaGRHZ3ViV0Y0S0hSb2FYTXVZWE53WldOMExDQXhLVHNLSUNBZ0lIMEtJQ0FnSUhObGRGWnBaWGRQWm1aelpYUW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJSFJvYVhNdVlYTndaV04wSUQwZ1pTQXZJSFFzSUhSb2FYTXVkbWxsZHlBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1MmFXVjNJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxibUZpYkdWa09pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1puVnNiRmRwWkhSb09pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNCbWRXeHNTR1ZwWjJoME9pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFJZT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUlpPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4Q2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11ZG1sbGR5NWxibUZpYkdWa0lEMGdJVEFzSUhSb2FYTXVkbWxsZHk1bWRXeHNWMmxrZEdnZ1BTQmxMQ0IwYUdsekxuWnBaWGN1Wm5Wc2JFaGxhV2RvZENBOUlIUXNJSFJvYVhNdWRtbGxkeTV2Wm1aelpYUllJRDBnYml3Z2RHaHBjeTUyYVdWM0xtOW1abk5sZEZrZ1BTQnBMQ0IwYUdsekxuWnBaWGN1ZDJsa2RHZ2dQU0J5TENCMGFHbHpMblpwWlhjdWFHVnBaMmgwSUQwZ2J5d2dkR2hwY3k1MWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2s3Q2lBZ0lDQjlDaUFnSUNCamJHVmhjbFpwWlhkUFptWnpaWFFvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTUyYVdWM0lDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxuWnBaWGN1Wlc1aFlteGxaQ0E5SUNFeEtTd2dkR2hwY3k1MWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NXVaV0Z5TENCMElEMGdaU0FxSUUxaGRHZ3VkR0Z1S0ZkdUlDb2dMalVnS2lCMGFHbHpMbVp2ZGlrZ0x5QjBhR2x6TG5wdmIyMHNJRzRnUFNBeUlDb2dkQ3dnYVNBOUlIUm9hWE11WVhOd1pXTjBJQ29nYml3Z2NpQTlJQzB1TlNBcUlHa3NJRzhnUFNCMGFHbHpMblpwWlhjN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWRtbGxkeUFoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMblpwWlhjdVpXNWhZbXhsWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJRzh1Wm5Wc2JGZHBaSFJvTENCaklEMGdieTVtZFd4c1NHVnBaMmgwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlJQ3M5SUc4dWIyWm1jMlYwV0NBcUlHa2dMeUJzTENCMElDMDlJRzh1YjJabWMyVjBXU0FxSUc0Z0x5QmpMQ0JwSUNvOUlHOHVkMmxrZEdnZ0x5QnNMQ0J1SUNvOUlHOHVhR1ZwWjJoMElDOGdZenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxtWnBiRzFQWm1aelpYUTdDaUFnSUNBZ0lDQWdZU0FoUFQwZ01DQW1KaUFvY2lBclBTQmxJQ29nWVNBdklIUm9hWE11WjJWMFJtbHNiVmRwWkhSb0tDa3BMQ0IwYUdsekxuQnliMnBsWTNScGIyNU5ZWFJ5YVhndWJXRnJaVkJsY25Od1pXTjBhWFpsS0hJc0lISWdLeUJwTENCMExDQjBJQzBnYml3Z1pTd2dkR2hwY3k1bVlYSXBMQ0IwYUdsekxuQnliMnBsWTNScGIyNU5ZWFJ5YVhoSmJuWmxjbk5sTG1OdmNIa29kR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1M1cGJuWmxjblFvS1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWIySnFaV04wTG1admRpQTlJSFJvYVhNdVptOTJMQ0IwTG05aWFtVmpkQzU2YjI5dElEMGdkR2hwY3k1NmIyOXRMQ0IwTG05aWFtVmpkQzV1WldGeUlEMGdkR2hwY3k1dVpXRnlMQ0IwTG05aWFtVmpkQzVtWVhJZ1BTQjBhR2x6TG1aaGNpd2dkQzV2WW1wbFkzUXVabTlqZFhNZ1BTQjBhR2x6TG1adlkzVnpMQ0IwTG05aWFtVmpkQzVoYzNCbFkzUWdQU0IwYUdsekxtRnpjR1ZqZEN3Z2RHaHBjeTUyYVdWM0lDRTlQU0J1ZFd4c0lDWW1JQ2gwTG05aWFtVmpkQzUyYVdWM0lEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2dkR2hwY3k1MmFXVjNLU2tzSUhRdWIySnFaV04wTG1acGJHMUhZWFZuWlNBOUlIUm9hWE11Wm1sc2JVZGhkV2RsTENCMExtOWlhbVZqZEM1bWFXeHRUMlptYzJWMElEMGdkR2hwY3k1bWFXeHRUMlptYzJWMExDQjBPd29nSUNBZ2ZRcDlPd3AxZEM1d2NtOTBiM1I1Y0dVdWFYTlFaWEp6Y0dWamRHbDJaVU5oYldWeVlTQTlJQ0V3T3dwMllYSWdkV2tnUFNBNU1Dd2daR2tnUFNBeExDQWtjeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUwZVhCbElEMGdJa04xWW1WRFlXMWxjbUVpTENCdUxtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUNFOVBTQWhNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVEZFdKbFEyRnRaWEpoT2lCVWFHVWdZMjl1YzNSeWRXTjBiM0lnYm05M0lHVjRjR1ZqZEhNZ1lXNGdhVzV6ZEdGdVkyVWdiMllnVjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElHRnpJSFJvYVhKa0lIQmhjbUZ0WlhSbGNpNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYm1SbGNsUmhjbWRsZENBOUlHNDdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnZFhRb2RXa3NJR1JwTENCbExDQjBLVHNLSUNBZ0lDQWdJQ0JwTG14aGVXVnljeUE5SUhSb2FYTXViR0Y1WlhKekxDQnBMblZ3TG5ObGRDZ3dMQ0F0TVN3Z01Da3NJR2t1Ykc5dmEwRjBLRzVsZHlCTktERXNJREFzSURBcEtTd2dkR2hwY3k1aFpHUW9hU2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ2RYUW9kV2tzSUdScExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCeUxteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0J5TG5Wd0xuTmxkQ2d3TENBdE1Td2dNQ2tzSUhJdWJHOXZhMEYwS0c1bGR5Qk5LQzB4TENBd0xDQXdLU2tzSUhSb2FYTXVZV1JrS0hJcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2JtVjNJSFYwS0hWcExDQmthU3dnWlN3Z2RDazdDaUFnSUNBZ0lDQWdieTVzWVhsbGNuTWdQU0IwYUdsekxteGhlV1Z5Y3l3Z2J5NTFjQzV6WlhRb01Dd2dNQ3dnTVNrc0lHOHViRzl2YTBGMEtHNWxkeUJOS0RBc0lERXNJREFwS1N3Z2RHaHBjeTVoWkdRb2J5azdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnZFhRb2RXa3NJR1JwTENCbExDQjBLVHNLSUNBZ0lDQWdJQ0JoTG14aGVXVnljeUE5SUhSb2FYTXViR0Y1WlhKekxDQmhMblZ3TG5ObGRDZ3dMQ0F3TENBdE1Ta3NJR0V1Ykc5dmEwRjBLRzVsZHlCTktEQXNJQzB4TENBd0tTa3NJSFJvYVhNdVlXUmtLR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYm1WM0lIVjBLSFZwTENCa2FTd2daU3dnZENrN0NpQWdJQ0FnSUNBZ2JDNXNZWGxsY25NZ1BTQjBhR2x6TG14aGVXVnljeXdnYkM1MWNDNXpaWFFvTUN3Z0xURXNJREFwTENCc0xteHZiMnRCZENodVpYY2dUU2d3TENBd0xDQXhLU2tzSUhSb2FYTXVZV1JrS0d3cE93b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2JtVjNJSFYwS0hWcExDQmthU3dnWlN3Z2RDazdDaUFnSUNBZ0lDQWdZeTVzWVhsbGNuTWdQU0IwYUdsekxteGhlV1Z5Y3l3Z1l5NTFjQzV6WlhRb01Dd2dMVEVzSURBcExDQmpMbXh2YjJ0QmRDaHVaWGNnVFNnd0xDQXdMQ0F0TVNrcExDQjBhR2x6TG1Ga1pDaGpLVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1d1lYSmxiblFnUFQwOUlHNTFiR3dnSmlZZ2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXlaVzVrWlhKVVlYSm5aWFFzSUZ0cExDQnlMQ0J2TENCaExDQnNMQ0JqWFNBOUlIUm9hWE11WTJocGJHUnlaVzRzSUdnZ1BTQmxMbmh5TG1WdVlXSnNaV1FzSUhVZ1BTQmxMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BPd29nSUNBZ0lDQWdJR1V1ZUhJdVpXNWhZbXhsWkNBOUlDRXhPd29nSUNBZ0lDQWdJR3hsZENCa0lEMGdiaTUwWlhoMGRYSmxMbWRsYm1WeVlYUmxUV2x3YldGd2N6c0tJQ0FnSUNBZ0lDQnVMblJsZUhSMWNtVXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdJVEVzSUdVdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0c0c0lEQXBMQ0JsTG5KbGJtUmxjaWgwTENCcEtTd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9iaXdnTVNrc0lHVXVjbVZ1WkdWeUtIUXNJSElwTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENodUxDQXlLU3dnWlM1eVpXNWtaWElvZEN3Z2J5a3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRzRzSURNcExDQmxMbkpsYm1SbGNpaDBMQ0JoS1N3Z1pTNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2Jpd2dOQ2tzSUdVdWNtVnVaR1Z5S0hRc0lHd3BMQ0J1TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnWkN3Z1pTNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2Jpd2dOU2tzSUdVdWNtVnVaR1Z5S0hRc0lHTXBMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2gxS1N3Z1pTNTRjaTVsYm1GaWJHVmtJRDBnYURzS0lDQWdJSDBLZlN3Z2Eya2dQU0JqYkdGemN5QmxlSFJsYm1SeklHOTBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXNJR2dwZXdvZ0lDQWdJQ0FnSUdVZ1BTQmxJQ0U5UFNCMmIybGtJREFnUHlCbElEb2dXMTBzSUhRZ1BTQjBJQ0U5UFNCMmIybGtJREFnUHlCMElEb2dRbWs3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5d2dhQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NW1iR2x3V1NBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHbHRZV2RsY3lncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYldGblpUc0tJQ0FnSUgwS0lDQWdJSE5sZENCcGJXRm5aWE1vWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YVcxaFoyVWdQU0JsT3dvZ0lDQWdmUXA5T3dwcmFTNXdjbTkwYjNSNWNHVXVhWE5EZFdKbFZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ2FuTWdQU0JqYkdGemN5QmxlSFJsYm1SeklFRjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJRTUxYldKbGNpNXBjMGx1ZEdWblpYSW9kQ2tnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwT2lCamIyNXpkSEoxWTNSdmNpQnphV2R1WVhSMWNtVWdhWE1nYm05M0lGZGxZa2RNUTNWaVpWSmxibVJsY2xSaGNtZGxkQ2dnYzJsNlpTd2diM0IwYVc5dWN5QXBJaWtzSUhRZ1BTQnVLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQjBJRDBnZENCOGZDQjdmU3dnZEdocGN5NTBaWGgwZFhKbElEMGdibVYzSUd0cEtIWnZhV1FnTUN3Z2RDNXRZWEJ3YVc1bkxDQjBMbmR5WVhCVExDQjBMbmR5WVhCVUxDQjBMbTFoWjBacGJIUmxjaXdnZEM1dGFXNUdhV3gwWlhJc0lIUXVabTl5YldGMExDQjBMblI1Y0dVc0lIUXVZVzVwYzI5MGNtOXdlU3dnZEM1bGJtTnZaR2x1Wnlrc0lIUm9hWE11ZEdWNGRIVnlaUzVwYzFKbGJtUmxjbFJoY21kbGRGUmxlSFIxY21VZ1BTQWhNQ3dnZEdocGN5NTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlIUXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklDRTlQU0IyYjJsa0lEQWdQeUIwTG1kbGJtVnlZWFJsVFdsd2JXRndjeUE2SUNFeExDQjBhR2x6TG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5SUQwZ2RDNXRhVzVHYVd4MFpYSWdJVDA5SUhadmFXUWdNQ0EvSUhRdWJXbHVSbWxzZEdWeUlEb2dkSFFzSUhSb2FYTXVkR1Y0ZEhWeVpTNWZibVZsWkhOR2JHbHdSVzUyVFdGd0lEMGdJVEU3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRSWEYxYVhKbFkzUmhibWQxYkdGeVZHVjRkSFZ5WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBaWGgwZFhKbExuUjVjR1VnUFNCMExuUjVjR1VzSUhSb2FYTXVkR1Y0ZEhWeVpTNW1iM0p0WVhRZ1BTQmpkQ3dnZEdocGN5NTBaWGgwZFhKbExtVnVZMjlrYVc1bklEMGdkQzVsYm1OdlpHbHVaeXdnZEdocGN5NTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlIUXVaMlZ1WlhKaGRHVk5hWEJ0WVhCekxDQjBhR2x6TG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5SUQwZ2RDNXRhVzVHYVd4MFpYSXNJSFJvYVhNdWRHVjRkSFZ5WlM1dFlXZEdhV3gwWlhJZ1BTQjBMbTFoWjBacGJIUmxjanNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUkZjWFZwY21WamREb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nWUFvS0NRa0pDWFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2dvSkNRa0pkbVZqTXlCMGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lHbHVJSFpsWXpNZ1pHbHlMQ0JwYmlCdFlYUTBJRzFoZEhKcGVDQXBJSHNLQ2drSkNRa0pjbVYwZFhKdUlHNXZjbTFoYkdsNlpTZ2dLQ0J0WVhSeWFYZ2dLaUIyWldNMEtDQmthWElzSURBdU1DQXBJQ2t1ZUhsNklDazdDZ29KQ1FrSmZRb0tDUWtKQ1hadmFXUWdiV0ZwYmlncElIc0tDZ2tKQ1FrSmRsZHZjbXhrUkdseVpXTjBhVzl1SUQwZ2RISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQndiM05wZEdsdmJpd2diVzlrWld4TllYUnlhWGdnS1RzS0Nna0pDUWtKSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDUWtKQ1FramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dvSkNRa0pmUW9KQ1FsZ0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dZQW9LQ1FrSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlIUkZjWFZwY21WamREc0tDZ2tKQ1FsMllYSjVhVzVuSUhabFl6TWdkbGR2Y214a1JHbHlaV04wYVc5dU93b0tDUWtKQ1NOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2dvSkNRa0pkbTlwWkNCdFlXbHVLQ2tnZXdvS0NRa0pDUWwyWldNeklHUnBjbVZqZEdsdmJpQTlJRzV2Y20xaGJHbDZaU2dnZGxkdmNteGtSR2x5WldOMGFXOXVJQ2s3Q2dvSkNRa0pDWFpsWXpJZ2MyRnRjR3hsVlZZZ1BTQmxjWFZwY21WamRGVjJLQ0JrYVhKbFkzUnBiMjRnS1RzS0Nna0pDUWtKWjJ4ZlJuSmhaME52Ykc5eUlEMGdkR1Y0ZEhWeVpUSkVLQ0IwUlhGMWFYSmxZM1FzSUhOaGJYQnNaVlZXSUNrN0Nnb0pDUWtKZlFvSkNRbGdDaUFnSUNBZ0lDQWdmU3dnYVNBOUlHNWxkeUIzYmlnMUxDQTFMQ0ExS1N3Z2NpQTlJRzVsZHlCemJpaDdDaUFnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJQ0pEZFdKbGJXRndSbkp2YlVWeGRXbHlaV04wSWl3S0lDQWdJQ0FnSUNBZ0lDQWdkVzVwWm05eWJYTTZJRkpwS0c0dWRXNXBabTl5YlhNcExBb2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHNHVkbVZ5ZEdWNFUyaGhaR1Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ2JpNW1jbUZuYldWdWRGTm9ZV1JsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdjMmxrWlRvZ2FYUXNDaUFnSUNBZ0lDQWdJQ0FnSUdKc1pXNWthVzVuT2lCMmJnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSEl1ZFc1cFptOXliWE11ZEVWeGRXbHlaV04wTG5aaGJIVmxJRDBnZERzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUc1bGR5QnpkQ2hwTENCeUtTd2dZU0E5SUhRdWJXbHVSbWxzZEdWeU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtMXBia1pwYkhSbGNpQTlQVDBnVldrZ0ppWWdLSFF1YldsdVJtbHNkR1Z5SUQwZ2RIUXBMQ0J1WlhjZ0pITW9NU3dnTVRBc0lIUm9hWE1wTG5Wd1pHRjBaU2hsTENCdktTd2dkQzV0YVc1R2FXeDBaWElnUFNCaExDQnZMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnYnk1dFlYUmxjbWxoYkM1a2FYTndiM05sS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHVmhjaWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbExtZGxkRkpsYm1SbGNsUmhjbWRsZENncE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREE3SUc4Z1BDQTJPeUJ2S3lzcFpTNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2RHaHBjeXdnYnlrc0lHVXVZMnhsWVhJb2RDd2diaXdnYVNrN0NpQWdJQ0FnSUNBZ1pTNXpaWFJTWlc1a1pYSlVZWEpuWlhRb2NpazdDaUFnSUNCOUNuMDdDbXB6TG5CeWIzUnZkSGx3WlM1cGMxZGxZa2RNUTNWaVpWSmxibVJsY2xSaGNtZGxkQ0E5SUNFd093cDJZWElnYTI4Z1BTQnVaWGNnVFN3Z2NHWWdQU0J1WlhjZ1RTd2diV1lnUFNCdVpYY2diSFFzSUZkMElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTktERXNJREFzSURBcExDQjBJRDBnTUNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTV1YjNKdFlXd2dQU0JsTENCMGFHbHpMbU52Ym5OMFlXNTBJRDBnZERzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXVjM1JoYm5RZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUTI5dGNHOXVaVzUwY3lobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNMbk5sZENobExDQjBMQ0J1S1N3Z2RHaHBjeTVqYjI1emRHRnVkQ0E5SUdrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VG05eWJXRnNRVzVrUTI5d2JHRnVZWEpRYjJsdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc0xtTnZjSGtvWlNrc0lIUm9hWE11WTI5dWMzUmhiblFnUFNBdGRDNWtiM1FvZEdocGN5NXViM0p0WVd3cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVOdmNHeGhibUZ5VUc5cGJuUnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR3R2TG5OMVlsWmxZM1J2Y25Nb2Jpd2dkQ2t1WTNKdmMzTW9jR1l1YzNWaVZtVmpkRzl5Y3lobExDQjBLU2t1Ym05eWJXRnNhWHBsS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwUm5KdmJVNXZjbTFoYkVGdVpFTnZjR3hoYm1GeVVHOXBiblFvYVN3Z1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV1YjNKdFlXd3VZMjl3ZVNobExtNXZjbTFoYkNrc0lIUm9hWE11WTI5dWMzUmhiblFnUFNCbExtTnZibk4wWVc1MExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JtOXliV0ZzYVhwbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdNU0F2SUhSb2FYTXVibTl5YldGc0xteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTV2Y20xaGJDNXRkV3gwYVhCc2VWTmpZV3hoY2lobEtTd2dkR2hwY3k1amIyNXpkR0Z1ZENBcVBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdibVZuWVhSbEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OdmJuTjBZVzUwSUNvOUlDMHhMQ0IwYUdsekxtNXZjbTFoYkM1dVpXZGhkR1VvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVkc5UWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVibTl5YldGc0xtUnZkQ2hsS1NBcklIUm9hWE11WTI5dWMzUmhiblE3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlUzQm9aWEpsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aUzVqWlc1MFpYSXBJQzBnWlM1eVlXUnBkWE03Q2lBZ0lDQjlDaUFnSUNCd2NtOXFaV04wVUc5cGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtTnZjSGtvZEdocGN5NXViM0p0WVd3cExtMTFiSFJwY0d4NVUyTmhiR0Z5S0MxMGFHbHpMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGxLU2t1WVdSa0tHVXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wVEdsdVpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExtUmxiSFJoS0d0dktTd2dhU0E5SUhSb2FYTXVibTl5YldGc0xtUnZkQ2h1S1RzS0lDQWdJQ0FnSUNCcFppQW9hU0E5UFQwZ01Da2djbVYwZFhKdUlIUm9hWE11WkdsemRHRnVZMlZVYjFCdmFXNTBLR1V1YzNSaGNuUXBJRDA5UFNBd0lEOGdkQzVqYjNCNUtHVXVjM1JoY25RcElEb2diblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUMwb1pTNXpkR0Z5ZEM1a2IzUW9kR2hwY3k1dWIzSnRZV3dwSUNzZ2RHaHBjeTVqYjI1emRHRnVkQ2tnTHlCcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeUlEd2dNQ0I4ZkNCeUlENGdNU0EvSUc1MWJHd2dPaUIwTG1OdmNIa29iaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9jaWt1WVdSa0tHVXVjM1JoY25RcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMHhwYm1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1a2FYTjBZVzVqWlZSdlVHOXBiblFvWlM1emRHRnlkQ2tzSUc0Z1BTQjBhR2x6TG1ScGMzUmhibU5sVkc5UWIybHVkQ2hsTG1WdVpDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdQQ0F3SUNZbUlHNGdQaUF3SUh4OElHNGdQQ0F3SUNZbUlIUWdQaUF3T3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMwSnZlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWFXNTBaWEp6WldOMGMxQnNZVzVsS0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzFOd2FHVnlaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWFXNTBaWEp6WldOMGMxQnNZVzVsS0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2JHRnVZWEpRYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WTI5d2VTaDBhR2x6TG01dmNtMWhiQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MWFJvYVhNdVkyOXVjM1JoYm5RcE93b2dJQ0FnZlFvZ0lDQWdZWEJ3YkhsTllYUnlhWGcwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFnZkh3Z2JXWXVaMlYwVG05eWJXRnNUV0YwY21sNEtHVXBMQ0JwSUQwZ2RHaHBjeTVqYjNCc1lXNWhjbEJ2YVc1MEtHdHZLUzVoY0hCc2VVMWhkSEpwZURRb1pTa3NJSElnUFNCMGFHbHpMbTV2Y20xaGJDNWhjSEJzZVUxaGRISnBlRE1vYmlrdWJtOXliV0ZzYVhwbEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dWMzUmhiblFnUFNBdGFTNWtiM1FvY2lrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjMnhoZEdVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OdmJuTjBZVzUwSUMwOUlHVXVaRzkwS0hSb2FYTXVibTl5YldGc0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnhkV0ZzY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVibTl5YldGc0xtVnhkV0ZzY3loMGFHbHpMbTV2Y20xaGJDa2dKaVlnWlM1amIyNXpkR0Z1ZENBOVBUMGdkR2hwY3k1amIyNXpkR0Z1ZERzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjA3Q2xkMExuQnliM1J2ZEhsd1pTNXBjMUJzWVc1bElEMGdJVEE3Q25aaGNpQm1hU0E5SUc1bGR5QkJiaXdnWVhNZ1BTQnVaWGNnVFN3Z1JISWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGZDBMQ0IwSUQwZ2JtVjNJRmQwTENCdUlEMGdibVYzSUZkMExDQnBJRDBnYm1WM0lGZDBMQ0J5SUQwZ2JtVjNJRmQwTENCdklEMGdibVYzSUZkMEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Cc1lXNWxjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Npd0tJQ0FnSUNBZ0lDQWdJQ0FnYndvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NXdiR0Z1WlhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGYk1GMHVZMjl3ZVNobEtTd2dZVnN4WFM1amIzQjVLSFFwTENCaFd6SmRMbU52Y0hrb2Jpa3NJR0ZiTTEwdVkyOXdlU2hwS1N3Z1lWczBYUzVqYjNCNUtISXBMQ0JoV3pWZExtTnZjSGtvYnlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjR3hoYm1Wek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQTJPeUJ1S3lzcGRGdHVYUzVqYjNCNUtHVXVjR3hoYm1WelcyNWRLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxUWNtOXFaV04wYVc5dVRXRjBjbWw0S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y0d4aGJtVnpMQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN5d2dhU0E5SUc1Yk1GMHNJSElnUFNCdVd6RmRMQ0J2SUQwZ2Jsc3lYU3dnWVNBOUlHNWJNMTBzSUd3Z1BTQnVXelJkTENCaklEMGdibHMxWFN3Z2FDQTlJRzViTmwwc0lIVWdQU0J1V3pkZExDQmtJRDBnYmxzNFhTd2daaUE5SUc1Yk9WMHNJRzBnUFNCdVd6RXdYU3dnZUNBOUlHNWJNVEZkTENCMklEMGdibHN4TWwwc0lHY2dQU0J1V3pFelhTd2djQ0E5SUc1Yk1UUmRMQ0JmSUQwZ2Jsc3hOVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwdWMyVjBRMjl0Y0c5dVpXNTBjeWhoSUMwZ2FTd2dkU0F0SUd3c0lIZ2dMU0JrTENCZklDMGdkaWt1Ym05eWJXRnNhWHBsS0Nrc0lIUmJNVjB1YzJWMFEyOXRjRzl1Wlc1MGN5aGhJQ3NnYVN3Z2RTQXJJR3dzSUhnZ0t5QmtMQ0JmSUNzZ2Rpa3VibTl5YldGc2FYcGxLQ2tzSUhSYk1sMHVjMlYwUTI5dGNHOXVaVzUwY3loaElDc2djaXdnZFNBcklHTXNJSGdnS3lCbUxDQmZJQ3NnWnlrdWJtOXliV0ZzYVhwbEtDa3NJSFJiTTEwdWMyVjBRMjl0Y0c5dVpXNTBjeWhoSUMwZ2Npd2dkU0F0SUdNc0lIZ2dMU0JtTENCZklDMGdaeWt1Ym05eWJXRnNhWHBsS0Nrc0lIUmJORjB1YzJWMFEyOXRjRzl1Wlc1MGN5aGhJQzBnYnl3Z2RTQXRJR2dzSUhnZ0xTQnRMQ0JmSUMwZ2NDa3VibTl5YldGc2FYcGxLQ2tzSUhSYk5WMHVjMlYwUTI5dGNHOXVaVzUwY3loaElDc2dieXdnZFNBcklHZ3NJSGdnS3lCdExDQmZJQ3NnY0NrdWJtOXliV0ZzYVhwbEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpUMkpxWldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WjJWdmJXVjBjbms3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WW05MWJtUnBibWRUY0dobGNtVWdQVDA5SUc1MWJHd2dKaVlnZEM1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LU3dnWm1rdVkyOXdlU2gwTG1KdmRXNWthVzVuVTNCb1pYSmxLUzVoY0hCc2VVMWhkSEpwZURRb1pTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhSb2FYTXVhVzUwWlhKelpXTjBjMU53YUdWeVpTaG1hU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelUzQnlhWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pta3VZMlZ1ZEdWeUxuTmxkQ2d3TENBd0xDQXdLU3dnWm1rdWNtRmthWFZ6SUQwZ0xqY3dOekV3TmpjNE1URTROalUwTnpZc0lHWnBMbUZ3Y0d4NVRXRjBjbWw0TkNobExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NXBiblJsY25ObFkzUnpVM0JvWlhKbEtHWnBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEhOVGNHaGxjbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV3YkdGdVpYTXNJRzRnUFNCbExtTmxiblJsY2l3Z2FTQTlJQzFsTG5KaFpHbDFjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd095QnlJRHdnTmpzZ2Npc3JLV2xtSUNoMFczSmRMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaHVLU0E4SUdrcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0lUQTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHeGhibVZ6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENBMk95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUmJibDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoY3k1NElEMGdhUzV1YjNKdFlXd3VlQ0ErSURBZ1B5QmxMbTFoZUM1NElEb2daUzV0YVc0dWVDd2dZWE11ZVNBOUlHa3VibTl5YldGc0xua2dQaUF3SUQ4Z1pTNXRZWGd1ZVNBNklHVXViV2x1TG5rc0lHRnpMbm9nUFNCcExtNXZjbTFoYkM1NklENGdNQ0EvSUdVdWJXRjRMbm9nT2lCbExtMXBiaTU2TENCcExtUnBjM1JoYm1ObFZHOVFiMmx1ZENoaGN5a2dQQ0F3S1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d2JHRnVaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURZN0lHNHJLeWxwWmlBb2RGdHVYUzVrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aU2tnUENBd0tTQnlaWFIxY200Z0lURTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdjbWdvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJRzUxYkd3c0lHVWdQU0FoTVN3Z2RDQTlJRzUxYkd3c0lHNGdQU0J1ZFd4c093b2dJQ0FnWm5WdVkzUnBiMjRnYVNoeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnZENoeUxDQnZLU3dnYmlBOUlITXVjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS0drcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQnpkR0Z5ZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdVZ0lUMDlJQ0V3SUNZbUlIUWdJVDA5SUc1MWJHd2dKaVlnS0c0Z1BTQnpMbkpsY1hWbGMzUkJibWx0WVhScGIyNUdjbUZ0WlNocEtTd2daU0E5SUNFd0tUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE4wYjNBNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCekxtTmhibU5sYkVGdWFXMWhkR2x2YmtaeVlXMWxLRzRwTENCbElEMGdJVEU3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUkJibWx0WVhScGIyNU1iMjl3T2lCbWRXNWpkR2x2YmloeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQnlPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWMFEyOXVkR1Y0ZERvZ1puVnVZM1JwYjI0b2Npa2dld29nSUNBZ0lDQWdJQ0FnSUNCeklEMGdjanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUdkbUtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdaUzVwYzFkbFlrZE1NaXdnYmlBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z2FTaGpMQ0JvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCakxtRnljbUY1TENCa0lEMGdZeTUxYzJGblpTd2daaUE5SUhNdVkzSmxZWFJsUW5WbVptVnlLQ2s3Q2lBZ0lDQWdJQ0FnY3k1aWFXNWtRblZtWm1WeUtHZ3NJR1lwTENCekxtSjFabVpsY2tSaGRHRW9hQ3dnZFN3Z1pDa3NJR011YjI1VmNHeHZZV1JEWVd4c1ltRmpheWdwT3dvZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnTlRFeU5qc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RTQnBibk4wWVc1alpXOW1JRVpzYjJGME16SkJjbkpoZVNBL0lHMGdQU0ExTVRJMklEb2dkU0JwYm5OMFlXNWpaVzltSUVac2IyRjBOalJCY25KaGVTQS9JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweEJkSFJ5YVdKMWRHVnpPaUJWYm5OMWNIQnZjblJsWkNCa1lYUmhJR0oxWm1abGNpQm1iM0p0WVhRNklFWnNiMkYwTmpSQmNuSmhlUzRpS1NBNklIVWdhVzV6ZEdGdVkyVnZaaUJWYVc1ME1UWkJjbkpoZVNBL0lHTXVhWE5HYkc5aGRERTJRblZtWm1WeVFYUjBjbWxpZFhSbElEOGdkQ0EvSUcwZ1BTQTFNVE14SURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEVGMGRISnBZblYwWlhNNklGVnpZV2RsSUc5bUlFWnNiMkYwTVRaQ2RXWm1aWEpCZEhSeWFXSjFkR1VnY21WeGRXbHlaWE1nVjJWaVIwd3lMaUlwSURvZ2JTQTlJRFV4TWpNZ09pQjFJR2x1YzNSaGJtTmxiMllnU1c1ME1UWkJjbkpoZVNBL0lHMGdQU0ExTVRJeUlEb2dkU0JwYm5OMFlXNWpaVzltSUZWcGJuUXpNa0Z5Y21GNUlEOGdiU0E5SURVeE1qVWdPaUIxSUdsdWMzUmhibU5sYjJZZ1NXNTBNekpCY25KaGVTQS9JRzBnUFNBMU1USTBJRG9nZFNCcGJuTjBZVzVqWlc5bUlFbHVkRGhCY25KaGVTQS9JRzBnUFNBMU1USXdJRG9nS0hVZ2FXNXpkR0Z1WTJWdlppQlZhVzUwT0VGeWNtRjVJSHg4SUhVZ2FXNXpkR0Z1WTJWdlppQlZhVzUwT0VOc1lXMXdaV1JCY25KaGVTa2dKaVlnS0cwZ1BTQTFNVEl4S1N3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpZFdabVpYSTZJR1lzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUcwc0NpQWdJQ0FnSUNBZ0lDQWdJR0o1ZEdWelVHVnlSV3hsYldWdWREb2dkUzVDV1ZSRlUxOVFSVkpmUlV4RlRVVk9WQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ1l5NTJaWEp6YVc5dUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSElvWXl3Z2FDd2dkU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnYUM1aGNuSmhlU3dnWmlBOUlHZ3VkWEJrWVhSbFVtRnVaMlU3Q2lBZ0lDQWdJQ0FnY3k1aWFXNWtRblZtWm1WeUtIVXNJR01wTENCbUxtTnZkVzUwSUQwOVBTQXRNU0EvSUhNdVluVm1abVZ5VTNWaVJHRjBZU2gxTENBd0xDQmtLU0E2SUNoMElEOGdjeTVpZFdabVpYSlRkV0pFWVhSaEtIVXNJR1l1YjJabWMyVjBJQ29nWkM1Q1dWUkZVMTlRUlZKZlJVeEZUVVZPVkN3Z1pDd2daaTV2Wm1aelpYUXNJR1l1WTI5MWJuUXBJRG9nY3k1aWRXWm1aWEpUZFdKRVlYUmhLSFVzSUdZdWIyWm1jMlYwSUNvZ1pDNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDd2daQzV6ZFdKaGNuSmhlU2htTG05bVpuTmxkQ3dnWmk1dlptWnpaWFFnS3lCbUxtTnZkVzUwS1Nrc0lHWXVZMjkxYm5RZ1BTQXRNU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCdktHTXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZeTVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsSUNZbUlDaGpJRDBnWXk1a1lYUmhLU3dnYmk1blpYUW9ZeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaEtHTXBJSHNLSUNBZ0lDQWdJQ0JqTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ0ppWWdLR01nUFNCakxtUmhkR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnYmk1blpYUW9ZeWs3Q2lBZ0lDQWdJQ0FnYUNBbUppQW9jeTVrWld4bGRHVkNkV1ptWlhJb2FDNWlkV1ptWlhJcExDQnVMbVJsYkdWMFpTaGpLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCc0tHTXNJR2dwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZeTVwYzBkTVFuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdiaTVuWlhRb1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUNnaFpDQjhmQ0JrTG5abGNuTnBiMjRnUENCakxuWmxjbk5wYjI0cElDWW1JRzR1YzJWMEtHTXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0oxWm1abGNqb2dZeTVpZFdabVpYSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCakxuUjVjR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpZVhSbGMxQmxja1ZzWlcxbGJuUTZJR011Wld4bGJXVnVkRk5wZW1Vc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lCakxuWmxjbk5wYjI0S0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1l5NXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxJQ1ltSUNoaklEMGdZeTVrWVhSaEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHNHVaMlYwS0dNcE93b2dJQ0FnSUNBZ0lIVWdQVDA5SUhadmFXUWdNQ0EvSUc0dWMyVjBLR01zSUdrb1l5d2dhQ2twSURvZ2RTNTJaWEp6YVc5dUlEd2dZeTUyWlhKemFXOXVJQ1ltSUNoeUtIVXVZblZtWm1WeUxDQmpMQ0JvS1N3Z2RTNTJaWEp6YVc5dUlEMGdZeTUyWlhKemFXOXVLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQnZMQW9nSUNBZ0lDQWdJSEpsYlc5MlpUb2dZU3dLSUNBZ0lDQWdJQ0IxY0dSaGRHVTZJR3dLSUNBZ0lIMDdDbjBLZG1GeUlGQnBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Td2dkQ0E5SURFc0lHNGdQU0F4TENCcElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHeGhibVZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdoVFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBVMlZuYldWdWRITTZJR2tLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnWlNBdklESXNJRzhnUFNCMElDOGdNaXdnWVNBOUlFMWhkR2d1Wm14dmIzSW9iaWtzSUd3Z1BTQk5ZWFJvTG1ac2IyOXlLR2twTENCaklEMGdZU0FySURFc0lHZ2dQU0JzSUNzZ01Td2dkU0E5SUdVZ0x5QmhMQ0JrSUQwZ2RDQXZJR3dzSUdZZ1BTQmJYU3dnYlNBOUlGdGRMQ0I0SUQwZ1cxMHNJSFlnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHY2dQU0F3T3lCbklEd2dhRHNnWnlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0JuSUNvZ1pDQXRJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJREE3SUY4Z1BDQmpPeUJmS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCZklDb2dkU0F0SUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdExuQjFjMmdvZVN3Z0xYQXNJREFwTENCNExuQjFjMmdvTUN3Z01Dd2dNU2tzSUhZdWNIVnphQ2hmSUM4Z1lTa3NJSFl1Y0hWemFDZ3hJQzBnWnlBdklHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p6RWdQU0F3T3lCbk1TQThJR3c3SUdjeEt5c3BabTl5S0d4bGRDQndNU0E5SURBN0lIQXhJRHdnWVRzZ2NERXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmTVNBOUlIQXhJQ3NnWXlBcUlHY3hMQ0I1TVNBOUlIQXhJQ3NnWXlBcUlDaG5NU0FySURFcExDQmlJRDBnY0RFZ0t5QXhJQ3NnWXlBcUlDaG5NU0FySURFcExDQkJJRDBnY0RFZ0t5QXhJQ3NnWXlBcUlHY3hPd29nSUNBZ0lDQWdJQ0FnSUNCbUxuQjFjMmdvWHpFc0lIa3hMQ0JCS1N3Z1ppNXdkWE5vS0hreExDQmlMQ0JCS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2htS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHMHNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoNExDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaDJMQ0F5S1NrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUdrb1pTNTNhV1IwYUN3Z1pTNW9aV2xuYUhRc0lHVXVkMmxrZEdoVFpXZHRaVzUwY3l3Z1pTNW9aV2xuYUhSVFpXZHRaVzUwY3lrN0NpQWdJQ0I5Q24wc0lIaG1JRDBnWUNOcFptUmxaaUJWVTBWZlFVeFFTRUZOUVZBS0NXUnBabVoxYzJWRGIyeHZjaTVoSUNvOUlIUmxlSFIxY21VeVJDZ2dZV3h3YUdGTllYQXNJSFpWZGlBcExtYzdDaU5sYm1ScFptQXNJSGxtSUQwZ1lDTnBabVJsWmlCVlUwVmZRVXhRU0VGTlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR0ZzY0doaFRXRndPd29qWlc1a2FXWmdMQ0IyWmlBOUlHQWphV1prWldZZ1ZWTkZYMEZNVUVoQlZFVlRWQW9KYVdZZ0tDQmthV1ptZFhObFEyOXNiM0l1WVNBOElHRnNjR2hoVkdWemRDQXBJR1JwYzJOaGNtUTdDaU5sYm1ScFptQXNJRjltSUQwZ1lDTnBabVJsWmlCVlUwVmZRVXhRU0VGVVJWTlVDZ2wxYm1sbWIzSnRJR1pzYjJGMElHRnNjR2hoVkdWemREc0tJMlZ1WkdsbVlDd2dUV1lnUFNCZ0kybG1aR1ZtSUZWVFJWOUJUMDFCVUFvSlpteHZZWFFnWVcxaWFXVnVkRTlqWTJ4MWMybHZiaUE5SUNnZ2RHVjRkSFZ5WlRKRUtDQmhiMDFoY0N3Z2RsVjJNaUFwTG5JZ0xTQXhMakFnS1NBcUlHRnZUV0Z3U1c1MFpXNXphWFI1SUNzZ01TNHdPd29KY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObElDbzlJR0Z0WW1sbGJuUlBZMk5zZFhOcGIyNDdDZ2tqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMFZPVmsxQlVDQXBJQ1ltSUdSbFptbHVaV1FvSUZOVVFVNUVRVkpFSUNrS0NRbG1iRzloZENCa2IzUk9WaUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JR2RsYjIxbGRISjVMbTV2Y20xaGJDd2daMlZ2YldWMGNua3VkbWxsZDBScGNpQXBJQ2s3Q2drSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JUY0dWamRXeGhjaUFxUFNCamIyMXdkWFJsVTNCbFkzVnNZWEpQWTJOc2RYTnBiMjRvSUdSdmRFNVdMQ0JoYldKcFpXNTBUMk5qYkhWemFXOXVMQ0J0WVhSbGNtbGhiQzV5YjNWbmFHNWxjM01nS1RzS0NTTmxibVJwWmdvalpXNWthV1pnTENCaVppQTlJR0FqYVdaa1pXWWdWVk5GWDBGUFRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JoYjAxaGNEc0tDWFZ1YVdadmNtMGdabXh2WVhRZ1lXOU5ZWEJKYm5SbGJuTnBkSGs3Q2lObGJtUnBabUFzSUhkbUlEMGdJblpsWXpNZ2RISmhibk5tYjNKdFpXUWdQU0IyWldNektDQndiM05wZEdsdmJpQXBPeUlzSUZObUlEMGdZSFpsWXpNZ2IySnFaV04wVG05eWJXRnNJRDBnZG1Wak15Z2dibTl5YldGc0lDazdDaU5wWm1SbFppQlZVMFZmVkVGT1IwVk9WQW9KZG1Wak15QnZZbXBsWTNSVVlXNW5aVzUwSUQwZ2RtVmpNeWdnZEdGdVoyVnVkQzU0ZVhvZ0tUc0tJMlZ1WkdsbVlDd2dWR1lnUFNCZ2RtVmpNeUJDVWtSR1gweGhiV0psY25Rb0lHTnZibk4wSUdsdUlIWmxZek1nWkdsbVpuVnpaVU52Ykc5eUlDa2dld29KY21WMGRYSnVJRkpGUTBsUVVrOURRVXhmVUVrZ0tpQmthV1ptZFhObFEyOXNiM0k3Q24wS2RtVmpNeUJHWDFOamFHeHBZMnNvSUdOdmJuTjBJR2x1SUhabFl6TWdaakFzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1k1TUN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWkc5MFZrZ2dLU0I3Q2dsbWJHOWhkQ0JtY21WemJtVnNJRDBnWlhod01pZ2dLQ0F0SURVdU5UVTBOek1nS2lCa2IzUldTQ0F0SURZdU9UZ3pNVFlnS1NBcUlHUnZkRlpJSUNrN0NnbHlaWFIxY200Z1pqQWdLaUFvSURFdU1DQXRJR1p5WlhOdVpXd2dLU0FySUNnZ1pqa3dJQ29nWm5KbGMyNWxiQ0FwT3dwOUNtWnNiMkYwSUZaZlIwZFlYMU50YVhSb1EyOXljbVZzWVhSbFpDZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1lXeHdhR0VzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEU1TUxDQmpiMjV6ZENCcGJpQm1iRzloZENCa2IzUk9WaUFwSUhzS0NXWnNiMkYwSUdFeUlEMGdjRzkzTWlnZ1lXeHdhR0VnS1RzS0NXWnNiMkYwSUdkMklEMGdaRzkwVGt3Z0tpQnpjWEowS0NCaE1pQXJJQ2dnTVM0d0lDMGdZVElnS1NBcUlIQnZkeklvSUdSdmRFNVdJQ2tnS1RzS0NXWnNiMkYwSUdkc0lEMGdaRzkwVGxZZ0tpQnpjWEowS0NCaE1pQXJJQ2dnTVM0d0lDMGdZVElnS1NBcUlIQnZkeklvSUdSdmRFNU1JQ2tnS1RzS0NYSmxkSFZ5YmlBd0xqVWdMeUJ0WVhnb0lHZDJJQ3NnWjJ3c0lFVlFVMGxNVDA0Z0tUc0tmUXBtYkc5aGRDQkVYMGRIV0NnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnWVd4d2FHRXNJR052Ym5OMElHbHVJR1pzYjJGMElHUnZkRTVJSUNrZ2V3b0pabXh2WVhRZ1lUSWdQU0J3YjNjeUtDQmhiSEJvWVNBcE93b0pabXh2WVhRZ1pHVnViMjBnUFNCd2IzY3lLQ0JrYjNST1NDQXBJQ29nS0NCaE1pQXRJREV1TUNBcElDc2dNUzR3T3dvSmNtVjBkWEp1SUZKRlEwbFFVazlEUVV4ZlVFa2dLaUJoTWlBdklIQnZkeklvSUdSbGJtOXRJQ2s3Q24wS2RtVmpNeUJDVWtSR1gwZEhXQ2dnWTI5dWMzUWdhVzRnZG1Wak15QnNhV2RvZEVScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCbU1Dd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1pqa3dMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnliM1ZuYUc1bGMzTWdLU0I3Q2dsbWJHOWhkQ0JoYkhCb1lTQTlJSEJ2ZHpJb0lISnZkV2RvYm1WemN5QXBPd29KZG1Wak15Qm9ZV3htUkdseUlEMGdibTl5YldGc2FYcGxLQ0JzYVdkb2RFUnBjaUFySUhacFpYZEVhWElnS1RzS0NXWnNiMkYwSUdSdmRFNU1JRDBnYzJGMGRYSmhkR1VvSUdSdmRDZ2dibTl5YldGc0xDQnNhV2RvZEVScGNpQXBJQ2s3Q2dsbWJHOWhkQ0JrYjNST1ZpQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHNXZjbTFoYkN3Z2RtbGxkMFJwY2lBcElDazdDZ2xtYkc5aGRDQmtiM1JPU0NBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUc1dmNtMWhiQ3dnYUdGc1prUnBjaUFwSUNrN0NnbG1iRzloZENCa2IzUldTQ0E5SUhOaGRIVnlZWFJsS0NCa2IzUW9JSFpwWlhkRWFYSXNJR2hoYkdaRWFYSWdLU0FwT3dvSmRtVmpNeUJHSUQwZ1JsOVRZMmhzYVdOcktDQm1NQ3dnWmprd0xDQmtiM1JXU0NBcE93b0pabXh2WVhRZ1ZpQTlJRlpmUjBkWVgxTnRhWFJvUTI5eWNtVnNZWFJsWkNnZ1lXeHdhR0VzSUdSdmRFNU1MQ0JrYjNST1ZpQXBPd29KWm14dllYUWdSQ0E5SUVSZlIwZFlLQ0JoYkhCb1lTd2daRzkwVGtnZ0tUc0tDWEpsZEhWeWJpQkdJQ29nS0NCV0lDb2dSQ0FwT3dwOUNuWmxZeklnVEZSRFgxVjJLQ0JqYjI1emRDQnBiaUIyWldNeklFNHNJR052Ym5OMElHbHVJSFpsWXpNZ1Zpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KWTI5dWMzUWdabXh2WVhRZ1RGVlVYMU5KV2tVZ1BTQTJOQzR3T3dvSlkyOXVjM1FnWm14dllYUWdURlZVWDFORFFVeEZJRDBnS0NCTVZWUmZVMGxhUlNBdElERXVNQ0FwSUM4Z1RGVlVYMU5KV2tVN0NnbGpiMjV6ZENCbWJHOWhkQ0JNVlZSZlFrbEJVeUE5SURBdU5TQXZJRXhWVkY5VFNWcEZPd29KWm14dllYUWdaRzkwVGxZZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCT0xDQldJQ2tnS1RzS0NYWmxZeklnZFhZZ1BTQjJaV015S0NCeWIzVm5hRzVsYzNNc0lITnhjblFvSURFdU1DQXRJR1J2ZEU1V0lDa2dLVHNLQ1hWMklEMGdkWFlnS2lCTVZWUmZVME5CVEVVZ0t5Qk1WVlJmUWtsQlV6c0tDWEpsZEhWeWJpQjFkanNLZlFwbWJHOWhkQ0JNVkVOZlEyeHBjSEJsWkZOd2FHVnlaVVp2Y20xR1lXTjBiM0lvSUdOdmJuTjBJR2x1SUhabFl6TWdaaUFwSUhzS0NXWnNiMkYwSUd3Z1BTQnNaVzVuZEdnb0lHWWdLVHNLQ1hKbGRIVnliaUJ0WVhnb0lDZ2diQ0FxSUd3Z0t5Qm1Mbm9nS1NBdklDZ2diQ0FySURFdU1DQXBMQ0F3TGpBZ0tUc0tmUXAyWldNeklFeFVRMTlGWkdkbFZtVmpkRzl5Um05eWJVWmhZM1J2Y2lnZ1kyOXVjM1FnYVc0Z2RtVmpNeUIyTVN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUIyTWlBcElIc0tDV1pzYjJGMElIZ2dQU0JrYjNRb0lIWXhMQ0IyTWlBcE93b0pabXh2WVhRZ2VTQTlJR0ZpY3lnZ2VDQXBPd29KWm14dllYUWdZU0E5SURBdU9EVTBNems0TlNBcklDZ2dNQzQwT1RZMU1UVTFJQ3NnTUM0d01UUTFNakEySUNvZ2VTQXBJQ29nZVRzS0NXWnNiMkYwSUdJZ1BTQXpMalF4TnpVNU5EQWdLeUFvSURRdU1UWXhOamN5TkNBcklIa2dLU0FxSUhrN0NnbG1iRzloZENCMklEMGdZU0F2SUdJN0NnbG1iRzloZENCMGFHVjBZVjl6YVc1MGFHVjBZU0E5SUNnZ2VDQStJREF1TUNBcElEOGdkaUE2SURBdU5TQXFJR2x1ZG1WeWMyVnpjWEowS0NCdFlYZ29JREV1TUNBdElIZ2dLaUI0TENBeFpTMDNJQ2tnS1NBdElIWTdDZ2x5WlhSMWNtNGdZM0p2YzNNb0lIWXhMQ0IyTWlBcElDb2dkR2hsZEdGZmMybHVkR2hsZEdFN0NuMEtkbVZqTXlCTVZFTmZSWFpoYkhWaGRHVW9JR052Ym5OMElHbHVJSFpsWXpNZ1Rpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCV0xDQmpiMjV6ZENCcGJpQjJaV016SUZBc0lHTnZibk4wSUdsdUlHMWhkRE1nYlVsdWRpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCeVpXTjBRMjl2Y21Seld5QTBJRjBnS1NCN0NnbDJaV016SUhZeElEMGdjbVZqZEVOdmIzSmtjMXNnTVNCZElDMGdjbVZqZEVOdmIzSmtjMXNnTUNCZE93b0pkbVZqTXlCMk1pQTlJSEpsWTNSRGIyOXlaSE5iSURNZ1hTQXRJSEpsWTNSRGIyOXlaSE5iSURBZ1hUc0tDWFpsWXpNZ2JHbG5hSFJPYjNKdFlXd2dQU0JqY205emN5Z2dkakVzSUhZeUlDazdDZ2xwWmlnZ1pHOTBLQ0JzYVdkb2RFNXZjbTFoYkN3Z1VDQXRJSEpsWTNSRGIyOXlaSE5iSURBZ1hTQXBJRHdnTUM0d0lDa2djbVYwZFhKdUlIWmxZek1vSURBdU1DQXBPd29KZG1Wak15QlVNU3dnVkRJN0NnbFVNU0E5SUc1dmNtMWhiR2w2WlNnZ1ZpQXRJRTRnS2lCa2IzUW9JRllzSUU0Z0tTQXBPd29KVkRJZ1BTQXRJR055YjNOektDQk9MQ0JVTVNBcE93b0piV0YwTXlCdFlYUWdQU0J0U1c1MklDb2dkSEpoYm5Od2IzTmxUV0YwTXlnZ2JXRjBNeWdnVkRFc0lGUXlMQ0JPSUNrZ0tUc0tDWFpsWXpNZ1kyOXZjbVJ6V3lBMElGMDdDZ2xqYjI5eVpITmJJREFnWFNBOUlHMWhkQ0FxSUNnZ2NtVmpkRU52YjNKa2Mxc2dNQ0JkSUMwZ1VDQXBPd29KWTI5dmNtUnpXeUF4SUYwZ1BTQnRZWFFnS2lBb0lISmxZM1JEYjI5eVpITmJJREVnWFNBdElGQWdLVHNLQ1dOdmIzSmtjMXNnTWlCZElEMGdiV0YwSUNvZ0tDQnlaV04wUTI5dmNtUnpXeUF5SUYwZ0xTQlFJQ2s3Q2dsamIyOXlaSE5iSURNZ1hTQTlJRzFoZENBcUlDZ2djbVZqZEVOdmIzSmtjMXNnTXlCZElDMGdVQ0FwT3dvSlkyOXZjbVJ6V3lBd0lGMGdQU0J1YjNKdFlXeHBlbVVvSUdOdmIzSmtjMXNnTUNCZElDazdDZ2xqYjI5eVpITmJJREVnWFNBOUlHNXZjbTFoYkdsNlpTZ2dZMjl2Y21Seld5QXhJRjBnS1RzS0NXTnZiM0prYzFzZ01pQmRJRDBnYm05eWJXRnNhWHBsS0NCamIyOXlaSE5iSURJZ1hTQXBPd29KWTI5dmNtUnpXeUF6SUYwZ1BTQnViM0p0WVd4cGVtVW9JR052YjNKa2Mxc2dNeUJkSUNrN0NnbDJaV016SUhabFkzUnZja1p2Y20xR1lXTjBiM0lnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWTNSdmNrWnZjbTFHWVdOMGIzSWdLejBnVEZSRFgwVmtaMlZXWldOMGIzSkdiM0p0Um1GamRHOXlLQ0JqYjI5eVpITmJJREFnWFN3Z1kyOXZjbVJ6V3lBeElGMGdLVHNLQ1habFkzUnZja1p2Y20xR1lXTjBiM0lnS3owZ1RGUkRYMFZrWjJWV1pXTjBiM0pHYjNKdFJtRmpkRzl5S0NCamIyOXlaSE5iSURFZ1hTd2dZMjl2Y21Seld5QXlJRjBnS1RzS0NYWmxZM1J2Y2tadmNtMUdZV04wYjNJZ0t6MGdURlJEWDBWa1oyVldaV04wYjNKR2IzSnRSbUZqZEc5eUtDQmpiMjl5WkhOYklESWdYU3dnWTI5dmNtUnpXeUF6SUYwZ0tUc0tDWFpsWTNSdmNrWnZjbTFHWVdOMGIzSWdLejBnVEZSRFgwVmtaMlZXWldOMGIzSkdiM0p0Um1GamRHOXlLQ0JqYjI5eVpITmJJRE1nWFN3Z1kyOXZjbVJ6V3lBd0lGMGdLVHNLQ1dac2IyRjBJSEpsYzNWc2RDQTlJRXhVUTE5RGJHbHdjR1ZrVTNCb1pYSmxSbTl5YlVaaFkzUnZjaWdnZG1WamRHOXlSbTl5YlVaaFkzUnZjaUFwT3dvSmNtVjBkWEp1SUhabFl6TW9JSEpsYzNWc2RDQXBPd3A5Q21ac2IyRjBJRWRmUW14cGJtNVFhRzl1WjE5SmJYQnNhV05wZENnZ0tTQjdDZ2x5WlhSMWNtNGdNQzR5TlRzS2ZRcG1iRzloZENCRVgwSnNhVzV1VUdodmJtY29JR052Ym5OMElHbHVJR1pzYjJGMElITm9hVzVwYm1WemN5d2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1pHOTBUa2dnS1NCN0NnbHlaWFIxY200Z1VrVkRTVkJTVDBOQlRGOVFTU0FxSUNnZ2MyaHBibWx1WlhOeklDb2dNQzQxSUNzZ01TNHdJQ2tnS2lCd2IzY29JR1J2ZEU1SUxDQnphR2x1YVc1bGMzTWdLVHNLZlFwMlpXTXpJRUpTUkVaZlFteHBibTVRYUc5dVp5Z2dZMjl1YzNRZ2FXNGdkbVZqTXlCc2FXZG9kRVJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUIyYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ6Y0dWamRXeGhja052Ykc5eUxDQmpiMjV6ZENCcGJpQm1iRzloZENCemFHbHVhVzVsYzNNZ0tTQjdDZ2wyWldNeklHaGhiR1pFYVhJZ1BTQnViM0p0WVd4cGVtVW9JR3hwWjJoMFJHbHlJQ3NnZG1sbGQwUnBjaUFwT3dvSlpteHZZWFFnWkc5MFRrZ2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lHaGhiR1pFYVhJZ0tTQXBPd29KWm14dllYUWdaRzkwVmtnZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCMmFXVjNSR2x5TENCb1lXeG1SR2x5SUNrZ0tUc0tDWFpsWXpNZ1JpQTlJRVpmVTJOb2JHbGpheWdnYzNCbFkzVnNZWEpEYjJ4dmNpd2dNUzR3TENCa2IzUldTQ0FwT3dvSlpteHZZWFFnUnlBOUlFZGZRbXhwYm01UWFHOXVaMTlKYlhCc2FXTnBkQ2dnS1RzS0NXWnNiMkYwSUVRZ1BTQkVYMEpzYVc1dVVHaHZibWNvSUhOb2FXNXBibVZ6Y3l3Z1pHOTBUa2dnS1RzS0NYSmxkSFZ5YmlCR0lDb2dLQ0JISUNvZ1JDQXBPd3A5Q2lOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVTBoRlJVNGdLUXBtYkc5aGRDQkVYME5vWVhKc2FXVW9JR1pzYjJGMElISnZkV2RvYm1WemN5d2dabXh2WVhRZ1pHOTBUa2dnS1NCN0NnbG1iRzloZENCaGJIQm9ZU0E5SUhCdmR6SW9JSEp2ZFdkb2JtVnpjeUFwT3dvSlpteHZZWFFnYVc1MlFXeHdhR0VnUFNBeExqQWdMeUJoYkhCb1lUc0tDV1pzYjJGMElHTnZjekpvSUQwZ1pHOTBUa2dnS2lCa2IzUk9TRHNLQ1dac2IyRjBJSE5wYmpKb0lEMGdiV0Y0S0NBeExqQWdMU0JqYjNNeWFDd2dNQzR3TURjNE1USTFJQ2s3Q2dseVpYUjFjbTRnS0NBeUxqQWdLeUJwYm5aQmJIQm9ZU0FwSUNvZ2NHOTNLQ0J6YVc0eWFDd2dhVzUyUVd4d2FHRWdLaUF3TGpVZ0tTQXZJQ2dnTWk0d0lDb2dVRWtnS1RzS2ZRcG1iRzloZENCV1gwNWxkV0psYkhRb0lHWnNiMkYwSUdSdmRFNVdMQ0JtYkc5aGRDQmtiM1JPVENBcElIc0tDWEpsZEhWeWJpQnpZWFIxY21GMFpTZ2dNUzR3SUM4Z0tDQTBMakFnS2lBb0lHUnZkRTVNSUNzZ1pHOTBUbFlnTFNCa2IzUk9UQ0FxSUdSdmRFNVdJQ2tnS1NBcE93cDlDblpsWXpNZ1FsSkVSbDlUYUdWbGJpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCc2FXZG9kRVJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUIyYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkN3Z2RtVmpNeUJ6YUdWbGJrTnZiRzl5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J6YUdWbGJsSnZkV2RvYm1WemN5QXBJSHNLQ1habFl6TWdhR0ZzWmtScGNpQTlJRzV2Y20xaGJHbDZaU2dnYkdsbmFIUkVhWElnS3lCMmFXVjNSR2x5SUNrN0NnbG1iRzloZENCa2IzUk9UQ0E5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2diR2xuYUhSRWFYSWdLU0FwT3dvSlpteHZZWFFnWkc5MFRsWWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJZ0tTQXBPd29KWm14dllYUWdaRzkwVGtnZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUdoaGJHWkVhWElnS1NBcE93b0pabXh2WVhRZ1JDQTlJRVJmUTJoaGNteHBaU2dnYzJobFpXNVNiM1ZuYUc1bGMzTXNJR1J2ZEU1SUlDazdDZ2xtYkc5aGRDQldJRDBnVmw5T1pYVmlaV3gwS0NCa2IzUk9WaXdnWkc5MFRrd2dLVHNLQ1hKbGRIVnliaUJ6YUdWbGJrTnZiRzl5SUNvZ0tDQkVJQ29nVmlBcE93cDlDaU5sYm1ScFptQXNJRVZtSUQwZ1lDTnBabVJsWmlCVlUwVmZRbFZOVUUxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdZblZ0Y0UxaGNEc0tDWFZ1YVdadmNtMGdabXh2WVhRZ1luVnRjRk5qWVd4bE93b0pkbVZqTWlCa1NHUjRlVjltZDJRb0tTQjdDZ2tKZG1Wak1pQmtVMVJrZUNBOUlHUkdaSGdvSUhaVmRpQXBPd29KQ1habFl6SWdaRk5VWkhrZ1BTQmtSbVI1S0NCMlZYWWdLVHNLQ1FsbWJHOWhkQ0JJYkd3Z1BTQmlkVzF3VTJOaGJHVWdLaUIwWlhoMGRYSmxNa1FvSUdKMWJYQk5ZWEFzSUhaVmRpQXBMbmc3Q2drSlpteHZZWFFnWkVKNElEMGdZblZ0Y0ZOallXeGxJQ29nZEdWNGRIVnlaVEpFS0NCaWRXMXdUV0Z3TENCMlZYWWdLeUJrVTFSa2VDQXBMbmdnTFNCSWJHdzdDZ2tKWm14dllYUWdaRUo1SUQwZ1luVnRjRk5qWVd4bElDb2dkR1Y0ZEhWeVpUSkVLQ0JpZFcxd1RXRndMQ0IyVlhZZ0t5QmtVMVJrZVNBcExuZ2dMU0JJYkd3N0Nna0pjbVYwZFhKdUlIWmxZeklvSUdSQ2VDd2daRUo1SUNrN0NnbDlDZ2wyWldNeklIQmxjblIxY21KT2IzSnRZV3hCY21Jb0lIWmxZek1nYzNWeVpsOXdiM01zSUhabFl6TWdjM1Z5Wmw5dWIzSnRMQ0IyWldNeUlHUklaSGg1TENCbWJHOWhkQ0JtWVdObFJHbHlaV04wYVc5dUlDa2dld29KQ1habFl6TWdkbE5wWjIxaFdDQTlJSFpsWXpNb0lHUkdaSGdvSUhOMWNtWmZjRzl6TG5nZ0tTd2daRVprZUNnZ2MzVnlabDl3YjNNdWVTQXBMQ0JrUm1SNEtDQnpkWEptWDNCdmN5NTZJQ2tnS1RzS0NRbDJaV016SUhaVGFXZHRZVmtnUFNCMlpXTXpLQ0JrUm1SNUtDQnpkWEptWDNCdmN5NTRJQ2tzSUdSR1pIa29JSE4xY21aZmNHOXpMbmtnS1N3Z1pFWmtlU2dnYzNWeVpsOXdiM011ZWlBcElDazdDZ2tKZG1Wak15QjJUaUE5SUhOMWNtWmZibTl5YlRzS0NRbDJaV016SUZJeElEMGdZM0p2YzNNb0lIWlRhV2R0WVZrc0lIWk9JQ2s3Q2drSmRtVmpNeUJTTWlBOUlHTnliM056S0NCMlRpd2dkbE5wWjIxaFdDQXBPd29KQ1dac2IyRjBJR1pFWlhRZ1BTQmtiM1FvSUhaVGFXZHRZVmdzSUZJeElDa2dLaUJtWVdObFJHbHlaV04wYVc5dU93b0pDWFpsWXpNZ2RrZHlZV1FnUFNCemFXZHVLQ0JtUkdWMElDa2dLaUFvSUdSSVpIaDVMbmdnS2lCU01TQXJJR1JJWkhoNUxua2dLaUJTTWlBcE93b0pDWEpsZEhWeWJpQnViM0p0WVd4cGVtVW9JR0ZpY3lnZ1prUmxkQ0FwSUNvZ2MzVnlabDl1YjNKdElDMGdka2R5WVdRZ0tUc0tDWDBLSTJWdVpHbG1ZQ3dnUVdZZ1BTQmdJMmxtSUU1VlRWOURURWxRVUVsT1IxOVFURUZPUlZNZ1BpQXdDZ2wyWldNMElIQnNZVzVsT3dvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dWVTVKVDA1ZlEweEpVRkJKVGtkZlVFeEJUa1ZUT3lCcElDc3JJQ2tnZXdvSkNYQnNZVzVsSUQwZ1kyeHBjSEJwYm1kUWJHRnVaWE5iSUdrZ1hUc0tDUWxwWmlBb0lHUnZkQ2dnZGtOc2FYQlFiM05wZEdsdmJpd2djR3hoYm1VdWVIbDZJQ2tnUGlCd2JHRnVaUzUzSUNrZ1pHbHpZMkZ5WkRzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna2phV1lnVlU1SlQwNWZRMHhKVUZCSlRrZGZVRXhCVGtWVElEd2dUbFZOWDBOTVNWQlFTVTVIWDFCTVFVNUZVd29KQ1dKdmIyd2dZMnhwY0hCbFpDQTlJSFJ5ZFdVN0Nna0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRBb0pDV1p2Y2lBb0lHbHVkQ0JwSUQwZ1ZVNUpUMDVmUTB4SlVGQkpUa2RmVUV4QlRrVlRPeUJwSUR3Z1RsVk5YME5NU1ZCUVNVNUhYMUJNUVU1RlV6c2dhU0FyS3lBcElIc0tDUWtKY0d4aGJtVWdQU0JqYkdsd2NHbHVaMUJzWVc1bGMxc2dhU0JkT3dvSkNRbGpiR2x3Y0dWa0lEMGdLQ0JrYjNRb0lIWkRiR2x3VUc5emFYUnBiMjRzSUhCc1lXNWxMbmg1ZWlBcElENGdjR3hoYm1VdWR5QXBJQ1ltSUdOc2FYQndaV1E3Q2drSmZRb0pDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0Nna0phV1lnS0NCamJHbHdjR1ZrSUNrZ1pHbHpZMkZ5WkRzS0NTTmxibVJwWmdvalpXNWthV1pnTENCRFppQTlJR0FqYVdZZ1RsVk5YME5NU1ZCUVNVNUhYMUJNUVU1RlV5QStJREFLQ1haaGNubHBibWNnZG1Wak15QjJRMnhwY0ZCdmMybDBhVzl1T3dvSmRXNXBabTl5YlNCMlpXTTBJR05zYVhCd2FXNW5VR3hoYm1Weld5Qk9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRJRjA3Q2lObGJtUnBabUFzSUV4bUlEMGdZQ05wWmlCT1ZVMWZRMHhKVUZCSlRrZGZVRXhCVGtWVElENGdNQW9KZG1GeWVXbHVaeUIyWldNeklIWkRiR2x3VUc5emFYUnBiMjQ3Q2lObGJtUnBabUFzSUZKbUlEMGdZQ05wWmlCT1ZVMWZRMHhKVUZCSlRrZGZVRXhCVGtWVElENGdNQW9KZGtOc2FYQlFiM05wZEdsdmJpQTlJQzBnYlhaUWIzTnBkR2x2Ymk1NGVYbzdDaU5sYm1ScFptQXNJRkJtSUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlEwOU1UMUpmUVV4UVNFRWdLUW9KWkdsbVpuVnpaVU52Ykc5eUlDbzlJSFpEYjJ4dmNqc0tJMlZzYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U0lDa0tDV1JwWm1aMWMyVkRiMnh2Y2k1eVoySWdLajBnZGtOdmJHOXlPd29qWlc1a2FXWmdMQ0JKWmlBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgwTlBURTlTWDBGTVVFaEJJQ2tLQ1haaGNubHBibWNnZG1Wak5DQjJRMjlzYjNJN0NpTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWlBcENnbDJZWEo1YVc1bklIWmxZek1nZGtOdmJHOXlPd29qWlc1a2FXWmdMQ0JFWmlBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgwTlBURTlTWDBGTVVFaEJJQ2tLQ1haaGNubHBibWNnZG1Wak5DQjJRMjlzYjNJN0NpTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWlBcElIeDhJR1JsWm1sdVpXUW9JRlZUUlY5SlRsTlVRVTVEU1U1SFgwTlBURTlTSUNrS0NYWmhjbmxwYm1jZ2RtVmpNeUIyUTI5c2IzSTdDaU5sYm1ScFptQXNJRVptSUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlEwOU1UMUpmUVV4UVNFRWdLUW9KZGtOdmJHOXlJRDBnZG1Wak5DZ2dNUzR3SUNrN0NpTmxiR2xtSUdSbFptbHVaV1FvSUZWVFJWOURUMHhQVWlBcElIeDhJR1JsWm1sdVpXUW9JRlZUUlY5SlRsTlVRVTVEU1U1SFgwTlBURTlTSUNrS0NYWkRiMnh2Y2lBOUlIWmxZek1vSURFdU1DQXBPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlEVDB4UFVnb0pka052Ykc5eUlDbzlJR052Ykc5eU93b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOUpUbE5VUVU1RFNVNUhYME5QVEU5U0NnbDJRMjlzYjNJdWVIbDZJQ285SUdsdWMzUmhibU5sUTI5c2IzSXVlSGw2T3dvalpXNWthV1pnTENCT1ppQTlJR0FqWkdWbWFXNWxJRkJKSURNdU1UUXhOVGt5TmpVek5UZzVOemt6Q2lOa1pXWnBibVVnVUVreUlEWXVNamd6TVRnMU16QTNNVGM1TlRnMkNpTmtaV1pwYm1VZ1VFbGZTRUZNUmlBeExqVTNNRGM1TmpNeU5qYzVORGc1TmpZS0kyUmxabWx1WlNCU1JVTkpVRkpQUTBGTVgxQkpJREF1TXpFNE16QTVPRGcyTVRnek56a3dOd29qWkdWbWFXNWxJRkpGUTBsUVVrOURRVXhmVUVreUlEQXVNVFU1TVRVME9UUXpNRGt4T0RrMU16VUtJMlJsWm1sdVpTQkZVRk5KVEU5T0lERmxMVFlLSTJsbWJtUmxaaUJ6WVhSMWNtRjBaUW9qWkdWbWFXNWxJSE5oZEhWeVlYUmxLQ0JoSUNrZ1kyeGhiWEFvSUdFc0lEQXVNQ3dnTVM0d0lDa0tJMlZ1WkdsbUNpTmtaV1pwYm1VZ2QyaHBkR1ZEYjIxd2JHVnRaVzUwS0NCaElDa2dLQ0F4TGpBZ0xTQnpZWFIxY21GMFpTZ2dZU0FwSUNrS1pteHZZWFFnY0c5M01pZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2VDQXBJSHNnY21WMGRYSnVJSGdxZURzZ2ZRcG1iRzloZENCd2IzY3pLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQjRJQ2tnZXlCeVpYUjFjbTRnZUNwNEtuZzdJSDBLWm14dllYUWdjRzkzTkNnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnZUNBcElIc2dabXh2WVhRZ2VESWdQU0I0S25nN0lISmxkSFZ5YmlCNE1pcDRNanNnZlFwbWJHOWhkQ0J0WVhnektDQmpiMjV6ZENCcGJpQjJaV016SUhZZ0tTQjdJSEpsZEhWeWJpQnRZWGdvSUcxaGVDZ2dkaTU0TENCMkxua2dLU3dnZGk1NklDazdJSDBLWm14dllYUWdZWFpsY21GblpTZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCamIyeHZjaUFwSUhzZ2NtVjBkWEp1SUdSdmRDZ2dZMjlzYjNJc0lIWmxZek1vSURBdU16TXpNeUFwSUNrN0lIMEthR2xuYUhBZ1pteHZZWFFnY21GdVpDZ2dZMjl1YzNRZ2FXNGdkbVZqTWlCMWRpQXBJSHNLQ1dOdmJuTjBJR2hwWjJod0lHWnNiMkYwSUdFZ1BTQXhNaTQ1T0RrNExDQmlJRDBnTnpndU1qTXpMQ0JqSUQwZ05ETTNOVGd1TlRRMU16c0tDV2hwWjJod0lHWnNiMkYwSUdSMElEMGdaRzkwS0NCMWRpNTRlU3dnZG1Wak1pZ2dZU3hpSUNrZ0tTd2djMjRnUFNCdGIyUW9JR1IwTENCUVNTQXBPd29KY21WMGRYSnVJR1p5WVdOMEtDQnphVzRvSUhOdUlDa2dLaUJqSUNrN0NuMEtJMmxtWkdWbUlFaEpSMGhmVUZKRlEwbFRTVTlPQ2dsbWJHOWhkQ0J3Y21WamFYTnBiMjVUWVdabFRHVnVaM1JvS0NCMlpXTXpJSFlnS1NCN0lISmxkSFZ5YmlCc1pXNW5kR2dvSUhZZ0tUc2dmUW9qWld4elpRb0pabXh2WVhRZ2NISmxZMmx6YVc5dVUyRm1aVXhsYm1kMGFDZ2dkbVZqTXlCMklDa2dld29KQ1dac2IyRjBJRzFoZUVOdmJYQnZibVZ1ZENBOUlHMWhlRE1vSUdGaWN5Z2dkaUFwSUNrN0Nna0pjbVYwZFhKdUlHeGxibWQwYUNnZ2RpQXZJRzFoZUVOdmJYQnZibVZ1ZENBcElDb2diV0Y0UTI5dGNHOXVaVzUwT3dvSmZRb2paVzVrYVdZS2MzUnlkV04wSUVsdVkybGtaVzUwVEdsbmFIUWdld29KZG1Wak15QmpiMnh2Y2pzS0NYWmxZek1nWkdseVpXTjBhVzl1T3dvSlltOXZiQ0IyYVhOcFlteGxPd3A5T3dwemRISjFZM1FnVW1WbWJHVmpkR1ZrVEdsbmFIUWdld29KZG1Wak15QmthWEpsWTNSRWFXWm1kWE5sT3dvSmRtVmpNeUJrYVhKbFkzUlRjR1ZqZFd4aGNqc0tDWFpsWXpNZ2FXNWthWEpsWTNSRWFXWm1kWE5sT3dvSmRtVmpNeUJwYm1ScGNtVmpkRk53WldOMWJHRnlPd3A5T3dwemRISjFZM1FnUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0I3Q2dsMlpXTXpJSEJ2YzJsMGFXOXVPd29KZG1Wak15QnViM0p0WVd3N0NnbDJaV016SUhacFpYZEVhWEk3Q2lOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVUNnbDJaV016SUdOc1pXRnlZMjloZEU1dmNtMWhiRHNLSTJWdVpHbG1DbjA3Q25abFl6TWdkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0JwYmlCMlpXTXpJR1JwY2l3Z2FXNGdiV0YwTkNCdFlYUnlhWGdnS1NCN0NnbHlaWFIxY200Z2JtOXliV0ZzYVhwbEtDQW9JRzFoZEhKcGVDQXFJSFpsWXpRb0lHUnBjaXdnTUM0d0lDa2dLUzU0ZVhvZ0tUc0tmUXAyWldNeklHbHVkbVZ5YzJWVWNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lHbHVJSFpsWXpNZ1pHbHlMQ0JwYmlCdFlYUTBJRzFoZEhKcGVDQXBJSHNLQ1hKbGRIVnliaUJ1YjNKdFlXeHBlbVVvSUNnZ2RtVmpOQ2dnWkdseUxDQXdMakFnS1NBcUlHMWhkSEpwZUNBcExuaDVlaUFwT3dwOUNtMWhkRE1nZEhKaGJuTndiM05sVFdGME15Z2dZMjl1YzNRZ2FXNGdiV0YwTXlCdElDa2dld29KYldGME15QjBiWEE3Q2dsMGJYQmJJREFnWFNBOUlIWmxZek1vSUcxYklEQWdYUzU0TENCdFd5QXhJRjB1ZUN3Z2JWc2dNaUJkTG5nZ0tUc0tDWFJ0Y0ZzZ01TQmRJRDBnZG1Wak15Z2diVnNnTUNCZExua3NJRzFiSURFZ1hTNTVMQ0J0V3lBeUlGMHVlU0FwT3dvSmRHMXdXeUF5SUYwZ1BTQjJaV016S0NCdFd5QXdJRjB1ZWl3Z2JWc2dNU0JkTG5vc0lHMWJJRElnWFM1NklDazdDZ2x5WlhSMWNtNGdkRzF3T3dwOUNtWnNiMkYwSUd4cGJtVmhjbFJ2VW1Wc1lYUnBkbVZNZFcxcGJtRnVZMlVvSUdOdmJuTjBJR2x1SUhabFl6TWdZMjlzYjNJZ0tTQjdDZ2wyWldNeklIZGxhV2RvZEhNZ1BTQjJaV016S0NBd0xqSXhNallzSURBdU56RTFNaXdnTUM0d056SXlJQ2s3Q2dseVpYUjFjbTRnWkc5MEtDQjNaV2xuYUhSekxDQmpiMnh2Y2k1eVoySWdLVHNLZlFwaWIyOXNJR2x6VUdWeWMzQmxZM1JwZG1WTllYUnlhWGdvSUcxaGREUWdiU0FwSUhzS0NYSmxkSFZ5YmlCdFd5QXlJRjFiSURNZ1hTQTlQU0F0SURFdU1Ec0tmUXAyWldNeUlHVnhkV2x5WldOMFZYWW9JR2x1SUhabFl6TWdaR2x5SUNrZ2V3b0pabXh2WVhRZ2RTQTlJR0YwWVc0b0lHUnBjaTU2TENCa2FYSXVlQ0FwSUNvZ1VrVkRTVkJTVDBOQlRGOVFTVElnS3lBd0xqVTdDZ2xtYkc5aGRDQjJJRDBnWVhOcGJpZ2dZMnhoYlhBb0lHUnBjaTU1TENBdElERXVNQ3dnTVM0d0lDa2dLU0FxSUZKRlEwbFFVazlEUVV4ZlVFa2dLeUF3TGpVN0NnbHlaWFIxY200Z2RtVmpNaWdnZFN3Z2RpQXBPd3A5WUN3Z1FtWWdQU0JnSTJsbVpHVm1JRVZPVmsxQlVGOVVXVkJGWDBOVlFrVmZWVllLQ1NOa1pXWnBibVVnWTNWaVpWVldYMjFoZUUxcGNFeGxkbVZzSURndU1Bb0pJMlJsWm1sdVpTQmpkV0psVlZaZmJXbHVUV2x3VEdWMlpXd2dOQzR3Q2dralpHVm1hVzVsSUdOMVltVlZWbDl0WVhoVWFXeGxVMmw2WlNBeU5UWXVNQW9KSTJSbFptbHVaU0JqZFdKbFZWWmZiV2x1Vkdsc1pWTnBlbVVnTVRZdU1Bb0pabXh2WVhRZ1oyVjBSbUZqWlNnZ2RtVmpNeUJrYVhKbFkzUnBiMjRnS1NCN0Nna0pkbVZqTXlCaFluTkVhWEpsWTNScGIyNGdQU0JoWW5Nb0lHUnBjbVZqZEdsdmJpQXBPd29KQ1dac2IyRjBJR1poWTJVZ1BTQXRJREV1TURzS0NRbHBaaUFvSUdGaWMwUnBjbVZqZEdsdmJpNTRJRDRnWVdKelJHbHlaV04wYVc5dUxub2dLU0I3Q2drSkNXbG1JQ2dnWVdKelJHbHlaV04wYVc5dUxuZ2dQaUJoWW5ORWFYSmxZM1JwYjI0dWVTQXBDZ2tKQ1FsbVlXTmxJRDBnWkdseVpXTjBhVzl1TG5nZ1BpQXdMakFnUHlBd0xqQWdPaUF6TGpBN0Nna0pDV1ZzYzJVS0NRa0pDV1poWTJVZ1BTQmthWEpsWTNScGIyNHVlU0ErSURBdU1DQS9JREV1TUNBNklEUXVNRHNLQ1FsOUlHVnNjMlVnZXdvSkNRbHBaaUFvSUdGaWMwUnBjbVZqZEdsdmJpNTZJRDRnWVdKelJHbHlaV04wYVc5dUxua2dLUW9KQ1FrSlptRmpaU0E5SUdScGNtVmpkR2x2Ymk1NklENGdNQzR3SUQ4Z01pNHdJRG9nTlM0d093b0pDUWxsYkhObENna0pDUWxtWVdObElEMGdaR2x5WldOMGFXOXVMbmtnUGlBd0xqQWdQeUF4TGpBZ09pQTBMakE3Q2drSmZRb0pDWEpsZEhWeWJpQm1ZV05sT3dvSmZRb0pkbVZqTWlCblpYUlZWaWdnZG1Wak15QmthWEpsWTNScGIyNHNJR1pzYjJGMElHWmhZMlVnS1NCN0Nna0pkbVZqTWlCMWRqc0tDUWxwWmlBb0lHWmhZMlVnUFQwZ01DNHdJQ2tnZXdvSkNRbDFkaUE5SUhabFl6SW9JR1JwY21WamRHbHZiaTU2TENCa2FYSmxZM1JwYjI0dWVTQXBJQzhnWVdKektDQmthWEpsWTNScGIyNHVlQ0FwT3dvSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdNUzR3SUNrZ2V3b0pDUWwxZGlBOUlIWmxZeklvSUMwZ1pHbHlaV04wYVc5dUxuZ3NJQzBnWkdseVpXTjBhVzl1TG5vZ0tTQXZJR0ZpY3lnZ1pHbHlaV04wYVc5dUxua2dLVHNLQ1FsOUlHVnNjMlVnYVdZZ0tDQm1ZV05sSUQwOUlESXVNQ0FwSUhzS0NRa0pkWFlnUFNCMlpXTXlLQ0F0SUdScGNtVmpkR2x2Ymk1NExDQmthWEpsWTNScGIyNHVlU0FwSUM4Z1lXSnpLQ0JrYVhKbFkzUnBiMjR1ZWlBcE93b0pDWDBnWld4elpTQnBaaUFvSUdaaFkyVWdQVDBnTXk0d0lDa2dld29KQ1FsMWRpQTlJSFpsWXpJb0lDMGdaR2x5WldOMGFXOXVMbm9zSUdScGNtVmpkR2x2Ymk1NUlDa2dMeUJoWW5Nb0lHUnBjbVZqZEdsdmJpNTRJQ2s3Q2drSmZTQmxiSE5sSUdsbUlDZ2dabUZqWlNBOVBTQTBMakFnS1NCN0Nna0pDWFYySUQwZ2RtVmpNaWdnTFNCa2FYSmxZM1JwYjI0dWVDd2daR2x5WldOMGFXOXVMbm9nS1NBdklHRmljeWdnWkdseVpXTjBhVzl1TG5rZ0tUc0tDUWw5SUdWc2MyVWdld29KQ1FsMWRpQTlJSFpsWXpJb0lHUnBjbVZqZEdsdmJpNTRMQ0JrYVhKbFkzUnBiMjR1ZVNBcElDOGdZV0p6S0NCa2FYSmxZM1JwYjI0dWVpQXBPd29KQ1gwS0NRbHlaWFIxY200Z01DNDFJQ29nS0NCMWRpQXJJREV1TUNBcE93b0pmUW9KZG1Wak15QmlhV3hwYm1WaGNrTjFZbVZWVmlnZ2MyRnRjR3hsY2pKRUlHVnVkazFoY0N3Z2RtVmpNeUJrYVhKbFkzUnBiMjRzSUdac2IyRjBJRzFwY0VsdWRDQXBJSHNLQ1FsbWJHOWhkQ0JtWVdObElEMGdaMlYwUm1GalpTZ2daR2x5WldOMGFXOXVJQ2s3Q2drSlpteHZZWFFnWm1sc2RHVnlTVzUwSUQwZ2JXRjRLQ0JqZFdKbFZWWmZiV2x1VFdsd1RHVjJaV3dnTFNCdGFYQkpiblFzSURBdU1DQXBPd29KQ1cxcGNFbHVkQ0E5SUcxaGVDZ2diV2x3U1c1MExDQmpkV0psVlZaZmJXbHVUV2x3VEdWMlpXd2dLVHNLQ1FsbWJHOWhkQ0JtWVdObFUybDZaU0E5SUdWNGNESW9JRzFwY0VsdWRDQXBPd29KQ1dac2IyRjBJSFJsZUdWc1UybDZaU0E5SURFdU1DQXZJQ2dnTXk0d0lDb2dZM1ZpWlZWV1gyMWhlRlJwYkdWVGFYcGxJQ2s3Q2drSmRtVmpNaUIxZGlBOUlHZGxkRlZXS0NCa2FYSmxZM1JwYjI0c0lHWmhZMlVnS1NBcUlDZ2dabUZqWlZOcGVtVWdMU0F4TGpBZ0tTQXJJREF1TlRzS0NRbHBaaUFvSUdaaFkyVWdQaUF5TGpBZ0tTQjdDZ2tKQ1hWMkxua2dLejBnWm1GalpWTnBlbVU3Q2drSkNXWmhZMlVnTFQwZ015NHdPd29KQ1gwS0NRbDFkaTU0SUNzOUlHWmhZMlVnS2lCbVlXTmxVMmw2WlRzS0NRbHBaaUFvSUcxcGNFbHVkQ0E4SUdOMVltVlZWbDl0WVhoTmFYQk1aWFpsYkNBcElIc0tDUWtKZFhZdWVTQXJQU0F5TGpBZ0tpQmpkV0psVlZaZmJXRjRWR2xzWlZOcGVtVTdDZ2tKZlFvSkNYVjJMbmtnS3owZ1ptbHNkR1Z5U1c1MElDb2dNaTR3SUNvZ1kzVmlaVlZXWDIxcGJsUnBiR1ZUYVhwbE93b0pDWFYyTG5nZ0t6MGdNeTR3SUNvZ2JXRjRLQ0F3TGpBc0lHTjFZbVZWVmw5dFlYaFVhV3hsVTJsNlpTQXRJREl1TUNBcUlHWmhZMlZUYVhwbElDazdDZ2tKZFhZZ0tqMGdkR1Y0Wld4VGFYcGxPd29KQ1hKbGRIVnliaUIwWlhoMGRYSmxNa1FvSUdWdWRrMWhjQ3dnZFhZZ0tTNXlaMkk3Q2dsOUNna2paR1ZtYVc1bElISXdJREV1TUFvSkkyUmxabWx1WlNCMk1DQXdMak16T1FvSkkyUmxabWx1WlNCdE1DQXRJREl1TUFvSkkyUmxabWx1WlNCeU1TQXdMamdLQ1NOa1pXWnBibVVnZGpFZ01DNHlOellLQ1NOa1pXWnBibVVnYlRFZ0xTQXhMakFLQ1NOa1pXWnBibVVnY2pRZ01DNDBDZ2tqWkdWbWFXNWxJSFkwSURBdU1EUTJDZ2tqWkdWbWFXNWxJRzAwSURJdU1Bb0pJMlJsWm1sdVpTQnlOU0F3TGpNd05Rb0pJMlJsWm1sdVpTQjJOU0F3TGpBeE5nb0pJMlJsWm1sdVpTQnROU0F6TGpBS0NTTmtaV1pwYm1VZ2NqWWdNQzR5TVFvSkkyUmxabWx1WlNCMk5pQXdMakF3TXpnS0NTTmtaV1pwYm1VZ2JUWWdOQzR3Q2dsbWJHOWhkQ0J5YjNWbmFHNWxjM05VYjAxcGNDZ2dabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KQ1dac2IyRjBJRzFwY0NBOUlEQXVNRHNLQ1FscFppQW9JSEp2ZFdkb2JtVnpjeUErUFNCeU1TQXBJSHNLQ1FrSmJXbHdJRDBnS0NCeU1DQXRJSEp2ZFdkb2JtVnpjeUFwSUNvZ0tDQnRNU0F0SUcwd0lDa2dMeUFvSUhJd0lDMGdjakVnS1NBcklHMHdPd29KQ1gwZ1pXeHpaU0JwWmlBb0lISnZkV2RvYm1WemN5QStQU0J5TkNBcElIc0tDUWtKYldsd0lEMGdLQ0J5TVNBdElISnZkV2RvYm1WemN5QXBJQ29nS0NCdE5DQXRJRzB4SUNrZ0x5QW9JSEl4SUMwZ2NqUWdLU0FySUcweE93b0pDWDBnWld4elpTQnBaaUFvSUhKdmRXZG9ibVZ6Y3lBK1BTQnlOU0FwSUhzS0NRa0piV2x3SUQwZ0tDQnlOQ0F0SUhKdmRXZG9ibVZ6Y3lBcElDb2dLQ0J0TlNBdElHMDBJQ2tnTHlBb0lISTBJQzBnY2pVZ0tTQXJJRzAwT3dvSkNYMGdaV3h6WlNCcFppQW9JSEp2ZFdkb2JtVnpjeUErUFNCeU5pQXBJSHNLQ1FrSmJXbHdJRDBnS0NCeU5TQXRJSEp2ZFdkb2JtVnpjeUFwSUNvZ0tDQnROaUF0SUcwMUlDa2dMeUFvSUhJMUlDMGdjallnS1NBcklHMDFPd29KQ1gwZ1pXeHpaU0I3Q2drSkNXMXBjQ0E5SUMwZ01pNHdJQ29nYkc5bk1pZ2dNUzR4TmlBcUlISnZkV2RvYm1WemN5QXBPd2tKZlFvSkNYSmxkSFZ5YmlCdGFYQTdDZ2w5Q2dsMlpXTTBJSFJsZUhSMWNtVkRkV0psVlZZb0lITmhiWEJzWlhJeVJDQmxiblpOWVhBc0lIWmxZek1nYzJGdGNHeGxSR2x5TENCbWJHOWhkQ0J5YjNWbmFHNWxjM01nS1NCN0Nna0pabXh2WVhRZ2JXbHdJRDBnWTJ4aGJYQW9JSEp2ZFdkb2JtVnpjMVJ2VFdsd0tDQnliM1ZuYUc1bGMzTWdLU3dnYlRBc0lHTjFZbVZWVmw5dFlYaE5hWEJNWlhabGJDQXBPd29KQ1dac2IyRjBJRzFwY0VZZ1BTQm1jbUZqZENnZ2JXbHdJQ2s3Q2drSlpteHZZWFFnYldsd1NXNTBJRDBnWm14dmIzSW9JRzFwY0NBcE93b0pDWFpsWXpNZ1kyOXNiM0l3SUQwZ1ltbHNhVzVsWVhKRGRXSmxWVllvSUdWdWRrMWhjQ3dnYzJGdGNHeGxSR2x5TENCdGFYQkpiblFnS1RzS0NRbHBaaUFvSUcxcGNFWWdQVDBnTUM0d0lDa2dld29KQ1FseVpYUjFjbTRnZG1Wak5DZ2dZMjlzYjNJd0xDQXhMakFnS1RzS0NRbDlJR1ZzYzJVZ2V3b0pDUWwyWldNeklHTnZiRzl5TVNBOUlHSnBiR2x1WldGeVEzVmlaVlZXS0NCbGJuWk5ZWEFzSUhOaGJYQnNaVVJwY2l3Z2JXbHdTVzUwSUNzZ01TNHdJQ2s3Q2drSkNYSmxkSFZ5YmlCMlpXTTBLQ0J0YVhnb0lHTnZiRzl5TUN3Z1kyOXNiM0l4TENCdGFYQkdJQ2tzSURFdU1DQXBPd29KQ1gwS0NYMEtJMlZ1WkdsbVlDd2dlbVlnUFNCZ2RtVmpNeUIwY21GdWMyWnZjbTFsWkU1dmNtMWhiQ0E5SUc5aWFtVmpkRTV2Y20xaGJEc0tJMmxtWkdWbUlGVlRSVjlKVGxOVVFVNURTVTVIQ2dsdFlYUXpJRzBnUFNCdFlYUXpLQ0JwYm5OMFlXNWpaVTFoZEhKcGVDQXBPd29KZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnTHowZ2RtVmpNeWdnWkc5MEtDQnRXeUF3SUYwc0lHMWJJREFnWFNBcExDQmtiM1FvSUcxYklERWdYU3dnYlZzZ01TQmRJQ2tzSUdSdmRDZ2diVnNnTWlCZExDQnRXeUF5SUYwZ0tTQXBPd29KZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnUFNCdElDb2dkSEpoYm5ObWIzSnRaV1JPYjNKdFlXdzdDaU5sYm1ScFpncDBjbUZ1YzJadmNtMWxaRTV2Y20xaGJDQTlJRzV2Y20xaGJFMWhkSEpwZUNBcUlIUnlZVzV6Wm05eWJXVmtUbTl5YldGc093b2phV1prWldZZ1JreEpVRjlUU1VSRlJBb0pkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd2dQU0F0SUhSeVlXNXpabTl5YldWa1RtOXliV0ZzT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2dsMlpXTXpJSFJ5WVc1elptOXliV1ZrVkdGdVoyVnVkQ0E5SUNnZ2JXOWtaV3hXYVdWM1RXRjBjbWw0SUNvZ2RtVmpOQ2dnYjJKcVpXTjBWR0Z1WjJWdWRDd2dNQzR3SUNrZ0tTNTRlWG83Q2dramFXWmtaV1lnUmt4SlVGOVRTVVJGUkFvSkNYUnlZVzV6Wm05eWJXVmtWR0Z1WjJWdWRDQTlJQzBnZEhKaGJuTm1iM0p0WldSVVlXNW5aVzUwT3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUZWbUlEMGdZQ05wWm1SbFppQlZVMFZmUkVsVFVFeEJRMFZOUlU1VVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JrYVhOd2JHRmpaVzFsYm5STllYQTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElHUnBjM0JzWVdObGJXVnVkRk5qWVd4bE93b0pkVzVwWm05eWJTQm1iRzloZENCa2FYTndiR0ZqWlcxbGJuUkNhV0Z6T3dvalpXNWthV1pnTENCUFppQTlJR0FqYVdaa1pXWWdWVk5GWDBSSlUxQk1RVU5GVFVWT1ZFMUJVQW9KZEhKaGJuTm1iM0p0WldRZ0t6MGdibTl5YldGc2FYcGxLQ0J2WW1wbFkzUk9iM0p0WVd3Z0tTQXFJQ2dnZEdWNGRIVnlaVEpFS0NCa2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhaVmRpQXBMbmdnS2lCa2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBcklHUnBjM0JzWVdObGJXVnVkRUpwWVhNZ0tUc0tJMlZ1WkdsbVlDd2dTR1lnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUVWxUVTBsV1JVMUJVQW9KZG1Wak5DQmxiV2x6YzJsMlpVTnZiRzl5SUQwZ2RHVjRkSFZ5WlRKRUtDQmxiV2x6YzJsMlpVMWhjQ3dnZGxWMklDazdDZ2xsYldsemMybDJaVU52Ykc5eUxuSm5ZaUE5SUdWdGFYTnphWFpsVFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnWlcxcGMzTnBkbVZEYjJ4dmNpQXBMbkpuWWpzS0NYUnZkR0ZzUlcxcGMzTnBkbVZTWVdScFlXNWpaU0FxUFNCbGJXbHpjMmwyWlVOdmJHOXlMbkpuWWpzS0kyVnVaR2xtWUN3Z2EyWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRVbFRVMGxXUlUxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaVzFwYzNOcGRtVk5ZWEE3Q2lObGJtUnBabUFzSUVkbUlEMGdJbWRzWDBaeVlXZERiMnh2Y2lBOUlHeHBibVZoY2xSdlQzVjBjSFYwVkdWNFpXd29JR2RzWDBaeVlXZERiMnh2Y2lBcE95SXNJRlptSUQwZ1lIWmxZelFnVEdsdVpXRnlWRzlNYVc1bFlYSW9JR2x1SUhabFl6UWdkbUZzZFdVZ0tTQjdDZ2x5WlhSMWNtNGdkbUZzZFdVN0NuMEtkbVZqTkNCelVrZENWRzlNYVc1bFlYSW9JR2x1SUhabFl6UWdkbUZzZFdVZ0tTQjdDZ2x5WlhSMWNtNGdkbVZqTkNnZ2JXbDRLQ0J3YjNjb0lIWmhiSFZsTG5KbllpQXFJREF1T1RRM09EWTNNams0TmlBcklIWmxZek1vSURBdU1EVXlNVE15TnpBeE5DQXBMQ0IyWldNektDQXlMalFnS1NBcExDQjJZV3gxWlM1eVoySWdLaUF3TGpBM056TTVPVE00TURnc0lIWmxZek1vSUd4bGMzTlVhR0Z1UlhGMVlXd29JSFpoYkhWbExuSm5ZaXdnZG1Wak15Z2dNQzR3TkRBME5TQXBJQ2tnS1NBcExDQjJZV3gxWlM1aElDazdDbjBLZG1Wak5DQk1hVzVsWVhKVWIzTlNSMElvSUdsdUlIWmxZelFnZG1Gc2RXVWdLU0I3Q2dseVpYUjFjbTRnZG1Wak5DZ2diV2w0S0NCd2IzY29JSFpoYkhWbExuSm5ZaXdnZG1Wak15Z2dNQzQwTVRZMk5pQXBJQ2tnS2lBeExqQTFOU0F0SUhabFl6TW9JREF1TURVMUlDa3NJSFpoYkhWbExuSm5ZaUFxSURFeUxqa3lMQ0IyWldNektDQnNaWE56VkdoaGJrVnhkV0ZzS0NCMllXeDFaUzV5WjJJc0lIWmxZek1vSURBdU1EQXpNVE13T0NBcElDa2dLU0FwTENCMllXeDFaUzVoSUNrN0NuMWdMQ0JYWmlBOUlHQWphV1prWldZZ1ZWTkZYMFZPVmsxQlVBb0pJMmxtWkdWbUlFVk9WbDlYVDFKTVJGQlBVd29KQ1habFl6TWdZMkZ0WlhKaFZHOUdjbUZuT3dvSkNXbG1JQ2dnYVhOUGNuUm9iMmR5WVhCb2FXTWdLU0I3Q2drSkNXTmhiV1Z5WVZSdlJuSmhaeUE5SUc1dmNtMWhiR2w2WlNnZ2RtVmpNeWdnTFNCMmFXVjNUV0YwY21sNFd5QXdJRjFiSURJZ1hTd2dMU0IyYVdWM1RXRjBjbWw0V3lBeElGMWJJRElnWFN3Z0xTQjJhV1YzVFdGMGNtbDRXeUF5SUYxYklESWdYU0FwSUNrN0Nna0pmU0JsYkhObElIc0tDUWtKWTJGdFpYSmhWRzlHY21GbklEMGdibTl5YldGc2FYcGxLQ0IyVjI5eWJHUlFiM05wZEdsdmJpQXRJR05oYldWeVlWQnZjMmwwYVc5dUlDazdDZ2tKZlFvSkNYWmxZek1nZDI5eWJHUk9iM0p0WVd3Z1BTQnBiblpsY25ObFZISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQnViM0p0WVd3c0lIWnBaWGROWVhSeWFYZ2dLVHNLQ1FramFXWmtaV1lnUlU1V1RVRlFYMDFQUkVWZlVrVkdURVZEVkVsUFRnb0pDUWwyWldNeklISmxabXhsWTNSV1pXTWdQU0J5Wldac1pXTjBLQ0JqWVcxbGNtRlViMFp5WVdjc0lIZHZjbXhrVG05eWJXRnNJQ2s3Q2drSkkyVnNjMlVLQ1FrSmRtVmpNeUJ5Wldac1pXTjBWbVZqSUQwZ2NtVm1jbUZqZENnZ1kyRnRaWEpoVkc5R2NtRm5MQ0IzYjNKc1pFNXZjbTFoYkN3Z2NtVm1jbUZqZEdsdmJsSmhkR2x2SUNrN0Nna0pJMlZ1WkdsbUNna2paV3h6WlFvSkNYWmxZek1nY21WbWJHVmpkRlpsWXlBOUlIWlNaV1pzWldOME93b0pJMlZ1WkdsbUNna2phV1prWldZZ1JVNVdUVUZRWDFSWlVFVmZRMVZDUlFvSkNYWmxZelFnWlc1MlEyOXNiM0lnUFNCMFpYaDBkWEpsUTNWaVpTZ2daVzUyVFdGd0xDQjJaV016S0NCbWJHbHdSVzUyVFdGd0lDb2djbVZtYkdWamRGWmxZeTU0TENCeVpXWnNaV04wVm1WakxubDZJQ2tnS1RzS0NRbGxiblpEYjJ4dmNpQTlJR1Z1ZGsxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUdWdWRrTnZiRzl5SUNrN0Nna2paV3hwWmlCa1pXWnBibVZrS0NCRlRsWk5RVkJmVkZsUVJWOURWVUpGWDFWV0lDa0tDUWwyWldNMElHVnVka052Ykc5eUlEMGdkR1Y0ZEhWeVpVTjFZbVZWVmlnZ1pXNTJUV0Z3TENCeVpXWnNaV04wVm1WakxDQXdMakFnS1RzS0NTTmxiSE5sQ2drSmRtVmpOQ0JsYm5aRGIyeHZjaUE5SUhabFl6UW9JREF1TUNBcE93b0pJMlZ1WkdsbUNna2phV1prWldZZ1JVNVdUVUZRWDBKTVJVNUVTVTVIWDAxVlRGUkpVRXhaQ2drSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUcxcGVDZ2diM1YwWjI5cGJtZE1hV2RvZEN3Z2IzVjBaMjlwYm1kTWFXZG9kQ0FxSUdWdWRrTnZiRzl5TG5oNWVpd2djM0JsWTNWc1lYSlRkSEpsYm1kMGFDQXFJSEpsWm14bFkzUnBkbWwwZVNBcE93b0pJMlZzYVdZZ1pHVm1hVzVsWkNnZ1JVNVdUVUZRWDBKTVJVNUVTVTVIWDAxSldDQXBDZ2tKYjNWMFoyOXBibWRNYVdkb2RDQTlJRzFwZUNnZ2IzVjBaMjlwYm1kTWFXZG9kQ3dnWlc1MlEyOXNiM0l1ZUhsNkxDQnpjR1ZqZFd4aGNsTjBjbVZ1WjNSb0lDb2djbVZtYkdWamRHbDJhWFI1SUNrN0Nna2paV3hwWmlCa1pXWnBibVZrS0NCRlRsWk5RVkJmUWt4RlRrUkpUa2RmUVVSRUlDa0tDUWx2ZFhSbmIybHVaMHhwWjJoMElDczlJR1Z1ZGtOdmJHOXlMbmg1ZWlBcUlITndaV04xYkdGeVUzUnlaVzVuZEdnZ0tpQnlaV1pzWldOMGFYWnBkSGs3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnY1dZZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVGxaTlFWQUtDWFZ1YVdadmNtMGdabXh2WVhRZ1pXNTJUV0Z3U1c1MFpXNXphWFI1T3dvSmRXNXBabTl5YlNCbWJHOWhkQ0JtYkdsd1JXNTJUV0Z3T3dvSkkybG1aR1ZtSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1VLQ1FsMWJtbG1iM0p0SUhOaGJYQnNaWEpEZFdKbElHVnVkazFoY0RzS0NTTmxiSE5sQ2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1pXNTJUV0Z3T3dvSkkyVnVaR2xtQ2drS0kyVnVaR2xtWUN3Z1dHWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRsWk5RVkFLQ1hWdWFXWnZjbTBnWm14dllYUWdjbVZtYkdWamRHbDJhWFI1T3dvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5Q1ZVMVFUVUZRSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDA1UFVrMUJURTFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRkJJVDA1SElDa0tDUWtqWkdWbWFXNWxJRVZPVmw5WFQxSk1SRkJQVXdvSkkyVnVaR2xtQ2dramFXWmtaV1lnUlU1V1gxZFBVa3hFVUU5VENna0pkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRkJ2YzJsMGFXOXVPd29KQ1hWdWFXWnZjbTBnWm14dllYUWdjbVZtY21GamRHbHZibEpoZEdsdk93b0pJMlZzYzJVS0NRbDJZWEo1YVc1bklIWmxZek1nZGxKbFpteGxZM1E3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnU21ZZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVGxaTlFWQUtDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOU9UMUpOUVV4TlFWQWdLU0I4ZkdSbFptbHVaV1FvSUZCSVQwNUhJQ2tLQ1FralpHVm1hVzVsSUVWT1ZsOVhUMUpNUkZCUFV3b0pJMlZ1WkdsbUNna2phV1prWldZZ1JVNVdYMWRQVWt4RVVFOVRDZ2tKQ2drSmRtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pGQnZjMmwwYVc5dU93b0pJMlZzYzJVS0NRbDJZWEo1YVc1bklIWmxZek1nZGxKbFpteGxZM1E3Q2drSmRXNXBabTl5YlNCbWJHOWhkQ0J5WldaeVlXTjBhVzl1VW1GMGFXODdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dXV1lnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUbFpOUVZBS0NTTnBabVJsWmlCRlRsWmZWMDlTVEVSUVQxTUtDUWwyVjI5eWJHUlFiM05wZEdsdmJpQTlJSGR2Y214a1VHOXphWFJwYjI0dWVIbDZPd29KSTJWc2MyVUtDUWwyWldNeklHTmhiV1Z5WVZSdlZtVnlkR1Y0T3dvSkNXbG1JQ2dnYVhOUGNuUm9iMmR5WVhCb2FXTWdLU0I3Q2drSkNXTmhiV1Z5WVZSdlZtVnlkR1Y0SUQwZ2JtOXliV0ZzYVhwbEtDQjJaV016S0NBdElIWnBaWGROWVhSeWFYaGJJREFnWFZzZ01pQmRMQ0F0SUhacFpYZE5ZWFJ5YVhoYklERWdYVnNnTWlCZExDQXRJSFpwWlhkTllYUnlhWGhiSURJZ1hWc2dNaUJkSUNrZ0tUc0tDUWw5SUdWc2MyVWdld29KQ1FsallXMWxjbUZVYjFabGNuUmxlQ0E5SUc1dmNtMWhiR2w2WlNnZ2QyOXliR1JRYjNOcGRHbHZiaTU0ZVhvZ0xTQmpZVzFsY21GUWIzTnBkR2x2YmlBcE93b0pDWDBLQ1FsMlpXTXpJSGR2Y214a1RtOXliV0ZzSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2RISmhibk5tYjNKdFpXUk9iM0p0WVd3c0lIWnBaWGROWVhSeWFYZ2dLVHNLQ1FramFXWmtaV1lnUlU1V1RVRlFYMDFQUkVWZlVrVkdURVZEVkVsUFRnb0pDUWwyVW1WbWJHVmpkQ0E5SUhKbFpteGxZM1FvSUdOaGJXVnlZVlJ2Vm1WeWRHVjRMQ0IzYjNKc1pFNXZjbTFoYkNBcE93b0pDU05sYkhObENna0pDWFpTWldac1pXTjBJRDBnY21WbWNtRmpkQ2dnWTJGdFpYSmhWRzlXWlhKMFpYZ3NJSGR2Y214a1RtOXliV0ZzTENCeVpXWnlZV04wYVc5dVVtRjBhVzhnS1RzS0NRa2paVzVrYVdZS0NTTmxibVJwWmdvalpXNWthV1pnTENCYVppQTlJR0FqYVdaa1pXWWdWVk5GWDBaUFJ3b0pka1p2WjBSbGNIUm9JRDBnTFNCdGRsQnZjMmwwYVc5dUxubzdDaU5sYm1ScFptQXNJQ1JtSUQwZ1lDTnBabVJsWmlCVlUwVmZSazlIQ2dsMllYSjVhVzVuSUdac2IyRjBJSFpHYjJkRVpYQjBhRHNLSTJWdVpHbG1ZQ3dnYW1ZZ1BTQmdJMmxtWkdWbUlGVlRSVjlHVDBjS0NTTnBabVJsWmlCR1QwZGZSVmhRTWdvSkNXWnNiMkYwSUdadlowWmhZM1J2Y2lBOUlERXVNQ0F0SUdWNGNDZ2dMU0JtYjJkRVpXNXphWFI1SUNvZ1ptOW5SR1Z1YzJsMGVTQXFJSFpHYjJkRVpYQjBhQ0FxSUhaR2IyZEVaWEIwYUNBcE93b0pJMlZzYzJVS0NRbG1iRzloZENCbWIyZEdZV04wYjNJZ1BTQnpiVzl2ZEdoemRHVndLQ0JtYjJkT1pXRnlMQ0JtYjJkR1lYSXNJSFpHYjJkRVpYQjBhQ0FwT3dvSkkyVnVaR2xtQ2dsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUQwZ2JXbDRLQ0JuYkY5R2NtRm5RMjlzYjNJdWNtZGlMQ0JtYjJkRGIyeHZjaXdnWm05blJtRmpkRzl5SUNrN0NpTmxibVJwWm1Bc0lGRm1JRDBnWUNOcFptUmxaaUJWVTBWZlJrOUhDZ2wxYm1sbWIzSnRJSFpsWXpNZ1ptOW5RMjlzYjNJN0NnbDJZWEo1YVc1bklHWnNiMkYwSUhaR2IyZEVaWEIwYURzS0NTTnBabVJsWmlCR1QwZGZSVmhRTWdvSkNYVnVhV1p2Y20wZ1pteHZZWFFnWm05blJHVnVjMmwwZVRzS0NTTmxiSE5sQ2drSmRXNXBabTl5YlNCbWJHOWhkQ0JtYjJkT1pXRnlPd29KQ1hWdWFXWnZjbTBnWm14dllYUWdabTluUm1GeU93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lFdG1JRDBnWUNOcFptUmxaaUJWVTBWZlIxSkJSRWxGVGxSTlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR2R5WVdScFpXNTBUV0Z3T3dvalpXNWthV1lLZG1Wak15Qm5aWFJIY21Ga2FXVnVkRWx5Y21Ga2FXRnVZMlVvSUhabFl6TWdibTl5YldGc0xDQjJaV016SUd4cFoyaDBSR2x5WldOMGFXOXVJQ2tnZXdvSlpteHZZWFFnWkc5MFRrd2dQU0JrYjNRb0lHNXZjbTFoYkN3Z2JHbG5hSFJFYVhKbFkzUnBiMjRnS1RzS0NYWmxZeklnWTI5dmNtUWdQU0IyWldNeUtDQmtiM1JPVENBcUlEQXVOU0FySURBdU5Td2dNQzR3SUNrN0Nna2phV1prWldZZ1ZWTkZYMGRTUVVSSlJVNVVUVUZRQ2drSmNtVjBkWEp1SUhabFl6TW9JSFJsZUhSMWNtVXlSQ2dnWjNKaFpHbGxiblJOWVhBc0lHTnZiM0prSUNrdWNpQXBPd29KSTJWc2MyVUtDUWx5WlhSMWNtNGdLQ0JqYjI5eVpDNTRJRHdnTUM0M0lDa2dQeUIyWldNektDQXdMamNnS1NBNklIWmxZek1vSURFdU1DQXBPd29KSTJWdVpHbG1DbjFnTENCbGNDQTlJR0FqYVdaa1pXWWdWVk5GWDB4SlIwaFVUVUZRQ2dsMlpXTTBJR3hwWjJoMFRXRndWR1Y0Wld3Z1BTQjBaWGgwZFhKbE1rUW9JR3hwWjJoMFRXRndMQ0IyVlhZeUlDazdDZ2wyWldNeklHeHBaMmgwVFdGd1NYSnlZV1JwWVc1alpTQTlJR3hwWjJoMFRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2JHbG5hSFJOWVhCVVpYaGxiQ0FwTG5KbllpQXFJR3hwWjJoMFRXRndTVzUwWlc1emFYUjVPd29KSTJsbWJtUmxaaUJRU0ZsVFNVTkJURXhaWDBOUFVsSkZRMVJmVEVsSFNGUlRDZ2tKYkdsbmFIUk5ZWEJKY25KaFpHbGhibU5sSUNvOUlGQkpPd29KSTJWdVpHbG1DZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdiR2xuYUhSTllYQkpjbkpoWkdsaGJtTmxPd29qWlc1a2FXWmdMQ0IwY0NBOUlHQWphV1prWldZZ1ZWTkZYMHhKUjBoVVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JzYVdkb2RFMWhjRHNLQ1hWdWFXWnZjbTBnWm14dllYUWdiR2xuYUhSTllYQkpiblJsYm5OcGRIazdDaU5sYm1ScFptQXNJRzV3SUQwZ1lIWmxZek1nWkdsbVpuVnpaU0E5SUhabFl6TW9JREV1TUNBcE93cEhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNU93cG5aVzl0WlhSeWVTNXdiM05wZEdsdmJpQTlJRzEyVUc5emFYUnBiMjR1ZUhsNk93cG5aVzl0WlhSeWVTNXViM0p0WVd3Z1BTQnViM0p0WVd4cGVtVW9JSFJ5WVc1elptOXliV1ZrVG05eWJXRnNJQ2s3Q21kbGIyMWxkSEo1TG5acFpYZEVhWElnUFNBb0lHbHpUM0owYUc5bmNtRndhR2xqSUNrZ1B5QjJaV016S0NBd0xDQXdMQ0F4SUNrZ09pQnViM0p0WVd4cGVtVW9JQzF0ZGxCdmMybDBhVzl1TG5oNWVpQXBPd3BIWlc5dFpYUnlhV05EYjI1MFpYaDBJR0poWTJ0SFpXOXRaWFJ5ZVRzS1ltRmphMGRsYjIxbGRISjVMbkJ2YzJsMGFXOXVJRDBnWjJWdmJXVjBjbmt1Y0c5emFYUnBiMjQ3Q21KaFkydEhaVzl0WlhSeWVTNXViM0p0WVd3Z1BTQXRaMlZ2YldWMGNua3VibTl5YldGc093cGlZV05yUjJWdmJXVjBjbmt1ZG1sbGQwUnBjaUE5SUdkbGIyMWxkSEo1TG5acFpYZEVhWEk3Q25aTWFXZG9kRVp5YjI1MElEMGdkbVZqTXlnZ01DNHdJQ2s3Q25aSmJtUnBjbVZqZEVaeWIyNTBJRDBnZG1Wak15Z2dNQzR3SUNrN0NpTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDWFpNYVdkb2RFSmhZMnNnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpKYm1ScGNtVmpkRUpoWTJzZ1BTQjJaV016S0NBd0xqQWdLVHNLSTJWdVpHbG1Da2x1WTJsa1pXNTBUR2xuYUhRZ1pHbHlaV04wVEdsbmFIUTdDbVpzYjJGMElHUnZkRTVNT3dwMlpXTXpJR1JwY21WamRFeHBaMmgwUTI5c2IzSmZSR2xtWm5WelpUc0tka2x1WkdseVpXTjBSbkp2Ym5RZ0t6MGdaMlYwUVcxaWFXVnVkRXhwWjJoMFNYSnlZV1JwWVc1alpTZ2dZVzFpYVdWdWRFeHBaMmgwUTI5c2IzSWdLVHNLZGtsdVpHbHlaV04wUm5KdmJuUWdLejBnWjJWMFRHbG5hSFJRY205aVpVbHljbUZrYVdGdVkyVW9JR3hwWjJoMFVISnZZbVVzSUdkbGIyMWxkSEo1TG01dmNtMWhiQ0FwT3dvamFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNnbDJTVzVrYVhKbFkzUkNZV05ySUNzOUlHZGxkRUZ0WW1sbGJuUk1hV2RvZEVseWNtRmthV0Z1WTJVb0lHRnRZbWxsYm5STWFXZG9kRU52Ykc5eUlDazdDZ2wyU1c1a2FYSmxZM1JDWVdOcklDczlJR2RsZEV4cFoyaDBVSEp2WW1WSmNuSmhaR2xoYm1ObEtDQnNhV2RvZEZCeWIySmxMQ0JpWVdOclIyVnZiV1YwY25rdWJtOXliV0ZzSUNrN0NpTmxibVJwWmdvamFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVV5QStJREFLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlRVDBsT1ZGOU1TVWRJVkZNN0lHa2dLeXNnS1NCN0Nna0paMlYwVUc5cGJuUk1hV2RvZEVsdVptOG9JSEJ2YVc1MFRHbG5hSFJ6V3lCcElGMHNJR2RsYjIxbGRISjVMQ0JrYVhKbFkzUk1hV2RvZENBcE93b0pDV1J2ZEU1TUlEMGdaRzkwS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdScGNtVmpkRXhwWjJoMExtUnBjbVZqZEdsdmJpQXBPd29KQ1dScGNtVmpkRXhwWjJoMFEyOXNiM0pmUkdsbVpuVnpaU0E5SUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSkNYWk1hV2RvZEVaeWIyNTBJQ3M5SUhOaGRIVnlZWFJsS0NCa2IzUk9UQ0FwSUNvZ1pHbHlaV04wVEdsbmFIUkRiMnh2Y2w5RWFXWm1kWE5sT3dvSkNTTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDUWtKZGt4cFoyaDBRbUZqYXlBclBTQnpZWFIxY21GMFpTZ2dMU0JrYjNST1RDQXBJQ29nWkdseVpXTjBUR2xuYUhSRGIyeHZjbDlFYVdabWRYTmxPd29KQ1NObGJtUnBaZ29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLSTJWdVpHbG1DaU5wWmlCT1ZVMWZVMUJQVkY5TVNVZElWRk1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlUxQlBWRjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKWjJWMFUzQnZkRXhwWjJoMFNXNW1ieWdnYzNCdmRFeHBaMmgwYzFzZ2FTQmRMQ0JuWlc5dFpYUnllU3dnWkdseVpXTjBUR2xuYUhRZ0tUc0tDUWxrYjNST1RDQTlJR1J2ZENnZ1oyVnZiV1YwY25rdWJtOXliV0ZzTENCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLVHNLQ1Fsa2FYSmxZM1JNYVdkb2RFTnZiRzl5WDBScFptWjFjMlVnUFNCa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2pzS0NRbDJUR2xuYUhSR2NtOXVkQ0FyUFNCellYUjFjbUYwWlNnZ1pHOTBUa3dnS1NBcUlHUnBjbVZqZEV4cFoyaDBRMjlzYjNKZlJHbG1ablZ6WlRzS0NRa2phV1prWldZZ1JFOVZRa3hGWDFOSlJFVkVDZ2tKQ1haTWFXZG9kRUpoWTJzZ0t6MGdjMkYwZFhKaGRHVW9JQzBnWkc5MFRrd2dLU0FxSUdScGNtVmpkRXhwWjJoMFEyOXNiM0pmUkdsbVpuVnpaVHNLQ1FralpXNWthV1lLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2lObGJtUnBaZ29qYVdZZ1RsVk5YMFJKVWw5TVNVZElWRk1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlJFbFNYMHhKUjBoVVV6c2dhU0FyS3lBcElIc0tDUWxuWlhSRWFYSmxZM1JwYjI1aGJFeHBaMmgwU1c1bWJ5Z2daR2x5WldOMGFXOXVZV3hNYVdkb2RITmJJR2tnWFN3Z1oyVnZiV1YwY25rc0lHUnBjbVZqZEV4cFoyaDBJQ2s3Q2drSlpHOTBUa3dnUFNCa2IzUW9JR2RsYjIxbGRISjVMbTV2Y20xaGJDd2daR2x5WldOMFRHbG5hSFF1WkdseVpXTjBhVzl1SUNrN0Nna0paR2x5WldOMFRHbG5hSFJEYjJ4dmNsOUVhV1ptZFhObElEMGdaR2x5WldOMFRHbG5hSFF1WTI5c2IzSTdDZ2tKZGt4cFoyaDBSbkp2Ym5RZ0t6MGdjMkYwZFhKaGRHVW9JR1J2ZEU1TUlDa2dLaUJrYVhKbFkzUk1hV2RvZEVOdmJHOXlYMFJwWm1aMWMyVTdDZ2tKSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNRbDJUR2xuYUhSQ1lXTnJJQ3M5SUhOaGRIVnlZWFJsS0NBdElHUnZkRTVNSUNrZ0tpQmthWEpsWTNSTWFXZG9kRU52Ykc5eVgwUnBabVoxYzJVN0Nna0pJMlZ1WkdsbUNnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb2paVzVrYVdZS0kybG1JRTVWVFY5SVJVMUpYMHhKUjBoVVV5QStJREFLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlJUlUxSlgweEpSMGhVVXpzZ2FTQXJLeUFwSUhzS0NRbDJTVzVrYVhKbFkzUkdjbTl1ZENBclBTQm5aWFJJWlcxcGMzQm9aWEpsVEdsbmFIUkpjbkpoWkdsaGJtTmxLQ0JvWlcxcGMzQm9aWEpsVEdsbmFIUnpXeUJwSUYwc0lHZGxiMjFsZEhKNUxtNXZjbTFoYkNBcE93b0pDU05wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1FrSmRrbHVaR2x5WldOMFFtRmpheUFyUFNCblpYUklaVzFwYzNCb1pYSmxUR2xuYUhSSmNuSmhaR2xoYm1ObEtDQm9aVzFwYzNCb1pYSmxUR2xuYUhSeld5QnBJRjBzSUdKaFkydEhaVzl0WlhSeWVTNXViM0p0WVd3Z0tUc0tDUWtqWlc1a2FXWUtDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFptQXNJR2x3SUQwZ1lIVnVhV1p2Y20wZ1ltOXZiQ0J5WldObGFYWmxVMmhoWkc5M093cDFibWxtYjNKdElIWmxZek1nWVcxaWFXVnVkRXhwWjJoMFEyOXNiM0k3Q25WdWFXWnZjbTBnZG1Wak15QnNhV2RvZEZCeWIySmxXeUE1SUYwN0NuWmxZek1nYzJoSFpYUkpjbkpoWkdsaGJtTmxRWFFvSUdsdUlIWmxZek1nYm05eWJXRnNMQ0JwYmlCMlpXTXpJSE5vUTI5bFptWnBZMmxsYm5Seld5QTVJRjBnS1NCN0NnbG1iRzloZENCNElEMGdibTl5YldGc0xuZ3NJSGtnUFNCdWIzSnRZV3d1ZVN3Z2VpQTlJRzV2Y20xaGJDNTZPd29KZG1Wak15QnlaWE4xYkhRZ1BTQnphRU52WldabWFXTnBaVzUwYzFzZ01DQmRJQ29nTUM0NE9EWXlNamM3Q2dseVpYTjFiSFFnS3owZ2MyaERiMlZtWm1samFXVnVkSE5iSURFZ1hTQXFJREl1TUNBcUlEQXVOVEV4TmpZMElDb2dlVHNLQ1hKbGMzVnNkQ0FyUFNCemFFTnZaV1ptYVdOcFpXNTBjMXNnTWlCZElDb2dNaTR3SUNvZ01DNDFNVEUyTmpRZ0tpQjZPd29KY21WemRXeDBJQ3M5SUhOb1EyOWxabVpwWTJsbGJuUnpXeUF6SUYwZ0tpQXlMakFnS2lBd0xqVXhNVFkyTkNBcUlIZzdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJRFFnWFNBcUlESXVNQ0FxSURBdU5ESTVNRFF6SUNvZ2VDQXFJSGs3Q2dseVpYTjFiSFFnS3owZ2MyaERiMlZtWm1samFXVnVkSE5iSURVZ1hTQXFJREl1TUNBcUlEQXVOREk1TURReklDb2dlU0FxSUhvN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklEWWdYU0FxSUNnZ01DNDNORE14TWpVZ0tpQjZJQ29nZWlBdElEQXVNalEzTnpBNElDazdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJRGNnWFNBcUlESXVNQ0FxSURBdU5ESTVNRFF6SUNvZ2VDQXFJSG83Q2dseVpYTjFiSFFnS3owZ2MyaERiMlZtWm1samFXVnVkSE5iSURnZ1hTQXFJREF1TkRJNU1EUXpJQ29nS0NCNElDb2dlQ0F0SUhrZ0tpQjVJQ2s3Q2dseVpYUjFjbTRnY21WemRXeDBPd3A5Q25abFl6TWdaMlYwVEdsbmFIUlFjbTlpWlVseWNtRmthV0Z1WTJVb0lHTnZibk4wSUdsdUlIWmxZek1nYkdsbmFIUlFjbTlpWlZzZ09TQmRMQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkNBcElIc0tDWFpsWXpNZ2QyOXliR1JPYjNKdFlXd2dQU0JwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0J1YjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NYWmxZek1nYVhKeVlXUnBZVzVqWlNBOUlITm9SMlYwU1hKeVlXUnBZVzVqWlVGMEtDQjNiM0pzWkU1dmNtMWhiQ3dnYkdsbmFIUlFjbTlpWlNBcE93b0pjbVYwZFhKdUlHbHljbUZrYVdGdVkyVTdDbjBLZG1Wak15Qm5aWFJCYldKcFpXNTBUR2xuYUhSSmNuSmhaR2xoYm1ObEtDQmpiMjV6ZENCcGJpQjJaV016SUdGdFltbGxiblJNYVdkb2RFTnZiRzl5SUNrZ2V3b0pkbVZqTXlCcGNuSmhaR2xoYm1ObElEMGdZVzFpYVdWdWRFeHBaMmgwUTI5c2IzSTdDZ2x5WlhSMWNtNGdhWEp5WVdScFlXNWpaVHNLZlFwbWJHOWhkQ0JuWlhSRWFYTjBZVzVqWlVGMGRHVnVkV0YwYVc5dUtDQmpiMjV6ZENCcGJpQm1iRzloZENCc2FXZG9kRVJwYzNSaGJtTmxMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmpkWFJ2Wm1aRWFYTjBZVzVqWlN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWkdWallYbEZlSEJ2Ym1WdWRDQXBJSHNLQ1NOcFppQmtaV1pwYm1Wa0lDZ2dVRWhaVTBsRFFVeE1XVjlEVDFKU1JVTlVYMHhKUjBoVVV5QXBDZ2tKWm14dllYUWdaR2x6ZEdGdVkyVkdZV3hzYjJabUlEMGdNUzR3SUM4Z2JXRjRLQ0J3YjNjb0lHeHBaMmgwUkdsemRHRnVZMlVzSUdSbFkyRjVSWGh3YjI1bGJuUWdLU3dnTUM0d01TQXBPd29KQ1dsbUlDZ2dZM1YwYjJabVJHbHpkR0Z1WTJVZ1BpQXdMakFnS1NCN0Nna0pDV1JwYzNSaGJtTmxSbUZzYkc5bVppQXFQU0J3YjNjeUtDQnpZWFIxY21GMFpTZ2dNUzR3SUMwZ2NHOTNOQ2dnYkdsbmFIUkVhWE4wWVc1alpTQXZJR04xZEc5bVprUnBjM1JoYm1ObElDa2dLU0FwT3dvSkNYMEtDUWx5WlhSMWNtNGdaR2x6ZEdGdVkyVkdZV3hzYjJabU93b0pJMlZzYzJVS0NRbHBaaUFvSUdOMWRHOW1aa1JwYzNSaGJtTmxJRDRnTUM0d0lDWW1JR1JsWTJGNVJYaHdiMjVsYm5RZ1BpQXdMakFnS1NCN0Nna0pDWEpsZEhWeWJpQndiM2NvSUhOaGRIVnlZWFJsS0NBdElHeHBaMmgwUkdsemRHRnVZMlVnTHlCamRYUnZabVpFYVhOMFlXNWpaU0FySURFdU1DQXBMQ0JrWldOaGVVVjRjRzl1Wlc1MElDazdDZ2tKZlFvSkNYSmxkSFZ5YmlBeExqQTdDZ2tqWlc1a2FXWUtmUXBtYkc5aGRDQm5aWFJUY0c5MFFYUjBaVzUxWVhScGIyNG9JR052Ym5OMElHbHVJR1pzYjJGMElHTnZibVZEYjNOcGJtVXNJR052Ym5OMElHbHVJR1pzYjJGMElIQmxiblZ0WW5KaFEyOXphVzVsTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JoYm1kc1pVTnZjMmx1WlNBcElIc0tDWEpsZEhWeWJpQnpiVzl2ZEdoemRHVndLQ0JqYjI1bFEyOXphVzVsTENCd1pXNTFiV0p5WVVOdmMybHVaU3dnWVc1bmJHVkRiM05wYm1VZ0tUc0tmUW9qYVdZZ1RsVk5YMFJKVWw5TVNVZElWRk1nUGlBd0NnbHpkSEoxWTNRZ1JHbHlaV04wYVc5dVlXeE1hV2RvZENCN0Nna0pkbVZqTXlCa2FYSmxZM1JwYjI0N0Nna0pkbVZqTXlCamIyeHZjanNLQ1gwN0NnbDFibWxtYjNKdElFUnBjbVZqZEdsdmJtRnNUR2xuYUhRZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEhOYklFNVZUVjlFU1ZKZlRFbEhTRlJUSUYwN0NnbDJiMmxrSUdkbGRFUnBjbVZqZEdsdmJtRnNUR2xuYUhSSmJtWnZLQ0JqYjI1emRDQnBiaUJFYVhKbFkzUnBiMjVoYkV4cFoyaDBJR1JwY21WamRHbHZibUZzVEdsbmFIUXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJRzkxZENCSmJtTnBaR1Z1ZEV4cFoyaDBJR3hwWjJoMElDa2dld29KQ1d4cFoyaDBMbU52Ykc5eUlEMGdaR2x5WldOMGFXOXVZV3hNYVdkb2RDNWpiMnh2Y2pzS0NRbHNhV2RvZEM1a2FYSmxZM1JwYjI0Z1BTQmthWEpsWTNScGIyNWhiRXhwWjJoMExtUnBjbVZqZEdsdmJqc0tDUWxzYVdkb2RDNTJhWE5wWW14bElEMGdkSEoxWlRzS0NYMEtJMlZ1WkdsbUNpTnBaaUJPVlUxZlVFOUpUbFJmVEVsSFNGUlRJRDRnTUFvSmMzUnlkV04wSUZCdmFXNTBUR2xuYUhRZ2V3b0pDWFpsWXpNZ2NHOXphWFJwYjI0N0Nna0pkbVZqTXlCamIyeHZjanNLQ1FsbWJHOWhkQ0JrYVhOMFlXNWpaVHNLQ1FsbWJHOWhkQ0JrWldOaGVUc0tDWDA3Q2dsMWJtbG1iM0p0SUZCdmFXNTBUR2xuYUhRZ2NHOXBiblJNYVdkb2RITmJJRTVWVFY5UVQwbE9WRjlNU1VkSVZGTWdYVHNLQ1hadmFXUWdaMlYwVUc5cGJuUk1hV2RvZEVsdVptOG9JR052Ym5OMElHbHVJRkJ2YVc1MFRHbG5hSFFnY0c5cGJuUk1hV2RvZEN3Z1kyOXVjM1FnYVc0Z1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVN3Z2IzVjBJRWx1WTJsa1pXNTBUR2xuYUhRZ2JHbG5hSFFnS1NCN0Nna0pkbVZqTXlCc1ZtVmpkRzl5SUQwZ2NHOXBiblJNYVdkb2RDNXdiM05wZEdsdmJpQXRJR2RsYjIxbGRISjVMbkJ2YzJsMGFXOXVPd29KQ1d4cFoyaDBMbVJwY21WamRHbHZiaUE5SUc1dmNtMWhiR2w2WlNnZ2JGWmxZM1J2Y2lBcE93b0pDV1pzYjJGMElHeHBaMmgwUkdsemRHRnVZMlVnUFNCc1pXNW5kR2dvSUd4V1pXTjBiM0lnS1RzS0NRbHNhV2RvZEM1amIyeHZjaUE5SUhCdmFXNTBUR2xuYUhRdVkyOXNiM0k3Q2drSmJHbG5hSFF1WTI5c2IzSWdLajBnWjJWMFJHbHpkR0Z1WTJWQmRIUmxiblZoZEdsdmJpZ2diR2xuYUhSRWFYTjBZVzVqWlN3Z2NHOXBiblJNYVdkb2RDNWthWE4wWVc1alpTd2djRzlwYm5STWFXZG9kQzVrWldOaGVTQXBPd29KQ1d4cFoyaDBMblpwYzJsaWJHVWdQU0FvSUd4cFoyaDBMbU52Ykc5eUlDRTlJSFpsWXpNb0lEQXVNQ0FwSUNrN0NnbDlDaU5sYm1ScFpnb2phV1lnVGxWTlgxTlFUMVJmVEVsSFNGUlRJRDRnTUFvSmMzUnlkV04wSUZOd2IzUk1hV2RvZENCN0Nna0pkbVZqTXlCd2IzTnBkR2x2YmpzS0NRbDJaV016SUdScGNtVmpkR2x2YmpzS0NRbDJaV016SUdOdmJHOXlPd29KQ1dac2IyRjBJR1JwYzNSaGJtTmxPd29KQ1dac2IyRjBJR1JsWTJGNU93b0pDV1pzYjJGMElHTnZibVZEYjNNN0Nna0pabXh2WVhRZ2NHVnVkVzFpY21GRGIzTTdDZ2w5T3dvSmRXNXBabTl5YlNCVGNHOTBUR2xuYUhRZ2MzQnZkRXhwWjJoMGMxc2dUbFZOWDFOUVQxUmZURWxIU0ZSVElGMDdDZ2wyYjJsa0lHZGxkRk53YjNSTWFXZG9kRWx1Wm04b0lHTnZibk4wSUdsdUlGTndiM1JNYVdkb2RDQnpjRzkwVEdsbmFIUXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJRzkxZENCSmJtTnBaR1Z1ZEV4cFoyaDBJR3hwWjJoMElDa2dld29KQ1habFl6TWdiRlpsWTNSdmNpQTlJSE53YjNSTWFXZG9kQzV3YjNOcGRHbHZiaUF0SUdkbGIyMWxkSEo1TG5CdmMybDBhVzl1T3dvSkNXeHBaMmgwTG1ScGNtVmpkR2x2YmlBOUlHNXZjbTFoYkdsNlpTZ2diRlpsWTNSdmNpQXBPd29KQ1dac2IyRjBJR0Z1WjJ4bFEyOXpJRDBnWkc5MEtDQnNhV2RvZEM1a2FYSmxZM1JwYjI0c0lITndiM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLVHNLQ1FsbWJHOWhkQ0J6Y0c5MFFYUjBaVzUxWVhScGIyNGdQU0JuWlhSVGNHOTBRWFIwWlc1MVlYUnBiMjRvSUhOd2IzUk1hV2RvZEM1amIyNWxRMjl6TENCemNHOTBUR2xuYUhRdWNHVnVkVzFpY21GRGIzTXNJR0Z1WjJ4bFEyOXpJQ2s3Q2drSmFXWWdLQ0J6Y0c5MFFYUjBaVzUxWVhScGIyNGdQaUF3TGpBZ0tTQjdDZ2tKQ1dac2IyRjBJR3hwWjJoMFJHbHpkR0Z1WTJVZ1BTQnNaVzVuZEdnb0lHeFdaV04wYjNJZ0tUc0tDUWtKYkdsbmFIUXVZMjlzYjNJZ1BTQnpjRzkwVEdsbmFIUXVZMjlzYjNJZ0tpQnpjRzkwUVhSMFpXNTFZWFJwYjI0N0Nna0pDV3hwWjJoMExtTnZiRzl5SUNvOUlHZGxkRVJwYzNSaGJtTmxRWFIwWlc1MVlYUnBiMjRvSUd4cFoyaDBSR2x6ZEdGdVkyVXNJSE53YjNSTWFXZG9kQzVrYVhOMFlXNWpaU3dnYzNCdmRFeHBaMmgwTG1SbFkyRjVJQ2s3Q2drSkNXeHBaMmgwTG5acGMybGliR1VnUFNBb0lHeHBaMmgwTG1OdmJHOXlJQ0U5SUhabFl6TW9JREF1TUNBcElDazdDZ2tKZlNCbGJITmxJSHNLQ1FrSmJHbG5hSFF1WTI5c2IzSWdQU0IyWldNektDQXdMakFnS1RzS0NRa0piR2xuYUhRdWRtbHphV0pzWlNBOUlHWmhiSE5sT3dvSkNYMEtDWDBLSTJWdVpHbG1DaU5wWmlCT1ZVMWZVa1ZEVkY5QlVrVkJYMHhKUjBoVVV5QStJREFLQ1hOMGNuVmpkQ0JTWldOMFFYSmxZVXhwWjJoMElIc0tDUWwyWldNeklHTnZiRzl5T3dvSkNYWmxZek1nY0c5emFYUnBiMjQ3Q2drSmRtVmpNeUJvWVd4bVYybGtkR2c3Q2drSmRtVmpNeUJvWVd4bVNHVnBaMmgwT3dvSmZUc0tDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR3gwWTE4eE93bDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnNkR05mTWpzS0NYVnVhV1p2Y20wZ1VtVmpkRUZ5WldGTWFXZG9kQ0J5WldOMFFYSmxZVXhwWjJoMGMxc2dUbFZOWDFKRlExUmZRVkpGUVY5TVNVZElWRk1nWFRzS0kyVnVaR2xtQ2lOcFppQk9WVTFmU0VWTlNWOU1TVWRJVkZNZ1BpQXdDZ2x6ZEhKMVkzUWdTR1Z0YVhOd2FHVnlaVXhwWjJoMElIc0tDUWwyWldNeklHUnBjbVZqZEdsdmJqc0tDUWwyWldNeklITnJlVU52Ykc5eU93b0pDWFpsWXpNZ1ozSnZkVzVrUTI5c2IzSTdDZ2w5T3dvSmRXNXBabTl5YlNCSVpXMXBjM0JvWlhKbFRHbG5hSFFnYUdWdGFYTndhR1Z5WlV4cFoyaDBjMXNnVGxWTlgwaEZUVWxmVEVsSFNGUlRJRjA3Q2dsMlpXTXpJR2RsZEVobGJXbHpjR2hsY21WTWFXZG9kRWx5Y21Ga2FXRnVZMlVvSUdOdmJuTjBJR2x1SUVobGJXbHpjR2hsY21WTWFXZG9kQ0JvWlcxcFRHbG5hSFFzSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0lDa2dld29KQ1dac2IyRjBJR1J2ZEU1TUlEMGdaRzkwS0NCdWIzSnRZV3dzSUdobGJXbE1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tUc0tDUWxtYkc5aGRDQm9aVzFwUkdsbVpuVnpaVmRsYVdkb2RDQTlJREF1TlNBcUlHUnZkRTVNSUNzZ01DNDFPd29KQ1habFl6TWdhWEp5WVdScFlXNWpaU0E5SUcxcGVDZ2dhR1Z0YVV4cFoyaDBMbWR5YjNWdVpFTnZiRzl5TENCb1pXMXBUR2xuYUhRdWMydDVRMjlzYjNJc0lHaGxiV2xFYVdabWRYTmxWMlZwWjJoMElDazdDZ2tKY21WMGRYSnVJR2x5Y21Ga2FXRnVZMlU3Q2dsOUNpTmxibVJwWm1Bc0lISndJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUlU1V1RVRlFJQ2tLQ1NOcFptUmxaaUJGVGxaTlFWQmZUVTlFUlY5U1JVWlNRVU5VU1U5T0Nna0pkVzVwWm05eWJTQm1iRzloZENCeVpXWnlZV04wYVc5dVVtRjBhVzg3Q2dralpXNWthV1lLQ1habFl6TWdaMlYwU1VKTVNYSnlZV1JwWVc1alpTZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dnS1NCN0Nna0pJMmxtSUdSbFptbHVaV1FvSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1ZmVlZZZ0tRb0pDUWwyWldNeklIZHZjbXhrVG05eWJXRnNJRDBnYVc1MlpYSnpaVlJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnYm05eWJXRnNMQ0IyYVdWM1RXRjBjbWw0SUNrN0Nna0pDWFpsWXpRZ1pXNTJUV0Z3UTI5c2IzSWdQU0IwWlhoMGRYSmxRM1ZpWlZWV0tDQmxiblpOWVhBc0lIZHZjbXhrVG05eWJXRnNMQ0F4TGpBZ0tUc0tDUWtKY21WMGRYSnVJRkJKSUNvZ1pXNTJUV0Z3UTI5c2IzSXVjbWRpSUNvZ1pXNTJUV0Z3U1c1MFpXNXphWFI1T3dvSkNTTmxiSE5sQ2drSkNYSmxkSFZ5YmlCMlpXTXpLQ0F3TGpBZ0tUc0tDUWtqWlc1a2FXWUtDWDBLQ1habFl6TWdaMlYwU1VKTVVtRmthV0Z1WTJVb0lHTnZibk4wSUdsdUlIWmxZek1nZG1sbGQwUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3c0lHTnZibk4wSUdsdUlHWnNiMkYwSUhKdmRXZG9ibVZ6Y3lBcElIc0tDUWtqYVdZZ1pHVm1hVzVsWkNnZ1JVNVdUVUZRWDFSWlVFVmZRMVZDUlY5VlZpQXBDZ2tKQ1habFl6TWdjbVZtYkdWamRGWmxZenNLQ1FrSkkybG1aR1ZtSUVWT1ZrMUJVRjlOVDBSRlgxSkZSa3hGUTFSSlQwNEtDUWtKQ1hKbFpteGxZM1JXWldNZ1BTQnlaV1pzWldOMEtDQXRJSFpwWlhkRWFYSXNJRzV2Y20xaGJDQXBPd29KQ1FrSmNtVm1iR1ZqZEZabFl5QTlJRzV2Y20xaGJHbDZaU2dnYldsNEtDQnlaV1pzWldOMFZtVmpMQ0J1YjNKdFlXd3NJSEp2ZFdkb2JtVnpjeUFxSUhKdmRXZG9ibVZ6Y3lrZ0tUc0tDUWtKSTJWc2MyVUtDUWtKQ1hKbFpteGxZM1JXWldNZ1BTQnlaV1p5WVdOMEtDQXRJSFpwWlhkRWFYSXNJRzV2Y20xaGJDd2djbVZtY21GamRHbHZibEpoZEdsdklDazdDZ2tKQ1NObGJtUnBaZ29KQ1FseVpXWnNaV04wVm1WaklEMGdhVzUyWlhKelpWUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2djbVZtYkdWamRGWmxZeXdnZG1sbGQwMWhkSEpwZUNBcE93b0pDUWwyWldNMElHVnVkazFoY0VOdmJHOXlJRDBnZEdWNGRIVnlaVU4xWW1WVlZpZ2daVzUyVFdGd0xDQnlaV1pzWldOMFZtVmpMQ0J5YjNWbmFHNWxjM01nS1RzS0NRa0pjbVYwZFhKdUlHVnVkazFoY0VOdmJHOXlMbkpuWWlBcUlHVnVkazFoY0VsdWRHVnVjMmwwZVRzS0NRa2paV3h6WlFvSkNRbHlaWFIxY200Z2RtVmpNeWdnTUM0d0lDazdDZ2tKSTJWdVpHbG1DZ2w5Q2lObGJtUnBabUFzSUhOd0lEMGdZRlJ2YjI1TllYUmxjbWxoYkNCdFlYUmxjbWxoYkRzS2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJRDBnWkdsbVpuVnpaVU52Ykc5eUxuSm5ZanRnTENCdmNDQTlJR0IyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLYzNSeWRXTjBJRlJ2YjI1TllYUmxjbWxoYkNCN0NnbDJaV016SUdScFptWjFjMlZEYjJ4dmNqc0tmVHNLZG05cFpDQlNSVjlFYVhKbFkzUmZWRzl2YmlnZ1kyOXVjM1FnYVc0Z1NXNWphV1JsYm5STWFXZG9kQ0JrYVhKbFkzUk1hV2RvZEN3Z1kyOXVjM1FnYVc0Z1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVN3Z1kyOXVjM1FnYVc0Z1ZHOXZiazFoZEdWeWFXRnNJRzFoZEdWeWFXRnNMQ0JwYm05MWRDQlNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0FwSUhzS0NYWmxZek1nYVhKeVlXUnBZVzVqWlNBOUlHZGxkRWR5WVdScFpXNTBTWEp5WVdScFlXNWpaU2dnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tTQXFJR1JwY21WamRFeHBaMmgwTG1OdmJHOXlPd29KY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFJHbG1ablZ6WlNBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOU1ZVzFpWlhKMEtDQnRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnS1RzS2ZRcDJiMmxrSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlY5VWIyOXVLQ0JqYjI1emRDQnBiaUIyWldNeklHbHljbUZrYVdGdVkyVXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJR052Ym5OMElHbHVJRlJ2YjI1TllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ0tTQjdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZUR0Z0WW1WeWRDZ2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNrN0NuMEtJMlJsWm1sdVpTQlNSVjlFYVhKbFkzUUpDUWtKVWtWZlJHbHlaV04wWDFSdmIyNEtJMlJsWm1sdVpTQlNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVUpDVkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaVjlVYjI5dUNpTmtaV1pwYm1VZ1RXRjBaWEpwWVd4ZlRHbG5hSFJRY205aVpVeFBSQ2dnYldGMFpYSnBZV3dnS1Frb01DbGdMQ0JoY0NBOUlHQkNiR2x1YmxCb2IyNW5UV0YwWlhKcFlXd2diV0YwWlhKcFlXdzdDbTFoZEdWeWFXRnNMbVJwWm1aMWMyVkRiMnh2Y2lBOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJN0NtMWhkR1Z5YVdGc0xuTndaV04xYkdGeVEyOXNiM0lnUFNCemNHVmpkV3hoY2pzS2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKVGFHbHVhVzVsYzNNZ1BTQnphR2x1YVc1bGMzTTdDbTFoZEdWeWFXRnNMbk53WldOMWJHRnlVM1J5Wlc1bmRHZ2dQU0J6Y0dWamRXeGhjbE4wY21WdVozUm9PMkFzSUd4d0lEMGdZSFpoY25scGJtY2dkbVZqTXlCMlZtbGxkMUJ2YzJsMGFXOXVPd3B6ZEhKMVkzUWdRbXhwYm01UWFHOXVaMDFoZEdWeWFXRnNJSHNLQ1habFl6TWdaR2xtWm5WelpVTnZiRzl5T3dvSmRtVmpNeUJ6Y0dWamRXeGhja052Ykc5eU93b0pabXh2WVhRZ2MzQmxZM1ZzWVhKVGFHbHVhVzVsYzNNN0NnbG1iRzloZENCemNHVmpkV3hoY2xOMGNtVnVaM1JvT3dwOU93cDJiMmxrSUZKRlgwUnBjbVZqZEY5Q2JHbHVibEJvYjI1bktDQmpiMjV6ZENCcGJpQkpibU5wWkdWdWRFeHBaMmgwSUdScGNtVmpkRXhwWjJoMExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQmpiMjV6ZENCcGJpQkNiR2x1YmxCb2IyNW5UV0YwWlhKcFlXd2diV0YwWlhKcFlXd3NJR2x1YjNWMElGSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJQ2tnZXdvSlpteHZZWFFnWkc5MFRrd2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHUnBjbVZqZEV4cFoyaDBMbVJwY21WamRHbHZiaUFwSUNrN0NnbDJaV016SUdseWNtRmthV0Z1WTJVZ1BTQmtiM1JPVENBcUlHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pjbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5TVlXMWlaWEowS0NCdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdLVHNLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRGTndaV04xYkdGeUlDczlJR2x5Y21Ga2FXRnVZMlVnS2lCQ1VrUkdYMEpzYVc1dVVHaHZibWNvSUdScGNtVmpkRXhwWjJoMExtUnBjbVZqZEdsdmJpd2daMlZ2YldWMGNua3VkbWxsZDBScGNpd2daMlZ2YldWMGNua3VibTl5YldGc0xDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5TENCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2xOb2FXNXBibVZ6Y3lBcElDb2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSlRkSEpsYm1kMGFEc0tmUXAyYjJsa0lGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpWOUNiR2x1YmxCb2IyNW5LQ0JqYjI1emRDQnBiaUIyWldNeklHbHljbUZrYVdGdVkyVXNJR052Ym5OMElHbHVJRWRsYjIxbGRISnBZME52Ym5SbGVIUWdaMlZ2YldWMGNua3NJR052Ym5OMElHbHVJRUpzYVc1dVVHaHZibWROWVhSbGNtbGhiQ0J0WVhSbGNtbGhiQ3dnYVc1dmRYUWdVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1NCN0NnbHlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3owZ2FYSnlZV1JwWVc1alpTQXFJRUpTUkVaZlRHRnRZbVZ5ZENnZ2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJQ2s3Q24wS0kyUmxabWx1WlNCU1JWOUVhWEpsWTNRSkNRa0pVa1ZmUkdseVpXTjBYMEpzYVc1dVVHaHZibWNLSTJSbFptbHVaU0JTUlY5SmJtUnBjbVZqZEVScFptWjFjMlVKQ1ZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlY5Q2JHbHVibEJvYjI1bkNpTmtaV1pwYm1VZ1RXRjBaWEpwWVd4ZlRHbG5hSFJRY205aVpVeFBSQ2dnYldGMFpYSnBZV3dnS1Frb01DbGdMQ0JqY0NBOUlHQlFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc093cHRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpSUNvZ0tDQXhMakFnTFNCdFpYUmhiRzVsYzNOR1lXTjBiM0lnS1RzS2RtVmpNeUJrZUhrZ1BTQnRZWGdvSUdGaWN5Z2daRVprZUNnZ1oyVnZiV1YwY25sT2IzSnRZV3dnS1NBcExDQmhZbk1vSUdSR1pIa29JR2RsYjIxbGRISjVUbTl5YldGc0lDa2dLU0FwT3dwbWJHOWhkQ0JuWlc5dFpYUnllVkp2ZFdkb2JtVnpjeUE5SUcxaGVDZ2diV0Y0S0NCa2VIa3VlQ3dnWkhoNUxua2dLU3dnWkhoNUxub2dLVHNLYldGMFpYSnBZV3d1Y205MVoyaHVaWE56SUQwZ2JXRjRLQ0J5YjNWbmFHNWxjM05HWVdOMGIzSXNJREF1TURVeU5TQXBPMjFoZEdWeWFXRnNMbkp2ZFdkb2JtVnpjeUFyUFNCblpXOXRaWFJ5ZVZKdmRXZG9ibVZ6Y3pzS2JXRjBaWEpwWVd3dWNtOTFaMmh1WlhOeklEMGdiV2x1S0NCdFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNc0lERXVNQ0FwT3dvamFXWmtaV1lnU1U5U0Nna2phV1prWldZZ1UxQkZRMVZNUVZJS0NRbG1iRzloZENCemNHVmpkV3hoY2tsdWRHVnVjMmwwZVVaaFkzUnZjaUE5SUhOd1pXTjFiR0Z5U1c1MFpXNXphWFI1T3dvSkNYWmxZek1nYzNCbFkzVnNZWEpEYjJ4dmNrWmhZM1J2Y2lBOUlITndaV04xYkdGeVEyOXNiM0k3Q2drSkkybG1aR1ZtSUZWVFJWOVRVRVZEVlV4QlVrbE9WRVZPVTBsVVdVMUJVQW9KQ1FsemNHVmpkV3hoY2tsdWRHVnVjMmwwZVVaaFkzUnZjaUFxUFNCMFpYaDBkWEpsTWtRb0lITndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndMQ0IyVlhZZ0tTNWhPd29KQ1NObGJtUnBaZ29KQ1NOcFptUmxaaUJWVTBWZlUxQkZRMVZNUVZKRFQweFBVazFCVUFvSkNRbHpjR1ZqZFd4aGNrTnZiRzl5Um1GamRHOXlJQ285SUhOd1pXTjFiR0Z5UTI5c2IzSk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQjBaWGgwZFhKbE1rUW9JSE53WldOMWJHRnlRMjlzYjNKTllYQXNJSFpWZGlBcElDa3VjbWRpT3dvSkNTTmxibVJwWmdvSkNXMWhkR1Z5YVdGc0xuTndaV04xYkdGeVJqa3dJRDBnYldsNEtDQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVWmhZM1J2Y2l3Z01TNHdMQ0J0WlhSaGJHNWxjM05HWVdOMGIzSWdLVHNLQ1NObGJITmxDZ2tKWm14dllYUWdjM0JsWTNWc1lYSkpiblJsYm5OcGRIbEdZV04wYjNJZ1BTQXhMakE3Q2drSmRtVmpNeUJ6Y0dWamRXeGhja052Ykc5eVJtRmpkRzl5SUQwZ2RtVmpNeWdnTVM0d0lDazdDZ2tKYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpHT1RBZ1BTQXhMakE3Q2dralpXNWthV1lLQ1cxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSWdQU0J0YVhnb0lHMXBiaWdnY0c5M01pZ2dLQ0JwYjNJZ0xTQXhMakFnS1NBdklDZ2dhVzl5SUNzZ01TNHdJQ2tnS1NBcUlITndaV04xYkdGeVEyOXNiM0pHWVdOMGIzSXNJSFpsWXpNb0lERXVNQ0FwSUNrZ0tpQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVWmhZM1J2Y2l3Z1pHbG1ablZ6WlVOdmJHOXlMbkpuWWl3Z2JXVjBZV3h1WlhOelJtRmpkRzl5SUNrN0NpTmxiSE5sQ2dsdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tOdmJHOXlJRDBnYldsNEtDQjJaV016S0NBd0xqQTBJQ2tzSUdScFptWjFjMlZEYjJ4dmNpNXlaMklzSUcxbGRHRnNibVZ6YzBaaFkzUnZjaUFwT3dvSmJXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKR09UQWdQU0F4TGpBN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZBb0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBJRDBnWTJ4bFlYSmpiMkYwT3dvSmJXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklEMGdZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpPd29KYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwUmpBZ1BTQjJaV016S0NBd0xqQTBJQ2s3Q2dsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhSR09UQWdQU0F4TGpBN0Nna2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWRTFCVUFvSkNXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRDQXFQU0IwWlhoMGRYSmxNa1FvSUdOc1pXRnlZMjloZEUxaGNDd2dkbFYySUNrdWVEc0tDU05sYm1ScFpnb0pJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlJmVWs5VlIwaE9SVk5UVFVGUUNna0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJQ285SUhSbGVIUjFjbVV5UkNnZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndMQ0IyVlhZZ0tTNTVPd29KSTJWdVpHbG1DZ2x0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFFnUFNCellYUjFjbUYwWlNnZ2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMElDazdDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUE5SUcxaGVDZ2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpMQ0F3TGpBMU1qVWdLVHNLQ1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBclBTQm5aVzl0WlhSeWVWSnZkV2RvYm1WemN6c0tDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUE5SUcxcGJpZ2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpMQ0F4TGpBZ0tUc0tJMlZ1WkdsbUNpTnBabVJsWmlCVlUwVmZVMGhGUlU0S0NXMWhkR1Z5YVdGc0xuTm9aV1Z1UTI5c2IzSWdQU0J6YUdWbGJrTnZiRzl5T3dvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGtOUFRFOVNUVUZRQ2drSmJXRjBaWEpwWVd3dWMyaGxaVzVEYjJ4dmNpQXFQU0J6YUdWbGJrTnZiRzl5VFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnZEdWNGRIVnlaVEpFS0NCemFHVmxia052Ykc5eVRXRndMQ0IyVlhZZ0tTQXBMbkpuWWpzS0NTTmxibVJwWmdvSmJXRjBaWEpwWVd3dWMyaGxaVzVTYjNWbmFHNWxjM01nUFNCamJHRnRjQ2dnYzJobFpXNVNiM1ZuYUc1bGMzTXNJREF1TURjc0lERXVNQ0FwT3dvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGxKUFZVZElUa1ZUVTAxQlVBb0pDVzFoZEdWeWFXRnNMbk5vWldWdVVtOTFaMmh1WlhOeklDbzlJSFJsZUhSMWNtVXlSQ2dnYzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFzSUhaVmRpQXBMbUU3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnYUhBZ1BTQmdjM1J5ZFdOMElGQm9lWE5wWTJGc1RXRjBaWEpwWVd3Z2V3b0pkbVZqTXlCa2FXWm1kWE5sUTI5c2IzSTdDZ2xtYkc5aGRDQnliM1ZuYUc1bGMzTTdDZ2wyWldNeklITndaV04xYkdGeVEyOXNiM0k3Q2dsbWJHOWhkQ0J6Y0dWamRXeGhja1k1TURzS0NTTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2tKWm14dllYUWdZMnhsWVhKamIyRjBPd29KQ1dac2IyRjBJR05zWldGeVkyOWhkRkp2ZFdkb2JtVnpjenNLQ1FsMlpXTXpJR05zWldGeVkyOWhkRVl3T3dvSkNXWnNiMkYwSUdOc1pXRnlZMjloZEVZNU1Ec0tDU05sYm1ScFpnb0pJMmxtWkdWbUlGVlRSVjlUU0VWRlRnb0pDWFpsWXpNZ2MyaGxaVzVEYjJ4dmNqc0tDUWxtYkc5aGRDQnphR1ZsYmxKdmRXZG9ibVZ6Y3pzS0NTTmxibVJwWmdwOU93cDJaV016SUdOc1pXRnlZMjloZEZOd1pXTjFiR0Z5SUQwZ2RtVmpNeWdnTUM0d0lDazdDblpsWXpNZ2MyaGxaVzVUY0dWamRXeGhjaUE5SUhabFl6TW9JREF1TUNBcE93cG1iRzloZENCSlFreFRhR1ZsYmtKU1JFWW9JR052Ym5OMElHbHVJSFpsWXpNZ2JtOXliV0ZzTENCamIyNXpkQ0JwYmlCMlpXTXpJSFpwWlhkRWFYSXNJR052Ym5OMElHbHVJR1pzYjJGMElISnZkV2RvYm1WemN5a2dld29KWm14dllYUWdaRzkwVGxZZ1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCdWIzSnRZV3dzSUhacFpYZEVhWElnS1NBcE93b0pabXh2WVhRZ2NqSWdQU0J5YjNWbmFHNWxjM01nS2lCeWIzVm5hRzVsYzNNN0NnbG1iRzloZENCaElEMGdjbTkxWjJodVpYTnpJRHdnTUM0eU5TQS9JQzB6TXprdU1pQXFJSEl5SUNzZ01UWXhMalFnS2lCeWIzVm5hRzVsYzNNZ0xTQXlOUzQ1SURvZ0xUZ3VORGdnS2lCeU1pQXJJREUwTGpNZ0tpQnliM1ZuYUc1bGMzTWdMU0E1TGprMU93b0pabXh2WVhRZ1lpQTlJSEp2ZFdkb2JtVnpjeUE4SURBdU1qVWdQeUEwTkM0d0lDb2djaklnTFNBeU15NDNJQ29nY205MVoyaHVaWE56SUNzZ015NHlOaUE2SURFdU9UY2dLaUJ5TWlBdElETXVNamNnS2lCeWIzVm5hRzVsYzNNZ0t5QXdMamN5T3dvSlpteHZZWFFnUkVjZ1BTQmxlSEFvSUdFZ0tpQmtiM1JPVmlBcklHSWdLU0FySUNnZ2NtOTFaMmh1WlhOeklEd2dNQzR5TlNBL0lEQXVNQ0E2SURBdU1TQXFJQ2dnY205MVoyaHVaWE56SUMwZ01DNHlOU0FwSUNrN0NnbHlaWFIxY200Z2MyRjBkWEpoZEdVb0lFUkhJQ29nVWtWRFNWQlNUME5CVEY5UVNTQXBPd3A5Q25abFl6SWdSRVpIUVhCd2NtOTRLQ0JqYjI1emRDQnBiaUIyWldNeklHNXZjbTFoYkN3Z1kyOXVjM1FnYVc0Z2RtVmpNeUIyYVdWM1JHbHlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnliM1ZuYUc1bGMzTWdLU0I3Q2dsbWJHOWhkQ0JrYjNST1ZpQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHNXZjbTFoYkN3Z2RtbGxkMFJwY2lBcElDazdDZ2xqYjI1emRDQjJaV00wSUdNd0lEMGdkbVZqTkNnZ0xTQXhMQ0F0SURBdU1ESTNOU3dnTFNBd0xqVTNNaXdnTUM0d01qSWdLVHNLQ1dOdmJuTjBJSFpsWXpRZ1l6RWdQU0IyWldNMEtDQXhMQ0F3TGpBME1qVXNJREV1TURRc0lDMGdNQzR3TkNBcE93b0pkbVZqTkNCeUlEMGdjbTkxWjJodVpYTnpJQ29nWXpBZ0t5QmpNVHNLQ1dac2IyRjBJR0V3TURRZ1BTQnRhVzRvSUhJdWVDQXFJSEl1ZUN3Z1pYaHdNaWdnTFNBNUxqSTRJQ29nWkc5MFRsWWdLU0FwSUNvZ2NpNTRJQ3NnY2k1NU93b0pkbVZqTWlCbVlXSWdQU0IyWldNeUtDQXRJREV1TURRc0lERXVNRFFnS1NBcUlHRXdNRFFnS3lCeUxucDNPd29KY21WMGRYSnVJR1poWWpzS2ZRcDJaV016SUVWdWRtbHliMjV0Wlc1MFFsSkVSaWdnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3c0lHTnZibk4wSUdsdUlIWmxZek1nZG1sbGQwUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QnpjR1ZqZFd4aGNrTnZiRzl5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J6Y0dWamRXeGhja1k1TUN3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnY205MVoyaHVaWE56SUNrZ2V3b0pkbVZqTWlCbVlXSWdQU0JFUmtkQmNIQnliM2dvSUc1dmNtMWhiQ3dnZG1sbGQwUnBjaXdnY205MVoyaHVaWE56SUNrN0NnbHlaWFIxY200Z2MzQmxZM1ZzWVhKRGIyeHZjaUFxSUdaaFlpNTRJQ3NnYzNCbFkzVnNZWEpHT1RBZ0tpQm1ZV0l1ZVRzS2ZRcDJiMmxrSUdOdmJYQjFkR1ZOZFd4MGFYTmpZWFIwWlhKcGJtY29JR052Ym5OMElHbHVJSFpsWXpNZ2JtOXliV0ZzTENCamIyNXpkQ0JwYmlCMlpXTXpJSFpwWlhkRWFYSXNJR052Ym5OMElHbHVJSFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjM0JsWTNWc1lYSkdPVEFzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEp2ZFdkb2JtVnpjeXdnYVc1dmRYUWdkbVZqTXlCemFXNW5iR1ZUWTJGMGRHVnlMQ0JwYm05MWRDQjJaV016SUcxMWJIUnBVMk5oZEhSbGNpQXBJSHNLQ1habFl6SWdabUZpSUQwZ1JFWkhRWEJ3Y205NEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJc0lISnZkV2RvYm1WemN5QXBPd29KZG1Wak15QkdjM05GYzNNZ1BTQnpjR1ZqZFd4aGNrTnZiRzl5SUNvZ1ptRmlMbmdnS3lCemNHVmpkV3hoY2tZNU1DQXFJR1poWWk1NU93b0pabXh2WVhRZ1JYTnpJRDBnWm1GaUxuZ2dLeUJtWVdJdWVUc0tDV1pzYjJGMElFVnRjeUE5SURFdU1DQXRJRVZ6Y3pzS0NYWmxZek1nUm1GMlp5QTlJSE53WldOMWJHRnlRMjlzYjNJZ0t5QW9JREV1TUNBdElITndaV04xYkdGeVEyOXNiM0lnS1NBcUlEQXVNRFEzTmpFNU93bDJaV016SUVadGN5QTlJRVp6YzBWemN5QXFJRVpoZG1jZ0x5QW9JREV1TUNBdElFVnRjeUFxSUVaaGRtY2dLVHNLQ1hOcGJtZHNaVk5qWVhSMFpYSWdLejBnUm5OelJYTnpPd29KYlhWc2RHbFRZMkYwZEdWeUlDczlJRVp0Y3lBcUlFVnRjenNLZlFvamFXWWdUbFZOWDFKRlExUmZRVkpGUVY5TVNVZElWRk1nUGlBd0NnbDJiMmxrSUZKRlgwUnBjbVZqZEY5U1pXTjBRWEpsWVY5UWFIbHphV05oYkNnZ1kyOXVjM1FnYVc0Z1VtVmpkRUZ5WldGTWFXZG9kQ0J5WldOMFFYSmxZVXhwWjJoMExDQmpiMjV6ZENCcGJpQkhaVzl0WlhSeWFXTkRiMjUwWlhoMElHZGxiMjFsZEhKNUxDQmpiMjV6ZENCcGJpQlFhSGx6YVdOaGJFMWhkR1Z5YVdGc0lHMWhkR1Z5YVdGc0xDQnBibTkxZENCU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBJSHNLQ1FsMlpXTXpJRzV2Y20xaGJDQTlJR2RsYjIxbGRISjVMbTV2Y20xaGJEc0tDUWwyWldNeklIWnBaWGRFYVhJZ1BTQm5aVzl0WlhSeWVTNTJhV1YzUkdseU93b0pDWFpsWXpNZ2NHOXphWFJwYjI0Z1BTQm5aVzl0WlhSeWVTNXdiM05wZEdsdmJqc0tDUWwyWldNeklHeHBaMmgwVUc5eklEMGdjbVZqZEVGeVpXRk1hV2RvZEM1d2IzTnBkR2x2YmpzS0NRbDJaV016SUdoaGJHWlhhV1IwYUNBOUlISmxZM1JCY21WaFRHbG5hSFF1YUdGc1psZHBaSFJvT3dvSkNYWmxZek1nYUdGc1praGxhV2RvZENBOUlISmxZM1JCY21WaFRHbG5hSFF1YUdGc1praGxhV2RvZERzS0NRbDJaV016SUd4cFoyaDBRMjlzYjNJZ1BTQnlaV04wUVhKbFlVeHBaMmgwTG1OdmJHOXlPd29KQ1dac2IyRjBJSEp2ZFdkb2JtVnpjeUE5SUcxaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3pzS0NRbDJaV016SUhKbFkzUkRiMjl5WkhOYklEUWdYVHNLQ1FseVpXTjBRMjl2Y21Seld5QXdJRjBnUFNCc2FXZG9kRkJ2Y3lBcklHaGhiR1pYYVdSMGFDQXRJR2hoYkdaSVpXbG5hSFE3Q1FseVpXTjBRMjl2Y21Seld5QXhJRjBnUFNCc2FXZG9kRkJ2Y3lBdElHaGhiR1pYYVdSMGFDQXRJR2hoYkdaSVpXbG5hSFE3Q2drSmNtVmpkRU52YjNKa2Mxc2dNaUJkSUQwZ2JHbG5hSFJRYjNNZ0xTQm9ZV3htVjJsa2RHZ2dLeUJvWVd4bVNHVnBaMmgwT3dvSkNYSmxZM1JEYjI5eVpITmJJRE1nWFNBOUlHeHBaMmgwVUc5eklDc2dhR0ZzWmxkcFpIUm9JQ3NnYUdGc1praGxhV2RvZERzS0NRbDJaV015SUhWMklEMGdURlJEWDFWMktDQnViM0p0WVd3c0lIWnBaWGRFYVhJc0lISnZkV2RvYm1WemN5QXBPd29KQ1habFl6UWdkREVnUFNCMFpYaDBkWEpsTWtRb0lHeDBZMTh4TENCMWRpQXBPd29KQ1habFl6UWdkRElnUFNCMFpYaDBkWEpsTWtRb0lHeDBZMTh5TENCMWRpQXBPd29KQ1cxaGRETWdiVWx1ZGlBOUlHMWhkRE1vQ2drSkNYWmxZek1vSUhReExuZ3NJREFzSUhReExua2dLU3dLQ1FrSmRtVmpNeWdnSUNBZ01Dd2dNU3dnSUNBZ01DQXBMQW9KQ1FsMlpXTXpLQ0IwTVM1NkxDQXdMQ0IwTVM1M0lDa0tDUWtwT3dvSkNYWmxZek1nWm5KbGMyNWxiQ0E5SUNnZ2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKRGIyeHZjaUFxSUhReUxuZ2dLeUFvSUhabFl6TW9JREV1TUNBcElDMGdiV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkRiMnh2Y2lBcElDb2dkREl1ZVNBcE93b0pDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEZOd1pXTjFiR0Z5SUNzOUlHeHBaMmgwUTI5c2IzSWdLaUJtY21WemJtVnNJQ29nVEZSRFgwVjJZV3gxWVhSbEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJc0lIQnZjMmwwYVc5dUxDQnRTVzUyTENCeVpXTjBRMjl2Y21SeklDazdDZ2tKY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFJHbG1ablZ6WlNBclBTQnNhV2RvZEVOdmJHOXlJQ29nYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDb2dURlJEWDBWMllXeDFZWFJsS0NCdWIzSnRZV3dzSUhacFpYZEVhWElzSUhCdmMybDBhVzl1TENCdFlYUXpLQ0F4TGpBZ0tTd2djbVZqZEVOdmIzSmtjeUFwT3dvSmZRb2paVzVrYVdZS2RtOXBaQ0JTUlY5RWFYSmxZM1JmVUdoNWMybGpZV3dvSUdOdmJuTjBJR2x1SUVsdVkybGtaVzUwVEdsbmFIUWdaR2x5WldOMFRHbG5hSFFzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUdOdmJuTjBJR2x1SUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dnYldGMFpYSnBZV3dzSUdsdWIzVjBJRkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUNrZ2V3b0pabXh2WVhRZ1pHOTBUa3dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJR1JwY21WamRFeHBaMmgwTG1ScGNtVmpkR2x2YmlBcElDazdDZ2wyWldNeklHbHljbUZrYVdGdVkyVWdQU0JrYjNST1RDQXFJR1JwY21WamRFeHBaMmgwTG1OdmJHOXlPd29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NRbG1iRzloZENCa2IzUk9UR05qSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnWjJWdmJXVjBjbmt1WTJ4bFlYSmpiMkYwVG05eWJXRnNMQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0Z0tTQXBPd29KQ1habFl6TWdZMk5KY25KaFpHbGhibU5sSUQwZ1pHOTBUa3hqWXlBcUlHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pDV05zWldGeVkyOWhkRk53WldOMWJHRnlJQ3M5SUdOalNYSnlZV1JwWVc1alpTQXFJRUpTUkVaZlIwZFlLQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHZGxiMjFsZEhKNUxtTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFJqQXNJRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRVk1TUN3Z2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtDU05wWm1SbFppQlZVMFZmVTBoRlJVNEtDUWx6YUdWbGJsTndaV04xYkdGeUlDczlJR2x5Y21Ga2FXRnVZMlVnS2lCQ1VrUkdYMU5vWldWdUtDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUdkbGIyMWxkSEo1TG01dmNtMWhiQ3dnYldGMFpYSnBZV3d1YzJobFpXNURiMnh2Y2l3Z2JXRjBaWEpwWVd3dWMyaGxaVzVTYjNWbmFHNWxjM01nS1RzS0NTTmxibVJwWmdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBVM0JsWTNWc1lYSWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmUjBkWUtDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUdkbGIyMWxkSEo1TG01dmNtMWhiQ3dnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpd2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkdPVEFzSUcxaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3lBcE93b0pjbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5TVlXMWlaWEowS0NCdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdLVHNLZlFwMmIybGtJRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaVjlRYUhsemFXTmhiQ2dnWTI5dWMzUWdhVzRnZG1Wak15QnBjbkpoWkdsaGJtTmxMQ0JqYjI1emRDQnBiaUJIWlc5dFpYUnlhV05EYjI1MFpYaDBJR2RsYjIxbGRISjVMQ0JqYjI1emRDQnBiaUJRYUhsemFXTmhiRTFoZEdWeWFXRnNJRzFoZEdWeWFXRnNMQ0JwYm05MWRDQlNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0FwSUhzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCcGNuSmhaR2xoYm1ObElDb2dRbEpFUmw5TVlXMWlaWEowS0NCdFlYUmxjbWxoYkM1a2FXWm1kWE5sUTI5c2IzSWdLVHNLZlFwMmIybGtJRkpGWDBsdVpHbHlaV04wVTNCbFkzVnNZWEpmVUdoNWMybGpZV3dvSUdOdmJuTjBJR2x1SUhabFl6TWdjbUZrYVdGdVkyVXNJR052Ym5OMElHbHVJSFpsWXpNZ2FYSnlZV1JwWVc1alpTd2dZMjl1YzNRZ2FXNGdkbVZqTXlCamJHVmhjbU52WVhSU1lXUnBZVzVqWlN3Z1kyOXVjM1FnYVc0Z1IyVnZiV1YwY21salEyOXVkR1Y0ZENCblpXOXRaWFJ5ZVN3Z1kyOXVjM1FnYVc0Z1VHaDVjMmxqWVd4TllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRcElIc0tDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2drSlkyeGxZWEpqYjJGMFUzQmxZM1ZzWVhJZ0t6MGdZMnhsWVhKamIyRjBVbUZrYVdGdVkyVWdLaUJGYm5acGNtOXViV1Z1ZEVKU1JFWW9JR2RsYjIxbGRISjVMbU5zWldGeVkyOWhkRTV2Y20xaGJDd2daMlZ2YldWMGNua3VkbWxsZDBScGNpd2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBSakFzSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZNU1Dd2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJQ2s3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTRLQ1FsemFHVmxibE53WldOMWJHRnlJQ3M5SUdseWNtRmthV0Z1WTJVZ0tpQnRZWFJsY21saGJDNXphR1ZsYmtOdmJHOXlJQ29nU1VKTVUyaGxaVzVDVWtSR0tDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHMWhkR1Z5YVdGc0xuTm9aV1Z1VW05MVoyaHVaWE56SUNrN0Nna2paVzVrYVdZS0NYWmxZek1nYzJsdVoyeGxVMk5oZEhSbGNtbHVaeUE5SUhabFl6TW9JREF1TUNBcE93b0pkbVZqTXlCdGRXeDBhVk5qWVhSMFpYSnBibWNnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDWFpsWXpNZ1kyOXphVzVsVjJWcFoyaDBaV1JKY25KaFpHbGhibU5sSUQwZ2FYSnlZV1JwWVc1alpTQXFJRkpGUTBsUVVrOURRVXhmVUVrN0NnbGpiMjF3ZFhSbFRYVnNkR2x6WTJGMGRHVnlhVzVuS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdkbGIyMWxkSEo1TG5acFpYZEVhWElzSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5UTI5c2IzSXNJRzFoZEdWeWFXRnNMbk53WldOMWJHRnlSamt3TENCdFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNc0lITnBibWRzWlZOallYUjBaWEpwYm1jc0lHMTFiSFJwVTJOaGRIUmxjbWx1WnlBcE93b0pkbVZqTXlCa2FXWm1kWE5sSUQwZ2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJQ29nS0NBeExqQWdMU0FvSUhOcGJtZHNaVk5qWVhSMFpYSnBibWNnS3lCdGRXeDBhVk5qWVhSMFpYSnBibWNnS1NBcE93b0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSVGNHVmpkV3hoY2lBclBTQnlZV1JwWVc1alpTQXFJSE5wYm1kc1pWTmpZWFIwWlhKcGJtYzdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRGTndaV04xYkdGeUlDczlJRzExYkhScFUyTmhkSFJsY21sdVp5QXFJR052YzJsdVpWZGxhV2RvZEdWa1NYSnlZV1JwWVc1alpUc0tDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBclBTQmthV1ptZFhObElDb2dZMjl6YVc1bFYyVnBaMmgwWldSSmNuSmhaR2xoYm1ObE93cDlDaU5rWldacGJtVWdVa1ZmUkdseVpXTjBDUWtKQ1ZKRlgwUnBjbVZqZEY5UWFIbHphV05oYkFvalpHVm1hVzVsSUZKRlgwUnBjbVZqZEY5U1pXTjBRWEpsWVFrSlVrVmZSR2x5WldOMFgxSmxZM1JCY21WaFgxQm9lWE5wWTJGc0NpTmtaV1pwYm1VZ1VrVmZTVzVrYVhKbFkzUkVhV1ptZFhObENRbFNSVjlKYm1ScGNtVmpkRVJwWm1aMWMyVmZVR2g1YzJsallXd0tJMlJsWm1sdVpTQlNSVjlKYm1ScGNtVmpkRk53WldOMWJHRnlDUWxTUlY5SmJtUnBjbVZqZEZOd1pXTjFiR0Z5WDFCb2VYTnBZMkZzQ21ac2IyRjBJR052YlhCMWRHVlRjR1ZqZFd4aGNrOWpZMngxYzJsdmJpZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1pHOTBUbFlzSUdOdmJuTjBJR2x1SUdac2IyRjBJR0Z0WW1sbGJuUlBZMk5zZFhOcGIyNHNJR052Ym5OMElHbHVJR1pzYjJGMElISnZkV2RvYm1WemN5QXBJSHNLQ1hKbGRIVnliaUJ6WVhSMWNtRjBaU2dnY0c5M0tDQmtiM1JPVmlBcklHRnRZbWxsYm5SUFkyTnNkWE5wYjI0c0lHVjRjRElvSUMwZ01UWXVNQ0FxSUhKdmRXZG9ibVZ6Y3lBdElERXVNQ0FwSUNrZ0xTQXhMakFnS3lCaGJXSnBaVzUwVDJOamJIVnphVzl1SUNrN0NuMWdMQ0IxY0NBOUlHQUtSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQm5aVzl0WlhSeWVUc0taMlZ2YldWMGNua3VjRzl6YVhScGIyNGdQU0F0SUhaV2FXVjNVRzl6YVhScGIyNDdDbWRsYjIxbGRISjVMbTV2Y20xaGJDQTlJRzV2Y20xaGJEc0taMlZ2YldWMGNua3VkbWxsZDBScGNpQTlJQ2dnYVhOUGNuUm9iMmR5WVhCb2FXTWdLU0EvSUhabFl6TW9JREFzSURBc0lERWdLU0E2SUc1dmNtMWhiR2w2WlNnZ2RsWnBaWGRRYjNOcGRHbHZiaUFwT3dvamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZBb0paMlZ2YldWMGNua3VZMnhsWVhKamIyRjBUbTl5YldGc0lEMGdZMnhsWVhKamIyRjBUbTl5YldGc093b2paVzVrYVdZS1NXNWphV1JsYm5STWFXZG9kQ0JrYVhKbFkzUk1hV2RvZERzS0kybG1JQ2dnVGxWTlgxQlBTVTVVWDB4SlIwaFVVeUErSURBZ0tTQW1KaUJrWldacGJtVmtLQ0JTUlY5RWFYSmxZM1FnS1FvSlVHOXBiblJNYVdkb2RDQndiMmx1ZEV4cFoyaDBPd29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NBbUppQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDVkJ2YVc1MFRHbG5hSFJUYUdGa2IzY2djRzlwYm5STWFXZG9kRk5vWVdSdmR6c0tDU05sYm1ScFpnb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRBb0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVGxWTlgxQlBTVTVVWDB4SlIwaFVVenNnYVNBckt5QXBJSHNLQ1Fsd2IybHVkRXhwWjJoMElEMGdjRzlwYm5STWFXZG9kSE5iSUdrZ1hUc0tDUWxuWlhSUWIybHVkRXhwWjJoMFNXNW1ieWdnY0c5cGJuUk1hV2RvZEN3Z1oyVnZiV1YwY25rc0lHUnBjbVZqZEV4cFoyaDBJQ2s3Q2drSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5VFNFRkVUMWROUVZBZ0tTQW1KaUFvSUZWT1VrOU1URVZFWDB4UFQxQmZTVTVFUlZnZ1BDQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlBcENna0pjRzlwYm5STWFXZG9kRk5vWVdSdmR5QTlJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzZHpXeUJwSUYwN0Nna0paR2x5WldOMFRHbG5hSFF1WTI5c2IzSWdLajBnWVd4c0tDQmlkbVZqTWlnZ1pHbHlaV04wVEdsbmFIUXVkbWx6YVdKc1pTd2djbVZqWldsMlpWTm9ZV1J2ZHlBcElDa2dQeUJuWlhSUWIybHVkRk5vWVdSdmR5Z2djRzlwYm5SVGFHRmtiM2ROWVhCYklHa2dYU3dnY0c5cGJuUk1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZE5ZWEJUYVhwbExDQndiMmx1ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDBKcFlYTXNJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1VtRmthWFZ6TENCMlVHOXBiblJUYUdGa2IzZERiMjl5WkZzZ2FTQmRMQ0J3YjJsdWRFeHBaMmgwVTJoaFpHOTNMbk5vWVdSdmQwTmhiV1Z5WVU1bFlYSXNJSEJ2YVc1MFRHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1EyRnRaWEpoUm1GeUlDa2dPaUF4TGpBN0Nna0pJMlZ1WkdsbUNna0pVa1ZmUkdseVpXTjBLQ0JrYVhKbFkzUk1hV2RvZEN3Z1oyVnZiV1YwY25rc0lHMWhkR1Z5YVdGc0xDQnlaV1pzWldOMFpXUk1hV2RvZENBcE93b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtJMlZ1WkdsbUNpTnBaaUFvSUU1VlRWOVRVRTlVWDB4SlIwaFVVeUErSURBZ0tTQW1KaUJrWldacGJtVmtLQ0JTUlY5RWFYSmxZM1FnS1FvSlUzQnZkRXhwWjJoMElITndiM1JNYVdkb2REc0tDU05wWmlCa1pXWnBibVZrS0NCVlUwVmZVMGhCUkU5WFRVRlFJQ2tnSmlZZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NWTndiM1JNYVdkb2RGTm9ZV1J2ZHlCemNHOTBUR2xuYUhSVGFHRmtiM2M3Q2dralpXNWthV1lLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlUVUU5VVgweEpSMGhVVXpzZ2FTQXJLeUFwSUhzS0NRbHpjRzkwVEdsbmFIUWdQU0J6Y0c5MFRHbG5hSFJ6V3lCcElGMDdDZ2tKWjJWMFUzQnZkRXhwWjJoMFNXNW1ieWdnYzNCdmRFeHBaMmgwTENCblpXOXRaWFJ5ZVN3Z1pHbHlaV04wVEdsbmFIUWdLVHNLQ1FramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDFOSVFVUlBWMDFCVUNBcElDWW1JQ2dnVlU1U1QweE1SVVJmVEU5UFVGOUpUa1JGV0NBOElFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nS1FvSkNYTndiM1JNYVdkb2RGTm9ZV1J2ZHlBOUlITndiM1JNYVdkb2RGTm9ZV1J2ZDNOYklHa2dYVHNLQ1Fsa2FYSmxZM1JNYVdkb2RDNWpiMnh2Y2lBcVBTQmhiR3dvSUdKMlpXTXlLQ0JrYVhKbFkzUk1hV2RvZEM1MmFYTnBZbXhsTENCeVpXTmxhWFpsVTJoaFpHOTNJQ2tnS1NBL0lHZGxkRk5vWVdSdmR5Z2djM0J2ZEZOb1lXUnZkMDFoY0ZzZ2FTQmRMQ0J6Y0c5MFRHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1RXRndVMmw2WlN3Z2MzQnZkRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkMEpwWVhNc0lITndiM1JNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2RTWVdScGRYTXNJSFpUY0c5MFUyaGhaRzkzUTI5dmNtUmJJR2tnWFNBcElEb2dNUzR3T3dvSkNTTmxibVJwWmdvSkNWSkZYMFJwY21WamRDZ2daR2x5WldOMFRHbG5hSFFzSUdkbGIyMWxkSEo1TENCdFlYUmxjbWxoYkN3Z2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1RzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWmdvamFXWWdLQ0JPVlUxZlJFbFNYMHhKUjBoVVV5QStJREFnS1NBbUppQmtaV1pwYm1Wa0tDQlNSVjlFYVhKbFkzUWdLUW9KUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBPd29KSTJsbUlHUmxabWx1WldRb0lGVlRSVjlUU0VGRVQxZE5RVkFnS1NBbUppQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0NnbEVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzYzdDZ2tqWlc1a2FXWUtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOUVTVkpmVEVsSFNGUlRPeUJwSUNzcklDa2dld29KQ1dScGNtVmpkR2x2Ym1Gc1RHbG5hSFFnUFNCa2FYSmxZM1JwYjI1aGJFeHBaMmgwYzFzZ2FTQmRPd29KQ1dkbGRFUnBjbVZqZEdsdmJtRnNUR2xuYUhSSmJtWnZLQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBMQ0JuWlc5dFpYUnllU3dnWkdseVpXTjBUR2xuYUhRZ0tUc0tDUWtqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMU5JUVVSUFYwMUJVQ0FwSUNZbUlDZ2dWVTVTVDB4TVJVUmZURTlQVUY5SlRrUkZXQ0E4SUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QXBDZ2tKWkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmR5QTlJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjA3Q2drSlpHbHlaV04wVEdsbmFIUXVZMjlzYjNJZ0tqMGdZV3hzS0NCaWRtVmpNaWdnWkdseVpXTjBUR2xuYUhRdWRtbHphV0pzWlN3Z2NtVmpaV2wyWlZOb1lXUnZkeUFwSUNrZ1B5Qm5aWFJUYUdGa2IzY29JR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0Z3V3lCcElGMHNJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjdWMyaGhaRzkzVFdGd1UybDZaU3dnWkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmR5NXphR0ZrYjNkQ2FXRnpMQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDFKaFpHbDFjeXdnZGtScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzUTI5dmNtUmJJR2tnWFNBcElEb2dNUzR3T3dvSkNTTmxibVJwWmdvSkNWSkZYMFJwY21WamRDZ2daR2x5WldOMFRHbG5hSFFzSUdkbGIyMWxkSEo1TENCdFlYUmxjbWxoYkN3Z2NtVm1iR1ZqZEdWa1RHbG5hSFFnS1RzS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWmdvamFXWWdLQ0JPVlUxZlVrVkRWRjlCVWtWQlgweEpSMGhVVXlBK0lEQWdLU0FtSmlCa1pXWnBibVZrS0NCU1JWOUVhWEpsWTNSZlVtVmpkRUZ5WldFZ0tRb0pVbVZqZEVGeVpXRk1hV2RvZENCeVpXTjBRWEpsWVV4cFoyaDBPd29KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMUpGUTFSZlFWSkZRVjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKY21WamRFRnlaV0ZNYVdkb2RDQTlJSEpsWTNSQmNtVmhUR2xuYUhSeld5QnBJRjA3Q2drSlVrVmZSR2x5WldOMFgxSmxZM1JCY21WaEtDQnlaV04wUVhKbFlVeHBaMmgwTENCblpXOXRaWFJ5ZVN3Z2JXRjBaWEpwWVd3c0lISmxabXhsWTNSbFpFeHBaMmgwSUNrN0NnbDlDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDJWdVpBb2paVzVrYVdZS0kybG1JR1JsWm1sdVpXUW9JRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaU0FwQ2dsMlpXTXpJR2xpYkVseWNtRmthV0Z1WTJVZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFl6TWdhWEp5WVdScFlXNWpaU0E5SUdkbGRFRnRZbWxsYm5STWFXZG9kRWx5Y21Ga2FXRnVZMlVvSUdGdFltbGxiblJNYVdkb2RFTnZiRzl5SUNrN0NnbHBjbkpoWkdsaGJtTmxJQ3M5SUdkbGRFeHBaMmgwVUhKdlltVkpjbkpoWkdsaGJtTmxLQ0JzYVdkb2RGQnliMkpsTENCblpXOXRaWFJ5ZVM1dWIzSnRZV3dnS1RzS0NTTnBaaUFvSUU1VlRWOUlSVTFKWDB4SlIwaFVVeUErSURBZ0tRb0pDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDUWxtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZTRVZOU1Y5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSkNXbHljbUZrYVdGdVkyVWdLejBnWjJWMFNHVnRhWE53YUdWeVpVeHBaMmgwU1hKeVlXUnBZVzVqWlNnZ2FHVnRhWE53YUdWeVpVeHBaMmgwYzFzZ2FTQmRMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd2dLVHNLQ1FsOUNna0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvalpXNWthV1lLSTJsbUlHUmxabWx1WldRb0lGSkZYMGx1WkdseVpXTjBVM0JsWTNWc1lYSWdLUW9KZG1Wak15QnlZV1JwWVc1alpTQTlJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpNeUJqYkdWaGNtTnZZWFJTWVdScFlXNWpaU0E5SUhabFl6TW9JREF1TUNBcE93b2paVzVrYVdaZ0xDQmtjQ0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dVa1ZmU1c1a2FYSmxZM1JFYVdabWRYTmxJQ2tLQ1NOcFptUmxaaUJWVTBWZlRFbEhTRlJOUVZBS0NRbDJaV00wSUd4cFoyaDBUV0Z3VkdWNFpXd2dQU0IwWlhoMGRYSmxNa1FvSUd4cFoyaDBUV0Z3TENCMlZYWXlJQ2s3Q2drSmRtVmpNeUJzYVdkb2RFMWhjRWx5Y21Ga2FXRnVZMlVnUFNCc2FXZG9kRTFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JR3hwWjJoMFRXRndWR1Y0Wld3Z0tTNXlaMklnS2lCc2FXZG9kRTFoY0VsdWRHVnVjMmwwZVRzS0NRa2phV1p1WkdWbUlGQklXVk5KUTBGTVRGbGZRMDlTVWtWRFZGOU1TVWRJVkZNS0NRa0piR2xuYUhSTllYQkpjbkpoWkdsaGJtTmxJQ285SUZCSk93b0pDU05sYm1ScFpnb0pDV2x5Y21Ga2FXRnVZMlVnS3owZ2JHbG5hSFJOWVhCSmNuSmhaR2xoYm1ObE93b0pJMlZ1WkdsbUNna2phV1lnWkdWbWFXNWxaQ2dnVlZORlgwVk9WazFCVUNBcElDWW1JR1JsWm1sdVpXUW9JRk5VUVU1RVFWSkVJQ2tnSmlZZ1pHVm1hVzVsWkNnZ1JVNVdUVUZRWDFSWlVFVmZRMVZDUlY5VlZpQXBDZ2tKYVdKc1NYSnlZV1JwWVc1alpTQXJQU0JuWlhSSlFreEpjbkpoWkdsaGJtTmxLQ0JuWlc5dFpYUnllUzV1YjNKdFlXd2dLVHNLQ1NObGJtUnBaZ29qWlc1a2FXWUtJMmxtSUdSbFptbHVaV1FvSUZWVFJWOUZUbFpOUVZBZ0tTQW1KaUJrWldacGJtVmtLQ0JTUlY5SmJtUnBjbVZqZEZOd1pXTjFiR0Z5SUNrS0NYSmhaR2xoYm1ObElDczlJR2RsZEVsQ1RGSmhaR2xoYm1ObEtDQm5aVzl0WlhSeWVTNTJhV1YzUkdseUxDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHMWhkR1Z5YVdGc0xuSnZkV2RvYm1WemN5QXBPd29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZRS0NRbGpiR1ZoY21OdllYUlNZV1JwWVc1alpTQXJQU0JuWlhSSlFreFNZV1JwWVc1alpTZ2daMlZ2YldWMGNua3VkbWxsZDBScGNpd2daMlZ2YldWMGNua3VZMnhsWVhKamIyRjBUbTl5YldGc0xDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdLVHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JtY0NBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sSUNrS0NWSkZYMGx1WkdseVpXTjBSR2xtWm5WelpTZ2dhWEp5WVdScFlXNWpaU3dnWjJWdmJXVjBjbmtzSUcxaGRHVnlhV0ZzTENCeVpXWnNaV04wWldSTWFXZG9kQ0FwT3dvalpXNWthV1lLSTJsbUlHUmxabWx1WldRb0lGSkZYMGx1WkdseVpXTjBVM0JsWTNWc1lYSWdLUW9KVWtWZlNXNWthWEpsWTNSVGNHVmpkV3hoY2lnZ2NtRmthV0Z1WTJVc0lHbGliRWx5Y21Ga2FXRnVZMlVzSUdOc1pXRnlZMjloZEZKaFpHbGhibU5sTENCblpXOXRaWFJ5ZVN3Z2JXRjBaWEpwWVd3c0lISmxabXhsWTNSbFpFeHBaMmgwSUNrN0NpTmxibVJwWm1Bc0lIQndJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVEU5SFJFVlFWRWhDVlVZZ0tTQW1KaUJrWldacGJtVmtLQ0JWVTBWZlRFOUhSRVZRVkVoQ1ZVWmZSVmhVSUNrS0NXZHNYMFp5WVdkRVpYQjBhRVZZVkNBOUlIWkpjMUJsY25Od1pXTjBhWFpsSUQwOUlEQXVNQ0EvSUdkc1gwWnlZV2REYjI5eVpDNTZJRG9nYkc5bk1pZ2dka1p5WVdkRVpYQjBhQ0FwSUNvZ2JHOW5SR1Z3ZEdoQ2RXWkdReUFxSURBdU5Uc0tJMlZ1WkdsbVlDd2diWEFnUFNCZ0kybG1JR1JsWm1sdVpXUW9JRlZUUlY5TVQwZEVSVkJVU0VKVlJpQXBJQ1ltSUdSbFptbHVaV1FvSUZWVFJWOU1UMGRFUlZCVVNFSlZSbDlGV0ZRZ0tRb0pkVzVwWm05eWJTQm1iRzloZENCc2IyZEVaWEIwYUVKMVprWkRPd29KZG1GeWVXbHVaeUJtYkc5aGRDQjJSbkpoWjBSbGNIUm9Pd29KZG1GeWVXbHVaeUJtYkc5aGRDQjJTWE5RWlhKemNHVmpkR2wyWlRzS0kyVnVaR2xtWUN3Z1ozQWdQU0JnSTJsbVpHVm1JRlZUUlY5TVQwZEVSVkJVU0VKVlJnb0pJMmxtWkdWbUlGVlRSVjlNVDBkRVJWQlVTRUpWUmw5RldGUUtDUWwyWVhKNWFXNW5JR1pzYjJGMElIWkdjbUZuUkdWd2RHZzdDZ2tKZG1GeWVXbHVaeUJtYkc5aGRDQjJTWE5RWlhKemNHVmpkR2wyWlRzS0NTTmxiSE5sQ2drSmRXNXBabTl5YlNCbWJHOWhkQ0JzYjJkRVpYQjBhRUoxWmtaRE93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lIaHdJRDBnWUNOcFptUmxaaUJWVTBWZlRFOUhSRVZRVkVoQ1ZVWUtDU05wWm1SbFppQlZVMFZmVEU5SFJFVlFWRWhDVlVaZlJWaFVDZ2tKZGtaeVlXZEVaWEIwYUNBOUlERXVNQ0FySUdkc1gxQnZjMmwwYVc5dUxuYzdDZ2tKZGtselVHVnljM0JsWTNScGRtVWdQU0JtYkc5aGRDZ2dhWE5RWlhKemNHVmpkR2wyWlUxaGRISnBlQ2dnY0hKdmFtVmpkR2x2YmsxaGRISnBlQ0FwSUNrN0Nna2paV3h6WlFvSkNXbG1JQ2dnYVhOUVpYSnpjR1ZqZEdsMlpVMWhkSEpwZUNnZ2NISnZhbVZqZEdsdmJrMWhkSEpwZUNBcElDa2dld29KQ1FsbmJGOVFiM05wZEdsdmJpNTZJRDBnYkc5bk1pZ2diV0Y0S0NCRlVGTkpURTlPTENCbmJGOVFiM05wZEdsdmJpNTNJQ3NnTVM0d0lDa2dLU0FxSUd4dlowUmxjSFJvUW5WbVJrTWdMU0F4TGpBN0Nna0pDV2RzWDFCdmMybDBhVzl1TG5vZ0tqMGdaMnhmVUc5emFYUnBiMjR1ZHpzS0NRbDlDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dlWEFnUFNCZ0kybG1aR1ZtSUZWVFJWOU5RVkFLQ1habFl6UWdkR1Y0Wld4RGIyeHZjaUE5SUhSbGVIUjFjbVV5UkNnZ2JXRndMQ0IyVlhZZ0tUc0tDWFJsZUdWc1EyOXNiM0lnUFNCdFlYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCMFpYaGxiRU52Ykc5eUlDazdDZ2xrYVdabWRYTmxRMjlzYjNJZ0tqMGdkR1Y0Wld4RGIyeHZjanNLSTJWdVpHbG1ZQ3dnZG5BZ1BTQmdJMmxtWkdWbUlGVlRSVjlOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHMWhjRHNLSTJWdVpHbG1ZQ3dnWDNBZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZWVFJWOU5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUVV4UVNFRk5RVkFnS1FvSmRtVmpNaUIxZGlBOUlDZ2dkWFpVY21GdWMyWnZjbTBnS2lCMlpXTXpLQ0JuYkY5UWIybHVkRU52YjNKa0xuZ3NJREV1TUNBdElHZHNYMUJ2YVc1MFEyOXZjbVF1ZVN3Z01TQXBJQ2t1ZUhrN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwMUJVQW9KZG1Wak5DQnRZWEJVWlhobGJDQTlJSFJsZUhSMWNtVXlSQ2dnYldGd0xDQjFkaUFwT3dvSlpHbG1ablZ6WlVOdmJHOXlJQ285SUcxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUcxaGNGUmxlR1ZzSUNrN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwRk1VRWhCVFVGUUNnbGthV1ptZFhObFEyOXNiM0l1WVNBcVBTQjBaWGgwZFhKbE1rUW9JR0ZzY0doaFRXRndMQ0IxZGlBcExtYzdDaU5sYm1ScFptQXNJRTF3SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlRVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1ZWTkZYMEZNVUVoQlRVRlFJQ2tLQ1hWdWFXWnZjbTBnYldGME15QjFkbFJ5WVc1elptOXliVHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnRZWEE3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBGTVVFaEJUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCaGJIQm9ZVTFoY0RzS0kyVnVaR2xtWUN3Z1luQWdQU0JnWm14dllYUWdiV1YwWVd4dVpYTnpSbUZqZEc5eUlEMGdiV1YwWVd4dVpYTnpPd29qYVdaa1pXWWdWVk5GWDAxRlZFRk1Ua1ZUVTAxQlVBb0pkbVZqTkNCMFpYaGxiRTFsZEdGc2JtVnpjeUE5SUhSbGVIUjFjbVV5UkNnZ2JXVjBZV3h1WlhOelRXRndMQ0IyVlhZZ0tUc0tDVzFsZEdGc2JtVnpjMFpoWTNSdmNpQXFQU0IwWlhobGJFMWxkR0ZzYm1WemN5NWlPd29qWlc1a2FXWmdMQ0IzY0NBOUlHQWphV1prWldZZ1ZWTkZYMDFGVkVGTVRrVlRVMDFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2JXVjBZV3h1WlhOelRXRndPd29qWlc1a2FXWmdMQ0JUY0NBOUlHQWphV1prWldZZ1ZWTkZYMDFQVWxCSVRrOVNUVUZNVXdvSmIySnFaV04wVG05eWJXRnNJQ285SUcxdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaVHNLQ1NOcFptUmxaaUJOVDFKUVNGUkJVa2RGVkZOZlZFVllWRlZTUlFvSkNXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTFQVWxCSVZFRlNSMFZVVTE5RFQxVk9WRHNnYVNBckt5QXBJSHNLQ1FrSmFXWWdLQ0J0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklHa2dYU0ErSURBdU1DQXBJRzlpYW1WamRFNXZjbTFoYkNBclBTQm5aWFJOYjNKd2FDZ2daMnhmVm1WeWRHVjRTVVFzSUdrc0lERXNJRElnS1NBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnYVNCZE93b0pDWDBLQ1NObGJITmxDZ2tKYjJKcVpXTjBUbTl5YldGc0lDczlJRzF2Y25Cb1RtOXliV0ZzTUNBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTUNCZE93b0pDVzlpYW1WamRFNXZjbTFoYkNBclBTQnRiM0p3YUU1dmNtMWhiREVnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJREVnWFRzS0NRbHZZbXBsWTNST2IzSnRZV3dnS3owZ2JXOXljR2hPYjNKdFlXd3lJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXlJRjA3Q2drSmIySnFaV04wVG05eWJXRnNJQ3M5SUcxdmNuQm9UbTl5YldGc015QXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ015QmRPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRlJ3SUQwZ1lDTnBabVJsWmlCVlUwVmZUVTlTVUVoVVFWSkhSVlJUQ2dsMWJtbG1iM0p0SUdac2IyRjBJRzF2Y25Cb1ZHRnlaMlYwUW1GelpVbHVabXgxWlc1alpUc0tDU05wWm1SbFppQk5UMUpRU0ZSQlVrZEZWRk5mVkVWWVZGVlNSUW9KQ1hWdWFXWnZjbTBnWm14dllYUWdiVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lCTlQxSlFTRlJCVWtkRlZGTmZRMDlWVGxRZ1hUc0tDUWwxYm1sbWIzSnRJSE5oYlhCc1pYSXlSRUZ5Y21GNUlHMXZjbkJvVkdGeVoyVjBjMVJsZUhSMWNtVTdDZ2tKZFc1cFptOXliU0IyWldNeUlHMXZjbkJvVkdGeVoyVjBjMVJsZUhSMWNtVlRhWHBsT3dvSkNYWmxZek1nWjJWMFRXOXljR2dvSUdOdmJuTjBJR2x1SUdsdWRDQjJaWEowWlhoSmJtUmxlQ3dnWTI5dWMzUWdhVzRnYVc1MElHMXZjbkJvVkdGeVoyVjBTVzVrWlhnc0lHTnZibk4wSUdsdUlHbHVkQ0J2Wm1aelpYUXNJR052Ym5OMElHbHVJR2x1ZENCemRISnBaR1VnS1NCN0Nna0pDV1pzYjJGMElIUmxlR1ZzU1c1a1pYZ2dQU0JtYkc5aGRDZ2dkbVZ5ZEdWNFNXNWtaWGdnS2lCemRISnBaR1VnS3lCdlptWnpaWFFnS1RzS0NRa0pabXh2WVhRZ2VTQTlJR1pzYjI5eUtDQjBaWGhsYkVsdVpHVjRJQzhnYlc5eWNHaFVZWEpuWlhSelZHVjRkSFZ5WlZOcGVtVXVlQ0FwT3dvSkNRbG1iRzloZENCNElEMGdkR1Y0Wld4SmJtUmxlQ0F0SUhrZ0tpQnRiM0p3YUZSaGNtZGxkSE5VWlhoMGRYSmxVMmw2WlM1NE93b0pDUWwyWldNeklHMXZjbkJvVlZZZ1BTQjJaV016S0NBb0lIZ2dLeUF3TGpVZ0tTQXZJRzF2Y25Cb1ZHRnlaMlYwYzFSbGVIUjFjbVZUYVhwbExuZ3NJSGtnTHlCdGIzSndhRlJoY21kbGRITlVaWGgwZFhKbFUybDZaUzU1TENCdGIzSndhRlJoY21kbGRFbHVaR1Y0SUNrN0Nna0pDWEpsZEhWeWJpQjBaWGgwZFhKbEtDQnRiM0p3YUZSaGNtZGxkSE5VWlhoMGRYSmxMQ0J0YjNKd2FGVldJQ2t1ZUhsNk93b0pDWDBLQ1NObGJITmxDZ2tKSTJsbWJtUmxaaUJWVTBWZlRVOVNVRWhPVDFKTlFVeFRDZ2tKQ1hWdWFXWnZjbTBnWm14dllYUWdiVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBNElGMDdDZ2tKSTJWc2MyVUtDUWtKZFc1cFptOXliU0JtYkc5aGRDQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSURRZ1hUc0tDUWtqWlc1a2FXWUtDU05sYm1ScFpnb2paVzVrYVdaZ0xDQkZjQ0E5SUdBamFXWmtaV1lnVlZORlgwMVBVbEJJVkVGU1IwVlVVd29KZEhKaGJuTm1iM0p0WldRZ0tqMGdiVzl5Y0doVVlYSm5aWFJDWVhObFNXNW1iSFZsYm1ObE93b0pJMmxtWkdWbUlFMVBVbEJJVkVGU1IwVlVVMTlVUlZoVVZWSkZDZ2tKWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RVOVNVRWhVUVZKSFJWUlRYME5QVlU1VU95QnBJQ3NySUNrZ2V3b0pDUWtqYVdadVpHVm1JRlZUUlY5TlQxSlFTRTVQVWsxQlRGTUtDUWtKQ1dsbUlDZ2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lCcElGMGdQaUF3TGpBZ0tTQjBjbUZ1YzJadmNtMWxaQ0FyUFNCblpYUk5iM0p3YUNnZ1oyeGZWbVZ5ZEdWNFNVUXNJR2tzSURBc0lERWdLU0FxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dhU0JkT3dvSkNRa2paV3h6WlFvSkNRa0phV1lnS0NCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJR2tnWFNBK0lEQXVNQ0FwSUhSeVlXNXpabTl5YldWa0lDczlJR2RsZEUxdmNuQm9LQ0JuYkY5V1pYSjBaWGhKUkN3Z2FTd2dNQ3dnTWlBcElDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lCcElGMDdDZ2tKQ1NObGJtUnBaZ29KQ1gwS0NTTmxiSE5sQ2drSmRISmhibk5tYjNKdFpXUWdLejBnYlc5eWNHaFVZWEpuWlhRd0lDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBd0lGMDdDZ2tKZEhKaGJuTm1iM0p0WldRZ0t6MGdiVzl5Y0doVVlYSm5aWFF4SUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUF4SUYwN0Nna0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JXOXljR2hVWVhKblpYUXlJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXlJRjA3Q2drSmRISmhibk5tYjNKdFpXUWdLejBnYlc5eWNHaFVZWEpuWlhReklDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBeklGMDdDZ2tKSTJsbWJtUmxaaUJWVTBWZlRVOVNVRWhPVDFKTlFVeFRDZ2tKQ1hSeVlXNXpabTl5YldWa0lDczlJRzF2Y25Cb1ZHRnlaMlYwTkNBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnTkNCZE93b0pDUWwwY21GdWMyWnZjbTFsWkNBclBTQnRiM0p3YUZSaGNtZGxkRFVnS2lCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJRFVnWFRzS0NRa0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JXOXljR2hVWVhKblpYUTJJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QTJJRjA3Q2drSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME55QXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ055QmRPd29KQ1NObGJtUnBaZ29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRUZ3SUQwZ1lHWnNiMkYwSUdaaFkyVkVhWEpsWTNScGIyNGdQU0JuYkY5R2NtOXVkRVpoWTJsdVp5QS9JREV1TUNBNklDMGdNUzR3T3dvamFXWmtaV1lnUmt4QlZGOVRTRUZFUlVRS0NYWmxZek1nWm1SNElEMGdkbVZqTXlnZ1pFWmtlQ2dnZGxacFpYZFFiM05wZEdsdmJpNTRJQ2tzSUdSR1pIZ29JSFpXYVdWM1VHOXphWFJwYjI0dWVTQXBMQ0JrUm1SNEtDQjJWbWxsZDFCdmMybDBhVzl1TG5vZ0tTQXBPd29KZG1Wak15Qm1aSGtnUFNCMlpXTXpLQ0JrUm1SNUtDQjJWbWxsZDFCdmMybDBhVzl1TG5nZ0tTd2daRVprZVNnZ2RsWnBaWGRRYjNOcGRHbHZiaTU1SUNrc0lHUkdaSGtvSUhaV2FXVjNVRzl6YVhScGIyNHVlaUFwSUNrN0NnbDJaV016SUc1dmNtMWhiQ0E5SUc1dmNtMWhiR2w2WlNnZ1kzSnZjM01vSUdaa2VDd2dabVI1SUNrZ0tUc0tJMlZzYzJVS0NYWmxZek1nYm05eWJXRnNJRDBnYm05eWJXRnNhWHBsS0NCMlRtOXliV0ZzSUNrN0Nna2phV1prWldZZ1JFOVZRa3hGWDFOSlJFVkVDZ2tKYm05eWJXRnNJRDBnYm05eWJXRnNJQ29nWm1GalpVUnBjbVZqZEdsdmJqc0tDU05sYm1ScFpnb0pJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2tKZG1Wak15QjBZVzVuWlc1MElEMGdibTl5YldGc2FYcGxLQ0IyVkdGdVoyVnVkQ0FwT3dvSkNYWmxZek1nWW1sMFlXNW5aVzUwSUQwZ2JtOXliV0ZzYVhwbEtDQjJRbWwwWVc1blpXNTBJQ2s3Q2drSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDUWwwWVc1blpXNTBJRDBnZEdGdVoyVnVkQ0FxSUdaaFkyVkVhWEpsWTNScGIyNDdDZ2tKQ1dKcGRHRnVaMlZ1ZENBOUlHSnBkR0Z1WjJWdWRDQXFJR1poWTJWRWFYSmxZM1JwYjI0N0Nna0pJMlZ1WkdsbUNna0pJMmxtSUdSbFptbHVaV1FvSUZSQlRrZEZUbFJUVUVGRFJWOU9UMUpOUVV4TlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRMHhGUVZKRFQwRlVYMDVQVWsxQlRFMUJVQ0FwQ2drSkNXMWhkRE1nZGxSQ1RpQTlJRzFoZERNb0lIUmhibWRsYm5Rc0lHSnBkR0Z1WjJWdWRDd2dibTl5YldGc0lDazdDZ2tKSTJWdVpHbG1DZ2tqWlc1a2FXWUtJMlZ1WkdsbUNuWmxZek1nWjJWdmJXVjBjbmxPYjNKdFlXd2dQU0J1YjNKdFlXdzdZQ3dnUTNBZ1BTQmdJMmxtWkdWbUlFOUNTa1ZEVkZOUVFVTkZYMDVQVWsxQlRFMUJVQW9KYm05eWJXRnNJRDBnZEdWNGRIVnlaVEpFS0NCdWIzSnRZV3hOWVhBc0lIWlZkaUFwTG5oNWVpQXFJREl1TUNBdElERXVNRHNLQ1NOcFptUmxaaUJHVEVsUVgxTkpSRVZFQ2drSmJtOXliV0ZzSUQwZ0xTQnViM0p0WVd3N0Nna2paVzVrYVdZS0NTTnBabVJsWmlCRVQxVkNURVZmVTBsRVJVUUtDUWx1YjNKdFlXd2dQU0J1YjNKdFlXd2dLaUJtWVdObFJHbHlaV04wYVc5dU93b0pJMlZ1WkdsbUNnbHViM0p0WVd3Z1BTQnViM0p0WVd4cGVtVW9JRzV2Y20xaGJFMWhkSEpwZUNBcUlHNXZjbTFoYkNBcE93b2paV3hwWmlCa1pXWnBibVZrS0NCVVFVNUhSVTVVVTFCQlEwVmZUazlTVFVGTVRVRlFJQ2tLQ1habFl6TWdiV0Z3VGlBOUlIUmxlSFIxY21VeVJDZ2dibTl5YldGc1RXRndMQ0IyVlhZZ0tTNTRlWG9nS2lBeUxqQWdMU0F4TGpBN0NnbHRZWEJPTG5oNUlDbzlJRzV2Y20xaGJGTmpZV3hsT3dvSkkybG1aR1ZtSUZWVFJWOVVRVTVIUlU1VUNna0pibTl5YldGc0lEMGdibTl5YldGc2FYcGxLQ0IyVkVKT0lDb2diV0Z3VGlBcE93b0pJMlZzYzJVS0NRbHViM0p0WVd3Z1BTQndaWEowZFhKaVRtOXliV0ZzTWtGeVlpZ2dMU0IyVm1sbGQxQnZjMmwwYVc5dUxDQnViM0p0WVd3c0lHMWhjRTRzSUdaaFkyVkVhWEpsWTNScGIyNGdLVHNLQ1NObGJtUnBaZ29qWld4cFppQmtaV1pwYm1Wa0tDQlZVMFZmUWxWTlVFMUJVQ0FwQ2dsdWIzSnRZV3dnUFNCd1pYSjBkWEppVG05eWJXRnNRWEppS0NBdElIWldhV1YzVUc5emFYUnBiMjRzSUc1dmNtMWhiQ3dnWkVoa2VIbGZabmRrS0Nrc0lHWmhZMlZFYVhKbFkzUnBiMjRnS1RzS0kyVnVaR2xtWUN3Z1RIQWdQU0JnSTJsbWJtUmxaaUJHVEVGVVgxTklRVVJGUkFvSmRtRnllV2x1WnlCMlpXTXpJSFpPYjNKdFlXdzdDZ2tqYVdaa1pXWWdWVk5GWDFSQlRrZEZUbFFLQ1FsMllYSjVhVzVuSUhabFl6TWdkbFJoYm1kbGJuUTdDZ2tKZG1GeWVXbHVaeUIyWldNeklIWkNhWFJoYm1kbGJuUTdDZ2tqWlc1a2FXWUtJMlZ1WkdsbVlDd2dVbkFnUFNCZ0kybG1ibVJsWmlCR1RFRlVYMU5JUVVSRlJBb0pkbUZ5ZVdsdVp5QjJaV016SUhaT2IzSnRZV3c3Q2dramFXWmtaV1lnVlZORlgxUkJUa2RGVGxRS0NRbDJZWEo1YVc1bklIWmxZek1nZGxSaGJtZGxiblE3Q2drSmRtRnllV2x1WnlCMlpXTXpJSFpDYVhSaGJtZGxiblE3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnVUhBZ1BTQmdJMmxtYm1SbFppQkdURUZVWDFOSVFVUkZSQW9KZGs1dmNtMWhiQ0E5SUc1dmNtMWhiR2w2WlNnZ2RISmhibk5tYjNKdFpXUk9iM0p0WVd3Z0tUc0tDU05wWm1SbFppQlZVMFZmVkVGT1IwVk9WQW9KQ1haVVlXNW5aVzUwSUQwZ2JtOXliV0ZzYVhwbEtDQjBjbUZ1YzJadmNtMWxaRlJoYm1kbGJuUWdLVHNLQ1FsMlFtbDBZVzVuWlc1MElEMGdibTl5YldGc2FYcGxLQ0JqY205emN5Z2dkazV2Y20xaGJDd2dkbFJoYm1kbGJuUWdLU0FxSUhSaGJtZGxiblF1ZHlBcE93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lFbHdJRDBnWUNOcFptUmxaaUJWVTBWZlRrOVNUVUZNVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQnViM0p0WVd4TllYQTdDZ2wxYm1sbWIzSnRJSFpsWXpJZ2JtOXliV0ZzVTJOaGJHVTdDaU5sYm1ScFpnb2phV1prWldZZ1QwSktSVU5VVTFCQlEwVmZUazlTVFVGTVRVRlFDZ2wxYm1sbWIzSnRJRzFoZERNZ2JtOXliV0ZzVFdGMGNtbDRPd29qWlc1a2FXWUtJMmxtSUNFZ1pHVm1hVzVsWkNBb0lGVlRSVjlVUVU1SFJVNVVJQ2tnSmlZZ0tDQmtaV1pwYm1Wa0lDZ2dWRUZPUjBWT1ZGTlFRVU5GWDA1UFVrMUJURTFCVUNBcElIeDhJR1JsWm1sdVpXUWdLQ0JWVTBWZlEweEZRVkpEVDBGVVgwNVBVazFCVEUxQlVDQXBJQ2tLQ1habFl6TWdjR1Z5ZEhWeVlrNXZjbTFoYkRKQmNtSW9JSFpsWXpNZ1pYbGxYM0J2Y3l3Z2RtVmpNeUJ6ZFhKbVgyNXZjbTBzSUhabFl6TWdiV0Z3VGl3Z1pteHZZWFFnWm1GalpVUnBjbVZqZEdsdmJpQXBJSHNLQ1FsMlpXTXpJSEV3SUQwZ2RtVmpNeWdnWkVaa2VDZ2daWGxsWDNCdmN5NTRJQ2tzSUdSR1pIZ29JR1Y1WlY5d2IzTXVlU0FwTENCa1JtUjRLQ0JsZVdWZmNHOXpMbm9nS1NBcE93b0pDWFpsWXpNZ2NURWdQU0IyWldNektDQmtSbVI1S0NCbGVXVmZjRzl6TG5nZ0tTd2daRVprZVNnZ1pYbGxYM0J2Y3k1NUlDa3NJR1JHWkhrb0lHVjVaVjl3YjNNdWVpQXBJQ2s3Q2drSmRtVmpNaUJ6ZERBZ1BTQmtSbVI0S0NCMlZYWXVjM1FnS1RzS0NRbDJaV015SUhOME1TQTlJR1JHWkhrb0lIWlZkaTV6ZENBcE93b0pDWFpsWXpNZ1RpQTlJSE4xY21aZmJtOXliVHNLQ1FsMlpXTXpJSEV4Y0dWeWNDQTlJR055YjNOektDQnhNU3dnVGlBcE93b0pDWFpsWXpNZ2NUQndaWEp3SUQwZ1kzSnZjM01vSUU0c0lIRXdJQ2s3Q2drSmRtVmpNeUJVSUQwZ2NURndaWEp3SUNvZ2MzUXdMbmdnS3lCeE1IQmxjbkFnS2lCemRERXVlRHNLQ1FsMlpXTXpJRUlnUFNCeE1YQmxjbkFnS2lCemREQXVlU0FySUhFd2NHVnljQ0FxSUhOME1TNTVPd29KQ1dac2IyRjBJR1JsZENBOUlHMWhlQ2dnWkc5MEtDQlVMQ0JVSUNrc0lHUnZkQ2dnUWl3Z1FpQXBJQ2s3Q2drSlpteHZZWFFnYzJOaGJHVWdQU0FvSUdSbGRDQTlQU0F3TGpBZ0tTQS9JREF1TUNBNklHWmhZMlZFYVhKbFkzUnBiMjRnS2lCcGJuWmxjbk5sYzNGeWRDZ2daR1YwSUNrN0Nna0pjbVYwZFhKdUlHNXZjbTFoYkdsNlpTZ2dWQ0FxSUNnZ2JXRndUaTU0SUNvZ2MyTmhiR1VnS1NBcklFSWdLaUFvSUcxaGNFNHVlU0FxSUhOallXeGxJQ2tnS3lCT0lDb2diV0Z3VGk1NklDazdDZ2w5Q2lObGJtUnBabUFzSUVSd0lEMGdZQ05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2dsMlpXTXpJR05zWldGeVkyOWhkRTV2Y20xaGJDQTlJR2RsYjIxbGRISjVUbTl5YldGc093b2paVzVrYVdaZ0xDQkdjQ0E5SUdBamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZGOU9UMUpOUVV4TlFWQUtDWFpsWXpNZ1kyeGxZWEpqYjJGMFRXRndUaUE5SUhSbGVIUjFjbVV5UkNnZ1kyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0xDQjJWWFlnS1M1NGVYb2dLaUF5TGpBZ0xTQXhMakE3Q2dsamJHVmhjbU52WVhSTllYQk9Mbmg1SUNvOUlHTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxPd29KSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2drSlkyeGxZWEpqYjJGMFRtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQjJWRUpPSUNvZ1kyeGxZWEpqYjJGMFRXRndUaUFwT3dvSkkyVnNjMlVLQ1FsamJHVmhjbU52WVhST2IzSnRZV3dnUFNCd1pYSjBkWEppVG05eWJXRnNNa0Z5WWlnZ0xTQjJWbWxsZDFCdmMybDBhVzl1TENCamJHVmhjbU52WVhST2IzSnRZV3dzSUdOc1pXRnlZMjloZEUxaGNFNHNJR1poWTJWRWFYSmxZM1JwYjI0Z0tUc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQk9jQ0E5SUdBamFXWmtaV1lnVlZORlgwTk1SVUZTUTA5QlZFMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWTJ4bFlYSmpiMkYwVFdGd093b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUmZVazlWUjBoT1JWTlRUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCamJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWRjlPVDFKTlFVeE5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdOc1pXRnlZMjloZEU1dmNtMWhiRTFoY0RzS0NYVnVhV1p2Y20wZ2RtVmpNaUJqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlRzS0kyVnVaR2xtWUN3Z1FuQWdQU0JnSTJsbVpHVm1JRTlRUVZGVlJRcGthV1ptZFhObFEyOXNiM0l1WVNBOUlERXVNRHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0NtUnBabVoxYzJWRGIyeHZjaTVoSUNvOUlIUnlZVzV6YldsemMybHZia0ZzY0doaElDc2dNQzR4T3dvalpXNWthV1lLWjJ4ZlJuSmhaME52Ykc5eUlEMGdkbVZqTkNnZ2IzVjBaMjlwYm1kTWFXZG9kQ3dnWkdsbVpuVnpaVU52Ykc5eUxtRWdLVHRnTENCNmNDQTlJR0IyWldNeklIQmhZMnRPYjNKdFlXeFViMUpIUWlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd2dLU0I3Q2dseVpYUjFjbTRnYm05eWJXRnNhWHBsS0NCdWIzSnRZV3dnS1NBcUlEQXVOU0FySURBdU5Uc0tmUXAyWldNeklIVnVjR0ZqYTFKSFFsUnZUbTl5YldGc0tDQmpiMjV6ZENCcGJpQjJaV016SUhKbllpQXBJSHNLQ1hKbGRIVnliaUF5TGpBZ0tpQnlaMkl1ZUhsNklDMGdNUzR3T3dwOUNtTnZibk4wSUdac2IyRjBJRkJoWTJ0VmNITmpZV3hsSUQwZ01qVTJMaUF2SURJMU5TNDdZMjl1YzNRZ1pteHZZWFFnVlc1d1lXTnJSRzkzYm5OallXeGxJRDBnTWpVMUxpQXZJREkxTmk0N0NtTnZibk4wSUhabFl6TWdVR0ZqYTBaaFkzUnZjbk1nUFNCMlpXTXpLQ0F5TlRZdUlDb2dNalUyTGlBcUlESTFOaTRzSURJMU5pNGdLaUF5TlRZdUxDQXlOVFl1SUNrN0NtTnZibk4wSUhabFl6UWdWVzV3WVdOclJtRmpkRzl5Y3lBOUlGVnVjR0ZqYTBSdmQyNXpZMkZzWlNBdklIWmxZelFvSUZCaFkydEdZV04wYjNKekxDQXhMaUFwT3dwamIyNXpkQ0JtYkc5aGRDQlRhR2xtZEZKcFoyaDBPQ0E5SURFdUlDOGdNalUyTGpzS2RtVmpOQ0J3WVdOclJHVndkR2hVYjFKSFFrRW9JR052Ym5OMElHbHVJR1pzYjJGMElIWWdLU0I3Q2dsMlpXTTBJSElnUFNCMlpXTTBLQ0JtY21GamRDZ2dkaUFxSUZCaFkydEdZV04wYjNKeklDa3NJSFlnS1RzS0NYSXVlWHAzSUMwOUlISXVlSGw2SUNvZ1UyaHBablJTYVdkb2REZzdDWEpsZEhWeWJpQnlJQ29nVUdGamExVndjMk5oYkdVN0NuMEtabXh2WVhRZ2RXNXdZV05yVWtkQ1FWUnZSR1Z3ZEdnb0lHTnZibk4wSUdsdUlIWmxZelFnZGlBcElIc0tDWEpsZEhWeWJpQmtiM1FvSUhZc0lGVnVjR0ZqYTBaaFkzUnZjbk1nS1RzS2ZRcDJaV00wSUhCaFkyc3lTR0ZzWmxSdlVrZENRU2dnZG1Wak1pQjJJQ2tnZXdvSmRtVmpOQ0J5SUQwZ2RtVmpOQ2dnZGk1NExDQm1jbUZqZENnZ2RpNTRJQ29nTWpVMUxqQWdLU3dnZGk1NUxDQm1jbUZqZENnZ2RpNTVJQ29nTWpVMUxqQWdLU0FwT3dvSmNtVjBkWEp1SUhabFl6UW9JSEl1ZUNBdElISXVlU0F2SURJMU5TNHdMQ0J5TG5rc0lISXVlaUF0SUhJdWR5QXZJREkxTlM0d0xDQnlMbmNnS1RzS2ZRcDJaV015SUhWdWNHRmphMUpIUWtGVWJ6SklZV3htS0NCMlpXTTBJSFlnS1NCN0NnbHlaWFIxY200Z2RtVmpNaWdnZGk1NElDc2dLQ0IyTG5rZ0x5QXlOVFV1TUNBcExDQjJMbm9nS3lBb0lIWXVkeUF2SURJMU5TNHdJQ2tnS1RzS2ZRcG1iRzloZENCMmFXVjNXbFJ2VDNKMGFHOW5jbUZ3YUdsalJHVndkR2dvSUdOdmJuTjBJR2x1SUdac2IyRjBJSFpwWlhkYUxDQmpiMjV6ZENCcGJpQm1iRzloZENCdVpXRnlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQm1ZWElnS1NCN0NnbHlaWFIxY200Z0tDQjJhV1YzV2lBcklHNWxZWElnS1NBdklDZ2dibVZoY2lBdElHWmhjaUFwT3dwOUNtWnNiMkYwSUc5eWRHaHZaM0poY0docFkwUmxjSFJvVkc5V2FXVjNXaWdnWTI5dWMzUWdhVzRnWm14dllYUWdiR2x1WldGeVEyeHBjRm9zSUdOdmJuTjBJR2x1SUdac2IyRjBJRzVsWVhJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdaaGNpQXBJSHNLQ1hKbGRIVnliaUJzYVc1bFlYSkRiR2x3V2lBcUlDZ2dibVZoY2lBdElHWmhjaUFwSUMwZ2JtVmhjanNLZlFwbWJHOWhkQ0IyYVdWM1dsUnZVR1Z5YzNCbFkzUnBkbVZFWlhCMGFDZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2RtbGxkMW9zSUdOdmJuTjBJR2x1SUdac2IyRjBJRzVsWVhJc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdaaGNpQXBJSHNLQ1hKbGRIVnliaUFvSUNnZ2JtVmhjaUFySUhacFpYZGFJQ2tnS2lCbVlYSWdLU0F2SUNnZ0tDQm1ZWElnTFNCdVpXRnlJQ2tnS2lCMmFXVjNXaUFwT3dwOUNtWnNiMkYwSUhCbGNuTndaV04wYVhabFJHVndkR2hVYjFacFpYZGFLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnBiblpEYkdsd1dpd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2JtVmhjaXdnWTI5dWMzUWdhVzRnWm14dllYUWdabUZ5SUNrZ2V3b0pjbVYwZFhKdUlDZ2dibVZoY2lBcUlHWmhjaUFwSUM4Z0tDQW9JR1poY2lBdElHNWxZWElnS1NBcUlHbHVka05zYVhCYUlDMGdabUZ5SUNrN0NuMWdMQ0JWY0NBOUlHQWphV1prWldZZ1VGSkZUVlZNVkVsUVRFbEZSRjlCVEZCSVFRb0paMnhmUm5KaFowTnZiRzl5TG5KbllpQXFQU0JuYkY5R2NtRm5RMjlzYjNJdVlUc0tJMlZ1WkdsbVlDd2dUM0FnUFNCZ2RtVmpOQ0J0ZGxCdmMybDBhVzl1SUQwZ2RtVmpOQ2dnZEhKaGJuTm1iM0p0WldRc0lERXVNQ0FwT3dvamFXWmtaV1lnVlZORlgwbE9VMVJCVGtOSlRrY0tDVzEyVUc5emFYUnBiMjRnUFNCcGJuTjBZVzVqWlUxaGRISnBlQ0FxSUcxMlVHOXphWFJwYjI0N0NpTmxibVJwWmdwdGRsQnZjMmwwYVc5dUlEMGdiVzlrWld4V2FXVjNUV0YwY21sNElDb2diWFpRYjNOcGRHbHZianNLWjJ4ZlVHOXphWFJwYjI0Z1BTQndjbTlxWldOMGFXOXVUV0YwY21sNElDb2diWFpRYjNOcGRHbHZianRnTENCSWNDQTlJR0FqYVdaa1pXWWdSRWxVU0VWU1NVNUhDZ2xuYkY5R2NtRm5RMjlzYjNJdWNtZGlJRDBnWkdsMGFHVnlhVzVuS0NCbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUNrN0NpTmxibVJwWm1Bc0lHdHdJRDBnWUNOcFptUmxaaUJFU1ZSSVJWSkpUa2NLQ1habFl6TWdaR2wwYUdWeWFXNW5LQ0IyWldNeklHTnZiRzl5SUNrZ2V3b0pDV1pzYjJGMElHZHlhV1JmY0c5emFYUnBiMjRnUFNCeVlXNWtLQ0JuYkY5R2NtRm5RMjl2Y21RdWVIa2dLVHNLQ1FsMlpXTXpJR1JwZEdobGNsOXphR2xtZEY5U1IwSWdQU0IyWldNektDQXdMakkxSUM4Z01qVTFMakFzSUMwd0xqSTFJQzhnTWpVMUxqQXNJREF1TWpVZ0x5QXlOVFV1TUNBcE93b0pDV1JwZEdobGNsOXphR2xtZEY5U1IwSWdQU0J0YVhnb0lESXVNQ0FxSUdScGRHaGxjbDl6YUdsbWRGOVNSMElzSUMweUxqQWdLaUJrYVhSb1pYSmZjMmhwWm5SZlVrZENMQ0JuY21sa1gzQnZjMmwwYVc5dUlDazdDZ2tKY21WMGRYSnVJR052Ykc5eUlDc2daR2wwYUdWeVgzTm9hV1owWDFKSFFqc0tDWDBLSTJWdVpHbG1ZQ3dnUjNBZ1BTQmdabXh2WVhRZ2NtOTFaMmh1WlhOelJtRmpkRzl5SUQwZ2NtOTFaMmh1WlhOek93b2phV1prWldZZ1ZWTkZYMUpQVlVkSVRrVlRVMDFCVUFvSmRtVmpOQ0IwWlhobGJGSnZkV2RvYm1WemN5QTlJSFJsZUhSMWNtVXlSQ2dnY205MVoyaHVaWE56VFdGd0xDQjJWWFlnS1RzS0NYSnZkV2RvYm1WemMwWmhZM1J2Y2lBcVBTQjBaWGhsYkZKdmRXZG9ibVZ6Y3k1bk93b2paVzVrYVdaZ0xDQldjQ0E5SUdBamFXWmtaV1lnVlZORlgxSlBWVWRJVGtWVFUwMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnY205MVoyaHVaWE56VFdGd093b2paVzVrYVdaZ0xDQlhjQ0E5SUdBamFXWmtaV1lnVlZORlgxTklRVVJQVjAxQlVBb0pJMmxtSUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1FsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNGc2dUbFZOWDBSSlVsOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna0pkbUZ5ZVdsdVp5QjJaV00wSUhaRWFYSmxZM1JwYjI1aGJGTm9ZV1J2ZDBOdmIzSmtXeUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDUWx6ZEhKMVkzUWdSR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZHlCN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQxSmhaR2wxY3pzS0NRa0pkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1gwN0Nna0pkVzVwWm05eWJTQkVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzZHpXeUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDU05sYm1ScFpnb0pJMmxtSUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2MzQnZkRk5vWVdSdmQwMWhjRnNnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1haaGNubHBibWNnZG1Wak5DQjJVM0J2ZEZOb1lXUnZkME52YjNKa1d5Qk9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna0pjM1J5ZFdOMElGTndiM1JNYVdkb2RGTm9ZV1J2ZHlCN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQxSmhaR2wxY3pzS0NRa0pkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1gwN0Nna0pkVzVwWm05eWJTQlRjRzkwVEdsbmFIUlRhR0ZrYjNjZ2MzQnZkRXhwWjJoMFUyaGhaRzkzYzFzZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkkyVnVaR2xtQ2dramFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnY0c5cGJuUlRhR0ZrYjNkTllYQmJJRTVWVFY5UVQwbE9WRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKZG1GeWVXbHVaeUIyWldNMElIWlFiMmx1ZEZOb1lXUnZkME52YjNKa1d5Qk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWE4wY25WamRDQlFiMmx1ZEV4cFoyaDBVMmhoWkc5M0lIc0tDUWtKWm14dllYUWdjMmhoWkc5M1FtbGhjenNLQ1FrSlpteHZZWFFnYzJoaFpHOTNUbTl5YldGc1FtbGhjenNLQ1FrSlpteHZZWFFnYzJoaFpHOTNVbUZrYVhWek93b0pDUWwyWldNeUlITm9ZV1J2ZDAxaGNGTnBlbVU3Q2drSkNXWnNiMkYwSUhOb1lXUnZkME5oYldWeVlVNWxZWEk3Q2drSkNXWnNiMkYwSUhOb1lXUnZkME5oYldWeVlVWmhjanNLQ1FsOU93b0pDWFZ1YVdadmNtMGdVRzlwYm5STWFXZG9kRk5vWVdSdmR5QndiMmx1ZEV4cFoyaDBVMmhoWkc5M2Mxc2dUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDU05sYm1ScFpnb0pabXh2WVhRZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyRnRjR3hsY2pKRUlHUmxjSFJvY3l3Z2RtVmpNaUIxZGl3Z1pteHZZWFFnWTI5dGNHRnlaU0FwSUhzS0NRbHlaWFIxY200Z2MzUmxjQ2dnWTI5dGNHRnlaU3dnZFc1d1lXTnJVa2RDUVZSdlJHVndkR2dvSUhSbGVIUjFjbVV5UkNnZ1pHVndkR2h6TENCMWRpQXBJQ2tnS1RzS0NYMEtDWFpsWXpJZ2RHVjRkSFZ5WlRKRVJHbHpkSEpwWW5WMGFXOXVLQ0J6WVcxd2JHVnlNa1FnYzJoaFpHOTNMQ0IyWldNeUlIVjJJQ2tnZXdvSkNYSmxkSFZ5YmlCMWJuQmhZMnRTUjBKQlZHOHlTR0ZzWmlnZ2RHVjRkSFZ5WlRKRUtDQnphR0ZrYjNjc0lIVjJJQ2tnS1RzS0NYMEtDV1pzYjJGMElGWlRUVk5vWVdSdmR5QW9jMkZ0Y0d4bGNqSkVJSE5vWVdSdmR5d2dkbVZqTWlCMWRpd2dabXh2WVhRZ1kyOXRjR0Z5WlNBcGV3b0pDV1pzYjJGMElHOWpZMngxYzJsdmJpQTlJREV1TURzS0NRbDJaV015SUdScGMzUnlhV0oxZEdsdmJpQTlJSFJsZUhSMWNtVXlSRVJwYzNSeWFXSjFkR2x2YmlnZ2MyaGhaRzkzTENCMWRpQXBPd29KQ1dac2IyRjBJR2hoY21SZmMyaGhaRzkzSUQwZ2MzUmxjQ2dnWTI5dGNHRnlaU0FzSUdScGMzUnlhV0oxZEdsdmJpNTRJQ2s3Q2drSmFXWWdLR2hoY21SZmMyaGhaRzkzSUNFOUlERXVNQ0FwSUhzS0NRa0pabXh2WVhRZ1pHbHpkR0Z1WTJVZ1BTQmpiMjF3WVhKbElDMGdaR2x6ZEhKcFluVjBhVzl1TG5nZ093b0pDUWxtYkc5aGRDQjJZWEpwWVc1alpTQTlJRzFoZUNnZ01DNHdNREF3TUN3Z1pHbHpkSEpwWW5WMGFXOXVMbmtnS2lCa2FYTjBjbWxpZFhScGIyNHVlU0FwT3dvSkNRbG1iRzloZENCemIyWjBibVZ6YzE5d2NtOWlZV0pwYkdsMGVTQTlJSFpoY21saGJtTmxJQzhnS0haaGNtbGhibU5sSUNzZ1pHbHpkR0Z1WTJVZ0tpQmthWE4wWVc1alpTQXBPd2tKQ1hOdlpuUnVaWE56WDNCeWIySmhZbWxzYVhSNUlEMGdZMnhoYlhBb0lDZ2djMjltZEc1bGMzTmZjSEp2WW1GaWFXeHBkSGtnTFNBd0xqTWdLU0F2SUNnZ01DNDVOU0F0SURBdU15QXBMQ0F3TGpBc0lERXVNQ0FwT3drSkNXOWpZMngxYzJsdmJpQTlJR05zWVcxd0tDQnRZWGdvSUdoaGNtUmZjMmhoWkc5M0xDQnpiMlowYm1WemMxOXdjbTlpWVdKcGJHbDBlU0FwTENBd0xqQXNJREV1TUNBcE93b0pDWDBLQ1FseVpYUjFjbTRnYjJOamJIVnphVzl1T3dvSmZRb0pabXh2WVhRZ1oyVjBVMmhoWkc5M0tDQnpZVzF3YkdWeU1rUWdjMmhoWkc5M1RXRndMQ0IyWldNeUlITm9ZV1J2ZDAxaGNGTnBlbVVzSUdac2IyRjBJSE5vWVdSdmQwSnBZWE1zSUdac2IyRjBJSE5vWVdSdmQxSmhaR2wxY3l3Z2RtVmpOQ0J6YUdGa2IzZERiMjl5WkNBcElIc0tDUWxtYkc5aGRDQnphR0ZrYjNjZ1BTQXhMakE3Q2drSmMyaGhaRzkzUTI5dmNtUXVlSGw2SUM4OUlITm9ZV1J2ZDBOdmIzSmtMbmM3Q2drSmMyaGhaRzkzUTI5dmNtUXVlaUFyUFNCemFHRmtiM2RDYVdGek93b0pDV0oyWldNMElHbHVSbkoxYzNSMWJWWmxZeUE5SUdKMlpXTTBJQ2dnYzJoaFpHOTNRMjl2Y21RdWVDQStQU0F3TGpBc0lITm9ZV1J2ZDBOdmIzSmtMbmdnUEQwZ01TNHdMQ0J6YUdGa2IzZERiMjl5WkM1NUlENDlJREF1TUN3Z2MyaGhaRzkzUTI5dmNtUXVlU0E4UFNBeExqQWdLVHNLQ1FsaWIyOXNJR2x1Um5KMWMzUjFiU0E5SUdGc2JDZ2dhVzVHY25WemRIVnRWbVZqSUNrN0Nna0pZblpsWXpJZ1puSjFjM1IxYlZSbGMzUldaV01nUFNCaWRtVmpNaWdnYVc1R2NuVnpkSFZ0TENCemFHRmtiM2REYjI5eVpDNTZJRHc5SURFdU1DQXBPd29KQ1dKdmIyd2dabkoxYzNSMWJWUmxjM1FnUFNCaGJHd29JR1p5ZFhOMGRXMVVaWE4wVm1WaklDazdDZ2tKYVdZZ0tDQm1jblZ6ZEhWdFZHVnpkQ0FwSUhzS0NRa2phV1lnWkdWbWFXNWxaQ2dnVTBoQlJFOVhUVUZRWDFSWlVFVmZVRU5HSUNrS0NRa0pkbVZqTWlCMFpYaGxiRk5wZW1VZ1BTQjJaV015S0NBeExqQWdLU0F2SUhOb1lXUnZkMDFoY0ZOcGVtVTdDZ2tKQ1dac2IyRjBJR1I0TUNBOUlDMGdkR1Y0Wld4VGFYcGxMbmdnS2lCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1dac2IyRjBJR1I1TUNBOUlDMGdkR1Y0Wld4VGFYcGxMbmtnS2lCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1dac2IyRjBJR1I0TVNBOUlDc2dkR1Y0Wld4VGFYcGxMbmdnS2lCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1dac2IyRjBJR1I1TVNBOUlDc2dkR1Y0Wld4VGFYcGxMbmtnS2lCemFHRmtiM2RTWVdScGRYTTdDZ2tKQ1dac2IyRjBJR1I0TWlBOUlHUjRNQ0F2SURJdU1Ec0tDUWtKWm14dllYUWdaSGt5SUQwZ1pIa3dJQzhnTWk0d093b0pDUWxtYkc5aGRDQmtlRE1nUFNCa2VERWdMeUF5TGpBN0Nna0pDV1pzYjJGMElHUjVNeUE5SUdSNU1TQXZJREl1TURzS0NRa0pjMmhoWkc5M0lEMGdLQW9KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE1Dd2daSGt3SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2dNQzR3TENCa2VUQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VERXNJR1I1TUNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TWl3Z1pIa3lJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ01DNHdMQ0JrZVRJZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURNc0lHUjVNaUFwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNQ3dnTUM0d0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhneUxDQXdMakFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnWkhnekxDQXdMakFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlREVzSURBdU1DQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE1pd2daSGt6SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2dNQzR3TENCa2VUTWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VETXNJR1I1TXlBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TUN3Z1pIa3hJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ01DNHdMQ0JrZVRFZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURFc0lHUjVNU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tLQ1FrSktTQXFJQ2dnTVM0d0lDOGdNVGN1TUNBcE93b0pDU05sYkdsbUlHUmxabWx1WldRb0lGTklRVVJQVjAxQlVGOVVXVkJGWDFCRFJsOVRUMFpVSUNrS0NRa0pkbVZqTWlCMFpYaGxiRk5wZW1VZ1BTQjJaV015S0NBeExqQWdLU0F2SUhOb1lXUnZkMDFoY0ZOcGVtVTdDZ2tKQ1dac2IyRjBJR1I0SUQwZ2RHVjRaV3hUYVhwbExuZzdDZ2tKQ1dac2IyRjBJR1I1SUQwZ2RHVjRaV3hUYVhwbExuazdDZ2tKQ1habFl6SWdkWFlnUFNCemFHRmtiM2REYjI5eVpDNTRlVHNLQ1FrSmRtVmpNaUJtSUQwZ1puSmhZM1FvSUhWMklDb2djMmhoWkc5M1RXRndVMmw2WlNBcklEQXVOU0FwT3dvSkNRbDFkaUF0UFNCbUlDb2dkR1Y0Wld4VGFYcGxPd29KQ1FsemFHRmtiM2NnUFNBb0Nna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMkxDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lHUjRMQ0F3TGpBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQXdMakFzSUdSNUlDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZEdWNFpXeFRhWHBsTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0piV2w0S0NCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dMV1I0TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQ0FLQ1FrSkNRa2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSURJdU1DQXFJR1I0TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNTQm1MbmdnS1NBckNna0pDUWx0YVhnb0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F0Wkhnc0lHUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dnQ2drSkNRa0pJSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NBeUxqQWdLaUJrZUN3Z1pIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQW9KQ1FrSkNTQm1MbmdnS1NBckNna0pDUWx0YVhnb0lIUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F3TGpBc0lDMWtlU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tzSUFvSkNRa0pDU0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ01DNHdMQ0F5TGpBZ0tpQmtlU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tzQ2drSkNRa0pJR1l1ZVNBcElDc0tDUWtKQ1cxcGVDZ2dkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0IxZGlBcklIWmxZeklvSUdSNExDQXRaSGtnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwTENBS0NRa0pDUWtnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lHUjRMQ0F5TGpBZ0tpQmtlU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tzQ2drSkNRa0pJR1l1ZVNBcElDc0tDUWtKQ1cxcGVDZ2diV2w0S0NCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dMV1I0TENBdFpIa2dLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBMQ0FLQ1FrSkNRa0pJQ0IwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhWMklDc2dkbVZqTWlnZ01pNHdJQ29nWkhnc0lDMWtlU0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tzQ2drSkNRa0pDU0FnWmk1NElDa3NDZ2tKQ1FrSklHMXBlQ2dnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lDMWtlQ3dnTWk0d0lDb2daSGtnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwTENBS0NRa0pDUWtKSUNCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dNaTR3SUNvZ1pIZ3NJREl1TUNBcUlHUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU3dLQ1FrSkNRa0pJQ0JtTG5nZ0tTd0tDUWtKQ1FrZ1ppNTVJQ2tLQ1FrSktTQXFJQ2dnTVM0d0lDOGdPUzR3SUNrN0Nna0pJMlZzYVdZZ1pHVm1hVzVsWkNnZ1UwaEJSRTlYVFVGUVgxUlpVRVZmVmxOTklDa0tDUWtKYzJoaFpHOTNJRDBnVmxOTlUyaGhaRzkzS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1TENCemFHRmtiM2REYjI5eVpDNTZJQ2s3Q2drSkkyVnNjMlVLQ1FrSmMyaGhaRzkzSUQwZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVN3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwT3dvSkNTTmxibVJwWmdvSkNYMEtDUWx5WlhSMWNtNGdjMmhoWkc5M093b0pmUW9KZG1Wak1pQmpkV0psVkc5VlZpZ2dkbVZqTXlCMkxDQm1iRzloZENCMFpYaGxiRk5wZW1WWklDa2dld29KQ1habFl6TWdZV0p6VmlBOUlHRmljeWdnZGlBcE93b0pDV1pzYjJGMElITmpZV3hsVkc5RGRXSmxJRDBnTVM0d0lDOGdiV0Y0S0NCaFluTldMbmdzSUcxaGVDZ2dZV0p6Vmk1NUxDQmhZbk5XTG5vZ0tTQXBPd29KQ1dGaWMxWWdLajBnYzJOaGJHVlViME4xWW1VN0Nna0pkaUFxUFNCelkyRnNaVlJ2UTNWaVpTQXFJQ2dnTVM0d0lDMGdNaTR3SUNvZ2RHVjRaV3hUYVhwbFdTQXBPd29KQ1habFl6SWdjR3hoYm1GeUlEMGdkaTU0ZVRzS0NRbG1iRzloZENCaGJHMXZjM1JCVkdWNFpXd2dQU0F4TGpVZ0tpQjBaWGhsYkZOcGVtVlpPd29KQ1dac2IyRjBJR0ZzYlc5emRFOXVaU0E5SURFdU1DQXRJR0ZzYlc5emRFRlVaWGhsYkRzS0NRbHBaaUFvSUdGaWMxWXVlaUErUFNCaGJHMXZjM1JQYm1VZ0tTQjdDZ2tKQ1dsbUlDZ2dkaTU2SUQ0Z01DNHdJQ2tLQ1FrSkNYQnNZVzVoY2k1NElEMGdOQzR3SUMwZ2RpNTRPd29KQ1gwZ1pXeHpaU0JwWmlBb0lHRmljMVl1ZUNBK1BTQmhiRzF2YzNSUGJtVWdLU0I3Q2drSkNXWnNiMkYwSUhOcFoyNVlJRDBnYzJsbmJpZ2dkaTU0SUNrN0Nna0pDWEJzWVc1aGNpNTRJRDBnZGk1NklDb2djMmxuYmxnZ0t5QXlMakFnS2lCemFXZHVXRHNLQ1FsOUlHVnNjMlVnYVdZZ0tDQmhZbk5XTG5rZ1BqMGdZV3h0YjNOMFQyNWxJQ2tnZXdvSkNRbG1iRzloZENCemFXZHVXU0E5SUhOcFoyNG9JSFl1ZVNBcE93b0pDUWx3YkdGdVlYSXVlQ0E5SUhZdWVDQXJJREl1TUNBcUlITnBaMjVaSUNzZ01pNHdPd29KQ1Fsd2JHRnVZWEl1ZVNBOUlIWXVlaUFxSUhOcFoyNVpJQzBnTWk0d093b0pDWDBLQ1FseVpYUjFjbTRnZG1Wak1pZ2dNQzR4TWpVc0lEQXVNalVnS1NBcUlIQnNZVzVoY2lBcklIWmxZeklvSURBdU16YzFMQ0F3TGpjMUlDazdDZ2w5Q2dsbWJHOWhkQ0JuWlhSUWIybHVkRk5vWVdSdmR5Z2djMkZ0Y0d4bGNqSkVJSE5vWVdSdmQwMWhjQ3dnZG1Wak1pQnphR0ZrYjNkTllYQlRhWHBsTENCbWJHOWhkQ0J6YUdGa2IzZENhV0Z6TENCbWJHOWhkQ0J6YUdGa2IzZFNZV1JwZFhNc0lIWmxZelFnYzJoaFpHOTNRMjl2Y21Rc0lHWnNiMkYwSUhOb1lXUnZkME5oYldWeVlVNWxZWElzSUdac2IyRjBJSE5vWVdSdmQwTmhiV1Z5WVVaaGNpQXBJSHNLQ1FsMlpXTXlJSFJsZUdWc1UybDZaU0E5SUhabFl6SW9JREV1TUNBcElDOGdLQ0J6YUdGa2IzZE5ZWEJUYVhwbElDb2dkbVZqTWlnZ05DNHdMQ0F5TGpBZ0tTQXBPd29KQ1habFl6TWdiR2xuYUhSVWIxQnZjMmwwYVc5dUlEMGdjMmhoWkc5M1EyOXZjbVF1ZUhsNk93b0pDV1pzYjJGMElHUndJRDBnS0NCc1pXNW5kR2dvSUd4cFoyaDBWRzlRYjNOcGRHbHZiaUFwSUMwZ2MyaGhaRzkzUTJGdFpYSmhUbVZoY2lBcElDOGdLQ0J6YUdGa2IzZERZVzFsY21GR1lYSWdMU0J6YUdGa2IzZERZVzFsY21GT1pXRnlJQ2s3Q1Fsa2NDQXJQU0J6YUdGa2IzZENhV0Z6T3dvSkNYWmxZek1nWW1RelJDQTlJRzV2Y20xaGJHbDZaU2dnYkdsbmFIUlViMUJ2YzJsMGFXOXVJQ2s3Q2drSkkybG1JR1JsWm1sdVpXUW9JRk5JUVVSUFYwMUJVRjlVV1ZCRlgxQkRSaUFwSUh4OElHUmxabWx1WldRb0lGTklRVVJQVjAxQlVGOVVXVkJGWDFCRFJsOVRUMFpVSUNrZ2ZId2daR1ZtYVc1bFpDZ2dVMGhCUkU5WFRVRlFYMVJaVUVWZlZsTk5JQ2tLQ1FrSmRtVmpNaUJ2Wm1aelpYUWdQU0IyWldNeUtDQXRJREVzSURFZ0tTQXFJSE5vWVdSdmQxSmhaR2wxY3lBcUlIUmxlR1ZzVTJsNlpTNTVPd29KQ1FseVpYUjFjbTRnS0FvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTRlWGtzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU1ZVhrc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NGVYZ3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTVlWGdzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ3dnZEdWNFpXeFRhWHBsTG5rZ0tTd2daSEFnS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUdOMVltVlViMVZXS0NCaVpETkVJQ3NnYjJabWMyVjBMbmg0ZVN3Z2RHVjRaV3hUYVhwbExua2dLU3dnWkhBZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lHTjFZbVZVYjFWV0tDQmlaRE5FSUNzZ2IyWm1jMlYwTG5sNGVTd2dkR1Y0Wld4VGFYcGxMbmtnS1N3Z1pIQWdLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJR04xWW1WVWIxVldLQ0JpWkRORUlDc2diMlptYzJWMExuaDRlQ3dnZEdWNFpXeFRhWHBsTG5rZ0tTd2daSEFnS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUdOMVltVlViMVZXS0NCaVpETkVJQ3NnYjJabWMyVjBMbmw0ZUN3Z2RHVjRaV3hUYVhwbExua2dLU3dnWkhBZ0tRb0pDUWtwSUNvZ0tDQXhMakFnTHlBNUxqQWdLVHNLQ1FralpXeHpaUW9KQ1FseVpYUjFjbTRnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ3dnZEdWNFpXeFRhWHBsTG5rZ0tTd2daSEFnS1RzS0NRa2paVzVrYVdZS0NYMEtJMlZ1WkdsbVlDd2djWEFnUFNCZ0kybG1aR1ZtSUZWVFJWOVRTRUZFVDFkTlFWQUtDU05wWmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2drSmRXNXBabTl5YlNCdFlYUTBJR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0YwY21sNFd5Qk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbDJZWEo1YVc1bklIWmxZelFnZGtScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzUTI5dmNtUmJJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWE4wY25WamRDQkVhWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzSUhzS0NRa0pabXh2WVhRZ2MyaGhaRzkzUW1saGN6c0tDUWtKWm14dllYUWdjMmhoWkc5M1RtOXliV0ZzUW1saGN6c0tDUWtKWm14dllYUWdjMmhoWkc5M1VtRmthWFZ6T3dvSkNRbDJaV015SUhOb1lXUnZkMDFoY0ZOcGVtVTdDZ2tKZlRzS0NRbDFibWxtYjNKdElFUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnWkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmQzTmJJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1FsMWJtbG1iM0p0SUcxaGREUWdjM0J2ZEZOb1lXUnZkMDFoZEhKcGVGc2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWFpoY25scGJtY2dkbVZqTkNCMlUzQnZkRk5vWVdSdmQwTnZiM0prV3lCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmMzUnlkV04wSUZOd2IzUk1hV2RvZEZOb1lXUnZkeUI3Q2drSkNXWnNiMkYwSUhOb1lXUnZkMEpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjenNLQ1FrSmRtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDWDA3Q2drSmRXNXBabTl5YlNCVGNHOTBUR2xuYUhSVGFHRmtiM2NnYzNCdmRFeHBaMmgwVTJoaFpHOTNjMXNnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KSTJWdVpHbG1DZ2tqYVdZZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna0pkVzVwWm05eWJTQnRZWFEwSUhCdmFXNTBVMmhoWkc5M1RXRjBjbWw0V3lCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYWmhjbmxwYm1jZ2RtVmpOQ0IyVUc5cGJuUlRhR0ZrYjNkRGIyOXlaRnNnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsemRISjFZM1FnVUc5cGJuUk1hV2RvZEZOb1lXUnZkeUI3Q2drSkNXWnNiMkYwSUhOb1lXUnZkMEpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDFKaFpHbDFjenNLQ1FrSmRtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbE93b0pDUWxtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZPWldGeU93b0pDUWxtYkc5aGRDQnphR0ZrYjNkRFlXMWxjbUZHWVhJN0Nna0pmVHNLQ1FsMWJtbG1iM0p0SUZCdmFXNTBUR2xuYUhSVGFHRmtiM2NnY0c5cGJuUk1hV2RvZEZOb1lXUnZkM05iSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnV0hBZ1BTQmdJMmxtWkdWbUlGVlRSVjlUU0VGRVQxZE5RVkFLQ1NOcFppQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0lIeDhJRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdJSHg4SUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRDRnTUFvSkNYWmxZek1nYzJoaFpHOTNWMjl5YkdST2IzSnRZV3dnUFNCcGJuWmxjbk5sVkhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCMGNtRnVjMlp2Y20xbFpFNXZjbTFoYkN3Z2RtbGxkMDFoZEhKcGVDQXBPd29KQ1habFl6UWdjMmhoWkc5M1YyOXliR1JRYjNOcGRHbHZianNLQ1NObGJtUnBaZ29KSTJsbUlFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXpzZ2FTQXJLeUFwSUhzS0NRbHphR0ZrYjNkWGIzSnNaRkJ2YzJsMGFXOXVJRDBnZDI5eWJHUlFiM05wZEdsdmJpQXJJSFpsWXpRb0lITm9ZV1J2ZDFkdmNteGtUbTl5YldGc0lDb2daR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZDNOYklHa2dYUzV6YUdGa2IzZE9iM0p0WVd4Q2FXRnpMQ0F3SUNrN0Nna0pka1JwY21WamRHbHZibUZzVTJoaFpHOTNRMjl2Y21SYklHa2dYU0E5SUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGMGNtbDRXeUJwSUYwZ0tpQnphR0ZrYjNkWGIzSnNaRkJ2YzJsMGFXOXVPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLQ1NObGJtUnBaZ29KSTJsbUlFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVE95QnBJQ3NySUNrZ2V3b0pDWE5vWVdSdmQxZHZjbXhrVUc5emFYUnBiMjRnUFNCM2IzSnNaRkJ2YzJsMGFXOXVJQ3NnZG1Wak5DZ2djMmhoWkc5M1YyOXliR1JPYjNKdFlXd2dLaUJ6Y0c5MFRHbG5hSFJUYUdGa2IzZHpXeUJwSUYwdWMyaGhaRzkzVG05eWJXRnNRbWxoY3l3Z01DQXBPd29KQ1haVGNHOTBVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTQTlJSE53YjNSVGFHRmtiM2ROWVhSeWFYaGJJR2tnWFNBcUlITm9ZV1J2ZDFkdmNteGtVRzl6YVhScGIyNDdDZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9KSTJWdVpHbG1DZ2tqYVdZZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV6c2dhU0FyS3lBcElIc0tDUWx6YUdGa2IzZFhiM0pzWkZCdmMybDBhVzl1SUQwZ2QyOXliR1JRYjNOcGRHbHZiaUFySUhabFl6UW9JSE5vWVdSdmQxZHZjbXhrVG05eWJXRnNJQ29nY0c5cGJuUk1hV2RvZEZOb1lXUnZkM05iSUdrZ1hTNXphR0ZrYjNkT2IzSnRZV3hDYVdGekxDQXdJQ2s3Q2drSmRsQnZhVzUwVTJoaFpHOTNRMjl2Y21SYklHa2dYU0E5SUhCdmFXNTBVMmhoWkc5M1RXRjBjbWw0V3lCcElGMGdLaUJ6YUdGa2IzZFhiM0pzWkZCdmMybDBhVzl1T3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvalpXNWthV1pnTENCS2NDQTlJR0JtYkc5aGRDQm5aWFJUYUdGa2IzZE5ZWE5yS0NrZ2V3b0pabXh2WVhRZ2MyaGhaRzkzSUQwZ01TNHdPd29KSTJsbVpHVm1JRlZUUlY5VFNFRkVUMWROUVZBS0NTTnBaaUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2xFYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhRN0Nna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYM04wWVhKMENnbG1iM0lnS0NCcGJuUWdhU0E5SURBN0lHa2dQQ0JPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNN0lHa2dLeXNnS1NCN0Nna0paR2x5WldOMGFXOXVZV3hNYVdkb2RDQTlJR1JwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjA3Q2drSmMyaGhaRzkzSUNvOUlISmxZMlZwZG1WVGFHRmtiM2NnUHlCblpYUlRhR0ZrYjNjb0lHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRndXeUJwSUYwc0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhRdWMyaGhaRzkzVFdGd1UybDZaU3dnWkdseVpXTjBhVzl1WVd4TWFXZG9kQzV6YUdGa2IzZENhV0Z6TENCa2FYSmxZM1JwYjI1aGJFeHBaMmgwTG5Ob1lXUnZkMUpoWkdsMWN5d2dka1JwY21WamRHbHZibUZzVTJoaFpHOTNRMjl2Y21SYklHa2dYU0FwSURvZ01TNHdPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLQ1NObGJtUnBaZ29KSTJsbUlFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0NnbFRjRzkwVEdsbmFIUlRhR0ZrYjNjZ2MzQnZkRXhwWjJoME93b0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRBb0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV6c2dhU0FyS3lBcElIc0tDUWx6Y0c5MFRHbG5hSFFnUFNCemNHOTBUR2xuYUhSVGFHRmtiM2R6V3lCcElGMDdDZ2tKYzJoaFpHOTNJQ285SUhKbFkyVnBkbVZUYUdGa2IzY2dQeUJuWlhSVGFHRmtiM2NvSUhOd2IzUlRhR0ZrYjNkTllYQmJJR2tnWFN3Z2MzQnZkRXhwWjJoMExuTm9ZV1J2ZDAxaGNGTnBlbVVzSUhOd2IzUk1hV2RvZEM1emFHRmtiM2RDYVdGekxDQnpjRzkwVEdsbmFIUXVjMmhoWkc5M1VtRmthWFZ6TENCMlUzQnZkRk5vWVdSdmQwTnZiM0prV3lCcElGMGdLU0E2SURFdU1Ec0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tqWlc1a2FXWUtDU05wWmlCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NWQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ2NHOXBiblJNYVdkb2REc0tDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRPeUJwSUNzcklDa2dld29KQ1hCdmFXNTBUR2xuYUhRZ1BTQndiMmx1ZEV4cFoyaDBVMmhoWkc5M2Mxc2dhU0JkT3dvSkNYTm9ZV1J2ZHlBcVBTQnlaV05sYVhabFUyaGhaRzkzSUQ4Z1oyVjBVRzlwYm5SVGFHRmtiM2NvSUhCdmFXNTBVMmhoWkc5M1RXRndXeUJwSUYwc0lIQnZhVzUwVEdsbmFIUXVjMmhoWkc5M1RXRndVMmw2WlN3Z2NHOXBiblJNYVdkb2RDNXphR0ZrYjNkQ2FXRnpMQ0J3YjJsdWRFeHBaMmgwTG5Ob1lXUnZkMUpoWkdsMWN5d2dkbEJ2YVc1MFUyaGhaRzkzUTI5dmNtUmJJR2tnWFN3Z2NHOXBiblJNYVdkb2RDNXphR0ZrYjNkRFlXMWxjbUZPWldGeUxDQndiMmx1ZEV4cFoyaDBMbk5vWVdSdmQwTmhiV1Z5WVVaaGNpQXBJRG9nTVM0d093b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05sYm1ScFpnb0pJMlZ1WkdsbUNnbHlaWFIxY200Z2MyaGhaRzkzT3dwOVlDd2dXWEFnUFNCZ0kybG1aR1ZtSUZWVFJWOVRTMGxPVGtsT1J3b0piV0YwTkNCaWIyNWxUV0YwV0NBOUlHZGxkRUp2Ym1WTllYUnlhWGdvSUhOcmFXNUpibVJsZUM1NElDazdDZ2x0WVhRMElHSnZibVZOWVhSWklEMGdaMlYwUW05dVpVMWhkSEpwZUNnZ2MydHBia2x1WkdWNExua2dLVHNLQ1cxaGREUWdZbTl1WlUxaGRGb2dQU0JuWlhSQ2IyNWxUV0YwY21sNEtDQnphMmx1U1c1a1pYZ3VlaUFwT3dvSmJXRjBOQ0JpYjI1bFRXRjBWeUE5SUdkbGRFSnZibVZOWVhSeWFYZ29JSE5yYVc1SmJtUmxlQzUzSUNrN0NpTmxibVJwWm1Bc0lGcHdJRDBnWUNOcFptUmxaaUJWVTBWZlUwdEpUazVKVGtjS0NYVnVhV1p2Y20wZ2JXRjBOQ0JpYVc1a1RXRjBjbWw0T3dvSmRXNXBabTl5YlNCdFlYUTBJR0pwYm1STllYUnlhWGhKYm5abGNuTmxPd29KSTJsbVpHVm1JRUpQVGtWZlZFVllWRlZTUlFvSkNYVnVhV1p2Y20wZ2FHbG5hSEFnYzJGdGNHeGxjakpFSUdKdmJtVlVaWGgwZFhKbE93b0pDWFZ1YVdadmNtMGdhVzUwSUdKdmJtVlVaWGgwZFhKbFUybDZaVHNLQ1FsdFlYUTBJR2RsZEVKdmJtVk5ZWFJ5YVhnb0lHTnZibk4wSUdsdUlHWnNiMkYwSUdrZ0tTQjdDZ2tKQ1dac2IyRjBJR29nUFNCcElDb2dOQzR3T3dvSkNRbG1iRzloZENCNElEMGdiVzlrS0NCcUxDQm1iRzloZENnZ1ltOXVaVlJsZUhSMWNtVlRhWHBsSUNrZ0tUc0tDUWtKWm14dllYUWdlU0E5SUdac2IyOXlLQ0JxSUM4Z1pteHZZWFFvSUdKdmJtVlVaWGgwZFhKbFUybDZaU0FwSUNrN0Nna0pDV1pzYjJGMElHUjRJRDBnTVM0d0lDOGdabXh2WVhRb0lHSnZibVZVWlhoMGRYSmxVMmw2WlNBcE93b0pDUWxtYkc5aGRDQmtlU0E5SURFdU1DQXZJR1pzYjJGMEtDQmliMjVsVkdWNGRIVnlaVk5wZW1VZ0tUc0tDUWtKZVNBOUlHUjVJQ29nS0NCNUlDc2dNQzQxSUNrN0Nna0pDWFpsWXpRZ2RqRWdQU0IwWlhoMGRYSmxNa1FvSUdKdmJtVlVaWGgwZFhKbExDQjJaV015S0NCa2VDQXFJQ2dnZUNBcklEQXVOU0FwTENCNUlDa2dLVHNLQ1FrSmRtVmpOQ0IyTWlBOUlIUmxlSFIxY21VeVJDZ2dZbTl1WlZSbGVIUjFjbVVzSUhabFl6SW9JR1I0SUNvZ0tDQjRJQ3NnTVM0MUlDa3NJSGtnS1NBcE93b0pDUWwyWldNMElIWXpJRDBnZEdWNGRIVnlaVEpFS0NCaWIyNWxWR1Y0ZEhWeVpTd2dkbVZqTWlnZ1pIZ2dLaUFvSUhnZ0t5QXlMalVnS1N3Z2VTQXBJQ2s3Q2drSkNYWmxZelFnZGpRZ1BTQjBaWGgwZFhKbE1rUW9JR0p2Ym1WVVpYaDBkWEpsTENCMlpXTXlLQ0JrZUNBcUlDZ2dlQ0FySURNdU5TQXBMQ0I1SUNrZ0tUc0tDUWtKYldGME5DQmliMjVsSUQwZ2JXRjBOQ2dnZGpFc0lIWXlMQ0IyTXl3Z2RqUWdLVHNLQ1FrSmNtVjBkWEp1SUdKdmJtVTdDZ2tKZlFvSkkyVnNjMlVLQ1FsMWJtbG1iM0p0SUcxaGREUWdZbTl1WlUxaGRISnBZMlZ6V3lCTlFWaGZRazlPUlZNZ1hUc0tDUWx0WVhRMElHZGxkRUp2Ym1WTllYUnlhWGdvSUdOdmJuTjBJR2x1SUdac2IyRjBJR2tnS1NCN0Nna0pDVzFoZERRZ1ltOXVaU0E5SUdKdmJtVk5ZWFJ5YVdObGMxc2dhVzUwS0drcElGMDdDZ2tKQ1hKbGRIVnliaUJpYjI1bE93b0pDWDBLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0FrY0NBOUlHQWphV1prWldZZ1ZWTkZYMU5MU1U1T1NVNUhDZ2wyWldNMElITnJhVzVXWlhKMFpYZ2dQU0JpYVc1a1RXRjBjbWw0SUNvZ2RtVmpOQ2dnZEhKaGJuTm1iM0p0WldRc0lERXVNQ0FwT3dvSmRtVmpOQ0J6YTJsdWJtVmtJRDBnZG1Wak5DZ2dNQzR3SUNrN0NnbHphMmx1Ym1Wa0lDczlJR0p2Ym1WTllYUllJQ29nYzJ0cGJsWmxjblJsZUNBcUlITnJhVzVYWldsbmFIUXVlRHNLQ1hOcmFXNXVaV1FnS3owZ1ltOXVaVTFoZEZrZ0tpQnphMmx1Vm1WeWRHVjRJQ29nYzJ0cGJsZGxhV2RvZEM1NU93b0pjMnRwYm01bFpDQXJQU0JpYjI1bFRXRjBXaUFxSUhOcmFXNVdaWEowWlhnZ0tpQnphMmx1VjJWcFoyaDBMbm83Q2dsemEybHVibVZrSUNzOUlHSnZibVZOWVhSWElDb2djMnRwYmxabGNuUmxlQ0FxSUhOcmFXNVhaV2xuYUhRdWR6c0tDWFJ5WVc1elptOXliV1ZrSUQwZ0tDQmlhVzVrVFdGMGNtbDRTVzUyWlhKelpTQXFJSE5yYVc1dVpXUWdLUzU0ZVhvN0NpTmxibVJwWm1Bc0lHcHdJRDBnWUNOcFptUmxaaUJWVTBWZlUwdEpUazVKVGtjS0NXMWhkRFFnYzJ0cGJrMWhkSEpwZUNBOUlHMWhkRFFvSURBdU1DQXBPd29KYzJ0cGJrMWhkSEpwZUNBclBTQnphMmx1VjJWcFoyaDBMbmdnS2lCaWIyNWxUV0YwV0RzS0NYTnJhVzVOWVhSeWFYZ2dLejBnYzJ0cGJsZGxhV2RvZEM1NUlDb2dZbTl1WlUxaGRGazdDZ2x6YTJsdVRXRjBjbWw0SUNzOUlITnJhVzVYWldsbmFIUXVlaUFxSUdKdmJtVk5ZWFJhT3dvSmMydHBiazFoZEhKcGVDQXJQU0J6YTJsdVYyVnBaMmgwTG5jZ0tpQmliMjVsVFdGMFZ6c0tDWE5yYVc1TllYUnlhWGdnUFNCaWFXNWtUV0YwY21sNFNXNTJaWEp6WlNBcUlITnJhVzVOWVhSeWFYZ2dLaUJpYVc1a1RXRjBjbWw0T3dvSmIySnFaV04wVG05eWJXRnNJRDBnZG1Wak5DZ2djMnRwYmsxaGRISnBlQ0FxSUhabFl6UW9JRzlpYW1WamRFNXZjbTFoYkN3Z01DNHdJQ2tnS1M1NGVYbzdDZ2tqYVdaa1pXWWdWVk5GWDFSQlRrZEZUbFFLQ1FsdlltcGxZM1JVWVc1blpXNTBJRDBnZG1Wak5DZ2djMnRwYmsxaGRISnBlQ0FxSUhabFl6UW9JRzlpYW1WamRGUmhibWRsYm5Rc0lEQXVNQ0FwSUNrdWVIbDZPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRkZ3SUQwZ1lHWnNiMkYwSUhOd1pXTjFiR0Z5VTNSeVpXNW5kR2c3Q2lOcFptUmxaaUJWVTBWZlUxQkZRMVZNUVZKTlFWQUtDWFpsWXpRZ2RHVjRaV3hUY0dWamRXeGhjaUE5SUhSbGVIUjFjbVV5UkNnZ2MzQmxZM1ZzWVhKTllYQXNJSFpWZGlBcE93b0pjM0JsWTNWc1lYSlRkSEpsYm1kMGFDQTlJSFJsZUdWc1UzQmxZM1ZzWVhJdWNqc0tJMlZzYzJVS0NYTndaV04xYkdGeVUzUnlaVzVuZEdnZ1BTQXhMakE3Q2lObGJtUnBabUFzSUV0d0lEMGdZQ05wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITndaV04xYkdGeVRXRndPd29qWlc1a2FXWmdMQ0JsYlNBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVkU5T1JWOU5RVkJRU1U1SElDa0tDV2RzWDBaeVlXZERiMnh2Y2k1eVoySWdQU0IwYjI1bFRXRndjR2x1WnlnZ1oyeGZSbkpoWjBOdmJHOXlMbkpuWWlBcE93b2paVzVrYVdaZ0xDQjBiU0E5SUdBamFXWnVaR1ZtSUhOaGRIVnlZWFJsQ2lOa1pXWnBibVVnYzJGMGRYSmhkR1VvSUdFZ0tTQmpiR0Z0Y0NnZ1lTd2dNQzR3TENBeExqQWdLUW9qWlc1a2FXWUtkVzVwWm05eWJTQm1iRzloZENCMGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbE93cDJaV016SUV4cGJtVmhjbFJ2Ym1WTllYQndhVzVuS0NCMlpXTXpJR052Ykc5eUlDa2dld29KY21WMGRYSnVJSFJ2Ym1WTllYQndhVzVuUlhod2IzTjFjbVVnS2lCamIyeHZjanNLZlFwMlpXTXpJRkpsYVc1b1lYSmtWRzl1WlUxaGNIQnBibWNvSUhabFl6TWdZMjlzYjNJZ0tTQjdDZ2xqYjJ4dmNpQXFQU0IwYjI1bFRXRndjR2x1WjBWNGNHOXpkWEpsT3dvSmNtVjBkWEp1SUhOaGRIVnlZWFJsS0NCamIyeHZjaUF2SUNnZ2RtVmpNeWdnTVM0d0lDa2dLeUJqYjJ4dmNpQXBJQ2s3Q24wS2RtVmpNeUJQY0hScGJXbDZaV1JEYVc1bGIyNVViMjVsVFdGd2NHbHVaeWdnZG1Wak15QmpiMnh2Y2lBcElIc0tDV052Ykc5eUlDbzlJSFJ2Ym1WTllYQndhVzVuUlhod2IzTjFjbVU3Q2dsamIyeHZjaUE5SUcxaGVDZ2dkbVZqTXlnZ01DNHdJQ2tzSUdOdmJHOXlJQzBnTUM0d01EUWdLVHNLQ1hKbGRIVnliaUJ3YjNjb0lDZ2dZMjlzYjNJZ0tpQW9JRFl1TWlBcUlHTnZiRzl5SUNzZ01DNDFJQ2tnS1NBdklDZ2dZMjlzYjNJZ0tpQW9JRFl1TWlBcUlHTnZiRzl5SUNzZ01TNDNJQ2tnS3lBd0xqQTJJQ2tzSUhabFl6TW9JREl1TWlBcElDazdDbjBLZG1Wak15QlNVbFJCYm1SUFJGUkdhWFFvSUhabFl6TWdkaUFwSUhzS0NYWmxZek1nWVNBOUlIWWdLaUFvSUhZZ0t5QXdMakF5TkRVM09EWWdLU0F0SURBdU1EQXdNRGt3TlRNM093b0pkbVZqTXlCaUlEMGdkaUFxSUNnZ01DNDVPRE0zTWprZ0tpQjJJQ3NnTUM0ME16STVOVEV3SUNrZ0t5QXdMakl6T0RBNE1Uc0tDWEpsZEhWeWJpQmhJQzhnWWpzS2ZRcDJaV016SUVGRFJWTkdhV3h0YVdOVWIyNWxUV0Z3Y0dsdVp5Z2dkbVZqTXlCamIyeHZjaUFwSUhzS0NXTnZibk4wSUcxaGRETWdRVU5GVTBsdWNIVjBUV0YwSUQwZ2JXRjBNeWdLQ1FsMlpXTXpLQ0F3TGpVNU56RTVMQ0F3TGpBM05qQXdMQ0F3TGpBeU9EUXdJQ2tzQ1FsMlpXTXpLQ0F3TGpNMU5EVTRMQ0F3TGprd09ETTBMQ0F3TGpFek16Z3pJQ2tzQ2drSmRtVmpNeWdnTUM0d05EZ3lNeXdnTUM0d01UVTJOaXdnTUM0NE16YzNOeUFwQ2drcE93b0pZMjl1YzNRZ2JXRjBNeUJCUTBWVFQzVjBjSFYwVFdGMElEMGdiV0YwTXlnS0NRbDJaV016S0NBZ01TNDJNRFEzTlN3Z0xUQXVNVEF5TURnc0lDMHdMakF3TXpJM0lDa3NDUWwyWldNektDQXRNQzQxTXpFd09Dd2dJREV1TVRBNE1UTXNJQzB3TGpBM01qYzJJQ2tzQ2drSmRtVmpNeWdnTFRBdU1EY3pOamNzSUMwd0xqQXdOakExTENBZ01TNHdOell3TWlBcENna3BPd29KWTI5c2IzSWdLajBnZEc5dVpVMWhjSEJwYm1kRmVIQnZjM1Z5WlNBdklEQXVOanNLQ1dOdmJHOXlJRDBnUVVORlUwbHVjSFYwVFdGMElDb2dZMjlzYjNJN0NnbGpiMnh2Y2lBOUlGSlNWRUZ1WkU5RVZFWnBkQ2dnWTI5c2IzSWdLVHNLQ1dOdmJHOXlJRDBnUVVORlUwOTFkSEIxZEUxaGRDQXFJR052Ykc5eU93b0pjbVYwZFhKdUlITmhkSFZ5WVhSbEtDQmpiMnh2Y2lBcE93cDlDblpsWXpNZ1EzVnpkRzl0Vkc5dVpVMWhjSEJwYm1jb0lIWmxZek1nWTI5c2IzSWdLU0I3SUhKbGRIVnliaUJqYjJ4dmNqc2dmV0FzSUc1dElEMGdZQ05wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0NnbG1iRzloZENCMGNtRnVjMjFwYzNOcGIyNUJiSEJvWVNBOUlERXVNRHNLQ1dac2IyRjBJSFJ5WVc1emJXbHpjMmx2YmtaaFkzUnZjaUE5SUhSeVlXNXpiV2x6YzJsdmJqc0tDV1pzYjJGMElIUm9hV05yYm1WemMwWmhZM1J2Y2lBOUlIUm9hV05yYm1WemN6c0tDU05wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T1RVRlFDZ2tKZEhKaGJuTnRhWE56YVc5dVJtRmpkRzl5SUNvOUlIUmxlSFIxY21VeVJDZ2dkSEpoYm5OdGFYTnphVzl1VFdGd0xDQjJWWFlnS1M1eU93b0pJMlZ1WkdsbUNna2phV1prWldZZ1ZWTkZYMVJJU1VOTFRrVlRVMDFCVUFvSkNYUm9hV05yYm1WemMwWmhZM1J2Y2lBcVBTQjBaWGgwZFhKbE1rUW9JSFJvYVdOcmJtVnpjMDFoY0N3Z2RsVjJJQ2t1WnpzS0NTTmxibVJwWmdvSmRtVmpNeUJ3YjNNZ1BTQjJWMjl5YkdSUWIzTnBkR2x2YmpzS0NYWmxZek1nZGlBOUlHNXZjbTFoYkdsNlpTZ2dZMkZ0WlhKaFVHOXphWFJwYjI0Z0xTQndiM01nS1RzS0NYWmxZek1nYmlBOUlHbHVkbVZ5YzJWVWNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lHNXZjbTFoYkN3Z2RtbGxkMDFoZEhKcGVDQXBPd29KZG1Wak5DQjBjbUZ1YzIxcGMzTnBiMjRnUFNCblpYUkpRa3hXYjJ4MWJXVlNaV1p5WVdOMGFXOXVLQW9KQ1c0c0lIWXNJSEp2ZFdkb2JtVnpjMFpoWTNSdmNpd2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5TENCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tOdmJHOXlMQ0J0WVhSbGNtbGhiQzV6Y0dWamRXeGhja1k1TUN3S0NRbHdiM01zSUcxdlpHVnNUV0YwY21sNExDQjJhV1YzVFdGMGNtbDRMQ0J3Y205cVpXTjBhVzl1VFdGMGNtbDRMQ0JwYjNJc0lIUm9hV05yYm1WemMwWmhZM1J2Y2l3S0NRbGhkSFJsYm5WaGRHbHZia052Ykc5eUxDQmhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJQ2s3Q2dsMGIzUmhiRVJwWm1aMWMyVWdQU0J0YVhnb0lIUnZkR0ZzUkdsbVpuVnpaU3dnZEhKaGJuTnRhWE56YVc5dUxuSm5ZaXdnZEhKaGJuTnRhWE56YVc5dVJtRmpkRzl5SUNrN0NnbDBjbUZ1YzIxcGMzTnBiMjVCYkhCb1lTQTlJRzFwZUNnZ2RISmhibk50YVhOemFXOXVRV3h3YUdFc0lIUnlZVzV6YldsemMybHZiaTVoTENCMGNtRnVjMjFwYzNOcGIyNUdZV04wYjNJZ0tUc0tJMlZ1WkdsbVlDd2dhVzBnUFNCZ0kybG1aR1ZtSUZWVFJWOVVVa0ZPVTAxSlUxTkpUMDRLQ1hWdWFXWnZjbTBnWm14dllYUWdkSEpoYm5OdGFYTnphVzl1T3dvSmRXNXBabTl5YlNCbWJHOWhkQ0IwYUdsamEyNWxjM003Q2dsMWJtbG1iM0p0SUdac2IyRjBJR0YwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlU3Q2dsMWJtbG1iM0p0SUhabFl6TWdZWFIwWlc1MVlYUnBiMjVEYjJ4dmNqc0tDU05wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T1RVRlFDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnZEhKaGJuTnRhWE56YVc5dVRXRndPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdWVk5GWDFSSVNVTkxUa1ZUVTAxQlVBb0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSFJvYVdOcmJtVnpjMDFoY0RzS0NTTmxibVJwWmdvSmRXNXBabTl5YlNCMlpXTXlJSFJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpUYVhwbE93b0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjazFoY0RzS0NYVnVhV1p2Y20wZ2JXRjBOQ0J0YjJSbGJFMWhkSEpwZURzS0NYVnVhV1p2Y20wZ2JXRjBOQ0J3Y205cVpXTjBhVzl1VFdGMGNtbDRPd29KZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkZCdmMybDBhVzl1T3dvSmRtVmpNeUJuWlhSV2IyeDFiV1ZVY21GdWMyMXBjM05wYjI1U1lYa29JSFpsWXpNZ2Jpd2dkbVZqTXlCMkxDQm1iRzloZENCMGFHbGphMjVsYzNNc0lHWnNiMkYwSUdsdmNpd2diV0YwTkNCdGIyUmxiRTFoZEhKcGVDQXBJSHNLQ1FsMlpXTXpJSEpsWm5KaFkzUnBiMjVXWldOMGIzSWdQU0J5WldaeVlXTjBLQ0F0SUhZc0lHNXZjbTFoYkdsNlpTZ2diaUFwTENBeExqQWdMeUJwYjNJZ0tUc0tDUWwyWldNeklHMXZaR1ZzVTJOaGJHVTdDZ2tKYlc5a1pXeFRZMkZzWlM1NElEMGdiR1Z1WjNSb0tDQjJaV016S0NCdGIyUmxiRTFoZEhKcGVGc2dNQ0JkTG5oNWVpQXBJQ2s3Q2drSmJXOWtaV3hUWTJGc1pTNTVJRDBnYkdWdVozUm9LQ0IyWldNektDQnRiMlJsYkUxaGRISnBlRnNnTVNCZExuaDVlaUFwSUNrN0Nna0piVzlrWld4VFkyRnNaUzU2SUQwZ2JHVnVaM1JvS0NCMlpXTXpLQ0J0YjJSbGJFMWhkSEpwZUZzZ01pQmRMbmg1ZWlBcElDazdDZ2tKY21WMGRYSnVJRzV2Y20xaGJHbDZaU2dnY21WbWNtRmpkR2x2YmxabFkzUnZjaUFwSUNvZ2RHaHBZMnR1WlhOeklDb2diVzlrWld4VFkyRnNaVHNLQ1gwS0NXWnNiMkYwSUdGd2NHeDVTVzl5Vkc5U2IzVm5hRzVsYzNNb0lHWnNiMkYwSUhKdmRXZG9ibVZ6Y3l3Z1pteHZZWFFnYVc5eUlDa2dld29KQ1hKbGRIVnliaUJ5YjNWbmFHNWxjM01nS2lCamJHRnRjQ2dnYVc5eUlDb2dNaTR3SUMwZ01pNHdMQ0F3TGpBc0lERXVNQ0FwT3dvSmZRb0pkbVZqTkNCblpYUlVjbUZ1YzIxcGMzTnBiMjVUWVcxd2JHVW9JSFpsWXpJZ1puSmhaME52YjNKa0xDQm1iRzloZENCeWIzVm5hRzVsYzNNc0lHWnNiMkYwSUdsdmNpQXBJSHNLQ1FsbWJHOWhkQ0JtY21GdFpXSjFabVpsY2t4dlpDQTlJR3h2WnpJb0lIUnlZVzV6YldsemMybHZibE5oYlhCc1pYSlRhWHBsTG5nZ0tTQXFJR0Z3Y0d4NVNXOXlWRzlTYjNWbmFHNWxjM01vSUhKdmRXZG9ibVZ6Y3l3Z2FXOXlJQ2s3Q2drSkkybG1aR1ZtSUZSRldGUlZVa1ZmVEU5RVgwVllWQW9KQ1FseVpYUjFjbTRnZEdWNGRIVnlaVEpFVEc5a1JWaFVLQ0IwY21GdWMyMXBjM05wYjI1VFlXMXdiR1Z5VFdGd0xDQm1jbUZuUTI5dmNtUXVlSGtzSUdaeVlXMWxZblZtWm1WeVRHOWtJQ2s3Q2drSkkyVnNjMlVLQ1FrSmNtVjBkWEp1SUhSbGVIUjFjbVV5UkNnZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNrMWhjQ3dnWm5KaFowTnZiM0prTG5oNUxDQm1jbUZ0WldKMVptWmxja3h2WkNBcE93b0pDU05sYm1ScFpnb0pmUW9KZG1Wak15QmhjSEJzZVZadmJIVnRaVUYwZEdWdWRXRjBhVzl1S0NCMlpXTXpJSEpoWkdsaGJtTmxMQ0JtYkc5aGRDQjBjbUZ1YzIxcGMzTnBiMjVFYVhOMFlXNWpaU3dnZG1Wak15QmhkSFJsYm5WaGRHbHZia052Ykc5eUxDQm1iRzloZENCaGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElDa2dld29KQ1dsbUlDZ2dZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0E5UFNBd0xqQWdLU0I3Q2drSkNYSmxkSFZ5YmlCeVlXUnBZVzVqWlRzS0NRbDlJR1ZzYzJVZ2V3b0pDUWwyWldNeklHRjBkR1Z1ZFdGMGFXOXVRMjlsWm1acFkybGxiblFnUFNBdGJHOW5LQ0JoZEhSbGJuVmhkR2x2YmtOdmJHOXlJQ2tnTHlCaGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObE93b0pDUWwyWldNeklIUnlZVzV6YldsMGRHRnVZMlVnUFNCbGVIQW9JQzBnWVhSMFpXNTFZWFJwYjI1RGIyVm1abWxqYVdWdWRDQXFJSFJ5WVc1emJXbHpjMmx2YmtScGMzUmhibU5sSUNrN0NRa0pjbVYwZFhKdUlIUnlZVzV6YldsMGRHRnVZMlVnS2lCeVlXUnBZVzVqWlRzS0NRbDlDZ2w5Q2dsMlpXTTBJR2RsZEVsQ1RGWnZiSFZ0WlZKbFpuSmhZM1JwYjI0b0lIWmxZek1nYml3Z2RtVmpNeUIyTENCbWJHOWhkQ0J5YjNWbmFHNWxjM01zSUhabFl6TWdaR2xtWm5WelpVTnZiRzl5TENCMlpXTXpJSE53WldOMWJHRnlRMjlzYjNJc0lHWnNiMkYwSUhOd1pXTjFiR0Z5Umprd0xBb0pDWFpsWXpNZ2NHOXphWFJwYjI0c0lHMWhkRFFnYlc5a1pXeE5ZWFJ5YVhnc0lHMWhkRFFnZG1sbGQwMWhkSEpwZUN3Z2JXRjBOQ0J3Y205cVRXRjBjbWw0TENCbWJHOWhkQ0JwYjNJc0lHWnNiMkYwSUhSb2FXTnJibVZ6Y3l3S0NRbDJaV016SUdGMGRHVnVkV0YwYVc5dVEyOXNiM0lzSUdac2IyRjBJR0YwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnS1NCN0Nna0pkbVZqTXlCMGNtRnVjMjFwYzNOcGIyNVNZWGtnUFNCblpYUldiMngxYldWVWNtRnVjMjFwYzNOcGIyNVNZWGtvSUc0c0lIWXNJSFJvYVdOcmJtVnpjeXdnYVc5eUxDQnRiMlJsYkUxaGRISnBlQ0FwT3dvSkNYWmxZek1nY21WbWNtRmpkR1ZrVW1GNVJYaHBkQ0E5SUhCdmMybDBhVzl1SUNzZ2RISmhibk50YVhOemFXOXVVbUY1T3dvSkNYWmxZelFnYm1SalVHOXpJRDBnY0hKdmFrMWhkSEpwZUNBcUlIWnBaWGROWVhSeWFYZ2dLaUIyWldNMEtDQnlaV1p5WVdOMFpXUlNZWGxGZUdsMExDQXhMakFnS1RzS0NRbDJaV015SUhKbFpuSmhZM1JwYjI1RGIyOXlaSE1nUFNCdVpHTlFiM011ZUhrZ0x5QnVaR05RYjNNdWR6c0tDUWx5WldaeVlXTjBhVzl1UTI5dmNtUnpJQ3M5SURFdU1Ec0tDUWx5WldaeVlXTjBhVzl1UTI5dmNtUnpJQzg5SURJdU1Ec0tDUWwyWldNMElIUnlZVzV6YldsMGRHVmtUR2xuYUhRZ1BTQm5aWFJVY21GdWMyMXBjM05wYjI1VFlXMXdiR1VvSUhKbFpuSmhZM1JwYjI1RGIyOXlaSE1zSUhKdmRXZG9ibVZ6Y3l3Z2FXOXlJQ2s3Q2drSmRtVmpNeUJoZEhSbGJuVmhkR1ZrUTI5c2IzSWdQU0JoY0hCc2VWWnZiSFZ0WlVGMGRHVnVkV0YwYVc5dUtDQjBjbUZ1YzIxcGRIUmxaRXhwWjJoMExuSm5ZaXdnYkdWdVozUm9LQ0IwY21GdWMyMXBjM05wYjI1U1lYa2dLU3dnWVhSMFpXNTFZWFJwYjI1RGIyeHZjaXdnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBcE93b0pDWFpsWXpNZ1JpQTlJRVZ1ZG1seWIyNXRaVzUwUWxKRVJpZ2diaXdnZGl3Z2MzQmxZM1ZzWVhKRGIyeHZjaXdnYzNCbFkzVnNZWEpHT1RBc0lISnZkV2RvYm1WemN5QXBPd29KQ1hKbGRIVnliaUIyWldNMEtDQW9JREV1TUNBdElFWWdLU0FxSUdGMGRHVnVkV0YwWldSRGIyeHZjaUFxSUdScFptWjFjMlZEYjJ4dmNpd2dkSEpoYm5OdGFYUjBaV1JNYVdkb2RDNWhJQ2s3Q2dsOUNpTmxibVJwWm1Bc0lISnRJRDBnWUNOcFppQW9JR1JsWm1sdVpXUW9JRlZUUlY5VlZpQXBJQ1ltSUNFZ1pHVm1hVzVsWkNnZ1ZWWlRYMVpGVWxSRldGOVBUa3haSUNrZ0tRb0pkbUZ5ZVdsdVp5QjJaV015SUhaVmRqc0tJMlZ1WkdsbVlDd2djMjBnUFNCZ0kybG1aR1ZtSUZWVFJWOVZWZ29KSTJsbVpHVm1JRlZXVTE5V1JWSlVSVmhmVDA1TVdRb0pDWFpsWXpJZ2RsVjJPd29KSTJWc2MyVUtDUWwyWVhKNWFXNW5JSFpsWXpJZ2RsVjJPd29KSTJWdVpHbG1DZ2wxYm1sbWIzSnRJRzFoZERNZ2RYWlVjbUZ1YzJadmNtMDdDaU5sYm1ScFptQXNJRzl0SUQwZ1lDTnBabVJsWmlCVlUwVmZWVllLQ1haVmRpQTlJQ2dnZFhaVWNtRnVjMlp2Y20wZ0tpQjJaV016S0NCMWRpd2dNU0FwSUNrdWVIazdDaU5sYm1ScFptQXNJR0Z0SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlRFbEhTRlJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlFVOU5RVkFnS1FvSmRtRnllV2x1WnlCMlpXTXlJSFpWZGpJN0NpTmxibVJwWm1Bc0lHeHRJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVEVsSFNGUk5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUVU5TlFWQWdLUW9KWVhSMGNtbGlkWFJsSUhabFl6SWdkWFl5T3dvSmRtRnllV2x1WnlCMlpXTXlJSFpWZGpJN0NnbDFibWxtYjNKdElHMWhkRE1nZFhZeVZISmhibk5tYjNKdE93b2paVzVrYVdaZ0xDQmpiU0E5SUdBamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDB4SlIwaFVUVUZRSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBGUFRVRlFJQ2tLQ1haVmRqSWdQU0FvSUhWMk1sUnlZVzV6Wm05eWJTQXFJSFpsWXpNb0lIVjJNaXdnTVNBcElDa3VlSGs3Q2lObGJtUnBabUFzSUdodElEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZSVTVXVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnUkVsVFZFRk9RMFVnS1NCOGZDQmtaV1pwYm1Wa0lDZ2dWVk5GWDFOSVFVUlBWMDFCVUNBcElIeDhJR1JsWm1sdVpXUWdLQ0JWVTBWZlZGSkJUbE5OU1ZOVFNVOU9JQ2tLQ1habFl6UWdkMjl5YkdSUWIzTnBkR2x2YmlBOUlIWmxZelFvSUhSeVlXNXpabTl5YldWa0xDQXhMakFnS1RzS0NTTnBabVJsWmlCVlUwVmZTVTVUVkVGT1EwbE9Sd29KQ1hkdmNteGtVRzl6YVhScGIyNGdQU0JwYm5OMFlXNWpaVTFoZEhKcGVDQXFJSGR2Y214a1VHOXphWFJwYjI0N0Nna2paVzVrYVdZS0NYZHZjbXhrVUc5emFYUnBiMjRnUFNCdGIyUmxiRTFoZEhKcGVDQXFJSGR2Y214a1VHOXphWFJwYjI0N0NpTmxibVJwWm1Bc0lIVnRJRDBnWUhaaGNubHBibWNnZG1Wak1pQjJWWFk3Q25WdWFXWnZjbTBnYldGME15QjFkbFJ5WVc1elptOXliVHNLZG05cFpDQnRZV2x1S0NrZ2V3b0pkbFYySUQwZ0tDQjFkbFJ5WVc1elptOXliU0FxSUhabFl6TW9JSFYyTENBeElDa2dLUzU0ZVRzS0NXZHNYMUJ2YzJsMGFXOXVJRDBnZG1Wak5DZ2djRzl6YVhScGIyNHVlSGtzSURFdU1Dd2dNUzR3SUNrN0NuMWdMQ0JrYlNBOUlHQjFibWxtYjNKdElITmhiWEJzWlhJeVJDQjBNa1E3Q25aaGNubHBibWNnZG1Wak1pQjJWWFk3Q25admFXUWdiV0ZwYmlncElIc0tDWFpsWXpRZ2RHVjRRMjlzYjNJZ1BTQjBaWGgwZFhKbE1rUW9JSFF5UkN3Z2RsVjJJQ2s3Q2dsbmJGOUdjbUZuUTI5c2IzSWdQU0J0WVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IwWlhoRGIyeHZjaUFwT3dvSkkybHVZMngxWkdVZ1BIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJR1p0SUQwZ1lIWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUkVhWEpsWTNScGIyNDdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDblp2YVdRZ2JXRnBiaWdwSUhzS0NYWlhiM0pzWkVScGNtVmpkR2x2YmlBOUlIUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2djRzl6YVhScGIyNHNJRzF2WkdWc1RXRjBjbWw0SUNrN0Nna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSloyeGZVRzl6YVhScGIyNHVlaUE5SUdkc1gxQnZjMmwwYVc5dUxuYzdDbjFnTENCd2JTQTlJR0FqYVc1amJIVmtaU0E4Wlc1MmJXRndYMk52YlcxdmJsOXdZWEp6WDJaeVlXZHRaVzUwUGdwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDblpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amRXSmxYM1YyWDNKbFpteGxZM1JwYjI1ZlpuSmhaMjFsYm5RK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1habFl6TWdkbEpsWm14bFkzUWdQU0IyVjI5eWJHUkVhWEpsWTNScGIyNDdDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYMlp5WVdkdFpXNTBQZ29KWjJ4ZlJuSmhaME52Ykc5eUlEMGdaVzUyUTI5c2IzSTdDZ2xuYkY5R2NtRm5RMjlzYjNJdVlTQXFQU0J2Y0dGamFYUjVPd29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z1WTI5a2FXNW5jMTltY21GbmJXVnVkRDRLZldBc0lHMXRJRDBnWUNOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG1GeWVXbHVaeUIyWldNeUlIWklhV2RvVUhKbFkybHphVzl1V2xjN0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4MWRsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm1KaGMyVmZkbVZ5ZEdWNFBnb0pJMmxtWkdWbUlGVlRSVjlFU1ZOUVRFRkRSVTFGVGxSTlFWQUtDUWtqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkNTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tKSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkyVnVaR2xtQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDWFpJYVdkb1VISmxZMmx6YVc5dVdsY2dQU0JuYkY5UWIzTnBkR2x2Ymk1NmR6c0tmV0FzSUdkdElEMGdZQ05wWmlCRVJWQlVTRjlRUVVOTFNVNUhJRDA5SURNeU1EQUtDWFZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kyVnVaR2xtQ2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4d1lXTnJhVzVuUGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyWVhKNWFXNW5JSFpsWXpJZ2RraHBaMmhRY21WamFYTnBiMjVhVnpzS2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnTVM0d0lDazdDZ2tqYVdZZ1JFVlFWRWhmVUVGRFMwbE9SeUE5UFNBek1qQXdDZ2tKWkdsbVpuVnpaVU52Ykc5eUxtRWdQU0J2Y0dGamFYUjVPd29KSTJWdVpHbG1DZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1dac2IyRjBJR1p5WVdkRGIyOXlaRm9nUFNBd0xqVWdLaUIyU0dsbmFGQnlaV05wYzJsdmJscFhXekJkSUM4Z2RraHBaMmhRY21WamFYTnBiMjVhVjFzeFhTQXJJREF1TlRzS0NTTnBaaUJFUlZCVVNGOVFRVU5MU1U1SElEMDlJRE15TURBS0NRbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0IyWldNektDQXhMakFnTFNCbWNtRm5RMjl2Y21SYUlDa3NJRzl3WVdOcGRIa2dLVHNLQ1NObGJHbG1JRVJGVUZSSVgxQkJRMHRKVGtjZ1BUMGdNekl3TVFvSkNXZHNYMFp5WVdkRGIyeHZjaUE5SUhCaFkydEVaWEIwYUZSdlVrZENRU2dnWm5KaFowTnZiM0prV2lBcE93b0pJMlZ1WkdsbUNuMWdMQ0I0YlNBOUlHQWpaR1ZtYVc1bElFUkpVMVJCVGtORkNuWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUlFiM05wZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVdaa1pXWWdWVk5GWDBSSlUxQk1RVU5GVFVWT1ZFMUJVQW9KQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1FramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2paVzVrYVdZS0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pkbGR2Y214a1VHOXphWFJwYjI0Z1BTQjNiM0pzWkZCdmMybDBhVzl1TG5oNWVqc0tmV0FzSUhsdElEMGdZQ05rWldacGJtVWdSRWxUVkVGT1EwVUtkVzVwWm05eWJTQjJaV016SUhKbFptVnlaVzVqWlZCdmMybDBhVzl1T3dwMWJtbG1iM0p0SUdac2IyRjBJRzVsWVhKRWFYTjBZVzVqWlRzS2RXNXBabTl5YlNCbWJHOWhkQ0JtWVhKRWFYTjBZVzVqWlRzS2RtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pGQnZjMmwwYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0Z0tDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnTVM0d0lDazdDZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NXWnNiMkYwSUdScGMzUWdQU0JzWlc1bmRHZ29JSFpYYjNKc1pGQnZjMmwwYVc5dUlDMGdjbVZtWlhKbGJtTmxVRzl6YVhScGIyNGdLVHNLQ1dScGMzUWdQU0FvSUdScGMzUWdMU0J1WldGeVJHbHpkR0Z1WTJVZ0tTQXZJQ2dnWm1GeVJHbHpkR0Z1WTJVZ0xTQnVaV0Z5UkdsemRHRnVZMlVnS1RzS0NXUnBjM1FnUFNCellYUjFjbUYwWlNnZ1pHbHpkQ0FwT3dvSloyeGZSbkpoWjBOdmJHOXlJRDBnY0dGamEwUmxjSFJvVkc5U1IwSkJLQ0JrYVhOMElDazdDbjFnTENCMmJTQTlJR0IyWVhKNWFXNW5JSFpsWXpNZ2RsZHZjbXhrUkdseVpXTjBhVzl1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2wyVjI5eWJHUkVhWEpsWTNScGIyNGdQU0IwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvSUhCdmMybDBhVzl1TENCdGIyUmxiRTFoZEhKcGVDQXBPd29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtmV0FzSUY5dElEMGdZSFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSFJGY1hWcGNtVmpkRHNLZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkVScGNtVmpkR2x2YmpzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S2RtOXBaQ0J0WVdsdUtDa2dld29KZG1Wak15QmthWEpsWTNScGIyNGdQU0J1YjNKdFlXeHBlbVVvSUhaWGIzSnNaRVJwY21WamRHbHZiaUFwT3dvSmRtVmpNaUJ6WVcxd2JHVlZWaUE5SUdWeGRXbHlaV04wVlhZb0lHUnBjbVZqZEdsdmJpQXBPd29KZG1Wak5DQjBaWGhEYjJ4dmNpQTlJSFJsZUhSMWNtVXlSQ2dnZEVWeGRXbHlaV04wTENCellXMXdiR1ZWVmlBcE93b0paMnhmUm5KaFowTnZiRzl5SUQwZ2JXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRRMjlzYjNJZ0tUc0tDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDbjFnTENCTmJTQTlJR0IxYm1sbWIzSnRJR1pzYjJGMElITmpZV3hsT3dwaGRIUnlhV0oxZEdVZ1pteHZZWFFnYkdsdVpVUnBjM1JoYm1ObE93cDJZWEo1YVc1bklHWnNiMkYwSUhaTWFXNWxSR2x6ZEdGdVkyVTdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDWFpNYVc1bFJHbHpkR0Z1WTJVZ1BTQnpZMkZzWlNBcUlHeHBibVZFYVhOMFlXNWpaVHNLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeG1iMmRmZG1WeWRHVjRQZ3A5WUN3Z1ltMGdQU0JnZFc1cFptOXliU0IyWldNeklHUnBabVoxYzJVN0NuVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLZFc1cFptOXliU0JtYkc5aGRDQmtZWE5vVTJsNlpUc0tkVzVwWm05eWJTQm1iRzloZENCMGIzUmhiRk5wZW1VN0NuWmhjbmxwYm1jZ1pteHZZWFFnZGt4cGJtVkVhWE4wWVc1alpUc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDV2xtSUNnZ2JXOWtLQ0IyVEdsdVpVUnBjM1JoYm1ObExDQjBiM1JoYkZOcGVtVWdLU0ErSUdSaGMyaFRhWHBsSUNrZ2V3b0pDV1JwYzJOaGNtUTdDZ2w5Q2dsMlpXTXpJRzkxZEdkdmFXNW5UR2xuYUhRZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnWkdsbVpuVnpaU3dnYjNCaFkybDBlU0FwT3dvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYMlp5WVdkdFpXNTBQZ29KYjNWMFoyOXBibWRNYVdkb2RDQTlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySTdDZ2tqYVc1amJIVmtaU0E4YjNWMGNIVjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z1WTI5a2FXNW5jMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Y0hKbGJYVnNkR2x3YkdsbFpGOWhiSEJvWVY5bWNtRm5iV1Z1ZEQ0S2ZXQXNJSGR0SUQwZ1lDTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSFYyTWw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmZG1WeWRHVjRQZ29KSTJsbUlHUmxabWx1WldRZ0tDQlZVMFZmUlU1V1RVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNBb0lGVlRSVjlUUzBsT1RrbE9SeUFwQ2drSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDUWtqYVc1amJIVmtaU0E4Ylc5eWNHaHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkNTTnBibU5zZFdSbElEeHphMmx1WW1GelpWOTJaWEowWlhnK0Nna0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KQ1NOcGJtTnNkV1JsSUR4a1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVENEtDU05sYm1ScFpnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIZHZjbXhrY0c5elgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGxiblp0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDbjFnTENCVGJTQTlJR0IxYm1sbWIzSnRJSFpsWXpNZ1pHbG1ablZ6WlRzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd29qYVdadVpHVm1JRVpNUVZSZlUwaEJSRVZFQ2dsMllYSjVhVzVuSUhabFl6TWdkazV2Y20xaGJEc0tJMlZ1WkdsbUNpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGdmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJOdmJXMXZibDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amRXSmxYM1YyWDNKbFpteGxZM1JwYjI1ZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSE53WldOMWJHRnliV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblErQ2dsMlpXTTBJR1JwWm1aMWMyVkRiMnh2Y2lBOUlIWmxZelFvSUdScFptWjFjMlVzSUc5d1lXTnBkSGtnS1RzS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSE53WldOMWJHRnliV0Z3WDJaeVlXZHRaVzUwUGdvSlVtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdQU0JTWldac1pXTjBaV1JNYVdkb2RDZ2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrZ0tUc0tDU05wWm1SbFppQlZVMFZmVEVsSFNGUk5RVkFLQ1FsMlpXTTBJR3hwWjJoMFRXRndWR1Y0Wld3OUlIUmxlSFIxY21VeVJDZ2diR2xuYUhSTllYQXNJSFpWZGpJZ0tUc0tDUWx5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdiR2xuYUhSTllYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCc2FXZG9kRTFoY0ZSbGVHVnNJQ2t1Y21kaUlDb2diR2xuYUhSTllYQkpiblJsYm5OcGRIazdDZ2tqWld4elpRb0pDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBclBTQjJaV016S0NBeExqQWdLVHNLQ1NObGJtUnBaZ29KSTJsdVkyeDFaR1VnUEdGdmJXRndYMlp5WVdkdFpXNTBQZ29KY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObElDbzlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySTdDZ2wyWldNeklHOTFkR2R2YVc1blRHbG5hSFFnUFNCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVTdDZ2tqYVc1amJIVmtaU0E4Wlc1MmJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1ZHMGdQU0JnSTJSbFptbHVaU0JNUVUxQ1JWSlVDblpoY25scGJtY2dkbVZqTXlCMlRHbG5hSFJHY205dWREc0tkbUZ5ZVdsdVp5QjJaV016SUhaSmJtUnBjbVZqZEVaeWIyNTBPd29qYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2dsMllYSjVhVzVuSUhabFl6TWdka3hwWjJoMFFtRmphenNLQ1haaGNubHBibWNnZG1Wak15QjJTVzVrYVhKbFkzUkNZV05yT3dvalpXNWthV1lLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFluTmtabk0rQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0dGeWMxOWlaV2RwYmo0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhWMk1sOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JsWm1GMWJIUnViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhkdmNteGtjRzl6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4bGJuWnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTlzWVcxaVpYSjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdadloxOTJaWEowWlhnK0NuMWdMQ0JGYlNBOUlHQjFibWxtYjNKdElIWmxZek1nWkdsbVpuVnpaVHNLZFc1cFptOXliU0IyWldNeklHVnRhWE56YVhabE93cDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q25aaGNubHBibWNnZG1Wak15QjJUR2xuYUhSR2NtOXVkRHNLZG1GeWVXbHVaeUIyWldNeklIWkpibVJwY21WamRFWnliMjUwT3dvamFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNnbDJZWEo1YVc1bklIWmxZek1nZGt4cFoyaDBRbUZqYXpzS0NYWmhjbmxwYm1jZ2RtVmpNeUIyU1c1a2FYSmxZM1JDWVdOck93b2paVzVrYVdZS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIQmhZMnRwYm1jK0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGdmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXMXBjM05wZG1WdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5amIyMXRiMjVmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZbk5rWm5NK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHRnljMTlpWldkcGJqNEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWE5yWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh6Y0dWamRXeGhjbTFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDJaeVlXZHRaVzUwUGdvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0NnbFNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0E5SUZKbFpteGxZM1JsWkV4cFoyaDBLQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTQXBPd29KZG1Wak15QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlVnUFNCbGJXbHpjMmwyWlRzS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSE53WldOMWJHRnliV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnRhWE56YVhabGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNBb0lHZHNYMFp5YjI1MFJtRmphVzVuSUNrZ1B5QjJTVzVrYVhKbFkzUkdjbTl1ZENBNklIWkpibVJwY21WamRFSmhZMnM3Q2dralpXeHpaUW9KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBSR2xtWm5WelpTQXJQU0IyU1c1a2FYSmxZM1JHY205dWREc0tDU05sYm1ScFpnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGJXRndYMlp5WVdkdFpXNTBQZ29KY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUkVhV1ptZFhObElDbzlJRUpTUkVaZlRHRnRZbVZ5ZENnZ1pHbG1ablZ6WlVOdmJHOXlMbkpuWWlBcE93b0pJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ1BTQW9JR2RzWDBaeWIyNTBSbUZqYVc1bklDa2dQeUIyVEdsbmFIUkdjbTl1ZENBNklIWk1hV2RvZEVKaFkyczdDZ2tqWld4elpRb0pDWEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnUFNCMlRHbG5hSFJHY205dWREc0tDU05sYm1ScFpnb0pjbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wUkdsbVpuVnpaU0FxUFNCQ1VrUkdYMHhoYldKbGNuUW9JR1JwWm1aMWMyVkRiMnh2Y2k1eVoySWdLU0FxSUdkbGRGTm9ZV1J2ZDAxaGMyc29LVHNLQ1NOcGJtTnNkV1JsSUR4aGIyMWhjRjltY21GbmJXVnVkRDRLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlISmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t5QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlU3Q2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwUGdwOVlDd2dRVzBnUFNCZ0kyUmxabWx1WlNCTlFWUkRRVkFLZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ylc5eWNHaHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzVpWVhObFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrWldaaGRXeDBibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S0NYWldhV1YzVUc5emFYUnBiMjRnUFNBdElHMTJVRzl6YVhScGIyNHVlSGw2T3dwOVlDd2dRMjBnUFNCZ0kyUmxabWx1WlNCTlFWUkRRVkFLZFc1cFptOXliU0IyWldNeklHUnBabVoxYzJVN0NuVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYldGMFkyRndPd3AyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEdScGRHaGxjbWx1WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTI5c2IzSmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aWRXMXdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnWkdsbVpuVnpaU3dnYjNCaFkybDBlU0FwT3dvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5dFlYQnpQZ29KZG1Wak15QjJhV1YzUkdseUlEMGdibTl5YldGc2FYcGxLQ0IyVm1sbGQxQnZjMmwwYVc5dUlDazdDZ2wyWldNeklIZ2dQU0J1YjNKdFlXeHBlbVVvSUhabFl6TW9JSFpwWlhkRWFYSXVlaXdnTUM0d0xDQXRJSFpwWlhkRWFYSXVlQ0FwSUNrN0NnbDJaV016SUhrZ1BTQmpjbTl6Y3lnZ2RtbGxkMFJwY2l3Z2VDQXBPd29KZG1Wak1pQjFkaUE5SUhabFl6SW9JR1J2ZENnZ2VDd2dibTl5YldGc0lDa3NJR1J2ZENnZ2VTd2dibTl5YldGc0lDa2dLU0FxSURBdU5EazFJQ3NnTUM0MU93b0pJMmxtWkdWbUlGVlRSVjlOUVZSRFFWQUtDUWwyWldNMElHMWhkR05oY0VOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCdFlYUmpZWEFzSUhWMklDazdDZ2tKYldGMFkyRndRMjlzYjNJZ1BTQnRZWFJqWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0J0WVhSallYQkRiMnh2Y2lBcE93b0pJMlZzYzJVS0NRbDJaV00wSUcxaGRHTmhjRU52Ykc5eUlEMGdkbVZqTkNnZ01TNHdJQ2s3Q2dralpXNWthV1lLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlHUnBabVoxYzJWRGIyeHZjaTV5WjJJZ0tpQnRZWFJqWVhCRGIyeHZjaTV5WjJJN0Nna2phVzVqYkhWa1pTQThiM1YwY0hWMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhtYjJkZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThjSEpsYlhWc2RHbHdiR2xsWkY5aGJIQm9ZVjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZlpuSmhaMjFsYm5RK0NuMWdMQ0JNYlNBOUlHQWpaR1ZtYVc1bElFNVBVazFCVEFvamFXWWdaR1ZtYVc1bFpDZ2dSa3hCVkY5VFNFRkVSVVFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUWxWTlVFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGUkJUa2RGVGxSVFVFRkRSVjlPVDFKTlFVeE5RVkFnS1FvSmRtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTmxibVJwWmdvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4MWRsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9ibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1WW1GelpWOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdWbVlYVnNkRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGlaV2RwYmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhrYVhOd2JHRmpaVzFsYm5SdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29qYVdZZ1pHVm1hVzVsWkNnZ1JreEJWRjlUU0VGRVJVUWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZSQlRrZEZUbFJUVUVGRFJWOU9UMUpOUVV4TlFWQWdLUW9KZGxacFpYZFFiM05wZEdsdmJpQTlJQzBnYlhaUWIzTnBkR2x2Ymk1NGVYbzdDaU5sYm1ScFpncDlZQ3dnVW0wZ1BTQmdJMlJsWm1sdVpTQk9UMUpOUVV3S2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd29qYVdZZ1pHVm1hVzVsWkNnZ1JreEJWRjlUU0VGRVJVUWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRbFZOVUUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZSQlRrZEZUbFJUVUVGRFJWOU9UMUpOUVV4TlFWQWdLUW9KZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q2lObGJtUnBaZ29qYVc1amJIVmtaU0E4Y0dGamEybHVaejRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3hmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0oxYlhCdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHNXZjbTFoYkcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDV2RzWDBaeVlXZERiMnh2Y2lBOUlIWmxZelFvSUhCaFkydE9iM0p0WVd4VWIxSkhRaWdnYm05eWJXRnNJQ2tzSUc5d1lXTnBkSGtnS1RzS2ZXQXNJRkJ0SUQwZ1lDTmtaV1pwYm1VZ1VFaFBUa2NLZG1GeWVXbHVaeUIyWldNeklIWldhV1YzVUc5emFYUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhWMk1sOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHVnVkbTFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSFYyTWw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUmxabUYxYkhSdWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NYWldhV1YzVUc5emFYUnBiMjRnUFNBdElHMTJVRzl6YVhScGIyNHVlSGw2T3dvSkkybHVZMngxWkdVZ1BIZHZjbXhrY0c5elgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGxiblp0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThabTluWDNabGNuUmxlRDRLZldBc0lFbHRJRDBnWUNOa1pXWnBibVVnVUVoUFRrY0tkVzVwWm05eWJTQjJaV016SUdScFptWjFjMlU3Q25WdWFXWnZjbTBnZG1Wak15QmxiV2x6YzJsMlpUc0tkVzVwWm05eWJTQjJaV016SUhOd1pXTjFiR0Z5T3dwMWJtbG1iM0p0SUdac2IyRjBJSE5vYVc1cGJtVnpjenNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQR1JwZEdobGNtbHVaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMjlzYjNKZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRqSmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXOXRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGxiV2x6YzJsMlpXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gyTnZiVzF2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpkV0psWDNWMlgzSmxabXhsWTNScGIyNWZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKelpHWnpQZ29qYVc1amJIVmtaU0E4YkdsbmFIUnpYM0JoY25OZlltVm5hVzQrQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3hmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdhRzl1WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpZFcxd2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHViM0p0WVd4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BITndaV04xYkdGeWJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mWm5KaFoyMWxiblErQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZabkpoWjIxbGJuUStDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JR1JwWm1aMWMyVXNJRzl3WVdOcGRIa2dLVHNLQ1ZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElEMGdVbVZtYkdWamRHVmtUR2xuYUhRb0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwSUNrN0NnbDJaV016SUhSdmRHRnNSVzFwYzNOcGRtVlNZV1JwWVc1alpTQTlJR1Z0YVhOemFYWmxPd29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGMzQmxZM1ZzWVhKdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdVBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOXRZWEJ6UGdvSkkybHVZMngxWkdVZ1BHVnRhWE56YVhabGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTl3YUc5dVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZabkpoWjIxbGJuUmZZbVZuYVc0K0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyMWhjSE0rQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDJWdVpENEtDU05wYm1Oc2RXUmxJRHhoYjIxaGNGOW1jbUZuYldWdWRENEtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUhKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlVnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXJJSEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFUzQmxZM1ZzWVhJZ0t5QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlU3Q2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwUGdwOVlDd2dSRzBnUFNCZ0kyUmxabWx1WlNCVFZFRk9SRUZTUkFwMllYSjVhVzVuSUhabFl6TWdkbFpwWlhkUWIzTnBkR2x2YmpzS0kybG1aR1ZtSUZWVFJWOVVVa0ZPVTAxSlUxTkpUMDRLQ1haaGNubHBibWNnZG1Wak15QjJWMjl5YkdSUWIzTnBkR2x2YmpzS0kyVnVaR2xtQ2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhWMk1sOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIVjJNbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm1KaGMyVmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdSbFptRjFiSFJ1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1haV2FXVjNVRzl6YVhScGIyNGdQU0F0SUcxMlVHOXphWFJwYjI0dWVIbDZPd29KSTJsdVkyeDFaR1VnUEhkdmNteGtjRzl6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDaU5wWm1SbFppQlZVMFZmVkZKQlRsTk5TVk5UU1U5T0NnbDJWMjl5YkdSUWIzTnBkR2x2YmlBOUlIZHZjbXhrVUc5emFYUnBiMjR1ZUhsNk93b2paVzVrYVdZS2ZXQXNJRVp0SUQwZ1lDTmtaV1pwYm1VZ1UxUkJUa1JCVWtRS0kybG1aR1ZtSUZCSVdWTkpRMEZNQ2dralpHVm1hVzVsSUVsUFVnb0pJMlJsWm1sdVpTQlRVRVZEVlV4QlVnb2paVzVrYVdZS2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdkbVZqTXlCbGJXbHpjMmwyWlRzS2RXNXBabTl5YlNCbWJHOWhkQ0J5YjNWbmFHNWxjM003Q25WdWFXWnZjbTBnWm14dllYUWdiV1YwWVd4dVpYTnpPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NpTnBabVJsWmlCSlQxSUtDWFZ1YVdadmNtMGdabXh2WVhRZ2FXOXlPd29qWlc1a2FXWUtJMmxtWkdWbUlGTlFSVU5WVEVGU0NnbDFibWxtYjNKdElHWnNiMkYwSUhOd1pXTjFiR0Z5U1c1MFpXNXphWFI1T3dvSmRXNXBabTl5YlNCMlpXTXpJSE53WldOMWJHRnlRMjlzYjNJN0Nna2phV1prWldZZ1ZWTkZYMU5RUlVOVlRFRlNTVTVVUlU1VFNWUlpUVUZRQ2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQTdDZ2tqWlc1a2FXWUtDU05wWm1SbFppQlZVMFZmVTFCRlExVk1RVkpEVDB4UFVrMUJVQW9KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhOd1pXTjFiR0Z5UTI5c2IzSk5ZWEE3Q2dralpXNWthV1lLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2dsMWJtbG1iM0p0SUdac2IyRjBJR05zWldGeVkyOWhkRHNLQ1hWdWFXWnZjbTBnWm14dllYUWdZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlUU0VWRlRnb0pkVzVwWm05eWJTQjJaV016SUhOb1pXVnVRMjlzYjNJN0NnbDFibWxtYjNKdElHWnNiMkYwSUhOb1pXVnVVbTkxWjJodVpYTnpPd29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUa05QVEU5U1RVRlFDZ2tKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnYzJobFpXNURiMnh2Y2sxaGNEc0tDU05sYm1ScFpnb0pJMmxtWkdWbUlGVlRSVjlUU0VWRlRsSlBWVWRJVGtWVFUwMUJVQW9KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhOb1pXVnVVbTkxWjJodVpYTnpUV0Z3T3dvSkkyVnVaR2xtQ2lObGJtUnBaZ3AyWVhKNWFXNW5JSFpsWXpNZ2RsWnBaWGRRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0Z2YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WlcxcGMzTnBkbVZ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKelpHWnpQZ29qYVc1amJIVmtaU0E4WTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJOdmJXMXZibDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gzQm9lWE5wWTJGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHBaMmgwYzE5d1lYSnpYMkpsWjJsdVBnb2phVzVqYkhWa1pTQThibTl5YldGc1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0doNWMybGpZV3hmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSFJ5WVc1emJXbHpjMmx2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhpZFcxd2JXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHViM0p0WVd4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNaV0Z5WTI5aGRGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGNtOTFaMmh1WlhOemJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRaWFJoYkc1bGMzTnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6UWdaR2xtWm5WelpVTnZiRzl5SUQwZ2RtVmpOQ2dnWkdsbVpuVnpaU3dnYjNCaFkybDBlU0FwT3dvSlVtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdQU0JTWldac1pXTjBaV1JNYVdkb2RDZ2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrZ0tUc0tDWFpsWXpNZ2RHOTBZV3hGYldsemMybDJaVkpoWkdsaGJtTmxJRDBnWlcxcGMzTnBkbVU3Q2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR052Ykc5eVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHliM1ZuYUc1bGMzTnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXVjBZV3h1WlhOemJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjlpWldkcGJqNEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NTTnBibU5zZFdSbElEeGpiR1ZoY21OdllYUmZibTl5YldGc1gyWnlZV2R0Wlc1MFgySmxaMmx1UGdvSkkybHVZMngxWkdVZ1BHTnNaV0Z5WTI5aGRGOXViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjejRLQ1NOcGJtTnNkV1JsSUR4bGJXbHpjMmwyWlcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR2g1YzJsallXeGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMkpsWjJsdVBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOW1jbUZuYldWdWRGOXRZWEJ6UGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5bWNtRm5iV1Z1ZEY5bGJtUStDZ2tqYVc1amJIVmtaU0E4WVc5dFlYQmZabkpoWjIxbGJuUStDZ2wyWldNeklIUnZkR0ZzUkdsbVpuVnpaU0E5SUhKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlU3Q2dsMlpXTXpJSFJ2ZEdGc1UzQmxZM1ZzWVhJZ1BTQnlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JUY0dWamRXeGhjaUFySUhKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBVM0JsWTNWc1lYSTdDZ2tqYVc1amJIVmtaU0E4ZEhKaGJuTnRhWE56YVc5dVgyWnlZV2R0Wlc1MFBnb0pkbVZqTXlCdmRYUm5iMmx1WjB4cFoyaDBJRDBnZEc5MFlXeEVhV1ptZFhObElDc2dkRzkwWVd4VGNHVmpkV3hoY2lBcklIUnZkR0ZzUlcxcGMzTnBkbVZTWVdScFlXNWpaVHNLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTRLQ1FsbWJHOWhkQ0J6YUdWbGJrVnVaWEpuZVVOdmJYQWdQU0F4TGpBZ0xTQXdMakUxTnlBcUlHMWhlRE1vSUcxaGRHVnlhV0ZzTG5Ob1pXVnVRMjlzYjNJZ0tUc0tDUWx2ZFhSbmIybHVaMHhwWjJoMElEMGdiM1YwWjI5cGJtZE1hV2RvZENBcUlITm9aV1Z1Ulc1bGNtZDVRMjl0Y0NBcklITm9aV1Z1VTNCbFkzVnNZWEk3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVUNna0pabXh2WVhRZ1pHOTBUbFpqWXlBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUdkbGIyMWxkSEo1TG1Oc1pXRnlZMjloZEU1dmNtMWhiQ3dnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaUFwSUNrN0Nna0pkbVZqTXlCR1kyTWdQU0JHWDFOamFHeHBZMnNvSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZd0xDQnRZWFJsY21saGJDNWpiR1ZoY21OdllYUkdPVEFzSUdSdmRFNVdZMk1nS1RzS0NRbHZkWFJuYjJsdVoweHBaMmgwSUQwZ2IzVjBaMjlwYm1kTWFXZG9kQ0FxSUNnZ01TNHdJQzBnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwSUNvZ1JtTmpJQ2tnS3lCamJHVmhjbU52WVhSVGNHVmpkV3hoY2lBcUlHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGREc0tDU05sYm1ScFpnb0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1MFBncDlZQ3dnVG0wZ1BTQmdJMlJsWm1sdVpTQlVUMDlPQ25aaGNubHBibWNnZG1Wak15QjJWbWxsZDFCdmMybDBhVzl1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGRYWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4MWRqSmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiMnh2Y2w5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEhWMlgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDFkakpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2h1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1aVlYTmxYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dsMlZtbGxkMUJ2YzJsMGFXOXVJRDBnTFNCdGRsQnZjMmwwYVc5dUxuaDVlanNLQ1NOcGJtTnNkV1JsSUR4M2IzSnNaSEJ2YzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeG1iMmRmZG1WeWRHVjRQZ3A5WUN3Z1FtMGdQU0JnSTJSbFptbHVaU0JVVDA5T0NuVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJSFpsWXpNZ1pXMXBjM05wZG1VN0NuVnVhV1p2Y20wZ1pteHZZWFFnYjNCaFkybDBlVHNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhCaFkydHBibWMrQ2lOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThkWFl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0Z2YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2FXZG9kRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WlcxcGMzTnBkbVZ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdkeVlXUnBaVzUwYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSnpaR1p6UGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNCaGNuTmZZbVZuYVc0K0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTkwYjI5dVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKMWJYQnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KZG1Wak5DQmthV1ptZFhObFEyOXNiM0lnUFNCMlpXTTBLQ0JrYVdabWRYTmxMQ0J2Y0dGamFYUjVJQ2s3Q2dsU1pXWnNaV04wWldSTWFXZG9kQ0J5Wldac1pXTjBaV1JNYVdkb2RDQTlJRkpsWm14bFkzUmxaRXhwWjJoMEtDQjJaV016S0NBd0xqQWdLU3dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1NBcE93b0pkbVZqTXlCMGIzUmhiRVZ0YVhOemFYWmxVbUZrYVdGdVkyVWdQU0JsYldsemMybDJaVHNLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGdFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDU05wYm1Oc2RXUmxJRHhsYldsemMybDJaVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZmRHOXZibDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mWm5KaFoyMWxiblJmWW1WbmFXNCtDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMjFoY0hNK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyVnVaRDRLQ1NOcGJtTnNkV1JsSUR4aGIyMWhjRjltY21GbmJXVnVkRDRLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlISmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t5QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlU3Q2dramFXNWpiSFZrWlNBOGIzVjBjSFYwWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeG1iMmRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGNISmxiWFZzZEdsd2JHbGxaRjloYkhCb1lWOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmWm5KaFoyMWxiblErQ24xZ0xDQjZiU0E5SUdCMWJtbG1iM0p0SUdac2IyRjBJSE5wZW1VN0NuVnVhV1p2Y20wZ1pteHZZWFFnYzJOaGJHVTdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDV2RzWDFCdmFXNTBVMmw2WlNBOUlITnBlbVU3Q2dramFXWmtaV1lnVlZORlgxTkpXa1ZCVkZSRlRsVkJWRWxQVGdvSkNXSnZiMndnYVhOUVpYSnpjR1ZqZEdsMlpTQTlJR2x6VUdWeWMzQmxZM1JwZG1WTllYUnlhWGdvSUhCeWIycGxZM1JwYjI1TllYUnlhWGdnS1RzS0NRbHBaaUFvSUdselVHVnljM0JsWTNScGRtVWdLU0JuYkY5UWIybHVkRk5wZW1VZ0tqMGdLQ0J6WTJGc1pTQXZJQzBnYlhaUWIzTnBkR2x2Ymk1NklDazdDZ2tqWlc1a2FXWUtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4M2IzSnNaSEJ2YzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUZWdElEMGdZSFZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25ScFkyeGxYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KZG1Wak15QnZkWFJuYjJsdVoweHBaMmgwSUQwZ2RtVmpNeWdnTUM0d0lDazdDZ2wyWldNMElHUnBabVoxYzJWRGIyeHZjaUE5SUhabFl6UW9JR1JwWm1aMWMyVXNJRzl3WVdOcGRIa2dLVHNLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh0WVhCZmNHRnlkR2xqYkdWZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KYjNWMFoyOXBibWRNYVdkb2RDQTlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySTdDZ2tqYVc1amJIVmtaU0E4YjNWMGNIVjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z1WTI5a2FXNW5jMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Y0hKbGJYVnNkR2x3YkdsbFpGOWhiSEJvWVY5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRTl0SUQwZ1lDTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITnJhVzV1YVc1blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z3WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2JtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR1ZtWVhWc2RHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThkMjl5YkdSd2IzTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S2ZXQXNJRWh0SUQwZ1lIVnVhV1p2Y20wZ2RtVmpNeUJqYjJ4dmNqc0tkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dvamFXNWpiSFZrWlNBOFkyOXRiVzl1UGdvamFXNWpiSFZrWlNBOGNHRmphMmx1Wno0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZbk5rWm5NK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHRnljMTlpWldkcGJqNEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRnphMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dsbmJGOUdjbUZuUTI5c2IzSWdQU0IyWldNMEtDQmpiMnh2Y2l3Z2IzQmhZMmwwZVNBcUlDZ2dNUzR3SUMwZ1oyVjBVMmhoWkc5M1RXRnpheWdwSUNrZ0tUc0tDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBncDlZQ3dnYTIwZ1BTQmdkVzVwWm05eWJTQm1iRzloZENCeWIzUmhkR2x2YmpzS2RXNXBabTl5YlNCMlpXTXlJR05sYm5SbGNqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThabTluWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZytDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeDFkbDkyWlhKMFpYZytDZ2wyWldNMElHMTJVRzl6YVhScGIyNGdQU0J0YjJSbGJGWnBaWGROWVhSeWFYZ2dLaUIyWldNMEtDQXdMakFzSURBdU1Dd2dNQzR3TENBeExqQWdLVHNLQ1habFl6SWdjMk5oYkdVN0NnbHpZMkZzWlM1NElEMGdiR1Z1WjNSb0tDQjJaV016S0NCdGIyUmxiRTFoZEhKcGVGc2dNQ0JkTG5nc0lHMXZaR1ZzVFdGMGNtbDRXeUF3SUYwdWVTd2diVzlrWld4TllYUnlhWGhiSURBZ1hTNTZJQ2tnS1RzS0NYTmpZV3hsTG5rZ1BTQnNaVzVuZEdnb0lIWmxZek1vSUcxdlpHVnNUV0YwY21sNFd5QXhJRjB1ZUN3Z2JXOWtaV3hOWVhSeWFYaGJJREVnWFM1NUxDQnRiMlJsYkUxaGRISnBlRnNnTVNCZExub2dLU0FwT3dvSkkybG1ibVJsWmlCVlUwVmZVMGxhUlVGVVZFVk9WVUZVU1U5T0Nna0pZbTl2YkNCcGMxQmxjbk53WldOMGFYWmxJRDBnYVhOUVpYSnpjR1ZqZEdsMlpVMWhkSEpwZUNnZ2NISnZhbVZqZEdsdmJrMWhkSEpwZUNBcE93b0pDV2xtSUNnZ2FYTlFaWEp6Y0dWamRHbDJaU0FwSUhOallXeGxJQ285SUMwZ2JYWlFiM05wZEdsdmJpNTZPd29KSTJWdVpHbG1DZ2wyWldNeUlHRnNhV2R1WldSUWIzTnBkR2x2YmlBOUlDZ2djRzl6YVhScGIyNHVlSGtnTFNBb0lHTmxiblJsY2lBdElIWmxZeklvSURBdU5TQXBJQ2tnS1NBcUlITmpZV3hsT3dvSmRtVmpNaUJ5YjNSaGRHVmtVRzl6YVhScGIyNDdDZ2x5YjNSaGRHVmtVRzl6YVhScGIyNHVlQ0E5SUdOdmN5Z2djbTkwWVhScGIyNGdLU0FxSUdGc2FXZHVaV1JRYjNOcGRHbHZiaTU0SUMwZ2MybHVLQ0J5YjNSaGRHbHZiaUFwSUNvZ1lXeHBaMjVsWkZCdmMybDBhVzl1TG5rN0NnbHliM1JoZEdWa1VHOXphWFJwYjI0dWVTQTlJSE5wYmlnZ2NtOTBZWFJwYjI0Z0tTQXFJR0ZzYVdkdVpXUlFiM05wZEdsdmJpNTRJQ3NnWTI5ektDQnliM1JoZEdsdmJpQXBJQ29nWVd4cFoyNWxaRkJ2YzJsMGFXOXVMbms3Q2dsdGRsQnZjMmwwYVc5dUxuaDVJQ3M5SUhKdmRHRjBaV1JRYjNOcGRHbHZianNLQ1dkc1gxQnZjMmwwYVc5dUlEMGdjSEp2YW1WamRHbHZiazFoZEhKcGVDQXFJRzEyVUc5emFYUnBiMjQ3Q2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThabTluWDNabGNuUmxlRDRLZldBc0lFZHRJRDBnWUhWdWFXWnZjbTBnZG1Wak15QmthV1ptZFhObE93cDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWRENEtDWFpsWXpNZ2IzVjBaMjlwYm1kTWFXZG9kQ0E5SUhabFl6TW9JREF1TUNBcE93b0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQmthV1ptZFhObExDQnZjR0ZqYVhSNUlDazdDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjltY21GbmJXVnVkRDRLQ1c5MWRHZHZhVzVuVEdsbmFIUWdQU0JrYVdabWRYTmxRMjlzYjNJdWNtZGlPd29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1JtVWdQU0I3Q2lBZ0lDQmhiSEJvWVcxaGNGOW1jbUZuYldWdWREb2dlR1lzQ2lBZ0lDQmhiSEJvWVcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCNVppd0tJQ0FnSUdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZERvZ2RtWXNDaUFnSUNCaGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRG9nWDJZc0NpQWdJQ0JoYjIxaGNGOW1jbUZuYldWdWREb2dUV1lzQ2lBZ0lDQmhiMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUJpWml3S0lDQWdJR0psWjJsdVgzWmxjblJsZURvZ2QyWXNDaUFnSUNCaVpXZHBibTV2Y20xaGJGOTJaWEowWlhnNklGTm1MQW9nSUNBZ1luTmtabk02SUZSbUxBb2dJQ0FnWW5WdGNHMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQkZaaXdLSUNBZ0lHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZERvZ1FXWXNDaUFnSUNCamJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWREb2dRMllzQ2lBZ0lDQmpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZzZJRXhtTEFvZ0lDQWdZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZURvZ1VtWXNDaUFnSUNCamIyeHZjbDltY21GbmJXVnVkRG9nVUdZc0NpQWdJQ0JqYjJ4dmNsOXdZWEp6WDJaeVlXZHRaVzUwT2lCSlppd0tJQ0FnSUdOdmJHOXlYM0JoY25OZmRtVnlkR1Y0T2lCRVppd0tJQ0FnSUdOdmJHOXlYM1psY25SbGVEb2dSbVlzQ2lBZ0lDQmpiMjF0YjI0NklFNW1MQW9nSUNBZ1kzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1ME9pQkNaaXdLSUNBZ0lHUmxabUYxYkhSdWIzSnRZV3hmZG1WeWRHVjRPaUI2Wml3S0lDQWdJR1JwYzNCc1lXTmxiV1Z1ZEcxaGNGOXdZWEp6WDNabGNuUmxlRG9nVldZc0NpQWdJQ0JrYVhOd2JHRmpaVzFsYm5SdFlYQmZkbVZ5ZEdWNE9pQlBaaXdLSUNBZ0lHVnRhWE56YVhabGJXRndYMlp5WVdkdFpXNTBPaUJJWml3S0lDQWdJR1Z0YVhOemFYWmxiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJR3RtTEFvZ0lDQWdaVzVqYjJScGJtZHpYMlp5WVdkdFpXNTBPaUJIWml3S0lDQWdJR1Z1WTI5a2FXNW5jMTl3WVhKelgyWnlZV2R0Wlc1ME9pQldaaXdLSUNBZ0lHVnVkbTFoY0Y5bWNtRm5iV1Z1ZERvZ1YyWXNDaUFnSUNCbGJuWnRZWEJmWTI5dGJXOXVYM0JoY25OZlpuSmhaMjFsYm5RNklIRm1MQW9nSUNBZ1pXNTJiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUTZJRmhtTEFvZ0lDQWdaVzUyYldGd1gzQmhjbk5mZG1WeWRHVjRPaUJLWml3S0lDQWdJR1Z1ZG0xaGNGOXdhSGx6YVdOaGJGOXdZWEp6WDJaeVlXZHRaVzUwT2lCeWNDd0tJQ0FnSUdWdWRtMWhjRjkyWlhKMFpYZzZJRmxtTEFvZ0lDQWdabTluWDNabGNuUmxlRG9nV21Zc0NpQWdJQ0JtYjJkZmNHRnljMTkyWlhKMFpYZzZJQ1JtTEFvZ0lDQWdabTluWDJaeVlXZHRaVzUwT2lCcVppd0tJQ0FnSUdadloxOXdZWEp6WDJaeVlXZHRaVzUwT2lCUlppd0tJQ0FnSUdkeVlXUnBaVzUwYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUV0bUxBb2dJQ0FnYkdsbmFIUnRZWEJmWm5KaFoyMWxiblE2SUdWd0xBb2dJQ0FnYkdsbmFIUnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dkSEFzQ2lBZ0lDQnNhV2RvZEhOZmJHRnRZbVZ5ZEY5MlpYSjBaWGc2SUc1d0xBb2dJQ0FnYkdsbmFIUnpYM0JoY25OZlltVm5hVzQ2SUdsd0xBb2dJQ0FnYkdsbmFIUnpYM1J2YjI1ZlpuSmhaMjFsYm5RNklITndMQW9nSUNBZ2JHbG5hSFJ6WDNSdmIyNWZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2IzQXNDaUFnSUNCc2FXZG9kSE5mY0dodmJtZGZabkpoWjIxbGJuUTZJR0Z3TEFvZ0lDQWdiR2xuYUhSelgzQm9iMjVuWDNCaGNuTmZabkpoWjIxbGJuUTZJR3h3TEFvZ0lDQWdiR2xuYUhSelgzQm9lWE5wWTJGc1gyWnlZV2R0Wlc1ME9pQmpjQ3dLSUNBZ0lHeHBaMmgwYzE5d2FIbHphV05oYkY5d1lYSnpYMlp5WVdkdFpXNTBPaUJvY0N3S0lDQWdJR3hwWjJoMGMxOW1jbUZuYldWdWRGOWlaV2RwYmpvZ2RYQXNDaUFnSUNCc2FXZG9kSE5mWm5KaFoyMWxiblJmYldGd2N6b2daSEFzQ2lBZ0lDQnNhV2RvZEhOZlpuSmhaMjFsYm5SZlpXNWtPaUJtY0N3S0lDQWdJR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwT2lCd2NDd0tJQ0FnSUd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblE2SUcxd0xBb2dJQ0FnYkc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZzZJR2R3TEFvZ0lDQWdiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRPaUI0Y0N3S0lDQWdJRzFoY0Y5bWNtRm5iV1Z1ZERvZ2VYQXNDaUFnSUNCdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ2RuQXNDaUFnSUNCdFlYQmZjR0Z5ZEdsamJHVmZabkpoWjIxbGJuUTZJRjl3TEFvZ0lDQWdiV0Z3WDNCaGNuUnBZMnhsWDNCaGNuTmZabkpoWjIxbGJuUTZJRTF3TEFvZ0lDQWdiV1YwWVd4dVpYTnpiV0Z3WDJaeVlXZHRaVzUwT2lCaWNDd0tJQ0FnSUcxbGRHRnNibVZ6YzIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCM2NDd0tJQ0FnSUcxdmNuQm9ibTl5YldGc1gzWmxjblJsZURvZ1UzQXNDaUFnSUNCdGIzSndhSFJoY21kbGRGOXdZWEp6WDNabGNuUmxlRG9nVkhBc0NpQWdJQ0J0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGc2SUVWd0xBb2dJQ0FnYm05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdU9pQkJjQ3dLSUNBZ0lHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5dFlYQnpPaUJEY0N3S0lDQWdJRzV2Y20xaGJGOXdZWEp6WDJaeVlXZHRaVzUwT2lCTWNDd0tJQ0FnSUc1dmNtMWhiRjl3WVhKelgzWmxjblJsZURvZ1VuQXNDaUFnSUNCdWIzSnRZV3hmZG1WeWRHVjRPaUJRY0N3S0lDQWdJRzV2Y20xaGJHMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQkpjQ3dLSUNBZ0lHTnNaV0Z5WTI5aGRGOXViM0p0WVd4ZlpuSmhaMjFsYm5SZlltVm5hVzQ2SUVSd0xBb2dJQ0FnWTJ4bFlYSmpiMkYwWDI1dmNtMWhiRjltY21GbmJXVnVkRjl0WVhCek9pQkdjQ3dLSUNBZ0lHTnNaV0Z5WTI5aGRGOXdZWEp6WDJaeVlXZHRaVzUwT2lCT2NDd0tJQ0FnSUc5MWRIQjFkRjltY21GbmJXVnVkRG9nUW5Bc0NpQWdJQ0J3WVdOcmFXNW5PaUI2Y0N3S0lDQWdJSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblE2SUZWd0xBb2dJQ0FnY0hKdmFtVmpkRjkyWlhKMFpYZzZJRTl3TEFvZ0lDQWdaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBPaUJJY0N3S0lDQWdJR1JwZEdobGNtbHVaMTl3WVhKelgyWnlZV2R0Wlc1ME9pQnJjQ3dLSUNBZ0lISnZkV2RvYm1WemMyMWhjRjltY21GbmJXVnVkRG9nUjNBc0NpQWdJQ0J5YjNWbmFHNWxjM050WVhCZmNHRnljMTltY21GbmJXVnVkRG9nVm5Bc0NpQWdJQ0J6YUdGa2IzZHRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dWM0FzQ2lBZ0lDQnphR0ZrYjNkdFlYQmZjR0Z5YzE5MlpYSjBaWGc2SUhGd0xBb2dJQ0FnYzJoaFpHOTNiV0Z3WDNabGNuUmxlRG9nV0hBc0NpQWdJQ0J6YUdGa2IzZHRZWE5yWDNCaGNuTmZabkpoWjIxbGJuUTZJRXB3TEFvZ0lDQWdjMnRwYm1KaGMyVmZkbVZ5ZEdWNE9pQlpjQ3dLSUNBZ0lITnJhVzV1YVc1blgzQmhjbk5mZG1WeWRHVjRPaUJhY0N3S0lDQWdJSE5yYVc1dWFXNW5YM1psY25SbGVEb2dKSEFzQ2lBZ0lDQnphMmx1Ym05eWJXRnNYM1psY25SbGVEb2dhbkFzQ2lBZ0lDQnpjR1ZqZFd4aGNtMWhjRjltY21GbmJXVnVkRG9nVVhBc0NpQWdJQ0J6Y0dWamRXeGhjbTFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUJMY0N3S0lDQWdJSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwT2lCbGJTd0tJQ0FnSUhSdmJtVnRZWEJ3YVc1blgzQmhjbk5mWm5KaFoyMWxiblE2SUhSdExBb2dJQ0FnZEhKaGJuTnRhWE56YVc5dVgyWnlZV2R0Wlc1ME9pQnViU3dLSUNBZ0lIUnlZVzV6YldsemMybHZibDl3WVhKelgyWnlZV2R0Wlc1ME9pQnBiU3dLSUNBZ0lIVjJYM0JoY25OZlpuSmhaMjFsYm5RNklISnRMQW9nSUNBZ2RYWmZjR0Z5YzE5MlpYSjBaWGc2SUhOdExBb2dJQ0FnZFhaZmRtVnlkR1Y0T2lCdmJTd0tJQ0FnSUhWMk1sOXdZWEp6WDJaeVlXZHRaVzUwT2lCaGJTd0tJQ0FnSUhWMk1sOXdZWEp6WDNabGNuUmxlRG9nYkcwc0NpQWdJQ0IxZGpKZmRtVnlkR1Y0T2lCamJTd0tJQ0FnSUhkdmNteGtjRzl6WDNabGNuUmxlRG9nYUcwc0NpQWdJQ0JpWVdOclozSnZkVzVrWDNabGNuUTZJSFZ0TEFvZ0lDQWdZbUZqYTJkeWIzVnVaRjltY21Gbk9pQmtiU3dLSUNBZ0lHTjFZbVZmZG1WeWREb2dabTBzQ2lBZ0lDQmpkV0psWDJaeVlXYzZJSEJ0TEFvZ0lDQWdaR1Z3ZEdoZmRtVnlkRG9nYlcwc0NpQWdJQ0JrWlhCMGFGOW1jbUZuT2lCbmJTd0tJQ0FnSUdScGMzUmhibU5sVWtkQ1FWOTJaWEowT2lCNGJTd0tJQ0FnSUdScGMzUmhibU5sVWtkQ1FWOW1jbUZuT2lCNWJTd0tJQ0FnSUdWeGRXbHlaV04wWDNabGNuUTZJSFp0TEFvZ0lDQWdaWEYxYVhKbFkzUmZabkpoWnpvZ1gyMHNDaUFnSUNCc2FXNWxaR0Z6YUdWa1gzWmxjblE2SUUxdExBb2dJQ0FnYkdsdVpXUmhjMmhsWkY5bWNtRm5PaUJpYlN3S0lDQWdJRzFsYzJoaVlYTnBZMTkyWlhKME9pQjNiU3dLSUNBZ0lHMWxjMmhpWVhOcFkxOW1jbUZuT2lCVGJTd0tJQ0FnSUcxbGMyaHNZVzFpWlhKMFgzWmxjblE2SUZSdExBb2dJQ0FnYldWemFHeGhiV0psY25SZlpuSmhaem9nUlcwc0NpQWdJQ0J0WlhOb2JXRjBZMkZ3WDNabGNuUTZJRUZ0TEFvZ0lDQWdiV1Z6YUcxaGRHTmhjRjltY21Gbk9pQkRiU3dLSUNBZ0lHMWxjMmh1YjNKdFlXeGZkbVZ5ZERvZ1RHMHNDaUFnSUNCdFpYTm9ibTl5YldGc1gyWnlZV2M2SUZKdExBb2dJQ0FnYldWemFIQm9iMjVuWDNabGNuUTZJRkJ0TEFvZ0lDQWdiV1Z6YUhCb2IyNW5YMlp5WVdjNklFbHRMQW9nSUNBZ2JXVnphSEJvZVhOcFkyRnNYM1psY25RNklFUnRMQW9nSUNBZ2JXVnphSEJvZVhOcFkyRnNYMlp5WVdjNklFWnRMQW9nSUNBZ2JXVnphSFJ2YjI1ZmRtVnlkRG9nVG0wc0NpQWdJQ0J0WlhOb2RHOXZibDltY21Gbk9pQkNiU3dLSUNBZ0lIQnZhVzUwYzE5MlpYSjBPaUI2YlN3S0lDQWdJSEJ2YVc1MGMxOW1jbUZuT2lCVmJTd0tJQ0FnSUhOb1lXUnZkMTkyWlhKME9pQlBiU3dLSUNBZ0lITm9ZV1J2ZDE5bWNtRm5PaUJJYlN3S0lDQWdJSE53Y21sMFpWOTJaWEowT2lCcmJTd0tJQ0FnSUhOd2NtbDBaVjltY21Gbk9pQkhiUXA5TENCcFpTQTlJSHNLSUNBZ0lHTnZiVzF2YmpvZ2V3b2dJQ0FnSUNBZ0lHUnBabVoxYzJVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJRzl3WVdOcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZFhaVWNtRnVjMlp2Y20wNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCc2RBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkWFl5VkhKaGJuTm1iM0p0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnYkhRS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHRnNjR2hoVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiSEJvWVZSbGMzUTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjM0JsWTNWc1lYSnRZWEE2SUhzS0lDQWdJQ0FnSUNCemNHVmpkV3hoY2sxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JsYm5adFlYQTZJSHNLSUNBZ0lDQWdJQ0JsYm5aTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1pzYVhCRmJuWk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklDMHhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J5Wldac1pXTjBhWFpwZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdsdmNqb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVM0MUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnlaV1p5WVdOMGFXOXVVbUYwYVc4NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJQzQ1T0FvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQmhiMjFoY0RvZ2V3b2dJQ0FnSUNBZ0lHRnZUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaGIwMWhjRWx1ZEdWdWMybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JzYVdkb2RHMWhjRG9nZXdvZ0lDQWdJQ0FnSUd4cFoyaDBUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCc2FXZG9kRTFoY0VsdWRHVnVjMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCbGJXbHpjMmwyWlcxaGNEb2dld29nSUNBZ0lDQWdJR1Z0YVhOemFYWmxUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHSjFiWEJ0WVhBNklIc0tJQ0FnSUNBZ0lDQmlkVzF3VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmlkVzF3VTJOaGJHVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdibTl5YldGc2JXRndPaUI3Q2lBZ0lDQWdJQ0FnYm05eWJXRnNUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCdWIzSnRZV3hUWTJGc1pUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lGZ29NU3dnTVNrS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaR2x6Y0d4aFkyVnRaVzUwYldGd09pQjdDaUFnSUNBZ0lDQWdaR2x6Y0d4aFkyVnRaVzUwVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmthWE53YkdGalpXMWxiblJUWTJGc1pUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pHbHpjR3hoWTJWdFpXNTBRbWxoY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCeWIzVm5hRzVsYzNOdFlYQTZJSHNLSUNBZ0lDQWdJQ0J5YjNWbmFHNWxjM05OWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdiV1YwWVd4dVpYTnpiV0Z3T2lCN0NpQWdJQ0FnSUNBZ2JXVjBZV3h1WlhOelRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdkeVlXUnBaVzUwYldGd09pQjdDaUFnSUNBZ0lDQWdaM0poWkdsbGJuUk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1ptOW5PaUI3Q2lBZ0lDQWdJQ0FnWm05blJHVnVjMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNalZsTFRVS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHWnZaMDVsWVhJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdadlowWmhjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01tVXpDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JtYjJkRGIyeHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1FvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnNhV2RvZEhNNklIc0tJQ0FnSUNBZ0lDQmhiV0pwWlc1MFRHbG5hSFJEYjJ4dmNqb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHeHBaMmgwVUhKdlltVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNWhiRXhwWjJoMGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCbGNuUnBaWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2UzMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkQ2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZOcGVtVTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhSeWFYZzZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpjRzkwVEdsbmFIUnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkR2xsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x5WldOMGFXOXVPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGMzUmhibU5sT2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibVZEYjNNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR1Z1ZFcxaWNtRkRiM002SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVmpZWGs2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhOd2IzUk1hV2RvZEZOb1lXUnZkM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRMQW9nSUNBZ0lDQWdJQ0FnSUNCd2NtOXdaWEowYVdWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkQ2FXRnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVW1Ga2FYVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZOcGVtVTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE53YjNSVGFHRmtiM2ROWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCemNHOTBVMmhoWkc5M1RXRjBjbWw0T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUk1hV2RvZEhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXTmhlVG9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ2UzMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NHOXBiblJNYVdkb2RGTm9ZV1J2ZDNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZENhV0Z6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1VtRmthWFZ6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDAxaGNGTnBlbVU2SUh0OUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzUTJGdFpYSmhUbVZoY2pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkRFlXMWxjbUZHWVhJNklIdDlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIQnZhVzUwVTJoaFpHOTNUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUlRhR0ZrYjNkTllYUnlhWGc2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JvWlcxcGMzQm9aWEpsVEdsbmFIUnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCYlhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkR2xsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5yZVVOdmJHOXlPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkeWIzVnVaRU52Ykc5eU9pQjdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnlaV04wUVhKbFlVeHBaMmgwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dXMTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnliM0JsY25ScFpYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZTMwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYkhSalh6RTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR3gwWTE4eU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSEJ2YVc1MGN6b2dld29nSUNBZ0lDQWdJR1JwWm1aMWMyVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d4TmpjM056SXhOU2tLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5wZW1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhOallXeGxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnRZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdGc2NHaGhUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaGJIQm9ZVlJsYzNRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhWMlZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ2JIUUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzNCeWFYUmxPaUI3Q2lBZ0lDQWdJQ0FnWkdsbVpuVnpaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1FvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWTJWdWRHVnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dXQ2d1TlN3Z0xqVXBDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J5YjNSaGRHbHZiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdiV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCaGJIQm9ZVTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1lXeHdhR0ZVWlhOME9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCMWRsUnlZVzV6Wm05eWJUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHeDBDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlMQ0J4ZENBOUlIc0tJQ0FnSUdKaGMybGpPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV6Y0dWamRXeGhjbTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wlc1MmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWhiMjFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVp2WndvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWJXVnphR0poYzJsalgzWmxjblFzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJRVpsTG0xbGMyaGlZWE5wWTE5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnYkdGdFltVnlkRG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCNWRDaGJDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtTnZiVzF2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YzNCbFkzVnNZWEp0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1WdWRtMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZVzl0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG14cFoyaDBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVsYldsemMybDJaVzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wm05bkxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1c2FXZG9kSE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnRhWE56YVhabE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3dLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXRaWE5vYkdGdFltVnlkRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXRaWE5vYkdGdFltVnlkRjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdjR2h2Ym1jNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dlWFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVqYjIxdGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExuTndaV04xYkdGeWJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWxiblp0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1GdmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXNhV2RvZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXMXBjM05wZG1WdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtSjFiWEJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG01dmNtMWhiRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WkdsemNHeGhZMlZ0Wlc1MGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNW1iMmNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbXhwWjJoMGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlcxcGMzTnBkbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR0ZsS0RBcENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtERXhNVGcwT0RFcENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaHBibWx1WlhOek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRE13Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbTFsYzJod2FHOXVaMTkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXRaWE5vY0dodmJtZGZabkpoWndvZ0lDQWdmU3dLSUNBZ0lITjBZVzVrWVhKa09pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WTI5dGJXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWxiblp0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1GdmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXNhV2RvZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXMXBjM05wZG1WdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtSjFiWEJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG01dmNtMWhiRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WkdsemNHeGhZMlZ0Wlc1MGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXliM1ZuYUc1bGMzTnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbTFsZEdGc2JtVnpjMjFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wm05bkxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1c2FXZG9kSE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnRhWE56YVhabE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3dLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEp2ZFdkb2JtVnpjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXVjBZV3h1WlhOek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYm5aTllYQkpiblJsYm5OcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdYU2tzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzV0WlhOb2NHaDVjMmxqWVd4ZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YldWemFIQm9lWE5wWTJGc1gyWnlZV2NLSUNBZ0lIMHNDaUFnSUNCMGIyOXVPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVoYjIxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJHbG5hSFJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1WdGFYTnphWFpsYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1aWRXMXdiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV1YjNKdFlXeHRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVJwYzNCc1lXTmxiV1Z1ZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVozSmhaR2xsYm5SdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtWnZaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXViR2xuYUhSekxBb2dJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYldsemMybDJaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YldWemFIUnZiMjVmZG1WeWRDd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXViV1Z6YUhSdmIyNWZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHMWhkR05oY0RvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVluVnRjRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Ym05eWJXRnNiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVrYVhOd2JHRmpaVzFsYm5SdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtWnZaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBZMkZ3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXViV1Z6YUcxaGRHTmhjRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXRaWE5vYldGMFkyRndYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQndiMmx1ZEhNNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dlWFFvV3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV3YjJsdWRITXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtWnZad29nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1Y0c5cGJuUnpYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExuQnZhVzUwYzE5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnWkdGemFHVmtPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qWVd4bE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhOb1UybDZaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHOTBZV3hUYVhwbE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRElLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXViR2x1WldSaGMyaGxaRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXNhVzVsWkdGemFHVmtYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQmtaWEIwYURvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1a1pYQjBhRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNWtaWEIwYUY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnYm05eWJXRnNPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVpZFcxd2JXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXViM0p0WVd4dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtUnBjM0JzWVdObGJXVnVkRzFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM0JoWTJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmRLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklFWmxMbTFsYzJodWIzSnRZV3hmZG1WeWRDd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1JtVXViV1Z6YUc1dmNtMWhiRjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdjM0J5YVhSbE9pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YzNCeWFYUmxMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNW1iMmNLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG5Od2NtbDBaVjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNXpjSEpwZEdWZlpuSmhad29nSUNBZ2ZTd0tJQ0FnSUdKaFkydG5jbTkxYm1RNklIc0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMWRsUnlZVzV6Wm05eWJUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJzZEFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCME1rUTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXVZbUZqYTJkeWIzVnVaRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNWlZV05yWjNKdmRXNWtYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQmpkV0psT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaVzUyYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y0dGamFYUjVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1WTNWaVpWOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1amRXSmxYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQmxjWFZwY21WamREb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUkZjWFZwY21WamREb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNWxjWFZwY21WamRGOTJaWEowTEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1bGNYVnBjbVZqZEY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnWkdsemRHRnVZMlZTUjBKQk9pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WTI5dGJXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWthWE53YkdGalpXMWxiblJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsWm1WeVpXNWpaVkJ2YzJsMGFXOXVPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5Qk5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibVZoY2tScGMzUmhibU5sT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1ZWEpFYVhOMFlXNWpaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeFpUTUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdVpHbHpkR0Z1WTJWU1IwSkJYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExtUnBjM1JoYm1ObFVrZENRVjltY21GbkNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M09pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnpMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNW1iMmNzQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNnd0tRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOXdZV05wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXphR0ZrYjNkZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YzJoaFpHOTNYMlp5WVdjS0lDQWdJSDBLZlRzS2NYUXVjR2g1YzJsallXd2dQU0I3Q2lBZ0lDQjFibWxtYjNKdGN6b2dlWFFvV3dvZ0lDQWdJQ0FnSUhGMExuTjBZVzVrWVhKa0xuVnVhV1p2Y20xekxBb2dJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTUFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbU52WVhSTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJZS0RFc0lERXBDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRTV2Y20xaGJFMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzQ2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVRMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTUNrS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVEYjJ4dmNrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVTYjNWbmFHNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVVbTkxWjJodVpYTnpUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBiMjQ2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpiV2x6YzJsdmJrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNsTnBlbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ1dBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBiMjVUWVcxd2JHVnlUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2xqYTI1bGMzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVdOcmJtVnpjMDFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhSMFpXNTFZWFJwYjI1RGIyeHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3dLUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREFLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlRMjlzYjNJNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dZV1VvTVN3Z01Td2dNU2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzNCbFkzVnNZWEpEYjJ4dmNrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lGMHBMQW9nSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1dFpYTm9jR2g1YzJsallXeGZkbVZ5ZEN3S0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV0WlhOb2NHaDVjMmxqWVd4ZlpuSmhad3A5T3dwbWRXNWpkR2x2YmlCV2JTaHpMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCaFpTZ3dLU3dnYnlBOUlEQXNJR0VzSUd3c0lHTWdQU0J1ZFd4c0xDQm9JRDBnTUN3Z2RTQTlJRzUxYkd3N0NpQWdJQ0JtZFc1amRHbHZiaUJrS0cwc0lIZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJQ0V4TENCbklEMGdlQzVwYzFOalpXNWxJRDA5UFNBaE1DQS9JSGd1WW1GamEyZHliM1Z1WkNBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnWnlBbUppQm5MbWx6VkdWNGRIVnlaU0FtSmlBb1p5QTlJR1V1WjJWMEtHY3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJSE11ZUhJc0lGOGdQU0J3TG1kbGRGTmxjM05wYjI0Z0ppWWdjQzVuWlhSVFpYTnphVzl1S0NrN0NpQWdJQ0FnSUNBZ1h5QW1KaUJmTG1WdWRtbHliMjV0Wlc1MFFteGxibVJOYjJSbElEMDlQU0FpWVdSa2FYUnBkbVVpSUNZbUlDaG5JRDBnYm5Wc2JDa3NJR2NnUFQwOUlHNTFiR3dnUHlCbUtISXNJRzhwSURvZ1p5QW1KaUJuTG1selEyOXNiM0lnSmlZZ0tHWW9aeXdnTVNrc0lIWWdQU0FoTUNrc0lDaHpMbUYxZEc5RGJHVmhjaUI4ZkNCMktTQW1KaUJ6TG1Oc1pXRnlLSE11WVhWMGIwTnNaV0Z5UTI5c2IzSXNJSE11WVhWMGIwTnNaV0Z5UkdWd2RHZ3NJSE11WVhWMGIwTnNaV0Z5VTNSbGJtTnBiQ2tzSUdjZ0ppWWdLR2N1YVhORGRXSmxWR1Y0ZEhWeVpTQjhmQ0JuTG0xaGNIQnBibWNnUFQwOUlGQnlLU0EvSUNoc0lEMDlQU0IyYjJsa0lEQWdKaVlnS0d3Z1BTQnVaWGNnYzNRb2JtVjNJSGR1S0RFc0lERXNJREVwTENCdVpYY2djMjRvZXdvZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBaVFtRmphMmR5YjNWdVpFTjFZbVZOWVhSbGNtbGhiQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQlNhU2h4ZEM1amRXSmxMblZ1YVdadmNtMXpLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJ4ZEM1amRXSmxMblpsY25SbGVGTm9ZV1JsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklIRjBMbU4xWW1VdVpuSmhaMjFsYm5SVGFHRmtaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lITnBaR1U2SUdsMExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFGUmxjM1E2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhNUW9nSUNBZ0lDQWdJSDBwS1N3Z2JDNW5aVzl0WlhSeWVTNWtaV3hsZEdWQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJcExDQnNMbWRsYjIxbGRISjVMbVJsYkdWMFpVRjBkSEpwWW5WMFpTZ2lkWFlpS1N3Z2JDNXZia0psWm05eVpWSmxibVJsY2lBOUlHWjFibU4wYVc5dUtIa3NJR0lzSUVFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQzVqYjNCNVVHOXphWFJwYjI0b1FTNXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLR3d1YldGMFpYSnBZV3dzSUNKbGJuWk5ZWEFpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUxYm1sbWIzSnRjeTVsYm5aTllYQXVkbUZzZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5S1N3Z2JpNTFjR1JoZEdVb2JDa3BMQ0JzTG0xaGRHVnlhV0ZzTG5WdWFXWnZjbTF6TG1WdWRrMWhjQzUyWVd4MVpTQTlJR2NzSUd3dWJXRjBaWEpwWVd3dWRXNXBabTl5YlhNdVpteHBjRVZ1ZGsxaGNDNTJZV3gxWlNBOUlHY3VhWE5EZFdKbFZHVjRkSFZ5WlNBbUppQm5MbWx6VW1WdVpHVnlWR0Z5WjJWMFZHVjRkSFZ5WlNBOVBUMGdJVEVnUHlBdE1TQTZJREVzSUNoaklDRTlQU0JuSUh4OElHZ2dJVDA5SUdjdWRtVnljMmx2YmlCOGZDQjFJQ0U5UFNCekxuUnZibVZOWVhCd2FXNW5LU0FtSmlBb2JDNXRZWFJsY21saGJDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQmpJRDBnWnl3Z2FDQTlJR2N1ZG1WeWMybHZiaXdnZFNBOUlITXVkRzl1WlUxaGNIQnBibWNwTENCdExuVnVjMmhwWm5Rb2JDd2diQzVuWlc5dFpYUnllU3dnYkM1dFlYUmxjbWxoYkN3Z01Dd2dNQ3dnYm5Wc2JDa3BJRG9nWnlBbUppQm5MbWx6VkdWNGRIVnlaU0FtSmlBb1lTQTlQVDBnZG05cFpDQXdJQ1ltSUNoaElEMGdibVYzSUhOMEtHNWxkeUJRYVNneUxDQXlLU3dnYm1WM0lITnVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSWtKaFkydG5jbTkxYm1STllYUmxjbWxoYkNJc0NpQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUJTYVNoeGRDNWlZV05yWjNKdmRXNWtMblZ1YVdadmNtMXpLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJ4ZEM1aVlXTnJaM0p2ZFc1a0xuWmxjblJsZUZOb1lXUmxjaXdLSUNBZ0lDQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUhGMExtSmhZMnRuY205MWJtUXVabkpoWjIxbGJuUlRhR0ZrWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJSE5wWkdVNklFRnBMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRlJsYzNRNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRmR5YVhSbE9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUFoTVFvZ0lDQWdJQ0FnSUgwcEtTd2dZUzVuWlc5dFpYUnllUzVrWld4bGRHVkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXBMQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb1lTNXRZWFJsY21saGJDd2dJbTFoY0NJc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5WdWFXWnZjbTF6TG5ReVJDNTJZV3gxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBwTENCdUxuVndaR0YwWlNoaEtTa3NJR0V1YldGMFpYSnBZV3d1ZFc1cFptOXliWE11ZERKRUxuWmhiSFZsSUQwZ1p5d2daeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDA5UFNBaE1DQW1KaUJuTG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0JoTG0xaGRHVnlhV0ZzTG5WdWFXWnZjbTF6TG5WMlZISmhibk5tYjNKdExuWmhiSFZsTG1OdmNIa29aeTV0WVhSeWFYZ3BMQ0FvWXlBaFBUMGdaeUI4ZkNCb0lDRTlQU0JuTG5abGNuTnBiMjRnZkh3Z2RTQWhQVDBnY3k1MGIyNWxUV0Z3Y0dsdVp5a2dKaVlnS0dFdWJXRjBaWEpwWVd3dWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z1l5QTlJR2NzSUdnZ1BTQm5MblpsY25OcGIyNHNJSFVnUFNCekxuUnZibVZOWVhCd2FXNW5LU3dnYlM1MWJuTm9hV1owS0dFc0lHRXVaMlZ2YldWMGNua3NJR0V1YldGMFpYSnBZV3dzSURBc0lEQXNJRzUxYkd3cEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR1lvYlN3Z2VDa2dld29nSUNBZ0lDQWdJSFF1WW5WbVptVnljeTVqYjJ4dmNpNXpaWFJEYkdWaGNpaHRMbklzSUcwdVp5d2diUzVpTENCNExDQnBLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWjJWMFEyeGxZWEpEYjJ4dmNqb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCeU93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwUTJ4bFlYSkRiMnh2Y2pvZ1puVnVZM1JwYjI0b2JTd2dlQ0E5SURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY2k1elpYUW9iU2tzSUc4Z1BTQjRMQ0JtS0hJc0lHOHBPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWjJWMFEyeGxZWEpCYkhCb1lUb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdk93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwUTJ4bFlYSkJiSEJvWVRvZ1puVnVZM1JwYjI0b2JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCdklEMGdiU3dnWmloeUxDQnZLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhKbGJtUmxjam9nWkFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCWGJTaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNME9USXhLU3dnY2lBOUlHNHVhWE5YWldKSFRESWdQeUJ1ZFd4c0lEb2daUzVuWlhRb0lrOUZVMTkyWlhKMFpYaGZZWEp5WVhsZmIySnFaV04wSWlrc0lHOGdQU0J1TG1selYyVmlSMHd5SUh4OElISWdJVDA5SUc1MWJHd3NJR0VnUFNCN2ZTd2diQ0E5SUhnb2JuVnNiQ2tzSUdNZ1BTQnNPd29nSUNBZ1puVnVZM1JwYjI0Z2FDaEZMQ0JFTENCVkxDQkdMQ0JQS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzVsSUQwZ0lURTdDaUFnSUNBZ0lDQWdhV1lnS0c4cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTmxJRDBnYlNoR0xDQlZMQ0JFS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZeUFoUFQwZ1kyVWdKaVlnS0dNZ1BTQmpaU3dnWkNoakxtOWlhbVZqZENrcExDQnVaU0E5SUhZb1Jpd2dUeWtzSUc1bElDWW1JR2NvUml3Z1R5azdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTmxNU0E5SUVRdWQybHlaV1p5WVcxbElEMDlQU0FoTURzS0lDQWdJQ0FnSUNBZ0lDQWdLR011WjJWdmJXVjBjbmtnSVQwOUlFWXVhV1FnZkh3Z1l5NXdjbTluY21GdElDRTlQU0JWTG1sa0lIeDhJR011ZDJseVpXWnlZVzFsSUNFOVBTQmpaVEVwSUNZbUlDaGpMbWRsYjIxbGRISjVJRDBnUmk1cFpDd2dZeTV3Y205bmNtRnRJRDBnVlM1cFpDd2dZeTUzYVhKbFpuSmhiV1VnUFNCalpURXNJRzVsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JGTG1selNXNXpkR0Z1WTJWa1RXVnphQ0E5UFQwZ0lUQWdKaVlnS0c1bElEMGdJVEFwTENCUElDRTlQU0J1ZFd4c0lDWW1JSFF1ZFhCa1lYUmxLRThzSURNME9UWXpLU3dnYm1VZ0ppWWdLRXdvUlN3Z1JDd2dWU3dnUmlrc0lFOGdJVDA5SUc1MWJHd2dKaVlnY3k1aWFXNWtRblZtWm1WeUtETTBPVFl6TENCMExtZGxkQ2hQS1M1aWRXWm1aWElwS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YVhOWFpXSkhURElnUHlCekxtTnlaV0YwWlZabGNuUmxlRUZ5Y21GNUtDa2dPaUJ5TG1OeVpXRjBaVlpsY25SbGVFRnljbUY1VDBWVEtDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJrS0VVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXBjMWRsWWtkTU1pQS9JSE11WW1sdVpGWmxjblJsZUVGeWNtRjVLRVVwSURvZ2NpNWlhVzVrVm1WeWRHVjRRWEp5WVhsUFJWTW9SU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCbUtFVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTVwYzFkbFlrZE1NaUEvSUhNdVpHVnNaWFJsVm1WeWRHVjRRWEp5WVhrb1JTa2dPaUJ5TG1SbGJHVjBaVlpsY25SbGVFRnljbUY1VDBWVEtFVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYlNoRkxDQkVMQ0JWS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVlnUFNCVkxuZHBjbVZtY21GdFpTQTlQVDBnSVRBc0lFOGdQU0JoVzBVdWFXUmRPd29nSUNBZ0lDQWdJRThnUFQwOUlIWnZhV1FnTUNBbUppQW9UeUE5SUh0OUxDQmhXMFV1YVdSZElEMGdUeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHNWxJRDBnVDF0RUxtbGtYVHNLSUNBZ0lDQWdJQ0J1WlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2h1WlNBOUlIdDlMQ0JQVzBRdWFXUmRJRDBnYm1VcE93b2dJQ0FnSUNBZ0lHeGxkQ0JqWlNBOUlHNWxXMFpkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqWlNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hqWlNBOUlIZ29kU2dwS1N3Z2JtVmJSbDBnUFNCalpTa3NJR05sT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VDaEZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFUWdQU0JiWFN3Z1ZTQTlJRnRkTENCR0lEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JQSUQwZ01Ec2dUeUE4SUdrN0lFOHJLeWxFVzA5ZElEMGdNQ3dnVlZ0UFhTQTlJREFzSUVaYlQxMGdQU0F3T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxiMjFsZEhKNU9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTluY21GdE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhWEpsWm5KaGJXVTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGRCZEhSeWFXSjFkR1Z6T2lCRUxBb2dJQ0FnSUNBZ0lDQWdJQ0JsYm1GaWJHVmtRWFIwY21saWRYUmxjem9nVlN3S0lDQWdJQ0FnSUNBZ0lDQWdZWFIwY21saWRYUmxSR2wyYVhOdmNuTTZJRVlzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ1JTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNtbGlkWFJsY3pvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFlvUlN3Z1JDa2dld29nSUNBZ0lDQWdJR3hsZENCVklEMGdZeTVoZEhSeWFXSjFkR1Z6TENCR0lEMGdSUzVoZEhSeWFXSjFkR1Z6TENCUElEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzVsSUdsdUlFWXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZMlVnUFNCVlcyNWxYU3dnVmlBOUlFWmJibVZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWTJVZ1BUMDlJSFp2YVdRZ01DQjhmQ0JqWlM1aGRIUnlhV0oxZEdVZ0lUMDlJRllnZkh3Z1kyVXVaR0YwWVNBaFBUMGdWaTVrWVhSaEtTQnlaWFIxY200Z0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUU4ckt6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTXVZWFIwY21saWRYUmxjMDUxYlNBaFBUMGdUeUI4ZkNCakxtbHVaR1Y0SUNFOVBTQkVPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWnloRkxDQkVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGVWdQU0I3ZlN3Z1JpQTlJRVV1WVhSMGNtbGlkWFJsY3l3Z1R5QTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1WlNCcGJpQkdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR05sSUQwZ1JsdHVaVjBzSUZZZ1BTQjdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZpNWhkSFJ5YVdKMWRHVWdQU0JqWlN3Z1kyVXVaR0YwWVNBbUppQW9WaTVrWVhSaElEMGdZMlV1WkdGMFlTa3NJRlZiYm1WZElEMGdWaXdnVHlzck93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmpMbUYwZEhKcFluVjBaWE1nUFNCVkxDQmpMbUYwZEhKcFluVjBaWE5PZFcwZ1BTQlBMQ0JqTG1sdVpHVjRJRDBnUkRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIQW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFVWdQU0JqTG01bGQwRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkVJRDBnTUN3Z1ZTQTlJRVV1YkdWdVozUm9PeUJFSUR3Z1ZUc2dSQ3NyS1VWYlJGMGdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1h5aEZLU0I3Q2lBZ0lDQWdJQ0FnZVNoRkxDQXdLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhrb1JTd2dSQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlZJRDBnWXk1dVpYZEJkSFJ5YVdKMWRHVnpMQ0JHSUQwZ1l5NWxibUZpYkdWa1FYUjBjbWxpZFhSbGN5d2dUeUE5SUdNdVlYUjBjbWxpZFhSbFJHbDJhWE52Y25NN0NpQWdJQ0FnSUNBZ1ZWdEZYU0E5SURFc0lFWmJSVjBnUFQwOUlEQWdKaVlnS0hNdVpXNWhZbXhsVm1WeWRHVjRRWFIwY21saVFYSnlZWGtvUlNrc0lFWmJSVjBnUFNBeEtTd2dUMXRGWFNBaFBUMGdSQ0FtSmlBb0tHNHVhWE5YWldKSFRESWdQeUJ6SURvZ1pTNW5aWFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLU2xiYmk1cGMxZGxZa2RNTWlBL0lDSjJaWEowWlhoQmRIUnlhV0pFYVhacGMyOXlJaUE2SUNKMlpYSjBaWGhCZEhSeWFXSkVhWFpwYzI5eVFVNUhURVVpWFNoRkxDQkVLU3dnVDF0RlhTQTlJRVFwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJR011Ym1WM1FYUjBjbWxpZFhSbGN5d2dSQ0E5SUdNdVpXNWhZbXhsWkVGMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCVklEMGdNQ3dnUmlBOUlFUXViR1Z1WjNSb095QlZJRHdnUmpzZ1ZTc3JLVVJiVlYwZ0lUMDlJRVZiVlYwZ0ppWWdLSE11WkdsellXSnNaVlpsY25SbGVFRjBkSEpwWWtGeWNtRjVLRlVwTENCRVcxVmRJRDBnTUNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkJLRVVzSUVRc0lGVXNJRVlzSUU4c0lHNWxLU0I3Q2lBZ0lDQWdJQ0FnYmk1cGMxZGxZa2RNTWlBOVBUMGdJVEFnSmlZZ0tGVWdQVDA5SURVeE1qUWdmSHdnVlNBOVBUMGdOVEV5TlNrZ1B5QnpMblpsY25SbGVFRjBkSEpwWWtsUWIybHVkR1Z5S0VVc0lFUXNJRlVzSUU4c0lHNWxLU0E2SUhNdWRtVnlkR1Y0UVhSMGNtbGlVRzlwYm5SbGNpaEZMQ0JFTENCVkxDQkdMQ0JQTENCdVpTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJNS0VVc0lFUXNJRlVzSUVZcElIc0tJQ0FnSUNBZ0lDQnBaaUFvYmk1cGMxZGxZa2RNTWlBOVBUMGdJVEVnSmlZZ0tFVXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lIeDhJRVl1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllU2tnSmlZZ1pTNW5aWFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLU0E5UFQwZ2JuVnNiQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSEFvS1RzS0lDQWdJQ0FnSUNCc1pYUWdUeUE5SUVZdVlYUjBjbWxpZFhSbGN5d2dibVVnUFNCVkxtZGxkRUYwZEhKcFluVjBaWE1vS1N3Z1kyVWdQU0JFTG1SbFptRjFiSFJCZEhSeWFXSjFkR1ZXWVd4MVpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQldJR2x1SUc1bEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGY2dQU0J1WlZ0V1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGY3ViRzlqWVhScGIyNGdQajBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2hsSUQwZ1QxdFdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNob1pTQTlQVDBnZG05cFpDQXdJQ1ltSUNoV0lEMDlQU0FpYVc1emRHRnVZMlZOWVhSeWFYZ2lJQ1ltSUVVdWFXNXpkR0Z1WTJWTllYUnlhWGdnSmlZZ0tHaGxJRDBnUlM1cGJuTjBZVzVqWlUxaGRISnBlQ2tzSUZZZ1BUMDlJQ0pwYm5OMFlXNWpaVU52Ykc5eUlpQW1KaUJGTG1sdWMzUmhibU5sUTI5c2IzSWdKaVlnS0dobElEMGdSUzVwYm5OMFlXNWpaVU52Ykc5eUtTa3NJR2hsSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JHVWdQU0JvWlM1dWIzSnRZV3hwZW1Wa0xDQm1aU0E5SUdobExtbDBaVzFUYVhwbExDQkNaU0E5SUhRdVoyVjBLR2hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUW1VZ1BUMDlJSFp2YVdRZ01Da2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGa2dQU0JDWlM1aWRXWm1aWElzSUVObElEMGdRbVV1ZEhsd1pTd2dlV1VnUFNCQ1pTNWllWFJsYzFCbGNrVnNaVzFsYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dobExtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdkbElEMGdhR1V1WkdGMFlTd2dlR1VnUFNCblpTNXpkSEpwWkdVc0lFOWxJRDBnYUdVdWIyWm1jMlYwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1oyVWdKaVlnWjJVdWFYTkpibk4wWVc1alpXUkpiblJsY214bFlYWmxaRUoxWm1abGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JISUQwZ01Ec2dSeUE4SUZjdWJHOWpZWFJwYjI1VGFYcGxPeUJIS3lzcGVTaFhMbXh2WTJGMGFXOXVJQ3NnUnl3Z1oyVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JGTG1selNXNXpkR0Z1WTJWa1RXVnphQ0FoUFQwZ0lUQWdKaVlnUmk1ZmJXRjRTVzV6ZEdGdVkyVkRiM1Z1ZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2hHTGw5dFlYaEpibk4wWVc1alpVTnZkVzUwSUQwZ1oyVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQXFJR2RsTG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHWnZjaWhzWlhRZ1J6RWdQU0F3T3lCSE1TQThJRmN1Ykc5allYUnBiMjVUYVhwbE95QkhNU3NyS1Y4b1Z5NXNiMk5oZEdsdmJpQXJJRWN4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1aWFXNWtRblZtWm1WeUtETTBPVFl5TENCWktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSE1pQTlJREE3SUVjeUlEd2dWeTVzYjJOaGRHbHZibE5wZW1VN0lFY3lLeXNwUVNoWExteHZZMkYwYVc5dUlDc2dSeklzSUdabElDOGdWeTVzYjJOaGRHbHZibE5wZW1Vc0lFTmxMQ0JzWlN3Z2VHVWdLaUI1WlN3Z0tFOWxJQ3NnWm1VZ0x5QlhMbXh2WTJGMGFXOXVVMmw2WlNBcUlFY3lLU0FxSUhsbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYUdVdWFYTkpibk4wWVc1alpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaMlV4SUQwZ01Ec2daMlV4SUR3Z1Z5NXNiMk5oZEdsdmJsTnBlbVU3SUdkbE1Tc3JLWGtvVnk1c2IyTmhkR2x2YmlBcklHZGxNU3dnYUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkZMbWx6U1c1emRHRnVZMlZrVFdWemFDQWhQVDBnSVRBZ0ppWWdSaTVmYldGNFNXNXpkR0Z1WTJWRGIzVnVkQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaEdMbDl0WVhoSmJuTjBZVzVqWlVOdmRXNTBJRDBnYUdVdWJXVnphRkJsY2tGMGRISnBZblYwWlNBcUlHaGxMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdadmNpaHNaWFFnWjJVeUlEMGdNRHNnWjJVeUlEd2dWeTVzYjJOaGRHbHZibE5wZW1VN0lHZGxNaXNyS1Y4b1Z5NXNiMk5oZEdsdmJpQXJJR2RsTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdVltbHVaRUoxWm1abGNpZ3pORGsyTWl3Z1dTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1oyVXpJRDBnTURzZ1oyVXpJRHdnVnk1c2IyTmhkR2x2YmxOcGVtVTdJR2RsTXlzcktVRW9WeTVzYjJOaGRHbHZiaUFySUdkbE15d2dabVVnTHlCWExteHZZMkYwYVc5dVUybDZaU3dnUTJVc0lHeGxMQ0JtWlNBcUlIbGxMQ0JtWlNBdklGY3ViRzlqWVhScGIyNVRhWHBsSUNvZ1oyVXpJQ29nZVdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWTJVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaVEVnUFNCalpWdFdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iR1V4SUNFOVBTQjJiMmxrSURBcElITjNhWFJqYUNoc1pURXViR1Z1WjNSb0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F5T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NTJaWEowWlhoQmRIUnlhV0l5Wm5Zb1Z5NXNiMk5oZEdsdmJpd2diR1V4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElETTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG5abGNuUmxlRUYwZEhKcFlqTm1kaWhYTG14dlkyRjBhVzl1TENCc1pURXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTkRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVkbVZ5ZEdWNFFYUjBjbWxpTkdaMktGY3ViRzlqWVhScGIyNHNJR3hsTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdWRtVnlkR1Y0UVhSMGNtbGlNV1oyS0ZjdWJHOWpZWFJwYjI0c0lHeGxNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdJb0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRWtvS1NCN0NpQWdJQ0FnSUNBZ1VDZ3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdSU0JwYmlCaEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFUWdQU0JoVzBWZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRlVnYVc0Z1JDbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlFUmJWVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRThnYVc0Z1JpbG1LRVpiVDEwdWIySnFaV04wS1N3Z1pHVnNaWFJsSUVaYlQxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV3hsZEdVZ1JGdFZYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdZVnRGWFRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnJLRVVwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZVnRGTG1sa1hTQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUVRZ1BTQmhXMFV1YVdSZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1ZTQnBiaUJFS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVZZ1BTQkVXMVZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFOGdhVzRnUmlsbUtFWmJUMTB1YjJKcVpXTjBLU3dnWkdWc1pYUmxJRVpiVDEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQkVXMVZkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCa1pXeGxkR1VnWVZ0RkxtbGtYVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVJb1JTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdSQ0JwYmlCaEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGVWdQU0JoVzBSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1ZWdEZMbWxrWFNBOVBUMGdkbTlwWkNBd0tTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0JWVzBVdWFXUmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUU4Z2FXNGdSaWxtS0VaYlQxMHViMkpxWldOMEtTd2daR1ZzWlhSbElFWmJUMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCVlcwVXVhV1JkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGQW9LU0I3Q2lBZ0lDQWdJQ0FnZHlncExDQmpJQ0U5UFNCc0lDWW1JQ2hqSUQwZ2JDd2daQ2hqTG05aWFtVmpkQ2twT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2R5Z3BJSHNLSUNBZ0lDQWdJQ0JzTG1kbGIyMWxkSEo1SUQwZ2JuVnNiQ3dnYkM1d2NtOW5jbUZ0SUQwZ2JuVnNiQ3dnYkM1M2FYSmxabkpoYldVZ1BTQWhNVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnYzJWMGRYQTZJR2dzQ2lBZ0lDQWdJQ0FnY21WelpYUTZJRkFzQ2lBZ0lDQWdJQ0FnY21WelpYUkVaV1poZFd4MFUzUmhkR1U2SUhjc0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ1NTd0tJQ0FnSUNBZ0lDQnlaV3hsWVhObFUzUmhkR1Z6VDJaSFpXOXRaWFJ5ZVRvZ2F5d0tJQ0FnSUNBZ0lDQnlaV3hsWVhObFUzUmhkR1Z6VDJaUWNtOW5jbUZ0T2lCQ0xBb2dJQ0FnSUNBZ0lHbHVhWFJCZEhSeWFXSjFkR1Z6T2lCd0xBb2dJQ0FnSUNBZ0lHVnVZV0pzWlVGMGRISnBZblYwWlRvZ1h5d0tJQ0FnSUNBZ0lDQmthWE5oWW14bFZXNTFjMlZrUVhSMGNtbGlkWFJsY3pvZ1lnb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQnhiU2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJRzR1YVhOWFpXSkhURElzSUhJN0NpQWdJQ0JtZFc1amRHbHZiaUJ2S0dNcElIc0tJQ0FnSUNBZ0lDQnlJRDBnWXpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHRW9ZeXdnYUNrZ2V3b2dJQ0FnSUNBZ0lITXVaSEpoZDBGeWNtRjVjeWh5TENCakxDQm9LU3dnZEM1MWNHUmhkR1VvYUN3Z2Npd2dNU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCc0tHTXNJR2dzSUhVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZFNBOVBUMGdNQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCa0xDQm1Pd29nSUNBZ0lDQWdJR2xtSUNocEtTQmtJRDBnY3l3Z1ppQTlJQ0prY21GM1FYSnlZWGx6U1c1emRHRnVZMlZrSWpzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoa0lEMGdaUzVuWlhRb0lrRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1pS1N3Z1ppQTlJQ0prY21GM1FYSnlZWGx6U1c1emRHRnVZMlZrUVU1SFRFVWlMQ0JrSUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1RblZtWm1WeVVtVnVaR1Z5WlhJNklIVnphVzVuSUZSSVVrVkZMa2x1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUlHSjFkQ0JvWVhKa2QyRnlaU0JrYjJWeklHNXZkQ0J6ZFhCd2IzSjBJR1Y0ZEdWdWMybHZiaUJCVGtkTVJWOXBibk4wWVc1alpXUmZZWEp5WVhsekxpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdSYlpsMG9jaXdnWXl3Z2FDd2dkU2tzSUhRdWRYQmtZWFJsS0dnc0lISXNJSFVwT3dvZ0lDQWdmUW9nSUNBZ2RHaHBjeTV6WlhSTmIyUmxJRDBnYnl3Z2RHaHBjeTV5Wlc1a1pYSWdQU0JoTENCMGFHbHpMbkpsYm1SbGNrbHVjM1JoYm1ObGN5QTlJR3c3Q24wS1puVnVZM1JwYjI0Z1dHMG9jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzQ3Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaHVJQ0U5UFNCMmIybGtJREFwSUhKbGRIVnliaUJ1T3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbWhoY3lnaVJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJaWtnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ1pTNW5aWFFvSWtWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBPd29nSUNBZ0lDQWdJQ0FnSUNCdUlEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb1RDNU5RVmhmVkVWWVZGVlNSVjlOUVZoZlFVNUpVMDlVVWs5UVdWOUZXRlFwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J1SUQwZ01Ec0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSElvVENrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hNSUQwOVBTQWlhR2xuYUhBaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpMbWRsZEZOb1lXUmxjbEJ5WldOcGMybHZia1p2Y20xaGRDZ3pOVFl6TXl3Z016WXpNemdwTG5CeVpXTnBjMmx2YmlBK0lEQWdKaVlnY3k1blpYUlRhR0ZrWlhKUWNtVmphWE5wYjI1R2IzSnRZWFFvTXpVMk16SXNJRE0yTXpNNEtTNXdjbVZqYVhOcGIyNGdQaUF3S1NCeVpYUjFjbTRnSW1ocFoyaHdJanNLSUNBZ0lDQWdJQ0FnSUNBZ1RDQTlJQ0p0WldScGRXMXdJanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRXdnUFQwOUlDSnRaV1JwZFcxd0lpQW1KaUJ6TG1kbGRGTm9ZV1JsY2xCeVpXTnBjMmx2YmtadmNtMWhkQ2d6TlRZek15d2dNell6TXpjcExuQnlaV05wYzJsdmJpQStJREFnSmlZZ2N5NW5aWFJUYUdGa1pYSlFjbVZqYVhOcGIyNUdiM0p0WVhRb016VTJNeklzSURNMk16TTNLUzV3Y21WamFYTnBiMjRnUGlBd0lEOGdJbTFsWkdsMWJYQWlJRG9nSW14dmQzQWlPd29nSUNBZ2ZRb2dJQ0FnYkdWMElHOGdQU0IwZVhCbGIyWWdWMlZpUjB3eVVtVnVaR1Z5YVc1blEyOXVkR1Y0ZENBOElDSjFJaUFtSmlCeklHbHVjM1JoYm1ObGIyWWdWMlZpUjB3eVVtVnVaR1Z5YVc1blEyOXVkR1Y0ZENCOGZDQjBlWEJsYjJZZ1YyVmlSMHd5UTI5dGNIVjBaVkpsYm1SbGNtbHVaME52Ym5SbGVIUWdQQ0FpZFNJZ0ppWWdjeUJwYm5OMFlXNWpaVzltSUZkbFlrZE1Na052YlhCMWRHVlNaVzVrWlhKcGJtZERiMjUwWlhoMExDQmhJRDBnZEM1d2NtVmphWE5wYjI0Z0lUMDlJSFp2YVdRZ01DQS9JSFF1Y0hKbFkybHphVzl1SURvZ0ltaHBaMmh3SWl3Z2JDQTlJSElvWVNrN0NpQWdJQ0JzSUNFOVBTQmhJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SWl3Z1lTd2dJbTV2ZENCemRYQndiM0owWldRc0lIVnphVzVuSWl3Z2JDd2dJbWx1YzNSbFlXUXVJaWtzSUdFZ1BTQnNLVHNLSUNBZ0lHeGxkQ0JqSUQwZ2J5QjhmQ0JsTG1oaGN5Z2lWMFZDUjB4ZlpISmhkMTlpZFdabVpYSnpJaWtzSUdnZ1BTQjBMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJZ1BUMDlJQ0V3TENCMUlEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb016UTVNekFwTENCa0lEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb016VTJOakFwTENCbUlEMGdjeTVuWlhSUVlYSmhiV1YwWlhJb016TTNPU2tzSUcwZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5EQTNOaWtzSUhnZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5Ea3lNU2tzSUhZZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5qTTBOeWtzSUdjZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5qTTBPQ2tzSUhBZ1BTQnpMbWRsZEZCaGNtRnRaWFJsY2lnek5qTTBPU2tzSUY4Z1BTQmtJRDRnTUN3Z2VTQTlJRzhnZkh3Z1pTNW9ZWE1vSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwSWlrc0lHSWdQU0JmSUNZbUlIa3NJRUVnUFNCdklEOGdjeTVuWlhSUVlYSmhiV1YwWlhJb016WXhPRE1wSURvZ01Ec0tJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnYVhOWFpXSkhUREk2SUc4c0NpQWdJQ0FnSUNBZ1pISmhkMEoxWm1abGNuTTZJR01zQ2lBZ0lDQWdJQ0FnWjJWMFRXRjRRVzVwYzI5MGNtOXdlVG9nYVN3S0lDQWdJQ0FnSUNCblpYUk5ZWGhRY21WamFYTnBiMjQ2SUhJc0NpQWdJQ0FnSUNBZ2NISmxZMmx6YVc5dU9pQmhMQW9nSUNBZ0lDQWdJR3h2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJNklHZ3NDaUFnSUNBZ0lDQWdiV0Y0VkdWNGRIVnlaWE02SUhVc0NpQWdJQ0FnSUNBZ2JXRjRWbVZ5ZEdWNFZHVjRkSFZ5WlhNNklHUXNDaUFnSUNBZ0lDQWdiV0Y0VkdWNGRIVnlaVk5wZW1VNklHWXNDaUFnSUNBZ0lDQWdiV0Y0UTNWaVpXMWhjRk5wZW1VNklHMHNDaUFnSUNBZ0lDQWdiV0Y0UVhSMGNtbGlkWFJsY3pvZ2VDd0tJQ0FnSUNBZ0lDQnRZWGhXWlhKMFpYaFZibWxtYjNKdGN6b2dkaXdLSUNBZ0lDQWdJQ0J0WVhoV1lYSjVhVzVuY3pvZ1p5d0tJQ0FnSUNBZ0lDQnRZWGhHY21GbmJXVnVkRlZ1YVdadmNtMXpPaUJ3TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRlJsZUhSMWNtVnpPaUJmTEFvZ0lDQWdJQ0FnSUdac2IyRjBSbkpoWjIxbGJuUlVaWGgwZFhKbGN6b2dlU3dLSUNBZ0lDQWdJQ0JtYkc5aGRGWmxjblJsZUZSbGVIUjFjbVZ6T2lCaUxBb2dJQ0FnSUNBZ0lHMWhlRk5oYlhCc1pYTTZJRUVLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnU20wb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCMGFHbHpMQ0IwSUQwZ2JuVnNiQ3dnYmlBOUlEQXNJR2tnUFNBaE1Td2djaUE5SUNFeExDQnZJRDBnYm1WM0lGZDBMQ0JoSUQwZ2JtVjNJR3gwTENCc0lEMGdld29nSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUc1bFpXUnpWWEJrWVhSbE9pQWhNUW9nSUNBZ2ZUc0tJQ0FnSUhSb2FYTXVkVzVwWm05eWJTQTlJR3dzSUhSb2FYTXViblZ0VUd4aGJtVnpJRDBnTUN3Z2RHaHBjeTV1ZFcxSmJuUmxjbk5sWTNScGIyNGdQU0F3TENCMGFHbHpMbWx1YVhRZ1BTQm1kVzVqZEdsdmJpaDFMQ0JrTENCbUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUcwZ1BTQjFMbXhsYm1kMGFDQWhQVDBnTUNCOGZDQmtJSHg4SUc0Z0lUMDlJREFnZkh3Z2FUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FTQTlJR1FzSUhRZ1BTQm9LSFVzSUdZc0lEQXBMQ0J1SUQwZ2RTNXNaVzVuZEdnc0lHMDdDaUFnSUNCOUxDQjBhR2x6TG1KbFoybHVVMmhoWkc5M2N5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhJZ1BTQWhNQ3dnYUNodWRXeHNLVHNLSUNBZ0lIMHNJSFJvYVhNdVpXNWtVMmhoWkc5M2N5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhJZ1BTQWhNU3dnWXlncE93b2dJQ0FnZlN3Z2RHaHBjeTV6WlhSVGRHRjBaU0E5SUdaMWJtTjBhVzl1S0hVc0lHUXNJR1lwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUhVdVkyeHBjSEJwYm1kUWJHRnVaWE1zSUhnZ1BTQjFMbU5zYVhCSmJuUmxjbk5sWTNScGIyNHNJSFlnUFNCMUxtTnNhWEJUYUdGa2IzZHpMQ0JuSUQwZ2N5NW5aWFFvZFNrN0NpQWdJQ0FnSUNBZ2FXWWdLQ0ZwSUh4OElHMGdQVDA5SUc1MWJHd2dmSHdnYlM1c1pXNW5kR2dnUFQwOUlEQWdmSHdnY2lBbUppQWhkaWtnY2lBL0lHZ29iblZzYkNrZ09pQmpLQ2s3Q2lBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnY2lBL0lEQWdPaUJ1TENCZklEMGdjQ0FxSURRc0lIa2dQU0JuTG1Oc2FYQndhVzVuVTNSaGRHVWdmSHdnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnYkM1MllXeDFaU0E5SUhrc0lIa2dQU0JvS0cwc0lHUXNJRjhzSUdZcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0lnUFNBd095QmlJQ0U5UFNCZk95QXJLMklwZVZ0aVhTQTlJSFJiWWwwN0NpQWdJQ0FnSUNBZ0lDQWdJR2N1WTJ4cGNIQnBibWRUZEdGMFpTQTlJSGtzSUhSb2FYTXViblZ0U1c1MFpYSnpaV04wYVc5dUlEMGdlQ0EvSUhSb2FYTXViblZ0VUd4aGJtVnpJRG9nTUN3Z2RHaHBjeTV1ZFcxUWJHRnVaWE1nS3owZ2NEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOU93b2dJQ0FnWm5WdVkzUnBiMjRnWXlncElIc0tJQ0FnSUNBZ0lDQnNMblpoYkhWbElDRTlQU0IwSUNZbUlDaHNMblpoYkhWbElEMGdkQ3dnYkM1dVpXVmtjMVZ3WkdGMFpTQTlJRzRnUGlBd0tTd2daUzV1ZFcxUWJHRnVaWE1nUFNCdUxDQmxMbTUxYlVsdWRHVnljMlZqZEdsdmJpQTlJREE3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCb0tIVXNJR1FzSUdZc0lHMHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJSFVnSVQwOUlHNTFiR3dnUHlCMUxteGxibWQwYUNBNklEQXNJSFlnUFNCdWRXeHNPd29nSUNBZ0lDQWdJR2xtSUNoNElDRTlQU0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMklEMGdiQzUyWVd4MVpTd2diU0FoUFQwZ0lUQWdmSHdnZGlBOVBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCbUlDc2dlQ0FxSURRc0lIQWdQU0JrTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFdVoyVjBUbTl5YldGc1RXRjBjbWw0S0hBcExDQW9kaUE5UFQwZ2JuVnNiQ0I4ZkNCMkxteGxibWQwYUNBOElHY3BJQ1ltSUNoMklEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaG5LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd0xDQjVJRDBnWmpzZ1h5QWhQVDBnZURzZ0t5dGZMQ0I1SUNzOUlEUXBieTVqYjNCNUtIVmJYMTBwTG1Gd2NHeDVUV0YwY21sNE5DaHdMQ0JoS1N3Z2J5NXViM0p0WVd3dWRHOUJjbkpoZVNoMkxDQjVLU3dnZGx0NUlDc2dNMTBnUFNCdkxtTnZibk4wWVc1ME93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHd3VkbUZzZFdVZ1BTQjJMQ0JzTG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG01MWJWQnNZVzVsY3lBOUlIZ3NJR1V1Ym5WdFNXNTBaWEp6WldOMGFXOXVJRDBnTUN3Z2Rqc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQlpiU2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdablZ1WTNScGIyNGdkQ2h2TENCaEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdQVDA5SUVSeklEOGdieTV0WVhCd2FXNW5JRDBnUW1rZ09pQmhJRDA5UFNCR2N5QW1KaUFvYnk1dFlYQndhVzVuSUQwZ2Vta3BMQ0J2T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JpaHZLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdKaVlnYnk1cGMxUmxlSFIxY21VZ0ppWWdieTVwYzFKbGJtUmxjbFJoY21kbGRGUmxlSFIxY21VZ1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdieTV0WVhCd2FXNW5Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZU0E5UFQwZ1JITWdmSHdnWVNBOVBUMGdSbk1wSUdsbUlDaGxMbWhoY3lodktTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQmxMbWRsZENodktTNTBaWGgwZFhKbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRb2JDd2dieTV0WVhCd2FXNW5LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNNU0E5SUc4dWFXMWhaMlU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JERWdKaVlnYkRFdWFHVnBaMmgwSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnY3k1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1N3Z2FDQTlJRzVsZHlCcWN5aHNNUzVvWldsbmFIUWdMeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FDNW1jbTl0UlhGMWFYSmxZM1JoYm1kMWJHRnlWR1Y0ZEhWeVpTaHpMQ0J2S1N3Z1pTNXpaWFFvYnl3Z2FDa3NJSE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBLR01wTENCdkxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQnBLU3dnZENob0xuUmxlSFIxY21Vc0lHOHViV0Z3Y0dsdVp5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4N0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLRzhwSUhzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc4dWRHRnlaMlYwT3dvZ0lDQWdJQ0FnSUdFdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJR2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWlM1blpYUW9ZU2s3Q2lBZ0lDQWdJQ0FnYkNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hsTG1SbGJHVjBaU2hoS1N3Z2JDNWthWE53YjNObEtDa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnY2lncElIc0tJQ0FnSUNBZ0lDQmxJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nYml3S0lDQWdJQ0FnSUNCa2FYTndiM05sT2lCeUNpQWdJQ0I5T3dwOUNuWmhjaUJHY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nU1hJZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJQzB4TENCMElEMGdNU3dnYmlBOUlERXNJR2tnUFNBdE1Td2djaUE5SUM0eExDQnZJRDBnTW1VektYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pQY25Sb2IyZHlZWEJvYVdORFlXMWxjbUVpTENCMGFHbHpMbnB2YjIwZ1BTQXhMQ0IwYUdsekxuWnBaWGNnUFNCdWRXeHNMQ0IwYUdsekxteGxablFnUFNCbExDQjBhR2x6TG5KcFoyaDBJRDBnZEN3Z2RHaHBjeTUwYjNBZ1BTQnVMQ0IwYUdsekxtSnZkSFJ2YlNBOUlHa3NJSFJvYVhNdWJtVmhjaUE5SUhJc0lIUm9hWE11Wm1GeUlEMGdieXdnZEdocGN5NTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsTENCMEtTd2dkR2hwY3k1c1pXWjBJRDBnWlM1c1pXWjBMQ0IwYUdsekxuSnBaMmgwSUQwZ1pTNXlhV2RvZEN3Z2RHaHBjeTUwYjNBZ1BTQmxMblJ2Y0N3Z2RHaHBjeTVpYjNSMGIyMGdQU0JsTG1KdmRIUnZiU3dnZEdocGN5NXVaV0Z5SUQwZ1pTNXVaV0Z5TENCMGFHbHpMbVpoY2lBOUlHVXVabUZ5TENCMGFHbHpMbnB2YjIwZ1BTQmxMbnB2YjIwc0lIUm9hWE11ZG1sbGR5QTlJR1V1ZG1sbGR5QTlQVDBnYm5Wc2JDQS9JRzUxYkd3Z09pQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMblpwWlhjcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBWbWxsZDA5bVpuTmxkQ2hsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTJhV1YzSUQwOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG5acFpYY2dQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnVZV0pzWldRNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCbWRXeHNWMmxrZEdnNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJHeElaV2xuYUhRNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRmc2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGRGazZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lBeExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJREVLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUyYVdWM0xtVnVZV0pzWldRZ1BTQWhNQ3dnZEdocGN5NTJhV1YzTG1aMWJHeFhhV1IwYUNBOUlHVXNJSFJvYVhNdWRtbGxkeTVtZFd4c1NHVnBaMmgwSUQwZ2RDd2dkR2hwY3k1MmFXVjNMbTltWm5ObGRGZ2dQU0J1TENCMGFHbHpMblpwWlhjdWIyWm1jMlYwV1NBOUlHa3NJSFJvYVhNdWRtbGxkeTUzYVdSMGFDQTlJSElzSUhSb2FYTXVkbWxsZHk1b1pXbG5hSFFnUFNCdkxDQjBhR2x6TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lIMEtJQ0FnSUdOc1pXRnlWbWxsZDA5bVpuTmxkQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMblpwWlhjZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdWRtbGxkeTVsYm1GaWJHVmtJRDBnSVRFcExDQjBhR2x6TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0FvZEdocGN5NXlhV2RvZENBdElIUm9hWE11YkdWbWRDa2dMeUFvTWlBcUlIUm9hWE11ZW05dmJTa3NJSFFnUFNBb2RHaHBjeTUwYjNBZ0xTQjBhR2x6TG1KdmRIUnZiU2tnTHlBb01pQXFJSFJvYVhNdWVtOXZiU2tzSUc0Z1BTQW9kR2hwY3k1eWFXZG9kQ0FySUhSb2FYTXViR1ZtZENrZ0x5QXlMQ0JwSUQwZ0tIUm9hWE11ZEc5d0lDc2dkR2hwY3k1aWIzUjBiMjBwSUM4Z01pd2djaUE5SUc0Z0xTQmxMQ0J2SUQwZ2JpQXJJR1VzSUdFZ1BTQnBJQ3NnZEN3Z2JDQTlJR2tnTFNCME93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuWnBaWGNnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTUyYVdWM0xtVnVZV0pzWldRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0FvZEdocGN5NXlhV2RvZENBdElIUm9hWE11YkdWbWRDa2dMeUIwYUdsekxuWnBaWGN1Wm5Wc2JGZHBaSFJvSUM4Z2RHaHBjeTU2YjI5dExDQm9JRDBnS0hSb2FYTXVkRzl3SUMwZ2RHaHBjeTVpYjNSMGIyMHBJQzhnZEdocGN5NTJhV1YzTG1aMWJHeElaV2xuYUhRZ0x5QjBhR2x6TG5wdmIyMDdDaUFnSUNBZ0lDQWdJQ0FnSUhJZ0t6MGdZeUFxSUhSb2FYTXVkbWxsZHk1dlptWnpaWFJZTENCdklEMGdjaUFySUdNZ0tpQjBhR2x6TG5acFpYY3VkMmxrZEdnc0lHRWdMVDBnYUNBcUlIUm9hWE11ZG1sbGR5NXZabVp6WlhSWkxDQnNJRDBnWVNBdElHZ2dLaUIwYUdsekxuWnBaWGN1YUdWcFoyaDBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuQnliMnBsWTNScGIyNU5ZWFJ5YVhndWJXRnJaVTl5ZEdodlozSmhjR2hwWXloeUxDQnZMQ0JoTENCc0xDQjBhR2x6TG01bFlYSXNJSFJvYVhNdVptRnlLU3dnZEdocGN5NXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLSFJvYVhNdWNISnZhbVZqZEdsdmJrMWhkSEpwZUNrdWFXNTJaWEowS0NrN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdjM1Z3WlhJdWRHOUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtOWlhbVZqZEM1NmIyOXRJRDBnZEdocGN5NTZiMjl0TENCMExtOWlhbVZqZEM1c1pXWjBJRDBnZEdocGN5NXNaV1owTENCMExtOWlhbVZqZEM1eWFXZG9kQ0E5SUhSb2FYTXVjbWxuYUhRc0lIUXViMkpxWldOMExuUnZjQ0E5SUhSb2FYTXVkRzl3TENCMExtOWlhbVZqZEM1aWIzUjBiMjBnUFNCMGFHbHpMbUp2ZEhSdmJTd2dkQzV2WW1wbFkzUXVibVZoY2lBOUlIUm9hWE11Ym1WaGNpd2dkQzV2WW1wbFkzUXVabUZ5SUQwZ2RHaHBjeTVtWVhJc0lIUm9hWE11ZG1sbGR5QWhQVDBnYm5Wc2JDQW1KaUFvZEM1dlltcGxZM1F1ZG1sbGR5QTlJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJSFJvYVhNdWRtbGxkeWtwTENCME93b2dJQ0FnZlFwOU93cEdjaTV3Y205MGIzUjVjR1V1YVhOUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FZ1BTQWhNRHNLZG1GeUlFZHBJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnpiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVbUYzVTJoaFpHVnlUV0YwWlhKcFlXd2lPd29nSUNBZ2ZRcDlPd3BIYVM1d2NtOTBiM1I1Y0dVdWFYTlNZWGRUYUdGa1pYSk5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdSV2tnUFNBMExDQk5iaUE5SURnc0lGWjBJRDBnVFdGMGFDNXdiM2NvTWl3Z1RXNHBMQ0J6YUNBOUlGc0tJQ0FnSUM0eE1qVXNDaUFnSUNBdU1qRTFMQW9nSUNBZ0xqTTFMQW9nSUNBZ0xqUTBOaXdLSUNBZ0lDNDFNallzQ2lBZ0lDQXVOVGd5Q2wwc0lHOW9JRDBnVFc0Z0xTQkZhU0FySURFZ0t5QnphQzVzWlc1bmRHZ3NJSEJwSUQwZ01qQXNJRWh6SUQwZ2V3b2dJQ0FnVzA1MFhUb2dNQ3dLSUNBZ0lGdFBhVjA2SURFS2ZTd2dSMjhnUFNCdVpYY2dSbklzSUhzZ1gyeHZaRkJzWVc1bGN6b2dhbWtnTENCZmMybDZaVXh2WkhNNklFeHNJQ3dnWDNOcFoyMWhjem9nYkhNZ0lIMGdQU0JhYlNncExDQlNiQ0E5SUc1bGR5QmhaU3dnVm04Z1BTQnVkV3hzTENCUGJpQTlJQ2d4SUNzZ1RXRjBhQzV6Y1hKMEtEVXBLU0F2SURJc0lHMXBJRDBnTVNBdklFOXVMQ0JRYkNBOUlGc0tJQ0FnSUc1bGR5Qk5LREVzSURFc0lERXBMQW9nSUNBZ2JtVjNJRTBvTFRFc0lERXNJREVwTEFvZ0lDQWdibVYzSUUwb01Td2dNU3dnTFRFcExBb2dJQ0FnYm1WM0lFMG9MVEVzSURFc0lDMHhLU3dLSUNBZ0lHNWxkeUJOS0RBc0lFOXVMQ0J0YVNrc0NpQWdJQ0J1WlhjZ1RTZ3dMQ0JQYml3Z0xXMXBLU3dLSUNBZ0lHNWxkeUJOS0cxcExDQXdMQ0JQYmlrc0NpQWdJQ0J1WlhjZ1RTZ3RiV2tzSURBc0lFOXVLU3dLSUNBZ0lHNWxkeUJOS0U5dUxDQnRhU3dnTUNrc0NpQWdJQ0J1WlhjZ1RTZ3RUMjRzSUcxcExDQXdLUXBkTENCaGFDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSFJvYVhNdVgzSmxibVJsY21WeUlEMGdaU3dnZEdocGN5NWZjR2x1WjFCdmJtZFNaVzVrWlhKVVlYSm5aWFFnUFNCdWRXeHNMQ0IwYUdsekxsOWliSFZ5VFdGMFpYSnBZV3dnUFNBa2JTaHdhU2tzSUhSb2FYTXVYMlZ4ZFdseVpXTjBVMmhoWkdWeUlEMGdiblZzYkN3Z2RHaHBjeTVmWTNWaVpXMWhjRk5vWVdSbGNpQTlJRzUxYkd3c0lIUm9hWE11WDJOdmJYQnBiR1ZOWVhSbGNtbGhiQ2gwYUdsekxsOWliSFZ5VFdGMFpYSnBZV3dwT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVk5qWlc1bEtHVXNJSFFnUFNBd0xDQnVJRDBnTGpFc0lHa2dQU0F4TURBcElIc0tJQ0FnSUNBZ0lDQldieUE5SUhSb2FYTXVYM0psYm1SbGNtVnlMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1ZllXeHNiMk5oZEdWVVlYSm5aWFJ6S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM05qWlc1bFZHOURkV0psVlZZb1pTd2diaXdnYVN3Z2Npa3NJSFFnUGlBd0lDWW1JSFJvYVhNdVgySnNkWElvY2l3Z01Dd2dNQ3dnZENrc0lIUm9hWE11WDJGd2NHeDVVRTFTUlUwb2Npa3NJSFJvYVhNdVgyTnNaV0Z1ZFhBb2Npa3NJSEk3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRSWEYxYVhKbFkzUmhibWQxYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlpuSnZiVlJsZUhSMWNtVW9aU2s3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRM1ZpWlcxaGNDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyWnliMjFVWlhoMGRYSmxLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXRjR2xzWlVOMVltVnRZWEJUYUdGa1pYSW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZZM1ZpWlcxaGNGTm9ZV1JsY2lBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaUE5SUVac0tDa3NJSFJvYVhNdVgyTnZiWEJwYkdWTllYUmxjbWxoYkNoMGFHbHpMbDlqZFdKbGJXRndVMmhoWkdWeUtTazdDaUFnSUNCOUNpQWdJQ0JqYjIxd2FXeGxSWEYxYVhKbFkzUmhibWQxYkdGeVUyaGhaR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDJWeGRXbHlaV04wVTJoaFpHVnlJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpQTlJRVJzS0Nrc0lIUm9hWE11WDJOdmJYQnBiR1ZOWVhSbGNtbGhiQ2gwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lrcE93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOWliSFZ5VFdGMFpYSnBZV3d1WkdsemNHOXpaU2dwTENCMGFHbHpMbDlqZFdKbGJXRndVMmhoWkdWeUlDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdVgyTjFZbVZ0WVhCVGFHRmtaWEl1WkdsemNHOXpaU2dwTENCMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpQWhQVDBnYm5Wc2JDQW1KaUIwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2k1a2FYTndiM05sS0NrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbElEMGdNRHNnWlNBOElHcHBMbXhsYm1kMGFEc2daU3NyS1dwcFcyVmRMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUY5amJHVmhiblZ3S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5d2FXNW5VRzl1WjFKbGJtUmxjbFJoY21kbGRDNWthWE53YjNObEtDa3NJSFJvYVhNdVgzSmxibVJsY21WeUxuTmxkRkpsYm1SbGNsUmhjbWRsZENoV2J5a3NJR1V1YzJOcGMzTnZjbFJsYzNRZ1BTQWhNU3dnWTNNb1pTd2dNQ3dnTUN3Z1pTNTNhV1IwYUN3Z1pTNW9aV2xuYUhRcE93b2dJQ0FnZlFvZ0lDQWdYMlp5YjIxVVpYaDBkWEpsS0dVcElIc0tJQ0FnSUNBZ0lDQldieUE5SUhSb2FYTXVYM0psYm1SbGNtVnlMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZllXeHNiMk5oZEdWVVlYSm5aWFJ6S0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkwWlhoMGRYSmxWRzlEZFdKbFZWWW9aU3dnZENrc0lIUm9hWE11WDJGd2NHeDVVRTFTUlUwb2RDa3NJSFJvYVhNdVgyTnNaV0Z1ZFhBb2RDa3NJSFE3Q2lBZ0lDQjlDaUFnSUNCZllXeHNiMk5oZEdWVVlYSm5aWFJ6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYldGblJtbHNkR1Z5T2lCMGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnYldsdVJtbHNkR1Z5T2lCMGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkR1ZOYVhCdFlYQnpPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2EyNHNDaUFnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nWTNRc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WTI5a2FXNW5PaUJPZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoQ2RXWm1aWEk2SUNFeENpQWdJQ0FnSUNBZ2ZTd2diaUE5SUVsc0tIUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbVJsY0hSb1FuVm1abVZ5SUQwZ0lXVXNJSFJvYVhNdVgzQnBibWRRYjI1blVtVnVaR1Z5VkdGeVoyVjBJRDBnU1d3b2RDa3NJRzQ3Q2lBZ0lDQjlDaUFnSUNCZlkyOXRjR2xzWlUxaGRHVnlhV0ZzS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHNWxkeUJ6ZENocWFWc3dYU3dnWlNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmY21WdVpHVnlaWEl1WTI5dGNHbHNaU2gwTENCSGJ5azdDaUFnSUNCOUNpQWdJQ0JmYzJObGJtVlViME4xWW1WVlZpaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1WlhjZ2RYUW9PVEFzSURFc0lIUXNJRzRwTENCc0lEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNUW9nSUNBZ0lDQWdJRjBzSUdNZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVLSUNBZ0lDQWdJQ0JkTENCb0lEMGdkR2hwY3k1ZmNtVnVaR1Z5WlhJc0lIVWdQU0JvTG1GMWRHOURiR1ZoY2l3Z1pDQTlJR2d1ZEc5dVpVMWhjSEJwYm1jN0NpQWdJQ0FnSUNBZ2FDNW5aWFJEYkdWaGNrTnZiRzl5S0ZKc0tTd2dhQzUwYjI1bFRXRndjR2x1WnlBOUlGOXVMQ0JvTG1GMWRHOURiR1ZoY2lBOUlDRXhPd29nSUNBZ0lDQWdJR3hsZENCbUlEMGdibVYzSUdodUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1GdFpUb2dJbEJOVWtWTkxrSmhZMnRuY205MWJtUWlMQW9nSUNBZ0lDQWdJQ0FnSUNCemFXUmxPaUJwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb1ZHVnpkRG9nSVRFS0lDQWdJQ0FnSUNCOUtTd2diU0E5SUc1bGR5QnpkQ2h1WlhjZ2QyNHNJR1lwTENCNElEMGdJVEVzSUhZZ1BTQmxMbUpoWTJ0bmNtOTFibVE3Q2lBZ0lDQWdJQ0FnZGlBL0lIWXVhWE5EYjJ4dmNpQW1KaUFvWmk1amIyeHZjaTVqYjNCNUtIWXBMQ0JsTG1KaFkydG5jbTkxYm1RZ1BTQnVkV3hzTENCNElEMGdJVEFwSURvZ0tHWXVZMjlzYjNJdVkyOXdlU2hTYkNrc0lIZ2dQU0FoTUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbklEMGdNRHNnWnlBOElEWTdJR2NyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdaeUFsSURNN0NpQWdJQ0FnSUNBZ0lDQWdJSEFnUFQwZ01DQS9JQ2hoTG5Wd0xuTmxkQ2d3TENCc1cyZGRMQ0F3S1N3Z1lTNXNiMjlyUVhRb1kxdG5YU3dnTUN3Z01Da3BJRG9nY0NBOVBTQXhJRDhnS0dFdWRYQXVjMlYwS0RBc0lEQXNJR3hiWjEwcExDQmhMbXh2YjJ0QmRDZ3dMQ0JqVzJkZExDQXdLU2tnT2lBb1lTNTFjQzV6WlhRb01Dd2diRnRuWFN3Z01Da3NJR0V1Ykc5dmEwRjBLREFzSURBc0lHTmJaMTBwS1N3Z1kzTW9hU3dnY0NBcUlGWjBMQ0JuSUQ0Z01pQS9JRlowSURvZ01Dd2dWblFzSUZaMEtTd2dhQzV6WlhSU1pXNWtaWEpVWVhKblpYUW9hU2tzSUhnZ0ppWWdhQzV5Wlc1a1pYSW9iU3dnWVNrc0lHZ3VjbVZ1WkdWeUtHVXNJR0VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCdExtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2diUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2tzSUdndWRHOXVaVTFoY0hCcGJtY2dQU0JrTENCb0xtRjFkRzlEYkdWaGNpQTlJSFVzSUdVdVltRmphMmR5YjNWdVpDQTlJSFk3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBSVzVqYjJScGJtY29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WDNKbGJtUmxjbVZ5TG1OaGNHRmlhV3hwZEdsbGN5NXBjMWRsWWtkTU1pQTlQVDBnSVRBZ0ppWWdkQzVtYjNKdFlYUWdQVDA5SUdOMElDWW1JSFF1ZEhsd1pTQTlQVDBnY200Z0ppWWdkQzVsYm1OdlpHbHVaeUE5UFQwZ1Qya2dQeUJsTG5aaGJIVmxJRDBnU0hOYlRuUmRJRG9nWlM1MllXeDFaU0E5SUVoelczUXVaVzVqYjJScGJtZGRPd29nSUNBZ2ZRb2dJQ0FnWDNSbGVIUjFjbVZVYjBOMVltVlZWaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TGw5eVpXNWtaWEpsY2l3Z2FTQTlJR1V1YldGd2NHbHVaeUE5UFQwZ1Fta2dmSHdnWlM1dFlYQndhVzVuSUQwOVBTQjZhVHNLSUNBZ0lDQWdJQ0JwSUQ4Z2RHaHBjeTVmWTNWaVpXMWhjRk5vWVdSbGNpQTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOWpkV0psYldGd1UyaGhaR1Z5SUQwZ1Jtd29LU2tnT2lCMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpQTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2lBOUlFUnNLQ2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVNBL0lIUm9hWE11WDJOMVltVnRZWEJUYUdGa1pYSWdPaUIwYUdsekxsOWxjWFZwY21WamRGTm9ZV1JsY2l3Z2J5QTlJRzVsZHlCemRDaHFhVnN3WFN3Z2Npa3NJR0VnUFNCeUxuVnVhV1p2Y20xek93b2dJQ0FnSUNBZ0lHRXVaVzUyVFdGd0xuWmhiSFZsSUQwZ1pTd2dhU0I4ZkNCaExuUmxlR1ZzVTJsNlpTNTJZV3gxWlM1elpYUW9NU0F2SUdVdWFXMWhaMlV1ZDJsa2RHZ3NJREVnTHlCbExtbHRZV2RsTG1obGFXZG9kQ2tzSUhSb2FYTXVYM05sZEVWdVkyOWthVzVuS0dFdWFXNXdkWFJGYm1OdlpHbHVaeXdnWlNrc0lHTnpLSFFzSURBc0lEQXNJRE1nS2lCV2RDd2dNaUFxSUZaMEtTd2diaTV6WlhSU1pXNWtaWEpVWVhKblpYUW9kQ2tzSUc0dWNtVnVaR1Z5S0c4c0lFZHZLVHNLSUNBZ0lIMEtJQ0FnSUY5aGNIQnNlVkJOVWtWTktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVgzSmxibVJsY21WeUxDQnVJRDBnZEM1aGRYUnZRMnhsWVhJN0NpQWdJQ0FnSUNBZ2RDNWhkWFJ2UTJ4bFlYSWdQU0FoTVRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXhPeUJwSUR3Z2IyZzdJR2tyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdUV0YwYUM1emNYSjBLR3h6VzJsZElDb2diSE5iYVYwZ0xTQnNjMXRwSUMwZ01WMGdLaUJzYzF0cElDMGdNVjBwTENCdklEMGdVR3hiS0drZ0xTQXhLU0FsSUZCc0xteGxibWQwYUYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgySnNkWElvWlN3Z2FTQXRJREVzSUdrc0lISXNJRzhwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtRjFkRzlEYkdWaGNpQTlJRzQ3Q2lBZ0lDQjlDaUFnSUNCZllteDFjaWhsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TGw5d2FXNW5VRzl1WjFKbGJtUmxjbFJoY21kbGREc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5b1lXeG1RbXgxY2lobExDQnZMQ0IwTENCdUxDQnBMQ0FpYkdGMGFYUjFaR2x1WVd3aUxDQnlLU3dnZEdocGN5NWZhR0ZzWmtKc2RYSW9ieXdnWlN3Z2Jpd2diaXdnYVN3Z0lteHZibWRwZEhWa2FXNWhiQ0lzSUhJcE93b2dJQ0FnZlFvZ0lDQWdYMmhoYkdaQ2JIVnlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhSb2FYTXVYM0psYm1SbGNtVnlMQ0JqSUQwZ2RHaHBjeTVmWW14MWNrMWhkR1Z5YVdGc093b2dJQ0FnSUNBZ0lHOGdJVDA5SUNKc1lYUnBkSFZrYVc1aGJDSWdKaVlnYnlBaFBUMGdJbXh2Ym1kcGRIVmthVzVoYkNJZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVlteDFjaUJrYVhKbFkzUnBiMjRnYlhWemRDQmlaU0JsYVhSb1pYSWdiR0YwYVhSMVpHbHVZV3dnYjNJZ2JHOXVaMmwwZFdScGJtRnNJU0lwT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnTXl3Z2RTQTlJRzVsZHlCemRDaHFhVnRwWFN3Z1l5a3NJR1FnUFNCakxuVnVhV1p2Y20xekxDQm1JRDBnVEd4YmJsMGdMU0F4TENCdElEMGdhWE5HYVc1cGRHVW9jaWtnUHlCTllYUm9MbEJKSUM4Z0tESWdLaUJtS1NBNklESWdLaUJOWVhSb0xsQkpJQzhnS0RJZ0tpQndhU0F0SURFcExDQjRJRDBnY2lBdklHMHNJSFlnUFNCcGMwWnBibWwwWlNoeUtTQS9JREVnS3lCTllYUm9MbVpzYjI5eUtHZ2dLaUI0S1NBNklIQnBPd29nSUNBZ0lDQWdJSFlnUGlCd2FTQW1KaUJqYjI1emIyeGxMbmRoY200b1lITnBaMjFoVW1Ga2FXRnVjeXdnSkh0eWZTd2dhWE1nZEc5dklHeGhjbWRsSUdGdVpDQjNhV3hzSUdOc2FYQXNJR0Z6SUdsMElISmxjWFZsYzNSbFpDQWtlM1o5SUhOaGJYQnNaWE1nZDJobGJpQjBhR1VnYldGNGFXMTFiU0JwY3lCelpYUWdkRzhnSkh0d2FYMWdLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJRnRkTENCd0lEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUVnUFNBd095QkJJRHdnY0drN0lDc3JRU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ1FTQXZJSGdzSUVrZ1BTQk5ZWFJvTG1WNGNDZ3RUQ0FxSUV3Z0x5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1p5NXdkWE5vS0VrcExDQkJJRDA5SURBZ1B5QndJQ3M5SUVrZ09pQkJJRHdnZGlBbUppQW9jQ0FyUFNBeUlDb2dTU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUVRFZ1BTQXdPeUJCTVNBOElHY3ViR1Z1WjNSb095QkJNU3NyS1dkYlFURmRJRDBnWjF0Qk1WMGdMeUJ3T3dvZ0lDQWdJQ0FnSUdRdVpXNTJUV0Z3TG5aaGJIVmxJRDBnWlM1MFpYaDBkWEpsTENCa0xuTmhiWEJzWlhNdWRtRnNkV1VnUFNCMkxDQmtMbmRsYVdkb2RITXVkbUZzZFdVZ1BTQm5MQ0JrTG14aGRHbDBkV1JwYm1Gc0xuWmhiSFZsSUQwZ2J5QTlQVDBnSW14aGRHbDBkV1JwYm1Gc0lpd2dZU0FtSmlBb1pDNXdiMnhsUVhocGN5NTJZV3gxWlNBOUlHRXBMQ0JrTG1SVWFHVjBZUzUyWVd4MVpTQTlJRzBzSUdRdWJXbHdTVzUwTG5aaGJIVmxJRDBnVFc0Z0xTQnVPd29nSUNBZ0lDQWdJR3hsZENCZklEMGdUR3hiYVYwc0lIa2dQU0F6SUNvZ1RXRjBhQzV0WVhnb01Dd2dWblFnTFNBeUlDb2dYeWtzSUdJZ1BTQW9hU0E5UFQwZ01DQS9JREFnT2lBeUlDb2dWblFwSUNzZ01pQXFJRjhnS2lBb2FTQStJRTF1SUMwZ1JXa2dQeUJwSUMwZ1RXNGdLeUJGYVNBNklEQXBPd29nSUNBZ0lDQWdJR056S0hRc0lIa3NJR0lzSURNZ0tpQmZMQ0F5SUNvZ1h5a3NJR3d1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSFFwTENCc0xuSmxibVJsY2loMUxDQkhieWs3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUZwdEtDa2dld29nSUNBZ2JHVjBJSE1nUFNCYlhTd2daU0E5SUZ0ZExDQjBJRDBnVzEwc0lHNGdQU0JOYmpzS0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0J2YURzZ2FTc3JLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRTFoZEdndWNHOTNLRElzSUc0cE93b2dJQ0FnSUNBZ0lHVXVjSFZ6YUNoeUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlERWdMeUJ5T3dvZ0lDQWdJQ0FnSUdrZ1BpQk5iaUF0SUVWcElEOGdieUE5SUhOb1cya2dMU0JOYmlBcklFVnBJQzBnTVYwZ09pQnBJRDA5SURBZ0ppWWdLRzhnUFNBd0tTd2dkQzV3ZFhOb0tHOHBPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdNU0F2SUNoeUlDMGdNU2tzSUd3Z1BTQXRZU0F2SURJc0lHTWdQU0F4SUNzZ1lTQXZJRElzSUdnZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTXNDaUFnSUNBZ0lDQWdJQ0FnSUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHTXNDaUFnSUNBZ0lDQWdJQ0FnSUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTXNDaUFnSUNBZ0lDQWdJQ0FnSUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTUtJQ0FnSUNBZ0lDQmRMQ0IxSUQwZ05pd2daQ0E5SURZc0lHWWdQU0F6TENCdElEMGdNaXdnZUNBOUlERXNJSFlnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0dZZ0tpQmtJQ29nZFNrc0lHY2dQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRzBnS2lCa0lDb2dkU2tzSUhBZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtIZ2dLaUJrSUNvZ2RTazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjVJRDBnTURzZ2VTQThJSFU3SUhrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnZVNBbElETWdLaUF5SUM4Z015QXRJREVzSUVFZ1BTQjVJRDRnTWlBL0lEQWdPaUF0TVN3Z1RDQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JCTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJZ0t5QXlJQzhnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpQXJJRElnTHlBekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FTQXJJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpQXJJRElnTHlBekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FTQXJJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFZ0t5QXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQW9nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0IyTG5ObGRDaE1MQ0JtSUNvZ1pDQXFJSGtwTENCbkxuTmxkQ2hvTENCdElDb2daQ0FxSUhrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NTQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VRb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQndMbk5sZENoSkxDQjRJQ29nWkNBcUlIa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQmZMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnVldVb2Rpd2daaWtwTENCZkxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnVldVb1p5d2diU2twTENCZkxuTmxkRUYwZEhKcFluVjBaU2dpWm1GalpVbHVaR1Y0SWl3Z2JtVjNJRlZsS0hBc0lIZ3BLU3dnY3k1d2RYTm9LRjhwTENCdUlENGdSV2tnSmlZZ2JpMHRPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JmYkc5a1VHeGhibVZ6T2lCekxBb2dJQ0FnSUNBZ0lGOXphWHBsVEc5a2N6b2daU3dLSUNBZ0lDQWdJQ0JmYzJsbmJXRnpPaUIwQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUVsc0tITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2JtVjNJRUYwS0RNZ0tpQldkQ3dnTXlBcUlGWjBMQ0J6S1RzS0lDQWdJSEpsZEhWeWJpQmxMblJsZUhSMWNtVXViV0Z3Y0dsdVp5QTlJRkJ5TENCbExuUmxlSFIxY21VdWJtRnRaU0E5SUNKUVRWSkZUUzVqZFdKbFZYWWlMQ0JsTG5OamFYTnpiM0pVWlhOMElEMGdJVEFzSUdVN0NuMEtablZ1WTNScGIyNGdZM01vY3l3Z1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ2N5NTJhV1YzY0c5eWRDNXpaWFFvWlN3Z2RDd2diaXdnYVNrc0lITXVjMk5wYzNOdmNpNXpaWFFvWlN3Z2RDd2diaXdnYVNrN0NuMEtablZ1WTNScGIyNGdKRzBvY3lrZ2V3b2dJQ0FnYkdWMElHVWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLSE1wTENCMElEMGdibVYzSUUwb01Dd2dNU3dnTUNrN0NpQWdJQ0J5WlhSMWNtNGdibVYzSUVkcEtIc0tJQ0FnSUNBZ0lDQnVZVzFsT2lBaVUzQm9aWEpwWTJGc1IyRjFjM05wWVc1Q2JIVnlJaXdLSUNBZ0lDQWdJQ0JrWldacGJtVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNDZJSE1LSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJGdGNHeGxjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnZDJWcFoyaDBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR1VLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYkdGMGFYUjFaR2x1WVd3NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBaE1Rb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtWR2hsZEdFNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXBjRWx1ZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXNaVUY0YVhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCMENpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dabUVvS1N3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nWUFvS0NRa0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdabXh2WVhRN0Nna0pDWEJ5WldOcGMybHZiaUJ0WldScGRXMXdJR2x1ZERzS0Nna0pDWFpoY25scGJtY2dkbVZqTXlCMlQzVjBjSFYwUkdseVpXTjBhVzl1T3dvS0NRa0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaVzUyVFdGd093b0pDUWwxYm1sbWIzSnRJR2x1ZENCellXMXdiR1Z6T3dvSkNRbDFibWxtYjNKdElHWnNiMkYwSUhkbGFXZG9kSE5iSUc0Z1hUc0tDUWtKZFc1cFptOXliU0JpYjI5c0lHeGhkR2wwZFdScGJtRnNPd29KQ1FsMWJtbG1iM0p0SUdac2IyRjBJR1JVYUdWMFlUc0tDUWtKZFc1cFptOXliU0JtYkc5aGRDQnRhWEJKYm5RN0Nna0pDWFZ1YVdadmNtMGdkbVZqTXlCd2IyeGxRWGhwY3pzS0Nna0pDU1I3Y0dFb0tYMEtDZ2tKQ1NOa1pXWnBibVVnUlU1V1RVRlFYMVJaVUVWZlExVkNSVjlWVmdvSkNRa2phVzVqYkhWa1pTQThZM1ZpWlY5MWRsOXlaV1pzWldOMGFXOXVYMlp5WVdkdFpXNTBQZ29LQ1FrSmRtVmpNeUJuWlhSVFlXMXdiR1VvSUdac2IyRjBJSFJvWlhSaExDQjJaV016SUdGNGFYTWdLU0I3Q2dvSkNRa0pabXh2WVhRZ1kyOXpWR2hsZEdFZ1BTQmpiM01vSUhSb1pYUmhJQ2s3Q2drSkNRa3ZMeUJTYjJSeWFXZDFaWE1uSUdGNGFYTXRZVzVuYkdVZ2NtOTBZWFJwYjI0S0NRa0pDWFpsWXpNZ2MyRnRjR3hsUkdseVpXTjBhVzl1SUQwZ2RrOTFkSEIxZEVScGNtVmpkR2x2YmlBcUlHTnZjMVJvWlhSaENna0pDUWtKS3lCamNtOXpjeWdnWVhocGN5d2dkazkxZEhCMWRFUnBjbVZqZEdsdmJpQXBJQ29nYzJsdUtDQjBhR1YwWVNBcENna0pDUWtKS3lCaGVHbHpJQ29nWkc5MEtDQmhlR2x6TENCMlQzVjBjSFYwUkdseVpXTjBhVzl1SUNrZ0tpQW9JREV1TUNBdElHTnZjMVJvWlhSaElDazdDZ29KQ1FrSmNtVjBkWEp1SUdKcGJHbHVaV0Z5UTNWaVpWVldLQ0JsYm5aTllYQXNJSE5oYlhCc1pVUnBjbVZqZEdsdmJpd2diV2x3U1c1MElDazdDZ29KQ1FsOUNnb0pDUWwyYjJsa0lHMWhhVzRvS1NCN0Nnb0pDUWtKZG1Wak15QmhlR2x6SUQwZ2JHRjBhWFIxWkdsdVlXd2dQeUJ3YjJ4bFFYaHBjeUE2SUdOeWIzTnpLQ0J3YjJ4bFFYaHBjeXdnZGs5MWRIQjFkRVJwY21WamRHbHZiaUFwT3dvS0NRa0pDV2xtSUNnZ1lXeHNLQ0JsY1hWaGJDZ2dZWGhwY3l3Z2RtVmpNeWdnTUM0d0lDa2dLU0FwSUNrZ2V3b0tDUWtKQ1FsaGVHbHpJRDBnZG1Wak15Z2dkazkxZEhCMWRFUnBjbVZqZEdsdmJpNTZMQ0F3TGpBc0lDMGdkazkxZEhCMWRFUnBjbVZqZEdsdmJpNTRJQ2s3Q2dvSkNRa0pmUW9LQ1FrSkNXRjRhWE1nUFNCdWIzSnRZV3hwZW1Vb0lHRjRhWE1nS1RzS0Nna0pDUWxuYkY5R2NtRm5RMjlzYjNJZ1BTQjJaV00wS0NBd0xqQXNJREF1TUN3Z01DNHdMQ0F4TGpBZ0tUc0tDUWtKQ1dkc1gwWnlZV2REYjJ4dmNpNXlaMklnS3owZ2QyVnBaMmgwYzFzZ01DQmRJQ29nWjJWMFUyRnRjR3hsS0NBd0xqQXNJR0Y0YVhNZ0tUc0tDZ2tKQ1FsbWIzSWdLQ0JwYm5RZ2FTQTlJREU3SUdrZ1BDQnVPeUJwS3lzZ0tTQjdDZ29KQ1FrSkNXbG1JQ2dnYVNBK1BTQnpZVzF3YkdWeklDa2dld29LQ1FrSkNRa0pZbkpsWVdzN0Nnb0pDUWtKQ1gwS0Nna0pDUWtKWm14dllYUWdkR2hsZEdFZ1BTQmtWR2hsZEdFZ0tpQm1iRzloZENnZ2FTQXBPd29KQ1FrSkNXZHNYMFp5WVdkRGIyeHZjaTV5WjJJZ0t6MGdkMlZwWjJoMGMxc2dhU0JkSUNvZ1oyVjBVMkZ0Y0d4bEtDQXRNUzR3SUNvZ2RHaGxkR0VzSUdGNGFYTWdLVHNLQ1FrSkNRbG5iRjlHY21GblEyOXNiM0l1Y21kaUlDczlJSGRsYVdkb2RITmJJR2tnWFNBcUlHZGxkRk5oYlhCc1pTZ2dkR2hsZEdFc0lHRjRhWE1nS1RzS0Nna0pDUWw5Q2dvSkNRbDlDZ2tKWUN3S0lDQWdJQ0FnSUNCaWJHVnVaR2x1WnpvZ2RtNHNDaUFnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNCa1pYQjBhRmR5YVhSbE9pQWhNUW9nSUNBZ2ZTazdDbjBLWm5WdVkzUnBiMjRnUkd3b0tTQjdDaUFnSUNCc1pYUWdjeUE5SUc1bGR5QllLREVzSURFcE93b2dJQ0FnY21WMGRYSnVJRzVsZHlCSGFTaDdDaUFnSUNBZ0lDQWdibUZ0WlRvZ0lrVnhkV2x5WldOMFlXNW5kV3hoY2xSdlEzVmlaVlZXSWl3S0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsYm5aTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhSbGVHVnNVMmw2WlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUhNS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNXdkWFJGYm1OdlpHbHVaem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRWh6VzA1MFhRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJR1poS0Nrc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUdBS0Nna0pDWEJ5WldOcGMybHZiaUJ0WldScGRXMXdJR1pzYjJGME93b0pDUWx3Y21WamFYTnBiMjRnYldWa2FYVnRjQ0JwYm5RN0Nnb0pDUWwyWVhKNWFXNW5JSFpsWXpNZ2RrOTFkSEIxZEVScGNtVmpkR2x2YmpzS0Nna0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJR1Z1ZGsxaGNEc0tDUWtKZFc1cFptOXliU0IyWldNeUlIUmxlR1ZzVTJsNlpUc0tDZ2tKQ1NSN2NHRW9LWDBLQ2drSkNTTnBibU5zZFdSbElEeGpiMjF0YjI0K0Nnb0pDUWwyYjJsa0lHMWhhVzRvS1NCN0Nnb0pDUWtKWjJ4ZlJuSmhaME52Ykc5eUlEMGdkbVZqTkNnZ01DNHdMQ0F3TGpBc0lEQXVNQ3dnTVM0d0lDazdDZ29KQ1FrSmRtVmpNeUJ2ZFhSd2RYUkVhWEpsWTNScGIyNGdQU0J1YjNKdFlXeHBlbVVvSUhaUGRYUndkWFJFYVhKbFkzUnBiMjRnS1RzS0NRa0pDWFpsWXpJZ2RYWWdQU0JsY1hWcGNtVmpkRlYyS0NCdmRYUndkWFJFYVhKbFkzUnBiMjRnS1RzS0Nna0pDUWwyWldNeUlHWWdQU0JtY21GamRDZ2dkWFlnTHlCMFpYaGxiRk5wZW1VZ0xTQXdMalVnS1RzS0NRa0pDWFYySUMwOUlHWWdLaUIwWlhobGJGTnBlbVU3Q2drSkNRbDJaV016SUhSc0lEMGdaVzUyVFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnZEdWNGRIVnlaVEpFSUNnZ1pXNTJUV0Z3TENCMWRpQXBJQ2t1Y21kaU93b0pDUWtKZFhZdWVDQXJQU0IwWlhobGJGTnBlbVV1ZURzS0NRa0pDWFpsWXpNZ2RISWdQU0JsYm5aTllYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCMFpYaDBkWEpsTWtRZ0tDQmxiblpOWVhBc0lIVjJJQ2tnS1M1eVoySTdDZ2tKQ1FsMWRpNTVJQ3M5SUhSbGVHVnNVMmw2WlM1NU93b0pDUWtKZG1Wak15QmljaUE5SUdWdWRrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lIUmxlSFIxY21VeVJDQW9JR1Z1ZGsxaGNDd2dkWFlnS1NBcExuSm5ZanNLQ1FrSkNYVjJMbmdnTFQwZ2RHVjRaV3hUYVhwbExuZzdDZ2tKQ1FsMlpXTXpJR0pzSUQwZ1pXNTJUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0ZEhWeVpUSkVJQ2dnWlc1MlRXRndMQ0IxZGlBcElDa3VjbWRpT3dvS0NRa0pDWFpsWXpNZ2RHMGdQU0J0YVhnb0lIUnNMQ0IwY2l3Z1ppNTRJQ2s3Q2drSkNRbDJaV016SUdKdElEMGdiV2w0S0NCaWJDd2dZbklzSUdZdWVDQXBPd29KQ1FrSloyeGZSbkpoWjBOdmJHOXlMbkpuWWlBOUlHMXBlQ2dnZEcwc0lHSnRMQ0JtTG5rZ0tUc0tDZ2tKQ1gwS0NRbGdMQW9nSUNBZ0lDQWdJR0pzWlc1a2FXNW5PaUIyYml3S0lDQWdJQ0FnSUNCa1pYQjBhRlJsYzNRNklDRXhMQW9nSUNBZ0lDQWdJR1JsY0hSb1YzSnBkR1U2SUNFeENpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQkdiQ2dwSUhzS0lDQWdJSEpsZEhWeWJpQnVaWGNnUjJrb2V3b2dJQ0FnSUNBZ0lHNWhiV1U2SUNKRGRXSmxiV0Z3Vkc5RGRXSmxWVllpTEFvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1d2RYUkZibU52WkdsdVp6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklFaHpXMDUwWFFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklHWmhLQ2tzQ2lBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJR0FLQ2drSkNYQnlaV05wYzJsdmJpQnRaV1JwZFcxd0lHWnNiMkYwT3dvSkNRbHdjbVZqYVhOcGIyNGdiV1ZrYVhWdGNDQnBiblE3Q2dvSkNRbDJZWEo1YVc1bklIWmxZek1nZGs5MWRIQjFkRVJwY21WamRHbHZianNLQ2drSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2tOMVltVWdaVzUyVFdGd093b0tDUWtKSkh0d1lTZ3BmUW9LQ1FrSmRtOXBaQ0J0WVdsdUtDa2dld29LQ1FrSkNXZHNYMFp5WVdkRGIyeHZjaUE5SUdWdWRrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lIUmxlSFIxY21WRGRXSmxLQ0JsYm5aTllYQXNJSFpsWXpNb0lDMGdkazkxZEhCMWRFUnBjbVZqZEdsdmJpNTRMQ0IyVDNWMGNIVjBSR2x5WldOMGFXOXVMbmw2SUNrZ0tTQXBPd29LQ1FrSmZRb0pDV0FzQ2lBZ0lDQWdJQ0FnWW14bGJtUnBibWM2SUhadUxBb2dJQ0FnSUNBZ0lHUmxjSFJvVkdWemREb2dJVEVzQ2lBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURUtJQ0FnSUgwcE93cDlDbVoxYm1OMGFXOXVJR1poS0NrZ2V3b2dJQ0FnY21WMGRYSnVJR0FLQ2drSmNISmxZMmx6YVc5dUlHMWxaR2wxYlhBZ1pteHZZWFE3Q2drSmNISmxZMmx6YVc5dUlHMWxaR2wxYlhBZ2FXNTBPd29LQ1FsaGRIUnlhV0oxZEdVZ2RtVmpNeUJ3YjNOcGRHbHZianNLQ1FsaGRIUnlhV0oxZEdVZ2RtVmpNaUIxZGpzS0NRbGhkSFJ5YVdKMWRHVWdabXh2WVhRZ1ptRmpaVWx1WkdWNE93b0tDUWwyWVhKNWFXNW5JSFpsWXpNZ2RrOTFkSEIxZEVScGNtVmpkR2x2YmpzS0Nna0pMeThnVWtnZ1kyOXZjbVJwYm1GMFpTQnplWE4wWlcwN0lGQk5Va1ZOSUdaaFkyVXRhVzVrWlhocGJtY2dZMjl1ZG1WdWRHbHZiZ29KQ1habFl6TWdaMlYwUkdseVpXTjBhVzl1S0NCMlpXTXlJSFYyTENCbWJHOWhkQ0JtWVdObElDa2dld29LQ1FrSmRYWWdQU0F5TGpBZ0tpQjFkaUF0SURFdU1Ec0tDZ2tKQ1habFl6TWdaR2x5WldOMGFXOXVJRDBnZG1Wak15Z2dkWFlzSURFdU1DQXBPd29LQ1FrSmFXWWdLQ0JtWVdObElEMDlJREF1TUNBcElIc0tDZ2tKQ1Fsa2FYSmxZM1JwYjI0Z1BTQmthWEpsWTNScGIyNHVlbmw0T3lBdkx5QW9JREVzSUhZc0lIVWdLU0J3YjNNZ2VBb0tDUWtKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBeExqQWdLU0I3Q2dvSkNRa0paR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1TG5oNmVUc0tDUWtKQ1dScGNtVmpkR2x2Ymk1NGVpQXFQU0F0TVM0d095QXZMeUFvSUMxMUxDQXhMQ0F0ZGlBcElIQnZjeUI1Q2dvSkNRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJREl1TUNBcElIc0tDZ2tKQ1Fsa2FYSmxZM1JwYjI0dWVDQXFQU0F0TVM0d095QXZMeUFvSUMxMUxDQjJMQ0F4SUNrZ2NHOXpJSG9LQ2drSkNYMGdaV3h6WlNCcFppQW9JR1poWTJVZ1BUMGdNeTR3SUNrZ2V3b0tDUWtKQ1dScGNtVmpkR2x2YmlBOUlHUnBjbVZqZEdsdmJpNTZlWGc3Q2drSkNRbGthWEpsWTNScGIyNHVlSG9nS2owZ0xURXVNRHNnTHk4Z0tDQXRNU3dnZGl3Z0xYVWdLU0J1WldjZ2VBb0tDUWtKZlNCbGJITmxJR2xtSUNnZ1ptRmpaU0E5UFNBMExqQWdLU0I3Q2dvSkNRa0paR2x5WldOMGFXOXVJRDBnWkdseVpXTjBhVzl1TG5oNmVUc0tDUWtKQ1dScGNtVmpkR2x2Ymk1NGVTQXFQU0F0TVM0d095QXZMeUFvSUMxMUxDQXRNU3dnZGlBcElHNWxaeUI1Q2dvSkNRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJRFV1TUNBcElIc0tDZ2tKQ1Fsa2FYSmxZM1JwYjI0dWVpQXFQU0F0TVM0d095QXZMeUFvSUhVc0lIWXNJQzB4SUNrZ2JtVm5JSG9LQ2drSkNYMEtDZ2tKQ1hKbGRIVnliaUJrYVhKbFkzUnBiMjQ3Q2dvSkNYMEtDZ2tKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKZGs5MWRIQjFkRVJwY21WamRHbHZiaUE5SUdkbGRFUnBjbVZqZEdsdmJpZ2dkWFlzSUdaaFkyVkpibVJsZUNBcE93b0pDUWxuYkY5UWIzTnBkR2x2YmlBOUlIWmxZelFvSUhCdmMybDBhVzl1TENBeExqQWdLVHNLQ2drSmZRb0pZRHNLZlFwbWRXNWpkR2x2YmlCd1lTZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCZ0Nnb0pDWFZ1YVdadmNtMGdhVzUwSUdsdWNIVjBSVzVqYjJScGJtYzdDZ29KQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZmNHRnljMTltY21GbmJXVnVkRDRLQ2drSmRtVmpOQ0JwYm5CMWRGUmxlR1ZzVkc5TWFXNWxZWElvSUhabFl6UWdkbUZzZFdVZ0tTQjdDZ29KQ1FscFppQW9JR2x1Y0hWMFJXNWpiMlJwYm1jZ1BUMGdNQ0FwSUhzS0Nna0pDUWx5WlhSMWNtNGdkbUZzZFdVN0Nnb0pDUWw5SUdWc2MyVWdld29LQ1FrSkNYSmxkSFZ5YmlCelVrZENWRzlNYVc1bFlYSW9JSFpoYkhWbElDazdDZ29KQ1FsOUNnb0pDWDBLQ2drSmRtVmpOQ0JsYm5aTllYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCMlpXTTBJR052Ykc5eUlDa2dld29LQ1FrSmNtVjBkWEp1SUdsdWNIVjBWR1Y0Wld4VWIweHBibVZoY2lnZ1kyOXNiM0lnS1RzS0Nna0pmUW9KWURzS2ZRcG1kVzVqZEdsdmJpQnFiU2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJRzVsZHlCWFpXRnJUV0Z3TENCMElEMGdiblZzYkRzS0lDQWdJR1oxYm1OMGFXOXVJRzRvWVNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hoSUNZbUlHRXVhWE5VWlhoMGRYSmxJQ1ltSUdFdWFYTlNaVzVrWlhKVVlYSm5aWFJVWlhoMGRYSmxJRDA5UFNBaE1Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdFdWJXRndjR2x1Wnl3Z1l5QTlJR3dnUFQwOUlFUnpJSHg4SUd3Z1BUMDlJRVp6TENCb0lEMGdiQ0E5UFQwZ1Fta2dmSHdnYkNBOVBUMGdlbWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqSUh4OElHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobExtaGhjeWhoS1NrZ2NtVjBkWEp1SUdVdVoyVjBLR0VwTG5SbGVIUjFjbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCaExtbHRZV2RsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqSUNZbUlIVWdKaVlnZFM1b1pXbG5hSFFnUGlBd0lIeDhJR2dnSmlZZ2RTQW1KaUJwS0hVcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2N5NW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlQVDBnYm5Wc2JDQW1KaUFvZENBOUlHNWxkeUJoYUNoektTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1l5QS9JSFF1Wm5KdmJVVnhkV2x5WldOMFlXNW5kV3hoY2loaEtTQTZJSFF1Wm5KdmJVTjFZbVZ0WVhBb1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuTmxkQ2hoTENCbUtTd2djeTV6WlhSU1pXNWtaWEpVWVhKblpYUW9aQ2tzSUdFdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lISXBMQ0JtTG5SbGVIUjFjbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJoT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FTaGhLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0F3TENCaklEMGdOanNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2dnUFNBd095Qm9JRHdnWXpzZ2FDc3JLV0ZiYUYwZ0lUMDlJSFp2YVdRZ01DQW1KaUJzS3lzN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUd3Z1BUMDlJR003Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCeUtHRXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJR0V1ZEdGeVoyVjBPd29nSUNBZ0lDQWdJR3d1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lISXBPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdaUzVuWlhRb2JDazdDaUFnSUNBZ0lDQWdZeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbVJsYkdWMFpTaHNLU3dnWXk1a2FYTndiM05sS0NrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdieWdwSUhzS0lDQWdJQ0FnSUNCbElEMGdibVYzSUZkbFlXdE5ZWEFzSUhRZ0lUMDlJRzUxYkd3Z0ppWWdLSFF1WkdsemNHOXpaU2dwTENCMElEMGdiblZzYkNrN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nYml3S0lDQWdJQ0FnSUNCa2FYTndiM05sT2lCdkNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlGRnRLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdlMzA3Q2lBZ0lDQm1kVzVqZEdsdmJpQjBLRzRwSUhzS0lDQWdJQ0FnSUNCcFppQW9aVnR1WFNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z1pWdHVYVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FUc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb2JpbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGRGUWtkTVgyUmxjSFJvWDNSbGVIUjFjbVVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBOUlITXVaMlYwUlhoMFpXNXphVzl1S0NKWFJVSkhURjlrWlhCMGFGOTBaWGgwZFhKbElpa2dmSHdnY3k1blpYUkZlSFJsYm5OcGIyNG9JazFQV2w5WFJVSkhURjlrWlhCMGFGOTBaWGgwZFhKbElpa2dmSHdnY3k1blpYUkZlSFJsYm5OcGIyNG9JbGRGUWt0SlZGOVhSVUpIVEY5a1pYQjBhRjkwWlhoMGRYSmxJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlSVmhVWDNSbGVIUjFjbVZmWm1sc2RHVnlYMkZ1YVhOdmRISnZjR2xqSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQnpMbWRsZEVWNGRHVnVjMmx2YmlnaVJWaFVYM1JsZUhSMWNtVmZabWxzZEdWeVgyRnVhWE52ZEhKdmNHbGpJaWtnZkh3Z2N5NW5aWFJGZUhSbGJuTnBiMjRvSWsxUFdsOUZXRlJmZEdWNGRIVnlaVjltYVd4MFpYSmZZVzVwYzI5MGNtOXdhV01pS1NCOGZDQnpMbWRsZEVWNGRHVnVjMmx2YmlnaVYwVkNTMGxVWDBWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM016ZEdNaUtTQjhmQ0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lUVTlhWDFkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl6TTNSaklpa2dmSHdnY3k1blpYUkZlSFJsYm5OcGIyNG9JbGRGUWt0SlZGOVhSVUpIVEY5amIyMXdjbVZ6YzJWa1gzUmxlSFIxY21WZmN6TjBZeUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXdkbkowWXlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElEMGdjeTVuWlhSRmVIUmxibk5wYjI0b0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5d2RuSjBZeUlwSUh4OElITXVaMlYwUlhoMFpXNXphVzl1S0NKWFJVSkxTVlJmVjBWQ1IweGZZMjl0Y0hKbGMzTmxaRjkwWlhoMGRYSmxYM0IyY25SaklpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQU0J6TG1kbGRFVjRkR1Z1YzJsdmJpaHVLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiYmwwZ1BTQnBMQ0JwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCb1lYTTZJR1oxYm1OMGFXOXVLRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUW9iaWtnSVQwOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCcGJtbDBPaUJtZFc1amRHbHZiaWh1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRzR1YVhOWFpXSkhURElnUHlCMEtDSkZXRlJmWTI5c2IzSmZZblZtWm1WeVgyWnNiMkYwSWlrZ09pQW9kQ2dpVjBWQ1IweGZaR1Z3ZEdoZmRHVjRkSFZ5WlNJcExDQjBLQ0pQUlZOZmRHVjRkSFZ5WlY5bWJHOWhkQ0lwTENCMEtDSlBSVk5mZEdWNGRIVnlaVjlvWVd4bVgyWnNiMkYwSWlrc0lIUW9JazlGVTE5MFpYaDBkWEpsWDJoaGJHWmZabXh2WVhSZmJHbHVaV0Z5SWlrc0lIUW9JazlGVTE5emRHRnVaR0Z5WkY5a1pYSnBkbUYwYVhabGN5SXBMQ0IwS0NKUFJWTmZaV3hsYldWdWRGOXBibVJsZUY5MWFXNTBJaWtzSUhRb0lrOUZVMTkyWlhKMFpYaGZZWEp5WVhsZmIySnFaV04wSWlrc0lIUW9Ja0ZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNaUtTa3NJSFFvSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwWDJ4cGJtVmhjaUlwTENCMEtDSkZXRlJmWTI5c2IzSmZZblZtWm1WeVgyaGhiR1pmWm14dllYUWlLU3dnZENnaVYwVkNSMHhmYlhWc2RHbHpZVzF3YkdWa1gzSmxibVJsY2w5MGIxOTBaWGgwZFhKbElpazdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMEtHNHBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVNBOVBUMGdiblZzYkNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDSWdLeUJ1SUNzZ0lpQmxlSFJsYm5OcGIyNGdibTkwSUhOMWNIQnZjblJsWkM0aUtTd2dhVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUV0dEtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ2UzMHNJSElnUFNCdVpYY2dWMlZoYTAxaGNEc0tJQ0FnSUdaMWJtTjBhVzl1SUc4b2RTa2dld29nSUNBZ0lDQWdJR3hsZENCa0lEMGdkUzUwWVhKblpYUTdDaUFnSUNBZ0lDQWdaQzVwYm1SbGVDQWhQVDBnYm5Wc2JDQW1KaUJsTG5KbGJXOTJaU2hrTG1sdVpHVjRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzBnYVc0Z1pDNWhkSFJ5YVdKMWRHVnpLV1V1Y21WdGIzWmxLR1F1WVhSMGNtbGlkWFJsYzF0dFhTazdDaUFnSUNBZ0lDQWdaQzV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z2J5a3NJR1JsYkdWMFpTQnBXMlF1YVdSZE93b2dJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2NpNW5aWFFvWkNrN0NpQWdJQ0FnSUNBZ1ppQW1KaUFvWlM1eVpXMXZkbVVvWmlrc0lISXVaR1ZzWlhSbEtHUXBLU3dnYmk1eVpXeGxZWE5sVTNSaGRHVnpUMlpIWlc5dFpYUnllU2hrS1N3Z1pDNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUlEMDlQU0FoTUNBbUppQmtaV3hsZEdVZ1pDNWZiV0Y0U1c1emRHRnVZMlZEYjNWdWRDd2dkQzV0WlcxdmNua3VaMlZ2YldWMGNtbGxjeTB0T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lTaDFMQ0JrS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsYlpDNXBaRjBnUFQwOUlDRXdJSHg4SUNoa0xtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQnZLU3dnYVZ0a0xtbGtYU0E5SUNFd0xDQjBMbTFsYlc5eWVTNW5aVzl0WlhSeWFXVnpLeXNwTENCa093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiQ2gxS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCMUxtRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnRJR2x1SUdRcFpTNTFjR1JoZEdVb1pGdHRYU3dnTXpRNU5qSXBPd29nSUNBZ0lDQWdJR3hsZENCbUlEMGdkUzV0YjNKd2FFRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnRNU0JwYmlCbUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0JtVzIweFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IySUQwZ01Dd2daeUE5SUhndWJHVnVaM1JvT3lCMklEd2daenNnZGlzcktXVXVkWEJrWVhSbEtIaGJkbDBzSURNME9UWXlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaktIVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJRnRkTENCbUlEMGdkUzVwYm1SbGVDd2diU0E5SUhVdVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd2dlQ0E5SURBN0NpQWdJQ0FnSUNBZ2FXWWdLR1lnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQm1MbUZ5Y21GNU93b2dJQ0FnSUNBZ0lDQWdJQ0I0SUQwZ1ppNTJaWEp6YVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd0xDQjVJRDBnY0M1c1pXNW5kR2c3SUY4Z1BDQjVPeUJmSUNzOUlETXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQndXMThnS3lBd1hTd2dRU0E5SUhCYlh5QXJJREZkTENCTUlEMGdjRnRmSUNzZ01sMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtMbkIxYzJnb1lpd2dRU3dnUVN3Z1RDd2dUQ3dnWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjREVnUFNCdExtRnljbUY1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjRJRDBnYlM1MlpYSnphVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOHhJRDBnTUN3Z2VURWdQU0J3TVM1c1pXNW5kR2dnTHlBeklDMGdNVHNnWHpFZ1BDQjVNVHNnWHpFZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lqRWdQU0JmTVNBcklEQXNJRUV4SUQwZ1h6RWdLeUF4TENCTU1TQTlJRjh4SUNzZ01qc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUXVjSFZ6YUNoaU1Td2dRVEVzSUVFeExDQk1NU3dnVERFc0lHSXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnZGlBOUlHNWxkeUFvV1dNb1pDa2dQaUEyTlRVek5TQS9JRnB6SURvZ1dYTXBLR1FzSURFcE93b2dJQ0FnSUNBZ0lIWXVkbVZ5YzJsdmJpQTlJSGc3Q2lBZ0lDQWdJQ0FnYkdWMElHY2dQU0J5TG1kbGRDaDFLVHNLSUNBZ0lDQWdJQ0JuSUNZbUlHVXVjbVZ0YjNabEtHY3BMQ0J5TG5ObGRDaDFMQ0IyS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHZ29kU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnY2k1blpYUW9kU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tHUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCMUxtbHVaR1Y0T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1JQ0U5UFNCdWRXeHNJQ1ltSUdRdWRtVnljMmx2YmlBOElHWXVkbVZ5YzJsdmJpQW1KaUJqS0hVcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCaktIVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlMbWRsZENoMUtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCaExBb2dJQ0FnSUNBZ0lIVndaR0YwWlRvZ2JDd0tJQ0FnSUNBZ0lDQm5aWFJYYVhKbFpuSmhiV1ZCZEhSeWFXSjFkR1U2SUdnS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z1pXY29jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQnVMbWx6VjJWaVIwd3lMQ0J5T3dvZ0lDQWdablZ1WTNScGIyNGdieWhrS1NCN0NpQWdJQ0FnSUNBZ2NpQTlJR1E3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdZU3dnYkRzS0lDQWdJR1oxYm1OMGFXOXVJR01vWkNrZ2V3b2dJQ0FnSUNBZ0lHRWdQU0JrTG5SNWNHVXNJR3dnUFNCa0xtSjVkR1Z6VUdWeVJXeGxiV1Z1ZERzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHZ29aQ3dnWmlrZ2V3b2dJQ0FnSUNBZ0lITXVaSEpoZDBWc1pXMWxiblJ6S0hJc0lHWXNJR0VzSUdRZ0tpQnNLU3dnZEM1MWNHUmhkR1VvWml3Z2Npd2dNU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCMUtHUXNJR1lzSUcwcElIc0tJQ0FnSUNBZ0lDQnBaaUFvYlNBOVBUMGdNQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCNExDQjJPd29nSUNBZ0lDQWdJR2xtSUNocEtTQjRJRDBnY3l3Z2RpQTlJQ0prY21GM1JXeGxiV1Z1ZEhOSmJuTjBZVzVqWldRaU93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tIZ2dQU0JsTG1kbGRDZ2lRVTVIVEVWZmFXNXpkR0Z1WTJWa1gyRnljbUY1Y3lJcExDQjJJRDBnSW1SeVlYZEZiR1Z0Wlc1MGMwbHVjM1JoYm1ObFpFRk9SMHhGSWl3Z2VDQTlQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEVsdVpHVjRaV1JDZFdabVpYSlNaVzVrWlhKbGNqb2dkWE5wYm1jZ1ZFaFNSVVV1U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua2dZblYwSUdoaGNtUjNZWEpsSUdSdlpYTWdibTkwSUhOMWNIQnZjblFnWlhoMFpXNXphVzl1SUVGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2VGdDJYU2h5TENCbUxDQmhMQ0JrSUNvZ2JDd2diU2tzSUhRdWRYQmtZWFJsS0dZc0lISXNJRzBwT3dvZ0lDQWdmUW9nSUNBZ2RHaHBjeTV6WlhSTmIyUmxJRDBnYnl3Z2RHaHBjeTV6WlhSSmJtUmxlQ0E5SUdNc0lIUm9hWE11Y21WdVpHVnlJRDBnYUN3Z2RHaHBjeTV5Wlc1a1pYSkpibk4wWVc1alpYTWdQU0IxT3dwOUNtWjFibU4wYVc5dUlIUm5LSE1wSUhzS0lDQWdJR3hsZENCbElEMGdld29nSUNBZ0lDQWdJR2RsYjIxbGRISnBaWE02SURBc0NpQWdJQ0FnSUNBZ2RHVjRkSFZ5WlhNNklEQUtJQ0FnSUgwc0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnWm5KaGJXVTZJREFzQ2lBZ0lDQWdJQ0FnWTJGc2JITTZJREFzQ2lBZ0lDQWdJQ0FnZEhKcFlXNW5iR1Z6T2lBd0xBb2dJQ0FnSUNBZ0lIQnZhVzUwY3pvZ01Dd0tJQ0FnSUNBZ0lDQnNhVzVsY3pvZ01Bb2dJQ0FnZlRzS0lDQWdJR1oxYm1OMGFXOXVJRzRvY2l3Z2J5d2dZU2tnZXdvZ0lDQWdJQ0FnSUhOM2FYUmphQ2gwTG1OaGJHeHpLeXNzSUc4cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBMblJ5YVdGdVoyeGxjeUFyUFNCaElDb2dLSElnTHlBektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExteHBibVZ6SUNzOUlHRWdLaUFvY2lBdklESXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ016b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUXViR2x1WlhNZ0t6MGdZU0FxSUNoeUlDMGdNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQXlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQzVzYVc1bGN5QXJQU0JoSUNvZ2Nqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURBNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMExuQnZhVzUwY3lBclBTQmhJQ29nY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhKYm1adk9pQlZibXR1YjNkdUlHUnlZWGNnYlc5a1pUb2lMQ0J2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdrb0tTQjdDaUFnSUNBZ0lDQWdkQzVtY21GdFpTc3JMQ0IwTG1OaGJHeHpJRDBnTUN3Z2RDNTBjbWxoYm1kc1pYTWdQU0F3TENCMExuQnZhVzUwY3lBOUlEQXNJSFF1YkdsdVpYTWdQU0F3T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCdFpXMXZjbms2SUdVc0NpQWdJQ0FnSUNBZ2NtVnVaR1Z5T2lCMExBb2dJQ0FnSUNBZ0lIQnliMmR5WVcxek9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUdGMWRHOVNaWE5sZERvZ0lUQXNDaUFnSUNBZ0lDQWdjbVZ6WlhRNklHa3NDaUFnSUNBZ0lDQWdkWEJrWVhSbE9pQnVDaUFnSUNCOU93cDlDblpoY2lCUmN5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1MWJHd3NJSFFnUFNBeExDQnVJRDBnTVN3Z2FTQTlJREVwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzUxYkd3cE93b2dJQ0FnSUNBZ0lIUm9hWE11YVcxaFoyVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0U2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb09pQnBDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXRZV2RHYVd4MFpYSWdQU0J5ZEN3Z2RHaHBjeTV0YVc1R2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1M2NtRndVaUE5SUhaMExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFeExDQjBhR2x6TG1ac2FYQlpJRDBnSVRFc0lIUm9hWE11ZFc1d1lXTnJRV3hwWjI1dFpXNTBJRDBnTVRzS0lDQWdJSDBLZlRzS1VYTXVjSEp2ZEc5MGVYQmxMbWx6UkdGMFlWUmxlSFIxY21VeVJFRnljbUY1SUQwZ0lUQTdDbVoxYm1OMGFXOXVJRzVuS0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCeld6QmRJQzBnWlZzd1hUc0tmUXBtZFc1amRHbHZiaUJwWnloekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb1pWc3hYU2tnTFNCTllYUm9MbUZpY3loeld6RmRLVHNLZlFwbWRXNWpkR2x2YmlCT2JDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJREVzSUc0Z1BTQmxMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnUHlCbExtUmhkR0V1WVhKeVlYa2dPaUJsTG1GeWNtRjVPd29nSUNBZ2JpQnBibk4wWVc1alpXOW1JRWx1ZERoQmNuSmhlU0EvSUhRZ1BTQXhNamNnT2lCdUlHbHVjM1JoYm1ObGIyWWdTVzUwTVRaQmNuSmhlU0EvSUhRZ1BTQXpNamMyTnlBNklHNGdhVzV6ZEdGdVkyVnZaaUJKYm5Rek1rRnljbUY1SUQ4Z2RDQTlJREl4TkRjME9ETTJORGNnT2lCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEUxdmNuQm9kR0Z5WjJWMGN6b2dWVzV6ZFhCd2IzSjBaV1FnYlc5eWNHZ2dZWFIwY21saWRYUmxJR1JoZEdFZ2RIbHdaVG9nSWl3Z2Jpa3NJSE11WkdsMmFXUmxVMk5oYkdGeUtIUXBPd3A5Q21aMWJtTjBhVzl1SUhKbktITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnZTMwc0lHa2dQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRGdwTENCeUlEMGdibVYzSUZkbFlXdE5ZWEFzSUc4Z1BTQnVaWGNnVFN3Z1lTQTlJRnRkT3dvZ0lDQWdabTl5S0d4bGRDQmpJRDBnTURzZ1l5QThJRGc3SUdNckt5bGhXMk5kSUQwZ1d3b2dJQ0FnSUNBZ0lHTXNDaUFnSUNBZ0lDQWdNQW9nSUNBZ1hUc0tJQ0FnSUdaMWJtTjBhVzl1SUd3b1l5d2dhQ3dnZFN3Z1pDa2dld29nSUNBZ0lDQWdJR3hsZENCbUlEMGdZeTV0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1YVhOWFpXSkhURElnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ2FDNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0dWJHVnVaM1JvTENCNElEMGdjaTVuWlhRb2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDRJRDA5UFNCMmIybGtJREFnZkh3Z2VDNWpiM1Z1ZENBaFBUMGdiU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUNBaFBUMGdkbTlwWkNBd0lDWW1JSGd1ZEdWNGRIVnlaUzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJR2d1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDQWhQVDBnZG05cFpDQXdMQ0JmSUQwZ2FDNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0c0lIa2dQU0JvTG0xdmNuQm9RWFIwY21saWRYUmxjeTV1YjNKdFlXd2dmSHdnVzEwc0lHSWdQU0JvTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0dVkyOTFiblFzSUVFZ1BTQndJRDA5UFNBaE1DQS9JRElnT2lBeExDQk1JRDBnWWlBcUlFRXNJRWtnUFNBeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1RDQStJR1V1YldGNFZHVjRkSFZ5WlZOcGVtVWdKaVlnS0VrZ1BTQk5ZWFJvTG1ObGFXd29UQ0F2SUdVdWJXRjRWR1Y0ZEhWeVpWTnBlbVVwTENCTUlEMGdaUzV0WVhoVVpYaDBkWEpsVTJsNlpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYXlBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1RDQXFJRWtnS2lBMElDb2diU2tzSUVJZ1BTQnVaWGNnVVhNb2F5d2dUQ3dnU1N3Z2JTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkNMbVp2Y20xaGRDQTlJR04wTENCQ0xuUjVjR1VnUFNCdWJpd2dRaTV1WldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZBZ1BTQkJJQ29nTkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZHlBOUlEQTdJSGNnUENCdE95QjNLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ1gxdDNYU3dnUkNBOUlIbGJkMTBzSUZVZ1BTQk1JQ29nU1NBcUlEUWdLaUIzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1JpQTlJREE3SUVZZ1BDQkZMbU52ZFc1ME95QkdLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1JTd2dSaWtzSUVVdWJtOXliV0ZzYVhwbFpDQTlQVDBnSVRBZ0ppWWdUbXdvYnl3Z1JTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JQSUQwZ1JpQXFJRkE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3RiVlNBcklFOGdLeUF3WFNBOUlHOHVlQ3dnYTF0VklDc2dUeUFySURGZElEMGdieTU1TENCclcxVWdLeUJQSUNzZ01sMGdQU0J2TG5vc0lHdGJWU0FySUU4Z0t5QXpYU0E5SURBc0lIQWdQVDA5SUNFd0lDWW1JQ2h2TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1JDd2dSaWtzSUVRdWJtOXliV0ZzYVhwbFpDQTlQVDBnSVRBZ0ppWWdUbXdvYnl3Z1JDa3NJR3RiVlNBcklFOGdLeUEwWFNBOUlHOHVlQ3dnYTF0VklDc2dUeUFySURWZElEMGdieTU1TENCclcxVWdLeUJQSUNzZ05sMGdQU0J2TG5vc0lHdGJWU0FySUU4Z0t5QTNYU0E5SURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGdnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjkxYm5RNklHMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRIVnlaVG9nUWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphWHBsT2lCdVpYY2dXQ2hNTENCSktRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2djaTV6WlhRb2FDd2dlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQXhJRDBnTURzZ2NERWdQQ0JtTG14bGJtZDBhRHNnY0RFckt5bDJJQ3M5SUdaYmNERmRPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUdndWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVWdQeUF4SURvZ01TQXRJSFk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUXVaMlYwVlc1cFptOXliWE1vS1M1elpYUldZV3gxWlNoekxDQWliVzl5Y0doVVlYSm5aWFJDWVhObFNXNW1iSFZsYm1ObElpd2daeWtzSUdRdVoyVjBWVzVwWm05eWJYTW9LUzV6WlhSV1lXeDFaU2h6TENBaWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJaXdnWmlrc0lHUXVaMlYwVlc1cFptOXliWE1vS1M1elpYUldZV3gxWlNoekxDQWliVzl5Y0doVVlYSm5aWFJ6VkdWNGRIVnlaU0lzSUhndWRHVjRkSFZ5WlN3Z2RDa3NJR1F1WjJWMFZXNXBabTl5YlhNb0tTNXpaWFJXWVd4MVpTaHpMQ0FpYlc5eWNHaFVZWEpuWlhSelZHVjRkSFZ5WlZOcGVtVWlMQ0I0TG5OcGVtVXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRNU0E5SUdZZ1BUMDlJSFp2YVdRZ01DQS9JREFnT2lCbUxteGxibWQwYUN3Z2VERWdQU0J1VzJndWFXUmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9lREVnUFQwOUlIWnZhV1FnTUNCOGZDQjRNUzVzWlc1bmRHZ2dJVDA5SUcweEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRNU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNU1TQTlJREE3SUhreElEd2diVEU3SUhreEt5c3BlREZiZVRGZElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhreExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1VzJndWFXUmRJRDBnZURFN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNU1pQTlJREE3SUhreUlEd2diVEU3SUhreUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJeElEMGdlREZiZVRKZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lqRmJNRjBnUFNCNU1pd2dZakZiTVYwZ1BTQm1XM2t5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCNE1TNXpiM0owS0dsbktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1TXlBOUlEQTdJSGt6SUR3Z09Ec2dlVE1yS3lsNU15QThJRzB4SUNZbUlIZ3hXM2t6WFZzeFhTQS9JQ2hoVzNrelhWc3dYU0E5SUhneFcza3pYVnN3WFN3Z1lWdDVNMTFiTVYwZ1BTQjRNVnQ1TTExYk1WMHBJRG9nS0dGYmVUTmRXekJkSUQwZ1RuVnRZbVZ5TGsxQldGOVRRVVpGWDBsT1ZFVkhSVklzSUdGYmVUTmRXekZkSUQwZ01DazdDaUFnSUNBZ0lDQWdJQ0FnSUdFdWMyOXlkQ2h1WnlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMk1TQTlJR2d1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0JuTVNBOUlHZ3ViVzl5Y0doQmRIUnlhV0oxZEdWekxtNXZjbTFoYkN3Z2NESWdQU0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIazBJRDBnTURzZ2VUUWdQQ0E0T3lCNU5Dc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaU1pQTlJR0ZiZVRSZExDQkJNU0E5SUdJeVd6QmRMQ0JNTVNBOUlHSXlXekZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUVRFZ0lUMDlJRTUxYldKbGNpNU5RVmhmVTBGR1JWOUpUbFJGUjBWU0lDWW1JRXd4SUQ4Z0tIWXhJQ1ltSUdndVoyVjBRWFIwY21saWRYUmxLQ0p0YjNKd2FGUmhjbWRsZENJZ0t5QjVOQ2tnSVQwOUlIWXhXMEV4WFNBbUppQm9Mbk5sZEVGMGRISnBZblYwWlNnaWJXOXljR2hVWVhKblpYUWlJQ3NnZVRRc0lIWXhXMEV4WFNrc0lHY3hJQ1ltSUdndVoyVjBRWFIwY21saWRYUmxLQ0p0YjNKd2FFNXZjbTFoYkNJZ0t5QjVOQ2tnSVQwOUlHY3hXMEV4WFNBbUppQm9Mbk5sZEVGMGRISnBZblYwWlNnaWJXOXljR2hPYjNKdFlXd2lJQ3NnZVRRc0lHY3hXMEV4WFNrc0lHbGJlVFJkSUQwZ1RERXNJSEF5SUNzOUlFd3hLU0E2SUNoMk1TQW1KaUJvTG1oaGMwRjBkSEpwWW5WMFpTZ2liVzl5Y0doVVlYSm5aWFFpSUNzZ2VUUXBJRDA5UFNBaE1DQW1KaUJvTG1SbGJHVjBaVUYwZEhKcFluVjBaU2dpYlc5eWNHaFVZWEpuWlhRaUlDc2dlVFFwTENCbk1TQW1KaUJvTG1oaGMwRjBkSEpwWW5WMFpTZ2liVzl5Y0doT2IzSnRZV3dpSUNzZ2VUUXBJRDA5UFNBaE1DQW1KaUJvTG1SbGJHVjBaVUYwZEhKcFluVjBaU2dpYlc5eWNHaE9iM0p0WVd3aUlDc2dlVFFwTENCcFczazBYU0E5SURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmTVNBOUlHZ3ViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVnUHlBeElEb2dNU0F0SUhBeU93b2dJQ0FnSUNBZ0lDQWdJQ0JrTG1kbGRGVnVhV1p2Y20xektDa3VjMlYwVm1Gc2RXVW9jeXdnSW0xdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaU0lzSUY4eEtTd2daQzVuWlhSVmJtbG1iM0p0Y3lncExuTmxkRlpoYkhWbEtITXNJQ0p0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNaUxDQnBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUhWd1pHRjBaVG9nYkFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCelp5aHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z2NpaHNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0J1TG5KbGJtUmxjaTVtY21GdFpTd2dhQ0E5SUd3dVoyVnZiV1YwY25rc0lIVWdQU0JsTG1kbGRDaHNMQ0JvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVM1blpYUW9kU2tnSVQwOUlHTWdKaVlnS0dVdWRYQmtZWFJsS0hVcExDQnBMbk5sZENoMUxDQmpLU2tzSUd3dWFYTkpibk4wWVc1alpXUk5aWE5vSUNZbUlDaHNMbWhoYzBWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JoS1NBOVBUMGdJVEVnSmlZZ2JDNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dZU2tzSUhRdWRYQmtZWFJsS0d3dWFXNXpkR0Z1WTJWTllYUnlhWGdzSURNME9UWXlLU3dnYkM1cGJuTjBZVzVqWlVOdmJHOXlJQ0U5UFNCdWRXeHNJQ1ltSUhRdWRYQmtZWFJsS0d3dWFXNXpkR0Z1WTJWRGIyeHZjaXdnTXpRNU5qSXBLU3dnZFRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHOG9LU0I3Q2lBZ0lDQWdJQ0FnYVNBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWVNoc0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQnNMblJoY21kbGREc0tJQ0FnSUNBZ0lDQmpMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCaEtTd2dkQzV5WlcxdmRtVW9ZeTVwYm5OMFlXNWpaVTFoZEhKcGVDa3NJR011YVc1emRHRnVZMlZEYjJ4dmNpQWhQVDBnYm5Wc2JDQW1KaUIwTG5KbGJXOTJaU2hqTG1sdWMzUmhibU5sUTI5c2IzSXBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0IxY0dSaGRHVTZJSElzQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nYndvZ0lDQWdmVHNLZlFwMllYSWdiV0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVkV3hzTENCMElEMGdNU3dnYmlBOUlERXNJR2tnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodWRXeHNLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHRZV2RsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRG9nYVFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YldGblJtbHNkR1Z5SUQwZ2NuUXNJSFJvYVhNdWJXbHVSbWxzZEdWeUlEMGdjblFzSUhSb2FYTXVkM0poY0ZJZ1BTQjJkQ3dnZEdocGN5NW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNU3dnZEdocGN5NW1iR2x3V1NBOUlDRXhMQ0IwYUdsekxuVnVjR0ZqYTBGc2FXZHViV1Z1ZENBOUlERTdDaUFnSUNCOUNuMDdDbTFoTG5CeWIzUnZkSGx3WlM1cGMwUmhkR0ZVWlhoMGRYSmxNMFFnUFNBaE1Ec0tkbUZ5SUd4b0lEMGdibVYzSUc5MExDQmphQ0E5SUc1bGR5QlJjeXdnYUdnZ1BTQnVaWGNnYldFc0lIVm9JRDBnYm1WM0lHdHBMQ0JDYkNBOUlGdGRMQ0I2YkNBOUlGdGRMQ0JWYkNBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb01UWXBMQ0JQYkNBOUlHNWxkeUJHYkc5aGRETXlRWEp5WVhrb09Ta3NJRWhzSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNnMEtUc0tablZ1WTNScGIyNGdWbWtvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQnpXekJkT3dvZ0lDQWdhV1lnS0c0Z1BEMGdNQ0I4ZkNCdUlENGdNQ2tnY21WMGRYSnVJSE03Q2lBZ0lDQnNaWFFnYVNBOUlHVWdLaUIwTENCeUlEMGdRbXhiYVYwN0NpQWdJQ0JwWmlBb2NpQTlQVDBnZG05cFpDQXdJQ1ltSUNoeUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaHBLU3dnUW14YmFWMGdQU0J5S1N3Z1pTQWhQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHNHVkRzlCY25KaGVTaHlMQ0F3S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXhMQ0JoSUQwZ01Ec2dieUFoUFQwZ1pUc2dLeXR2S1dFZ0t6MGdkQ3dnYzF0dlhTNTBiMEZ5Y21GNUtISXNJR0VwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhJN0NuMEtablZ1WTNScGIyNGdUWFFvY3l3Z1pTa2dld29nSUNBZ2FXWWdLSE11YkdWdVozUm9JQ0U5UFNCbExteGxibWQwYUNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktXbG1JQ2h6VzNSZElDRTlQU0JsVzNSZEtTQnlaWFIxY200Z0lURTdDaUFnSUNCeVpYUjFjbTRnSVRBN0NuMEtablZ1WTNScGIyNGdYM1FvY3l3Z1pTa2dld29nSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWE5iZEYwZ1BTQmxXM1JkT3dwOUNtWjFibU4wYVc5dUlFdHpLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZW14YlpWMDdDaUFnSUNCMElEMDlQU0IyYjJsa0lEQWdKaVlnS0hRZ1BTQnVaWGNnU1c1ME16SkJjbkpoZVNobEtTd2dlbXhiWlYwZ1BTQjBLVHNLSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z0lUMDlJR1U3SUNzcmJpbDBXMjVkSUQwZ2N5NWhiR3h2WTJGMFpWUmxlSFIxY21WVmJtbDBLQ2s3Q2lBZ0lDQnlaWFIxY200Z2REc0tmUXBtZFc1amRHbHZiaUJ2WnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVTdDaUFnSUNCMFd6QmRJQ0U5UFNCbElDWW1JQ2h6TG5WdWFXWnZjbTB4WmloMGFHbHpMbUZrWkhJc0lHVXBMQ0IwV3pCZElEMGdaU2s3Q24wS1puVnVZM1JwYjI0Z1lXY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsT3dvZ0lDQWdhV1lnS0dVdWVDQWhQVDBnZG05cFpDQXdLU0FvZEZzd1hTQWhQVDBnWlM1NElIeDhJSFJiTVYwZ0lUMDlJR1V1ZVNrZ0ppWWdLSE11ZFc1cFptOXliVEptS0hSb2FYTXVZV1JrY2l3Z1pTNTRMQ0JsTG5rcExDQjBXekJkSUQwZ1pTNTRMQ0IwV3pGZElEMGdaUzU1S1RzS0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hOZENoMExDQmxLU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSE11ZFc1cFptOXliVEptZGloMGFHbHpMbUZrWkhJc0lHVXBMQ0JmZENoMExDQmxLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJzWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVTdDaUFnSUNCcFppQW9aUzU0SUNFOVBTQjJiMmxrSURBcElDaDBXekJkSUNFOVBTQmxMbmdnZkh3Z2RGc3hYU0FoUFQwZ1pTNTVJSHg4SUhSYk1sMGdJVDA5SUdVdWVpa2dKaVlnS0hNdWRXNXBabTl5YlRObUtIUm9hWE11WVdSa2Npd2daUzU0TENCbExua3NJR1V1ZWlrc0lIUmJNRjBnUFNCbExuZ3NJSFJiTVYwZ1BTQmxMbmtzSUhSYk1sMGdQU0JsTG5vcE93b2dJQ0FnWld4elpTQnBaaUFvWlM1eUlDRTlQU0IyYjJsa0lEQXBJQ2gwV3pCZElDRTlQU0JsTG5JZ2ZId2dkRnN4WFNBaFBUMGdaUzVuSUh4OElIUmJNbDBnSVQwOUlHVXVZaWtnSmlZZ0tITXVkVzVwWm05eWJUTm1LSFJvYVhNdVlXUmtjaXdnWlM1eUxDQmxMbWNzSUdVdVlpa3NJSFJiTUYwZ1BTQmxMbklzSUhSYk1WMGdQU0JsTG1jc0lIUmJNbDBnUFNCbExtSXBPd29nSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMTBLSFFzSUdVcEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2N5NTFibWxtYjNKdE0yWjJLSFJvYVhNdVlXUmtjaXdnWlNrc0lGOTBLSFFzSUdVcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlHTm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJR2xtSUNobExuZ2dJVDA5SUhadmFXUWdNQ2tnS0hSYk1GMGdJVDA5SUdVdWVDQjhmQ0IwV3pGZElDRTlQU0JsTG5rZ2ZId2dkRnN5WFNBaFBUMGdaUzU2SUh4OElIUmJNMTBnSVQwOUlHVXVkeWtnSmlZZ0tITXVkVzVwWm05eWJUUm1LSFJvYVhNdVlXUmtjaXdnWlM1NExDQmxMbmtzSUdVdWVpd2daUzUzS1N3Z2RGc3dYU0E5SUdVdWVDd2dkRnN4WFNBOUlHVXVlU3dnZEZzeVhTQTlJR1V1ZWl3Z2RGc3pYU0E5SUdVdWR5azdDaUFnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RYUW9kQ3dnWlNrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCekxuVnVhV1p2Y20wMFpuWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z2FHY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0IwYUdsekxtTmhZMmhsTENCdUlEMGdaUzVsYkdWdFpXNTBjenNLSUNBZ0lHbG1JQ2h1SUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQnBaaUFvVFhRb2RDd2daU2twSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0J6TG5WdWFXWnZjbTFOWVhSeWFYZ3labllvZEdocGN5NWhaR1J5TENBaE1Td2daU2tzSUY5MEtIUXNJR1VwT3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQnBaaUFvVFhRb2RDd2diaWtwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JJYkM1elpYUW9iaWtzSUhNdWRXNXBabTl5YlUxaGRISnBlREptZGloMGFHbHpMbUZrWkhJc0lDRXhMQ0JJYkNrc0lGOTBLSFFzSUc0cE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlIVm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlN3Z2JpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQnBaaUFvYmlBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0UxMEtIUXNJR1VwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnY3k1MWJtbG1iM0p0VFdGMGNtbDRNMloyS0hSb2FYTXVZV1JrY2l3Z0lURXNJR1VwTENCZmRDaDBMQ0JsS1RzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdhV1lnS0UxMEtIUXNJRzRwS1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnVDJ3dWMyVjBLRzRwTENCekxuVnVhV1p2Y20xTllYUnlhWGd6Wm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnVDJ3cExDQmZkQ2gwTENCdUtUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQmtaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdhV1lnS0c0Z1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJR2xtSUNoTmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNdWRXNXBabTl5YlUxaGRISnBlRFJtZGloMGFHbHpMbUZrWkhJc0lDRXhMQ0JsS1N3Z1gzUW9kQ3dnWlNrN0NpQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJR2xtSUNoTmRDaDBMQ0J1S1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUZWc0xuTmxkQ2h1S1N3Z2N5NTFibWxtYjNKdFRXRjBjbWw0TkdaMktIUm9hWE11WVdSa2Npd2dJVEVzSUZWc0tTd2dYM1FvZEN3Z2JpazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdabWNvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnZEZzd1hTQWhQVDBnWlNBbUppQW9jeTUxYm1sbWIzSnRNV2tvZEdocGN5NWhaR1J5TENCbEtTd2dkRnN3WFNBOUlHVXBPd3A5Q21aMWJtTjBhVzl1SUhCbktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lFMTBLSFFzSUdVcElIeDhJQ2h6TG5WdWFXWnZjbTB5YVhZb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2twT3dwOUNtWjFibU4wYVc5dUlHMW5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJRTEwS0hRc0lHVXBJSHg4SUNoekxuVnVhV1p2Y20wemFYWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrcE93cDlDbVoxYm1OMGFXOXVJR2RuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUUxMEtIUXNJR1VwSUh4OElDaHpMblZ1YVdadmNtMDBhWFlvZEdocGN5NWhaR1J5TENCbEtTd2dYM1FvZEN3Z1pTa3BPd3A5Q21aMWJtTjBhVzl1SUhobktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lIUmJNRjBnSVQwOUlHVWdKaVlnS0hNdWRXNXBabTl5YlRGMWFTaDBhR2x6TG1Ga1pISXNJR1VwTENCMFd6QmRJRDBnWlNrN0NuMEtablZ1WTNScGIyNGdlV2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnVFhRb2RDd2daU2tnZkh3Z0tITXVkVzVwWm05eWJUSjFhWFlvZEdocGN5NWhaR1J5TENCbEtTd2dYM1FvZEN3Z1pTa3BPd3A5Q21aMWJtTjBhVzl1SUhabktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lFMTBLSFFzSUdVcElIeDhJQ2h6TG5WdWFXWnZjbTB6ZFdsMktIUm9hWE11WVdSa2Npd2daU2tzSUY5MEtIUXNJR1VwS1RzS2ZRcG1kVzVqZEdsdmJpQmZaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZqYUdVN0NpQWdJQ0JOZENoMExDQmxLU0I4ZkNBb2N5NTFibWxtYjNKdE5IVnBkaWgwYUdsekxtRmtaSElzSUdVcExDQmZkQ2gwTENCbEtTazdDbjBLWm5WdVkzUnBiMjRnVFdjb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0IwYUdsekxtTmhZMmhsTENCcElEMGdkQzVoYkd4dlkyRjBaVlJsZUhSMWNtVlZibWwwS0NrN0NpQWdJQ0J1V3pCZElDRTlQU0JwSUNZbUlDaHpMblZ1YVdadmNtMHhhU2gwYUdsekxtRmtaSElzSUdrcExDQnVXekJkSUQwZ2FTa3NJSFF1YzJGbVpWTmxkRlJsZUhSMWNtVXlSQ2hsSUh4OElHeG9MQ0JwS1RzS2ZRcG1kVzVqZEdsdmJpQmlaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTJGamFHVXNJR2tnUFNCMExtRnNiRzlqWVhSbFZHVjRkSFZ5WlZWdWFYUW9LVHNLSUNBZ0lHNWJNRjBnSVQwOUlHa2dKaVlnS0hNdWRXNXBabTl5YlRGcEtIUm9hWE11WVdSa2Npd2dhU2tzSUc1Yk1GMGdQU0JwS1N3Z2RDNXpaWFJVWlhoMGRYSmxNMFFvWlNCOGZDQm9hQ3dnYVNrN0NuMEtablZ1WTNScGIyNGdkMmNvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1OaFkyaGxMQ0JwSUQwZ2RDNWhiR3h2WTJGMFpWUmxlSFIxY21WVmJtbDBLQ2s3Q2lBZ0lDQnVXekJkSUNFOVBTQnBJQ1ltSUNoekxuVnVhV1p2Y20weGFTaDBhR2x6TG1Ga1pISXNJR2twTENCdVd6QmRJRDBnYVNrc0lIUXVjMkZtWlZObGRGUmxlSFIxY21WRGRXSmxLR1VnZkh3Z2RXZ3NJR2twT3dwOUNtWjFibU4wYVc5dUlGTm5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVqWVdOb1pTd2dhU0E5SUhRdVlXeHNiMk5oZEdWVVpYaDBkWEpsVlc1cGRDZ3BPd29nSUNBZ2Jsc3dYU0FoUFQwZ2FTQW1KaUFvY3k1MWJtbG1iM0p0TVdrb2RHaHBjeTVoWkdSeUxDQnBLU3dnYmxzd1hTQTlJR2twTENCMExuTmxkRlJsZUhSMWNtVXlSRUZ5Y21GNUtHVWdmSHdnWTJnc0lHa3BPd3A5Q21aMWJtTjBhVzl1SUZSbktITXBJSHNLSUNBZ0lITjNhWFJqYUNoektYc0tJQ0FnSUNBZ0lDQmpZWE5sSURVeE1qWTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2WnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpZME9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZV2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkyTlRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHeG5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOalk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCalp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qYzBPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYUdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM05Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFZuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpZNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmtaenNLSUNBZ0lDQWdJQ0JqWVhObElEVXhNalE2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTURvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOamM2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTVRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIQm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOamc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHMW5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOams2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTXpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHZG5Pd29nSUNBZ0lDQWdJR05oYzJVZ05URXlOVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhobk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9UUTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI1WnpzS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkbWM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGOW5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOemc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakU1T0RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprNE9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EWTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTRNam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56azZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekEzT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ltYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTRNRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekF3T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TURnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU16b0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSGRuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T0RrNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpNd016b0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16RXhPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVEk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCVFp6c0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQkZaeWh6TENCbEtTQjdDaUFnSUNCekxuVnVhV1p2Y20weFpuWW9kR2hwY3k1aFpHUnlMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQkJaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUZacEtHVXNJSFJvYVhNdWMybDZaU3dnTWlrN0NpQWdJQ0J6TG5WdWFXWnZjbTB5Wm5Zb2RHaHBjeTVoWkdSeUxDQjBLVHNLZlFwbWRXNWpkR2x2YmlCRFp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRlpwS0dVc0lIUm9hWE11YzJsNlpTd2dNeWs3Q2lBZ0lDQnpMblZ1YVdadmNtMHpabllvZEdocGN5NWhaR1J5TENCMEtUc0tmUXBtZFc1amRHbHZiaUJNWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlGWnBLR1VzSUhSb2FYTXVjMmw2WlN3Z05DazdDaUFnSUNCekxuVnVhV1p2Y20wMFpuWW9kR2hwY3k1aFpHUnlMQ0IwS1RzS2ZRcG1kVzVqZEdsdmJpQlNaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUZacEtHVXNJSFJvYVhNdWMybDZaU3dnTkNrN0NpQWdJQ0J6TG5WdWFXWnZjbTFOWVhSeWFYZ3labllvZEdocGN5NWhaR1J5TENBaE1Td2dkQ2s3Q24wS1puVnVZM1JwYjI0Z1VHY29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0JXYVNobExDQjBhR2x6TG5OcGVtVXNJRGtwT3dvZ0lDQWdjeTUxYm1sbWIzSnRUV0YwY21sNE0yWjJLSFJvYVhNdVlXUmtjaXdnSVRFc0lIUXBPd3A5Q21aMWJtTjBhVzl1SUVsbktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdWbWtvWlN3Z2RHaHBjeTV6YVhwbExDQXhOaWs3Q2lBZ0lDQnpMblZ1YVdadmNtMU5ZWFJ5YVhnMFpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z2RDazdDbjBLWm5WdVkzUnBiMjRnUkdjb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnRNV2wyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnUm1jb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnRNbWwyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnVG1jb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnRNMmwyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnUW1jb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnROR2wyS0hSb2FYTXVZV1JrY2l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnZW1jb2N5d2daU2tnZXdvZ0lDQWdjeTUxYm1sbWIzSnRNWFZwZGloMGFHbHpMbUZrWkhJc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUZWbktITXNJR1VwSUhzS0lDQWdJSE11ZFc1cFptOXliVEoxYVhZb2RHaHBjeTVoWkdSeUxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCUFp5aHpMQ0JsS1NCN0NpQWdJQ0J6TG5WdWFXWnZjbTB6ZFdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z1NHY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TkhWcGRpaDBhR2x6TG1Ga1pISXNJR1VwT3dwOUNtWjFibU4wYVc5dUlHdG5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ1pTNXNaVzVuZEdnc0lHa2dQU0JMY3loMExDQnVLVHNLSUNBZ0lITXVkVzVwWm05eWJURnBkaWgwYUdsekxtRmtaSElzSUdrcE93b2dJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Ec2djaUFoUFQwZ2Jqc2dLeXR5S1hRdWMyRm1aVk5sZEZSbGVIUjFjbVV5UkNobFczSmRJSHg4SUd4b0xDQnBXM0pkS1RzS2ZRcG1kVzVqZEdsdmJpQkhaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlHVXViR1Z1WjNSb0xDQnBJRDBnUzNNb2RDd2diaWs3Q2lBZ0lDQnpMblZ1YVdadmNtMHhhWFlvZEdocGN5NWhaR1J5TENCcEtUc0tJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnSVQwOUlHNDdJQ3NyY2lsMExuTmxkRlJsZUhSMWNtVXpSQ2hsVzNKZElIeDhJR2hvTENCcFczSmRLVHNLZlFwbWRXNWpkR2x2YmlCV1p5aHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUdVdWJHVnVaM1JvTENCcElEMGdTM01vZEN3Z2JpazdDaUFnSUNCekxuVnVhV1p2Y20weGFYWW9kR2hwY3k1aFpHUnlMQ0JwS1RzS0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdJVDA5SUc0N0lDc3JjaWwwTG5OaFptVlRaWFJVWlhoMGRYSmxRM1ZpWlNobFczSmRJSHg4SUhWb0xDQnBXM0pkS1RzS2ZRcG1kVzVqZEdsdmJpQlhaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlHVXViR1Z1WjNSb0xDQnBJRDBnUzNNb2RDd2diaWs3Q2lBZ0lDQnpMblZ1YVdadmNtMHhhWFlvZEdocGN5NWhaR1J5TENCcEtUc0tJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnSVQwOUlHNDdJQ3NyY2lsMExuTmxkRlJsZUhSMWNtVXlSRUZ5Y21GNUtHVmJjbDBnZkh3Z1kyZ3NJR2xiY2wwcE93cDlDbVoxYm1OMGFXOXVJSEZuS0hNcElIc0tJQ0FnSUhOM2FYUmphQ2h6S1hzS0lDQWdJQ0FnSUNCallYTmxJRFV4TWpZNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkZaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOalkwT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1FXYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTJOVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVObk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qWTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJNWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpjME9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdVbWM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTlRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGQm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOelk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCSlp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURVeE1qUTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNRG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVSbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qYzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVabk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUU1bk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk5qazZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNNem9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVKbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTlRFeU5Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSHBuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlZaenNLSUNBZ0lDQWdJQ0JqWVhObElETTJNamsxT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1QyYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVOam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVobk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56ZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qRTVPRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNams0T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TURZNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZNE1qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR3RuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnprNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU9Ub0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16QTNPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnUjJjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZNE1Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16QXdPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNRGc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TXpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGWm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPRGs2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOak13TXpvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpFeE9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9USTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJYWnpzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCWVp5aHpMQ0JsTENCMEtTQjdDaUFnSUNCMGFHbHpMbWxrSUQwZ2N5d2dkR2hwY3k1aFpHUnlJRDBnZEN3Z2RHaHBjeTVqWVdOb1pTQTlJRnRkTENCMGFHbHpMbk5sZEZaaGJIVmxJRDBnVkdjb1pTNTBlWEJsS1RzS2ZRcG1kVzVqZEdsdmJpQmthQ2h6TENCbExDQjBLU0I3Q2lBZ0lDQjBhR2x6TG1sa0lEMGdjeXdnZEdocGN5NWhaR1J5SUQwZ2RDd2dkR2hwY3k1allXTm9aU0E5SUZ0ZExDQjBhR2x6TG5OcGVtVWdQU0JsTG5OcGVtVXNJSFJvYVhNdWMyVjBWbUZzZFdVZ1BTQnhaeWhsTG5SNWNHVXBPd3A5Q21Sb0xuQnliM1J2ZEhsd1pTNTFjR1JoZEdWRFlXTm9aU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJSE1nYVc1emRHRnVZMlZ2WmlCR2JHOWhkRE15UVhKeVlYa2dKaVlnWlM1c1pXNW5kR2dnSVQwOUlITXViR1Z1WjNSb0lDWW1JQ2gwYUdsekxtTmhZMmhsSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNoekxteGxibWQwYUNrcExDQmZkQ2hsTENCektUc0tmVHNLWm5WdVkzUnBiMjRnWm1nb2N5a2dld29nSUNBZ2RHaHBjeTVwWkNBOUlITXNJSFJvYVhNdWMyVnhJRDBnVzEwc0lIUm9hWE11YldGd0lEMGdlMzA3Q24wS1ptZ3VjSEp2ZEc5MGVYQmxMbk5sZEZaaGJIVmxJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG5ObGNUc0tJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCdUxteGxibWQwYURzZ2FTQWhQVDBnY2pzZ0t5dHBLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRzViYVYwN0NpQWdJQ0FnSUNBZ2J5NXpaWFJXWVd4MVpTaHpMQ0JsVzI4dWFXUmRMQ0IwS1RzS0lDQWdJSDBLZlRzS2RtRnlJRmR2SUQwZ0x5aGNkeXNwS0Z4ZEtUOG9YRnQ4WEM0cFB5OW5Pd3BtZFc1amRHbHZiaUJyYkNoekxDQmxLU0I3Q2lBZ0lDQnpMbk5sY1M1d2RYTm9LR1VwTENCekxtMWhjRnRsTG1sa1hTQTlJR1U3Q24wS1puVnVZM1JwYjI0Z1NtY29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCekxtNWhiV1VzSUdrZ1BTQnVMbXhsYm1kMGFEc0tJQ0FnSUdadmNpaFhieTVzWVhOMFNXNWtaWGdnUFNBd096c3Bld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdWMjh1WlhobFl5aHVLU3dnYnlBOUlGZHZMbXhoYzNSSmJtUmxlQ3dnWVNBOUlISmJNVjBzSUd3Z1BTQnlXekpkSUQwOVBTQWlYU0lzSUdNZ1BTQnlXek5kT3dvZ0lDQWdJQ0FnSUdsbUlDaHNJQ1ltSUNoaElEMGdZU0I4SURBcExDQmpJRDA5UFNCMmIybGtJREFnZkh3Z1l5QTlQVDBnSWxzaUlDWW1JRzhnS3lBeUlEMDlQU0JwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3RzS0hRc0lHTWdQVDA5SUhadmFXUWdNQ0EvSUc1bGR5QllaeWhoTENCekxDQmxLU0E2SUc1bGR5QmthQ2hoTENCekxDQmxLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2RDNXRZWEJiWVYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFVnUFQwOUlIWnZhV1FnTUNBbUppQW9kU0E5SUc1bGR5Qm1hQ2hoS1N3Z2Eyd29kQ3dnZFNrcExDQjBJRDBnZFRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1ltNG9jeXdnWlNrZ2V3b2dJQ0FnZEdocGN5NXpaWEVnUFNCYlhTd2dkR2hwY3k1dFlYQWdQU0I3ZlRzS0lDQWdJR3hsZENCMElEMGdjeTVuWlhSUWNtOW5jbUZ0VUdGeVlXMWxkR1Z5S0dVc0lETTFOekU0S1RzS0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0IwT3lBcksyNHBld29nSUNBZ0lDQWdJR3hsZENCcElEMGdjeTVuWlhSQlkzUnBkbVZWYm1sbWIzSnRLR1VzSUc0cExDQnlJRDBnY3k1blpYUlZibWxtYjNKdFRHOWpZWFJwYjI0b1pTd2dhUzV1WVcxbEtUc0tJQ0FnSUNBZ0lDQktaeWhwTENCeUxDQjBhR2x6S1RzS0lDQWdJSDBLZlFwaWJpNXdjbTkwYjNSNWNHVXVjMlYwVm1Gc2RXVWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWJXRndXMlZkT3dvZ0lDQWdhU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VjMlYwVm1Gc2RXVW9jeXdnZEN3Z2JpazdDbjA3Q21KdUxuQnliM1J2ZEhsd1pTNXpaWFJQY0hScGIyNWhiQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdaVnQwWFRzS0lDQWdJRzRnSVQwOUlIWnZhV1FnTUNBbUppQjBhR2x6TG5ObGRGWmhiSFZsS0hNc0lIUXNJRzRwT3dwOU93cGliaTUxY0d4dllXUWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnWlM1c1pXNW5kR2c3SUdrZ0lUMDlJSEk3SUNzcmFTbDdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxXMmxkTENCaElEMGdkRnR2TG1sa1hUc0tJQ0FnSUNBZ0lDQmhMbTVsWldSelZYQmtZWFJsSUNFOVBTQWhNU0FtSmlCdkxuTmxkRlpoYkhWbEtITXNJR0V1ZG1Gc2RXVXNJRzRwT3dvZ0lDQWdmUXA5T3dwaWJpNXpaWEZYYVhSb1ZtRnNkV1VnUFNCbWRXNWpkR2x2YmloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlITXViR1Z1WjNSb095QnVJQ0U5UFNCcE95QXJLMjRwZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYzF0dVhUc0tJQ0FnSUNBZ0lDQnlMbWxrSUdsdUlHVWdKaVlnZEM1d2RYTm9LSElwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhRN0NuMDdDbVoxYm1OMGFXOXVJRWRzS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdjeTVqY21WaGRHVlRhR0ZrWlhJb1pTazdDaUFnSUNCeVpYUjFjbTRnY3k1emFHRmtaWEpUYjNWeVkyVW9iaXdnZENrc0lITXVZMjl0Y0dsc1pWTm9ZV1JsY2lodUtTd2dianNLZlFwMllYSWdXV2NnUFNBd093cG1kVzVqZEdsdmJpQmFaeWh6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJSE11YzNCc2FYUW9ZQXBnS1RzS0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0JsTG14bGJtZDBhRHNnZENzcktXVmJkRjBnUFNCMElDc2dNU0FySUNJNklDSWdLeUJsVzNSZE93b2dJQ0FnY21WMGRYSnVJR1V1YW05cGJpaGdDbUFwT3dwOUNtWjFibU4wYVc5dUlIQm9LSE1wSUhzS0lDQWdJSE4zYVhSamFDaHpLWHNLSUNBZ0lDQWdJQ0JqWVhObElFNTBPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSWt4cGJtVmhjaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpS0NCMllXeDFaU0FwSWdvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR05oYzJVZ1QyazZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpYzFKSFFpSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlLQ0IyWVd4MVpTQXBJZ29nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVISnZaM0poYlRvZ1ZXNXpkWEJ3YjNKMFpXUWdaVzVqYjJScGJtYzZJaXdnY3lrc0lGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSk1hVzVsWVhJaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lpZ2dkbUZzZFdVZ0tTSUtJQ0FnSUNBZ0lDQWdJQ0FnWFRzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCV2JDaHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhNdVoyVjBVMmhoWkdWeVVHRnlZVzFsZEdWeUtHVXNJRE0xTnpFektTd2dhU0E5SUhNdVoyVjBVMmhoWkdWeVNXNW1iMHh2WnlobEtTNTBjbWx0S0NrN0NpQWdJQ0J5WlhSMWNtNGdiaUFtSmlCcElEMDlQU0FpSWlBL0lDSWlJRG9nZEM1MGIxVndjR1Z5UTJGelpTZ3BJQ3NnWUFvS1lDQXJJR2tnS3lCZ0NncGdJQ3NnV21jb2N5NW5aWFJUYUdGa1pYSlRiM1Z5WTJVb1pTa3BPd3A5Q21aMWJtTjBhVzl1SUVSdUtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdjR2dvWlNrN0NpQWdJQ0J5WlhSMWNtNGdJblpsWXpRZ0lpQXJJSE1nS3lBaUtDQjJaV00wSUhaaGJIVmxJQ2tnZXlCeVpYUjFjbTRnSWlBcklIUmJNRjBnS3lBaVZHOU1hVzVsWVhJaUlDc2dkRnN4WFNBcklDSTdJSDBpT3dwOUNtWjFibU4wYVc5dUlDUm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnY0dnb1pTazdDaUFnSUNCeVpYUjFjbTRnSW5abFl6UWdJaUFySUhNZ0t5QWlLQ0IyWldNMElIWmhiSFZsSUNrZ2V5QnlaWFIxY200Z1RHbHVaV0Z5Vkc4aUlDc2dkRnN3WFNBcklIUmJNVjBnS3lBaU95QjlJanNLZlFwbWRXNWpkR2x2YmlCcVp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2REc0tJQ0FnSUhOM2FYUmphQ2hsS1hzS0lDQWdJQ0FnSUNCallYTmxJRTUxT2dvZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnSWt4cGJtVmhjaUk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdRblU2Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0FpVW1WcGJtaGhjbVFpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCallYTmxJSHAxT2dvZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnSWs5d2RHbHRhWHBsWkVOcGJtVnZiaUk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdWWFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0FpUVVORlUwWnBiRzFwWXlJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnVDNVNkNpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNBaVEzVnpkRzl0SWpzS0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGQnliMmR5WVcwNklGVnVjM1Z3Y0c5eWRHVmtJSFJ2Ym1WTllYQndhVzVuT2lJc0lHVXBMQ0IwSUQwZ0lreHBibVZoY2lJN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z0luWmxZek1nSWlBcklITWdLeUFpS0NCMlpXTXpJR052Ykc5eUlDa2dleUJ5WlhSMWNtNGdJaUFySUhRZ0t5QWlWRzl1WlUxaGNIQnBibWNvSUdOdmJHOXlJQ2s3SUgwaU93cDlDbVoxYm1OMGFXOXVJRkZuS0hNcElIc0tJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnY3k1bGVIUmxibk5wYjI1RVpYSnBkbUYwYVhabGN5QjhmQ0J6TG1WdWRrMWhjRU4xWW1WVlZpQjhmQ0J6TG1KMWJYQk5ZWEFnZkh3Z2N5NTBZVzVuWlc1MFUzQmhZMlZPYjNKdFlXeE5ZWEFnZkh3Z2N5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdmSHdnY3k1bWJHRjBVMmhoWkdsdVp5QjhmQ0J6TG5Ob1lXUmxja2xFSUQwOVBTQWljR2g1YzJsallXd2lJRDhnSWlObGVIUmxibk5wYjI0Z1IweGZUMFZUWDNOMFlXNWtZWEprWDJSbGNtbDJZWFJwZG1WeklEb2daVzVoWW14bElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUNoekxtVjRkR1Z1YzJsdmJrWnlZV2RFWlhCMGFDQjhmQ0J6TG14dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSXBJQ1ltSUhNdWNtVnVaR1Z5WlhKRmVIUmxibk5wYjI1R2NtRm5SR1Z3ZEdnZ1B5QWlJMlY0ZEdWdWMybHZiaUJIVEY5RldGUmZabkpoWjE5a1pYQjBhQ0E2SUdWdVlXSnNaU0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQnpMbVY0ZEdWdWMybHZia1J5WVhkQ2RXWm1aWEp6SUNZbUlITXVjbVZ1WkdWeVpYSkZlSFJsYm5OcGIyNUVjbUYzUW5WbVptVnljeUEvSUNJalpYaDBaVzV6YVc5dUlFZE1YMFZZVkY5a2NtRjNYMkoxWm1abGNuTWdPaUJ5WlhGMWFYSmxJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lDaHpMbVY0ZEdWdWMybHZibE5vWVdSbGNsUmxlSFIxY21WTVQwUWdmSHdnY3k1bGJuWk5ZWEFnZkh3Z2N5NTBjbUZ1YzIxcGMzTnBiMjRwSUNZbUlITXVjbVZ1WkdWeVpYSkZlSFJsYm5OcGIyNVRhR0ZrWlhKVVpYaDBkWEpsVEc5a0lEOGdJaU5sZUhSbGJuTnBiMjRnUjB4ZlJWaFVYM05vWVdSbGNsOTBaWGgwZFhKbFgyeHZaQ0E2SUdWdVlXSnNaU0lnT2lBaUlnb2dJQ0FnWFM1bWFXeDBaWElvY25JcExtcHZhVzRvWUFwZ0tUc0tmUXBtZFc1amRHbHZiaUJMWnloektTQjdDaUFnSUNCc1pYUWdaU0E5SUZ0ZE93b2dJQ0FnWm05eUtHeGxkQ0IwSUdsdUlITXBld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdjMXQwWFRzS0lDQWdJQ0FnSUNCdUlDRTlQU0FoTVNBbUppQmxMbkIxYzJnb0lpTmtaV1pwYm1VZ0lpQXJJSFFnS3lBaUlDSWdLeUJ1S1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbExtcHZhVzRvWUFwZ0tUc0tmUXBtZFc1amRHbHZiaUJsZUNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIdDlMQ0J1SUQwZ2N5NW5aWFJRY205bmNtRnRVR0Z5WVcxbGRHVnlLR1VzSURNMU56SXhLVHNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQnVPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2N5NW5aWFJCWTNScGRtVkJkSFJ5YVdJb1pTd2dhU2tzSUc4Z1BTQnlMbTVoYldVc0lHRWdQU0F4T3dvZ0lDQWdJQ0FnSUhJdWRIbHdaU0E5UFQwZ016VTJOelFnSmlZZ0tHRWdQU0F5S1N3Z2NpNTBlWEJsSUQwOVBTQXpOVFkzTlNBbUppQW9ZU0E5SURNcExDQnlMblI1Y0dVZ1BUMDlJRE0xTmpjMklDWW1JQ2hoSUQwZ05Da3NJSFJiYjEwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSEl1ZEhsd1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYkc5allYUnBiMjQ2SUhNdVoyVjBRWFIwY21saVRHOWpZWFJwYjI0b1pTd2dieWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHeHZZMkYwYVc5dVUybDZaVG9nWVFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2REc0tmUXBtZFc1amRHbHZiaUJ5Y2loektTQjdDaUFnSUNCeVpYUjFjbTRnY3lBaFBUMGdJaUk3Q24wS1puVnVZM1JwYjI0Z1Yyd29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE11Y21Wd2JHRmpaU2d2VGxWTlgwUkpVbDlNU1VkSVZGTXZaeXdnWlM1dWRXMUVhWEpNYVdkb2RITXBMbkpsY0d4aFkyVW9MMDVWVFY5VFVFOVVYMHhKUjBoVVV5OW5MQ0JsTG01MWJWTndiM1JNYVdkb2RITXBMbkpsY0d4aFkyVW9MMDVWVFY5U1JVTlVYMEZTUlVGZlRFbEhTRlJUTDJjc0lHVXViblZ0VW1WamRFRnlaV0ZNYVdkb2RITXBMbkpsY0d4aFkyVW9MMDVWVFY5UVQwbE9WRjlNU1VkSVZGTXZaeXdnWlM1dWRXMVFiMmx1ZEV4cFoyaDBjeWt1Y21Wd2JHRmpaU2d2VGxWTlgwaEZUVWxmVEVsSFNGUlRMMmNzSUdVdWJuVnRTR1Z0YVV4cFoyaDBjeWt1Y21Wd2JHRmpaU2d2VGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVEwyY3NJR1V1Ym5WdFJHbHlUR2xuYUhSVGFHRmtiM2R6S1M1eVpYQnNZV05sS0M5T1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRMMmNzSUdVdWJuVnRVM0J2ZEV4cFoyaDBVMmhoWkc5M2N5a3VjbVZ3YkdGalpTZ3ZUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNdlp5d2daUzV1ZFcxUWIybHVkRXhwWjJoMFUyaGhaRzkzY3lrN0NuMEtablZ1WTNScGIyNGdjV3dvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNdWNtVndiR0ZqWlNndlRsVk5YME5NU1ZCUVNVNUhYMUJNUVU1RlV5OW5MQ0JsTG01MWJVTnNhWEJ3YVc1blVHeGhibVZ6S1M1eVpYQnNZV05sS0M5VlRrbFBUbDlEVEVsUVVFbE9SMTlRVEVGT1JWTXZaeXdnWlM1dWRXMURiR2x3Y0dsdVoxQnNZVzVsY3lBdElHVXViblZ0UTJ4cGNFbHVkR1Z5YzJWamRHbHZiaWs3Q24wS2RtRnlJSFI0SUQwZ0wxNWJJRngwWFNvamFXNWpiSFZrWlNBclBDaGJYSGRjWkM0dlhTc3BQaTluYlRzS1puVnVZM1JwYjI0Z2NtRW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlITXVjbVZ3YkdGalpTaDBlQ3dnYm5ncE93cDlDbVoxYm1OMGFXOXVJRzU0S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ1JtVmJaVjA3Q2lBZ0lDQnBaaUFvZENBOVBUMGdkbTlwWkNBd0tTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lrTmhiaUJ1YjNRZ2NtVnpiMngyWlNBamFXNWpiSFZrWlNBOElpQXJJR1VnS3lBaVBpSXBPd29nSUNBZ2NtVjBkWEp1SUhKaEtIUXBPd3A5Q25aaGNpQnBlQ0E5SUM4amNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1cxeHpYU3MvWm05eUlGd29JR2x1ZENCcElGdzlJQ2hjWkNzcFhEc2dhU0E4SUNoY1pDc3BYRHNnYVNCY0sxd3JJRndwSUZ4N0tGdGNjMXhUWFNzL0tTZy9QVng5S1Z4OUwyY3NJSEo0SUQwZ0x5TndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25SY2N5dG1iM0pjY3lwY0tGeHpLbWx1ZEZ4eksybGNjeW85WEhNcUtGeGtLeWxjY3lvN1hITXFhVnh6S2p4Y2N5b29YR1FyS1Z4ektqdGNjeXBwWEhNcVhDdGNLMXh6S2x3cFhITXFleWhiWEhOY1UxMHJQeWw5WEhNckkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVF2WnpzS1puVnVZM1JwYjI0Z1dHd29jeWtnZXdvZ0lDQWdjbVYwZFhKdUlITXVjbVZ3YkdGalpTaHllQ3dnYldncExuSmxjR3hoWTJVb2FYZ3NJSE40S1RzS2ZRcG1kVzVqZEdsdmJpQnplQ2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKWFpXSkhURkJ5YjJkeVlXMDZJQ053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0FnYzJoaFpHVnlJSE41Ym5SaGVDQnBjeUJrWlhCeVpXTmhkR1ZrTGlCUWJHVmhjMlVnZFhObElDTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RZ2MzbHVkR0Y0SUdsdWMzUmxZV1F1SWlrc0lHMW9LSE1zSUdVc0lIUXNJRzRwT3dwOUNtWjFibU4wYVc5dUlHMW9LSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdJaUk3Q2lBZ0lDQm1iM0lvYkdWMElISWdQU0J3WVhKelpVbHVkQ2hsS1RzZ2NpQThJSEJoY25ObFNXNTBLSFFwT3lCeUt5c3BhU0FyUFNCdUxuSmxjR3hoWTJVb0wxeGJYSE1xYVZ4ektseGRMMmNzSUNKYklDSWdLeUJ5SUNzZ0lpQmRJaWt1Y21Wd2JHRmpaU2d2VlU1U1QweE1SVVJmVEU5UFVGOUpUa1JGV0M5bkxDQnlLVHNLSUNBZ0lISmxkSFZ5YmlCcE93cDlDbVoxYm1OMGFXOXVJRXBzS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnSW5CeVpXTnBjMmx2YmlBaUlDc2djeTV3Y21WamFYTnBiMjRnS3lCZ0lHWnNiMkYwT3dwd2NtVmphWE5wYjI0Z1lDQXJJSE11Y0hKbFkybHphVzl1SUNzZ0lpQnBiblE3SWpzS0lDQWdJSEpsZEhWeWJpQnpMbkJ5WldOcGMybHZiaUE5UFQwZ0ltaHBaMmh3SWlBL0lHVWdLejBnWUFvalpHVm1hVzVsSUVoSlIwaGZVRkpGUTBsVFNVOU9ZQ0E2SUhNdWNISmxZMmx6YVc5dUlEMDlQU0FpYldWa2FYVnRjQ0lnUHlCbElDczlJR0FLSTJSbFptbHVaU0JOUlVSSlZVMWZVRkpGUTBsVFNVOU9ZQ0E2SUhNdWNISmxZMmx6YVc5dUlEMDlQU0FpYkc5M2NDSWdKaVlnS0dVZ0t6MGdZQW9qWkdWbWFXNWxJRXhQVjE5UVVrVkRTVk5KVDA1Z0tTd2daVHNLZlFwbWRXNWpkR2x2YmlCdmVDaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlDSlRTRUZFVDFkTlFWQmZWRmxRUlY5Q1FWTkpReUk3Q2lBZ0lDQnlaWFIxY200Z2N5NXphR0ZrYjNkTllYQlVlWEJsSUQwOVBTQklZeUEvSUdVZ1BTQWlVMGhCUkU5WFRVRlFYMVJaVUVWZlVFTkdJaUE2SUhNdWMyaGhaRzkzVFdGd1ZIbHdaU0E5UFQwZ1puVWdQeUJsSUQwZ0lsTklRVVJQVjAxQlVGOVVXVkJGWDFCRFJsOVRUMFpVSWlBNklITXVjMmhoWkc5M1RXRndWSGx3WlNBOVBUMGdhWElnSmlZZ0tHVWdQU0FpVTBoQlJFOVhUVUZRWDFSWlVFVmZWbE5OSWlrc0lHVTdDbjBLWm5WdVkzUnBiMjRnWVhnb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNBaVJVNVdUVUZRWDFSWlVFVmZRMVZDUlNJN0NpQWdJQ0JwWmlBb2N5NWxiblpOWVhBcElITjNhWFJqYUNoekxtVnVkazFoY0UxdlpHVXBld29nSUNBZ0lDQWdJR05oYzJVZ1FtazZDaUFnSUNBZ0lDQWdZMkZ6WlNCNmFUb0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlDSkZUbFpOUVZCZlZGbFFSVjlEVlVKRklqc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdZMkZ6WlNCUWNqb0tJQ0FnSUNBZ0lDQmpZWE5sSUZkek9nb2dJQ0FnSUNBZ0lDQWdJQ0JsSUQwZ0lrVk9WazFCVUY5VVdWQkZYME5WUWtWZlZWWWlPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsT3dwOUNtWjFibU4wYVc5dUlHeDRLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdJa1ZPVmsxQlVGOU5UMFJGWDFKRlJreEZRMVJKVDA0aU93b2dJQ0FnYVdZZ0tITXVaVzUyVFdGd0tTQnpkMmwwWTJnb2N5NWxiblpOWVhCTmIyUmxLWHNLSUNBZ0lDQWdJQ0JqWVhObElIcHBPZ29nSUNBZ0lDQWdJR05oYzJVZ1YzTTZDaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQWlSVTVXVFVGUVgwMVBSRVZmVWtWR1VrRkRWRWxQVGlJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVTdDbjBLWm5WdVkzUnBiMjRnWTNnb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNBaVJVNVdUVUZRWDBKTVJVNUVTVTVIWDA1UFRrVWlPd29nSUNBZ2FXWWdLSE11Wlc1MlRXRndLU0J6ZDJsMFkyZ29jeTVqYjIxaWFXNWxLWHNLSUNBZ0lDQWdJQ0JqWVhObElGWnpPZ29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdJa1ZPVmsxQlVGOUNURVZPUkVsT1IxOU5WVXhVU1ZCTVdTSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ1JIVTZDaUFnSUNBZ0lDQWdJQ0FnSUdVZ1BTQWlSVTVXVFVGUVgwSk1SVTVFU1U1SFgwMUpXQ0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdSblU2Q2lBZ0lDQWdJQ0FnSUNBZ0lHVWdQU0FpUlU1V1RVRlFYMEpNUlU1RVNVNUhYMEZFUkNJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVTdDbjBLWm5WdVkzUnBiMjRnYUhnb2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCekxtZGxkRU52Ym5SbGVIUW9LU3dnY2lBOUlIUXVaR1ZtYVc1bGN5d2dieUE5SUhRdWRtVnlkR1Y0VTJoaFpHVnlMQ0JoSUQwZ2RDNW1jbUZuYldWdWRGTm9ZV1JsY2l3Z2JDQTlJRzk0S0hRcExDQmpJRDBnWVhnb2RDa3NJR2dnUFNCc2VDaDBLU3dnZFNBOUlHTjRLSFFwTENCa0lEMGdkQzVwYzFkbFlrZE1NaUEvSUNJaUlEb2dVV2NvZENrc0lHWWdQU0JMWnloeUtTd2diU0E5SUdrdVkzSmxZWFJsVUhKdlozSmhiU2dwTENCNExDQjJMQ0JuSUQwZ2RDNW5iSE5zVm1WeWMybHZiaUEvSUNJamRtVnljMmx2YmlBaUlDc2dkQzVuYkhOc1ZtVnljMmx2YmlBcklHQUtZQ0E2SUNJaU93b2dJQ0FnZEM1cGMxSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc0lEOGdLSGdnUFNCYkNpQWdJQ0FnSUNBZ1pnb2dJQ0FnWFM1bWFXeDBaWElvY25JcExtcHZhVzRvWUFwZ0tTd2dlQzVzWlc1bmRHZ2dQaUF3SUNZbUlDaDRJQ3M5SUdBS1lDa3NJSFlnUFNCYkNpQWdJQ0FnSUNBZ1pDd0tJQ0FnSUNBZ0lDQm1DaUFnSUNCZExtWnBiSFJsY2loeWNpa3VhbTlwYmloZ0NtQXBMQ0IyTG14bGJtZDBhQ0ErSURBZ0ppWWdLSFlnS3owZ1lBcGdLU2tnT2lBb2VDQTlJRnNLSUNBZ0lDQWdJQ0JLYkNoMEtTd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQlRTRUZFUlZKZlRrRk5SU0FpSUNzZ2RDNXphR0ZrWlhKT1lXMWxMQW9nSUNBZ0lDQWdJR1lzQ2lBZ0lDQWdJQ0FnZEM1cGJuTjBZVzVqYVc1bklEOGdJaU5rWldacGJtVWdWVk5GWDBsT1UxUkJUa05KVGtjaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1cGJuTjBZVzVqYVc1blEyOXNiM0lnUHlBaUkyUmxabWx1WlNCVlUwVmZTVTVUVkVGT1EwbE9SMTlEVDB4UFVpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTjFjSEJ2Y25SelZtVnlkR1Y0VkdWNGRIVnlaWE1nUHlBaUkyUmxabWx1WlNCV1JWSlVSVmhmVkVWWVZGVlNSVk1pSURvZ0lpSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdUVUZZWDBKUFRrVlRJQ0lnS3lCMExtMWhlRUp2Ym1WekxBb2dJQ0FnSUNBZ0lIUXVkWE5sUm05bklDWW1JSFF1Wm05bklEOGdJaU5rWldacGJtVWdWVk5GWDBaUFJ5SWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuVnpaVVp2WnlBbUppQjBMbVp2WjBWNGNESWdQeUFpSTJSbFptbHVaU0JHVDBkZlJWaFFNaUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJuWk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZSVTVXVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpXNTJUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ0lpQXJJR2dnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbXhwWjJoMFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgweEpSMGhVVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVlXOU5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRVTlOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJXbHpjMmwyWlUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5RlRVbFRVMGxXUlUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtSjFiWEJOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUWxWTlVFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTV2Y20xaGJFMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOU9UMUpOUVV4TlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXViM0p0WVd4TllYQWdKaVlnZEM1dlltcGxZM1JUY0dGalpVNXZjbTFoYkUxaGNDQS9JQ0lqWkdWbWFXNWxJRTlDU2tWRFZGTlFRVU5GWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG01dmNtMWhiRTFoY0NBbUppQjBMblJoYm1kbGJuUlRjR0ZqWlU1dmNtMWhiRTFoY0NBL0lDSWpaR1ZtYVc1bElGUkJUa2RGVGxSVFVFRkRSVjlPVDFKTlFVeE5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVqYkdWaGNtTnZZWFJOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTB4RlFWSkRUMEZVVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwTk1SVUZTUTA5QlZGOVNUMVZIU0U1RlUxTk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUIwTG5OMWNIQnZjblJ6Vm1WeWRHVjRWR1Y0ZEhWeVpYTWdQeUFpSTJSbFptbHVaU0JWVTBWZlJFbFRVRXhCUTBWTlJVNVVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzNCbFkzVnNZWEpOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTFCRlExVk1RVkpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFVFVkRWVXhCVWtsT1ZFVk9VMGxVV1UxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTFCRlExVk1RVkpEVDB4UFVrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbkp2ZFdkb2JtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlTVDFWSFNFNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dFpYUmhiRzVsYzNOTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRVVlVRVXhPUlZOVFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZV3h3YUdGTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFVeFFTRUZOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MGNtRnVjMjFwYzNOcGIyNGdQeUFpSTJSbFptbHVaU0JWVTBWZlZGSkJUbE5OU1ZOVFNVOU9JaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkSEpoYm5OdGFYTnphVzl1VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFSU1FVNVRUVWxUVTBsUFRrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblJvYVdOcmJtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlVU0VsRFMwNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHVmxia052Ykc5eVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTklSVVZPUTA5TVQxSk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRTRVZGVGxKUFZVZElUa1ZUVTAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuWmxjblJsZUZSaGJtZGxiblJ6SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVJCVGtkRlRsUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoRGIyeHZjbk1nUHlBaUkyUmxabWx1WlNCVlUwVmZRMDlNVDFJaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhCYkhCb1lYTWdQeUFpSTJSbFptbHVaU0JWVTBWZlEwOU1UMUpmUVV4UVNFRWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoVmRuTWdQeUFpSTJSbFptbHVaU0JWVTBWZlZWWWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTFkbk5XWlhKMFpYaFBibXg1SUQ4Z0lpTmtaV1pwYm1VZ1ZWWlRYMVpGVWxSRldGOVBUa3haSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wm14aGRGTm9ZV1JwYm1jZ1B5QWlJMlJsWm1sdVpTQkdURUZVWDFOSVFVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5yYVc1dWFXNW5JRDhnSWlOa1pXWnBibVVnVlZORlgxTkxTVTVPU1U1SElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRYTmxWbVZ5ZEdWNFZHVjRkSFZ5WlNBL0lDSWpaR1ZtYVc1bElFSlBUa1ZmVkVWWVZGVlNSU0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTF2Y25Cb1ZHRnlaMlYwY3lBL0lDSWpaR1ZtYVc1bElGVlRSVjlOVDFKUVNGUkJVa2RGVkZNaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1dGIzSndhRTV2Y20xaGJITWdKaVlnZEM1bWJHRjBVMmhoWkdsdVp5QTlQVDBnSVRFZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVFU5U1VFaE9UMUpOUVV4VElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJXOXljR2hVWVhKblpYUnpJQ1ltSUhRdWFYTlhaV0pIVERJZ1B5QWlJMlJsWm1sdVpTQk5UMUpRU0ZSQlVrZEZWRk5mVkVWWVZGVlNSU0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTF2Y25Cb1ZHRnlaMlYwY3lBbUppQjBMbWx6VjJWaVIwd3lJRDhnSWlOa1pXWnBibVVnVFU5U1VFaFVRVkpIUlZSVFgwTlBWVTVVSUNJZ0t5QjBMbTF2Y25Cb1ZHRnlaMlYwYzBOdmRXNTBJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWtiM1ZpYkdWVGFXUmxaQ0EvSUNJalpHVm1hVzVsSUVSUFZVSk1SVjlUU1VSRlJDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtWnNhWEJUYVdSbFpDQS9JQ0lqWkdWbWFXNWxJRVpNU1ZCZlUwbEVSVVFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6YUdGa2IzZE5ZWEJGYm1GaWJHVmtJRDhnSWlOa1pXWnBibVVnVlZORlgxTklRVVJQVjAxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTm9ZV1J2ZDAxaGNFVnVZV0pzWldRZ1B5QWlJMlJsWm1sdVpTQWlJQ3NnYkNBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDhnSWlOa1pXWnBibVVnVlZORlgxTkpXa1ZCVkZSRlRsVkJWRWxQVGlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG14dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSWdQeUFpSTJSbFptbHVaU0JWVTBWZlRFOUhSRVZRVkVoQ1ZVWWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXNiMmRoY21sMGFHMXBZMFJsY0hSb1FuVm1abVZ5SUNZbUlIUXVjbVZ1WkdWeVpYSkZlSFJsYm5OcGIyNUdjbUZuUkdWd2RHZ2dQeUFpSTJSbFptbHVaU0JWVTBWZlRFOUhSRVZRVkVoQ1ZVWmZSVmhVSWlBNklDSWlMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJRzFoZERRZ2JXOWtaV3hOWVhSeWFYZzdJaXdLSUNBZ0lDQWdJQ0FpZFc1cFptOXliU0J0WVhRMElHMXZaR1ZzVm1sbGQwMWhkSEpwZURzaUxBb2dJQ0FnSUNBZ0lDSjFibWxtYjNKdElHMWhkRFFnY0hKdmFtVmpkR2x2YmsxaGRISnBlRHNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUcxaGREUWdkbWxsZDAxaGRISnBlRHNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUcxaGRETWdibTl5YldGc1RXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2RtVmpNeUJqWVcxbGNtRlFiM05wZEdsdmJqc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJR0p2YjJ3Z2FYTlBjblJvYjJkeVlYQm9hV003SWl3S0lDQWdJQ0FnSUNBaUkybG1aR1ZtSUZWVFJWOUpUbE5VUVU1RFNVNUhJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCdFlYUTBJR2x1YzNSaGJtTmxUV0YwY21sNE95SXNDaUFnSUNBZ0lDQWdJaU5sYm1ScFppSXNDaUFnSUNBZ0lDQWdJaU5wWm1SbFppQlZVMFZmU1U1VFZFRk9RMGxPUjE5RFQweFBVaUlzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpNeUJwYm5OMFlXNWpaVU52Ykc5eU95SXNDaUFnSUNBZ0lDQWdJaU5sYm1ScFppSXNDaUFnSUNBZ0lDQWdJbUYwZEhKcFluVjBaU0IyWldNeklIQnZjMmwwYVc5dU95SXNDaUFnSUNBZ0lDQWdJbUYwZEhKcFluVjBaU0IyWldNeklHNXZjbTFoYkRzaUxBb2dJQ0FnSUNBZ0lDSmhkSFJ5YVdKMWRHVWdkbVZqTWlCMWRqc2lMQW9nSUNBZ0lDQWdJQ0lqYVdaa1pXWWdWVk5GWDFSQlRrZEZUbFFpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZelFnZEdGdVoyVnVkRHNpTEFvZ0lDQWdJQ0FnSUNJalpXNWthV1lpTEFvZ0lDQWdJQ0FnSUNJamFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNYMEZNVUVoQklDa2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6UWdZMjlzYjNJN0lpd0tJQ0FnSUNBZ0lDQWlJMlZzYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U0lDa2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6TWdZMjlzYjNJN0lpd0tJQ0FnSUNBZ0lDQWlJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQWlJMmxtSUNnZ1pHVm1hVzVsWkNnZ1ZWTkZYMDFQVWxCSVZFRlNSMFZVVXlBcElDWW1JQ0VnWkdWbWFXNWxaQ2dnVFU5U1VFaFVRVkpIUlZSVFgxUkZXRlJWVWtVZ0tTQXBJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTURzaUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpNZ2JXOXljR2hVWVhKblpYUXhPeUlzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpNeUJ0YjNKd2FGUmhjbWRsZERJN0lpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVkdGeVoyVjBNenNpTEFvZ0lDQWdJQ0FnSUNJSkkybG1aR1ZtSUZWVFJWOU5UMUpRU0U1UFVrMUJURk1pTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9UbTl5YldGc01Ec2lMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1RtOXliV0ZzTVRzaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVG05eWJXRnNNanNpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9UbTl5YldGc016c2lMQW9nSUNBZ0lDQWdJQ0lKSTJWc2MyVWlMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTkRzaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVkdGeVoyVjBOVHNpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME5qc2lMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTnpzaUxBb2dJQ0FnSUNBZ0lDSUpJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQWlJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQWlJMmxtWkdWbUlGVlRSVjlUUzBsT1RrbE9SeUlzQ2lBZ0lDQWdJQ0FnSWdsaGRIUnlhV0oxZEdVZ2RtVmpOQ0J6YTJsdVNXNWtaWGc3SWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV00wSUhOcmFXNVhaV2xuYUhRN0lpd0tJQ0FnSUNBZ0lDQWlJMlZ1WkdsbUlpd0tJQ0FnSUNBZ0lDQmdDbUFLSUNBZ0lGMHVabWxzZEdWeUtISnlLUzVxYjJsdUtHQUtZQ2tzSUhZZ1BTQmJDaUFnSUNBZ0lDQWdaQ3dLSUNBZ0lDQWdJQ0JLYkNoMEtTd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQlRTRUZFUlZKZlRrRk5SU0FpSUNzZ2RDNXphR0ZrWlhKT1lXMWxMQW9nSUNBZ0lDQWdJR1lzQ2lBZ0lDQWdJQ0FnZEM1MWMyVkdiMmNnSmlZZ2RDNW1iMmNnUHlBaUkyUmxabWx1WlNCVlUwVmZSazlISWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZFhObFJtOW5JQ1ltSUhRdVptOW5SWGh3TWlBL0lDSWpaR1ZtYVc1bElFWlBSMTlGV0ZBeUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbTFoZEdOaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlFWUkRRVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlJVNVdUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wlc1MlRXRndJRDhnSWlOa1pXWnBibVVnSWlBcklHTWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtVnVkazFoY0NBL0lDSWpaR1ZtYVc1bElDSWdLeUJvSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVsYm5aTllYQWdQeUFpSTJSbFptbHVaU0FpSUNzZ2RTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJHbG5hSFJOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVEVsSFNGUk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVoYjAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5QlQwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVZ0YVhOemFYWmxUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMFZOU1ZOVFNWWkZUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WW5WdGNFMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUNWVTFRVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJtOXliV0ZzVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG01dmNtMWhiRTFoY0NBbUppQjBMbTlpYW1WamRGTndZV05sVG05eWJXRnNUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1QwSktSVU5VVTFCQlEwVmZUazlTVFVGTVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVibTl5YldGc1RXRndJQ1ltSUhRdWRHRnVaMlZ1ZEZOd1lXTmxUbTl5YldGc1RXRndJRDhnSWlOa1pXWnBibVVnVkVGT1IwVk9WRk5RUVVORlgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtTnNaV0Z5WTI5aGRDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5RFRFVkJVa05QUVZRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1amJHVmhjbU52WVhSTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlEweEZRVkpEVDBGVVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYME5NUlVGU1EwOUJWRjlTVDFWSFNFNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTB4RlFWSkRUMEZVWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Od1pXTjFiR0Z5VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFOUVJVTlZURUZTVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUxQkZRMVZNUVZKSlRsUkZUbE5KVkZsTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFOUVJVTlZURUZTUTA5TVQxSk5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV5YjNWbmFHNWxjM05OWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVWs5VlIwaE9SVk5UVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJXVjBZV3h1WlhOelRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwMUZWRUZNVGtWVFUwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbUZzY0doaFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwRk1VRWhCVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVlXeHdhR0ZVWlhOMElEOGdJaU5rWldacGJtVWdWVk5GWDBGTVVFaEJWRVZUVkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Ob1pXVnVJRDhnSWlOa1pXWnBibVVnVlZORlgxTklSVVZPSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJobFpXNURiMnh2Y2sxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VFNFVkZUa05QVEU5U1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEZSVTVTVDFWSFNFNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MGNtRnVjMjFwYzNOcGIyNGdQeUFpSTJSbFptbHVaU0JWVTBWZlZGSkJUbE5OU1ZOVFNVOU9JaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkSEpoYm5OdGFYTnphVzl1VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDFSU1FVNVRUVWxUVTBsUFRrMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblJvYVdOcmJtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlVU0VsRFMwNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1MlpYSjBaWGhVWVc1blpXNTBjeUEvSUNJalpHVm1hVzVsSUZWVFJWOVVRVTVIUlU1VUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRtVnlkR1Y0UTI5c2IzSnpJSHg4SUhRdWFXNXpkR0Z1WTJsdVowTnZiRzl5SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYME5QVEU5U0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRtVnlkR1Y0UVd4d2FHRnpJRDhnSWlOa1pXWnBibVVnVlZORlgwTlBURTlTWDBGTVVFaEJJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFZYWnpJRDhnSWlOa1pXWnBibVVnVlZORlgxVldJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkWFp6Vm1WeWRHVjRUMjVzZVNBL0lDSWpaR1ZtYVc1bElGVldVMTlXUlZKVVJWaGZUMDVNV1NJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1keVlXUnBaVzUwVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBkU1FVUkpSVTVVVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpteGhkRk5vWVdScGJtY2dQeUFpSTJSbFptbHVaU0JHVEVGVVgxTklRVVJGUkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1SdmRXSnNaVk5wWkdWa0lEOGdJaU5rWldacGJtVWdSRTlWUWt4RlgxTkpSRVZFSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wm14cGNGTnBaR1ZrSUQ4Z0lpTmtaV1pwYm1VZ1JreEpVRjlUU1VSRlJDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTm9ZV1J2ZDAxaGNFVnVZV0pzWldRZ1B5QWlJMlJsWm1sdVpTQlZVMFZmVTBoQlJFOVhUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJoaFpHOTNUV0Z3Ulc1aFlteGxaQ0EvSUNJalpHVm1hVzVsSUNJZ0t5QnNJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXdjbVZ0ZFd4MGFYQnNhV1ZrUVd4d2FHRWdQeUFpSTJSbFptbHVaU0JRVWtWTlZVeFVTVkJNU1VWRVgwRk1VRWhCSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Y0doNWMybGpZV3hzZVVOdmNuSmxZM1JNYVdkb2RITWdQeUFpSTJSbFptbHVaU0JRU0ZsVFNVTkJURXhaWDBOUFVsSkZRMVJmVEVsSFNGUlRJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViRzluWVhKcGRHaHRhV05FWlhCMGFFSjFabVpsY2lBL0lDSWpaR1ZtYVc1bElGVlRSVjlNVDBkRVJWQlVTRUpWUmlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG14dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSWdKaVlnZEM1eVpXNWtaWEpsY2tWNGRHVnVjMmx2YmtaeVlXZEVaWEIwYUNBL0lDSWpaR1ZtYVc1bElGVlRSVjlNVDBkRVJWQlVTRUpWUmw5RldGUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ0tIUXVaWGgwWlc1emFXOXVVMmhoWkdWeVZHVjRkSFZ5WlV4UFJDQjhmQ0IwTG1WdWRrMWhjQ2tnSmlZZ2RDNXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJsTm9ZV1JsY2xSbGVIUjFjbVZNYjJRZ1B5QWlJMlJsWm1sdVpTQlVSVmhVVlZKRlgweFBSRjlGV0ZRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnYldGME5DQjJhV1YzVFdGMGNtbDRPeUlzQ2lBZ0lDQWdJQ0FnSW5WdWFXWnZjbTBnZG1Wak15QmpZVzFsY21GUWIzTnBkR2x2YmpzaUxBb2dJQ0FnSUNBZ0lDSjFibWxtYjNKdElHSnZiMndnYVhOUGNuUm9iMmR5WVhCb2FXTTdJaXdLSUNBZ0lDQWdJQ0IwTG5SdmJtVk5ZWEJ3YVc1bklDRTlQU0JmYmlBL0lDSWpaR1ZtYVc1bElGUlBUa1ZmVFVGUVVFbE9SeUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblJ2Ym1WTllYQndhVzVuSUNFOVBTQmZiaUEvSUVabExuUnZibVZ0WVhCd2FXNW5YM0JoY25OZlpuSmhaMjFsYm5RZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5SdmJtVk5ZWEJ3YVc1bklDRTlQU0JmYmlBL0lHcG5LQ0owYjI1bFRXRndjR2x1WnlJc0lIUXVkRzl1WlUxaGNIQnBibWNwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVrYVhSb1pYSnBibWNnUHlBaUkyUmxabWx1WlNCRVNWUklSVkpKVGtjaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bWIzSnRZWFFnUFQwOUlFZHVJRDhnSWlOa1pXWnBibVVnVDFCQlVWVkZJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lFWmxMbVZ1WTI5a2FXNW5jMTl3WVhKelgyWnlZV2R0Wlc1MExBb2dJQ0FnSUNBZ0lIUXViV0Z3SUQ4Z1JHNG9JbTFoY0ZSbGVHVnNWRzlNYVc1bFlYSWlMQ0IwTG0xaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJXRjBZMkZ3SUQ4Z1JHNG9JbTFoZEdOaGNGUmxlR1ZzVkc5TWFXNWxZWElpTENCMExtMWhkR05oY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Wlc1MlRXRndJRDhnUkc0b0ltVnVkazFoY0ZSbGVHVnNWRzlNYVc1bFlYSWlMQ0IwTG1WdWRrMWhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaVzFwYzNOcGRtVk5ZWEFnUHlCRWJpZ2laVzFwYzNOcGRtVk5ZWEJVWlhobGJGUnZUR2x1WldGeUlpd2dkQzVsYldsemMybDJaVTFoY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0EvSUVSdUtDSnpjR1ZqZFd4aGNrTnZiRzl5VFdGd1ZHVjRaV3hVYjB4cGJtVmhjaUlzSUhRdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJobFpXNURiMnh2Y2sxaGNDQS9JRVJ1S0NKemFHVmxia052Ykc5eVRXRndWR1Y0Wld4VWIweHBibVZoY2lJc0lIUXVjMmhsWlc1RGIyeHZjazFoY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YkdsbmFIUk5ZWEFnUHlCRWJpZ2liR2xuYUhSTllYQlVaWGhsYkZSdlRHbHVaV0Z5SWl3Z2RDNXNhV2RvZEUxaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUNSbktDSnNhVzVsWVhKVWIwOTFkSEIxZEZSbGVHVnNJaXdnZEM1dmRYUndkWFJGYm1OdlpHbHVaeWtzQ2lBZ0lDQWdJQ0FnZEM1a1pYQjBhRkJoWTJ0cGJtY2dQeUFpSTJSbFptbHVaU0JFUlZCVVNGOVFRVU5MU1U1SElDSWdLeUIwTG1SbGNIUm9VR0ZqYTJsdVp5QTZJQ0lpTEFvZ0lDQWdJQ0FnSUdBS1lBb2dJQ0FnWFM1bWFXeDBaWElvY25JcExtcHZhVzRvWUFwZ0tTa3NJRzhnUFNCeVlTaHZLU3dnYnlBOUlGZHNLRzhzSUhRcExDQnZJRDBnY1d3b2J5d2dkQ2tzSUdFZ1BTQnlZU2hoS1N3Z1lTQTlJRmRzS0dFc0lIUXBMQ0JoSUQwZ2NXd29ZU3dnZENrc0lHOGdQU0JZYkNodktTd2dZU0E5SUZoc0tHRXBMQ0IwTG1selYyVmlSMHd5SUNZbUlIUXVhWE5TWVhkVGFHRmtaWEpOWVhSbGNtbGhiQ0FoUFQwZ0lUQWdKaVlnS0djZ1BTQmdJM1psY25OcGIyNGdNekF3SUdWekNtQXNJSGdnUFNCYkNpQWdJQ0FnSUNBZ0luQnlaV05wYzJsdmJpQnRaV1JwZFcxd0lITmhiWEJzWlhJeVJFRnljbUY1T3lJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ1lYUjBjbWxpZFhSbElHbHVJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IyWVhKNWFXNW5JRzkxZENJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RHVjRkSFZ5WlRKRUlIUmxlSFIxY21VaUNpQWdJQ0JkTG1wdmFXNG9ZQXBnS1NBcklHQUtZQ0FySUhnc0lIWWdQU0JiQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZG1GeWVXbHVaeUJwYmlJc0NpQWdJQ0FnSUNBZ2RDNW5iSE5zVm1WeWMybHZiaUE5UFQwZ2VHd2dQeUFpSWlBNklDSnNZWGx2ZFhRb2JHOWpZWFJwYjI0Z1BTQXdLU0J2ZFhRZ2FHbG5hSEFnZG1Wak5DQndZMTltY21GblEyOXNiM0k3SWl3S0lDQWdJQ0FnSUNCMExtZHNjMnhXWlhKemFXOXVJRDA5UFNCNGJDQS9JQ0lpSURvZ0lpTmtaV1pwYm1VZ1oyeGZSbkpoWjBOdmJHOXlJSEJqWDJaeVlXZERiMnh2Y2lJc0NpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ1oyeGZSbkpoWjBSbGNIUm9SVmhVSUdkc1gwWnlZV2RFWlhCMGFDSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdkR1Y0ZEhWeVpUSkVJSFJsZUhSMWNtVWlMQW9nSUNBZ0lDQWdJQ0lqWkdWbWFXNWxJSFJsZUhSMWNtVkRkV0psSUhSbGVIUjFjbVVpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVV5UkZCeWIyb2dkR1Y0ZEhWeVpWQnliMm9pTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVV5UkV4dlpFVllWQ0IwWlhoMGRYSmxURzlrSWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMFpYaDBkWEpsTWtSUWNtOXFURzlrUlZoVUlIUmxlSFIxY21WUWNtOXFURzlrSWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMFpYaDBkWEpsUTNWaVpVeHZaRVZZVkNCMFpYaDBkWEpsVEc5a0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbE1rUkhjbUZrUlZoVUlIUmxlSFIxY21WSGNtRmtJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IwWlhoMGRYSmxNa1JRY205cVIzSmhaRVZZVkNCMFpYaDBkWEpsVUhKdmFrZHlZV1FpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVZEZFdKbFIzSmhaRVZZVkNCMFpYaDBkWEpsUjNKaFpDSUtJQ0FnSUYwdWFtOXBiaWhnQ21BcElDc2dZQXBnSUNzZ2RpazdDaUFnSUNCc1pYUWdjQ0E5SUdjZ0t5QjRJQ3NnYnl3Z1h5QTlJR2NnS3lCMklDc2dZU3dnZVNBOUlFZHNLR2tzSURNMU5qTXpMQ0J3S1N3Z1lpQTlJRWRzS0drc0lETTFOak15TENCZktUc0tJQ0FnSUdsbUlDaHBMbUYwZEdGamFGTm9ZV1JsY2lodExDQjVLU3dnYVM1aGRIUmhZMmhUYUdGa1pYSW9iU3dnWWlrc0lIUXVhVzVrWlhnd1FYUjBjbWxpZFhSbFRtRnRaU0FoUFQwZ2RtOXBaQ0F3SUQ4Z2FTNWlhVzVrUVhSMGNtbGlURzlqWVhScGIyNG9iU3dnTUN3Z2RDNXBibVJsZURCQmRIUnlhV0oxZEdWT1lXMWxLU0E2SUhRdWJXOXljR2hVWVhKblpYUnpJRDA5UFNBaE1DQW1KaUJwTG1KcGJtUkJkSFJ5YVdKTWIyTmhkR2x2YmlodExDQXdMQ0FpY0c5emFYUnBiMjRpS1N3Z2FTNXNhVzVyVUhKdlozSmhiU2h0S1N3Z2N5NWtaV0oxWnk1amFHVmphMU5vWVdSbGNrVnljbTl5Y3lrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JKSUQwZ2FTNW5aWFJRY205bmNtRnRTVzVtYjB4dlp5aHRLUzUwY21sdEtDa3NJR3NnUFNCcExtZGxkRk5vWVdSbGNrbHVabTlNYjJjb2VTa3VkSEpwYlNncExDQkNJRDBnYVM1blpYUlRhR0ZrWlhKSmJtWnZURzluS0dJcExuUnlhVzBvS1N3Z1VDQTlJQ0V3TENCM0lEMGdJVEE3Q2lBZ0lDQWdJQ0FnYVdZZ0tHa3VaMlYwVUhKdlozSmhiVkJoY21GdFpYUmxjaWh0TENBek5UY3hOQ2tnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lGQWdQU0FoTVRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQldiQ2hwTENCNUxDQWlkbVZ5ZEdWNElpa3NJRVFnUFNCV2JDaHBMQ0JpTENBaVpuSmhaMjFsYm5RaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhRY205bmNtRnRPaUJUYUdGa1pYSWdSWEp5YjNJZ0lpQXJJR2t1WjJWMFJYSnliM0lvS1NBcklDSWdMU0JXUVV4SlJFRlVSVjlUVkVGVVZWTWdJaUFySUdrdVoyVjBVSEp2WjNKaGJWQmhjbUZ0WlhSbGNpaHRMQ0F6TlRjeE5Ta2dLeUJnQ2dwUWNtOW5jbUZ0SUVsdVptOGdURzluT2lCZ0lDc2dTU0FySUdBS1lDQXJJRVVnS3lCZ0NtQWdLeUJFS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnU1NBaFBUMGdJaUlnUHlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVUhKdlozSmhiVG9nVUhKdlozSmhiU0JKYm1adklFeHZaem9pTENCSktTQTZJQ2hySUQwOVBTQWlJaUI4ZkNCQ0lEMDlQU0FpSWlrZ0ppWWdLSGNnUFNBaE1TazdDaUFnSUNBZ0lDQWdkeUFtSmlBb2RHaHBjeTVrYVdGbmJtOXpkR2xqY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY25WdWJtRmliR1U2SUZBc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjJkeVlXMU1iMmM2SUVrc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOW5PaUJyTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKbFptbDRPaUI0Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYjJjNklFSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndjbVZtYVhnNklIWUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFvZ0lDQWdhUzVrWld4bGRHVlRhR0ZrWlhJb2VTa3NJR2t1WkdWc1pYUmxVMmhoWkdWeUtHSXBPd29nSUNBZ2JHVjBJRUU3Q2lBZ0lDQjBhR2x6TG1kbGRGVnVhV1p2Y20xeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRUVnUFQwOUlIWnZhV1FnTUNBbUppQW9RU0E5SUc1bGR5QmliaWhwTENCdEtTa3NJRUU3Q2lBZ0lDQjlPd29nSUNBZ2JHVjBJRXc3Q2lBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSQmRIUnlhV0oxZEdWeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRXdnUFQwOUlIWnZhV1FnTUNBbUppQW9UQ0E5SUdWNEtHa3NJRzBwS1N3Z1REc0tJQ0FnSUgwc0lIUm9hWE11WkdWemRISnZlU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHNHVjbVZzWldGelpWTjBZWFJsYzA5bVVISnZaM0poYlNoMGFHbHpLU3dnYVM1a1pXeGxkR1ZRY205bmNtRnRLRzBwTENCMGFHbHpMbkJ5YjJkeVlXMGdQU0IyYjJsa0lEQTdDaUFnSUNCOUxDQjBhR2x6TG01aGJXVWdQU0IwTG5Ob1lXUmxjazVoYldVc0lIUm9hWE11YVdRZ1BTQlpaeXNyTENCMGFHbHpMbU5oWTJobFMyVjVJRDBnWlN3Z2RHaHBjeTUxYzJWa1ZHbHRaWE1nUFNBeExDQjBhR2x6TG5CeWIyZHlZVzBnUFNCdExDQjBhR2x6TG5abGNuUmxlRk5vWVdSbGNpQTlJSGtzSUhSb2FYTXVabkpoWjIxbGJuUlRhR0ZrWlhJZ1BTQmlMQ0IwYUdsek93cDlDblpoY2lCMWVDQTlJREFzSUdkb0lEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Ob1lXUmxja05oWTJobElEMGdibVYzSUUxaGNDd2dkR2hwY3k1dFlYUmxjbWxoYkVOaFkyaGxJRDBnYm1WM0lFMWhjRHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExuWmxjblJsZUZOb1lXUmxjaXdnYmlBOUlHVXVabkpoWjIxbGJuUlRhR0ZrWlhJc0lHa2dQU0IwYUdsekxsOW5aWFJUYUdGa1pYSlRkR0ZuWlNoMEtTd2djaUE5SUhSb2FYTXVYMmRsZEZOb1lXUmxjbE4wWVdkbEtHNHBMQ0J2SUQwZ2RHaHBjeTVmWjJWMFUyaGhaR1Z5UTJGamFHVkdiM0pOWVhSbGNtbGhiQ2hsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYnk1b1lYTW9hU2tnUFQwOUlDRXhJQ1ltSUNodkxtRmtaQ2hwS1N3Z2FTNTFjMlZrVkdsdFpYTXJLeWtzSUc4dWFHRnpLSElwSUQwOVBTQWhNU0FtSmlBb2J5NWhaR1FvY2lrc0lISXVkWE5sWkZScGJXVnpLeXNwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXViV0YwWlhKcFlXeERZV05vWlM1blpYUW9aU2s3Q2lBZ0lDQWdJQ0FnWm05eUlDaHNaWFFnYmlCdlppQjBLVzR1ZFhObFpGUnBiV1Z6TFMwc0lHNHVkWE5sWkZScGJXVnpJRDA5UFNBd0lDWW1JSFJvYVhNdWMyaGhaR1Z5UTJGamFHVXVaR1ZzWlhSbEtHNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xaGRHVnlhV0ZzUTJGamFHVXVaR1ZzWlhSbEtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwVm1WeWRHVjRVMmhoWkdWeVNVUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOW5aWFJUYUdGa1pYSlRkR0ZuWlNobExuWmxjblJsZUZOb1lXUmxjaWt1YVdRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHY21GbmJXVnVkRk5vWVdSbGNrbEVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZaMlYwVTJoaFpHVnlVM1JoWjJVb1pTNW1jbUZuYldWdWRGTm9ZV1JsY2lrdWFXUTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjMmhoWkdWeVEyRmphR1V1WTJ4bFlYSW9LU3dnZEdocGN5NXRZWFJsY21saGJFTmhZMmhsTG1Oc1pXRnlLQ2s3Q2lBZ0lDQjlDaUFnSUNCZloyVjBVMmhoWkdWeVEyRmphR1ZHYjNKTllYUmxjbWxoYkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG0xaGRHVnlhV0ZzUTJGamFHVTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVhR0Z6S0dVcElEMDlQU0FoTVNBbUppQjBMbk5sZENobExDQnVaWGNnVTJWMEtTd2dkQzVuWlhRb1pTazdDaUFnSUNCOUNpQWdJQ0JmWjJWMFUyaGhaR1Z5VTNSaFoyVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXphR0ZrWlhKRFlXTm9aVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDNW9ZWE1vWlNrZ1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdibVYzSUhob093b2dJQ0FnSUNBZ0lDQWdJQ0IwTG5ObGRDaGxMQ0J1S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVoyVjBLR1VwT3dvZ0lDQWdmUXA5TENCNGFDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdkR2hwY3k1cFpDQTlJSFY0S3lzc0lIUm9hWE11ZFhObFpGUnBiV1Z6SUQwZ01Ec0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdaSGdvY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnYkdWMElHRWdQU0J1WlhjZ1NuTXNJR3dnUFNCdVpYY2daMmdzSUdNZ1BTQmJYU3dnYUNBOUlHa3VhWE5YWldKSFRESXNJSFVnUFNCcExteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElzSUdRZ1BTQnBMbVpzYjJGMFZtVnlkR1Y0VkdWNGRIVnlaWE1zSUdZZ1BTQnBMbTFoZUZabGNuUmxlRlZ1YVdadmNtMXpMQ0J0SUQwZ2FTNTJaWEowWlhoVVpYaDBkWEpsY3l3Z2VDQTlJR2t1Y0hKbFkybHphVzl1TENCMklEMGdld29nSUNBZ0lDQWdJRTFsYzJoRVpYQjBhRTFoZEdWeWFXRnNPaUFpWkdWd2RHZ2lMQW9nSUNBZ0lDQWdJRTFsYzJoRWFYTjBZVzVqWlUxaGRHVnlhV0ZzT2lBaVpHbHpkR0Z1WTJWU1IwSkJJaXdLSUNBZ0lDQWdJQ0JOWlhOb1RtOXliV0ZzVFdGMFpYSnBZV3c2SUNKdWIzSnRZV3dpTEFvZ0lDQWdJQ0FnSUUxbGMyaENZWE5wWTAxaGRHVnlhV0ZzT2lBaVltRnphV01pTEFvZ0lDQWdJQ0FnSUUxbGMyaE1ZVzFpWlhKMFRXRjBaWEpwWVd3NklDSnNZVzFpWlhKMElpd0tJQ0FnSUNBZ0lDQk5aWE5vVUdodmJtZE5ZWFJsY21saGJEb2dJbkJvYjI1bklpd0tJQ0FnSUNBZ0lDQk5aWE5vVkc5dmJrMWhkR1Z5YVdGc09pQWlkRzl2YmlJc0NpQWdJQ0FnSUNBZ1RXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXdzZJQ0p3YUhsemFXTmhiQ0lzQ2lBZ0lDQWdJQ0FnVFdWemFGQm9lWE5wWTJGc1RXRjBaWEpwWVd3NklDSndhSGx6YVdOaGJDSXNDaUFnSUNBZ0lDQWdUV1Z6YUUxaGRHTmhjRTFoZEdWeWFXRnNPaUFpYldGMFkyRndJaXdLSUNBZ0lDQWdJQ0JNYVc1bFFtRnphV05OWVhSbGNtbGhiRG9nSW1KaGMybGpJaXdLSUNBZ0lDQWdJQ0JNYVc1bFJHRnphR1ZrVFdGMFpYSnBZV3c2SUNKa1lYTm9aV1FpTEFvZ0lDQWdJQ0FnSUZCdmFXNTBjMDFoZEdWeWFXRnNPaUFpY0c5cGJuUnpJaXdLSUNBZ0lDQWdJQ0JUYUdGa2IzZE5ZWFJsY21saGJEb2dJbk5vWVdSdmR5SXNDaUFnSUNBZ0lDQWdVM0J5YVhSbFRXRjBaWEpwWVd3NklDSnpjSEpwZEdVaUNpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdaeWgzS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVFnUFNCM0xuTnJaV3hsZEc5dUxtSnZibVZ6T3dvZ0lDQWdJQ0FnSUdsbUlDaGtLU0J5WlhSMWNtNGdNVEF5TkRzS0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR0lEMGdUV0YwYUM1bWJHOXZjaWdvWmlBdElESXdLU0F2SURRcExDQlBJRDBnVFdGMGFDNXRhVzRvUml3Z1JDNXNaVzVuZEdncE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUeUE4SUVRdWJHVnVaM1JvSUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1UydGxiR1YwYjI0Z2FHRnpJQ0lnS3lCRUxteGxibWQwYUNBcklDSWdZbTl1WlhNdUlGUm9hWE1nUjFCVklITjFjSEJ2Y25SeklDSWdLeUJQSUNzZ0lpNGlLU3dnTUNrZ09pQlBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhBb2R5a2dld29nSUNBZ0lDQWdJR3hsZENCRk93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCM0lDWW1JSGN1YVhOVVpYaDBkWEpsSUQ4Z1JTQTlJSGN1Wlc1amIyUnBibWNnT2lCM0lDWW1JSGN1YVhOWFpXSkhURkpsYm1SbGNsUmhjbWRsZENBL0lDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVISnZaM0poYlhNdVoyVjBWR1Y0ZEhWeVpVVnVZMjlrYVc1blJuSnZiVTFoY0RvZ1pHOXVKM1FnZFhObElISmxibVJsY2lCMFlYSm5aWFJ6SUdGeklIUmxlSFIxY21WekxpQlZjMlVnZEdobGFYSWdMblJsZUhSMWNtVWdjSEp2Y0dWeWRIa2dhVzV6ZEdWaFpDNGlLU3dnUlNBOUlIY3VkR1Y0ZEhWeVpTNWxibU52WkdsdVp5a2dPaUJGSUQwZ1RuUXNJR2dnSmlZZ2R5QW1KaUIzTG1selZHVjRkSFZ5WlNBbUppQjNMbVp2Y20xaGRDQTlQVDBnWTNRZ0ppWWdkeTUwZVhCbElEMDlQU0J5YmlBbUppQjNMbVZ1WTI5a2FXNW5JRDA5UFNCUGFTQW1KaUFvUlNBOUlFNTBLU3dnUlRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGOG9keXdnUlN3Z1JDd2dWU3dnUmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JQSUQwZ1ZTNW1iMmNzSUc1bElEMGdkeTVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lEOGdWUzVsYm5acGNtOXViV1Z1ZENBNklHNTFiR3dzSUdObElEMGdLSGN1YVhOTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDQS9JSFFnT2lCbEtTNW5aWFFvZHk1bGJuWk5ZWEFnZkh3Z2JtVXBMQ0JXSUQwZ2RsdDNMblI1Y0dWZExDQlhJRDBnUmk1cGMxTnJhVzV1WldSTlpYTm9JRDhnWnloR0tTQTZJREE3Q2lBZ0lDQWdJQ0FnZHk1d2NtVmphWE5wYjI0Z0lUMDlJRzUxYkd3Z0ppWWdLSGdnUFNCcExtZGxkRTFoZUZCeVpXTnBjMmx2YmloM0xuQnlaV05wYzJsdmJpa3NJSGdnSVQwOUlIY3VjSEpsWTJsemFXOXVJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhRY205bmNtRnRMbWRsZEZCaGNtRnRaWFJsY25NNklpd2dkeTV3Y21WamFYTnBiMjRzSUNKdWIzUWdjM1Z3Y0c5eWRHVmtMQ0IxYzJsdVp5SXNJSGdzSUNKcGJuTjBaV0ZrTGlJcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYUdVc0lHeGxMQ0JtWlN3Z1FtVTdDaUFnSUNBZ0lDQWdhV1lnS0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIaGxJRDBnY1hSYlZsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdobElEMGdlR1V1ZG1WeWRHVjRVMmhoWkdWeUxDQnNaU0E5SUhobExtWnlZV2R0Wlc1MFUyaGhaR1Z5T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JvWlNBOUlIY3VkbVZ5ZEdWNFUyaGhaR1Z5TENCc1pTQTlJSGN1Wm5KaFoyMWxiblJUYUdGa1pYSXNJR3d1ZFhCa1lYUmxLSGNwTENCbVpTQTlJR3d1WjJWMFZtVnlkR1Y0VTJoaFpHVnlTVVFvZHlrc0lFSmxJRDBnYkM1blpYUkdjbUZuYldWdWRGTm9ZV1JsY2tsRUtIY3BPd29nSUNBZ0lDQWdJR3hsZENCWklEMGdjeTVuWlhSU1pXNWtaWEpVWVhKblpYUW9LU3dnUTJVZ1BTQjNMbUZzY0doaFZHVnpkQ0ErSURBc0lIbGxJRDBnZHk1amJHVmhjbU52WVhRZ1BpQXdPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUdselYyVmlSMHd5T2lCb0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGa1pYSkpSRG9nVml3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkdWeVRtRnRaVG9nZHk1MGVYQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJR2hsTEFvZ0lDQWdJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ2JHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptbHVaWE02SUhjdVpHVm1hVzVsY3l3S0lDQWdJQ0FnSUNBZ0lDQWdZM1Z6ZEc5dFZtVnlkR1Y0VTJoaFpHVnlTVVE2SUdabExBb2dJQ0FnSUNBZ0lDQWdJQ0JqZFhOMGIyMUdjbUZuYldWdWRGTm9ZV1JsY2tsRU9pQkNaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FYTlNZWGRUYUdGa1pYSk5ZWFJsY21saGJEb2dkeTVwYzFKaGQxTm9ZV1JsY2sxaGRHVnlhV0ZzSUQwOVBTQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1oyeHpiRlpsY25OcGIyNDZJSGN1WjJ4emJGWmxjbk5wYjI0c0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WldOcGMybHZiam9nZUN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzV6ZEdGdVkybHVaem9nUmk1cGMwbHVjM1JoYm1ObFpFMWxjMmdnUFQwOUlDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCcGJuTjBZVzVqYVc1blEyOXNiM0k2SUVZdWFYTkpibk4wWVc1alpXUk5aWE5vSUQwOVBTQWhNQ0FtSmlCR0xtbHVjM1JoYm1ObFEyOXNiM0lnSVQwOUlHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lITjFjSEJ2Y25SelZtVnlkR1Y0VkdWNGRIVnlaWE02SUcwc0NpQWdJQ0FnSUNBZ0lDQWdJRzkxZEhCMWRFVnVZMjlrYVc1bk9pQlpJQ0U5UFNCdWRXeHNJRDhnY0NoWkxuUmxlSFIxY21VcElEb2djeTV2ZFhSd2RYUkZibU52WkdsdVp5d0tJQ0FnSUNBZ0lDQWdJQ0FnYldGd09pQWhJWGN1YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J0WVhCRmJtTnZaR2x1WnpvZ2NDaDNMbTFoY0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdOaGNEb2dJU0YzTG0xaGRHTmhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBZMkZ3Ulc1amIyUnBibWM2SUhBb2R5NXRZWFJqWVhBcExBb2dJQ0FnSUNBZ0lDQWdJQ0JsYm5aTllYQTZJQ0VoWTJVc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNFMXZaR1U2SUdObElDWW1JR05sTG0xaGNIQnBibWNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnVkazFoY0VWdVkyOWthVzVuT2lCd0tHTmxLU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXNTJUV0Z3UTNWaVpWVldPaUFoSVdObElDWW1JQ2hqWlM1dFlYQndhVzVuSUQwOVBTQlFjaUI4ZkNCalpTNXRZWEJ3YVc1bklEMDlQU0JYY3lrc0NpQWdJQ0FnSUNBZ0lDQWdJR3hwWjJoMFRXRndPaUFoSVhjdWJHbG5hSFJOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR3hwWjJoMFRXRndSVzVqYjJScGJtYzZJSEFvZHk1c2FXZG9kRTFoY0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJR0Z2VFdGd09pQWhJWGN1WVc5TllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdWdGFYTnphWFpsVFdGd09pQWhJWGN1WlcxcGMzTnBkbVZOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z0YVhOemFYWmxUV0Z3Ulc1amIyUnBibWM2SUhBb2R5NWxiV2x6YzJsMlpVMWhjQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHSjFiWEJOWVhBNklDRWhkeTVpZFcxd1RXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCdWIzSnRZV3hOWVhBNklDRWhkeTV1YjNKdFlXeE5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZEZOd1lXTmxUbTl5YldGc1RXRndPaUIzTG01dmNtMWhiRTFoY0ZSNWNHVWdQVDA5SUhwa0xBb2dJQ0FnSUNBZ0lDQWdJQ0IwWVc1blpXNTBVM0JoWTJWT2IzSnRZV3hOWVhBNklIY3VibTl5YldGc1RXRndWSGx3WlNBOVBUMGdTR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z5WTI5aGREb2dlV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z5WTI5aGRFMWhjRG9nZVdVZ0ppWWdJU0YzTG1Oc1pXRnlZMjloZEUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd09pQjVaU0FtSmlBaElYY3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY21OdllYUk9iM0p0WVd4TllYQTZJSGxsSUNZbUlDRWhkeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUnBjM0JzWVdObGJXVnVkRTFoY0RvZ0lTRjNMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnY205MVoyaHVaWE56VFdGd09pQWhJWGN1Y205MVoyaHVaWE56VFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J0WlhSaGJHNWxjM05OWVhBNklDRWhkeTV0WlhSaGJHNWxjM05OWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlUV0Z3T2lBaElYY3VjM0JsWTNWc1lYSk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndPaUFoSVhjdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5UTI5c2IzSk5ZWEE2SUNFaGR5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6Y0dWamRXeGhja052Ykc5eVRXRndSVzVqYjJScGJtYzZJSEFvZHk1emNHVmpkV3hoY2tOdmJHOXlUV0Z3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdZV3h3YUdGTllYQTZJQ0VoZHk1aGJIQm9ZVTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdZV3h3YUdGVVpYTjBPaUJEWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaM0poWkdsbGJuUk5ZWEE2SUNFaGR5NW5jbUZrYVdWdWRFMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzQ2SUhjdWMyaGxaVzRnUGlBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdWbGJrTnZiRzl5VFdGd09pQWhJWGN1YzJobFpXNURiMnh2Y2sxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJobFpXNURiMnh2Y2sxaGNFVnVZMjlrYVc1bk9pQndLSGN1YzJobFpXNURiMnh2Y2sxaGNDa3NDaUFnSUNBZ0lDQWdJQ0FnSUhOb1pXVnVVbTkxWjJodVpYTnpUV0Z3T2lBaElYY3VjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpiV2x6YzJsdmJqb2dkeTUwY21GdWMyMXBjM05wYjI0Z1BpQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMjFwYzNOcGIyNU5ZWEE2SUNFaGR5NTBjbUZ1YzIxcGMzTnBiMjVOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVdOcmJtVnpjMDFoY0RvZ0lTRjNMblJvYVdOcmJtVnpjMDFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdZMjl0WW1sdVpUb2dkeTVqYjIxaWFXNWxMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhVWVc1blpXNTBjem9nSVNGM0xtNXZjbTFoYkUxaGNDQW1KaUFoSVVZdVoyVnZiV1YwY25rZ0ppWWdJU0ZHTG1kbGIyMWxkSEo1TG1GMGRISnBZblYwWlhNdWRHRnVaMlZ1ZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFEyOXNiM0p6T2lCM0xuWmxjblJsZUVOdmJHOXljeXdLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UVd4d2FHRnpPaUIzTG5abGNuUmxlRU52Ykc5eWN5QTlQVDBnSVRBZ0ppWWdJU0ZHTG1kbGIyMWxkSEo1SUNZbUlDRWhSaTVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6TG1OdmJHOXlJQ1ltSUVZdVoyVnZiV1YwY25rdVlYUjBjbWxpZFhSbGN5NWpiMnh2Y2k1cGRHVnRVMmw2WlNBOVBUMGdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0Vlhaek9pQWhJWGN1YldGd0lIeDhJQ0VoZHk1aWRXMXdUV0Z3SUh4OElDRWhkeTV1YjNKdFlXeE5ZWEFnZkh3Z0lTRjNMbk53WldOMWJHRnlUV0Z3SUh4OElDRWhkeTVoYkhCb1lVMWhjQ0I4ZkNBaElYY3VaVzFwYzNOcGRtVk5ZWEFnZkh3Z0lTRjNMbkp2ZFdkb2JtVnpjMDFoY0NCOGZDQWhJWGN1YldWMFlXeHVaWE56VFdGd0lIeDhJQ0VoZHk1amJHVmhjbU52WVhSTllYQWdmSHdnSVNGM0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0I4ZkNBaElYY3VZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJSHg4SUNFaGR5NWthWE53YkdGalpXMWxiblJOWVhBZ2ZId2dJU0YzTG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0I4ZkNBaElYY3VkR2hwWTJ0dVpYTnpUV0Z3SUh4OElDRWhkeTV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NCOGZDQWhJWGN1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0I4ZkNBaElYY3VjMmhsWlc1RGIyeHZjazFoY0NCOGZDQWhJWGN1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVjJjMVpsY25SbGVFOXViSGs2SUNFb0lTRjNMbTFoY0NCOGZDQWhJWGN1WW5WdGNFMWhjQ0I4ZkNBaElYY3VibTl5YldGc1RXRndJSHg4SUNFaGR5NXpjR1ZqZFd4aGNrMWhjQ0I4ZkNBaElYY3VZV3h3YUdGTllYQWdmSHdnSVNGM0xtVnRhWE56YVhabFRXRndJSHg4SUNFaGR5NXliM1ZuYUc1bGMzTk5ZWEFnZkh3Z0lTRjNMbTFsZEdGc2JtVnpjMDFoY0NCOGZDQWhJWGN1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUh4OElIY3VkSEpoYm5OdGFYTnphVzl1SUQ0Z01DQjhmQ0FoSVhjdWRISmhibk50YVhOemFXOXVUV0Z3SUh4OElDRWhkeTUwYUdsamEyNWxjM05OWVhBZ2ZId2dJU0YzTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lIeDhJQ0VoZHk1emNHVmpkV3hoY2tOdmJHOXlUV0Z3SUh4OElIY3VjMmhsWlc0Z1BpQXdJSHg4SUNFaGR5NXphR1ZsYmtOdmJHOXlUV0Z3SUh4OElDRWhkeTV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ2tnSmlZZ0lTRjNMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhJVThzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVnpaVVp2WnpvZ2R5NW1iMmNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZaMFY0Y0RJNklFOGdKaVlnVHk1cGMwWnZaMFY0Y0RJc0NpQWdJQ0FnSUNBZ0lDQWdJR1pzWVhSVGFHRmthVzVuT2lBaElYY3VabXhoZEZOb1lXUnBibWNzQ2lBZ0lDQWdJQ0FnSUNBZ0lITnBlbVZCZEhSbGJuVmhkR2x2YmpvZ2R5NXphWHBsUVhSMFpXNTFZWFJwYjI0c0NpQWdJQ0FnSUNBZ0lDQWdJR3h2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJNklIVXNDaUFnSUNBZ0lDQWdJQ0FnSUhOcmFXNXVhVzVuT2lCR0xtbHpVMnRwYm01bFpFMWxjMmdnUFQwOUlDRXdJQ1ltSUZjZ1BpQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCdFlYaENiMjVsY3pvZ1Z5d0tJQ0FnSUNBZ0lDQWdJQ0FnZFhObFZtVnlkR1Y0VkdWNGRIVnlaVG9nWkN3S0lDQWdJQ0FnSUNBZ0lDQWdiVzl5Y0doVVlYSm5aWFJ6T2lBaElVWXVaMlZ2YldWMGNua2dKaVlnSVNGR0xtZGxiMjFsZEhKNUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Yml3S0lDQWdJQ0FnSUNBZ0lDQWdiVzl5Y0doT2IzSnRZV3h6T2lBaElVWXVaMlZ2YldWMGNua2dKaVlnSVNGR0xtZGxiMjFsZEhKNUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMXZjbkJvVkdGeVoyVjBjME52ZFc1ME9pQWhJVVl1WjJWdmJXVjBjbmtnSmlZZ0lTRkdMbWRsYjIxbGRISjVMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpQS9JRVl1WjJWdmJXVjBjbmt1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMbXhsYm1kMGFDQTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVVJwY2t4cFoyaDBjem9nUlM1a2FYSmxZM1JwYjI1aGJDNXNaVzVuZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCdmFXNTBUR2xuYUhSek9pQkZMbkJ2YVc1MExteGxibWQwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VTNCdmRFeHBaMmgwY3pvZ1JTNXpjRzkwTG14bGJtZDBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRVbVZqZEVGeVpXRk1hV2RvZEhNNklFVXVjbVZqZEVGeVpXRXViR1Z1WjNSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1ZFcxSVpXMXBUR2xuYUhSek9pQkZMbWhsYldrdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFFYVhKTWFXZG9kRk5vWVdSdmQzTTZJRVV1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhBdWJHVnVaM1JvTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVkVzFRYjJsdWRFeHBaMmgwVTJoaFpHOTNjem9nUlM1d2IybHVkRk5vWVdSdmQwMWhjQzVzWlc1bmRHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWTndiM1JNYVdkb2RGTm9ZV1J2ZDNNNklFVXVjM0J2ZEZOb1lXUnZkMDFoY0M1c1pXNW5kR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVU5zYVhCd2FXNW5VR3hoYm1Wek9pQnZMbTUxYlZCc1lXNWxjeXdLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRRMnhwY0VsdWRHVnljMlZqZEdsdmJqb2dieTV1ZFcxSmJuUmxjbk5sWTNScGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nZHk1bWIzSnRZWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUnBkR2hsY21sdVp6b2dkeTVrYVhSb1pYSnBibWNzQ2lBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDAxaGNFVnVZV0pzWldRNklITXVjMmhoWkc5M1RXRndMbVZ1WVdKc1pXUWdKaVlnUkM1c1pXNW5kR2dnUGlBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZE5ZWEJVZVhCbE9pQnpMbk5vWVdSdmQwMWhjQzUwZVhCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR2x1WnpvZ2R5NTBiMjVsVFdGd2NHVmtJRDhnY3k1MGIyNWxUV0Z3Y0dsdVp5QTZJRjl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQndhSGx6YVdOaGJHeDVRMjl5Y21WamRFeHBaMmgwY3pvZ2N5NXdhSGx6YVdOaGJHeDVRMjl5Y21WamRFeHBaMmgwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdjSEpsYlhWc2RHbHdiR2xsWkVGc2NHaGhPaUIzTG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVN3S0lDQWdJQ0FnSUNBZ0lDQWdaRzkxWW14bFUybGtaV1E2SUhjdWMybGtaU0E5UFQwZ1Eya3NDaUFnSUNBZ0lDQWdJQ0FnSUdac2FYQlRhV1JsWkRvZ2R5NXphV1JsSUQwOVBTQnBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hRWVdOcmFXNW5PaUIzTG1SbGNIUm9VR0ZqYTJsdVp5QWhQVDBnZG05cFpDQXdJRDhnZHk1a1pYQjBhRkJoWTJ0cGJtY2dPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnd1FYUjBjbWxpZFhSbFRtRnRaVG9nZHk1cGJtUmxlREJCZEhSeWFXSjFkR1ZPWVcxbExBb2dJQ0FnSUNBZ0lDQWdJQ0JsZUhSbGJuTnBiMjVFWlhKcGRtRjBhWFpsY3pvZ2R5NWxlSFJsYm5OcGIyNXpJQ1ltSUhjdVpYaDBaVzV6YVc5dWN5NWtaWEpwZG1GMGFYWmxjeXdLSUNBZ0lDQWdJQ0FnSUNBZ1pYaDBaVzV6YVc5dVJuSmhaMFJsY0hSb09pQjNMbVY0ZEdWdWMybHZibk1nSmlZZ2R5NWxlSFJsYm5OcGIyNXpMbVp5WVdkRVpYQjBhQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pYaDBaVzV6YVc5dVJISmhkMEoxWm1abGNuTTZJSGN1WlhoMFpXNXphVzl1Y3lBbUppQjNMbVY0ZEdWdWMybHZibk11WkhKaGQwSjFabVpsY25Nc0NpQWdJQ0FnSUNBZ0lDQWdJR1Y0ZEdWdWMybHZibE5vWVdSbGNsUmxlSFIxY21WTVQwUTZJSGN1WlhoMFpXNXphVzl1Y3lBbUppQjNMbVY0ZEdWdWMybHZibk11YzJoaFpHVnlWR1Y0ZEhWeVpVeFBSQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhKRmVIUmxibk5wYjI1R2NtRm5SR1Z3ZEdnNklHZ2dmSHdnYmk1b1lYTW9Ja1ZZVkY5bWNtRm5YMlJsY0hSb0lpa3NDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5UlhoMFpXNXphVzl1UkhKaGQwSjFabVpsY25NNklHZ2dmSHdnYmk1b1lYTW9JbGRGUWtkTVgyUnlZWGRmWW5WbVptVnljeUlwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJsTm9ZV1JsY2xSbGVIUjFjbVZNYjJRNklHZ2dmSHdnYmk1b1lYTW9Ja1ZZVkY5emFHRmtaWEpmZEdWNGRIVnlaVjlzYjJRaUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTNWemRHOXRVSEp2WjNKaGJVTmhZMmhsUzJWNU9pQjNMbU4xYzNSdmJWQnliMmR5WVcxRFlXTm9aVXRsZVNncENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGtvZHlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JGSUQwZ1cxMDdDaUFnSUNBZ0lDQWdhV1lnS0hjdWMyaGhaR1Z5U1VRZ1B5QkZMbkIxYzJnb2R5NXphR0ZrWlhKSlJDa2dPaUFvUlM1d2RYTm9LSGN1WTNWemRHOXRWbVZ5ZEdWNFUyaGhaR1Z5U1VRcExDQkZMbkIxYzJnb2R5NWpkWE4wYjIxR2NtRm5iV1Z1ZEZOb1lXUmxja2xFS1Nrc0lIY3VaR1ZtYVc1bGN5QWhQVDBnZG05cFpDQXdLU0JtYjNJb2JHVjBJRVFnYVc0Z2R5NWtaV1pwYm1WektVVXVjSFZ6YUNoRUtTd2dSUzV3ZFhOb0tIY3VaR1ZtYVc1bGMxdEVYU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSGN1YVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkNBOVBUMGdJVEVnSmlZZ0tHSW9SU3dnZHlrc0lFRW9SU3dnZHlrc0lFVXVjSFZ6YUNoekxtOTFkSEIxZEVWdVkyOWthVzVuS1Nrc0lFVXVjSFZ6YUNoM0xtTjFjM1J2YlZCeWIyZHlZVzFEWVdOb1pVdGxlU2tzSUVVdWFtOXBiaWdwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lpaDNMQ0JGS1NCN0NpQWdJQ0FnSUNBZ2R5NXdkWE5vS0VVdWNISmxZMmx6YVc5dUtTd2dkeTV3ZFhOb0tFVXViM1YwY0hWMFJXNWpiMlJwYm1jcExDQjNMbkIxYzJnb1JTNXRZWEJGYm1OdlpHbHVaeWtzSUhjdWNIVnphQ2hGTG0xaGRHTmhjRVZ1WTI5a2FXNW5LU3dnZHk1d2RYTm9LRVV1Wlc1MlRXRndUVzlrWlNrc0lIY3VjSFZ6YUNoRkxtVnVkazFoY0VWdVkyOWthVzVuS1N3Z2R5NXdkWE5vS0VVdWJHbG5hSFJOWVhCRmJtTnZaR2x1Wnlrc0lIY3VjSFZ6YUNoRkxtVnRhWE56YVhabFRXRndSVzVqYjJScGJtY3BMQ0IzTG5CMWMyZ29SUzVqYjIxaWFXNWxLU3dnZHk1d2RYTm9LRVV1ZG1WeWRHVjRWWFp6S1N3Z2R5NXdkWE5vS0VVdVptOW5SWGh3TWlrc0lIY3VjSFZ6YUNoRkxuTnBlbVZCZEhSbGJuVmhkR2x2Ymlrc0lIY3VjSFZ6YUNoRkxtMWhlRUp2Ym1WektTd2dkeTV3ZFhOb0tFVXViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUXBMQ0IzTG5CMWMyZ29SUzV1ZFcxRWFYSk1hV2RvZEhNcExDQjNMbkIxYzJnb1JTNXVkVzFRYjJsdWRFeHBaMmgwY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVk53YjNSTWFXZG9kSE1wTENCM0xuQjFjMmdvUlM1dWRXMUlaVzFwVEdsbmFIUnpLU3dnZHk1d2RYTm9LRVV1Ym5WdFVtVmpkRUZ5WldGTWFXZG9kSE1wTENCM0xuQjFjMmdvUlM1dWRXMUVhWEpNYVdkb2RGTm9ZV1J2ZDNNcExDQjNMbkIxYzJnb1JTNXVkVzFRYjJsdWRFeHBaMmgwVTJoaFpHOTNjeWtzSUhjdWNIVnphQ2hGTG01MWJWTndiM1JNYVdkb2RGTm9ZV1J2ZDNNcExDQjNMbkIxYzJnb1JTNXphR0ZrYjNkTllYQlVlWEJsS1N3Z2R5NXdkWE5vS0VVdWRHOXVaVTFoY0hCcGJtY3BMQ0IzTG5CMWMyZ29SUzV1ZFcxRGJHbHdjR2x1WjFCc1lXNWxjeWtzSUhjdWNIVnphQ2hGTG01MWJVTnNhWEJKYm5SbGNuTmxZM1JwYjI0cExDQjNMbkIxYzJnb1JTNW1iM0p0WVhRcExDQjNMbkIxYzJnb1JTNXpjR1ZqZFd4aGNrTnZiRzl5VFdGd1JXNWpiMlJwYm1jcExDQjNMbkIxYzJnb1JTNXphR1ZsYmtOdmJHOXlUV0Z3Ulc1amIyUnBibWNwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1FTaDNMQ0JGS1NCN0NpQWdJQ0FnSUNBZ1lTNWthWE5oWW14bFFXeHNLQ2tzSUVVdWFYTlhaV0pIVERJZ0ppWWdZUzVsYm1GaWJHVW9NQ2tzSUVVdWMzVndjRzl5ZEhOV1pYSjBaWGhVWlhoMGRYSmxjeUFtSmlCaExtVnVZV0pzWlNneEtTd2dSUzVwYm5OMFlXNWphVzVuSUNZbUlHRXVaVzVoWW14bEtESXBMQ0JGTG1sdWMzUmhibU5wYm1kRGIyeHZjaUFtSmlCaExtVnVZV0pzWlNnektTd2dSUzV0WVhBZ0ppWWdZUzVsYm1GaWJHVW9OQ2tzSUVVdWJXRjBZMkZ3SUNZbUlHRXVaVzVoWW14bEtEVXBMQ0JGTG1WdWRrMWhjQ0FtSmlCaExtVnVZV0pzWlNnMktTd2dSUzVsYm5aTllYQkRkV0psVlZZZ0ppWWdZUzVsYm1GaWJHVW9OeWtzSUVVdWJHbG5hSFJOWVhBZ0ppWWdZUzVsYm1GaWJHVW9PQ2tzSUVVdVlXOU5ZWEFnSmlZZ1lTNWxibUZpYkdVb09Ta3NJRVV1WlcxcGMzTnBkbVZOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVEFwTENCRkxtSjFiWEJOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVEVwTENCRkxtNXZjbTFoYkUxaGNDQW1KaUJoTG1WdVlXSnNaU2d4TWlrc0lFVXViMkpxWldOMFUzQmhZMlZPYjNKdFlXeE5ZWEFnSmlZZ1lTNWxibUZpYkdVb01UTXBMQ0JGTG5SaGJtZGxiblJUY0dGalpVNXZjbTFoYkUxaGNDQW1KaUJoTG1WdVlXSnNaU2d4TkNrc0lFVXVZMnhsWVhKamIyRjBJQ1ltSUdFdVpXNWhZbXhsS0RFMUtTd2dSUzVqYkdWaGNtTnZZWFJOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVFlwTENCRkxtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0FtSmlCaExtVnVZV0pzWlNneE55a3NJRVV1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUNZbUlHRXVaVzVoWW14bEtERTRLU3dnUlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01Ua3BMQ0JGTG5Od1pXTjFiR0Z5VFdGd0lDWW1JR0V1Wlc1aFlteGxLREl3S1N3Z1JTNXliM1ZuYUc1bGMzTk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01qRXBMQ0JGTG0xbGRHRnNibVZ6YzAxaGNDQW1KaUJoTG1WdVlXSnNaU2d5TWlrc0lFVXVaM0poWkdsbGJuUk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01qTXBMQ0JGTG1Gc2NHaGhUV0Z3SUNZbUlHRXVaVzVoWW14bEtESTBLU3dnUlM1aGJIQm9ZVlJsYzNRZ0ppWWdZUzVsYm1GaWJHVW9NalVwTENCRkxuWmxjblJsZUVOdmJHOXljeUFtSmlCaExtVnVZV0pzWlNneU5pa3NJRVV1ZG1WeWRHVjRRV3h3YUdGeklDWW1JR0V1Wlc1aFlteGxLREkzS1N3Z1JTNTJaWEowWlhoVmRuTWdKaVlnWVM1bGJtRmliR1VvTWpncExDQkZMblpsY25SbGVGUmhibWRsYm5SeklDWW1JR0V1Wlc1aFlteGxLREk1S1N3Z1JTNTFkbk5XWlhKMFpYaFBibXg1SUNZbUlHRXVaVzVoWW14bEtETXdLU3dnUlM1bWIyY2dKaVlnWVM1bGJtRmliR1VvTXpFcExDQjNMbkIxYzJnb1lTNXRZWE5yS1N3Z1lTNWthWE5oWW14bFFXeHNLQ2tzSUVVdWRYTmxSbTluSUNZbUlHRXVaVzVoWW14bEtEQXBMQ0JGTG1ac1lYUlRhR0ZrYVc1bklDWW1JR0V1Wlc1aFlteGxLREVwTENCRkxteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnSmlZZ1lTNWxibUZpYkdVb01pa3NJRVV1YzJ0cGJtNXBibWNnSmlZZ1lTNWxibUZpYkdVb015a3NJRVV1ZFhObFZtVnlkR1Y0VkdWNGRIVnlaU0FtSmlCaExtVnVZV0pzWlNnMEtTd2dSUzV0YjNKd2FGUmhjbWRsZEhNZ0ppWWdZUzVsYm1GaWJHVW9OU2tzSUVVdWJXOXljR2hPYjNKdFlXeHpJQ1ltSUdFdVpXNWhZbXhsS0RZcExDQkZMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0FtSmlCaExtVnVZV0pzWlNnM0tTd2dSUzV6YUdGa2IzZE5ZWEJGYm1GaWJHVmtJQ1ltSUdFdVpXNWhZbXhsS0RncExDQkZMbkJvZVhOcFkyRnNiSGxEYjNKeVpXTjBUR2xuYUhSeklDWW1JR0V1Wlc1aFlteGxLRGtwTENCRkxtUnZkV0pzWlZOcFpHVmtJQ1ltSUdFdVpXNWhZbXhsS0RFd0tTd2dSUzVtYkdsd1UybGtaV1FnSmlZZ1lTNWxibUZpYkdVb01URXBMQ0JGTG1SbGNIUm9VR0ZqYTJsdVp5QW1KaUJoTG1WdVlXSnNaU2d4TWlrc0lFVXVaR2wwYUdWeWFXNW5JQ1ltSUdFdVpXNWhZbXhsS0RFektTd2dSUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hOQ2tzSUVVdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hOU2tzSUVVdWRISmhibk50YVhOemFXOXVJQ1ltSUdFdVpXNWhZbXhsS0RFMktTd2dSUzUwY21GdWMyMXBjM05wYjI1TllYQWdKaVlnWVM1bGJtRmliR1VvTVRjcExDQkZMblJvYVdOcmJtVnpjMDFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hPQ2tzSUVVdWMyaGxaVzRnSmlZZ1lTNWxibUZpYkdVb01Ua3BMQ0JGTG5Ob1pXVnVRMjlzYjNKTllYQWdKaVlnWVM1bGJtRmliR1VvTWpBcExDQkZMbk5vWldWdVVtOTFaMmh1WlhOelRXRndJQ1ltSUdFdVpXNWhZbXhsS0RJeEtTd2dkeTV3ZFhOb0tHRXViV0Z6YXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQk1LSGNwSUhzS0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUhaYmR5NTBlWEJsWFN3Z1JEc0tJQ0FnSUNBZ0lDQnBaaUFvUlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZTQTlJSEYwVzBWZE93b2dJQ0FnSUNBZ0lDQWdJQ0JFSUQwZ2RXWXVZMnh2Ym1Vb1ZTNTFibWxtYjNKdGN5azdDaUFnSUNBZ0lDQWdmU0JsYkhObElFUWdQU0IzTG5WdWFXWnZjbTF6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJFT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1NTaDNMQ0JGS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JWSUQwZ01Dd2dSaUE5SUdNdWJHVnVaM1JvT3lCVklEd2dSanNnVlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFOGdQU0JqVzFWZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1R5NWpZV05vWlV0bGVTQTlQVDBnUlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JDQTlJRThzSUNzclJDNTFjMlZrVkdsdFpYTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdSQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaEVJRDBnYm1WM0lHaDRLSE1zSUVVc0lIY3NJSElwTENCakxuQjFjMmdvUkNrcExDQkVPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYXloM0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0MwdGR5NTFjMlZrVkdsdFpYTWdQVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JqTG1sdVpHVjRUMllvZHlrN0NpQWdJQ0FnSUNBZ0lDQWdJR05iUlYwZ1BTQmpXMk11YkdWdVozUm9JQzBnTVYwc0lHTXVjRzl3S0Nrc0lIY3VaR1Z6ZEhKdmVTZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVJb2R5a2dld29nSUNBZ0lDQWdJR3d1Y21WdGIzWmxLSGNwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1VDZ3BJSHNLSUNBZ0lDQWdJQ0JzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBVR0Z5WVcxbGRHVnljem9nWHl3S0lDQWdJQ0FnSUNCblpYUlFjbTluY21GdFEyRmphR1ZMWlhrNklIa3NDaUFnSUNBZ0lDQWdaMlYwVlc1cFptOXliWE02SUV3c0NpQWdJQ0FnSUNBZ1lXTnhkV2x5WlZCeWIyZHlZVzA2SUVrc0NpQWdJQ0FnSUNBZ2NtVnNaV0Z6WlZCeWIyZHlZVzA2SUdzc0NpQWdJQ0FnSUNBZ2NtVnNaV0Z6WlZOb1lXUmxja05oWTJobE9pQkNMQW9nSUNBZ0lDQWdJSEJ5YjJkeVlXMXpPaUJqTEFvZ0lDQWdJQ0FnSUdScGMzQnZjMlU2SUZBS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z1puZ29LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z1pTaHlLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0J6TG1kbGRDaHlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdieUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHZJRDBnZTMwc0lITXVjMlYwS0hJc0lHOHBLU3dnYnpzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIUW9jaWtnZXdvZ0lDQWdJQ0FnSUhNdVpHVnNaWFJsS0hJcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiaWh5TENCdkxDQmhLU0I3Q2lBZ0lDQWdJQ0FnY3k1blpYUW9jaWxiYjEwZ1BTQmhPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYVNncElIc0tJQ0FnSUNBZ0lDQnpJRDBnYm1WM0lGZGxZV3ROWVhBN0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWlN3S0lDQWdJQ0FnSUNCeVpXMXZkbVU2SUhRc0NpQWdJQ0FnSUNBZ2RYQmtZWFJsT2lCdUxBb2dJQ0FnSUNBZ0lHUnBjM0J2YzJVNklHa0tJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdjSGdvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNdVozSnZkWEJQY21SbGNpQWhQVDBnWlM1bmNtOTFjRTl5WkdWeUlEOGdjeTVuY205MWNFOXlaR1Z5SUMwZ1pTNW5jbTkxY0U5eVpHVnlJRG9nY3k1eVpXNWtaWEpQY21SbGNpQWhQVDBnWlM1eVpXNWtaWEpQY21SbGNpQS9JSE11Y21WdVpHVnlUM0prWlhJZ0xTQmxMbkpsYm1SbGNrOXlaR1Z5SURvZ2N5NXRZWFJsY21saGJDNXBaQ0FoUFQwZ1pTNXRZWFJsY21saGJDNXBaQ0EvSUhNdWJXRjBaWEpwWVd3dWFXUWdMU0JsTG0xaGRHVnlhV0ZzTG1sa0lEb2djeTU2SUNFOVBTQmxMbm9nUHlCekxub2dMU0JsTG5vZ09pQnpMbWxrSUMwZ1pTNXBaRHNLZlFwbWRXNWpkR2x2YmlCWmJDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjeTVuY205MWNFOXlaR1Z5SUNFOVBTQmxMbWR5YjNWd1QzSmtaWElnUHlCekxtZHliM1Z3VDNKa1pYSWdMU0JsTG1keWIzVndUM0prWlhJZ09pQnpMbkpsYm1SbGNrOXlaR1Z5SUNFOVBTQmxMbkpsYm1SbGNrOXlaR1Z5SUQ4Z2N5NXlaVzVrWlhKUGNtUmxjaUF0SUdVdWNtVnVaR1Z5VDNKa1pYSWdPaUJ6TG5vZ0lUMDlJR1V1ZWlBL0lHVXVlaUF0SUhNdWVpQTZJSE11YVdRZ0xTQmxMbWxrT3dwOUNtWjFibU4wYVc5dUlGcHNLQ2tnZXdvZ0lDQWdiR1YwSUhNZ1BTQmJYU3dnWlNBOUlEQXNJSFFnUFNCYlhTd2diaUE5SUZ0ZExDQnBJRDBnVzEwN0NpQWdJQ0JtZFc1amRHbHZiaUJ5S0NrZ2V3b2dJQ0FnSUNBZ0lHVWdQU0F3TENCMExteGxibWQwYUNBOUlEQXNJRzR1YkdWdVozUm9JRDBnTUN3Z2FTNXNaVzVuZEdnZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYnloMUxDQmtMQ0JtTENCdExDQjRMQ0IyS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCelcyVmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm5JRDA5UFNCMmIybGtJREFnUHlBb1p5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJSFV1YVdRc0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2dkU3dLSUNBZ0lDQWdJQ0FnSUNBZ1oyVnZiV1YwY25rNklHUXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHVnlhV0ZzT2lCbUxBb2dJQ0FnSUNBZ0lDQWdJQ0JuY205MWNFOXlaR1Z5T2lCdExBb2dJQ0FnSUNBZ0lDQWdJQ0J5Wlc1a1pYSlBjbVJsY2pvZ2RTNXlaVzVrWlhKUGNtUmxjaXdLSUNBZ0lDQWdJQ0FnSUNBZ2Vqb2dlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ozSnZkWEE2SUhZS0lDQWdJQ0FnSUNCOUxDQnpXMlZkSUQwZ1p5a2dPaUFvWnk1cFpDQTlJSFV1YVdRc0lHY3ViMkpxWldOMElEMGdkU3dnWnk1blpXOXRaWFJ5ZVNBOUlHUXNJR2N1YldGMFpYSnBZV3dnUFNCbUxDQm5MbWR5YjNWd1QzSmtaWElnUFNCdExDQm5MbkpsYm1SbGNrOXlaR1Z5SUQwZ2RTNXlaVzVrWlhKUGNtUmxjaXdnWnk1NklEMGdlQ3dnWnk1bmNtOTFjQ0E5SUhZcExDQmxLeXNzSUdjN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhLSFVzSUdRc0lHWXNJRzBzSUhnc0lIWXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJRzhvZFN3Z1pDd2daaXdnYlN3Z2VDd2dkaWs3Q2lBZ0lDQWdJQ0FnWmk1MGNtRnVjMjFwYzNOcGIyNGdQaUF3SUQ4Z2JpNXdkWE5vS0djcElEb2daaTUwY21GdWMzQmhjbVZ1ZENBOVBUMGdJVEFnUHlCcExuQjFjMmdvWnlrZ09pQjBMbkIxYzJnb1p5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJzS0hVc0lHUXNJR1lzSUcwc0lIZ3NJSFlwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUc4b2RTd2daQ3dnWml3Z2JTd2dlQ3dnZGlrN0NpQWdJQ0FnSUNBZ1ppNTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0lEOGdiaTUxYm5Ob2FXWjBLR2NwSURvZ1ppNTBjbUZ1YzNCaGNtVnVkQ0E5UFQwZ0lUQWdQeUJwTG5WdWMyaHBablFvWnlrZ09pQjBMblZ1YzJocFpuUW9aeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaktIVXNJR1FwSUhzS0lDQWdJQ0FnSUNCMExteGxibWQwYUNBK0lERWdKaVlnZEM1emIzSjBLSFVnZkh3Z2NIZ3BMQ0J1TG14bGJtZDBhQ0ErSURFZ0ppWWdiaTV6YjNKMEtHUWdmSHdnV1d3cExDQnBMbXhsYm1kMGFDQStJREVnSmlZZ2FTNXpiM0owS0dRZ2ZId2dXV3dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FDZ3BJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNCbExDQmtJRDBnY3k1c1pXNW5kR2c3SUhVZ1BDQmtPeUIxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ppQTlJSE5iZFYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobUxtbGtJRDA5UFNCdWRXeHNLU0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWmk1cFpDQTlJRzUxYkd3c0lHWXViMkpxWldOMElEMGdiblZzYkN3Z1ppNW5aVzl0WlhSeWVTQTlJRzUxYkd3c0lHWXViV0YwWlhKcFlXd2dQU0J1ZFd4c0xDQm1MbWR5YjNWd0lEMGdiblZzYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHOXdZWEYxWlRvZ2RDd0tJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBkbVU2SUc0c0NpQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUTZJR2tzQ2lBZ0lDQWdJQ0FnYVc1cGREb2djaXdLSUNBZ0lDQWdJQ0J3ZFhOb09pQmhMQW9nSUNBZ0lDQWdJSFZ1YzJocFpuUTZJR3dzQ2lBZ0lDQWdJQ0FnWm1sdWFYTm9PaUJvTEFvZ0lDQWdJQ0FnSUhOdmNuUTZJR01LSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnYlhnb0tTQjdDaUFnSUNCc1pYUWdjeUE5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnWlNodUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITXVhR0Z6S0c0cElEMDlQU0FoTVNBL0lDaHlJRDBnYm1WM0lGcHNMQ0J6TG5ObGRDaHVMQ0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lISUtJQ0FnSUNBZ0lDQmRLU2tnT2lCcElENDlJSE11WjJWMEtHNHBMbXhsYm1kMGFDQS9JQ2h5SUQwZ2JtVjNJRnBzTENCekxtZGxkQ2h1S1M1d2RYTm9LSElwS1NBNklISWdQU0J6TG1kbGRDaHVLVnRwWFN3Z2Nqc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFFvS1NCN0NpQWdJQ0FnSUNBZ2N5QTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1VzQ2lBZ0lDQWdJQ0FnWkdsemNHOXpaVG9nZEFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCbmVDZ3BJSHNLSUNBZ0lHeGxkQ0J6SUQwZ2UzMDdDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzF0bExtbGtYU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnYzF0bExtbGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNobExuUjVjR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlSR2x5WldOMGFXOXVZV3hNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQnVaWGNnVFN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJRzVsZHlCaFpRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlRjRzkwVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQnVaWGNnVFN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCdVpYY2dUU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHNWxkeUJoWlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJtVkRiM002SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCbGJuVnRZbkpoUTI5ek9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV05oZVRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlFiMmx1ZEV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dibVYzSUUwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJ1WlhjZ1lXVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM1JoYm1ObE9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV05oZVRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSklaVzFwYzNCb1pYSmxUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ2JtVjNJRTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5yZVVOdmJHOXlPaUJ1WlhjZ1lXVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZHliM1Z1WkVOdmJHOXlPaUJ1WlhjZ1lXVUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVbVZqZEVGeVpXRk1hV2RvZENJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJRzVsZHlCaFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHNWxkeUJOTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVd4bVYybGtkR2c2SUc1bGR5Qk5MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9ZV3htU0dWcFoyaDBPaUJ1WlhjZ1RRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSE5iWlM1cFpGMGdQU0IwTENCME93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdlSGdvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJSHQ5T3dvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmJaUzVwWkYwZ0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlITmJaUzVwWkYwN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCME93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aUzUwZVhCbEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWtScGNtVmpkR2x2Ym1Gc1RHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwSnBZWE02SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE02SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMUpoWkdsMWN6b2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1RXRndVMmw2WlRvZ2JtVjNJRmdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVTNCdmRFeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZENhV0Z6T2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RPYjNKdFlXeENhV0Z6T2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RTWVdScGRYTTZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRk5wZW1VNklHNWxkeUJZQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxCdmFXNTBUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMEpwWVhNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDFKaFpHbDFjem9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNUV0Z3VTJsNlpUb2dibVYzSUZnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkME5oYldWeVlVNWxZWEk2SURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkME5oYldWeVlVWmhjam9nTVdVekNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjMXRsTG1sa1hTQTlJSFFzSUhRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlRzS2ZRcDJZWElnZVhnZ1BTQXdPd3BtZFc1amRHbHZiaUIyZUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z0tHVXVZMkZ6ZEZOb1lXUnZkeUEvSURFZ09pQXdLU0F0SUNoekxtTmhjM1JUYUdGa2IzY2dQeUF4SURvZ01DazdDbjBLWm5WdVkzUnBiMjRnWDNnb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQnVaWGNnWjNnc0lHNGdQU0I0ZUNncExDQnBJRDBnZXdvZ0lDQWdJQ0FnSUhabGNuTnBiMjQ2SURBc0NpQWdJQ0FnSUNBZ2FHRnphRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNWhiRXhsYm1kMGFEb2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwVEdWdVozUm9PaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdjM0J2ZEV4bGJtZDBhRG9nTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsWTNSQmNtVmhUR1Z1WjNSb09pQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnRhVXhsYm1kMGFEb2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVVJwY21WamRHbHZibUZzVTJoaFpHOTNjem9nTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZCdmFXNTBVMmhoWkc5M2N6b2dMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVk53YjNSVGFHRmtiM2R6T2lBdE1Rb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZVzFpYVdWdWREb2dXd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0J3Y205aVpUb2dXMTBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd3NklGdGRMQW9nSUNBZ0lDQWdJR1JwY21WamRHbHZibUZzVTJoaFpHOTNPaUJiWFN3S0lDQWdJQ0FnSUNCa2FYSmxZM1JwYjI1aGJGTm9ZV1J2ZDAxaGNEb2dXMTBzQ2lBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhSeWFYZzZJRnRkTEFvZ0lDQWdJQ0FnSUhOd2IzUTZJRnRkTEFvZ0lDQWdJQ0FnSUhOd2IzUlRhR0ZrYjNjNklGdGRMQW9nSUNBZ0lDQWdJSE53YjNSVGFHRmtiM2ROWVhBNklGdGRMQW9nSUNBZ0lDQWdJSE53YjNSVGFHRmtiM2ROWVhSeWFYZzZJRnRkTEFvZ0lDQWdJQ0FnSUhKbFkzUkJjbVZoT2lCYlhTd0tJQ0FnSUNBZ0lDQnlaV04wUVhKbFlVeFVRekU2SUc1MWJHd3NDaUFnSUNBZ0lDQWdjbVZqZEVGeVpXRk1WRU15T2lCdWRXeHNMQW9nSUNBZ0lDQWdJSEJ2YVc1ME9pQmJYU3dLSUNBZ0lDQWdJQ0J3YjJsdWRGTm9ZV1J2ZHpvZ1cxMHNDaUFnSUNBZ0lDQWdjRzlwYm5SVGFHRmtiM2ROWVhBNklGdGRMQW9nSUNBZ0lDQWdJSEJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRPaUJiWFN3S0lDQWdJQ0FnSUNCb1pXMXBPaUJiWFFvZ0lDQWdmVHNLSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREE3SUdnZ1BDQTVPeUJvS3lzcGFTNXdjbTlpWlM1d2RYTm9LRzVsZHlCTktUc0tJQ0FnSUd4bGRDQnlJRDBnYm1WM0lFMHNJRzhnUFNCdVpYY2djR1VzSUdFZ1BTQnVaWGNnY0dVN0NpQWdJQ0JtZFc1amRHbHZiaUJzS0dnc0lIVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJREFzSUdZZ1BTQXdMQ0J0SUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHc2dQU0F3T3lCcklEd2dPVHNnYXlzcktXa3VjSEp2WW1WYmExMHVjMlYwS0RBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnTUN3Z2RpQTlJREFzSUdjZ1BTQXdMQ0J3SUQwZ01Dd2dYeUE5SURBc0lIa2dQU0F3TENCaUlEMGdNQ3dnUVNBOUlEQTdDaUFnSUNBZ0lDQWdhQzV6YjNKMEtIWjRLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1RDQTlJSFVnSVQwOUlDRXdJRDhnVFdGMGFDNVFTU0E2SURFN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCck1TQTlJREFzSUVJZ1BTQm9MbXhsYm1kMGFEc2dhekVnUENCQ095QnJNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZBZ1BTQm9XMnN4WFN3Z2R5QTlJRkF1WTI5c2IzSXNJRVVnUFNCUUxtbHVkR1Z1YzJsMGVTd2dSQ0E5SUZBdVpHbHpkR0Z1WTJVc0lGVWdQU0JRTG5Ob1lXUnZkeUFtSmlCUUxuTm9ZV1J2ZHk1dFlYQWdQeUJRTG5Ob1lXUnZkeTV0WVhBdWRHVjRkSFZ5WlNBNklHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hRTG1selFXMWlhV1Z1ZEV4cFoyaDBLU0JrSUNzOUlIY3VjaUFxSUVVZ0tpQk1MQ0JtSUNzOUlIY3VaeUFxSUVVZ0tpQk1MQ0J0SUNzOUlIY3VZaUFxSUVVZ0tpQk1Pd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoUUxtbHpUR2xuYUhSUWNtOWlaU2tnWm05eUtHeGxkQ0JHSUQwZ01Ec2dSaUE4SURrN0lFWXJLeWxwTG5CeWIySmxXMFpkTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhRTG5Ob0xtTnZaV1ptYVdOcFpXNTBjMXRHWFN3Z1JTazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0ZBdWFYTkVhWEpsWTNScGIyNWhiRXhwWjJoMEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmpFZ1BTQjBMbWRsZENoUUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hHTVM1amIyeHZjaTVqYjNCNUtGQXVZMjlzYjNJcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0ZBdWFXNTBaVzV6YVhSNUlDb2dUQ2tzSUZBdVkyRnpkRk5vWVdSdmR5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlBJRDBnVUM1emFHRmtiM2NzSUc1bElEMGdiaTVuWlhRb1VDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1VdWMyaGhaRzkzUW1saGN5QTlJRTh1WW1saGN5d2dibVV1YzJoaFpHOTNUbTl5YldGc1FtbGhjeUE5SUU4dWJtOXliV0ZzUW1saGN5d2dibVV1YzJoaFpHOTNVbUZrYVhWeklEMGdUeTV5WVdScGRYTXNJRzVsTG5Ob1lXUnZkMDFoY0ZOcGVtVWdQU0JQTG0xaGNGTnBlbVVzSUdrdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkYmVGMGdQU0J1WlN3Z2FTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjRnQ0WFNBOUlGVXNJR2t1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2ROWVhSeWFYaGJlRjBnUFNCUUxuTm9ZV1J2ZHk1dFlYUnlhWGdzSUhrckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VaR2x5WldOMGFXOXVZV3hiZUYwZ1BTQkdNU3dnZUNzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZBdWFYTlRjRzkwVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR01pQTlJSFF1WjJWMEtGQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VZeUxuQnZjMmwwYVc5dUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhRTG0xaGRISnBlRmR2Y214a0tTd2dSakl1WTI5c2IzSXVZMjl3ZVNoM0tTNXRkV3gwYVhCc2VWTmpZV3hoY2loRklDb2dUQ2tzSUVZeUxtUnBjM1JoYm1ObElEMGdSQ3dnUmpJdVkyOXVaVU52Y3lBOUlFMWhkR2d1WTI5ektGQXVZVzVuYkdVcExDQkdNaTV3Wlc1MWJXSnlZVU52Y3lBOUlFMWhkR2d1WTI5ektGQXVZVzVuYkdVZ0tpQW9NU0F0SUZBdWNHVnVkVzFpY21FcEtTd2dSakl1WkdWallYa2dQU0JRTG1SbFkyRjVMQ0JRTG1OaGMzUlRhR0ZrYjNjcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1R6RWdQU0JRTG5Ob1lXUnZkeXdnYm1VeElEMGdiaTVuWlhRb1VDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1VeExuTm9ZV1J2ZDBKcFlYTWdQU0JQTVM1aWFXRnpMQ0J1WlRFdWMyaGhaRzkzVG05eWJXRnNRbWxoY3lBOUlFOHhMbTV2Y20xaGJFSnBZWE1zSUc1bE1TNXphR0ZrYjNkU1lXUnBkWE1nUFNCUE1TNXlZV1JwZFhNc0lHNWxNUzV6YUdGa2IzZE5ZWEJUYVhwbElEMGdUekV1YldGd1UybDZaU3dnYVM1emNHOTBVMmhoWkc5M1cyZGRJRDBnYm1VeExDQnBMbk53YjNSVGFHRmtiM2ROWVhCYloxMGdQU0JWTENCcExuTndiM1JUYUdGa2IzZE5ZWFJ5YVhoYloxMGdQU0JRTG5Ob1lXUnZkeTV0WVhSeWFYZ3NJRUVyS3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWMzQnZkRnRuWFNBOUlFWXlMQ0JuS3lzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvVUM1cGMxSmxZM1JCY21WaFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdNeUE5SUhRdVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUmpNdVkyOXNiM0l1WTI5d2VTaDNLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZLU3dnUmpNdWFHRnNabGRwWkhSb0xuTmxkQ2hRTG5kcFpIUm9JQ29nTGpVc0lEQXNJREFwTENCR015NW9ZV3htU0dWcFoyaDBMbk5sZENnd0xDQlFMbWhsYVdkb2RDQXFJQzQxTENBd0tTd2dhUzV5WldOMFFYSmxZVnR3WFNBOUlFWXpMQ0J3S3lzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvVUM1cGMxQnZhVzUwVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR05DQTlJSFF1WjJWMEtGQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VZMExtTnZiRzl5TG1OdmNIa29VQzVqYjJ4dmNpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1VDNXBiblJsYm5OcGRIa2dLaUJNS1N3Z1JqUXVaR2x6ZEdGdVkyVWdQU0JRTG1ScGMzUmhibU5sTENCR05DNWtaV05oZVNBOUlGQXVaR1ZqWVhrc0lGQXVZMkZ6ZEZOb1lXUnZkeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JQTWlBOUlGQXVjMmhoWkc5M0xDQnVaVElnUFNCdUxtZGxkQ2hRS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaVEl1YzJoaFpHOTNRbWxoY3lBOUlFOHlMbUpwWVhNc0lHNWxNaTV6YUdGa2IzZE9iM0p0WVd4Q2FXRnpJRDBnVHpJdWJtOXliV0ZzUW1saGN5d2dibVV5TG5Ob1lXUnZkMUpoWkdsMWN5QTlJRTh5TG5KaFpHbDFjeXdnYm1VeUxuTm9ZV1J2ZDAxaGNGTnBlbVVnUFNCUE1pNXRZWEJUYVhwbExDQnVaVEl1YzJoaFpHOTNRMkZ0WlhKaFRtVmhjaUE5SUU4eUxtTmhiV1Z5WVM1dVpXRnlMQ0J1WlRJdWMyaGhaRzkzUTJGdFpYSmhSbUZ5SUQwZ1R6SXVZMkZ0WlhKaExtWmhjaXdnYVM1d2IybHVkRk5vWVdSdmQxdDJYU0E5SUc1bE1pd2dhUzV3YjJsdWRGTm9ZV1J2ZDAxaGNGdDJYU0E5SUZVc0lHa3VjRzlwYm5SVGFHRmtiM2ROWVhSeWFYaGJkbDBnUFNCUUxuTm9ZV1J2ZHk1dFlYUnlhWGdzSUdJckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VjRzlwYm5SYmRsMGdQU0JHTkN3Z2Rpc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGQXVhWE5JWlcxcGMzQm9aWEpsVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR05TQTlJSFF1WjJWMEtGQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSalV1YzJ0NVEyOXNiM0l1WTI5d2VTaFFMbU52Ykc5eUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loRklDb2dUQ2tzSUVZMUxtZHliM1Z1WkVOdmJHOXlMbU52Y0hrb1VDNW5jbTkxYm1SRGIyeHZjaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9SU0FxSUV3cExDQnBMbWhsYldsYlgxMGdQU0JHTlN3Z1h5c3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIQWdQaUF3SUNZbUlDaGxMbWx6VjJWaVIwd3lJSHg4SUhNdWFHRnpLQ0pQUlZOZmRHVjRkSFZ5WlY5bWJHOWhkRjlzYVc1bFlYSWlLU0E5UFQwZ0lUQWdQeUFvYVM1eVpXTjBRWEpsWVV4VVF6RWdQU0JwWlM1TVZFTmZSa3hQUVZSZk1Td2dhUzV5WldOMFFYSmxZVXhVUXpJZ1BTQnBaUzVNVkVOZlJreFBRVlJmTWlrZ09pQnpMbWhoY3lnaVQwVlRYM1JsZUhSMWNtVmZhR0ZzWmw5bWJHOWhkRjlzYVc1bFlYSWlLU0E5UFQwZ0lUQWdQeUFvYVM1eVpXTjBRWEpsWVV4VVF6RWdQU0JwWlM1TVZFTmZTRUZNUmw4eExDQnBMbkpsWTNSQmNtVmhURlJETWlBOUlHbGxMa3hVUTE5SVFVeEdYeklwSURvZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZXNWhZbXhsSUhSdklIVnpaU0JTWldOMFFYSmxZVXhwWjJoMExpQk5hWE56YVc1bklGZGxZa2RNSUdWNGRHVnVjMmx2Ym5NdUlpa3BMQ0JwTG1GdFltbGxiblJiTUYwZ1BTQmtMQ0JwTG1GdFltbGxiblJiTVYwZ1BTQm1MQ0JwTG1GdFltbGxiblJiTWwwZ1BTQnRPd29nSUNBZ0lDQWdJR3hsZENCSklEMGdhUzVvWVhOb093b2dJQ0FnSUNBZ0lDaEpMbVJwY21WamRHbHZibUZzVEdWdVozUm9JQ0U5UFNCNElIeDhJRWt1Y0c5cGJuUk1aVzVuZEdnZ0lUMDlJSFlnZkh3Z1NTNXpjRzkwVEdWdVozUm9JQ0U5UFNCbklIeDhJRWt1Y21WamRFRnlaV0ZNWlc1bmRHZ2dJVDA5SUhBZ2ZId2dTUzVvWlcxcFRHVnVaM1JvSUNFOVBTQmZJSHg4SUVrdWJuVnRSR2x5WldOMGFXOXVZV3hUYUdGa2IzZHpJQ0U5UFNCNUlIeDhJRWt1Ym5WdFVHOXBiblJUYUdGa2IzZHpJQ0U5UFNCaUlIeDhJRWt1Ym5WdFUzQnZkRk5vWVdSdmQzTWdJVDA5SUVFcElDWW1JQ2hwTG1ScGNtVmpkR2x2Ym1Gc0xteGxibWQwYUNBOUlIZ3NJR2t1YzNCdmRDNXNaVzVuZEdnZ1BTQm5MQ0JwTG5KbFkzUkJjbVZoTG14bGJtZDBhQ0E5SUhBc0lHa3VjRzlwYm5RdWJHVnVaM1JvSUQwZ2Rpd2dhUzVvWlcxcExteGxibWQwYUNBOUlGOHNJR2t1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2N1YkdWdVozUm9JRDBnZVN3Z2FTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjQzVzWlc1bmRHZ2dQU0I1TENCcExuQnZhVzUwVTJoaFpHOTNMbXhsYm1kMGFDQTlJR0lzSUdrdWNHOXBiblJUYUdGa2IzZE5ZWEF1YkdWdVozUm9JRDBnWWl3Z2FTNXpjRzkwVTJoaFpHOTNMbXhsYm1kMGFDQTlJRUVzSUdrdWMzQnZkRk5vWVdSdmQwMWhjQzVzWlc1bmRHZ2dQU0JCTENCcExtUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0TG14bGJtZDBhQ0E5SUhrc0lHa3VjRzlwYm5SVGFHRmtiM2ROWVhSeWFYZ3ViR1Z1WjNSb0lEMGdZaXdnYVM1emNHOTBVMmhoWkc5M1RXRjBjbWw0TG14bGJtZDBhQ0E5SUVFc0lFa3VaR2x5WldOMGFXOXVZV3hNWlc1bmRHZ2dQU0I0TENCSkxuQnZhVzUwVEdWdVozUm9JRDBnZGl3Z1NTNXpjRzkwVEdWdVozUm9JRDBnWnl3Z1NTNXlaV04wUVhKbFlVeGxibWQwYUNBOUlIQXNJRWt1YUdWdGFVeGxibWQwYUNBOUlGOHNJRWt1Ym5WdFJHbHlaV04wYVc5dVlXeFRhR0ZrYjNkeklEMGdlU3dnU1M1dWRXMVFiMmx1ZEZOb1lXUnZkM01nUFNCaUxDQkpMbTUxYlZOd2IzUlRhR0ZrYjNkeklEMGdRU3dnYVM1MlpYSnphVzl1SUQwZ2VYZ3JLeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaktHZ3NJSFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SURBc0lHWWdQU0F3TENCdElEMGdNQ3dnZUNBOUlEQXNJSFlnUFNBd0xDQm5JRDBnZFM1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCd0lEMGdNQ3dnWHlBOUlHZ3ViR1Z1WjNSb095QndJRHdnWHpzZ2NDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCb1czQmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9lUzVwYzBScGNtVmpkR2x2Ym1Gc1RHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYVM1a2FYSmxZM1JwYjI1aGJGdGtYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0l1WkdseVpXTjBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z2NpNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZVM1MFlYSm5aWFF1YldGMGNtbDRWMjl5YkdRcExDQmlMbVJwY21WamRHbHZiaTV6ZFdJb2Npa3NJR0l1WkdseVpXTjBhVzl1TG5SeVlXNXpabTl5YlVScGNtVmpkR2x2YmlobktTd2daQ3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSGt1YVhOVGNHOTBUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpTVNBOUlHa3VjM0J2ZEZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXhMbkJ2YzJsMGFXOXVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloNUxtMWhkSEpwZUZkdmNteGtLU3dnWWpFdWNHOXphWFJwYjI0dVlYQndiSGxOWVhSeWFYZzBLR2NwTENCaU1TNWthWEpsWTNScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hrdWJXRjBjbWw0VjI5eWJHUXBMQ0J5TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMblJoY21kbGRDNXRZWFJ5YVhoWGIzSnNaQ2tzSUdJeExtUnBjbVZqZEdsdmJpNXpkV0lvY2lrc0lHSXhMbVJwY21WamRHbHZiaTUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvWnlrc0lHMHJLenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDVMbWx6VW1WamRFRnlaV0ZNYVdkb2RDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJeUlEMGdhUzV5WldOMFFYSmxZVnQ0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJeUxuQnZjMmwwYVc5dUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWg1TG0xaGRISnBlRmR2Y214a0tTd2dZakl1Y0c5emFYUnBiMjR1WVhCd2JIbE5ZWFJ5YVhnMEtHY3BMQ0JoTG1sa1pXNTBhWFI1S0Nrc0lHOHVZMjl3ZVNoNUxtMWhkSEpwZUZkdmNteGtLU3dnYnk1d2NtVnRkV3gwYVhCc2VTaG5LU3dnWVM1bGVIUnlZV04wVW05MFlYUnBiMjRvYnlrc0lHSXlMbWhoYkdaWGFXUjBhQzV6WlhRb2VTNTNhV1IwYUNBcUlDNDFMQ0F3TENBd0tTd2dZakl1YUdGc1praGxhV2RvZEM1elpYUW9NQ3dnZVM1b1pXbG5hSFFnS2lBdU5Td2dNQ2tzSUdJeUxtaGhiR1pYYVdSMGFDNWhjSEJzZVUxaGRISnBlRFFvWVNrc0lHSXlMbWhoYkdaSVpXbG5hSFF1WVhCd2JIbE5ZWFJ5YVhnMEtHRXBMQ0I0S3lzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZVM1cGMxQnZhVzUwVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaU15QTlJR2t1Y0c5cGJuUmJabDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTXk1d2IzTnBkR2x2Ymk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9lUzV0WVhSeWFYaFhiM0pzWkNrc0lHSXpMbkJ2YzJsMGFXOXVMbUZ3Y0d4NVRXRjBjbWw0TkNobktTd2daaXNyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSGt1YVhOSVpXMXBjM0JvWlhKbFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlOQ0E5SUdrdWFHVnRhVnQyWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJMExtUnBjbVZqZEdsdmJpNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZVM1dFlYUnlhWGhYYjNKc1pDa3NJR0kwTG1ScGNtVmpkR2x2Ymk1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b1p5a3NJR0kwTG1ScGNtVmpkR2x2Ymk1dWIzSnRZV3hwZW1Vb0tTd2dkaXNyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0J6WlhSMWNEb2diQ3dLSUNBZ0lDQWdJQ0J6WlhSMWNGWnBaWGM2SUdNc0NpQWdJQ0FnSUNBZ2MzUmhkR1U2SUdrS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z0pHd29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0J1WlhjZ1gzZ29jeXdnWlNrc0lHNGdQU0JiWFN3Z2FTQTlJRnRkT3dvZ0lDQWdablZ1WTNScGIyNGdjaWdwSUhzS0lDQWdJQ0FnSUNCdUxteGxibWQwYUNBOUlEQXNJR2t1YkdWdVozUm9JRDBnTURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHOG9kU2tnZXdvZ0lDQWdJQ0FnSUc0dWNIVnphQ2gxS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHRW9kU2tnZXdvZ0lDQWdJQ0FnSUdrdWNIVnphQ2gxS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHd29kU2tnZXdvZ0lDQWdJQ0FnSUhRdWMyVjBkWEFvYml3Z2RTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJqS0hVcElIc0tJQ0FnSUNBZ0lDQjBMbk5sZEhWd1ZtbGxkeWh1TENCMUtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdhVzVwZERvZ2Npd0tJQ0FnSUNBZ0lDQnpkR0YwWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzYVdkb2RITkJjbkpoZVRvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNjMEZ5Y21GNU9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCc2FXZG9kSE02SUhRS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkSFZ3VEdsbmFIUnpPaUJzTEFvZ0lDQWdJQ0FnSUhObGRIVndUR2xuYUhSelZtbGxkem9nWXl3S0lDQWdJQ0FnSUNCd2RYTm9UR2xuYUhRNklHOHNDaUFnSUNBZ0lDQWdjSFZ6YUZOb1lXUnZkem9nWVFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCTmVDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdablZ1WTNScGIyNGdiaWh5TENCdklEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbWhoY3loeUtTQTlQVDBnSVRFZ1B5QW9ZU0E5SUc1bGR5QWtiQ2h6TENCbEtTd2dkQzV6WlhRb2Npd2dXd29nSUNBZ0lDQWdJQ0FnSUNCaENpQWdJQ0FnSUNBZ1hTa3BJRG9nYnlBK1BTQjBMbWRsZENoeUtTNXNaVzVuZEdnZ1B5QW9ZU0E5SUc1bGR5QWtiQ2h6TENCbEtTd2dkQzVuWlhRb2Npa3VjSFZ6YUNoaEtTa2dPaUJoSUQwZ2RDNW5aWFFvY2lsYmIxMHNJR0U3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcEtDa2dld29nSUNBZ0lDQWdJSFFnUFNCdVpYY2dWMlZoYTAxaGNEc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwT2lCdUxBb2dJQ0FnSUNBZ0lHUnBjM0J2YzJVNklHa0tJQ0FnSUgwN0NuMEtkbUZ5SUdWdklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9SR1Z3ZEdoTllYUmxjbWxoYkNJc0lIUm9hWE11WkdWd2RHaFFZV05yYVc1bklEMGdUbVFzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlERXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlEQXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTVtYjJjZ1BTQWhNU3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1a1pYQjBhRkJoWTJ0cGJtY2dQU0JsTG1SbGNIUm9VR0ZqYTJsdVp5d2dkR2hwY3k1dFlYQWdQU0JsTG0xaGNDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbVZ2TG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhFWlhCMGFFMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQjBieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdaSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUVScGMzUmhibU5sVFdGMFpYSnBZV3dpTENCMGFHbHpMbkpsWm1WeVpXNWpaVkJ2YzJsMGFXOXVJRDBnYm1WM0lFMHNJSFJvYVhNdWJtVmhja1JwYzNSaGJtTmxJRDBnTVN3Z2RHaHBjeTVtWVhKRWFYTjBZVzVqWlNBOUlERmxNeXdnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1bWIyY2dQU0FoTVN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXlaV1psY21WdVkyVlFiM05wZEdsdmJpNWpiM0I1S0dVdWNtVm1aWEpsYm1ObFVHOXphWFJwYjI0cExDQjBhR2x6TG01bFlYSkVhWE4wWVc1alpTQTlJR1V1Ym1WaGNrUnBjM1JoYm1ObExDQjBhR2x6TG1aaGNrUnBjM1JoYm1ObElEMGdaUzVtWVhKRWFYTjBZVzVqWlN3Z2RHaHBjeTV0WVhBZ1BTQmxMbTFoY0N3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUdVdVlXeHdhR0ZOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1zSUhSb2FYTTdDaUFnSUNCOUNuMDdDblJ2TG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhFYVhOMFlXNWpaVTFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJpZUNBOUlHQjJiMmxrSUcxaGFXNG9LU0I3Q2dsbmJGOVFiM05wZEdsdmJpQTlJSFpsWXpRb0lIQnZjMmwwYVc5dUxDQXhMakFnS1RzS2ZXQXNJSGQ0SUQwZ1lIVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITm9ZV1J2ZDE5d1lYTnpPd3AxYm1sbWIzSnRJSFpsWXpJZ2NtVnpiMngxZEdsdmJqc0tkVzVwWm05eWJTQm1iRzloZENCeVlXUnBkWE03Q2lOcGJtTnNkV1JsSUR4d1lXTnJhVzVuUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2xqYjI1emRDQm1iRzloZENCellXMXdiR1Z6SUQwZ1pteHZZWFFvSUZaVFRWOVRRVTFRVEVWVElDazdDZ2xtYkc5aGRDQnRaV0Z1SUQwZ01DNHdPd29KWm14dllYUWdjM0YxWVhKbFpGOXRaV0Z1SUQwZ01DNHdPd29KWm14dllYUWdkWFpUZEhKcFpHVWdQU0J6WVcxd2JHVnpJRHc5SURFdU1DQS9JREF1TUNBNklESXVNQ0F2SUNnZ2MyRnRjR3hsY3lBdElERXVNQ0FwT3dvSlpteHZZWFFnZFhaVGRHRnlkQ0E5SUhOaGJYQnNaWE1nUEQwZ01TNHdJRDhnTUM0d0lEb2dMU0F4TGpBN0NnbG1iM0lnS0NCbWJHOWhkQ0JwSUQwZ01DNHdPeUJwSUR3Z2MyRnRjR3hsY3pzZ2FTQXJLeUFwSUhzS0NRbG1iRzloZENCMWRrOW1abk5sZENBOUlIVjJVM1JoY25RZ0t5QnBJQ29nZFhaVGRISnBaR1U3Q2drSkkybG1aR1ZtSUVoUFVrbGFUMDVVUVV4ZlVFRlRVd29KQ1FsMlpXTXlJR1JwYzNSeWFXSjFkR2x2YmlBOUlIVnVjR0ZqYTFKSFFrRlViekpJWVd4bUtDQjBaWGgwZFhKbE1rUW9JSE5vWVdSdmQxOXdZWE56TENBb0lHZHNYMFp5WVdkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUhWMlQyWm1jMlYwTENBd0xqQWdLU0FxSUhKaFpHbDFjeUFwSUM4Z2NtVnpiMngxZEdsdmJpQXBJQ2s3Q2drSkNXMWxZVzRnS3owZ1pHbHpkSEpwWW5WMGFXOXVMbmc3Q2drSkNYTnhkV0Z5WldSZmJXVmhiaUFyUFNCa2FYTjBjbWxpZFhScGIyNHVlU0FxSUdScGMzUnlhV0oxZEdsdmJpNTVJQ3NnWkdsemRISnBZblYwYVc5dUxuZ2dLaUJrYVhOMGNtbGlkWFJwYjI0dWVEc0tDUWtqWld4elpRb0pDUWxtYkc5aGRDQmtaWEIwYUNBOUlIVnVjR0ZqYTFKSFFrRlViMFJsY0hSb0tDQjBaWGgwZFhKbE1rUW9JSE5vWVdSdmQxOXdZWE56TENBb0lHZHNYMFp5WVdkRGIyOXlaQzU0ZVNBcklIWmxZeklvSURBdU1Dd2dkWFpQWm1aelpYUWdLU0FxSUhKaFpHbDFjeUFwSUM4Z2NtVnpiMngxZEdsdmJpQXBJQ2s3Q2drSkNXMWxZVzRnS3owZ1pHVndkR2c3Q2drSkNYTnhkV0Z5WldSZmJXVmhiaUFyUFNCa1pYQjBhQ0FxSUdSbGNIUm9Pd29KQ1NObGJtUnBaZ29KZlFvSmJXVmhiaUE5SUcxbFlXNGdMeUJ6WVcxd2JHVnpPd29KYzNGMVlYSmxaRjl0WldGdUlEMGdjM0YxWVhKbFpGOXRaV0Z1SUM4Z2MyRnRjR3hsY3pzS0NXWnNiMkYwSUhOMFpGOWtaWFlnUFNCemNYSjBLQ0J6Y1hWaGNtVmtYMjFsWVc0Z0xTQnRaV0Z1SUNvZ2JXVmhiaUFwT3dvSloyeGZSbkpoWjBOdmJHOXlJRDBnY0dGamF6SklZV3htVkc5U1IwSkJLQ0IyWldNeUtDQnRaV0Z1TENCemRHUmZaR1YySUNrZ0tUc0tmV0E3Q21aMWJtTjBhVzl1SUhsb0tITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnYm1WM0lFUnlMQ0JwSUQwZ2JtVjNJRmdzSUhJZ1BTQnVaWGNnV0N3Z2J5QTlJRzVsZHlCV1pTd2dZU0E5SUc1bGR5QmxieWg3Q2lBZ0lDQWdJQ0FnWkdWd2RHaFFZV05yYVc1bk9pQkNaQW9nSUNBZ2ZTa3NJR3dnUFNCdVpYY2dkRzhzSUdNZ1BTQjdmU3dnYUNBOUlIUXViV0Y0VkdWNGRIVnlaVk5wZW1Vc0lIVWdQU0I3Q2lBZ0lDQWdJQ0FnTURvZ2FYUXNDaUFnSUNBZ0lDQWdNVG9nUVdrc0NpQWdJQ0FnSUNBZ01qb2dRMmtLSUNBZ0lIMHNJR1FnUFNCdVpYY2djMjRvZXdvZ0lDQWdJQ0FnSUdSbFptbHVaWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdWbE5OWDFOQlRWQk1SVk02SURnS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMTl3WVhOek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhOdmJIVjBhVzl1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lGZ0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ05Bb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJR0o0TEFvZ0lDQWdJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUIzZUFvZ0lDQWdmU2tzSUdZZ1BTQmtMbU5zYjI1bEtDazdDaUFnSUNCbUxtUmxabWx1WlhNdVNFOVNTVnBQVGxSQlRGOVFRVk5USUQwZ01Uc0tJQ0FnSUd4bGRDQnRJRDBnYm1WM0lGOWxPd29nSUNBZ2JTNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJRlZsS0c1bGR5QkdiRzloZERNeVFYSnlZWGtvV3dvZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQzQxTEFvZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdMalVzQ2lBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQXVOUW9nSUNBZ1hTa3NJRE1wS1RzS0lDQWdJR3hsZENCNElEMGdibVYzSUhOMEtHMHNJR1FwTENCMklEMGdkR2hwY3pzS0lDQWdJSFJvYVhNdVpXNWhZbXhsWkNBOUlDRXhMQ0IwYUdsekxtRjFkRzlWY0dSaGRHVWdQU0FoTUN3Z2RHaHBjeTV1WldWa2MxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxuUjVjR1VnUFNCSVl5d2dkR2hwY3k1eVpXNWtaWElnUFNCbWRXNWpkR2x2YmloNUxDQmlMQ0JCS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFl1Wlc1aFlteGxaQ0E5UFQwZ0lURWdmSHdnZGk1aGRYUnZWWEJrWVhSbElEMDlQU0FoTVNBbUppQjJMbTVsWldSelZYQmtZWFJsSUQwOVBTQWhNU0I4ZkNCNUxteGxibWQwYUNBOVBUMGdNQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCTUlEMGdjeTVuWlhSU1pXNWtaWEpVWVhKblpYUW9LU3dnU1NBOUlITXVaMlYwUVdOMGFYWmxRM1ZpWlVaaFkyVW9LU3dnYXlBOUlITXVaMlYwUVdOMGFYWmxUV2x3YldGd1RHVjJaV3dvS1N3Z1FpQTlJSE11YzNSaGRHVTdDaUFnSUNBZ0lDQWdRaTV6WlhSQ2JHVnVaR2x1WnloMmJpa3NJRUl1WW5WbVptVnljeTVqYjJ4dmNpNXpaWFJEYkdWaGNpZ3hMQ0F4TENBeExDQXhLU3dnUWk1aWRXWm1aWEp6TG1SbGNIUm9Mbk5sZEZSbGMzUW9JVEFwTENCQ0xuTmxkRk5qYVhOemIzSlVaWE4wS0NFeEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGQWdQU0F3TENCM0lEMGdlUzVzWlc1bmRHZzdJRkFnUENCM095QlFLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlIbGJVRjBzSUVRZ1BTQkZMbk5vWVdSdmR6c0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFUWdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURk5vWVdSdmQwMWhjRG9pTENCRkxDQWlhR0Z6SUc1dklITm9ZV1J2ZHk0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hFTG1GMWRHOVZjR1JoZEdVZ1BUMDlJQ0V4SUNZbUlFUXVibVZsWkhOVmNHUmhkR1VnUFQwOUlDRXhLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTNWpiM0I1S0VRdWJXRndVMmw2WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVklEMGdSQzVuWlhSR2NtRnRaVVY0ZEdWdWRITW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2t1YlhWc2RHbHdiSGtvVlNrc0lISXVZMjl3ZVNoRUxtMWhjRk5wZW1VcExDQW9hUzU0SUQ0Z2FDQjhmQ0JwTG5rZ1BpQm9LU0FtSmlBb2FTNTRJRDRnYUNBbUppQW9jaTU0SUQwZ1RXRjBhQzVtYkc5dmNpaG9JQzhnVlM1NEtTd2dhUzU0SUQwZ2NpNTRJQ29nVlM1NExDQkVMbTFoY0ZOcGVtVXVlQ0E5SUhJdWVDa3NJR2t1ZVNBK0lHZ2dKaVlnS0hJdWVTQTlJRTFoZEdndVpteHZiM0lvYUNBdklGVXVlU2tzSUdrdWVTQTlJSEl1ZVNBcUlGVXVlU3dnUkM1dFlYQlRhWHBsTG5rZ1BTQnlMbmtwS1N3Z1JDNXRZWEFnUFQwOUlHNTFiR3dnSmlZZ0lVUXVhWE5RYjJsdWRFeHBaMmgwVTJoaFpHOTNJQ1ltSUhSb2FYTXVkSGx3WlNBOVBUMGdhWElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlBJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2dkSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXRm5SbWxzZEdWeU9pQjBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFE2SUdOMENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JDNXRZWEFnUFNCdVpYY2dRWFFvYVM1NExDQnBMbmtzSUU4cExDQkVMbTFoY0M1MFpYaDBkWEpsTG01aGJXVWdQU0JGTG01aGJXVWdLeUFpTG5Ob1lXUnZkMDFoY0NJc0lFUXViV0Z3VUdGemN5QTlJRzVsZHlCQmRDaHBMbmdzSUdrdWVTd2dUeWtzSUVRdVkyRnRaWEpoTG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1JDNXRZWEFnUFQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlBNU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRhVzVHYVd4MFpYSTZJSEowTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhaMFpwYkhSbGNqb2djblFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXliV0YwT2lCamRBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFUXViV0Z3SUQwZ2JtVjNJRUYwS0drdWVDd2dhUzU1TENCUE1Ta3NJRVF1YldGd0xuUmxlSFIxY21VdWJtRnRaU0E5SUVVdWJtRnRaU0FySUNJdWMyaGhaRzkzVFdGd0lpd2dSQzVqWVcxbGNtRXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtFUXViV0Z3S1N3Z2N5NWpiR1ZoY2lncE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRVF1WjJWMFZtbGxkM0J2Y25SRGIzVnVkQ2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFOHlJRDBnTURzZ1R6SWdQQ0JHT3lCUE1pc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdVpTQTlJRVF1WjJWMFZtbGxkM0J2Y25Rb1R6SXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieTV6WlhRb2NpNTRJQ29nYm1VdWVDd2djaTU1SUNvZ2JtVXVlU3dnY2k1NElDb2dibVV1ZWl3Z2NpNTVJQ29nYm1VdWR5a3NJRUl1ZG1sbGQzQnZjblFvYnlrc0lFUXVkWEJrWVhSbFRXRjBjbWxqWlhNb1JTd2dUeklwTENCdUlEMGdSQzVuWlhSR2NuVnpkSFZ0S0Nrc0lGOG9ZaXdnUVN3Z1JDNWpZVzFsY21Fc0lFVXNJSFJvYVhNdWRIbHdaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSVVRdWFYTlFiMmx1ZEV4cFoyaDBVMmhoWkc5M0lDWW1JSFJvYVhNdWRIbHdaU0E5UFQwZ2FYSWdKaVlnWnloRUxDQkJLU3dnUkM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMkxtNWxaV1J6VlhCa1lYUmxJRDBnSVRFc0lITXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtFd3NJRWtzSUdzcE93b2dJQ0FnZlRzS0lDQWdJR1oxYm1OMGFXOXVJR2NvZVN3Z1lpa2dld29nSUNBZ0lDQWdJR3hsZENCQklEMGdaUzUxY0dSaGRHVW9lQ2s3Q2lBZ0lDQWdJQ0FnWkM1a1pXWnBibVZ6TGxaVFRWOVRRVTFRVEVWVElDRTlQU0I1TG1Kc2RYSlRZVzF3YkdWeklDWW1JQ2hrTG1SbFptbHVaWE11VmxOTlgxTkJUVkJNUlZNZ1BTQjVMbUpzZFhKVFlXMXdiR1Z6TENCbUxtUmxabWx1WlhNdVZsTk5YMU5CVFZCTVJWTWdQU0I1TG1Kc2RYSlRZVzF3YkdWekxDQmtMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJR1l1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2tzSUdRdWRXNXBabTl5YlhNdWMyaGhaRzkzWDNCaGMzTXVkbUZzZFdVZ1BTQjVMbTFoY0M1MFpYaDBkWEpsTENCa0xuVnVhV1p2Y20xekxuSmxjMjlzZFhScGIyNHVkbUZzZFdVZ1BTQjVMbTFoY0ZOcGVtVXNJR1F1ZFc1cFptOXliWE11Y21Ga2FYVnpMblpoYkhWbElEMGdlUzV5WVdScGRYTXNJSE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSGt1YldGd1VHRnpjeWtzSUhNdVkyeGxZWElvS1N3Z2N5NXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUW9ZaXdnYm5Wc2JDd2dRU3dnWkN3Z2VDd2diblZzYkNrc0lHWXVkVzVwWm05eWJYTXVjMmhoWkc5M1gzQmhjM011ZG1Gc2RXVWdQU0I1TG0xaGNGQmhjM011ZEdWNGRIVnlaU3dnWmk1MWJtbG1iM0p0Y3k1eVpYTnZiSFYwYVc5dUxuWmhiSFZsSUQwZ2VTNXRZWEJUYVhwbExDQm1MblZ1YVdadmNtMXpMbkpoWkdsMWN5NTJZV3gxWlNBOUlIa3VjbUZrYVhWekxDQnpMbk5sZEZKbGJtUmxjbFJoY21kbGRDaDVMbTFoY0Nrc0lITXVZMnhsWVhJb0tTd2djeTV5Wlc1a1pYSkNkV1ptWlhKRWFYSmxZM1FvWWl3Z2JuVnNiQ3dnUVN3Z1ppd2dlQ3dnYm5Wc2JDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ3S0hrc0lHSXNJRUVzSUV3c0lFa3NJR3NzSUVJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlHNTFiR3dzSUhjZ1BTQk1MbWx6VUc5cGJuUk1hV2RvZENBOVBUMGdJVEFnUHlCNUxtTjFjM1J2YlVScGMzUmhibU5sVFdGMFpYSnBZV3dnT2lCNUxtTjFjM1J2YlVSbGNIUm9UV0YwWlhKcFlXdzdDaUFnSUNBZ0lDQWdhV1lnS0hjZ0lUMDlJSFp2YVdRZ01DQS9JRkFnUFNCM0lEb2dVQ0E5SUV3dWFYTlFiMmx1ZEV4cFoyaDBJRDA5UFNBaE1DQS9JR3dnT2lCaExDQnpMbXh2WTJGc1EyeHBjSEJwYm1kRmJtRmliR1ZrSUNZbUlFRXVZMnhwY0ZOb1lXUnZkM01nUFQwOUlDRXdJQ1ltSUVFdVkyeHBjSEJwYm1kUWJHRnVaWE11YkdWdVozUm9JQ0U5UFNBd0lIeDhJRUV1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUVFdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ0lUMDlJREFnZkh3Z1FTNWhiSEJvWVUxaGNDQW1KaUJCTG1Gc2NHaGhWR1Z6ZENBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCUUxuVjFhV1FzSUVRZ1BTQkJMblYxYVdRc0lGVWdQU0JqVzBWZE93b2dJQ0FnSUNBZ0lDQWdJQ0JWSUQwOVBTQjJiMmxrSURBZ0ppWWdLRlVnUFNCN2ZTd2dZMXRGWFNBOUlGVXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUZWYlJGMDdDaUFnSUNBZ0lDQWdJQ0FnSUVZZ1BUMDlJSFp2YVdRZ01DQW1KaUFvUmlBOUlGQXVZMnh2Ym1Vb0tTd2dWVnRFWFNBOUlFWXBMQ0JRSUQwZ1Jqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGQXVkbWx6YVdKc1pTQTlJRUV1ZG1semFXSnNaU3dnVUM1M2FYSmxabkpoYldVZ1BTQkJMbmRwY21WbWNtRnRaU3dnUWlBOVBUMGdhWElnUHlCUUxuTnBaR1VnUFNCQkxuTm9ZV1J2ZDFOcFpHVWdJVDA5SUc1MWJHd2dQeUJCTG5Ob1lXUnZkMU5wWkdVZ09pQkJMbk5wWkdVZ09pQlFMbk5wWkdVZ1BTQkJMbk5vWVdSdmQxTnBaR1VnSVQwOUlHNTFiR3dnUHlCQkxuTm9ZV1J2ZDFOcFpHVWdPaUIxVzBFdWMybGtaVjBzSUZBdVlXeHdhR0ZOWVhBZ1BTQkJMbUZzY0doaFRXRndMQ0JRTG1Gc2NHaGhWR1Z6ZENBOUlFRXVZV3h3YUdGVVpYTjBMQ0JRTG1Oc2FYQlRhR0ZrYjNkeklEMGdRUzVqYkdsd1UyaGhaRzkzY3l3Z1VDNWpiR2x3Y0dsdVoxQnNZVzVsY3lBOUlFRXVZMnhwY0hCcGJtZFFiR0Z1WlhNc0lGQXVZMnhwY0VsdWRHVnljMlZqZEdsdmJpQTlJRUV1WTJ4cGNFbHVkR1Z5YzJWamRHbHZiaXdnVUM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCQkxtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z1VDNWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJRUV1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUZBdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlFRXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5d2dVQzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCQkxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDd2dVQzVzYVc1bGQybGtkR2dnUFNCQkxteHBibVYzYVdSMGFDd2dUQzVwYzFCdmFXNTBUR2xuYUhRZ1BUMDlJQ0V3SUNZbUlGQXVhWE5OWlhOb1JHbHpkR0Z1WTJWTllYUmxjbWxoYkNBOVBUMGdJVEFnSmlZZ0tGQXVjbVZtWlhKbGJtTmxVRzl6YVhScGIyNHVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0V3dWJXRjBjbWw0VjI5eWJHUXBMQ0JRTG01bFlYSkVhWE4wWVc1alpTQTlJRWtzSUZBdVptRnlSR2x6ZEdGdVkyVWdQU0JyS1N3Z1VEc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRjhvZVN3Z1lpd2dRU3dnVEN3Z1NTa2dld29nSUNBZ0lDQWdJR2xtSUNoNUxuWnBjMmxpYkdVZ1BUMDlJQ0V4S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tIa3ViR0Y1WlhKekxuUmxjM1FvWWk1c1lYbGxjbk1wSUNZbUlDaDVMbWx6VFdWemFDQjhmQ0I1TG1selRHbHVaU0I4ZkNCNUxtbHpVRzlwYm5SektTQW1KaUFvZVM1allYTjBVMmhoWkc5M0lIeDhJSGt1Y21WalpXbDJaVk5vWVdSdmR5QW1KaUJKSUQwOVBTQnBjaWtnSmlZZ0tDRjVMbVp5ZFhOMGRXMURkV3hzWldRZ2ZId2diaTVwYm5SbGNuTmxZM1J6VDJKcVpXTjBLSGtwS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0I1TG0xdlpHVnNWbWxsZDAxaGRISnBlQzV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLRUV1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sTENCNUxtMWhkSEpwZUZkdmNteGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRkFnUFNCbExuVndaR0YwWlNoNUtTd2dkeUE5SUhrdWJXRjBaWEpwWVd3N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLSGNwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUZBdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JFSUQwZ01Dd2dWU0E5SUVVdWJHVnVaM1JvT3lCRUlEd2dWVHNnUkNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRVZiUkYwc0lFOGdQU0IzVzBZdWJXRjBaWEpwWVd4SmJtUmxlRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRThnSmlZZ1R5NTJhWE5wWW14bEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1WlNBOUlIQW9lU3dnVUN3Z1R5d2dUQ3dnUVM1dVpXRnlMQ0JCTG1aaGNpd2dTU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11Y21WdVpHVnlRblZtWm1WeVJHbHlaV04wS0VFc0lHNTFiR3dzSUZBc0lHNWxMQ0I1TENCR0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9keTUyYVhOcFlteGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JURWdQU0J3S0hrc0lGQXNJSGNzSUV3c0lFRXVibVZoY2l3Z1FTNW1ZWElzSUVrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUW9RU3dnYm5Wc2JDd2dVQ3dnUlRFc0lIa3NJRzUxYkd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQkNJRDBnZVM1amFHbHNaSEpsYmpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZBeElEMGdNQ3dnZHpFZ1BTQkNMbXhsYm1kMGFEc2dVREVnUENCM01Uc2dVREVyS3lsZktFSmJVREZkTENCaUxDQkJMQ0JNTENCSktUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQlRlQ2h6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlIUXVhWE5YWldKSFRESTdDaUFnSUNCbWRXNWpkR2x2YmlCcEtDa2dld29nSUNBZ0lDQWdJR3hsZENCU0lEMGdJVEVzSUdWbElEMGdibVYzSUZabExDQlJJRDBnYm5Wc2JDd2dSV1VnUFNCdVpYY2dWbVVvTUN3Z01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjMlYwVFdGemF6b2dablZ1WTNScGIyNG9iV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZFZ0lUMDlJRzFsSUNZbUlDRlNJQ1ltSUNoekxtTnZiRzl5VFdGemF5aHRaU3dnYldVc0lHMWxMQ0J0WlNrc0lGRWdQU0J0WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRXh2WTJ0bFpEb2dablZ1WTNScGIyNG9iV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZJZ1BTQnRaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFEyeGxZWEk2SUdaMWJtTjBhVzl1S0cxbExDQlNaU3dnYjJVc0lFeGxMQ0JZWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1dHVWdQVDA5SUNFd0lDWW1JQ2h0WlNBcVBTQk1aU3dnVW1VZ0tqMGdUR1VzSUc5bElDbzlJRXhsS1N3Z1pXVXVjMlYwS0cxbExDQlNaU3dnYjJVc0lFeGxLU3dnUldVdVpYRjFZV3h6S0dWbEtTQTlQVDBnSVRFZ0ppWWdLSE11WTJ4bFlYSkRiMnh2Y2lodFpTd2dVbVVzSUc5bExDQk1aU2tzSUVWbExtTnZjSGtvWldVcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVaUE5SUNFeExDQlJJRDBnYm5Wc2JDd2dSV1V1YzJWMEtDMHhMQ0F3TENBd0xDQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ5S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JTSUQwZ0lURXNJR1ZsSUQwZ2JuVnNiQ3dnVVNBOUlHNTFiR3dzSUVWbElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJVWlhOME9pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldVZ1B5QnNaU2d5T1RJNUtTQTZJR1psS0RJNU1qa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSTllYTnJPaUJtZFc1amRHbHZiaWh0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXVWdJVDA5SUcxbElDWW1JQ0ZTSUNZbUlDaHpMbVJsY0hSb1RXRnpheWh0WlNrc0lHVmxJRDBnYldVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJHZFc1ak9pQm1kVzVqZEdsdmJpaHRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGRWdJVDA5SUcxbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMWxLU0J6ZDJsMFkyZ29iV1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFVjFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUVGMU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRU4xT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEV6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHVmhPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUV4MU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRkoxT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEU0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElGQjFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTJLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUVsMU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFM0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEUxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnpMbVJsY0hSb1JuVnVZeWcxTVRVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRkVnUFNCdFpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlYwVEc5amEyVmtPaUJtZFc1amRHbHZiaWh0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VpQTlJRzFsT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelpYUkRiR1ZoY2pvZ1puVnVZM1JwYjI0b2JXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVZsSUNFOVBTQnRaU0FtSmlBb2N5NWpiR1ZoY2tSbGNIUm9LRzFsS1N3Z1JXVWdQU0J0WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGSWdQU0FoTVN3Z1pXVWdQU0J1ZFd4c0xDQlJJRDBnYm5Wc2JDd2dSV1VnUFNCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzhvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRklnUFNBaE1Td2daV1VnUFNCdWRXeHNMQ0JSSUQwZ2JuVnNiQ3dnUldVZ1BTQnVkV3hzTENCdFpTQTlJRzUxYkd3c0lGSmxJRDBnYm5Wc2JDd2diMlVnUFNCdWRXeHNMQ0JNWlNBOUlHNTFiR3dzSUZobElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJVWlhOME9pQm1kVzVqZEdsdmJpaFhaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVWlCOGZDQW9WMlVnUHlCc1pTZ3lPVFl3S1NBNklHWmxLREk1TmpBcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlYwVFdGemF6b2dablZ1WTNScGIyNG9WMlVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWbElDRTlQU0JYWlNBbUppQWhVaUFtSmlBb2N5NXpkR1Z1WTJsc1RXRnpheWhYWlNrc0lHVmxJRDBnVjJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJHZFc1ak9pQm1kVzVqZEdsdmJpaFhaU3dnVlhRc0lFOTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvVVNBaFBUMGdWMlVnZkh3Z1JXVWdJVDA5SUZWMElIeDhJRzFsSUNFOVBTQlBkQ2tnSmlZZ0tITXVjM1JsYm1OcGJFWjFibU1vVjJVc0lGVjBMQ0JQZENrc0lGRWdQU0JYWlN3Z1JXVWdQU0JWZEN3Z2JXVWdQU0JQZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRTl3T2lCbWRXNWpkR2x2YmloWFpTd2dWWFFzSUU5MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW9VbVVnSVQwOUlGZGxJSHg4SUc5bElDRTlQU0JWZENCOGZDQk1aU0FoUFQwZ1QzUXBJQ1ltSUNoekxuTjBaVzVqYVd4UGNDaFhaU3dnVlhRc0lFOTBLU3dnVW1VZ1BTQlhaU3dnYjJVZ1BTQlZkQ3dnVEdVZ1BTQlBkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhObGRFeHZZMnRsWkRvZ1puVnVZM1JwYjI0b1YyVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRklnUFNCWFpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlYwUTJ4bFlYSTZJR1oxYm1OMGFXOXVLRmRsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWVpTQWhQVDBnVjJVZ0ppWWdLSE11WTJ4bFlYSlRkR1Z1WTJsc0tGZGxLU3dnV0dVZ1BTQlhaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhKbGMyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZJZ1BTQWhNU3dnWldVZ1BTQnVkV3hzTENCUklEMGdiblZzYkN3Z1JXVWdQU0J1ZFd4c0xDQnRaU0E5SUc1MWJHd3NJRkpsSUQwZ2JuVnNiQ3dnYjJVZ1BTQnVkV3hzTENCTVpTQTlJRzUxYkd3c0lGaGxJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnWVNBOUlHNWxkeUJwTENCc0lEMGdibVYzSUhJc0lHTWdQU0J1WlhjZ2J5d2dhQ0E5SUh0OUxDQjFJRDBnZTMwc0lHUWdQU0J1ZFd4c0xDQm1JRDBnSVRFc0lHMGdQU0J1ZFd4c0xDQjRJRDBnYm5Wc2JDd2dkaUE5SUc1MWJHd3NJR2NnUFNCdWRXeHNMQ0J3SUQwZ2JuVnNiQ3dnWHlBOUlHNTFiR3dzSUhrZ1BTQnVkV3hzTENCaUlEMGdJVEVzSUVFZ1BTQnVkV3hzTENCTUlEMGdiblZzYkN3Z1NTQTlJRzUxYkd3c0lHc2dQU0J1ZFd4c0xDQkNJRDBnYm5Wc2JDd2dVQ0E5SUhNdVoyVjBVR0Z5WVcxbGRHVnlLRE0xTmpZeEtTd2dkeUE5SUNFeExDQkZJRDBnTUN3Z1JDQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtEYzVNemdwT3dvZ0lDQWdSQzVwYm1SbGVFOW1LQ0pYWldKSFRDSXBJQ0U5UFNBdE1TQS9JQ2hGSUQwZ2NHRnljMlZHYkc5aGRDZ3ZYbGRsWWtkTUlDaGNaQ2t2TG1WNFpXTW9SQ2xiTVYwcExDQjNJRDBnUlNBK1BTQXhLU0E2SUVRdWFXNWtaWGhQWmlnaVQzQmxia2RNSUVWVElpa2dJVDA5SUMweElDWW1JQ2hGSUQwZ2NHRnljMlZHYkc5aGRDZ3ZYazl3Wlc1SFRDQkZVeUFvWEdRcEx5NWxlR1ZqS0VRcFd6RmRLU3dnZHlBOUlFVWdQajBnTWlrN0NpQWdJQ0JzWlhRZ1ZTQTlJRzUxYkd3c0lFWWdQU0I3ZlN3Z1R5QTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETXdPRGdwTENCdVpTQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtESTVOemdwTENCalpTQTlJRzVsZHlCV1pTZ3BMbVp5YjIxQmNuSmhlU2hQS1N3Z1ZpQTlJRzVsZHlCV1pTZ3BMbVp5YjIxQmNuSmhlU2h1WlNrN0NpQWdJQ0JtZFc1amRHbHZiaUJYS0ZJc0lHVmxMQ0JSS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVZsSUQwZ2JtVjNJRlZwYm5RNFFYSnlZWGtvTkNrc0lHMWxJRDBnY3k1amNtVmhkR1ZVWlhoMGRYSmxLQ2s3Q2lBZ0lDQWdJQ0FnY3k1aWFXNWtWR1Y0ZEhWeVpTaFNMQ0J0WlNrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoU0xDQXhNREkwTVN3Z09UY3lPQ2tzSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hTTENBeE1ESTBNQ3dnT1RjeU9DazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlNaU0E5SURBN0lGSmxJRHdnVVRzZ1VtVXJLeWx6TG5SbGVFbHRZV2RsTWtRb1pXVWdLeUJTWlN3Z01Dd2dOalF3T0N3Z01Td2dNU3dnTUN3Z05qUXdPQ3dnTlRFeU1Td2dSV1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0WlRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JvWlNBOUlIdDlPd29nSUNBZ2FHVmJNelUxTTEwZ1BTQlhLRE0xTlRNc0lETTFOVE1zSURFcExDQm9aVnN6TkRBMk4xMGdQU0JYS0RNME1EWTNMQ0F6TkRBMk9Td2dOaWtzSUdFdWMyVjBRMnhsWVhJb01Dd2dNQ3dnTUN3Z01Ta3NJR3d1YzJWMFEyeGxZWElvTVNrc0lHTXVjMlYwUTJ4bFlYSW9NQ2tzSUd4bEtESTVNamtwTENCc0xuTmxkRVoxYm1Nb1pXRXBMQ0JQWlNnaE1Ta3NJRWNvZEd3cExDQnNaU2d5T0RnMEtTd2daMlVvZG00cE93b2dJQ0FnWm5WdVkzUnBiMjRnYkdVb1Vpa2dld29nSUNBZ0lDQWdJR2hiVWwwZ0lUMDlJQ0V3SUNZbUlDaHpMbVZ1WVdKc1pTaFNLU3dnYUZ0U1hTQTlJQ0V3S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHWmxLRklwSUhzS0lDQWdJQ0FnSUNCb1cxSmRJQ0U5UFNBaE1TQW1KaUFvY3k1a2FYTmhZbXhsS0ZJcExDQm9XMUpkSUQwZ0lURXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUW1Vb1Vpd2daV1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFZ0U1hTQWhQVDBnWldVZ1B5QW9jeTVpYVc1a1JuSmhiV1ZpZFdabVpYSW9VaXdnWldVcExDQjFXMUpkSUQwZ1pXVXNJRzRnSmlZZ0tGSWdQVDA5SURNMk1EQTVJQ1ltSUNoMVd6TTJNVFl3WFNBOUlHVmxLU3dnVWlBOVBUMGdNell4TmpBZ0ppWWdLSFZiTXpZd01EbGRJRDBnWldVcEtTd2dJVEFwSURvZ0lURTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJaS0ZJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pDQWhQVDBnVWlBL0lDaHpMblZ6WlZCeWIyZHlZVzBvVWlrc0lHUWdQU0JTTENBaE1Da2dPaUFoTVRzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JEWlNBOUlIc0tJQ0FnSUNBZ0lDQmJYMmxkT2lBek1qYzNOQ3dLSUNBZ0lDQWdJQ0JiYlhWZE9pQXpNamMzT0N3S0lDQWdJQ0FnSUNCYlozVmRPaUF6TWpjM09Rb2dJQ0FnZlRzS0lDQWdJR2xtSUNodUtTQkRaVnR6YkYwZ1BTQXpNamMzTlN3Z1EyVmJiMnhkSUQwZ016STNOelk3Q2lBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNCc1pYUWdVaUE5SUdVdVoyVjBLQ0pGV0ZSZllteGxibVJmYldsdWJXRjRJaWs3Q2lBZ0lDQWdJQ0FnVWlBaFBUMGdiblZzYkNBbUppQW9RMlZiYzJ4ZElEMGdVaTVOU1U1ZlJWaFVMQ0JEWlZ0dmJGMGdQU0JTTGsxQldGOUZXRlFwT3dvZ0lDQWdmUW9nSUNBZ2JHVjBJSGxsSUQwZ2V3b2dJQ0FnSUNBZ0lGdDRkVjA2SURBc0NpQWdJQ0FnSUNBZ1czbDFYVG9nTVN3S0lDQWdJQ0FnSUNCYmRuVmRPaUEzTmpnc0NpQWdJQ0FnSUNBZ1cwZGpYVG9nTnpjd0xBb2dJQ0FnSUNBZ0lGdFVkVjA2SURjM05pd0tJQ0FnSUNBZ0lDQmJkM1ZkT2lBM056UXNDaUFnSUNBZ0lDQWdXMDExWFRvZ056Y3lMQW9nSUNBZ0lDQWdJRnRmZFYwNklEYzJPU3dLSUNBZ0lDQWdJQ0JiVm1OZE9pQTNOekVzQ2lBZ0lDQWdJQ0FnVzFOMVhUb2dOemMxTEFvZ0lDQWdJQ0FnSUZ0aWRWMDZJRGMzTXdvZ0lDQWdmVHNLSUNBZ0lHWjFibU4wYVc5dUlHZGxLRklzSUdWbExDQlJMQ0JGWlN3Z2JXVXNJRkpsTENCdlpTd2dUR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9VaUE5UFQwZ2RtNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ppQTlQVDBnSVRBZ0ppWWdLR1psS0RNd05ESXBMQ0JtSUQwZ0lURXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaG1JRDA5UFNBaE1TQW1KaUFvYkdVb016QTBNaWtzSUdZZ1BTQWhNQ2tzSUZJZ0lUMDlJSEIxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoU0lDRTlQU0J0SUh4OElFeGxJQ0U5UFNCaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvS0hnZ0lUMDlJRjlwSUh4OElIQWdJVDA5SUY5cEtTQW1KaUFvY3k1aWJHVnVaRVZ4ZFdGMGFXOXVLRE15TnpjMEtTd2dlQ0E5SUY5cExDQndJRDBnWDJrcExDQk1aU2tnYzNkcGRHTm9LRklwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnYzNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdVlteGxibVJHZFc1alUyVndZWEpoZEdVb01Td2dOemN4TENBeExDQTNOekVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHNXNPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbUpzWlc1a1JuVnVZeWd4TENBeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JwYkRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1aWJHVnVaRVoxYm1OVFpYQmhjbUYwWlNnd0xDQXdMQ0EzTmprc0lEYzNNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2NtdzZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbXhsYm1SR2RXNWpVMlZ3WVhKaGRHVW9NQ3dnTnpZNExDQXdMQ0EzTnpBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pQkpiblpoYkdsa0lHSnNaVzVrYVc1bk9pQWlMQ0JTS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhOM2FYUmphQ2hTS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhOeU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtSnNaVzVrUm5WdVkxTmxjR0Z5WVhSbEtEYzNNQ3dnTnpjeExDQXhMQ0EzTnpFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRzVzT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1Kc1pXNWtSblZ1WXlnM056QXNJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHbHNPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbUpzWlc1a1JuVnVZeWd3TENBM05qa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhKc09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtSnNaVzVrUm5WdVl5Z3dMQ0EzTmpncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pQkpiblpoYkdsa0lHSnNaVzVrYVc1bk9pQWlMQ0JTS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJJRDBnYm5Wc2JDd2daeUE5SUc1MWJHd3NJRjhnUFNCdWRXeHNMQ0I1SUQwZ2JuVnNiQ3dnYlNBOUlGSXNJR0lnUFNCTVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHMWxJRDBnYldVZ2ZId2daV1VzSUZKbElEMGdVbVVnZkh3Z1VTd2diMlVnUFNCdlpTQjhmQ0JGWlN3Z0tHVmxJQ0U5UFNCNElIeDhJRzFsSUNFOVBTQndLU0FtSmlBb2N5NWliR1Z1WkVWeGRXRjBhVzl1VTJWd1lYSmhkR1VvUTJWYlpXVmRMQ0JEWlZ0dFpWMHBMQ0I0SUQwZ1pXVXNJSEFnUFNCdFpTa3NJQ2hSSUNFOVBTQjJJSHg4SUVWbElDRTlQU0JuSUh4OElGSmxJQ0U5UFNCZklIeDhJRzlsSUNFOVBTQjVLU0FtSmlBb2N5NWliR1Z1WkVaMWJtTlRaWEJoY21GMFpTaDVaVnRSWFN3Z2VXVmJSV1ZkTENCNVpWdFNaVjBzSUhsbFcyOWxYU2tzSUhZZ1BTQlJMQ0JuSUQwZ1JXVXNJRjhnUFNCU1pTd2dlU0E5SUc5bEtTd2diU0E5SUZJc0lHSWdQU0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlR1VvVWl3Z1pXVXBJSHNLSUNBZ0lDQWdJQ0JTTG5OcFpHVWdQVDA5SUVOcElEOGdabVVvTWpnNE5Da2dPaUJzWlNneU9EZzBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1VTQTlJRkl1YzJsa1pTQTlQVDBnYVhRN0NpQWdJQ0FnSUNBZ1pXVWdKaVlnS0ZFZ1BTQWhVU2tzSUU5bEtGRXBMQ0JTTG1Kc1pXNWthVzVuSUQwOVBTQnpjaUFtSmlCU0xuUnlZVzV6Y0dGeVpXNTBJRDA5UFNBaE1TQS9JR2RsS0hadUtTQTZJR2RsS0ZJdVlteGxibVJwYm1jc0lGSXVZbXhsYm1SRmNYVmhkR2x2Yml3Z1VpNWliR1Z1WkZOeVl5d2dVaTVpYkdWdVpFUnpkQ3dnVWk1aWJHVnVaRVZ4ZFdGMGFXOXVRV3h3YUdFc0lGSXVZbXhsYm1SVGNtTkJiSEJvWVN3Z1VpNWliR1Z1WkVSemRFRnNjR2hoTENCU0xuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTa3NJR3d1YzJWMFJuVnVZeWhTTG1SbGNIUm9SblZ1WXlrc0lHd3VjMlYwVkdWemRDaFNMbVJsY0hSb1ZHVnpkQ2tzSUd3dWMyVjBUV0Z6YXloU0xtUmxjSFJvVjNKcGRHVXBMQ0JoTG5ObGRFMWhjMnNvVWk1amIyeHZjbGR5YVhSbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnUldVZ1BTQlNMbk4wWlc1amFXeFhjbWwwWlRzS0lDQWdJQ0FnSUNCakxuTmxkRlJsYzNRb1JXVXBMQ0JGWlNBbUppQW9ZeTV6WlhSTllYTnJLRkl1YzNSbGJtTnBiRmR5YVhSbFRXRnpheWtzSUdNdWMyVjBSblZ1WXloU0xuTjBaVzVqYVd4R2RXNWpMQ0JTTG5OMFpXNWphV3hTWldZc0lGSXVjM1JsYm1OcGJFWjFibU5OWVhOcktTd2dZeTV6WlhSUGNDaFNMbk4wWlc1amFXeEdZV2xzTENCU0xuTjBaVzVqYVd4YVJtRnBiQ3dnVWk1emRHVnVZMmxzV2xCaGMzTXBLU3dnU3loU0xuQnZiSGxuYjI1UFptWnpaWFFzSUZJdWNHOXNlV2R2Yms5bVpuTmxkRVpoWTNSdmNpd2dVaTV3YjJ4NVoyOXVUMlptYzJWMFZXNXBkSE1wTENCU0xtRnNjR2hoVkc5RGIzWmxjbUZuWlNBOVBUMGdJVEFnUHlCc1pTZ3pNamt5TmlrZ09pQm1aU2d6TWpreU5pazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJQWlNoU0tTQjdDaUFnSUNBZ0lDQWdRU0FoUFQwZ1VpQW1KaUFvVWlBL0lITXVabkp2Ym5SR1lXTmxLREl6TURRcElEb2djeTVtY205dWRFWmhZMlVvTWpNd05Ta3NJRUVnUFNCU0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRWNvVWlrZ2V3b2dJQ0FnSUNBZ0lGSWdJVDA5SUhWMUlEOGdLR3hsS0RJNE9EUXBMQ0JTSUNFOVBTQk1JQ1ltSUNoU0lEMDlQU0IwYkNBL0lITXVZM1ZzYkVaaFkyVW9NVEF5T1NrZ09pQlNJRDA5UFNCa2RTQS9JSE11WTNWc2JFWmhZMlVvTVRBeU9Da2dPaUJ6TG1OMWJHeEdZV05sS0RFd016SXBLU2tnT2lCbVpTZ3lPRGcwS1N3Z1RDQTlJRkk3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCcUtGSXBJSHNLSUNBZ0lDQWdJQ0JTSUNFOVBTQkpJQ1ltSUNoM0lDWW1JSE11YkdsdVpWZHBaSFJvS0ZJcExDQkpJRDBnVWlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkxLRklzSUdWbExDQlJLU0I3Q2lBZ0lDQWdJQ0FnVWlBL0lDaHNaU2d6TWpneU15a3NJQ2hySUNFOVBTQmxaU0I4ZkNCQ0lDRTlQU0JSS1NBbUppQW9jeTV3YjJ4NVoyOXVUMlptYzJWMEtHVmxMQ0JSS1N3Z2F5QTlJR1ZsTENCQ0lEMGdVU2twSURvZ1ptVW9Nekk0TWpNcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkV1VvVWlrZ2V3b2dJQ0FnSUNBZ0lGSWdQeUJzWlNnek1EZzVLU0E2SUdabEtETXdPRGtwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2MyVW9VaWtnZXdvZ0lDQWdJQ0FnSUZJZ1BUMDlJSFp2YVdRZ01DQW1KaUFvVWlBOUlETXpPVGcwSUNzZ1VDQXRJREVwTENCVklDRTlQU0JTSUNZbUlDaHpMbUZqZEdsMlpWUmxlSFIxY21Vb1Vpa3NJRlVnUFNCU0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRk5sS0ZJc0lHVmxLU0I3Q2lBZ0lDQWdJQ0FnVlNBOVBUMGdiblZzYkNBbUppQnpaU2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQlJJRDBnUmx0VlhUc0tJQ0FnSUNBZ0lDQlJJRDA5UFNCMmIybGtJREFnSmlZZ0tGRWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhadmFXUWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkSFZ5WlRvZ2RtOXBaQ0F3Q2lBZ0lDQWdJQ0FnZlN3Z1JsdFZYU0E5SUZFcExDQW9VUzUwZVhCbElDRTlQU0JTSUh4OElGRXVkR1Y0ZEhWeVpTQWhQVDBnWldVcElDWW1JQ2h6TG1KcGJtUlVaWGgwZFhKbEtGSXNJR1ZsSUh4OElHaGxXMUpkS1N3Z1VTNTBlWEJsSUQwZ1Vpd2dVUzUwWlhoMGRYSmxJRDBnWldVcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdWR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRklnUFNCR1cxVmRPd29nSUNBZ0lDQWdJRklnSVQwOUlIWnZhV1FnTUNBbUppQlNMblI1Y0dVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvY3k1aWFXNWtWR1Y0ZEhWeVpTaFNMblI1Y0dVc0lHNTFiR3dwTENCU0xuUjVjR1VnUFNCMmIybGtJREFzSUZJdWRHVjRkSFZ5WlNBOUlIWnZhV1FnTUNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlFaU2dwSUhzS0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNCekxtTnZiWEJ5WlhOelpXUlVaWGhKYldGblpUSkVMbUZ3Y0d4NUtITXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlNCallYUmphQ0FvVWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pSXNJRklwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGbGxLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdWRHVjRVM1ZpU1cxaFoyVXlSQzVoY0hCc2VTaHpMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JTS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkRLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdWRHVjRVM1ZpU1cxaFoyVXpSQzVoY0hCc2VTaHpMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JTS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlVLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdVkyOXRjSEpsYzNObFpGUmxlRk4xWWtsdFlXZGxNa1F1WVhCd2JIa29jeXdnWVhKbmRXMWxiblJ6S1RzS0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoU0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVTNSaGRHVTZJaXdnVWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdTaWdwSUhzS0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNCekxuUmxlRk4wYjNKaFoyVXlSQzVoY0hCc2VTaHpMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JTS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQWtLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdWRHVjRVM1J2Y21GblpUTkVMbUZ3Y0d4NUtITXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQWdJQ0FnZlNCallYUmphQ0FvVWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURk4wWVhSbE9pSXNJRklwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlISmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdWRHVjRTVzFoWjJVeVJDNWhjSEJzZVNoekxDQmhjbWQxYldWdWRITXBPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLRklwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFRkR0YwWlRvaUxDQlNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCYUtDa2dld29nSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJSE11ZEdWNFNXMWhaMlV6UkM1aGNIQnNlU2h6TENCaGNtZDFiV1Z1ZEhNcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tGSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4VGRHRjBaVG9pTENCU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJOWlNoU0tTQjdDaUFnSUNBZ0lDQWdZMlV1WlhGMVlXeHpLRklwSUQwOVBTQWhNU0FtSmlBb2N5NXpZMmx6YzI5eUtGSXVlQ3dnVWk1NUxDQlNMbm9zSUZJdWR5a3NJR05sTG1OdmNIa29VaWtwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RtVW9VaWtnZXdvZ0lDQWdJQ0FnSUZZdVpYRjFZV3h6S0ZJcElEMDlQU0FoTVNBbUppQW9jeTUyYVdWM2NHOXlkQ2hTTG5nc0lGSXVlU3dnVWk1NkxDQlNMbmNwTENCV0xtTnZjSGtvVWlrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkR1VvS1NCN0NpQWdJQ0FnSUNBZ2N5NWthWE5oWW14bEtETXdORElwTENCekxtUnBjMkZpYkdVb01qZzROQ2tzSUhNdVpHbHpZV0pzWlNneU9USTVLU3dnY3k1a2FYTmhZbXhsS0RNeU9ESXpLU3dnY3k1a2FYTmhZbXhsS0RNd09Ea3BMQ0J6TG1ScGMyRmliR1VvTWprMk1Da3NJSE11WkdsellXSnNaU2d6TWpreU5pa3NJSE11WW14bGJtUkZjWFZoZEdsdmJpZ3pNamMzTkNrc0lITXVZbXhsYm1SR2RXNWpLREVzSURBcExDQnpMbUpzWlc1a1JuVnVZMU5sY0dGeVlYUmxLREVzSURBc0lERXNJREFwTENCekxtTnZiRzl5VFdGemF5Z2hNQ3dnSVRBc0lDRXdMQ0FoTUNrc0lITXVZMnhsWVhKRGIyeHZjaWd3TENBd0xDQXdMQ0F3S1N3Z2N5NWtaWEIwYUUxaGMyc29JVEFwTENCekxtUmxjSFJvUm5WdVl5ZzFNVE1wTENCekxtTnNaV0Z5UkdWd2RHZ29NU2tzSUhNdWMzUmxibU5wYkUxaGMyc29OREk1TkRrMk56STVOU2tzSUhNdWMzUmxibU5wYkVaMWJtTW9OVEU1TENBd0xDQTBNamswT1RZM01qazFLU3dnY3k1emRHVnVZMmxzVDNBb056WTRNQ3dnTnpZNE1Dd2dOelk0TUNrc0lITXVZMnhsWVhKVGRHVnVZMmxzS0RBcExDQnpMbU4xYkd4R1lXTmxLREV3TWprcExDQnpMbVp5YjI1MFJtRmpaU2d5TXpBMUtTd2djeTV3YjJ4NVoyOXVUMlptYzJWMEtEQXNJREFwTENCekxtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUXBMQ0J6TG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2diblZzYkNrc0lHNGdQVDA5SUNFd0lDWW1JQ2h6TG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpBd09Td2diblZzYkNrc0lITXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNREE0TENCdWRXeHNLU2tzSUhNdWRYTmxVSEp2WjNKaGJTaHVkV3hzS1N3Z2N5NXNhVzVsVjJsa2RHZ29NU2tzSUhNdWMyTnBjM052Y2lnd0xDQXdMQ0J6TG1OaGJuWmhjeTUzYVdSMGFDd2djeTVqWVc1MllYTXVhR1ZwWjJoMEtTd2djeTUyYVdWM2NHOXlkQ2d3TENBd0xDQnpMbU5oYm5aaGN5NTNhV1IwYUN3Z2N5NWpZVzUyWVhNdWFHVnBaMmgwS1N3Z2FDQTlJSHQ5TENCVklEMGdiblZzYkN3Z1JpQTlJSHQ5TENCMUlEMGdlMzBzSUdRZ1BTQnVkV3hzTENCbUlEMGdJVEVzSUcwZ1BTQnVkV3hzTENCNElEMGdiblZzYkN3Z2RpQTlJRzUxYkd3c0lHY2dQU0J1ZFd4c0xDQndJRDBnYm5Wc2JDd2dYeUE5SUc1MWJHd3NJSGtnUFNCdWRXeHNMQ0JpSUQwZ0lURXNJRUVnUFNCdWRXeHNMQ0JNSUQwZ2JuVnNiQ3dnU1NBOUlHNTFiR3dzSUdzZ1BTQnVkV3hzTENCQ0lEMGdiblZzYkN3Z1kyVXVjMlYwS0RBc0lEQXNJSE11WTJGdWRtRnpMbmRwWkhSb0xDQnpMbU5oYm5aaGN5NW9aV2xuYUhRcExDQldMbk5sZENnd0xDQXdMQ0J6TG1OaGJuWmhjeTUzYVdSMGFDd2djeTVqWVc1MllYTXVhR1ZwWjJoMEtTd2dZUzV5WlhObGRDZ3BMQ0JzTG5KbGMyVjBLQ2tzSUdNdWNtVnpaWFFvS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1luVm1abVZ5Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dZU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2c2SUd3c0NpQWdJQ0FnSUNBZ0lDQWdJSE4wWlc1amFXdzZJR01LSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdWdVlXSnNaVG9nYkdVc0NpQWdJQ0FnSUNBZ1pHbHpZV0pzWlRvZ1ptVXNDaUFnSUNBZ0lDQWdZbWx1WkVaeVlXMWxZblZtWm1WeU9pQkNaU3dLSUNBZ0lDQWdJQ0IxYzJWUWNtOW5jbUZ0T2lCWkxBb2dJQ0FnSUNBZ0lITmxkRUpzWlc1a2FXNW5PaUJuWlN3S0lDQWdJQ0FnSUNCelpYUk5ZWFJsY21saGJEb2dlR1VzQ2lBZ0lDQWdJQ0FnYzJWMFJteHBjRk5wWkdWa09pQlBaU3dLSUNBZ0lDQWdJQ0J6WlhSRGRXeHNSbUZqWlRvZ1J5d0tJQ0FnSUNBZ0lDQnpaWFJNYVc1bFYybGtkR2c2SUdvc0NpQWdJQ0FnSUNBZ2MyVjBVRzlzZVdkdmJrOW1abk5sZERvZ1N5d0tJQ0FnSUNBZ0lDQnpaWFJUWTJsemMyOXlWR1Z6ZERvZ2RXVXNDaUFnSUNBZ0lDQWdZV04wYVhabFZHVjRkSFZ5WlRvZ2MyVXNDaUFnSUNBZ0lDQWdZbWx1WkZSbGVIUjFjbVU2SUZObExBb2dJQ0FnSUNBZ0lIVnVZbWx1WkZSbGVIUjFjbVU2SUZSbExBb2dJQ0FnSUNBZ0lHTnZiWEJ5WlhOelpXUlVaWGhKYldGblpUSkVPaUJRWlN3S0lDQWdJQ0FnSUNCMFpYaEpiV0ZuWlRKRU9pQnlaU3dLSUNBZ0lDQWdJQ0IwWlhoSmJXRm5aVE5FT2lCYUxBb2dJQ0FnSUNBZ0lIUmxlRk4wYjNKaFoyVXlSRG9nU2l3S0lDQWdJQ0FnSUNCMFpYaFRkRzl5WVdkbE0wUTZJQ1FzQ2lBZ0lDQWdJQ0FnZEdWNFUzVmlTVzFoWjJVeVJEb2dXV1VzQ2lBZ0lDQWdJQ0FnZEdWNFUzVmlTVzFoWjJVelJEb2dReXdLSUNBZ0lDQWdJQ0JqYjIxd2NtVnpjMlZrVkdWNFUzVmlTVzFoWjJVeVJEb2dWQ3dLSUNBZ0lDQWdJQ0J6WTJsemMyOXlPaUJOWlN3S0lDQWdJQ0FnSUNCMmFXVjNjRzl5ZERvZ2RtVXNDaUFnSUNBZ0lDQWdjbVZ6WlhRNklIUmxDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRlI0S0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4cElIc0tJQ0FnSUd4bGRDQmhJRDBnYVM1cGMxZGxZa2RNTWl3Z2JDQTlJR2t1YldGNFZHVjRkSFZ5WlhNc0lHTWdQU0JwTG0xaGVFTjFZbVZ0WVhCVGFYcGxMQ0JvSUQwZ2FTNXRZWGhVWlhoMGRYSmxVMmw2WlN3Z2RTQTlJR2t1YldGNFUyRnRjR3hsY3l3Z1ppQTlJR1V1YUdGektDSlhSVUpIVEY5dGRXeDBhWE5oYlhCc1pXUmZjbVZ1WkdWeVgzUnZYM1JsZUhSMWNtVWlLU0EvSUdVdVoyVjBLQ0pYUlVKSFRGOXRkV3gwYVhOaGJYQnNaV1JmY21WdVpHVnlYM1J2WDNSbGVIUjFjbVVpS1NBNklIWnZhV1FnTUN3Z2JTQTlJRzVsZHlCWFpXRnJUV0Z3TENCNExDQjJJRDBnSVRFN0NpQWdJQ0IwY25rZ2V3b2dJQ0FnSUNBZ0lIWWdQU0IwZVhCbGIyWWdUMlptYzJOeVpXVnVRMkZ1ZG1GeklEd2dJblVpSUNZbUlHNWxkeUJQWm1aelkzSmxaVzVEWVc1MllYTW9NU3dnTVNrdVoyVjBRMjl1ZEdWNGRDZ2lNbVFpS1NBaFBUMGdiblZzYkRzS0lDQWdJSDBnWTJGMFkyZ2dJSHQ5Q2lBZ0lDQm1kVzVqZEdsdmJpQm5LRU1zSUZRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RpQS9JRzVsZHlCUFptWnpZM0psWlc1RFlXNTJZWE1vUXl3Z1ZDa2dPaUJ4Y3lnaVkyRnVkbUZ6SWlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQndLRU1zSUZRc0lFb3NJQ1FwSUhzS0lDQWdJQ0FnSUNCc1pYUWdjbVVnUFNBeE93b2dJQ0FnSUNBZ0lHbG1JQ2dvUXk1M2FXUjBhQ0ErSUNRZ2ZId2dReTVvWldsbmFIUWdQaUFrS1NBbUppQW9jbVVnUFNBa0lDOGdUV0YwYUM1dFlYZ29ReTUzYVdSMGFDd2dReTVvWldsbmFIUXBLU3dnY21VZ1BDQXhJSHg4SUZRZ1BUMDlJQ0V3S1NCcFppQW9kSGx3Wlc5bUlFaFVUVXhKYldGblpVVnNaVzFsYm5RZ1BDQWlkU0lnSmlZZ1F5QnBibk4wWVc1alpXOW1JRWhVVFV4SmJXRm5aVVZzWlcxbGJuUWdmSHdnZEhsd1pXOW1JRWhVVFV4RFlXNTJZWE5GYkdWdFpXNTBJRHdnSW5VaUlDWW1JRU1nYVc1emRHRnVZMlZ2WmlCSVZFMU1RMkZ1ZG1GelJXeGxiV1Z1ZENCOGZDQjBlWEJsYjJZZ1NXMWhaMlZDYVhSdFlYQWdQQ0FpZFNJZ0ppWWdReUJwYm5OMFlXNWpaVzltSUVsdFlXZGxRbWwwYldGd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmFJRDBnVkNBL0lFcGpJRG9nVFdGMGFDNW1iRzl2Y2l3Z1RXVWdQU0JhS0hKbElDb2dReTUzYVdSMGFDa3NJSFpsSUQwZ1dpaHlaU0FxSUVNdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdlQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDRJRDBnWnloTlpTd2dkbVVwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhSbElEMGdTaUEvSUdjb1RXVXNJSFpsS1NBNklIZzdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwWlM1M2FXUjBhQ0E5SUUxbExDQjBaUzVvWldsbmFIUWdQU0IyWlN3Z2RHVXVaMlYwUTI5dWRHVjRkQ2dpTW1RaUtTNWtjbUYzU1cxaFoyVW9ReXdnTUN3Z01Dd2dUV1VzSUhabEtTd2dZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlVaWGgwZFhKbElHaGhjeUJpWldWdUlISmxjMmw2WldRZ1puSnZiU0FvSWlBcklFTXVkMmxrZEdnZ0t5QWllQ0lnS3lCRExtaGxhV2RvZENBcklDSXBJSFJ2SUNnaUlDc2dUV1VnS3lBaWVDSWdLeUIyWlNBcklDSXBMaUlwTENCMFpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2NtVjBkWEp1SUNKa1lYUmhJaUJwYmlCRElDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dTVzFoWjJVZ2FXNGdSR0YwWVZSbGVIUjFjbVVnYVhNZ2RHOXZJR0pwWnlBb0lpQXJJRU11ZDJsa2RHZ2dLeUFpZUNJZ0t5QkRMbWhsYVdkb2RDQXJJQ0lwTGlJcExDQkRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQkRPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWHloREtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHbGhLRU11ZDJsa2RHZ3BJQ1ltSUdsaEtFTXVhR1ZwWjJoMEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSGtvUXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaElEOGdJVEVnT2lCRExuZHlZWEJUSUNFOVBTQjJkQ0I4ZkNCRExuZHlZWEJVSUNFOVBTQjJkQ0I4ZkNCRExtMXBia1pwYkhSbGNpQWhQVDBnY25RZ0ppWWdReTV0YVc1R2FXeDBaWElnSVQwOUlIUjBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWWloRExDQlVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRU11WjJWdVpYSmhkR1ZOYVhCdFlYQnpJQ1ltSUZRZ0ppWWdReTV0YVc1R2FXeDBaWElnSVQwOUlISjBJQ1ltSUVNdWJXbHVSbWxzZEdWeUlDRTlQU0IwZERzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFRW9ReWtnZXdvZ0lDQWdJQ0FnSUhNdVoyVnVaWEpoZEdWTmFYQnRZWEFvUXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQk1LRU1zSUZRc0lFb3NJQ1FwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZU0E5UFQwZ0lURXBJSEpsZEhWeWJpQlVPd29nSUNBZ0lDQWdJR2xtSUNoRElDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpXME5kSUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCelcwTmRPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUVGMGRHVnRjSFFnZEc4Z2RYTmxJRzV2YmkxbGVHbHpkR2x1WnlCWFpXSkhUQ0JwYm5SbGNtNWhiQ0JtYjNKdFlYUWdKeUlnS3lCRElDc2dJaWNpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSEpsSUQwZ1ZEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1ZDQTlQVDBnTmpRd015QW1KaUFvU2lBOVBUMGdOVEV5TmlBbUppQW9jbVVnUFNBek16TXlOaWtzSUVvZ1BUMDlJRFV4TXpFZ0ppWWdLSEpsSUQwZ016TXpNalVwTENCS0lEMDlQU0ExTVRJeElDWW1JQ2h5WlNBOUlETXpNekl4S1Nrc0lGUWdQVDA5SURZME1EY2dKaVlnS0VvZ1BUMDlJRFV4TWpZZ0ppWWdLSEpsSUQwZ016UTRNemNwTENCS0lEMDlQU0ExTVRNeElDWW1JQ2h5WlNBOUlETTBPRFF6S1N3Z1NpQTlQVDBnTlRFeU1TQW1KaUFvY21VZ1BTQXpNamcwT1NrcExDQlVJRDA5UFNBMk5EQTRJQ1ltSUNoS0lEMDlQU0ExTVRJMklDWW1JQ2h5WlNBOUlETTBPRE0yS1N3Z1NpQTlQVDBnTlRFek1TQW1KaUFvY21VZ1BTQXpORGcwTWlrc0lFb2dQVDA5SURVeE1qRWdKaVlnS0hKbElEMGdKQ0E5UFQwZ1Qya2dQeUF6TlRrd055QTZJRE15T0RVMktTa3NJQ2h5WlNBOVBUMGdNek16TWpVZ2ZId2djbVVnUFQwOUlETXpNekkySUh4OElISmxJRDA5UFNBek5EZzBNaUI4ZkNCeVpTQTlQVDBnTXpRNE16WXBJQ1ltSUdVdVoyVjBLQ0pGV0ZSZlkyOXNiM0pmWW5WbVptVnlYMlpzYjJGMElpa3NJSEpsT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1NTaERMQ0JVTENCS0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHSW9ReXdnU2lrZ1BUMDlJQ0V3SUh4OElFTXVhWE5HY21GdFpXSjFabVpsY2xSbGVIUjFjbVVnSmlZZ1F5NXRhVzVHYVd4MFpYSWdJVDA5SUhKMElDWW1JRU11YldsdVJtbHNkR1Z5SUNFOVBTQjBkQ0EvSUUxaGRHZ3ViRzluTWloTllYUm9MbTFoZUNoVUxuZHBaSFJvTENCVUxtaGxhV2RvZENrcElDc2dNU0E2SUVNdWJXbHdiV0Z3Y3lBaFBUMGdkbTlwWkNBd0lDWW1JRU11Yldsd2JXRndjeTVzWlc1bmRHZ2dQaUF3SUQ4Z1F5NXRhWEJ0WVhCekxteGxibWQwYUNBNklFTXVhWE5EYjIxd2NtVnpjMlZrVkdWNGRIVnlaU0FtSmlCQmNuSmhlUzVwYzBGeWNtRjVLRU11YVcxaFoyVXBJRDhnVkM1dGFYQnRZWEJ6TG14bGJtZDBhQ0E2SURFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnJLRU1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUXlBOVBUMGdjblFnZkh3Z1F5QTlQVDBnZEdFZ2ZId2dReUE5UFQwZ2JtRWdQeUE1TnpJNElEb2dPVGN5T1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFSW9ReWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQlVJRDBnUXk1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnVkM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dRaWtzSUhjb1ZDa3NJRlF1YVhOV2FXUmxiMVJsZUhSMWNtVWdKaVlnYlM1a1pXeGxkR1VvVkNrc0lHOHViV1Z0YjNKNUxuUmxlSFIxY21WekxTMDdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJRS0VNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlFTXVkR0Z5WjJWME93b2dJQ0FnSUNBZ0lGUXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUZBcExDQkZLRlFwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2R5aERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGUWdQU0J1TG1kbGRDaERLVHNLSUNBZ0lDQWdJQ0JVTGw5ZmQyVmlaMnhKYm1sMElDRTlQU0IyYjJsa0lEQWdKaVlnS0hNdVpHVnNaWFJsVkdWNGRIVnlaU2hVTGw5ZmQyVmlaMnhVWlhoMGRYSmxLU3dnYmk1eVpXMXZkbVVvUXlrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdSU2hES1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlFnUFNCRExuUmxlSFIxY21Vc0lFb2dQU0J1TG1kbGRDaERLU3dnSkNBOUlHNHVaMlYwS0ZRcE93b2dJQ0FnSUNBZ0lHbG1JQ2doSVVNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDUXVYMTkzWldKbmJGUmxlSFIxY21VZ0lUMDlJSFp2YVdRZ01DQW1KaUFvY3k1a1pXeGxkR1ZVWlhoMGRYSmxLQ1F1WDE5M1pXSm5iRlJsZUhSMWNtVXBMQ0J2TG0xbGJXOXllUzUwWlhoMGRYSmxjeTB0S1N3Z1F5NWtaWEIwYUZSbGVIUjFjbVVnSmlZZ1F5NWtaWEIwYUZSbGVIUjFjbVV1WkdsemNHOXpaU2dwTENCRExtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwS1NCbWIzSW9iR1YwSUhKbElEMGdNRHNnY21VZ1BDQTJPeUJ5WlNzcktYTXVaR1ZzWlhSbFJuSmhiV1ZpZFdabVpYSW9TaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWEpiY21WZEtTd2dTaTVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElnSmlZZ2N5NWtaV3hsZEdWU1pXNWtaWEppZFdabVpYSW9TaTVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWEpiY21WZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQnpMbVJsYkdWMFpVWnlZVzFsWW5WbVptVnlLRW91WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5S1N3Z1NpNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSWdKaVlnY3k1a1pXeGxkR1ZTWlc1a1pYSmlkV1ptWlhJb1NpNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSXBMQ0JLTGw5ZmQyVmlaMnhOZFd4MGFYTmhiWEJzWldSR2NtRnRaV0oxWm1abGNpQW1KaUJ6TG1SbGJHVjBaVVp5WVcxbFluVm1abVZ5S0VvdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlLU3dnU2k1ZlgzZGxZbWRzUTI5c2IzSlNaVzVrWlhKaWRXWm1aWElnSmlZZ2N5NWtaV3hsZEdWU1pXNWtaWEppZFdabVpYSW9TaTVmWDNkbFltZHNRMjlzYjNKU1pXNWtaWEppZFdabVpYSXBMQ0JLTGw5ZmQyVmlaMnhFWlhCMGFGSmxibVJsY21KMVptWmxjaUFtSmlCekxtUmxiR1YwWlZKbGJtUmxjbUoxWm1abGNpaEtMbDlmZDJWaVoyeEVaWEIwYUZKbGJtUmxjbUoxWm1abGNpazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaERMbWx6VjJWaVIweE5kV3gwYVhCc1pWSmxibVJsY2xSaGNtZGxkSE1wSUdadmNpaHNaWFFnY21VeElEMGdNQ3dnV2lBOUlGUXViR1Z1WjNSb095QnlaVEVnUENCYU95QnlaVEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUV1VnUFNCdUxtZGxkQ2hVVzNKbE1WMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUV1V1WDE5M1pXSm5iRlJsZUhSMWNtVWdKaVlnS0hNdVpHVnNaWFJsVkdWNGRIVnlaU2hOWlM1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUc4dWJXVnRiM0o1TG5SbGVIUjFjbVZ6TFMwcExDQnVMbkpsYlc5MlpTaFVXM0psTVYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVjbVZ0YjNabEtGUXBMQ0J1TG5KbGJXOTJaU2hES1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnNaWFFnUkNBOUlEQTdDaUFnSUNCbWRXNWpkR2x2YmlCVktDa2dld29nSUNBZ0lDQWdJRVFnUFNBd093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdSaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdReUE5SUVRN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVNZ1BqMGdiQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVkdWNGRIVnlaWE02SUZSeWVXbHVaeUIwYnlCMWMyVWdJaUFySUVNZ0t5QWlJSFJsZUhSMWNtVWdkVzVwZEhNZ2QyaHBiR1VnZEdocGN5QkhVRlVnYzNWd2NHOXlkSE1nYjI1c2VTQWlJQ3NnYkNrc0lFUWdLejBnTVN3Z1F6c0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRThvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJR3hsZENCS0lEMGdiaTVuWlhRb1F5azdDaUFnSUNBZ0lDQWdhV1lnS0VNdWFYTldhV1JsYjFSbGVIUjFjbVVnSmlZZ2MyVW9ReWtzSUVNdWRtVnljMmx2YmlBK0lEQWdKaVlnU2k1ZlgzWmxjbk5wYjI0Z0lUMDlJRU11ZG1WeWMybHZiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnSkNBOUlFTXVhVzFoWjJVN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna0lEMDlQU0IyYjJsa0lEQXBJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWR1Y0ZEhWeVpTQnRZWEpyWldRZ1ptOXlJSFZ3WkdGMFpTQmlkWFFnYVcxaFoyVWdhWE1nZFc1a1pXWnBibVZrSWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLQ1F1WTI5dGNHeGxkR1VnUFQwOUlDRXhLU0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRlJsZUhSMWNtVWdiV0Z5YTJWa0lHWnZjaUIxY0dSaGRHVWdZblYwSUdsdFlXZGxJR2x6SUdsdVkyOXRjR3hsZEdVaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkNaU2hLTENCRExDQlVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJVS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2d6TlRVekxDQktMbDlmZDJWaVoyeFVaWGgwZFhKbEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzVsS0VNc0lGUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1NpQTlJRzR1WjJWMEtFTXBPd29nSUNBZ0lDQWdJR2xtSUNoRExuWmxjbk5wYjI0Z1BpQXdJQ1ltSUVvdVgxOTJaWEp6YVc5dUlDRTlQU0JETG5abGNuTnBiMjRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdRbVVvU2l3Z1F5d2dWQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDNWhZM1JwZG1WVVpYaDBkWEpsS0RNek9UZzBJQ3NnVkNrc0lIUXVZbWx1WkZSbGVIUjFjbVVvTXpVNE5qWXNJRW91WDE5M1pXSm5iRlJsZUhSMWNtVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWTJVb1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQktJRDBnYmk1blpYUW9ReWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tFTXVkbVZ5YzJsdmJpQStJREFnSmlZZ1NpNWZYM1psY25OcGIyNGdJVDA5SUVNdWRtVnljMmx2YmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JDWlNoS0xDQkRMQ0JVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCVUtTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNnek1qZzNPU3dnU2k1ZlgzZGxZbWRzVkdWNGRIVnlaU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCV0tFTXNJRlFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdTaUE5SUc0dVoyVjBLRU1wT3dvZ0lDQWdJQ0FnSUdsbUlDaERMblpsY25OcGIyNGdQaUF3SUNZbUlFb3VYMTkyWlhKemFXOXVJQ0U5UFNCRExuWmxjbk5wYjI0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnV1NoS0xDQkRMQ0JVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCVUtTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNnek5EQTJOeXdnU2k1ZlgzZGxZbWRzVkdWNGRIVnlaU2s3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdWeUE5SUhzS0lDQWdJQ0FnSUNCYlRuTmRPaUF4TURRNU55d0tJQ0FnSUNBZ0lDQmJkblJkT2lBek16QTNNU3dLSUNBZ0lDQWdJQ0JiUW5OZE9pQXpNelkwT0FvZ0lDQWdmU3dnYUdVZ1BTQjdDaUFnSUNBZ0lDQWdXM0owWFRvZ09UY3lPQ3dLSUNBZ0lDQWdJQ0JiZEdGZE9pQTVPVGcwTEFvZ0lDQWdJQ0FnSUZ0dVlWMDZJRGs1T0RZc0NpQWdJQ0FnSUNBZ1czUjBYVG9nT1RjeU9Td0tJQ0FnSUNBZ0lDQmJWMk5kT2lBNU9UZzFMQW9nSUNBZ0lDQWdJRnRWYVYwNklEazVPRGNLSUNBZ0lIMDdDaUFnSUNCbWRXNWpkR2x2YmlCc1pTaERMQ0JVTENCS0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0VvZ1B5QW9jeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpReUxDQlhXMVF1ZDNKaGNGTmRLU3dnY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXpMQ0JYVzFRdWQzSmhjRlJkS1N3Z0tFTWdQVDA5SURNeU9EYzVJSHg4SUVNZ1BUMDlJRE0xT0RZMktTQW1KaUJ6TG5SbGVGQmhjbUZ0WlhSbGNta29ReXdnTXpJNE9ESXNJRmRiVkM1M2NtRndVbDBwTENCekxuUmxlRkJoY21GdFpYUmxjbWtvUXl3Z01UQXlOREFzSUdobFcxUXViV0ZuUm1sc2RHVnlYU2tzSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hETENBeE1ESTBNU3dnYUdWYlZDNXRhVzVHYVd4MFpYSmRLU2tnT2lBb2N5NTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lERXdNalF5TENBek16QTNNU2tzSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hETENBeE1ESTBNeXdnTXpNd056RXBMQ0FvUXlBOVBUMGdNekk0TnprZ2ZId2dReUE5UFQwZ016VTROallwSUNZbUlITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXpNamc0TWl3Z016TXdOekVwTENBb1ZDNTNjbUZ3VXlBaFBUMGdkblFnZkh3Z1ZDNTNjbUZ3VkNBaFBUMGdkblFwSUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1ZHVjRkSFZ5WlNCcGN5QnViM1FnY0c5M1pYSWdiMllnZEhkdkxpQlVaWGgwZFhKbExuZHlZWEJUSUdGdVpDQlVaWGgwZFhKbExuZHlZWEJVSUhOb2IzVnNaQ0JpWlNCelpYUWdkRzhnVkVoU1JVVXVRMnhoYlhCVWIwVmtaMlZYY21Gd2NHbHVaeTRpS1N3Z2N5NTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lERXdNalF3TENCcktGUXViV0ZuUm1sc2RHVnlLU2tzSUhNdWRHVjRVR0Z5WVcxbGRHVnlhU2hETENBeE1ESTBNU3dnYXloVUxtMXBia1pwYkhSbGNpa3BMQ0JVTG0xcGJrWnBiSFJsY2lBaFBUMGdjblFnSmlZZ1ZDNXRhVzVHYVd4MFpYSWdJVDA5SUhSMElDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWR1Y0ZEhWeVpTQnBjeUJ1YjNRZ2NHOTNaWElnYjJZZ2RIZHZMaUJVWlhoMGRYSmxMbTFwYmtacGJIUmxjaUJ6YUc5MWJHUWdZbVVnYzJWMElIUnZJRlJJVWtWRkxrNWxZWEpsYzNSR2FXeDBaWElnYjNJZ1ZFaFNSVVV1VEdsdVpXRnlSbWxzZEdWeUxpSXBLU3dnWlM1b1lYTW9Ja1ZZVkY5MFpYaDBkWEpsWDJacGJIUmxjbDloYm1semIzUnliM0JwWXlJcElEMDlQU0FoTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ0pDQTlJR1V1WjJWMEtDSkZXRlJmZEdWNGRIVnlaVjltYVd4MFpYSmZZVzVwYzI5MGNtOXdhV01pS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZRdWRIbHdaU0E5UFQwZ2JtNGdKaVlnWlM1b1lYTW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBYMnhwYm1WaGNpSXBJRDA5UFNBaE1TQjhmQ0JoSUQwOVBTQWhNU0FtSmlCVUxuUjVjR1VnUFQwOUlHdHVJQ1ltSUdVdWFHRnpLQ0pQUlZOZmRHVjRkSFZ5WlY5b1lXeG1YMlpzYjJGMFgyeHBibVZoY2lJcElEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQW9WQzVoYm1semIzUnliM0I1SUQ0Z01TQjhmQ0J1TG1kbGRDaFVLUzVmWDJOMWNuSmxiblJCYm1semIzUnliM0I1S1NBbUppQW9jeTUwWlhoUVlYSmhiV1YwWlhKbUtFTXNJQ1F1VkVWWVZGVlNSVjlOUVZoZlFVNUpVMDlVVWs5UVdWOUZXRlFzSUUxaGRHZ3ViV2x1S0ZRdVlXNXBjMjkwY205d2VTd2dhUzVuWlhSTllYaEJibWx6YjNSeWIzQjVLQ2twS1N3Z2JpNW5aWFFvVkNrdVgxOWpkWEp5Wlc1MFFXNXBjMjkwY205d2VTQTlJRlF1WVc1cGMyOTBjbTl3ZVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdabVVvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJRU11WDE5M1pXSm5iRWx1YVhRZ1BUMDlJSFp2YVdRZ01DQW1KaUFvUXk1ZlgzZGxZbWRzU1c1cGRDQTlJQ0V3TENCVUxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQkNLU3dnUXk1ZlgzZGxZbWRzVkdWNGRIVnlaU0E5SUhNdVkzSmxZWFJsVkdWNGRIVnlaU2dwTENCdkxtMWxiVzl5ZVM1MFpYaDBkWEpsY3lzcktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRUpsS0VNc0lGUXNJRW9wSUhzS0lDQWdJQ0FnSUNCc1pYUWdKQ0E5SURNMU5UTTdDaUFnSUNBZ0lDQWdWQzVwYzBSaGRHRlVaWGgwZFhKbE1rUkJjbkpoZVNBbUppQW9KQ0E5SURNMU9EWTJLU3dnVkM1cGMwUmhkR0ZVWlhoMGRYSmxNMFFnSmlZZ0tDUWdQU0F6TWpnM09Ta3NJR1psS0VNc0lGUXBMQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QktLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ2tMQ0JETGw5ZmQyVmlaMnhVWlhoMGRYSmxLU3dnY3k1d2FYaGxiRk4wYjNKbGFTZ3pOelEwTUN3Z1ZDNW1iR2x3V1Nrc0lITXVjR2w0Wld4VGRHOXlaV2tvTXpjME5ERXNJRlF1Y0hKbGJYVnNkR2x3YkhsQmJIQm9ZU2tzSUhNdWNHbDRaV3hUZEc5eVpXa29Nek14Tnl3Z1ZDNTFibkJoWTJ0QmJHbG5ibTFsYm5RcExDQnpMbkJwZUdWc1UzUnZjbVZwS0RNM05EUXpMQ0F3S1RzS0lDQWdJQ0FnSUNCc1pYUWdjbVVnUFNCNUtGUXBJQ1ltSUY4b1ZDNXBiV0ZuWlNrZ1BUMDlJQ0V4TENCYUlEMGdjQ2hVTG1sdFlXZGxMQ0J5WlN3Z0lURXNJR2dwTENCTlpTQTlJRjhvV2lrZ2ZId2dZU3dnZG1VZ1BTQnlMbU52Ym5abGNuUW9WQzVtYjNKdFlYUXBMQ0IwWlNBOUlISXVZMjl1ZG1WeWRDaFVMblI1Y0dVcExDQlNJRDBnVENoVUxtbHVkR1Z5Ym1Gc1JtOXliV0YwTENCMlpTd2dkR1VzSUZRdVpXNWpiMlJwYm1jcE93b2dJQ0FnSUNBZ0lHeGxLQ1FzSUZRc0lFMWxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1pXVXNJRkVnUFNCVUxtMXBjRzFoY0hNc0lFVmxJRDBnWVNBbUppQlVMbWx6Vm1sa1pXOVVaWGgwZFhKbElDRTlQU0FoTUN3Z2JXVWdQU0JETGw5ZmRtVnljMmx2YmlBOVBUMGdkbTlwWkNBd0xDQlNaU0E5SUVrb1ZDd2dXaXdnVFdVcE93b2dJQ0FnSUNBZ0lHbG1JQ2hVTG1selJHVndkR2hVWlhoMGRYSmxLU0JTSUQwZ05qUXdNaXdnWVNBL0lGUXVkSGx3WlNBOVBUMGdibTRnUHlCU0lEMGdNell3TVRJZ09pQlVMblI1Y0dVZ1BUMDlJRkJ6SUQ4Z1VpQTlJRE16TVRrd0lEb2dWQzUwZVhCbElEMDlQU0JVYVNBL0lGSWdQU0F6TlRBMU5pQTZJRklnUFNBek16RTRPU0E2SUZRdWRIbHdaU0E5UFQwZ2JtNGdKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lWMlZpUjB4U1pXNWtaWEpsY2pvZ1JteHZZWFJwYm1jZ2NHOXBiblFnWkdWd2RHZ2dkR1Y0ZEhWeVpTQnlaWEYxYVhKbGN5QlhaV0pIVERJdUlpa3NJRlF1Wm05eWJXRjBJRDA5UFNCV2JpQW1KaUJTSUQwOVBTQTJOREF5SUNZbUlGUXVkSGx3WlNBaFBUMGdZM0lnSmlZZ1ZDNTBlWEJsSUNFOVBTQlFjeUFtSmlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCVmMyVWdWVzV6YVdkdVpXUlRhRzl5ZEZSNWNHVWdiM0lnVlc1emFXZHVaV1JKYm5SVWVYQmxJR1p2Y2lCRVpYQjBhRVp2Y20xaGRDQkVaWEIwYUZSbGVIUjFjbVV1SWlrc0lGUXVkSGx3WlNBOUlHTnlMQ0IwWlNBOUlISXVZMjl1ZG1WeWRDaFVMblI1Y0dVcEtTd2dWQzVtYjNKdFlYUWdQVDA5SUV4cElDWW1JRklnUFQwOUlEWTBNRElnSmlZZ0tGSWdQU0F6TkRBME1Td2dWQzUwZVhCbElDRTlQU0JVYVNBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlZjMlVnVlc1emFXZHVaV1JKYm5ReU5EaFVlWEJsSUdadmNpQkVaWEIwYUZOMFpXNWphV3hHYjNKdFlYUWdSR1Z3ZEdoVVpYaDBkWEpsTGlJcExDQlVMblI1Y0dVZ1BTQlVhU3dnZEdVZ1BTQnlMbU52Ym5abGNuUW9WQzUwZVhCbEtTa3BMQ0JGWlNBbUppQnRaU0EvSUhRdWRHVjRVM1J2Y21GblpUSkVLRE0xTlRNc0lERXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2d6TlRVekxDQXdMQ0JTTENCYUxuZHBaSFJvTENCYUxtaGxhV2RvZEN3Z01Dd2dkbVVzSUhSbExDQnVkV3hzS1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVUxtbHpSR0YwWVZSbGVIUjFjbVVwSUdsbUlDaFJMbXhsYm1kMGFDQStJREFnSmlZZ1RXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1JXVWdKaVlnYldVZ0ppWWdkQzUwWlhoVGRHOXlZV2RsTWtRb016VTFNeXdnVW1Vc0lGSXNJRkZiTUYwdWQybGtkR2dzSUZGYk1GMHVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2WlNBOUlEQXNJRXhsSUQwZ1VTNXNaVzVuZEdnN0lHOWxJRHdnVEdVN0lHOWxLeXNwWldVZ1BTQlJXMjlsWFN3Z1JXVWdQeUIwTG5SbGVGTjFZa2x0WVdkbE1rUW9NelUxTXl3Z01Dd2dNQ3dnTUN3Z1pXVXVkMmxrZEdnc0lHVmxMbWhsYVdkb2RDd2dkbVVzSUhSbExDQmxaUzVrWVhSaEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5UVXpMQ0J2WlN3Z1Vpd2daV1V1ZDJsa2RHZ3NJR1ZsTG1obGFXZG9kQ3dnTUN3Z2RtVXNJSFJsTENCbFpTNWtZWFJoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdWQzVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnUldVZ1B5QW9iV1VnSmlZZ2RDNTBaWGhUZEc5eVlXZGxNa1FvTXpVMU15d2dVbVVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMEtTd2dkQzUwWlhoVGRXSkpiV0ZuWlRKRUtETTFOVE1zSURBc0lEQXNJREFzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwTENCMlpTd2dkR1VzSUZvdVpHRjBZU2twSURvZ2RDNTBaWGhKYldGblpUSkVLRE0xTlRNc0lEQXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwTENBd0xDQjJaU3dnZEdVc0lGb3VaR0YwWVNrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1ZDNXBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFVmxJQ1ltSUcxbElDWW1JSFF1ZEdWNFUzUnZjbUZuWlRKRUtETTFOVE1zSUZKbExDQlNMQ0JSV3pCZExuZHBaSFJvTENCUld6QmRMbWhsYVdkb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYjJVeElEMGdNQ3dnVEdVeElEMGdVUzVzWlc1bmRHZzdJRzlsTVNBOElFeGxNVHNnYjJVeEt5c3BaV1VnUFNCUlcyOWxNVjBzSUZRdVptOXliV0YwSUNFOVBTQmpkQ0FtSmlCVUxtWnZjbTFoZENBaFBUMGdSMjRnUHlCMlpTQWhQVDBnYm5Wc2JDQS9JRVZsSUQ4Z2RDNWpiMjF3Y21WemMyVmtWR1Y0VTNWaVNXMWhaMlV5UkNnek5UVXpMQ0J2WlRFc0lEQXNJREFzSUdWbExuZHBaSFJvTENCbFpTNW9aV2xuYUhRc0lIWmxMQ0JsWlM1a1lYUmhLU0E2SUhRdVkyOXRjSEpsYzNObFpGUmxlRWx0WVdkbE1rUW9NelUxTXl3Z2IyVXhMQ0JTTENCbFpTNTNhV1IwYUN3Z1pXVXVhR1ZwWjJoMExDQXdMQ0JsWlM1a1lYUmhLU0E2SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nUVhSMFpXMXdkQ0IwYnlCc2IyRmtJSFZ1YzNWd2NHOXlkR1ZrSUdOdmJYQnlaWE56WldRZ2RHVjRkSFZ5WlNCbWIzSnRZWFFnYVc0Z0xuVndiRzloWkZSbGVIUjFjbVVvS1NJcElEb2dSV1VnUHlCMExuUmxlRk4xWWtsdFlXZGxNa1FvTXpVMU15d2diMlV4TENBd0xDQXdMQ0JsWlM1M2FXUjBhQ3dnWldVdWFHVnBaMmgwTENCMlpTd2dkR1VzSUdWbExtUmhkR0VwSURvZ2RDNTBaWGhKYldGblpUSkVLRE0xTlRNc0lHOWxNU3dnVWl3Z1pXVXVkMmxrZEdnc0lHVmxMbWhsYVdkb2RDd2dNQ3dnZG1Vc0lIUmxMQ0JsWlM1a1lYUmhLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZRdWFYTkVZWFJoVkdWNGRIVnlaVEpFUVhKeVlYa3BJRVZsSUQ4Z0tHMWxJQ1ltSUhRdWRHVjRVM1J2Y21GblpUTkVLRE0xT0RZMkxDQlNaU3dnVWl3Z1dpNTNhV1IwYUN3Z1dpNW9aV2xuYUhRc0lGb3VaR1Z3ZEdncExDQjBMblJsZUZOMVlrbHRZV2RsTTBRb016VTROallzSURBc0lEQXNJREFzSURBc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMExDQmFMbVJsY0hSb0xDQjJaU3dnZEdVc0lGb3VaR0YwWVNrcElEb2dkQzUwWlhoSmJXRm5aVE5FS0RNMU9EWTJMQ0F3TENCU0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDd2dXaTVrWlhCMGFDd2dNQ3dnZG1Vc0lIUmxMQ0JhTG1SaGRHRXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLRlF1YVhORVlYUmhWR1Y0ZEhWeVpUTkVLU0JGWlNBL0lDaHRaU0FtSmlCMExuUmxlRk4wYjNKaFoyVXpSQ2d6TWpnM09Td2dVbVVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMExDQmFMbVJsY0hSb0tTd2dkQzUwWlhoVGRXSkpiV0ZuWlRORUtETXlPRGM1TENBd0xDQXdMQ0F3TENBd0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDd2dXaTVrWlhCMGFDd2dkbVVzSUhSbExDQmFMbVJoZEdFcEtTQTZJSFF1ZEdWNFNXMWhaMlV6UkNnek1qZzNPU3dnTUN3Z1Vpd2dXaTUzYVdSMGFDd2dXaTVvWldsbmFIUXNJRm91WkdWd2RHZ3NJREFzSUhabExDQjBaU3dnV2k1a1lYUmhLVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hVTG1selJuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbEtTQkZaU0FtSmlCdFpTQS9JSFF1ZEdWNFUzUnZjbUZuWlRKRUtETTFOVE1zSUZKbExDQlNMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ2tnT2lCMExuUmxlRWx0WVdkbE1rUW9NelUxTXl3Z01Dd2dVaXdnV2k1M2FXUjBhQ3dnV2k1b1pXbG5hSFFzSURBc0lIWmxMQ0IwWlN3Z2JuVnNiQ2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvVVM1c1pXNW5kR2dnUGlBd0lDWW1JRTFsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRVZsSUNZbUlHMWxJQ1ltSUhRdWRHVjRVM1J2Y21GblpUSkVLRE0xTlRNc0lGSmxMQ0JTTENCUld6QmRMbmRwWkhSb0xDQlJXekJkTG1obGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2IyVXlJRDBnTUN3Z1RHVXlJRDBnVVM1c1pXNW5kR2c3SUc5bE1pQThJRXhsTWpzZ2IyVXlLeXNwWldVZ1BTQlJXMjlsTWwwc0lFVmxJRDhnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lHOWxNaXdnTUN3Z01Dd2dkbVVzSUhSbExDQmxaU2tnT2lCMExuUmxlRWx0WVdkbE1rUW9NelUxTXl3Z2IyVXlMQ0JTTENCMlpTd2dkR1VzSUdWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnVkM1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1JXVWdQeUFvYldVZ0ppWWdkQzUwWlhoVGRHOXlZV2RsTWtRb016VTFNeXdnVW1Vc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBLU3dnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lEQXNJREFzSURBc0lIWmxMQ0IwWlN3Z1dpa3BJRG9nZEM1MFpYaEpiV0ZuWlRKRUtETTFOVE1zSURBc0lGSXNJSFpsTENCMFpTd2dXaWs3Q2lBZ0lDQWdJQ0FnWWloVUxDQk5aU2tnSmlZZ1FTZ2tLU3dnUXk1ZlgzWmxjbk5wYjI0Z1BTQlVMblpsY25OcGIyNHNJRlF1YjI1VmNHUmhkR1VnSmlZZ1ZDNXZibFZ3WkdGMFpTaFVLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZrb1F5d2dWQ3dnU2lrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hVTG1sdFlXZGxMbXhsYm1kMGFDQWhQVDBnTmlrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUdabEtFTXNJRlFwTENCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJLS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2d6TkRBMk55d2dReTVmWDNkbFltZHNWR1Y0ZEhWeVpTa3NJSE11Y0dsNFpXeFRkRzl5Wldrb016YzBOREFzSUZRdVpteHBjRmtwTENCekxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRReExDQlVMbkJ5WlcxMWJIUnBjR3g1UVd4d2FHRXBMQ0J6TG5CcGVHVnNVM1J2Y21WcEtETXpNVGNzSUZRdWRXNXdZV05yUVd4cFoyNXRaVzUwS1N3Z2N5NXdhWGhsYkZOMGIzSmxhU2d6TnpRME15d2dNQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElDUWdQU0JVSUNZbUlDaFVMbWx6UTI5dGNISmxjM05sWkZSbGVIUjFjbVVnZkh3Z1ZDNXBiV0ZuWlZzd1hTNXBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxLU3dnY21VZ1BTQlVMbWx0WVdkbFd6QmRJQ1ltSUZRdWFXMWhaMlZiTUYwdWFYTkVZWFJoVkdWNGRIVnlaU3dnV2lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiMlVnUFNBd095QnZaU0E4SURZN0lHOWxLeXNwSVNRZ0ppWWdJWEpsSUQ4Z1dsdHZaVjBnUFNCd0tGUXVhVzFoWjJWYmIyVmRMQ0FoTVN3Z0lUQXNJR01wSURvZ1dsdHZaVjBnUFNCeVpTQS9JRlF1YVcxaFoyVmJiMlZkTG1sdFlXZGxJRG9nVkM1cGJXRm5aVnR2WlYwN0NpQWdJQ0FnSUNBZ2JHVjBJRTFsSUQwZ1dsc3dYU3dnZG1VZ1BTQmZLRTFsS1NCOGZDQmhMQ0IwWlNBOUlISXVZMjl1ZG1WeWRDaFVMbVp2Y20xaGRDa3NJRklnUFNCeUxtTnZiblpsY25Rb1ZDNTBlWEJsS1N3Z1pXVWdQU0JNS0ZRdWFXNTBaWEp1WVd4R2IzSnRZWFFzSUhSbExDQlNMQ0JVTG1WdVkyOWthVzVuS1N3Z1VTQTlJR0VnSmlZZ1ZDNXBjMVpwWkdWdlZHVjRkSFZ5WlNBaFBUMGdJVEFzSUVWbElEMGdReTVmWDNabGNuTnBiMjRnUFQwOUlIWnZhV1FnTUN3Z2JXVWdQU0JKS0ZRc0lFMWxMQ0IyWlNrN0NpQWdJQ0FnSUNBZ2JHVW9NelF3Tmpjc0lGUXNJSFpsS1RzS0lDQWdJQ0FnSUNCc1pYUWdVbVU3Q2lBZ0lDQWdJQ0FnYVdZZ0tDUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1VTQW1KaUJGWlNBbUppQjBMblJsZUZOMGIzSmhaMlV5UkNnek5EQTJOeXdnYldVc0lHVmxMQ0JOWlM1M2FXUjBhQ3dnVFdVdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnZaVEVnUFNBd095QnZaVEVnUENBMk95QnZaVEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCU1pTQTlJRnBiYjJVeFhTNXRhWEJ0WVhCek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCTVpTQTlJREE3SUV4bElEd2dVbVV1YkdWdVozUm9PeUJNWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1dHVWdQU0JTWlZ0TVpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVkM1bWIzSnRZWFFnSVQwOUlHTjBJQ1ltSUZRdVptOXliV0YwSUNFOVBTQkhiaUEvSUhSbElDRTlQU0J1ZFd4c0lEOGdVU0EvSUhRdVkyOXRjSEpsYzNObFpGUmxlRk4xWWtsdFlXZGxNa1FvTXpRd05qa2dLeUJ2WlRFc0lFeGxMQ0F3TENBd0xDQllaUzUzYVdSMGFDd2dXR1V1YUdWcFoyaDBMQ0IwWlN3Z1dHVXVaR0YwWVNrZ09pQjBMbU52YlhCeVpYTnpaV1JVWlhoSmJXRm5aVEpFS0RNME1EWTVJQ3NnYjJVeExDQk1aU3dnWldVc0lGaGxMbmRwWkhSb0xDQllaUzVvWldsbmFIUXNJREFzSUZobExtUmhkR0VwSURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCQmRIUmxiWEIwSUhSdklHeHZZV1FnZFc1emRYQndiM0owWldRZ1kyOXRjSEpsYzNObFpDQjBaWGgwZFhKbElHWnZjbTFoZENCcGJpQXVjMlYwVkdWNGRIVnlaVU4xWW1Vb0tTSXBJRG9nVVNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1Td2dUR1VzSURBc0lEQXNJRmhsTG5kcFpIUm9MQ0JZWlM1b1pXbG5hSFFzSUhSbExDQlNMQ0JZWlM1a1lYUmhLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNU3dnVEdVc0lHVmxMQ0JZWlM1M2FXUjBhQ3dnV0dVdWFHVnBaMmgwTENBd0xDQjBaU3dnVWl3Z1dHVXVaR0YwWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCU1pTQTlJRlF1Yldsd2JXRndjeXdnVVNBbUppQkZaU0FtSmlBb1VtVXViR1Z1WjNSb0lENGdNQ0FtSmlCdFpTc3JMQ0IwTG5SbGVGTjBiM0poWjJVeVJDZ3pOREEyTnl3Z2JXVXNJR1ZsTENCYVd6QmRMbmRwWkhSb0xDQmFXekJkTG1obGFXZG9kQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOWxNaUE5SURBN0lHOWxNaUE4SURZN0lHOWxNaXNyS1dsbUlDaHlaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVVNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1pd2dNQ3dnTUN3Z01Dd2dXbHR2WlRKZExuZHBaSFJvTENCYVcyOWxNbDB1YUdWcFoyaDBMQ0IwWlN3Z1Vpd2dXbHR2WlRKZExtUmhkR0VwSURvZ2RDNTBaWGhKYldGblpUSkVLRE0wTURZNUlDc2diMlV5TENBd0xDQmxaU3dnV2x0dlpUSmRMbmRwWkhSb0xDQmFXMjlsTWwwdWFHVnBaMmgwTENBd0xDQjBaU3dnVWl3Z1dsdHZaVEpkTG1SaGRHRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQk1aVEVnUFNBd095Qk1aVEVnUENCU1pTNXNaVzVuZEdnN0lFeGxNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVjJVZ1BTQlNaVnRNWlRGZExtbHRZV2RsVzI5bE1sMHVhVzFoWjJVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTWl3Z1RHVXhJQ3NnTVN3Z01Dd2dNQ3dnVjJVdWQybGtkR2dzSUZkbExtaGxhV2RvZEN3Z2RHVXNJRklzSUZkbExtUmhkR0VwSURvZ2RDNTBaWGhKYldGblpUSkVLRE0wTURZNUlDc2diMlV5TENCTVpURWdLeUF4TENCbFpTd2dWMlV1ZDJsa2RHZ3NJRmRsTG1obGFXZG9kQ3dnTUN3Z2RHVXNJRklzSUZkbExtUmhkR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VTQS9JSFF1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNaXdnTUN3Z01Dd2dNQ3dnZEdVc0lGSXNJRnBiYjJVeVhTa2dPaUIwTG5SbGVFbHRZV2RsTWtRb016UXdOamtnS3lCdlpUSXNJREFzSUdWbExDQjBaU3dnVWl3Z1dsdHZaVEpkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVEdVeUlEMGdNRHNnVEdVeUlEd2dVbVV1YkdWdVozUm9PeUJNWlRJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGaGxNU0E5SUZKbFcweGxNbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VTQS9JSFF1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNaXdnVEdVeUlDc2dNU3dnTUN3Z01Dd2dkR1VzSUZJc0lGaGxNUzVwYldGblpWdHZaVEpkS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTWl3Z1RHVXlJQ3NnTVN3Z1pXVXNJSFJsTENCU0xDQllaVEV1YVcxaFoyVmJiMlV5WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWWloVUxDQjJaU2tnSmlZZ1FTZ3pOREEyTnlrc0lFTXVYMTkyWlhKemFXOXVJRDBnVkM1MlpYSnphVzl1TENCVUxtOXVWWEJrWVhSbElDWW1JRlF1YjI1VmNHUmhkR1VvVkNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQkRaU2hETENCVUxDQktMQ0FrTENCeVpTa2dld29nSUNBZ0lDQWdJR3hsZENCYUlEMGdjaTVqYjI1MlpYSjBLRW91Wm05eWJXRjBLU3dnVFdVZ1BTQnlMbU52Ym5abGNuUW9TaTUwZVhCbEtTd2dkbVVnUFNCTUtFb3VhVzUwWlhKdVlXeEdiM0p0WVhRc0lGb3NJRTFsTENCS0xtVnVZMjlrYVc1bktUc0tJQ0FnSUNBZ0lDQnVMbWRsZENoVUtTNWZYMmhoYzBWNGRHVnlibUZzVkdWNGRIVnlaWE1nZkh3Z0tISmxJRDA5UFNBek1qZzNPU0I4ZkNCeVpTQTlQVDBnTXpVNE5qWWdQeUIwTG5SbGVFbHRZV2RsTTBRb2NtVXNJREFzSUhabExDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDd2dWQzVrWlhCMGFDd2dNQ3dnV2l3Z1RXVXNJRzUxYkd3cElEb2dkQzUwWlhoSmJXRm5aVEpFS0hKbExDQXdMQ0IyWlN3Z1ZDNTNhV1IwYUN3Z1ZDNW9aV2xuYUhRc0lEQXNJRm9zSUUxbExDQnVkV3hzS1Nrc0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNVFl3TENCREtTd2dWQzUxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVVnUHlCbUxtWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpUSkVUWFZzZEdsellXMXdiR1ZGV0ZRb016WXhOakFzSUNRc0lISmxMQ0J1TG1kbGRDaEtLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTd2dNQ3dnZFdVb1ZDa3BJRG9nY3k1bWNtRnRaV0oxWm1abGNsUmxlSFIxY21VeVJDZ3pOakUyTUN3Z0pDd2djbVVzSUc0dVoyVjBLRW9wTGw5ZmQyVmlaMnhVWlhoMGRYSmxMQ0F3S1N3Z2RDNWlhVzVrUm5KaGJXVmlkV1ptWlhJb016WXhOakFzSUc1MWJHd3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZVdVb1F5d2dWQ3dnU2lrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h6TG1KcGJtUlNaVzVrWlhKaWRXWm1aWElvTXpZeE5qRXNJRU1wTENCVUxtUmxjSFJvUW5WbVptVnlJQ1ltSUNGVUxuTjBaVzVqYVd4Q2RXWm1aWElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUNRZ1BTQXpNekU0T1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VvZ2ZId2dWQzUxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlaU0E5SUZRdVpHVndkR2hVWlhoMGRYSmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVVnSmlZZ2NtVXVhWE5FWlhCMGFGUmxlSFIxY21VZ0ppWWdLSEpsTG5SNWNHVWdQVDA5SUc1dUlEOGdKQ0E5SURNMk1ERXlJRG9nY21VdWRIbHdaU0E5UFQwZ1VITWdKaVlnS0NRZ1BTQXpNekU1TUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRm9nUFNCMVpTaFVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRlF1ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQ4Z1ppNXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1ZGV0ZRb016WXhOakVzSUZvc0lDUXNJRlF1ZDJsa2RHZ3NJRlF1YUdWcFoyaDBLU0E2SUhNdWNtVnVaR1Z5WW5WbVptVnlVM1J2Y21GblpVMTFiSFJwYzJGdGNHeGxLRE0yTVRZeExDQmFMQ0FrTENCVUxuZHBaSFJvTENCVUxtaGxhV2RvZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnpMbkpsYm1SbGNtSjFabVpsY2xOMGIzSmhaMlVvTXpZeE5qRXNJQ1FzSUZRdWQybGtkR2dzSUZRdWFHVnBaMmgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjeTVtY21GdFpXSjFabVpsY2xKbGJtUmxjbUoxWm1abGNpZ3pOakUyTUN3Z016WXdPVFlzSURNMk1UWXhMQ0JES1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGUXVaR1Z3ZEdoQ2RXWm1aWElnSmlZZ1ZDNXpkR1Z1WTJsc1FuVm1abVZ5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENBa01TQTlJSFZsS0ZRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JLSUNZbUlGUXVkWE5sVW1WdVpHVnlZblZtWm1WeUlEOGdjeTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdVb016WXhOakVzSUNReExDQXpOVEExTml3Z1ZDNTNhV1IwYUN3Z1ZDNW9aV2xuYUhRcElEb2dWQzUxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVVnUHlCbUxuSmxibVJsY21KMVptWmxjbE4wYjNKaFoyVk5kV3gwYVhOaGJYQnNaVVZZVkNnek5qRTJNU3dnSkRFc0lETTFNRFUyTENCVUxuZHBaSFJvTENCVUxtaGxhV2RvZENrZ09pQnpMbkpsYm1SbGNtSjFabVpsY2xOMGIzSmhaMlVvTXpZeE5qRXNJRE0wTURReExDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDa3NJSE11Wm5KaGJXVmlkV1ptWlhKU1pXNWtaWEppZFdabVpYSW9Nell4TmpBc0lETXpNekEyTENBek5qRTJNU3dnUXlrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUNReUlEMGdWQzVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwOVBTQWhNQ0EvSUZRdWRHVjRkSFZ5WlZzd1hTQTZJRlF1ZEdWNGRIVnlaU3dnY21VeElEMGdjaTVqYjI1MlpYSjBLQ1F5TG1admNtMWhkQ2tzSUZveElEMGdjaTVqYjI1MlpYSjBLQ1F5TG5SNWNHVXBMQ0JOWlNBOUlFd29KREl1YVc1MFpYSnVZV3hHYjNKdFlYUXNJSEpsTVN3Z1dqRXNJQ1F5TG1WdVkyOWthVzVuS1N3Z2RtVWdQU0IxWlNoVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnU2lBbUppQlVMblZ6WlZKbGJtUmxjbUoxWm1abGNpQS9JSE11Y21WdVpHVnlZblZtWm1WeVUzUnZjbUZuWlUxMWJIUnBjMkZ0Y0d4bEtETTJNVFl4TENCMlpTd2dUV1VzSUZRdWQybGtkR2dzSUZRdWFHVnBaMmgwS1NBNklGUXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDhnWmk1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVkZXRlFvTXpZeE5qRXNJSFpsTENCTlpTd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXBJRG9nY3k1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbEtETTJNVFl4TENCTlpTd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J6TG1KcGJtUlNaVzVrWlhKaWRXWm1aWElvTXpZeE5qRXNJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdaMlVvUXl3Z1ZDa2dld29nSUNBZ0lDQWdJR2xtSUNoVUlDWW1JRlF1YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lSR1Z3ZEdnZ1ZHVjRkSFZ5WlNCM2FYUm9JR04xWW1VZ2NtVnVaR1Z5SUhSaGNtZGxkSE1nYVhNZ2JtOTBJSE4xY0hCdmNuUmxaQ0lwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z1F5a3NJQ0VvVkM1a1pYQjBhRlJsZUhSMWNtVWdKaVlnVkM1a1pYQjBhRlJsZUhSMWNtVXVhWE5FWlhCMGFGUmxlSFIxY21VcEtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0luSmxibVJsY2xSaGNtZGxkQzVrWlhCMGFGUmxlSFIxY21VZ2JYVnpkQ0JpWlNCaGJpQnBibk4wWVc1alpTQnZaaUJVU0ZKRlJTNUVaWEIwYUZSbGVIUjFjbVVpS1RzS0lDQWdJQ0FnSUNBb0lXNHVaMlYwS0ZRdVpHVndkR2hVWlhoMGRYSmxLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTQjhmQ0JVTG1SbGNIUm9WR1Y0ZEhWeVpTNXBiV0ZuWlM1M2FXUjBhQ0FoUFQwZ1ZDNTNhV1IwYUNCOGZDQlVMbVJsY0hSb1ZHVjRkSFZ5WlM1cGJXRm5aUzVvWldsbmFIUWdJVDA5SUZRdWFHVnBaMmgwS1NBbUppQW9WQzVrWlhCMGFGUmxlSFIxY21VdWFXMWhaMlV1ZDJsa2RHZ2dQU0JVTG5kcFpIUm9MQ0JVTG1SbGNIUm9WR1Y0ZEhWeVpTNXBiV0ZuWlM1b1pXbG5hSFFnUFNCVUxtaGxhV2RvZEN3Z1ZDNWtaWEIwYUZSbGVIUjFjbVV1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2tzSUU4b1ZDNWtaWEIwYUZSbGVIUjFjbVVzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0FrSUQwZ2JpNW5aWFFvVkM1a1pYQjBhRlJsZUhSMWNtVXBMbDlmZDJWaVoyeFVaWGgwZFhKbExDQnlaU0E5SUhWbEtGUXBPd29nSUNBZ0lDQWdJR2xtSUNoVUxtUmxjSFJvVkdWNGRIVnlaUzVtYjNKdFlYUWdQVDA5SUZadUtTQlVMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0EvSUdZdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUk5kV3gwYVhOaGJYQnNaVVZZVkNnek5qRTJNQ3dnTXpZd09UWXNJRE0xTlRNc0lDUXNJREFzSUhKbEtTQTZJSE11Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb016WXhOakFzSURNMk1EazJMQ0F6TlRVekxDQWtMQ0F3S1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVUxtUmxjSFJvVkdWNGRIVnlaUzVtYjNKdFlYUWdQVDA5SUV4cEtTQlVMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU0EvSUdZdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUk5kV3gwYVhOaGJYQnNaVVZZVkNnek5qRTJNQ3dnTXpNek1EWXNJRE0xTlRNc0lDUXNJREFzSUhKbEtTQTZJSE11Wm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsTWtRb016WXhOakFzSURNek16QTJMQ0F6TlRVekxDQWtMQ0F3S1RzS0lDQWdJQ0FnSUNCbGJITmxJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lWVzVyYm05M2JpQmtaWEIwYUZSbGVIUjFjbVVnWm05eWJXRjBJaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNFpTaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGUWdQU0J1TG1kbGRDaERLU3dnU2lBOUlFTXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRZ1BUMDlJQ0V3T3dvZ0lDQWdJQ0FnSUdsbUlDaERMbVJsY0hSb1ZHVjRkSFZ5WlNBbUppQWhWQzVmWDJGMWRHOUJiR3h2WTJGMFpVUmxjSFJvUW5WbVptVnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hLS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW5SaGNtZGxkQzVrWlhCMGFGUmxlSFIxY21VZ2JtOTBJSE4xY0hCdmNuUmxaQ0JwYmlCRGRXSmxJSEpsYm1SbGNpQjBZWEpuWlhSeklpazdDaUFnSUNBZ0lDQWdJQ0FnSUdkbEtGUXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlMQ0JES1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tFb3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZDNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQWtJRDBnTURzZ0pDQThJRFk3SUNRckt5bDBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z1ZDNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSmJKRjBwTENCVUxsOWZkMlZpWjJ4RVpYQjBhR0oxWm1abGNsc2tYU0E5SUhNdVkzSmxZWFJsVW1WdVpHVnlZblZtWm1WeUtDa3NJSGxsS0ZRdVgxOTNaV0puYkVSbGNIUm9ZblZtWm1WeVd5UmRMQ0JETENBaE1TazdDaUFnSUNBZ0lDQWdmU0JsYkhObElIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNVFl3TENCVUxsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNpa3NJRlF1WDE5M1pXSm5iRVJsY0hSb1luVm1abVZ5SUQwZ2N5NWpjbVZoZEdWU1pXNWtaWEppZFdabVpYSW9LU3dnZVdVb1ZDNWZYM2RsWW1kc1JHVndkR2hpZFdabVpYSXNJRU1zSUNFeEtUc0tJQ0FnSUNBZ0lDQjBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z2JuVnNiQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUFpTaERMQ0JVTENCS0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUNRZ1BTQnVMbWRsZENoREtUc0tJQ0FnSUNBZ0lDQlVJQ0U5UFNCMmIybGtJREFnSmlZZ1EyVW9KQzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElzSUVNc0lFTXVkR1Y0ZEhWeVpTd2dNell3TmpRc0lETTFOVE1wTENCS0lDRTlQU0IyYjJsa0lEQWdKaVlnZUdVb1F5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJIS0VNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVkNBOUlFTXVkR1Y0ZEhWeVpTd2dTaUE5SUc0dVoyVjBLRU1wTENBa0lEMGdiaTVuWlhRb1ZDazdDaUFnSUNBZ0lDQWdReTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnVUNrc0lFTXVhWE5YWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeUFoUFQwZ0lUQWdKaVlnS0NRdVgxOTNaV0puYkZSbGVIUjFjbVVnUFQwOUlIWnZhV1FnTUNBbUppQW9KQzVmWDNkbFltZHNWR1Y0ZEhWeVpTQTlJSE11WTNKbFlYUmxWR1Y0ZEhWeVpTZ3BLU3dnSkM1ZlgzWmxjbk5wYjI0Z1BTQlVMblpsY25OcGIyNHNJRzh1YldWdGIzSjVMblJsZUhSMWNtVnpLeXNwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlaU0E5SUVNdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnUFQwOUlDRXdMQ0JhSUQwZ1F5NXBjMWRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpJRDA5UFNBaE1Dd2dUV1VnUFNCVUxtbHpSR0YwWVZSbGVIUjFjbVV6UkNCOGZDQlVMbWx6UkdGMFlWUmxlSFIxY21VeVJFRnljbUY1TENCMlpTQTlJRjhvUXlrZ2ZId2dZVHNLSUNBZ0lDQWdJQ0JwWmlBb1lTQW1KaUJVTG1admNtMWhkQ0E5UFQwZ1IyNGdKaVlnS0ZRdWRIbHdaU0E5UFQwZ2JtNGdmSHdnVkM1MGVYQmxJRDA5UFNCcmJpa2dKaVlnS0ZRdVptOXliV0YwSUQwZ1kzUXNJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dVbVZ1WkdWeWFXNW5JSFJ2SUhSbGVIUjFjbVZ6SUhkcGRHZ2dVa2RDSUdadmNtMWhkQ0JwY3lCdWIzUWdjM1Z3Y0c5eWRHVmtMaUJWYzJsdVp5QlNSMEpCSUdadmNtMWhkQ0JwYm5OMFpXRmtMaUlwS1N3Z2NtVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1NpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjBaU0E5SURBN0lIUmxJRHdnTmpzZ2RHVXJLeWxLTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2x0MFpWMGdQU0J6TG1OeVpXRjBaVVp5WVcxbFluVm1abVZ5S0NrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaEtMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjaUE5SUhNdVkzSmxZWFJsUm5KaGJXVmlkV1ptWlhJb0tTd2dXaWtnYVdZZ0tHa3VaSEpoZDBKMVptWmxjbk1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhSbE1TQTlJRU11ZEdWNGRIVnlaVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCU0lEMGdNQ3dnWldVZ1BTQjBaVEV1YkdWdVozUm9PeUJTSUR3Z1pXVTdJRklyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVU0E5SUc0dVoyVjBLSFJsTVZ0U1hTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlJMbDlmZDJWaVoyeFVaWGgwZFhKbElEMDlQU0IyYjJsa0lEQWdKaVlnS0ZFdVgxOTNaV0puYkZSbGVIUjFjbVVnUFNCekxtTnlaV0YwWlZSbGVIUjFjbVVvS1N3Z2J5NXRaVzF2Y25rdWRHVjRkSFZ5WlhNckt5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJYWldKSFRFMTFiSFJwY0d4bFVtVnVaR1Z5VkdGeVoyVjBjeUJqWVc0Z2IyNXNlU0JpWlNCMWMyVmtJSGRwZEdnZ1YyVmlSMHd5SUc5eUlGZEZRa2RNWDJSeVlYZGZZblZtWm1WeWN5QmxlSFJsYm5OcGIyNHVJaWs3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvUXk1MWMyVlNaVzVrWlhKaWRXWm1aWElwSUdsbUlDaGhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFb3VYMTkzWldKbmJFMTFiSFJwYzJGdGNHeGxaRVp5WVcxbFluVm1abVZ5SUQwZ2N5NWpjbVZoZEdWR2NtRnRaV0oxWm1abGNpZ3BMQ0JLTGw5ZmQyVmlaMnhEYjJ4dmNsSmxibVJsY21KMVptWmxjaUE5SUhNdVkzSmxZWFJsVW1WdVpHVnlZblZtWm1WeUtDa3NJSE11WW1sdVpGSmxibVJsY21KMVptWmxjaWd6TmpFMk1Td2dTaTVmWDNkbFltZHNRMjlzYjNKU1pXNWtaWEppZFdabVpYSXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkR1V5SUQwZ2NpNWpiMjUyWlhKMEtGUXVabTl5YldGMEtTd2dVakVnUFNCeUxtTnZiblpsY25Rb1ZDNTBlWEJsS1N3Z1pXVXhJRDBnVENoVUxtbHVkR1Z5Ym1Gc1JtOXliV0YwTENCMFpUSXNJRkl4TENCVUxtVnVZMjlrYVc1bktTd2dVVEVnUFNCMVpTaERLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2N5NXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1VvTXpZeE5qRXNJRkV4TENCbFpURXNJRU11ZDJsa2RHZ3NJRU11YUdWcFoyaDBLU3dnZEM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZeE5qQXNJRW91WDE5M1pXSm5iRTExYkhScGMyRnRjR3hsWkVaeVlXMWxZblZtWm1WeUtTd2djeTVtY21GdFpXSjFabVpsY2xKbGJtUmxjbUoxWm1abGNpZ3pOakUyTUN3Z016WXdOalFzSURNMk1UWXhMQ0JLTGw5ZmQyVmlaMnhEYjJ4dmNsSmxibVJsY21KMVptWmxjaWtzSUhNdVltbHVaRkpsYm1SbGNtSjFabVpsY2lnek5qRTJNU3dnYm5Wc2JDa3NJRU11WkdWd2RHaENkV1ptWlhJZ0ppWWdLRW91WDE5M1pXSm5iRVJsY0hSb1VtVnVaR1Z5WW5WbVptVnlJRDBnY3k1amNtVmhkR1ZTWlc1a1pYSmlkV1ptWlhJb0tTd2dlV1VvU2k1ZlgzZGxZbWRzUkdWd2RHaFNaVzVrWlhKaWRXWm1aWElzSUVNc0lDRXdLU2tzSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0J1ZFd4c0tUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCWFpXSkhURTExYkhScGMyRnRjR3hsVW1WdVpHVnlWR0Z5WjJWMElHTmhiaUJ2Ym14NUlHSmxJSFZ6WldRZ2QybDBhQ0JYWldKSFRESXVJaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tISmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVZbWx1WkZSbGVIUjFjbVVvTXpRd05qY3NJQ1F1WDE5M1pXSm5iRlJsZUhSMWNtVXBMQ0JzWlNnek5EQTJOeXdnVkN3Z2RtVXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhSbE15QTlJREE3SUhSbE15QThJRFk3SUhSbE15c3JLVU5sS0VvdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeVczUmxNMTBzSUVNc0lGUXNJRE0yTURZMExDQXpOREEyT1NBcklIUmxNeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSW9WQ3dnZG1VcElDWW1JRUVvTXpRd05qY3BMQ0IwTG5WdVltbHVaRlJsZUhSMWNtVW9LVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0ZvcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUmxOQ0E5SUVNdWRHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQlNNaUE5SURBc0lHVmxNaUE5SUhSbE5DNXNaVzVuZEdnN0lGSXlJRHdnWldVeU95QlNNaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlJNaUE5SUhSbE5GdFNNbDBzSUVWbElEMGdiaTVuWlhRb1VUSXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQzVpYVc1a1ZHVjRkSFZ5WlNnek5UVXpMQ0JGWlM1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUd4bEtETTFOVE1zSUZFeUxDQjJaU2tzSUVObEtFb3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlMQ0JETENCUk1pd2dNell3TmpRZ0t5QlNNaXdnTXpVMU15a3NJR0lvVVRJc0lIWmxLU0FtSmlCQktETTFOVE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhRdWRXNWlhVzVrVkdWNGRIVnlaU2dwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwWlRVZ1BTQXpOVFV6T3dvZ0lDQWdJQ0FnSUNBZ0lDQk5aU0FtSmlBb1lTQS9JSFJsTlNBOUlGUXVhWE5FWVhSaFZHVjRkSFZ5WlRORUlEOGdNekk0TnprZ09pQXpOVGcyTmlBNklHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVSR0YwWVZSbGVIUjFjbVV6UkNCaGJtUWdWRWhTUlVVdVJHRjBZVlJsZUhSMWNtVXlSRUZ5Y21GNUlHOXViSGtnYzNWd2NHOXlkR1ZrSUhkcGRHZ2dWMlZpUjB3eUxpSXBLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTaDBaVFVzSUNRdVgxOTNaV0puYkZSbGVIUjFjbVVwTENCc1pTaDBaVFVzSUZRc0lIWmxLU3dnUTJVb1NpNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSXNJRU1zSUZRc0lETTJNRFkwTENCMFpUVXBMQ0JpS0ZRc0lIWmxLU0FtSmlCQktIUmxOU2tzSUhRdWRXNWlhVzVrVkdWNGRIVnlaU2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCRExtUmxjSFJvUW5WbVptVnlJQ1ltSUhobEtFTXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYWloREtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZRZ1BTQmZLRU1wSUh4OElHRXNJRW9nUFNCRExtbHpWMlZpUjB4TmRXeDBhWEJzWlZKbGJtUmxjbFJoY21kbGRITWdQVDA5SUNFd0lEOGdReTUwWlhoMGRYSmxJRG9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQkRMblJsZUhSMWNtVUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdKQ0E5SURBc0lISmxJRDBnU2k1c1pXNW5kR2c3SUNRZ1BDQnlaVHNnSkNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGb2dQU0JLV3lSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lpaGFMQ0JVS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRTFsSUQwZ1F5NXBjMWRsWWtkTVEzVmlaVkpsYm1SbGNsUmhjbWRsZENBL0lETTBNRFkzSURvZ016VTFNeXdnZG1VZ1BTQnVMbWRsZENoYUtTNWZYM2RsWW1kc1ZHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRdVltbHVaRlJsZUhSMWNtVW9UV1VzSUhabEtTd2dRU2hOWlNrc0lIUXVkVzVpYVc1a1ZHVjRkSFZ5WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1N5aERLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFTXVkWE5sVW1WdVpHVnlZblZtWm1WeUtTQnBaaUFvWVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRU11ZDJsa2RHZ3NJRW9nUFNCRExtaGxhV2RvZEN3Z0pDQTlJREUyTXpnMExDQnlaU0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURNMk1EWTBDaUFnSUNBZ0lDQWdJQ0FnSUYwc0lGb2dQU0JETG5OMFpXNWphV3hDZFdabVpYSWdQeUF6TXpNd05pQTZJRE0yTURrMk93b2dJQ0FnSUNBZ0lDQWdJQ0JETG1SbGNIUm9RblZtWm1WeUlDWW1JSEpsTG5CMWMyZ29XaWtzSUVNdWFXZHViM0psUkdWd2RHaEdiM0pOZFd4MGFYTmhiWEJzWlVOdmNIa2dmSHdnS0VNdVpHVndkR2hDZFdabVpYSWdKaVlnS0NRZ2ZEMGdNalUyS1N3Z1F5NXpkR1Z1WTJsc1FuVm1abVZ5SUNZbUlDZ2tJSHc5SURFd01qUXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRTFsSUQwZ2JpNW5aWFFvUXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTURBNExDQk5aUzVmWDNkbFltZHNUWFZzZEdsellXMXdiR1ZrUm5KaGJXVmlkV1ptWlhJcExDQjBMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakF3T1N3Z1RXVXVYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlLU3dnUXk1cFoyNXZjbVZFWlhCMGFFWnZjazExYkhScGMyRnRjR3hsUTI5d2VTQW1KaUFvY3k1cGJuWmhiR2xrWVhSbFJuSmhiV1ZpZFdabVpYSW9Nell3TURnc0lGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGb0tJQ0FnSUNBZ0lDQWdJQ0FnWFNrc0lITXVhVzUyWVd4cFpHRjBaVVp5WVcxbFluVm1abVZ5S0RNMk1EQTVMQ0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JhQ2lBZ0lDQWdJQ0FnSUNBZ0lGMHBLU3dnY3k1aWJHbDBSbkpoYldWaWRXWm1aWElvTUN3Z01Dd2dWQ3dnU2l3Z01Dd2dNQ3dnVkN3Z1Npd2dKQ3dnT1RjeU9Da3NJSE11YVc1MllXeHBaR0YwWlVaeVlXMWxZblZtWm1WeUtETTJNREE0TENCeVpTa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTURBNExDQnVkV3hzS1N3Z2RDNWlhVzVrUm5KaGJXVmlkV1ptWlhJb016WXdNRGtzSUUxbExsOWZkMlZpWjJ4TmRXeDBhWE5oYlhCc1pXUkdjbUZ0WldKMVptWmxjaWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWMlZpUjB4TmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkQ0JqWVc0Z2IyNXNlU0JpWlNCMWMyVmtJSGRwZEdnZ1YyVmlSMHd5TGlJcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkV1VvUXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaElDWW1JQ2hETG5WelpWSmxibVJsY21KMVptWmxjaUI4ZkNCRExuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTa2dQeUJOWVhSb0xtMXBiaWgxTENCRExuTmhiWEJzWlhNcElEb2dNRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhObEtFTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRzh1Y21WdVpHVnlMbVp5WVcxbE93b2dJQ0FnSUNBZ0lHMHVaMlYwS0VNcElDRTlQU0JVSUNZbUlDaHRMbk5sZENoRExDQlVLU3dnUXk1MWNHUmhkR1VvS1NrN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnVTJVZ1BTQWhNU3dnVkdVZ1BTQWhNVHNLSUNBZ0lHWjFibU4wYVc5dUlGQmxLRU1zSUZRcElIc0tJQ0FnSUNBZ0lDQkRJQ1ltSUVNdWFYTlhaV0pIVEZKbGJtUmxjbFJoY21kbGRDQW1KaUFvVTJVZ1BUMDlJQ0V4SUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVZHVjRkSFZ5WlhNdWMyRm1aVk5sZEZSbGVIUjFjbVV5UkRvZ1pHOXVKM1FnZFhObElISmxibVJsY2lCMFlYSm5aWFJ6SUdGeklIUmxlSFIxY21WekxpQlZjMlVnZEdobGFYSWdMblJsZUhSMWNtVWdjSEp2Y0dWeWRIa2dhVzV6ZEdWaFpDNGlLU3dnVTJVZ1BTQWhNQ2tzSUVNZ1BTQkRMblJsZUhSMWNtVXBMQ0JQS0VNc0lGUXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnV1dVb1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUVNZ0ppWWdReTVwYzFkbFlrZE1RM1ZpWlZKbGJtUmxjbFJoY21kbGRDQW1KaUFvVkdVZ1BUMDlJQ0V4SUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVZHVjRkSFZ5WlhNdWMyRm1aVk5sZEZSbGVIUjFjbVZEZFdKbE9pQmtiMjRuZENCMWMyVWdZM1ZpWlNCeVpXNWtaWElnZEdGeVoyVjBjeUJoY3lCMFpYaDBkWEpsY3k0Z1ZYTmxJSFJvWldseUlDNTBaWGgwZFhKbElIQnliM0JsY25SNUlHbHVjM1JsWVdRdUlpa3NJRlJsSUQwZ0lUQXBMQ0JESUQwZ1F5NTBaWGgwZFhKbEtTd2dWaWhETENCVUtUc0tJQ0FnSUgwS0lDQWdJSFJvYVhNdVlXeHNiMk5oZEdWVVpYaDBkWEpsVlc1cGRDQTlJRVlzSUhSb2FYTXVjbVZ6WlhSVVpYaDBkWEpsVlc1cGRITWdQU0JWTENCMGFHbHpMbk5sZEZSbGVIUjFjbVV5UkNBOUlFOHNJSFJvYVhNdWMyVjBWR1Y0ZEhWeVpUSkVRWEp5WVhrZ1BTQnVaU3dnZEdocGN5NXpaWFJVWlhoMGRYSmxNMFFnUFNCalpTd2dkR2hwY3k1elpYUlVaWGgwZFhKbFEzVmlaU0E5SUZZc0lIUm9hWE11Y21WaWFXNWtWR1Y0ZEhWeVpYTWdQU0JQWlN3Z2RHaHBjeTV6WlhSMWNGSmxibVJsY2xSaGNtZGxkQ0E5SUVjc0lIUm9hWE11ZFhCa1lYUmxVbVZ1WkdWeVZHRnlaMlYwVFdsd2JXRndJRDBnYWl3Z2RHaHBjeTUxY0dSaGRHVk5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENBOUlFc3NJSFJvYVhNdWMyVjBkWEJFWlhCMGFGSmxibVJsY21KMVptWmxjaUE5SUhobExDQjBhR2x6TG5ObGRIVndSbkpoYldWQ2RXWm1aWEpVWlhoMGRYSmxJRDBnUTJVc0lIUm9hWE11YzJGbVpWTmxkRlJsZUhSMWNtVXlSQ0E5SUZCbExDQjBhR2x6TG5OaFptVlRaWFJVWlhoMGRYSmxRM1ZpWlNBOUlGbGxPd3A5Q21aMWJtTjBhVzl1SUVWNEtITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnZEM1cGMxZGxZa2RNTWpzS0lDQWdJR1oxYm1OMGFXOXVJR2tvY2lrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J2T3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCeWJpa2djbVYwZFhKdUlEVXhNakU3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZaMUtTQnlaWFIxY200Z016STRNVGs3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZkMUtTQnlaWFIxY200Z016STRNakE3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUhGMUtTQnlaWFIxY200Z016TTJNelU3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUVoMUtTQnlaWFIxY200Z05URXlNRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnYTNVcElISmxkSFZ5YmlBMU1USXlPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JqY2lrZ2NtVjBkWEp1SURVeE1qTTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRWQxS1NCeVpYUjFjbTRnTlRFeU5Ec0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdVSE1wSUhKbGRIVnliaUExTVRJMU93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQnViaWtnY21WMGRYSnVJRFV4TWpZN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHdHVLU0J5WlhSMWNtNGdiaUEvSURVeE16RWdPaUFvYnlBOUlHVXVaMlYwS0NKUFJWTmZkR1Y0ZEhWeVpWOW9ZV3htWDJac2IyRjBJaWtzSUc4Z0lUMDlJRzUxYkd3Z1B5QnZMa2hCVEVaZlJreFBRVlJmVDBWVElEb2diblZzYkNrN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlGaDFLU0J5WlhSMWNtNGdOalF3TmpzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1IyNHBJSEpsZEhWeWJpQTJOREEzT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCamRDa2djbVYwZFhKdUlEWTBNRGc3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUVwMUtTQnlaWFIxY200Z05qUXdPVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnV1hVcElISmxkSFZ5YmlBMk5ERXdPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0JXYmlrZ2NtVjBkWEp1SURZME1ESTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRXhwS1NCeVpYUjFjbTRnTXpRd05ERTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRnAxS1NCeVpYUjFjbTRnTmpRd016c0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdKSFVwSUhKbGRIVnliaUF6TmpJME5Ec0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdhblVwSUhKbGRIVnliaUF6TXpNeE9Uc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdVWFVwSUhKbGRIVnliaUF6TXpNeU1Ec0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdTM1VwSUhKbGRIVnliaUF6TmpJME9Ec0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdaV1FwSUhKbGRIVnliaUF6TmpJME9Uc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdZV3dnZkh3Z2NpQTlQVDBnYkd3Z2ZId2djaUE5UFQwZ1kyd2dmSHdnY2lBOVBUMGdhR3dwSUdsbUlDaHZJRDBnWlM1blpYUW9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXpNM1JqSWlrc0lHOGdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHRnNLU0J5WlhSMWNtNGdieTVEVDAxUVVrVlRVMFZFWDFKSFFsOVRNMVJEWDBSWVZERmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdiR3dwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlUTTFSRFgwUllWREZmUlZoVU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWTJ3cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5VE0xUkRYMFJZVkROZlJWaFVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2FHd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOVRNMVJEWDBSWVZEVmZSVmhVT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2RXd2dmSHdnY2lBOVBUMGdaR3dnZkh3Z2NpQTlQVDBnWm13Z2ZId2djaUE5UFQwZ2NHd3BJR2xtSUNodklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5d2RuSjBZeUlwTENCdklDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCMWJDa2djbVYwZFhKdUlHOHVRMDlOVUZKRlUxTkZSRjlTUjBKZlVGWlNWRU5mTkVKUVVGWXhYMGxOUnpzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJR1JzS1NCeVpYUjFjbTRnYnk1RFQwMVFVa1ZUVTBWRVgxSkhRbDlRVmxKVVExOHlRbEJRVmpGZlNVMUhPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1ptd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOVFWbEpVUTE4MFFsQlFWakZmU1UxSE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnY0d3cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5UVZsSlVRMTh5UWxCUVZqRmZTVTFIT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2RHUXBJSEpsZEhWeWJpQnZJRDBnWlM1blpYUW9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOWxkR014SWlrc0lHOGdJVDA5SUc1MWJHd2dQeUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENYMFZVUXpGZlYwVkNSMHdnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR2xtSUNnb2NpQTlQVDBnYld3Z2ZId2djaUE5UFQwZ1oyd3BJQ1ltSUNodklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5bGRHTWlLU3dnYnlBaFBUMGdiblZzYkNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUcxc0tTQnlaWFIxY200Z2J5NURUMDFRVWtWVFUwVkVYMUpIUWpoZlJWUkRNanNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHZHNLU0J5WlhSMWNtNGdieTVEVDAxUVVrVlRVMFZFWDFKSFFrRTRYMFZVUXpKZlJVRkRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnYm1RZ2ZId2djaUE5UFQwZ2FXUWdmSHdnY2lBOVBUMGdjbVFnZkh3Z2NpQTlQVDBnYzJRZ2ZId2djaUE5UFQwZ2IyUWdmSHdnY2lBOVBUMGdZV1FnZkh3Z2NpQTlQVDBnYkdRZ2ZId2djaUE5UFQwZ1kyUWdmSHdnY2lBOVBUMGdhR1FnZkh3Z2NpQTlQVDBnZFdRZ2ZId2djaUE5UFQwZ1pHUWdmSHdnY2lBOVBUMGdabVFnZkh3Z2NpQTlQVDBnY0dRZ2ZId2djaUE5UFQwZ2JXUWdmSHdnY2lBOVBUMGdlR1FnZkh3Z2NpQTlQVDBnZVdRZ2ZId2djaUE5UFQwZ2RtUWdmSHdnY2lBOVBUMGdYMlFnZkh3Z2NpQTlQVDBnVFdRZ2ZId2djaUE5UFQwZ1ltUWdmSHdnY2lBOVBUMGdkMlFnZkh3Z2NpQTlQVDBnVTJRZ2ZId2djaUE5UFQwZ1ZHUWdmSHdnY2lBOVBUMGdSV1FnZkh3Z2NpQTlQVDBnUVdRZ2ZId2djaUE5UFQwZ1EyUWdmSHdnY2lBOVBUMGdUR1FnZkh3Z2NpQTlQVDBnVW1RcElISmxkSFZ5YmlCdklEMGdaUzVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5aGMzUmpJaWtzSUc4Z0lUMDlJRzUxYkd3Z1B5QnlJRG9nYm5Wc2JEc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdaMlFwSUhKbGRIVnliaUJ2SUQwZ1pTNW5aWFFvSWtWWVZGOTBaWGgwZFhKbFgyTnZiWEJ5WlhOemFXOXVYMkp3ZEdNaUtTd2dieUFoUFQwZ2JuVnNiQ0EvSUhJZ09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCVWFTa2djbVYwZFhKdUlHNGdQeUF6TkRBME1pQTZJQ2h2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMlJsY0hSb1gzUmxlSFIxY21VaUtTd2dieUFoUFQwZ2JuVnNiQ0EvSUc4dVZVNVRTVWRPUlVSZlNVNVVYekkwWHpoZlYwVkNSMHdnT2lCdWRXeHNLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWTI5dWRtVnlkRG9nYVFvZ0lDQWdmVHNLZlFwMllYSWdaMkVnUFNCamJHRnpjeUJsZUhSbGJtUnpJSFYwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJYU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxtTmhiV1Z5WVhNZ1BTQmxPd29nSUNBZ2ZRcDlPd3BuWVM1d2NtOTBiM1I1Y0dVdWFYTkJjbkpoZVVOaGJXVnlZU0E5SUNFd093cDJZWElnU0c0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUjNKdmRYQWlPd29nSUNBZ2ZRcDlPd3BJYmk1d2NtOTBiM1I1Y0dVdWFYTkhjbTkxY0NBOUlDRXdPd3AyWVhJZ1FYZ2dQU0I3Q2lBZ0lDQjBlWEJsT2lBaWJXOTJaU0lLZlN3Z1NYTWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSFJvYVhNdVgzUmhjbWRsZEZKaGVTQTlJRzUxYkd3c0lIUm9hWE11WDJkeWFYQWdQU0J1ZFd4c0xDQjBhR2x6TGw5b1lXNWtJRDBnYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJR2RsZEVoaGJtUlRjR0ZqWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYUdGdVpDQTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZhR0Z1WkNBOUlHNWxkeUJJYml3Z2RHaHBjeTVmYUdGdVpDNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVYMmhoYm1RdWRtbHphV0pzWlNBOUlDRXhMQ0IwYUdsekxsOW9ZVzVrTG1wdmFXNTBjeUE5SUh0OUxDQjBhR2x6TGw5b1lXNWtMbWx1Y0hWMFUzUmhkR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJwYm1Ob2FXNW5PaUFoTVFvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TGw5b1lXNWtPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZHRnlaMlYwVW1GNVUzQmhZMlVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM1JoY21kbGRGSmhlU0E5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmZEdGeVoyVjBVbUY1SUQwZ2JtVjNJRWh1TENCMGFHbHpMbDkwWVhKblpYUlNZWGt1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TGw5MFlYSm5aWFJTWVhrdWRtbHphV0pzWlNBOUlDRXhMQ0IwYUdsekxsOTBZWEpuWlhSU1lYa3VhR0Z6VEdsdVpXRnlWbVZzYjJOcGRIa2dQU0FoTVN3Z2RHaHBjeTVmZEdGeVoyVjBVbUY1TG14cGJtVmhjbFpsYkc5amFYUjVJRDBnYm1WM0lFMHNJSFJvYVhNdVgzUmhjbWRsZEZKaGVTNW9ZWE5CYm1kMWJHRnlWbVZzYjJOcGRIa2dQU0FoTVN3Z2RHaHBjeTVmZEdGeVoyVjBVbUY1TG1GdVozVnNZWEpXWld4dlkybDBlU0E5SUc1bGR5Qk5LU3dnZEdocGN5NWZkR0Z5WjJWMFVtRjVPd29nSUNBZ2ZRb2dJQ0FnWjJWMFIzSnBjRk53WVdObEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bmNtbHdJRDA5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDluY21sd0lEMGdibVYzSUVodUxDQjBhR2x6TGw5bmNtbHdMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVmWjNKcGNDNTJhWE5wWW14bElEMGdJVEVzSUhSb2FYTXVYMmR5YVhBdWFHRnpUR2x1WldGeVZtVnNiMk5wZEhrZ1BTQWhNU3dnZEdocGN5NWZaM0pwY0M1c2FXNWxZWEpXWld4dlkybDBlU0E5SUc1bGR5Qk5MQ0IwYUdsekxsOW5jbWx3TG1oaGMwRnVaM1ZzWVhKV1pXeHZZMmwwZVNBOUlDRXhMQ0IwYUdsekxsOW5jbWx3TG1GdVozVnNZWEpXWld4dlkybDBlU0E5SUc1bGR5Qk5LU3dnZEdocGN5NWZaM0pwY0RzS0lDQWdJSDBLSUNBZ0lHUnBjM0JoZEdOb1JYWmxiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkwWVhKblpYUlNZWGtnSVQwOUlHNTFiR3dnSmlZZ2RHaHBjeTVmZEdGeVoyVjBVbUY1TG1ScGMzQmhkR05vUlhabGJuUW9aU2tzSUhSb2FYTXVYMmR5YVhBZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1ZlozSnBjQzVrYVhOd1lYUmphRVYyWlc1MEtHVXBMQ0IwYUdsekxsOW9ZVzVrSUNFOVBTQnVkV3hzSUNZbUlIUm9hWE11WDJoaGJtUXVaR2x6Y0dGMFkyaEZkbVZ1ZENobEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjMk52Ym01bFkzUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVpHbHpZMjl1Ym1WamRHVmtJaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nWlFvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TGw5MFlYSm5aWFJTWVhrZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgzUmhjbWRsZEZKaGVTNTJhWE5wWW14bElEMGdJVEVwTENCMGFHbHpMbDluY21sd0lDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxsOW5jbWx3TG5acGMybGliR1VnUFNBaE1Ta3NJSFJvYVhNdVgyaGhibVFnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDJoaGJtUXVkbWx6YVdKc1pTQTlJQ0V4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1ZFd4c0xDQnlJRDBnYm5Wc2JDd2dieUE5SUc1MWJHd3NJR0VnUFNCMGFHbHpMbDkwWVhKblpYUlNZWGtzSUd3Z1BTQjBhR2x6TGw5bmNtbHdMQ0JqSUQwZ2RHaHBjeTVmYUdGdVpEc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBbUppQjBMbk5sYzNOcGIyNHVkbWx6YVdKcGJHbDBlVk4wWVhSbElDRTlQU0FpZG1semFXSnNaUzFpYkhWeWNtVmtJaWtnYVdZZ0tHRWdJVDA5SUc1MWJHd2dKaVlnS0drZ1BTQjBMbWRsZEZCdmMyVW9aUzUwWVhKblpYUlNZWGxUY0dGalpTd2diaWtzSUdrZ0lUMDlJRzUxYkd3Z0ppWWdLR0V1YldGMGNtbDRMbVp5YjIxQmNuSmhlU2hwTG5SeVlXNXpabTl5YlM1dFlYUnlhWGdwTENCaExtMWhkSEpwZUM1a1pXTnZiWEJ2YzJVb1lTNXdiM05wZEdsdmJpd2dZUzV5YjNSaGRHbHZiaXdnWVM1elkyRnNaU2tzSUdrdWJHbHVaV0Z5Vm1Wc2IyTnBkSGtnUHlBb1lTNW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V3TENCaExteHBibVZoY2xabGJHOWphWFI1TG1OdmNIa29hUzVzYVc1bFlYSldaV3h2WTJsMGVTa3BJRG9nWVM1b1lYTk1hVzVsWVhKV1pXeHZZMmwwZVNBOUlDRXhMQ0JwTG1GdVozVnNZWEpXWld4dlkybDBlU0EvSUNoaExtaGhjMEZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJQ0V3TENCaExtRnVaM1ZzWVhKV1pXeHZZMmwwZVM1amIzQjVLR2t1WVc1bmRXeGhjbFpsYkc5amFYUjVLU2tnT2lCaExtaGhjMEZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJQ0V4TENCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb1FYZ3BLU2tzSUdNZ0ppWWdaUzVvWVc1a0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2VDQnZaaUJsTG1oaGJtUXVkbUZzZFdWektDa3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQjBMbWRsZEVwdmFXNTBVRzl6WlNoNExDQnVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoakxtcHZhVzUwYzF0NExtcHZhVzUwVG1GdFpWMGdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2JtVjNJRWh1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCd0xuWnBjMmxpYkdVZ1BTQWhNU3dnWXk1cWIybHVkSE5iZUM1cWIybHVkRTVoYldWZElEMGdjQ3dnWXk1aFpHUW9jQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJR011YW05cGJuUnpXM2d1YW05cGJuUk9ZVzFsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZZ0lUMDlJRzUxYkd3Z0ppWWdLR2N1YldGMGNtbDRMbVp5YjIxQmNuSmhlU2gyTG5SeVlXNXpabTl5YlM1dFlYUnlhWGdwTENCbkxtMWhkSEpwZUM1a1pXTnZiWEJ2YzJVb1p5NXdiM05wZEdsdmJpd2daeTV5YjNSaGRHbHZiaXdnWnk1elkyRnNaU2tzSUdjdWFtOXBiblJTWVdScGRYTWdQU0IyTG5KaFpHbDFjeWtzSUdjdWRtbHphV0pzWlNBOUlIWWdJVDA5SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmpMbXB2YVc1MGMxc2lhVzVrWlhndFptbHVaMlZ5TFhScGNDSmRMQ0IxSUQwZ1l5NXFiMmx1ZEhOYkluUm9kVzFpTFhScGNDSmRMQ0JrSUQwZ2FDNXdiM05wZEdsdmJpNWthWE4wWVc1alpWUnZLSFV1Y0c5emFYUnBiMjRwTENCbUlEMGdMakF5TENCdElEMGdMakF3TlRzS0lDQWdJQ0FnSUNBZ0lDQWdZeTVwYm5CMWRGTjBZWFJsTG5CcGJtTm9hVzVuSUNZbUlHUWdQaUJtSUNzZ2JTQS9JQ2hqTG1sdWNIVjBVM1JoZEdVdWNHbHVZMmhwYm1jZ1BTQWhNU3dnZEdocGN5NWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0p3YVc1amFHVnVaQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVc1a1pXUnVaWE56T2lCbExtaGhibVJsWkc1bGMzTXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBZWEpuWlhRNklIUm9hWE1LSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3BJRG9nSVdNdWFXNXdkWFJUZEdGMFpTNXdhVzVqYUdsdVp5QW1KaUJrSUR3OUlHWWdMU0J0SUNZbUlDaGpMbWx1Y0hWMFUzUmhkR1V1Y0dsdVkyaHBibWNnUFNBaE1Dd2dkR2hwY3k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSndhVzVqYUhOMFlYSjBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2hoYm1SbFpHNWxjM002SUdVdWFHRnVaR1ZrYm1WemN5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZERvZ2RHaHBjd29nSUNBZ0lDQWdJQ0FnSUNCOUtTazdDaUFnSUNBZ0lDQWdmU0JsYkhObElHd2dJVDA5SUc1MWJHd2dKaVlnWlM1bmNtbHdVM0JoWTJVZ0ppWWdLSElnUFNCMExtZGxkRkJ2YzJVb1pTNW5jbWx3VTNCaFkyVXNJRzRwTENCeUlDRTlQU0J1ZFd4c0lDWW1JQ2hzTG0xaGRISnBlQzVtY205dFFYSnlZWGtvY2k1MGNtRnVjMlp2Y20wdWJXRjBjbWw0S1N3Z2JDNXRZWFJ5YVhndVpHVmpiMjF3YjNObEtHd3VjRzl6YVhScGIyNHNJR3d1Y205MFlYUnBiMjRzSUd3dWMyTmhiR1VwTENCeUxteHBibVZoY2xabGJHOWphWFI1SUQ4Z0tHd3VhR0Z6VEdsdVpXRnlWbVZzYjJOcGRIa2dQU0FoTUN3Z2JDNXNhVzVsWVhKV1pXeHZZMmwwZVM1amIzQjVLSEl1YkdsdVpXRnlWbVZzYjJOcGRIa3BLU0E2SUd3dWFHRnpUR2x1WldGeVZtVnNiMk5wZEhrZ1BTQWhNU3dnY2k1aGJtZDFiR0Z5Vm1Wc2IyTnBkSGtnUHlBb2JDNW9ZWE5CYm1kMWJHRnlWbVZzYjJOcGRIa2dQU0FoTUN3Z2JDNWhibWQxYkdGeVZtVnNiMk5wZEhrdVkyOXdlU2h5TG1GdVozVnNZWEpXWld4dlkybDBlU2twSURvZ2JDNW9ZWE5CYm1kMWJHRnlWbVZzYjJOcGRIa2dQU0FoTVNrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaElDRTlQU0J1ZFd4c0lDWW1JQ2hoTG5acGMybGliR1VnUFNCcElDRTlQU0J1ZFd4c0tTd2diQ0FoUFQwZ2JuVnNiQ0FtSmlBb2JDNTJhWE5wWW14bElEMGdjaUFoUFQwZ2JuVnNiQ2tzSUdNZ0lUMDlJRzUxYkd3Z0ppWWdLR011ZG1semFXSnNaU0E5SUc4Z0lUMDlJRzUxYkd3cExDQjBhR2x6T3dvZ0lDQWdmUXA5TENCcmN5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ2IzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5d2dhQ2w3Q2lBZ0lDQWdJQ0FnYVdZZ0tHZ2dQU0JvSUNFOVBTQjJiMmxrSURBZ1B5Qm9JRG9nVm00c0lHZ2dJVDA5SUZadUlDWW1JR2dnSVQwOUlFeHBLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9Ja1JsY0hSb1ZHVjRkSFZ5WlNCbWIzSnRZWFFnYlhWemRDQmlaU0JsYVhSb1pYSWdWRWhTUlVVdVJHVndkR2hHYjNKdFlYUWdiM0lnVkVoU1JVVXVSR1Z3ZEdoVGRHVnVZMmxzUm05eWJXRjBJaWs3Q2lBZ0lDQWdJQ0FnYmlBOVBUMGdkbTlwWkNBd0lDWW1JR2dnUFQwOUlGWnVJQ1ltSUNodUlEMGdZM0lwTENCdUlEMDlQU0IyYjJsa0lEQWdKaVlnYUNBOVBUMGdUR2tnSmlZZ0tHNGdQU0JVYVNrN0NpQWdJQ0FnSUNBZ2MzVndaWElvYm5Wc2JDd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z2FDd2diaXdnWXlrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwYldGblpTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkQW9nSUNBZ0lDQWdJSDBzSUhSb2FYTXViV0ZuUm1sc2RHVnlJRDBnWVNBaFBUMGdkbTlwWkNBd0lEOGdZU0E2SUhKMExDQjBhR2x6TG0xcGJrWnBiSFJsY2lBOUlHd2dJVDA5SUhadmFXUWdNQ0EvSUd3Z09pQnlkQ3dnZEdocGN5NW1iR2x3V1NBOUlDRXhMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhPd29nSUNBZ2ZRcDlPd3ByY3k1d2NtOTBiM1I1Y0dVdWFYTkVaWEIwYUZSbGVIUjFjbVVnUFNBaE1Ec0tkbUZ5SUhab0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5d2dhU0E5SUc1MWJHd3NJSElnUFNBeExDQnZJRDBnYm5Wc2JDd2dZU0E5SUNKc2IyTmhiQzFtYkc5dmNpSXNJR3dnUFNCbExtVjRkR1Z1YzJsdmJuTXVhR0Z6S0NKWFJVSkhURjl0ZFd4MGFYTmhiWEJzWldSZmNtVnVaR1Z5WDNSdlgzUmxlSFIxY21VaUtTd2dZeUE5SUc1MWJHd3NJR2dnUFNCdWRXeHNMQ0IxSUQwZ2JuVnNiQ3dnWkNBOUlHNTFiR3dzSUdZZ1BTQWhNU3dnYlNBOUlHNTFiR3dzSUhnZ1BTQjBMbWRsZEVOdmJuUmxlSFJCZEhSeWFXSjFkR1Z6S0Nrc0lIWWdQU0J1ZFd4c0xDQm5JRDBnYm5Wc2JDd2djQ0E5SUZ0ZExDQmZJRDBnYm1WM0lFMWhjQ3dnZVNBOUlHNWxkeUIxZERzS0lDQWdJQ0FnSUNCNUxteGhlV1Z5Y3k1bGJtRmliR1VvTVNrc0lIa3VkbWxsZDNCdmNuUWdQU0J1WlhjZ1ZtVTdDaUFnSUNBZ0lDQWdiR1YwSUdJZ1BTQnVaWGNnZFhRN0NpQWdJQ0FnSUNBZ1lpNXNZWGxsY25NdVpXNWhZbXhsS0RJcExDQmlMblpwWlhkd2IzSjBJRDBnYm1WM0lGWmxPd29nSUNBZ0lDQWdJR3hsZENCQklEMGdXd29nSUNBZ0lDQWdJQ0FnSUNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0JpQ2lBZ0lDQWdJQ0FnWFN3Z1RDQTlJRzVsZHlCbllUc0tJQ0FnSUNBZ0lDQk1MbXhoZVdWeWN5NWxibUZpYkdVb01Ta3NJRXd1YkdGNVpYSnpMbVZ1WVdKc1pTZ3lLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1NTQTlJRzUxYkd3c0lHc2dQU0J1ZFd4c093b2dJQ0FnSUNBZ0lIUm9hWE11WTJGdFpYSmhRWFYwYjFWd1pHRjBaU0E5SUNFd0xDQjBhR2x6TG1WdVlXSnNaV1FnUFNBaE1Td2dkR2hwY3k1cGMxQnlaWE5sYm5ScGJtY2dQU0FoTVN3Z2RHaHBjeTVuWlhSRGIyNTBjbTlzYkdWeUlEMGdablZ1WTNScGIyNG9WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnlBOUlIQmJWbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCWElEMDlQU0IyYjJsa0lEQWdKaVlnS0ZjZ1BTQnVaWGNnU1hNc0lIQmJWbDBnUFNCWEtTd2dWeTVuWlhSVVlYSm5aWFJTWVhsVGNHRmpaU2dwT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFEyOXVkSEp2Ykd4bGNrZHlhWEFnUFNCbWRXNWpkR2x2YmloV0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlhJRDBnY0Z0V1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRmNnUFQwOUlIWnZhV1FnTUNBbUppQW9WeUE5SUc1bGR5QkpjeXdnY0Z0V1hTQTlJRmNwTENCWExtZGxkRWR5YVhCVGNHRmpaU2dwT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFNHRnVaQ0E5SUdaMWJtTjBhVzl1S0ZZcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGY2dQU0J3VzFaZE93b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdWeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaFhJRDBnYm1WM0lFbHpMQ0J3VzFaZElEMGdWeWtzSUZjdVoyVjBTR0Z1WkZOd1lXTmxLQ2s3Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCQ0tGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCZkxtZGxkQ2hXTG1sdWNIVjBVMjkxY21ObEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnVnlBbUppQlhMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nVmk1MGVYQmxMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ1ZpNXBibkIxZEZOdmRYSmpaUW9nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdVQ2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdYeTVtYjNKRllXTm9LR1oxYm1OMGFXOXVLRllzSUZjcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGWXVaR2x6WTI5dWJtVmpkQ2hYS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUY4dVkyeGxZWElvS1N3Z1NTQTlJRzUxYkd3c0lHc2dQU0J1ZFd4c0xDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaDJLU3dnWkNBOUlHNTFiR3dzSUhVZ1BTQnVkV3hzTENCb0lEMGdiblZzYkN3Z2FTQTlJRzUxYkd3c0lHY2dQU0J1ZFd4c0xDQmpaUzV6ZEc5d0tDa3NJRzR1YVhOUWNtVnpaVzUwYVc1bklEMGdJVEVzSUc0dVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWljMlZ6YzJsdmJtVnVaQ0lLSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdWMyVjBSbkpoYldWaWRXWm1aWEpUWTJGc1pVWmhZM1J2Y2lBOUlHWjFibU4wYVc5dUtGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlJRllzSUc0dWFYTlFjbVZ6Wlc1MGFXNW5JRDA5UFNBaE1DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlsaFNUV0Z1WVdkbGNqb2dRMkZ1Ym05MElHTm9ZVzVuWlNCbWNtRnRaV0oxWm1abGNpQnpZMkZzWlNCM2FHbHNaU0J3Y21WelpXNTBhVzVuTGlJcE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWMyVjBVbVZtWlhKbGJtTmxVM0JoWTJWVWVYQmxJRDBnWm5WdVkzUnBiMjRvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ1Zpd2diaTVwYzFCeVpYTmxiblJwYm1jZ1BUMDlJQ0V3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpV0ZKTllXNWhaMlZ5T2lCRFlXNXViM1FnWTJoaGJtZGxJSEpsWm1WeVpXNWpaU0J6Y0dGalpTQjBlWEJsSUhkb2FXeGxJSEJ5WlhObGJuUnBibWN1SWlrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUlNaV1psY21WdVkyVlRjR0ZqWlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYnpzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1kbGRFSmhjMlZNWVhsbGNpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RTQWhQVDBnYm5Wc2JDQS9JSFVnT2lCa093b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBRbWx1WkdsdVp5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FEc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRVp5WVcxbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBVMlZ6YzJsdmJpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FUc0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuTmxkRk5sYzNOcGIyNGdQU0JoYzNsdVl5Qm1kVzVqZEdsdmJpaFdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwZ1Zpd2dhU0FoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIWWdQU0JsTG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTmxiR1ZqZENJc0lFSXBMQ0JwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5ObGJHVmpkSE4wWVhKMElpd2dRaWtzSUdrdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMyVnNaV04wWlc1a0lpd2dRaWtzSUdrdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMzRjFaV1Y2WlNJc0lFSXBMQ0JwTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5OeGRXVmxlbVZ6ZEdGeWRDSXNJRUlwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTnhkV1ZsZW1WbGJtUWlMQ0JDS1N3Z2FTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSmxibVFpTENCUUtTd2dhUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pwYm5CMWRITnZkWEpqWlhOamFHRnVaMlVpTENCM0tTd2dlQzU0Y2tOdmJYQmhkR2xpYkdVZ0lUMDlJQ0V3SUNZbUlHRjNZV2wwSUhRdWJXRnJaVmhTUTI5dGNHRjBhV0pzWlNncExDQnBMbkpsYm1SbGNsTjBZWFJsTG14aGVXVnljeUE5UFQwZ2RtOXBaQ0F3SUh4OElHVXVZMkZ3WVdKcGJHbDBhV1Z6TG1selYyVmlSMHd5SUQwOVBTQWhNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJuUnBZV3hwWVhNNklHa3VjbVZ1WkdWeVUzUmhkR1V1YkdGNVpYSnpJRDA5UFNCMmIybGtJREFnUHlCNExtRnVkR2xoYkdsaGN5QTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoYkhCb1lUb2dlQzVoYkhCb1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2c2SUhndVpHVndkR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWlc1amFXdzZJSGd1YzNSbGJtTnBiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabkpoYldWaWRXWm1aWEpUWTJGc1pVWmhZM1J2Y2pvZ2Nnb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pDQTlJRzVsZHlCWVVsZGxZa2RNVEdGNVpYSW9hU3dnZEN3Z1Z5a3NJR2t1ZFhCa1lYUmxVbVZ1WkdWeVUzUmhkR1VvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpWVhObFRHRjVaWEk2SUdRS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLU3dnWnlBOUlHNWxkeUJCZENoa0xtWnlZVzFsWW5WbVptVnlWMmxrZEdnc0lHUXVabkpoYldWaWRXWm1aWEpJWldsbmFIUXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5YldGME9pQmpkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2NtNHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVZMjlrYVc1bk9pQmxMbTkxZEhCMWRFVnVZMjlrYVc1bkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdZZ1BTQjRMbUZ1ZEdsaGJHbGhjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWekVnUFNCdWRXeHNMQ0JvWlNBOUlHNTFiR3dzSUd4bElEMGdiblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRMbVJsY0hSb0lDWW1JQ2hzWlNBOUlIZ3VjM1JsYm1OcGJDQS9JRE0xTURVMklEb2dNek14T1RBc0lGY3hJRDBnZUM1emRHVnVZMmxzSUQ4Z1RHa2dPaUJXYml3Z2FHVWdQU0I0TG5OMFpXNWphV3dnUHlCVWFTQTZJR055S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWm1VZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5Um05eWJXRjBPaUI0TG1Gc2NHaGhJSHg4SUdZZ1B5QXpNamcxTmlBNklETXlPRFE1TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWlhCMGFFWnZjbTFoZERvZ2JHVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITmpZV3hsUm1GamRHOXlPaUJ5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvSUQwZ2JtVjNJRmhTVjJWaVIweENhVzVrYVc1bktHa3NJSFFwTENCMUlEMGdhQzVqY21WaGRHVlFjbTlxWldOMGFXOXVUR0Y1WlhJb1ptVXBMQ0JwTG5Wd1pHRjBaVkpsYm1SbGNsTjBZWFJsS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdGNVpYSnpPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUYwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLU3dnWmlBL0lHY2dQU0J1WlhjZ1dITW9kUzUwWlhoMGRYSmxWMmxrZEdnc0lIVXVkR1Y0ZEhWeVpVaGxhV2RvZEN3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFE2SUdOMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJ5Yml3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFVaWGgwZFhKbE9pQnVaWGNnYTNNb2RTNTBaWGgwZFhKbFYybGtkR2dzSUhVdWRHVjRkSFZ5WlVobGFXZG9kQ3dnYUdVc0lIWnZhV1FnTUN3Z2RtOXBaQ0F3TENCMmIybGtJREFzSUhadmFXUWdNQ3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJRmN4S1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSbGJtTnBiRUoxWm1abGNqb2dlQzV6ZEdWdVkybHNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaMjV2Y21WRVpYQjBhRG9nZFM1cFoyNXZjbVZFWlhCMGFGWmhiSFZsY3l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsT2lCc0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJtTnZaR2x1WnpvZ1pTNXZkWFJ3ZFhSRmJtTnZaR2x1WndvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBJRG9nWnlBOUlHNWxkeUJCZENoMUxuUmxlSFIxY21WWGFXUjBhQ3dnZFM1MFpYaDBkWEpsU0dWcFoyaDBMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2dlQzVoYkhCb1lTQS9JR04wSURvZ1IyNHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhKdUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRlJsZUhSMWNtVTZJRzVsZHlCcmN5aDFMblJsZUhSMWNtVlhhV1IwYUN3Z2RTNTBaWGgwZFhKbFNHVnBaMmgwTENCb1pTd2dkbTlwWkNBd0xDQjJiMmxrSURBc0lIWnZhV1FnTUN3Z2RtOXBaQ0F3TENCMmIybGtJREFzSUhadmFXUWdNQ3dnVnpFcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHVnVZMmxzUW5WbVptVnlPaUI0TG5OMFpXNWphV3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xuYm05eVpVUmxjSFJvT2lCMUxtbG5ibTl5WlVSbGNIUm9WbUZzZFdWekxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJtTnZaR2x1WnpvZ1pTNXZkWFJ3ZFhSRmJtTnZaR2x1WndvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1elpYUkdiM1psWVhScGIyNG9NU2tzSUc4Z1BTQmhkMkZwZENCcExuSmxjWFZsYzNSU1pXWmxjbVZ1WTJWVGNHRmpaU2hoS1N3Z1kyVXVjMlYwUTI5dWRHVjRkQ2hwS1N3Z1kyVXVjM1JoY25Rb0tTd2diaTVwYzFCeVpYTmxiblJwYm1jZ1BTQWhNQ3dnYmk1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpYzJWemMybHZibk4wWVhKMElnb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIY29WaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnlBOUlHa3VhVzV3ZFhSVGIzVnlZMlZ6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHaGxJRDBnTURzZ2FHVWdQQ0J3TG14bGJtZDBhRHNnYUdVckt5bGZMbk5sZENoWFcyaGxYU3dnY0Z0b1pWMHBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdobE1TQTlJREE3SUdobE1TQThJRll1Y21WdGIzWmxaQzVzWlc1bmRHZzdJR2hsTVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlNBOUlGWXVjbVZ0YjNabFpGdG9aVEZkTENCbVpTQTlJRjh1WjJWMEtHeGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1psSUNZbUlDaG1aUzVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6WTI5dWJtVmpkR1ZrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoT2lCc1pRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTa3NJRjh1WkdWc1pYUmxLR3hsS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb1pUSWdQU0F3T3lCb1pUSWdQQ0JXTG1Ga1pHVmtMbXhsYm1kMGFEc2dhR1V5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3hsTVNBOUlGWXVZV1JrWldSYmFHVXlYU3dnWm1VeElEMGdYeTVuWlhRb2JHVXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1psTVNBbUppQm1aVEV1WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbU52Ym01bFkzUmxaQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nYkdVeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUc1bGR5Qk5MQ0JFSUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnVlNoV0xDQlhMQ0JvWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JGTG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaFhMbTFoZEhKcGVGZHZjbXhrS1N3Z1JDNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvYUdVdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiR1VnUFNCRkxtUnBjM1JoYm1ObFZHOG9SQ2tzSUdabElEMGdWeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbVZzWlcxbGJuUnpMQ0JDWlNBOUlHaGxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3VaV3hsYldWdWRITXNJRmtnUFNCbVpWc3hORjBnTHlBb1ptVmJNVEJkSUMwZ01Ta3NJRU5sSUQwZ1ptVmJNVFJkSUM4Z0tHWmxXekV3WFNBcklERXBMQ0I1WlNBOUlDaG1aVnM1WFNBcklERXBJQzhnWm1WYk5WMHNJR2RsSUQwZ0tHWmxXemxkSUMwZ01Ta2dMeUJtWlZzMVhTd2dlR1VnUFNBb1ptVmJPRjBnTFNBeEtTQXZJR1psV3pCZExDQlBaU0E5SUNoQ1pWczRYU0FySURFcElDOGdRbVZiTUYwc0lFY2dQU0JaSUNvZ2VHVXNJR29nUFNCWklDb2dUMlVzSUVzZ1BTQnNaU0F2SUNndGVHVWdLeUJQWlNrc0lIVmxJRDBnU3lBcUlDMTRaVHNLSUNBZ0lDQWdJQ0FnSUNBZ1Z5NXRZWFJ5YVhoWGIzSnNaQzVrWldOdmJYQnZjMlVvVmk1d2IzTnBkR2x2Yml3Z1ZpNXhkV0YwWlhKdWFXOXVMQ0JXTG5OallXeGxLU3dnVmk1MGNtRnVjMnhoZEdWWUtIVmxLU3dnVmk1MGNtRnVjMnhoZEdWYUtFc3BMQ0JXTG0xaGRISnBlRmR2Y214a0xtTnZiWEJ2YzJVb1ZpNXdiM05wZEdsdmJpd2dWaTV4ZFdGMFpYSnVhVzl1TENCV0xuTmpZV3hsS1N3Z1ZpNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXVZMjl3ZVNoV0xtMWhkSEpwZUZkdmNteGtLUzVwYm5abGNuUW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSE5sSUQwZ1dTQXJJRXNzSUZObElEMGdRMlVnS3lCTExDQlVaU0E5SUVjZ0xTQjFaU3dnVUdVZ1BTQnFJQ3NnS0d4bElDMGdkV1VwTENCWlpTQTlJSGxsSUNvZ1EyVWdMeUJUWlNBcUlITmxMQ0JESUQwZ1oyVWdLaUJEWlNBdklGTmxJQ29nYzJVN0NpQWdJQ0FnSUNBZ0lDQWdJRll1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQzV0WVd0bFVHVnljM0JsWTNScGRtVW9WR1VzSUZCbExDQlpaU3dnUXl3Z2MyVXNJRk5sS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1JpaFdMQ0JYS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRmNnUFQwOUlHNTFiR3dnUHlCV0xtMWhkSEpwZUZkdmNteGtMbU52Y0hrb1ZpNXRZWFJ5YVhncElEb2dWaTV0WVhSeWFYaFhiM0pzWkM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0ZjdWJXRjBjbWw0VjI5eWJHUXNJRll1YldGMGNtbDRLU3dnVmk1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVdVkyOXdlU2hXTG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1MWNHUmhkR1ZEWVcxbGNtRWdQU0JtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMDlQU0J1ZFd4c0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJRXd1Ym1WaGNpQTlJR0l1Ym1WaGNpQTlJSGt1Ym1WaGNpQTlJRll1Ym1WaGNpd2dUQzVtWVhJZ1BTQmlMbVpoY2lBOUlIa3VabUZ5SUQwZ1ZpNW1ZWElzSUNoSklDRTlQU0JNTG01bFlYSWdmSHdnYXlBaFBUMGdUQzVtWVhJcElDWW1JQ2hwTG5Wd1pHRjBaVkpsYm1SbGNsTjBZWFJsS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9UbVZoY2pvZ1RDNXVaV0Z5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaEdZWEk2SUV3dVptRnlDaUFnSUNBZ0lDQWdJQ0FnSUgwcExDQkpJRDBnVEM1dVpXRnlMQ0JySUQwZ1RDNW1ZWElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnlBOUlGWXVjR0Z5Wlc1MExDQm9aU0E5SUV3dVkyRnRaWEpoY3pzS0lDQWdJQ0FnSUNBZ0lDQWdSaWhNTENCWEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtWlNBOUlEQTdJR1psSUR3Z2FHVXViR1Z1WjNSb095Qm1aU3NyS1VZb2FHVmJabVZkTENCWEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnVEM1dFlYUnlhWGhYYjNKc1pDNWtaV052YlhCdmMyVW9UQzV3YjNOcGRHbHZiaXdnVEM1eGRXRjBaWEp1YVc5dUxDQk1Mbk5qWVd4bEtTd2dWaTV3YjNOcGRHbHZiaTVqYjNCNUtFd3VjRzl6YVhScGIyNHBMQ0JXTG5GMVlYUmxjbTVwYjI0dVkyOXdlU2hNTG5GMVlYUmxjbTVwYjI0cExDQldMbk5qWVd4bExtTnZjSGtvVEM1elkyRnNaU2tzSUZZdWJXRjBjbWw0TG1OdmNIa29UQzV0WVhSeWFYZ3BMQ0JXTG0xaGRISnBlRmR2Y214a0xtTnZjSGtvVEM1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUZZdVkyaHBiR1J5Wlc0N0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdabVV4SUQwZ01Dd2dRbVVnUFNCc1pTNXNaVzVuZEdnN0lHWmxNU0E4SUVKbE95Qm1aVEVyS3lsc1pWdG1aVEZkTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0NFd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUdVdWJHVnVaM1JvSUQwOVBTQXlJRDhnVlNoTUxDQjVMQ0JpS1NBNklFd3VjSEp2YW1WamRHbHZiazFoZEhKcGVDNWpiM0I1S0hrdWNISnZhbVZqZEdsdmJrMWhkSEpwZUNrN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUkRZVzFsY21FZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUV3N0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1blpYUkdiM1psWVhScGIyNGdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hVZ0lUMDlJRzUxYkd3cElISmxkSFZ5YmlCMUxtWnBlR1ZrUm05MlpXRjBhVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkNBaFBUMGdiblZzYkNrZ2NtVjBkWEp1SUdRdVptbDRaV1JHYjNabFlYUnBiMjQ3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV6WlhSR2IzWmxZWFJwYjI0Z1BTQm1kVzVqZEdsdmJpaFdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVWdJVDA5SUc1MWJHd2dKaVlnS0hVdVptbDRaV1JHYjNabFlYUnBiMjRnUFNCV0tTd2daQ0FoUFQwZ2JuVnNiQ0FtSmlCa0xtWnBlR1ZrUm05MlpXRjBhVzl1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR1F1Wm1sNFpXUkdiM1psWVhScGIyNGdQU0JXS1RzS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0JQSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ1WlNoV0xDQlhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqSUQwZ1Z5NW5aWFJXYVdWM1pYSlFiM05sS0c4cExDQnRJRDBnVnl3Z1l5QWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd4bElEMGdZeTUyYVdWM2N6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUWdJVDA5SUc1MWJHd2dKaVlnS0dVdWMyVjBVbVZ1WkdWeVZHRnlaMlYwUm5KaGJXVmlkV1ptWlhJb1p5d2daQzVtY21GdFpXSjFabVpsY2lrc0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHY3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbVpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdVdWJHVnVaM1JvSUNFOVBTQk1MbU5oYldWeVlYTXViR1Z1WjNSb0lDWW1JQ2hNTG1OaGJXVnlZWE11YkdWdVozUm9JRDBnTUN3Z1ptVWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVKbElEMGdNRHNnUW1VZ1BDQnNaUzVzWlc1bmRHZzdJRUpsS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWklEMGdiR1ZiUW1WZExDQkRaU0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUWdJVDA5SUc1MWJHd3BJRU5sSUQwZ1pDNW5aWFJXYVdWM2NHOXlkQ2haS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZGxJRDBnYUM1blpYUldhV1YzVTNWaVNXMWhaMlVvZFN3Z1dTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFTmxJRDBnWjJVdWRtbGxkM0J2Y25Rc0lFSmxJRDA5UFNBd0lDWW1JQ2hsTG5ObGRGSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVnpLR2NzSUdkbExtTnZiRzl5VkdWNGRIVnlaU3dnZFM1cFoyNXZjbVZFWlhCMGFGWmhiSFZsY3lBL0lIWnZhV1FnTUNBNklHZGxMbVJsY0hSb1UzUmxibU5wYkZSbGVIUjFjbVVwTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENobktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1WlNBOUlFRmJRbVZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIbGxMbTFoZEhKcGVDNW1jbTl0UVhKeVlYa29XUzUwY21GdWMyWnZjbTB1YldGMGNtbDRLU3dnZVdVdWNISnZhbVZqZEdsdmJrMWhkSEpwZUM1bWNtOXRRWEp5WVhrb1dTNXdjbTlxWldOMGFXOXVUV0YwY21sNEtTd2dlV1V1ZG1sbGQzQnZjblF1YzJWMEtFTmxMbmdzSUVObExua3NJRU5sTG5kcFpIUm9MQ0JEWlM1b1pXbG5hSFFwTENCQ1pTQTlQVDBnTUNBbUppQk1MbTFoZEhKcGVDNWpiM0I1S0hsbExtMWhkSEpwZUNrc0lHWmxJRDA5UFNBaE1DQW1KaUJNTG1OaGJXVnlZWE11Y0hWemFDaDVaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHaGxJRDBnYVM1cGJuQjFkRk52ZFhKalpYTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkdVeElEMGdNRHNnYkdVeElEd2djQzVzWlc1bmRHZzdJR3hsTVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtWlRFZ1BTQndXMnhsTVYwc0lFSmxNU0E5SUdobFcyeGxNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWlRFdWRYQmtZWFJsS0VKbE1Td2dWeXdnYnlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1R5QW1KaUJQS0ZZc0lGY3BMQ0J0SUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHTmxJRDBnYm1WM0lISm9Pd29nSUNBZ0lDQWdJR05sTG5ObGRFRnVhVzFoZEdsdmJreHZiM0FvYm1VcExDQjBhR2x6TG5ObGRFRnVhVzFoZEdsdmJreHZiM0FnUFNCbWRXNWpkR2x2YmloV0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUU4Z1BTQldPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaR2x6Y0c5elpTQTlJR1oxYm1OMGFXOXVLQ2tnZTMwN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlFTjRLSE1wSUhzS0lDQWdJR1oxYm1OMGFXOXVJR1VvWnl3Z2NDa2dld29nSUNBZ0lDQWdJR2N1Wm05blEyOXNiM0l1ZG1Gc2RXVXVZMjl3ZVNod0xtTnZiRzl5S1N3Z2NDNXBjMFp2WnlBL0lDaG5MbVp2WjA1bFlYSXVkbUZzZFdVZ1BTQndMbTVsWVhJc0lHY3VabTluUm1GeUxuWmhiSFZsSUQwZ2NDNW1ZWElwSURvZ2NDNXBjMFp2WjBWNGNESWdKaVlnS0djdVptOW5SR1Z1YzJsMGVTNTJZV3gxWlNBOUlIQXVaR1Z1YzJsMGVTazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUIwS0djc0lIQXNJRjhzSUhrc0lHSXBJSHNLSUNBZ0lDQWdJQ0J3TG1selRXVnphRUpoYzJsalRXRjBaWEpwWVd3Z1B5QnVLR2NzSUhBcElEb2djQzVwYzAxbGMyaE1ZVzFpWlhKMFRXRjBaWEpwWVd3Z1B5QW9iaWhuTENCd0tTd2diQ2huTENCd0tTa2dPaUJ3TG1selRXVnphRlJ2YjI1TllYUmxjbWxoYkNBL0lDaHVLR2NzSUhBcExDQm9LR2NzSUhBcEtTQTZJSEF1YVhOTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkNBL0lDaHVLR2NzSUhBcExDQmpLR2NzSUhBcEtTQTZJSEF1YVhOTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDQS9JQ2h1S0djc0lIQXBMQ0J3TG1selRXVnphRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2dQeUJrS0djc0lIQXNJR0lwSURvZ2RTaG5MQ0J3S1NrZ09pQndMbWx6VFdWemFFMWhkR05oY0UxaGRHVnlhV0ZzSUQ4Z0tHNG9aeXdnY0Nrc0lHWW9aeXdnY0NrcElEb2djQzVwYzAxbGMyaEVaWEIwYUUxaGRHVnlhV0ZzSUQ4Z0tHNG9aeXdnY0Nrc0lHMG9aeXdnY0NrcElEb2djQzVwYzAxbGMyaEVhWE4wWVc1alpVMWhkR1Z5YVdGc0lEOGdLRzRvWnl3Z2NDa3NJSGdvWnl3Z2NDa3BJRG9nY0M1cGMwMWxjMmhPYjNKdFlXeE5ZWFJsY21saGJDQS9JQ2h1S0djc0lIQXBMQ0IyS0djc0lIQXBLU0E2SUhBdWFYTk1hVzVsUW1GemFXTk5ZWFJsY21saGJDQS9JQ2hwS0djc0lIQXBMQ0J3TG1selRHbHVaVVJoYzJobFpFMWhkR1Z5YVdGc0lDWW1JSElvWnl3Z2NDa3BJRG9nY0M1cGMxQnZhVzUwYzAxaGRHVnlhV0ZzSUQ4Z2J5aG5MQ0J3TENCZkxDQjVLU0E2SUhBdWFYTlRjSEpwZEdWTllYUmxjbWxoYkNBL0lHRW9aeXdnY0NrZ09pQndMbWx6VTJoaFpHOTNUV0YwWlhKcFlXd2dQeUFvWnk1amIyeHZjaTUyWVd4MVpTNWpiM0I1S0hBdVkyOXNiM0lwTENCbkxtOXdZV05wZEhrdWRtRnNkV1VnUFNCd0xtOXdZV05wZEhrcElEb2djQzVwYzFOb1lXUmxjazFoZEdWeWFXRnNJQ1ltSUNod0xuVnVhV1p2Y20xelRtVmxaRlZ3WkdGMFpTQTlJQ0V4S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHNG9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3ViM0JoWTJsMGVTNTJZV3gxWlNBOUlIQXViM0JoWTJsMGVTd2djQzVqYjJ4dmNpQW1KaUJuTG1ScFptWjFjMlV1ZG1Gc2RXVXVZMjl3ZVNod0xtTnZiRzl5S1N3Z2NDNWxiV2x6YzJsMlpTQW1KaUJuTG1WdGFYTnphWFpsTG5aaGJIVmxMbU52Y0hrb2NDNWxiV2x6YzJsMlpTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2NDNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTa3NJSEF1YldGd0lDWW1JQ2huTG0xaGNDNTJZV3gxWlNBOUlIQXViV0Z3S1N3Z2NDNWhiSEJvWVUxaGNDQW1KaUFvWnk1aGJIQm9ZVTFoY0M1MllXeDFaU0E5SUhBdVlXeHdhR0ZOWVhBcExDQndMbk53WldOMWJHRnlUV0Z3SUNZbUlDaG5Mbk53WldOMWJHRnlUV0Z3TG5aaGJIVmxJRDBnY0M1emNHVmpkV3hoY2sxaGNDa3NJSEF1WVd4d2FHRlVaWE4wSUQ0Z01DQW1KaUFvWnk1aGJIQm9ZVlJsYzNRdWRtRnNkV1VnUFNCd0xtRnNjR2hoVkdWemRDazdDaUFnSUNBZ0lDQWdiR1YwSUY4Z1BTQnpMbWRsZENod0tTNWxiblpOWVhBN0NpQWdJQ0FnSUNBZ1h5QW1KaUFvWnk1bGJuWk5ZWEF1ZG1Gc2RXVWdQU0JmTENCbkxtWnNhWEJGYm5aTllYQXVkbUZzZFdVZ1BTQmZMbWx6UTNWaVpWUmxlSFIxY21VZ0ppWWdYeTVwYzFKbGJtUmxjbFJoY21kbGRGUmxlSFIxY21VZ1BUMDlJQ0V4SUQ4Z0xURWdPaUF4TENCbkxuSmxabXhsWTNScGRtbDBlUzUyWVd4MVpTQTlJSEF1Y21WbWJHVmpkR2wyYVhSNUxDQm5MbWx2Y2k1MllXeDFaU0E5SUhBdWFXOXlMQ0JuTG5KbFpuSmhZM1JwYjI1U1lYUnBieTUyWVd4MVpTQTlJSEF1Y21WbWNtRmpkR2x2YmxKaGRHbHZLU3dnY0M1c2FXZG9kRTFoY0NBbUppQW9aeTVzYVdkb2RFMWhjQzUyWVd4MVpTQTlJSEF1YkdsbmFIUk5ZWEFzSUdjdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrdWRtRnNkV1VnUFNCd0xteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUtTd2djQzVoYjAxaGNDQW1KaUFvWnk1aGIwMWhjQzUyWVd4MVpTQTlJSEF1WVc5TllYQXNJR2N1WVc5TllYQkpiblJsYm5OcGRIa3VkbUZzZFdVZ1BTQndMbUZ2VFdGd1NXNTBaVzV6YVhSNUtUc0tJQ0FnSUNBZ0lDQnNaWFFnZVRzS0lDQWdJQ0FnSUNCd0xtMWhjQ0EvSUhrZ1BTQndMbTFoY0NBNklIQXVjM0JsWTNWc1lYSk5ZWEFnUHlCNUlEMGdjQzV6Y0dWamRXeGhjazFoY0NBNklIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEOGdlU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SURvZ2NDNXViM0p0WVd4TllYQWdQeUI1SUQwZ2NDNXViM0p0WVd4TllYQWdPaUJ3TG1KMWJYQk5ZWEFnUHlCNUlEMGdjQzVpZFcxd1RXRndJRG9nY0M1eWIzVm5hRzVsYzNOTllYQWdQeUI1SUQwZ2NDNXliM1ZuYUc1bGMzTk5ZWEFnT2lCd0xtMWxkR0ZzYm1WemMwMWhjQ0EvSUhrZ1BTQndMbTFsZEdGc2JtVnpjMDFoY0NBNklIQXVZV3h3YUdGTllYQWdQeUI1SUQwZ2NDNWhiSEJvWVUxaGNDQTZJSEF1WlcxcGMzTnBkbVZOWVhBZ1B5QjVJRDBnY0M1bGJXbHpjMmwyWlUxaGNDQTZJSEF1WTJ4bFlYSmpiMkYwVFdGd0lEOGdlU0E5SUhBdVkyeGxZWEpqYjJGMFRXRndJRG9nY0M1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ1B5QjVJRDBnY0M1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ09pQndMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBL0lIa2dQU0J3TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQTZJSEF1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxOWVhBZ1B5QjVJRDBnY0M1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQTZJSEF1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0EvSUhrZ1BTQndMbk53WldOMWJHRnlRMjlzYjNKTllYQWdPaUJ3TG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0EvSUhrZ1BTQndMblJ5WVc1emJXbHpjMmx2YmsxaGNDQTZJSEF1ZEdocFkydHVaWE56VFdGd0lEOGdlU0E5SUhBdWRHaHBZMnR1WlhOelRXRndJRG9nY0M1emFHVmxia052Ykc5eVRXRndJRDhnZVNBOUlIQXVjMmhsWlc1RGIyeHZjazFoY0NBNklIQXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQWdKaVlnS0hrZ1BTQndMbk5vWldWdVVtOTFaMmh1WlhOelRXRndLU3dnZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2g1TG1selYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRZ0ppWWdLSGtnUFNCNUxuUmxlSFIxY21VcExDQjVMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JSGt1ZFhCa1lYUmxUV0YwY21sNEtDa3NJR2N1ZFhaVWNtRnVjMlp2Y20wdWRtRnNkV1V1WTI5d2VTaDVMbTFoZEhKcGVDa3BPd29nSUNBZ0lDQWdJR3hsZENCaU93b2dJQ0FnSUNBZ0lIQXVZVzlOWVhBZ1B5QmlJRDBnY0M1aGIwMWhjQ0E2SUhBdWJHbG5hSFJOWVhBZ0ppWWdLR0lnUFNCd0xteHBaMmgwVFdGd0tTd2dZaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGlMbWx6VjJWaVIweFNaVzVrWlhKVVlYSm5aWFFnSmlZZ0tHSWdQU0JpTG5SbGVIUjFjbVVwTENCaUxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BUMDlJQ0V3SUNZbUlHSXVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lHY3VkWFl5VkhKaGJuTm1iM0p0TG5aaGJIVmxMbU52Y0hrb1lpNXRZWFJ5YVhncEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2tvWnl3Z2NDa2dld29nSUNBZ0lDQWdJR2N1WkdsbVpuVnpaUzUyWVd4MVpTNWpiM0I1S0hBdVkyOXNiM0lwTENCbkxtOXdZV05wZEhrdWRtRnNkV1VnUFNCd0xtOXdZV05wZEhrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5MbVJoYzJoVGFYcGxMblpoYkhWbElEMGdjQzVrWVhOb1UybDZaU3dnWnk1MGIzUmhiRk5wZW1VdWRtRnNkV1VnUFNCd0xtUmhjMmhUYVhwbElDc2djQzVuWVhCVGFYcGxMQ0JuTG5OallXeGxMblpoYkhWbElEMGdjQzV6WTJGc1pUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzhvWnl3Z2NDd2dYeXdnZVNrZ2V3b2dJQ0FnSUNBZ0lHY3VaR2xtWm5WelpTNTJZV3gxWlM1amIzQjVLSEF1WTI5c2IzSXBMQ0JuTG05d1lXTnBkSGt1ZG1Gc2RXVWdQU0J3TG05d1lXTnBkSGtzSUdjdWMybDZaUzUyWVd4MVpTQTlJSEF1YzJsNlpTQXFJRjhzSUdjdWMyTmhiR1V1ZG1Gc2RXVWdQU0I1SUNvZ0xqVXNJSEF1YldGd0lDWW1JQ2huTG0xaGNDNTJZV3gxWlNBOUlIQXViV0Z3S1N3Z2NDNWhiSEJvWVUxaGNDQW1KaUFvWnk1aGJIQm9ZVTFoY0M1MllXeDFaU0E5SUhBdVlXeHdhR0ZOWVhBcExDQndMbUZzY0doaFZHVnpkQ0ErSURBZ0ppWWdLR2N1WVd4d2FHRlVaWE4wTG5aaGJIVmxJRDBnY0M1aGJIQm9ZVlJsYzNRcE93b2dJQ0FnSUNBZ0lHeGxkQ0JpT3dvZ0lDQWdJQ0FnSUhBdWJXRndJRDhnWWlBOUlIQXViV0Z3SURvZ2NDNWhiSEJvWVUxaGNDQW1KaUFvWWlBOUlIQXVZV3h3YUdGTllYQXBMQ0JpSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0l1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5UFQwZ0lUQWdKaVlnWWk1MWNHUmhkR1ZOWVhSeWFYZ29LU3dnWnk1MWRsUnlZVzV6Wm05eWJTNTJZV3gxWlM1amIzQjVLR0l1YldGMGNtbDRLU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaEtHY3NJSEFwSUhzS0lDQWdJQ0FnSUNCbkxtUnBabVoxYzJVdWRtRnNkV1V1WTI5d2VTaHdMbU52Ykc5eUtTd2daeTV2Y0dGamFYUjVMblpoYkhWbElEMGdjQzV2Y0dGamFYUjVMQ0JuTG5KdmRHRjBhVzl1TG5aaGJIVmxJRDBnY0M1eWIzUmhkR2x2Yml3Z2NDNXRZWEFnSmlZZ0tHY3ViV0Z3TG5aaGJIVmxJRDBnY0M1dFlYQXBMQ0J3TG1Gc2NHaGhUV0Z3SUNZbUlDaG5MbUZzY0doaFRXRndMblpoYkhWbElEMGdjQzVoYkhCb1lVMWhjQ2tzSUhBdVlXeHdhR0ZVWlhOMElENGdNQ0FtSmlBb1p5NWhiSEJvWVZSbGMzUXVkbUZzZFdVZ1BTQndMbUZzY0doaFZHVnpkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElGODdDaUFnSUNBZ0lDQWdjQzV0WVhBZ1B5QmZJRDBnY0M1dFlYQWdPaUJ3TG1Gc2NHaGhUV0Z3SUNZbUlDaGZJRDBnY0M1aGJIQm9ZVTFoY0Nrc0lGOGdJVDA5SUhadmFXUWdNQ0FtSmlBb1h5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMDlQU0FoTUNBbUppQmZMblZ3WkdGMFpVMWhkSEpwZUNncExDQm5MblYyVkhKaGJuTm1iM0p0TG5aaGJIVmxMbU52Y0hrb1h5NXRZWFJ5YVhncEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3dvWnl3Z2NDa2dld29nSUNBZ0lDQWdJSEF1WlcxcGMzTnBkbVZOWVhBZ0ppWWdLR2N1WlcxcGMzTnBkbVZOWVhBdWRtRnNkV1VnUFNCd0xtVnRhWE56YVhabFRXRndLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdNb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUdjdWMzQmxZM1ZzWVhJdWRtRnNkV1V1WTI5d2VTaHdMbk53WldOMWJHRnlLU3dnWnk1emFHbHVhVzVsYzNNdWRtRnNkV1VnUFNCTllYUm9MbTFoZUNod0xuTm9hVzVwYm1WemN5d2dNV1V0TkNrc0lIQXVaVzFwYzNOcGRtVk5ZWEFnSmlZZ0tHY3VaVzFwYzNOcGRtVk5ZWEF1ZG1Gc2RXVWdQU0J3TG1WdGFYTnphWFpsVFdGd0tTd2djQzVpZFcxd1RXRndJQ1ltSUNobkxtSjFiWEJOWVhBdWRtRnNkV1VnUFNCd0xtSjFiWEJOWVhBc0lHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElEMGdjQzVpZFcxd1UyTmhiR1VzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnS0djdVluVnRjRk5qWVd4bExuWmhiSFZsSUNvOUlDMHhLU2tzSUhBdWJtOXliV0ZzVFdGd0lDWW1JQ2huTG01dmNtMWhiRTFoY0M1MllXeDFaU0E5SUhBdWJtOXliV0ZzVFdGd0xDQm5MbTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbU52Y0hrb2NDNXViM0p0WVd4VFkyRnNaU2tzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1dVpXZGhkR1VvS1Nrc0lIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JQ2huTG1ScGMzQnNZV05sYldWdWRFMWhjQzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0JuTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z1p5NWthWE53YkdGalpXMWxiblJDYVdGekxuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJDYVdGektUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2dvWnl3Z2NDa2dld29nSUNBZ0lDQWdJSEF1WjNKaFpHbGxiblJOWVhBZ0ppWWdLR2N1WjNKaFpHbGxiblJOWVhBdWRtRnNkV1VnUFNCd0xtZHlZV1JwWlc1MFRXRndLU3dnY0M1bGJXbHpjMmwyWlUxaGNDQW1KaUFvWnk1bGJXbHpjMmwyWlUxaGNDNTJZV3gxWlNBOUlIQXVaVzFwYzNOcGRtVk5ZWEFwTENCd0xtSjFiWEJOWVhBZ0ppWWdLR2N1WW5WdGNFMWhjQzUyWVd4MVpTQTlJSEF1WW5WdGNFMWhjQ3dnWnk1aWRXMXdVMk5oYkdVdWRtRnNkV1VnUFNCd0xtSjFiWEJUWTJGc1pTd2djQzV6YVdSbElEMDlQU0JwZENBbUppQW9aeTVpZFcxd1UyTmhiR1V1ZG1Gc2RXVWdLajBnTFRFcEtTd2djQzV1YjNKdFlXeE5ZWEFnSmlZZ0tHY3VibTl5YldGc1RXRndMblpoYkhWbElEMGdjQzV1YjNKdFlXeE5ZWEFzSUdjdWJtOXliV0ZzVTJOaGJHVXVkbUZzZFdVdVkyOXdlU2h3TG01dmNtMWhiRk5qWVd4bEtTd2djQzV6YVdSbElEMDlQU0JwZENBbUppQm5MbTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbTVsWjJGMFpTZ3BLU3dnY0M1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnSmlZZ0tHY3VaR2x6Y0d4aFkyVnRaVzUwVFdGd0xuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJOWVhBc0lHY3VaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXVkbUZzZFdVZ1BTQndMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0JuTG1ScGMzQnNZV05sYldWdWRFSnBZWE11ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRFSnBZWE1wT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2RTaG5MQ0J3S1NCN0NpQWdJQ0FnSUNBZ1p5NXliM1ZuYUc1bGMzTXVkbUZzZFdVZ1BTQndMbkp2ZFdkb2JtVnpjeXdnWnk1dFpYUmhiRzVsYzNNdWRtRnNkV1VnUFNCd0xtMWxkR0ZzYm1WemN5d2djQzV5YjNWbmFHNWxjM05OWVhBZ0ppWWdLR2N1Y205MVoyaHVaWE56VFdGd0xuWmhiSFZsSUQwZ2NDNXliM1ZuYUc1bGMzTk5ZWEFwTENCd0xtMWxkR0ZzYm1WemMwMWhjQ0FtSmlBb1p5NXRaWFJoYkc1bGMzTk5ZWEF1ZG1Gc2RXVWdQU0J3TG0xbGRHRnNibVZ6YzAxaGNDa3NJSEF1WlcxcGMzTnBkbVZOWVhBZ0ppWWdLR2N1WlcxcGMzTnBkbVZOWVhBdWRtRnNkV1VnUFNCd0xtVnRhWE56YVhabFRXRndLU3dnY0M1aWRXMXdUV0Z3SUNZbUlDaG5MbUoxYlhCTllYQXVkbUZzZFdVZ1BTQndMbUoxYlhCTllYQXNJR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJRDBnY0M1aWRXMXdVMk5oYkdVc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ0tHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElDbzlJQzB4S1Nrc0lIQXVibTl5YldGc1RXRndJQ1ltSUNobkxtNXZjbTFoYkUxaGNDNTJZV3gxWlNBOUlIQXVibTl5YldGc1RXRndMQ0JuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG1OdmNIa29jQzV1YjNKdFlXeFRZMkZzWlNrc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNXVaV2RoZEdVb0tTa3NJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUNobkxtUnBjM0JzWVdObGJXVnVkRTFoY0M1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCbkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJUWTJGc1pTd2daeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLU3dnY3k1blpYUW9jQ2t1Wlc1MlRXRndJQ1ltSUNobkxtVnVkazFoY0VsdWRHVnVjMmwwZVM1MllXeDFaU0E5SUhBdVpXNTJUV0Z3U1c1MFpXNXphWFI1S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHUW9aeXdnY0N3Z1h5a2dld29nSUNBZ0lDQWdJSFVvWnl3Z2NDa3NJR2N1YVc5eUxuWmhiSFZsSUQwZ2NDNXBiM0lzSUhBdWMyaGxaVzRnUGlBd0lDWW1JQ2huTG5Ob1pXVnVRMjlzYjNJdWRtRnNkV1V1WTI5d2VTaHdMbk5vWldWdVEyOXNiM0lwTG0xMWJIUnBjR3g1VTJOaGJHRnlLSEF1YzJobFpXNHBMQ0JuTG5Ob1pXVnVVbTkxWjJodVpYTnpMblpoYkhWbElEMGdjQzV6YUdWbGJsSnZkV2RvYm1WemN5d2djQzV6YUdWbGJrTnZiRzl5VFdGd0lDWW1JQ2huTG5Ob1pXVnVRMjlzYjNKTllYQXVkbUZzZFdVZ1BTQndMbk5vWldWdVEyOXNiM0pOWVhBcExDQndMbk5vWldWdVVtOTFaMmh1WlhOelRXRndJQ1ltSUNobkxuTm9aV1Z1VW05MVoyaHVaWE56VFdGd0xuWmhiSFZsSUQwZ2NDNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDa3BMQ0J3TG1Oc1pXRnlZMjloZENBK0lEQWdKaVlnS0djdVkyeGxZWEpqYjJGMExuWmhiSFZsSUQwZ2NDNWpiR1ZoY21OdllYUXNJR2N1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56TG5aaGJIVmxJRDBnY0M1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNc0lIQXVZMnhsWVhKamIyRjBUV0Z3SUNZbUlDaG5MbU5zWldGeVkyOWhkRTFoY0M1MllXeDFaU0E5SUhBdVkyeGxZWEpqYjJGMFRXRndLU3dnY0M1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdKaVlnS0djdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndMblpoYkhWbElEMGdjQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBcExDQndMbU5zWldGeVkyOWhkRTV2Y20xaGJFMWhjQ0FtSmlBb1p5NWpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaUzUyWVd4MVpTNWpiM0I1S0hBdVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVXBMQ0JuTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0M1MllXeDFaU0E5SUhBdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0xDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlHY3VZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVibVZuWVhSbEtDa3BLU3dnY0M1MGNtRnVjMjFwYzNOcGIyNGdQaUF3SUNZbUlDaG5MblJ5WVc1emJXbHpjMmx2Ymk1MllXeDFaU0E5SUhBdWRISmhibk50YVhOemFXOXVMQ0JuTG5SeVlXNXpiV2x6YzJsdmJsTmhiWEJzWlhKTllYQXVkbUZzZFdVZ1BTQmZMblJsZUhSMWNtVXNJR2N1ZEhKaGJuTnRhWE56YVc5dVUyRnRjR3hsY2xOcGVtVXVkbUZzZFdVdWMyVjBLRjh1ZDJsa2RHZ3NJRjh1YUdWcFoyaDBLU3dnY0M1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnSmlZZ0tHY3VkSEpoYm5OdGFYTnphVzl1VFdGd0xuWmhiSFZsSUQwZ2NDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBcExDQm5MblJvYVdOcmJtVnpjeTUyWVd4MVpTQTlJSEF1ZEdocFkydHVaWE56TENCd0xuUm9hV05yYm1WemMwMWhjQ0FtSmlBb1p5NTBhR2xqYTI1bGMzTk5ZWEF1ZG1Gc2RXVWdQU0J3TG5Sb2FXTnJibVZ6YzAxaGNDa3NJR2N1WVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlM1MllXeDFaU0E5SUhBdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTd2daeTVoZEhSbGJuVmhkR2x2YmtOdmJHOXlMblpoYkhWbExtTnZjSGtvY0M1aGRIUmxiblZoZEdsdmJrTnZiRzl5S1Nrc0lHY3VjM0JsWTNWc1lYSkpiblJsYm5OcGRIa3VkbUZzZFdVZ1BTQndMbk53WldOMWJHRnlTVzUwWlc1emFYUjVMQ0JuTG5Od1pXTjFiR0Z5UTI5c2IzSXVkbUZzZFdVdVkyOXdlU2h3TG5Od1pXTjFiR0Z5UTI5c2IzSXBMQ0J3TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lDWW1JQ2huTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xuWmhiSFZsSUQwZ2NDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ2tzSUhBdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBbUppQW9aeTV6Y0dWamRXeGhja052Ykc5eVRXRndMblpoYkhWbElEMGdjQzV6Y0dWamRXeGhja052Ykc5eVRXRndLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdZb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUhBdWJXRjBZMkZ3SUNZbUlDaG5MbTFoZEdOaGNDNTJZV3gxWlNBOUlIQXViV0YwWTJGd0tTd2djQzVpZFcxd1RXRndJQ1ltSUNobkxtSjFiWEJOWVhBdWRtRnNkV1VnUFNCd0xtSjFiWEJOWVhBc0lHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElEMGdjQzVpZFcxd1UyTmhiR1VzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnS0djdVluVnRjRk5qWVd4bExuWmhiSFZsSUNvOUlDMHhLU2tzSUhBdWJtOXliV0ZzVFdGd0lDWW1JQ2huTG01dmNtMWhiRTFoY0M1MllXeDFaU0E5SUhBdWJtOXliV0ZzVFdGd0xDQm5MbTV2Y20xaGJGTmpZV3hsTG5aaGJIVmxMbU52Y0hrb2NDNXViM0p0WVd4VFkyRnNaU2tzSUhBdWMybGtaU0E5UFQwZ2FYUWdKaVlnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1dVpXZGhkR1VvS1Nrc0lIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JQ2huTG1ScGMzQnNZV05sYldWdWRFMWhjQzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0JuTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z1p5NWthWE53YkdGalpXMWxiblJDYVdGekxuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJDYVdGektUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzBvWnl3Z2NDa2dld29nSUNBZ0lDQWdJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUNobkxtUnBjM0JzWVdObGJXVnVkRTFoY0M1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCbkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJUWTJGc1pTd2daeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhnb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNZbUlDaG5MbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0xDQm5MbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnWnk1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6S1N3Z1p5NXlaV1psY21WdVkyVlFiM05wZEdsdmJpNTJZV3gxWlM1amIzQjVLSEF1Y21WbVpYSmxibU5sVUc5emFYUnBiMjRwTENCbkxtNWxZWEpFYVhOMFlXNWpaUzUyWVd4MVpTQTlJSEF1Ym1WaGNrUnBjM1JoYm1ObExDQm5MbVpoY2tScGMzUmhibU5sTG5aaGJIVmxJRDBnY0M1bVlYSkVhWE4wWVc1alpUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFlvWnl3Z2NDa2dld29nSUNBZ0lDQWdJSEF1WW5WdGNFMWhjQ0FtSmlBb1p5NWlkVzF3VFdGd0xuWmhiSFZsSUQwZ2NDNWlkVzF3VFdGd0xDQm5MbUoxYlhCVFkyRnNaUzUyWVd4MVpTQTlJSEF1WW5WdGNGTmpZV3hsTENCd0xuTnBaR1VnUFQwOUlHbDBJQ1ltSUNobkxtSjFiWEJUWTJGc1pTNTJZV3gxWlNBcVBTQXRNU2twTENCd0xtNXZjbTFoYkUxaGNDQW1KaUFvWnk1dWIzSnRZV3hOWVhBdWRtRnNkV1VnUFNCd0xtNXZjbTFoYkUxaGNDd2daeTV1YjNKdFlXeFRZMkZzWlM1MllXeDFaUzVqYjNCNUtIQXVibTl5YldGc1UyTmhiR1VwTENCd0xuTnBaR1VnUFQwOUlHbDBJQ1ltSUdjdWJtOXliV0ZzVTJOaGJHVXVkbUZzZFdVdWJtVm5ZWFJsS0NrcExDQndMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDQW1KaUFvWnk1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnWnk1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlM1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lHY3VaR2x6Y0d4aFkyVnRaVzUwUW1saGN5NTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5azdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJSEpsWm5KbGMyaEdiMmRWYm1sbWIzSnRjem9nWlN3S0lDQWdJQ0FnSUNCeVpXWnlaWE5vVFdGMFpYSnBZV3hWYm1sbWIzSnRjem9nZEFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCTWVDZ3BJSHNLSUNBZ0lHeGxkQ0J6SUQwZ2NYTW9JbU5oYm5aaGN5SXBPd29nSUNBZ2NtVjBkWEp1SUhNdWMzUjViR1V1WkdsemNHeGhlU0E5SUNKaWJHOWpheUlzSUhNN0NuMEtablZ1WTNScGIyNGdjV1VvY3lBOUlIdDlLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlITXVZMkZ1ZG1GeklDRTlQU0IyYjJsa0lEQWdQeUJ6TG1OaGJuWmhjeUE2SUV4NEtDa3NJSFFnUFNCekxtTnZiblJsZUhRZ0lUMDlJSFp2YVdRZ01DQS9JSE11WTI5dWRHVjRkQ0E2SUc1MWJHd3NJRzRnUFNCekxtRnNjR2hoSUNFOVBTQjJiMmxrSURBZ1B5QnpMbUZzY0doaElEb2dJVEVzSUdrZ1BTQnpMbVJsY0hSb0lDRTlQU0IyYjJsa0lEQWdQeUJ6TG1SbGNIUm9JRG9nSVRBc0lISWdQU0J6TG5OMFpXNWphV3dnSVQwOUlIWnZhV1FnTUNBL0lITXVjM1JsYm1OcGJDQTZJQ0V3TENCdklEMGdjeTVoYm5ScFlXeHBZWE1nSVQwOUlIWnZhV1FnTUNBL0lITXVZVzUwYVdGc2FXRnpJRG9nSVRFc0lHRWdQU0J6TG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBaFBUMGdkbTlwWkNBd0lEOGdjeTV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnT2lBaE1Dd2diQ0E5SUhNdWNISmxjMlZ5ZG1WRWNtRjNhVzVuUW5WbVptVnlJQ0U5UFNCMmIybGtJREFnUHlCekxuQnlaWE5sY25abFJISmhkMmx1WjBKMVptWmxjaUE2SUNFeExDQmpJRDBnY3k1d2IzZGxjbEJ5WldabGNtVnVZMlVnSVQwOUlIWnZhV1FnTUNBL0lITXVjRzkzWlhKUWNtVm1aWEpsYm1ObElEb2dJbVJsWm1GMWJIUWlMQ0JvSUQwZ2N5NW1ZV2xzU1daTllXcHZjbEJsY21admNtMWhibU5sUTJGMlpXRjBJQ0U5UFNCMmIybGtJREFnUHlCekxtWmhhV3hKWmsxaGFtOXlVR1Z5Wm05eWJXRnVZMlZEWVhabFlYUWdPaUFoTVN3Z2RTQTlJRzUxYkd3c0lHUWdQU0J1ZFd4c0xDQm1JRDBnVzEwc0lHMGdQU0JiWFRzS0lDQWdJSFJvYVhNdVpHOXRSV3hsYldWdWRDQTlJR1VzSUhSb2FYTXVaR1ZpZFdjZ1BTQjdDaUFnSUNBZ0lDQWdZMmhsWTJ0VGFHRmtaWEpGY25KdmNuTTZJQ0V3Q2lBZ0lDQjlMQ0IwYUdsekxtRjFkRzlEYkdWaGNpQTlJQ0V3TENCMGFHbHpMbUYxZEc5RGJHVmhja052Ykc5eUlEMGdJVEFzSUhSb2FYTXVZWFYwYjBOc1pXRnlSR1Z3ZEdnZ1BTQWhNQ3dnZEdocGN5NWhkWFJ2UTJ4bFlYSlRkR1Z1WTJsc0lEMGdJVEFzSUhSb2FYTXVjMjl5ZEU5aWFtVmpkSE1nUFNBaE1Dd2dkR2hwY3k1amJHbHdjR2x1WjFCc1lXNWxjeUE5SUZ0ZExDQjBhR2x6TG14dlkyRnNRMnhwY0hCcGJtZEZibUZpYkdWa0lEMGdJVEVzSUhSb2FYTXViM1YwY0hWMFJXNWpiMlJwYm1jZ1BTQk9kQ3dnZEdocGN5NXdhSGx6YVdOaGJHeDVRMjl5Y21WamRFeHBaMmgwY3lBOUlDRXhMQ0IwYUdsekxuUnZibVZOWVhCd2FXNW5JRDBnWDI0c0lIUm9hWE11ZEc5dVpVMWhjSEJwYm1kRmVIQnZjM1Z5WlNBOUlERTdDaUFnSUNCc1pYUWdlQ0E5SUhSb2FYTXNJSFlnUFNBaE1Td2daeUE5SURBc0lIQWdQU0F3TENCZklEMGdiblZzYkN3Z2VTQTlJQzB4TENCaUlEMGdiblZzYkN3Z1FTQTlJRzVsZHlCV1pTd2dUQ0E5SUc1bGR5QldaU3dnU1NBOUlHNTFiR3dzSUdzZ1BTQmxMbmRwWkhSb0xDQkNJRDBnWlM1b1pXbG5hSFFzSUZBZ1BTQXhMQ0IzSUQwZ2JuVnNiQ3dnUlNBOUlHNTFiR3dzSUVRZ1BTQnVaWGNnVm1Vb01Dd2dNQ3dnYXl3Z1Fpa3NJRlVnUFNCdVpYY2dWbVVvTUN3Z01Dd2dheXdnUWlrc0lFWWdQU0FoTVN3Z1R5QTlJRnRkTENCdVpTQTlJRzVsZHlCRWNpd2dZMlVnUFNBaE1Td2dWaUE5SUNFeExDQlhJRDBnYm5Wc2JDd2dhR1VnUFNCdVpYY2djR1VzSUd4bElEMGdibVYzSUUwc0lHWmxJRDBnZXdvZ0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnWm05bk9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUdWdWRtbHliMjV0Wlc1ME9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUc5MlpYSnlhV1JsVFdGMFpYSnBZV3c2SUc1MWJHd3NDaUFnSUNBZ0lDQWdhWE5UWTJWdVpUb2dJVEFLSUNBZ0lIMDdDaUFnSUNCbWRXNWpkR2x2YmlCQ1pTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYeUE5UFQwZ2JuVnNiQ0EvSUZBZ09pQXhPd29nSUNBZ2ZRb2dJQ0FnYkdWMElGa2dQU0IwT3dvZ0lDQWdablZ1WTNScGIyNGdRMlVvVXl3Z1Rpa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdTQ0E5SURBN0lFZ2dQQ0JUTG14bGJtZDBhRHNnU0NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIb2dQU0JUVzBoZExDQnhJRDBnWlM1blpYUkRiMjUwWlhoMEtIb3NJRTRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY1NBaFBUMGdiblZzYkNrZ2NtVjBkWEp1SUhFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQnNaWFFnVXlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnWVd4d2FHRTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvT2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdWdVkybHNPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmhiblJwWVd4cFlYTTZJRzhzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaVzExYkhScGNHeHBaV1JCYkhCb1lUb2dZU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISmxjMlZ5ZG1WRWNtRjNhVzVuUW5WbVptVnlPaUJzTEFvZ0lDQWdJQ0FnSUNBZ0lDQndiM2RsY2xCeVpXWmxjbVZ1WTJVNklHTXNDaUFnSUNBZ0lDQWdJQ0FnSUdaaGFXeEpaazFoYW05eVVHVnlabTl5YldGdVkyVkRZWFpsWVhRNklHZ0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR2xtSUNnaWMyVjBRWFIwY21saWRYUmxJaUJwYmlCbElDWW1JR1V1YzJWMFFYUjBjbWxpZFhSbEtDSmtZWFJoTFdWdVoybHVaU0lzSUdCMGFISmxaUzVxY3lCeUpIdGpZWDFnS1N3Z1pTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSjNaV0puYkdOdmJuUmxlSFJzYjNOMElpd2dSV1VzSUNFeEtTd2daUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0ozWldKbmJHTnZiblJsZUhSeVpYTjBiM0psWkNJc0lHMWxMQ0FoTVNrc0lGa2dQVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRTRnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaWQyVmlaMnd5SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNKM1pXSm5iQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpWlhod1pYSnBiV1Z1ZEdGc0xYZGxZbWRzSWdvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9lQzVwYzFkbFlrZE1NVkpsYm1SbGNtVnlJRDA5UFNBaE1DQW1KaUJPTG5Ob2FXWjBLQ2tzSUZrZ1BTQkRaU2hPTENCVEtTd2dXU0E5UFQwZ2JuVnNiQ2tnZEdoeWIzY2dRMlVvVGlrZ1B5QnVaWGNnUlhKeWIzSW9Ja1Z5Y205eUlHTnlaV0YwYVc1bklGZGxZa2RNSUdOdmJuUmxlSFFnZDJsMGFDQjViM1Z5SUhObGJHVmpkR1ZrSUdGMGRISnBZblYwWlhNdUlpa2dPaUJ1WlhjZ1JYSnliM0lvSWtWeWNtOXlJR055WldGMGFXNW5JRmRsWWtkTUlHTnZiblJsZUhRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRmt1WjJWMFUyaGhaR1Z5VUhKbFkybHphVzl1Um05eWJXRjBJRDA5UFNCMmIybGtJREFnSmlZZ0tGa3VaMlYwVTJoaFpHVnlVSEpsWTJsemFXOXVSbTl5YldGMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVlXNW5aVTFwYmpvZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmhibWRsVFdGNE9pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSEpsWTJsemFXOXVPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlJR05oZEdOb0lDaFRNU2tnZXdvZ0lDQWdJQ0FnSUhSb2NtOTNJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQ0lnS3lCVE1TNXRaWE56WVdkbEtTd2dVekU3Q2lBZ0lDQjlDaUFnSUNCc1pYUWdlV1VzSUdkbExDQjRaU3dnVDJVc0lFY3NJR29zSUVzc0lIVmxMQ0J6WlN3Z1UyVXNJRlJsTENCUVpTd2dXV1VzSUVNc0lGUXNJRW9zSUNRc0lISmxMQ0JhTENCTlpTd2dkbVVzSUhSbExDQlNPd29nSUNBZ1puVnVZM1JwYjI0Z1pXVW9LU0I3Q2lBZ0lDQWdJQ0FnZVdVZ1BTQnVaWGNnVVcwb1dTa3NJR2RsSUQwZ2JtVjNJRmh0S0Zrc0lIbGxMQ0J6S1N3Z2VXVXVhVzVwZENoblpTa3NJSFJsSUQwZ2JtVjNJRVY0S0Zrc0lIbGxMQ0JuWlNrc0lIaGxJRDBnYm1WM0lGTjRLRmtzSUhsbExDQm5aU2tzSUU5Yk1GMGdQU0F4TURJNUxDQlBaU0E5SUc1bGR5QjBaeWhaS1N3Z1J5QTlJRzVsZHlCbWVDd2dhaUE5SUc1bGR5QlVlQ2haTENCNVpTd2dlR1VzSUVjc0lHZGxMQ0IwWlN3Z1QyVXBMQ0JMSUQwZ2JtVjNJRmx0S0hncExDQjFaU0E5SUc1bGR5QnFiU2g0S1N3Z2MyVWdQU0J1WlhjZ1oyWW9XU3dnWjJVcExDQlNJRDBnYm1WM0lGZHRLRmtzSUhsbExDQnpaU3dnWjJVcExDQlRaU0E5SUc1bGR5QkxiU2haTENCelpTd2dUMlVzSUZJcExDQlVaU0E5SUc1bGR5QnpaeWhaTENCVFpTd2djMlVzSUU5bEtTd2dXaUE5SUc1bGR5QnlaeWhaTENCblpTd2dhaWtzSUVvZ1BTQnVaWGNnU20wb1J5a3NJRkJsSUQwZ2JtVjNJR1I0S0hnc0lFc3NJSFZsTENCNVpTd2daMlVzSUZJc0lFb3BMQ0JaWlNBOUlHNWxkeUJEZUNoSEtTd2dReUE5SUc1bGR5QnRlQ3dnVkNBOUlHNWxkeUJOZUNoNVpTd2daMlVwTENCeVpTQTlJRzVsZHlCV2JTaDRMQ0JMTENCNFpTd2dWR1VzSUdFcExDQWtJRDBnYm1WM0lIbG9LSGdzSUZSbExDQm5aU2tzSUUxbElEMGdibVYzSUhGdEtGa3NJSGxsTENCUFpTd2daMlVwTENCMlpTQTlJRzVsZHlCbFp5aFpMQ0I1WlN3Z1QyVXNJR2RsS1N3Z1QyVXVjSEp2WjNKaGJYTWdQU0JRWlM1d2NtOW5jbUZ0Y3l3Z2VDNWpZWEJoWW1sc2FYUnBaWE1nUFNCblpTd2dlQzVsZUhSbGJuTnBiMjV6SUQwZ2VXVXNJSGd1Y0hKdmNHVnlkR2xsY3lBOUlFY3NJSGd1Y21WdVpHVnlUR2x6ZEhNZ1BTQkRMQ0I0TG5Ob1lXUnZkMDFoY0NBOUlDUXNJSGd1YzNSaGRHVWdQU0I0WlN3Z2VDNXBibVp2SUQwZ1QyVTdDaUFnSUNCOUNpQWdJQ0JsWlNncE93b2dJQ0FnYkdWMElGRWdQU0J1WlhjZ2RtZ29lQ3dnV1NrN0NpQWdJQ0IwYUdsekxuaHlJRDBnVVN3Z2RHaHBjeTVuWlhSRGIyNTBaWGgwSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGazdDaUFnSUNCOUxDQjBhR2x6TG1kbGRFTnZiblJsZUhSQmRIUnlhV0oxZEdWeklEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRmt1WjJWMFEyOXVkR1Y0ZEVGMGRISnBZblYwWlhNb0tUc0tJQ0FnSUgwc0lIUm9hWE11Wm05eVkyVkRiMjUwWlhoMFRHOXpjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JUSUQwZ2VXVXVaMlYwS0NKWFJVSkhURjlzYjNObFgyTnZiblJsZUhRaUtUc0tJQ0FnSUNBZ0lDQlRJQ1ltSUZNdWJHOXpaVU52Ym5SbGVIUW9LVHNLSUNBZ0lIMHNJSFJvYVhNdVptOXlZMlZEYjI1MFpYaDBVbVZ6ZEc5eVpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlRJRDBnZVdVdVoyVjBLQ0pYUlVKSFRGOXNiM05sWDJOdmJuUmxlSFFpS1RzS0lDQWdJQ0FnSUNCVElDWW1JRk11Y21WemRHOXlaVU52Ym5SbGVIUW9LVHNLSUNBZ0lIMHNJSFJvYVhNdVoyVjBVR2w0Wld4U1lYUnBieUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCUU93b2dJQ0FnZlN3Z2RHaHBjeTV6WlhSUWFYaGxiRkpoZEdsdklEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUZNZ0lUMDlJSFp2YVdRZ01DQW1KaUFvVUNBOUlGTXNJSFJvYVhNdWMyVjBVMmw2WlNockxDQkNMQ0FoTVNrcE93b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSVGFYcGxJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVExuTmxkQ2hyTENCQ0tUc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFUybDZaU0E5SUdaMWJtTjBhVzl1S0ZNc0lFNHNJRWdwSUhzS0lDQWdJQ0FnSUNCcFppQW9VUzVwYzFCeVpYTmxiblJwYm1jcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJEWVc0bmRDQmphR0Z1WjJVZ2MybDZaU0IzYUdsc1pTQldVaUJrWlhacFkyVWdhWE1nY0hKbGMyVnVkR2x1Wnk0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JySUQwZ1V5d2dRaUE5SUU0c0lHVXVkMmxrZEdnZ1BTQk5ZWFJvTG1ac2IyOXlLRk1nS2lCUUtTd2daUzVvWldsbmFIUWdQU0JOWVhSb0xtWnNiMjl5S0U0Z0tpQlFLU3dnU0NBaFBUMGdJVEVnSmlZZ0tHVXVjM1I1YkdVdWQybGtkR2dnUFNCVElDc2dJbkI0SWl3Z1pTNXpkSGxzWlM1b1pXbG5hSFFnUFNCT0lDc2dJbkI0SWlrc0lIUm9hWE11YzJWMFZtbGxkM0J2Y25Rb01Dd2dNQ3dnVXl3Z1RpazdDaUFnSUNCOUxDQjBhR2x6TG1kbGRFUnlZWGRwYm1kQ2RXWm1aWEpUYVhwbElEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG5ObGRDaHJJQ29nVUN3Z1FpQXFJRkFwTG1ac2IyOXlLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRVJ5WVhkcGJtZENkV1ptWlhKVGFYcGxJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpd2dTQ2tnZXdvZ0lDQWdJQ0FnSUdzZ1BTQlRMQ0JDSUQwZ1Rpd2dVQ0E5SUVnc0lHVXVkMmxrZEdnZ1BTQk5ZWFJvTG1ac2IyOXlLRk1nS2lCSUtTd2daUzVvWldsbmFIUWdQU0JOWVhSb0xtWnNiMjl5S0U0Z0tpQklLU3dnZEdocGN5NXpaWFJXYVdWM2NHOXlkQ2d3TENBd0xDQlRMQ0JPS1RzS0lDQWdJSDBzSUhSb2FYTXVaMlYwUTNWeWNtVnVkRlpwWlhkd2IzSjBJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVExtTnZjSGtvUVNrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEZacFpYZHdiM0owSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbU52Y0hrb1JDazdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGWnBaWGR3YjNKMElEMGdablZ1WTNScGIyNG9VeXdnVGl3Z1NDd2dlaWtnZXdvZ0lDQWdJQ0FnSUZNdWFYTldaV04wYjNJMElEOGdSQzV6WlhRb1V5NTRMQ0JUTG5rc0lGTXVlaXdnVXk1M0tTQTZJRVF1YzJWMEtGTXNJRTRzSUVnc0lIb3BMQ0I0WlM1MmFXVjNjRzl5ZENoQkxtTnZjSGtvUkNrdWJYVnNkR2x3YkhsVFkyRnNZWElvVUNrdVpteHZiM0lvS1NrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEZOamFYTnpiM0lnUFNCbWRXNWpkR2x2YmloVEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGTXVZMjl3ZVNoVktUc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFUyTnBjM052Y2lBOUlHWjFibU4wYVc5dUtGTXNJRTRzSUVnc0lIb3BJSHNLSUNBZ0lDQWdJQ0JUTG1selZtVmpkRzl5TkNBL0lGVXVjMlYwS0ZNdWVDd2dVeTU1TENCVExub3NJRk11ZHlrZ09pQlZMbk5sZENoVExDQk9MQ0JJTENCNktTd2dlR1V1YzJOcGMzTnZjaWhNTG1OdmNIa29WU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9VQ2t1Wm14dmIzSW9LU2s3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRk5qYVhOemIzSlVaWE4wSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFWTdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGTmphWE56YjNKVVpYTjBJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lIaGxMbk5sZEZOamFYTnpiM0pVWlhOMEtFWWdQU0JUS1RzS0lDQWdJSDBzSUhSb2FYTXVjMlYwVDNCaGNYVmxVMjl5ZENBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0IzSUQwZ1V6c0tJQ0FnSUgwc0lIUm9hWE11YzJWMFZISmhibk53WVhKbGJuUlRiM0owSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJRVVnUFNCVE93b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSRGJHVmhja052Ykc5eUlEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG1OdmNIa29jbVV1WjJWMFEyeGxZWEpEYjJ4dmNpZ3BLVHNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBRMnhsWVhKRGIyeHZjaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxMbk5sZEVOc1pXRnlRMjlzYjNJdVlYQndiSGtvY21Vc0lHRnlaM1Z0Wlc1MGN5azdDaUFnSUNCOUxDQjBhR2x6TG1kbGRFTnNaV0Z5UVd4d2FHRWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY21VdVoyVjBRMnhsWVhKQmJIQm9ZU2dwT3dvZ0lDQWdmU3dnZEdocGN5NXpaWFJEYkdWaGNrRnNjR2hoSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjbVV1YzJWMFEyeGxZWEpCYkhCb1lTNWhjSEJzZVNoeVpTd2dZWEpuZFcxbGJuUnpLVHNLSUNBZ0lIMHNJSFJvYVhNdVkyeGxZWElnUFNCbWRXNWpkR2x2YmloVExDQk9MQ0JJS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSG9nUFNBd093b2dJQ0FnSUNBZ0lDaFRJRDA5UFNCMmIybGtJREFnZkh3Z1V5a2dKaVlnS0hvZ2ZEMGdNVFl6T0RRcExDQW9UaUE5UFQwZ2RtOXBaQ0F3SUh4OElFNHBJQ1ltSUNoNklIdzlJREkxTmlrc0lDaElJRDA5UFNCMmIybGtJREFnZkh3Z1NDa2dKaVlnS0hvZ2ZEMGdNVEF5TkNrc0lGa3VZMnhsWVhJb2VpazdDaUFnSUNCOUxDQjBhR2x6TG1Oc1pXRnlRMjlzYjNJZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtTnNaV0Z5S0NFd0xDQWhNU3dnSVRFcE93b2dJQ0FnZlN3Z2RHaHBjeTVqYkdWaGNrUmxjSFJvSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1amJHVmhjaWdoTVN3Z0lUQXNJQ0V4S1RzS0lDQWdJSDBzSUhSb2FYTXVZMnhsWVhKVGRHVnVZMmxzSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1amJHVmhjaWdoTVN3Z0lURXNJQ0V3S1RzS0lDQWdJSDBzSUhSb2FYTXVaR2x6Y0c5elpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUdVdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2lkMlZpWjJ4amIyNTBaWGgwYkc5emRDSXNJRVZsTENBaE1Ta3NJR1V1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaWQyVmlaMnhqYjI1MFpYaDBjbVZ6ZEc5eVpXUWlMQ0J0WlN3Z0lURXBMQ0JETG1ScGMzQnZjMlVvS1N3Z1ZDNWthWE53YjNObEtDa3NJRWN1WkdsemNHOXpaU2dwTENCTExtUnBjM0J2YzJVb0tTd2dkV1V1WkdsemNHOXpaU2dwTENCVVpTNWthWE53YjNObEtDa3NJRkl1WkdsemNHOXpaU2dwTENCUVpTNWthWE53YjNObEtDa3NJRkV1WkdsemNHOXpaU2dwTENCUkxuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk5sYzNOcGIyNXpkR0Z5ZENJc0lGVjBLU3dnVVM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSnpaWE56YVc5dVpXNWtJaXdnVDNRcExDQlhJQ1ltSUNoWExtUnBjM0J2YzJVb0tTd2dWeUE5SUc1MWJHd3BMQ0JNYmk1emRHOXdLQ2s3Q2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z1JXVW9VeWtnZXdvZ0lDQWdJQ0FnSUZNdWNISmxkbVZ1ZEVSbFptRjFiSFFvS1N3Z1kyOXVjMjlzWlM1c2IyY29JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUVOdmJuUmxlSFFnVEc5emRDNGlLU3dnZGlBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYldVb0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNXNiMmNvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklFTnZiblJsZUhRZ1VtVnpkRzl5WldRdUlpa3NJSFlnUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnVXlBOUlFOWxMbUYxZEc5U1pYTmxkQ3dnVGlBOUlDUXVaVzVoWW14bFpDd2dTQ0E5SUNRdVlYVjBiMVZ3WkdGMFpTd2dlaUE5SUNRdWJtVmxaSE5WY0dSaGRHVXNJSEVnUFNBa0xuUjVjR1U3Q2lBZ0lDQWdJQ0FnWldVb0tTd2dUMlV1WVhWMGIxSmxjMlYwSUQwZ1V5d2dKQzVsYm1GaWJHVmtJRDBnVGl3Z0pDNWhkWFJ2VlhCa1lYUmxJRDBnU0N3Z0pDNXVaV1ZrYzFWd1pHRjBaU0E5SUhvc0lDUXVkSGx3WlNBOUlIRTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJTWlNoVEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUU0Z1BTQlRMblJoY21kbGREc0tJQ0FnSUNBZ0lDQk9MbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCU1pTa3NJRzlsS0U0cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiMlVvVXlrZ2V3b2dJQ0FnSUNBZ0lFeGxLRk1wTENCSExuSmxiVzkyWlNoVEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRXhsS0ZNcElIc0tJQ0FnSUNBZ0lDQnNaWFFnVGlBOUlFY3VaMlYwS0ZNcExuQnliMmR5WVcxek93b2dJQ0FnSUNBZ0lFNGdJVDA5SUhadmFXUWdNQ0FtSmlBb1RpNW1iM0pGWVdOb0tHWjFibU4wYVc5dUtFZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1VHVXVjbVZzWldGelpWQnliMmR5WVcwb1NDazdDaUFnSUNBZ0lDQWdmU2tzSUZNdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBbUppQlFaUzV5Wld4bFlYTmxVMmhoWkdWeVEyRmphR1VvVXlrcE93b2dJQ0FnZlFvZ0lDQWdkR2hwY3k1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUxDQjZMQ0J4TENCaVpTa2dld29nSUNBZ0lDQWdJRTRnUFQwOUlHNTFiR3dnSmlZZ0tFNGdQU0JtWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJRUZsSUQwZ2NTNXBjMDFsYzJnZ0ppWWdjUzV0WVhSeWFYaFhiM0pzWkM1a1pYUmxjbTFwYm1GdWRDZ3BJRHdnTUN3Z1NXVWdQU0JzZFNoVExDQk9MQ0JJTENCNkxDQnhLVHNLSUNBZ0lDQWdJQ0I0WlM1elpYUk5ZWFJsY21saGJDaDZMQ0JCWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJSGRsSUQwZ1NDNXBibVJsZUN3Z1NHVWdQU0JJTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ2FXWWdLSGRsSUQwOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoSVpTQTlQVDBnZG05cFpDQXdJSHg4SUVobExtTnZkVzUwSUQwOVBTQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2gzWlM1amIzVnVkQ0E5UFQwZ01Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0JFWlNBOUlERTdDaUFnSUNBZ0lDQWdlaTUzYVhKbFpuSmhiV1VnUFQwOUlDRXdJQ1ltSUNoM1pTQTlJRk5sTG1kbGRGZHBjbVZtY21GdFpVRjBkSEpwWW5WMFpTaElLU3dnUkdVZ1BTQXlLU3dnVWk1elpYUjFjQ2h4TENCNkxDQkpaU3dnU0N3Z2QyVXBPd29nSUNBZ0lDQWdJR3hsZENCNlpTd2dhbVVnUFNCTlpUc0tJQ0FnSUNBZ0lDQjNaU0FoUFQwZ2JuVnNiQ0FtSmlBb2VtVWdQU0J6WlM1blpYUW9kMlVwTENCcVpTQTlJSFpsTENCcVpTNXpaWFJKYm1SbGVDaDZaU2twT3dvZ0lDQWdJQ0FnSUd4bGRDQlNiaUE5SUhkbElDRTlQU0J1ZFd4c0lEOGdkMlV1WTI5MWJuUWdPaUJJWlM1amIzVnVkQ3dnWldrZ1BTQklMbVJ5WVhkU1lXNW5aUzV6ZEdGeWRDQXFJRVJsTENCSFpTQTlJRWd1WkhKaGQxSmhibWRsTG1OdmRXNTBJQ29nUkdVc0lFaDBJRDBnWW1VZ0lUMDlJRzUxYkd3Z1B5QmlaUzV6ZEdGeWRDQXFJRVJsSURvZ01Dd2dZWFFnUFNCaVpTQWhQVDBnYm5Wc2JDQS9JR0psTG1OdmRXNTBJQ29nUkdVZ09pQXhJQzhnTUN3Z2EzUWdQU0JOWVhSb0xtMWhlQ2hsYVN3Z1NIUXBMQ0JIY2lBOUlFMWhkR2d1YldsdUtGSnVMQ0JsYVNBcklFZGxMQ0JJZENBcklHRjBLU0F0SURFc0lFZDBJRDBnVFdGMGFDNXRZWGdvTUN3Z1IzSWdMU0JyZENBcklERXBPd29nSUNBZ0lDQWdJR2xtSUNoSGRDQWhQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NTNXBjMDFsYzJncElIb3VkMmx5WldaeVlXMWxJRDA5UFNBaE1DQS9JQ2g0WlM1elpYUk1hVzVsVjJsa2RHZ29laTUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnS2lCQ1pTZ3BLU3dnYW1VdWMyVjBUVzlrWlNneEtTa2dPaUJxWlM1elpYUk5iMlJsS0RRcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2h4TG1selRHbHVaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGcDBJRDBnZWk1c2FXNWxkMmxrZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCYWRDQTlQVDBnZG05cFpDQXdJQ1ltSUNoYWRDQTlJREVwTENCNFpTNXpaWFJNYVc1bFYybGtkR2dvV25RZ0tpQkNaU2dwS1N3Z2NTNXBjMHhwYm1WVFpXZHRaVzUwY3lBL0lHcGxMbk5sZEUxdlpHVW9NU2tnT2lCeExtbHpUR2x1WlV4dmIzQWdQeUJxWlM1elpYUk5iMlJsS0RJcElEb2dhbVV1YzJWMFRXOWtaU2d6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIRXVhWE5RYjJsdWRITWdQeUJxWlM1elpYUk5iMlJsS0RBcElEb2djUzVwYzFOd2NtbDBaU0FtSmlCcVpTNXpaWFJOYjJSbEtEUXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jUzVwYzBsdWMzUmhibU5sWkUxbGMyZ3BJR3BsTG5KbGJtUmxja2x1YzNSaGJtTmxjeWhyZEN3Z1IzUXNJSEV1WTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoSUxtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JhZERFZ1BTQk5ZWFJvTG0xcGJpaElMbWx1YzNSaGJtTmxRMjkxYm5Rc0lFZ3VYMjFoZUVsdWMzUmhibU5sUTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhbVV1Y21WdVpHVnlTVzV6ZEdGdVkyVnpLR3QwTENCSGRDd2dXblF4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHcGxMbkpsYm1SbGNpaHJkQ3dnUjNRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0lIUm9hWE11WTI5dGNHbHNaU0E5SUdaMWJtTjBhVzl1S0ZNc0lFNHBJSHNLSUNBZ0lDQWdJQ0JrSUQwZ1ZDNW5aWFFvVXlrc0lHUXVhVzVwZENncExDQnRMbkIxYzJnb1pDa3NJRk11ZEhKaGRtVnljMlZXYVhOcFlteGxLR1oxYm1OMGFXOXVLRWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdTQzVwYzB4cFoyaDBJQ1ltSUVndWJHRjVaWEp6TG5SbGMzUW9UaTVzWVhsbGNuTXBJQ1ltSUNoa0xuQjFjMmhNYVdkb2RDaElLU3dnU0M1allYTjBVMmhoWkc5M0lDWW1JR1F1Y0hWemFGTm9ZV1J2ZHloSUtTazdDaUFnSUNBZ0lDQWdmU2tzSUdRdWMyVjBkWEJNYVdkb2RITW9lQzV3YUhsemFXTmhiR3g1UTI5eWNtVmpkRXhwWjJoMGN5a3NJRk11ZEhKaGRtVnljMlVvWm5WdVkzUnBiMjRvU0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VpQTlJRWd1YldGMFpYSnBZV3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2g2S1NCcFppQW9RWEp5WVhrdWFYTkJjbkpoZVNoNktTa2dabTl5S0d4bGRDQnhJRDBnTURzZ2NTQThJSG91YkdWdVozUm9PeUJ4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0psSUQwZ2VsdHhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGh2S0dKbExDQlRMQ0JJS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSGh2S0hvc0lGTXNJRWdwT3dvZ0lDQWdJQ0FnSUgwcExDQnRMbkJ2Y0NncExDQmtJRDBnYm5Wc2JEc0tJQ0FnSUgwN0NpQWdJQ0JzWlhRZ1dHVWdQU0J1ZFd4c093b2dJQ0FnWm5WdVkzUnBiMjRnVjJVb1V5a2dld29nSUNBZ0lDQWdJRmhsSUNZbUlGaGxLRk1wT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1ZYUW9LU0I3Q2lBZ0lDQWdJQ0FnVEc0dWMzUnZjQ2dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1QzUW9LU0I3Q2lBZ0lDQWdJQ0FnVEc0dWMzUmhjblFvS1RzS0lDQWdJSDBLSUNBZ0lHeGxkQ0JNYmlBOUlHNWxkeUJ5YURzS0lDQWdJRXh1TG5ObGRFRnVhVzFoZEdsdmJreHZiM0FvVjJVcExDQjBlWEJsYjJZZ2QybHVaRzkzSUR3Z0luVWlJQ1ltSUV4dUxuTmxkRU52Ym5SbGVIUW9kMmx1Wkc5M0tTd2dkR2hwY3k1elpYUkJibWx0WVhScGIyNU1iMjl3SUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJRmhsSUQwZ1V5d2dVUzV6WlhSQmJtbHRZWFJwYjI1TWIyOXdLRk1wTENCVElEMDlQU0J1ZFd4c0lEOGdURzR1YzNSdmNDZ3BJRG9nVEc0dWMzUmhjblFvS1RzS0lDQWdJSDBzSUZFdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWMyVnpjMmx2Ym5OMFlYSjBJaXdnVlhRcExDQlJMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk5sYzNOcGIyNWxibVFpTENCUGRDa3NJSFJvYVhNdWNtVnVaR1Z5SUQwZ1puVnVZM1JwYjI0b1V5d2dUaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaE9JQ0U5UFNCMmIybGtJREFnSmlZZ1RpNXBjME5oYldWeVlTQWhQVDBnSVRBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjaTV5Wlc1a1pYSTZJR05oYldWeVlTQnBjeUJ1YjNRZ1lXNGdhVzV6ZEdGdVkyVWdiMllnVkVoU1JVVXVRMkZ0WlhKaExpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDJJRDA5UFNBaE1Da2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lGTXVZWFYwYjFWd1pHRjBaU0E5UFQwZ0lUQWdKaVlnVXk1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNncExDQk9MbkJoY21WdWRDQTlQVDBnYm5Wc2JDQW1KaUJPTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0Nrc0lGRXVaVzVoWW14bFpDQTlQVDBnSVRBZ0ppWWdVUzVwYzFCeVpYTmxiblJwYm1jZ1BUMDlJQ0V3SUNZbUlDaFJMbU5oYldWeVlVRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JRkV1ZFhCa1lYUmxRMkZ0WlhKaEtFNHBMQ0JPSUQwZ1VTNW5aWFJEWVcxbGNtRW9LU2tzSUZNdWFYTlRZMlZ1WlNBOVBUMGdJVEFnSmlZZ1V5NXZia0psWm05eVpWSmxibVJsY2loNExDQlRMQ0JPTENCZktTd2daQ0E5SUZRdVoyVjBLRk1zSUcwdWJHVnVaM1JvS1N3Z1pDNXBibWwwS0Nrc0lHMHVjSFZ6YUNoa0tTd2dhR1V1YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhPTG5CeWIycGxZM1JwYjI1TllYUnlhWGdzSUU0dWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTd2dibVV1YzJWMFJuSnZiVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29hR1VwTENCV0lEMGdkR2hwY3k1c2IyTmhiRU5zYVhCd2FXNW5SVzVoWW14bFpDd2dZMlVnUFNCS0xtbHVhWFFvZEdocGN5NWpiR2x3Y0dsdVoxQnNZVzVsY3l3Z1Zpd2dUaWtzSUhVZ1BTQkRMbWRsZENoVExDQm1MbXhsYm1kMGFDa3NJSFV1YVc1cGRDZ3BMQ0JtTG5CMWMyZ29kU2tzSUZGaEtGTXNJRTRzSURBc0lIZ3VjMjl5ZEU5aWFtVmpkSE1wTENCMUxtWnBibWx6YUNncExDQjRMbk52Y25SUFltcGxZM1J6SUQwOVBTQWhNQ0FtSmlCMUxuTnZjblFvZHl3Z1JTa3NJR05sSUQwOVBTQWhNQ0FtSmlCS0xtSmxaMmx1VTJoaFpHOTNjeWdwT3dvZ0lDQWdJQ0FnSUd4bGRDQklJRDBnWkM1emRHRjBaUzV6YUdGa2IzZHpRWEp5WVhrN0NpQWdJQ0FnSUNBZ2FXWWdLQ1F1Y21WdVpHVnlLRWdzSUZNc0lFNHBMQ0JqWlNBOVBUMGdJVEFnSmlZZ1NpNWxibVJUYUdGa2IzZHpLQ2tzSUhSb2FYTXVhVzVtYnk1aGRYUnZVbVZ6WlhRZ1BUMDlJQ0V3SUNZbUlIUm9hWE11YVc1bWJ5NXlaWE5sZENncExDQnlaUzV5Wlc1a1pYSW9kU3dnVXlrc0lHUXVjMlYwZFhCTWFXZG9kSE1vZUM1d2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjeWtzSUU0dWFYTkJjbkpoZVVOaGJXVnlZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZWlBOUlFNHVZMkZ0WlhKaGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J4SUQwZ01Dd2dZbVVnUFNCNkxteGxibWQwYURzZ2NTQThJR0psT3lCeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVGbElEMGdlbHR4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUV0aEtIVXNJRk1zSUVGbExDQkJaUzUyYVdWM2NHOXlkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1MyRW9kU3dnVXl3Z1RpazdDaUFnSUNBZ0lDQWdYeUFoUFQwZ2JuVnNiQ0FtSmlBb2FpNTFjR1JoZEdWTmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkQ2hmS1N3Z2FpNTFjR1JoZEdWU1pXNWtaWEpVWVhKblpYUk5hWEJ0WVhBb1h5a3BMQ0JUTG1selUyTmxibVVnUFQwOUlDRXdJQ1ltSUZNdWIyNUJablJsY2xKbGJtUmxjaWg0TENCVExDQk9LU3dnZUdVdVluVm1abVZ5Y3k1a1pYQjBhQzV6WlhSVVpYTjBLQ0V3S1N3Z2VHVXVZblZtWm1WeWN5NWtaWEIwYUM1elpYUk5ZWE5yS0NFd0tTd2dlR1V1WW5WbVptVnljeTVqYjJ4dmNpNXpaWFJOWVhOcktDRXdLU3dnZUdVdWMyVjBVRzlzZVdkdmJrOW1abk5sZENnaE1Ta3NJRkl1Y21WelpYUkVaV1poZFd4MFUzUmhkR1VvS1N3Z2VTQTlJQzB4TENCaUlEMGdiblZzYkN3Z2JTNXdiM0FvS1N3Z2JTNXNaVzVuZEdnZ1BpQXdJRDhnWkNBOUlHMWJiUzVzWlc1bmRHZ2dMU0F4WFNBNklHUWdQU0J1ZFd4c0xDQm1MbkJ2Y0NncExDQm1MbXhsYm1kMGFDQStJREFnUHlCMUlEMGdabHRtTG14bGJtZDBhQ0F0SURGZElEb2dkU0E5SUc1MWJHdzdDaUFnSUNCOU93b2dJQ0FnWm5WdVkzUnBiMjRnVVdFb1V5d2dUaXdnU0N3Z2Vpa2dld29nSUNBZ0lDQWdJR2xtSUNoVExuWnBjMmxpYkdVZ1BUMDlJQ0V4S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tGTXViR0Y1WlhKekxuUmxjM1FvVGk1c1lYbGxjbk1wS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoVExtbHpSM0p2ZFhBcElFZ2dQU0JUTG5KbGJtUmxjazl5WkdWeU93b2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hUTG1selRFOUVLU0JUTG1GMWRHOVZjR1JoZEdVZ1BUMDlJQ0V3SUNZbUlGTXVkWEJrWVhSbEtFNHBPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVExtbHpUR2xuYUhRcElHUXVjSFZ6YUV4cFoyaDBLRk1wTENCVExtTmhjM1JUYUdGa2IzY2dKaVlnWkM1d2RYTm9VMmhoWkc5M0tGTXBPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVExtbHpVM0J5YVhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVZNdVpuSjFjM1IxYlVOMWJHeGxaQ0I4ZkNCdVpTNXBiblJsY25ObFkzUnpVM0J5YVhSbEtGTXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VpQW1KaUJzWlM1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9VeTV0WVhSeWFYaFhiM0pzWkNrdVlYQndiSGxOWVhSeWFYZzBLR2hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVdVZ1BTQlVaUzUxY0dSaGRHVW9VeWtzSUVsbElEMGdVeTV0WVhSbGNtbGhiRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCSlpTNTJhWE5wWW14bElDWW1JSFV1Y0hWemFDaFRMQ0JCWlN3Z1NXVXNJRWdzSUd4bExub3NJRzUxYkd3cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0NoVExtbHpUV1Z6YUNCOGZDQlRMbWx6VEdsdVpTQjhmQ0JUTG1selVHOXBiblJ6S1NBbUppQW9VeTVwYzFOcmFXNXVaV1JOWlhOb0lDWW1JRk11YzJ0bGJHVjBiMjR1Wm5KaGJXVWdJVDA5SUU5bExuSmxibVJsY2k1bWNtRnRaU0FtSmlBb1V5NXphMlZzWlhSdmJpNTFjR1JoZEdVb0tTd2dVeTV6YTJWc1pYUnZiaTVtY21GdFpTQTlJRTlsTG5KbGJtUmxjaTVtY21GdFpTa3NJQ0ZUTG1aeWRYTjBkVzFEZFd4c1pXUWdmSHdnYm1VdWFXNTBaWEp6WldOMGMwOWlhbVZqZENoVEtTa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSG9nSmlZZ2JHVXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0ZNdWJXRjBjbWw0VjI5eWJHUXBMbUZ3Y0d4NVRXRjBjbWw0TkNob1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVdVeElEMGdWR1V1ZFhCa1lYUmxLRk1wTENCSlpURWdQU0JUTG0xaGRHVnlhV0ZzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvU1dVeEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjNaU0E5SUVGbE1TNW5jbTkxY0hNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQklaU0E5SURBc0lFUmxJRDBnZDJVdWJHVnVaM1JvT3lCSVpTQThJRVJsT3lCSVpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhwbElEMGdkMlZiU0dWZExDQnFaU0E5SUVsbE1WdDZaUzV0WVhSbGNtbGhiRWx1WkdWNFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FtVWdKaVlnYW1VdWRtbHphV0pzWlNBbUppQjFMbkIxYzJnb1V5d2dRV1V4TENCcVpTd2dTQ3dnYkdVdWVpd2dlbVVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCSlpURXVkbWx6YVdKc1pTQW1KaUIxTG5CMWMyZ29VeXdnUVdVeExDQkpaVEVzSUVnc0lHeGxMbm9zSUc1MWJHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JpWlNBOUlGTXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkJaVElnUFNBd0xDQkpaVElnUFNCaVpTNXNaVzVuZEdnN0lFRmxNaUE4SUVsbE1qc2dRV1V5S3lzcFVXRW9ZbVZiUVdVeVhTd2dUaXdnU0N3Z2VpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJMWVNoVExDQk9MQ0JJTENCNktTQjdDaUFnSUNBZ0lDQWdiR1YwSUhFZ1BTQlRMbTl3WVhGMVpTd2dZbVVnUFNCVExuUnlZVzV6YldsemMybDJaU3dnUVdVZ1BTQlRMblJ5WVc1emNHRnlaVzUwT3dvZ0lDQWdJQ0FnSUdRdWMyVjBkWEJNYVdkb2RITldhV1YzS0VncExDQmlaUzVzWlc1bmRHZ2dQaUF3SUNZbUlHOTFLSEVzSUU0c0lFZ3BMQ0I2SUNZbUlIaGxMblpwWlhkd2IzSjBLRUV1WTI5d2VTaDZLU2tzSUhFdWJHVnVaM1JvSUQ0Z01DQW1KaUJyY2loeExDQk9MQ0JJS1N3Z1ltVXViR1Z1WjNSb0lENGdNQ0FtSmlCcmNpaGlaU3dnVGl3Z1NDa3NJRUZsTG14bGJtZDBhQ0ErSURBZ0ppWWdhM0lvUVdVc0lFNHNJRWdwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2IzVW9VeXdnVGl3Z1NDa2dld29nSUNBZ0lDQWdJR2xtSUNoWElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJaU0E5SUc4Z1BUMDlJQ0V3SUNZbUlHZGxMbWx6VjJWaVIwd3lJRDA5UFNBaE1DQS9JRmh6SURvZ1FYUTdDaUFnSUNBZ0lDQWdJQ0FnSUZjZ1BTQnVaWGNnUVdVb01UQXlOQ3dnTVRBeU5Dd2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaMlZ1WlhKaGRHVk5hWEJ0WVhCek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUmxMbU52Ym5abGNuUW9hMjRwSUNFOVBTQnVkV3hzSUQ4Z2EyNGdPaUJ5Yml3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxcGJrWnBiSFJsY2pvZ1ZXa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZV2RHYVd4MFpYSTZJSEowTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDNKaGNGTTZJSFowTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDNKaGNGUTZJSFowTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsT2lCNVpTNW9ZWE1vSWxkRlFrZE1YMjExYkhScGMyRnRjR3hsWkY5eVpXNWtaWEpmZEc5ZmRHVjRkSFZ5WlNJcENpQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdlaUE5SUhndVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0NrN0NpQWdJQ0FnSUNBZ2VDNXpaWFJTWlc1a1pYSlVZWEpuWlhRb1Z5a3NJSGd1WTJ4bFlYSW9LVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NTQTlJSGd1ZEc5dVpVMWhjSEJwYm1jN0NpQWdJQ0FnSUNBZ2VDNTBiMjVsVFdGd2NHbHVaeUE5SUY5dUxDQnJjaWhUTENCT0xDQklLU3dnZUM1MGIyNWxUV0Z3Y0dsdVp5QTlJSEVzSUdvdWRYQmtZWFJsVFhWc2RHbHpZVzF3YkdWU1pXNWtaWEpVWVhKblpYUW9WeWtzSUdvdWRYQmtZWFJsVW1WdVpHVnlWR0Z5WjJWMFRXbHdiV0Z3S0ZjcExDQjRMbk5sZEZKbGJtUmxjbFJoY21kbGRDaDZLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUd0eUtGTXNJRTRzSUVncElIc0tJQ0FnSUNBZ0lDQnNaWFFnZWlBOUlFNHVhWE5UWTJWdVpTQTlQVDBnSVRBZ1B5Qk9MbTkyWlhKeWFXUmxUV0YwWlhKcFlXd2dPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NTQTlJREFzSUdKbElEMGdVeTVzWlc1bmRHZzdJSEVnUENCaVpUc2djU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVGbElEMGdVMXR4WFN3Z1NXVWdQU0JCWlM1dlltcGxZM1FzSUhkbElEMGdRV1V1WjJWdmJXVjBjbmtzSUVobElEMGdlaUE5UFQwZ2JuVnNiQ0EvSUVGbExtMWhkR1Z5YVdGc0lEb2dlaXdnUkdVZ1BTQkJaUzVuY205MWNEc0tJQ0FnSUNBZ0lDQWdJQ0FnU1dVdWJHRjVaWEp6TG5SbGMzUW9TQzVzWVhsbGNuTXBJQ1ltSUdGMUtFbGxMQ0JPTENCSUxDQjNaU3dnU0dVc0lFUmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaGRTaFRMQ0JPTENCSUxDQjZMQ0J4TENCaVpTa2dld29nSUNBZ0lDQWdJRk11YjI1Q1pXWnZjbVZTWlc1a1pYSW9lQ3dnVGl3Z1NDd2dlaXdnY1N3Z1ltVXBMQ0JUTG0xdlpHVnNWbWxsZDAxaGRISnBlQzV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLRWd1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sTENCVExtMWhkSEpwZUZkdmNteGtLU3dnVXk1dWIzSnRZV3hOWVhSeWFYZ3VaMlYwVG05eWJXRnNUV0YwY21sNEtGTXViVzlrWld4V2FXVjNUV0YwY21sNEtTd2djUzV2YmtKbFptOXlaVkpsYm1SbGNpaDRMQ0JPTENCSUxDQjZMQ0JUTENCaVpTa3NJSEV1ZEhKaGJuTndZWEpsYm5RZ1BUMDlJQ0V3SUNZbUlIRXVjMmxrWlNBOVBUMGdRMmtnUHlBb2NTNXphV1JsSUQwZ2FYUXNJSEV1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnZUM1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRb1NDd2dUaXdnZWl3Z2NTd2dVeXdnWW1VcExDQnhMbk5wWkdVZ1BTQkJhU3dnY1M1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCNExuSmxibVJsY2tKMVptWmxja1JwY21WamRDaElMQ0JPTENCNkxDQnhMQ0JUTENCaVpTa3NJSEV1YzJsa1pTQTlJRU5wS1NBNklIZ3VjbVZ1WkdWeVFuVm1abVZ5UkdseVpXTjBLRWdzSUU0c0lIb3NJSEVzSUZNc0lHSmxLU3dnVXk1dmJrRm1kR1Z5VW1WdVpHVnlLSGdzSUU0c0lFZ3NJSG9zSUhFc0lHSmxLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhodktGTXNJRTRzSUVncElIc0tJQ0FnSUNBZ0lDQk9MbWx6VTJObGJtVWdJVDA5SUNFd0lDWW1JQ2hPSUQwZ1ptVXBPd29nSUNBZ0lDQWdJR3hsZENCNklEMGdSeTVuWlhRb1V5a3NJSEVnUFNCa0xuTjBZWFJsTG14cFoyaDBjeXdnWW1VZ1BTQmtMbk4wWVhSbExuTm9ZV1J2ZDNOQmNuSmhlU3dnUVdVZ1BTQnhMbk4wWVhSbExuWmxjbk5wYjI0c0lFbGxJRDBnVUdVdVoyVjBVR0Z5WVcxbGRHVnljeWhUTENCeExuTjBZWFJsTENCaVpTd2dUaXdnU0Nrc0lIZGxJRDBnVUdVdVoyVjBVSEp2WjNKaGJVTmhZMmhsUzJWNUtFbGxLU3dnU0dVZ1BTQjZMbkJ5YjJkeVlXMXpPd29nSUNBZ0lDQWdJSG91Wlc1MmFYSnZibTFsYm5RZ1BTQlRMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1B5Qk9MbVZ1ZG1seWIyNXRaVzUwSURvZ2JuVnNiQ3dnZWk1bWIyY2dQU0JPTG1adlp5d2dlaTVsYm5aTllYQWdQU0FvVXk1cGMwMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNJRDhnZFdVZ09pQkxLUzVuWlhRb1V5NWxiblpOWVhBZ2ZId2dlaTVsYm5acGNtOXViV1Z1ZENrc0lFaGxJRDA5UFNCMmIybGtJREFnSmlZZ0tGTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJRkpsS1N3Z1NHVWdQU0J1WlhjZ1RXRndMQ0I2TG5CeWIyZHlZVzF6SUQwZ1NHVXBPd29nSUNBZ0lDQWdJR3hsZENCRVpTQTlJRWhsTG1kbGRDaDNaU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tFUmxJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hvdVkzVnljbVZ1ZEZCeWIyZHlZVzBnUFQwOUlFUmxJQ1ltSUhvdWJHbG5hSFJ6VTNSaGRHVldaWEp6YVc5dUlEMDlQU0JCWlNrZ2NtVjBkWEp1SUdWc0tGTXNJRWxsS1N3Z1JHVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElFbGxMblZ1YVdadmNtMXpJRDBnVUdVdVoyVjBWVzVwWm05eWJYTW9VeWtzSUZNdWIyNUNkV2xzWkNoSUxDQkpaU3dnZUNrc0lGTXViMjVDWldadmNtVkRiMjF3YVd4bEtFbGxMQ0I0S1N3Z1JHVWdQU0JRWlM1aFkzRjFhWEpsVUhKdlozSmhiU2hKWlN3Z2QyVXBMQ0JJWlM1elpYUW9kMlVzSUVSbEtTd2dlaTUxYm1sbWIzSnRjeUE5SUVsbExuVnVhV1p2Y20xek93b2dJQ0FnSUNBZ0lHeGxkQ0I2WlNBOUlIb3VkVzVwWm05eWJYTTdDaUFnSUNBZ0lDQWdLQ0ZUTG1selUyaGhaR1Z5VFdGMFpYSnBZV3dnSmlZZ0lWTXVhWE5TWVhkVGFHRmtaWEpOWVhSbGNtbGhiQ0I4ZkNCVExtTnNhWEJ3YVc1bklEMDlQU0FoTUNrZ0ppWWdLSHBsTG1Oc2FYQndhVzVuVUd4aGJtVnpJRDBnU2k1MWJtbG1iM0p0S1N3Z1pXd29VeXdnU1dVcExDQjZMbTVsWldSelRHbG5hSFJ6SUQwZ2FIVW9VeWtzSUhvdWJHbG5hSFJ6VTNSaGRHVldaWEp6YVc5dUlEMGdRV1VzSUhvdWJtVmxaSE5NYVdkb2RITWdKaVlnS0hwbExtRnRZbWxsYm5STWFXZG9kRU52Ykc5eUxuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1aGJXSnBaVzUwTENCNlpTNXNhV2RvZEZCeWIySmxMblpoYkhWbElEMGdjUzV6ZEdGMFpTNXdjbTlpWlN3Z2VtVXVaR2x5WldOMGFXOXVZV3hNYVdkb2RITXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExtUnBjbVZqZEdsdmJtRnNMQ0I2WlM1a2FYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNjeTUyWVd4MVpTQTlJSEV1YzNSaGRHVXVaR2x5WldOMGFXOXVZV3hUYUdGa2IzY3NJSHBsTG5Od2IzUk1hV2RvZEhNdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5Od2IzUXNJSHBsTG5Od2IzUk1hV2RvZEZOb1lXUnZkM011ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbk53YjNSVGFHRmtiM2NzSUhwbExuSmxZM1JCY21WaFRHbG5hSFJ6TG5aaGJIVmxJRDBnY1M1emRHRjBaUzV5WldOMFFYSmxZU3dnZW1VdWJIUmpYekV1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbkpsWTNSQmNtVmhURlJETVN3Z2VtVXViSFJqWHpJdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5KbFkzUkJjbVZoVEZSRE1pd2dlbVV1Y0c5cGJuUk1hV2RvZEhNdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5CdmFXNTBMQ0I2WlM1d2IybHVkRXhwWjJoMFUyaGhaRzkzY3k1MllXeDFaU0E5SUhFdWMzUmhkR1V1Y0c5cGJuUlRhR0ZrYjNjc0lIcGxMbWhsYldsemNHaGxjbVZNYVdkb2RITXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExtaGxiV2tzSUhwbExtUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRndMblpoYkhWbElEMGdjUzV6ZEdGMFpTNWthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjQ3dnZW1VdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYUnlhWGd1ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbVJwY21WamRHbHZibUZzVTJoaFpHOTNUV0YwY21sNExDQjZaUzV6Y0c5MFUyaGhaRzkzVFdGd0xuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1emNHOTBVMmhoWkc5M1RXRndMQ0I2WlM1emNHOTBVMmhoWkc5M1RXRjBjbWw0TG5aaGJIVmxJRDBnY1M1emRHRjBaUzV6Y0c5MFUyaGhaRzkzVFdGMGNtbDRMQ0I2WlM1d2IybHVkRk5vWVdSdmQwMWhjQzUyWVd4MVpTQTlJSEV1YzNSaGRHVXVjRzlwYm5SVGFHRmtiM2ROWVhBc0lIcGxMbkJ2YVc1MFUyaGhaRzkzVFdGMGNtbDRMblpoYkhWbElEMGdjUzV6ZEdGMFpTNXdiMmx1ZEZOb1lXUnZkMDFoZEhKcGVDazdDaUFnSUNBZ0lDQWdiR1YwSUdwbElEMGdSR1V1WjJWMFZXNXBabTl5YlhNb0tTd2dVbTRnUFNCaWJpNXpaWEZYYVhSb1ZtRnNkV1VvYW1VdWMyVnhMQ0I2WlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhvdVkzVnljbVZ1ZEZCeWIyZHlZVzBnUFNCRVpTd2dlaTUxYm1sbWIzSnRjMHhwYzNRZ1BTQlNiaXdnUkdVN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmxiQ2hUTENCT0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUVnZ1BTQkhMbWRsZENoVEtUc0tJQ0FnSUNBZ0lDQklMbTkxZEhCMWRFVnVZMjlrYVc1bklEMGdUaTV2ZFhSd2RYUkZibU52WkdsdVp5d2dTQzVwYm5OMFlXNWphVzVuSUQwZ1RpNXBibk4wWVc1amFXNW5MQ0JJTG5OcmFXNXVhVzVuSUQwZ1RpNXphMmx1Ym1sdVp5d2dTQzV0YjNKd2FGUmhjbWRsZEhNZ1BTQk9MbTF2Y25Cb1ZHRnlaMlYwY3l3Z1NDNXRiM0p3YUU1dmNtMWhiSE1nUFNCT0xtMXZjbkJvVG05eWJXRnNjeXdnU0M1dGIzSndhRlJoY21kbGRITkRiM1Z1ZENBOUlFNHViVzl5Y0doVVlYSm5aWFJ6UTI5MWJuUXNJRWd1Ym5WdFEyeHBjSEJwYm1kUWJHRnVaWE1nUFNCT0xtNTFiVU5zYVhCd2FXNW5VR3hoYm1WekxDQklMbTUxYlVsdWRHVnljMlZqZEdsdmJpQTlJRTR1Ym5WdFEyeHBjRWx1ZEdWeWMyVmpkR2x2Yml3Z1NDNTJaWEowWlhoQmJIQm9ZWE1nUFNCT0xuWmxjblJsZUVGc2NHaGhjeXdnU0M1MlpYSjBaWGhVWVc1blpXNTBjeUE5SUU0dWRtVnlkR1Y0VkdGdVoyVnVkSE1zSUVndWRHOXVaVTFoY0hCcGJtY2dQU0JPTG5SdmJtVk5ZWEJ3YVc1bk93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiSFVvVXl3Z1Rpd2dTQ3dnZWl3Z2NTa2dld29nSUNBZ0lDQWdJRTR1YVhOVFkyVnVaU0FoUFQwZ0lUQWdKaVlnS0U0Z1BTQm1aU2tzSUdvdWNtVnpaWFJVWlhoMGRYSmxWVzVwZEhNb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnWW1VZ1BTQk9MbVp2Wnl3Z1FXVWdQU0I2TG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dQeUJPTG1WdWRtbHliMjV0Wlc1MElEb2diblZzYkN3Z1NXVWdQU0JmSUQwOVBTQnVkV3hzSUQ4Z2VDNXZkWFJ3ZFhSRmJtTnZaR2x1WnlBNklGOHVkR1Y0ZEhWeVpTNWxibU52WkdsdVp5d2dkMlVnUFNBb2VpNXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUQ4Z2RXVWdPaUJMS1M1blpYUW9laTVsYm5aTllYQWdmSHdnUVdVcExDQklaU0E5SUhvdWRtVnlkR1Y0UTI5c2IzSnpJRDA5UFNBaE1DQW1KaUFoSVVndVlYUjBjbWxpZFhSbGN5NWpiMnh2Y2lBbUppQklMbUYwZEhKcFluVjBaWE11WTI5c2IzSXVhWFJsYlZOcGVtVWdQVDA5SURRc0lFUmxJRDBnSVNGNkxtNXZjbTFoYkUxaGNDQW1KaUFoSVVndVlYUjBjbWxpZFhSbGN5NTBZVzVuWlc1MExDQjZaU0E5SUNFaFNDNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0c0lHcGxJRDBnSVNGSUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dzSUZKdUlEMGdTQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNGdQeUJJTG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaTVzWlc1bmRHZ2dPaUF3TENCbGFTQTlJSG91ZEc5dVpVMWhjSEJsWkNBL0lIZ3VkRzl1WlUxaGNIQnBibWNnT2lCZmJpd2dSMlVnUFNCSExtZGxkQ2g2S1N3Z1NIUWdQU0JrTG5OMFlYUmxMbXhwWjJoMGN6c0tJQ0FnSUNBZ0lDQnBaaUFvWTJVZ1BUMDlJQ0V3SUNZbUlDaFdJRDA5UFNBaE1DQjhmQ0JUSUNFOVBTQmlLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUhRZ1BTQlRJRDA5UFNCaUlDWW1JSG91YVdRZ1BUMDlJSGs3Q2lBZ0lDQWdJQ0FnSUNBZ0lFb3VjMlYwVTNSaGRHVW9laXdnVXl3Z1VIUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1lYUWdQU0FoTVRzS0lDQWdJQ0FnSUNCNkxuWmxjbk5wYjI0Z1BUMDlJRWRsTGw5ZmRtVnljMmx2YmlBL0lDaEhaUzV1WldWa2MweHBaMmgwY3lBbUppQkhaUzVzYVdkb2RITlRkR0YwWlZabGNuTnBiMjRnSVQwOUlFaDBMbk4wWVhSbExuWmxjbk5wYjI0Z2ZId2dSMlV1YjNWMGNIVjBSVzVqYjJScGJtY2dJVDA5SUVsbElIeDhJSEV1YVhOSmJuTjBZVzVqWldSTlpYTm9JQ1ltSUVkbExtbHVjM1JoYm1OcGJtY2dQVDA5SUNFeElIeDhJQ0Z4TG1selNXNXpkR0Z1WTJWa1RXVnphQ0FtSmlCSFpTNXBibk4wWVc1amFXNW5JRDA5UFNBaE1DQjhmQ0J4TG1selUydHBibTVsWkUxbGMyZ2dKaVlnUjJVdWMydHBibTVwYm1jZ1BUMDlJQ0V4SUh4OElDRnhMbWx6VTJ0cGJtNWxaRTFsYzJnZ0ppWWdSMlV1YzJ0cGJtNXBibWNnUFQwOUlDRXdJSHg4SUVkbExtVnVkazFoY0NBaFBUMGdkMlVnZkh3Z2VpNW1iMmNnSmlZZ1IyVXVabTluSUNFOVBTQmlaU0I4ZkNCSFpTNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNoSFpTNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5QWhQVDBnU2k1dWRXMVFiR0Z1WlhNZ2ZId2dSMlV1Ym5WdFNXNTBaWEp6WldOMGFXOXVJQ0U5UFNCS0xtNTFiVWx1ZEdWeWMyVmpkR2x2YmlrZ2ZId2dSMlV1ZG1WeWRHVjRRV3h3YUdGeklDRTlQU0JJWlNCOGZDQkhaUzUyWlhKMFpYaFVZVzVuWlc1MGN5QWhQVDBnUkdVZ2ZId2dSMlV1Ylc5eWNHaFVZWEpuWlhSeklDRTlQU0I2WlNCOGZDQkhaUzV0YjNKd2FFNXZjbTFoYkhNZ0lUMDlJR3BsSUh4OElFZGxMblJ2Ym1WTllYQndhVzVuSUNFOVBTQmxhU0I4ZkNCblpTNXBjMWRsWWtkTU1pQTlQVDBnSVRBZ0ppWWdSMlV1Ylc5eWNHaFVZWEpuWlhSelEyOTFiblFnSVQwOUlGSnVLU0FtSmlBb1lYUWdQU0FoTUNrZ09pQW9ZWFFnUFNBaE1Dd2dSMlV1WDE5MlpYSnphVzl1SUQwZ2VpNTJaWEp6YVc5dUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYTNRZ1BTQkhaUzVqZFhKeVpXNTBVSEp2WjNKaGJUc0tJQ0FnSUNBZ0lDQmhkQ0E5UFQwZ0lUQWdKaVlnS0d0MElEMGdlRzhvZWl3Z1Rpd2djU2twT3dvZ0lDQWdJQ0FnSUd4bGRDQkhjaUE5SUNFeExDQkhkQ0E5SUNFeExDQmFkQ0E5SUNFeExDQjRkQ0E5SUd0MExtZGxkRlZ1YVdadmNtMXpLQ2tzSUZocElEMGdSMlV1ZFc1cFptOXliWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tIaGxMblZ6WlZCeWIyZHlZVzBvYTNRdWNISnZaM0poYlNrZ0ppWWdLRWR5SUQwZ0lUQXNJRWQwSUQwZ0lUQXNJRnAwSUQwZ0lUQXBMQ0I2TG1sa0lDRTlQU0I1SUNZbUlDaDVJRDBnZWk1cFpDd2dSM1FnUFNBaE1Da3NJRWR5SUh4OElHSWdJVDA5SUZNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIaDBMbk5sZEZaaGJIVmxLRmtzSUNKd2NtOXFaV04wYVc5dVRXRjBjbWw0SWl3Z1V5NXdjbTlxWldOMGFXOXVUV0YwY21sNEtTd2daMlV1Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpQW1KaUI0ZEM1elpYUldZV3gxWlNoWkxDQWliRzluUkdWd2RHaENkV1pHUXlJc0lESWdMeUFvVFdGMGFDNXNiMmNvVXk1bVlYSWdLeUF4S1NBdklFMWhkR2d1VEU0eUtTa3NJR0lnSVQwOUlGTWdKaVlnS0dJZ1BTQlRMQ0JIZENBOUlDRXdMQ0JhZENBOUlDRXdLU3dnZWk1cGMxTm9ZV1JsY2sxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1VHaHZibWROWVhSbGNtbGhiQ0I4ZkNCNkxtbHpUV1Z6YUZSdmIyNU5ZWFJsY21saGJDQjhmQ0I2TG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dmSHdnZWk1bGJuWk5ZWEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlFkREVnUFNCNGRDNXRZWEF1WTJGdFpYSmhVRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlFkREVnSVQwOUlIWnZhV1FnTUNBbUppQlFkREV1YzJWMFZtRnNkV1VvV1N3Z2JHVXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0ZNdWJXRjBjbWw0VjI5eWJHUXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FvZWk1cGMwMWxjMmhRYUc5dVowMWhkR1Z5YVdGc0lIeDhJSG91YVhOTlpYTm9WRzl2YmsxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1RHRnRZbVZ5ZEUxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1FtRnphV05OWVhSbGNtbGhiQ0I4ZkNCNkxtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnZkh3Z2VpNXBjMU5vWVdSbGNrMWhkR1Z5YVdGc0tTQW1KaUI0ZEM1elpYUldZV3gxWlNoWkxDQWlhWE5QY25Sb2IyZHlZWEJvYVdNaUxDQlRMbWx6VDNKMGFHOW5jbUZ3YUdsalEyRnRaWEpoSUQwOVBTQWhNQ2tzSUNoNkxtbHpUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXd2dmSHdnZWk1cGMwMWxjMmhVYjI5dVRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaE1ZVzFpWlhKMFRXRjBaWEpwWVd3Z2ZId2dlaTVwYzAxbGMyaENZWE5wWTAxaGRHVnlhV0ZzSUh4OElIb3VhWE5OWlhOb1UzUmhibVJoY21STllYUmxjbWxoYkNCOGZDQjZMbWx6VTJoaFpHVnlUV0YwWlhKcFlXd2dmSHdnZWk1cGMxTm9ZV1J2ZDAxaGRHVnlhV0ZzSUh4OElIRXVhWE5UYTJsdWJtVmtUV1Z6YUNrZ0ppWWdlSFF1YzJWMFZtRnNkV1VvV1N3Z0luWnBaWGROWVhSeWFYZ2lMQ0JUTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2h4TG1selUydHBibTVsWkUxbGMyZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2VIUXVjMlYwVDNCMGFXOXVZV3dvV1N3Z2NTd2dJbUpwYm1STllYUnlhWGdpS1N3Z2VIUXVjMlYwVDNCMGFXOXVZV3dvV1N3Z2NTd2dJbUpwYm1STllYUnlhWGhKYm5abGNuTmxJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JRZERJZ1BTQnhMbk5yWld4bGRHOXVPd29nSUNBZ0lDQWdJQ0FnSUNCUWRESWdKaVlnS0dkbExtWnNiMkYwVm1WeWRHVjRWR1Y0ZEhWeVpYTWdQeUFvVUhReUxtSnZibVZVWlhoMGRYSmxJRDA5UFNCdWRXeHNJQ1ltSUZCME1pNWpiMjF3ZFhSbFFtOXVaVlJsZUhSMWNtVW9LU3dnZUhRdWMyVjBWbUZzZFdVb1dTd2dJbUp2Ym1WVVpYaDBkWEpsSWl3Z1VIUXlMbUp2Ym1WVVpYaDBkWEpsTENCcUtTd2dlSFF1YzJWMFZtRnNkV1VvV1N3Z0ltSnZibVZVWlhoMGRYSmxVMmw2WlNJc0lGQjBNaTVpYjI1bFZHVjRkSFZ5WlZOcGVtVXBLU0E2SUhoMExuTmxkRTl3ZEdsdmJtRnNLRmtzSUZCME1pd2dJbUp2Ym1WTllYUnlhV05sY3lJcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlDRWhTQ0FtSmlBb1NDNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0Z0lUMDlJSFp2YVdRZ01DQjhmQ0JJTG0xdmNuQm9RWFIwY21saWRYUmxjeTV1YjNKdFlXd2dJVDA5SUhadmFXUWdNQ2tnSmlZZ1dpNTFjR1JoZEdVb2NTd2dTQ3dnZWl3Z2EzUXBMQ0FvUjNRZ2ZId2dSMlV1Y21WalpXbDJaVk5vWVdSdmR5QWhQVDBnY1M1eVpXTmxhWFpsVTJoaFpHOTNLU0FtSmlBb1IyVXVjbVZqWldsMlpWTm9ZV1J2ZHlBOUlIRXVjbVZqWldsMlpWTm9ZV1J2ZHl3Z2VIUXVjMlYwVm1Gc2RXVW9XU3dnSW5KbFkyVnBkbVZUYUdGa2IzY2lMQ0J4TG5KbFkyVnBkbVZUYUdGa2IzY3BLU3dnUjNRZ0ppWWdLSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSjBiMjVsVFdGd2NHbHVaMFY0Y0c5emRYSmxJaXdnZUM1MGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbEtTd2dSMlV1Ym1WbFpITk1hV2RvZEhNZ0ppWWdZM1VvV0drc0lGcDBLU3dnWW1VZ0ppWWdlaTVtYjJjZ0ppWWdXV1V1Y21WbWNtVnphRVp2WjFWdWFXWnZjbTF6S0ZocExDQmlaU2tzSUZsbExuSmxabkpsYzJoTllYUmxjbWxoYkZWdWFXWnZjbTF6S0ZocExDQjZMQ0JRTENCQ0xDQlhLU3dnWW00dWRYQnNiMkZrS0Zrc0lFZGxMblZ1YVdadmNtMXpUR2x6ZEN3Z1dHa3NJR29wS1N3Z2VpNXBjMU5vWVdSbGNrMWhkR1Z5YVdGc0lDWW1JSG91ZFc1cFptOXliWE5PWldWa1ZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlBb1ltNHVkWEJzYjJGa0tGa3NJRWRsTG5WdWFXWnZjbTF6VEdsemRDd2dXR2tzSUdvcExDQjZMblZ1YVdadmNtMXpUbVZsWkZWd1pHRjBaU0E5SUNFeEtTd2dlaTVwYzFOd2NtbDBaVTFoZEdWeWFXRnNJQ1ltSUhoMExuTmxkRlpoYkhWbEtGa3NJQ0pqWlc1MFpYSWlMQ0J4TG1ObGJuUmxjaWtzSUhoMExuTmxkRlpoYkhWbEtGa3NJQ0p0YjJSbGJGWnBaWGROWVhSeWFYZ2lMQ0J4TG0xdlpHVnNWbWxsZDAxaGRISnBlQ2tzSUhoMExuTmxkRlpoYkhWbEtGa3NJQ0p1YjNKdFlXeE5ZWFJ5YVhnaUxDQnhMbTV2Y20xaGJFMWhkSEpwZUNrc0lIaDBMbk5sZEZaaGJIVmxLRmtzSUNKdGIyUmxiRTFoZEhKcGVDSXNJSEV1YldGMGNtbDRWMjl5YkdRcExDQnJkRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdOMUtGTXNJRTRwSUhzS0lDQWdJQ0FnSUNCVExtRnRZbWxsYm5STWFXZG9kRU52Ykc5eUxtNWxaV1J6VlhCa1lYUmxJRDBnVGl3Z1V5NXNhV2RvZEZCeWIySmxMbTVsWldSelZYQmtZWFJsSUQwZ1Rpd2dVeTVrYVhKbFkzUnBiMjVoYkV4cFoyaDBjeTV1WldWa2MxVndaR0YwWlNBOUlFNHNJRk11WkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmQzTXVibVZsWkhOVmNHUmhkR1VnUFNCT0xDQlRMbkJ2YVc1MFRHbG5hSFJ6TG01bFpXUnpWWEJrWVhSbElEMGdUaXdnVXk1d2IybHVkRXhwWjJoMFUyaGhaRzkzY3k1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUZNdWMzQnZkRXhwWjJoMGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lGTXVjM0J2ZEV4cFoyaDBVMmhoWkc5M2N5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lGTXVjbVZqZEVGeVpXRk1hV2RvZEhNdWJtVmxaSE5WY0dSaGRHVWdQU0JPTENCVExtaGxiV2x6Y0dobGNtVk1hV2RvZEhNdWJtVmxaSE5WY0dSaGRHVWdQU0JPT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FIVW9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG1selRXVnphRXhoYldKbGNuUk5ZWFJsY21saGJDQjhmQ0JUTG1selRXVnphRlJ2YjI1TllYUmxjbWxoYkNCOGZDQlRMbWx6VFdWemFGQm9iMjVuVFdGMFpYSnBZV3dnZkh3Z1V5NXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUh4OElGTXVhWE5UYUdGa2IzZE5ZWFJsY21saGJDQjhmQ0JUTG1selUyaGhaR1Z5VFdGMFpYSnBZV3dnSmlZZ1V5NXNhV2RvZEhNZ1BUMDlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ2RHaHBjeTVuWlhSQlkzUnBkbVZEZFdKbFJtRmpaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbk93b2dJQ0FnZlN3Z2RHaHBjeTVuWlhSQlkzUnBkbVZOYVhCdFlYQk1aWFpsYkNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQndPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUlNaVzVrWlhKVVlYSm5aWFFnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1h6c0tJQ0FnSUgwc0lIUm9hWE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpYTWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklLU0I3Q2lBZ0lDQWdJQ0FnUnk1blpYUW9VeTUwWlhoMGRYSmxLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTQTlJRTRzSUVjdVoyVjBLRk11WkdWd2RHaFVaWGgwZFhKbEtTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNBOUlFZzdDaUFnSUNBZ0lDQWdiR1YwSUhvZ1BTQkhMbWRsZENoVEtUc0tJQ0FnSUNBZ0lDQjZMbDlmYUdGelJYaDBaWEp1WVd4VVpYaDBkWEpsY3lBOUlDRXdMQ0I2TGw5ZmFHRnpSWGgwWlhKdVlXeFVaWGgwZFhKbGN5QW1KaUFvZWk1ZlgyRjFkRzlCYkd4dlkyRjBaVVJsY0hSb1FuVm1abVZ5SUQwZ1NDQTlQVDBnZG05cFpDQXdMQ0I2TGw5ZllYVjBiMEZzYkc5allYUmxSR1Z3ZEdoQ2RXWm1aWElnZkh3Z1V5NTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2ljbVZ1WkdWeUxYUnZMWFJsZUhSMWNtVWdaWGgwWlc1emFXOXVJSGRoY3lCa2FYTmhZbXhsWkNCaVpXTmhkWE5sSUdGdUlHVjRkR1Z5Ym1Gc0lIUmxlSFIxY21VZ2QyRnpJSEJ5YjNacFpHVmtJaWtzSUZNdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElEMGdJVEVzSUZNdWRYTmxVbVZ1WkdWeVluVm1abVZ5SUQwZ0lUQXBLVHNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwUm5KaGJXVmlkV1ptWlhJZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRWdnUFNCSExtZGxkQ2hUS1RzS0lDQWdJQ0FnSUNCSUxsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNpQTlJRTRzSUVndVgxOTFjMlZFWldaaGRXeDBSbkpoYldWaWRXWm1aWElnUFNCT0lEMDlQU0IyYjJsa0lEQTdDaUFnSUNCOUxDQjBhR2x6TG5ObGRGSmxibVJsY2xSaGNtZGxkQ0E5SUdaMWJtTjBhVzl1S0ZNc0lFNGdQU0F3TENCSUlEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUY4Z1BTQlRMQ0JuSUQwZ1Rpd2djQ0E5SUVnN0NpQWdJQ0FnSUNBZ2JHVjBJSG9nUFNBaE1Ec0tJQ0FnSUNBZ0lDQnBaaUFvVXlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyVWdQU0JITG1kbGRDaFRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2QyVXVYMTkxYzJWRVpXWmhkV3gwUm5KaGJXVmlkV1ptWlhJZ0lUMDlJSFp2YVdRZ01DQS9JQ2g0WlM1aWFXNWtSbkpoYldWaWRXWm1aWElvTXpZeE5qQXNJRzUxYkd3cExDQjZJRDBnSVRFcElEb2dkMlV1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5SUQwOVBTQjJiMmxrSURBZ1B5QnFMbk5sZEhWd1VtVnVaR1Z5VkdGeVoyVjBLRk1wSURvZ2QyVXVYMTlvWVhORmVIUmxjbTVoYkZSbGVIUjFjbVZ6SUNZbUlHb3VjbVZpYVc1a1ZHVjRkSFZ5WlhNb1V5d2dSeTVuWlhRb1V5NTBaWGgwZFhKbEtTNWZYM2RsWW1kc1ZHVjRkSFZ5WlN3Z1J5NW5aWFFvVXk1a1pYQjBhRlJsZUhSMWNtVXBMbDlmZDJWaVoyeFVaWGgwZFhKbEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhFZ1BTQnVkV3hzTENCaVpTQTlJQ0V4TENCQlpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUdsbUlDaFRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IzWlRFZ1BTQlRMblJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdJQ0FnSUNoM1pURXVhWE5FWVhSaFZHVjRkSFZ5WlRORUlIeDhJSGRsTVM1cGMwUmhkR0ZVWlhoMGRYSmxNa1JCY25KaGVTa2dKaVlnS0VGbElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU0dVZ1BTQkhMbWRsZENoVEtTNWZYM2RsWW1kc1JuSmhiV1ZpZFdabVpYSTdDaUFnSUNBZ0lDQWdJQ0FnSUZNdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFnUHlBb2NTQTlJRWhsVzA1ZExDQmlaU0E5SUNFd0tTQTZJRk11ZFhObFVtVnVaR1Z5WW5WbVptVnlJRDhnY1NBOUlFY3VaMlYwS0ZNcExsOWZkMlZpWjJ4TmRXeDBhWE5oYlhCc1pXUkdjbUZ0WldKMVptWmxjaUE2SUhFZ1BTQklaU3dnUVM1amIzQjVLRk11ZG1sbGQzQnZjblFwTENCTUxtTnZjSGtvVXk1elkybHpjMjl5S1N3Z1NTQTlJRk11YzJOcGMzTnZjbFJsYzNRN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUVFdVkyOXdlU2hFS1M1dGRXeDBhWEJzZVZOallXeGhjaWhRS1M1bWJHOXZjaWdwTENCTUxtTnZjSGtvVlNrdWJYVnNkR2x3YkhsVFkyRnNZWElvVUNrdVpteHZiM0lvS1N3Z1NTQTlJRVk3Q2lBZ0lDQWdJQ0FnYVdZZ0tIaGxMbUpwYm1SR2NtRnRaV0oxWm1abGNpZ3pOakUyTUN3Z2NTa2dKaVlnWjJVdVpISmhkMEoxWm1abGNuTWdKaVlnZWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2QyVXlJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoVEtTQnBaaUFvVXk1cGMxZGxZa2RNVFhWc2RHbHdiR1ZTWlc1a1pYSlVZWEpuWlhSektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU0dVeElEMGdVeTUwWlhoMGRYSmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0U4dWJHVnVaM1JvSUNFOVBTQklaVEV1YkdWdVozUm9JSHg4SUU5Yk1GMGdJVDA5SURNMk1EWTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCRVpTQTlJREFzSUhwbElEMGdTR1V4TG14bGJtZDBhRHNnUkdVZ1BDQjZaVHNnUkdVckt5bFBXMFJsWFNBOUlETTJNRFkwSUNzZ1JHVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVHk1c1pXNW5kR2dnUFNCSVpURXViR1Z1WjNSb0xDQjNaVElnUFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJQ2hQTG14bGJtZDBhQ0FoUFQwZ01TQjhmQ0JQV3pCZElDRTlQU0F6TmpBMk5Da2dKaVlnS0U5Yk1GMGdQU0F6TmpBMk5Dd2dUeTVzWlc1bmRHZ2dQU0F4TENCM1pUSWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ0tFOHViR1Z1WjNSb0lDRTlQU0F4SUh4OElFOWJNRjBnSVQwOUlERXdNamtwSUNZbUlDaFBXekJkSUQwZ01UQXlPU3dnVHk1c1pXNW5kR2dnUFNBeExDQjNaVElnUFNBaE1DazdDaUFnSUNBZ0lDQWdJQ0FnSUhkbE1pQW1KaUFvWjJVdWFYTlhaV0pIVERJZ1B5QlpMbVJ5WVhkQ2RXWm1aWEp6S0U4cElEb2dlV1V1WjJWMEtDSlhSVUpIVEY5a2NtRjNYMkoxWm1abGNuTWlLUzVrY21GM1FuVm1abVZ5YzFkRlFrZE1LRThwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSGhsTG5acFpYZHdiM0owS0VFcExDQjRaUzV6WTJsemMyOXlLRXdwTENCNFpTNXpaWFJUWTJsemMyOXlWR1Z6ZENoSktTd2dZbVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhkbE15QTlJRWN1WjJWMEtGTXVkR1Y0ZEhWeVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUZrdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9Nell4TmpBc0lETTJNRFkwTENBek5EQTJPU0FySUU0c0lIZGxNeTVmWDNkbFltZHNWR1Y0ZEhWeVpTd2dTQ2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoQlpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkMlUwSUQwZ1J5NW5aWFFvVXk1MFpYaDBkWEpsS1N3Z1NHVXlJRDBnVGlCOGZDQXdPd29nSUNBZ0lDQWdJQ0FnSUNCWkxtWnlZVzFsWW5WbVptVnlWR1Y0ZEhWeVpVeGhlV1Z5S0RNMk1UWXdMQ0F6TmpBMk5Dd2dkMlUwTGw5ZmQyVmlaMnhVWlhoMGRYSmxMQ0JJSUh4OElEQXNJRWhsTWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIa2dQU0F0TVRzS0lDQWdJSDBzSUhSb2FYTXVjbVZoWkZKbGJtUmxjbFJoY21kbGRGQnBlR1ZzY3lBOUlHWjFibU4wYVc5dUtGTXNJRTRzSUVnc0lIb3NJSEVzSUdKbExDQkJaU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDZ2hLRk1nSmlZZ1V5NXBjMWRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxuSmxZV1JTWlc1a1pYSlVZWEpuWlhSUWFYaGxiSE02SUhKbGJtUmxjbFJoY21kbGRDQnBjeUJ1YjNRZ1ZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFF1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUVsbElEMGdSeTVuWlhRb1V5a3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlPd29nSUNBZ0lDQWdJR2xtSUNoVExtbHpWMlZpUjB4RGRXSmxVbVZ1WkdWeVZHRnlaMlYwSUNZbUlFRmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tFbGxJRDBnU1dWYlFXVmRLU3dnU1dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZUdVdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1UWXdMQ0JKWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkMlVnUFNCVExuUmxlSFIxY21Vc0lFaGxJRDBnZDJVdVptOXliV0YwTENCRVpTQTlJSGRsTG5SNWNHVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvU0dVZ0lUMDlJR04wSUNZbUlIUmxMbU52Ym5abGNuUW9TR1VwSUNFOVBTQlpMbWRsZEZCaGNtRnRaWFJsY2lnek5UY3pPU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxuSmxZV1JTWlc1a1pYSlVZWEpuWlhSUWFYaGxiSE02SUhKbGJtUmxjbFJoY21kbGRDQnBjeUJ1YjNRZ2FXNGdVa2RDUVNCdmNpQnBiWEJzWlcxbGJuUmhkR2x2YmlCa1pXWnBibVZrSUdadmNtMWhkQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlbVVnUFNCRVpTQTlQVDBnYTI0Z0ppWWdLSGxsTG1oaGN5Z2lSVmhVWDJOdmJHOXlYMkoxWm1abGNsOW9ZV3htWDJac2IyRjBJaWtnZkh3Z1oyVXVhWE5YWldKSFRESWdKaVlnZVdVdWFHRnpLQ0pGV0ZSZlkyOXNiM0pmWW5WbVptVnlYMlpzYjJGMElpa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VSbElDRTlQU0J5YmlBbUppQjBaUzVqYjI1MlpYSjBLRVJsS1NBaFBUMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016VTNNemdwSUNZbUlDRW9SR1VnUFQwOUlHNXVJQ1ltSUNoblpTNXBjMWRsWWtkTU1pQjhmQ0I1WlM1b1lYTW9JazlGVTE5MFpYaDBkWEpsWDJac2IyRjBJaWtnZkh3Z2VXVXVhR0Z6S0NKWFJVSkhURjlqYjJ4dmNsOWlkV1ptWlhKZlpteHZZWFFpS1NrcElDWW1JQ0Y2WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSXVjbVZoWkZKbGJtUmxjbFJoY21kbGRGQnBlR1ZzY3pvZ2NtVnVaR1Z5VkdGeVoyVjBJR2x6SUc1dmRDQnBiaUJWYm5OcFoyNWxaRUo1ZEdWVWVYQmxJRzl5SUdsdGNHeGxiV1Z1ZEdGMGFXOXVJR1JsWm1sdVpXUWdkSGx3WlM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlpMbU5vWldOclJuSmhiV1ZpZFdabVpYSlRkR0YwZFhNb016WXhOakFwSUQwOVBTQXpOakExTXlBL0lFNGdQajBnTUNBbUppQk9JRHc5SUZNdWQybGtkR2dnTFNCNklDWW1JRWdnUGowZ01DQW1KaUJJSUR3OUlGTXVhR1ZwWjJoMElDMGdjU0FtSmlCWkxuSmxZV1JRYVhobGJITW9UaXdnU0N3Z2Vpd2djU3dnZEdVdVkyOXVkbVZ5ZENoSVpTa3NJSFJsTG1OdmJuWmxjblFvUkdVcExDQmlaU2tnT2lCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG5KbFlXUlNaVzVrWlhKVVlYSm5aWFJRYVhobGJITTZJSEpsWVdSUWFYaGxiSE1nWm5KdmJTQnlaVzVrWlhKVVlYSm5aWFFnWm1GcGJHVmtMaUJHY21GdFpXSjFabVpsY2lCdWIzUWdZMjl0Y0d4bGRHVXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdabWx1WVd4c2VYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IzWlRFZ1BTQmZJQ0U5UFNCdWRXeHNJRDhnUnk1blpYUW9YeWt1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5SURvZ2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGhsTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2dkMlV4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNJSFJvYVhNdVkyOXdlVVp5WVcxbFluVm1abVZ5Vkc5VVpYaDBkWEpsSUQwZ1puVnVZM1JwYjI0b1V5d2dUaXdnU0NBOUlEQXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RpNXBjMFp5WVcxbFluVm1abVZ5VkdWNGRIVnlaU0FoUFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1kyOXdlVVp5WVcxbFluVm1abVZ5Vkc5VVpYaDBkWEpsS0NrZ1kyRnVJRzl1YkhrZ1ltVWdkWE5sWkNCM2FYUm9JRVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaUzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnZWlBOUlFMWhkR2d1Y0c5M0tESXNJQzFJS1N3Z2NTQTlJRTFoZEdndVpteHZiM0lvVGk1cGJXRm5aUzUzYVdSMGFDQXFJSG9wTENCaVpTQTlJRTFoZEdndVpteHZiM0lvVGk1cGJXRm5aUzVvWldsbmFIUWdLaUI2S1RzS0lDQWdJQ0FnSUNCcUxuTmxkRlJsZUhSMWNtVXlSQ2hPTENBd0tTd2dXUzVqYjNCNVZHVjRVM1ZpU1cxaFoyVXlSQ2d6TlRVekxDQklMQ0F3TENBd0xDQlRMbmdzSUZNdWVTd2djU3dnWW1VcExDQjRaUzUxYm1KcGJtUlVaWGgwZFhKbEtDazdDaUFnSUNCOUxDQjBhR2x6TG1OdmNIbFVaWGgwZFhKbFZHOVVaWGgwZFhKbElEMGdablZ1WTNScGIyNG9VeXdnVGl3Z1NDd2dlaUE5SURBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY1NBOUlFNHVhVzFoWjJVdWQybGtkR2dzSUdKbElEMGdUaTVwYldGblpTNW9aV2xuYUhRc0lFRmxJRDBnZEdVdVkyOXVkbVZ5ZENoSUxtWnZjbTFoZENrc0lFbGxJRDBnZEdVdVkyOXVkbVZ5ZENoSUxuUjVjR1VwT3dvZ0lDQWdJQ0FnSUdvdWMyVjBWR1Y0ZEhWeVpUSkVLRWdzSURBcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNM05EUXdMQ0JJTG1ac2FYQlpLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pOelEwTVN3Z1NDNXdjbVZ0ZFd4MGFYQnNlVUZzY0doaEtTd2dXUzV3YVhobGJGTjBiM0psYVNnek16RTNMQ0JJTG5WdWNHRmphMEZzYVdkdWJXVnVkQ2tzSUU0dWFYTkVZWFJoVkdWNGRIVnlaU0EvSUZrdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TlRVekxDQjZMQ0JUTG5nc0lGTXVlU3dnY1N3Z1ltVXNJRUZsTENCSlpTd2dUaTVwYldGblpTNWtZWFJoS1NBNklFNHVhWE5EYjIxd2NtVnpjMlZrVkdWNGRIVnlaU0EvSUZrdVkyOXRjSEpsYzNObFpGUmxlRk4xWWtsdFlXZGxNa1FvTXpVMU15d2dlaXdnVXk1NExDQlRMbmtzSUU0dWJXbHdiV0Z3YzFzd1hTNTNhV1IwYUN3Z1RpNXRhWEJ0WVhCeld6QmRMbWhsYVdkb2RDd2dRV1VzSUU0dWJXbHdiV0Z3YzFzd1hTNWtZWFJoS1NBNklGa3VkR1Y0VTNWaVNXMWhaMlV5UkNnek5UVXpMQ0I2TENCVExuZ3NJRk11ZVN3Z1FXVXNJRWxsTENCT0xtbHRZV2RsS1N3Z2VpQTlQVDBnTUNBbUppQklMbWRsYm1WeVlYUmxUV2x3YldGd2N5QW1KaUJaTG1kbGJtVnlZWFJsVFdsd2JXRndLRE0xTlRNcExDQjRaUzUxYm1KcGJtUlVaWGgwZFhKbEtDazdDaUFnSUNCOUxDQjBhR2x6TG1OdmNIbFVaWGgwZFhKbFZHOVVaWGgwZFhKbE0wUWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklMQ0I2TENCeElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDRMbWx6VjJWaVIwd3hVbVZ1WkdWeVpYSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5TG1OdmNIbFVaWGgwZFhKbFZHOVVaWGgwZFhKbE0wUTZJR05oYmlCdmJteDVJR0psSUhWelpXUWdkMmwwYUNCWFpXSkhUREl1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdKbElEMGdVeTV0WVhndWVDQXRJRk11YldsdUxuZ2dLeUF4TENCQlpTQTlJRk11YldGNExua2dMU0JUTG0xcGJpNTVJQ3NnTVN3Z1NXVWdQU0JUTG0xaGVDNTZJQzBnVXk1dGFXNHVlaUFySURFc0lIZGxJRDBnZEdVdVkyOXVkbVZ5ZENoNkxtWnZjbTFoZENrc0lFaGxJRDBnZEdVdVkyOXVkbVZ5ZENoNkxuUjVjR1VwTENCRVpUc0tJQ0FnSUNBZ0lDQnBaaUFvZWk1cGMwUmhkR0ZVWlhoMGRYSmxNMFFwSUdvdWMyVjBWR1Y0ZEhWeVpUTkVLSG9zSURBcExDQkVaU0E5SURNeU9EYzVPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSG91YVhORVlYUmhWR1Y0ZEhWeVpUSkVRWEp5WVhrcElHb3VjMlYwVkdWNGRIVnlaVEpFUVhKeVlYa29laXdnTUNrc0lFUmxJRDBnTXpVNE5qWTdDaUFnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNWpiM0I1VkdWNGRIVnlaVlJ2VkdWNGRIVnlaVE5FT2lCdmJteDVJSE4xY0hCdmNuUnpJRlJJVWtWRkxrUmhkR0ZVWlhoMGRYSmxNMFFnWVc1a0lGUklVa1ZGTGtSaGRHRlVaWGgwZFhKbE1rUkJjbkpoZVM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JaTG5CcGVHVnNVM1J2Y21WcEtETTNORFF3TENCNkxtWnNhWEJaS1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TnpRME1Td2dlaTV3Y21WdGRXeDBhWEJzZVVGc2NHaGhLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pNekUzTENCNkxuVnVjR0ZqYTBGc2FXZHViV1Z1ZENrN0NpQWdJQ0FnSUNBZ2JHVjBJSHBsSUQwZ1dTNW5aWFJRWVhKaGJXVjBaWElvTXpNeE5Da3NJR3BsSUQwZ1dTNW5aWFJRWVhKaGJXVjBaWElvTXpJNE56Z3BMQ0JTYmlBOUlGa3VaMlYwVUdGeVlXMWxkR1Z5S0RNek1UWXBMQ0JsYVNBOUlGa3VaMlYwVUdGeVlXMWxkR1Z5S0RNek1UVXBMQ0JIWlNBOUlGa3VaMlYwVUdGeVlXMWxkR1Z5S0RNeU9EYzNLU3dnU0hRZ1BTQklMbWx6UTI5dGNISmxjM05sWkZSbGVIUjFjbVVnUHlCSUxtMXBjRzFoY0hOYk1GMGdPaUJJTG1sdFlXZGxPd29nSUNBZ0lDQWdJRmt1Y0dsNFpXeFRkRzl5Wldrb016TXhOQ3dnU0hRdWQybGtkR2dwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE15T0RjNExDQklkQzVvWldsbmFIUXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXpNVFlzSUZNdWJXbHVMbmdwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE16TVRVc0lGTXViV2x1TG5rcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNeU9EYzNMQ0JUTG0xcGJpNTZLU3dnU0M1cGMwUmhkR0ZVWlhoMGRYSmxJSHg4SUVndWFYTkVZWFJoVkdWNGRIVnlaVE5FSUQ4Z1dTNTBaWGhUZFdKSmJXRm5aVE5FS0VSbExDQnhMQ0JPTG5nc0lFNHVlU3dnVGk1NkxDQmlaU3dnUVdVc0lFbGxMQ0IzWlN3Z1NHVXNJRWgwTG1SaGRHRXBJRG9nU0M1cGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbElEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNpNWpiM0I1VkdWNGRIVnlaVlJ2VkdWNGRIVnlaVE5FT2lCMWJuUmxjM1JsWkNCemRYQndiM0owSUdadmNpQmpiMjF3Y21WemMyVmtJSE55WTFSbGVIUjFjbVV1SWlrc0lGa3VZMjl0Y0hKbGMzTmxaRlJsZUZOMVlrbHRZV2RsTTBRb1JHVXNJSEVzSUU0dWVDd2dUaTU1TENCT0xub3NJR0psTENCQlpTd2dTV1VzSUhkbExDQklkQzVrWVhSaEtTa2dPaUJaTG5SbGVGTjFZa2x0WVdkbE0wUW9SR1VzSUhFc0lFNHVlQ3dnVGk1NUxDQk9Mbm9zSUdKbExDQkJaU3dnU1dVc0lIZGxMQ0JJWlN3Z1NIUXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXpNVFFzSUhwbEtTd2dXUzV3YVhobGJGTjBiM0psYVNnek1qZzNPQ3dnYW1VcExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNek1UWXNJRkp1S1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TXpFMUxDQmxhU2tzSUZrdWNHbDRaV3hUZEc5eVpXa29Nekk0Tnpjc0lFZGxLU3dnY1NBOVBUMGdNQ0FtSmlCNkxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBbUppQlpMbWRsYm1WeVlYUmxUV2x3YldGd0tFUmxLU3dnZUdVdWRXNWlhVzVrVkdWNGRIVnlaU2dwT3dvZ0lDQWdmU3dnZEdocGN5NXBibWwwVkdWNGRIVnlaU0E5SUdaMWJtTjBhVzl1S0ZNcElIc0tJQ0FnSUNBZ0lDQnFMbk5sZEZSbGVIUjFjbVV5UkNoVExDQXdLU3dnZUdVdWRXNWlhVzVrVkdWNGRIVnlaU2dwT3dvZ0lDQWdmU3dnZEdocGN5NXlaWE5sZEZOMFlYUmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ1p5QTlJREFzSUhBZ1BTQXdMQ0JmSUQwZ2JuVnNiQ3dnZUdVdWNtVnpaWFFvS1N3Z1VpNXlaWE5sZENncE93b2dJQ0FnZlN3Z2RIbHdaVzltSUY5ZlZFaFNSVVZmUkVWV1ZFOVBURk5mWHlBOElDSjFJaUFtSmlCZlgxUklVa1ZGWDBSRlZsUlBUMHhUWDE4dVpHbHpjR0YwWTJoRmRtVnVkQ2h1WlhjZ1EzVnpkRzl0UlhabGJuUW9JbTlpYzJWeWRtVWlMQ0I3Q2lBZ0lDQWdJQ0FnWkdWMFlXbHNPaUIwYUdsekNpQWdJQ0I5S1NrN0NuMEtjV1V1Y0hKdmRHOTBlWEJsTG1selYyVmlSMHhTWlc1a1pYSmxjaUE5SUNFd093cDJZWElnWDJnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhGbElIc0tmVHNLWDJndWNISnZkRzkwZVhCbExtbHpWMlZpUjB3eFVtVnVaR1Z5WlhJZ1BTQWhNRHNLZG1GeUlFNXlJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENBOUlESTFaUzAxS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNobEtTd2dkR2hwY3k1a1pXNXphWFI1SUQwZ2REc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVG5Jb2RHaHBjeTVqYjJ4dmNpd2dkR2hwY3k1a1pXNXphWFI1S1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlSbTluUlhod01pSXNDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUIwYUdsekxtTnZiRzl5TG1kbGRFaGxlQ2dwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaVzV6YVhSNU9pQjBhR2x6TG1SbGJuTnBkSGtLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUXA5T3dwT2NpNXdjbTkwYjNSNWNHVXVhWE5HYjJkRmVIQXlJRDBnSVRBN0NuWmhjaUJDY2lBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4TENCdUlEMGdNV1V6S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQWlJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNobEtTd2dkR2hwY3k1dVpXRnlJRDBnZEN3Z2RHaHBjeTVtWVhJZ1BTQnVPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCQ2NpaDBhR2x6TG1OdmJHOXlMQ0IwYUdsekxtNWxZWElzSUhSb2FYTXVabUZ5S1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlSbTluSWl3S0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIUm9hWE11WTI5c2IzSXVaMlYwU0dWNEtDa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bFlYSTZJSFJvYVhNdWJtVmhjaXdLSUNBZ0lDQWdJQ0FnSUNBZ1ptRnlPaUIwYUdsekxtWmhjZ29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDbjA3Q2tKeUxuQnliM1J2ZEhsd1pTNXBjMFp2WnlBOUlDRXdPd3AyWVhJZ2JtOGdQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUyTmxibVVpTENCMGFHbHpMbUpoWTJ0bmNtOTFibVFnUFNCdWRXeHNMQ0IwYUdsekxtVnVkbWx5YjI1dFpXNTBJRDBnYm5Wc2JDd2dkR2hwY3k1bWIyY2dQU0J1ZFd4c0xDQjBhR2x6TG05MlpYSnlhV1JsVFdGMFpYSnBZV3dnUFNCdWRXeHNMQ0IwYUdsekxtRjFkRzlWY0dSaGRHVWdQU0FoTUN3Z2RIbHdaVzltSUY5ZlZFaFNSVVZmUkVWV1ZFOVBURk5mWHlBOElDSjFJaUFtSmlCZlgxUklVa1ZGWDBSRlZsUlBUMHhUWDE4dVpHbHpjR0YwWTJoRmRtVnVkQ2h1WlhjZ1EzVnpkRzl0UlhabGJuUW9JbTlpYzJWeWRtVWlMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2RHaHBjd29nSUNBZ0lDQWdJSDBwS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VzSUhRcExDQmxMbUpoWTJ0bmNtOTFibVFnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WW1GamEyZHliM1Z1WkNBOUlHVXVZbUZqYTJkeWIzVnVaQzVqYkc5dVpTZ3BLU3dnWlM1bGJuWnBjbTl1YldWdWRDQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWxiblpwY205dWJXVnVkQ0E5SUdVdVpXNTJhWEp2Ym0xbGJuUXVZMnh2Ym1Vb0tTa3NJR1V1Wm05bklDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxtWnZaeUE5SUdVdVptOW5MbU5zYjI1bEtDa3BMQ0JsTG05MlpYSnlhV1JsVFdGMFpYSnBZV3dnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11YjNabGNuSnBaR1ZOWVhSbGNtbGhiQ0E5SUdVdWIzWmxjbkpwWkdWTllYUmxjbWxoYkM1amJHOXVaU2dwS1N3Z2RHaHBjeTVoZFhSdlZYQmtZWFJsSUQwZ1pTNWhkWFJ2VlhCa1lYUmxMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQmxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdjM1Z3WlhJdWRHOUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVp2WnlBaFBUMGdiblZzYkNBbUppQW9kQzV2WW1wbFkzUXVabTluSUQwZ2RHaHBjeTVtYjJjdWRHOUtVMDlPS0NrcExDQjBPd29nSUNBZ2ZRcDlPd3B1Ynk1d2NtOTBiM1I1Y0dVdWFYTlRZMlZ1WlNBOUlDRXdPd3AyWVhJZ0pHNGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUZ5Y21GNUlEMGdaU3dnZEdocGN5NXpkSEpwWkdVZ1BTQjBMQ0IwYUdsekxtTnZkVzUwSUQwZ1pTQWhQVDBnZG05cFpDQXdJRDhnWlM1c1pXNW5kR2dnTHlCMElEb2dNQ3dnZEdocGN5NTFjMkZuWlNBOUlHaHlMQ0IwYUdsekxuVndaR0YwWlZKaGJtZGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhRNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdOdmRXNTBPaUF0TVFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11ZG1WeWMybHZiaUE5SURBc0lIUm9hWE11ZFhWcFpDQTlJRVYwS0NrN0NpQWdJQ0I5Q2lBZ0lDQnZibFZ3Ykc5aFpFTmhiR3hpWVdOcktDa2dlMzBLSUNBZ0lITmxkQ0J1WldWa2MxVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdaU0E5UFQwZ0lUQWdKaVlnZEdocGN5NTJaWEp6YVc5dUt5czdDaUFnSUNCOUNpQWdJQ0J6WlhSVmMyRm5aU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkWE5oWjJVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYa2dQU0J1WlhjZ1pTNWhjbkpoZVM1amIyNXpkSEoxWTNSdmNpaGxMbUZ5Y21GNUtTd2dkR2hwY3k1amIzVnVkQ0E5SUdVdVkyOTFiblFzSUhSb2FYTXVjM1J5YVdSbElEMGdaUzV6ZEhKcFpHVXNJSFJvYVhNdWRYTmhaMlVnUFNCbExuVnpZV2RsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VVRjBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JsSUNvOUlIUm9hWE11YzNSeWFXUmxMQ0J1SUNvOUlIUXVjM1J5YVdSbE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG5OMGNtbGtaVHNnYVNBOElISTdJR2tyS3lsMGFHbHpMbUZ5Y21GNVcyVWdLeUJwWFNBOUlIUXVZWEp5WVhsYmJpQXJJR2xkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWEp5WVhrdWMyVjBLR1VzSUhRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHVXVZWEp5WVhsQ2RXWm1aWEp6SUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1WVhKeVlYbENkV1ptWlhKeklEMGdlMzBwTENCMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkNBOUlFVjBLQ2twTENCbExtRnljbUY1UW5WbVptVnljMXQwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTNWhjbkpoZVVKMVptWmxjbk5iZEdocGN5NWhjbkpoZVM1aWRXWm1aWEl1WDNWMWFXUmRJRDBnZEdocGN5NWhjbkpoZVM1emJHbGpaU2d3S1M1aWRXWm1aWElwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYm1WM0lIUm9hWE11WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0lvWlM1aGNuSmhlVUoxWm1abGNuTmJkR2hwY3k1aGNuSmhlUzVpZFdabVpYSXVYM1YxYVdSZEtTd2diaUE5SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtIUXNJSFJvYVhNdWMzUnlhV1JsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1elpYUlZjMkZuWlNoMGFHbHpMblZ6WVdkbEtTd2dianNLSUNBZ0lIMEtJQ0FnSUc5dVZYQnNiMkZrS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2YmxWd2JHOWhaRU5oYkd4aVlXTnJJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVlYSnlZWGxDZFdabVpYSnpJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVZWEp5WVhsQ2RXWm1aWEp6SUQwZ2UzMHBMQ0IwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpDQTlQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ0E5SUVWMEtDa3BMQ0JsTG1GeWNtRjVRblZtWm1WeWMxdDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkYwZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWlM1aGNuSmhlVUoxWm1abGNuTmJkR2hwY3k1aGNuSmhlUzVpZFdabVpYSXVYM1YxYVdSZElEMGdRWEp5WVhrdWNISnZkRzkwZVhCbExuTnNhV05sTG1OaGJHd29ibVYzSUZWcGJuUXpNa0Z5Y21GNUtIUm9hWE11WVhKeVlYa3VZblZtWm1WeUtTa3BMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVjFhV1E2SUhSb2FYTXVkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeU9pQjBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ2RHaHBjeTVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaTV1WVcxbExBb2dJQ0FnSUNBZ0lDQWdJQ0J6ZEhKcFpHVTZJSFJvYVhNdWMzUnlhV1JsQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLZlRzS0pHNHVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWElnUFNBaE1Ec0tkbUZ5SUV0bElEMGdibVYzSUUwc0lGTnVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU0E5SUNFeEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0FpSWl3Z2RHaHBjeTVrWVhSaElEMGdaU3dnZEdocGN5NXBkR1Z0VTJsNlpTQTlJSFFzSUhSb2FYTXViMlptYzJWMElEMGdiaXdnZEdocGN5NXViM0p0WVd4cGVtVmtJRDBnYVNBOVBUMGdJVEE3Q2lBZ0lDQjlDaUFnSUNCblpYUWdZMjkxYm5Rb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdGMFlTNWpiM1Z1ZERzS0lDQWdJSDBLSUNBZ0lHZGxkQ0JoY25KaGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUc1bFpXUnpWWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtUmhkR0V1Ym1WbFpITlZjR1JoZEdVZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWtZWFJoTG1OdmRXNTBPeUIwSUR3Z2Jqc2dkQ3NyS1V0bExuZ2dQU0IwYUdsekxtZGxkRmdvZENrc0lFdGxMbmtnUFNCMGFHbHpMbWRsZEZrb2RDa3NJRXRsTG5vZ1BTQjBhR2x6TG1kbGRGb29kQ2tzSUV0bExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2RHaHBjeTV6WlhSWVdWb29kQ3dnUzJVdWVDd2dTMlV1ZVN3Z1MyVXVlaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVU1dmNtMWhiRTFoZEhKcGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVZMjkxYm5RN0lIUWdQQ0J1T3lCMEt5c3BTMlV1ZUNBOUlIUm9hWE11WjJWMFdDaDBLU3dnUzJVdWVTQTlJSFJvYVhNdVoyVjBXU2gwS1N3Z1MyVXVlaUE5SUhSb2FYTXVaMlYwV2loMEtTd2dTMlV1WVhCd2JIbE9iM0p0WVd4TllYUnlhWGdvWlNrc0lIUm9hWE11YzJWMFdGbGFLSFFzSUV0bExuZ3NJRXRsTG5rc0lFdGxMbm9wT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVqYjNWdWREc2dkQ0E4SUc0N0lIUXJLeWxMWlM1NElEMGdkR2hwY3k1blpYUllLSFFwTENCTFpTNTVJRDBnZEdocGN5NW5aWFJaS0hRcExDQkxaUzU2SUQwZ2RHaHBjeTVuWlhSYUtIUXBMQ0JMWlM1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b1pTa3NJSFJvYVhNdWMyVjBXRmxhS0hRc0lFdGxMbmdzSUV0bExua3NJRXRsTG5vcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFnS3lBeFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSYUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUWdLeUF5WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJYS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRZ0t5QXpYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUllLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUmRPd29nSUNBZ2ZRb2dJQ0FnWjJWMFdTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ29nZEdocGN5NWtZWFJoTG5OMGNtbGtaU0FySUhSb2FYTXViMlptYzJWMElDc2dNVjA3Q2lBZ0lDQjlDaUFnSUNCblpYUmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUWdLeUF5WFRzS0lDQWdJSDBLSUNBZ0lHZGxkRmNvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ0FySUROZE93b2dJQ0FnZlFvZ0lDQWdjMlYwV0Zrb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMGdaU0FxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGRDd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLeUF3WFNBOUlIUXNJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ3NnTVYwZ1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV0ZsYUtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0E5SUdVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcklERmRJRDBnYml3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXlYU0E5SUdrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXVnBYS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0E5SUdVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01GMGdQU0IwTENCMGFHbHpMbVJoZEdFdVlYSnlZWGxiWlNBcklERmRJRDBnYml3Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0t5QXlYU0E5SUdrc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNMTBnUFNCeUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hsSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0lsUklVa1ZGTGtsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsTG1Oc2IyNWxLQ2s2SUVOc2IyNXBibWNnWVc0Z2FXNTBaWEpzWVhabFpDQmlkV1ptWlhJZ1lYUjBjbWxpZFhSbElIZHBiR3dnWkdWcGJuUmxjbXhsWVhabElHSjFabVpsY2lCa1lYUmhMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z2RHaHBjeTVqYjNWdWREc2diaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYmlBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0IwYUdsekxtbDBaVzFUYVhwbE95QnlLeXNwZEM1d2RYTm9LSFJvYVhNdVpHRjBZUzVoY25KaGVWdHBJQ3NnY2wwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dWV1VvYm1WM0lIUm9hWE11WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0lvZENrc0lIUm9hWE11YVhSbGJWTnBlbVVzSUhSb2FYTXVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQmxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljeUE5SUh0OUtTd2daUzVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk5iZEdocGN5NWtZWFJoTG5WMWFXUmRJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVhVzUwWlhKc1pXRjJaV1JDZFdabVpYSnpXM1JvYVhNdVpHRjBZUzUxZFdsa1hTQTlJSFJvYVhNdVpHRjBZUzVqYkc5dVpTaGxLU2tzSUc1bGR5QlRiaWhsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5YzF0MGFHbHpMbVJoZEdFdWRYVnBaRjBzSUhSb2FYTXVhWFJsYlZOcGVtVXNJSFJvYVhNdWIyWm1jMlYwTENCMGFHbHpMbTV2Y20xaGJHbDZaV1FwT3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDSlVTRkpGUlM1SmJuUmxjbXhsWVhabFpFSjFabVpsY2tGMGRISnBZblYwWlM1MGIwcFRUMDRvS1RvZ1UyVnlhV0ZzYVhwcGJtY2dZVzRnYVc1MFpYSnNZWFpsWkNCaWRXWm1aWElnWVhSMGNtbGlkWFJsSUhkcGJHd2daR1ZwYm5SbGNteGxZWFpsSUdKMVptWmxjaUJrWVhSaExpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnZEdocGN5NWpiM1Z1ZERzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdiaUFxSUhSb2FYTXVaR0YwWVM1emRISnBaR1VnS3lCMGFHbHpMbTltWm5ObGREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQjBhR2x6TG1sMFpXMVRhWHBsT3lCeUt5c3BkQzV3ZFhOb0tIUm9hWE11WkdGMFlTNWhjbkpoZVZ0cElDc2djbDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEdWdFUybDZaVG9nZEdocGN5NXBkR1Z0VTJsNlpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhSb2FYTXVZWEp5WVhrdVkyOXVjM1J5ZFdOMGIzSXVibUZ0WlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGeWNtRjVPaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm05eWJXRnNhWHBsWkRvZ2RHaHBjeTV1YjNKdFlXeHBlbVZrQ2lBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdmU0JsYkhObElISmxkSFZ5YmlCbExtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWN5QTlQVDBnZG05cFpDQXdJQ1ltSUNobExtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWN5QTlJSHQ5S1N3Z1pTNXBiblJsY214bFlYWmxaRUoxWm1abGNuTmJkR2hwY3k1a1lYUmhMblYxYVdSZElEMDlQU0IyYjJsa0lEQWdKaVlnS0dVdWFXNTBaWEpzWldGMlpXUkNkV1ptWlhKelczUm9hWE11WkdGMFlTNTFkV2xrWFNBOUlIUm9hWE11WkdGMFlTNTBiMHBUVDA0b1pTa3BMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBkR1Z0VTJsNlpUb2dkR2hwY3k1cGRHVnRVMmw2WlN3S0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ2RHaHBjeTVrWVhSaExuVjFhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZERvZ2RHaHBjeTV2Wm1aelpYUXNDaUFnSUNBZ0lDQWdJQ0FnSUc1dmNtMWhiR2w2WldRNklIUm9hWE11Ym05eWJXRnNhWHBsWkFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q24wN0NsTnVMbkJ5YjNSdmRIbHdaUzVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsSUQwZ0lUQTdDblpoY2lCcGJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUzQnlhWFJsVFdGMFpYSnBZV3dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtERTJOemMzTWpFMUtTd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXliM1JoZEdsdmJpQTlJREFzSUhSb2FYTXVjMmw2WlVGMGRHVnVkV0YwYVc5dUlEMGdJVEFzSUhSb2FYTXVkSEpoYm5Od1lYSmxiblFnUFNBaE1Dd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnWlM1aGJIQm9ZVTFoY0N3Z2RHaHBjeTV5YjNSaGRHbHZiaUE5SUdVdWNtOTBZWFJwYjI0c0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnWlM1emFYcGxRWFIwWlc1MVlYUnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbWx2TG5CeWIzUnZkSGx3WlM1cGMxTndjbWwwWlUxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCbmFTd2dVV2tnUFNCdVpYY2dUU3dnZUdrZ1BTQnVaWGNnVFN3Z2VXa2dQU0J1WlhjZ1RTd2dkbWtnUFNCdVpYY2dXQ3dnUzJrZ1BTQnVaWGNnV0N3Z1RXZ2dQU0J1WlhjZ2NHVXNJR2h6SUQwZ2JtVjNJRTBzSUdWeUlEMGdibVYzSUUwc0lIVnpJRDBnYm1WM0lFMHNJR3BzSUQwZ2JtVjNJRmdzSUhGdklEMGdibVYzSUZnc0lGRnNJRDBnYm1WM0lGZ3NJSEp2SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJPWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuUjVjR1VnUFNBaVUzQnlhWFJsSWl3Z1oya2dQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm5hU0E5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0ZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUMwdU5Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDMHVOU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xTNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdU5Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB1TlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0MUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdJQ0FnSUYwcExDQnVJRDBnYm1WM0lDUnVLSFFzSURVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JuYVM1elpYUkpibVJsZUNoYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRE1LSUNBZ0lDQWdJQ0FnSUNBZ1hTa3NJR2RwTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1UyNG9iaXdnTXl3Z01Dd2dJVEVwS1N3Z1oya3VjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCVGJpaHVMQ0F5TENBekxDQWhNU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbWRsYjIxbGRISjVJRDBnWjJrc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCbElDRTlQU0IyYjJsa0lEQWdQeUJsSURvZ2JtVjNJR2x2TENCMGFHbHpMbU5sYm5SbGNpQTlJRzVsZHlCWUtDNDFMQ0F1TlNrN0NpQWdJQ0I5Q2lBZ0lDQnlZWGxqWVhOMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCbExtTmhiV1Z5WVNBOVBUMGdiblZzYkNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NkVVNGSkZSUzVUY0hKcGRHVTZJQ0pTWVhsallYTjBaWEl1WTJGdFpYSmhJaUJ1WldWa2N5QjBieUJpWlNCelpYUWdhVzRnYjNKa1pYSWdkRzhnY21GNVkyRnpkQ0JoWjJGcGJuTjBJSE53Y21sMFpYTXVKeWtzSUhocExuTmxkRVp5YjIxTllYUnlhWGhUWTJGc1pTaDBhR2x6TG0xaGRISnBlRmR2Y214a0tTd2dUV2d1WTI5d2VTaGxMbU5oYldWeVlTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhSb2FYTXViVzlrWld4V2FXVjNUV0YwY21sNExtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb1pTNWpZVzFsY21FdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0tTd2dlV2t1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIUm9hWE11Ylc5a1pXeFdhV1YzVFdGMGNtbDRLU3dnWlM1allXMWxjbUV1YVhOUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNBbUppQjBhR2x6TG0xaGRHVnlhV0ZzTG5OcGVtVkJkSFJsYm5WaGRHbHZiaUE5UFQwZ0lURWdKaVlnZUdrdWJYVnNkR2x3YkhsVFkyRnNZWElvTFhscExub3BPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1dFlYUmxjbWxoYkM1eWIzUmhkR2x2Yml3Z2FTd2djanNLSUNBZ0lDQWdJQ0J1SUNFOVBTQXdJQ1ltSUNoeUlEMGdUV0YwYUM1amIzTW9iaWtzSUdrZ1BTQk5ZWFJvTG5OcGJpaHVLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwYUdsekxtTmxiblJsY2pzS0lDQWdJQ0FnSUNCa2N5aG9jeTV6WlhRb0xTNDFMQ0F0TGpVc0lEQXBMQ0I1YVN3Z2J5d2dlR2tzSUdrc0lISXBMQ0JrY3lobGNpNXpaWFFvTGpVc0lDMHVOU3dnTUNrc0lIbHBMQ0J2TENCNGFTd2dhU3dnY2lrc0lHUnpLSFZ6TG5ObGRDZ3VOU3dnTGpVc0lEQXBMQ0I1YVN3Z2J5d2dlR2tzSUdrc0lISXBMQ0JxYkM1elpYUW9NQ3dnTUNrc0lIRnZMbk5sZENneExDQXdLU3dnVVd3dWMyVjBLREVzSURFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1pTNXlZWGt1YVc1MFpYSnpaV04wVkhKcFlXNW5iR1VvYUhNc0lHVnlMQ0IxY3l3Z0lURXNJRkZwS1RzS0lDQWdJQ0FnSUNCcFppQW9ZU0E5UFQwZ2JuVnNiQ0FtSmlBb1pITW9aWEl1YzJWMEtDMHVOU3dnTGpVc0lEQXBMQ0I1YVN3Z2J5d2dlR2tzSUdrc0lISXBMQ0J4Ynk1elpYUW9NQ3dnTVNrc0lHRWdQU0JsTG5KaGVTNXBiblJsY25ObFkzUlVjbWxoYm1kc1pTaG9jeXdnZFhNc0lHVnlMQ0FoTVN3Z1VXa3BMQ0JoSUQwOVBTQnVkV3hzS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWlM1eVlYa3ViM0pwWjJsdUxtUnBjM1JoYm1ObFZHOG9VV2twT3dvZ0lDQWdJQ0FnSUd3Z1BDQmxMbTVsWVhJZ2ZId2diQ0ErSUdVdVptRnlJSHg4SUhRdWNIVnphQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUnBjM1JoYm1ObE9pQnNMQW9nSUNBZ0lDQWdJQ0FnSUNCd2IybHVkRG9nVVdrdVkyeHZibVVvS1N3S0lDQWdJQ0FnSUNBZ0lDQWdkWFk2SUc1MExtZGxkRlZXS0ZGcExDQm9jeXdnWlhJc0lIVnpMQ0JxYkN3Z2NXOHNJRkZzTENCdVpYY2dXQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhZMlU2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nZEdocGN3b2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lHVXVZMlZ1ZEdWeUlDRTlQU0IyYjJsa0lEQWdKaVlnZEdocGN5NWpaVzUwWlhJdVkyOXdlU2hsTG1ObGJuUmxjaWtzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0JsTG0xaGRHVnlhV0ZzTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3B5Ynk1d2NtOTBiM1I1Y0dVdWFYTlRjSEpwZEdVZ1BTQWhNRHNLWm5WdVkzUnBiMjRnWkhNb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnZG1rdWMzVmlWbVZqZEc5eWN5aHpMQ0IwS1M1aFpHUlRZMkZzWVhJb0xqVXBMbTExYkhScGNHeDVLRzRwTENCcElDRTlQU0IyYjJsa0lEQWdQeUFvUzJrdWVDQTlJSElnS2lCMmFTNTRJQzBnYVNBcUlIWnBMbmtzSUV0cExua2dQU0JwSUNvZ2Rta3VlQ0FySUhJZ0tpQjJhUzU1S1NBNklFdHBMbU52Y0hrb2Rta3BMQ0J6TG1OdmNIa29aU2tzSUhNdWVDQXJQU0JMYVM1NExDQnpMbmtnS3owZ1Mya3VlU3dnY3k1aGNIQnNlVTFoZEhKcGVEUW9UV2dwT3dwOUNuWmhjaUJtY3lBOUlHNWxkeUJOTENCTGJDQTlJRzVsZHlCTkxDQmlhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVYMk4xY25KbGJuUk1aWFpsYkNBOUlEQXNJSFJvYVhNdWRIbHdaU0E5SUNKTVQwUWlMQ0JQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aDBhR2x6TENCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZG1Wc2N6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaVzUxYldWeVlXSnNaVG9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FYTk1UMFE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUFoTUFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2tzSUhSb2FYTXVZWFYwYjFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVkyOXdlU2hsTENBaE1TazdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbXhsZG1Wc2N6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUmJibDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WVdSa1RHVjJaV3dvY2k1dlltcGxZM1F1WTJ4dmJtVW9LU3dnY2k1a2FYTjBZVzVqWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUYxZEc5VmNHUmhkR1VnUFNCbExtRjFkRzlWY0dSaGRHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1JNWlhabGJDaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSFFnUFNCTllYUm9MbUZpY3loMEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11YkdWMlpXeHpMQ0JwT3dvZ0lDQWdJQ0FnSUdadmNpaHBJRDBnTURzZ2FTQThJRzR1YkdWdVozUm9JQ1ltSUNFb2RDQThJRzViYVYwdVpHbHpkR0Z1WTJVcE95QnBLeXNwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG5Od2JHbGpaU2hwTENBd0xDQjdDaUFnSUNBZ0lDQWdJQ0FnSUdScGMzUmhibU5sT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUTZJR1VLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTVoWkdRb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEZFhKeVpXNTBUR1YyWld3b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJOMWNuSmxiblJNWlhabGJEc0tJQ0FnSUgwS0lDQWdJR2RsZEU5aWFtVmpkRVp2Y2tScGMzUmhibU5sS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YkdWMlpXeHpPd29nSUNBZ0lDQWdJR2xtSUNoMExteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRzSUdrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lodUlEMGdNU3dnYVNBOUlIUXViR1Z1WjNSb095QnVJRHdnYVNBbUppQWhLR1VnUENCMFcyNWRMbVJwYzNSaGJtTmxLVHNnYmlzcktUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiYmlBdElERmRMbTlpYW1WamREc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQjlDaUFnSUNCeVlYbGpZWE4wS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVzWlhabGJITXViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1jeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzV5WVhrdWIzSnBaMmx1TG1ScGMzUmhibU5sVkc4b1puTXBPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEU5aWFtVmpkRVp2Y2tScGMzUmhibU5sS0drcExuSmhlV05oYzNRb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YkdWMlpXeHpPd29nSUNBZ0lDQWdJR2xtSUNoMExteGxibWQwYUNBK0lERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1puTXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0dVdWJXRjBjbWw0VjI5eWJHUXBMQ0JMYkM1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWm5NdVpHbHpkR0Z1WTJWVWJ5aExiQ2tnTHlCbExucHZiMjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJNRjB1YjJKcVpXTjBMblpwYzJsaWJHVWdQU0FoTURzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrc0lISTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHBJRDBnTVN3Z2NpQTlJSFF1YkdWdVozUm9PeUJwSUR3Z2NpQW1KaUJ1SUQ0OUlIUmJhVjB1WkdsemRHRnVZMlU3SUdrckt5bDBXMmtnTFNBeFhTNXZZbXBsWTNRdWRtbHphV0pzWlNBOUlDRXhMQ0IwVzJsZExtOWlhbVZqZEM1MmFYTnBZbXhsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaDBhR2x6TGw5amRYSnlaVzUwVEdWMlpXd2dQU0JwSUMwZ01Uc2dhU0E4SUhJN0lHa3JLeWwwVzJsZExtOWlhbVZqZEM1MmFYTnBZbXhsSUQwZ0lURTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhOMWNHVnlMblJ2U2xOUFRpaGxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtRjFkRzlWY0dSaGRHVWdQVDA5SUNFeElDWW1JQ2gwTG05aWFtVmpkQzVoZFhSdlZYQmtZWFJsSUQwZ0lURXBMQ0IwTG05aWFtVmpkQzVzWlhabGJITWdQU0JiWFRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXViR1YyWld4ek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQnVMbXhsYm1kMGFEc2dhU0E4SUhJN0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2JsdHBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDNXZZbXBsWTNRdWJHVjJaV3h6TG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMkpxWldOME9pQnZMbTlpYW1WamRDNTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUc4dVpHbHpkR0Z1WTJVS0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwT3dvZ0lDQWdmUXA5TENCbFl5QTlJRzVsZHlCTkxDQjBZeUE5SUc1bGR5QldaU3dnYm1NZ1BTQnVaWGNnVm1Vc0lGSjRJRDBnYm1WM0lFMHNJR2xqSUQwZ2JtVjNJSEJsTENCemJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ2MzUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZENsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxOcmFXNXVaV1JOWlhOb0lpd2dkR2hwY3k1aWFXNWtUVzlrWlNBOUlDSmhkSFJoWTJobFpDSXNJSFJvYVhNdVltbHVaRTFoZEhKcGVDQTlJRzVsZHlCd1pTd2dkR2hwY3k1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlNBOUlHNWxkeUJ3WlRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtSnBibVJOYjJSbElEMGdaUzVpYVc1a1RXOWtaU3dnZEdocGN5NWlhVzVrVFdGMGNtbDRMbU52Y0hrb1pTNWlhVzVrVFdGMGNtbDRLU3dnZEdocGN5NWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0dVdVltbHVaRTFoZEhKcGVFbHVkbVZ5YzJVcExDQjBhR2x6TG5OclpXeGxkRzl1SUQwZ1pTNXphMlZzWlhSdmJpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHSnBibVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWMydGxiR1YwYjI0Z1BTQmxMQ0IwSUQwOVBTQjJiMmxrSURBZ0ppWWdLSFJvYVhNdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0lUQXBMQ0IwYUdsekxuTnJaV3hsZEc5dUxtTmhiR04xYkdGMFpVbHVkbVZ5YzJWektDa3NJSFFnUFNCMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0TG1OdmNIa29kQ2tzSUhSb2FYTXVZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVXVZMjl3ZVNoMEtTNXBiblpsY25Rb0tUc0tJQ0FnSUgwS0lDQWdJSEJ2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1emEyVnNaWFJ2Ymk1d2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1WVGEybHVWMlZwWjJoMGN5Z3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJRzVsZHlCV1pTd2dkQ0E5SUhSb2FYTXVaMlZ2YldWMGNua3VZWFIwY21saWRYUmxjeTV6YTJsdVYyVnBaMmgwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMExtTnZkVzUwT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1NElEMGdkQzVuWlhSWUtHNHBMQ0JsTG5rZ1BTQjBMbWRsZEZrb2Jpa3NJR1V1ZWlBOUlIUXVaMlYwV2lodUtTd2daUzUzSUQwZ2RDNW5aWFJYS0c0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJREVnTHlCbExtMWhibWhoZEhSaGJreGxibWQwYUNncE93b2dJQ0FnSUNBZ0lDQWdJQ0J5SUNFOVBTQXhJQzhnTUNBL0lHVXViWFZzZEdsd2JIbFRZMkZzWVhJb2Npa2dPaUJsTG5ObGRDZ3hMQ0F3TENBd0xDQXdLU3dnZEM1elpYUllXVnBYS0c0c0lHVXVlQ3dnWlM1NUxDQmxMbm9zSUdVdWR5azdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcExDQjBhR2x6TG1KcGJtUk5iMlJsSUQwOVBTQWlZWFIwWVdOb1pXUWlJRDhnZEdocGN5NWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwSURvZ2RHaHBjeTVpYVc1a1RXOWtaU0E5UFQwZ0ltUmxkR0ZqYUdWa0lpQS9JSFJvYVhNdVltbHVaRTFoZEhKcGVFbHVkbVZ5YzJVdVkyOXdlU2gwYUdsekxtSnBibVJOWVhSeWFYZ3BMbWx1ZG1WeWRDZ3BJRG9nWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VGEybHVibVZrVFdWemFEb2dWVzV5WldOdloyNXBlbVZrSUdKcGJtUk5iMlJsT2lBaUlDc2dkR2hwY3k1aWFXNWtUVzlrWlNrN0NpQWdJQ0I5Q2lBZ0lDQmliMjVsVkhKaGJuTm1iM0p0S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWMydGxiR1YwYjI0c0lHa2dQU0IwYUdsekxtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lIUmpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVM1aGRIUnlhV0oxZEdWekxuTnJhVzVKYm1SbGVDd2daU2tzSUc1akxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hUzVoZEhSeWFXSjFkR1Z6TG5OcmFXNVhaV2xuYUhRc0lHVXBMQ0JsWXk1amIzQjVLSFFwTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG1KcGJtUk5ZWFJ5YVhncExDQjBMbk5sZENnd0xDQXdMQ0F3S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdPeUJ5SUR3Z05Ec2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQnVZeTVuWlhSRGIyMXdiMjVsYm5Rb2NpazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZJQ0U5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUmpMbWRsZEVOdmJYQnZibVZ1ZENoeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbGpMbTExYkhScGNHeDVUV0YwY21salpYTW9iaTVpYjI1bGMxdGhYUzV0WVhSeWFYaFhiM0pzWkN3Z2JpNWliMjVsU1c1MlpYSnpaWE5iWVYwcExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaFNlQzVqYjNCNUtHVmpLUzVoY0hCc2VVMWhkSEpwZURRb2FXTXBMQ0J2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVoY0hCc2VVMWhkSEpwZURRb2RHaHBjeTVpYVc1a1RXRjBjbWw0U1c1MlpYSnpaU2s3Q2lBZ0lDQjlDbjA3Q25OdkxuQnliM1J2ZEhsd1pTNXBjMU5yYVc1dVpXUk5aWE5vSUQwZ0lUQTdDblpoY2lCdmJ5QTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKQ2IyNWxJanNLSUNBZ0lIMEtmVHNLYjI4dWNISnZkRzkwZVhCbExtbHpRbTl1WlNBOUlDRXdPd3AyWVhJZ2NXNGdQU0JqYkdGemN5QmxlSFJsYm1SeklHOTBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdWRXeHNMQ0IwSUQwZ01Td2diaUE5SURFc0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNZ1BTQnlkQ3dnYUNBOUlISjBMQ0IxTENCa0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodWRXeHNMQ0J2TENCaExDQnNMQ0JqTENCb0xDQnBMQ0J5TENCMUxDQmtLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHRZV2RsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQnVDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXRZV2RHYVd4MFpYSWdQU0JqTENCMGFHbHpMbTFwYmtacGJIUmxjaUE5SUdnc0lIUm9hWE11WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnSVRFc0lIUm9hWE11Wm14cGNGa2dQU0FoTVN3Z2RHaHBjeTUxYm5CaFkydEJiR2xuYm0xbGJuUWdQU0F4T3dvZ0lDQWdmUXA5T3dweGJpNXdjbTkwYjNSNWNHVXVhWE5FWVhSaFZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ2NtTWdQU0J1WlhjZ2NHVXNJRkI0SUQwZ2JtVjNJSEJsTENCaGJ5QTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0JiWFN3Z2RDQTlJRnRkS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblYxYVdRZ1BTQkZkQ2dwTENCMGFHbHpMbUp2Ym1WeklEMGdaUzV6YkdsalpTZ3dLU3dnZEdocGN5NWliMjVsU1c1MlpYSnpaWE1nUFNCMExDQjBhR2x6TG1KdmJtVk5ZWFJ5YVdObGN5QTlJRzUxYkd3c0lIUm9hWE11WW05dVpWUmxlSFIxY21VZ1BTQnVkV3hzTENCMGFHbHpMbUp2Ym1WVVpYaDBkWEpsVTJsNlpTQTlJREFzSUhSb2FYTXVabkpoYldVZ1BTQXRNU3dnZEdocGN5NXBibWwwS0NrN0NpQWdJQ0I5Q2lBZ0lDQnBibWwwS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVpYjI1bGN5d2dkQ0E5SUhSb2FYTXVZbTl1WlVsdWRtVnljMlZ6T3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1KdmJtVk5ZWFJ5YVdObGN5QTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29aUzVzWlc1bmRHZ2dLaUF4Tmlrc0lIUXViR1Z1WjNSb0lEMDlQU0F3S1NCMGFHbHpMbU5oYkdOMWJHRjBaVWx1ZG1WeWMyVnpLQ2s3Q2lBZ0lDQWdJQ0FnWld4elpTQnBaaUFvWlM1c1pXNW5kR2dnSVQwOUlIUXViR1Z1WjNSb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVUydGxiR1YwYjI0NklFNTFiV0psY2lCdlppQnBiblpsY25ObElHSnZibVVnYldGMGNtbGpaWE1nWkc5bGN5QnViM1FnYldGMFkyZ2dZVzF2ZFc1MElHOW1JR0p2Ym1WekxpSXBMQ0IwYUdsekxtSnZibVZKYm5abGNuTmxjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEdocGN5NWliMjVsY3k1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGRHaHBjeTVpYjI1bFNXNTJaWEp6WlhNdWNIVnphQ2h1WlhjZ2NHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOaGJHTjFiR0YwWlVsdWRtVnljMlZ6S0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WW05dVpVbHVkbVZ5YzJWekxteGxibWQwYUNBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTUN3Z2RDQTlJSFJvYVhNdVltOXVaWE11YkdWdVozUm9PeUJsSUR3Z2REc2daU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnY0dVN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVltOXVaWE5iWlYwZ0ppWWdiaTVqYjNCNUtIUm9hWE11WW05dVpYTmJaVjB1YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncExDQjBhR2x6TG1KdmJtVkpiblpsY25ObGN5NXdkWE5vS0c0cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSEJ2YzJVb0tTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTUN3Z2RDQTlJSFJvYVhNdVltOXVaWE11YkdWdVozUm9PeUJsSUR3Z2REc2daU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1KdmJtVnpXMlZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVJQ1ltSUc0dWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNoMGFHbHpMbUp2Ym1WSmJuWmxjbk5sYzF0bFhTa3VhVzUyWlhKMEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaVEVnUFNBd0xDQjBNU0E5SUhSb2FYTXVZbTl1WlhNdWJHVnVaM1JvT3lCbE1TQThJSFF4T3lCbE1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzR4SUQwZ2RHaHBjeTVpYjI1bGMxdGxNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHhJQ1ltSUNodU1TNXdZWEpsYm5RZ0ppWWdiakV1Y0dGeVpXNTBMbWx6UW05dVpTQS9JQ2h1TVM1dFlYUnlhWGd1WTI5d2VTaHVNUzV3WVhKbGJuUXViV0YwY21sNFYyOXliR1FwTG1sdWRtVnlkQ2dwTENCdU1TNXRZWFJ5YVhndWJYVnNkR2x3Ykhrb2JqRXViV0YwY21sNFYyOXliR1FwS1NBNklHNHhMbTFoZEhKcGVDNWpiM0I1S0c0eExtMWhkSEpwZUZkdmNteGtLU3dnYmpFdWJXRjBjbWw0TG1SbFkyOXRjRzl6WlNodU1TNXdiM05wZEdsdmJpd2diakV1Y1hWaGRHVnlibWx2Yml3Z2JqRXVjMk5oYkdVcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtSnZibVZ6TENCMElEMGdkR2hwY3k1aWIyNWxTVzUyWlhKelpYTXNJRzRnUFNCMGFHbHpMbUp2Ym1WTllYUnlhV05sY3l3Z2FTQTlJSFJvYVhNdVltOXVaVlJsZUhSMWNtVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQmxXM0pkSUQ4Z1pWdHlYUzV0WVhSeWFYaFhiM0pzWkNBNklGQjRPd29nSUNBZ0lDQWdJQ0FnSUNCeVl5NXRkV3gwYVhCc2VVMWhkSEpwWTJWektHRXNJSFJiY2wwcExDQnlZeTUwYjBGeWNtRjVLRzRzSUhJZ0tpQXhOaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdrZ0lUMDlJRzUxYkd3Z0ppWWdLR2t1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2s3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHRnZLSFJvYVhNdVltOXVaWE1zSUhSb2FYTXVZbTl1WlVsdWRtVnljMlZ6S1RzS0lDQWdJSDBLSUNBZ0lHTnZiWEIxZEdWQ2IyNWxWR1Y0ZEhWeVpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJRTFoZEdndWMzRnlkQ2gwYUdsekxtSnZibVZ6TG14bGJtZDBhQ0FxSURRcE93b2dJQ0FnSUNBZ0lHVWdQU0JZWXlobEtTd2daU0E5SUUxaGRHZ3ViV0Y0S0dVc0lEUXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaGxJQ29nWlNBcUlEUXBPd29nSUNBZ0lDQWdJSFF1YzJWMEtIUm9hWE11WW05dVpVMWhkSEpwWTJWektUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHNWxkeUJ4YmloMExDQmxMQ0JsTENCamRDd2dibTRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXVZbTl1WlUxaGRISnBZMlZ6SUQwZ2RDd2dkR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTQTlJRzRzSUhSb2FYTXVZbTl1WlZSbGVIUjFjbVZUYVhwbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVKdmJtVkNlVTVoYldVb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtSnZibVZ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1aWIyNWxjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drdWJtRnRaU0E5UFQwZ1pTa2djbVYwZFhKdUlHazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbUp2Ym1WVVpYaDBkWEpsSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG1KdmJtVlVaWGgwZFhKbExtUnBjM0J2YzJVb0tTd2dkR2hwY3k1aWIyNWxWR1Y0ZEhWeVpTQTlJRzUxYkd3cE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZFhWcFpDQTlJR1V1ZFhWcFpEc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdaUzVpYjI1bGN5NXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVltOXVaWE5iYmwwc0lHOGdQU0IwVzNKZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQwOVBTQjJiMmxrSURBZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VTJ0bGJHVjBiMjQ2SUU1dklHSnZibVVnWm05MWJtUWdkMmwwYUNCVlZVbEVPaUlzSUhJcExDQnZJRDBnYm1WM0lHOXZLU3dnZEdocGN5NWliMjVsY3k1d2RYTm9LRzhwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3k1d2RYTm9LRzVsZHlCd1pTZ3BMbVp5YjIxQmNuSmhlU2hsTG1KdmJtVkpiblpsY25ObGMxdHVYU2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBibWwwS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGa1lYUmhPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpVTJ0bGJHVjBiMjRpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkRzl5T2lBaVUydGxiR1YwYjI0dWRHOUtVMDlPSWdvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCaWIyNWxjem9nVzEwc0NpQWdJQ0FnSUNBZ0lDQWdJR0p2Ym1WSmJuWmxjbk5sY3pvZ1cxMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR1V1ZFhWcFpDQTlJSFJvYVhNdWRYVnBaRHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVltOXVaWE1zSUc0Z1BTQjBhR2x6TG1KdmJtVkpiblpsY25ObGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdkQzVzWlc1bmRHZzdJR2tnUENCeU95QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUmJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVZbTl1WlhNdWNIVnphQ2h2TG5WMWFXUXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1YmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVltOXVaVWx1ZG1WeWMyVnpMbkIxYzJnb1lTNTBiMEZ5Y21GNUtDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtmU3dnV0c0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa2dQU0F4S1hzS0lDQWdJQ0FnSUNCMGVYQmxiMllnYmlBOVBTQWliblZ0WW1WeUlpQW1KaUFvYVNBOUlHNHNJRzRnUFNBaE1Td2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1U1c1emRHRnVZMlZrUW5WbVptVnlRWFIwY21saWRYUmxPaUJVYUdVZ1kyOXVjM1J5ZFdOMGIzSWdibTkzSUdWNGNHVmpkSE1nYm05eWJXRnNhWHBsWkNCaGN5QjBhR1VnZEdocGNtUWdZWEpuZFcxbGJuUXVJaWtwT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHBPd29nSUNBZ0lDQWdJSFJvYVhNdWJXVnphRkJsY2tGMGRISnBZblYwWlNBOUlHazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV0WlhOb1VHVnlRWFIwY21saWRYUmxJRDBnWlM1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQTlJSFJvYVhNdWJXVnphRkJsY2tGMGRISnBZblYwWlN3Z1pTNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3TENCbE93b2dJQ0FnZlFwOU93cFliaTV3Y205MGIzUjVjR1V1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VnUFNBaE1Ec0tkbUZ5SUhOaklEMGdibVYzSUhCbExDQnZZeUE5SUc1bGR5QndaU3dnY0hNZ1BTQmJYU3dnZEhJZ1BTQnVaWGNnYzNRc0lIaGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnpkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx1YzNSaGJtTmxUV0YwY21sNElEMGdibVYzSUZodUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2JpQXFJREUyS1N3Z01UWXBMQ0IwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0lnUFNCdWRXeHNMQ0IwYUdsekxtTnZkVzUwSUQwZ2Jpd2dkR2hwY3k1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXBibk4wWVc1alpVMWhkSEpwZUM1amIzQjVLR1V1YVc1emRHRnVZMlZOWVhSeWFYZ3BMQ0JsTG1sdWMzUmhibU5sUTI5c2IzSWdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVhVzV6ZEdGdVkyVkRiMnh2Y2lBOUlHVXVhVzV6ZEdGdVkyVkRiMnh2Y2k1amJHOXVaU2dwS1N3Z2RHaHBjeTVqYjNWdWRDQTlJR1V1WTI5MWJuUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEYjJ4dmNrRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBMbVp5YjIxQmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0l1WVhKeVlYa3NJR1VnS2lBektUc0tJQ0FnSUgwS0lDQWdJR2RsZEUxaGRISnBlRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwTG1aeWIyMUJjbkpoZVNoMGFHbHpMbWx1YzNSaGJtTmxUV0YwY21sNExtRnljbUY1TENCbElDb2dNVFlwT3dvZ0lDQWdmUW9nSUNBZ2NtRjVZMkZ6ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtMWhkSEpwZUZkdmNteGtMQ0JwSUQwZ2RHaHBjeTVqYjNWdWREc0tJQ0FnSUNBZ0lDQnBaaUFvZEhJdVoyVnZiV1YwY25rZ1BTQjBhR2x6TG1kbGIyMWxkSEo1TENCMGNpNXRZWFJsY21saGJDQTlJSFJvYVhNdWJXRjBaWEpwWVd3c0lIUnlMbTFoZEdWeWFXRnNJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENCcE95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFMWhkSEpwZUVGMEtISXNJSE5qS1N3Z2IyTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aHVMQ0J6WXlrc0lIUnlMbTFoZEhKcGVGZHZjbXhrSUQwZ2IyTXNJSFJ5TG5KaGVXTmhjM1FvWlN3Z2NITXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdMQ0JoSUQwZ2NITXViR1Z1WjNSb095QnZJRHdnWVRzZ2J5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdjSE5iYjEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0xtbHVjM1JoYm1ObFNXUWdQU0J5TENCc0xtOWlhbVZqZENBOUlIUm9hWE1zSUhRdWNIVnphQ2hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCd2N5NXNaVzVuZEdnZ1BTQXdPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhObGRFTnZiRzl5UVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhVzV6ZEdGdVkyVkRiMnh2Y2lBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1cGJuTjBZVzVqWlVOdmJHOXlJRDBnYm1WM0lGaHVLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29kR2hwY3k1cGJuTjBZVzVqWlUxaGRISnBlQzVqYjNWdWRDQXFJRE1wTENBektTa3NJSFF1ZEc5QmNuSmhlU2gwYUdsekxtbHVjM1JoYm1ObFEyOXNiM0l1WVhKeVlYa3NJR1VnS2lBektUc0tJQ0FnSUgwS0lDQWdJSE5sZEUxaGRISnBlRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwTG5SdlFYSnlZWGtvZEdocGN5NXBibk4wWVc1alpVMWhkSEpwZUM1aGNuSmhlU3dnWlNBcUlERTJLVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTF2Y25Cb1ZHRnlaMlYwY3lncElIdDlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WkdsemNHRjBZMmhGZG1WdWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0prYVhOd2IzTmxJZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUXA5T3dwNFlTNXdjbTkwYjNSNWNHVXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lEMGdJVEE3Q25aaGNpQm1kQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdaSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlUR2x1WlVKaGMybGpUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTVzYVc1bGQybGtkR2dnUFNBeExDQjBhR2x6TG14cGJtVmpZWEFnUFNBaWNtOTFibVFpTENCMGFHbHpMbXhwYm1WcWIybHVJRDBnSW5KdmRXNWtJaXdnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG14cGJtVjNhV1IwYUNBOUlHVXViR2x1WlhkcFpIUm9MQ0IwYUdsekxteHBibVZqWVhBZ1BTQmxMbXhwYm1WallYQXNJSFJvYVhNdWJHbHVaV3B2YVc0Z1BTQmxMbXhwYm1WcWIybHVMQ0IwYUdsek93b2dJQ0FnZlFwOU93cG1kQzV3Y205MGIzUjVjR1V1YVhOTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1lXTWdQU0J1WlhjZ1RTd2diR01nUFNCdVpYY2dUU3dnWTJNZ1BTQnVaWGNnY0dVc0lGaHZJRDBnYm1WM0lFTnVMQ0J0Y3lBOUlHNWxkeUJCYml3Z2IyNGdQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dYMlVzSUhRZ1BTQnVaWGNnWm5RcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa3hwYm1VaUxDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1pTd2dkR2hwY3k1dFlYUmxjbWxoYkNBOUlIUXNJSFJvYVhNdWRYQmtZWFJsVFc5eWNHaFVZWEpuWlhSektDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQ0E5SUdVdWJXRjBaWEpwWVd3c0lIUm9hWE11WjJWdmJXVjBjbmtnUFNCbExtZGxiMjFsZEhKNUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlV4cGJtVkVhWE4wWVc1alpYTW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUdsbUlDaGxMbWx1WkdWNElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQnVJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXhMQ0J5SUQwZ2RDNWpiM1Z1ZERzZ2FTQThJSEk3SUdrckt5bGhZeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hRc0lHa2dMU0F4S1N3Z2JHTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gwTENCcEtTd2dibHRwWFNBOUlHNWJhU0F0SURGZExDQnVXMmxkSUNzOUlHRmpMbVJwYzNSaGJtTmxWRzhvYkdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5ObGRFRjBkSEpwWW5WMFpTZ2liR2x1WlVScGMzUmhibU5sSWl3Z2JtVjNJR1JsS0c0c0lERXBLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVc1bExtTnZiWEIxZEdWTWFXNWxSR2x6ZEdGdVkyVnpLQ2s2SUVOdmJYQjFkR0YwYVc5dUlHOXViSGtnY0c5emMybGliR1VnZDJsMGFDQnViMjR0YVc1a1pYaGxaQ0JDZFdabVpYSkhaVzl0WlhSeWVTNGlLVHNLSUNBZ0lDQWdJQ0JsYkhObElHVXVhWE5IWlc5dFpYUnllU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU1hVzVsTG1OdmJYQjFkR1ZNYVc1bFJHbHpkR0Z1WTJWektDa2dibThnYkc5dVoyVnlJSE4xY0hCdmNuUnpJRlJJVWtWRkxrZGxiMjFsZEhKNUxpQlZjMlVnVkVoU1JVVXVRblZtWm1WeVIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKaGVXTmhjM1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2FTQTlJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXNJSElnUFNCbExuQmhjbUZ0Y3k1TWFXNWxMblJvY21WemFHOXNaQ3dnYnlBOUlHNHVaSEpoZDFKaGJtZGxPd29nSUNBZ0lDQWdJR2xtSUNodUxtSnZkVzVrYVc1blUzQm9aWEpsSUQwOVBTQnVkV3hzSUNZbUlHNHVZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0Nrc0lHMXpMbU52Y0hrb2JpNWliM1Z1WkdsdVoxTndhR1Z5WlNrc0lHMXpMbUZ3Y0d4NVRXRjBjbWw0TkNocEtTd2diWE11Y21Ga2FYVnpJQ3M5SUhJc0lHVXVjbUY1TG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvYlhNcElEMDlQU0FoTVNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUdOakxtTnZjSGtvYVNrdWFXNTJaWEowS0Nrc0lGaHZMbU52Y0hrb1pTNXlZWGtwTG1Gd2NHeDVUV0YwY21sNE5DaGpZeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J5SUM4Z0tDaDBhR2x6TG5OallXeGxMbmdnS3lCMGFHbHpMbk5qWVd4bExua2dLeUIwYUdsekxuTmpZV3hsTG5vcElDOGdNeWtzSUd3Z1BTQmhJQ29nWVN3Z1l5QTlJRzVsZHlCTkxDQm9JRDBnYm1WM0lFMHNJSFVnUFNCdVpYY2dUU3dnWkNBOUlHNWxkeUJOTENCbUlEMGdkR2hwY3k1cGMweHBibVZUWldkdFpXNTBjeUEvSURJZ09pQXhPd29nSUNBZ0lDQWdJR2xtSUNodUxtbHpRblZtWm1WeVIyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0J1TG1sdVpHVjRMQ0IySUQwZ2JpNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iU0FoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHY2dQU0JOWVhSb0xtMWhlQ2d3TENCdkxuTjBZWEowS1N3Z2NDQTlJRTFoZEdndWJXbHVLRzB1WTI5MWJuUXNJRzh1YzNSaGNuUWdLeUJ2TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SUdjc0lIa2dQU0J3SUMwZ01Uc2dYeUE4SUhrN0lGOGdLejBnWmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdJZ1BTQnRMbWRsZEZnb1h5a3NJRUVnUFNCdExtZGxkRmdvWHlBcklERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZGl3Z1lpa3NJR2d1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMkxDQkJLU3dnV0c4dVpHbHpkR0Z1WTJWVGNWUnZVMlZuYldWdWRDaGpMQ0JvTENCa0xDQjFLU0ErSUd3cElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1F1WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE11YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSklEMGdaUzV5WVhrdWIzSnBaMmx1TG1ScGMzUmhibU5sVkc4b1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnU1NBOElHVXVibVZoY2lCOGZDQkpJRDRnWlM1bVlYSWdmSHdnZEM1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJRWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1ME9pQjFMbU5zYjI1bEtDa3VZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXViV0YwY21sNFYyOXliR1FwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVEb2dYeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZqWlRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZqWlVsdVpHVjRPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1E2SUhSb2FYTUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuTVNBOUlFMWhkR2d1YldGNEtEQXNJRzh1YzNSaGNuUXBMQ0J3TVNBOUlFMWhkR2d1YldsdUtIWXVZMjkxYm5Rc0lHOHVjM1JoY25RZ0t5QnZMbU52ZFc1MEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h6RWdQU0JuTVN3Z2VURWdQU0J3TVNBdElERTdJRjh4SUR3Z2VURTdJRjh4SUNzOUlHWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZGl3Z1h6RXBMQ0JvTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2Rpd2dYekVnS3lBeEtTd2dXRzh1WkdsemRHRnVZMlZUY1ZSdlUyVm5iV1Z1ZENoakxDQm9MQ0JrTENCMUtTQStJR3dwSUdOdmJuUnBiblZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCTVNBOUlHVXVjbUY1TG05eWFXZHBiaTVrYVhOMFlXNWpaVlJ2S0dRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUV4SUR3Z1pTNXVaV0Z5SUh4OElFRXhJRDRnWlM1bVlYSWdmSHdnZEM1d2RYTm9LSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVTZJRUV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjJsdWREb2dkUzVqYkc5dVpTZ3BMbUZ3Y0d4NVRXRjBjbWw0TkNoMGFHbHpMbTFoZEhKcGVGZHZjbXhrS1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZzZJRjh4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWVdObE9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWVdObFNXNWtaWGc2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ2RHaHBjd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRzR1YVhOSFpXOXRaWFJ5ZVNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVNYVc1bExuSmhlV05oYzNRb0tTQnVieUJzYjI1blpYSWdjM1Z3Y0c5eWRITWdWRWhTUlVVdVIyVnZiV1YwY25rdUlGVnpaU0JVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXOXljR2hVWVhKblpYUnpLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NW5aVzl0WlhSeWVUc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1cGMwSjFabVpsY2tkbGIyMWxkSEo1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdaUzV0YjNKd2FFRjBkSEpwWW5WMFpYTXNJRzRnUFNCUFltcGxZM1F1YTJWNWN5aDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzR1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMFcyNWJNRjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklEMGdXMTBzSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1SUQwZ2UzMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdrdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCcFczSmRMbTVoYldVZ2ZId2dVM1J5YVc1bktISXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN5NXdkWE5vS0RBcExDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMFJHbGpkR2x2Ym1GeWVWdGhYU0E5SUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhReElEMGdaUzV0YjNKd2FGUmhjbWRsZEhNN0NpQWdJQ0FnSUNBZ0lDQWdJSFF4SUNFOVBTQjJiMmxrSURBZ0ppWWdkREV1YkdWdVozUm9JRDRnTUNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVNYVc1bExuVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BJR1J2WlhNZ2JtOTBJSE4xY0hCdmNuUWdWRWhTUlVVdVIyVnZiV1YwY25rdUlGVnpaU0JVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZUc0tiMjR1Y0hKdmRHOTBlWEJsTG1selRHbHVaU0E5SUNFd093cDJZWElnYUdNZ1BTQnVaWGNnVFN3Z2RXTWdQU0J1WlhjZ1RTd2dkM1FnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzl1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk1hVzVsVTJWbmJXVnVkSE1pT3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlV4cGJtVkVhWE4wWVc1alpYTW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtZGxiMjFsZEhKNU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1selFuVm1abVZ5UjJWdmJXVjBjbmtwSUdsbUlDaGxMbWx1WkdWNElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1aGRIUnlhV0oxZEdWekxuQnZjMmwwYVc5dUxDQnVJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0IwTG1OdmRXNTBPeUJwSUR3Z2Nqc2dhU0FyUFNBeUtXaGpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z2FTa3NJSFZqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2dhU0FySURFcExDQnVXMmxkSUQwZ2FTQTlQVDBnTUNBL0lEQWdPaUJ1VzJrZ0xTQXhYU3dnYmx0cElDc2dNVjBnUFNCdVcybGRJQ3NnYUdNdVpHbHpkR0Z1WTJWVWJ5aDFZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVjMlYwUVhSMGNtbGlkWFJsS0NKc2FXNWxSR2x6ZEdGdVkyVWlMQ0J1WlhjZ1pHVW9iaXdnTVNrcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBibVZUWldkdFpXNTBjeTVqYjIxd2RYUmxUR2x1WlVScGMzUmhibU5sY3lncE9pQkRiMjF3ZFhSaGRHbHZiaUJ2Ym14NUlIQnZjM05wWW14bElIZHBkR2dnYm05dUxXbHVaR1Y0WldRZ1FuVm1abVZ5UjJWdmJXVjBjbmt1SWlrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JsTG1selIyVnZiV1YwY25rZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VEdsdVpWTmxaMjFsYm5SekxtTnZiWEIxZEdWTWFXNWxSR2x6ZEdGdVkyVnpLQ2tnYm04Z2JHOXVaMlZ5SUhOMWNIQnZjblJ6SUZSSVVrVkZMa2RsYjIxbGRISjVMaUJWYzJVZ1ZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNua2dhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLZlRzS2QzUXVjSEp2ZEc5MGVYQmxMbWx6VEdsdVpWTmxaMjFsYm5SeklEMGdJVEE3Q25aaGNpQjVZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lreHBibVZNYjI5d0lqc0tJQ0FnSUgwS2ZUc0tlV0V1Y0hKdmRHOTBlWEJsTG1selRHbHVaVXh2YjNBZ1BTQWhNRHNLZG1GeUlHcHVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFiMmx1ZEhOTllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IwYUdsekxtMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbk5wZW1VZ1BTQXhMQ0IwYUdsekxuTnBlbVZCZEhSbGJuVmhkR2x2YmlBOUlDRXdMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11YldGd0lEMGdaUzV0WVhBc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG5OcGVtVWdQU0JsTG5OcGVtVXNJSFJvYVhNdWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwZ1pTNXphWHBsUVhSMFpXNTFZWFJwYjI0c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q21wdUxuQnliM1J2ZEhsd1pTNXBjMUJ2YVc1MGMwMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQmtZeUE5SUc1bGR5QndaU3dnYzJFZ1BTQnVaWGNnUTI0c0lHZHpJRDBnYm1WM0lFRnVMQ0I0Y3lBOUlHNWxkeUJOTENCNmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5QmZaU3dnZENBOUlHNWxkeUJxYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVRzlwYm5Seklpd2dkR2hwY3k1blpXOXRaWFJ5ZVNBOUlHVXNJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQjBMQ0IwYUdsekxuVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCbExtMWhkR1Z5YVdGc0xDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1pTNW5aVzl0WlhSeWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISmhlV05oYzNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dhU0E5SUhSb2FYTXViV0YwY21sNFYyOXliR1FzSUhJZ1BTQmxMbkJoY21GdGN5NVFiMmx1ZEhNdWRHaHlaWE5vYjJ4a0xDQnZJRDBnYmk1a2NtRjNVbUZ1WjJVN0NpQWdJQ0FnSUNBZ2FXWWdLRzR1WW05MWJtUnBibWRUY0dobGNtVWdQVDA5SUc1MWJHd2dKaVlnYmk1amIyMXdkWFJsUW05MWJtUnBibWRUY0dobGNtVW9LU3dnWjNNdVkyOXdlU2h1TG1KdmRXNWthVzVuVTNCb1pYSmxLU3dnWjNNdVlYQndiSGxOWVhSeWFYZzBLR2twTENCbmN5NXlZV1JwZFhNZ0t6MGdjaXdnWlM1eVlYa3VhVzUwWlhKelpXTjBjMU53YUdWeVpTaG5jeWtnUFQwOUlDRXhLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdaR011WTI5d2VTaHBLUzVwYm5abGNuUW9LU3dnYzJFdVkyOXdlU2hsTG5KaGVTa3VZWEJ3YkhsTllYUnlhWGcwS0dSaktUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlISWdMeUFvS0hSb2FYTXVjMk5oYkdVdWVDQXJJSFJvYVhNdWMyTmhiR1V1ZVNBcklIUm9hWE11YzJOaGJHVXVlaWtnTHlBektTd2diQ0E5SUdFZ0tpQmhPd29nSUNBZ0lDQWdJR2xtSUNodUxtbHpRblZtWm1WeVIyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0J1TG1sdVpHVjRMQ0IxSUQwZ2JpNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZeUFoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JOWVhSb0xtMWhlQ2d3TENCdkxuTjBZWEowS1N3Z1ppQTlJRTFoZEdndWJXbHVLR011WTI5MWJuUXNJRzh1YzNSaGNuUWdLeUJ2TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SUdRc0lIZ2dQU0JtT3lCdElEd2dlRHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJR011WjJWMFdDaHRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNGN5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFVzSUhZcExDQm1ZeWg0Y3l3Z2Rpd2diQ3dnYVN3Z1pTd2dkQ3dnZEdocGN5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pERWdQU0JOWVhSb0xtMWhlQ2d3TENCdkxuTjBZWEowS1N3Z1pqRWdQU0JOWVhSb0xtMXBiaWgxTG1OdmRXNTBMQ0J2TG5OMFlYSjBJQ3NnYnk1amIzVnVkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzB4SUQwZ1pERXNJSGd4SUQwZ1pqRTdJRzB4SUR3Z2VERTdJRzB4S3lzcGVITXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2gxTENCdE1Ta3NJR1pqS0hoekxDQnRNU3dnYkN3Z2FTd2daU3dnZEN3Z2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVRzlwYm5SekxuSmhlV05oYzNRb0tTQnVieUJzYjI1blpYSWdjM1Z3Y0c5eWRITWdWRWhTUlVVdVIyVnZiV1YwY25rdUlGVnpaU0JVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXOXljR2hVWVhKblpYUnpLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NW5aVzl0WlhSeWVUc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1cGMwSjFabVpsY2tkbGIyMWxkSEo1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMElEMGdaUzV0YjNKd2FFRjBkSEpwWW5WMFpYTXNJRzRnUFNCUFltcGxZM1F1YTJWNWN5aDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzR1YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMFcyNWJNRjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeklEMGdXMTBzSUhSb2FYTXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1SUQwZ2UzMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdrdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCcFczSmRMbTVoYldVZ2ZId2dVM1J5YVc1bktISXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN5NXdkWE5vS0RBcExDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMFJHbGpkR2x2Ym1GeWVWdGhYU0E5SUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhReElEMGdaUzV0YjNKd2FGUmhjbWRsZEhNN0NpQWdJQ0FnSUNBZ0lDQWdJSFF4SUNFOVBTQjJiMmxrSURBZ0ppWWdkREV1YkdWdVozUm9JRDRnTUNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRYjJsdWRITXVkWEJrWVhSbFRXOXljR2hVWVhKblpYUnpLQ2tnWkc5bGN5QnViM1FnYzNWd2NHOXlkQ0JVU0ZKRlJTNUhaVzl0WlhSeWVTNGdWWE5sSUZSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUlHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlPd3A2Y2k1d2NtOTBiM1I1Y0dVdWFYTlFiMmx1ZEhNZ1BTQWhNRHNLWm5WdVkzUnBiMjRnWm1Nb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ2JHVjBJR0VnUFNCellTNWthWE4wWVc1alpWTnhWRzlRYjJsdWRDaHpLVHNLSUNBZ0lHbG1JQ2hoSUR3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCc0lEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ2MyRXVZMnh2YzJWemRGQnZhVzUwVkc5UWIybHVkQ2h6TENCc0tTd2diQzVoY0hCc2VVMWhkSEpwZURRb2JpazdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQnBMbkpoZVM1dmNtbG5hVzR1WkdsemRHRnVZMlZVYnloc0tUc0tJQ0FnSUNBZ0lDQnBaaUFvWXlBOElHa3VibVZoY2lCOGZDQmpJRDRnYVM1bVlYSXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnlMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrYVhOMFlXNWpaVG9nWXl3S0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVlViMUpoZVRvZ1RXRjBhQzV6Y1hKMEtHRXBMQW9nSUNBZ0lDQWdJQ0FnSUNCd2IybHVkRG9nYkN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdaaFkyVTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2did29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUXA5Q25aaGNpQjNhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5azdDaUFnSUNBZ0lDQWdkR2hwY3k1bWIzSnRZWFFnUFNCaElDRTlQU0IyYjJsa0lEQWdQeUJoSURvZ1IyNHNJSFJvYVhNdWJXbHVSbWxzZEdWeUlEMGdieUFoUFQwZ2RtOXBaQ0F3SUQ4Z2J5QTZJSFIwTENCMGFHbHpMbTFoWjBacGJIUmxjaUE5SUhJZ0lUMDlJSFp2YVdRZ01DQS9JSElnT2lCMGRDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Uc0tJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlIUm9hWE03Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZFNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUM1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3TENCbExuSmxjWFZsYzNSV2FXUmxiMFp5WVcxbFEyRnNiR0poWTJzb2RTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0p5WlhGMVpYTjBWbWxrWlc5R2NtRnRaVU5oYkd4aVlXTnJJaUJwYmlCbElDWW1JR1V1Y21WeGRXVnpkRlpwWkdWdlJuSmhiV1ZEWVd4c1ltRmpheWgxS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG1sdFlXZGxLUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVwYldGblpUc0tJQ0FnSUNBZ0lDQWljbVZ4ZFdWemRGWnBaR1Z2Um5KaGJXVkRZV3hzWW1GamF5SWdhVzRnWlNBOVBUMGdJVEVnSmlZZ1pTNXlaV0ZrZVZOMFlYUmxJRDQ5SUdVdVNFRldSVjlEVlZKU1JVNVVYMFJCVkVFZ0ppWWdLSFJvYVhNdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrN0NpQWdJQ0I5Q24wN0NuZG9MbkJ5YjNSdmRIbHdaUzVwYzFacFpHVnZWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdVMmdnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2REb2dkQW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVabTl5YldGMElEMGdiaXdnZEdocGN5NXRZV2RHYVd4MFpYSWdQU0J5ZEN3Z2RHaHBjeTV0YVc1R2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Td2dkR2hwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUXA5T3dwVGFDNXdjbTkwYjNSNWNHVXVhWE5HY21GdFpXSjFabVpsY2xSbGVIUjFjbVVnUFNBaE1Ec0tkbUZ5SUhaaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCdmRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhMQ0JzTENCakxDQm9MQ0IxTENCa0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodWRXeHNMQ0J2TENCaExDQnNMQ0JqTENCb0xDQnBMQ0J5TENCMUxDQmtLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHRZV2RsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCdUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1dGFYQnRZWEJ6SUQwZ1pTd2dkR2hwY3k1bWJHbHdXU0E5SUNFeExDQjBhR2x6TG1kbGJtVnlZWFJsVFdsd2JXRndjeUE5SUNFeE93b2dJQ0FnZlFwOU93cDJZUzV3Y205MGIzUjVjR1V1YVhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ1ZHZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklHOTBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dzSUdNcE93b2dJQ0FnSUNBZ0lIUm9hWE11Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtmVHNLVkdndWNISnZkRzkwZVhCbExtbHpRMkZ1ZG1GelZHVjRkSFZ5WlNBOUlDRXdPd3AyWVhJZ1puSWdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnT0N3Z2JpQTlJREFzSUdrZ1BTQk5ZWFJvTGxCSklDb2dNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEybHlZMnhsUjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVm5iV1Z1ZEhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhVM1JoY25RNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhUR1Z1WjNSb09pQnBDaUFnSUNBZ0lDQWdmU3dnZENBOUlFMWhkR2d1YldGNEtETXNJSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnVzEwc0lHOGdQU0JiWFN3Z1lTQTlJRnRkTENCc0lEMGdXMTBzSUdNZ1BTQnVaWGNnVFN3Z2FDQTlJRzVsZHlCWU93b2dJQ0FnSUNBZ0lHOHVjSFZ6YUNnd0xDQXdMQ0F3S1N3Z1lTNXdkWE5vS0RBc0lEQXNJREVwTENCc0xuQjFjMmdvTGpVc0lDNDFLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnTXpzZ2RTQThQU0IwT3lCMUt5c3NJR1FnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnYmlBcklIVWdMeUIwSUNvZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnWXk1NElEMGdaU0FxSUUxaGRHZ3VZMjl6S0dZcExDQmpMbmtnUFNCbElDb2dUV0YwYUM1emFXNG9aaWtzSUc4dWNIVnphQ2hqTG5nc0lHTXVlU3dnWXk1NktTd2dZUzV3ZFhOb0tEQXNJREFzSURFcExDQm9MbmdnUFNBb2IxdGtYU0F2SUdVZ0t5QXhLU0F2SURJc0lHZ3VlU0E5SUNodlcyUWdLeUF4WFNBdklHVWdLeUF4S1NBdklESXNJR3d1Y0hWemFDaG9MbmdzSUdndWVTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkVEVnUFNBeE95QjFNU0E4UFNCME95QjFNU3NyS1hJdWNIVnphQ2gxTVN3Z2RURWdLeUF4TENBd0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFbHVaR1Y0S0hJcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9ieXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtHRXNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLR3dzSURJcEtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCbWNpaGxMbkpoWkdsMWN5d2daUzV6WldkdFpXNTBjeXdnWlM1MGFHVjBZVk4wWVhKMExDQmxMblJvWlhSaFRHVnVaM1JvS1RzS0lDQWdJSDBLZlN3Z1NtNGdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTVN3Z2JpQTlJREVzSUdrZ1BTQTRMQ0J5SUQwZ01Td2dieUE5SUNFeExDQmhJRDBnTUN3Z2JDQTlJRTFoZEdndVVFa2dLaUF5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkRlV3hwYm1SbGNrZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBkWE5VYjNBNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjMEp2ZEhSdmJUb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScFlXeFRaV2R0Wlc1MGN6b2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwVTJWbmJXVnVkSE02SUhJc0NpQWdJQ0FnSUNBZ0lDQWdJRzl3Wlc1RmJtUmxaRG9nYnl3S0lDQWdJQ0FnSUNBZ0lDQWdkR2hsZEdGVGRHRnlkRG9nWVN3S0lDQWdJQ0FnSUNBZ0lDQWdkR2hsZEdGTVpXNW5kR2c2SUd3S0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2RHaHBjenNLSUNBZ0lDQWdJQ0JwSUQwZ1RXRjBhQzVtYkc5dmNpaHBLU3dnY2lBOUlFMWhkR2d1Wm14dmIzSW9jaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JiWFN3Z2RTQTlJRnRkTENCa0lEMGdXMTBzSUdZZ1BTQmJYU3dnYlNBOUlEQXNJSGdnUFNCYlhTd2dkaUE5SUc0Z0x5QXlMQ0JuSUQwZ01Ec0tJQ0FnSUNBZ0lDQndLQ2tzSUc4Z1BUMDlJQ0V4SUNZbUlDaGxJRDRnTUNBbUppQmZLQ0V3S1N3Z2RDQStJREFnSmlZZ1h5Z2hNU2twTENCMGFHbHpMbk5sZEVsdVpHVjRLR2dwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2RTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0dRc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtHWXNJRElwS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCd0tDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUc1bGR5Qk5MQ0JpSUQwZ2JtVjNJRTBzSUVFZ1BTQXdMQ0JNSUQwZ0tIUWdMU0JsS1NBdklHNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU1NBOUlEQTdJRWtnUEQwZ2Nqc2dTU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnJJRDBnVzEwc0lFSWdQU0JKSUM4Z2Npd2dVQ0E5SUVJZ0tpQW9kQ0F0SUdVcElDc2daVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkeUE5SURBN0lIY2dQRDBnYVRzZ2R5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUhjZ0x5QnBMQ0JFSUQwZ1JTQXFJR3dnS3lCaExDQlZJRDBnVFdGMGFDNXphVzRvUkNrc0lFWWdQU0JOWVhSb0xtTnZjeWhFS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlMbmdnUFNCUUlDb2dWU3dnWWk1NUlEMGdMVUlnS2lCdUlDc2dkaXdnWWk1NklEMGdVQ0FxSUVZc0lIVXVjSFZ6YUNoaUxuZ3NJR0l1ZVN3Z1lpNTZLU3dnZVM1elpYUW9WU3dnVEN3Z1Jpa3VibTl5YldGc2FYcGxLQ2tzSUdRdWNIVnphQ2g1TG5nc0lIa3VlU3dnZVM1NktTd2daaTV3ZFhOb0tFVXNJREVnTFNCQ0tTd2dheTV3ZFhOb0tHMHJLeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0TG5CMWMyZ29heWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JKTVNBOUlEQTdJRWt4SUR3Z2FUc2dTVEVyS3lsbWIzSW9iR1YwSUdzeElEMGdNRHNnYXpFZ1BDQnlPeUJyTVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JDTVNBOUlIaGJhekZkVzBreFhTd2dVREVnUFNCNFcyc3hJQ3NnTVYxYlNURmRMQ0IzTVNBOUlIaGJhekVnS3lBeFhWdEpNU0FySURGZExDQkZNU0E5SUhoYmF6RmRXMGt4SUNzZ01WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9MbkIxYzJnb1FqRXNJRkF4TENCRk1Ta3NJR2d1Y0hWemFDaFFNU3dnZHpFc0lFVXhLU3dnUVNBclBTQTJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR011WVdSa1IzSnZkWEFvWnl3Z1FTd2dNQ2tzSUdjZ0t6MGdRVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWHloNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlJRDBnYlN3Z1FTQTlJRzVsZHlCWUxDQk1JRDBnYm1WM0lFMHNJRWtnUFNBd0xDQnJJRDBnZVNBOVBUMGdJVEFnUHlCbElEb2dkQ3dnUWlBOUlIa2dQVDA5SUNFd0lEOGdNU0E2SUMweE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGNnUFNBeE95QjNJRHc5SUdrN0lIY3JLeWwxTG5CMWMyZ29NQ3dnZGlBcUlFSXNJREFwTENCa0xuQjFjMmdvTUN3Z1Fpd2dNQ2tzSUdZdWNIVnphQ2d1TlN3Z0xqVXBMQ0J0S3lzN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUUlEMGdiVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCM01TQTlJREE3SUhjeElEdzlJR2s3SUhjeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVRZ1BTQjNNU0F2SUdrZ0tpQnNJQ3NnWVN3Z1ZTQTlJRTFoZEdndVkyOXpLRVFwTENCR0lEMGdUV0YwYUM1emFXNG9SQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JNTG5nZ1BTQnJJQ29nUml3Z1RDNTVJRDBnZGlBcUlFSXNJRXd1ZWlBOUlHc2dLaUJWTENCMUxuQjFjMmdvVEM1NExDQk1MbmtzSUV3dWVpa3NJR1F1Y0hWemFDZ3dMQ0JDTENBd0tTd2dRUzU0SUQwZ1ZTQXFJQzQxSUNzZ0xqVXNJRUV1ZVNBOUlFWWdLaUF1TlNBcUlFSWdLeUF1TlN3Z1ppNXdkWE5vS0VFdWVDd2dRUzU1S1N3Z2JTc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkeklnUFNBd095QjNNaUE4SUdrN0lIY3lLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JpSUNzZ2R6SXNJRVF4SUQwZ1VDQXJJSGN5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZVNBOVBUMGdJVEFnUHlCb0xuQjFjMmdvUkRFc0lFUXhJQ3NnTVN3Z1JTa2dPaUJvTG5CMWMyZ29SREVnS3lBeExDQkVNU3dnUlNrc0lFa2dLejBnTXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCakxtRmtaRWR5YjNWd0tHY3NJRWtzSUhrZ1BUMDlJQ0V3SUQ4Z01TQTZJRElwTENCbklDczlJRWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRXB1S0dVdWNtRmthWFZ6Vkc5d0xDQmxMbkpoWkdsMWMwSnZkSFJ2YlN3Z1pTNW9aV2xuYUhRc0lHVXVjbUZrYVdGc1UyVm5iV1Z1ZEhNc0lHVXVhR1ZwWjJoMFUyVm5iV1Z1ZEhNc0lHVXViM0JsYmtWdVpHVmtMQ0JsTG5Sb1pYUmhVM1JoY25Rc0lHVXVkR2hsZEdGTVpXNW5kR2dwT3dvZ0lDQWdmUXA5TENCd2NpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1NtNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F4TENCdUlEMGdPQ3dnYVNBOUlERXNJSElnUFNBaE1Td2dieUE5SURBc0lHRWdQU0JOWVhSb0xsQkpJQ29nTWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvTUN3Z1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtOdmJtVkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2xoYkZObFoyMWxiblJ6T2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUlRaV2R0Wlc1MGN6b2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2IzQmxia1Z1WkdWa09pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVk4wWVhKME9pQnZMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVXhsYm1kMGFEb2dZUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nWm5KdmJVcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2djSElvWlM1eVlXUnBkWE1zSUdVdWFHVnBaMmgwTENCbExuSmhaR2xoYkZObFoyMWxiblJ6TENCbExtaGxhV2RvZEZObFoyMWxiblJ6TENCbExtOXdaVzVGYm1SbFpDd2daUzUwYUdWMFlWTjBZWEowTENCbExuUm9aWFJoVEdWdVozUm9LVHNLSUNBZ0lIMEtmU3dnWVc0Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0JiWFN3Z2RDQTlJRnRkTENCdUlEMGdNU3dnYVNBOUlEQXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxCdmJIbG9aV1J5YjI1SFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHbGpaWE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJR2x1WkdsalpYTTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWMFlXbHNPaUJwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUZ0ZExDQnZJRDBnVzEwN0NpQWdJQ0FnSUNBZ1lTaHBLU3dnWXlodUtTd2dhQ2dwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2Npd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0hJdWMyeHBZMlVvS1N3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnWkdVb2J5d2dNaWtwTENCcElEMDlQU0F3SUQ4Z2RHaHBjeTVqYjIxd2RYUmxWbVZ5ZEdWNFRtOXliV0ZzY3lncElEb2dkR2hwY3k1dWIzSnRZV3hwZW1WT2IzSnRZV3h6S0NrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1lTaHdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2JtVjNJRTBzSUhrZ1BTQnVaWGNnVFN3Z1lpQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUVnUFNBd095QkJJRHdnZEM1c1pXNW5kR2c3SUVFZ0t6MGdNeWxtS0hSYlFTQXJJREJkTENCZktTd2daaWgwVzBFZ0t5QXhYU3dnZVNrc0lHWW9kRnRCSUNzZ01sMHNJR0lwTENCc0tGOHNJSGtzSUdJc0lIQXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJzS0hBc0lGOHNJSGtzSUdJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRWdQU0JpSUNzZ01Td2dUQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWtnUFNBd095QkpJRHc5SUVFN0lFa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JNVzBsZElEMGdXMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2F5QTlJSEF1WTJ4dmJtVW9LUzVzWlhKd0tIa3NJRWtnTHlCQktTd2dRaUE5SUY4dVkyeHZibVVvS1M1c1pYSndLSGtzSUVrZ0x5QkJLU3dnVUNBOUlFRWdMU0JKT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IzSUQwZ01Ec2dkeUE4UFNCUU95QjNLeXNwZHlBOVBUMGdNQ0FtSmlCSklEMDlQU0JCSUQ4Z1RGdEpYVnQzWFNBOUlHc2dPaUJNVzBsZFczZGRJRDBnYXk1amJHOXVaU2dwTG14bGNuQW9RaXdnZHlBdklGQXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdTVEVnUFNBd095QkpNU0E4SUVFN0lFa3hLeXNwWm05eUtHeGxkQ0JyTVNBOUlEQTdJR3N4SUR3Z01pQXFJQ2hCSUMwZ1NURXBJQzBnTVRzZ2F6RXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FqRWdQU0JOWVhSb0xtWnNiMjl5S0dzeElDOGdNaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JyTVNBbElESWdQVDA5SURBZ1B5QW9aQ2hNVzBreFhWdENNU0FySURGZEtTd2daQ2hNVzBreElDc2dNVjFiUWpGZEtTd2daQ2hNVzBreFhWdENNVjBwS1NBNklDaGtLRXhiU1RGZFcwSXhJQ3NnTVYwcExDQmtLRXhiU1RFZ0t5QXhYVnRDTVNBcklERmRLU3dnWkNoTVcwa3hJQ3NnTVYxYlFqRmRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZeWh3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBN0lIa2dQQ0J5TG14bGJtZDBhRHNnZVNBclBTQXpLVjh1ZUNBOUlISmJlU0FySURCZExDQmZMbmtnUFNCeVcza2dLeUF4WFN3Z1h5NTZJRDBnY2x0NUlDc2dNbDBzSUY4dWJtOXliV0ZzYVhwbEtDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2NDa3NJSEpiZVNBcklEQmRJRDBnWHk1NExDQnlXM2tnS3lBeFhTQTlJRjh1ZVN3Z2NsdDVJQ3NnTWwwZ1BTQmZMbm83Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdnb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlEQTdJRjhnUENCeUxteGxibWQwYURzZ1h5QXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhBdWVDQTlJSEpiWHlBcklEQmRMQ0J3TG5rZ1BTQnlXMThnS3lBeFhTd2djQzU2SUQwZ2NsdGZJQ3NnTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlU0E5SUhZb2NDa2dMeUF5SUM4Z1RXRjBhQzVRU1NBcklDNDFMQ0JpSUQwZ1p5aHdLU0F2SUUxaGRHZ3VVRWtnS3lBdU5Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOHVjSFZ6YUNoNUxDQXhJQzBnWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JTZ3BMQ0IxS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIVW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NDQTlJREE3SUhBZ1BDQnZMbXhsYm1kMGFEc2djQ0FyUFNBMktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2IxdHdJQ3NnTUYwc0lIa2dQU0J2VzNBZ0t5QXlYU3dnWWlBOUlHOWJjQ0FySURSZExDQkJJRDBnVFdGMGFDNXRZWGdvWHl3Z2VTd2dZaWtzSUV3Z1BTQk5ZWFJvTG0xcGJpaGZMQ0I1TENCaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRWdQaUF1T1NBbUppQk1JRHdnTGpFZ0ppWWdLRjhnUENBdU1pQW1KaUFvYjF0d0lDc2dNRjBnS3owZ01Ta3NJSGtnUENBdU1pQW1KaUFvYjF0d0lDc2dNbDBnS3owZ01Ta3NJR0lnUENBdU1pQW1KaUFvYjF0d0lDc2dORjBnS3owZ01Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHUW9jQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlMbkIxYzJnb2NDNTRMQ0J3TG5rc0lIQXVlaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdZb2NDd2dYeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlIQWdLaUF6T3dvZ0lDQWdJQ0FnSUNBZ0lDQmZMbmdnUFNCbFcza2dLeUF3WFN3Z1h5NTVJRDBnWlZ0NUlDc2dNVjBzSUY4dWVpQTlJR1ZiZVNBcklESmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ0S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NDQTlJRzVsZHlCTkxDQmZJRDBnYm1WM0lFMHNJSGtnUFNCdVpYY2dUU3dnWWlBOUlHNWxkeUJOTENCQklEMGdibVYzSUZnc0lFd2dQU0J1WlhjZ1dDd2dTU0E5SUc1bGR5QllPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdzZ1BTQXdMQ0JDSUQwZ01Ec2dheUE4SUhJdWJHVnVaM1JvT3lCcklDczlJRGtzSUVJZ0t6MGdOaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TG5ObGRDaHlXMnNnS3lBd1hTd2djbHRySUNzZ01WMHNJSEpiYXlBcklESmRLU3dnWHk1elpYUW9jbHRySUNzZ00xMHNJSEpiYXlBcklEUmRMQ0J5VzJzZ0t5QTFYU2tzSUhrdWMyVjBLSEpiYXlBcklEWmRMQ0J5VzJzZ0t5QTNYU3dnY2x0cklDc2dPRjBwTENCQkxuTmxkQ2h2VzBJZ0t5QXdYU3dnYjF0Q0lDc2dNVjBwTENCTUxuTmxkQ2h2VzBJZ0t5QXlYU3dnYjF0Q0lDc2dNMTBwTENCSkxuTmxkQ2h2VzBJZ0t5QTBYU3dnYjF0Q0lDc2dOVjBwTENCaUxtTnZjSGtvY0NrdVlXUmtLRjhwTG1Ga1pDaDVLUzVrYVhacFpHVlRZMkZzWVhJb015azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVUNBOUlIWW9ZaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0S0VFc0lFSWdLeUF3TENCd0xDQlFLU3dnZUNoTUxDQkNJQ3NnTWl3Z1h5d2dVQ2tzSUhnb1NTd2dRaUFySURRc0lIa3NJRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSGdvY0N3Z1h5d2dlU3dnWWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JpSUR3Z01DQW1KaUJ3TG5nZ1BUMDlJREVnSmlZZ0tHOWJYMTBnUFNCd0xuZ2dMU0F4S1N3Z2VTNTRJRDA5UFNBd0lDWW1JSGt1ZWlBOVBUMGdNQ0FtSmlBb2IxdGZYU0E5SUdJZ0x5QXlJQzhnVFdGMGFDNVFTU0FySUM0MUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdkaWh3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG1GMFlXNHlLSEF1ZWl3Z0xYQXVlQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdjb2NDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhkR0Z1TWlndGNDNTVMQ0JOWVhSb0xuTnhjblFvY0M1NElDb2djQzU0SUNzZ2NDNTZJQ29nY0M1NktTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHRnVLR1V1ZG1WeWRHbGpaWE1zSUdVdWFXNWthV05sY3l3Z1pTNXlZV1JwZFhNc0lHVXVaR1YwWVdsc2N5azdDaUFnSUNCOUNuMHNJRzF5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJoYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU3dnZENBOUlEQXBld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdLREVnS3lCTllYUm9Mbk54Y25Rb05Ta3BJQzhnTWl3Z2FTQTlJREVnTHlCdUxDQnlJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ0xXa3NDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdhU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdGFTd0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXa3NDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBDaUFnSUNBZ0lDQWdYU3dnYnlBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTFMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TlN3S0lDQWdJQ0FnSUNBZ0lDQWdNVE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURFNUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4Tnl3S0lDQWdJQ0FnSUNBZ0lDQWdOeXdLSUNBZ0lDQWdJQ0FnSUNBZ01UY3NDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURFMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4Tnl3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ09Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRjc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeE55d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREUyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5pd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNVGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTJMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TUN3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURFekxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TlN3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UWXNDaUFnSUNBZ0lDQWdJQ0FnSURFNExBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ01UTXNDaUFnSUNBZ0lDQWdJQ0FnSURFNExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTVMQW9nSUNBZ0lDQWdJQ0FnSUNBeE9Dd0tJQ0FnSUNBZ0lDQWdJQ0FnT1N3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01UUXNDaUFnSUNBZ0lDQWdJQ0FnSURFeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ09Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURFeExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPU3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURFNUxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPU3dLSUNBZ0lDQWdJQ0FnSUNBZ05Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRRc0NpQWdJQ0FnSUNBZ0lDQWdJREU1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRrc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFMExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0E1Q2lBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNCemRYQmxjaWh5TENCdkxDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlSRzlrWldOaGFHVmtjbTl1UjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVjBZV2xzT2lCMENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCdGNpaGxMbkpoWkdsMWN5d2daUzVrWlhSaGFXd3BPd29nSUNBZ2ZRcDlMQ0I1Y3lBOUlHNWxkeUJOTENCMmN5QTlJRzVsZHlCTkxDQktieUE5SUc1bGR5Qk5MQ0JmY3lBOUlHNWxkeUJ1ZEN3Z1gyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdWRXeHNMQ0IwSUQwZ01TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTBlWEJsSUQwZ0lrVmtaMlZ6UjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsYjIxbGRISjVPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhSEpsYzJodmJHUkJibWRzWlRvZ2RBb2dJQ0FnSUNBZ0lIMHNJR1VnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQk5ZWFJvTG5CdmR5Z3hNQ3dnTkNrc0lISWdQU0JOWVhSb0xtTnZjeWhYYmlBcUlIUXBMQ0J2SUQwZ1pTNW5aWFJKYm1SbGVDZ3BMQ0JoSUQwZ1pTNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrc0lHd2dQU0J2SUQ4Z2J5NWpiM1Z1ZENBNklHRXVZMjkxYm5Rc0lHTWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNBZ0lDQWdYU3dnYUNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSmhJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0ppSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNKaklnb2dJQ0FnSUNBZ0lDQWdJQ0JkTENCMUlEMGdibVYzSUVGeWNtRjVLRE1wTENCa0lEMGdlMzBzSUdZZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdNRHNnYlNBOElHdzdJRzBnS3owZ015bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDhnS0dOYk1GMGdQU0J2TG1kbGRGZ29iU2tzSUdOYk1WMGdQU0J2TG1kbGRGZ29iU0FySURFcExDQmpXekpkSUQwZ2J5NW5aWFJZS0cwZ0t5QXlLU2tnT2lBb1kxc3dYU0E5SUcwc0lHTmJNVjBnUFNCdElDc2dNU3dnWTFzeVhTQTlJRzBnS3lBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I3SUdFNklIZ2dMQ0JpT2lCMklDd2dZem9nWnlBZ2ZTQTlJRjl6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIZ3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hoTENCald6QmRLU3dnZGk1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHRXNJR05iTVYwcExDQm5MbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z1kxc3lYU2tzSUY5ekxtZGxkRTV2Y20xaGJDaEtieWtzSUhWYk1GMGdQU0JnSkh0TllYUm9Mbkp2ZFc1a0tIZ3VlQ0FxSUdrcGZTd2tlMDFoZEdndWNtOTFibVFvZUM1NUlDb2dhU2w5TENSN1RXRjBhQzV5YjNWdVpDaDRMbm9nS2lCcEtYMWdMQ0IxV3pGZElEMGdZQ1I3VFdGMGFDNXliM1Z1WkNoMkxuZ2dLaUJwS1gwc0pIdE5ZWFJvTG5KdmRXNWtLSFl1ZVNBcUlHa3BmU3drZTAxaGRHZ3VjbTkxYm1Rb2RpNTZJQ29nYVNsOVlDd2dkVnN5WFNBOUlHQWtlMDFoZEdndWNtOTFibVFvWnk1NElDb2dhU2w5TENSN1RXRjBhQzV5YjNWdVpDaG5MbmtnS2lCcEtYMHNKSHROWVhSb0xuSnZkVzVrS0djdWVpQXFJR2twZldBc0lDRW9kVnN3WFNBOVBUMGdkVnN4WFNCOGZDQjFXekZkSUQwOVBTQjFXekpkSUh4OElIVmJNbDBnUFQwOUlIVmJNRjBwS1NCbWIzSW9iR1YwSUhBZ1BTQXdPeUJ3SUR3Z016c2djQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlDaHdJQ3NnTVNrZ0pTQXpMQ0I1SUQwZ2RWdHdYU3dnWWlBOUlIVmJYMTBzSUVFZ1BTQmZjMXRvVzNCZFhTd2dUQ0E5SUY5elcyaGJYMTFkTENCSklEMGdZQ1I3ZVgxZkpIdGlmV0FzSUdzZ1BTQmdKSHRpZlY4a2UzbDlZRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcklHbHVJR1FnSmlZZ1pGdHJYU0EvSUNoS2J5NWtiM1FvWkZ0clhTNXViM0p0WVd3cElEdzlJSElnSmlZZ0tHWXVjSFZ6YUNoQkxuZ3NJRUV1ZVN3Z1FTNTZLU3dnWmk1d2RYTm9LRXd1ZUN3Z1RDNTVMQ0JNTG5vcEtTd2daRnRyWFNBOUlHNTFiR3dwSURvZ1NTQnBiaUJrSUh4OElDaGtXMGxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlREE2SUdOYmNGMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0TVRvZ1kxdGZYU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc09pQktieTVqYkc5dVpTZ3BDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdE1TQnBiaUJrS1dsbUlDaGtXMjB4WFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSHNnYVc1a1pYZ3dPaUI0TVNBc0lHbHVaR1Y0TVRvZ2RqRWdJSDBnUFNCa1cyMHhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGx6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dlREVwTENCMmN5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR0VzSUhZeEtTd2daaTV3ZFhOb0tIbHpMbmdzSUhsekxua3NJSGx6TG5vcExDQm1MbkIxYzJnb2RuTXVlQ3dnZG5NdWVTd2dkbk11ZWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHWXNJRE1wS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wc0lFTjBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEzVnlkbVVpTENCMGFHbHpMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeUE5SURJd01Ec0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOMWNuWmxPaUF1WjJWMFVHOXBiblFvS1NCdWIzUWdhVzF3YkdWdFpXNTBaV1F1SWlrc0lHNTFiR3c3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEVGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVaMlYwVlhSdlZHMWhjSEJwYm1jb1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFVHOXBiblFvYml3Z2RDazdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkSE1vWlNBOUlEVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUEQwZ1pUc2diaXNyS1hRdWNIVnphQ2gwYUdsekxtZGxkRkJ2YVc1MEtHNGdMeUJsS1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJUY0dGalpXUlFiMmx1ZEhNb1pTQTlJRFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BEMGdaVHNnYmlzcktYUXVjSFZ6YUNoMGFHbHpMbWRsZEZCdmFXNTBRWFFvYmlBdklHVXBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFeGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WjJWMFRHVnVaM1JvY3lncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFcyVXViR1Z1WjNSb0lDMGdNVjA3Q2lBZ0lDQjlDaUFnSUNCblpYUk1aVzVuZEdoektHVWdQU0IwYUdsekxtRnlZMHhsYm1kMGFFUnBkbWx6YVc5dWN5a2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbU5oWTJobFFYSmpUR1Z1WjNSb2N5QW1KaUIwYUdsekxtTmhZMmhsUVhKalRHVnVaM1JvY3k1c1pXNW5kR2dnUFQwOUlHVWdLeUF4SUNZbUlDRjBhR2x6TG01bFpXUnpWWEJrWVhSbEtTQnlaWFIxY200Z2RHaHBjeTVqWVdOb1pVRnlZMHhsYm1kMGFITTdDaUFnSUNBZ0lDQWdkR2hwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V4T3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwc0lHNHNJR2tnUFNCMGFHbHpMbWRsZEZCdmFXNTBLREFwTENCeUlEMGdNRHNLSUNBZ0lDQWdJQ0IwTG5CMWMyZ29NQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Uc2dieUE4UFNCbE95QnZLeXNwYmlBOUlIUm9hWE11WjJWMFVHOXBiblFvYnlBdklHVXBMQ0J5SUNzOUlHNHVaR2x6ZEdGdVkyVlVieWhwS1N3Z2RDNXdkWE5vS0hJcExDQnBJRDBnYmpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpZV05vWlVGeVkweGxibWQwYUhNZ1BTQjBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsUVhKalRHVnVaM1JvY3lncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXVaMlYwVEdWdVozUm9jeWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWWFJ2VkcxaGNIQnBibWNvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpYUk1aVzVuZEdoektDa3NJR2tnUFNBd0xDQnlJRDBnYmk1c1pXNW5kR2dzSUc4N0NpQWdJQ0FnSUNBZ2RDQS9JRzhnUFNCMElEb2dieUE5SUdVZ0tpQnVXM0lnTFNBeFhUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlEQXNJR3dnUFNCeUlDMGdNU3dnWXpzS0lDQWdJQ0FnSUNCbWIzSW9PeUJoSUR3OUlHdzdLV2xtSUNocElEMGdUV0YwYUM1bWJHOXZjaWhoSUNzZ0tHd2dMU0JoS1NBdklESXBMQ0JqSUQwZ2JsdHBYU0F0SUc4c0lHTWdQQ0F3S1NCaElEMGdhU0FySURFN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1l5QStJREFwSUd3Z1BTQnBJQzBnTVRzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9hU0E5SUd3c0lHNWJhVjBnUFQwOUlHOHBJSEpsZEhWeWJpQnBJQzhnS0hJZ0xTQXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJRzViYVYwc0lHUWdQU0J1VzJrZ0t5QXhYU0F0SUdnc0lHWWdQU0FvYnlBdElHZ3BJQzhnWkRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnS0drZ0t5Qm1LU0F2SUNoeUlDMGdNU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlVZVzVuWlc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVZ0xTQXhaUzAwTENCeUlEMGdaU0FySURGbExUUTdDaUFnSUNBZ0lDQWdhU0E4SURBZ0ppWWdLR2tnUFNBd0tTd2djaUErSURFZ0ppWWdLSElnUFNBeEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WjJWMFVHOXBiblFvYVNrc0lHRWdQU0IwYUdsekxtZGxkRkJ2YVc1MEtISXBMQ0JzSUQwZ2RDQjhmQ0FvYnk1cGMxWmxZM1J2Y2pJZ1B5QnVaWGNnV0NBNklHNWxkeUJOS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkM1amIzQjVLR0VwTG5OMVlpaHZLUzV1YjNKdFlXeHBlbVVvS1N3Z2JEc0tJQ0FnSUgwS0lDQWdJR2RsZEZSaGJtZGxiblJCZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtZGxkRlYwYjFSdFlYQndhVzVuS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRsZEZSaGJtZGxiblFvYml3Z2RDazdDaUFnSUNCOUNpQWdJQ0JqYjIxd2RYUmxSbkpsYm1WMFJuSmhiV1Z6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRzVsZHlCTkxDQnBJRDBnVzEwc0lISWdQU0JiWFN3Z2J5QTlJRnRkTENCaElEMGdibVYzSUUwc0lHd2dQU0J1WlhjZ2NHVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm1JRDBnTURzZ1ppQThQU0JsT3lCbUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUdZZ0x5QmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFcyWmRJRDBnZEdocGN5NW5aWFJVWVc1blpXNTBRWFFvYlN3Z2JtVjNJRTBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVd6QmRJRDBnYm1WM0lFMHNJRzliTUYwZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUU1MWJXSmxjaTVOUVZoZlZrRk1WVVVzSUdnZ1BTQk5ZWFJvTG1GaWN5aHBXekJkTG5ncExDQjFJRDBnVFdGMGFDNWhZbk1vYVZzd1hTNTVLU3dnWkNBOUlFMWhkR2d1WVdKektHbGJNRjB1ZWlrN0NpQWdJQ0FnSUNBZ2FDQThQU0JqSUNZbUlDaGpJRDBnYUN3Z2JpNXpaWFFvTVN3Z01Dd2dNQ2twTENCMUlEdzlJR01nSmlZZ0tHTWdQU0IxTENCdUxuTmxkQ2d3TENBeExDQXdLU2tzSUdRZ1BEMGdZeUFtSmlCdUxuTmxkQ2d3TENBd0xDQXhLU3dnWVM1amNtOXpjMVpsWTNSdmNuTW9hVnN3WFN3Z2Jpa3VibTl5YldGc2FYcGxLQ2tzSUhKYk1GMHVZM0p2YzNOV1pXTjBiM0p6S0dsYk1GMHNJR0VwTENCdld6QmRMbU55YjNOelZtVmpkRzl5Y3locFd6QmRMQ0J5V3pCZEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWXhJRDBnTVRzZ1pqRWdQRDBnWlRzZ1pqRXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5VzJZeFhTQTlJSEpiWmpFZ0xTQXhYUzVqYkc5dVpTZ3BMQ0J2VzJZeFhTQTlJRzliWmpFZ0xTQXhYUzVqYkc5dVpTZ3BMQ0JoTG1OeWIzTnpWbVZqZEc5eWN5aHBXMll4SUMwZ01WMHNJR2xiWmpGZEtTd2dZUzVzWlc1bmRHZ29LU0ErSUU1MWJXSmxjaTVGVUZOSlRFOU9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoTG01dmNtMWhiR2w2WlNncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzB4SUQwZ1RXRjBhQzVoWTI5ektHMTBLR2xiWmpFZ0xTQXhYUzVrYjNRb2FWdG1NVjBwTENBdE1Td2dNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2x0bU1WMHVZWEJ3YkhsTllYUnlhWGcwS0d3dWJXRnJaVkp2ZEdGMGFXOXVRWGhwY3loaExDQnRNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUc5YlpqRmRMbU55YjNOelZtVmpkRzl5Y3locFcyWXhYU3dnY2x0bU1WMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2RDQTlQVDBnSVRBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWXlJRDBnVFdGMGFDNWhZMjl6S0cxMEtISmJNRjB1Wkc5MEtISmJaVjBwTENBdE1Td2dNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1NaUF2UFNCbExDQnBXekJkTG1SdmRDaGhMbU55YjNOelZtVmpkRzl5Y3loeVd6QmRMQ0J5VzJWZEtTa2dQaUF3SUNZbUlDaG1NaUE5SUMxbU1pazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlRJZ1BTQXhPeUJ0TWlBOFBTQmxPeUJ0TWlzcktYSmJiVEpkTG1Gd2NHeDVUV0YwY21sNE5DaHNMbTFoYTJWU2IzUmhkR2x2YmtGNGFYTW9hVnR0TWwwc0lHWXlJQ29nYlRJcEtTd2diMXR0TWwwdVkzSnZjM05XWldOMGIzSnpLR2xiYlRKZExDQnlXMjB5WFNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJoYm1kbGJuUnpPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4ek9pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCaWFXNXZjbTFoYkhNNklHOEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3lBOUlHVXVZWEpqVEdWdVozUm9SR2wyYVhOcGIyNXpMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdFpYUmhaR0YwWVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0lrTjFjblpsSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJ2Y2pvZ0lrTjFjblpsTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZWEpqVEdWdVozUm9SR2wyYVhOcGIyNXpJRDBnZEdocGN5NWhjbU5NWlc1bmRHaEVhWFpwYzJsdmJuTXNJR1V1ZEhsd1pTQTlJSFJvYVhNdWRIbHdaU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNtTk1aVzVuZEdoRWFYWnBjMmx2Ym5NZ1BTQmxMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeXdnZEdocGN6c0tJQ0FnSUgwS2ZTd2dWWElnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXdMQ0IwSUQwZ01Dd2diaUE5SURFc0lHa2dQU0F4TENCeUlEMGdNQ3dnYnlBOUlFMWhkR2d1VUVrZ0tpQXlMQ0JoSUQwZ0lURXNJR3dnUFNBd0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pGYkd4cGNITmxRM1Z5ZG1VaUxDQjBhR2x6TG1GWUlEMGdaU3dnZEdocGN5NWhXU0E5SUhRc0lIUm9hWE11ZUZKaFpHbDFjeUE5SUc0c0lIUm9hWE11ZVZKaFpHbDFjeUE5SUdrc0lIUm9hWE11WVZOMFlYSjBRVzVuYkdVZ1BTQnlMQ0IwYUdsekxtRkZibVJCYm1kc1pTQTlJRzhzSUhSb2FYTXVZVU5zYjJOcmQybHpaU0E5SUdFc0lIUm9hWE11WVZKdmRHRjBhVzl1SUQwZ2JEc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUWdmSHdnYm1WM0lGZ3NJR2tnUFNCTllYUm9MbEJKSUNvZ01pd2djaUE5SUhSb2FYTXVZVVZ1WkVGdVoyeGxJQzBnZEdocGN5NWhVM1JoY25SQmJtZHNaU3dnYnlBOUlFMWhkR2d1WVdKektISXBJRHdnVG5WdFltVnlMa1ZRVTBsTVQwNDdDaUFnSUNBZ0lDQWdabTl5S0RzZ2NpQThJREE3S1hJZ0t6MGdhVHNLSUNBZ0lDQWdJQ0JtYjNJb095QnlJRDRnYVRzcGNpQXRQU0JwT3dvZ0lDQWdJQ0FnSUhJZ1BDQk9kVzFpWlhJdVJWQlRTVXhQVGlBbUppQW9ieUEvSUhJZ1BTQXdJRG9nY2lBOUlHa3BMQ0IwYUdsekxtRkRiRzlqYTNkcGMyVWdQVDA5SUNFd0lDWW1JQ0Z2SUNZbUlDaHlJRDA5UFNCcElEOGdjaUE5SUMxcElEb2djaUE5SUhJZ0xTQnBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVlWTjBZWEowUVc1bmJHVWdLeUJsSUNvZ2Npd2diQ0E5SUhSb2FYTXVZVmdnS3lCMGFHbHpMbmhTWVdScGRYTWdLaUJOWVhSb0xtTnZjeWhoS1N3Z1l5QTlJSFJvYVhNdVlWa2dLeUIwYUdsekxubFNZV1JwZFhNZ0tpQk5ZWFJvTG5OcGJpaGhLVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVoVW05MFlYUnBiMjRnSVQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCTllYUm9MbU52Y3loMGFHbHpMbUZTYjNSaGRHbHZiaWtzSUhVZ1BTQk5ZWFJvTG5OcGJpaDBhR2x6TG1GU2IzUmhkR2x2Ymlrc0lHUWdQU0JzSUMwZ2RHaHBjeTVoV0N3Z1ppQTlJR01nTFNCMGFHbHpMbUZaT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNJRDBnWkNBcUlHZ2dMU0JtSUNvZ2RTQXJJSFJvYVhNdVlWZ3NJR01nUFNCa0lDb2dkU0FySUdZZ0tpQm9JQ3NnZEdocGN5NWhXVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtHd3NJR01wT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVlWZ2dQU0JsTG1GWUxDQjBhR2x6TG1GWklEMGdaUzVoV1N3Z2RHaHBjeTU0VW1Ga2FYVnpJRDBnWlM1NFVtRmthWFZ6TENCMGFHbHpMbmxTWVdScGRYTWdQU0JsTG5sU1lXUnBkWE1zSUhSb2FYTXVZVk4wWVhKMFFXNW5iR1VnUFNCbExtRlRkR0Z5ZEVGdVoyeGxMQ0IwYUdsekxtRkZibVJCYm1kc1pTQTlJR1V1WVVWdVpFRnVaMnhsTENCMGFHbHpMbUZEYkc5amEzZHBjMlVnUFNCbExtRkRiRzlqYTNkcGMyVXNJSFJvYVhNdVlWSnZkR0YwYVc5dUlEMGdaUzVoVW05MFlYUnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWhXQ0E5SUhSb2FYTXVZVmdzSUdVdVlWa2dQU0IwYUdsekxtRlpMQ0JsTG5oU1lXUnBkWE1nUFNCMGFHbHpMbmhTWVdScGRYTXNJR1V1ZVZKaFpHbDFjeUE5SUhSb2FYTXVlVkpoWkdsMWN5d2daUzVoVTNSaGNuUkJibWRzWlNBOUlIUm9hWE11WVZOMFlYSjBRVzVuYkdVc0lHVXVZVVZ1WkVGdVoyeGxJRDBnZEdocGN5NWhSVzVrUVc1bmJHVXNJR1V1WVVOc2IyTnJkMmx6WlNBOUlIUm9hWE11WVVOc2IyTnJkMmx6WlN3Z1pTNWhVbTkwWVhScGIyNGdQU0IwYUdsekxtRlNiM1JoZEdsdmJpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11WVZnZ1BTQmxMbUZZTENCMGFHbHpMbUZaSUQwZ1pTNWhXU3dnZEdocGN5NTRVbUZrYVhWeklEMGdaUzU0VW1Ga2FYVnpMQ0IwYUdsekxubFNZV1JwZFhNZ1BTQmxMbmxTWVdScGRYTXNJSFJvYVhNdVlWTjBZWEowUVc1bmJHVWdQU0JsTG1GVGRHRnlkRUZ1WjJ4bExDQjBhR2x6TG1GRmJtUkJibWRzWlNBOUlHVXVZVVZ1WkVGdVoyeGxMQ0IwYUdsekxtRkRiRzlqYTNkcGMyVWdQU0JsTG1GRGJHOWphM2RwYzJVc0lIUm9hWE11WVZKdmRHRjBhVzl1SUQwZ1pTNWhVbTkwWVhScGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NsVnlMbkJ5YjNSdmRIbHdaUzVwYzBWc2JHbHdjMlZEZFhKMlpTQTlJQ0V3T3dwMllYSWdUV0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZ5SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHNJRzRzSUdrc0lISXNJRzhwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkJjbU5EZFhKMlpTSTdDaUFnSUNCOUNuMDdDazFoTG5CeWIzUnZkSGx3WlM1cGMwRnlZME4xY25abElEMGdJVEE3Q21aMWJtTjBhVzl1SUdKaEtDa2dld29nSUNBZ2JHVjBJSE1nUFNBd0xDQmxJRDBnTUN3Z2RDQTlJREFzSUc0Z1BTQXdPd29nSUNBZ1puVnVZM1JwYjI0Z2FTaHlMQ0J2TENCaExDQnNLU0I3Q2lBZ0lDQWdJQ0FnY3lBOUlISXNJR1VnUFNCaExDQjBJRDBnTFRNZ0tpQnlJQ3NnTXlBcUlHOGdMU0F5SUNvZ1lTQXRJR3dzSUc0Z1BTQXlJQ29nY2lBdElESWdLaUJ2SUNzZ1lTQXJJR3c3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUdsdWFYUkRZWFJ0ZFd4c1VtOXRPaUJtZFc1amRHbHZiaWh5TENCdkxDQmhMQ0JzTENCaktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrb2J5d2dZU3dnWXlBcUlDaGhJQzBnY2lrc0lHTWdLaUFvYkNBdElHOHBLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdsdWFYUk9iMjUxYm1sbWIzSnRRMkYwYlhWc2JGSnZiVG9nWm5WdVkzUnBiMjRvY2l3Z2J5d2dZU3dnYkN3Z1l5d2dhQ3dnZFNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJQ2h2SUMwZ2Npa2dMeUJqSUMwZ0tHRWdMU0J5S1NBdklDaGpJQ3NnYUNrZ0t5QW9ZU0F0SUc4cElDOGdhQ3dnWmlBOUlDaGhJQzBnYnlrZ0x5Qm9JQzBnS0d3Z0xTQnZLU0F2SUNob0lDc2dkU2tnS3lBb2JDQXRJR0VwSUM4Z2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnWkNBcVBTQm9MQ0JtSUNvOUlHZ3NJR2tvYnl3Z1lTd2daQ3dnWmlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmpZV3hqT2lCbWRXNWpkR2x2YmloeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnY2lBcUlISXNJR0VnUFNCdklDb2djanNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhNZ0t5QmxJQ29nY2lBcklIUWdLaUJ2SUNzZ2JpQXFJR0U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmVHNLZlFwMllYSWdUWE1nUFNCdVpYY2dUU3dnV1c4Z1BTQnVaWGNnWW1Fc0lGcHZJRDBnYm1WM0lHSmhMQ0FrYnlBOUlHNWxkeUJpWVN3Z2QyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYlhTd2dkQ0E5SUNFeExDQnVJRDBnSW1ObGJuUnlhWEJsZEdGc0lpd2dhU0E5SUM0MUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pEWVhSdGRXeHNVbTl0UTNWeWRtVXpJaXdnZEdocGN5NXdiMmx1ZEhNZ1BTQmxMQ0IwYUdsekxtTnNiM05sWkNBOUlIUXNJSFJvYVhNdVkzVnlkbVZVZVhCbElEMGdiaXdnZEdocGN5NTBaVzV6YVc5dUlEMGdhVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1RTa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ3dnYVNBOUlIUm9hWE11Y0c5cGJuUnpMQ0J5SUQwZ2FTNXNaVzVuZEdnc0lHOGdQU0FvY2lBdElDaDBhR2x6TG1Oc2IzTmxaQ0EvSURBZ09pQXhLU2tnS2lCbExDQmhJRDBnVFdGMGFDNW1iRzl2Y2lodktTd2diQ0E5SUc4Z0xTQmhPd29nSUNBZ0lDQWdJSFJvYVhNdVkyeHZjMlZrSUQ4Z1lTQXJQU0JoSUQ0Z01DQS9JREFnT2lBb1RXRjBhQzVtYkc5dmNpaE5ZWFJvTG1GaWN5aGhLU0F2SUhJcElDc2dNU2tnS2lCeUlEb2diQ0E5UFQwZ01DQW1KaUJoSUQwOVBTQnlJQzBnTVNBbUppQW9ZU0E5SUhJZ0xTQXlMQ0JzSUQwZ01TazdDaUFnSUNBZ0lDQWdiR1YwSUdNc0lHZzdDaUFnSUNBZ0lDQWdkR2hwY3k1amJHOXpaV1FnZkh3Z1lTQStJREFnUHlCaklEMGdhVnNvWVNBdElERXBJQ1VnY2wwZ09pQW9UWE11YzNWaVZtVmpkRzl5Y3locFd6QmRMQ0JwV3pGZEtTNWhaR1FvYVZzd1hTa3NJR01nUFNCTmN5azdDaUFnSUNBZ0lDQWdiR1YwSUhVZ1BTQnBXMkVnSlNCeVhTd2daQ0E5SUdsYktHRWdLeUF4S1NBbElISmRPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbU5zYjNObFpDQjhmQ0JoSUNzZ01pQThJSElnUHlCb0lEMGdhVnNvWVNBcklESXBJQ1VnY2wwZ09pQW9UWE11YzNWaVZtVmpkRzl5Y3locFczSWdMU0F4WFN3Z2FWdHlJQzBnTWwwcExtRmtaQ2hwVzNJZ0xTQXhYU2tzSUdnZ1BTQk5jeWtzSUhSb2FYTXVZM1Z5ZG1WVWVYQmxJRDA5UFNBaVkyVnVkSEpwY0dWMFlXd2lJSHg4SUhSb2FYTXVZM1Z5ZG1WVWVYQmxJRDA5UFNBaVkyaHZjbVJoYkNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0IwYUdsekxtTjFjblpsVkhsd1pTQTlQVDBnSW1Ob2IzSmtZV3dpSUQ4Z0xqVWdPaUF1TWpVc0lHMGdQU0JOWVhSb0xuQnZkeWhqTG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0hVcExDQm1LU3dnZUNBOUlFMWhkR2d1Y0c5M0tIVXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aQ2tzSUdZcExDQjJJRDBnVFdGMGFDNXdiM2NvWkM1a2FYTjBZVzVqWlZSdlUzRjFZWEpsWkNob0tTd2daaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZ2dQQ0F4WlMwMElDWW1JQ2g0SUQwZ01Ta3NJRzBnUENBeFpTMDBJQ1ltSUNodElEMGdlQ2tzSUhZZ1BDQXhaUzAwSUNZbUlDaDJJRDBnZUNrc0lGbHZMbWx1YVhST2IyNTFibWxtYjNKdFEyRjBiWFZzYkZKdmJTaGpMbmdzSUhVdWVDd2daQzU0TENCb0xuZ3NJRzBzSUhnc0lIWXBMQ0JhYnk1cGJtbDBUbTl1ZFc1cFptOXliVU5oZEcxMWJHeFNiMjBvWXk1NUxDQjFMbmtzSUdRdWVTd2dhQzU1TENCdExDQjRMQ0IyS1N3Z0pHOHVhVzVwZEU1dmJuVnVhV1p2Y20xRFlYUnRkV3hzVW05dEtHTXVlaXdnZFM1NkxDQmtMbm9zSUdndWVpd2diU3dnZUN3Z2RpazdDaUFnSUNBZ0lDQWdmU0JsYkhObElIUm9hWE11WTNWeWRtVlVlWEJsSUQwOVBTQWlZMkYwYlhWc2JISnZiU0lnSmlZZ0tGbHZMbWx1YVhSRFlYUnRkV3hzVW05dEtHTXVlQ3dnZFM1NExDQmtMbmdzSUdndWVDd2dkR2hwY3k1MFpXNXphVzl1S1N3Z1dtOHVhVzVwZEVOaGRHMTFiR3hTYjIwb1l5NTVMQ0IxTG5rc0lHUXVlU3dnYUM1NUxDQjBhR2x6TG5SbGJuTnBiMjRwTENBa2J5NXBibWwwUTJGMGJYVnNiRkp2YlNoakxub3NJSFV1ZWl3Z1pDNTZMQ0JvTG5vc0lIUm9hWE11ZEdWdWMybHZiaWtwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG5ObGRDaFpieTVqWVd4aktHd3BMQ0JhYnk1allXeGpLR3dwTENBa2J5NWpZV3hqS0d3cEtTd2dianNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXdiMmx1ZEhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjRzlwYm5SekxuQjFjMmdvYVM1amJHOXVaU2dwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMnh2YzJWa0lEMGdaUzVqYkc5elpXUXNJSFJvYVhNdVkzVnlkbVZVZVhCbElEMGdaUzVqZFhKMlpWUjVjR1VzSUhSb2FYTXVkR1Z1YzJsdmJpQTlJR1V1ZEdWdWMybHZiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lHVXVjRzlwYm5SeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVjRzlwYm5SekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NXdiMmx1ZEhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdWNHOXBiblJ6TG5CMWMyZ29hUzUwYjBGeWNtRjVLQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1amJHOXpaV1FnUFNCMGFHbHpMbU5zYjNObFpDd2daUzVqZFhKMlpWUjVjR1VnUFNCMGFHbHpMbU4xY25abFZIbHdaU3dnWlM1MFpXNXphVzl1SUQwZ2RHaHBjeTUwWlc1emFXOXVMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtWnliMjFLVTA5T0tHVXBMQ0IwYUdsekxuQnZhVzUwY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0JsTG5CdmFXNTBjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVjRzlwYm5SelczUmRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJ2YVc1MGN5NXdkWE5vS0c1bGR5Qk5LQ2t1Wm5KdmJVRnljbUY1S0drcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4dmMyVmtJRDBnWlM1amJHOXpaV1FzSUhSb2FYTXVZM1Z5ZG1WVWVYQmxJRDBnWlM1amRYSjJaVlI1Y0dVc0lIUm9hWE11ZEdWdWMybHZiaUE5SUdVdWRHVnVjMmx2Yml3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLZDJFdWNISnZkRzkwZVhCbExtbHpRMkYwYlhWc2JGSnZiVU4xY25abE15QTlJQ0V3T3dwbWRXNWpkR2x2YmlCd1l5aHpMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0JzWlhRZ2NpQTlJQ2h1SUMwZ1pTa2dLaUF1TlN3Z2J5QTlJQ2hwSUMwZ2RDa2dLaUF1TlN3Z1lTQTlJSE1nS2lCekxDQnNJRDBnY3lBcUlHRTdDaUFnSUNCeVpYUjFjbTRnS0RJZ0tpQjBJQzBnTWlBcUlHNGdLeUJ5SUNzZ2J5a2dLaUJzSUNzZ0tDMHpJQ29nZENBcklETWdLaUJ1SUMwZ01pQXFJSElnTFNCdktTQXFJR0VnS3lCeUlDb2djeUFySUhRN0NuMEtablZ1WTNScGIyNGdTWGdvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNBeElDMGdjenNLSUNBZ0lISmxkSFZ5YmlCMElDb2dkQ0FxSUdVN0NuMEtablZ1WTNScGIyNGdSSGdvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SURJZ0tpQW9NU0F0SUhNcElDb2djeUFxSUdVN0NuMEtablZ1WTNScGIyNGdSbmdvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNZ0tpQnpJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQmhjaWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0J5WlhSMWNtNGdTWGdvY3l3Z1pTa2dLeUJFZUNoekxDQjBLU0FySUVaNEtITXNJRzRwT3dwOUNtWjFibU4wYVc5dUlFNTRLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnTVNBdElITTdDaUFnSUNCeVpYUjFjbTRnZENBcUlIUWdLaUIwSUNvZ1pUc0tmUXBtZFc1amRHbHZiaUJDZUNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlERWdMU0J6T3dvZ0lDQWdjbVYwZFhKdUlETWdLaUIwSUNvZ2RDQXFJSE1nS2lCbE93cDlDbVoxYm1OMGFXOXVJSHA0S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlBeklDb2dLREVnTFNCektTQXFJSE1nS2lCeklDb2daVHNLZlFwbWRXNWpkR2x2YmlCVmVDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjeUFxSUhNZ0tpQnpJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQnNjaWh6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCeVpYUjFjbTRnVG5nb2N5d2daU2tnS3lCQ2VDaHpMQ0IwS1NBcklIcDRLSE1zSUc0cElDc2dWWGdvY3l3Z2FTazdDbjBLZG1GeUlHeHZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkRkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmdzSUhRZ1BTQnVaWGNnV0N3Z2JpQTlJRzVsZHlCWUxDQnBJRDBnYm1WM0lGZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtOMVltbGpRbVY2YVdWeVEzVnlkbVVpTENCMGFHbHpMbll3SUQwZ1pTd2dkR2hwY3k1Mk1TQTlJSFFzSUhSb2FYTXVkaklnUFNCdUxDQjBhR2x6TG5ZeklEMGdhVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1dDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ3dnYVNBOUlIUm9hWE11ZGpBc0lISWdQU0IwYUdsekxuWXhMQ0J2SUQwZ2RHaHBjeTUyTWl3Z1lTQTlJSFJvYVhNdWRqTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0d4eUtHVXNJR2t1ZUN3Z2NpNTRMQ0J2TG5nc0lHRXVlQ2tzSUd4eUtHVXNJR2t1ZVN3Z2NpNTVMQ0J2TG5rc0lHRXVlU2twTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVkakF1WTI5d2VTaGxMbll3S1N3Z2RHaHBjeTUyTVM1amIzQjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtTnZjSGtvWlM1Mk1pa3NJSFJvYVhNdWRqTXVZMjl3ZVNobExuWXpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuWXdJRDBnZEdocGN5NTJNQzUwYjBGeWNtRjVLQ2tzSUdVdWRqRWdQU0IwYUdsekxuWXhMblJ2UVhKeVlYa29LU3dnWlM1Mk1pQTlJSFJvYVhNdWRqSXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeklEMGdkR2hwY3k1Mk15NTBiMEZ5Y21GNUtDa3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1aeWIyMUtVMDlPS0dVcExDQjBhR2x6TG5Zd0xtWnliMjFCY25KaGVTaGxMbll3S1N3Z2RHaHBjeTUyTVM1bWNtOXRRWEp5WVhrb1pTNTJNU2tzSUhSb2FYTXVkakl1Wm5KdmJVRnljbUY1S0dVdWRqSXBMQ0IwYUdsekxuWXpMbVp5YjIxQmNuSmhlU2hsTG5ZektTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS2JHOHVjSEp2ZEc5MGVYQmxMbWx6UTNWaWFXTkNaWHBwWlhKRGRYSjJaU0E5SUNFd093cDJZWElnVTJFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1RTd2dkQ0E5SUc1bGR5Qk5MQ0J1SUQwZ2JtVjNJRTBzSUdrZ1BTQnVaWGNnVFNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpUTWlMQ0IwYUdsekxuWXdJRDBnWlN3Z2RHaHBjeTUyTVNBOUlIUXNJSFJvYVhNdWRqSWdQU0J1TENCMGFHbHpMbll6SUQwZ2FUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRZ1BTQnVaWGNnVFNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RDd2dhU0E5SUhSb2FYTXVkakFzSUhJZ1BTQjBhR2x6TG5ZeExDQnZJRDBnZEdocGN5NTJNaXdnWVNBOUlIUm9hWE11ZGpNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMyVjBLR3h5S0dVc0lHa3VlQ3dnY2k1NExDQnZMbmdzSUdFdWVDa3NJR3h5S0dVc0lHa3VlU3dnY2k1NUxDQnZMbmtzSUdFdWVTa3NJR3h5S0dVc0lHa3VlaXdnY2k1NkxDQnZMbm9zSUdFdWVpa3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqQXVZMjl3ZVNobExuWXdLU3dnZEdocGN5NTJNUzVqYjNCNUtHVXVkakVwTENCMGFHbHpMbll5TG1OdmNIa29aUzUyTWlrc0lIUm9hWE11ZGpNdVkyOXdlU2hsTG5ZektTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5Zd0lEMGdkR2hwY3k1Mk1DNTBiMEZ5Y21GNUtDa3NJR1V1ZGpFZ1BTQjBhR2x6TG5ZeExuUnZRWEp5WVhrb0tTd2daUzUyTWlBOUlIUm9hWE11ZGpJdWRHOUJjbkpoZVNncExDQmxMbll6SUQwZ2RHaHBjeTUyTXk1MGIwRnljbUY1S0Nrc0lHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbVp5YjIxS1UwOU9LR1VwTENCMGFHbHpMbll3TG1aeWIyMUJjbkpoZVNobExuWXdLU3dnZEdocGN5NTJNUzVtY205dFFYSnlZWGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVabkp2YlVGeWNtRjVLR1V1ZGpJcExDQjBhR2x6TG5ZekxtWnliMjFCY25KaGVTaGxMbll6S1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLVTJFdWNISnZkRzkwZVhCbExtbHpRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpUTWdQU0FoTURzS2RtRnlJRTl5SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJEZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZnc0lIUWdQU0J1WlhjZ1dDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdsdVpVTjFjblpsSWl3Z2RHaHBjeTUyTVNBOUlHVXNJSFJvYVhNdWRqSWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVRzlwYm5Rb1pTd2dkQ0E5SUc1bGR5QllLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwOVBTQXhJRDhnYmk1amIzQjVLSFJvYVhNdWRqSXBJRG9nS0c0dVkyOXdlU2gwYUdsekxuWXlLUzV6ZFdJb2RHaHBjeTUyTVNrc0lHNHViWFZzZEdsd2JIbFRZMkZzWVhJb1pTa3VZV1JrS0hSb2FYTXVkakVwS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRGQnZhVzUwS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZHRnVaMlZ1ZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwSUh4OElHNWxkeUJZT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG1OdmNIa29kR2hwY3k1Mk1pa3VjM1ZpS0hSb2FYTXVkakVwTG01dmNtMWhiR2w2WlNncExDQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11ZGpFdVkyOXdlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNWpiM0I1S0dVdWRqSXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWRqRWdQU0IwYUdsekxuWXhMblJ2UVhKeVlYa29LU3dnWlM1Mk1pQTlJSFJvYVhNdWRqSXVkRzlCY25KaGVTZ3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1bWNtOXRTbE5QVGlobEtTd2dkR2hwY3k1Mk1TNW1jbTl0UVhKeVlYa29aUzUyTVNrc0lIUm9hWE11ZGpJdVpuSnZiVUZ5Y21GNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BQY2k1d2NtOTBiM1I1Y0dVdWFYTk1hVzVsUTNWeWRtVWdQU0FoTURzS2RtRnlJRVZvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJEZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUUwc0lIUWdQU0J1WlhjZ1RTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdsdVpVTjFjblpsTXlJc0lIUm9hWE11YVhOTWFXNWxRM1Z5ZG1VeklEMGdJVEFzSUhSb2FYTXVkakVnUFNCbExDQjBhR2x6TG5ZeUlEMGdkRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1RTa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0E5UFQwZ01TQS9JRzR1WTI5d2VTaDBhR2x6TG5ZeUtTQTZJQ2h1TG1OdmNIa29kR2hwY3k1Mk1pa3VjM1ZpS0hSb2FYTXVkakVwTENCdUxtMTFiSFJwY0d4NVUyTmhiR0Z5S0dVcExtRmtaQ2gwYUdsekxuWXhLU2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSUWIybHVkQ2hsTENCMEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbll4TG1OdmNIa29aUzUyTVNrc0lIUm9hWE11ZGpJdVkyOXdlU2hsTG5ZeUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlITjFjR1Z5TG5SdlNsTlBUaWdwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG5ZeElEMGdkR2hwY3k1Mk1TNTBiMEZ5Y21GNUtDa3NJR1V1ZGpJZ1BTQjBhR2x6TG5ZeUxuUnZRWEp5WVhrb0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZGpFdVpuSnZiVUZ5Y21GNUtHVXVkakVwTENCMGFHbHpMbll5TG1aeWIyMUJjbkpoZVNobExuWXlLU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dZMjhnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnV0N3Z2RDQTlJRzVsZHlCWUxDQnVJRDBnYm1WM0lGZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abElpd2dkR2hwY3k1Mk1DQTlJR1VzSUhSb2FYTXVkakVnUFNCMExDQjBhR2x6TG5ZeUlEMGdianNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1dDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ3dnYVNBOUlIUm9hWE11ZGpBc0lISWdQU0IwYUdsekxuWXhMQ0J2SUQwZ2RHaHBjeTUyTWpzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1elpYUW9ZWElvWlN3Z2FTNTRMQ0J5TG5nc0lHOHVlQ2tzSUdGeUtHVXNJR2t1ZVN3Z2NpNTVMQ0J2TG5rcEtTd2dianNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5Zd0xtTnZjSGtvWlM1Mk1Da3NJSFJvYVhNdWRqRXVZMjl3ZVNobExuWXhLU3dnZEdocGN5NTJNaTVqYjNCNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVkakFnUFNCMGFHbHpMbll3TG5SdlFYSnlZWGtvS1N3Z1pTNTJNU0E5SUhSb2FYTXVkakV1ZEc5QmNuSmhlU2dwTENCbExuWXlJRDBnZEdocGN5NTJNaTUwYjBGeWNtRjVLQ2tzSUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtWnliMjFLVTA5T0tHVXBMQ0IwYUdsekxuWXdMbVp5YjIxQmNuSmhlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNW1jbTl0UVhKeVlYa29aUzUyTVNrc0lIUm9hWE11ZGpJdVpuSnZiVUZ5Y21GNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BqYnk1d2NtOTBiM1I1Y0dVdWFYTlJkV0ZrY21GMGFXTkNaWHBwWlhKRGRYSjJaU0E5SUNFd093cDJZWElnYUc4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1RTd2dkQ0E5SUc1bGR5Qk5MQ0J1SUQwZ2JtVjNJRTBwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxNeUlzSUhSb2FYTXVkakFnUFNCbExDQjBhR2x6TG5ZeElEMGdkQ3dnZEdocGN5NTJNaUE5SUc0N0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRDaGxMQ0IwSUQwZ2JtVjNJRTBwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRc0lHa2dQU0IwYUdsekxuWXdMQ0J5SUQwZ2RHaHBjeTUyTVN3Z2J5QTlJSFJvYVhNdWRqSTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0dGeUtHVXNJR2t1ZUN3Z2NpNTRMQ0J2TG5ncExDQmhjaWhsTENCcExua3NJSEl1ZVN3Z2J5NTVLU3dnWVhJb1pTd2dhUzU2TENCeUxub3NJRzh1ZWlrcExDQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11ZGpBdVkyOXdlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNWpiM0I1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbU52Y0hrb1pTNTJNaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNTJNQ0E5SUhSb2FYTXVkakF1ZEc5QmNuSmhlU2dwTENCbExuWXhJRDBnZEdocGN5NTJNUzUwYjBGeWNtRjVLQ2tzSUdVdWRqSWdQU0IwYUdsekxuWXlMblJ2UVhKeVlYa29LU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWRqQXVabkp2YlVGeWNtRjVLR1V1ZGpBcExDQjBhR2x6TG5ZeExtWnliMjFCY25KaGVTaGxMbll4S1N3Z2RHaHBjeTUyTWk1bWNtOXRRWEp5WVhrb1pTNTJNaWtzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbWh2TG5CeWIzUnZkSGx3WlM1cGMxRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxNeUE5SUNFd093cDJZWElnZFc4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0JiWFNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVM0JzYVc1bFEzVnlkbVVpTENCMGFHbHpMbkJ2YVc1MGN5QTlJR1U3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZENobExDQjBJRDBnYm1WM0lGZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFzSUdrZ1BTQjBhR2x6TG5CdmFXNTBjeXdnY2lBOUlDaHBMbXhsYm1kMGFDQXRJREVwSUNvZ1pTd2dieUE5SUUxaGRHZ3VabXh2YjNJb2Npa3NJR0VnUFNCeUlDMGdieXdnYkNBOUlHbGJieUE5UFQwZ01DQS9JRzhnT2lCdklDMGdNVjBzSUdNZ1BTQnBXMjlkTENCb0lEMGdhVnR2SUQ0Z2FTNXNaVzVuZEdnZ0xTQXlJRDhnYVM1c1pXNW5kR2dnTFNBeElEb2dieUFySURGZExDQjFJRDBnYVZ0dklENGdhUzVzWlc1bmRHZ2dMU0F6SUQ4Z2FTNXNaVzVuZEdnZ0xTQXhJRG9nYnlBcklESmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbk5sZENod1l5aGhMQ0JzTG5nc0lHTXVlQ3dnYUM1NExDQjFMbmdwTENCd1l5aGhMQ0JzTG5rc0lHTXVlU3dnYUM1NUxDQjFMbmtwS1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVjRzlwYm5SekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1d2IybHVkSE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNHOXBiblJ6TG5CMWMyZ29hUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCbExuQnZhVzUwY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxuQnZhVzUwY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWNHOXBiblJ6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CdmFXNTBjeTV3ZFhOb0tHa3VkRzlCY25KaGVTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXdiMmx1ZEhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjRzlwYm5SekxuQjFjMmdvYm1WM0lGZ29LUzVtY205dFFYSnlZWGtvYVNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtmVHNLZFc4dWNISnZkRzkwZVhCbExtbHpVM0JzYVc1bFEzVnlkbVVnUFNBaE1Ec0tkbUZ5SUZSaElEMGdUMkpxWldOMExtWnlaV1Y2WlNoN0NpQWdJQ0JmWDNCeWIzUnZYMTg2SUc1MWJHd3NDaUFnSUNCQmNtTkRkWEoyWlRvZ1RXRXNDaUFnSUNCRFlYUnRkV3hzVW05dFEzVnlkbVV6T2lCM1lTd0tJQ0FnSUVOMVltbGpRbVY2YVdWeVEzVnlkbVU2SUd4dkxBb2dJQ0FnUTNWaWFXTkNaWHBwWlhKRGRYSjJaVE02SUZOaExBb2dJQ0FnUld4c2FYQnpaVU4xY25abE9pQlZjaXdLSUNBZ0lFeHBibVZEZFhKMlpUb2dUM0lzQ2lBZ0lDQk1hVzVsUTNWeWRtVXpPaUJGYUN3S0lDQWdJRkYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsT2lCamJ5d0tJQ0FnSUZGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abE16b2dhRzhzQ2lBZ0lDQlRjR3hwYm1WRGRYSjJaVG9nZFc4S2ZTa3NJRUZvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJEZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa04xY25abFVHRjBhQ0lzSUhSb2FYTXVZM1Z5ZG1WeklEMGdXMTBzSUhSb2FYTXVZWFYwYjBOc2IzTmxJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WTNWeWRtVnpMbkIxYzJnb1pTazdDaUFnSUNCOUNpQWdJQ0JqYkc5elpWQmhkR2dvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbU4xY25abGMxc3dYUzVuWlhSUWIybHVkQ2d3S1N3Z2RDQTlJSFJvYVhNdVkzVnlkbVZ6VzNSb2FYTXVZM1Z5ZG1WekxteGxibWQwYUNBdElERmRMbWRsZEZCdmFXNTBLREVwT3dvZ0lDQWdJQ0FnSUdVdVpYRjFZV3h6S0hRcElIeDhJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29ibVYzSUU5eUtIUXNJR1VwS1RzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVZ0tpQjBhR2x6TG1kbGRFeGxibWQwYUNncExDQnBJRDBnZEdocGN5NW5aWFJEZFhKMlpVeGxibWQwYUhNb0tTd2djaUE5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLRHNnY2lBOElHa3ViR1Z1WjNSb095bDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBXM0pkSUQ0OUlHNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdhVnR5WFNBdElHNHNJR0VnUFNCMGFHbHpMbU4xY25abGMxdHlYU3dnYkNBOUlHRXVaMlYwVEdWdVozUm9LQ2tzSUdNZ1BTQnNJRDA5UFNBd0lEOGdNQ0E2SURFZ0xTQnZJQzhnYkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoTG1kbGRGQnZhVzUwUVhRb1l5d2dkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY2lzck93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFeGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WjJWMFEzVnlkbVZNWlc1bmRHaHpLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiWlM1c1pXNW5kR2dnTFNBeFhUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVRnlZMHhsYm1kMGFITW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBhR2x6TG1OaFkyaGxUR1Z1WjNSb2N5QTlJRzUxYkd3c0lIUm9hWE11WjJWMFEzVnlkbVZNWlc1bmRHaHpLQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUkRkWEoyWlV4bGJtZDBhSE1vS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkyRmphR1ZNWlc1bmRHaHpJQ1ltSUhSb2FYTXVZMkZqYUdWTVpXNW5kR2h6TG14bGJtZDBhQ0E5UFQwZ2RHaHBjeTVqZFhKMlpYTXViR1Z1WjNSb0tTQnlaWFIxY200Z2RHaHBjeTVqWVdOb1pVeGxibWQwYUhNN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCYlhTd2dkQ0E5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlIUm9hWE11WTNWeWRtVnpMbXhsYm1kMGFEc2diaUE4SUdrN0lHNHJLeWwwSUNzOUlIUm9hWE11WTNWeWRtVnpXMjVkTG1kbGRFeGxibWQwYUNncExDQmxMbkIxYzJnb2RDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJGamFHVk1aVzVuZEdoeklEMGdaU3dnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkRk53WVdObFpGQnZhVzUwY3lobElEMGdOREFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BEMGdaVHNnYmlzcktYUXVjSFZ6YUNoMGFHbHpMbWRsZEZCdmFXNTBLRzRnTHlCbEtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhWMGIwTnNiM05sSUNZbUlIUXVjSFZ6YUNoMFd6QmRLU3dnZERzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MGN5aGxJRDBnTVRJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRMQ0J1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMGFHbHpMbU4xY25abGN6c2dhU0E4SUhJdWJHVnVaM1JvT3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhKYmFWMHNJR0VnUFNCdklDWW1JRzh1YVhORmJHeHBjSE5sUTNWeWRtVWdQeUJsSUNvZ01pQTZJRzhnSmlZZ0tHOHVhWE5NYVc1bFEzVnlkbVVnZkh3Z2J5NXBjMHhwYm1WRGRYSjJaVE1wSUQ4Z01TQTZJRzhnSmlZZ2J5NXBjMU53YkdsdVpVTjFjblpsSUQ4Z1pTQXFJRzh1Y0c5cGJuUnpMbXhsYm1kMGFDQTZJR1VzSUd3Z1BTQnZMbWRsZEZCdmFXNTBjeWhoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTURzZ1l5QThJR3d1YkdWdVozUm9PeUJqS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCc1cyTmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiaUFtSmlCdUxtVnhkV0ZzY3lob0tTQjhmQ0FvZEM1d2RYTm9LR2dwTENCdUlEMGdhQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhWMGIwTnNiM05sSUNZbUlIUXViR1Z1WjNSb0lENGdNU0FtSmlBaGRGdDBMbXhsYm1kMGFDQXRJREZkTG1WeGRXRnNjeWgwV3pCZEtTQW1KaUIwTG5CMWMyZ29kRnN3WFNrc0lIUTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OMWNuWmxjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbU4xY25abGN5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdVdVkzVnlkbVZ6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtTjFjblpsY3k1d2RYTm9LR2t1WTJ4dmJtVW9LU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRjFkRzlEYkc5elpTQTlJR1V1WVhWMGIwTnNiM05sTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdaUzVoZFhSdlEyeHZjMlVnUFNCMGFHbHpMbUYxZEc5RGJHOXpaU3dnWlM1amRYSjJaWE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1amRYSjJaWE11YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBhR2x6TG1OMWNuWmxjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdaUzVqZFhKMlpYTXVjSFZ6YUNocExuUnZTbE5QVGlncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11WVhWMGIwTnNiM05sSUQwZ1pTNWhkWFJ2UTJ4dmMyVXNJSFJvYVhNdVkzVnlkbVZ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1WTNWeWRtVnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNWpkWEoyWlhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZM1Z5ZG1WekxuQjFjMmdvYm1WM0lGUmhXMmt1ZEhsd1pWMG9LUzVtY205dFNsTlBUaWhwS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRcDlMQ0JuY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nUVdnZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUdGMGFDSXNJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBJRDBnYm1WM0lGZ3NJR1VnSmlZZ2RHaHBjeTV6WlhSR2NtOXRVRzlwYm5SektHVXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVkJ2YVc1MGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRiM1psVkc4b1pWc3dYUzU0TENCbFd6QmRMbmtwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlERXNJRzRnUFNCbExteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDBhR2x6TG14cGJtVlVieWhsVzNSZExuZ3NJR1ZiZEYwdWVTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGIzWmxWRzhvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNXpaWFFvWlN3Z2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnNhVzVsVkc4b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYm1WM0lFOXlLSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbU5zYjI1bEtDa3NJRzVsZHlCWUtHVXNJSFFwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpkWEoyWlhNdWNIVnphQ2h1S1N3Z2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdWMyVjBLR1VzSUhRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NYVmhaSEpoZEdsalEzVnlkbVZVYnlobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnWTI4b2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdVkyeHZibVVvS1N3Z2JtVjNJRmdvWlN3Z2RDa3NJRzVsZHlCWUtHNHNJR2twS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpkWEoyWlhNdWNIVnphQ2h5S1N3Z2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdWMyVjBLRzRzSUdrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1ltVjZhV1Z5UTNWeWRtVlVieWhsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1WlhjZ2JHOG9kR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVZMnh2Ym1Vb0tTd2dibVYzSUZnb1pTd2dkQ2tzSUc1bGR5QllLRzRzSUdrcExDQnVaWGNnV0NoeUxDQnZLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29ZU2tzSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG5ObGRDaHlMQ0J2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhOd2JHbHVaVlJvY25Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1amJHOXVaU2dwQ2lBZ0lDQWdJQ0FnWFM1amIyNWpZWFFvWlNrc0lHNGdQU0J1WlhjZ2RXOG9kQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29iaWtzSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG1OdmNIa29aVnRsTG14bGJtZDBhQ0F0SURGZEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRnlZeWhsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzU0TENCc0lEMGdkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVlVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aFluTmhjbU1vWlNBcklHRXNJSFFnS3lCc0xDQnVMQ0JwTENCeUxDQnZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0ZpYzJGeVl5aGxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVdKelpXeHNhWEJ6WlNobExDQjBMQ0J1TENCdUxDQnBMQ0J5TENCdktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHVnNiR2x3YzJVb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1ZUN3Z2FDQTlJSFJvYVhNdVkzVnljbVZ1ZEZCdmFXNTBMbms3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlXSnpaV3hzYVhCelpTaGxJQ3NnWXl3Z2RDQXJJR2dzSUc0c0lHa3NJSElzSUc4c0lHRXNJR3dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdKelpXeHNhWEJ6WlNobExDQjBMQ0J1TENCcExDQnlMQ0J2TENCaExDQnNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0J1WlhjZ1ZYSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkNrN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkzVnlkbVZ6TG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JqTG1kbGRGQnZhVzUwS0RBcE93b2dJQ0FnSUNBZ0lDQWdJQ0IxTG1WeGRXRnNjeWgwYUdsekxtTjFjbkpsYm5SUWIybHVkQ2tnZkh3Z2RHaHBjeTVzYVc1bFZHOG9kUzU0TENCMUxua3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxtTjFjblpsY3k1d2RYTm9LR01wT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnWXk1blpYUlFiMmx1ZENneEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdVkyOXdlU2hvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNWpiM0I1S0dVdVkzVnljbVZ1ZEZCdmFXNTBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtTjFjbkpsYm5SUWIybHVkQ0E5SUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG5SdlFYSnlZWGtvS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG1aeWIyMUJjbkpoZVNobExtTjFjbkpsYm5SUWIybHVkQ2tzSUhSb2FYTTdDaUFnSUNCOUNuMHNJRmgwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJuY2lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5WMWFXUWdQU0JGZENncExDQjBhR2x6TG5SNWNHVWdQU0FpVTJoaGNHVWlMQ0IwYUdsekxtaHZiR1Z6SUQwZ1cxMDdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkSE5JYjJ4bGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RHaHBjeTVvYjJ4bGN5NXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3BkRnR1WFNBOUlIUm9hWE11YUc5c1pYTmJibDB1WjJWMFVHOXBiblJ6S0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCME93b2dJQ0FnZlFvZ0lDQWdaWGgwY21GamRGQnZhVzUwY3lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVTZJSFJvYVhNdVoyVjBVRzlwYm5SektHVXBMQW9nSUNBZ0lDQWdJQ0FnSUNCb2IyeGxjem9nZEdocGN5NW5aWFJRYjJsdWRITkliMnhsY3lobEtRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1odmJHVnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlHVXVhRzlzWlhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JsTG1odmJHVnpXM1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1odmJHVnpMbkIxYzJnb2FTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0JsTG5WMWFXUWdQU0IwYUdsekxuVjFhV1FzSUdVdWFHOXNaWE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1b2IyeGxjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11YUc5c1pYTmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVhRzlzWlhNdWNIVnphQ2hwTG5SdlNsTlBUaWdwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVkWFZwWkNBOUlHVXVkWFZwWkN3Z2RHaHBjeTVvYjJ4bGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCbExtaHZiR1Z6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVvYjJ4bGMxdDBYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVvYjJ4bGN5NXdkWE5vS0c1bGR5Qm5jaWdwTG1aeWIyMUtVMDlPS0drcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDbjBzSUU5NElEMGdld29nSUNBZ2RISnBZVzVuZFd4aGRHVTZJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUWdQU0F5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbElDWW1JR1V1YkdWdVozUm9MQ0JwSUQwZ2JpQS9JR1ZiTUYwZ0tpQjBJRG9nY3k1c1pXNW5kR2dzSUhJZ1BTQkRhQ2h6TENBd0xDQnBMQ0IwTENBaE1Da3NJRzhnUFNCYlhUc0tJQ0FnSUNBZ0lDQnBaaUFvSVhJZ2ZId2djaTV1WlhoMElEMDlQU0J5TG5CeVpYWXBJSEpsZEhWeWJpQnZPd29nSUNBZ0lDQWdJR3hsZENCaExDQnNMQ0JqTENCb0xDQjFMQ0JrTENCbU93b2dJQ0FnSUNBZ0lHbG1JQ2h1SUNZbUlDaHlJRDBnVjNnb2N5d2daU3dnY2l3Z2RDa3BMQ0J6TG14bGJtZDBhQ0ErSURnd0lDb2dkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmhJRDBnWXlBOUlITmJNRjBzSUd3Z1BTQm9JRDBnYzFzeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ2REc2diU0E4SUdrN0lHMGdLejBnZENsMUlEMGdjMXR0WFN3Z1pDQTlJSE5iYlNBcklERmRMQ0IxSUR3Z1lTQW1KaUFvWVNBOUlIVXBMQ0JrSUR3Z2JDQW1KaUFvYkNBOUlHUXBMQ0IxSUQ0Z1l5QW1KaUFvWXlBOUlIVXBMQ0JrSUQ0Z2FDQW1KaUFvYUNBOUlHUXBPd29nSUNBZ0lDQWdJQ0FnSUNCbUlEMGdUV0YwYUM1dFlYZ29ZeUF0SUdFc0lHZ2dMU0JzS1N3Z1ppQTlJR1lnSVQwOUlEQWdQeUF4SUM4Z1ppQTZJREE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUI0Y2loeUxDQnZMQ0IwTENCaExDQnNMQ0JtS1N3Z2J6c0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdRMmdvY3l3Z1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ2JHVjBJSElzSUc4N0NpQWdJQ0JwWmlBb2FTQTlQVDBnZEhrb2N5d2daU3dnZEN3Z2Jpa2dQaUF3S1NCbWIzSW9jaUE5SUdVN0lISWdQQ0IwT3lCeUlDczlJRzRwYnlBOUlHMWpLSElzSUhOYmNsMHNJSE5iY2lBcklERmRMQ0J2S1RzS0lDQWdJR1ZzYzJVZ1ptOXlLSElnUFNCMElDMGdianNnY2lBK1BTQmxPeUJ5SUMwOUlHNHBieUE5SUcxaktISXNJSE5iY2wwc0lITmJjaUFySURGZExDQnZLVHNLSUNBZ0lISmxkSFZ5YmlCdklDWW1JR1p2S0c4c0lHOHVibVY0ZENrZ0ppWWdLSFp5S0c4cExDQnZJRDBnYnk1dVpYaDBLU3dnYnpzS2ZRcG1kVzVqZEdsdmJpQlViaWh6TENCbEtTQjdDaUFnSUNCcFppQW9JWE1wSUhKbGRIVnliaUJ6T3dvZ0lDQWdaU0I4ZkNBb1pTQTlJSE1wT3dvZ0lDQWdiR1YwSUhRZ1BTQnpMQ0J1T3dvZ0lDQWdaRzhnYVdZZ0tHNGdQU0FoTVN3Z0lYUXVjM1JsYVc1bGNpQW1KaUFvWm04b2RDd2dkQzV1WlhoMEtTQjhmQ0FrWlNoMExuQnlaWFlzSUhRc0lIUXVibVY0ZENrZ1BUMDlJREFwS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFp5S0hRcExDQjBJRDBnWlNBOUlIUXVjSEpsZGl3Z2RDQTlQVDBnZEM1dVpYaDBLU0JpY21WaGF6c0tJQ0FnSUNBZ0lDQnVJRDBnSVRBN0NpQWdJQ0I5SUdWc2MyVWdkQ0E5SUhRdWJtVjRkRHNLSUNBZ0lIZG9hV3hsSUNodUlIeDhJSFFnSVQwOUlHVXBDaUFnSUNCeVpYUjFjbTRnWlRzS2ZRcG1kVzVqZEdsdmJpQjRjaWh6TENCbExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0JwWmlBb0lYTXBJSEpsZEhWeWJqc0tJQ0FnSUNGdklDWW1JSElnSmlZZ1duZ29jeXdnYml3Z2FTd2djaWs3Q2lBZ0lDQnNaWFFnWVNBOUlITXNJR3dzSUdNN0NpQWdJQ0JtYjNJb095QnpMbkJ5WlhZZ0lUMDlJSE11Ym1WNGREc3Bld29nSUNBZ0lDQWdJR2xtSUNoc0lEMGdjeTV3Y21WMkxDQmpJRDBnY3k1dVpYaDBMQ0J5SUQ4Z2EzZ29jeXdnYml3Z2FTd2djaWtnT2lCSWVDaHpLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxMbkIxYzJnb2JDNXBJQzhnZENrc0lHVXVjSFZ6YUNoekxta2dMeUIwS1N3Z1pTNXdkWE5vS0dNdWFTQXZJSFFwTENCMmNpaHpLU3dnY3lBOUlHTXVibVY0ZEN3Z1lTQTlJR011Ym1WNGREc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHpJRDBnWXl3Z2N5QTlQVDBnWVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2SUQ4Z2J5QTlQVDBnTVNBL0lDaHpJRDBnUjNnb1ZHNG9jeWtzSUdVc0lIUXBMQ0I0Y2loekxDQmxMQ0IwTENCdUxDQnBMQ0J5TENBeUtTa2dPaUJ2SUQwOVBTQXlJQ1ltSUZaNEtITXNJR1VzSUhRc0lHNHNJR2tzSUhJcElEb2dlSElvVkc0b2N5a3NJR1VzSUhRc0lHNHNJR2tzSUhJc0lERXBPd29nSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnU0hnb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCekxuQnlaWFlzSUhRZ1BTQnpMQ0J1SUQwZ2N5NXVaWGgwT3dvZ0lDQWdhV1lnS0NSbEtHVXNJSFFzSUc0cElENDlJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJR3hsZENCcElEMGdjeTV1WlhoMExtNWxlSFE3Q2lBZ0lDQm1iM0lvT3lCcElDRTlQU0J6TG5CeVpYWTdLWHNLSUNBZ0lDQWdJQ0JwWmlBb1Uya29aUzU0TENCbExua3NJSFF1ZUN3Z2RDNTVMQ0J1TG5nc0lHNHVlU3dnYVM1NExDQnBMbmtwSUNZbUlDUmxLR2t1Y0hKbGRpd2dhU3dnYVM1dVpYaDBLU0ErUFNBd0tTQnlaWFIxY200Z0lURTdDaUFnSUNBZ0lDQWdhU0E5SUdrdWJtVjRkRHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUFoTURzS2ZRcG1kVzVqZEdsdmJpQnJlQ2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJSE11Y0hKbGRpd2djaUE5SUhNc0lHOGdQU0J6TG01bGVIUTdDaUFnSUNCcFppQW9KR1VvYVN3Z2Npd2dieWtnUGowZ01Da2djbVYwZFhKdUlDRXhPd29nSUNBZ2JHVjBJR0VnUFNCcExuZ2dQQ0J5TG5nZ1B5QnBMbmdnUENCdkxuZ2dQeUJwTG5nZ09pQnZMbmdnT2lCeUxuZ2dQQ0J2TG5nZ1B5QnlMbmdnT2lCdkxuZ3NJR3dnUFNCcExua2dQQ0J5TG5rZ1B5QnBMbmtnUENCdkxua2dQeUJwTG5rZ09pQnZMbmtnT2lCeUxua2dQQ0J2TG5rZ1B5QnlMbmtnT2lCdkxua3NJR01nUFNCcExuZ2dQaUJ5TG5nZ1B5QnBMbmdnUGlCdkxuZ2dQeUJwTG5nZ09pQnZMbmdnT2lCeUxuZ2dQaUJ2TG5nZ1B5QnlMbmdnT2lCdkxuZ3NJR2dnUFNCcExua2dQaUJ5TG5rZ1B5QnBMbmtnUGlCdkxua2dQeUJwTG5rZ09pQnZMbmtnT2lCeUxua2dQaUJ2TG5rZ1B5QnlMbmtnT2lCdkxua3NJSFVnUFNCdllTaGhMQ0JzTENCbExDQjBMQ0J1S1N3Z1pDQTlJRzloS0dNc0lHZ3NJR1VzSUhRc0lHNHBMQ0JtSUQwZ2N5NXdjbVYyV2l3Z2JTQTlJSE11Ym1WNGRGbzdDaUFnSUNCbWIzSW9PeUJtSUNZbUlHWXVlaUErUFNCMUlDWW1JRzBnSmlZZ2JTNTZJRHc5SUdRN0tYc0tJQ0FnSUNBZ0lDQnBaaUFvWmlBaFBUMGdjeTV3Y21WMklDWW1JR1lnSVQwOUlITXVibVY0ZENBbUppQlRhU2hwTG5nc0lHa3VlU3dnY2k1NExDQnlMbmtzSUc4dWVDd2dieTU1TENCbUxuZ3NJR1l1ZVNrZ0ppWWdKR1VvWmk1d2NtVjJMQ0JtTENCbUxtNWxlSFFwSUQ0OUlEQWdmSHdnS0dZZ1BTQm1MbkJ5WlhaYUxDQnRJQ0U5UFNCekxuQnlaWFlnSmlZZ2JTQWhQVDBnY3k1dVpYaDBJQ1ltSUZOcEtHa3VlQ3dnYVM1NUxDQnlMbmdzSUhJdWVTd2dieTU0TENCdkxua3NJRzB1ZUN3Z2JTNTVLU0FtSmlBa1pTaHRMbkJ5WlhZc0lHMHNJRzB1Ym1WNGRDa2dQajBnTUNrcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnRJRDBnYlM1dVpYaDBXanNLSUNBZ0lIMEtJQ0FnSUdadmNpZzdJR1lnSmlZZ1ppNTZJRDQ5SUhVN0tYc0tJQ0FnSUNBZ0lDQnBaaUFvWmlBaFBUMGdjeTV3Y21WMklDWW1JR1lnSVQwOUlITXVibVY0ZENBbUppQlRhU2hwTG5nc0lHa3VlU3dnY2k1NExDQnlMbmtzSUc4dWVDd2dieTU1TENCbUxuZ3NJR1l1ZVNrZ0ppWWdKR1VvWmk1d2NtVjJMQ0JtTENCbUxtNWxlSFFwSUQ0OUlEQXBJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0JtSUQwZ1ppNXdjbVYyV2pzS0lDQWdJSDBLSUNBZ0lHWnZjaWc3SUcwZ0ppWWdiUzU2SUR3OUlHUTdLWHNLSUNBZ0lDQWdJQ0JwWmlBb2JTQWhQVDBnY3k1d2NtVjJJQ1ltSUcwZ0lUMDlJSE11Ym1WNGRDQW1KaUJUYVNocExuZ3NJR2t1ZVN3Z2NpNTRMQ0J5TG5rc0lHOHVlQ3dnYnk1NUxDQnRMbmdzSUcwdWVTa2dKaVlnSkdVb2JTNXdjbVYyTENCdExDQnRMbTVsZUhRcElENDlJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCdElEMGdiUzV1WlhoMFdqc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQWhNRHNLZlFwbWRXNWpkR2x2YmlCSGVDaHpMQ0JsTENCMEtTQjdDaUFnSUNCc1pYUWdiaUE5SUhNN0NpQWdJQ0JrYnlCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUxuQnlaWFlzSUhJZ1BTQnVMbTVsZUhRdWJtVjRkRHNLSUNBZ0lDQWdJQ0FoWm04b2FTd2djaWtnSmlZZ1RHZ29hU3dnYml3Z2JpNXVaWGgwTENCeUtTQW1KaUI1Y2locExDQnlLU0FtSmlCNWNpaHlMQ0JwS1NBbUppQW9aUzV3ZFhOb0tHa3VhU0F2SUhRcExDQmxMbkIxYzJnb2JpNXBJQzhnZENrc0lHVXVjSFZ6YUNoeUxta2dMeUIwS1N3Z2RuSW9iaWtzSUhaeUtHNHVibVY0ZENrc0lHNGdQU0J6SUQwZ2Npa3NJRzRnUFNCdUxtNWxlSFE3Q2lBZ0lDQjlkMmhwYkdVZ0tHNGdJVDA5SUhNcENpQWdJQ0J5WlhSMWNtNGdWRzRvYmlrN0NuMEtablZ1WTNScGIyNGdWbmdvY3l3Z1pTd2dkQ3dnYml3Z2FTd2djaWtnZXdvZ0lDQWdiR1YwSUc4Z1BTQnpPd29nSUNBZ1pHOGdld29nSUNBZ0lDQWdJR3hsZENCaElEMGdieTV1WlhoMExtNWxlSFE3Q2lBZ0lDQWdJQ0FnWm05eUtEc2dZU0FoUFQwZ2J5NXdjbVYyT3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodkxta2dJVDA5SUdFdWFTQW1KaUJSZUNodkxDQmhLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JTYUNodkxDQmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCVWJpaHZMQ0J2TG01bGVIUXBMQ0JzSUQwZ1ZHNG9iQ3dnYkM1dVpYaDBLU3dnZUhJb2J5d2daU3dnZEN3Z2Jpd2dhU3dnY2lrc0lIaHlLR3dzSUdVc0lIUXNJRzRzSUdrc0lISXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JoTG01bGVIUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRzhnUFNCdkxtNWxlSFE3Q2lBZ0lDQjlkMmhwYkdVZ0tHOGdJVDA5SUhNcENuMEtablZ1WTNScGIyNGdWM2dvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0JiWFN3Z2Npd2dieXdnWVN3Z2JDd2dZenNLSUNBZ0lHWnZjaWh5SUQwZ01Dd2dieUE5SUdVdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktXRWdQU0JsVzNKZElDb2diaXdnYkNBOUlISWdQQ0J2SUMwZ01TQS9JR1ZiY2lBcklERmRJQ29nYmlBNklITXViR1Z1WjNSb0xDQmpJRDBnUTJnb2N5d2dZU3dnYkN3Z2Jpd2dJVEVwTENCaklEMDlQU0JqTG01bGVIUWdKaVlnS0dNdWMzUmxhVzVsY2lBOUlDRXdLU3dnYVM1d2RYTm9LR3A0S0dNcEtUc0tJQ0FnSUdadmNpaHBMbk52Y25Rb2NYZ3BMQ0J5SUQwZ01Ec2djaUE4SUdrdWJHVnVaM1JvT3lCeUt5c3BXSGdvYVZ0eVhTd2dkQ2tzSUhRZ1BTQlViaWgwTENCMExtNWxlSFFwT3dvZ0lDQWdjbVYwZFhKdUlIUTdDbjBLWm5WdVkzUnBiMjRnY1hnb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXVlQ0F0SUdVdWVEc0tmUXBtZFc1amRHbHZiaUJZZUNoekxDQmxLU0I3Q2lBZ0lDQnBaaUFvWlNBOUlFcDRLSE1zSUdVcExDQmxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JTYUNobExDQnpLVHNLSUNBZ0lDQWdJQ0JVYmlobExDQmxMbTVsZUhRcExDQlViaWgwTENCMExtNWxlSFFwT3dvZ0lDQWdmUXA5Q21aMWJtTjBhVzl1SUVwNEtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdaU3dnYmlBOUlITXVlQ3dnYVNBOUlITXVlU3dnY2lBOUlDMHhJQzhnTUN3Z2J6c0tJQ0FnSUdSdklIc0tJQ0FnSUNBZ0lDQnBaaUFvYVNBOFBTQjBMbmtnSmlZZ2FTQStQU0IwTG01bGVIUXVlU0FtSmlCMExtNWxlSFF1ZVNBaFBUMGdkQzU1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdkQzU0SUNzZ0tHa2dMU0IwTG5rcElDb2dLSFF1Ym1WNGRDNTRJQzBnZEM1NEtTQXZJQ2gwTG01bGVIUXVlU0F0SUhRdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtJRHc5SUc0Z0ppWWdaQ0ErSUhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwZ1pDd2daQ0E5UFQwZ2Jpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNCMExua3BJSEpsZEhWeWJpQjBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNCMExtNWxlSFF1ZVNrZ2NtVjBkWEp1SUhRdWJtVjRkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCMExuZ2dQQ0IwTG01bGVIUXVlQ0EvSUhRZ09pQjBMbTVsZUhRN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZENBOUlIUXVibVY0ZERzS0lDQWdJSDEzYUdsc1pTQW9kQ0FoUFQwZ1pTa0tJQ0FnSUdsbUlDZ2hieWtnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0JwWmlBb2JpQTlQVDBnY2lrZ2NtVjBkWEp1SUc4N0NpQWdJQ0JzWlhRZ1lTQTlJRzhzSUd3Z1BTQnZMbmdzSUdNZ1BTQnZMbmtzSUdnZ1BTQXhJQzhnTUN3Z2RUc0tJQ0FnSUhRZ1BTQnZPd29nSUNBZ1pHOGdiaUErUFNCMExuZ2dKaVlnZEM1NElENDlJR3dnSmlZZ2JpQWhQVDBnZEM1NElDWW1JRk5wS0drZ1BDQmpJRDhnYmlBNklISXNJR2tzSUd3c0lHTXNJR2tnUENCaklEOGdjaUE2SUc0c0lHa3NJSFF1ZUN3Z2RDNTVLU0FtSmlBb2RTQTlJRTFoZEdndVlXSnpLR2tnTFNCMExua3BJQzhnS0c0Z0xTQjBMbmdwTENCNWNpaDBMQ0J6S1NBbUppQW9kU0E4SUdnZ2ZId2dkU0E5UFQwZ2FDQW1KaUFvZEM1NElENGdieTU0SUh4OElIUXVlQ0E5UFQwZ2J5NTRJQ1ltSUZsNEtHOHNJSFFwS1NrZ0ppWWdLRzhnUFNCMExDQm9JRDBnZFNrcExDQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2QyaHBiR1VnS0hRZ0lUMDlJR0VwQ2lBZ0lDQnlaWFIxY200Z2J6c0tmUXBtZFc1amRHbHZiaUJaZUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z0pHVW9jeTV3Y21WMkxDQnpMQ0JsTG5CeVpYWXBJRHdnTUNBbUppQWtaU2hsTG01bGVIUXNJSE1zSUhNdWJtVjRkQ2tnUENBd093cDlDbVoxYm1OMGFXOXVJRnA0S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnY3pzS0lDQWdJR1J2SUdrdWVpQTlQVDBnYm5Wc2JDQW1KaUFvYVM1NklEMGdiMkVvYVM1NExDQnBMbmtzSUdVc0lIUXNJRzRwS1N3Z2FTNXdjbVYyV2lBOUlHa3VjSEpsZGl3Z2FTNXVaWGgwV2lBOUlHa3VibVY0ZEN3Z2FTQTlJR2t1Ym1WNGREc0tJQ0FnSUhkb2FXeGxJQ2hwSUNFOVBTQnpLUW9nSUNBZ2FTNXdjbVYyV2k1dVpYaDBXaUE5SUc1MWJHd3NJR2t1Y0hKbGRsb2dQU0J1ZFd4c0xDQWtlQ2hwS1RzS2ZRcG1kVzVqZEdsdmJpQWtlQ2h6S1NCN0NpQWdJQ0JzWlhRZ1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlBOUlERTdDaUFnSUNCa2J5QjdDaUFnSUNBZ0lDQWdabTl5S0hRZ1BTQnpMQ0J6SUQwZ2JuVnNiQ3dnY2lBOUlHNTFiR3dzSUc4Z1BTQXdPeUIwT3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lodkt5c3NJRzRnUFNCMExDQmhJRDBnTUN3Z1pTQTlJREE3SUdVZ1BDQmpJQ1ltSUNoaEt5c3NJRzRnUFNCdUxtNWxlSFJhTENBaElXNHBPeUJsS3lzcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JDQTlJR003SUdFZ1BpQXdJSHg4SUd3Z1BpQXdJQ1ltSUc0N0tXRWdJVDA5SURBZ0ppWWdLR3dnUFQwOUlEQWdmSHdnSVc0Z2ZId2dkQzU2SUR3OUlHNHVlaWtnUHlBb2FTQTlJSFFzSUhRZ1BTQjBMbTVsZUhSYUxDQmhMUzBwSURvZ0tHa2dQU0J1TENCdUlEMGdiaTV1WlhoMFdpd2diQzB0S1N3Z2NpQS9JSEl1Ym1WNGRGb2dQU0JwSURvZ2N5QTlJR2tzSUdrdWNISmxkbG9nUFNCeUxDQnlJRDBnYVRzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUc0N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISXVibVY0ZEZvZ1BTQnVkV3hzTENCaklDbzlJREk3Q2lBZ0lDQjlkMmhwYkdVZ0tHOGdQaUF4S1FvZ0lDQWdjbVYwZFhKdUlITTdDbjBLWm5WdVkzUnBiMjRnYjJFb2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdjbVYwZFhKdUlITWdQU0F6TWpjMk55QXFJQ2h6SUMwZ2RDa2dLaUJwTENCbElEMGdNekkzTmpjZ0tpQW9aU0F0SUc0cElDb2dhU3dnY3lBOUlDaHpJSHdnY3lBOFBDQTRLU0FtSURFMk56RXhPVE0xTENCeklEMGdLSE1nZkNCeklEdzhJRFFwSUNZZ01qVXlOalExTVRNMUxDQnpJRDBnS0hNZ2ZDQnpJRHc4SURJcElDWWdPRFU0T1Rrek5EVTVMQ0J6SUQwZ0tITWdmQ0J6SUR3OElERXBJQ1lnTVRRek1UWTFOVGMyTlN3Z1pTQTlJQ2hsSUh3Z1pTQThQQ0E0S1NBbUlERTJOekV4T1RNMUxDQmxJRDBnS0dVZ2ZDQmxJRHc4SURRcElDWWdNalV5TmpRMU1UTTFMQ0JsSUQwZ0tHVWdmQ0JsSUR3OElESXBJQ1lnT0RVNE9Ua3pORFU1TENCbElEMGdLR1VnZkNCbElEdzhJREVwSUNZZ01UUXpNVFkxTlRjMk5Td2djeUI4SUdVZ1BEd2dNVHNLZlFwbWRXNWpkR2x2YmlCcWVDaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlITXNJSFFnUFNCek93b2dJQ0FnWkc4Z0tHVXVlQ0E4SUhRdWVDQjhmQ0JsTG5nZ1BUMDlJSFF1ZUNBbUppQmxMbmtnUENCMExua3BJQ1ltSUNoMElEMGdaU2tzSUdVZ1BTQmxMbTVsZUhRN0NpQWdJQ0IzYUdsc1pTQW9aU0FoUFQwZ2N5a0tJQ0FnSUhKbGRIVnliaUIwT3dwOUNtWjFibU4wYVc5dUlGTnBLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFcElIc0tJQ0FnSUhKbGRIVnliaUFvYVNBdElHOHBJQ29nS0dVZ0xTQmhLU0F0SUNoeklDMGdieWtnS2lBb2NpQXRJR0VwSUQ0OUlEQWdKaVlnS0hNZ0xTQnZLU0FxSUNodUlDMGdZU2tnTFNBb2RDQXRJRzhwSUNvZ0tHVWdMU0JoS1NBK1BTQXdJQ1ltSUNoMElDMGdieWtnS2lBb2NpQXRJR0VwSUMwZ0tHa2dMU0J2S1NBcUlDaHVJQzBnWVNrZ1BqMGdNRHNLZlFwbWRXNWpkR2x2YmlCUmVDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjeTV1WlhoMExta2dJVDA5SUdVdWFTQW1KaUJ6TG5CeVpYWXVhU0FoUFQwZ1pTNXBJQ1ltSUNGTGVDaHpMQ0JsS1NBbUppQW9lWElvY3l3Z1pTa2dKaVlnZVhJb1pTd2djeWtnSmlZZ1pYa29jeXdnWlNrZ0ppWWdLQ1JsS0hNdWNISmxkaXdnY3l3Z1pTNXdjbVYyS1NCOGZDQWtaU2h6TENCbExuQnlaWFlzSUdVcEtTQjhmQ0JtYnloekxDQmxLU0FtSmlBa1pTaHpMbkJ5WlhZc0lITXNJSE11Ym1WNGRDa2dQaUF3SUNZbUlDUmxLR1V1Y0hKbGRpd2daU3dnWlM1dVpYaDBLU0ErSURBcE93cDlDbVoxYm1OMGFXOXVJQ1JsS0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQW9aUzU1SUMwZ2N5NTVLU0FxSUNoMExuZ2dMU0JsTG5ncElDMGdLR1V1ZUNBdElITXVlQ2tnS2lBb2RDNTVJQzBnWlM1NUtUc0tmUXBtZFc1amRHbHZiaUJtYnloekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5NTRJRDA5UFNCbExuZ2dKaVlnY3k1NUlEMDlQU0JsTG5rN0NuMEtablZ1WTNScGIyNGdUR2dvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0IzY3lna1pTaHpMQ0JsTENCMEtTa3NJSElnUFNCM2N5Z2taU2h6TENCbExDQnVLU2tzSUc4Z1BTQjNjeWdrWlNoMExDQnVMQ0J6S1Nrc0lHRWdQU0IzY3lna1pTaDBMQ0J1TENCbEtTazdDaUFnSUNCeVpYUjFjbTRnSVNFb2FTQWhQVDBnY2lBbUppQnZJQ0U5UFNCaElIeDhJR2tnUFQwOUlEQWdKaVlnWW5Nb2N5d2dkQ3dnWlNrZ2ZId2djaUE5UFQwZ01DQW1KaUJpY3loekxDQnVMQ0JsS1NCOGZDQnZJRDA5UFNBd0lDWW1JR0p6S0hRc0lITXNJRzRwSUh4OElHRWdQVDA5SURBZ0ppWWdZbk1vZEN3Z1pTd2diaWtwT3dwOUNtWjFibU4wYVc5dUlHSnpLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlCbExuZ2dQRDBnVFdGMGFDNXRZWGdvY3k1NExDQjBMbmdwSUNZbUlHVXVlQ0ErUFNCTllYUm9MbTFwYmloekxuZ3NJSFF1ZUNrZ0ppWWdaUzU1SUR3OUlFMWhkR2d1YldGNEtITXVlU3dnZEM1NUtTQW1KaUJsTG5rZ1BqMGdUV0YwYUM1dGFXNG9jeTU1TENCMExua3BPd3A5Q21aMWJtTjBhVzl1SUhkektITXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklENGdNQ0EvSURFZ09pQnpJRHdnTUNBL0lDMHhJRG9nTURzS2ZRcG1kVzVqZEdsdmJpQkxlQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUhNN0NpQWdJQ0JrYnlCN0NpQWdJQ0FnSUNBZ2FXWWdLSFF1YVNBaFBUMGdjeTVwSUNZbUlIUXVibVY0ZEM1cElDRTlQU0J6TG1rZ0ppWWdkQzVwSUNFOVBTQmxMbWtnSmlZZ2RDNXVaWGgwTG1rZ0lUMDlJR1V1YVNBbUppQk1hQ2gwTENCMExtNWxlSFFzSUhNc0lHVXBLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnZENBOUlIUXVibVY0ZERzS0lDQWdJSDEzYUdsc1pTQW9kQ0FoUFQwZ2N5a0tJQ0FnSUhKbGRIVnliaUFoTVRzS2ZRcG1kVzVqZEdsdmJpQjVjaWh6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnSkdVb2N5NXdjbVYyTENCekxDQnpMbTVsZUhRcElEd2dNQ0EvSUNSbEtITXNJR1VzSUhNdWJtVjRkQ2tnUGowZ01DQW1KaUFrWlNoekxDQnpMbkJ5WlhZc0lHVXBJRDQ5SURBZ09pQWtaU2h6TENCbExDQnpMbkJ5WlhZcElEd2dNQ0I4ZkNBa1pTaHpMQ0J6TG01bGVIUXNJR1VwSUR3Z01Ec0tmUXBtZFc1amRHbHZiaUJsZVNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlITXNJRzRnUFNBaE1Td2dhU0E5SUNoekxuZ2dLeUJsTG5ncElDOGdNaXdnY2lBOUlDaHpMbmtnS3lCbExua3BJQzhnTWpzS0lDQWdJR1J2SUhRdWVTQStJSElnSVQwZ2RDNXVaWGgwTG5rZ1BpQnlJQ1ltSUhRdWJtVjRkQzU1SUNFOVBTQjBMbmtnSmlZZ2FTQThJQ2gwTG01bGVIUXVlQ0F0SUhRdWVDa2dLaUFvY2lBdElIUXVlU2tnTHlBb2RDNXVaWGgwTG5rZ0xTQjBMbmtwSUNzZ2RDNTRJQ1ltSUNodUlEMGdJVzRwTENCMElEMGdkQzV1WlhoME93b2dJQ0FnZDJocGJHVWdLSFFnSVQwOUlITXBDaUFnSUNCeVpYUjFjbTRnYmpzS2ZRcG1kVzVqZEdsdmJpQlNhQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUc1bGR5QmhZU2h6TG1rc0lITXVlQ3dnY3k1NUtTd2diaUE5SUc1bGR5QmhZU2hsTG1rc0lHVXVlQ3dnWlM1NUtTd2dhU0E5SUhNdWJtVjRkQ3dnY2lBOUlHVXVjSEpsZGpzS0lDQWdJSEpsZEhWeWJpQnpMbTVsZUhRZ1BTQmxMQ0JsTG5CeVpYWWdQU0J6TENCMExtNWxlSFFnUFNCcExDQnBMbkJ5WlhZZ1BTQjBMQ0J1TG01bGVIUWdQU0IwTENCMExuQnlaWFlnUFNCdUxDQnlMbTVsZUhRZ1BTQnVMQ0J1TG5CeVpYWWdQU0J5TENCdU93cDlDbVoxYm1OMGFXOXVJRzFqS0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnYm1WM0lHRmhLSE1zSUdVc0lIUXBPd29nSUNBZ2NtVjBkWEp1SUc0Z1B5QW9hUzV1WlhoMElEMGdiaTV1WlhoMExDQnBMbkJ5WlhZZ1BTQnVMQ0J1TG01bGVIUXVjSEpsZGlBOUlHa3NJRzR1Ym1WNGRDQTlJR2twSURvZ0tHa3VjSEpsZGlBOUlHa3NJR2t1Ym1WNGRDQTlJR2twTENCcE93cDlDbVoxYm1OMGFXOXVJSFp5S0hNcElIc0tJQ0FnSUhNdWJtVjRkQzV3Y21WMklEMGdjeTV3Y21WMkxDQnpMbkJ5WlhZdWJtVjRkQ0E5SUhNdWJtVjRkQ3dnY3k1d2NtVjJXaUFtSmlBb2N5NXdjbVYyV2k1dVpYaDBXaUE5SUhNdWJtVjRkRm9wTENCekxtNWxlSFJhSUNZbUlDaHpMbTVsZUhSYUxuQnlaWFphSUQwZ2N5NXdjbVYyV2lrN0NuMEtablZ1WTNScGIyNGdZV0VvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdkR2hwY3k1cElEMGdjeXdnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ2RDd2dkR2hwY3k1d2NtVjJJRDBnYm5Wc2JDd2dkR2hwY3k1dVpYaDBJRDBnYm5Wc2JDd2dkR2hwY3k1NklEMGdiblZzYkN3Z2RHaHBjeTV3Y21WMldpQTlJRzUxYkd3c0lIUm9hWE11Ym1WNGRGb2dQU0J1ZFd4c0xDQjBhR2x6TG5OMFpXbHVaWElnUFNBaE1Uc0tmUXBtZFc1amRHbHZiaUIwZVNoekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SURBN0NpQWdJQ0JtYjNJb2JHVjBJSElnUFNCbExDQnZJRDBnZENBdElHNDdJSElnUENCME95QnlJQ3M5SUc0cGFTQXJQU0FvYzF0dlhTQXRJSE5iY2wwcElDb2dLSE5iY2lBcklERmRJQ3NnYzF0dklDc2dNVjBwTENCdklEMGdjanNLSUNBZ0lISmxkSFZ5YmlCcE93cDlDblpoY2lCS2RDQTlJR05zWVhOeklIc0tJQ0FnSUhOMFlYUnBZeUJoY21WaEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1YkdWdVozUm9MQ0J1SUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0IwSUMwZ01Td2djaUE5SURBN0lISWdQQ0IwT3lCcElEMGdjaXNyS1c0Z0t6MGdaVnRwWFM1NElDb2daVnR5WFM1NUlDMGdaVnR5WFM1NElDb2daVnRwWFM1NU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlDb2dMalU3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nYVhORGJHOWphMWRwYzJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQktkQzVoY21WaEtHVXBJRHdnTURzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCMGNtbGhibWQxYkdGMFpWTm9ZWEJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRnRkTENCcElEMGdXMTBzSUhJZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JuWXlobEtTd2dlR01vYml3Z1pTazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmxMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQjBMbVp2Y2tWaFkyZ29aMk1wT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlEQTdJR3dnUENCMExteGxibWQwYURzZ2JDc3JLV2t1Y0hWemFDaHZLU3dnYnlBclBTQjBXMnhkTG14bGJtZDBhQ3dnZUdNb2Jpd2dkRnRzWFNrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCUGVDNTBjbWxoYm1kMWJHRjBaU2h1TENCcEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHd3hJRDBnTURzZ2JERWdQQ0JoTG14bGJtZDBhRHNnYkRFZ0t6MGdNeWx5TG5CMWMyZ29ZUzV6YkdsalpTaHNNU3dnYkRFZ0t5QXpLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEk3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUdkaktITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2N5NXNaVzVuZEdnN0NpQWdJQ0JsSUQ0Z01pQW1KaUJ6VzJVZ0xTQXhYUzVsY1hWaGJITW9jMXN3WFNrZ0ppWWdjeTV3YjNBb0tUc0tmUXBtZFc1amRHbHZiaUI0WXloekxDQmxLU0I3Q2lBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2daUzVzWlc1bmRHZzdJSFFyS3lsekxuQjFjMmdvWlZ0MFhTNTRLU3dnY3k1d2RYTm9LR1ZiZEYwdWVTazdDbjBLZG1GeUlHeHVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmgwS0ZzS0lDQWdJQ0FnSUNCdVpYY2dXQ2d1TlN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDMHVOU3dnTGpVcExBb2dJQ0FnSUNBZ0lHNWxkeUJZS0MwdU5Td2dMUzQxS1N3S0lDQWdJQ0FnSUNCdVpYY2dXQ2d1TlN3Z0xTNDFLUW9nSUNBZ1hTa3NJSFFnUFNCN2ZTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUlhoMGNuVmtaVWRsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnphR0Z3WlhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUc5d2RHbHZibk02SUhRS0lDQWdJQ0FnSUNCOUxDQmxJRDBnUVhKeVlYa3VhWE5CY25KaGVTaGxLU0EvSUdVZ09pQmJDaUFnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeXdnYVNBOUlGdGRMQ0J5SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTUN3Z2JDQTlJR1V1YkdWdVozUm9PeUJoSUR3Z2JEc2dZU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQmxXMkZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZLR01wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2FTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9jaXdnTWlrcExDQjBhR2x6TG1OdmJYQjFkR1ZXWlhKMFpYaE9iM0p0WVd4ektDazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdieWhoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdXMTBzSUdNZ1BTQjBMbU4xY25abFUyVm5iV1Z1ZEhNZ0lUMDlJSFp2YVdRZ01DQS9JSFF1WTNWeWRtVlRaV2R0Wlc1MGN5QTZJREV5TENCb0lEMGdkQzV6ZEdWd2N5QWhQVDBnZG05cFpDQXdJRDhnZEM1emRHVndjeUE2SURFc0lIVWdQU0IwTG1SbGNIUm9JQ0U5UFNCMmIybGtJREFnUHlCMExtUmxjSFJvSURvZ01Td2daQ0E5SUhRdVltVjJaV3hGYm1GaWJHVmtJQ0U5UFNCMmIybGtJREFnUHlCMExtSmxkbVZzUlc1aFlteGxaQ0E2SUNFd0xDQm1JRDBnZEM1aVpYWmxiRlJvYVdOcmJtVnpjeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNWlaWFpsYkZSb2FXTnJibVZ6Y3lBNklDNHlMQ0J0SUQwZ2RDNWlaWFpsYkZOcGVtVWdJVDA5SUhadmFXUWdNQ0EvSUhRdVltVjJaV3hUYVhwbElEb2daaUF0SUM0eExDQjRJRDBnZEM1aVpYWmxiRTltWm5ObGRDQWhQVDBnZG05cFpDQXdJRDhnZEM1aVpYWmxiRTltWm5ObGRDQTZJREFzSUhZZ1BTQjBMbUpsZG1Wc1UyVm5iV1Z1ZEhNZ0lUMDlJSFp2YVdRZ01DQS9JSFF1WW1WMlpXeFRaV2R0Wlc1MGN5QTZJRE1zSUdjZ1BTQjBMbVY0ZEhKMVpHVlFZWFJvTENCd0lEMGdkQzVWVmtkbGJtVnlZWFJ2Y2lBaFBUMGdkbTlwWkNBd0lEOGdkQzVWVmtkbGJtVnlZWFJ2Y2lBNklHNTVPd29nSUNBZ0lDQWdJQ0FnSUNCMExtRnRiM1Z1ZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtWNGRISjFaR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2dZVzF2ZFc1MElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdaR1Z3ZEdndUlpa3NJSFVnUFNCMExtRnRiM1Z1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZkxDQjVJRDBnSVRFc0lHSXNJRUVzSUV3c0lFazdDaUFnSUNBZ0lDQWdJQ0FnSUdjZ0ppWWdLRjhnUFNCbkxtZGxkRk53WVdObFpGQnZhVzUwY3lob0tTd2dlU0E5SUNFd0xDQmtJRDBnSVRFc0lHSWdQU0JuTG1OdmJYQjFkR1ZHY21WdVpYUkdjbUZ0WlhNb2FDd2dJVEVwTENCQklEMGdibVYzSUUwc0lFd2dQU0J1WlhjZ1RTd2dTU0E5SUc1bGR5Qk5LU3dnWkNCOGZDQW9kaUE5SURBc0lHWWdQU0F3TENCdElEMGdNQ3dnZUNBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdheUE5SUdFdVpYaDBjbUZqZEZCdmFXNTBjeWhqS1N3Z1FpQTlJR3N1YzJoaGNHVXNJRkFnUFNCckxtaHZiR1Z6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVVwMExtbHpRMnh2WTJ0WGFYTmxLRUlwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQ0lEMGdRaTV5WlhabGNuTmxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWNnUFNBd0xDQnFJRDBnVUM1c1pXNW5kR2c3SUVjZ1BDQnFPeUJIS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTElEMGdVRnRIWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQktkQzVwYzBOc2IyTnJWMmx6WlNoTEtTQW1KaUFvVUZ0SFhTQTlJRXN1Y21WMlpYSnpaU2dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUVwMExuUnlhV0Z1WjNWc1lYUmxVMmhoY0dVb1Fpd2dVQ2tzSUVRZ1BTQkNPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjeElEMGdNQ3dnYWpFZ1BTQlFMbXhsYm1kMGFEc2dSekVnUENCcU1Uc2dSekVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTekVnUFNCUVcwY3hYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUlnUFNCQ0xtTnZibU5oZENoTE1TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdWU2hITENCcUxDQkxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhaUI4ZkNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUZlSFJ5ZFdSbFIyVnZiV1YwY25rNklIWmxZeUJrYjJWeklHNXZkQ0JsZUdsemRDSXBMQ0JxTG1Oc2IyNWxLQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9TeWt1WVdSa0tFY3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCR0lEMGdRaTVzWlc1bmRHZ3NJRThnUFNCRkxteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdibVVvUnl3Z2Fpd2dTeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVmxMQ0J6WlN3Z1UyVXNJRlJsSUQwZ1J5NTRJQzBnYWk1NExDQlFaU0E5SUVjdWVTQXRJR291ZVN3Z1dXVWdQU0JMTG5nZ0xTQkhMbmdzSUVNZ1BTQkxMbmtnTFNCSExua3NJRlFnUFNCVVpTQXFJRlJsSUNzZ1VHVWdLaUJRWlN3Z1NpQTlJRlJsSUNvZ1F5QXRJRkJsSUNvZ1dXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVFdGMGFDNWhZbk1vU2lrZ1BpQk9kVzFpWlhJdVJWQlRTVXhQVGlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENBa0lEMGdUV0YwYUM1emNYSjBLRlFwTENCeVpTQTlJRTFoZEdndWMzRnlkQ2haWlNBcUlGbGxJQ3NnUXlBcUlFTXBMQ0JhSUQwZ2FpNTRJQzBnVUdVZ0x5QWtMQ0JOWlNBOUlHb3VlU0FySUZSbElDOGdKQ3dnZG1VZ1BTQkxMbmdnTFNCRElDOGdjbVVzSUhSbElEMGdTeTU1SUNzZ1dXVWdMeUJ5WlN3Z1VpQTlJQ2dvZG1VZ0xTQmFLU0FxSUVNZ0xTQW9kR1VnTFNCTlpTa2dLaUJaWlNrZ0x5QW9WR1VnS2lCRElDMGdVR1VnS2lCWlpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFdVZ1BTQmFJQ3NnVkdVZ0tpQlNJQzBnUnk1NExDQnpaU0E5SUUxbElDc2dVR1VnS2lCU0lDMGdSeTU1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JsWlNBOUlIVmxJQ29nZFdVZ0t5QnpaU0FxSUhObE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobFpTQThQU0F5S1NCeVpYUjFjbTRnYm1WM0lGZ29kV1VzSUhObEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JUWlNBOUlFMWhkR2d1YzNGeWRDaGxaU0F2SURJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnSkRFZ1BTQWhNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVVpTQStJRTUxYldKbGNpNUZVRk5KVEU5T0lEOGdXV1VnUGlCT2RXMWlaWEl1UlZCVFNVeFBUaUFtSmlBb0pERWdQU0FoTUNrZ09pQlVaU0E4SUMxT2RXMWlaWEl1UlZCVFNVeFBUaUEvSUZsbElEd2dMVTUxYldKbGNpNUZVRk5KVEU5T0lDWW1JQ2drTVNBOUlDRXdLU0E2SUUxaGRHZ3VjMmxuYmloUVpTa2dQVDA5SUUxaGRHZ3VjMmxuYmloREtTQW1KaUFvSkRFZ1BTQWhNQ2tzSUNReElEOGdLSFZsSUQwZ0xWQmxMQ0J6WlNBOUlGUmxMQ0JUWlNBOUlFMWhkR2d1YzNGeWRDaFVLU2tnT2lBb2RXVWdQU0JVWlN3Z2MyVWdQU0JRWlN3Z1UyVWdQU0JOWVhSb0xuTnhjblFvVkNBdklESXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnV0NoMVpTQXZJRk5sTENCelpTQXZJRk5sS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZMlVnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JITWlBOUlEQXNJR295SUQwZ1JDNXNaVzVuZEdnc0lFc3lJRDBnYWpJZ0xTQXhMQ0IxWlNBOUlFY3lJQ3NnTVRzZ1J6SWdQQ0JxTWpzZ1J6SXJLeXdnU3pJckt5d2dkV1VyS3lsTE1pQTlQVDBnYWpJZ0ppWWdLRXN5SUQwZ01Da3NJSFZsSUQwOVBTQnFNaUFtSmlBb2RXVWdQU0F3S1N3Z1kyVmJSekpkSUQwZ2JtVW9SRnRITWwwc0lFUmJTekpkTENCRVczVmxYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JXSUQwZ1cxMHNJRmNzSUdobElEMGdZMlV1WTI5dVkyRjBLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1J6TWdQU0F3TENCcU15QTlJRkF1YkdWdVozUm9PeUJITXlBOElHb3pPeUJITXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JMTXlBOUlGQmJSek5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVnlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjFaVEVnUFNBd0xDQnpaU0E5SUVzekxteGxibWQwYUN3Z1UyVWdQU0J6WlNBdElERXNJRlJsSUQwZ2RXVXhJQ3NnTVRzZ2RXVXhJRHdnYzJVN0lIVmxNU3NyTENCVFpTc3JMQ0JVWlNzcktWTmxJRDA5UFNCelpTQW1KaUFvVTJVZ1BTQXdLU3dnVkdVZ1BUMDlJSE5sSUNZbUlDaFVaU0E5SURBcExDQlhXM1ZsTVYwZ1BTQnVaU2hMTTF0MVpURmRMQ0JMTTF0VFpWMHNJRXN6VzFSbFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQldMbkIxYzJnb1Z5a3NJR2hsSUQwZ2FHVXVZMjl1WTJGMEtGY3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSelFnUFNBd095QkhOQ0E4SUhZN0lFYzBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHbzBJRDBnUnpRZ0x5QjJMQ0JMTkNBOUlHWWdLaUJOWVhSb0xtTnZjeWhxTkNBcUlFMWhkR2d1VUVrZ0x5QXlLU3dnZFdVeUlEMGdiU0FxSUUxaGRHZ3VjMmx1S0dvMElDb2dUV0YwYUM1UVNTQXZJRElwSUNzZ2VEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2MyVXhJRDBnTUN3Z1UyVXhJRDBnUkM1c1pXNW5kR2c3SUhObE1TQThJRk5sTVRzZ2MyVXhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JVWlRFZ1BTQlZLRVJiYzJVeFhTd2dZMlZiYzJVeFhTd2dkV1V5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkRaU2hVWlRFdWVDd2dWR1V4TG5rc0lDMUxOQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSE5sTWlBOUlEQXNJRk5sTWlBOUlGQXViR1Z1WjNSb095QnpaVElnUENCVFpUSTdJSE5sTWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZHVXlJRDBnVUZ0elpUSmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZjZ1BTQldXM05sTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQlFaU0E5SURBc0lGbGxJRDBnVkdVeUxteGxibWQwYURzZ1VHVWdQQ0JaWlRzZ1VHVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCRElEMGdWU2hVWlRKYlVHVmRMQ0JYVzFCbFhTd2dkV1V5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUTJVb1F5NTRMQ0JETG5rc0lDMUxOQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlNBOUlHMGdLeUI0T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFYzFJRDBnTURzZ1J6VWdQQ0JHT3lCSE5Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcU5TQTlJR1FnUHlCVktFSmJSelZkTENCb1pWdEhOVjBzSUd4bEtTQTZJRUpiUnpWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VTQS9JQ2hNTG1OdmNIa29ZaTV1YjNKdFlXeHpXekJkS1M1dGRXeDBhWEJzZVZOallXeGhjaWhxTlM1NEtTd2dRUzVqYjNCNUtHSXVZbWx1YjNKdFlXeHpXekJkS1M1dGRXeDBhWEJzZVZOallXeGhjaWhxTlM1NUtTd2dTUzVqYjNCNUtGOWJNRjBwTG1Ga1pDaE1LUzVoWkdRb1FTa3NJRU5sS0VrdWVDd2dTUzU1TENCSkxub3BLU0E2SUVObEtHbzFMbmdzSUdvMUxua3NJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnpZZ1BTQXhPeUJITmlBOFBTQm9PeUJITmlzcktXWnZjaWhzWlhRZ2FqWWdQU0F3T3lCcU5pQThJRVk3SUdvMkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVzMUlEMGdaQ0EvSUZVb1FsdHFObDBzSUdobFcybzJYU3dnYkdVcElEb2dRbHRxTmwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUlEOGdLRXd1WTI5d2VTaGlMbTV2Y20xaGJITmJSelpkS1M1dGRXeDBhWEJzZVZOallXeGhjaWhMTlM1NEtTd2dRUzVqYjNCNUtHSXVZbWx1YjNKdFlXeHpXMGMyWFNrdWJYVnNkR2x3YkhsVFkyRnNZWElvU3pVdWVTa3NJRWt1WTI5d2VTaGZXMGMyWFNrdVlXUmtLRXdwTG1Ga1pDaEJLU3dnUTJVb1NTNTRMQ0JKTG5rc0lFa3VlaWtwSURvZ1EyVW9TelV1ZUN3Z1N6VXVlU3dnZFNBdklHZ2dLaUJITmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSE55QTlJSFlnTFNBeE95QkhOeUErUFNBd095QkhOeTB0S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnFOeUE5SUVjM0lDOGdkaXdnU3pZZ1BTQm1JQ29nVFdGMGFDNWpiM01vYWpjZ0tpQk5ZWFJvTGxCSklDOGdNaWtzSUhWbE15QTlJRzBnS2lCTllYUm9Mbk5wYmlocU55QXFJRTFoZEdndVVFa2dMeUF5S1NBcklIZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElITmxNeUE5SURBc0lGTmxNeUE5SUVRdWJHVnVaM1JvT3lCelpUTWdQQ0JUWlRNN0lITmxNeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVkdVeklEMGdWU2hFVzNObE0xMHNJR05sVzNObE0xMHNJSFZsTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRMlVvVkdVekxuZ3NJRlJsTXk1NUxDQjFJQ3NnU3pZcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCelpUUWdQU0F3TENCVFpUUWdQU0JRTG14bGJtZDBhRHNnYzJVMElEd2dVMlUwT3lCelpUUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRlJsTkNBOUlGQmJjMlUwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlhJRDBnVmx0elpUUmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVUdVeElEMGdNQ3dnV1dVeElEMGdWR1UwTG14bGJtZDBhRHNnVUdVeElEd2dXV1V4T3lCUVpURXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCRE1TQTlJRlVvVkdVMFcxQmxNVjBzSUZkYlVHVXhYU3dnZFdVektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VTQS9JRU5sS0VNeExuZ3NJRU14TG5rZ0t5QmZXMmdnTFNBeFhTNTVMQ0JmVzJnZ0xTQXhYUzU0SUNzZ1N6WXBJRG9nUTJVb1F6RXVlQ3dnUXpFdWVTd2dkU0FySUVzMktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm1Vb0tTd2dRbVVvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdabVVvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSeUE5SUdrdWJHVnVaM1JvSUM4Z016c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdvZ1BTQXdMQ0JMSUQwZ1JpQXFJR283Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMVpTQTlJREE3SUhWbElEd2dUenNnZFdVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J6WlNBOUlFVmJkV1ZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1WlNoelpWc3lYU0FySUVzc0lITmxXekZkSUNzZ1N5d2djMlZiTUYwZ0t5QkxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhaUE5SUdnZ0t5QjJJQ29nTWl3Z1N5QTlJRVlnS2lCcU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkV1V4SUQwZ01Ec2dkV1V4SUR3Z1R6c2dkV1V4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjMlV4SUQwZ1JWdDFaVEZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I1WlNoelpURmJNRjBnS3lCTExDQnpaVEZiTVYwZ0t5QkxMQ0J6WlRGYk1sMGdLeUJMS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhakVnUFNBd095QnFNU0E4SUU4N0lHb3hLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1N6RWdQU0JGVzJveFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VXVW9TekZiTWwwc0lFc3hXekZkTENCTE1Wc3dYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhaklnUFNBd095QnFNaUE4SUU4N0lHb3lLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1N6SWdQU0JGVzJveVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VXVW9TekpiTUYwZ0t5QkdJQ29nYUN3Z1N6SmJNVjBnS3lCR0lDb2dhQ3dnU3pKYk1sMGdLeUJHSUNvZ2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmk1aFpHUkhjbTkxY0NoSExDQnBMbXhsYm1kMGFDQXZJRE1nTFNCSExDQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJDWlNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JISUQwZ2FTNXNaVzVuZEdnZ0x5QXpMQ0JxSUQwZ01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGa29SQ3dnYWlrc0lHb2dLejBnUkM1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRXNnUFNBd0xDQjFaU0E5SUZBdWJHVnVaM1JvT3lCTElEd2dkV1U3SUVzckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElITmxJRDBnVUZ0TFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JaS0hObExDQnFLU3dnYWlBclBTQnpaUzVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVMbUZrWkVkeWIzVndLRWNzSUdrdWJHVnVaM1JvSUM4Z015QXRJRWNzSURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlGa29SeXdnYWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRXNnUFNCSExteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpZzdJQzB0U3lBK1BTQXdPeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFZsSUQwZ1N5d2djMlVnUFNCTElDMGdNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpTQThJREFnSmlZZ0tITmxJRDBnUnk1c1pXNW5kR2dnTFNBeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRk5sSUQwZ01Dd2dWR1VnUFNCb0lDc2dkaUFxSURJN0lGTmxJRHdnVkdVN0lGTmxLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VHVWdQU0JHSUNvZ1UyVXNJRmxsSUQwZ1JpQXFJQ2hUWlNBcklERXBMQ0JESUQwZ2FpQXJJSFZsSUNzZ1VHVXNJRlFnUFNCcUlDc2djMlVnS3lCUVpTd2dTaUE5SUdvZ0t5QnpaU0FySUZsbExDQWtJRDBnYWlBcklIVmxJQ3NnV1dVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbEtFTXNJRlFzSUVvc0lDUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCRFpTaEhMQ0JxTENCTEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNMbkIxYzJnb1J5a3NJR3d1Y0hWemFDaHFLU3dnYkM1d2RYTm9LRXNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhsbEtFY3NJR29zSUVzcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIaGxLRWNwTENCNFpTaHFLU3dnZUdVb1N5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFdVZ1BTQnBMbXhsYm1kMGFDQXZJRE1zSUhObElEMGdjQzVuWlc1bGNtRjBaVlJ2Y0ZWV0tHNHNJR2tzSUhWbElDMGdNeXdnZFdVZ0xTQXlMQ0IxWlNBdElERXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUMlVvYzJWYk1GMHBMQ0JQWlNoelpWc3hYU2tzSUU5bEtITmxXekpkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCblpTaEhMQ0JxTENCTExDQjFaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUdVb1J5a3NJSGhsS0dvcExDQjRaU2gxWlNrc0lIaGxLR29wTENCNFpTaExLU3dnZUdVb2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhObElEMGdhUzVzWlc1bmRHZ2dMeUF6TENCVFpTQTlJSEF1WjJWdVpYSmhkR1ZUYVdSbFYyRnNiRlZXS0c0c0lHa3NJSE5sSUMwZ05pd2djMlVnTFNBekxDQnpaU0F0SURJc0lITmxJQzBnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCUFpTaFRaVnN3WFNrc0lFOWxLRk5sV3pGZEtTd2dUMlVvVTJWYk0xMHBMQ0JQWlNoVFpWc3hYU2tzSUU5bEtGTmxXekpkS1N3Z1QyVW9VMlZiTTEwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIaGxLRWNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWNIVnphQ2hzVzBjZ0tpQXpJQ3NnTUYwcExDQnBMbkIxYzJnb2JGdEhJQ29nTXlBcklERmRLU3dnYVM1d2RYTm9LR3hiUnlBcUlETWdLeUF5WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1QyVW9SeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2k1d2RYTm9LRWN1ZUNrc0lISXVjSFZ6YUNoSExua3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0Nrc0lIUWdQU0IwYUdsekxuQmhjbUZ0WlhSbGNuTXVjMmhoY0dWekxDQnVJRDBnZEdocGN5NXdZWEpoYldWMFpYSnpMbTl3ZEdsdmJuTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHbDVLSFFzSUc0c0lHVXBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0JsTG5Ob1lYQmxjeTVzWlc1bmRHZzdJSElnUENCdk95QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUmJaUzV6YUdGd1pYTmJjbDFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVMbkIxYzJnb1lTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCcElEMGdaUzV2Y0hScGIyNXpMbVY0ZEhKMVpHVlFZWFJvT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1YjNCMGFXOXVjeTVsZUhSeWRXUmxVR0YwYUNBOUlHNWxkeUJVWVZ0cExuUjVjR1ZkS0NrdVpuSnZiVXBUVDA0b2FTa3BMQ0J1WlhjZ2JHNG9iaXdnWlM1dmNIUnBiMjV6S1RzS0lDQWdJSDBLZlN3Z2Jua2dQU0I3Q2lBZ0lDQm5aVzVsY21GMFpWUnZjRlZXT2lCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JsVzNRZ0tpQXpYU3dnYnlBOUlHVmJkQ0FxSURNZ0t5QXhYU3dnWVNBOUlHVmJiaUFxSUROZExDQnNJRDBnWlZ0dUlDb2dNeUFySURGZExDQmpJRDBnWlZ0cElDb2dNMTBzSUdnZ1BTQmxXMmtnS2lBeklDc2dNVjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRmdvY2l3Z2J5a3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLR0VzSUd3cExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaGpMQ0JvS1FvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5TEFvZ0lDQWdaMlZ1WlhKaGRHVlRhV1JsVjJGc2JGVldPaUJtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsVzNRZ0tpQXpYU3dnWVNBOUlHVmJkQ0FxSURNZ0t5QXhYU3dnYkNBOUlHVmJkQ0FxSURNZ0t5QXlYU3dnWXlBOUlHVmJiaUFxSUROZExDQm9JRDBnWlZ0dUlDb2dNeUFySURGZExDQjFJRDBnWlZ0dUlDb2dNeUFySURKZExDQmtJRDBnWlZ0cElDb2dNMTBzSUdZZ1BTQmxXMmtnS2lBeklDc2dNVjBzSUcwZ1BTQmxXMmtnS2lBeklDc2dNbDBzSUhnZ1BTQmxXM0lnS2lBelhTd2dkaUE5SUdWYmNpQXFJRE1nS3lBeFhTd2daeUE5SUdWYmNpQXFJRE1nS3lBeVhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb1lTQXRJR2dwSUR3Z1RXRjBhQzVoWW5Nb2J5QXRJR01wSUQ4Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaHZMQ0F4SUMwZ2JDa3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QllLR01zSURFZ0xTQjFLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRmdvWkN3Z01TQXRJRzBwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0NoNExDQXhJQzBnWnlrS0lDQWdJQ0FnSUNCZElEb2dXd29nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXQ2hoTENBeElDMGdiQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0dnc0lERWdMU0IxS1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZnb1ppd2dNU0F0SUcwcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaDJMQ0F4SUMwZ1p5a0tJQ0FnSUNBZ0lDQmRPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJwZVNoekxDQmxMQ0IwS1NCN0NpQWdJQ0JwWmlBb2RDNXphR0Z3WlhNZ1BTQmJYU3dnUVhKeVlYa3VhWE5CY25KaGVTaHpLU2tnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhNdWJHVnVaM1JvT3lCdUlEd2dhVHNnYmlzcktYc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlITmJibDA3Q2lBZ0lDQWdJQ0FnZEM1emFHRndaWE11Y0hWemFDaHlMblYxYVdRcE93b2dJQ0FnZlFvZ0lDQWdaV3h6WlNCMExuTm9ZWEJsY3k1d2RYTm9LSE11ZFhWcFpDazdDaUFnSUNCeVpYUjFjbTRnWlM1bGVIUnlkV1JsVUdGMGFDQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOXdkR2x2Ym5NdVpYaDBjblZrWlZCaGRHZ2dQU0JsTG1WNGRISjFaR1ZRWVhSb0xuUnZTbE5QVGlncEtTd2dkRHNLZlFwMllYSWdYM0lnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0Z1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01DbDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQW9NU0FySUUxaGRHZ3VjM0Z5ZENnMUtTa2dMeUF5TENCcElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xXNHNDaUFnSUNBZ0lDQWdJQ0FnSUc0c0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdGJpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFN3Z2NpQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJREV3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0E1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTRMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQTVMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0E1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ05pd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEa3NDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLR2tzSUhJc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkpZMjl6WVdobFpISnZia2RsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGRHRnBiRG9nZEFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnWDNJb1pTNXlZV1JwZFhNc0lHVXVaR1YwWVdsc0tUc0tJQ0FnSUgwS2ZTd2dUWElnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJDaUFnSUNBZ0lDQWdibVYzSUZnb01Dd2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLQzQxTENBd0tTd0tJQ0FnSUNBZ0lDQnVaWGNnV0Nnd0xDQXRMalVwQ2lBZ0lDQmRMQ0IwSUQwZ01USXNJRzRnUFNBd0xDQnBJRDBnVFdGMGFDNVFTU0FxSURJcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa3hoZEdobFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlZuYldWdWRITTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQm9hVk4wWVhKME9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCd2FHbE1aVzVuZEdnNklHa0tJQ0FnSUNBZ0lDQjlMQ0IwSUQwZ1RXRjBhQzVtYkc5dmNpaDBLU3dnYVNBOUlHMTBLR2tzSURBc0lFMWhkR2d1VUVrZ0tpQXlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRnRkTENCdklEMGdXMTBzSUdFZ1BTQmJYU3dnYkNBOUlGdGRMQ0JqSUQwZ1cxMHNJR2dnUFNBeElDOGdkQ3dnZFNBOUlHNWxkeUJOTENCa0lEMGdibVYzSUZnc0lHWWdQU0J1WlhjZ1RTd2diU0E5SUc1bGR5Qk5MQ0I0SUQwZ2JtVjNJRTBzSUhZZ1BTQXdMQ0JuSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQWdQU0F3T3lCd0lEdzlJR1V1YkdWdVozUm9JQzBnTVRzZ2NDc3JLWE4zYVhSamFDaHdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F3T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGlBOUlHVmJjQ0FySURGZExuZ2dMU0JsVzNCZExuZ3NJR2NnUFNCbFczQWdLeUF4WFM1NUlDMGdaVnR3WFM1NUxDQm1MbmdnUFNCbklDb2dNU3dnWmk1NUlEMGdMWFlzSUdZdWVpQTlJR2NnS2lBd0xDQjRMbU52Y0hrb1ppa3NJR1l1Ym05eWJXRnNhWHBsS0Nrc0lHd3VjSFZ6YUNobUxuZ3NJR1l1ZVN3Z1ppNTZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHVXViR1Z1WjNSb0lDMGdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3d1Y0hWemFDaDRMbmdzSUhndWVTd2dlQzU2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZGlBOUlHVmJjQ0FySURGZExuZ2dMU0JsVzNCZExuZ3NJR2NnUFNCbFczQWdLeUF4WFM1NUlDMGdaVnR3WFM1NUxDQm1MbmdnUFNCbklDb2dNU3dnWmk1NUlEMGdMWFlzSUdZdWVpQTlJR2NnS2lBd0xDQnRMbU52Y0hrb1ppa3NJR1l1ZUNBclBTQjRMbmdzSUdZdWVTQXJQU0I0TG5rc0lHWXVlaUFyUFNCNExub3NJR1l1Ym05eWJXRnNhWHBsS0Nrc0lHd3VjSFZ6YUNobUxuZ3NJR1l1ZVN3Z1ppNTZLU3dnZUM1amIzQjVLRzBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhBeElEMGdNRHNnY0RFZ1BEMGdkRHNnY0RFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnYmlBcklIQXhJQ29nYUNBcUlHa3NJSGtnUFNCTllYUm9Mbk5wYmloZktTd2dZaUE5SUUxaGRHZ3VZMjl6S0Y4cE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUVnUFNBd095QkJJRHc5SUdVdWJHVnVaM1JvSUMwZ01Uc2dRU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdWVDQTlJR1ZiUVYwdWVDQXFJSGtzSUhVdWVTQTlJR1ZiUVYwdWVTd2dkUzU2SUQwZ1pWdEJYUzU0SUNvZ1lpd2dieTV3ZFhOb0tIVXVlQ3dnZFM1NUxDQjFMbm9wTENCa0xuZ2dQU0J3TVNBdklIUXNJR1F1ZVNBOUlFRWdMeUFvWlM1c1pXNW5kR2dnTFNBeEtTd2dZUzV3ZFhOb0tHUXVlQ3dnWkM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ2JGc3pJQ29nUVNBcklEQmRJQ29nZVN3Z1NTQTlJR3hiTXlBcUlFRWdLeUF4WFN3Z2F5QTlJR3hiTXlBcUlFRWdLeUF3WFNBcUlHSTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpMbkIxYzJnb1RDd2dTU3dnYXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3TWlBOUlEQTdJSEF5SUR3Z2REc2djRElyS3lsbWIzSW9iR1YwSUY4eElEMGdNRHNnWHpFZ1BDQmxMbXhsYm1kMGFDQXRJREU3SUY4eEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlVEVnUFNCZk1TQXJJSEF5SUNvZ1pTNXNaVzVuZEdnc0lHSXhJRDBnZVRFc0lFRXhJRDBnZVRFZ0t5QmxMbXhsYm1kMGFDd2dUREVnUFNCNU1TQXJJR1V1YkdWdVozUm9JQ3NnTVN3Z1NURWdQU0I1TVNBcklERTdDaUFnSUNBZ0lDQWdJQ0FnSUhJdWNIVnphQ2hpTVN3Z1FURXNJRWt4S1N3Z2NpNXdkWE5vS0VFeExDQk1NU3dnU1RFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFbHVaR1Y0S0hJcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9ieXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvWVN3Z01pa3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLR01zSURNcEtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCTmNpaGxMbkJ2YVc1MGN5d2daUzV6WldkdFpXNTBjeXdnWlM1d2FHbFRkR0Z5ZEN3Z1pTNXdhR2xNWlc1bmRHZ3BPd29nSUNBZ2ZRcDlMQ0JKYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWVc0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXdLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVFvZ0lDQWdJQ0FnSUYwc0lHa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJRE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJRFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJRElLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUhOMWNHVnlLRzRzSUdrc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlBZM1JoYUdWa2NtOXVSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWMFlXbHNPaUIwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJKYVNobExuSmhaR2wxY3l3Z1pTNWtaWFJoYVd3cE93b2dJQ0FnZlFwOUxDQmljaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlDNDFMQ0IwSUQwZ01Td2diaUE5SURnc0lHa2dQU0F4TENCeUlEMGdNQ3dnYnlBOUlFMWhkR2d1VUVrZ0tpQXlLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKU2FXNW5SMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbHVibVZ5VW1Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZkWFJsY2xKaFpHbDFjem9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkR2hsZEdGVFpXZHRaVzUwY3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnY0docFUyVm5iV1Z1ZEhNNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhVM1JoY25RNklISXNDaUFnSUNBZ0lDQWdJQ0FnSUhSb1pYUmhUR1Z1WjNSb09pQnZDaUFnSUNBZ0lDQWdmU3dnYmlBOUlFMWhkR2d1YldGNEtETXNJRzRwTENCcElEMGdUV0YwYUM1dFlYZ29NU3dnYVNrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCYlhTd2diQ0E5SUZ0ZExDQmpJRDBnVzEwc0lHZ2dQU0JiWFN3Z2RTQTlJR1VzSUdRZ1BTQW9kQ0F0SUdVcElDOGdhU3dnWmlBOUlHNWxkeUJOTENCdElEMGdibVYzSUZnN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNElEMGdNRHNnZUNBOFBTQnBPeUI0S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFlnUFNBd095QjJJRHc5SUc0N0lIWXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJSElnS3lCMklDOGdiaUFxSUc4N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbUxuZ2dQU0IxSUNvZ1RXRjBhQzVqYjNNb1p5a3NJR1l1ZVNBOUlIVWdLaUJOWVhSb0xuTnBiaWhuS1N3Z2JDNXdkWE5vS0dZdWVDd2daaTU1TENCbUxub3BMQ0JqTG5CMWMyZ29NQ3dnTUN3Z01Ta3NJRzB1ZUNBOUlDaG1MbmdnTHlCMElDc2dNU2tnTHlBeUxDQnRMbmtnUFNBb1ppNTVJQzhnZENBcklERXBJQzhnTWl3Z2FDNXdkWE5vS0cwdWVDd2diUzU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMUlDczlJR1E3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZURFZ1BTQXdPeUI0TVNBOElHazdJSGd4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RqRWdQU0I0TVNBcUlDaHVJQ3NnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaekVnUFNBd095Qm5NU0E4SUc0N0lHY3hLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0JuTVNBcklIWXhMQ0JmSUQwZ2NDd2dlU0E5SUhBZ0t5QnVJQ3NnTVN3Z1lpQTlJSEFnS3lCdUlDc2dNaXdnUVNBOUlIQWdLeUF4T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVM1d2RYTm9LRjhzSUhrc0lFRXBMQ0JoTG5CMWMyZ29lU3dnWWl3Z1FTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2hoS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHd3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoakxDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaG9MQ0F5S1NrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnWW5Jb1pTNXBibTVsY2xKaFpHbDFjeXdnWlM1dmRYUmxjbEpoWkdsMWN5d2daUzUwYUdWMFlWTmxaMjFsYm5SekxDQmxMbkJvYVZObFoyMWxiblJ6TENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQkVhU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJZZENoYkNpQWdJQ0FnSUNBZ2JtVjNJRmdvTUN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDMHVOU3dnTFM0MUtTd0tJQ0FnSUNBZ0lDQnVaWGNnV0NndU5Td2dMUzQxS1FvZ0lDQWdYU2tzSUhRZ1BTQXhNaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUyaGhjR1ZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjMmhoY0dWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCamRYSjJaVk5sWjIxbGJuUnpPaUIwQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZ0ZExDQnBJRDBnVzEwc0lISWdQU0JiWFN3Z2J5QTlJRnRkTENCaElEMGdNQ3dnYkNBOUlEQTdDaUFnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29aU2tnUFQwOUlDRXhLU0JqS0dVcE93b2dJQ0FnSUNBZ0lHVnNjMlVnWm05eUtHeGxkQ0JvSUQwZ01Ec2dhQ0E4SUdVdWJHVnVaM1JvT3lCb0t5c3BZeWhsVzJoZEtTd2dkR2hwY3k1aFpHUkhjbTkxY0NoaExDQnNMQ0JvS1N3Z1lTQXJQU0JzTENCc0lEMGdNRHNLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtHNHBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYVN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLSElzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0c4c0lESXBLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJqS0dncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JwTG14bGJtZDBhQ0F2SURNc0lHUWdQU0JvTG1WNGRISmhZM1JRYjJsdWRITW9kQ2tzSUdZZ1BTQmtMbk5vWVhCbExDQnRJRDBnWkM1b2IyeGxjenNLSUNBZ0lDQWdJQ0FnSUNBZ1NuUXVhWE5EYkc5amExZHBjMlVvWmlrZ1BUMDlJQ0V4SUNZbUlDaG1JRDBnWmk1eVpYWmxjbk5sS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFlnUFNBd0xDQm5JRDBnYlM1c1pXNW5kR2c3SUhZZ1BDQm5PeUIyS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCdFczWmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdTblF1YVhORGJHOWphMWRwYzJVb2NDa2dQVDA5SUNFd0lDWW1JQ2h0VzNaZElEMGdjQzV5WlhabGNuTmxLQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnU25RdWRISnBZVzVuZFd4aGRHVlRhR0Z3WlNobUxDQnRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMk1TQTlJREFzSUdjeElEMGdiUzVzWlc1bmRHZzdJSFl4SUR3Z1p6RTdJSFl4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEF4SUQwZ2JWdDJNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtSUQwZ1ppNWpiMjVqWVhRb2NERXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkaklnUFNBd0xDQm5NaUE5SUdZdWJHVnVaM1JvT3lCMk1pQThJR2N5T3lCMk1pc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd01pQTlJR1piZGpKZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNXdkWE5vS0hBeUxuZ3NJSEF5TG5rc0lEQXBMQ0J5TG5CMWMyZ29NQ3dnTUN3Z01Ta3NJRzh1Y0hWemFDaHdNaTU0TENCd01pNTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFl6SUQwZ01Dd2daek1nUFNCNExteGxibWQwYURzZ2RqTWdQQ0JuTXpzZ2RqTXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NETWdQU0I0VzNZelhTd2dYeUE5SUhBeld6QmRJQ3NnZFN3Z2VTQTlJSEF6V3pGZElDc2dkU3dnWWlBOUlIQXpXekpkSUNzZ2RUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNHVjSFZ6YUNoZkxDQjVMQ0JpS1N3Z2JDQXJQU0F6T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDa3NJSFFnUFNCMGFHbHpMbkJoY21GdFpYUmxjbk11YzJoaGNHVnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnllU2gwTENCbEtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdaUzV6YUdGd1pYTXViR1Z1WjNSb095QnBJRHdnY2pzZ2FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMFcyVXVjMmhoY0dWelcybGRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JpNXdkWE5vS0c4cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRVJwS0c0c0lHVXVZM1Z5ZG1WVFpXZHRaVzUwY3lrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlISjVLSE1zSUdVcElIc0tJQ0FnSUdsbUlDaGxMbk5vWVhCbGN5QTlJRnRkTENCQmNuSmhlUzVwYzBGeWNtRjVLSE1wS1NCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2N5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJR3hsZENCcElEMGdjMXQwWFRzS0lDQWdJQ0FnSUNCbExuTm9ZWEJsY3k1d2RYTm9LR2t1ZFhWcFpDazdDaUFnSUNCOUNpQWdJQ0JsYkhObElHVXVjMmhoY0dWekxuQjFjMmdvY3k1MWRXbGtLVHNLSUNBZ0lISmxkSFZ5YmlCbE93cDlDblpoY2lCR2FTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1gyVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F6TWl3Z2JpQTlJREUyTENCcElEMGdNQ3dnY2lBOUlFMWhkR2d1VUVrZ0tpQXlMQ0J2SUQwZ01Dd2dZU0E5SUUxaGRHZ3VVRWtwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsTndhR1Z5WlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvVTJWbmJXVnVkSE02SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJR2hsYVdkb2RGTmxaMjFsYm5Sek9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCd2FHbFRkR0Z5ZERvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0docFRHVnVaM1JvT2lCeUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdWMFlWTjBZWEowT2lCdkxBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdWMFlVeGxibWQwYURvZ1lRb2dJQ0FnSUNBZ0lIMHNJSFFnUFNCTllYUm9MbTFoZUNnekxDQk5ZWFJvTG1ac2IyOXlLSFFwS1N3Z2JpQTlJRTFoZEdndWJXRjRLRElzSUUxaGRHZ3VabXh2YjNJb2Jpa3BPd29nSUNBZ0lDQWdJR3hsZENCc0lEMGdUV0YwYUM1dGFXNG9ieUFySUdFc0lFMWhkR2d1VUVrcExDQmpJRDBnTUN3Z2FDQTlJRnRkTENCMUlEMGdibVYzSUUwc0lHUWdQU0J1WlhjZ1RTd2daaUE5SUZ0ZExDQnRJRDBnVzEwc0lIZ2dQU0JiWFN3Z2RpQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnlBOUlEQTdJR2NnUEQwZ2Jqc2daeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQmJYU3dnWHlBOUlHY2dMeUJ1TENCNUlEMGdNRHNLSUNBZ0lDQWdJQ0FnSUNBZ1p5QTlQU0F3SUNZbUlHOGdQVDBnTUNBL0lIa2dQU0F1TlNBdklIUWdPaUJuSUQwOUlHNGdKaVlnYkNBOVBTQk5ZWFJvTGxCSklDWW1JQ2g1SUQwZ0xTNDFJQzhnZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZaUE5SURBN0lHSWdQRDBnZERzZ1lpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQklEMGdZaUF2SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUxuZ2dQU0F0WlNBcUlFMWhkR2d1WTI5ektHa2dLeUJCSUNvZ2Npa2dLaUJOWVhSb0xuTnBiaWh2SUNzZ1h5QXFJR0VwTENCMUxua2dQU0JsSUNvZ1RXRjBhQzVqYjNNb2J5QXJJRjhnS2lCaEtTd2dkUzU2SUQwZ1pTQXFJRTFoZEdndWMybHVLR2tnS3lCQklDb2djaWtnS2lCTllYUm9Mbk5wYmlodklDc2dYeUFxSUdFcExDQnRMbkIxYzJnb2RTNTRMQ0IxTG5rc0lIVXVlaWtzSUdRdVkyOXdlU2gxS1M1dWIzSnRZV3hwZW1Vb0tTd2dlQzV3ZFhOb0tHUXVlQ3dnWkM1NUxDQmtMbm9wTENCMkxuQjFjMmdvUVNBcklIa3NJREVnTFNCZktTd2djQzV3ZFhOb0tHTXJLeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYUM1d2RYTm9LSEFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdjeElEMGdNRHNnWnpFZ1BDQnVPeUJuTVNzcktXWnZjaWhzWlhRZ2NERWdQU0F3T3lCd01TQThJSFE3SUhBeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYekVnUFNCb1cyY3hYVnR3TVNBcklERmRMQ0I1TVNBOUlHaGJaekZkVzNBeFhTd2dZakVnUFNCb1cyY3hJQ3NnTVYxYmNERmRMQ0JCTVNBOUlHaGJaekVnS3lBeFhWdHdNU0FySURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FvWnpFZ0lUMDlJREFnZkh3Z2J5QStJREFwSUNZbUlHWXVjSFZ6YUNoZk1Td2dlVEVzSUVFeEtTd2dLR2N4SUNFOVBTQnVJQzBnTVNCOGZDQnNJRHdnVFdGMGFDNVFTU2tnSmlZZ1ppNXdkWE5vS0hreExDQmlNU3dnUVRFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFbHVaR1Y0S0dZcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9iU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtIZ3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLSFlzSURJcEtUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCR2FTaGxMbkpoWkdsMWN5d2daUzUzYVdSMGFGTmxaMjFsYm5SekxDQmxMbWhsYVdkb2RGTmxaMjFsYm5SekxDQmxMbkJvYVZOMFlYSjBMQ0JsTG5Cb2FVeGxibWQwYUN3Z1pTNTBhR1YwWVZOMFlYSjBMQ0JsTG5Sb1pYUmhUR1Z1WjNSb0tUc0tJQ0FnSUgwS2ZTd2dkM0lnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0Z1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01DbDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFS0lDQWdJQ0FnSUNCZExDQnBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFRzS0lDQWdJQ0FnSUNCemRYQmxjaWh1TENCcExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlWR1YwY21Gb1pXUnliMjVIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYUmhhV3c2SUhRS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhkeUtHVXVjbUZrYVhWekxDQmxMbVJsZEdGcGJDazdDaUFnSUNCOUNuMHNJRk55SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU3dnZENBOUlDNDBMQ0J1SUQwZ09Dd2dhU0E5SURZc0lISWdQU0JOWVhSb0xsQkpJQ29nTWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlWRzl5ZFhOSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBkV0psT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScFlXeFRaV2R0Wlc1MGN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RIVmlkV3hoY2xObFoyMWxiblJ6T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0JoY21NNklISUtJQ0FnSUNBZ0lDQjlMQ0J1SUQwZ1RXRjBhQzVtYkc5dmNpaHVLU3dnYVNBOUlFMWhkR2d1Wm14dmIzSW9hU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JiWFN3Z1lTQTlJRnRkTENCc0lEMGdXMTBzSUdNZ1BTQmJYU3dnYUNBOUlHNWxkeUJOTENCMUlEMGdibVYzSUUwc0lHUWdQU0J1WlhjZ1RUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F3T3lCbUlEdzlJRzQ3SUdZckt5bG1iM0lvYkdWMElHMGdQU0F3T3lCdElEdzlJR2s3SUcwckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRJRDBnYlNBdklHa2dLaUJ5TENCMklEMGdaaUF2SUc0Z0tpQk5ZWFJvTGxCSklDb2dNanNLSUNBZ0lDQWdJQ0FnSUNBZ2RTNTRJRDBnS0dVZ0t5QjBJQ29nVFdGMGFDNWpiM01vZGlrcElDb2dUV0YwYUM1amIzTW9lQ2tzSUhVdWVTQTlJQ2hsSUNzZ2RDQXFJRTFoZEdndVkyOXpLSFlwS1NBcUlFMWhkR2d1YzJsdUtIZ3BMQ0IxTG5vZ1BTQjBJQ29nVFdGMGFDNXphVzRvZGlrc0lHRXVjSFZ6YUNoMUxuZ3NJSFV1ZVN3Z2RTNTZLU3dnYUM1NElEMGdaU0FxSUUxaGRHZ3VZMjl6S0hncExDQm9MbmtnUFNCbElDb2dUV0YwYUM1emFXNG9lQ2tzSUdRdWMzVmlWbVZqZEc5eWN5aDFMQ0JvS1M1dWIzSnRZV3hwZW1Vb0tTd2diQzV3ZFhOb0tHUXVlQ3dnWkM1NUxDQmtMbm9wTENCakxuQjFjMmdvYlNBdklHa3BMQ0JqTG5CMWMyZ29aaUF2SUc0cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWXhJRDBnTVRzZ1pqRWdQRDBnYmpzZ1pqRXJLeWxtYjNJb2JHVjBJRzB4SUQwZ01Uc2diVEVnUEQwZ2FUc2diVEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNE1TQTlJQ2hwSUNzZ01Ta2dLaUJtTVNBcklHMHhJQzBnTVN3Z2RqRWdQU0FvYVNBcklERXBJQ29nS0dZeElDMGdNU2tnS3lCdE1TQXRJREVzSUdjZ1BTQW9hU0FySURFcElDb2dLR1l4SUMwZ01Ta2dLeUJ0TVN3Z2NDQTlJQ2hwSUNzZ01Ta2dLaUJtTVNBcklHMHhPd29nSUNBZ0lDQWdJQ0FnSUNCdkxuQjFjMmdvZURFc0lIWXhMQ0J3S1N3Z2J5NXdkWE5vS0hZeExDQm5MQ0J3S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2h2S1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHRXNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoc0xDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaGpMQ0F5S1NrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVTNJb1pTNXlZV1JwZFhNc0lHVXVkSFZpWlN3Z1pTNXlZV1JwWVd4VFpXZHRaVzUwY3l3Z1pTNTBkV0oxYkdGeVUyVm5iV1Z1ZEhNc0lHVXVZWEpqS1RzS0lDQWdJSDBLZlN3Z1ZISWdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTGpRc0lHNGdQU0EyTkN3Z2FTQTlJRGdzSUhJZ1BTQXlMQ0J2SUQwZ015bDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVkc5eWRYTkxibTkwUjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RIVmlaVG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkSFZpZFd4aGNsTmxaMjFsYm5Sek9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBZV3hUWldkdFpXNTBjem9nYVN3S0lDQWdJQ0FnSUNBZ0lDQWdjRG9nY2l3S0lDQWdJQ0FnSUNBZ0lDQWdjVG9nYndvZ0lDQWdJQ0FnSUgwc0lHNGdQU0JOWVhSb0xtWnNiMjl5S0c0cExDQnBJRDBnVFdGMGFDNW1iRzl2Y2locEtUc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlGdGRMQ0JzSUQwZ1cxMHNJR01nUFNCYlhTd2dhQ0E5SUZ0ZExDQjFJRDBnYm1WM0lFMHNJR1FnUFNCdVpYY2dUU3dnWmlBOUlHNWxkeUJOTENCdElEMGdibVYzSUUwc0lIZ2dQU0J1WlhjZ1RTd2dkaUE5SUc1bGR5Qk5MQ0JuSUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUQwZ01Ec2dYeUE4UFNCdU95QXJLMThwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlGOGdMeUJ1SUNvZ2NpQXFJRTFoZEdndVVFa2dLaUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQndLSGtzSUhJc0lHOHNJR1VzSUdZcExDQndLSGtnS3lBdU1ERXNJSElzSUc4c0lHVXNJRzBwTENCMkxuTjFZbFpsWTNSdmNuTW9iU3dnWmlrc0lHY3VZV1JrVm1WamRHOXljeWh0TENCbUtTd2dlQzVqY205emMxWmxZM1J2Y25Nb2Rpd2daeWtzSUdjdVkzSnZjM05XWldOMGIzSnpLSGdzSUhZcExDQjRMbTV2Y20xaGJHbDZaU2dwTENCbkxtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdJZ1BTQXdPeUJpSUR3OUlHazdJQ3NyWWlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRU0E5SUdJZ0x5QnBJQ29nVFdGMGFDNVFTU0FxSURJc0lFd2dQU0F0ZENBcUlFMWhkR2d1WTI5ektFRXBMQ0JKSUQwZ2RDQXFJRTFoZEdndWMybHVLRUVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFM1NElEMGdaaTU0SUNzZ0tFd2dLaUJuTG5nZ0t5QkpJQ29nZUM1NEtTd2dkUzU1SUQwZ1ppNTVJQ3NnS0V3Z0tpQm5MbmtnS3lCSklDb2dlQzU1S1N3Z2RTNTZJRDBnWmk1NklDc2dLRXdnS2lCbkxub2dLeUJKSUNvZ2VDNTZLU3dnYkM1d2RYTm9LSFV1ZUN3Z2RTNTVMQ0IxTG5vcExDQmtMbk4xWWxabFkzUnZjbk1vZFN3Z1ppa3VibTl5YldGc2FYcGxLQ2tzSUdNdWNIVnphQ2hrTG5nc0lHUXVlU3dnWkM1NktTd2dhQzV3ZFhOb0tGOGdMeUJ1S1N3Z2FDNXdkWE5vS0dJZ0x5QnBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOHhJRDBnTVRzZ1h6RWdQRDBnYmpzZ1h6RXJLeWxtYjNJb2JHVjBJSGt4SUQwZ01Uc2dlVEVnUEQwZ2FUc2dlVEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaU1TQTlJQ2hwSUNzZ01Ta2dLaUFvWHpFZ0xTQXhLU0FySUNoNU1TQXRJREVwTENCQk1TQTlJQ2hwSUNzZ01Ta2dLaUJmTVNBcklDaDVNU0F0SURFcExDQk1NU0E5SUNocElDc2dNU2tnS2lCZk1TQXJJSGt4TENCSk1TQTlJQ2hwSUNzZ01Ta2dLaUFvWHpFZ0xTQXhLU0FySUhreE93b2dJQ0FnSUNBZ0lDQWdJQ0JoTG5CMWMyZ29ZakVzSUVFeExDQkpNU2tzSUdFdWNIVnphQ2hCTVN3Z1RERXNJRWt4S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV6WlhSSmJtUmxlQ2hoS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHd3NJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0ltNXZjbTFoYkNJc0lHNWxkeUJrWlNoakxDQXpLU2tzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKMWRpSXNJRzVsZHlCa1pTaG9MQ0F5S1NrN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2NDaGZMQ0I1TENCaUxDQkJMQ0JNS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSklEMGdUV0YwYUM1amIzTW9YeWtzSUdzZ1BTQk5ZWFJvTG5OcGJpaGZLU3dnUWlBOUlHSWdMeUI1SUNvZ1h5d2dVQ0E5SUUxaGRHZ3VZMjl6S0VJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JNTG5nZ1BTQkJJQ29nS0RJZ0t5QlFLU0FxSUM0MUlDb2dTU3dnVEM1NUlEMGdRU0FxSUNneUlDc2dVQ2tnS2lCcklDb2dMalVzSUV3dWVpQTlJRUVnS2lCTllYUm9Mbk5wYmloQ0tTQXFJQzQxT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJVY2lobExuSmhaR2wxY3l3Z1pTNTBkV0psTENCbExuUjFZblZzWVhKVFpXZHRaVzUwY3l3Z1pTNXlZV1JwWVd4VFpXZHRaVzUwY3l3Z1pTNXdMQ0JsTG5FcE93b2dJQ0FnZlFwOUxDQkZjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJvYnlodVpYY2dUU2d0TVN3Z0xURXNJREFwTENCdVpYY2dUU2d0TVN3Z01Td2dNQ2tzSUc1bGR5Qk5LREVzSURFc0lEQXBLU3dnZENBOUlEWTBMQ0J1SUQwZ01Td2dhU0E5SURnc0lISWdQU0FoTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlWSFZpWlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J3WVhSb09pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMGRXSjFiR0Z5VTJWbmJXVnVkSE02SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthV0ZzVTJWbmJXVnVkSE02SUdrc0NpQWdJQ0FnSUNBZ0lDQWdJR05zYjNObFpEb2djZ29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsTG1OdmJYQjFkR1ZHY21WdVpYUkdjbUZ0WlhNb2RDd2djaWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBZVzVuWlc1MGN5QTlJRzh1ZEdGdVoyVnVkSE1zSUhSb2FYTXVibTl5YldGc2N5QTlJRzh1Ym05eWJXRnNjeXdnZEdocGN5NWlhVzV2Y20xaGJITWdQU0J2TG1KcGJtOXliV0ZzY3pzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc1bGR5Qk5MQ0JzSUQwZ2JtVjNJRTBzSUdNZ1BTQnVaWGNnV0N3Z2FDQTlJRzVsZHlCTkxDQjFJRDBnVzEwc0lHUWdQU0JiWFN3Z1ppQTlJRnRkTENCdElEMGdXMTA3Q2lBZ0lDQWdJQ0FnZUNncExDQjBhR2x6TG5ObGRFbHVaR1Y0S0cwcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9kU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtHUXNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLR1lzSURJcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQjRLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOGdQU0F3T3lCZklEd2dkRHNnWHlzcktYWW9YeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWW9jaUE5UFQwZ0lURWdQeUIwSURvZ01Da3NJSEFvS1N3Z1p5Z3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUIyS0Y4cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYUNBOUlHVXVaMlYwVUc5cGJuUkJkQ2hmSUM4Z2RDd2dhQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ2J5NXViM0p0WVd4elcxOWRMQ0JpSUQwZ2J5NWlhVzV2Y20xaGJITmJYMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1FTQTlJREE3SUVFZ1BEMGdhVHNnUVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JNSUQwZ1FTQXZJR2tnS2lCTllYUm9MbEJKSUNvZ01pd2dTU0E5SUUxaGRHZ3VjMmx1S0V3cExDQnJJRDBnTFUxaGRHZ3VZMjl6S0V3cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDNTRJRDBnYXlBcUlIa3VlQ0FySUVrZ0tpQmlMbmdzSUd3dWVTQTlJR3NnS2lCNUxua2dLeUJKSUNvZ1lpNTVMQ0JzTG5vZ1BTQnJJQ29nZVM1NklDc2dTU0FxSUdJdWVpd2diQzV1YjNKdFlXeHBlbVVvS1N3Z1pDNXdkWE5vS0d3dWVDd2diQzU1TENCc0xub3BMQ0JoTG5nZ1BTQm9MbmdnS3lCdUlDb2diQzU0TENCaExua2dQU0JvTG5rZ0t5QnVJQ29nYkM1NUxDQmhMbm9nUFNCb0xub2dLeUJ1SUNvZ2JDNTZMQ0IxTG5CMWMyZ29ZUzU0TENCaExua3NJR0V1ZWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWnlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JmSUQwZ01Uc2dYeUE4UFNCME95QmZLeXNwWm05eUtHeGxkQ0I1SUQwZ01Uc2dlU0E4UFNCcE95QjVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0FvYVNBcklERXBJQ29nS0Y4Z0xTQXhLU0FySUNoNUlDMGdNU2tzSUVFZ1BTQW9hU0FySURFcElDb2dYeUFySUNoNUlDMGdNU2tzSUV3Z1BTQW9hU0FySURFcElDb2dYeUFySUhrc0lFa2dQU0FvYVNBcklERXBJQ29nS0Y4Z0xTQXhLU0FySUhrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdExuQjFjMmdvWWl3Z1FTd2dTU2tzSUcwdWNIVnphQ2hCTENCTUxDQkpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQndLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGOGdQU0F3T3lCZklEdzlJSFE3SUY4ckt5bG1iM0lvYkdWMElIa2dQU0F3T3lCNUlEdzlJR2s3SUhrckt5bGpMbmdnUFNCZklDOGdkQ3dnWXk1NUlEMGdlU0F2SUdrc0lHWXVjSFZ6YUNoakxuZ3NJR011ZVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdjM1Z3WlhJdWRHOUtVMDlPS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWNHRjBhQ0E5SUhSb2FYTXVjR0Z5WVcxbGRHVnljeTV3WVhSb0xuUnZTbE5QVGlncExDQmxPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lFVnlLRzVsZHlCVVlWdGxMbkJoZEdndWRIbHdaVjBvS1M1bWNtOXRTbE5QVGlobExuQmhkR2dwTENCbExuUjFZblZzWVhKVFpXZHRaVzUwY3l3Z1pTNXlZV1JwZFhNc0lHVXVjbUZrYVdGc1UyVm5iV1Z1ZEhNc0lHVXVZMnh2YzJWa0tUc0tJQ0FnSUgwS2ZTd2dSV0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVkV3hzS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5SNWNHVWdQU0FpVjJseVpXWnlZVzFsUjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsYjIxbGRISjVPaUJsQ2lBZ0lDQWdJQ0FnZlN3Z1pTQWhQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZExDQnVJRDBnYm1WM0lGTmxkQ3dnYVNBOUlHNWxkeUJOTENCeUlEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobExtbHVaR1Y0SUNFOVBTQnVkV3hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdVdVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd2dZU0E5SUdVdWFXNWtaWGdzSUd3Z1BTQmxMbWR5YjNWd2N6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHd3ViR1Z1WjNSb0lEMDlQU0F3SUNZbUlDaHNJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUmhjblE2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmRXNTBPaUJoTG1OdmRXNTBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWFJsY21saGJFbHVaR1Y0T2lBd0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd0xDQm9JRDBnYkM1c1pXNW5kR2c3SUdNZ1BDQm9PeUFySzJNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdiRnRqWFN3Z1pDQTlJSFV1YzNSaGNuUXNJR1lnUFNCMUxtTnZkVzUwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQTlJR1FzSUhnZ1BTQmtJQ3NnWmpzZ2JTQThJSGc3SUcwZ0t6MGdNeWxtYjNJb2JHVjBJSFlnUFNBd095QjJJRHdnTXpzZ2Rpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQmhMbWRsZEZnb2JTQXJJSFlwTENCd0lEMGdZUzVuWlhSWUtHMGdLeUFvZGlBcklERXBJQ1VnTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHZMQ0JuS1N3Z2NpNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLRzhzSUhBcExDQjVZeWhwTENCeUxDQnVLU0E5UFQwZ0lUQWdKaVlnS0hRdWNIVnphQ2hwTG5nc0lHa3VlU3dnYVM1NktTd2dkQzV3ZFhOb0tISXVlQ3dnY2k1NUxDQnlMbm9wS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J6RWdQU0JsTG1GMGRISnBZblYwWlhNdWNHOXphWFJwYjI0N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFeElEMGdNQ3dnYkRFZ1BTQnZNUzVqYjNWdWRDQXZJRE03SUdFeElEd2diREU3SUdFeEt5c3BabTl5S0d4bGRDQmpNU0E5SURBN0lHTXhJRHdnTXpzZ1l6RXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2d4SUQwZ015QXFJR0V4SUNzZ1l6RXNJSFV4SUQwZ015QXFJR0V4SUNzZ0tHTXhJQ3NnTVNrZ0pTQXpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHZNU3dnYURFcExDQnlMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYnpFc0lIVXhLU3dnZVdNb2FTd2djaXdnYmlrZ1BUMDlJQ0V3SUNZbUlDaDBMbkIxYzJnb2FTNTRMQ0JwTG5rc0lHa3VlaWtzSUhRdWNIVnphQ2h5TG5nc0lISXVlU3dnY2k1NktTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLSFFzSURNcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJSGxqS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdZQ1I3Y3k1NGZTd2tlM011ZVgwc0pIdHpMbnA5TFNSN1pTNTRmU3drZTJVdWVYMHNKSHRsTG5wOVlDd2dhU0E5SUdBa2UyVXVlSDBzSkh0bExubDlMQ1I3WlM1NmZTMGtlM011ZUgwc0pIdHpMbmw5TENSN2N5NTZmV0E3Q2lBZ0lDQnlaWFIxY200Z2RDNW9ZWE1vYmlrZ1BUMDlJQ0V3SUh4OElIUXVhR0Z6S0drcElEMDlQU0FoTUNBL0lDRXhJRG9nS0hRdVlXUmtLRzRzSUdrcExDQWhNQ2s3Q24wS2RtRnlJSFpqSUQwZ1QySnFaV04wTG1aeVpXVjZaU2g3Q2lBZ0lDQmZYM0J5YjNSdlgxODZJRzUxYkd3c0NpQWdJQ0JDYjNoSFpXOXRaWFJ5ZVRvZ2QyNHNDaUFnSUNCQ2IzaENkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2QyNHNDaUFnSUNCRGFYSmpiR1ZIWlc5dFpYUnllVG9nWm5Jc0NpQWdJQ0JEYVhKamJHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1puSXNDaUFnSUNCRGIyNWxSMlZ2YldWMGNuazZJSEJ5TEFvZ0lDQWdRMjl1WlVKMVptWmxja2RsYjIxbGRISjVPaUJ3Y2l3S0lDQWdJRU41YkdsdVpHVnlSMlZ2YldWMGNuazZJRXB1TEFvZ0lDQWdRM2xzYVc1a1pYSkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1NtNHNDaUFnSUNCRWIyUmxZMkZvWldSeWIyNUhaVzl0WlhSeWVUb2diWElzQ2lBZ0lDQkViMlJsWTJGb1pXUnliMjVDZFdabVpYSkhaVzl0WlhSeWVUb2diWElzQ2lBZ0lDQkZaR2RsYzBkbGIyMWxkSEo1T2lCZllTd0tJQ0FnSUVWNGRISjFaR1ZIWlc5dFpYUnllVG9nYkc0c0NpQWdJQ0JGZUhSeWRXUmxRblZtWm1WeVIyVnZiV1YwY25rNklHeHVMQW9nSUNBZ1NXTnZjMkZvWldSeWIyNUhaVzl0WlhSeWVUb2dYM0lzQ2lBZ0lDQkpZMjl6WVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQmZjaXdLSUNBZ0lFeGhkR2hsUjJWdmJXVjBjbms2SUUxeUxBb2dJQ0FnVEdGMGFHVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1RYSXNDaUFnSUNCUFkzUmhhR1ZrY205dVIyVnZiV1YwY25rNklFbHBMQW9nSUNBZ1QyTjBZV2hsWkhKdmJrSjFabVpsY2tkbGIyMWxkSEo1T2lCSmFTd0tJQ0FnSUZCc1lXNWxSMlZ2YldWMGNuazZJRkJwTEFvZ0lDQWdVR3hoYm1WQ2RXWm1aWEpIWlc5dFpYUnllVG9nVUdrc0NpQWdJQ0JRYjJ4NWFHVmtjbTl1UjJWdmJXVjBjbms2SUdGdUxBb2dJQ0FnVUc5c2VXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJoYml3S0lDQWdJRkpwYm1kSFpXOXRaWFJ5ZVRvZ1luSXNDaUFnSUNCU2FXNW5RblZtWm1WeVIyVnZiV1YwY25rNklHSnlMQW9nSUNBZ1UyaGhjR1ZIWlc5dFpYUnllVG9nUkdrc0NpQWdJQ0JUYUdGd1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCRWFTd0tJQ0FnSUZOd2FHVnlaVWRsYjIxbGRISjVPaUJHYVN3S0lDQWdJRk53YUdWeVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCR2FTd0tJQ0FnSUZSbGRISmhhR1ZrY205dVIyVnZiV1YwY25rNklIZHlMQW9nSUNBZ1ZHVjBjbUZvWldSeWIyNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2QzSXNDaUFnSUNCVWIzSjFjMGRsYjIxbGRISjVPaUJUY2l3S0lDQWdJRlJ2Y25WelFuVm1abVZ5UjJWdmJXVjBjbms2SUZOeUxBb2dJQ0FnVkc5eWRYTkxibTkwUjJWdmJXVjBjbms2SUZSeUxBb2dJQ0FnVkc5eWRYTkxibTkwUW5WbVptVnlSMlZ2YldWMGNuazZJRlJ5TEFvZ0lDQWdWSFZpWlVkbGIyMWxkSEo1T2lCRmNpd0tJQ0FnSUZSMVltVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1JYSXNDaUFnSUNCWGFYSmxabkpoYldWSFpXOXRaWFJ5ZVRvZ1JXRUtmU2tzSUVGaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGFHRmtiM2ROWVhSbGNtbGhiQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnWVdVb01Da3NJSFJvYVhNdWRISmhibk53WVhKbGJuUWdQU0FoTUN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsek93b2dJQ0FnZlFwOU93cEJZUzV3Y205MGIzUjVjR1V1YVhOVGFHRmtiM2ROWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnY0c4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdSMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1a1pXWnBibVZ6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JUVkVGT1JFRlNSRG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXliM1ZuYUc1bGMzTWdQU0F4TENCMGFHbHpMbTFsZEdGc2JtVnpjeUE5SURBc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtRnZUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1VZ1BTQnVaWGNnWVdVb01Da3NJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWlkVzF3VTJOaGJHVWdQU0F4TENCMGFHbHpMbTV2Y20xaGJFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJtOXliV0ZzVFdGd1ZIbHdaU0E5SUVocExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bElEMGdibVYzSUZnb01Td2dNU2tzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SURFc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SURBc0lIUm9hWE11Y205MVoyaHVaWE56VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV0WlhSaGJHNWxjM05OWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1bGJuWk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtVnVkazFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ0xqazRMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJQ0V4TENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SURFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUNKeWIzVnVaQ0lzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0FpY205MWJtUWlMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnSVRFc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVaR1ZtYVc1bGN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1UxUkJUa1JCVWtRNklDSWlDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsekxuSnZkV2RvYm1WemN5QTlJR1V1Y205MVoyaHVaWE56TENCMGFHbHpMbTFsZEdGc2JtVnpjeUE5SUdVdWJXVjBZV3h1WlhOekxDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ1pTNXNhV2RvZEUxaGNDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlHVXViR2xuYUhSTllYQkpiblJsYm5OcGRIa3NJSFJvYVhNdVlXOU5ZWEFnUFNCbExtRnZUV0Z3TENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVoYjAxaGNFbHVkR1Z1YzJsMGVTd2dkR2hwY3k1bGJXbHpjMmwyWlM1amIzQjVLR1V1WlcxcGMzTnBkbVVwTENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUQwZ1pTNWxiV2x6YzJsMlpVMWhjQ3dnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJR1V1WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJR1V1WW5WdGNFMWhjQ3dnZEdocGN5NWlkVzF3VTJOaGJHVWdQU0JsTG1KMWJYQlRZMkZzWlN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCbExtNXZjbTFoYkUxaGNDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnWlM1dWIzSnRZV3hOWVhCVWVYQmxMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxMbU52Y0hrb1pTNXViM0p0WVd4VFkyRnNaU2tzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdaUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJSFJvYVhNdWNtOTFaMmh1WlhOelRXRndJRDBnWlM1eWIzVm5hRzVsYzNOTllYQXNJSFJvYVhNdWJXVjBZV3h1WlhOelRXRndJRDBnWlM1dFpYUmhiRzVsYzNOTllYQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxtVnVkazFoY0NBOUlHVXVaVzUyVFdGd0xDQjBhR2x6TG1WdWRrMWhjRWx1ZEdWdWMybDBlU0E5SUdVdVpXNTJUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QTlJR1V1Y21WbWNtRmpkR2x2YmxKaGRHbHZMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJR1V1ZDJseVpXWnlZVzFsTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0xDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnUFNCbExuZHBjbVZtY21GdFpVeHBibVZqWVhBc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNCbExuZHBjbVZtY21GdFpVeHBibVZxYjJsdUxDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdaUzVtYkdGMFUyaGhaR2x1Wnl3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLY0c4dWNISnZkRzkwZVhCbExtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUVOaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCd2J5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVpHVm1hVzVsY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVTFSQlRrUkJVa1E2SUNJaUxBb2dJQ0FnSUNBZ0lDQWdJQ0JRU0ZsVFNVTkJURG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFGQm9lWE5wWTJGc1RXRjBaWEpwWVd3aUxDQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUQwZ01Dd2dkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bElEMGdibVYzSUZnb01Td2dNU2tzSUhSb2FYTXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1cGIzSWdQU0F4TGpVc0lFOWlhbVZqZEM1a1pXWnBibVZRY205d1pYSjBlU2gwYUdsekxDQWljbVZtYkdWamRHbDJhWFI1SWl3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHMTBLREl1TlNBcUlDaDBhR2x6TG1sdmNpQXRJREVwSUM4Z0tIUm9hWE11YVc5eUlDc2dNU2tzSURBc0lERXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFXOXlJRDBnS0RFZ0t5QXVOQ0FxSUhRcElDOGdLREVnTFNBdU5DQXFJSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2tzSUhSb2FYTXVjMmhsWlc1RGIyeHZjaUE5SUc1bGR5QmhaU2d3S1N3Z2RHaHBjeTV6YUdWbGJrTnZiRzl5VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5QTlJREVzSUhSb2FYTXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWRHaHBZMnR1WlhOeklEMGdNQ3dnZEdocGN5NTBhR2xqYTI1bGMzTk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdQU0F3TENCMGFHbHpMbUYwZEdWdWRXRjBhVzl1UTI5c2IzSWdQU0J1WlhjZ1lXVW9NU3dnTVN3Z01Ta3NJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlJRDBnYm1WM0lHRmxLREVzSURFc0lERXBMQ0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0pOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbDl6YUdWbGJpQTlJREFzSUhSb2FYTXVYMk5zWldGeVkyOWhkQ0E5SURBc0lIUm9hWE11WDNSeVlXNXpiV2x6YzJsdmJpQTlJREFzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSE5vWldWdUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5emFHVmxianNLSUNBZ0lIMEtJQ0FnSUhObGRDQnphR1ZsYmlobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmMyaGxaVzRnUGlBd0lDRTlJR1VnUGlBd0lDWW1JSFJvYVhNdWRtVnljMmx2YmlzckxDQjBhR2x6TGw5emFHVmxiaUE5SUdVN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnWTJ4bFlYSmpiMkYwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlqYkdWaGNtTnZZWFE3Q2lBZ0lDQjlDaUFnSUNCelpYUWdZMnhsWVhKamIyRjBLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDlqYkdWaGNtTnZZWFFnUGlBd0lDRTlJR1VnUGlBd0lDWW1JSFJvYVhNdWRtVnljMmx2YmlzckxDQjBhR2x6TGw5amJHVmhjbU52WVhRZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIUnlZVzV6YldsemMybHZiaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZkSEpoYm5OdGFYTnphVzl1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSFJ5WVc1emJXbHpjMmx2YmlobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmRISmhibk50YVhOemFXOXVJRDRnTUNBaFBTQmxJRDRnTUNBbUppQjBhR2x6TG5abGNuTnBiMjRyS3l3Z2RHaHBjeTVmZEhKaGJuTnRhWE56YVc5dUlEMGdaVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1SbFptbHVaWE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRk5VUVU1RVFWSkVPaUFpSWl3S0lDQWdJQ0FnSUNBZ0lDQWdVRWhaVTBsRFFVdzZJQ0lpQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVqYkdWaGNtTnZZWFFnUFNCbExtTnNaV0Z5WTI5aGRDd2dkR2hwY3k1amJHVmhjbU52WVhSTllYQWdQU0JsTG1Oc1pXRnlZMjloZEUxaGNDd2dkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNZ1BTQmxMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeXdnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUFNCbExtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ3dnZEdocGN5NWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQU0JsTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0N3Z2RHaHBjeTVqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlM1amIzQjVLR1V1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVcExDQjBhR2x6TG1sdmNpQTlJR1V1YVc5eUxDQjBhR2x6TG5Ob1pXVnVJRDBnWlM1emFHVmxiaXdnZEdocGN5NXphR1ZsYmtOdmJHOXlMbU52Y0hrb1pTNXphR1ZsYmtOdmJHOXlLU3dnZEdocGN5NXphR1ZsYmtOdmJHOXlUV0Z3SUQwZ1pTNXphR1ZsYmtOdmJHOXlUV0Z3TENCMGFHbHpMbk5vWldWdVVtOTFaMmh1WlhOeklEMGdaUzV6YUdWbGJsSnZkV2RvYm1WemN5d2dkR2hwY3k1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NBOUlHVXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQXNJSFJvYVhNdWRISmhibk50YVhOemFXOXVJRDBnWlM1MGNtRnVjMjFwYzNOcGIyNHNJSFJvYVhNdWRISmhibk50YVhOemFXOXVUV0Z3SUQwZ1pTNTBjbUZ1YzIxcGMzTnBiMjVOWVhBc0lIUm9hWE11ZEdocFkydHVaWE56SUQwZ1pTNTBhR2xqYTI1bGMzTXNJSFJvYVhNdWRHaHBZMnR1WlhOelRXRndJRDBnWlM1MGFHbGphMjVsYzNOTllYQXNJSFJvYVhNdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQTlJR1V1WVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlN3Z2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtOdmJHOXlMbU52Y0hrb1pTNWhkSFJsYm5WaGRHbHZia052Ykc5eUtTd2dkR2hwY3k1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNBOUlHVXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa3NJSFJvYVhNdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdQU0JsTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0xDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSXVZMjl3ZVNobExuTndaV04xYkdGeVEyOXNiM0lwTENCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQU0JsTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFzSUhSb2FYTTdDaUFnSUNCOUNuMDdDa05oTG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhRYUhsemFXTmhiRTFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJNWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFGQm9iMjVuVFdGMFpYSnBZV3dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtERTJOemMzTWpFMUtTd2dkR2hwY3k1emNHVmpkV3hoY2lBOUlHNWxkeUJoWlNneE1URTRORGd4S1N3Z2RHaHBjeTV6YUdsdWFXNWxjM01nUFNBek1Dd2dkR2hwY3k1dFlYQWdQU0J1ZFd4c0xDQjBhR2x6TG14cFoyaDBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVZVzlOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUlEMGdNU3dnZEdocGN5NWxiV2x6YzJsMlpTQTlJRzVsZHlCaFpTZ3dLU3dnZEdocGN5NWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SURFc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1NHa3NJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dDZ3hMQ0F4S1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1emNHVmpkV3hoY2sxaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtVnVkazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZMjl0WW1sdVpTQTlJRlp6TENCMGFHbHpMbkpsWm14bFkzUnBkbWwwZVNBOUlERXNJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ0xqazRMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJQ0V4TENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SURFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUNKeWIzVnVaQ0lzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0FpY205MWJtUWlMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnSVRFc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZMjlzYjNJdVkyOXdlU2hsTG1OdmJHOXlLU3dnZEdocGN5NXpjR1ZqZFd4aGNpNWpiM0I1S0dVdWMzQmxZM1ZzWVhJcExDQjBhR2x6TG5Ob2FXNXBibVZ6Y3lBOUlHVXVjMmhwYm1sdVpYTnpMQ0IwYUdsekxtMWhjQ0E5SUdVdWJXRndMQ0IwYUdsekxteHBaMmgwVFdGd0lEMGdaUzVzYVdkb2RFMWhjQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVZVzlOWVhBZ1BTQmxMbUZ2VFdGd0xDQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVJRDBnWlM1aGIwMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWxiV2x6YzJsMlpTNWpiM0I1S0dVdVpXMXBjM05wZG1VcExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lEMGdaUzVsYldsemMybDJaVTFoY0N3Z2RHaHBjeTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0E5SUdVdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrc0lIUm9hWE11WW5WdGNFMWhjQ0E5SUdVdVluVnRjRTFoY0N3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNCbExtSjFiWEJUWTJGc1pTd2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQmxMbTV2Y20xaGJFMWhjQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1pTNXViM0p0WVd4TllYQlVlWEJsTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsTG1OdmNIa29aUzV1YjNKdFlXeFRZMkZzWlNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1zSUhSb2FYTXVjM0JsWTNWc1lYSk5ZWEFnUFNCbExuTndaV04xYkdGeVRXRndMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdaUzVoYkhCb1lVMWhjQ3dnZEdocGN5NWxiblpOWVhBZ1BTQmxMbVZ1ZGsxaGNDd2dkR2hwY3k1amIyMWlhVzVsSUQwZ1pTNWpiMjFpYVc1bExDQjBhR2x6TG5KbFpteGxZM1JwZG1sMGVTQTlJR1V1Y21WbWJHVmpkR2wyYVhSNUxDQjBhR2x6TG5KbFpuSmhZM1JwYjI1U1lYUnBieUE5SUdVdWNtVm1jbUZqZEdsdmJsSmhkR2x2TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUdVdWQybHlaV1p5WVcxbExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlHVXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9MQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WallYQXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnWlM1bWJHRjBVMmhoWkdsdVp5d2dkR2hwY3pzS0lDQWdJSDBLZlRzS1RHRXVjSEp2ZEc5MGVYQmxMbWx6VFdWemFGQm9iMjVuVFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUZKaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVpHVm1hVzVsY3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnVkU5UFRqb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMblI1Y0dVZ1BTQWlUV1Z6YUZSdmIyNU5ZWFJsY21saGJDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvTVRZM056Y3lNVFVwTENCMGFHbHpMbTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaM0poWkdsbGJuUk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxteHBaMmgwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WVc5TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVsYldsemMybDJaU0E5SUc1bGR5QmhaU2d3S1N3Z2RHaHBjeTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WlcxcGMzTnBkbVZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlERXNJSFJvYVhNdWJtOXliV0ZzVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdTR2tzSUhSb2FYTXVibTl5YldGc1UyTmhiR1VnUFNCdVpYY2dXQ2d4TENBeEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdNU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJDYVdGeklEMGdNQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJRzUxYkd3c0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ0lURXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdNU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsWTJGd0lEMGdJbkp2ZFc1a0lpd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlDSnliM1Z1WkNJc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZMjlzYjNJdVkyOXdlU2hsTG1OdmJHOXlLU3dnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NW5jbUZrYVdWdWRFMWhjQ0E5SUdVdVozSmhaR2xsYm5STllYQXNJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQmxMbXhwWjJoMFRXRndMQ0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWhiMDFoY0NBOUlHVXVZVzlOWVhBc0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0JsTG1GdlRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxtVnRhWE56YVhabExtTnZjSGtvWlM1bGJXbHpjMmwyWlNrc0lIUm9hWE11WlcxcGMzTnBkbVZOWVhBZ1BTQmxMbVZ0YVhOemFYWmxUV0Z3TENCMGFHbHpMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJRDBnWlM1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVN3Z2RHaHBjeTVpZFcxd1RXRndJRDBnWlM1aWRXMXdUV0Z3TENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SUdVdVluVnRjRk5qWVd4bExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHVXVibTl5YldGc1RXRndMQ0IwYUdsekxtNXZjbTFoYkUxaGNGUjVjR1VnUFNCbExtNXZjbTFoYkUxaGNGUjVjR1VzSUhSb2FYTXVibTl5YldGc1UyTmhiR1V1WTI5d2VTaGxMbTV2Y20xaGJGTmpZV3hsS1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0JsTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeXdnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNHNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NsSmhMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaFViMjl1VFdGMFpYSnBZV3dnUFNBaE1Ec0tkbUZ5SUZCaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCa2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9UbTl5YldGc1RXRjBaWEpwWVd3aUxDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJREVzSUhSb2FYTXVibTl5YldGc1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnU0drc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV0NneExDQXhLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTUzYVhKbFpuSmhiV1VnUFNBaE1Td2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxtWnZaeUE5SUNFeExDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdJVEVzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVluVnRjRTFoY0NBOUlHVXVZblZ0Y0UxaGNDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQmxMbUoxYlhCVFkyRnNaU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0JsTG01dmNtMWhiRTFoY0N3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdaUzV1YjNKdFlXeE5ZWEJVZVhCbExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bExtTnZjSGtvWlM1dWIzSnRZV3hUWTJGc1pTa3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXVabXhoZEZOb1lXUnBibWNnUFNCbExtWnNZWFJUYUdGa2FXNW5MQ0IwYUdsek93b2dJQ0FnZlFwOU93cFFZUzV3Y205MGIzUjVjR1V1YVhOTlpYTm9UbTl5YldGc1RXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlFbGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vVEdGdFltVnlkRTFoZEdWeWFXRnNJaXdnZEdocGN5NWpiMnh2Y2lBOUlHNWxkeUJoWlNneE5qYzNOekl4TlNrc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtRnZUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWhiMDFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1VZ1BTQnVaWGNnWVdVb01Da3NJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ1BTQXhMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1emNHVmpkV3hoY2sxaGNDQTlJRzUxYkd3c0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtVnVkazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZMjl0WW1sdVpTQTlJRlp6TENCMGFHbHpMbkpsWm14bFkzUnBkbWwwZVNBOUlERXNJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ0xqazRMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJQ0V4TENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SURFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUNKeWIzVnVaQ0lzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0FpY205MWJtUWlMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11YldGd0lEMGdaUzV0WVhBc0lIUm9hWE11YkdsbmFIUk5ZWEFnUFNCbExteHBaMmgwVFdGd0xDQjBhR2x6TG14cFoyaDBUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aGIwMWhjQ0E5SUdVdVlXOU5ZWEFzSUhSb2FYTXVZVzlOWVhCSmJuUmxibk5wZEhrZ1BTQmxMbUZ2VFdGd1NXNTBaVzV6YVhSNUxDQjBhR2x6TG1WdGFYTnphWFpsTG1OdmNIa29aUzVsYldsemMybDJaU2tzSUhSb2FYTXVaVzFwYzNOcGRtVk5ZWEFnUFNCbExtVnRhWE56YVhabFRXRndMQ0IwYUdsekxtVnRhWE56YVhabFNXNTBaVzV6YVhSNUlEMGdaUzVsYldsemMybDJaVWx1ZEdWdWMybDBlU3dnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQ0E5SUdVdWMzQmxZM1ZzWVhKTllYQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxtVnVkazFoY0NBOUlHVXVaVzUyVFdGd0xDQjBhR2x6TG1OdmJXSnBibVVnUFNCbExtTnZiV0pwYm1Vc0lIUm9hWE11Y21WbWJHVmpkR2wyYVhSNUlEMGdaUzV5Wldac1pXTjBhWFpwZEhrc0lIUm9hWE11Y21WbWNtRmpkR2x2YmxKaGRHbHZJRDBnWlM1eVpXWnlZV04wYVc5dVVtRjBhVzhzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnWlM1M2FYSmxabkpoYldVc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDd2dkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxhbTlwYmlBOUlHVXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNHNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NrbGhMbkJ5YjNSdmRIbHdaUzVwYzAxbGMyaE1ZVzFpWlhKMFRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlFUmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaR1ZtYVc1bGN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1RVRlVRMEZRT2lBaUlnb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWRIbHdaU0E5SUNKTlpYTm9UV0YwWTJGd1RXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXRZWFJqWVhBZ1BTQnVkV3hzTENCMGFHbHpMbTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJRzUxYkd3c0lIUm9hWE11WW5WdGNGTmpZV3hsSUQwZ01Td2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQklhU3dnZEdocGN5NXViM0p0WVd4VFkyRnNaU0E5SUc1bGR5QllLREVzSURFcExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQXhMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQXdMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOUlDRXhMQ0IwYUdsekxuTmxkRlpoYkhWbGN5aGxLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG1SbFptbHVaWE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRTFCVkVOQlVEb2dJaUlLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbU52Ykc5eUxtTnZjSGtvWlM1amIyeHZjaWtzSUhSb2FYTXViV0YwWTJGd0lEMGdaUzV0WVhSallYQXNJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdVluVnRjRTFoY0NBOUlHVXVZblZ0Y0UxaGNDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQmxMbUoxYlhCVFkyRnNaU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0JsTG01dmNtMWhiRTFoY0N3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdaUzV1YjNKdFlXeE5ZWEJVZVhCbExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bExtTnZjSGtvWlM1dWIzSnRZV3hUWTJGc1pTa3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE11WVd4d2FHRk5ZWEFnUFNCbExtRnNjR2hoVFdGd0xDQjBhR2x6TG1ac1lYUlRhR0ZrYVc1bklEMGdaUzVtYkdGMFUyaGhaR2x1Wnl3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLUkdFdWNISnZkRzkwZVhCbExtbHpUV1Z6YUUxaGRHTmhjRTFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJHWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWm5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdsdVpVUmhjMmhsWkUxaGRHVnlhV0ZzSWl3Z2RHaHBjeTV6WTJGc1pTQTlJREVzSUhSb2FYTXVaR0Z6YUZOcGVtVWdQU0F6TENCMGFHbHpMbWRoY0ZOcGVtVWdQU0F4TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuTmpZV3hsSUQwZ1pTNXpZMkZzWlN3Z2RHaHBjeTVrWVhOb1UybDZaU0E5SUdVdVpHRnphRk5wZW1Vc0lIUm9hWE11WjJGd1UybDZaU0E5SUdVdVoyRndVMmw2WlN3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLUm1FdWNISnZkRzkwZVhCbExtbHpUR2x1WlVSaGMyaGxaRTFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJ6ZVNBOUlFOWlhbVZqZEM1bWNtVmxlbVVvZXdvZ0lDQWdYMTl3Y205MGIxOWZPaUJ1ZFd4c0xBb2dJQ0FnVTJoaFpHOTNUV0YwWlhKcFlXdzZJRUZoTEFvZ0lDQWdVM0J5YVhSbFRXRjBaWEpwWVd3NklHbHZMQW9nSUNBZ1VtRjNVMmhoWkdWeVRXRjBaWEpwWVd3NklFZHBMQW9nSUNBZ1UyaGhaR1Z5VFdGMFpYSnBZV3c2SUhOdUxBb2dJQ0FnVUc5cGJuUnpUV0YwWlhKcFlXdzZJR3B1TEFvZ0lDQWdUV1Z6YUZCb2VYTnBZMkZzVFdGMFpYSnBZV3c2SUVOaExBb2dJQ0FnVFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3NklIQnZMQW9nSUNBZ1RXVnphRkJvYjI1blRXRjBaWEpwWVd3NklFeGhMQW9nSUNBZ1RXVnphRlJ2YjI1TllYUmxjbWxoYkRvZ1VtRXNDaUFnSUNCTlpYTm9UbTl5YldGc1RXRjBaWEpwWVd3NklGQmhMQW9nSUNBZ1RXVnphRXhoYldKbGNuUk5ZWFJsY21saGJEb2dTV0VzQ2lBZ0lDQk5aWE5vUkdWd2RHaE5ZWFJsY21saGJEb2daVzhzQ2lBZ0lDQk5aWE5vUkdsemRHRnVZMlZOWVhSbGNtbGhiRG9nZEc4c0NpQWdJQ0JOWlhOb1FtRnphV05OWVhSbGNtbGhiRG9nYUc0c0NpQWdJQ0JOWlhOb1RXRjBZMkZ3VFdGMFpYSnBZV3c2SUVSaExBb2dJQ0FnVEdsdVpVUmhjMmhsWkUxaGRHVnlhV0ZzT2lCR1lTd0tJQ0FnSUV4cGJtVkNZWE5wWTAxaGRHVnlhV0ZzT2lCbWRDd0tJQ0FnSUUxaGRHVnlhV0ZzT2lCa2RBcDlLU3dnV21VZ1BTQjdDaUFnSUNCaGNuSmhlVk5zYVdObE9pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGcGxMbWx6Vkhsd1pXUkJjbkpoZVNoektTQS9JRzVsZHlCekxtTnZibk4wY25WamRHOXlLSE11YzNWaVlYSnlZWGtvWlN3Z2RDQWhQVDBnZG05cFpDQXdJRDhnZENBNklITXViR1Z1WjNSb0tTa2dPaUJ6TG5Oc2FXTmxLR1VzSUhRcE93b2dJQ0FnZlN3S0lDQWdJR052Ym5abGNuUkJjbkpoZVRvZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaGN5QjhmQ0FoZENBbUppQnpMbU52Ym5OMGNuVmpkRzl5SUQwOVBTQmxJRDhnY3lBNklIUjVjR1Z2WmlCbExrSlpWRVZUWDFCRlVsOUZURVZOUlU1VUlEMDlJQ0p1ZFcxaVpYSWlJRDhnYm1WM0lHVW9jeWtnT2lCQmNuSmhlUzV3Y205MGIzUjVjR1V1YzJ4cFkyVXVZMkZzYkNoektUc0tJQ0FnSUgwc0NpQWdJQ0JwYzFSNWNHVmtRWEp5WVhrNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdRWEp5WVhsQ2RXWm1aWEl1YVhOV2FXVjNLSE1wSUNZbUlDRW9jeUJwYm5OMFlXNWpaVzltSUVSaGRHRldhV1YzS1RzS0lDQWdJSDBzQ2lBZ0lDQm5aWFJMWlhsbWNtRnRaVTl5WkdWeU9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWlNocExDQnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCelcybGRJQzBnYzF0eVhUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpMbXhsYm1kMGFDd2diaUE5SUc1bGR5QkJjbkpoZVNoMEtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3T3lCcElDRTlQU0IwT3lBcksya3BibHRwWFNBOUlHazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMjl5ZENobEtTd2dianNLSUNBZ0lIMHNDaUFnSUNCemIzSjBaV1JCY25KaGVUb2dablZ1WTNScGIyNG9jeXdnWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdjeTVzWlc1bmRHZ3NJR2tnUFNCdVpYY2djeTVqYjI1emRISjFZM1J2Y2lodUtUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdNRHNnYnlBaFBUMGdianNnS3l0eUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwVzNKZElDb2daVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCc0lEMGdNRHNnYkNBaFBUMGdaVHNnS3l0c0tXbGJieXNyWFNBOUlITmJZU0FySUd4ZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2FUc0tJQ0FnSUgwc0NpQWdJQ0JtYkdGMGRHVnVTbE5QVGpvZ1puVnVZM1JwYjI0b2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdNU3dnY2lBOUlITmJNRjA3Q2lBZ0lDQWdJQ0FnWm05eUtEc2djaUFoUFQwZ2RtOXBaQ0F3SUNZbUlISmJibDBnUFQwOUlIWnZhV1FnTURzcGNpQTlJSE5iYVNzclhUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdkbTlwWkNBd0tTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCeVcyNWRPd29nSUNBZ0lDQWdJR2xtSUNodklDRTlQU0IyYjJsa0lEQXBJR2xtSUNoQmNuSmhlUzVwYzBGeWNtRjVLRzhwS1NCa2J5QnZJRDBnY2x0dVhTd2dieUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbkIxYzJnb2NpNTBhVzFsS1N3Z2RDNXdkWE5vTG1Gd2NHeDVLSFFzSUc4cEtTd2djaUE5SUhOYmFTc3JYVHNLSUNBZ0lDQWdJQ0IzYUdsc1pTQW9jaUFoUFQwZ2RtOXBaQ0F3S1FvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0c4dWRHOUJjbkpoZVNBaFBUMGdkbTlwWkNBd0tTQmtieUJ2SUQwZ2NsdHVYU3dnYnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hsTG5CMWMyZ29jaTUwYVcxbEtTd2dieTUwYjBGeWNtRjVLSFFzSUhRdWJHVnVaM1JvS1Nrc0lISWdQU0J6VzJrcksxMDdDaUFnSUNBZ0lDQWdkMmhwYkdVZ0tISWdJVDA5SUhadmFXUWdNQ2tLSUNBZ0lDQWdJQ0JsYkhObElHUnZJRzhnUFNCeVcyNWRMQ0J2SUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1Y0hWemFDaHlMblJwYldVcExDQjBMbkIxYzJnb2J5a3BMQ0J5SUQwZ2MxdHBLeXRkT3dvZ0lDQWdJQ0FnSUhkb2FXeGxJQ2h5SUNFOVBTQjJiMmxrSURBcENpQWdJQ0I5TEFvZ0lDQWdjM1ZpWTJ4cGNEb2dablZ1WTNScGIyNG9jeXdnWlN3Z2RDd2diaXdnYVNBOUlETXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J6TG1Oc2IyNWxLQ2s3Q2lBZ0lDQWdJQ0FnY2k1dVlXMWxJRDBnWlRzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREE3SUd3Z1BDQnlMblJ5WVdOcmN5NXNaVzVuZEdnN0lDc3JiQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2NpNTBjbUZqYTNOYmJGMHNJR2dnUFNCakxtZGxkRlpoYkhWbFUybDZaU2dwTENCMUlEMGdXMTBzSUdRZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbUlEMGdNRHNnWmlBOElHTXVkR2x0WlhNdWJHVnVaM1JvT3lBcksyWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQmpMblJwYldWelcyWmRJQ29nYVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hLRzBnUENCMElIeDhJRzBnUGowZ2Jpa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMUxuQjFjMmdvWXk1MGFXMWxjMXRtWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjRJRDBnTURzZ2VDQThJR2c3SUNzcmVDbGtMbkIxYzJnb1l5NTJZV3gxWlhOYlppQXFJR2dnS3lCNFhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkUzVzWlc1bmRHZ2dJVDA5SURBZ0ppWWdLR011ZEdsdFpYTWdQU0JhWlM1amIyNTJaWEowUVhKeVlYa29kU3dnWXk1MGFXMWxjeTVqYjI1emRISjFZM1J2Y2lrc0lHTXVkbUZzZFdWeklEMGdXbVV1WTI5dWRtVnlkRUZ5Y21GNUtHUXNJR011ZG1Gc2RXVnpMbU52Ym5OMGNuVmpkRzl5S1N3Z2J5NXdkWE5vS0dNcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjaTUwY21GamEzTWdQU0J2T3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnTVNBdklEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNNU0E5SURBN0lHd3hJRHdnY2k1MGNtRmphM011YkdWdVozUm9PeUFySzJ3eEtXRWdQaUJ5TG5SeVlXTnJjMXRzTVYwdWRHbHRaWE5iTUYwZ0ppWWdLR0VnUFNCeUxuUnlZV05yYzF0c01WMHVkR2x0WlhOYk1GMHBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiRElnUFNBd095QnNNaUE4SUhJdWRISmhZMnR6TG14bGJtZDBhRHNnS3l0c01pbHlMblJ5WVdOcmMxdHNNbDB1YzJocFpuUW9MVEVnS2lCaEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NpNXlaWE5sZEVSMWNtRjBhVzl1S0Nrc0lISTdDaUFnSUNCOUxBb2dJQ0FnYldGclpVTnNhWEJCWkdScGRHbDJaVG9nWm5WdVkzUnBiMjRvY3l3Z1pTQTlJREFzSUhRZ1BTQnpMQ0J1SUQwZ016QXBJSHNLSUNBZ0lDQWdJQ0J1SUR3OUlEQWdKaVlnS0c0Z1BTQXpNQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwTG5SeVlXTnJjeTVzWlc1bmRHZ3NJSElnUFNCbElDOGdianNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd095QnZJRHdnYVRzZ0t5dHZLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMExuUnlZV05yYzF0dlhTd2diQ0E5SUdFdVZtRnNkV1ZVZVhCbFRtRnRaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dnUFQwOUlDSmliMjlzSWlCOGZDQnNJRDA5UFNBaWMzUnlhVzVuSWlrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdjeTUwY21GamEzTXVabWx1WkNobWRXNWpkR2x2YmlobktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1p5NXVZVzFsSUQwOVBTQmhMbTVoYldVZ0ppWWdaeTVXWVd4MVpWUjVjR1ZPWVcxbElEMDlQU0JzT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR01nUFQwOUlIWnZhV1FnTUNrZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdNQ3dnZFNBOUlHRXVaMlYwVm1Gc2RXVlRhWHBsS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJR0V1WTNKbFlYUmxTVzUwWlhKd2IyeGhiblF1YVhOSmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJIVEZSR1EzVmlhV05UY0d4cGJtVWdKaVlnS0dnZ1BTQjFJQzhnTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdNQ3dnWmlBOUlHTXVaMlYwVm1Gc2RXVlRhWHBsS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJR011WTNKbFlYUmxTVzUwWlhKd2IyeGhiblF1YVhOSmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJIVEZSR1EzVmlhV05UY0d4cGJtVWdKaVlnS0dRZ1BTQm1JQzhnTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdElEMGdZUzUwYVcxbGN5NXNaVzVuZEdnZ0xTQXhMQ0I0T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOFBTQmhMblJwYldWeld6QmRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p5QTlJR2dzSUhBZ1BTQjFJQzBnYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhnZ1BTQmFaUzVoY25KaGVWTnNhV05sS0dFdWRtRnNkV1Z6TENCbkxDQndLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHlJRDQ5SUdFdWRHbHRaWE5iYlYwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JuTVNBOUlHMGdLaUIxSUNzZ2FDd2djREVnUFNCbk1TQXJJSFVnTFNCb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQTlJRnBsTG1GeWNtRjVVMnhwWTJVb1lTNTJZV3gxWlhNc0lHY3hMQ0J3TVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnpJZ1BTQmhMbU55WldGMFpVbHVkR1Z5Y0c5c1lXNTBLQ2tzSUhBeUlEMGdhQ3dnWHlBOUlIVWdMU0JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWnpJdVpYWmhiSFZoZEdVb2Npa3NJSGdnUFNCYVpTNWhjbkpoZVZOc2FXTmxLR2N5TG5KbGMzVnNkRUoxWm1abGNpd2djRElzSUY4cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHd2dQVDA5SUNKeGRXRjBaWEp1YVc5dUlpQW1KaUJ1WlhjZ1ozUW9LUzVtY205dFFYSnlZWGtvZUNrdWJtOXliV0ZzYVhwbEtDa3VZMjl1YW5WbllYUmxLQ2t1ZEc5QmNuSmhlU2g0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQmpMblJwYldWekxteGxibWQwYURzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5NeUE5SURBN0lHY3pJRHdnZGpzZ0t5dG5NeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NETWdQU0JuTXlBcUlHWWdLeUJrT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd2dQVDA5SUNKeGRXRjBaWEp1YVc5dUlpa2daM1F1YlhWc2RHbHdiSGxSZFdGMFpYSnVhVzl1YzBac1lYUW9ZeTUyWVd4MVpYTXNJSEF6TENCNExDQXdMQ0JqTG5aaGJIVmxjeXdnY0RNcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjh4SUQwZ1ppQXRJR1FnS2lBeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBN0lIa2dQQ0JmTVRzZ0t5dDVLV011ZG1Gc2RXVnpXM0F6SUNzZ2VWMGdMVDBnZUZ0NVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY3k1aWJHVnVaRTF2WkdVZ1BTQnhZeXdnY3pzS0lDQWdJSDBLZlN3Z1kyNGdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0IwYUdsekxuQmhjbUZ0WlhSbGNsQnZjMmwwYVc5dWN5QTlJR1VzSUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0SUQwZ01Dd2dkR2hwY3k1eVpYTjFiSFJDZFdabVpYSWdQU0JwSUNFOVBTQjJiMmxrSURBZ1B5QnBJRG9nYm1WM0lIUXVZMjl1YzNSeWRXTjBiM0lvYmlrc0lIUm9hWE11YzJGdGNHeGxWbUZzZFdWeklEMGdkQ3dnZEdocGN5NTJZV3gxWlZOcGVtVWdQU0J1TENCMGFHbHpMbk5sZEhScGJtZHpJRDBnYm5Wc2JDd2dkR2hwY3k1RVpXWmhkV3gwVTJWMGRHbHVaM05mSUQwZ2UzMDdDaUFnSUNCOUNpQWdJQ0JsZG1Gc2RXRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbkJoY21GdFpYUmxjbEJ2YzJsMGFXOXVjeXdnYmlBOUlIUm9hWE11WDJOaFkyaGxaRWx1WkdWNExDQnBJRDBnZEZ0dVhTd2djaUE5SUhSYmJpQXRJREZkT3dvZ0lDQWdJQ0FnSUdVNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZERvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzg3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVG9nYVdZZ0tDRW9aU0E4SUdrcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJRzRnS3lBeU96c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobElEd2djaWtnWW5KbFlXc2dhVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQTlJSFF1YkdWdVozUm9MQ0IwYUdsekxsOWpZV05vWldSSmJtUmxlQ0E5SUc0c0lIUm9hWE11WVdaMFpYSkZibVJmS0c0Z0xTQXhMQ0JsTENCeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVJRDA5UFNCaEtTQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwZ2FTd2dhU0E5SUhSYkt5dHVYU3dnWlNBOElHa3BJR0p5WldGcklIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJSFF1YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXlCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JU2hsSUQ0OUlISXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaE1TQTlJSFJiTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVZ1BDQmhNU0FtSmlBb2JpQTlJRElzSUhJZ1BTQmhNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiQ0E5SUc0Z0xTQXlPenNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0SUQwZ01Dd2dkR2hwY3k1aVpXWnZjbVZUZEdGeWRGOG9NQ3dnWlN3Z2FTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JpQTlQVDBnYkNrZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0E5SUhJc0lISWdQU0IwV3kwdGJpQXRJREZkTENCbElENDlJSElwSUdKeVpXRnJJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc0c0lHNGdQU0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF5QnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXlCbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLRHNnYmlBOElHODdLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZVElnUFNCdUlDc2dieUErUGo0Z01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsSUR3Z2RGdGhNbDBnUHlCdklEMGdZVElnT2lCdUlEMGdZVElnS3lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFNCMFcyNWRMQ0J5SUQwZ2RGdHVJQzBnTVYwc0lISWdQVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRJRDBnTUN3Z2RHaHBjeTVpWldadmNtVlRkR0Z5ZEY4b01Dd2daU3dnYVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0E5UFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnYmlBOUlIUXViR1Z1WjNSb0xDQjBhR2x6TGw5allXTm9aV1JKYm1SbGVDQTlJRzRzSUhSb2FYTXVZV1owWlhKRmJtUmZLRzRnTFNBeExDQnlMQ0JsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlqWVdOb1pXUkpibVJsZUNBOUlHNHNJSFJvYVhNdWFXNTBaWEoyWVd4RGFHRnVaMlZrWHlodUxDQnlMQ0JwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhVzUwWlhKd2IyeGhkR1ZmS0c0c0lISXNJR1VzSUdrcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVTJWMGRHbHVaM05mS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEhScGJtZHpJSHg4SUhSb2FYTXVSR1ZtWVhWc2RGTmxkSFJwYm1kelh6c0tJQ0FnSUgwS0lDQWdJR052Y0hsVFlXMXdiR1ZXWVd4MVpWOG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXlaWE4xYkhSQ2RXWm1aWElzSUc0Z1BTQjBhR2x6TG5OaGJYQnNaVlpoYkhWbGN5d2dhU0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0J5SUQwZ1pTQXFJR2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2SUQwZ01Ec2dieUFoUFQwZ2FUc2dLeXR2S1hSYmIxMGdQU0J1VzNJZ0t5QnZYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljRzlzWVhSbFh5Z3BJSHNLSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbU5oYkd3Z2RHOGdZV0p6ZEhKaFkzUWdiV1YwYUc5a0lpazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuWmhiRU5vWVc1blpXUmZLQ2tnZTMwS2ZUc0tZMjR1Y0hKdmRHOTBlWEJsTG1KbFptOXlaVk4wWVhKMFh5QTlJR051TG5CeWIzUnZkSGx3WlM1amIzQjVVMkZ0Y0d4bFZtRnNkV1ZmT3dwamJpNXdjbTkwYjNSNWNHVXVZV1owWlhKRmJtUmZJRDBnWTI0dWNISnZkRzkwZVhCbExtTnZjSGxUWVcxd2JHVldZV3gxWlY4N0NuWmhjaUJRYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWTI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ3dnYml3Z2FTazdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmQyVnBaMmgwVUhKbGRpQTlJQzB3TENCMGFHbHpMbDl2Wm1aelpYUlFjbVYySUQwZ0xUQXNJSFJvYVhNdVgzZGxhV2RvZEU1bGVIUWdQU0F0TUN3Z2RHaHBjeTVmYjJabWMyVjBUbVY0ZENBOUlDMHdMQ0IwYUdsekxrUmxabUYxYkhSVFpYUjBhVzVuYzE4Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWdVpHbHVaMU4wWVhKME9pQk5hU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pXNWthVzVuUlc1a09pQk5hUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjblpoYkVOb1lXNW5aV1JmS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVjR0Z5WVcxbGRHVnlVRzl6YVhScGIyNXpMQ0J5SUQwZ1pTQXRJRElzSUc4Z1BTQmxJQ3NnTVN3Z1lTQTlJR2xiY2wwc0lHd2dQU0JwVzI5ZE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUQwOVBTQjJiMmxrSURBcElITjNhWFJqYUNoMGFHbHpMbWRsZEZObGRIUnBibWR6WHlncExtVnVaR2x1WjFOMFlYSjBLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JpYVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhJZ1BTQmxMQ0JoSUQwZ01pQXFJSFFnTFNCdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnVDNNNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeUlEMGdhUzVzWlc1bmRHZ2dMU0F5TENCaElEMGdkQ0FySUdsYmNsMGdMU0JwVzNJZ0t5QXhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaUE5SUdVc0lHRWdQU0J1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ2RtOXBaQ0F3S1NCemQybDBZMmdvZEdocGN5NW5aWFJUWlhSMGFXNW5jMThvS1M1bGJtUnBibWRGYm1RcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElHSnBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUdVc0lHd2dQU0F5SUNvZ2JpQXRJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQlBjem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNBeExDQnNJRDBnYmlBcklHbGJNVjBnTFNCcFd6QmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnWlNBdElERXNJR3dnUFNCME93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlDaHVJQzBnZENrZ0tpQXVOU3dnYUNBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsT3dvZ0lDQWdJQ0FnSUhSb2FYTXVYM2RsYVdkb2RGQnlaWFlnUFNCaklDOGdLSFFnTFNCaEtTd2dkR2hwY3k1ZmQyVnBaMmgwVG1WNGRDQTlJR01nTHlBb2JDQXRJRzRwTENCMGFHbHpMbDl2Wm1aelpYUlFjbVYySUQwZ2NpQXFJR2dzSUhSb2FYTXVYMjltWm5ObGRFNWxlSFFnUFNCdklDb2dhRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljRzlzWVhSbFh5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxuSmxjM1ZzZEVKMVptWmxjaXdnYnlBOUlIUm9hWE11YzJGdGNHeGxWbUZzZFdWekxDQmhJRDBnZEdocGN5NTJZV3gxWlZOcGVtVXNJR3dnUFNCbElDb2dZU3dnWXlBOUlHd2dMU0JoTENCb0lEMGdkR2hwY3k1ZmIyWm1jMlYwVUhKbGRpd2dkU0E5SUhSb2FYTXVYMjltWm5ObGRFNWxlSFFzSUdRZ1BTQjBhR2x6TGw5M1pXbG5hSFJRY21WMkxDQm1JRDBnZEdocGN5NWZkMlZwWjJoMFRtVjRkQ3dnYlNBOUlDaHVJQzBnZENrZ0x5QW9hU0F0SUhRcExDQjRJRDBnYlNBcUlHMHNJSFlnUFNCNElDb2diU3dnWnlBOUlDMWtJQ29nZGlBcklESWdLaUJrSUNvZ2VDQXRJR1FnS2lCdExDQndJRDBnS0RFZ0t5QmtLU0FxSUhZZ0t5QW9MVEV1TlNBdElESWdLaUJrS1NBcUlIZ2dLeUFvTFM0MUlDc2daQ2tnS2lCdElDc2dNU3dnWHlBOUlDZ3RNU0F0SUdZcElDb2dkaUFySUNneExqVWdLeUJtS1NBcUlIZ2dLeUF1TlNBcUlHMHNJSGtnUFNCbUlDb2dkaUF0SUdZZ0tpQjRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZaUE5SURBN0lHSWdJVDA5SUdFN0lDc3JZaWx5VzJKZElEMGdaeUFxSUc5YmFDQXJJR0pkSUNzZ2NDQXFJRzliWXlBcklHSmRJQ3NnWHlBcUlHOWJiQ0FySUdKZElDc2dlU0FxSUc5YmRTQXJJR0pkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5T3dvZ0lDQWdmUXA5TENCT1lTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1kyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZEN3Z2Jpd2dhU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbkJ2YkdGMFpWOG9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5NXlaWE4xYkhSQ2RXWm1aWElzSUc4Z1BTQjBhR2x6TG5OaGJYQnNaVlpoYkhWbGN5d2dZU0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0JzSUQwZ1pTQXFJR0VzSUdNZ1BTQnNJQzBnWVN3Z2FDQTlJQ2h1SUMwZ2RDa2dMeUFvYVNBdElIUXBMQ0IxSUQwZ01TQXRJR2c3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JrSUQwZ01Ec2daQ0FoUFQwZ1lUc2dLeXRrS1hKYlpGMGdQU0J2VzJNZ0t5QmtYU0FxSUhVZ0t5QnZXMndnS3lCa1hTQXFJR2c3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEk3Q2lBZ0lDQjlDbjBzSUVsb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCamJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwTENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljRzlzWVhSbFh5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXdlVk5oYlhCc1pWWmhiSFZsWHlobElDMGdNU2s3Q2lBZ0lDQjlDbjBzSUhwMElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTbDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ1BUMDlJSFp2YVdRZ01Da2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUIwY21GamF5QnVZVzFsSUdseklIVnVaR1ZtYVc1bFpDSXBPd29nSUNBZ0lDQWdJR2xtSUNoMElEMDlQU0IyYjJsa0lEQWdmSHdnZEM1c1pXNW5kR2dnUFQwOUlEQXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lWRWhTUlVVdVMyVjVabkpoYldWVWNtRmphem9nYm04Z2EyVjVabkpoYldWeklHbHVJSFJ5WVdOcklHNWhiV1ZrSUNJZ0t5QmxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNCbExDQjBhR2x6TG5ScGJXVnpJRDBnV21VdVkyOXVkbVZ5ZEVGeWNtRjVLSFFzSUhSb2FYTXVWR2x0WlVKMVptWmxjbFI1Y0dVcExDQjBhR2x6TG5aaGJIVmxjeUE5SUZwbExtTnZiblpsY25SQmNuSmhlU2h1TENCMGFHbHpMbFpoYkhWbFFuVm1abVZ5Vkhsd1pTa3NJSFJvYVhNdWMyVjBTVzUwWlhKd2IyeGhkR2x2YmlocElIeDhJSFJvYVhNdVJHVm1ZWFZzZEVsdWRHVnljRzlzWVhScGIyNHBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1OdmJuTjBjblZqZEc5eUxDQnVPd29nSUNBZ0lDQWdJR2xtSUNoMExuUnZTbE5QVGlBaFBUMGdkR2hwY3k1MGIwcFRUMDRwSUc0Z1BTQjBMblJ2U2xOUFRpaGxLVHNLSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUdVdWJtRnRaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJwYldWek9pQmFaUzVqYjI1MlpYSjBRWEp5WVhrb1pTNTBhVzFsY3l3Z1FYSnlZWGtwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVnpPaUJhWlM1amIyNTJaWEowUVhKeVlYa29aUzUyWVd4MVpYTXNJRUZ5Y21GNUtRb2dJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVaMlYwU1c1MFpYSndiMnhoZEdsdmJpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCcElDRTlQU0JsTGtSbFptRjFiSFJKYm5SbGNuQnZiR0YwYVc5dUlDWW1JQ2h1TG1sdWRHVnljRzlzWVhScGIyNGdQU0JwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWRIbHdaU0E5SUdVdVZtRnNkV1ZVZVhCbFRtRnRaU3dnYmpzS0lDQWdJSDBLSUNBZ0lFbHVkR1Z5Y0c5c1lXNTBSbUZqZEc5eWVVMWxkR2h2WkVScGMyTnlaWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRWxvS0hSb2FYTXVkR2x0WlhNc0lIUm9hWE11ZG1Gc2RXVnpMQ0IwYUdsekxtZGxkRlpoYkhWbFUybDZaU2dwTENCbEtUc0tJQ0FnSUgwS0lDQWdJRWx1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFeHBibVZoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJPWVNoMGFHbHpMblJwYldWekxDQjBhR2x6TG5aaGJIVmxjeXdnZEdocGN5NW5aWFJXWVd4MVpWTnBlbVVvS1N3Z1pTazdDaUFnSUNCOUNpQWdJQ0JKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUlRiVzl2ZEdnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUdnb2RHaHBjeTUwYVcxbGN5d2dkR2hwY3k1MllXeDFaWE1zSUhSb2FYTXVaMlYwVm1Gc2RXVlRhWHBsS0Nrc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFNXNTBaWEp3YjJ4aGRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFE3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhwek9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSFJvYVhNdVNXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrUkdselkzSmxkR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQlZjem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCMGFHbHpMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFeHBibVZoY2pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJSGx2T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIUm9hWE11U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtVMjF2YjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0Z1BTQWlkVzV6ZFhCd2IzSjBaV1FnYVc1MFpYSndiMnhoZEdsdmJpQm1iM0lnSWlBcklIUm9hWE11Vm1Gc2RXVlVlWEJsVG1GdFpTQXJJQ0lnYTJWNVpuSmhiV1VnZEhKaFkyc2dibUZ0WldRZ0lpQXJJSFJvYVhNdWJtRnRaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5RZ1BUMDlJSFp2YVdRZ01Da2dhV1lnS0dVZ0lUMDlJSFJvYVhNdVJHVm1ZWFZzZEVsdWRHVnljRzlzWVhScGIyNHBJSFJvYVhNdWMyVjBTVzUwWlhKd2IyeGhkR2x2YmloMGFHbHpMa1JsWm1GMWJIUkpiblJsY25CdmJHRjBhVzl1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3RsZVdaeVlXMWxWSEpoWTJzNklpd2diaWtzSUhSb2FYTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OeVpXRjBaVWx1ZEdWeWNHOXNZVzUwSUQwZ2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRWx1ZEdWeWNHOXNZWFJwYjI0b0tTQjdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tIUm9hWE11WTNKbFlYUmxTVzUwWlhKd2IyeGhiblFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhSb2FYTXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1JHbHpZM0psZEdVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZW5NN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RHaHBjeTVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUk1hVzVsWVhJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2RHaHBjeTVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUlRiVzl2ZEdnNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZVc4N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdaMlYwVm1Gc2RXVlRhWHBsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblpoYkhWbGN5NXNaVzVuZEdnZ0x5QjBhR2x6TG5ScGJXVnpMbXhsYm1kMGFEc0tJQ0FnSUgwS0lDQWdJSE5vYVdaMEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWRHbHRaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hSYmJsMGdLejBnWlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WTJGc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuUnBiV1Z6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsMFcyNWRJQ285SUdVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKcGJTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMblJwYldWekxDQnBJRDBnYmk1c1pXNW5kR2dzSUhJZ1BTQXdMQ0J2SUQwZ2FTQXRJREU3Q2lBZ0lDQWdJQ0FnWm05eUtEc2djaUFoUFQwZ2FTQW1KaUJ1VzNKZElEd2daVHNwS3l0eU93b2dJQ0FnSUNBZ0lHWnZjaWc3SUc4Z0lUMDlJQzB4SUNZbUlHNWJiMTBnUGlCME95a3RMVzg3Q2lBZ0lDQWdJQ0FnYVdZZ0tDc3JieXdnY2lBaFBUMGdNQ0I4ZkNCdklDRTlQU0JwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSElnUGowZ2J5QW1KaUFvYnlBOUlFMWhkR2d1YldGNEtHOHNJREVwTENCeUlEMGdieUF0SURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVoyVjBWbUZzZFdWVGFYcGxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEdsdFpYTWdQU0JhWlM1aGNuSmhlVk5zYVdObEtHNHNJSElzSUc4cExDQjBhR2x6TG5aaGJIVmxjeUE5SUZwbExtRnljbUY1VTJ4cFkyVW9kR2hwY3k1MllXeDFaWE1zSUhJZ0tpQmhMQ0J2SUNvZ1lTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RtRnNhV1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQWhNQ3dnZENBOUlIUm9hWE11WjJWMFZtRnNkV1ZUYVhwbEtDazdDaUFnSUNBZ0lDQWdkQ0F0SUUxaGRHZ3VabXh2YjNJb2RDa2dJVDA5SURBZ0ppWWdLR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGt0bGVXWnlZVzFsVkhKaFkyczZJRWx1ZG1Gc2FXUWdkbUZzZFdVZ2MybDZaU0JwYmlCMGNtRmpheTRpTENCMGFHbHpLU3dnWlNBOUlDRXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWRHbHRaWE1zSUdrZ1BTQjBhR2x6TG5aaGJIVmxjeXdnY2lBOUlHNHViR1Z1WjNSb093b2dJQ0FnSUNBZ0lISWdQVDA5SURBZ0ppWWdLR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGt0bGVXWnlZVzFsVkhKaFkyczZJRlJ5WVdOcklHbHpJR1Z0Y0hSNUxpSXNJSFJvYVhNcExDQmxJRDBnSVRFcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd095QmhJQ0U5UFNCeU95QmhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHNWJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdiQ0E5UFNBaWJuVnRZbVZ5SWlBbUppQnBjMDVoVGloc0tTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UzJWNVpuSmhiV1ZVY21GamF6b2dWR2x0WlNCcGN5QnViM1FnWVNCMllXeHBaQ0J1ZFcxaVpYSXVJaXdnZEdocGN5d2dZU3dnYkNrc0lHVWdQU0FoTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodklDRTlQU0J1ZFd4c0lDWW1JRzhnUGlCc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQlBkWFFnYjJZZ2IzSmtaWElnYTJWNWN5NGlMQ0IwYUdsekxDQmhMQ0JzTENCdktTd2daU0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHdzdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNocElDRTlQU0IyYjJsa0lEQWdKaVlnV21VdWFYTlVlWEJsWkVGeWNtRjVLR2twS1NCbWIzSW9iR1YwSUdFeElEMGdNQ3dnYkRFZ1BTQnBMbXhsYm1kMGFEc2dZVEVnSVQwOUlHd3hPeUFySzJFeEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JwVzJFeFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbHpUbUZPS0dNcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQldZV3gxWlNCcGN5QnViM1FnWVNCMllXeHBaQ0J1ZFcxaVpYSXVJaXdnZEdocGN5d2dZVEVzSUdNcExDQmxJRDBnSVRFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pUc0tJQ0FnSUgwS0lDQWdJRzl3ZEdsdGFYcGxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnV21VdVlYSnlZWGxUYkdsalpTaDBhR2x6TG5ScGJXVnpLU3dnZENBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvZEdocGN5NTJZV3gxWlhNcExDQnVJRDBnZEdocGN5NW5aWFJXWVd4MVpWTnBlbVVvS1N3Z2FTQTlJSFJvYVhNdVoyVjBTVzUwWlhKd2IyeGhkR2x2YmlncElEMDlQU0I1Ynl3Z2NpQTlJR1V1YkdWdVozUm9JQzBnTVN3Z2J5QTlJREU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Uc2dZU0E4SUhJN0lDc3JZU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ0lURXNJR01nUFNCbFcyRmRMQ0JvSUQwZ1pWdGhJQ3NnTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaklDRTlQU0JvSUNZbUlDaGhJQ0U5UFNBeElIeDhJR01nSVQwOUlHVmJNRjBwS1NCcFppQW9hU2tnYkNBOUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdZU0FxSUc0c0lHUWdQU0IxSUMwZ2Jpd2daaUE5SUhVZ0t5QnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRJRDBnTURzZ2JTQWhQVDBnYmpzZ0t5dHRLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUhSYmRTQXJJRzFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2g0SUNFOVBTQjBXMlFnS3lCdFhTQjhmQ0I0SUNFOVBTQjBXMllnS3lCdFhTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNJRDBnSVRBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHRWdJVDA5SUc4cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsVzI5ZElEMGdaVnRoWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZFRFZ1BTQmhJQ29nYml3Z1pERWdQU0J2SUNvZ2Jqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1l4SUQwZ01Ec2daakVnSVQwOUlHNDdJQ3NyWmpFcGRGdGtNU0FySUdZeFhTQTlJSFJiZFRFZ0t5Qm1NVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FySzI4N0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZiYjEwZ1BTQmxXM0pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRXhJRDBnY2lBcUlHNHNJR3d4SUQwZ2J5QXFJRzRzSUdNeElEMGdNRHNnWXpFZ0lUMDlJRzQ3SUNzcll6RXBkRnRzTVNBcklHTXhYU0E5SUhSYllURWdLeUJqTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ3NyYnpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4Z0lUMDlJR1V1YkdWdVozUm9JRDhnS0hSb2FYTXVkR2x0WlhNZ1BTQmFaUzVoY25KaGVWTnNhV05sS0dVc0lEQXNJRzhwTENCMGFHbHpMblpoYkhWbGN5QTlJRnBsTG1GeWNtRjVVMnhwWTJVb2RDd2dNQ3dnYnlBcUlHNHBLU0E2SUNoMGFHbHpMblJwYldWeklEMGdaU3dnZEdocGN5NTJZV3gxWlhNZ1BTQjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdXbVV1WVhKeVlYbFRiR2xqWlNoMGFHbHpMblJwYldWekxDQXdLU3dnZENBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvZEdocGN5NTJZV3gxWlhNc0lEQXBMQ0J1SUQwZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2l3Z2FTQTlJRzVsZHlCdUtIUm9hWE11Ym1GdFpTd2daU3dnZENrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5RZ1BTQjBhR2x6TG1OeVpXRjBaVWx1ZEdWeWNHOXNZVzUwTENCcE93b2dJQ0FnZlFwOU93cDZkQzV3Y205MGIzUjVjR1V1VkdsdFpVSjFabVpsY2xSNWNHVWdQU0JHYkc5aGRETXlRWEp5WVhrN0NucDBMbkJ5YjNSdmRIbHdaUzVXWVd4MVpVSjFabVpsY2xSNWNHVWdQU0JHYkc5aGRETXlRWEp5WVhrN0NucDBMbkJ5YjNSdmRIbHdaUzVFWldaaGRXeDBTVzUwWlhKd2IyeGhkR2x2YmlBOUlGVnpPd3AyWVhJZ1VXNGdQU0JqYkdGemN5QmxlSFJsYm1SeklIcDBJSHNLZlRzS1VXNHVjSEp2ZEc5MGVYQmxMbFpoYkhWbFZIbHdaVTVoYldVZ1BTQWlZbTl2YkNJN0NsRnVMbkJ5YjNSdmRIbHdaUzVXWVd4MVpVSjFabVpsY2xSNWNHVWdQU0JCY25KaGVUc0tVVzR1Y0hKdmRHOTBlWEJsTGtSbFptRjFiSFJKYm5SbGNuQnZiR0YwYVc5dUlEMGdlbk03Q2xGdUxuQnliM1J2ZEhsd1pTNUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSTWFXNWxZWElnUFNCMmIybGtJREE3Q2xGdUxuQnliM1J2ZEhsd1pTNUpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSVGJXOXZkR2dnUFNCMmIybGtJREE3Q25aaGNpQkNZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdlblFnZXdwOU93cENZUzV3Y205MGIzUjVjR1V1Vm1Gc2RXVlVlWEJsVG1GdFpTQTlJQ0pqYjJ4dmNpSTdDblpoY2lCQmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2VuUWdld3A5T3dwQmNpNXdjbTkwYjNSNWNHVXVWbUZzZFdWVWVYQmxUbUZ0WlNBOUlDSnVkVzFpWlhJaU93cDJZWElnUkdnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdOdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFzSUc0c0lHa3BPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSndiMnhoZEdWZktHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNdWNtVnpkV3gwUW5WbVptVnlMQ0J2SUQwZ2RHaHBjeTV6WVcxd2JHVldZV3gxWlhNc0lHRWdQU0IwYUdsekxuWmhiSFZsVTJsNlpTd2diQ0E5SUNodUlDMGdkQ2tnTHlBb2FTQXRJSFFwTENCaklEMGdaU0FxSUdFN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb0lEMGdZeUFySUdFN0lHTWdJVDA5SUdnN0lHTWdLejBnTkNsbmRDNXpiR1Z5Y0Vac1lYUW9jaXdnTUN3Z2J5d2dZeUF0SUdFc0lHOHNJR01zSUd3cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeU93b2dJQ0FnZlFwOUxDQlhhU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdlblFnZXdvZ0lDQWdTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1RHbHVaV0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRVJvS0hSb2FYTXVkR2x0WlhNc0lIUm9hWE11ZG1Gc2RXVnpMQ0IwYUdsekxtZGxkRlpoYkhWbFUybDZaU2dwTENCbEtUc0tJQ0FnSUgwS2ZUc0tWMmt1Y0hKdmRHOTBlWEJsTGxaaGJIVmxWSGx3WlU1aGJXVWdQU0FpY1hWaGRHVnlibWx2YmlJN0NsZHBMbkJ5YjNSdmRIbHdaUzVFWldaaGRXeDBTVzUwWlhKd2IyeGhkR2x2YmlBOUlGVnpPd3BYYVM1d2NtOTBiM1I1Y0dVdVNXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrVTIxdmIzUm9JRDBnZG05cFpDQXdPd3AyWVhJZ1MyNGdQU0JqYkdGemN5QmxlSFJsYm1SeklIcDBJSHNLZlRzS1MyNHVjSEp2ZEc5MGVYQmxMbFpoYkhWbFZIbHdaVTVoYldVZ1BTQWljM1J5YVc1bklqc0tTMjR1Y0hKdmRHOTBlWEJsTGxaaGJIVmxRblZtWm1WeVZIbHdaU0E5SUVGeWNtRjVPd3BMYmk1d2NtOTBiM1I1Y0dVdVJHVm1ZWFZzZEVsdWRHVnljRzlzWVhScGIyNGdQU0I2Y3pzS1MyNHVjSEp2ZEc5MGVYQmxMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFeHBibVZoY2lBOUlIWnZhV1FnTURzS1MyNHVjSEp2ZEc5MGVYQmxMa2x1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpGTnRiMjkwYUNBOUlIWnZhV1FnTURzS2RtRnlJRU55SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUI2ZENCN0NuMDdDa055TG5CeWIzUnZkSGx3WlM1V1lXeDFaVlI1Y0dWT1lXMWxJRDBnSW5abFkzUnZjaUk3Q25aaGNpQk1jaUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXRNU3dnYml3Z2FTQTlJSFZoS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQmxMQ0IwYUdsekxuUnlZV05yY3lBOUlHNHNJSFJvYVhNdVpIVnlZWFJwYjI0Z1BTQjBMQ0IwYUdsekxtSnNaVzVrVFc5a1pTQTlJR2tzSUhSb2FYTXVkWFZwWkNBOUlFVjBLQ2tzSUhSb2FYTXVaSFZ5WVhScGIyNGdQQ0F3SUNZbUlIUm9hWE11Y21WelpYUkVkWEpoZEdsdmJpZ3BPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSEJoY25ObEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkTENCdUlEMGdaUzUwY21GamEzTXNJR2tnUFNBeElDOGdLR1V1Wm5CeklIeDhJREVwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQXNJR0VnUFNCdUxteGxibWQwYURzZ2J5QWhQVDBnWVRzZ0t5dHZLWFF1Y0hWemFDaGhlU2h1VzI5ZEtTNXpZMkZzWlNocEtTazdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnZEdocGN5aGxMbTVoYldVc0lHVXVaSFZ5WVhScGIyNHNJSFFzSUdVdVlteGxibVJOYjJSbEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NpNTFkV2xrSUQwZ1pTNTFkV2xrTENCeU93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJYU3dnYmlBOUlHVXVkSEpoWTJ0ekxDQnBJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lCbExtNWhiV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUjFjbUYwYVc5dU9pQmxMbVIxY21GMGFXOXVMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRmphM002SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSFYxYVdRNklHVXVkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdZbXhsYm1STmIyUmxPaUJsTG1Kc1pXNWtUVzlrWlFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHNHViR1Z1WjNSb095QnlJQ0U5UFNCdk95QXJLM0lwZEM1d2RYTm9LSHAwTG5SdlNsTlBUaWh1VzNKZEtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdRM0psWVhSbFJuSnZiVTF2Y25Cb1ZHRnlaMlYwVTJWeGRXVnVZMlVvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RDNXNaVzVuZEdnc0lHOGdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ1BTQXdPeUJoSUR3Z2Nqc2dZU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQmJYU3dnWXlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCc0xuQjFjMmdvS0dFZ0t5QnlJQzBnTVNrZ0pTQnlMQ0JoTENBb1lTQXJJREVwSUNVZ2Npa3NJR011Y0hWemFDZ3dMQ0F4TENBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JhWlM1blpYUkxaWGxtY21GdFpVOXlaR1Z5S0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0JzSUQwZ1dtVXVjMjl5ZEdWa1FYSnlZWGtvYkN3Z01Td2dhQ2tzSUdNZ1BTQmFaUzV6YjNKMFpXUkJjbkpoZVNoakxDQXhMQ0JvS1N3Z0lXa2dKaVlnYkZzd1hTQTlQVDBnTUNBbUppQW9iQzV3ZFhOb0tISXBMQ0JqTG5CMWMyZ29ZMXN3WFNrcExDQnZMbkIxYzJnb2JtVjNJRUZ5S0NJdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUlnS3lCMFcyRmRMbTVoYldVZ0t5QWlYU0lzSUd3c0lHTXBMbk5qWVd4bEtERWdMeUJ1S1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3lobExDQXRNU3dnYnlrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1ptbHVaRUo1VG1GdFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbE93b2dJQ0FnSUNBZ0lHbG1JQ2doUVhKeVlYa3VhWE5CY25KaGVTaGxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVTdDaUFnSUNBZ0lDQWdJQ0FnSUc0Z1BTQnBMbWRsYjIxbGRISjVJQ1ltSUdrdVoyVnZiV1YwY25rdVlXNXBiV0YwYVc5dWN5QjhmQ0JwTG1GdWFXMWhkR2x2Ym5NN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FURWdQU0F3T3lCcE1TQThJRzR1YkdWdVozUm9PeUJwTVNzcktXbG1JQ2h1VzJreFhTNXVZVzFsSUQwOVBTQjBLU0J5WlhSMWNtNGdibHRwTVYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdRM0psWVhSbFEyeHBjSE5HY205dFRXOXljR2hVWVhKblpYUlRaWEYxWlc1alpYTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdlMzBzSUhJZ1BTQXZYaWhiWEhjdFhTby9LU2hiWEdSZEt5a2tMenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnUFNBd0xDQnNJRDBnWlM1c1pXNW5kR2c3SUdFZ1BDQnNPeUJoS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJR1ZiWVYwc0lHZ2dQU0JqTG01aGJXVXViV0YwWTJnb2NpazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaG9JQ1ltSUdndWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQm9XekZkTENCa0lEMGdhVnQxWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRZ2ZId2dLR2xiZFYwZ1BTQmtJRDBnVzEwcExDQmtMbkIxYzJnb1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRXhJR2x1SUdrcGJ5NXdkWE5vS0hSb2FYTXVRM0psWVhSbFJuSnZiVTF2Y25Cb1ZHRnlaMlYwVTJWeGRXVnVZMlVvWVRFc0lHbGJZVEZkTENCMExDQnVLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzg3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nY0dGeWMyVkJibWx0WVhScGIyNG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2doWlNrZ2NtVjBkWEp1SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrRnVhVzFoZEdsdmJrTnNhWEE2SUU1dklHRnVhVzFoZEdsdmJpQnBiaUJLVTA5T1RHOWhaR1Z5SUdSaGRHRXVJaWtzSUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQm1kVzVqZEdsdmJpaDFMQ0JrTENCbUxDQnRMQ0I0S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobUxteGxibWQwYUNBaFBUMGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JiWFN3Z1p5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnV21VdVpteGhkSFJsYmtwVFQwNG9aaXdnZGl3Z1p5d2diU2tzSUhZdWJHVnVaM1JvSUNFOVBTQXdJQ1ltSUhndWNIVnphQ2h1WlhjZ2RTaGtMQ0IyTENCbktTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxDQnBJRDBnVzEwc0lISWdQU0JsTG01aGJXVWdmSHdnSW1SbFptRjFiSFFpTENCdklEMGdaUzVtY0hNZ2ZId2dNekFzSUdFZ1BTQmxMbUpzWlc1a1RXOWtaU3dnYkNBOUlHVXViR1Z1WjNSb0lIeDhJQzB4TENCaklEMGdaUzVvYVdWeVlYSmphSGtnZkh3Z1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnTURzZ2RTQThJR011YkdWdVozUm9PeUIxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJR05iZFYwdWEyVjVjenNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0VvSVdRZ2ZId2daQzVzWlc1bmRHZ2dQVDA5SURBcEtTQnBaaUFvWkZzd1hTNXRiM0p3YUZSaGNtZGxkSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnZTMwc0lHMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYlNBOUlEQTdJRzBnUENCa0xteGxibWQwYURzZ2JTc3JLV2xtSUNoa1cyMWRMbTF2Y25Cb1ZHRnlaMlYwY3lrZ1ptOXlLR3hsZENCNElEMGdNRHNnZUNBOElHUmJiVjB1Ylc5eWNHaFVZWEpuWlhSekxteGxibWQwYURzZ2VDc3JLV1piWkZ0dFhTNXRiM0p3YUZSaGNtZGxkSE5iZUYxZElEMGdMVEU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGd4SUdsdUlHWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnVzEwc0lHY2dQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQWdQU0F3T3lCd0lDRTlQU0JrVzIxZExtMXZjbkJvVkdGeVoyVjBjeTVzWlc1bmRHZzdJQ3NyY0NsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnWkZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpNXdkWE5vS0Y4dWRHbHRaU2tzSUdjdWNIVnphQ2hmTG0xdmNuQm9WR0Z5WjJWMElEMDlQU0I0TVNBL0lERWdPaUF3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1d2RYTm9LRzVsZHlCQmNpZ2lMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sV3lJZ0t5QjRNU0FySUNKZElpd2dkaXdnWnlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JDQTlJR1l1YkdWdVozUm9JQ29nS0c4Z2ZId2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaakVnUFNBaUxtSnZibVZ6V3lJZ0t5QjBXM1ZkTG01aGJXVWdLeUFpWFNJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdUtFTnlMQ0JtTVNBcklDSXVjRzl6YVhScGIyNGlMQ0JrTENBaWNHOXpJaXdnYVNrc0lHNG9WMmtzSUdZeElDc2dJaTV4ZFdGMFpYSnVhVzl1SWl3Z1pDd2dJbkp2ZENJc0lHa3BMQ0J1S0VOeUxDQm1NU0FySUNJdWMyTmhiR1VpTENCa0xDQWljMk5zSWl3Z2FTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrdWJHVnVaM1JvSUQwOVBTQXdJRDhnYm5Wc2JDQTZJRzVsZHlCMGFHbHpLSElzSUd3c0lHa3NJR0VwT3dvZ0lDQWdmUW9nSUNBZ2NtVnpaWFJFZFhKaGRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVkSEpoWTJ0ekxDQjBJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ1pTNXNaVzVuZEdnN0lHNGdJVDA5SUdrN0lDc3JiaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeTUwY21GamEzTmJibDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0JOWVhSb0xtMWhlQ2gwTENCeUxuUnBiV1Z6VzNJdWRHbHRaWE11YkdWdVozUm9JQzBnTVYwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrZFhKaGRHbHZiaUE5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGNtbHRLQ2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlNBOUlEQTdJR1VnUENCMGFHbHpMblJ5WVdOcmN5NXNaVzVuZEdnN0lHVXJLeWwwYUdsekxuUnlZV05yYzF0bFhTNTBjbWx0S0RBc0lIUm9hWE11WkhWeVlYUnBiMjRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkbUZzYVdSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0FoTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z2RHaHBjeTUwY21GamEzTXViR1Z1WjNSb095QjBLeXNwWlNBOUlHVWdKaVlnZEdocGN5NTBjbUZqYTNOYmRGMHVkbUZzYVdSaGRHVW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtJQ0FnSUc5d2RHbHRhWHBsS0NrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pTQTlJREE3SUdVZ1BDQjBhR2x6TG5SeVlXTnJjeTVzWlc1bmRHZzdJR1VyS3lsMGFHbHpMblJ5WVdOcmMxdGxYUzV2Y0hScGJXbDZaU2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnZEdocGN5NTBjbUZqYTNNdWJHVnVaM1JvT3lCMEt5c3BaUzV3ZFhOb0tIUm9hWE11ZEhKaFkydHpXM1JkTG1Oc2IyNWxLQ2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbTVoYldVc0lIUm9hWE11WkhWeVlYUnBiMjRzSUdVc0lIUm9hWE11WW14bGJtUk5iMlJsS1RzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjI1emRISjFZM1J2Y2k1MGIwcFRUMDRvZEdocGN5azdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRzk1S0hNcElIc0tJQ0FnSUhOM2FYUmphQ2h6TG5SdlRHOTNaWEpEWVhObEtDa3Bld29nSUNBZ0lDQWdJR05oYzJVZ0luTmpZV3hoY2lJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpWkc5MVlteGxJam9LSUNBZ0lDQWdJQ0JqWVhObElDSm1iRzloZENJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpYm5WdFltVnlJam9LSUNBZ0lDQWdJQ0JqWVhObElDSnBiblJsWjJWeUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRUZ5T3dvZ0lDQWdJQ0FnSUdOaGMyVWdJblpsWTNSdmNpSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaWRtVmpkRzl5TWlJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpZG1WamRHOXlNeUk2Q2lBZ0lDQWdJQ0FnWTJGelpTQWlkbVZqZEc5eU5DSTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJEY2pzS0lDQWdJQ0FnSUNCallYTmxJQ0pqYjJ4dmNpSTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJDWVRzS0lDQWdJQ0FnSUNCallYTmxJQ0p4ZFdGMFpYSnVhVzl1SWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGZHBPd29nSUNBZ0lDQWdJR05oYzJVZ0ltSnZiMndpT2dvZ0lDQWdJQ0FnSUdOaGMyVWdJbUp2YjJ4bFlXNGlPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVVc0N0NpQWdJQ0FnSUNBZ1kyRnpaU0FpYzNSeWFXNW5Jam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUV0dU93b2dJQ0FnZlFvZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUJWYm5OMWNIQnZjblJsWkNCMGVYQmxUbUZ0WlRvZ0lpQXJJSE1wT3dwOUNtWjFibU4wYVc5dUlHRjVLSE1wSUhzS0lDQWdJR2xtSUNoekxuUjVjR1VnUFQwOUlIWnZhV1FnTUNrZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NKVVNGSkZSUzVMWlhsbWNtRnRaVlJ5WVdOck9pQjBjbUZqYXlCMGVYQmxJSFZ1WkdWbWFXNWxaQ3dnWTJGdUlHNXZkQ0J3WVhKelpTSXBPd29nSUNBZ2JHVjBJR1VnUFNCdmVTaHpMblI1Y0dVcE93b2dJQ0FnYVdZZ0tITXVkR2x0WlhNZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdXMTBzSUc0Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JhWlM1bWJHRjBkR1Z1U2xOUFRpaHpMbXRsZVhNc0lIUXNJRzRzSUNKMllXeDFaU0lwTENCekxuUnBiV1Z6SUQwZ2RDd2djeTUyWVd4MVpYTWdQU0J1T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUdVdWNHRnljMlVnSVQwOUlIWnZhV1FnTUNBL0lHVXVjR0Z5YzJVb2N5a2dPaUJ1WlhjZ1pTaHpMbTVoYldVc0lITXVkR2x0WlhNc0lITXVkbUZzZFdWekxDQnpMbWx1ZEdWeWNHOXNZWFJwYjI0cE93cDlDblpoY2lCT2FTQTlJSHNLSUNBZ0lHVnVZV0pzWldRNklDRXhMQW9nSUNBZ1ptbHNaWE02SUh0OUxBb2dJQ0FnWVdSa09pQm1kVzVqZEdsdmJpaHpMQ0JsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVsYm1GaWJHVmtJQ0U5UFNBaE1TQW1KaUFvZEdocGN5NW1hV3hsYzF0elhTQTlJR1VwT3dvZ0lDQWdmU3dLSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtVnVZV0pzWldRZ0lUMDlJQ0V4S1NCeVpYUjFjbTRnZEdocGN5NW1hV3hsYzF0elhUc0tJQ0FnSUgwc0NpQWdJQ0J5WlcxdmRtVTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNCa1pXeGxkR1VnZEdocGN5NW1hV3hsYzF0elhUc0tJQ0FnSUgwc0NpQWdJQ0JqYkdWaGNqb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NW1hV3hsY3lBOUlIdDlPd29nSUNBZ2ZRcDlMQ0I2WVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5d2djaUE5SUNFeExDQnZJRDBnTUN3Z1lTQTlJREFzSUd3c0lHTWdQU0JiWFRzS0lDQWdJQ0FnSUNCMGFHbHpMbTl1VTNSaGNuUWdQU0IyYjJsa0lEQXNJSFJvYVhNdWIyNU1iMkZrSUQwZ1pTd2dkR2hwY3k1dmJsQnliMmR5WlhOeklEMGdkQ3dnZEdocGN5NXZia1Z5Y205eUlEMGdiaXdnZEdocGN5NXBkR1Z0VTNSaGNuUWdQU0JtZFc1amRHbHZiaWhvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR0VyS3l3Z2NpQTlQVDBnSVRFZ0ppWWdhUzV2YmxOMFlYSjBJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNXZibE4wWVhKMEtHZ3NJRzhzSUdFcExDQnlJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1cGRHVnRSVzVrSUQwZ1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNCdkt5c3NJR2t1YjI1UWNtOW5jbVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YjI1UWNtOW5jbVZ6Y3lob0xDQnZMQ0JoS1N3Z2J5QTlQVDBnWVNBbUppQW9jaUE5SUNFeExDQnBMbTl1VEc5aFpDQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWIyNU1iMkZrS0NrcE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWFYUmxiVVZ5Y205eUlEMGdablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBMbTl1UlhKeWIzSWdJVDA5SUhadmFXUWdNQ0FtSmlCcExtOXVSWEp5YjNJb2FDazdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXlaWE52YkhabFZWSk1JRDBnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiQ0EvSUd3b2FDa2dPaUJvT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YzJWMFZWSk1UVzlrYVdacFpYSWdQU0JtZFc1amRHbHZiaWhvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnNJRDBnYUN3Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbUZrWkVoaGJtUnNaWElnUFNCbWRXNWpkR2x2Ymlob0xDQjFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCakxuQjFjMmdvYUN3Z2RTa3NJSFJvYVhNN0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1eVpXMXZkbVZJWVc1a2JHVnlJRDBnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJR011YVc1a1pYaFBaaWhvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIVWdJVDA5SUMweElDWW1JR011YzNCc2FXTmxLSFVzSURJcExDQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WjJWMFNHRnVaR3hsY2lBOUlHWjFibU4wYVc5dUtHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMUlEMGdNQ3dnWkNBOUlHTXViR1Z1WjNSb095QjFJRHdnWkRzZ2RTQXJQU0F5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnWTF0MVhTd2diU0E5SUdOYmRTQXJJREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHWXVaMnh2WW1Gc0lDWW1JQ2htTG14aGMzUkpibVJsZUNBOUlEQXBMQ0JtTG5SbGMzUW9hQ2twSUhKbGRIVnliaUJ0T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNuMHNJR3g1SUQwZ2JtVjNJSHBoTENCaWRDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSFJvYVhNdWJXRnVZV2RsY2lBOUlHVWdJVDA5SUhadmFXUWdNQ0EvSUdVZ09pQnNlU3dnZEdocGN5NWpjbTl6YzA5eWFXZHBiaUE5SUNKaGJtOXVlVzF2ZFhNaUxDQjBhR2x6TG5kcGRHaERjbVZrWlc1MGFXRnNjeUE5SUNFeExDQjBhR2x6TG5CaGRHZ2dQU0FpSWl3Z2RHaHBjeTV5WlhOdmRYSmpaVkJoZEdnZ1BTQWlJaXdnZEdocGN5NXlaWEYxWlhOMFNHVmhaR1Z5SUQwZ2UzMDdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tDa2dlMzBLSUNBZ0lHeHZZV1JCYzNsdVl5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmJXbHpaU2htZFc1amRHbHZiaWhwTENCeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc0dWJHOWhaQ2hsTENCcExDQjBMQ0J5S1RzS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJSEJoY25ObEtDa2dlMzBLSUNBZ0lITmxkRU55YjNOelQzSnBaMmx1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqY205emMwOXlhV2RwYmlBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJYYVhSb1EzSmxaR1Z1ZEdsaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJRWVhSb0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d1lYUm9JRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGSmxjMjkxY21ObFVHRjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbVZ6YjNWeVkyVlFZWFJvSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRkpsY1hWbGMzUklaV0ZrWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRcDlMQ0IwYmlBOUlIdDlMQ0JaZENBOUlHTnNZWE56SUdWNGRHVnVaSE1nWW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzYjJGa0tHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JsSUQwOVBTQjJiMmxrSURBZ0ppWWdLR1VnUFNBaUlpa3NJSFJvYVhNdWNHRjBhQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaGxJRDBnZEdocGN5NXdZWFJvSUNzZ1pTa3NJR1VnUFNCMGFHbHpMbTFoYm1GblpYSXVjbVZ6YjJ4MlpWVlNUQ2hsS1RzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUU1cExtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCcFppQW9jaUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnZEdocGN5NXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLU3dnYzJWMFZHbHRaVzkxZENnb0tUMCtld29nSUNBZ0lDQWdJQ0FnSUNCMElDWW1JSFFvY2lrc0lIUm9hWE11YldGdVlXZGxjaTVwZEdWdFJXNWtLR1VwT3dvZ0lDQWdJQ0FnSUgwc0lEQXBMQ0J5T3dvZ0lDQWdJQ0FnSUdsbUlDaDBibHRsWFNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSdVcyVmRMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IyNU1iMkZrT2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IyNVFjbTluY21WemN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl1UlhKeWIzSTZJR2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEc1YlpWMGdQU0JiWFN3Z2RHNWJaVjB1Y0hWemFDaDdDaUFnSUNBZ0lDQWdJQ0FnSUc5dVRHOWhaRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdiMjVRY205bmNtVnpjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdiMjVGY25KdmNqb2dhUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYm1WM0lGSmxjWFZsYzNRb1pTd2dld29nSUNBZ0lDQWdJQ0FnSUNCb1pXRmtaWEp6T2lCdVpYY2dTR1ZoWkdWeWN5aDBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSXBMQW9nSUNBZ0lDQWdJQ0FnSUNCamNtVmtaVzUwYVdGc2N6b2dkR2hwY3k1M2FYUm9RM0psWkdWdWRHbGhiSE1nUHlBaWFXNWpiSFZrWlNJZ09pQWljMkZ0WlMxdmNtbG5hVzRpQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ1ptVjBZMmdvYnlrdWRHaGxiaWdvWVNrOVBuc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHRXVjM1JoZEhWeklEMDlQU0F5TURBZ2ZId2dZUzV6ZEdGMGRYTWdQVDA5SURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hoTG5OMFlYUjFjeUE5UFQwZ01DQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtacGJHVk1iMkZrWlhJNklFaFVWRkFnVTNSaGRIVnpJREFnY21WalpXbDJaV1F1SWlrc0lIUjVjR1Z2WmlCU1pXRmtZV0pzWlZOMGNtVmhiU0ErSUNKMUlpQjhmQ0JoTG1KdlpIa3VaMlYwVW1WaFpHVnlJRDA5UFNCMmIybGtJREFwSUhKbGRIVnliaUJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0IwYmx0bFhTd2dZeUE5SUdFdVltOWtlUzVuWlhSU1pXRmtaWElvS1N3Z2FDQTlJR0V1YUdWaFpHVnljeTVuWlhRb0lrTnZiblJsYm5RdFRHVnVaM1JvSWlrc0lIVWdQU0JvSUQ4Z2NHRnljMlZKYm5Rb2FDa2dPaUF3TENCa0lEMGdkU0FoUFQwZ01Dd2daaUE5SURBc0lHMGdQU0J1WlhjZ1VtVmhaR0ZpYkdWVGRISmxZVzBvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBZWEowSUNoNEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdkaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTXVjbVZoWkNncExuUm9aVzRvS0hzZ1pHOXVaVG9nWnlBc0lIWmhiSFZsT2lCd0lDQjlLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobktTQjRMbU5zYjNObEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdZZ0t6MGdjQzVpZVhSbFRHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUc1bGR5QlFjbTluY21WemMwVjJaVzUwS0NKd2NtOW5jbVZ6Y3lJc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGJtZDBhRU52YlhCMWRHRmliR1U2SUdRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYjJGa1pXUTZJR1lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiM1JoYkRvZ2RRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1SUQwZ01Dd2dZaUE5SUd3dWJHVnVaM1JvT3lCNUlEd2dZanNnZVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJJRDBnYkZ0NVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFdWIyNVFjbTluY21WemN5QW1KaUJCTG05dVVISnZaM0psYzNNb1h5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUM1bGJuRjFaWFZsS0hBcExDQjJLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVW1WemNHOXVjMlVvYlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjBhSEp2ZHlCRmNuSnZjaWhnWm1WMFkyZ2dabTl5SUNJa2UyRXVkWEpzZlNJZ2NtVnpjRzl1WkdWa0lIZHBkR2dnSkh0aExuTjBZWFIxYzMwNklDUjdZUzV6ZEdGMGRYTlVaWGgwZldBcE93b2dJQ0FnSUNBZ0lIMHBMblJvWlc0b0tHRXBQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNoMGFHbHpMbkpsYzNCdmJuTmxWSGx3WlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0poY25KaGVXSjFabVpsY2lJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHRXVZWEp5WVhsQ2RXWm1aWElvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbUpzYjJJaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhMbUpzYjJJb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1SdlkzVnRaVzUwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTNTBaWGgwS0NrdWRHaGxiaWdvYkNrOVBtNWxkeUJFVDAxUVlYSnpaWElvS1M1d1lYSnpaVVp5YjIxVGRISnBibWNvYkN3Z2RHaHBjeTV0YVcxbFZIbHdaU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlhbk52YmlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHRXVhbk52YmlncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTNTBaWGgwS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLQ2hoS1QwK2V3b2dJQ0FnSUNBZ0lDQWdJQ0JPYVM1aFpHUW9aU3dnWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkRzViWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQjBibHRsWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTUN3Z2FDQTlJR3d1YkdWdVozUm9PeUJqSUR3Z2FEc2dZeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYkZ0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVXViMjVNYjJGa0lDWW1JSFV1YjI1TWIyRmtLR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2t1WTJGMFkyZ29LR0VwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkRzViWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc0lEMDlQU0IyYjJsa0lEQXBJSFJvY205M0lIUm9hWE11YldGdVlXZGxjaTVwZEdWdFJYSnliM0lvWlNrc0lHRTdDaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0IwYmx0bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUd3dWJHVnVaM1JvT3lCaklEd2dhRHNnWXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JGdGpYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1YjI1RmNuSnZjaUFtSmlCMUxtOXVSWEp5YjNJb1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dFlXNWhaMlZ5TG1sMFpXMUZjbkp2Y2lobEtUc0tJQ0FnSUNBZ0lDQjlLUzVtYVc1aGJHeDVLQ2dwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXRnVZV2RsY2k1cGRHVnRSVzVrS0dVcE93b2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxtMWhibUZuWlhJdWFYUmxiVk4wWVhKMEtHVXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtVnpjRzl1YzJWVWVYQmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlaWE53YjI1elpWUjVjR1VnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBUV2x0WlZSNWNHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiV1ZVZVhCbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dZM2tnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnZlFvZ0lDQWdiRzloWkNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBhR2x6TENCdklEMGdibVYzSUZsMEtIUm9hWE11YldGdVlXZGxjaWs3Q2lBZ0lDQWdJQ0FnYnk1elpYUlFZWFJvS0hSb2FYTXVjR0YwYUNrc0lHOHVjMlYwVW1WeGRXVnpkRWhsWVdSbGNpaDBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSXBMQ0J2TG5ObGRGZHBkR2hEY21Wa1pXNTBhV0ZzY3loMGFHbHpMbmRwZEdoRGNtVmtaVzUwYVdGc2N5a3NJRzh1Ykc5aFpDaGxMQ0JtZFc1amRHbHZiaWhoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMEtISXVjR0Z5YzJVb1NsTlBUaTV3WVhKelpTaGhLU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQ4Z2FTaHNLU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9iQ2tzSUhJdWJXRnVZV2RsY2k1cGRHVnRSWEp5YjNJb1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0JsTG14bGJtZDBhRHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JNY2k1d1lYSnpaU2hsVzI1ZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1d2RYTm9LR2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLZlN3Z2FIa2dQU0JqYkdGemN5QmxlSFJsYm1SeklHSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHOWhaQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMQ0J2SUQwZ1cxMHNJR0VnUFNCdVpYY2dkbUVzSUd3Z1BTQnVaWGNnV1hRb2RHaHBjeTV0WVc1aFoyVnlLVHNLSUNBZ0lDQWdJQ0JzTG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z2JDNXpaWFJTWlhOd2IyNXpaVlI1Y0dVb0ltRnljbUY1WW5WbVptVnlJaWtzSUd3dWMyVjBVbVZ4ZFdWemRFaGxZV1JsY2loMGFHbHpMbkpsY1hWbGMzUklaV0ZrWlhJcExDQnNMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWh5TG5kcGRHaERjbVZrWlc1MGFXRnNjeWs3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0F3T3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdnb2RTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc0xteHZZV1FvWlZ0MVhTd2dablZ1WTNScGIyNG9aQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0J5TG5CaGNuTmxLR1FzSUNFd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOWJkVjBnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHWXVkMmxrZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQm1MbWhsYVdkb2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNKdFlYUTZJR1l1Wm05eWJXRjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxcGNHMWhjSE02SUdZdWJXbHdiV0Z3Y3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z1l5QXJQU0F4TENCaklEMDlQU0EySUNZbUlDaG1MbTFwY0cxaGNFTnZkVzUwSUQwOVBTQXhJQ1ltSUNoaExtMXBia1pwYkhSbGNpQTlJSFIwS1N3Z1lTNXBiV0ZuWlNBOUlHOHNJR0V1Wm05eWJXRjBJRDBnWmk1bWIzSnRZWFFzSUdFdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2RDQW1KaUIwS0dFcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dVcEtTQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdaUzVzWlc1bmRHZzdJSFVnUENCa095QXJLM1VwYUNoMUtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUd3dWJHOWhaQ2hsTENCbWRXNWpkR2x2YmloMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnY2k1d1lYSnpaU2gxTENBaE1DazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtMbWx6UTNWaVpXMWhjQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0JrTG0xcGNHMWhjSE11YkdWdVozUm9JQzhnWkM1dGFYQnRZWEJEYjNWdWREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JTQTlJREE3SUcwZ1BDQm1PeUJ0S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzliYlYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXBjRzFoY0hNNklGdGRDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIZ2dQU0F3T3lCNElEd2daQzV0YVhCdFlYQkRiM1Z1ZERzZ2VDc3JLVzliYlYwdWJXbHdiV0Z3Y3k1d2RYTm9LR1F1Yldsd2JXRndjMXR0SUNvZ1pDNXRhWEJ0WVhCRGIzVnVkQ0FySUhoZEtTd2diMXR0WFM1bWIzSnRZWFFnUFNCa0xtWnZjbTFoZEN3Z2IxdHRYUzUzYVdSMGFDQTlJR1F1ZDJsa2RHZ3NJRzliYlYwdWFHVnBaMmgwSUQwZ1pDNW9aV2xuYUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaExtbHRZV2RsSUQwZ2J6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR0V1YVcxaFoyVXVkMmxrZEdnZ1BTQmtMbmRwWkhSb0xDQmhMbWx0WVdkbExtaGxhV2RvZENBOUlHUXVhR1ZwWjJoMExDQmhMbTFwY0cxaGNITWdQU0JrTG0xcGNHMWhjSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHUXViV2x3YldGd1EyOTFiblFnUFQwOUlERWdKaVlnS0dFdWJXbHVSbWxzZEdWeUlEMGdkSFFwTENCaExtWnZjbTFoZENBOUlHUXVabTl5YldGMExDQmhMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXNJSFFnSmlZZ2RDaGhLVHNLSUNBZ0lDQWdJQ0I5TENCdUxDQnBLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZVHNLSUNBZ0lIMEtmU3dnVW5JZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdZWFJvSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1VnUFNCMGFHbHpMbkJoZEdnZ0t5QmxLU3dnWlNBOUlIUm9hWE11YldGdVlXZGxjaTV5WlhOdmJIWmxWVkpNS0dVcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnYnlBOUlFNXBMbWRsZENobEtUc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2NpNXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLU3dnYzJWMFZHbHRaVzkxZENobWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBbUppQjBLRzhwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlMQ0F3S1N3Z2J6c0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIRnpLQ0pwYldjaUtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnNLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm9LQ2tzSUU1cExtRmtaQ2hsTENCMGFHbHpLU3dnZENBbUppQjBLSFJvYVhNcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWXloMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdnb0tTd2dhU0FtSmlCcEtIVXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSnNiMkZrSWl3Z2JDd2dJVEVwTENCaExuSmxiVzkyWlVWMlpXNTBUR2x6ZEdWdVpYSW9JbVZ5Y205eUlpd2dZeXdnSVRFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1lTNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnNiMkZrSWl3Z2JDd2dJVEVwTENCaExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltVnljbTl5SWl3Z1l5d2dJVEVwTENCbExuTjFZbk4wY2lnd0xDQTFLU0FoUFQwZ0ltUmhkR0U2SWlBbUppQjBhR2x6TG1OeWIzTnpUM0pwWjJsdUlDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdVkzSnZjM05QY21sbmFXNGdQU0IwYUdsekxtTnliM056VDNKcFoybHVLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtTd2dZUzV6Y21NZ1BTQmxMQ0JoT3dvZ0lDQWdmUXA5TENCR2FDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1luUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5QnJhU3dnYnlBOUlHNWxkeUJTY2loMGFHbHpMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJRzh1YzJWMFEzSnZjM05QY21sbmFXNG9kR2hwY3k1amNtOXpjMDl5YVdkcGJpa3NJRzh1YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnTURzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCc0tHTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5NXNiMkZrS0dWYlkxMHNJR1oxYm1OMGFXOXVLR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhJdWFXMWhaMlZ6VzJOZElEMGdhQ3dnWVNzckxDQmhJRDA5UFNBMklDWW1JQ2h5TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhRZ0ppWWdkQ2h5S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzSUhadmFXUWdNQ3dnYVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJREE3SUdNZ1BDQmxMbXhsYm1kMGFEc2dLeXRqS1d3b1l5azdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlISTdDaUFnSUNCOUNuMHNJRTVvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRzVsZHlCeGJpd2dZU0E5SUc1bGR5QlpkQ2gwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaExuTmxkRkpsYzNCdmJuTmxWSGx3WlNnaVlYSnlZWGxpZFdabVpYSWlLU3dnWVM1elpYUlNaWEYxWlhOMFNHVmhaR1Z5S0hSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2lrc0lHRXVjMlYwVUdGMGFDaDBhR2x6TG5CaGRHZ3BMQ0JoTG5ObGRGZHBkR2hEY21Wa1pXNTBhV0ZzY3loeUxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrc0lHRXViRzloWkNobExDQm1kVzVqZEdsdmJpaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2NpNXdZWEp6WlNoc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSVdNZ2ZId2dLR011YVcxaFoyVWdJVDA5SUhadmFXUWdNQ0EvSUc4dWFXMWhaMlVnUFNCakxtbHRZV2RsSURvZ1l5NWtZWFJoSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1YVcxaFoyVXVkMmxrZEdnZ1BTQmpMbmRwWkhSb0xDQnZMbWx0WVdkbExtaGxhV2RvZENBOUlHTXVhR1ZwWjJoMExDQnZMbWx0WVdkbExtUmhkR0VnUFNCakxtUmhkR0VwTENCdkxuZHlZWEJUSUQwZ1l5NTNjbUZ3VXlBaFBUMGdkbTlwWkNBd0lEOGdZeTUzY21Gd1V5QTZJSFowTENCdkxuZHlZWEJVSUQwZ1l5NTNjbUZ3VkNBaFBUMGdkbTlwWkNBd0lEOGdZeTUzY21Gd1ZDQTZJSFowTENCdkxtMWhaMFpwYkhSbGNpQTlJR011YldGblJtbHNkR1Z5SUNFOVBTQjJiMmxrSURBZ1B5QmpMbTFoWjBacGJIUmxjaUE2SUhSMExDQnZMbTFwYmtacGJIUmxjaUE5SUdNdWJXbHVSbWxzZEdWeUlDRTlQU0IyYjJsa0lEQWdQeUJqTG0xcGJrWnBiSFJsY2lBNklIUjBMQ0J2TG1GdWFYTnZkSEp2Y0hrZ1BTQmpMbUZ1YVhOdmRISnZjSGtnSVQwOUlIWnZhV1FnTUNBL0lHTXVZVzVwYzI5MGNtOXdlU0E2SURFc0lHTXVaVzVqYjJScGJtY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NWxibU52WkdsdVp5QTlJR011Wlc1amIyUnBibWNwTENCakxtWnNhWEJaSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Wm14cGNGa2dQU0JqTG1ac2FYQlpLU3dnWXk1bWIzSnRZWFFnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTVtYjNKdFlYUWdQU0JqTG1admNtMWhkQ2tzSUdNdWRIbHdaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMblI1Y0dVZ1BTQmpMblI1Y0dVcExDQmpMbTFwY0cxaGNITWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXRhWEJ0WVhCeklEMGdZeTV0YVhCdFlYQnpMQ0J2TG0xcGJrWnBiSFJsY2lBOUlGVnBLU3dnWXk1dGFYQnRZWEJEYjNWdWRDQTlQVDBnTVNBbUppQW9ieTV0YVc1R2FXeDBaWElnUFNCMGRDa3NJR011WjJWdVpYSmhkR1ZOYVhCdFlYQnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdZeTVuWlc1bGNtRjBaVTFwY0cxaGNITXBMQ0J2TG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhRZ0ppWWdkQ2h2TENCaktTazdDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTa3NJRzg3Q2lBZ0lDQjlDbjBzSUVKb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lHOTBMQ0J2SUQwZ2JtVjNJRkp5S0hSb2FYTXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHOHVjMlYwUTNKdmMzTlBjbWxuYVc0b2RHaHBjeTVqY205emMwOXlhV2RwYmlrc0lHOHVjMlYwVUdGMGFDaDBhR2x6TG5CaGRHZ3BMQ0J2TG14dllXUW9aU3dnWm5WdVkzUnBiMjRvWVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5TG1sdFlXZGxJRDBnWVN3Z2NpNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBJQ0U5UFNCMmIybGtJREFnSmlZZ2RDaHlLVHNLSUNBZ0lDQWdJQ0I5TENCdUxDQnBLU3dnY2pzS0lDQWdJSDBLZlN3Z1FuUWdQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKTWFXZG9kQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnWVdVb1pTa3NJSFJvYVhNdWFXNTBaVzV6YVhSNUlEMGdkRHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTVwYm5SbGJuTnBkSGtnUFNCbExtbHVkR1Z1YzJsMGVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWIySnFaV04wTG1OdmJHOXlJRDBnZEdocGN5NWpiMnh2Y2k1blpYUklaWGdvS1N3Z2RDNXZZbXBsWTNRdWFXNTBaVzV6YVhSNUlEMGdkR2hwY3k1cGJuUmxibk5wZEhrc0lIUm9hWE11WjNKdmRXNWtRMjlzYjNJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEM1dlltcGxZM1F1WjNKdmRXNWtRMjlzYjNJZ1BTQjBhR2x6TG1keWIzVnVaRU52Ykc5eUxtZGxkRWhsZUNncEtTd2dkR2hwY3k1a2FYTjBZVzVqWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwTG05aWFtVmpkQzVrYVhOMFlXNWpaU0E5SUhSb2FYTXVaR2x6ZEdGdVkyVXBMQ0IwYUdsekxtRnVaMnhsSUNFOVBTQjJiMmxrSURBZ0ppWWdLSFF1YjJKcVpXTjBMbUZ1WjJ4bElEMGdkR2hwY3k1aGJtZHNaU2tzSUhSb2FYTXVaR1ZqWVhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvZEM1dlltcGxZM1F1WkdWallYa2dQU0IwYUdsekxtUmxZMkY1S1N3Z2RHaHBjeTV3Wlc1MWJXSnlZU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbTlpYW1WamRDNXdaVzUxYldKeVlTQTlJSFJvYVhNdWNHVnVkVzFpY21FcExDQjBhR2x6TG5Ob1lXUnZkeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbTlpYW1WamRDNXphR0ZrYjNjZ1BTQjBhR2x6TG5Ob1lXUnZkeTUwYjBwVFQwNG9LU2tzSUhRN0NpQWdJQ0I5Q24wN0NrSjBMbkJ5YjNSdmRIbHdaUzVwYzB4cFoyaDBJRDBnSVRBN0NuWmhjaUJWWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nUW5RZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2JpazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtobGJXbHpjR2hsY21WTWFXZG9kQ0lzSUhSb2FYTXVjRzl6YVhScGIyNHVZMjl3ZVNoT1pTNUVaV1poZFd4MFZYQXBMQ0IwYUdsekxuVndaR0YwWlUxaGRISnBlQ2dwTENCMGFHbHpMbWR5YjNWdVpFTnZiRzl5SUQwZ2JtVjNJR0ZsS0hRcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFSjBMbkJ5YjNSdmRIbHdaUzVqYjNCNUxtTmhiR3dvZEdocGN5d2daU2tzSUhSb2FYTXVaM0p2ZFc1a1EyOXNiM0l1WTI5d2VTaGxMbWR5YjNWdVpFTnZiRzl5S1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLVldFdWNISnZkRzkwZVhCbExtbHpTR1Z0YVhOd2FHVnlaVXhwWjJoMElEMGdJVEE3Q25aaGNpQmZZeUE5SUc1bGR5QndaU3dnVFdNZ1BTQnVaWGNnVFN3Z1ltTWdQU0J1WlhjZ1RTd2diVzhnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbU5oYldWeVlTQTlJR1VzSUhSb2FYTXVZbWxoY3lBOUlEQXNJSFJvYVhNdWJtOXliV0ZzUW1saGN5QTlJREFzSUhSb2FYTXVjbUZrYVhWeklEMGdNU3dnZEdocGN5NWliSFZ5VTJGdGNHeGxjeUE5SURnc0lIUm9hWE11YldGd1UybDZaU0E5SUc1bGR5QllLRFV4TWl3Z05URXlLU3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxtMWhjRkJoYzNNZ1BTQnVkV3hzTENCMGFHbHpMbTFoZEhKcGVDQTlJRzVsZHlCd1pTd2dkR2hwY3k1aGRYUnZWWEJrWVhSbElEMGdJVEFzSUhSb2FYTXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1ZlpuSjFjM1IxYlNBOUlHNWxkeUJFY2l3Z2RHaHBjeTVmWm5KaGJXVkZlSFJsYm5SeklEMGdibVYzSUZnb01Td2dNU2tzSUhSb2FYTXVYM1pwWlhkd2IzSjBRMjkxYm5RZ1BTQXhMQ0IwYUdsekxsOTJhV1YzY0c5eWRITWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJXWlNnd0xDQXdMQ0F4TENBeEtRb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUNpQWdJQ0JuWlhSV2FXVjNjRzl5ZEVOdmRXNTBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTJhV1YzY0c5eWRFTnZkVzUwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBSbkoxYzNSMWJTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZlpuSjFjM1IxYlRzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBZMlZ6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGdFpYSmhMQ0J1SUQwZ2RHaHBjeTV0WVhSeWFYZzdDaUFnSUNBZ0lDQWdUV011YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtHVXViV0YwY21sNFYyOXliR1FwTENCMExuQnZjMmwwYVc5dUxtTnZjSGtvVFdNcExDQmlZeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b1pTNTBZWEpuWlhRdWJXRjBjbWw0VjI5eWJHUXBMQ0IwTG14dmIydEJkQ2hpWXlrc0lIUXVkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9LU3dnWDJNdWJYVnNkR2x3YkhsTllYUnlhV05sY3loMExuQnliMnBsWTNScGIyNU5ZWFJ5YVhnc0lIUXViV0YwY21sNFYyOXliR1JKYm5abGNuTmxLU3dnZEdocGN5NWZabkoxYzNSMWJTNXpaWFJHY205dFVISnZhbVZqZEdsdmJrMWhkSEpwZUNoZll5a3NJRzR1YzJWMEtDNDFMQ0F3TENBd0xDQXVOU3dnTUN3Z0xqVXNJREFzSUM0MUxDQXdMQ0F3TENBdU5Td2dMalVzSURBc0lEQXNJREFzSURFcExDQnVMbTExYkhScGNHeDVLSFF1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQ2tzSUc0dWJYVnNkR2x3Ykhrb2RDNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXBPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZtbGxkM0J2Y25Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5MmFXVjNjRzl5ZEhOYlpWMDdDaUFnSUNCOUNpQWdJQ0JuWlhSR2NtRnRaVVY0ZEdWdWRITW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyWnlZVzFsUlhoMFpXNTBjenNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVhBZ0ppWWdkR2hwY3k1dFlYQXVaR2x6Y0c5elpTZ3BMQ0IwYUdsekxtMWhjRkJoYzNNZ0ppWWdkR2hwY3k1dFlYQlFZWE56TG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5oYldWeVlTQTlJR1V1WTJGdFpYSmhMbU5zYjI1bEtDa3NJSFJvYVhNdVltbGhjeUE5SUdVdVltbGhjeXdnZEdocGN5NXlZV1JwZFhNZ1BTQmxMbkpoWkdsMWN5d2dkR2hwY3k1dFlYQlRhWHBsTG1OdmNIa29aUzV0WVhCVGFYcGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjdmVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aWFXRnpJQ0U5UFNBd0lDWW1JQ2hsTG1KcFlYTWdQU0IwYUdsekxtSnBZWE1wTENCMGFHbHpMbTV2Y20xaGJFSnBZWE1nSVQwOUlEQWdKaVlnS0dVdWJtOXliV0ZzUW1saGN5QTlJSFJvYVhNdWJtOXliV0ZzUW1saGN5a3NJSFJvYVhNdWNtRmthWFZ6SUNFOVBTQXhJQ1ltSUNobExuSmhaR2wxY3lBOUlIUm9hWE11Y21Ga2FYVnpLU3dnS0hSb2FYTXViV0Z3VTJsNlpTNTRJQ0U5UFNBMU1USWdmSHdnZEdocGN5NXRZWEJUYVhwbExua2dJVDA5SURVeE1pa2dKaVlnS0dVdWJXRndVMmw2WlNBOUlIUm9hWE11YldGd1UybDZaUzUwYjBGeWNtRjVLQ2twTENCbExtTmhiV1Z5WVNBOUlIUm9hWE11WTJGdFpYSmhMblJ2U2xOUFRpZ2hNU2t1YjJKcVpXTjBMQ0JrWld4bGRHVWdaUzVqWVcxbGNtRXViV0YwY21sNExDQmxPd29nSUNBZ2ZRcDlMQ0JQWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYlc4Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dkWFFvTlRBc0lERXNJQzQxTENBMU1EQXBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxtWnZZM1Z6SUQwZ01Uc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwWTJWektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRnRaWEpoTENCdUlEMGdaSElnS2lBeUlDb2daUzVoYm1kc1pTQXFJSFJvYVhNdVptOWpkWE1zSUdrZ1BTQjBhR2x6TG0xaGNGTnBlbVV1ZDJsa2RHZ2dMeUIwYUdsekxtMWhjRk5wZW1VdWFHVnBaMmgwTENCeUlEMGdaUzVrYVhOMFlXNWpaU0I4ZkNCMExtWmhjanNLSUNBZ0lDQWdJQ0FvYmlBaFBUMGdkQzVtYjNZZ2ZId2dhU0FoUFQwZ2RDNWhjM0JsWTNRZ2ZId2djaUFoUFQwZ2RDNW1ZWElwSUNZbUlDaDBMbVp2ZGlBOUlHNHNJSFF1WVhOd1pXTjBJRDBnYVN3Z2RDNW1ZWElnUFNCeUxDQjBMblZ3WkdGMFpWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb0tTa3NJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBZMlZ6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVabTlqZFhNZ1BTQmxMbVp2WTNWekxDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwUFlTNXdjbTkwYjNSNWNHVXVhWE5UY0c5MFRHbG5hSFJUYUdGa2IzY2dQU0FoTURzS2RtRnlJRWhoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJDZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1SUQwZ01Dd2dhU0E5SUUxaGRHZ3VVRWtnTHlBekxDQnlJRDBnTUN3Z2J5QTlJREVwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pUY0c5MFRHbG5hSFFpTENCMGFHbHpMbkJ2YzJsMGFXOXVMbU52Y0hrb1RtVXVSR1ZtWVhWc2RGVndLU3dnZEdocGN5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTUwWVhKblpYUWdQU0J1WlhjZ1RtVXNJSFJvYVhNdVpHbHpkR0Z1WTJVZ1BTQnVMQ0IwYUdsekxtRnVaMnhsSUQwZ2FTd2dkR2hwY3k1d1pXNTFiV0p5WVNBOUlISXNJSFJvYVhNdVpHVmpZWGtnUFNCdkxDQjBhR2x6TG5Ob1lXUnZkeUE5SUc1bGR5QlBZVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQndiM2RsY2lncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYm5SbGJuTnBkSGtnS2lCTllYUm9MbEJKT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJSEJ2ZDJWeUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtbHVkR1Z1YzJsMGVTQTlJR1VnTHlCTllYUm9MbEJKT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Ob1lXUnZkeTVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1a2FYTjBZVzVqWlNBOUlHVXVaR2x6ZEdGdVkyVXNJSFJvYVhNdVlXNW5iR1VnUFNCbExtRnVaMnhsTENCMGFHbHpMbkJsYm5WdFluSmhJRDBnWlM1d1pXNTFiV0p5WVN3Z2RHaHBjeTVrWldOaGVTQTlJR1V1WkdWallYa3NJSFJvYVhNdWRHRnlaMlYwSUQwZ1pTNTBZWEpuWlhRdVkyeHZibVVvS1N3Z2RHaHBjeTV6YUdGa2IzY2dQU0JsTG5Ob1lXUnZkeTVqYkc5dVpTZ3BMQ0IwYUdsek93b2dJQ0FnZlFwOU93cElZUzV3Y205MGIzUjVjR1V1YVhOVGNHOTBUR2xuYUhRZ1BTQWhNRHNLZG1GeUlIZGpJRDBnYm1WM0lIQmxMQ0J1Y2lBOUlHNWxkeUJOTENCcWJ5QTlJRzVsZHlCTkxDQnJZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiVzhnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ2RYUW9PVEFzSURFc0lDNDFMQ0ExTURBcEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5bWNtRnRaVVY0ZEdWdWRITWdQU0J1WlhjZ1dDZzBMQ0F5S1N3Z2RHaHBjeTVmZG1sbGQzQnZjblJEYjNWdWRDQTlJRFlzSUhSb2FYTXVYM1pwWlhkd2IzSjBjeUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZabEtESXNJREVzSURFc0lERXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dWbVVvTUN3Z01Td2dNU3dnTVNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCV1pTZ3pMQ0F4TENBeExDQXhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRlpsS0RFc0lERXNJREVzSURFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1ZtVW9NeXdnTUN3Z01Td2dNU2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJXWlNneExDQXdMQ0F4TENBeEtRb2dJQ0FnSUNBZ0lGMHNJSFJvYVhNdVgyTjFZbVZFYVhKbFkzUnBiMjV6SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3hMQ0F3TENBd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9MVEVzSURBc0lEQXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dUU2d3TENBd0xDQXhLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTUN3Z01Dd2dMVEVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVFNnd0xDQXhMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Dd2dMVEVzSURBcENpQWdJQ0FnSUNBZ1hTd2dkR2hwY3k1ZlkzVmlaVlZ3Y3lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTVN3Z01Da3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5Qk5LREFzSURFc0lEQXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dUU2d3TENBeExDQXdLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTUN3Z01Td2dNQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJOS0RBc0lEQXNJREVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVFNnd0xDQXdMQ0F0TVNrS0lDQWdJQ0FnSUNCZE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWxqWlhNb1pTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTJGdFpYSmhMQ0JwSUQwZ2RHaHBjeTV0WVhSeWFYZ3NJSElnUFNCbExtUnBjM1JoYm1ObElIeDhJRzR1Wm1GeU93b2dJQ0FnSUNBZ0lISWdJVDA5SUc0dVptRnlJQ1ltSUNodUxtWmhjaUE5SUhJc0lHNHVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNncEtTd2dibkl1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtHVXViV0YwY21sNFYyOXliR1FwTENCdUxuQnZjMmwwYVc5dUxtTnZjSGtvYm5JcExDQnFieTVqYjNCNUtHNHVjRzl6YVhScGIyNHBMQ0JxYnk1aFpHUW9kR2hwY3k1ZlkzVmlaVVJwY21WamRHbHZibk5iZEYwcExDQnVMblZ3TG1OdmNIa29kR2hwY3k1ZlkzVmlaVlZ3YzF0MFhTa3NJRzR1Ykc5dmEwRjBLR3B2S1N3Z2JpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ3BMQ0JwTG0xaGEyVlVjbUZ1YzJ4aGRHbHZiaWd0Ym5JdWVDd2dMVzV5TG5rc0lDMXVjaTU2S1N3Z2QyTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aHVMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3NJRzR1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1N3Z2RHaHBjeTVmWm5KMWMzUjFiUzV6WlhSR2NtOXRVSEp2YW1WamRHbHZiazFoZEhKcGVDaDNZeWs3Q2lBZ0lDQjlDbjA3Q210aExuQnliM1J2ZEhsd1pTNXBjMUJ2YVc1MFRHbG5hSFJUYUdGa2IzY2dQU0FoTURzS2RtRnlJRWRoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJDZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1SUQwZ01Dd2dhU0E5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKUWIybHVkRXhwWjJoMElpd2dkR2hwY3k1a2FYTjBZVzVqWlNBOUlHNHNJSFJvYVhNdVpHVmpZWGtnUFNCcExDQjBhR2x6TG5Ob1lXUnZkeUE5SUc1bGR5QnJZVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQndiM2RsY2lncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYm5SbGJuTnBkSGtnS2lBMElDb2dUV0YwYUM1UVNUc0tJQ0FnSUgwS0lDQWdJSE5sZENCd2IzZGxjaWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVwYm5SbGJuTnBkSGtnUFNCbElDOGdLRFFnS2lCTllYUm9MbEJKS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1emFHRmtiM2N1WkdsemNHOXpaU2dwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVpHbHpkR0Z1WTJVZ1BTQmxMbVJwYzNSaGJtTmxMQ0IwYUdsekxtUmxZMkY1SUQwZ1pTNWtaV05oZVN3Z2RHaHBjeTV6YUdGa2IzY2dQU0JsTG5Ob1lXUnZkeTVqYkc5dVpTZ3BMQ0IwYUdsek93b2dJQ0FnZlFwOU93cEhZUzV3Y205MGIzUjVjR1V1YVhOUWIybHVkRXhwWjJoMElEMGdJVEE3Q25aaGNpQldZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiVzhnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWh1WlhjZ1JuSW9MVFVzSURVc0lEVXNJQzAxTENBdU5Td2dOVEF3S1NrN0NpQWdJQ0I5Q24wN0NsWmhMbkJ5YjNSdmRIbHdaUzVwYzBScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzY2dQU0FoTURzS2RtRnlJRmRoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJDZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlSR2x5WldOMGFXOXVZV3hNYVdkb2RDSXNJSFJvYVhNdWNHOXphWFJwYjI0dVkyOXdlU2hPWlM1RVpXWmhkV3gwVlhBcExDQjBhR2x6TG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0IwYUdsekxuUmhjbWRsZENBOUlHNWxkeUJPWlN3Z2RHaHBjeTV6YUdGa2IzY2dQU0J1WlhjZ1ZtRTdDaUFnSUNCOUNpQWdJQ0JrYVhOd2IzTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjMmhoWkc5M0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMblJoY21kbGRDQTlJR1V1ZEdGeVoyVjBMbU5zYjI1bEtDa3NJSFJvYVhNdWMyaGhaRzkzSUQwZ1pTNXphR0ZrYjNjdVkyeHZibVVvS1N3Z2RHaHBjenNLSUNBZ0lIMEtmVHNLVjJFdWNISnZkRzkwZVhCbExtbHpSR2x5WldOMGFXOXVZV3hNYVdkb2RDQTlJQ0V3T3dwMllYSWdjV0VnUFNCamJHRnpjeUJsZUhSbGJtUnpJRUowSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkJiV0pwWlc1MFRHbG5hSFFpT3dvZ0lDQWdmUXA5T3dweFlTNXdjbTkwYjNSNWNHVXVhWE5CYldKcFpXNTBUR2xuYUhRZ1BTQWhNRHNLZG1GeUlGaGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVJRDBnTVRBc0lHa2dQU0F4TUNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWxKbFkzUkJjbVZoVEdsbmFIUWlMQ0IwYUdsekxuZHBaSFJvSUQwZ2Jpd2dkR2hwY3k1b1pXbG5hSFFnUFNCcE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhCdmQyVnlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHVkR1Z1YzJsMGVTQXFJSFJvYVhNdWQybGtkR2dnS2lCMGFHbHpMbWhsYVdkb2RDQXFJRTFoZEdndVVFazdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2NHOTNaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YVc1MFpXNXphWFI1SUQwZ1pTQXZJQ2gwYUdsekxuZHBaSFJvSUNvZ2RHaHBjeTVvWldsbmFIUWdLaUJOWVhSb0xsQkpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5kcFpIUm9JRDBnWlM1M2FXUjBhQ3dnZEdocGN5NW9aV2xuYUhRZ1BTQmxMbWhsYVdkb2RDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnpkWEJsY2k1MGIwcFRUMDRvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdWIySnFaV04wTG5kcFpIUm9JRDBnZEdocGN5NTNhV1IwYUN3Z2RDNXZZbXBsWTNRdWFHVnBaMmgwSUQwZ2RHaHBjeTVvWldsbmFIUXNJSFE3Q2lBZ0lDQjlDbjA3Q2xoaExuQnliM1J2ZEhsd1pTNXBjMUpsWTNSQmNtVmhUR2xuYUhRZ1BTQWhNRHNLZG1GeUlFcGhJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxtTnZaV1ptYVdOcFpXNTBjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pTQTlJREE3SUdVZ1BDQTVPeUJsS3lzcGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhNdWNIVnphQ2h1WlhjZ1RTazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0E1T3lCMEt5c3BkR2hwY3k1amIyVm1abWxqYVdWdWRITmJkRjB1WTI5d2VTaGxXM1JkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSHBsY204b0tTQjdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTURzZ1pTQThJRGs3SUdVckt5bDBhR2x6TG1OdlpXWm1hV05wWlc1MGMxdGxYUzV6WlhRb01Dd2dNQ3dnTUNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExuZ3NJR2tnUFNCbExua3NJSElnUFNCbExub3NJRzhnUFNCMGFHbHpMbU52WldabWFXTnBaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1amIzQjVLRzliTUYwcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0eU9ESXdPVFVwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6RmRMQ0F1TkRnNE5qQXpJQ29nYVNrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJNbDBzSUM0ME9EZzJNRE1nS2lCeUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXN6WFN3Z0xqUTRPRFl3TXlBcUlHNHBMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3pSZExDQXhMakE1TWpVME9DQXFJQ2h1SUNvZ2FTa3BMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3pWZExDQXhMakE1TWpVME9DQXFJQ2hwSUNvZ2Npa3BMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3paZExDQXVNekUxTXpreUlDb2dLRE1nS2lCeUlDb2djaUF0SURFcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXMzWFN3Z01TNHdPVEkxTkRnZ0tpQW9iaUFxSUhJcEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXM0WFN3Z0xqVTBOakkzTkNBcUlDaHVJQ29nYmlBdElHa2dLaUJwS1Nrc0lIUTdDaUFnSUNCOUNpQWdJQ0JuWlhSSmNuSmhaR2xoYm1ObFFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNTRMQ0JwSUQwZ1pTNTVMQ0J5SUQwZ1pTNTZMQ0J2SUQwZ2RHaHBjeTVqYjJWbVptbGphV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVkyOXdlU2h2V3pCZEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU9EZzJNakkzS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2Ixc3hYU3dnTWlBcUlDNDFNVEUyTmpRZ0tpQnBLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzeVhTd2dNaUFxSUM0MU1URTJOalFnS2lCeUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXN6WFN3Z01pQXFJQzQxTVRFMk5qUWdLaUJ1S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczBYU3dnTWlBcUlDNDBNamt3TkRNZ0tpQnVJQ29nYVNrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJOVjBzSURJZ0tpQXVOREk1TURReklDb2dhU0FxSUhJcExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaHZXelpkTENBdU56UXpNVEkxSUNvZ2NpQXFJSElnTFNBdU1qUTNOekE0S1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2IxczNYU3dnTWlBcUlDNDBNamt3TkRNZ0tpQnVJQ29nY2lrc0lIUXVZV1JrVTJOaGJHVmtWbVZqZEc5eUtHOWJPRjBzSUM0ME1qa3dORE1nS2lBb2JpQXFJRzRnTFNCcElDb2dhU2twTENCME93b2dJQ0FnZlFvZ0lDQWdZV1JrS0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dPVHNnZENzcktYUm9hWE11WTI5bFptWnBZMmxsYm5SelczUmRMbUZrWkNobExtTnZaV1ptYVdOcFpXNTBjMXQwWFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSVFkyRnNaV1JUU0NobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURrN0lHNHJLeWwwYUdsekxtTnZaV1ptYVdOcFpXNTBjMXR1WFM1aFpHUlRZMkZzWldSV1pXTjBiM0lvWlM1amIyVm1abWxqYVdWdWRITmJibDBzSUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJOaGJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENBNU95QjBLeXNwZEdocGN5NWpiMlZtWm1samFXVnVkSE5iZEYwdWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z09Uc2diaXNyS1hSb2FYTXVZMjlsWm1acFkybGxiblJ6VzI1ZExteGxjbkFvWlM1amIyVm1abWxqYVdWdWRITmJibDBzSUhRcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z09Uc2dkQ3NyS1dsbUlDZ2hkR2hwY3k1amIyVm1abWxqYVdWdWRITmJkRjB1WlhGMVlXeHpLR1V1WTI5bFptWnBZMmxsYm5SelczUmRLU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoTURzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENobExtTnZaV1ptYVdOcFpXNTBjeWs3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU52WldabWFXTnBaVzUwY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z09Uc2dhU3NyS1c1YmFWMHVabkp2YlVGeWNtRjVLR1VzSUhRZ0t5QnBJQ29nTXlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBGeWNtRjVLR1VnUFNCYlhTd2dkQ0E5SURBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTI5bFptWnBZMmxsYm5Sek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREE3SUdrZ1BDQTVPeUJwS3lzcGJsdHBYUzUwYjBGeWNtRjVLR1VzSUhRZ0t5QnBJQ29nTXlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1oyVjBRbUZ6YVhOQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExuZ3NJR2tnUFNCbExua3NJSElnUFNCbExubzdDaUFnSUNBZ0lDQWdkRnN3WFNBOUlDNHlPREl3T1RVc0lIUmJNVjBnUFNBdU5EZzROakF6SUNvZ2FTd2dkRnN5WFNBOUlDNDBPRGcyTURNZ0tpQnlMQ0IwV3pOZElEMGdMalE0T0RZd015QXFJRzRzSUhSYk5GMGdQU0F4TGpBNU1qVTBPQ0FxSUc0Z0tpQnBMQ0IwV3pWZElEMGdNUzR3T1RJMU5EZ2dLaUJwSUNvZ2Npd2dkRnMyWFNBOUlDNHpNVFV6T1RJZ0tpQW9NeUFxSUhJZ0tpQnlJQzBnTVNrc0lIUmJOMTBnUFNBeExqQTVNalUwT0NBcUlHNGdLaUJ5TENCMFd6aGRJRDBnTGpVME5qSTNOQ0FxSUNodUlDb2diaUF0SUdrZ0tpQnBLVHNLSUNBZ0lIMEtmVHNLU21FdWNISnZkRzkwZVhCbExtbHpVM0JvWlhKcFkyRnNTR0Z5Ylc5dWFXTnpNeUE5SUNFd093cDJZWElnU0hJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1NtRXNJSFFnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2loMmIybGtJREFzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11YzJnZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11YzJndVkyOXdlU2hsTG5Ob0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJuUmxibk5wZEhrZ1BTQmxMbWx1ZEdWdWMybDBlU3dnZEdocGN5NXphQzVtY205dFFYSnlZWGtvWlM1emFDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdjM1Z3WlhJdWRHOUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtOWlhbVZqZEM1emFDQTlJSFJvYVhNdWMyZ3VkRzlCY25KaGVTZ3BMQ0IwT3dvZ0lDQWdmUXA5T3dwSWNpNXdjbTkwYjNSNWNHVXVhWE5NYVdkb2RGQnliMkpsSUQwZ0lUQTdDblpoY2lCNmFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1luUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBaWGgwZFhKbGN5QTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ2JHOWhaQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMQ0J2SUQwZ2JtVjNJRmwwS0hJdWJXRnVZV2RsY2lrN0NpQWdJQ0FnSUNBZ2J5NXpaWFJRWVhSb0tISXVjR0YwYUNrc0lHOHVjMlYwVW1WeGRXVnpkRWhsWVdSbGNpaHlMbkpsY1hWbGMzUklaV0ZrWlhJcExDQnZMbk5sZEZkcGRHaERjbVZrWlc1MGFXRnNjeWh5TG5kcGRHaERjbVZrWlc1MGFXRnNjeWtzSUc4dWJHOWhaQ2hsTENCbWRXNWpkR2x2YmloaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBLSEl1Y0dGeWMyVW9TbE5QVGk1d1lYSnpaU2hoS1NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElEOGdhU2hzS1NBNklHTnZibk52YkdVdVpYSnliM0lvYkNrc0lISXViV0Z1WVdkbGNpNXBkR1Z0UlhKeWIzSW9aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJSEJoY25ObEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWRHVjRkSFZ5WlhNN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2JpaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMFczSmRJRDA5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJsY21saGJFeHZZV1JsY2pvZ1ZXNWtaV1pwYm1Wa0lIUmxlSFIxY21VaUxDQnlLU3dnZEZ0eVhUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnYzNsYlpTNTBlWEJsWFRzS0lDQWdJQ0FnSUNCcFppQW9aUzUxZFdsa0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRYVnBaQ0E5SUdVdWRYVnBaQ2tzSUdVdWJtRnRaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbTVoYldVZ1BTQmxMbTVoYldVcExDQmxMbU52Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnYVM1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VZMjlzYjNJdWMyVjBTR1Y0S0dVdVkyOXNiM0lwTENCbExuSnZkV2RvYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuSnZkV2RvYm1WemN5QTlJR1V1Y205MVoyaHVaWE56S1N3Z1pTNXRaWFJoYkc1bGMzTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXRaWFJoYkc1bGMzTWdQU0JsTG0xbGRHRnNibVZ6Y3lrc0lHVXVjMmhsWlc0Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emFHVmxiaUE5SUdVdWMyaGxaVzRwTENCbExuTm9aV1Z1UTI5c2IzSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphR1ZsYmtOdmJHOXlJRDBnYm1WM0lHRmxLQ2t1YzJWMFNHVjRLR1V1YzJobFpXNURiMnh2Y2lrcExDQmxMbk5vWldWdVVtOTFaMmh1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMyaGxaVzVTYjNWbmFHNWxjM01nUFNCbExuTm9aV1Z1VW05MVoyaHVaWE56S1N3Z1pTNWxiV2x6YzJsMlpTQWhQVDBnZG05cFpDQXdJQ1ltSUdrdVpXMXBjM05wZG1VZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG1WdGFYTnphWFpsTG5ObGRFaGxlQ2hsTG1WdGFYTnphWFpsS1N3Z1pTNXpjR1ZqZFd4aGNpQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWMzQmxZM1ZzWVhJZ0lUMDlJSFp2YVdRZ01DQW1KaUJwTG5Od1pXTjFiR0Z5TG5ObGRFaGxlQ2hsTG5Od1pXTjFiR0Z5S1N3Z1pTNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTndaV04xYkdGeVNXNTBaVzV6YVhSNUlEMGdaUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlU2tzSUdVdWMzQmxZM1ZzWVhKRGIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VjM0JsWTNWc1lYSkRiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YzNCbFkzVnNZWEpEYjJ4dmNpNXpaWFJJWlhnb1pTNXpjR1ZqZFd4aGNrTnZiRzl5S1N3Z1pTNXphR2x1YVc1bGMzTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphR2x1YVc1bGMzTWdQU0JsTG5Ob2FXNXBibVZ6Y3lrc0lHVXVZMnhsWVhKamIyRjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZMnhsWVhKamIyRjBJRDBnWlM1amJHVmhjbU52WVhRcExDQmxMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjeUE5SUdVdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOektTd2daUzUwY21GdWMyMXBjM05wYjI0Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MGNtRnVjMjFwYzNOcGIyNGdQU0JsTG5SeVlXNXpiV2x6YzJsdmJpa3NJR1V1ZEdocFkydHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZEdocFkydHVaWE56SUQwZ1pTNTBhR2xqYTI1bGMzTXBMQ0JsTG1GMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObElEMGdaUzVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sS1N3Z1pTNWhkSFJsYm5WaGRHbHZia052Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnYVM1aGRIUmxiblZoZEdsdmJrTnZiRzl5SUNFOVBTQjJiMmxrSURBZ0ppWWdhUzVoZEhSbGJuVmhkR2x2YmtOdmJHOXlMbk5sZEVobGVDaGxMbUYwZEdWdWRXRjBhVzl1UTI5c2IzSXBMQ0JsTG1adlp5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExtWnZaeUE5SUdVdVptOW5LU3dnWlM1bWJHRjBVMmhoWkdsdVp5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExtWnNZWFJUYUdGa2FXNW5JRDBnWlM1bWJHRjBVMmhoWkdsdVp5a3NJR1V1WW14bGJtUnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVpYkdWdVpHbHVaeUE5SUdVdVlteGxibVJwYm1jcExDQmxMbU52YldKcGJtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWpiMjFpYVc1bElEMGdaUzVqYjIxaWFXNWxLU3dnWlM1emFXUmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmxrWlNBOUlHVXVjMmxrWlNrc0lHVXVjMmhoWkc5M1UybGtaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5vWVdSdmQxTnBaR1VnUFNCbExuTm9ZV1J2ZDFOcFpHVXBMQ0JsTG05d1lXTnBkSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV2Y0dGamFYUjVJRDBnWlM1dmNHRmphWFI1S1N3Z1pTNW1iM0p0WVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bWIzSnRZWFFnUFNCbExtWnZjbTFoZENrc0lHVXVkSEpoYm5Od1lYSmxiblFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUwY21GdWMzQmhjbVZ1ZENBOUlHVXVkSEpoYm5Od1lYSmxiblFwTENCbExtRnNjR2hoVkdWemRDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtRnNjR2hoVkdWemRDQTlJR1V1WVd4d2FHRlVaWE4wS1N3Z1pTNWtaWEIwYUZSbGMzUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWtaWEIwYUZSbGMzUWdQU0JsTG1SbGNIUm9WR1Z6ZENrc0lHVXVaR1Z3ZEdoWGNtbDBaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVJsY0hSb1YzSnBkR1VnUFNCbExtUmxjSFJvVjNKcGRHVXBMQ0JsTG1OdmJHOXlWM0pwZEdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1amIyeHZjbGR5YVhSbElEMGdaUzVqYjJ4dmNsZHlhWFJsS1N3Z1pTNXpkR1Z1WTJsc1YzSnBkR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6ZEdWdVkybHNWM0pwZEdVZ1BTQmxMbk4wWlc1amFXeFhjbWwwWlNrc0lHVXVjM1JsYm1OcGJGZHlhWFJsVFdGemF5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ1BTQmxMbk4wWlc1amFXeFhjbWwwWlUxaGMyc3BMQ0JsTG5OMFpXNWphV3hHZFc1aklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkVaMWJtTWdQU0JsTG5OMFpXNWphV3hHZFc1aktTd2daUzV6ZEdWdVkybHNVbVZtSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNSbGJtTnBiRkpsWmlBOUlHVXVjM1JsYm1OcGJGSmxaaWtzSUdVdWMzUmxibU5wYkVaMWJtTk5ZWE5ySUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNSbGJtTnBiRVoxYm1OTllYTnJJRDBnWlM1emRHVnVZMmxzUm5WdVkwMWhjMnNwTENCbExuTjBaVzVqYVd4R1lXbHNJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM1JsYm1OcGJFWmhhV3dnUFNCbExuTjBaVzVqYVd4R1lXbHNLU3dnWlM1emRHVnVZMmxzV2taaGFXd2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXpkR1Z1WTJsc1drWmhhV3dnUFNCbExuTjBaVzVqYVd4YVJtRnBiQ2tzSUdVdWMzUmxibU5wYkZwUVlYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM1JsYm1OcGJGcFFZWE56SUQwZ1pTNXpkR1Z1WTJsc1dsQmhjM01wTENCbExuZHBjbVZtY21GdFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuZHBjbVZtY21GdFpTQTlJR1V1ZDJseVpXWnlZVzFsS1N3Z1pTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNrc0lHVXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WallYQXBMQ0JsTG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNCbExuZHBjbVZtY21GdFpVeHBibVZxYjJsdUtTd2daUzV5YjNSaGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkp2ZEdGMGFXOXVJRDBnWlM1eWIzUmhkR2x2Ymlrc0lHVXViR2x1WlhkcFpIUm9JQ0U5UFNBeElDWW1JQ2hwTG14cGJtVjNhV1IwYUNBOUlHVXViR2x1WlhkcFpIUm9LU3dnWlM1a1lYTm9VMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1SaGMyaFRhWHBsSUQwZ1pTNWtZWE5vVTJsNlpTa3NJR1V1WjJGd1UybDZaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbWRoY0ZOcGVtVWdQU0JsTG1kaGNGTnBlbVVwTENCbExuTmpZV3hsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJOaGJHVWdQU0JsTG5OallXeGxLU3dnWlM1d2IyeDVaMjl1VDJabWMyVjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjRzlzZVdkdmJrOW1abk5sZENBOUlHVXVjRzlzZVdkdmJrOW1abk5sZENrc0lHVXVjRzlzZVdkdmJrOW1abk5sZEVaaFkzUnZjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lnUFNCbExuQnZiSGxuYjI1UFptWnpaWFJHWVdOMGIzSXBMQ0JsTG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlHVXVjRzlzZVdkdmJrOW1abk5sZEZWdWFYUnpLU3dnWlM1a2FYUm9aWEpwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1a2FYUm9aWEpwYm1jZ1BTQmxMbVJwZEdobGNtbHVaeWtzSUdVdVlXeHdhR0ZVYjBOdmRtVnlZV2RsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WVd4d2FHRlViME52ZG1WeVlXZGxJRDBnWlM1aGJIQm9ZVlJ2UTI5MlpYSmhaMlVwTENCbExuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQTlJR1V1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoS1N3Z1pTNTJhWE5wWW14bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRtbHphV0pzWlNBOUlHVXVkbWx6YVdKc1pTa3NJR1V1ZEc5dVpVMWhjSEJsWkNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5SdmJtVk5ZWEJ3WldRZ1BTQmxMblJ2Ym1WTllYQndaV1FwTENCbExuVnpaWEpFWVhSaElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRYTmxja1JoZEdFZ1BTQmxMblZ6WlhKRVlYUmhLU3dnWlM1MlpYSjBaWGhEYjJ4dmNuTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2RIbHdaVzltSUdVdWRtVnlkR1Y0UTI5c2IzSnpJRDA5SUNKdWRXMWlaWElpSUQ4Z2FTNTJaWEowWlhoRGIyeHZjbk1nUFNCbExuWmxjblJsZUVOdmJHOXljeUErSURBZ09pQnBMblpsY25SbGVFTnZiRzl5Y3lBOUlHVXVkbVZ5ZEdWNFEyOXNiM0p6S1N3Z1pTNTFibWxtYjNKdGN5QWhQVDBnZG05cFpDQXdLU0JtYjNJb2JHVjBJSElnYVc0Z1pTNTFibWxtYjNKdGN5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlM1MWJtbG1iM0p0YzF0eVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNkcGRHTm9LR2t1ZFc1cFptOXliWE5iY2wwZ1BTQjdmU3dnYnk1MGVYQmxLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0luUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWRXNXBabTl5YlhOYmNsMHVkbUZzZFdVZ1BTQnVLRzh1ZG1Gc2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVl5STZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1MWJtbG1iM0p0YzF0eVhTNTJZV3gxWlNBOUlHNWxkeUJoWlNncExuTmxkRWhsZUNodkxuWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbll5SWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYm1WM0lGZ29LUzVtY205dFFYSnlZWGtvYnk1MllXeDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSjJNeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNTFibWxtYjNKdGMxdHlYUzUyWVd4MVpTQTlJRzVsZHlCTktDa3Vabkp2YlVGeWNtRjVLRzh1ZG1Gc2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWRqUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdWRXNXBabTl5YlhOYmNsMHVkbUZzZFdVZ1BTQnVaWGNnVm1Vb0tTNW1jbTl0UVhKeVlYa29ieTUyWVd4MVpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKdE15STZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVM1MWJtbG1iM0p0YzF0eVhTNTJZV3gxWlNBOUlHNWxkeUJzZENncExtWnliMjFCY25KaGVTaHZMblpoYkhWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW0wMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5WdWFXWnZjbTF6VzNKZExuWmhiSFZsSUQwZ2JtVjNJSEJsS0NrdVpuSnZiVUZ5Y21GNUtHOHVkbUZzZFdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBMblZ1YVdadmNtMXpXM0pkTG5aaGJIVmxJRDBnYnk1MllXeDFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlM1a1pXWnBibVZ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdWbWFXNWxjeUE5SUdVdVpHVm1hVzVsY3lrc0lHVXVkbVZ5ZEdWNFUyaGhaR1Z5SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1ZG1WeWRHVjRVMmhoWkdWeUlEMGdaUzUyWlhKMFpYaFRhR0ZrWlhJcExDQmxMbVp5WVdkdFpXNTBVMmhoWkdWeUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpuSmhaMjFsYm5SVGFHRmtaWElnUFNCbExtWnlZV2R0Wlc1MFUyaGhaR1Z5S1N3Z1pTNWxlSFJsYm5OcGIyNXpJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnY2pFZ2FXNGdaUzVsZUhSbGJuTnBiMjV6S1drdVpYaDBaVzV6YVc5dWMxdHlNVjBnUFNCbExtVjRkR1Z1YzJsdmJuTmJjakZkT3dvZ0lDQWdJQ0FnSUdsbUlDaGxMbk5vWVdScGJtY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNW1iR0YwVTJoaFpHbHVaeUE5SUdVdWMyaGhaR2x1WnlBOVBUMGdNU2tzSUdVdWMybDZaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5wZW1VZ1BTQmxMbk5wZW1VcExDQmxMbk5wZW1WQmRIUmxiblZoZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTnBlbVZCZEhSbGJuVmhkR2x2YmlBOUlHVXVjMmw2WlVGMGRHVnVkV0YwYVc5dUtTd2daUzV0WVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1dFlYQWdQU0J1S0dVdWJXRndLU2tzSUdVdWJXRjBZMkZ3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YldGMFkyRndJRDBnYmlobExtMWhkR05oY0NrcExDQmxMbUZzY0doaFRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZV3h3YUdGTllYQWdQU0J1S0dVdVlXeHdhR0ZOWVhBcEtTd2daUzVpZFcxd1RXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZblZ0Y0UxaGNDQTlJRzRvWlM1aWRXMXdUV0Z3S1Nrc0lHVXVZblZ0Y0ZOallXeGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZblZ0Y0ZOallXeGxJRDBnWlM1aWRXMXdVMk5oYkdVcExDQmxMbTV2Y20xaGJFMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbTV2Y20xaGJFMWhjQ0E5SUc0b1pTNXViM0p0WVd4TllYQXBLU3dnWlM1dWIzSnRZV3hOWVhCVWVYQmxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VibTl5YldGc1RXRndWSGx3WlNBOUlHVXVibTl5YldGc1RXRndWSGx3WlNrc0lHVXVibTl5YldGc1UyTmhiR1VnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NqSWdQU0JsTG01dmNtMWhiRk5qWVd4bE93b2dJQ0FnSUNBZ0lDQWdJQ0JCY25KaGVTNXBjMEZ5Y21GNUtISXlLU0E5UFQwZ0lURWdKaVlnS0hJeUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjaklzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5TWdvZ0lDQWdJQ0FnSUNBZ0lDQmRLU3dnYVM1dWIzSnRZV3hUWTJGc1pTQTlJRzVsZHlCWUtDa3Vabkp2YlVGeWNtRjVLSEl5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnYmlobExtUnBjM0JzWVdObGJXVnVkRTFoY0NrcExDQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsS1N3Z1pTNWthWE53YkdGalpXMWxiblJDYVdGeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlHVXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5a3NJR1V1Y205MVoyaHVaWE56VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWNtOTFaMmh1WlhOelRXRndJRDBnYmlobExuSnZkV2RvYm1WemMwMWhjQ2twTENCbExtMWxkR0ZzYm1WemMwMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbTFsZEdGc2JtVnpjMDFoY0NBOUlHNG9aUzV0WlhSaGJHNWxjM05OWVhBcEtTd2daUzVsYldsemMybDJaVTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1WdGFYTnphWFpsVFdGd0lEMGdiaWhsTG1WdGFYTnphWFpsVFdGd0tTa3NJR1V1WlcxcGMzTnBkbVZKYm5SbGJuTnBkSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVsYldsemMybDJaVWx1ZEdWdWMybDBlU0E5SUdVdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrcExDQmxMbk53WldOMWJHRnlUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNCbFkzVnNZWEpOWVhBZ1BTQnVLR1V1YzNCbFkzVnNZWEpOWVhBcEtTd2daUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0lEMGdiaWhsTG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1VFdGd0tTa3NJR1V1YzNCbFkzVnNZWEpEYjJ4dmNrMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQU0J1S0dVdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NrcExDQmxMbVZ1ZGsxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtVnVkazFoY0NBOUlHNG9aUzVsYm5aTllYQXBLU3dnWlM1bGJuWk5ZWEJKYm5SbGJuTnBkSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVsYm5aTllYQkpiblJsYm5OcGRIa2dQU0JsTG1WdWRrMWhjRWx1ZEdWdWMybDBlU2tzSUdVdWNtVm1iR1ZqZEdsMmFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjbVZtYkdWamRHbDJhWFI1SUQwZ1pTNXlaV1pzWldOMGFYWnBkSGtwTENCbExuSmxabkpoWTNScGIyNVNZWFJwYnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5KbFpuSmhZM1JwYjI1U1lYUnBieUE5SUdVdWNtVm1jbUZqZEdsdmJsSmhkR2x2S1N3Z1pTNXNhV2RvZEUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExteHBaMmgwVFdGd0lEMGdiaWhsTG14cFoyaDBUV0Z3S1Nrc0lHVXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtwTENCbExtRnZUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WVc5TllYQWdQU0J1S0dVdVlXOU5ZWEFwS1N3Z1pTNWhiMDFoY0VsdWRHVnVjMmwwZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1GdlRXRndTVzUwWlc1emFYUjVJRDBnWlM1aGIwMWhjRWx1ZEdWdWMybDBlU2tzSUdVdVozSmhaR2xsYm5STllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNW5jbUZrYVdWdWRFMWhjQ0E5SUc0b1pTNW5jbUZrYVdWdWRFMWhjQ2twTENCbExtTnNaV0Z5WTI5aGRFMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbU5zWldGeVkyOWhkRTFoY0NBOUlHNG9aUzVqYkdWaGNtTnZZWFJOWVhBcEtTd2daUzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdQU0J1S0dVdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndLU2tzSUdVdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lEMGdiaWhsTG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NrcExDQmxMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV0NncExtWnliMjFCY25KaGVTaGxMbU5zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsS1Nrc0lHVXVkSEpoYm5OdGFYTnphVzl1VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRISmhibk50YVhOemFXOXVUV0Z3SUQwZ2JpaGxMblJ5WVc1emJXbHpjMmx2YmsxaGNDa3BMQ0JsTG5Sb2FXTnJibVZ6YzAxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuUm9hV05yYm1WemMwMWhjQ0E5SUc0b1pTNTBhR2xqYTI1bGMzTk5ZWEFwS1N3Z1pTNXphR1ZsYmtOdmJHOXlUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJobFpXNURiMnh2Y2sxaGNDQTlJRzRvWlM1emFHVmxia052Ykc5eVRXRndLU2tzSUdVdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NBOUlHNG9aUzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ2twTENCcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVkdWNGRIVnlaWE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJsZUhSMWNtVnpJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnUjNNZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0J6ZEdGMGFXTWdaR1ZqYjJSbFZHVjRkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQlVaWGgwUkdWamIyUmxjaUE4SUNKMUlpa2djbVYwZFhKdUlHNWxkeUJVWlhoMFJHVmpiMlJsY2lncExtUmxZMjlrWlNobEtUc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlDSWlPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0JsTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMElDczlJRk4wY21sdVp5NW1jbTl0UTJoaGNrTnZaR1VvWlZ0dVhTazdDaUFnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHUmxZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDaGxjMk5oY0dVb2RDa3BPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHVjRkSEpoWTNSVmNteENZWE5sS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXViR0Z6ZEVsdVpHVjRUMllvSWk4aUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQTlQVDBnTFRFZ1B5QWlMaThpSURvZ1pTNXpkV0p6ZEhJb01Dd2dkQ0FySURFcE93b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklISmxjMjlzZG1WVlVrd29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGVYQmxiMllnWlNBaFBTQWljM1J5YVc1bklpQjhmQ0JsSUQwOVBTQWlJaUEvSUNJaUlEb2dLQzllYUhSMGNITS9PbHd2WEM4dmFTNTBaWE4wS0hRcElDWW1JQzllWEM4dkxuUmxjM1FvWlNrZ0ppWWdLSFFnUFNCMExuSmxjR3hoWTJVb0x5aGVhSFIwY0hNL09sd3ZYQzliWGx3dlhTc3BMaW92YVN3Z0lpUXhJaWtwTENBdlhpaG9kSFJ3Y3o4NktUOWNMMXd2TDJrdWRHVnpkQ2hsS1NCOGZDQXZYbVJoZEdFNkxpb3NMaW9rTDJrdWRHVnpkQ2hsS1NCOGZDQXZYbUpzYjJJNkxpb2tMMmt1ZEdWemRDaGxLU0EvSUdVZ09pQjBJQ3NnWlNrN0NpQWdJQ0I5Q24wc0lGbGhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrbHVjM1JoYm1ObFpFSjFabVpsY2tkbGIyMWxkSEo1SWl3Z2RHaHBjeTVwYm5OMFlXNWpaVU52ZFc1MElEMGdNU0F2SURBN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NXBibk4wWVc1alpVTnZkVzUwSUQwZ1pTNXBibk4wWVc1alpVTnZkVzUwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGloMGFHbHpLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVwYm5OMFlXNWpaVU52ZFc1MElEMGdkR2hwY3k1cGJuTjBZVzVqWlVOdmRXNTBMQ0JsTG1selNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtnUFNBaE1Dd2daVHNLSUNBZ0lIMEtmVHNLV1dFdWNISnZkRzkwZVhCbExtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rZ1BTQWhNRHNLZG1GeUlGVm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeXdnYnlBOUlHNWxkeUJaZENoeUxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lHOHVjMlYwVUdGMGFDaHlMbkJoZEdncExDQnZMbk5sZEZKbGNYVmxjM1JJWldGa1pYSW9jaTV5WlhGMVpYTjBTR1ZoWkdWeUtTd2dieTV6WlhSWGFYUm9RM0psWkdWdWRHbGhiSE1vY2k1M2FYUm9RM0psWkdWdWRHbGhiSE1wTENCdkxteHZZV1FvWlN3Z1puVnVZM1JwYjI0b1lTa2dld29nSUNBZ0lDQWdJQ0FnSUNCMGNua2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ2h5TG5CaGNuTmxLRXBUVDA0dWNHRnljMlVvWVNrcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQS9JR2tvYkNrZ09pQmpiMjV6YjJ4bExtVnljbTl5S0d3cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dnYml3Z2FTazdDaUFnSUNCOUNpQWdJQ0J3WVhKelpTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0I3ZlN3Z2JpQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdrb1ppd2diU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEZ0dFhTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdkRnR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQm1MbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljMXR0WFN3Z1p5QTlJSElvWml3Z2RpNWlkV1ptWlhJcExDQndJRDBnZDJrb2RpNTBlWEJsTENCbktTd2dYeUE5SUc1bGR5QWtiaWh3TENCMkxuTjBjbWxrWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmZMblYxYVdRZ1BTQjJMblYxYVdRc0lIUmJiVjBnUFNCZkxDQmZPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ5S0dZc0lHMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzViYlYwZ0lUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlHNWJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1ppNWhjbkpoZVVKMVptWmxjbk5iYlYwc0lHY2dQU0J1WlhjZ1ZXbHVkRE15UVhKeVlYa29kaWt1WW5WbVptVnlPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmx0dFhTQTlJR2NzSUdjN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1pTNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUlEOGdibVYzSUZsaElEb2dibVYzSUY5bExDQmhJRDBnWlM1a1lYUmhMbWx1WkdWNE93b2dJQ0FnSUNBZ0lHbG1JQ2hoSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWWdQU0IzYVNoaExuUjVjR1VzSUdFdVlYSnlZWGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnZMbk5sZEVsdVpHVjRLRzVsZHlCVlpTaG1MQ0F4S1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1pTNWtZWFJoTG1GMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbU1TQnBiaUJzS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQnNXMll4WFN3Z2VEc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMHVhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JwS0dVdVpHRjBZU3dnYlM1a1lYUmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGdnUFNCdVpYY2dVMjRvZGl3Z2JTNXBkR1Z0VTJsNlpTd2diUzV2Wm1aelpYUXNJRzB1Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZGpFZ1BTQjNhU2h0TG5SNWNHVXNJRzB1WVhKeVlYa3BMQ0JuSUQwZ2JTNXBjMGx1YzNSaGJtTmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTQS9JRmh1SURvZ1ZXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRJRDBnYm1WM0lHY29kakVzSUcwdWFYUmxiVk5wZW1Vc0lHMHVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYlM1dVlXMWxJQ0U5UFNCMmIybGtJREFnSmlZZ0tIZ3VibUZ0WlNBOUlHMHVibUZ0WlNrc0lHMHVkWE5oWjJVZ0lUMDlJSFp2YVdRZ01DQW1KaUI0TG5ObGRGVnpZV2RsS0cwdWRYTmhaMlVwTENCdExuVndaR0YwWlZKaGJtZGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tIZ3VkWEJrWVhSbFVtRnVaMlV1YjJabWMyVjBJRDBnYlM1MWNHUmhkR1ZTWVc1blpTNXZabVp6WlhRc0lIZ3VkWEJrWVhSbFVtRnVaMlV1WTI5MWJuUWdQU0J0TG5Wd1pHRjBaVkpoYm1kbExtTnZkVzUwS1N3Z2J5NXpaWFJCZEhSeWFXSjFkR1VvWmpFc0lIZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJR1V1WkdGMFlTNXRiM0p3YUVGMGRISnBZblYwWlhNN0NpQWdJQ0FnSUNBZ2FXWWdLR01wSUdadmNpaHNaWFFnWmpJZ2FXNGdZeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0TVNBOUlHTmJaakpkTENCNE1TQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIWXlJRDBnTUN3Z1p6RWdQU0J0TVM1c1pXNW5kR2c3SUhZeUlEd2daekU3SUhZeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQnRNVnQyTWwwc0lGODdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0M1cGMwbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIa2dQU0JwS0dVdVpHRjBZU3dnY0M1a1lYUmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZklEMGdibVYzSUZOdUtIa3NJSEF1YVhSbGJWTnBlbVVzSUhBdWIyWm1jMlYwTENCd0xtNXZjbTFoYkdsNlpXUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VURWdQU0IzYVNod0xuUjVjR1VzSUhBdVlYSnlZWGtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGOGdQU0J1WlhjZ1ZXVW9lVEVzSUhBdWFYUmxiVk5wZW1Vc0lIQXVibTl5YldGc2FYcGxaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3TG01aGJXVWdJVDA5SUhadmFXUWdNQ0FtSmlBb1h5NXVZVzFsSUQwZ2NDNXVZVzFsS1N3Z2VERXVjSFZ6YUNoZktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnZMbTF2Y25Cb1FYUjBjbWxpZFhSbGMxdG1NbDBnUFNCNE1Uc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdaUzVrWVhSaExtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJQ1ltSUNodkxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ1pTNWtZWFJoTG1keWIzVndjeUI4ZkNCbExtUmhkR0V1WkhKaGQyTmhiR3h6SUh4OElHVXVaR0YwWVM1dlptWnpaWFJ6T3dvZ0lDQWdJQ0FnSUdsbUlDaDFJQ0U5UFNCMmIybGtJREFwSUdadmNpaHNaWFFnWmpNZ1BTQXdMQ0J0TWlBOUlIVXViR1Z1WjNSb095Qm1NeUFoUFQwZ2JUSTdJQ3NyWmpNcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VESWdQU0IxVzJZelhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYnk1aFpHUkhjbTkxY0NoNE1pNXpkR0Z5ZEN3Z2VESXVZMjkxYm5Rc0lIZ3lMbTFoZEdWeWFXRnNTVzVrWlhncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlHVXVaR0YwWVM1aWIzVnVaR2x1WjFOd2FHVnlaVHNLSUNBZ0lDQWdJQ0JwWmlBb1pDQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtTkNBOUlHNWxkeUJOT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtMbU5sYm5SbGNpQWhQVDBnZG05cFpDQXdJQ1ltSUdZMExtWnliMjFCY25KaGVTaGtMbU5sYm5SbGNpa3NJRzh1WW05MWJtUnBibWRUY0dobGNtVWdQU0J1WlhjZ1FXNG9aalFzSUdRdWNtRmthWFZ6S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWJtRnRaU0FtSmlBb2J5NXVZVzFsSUQwZ1pTNXVZVzFsS1N3Z1pTNTFjMlZ5UkdGMFlTQW1KaUFvYnk1MWMyVnlSR0YwWVNBOUlHVXVkWE5sY2tSaGRHRXBMQ0J2T3dvZ0lDQWdmUXA5TENCMWVTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1luUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXNJRzhnUFNCMGFHbHpMbkJoZEdnZ1BUMDlJQ0lpSUQ4Z1IzTXVaWGgwY21GamRGVnliRUpoYzJVb1pTa2dPaUIwYUdsekxuQmhkR2c3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52ZFhKalpWQmhkR2dnUFNCMGFHbHpMbkpsYzI5MWNtTmxVR0YwYUNCOGZDQnZPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdibVYzSUZsMEtIUm9hWE11YldGdVlXZGxjaWs3Q2lBZ0lDQWdJQ0FnWVM1elpYUlFZWFJvS0hSb2FYTXVjR0YwYUNrc0lHRXVjMlYwVW1WeGRXVnpkRWhsWVdSbGNpaDBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSXBMQ0JoTG5ObGRGZHBkR2hEY21Wa1pXNTBhV0ZzY3loMGFHbHpMbmRwZEdoRGNtVmtaVzUwYVdGc2N5a3NJR0V1Ykc5aFpDaGxMQ0JtZFc1amRHbHZiaWhzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdiblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdNZ1BTQktVMDlPTG5CaGNuTmxLR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaDFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUNFOVBTQjJiMmxrSURBZ0ppWWdhU2gxS1N3Z1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVTZUMkpxWldOMFRHOWhaR1Z5T2lCRFlXNG5kQ0J3WVhKelpTQWlJQ3NnWlNBcklDSXVJaXdnZFM1dFpYTnpZV2RsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJR011YldWMFlXUmhkR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hvSUQwOVBTQjJiMmxrSURBZ2ZId2dhQzUwZVhCbElEMDlQU0IyYjJsa0lEQWdmSHdnYUM1MGVYQmxMblJ2VEc5M1pYSkRZWE5sS0NrZ1BUMDlJQ0puWlc5dFpYUnllU0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nUTJGdUozUWdiRzloWkNBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdjaTV3WVhKelpTaGpMQ0IwS1RzS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lHRnplVzVqSUd4dllXUkJjM2x1WXlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxDQnBJRDBnZEdocGN5NXdZWFJvSUQwOVBTQWlJaUEvSUVkekxtVjRkSEpoWTNSVmNteENZWE5sS0dVcElEb2dkR2hwY3k1d1lYUm9Pd29nSUNBZ0lDQWdJSFJvYVhNdWNtVnpiM1Z5WTJWUVlYUm9JRDBnZEdocGN5NXlaWE52ZFhKalpWQmhkR2dnZkh3Z2FUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUJaZENoMGFHbHpMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJSEl1YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwTENCeUxuTmxkRkpsY1hWbGMzUklaV0ZrWlhJb2RHaHBjeTV5WlhGMVpYTjBTR1ZoWkdWeUtTd2djaTV6WlhSWGFYUm9RM0psWkdWdWRHbGhiSE1vZEdocGN5NTNhWFJvUTNKbFpHVnVkR2xoYkhNcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1lYZGhhWFFnY2k1c2IyRmtRWE41Ym1Nb1pTd2dkQ2tzSUdFZ1BTQktVMDlPTG5CaGNuTmxLRzhwTENCc0lEMGdZUzV0WlhSaFpHRjBZVHNLSUNBZ0lDQWdJQ0JwWmlBb2JDQTlQVDBnZG05cFpDQXdJSHg4SUd3dWRIbHdaU0E5UFQwZ2RtOXBaQ0F3SUh4OElHd3VkSGx3WlM1MGIweHZkMlZ5UTJGelpTZ3BJRDA5UFNBaVoyVnZiV1YwY25raUtTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lsUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNqb2dRMkZ1SjNRZ2JHOWhaQ0FpSUNzZ1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRjNZV2wwSUc0dWNHRnljMlZCYzNsdVl5aGhLVHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11Y0dGeWMyVkJibWx0WVhScGIyNXpLR1V1WVc1cGJXRjBhVzl1Y3lrc0lHa2dQU0IwYUdsekxuQmhjbk5sVTJoaGNHVnpLR1V1YzJoaGNHVnpLU3dnY2lBOUlIUm9hWE11Y0dGeWMyVkhaVzl0WlhSeWFXVnpLR1V1WjJWdmJXVjBjbWxsY3l3Z2FTa3NJRzhnUFNCMGFHbHpMbkJoY25ObFNXMWhaMlZ6S0dVdWFXMWhaMlZ6TENCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBaFBUMGdkbTlwWkNBd0lDWW1JSFFvWXlrN0NpQWdJQ0FnSUNBZ2ZTa3NJR0VnUFNCMGFHbHpMbkJoY25ObFZHVjRkSFZ5WlhNb1pTNTBaWGgwZFhKbGN5d2dieWtzSUd3Z1BTQjBhR2x6TG5CaGNuTmxUV0YwWlhKcFlXeHpLR1V1YldGMFpYSnBZV3h6TENCaEtTd2dZeUE5SUhSb2FYTXVjR0Z5YzJWUFltcGxZM1FvWlM1dlltcGxZM1FzSUhJc0lHd3NJR0VzSUc0cExDQm9JRDBnZEdocGN5NXdZWEp6WlZOclpXeGxkRzl1Y3lobExuTnJaV3hsZEc5dWN5d2dZeWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WW1sdVpGTnJaV3hsZEc5dWN5aGpMQ0JvS1N3Z2RDQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ0lURTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWkNCcGJpQnZLV2xtSUNodlcyUmRJR2x1YzNSaGJtTmxiMllnU0ZSTlRFbHRZV2RsUld4bGJXVnVkQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFNBOUlDRXdPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2RTQTlQVDBnSVRFZ0ppWWdkQ2hqS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdNN0NpQWdJQ0I5Q2lBZ0lDQmhjM2x1WXlCd1lYSnpaVUZ6ZVc1aktHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHRnljMlZCYm1sdFlYUnBiMjV6S0dVdVlXNXBiV0YwYVc5dWN5a3NJRzRnUFNCMGFHbHpMbkJoY25ObFUyaGhjR1Z6S0dVdWMyaGhjR1Z6S1N3Z2FTQTlJSFJvYVhNdWNHRnljMlZIWlc5dFpYUnlhV1Z6S0dVdVoyVnZiV1YwY21sbGN5d2diaWtzSUhJZ1BTQmhkMkZwZENCMGFHbHpMbkJoY25ObFNXMWhaMlZ6UVhONWJtTW9aUzVwYldGblpYTXBMQ0J2SUQwZ2RHaHBjeTV3WVhKelpWUmxlSFIxY21WektHVXVkR1Y0ZEhWeVpYTXNJSElwTENCaElEMGdkR2hwY3k1d1lYSnpaVTFoZEdWeWFXRnNjeWhsTG0xaGRHVnlhV0ZzY3l3Z2J5a3NJR3dnUFNCMGFHbHpMbkJoY25ObFQySnFaV04wS0dVdWIySnFaV04wTENCcExDQmhMQ0J2TENCMEtTd2dZeUE5SUhSb2FYTXVjR0Z5YzJWVGEyVnNaWFJ2Ym5Nb1pTNXphMlZzWlhSdmJuTXNJR3dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtSnBibVJUYTJWc1pYUnZibk1vYkN3Z1l5a3NJR3c3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVk5vWVhCbGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0I3ZlRzS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ2RtOXBaQ0F3S1NCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ1pTNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5QllkQ2dwTG1aeWIyMUtVMDlPS0dWYmJsMHBPd29nSUNBZ0lDQWdJQ0FnSUNCMFczSXVkWFZwWkYwZ1BTQnlPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxVMnRsYkdWMGIyNXpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIdDlMQ0JwSUQwZ2UzMDdDaUFnSUNBZ0lDQWdhV1lnS0hRdWRISmhkbVZ5YzJVb1puVnVZM1JwYjI0b2Npa2dld29nSUNBZ0lDQWdJQ0FnSUNCeUxtbHpRbTl1WlNBbUppQW9hVnR5TG5WMWFXUmRJRDBnY2lrN0NpQWdJQ0FnSUNBZ2ZTa3NJR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHVXViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2dZVzhvS1M1bWNtOXRTbE5QVGlobFczSmRMQ0JwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdibHRoTG5WMWFXUmRJRDBnWVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0N0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlVkbGIyMWxkSEpwWlhNb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzVsZHlCVmFEc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdVdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoTENCc0lEMGdaVnR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOM2FYUmphQ2hzTG5SNWNHVXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJa0oxWm1abGNrZGxiMjFsZEhKNUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkpibk4wWVc1alpXUkNkV1ptWlhKSFpXOXRaWFJ5ZVNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFZ1BTQnBMbkJoY25ObEtHd3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKSFpXOXRaWFJ5ZVNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nVkdobElHeGxaMkZqZVNCSFpXOXRaWFJ5ZVNCMGVYQmxJR2x6SUc1dklHeHZibWRsY2lCemRYQndiM0owWldRdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3dWRIbHdaU0JwYmlCMll5QS9JR0VnUFNCMlkxdHNMblI1Y0dWZExtWnliMjFLVTA5T0tHd3NJSFFwSURvZ1kyOXVjMjlzWlM1M1lYSnVLR0JVU0ZKRlJTNVBZbXBsWTNSTWIyRmtaWEk2SUZWdWMzVndjRzl5ZEdWa0lHZGxiMjFsZEhKNUlIUjVjR1VnSWlSN2JDNTBlWEJsZlNKZ0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRXVkWFZwWkNBOUlHd3VkWFZwWkN3Z2JDNXVZVzFsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR0V1Ym1GdFpTQTlJR3d1Ym1GdFpTa3NJR0V1YVhOQ2RXWm1aWEpIWlc5dFpYUnllU0E5UFQwZ0lUQWdKaVlnYkM1MWMyVnlSR0YwWVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hoTG5WelpYSkVZWFJoSUQwZ2JDNTFjMlZ5UkdGMFlTa3NJRzViYkM1MWRXbGtYU0E5SUdFN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzQ3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVTFoZEdWeWFXRnNjeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjdmU3dnYVNBOUlIdDlPd29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dlbWc3Q2lBZ0lDQWdJQ0FnSUNBZ0lISXVjMlYwVkdWNGRIVnlaWE1vZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBc0lHRWdQU0JsTG14bGJtZDBhRHNnYnlBOElHRTdJRzhyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdWYmIxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkM1MGVYQmxJRDA5UFNBaVRYVnNkR2xOWVhSbGNtbGhiQ0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQTdJR2dnUENCc0xtMWhkR1Z5YVdGc2N5NXNaVzVuZEdnN0lHZ3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdiQzV0WVhSbGNtbGhiSE5iYUYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1YmRTNTFkV2xrWFNBOVBUMGdkbTlwWkNBd0lDWW1JQ2h1VzNVdWRYVnBaRjBnUFNCeUxuQmhjbk5sS0hVcEtTd2dZeTV3ZFhOb0tHNWJkUzUxZFdsa1hTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbGJiQzUxZFdsa1hTQTlJR003Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdibHRzTG5WMWFXUmRJRDA5UFNCMmIybGtJREFnSmlZZ0tHNWJiQzUxZFdsa1hTQTlJSEl1Y0dGeWMyVW9iQ2twTENCcFcyd3VkWFZwWkYwZ1BTQnVXMnd1ZFhWcFpGMDdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlVGdWFXMWhkR2x2Ym5Nb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdlMzA3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SUhadmFXUWdNQ2tnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SUdVdWJHVnVaM1JvT3lCdUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUdWYmJsMHNJSElnUFNCTWNpNXdZWEp6WlNocEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZ0eUxuVjFhV1JkSUQwZ2Nqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNpQWdJQ0J3WVhKelpVbHRZV2RsY3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxDQnBJRDBnZTMwc0lISTdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdieWhzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVMbTFoYm1GblpYSXVhWFJsYlZOMFlYSjBLR3dwTENCeUxteHZZV1FvYkN3Z1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVMbTFoYm1GblpYSXVhWFJsYlVWdVpDaHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2dkbTlwWkNBd0xDQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzR1YldGdVlXZGxjaTVwZEdWdFJYSnliM0lvYkNrc0lHNHViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZU2hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnYkNBOVBTQWljM1J5YVc1bklpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQnNMQ0JvSUQwZ0wxNG9YQzljTHlsOEtGdGhMWHBkS3pvb1hDOWNMeWsvS1M5cExuUmxjM1FvWXlrZ1B5QmpJRG9nYmk1eVpYTnZkWEpqWlZCaGRHZ2dLeUJqT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzhvYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnlaWFIxY200Z2JDNWtZWFJoSUQ4Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHRjBZVG9nZDJrb2JDNTBlWEJsTENCc0xtUmhkR0VwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR3d1ZDJsa2RHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHd3VhR1ZwWjJoMENpQWdJQ0FnSUNBZ0lDQWdJSDBnT2lCdWRXeHNPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnZG05cFpDQXdJQ1ltSUdVdWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUc1bGR5QjZZU2gwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjaUE5SUc1bGR5QlNjaWhzS1N3Z2NpNXpaWFJEY205emMwOXlhV2RwYmloMGFHbHpMbU55YjNOelQzSnBaMmx1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQmpJRDBnTUN3Z2FDQTlJR1V1YkdWdVozUm9PeUJqSUR3Z2FEc2dZeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnWlZ0alhTd2daQ0E5SUhVdWRYSnNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29aQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBXM1V1ZFhWcFpGMGdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHWWdQU0F3TENCdElEMGdaQzVzWlc1bmRHZzdJR1lnUENCdE95Qm1LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VDQTlJR1JiWmwwc0lIWWdQU0JoS0hncE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMklDRTlQU0J1ZFd4c0lDWW1JQ2gySUdsdWMzUmhibU5sYjJZZ1NGUk5URWx0WVdkbFJXeGxiV1Z1ZENBL0lHbGJkUzUxZFdsa1hTNXdkWE5vS0hZcElEb2dhVnQxTG5WMWFXUmRMbkIxYzJnb2JtVjNJSEZ1S0hZdVpHRjBZU3dnZGk1M2FXUjBhQ3dnZGk1b1pXbG5hSFFwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pqRWdQU0JoS0hVdWRYSnNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbU1TQWhQVDBnYm5Wc2JDQW1KaUFvYVZ0MUxuVjFhV1JkSUQwZ1pqRXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcE93b2dJQ0FnZlFvZ0lDQWdZWE41Ym1NZ2NHRnljMlZKYldGblpYTkJjM2x1WXlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TENCdUlEMGdlMzBzSUdrN0NpQWdJQ0FnSUNBZ1lYTjVibU1nWm5WdVkzUnBiMjRnY2lodktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ2J5QTlQU0FpYzNSeWFXNW5JaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J2TENCc0lEMGdMMTRvWEM5Y0x5bDhLRnRoTFhwZEt6b29YQzljTHlrL0tTOXBMblJsYzNRb1lTa2dQeUJoSURvZ2RDNXlaWE52ZFhKalpWQmhkR2dnS3lCaE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGM1lXbDBJR2t1Ykc5aFpFRnplVzVqS0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjbVYwZFhKdUlHOHVaR0YwWVNBL0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0U2SUhkcEtHOHVkSGx3WlN3Z2J5NWtZWFJoS1N3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUJ2TG5kcFpIUm9MQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQnZMbWhsYVdkb2RBb2dJQ0FnSUNBZ0lDQWdJQ0I5SURvZ2JuVnNiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdJVDA5SUhadmFXUWdNQ0FtSmlCbExteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJRzVsZHlCU2NpaDBhR2x6TG0xaGJtRm5aWElwTENCcExuTmxkRU55YjNOelQzSnBaMmx1S0hSb2FYTXVZM0p2YzNOUGNtbG5hVzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3TENCaElEMGdaUzVzWlc1bmRHZzdJRzhnUENCaE95QnZLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JsVzI5ZExDQmpJRDBnYkM1MWNtdzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaGpLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWJiQzUxZFdsa1hTQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREFzSUhVZ1BTQmpMbXhsYm1kMGFEc2dhQ0E4SUhVN0lHZ3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdZMXRvWFN3Z1ppQTlJR0YzWVdsMElISW9aQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1lnSVQwOUlHNTFiR3dnSmlZZ0tHWWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVNXMWhaMlZGYkdWdFpXNTBJRDhnYmx0c0xuVjFhV1JkTG5CMWMyZ29aaWtnT2lCdVcyd3VkWFZwWkYwdWNIVnphQ2h1WlhjZ2NXNG9aaTVrWVhSaExDQm1MbmRwWkhSb0xDQm1MbWhsYVdkb2RDa3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvTVNBOUlHRjNZV2wwSUhJb2JDNTFjbXdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZ3hJQ0U5UFNCdWRXeHNJQ1ltSUNodVcyd3VkWFZwWkYwZ1BTQm9NU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNDdDaUFnSUNCOUNpQWdJQ0J3WVhKelpWUmxlSFIxY21WektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdUtISXNJRzhwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUjVjR1Z2WmlCeUlEMDlJQ0p1ZFcxaVpYSWlJRDhnY2lBNklDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRFeHZZV1JsY2k1d1lYSnpaVlJsZUhSMWNtVTZJRU52Ym5OMFlXNTBJSE5vYjNWc1pDQmlaU0JwYmlCdWRXMWxjbWxqSUdadmNtMHVJaXdnY2lrc0lHOWJjbDBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUh0OU93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQmxMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1pWdHlYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1lTNXBiV0ZuWlNBOVBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnblZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQk9ieUFpYVcxaFoyVWlJSE53WldOcFptbGxaQ0JtYjNJbkxDQmhMblYxYVdRcExDQjBXMkV1YVcxaFoyVmRJRDA5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNSTWIyRmtaWEk2SUZWdVpHVm1hVzVsWkNCcGJXRm5aU0lzSUdFdWFXMWhaMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkN3Z1l5QTlJSFJiWVM1cGJXRm5aVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lFRnljbUY1TG1selFYSnlZWGtvWXlrZ1B5QW9iQ0E5SUc1bGR5QnJhU2hqS1N3Z1l5NXNaVzVuZEdnZ1BUMDlJRFlnSmlZZ0tHd3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Da3BJRG9nS0dNZ0ppWWdZeTVrWVhSaElEOGdiQ0E5SUc1bGR5QnhiaWhqTG1SaGRHRXNJR011ZDJsa2RHZ3NJR011YUdWcFoyaDBLU0E2SUd3Z1BTQnVaWGNnYjNRb1l5a3NJR01nSmlZZ0tHd3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Da3BMQ0JzTG5WMWFXUWdQU0JoTG5WMWFXUXNJR0V1Ym1GdFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xtNWhiV1VnUFNCaExtNWhiV1VwTENCaExtMWhjSEJwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1dFlYQndhVzVuSUQwZ2JpaGhMbTFoY0hCcGJtY3NJR1I1S1Nrc0lHRXViMlptYzJWMElDRTlQU0IyYjJsa0lEQWdKaVlnYkM1dlptWnpaWFF1Wm5KdmJVRnljbUY1S0dFdWIyWm1jMlYwS1N3Z1lTNXlaWEJsWVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUJzTG5KbGNHVmhkQzVtY205dFFYSnlZWGtvWVM1eVpYQmxZWFFwTENCaExtTmxiblJsY2lBaFBUMGdkbTlwWkNBd0lDWW1JR3d1WTJWdWRHVnlMbVp5YjIxQmNuSmhlU2hoTG1ObGJuUmxjaWtzSUdFdWNtOTBZWFJwYjI0Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1eWIzUmhkR2x2YmlBOUlHRXVjbTkwWVhScGIyNHBMQ0JoTG5keVlYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNTNjbUZ3VXlBOUlHNG9ZUzUzY21Gd1d6QmRMQ0JUWXlrc0lHd3VkM0poY0ZRZ1BTQnVLR0V1ZDNKaGNGc3hYU3dnVTJNcEtTd2dZUzVtYjNKdFlYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNW1iM0p0WVhRZ1BTQmhMbVp2Y20xaGRDa3NJR0V1ZEhsd1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xuUjVjR1VnUFNCaExuUjVjR1VwTENCaExtVnVZMjlrYVc1bklDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dVpXNWpiMlJwYm1jZ1BTQmhMbVZ1WTI5a2FXNW5LU3dnWVM1dGFXNUdhV3gwWlhJZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYkM1dGFXNUdhV3gwWlhJZ1BTQnVLR0V1YldsdVJtbHNkR1Z5TENCVVl5a3BMQ0JoTG0xaFowWnBiSFJsY2lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG0xaFowWnBiSFJsY2lBOUlHNG9ZUzV0WVdkR2FXeDBaWElzSUZSaktTa3NJR0V1WVc1cGMyOTBjbTl3ZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hzTG1GdWFYTnZkSEp2Y0hrZ1BTQmhMbUZ1YVhOdmRISnZjSGtwTENCaExtWnNhWEJaSUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1Wm14cGNGa2dQU0JoTG1ac2FYQlpLU3dnWVM1d2NtVnRkV3gwYVhCc2VVRnNjR2hoSUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1Y0hKbGJYVnNkR2x3YkhsQmJIQm9ZU0E5SUdFdWNISmxiWFZzZEdsd2JIbEJiSEJvWVNrc0lHRXVkVzV3WVdOclFXeHBaMjV0Wlc1MElDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dWRXNXdZV05yUVd4cFoyNXRaVzUwSUQwZ1lTNTFibkJoWTJ0QmJHbG5ibTFsYm5RcExDQmhMblZ6WlhKRVlYUmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VkWE5sY2tSaGRHRWdQU0JoTG5WelpYSkVZWFJoS1N3Z2FWdGhMblYxYVdSZElEMGdiRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVTlpYW1WamRDaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzg3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWVNoa0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwVzJSZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0JuWlc5dFpYUnllU0lzSUdRcExDQjBXMlJkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCc0tHUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1FnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1pDa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURBc0lIZ2dQU0JrTG14bGJtZDBhRHNnYlNBOElIZzdJRzByS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnWkZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JsdDJYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lCVmJtUmxabWx1WldRZ2JXRjBaWEpwWVd3aUxDQjJLU3dnWmk1d2RYTm9LRzViZGwwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1VzJSZElEMDlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRlZ1WkdWbWFXNWxaQ0J0WVhSbGNtbGhiQ0lzSUdRcExDQnVXMlJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR01vWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVnRrWFNBOVBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQlZibVJsWm1sdVpXUWdkR1Y0ZEhWeVpTSXNJR1FwTENCcFcyUmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FDd2dkVHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aUzUwZVhCbEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVMk5sYm1VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCdWJ5d2daUzVpWVdOclozSnZkVzVrSUNFOVBTQjJiMmxrSURBZ0ppWWdLRTUxYldKbGNpNXBjMGx1ZEdWblpYSW9aUzVpWVdOclozSnZkVzVrS1NBL0lHOHVZbUZqYTJkeWIzVnVaQ0E5SUc1bGR5QmhaU2hsTG1KaFkydG5jbTkxYm1RcElEb2dieTVpWVdOclozSnZkVzVrSUQwZ1l5aGxMbUpoWTJ0bmNtOTFibVFwS1N3Z1pTNWxiblpwY205dWJXVnVkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbVZ1ZG1seWIyNXRaVzUwSUQwZ1l5aGxMbVZ1ZG1seWIyNXRaVzUwS1Nrc0lHVXVabTluSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1V1Wm05bkxuUjVjR1VnUFQwOUlDSkdiMmNpSUQ4Z2J5NW1iMmNnUFNCdVpYY2dRbklvWlM1bWIyY3VZMjlzYjNJc0lHVXVabTluTG01bFlYSXNJR1V1Wm05bkxtWmhjaWtnT2lCbExtWnZaeTUwZVhCbElEMDlQU0FpUm05blJYaHdNaUlnSmlZZ0tHOHVabTluSUQwZ2JtVjNJRTV5S0dVdVptOW5MbU52Ykc5eUxDQmxMbVp2Wnk1a1pXNXphWFI1S1NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxCbGNuTndaV04wYVhabFEyRnRaWEpoSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnZFhRb1pTNW1iM1lzSUdVdVlYTndaV04wTENCbExtNWxZWElzSUdVdVptRnlLU3dnWlM1bWIyTjFjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbVp2WTNWeklEMGdaUzVtYjJOMWN5a3NJR1V1ZW05dmJTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxucHZiMjBnUFNCbExucHZiMjBwTENCbExtWnBiRzFIWVhWblpTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtWnBiRzFIWVhWblpTQTlJR1V1Wm1sc2JVZGhkV2RsS1N3Z1pTNW1hV3h0VDJabWMyVjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVabWxzYlU5bVpuTmxkQ0E5SUdVdVptbHNiVTltWm5ObGRDa3NJR1V1ZG1sbGR5QWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuWnBaWGNnUFNCUFltcGxZM1F1WVhOemFXZHVLSHQ5TENCbExuWnBaWGNwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pQY25Sb2IyZHlZWEJvYVdORFlXMWxjbUVpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJHY2lobExteGxablFzSUdVdWNtbG5hSFFzSUdVdWRHOXdMQ0JsTG1KdmRIUnZiU3dnWlM1dVpXRnlMQ0JsTG1aaGNpa3NJR1V1ZW05dmJTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxucHZiMjBnUFNCbExucHZiMjBwTENCbExuWnBaWGNnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTUyYVdWM0lEMGdUMkpxWldOMExtRnpjMmxuYmloN2ZTd2daUzUyYVdWM0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVFXMWlhV1Z1ZEV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2djV0VvWlM1amIyeHZjaXdnWlM1cGJuUmxibk5wZEhrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWtScGNtVmpkR2x2Ym1Gc1RHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJYWVNobExtTnZiRzl5TENCbExtbHVkR1Z1YzJsMGVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVVHOXBiblJNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYm1WM0lFZGhLR1V1WTI5c2IzSXNJR1V1YVc1MFpXNXphWFI1TENCbExtUnBjM1JoYm1ObExDQmxMbVJsWTJGNUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKU1pXTjBRWEpsWVV4cFoyaDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2dXR0VvWlM1amIyeHZjaXdnWlM1cGJuUmxibk5wZEhrc0lHVXVkMmxrZEdnc0lHVXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKVGNHOTBUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCSVlTaGxMbU52Ykc5eUxDQmxMbWx1ZEdWdWMybDBlU3dnWlM1a2FYTjBZVzVqWlN3Z1pTNWhibWRzWlN3Z1pTNXdaVzUxYldKeVlTd2daUzVrWldOaGVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVNHVnRhWE53YUdWeVpVeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnVldFb1pTNWpiMnh2Y2l3Z1pTNW5jbTkxYm1SRGIyeHZjaXdnWlM1cGJuUmxibk5wZEhrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWt4cFoyaDBVSEp2WW1VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCSWNpZ3BMbVp5YjIxS1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbE5yYVc1dVpXUk5aWE5vSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdnZ1BTQmhLR1V1WjJWdmJXVjBjbmtwTENCMUlEMGdiQ2hsTG0xaGRHVnlhV0ZzS1N3Z2J5QTlJRzVsZHlCemJ5aG9MQ0IxS1N3Z1pTNWlhVzVrVFc5a1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtSnBibVJOYjJSbElEMGdaUzVpYVc1a1RXOWtaU2tzSUdVdVltbHVaRTFoZEhKcGVDQWhQVDBnZG05cFpDQXdJQ1ltSUc4dVltbHVaRTFoZEhKcGVDNW1jbTl0UVhKeVlYa29aUzVpYVc1a1RXRjBjbWw0S1N3Z1pTNXphMlZzWlhSdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxuTnJaV3hsZEc5dUlEMGdaUzV6YTJWc1pYUnZiaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlUV1Z6YUNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb0lEMGdZU2hsTG1kbGIyMWxkSEo1S1N3Z2RTQTlJR3dvWlM1dFlYUmxjbWxoYkNrc0lHOGdQU0J1WlhjZ2MzUW9hQ3dnZFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpU1c1emRHRnVZMlZrVFdWemFDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9JRDBnWVNobExtZGxiMjFsZEhKNUtTd2dkU0E5SUd3b1pTNXRZWFJsY21saGJDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlHVXVZMjkxYm5Rc0lHWWdQU0JsTG1sdWMzUmhibU5sVFdGMGNtbDRMQ0J0SUQwZ1pTNXBibk4wWVc1alpVTnZiRzl5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUI0WVNob0xDQjFMQ0JrS1N3Z2J5NXBibk4wWVc1alpVMWhkSEpwZUNBOUlHNWxkeUJZYmlodVpYY2dSbXh2WVhRek1rRnljbUY1S0dZdVlYSnlZWGtwTENBeE5pa3NJRzBnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTVwYm5OMFlXNWpaVU52Ykc5eUlEMGdibVYzSUZodUtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb2JTNWhjbkpoZVNrc0lHMHVhWFJsYlZOcGVtVXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSk1UMFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJpYURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pNYVc1bElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ2IyNG9ZU2hsTG1kbGIyMWxkSEo1S1N3Z2JDaGxMbTFoZEdWeWFXRnNLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlUR2x1WlV4dmIzQWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QjVZU2hoS0dVdVoyVnZiV1YwY25rcExDQnNLR1V1YldGMFpYSnBZV3dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pNYVc1bFUyVm5iV1Z1ZEhNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCM2RDaGhLR1V1WjJWdmJXVjBjbmtwTENCc0tHVXViV0YwWlhKcFlXd3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlFiMmx1ZEVOc2IzVmtJam9LSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVUc5cGJuUnpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2dlbklvWVNobExtZGxiMjFsZEhKNUtTd2diQ2hsTG0xaGRHVnlhV0ZzS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVTNCeWFYUmxJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2djbThvYkNobExtMWhkR1Z5YVdGc0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVIzSnZkWEFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUJJYmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pDYjI1bElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ2IyODdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ1RtVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNodkxuVjFhV1FnUFNCbExuVjFhV1FzSUdVdWJtRnRaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbTVoYldVZ1BTQmxMbTVoYldVcExDQmxMbTFoZEhKcGVDQWhQVDBnZG05cFpDQXdJRDhnS0c4dWJXRjBjbWw0TG1aeWIyMUJjbkpoZVNobExtMWhkSEpwZUNrc0lHVXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQmxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVXBMQ0J2TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnSmlZZ2J5NXRZWFJ5YVhndVpHVmpiMjF3YjNObEtHOHVjRzl6YVhScGIyNHNJRzh1Y1hWaGRHVnlibWx2Yml3Z2J5NXpZMkZzWlNrcElEb2dLR1V1Y0c5emFYUnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQnZMbkJ2YzJsMGFXOXVMbVp5YjIxQmNuSmhlU2hsTG5CdmMybDBhVzl1S1N3Z1pTNXliM1JoZEdsdmJpQWhQVDBnZG05cFpDQXdJQ1ltSUc4dWNtOTBZWFJwYjI0dVpuSnZiVUZ5Y21GNUtHVXVjbTkwWVhScGIyNHBMQ0JsTG5GMVlYUmxjbTVwYjI0Z0lUMDlJSFp2YVdRZ01DQW1KaUJ2TG5GMVlYUmxjbTVwYjI0dVpuSnZiVUZ5Y21GNUtHVXVjWFZoZEdWeWJtbHZiaWtzSUdVdWMyTmhiR1VnSVQwOUlIWnZhV1FnTUNBbUppQnZMbk5qWVd4bExtWnliMjFCY25KaGVTaGxMbk5qWVd4bEtTa3NJR1V1WTJGemRGTm9ZV1J2ZHlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1OaGMzUlRhR0ZrYjNjZ1BTQmxMbU5oYzNSVGFHRmtiM2NwTENCbExuSmxZMlZwZG1WVGFHRmtiM2NnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTV5WldObGFYWmxVMmhoWkc5M0lEMGdaUzV5WldObGFYWmxVMmhoWkc5M0tTd2daUzV6YUdGa2IzY2dKaVlnS0dVdWMyaGhaRzkzTG1KcFlYTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXphR0ZrYjNjdVltbGhjeUE5SUdVdWMyaGhaRzkzTG1KcFlYTXBMQ0JsTG5Ob1lXUnZkeTV1YjNKdFlXeENhV0Z6SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1YzJoaFpHOTNMbTV2Y20xaGJFSnBZWE1nUFNCbExuTm9ZV1J2ZHk1dWIzSnRZV3hDYVdGektTd2daUzV6YUdGa2IzY3VjbUZrYVhWeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWMyaGhaRzkzTG5KaFpHbDFjeUE5SUdVdWMyaGhaRzkzTG5KaFpHbDFjeWtzSUdVdWMyaGhaRzkzTG0xaGNGTnBlbVVnSVQwOUlIWnZhV1FnTUNBbUppQnZMbk5vWVdSdmR5NXRZWEJUYVhwbExtWnliMjFCY25KaGVTaGxMbk5vWVdSdmR5NXRZWEJUYVhwbEtTd2daUzV6YUdGa2IzY3VZMkZ0WlhKaElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWMyaGhaRzkzTG1OaGJXVnlZU0E5SUhSb2FYTXVjR0Z5YzJWUFltcGxZM1FvWlM1emFHRmtiM2N1WTJGdFpYSmhLU2twTENCbExuWnBjMmxpYkdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1MmFYTnBZbXhsSUQwZ1pTNTJhWE5wWW14bEtTd2daUzVtY25WemRIVnRRM1ZzYkdWa0lDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUdVdVpuSjFjM1IxYlVOMWJHeGxaQ2tzSUdVdWNtVnVaR1Z5VDNKa1pYSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXlaVzVrWlhKUGNtUmxjaUE5SUdVdWNtVnVaR1Z5VDNKa1pYSXBMQ0JsTG5WelpYSkVZWFJoSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1ZFhObGNrUmhkR0VnUFNCbExuVnpaWEpFWVhSaEtTd2daUzVzWVhsbGNuTWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NXNZWGxsY25NdWJXRnpheUE5SUdVdWJHRjVaWEp6S1N3Z1pTNWphR2xzWkhKbGJpQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrTVNBOUlHVXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWmpFZ1BTQXdPeUJtTVNBOElHUXhMbXhsYm1kMGFEc2daakVyS3lsdkxtRmtaQ2gwYUdsekxuQmhjbk5sVDJKcVpXTjBLR1F4VzJZeFhTd2dkQ3dnYml3Z2FTd2djaWtwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aUzVoYm1sdFlYUnBiMjV6SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUXlJRDBnWlM1aGJtbHRZWFJwYjI1ek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1l5SUQwZ01Ec2daaklnUENCa01pNXNaVzVuZEdnN0lHWXlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMHhJRDBnWkRKYlpqSmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieTVoYm1sdFlYUnBiMjV6TG5CMWMyZ29jbHR0TVYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGxMblI1Y0dVZ1BUMDlJQ0pNVDBRaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVlYVjBiMVZ3WkdGMFpTQWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtRjFkRzlWY0dSaGRHVWdQU0JsTG1GMWRHOVZjR1JoZEdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pETWdQU0JsTG14bGRtVnNjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbU15QTlJREE3SUdZeklEd2daRE11YkdWdVozUm9PeUJtTXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0TWlBOUlHUXpXMll6WFN3Z2VDQTlJRzh1WjJWMFQySnFaV04wUW5sUWNtOXdaWEowZVNnaWRYVnBaQ0lzSUcweUxtOWlhbVZqZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNElDRTlQU0IyYjJsa0lEQWdKaVlnYnk1aFpHUk1aWFpsYkNoNExDQnRNaTVrYVhOMFlXNWpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHODdDaUFnSUNCOUNpQWdJQ0JpYVc1a1UydGxiR1YwYjI1ektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCUFltcGxZM1F1YTJWNWN5aDBLUzVzWlc1bmRHZ2dJVDA5SURBZ0ppWWdaUzUwY21GMlpYSnpaU2htZFc1amRHbHZiaWh1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUxtbHpVMnRwYm01bFpFMWxjMmdnUFQwOUlDRXdJQ1ltSUc0dWMydGxiR1YwYjI0Z0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBXMjR1YzJ0bGJHVjBiMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBOVBUMGdkbTlwWkNBd0lEOGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklFNXZJSE5yWld4bGRHOXVJR1p2ZFc1a0lIZHBkR2dnVlZWSlJEb2lMQ0J1TG5OclpXeGxkRzl1S1NBNklHNHVZbWx1WkNocExDQnVMbUpwYm1STllYUnlhWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCelpYUlVaWGgwZFhKbFVHRjBhQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUF1YzJWMFZHVjRkSFZ5WlZCaGRHZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1elpYUlNaWE52ZFhKalpWQmhkR2dvS1M0aUtTd2dkR2hwY3k1elpYUlNaWE52ZFhKalpWQmhkR2dvWlNrN0NpQWdJQ0I5Q24wc0lHUjVJRDBnZXdvZ0lDQWdWVlpOWVhCd2FXNW5PaUJvWVN3S0lDQWdJRU4xWW1WU1pXWnNaV04wYVc5dVRXRndjR2x1WnpvZ1Fta3NDaUFnSUNCRGRXSmxVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJSHBwTEFvZ0lDQWdSWEYxYVhKbFkzUmhibWQxYkdGeVVtVm1iR1ZqZEdsdmJrMWhjSEJwYm1jNklFUnpMQW9nSUNBZ1JYRjFhWEpsWTNSaGJtZDFiR0Z5VW1WbWNtRmpkR2x2YmsxaGNIQnBibWM2SUVaekxBb2dJQ0FnUTNWaVpWVldVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRkJ5TEFvZ0lDQWdRM1ZpWlZWV1VtVm1jbUZqZEdsdmJrMWhjSEJwYm1jNklGZHpDbjBzSUZOaklEMGdld29nSUNBZ1VtVndaV0YwVjNKaGNIQnBibWM2SUU1ekxBb2dJQ0FnUTJ4aGJYQlViMFZrWjJWWGNtRndjR2x1WnpvZ2RuUXNDaUFnSUNCTmFYSnliM0psWkZKbGNHVmhkRmR5WVhCd2FXNW5PaUJDY3dwOUxDQlVZeUE5SUhzS0lDQWdJRTVsWVhKbGMzUkdhV3gwWlhJNklISjBMQW9nSUNBZ1RtVmhjbVZ6ZEUxcGNHMWhjRTVsWVhKbGMzUkdhV3gwWlhJNklIUmhMQW9nSUNBZ1RtVmhjbVZ6ZEUxcGNHMWhjRXhwYm1WaGNrWnBiSFJsY2pvZ2JtRXNDaUFnSUNCTWFXNWxZWEpHYVd4MFpYSTZJSFIwTEFvZ0lDQWdUR2x1WldGeVRXbHdiV0Z3VG1WaGNtVnpkRVpwYkhSbGNqb2dWMk1zQ2lBZ0lDQk1hVzVsWVhKTmFYQnRZWEJNYVc1bFlYSkdhV3gwWlhJNklGVnBDbjBzSUU5b0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lDQWdJQ0IwZVhCbGIyWWdZM0psWVhSbFNXMWhaMlZDYVhSdFlYQWdQaUFpZFNJZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpVSnBkRzFoY0V4dllXUmxjam9nWTNKbFlYUmxTVzFoWjJWQ2FYUnRZWEFvS1NCdWIzUWdjM1Z3Y0c5eWRHVmtMaUlwTENCMGVYQmxiMllnWm1WMFkyZ2dQaUFpZFNJZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpVSnBkRzFoY0V4dllXUmxjam9nWm1WMFkyZ29LU0J1YjNRZ2MzVndjRzl5ZEdWa0xpSXBMQ0IwYUdsekxtOXdkR2x2Ym5NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpXMTFiSFJwY0d4NVFXeHdhR0U2SUNKdWIyNWxJZ29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCelpYUlBjSFJwYjI1ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmNIUnBiMjV6SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHVWdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTQTlJQ0lpS1N3Z2RHaHBjeTV3WVhSb0lDRTlQU0IyYjJsa0lEQWdKaVlnS0dVZ1BTQjBhR2x6TG5CaGRHZ2dLeUJsS1N3Z1pTQTlJSFJvYVhNdWJXRnVZV2RsY2k1eVpYTnZiSFpsVlZKTUtHVXBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRTVwTG1kbGRDaGxLVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjaTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1N3Z2MyVjBWR2x0Wlc5MWRDaG1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQW1KaUIwS0c4cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5TENBd0tTd2dienNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdFdVkzSmxaR1Z1ZEdsaGJITWdQU0IwYUdsekxtTnliM056VDNKcFoybHVJRDA5UFNBaVlXNXZibmx0YjNWeklpQS9JQ0p6WVcxbExXOXlhV2RwYmlJZ09pQWlhVzVqYkhWa1pTSXNJR0V1YUdWaFpHVnljeUE5SUhSb2FYTXVjbVZ4ZFdWemRFaGxZV1JsY2l3Z1ptVjBZMmdvWlN3Z1lTa3VkR2hsYmlobWRXNWpkR2x2Ymloc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJzTG1Kc2IySW9LVHNLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnlaV0YwWlVsdFlXZGxRbWwwYldGd0tHd3NJRTlpYW1WamRDNWhjM05wWjI0b2NpNXZjSFJwYjI1ekxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2xOd1lXTmxRMjl1ZG1WeWMybHZiam9nSW01dmJtVWlDaUFnSUNBZ0lDQWdJQ0FnSUgwcEtUc0tJQ0FnSUNBZ0lDQjlLUzUwYUdWdUtHWjFibU4wYVc5dUtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1Rta3VZV1JrS0dVc0lHd3BMQ0IwSUNZbUlIUW9iQ2tzSUhJdWJXRnVZV2RsY2k1cGRHVnRSVzVrS0dVcE93b2dJQ0FnSUNBZ0lIMHBMbU5oZEdOb0tHWjFibU4wYVc5dUtHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTQW1KaUJwS0d3cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWeWNtOXlLR1VwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ1WkNobEtUc0tJQ0FnSUNBZ0lDQjlLU3dnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtUc0tJQ0FnSUgwS2ZUc0tUMmd1Y0hKdmRHOTBlWEJsTG1selNXMWhaMlZDYVhSdFlYQk1iMkZrWlhJZ1BTQWhNRHNLZG1GeUlGTnpMQ0JJYUNBOUlIc0tJQ0FnSUdkbGRFTnZiblJsZUhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRjeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaFRjeUE5SUc1bGR5QW9kMmx1Wkc5M0xrRjFaR2x2UTI5dWRHVjRkQ0I4ZkNCM2FXNWtiM2N1ZDJWaWEybDBRWFZrYVc5RGIyNTBaWGgwS1Nrc0lGTnpPd29nSUNBZ2ZTd0tJQ0FnSUhObGRFTnZiblJsZUhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0JUY3lBOUlITTdDaUFnSUNCOUNuMHNJR3RvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRzVsZHlCWmRDaDBhR2x6TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUc4dWMyVjBVbVZ6Y0c5dWMyVlVlWEJsS0NKaGNuSmhlV0oxWm1abGNpSXBMQ0J2TG5ObGRGQmhkR2dvZEdocGN5NXdZWFJvS1N3Z2J5NXpaWFJTWlhGMVpYTjBTR1ZoWkdWeUtIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpa3NJRzh1YzJWMFYybDBhRU55WldSbGJuUnBZV3h6S0hSb2FYTXVkMmwwYUVOeVpXUmxiblJwWVd4ektTd2dieTVzYjJGa0tHVXNJR1oxYm1OMGFXOXVLR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkSEo1SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVM1emJHbGpaU2d3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVob0xtZGxkRU52Ym5SbGVIUW9LUzVrWldOdlpHVkJkV1JwYjBSaGRHRW9iQ3dnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFvYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCallYUmphQ0FvYkRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQeUJwS0d3eEtTQTZJR052Ym5OdmJHVXVaWEp5YjNJb2JERXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2s3Q2lBZ0lDQjlDbjBzSUVkb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCSWNpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9kbTlwWkNBd0xDQnVLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzVsZHlCaFpTZ3BMbk5sZENobEtTd2djaUE5SUc1bGR5QmhaU2dwTG5ObGRDaDBLU3dnYnlBOUlHNWxkeUJOS0drdWNpd2dhUzVuTENCcExtSXBMQ0JoSUQwZ2JtVjNJRTBvY2k1eUxDQnlMbWNzSUhJdVlpa3NJR3dnUFNCTllYUm9Mbk54Y25Rb1RXRjBhQzVRU1Nrc0lHTWdQU0JzSUNvZ1RXRjBhQzV6Y1hKMEtDNDNOU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphQzVqYjJWbVptbGphV1Z1ZEhOYk1GMHVZMjl3ZVNodktTNWhaR1FvWVNrdWJYVnNkR2x3YkhsVFkyRnNZWElvYkNrc0lIUm9hWE11YzJndVkyOWxabVpwWTJsbGJuUnpXekZkTG1OdmNIa29ieWt1YzNWaUtHRXBMbTExYkhScGNHeDVVMk5oYkdGeUtHTXBPd29nSUNBZ2ZRcDlPd3BIYUM1d2NtOTBiM1I1Y0dVdWFYTklaVzFwYzNCb1pYSmxUR2xuYUhSUWNtOWlaU0E5SUNFd093cDJZWElnVm1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVoeUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2loMmIybGtJREFzSUhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJR0ZsS0NrdWMyVjBLR1VwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjMmd1WTI5bFptWnBZMmxsYm5Seld6QmRMbk5sZENodUxuSXNJRzR1Wnl3Z2JpNWlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3lJQ29nVFdGMGFDNXpjWEowS0UxaGRHZ3VVRWtwS1RzS0lDQWdJSDBLZlRzS1ZtZ3VjSEp2ZEc5MGVYQmxMbWx6UVcxaWFXVnVkRXhwWjJoMFVISnZZbVVnUFNBaE1Ec0tkbUZ5SUVWaklEMGdibVYzSUhCbExDQkJZeUE5SUc1bGR5QndaU3dnUm00Z1BTQnVaWGNnY0dVc0lHWjVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUzUmxjbVZ2UTJGdFpYSmhJaXdnZEdocGN5NWhjM0JsWTNRZ1BTQXhMQ0IwYUdsekxtVjVaVk5sY0NBOUlDNHdOalFzSUhSb2FYTXVZMkZ0WlhKaFRDQTlJRzVsZHlCMWRDd2dkR2hwY3k1allXMWxjbUZNTG14aGVXVnljeTVsYm1GaWJHVW9NU2tzSUhSb2FYTXVZMkZ0WlhKaFRDNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVZMkZ0WlhKaFVpQTlJRzVsZHlCMWRDd2dkR2hwY3k1allXMWxjbUZTTG14aGVXVnljeTVsYm1GaWJHVW9NaWtzSUhSb2FYTXVZMkZ0WlhKaFVpNXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVYMk5oWTJobElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCbWIyTjFjem9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnWm05Mk9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUNBZ0lDQmhjM0JsWTNRNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxZWEk2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdaaGNqb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdlbTl2YlRvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1pYbGxVMlZ3T2lCdWRXeHNDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlqWVdOb1pUc0tJQ0FnSUNBZ0lDQnBaaUFvZEM1bWIyTjFjeUFoUFQwZ1pTNW1iMk4xY3lCOGZDQjBMbVp2ZGlBaFBUMGdaUzVtYjNZZ2ZId2dkQzVoYzNCbFkzUWdJVDA5SUdVdVlYTndaV04wSUNvZ2RHaHBjeTVoYzNCbFkzUWdmSHdnZEM1dVpXRnlJQ0U5UFNCbExtNWxZWElnZkh3Z2RDNW1ZWElnSVQwOUlHVXVabUZ5SUh4OElIUXVlbTl2YlNBaFBUMGdaUzU2YjI5dElIeDhJSFF1WlhsbFUyVndJQ0U5UFNCMGFHbHpMbVY1WlZObGNDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMExtWnZZM1Z6SUQwZ1pTNW1iMk4xY3l3Z2RDNW1iM1lnUFNCbExtWnZkaXdnZEM1aGMzQmxZM1FnUFNCbExtRnpjR1ZqZENBcUlIUm9hWE11WVhOd1pXTjBMQ0IwTG01bFlYSWdQU0JsTG01bFlYSXNJSFF1Wm1GeUlEMGdaUzVtWVhJc0lIUXVlbTl2YlNBOUlHVXVlbTl2YlN3Z2RDNWxlV1ZUWlhBZ1BTQjBhR2x6TG1WNVpWTmxjQ3dnUm00dVkyOXdlU2hsTG5CeWIycGxZM1JwYjI1TllYUnlhWGdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUXVaWGxsVTJWd0lDOGdNaXdnY2lBOUlHa2dLaUIwTG01bFlYSWdMeUIwTG1adlkzVnpMQ0J2SUQwZ2RDNXVaV0Z5SUNvZ1RXRjBhQzUwWVc0b1YyNGdLaUIwTG1admRpQXFJQzQxS1NBdklIUXVlbTl2YlN3Z1lTd2diRHNLSUNBZ0lDQWdJQ0FnSUNBZ1FXTXVaV3hsYldWdWRITmJNVEpkSUQwZ0xXa3NJRVZqTG1Wc1pXMWxiblJ6V3pFeVhTQTlJR2tzSUdFZ1BTQXRieUFxSUhRdVlYTndaV04wSUNzZ2Npd2diQ0E5SUc4Z0tpQjBMbUZ6Y0dWamRDQXJJSElzSUVadUxtVnNaVzFsYm5Seld6QmRJRDBnTWlBcUlIUXVibVZoY2lBdklDaHNJQzBnWVNrc0lFWnVMbVZzWlcxbGJuUnpXemhkSUQwZ0tHd2dLeUJoS1NBdklDaHNJQzBnWVNrc0lIUm9hWE11WTJGdFpYSmhUQzV3Y205cVpXTjBhVzl1VFdGMGNtbDRMbU52Y0hrb1JtNHBMQ0JoSUQwZ0xXOGdLaUIwTG1GemNHVmpkQ0F0SUhJc0lHd2dQU0J2SUNvZ2RDNWhjM0JsWTNRZ0xTQnlMQ0JHYmk1bGJHVnRaVzUwYzFzd1hTQTlJRElnS2lCMExtNWxZWElnTHlBb2JDQXRJR0VwTENCR2JpNWxiR1Z0Wlc1MGMxczRYU0E5SUNoc0lDc2dZU2tnTHlBb2JDQXRJR0VwTENCMGFHbHpMbU5oYldWeVlWSXVjSEp2YW1WamRHbHZiazFoZEhKcGVDNWpiM0I1S0VadUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1allXMWxjbUZNTG0xaGRISnBlRmR2Y214a0xtTnZjSGtvWlM1dFlYUnlhWGhYYjNKc1pDa3ViWFZzZEdsd2JIa29RV01wTENCMGFHbHpMbU5oYldWeVlWSXViV0YwY21sNFYyOXliR1F1WTI5d2VTaGxMbTFoZEhKcGVGZHZjbXhrS1M1dGRXeDBhWEJzZVNoRll5azdDaUFnSUNCOUNuMHNJRmRvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlDRXdLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtRjFkRzlUZEdGeWRDQTlJR1VzSUhSb2FYTXVjM1JoY25SVWFXMWxJRDBnTUN3Z2RHaHBjeTV2YkdSVWFXMWxJRDBnTUN3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlNBOUlEQXNJSFJvYVhNdWNuVnVibWx1WnlBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnYzNSaGNuUW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXpkR0Z5ZEZScGJXVWdQU0JEWXlncExDQjBhR2x6TG05c1pGUnBiV1VnUFNCMGFHbHpMbk4wWVhKMFZHbHRaU3dnZEdocGN5NWxiR0Z3YzJWa1ZHbHRaU0E5SURBc0lIUm9hWE11Y25WdWJtbHVaeUE5SUNFd093b2dJQ0FnZlFvZ0lDQWdjM1J2Y0NncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFVnNZWEJ6WldSVWFXMWxLQ2tzSUhSb2FYTXVjblZ1Ym1sdVp5QTlJQ0V4TENCMGFHbHpMbUYxZEc5VGRHRnlkQ0E5SUNFeE93b2dJQ0FnZlFvZ0lDQWdaMlYwUld4aGNITmxaRlJwYldVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFJHVnNkR0VvS1N3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlRzS0lDQWdJSDBLSUNBZ0lHZGxkRVJsYkhSaEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdNRHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVoZFhSdlUzUmhjblFnSmlZZ0lYUm9hWE11Y25WdWJtbHVaeWtnY21WMGRYSnVJSFJvYVhNdWMzUmhjblFvS1N3Z01Ec0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NXlkVzV1YVc1bktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnUTJNb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlDaDBJQzBnZEdocGN5NXZiR1JVYVcxbEtTQXZJREZsTXl3Z2RHaHBjeTV2YkdSVWFXMWxJRDBnZEN3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlNBclBTQmxPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnUTJNb0tTQjdDaUFnSUNCeVpYUjFjbTRnS0hSNWNHVnZaaUJ3WlhKbWIzSnRZVzVqWlNBK0lDSjFJaUEvSUVSaGRHVWdPaUJ3WlhKbWIzSnRZVzVqWlNrdWJtOTNLQ2s3Q24wS2RtRnlJRTV1SUQwZ2JtVjNJRTBzSUV4aklEMGdibVYzSUdkMExDQndlU0E5SUc1bGR5Qk5MQ0JDYmlBOUlHNWxkeUJOTENCdGVTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKQmRXUnBiMHhwYzNSbGJtVnlJaXdnZEdocGN5NWpiMjUwWlhoMElEMGdTR2d1WjJWMFEyOXVkR1Y0ZENncExDQjBhR2x6TG1kaGFXNGdQU0IwYUdsekxtTnZiblJsZUhRdVkzSmxZWFJsUjJGcGJpZ3BMQ0IwYUdsekxtZGhhVzR1WTI5dWJtVmpkQ2gwYUdsekxtTnZiblJsZUhRdVpHVnpkR2x1WVhScGIyNHBMQ0IwYUdsekxtWnBiSFJsY2lBOUlHNTFiR3dzSUhSb2FYTXVkR2x0WlVSbGJIUmhJRDBnTUN3Z2RHaHBjeTVmWTJ4dlkyc2dQU0J1WlhjZ1YyZzdDaUFnSUNCOUNpQWdJQ0JuWlhSSmJuQjFkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1T3dvZ0lDQWdmUW9nSUNBZ2NtVnRiM1psUm1sc2RHVnlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnBiSFJsY2lBaFBUMGdiblZzYkNBbUppQW9kR2hwY3k1bllXbHVMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhJcExDQjBhR2x6TG1acGJIUmxjaTVrYVhOamIyNXVaV04wS0hSb2FYTXVZMjl1ZEdWNGRDNWtaWE4wYVc1aGRHbHZiaWtzSUhSb2FYTXVaMkZwYmk1amIyNXVaV04wS0hSb2FYTXVZMjl1ZEdWNGRDNWtaWE4wYVc1aGRHbHZiaWtzSUhSb2FYTXVabWxzZEdWeUlEMGdiblZzYkNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3gwWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm1sc2RHVnlPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJtbHNkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVtYVd4MFpYSWdJVDA5SUc1MWJHd2dQeUFvZEdocGN5NW5ZV2x1TG1ScGMyTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSXBMQ0IwYUdsekxtWnBiSFJsY2k1a2FYTmpiMjV1WldOMEtIUm9hWE11WTI5dWRHVjRkQzVrWlhOMGFXNWhkR2x2YmlrcElEb2dkR2hwY3k1bllXbHVMbVJwYzJOdmJtNWxZM1FvZEdocGN5NWpiMjUwWlhoMExtUmxjM1JwYm1GMGFXOXVLU3dnZEdocGN5NW1hV3gwWlhJZ1BTQmxMQ0IwYUdsekxtZGhhVzR1WTI5dWJtVmpkQ2gwYUdsekxtWnBiSFJsY2lrc0lIUm9hWE11Wm1sc2RHVnlMbU52Ym01bFkzUW9kR2hwY3k1amIyNTBaWGgwTG1SbGMzUnBibUYwYVc5dUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoYzNSbGNsWnZiSFZ0WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdUxtZGhhVzR1ZG1Gc2RXVTdDaUFnSUNCOUNpQWdJQ0J6WlhSTllYTjBaWEpXYjJ4MWJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGhhVzR1WjJGcGJpNXpaWFJVWVhKblpYUkJkRlJwYldVb1pTd2dkR2hwY3k1amIyNTBaWGgwTG1OMWNuSmxiblJVYVcxbExDQXVNREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYjI1MFpYaDBMbXhwYzNSbGJtVnlMQ0J1SUQwZ2RHaHBjeTUxY0RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MGFXMWxSR1ZzZEdFZ1BTQjBhR2x6TGw5amJHOWpheTVuWlhSRVpXeDBZU2dwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1SbFkyOXRjRzl6WlNoT2Jpd2dUR01zSUhCNUtTd2dRbTR1YzJWMEtEQXNJREFzSUMweEtTNWhjSEJzZVZGMVlYUmxjbTVwYjI0b1RHTXBMQ0IwTG5CdmMybDBhVzl1V0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTQXJJSFJvYVhNdWRHbHRaVVJsYkhSaE93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG5CdmMybDBhVzl1V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2hPYmk1NExDQnBLU3dnZEM1d2IzTnBkR2x2YmxrdWJHbHVaV0Z5VW1GdGNGUnZWbUZzZFdWQmRGUnBiV1VvVG00dWVTd2dhU2tzSUhRdWNHOXphWFJwYjI1YUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0U1dUxub3NJR2twTENCMExtWnZjbmRoY21SWUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0VKdUxuZ3NJR2twTENCMExtWnZjbmRoY21SWkxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0VKdUxua3NJR2twTENCMExtWnZjbmRoY21SYUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0VKdUxub3NJR2twTENCMExuVndXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaHVMbmdzSUdrcExDQjBMblZ3V1M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2h1TG5rc0lHa3BMQ0IwTG5Wd1dpNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNodUxub3NJR2twT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwTG5ObGRGQnZjMmwwYVc5dUtFNXVMbmdzSUU1dUxua3NJRTV1TG5vcExDQjBMbk5sZEU5eWFXVnVkR0YwYVc5dUtFSnVMbmdzSUVKdUxua3NJRUp1TG5vc0lHNHVlQ3dnYmk1NUxDQnVMbm9wT3dvZ0lDQWdmUXA5TENCYVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFYVmthVzhpTENCMGFHbHpMbXhwYzNSbGJtVnlJRDBnWlN3Z2RHaHBjeTVqYjI1MFpYaDBJRDBnWlM1amIyNTBaWGgwTENCMGFHbHpMbWRoYVc0Z1BTQjBhR2x6TG1OdmJuUmxlSFF1WTNKbFlYUmxSMkZwYmlncExDQjBhR2x6TG1kaGFXNHVZMjl1Ym1WamRDaGxMbWRsZEVsdWNIVjBLQ2twTENCMGFHbHpMbUYxZEc5d2JHRjVJRDBnSVRFc0lIUm9hWE11WW5WbVptVnlJRDBnYm5Wc2JDd2dkR2hwY3k1a1pYUjFibVVnUFNBd0xDQjBhR2x6TG14dmIzQWdQU0FoTVN3Z2RHaHBjeTVzYjI5d1UzUmhjblFnUFNBd0xDQjBhR2x6TG14dmIzQkZibVFnUFNBd0xDQjBhR2x6TG05bVpuTmxkQ0E5SURBc0lIUm9hWE11WkhWeVlYUnBiMjRnUFNCMmIybGtJREFzSUhSb2FYTXVjR3hoZVdKaFkydFNZWFJsSUQwZ01Td2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BTQWhNU3dnZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQU0FoTUN3Z2RHaHBjeTV6YjNWeVkyVWdQU0J1ZFd4c0xDQjBhR2x6TG5OdmRYSmpaVlI1Y0dVZ1BTQWlaVzF3ZEhraUxDQjBhR2x6TGw5emRHRnlkR1ZrUVhRZ1BTQXdMQ0IwYUdsekxsOXdjbTluY21WemN5QTlJREFzSUhSb2FYTXVYMk52Ym01bFkzUmxaQ0E5SUNFeExDQjBhR2x6TG1acGJIUmxjbk1nUFNCYlhUc0tJQ0FnSUgwS0lDQWdJR2RsZEU5MWRIQjFkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBUbTlrWlZOdmRYSmpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhR0Z6VUd4aGVXSmhZMnREYjI1MGNtOXNJRDBnSVRFc0lIUm9hWE11YzI5MWNtTmxWSGx3WlNBOUlDSmhkV1JwYjA1dlpHVWlMQ0IwYUdsekxuTnZkWEpqWlNBOUlHVXNJSFJvYVhNdVkyOXVibVZqZENncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBUV1ZrYVdGRmJHVnRaVzUwVTI5MWNtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQU0FoTVN3Z2RHaHBjeTV6YjNWeVkyVlVlWEJsSUQwZ0ltMWxaR2xoVG05a1pTSXNJSFJvYVhNdWMyOTFjbU5sSUQwZ2RHaHBjeTVqYjI1MFpYaDBMbU55WldGMFpVMWxaR2xoUld4bGJXVnVkRk52ZFhKalpTaGxLU3dnZEdocGN5NWpiMjV1WldOMEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJOWldScFlWTjBjbVZoYlZOdmRYSmpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhR0Z6VUd4aGVXSmhZMnREYjI1MGNtOXNJRDBnSVRFc0lIUm9hWE11YzI5MWNtTmxWSGx3WlNBOUlDSnRaV1JwWVZOMGNtVmhiVTV2WkdVaUxDQjBhR2x6TG5OdmRYSmpaU0E5SUhSb2FYTXVZMjl1ZEdWNGRDNWpjbVZoZEdWTlpXUnBZVk4wY21WaGJWTnZkWEpqWlNobEtTd2dkR2hwY3k1amIyNXVaV04wS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkNkV1ptWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1KMVptWmxjaUE5SUdVc0lIUm9hWE11YzI5MWNtTmxWSGx3WlNBOUlDSmlkV1ptWlhJaUxDQjBhR2x6TG1GMWRHOXdiR0Y1SUNZbUlIUm9hWE11Y0d4aGVTZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjR3hoZVNobElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1selVHeGhlV2x1WnlBOVBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dRWFZrYVc4Z2FYTWdZV3h5WldGa2VTQndiR0Y1YVc1bkxpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOVBUMGdJVEVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dkR2hwY3lCQmRXUnBieUJvWVhNZ2JtOGdjR3hoZVdKaFkyc2dZMjl1ZEhKdmJDNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbDl6ZEdGeWRHVmtRWFFnUFNCMGFHbHpMbU52Ym5SbGVIUXVZM1Z5Y21WdWRGUnBiV1VnS3lCbE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqYjI1MFpYaDBMbU55WldGMFpVSjFabVpsY2xOdmRYSmpaU2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1KMVptWmxjaUE5SUhSb2FYTXVZblZtWm1WeUxDQjBMbXh2YjNBZ1BTQjBhR2x6TG14dmIzQXNJSFF1Ykc5dmNGTjBZWEowSUQwZ2RHaHBjeTVzYjI5d1UzUmhjblFzSUhRdWJHOXZjRVZ1WkNBOUlIUm9hWE11Ykc5dmNFVnVaQ3dnZEM1dmJtVnVaR1ZrSUQwZ2RHaHBjeTV2YmtWdVpHVmtMbUpwYm1Rb2RHaHBjeWtzSUhRdWMzUmhjblFvZEdocGN5NWZjM1JoY25SbFpFRjBMQ0IwYUdsekxsOXdjbTluY21WemN5QXJJSFJvYVhNdWIyWm1jMlYwTENCMGFHbHpMbVIxY21GMGFXOXVLU3dnZEdocGN5NXBjMUJzWVhscGJtY2dQU0FoTUN3Z2RHaHBjeTV6YjNWeVkyVWdQU0IwTENCMGFHbHpMbk5sZEVSbGRIVnVaU2gwYUdsekxtUmxkSFZ1WlNrc0lIUm9hWE11YzJWMFVHeGhlV0poWTJ0U1lYUmxLSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxLU3dnZEdocGN5NWpiMjV1WldOMEtDazdDaUFnSUNCOUNpQWdJQ0J3WVhWelpTZ3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRWFZrYVc4NklIUm9hWE1nUVhWa2FXOGdhR0Z6SUc1dklIQnNZWGxpWVdOcklHTnZiblJ5YjJ3dUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWFYTlFiR0Y1YVc1bklEMDlQU0FoTUNBbUppQW9kR2hwY3k1ZmNISnZaM0psYzNNZ0t6MGdUV0YwYUM1dFlYZ29kR2hwY3k1amIyNTBaWGgwTG1OMWNuSmxiblJVYVcxbElDMGdkR2hwY3k1ZmMzUmhjblJsWkVGMExDQXdLU0FxSUhSb2FYTXVjR3hoZVdKaFkydFNZWFJsTENCMGFHbHpMbXh2YjNBZ1BUMDlJQ0V3SUNZbUlDaDBhR2x6TGw5d2NtOW5jbVZ6Y3lBOUlIUm9hWE11WDNCeWIyZHlaWE56SUNVZ0tIUm9hWE11WkhWeVlYUnBiMjRnZkh3Z2RHaHBjeTVpZFdabVpYSXVaSFZ5WVhScGIyNHBLU3dnZEdocGN5NXpiM1Z5WTJVdWMzUnZjQ2dwTENCMGFHbHpMbk52ZFhKalpTNXZibVZ1WkdWa0lEMGdiblZzYkN3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFNBaE1Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkRzl3S0NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtaGhjMUJzWVhsaVlXTnJRMjl1ZEhKdmJDQTlQVDBnSVRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nZEdocGN5QkJkV1JwYnlCb1lYTWdibThnY0d4aGVXSmhZMnNnWTI5dWRISnZiQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmY0hKdlozSmxjM01nUFNBd0xDQjBhR2x6TG5OdmRYSmpaUzV6ZEc5d0tDa3NJSFJvYVhNdWMyOTFjbU5sTG05dVpXNWtaV1FnUFNCdWRXeHNMQ0IwYUdsekxtbHpVR3hoZVdsdVp5QTlJQ0V4TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5dWJtVmpkQ2dwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1bWFXeDBaWEp6TG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpiM1Z5WTJVdVkyOXVibVZqZENoMGFHbHpMbVpwYkhSbGNuTmJNRjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHVWdQU0F4TENCMElEMGdkR2hwY3k1bWFXeDBaWEp6TG14bGJtZDBhRHNnWlNBOElIUTdJR1VyS3lsMGFHbHpMbVpwYkhSbGNuTmJaU0F0SURGZExtTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSnpXMlZkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1bWFXeDBaWEp6VzNSb2FYTXVabWxzZEdWeWN5NXNaVzVuZEdnZ0xTQXhYUzVqYjI1dVpXTjBLSFJvYVhNdVoyVjBUM1YwY0hWMEtDa3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQjBhR2x6TG5OdmRYSmpaUzVqYjI1dVpXTjBLSFJvYVhNdVoyVjBUM1YwY0hWMEtDa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5amIyNXVaV04wWldRZ1BTQWhNQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzJOdmJtNWxZM1FvS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVptbHNkR1Z5Y3k1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjMjkxY21ObExtUnBjMk52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWEp6V3pCZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Td2dkQ0E5SUhSb2FYTXVabWxzZEdWeWN5NXNaVzVuZEdnN0lHVWdQQ0IwT3lCbEt5c3BkR2hwY3k1bWFXeDBaWEp6VzJVZ0xTQXhYUzVrYVhOamIyNXVaV04wS0hSb2FYTXVabWxzZEdWeWMxdGxYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wm1sc2RHVnljMXQwYUdsekxtWnBiSFJsY25NdWJHVnVaM1JvSUMwZ01WMHVaR2x6WTI5dWJtVmpkQ2gwYUdsekxtZGxkRTkxZEhCMWRDZ3BLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdkR2hwY3k1emIzVnlZMlV1WkdselkyOXVibVZqZENoMGFHbHpMbWRsZEU5MWRIQjFkQ2dwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZZMjl1Ym1WamRHVmtJRDBnSVRFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3gwWlhKektDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1acGJIUmxjbk03Q2lBZ0lDQjlDaUFnSUNCelpYUkdhV3gwWlhKektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0I4ZkNBb1pTQTlJRnRkS1N3Z2RHaHBjeTVmWTI5dWJtVmpkR1ZrSUQwOVBTQWhNQ0EvSUNoMGFHbHpMbVJwYzJOdmJtNWxZM1FvS1N3Z2RHaHBjeTVtYVd4MFpYSnpJRDBnWlM1emJHbGpaU2dwTENCMGFHbHpMbU52Ym01bFkzUW9LU2tnT2lCMGFHbHpMbVpwYkhSbGNuTWdQU0JsTG5Oc2FXTmxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSRVpYUjFibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtUmxkSFZ1WlNBOUlHVXNJSFJvYVhNdWMyOTFjbU5sTG1SbGRIVnVaU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnZEdocGN5NXBjMUJzWVhscGJtY2dQVDA5SUNFd0lDWW1JSFJvYVhNdWMyOTFjbU5sTG1SbGRIVnVaUzV6WlhSVVlYSm5aWFJCZEZScGJXVW9kR2hwY3k1a1pYUjFibVVzSUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU3dnTGpBeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRVJsZEhWdVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1pYUjFibVU3Q2lBZ0lDQjlDaUFnSUNCblpYUkdhV3gwWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WjJWMFJtbHNkR1Z5Y3lncFd6QmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJtbHNkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSR2FXeDBaWEp6S0dVZ1B5QmJDaUFnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNCZElEb2dXMTBwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVR3hoZVdKaFkydFNZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW9ZWE5RYkdGNVltRmphME52Ym5SeWIyd2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYVmthVzg2SUhSb2FYTWdRWFZrYVc4Z2FHRnpJRzV2SUhCc1lYbGlZV05ySUdOdmJuUnliMnd1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0d4aGVXSmhZMnRTWVhSbElEMGdaU3dnZEdocGN5NXBjMUJzWVhscGJtY2dQVDA5SUNFd0lDWW1JSFJvYVhNdWMyOTFjbU5sTG5Cc1lYbGlZV05yVW1GMFpTNXpaWFJVWVhKblpYUkJkRlJwYldVb2RHaHBjeTV3YkdGNVltRmphMUpoZEdVc0lIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlN3Z0xqQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEZCc1lYbGlZV05yVW1GMFpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d2JHRjVZbUZqYTFKaGRHVTdDaUFnSUNCOUNpQWdJQ0J2YmtWdVpHVmtLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVhWE5RYkdGNWFXNW5JRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJNYjI5d0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1oaGMxQnNZWGxpWVdOclEyOXVkSEp2YkNBOVBUMGdJVEVnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ2RHaHBjeUJCZFdScGJ5Qm9ZWE1nYm04Z2NHeGhlV0poWTJzZ1kyOXVkSEp2YkM0aUtTd2dJVEVwSURvZ2RHaHBjeTVzYjI5d093b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNDaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YUdGelVHeGhlV0poWTJ0RGIyNTBjbTlzSUQwOVBTQWhNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0YxWkdsdk9pQjBhR2x6SUVGMVpHbHZJR2hoY3lCdWJ5QndiR0Y1WW1GamF5QmpiMjUwY205c0xpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxteHZiM0FnUFNCbExDQjBhR2x6TG1selVHeGhlV2x1WnlBOVBUMGdJVEFnSmlZZ0tIUm9hWE11YzI5MWNtTmxMbXh2YjNBZ1BTQjBhR2x6TG14dmIzQXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNGTjBZWEowS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVzYjI5d1UzUmhjblFnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBURzl2Y0VWdVpDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJHOXZjRVZ1WkNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJXYjJ4MWJXVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyRnBiaTVuWVdsdUxuWmhiSFZsT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWbTlzZFcxbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVMbWRoYVc0dWMyVjBWR0Z5WjJWMFFYUlVhVzFsS0dVc0lIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlN3Z0xqQXhLU3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dlbTRnUFNCdVpYY2dUU3dnVW1NZ1BTQnVaWGNnWjNRc0lHZDVJRDBnYm1WM0lFMHNJRlZ1SUQwZ2JtVjNJRTBzSUhoNUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCYVlTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQmhibTVsY2lBOUlIUm9hWE11WTI5dWRHVjRkQzVqY21WaGRHVlFZVzV1WlhJb0tTd2dkR2hwY3k1d1lXNXVaWEl1Y0dGdWJtbHVaMDF2WkdWc0lEMGdJa2hTVkVZaUxDQjBhR2x6TG5CaGJtNWxjaTVqYjI1dVpXTjBLSFJvYVhNdVoyRnBiaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUlBkWFJ3ZFhRb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0dGdWJtVnlPd29nSUNBZ2ZRb2dJQ0FnWjJWMFVtVm1SR2x6ZEdGdVkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5TG5KbFprUnBjM1JoYm1ObE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW1WbVJHbHpkR0Z1WTJVb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV5WldaRWFYTjBZVzVqWlNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJTYjJ4c2IyWm1SbUZqZEc5eUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV5YjJ4c2IyWm1SbUZqZEc5eU93b2dJQ0FnZlFvZ0lDQWdjMlYwVW05c2JHOW1aa1poWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5TG5KdmJHeHZabVpHWVdOMGIzSWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJHbHpkR0Z1WTJWTmIyUmxiQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdVpHbHpkR0Z1WTJWTmIyUmxiRHNLSUNBZ0lIMEtJQ0FnSUhObGRFUnBjM1JoYm1ObFRXOWtaV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNWthWE4wWVc1alpVMXZaR1ZzSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFoZUVScGMzUmhibU5sS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJoYm01bGNpNXRZWGhFYVhOMFlXNWpaVHNLSUNBZ0lIMEtJQ0FnSUhObGRFMWhlRVJwYzNSaGJtTmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdWJXRjRSR2x6ZEdGdVkyVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJHbHlaV04wYVc5dVlXeERiMjVsS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZVzV1WlhJdVkyOXVaVWx1Ym1WeVFXNW5iR1VnUFNCbExDQjBhR2x6TG5CaGJtNWxjaTVqYjI1bFQzVjBaWEpCYm1kc1pTQTlJSFFzSUhSb2FYTXVjR0Z1Ym1WeUxtTnZibVZQZFhSbGNrZGhhVzRnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoemRYQmxjaTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1N3Z2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXdJQ1ltSUhSb2FYTXVhWE5RYkdGNWFXNW5JRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRWMjl5YkdRdVpHVmpiMjF3YjNObEtIcHVMQ0JTWXl3Z1oza3BMQ0JWYmk1elpYUW9NQ3dnTUN3Z01Ta3VZWEJ3YkhsUmRXRjBaWEp1YVc5dUtGSmpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHRnVibVZ5T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbkJ2YzJsMGFXOXVXQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlNBcklIUm9hWE11YkdsemRHVnVaWEl1ZEdsdFpVUmxiSFJoT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJ2YzJsMGFXOXVXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaDZiaTU0TENCdUtTd2dkQzV3YjNOcGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9lbTR1ZVN3Z2Jpa3NJSFF1Y0c5emFYUnBiMjVhTG14cGJtVmhjbEpoYlhCVWIxWmhiSFZsUVhSVWFXMWxLSHB1TG5vc0lHNHBMQ0IwTG05eWFXVnVkR0YwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoVmJpNTRMQ0J1S1N3Z2RDNXZjbWxsYm5SaGRHbHZibGt1YkdsdVpXRnlVbUZ0Y0ZSdlZtRnNkV1ZCZEZScGJXVW9WVzR1ZVN3Z2Jpa3NJSFF1YjNKcFpXNTBZWFJwYjI1YUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0ZWdUxub3NJRzRwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwTG5ObGRGQnZjMmwwYVc5dUtIcHVMbmdzSUhwdUxua3NJSHB1TG5vcExDQjBMbk5sZEU5eWFXVnVkR0YwYVc5dUtGVnVMbmdzSUZWdUxua3NJRlZ1TG5vcE93b2dJQ0FnZlFwOUxDQnhhQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXlNRFE0S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUZ1WVd4NWMyVnlJRDBnWlM1amIyNTBaWGgwTG1OeVpXRjBaVUZ1WVd4NWMyVnlLQ2tzSUhSb2FYTXVZVzVoYkhselpYSXVabVowVTJsNlpTQTlJSFFzSUhSb2FYTXVaR0YwWVNBOUlHNWxkeUJWYVc1ME9FRnljbUY1S0hSb2FYTXVZVzVoYkhselpYSXVabkpsY1hWbGJtTjVRbWx1UTI5MWJuUXBMQ0JsTG1kbGRFOTFkSEIxZENncExtTnZibTVsWTNRb2RHaHBjeTVoYm1Gc2VYTmxjaWs3Q2lBZ0lDQjlDaUFnSUNCblpYUkdjbVZ4ZFdWdVkzbEVZWFJoS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ1WVd4NWMyVnlMbWRsZEVKNWRHVkdjbVZ4ZFdWdVkzbEVZWFJoS0hSb2FYTXVaR0YwWVNrc0lIUm9hWE11WkdGMFlUc0tJQ0FnSUgwS0lDQWdJR2RsZEVGMlpYSmhaMlZHY21WeGRXVnVZM2tvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBd0xDQjBJRDBnZEdocGN5NW5aWFJHY21WeGRXVnVZM2xFWVhSaEtDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJSFF1YkdWdVozUm9PeUJ1S3lzcFpTQXJQU0IwVzI1ZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDOGdkQzVzWlc1bmRHZzdDaUFnSUNCOUNuMHNJRmhvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnZEdocGN5NWlhVzVrYVc1bklEMGdaU3dnZEdocGN5NTJZV3gxWlZOcGVtVWdQU0J1T3dvZ0lDQWdJQ0FnSUd4bGRDQnBMQ0J5TENCdk93b2dJQ0FnSUNBZ0lITjNhWFJqYUNoMEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWljWFZoZEdWeWJtbHZiaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2RHaHBjeTVmYzJ4bGNuQXNJSElnUFNCMGFHbHpMbDl6YkdWeWNFRmtaR2wwYVhabExDQnZJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVkYxWVhSbGNtNXBiMjRzSUhSb2FYTXVZblZtWm1WeUlEMGdibVYzSUVac2IyRjBOalJCY25KaGVTaHVJQ29nTmlrc0lIUm9hWE11WDNkdmNtdEpibVJsZUNBOUlEVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWMzUnlhVzVuSWpvS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVltOXZiQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwSUQwZ2RHaHBjeTVmYzJWc1pXTjBMQ0J5SUQwZ2RHaHBjeTVmYzJWc1pXTjBMQ0J2SUQwZ2RHaHBjeTVmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU5MGFHVnlMQ0IwYUdsekxtSjFabVpsY2lBOUlHNWxkeUJCY25KaGVTaHVJQ29nTlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQjBhR2x6TGw5c1pYSndMQ0J5SUQwZ2RHaHBjeTVmYkdWeWNFRmtaR2wwYVhabExDQnZJRDBnZEdocGN5NWZjMlYwUVdSa2FYUnBkbVZKWkdWdWRHbDBlVTUxYldWeWFXTXNJSFJvYVhNdVluVm1abVZ5SUQwZ2JtVjNJRVpzYjJGME5qUkJjbkpoZVNodUlDb2dOU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJpQTlJR2tzSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJrRmtaR2wwYVhabElEMGdjaXdnZEdocGN5NWZjMlYwU1dSbGJuUnBkSGtnUFNCdkxDQjBhR2x6TGw5dmNtbG5TVzVrWlhnZ1BTQXpMQ0IwYUdsekxsOWhaR1JKYm1SbGVDQTlJRFFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJREFzSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RFRmtaR2wwYVhabElEMGdNQ3dnZEdocGN5NTFjMlZEYjNWdWRDQTlJREFzSUhSb2FYTXVjbVZtWlhKbGJtTmxRMjkxYm5RZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWVdOamRXMTFiR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSjFabVpsY2l3Z2FTQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnlJRDBnWlNBcUlHa2dLeUJwTENCdklEMGdkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwT3dvZ0lDQWdJQ0FnSUdsbUlDaHZJRDA5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQTdJR0VnSVQwOUlHazdJQ3NyWVNsdVczSWdLeUJoWFNBOUlHNWJZVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0IwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdLejBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFeElEMGdkQ0F2SUc4N0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmlodUxDQnlMQ0F3TENCaE1Td2dhU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVZM1Z0ZFd4aGRHbDJaVmRsYVdkb2RDQTlJRzg3Q2lBZ0lDQjlDaUFnSUNCaFkyTjFiWFZzWVhSbFFXUmthWFJwZG1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1aWRXWm1aWElzSUc0Z1BTQjBhR2x6TG5aaGJIVmxVMmw2WlN3Z2FTQTlJRzRnS2lCMGFHbHpMbDloWkdSSmJtUmxlRHNLSUNBZ0lDQWdJQ0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhSQlpHUnBkR2wyWlNBOVBUMGdNQ0FtSmlCMGFHbHpMbDl6WlhSSlpHVnVkR2wwZVNncExDQjBhR2x6TGw5dGFYaENkV1ptWlhKU1pXZHBiMjVCWkdScGRHbDJaU2gwTENCcExDQXdMQ0JsTENCdUtTd2dkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwUVdSa2FYUnBkbVVnS3owZ1pUc0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQnVJRDBnZEdocGN5NWlkV1ptWlhJc0lHa2dQU0JsSUNvZ2RDQXJJSFFzSUhJZ1BTQjBhR2x6TG1OMWJYVnNZWFJwZG1WWFpXbG5hSFFzSUc4Z1BTQjBhR2x6TG1OMWJYVnNZWFJwZG1WWFpXbG5hSFJCWkdScGRHbDJaU3dnWVNBOUlIUm9hWE11WW1sdVpHbHVaenNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBJRDBnTUN3Z2RHaHBjeTVqZFcxMWJHRjBhWFpsVjJWcFoyaDBRV1JrYVhScGRtVWdQU0F3TENCeUlEd2dNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUWdLaUIwYUdsekxsOXZjbWxuU1c1a1pYZzdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJpaHVMQ0JwTENCc0xDQXhJQzBnY2l3Z2RDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRzhnUGlBd0lDWW1JSFJvYVhNdVgyMXBlRUoxWm1abGNsSmxaMmx2YmtGa1pHbDBhWFpsS0c0c0lHa3NJSFJvYVhNdVgyRmtaRWx1WkdWNElDb2dkQ3dnTVN3Z2RDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNNU0E5SUhRc0lHTWdQU0IwSUNzZ2REc2diREVnSVQwOUlHTTdJQ3NyYkRFcGFXWWdLRzViYkRGZElDRTlQU0J1VzJ3eElDc2dkRjBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZUzV6WlhSV1lXeDFaU2h1TENCcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzJGMlpVOXlhV2RwYm1Gc1UzUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbUpwYm1ScGJtY3NJSFFnUFNCMGFHbHpMbUoxWm1abGNpd2diaUE5SUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0JwSUQwZ2JpQXFJSFJvYVhNdVgyOXlhV2RKYm1SbGVEc0tJQ0FnSUNBZ0lDQmxMbWRsZEZaaGJIVmxLSFFzSUdrcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJRzRzSUc4Z1BTQnBPeUJ5SUNFOVBTQnZPeUFySzNJcGRGdHlYU0E5SUhSYmFTQXJJSElnSlNCdVhUc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5elpYUkpaR1Z1ZEdsMGVTZ3BMQ0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhRZ1BTQXdMQ0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhSQlpHUnBkR2wyWlNBOUlEQTdDaUFnSUNCOUNpQWdJQ0J5WlhOMGIzSmxUM0pwWjJsdVlXeFRkR0YwWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsSUNvZ016c0tJQ0FnSUNBZ0lDQjBhR2x6TG1KcGJtUnBibWN1YzJWMFZtRnNkV1VvZEdocGN5NWlkV1ptWlhJc0lHVXBPd29nSUNBZ2ZRb2dJQ0FnWDNObGRFRmtaR2wwYVhabFNXUmxiblJwZEhsT2RXMWxjbWxqS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmWVdSa1NXNWtaWGdnS2lCMGFHbHpMblpoYkhWbFUybDZaU3dnZENBOUlHVWdLeUIwYUdsekxuWmhiSFZsVTJsNlpUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0JsT3lCdUlEd2dkRHNnYmlzcktYUm9hWE11WW5WbVptVnlXMjVkSUQwZ01Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSQlpHUnBkR2wyWlVsa1pXNTBhWFI1VVhWaGRHVnlibWx2YmlncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5elpYUkJaR1JwZEdsMlpVbGtaVzUwYVhSNVRuVnRaWEpwWXlncExDQjBhR2x6TG1KMVptWmxjbHQwYUdsekxsOWhaR1JKYm1SbGVDQXFJSFJvYVhNdWRtRnNkV1ZUYVhwbElDc2dNMTBnUFNBeE93b2dJQ0FnZlFvZ0lDQWdYM05sZEVGa1pHbDBhWFpsU1dSbGJuUnBkSGxQZEdobGNpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVgyOXlhV2RKYm1SbGVDQXFJSFJvYVhNdWRtRnNkV1ZUYVhwbExDQjBJRDBnZEdocGN5NWZZV1JrU1c1a1pYZ2dLaUIwYUdsekxuWmhiSFZsVTJsNlpUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2dkR2hwY3k1MllXeDFaVk5wZW1VN0lHNHJLeWwwYUdsekxtSjFabVpsY2x0MElDc2dibDBnUFNCMGFHbHpMbUoxWm1abGNsdGxJQ3NnYmwwN0NpQWdJQ0I5Q2lBZ0lDQmZjMlZzWldOMEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCcFppQW9hU0ErUFNBdU5Ta2dabTl5S0d4bGRDQnZJRDBnTURzZ2J5QWhQVDBnY2pzZ0t5dHZLV1ZiZENBcklHOWRJRDBnWlZ0dUlDc2diMTA3Q2lBZ0lDQjlDaUFnSUNCZmMyeGxjbkFvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHZDBMbk5zWlhKd1JteGhkQ2hsTENCMExDQmxMQ0IwTENCbExDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lGOXpiR1Z5Y0VGa1pHbDBhWFpsS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVgzZHZjbXRKYm1SbGVDQXFJSEk3Q2lBZ0lDQWdJQ0FnWjNRdWJYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWMwWnNZWFFvWlN3Z2J5d2daU3dnZEN3Z1pTd2diaWtzSUdkMExuTnNaWEp3Um14aGRDaGxMQ0IwTENCbExDQjBMQ0JsTENCdkxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUY5c1pYSndLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlERWdMU0JwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQTdJR0VnSVQwOUlISTdJQ3NyWVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkQ0FySUdFN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZiYkYwZ1BTQmxXMnhkSUNvZ2J5QXJJR1ZiYmlBcklHRmRJQ29nYVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmZiR1Z5Y0VGa1pHbDBhWFpsS0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd095QnZJQ0U5UFNCeU95QXJLMjhwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUWdLeUJ2T3dvZ0lDQWdJQ0FnSUNBZ0lDQmxXMkZkSUQwZ1pWdGhYU0FySUdWYmJpQXJJRzlkSUNvZ2FUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHNJQ1JoSUQwZ0lseGNXMXhjWFZ4Y0xqcGNYQzhpTENCNWVTQTlJRzVsZHlCU1pXZEZlSEFvSWxzaUlDc2dKR0VnS3lBaVhTSXNJQ0puSWlrc0lHcGhJRDBnSWx0ZUlpQXJJQ1JoSUNzZ0lsMGlMQ0IyZVNBOUlDSmJYaUlnS3lBa1lTNXlaWEJzWVdObEtDSmNYQzRpTENBaUlpa2dLeUFpWFNJc0lGOTVJRDBnTHlnb1B6cFhReXRiWEM4NlhTa3FLUzh1YzI5MWNtTmxMbkpsY0d4aFkyVW9JbGRESWl3Z2FtRXBMQ0JOZVNBOUlDOG9WME5QUkNzcFB5OHVjMjkxY21ObExuSmxjR3hoWTJVb0lsZERUMFFpTENCMmVTa3NJR0o1SUQwZ0x5Zy9PbHd1S0ZkREt5a29QenBjV3lndUt5bGNYU2svS1Q4dkxuTnZkWEpqWlM1eVpYQnNZV05sS0NKWFF5SXNJR3BoS1N3Z2Qza2dQU0F2WEM0b1YwTXJLU2cvT2x4YktDNHJLVnhkS1Q4dkxuTnZkWEpqWlM1eVpYQnNZV05sS0NKWFF5SXNJR3BoS1N3Z1Uza2dQU0J1WlhjZ1VtVm5SWGh3S0NKZUlpQXJJRjk1SUNzZ1RYa2dLeUJpZVNBcklIZDVJQ3NnSWlRaUtTd2dWSGtnUFNCYkNpQWdJQ0FpYldGMFpYSnBZV3dpTEFvZ0lDQWdJbTFoZEdWeWFXRnNjeUlzQ2lBZ0lDQWlZbTl1WlhNaUNsMHNJRXBvSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1SUh4OElHdGxMbkJoY25ObFZISmhZMnRPWVcxbEtIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdVgzUmhjbWRsZEVkeWIzVndJRDBnWlN3Z2RHaHBjeTVmWW1sdVpHbHVaM01nUFNCbExuTjFZbk5qY21saVpWOG9kQ3dnYVNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJXWVd4MVpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYVc1a0tDazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TGw5MFlYSm5aWFJIY205MWNDNXVRMkZqYUdWa1QySnFaV04wYzE4c0lHa2dQU0IwYUdsekxsOWlhVzVrYVc1bmMxdHVYVHNLSUNBZ0lDQWdJQ0JwSUNFOVBTQjJiMmxrSURBZ0ppWWdhUzVuWlhSV1lXeDFaU2hsTENCMEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEZaaGJIVmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJKcGJtUnBibWR6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlIUm9hWE11WDNSaGNtZGxkRWR5YjNWd0xtNURZV05vWldSUFltcGxZM1J6WHl3Z2NpQTlJRzR1YkdWdVozUm9PeUJwSUNFOVBTQnlPeUFySzJrcGJsdHBYUzV6WlhSV1lXeDFaU2hsTENCMEtUc0tJQ0FnSUgwS0lDQWdJR0pwYm1Rb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQjBhR2x6TGw5MFlYSm5aWFJIY205MWNDNXVRMkZqYUdWa1QySnFaV04wYzE4c0lHNGdQU0JsTG14bGJtZDBhRHNnZENBaFBUMGdianNnS3l0MEtXVmJkRjB1WW1sdVpDZ3BPd29nSUNBZ2ZRb2dJQ0FnZFc1aWFXNWtLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZZbWx1WkdsdVozTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnZEdocGN5NWZkR0Z5WjJWMFIzSnZkWEF1YmtOaFkyaGxaRTlpYW1WamRITmZMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdJVDA5SUc0N0lDc3JkQ2xsVzNSZExuVnVZbWx1WkNncE93b2dJQ0FnZlFwOUxDQnJaU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSFJvYVhNdWNHRjBhQ0E5SUhRc0lIUm9hWE11Y0dGeWMyVmtVR0YwYUNBOUlHNGdmSHdnYTJVdWNHRnljMlZVY21GamEwNWhiV1VvZENrc0lIUm9hWE11Ym05a1pTQTlJR3RsTG1acGJtUk9iMlJsS0dVc0lIUm9hWE11Y0dGeWMyVmtVR0YwYUM1dWIyUmxUbUZ0WlNrZ2ZId2daU3dnZEdocGN5NXliMjkwVG05a1pTQTlJR1VzSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxsOW5aWFJXWVd4MVpWOTFibUp2ZFc1a0xDQjBhR2x6TG5ObGRGWmhiSFZsSUQwZ2RHaHBjeTVmYzJWMFZtRnNkV1ZmZFc1aWIzVnVaRHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJqY21WaGRHVW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ1ltSUdVdWFYTkJibWx0WVhScGIyNVBZbXBsWTNSSGNtOTFjQ0EvSUc1bGR5QnJaUzVEYjIxd2IzTnBkR1VvWlN3Z2RDd2diaWtnT2lCdVpYY2dhMlVvWlN3Z2RDd2diaWs3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nYzJGdWFYUnBlbVZPYjJSbFRtRnRaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWNtVndiR0ZqWlNndlhITXZaeXdnSWw4aUtTNXlaWEJzWVdObEtIbDVMQ0FpSWlrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2NHRnljMlZVY21GamEwNWhiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1Uza3VaWGhsWXlobEtUc0tJQ0FnSUNBZ0lDQnBaaUFvSVhRcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCRFlXNXViM1FnY0dGeWMyVWdkSEpoWTJ0T1lXMWxPaUFpSUNzZ1pTazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc1dlpHVk9ZVzFsT2lCMFd6SmRMQW9nSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1JPWVcxbE9pQjBXek5kTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNSSmJtUmxlRG9nZEZzMFhTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKdmNHVnlkSGxPWVcxbE9pQjBXelZkTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3WlhKMGVVbHVaR1Y0T2lCMFd6WmRDaUFnSUNBZ0lDQWdmU3dnYVNBOUlHNHVibTlrWlU1aGJXVWdKaVlnYmk1dWIyUmxUbUZ0WlM1c1lYTjBTVzVrWlhoUFppZ2lMaUlwT3dvZ0lDQWdJQ0FnSUdsbUlDaHBJQ0U5UFNCMmIybGtJREFnSmlZZ2FTQWhQVDBnTFRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0J1TG01dlpHVk9ZVzFsTG5OMVluTjBjbWx1WnlocElDc2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lGUjVMbWx1WkdWNFQyWW9jaWtnSVQwOUlDMHhJQ1ltSUNodUxtNXZaR1ZPWVcxbElEMGdiaTV1YjJSbFRtRnRaUzV6ZFdKemRISnBibWNvTUN3Z2FTa3NJRzR1YjJKcVpXTjBUbUZ0WlNBOUlISXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2JpNXdjbTl3WlhKMGVVNWhiV1VnUFQwOUlHNTFiR3dnZkh3Z2JpNXdjbTl3WlhKMGVVNWhiV1V1YkdWdVozUm9JRDA5UFNBd0tTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0lsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1kyRnVJRzV2ZENCd1lYSnpaU0J3Y205d1pYSjBlVTVoYldVZ1puSnZiU0IwY21GamEwNWhiV1U2SUNJZ0t5QmxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtYVc1a1RtOWtaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0NGMElIeDhJSFFnUFQwOUlDSWlJSHg4SUhRZ1BUMDlJQ0l1SWlCOGZDQjBJRDA5UFNBdE1TQjhmQ0IwSUQwOVBTQmxMbTVoYldVZ2ZId2dkQ0E5UFQwZ1pTNTFkV2xrS1NCeVpYUjFjbTRnWlRzS0lDQWdJQ0FnSUNCcFppQW9aUzV6YTJWc1pYUnZiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVjMnRsYkdWMGIyNHVaMlYwUW05dVpVSjVUbUZ0WlNoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNGdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJRzQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGxMbU5vYVd4a2NtVnVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1TVNBOUlHWjFibU4wYVc5dUtISXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBN0lHOGdQQ0J5TG14bGJtZDBhRHNnYnlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSEpiYjEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dFdWJtRnRaU0E5UFQwZ2RDQjhmQ0JoTG5WMWFXUWdQVDA5SUhRcElISmxkSFZ5YmlCaE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdiakVvWVM1amFHbHNaSEpsYmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3cElISmxkSFZ5YmlCc093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0lHa2dQU0J1TVNobExtTm9hV3hrY21WdUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa3BJSEpsZEhWeWJpQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lGOW5aWFJXWVd4MVpWOTFibUYyWVdsc1lXSnNaU2dwSUh0OUNpQWdJQ0JmYzJWMFZtRnNkV1ZmZFc1aGRtRnBiR0ZpYkdVb0tTQjdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgyUnBjbVZqZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnWlZ0MFhTQTlJSFJvYVhNdWRHRnlaMlYwVDJKcVpXTjBXM1JvYVhNdWNISnZjR1Z5ZEhsT1lXMWxYVHNLSUNBZ0lIMEtJQ0FnSUY5blpYUldZV3gxWlY5aGNuSmhlU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGs3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Dd2djaUE5SUc0dWJHVnVaM1JvT3lCcElDRTlQU0J5T3lBcksya3BaVnQwS3l0ZElEMGdibHRwWFRzS0lDQWdJSDBLSUNBZ0lGOW5aWFJXWVd4MVpWOWhjbkpoZVVWc1pXMWxiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR1ZiZEYwZ1BTQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGxiZEdocGN5NXdjbTl3WlhKMGVVbHVaR1Y0WFRzS0lDQWdJSDBLSUNBZ0lGOW5aWFJXWVd4MVpWOTBiMEZ5Y21GNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa3VkRzlCY25KaGVTaGxMQ0IwS1RzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWthWEpsWTNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wVzNSb2FYTXVjSEp2Y0dWeWRIbE9ZVzFsWFNBOUlHVmJkRjA3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZlpHbHlaV04wWDNObGRFNWxaV1J6VlhCa1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRGdDBhR2x6TG5CeWIzQmxjblI1VG1GdFpWMGdQU0JsVzNSZExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMlJwY21WamRGOXpaWFJOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMblJoY21kbGRFOWlhbVZqZEZ0MGFHbHpMbkJ5YjNCbGNuUjVUbUZ0WlYwZ1BTQmxXM1JkTENCMGFHbHpMblJoY21kbGRFOWlhbVZqZEM1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZZWEp5WVhrb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQnVMbXhsYm1kMGFEc2dhU0FoUFQwZ2Nqc2dLeXRwS1c1YmFWMGdQU0JsVzNRcksxMDdDaUFnSUNCOUNpQWdJQ0JmYzJWMFZtRnNkV1ZmWVhKeVlYbGZjMlYwVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQnVMbXhsYm1kMGFEc2dhU0FoUFQwZ2Nqc2dLeXRwS1c1YmFWMGdQU0JsVzNRcksxMDdDaUFnSUNBZ0lDQWdkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjloY25KaGVWOXpaWFJOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdiaTVzWlc1bmRHZzdJR2tnSVQwOUlISTdJQ3NyYVNsdVcybGRJRDBnWlZ0MEt5dGRPd29nSUNBZ0lDQWdJSFJvYVhNdWRHRnlaMlYwVDJKcVpXTjBMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVnQwYUdsekxuQnliM0JsY25SNVNXNWtaWGhkSUQwZ1pWdDBYVHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUmZjMlYwVG1WbFpITlZjR1JoZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVWdDBhR2x6TG5CeWIzQmxjblI1U1c1a1pYaGRJRDBnWlZ0MFhTd2dkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjloY25KaGVVVnNaVzFsYm5SZmMyVjBUV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNVczUm9hWE11Y0hKdmNHVnlkSGxKYm1SbGVGMGdQU0JsVzNSZExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0JmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrdVpuSnZiVUZ5Y21GNUtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRlpoYkhWbFgyWnliMjFCY25KaGVWOXpaWFJPWldWa2MxVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXlaWE52YkhabFpGQnliM0JsY25SNUxtWnliMjFCY25KaGVTaGxMQ0IwS1N3Z2RHaHBjeTUwWVhKblpYUlBZbXBsWTNRdWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOW1jbTl0UVhKeVlYbGZjMlYwVFdGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVMbVp5YjIxQmNuSmhlU2hsTENCMEtTd2dkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUXViV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWDJkbGRGWmhiSFZsWDNWdVltOTFibVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltbHVaQ2dwTENCMGFHbHpMbWRsZEZaaGJIVmxLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYM1Z1WW05MWJtUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WW1sdVpDZ3BMQ0IwYUdsekxuTmxkRlpoYkhWbEtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1ltbHVaQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVibTlrWlN3Z2RDQTlJSFJvYVhNdWNHRnljMlZrVUdGMGFDd2diaUE5SUhRdWIySnFaV04wVG1GdFpTd2dhU0E5SUhRdWNISnZjR1Z5ZEhsT1lXMWxMQ0J5SUQwZ2RDNXdjbTl3WlhKMGVVbHVaR1Y0T3dvZ0lDQWdJQ0FnSUdsbUlDaGxJSHg4SUNobElEMGdhMlV1Wm1sdVpFNXZaR1VvZEdocGN5NXliMjkwVG05a1pTd2dkQzV1YjJSbFRtRnRaU2tnZkh3Z2RHaHBjeTV5YjI5MFRtOWtaU3dnZEdocGN5NXViMlJsSUQwZ1pTa3NJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5blpYUldZV3gxWlY5MWJtRjJZV2xzWVdKc1pTd2dkR2hwY3k1elpYUldZV3gxWlNBOUlIUm9hWE11WDNObGRGWmhiSFZsWDNWdVlYWmhhV3hoWW14bExDQWhaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRlJ5ZVdsdVp5QjBieUIxY0dSaGRHVWdibTlrWlNCbWIzSWdkSEpoWTJzNklDSWdLeUIwYUdsekxuQmhkR2dnS3lBaUlHSjFkQ0JwZENCM1lYTnVKM1FnWm05MWJtUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdNZ1BTQjBMbTlpYW1WamRFbHVaR1Y0T3dvZ0lDQWdJQ0FnSUNBZ0lDQnpkMmwwWTJnb2JpbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKdFlYUmxjbWxoYkhNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFpTNXRZWFJsY21saGJDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QnRZWFJsY21saGJDQmhjeUJ1YjJSbElHUnZaWE1nYm05MElHaGhkbVVnWVNCdFlYUmxjbWxoYkM0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdVdWJXRjBaWEpwWVd3dWJXRjBaWEpwWVd4ektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dRMkZ1SUc1dmRDQmlhVzVrSUhSdklHMWhkR1Z5YVdGc0xtMWhkR1Z5YVdGc2N5QmhjeUJ1YjJSbExtMWhkR1Z5YVdGc0lHUnZaWE1nYm05MElHaGhkbVVnWVNCdFlYUmxjbWxoYkhNZ1lYSnlZWGt1SWl3Z2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJR1V1YldGMFpYSnBZV3d1YldGMFpYSnBZV3h6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlZbTl1WlhNaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNnaFpTNXphMlZzWlhSdmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QmliMjVsY3lCaGN5QnViMlJsSUdSdlpYTWdibTkwSUdoaGRtVWdZU0J6YTJWc1pYUnZiaTRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbElEMGdaUzV6YTJWc1pYUnZiaTVpYjI1bGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2dnUFNBd095Qm9JRHdnWlM1c1pXNW5kR2c3SUdnckt5bHBaaUFvWlZ0b1hTNXVZVzFsSUQwOVBTQmpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR01nUFNCb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsVzI1ZElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJEWVc0Z2JtOTBJR0pwYm1RZ2RHOGdiMkpxWldOMFRtRnRaU0J2WmlCdWIyUmxJSFZ1WkdWbWFXNWxaQzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbElEMGdaVnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZeUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aVnRqWFNBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCVWNubHBibWNnZEc4Z1ltbHVaQ0IwYnlCdlltcGxZM1JKYm1SbGVDQnZaaUJ2WW1wbFkzUk9ZVzFsTENCaWRYUWdhWE1nZFc1a1pXWnBibVZrTGlJc0lIUm9hWE1zSUdVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVWdQU0JsVzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlZ0cFhUc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBOVBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpNU0E5SUhRdWJtOWtaVTVoYldVN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxCeWIzQmxjblI1UW1sdVpHbHVaem9nVkhKNWFXNW5JSFJ2SUhWd1pHRjBaU0J3Y205d1pYSjBlU0JtYjNJZ2RISmhZMnM2SUNJZ0t5QmpNU0FySUNJdUlpQXJJR2tnS3lBaUlHSjFkQ0JwZENCM1lYTnVKM1FnWm05MWJtUXVJaXdnWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TGxabGNuTnBiMjVwYm1jdVRtOXVaVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkQ0E5SUdVc0lHVXVibVZsWkhOVmNHUmhkR1VnSVQwOUlIWnZhV1FnTUNBL0lHRWdQU0IwYUdsekxsWmxjbk5wYjI1cGJtY3VUbVZsWkhOVmNHUmhkR1VnT2lCbExtMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VnSVQwOUlIWnZhV1FnTUNBbUppQW9ZU0E5SUhSb2FYTXVWbVZ5YzJsdmJtbHVaeTVOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUm9hWE11UW1sdVpHbHVaMVI1Y0dVdVJHbHlaV04wT3dvZ0lDQWdJQ0FnSUdsbUlDaHlJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJQ0p0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdVdVoyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUVOaGJpQnViM1FnWW1sdVpDQjBieUJ0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhNZ1ltVmpZWFZ6WlNCdWIyUmxJR1J2WlhNZ2JtOTBJR2hoZG1VZ1lTQm5aVzl0WlhSeWVTNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlM1blpXOXRaWFJ5ZVM1cGMwSjFabVpsY2tkbGIyMWxkSEo1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGbExtZGxiMjFsZEhKNUxtMXZjbkJvUVhSMGNtbGlkWFJsY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhiaUJ1YjNRZ1ltbHVaQ0IwYnlCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWdZbVZqWVhWelpTQnViMlJsSUdSdlpYTWdibTkwSUdoaGRtVWdZU0JuWlc5dFpYUnllUzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVJaXdnZEdocGN5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlM1dGIzSndhRlJoY21kbGRFUnBZM1JwYjI1aGNubGJjbDBnSVQwOUlIWnZhV1FnTUNBbUppQW9jaUE5SUdVdWJXOXljR2hVWVhKblpYUkVhV04wYVc5dVlYSjVXM0pkS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQkRZVzRnYm05MElHSnBibVFnZEc4Z2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJRzl1SUZSSVVrVkZMa2RsYjIxbGRISjVMaUJWYzJVZ1ZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNua2dhVzV6ZEdWaFpDNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiQ0E5SUhSb2FYTXVRbWx1WkdsdVoxUjVjR1V1UVhKeVlYbEZiR1Z0Wlc1MExDQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGtnUFNCdkxDQjBhR2x6TG5CeWIzQmxjblI1U1c1a1pYZ2dQU0J5T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J2TG1aeWIyMUJjbkpoZVNBaFBUMGdkbTlwWkNBd0lDWW1JRzh1ZEc5QmNuSmhlU0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHd2dQU0IwYUdsekxrSnBibVJwYm1kVWVYQmxMa2hoYzBaeWIyMVViMEZ5Y21GNUxDQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGtnUFNCdktTQTZJRUZ5Y21GNUxtbHpRWEp5WVhrb2J5a2dQeUFvYkNBOUlIUm9hWE11UW1sdVpHbHVaMVI1Y0dVdVJXNTBhWEpsUVhKeVlYa3NJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVNBOUlHOHBJRG9nZEdocGN5NXdjbTl3WlhKMGVVNWhiV1VnUFNCcE93b2dJQ0FnSUNBZ0lIUm9hWE11WjJWMFZtRnNkV1VnUFNCMGFHbHpMa2RsZEhSbGNrSjVRbWx1WkdsdVoxUjVjR1ZiYkYwc0lIUm9hWE11YzJWMFZtRnNkV1VnUFNCMGFHbHpMbE5sZEhSbGNrSjVRbWx1WkdsdVoxUjVjR1ZCYm1SV1pYSnphVzl1YVc1blcyeGRXMkZkT3dvZ0lDQWdmUW9nSUNBZ2RXNWlhVzVrS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Ym05a1pTQTlJRzUxYkd3c0lIUm9hWE11WjJWMFZtRnNkV1VnUFNCMGFHbHpMbDluWlhSV1lXeDFaVjkxYm1KdmRXNWtMQ0IwYUdsekxuTmxkRlpoYkhWbElEMGdkR2hwY3k1ZmMyVjBWbUZzZFdWZmRXNWliM1Z1WkRzS0lDQWdJSDBLZlRzS2EyVXVRMjl0Y0c5emFYUmxJRDBnU21nN0NtdGxMbkJ5YjNSdmRIbHdaUzVDYVc1a2FXNW5WSGx3WlNBOUlIc0tJQ0FnSUVScGNtVmpkRG9nTUN3S0lDQWdJRVZ1ZEdseVpVRnljbUY1T2lBeExBb2dJQ0FnUVhKeVlYbEZiR1Z0Wlc1ME9pQXlMQW9nSUNBZ1NHRnpSbkp2YlZSdlFYSnlZWGs2SURNS2ZUc0thMlV1Y0hKdmRHOTBlWEJsTGxabGNuTnBiMjVwYm1jZ1BTQjdDaUFnSUNCT2IyNWxPaUF3TEFvZ0lDQWdUbVZsWkhOVmNHUmhkR1U2SURFc0NpQWdJQ0JOWVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbE9pQXlDbjA3Q210bExuQnliM1J2ZEhsd1pTNUhaWFIwWlhKQ2VVSnBibVJwYm1kVWVYQmxJRDBnV3dvZ0lDQWdhMlV1Y0hKdmRHOTBlWEJsTGw5blpYUldZV3gxWlY5a2FYSmxZM1FzQ2lBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDJkbGRGWmhiSFZsWDJGeWNtRjVMQW9nSUNBZ2EyVXVjSEp2ZEc5MGVYQmxMbDluWlhSV1lXeDFaVjloY25KaGVVVnNaVzFsYm5Rc0NpQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgyZGxkRlpoYkhWbFgzUnZRWEp5WVhrS1hUc0thMlV1Y0hKdmRHOTBlWEJsTGxObGRIUmxja0o1UW1sdVpHbHVaMVI1Y0dWQmJtUldaWEp6YVc5dWFXNW5JRDBnV3dvZ0lDQWdXd29nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpHbHlaV04wTEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZaR2x5WldOMFgzTmxkRTVsWldSelZYQmtZWFJsTEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZaR2x5WldOMFgzTmxkRTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVS0lDQWdJRjBzQ2lBZ0lDQmJDaUFnSUNBZ0lDQWdhMlV1Y0hKdmRHOTBlWEJsTGw5elpYUldZV3gxWlY5aGNuSmhlU3dLSUNBZ0lDQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgzTmxkRlpoYkhWbFgyRnljbUY1WDNObGRFNWxaV1J6VlhCa1lYUmxMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZllYSnlZWGxmYzJWMFRXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaUW9nSUNBZ1hTd0tJQ0FnSUZzS0lDQWdJQ0FnSUNCclpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEN3S0lDQWdJQ0FnSUNCclpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEY5elpYUk9aV1ZrYzFWd1pHRjBaU3dLSUNBZ0lDQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgzTmxkRlpoYkhWbFgyRnljbUY1Uld4bGJXVnVkRjl6WlhSTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxDaUFnSUNCZExBb2dJQ0FnV3dvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZabkp2YlVGeWNtRjVMQW9nSUNBZ0lDQWdJR3RsTG5CeWIzUnZkSGx3WlM1ZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNVgzTmxkRTVsWldSelZYQmtZWFJsTEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZabkp2YlVGeWNtRjVYM05sZEUxaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVUtJQ0FnSUYwS1hUc0tkbUZ5SUZsb0lEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5WMWFXUWdQU0JGZENncExDQjBhR2x6TGw5dlltcGxZM1J6SUQwZ1FYSnlZWGt1Y0hKdmRHOTBlWEJsTG5Oc2FXTmxMbU5oYkd3b1lYSm5kVzFsYm5SektTd2dkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThnUFNBd093b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2UzMDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmFXNWthV05sYzBKNVZWVkpSQ0E5SUdVN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHNGdJVDA5SUdrN0lDc3JiaWxsVzJGeVozVnRaVzUwYzF0dVhTNTFkV2xrWFNBOUlHNDdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmNHRjBhSE1nUFNCYlhTd2dkR2hwY3k1ZmNHRnljMlZrVUdGMGFITWdQU0JiWFN3Z2RHaHBjeTVmWW1sdVpHbHVaM01nUFNCYlhTd2dkR2hwY3k1ZlltbHVaR2x1WjNOSmJtUnBZMlZ6UW5sUVlYUm9JRDBnZTMwN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpPd29nSUNBZ0lDQWdJSFJvYVhNdWMzUmhkSE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamRITTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCMGIzUmhiQ0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUXVYMjlpYW1WamRITXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0JwYmxWelpTQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkRzkwWVd3Z0xTQjBMbTVEWVdOb1pXUlBZbXBsWTNSelh6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdaMlYwSUdKcGJtUnBibWR6VUdWeVQySnFaV04wSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMExsOWlhVzVrYVc1bmN5NXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ1lXUmtLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZiMkpxWldOMGN5d2dkQ0E5SUhSb2FYTXVYMmx1WkdsalpYTkNlVlZWU1VRc0lHNGdQU0IwYUdsekxsOXdZWFJvY3l3Z2FTQTlJSFJvYVhNdVgzQmhjbk5sWkZCaGRHaHpMQ0J5SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUc4Z1BTQnlMbXhsYm1kMGFDd2dZU3dnYkNBOUlHVXViR1Z1WjNSb0xDQmpJRDBnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4N0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCb0lEMGdNQ3dnZFNBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHZ2dJVDA5SUhVN0lDc3JhQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ1lYSm5kVzFsYm5SelcyaGRMQ0JtSUQwZ1pDNTFkV2xrTENCdElEMGdkRnRtWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cwZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiU0E5SUd3ckt5d2dkRnRtWFNBOUlHMHNJR1V1Y0hWemFDaGtLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlQ0E5SURBc0lIWWdQU0J2T3lCNElDRTlQU0IyT3lBckszZ3BjbHQ0WFM1d2RYTm9LRzVsZHlCclpTaGtMQ0J1VzNoZExDQnBXM2hkS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYlNBOElHTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0VnUFNCbFcyMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhneElEMGdMUzFqTENCMk1TQTlJR1ZiZURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RGdDJNUzUxZFdsa1hTQTlJRzBzSUdWYmJWMGdQU0IyTVN3Z2RGdG1YU0E5SUhneExDQmxXM2d4WFNBOUlHUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHY2dQU0F3TENCd0lEMGdienNnWnlBaFBUMGdjRHNnS3l0bktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJSEpiWjEwc0lIa2dQU0JmVzNneFhTd2dZaUE5SUY5YmJWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWDF0dFhTQTlJSGtzSUdJZ1BUMDlJSFp2YVdRZ01DQW1KaUFvWWlBOUlHNWxkeUJyWlNoa0xDQnVXMmRkTENCcFcyZGRLU2tzSUY5YmVERmRJRDBnWWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHVmJiVjBnSVQwOUlHRWdKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVFXNXBiV0YwYVc5dVQySnFaV04wUjNKdmRYQTZJRVJwWm1abGNtVnVkQ0J2WW1wbFkzUnpJSGRwZEdnZ2RHaGxJSE5oYldVZ1ZWVkpSQ0JrWlhSbFkzUmxaQzRnUTJ4bFlXNGdkR2hsSUdOaFkyaGxjeUJ2Y2lCeVpXTnlaV0YwWlNCNWIzVnlJR2x1Wm5KaGMzUnlkV04wZFhKbElIZG9aVzRnY21Wc2IyRmthVzVuSUhOalpXNWxjeTRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxOGdQU0JqT3dvZ0lDQWdmUW9nSUNBZ2NtVnRiM1psS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmYjJKcVpXTjBjeXdnZENBOUlIUm9hWE11WDJsdVpHbGpaWE5DZVZWVlNVUXNJRzRnUFNCMGFHbHpMbDlpYVc1a2FXNW5jeXdnYVNBOUlHNHViR1Z1WjNSb0xDQnlJRDBnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4N0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNQ3dnWVNBOUlHRnlaM1Z0Wlc1MGN5NXNaVzVuZEdnN0lHOGdJVDA5SUdFN0lDc3JieWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lYSm5kVzFsYm5SelcyOWRMQ0JqSUQwZ2JDNTFkV2xrTENCb0lEMGdkRnRqWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dnZ0lUMDlJSFp2YVdRZ01DQW1KaUJvSUQ0OUlISXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdjaXNyTENCa0lEMGdaVnQxWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSYlpDNTFkV2xrWFNBOUlHZ3NJR1ZiYUYwZ1BTQmtMQ0IwVzJOZElEMGdkU3dnWlZ0MVhTQTlJR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1lnUFNBd0xDQnRJRDBnYVRzZ1ppQWhQVDBnYlRzZ0t5dG1LWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUc1YlpsMHNJSFlnUFNCNFczVmRMQ0JuSUQwZ2VGdG9YVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNFcyaGRJRDBnZGl3Z2VGdDFYU0E5SUdjN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4Z1BTQnlPd29nSUNBZ2ZRb2dJQ0FnZFc1allXTm9aU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYMjlpYW1WamRITXNJSFFnUFNCMGFHbHpMbDlwYm1ScFkyVnpRbmxWVlVsRUxDQnVJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJR2tnUFNCdUxteGxibWQwYUN3Z2NpQTlJSFJvYVhNdWJrTmhZMmhsWkU5aWFtVmpkSE5mTENCdklEMGdaUzVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmhJRDBnTUN3Z2JDQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJR0VnSVQwOUlHdzdJQ3NyWVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdZWEpuZFcxbGJuUnpXMkZkTENCb0lEMGdZeTUxZFdsa0xDQjFJRDBnZEZ0b1hUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIVWdJVDA5SUhadmFXUWdNQ2tnYVdZZ0tHUmxiR1YwWlNCMFcyaGRMQ0IxSUR3Z2Npa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdRZ1BTQXRMWElzSUdZZ1BTQmxXMlJkTENCdElEMGdMUzF2TENCNElEMGdaVnR0WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSYlppNTFkV2xrWFNBOUlIVXNJR1ZiZFYwZ1BTQm1MQ0IwVzNndWRYVnBaRjBnUFNCa0xDQmxXMlJkSUQwZ2VDd2daUzV3YjNBb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RpQTlJREFzSUdjZ1BTQnBPeUIySUNFOVBTQm5PeUFySzNZcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdibHQyWFN3Z1h5QTlJSEJiWkYwc0lIa2dQU0J3VzIxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJiZFYwZ1BTQmZMQ0J3VzJSZElEMGdlU3dnY0M1d2IzQW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtNU0E5SUMwdGJ5d2daakVnUFNCbFcyUXhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1F4SUQ0Z01DQW1KaUFvZEZ0bU1TNTFkV2xrWFNBOUlIVXBMQ0JsVzNWZElEMGdaakVzSUdVdWNHOXdLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzB4SUQwZ01Dd2dlREVnUFNCcE95QnRNU0FoUFQwZ2VERTdJQ3NyYlRFcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMk1TQTlJRzViYlRGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFl4VzNWZElEMGdkakZiWkRGZExDQjJNUzV3YjNBb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbTVEWVdOb1pXUlBZbXBsWTNSelh5QTlJSEk3Q2lBZ0lDQjlDaUFnSUNCemRXSnpZM0pwWW1WZktHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYMkpwYm1ScGJtZHpTVzVrYVdObGMwSjVVR0YwYUN3Z2FTQTlJRzViWlYwc0lISWdQU0IwYUdsekxsOWlhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQnBaaUFvYVNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2NsdHBYVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVgzQmhkR2h6TENCaElEMGdkR2hwY3k1ZmNHRnljMlZrVUdGMGFITXNJR3dnUFNCMGFHbHpMbDl2WW1wbFkzUnpMQ0JqSUQwZ2JDNXNaVzVuZEdnc0lHZ2dQU0IwYUdsekxtNURZV05vWldSUFltcGxZM1J6WHl3Z2RTQTlJRzVsZHlCQmNuSmhlU2hqS1RzS0lDQWdJQ0FnSUNCcElEMGdjaTVzWlc1bmRHZ3NJRzViWlYwZ1BTQnBMQ0J2TG5CMWMyZ29aU2tzSUdFdWNIVnphQ2gwS1N3Z2NpNXdkWE5vS0hVcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pDQTlJR2dzSUdZZ1BTQnNMbXhsYm1kMGFEc2daQ0FoUFQwZ1pqc2dLeXRrS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcwZ1BTQnNXMlJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjFXMlJkSUQwZ2JtVjNJR3RsS0cwc0lHVXNJSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZFRzS0lDQWdJSDBLSUNBZ0lIVnVjM1ZpYzJOeWFXSmxYeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlpYVc1a2FXNW5jMGx1WkdsalpYTkNlVkJoZEdnc0lHNGdQU0IwVzJWZE93b2dJQ0FnSUNBZ0lHbG1JQ2h1SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxsOXdZWFJvY3l3Z2NpQTlJSFJvYVhNdVgzQmhjbk5sWkZCaGRHaHpMQ0J2SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUdFZ1BTQnZMbXhsYm1kMGFDQXRJREVzSUd3Z1BTQnZXMkZkTENCaklEMGdaVnRoWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkRnRqWFNBOUlHNHNJRzliYmwwZ1BTQnNMQ0J2TG5CdmNDZ3BMQ0J5VzI1ZElEMGdjbHRoWFN3Z2NpNXdiM0FvS1N3Z2FWdHVYU0E5SUdsYllWMHNJR2t1Y0c5d0tDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlPd3BaYUM1d2NtOTBiM1I1Y0dVdWFYTkJibWx0WVhScGIyNVBZbXBsWTNSSGNtOTFjQ0E5SUNFd093cDJZWElnV21nZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1SUQwZ2JuVnNiQ3dnYVNBOUlIUXVZbXhsYm1STmIyUmxLWHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXRhWGhsY2lBOUlHVXNJSFJvYVhNdVgyTnNhWEFnUFNCMExDQjBhR2x6TGw5c2IyTmhiRkp2YjNRZ1BTQnVMQ0IwYUdsekxtSnNaVzVrVFc5a1pTQTlJR2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwTG5SeVlXTnJjeXdnYnlBOUlISXViR1Z1WjNSb0xDQmhJRDBnYm1WM0lFRnljbUY1S0c4cExDQnNJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxibVJwYm1kVGRHRnlkRG9nVFdrc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WkdsdVowVnVaRG9nVFdrS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1l5QTlJREE3SUdNZ0lUMDlJRzg3SUNzcll5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnY2x0alhTNWpjbVZoZEdWSmJuUmxjbkJ2YkdGdWRDaHVkV3hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdZVnRqWFNBOUlHZ3NJR2d1YzJWMGRHbHVaM01nUFNCc093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TGw5cGJuUmxjbkJ2YkdGdWRGTmxkSFJwYm1keklEMGdiQ3dnZEdocGN5NWZhVzUwWlhKd2IyeGhiblJ6SUQwZ1lTd2dkR2hwY3k1ZmNISnZjR1Z5ZEhsQ2FXNWthVzVuY3lBOUlHNWxkeUJCY25KaGVTaHZLU3dnZEdocGN5NWZZMkZqYUdWSmJtUmxlQ0E5SUc1MWJHd3NJSFJvYVhNdVgySjVRMnhwY0VOaFkyaGxTVzVrWlhnZ1BTQnVkV3hzTENCMGFHbHpMbDkwYVcxbFUyTmhiR1ZKYm5SbGNuQnZiR0Z1ZENBOUlHNTFiR3dzSUhSb2FYTXVYM2RsYVdkb2RFbHVkR1Z5Y0c5c1lXNTBJRDBnYm5Wc2JDd2dkR2hwY3k1c2IyOXdJRDBnU1dRc0lIUm9hWE11WDJ4dmIzQkRiM1Z1ZENBOUlDMHhMQ0IwYUdsekxsOXpkR0Z5ZEZScGJXVWdQU0J1ZFd4c0xDQjBhR2x6TG5ScGJXVWdQU0F3TENCMGFHbHpMblJwYldWVFkyRnNaU0E5SURFc0lIUm9hWE11WDJWbVptVmpkR2wyWlZScGJXVlRZMkZzWlNBOUlERXNJSFJvYVhNdWQyVnBaMmgwSUQwZ01Td2dkR2hwY3k1ZlpXWm1aV04wYVhabFYyVnBaMmgwSUQwZ01Td2dkR2hwY3k1eVpYQmxkR2wwYVc5dWN5QTlJREVnTHlBd0xDQjBhR2x6TG5CaGRYTmxaQ0E5SUNFeExDQjBhR2x6TG1WdVlXSnNaV1FnUFNBaE1Dd2dkR2hwY3k1amJHRnRjRmRvWlc1R2FXNXBjMmhsWkNBOUlDRXhMQ0IwYUdsekxucGxjbTlUYkc5d1pVRjBVM1JoY25RZ1BTQWhNQ3dnZEdocGN5NTZaWEp2VTJ4dmNHVkJkRVZ1WkNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnY0d4aGVTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmJXbDRaWEl1WDJGamRHbDJZWFJsUVdOMGFXOXVLSFJvYVhNcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzUnZjQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZiV2w0WlhJdVgyUmxZV04wYVhaaGRHVkJZM1JwYjI0b2RHaHBjeWtzSUhSb2FYTXVjbVZ6WlhRb0tUc0tJQ0FnSUgwS0lDQWdJSEpsYzJWMEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGRYTmxaQ0E5SUNFeExDQjBhR2x6TG1WdVlXSnNaV1FnUFNBaE1Dd2dkR2hwY3k1MGFXMWxJRDBnTUN3Z2RHaHBjeTVmYkc5dmNFTnZkVzUwSUQwZ0xURXNJSFJvYVhNdVgzTjBZWEowVkdsdFpTQTlJRzUxYkd3c0lIUm9hWE11YzNSdmNFWmhaR2x1WnlncExuTjBiM0JYWVhKd2FXNW5LQ2s3Q2lBZ0lDQjlDaUFnSUNCcGMxSjFibTVwYm1jb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wlc1aFlteGxaQ0FtSmlBaGRHaHBjeTV3WVhWelpXUWdKaVlnZEdocGN5NTBhVzFsVTJOaGJHVWdJVDA5SURBZ0ppWWdkR2hwY3k1ZmMzUmhjblJVYVcxbElEMDlQU0J1ZFd4c0lDWW1JSFJvYVhNdVgyMXBlR1Z5TGw5cGMwRmpkR2wyWlVGamRHbHZiaWgwYUdsektUc0tJQ0FnSUgwS0lDQWdJR2x6VTJOb1pXUjFiR1ZrS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl0YVhobGNpNWZhWE5CWTNScGRtVkJZM1JwYjI0b2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCemRHRnlkRUYwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYzNSaGNuUlVhVzFsSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRXh2YjNBb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxteHZiM0FnUFNCbExDQjBhR2x6TG5KbGNHVjBhWFJwYjI1eklEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVWbVptVmpkR2wyWlZkbGFXZG9kQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkMlZwWjJoMElEMGdaU3dnZEdocGN5NWZaV1ptWldOMGFYWmxWMlZwWjJoMElEMGdkR2hwY3k1bGJtRmliR1ZrSUQ4Z1pTQTZJREFzSUhSb2FYTXVjM1J2Y0VaaFpHbHVaeWdwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBSV1ptWldOMGFYWmxWMlZwWjJoMEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bFptWmxZM1JwZG1WWFpXbG5hSFE3Q2lBZ0lDQjlDaUFnSUNCbVlXUmxTVzRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl6WTJobFpIVnNaVVpoWkdsdVp5aGxMQ0F3TENBeEtUc0tJQ0FnSUgwS0lDQWdJR1poWkdWUGRYUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXpZMmhsWkhWc1pVWmhaR2x1WnlobExDQXhMQ0F3S1RzS0lDQWdJSDBLSUNBZ0lHTnliM056Um1Ga1pVWnliMjBvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaGxMbVpoWkdWUGRYUW9kQ2tzSUhSb2FYTXVabUZrWlVsdUtIUXBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZlkyeHBjQzVrZFhKaGRHbHZiaXdnY2lBOUlHVXVYMk5zYVhBdVpIVnlZWFJwYjI0c0lHOGdQU0J5SUM4Z2FTd2dZU0E5SUdrZ0x5QnlPd29nSUNBZ0lDQWdJQ0FnSUNCbExuZGhjbkFvTVN3Z2J5d2dkQ2tzSUhSb2FYTXVkMkZ5Y0NoaExDQXhMQ0IwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqY205emMwWmhaR1ZVYnlobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVkzSnZjM05HWVdSbFJuSnZiU2gwYUdsekxDQjBMQ0J1S1RzS0lDQWdJSDBLSUNBZ0lITjBiM0JHWVdScGJtY29LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxsOTNaV2xuYUhSSmJuUmxjbkJ2YkdGdWREc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZkMlZwWjJoMFNXNTBaWEp3YjJ4aGJuUWdQU0J1ZFd4c0xDQjBhR2x6TGw5dGFYaGxjaTVmZEdGclpVSmhZMnREYjI1MGNtOXNTVzUwWlhKd2IyeGhiblFvWlNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSV1ptWldOMGFYWmxWR2x0WlZOallXeGxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBhVzFsVTJOaGJHVWdQU0JsTENCMGFHbHpMbDlsWm1abFkzUnBkbVZVYVcxbFUyTmhiR1VnUFNCMGFHbHpMbkJoZFhObFpDQS9JREFnT2lCbExDQjBhR2x6TG5OMGIzQlhZWEp3YVc1bktDazdDaUFnSUNCOUNpQWdJQ0JuWlhSRlptWmxZM1JwZG1WVWFXMWxVMk5oYkdVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDJWbVptVmpkR2wyWlZScGJXVlRZMkZzWlRzS0lDQWdJSDBLSUNBZ0lITmxkRVIxY21GMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTBhVzFsVTJOaGJHVWdQU0IwYUdsekxsOWpiR2x3TG1SMWNtRjBhVzl1SUM4Z1pTd2dkR2hwY3k1emRHOXdWMkZ5Y0dsdVp5Z3BPd29nSUNBZ2ZRb2dJQ0FnYzNsdVkxZHBkR2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMblJwYldVZ1BTQmxMblJwYldVc0lIUm9hWE11ZEdsdFpWTmpZV3hsSUQwZ1pTNTBhVzFsVTJOaGJHVXNJSFJvYVhNdWMzUnZjRmRoY25CcGJtY29LVHNLSUNBZ0lIMEtJQ0FnSUdoaGJIUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZGhjbkFvZEdocGN5NWZaV1ptWldOMGFYWmxWR2x0WlZOallXeGxMQ0F3TENCbEtUc0tJQ0FnSUgwS0lDQWdJSGRoY25Bb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmYldsNFpYSXNJSElnUFNCcExuUnBiV1VzSUc4Z1BTQjBhR2x6TG5ScGJXVlRZMkZzWlN3Z1lTQTlJSFJvYVhNdVgzUnBiV1ZUWTJGc1pVbHVkR1Z5Y0c5c1lXNTBPd29nSUNBZ0lDQWdJR0VnUFQwOUlHNTFiR3dnSmlZZ0tHRWdQU0JwTGw5c1pXNWtRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBLQ2tzSUhSb2FYTXVYM1JwYldWVFkyRnNaVWx1ZEdWeWNHOXNZVzUwSUQwZ1lTazdDaUFnSUNBZ0lDQWdiR1YwSUd3Z1BTQmhMbkJoY21GdFpYUmxjbEJ2YzJsMGFXOXVjeXdnWXlBOUlHRXVjMkZ0Y0d4bFZtRnNkV1Z6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJzV3pCZElEMGdjaXdnYkZzeFhTQTlJSElnS3lCdUxDQmpXekJkSUQwZ1pTQXZJRzhzSUdOYk1WMGdQU0IwSUM4Z2J5d2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITjBiM0JYWVhKd2FXNW5LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWZkR2x0WlZOallXeGxTVzUwWlhKd2IyeGhiblE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1VnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11WDNScGJXVlRZMkZzWlVsdWRHVnljRzlzWVc1MElEMGdiblZzYkN3Z2RHaHBjeTVmYldsNFpYSXVYM1JoYTJWQ1lXTnJRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBLR1VwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFMXBlR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl0YVhobGNqc0tJQ0FnSUgwS0lDQWdJR2RsZEVOc2FYQW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyTnNhWEE3Q2lBZ0lDQjlDaUFnSUNCblpYUlNiMjkwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlzYjJOaGJGSnZiM1FnZkh3Z2RHaHBjeTVmYldsNFpYSXVYM0p2YjNRN0NpQWdJQ0I5Q2lBZ0lDQmZkWEJrWVhSbEtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11Wlc1aFlteGxaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5MWNHUmhkR1ZYWldsbmFIUW9aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMbDl6ZEdGeWRGUnBiV1U3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdJVDA5SUc1MWJHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNBb1pTQXRJSElwSUNvZ2Jqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd2dQQ0F3SUh4OElHNGdQVDA5SURBcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmMzUmhjblJVYVcxbElEMGdiblZzYkN3Z2RDQTlJRzRnS2lCc093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBJQ285SUhSb2FYTXVYM1Z3WkdGMFpWUnBiV1ZUWTJGc1pTaGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVgzVndaR0YwWlZScGJXVW9kQ2tzSUdFZ1BTQjBhR2x6TGw5MWNHUmhkR1ZYWldsbmFIUW9aU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tHRWdQaUF3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc01TQTlJSFJvYVhNdVgybHVkR1Z5Y0c5c1lXNTBjeXdnWXlBOUlIUm9hWE11WDNCeWIzQmxjblI1UW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNoMGFHbHpMbUpzWlc1a1RXOWtaU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElIRmpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYUNBOUlEQXNJSFVnUFNCc01TNXNaVzVuZEdnN0lHZ2dJVDA5SUhVN0lDc3JhQ2xzTVZ0b1hTNWxkbUZzZFdGMFpTaHZLU3dnWTF0b1hTNWhZMk4xYlhWc1lYUmxRV1JrYVhScGRtVW9ZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElIVmhPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2d4SUQwZ01Dd2dkVEVnUFNCc01TNXNaVzVuZEdnN0lHZ3hJQ0U5UFNCMU1Uc2dLeXRvTVNsc01WdG9NVjB1WlhaaGJIVmhkR1VvYnlrc0lHTmJhREZkTG1GalkzVnRkV3hoZEdVb2FTd2dZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JmZFhCa1lYUmxWMlZwWjJoMEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11Wlc1aFlteGxaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZEdocGN5NTNaV2xuYUhRN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUlDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHNHVaWFpoYkhWaGRHVW9aU2xiTUYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMElDbzlJR2tzSUdVZ1BpQnVMbkJoY21GdFpYUmxjbEJ2YzJsMGFXOXVjMXN4WFNBbUppQW9kR2hwY3k1emRHOXdSbUZrYVc1bktDa3NJR2tnUFQwOUlEQWdKaVlnS0hSb2FYTXVaVzVoWW14bFpDQTlJQ0V4S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyVm1abVZqZEdsMlpWZGxhV2RvZENBOUlIUXNJSFE3Q2lBZ0lDQjlDaUFnSUNCZmRYQmtZWFJsVkdsdFpWTmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlEQTdDaUFnSUNBZ0lDQWdhV1lnS0NGMGFHbHpMbkJoZFhObFpDa2dld29nSUNBZ0lDQWdJQ0FnSUNCMElEMGdkR2hwY3k1MGFXMWxVMk5oYkdVN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1ZmRHbHRaVk5qWVd4bFNXNTBaWEp3YjJ4aGJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUc0Z0lUMDlJRzUxYkd3Z0ppWWdLSFFnS2owZ2JpNWxkbUZzZFdGMFpTaGxLVnN3WFN3Z1pTQStJRzR1Y0dGeVlXMWxkR1Z5VUc5emFYUnBiMjV6V3pGZElDWW1JQ2gwYUdsekxuTjBiM0JYWVhKd2FXNW5LQ2tzSUhRZ1BUMDlJREFnUHlCMGFHbHpMbkJoZFhObFpDQTlJQ0V3SURvZ2RHaHBjeTUwYVcxbFUyTmhiR1VnUFNCMEtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5bFptWmxZM1JwZG1WVWFXMWxVMk5oYkdVZ1BTQjBMQ0IwT3dvZ0lDQWdmUW9nSUNBZ1gzVndaR0YwWlZScGJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZMnhwY0M1a2RYSmhkR2x2Yml3Z2JpQTlJSFJvYVhNdWJHOXZjQ3dnYVNBOUlIUm9hWE11ZEdsdFpTQXJJR1VzSUhJZ1BTQjBhR2x6TGw5c2IyOXdRMjkxYm5Rc0lHOGdQU0J1SUQwOVBTQkVaRHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlQVDBnTUNrZ2NtVjBkWEp1SUhJZ1BUMDlJQzB4SUQ4Z2FTQTZJRzhnSmlZZ0tISWdKaUF4S1NBOVBUMGdNU0EvSUhRZ0xTQnBJRG9nYVRzS0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ1VHUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpQTlQVDBnTFRFZ0ppWWdLSFJvYVhNdVgyeHZiM0JEYjNWdWRDQTlJREFzSUhSb2FYTXVYM05sZEVWdVpHbHVaM01vSVRBc0lDRXdMQ0FoTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0ErUFNCMEtTQnBJRDBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0drZ1BDQXdLU0JwSUQwZ01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZEdsdFpTQTlJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3NnWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMnhoYlhCWGFHVnVSbWx1YVhOb1pXUWdQeUIwYUdsekxuQmhkWE5sWkNBOUlDRXdJRG9nZEdocGN5NWxibUZpYkdWa0lEMGdJVEVzSUhSb2FYTXVkR2x0WlNBOUlHa3NJSFJvYVhNdVgyMXBlR1Z5TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0ptYVc1cGMyaGxaQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXTjBhVzl1T2lCMGFHbHpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdScGNtVmpkR2x2YmpvZ1pTQThJREFnUHlBdE1TQTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUMweElDWW1JQ2hsSUQ0OUlEQWdQeUFvY2lBOUlEQXNJSFJvYVhNdVgzTmxkRVZ1WkdsdVozTW9JVEFzSUhSb2FYTXVjbVZ3WlhScGRHbHZibk1nUFQwOUlEQXNJRzhwS1NBNklIUm9hWE11WDNObGRFVnVaR2x1WjNNb2RHaHBjeTV5WlhCbGRHbDBhVzl1Y3lBOVBUMGdNQ3dnSVRBc0lHOHBLU3dnYVNBK1BTQjBJSHg4SUdrZ1BDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRTFoZEdndVpteHZiM0lvYVNBdklIUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0F0UFNCMElDb2dZU3dnY2lBclBTQk5ZWFJvTG1GaWN5aGhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkR2hwY3k1eVpYQmxkR2wwYVc5dWN5QXRJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDQThQU0F3S1NCMGFHbHpMbU5zWVcxd1YyaGxia1pwYm1semFHVmtJRDhnZEdocGN5NXdZWFZ6WldRZ1BTQWhNQ0E2SUhSb2FYTXVaVzVoWW14bFpDQTlJQ0V4TENCcElEMGdaU0ErSURBZ1B5QjBJRG9nTUN3Z2RHaHBjeTUwYVcxbElEMGdhU3dnZEdocGN5NWZiV2w0WlhJdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1acGJtbHphR1ZrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhZM1JwYjI0NklIUm9hWE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQmxJRDRnTUNBL0lERWdPaUF0TVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlHVWdQQ0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXpaWFJGYm1ScGJtZHpLR01zSUNGakxDQnZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZEdocGN5NWZjMlYwUlc1a2FXNW5jeWdoTVN3Z0lURXNJRzhwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ4dmIzQkRiM1Z1ZENBOUlISXNJSFJvYVhNdWRHbHRaU0E5SUdrc0lIUm9hWE11WDIxcGVHVnlMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpYkc5dmNDSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2x2YmpvZ2RHaHBjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzl2Y0VSbGJIUmhPaUJoQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwYUdsekxuUnBiV1VnUFNCcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2J5QW1KaUFvY2lBbUlERXBJRDA5UFNBeEtTQnlaWFIxY200Z2RDQXRJR2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRVZ1WkdsdVozTW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZmFXNTBaWEp3YjJ4aGJuUlRaWFIwYVc1bmN6c0tJQ0FnSUNBZ0lDQnVJRDhnS0drdVpXNWthVzVuVTNSaGNuUWdQU0JpYVN3Z2FTNWxibVJwYm1kRmJtUWdQU0JpYVNrZ09pQW9aU0EvSUdrdVpXNWthVzVuVTNSaGNuUWdQU0IwYUdsekxucGxjbTlUYkc5d1pVRjBVM1JoY25RZ1B5QmlhU0E2SUUxcElEb2dhUzVsYm1ScGJtZFRkR0Z5ZENBOUlFOXpMQ0IwSUQ4Z2FTNWxibVJwYm1kRmJtUWdQU0IwYUdsekxucGxjbTlUYkc5d1pVRjBSVzVrSUQ4Z1lta2dPaUJOYVNBNklHa3VaVzVrYVc1blJXNWtJRDBnVDNNcE93b2dJQ0FnZlFvZ0lDQWdYM05qYUdWa2RXeGxSbUZrYVc1bktHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDIxcGVHVnlMQ0J5SUQwZ2FTNTBhVzFsTENCdklEMGdkR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RN0NpQWdJQ0FnSUNBZ2J5QTlQVDBnYm5Wc2JDQW1KaUFvYnlBOUlHa3VYMnhsYm1SRGIyNTBjbTlzU1c1MFpYSndiMnhoYm5Rb0tTd2dkR2hwY3k1ZmQyVnBaMmgwU1c1MFpYSndiMnhoYm5RZ1BTQnZLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRzh1Y0dGeVlXMWxkR1Z5VUc5emFYUnBiMjV6TENCc0lEMGdieTV6WVcxd2JHVldZV3gxWlhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdGYk1GMGdQU0J5TENCc1d6QmRJRDBnZEN3Z1lWc3hYU0E5SUhJZ0t5QmxMQ0JzV3pGZElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS2ZTd2dKR2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRVZ1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmY205dmRDQTlJR1VzSUhSb2FYTXVYMmx1YVhSTlpXMXZjbmxOWVc1aFoyVnlLQ2tzSUhSb2FYTXVYMkZqWTNWSmJtUmxlQ0E5SURBc0lIUm9hWE11ZEdsdFpTQTlJREFzSUhSb2FYTXVkR2x0WlZOallXeGxJRDBnTVRzS0lDQWdJSDBLSUNBZ0lGOWlhVzVrUVdOMGFXOXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVXVYMnh2WTJGc1VtOXZkQ0I4ZkNCMGFHbHpMbDl5YjI5MExDQnBJRDBnWlM1ZlkyeHBjQzUwY21GamEzTXNJSElnUFNCcExteGxibWQwYUN3Z2J5QTlJR1V1WDNCeWIzQmxjblI1UW1sdVpHbHVaM01zSUdFZ1BTQmxMbDlwYm5SbGNuQnZiR0Z1ZEhNc0lHd2dQU0J1TG5WMWFXUXNJR01nUFNCMGFHbHpMbDlpYVc1a2FXNW5jMEo1VW05dmRFRnVaRTVoYldVc0lHZ2dQU0JqVzJ4ZE93b2dJQ0FnSUNBZ0lHZ2dQVDA5SUhadmFXUWdNQ0FtSmlBb2FDQTlJSHQ5TENCalcyeGRJRDBnYUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMUlEMGdNRHNnZFNBaFBUMGdjanNnS3l0MUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0JwVzNWZExDQm1JRDBnWkM1dVlXMWxMQ0J0SUQwZ2FGdG1YVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzBnSVQwOUlIWnZhV1FnTUNrZ2IxdDFYU0E5SUcwN0NpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzBnUFNCdlczVmRMQ0J0SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0TGw5allXTm9aVWx1WkdWNElEMDlQU0J1ZFd4c0lDWW1JQ2dySzIwdWNtVm1aWEpsYm1ObFEyOTFiblFzSUhSb2FYTXVYMkZrWkVsdVlXTjBhWFpsUW1sdVpHbHVaeWh0TENCc0xDQm1LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUhRZ0ppWWdkQzVmY0hKdmNHVnlkSGxDYVc1a2FXNW5jMXQxWFM1aWFXNWthVzVuTG5CaGNuTmxaRkJoZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdElEMGdibVYzSUZob0tHdGxMbU55WldGMFpTaHVMQ0JtTENCNEtTd2daQzVXWVd4MVpWUjVjR1ZPWVcxbExDQmtMbWRsZEZaaGJIVmxVMmw2WlNncEtTd2dLeXR0TG5KbFptVnlaVzVqWlVOdmRXNTBMQ0IwYUdsekxsOWhaR1JKYm1GamRHbDJaVUpwYm1ScGJtY29iU3dnYkN3Z1ppa3NJRzliZFYwZ1BTQnRPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR0ZiZFYwdWNtVnpkV3gwUW5WbVptVnlJRDBnYlM1aWRXWm1aWEk3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1gyRmpkR2wyWVhSbFFXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvSVhSb2FYTXVYMmx6UVdOMGFYWmxRV04wYVc5dUtHVXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsTGw5allXTm9aVWx1WkdWNElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlDaGxMbDlzYjJOaGJGSnZiM1FnZkh3Z2RHaHBjeTVmY205dmRDa3VkWFZwWkN3Z2FTQTlJR1V1WDJOc2FYQXVkWFZwWkN3Z2NpQTlJSFJvYVhNdVgyRmpkR2x2Ym5OQ2VVTnNhWEJiYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlpYVc1a1FXTjBhVzl1S0dVc0lISWdKaVlnY2k1cmJtOTNia0ZqZEdsdmJuTmJNRjBwTENCMGFHbHpMbDloWkdSSmJtRmpkR2wyWlVGamRHbHZiaWhsTENCcExDQnVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WDNCeWIzQmxjblI1UW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JqRWdQU0F3TENCcE1TQTlJSFF1YkdWdVozUm9PeUJ1TVNBaFBUMGdhVEU3SUNzcmJqRXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJeElEMGdkRnR1TVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeU1TNTFjMlZEYjNWdWRDc3JJRDA5UFNBd0lDWW1JQ2gwYUdsekxsOXNaVzVrUW1sdVpHbHVaeWh5TVNrc0lISXhMbk5oZG1WUGNtbG5hVzVoYkZOMFlYUmxLQ2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMnhsYm1SQlkzUnBiMjRvWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdYMlJsWVdOMGFYWmhkR1ZCWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5cGMwRmpkR2wyWlVGamRHbHZiaWhsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WDNCeWIzQmxjblI1UW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDMHRjaTUxYzJWRGIzVnVkQ0E5UFQwZ01DQW1KaUFvY2k1eVpYTjBiM0psVDNKcFoybHVZV3hUZEdGMFpTZ3BMQ0IwYUdsekxsOTBZV3RsUW1GamEwSnBibVJwYm1jb2Npa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzUmhhMlZDWVdOclFXTjBhVzl1S0dVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlwYm1sMFRXVnRiM0o1VFdGdVlXZGxjaWdwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDloWTNScGIyNXpJRDBnVzEwc0lIUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpJRDBnTUN3Z2RHaHBjeTVmWVdOMGFXOXVjMEo1UTJ4cGNDQTlJSHQ5TENCMGFHbHpMbDlpYVc1a2FXNW5jeUE5SUZ0ZExDQjBhR2x6TGw5dVFXTjBhWFpsUW1sdVpHbHVaM01nUFNBd0xDQjBhR2x6TGw5aWFXNWthVzVuYzBKNVVtOXZkRUZ1WkU1aGJXVWdQU0I3ZlN3Z2RHaHBjeTVmWTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3lBOUlGdGRMQ0IwYUdsekxsOXVRV04wYVhabFEyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5QTlJREE3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsek93b2dJQ0FnSUNBZ0lIUm9hWE11YzNSaGRITWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRmpkR2x2Ym5NNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0IwYjNSaGJDQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVgyRmpkR2x2Ym5NdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDI1QlkzUnBkbVZCWTNScGIyNXpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JpYVc1a2FXNW5jem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElIUnZkR0ZzSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVmWW1sdVpHbHVaM011YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCcGJsVnpaU0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVXVYMjVCWTNScGRtVkNhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElIUnZkR0ZzSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVmWTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3k1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElHbHVWWE5sSUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVmYmtGamRHbDJaVU52Ym5SeWIyeEpiblJsY25CdmJHRnVkSE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnWDJselFXTjBhWFpsUVdOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVgyTmhZMmhsU1c1a1pYZzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUc1MWJHd2dKaVlnZENBOElIUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpPd29nSUNBZ2ZRb2dJQ0FnWDJGa1pFbHVZV04wYVhabFFXTjBhVzl1S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJSElnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd0xDQnZJRDBnY2x0MFhUc0tJQ0FnSUNBZ0lDQnBaaUFvYnlBOVBUMGdkbTlwWkNBd0tTQnZJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnJibTkzYmtGamRHbHZibk02SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdVS0lDQWdJQ0FnSUNBZ0lDQWdYU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lXTjBhVzl1UW5sU2IyOTBPaUI3ZlFvZ0lDQWdJQ0FnSUgwc0lHVXVYMko1UTJ4cGNFTmhZMmhsU1c1a1pYZ2dQU0F3TENCeVczUmRJRDBnYnpzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdkxtdHViM2R1UVdOMGFXOXVjenNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNWZZbmxEYkdsd1EyRmphR1ZKYm1SbGVDQTlJR0V1YkdWdVozUm9MQ0JoTG5CMWMyZ29aU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdVdVgyTmhZMmhsU1c1a1pYZ2dQU0JwTG14bGJtZDBhQ3dnYVM1d2RYTm9LR1VwTENCdkxtRmpkR2x2YmtKNVVtOXZkRnR1WFNBOUlHVTdDaUFnSUNCOUNpQWdJQ0JmY21WdGIzWmxTVzVoWTNScGRtVkJZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZllXTjBhVzl1Y3l3Z2JpQTlJSFJiZEM1c1pXNW5kR2dnTFNBeFhTd2dhU0E5SUdVdVgyTmhZMmhsU1c1a1pYZzdDaUFnSUNBZ0lDQWdiaTVmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQnVMQ0IwTG5CdmNDZ3BMQ0JsTGw5allXTm9aVWx1WkdWNElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUdVdVgyTnNhWEF1ZFhWcFpDd2dieUE5SUhSb2FYTXVYMkZqZEdsdmJuTkNlVU5zYVhBc0lHRWdQU0J2VzNKZExDQnNJRDBnWVM1cmJtOTNia0ZqZEdsdmJuTXNJR01nUFNCc1cyd3ViR1Z1WjNSb0lDMGdNVjBzSUdnZ1BTQmxMbDlpZVVOc2FYQkRZV05vWlVsdVpHVjRPd29nSUNBZ0lDQWdJR011WDJKNVEyeHBjRU5oWTJobFNXNWtaWGdnUFNCb0xDQnNXMmhkSUQwZ1l5d2diQzV3YjNBb0tTd2daUzVmWW5sRGJHbHdRMkZqYUdWSmJtUmxlQ0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUhVZ1BTQmhMbUZqZEdsdmJrSjVVbTl2ZEN3Z1pDQTlJQ2hsTGw5c2IyTmhiRkp2YjNRZ2ZId2dkR2hwY3k1ZmNtOXZkQ2t1ZFhWcFpEc0tJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RWdGtYU3dnYkM1c1pXNW5kR2dnUFQwOUlEQWdKaVlnWkdWc1pYUmxJRzliY2wwc0lIUm9hWE11WDNKbGJXOTJaVWx1WVdOMGFYWmxRbWx1WkdsdVozTkdiM0pCWTNScGIyNG9aU2s3Q2lBZ0lDQjlDaUFnSUNCZmNtVnRiM1psU1c1aFkzUnBkbVZDYVc1a2FXNW5jMFp2Y2tGamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExsOXdjbTl3WlhKMGVVSnBibVJwYm1kek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbXhsYm1kMGFEc2diaUFoUFQwZ2FUc2dLeXR1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBXMjVkT3dvZ0lDQWdJQ0FnSUNBZ0lDQXRMWEl1Y21WbVpYSmxibU5sUTI5MWJuUWdQVDA5SURBZ0ppWWdkR2hwY3k1ZmNtVnRiM1psU1c1aFkzUnBkbVZDYVc1a2FXNW5LSElwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lGOXNaVzVrUVdOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJRzRnUFNCbExsOWpZV05vWlVsdVpHVjRMQ0JwSUQwZ2RHaHBjeTVmYmtGamRHbDJaVUZqZEdsdmJuTXJLeXdnY2lBOUlIUmJhVjA3Q2lBZ0lDQWdJQ0FnWlM1ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0JsTENCeUxsOWpZV05vWlVsdVpHVjRJRDBnYml3Z2RGdHVYU0E5SUhJN0NpQWdJQ0I5Q2lBZ0lDQmZkR0ZyWlVKaFkydEJZM1JwYjI0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZllXTjBhVzl1Y3l3Z2JpQTlJR1V1WDJOaFkyaGxTVzVrWlhnc0lHa2dQU0F0TFhSb2FYTXVYMjVCWTNScGRtVkJZM1JwYjI1ekxDQnlJRDBnZEZ0cFhUc0tJQ0FnSUNBZ0lDQmxMbDlqWVdOb1pVbHVaR1Y0SUQwZ2FTd2dkRnRwWFNBOUlHVXNJSEl1WDJOaFkyaGxTVzVrWlhnZ1BTQnVMQ0IwVzI1ZElEMGdjanNLSUNBZ0lIMEtJQ0FnSUY5aFpHUkpibUZqZEdsMlpVSnBibVJwYm1jb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM05DZVZKdmIzUkJibVJPWVcxbExDQnlJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzhnUFNCcFczUmRPd29nSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQW9ieUE5SUh0OUxDQnBXM1JkSUQwZ2J5a3NJRzliYmwwZ1BTQmxMQ0JsTGw5allXTm9aVWx1WkdWNElEMGdjaTVzWlc1bmRHZ3NJSEl1Y0hWemFDaGxLVHNLSUNBZ0lIMEtJQ0FnSUY5eVpXMXZkbVZKYm1GamRHbDJaVUpwYm1ScGJtY29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzRnUFNCbExtSnBibVJwYm1jc0lHa2dQU0J1TG5KdmIzUk9iMlJsTG5WMWFXUXNJSElnUFNCdUxuQmhkR2dzSUc4Z1BTQjBhR2x6TGw5aWFXNWthVzVuYzBKNVVtOXZkRUZ1WkU1aGJXVXNJR0VnUFNCdlcybGRMQ0JzSUQwZ2RGdDBMbXhsYm1kMGFDQXRJREZkTENCaklEMGdaUzVmWTJGamFHVkpibVJsZURzS0lDQWdJQ0FnSUNCc0xsOWpZV05vWlVsdVpHVjRJRDBnWXl3Z2RGdGpYU0E5SUd3c0lIUXVjRzl3S0Nrc0lHUmxiR1YwWlNCaFczSmRMQ0JQWW1wbFkzUXVhMlY1Y3loaEtTNXNaVzVuZEdnZ1BUMDlJREFnSmlZZ1pHVnNaWFJsSUc5YmFWMDdDaUFnSUNCOUNpQWdJQ0JmYkdWdVpFSnBibVJwYm1jb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHNGdQU0JsTGw5allXTm9aVWx1WkdWNExDQnBJRDBnZEdocGN5NWZia0ZqZEdsMlpVSnBibVJwYm1kekt5c3NJSElnUFNCMFcybGRPd29nSUNBZ0lDQWdJR1V1WDJOaFkyaGxTVzVrWlhnZ1BTQnBMQ0IwVzJsZElEMGdaU3dnY2k1ZlkyRmphR1ZKYm1SbGVDQTlJRzRzSUhSYmJsMGdQU0J5T3dvZ0lDQWdmUW9nSUNBZ1gzUmhhMlZDWVdOclFtbHVaR2x1WnlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z2JpQTlJR1V1WDJOaFkyaGxTVzVrWlhnc0lHa2dQU0F0TFhSb2FYTXVYMjVCWTNScGRtVkNhVzVrYVc1bmN5d2djaUE5SUhSYmFWMDdDaUFnSUNBZ0lDQWdaUzVmWTJGamFHVkpibVJsZUNBOUlHa3NJSFJiYVYwZ1BTQmxMQ0J5TGw5allXTm9aVWx1WkdWNElEMGdiaXdnZEZ0dVhTQTlJSEk3Q2lBZ0lDQjlDaUFnSUNCZmJHVnVaRU52Ym5SeWIyeEpiblJsY25CdmJHRnVkQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYMk52Ym5SeWIyeEpiblJsY25CdmJHRnVkSE1zSUhRZ1BTQjBhR2x6TGw5dVFXTjBhWFpsUTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3lzckxDQnVJRDBnWlZ0MFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpQTlQVDBnZG05cFpDQXdJQ1ltSUNodUlEMGdibVYzSUU1aEtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb01pa3NJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29NaWtzSURFc0lIUm9hWE11WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhOU1pYTjFiSFJDZFdabVpYSXBMQ0J1TGw5ZlkyRmphR1ZKYm1SbGVDQTlJSFFzSUdWYmRGMGdQU0J1S1N3Z2Jqc0tJQ0FnSUgwS0lDQWdJRjkwWVd0bFFtRmphME52Ym5SeWIyeEpiblJsY25CdmJHRnVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDlqYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6TENCdUlEMGdaUzVmWDJOaFkyaGxTVzVrWlhnc0lHa2dQU0F0TFhSb2FYTXVYMjVCWTNScGRtVkRiMjUwY205c1NXNTBaWEp3YjJ4aGJuUnpMQ0J5SUQwZ2RGdHBYVHNLSUNBZ0lDQWdJQ0JsTGw5ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0JsTENCeUxsOWZZMkZqYUdWSmJtUmxlQ0E5SUc0c0lIUmJibDBnUFNCeU93b2dJQ0FnZlFvZ0lDQWdZMnhwY0VGamRHbHZiaWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwSUh4OElIUm9hWE11WDNKdmIzUXNJSElnUFNCcExuVjFhV1FzSUc4Z1BTQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JaUEvSUV4eUxtWnBibVJDZVU1aGJXVW9hU3dnWlNrZ09pQmxMQ0JoSUQwZ2J5QWhQVDBnYm5Wc2JDQS9JRzh1ZFhWcFpDQTZJR1VzSUd3Z1BTQjBhR2x6TGw5aFkzUnBiMjV6UW5sRGJHbHdXMkZkTENCaklEMGdiblZzYkRzS0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHZJQ0U5UFNCdWRXeHNJRDhnYmlBOUlHOHVZbXhsYm1STmIyUmxJRG9nYmlBOUlIVmhLU3dnYkNBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYkM1aFkzUnBiMjVDZVZKdmIzUmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gxSUNFOVBTQjJiMmxrSURBZ0ppWWdkUzVpYkdWdVpFMXZaR1VnUFQwOUlHNHBJSEpsZEhWeWJpQjFPd29nSUNBZ0lDQWdJQ0FnSUNCaklEMGdiQzVyYm05M2JrRmpkR2x2Ym5OYk1GMHNJRzhnUFQwOUlHNTFiR3dnSmlZZ0tHOGdQU0JqTGw5amJHbHdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHOGdQVDA5SUc1MWJHd3BJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnYm1WM0lGcG9LSFJvYVhNc0lHOHNJSFFzSUc0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDlpYVc1a1FXTjBhVzl1S0dnc0lHTXBMQ0IwYUdsekxsOWhaR1JKYm1GamRHbDJaVUZqZEdsdmJpaG9MQ0JoTENCeUtTd2dhRHNLSUNBZ0lIMEtJQ0FnSUdWNGFYTjBhVzVuUVdOMGFXOXVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUWdmSHdnZEdocGN5NWZjbTl2ZEN3Z2FTQTlJRzR1ZFhWcFpDd2djaUE5SUhSNWNHVnZaaUJsSUQwOUlDSnpkSEpwYm1jaUlEOGdUSEl1Wm1sdVpFSjVUbUZ0WlNodUxDQmxLU0E2SUdVc0lHOGdQU0J5SUQ4Z2NpNTFkV2xrSURvZ1pTd2dZU0E5SUhSb2FYTXVYMkZqZEdsdmJuTkNlVU5zYVhCYmIxMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRWdJVDA5SUhadmFXUWdNQ0FtSmlCaExtRmpkR2x2YmtKNVVtOXZkRnRwWFNCOGZDQnVkV3hzT3dvZ0lDQWdmUW9nSUNBZ2MzUnZjRUZzYkVGamRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYMkZqZEdsdmJuTXNJSFFnUFNCMGFHbHpMbDl1UVdOMGFYWmxRV04wYVc5dWN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0IwSUMwZ01Uc2diaUErUFNBd095QXRMVzRwWlZ0dVhTNXpkRzl3S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ0tqMGdkR2hwY3k1MGFXMWxVMk5oYkdVN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbDloWTNScGIyNXpMQ0J1SUQwZ2RHaHBjeTVmYmtGamRHbDJaVUZqZEdsdmJuTXNJR2tnUFNCMGFHbHpMblJwYldVZ0t6MGdaU3dnY2lBOUlFMWhkR2d1YzJsbmJpaGxLU3dnYnlBOUlIUm9hWE11WDJGalkzVkpibVJsZUNCZVBTQXhPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBN0lHTWdJVDA5SUc0N0lDc3JZeWwwVzJOZExsOTFjR1JoZEdVb2FTd2daU3dnY2l3Z2J5azdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z2JDQTlJSFJvYVhNdVgyNUJZM1JwZG1WQ2FXNWthVzVuY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNeElEMGdNRHNnWXpFZ0lUMDlJR3c3SUNzcll6RXBZVnRqTVYwdVlYQndiSGtvYnlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSVWFXMWxLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMblJwYldVZ1BTQXdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBN0lIUWdQQ0IwYUdsekxsOWhZM1JwYjI1ekxteGxibWQwYURzZ2RDc3JLWFJvYVhNdVgyRmpkR2x2Ym5OYmRGMHVkR2x0WlNBOUlEQTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZFhCa1lYUmxLR1VwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBVbTl2ZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmY205dmREc0tJQ0FnSUgwS0lDQWdJSFZ1WTJGamFHVkRiR2x3S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJGamRHbHZibk1zSUc0Z1BTQmxMblYxYVdRc0lHa2dQU0IwYUdsekxsOWhZM1JwYjI1elFubERiR2x3TENCeUlEMGdhVnR1WFRzS0lDQWdJQ0FnSUNCcFppQW9jaUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdjaTVyYm05M2JrRmpkR2x2Ym5NN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SURBc0lHd2dQU0J2TG14bGJtZDBhRHNnWVNBaFBUMGdiRHNnS3l0aEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2IxdGhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyUmxZV04wYVhaaGRHVkJZM1JwYjI0b1l5azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHTXVYMk5oWTJobFNXNWtaWGdzSUhVZ1BTQjBXM1F1YkdWdVozUm9JQzBnTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCakxsOWpZV05vWlVsdVpHVjRJRDBnYm5Wc2JDd2dZeTVmWW5sRGJHbHdRMkZqYUdWSmJtUmxlQ0E5SUc1MWJHd3NJSFV1WDJOaFkyaGxTVzVrWlhnZ1BTQm9MQ0IwVzJoZElEMGdkU3dnZEM1d2IzQW9LU3dnZEdocGN5NWZjbVZ0YjNabFNXNWhZM1JwZG1WQ2FXNWthVzVuYzBadmNrRmpkR2x2YmloaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2FWdHVYVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMWJtTmhZMmhsVW05dmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG5WMWFXUXNJRzRnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd093b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QnBiaUJ1S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVXMjlkTG1GamRHbHZia0o1VW05dmRDd2diQ0E5SUdGYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUd3Z0lUMDlJSFp2YVdRZ01DQW1KaUFvZEdocGN5NWZaR1ZoWTNScGRtRjBaVUZqZEdsdmJpaHNLU3dnZEdocGN5NWZjbVZ0YjNabFNXNWhZM1JwZG1WQlkzUnBiMjRvYkNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJKcGJtUnBibWR6UW5sU2IyOTBRVzVrVG1GdFpTd2djaUE5SUdsYmRGMDdDaUFnSUNBZ0lDQWdhV1lnS0hJZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQnZNU0JwYmlCeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRXhJRDBnY2x0dk1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUdFeExuSmxjM1J2Y21WUGNtbG5hVzVoYkZOMFlYUmxLQ2tzSUhSb2FYTXVYM0psYlc5MlpVbHVZV04wYVhabFFtbHVaR2x1WnloaE1TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZFc1allXTm9aVUZqZEdsdmJpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVY0YVhOMGFXNW5RV04wYVc5dUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUc0Z0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgyUmxZV04wYVhaaGRHVkJZM1JwYjI0b2Jpa3NJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUVdOMGFXOXVLRzRwS1RzS0lDQWdJSDBLZlRzS0pHZ3VjSEp2ZEc5MGVYQmxMbDlqYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6VW1WemRXeDBRblZtWm1WeUlEMGdibVYzSUVac2IyRjBNekpCY25KaGVTZ3hLVHNLZG1GeUlHZHZJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnZEhsd1pXOW1JR1VnUFQwZ0luTjBjbWx1WnlJZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vlc1cFptOXliVG9nVkhsd1pTQndZWEpoYldWMFpYSWdhWE1nYm04Z2JHOXVaMlZ5SUc1bFpXUmxaQzRpS1N3Z1pTQTlJR0Z5WjNWdFpXNTBjMXN4WFNrc0lIUm9hWE11ZG1Gc2RXVWdQU0JsT3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5Qm5ieWgwYUdsekxuWmhiSFZsTG1Oc2IyNWxJRDA5UFNCMmIybGtJREFnUHlCMGFHbHpMblpoYkhWbElEb2dkR2hwY3k1MllXeDFaUzVqYkc5dVpTZ3BLVHNLSUNBZ0lIMEtmU3dnYW1nZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUNSdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0Z1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVWdQU0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWJXVnphRkJsY2tGMGRISnBZblYwWlNBOUlHVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG1Oc2IyNWxLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VnUFNCMGFHbHpMbTFsYzJoUVpYSkJkSFJ5YVdKMWRHVXNJSFE3Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2MzVndaWEl1ZEc5S1UwOU9LR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1selNXNXpkR0Z1WTJWa1NXNTBaWEpzWldGMlpXUkNkV1ptWlhJZ1BTQWhNQ3dnZEM1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsSUQwZ2RHaHBjeTV0WlhOb1VHVnlRWFIwY21saWRYUmxMQ0IwT3dvZ0lDQWdmUXA5T3dwcWFDNXdjbTkwYjNSNWNHVXVhWE5KYm5OMFlXNWpaV1JKYm5SbGNteGxZWFpsWkVKMVptWmxjaUE5SUNFd093cDJZWElnVVdnZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1TENCcExDQnlLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtSjFabVpsY2lBOUlHVXNJSFJvYVhNdWRIbHdaU0E5SUhRc0lIUm9hWE11YVhSbGJWTnBlbVVnUFNCdUxDQjBhR2x6TG1Wc1pXMWxiblJUYVhwbElEMGdhU3dnZEdocGN5NWpiM1Z1ZENBOUlISXNJSFJvYVhNdWRtVnljMmx2YmlBOUlEQTdDaUFnSUNCOUNpQWdJQ0J6WlhRZ2JtVmxaSE5WY0dSaGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUdVZ1BUMDlJQ0V3SUNZbUlIUm9hWE11ZG1WeWMybHZiaXNyT3dvZ0lDQWdmUW9nSUNBZ2MyVjBRblZtWm1WeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aWRXWm1aWElnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBWSGx3WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRIbHdaU0E5SUdVc0lIUm9hWE11Wld4bGJXVnVkRk5wZW1VZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwU1hSbGJWTnBlbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWwwWlcxVGFYcGxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFTnZkVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYjNWdWRDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbEZvTG5CeWIzUnZkSGx3WlM1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbElEMGdJVEE3Q25aaGNpQkZlU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNGdQU0F3TENCcElEMGdNU0F2SURBcGV3b2dJQ0FnSUNBZ0lIUm9hWE11Y21GNUlEMGdibVYzSUVOdUtHVXNJSFFwTENCMGFHbHpMbTVsWVhJZ1BTQnVMQ0IwYUdsekxtWmhjaUE5SUdrc0lIUm9hWE11WTJGdFpYSmhJRDBnYm5Wc2JDd2dkR2hwY3k1c1lYbGxjbk1nUFNCdVpYY2dTbk1zSUhSb2FYTXVjR0Z5WVcxeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCTlpYTm9PaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdUR2x1WlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a09pQXhDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRXhQUkRvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUZCdmFXNTBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdoeVpYTm9iMnhrT2lBeENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lGTndjbWwwWlRvZ2UzMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkpoZVM1elpYUW9aU3dnZENrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEyRnRaWEpoS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwSUNZbUlIUXVhWE5RWlhKemNHVmpkR2wyWlVOaGJXVnlZU0EvSUNoMGFHbHpMbkpoZVM1dmNtbG5hVzR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIUXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMbkpoZVM1a2FYSmxZM1JwYjI0dWMyVjBLR1V1ZUN3Z1pTNTVMQ0F1TlNrdWRXNXdjbTlxWldOMEtIUXBMbk4xWWloMGFHbHpMbkpoZVM1dmNtbG5hVzRwTG01dmNtMWhiR2w2WlNncExDQjBhR2x6TG1OaGJXVnlZU0E5SUhRcElEb2dkQ0FtSmlCMExtbHpUM0owYUc5bmNtRndhR2xqUTJGdFpYSmhJRDhnS0hSb2FYTXVjbUY1TG05eWFXZHBiaTV6WlhRb1pTNTRMQ0JsTG5rc0lDaDBMbTVsWVhJZ0t5QjBMbVpoY2lrZ0x5QW9kQzV1WldGeUlDMGdkQzVtWVhJcEtTNTFibkJ5YjJwbFkzUW9kQ2tzSUhSb2FYTXVjbUY1TG1ScGNtVmpkR2x2Ymk1elpYUW9NQ3dnTUN3Z0xURXBMblJ5WVc1elptOXliVVJwY21WamRHbHZiaWgwTG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1allXMWxjbUVnUFNCMEtTQTZJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxKaGVXTmhjM1JsY2pvZ1ZXNXpkWEJ3YjNKMFpXUWdZMkZ0WlhKaElIUjVjR1U2SUNJZ0t5QjBMblI1Y0dVcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBUMkpxWldOMEtHVXNJSFFnUFNBaE1Dd2diaUE5SUZ0ZEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHeGhLR1VzSUhSb2FYTXNJRzRzSUhRcExDQnVMbk52Y25Rb1VHTXBMQ0J1T3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMFQySnFaV04wY3lobExDQjBJRDBnSVRBc0lHNGdQU0JiWFNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQmxMbXhsYm1kMGFEc2dhU0E4SUhJN0lHa3JLeWxzWVNobFcybGRMQ0IwYUdsekxDQnVMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1emIzSjBLRkJqS1N3Z2Jqc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdVR01vY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNdVpHbHpkR0Z1WTJVZ0xTQmxMbVJwYzNSaGJtTmxPd3A5Q21aMWJtTjBhVzl1SUd4aEtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHbG1JQ2h6TG14aGVXVnljeTUwWlhOMEtHVXViR0Y1WlhKektTQW1KaUJ6TG5KaGVXTmhjM1FvWlN3Z2RDa3NJRzRnUFQwOUlDRXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J6TG1Ob2FXeGtjbVZ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCcExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bHNZU2hwVzNKZExDQmxMQ0IwTENBaE1DazdDaUFnSUNCOUNuMEtkbUZ5SUVGNUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXdMQ0J1SUQwZ01DbDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21Ga2FYVnpJRDBnWlN3Z2RHaHBjeTV3YUdrZ1BTQjBMQ0IwYUdsekxuUm9aWFJoSUQwZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTd2dkR2hwY3k1d2FHa2dQU0IwTENCMGFHbHpMblJvWlhSaElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUdVdWNtRmthWFZ6TENCMGFHbHpMbkJvYVNBOUlHVXVjR2hwTENCMGFHbHpMblJvWlhSaElEMGdaUzUwYUdWMFlTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhhMlZUWVdabEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Cb2FTQTlJRTFoZEdndWJXRjRLREZsTFRZc0lFMWhkR2d1YldsdUtFMWhkR2d1VUVrZ0xTQXhaUzAyTENCMGFHbHpMbkJvYVNrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZabFkzUnZjak1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMURZWEowWlhOcFlXNURiMjl5WkhNb1pTNTRMQ0JsTG5rc0lHVXVlaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTJGeWRHVnphV0Z1UTI5dmNtUnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCTllYUm9Mbk54Y25Rb1pTQXFJR1VnS3lCMElDb2dkQ0FySUc0Z0tpQnVLU3dnZEdocGN5NXlZV1JwZFhNZ1BUMDlJREFnUHlBb2RHaHBjeTUwYUdWMFlTQTlJREFzSUhSb2FYTXVjR2hwSUQwZ01Da2dPaUFvZEdocGN5NTBhR1YwWVNBOUlFMWhkR2d1WVhSaGJqSW9aU3dnYmlrc0lIUm9hWE11Y0docElEMGdUV0YwYUM1aFkyOXpLRzEwS0hRZ0x5QjBhR2x6TG5KaFpHbDFjeXdnTFRFc0lERXBLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFwOUxDQkRlU0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNBeExDQjBJRDBnTUN3Z2JpQTlJREFwZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXNJSFJvYVhNdWRHaGxkR0VnUFNCMExDQjBhR2x6TG5rZ1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlZV1JwZFhNZ1BTQmxMQ0IwYUdsekxuUm9aWFJoSUQwZ2RDd2dkR2hwY3k1NUlEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUdVdWNtRmthWFZ6TENCMGFHbHpMblJvWlhSaElEMGdaUzUwYUdWMFlTd2dkR2hwY3k1NUlEMGdaUzU1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVlpsWTNSdmNqTW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRVp5YjIxRFlYSjBaWE5wWVc1RGIyOXlaSE1vWlM1NExDQmxMbmtzSUdVdWVpazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMkZ5ZEdWemFXRnVRMjl2Y21SektHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WVdScGRYTWdQU0JOWVhSb0xuTnhjblFvWlNBcUlHVWdLeUJ1SUNvZ2Jpa3NJSFJvYVhNdWRHaGxkR0VnUFNCTllYUm9MbUYwWVc0eUtHVXNJRzRwTENCMGFHbHpMbmtnUFNCMExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmU3dnU1dNZ1BTQnVaWGNnV0N3Z2NXa2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGZ29NU0F2SURBc0lERWdMeUF3S1N3Z2RDQTlJRzVsZHlCWUtDMHhJQzhnTUN3Z0xURWdMeUF3S1NsN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0YVc0Z1BTQmxMQ0IwYUdsekxtMWhlQ0E5SUhRN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG0xcGJpNWpiM0I1S0dVcExDQjBhR2x6TG0xaGVDNWpiM0I1S0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCdmFXNTBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0WVd0bFJXMXdkSGtvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ1pTNXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3BkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLR1ZiZEYwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVU5sYm5SbGNrRnVaRk5wZW1Vb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnU1dNdVkyOXdlU2gwS1M1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1OdmNIa29aU2t1YzNWaUtHNHBMQ0IwYUdsekxtMWhlQzVqYjNCNUtHVXBMbUZrWkNodUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1WTI5d2VTaGxMbTFwYmlrc0lIUm9hWE11YldGNExtTnZjSGtvWlM1dFlYZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlVWdGNIUjVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTU0SUQwZ2RHaHBjeTV0YVc0dWVTQTlJREVnTHlBd0xDQjBhR2x6TG0xaGVDNTRJRDBnZEdocGN5NXRZWGd1ZVNBOUlDMHhJQzhnTUN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdselJXMXdkSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV0Y0TG5nZ1BDQjBhR2x6TG0xcGJpNTRJSHg4SUhSb2FYTXViV0Y0TG5rZ1BDQjBhR2x6TG0xcGJpNTVPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyVnVkR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYzBWdGNIUjVLQ2tnUHlCbExuTmxkQ2d3TENBd0tTQTZJR1V1WVdSa1ZtVmpkRzl5Y3loMGFHbHpMbTFwYml3Z2RHaHBjeTV0WVhncExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZOcGVtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtbHpSVzF3ZEhrb0tTQS9JR1V1YzJWMEtEQXNJREFwSURvZ1pTNXpkV0pXWldOMGIzSnpLSFJvYVhNdWJXRjRMQ0IwYUdsekxtMXBiaWs3Q2lBZ0lDQjlDaUFnSUNCbGVIQmhibVJDZVZCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldsdUtHVXBMQ0IwYUdsekxtMWhlQzV0WVhnb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxlSEJoYm1SQ2VWWmxZM1J2Y2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxuTjFZaWhsS1N3Z2RHaHBjeTV0WVhndVlXUmtLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhod1lXNWtRbmxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVoWkdSVFkyRnNZWElvTFdVcExDQjBhR2x6TG0xaGVDNWhaR1JUWTJGc1lYSW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjI1MFlXbHVjMUJ2YVc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU2hsTG5nZ1BDQjBhR2x6TG0xcGJpNTRJSHg4SUdVdWVDQStJSFJvYVhNdWJXRjRMbmdnZkh3Z1pTNTVJRHdnZEdocGN5NXRhVzR1ZVNCOGZDQmxMbmtnUGlCMGFHbHpMbTFoZUM1NUtUc0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpRbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWVDQThQU0JsTG0xcGJpNTRJQ1ltSUdVdWJXRjRMbmdnUEQwZ2RHaHBjeTV0WVhndWVDQW1KaUIwYUdsekxtMXBiaTU1SUR3OUlHVXViV2x1TG5rZ0ppWWdaUzV0WVhndWVTQThQU0IwYUdsekxtMWhlQzU1T3dvZ0lDQWdmUW9nSUNBZ1oyVjBVR0Z5WVcxbGRHVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNXpaWFFvS0dVdWVDQXRJSFJvYVhNdWJXbHVMbmdwSUM4Z0tIUm9hWE11YldGNExuZ2dMU0IwYUdsekxtMXBiaTU0S1N3Z0tHVXVlU0F0SUhSb2FYTXViV2x1TG5rcElDOGdLSFJvYVhNdWJXRjRMbmtnTFNCMGFHbHpMbTFwYmk1NUtTazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJU2hsTG0xaGVDNTRJRHdnZEdocGN5NXRhVzR1ZUNCOGZDQmxMbTFwYmk1NElENGdkR2hwY3k1dFlYZ3VlQ0I4ZkNCbExtMWhlQzU1SUR3Z2RHaHBjeTV0YVc0dWVTQjhmQ0JsTG0xcGJpNTVJRDRnZEdocGN5NXRZWGd1ZVNrN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0ZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWpiM0I1S0dVcExtTnNZVzF3S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQkpZeTVqYjNCNUtHVXBMbU5zWVcxd0tIUm9hWE11YldsdUxDQjBhR2x6TG0xaGVDa3VjM1ZpS0dVcExteGxibWQwYUNncE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldGNEtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndWJXbHVLR1V1YldGNEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV0Y0S0dVdWJXRjRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1Ga1pDaGxLU3dnZEdocGN5NXRZWGd1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV0YVc0dVpYRjFZV3h6S0hSb2FYTXViV2x1S1NBbUppQmxMbTFoZUM1bGNYVmhiSE1vZEdocGN5NXRZWGdwT3dvZ0lDQWdmUXA5T3dweGFTNXdjbTkwYjNSNWNHVXVhWE5DYjNneUlEMGdJVEE3Q25aaGNpQkVZeUE5SUc1bGR5Qk5MQ0JVY3lBOUlHNWxkeUJOTENCTGFDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1RTd2dkQ0E5SUc1bGR5Qk5LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuTjBZWEowSUQwZ1pTd2dkR2hwY3k1bGJtUWdQU0IwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6ZEdGeWRDNWpiM0I1S0dVcExDQjBhR2x6TG1WdVpDNWpiM0I1S0hRcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVkyOXdlU2hsTG5OMFlYSjBLU3dnZEdocGN5NWxibVF1WTI5d2VTaGxMbVZ1WkNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkRaVzUwWlhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbUZrWkZabFkzUnZjbk1vZEdocGN5NXpkR0Z5ZEN3Z2RHaHBjeTVsYm1RcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0M0MUtUc0tJQ0FnSUgwS0lDQWdJR1JsYkhSaEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXVaVzVrTENCMGFHbHpMbk4wWVhKMEtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxVM0VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVpHbHpkR0Z1WTJWVWIxTnhkV0Z5WldRb2RHaHBjeTVsYm1RcE93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMzUmhjblF1WkdsemRHRnVZMlZVYnloMGFHbHpMbVZ1WkNrN0NpQWdJQ0I5Q2lBZ0lDQmhkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdWc2RHRW9kQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2t1WVdSa0tIUm9hWE11YzNSaGNuUXBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmMyVnpkRkJ2YVc1MFZHOVFiMmx1ZEZCaGNtRnRaWFJsY2lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnUkdNdWMzVmlWbVZqZEc5eWN5aGxMQ0IwYUdsekxuTjBZWEowS1N3Z1ZITXVjM1ZpVm1WamRHOXljeWgwYUdsekxtVnVaQ3dnZEdocGN5NXpkR0Z5ZENrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCVWN5NWtiM1FvVkhNcExDQnlJRDBnVkhNdVpHOTBLRVJqS1NBdklHNDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdKaVlnS0hJZ1BTQnRkQ2h5TENBd0xDQXhLU2tzSUhJN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl6WlhOMFVHOXBiblJVYjFCdmFXNTBLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVkyeHZjMlZ6ZEZCdmFXNTBWRzlRYjJsdWRGQmhjbUZ0WlhSbGNpaGxMQ0IwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtaV3gwWVNodUtTNXRkV3gwYVhCc2VWTmpZV3hoY2locEtTNWhaR1FvZEdocGN5NXpkR0Z5ZENrN0NpQWdJQ0I5Q2lBZ0lDQmhjSEJzZVUxaGRISnBlRFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk4wWVhKMExtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2RHaHBjeTVsYm1RdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1emRHRnlkQzVsY1hWaGJITW9kR2hwY3k1emRHRnlkQ2tnSmlZZ1pTNWxibVF1WlhGMVlXeHpLSFJvYVhNdVpXNWtLVHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNuMHNJRVpqSUQwZ2JtVjNJRTBzSUV4NUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXViR2xuYUhRZ1BTQmxMQ0IwYUdsekxteHBaMmgwTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0Nrc0lIUm9hWE11YldGMGNtbDRJRDBnWlM1dFlYUnlhWGhYYjNKc1pDd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVkyOXNiM0lnUFNCME93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJRjlsTENCcElEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQXNJR0VnUFNBeExDQnNJRDBnTXpJN0lHOGdQQ0JzT3lCdkt5c3NJR0VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdieUF2SUd3Z0tpQk5ZWFJvTGxCSklDb2dNaXdnYUNBOUlHRWdMeUJzSUNvZ1RXRjBhQzVRU1NBcUlESTdDaUFnSUNBZ0lDQWdJQ0FnSUdrdWNIVnphQ2hOWVhSb0xtTnZjeWhqS1N3Z1RXRjBhQzV6YVc0b1l5a3NJREVzSUUxaGRHZ3VZMjl6S0dncExDQk5ZWFJvTG5OcGJpaG9LU3dnTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHNHVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNocExDQXpLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ1puUW9ld29nSUNBZ0lDQWdJQ0FnSUNCbWIyYzZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIUm9hWE11WTI5dVpTQTlJRzVsZHlCM2RDaHVMQ0J5S1N3Z2RHaHBjeTVoWkdRb2RHaHBjeTVqYjI1bEtTd2dkR2hwY3k1MWNHUmhkR1VvS1RzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1amIyNWxMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWpiMjVsTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG14cFoyaDBMblZ3WkdGMFpVMWhkSEpwZUZkdmNteGtLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxteHBaMmgwTG1ScGMzUmhibU5sSUQ4Z2RHaHBjeTVzYVdkb2RDNWthWE4wWVc1alpTQTZJREZsTXl3Z2RDQTlJR1VnS2lCTllYUm9MblJoYmloMGFHbHpMbXhwWjJoMExtRnVaMnhsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbU52Ym1VdWMyTmhiR1V1YzJWMEtIUXNJSFFzSUdVcExDQkdZeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTVzYVdkb2RDNTBZWEpuWlhRdWJXRjBjbWw0VjI5eWJHUXBMQ0IwYUdsekxtTnZibVV1Ykc5dmEwRjBLRVpqS1N3Z2RHaHBjeTVqYjJ4dmNpQWhQVDBnZG05cFpDQXdJRDhnZEdocGN5NWpiMjVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENoMGFHbHpMbU52Ykc5eUtTQTZJSFJvYVhNdVkyOXVaUzV0WVhSbGNtbGhiQzVqYjJ4dmNpNWpiM0I1S0hSb2FYTXViR2xuYUhRdVkyOXNiM0lwT3dvZ0lDQWdmUXA5TENCNWJpQTlJRzVsZHlCTkxDQkZjeUE5SUc1bGR5QndaU3dnVVc4Z1BTQnVaWGNnY0dVc0lHVjFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSMUtHVXBMQ0J1SUQwZ2JtVjNJRjlsTENCcElEMGdXMTBzSUhJZ1BTQmJYU3dnYnlBOUlHNWxkeUJoWlNnd0xDQXdMQ0F4S1N3Z1lTQTlJRzVsZHlCaFpTZ3dMQ0F4TENBd0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTWdQU0F3T3lCaklEd2dkQzVzWlc1bmRHZzdJR01yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb0lEMGdkRnRqWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhQzV3WVhKbGJuUWdKaVlnYUM1d1lYSmxiblF1YVhOQ2IyNWxJQ1ltSUNocExuQjFjMmdvTUN3Z01Dd2dNQ2tzSUdrdWNIVnphQ2d3TENBd0xDQXdLU3dnY2k1d2RYTm9LRzh1Y2l3Z2J5NW5MQ0J2TG1JcExDQnlMbkIxYzJnb1lTNXlMQ0JoTG1jc0lHRXVZaWtwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCdUxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYVN3Z015a3BMQ0J1TG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnWkdVb2Npd2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoWGNtbDBaVG9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndaV1E2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMzQmhjbVZ1ZERvZ0lUQUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVMQ0JzS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMnRsYkdWMGIyNUlaV3h3WlhJaUxDQjBhR2x6TG1selUydGxiR1YwYjI1SVpXeHdaWElnUFNBaE1Dd2dkR2hwY3k1eWIyOTBJRDBnWlN3Z2RHaHBjeTVpYjI1bGN5QTlJSFFzSUhSb2FYTXViV0YwY21sNElEMGdaUzV0WVhSeWFYaFhiM0pzWkN3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtSnZibVZ6TENCdUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2FTQTlJRzR1WjJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXBPd29nSUNBZ0lDQWdJRkZ2TG1OdmNIa29kR2hwY3k1eWIyOTBMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdMQ0J2SUQwZ01Ec2djaUE4SUhRdWJHVnVaM1JvT3lCeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSYmNsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdFdWNHRnlaVzUwSUNZbUlHRXVjR0Z5Wlc1MExtbHpRbTl1WlNBbUppQW9SWE11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhSYnl3Z1lTNXRZWFJ5YVhoWGIzSnNaQ2tzSUhsdUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhGY3lrc0lHa3VjMlYwV0ZsYUtHOHNJSGx1TG5nc0lIbHVMbmtzSUhsdUxub3BMQ0JGY3k1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0ZGdkxDQmhMbkJoY21WdWRDNXRZWFJ5YVhoWGIzSnNaQ2tzSUhsdUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhGY3lrc0lHa3VjMlYwV0ZsYUtHOGdLeUF4TENCNWJpNTRMQ0I1Ymk1NUxDQjViaTU2S1N3Z2J5QXJQU0F5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JpNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2MzVndaWEl1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlIUjFLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdXMTA3Q2lBZ0lDQnpJQ1ltSUhNdWFYTkNiMjVsSUNZbUlHVXVjSFZ6YUNoektUc0tJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENCekxtTm9hV3hrY21WdUxteGxibWQwYURzZ2RDc3JLV1V1Y0hWemFDNWhjSEJzZVNobExDQjBkU2h6TG1Ob2FXeGtjbVZ1VzNSZEtTazdDaUFnSUNCeVpYUjFjbTRnWlRzS2ZRcDJZWElnVW5rZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRVpwS0hRc0lEUXNJRElwTENCeUlEMGdibVYzSUdodUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJseVpXWnlZVzFsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWm05bk9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhwTENCeUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG14cFoyaDBJRDBnWlN3Z2RHaHBjeTVzYVdkb2RDNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ3BMQ0IwYUdsekxtTnZiRzl5SUQwZ2Jpd2dkR2hwY3k1MGVYQmxJRDBnSWxCdmFXNTBUR2xuYUhSSVpXeHdaWElpTENCMGFHbHpMbTFoZEhKcGVDQTlJSFJvYVhNdWJHbG5hSFF1YldGMGNtbDRWMjl5YkdRc0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG5Wd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqYjJ4dmNpQWhQVDBnZG05cFpDQXdJRDhnZEdocGN5NXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9kR2hwY3k1amIyeHZjaWtnT2lCMGFHbHpMbTFoZEdWeWFXRnNMbU52Ykc5eUxtTnZjSGtvZEdocGN5NXNhV2RvZEM1amIyeHZjaWs3Q2lBZ0lDQjlDbjBzSUZCNUlEMGdibVYzSUUwc0lFNWpJRDBnYm1WM0lHRmxMQ0JDWXlBOUlHNWxkeUJoWlN3Z1NYa2dQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXZG9kQ0E5SUdVc0lIUm9hWE11YkdsbmFIUXVkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9LU3dnZEdocGN5NXRZWFJ5YVhnZ1BTQmxMbTFoZEhKcGVGZHZjbXhrTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVqYjJ4dmNpQTlJRzQ3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ1NXa29kQ2s3Q2lBZ0lDQWdJQ0FnYVM1eWIzUmhkR1ZaS0UxaGRHZ3VVRWtnS2lBdU5Ta3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQnVaWGNnYUc0b2V3b2dJQ0FnSUNBZ0lDQWdJQ0IzYVhKbFpuSmhiV1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JtYjJjNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbU52Ykc5eUlEMDlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXViV0YwWlhKcFlXd3VkbVZ5ZEdWNFEyOXNiM0p6SUQwZ0lUQXBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdhUzVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpa3NJRzhnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0hJdVkyOTFiblFnS2lBektUc0tJQ0FnSUNBZ0lDQnBMbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2dWV1VvYnl3Z015a3BMQ0IwYUdsekxtRmtaQ2h1WlhjZ2MzUW9hU3dnZEdocGN5NXRZWFJsY21saGJDa3BMQ0IwYUdsekxuVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtTm9hV3hrY21WdVd6QmRMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWphR2xzWkhKbGJsc3dYUzV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbU5vYVd4a2NtVnVXekJkT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1OdmJHOXlJQ0U5UFNCMmIybGtJREFwSUhSb2FYTXViV0YwWlhKcFlXd3VZMjlzYjNJdWMyVjBLSFJvYVhNdVkyOXNiM0lwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVoyVnZiV1YwY25rdVoyVjBRWFIwY21saWRYUmxLQ0pqYjJ4dmNpSXBPd29nSUNBZ0lDQWdJQ0FnSUNCT1l5NWpiM0I1S0hSb2FYTXViR2xuYUhRdVkyOXNiM0lwTENCQ1l5NWpiM0I1S0hSb2FYTXViR2xuYUhRdVozSnZkVzVrUTI5c2IzSXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNWpiM1Z1ZERzZ2JpQThJR2s3SUc0ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNGdQQ0JwSUM4Z01pQS9JRTVqSURvZ1FtTTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBMbk5sZEZoWldpaHVMQ0J5TG5Jc0lISXVaeXdnY2k1aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBMbTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1V1Ykc5dmEwRjBLRkI1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDBhR2x6TG14cFoyaDBMbTFoZEhKcGVGZHZjbXhrS1M1dVpXZGhkR1VvS1NrN0NpQWdJQ0I5Q24wc0lHNTFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01UQXNJSFFnUFNBeE1Dd2diaUE5SURRME56TTVNalFzSUdrZ1BTQTRPVFEzT0RRNEtYc0tJQ0FnSUNBZ0lDQnVJRDBnYm1WM0lHRmxLRzRwTENCcElEMGdibVYzSUdGbEtHa3BPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkQ0F2SURJc0lHOGdQU0JsSUM4Z2RDd2dZU0E5SUdVZ0x5QXlMQ0JzSUQwZ1cxMHNJR01nUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHUWdQU0F3TENCbUlEMGdNQ3dnYlNBOUlDMWhPeUJrSUR3OUlIUTdJR1FyS3l3Z2JTQXJQU0J2S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiQzV3ZFhOb0tDMWhMQ0F3TENCdExDQmhMQ0F3TENCdEtTd2diQzV3ZFhOb0tHMHNJREFzSUMxaExDQnRMQ0F3TENCaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0JrSUQwOVBTQnlJRDhnYmlBNklHazdDaUFnSUNBZ0lDQWdJQ0FnSUhndWRHOUJjbkpoZVNoakxDQm1LU3dnWmlBclBTQXpMQ0I0TG5SdlFYSnlZWGtvWXl3Z1ppa3NJR1lnS3owZ015d2dlQzUwYjBGeWNtRjVLR01zSUdZcExDQm1JQ3M5SURNc0lIZ3VkRzlCY25KaGVTaGpMQ0JtS1N3Z1ppQXJQU0F6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0JvTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9iQ3dnTXlrcExDQm9Mbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2daR1VvWXl3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCMUlEMGdibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhvTENCMUtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUjNKcFpFaGxiSEJsY2lJN0NpQWdJQ0I5Q24wc0lFUjVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01UQXNJSFFnUFNBeE5pd2diaUE5SURnc0lHa2dQU0EyTkN3Z2NpQTlJRFEwTnpNNU1qUXNJRzhnUFNBNE9UUTNPRFE0S1hzS0lDQWdJQ0FnSUNCeUlEMGdibVYzSUdGbEtISXBMQ0J2SUQwZ2JtVjNJR0ZsS0c4cE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ1cxMHNJR3dnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3T3lCMUlEdzlJSFE3SUhVckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnZFNBdklIUWdLaUFvVFdGMGFDNVFTU0FxSURJcExDQm1JRDBnVFdGMGFDNXphVzRvWkNrZ0tpQmxMQ0J0SUQwZ1RXRjBhQzVqYjNNb1pDa2dLaUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQmhMbkIxYzJnb01Dd2dNQ3dnTUNrc0lHRXVjSFZ6YUNobUxDQXdMQ0J0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhnZ1BTQjFJQ1lnTVNBL0lISWdPaUJ2T3dvZ0lDQWdJQ0FnSUNBZ0lDQnNMbkIxYzJnb2VDNXlMQ0I0TG1jc0lIZ3VZaWtzSUd3dWNIVnphQ2g0TG5Jc0lIZ3VaeXdnZUM1aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFNU0E5SURBN0lIVXhJRHc5SUc0N0lIVXhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkRFZ1BTQjFNU0FtSURFZ1B5QnlJRG9nYnl3Z1pqRWdQU0JsSUMwZ1pTQXZJRzRnS2lCMU1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0TVNBOUlEQTdJRzB4SUR3Z2FUc2diVEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlREVnUFNCdE1TQXZJR2tnS2lBb1RXRjBhQzVRU1NBcUlESXBMQ0IySUQwZ1RXRjBhQzV6YVc0b2VERXBJQ29nWmpFc0lHY2dQU0JOWVhSb0xtTnZjeWg0TVNrZ0tpQm1NVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0V1Y0hWemFDaDJMQ0F3TENCbktTd2diQzV3ZFhOb0tHUXhMbklzSUdReExtY3NJR1F4TG1JcExDQjRNU0E5SUNodE1TQXJJREVwSUM4Z2FTQXFJQ2hOWVhSb0xsQkpJQ29nTWlrc0lIWWdQU0JOWVhSb0xuTnBiaWg0TVNrZ0tpQm1NU3dnWnlBOUlFMWhkR2d1WTI5ektIZ3hLU0FxSUdZeExDQmhMbkIxYzJnb2Rpd2dNQ3dnWnlrc0lHd3VjSFZ6YUNoa01TNXlMQ0JrTVM1bkxDQmtNUzVpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQmpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb1lTd2dNeWtwTENCakxuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1pHVW9iQ3dnTXlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFEyOXNiM0p6T2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGpMQ0JvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVRzlzWVhKSGNtbGtTR1ZzY0dWeUlqc0tJQ0FnSUgwS2ZTd2dlbU1nUFNCdVpYY2dUU3dnUVhNZ1BTQnVaWGNnVFN3Z1ZXTWdQU0J1WlhjZ1RTd2dSbmtnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhV2RvZENBOUlHVXNJSFJvYVhNdWJHbG5hSFF1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z2RHaHBjeTV0WVhSeWFYZ2dQU0JsTG0xaGRISnBlRmR2Y214a0xDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1amIyeHZjaUE5SUc0c0lIUWdQVDA5SUhadmFXUWdNQ0FtSmlBb2RDQTlJREVwT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYm1WM0lGOWxPd29nSUNBZ0lDQWdJR2t1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaGJDaUFnSUNBZ0lDQWdJQ0FnSUMxMExBb2dJQ0FnSUNBZ0lDQWdJQ0IwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMExBb2dJQ0FnSUNBZ0lDQWdJQ0IwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCMExBb2dJQ0FnSUNBZ0lDQWdJQ0F0ZEN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xYUXNDaUFnSUNBZ0lDQWdJQ0FnSUMxMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUYwc0lETXBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCbWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdadlp6b2dJVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnZibVZOWVhCd1pXUTZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVdkb2RGQnNZVzVsSUQwZ2JtVjNJRzl1S0drc0lISXBMQ0IwYUdsekxtRmtaQ2gwYUdsekxteHBaMmgwVUd4aGJtVXBMQ0JwSUQwZ2JtVjNJRjlsTENCcExuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFN3Z015a3BMQ0IwYUdsekxuUmhjbWRsZEV4cGJtVWdQU0J1WlhjZ2IyNG9hU3dnY2lrc0lIUm9hWE11WVdSa0tIUm9hWE11ZEdGeVoyVjBUR2x1WlNrc0lIUm9hWE11ZFhCa1lYUmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YkdsbmFIUlFiR0Z1WlM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0Nrc0lIUm9hWE11YkdsbmFIUlFiR0Z1WlM1dFlYUmxjbWxoYkM1a2FYTndiM05sS0Nrc0lIUm9hWE11ZEdGeVoyVjBUR2x1WlM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0Nrc0lIUm9hWE11ZEdGeVoyVjBUR2x1WlM1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdlbU11YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIUm9hWE11YkdsbmFIUXViV0YwY21sNFYyOXliR1FwTENCQmN5NXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZEdocGN5NXNhV2RvZEM1MFlYSm5aWFF1YldGMGNtbDRWMjl5YkdRcExDQlZZeTV6ZFdKV1pXTjBiM0p6S0VGekxDQjZZeWtzSUhSb2FYTXViR2xuYUhSUWJHRnVaUzVzYjI5clFYUW9RWE1wTENCMGFHbHpMbU52Ykc5eUlDRTlQU0IyYjJsa0lEQWdQeUFvZEdocGN5NXNhV2RvZEZCc1lXNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxuTmxkQ2gwYUdsekxtTnZiRzl5S1N3Z2RHaHBjeTUwWVhKblpYUk1hVzVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENoMGFHbHpMbU52Ykc5eUtTa2dPaUFvZEdocGN5NXNhV2RvZEZCc1lXNWxMbTFoZEdWeWFXRnNMbU52Ykc5eUxtTnZjSGtvZEdocGN5NXNhV2RvZEM1amIyeHZjaWtzSUhSb2FYTXVkR0Z5WjJWMFRHbHVaUzV0WVhSbGNtbGhiQzVqYjJ4dmNpNWpiM0I1S0hSb2FYTXViR2xuYUhRdVkyOXNiM0lwS1N3Z2RHaHBjeTUwWVhKblpYUk1hVzVsTG14dmIydEJkQ2hCY3lrc0lIUm9hWE11ZEdGeVoyVjBUR2x1WlM1elkyRnNaUzU2SUQwZ1ZXTXViR1Z1WjNSb0tDazdDaUFnSUNCOUNuMHNJRU56SUQwZ2JtVjNJRTBzSUZGbElEMGdibVYzSUVseUxDQk9lU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdkM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCdVpYY2dYMlVzSUc0Z1BTQnVaWGNnWm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dNVFkzTnpjeU1UVXNDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRU52Ykc5eWN6b2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnZibVZOWVhCd1pXUTZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrc0lHa2dQU0JiWFN3Z2NpQTlJRnRkTENCdklEMGdlMzBzSUdFZ1BTQnVaWGNnWVdVb01UWTNOVFV5TURBcExDQnNJRDBnYm1WM0lHRmxLREUyTnpFeE5qZ3dLU3dnWXlBOUlHNWxkeUJoWlNnME16YzNOU2tzSUdnZ1BTQnVaWGNnWVdVb01UWTNOemN5TVRVcExDQjFJRDBnYm1WM0lHRmxLRE16TlRVME5ETXBPd29nSUNBZ0lDQWdJR1FvSW00eElpd2dJbTR5SWl3Z1lTa3NJR1FvSW00eUlpd2dJbTQwSWl3Z1lTa3NJR1FvSW00MElpd2dJbTR6SWl3Z1lTa3NJR1FvSW00eklpd2dJbTR4SWl3Z1lTa3NJR1FvSW1ZeElpd2dJbVl5SWl3Z1lTa3NJR1FvSW1ZeUlpd2dJbVkwSWl3Z1lTa3NJR1FvSW1ZMElpd2dJbVl6SWl3Z1lTa3NJR1FvSW1Zeklpd2dJbVl4SWl3Z1lTa3NJR1FvSW00eElpd2dJbVl4SWl3Z1lTa3NJR1FvSW00eUlpd2dJbVl5SWl3Z1lTa3NJR1FvSW00eklpd2dJbVl6SWl3Z1lTa3NJR1FvSW00MElpd2dJbVkwSWl3Z1lTa3NJR1FvSW5BaUxDQWliakVpTENCc0tTd2daQ2dpY0NJc0lDSnVNaUlzSUd3cExDQmtLQ0p3SWl3Z0ltNHpJaXdnYkNrc0lHUW9JbkFpTENBaWJqUWlMQ0JzS1N3Z1pDZ2lkVEVpTENBaWRUSWlMQ0JqS1N3Z1pDZ2lkVElpTENBaWRUTWlMQ0JqS1N3Z1pDZ2lkVE1pTENBaWRURWlMQ0JqS1N3Z1pDZ2lZeUlzSUNKMElpd2dhQ2tzSUdRb0luQWlMQ0FpWXlJc0lIVXBMQ0JrS0NKamJqRWlMQ0FpWTI0eUlpd2dkU2tzSUdRb0ltTnVNeUlzSUNKamJqUWlMQ0IxS1N3Z1pDZ2lZMll4SWl3Z0ltTm1NaUlzSUhVcExDQmtLQ0pqWmpNaUxDQWlZMlkwSWl3Z2RTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdaQ2h0TENCNExDQjJLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWW9iU3dnZGlrc0lHWW9lQ3dnZGlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHWW9iU3dnZUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwTG5CMWMyZ29NQ3dnTUN3Z01Da3NJSEl1Y0hWemFDaDRMbklzSUhndVp5d2dlQzVpS1N3Z2IxdHRYU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaHZXMjFkSUQwZ1cxMHBMQ0J2VzIxZExuQjFjMmdvYVM1c1pXNW5kR2dnTHlBeklDMGdNU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhRdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2hwTENBektTa3NJSFF1YzJWMFFYUjBjbWxpZFhSbEtDSmpiMnh2Y2lJc0lHNWxkeUJrWlNoeUxDQXpLU2s3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9kQ3dnYmlrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa05oYldWeVlVaGxiSEJsY2lJc0lIUm9hWE11WTJGdFpYSmhJRDBnWlN3Z2RHaHBjeTVqWVcxbGNtRXVkWEJrWVhSbFVISnZhbVZqZEdsdmJrMWhkSEpwZUNBbUppQjBhR2x6TG1OaGJXVnlZUzUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDa3NJSFJvYVhNdWJXRjBjbWw0SUQwZ1pTNXRZWFJ5YVhoWGIzSnNaQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVjRzlwYm5STllYQWdQU0J2TENCMGFHbHpMblZ3WkdGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dkQ0E5SUhSb2FYTXVjRzlwYm5STllYQXNJRzRnUFNBeExDQnBJRDBnTVRzS0lDQWdJQ0FnSUNCUlpTNXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlM1amIzQjVLSFJvYVhNdVkyRnRaWEpoTG5CeWIycGxZM1JwYjI1TllYUnlhWGhKYm5abGNuTmxLU3dnWlhRb0ltTWlMQ0IwTENCbExDQlJaU3dnTUN3Z01Dd2dMVEVwTENCbGRDZ2lkQ0lzSUhRc0lHVXNJRkZsTENBd0xDQXdMQ0F4S1N3Z1pYUW9JbTR4SWl3Z2RDd2daU3dnVVdVc0lDMXVMQ0F0YVN3Z0xURXBMQ0JsZENnaWJqSWlMQ0IwTENCbExDQlJaU3dnYml3Z0xXa3NJQzB4S1N3Z1pYUW9JbTR6SWl3Z2RDd2daU3dnVVdVc0lDMXVMQ0JwTENBdE1Ta3NJR1YwS0NKdU5DSXNJSFFzSUdVc0lGRmxMQ0J1TENCcExDQXRNU2tzSUdWMEtDSm1NU0lzSUhRc0lHVXNJRkZsTENBdGJpd2dMV2tzSURFcExDQmxkQ2dpWmpJaUxDQjBMQ0JsTENCUlpTd2diaXdnTFdrc0lERXBMQ0JsZENnaVpqTWlMQ0IwTENCbExDQlJaU3dnTFc0c0lHa3NJREVwTENCbGRDZ2laalFpTENCMExDQmxMQ0JSWlN3Z2Jpd2dhU3dnTVNrc0lHVjBLQ0oxTVNJc0lIUXNJR1VzSUZGbExDQnVJQ29nTGpjc0lHa2dLaUF4TGpFc0lDMHhLU3dnWlhRb0luVXlJaXdnZEN3Z1pTd2dVV1VzSUMxdUlDb2dMamNzSUdrZ0tpQXhMakVzSUMweEtTd2daWFFvSW5Veklpd2dkQ3dnWlN3Z1VXVXNJREFzSUdrZ0tpQXlMQ0F0TVNrc0lHVjBLQ0pqWmpFaUxDQjBMQ0JsTENCUlpTd2dMVzRzSURBc0lERXBMQ0JsZENnaVkyWXlJaXdnZEN3Z1pTd2dVV1VzSUc0c0lEQXNJREVwTENCbGRDZ2lZMll6SWl3Z2RDd2daU3dnVVdVc0lEQXNJQzFwTENBeEtTd2daWFFvSW1ObU5DSXNJSFFzSUdVc0lGRmxMQ0F3TENCcExDQXhLU3dnWlhRb0ltTnVNU0lzSUhRc0lHVXNJRkZsTENBdGJpd2dNQ3dnTFRFcExDQmxkQ2dpWTI0eUlpd2dkQ3dnWlN3Z1VXVXNJRzRzSURBc0lDMHhLU3dnWlhRb0ltTnVNeUlzSUhRc0lHVXNJRkZsTENBd0xDQXRhU3dnTFRFcExDQmxkQ2dpWTI0MElpd2dkQ3dnWlN3Z1VXVXNJREFzSUdrc0lDMHhLU3dnWlM1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWt1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXViV0YwWlhKcFlXd3VaR2x6Y0c5elpTZ3BPd29nSUNBZ2ZRcDlPd3BtZFc1amRHbHZiaUJsZENoekxDQmxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNCRGN5NXpaWFFvYVN3Z2Npd2dieWt1ZFc1d2NtOXFaV04wS0c0cE93b2dJQ0FnYkdWMElHRWdQU0JsVzNOZE93b2dJQ0FnYVdZZ0tHRWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEM1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWs3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUdFdWJHVnVaM1JvT3lCaklEd2dhRHNnWXlzcktXd3VjMlYwV0ZsYUtHRmJZMTBzSUVOekxuZ3NJRU56TG5rc0lFTnpMbm9wT3dvZ0lDQWdmUXA5Q25aaGNpQk1jeUE5SUc1bGR5Qk1kQ3dnYVhVZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhkMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeE5qYzNOamsyTUNsN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCdVpYY2dWV2x1ZERFMlFYSnlZWGtvV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0EzQ2lBZ0lDQWdJQ0FnWFNrc0lHa2dQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLRGdnS2lBektTd2djaUE5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0J5TG5ObGRFbHVaR1Y0S0c1bGR5QlZaU2h1TENBeEtTa3NJSEl1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCVlpTaHBMQ0F6S1NrN0NpQWdJQ0FnSUNBZ2MzVndaWElvY2l3Z2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhDaUFnSUNBZ0lDQWdmU2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXViMkpxWldOMElEMGdaU3dnZEdocGN5NTBlWEJsSUQwZ0lrSnZlRWhsYkhCbGNpSXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxuVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQWhQVDBnZG05cFpDQXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFtOTRTR1ZzY0dWeU9pQXVkWEJrWVhSbEtDa2dhR0Z6SUc1dklHeHZibWRsY2lCaGNtZDFiV1Z1ZEhNdUlpa3NJSFJvYVhNdWIySnFaV04wSUNFOVBTQjJiMmxrSURBZ0ppWWdUSE11YzJWMFJuSnZiVTlpYW1WamRDaDBhR2x6TG05aWFtVmpkQ2tzSUV4ekxtbHpSVzF3ZEhrb0tTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1RITXViV2x1TENCdUlEMGdUSE11YldGNExDQnBJRDBnZEdocGN5NW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0J5SUQwZ2FTNWhjbkpoZVRzS0lDQWdJQ0FnSUNCeVd6QmRJRDBnYmk1NExDQnlXekZkSUQwZ2JpNTVMQ0J5V3pKZElEMGdiaTU2TENCeVd6TmRJRDBnZEM1NExDQnlXelJkSUQwZ2JpNTVMQ0J5V3pWZElEMGdiaTU2TENCeVd6WmRJRDBnZEM1NExDQnlXemRkSUQwZ2RDNTVMQ0J5V3poZElEMGdiaTU2TENCeVd6bGRJRDBnYmk1NExDQnlXekV3WFNBOUlIUXVlU3dnY2xzeE1WMGdQU0J1TG5vc0lISmJNVEpkSUQwZ2JpNTRMQ0J5V3pFelhTQTlJRzR1ZVN3Z2Nsc3hORjBnUFNCMExub3NJSEpiTVRWZElEMGdkQzU0TENCeVd6RTJYU0E5SUc0dWVTd2djbHN4TjEwZ1BTQjBMbm9zSUhKYk1UaGRJRDBnZEM1NExDQnlXekU1WFNBOUlIUXVlU3dnY2xzeU1GMGdQU0IwTG5vc0lISmJNakZkSUQwZ2JpNTRMQ0J5V3pJeVhTQTlJSFF1ZVN3Z2Nsc3lNMTBnUFNCMExub3NJR2t1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ3dnZEdocGN5NW5aVzl0WlhSeWVTNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1RzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxUFltcGxZM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTlpYW1WamRDQTlJR1VzSUhSb2FYTXVkWEJrWVhSbEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2QzUXVjSEp2ZEc5MGVYQmxMbU52Y0hrdVkyRnNiQ2gwYUdsekxDQmxLU3dnZEdocGN5NXZZbXBsWTNRZ1BTQmxMbTlpYW1WamRDd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1Fua2dQU0JqYkdGemN5QmxlSFJsYm1SeklIZDBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXhOamMzTmprMk1DbDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnVldsdWRERTJRWEp5WVhrb1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBM0NpQWdJQ0FnSUNBZ1hTa3NJR2tnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURUtJQ0FnSUNBZ0lDQmRMQ0J5SUQwZ2JtVjNJRjlsT3dvZ0lDQWdJQ0FnSUhJdWMyVjBTVzVrWlhnb2JtVjNJRlZsS0c0c0lERXBLU3dnY2k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR2tzSURNcEtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2loeUxDQnVaWGNnWm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYjNnZ1BTQmxMQ0IwYUdsekxuUjVjR1VnUFNBaVFtOTRNMGhsYkhCbGNpSXNJSFJvYVhNdVoyVnZiV1YwY25rdVkyOXRjSFYwWlVKdmRXNWthVzVuVTNCb1pYSmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1KdmVEc0tJQ0FnSUNBZ0lDQjBMbWx6Ulcxd2RIa29LU0I4ZkNBb2RDNW5aWFJEWlc1MFpYSW9kR2hwY3k1d2IzTnBkR2x2Ymlrc0lIUXVaMlYwVTJsNlpTaDBhR2x6TG5OallXeGxLU3dnZEdocGN5NXpZMkZzWlM1dGRXeDBhWEJzZVZOallXeGhjaWd1TlNrc0lITjFjR1Z5TG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcEtUc0tJQ0FnSUgwS2ZTd2dlbmtnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzl1SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4TENCdUlEMGdNVFkzTnpZNU5qQXBld29nSUNBZ0lDQWdJR3hsZENCcElEMGdiaXdnY2lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ1hTd2dieUE5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0J2TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9jaXdnTXlrcExDQnZMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0c4c0lHNWxkeUJtZENoN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVR3hoYm1WSVpXeHdaWElpTENCMGFHbHpMbkJzWVc1bElEMGdaU3dnZEdocGN5NXphWHBsSUQwZ2REc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUYwc0lHd2dQU0J1WlhjZ1gyVTdDaUFnSUNBZ0lDQWdiQzV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUdSbEtHRXNJRE1wS1N3Z2JDNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1N3Z2RHaHBjeTVoWkdRb2JtVjNJSE4wS0d3c0lHNWxkeUJvYmloN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lBdU1pd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTndZWEpsYm5RNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRmR5YVhSbE9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1NrcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnTFhSb2FYTXVjR3hoYm1VdVkyOXVjM1JoYm5RN0NpQWdJQ0FnSUNBZ1RXRjBhQzVoWW5Nb2RDa2dQQ0F4WlMwNElDWW1JQ2gwSUQwZ01XVXRPQ2tzSUhSb2FYTXVjMk5oYkdVdWMyVjBLQzQxSUNvZ2RHaHBjeTV6YVhwbExDQXVOU0FxSUhSb2FYTXVjMmw2WlN3Z2RDa3NJSFJvYVhNdVkyaHBiR1J5Wlc1Yk1GMHViV0YwWlhKcFlXd3VjMmxrWlNBOUlIUWdQQ0F3SUQ4Z2FYUWdPaUJCYVN3Z2RHaHBjeTVzYjI5clFYUW9kR2hwY3k1d2JHRnVaUzV1YjNKdFlXd3BMQ0J6ZFhCbGNpNTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLVHNLSUNBZ0lIMEtmU3dnVDJNZ1BTQnVaWGNnVFN3Z1VuTXNJRXR2TENCVmVTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1RtVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5LREFzSURBc0lERXBMQ0IwSUQwZ2JtVjNJRTBvTUN3Z01Dd2dNQ2tzSUc0Z1BTQXhMQ0JwSUQwZ01UWTNOelk1TmpBc0lISWdQU0J1SUNvZ0xqSXNJRzhnUFNCeUlDb2dMaklwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrRnljbTkzU0dWc2NHVnlJaXdnVW5NZ1BUMDlJSFp2YVdRZ01DQW1KaUFvVW5NZ1BTQnVaWGNnWDJVc0lGSnpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0NpQWdJQ0FnSUNBZ1hTd2dNeWtwTENCTGJ5QTlJRzVsZHlCS2JpZ3dMQ0F1TlN3Z01Td2dOU3dnTVNrc0lFdHZMblJ5WVc1emJHRjBaU2d3TENBdExqVXNJREFwS1N3Z2RHaHBjeTV3YjNOcGRHbHZiaTVqYjNCNUtIUXBMQ0IwYUdsekxteHBibVVnUFNCdVpYY2diMjRvVW5Nc0lHNWxkeUJtZENoN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dWa09pQWhNUW9nSUNBZ0lDQWdJSDBwS1N3Z2RHaHBjeTVzYVc1bExtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWhaR1FvZEdocGN5NXNhVzVsS1N3Z2RHaHBjeTVqYjI1bElEMGdibVYzSUhOMEtFdHZMQ0J1WlhjZ2FHNG9ld29nSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nYVN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtTa3NJSFJvYVhNdVkyOXVaUzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WVdSa0tIUm9hWE11WTI5dVpTa3NJSFJvYVhNdWMyVjBSR2x5WldOMGFXOXVLR1VwTENCMGFHbHpMbk5sZEV4bGJtZDBhQ2h1TENCeUxDQnZLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXVlU0ErSUM0NU9UazVPU2tnZEdocGN5NXhkV0YwWlhKdWFXOXVMbk5sZENnd0xDQXdMQ0F3TENBeEtUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaGxMbmtnUENBdExqazVPVGs1S1NCMGFHbHpMbkYxWVhSbGNtNXBiMjR1YzJWMEtERXNJREFzSURBc0lEQXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JQWXk1elpYUW9aUzU2TENBd0xDQXRaUzU0S1M1dWIzSnRZV3hwZW1Vb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0JOWVhSb0xtRmpiM01vWlM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXhkV0YwWlhKdWFXOXVMbk5sZEVaeWIyMUJlR2x6UVc1bmJHVW9UMk1zSUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE5sZEV4bGJtZDBhQ2hsTENCMElEMGdaU0FxSUM0eUxDQnVJRDBnZENBcUlDNHlLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhVzVsTG5OallXeGxMbk5sZENneExDQk5ZWFJvTG0xaGVDZ3haUzAwTENCbElDMGdkQ2tzSURFcExDQjBhR2x6TG14cGJtVXVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lIUm9hWE11WTI5dVpTNXpZMkZzWlM1elpYUW9iaXdnZEN3Z2Jpa3NJSFJvYVhNdVkyOXVaUzV3YjNOcGRHbHZiaTU1SUQwZ1pTd2dkR2hwY3k1amIyNWxMblZ3WkdGMFpVMWhkSEpwZUNncE93b2dJQ0FnZlFvZ0lDQWdjMlYwUTI5c2IzSW9aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViR2x1WlM1dFlYUmxjbWxoYkM1amIyeHZjaTV6WlhRb1pTa3NJSFJvYVhNdVkyOXVaUzV0WVhSbGNtbGhiQzVqYjJ4dmNpNXpaWFFvWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxMQ0FoTVNrc0lIUm9hWE11YkdsdVpTNWpiM0I1S0dVdWJHbHVaU2tzSUhSb2FYTXVZMjl1WlM1amIzQjVLR1V1WTI5dVpTa3NJSFJvYVhNN0NpQWdJQ0I5Q24wc0lISjFJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QjNkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01TbDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdVc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQmRMQ0J1SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXVOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTGpZc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzQyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhDaUFnSUNBZ0lDQWdYU3dnYVNBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCcExuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvZEN3Z015a3BMQ0JwTG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnWkdVb2Jpd2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2locExDQnlLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFYaGxjMGhsYkhCbGNpSTdDaUFnSUNCOUNpQWdJQ0J6WlhSRGIyeHZjbk1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYm1WM0lHRmxMQ0J5SUQwZ2RHaHBjeTVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6TG1OdmJHOXlMbUZ5Y21GNU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcExuTmxkQ2hsS1N3Z2FTNTBiMEZ5Y21GNUtISXNJREFwTENCcExuUnZRWEp5WVhrb2Npd2dNeWtzSUdrdWMyVjBLSFFwTENCcExuUnZRWEp5WVhrb2Npd2dOaWtzSUdrdWRHOUJjbkpoZVNoeUxDQTVLU3dnYVM1elpYUW9iaWtzSUdrdWRHOUJjbkpoZVNoeUxDQXhNaWtzSUdrdWRHOUJjbkpoZVNoeUxDQXhOU2tzSUhSb2FYTXVaMlZ2YldWMGNua3VZWFIwY21saWRYUmxjeTVqYjJ4dmNpNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTV0WVhSbGNtbGhiQzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQjlDbjBzSUU5NUlEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTJoaGNHVlFZWFJvSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTd2dkR2hwY3k1emRXSlFZWFJvY3lBOUlGdGRMQ0IwYUdsekxtTjFjbkpsYm5SUVlYUm9JRDBnYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJRzF2ZG1WVWJ5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5Y21WdWRGQmhkR2dnUFNCdVpYY2daM0lzSUhSb2FYTXVjM1ZpVUdGMGFITXVjSFZ6YUNoMGFHbHpMbU4xY25KbGJuUlFZWFJvS1N3Z2RHaHBjeTVqZFhKeVpXNTBVR0YwYUM1dGIzWmxWRzhvWlN3Z2RDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnNhVzVsVkc4b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUVlYUm9MbXhwYm1WVWJ5aGxMQ0IwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhGMVlXUnlZWFJwWTBOMWNuWmxWRzhvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU4xY25KbGJuUlFZWFJvTG5GMVlXUnlZWFJwWTBOMWNuWmxWRzhvWlN3Z2RDd2diaXdnYVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaVpYcHBaWEpEZFhKMlpWUnZLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSnlaVzUwVUdGMGFDNWlaWHBwWlhKRGRYSjJaVlJ2S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzNCc2FXNWxWR2h5ZFNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNWeWNtVnVkRkJoZEdndWMzQnNhVzVsVkdoeWRTaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2VTJoaGNHVnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnVLSEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4Z1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNUlEMGdNQ3dnWWlBOUlIQXViR1Z1WjNSb095QjVJRHdnWWpzZ2VTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQklEMGdjRnQ1WFN3Z1RDQTlJRzVsZHlCWWREc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFd3VZM1Z5ZG1WeklEMGdRUzVqZFhKMlpYTXNJRjh1Y0hWemFDaE1LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYVNod0xDQmZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I1SUQwZ1h5NXNaVzVuZEdnc0lHSWdQU0FoTVRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkJJRDBnZVNBdElERXNJRXdnUFNBd095Qk1JRHdnZVRzZ1FTQTlJRXdyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTU0E5SUY5YlFWMHNJR3NnUFNCZlcweGRMQ0JDSUQwZ2F5NTRJQzBnU1M1NExDQlFJRDBnYXk1NUlDMGdTUzU1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFMWhkR2d1WVdKektGQXBJRDRnVG5WdFltVnlMa1ZRVTBsTVQwNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9VQ0E4SURBZ0ppWWdLRWtnUFNCZlcweGRMQ0JDSUQwZ0xVSXNJR3NnUFNCZlcwRmRMQ0JRSUQwZ0xWQXBMQ0J3TG5rZ1BDQkpMbmtnZkh3Z2NDNTVJRDRnYXk1NUtTQmpiMjUwYVc1MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NDNTVJRDA5UFNCSkxua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hBdWVDQTlQVDBnU1M1NEtTQnlaWFIxY200Z0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhjZ1BTQlFJQ29nS0hBdWVDQXRJRWt1ZUNrZ0xTQkNJQ29nS0hBdWVTQXRJRWt1ZVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDNJRDA5UFNBd0tTQnlaWFIxY200Z0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gzSUR3Z01Da2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSWdQU0FoWWpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNod0xua2dJVDA5SUVrdWVTa2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHc3VlQ0E4UFNCd0xuZ2dKaVlnY0M1NElEdzlJRWt1ZUNCOGZDQkpMbmdnUEQwZ2NDNTRJQ1ltSUhBdWVDQThQU0JyTG5ncElISmxkSFZ5YmlBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQktkQzVwYzBOc2IyTnJWMmx6WlN3Z2J5QTlJSFJvYVhNdWMzVmlVR0YwYUhNN0NpQWdJQ0FnSUNBZ2FXWWdLRzh1YkdWdVozUm9JRDA5UFNBd0tTQnlaWFIxY200Z1cxMDdDaUFnSUNBZ0lDQWdhV1lnS0hRZ1BUMDlJQ0V3S1NCeVpYUjFjbTRnYmlodktUc0tJQ0FnSUNBZ0lDQnNaWFFnWVN3Z2JDd2dZeXdnYUNBOUlGdGRPd29nSUNBZ0lDQWdJR2xtSUNodkxteGxibWQwYUNBOVBUMGdNU2tnY21WMGRYSnVJR3dnUFNCdld6QmRMQ0JqSUQwZ2JtVjNJRmgwTENCakxtTjFjblpsY3lBOUlHd3VZM1Z5ZG1WekxDQm9MbkIxYzJnb1l5a3NJR2c3Q2lBZ0lDQWdJQ0FnYkdWMElIVWdQU0FoY2lodld6QmRMbWRsZEZCdmFXNTBjeWdwS1RzS0lDQWdJQ0FnSUNCMUlEMGdaU0EvSUNGMUlEb2dkVHNLSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJRnRkTENCbUlEMGdXMTBzSUcwZ1BTQmJYU3dnZUNBOUlEQXNJSFk3Q2lBZ0lDQWdJQ0FnWmx0NFhTQTlJSFp2YVdRZ01Dd2diVnQ0WFNBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjQ0E5SURBc0lGOGdQU0J2TG14bGJtZDBhRHNnY0NBOElGODdJSEFyS3lsc0lEMGdiMXR3WFN3Z2RpQTlJR3d1WjJWMFVHOXBiblJ6S0Nrc0lHRWdQU0J5S0hZcExDQmhJRDBnWlNBL0lDRmhJRG9nWVN3Z1lTQS9JQ2doZFNBbUppQm1XM2hkSUNZbUlIZ3JLeXdnWmx0NFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2N6b2dibVYzSUZoMExBb2dJQ0FnSUNBZ0lDQWdJQ0J3T2lCMkNpQWdJQ0FnSUNBZ2ZTd2dabHQ0WFM1ekxtTjFjblpsY3lBOUlHd3VZM1Z5ZG1WekxDQjFJQ1ltSUhnckt5d2diVnQ0WFNBOUlGdGRLU0E2SUcxYmVGMHVjSFZ6YUNoN0NpQWdJQ0FnSUNBZ0lDQWdJR2c2SUd3c0NpQWdJQ0FnSUNBZ0lDQWdJSEE2SUhaYk1GMEtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0JwWmlBb0lXWmJNRjBwSUhKbGRIVnliaUJ1S0c4cE93b2dJQ0FnSUNBZ0lHbG1JQ2htTG14bGJtZDBhQ0ErSURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQXhJRDBnSVRFc0lGOHhJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlU0E5SURBc0lHSWdQU0JtTG14bGJtZDBhRHNnZVNBOElHSTdJSGtyS3lsa1czbGRJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlVEVnUFNBd0xDQmlNU0E5SUdZdWJHVnVaM1JvT3lCNU1TQThJR0l4T3lCNU1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQklEMGdiVnQ1TVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUV3Z1BTQXdPeUJNSUR3Z1FTNXNaVzVuZEdnN0lFd3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRWtnUFNCQlcweGRMQ0JySUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JDSUQwZ01Ec2dRaUE4SUdZdWJHVnVaM1JvT3lCQ0t5c3BhU2hKTG5Bc0lHWmJRbDB1Y0NrZ0ppWWdLSGt4SUNFOVBTQkNJQ1ltSUY4eExuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtY205dGN6b2dlVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ2Y3pvZ1Fpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FHOXNaVG9nVEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBMQ0JySUQ4Z0tHc2dQU0FoTVN3Z1pGdENYUzV3ZFhOb0tFa3BLU0E2SUhBeElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHc2dKaVlnWkZ0NU1WMHVjSFZ6YUNoSktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmZNUzVzWlc1bmRHZ2dQaUF3SUNZbUlDaHdNU0I4ZkNBb2JTQTlJR1FwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR2M3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J3TWlBOUlEQXNJRjh5SUQwZ1ppNXNaVzVuZEdnN0lIQXlJRHdnWHpJN0lIQXlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpJRDBnWmx0d01sMHVjeXdnYUM1d2RYTm9LR01wTENCbklEMGdiVnR3TWwwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdlVElnUFNBd0xDQmlNaUE5SUdjdWJHVnVaM1JvT3lCNU1pQThJR0l5T3lCNU1pc3JLV011YUc5c1pYTXVjSFZ6YUNoblcza3lYUzVvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdnN0NpQWdJQ0I5Q24wc0lITjFJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2d4S1N3Z1NIa2dQU0J1WlhjZ1NXNTBNekpCY25KaGVTaHpkUzVpZFdabVpYSXBMQ0JyZVNBOUlHTnNZWE56SUhzS0lDQWdJSE4wWVhScFl5QjBiMGhoYkdaR2JHOWhkQ2hsS1NCN0NpQWdJQ0FnSUNBZ1pTQStJRFkxTlRBMElDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtSaGRHRlZkR2xzY3k1MGIwaGhiR1pHYkc5aGRDZ3BPaUIyWVd4MVpTQmxlR05sWldSeklEWTFOVEEwTGlJcExDQmxJRDBnTmpVMU1EUXBMQ0J6ZFZzd1hTQTlJR1U3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JJZVZzd1hTd2diaUE5SUhRZ1BqNGdNVFlnSmlBek1qYzJPQ3dnYVNBOUlIUWdQajRnTVRJZ0ppQXlNRFEzTENCeUlEMGdkQ0ErUGlBeU15QW1JREkxTlRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnY2lBOElERXdNeUEvSUc0Z09pQnlJRDRnTVRReUlEOGdLRzRnZkQwZ016RTNORFFzSUc0Z2ZEMGdLSElnUFQwZ01qVTFJRDhnTUNBNklERXBJQ1ltSUhRZ0ppQTRNemc0TmpBM0xDQnVLU0E2SUhJZ1BDQXhNVE1nUHlBb2FTQjhQU0F5TURRNExDQnVJSHc5SUNocElENCtJREV4TkNBdElISXBJQ3NnS0drZ1BqNGdNVEV6SUMwZ2NpQW1JREVwTENCdUtTQTZJQ2h1SUh3OUlISWdMU0F4TVRJZ1BEd2dNVEFnZkNCcElENCtJREVzSUc0Z0t6MGdhU0FtSURFc0lHNHBPd29nSUNBZ2ZRcDlMQ0JpTUNBOUlEQXNJSGN3SUQwZ01Td2dVekFnUFNBd0xDQlVNQ0E5SURFc0lFVXdJRDBnTWpzS1puVnVZM1JwYjI0Z1FUQW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV1Z6YUVaaFkyVk5ZWFJsY21saGJDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnWVc0Z1FYSnlZWGtnYVc1emRHVmhaQzRpS1N3Z2N6c0tmUXBtZFc1amRHbHZiaUJETUNoeklEMGdXMTBwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazExYkhScFRXRjBaWEpwWVd3Z2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJR0Z1SUVGeWNtRjVJR2x1YzNSbFlXUXVJaWtzSUhNdWFYTk5kV3gwYVUxaGRHVnlhV0ZzSUQwZ0lUQXNJSE11YldGMFpYSnBZV3h6SUQwZ2N5d2djeTVqYkc5dVpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6TG5Oc2FXTmxLQ2s3Q2lBZ0lDQjlMQ0J6T3dwOUNtWjFibU4wYVc5dUlFd3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxCdmFXNTBRMnh2ZFdRZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QlVTRkpGUlM1UWIybHVkSE11SWlrc0lHNWxkeUI2Y2loekxDQmxLVHNLZlFwbWRXNWpkR2x2YmlCU01DaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVFZWEowYVdOc1pTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJRlJJVWtWRkxsTndjbWwwWlM0aUtTd2dibVYzSUhKdktITXBPd3A5Q21aMWJtTjBhVzl1SUZBd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJoY25ScFkyeGxVM2x6ZEdWdElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdWRWhTUlVVdVVHOXBiblJ6TGlJcExDQnVaWGNnZW5Jb2N5d2daU2s3Q24wS1puVnVZM1JwYjI0Z1NUQW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVRzlwYm5SRGJHOTFaRTFoZEdWeWFXRnNJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnVkVoU1JVVXVVRzlwYm5SelRXRjBaWEpwWVd3dUlpa3NJRzVsZHlCcWJpaHpLVHNLZlFwbWRXNWpkR2x2YmlCRU1DaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVFZWEowYVdOc1pVSmhjMmxqVFdGMFpYSnBZV3dnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlCVVNGSkZSUzVRYjJsdWRITk5ZWFJsY21saGJDNGlLU3dnYm1WM0lHcHVLSE1wT3dwOUNtWjFibU4wYVc5dUlFWXdLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEJoY25ScFkyeGxVM2x6ZEdWdFRXRjBaWEpwWVd3Z2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QlVTRkpGUlM1UWIybHVkSE5OWVhSbGNtbGhiQzRpS1N3Z2JtVjNJR3B1S0hNcE93cDlDbVoxYm1OMGFXOXVJRTR3S0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsY25SbGVDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVkVoU1JVVXVWbVZqZEc5eU15QnBibk4wWldGa0xpSXBMQ0J1WlhjZ1RTaHpMQ0JsTENCMEtUc0tmUXBtZFc1amRHbHZiaUJDTUNoekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUVlVzVoYldsalFuVm1abVZ5UVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVRblZtWm1WeVFYUjBjbWxpZFhSbEtDa3VjMlYwVlhOaFoyVW9JRlJJVWtWRkxrUjVibUZ0YVdORWNtRjNWWE5oWjJVZ0tTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ1ZXVW9jeXdnWlNrdWMyVjBWWE5oWjJVb2RYSXBPd3A5Q21aMWJtTjBhVzl1SUhvd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa2x1ZERoQmRIUnlhV0oxZEdVZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRzVsZHlCVVNGSkZSUzVKYm5RNFFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUdwaktITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlGVXdLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxWcGJuUTRRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVZXbHVkRGhDZFdabVpYSkJkSFJ5YVdKMWRHVW9LU0JwYm5OMFpXRmtMaUlwTENCdVpYY2dVV01vY3l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnVHpBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWV2x1ZERoRGJHRnRjR1ZrUVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVWV2x1ZERoRGJHRnRjR1ZrUW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJRXRqS0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUVnd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa2x1ZERFMlFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1U1c1ME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ1pXZ29jeXdnWlNrN0NuMEtablZ1WTNScGIyNGdhekFvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZXbHVkREUyUVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVWV2x1ZERFMlFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUZsektITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlFY3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtsdWRETXlRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVNXNTBNekpDZFdabVpYSkJkSFJ5YVdKMWRHVW9LU0JwYm5OMFpXRmtMaUlwTENCdVpYY2dkR2dvY3l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnVmpBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWV2x1ZERNeVFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1VldsdWRETXlRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lGcHpLSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJRmN3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrWnNiMkYwTXpKQmRIUnlhV0oxZEdVZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRzVsZHlCVVNGSkZSUzVHYkc5aGRETXlRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lHUmxLSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJSEV3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrWnNiMkYwTmpSQmRIUnlhV0oxZEdVZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRzVsZHlCVVNGSkZSUzVHYkc5aGREWTBRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lHbG9LSE1zSUdVcE93cDlDa04wTG1OeVpXRjBaU0E5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG14dlp5Z2lWRWhTUlVVdVEzVnlkbVV1WTNKbFlYUmxLQ2tnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkNJcExDQnpMbkJ5YjNSdmRIbHdaU0E5SUU5aWFtVmpkQzVqY21WaGRHVW9RM1F1Y0hKdmRHOTBlWEJsS1N3Z2N5NXdjbTkwYjNSNWNHVXVZMjl1YzNSeWRXTjBiM0lnUFNCekxDQnpMbkJ5YjNSdmRIbHdaUzVuWlhSUWIybHVkQ0E5SUdVc0lITTdDbjA3Q21keUxuQnliM1J2ZEhsd1pTNW1jbTl0VUc5cGJuUnpJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VUdGMGFEb2dMbVp5YjIxUWIybHVkSE1vS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJHY205dFVHOXBiblJ6S0NrdUlpa3NJSFJvYVhNdWMyVjBSbkp2YlZCdmFXNTBjeWh6S1RzS2ZUc0tablZ1WTNScGIyNGdXREFvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UVhocGMwaGxiSEJsY2lCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklGUklVa1ZGTGtGNFpYTklaV3h3WlhJdUlpa3NJRzVsZHlCeWRTaHpLVHNLZlFwbWRXNWpkR2x2YmlCS01DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNWdVpHbHVaMEp2ZUVobGJIQmxjaUJvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCRGNtVmhkR2x1WnlCaElGUklVa1ZGTGtKdmVFaGxiSEJsY2lCcGJuTjBaV0ZrTGlJcExDQnVaWGNnYVhVb2N5d2daU2s3Q24wS1puVnVZM1JwYjI0Z1dUQW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UldSblpYTklaV3h3WlhJZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRlJJVWtWRkxrVmtaMlZ6UjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpS1N3Z2JtVjNJSGQwS0c1bGR5QmZZU2h6TG1kbGIyMWxkSEo1S1N3Z2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNCamIyeHZjam9nWlNBaFBUMGdkbTlwWkNBd0lEOGdaU0E2SURFMk56YzNNakUxQ2lBZ0lDQjlLU2s3Q24wS2JuVXVjSEp2ZEc5MGVYQmxMbk5sZEVOdmJHOXljeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVIzSnBaRWhsYkhCbGNqb2djMlYwUTI5c2IzSnpLQ2tnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkN3Z2NHRnpjeUIwYUdWdElHbHVJSFJvWlNCamIyNXpkSEoxWTNSdmNpQnBibk4wWldGa0xpSXBPd3A5T3dwbGRTNXdjbTkwYjNSNWNHVXVkWEJrWVhSbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVUYTJWc1pYUnZia2hsYkhCbGNqb2dkWEJrWVhSbEtDa2dibThnYkc5dVoyVnlJRzVsWldSeklIUnZJR0psSUdOaGJHeGxaQzRpS1RzS2ZUc0tablZ1WTNScGIyNGdXakFvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYybHlaV1p5WVcxbFNHVnNjR1Z5SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQlVTRkpGUlM1WGFYSmxabkpoYldWSFpXOXRaWFJ5ZVNCcGJuTjBaV0ZrTGlJcExDQnVaWGNnZDNRb2JtVjNJRVZoS0hNdVoyVnZiV1YwY25rcExDQnVaWGNnWm5Rb2V3b2dJQ0FnSUNBZ0lHTnZiRzl5T2lCbElDRTlQU0IyYjJsa0lEQWdQeUJsSURvZ01UWTNOemN5TVRVS0lDQWdJSDBwS1RzS2ZRcGlkQzV3Y205MGIzUjVjR1V1WlhoMGNtRmpkRlZ5YkVKaGMyVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYjJGa1pYSTZJQzVsZUhSeVlXTjBWWEpzUW1GelpTZ3BJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQlVTRkpGUlM1TWIyRmtaWEpWZEdsc2N5NWxlSFJ5WVdOMFZYSnNRbUZ6WlNncElHbHVjM1JsWVdRdUlpa3NJRWR6TG1WNGRISmhZM1JWY214Q1lYTmxLSE1wT3dwOU93cGlkQzVJWVc1a2JHVnljeUE5SUhzS0lDQWdJR0ZrWkRvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VEc5aFpHVnlPaUJJWVc1a2JHVnljeTVoWkdRb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVEc5aFpHbHVaMDFoYm1GblpYSXVZV1JrU0dGdVpHeGxjaWdwSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0I5TEFvZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVNYjJGa1pYSTZJRWhoYm1Sc1pYSnpMbWRsZENncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JNYjJGa2FXNW5UV0Z1WVdkbGNpNW5aWFJJWVc1a2JHVnlLQ2tnYVc1emRHVmhaQzRpS1RzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z0pEQW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVXRWhTVEc5aFpHVnlJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnVkVoU1JVVXVSbWxzWlV4dllXUmxjaTRpS1N3Z2JtVjNJRmwwS0hNcE93cDlDbVoxYm1OMGFXOXVJR293S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKcGJtRnllVlJsZUhSMWNtVk1iMkZrWlhJZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QlVTRkpGUlM1RVlYUmhWR1Y0ZEhWeVpVeHZZV1JsY2k0aUtTd2dibVYzSUU1b0tITXBPd3A5Q25GcExuQnliM1J2ZEhsd1pTNWpaVzUwWlhJZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2d5T2lBdVkyVnVkR1Z5S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwUTJWdWRHVnlLQ2t1SWlrc0lIUm9hWE11WjJWMFEyVnVkR1Z5S0hNcE93cDlPd3B4YVM1d2NtOTBiM1I1Y0dVdVpXMXdkSGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKdmVESTZJQzVsYlhCMGVTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1selJXMXdkSGtvS1M0aUtTd2dkR2hwY3k1cGMwVnRjSFI1S0NrN0NuMDdDbkZwTG5CeWIzUnZkSGx3WlM1cGMwbHVkR1Z5YzJWamRHbHZia0p2ZUNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSnZlREk2SUM1cGMwbHVkR1Z5YzJWamRHbHZia0p2ZUNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx1ZEdWeWMyVmpkSE5DYjNnb0tTNGlLU3dnZEdocGN5NXBiblJsY25ObFkzUnpRbTk0S0hNcE93cDlPd3B4YVM1d2NtOTBiM1I1Y0dVdWMybDZaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKdmVESTZJQzV6YVhwbEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFUybDZaU2dwTGlJcExDQjBhR2x6TG1kbGRGTnBlbVVvY3lrN0NuMDdDa3gwTG5CeWIzUnZkSGx3WlM1alpXNTBaWElnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3pPaUF1WTJWdWRHVnlLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBRMlZ1ZEdWeUtDa3VJaWtzSUhSb2FYTXVaMlYwUTJWdWRHVnlLSE1wT3dwOU93cE1kQzV3Y205MGIzUjVjR1V1Wlcxd2RIa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0p2ZURNNklDNWxiWEIwZVNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx6Ulcxd2RIa29LUzRpS1N3Z2RHaHBjeTVwYzBWdGNIUjVLQ2s3Q24wN0NreDBMbkJ5YjNSdmRIbHdaUzVwYzBsdWRHVnljMlZqZEdsdmJrSnZlQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKdmVETTZJQzVwYzBsdWRHVnljMlZqZEdsdmJrSnZlQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHVkR1Z5YzJWamRITkNiM2dvS1M0aUtTd2dkR2hwY3k1cGJuUmxjbk5sWTNSelFtOTRLSE1wT3dwOU93cE1kQzV3Y205MGIzUjVjR1V1YVhOSmJuUmxjbk5sWTNScGIyNVRjR2hsY21VZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2d6T2lBdWFYTkpiblJsY25ObFkzUnBiMjVUY0dobGNtVW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0NrdUlpa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMxTndhR1Z5WlNoektUc0tmVHNLVEhRdWNISnZkRzkwZVhCbExuTnBlbVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzZ3pPaUF1YzJsNlpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRGTnBlbVVvS1M0aUtTd2dkR2hwY3k1blpYUlRhWHBsS0hNcE93cDlPd3BCYmk1d2NtOTBiM1I1Y0dVdVpXMXdkSGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxOd2FHVnlaVG9nTG1WdGNIUjVLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWFYTkZiWEIwZVNncExpSXBMQ0IwYUdsekxtbHpSVzF3ZEhrb0tUc0tmVHNLUkhJdWNISnZkRzkwZVhCbExuTmxkRVp5YjIxTllYUnlhWGdnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1R2NuVnpkSFZ0T2lBdWMyVjBSbkp2YlUxaGRISnBlQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xuTmxkRVp5YjIxUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrdUlpa3NJSFJvYVhNdWMyVjBSbkp2YlZCeWIycGxZM1JwYjI1TllYUnlhWGdvY3lrN0NuMDdDa3RvTG5CeWIzUnZkSGx3WlM1alpXNTBaWElnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXNWxNem9nTG1ObGJuUmxjaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRU5sYm5SbGNpZ3BMaUlwTENCMGFHbHpMbWRsZEVObGJuUmxjaWh6S1RzS2ZUc0tiSFF1Y0hKdmRHOTBlWEJsTG1ac1lYUjBaVzVVYjBGeWNtRjVUMlptYzJWMElEMGdablZ1WTNScGIyNG9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRNem9nTG1ac1lYUjBaVzVVYjBGeWNtRjVUMlptYzJWMEtDa2dhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElDNTBiMEZ5Y21GNUtDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NTBiMEZ5Y21GNUtITXNJR1VwT3dwOU93cHNkQzV3Y205MGIzUjVjR1V1YlhWc2RHbHdiSGxXWldOMGIzSXpJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRNem9nTG0xMWJIUnBjR3g1Vm1WamRHOXlNeWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQjJaV04wYjNJdVlYQndiSGxOWVhSeWFYZ3pLQ0J0WVhSeWFYZ2dLU0JwYm5OMFpXRmtMaUlwTENCekxtRndjR3g1VFdGMGNtbDRNeWgwYUdsektUc0tmVHNLYkhRdWNISnZkRzkwZVhCbExtMTFiSFJwY0d4NVZtVmpkRzl5TTBGeWNtRjVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TllYUnlhWGd6T2lBdWJYVnNkR2x3YkhsV1pXTjBiM0l6UVhKeVlYa29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHNkQzV3Y205MGIzUjVjR1V1WVhCd2JIbFViMEoxWm1abGNrRjBkSEpwWW5WMFpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVETTZJQzVoY0hCc2VWUnZRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUdGMGRISnBZblYwWlM1aGNIQnNlVTFoZEhKcGVETW9JRzFoZEhKcGVDQXBJR2x1YzNSbFlXUXVJaWtzSUhNdVlYQndiSGxOWVhSeWFYZ3pLSFJvYVhNcE93cDlPd3BzZEM1d2NtOTBiM1I1Y0dVdVlYQndiSGxVYjFabFkzUnZjak5CY25KaGVTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRNem9nTG1Gd2NHeDVWRzlXWldOMGIzSXpRWEp5WVhrb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwc2RDNXdjbTkwYjNSNWNHVXVaMlYwU1c1MlpYSnpaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRE02SUM1blpYUkpiblpsY25ObEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUcxaGRISnBlRWx1ZGk1amIzQjVLQ0J0WVhSeWFYZ2dLUzVwYm5abGNuUW9LVHNnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTVqYjNCNUtITXBMbWx1ZG1WeWRDZ3BPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVaWGgwY21GamRGQnZjMmwwYVc5dUlEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbVY0ZEhKaFkzUlFiM05wZEdsdmJpZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1OdmNIbFFiM05wZEdsdmJpZ3BMaUlwTENCMGFHbHpMbU52Y0hsUWIzTnBkR2x2YmloektUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtWnNZWFIwWlc1VWIwRnljbUY1VDJabWMyVjBJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtWnNZWFIwWlc1VWIwRnljbUY1VDJabWMyVjBLQ2tnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzUwYjBGeWNtRjVLQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTUwYjBGeWNtRjVLSE1zSUdVcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdVoyVjBVRzl6YVhScGIyNGdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzVuWlhSUWIzTnBkR2x2YmlncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JXWldOMGIzSXpMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmlnZ2JXRjBjbWw0SUNrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUUwb0tTNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLSFJvYVhNc0lETXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVjMlYwVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV6WlhSU2IzUmhkR2x2YmtaeWIyMVJkV0YwWlhKdWFXOXVLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWJXRnJaVkp2ZEdGMGFXOXVSbkp2YlZGMVlYUmxjbTVwYjI0b0tTNGlLU3dnZEdocGN5NXRZV3RsVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpaHpLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbTExYkhScGNHeDVWRzlCY25KaGVTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YlhWc2RHbHdiSGxVYjBGeWNtRjVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG0xMWJIUnBjR3g1Vm1WamRHOXlNeUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1dGRXeDBhWEJzZVZabFkzUnZjak1vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdkbVZqZEc5eUxtRndjR3g1VFdGMGNtbDROQ2dnYldGMGNtbDRJQ2tnYVc1emRHVmhaQzRpS1N3Z2N5NWhjSEJzZVUxaGRISnBlRFFvZEdocGN5azdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXRkV3gwYVhCc2VWWmxZM1J2Y2pRZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXViWFZzZEdsd2JIbFdaV04wYjNJMEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUhabFkzUnZjaTVoY0hCc2VVMWhkSEpwZURRb0lHMWhkSEpwZUNBcElHbHVjM1JsWVdRdUlpa3NJSE11WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE1wT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1YlhWc2RHbHdiSGxXWldOMGIzSXpRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzV0ZFd4MGFYQnNlVlpsWTNSdmNqTkJjbkpoZVNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXliM1JoZEdWQmVHbHpJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWNtOTBZWFJsUVhocGN5Z3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCV1pXTjBiM0l6TG5SeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2JXRjBjbWw0SUNrZ2FXNXpkR1ZoWkM0aUtTd2djeTUwY21GdWMyWnZjbTFFYVhKbFkzUnBiMjRvZEdocGN5azdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNWpjbTl6YzFabFkzUnZjaUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1amNtOXpjMVpsWTNSdmNpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCMlpXTjBiM0l1WVhCd2JIbE5ZWFJ5YVhnMEtDQnRZWFJ5YVhnZ0tTQnBibk4wWldGa0xpSXBMQ0J6TG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6S1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG5SeVlXNXpiR0YwWlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMblJ5WVc1emJHRjBaU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1eWIzUmhkR1ZZSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVjbTkwWVhSbFdDZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV5YjNSaGRHVlpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWNtOTBZWFJsV1NncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXliM1JoZEdWYUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1Y205MFlYUmxXaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1eWIzUmhkR1ZDZVVGNGFYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1eWIzUmhkR1ZDZVVGNGFYTW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1WVhCd2JIbFViMEoxWm1abGNrRjBkSEpwWW5WMFpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEhKcGVEUTZJQzVoY0hCc2VWUnZRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUdGMGRISnBZblYwWlM1aGNIQnNlVTFoZEhKcGVEUW9JRzFoZEhKcGVDQXBJR2x1YzNSbFlXUXVJaWtzSUhNdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdVlYQndiSGxVYjFabFkzUnZjak5CY25KaGVTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG1Gd2NHeDVWRzlXWldOMGIzSXpRWEp5WVhrb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXViV0ZyWlVaeWRYTjBkVzBnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YldGclpVWnlkWE4wZFcwb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG0xaGEyVlFaWEp6Y0dWamRHbDJaU2dnYkdWbWRDd2djbWxuYUhRc0lIUnZjQ3dnWW05MGRHOXRMQ0J1WldGeUxDQm1ZWElnS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG0xaGEyVlFaWEp6Y0dWamRHbDJaU2h6TENCbExDQnVMQ0IwTENCcExDQnlLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbWRsZEVsdWRtVnljMlVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdVoyVjBTVzUyWlhKelpTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdFlYUnlhWGhKYm5ZdVkyOXdlU2dnYldGMGNtbDRJQ2t1YVc1MlpYSjBLQ2s3SUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WTI5d2VTaHpLUzVwYm5abGNuUW9LVHNLZlRzS1YzUXVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnpaV04wYVc5dVRHbHVaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxCc1lXNWxPaUF1YVhOSmJuUmxjbk5sWTNScGIyNU1hVzVsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVhVzUwWlhKelpXTjBjMHhwYm1Vb0tTNGlLU3dnZEdocGN5NXBiblJsY25ObFkzUnpUR2x1WlNoektUc0tmVHNLWjNRdWNISnZkRzkwZVhCbExtMTFiSFJwY0d4NVZtVmpkRzl5TXlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsRjFZWFJsY201cGIyNDZJQzV0ZFd4MGFYQnNlVlpsWTNSdmNqTW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2FYTWdibTkzSUhabFkzUnZjaTVoY0hCc2VWRjFZWFJsY201cGIyNG9JSEYxWVhSbGNtNXBiMjRnS1NCcGJuTjBaV0ZrTGlJcExDQnpMbUZ3Y0d4NVVYVmhkR1Z5Ym1sdmJpaDBhR2x6S1RzS2ZUc0taM1F1Y0hKdmRHOTBlWEJsTG1sdWRtVnljMlVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxGMVlYUmxjbTVwYjI0NklDNXBiblpsY25ObEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUJwYm5abGNuUW9LUzRpS1N3Z2RHaHBjeTVwYm5abGNuUW9LVHNLZlRzS1EyNHVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnpaV04wYVc5dVFtOTRJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VW1GNU9pQXVhWE5KYm5SbGNuTmxZM1JwYjI1Q2IzZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1cGJuUmxjbk5sWTNSelFtOTRLQ2t1SWlrc0lIUm9hWE11YVc1MFpYSnpaV04wYzBKdmVDaHpLVHNLZlRzS1EyNHVjSEp2ZEc5MGVYQmxMbWx6U1c1MFpYSnpaV04wYVc5dVVHeGhibVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1U1lYazZJQzVwYzBsdWRHVnljMlZqZEdsdmJsQnNZVzVsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVhVzUwWlhKelpXTjBjMUJzWVc1bEtDa3VJaWtzSUhSb2FYTXVhVzUwWlhKelpXTjBjMUJzWVc1bEtITXBPd3A5T3dwRGJpNXdjbTkwYjNSNWNHVXVhWE5KYm5SbGNuTmxZM1JwYjI1VGNHaGxjbVVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1U1lYazZJQzVwYzBsdWRHVnljMlZqZEdsdmJsTndhR1Z5WlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx1ZEdWeWMyVmpkSE5UY0dobGNtVW9LUzRpS1N3Z2RHaHBjeTVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLSE1wT3dwOU93cHVkQzV3Y205MGIzUjVjR1V1WVhKbFlTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWSEpwWVc1bmJHVTZJQzVoY21WaEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFFYSmxZU2dwTGlJcExDQjBhR2x6TG1kbGRFRnlaV0VvS1RzS2ZUc0tiblF1Y0hKdmRHOTBlWEJsTG1KaGNubGpiMjl5WkVaeWIyMVFiMmx1ZENBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFJ5YVdGdVoyeGxPaUF1WW1GeWVXTnZiM0prUm5KdmJWQnZhVzUwS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwUW1GeWVXTnZiM0prS0NrdUlpa3NJSFJvYVhNdVoyVjBRbUZ5ZVdOdmIzSmtLSE1zSUdVcE93cDlPd3B1ZEM1d2NtOTBiM1I1Y0dVdWJXbGtjRzlwYm5RZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVVjbWxoYm1kc1pUb2dMbTFwWkhCdmFXNTBLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBUV2xrY0c5cGJuUW9LUzRpS1N3Z2RHaHBjeTVuWlhSTmFXUndiMmx1ZENoektUc0tmVHNLYm5RdWNISnZkRzkwZVhCbGJtOXliV0ZzSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZISnBZVzVuYkdVNklDNXViM0p0WVd3b0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVuWlhST2IzSnRZV3dvS1M0aUtTd2dkR2hwY3k1blpYUk9iM0p0WVd3b2N5azdDbjA3Q201MExuQnliM1J2ZEhsd1pTNXdiR0Z1WlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsUnlhV0Z1WjJ4bE9pQXVjR3hoYm1Vb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVuWlhSUWJHRnVaU2dwTGlJcExDQjBhR2x6TG1kbGRGQnNZVzVsS0hNcE93cDlPd3B1ZEM1aVlYSjVZMjl2Y21SR2NtOXRVRzlwYm5RZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVVY21saGJtZHNaVG9nTG1KaGNubGpiMjl5WkVaeWIyMVFiMmx1ZENncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEVKaGNubGpiMjl5WkNncExpSXBMQ0J1ZEM1blpYUkNZWEo1WTI5dmNtUW9jeXdnWlN3Z2RDd2diaXdnYVNrN0NuMDdDbTUwTG01dmNtMWhiQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxSeWFXRnVaMnhsT2lBdWJtOXliV0ZzS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwVG05eWJXRnNLQ2t1SWlrc0lHNTBMbWRsZEU1dmNtMWhiQ2h6TENCbExDQjBMQ0J1S1RzS2ZUc0tXSFF1Y0hKdmRHOTBlWEJsTG1WNGRISmhZM1JCYkd4UWIybHVkSE1nUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VGFHRndaVG9nTG1WNGRISmhZM1JCYkd4UWIybHVkSE1vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdMbVY0ZEhKaFkzUlFiMmx1ZEhNb0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxtVjRkSEpoWTNSUWIybHVkSE1vY3lrN0NuMDdDbGgwTG5CeWIzUnZkSGx3WlM1bGVIUnlkV1JsSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVUyaGhjR1U2SUM1bGVIUnlkV1JsS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRVY0ZEhKMVpHVkhaVzl0WlhSeWVTZ3BJR2x1YzNSbFlXUXVJaWtzSUc1bGR5QnNiaWgwYUdsekxDQnpLVHNLZlRzS1dIUXVjSEp2ZEc5MGVYQmxMbTFoYTJWSFpXOXRaWFJ5ZVNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsTm9ZWEJsT2lBdWJXRnJaVWRsYjIxbGRISjVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElGTm9ZWEJsUjJWdmJXVjBjbmtvS1NCcGJuTjBaV0ZrTGlJcExDQnVaWGNnUkdrb2RHaHBjeXdnY3lrN0NuMDdDbGd1Y0hKdmRHOTBlWEJsTG1aeWIyMUJkSFJ5YVdKMWRHVWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJeU9pQXVabkp2YlVGMGRISnBZblYwWlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1M0aUtTd2dkR2hwY3k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtITXNJR1VzSUhRcE93cDlPd3BZTG5CeWIzUnZkSGx3WlM1a2FYTjBZVzVqWlZSdlRXRnVhR0YwZEdGdUlEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU1qb2dMbVJwYzNSaGJtTmxWRzlOWVc1b1lYUjBZVzRvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXRZVzVvWVhSMFlXNUVhWE4wWVc1alpWUnZLQ2t1SWlrc0lIUm9hWE11YldGdWFHRjBkR0Z1UkdsemRHRnVZMlZVYnloektUc0tmVHNLV0M1d2NtOTBiM1I1Y0dVdWJHVnVaM1JvVFdGdWFHRjBkR0Z1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l5T2lBdWJHVnVaM1JvVFdGdWFHRjBkR0Z1S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXViV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDa3VJaWtzSUhSb2FYTXViV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDazdDbjA3Q2swdWNISnZkRzkwZVhCbExuTmxkRVYxYkdWeVJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVXWldOMGIzSXpPaUF1YzJWMFJYVnNaWEpHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdSWFZzWlhJdWMyVjBSbkp2YlZKdmRHRjBhVzl1VFdGMGNtbDRLQ2tnYVc1emRHVmhaQzRpS1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1YzJWMFJYVnNaWEpHY205dFVYVmhkR1Z5Ym1sdmJpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG5ObGRFVjFiR1Z5Um5KdmJWRjFZWFJsY201cGIyNG9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1JYVnNaWEl1YzJWMFJuSnZiVkYxWVhSbGNtNXBiMjRvS1NCcGJuTjBaV0ZrTGlJcE93cDlPd3BOTG5CeWIzUnZkSGx3WlM1blpYUlFiM05wZEdsdmJrWnliMjFOWVhSeWFYZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXpPaUF1WjJWMFVHOXphWFJwYjI1R2NtOXRUV0YwY21sNEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtDa3VJaWtzSUhSb2FYTXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hNcE93cDlPd3BOTG5CeWIzUnZkSGx3WlM1blpYUlRZMkZzWlVaeWIyMU5ZWFJ5YVhnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXVaMlYwVTJOaGJHVkdjbTl0VFdGMGNtbDRLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWMyVjBSbkp2YlUxaGRISnBlRk5qWVd4bEtDa3VJaWtzSUhSb2FYTXVjMlYwUm5KdmJVMWhkSEpwZUZOallXeGxLSE1wT3dwOU93cE5MbkJ5YjNSdmRIbHdaUzVuWlhSRGIyeDFiVzVHY205dFRXRjBjbWw0SUQwZ1puVnVZM1JwYjI0b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbWRsZEVOdmJIVnRia1p5YjIxTllYUnlhWGdvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLQ2t1SWlrc0lIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQnpLVHNLZlRzS1RTNXdjbTkwYjNSNWNHVXVZWEJ3YkhsUWNtOXFaV04wYVc5dUlEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbUZ3Y0d4NVVISnZhbVZqZEdsdmJpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNBdVlYQndiSGxOWVhSeWFYZzBLQ0J0SUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9jeWs3Q24wN0NrMHVjSEp2ZEc5MGVYQmxMbVp5YjIxQmRIUnlhV0oxZEdVZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdVpuSnZiVUYwZEhKcFluVjBaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9LUzRpS1N3Z2RHaHBjeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hNc0lHVXNJSFFwT3dwOU93cE5MbkJ5YjNSdmRIbHdaUzVrYVhOMFlXNWpaVlJ2VFdGdWFHRjBkR0Z1SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtUnBjM1JoYm1ObFZHOU5ZVzVvWVhSMFlXNG9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1dFlXNW9ZWFIwWVc1RWFYTjBZVzVqWlZSdktDa3VJaWtzSUhSb2FYTXViV0Z1YUdGMGRHRnVSR2x6ZEdGdVkyVlVieWh6S1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1YkdWdVozUm9UV0Z1YUdGMGRHRnVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXpPaUF1YkdWdVozUm9UV0Z1YUdGMGRHRnVLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWJXRnVhR0YwZEdGdVRHVnVaM1JvS0NrdUlpa3NJSFJvYVhNdWJXRnVhR0YwZEdGdVRHVnVaM1JvS0NrN0NuMDdDbFpsTG5CeWIzUnZkSGx3WlM1bWNtOXRRWFIwY21saWRYUmxJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU5Eb2dMbVp5YjIxQmRIUnlhV0oxZEdVb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0NrdUlpa3NJSFJvYVhNdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHpMQ0JsTENCMEtUc0tmVHNLVm1VdWNISnZkRzkwZVhCbExteGxibWQwYUUxaGJtaGhkSFJoYmlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TkRvZ0xteGxibWQwYUUxaGJtaGhkSFJoYmlncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbTFoYm1oaGRIUmhia3hsYm1kMGFDZ3BMaUlwTENCMGFHbHpMbTFoYm1oaGRIUmhia3hsYm1kMGFDZ3BPd3A5T3dwT1pTNXdjbTkwYjNSNWNHVXVaMlYwUTJocGJHUkNlVTVoYldVZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNRelJEb2dMbWRsZEVOb2FXeGtRbmxPWVcxbEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFQySnFaV04wUW5sT1lXMWxLQ2t1SWlrc0lIUm9hWE11WjJWMFQySnFaV04wUW5sT1lXMWxLSE1wT3dwOU93cE9aUzV3Y205MGIzUjVjR1V1Y21WdVpHVnlSR1Z3ZEdnZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOME0wUTZJQzV5Wlc1a1pYSkVaWEIwYUNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdMbkpsYm1SbGNrOXlaR1Z5TENCcGJuTjBaV0ZrTGlJcE93cDlPd3BPWlM1d2NtOTBiM1I1Y0dVdWRISmhibk5zWVhSbElEMGdablZ1WTNScGIyNG9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBNMFE2SUM1MGNtRnVjMnhoZEdVb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG5SeVlXNXpiR0YwWlU5dVFYaHBjeWdnWVhocGN5d2daR2x6ZEdGdVkyVWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMblJ5WVc1emJHRjBaVTl1UVhocGN5aGxMQ0J6S1RzS2ZUc0tUbVV1Y0hKdmRHOTBlWEJsTG1kbGRGZHZjbXhrVW05MFlYUnBiMjRnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrOWlhbVZqZERORU9pQXVaMlYwVjI5eWJHUlNiM1JoZEdsdmJpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCVVNGSkZSUzVQWW1wbFkzUXpSQzVuWlhSWGIzSnNaRkYxWVhSbGNtNXBiMjRvSUhSaGNtZGxkQ0FwSUdsdWMzUmxZV1F1SWlrN0NuMDdDazVsTG5CeWIzUnZkSGx3WlM1aGNIQnNlVTFoZEhKcGVDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1WVhCd2JIbE5ZWFJ5YVhnb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVoY0hCc2VVMWhkSEpwZURRb0tTNGlLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvY3lrN0NuMDdDazlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWektFNWxMbkJ5YjNSdmRIbHdaU3dnZXdvZ0lDQWdaWFZzWlhKUGNtUmxjam9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrOWlhbVZqZERORU9pQXVaWFZzWlhKUGNtUmxjaUJwY3lCdWIzY2dMbkp2ZEdGMGFXOXVMbTl5WkdWeUxpSXBMQ0IwYUdsekxuSnZkR0YwYVc5dUxtOXlaR1Z5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBNMFE2SUM1bGRXeGxjazl5WkdWeUlHbHpJRzV2ZHlBdWNtOTBZWFJwYjI0dWIzSmtaWEl1SWlrc0lIUm9hWE11Y205MFlYUnBiMjR1YjNKa1pYSWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQjFjMlZSZFdGMFpYSnVhVzl1T2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUXpSRG9nTG5WelpWRjFZWFJsY201cGIyNGdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWR2hsSUd4cFluSmhjbmtnYm05M0lIVnpaWE1nY1hWaGRHVnlibWx2Ym5NZ1lua2daR1ZtWVhWc2RDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOME0wUTZJQzUxYzJWUmRXRjBaWEp1YVc5dUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGUm9aU0JzYVdKeVlYSjVJRzV2ZHlCMWMyVnpJSEYxWVhSbGNtNXBiMjV6SUdKNUlHUmxabUYxYkhRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlLVHNLYzNRdWNISnZkRzkwZVhCbExuTmxkRVJ5WVhkTmIyUmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TlpYTm9PaUF1YzJWMFJISmhkMDF2WkdVb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlVhR1VnY21WdVpHVnlaWElnYm05M0lHRnNkMkY1Y3lCaGMzTjFiV1Z6SUZSSVVrVkZMbFJ5YVdGdVoyeGxjMFJ5WVhkTmIyUmxMaUJVY21GdWMyWnZjbTBnZVc5MWNpQm5aVzl0WlhSeWVTQjJhV0VnUW5WbVptVnlSMlZ2YldWMGNubFZkR2xzY3k1MGIxUnlhV0Z1WjJ4bGMwUnlZWGROYjJSbEtDa2dhV1lnYm1WalpYTnpZWEo1TGlJcE93cDlPd3BQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aHpkQzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJR1J5WVhkTmIyUmxPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWxjMmc2SUM1a2NtRjNUVzlrWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVWFHVWdjbVZ1WkdWeVpYSWdibTkzSUdGc2QyRjVjeUJoYzNOMWJXVnpJRlJJVWtWRkxsUnlhV0Z1WjJ4bGMwUnlZWGROYjJSbExpSXBMQ0JHWkRzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxbGMyZzZJQzVrY21GM1RXOWtaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJVYUdVZ2NtVnVaR1Z5WlhJZ2JtOTNJR0ZzZDJGNWN5QmhjM04xYldWeklGUklVa1ZGTGxSeWFXRnVaMnhsYzBSeVlYZE5iMlJsTGlCVWNtRnVjMlp2Y20wZ2VXOTFjaUJuWlc5dFpYUnllU0IyYVdFZ1FuVm1abVZ5UjJWdmJXVjBjbmxWZEdsc2N5NTBiMVJ5YVdGdVoyeGxjMFJ5WVhkTmIyUmxLQ2tnYVdZZ2JtVmpaWE56WVhKNUxpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q25OdkxuQnliM1J2ZEhsd1pTNXBibWwwUW05dVpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxOcmFXNXVaV1JOWlhOb09pQnBibWwwUW05dVpYTW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cDFkQzV3Y205MGIzUjVjR1V1YzJWMFRHVnVjeUE5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVR1Z5YzNCbFkzUnBkbVZEWVcxbGNtRXVjMlYwVEdWdWN5QnBjeUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdMbk5sZEVadlkyRnNUR1Z1WjNSb0lHRnVaQ0F1Wm1sc2JVZGhkV2RsSUdadmNpQmhJSEJvYjNSdlozSmhjR2hwWXlCelpYUjFjQzRpS1N3Z1pTQWhQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbVpwYkcxSFlYVm5aU0E5SUdVcExDQjBhR2x6TG5ObGRFWnZZMkZzVEdWdVozUm9LSE1wT3dwOU93cFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loQ2RDNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lHOXViSGxUYUdGa2IzYzZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBaMmgwT2lBdWIyNXNlVk5vWVdSdmR5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2REWVcxbGNtRkdiM1k2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwTmhiV1Z5WVVadmRpQnBjeUJ1YjNjZ0xuTm9ZV1J2ZHk1allXMWxjbUV1Wm05MkxpSXBMQ0IwYUdsekxuTm9ZV1J2ZHk1allXMWxjbUV1Wm05MklEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzUTJGdFpYSmhUR1ZtZERvZ2V3b2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YzJoaFpHOTNRMkZ0WlhKaFRHVm1kQ0JwY3lCdWIzY2dMbk5vWVdSdmR5NWpZVzFsY21FdWJHVm1kQzRpS1N3Z2RHaHBjeTV6YUdGa2IzY3VZMkZ0WlhKaExteGxablFnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZERZVzFsY21GU2FXZG9kRG9nZXdvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXVjMmhoWkc5M1EyRnRaWEpoVW1sbmFIUWdhWE1nYm05M0lDNXphR0ZrYjNjdVkyRnRaWEpoTG5KcFoyaDBMaUlwTENCMGFHbHpMbk5vWVdSdmR5NWpZVzFsY21FdWNtbG5hSFFnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J6YUdGa2IzZERZVzFsY21GVWIzQTZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xuTm9ZV1J2ZDBOaGJXVnlZVlJ2Y0NCcGN5QnViM2NnTG5Ob1lXUnZkeTVqWVcxbGNtRXVkRzl3TGlJcExDQjBhR2x6TG5Ob1lXUnZkeTVqWVcxbGNtRXVkRzl3SUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNRMkZ0WlhKaFFtOTBkRzl0T2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsbmFIUTZJQzV6YUdGa2IzZERZVzFsY21GQ2IzUjBiMjBnYVhNZ2JtOTNJQzV6YUdGa2IzY3VZMkZ0WlhKaExtSnZkSFJ2YlM0aUtTd2dkR2hwY3k1emFHRmtiM2N1WTJGdFpYSmhMbUp2ZEhSdmJTQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDBOaGJXVnlZVTVsWVhJNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkME5oYldWeVlVNWxZWElnYVhNZ2JtOTNJQzV6YUdGa2IzY3VZMkZ0WlhKaExtNWxZWEl1SWlrc0lIUm9hWE11YzJoaFpHOTNMbU5oYldWeVlTNXVaV0Z5SUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNRMkZ0WlhKaFJtRnlPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkRFlXMWxjbUZHWVhJZ2FYTWdibTkzSUM1emFHRmtiM2N1WTJGdFpYSmhMbVpoY2k0aUtTd2dkR2hwY3k1emFHRmtiM2N1WTJGdFpYSmhMbVpoY2lBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkME5oYldWeVlWWnBjMmxpYkdVNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YzJoaFpHOTNRMkZ0WlhKaFZtbHphV0pzWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdibVYzSUZSSVVrVkZMa05oYldWeVlVaGxiSEJsY2lnZ2JHbG5hSFF1YzJoaFpHOTNMbU5oYldWeVlTQXBJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDBKcFlYTTZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xuTm9ZV1J2ZDBKcFlYTWdhWE1nYm05M0lDNXphR0ZrYjNjdVltbGhjeTRpS1N3Z2RHaHBjeTV6YUdGa2IzY3VZbWxoY3lBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkMFJoY210dVpYTnpPaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xuTm9ZV1J2ZDBSaGNtdHVaWE56SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwMWhjRmRwWkhSb09pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2ROWVhCWGFXUjBhQ0JwY3lCdWIzY2dMbk5vWVdSdmR5NXRZWEJUYVhwbExuZHBaSFJvTGlJcExDQjBhR2x6TG5Ob1lXUnZkeTV0WVhCVGFYcGxMbmRwWkhSb0lEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzVFdGd1NHVnBaMmgwT2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsbmFIUTZJQzV6YUdGa2IzZE5ZWEJJWldsbmFIUWdhWE1nYm05M0lDNXphR0ZrYjNjdWJXRndVMmw2WlM1b1pXbG5hSFF1SWlrc0lIUm9hWE11YzJoaFpHOTNMbTFoY0ZOcGVtVXVhR1ZwWjJoMElEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBwT3dwUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWhWWlM1d2NtOTBiM1I1Y0dVc0lIc0tJQ0FnSUd4bGJtZDBhRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tGMGRISnBZblYwWlRvZ0xteGxibWQwYUNCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnTG1OdmRXNTBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVZWEp5WVhrdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQmtlVzVoYldsak9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlRWFIwY21saWRYUmxPaUF1WkhsdVlXMXBZeUJvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdMblZ6WVdkbElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWRYTmhaMlVnUFQwOUlIVnlPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVNklDNWtlVzVoYldsaklHaGhjeUJpWldWdUlHUmxjSEpsWTJGMFpXUXVJRlZ6WlNBdWRYTmhaMlVnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV6WlhSVmMyRm5aU2gxY2lrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUtUc0tWV1V1Y0hKdmRHOTBlWEJsTG5ObGRFUjVibUZ0YVdNZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKQmRIUnlhV0oxZEdVNklDNXpaWFJFZVc1aGJXbGpLQ2tnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzV6WlhSVmMyRm5aU2dwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YzJWMFZYTmhaMlVvY3lBOVBUMGdJVEFnUHlCMWNpQTZJR2h5S1N3Z2RHaHBjenNLZlRzS1ZXVXVjSEp2ZEc5MGVYQmxMbU52Y0hsSmJtUnBZMlZ6UVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtKMVptWmxja0YwZEhKcFluVjBaVG9nTG1OdmNIbEpibVJwWTJWelFYSnlZWGtvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlMQ0JWWlM1d2NtOTBiM1I1Y0dVdWMyVjBRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dMbk5sZEVGeWNtRjVJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCQ2RXWm1aWEpIWlc5dFpYUnllU0F1YzJWMFFYUjBjbWxpZFhSbElIUnZJSEpsY0d4aFkyVXZjbVZ6YVhwbElHRjBkSEpwWW5WMFpTQmlkV1ptWlhKeklpazdDbjA3Q2w5bExuQnliM1J2ZEhsd1pTNWhaR1JKYm1SbGVDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzVoWkdSSmJtUmxlQ2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xuTmxkRWx1WkdWNEtDa3VJaWtzSUhSb2FYTXVjMlYwU1c1a1pYZ29jeWs3Q24wN0NsOWxMbkJ5YjNSdmRIbHdaUzVoWkdSQmRIUnlhV0oxZEdVZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbUZrWkVGMGRISnBZblYwWlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbk5sZEVGMGRISnBZblYwWlNncExpSXBMQ0FoS0dVZ0ppWWdaUzVwYzBKMVptWmxja0YwZEhKcFluVjBaU2tnSmlZZ0lTaGxJQ1ltSUdVdWFYTkpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTa2dQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1Ga1pFRjBkSEpwWW5WMFpTZ3BJRzV2ZHlCbGVIQmxZM1J6SUNnZ2JtRnRaU3dnWVhSMGNtbGlkWFJsSUNrdUlpa3NJSFJvYVhNdWMyVjBRWFIwY21saWRYUmxLSE1zSUc1bGR5QlZaU2hoY21kMWJXVnVkSE5iTVYwc0lHRnlaM1Z0Wlc1MGMxc3lYU2twS1NBNklITWdQVDA5SUNKcGJtUmxlQ0lnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVM1aFpHUkJkSFJ5YVdKMWRHVTZJRlZ6WlNBdWMyVjBTVzVrWlhnb0tTQm1iM0lnYVc1a1pYZ2dZWFIwY21saWRYUmxMaUlwTENCMGFHbHpMbk5sZEVsdVpHVjRLR1VwTENCMGFHbHpLU0E2SUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0hNc0lHVXBPd3A5T3dwZlpTNXdjbTkwYjNSNWNHVXVZV1JrUkhKaGQwTmhiR3dnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwS1NCN0NpQWdJQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbUZrWkVSeVlYZERZV3hzS0NrZ2JtOGdiRzl1WjJWeUlITjFjSEJ2Y25SeklHbHVaR1Y0VDJabWMyVjBMaUlwTENCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1T2lBdVlXUmtSSEpoZDBOaGJHd29LU0JwY3lCdWIzY2dMbUZrWkVkeWIzVndLQ2t1SWlrc0lIUm9hWE11WVdSa1IzSnZkWEFvY3l3Z1pTazdDbjA3Q2w5bExuQnliM1J2ZEhsd1pTNWpiR1ZoY2tSeVlYZERZV3hzY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtTnNaV0Z5UkhKaGQwTmhiR3h6S0NrZ2FYTWdibTkzSUM1amJHVmhja2R5YjNWd2N5Z3BMaUlwTENCMGFHbHpMbU5zWldGeVIzSnZkWEJ6S0NrN0NuMDdDbDlsTG5CeWIzUnZkSGx3WlM1amIyMXdkWFJsVDJabWMyVjBjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1OdmJYQjFkR1ZQWm1aelpYUnpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tYMlV1Y0hKdmRHOTBlWEJsTG5KbGJXOTJaVUYwZEhKcFluVjBaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVPaUF1Y21WdGIzWmxRWFIwY21saWRYUmxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVpHVnNaWFJsUVhSMGNtbGlkWFJsS0NrdUlpa3NJSFJvYVhNdVpHVnNaWFJsUVhSMGNtbGlkWFJsS0hNcE93cDlPd3BmWlM1d2NtOTBiM1I1Y0dVdVlYQndiSGxOWVhSeWFYZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbUZ3Y0d4NVRXRjBjbWw0S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVZWEJ3YkhsTllYUnlhWGcwS0NrdUlpa3NJSFJvYVhNdVlYQndiSGxOWVhSeWFYZzBLSE1wT3dwOU93cFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loZlpTNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lHUnlZWGRqWVd4c2N6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1SeVlYZGpZV3hzY3lCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNW5jbTkxY0hNdUlpa3NJSFJvYVhNdVozSnZkWEJ6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnZabVp6WlhSek9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNuazZJQzV2Wm1aelpYUnpJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1keWIzVndjeTRpS1N3Z2RHaHBjeTVuY205MWNITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlLVHNLSkc0dWNISnZkRzkwZVhCbExuTmxkRVI1Ym1GdGFXTWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYm5SbGNteGxZWFpsWkVKMVptWmxjam9nTG5ObGRFUjVibUZ0YVdNb0tTQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ0xuTmxkRlZ6WVdkbEtDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXpaWFJWYzJGblpTaHpJRDA5UFNBaE1DQS9JSFZ5SURvZ2FISXBMQ0IwYUdsek93cDlPd29rYmk1d2NtOTBiM1I1Y0dVdWMyVjBRWEp5WVhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa2x1ZEdWeWJHVmhkbVZrUW5WbVptVnlPaUF1YzJWMFFYSnlZWGtnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElFSjFabVpsY2tkbGIyMWxkSEo1SUM1elpYUkJkSFJ5YVdKMWRHVWdkRzhnY21Wd2JHRmpaUzl5WlhOcGVtVWdZWFIwY21saWRYUmxJR0oxWm1abGNuTWlLVHNLZlRzS2JHNHVjSEp2ZEc5MGVYQmxMbWRsZEVGeWNtRjVjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVJYaDBjblZrWlVkbGIyMWxkSEo1T2lBdVoyVjBRWEp5WVhsektDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2JHNHVjSEp2ZEc5MGVYQmxMbUZrWkZOb1lYQmxUR2x6ZENBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVSWGgwY25Wa1pVZGxiMjFsZEhKNU9pQXVZV1JrVTJoaGNHVk1hWE4wS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLYkc0dWNISnZkRzkwZVhCbExtRmtaRk5vWVhCbElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVGZUhSeWRXUmxSMlZ2YldWMGNuazZJQzVoWkdSVGFHRndaU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbTV2TG5CeWIzUnZkSGx3WlM1a2FYTndiM05sSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVRZMlZ1WlRvZ0xtUnBjM0J2YzJVb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dwbmJ5NXdjbTkwYjNSNWNHVXViMjVWY0dSaGRHVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFZ1YVdadmNtMDZJQzV2YmxWd1pHRjBaU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnZZbXBsWTNRdWIyNUNaV1p2Y21WU1pXNWtaWElvS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6T3dwOU93cFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loa2RDNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lIZHlZWEJCY205MWJtUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkR1Z5YVdGc09pQXVkM0poY0VGeWIzVnVaQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSbGNtbGhiRG9nTG5keVlYQkJjbTkxYm1RZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYjNabGNtUnlZWGM2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEdWeWFXRnNPaUF1YjNabGNtUnlZWGNnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMFpYSnBZV3c2SUM1dmRtVnlaSEpoZHlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0IzY21Gd1VrZENPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBaWEpwWVd3NklDNTNjbUZ3VWtkQ0lHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpa3NJRzVsZHlCaFpUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzJoaFpHbHVaem9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMaUlnS3lCMGFHbHpMblI1Y0dVZ0t5QWlPaUF1YzJoaFpHbHVaeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2RHaGxJR0p2YjJ4bFlXNGdMbVpzWVhSVGFHRmthVzVuSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM0aUlDc2dkR2hwY3k1MGVYQmxJQ3NnSWpvZ0xuTm9ZV1JwYm1jZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJSFJvWlNCaWIyOXNaV0Z1SUM1bWJHRjBVMmhoWkdsdVp5QnBibk4wWldGa0xpSXBMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnY3lBOVBUMGdhMk03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITjBaVzVqYVd4TllYTnJPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdUlpQXJJSFJvYVhNdWRIbHdaU0FySUNJNklDNXpkR1Z1WTJsc1RXRnpheUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xuTjBaVzVqYVd4R2RXNWpUV0Z6YXlCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG5OMFpXNWphV3hHZFc1alRXRnphenNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMaUlnS3lCMGFHbHpMblI1Y0dVZ0t5QWlPaUF1YzNSbGJtTnBiRTFoYzJzZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJQzV6ZEdWdVkybHNSblZ1WTAxaGMyc2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXpkR1Z1WTJsc1JuVnVZMDFoYzJzZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCMlpYSjBaWGhVWVc1blpXNTBjem9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVJaUFySUhSb2FYTXVkSGx3WlNBcklDSTZJQzUyWlhKMFpYaFVZVzVuWlc1MGN5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNGlJQ3NnZEdocGN5NTBlWEJsSUNzZ0lqb2dMblpsY25SbGVGUmhibWRsYm5SeklHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlLVHNLVDJKcVpXTjBMbVJsWm1sdVpWQnliM0JsY25ScFpYTW9jMjR1Y0hKdmRHOTBlWEJsTENCN0NpQWdJQ0JrWlhKcGRtRjBhWFpsY3pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbE5vWVdSbGNrMWhkR1Z5YVdGc09pQXVaR1Z5YVhaaGRHbDJaWE1nYUdGeklHSmxaVzRnYlc5MlpXUWdkRzhnTG1WNGRHVnVjMmx2Ym5NdVpHVnlhWFpoZEdsMlpYTXVJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVrWlhKcGRtRjBhWFpsY3pzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGlCVGFHRmtaWEpOWVhSbGNtbGhiRG9nTG1SbGNtbDJZWFJwZG1WeklHaGhjeUJpWldWdUlHMXZkbVZrSUhSdklDNWxlSFJsYm5OcGIyNXpMbVJsY21sMllYUnBkbVZ6TGlJcExDQjBhR2x6TG1WNGRHVnVjMmx2Ym5NdVpHVnlhWFpoZEdsMlpYTWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlNrN0NuRmxMbkJ5YjNSdmRIbHdaUzVqYkdWaGNsUmhjbWRsZENBOUlHWjFibU4wYVc5dUtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtTnNaV0Z5VkdGeVoyVjBLQ2tnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzV6WlhSU1pXNWtaWEpVWVhKblpYUW9LU0JoYm1RZ0xtTnNaV0Z5S0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1elpYUlNaVzVrWlhKVVlYSm5aWFFvY3lrc0lIUm9hWE11WTJ4bFlYSW9aU3dnZEN3Z2JpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNWhibWx0WVhSbElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVZVzVwYldGMFpTZ3BJR2x6SUc1dmR5QXVjMlYwUVc1cGJXRjBhVzl1VEc5dmNDZ3BMaUlwTENCMGFHbHpMbk5sZEVGdWFXMWhkR2x2Ymt4dmIzQW9jeWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVuWlhSRGRYSnlaVzUwVW1WdVpHVnlWR0Z5WjJWMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyVjBRM1Z5Y21WdWRGSmxibVJsY2xSaGNtZGxkQ2dwSUdseklHNXZkeUF1WjJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2t1SWlrc0lIUm9hWE11WjJWMFVtVnVaR1Z5VkdGeVoyVjBLQ2s3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVuWlhSTllYaEJibWx6YjNSeWIzQjVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMlYwVFdGNFFXNXBjMjkwY205d2VTZ3BJR2x6SUc1dmR5QXVZMkZ3WVdKcGJHbDBhV1Z6TG1kbGRFMWhlRUZ1YVhOdmRISnZjSGtvS1M0aUtTd2dkR2hwY3k1allYQmhZbWxzYVhScFpYTXVaMlYwVFdGNFFXNXBjMjkwY205d2VTZ3BPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVaMlYwVUhKbFkybHphVzl1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJWMFVISmxZMmx6YVc5dUtDa2dhWE1nYm05M0lDNWpZWEJoWW1sc2FYUnBaWE11Y0hKbFkybHphVzl1TGlJcExDQjBhR2x6TG1OaGNHRmlhV3hwZEdsbGN5NXdjbVZqYVhOcGIyNDdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXlaWE5sZEVkTVUzUmhkR1VnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV5WlhObGRFZE1VM1JoZEdVb0tTQnBjeUJ1YjNjZ0xuTjBZWFJsTG5KbGMyVjBLQ2t1SWlrc0lIUm9hWE11YzNSaGRHVXVjbVZ6WlhRb0tUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTjFjSEJ2Y25SelJteHZZWFJVWlhoMGRYSmxjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk4xY0hCdmNuUnpSbXh2WVhSVVpYaDBkWEpsY3lncElHbHpJRzV2ZHlBdVpYaDBaVzV6YVc5dWN5NW5aWFFvSUNkUFJWTmZkR1Y0ZEhWeVpWOW1iRzloZENjZ0tTNGlLU3dnZEdocGN5NWxlSFJsYm5OcGIyNXpMbWRsZENnaVQwVlRYM1JsZUhSMWNtVmZabXh2WVhRaUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTjFjSEJ2Y25SelNHRnNaa1pzYjJGMFZHVjRkSFZ5WlhNZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emRYQndiM0owYzBoaGJHWkdiRzloZEZSbGVIUjFjbVZ6S0NrZ2FYTWdibTkzSUM1bGVIUmxibk5wYjI1ekxtZGxkQ2dnSjA5RlUxOTBaWGgwZFhKbFgyaGhiR1pmWm14dllYUW5JQ2t1SWlrc0lIUm9hWE11WlhoMFpXNXphVzl1Y3k1blpYUW9JazlGVTE5MFpYaDBkWEpsWDJoaGJHWmZabXh2WVhRaUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTjFjSEJ2Y25SelUzUmhibVJoY21SRVpYSnBkbUYwYVhabGN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTjFjSEJ2Y25SelUzUmhibVJoY21SRVpYSnBkbUYwYVhabGN5Z3BJR2x6SUc1dmR5QXVaWGgwWlc1emFXOXVjeTVuWlhRb0lDZFBSVk5mYzNSaGJtUmhjbVJmWkdWeWFYWmhkR2wyWlhNbklDa3VJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVuWlhRb0lrOUZVMTl6ZEdGdVpHRnlaRjlrWlhKcGRtRjBhWFpsY3lJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWMzVndjRzl5ZEhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlZNelZFTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMwTnZiWEJ5WlhOelpXUlVaWGgwZFhKbFV6TlVReWdwSUdseklHNXZkeUF1WlhoMFpXNXphVzl1Y3k1blpYUW9JQ2RYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjek4wWXljZ0tTNGlLU3dnZEdocGN5NWxlSFJsYm5OcGIyNXpMbWRsZENnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNNemRHTWlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk4xY0hCdmNuUnpRMjl0Y0hKbGMzTmxaRlJsZUhSMWNtVlFWbEpVUXlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5OMWNIQnZjblJ6UTI5dGNISmxjM05sWkZSbGVIUjFjbVZRVmxKVVF5Z3BJR2x6SUc1dmR5QXVaWGgwWlc1emFXOXVjeTVuWlhRb0lDZFhSVUpIVEY5amIyMXdjbVZ6YzJWa1gzUmxlSFIxY21WZmNIWnlkR01uSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl3ZG5KMFl5SXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVjM1Z3Y0c5eWRITkNiR1Z1WkUxcGJrMWhlQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk4xY0hCdmNuUnpRbXhsYm1STmFXNU5ZWGdvS1NCcGN5QnViM2NnTG1WNGRHVnVjMmx2Ym5NdVoyVjBLQ0FuUlZoVVgySnNaVzVrWDIxcGJtMWhlQ2NnS1M0aUtTd2dkR2hwY3k1bGVIUmxibk5wYjI1ekxtZGxkQ2dpUlZoVVgySnNaVzVrWDIxcGJtMWhlQ0lwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YzNWd2NHOXlkSE5XWlhKMFpYaFVaWGgwZFhKbGN5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTjFjSEJ2Y25SelZtVnlkR1Y0VkdWNGRIVnlaWE1vS1NCcGN5QnViM2NnTG1OaGNHRmlhV3hwZEdsbGN5NTJaWEowWlhoVVpYaDBkWEpsY3k0aUtTd2dkR2hwY3k1allYQmhZbWxzYVhScFpYTXVkbVZ5ZEdWNFZHVjRkSFZ5WlhNN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1emRYQndiM0owYzBsdWMzUmhibU5sWkVGeWNtRjVjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk4xY0hCdmNuUnpTVzV6ZEdGdVkyVmtRWEp5WVhsektDa2dhWE1nYm05M0lDNWxlSFJsYm5OcGIyNXpMbWRsZENnZ0owRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1uSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbVZ1WVdKc1pWTmphWE56YjNKVVpYTjBJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1Wlc1aFlteGxVMk5wYzNOdmNsUmxjM1FvS1NCcGN5QnViM2NnTG5ObGRGTmphWE56YjNKVVpYTjBLQ2t1SWlrc0lIUm9hWE11YzJWMFUyTnBjM052Y2xSbGMzUW9jeWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVwYm1sMFRXRjBaWEpwWVd3Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtbHVhWFJOWVhSbGNtbGhiQ2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1aFpHUlFjbVZRYkhWbmFXNGdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbUZrWkZCeVpWQnNkV2RwYmlncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNWhaR1JRYjNOMFVHeDFaMmx1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1aFpHUlFiM04wVUd4MVoybHVLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5Wd1pHRjBaVk5vWVdSdmQwMWhjQ0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1ZFhCa1lYUmxVMmhoWkc5M1RXRndLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5ObGRFWmhZMlZEZFd4c2FXNW5JRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6WlhSR1lXTmxRM1ZzYkdsdVp5Z3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVoYkd4dlkxUmxlSFIxY21WVmJtbDBJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzVoYkd4dlkxUmxlSFIxY21WVmJtbDBLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5ObGRGUmxlSFIxY21VZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTmxkRlJsZUhSMWNtVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YzJWMFZHVjRkSFZ5WlRKRUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpaWFJVWlhoMGRYSmxNa1FvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWMyVjBWR1Y0ZEhWeVpVTjFZbVVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5ObGRGUmxlSFIxY21WRGRXSmxLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG1kbGRFRmpkR2wyWlUxcGNFMWhjRXhsZG1Wc0lEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyVjBRV04wYVhabFRXbHdUV0Z3VEdWMlpXd29LU0JwY3lCdWIzY2dMbWRsZEVGamRHbDJaVTFwY0cxaGNFeGxkbVZzS0NrdUlpa3NJSFJvYVhNdVoyVjBRV04wYVhabFRXbHdiV0Z3VEdWMlpXd29LVHNLZlRzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vY1dVdWNISnZkRzkwZVhCbExDQjdDaUFnSUNCemFHRmtiM2ROWVhCRmJtRmliR1ZrT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJoaFpHOTNUV0Z3TG1WdVlXSnNaV1E3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjMmhoWkc5M1RXRndSVzVoWW14bFpDQnBjeUJ1YjNjZ0xuTm9ZV1J2ZDAxaGNDNWxibUZpYkdWa0xpSXBMQ0IwYUdsekxuTm9ZV1J2ZDAxaGNDNWxibUZpYkdWa0lEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzVFdGd1ZIbHdaVG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5vWVdSdmQwMWhjQzUwZVhCbE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0ZSNWNHVWdhWE1nYm05M0lDNXphR0ZrYjNkTllYQXVkSGx3WlM0aUtTd2dkR2hwY3k1emFHRmtiM2ROWVhBdWRIbHdaU0E5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwMWhjRU4xYkd4R1lXTmxPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMyaGhaRzkzVFdGd1EzVnNiRVpoWTJVZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1UyVjBJRTFoZEdWeWFXRnNMbk5vWVdSdmQxTnBaR1VnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjRU4xYkd4R1lXTmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRk5sZENCTllYUmxjbWxoYkM1emFHRmtiM2RUYVdSbElHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdOdmJuUmxlSFE2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVkyOXVkR1Y0ZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdMbWRsZEVOdmJuUmxlSFFvS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG1kbGRFTnZiblJsZUhRb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnZG5JNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVkbklnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWVISWlLU3dnZEdocGN5NTRjanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1oyRnRiV0ZKYm5CMWREb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzVuWVcxdFlVbHVjSFYwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZObGRDQjBhR1VnWlc1amIyUnBibWNnWm05eUlIUmxlSFIxY21WeklIWnBZU0JVWlhoMGRYSmxMbVZ1WTI5a2FXNW5JR2x1YzNSbFlXUXVJaWtzSUNFeE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJGdGJXRkpibkIxZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdkR2hsSUdWdVkyOWthVzVuSUdadmNpQjBaWGgwZFhKbGN5QjJhV0VnVkdWNGRIVnlaUzVsYm1OdlpHbHVaeUJwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQm5ZVzF0WVU5MWRIQjFkRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1bllXMXRZVTkxZEhCMWRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnVjJWaVIweFNaVzVrWlhKbGNpNXZkWFJ3ZFhSRmJtTnZaR2x1WnlCcGJuTjBaV0ZrTGlJcExDQWhNVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNW5ZVzF0WVU5MWRIQjFkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ1YyVmlSMHhTWlc1a1pYSmxjaTV2ZFhSd2RYUkZibU52WkdsdVp5QnBibk4wWldGa0xpSXBMQ0IwYUdsekxtOTFkSEIxZEVWdVkyOWthVzVuSUQwZ2N5QTlQVDBnSVRBZ1B5QlBhU0E2SUU1ME93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0IwYjI1bFRXRndjR2x1WjFkb2FYUmxVRzlwYm5RNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVkRzl1WlUxaGNIQnBibWRYYUdsMFpWQnZhVzUwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrc0lERTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1MGIyNWxUV0Z3Y0dsdVoxZG9hWFJsVUc5cGJuUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1oyRnRiV0ZHWVdOMGIzSTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJGdGJXRkdZV04wYjNJZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtTd2dNanNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xtZGhiVzFoUm1GamRHOXlJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5S1RzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vZVdndWNISnZkRzkwZVhCbExDQjdDaUFnSUNCamRXeHNSbUZqWlRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjQzVqZFd4c1JtRmpaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ1RXRjBaWEpwWVd3dWMyaGhaRzkzVTJsa1pTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWMyaGhaRzkzVFdGd0xtTjFiR3hHWVdObElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0JOWVhSbGNtbGhiQzV6YUdGa2IzZFRhV1JsSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSEpsYm1SbGNsSmxkbVZ5YzJWVGFXUmxaRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNDNXlaVzVrWlhKU1pYWmxjbk5sVTJsa1pXUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUUxaGRHVnlhV0ZzTG5Ob1lXUnZkMU5wWkdVZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0M1eVpXNWtaWEpTWlhabGNuTmxVMmxrWldRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1UyVjBJRTFoZEdWeWFXRnNMbk5vWVdSdmQxTnBaR1VnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjbVZ1WkdWeVUybHVaMnhsVTJsa1pXUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1emFHRmtiM2ROWVhBdWNtVnVaR1Z5VTJsdVoyeGxVMmxrWldRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1UyVjBJRTFoZEdWeWFXRnNMbk5vWVdSdmQxTnBaR1VnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjQzV5Wlc1a1pYSlRhVzVuYkdWVGFXUmxaQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ1RXRjBaWEpwWVd3dWMyaGhaRzkzVTJsa1pTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q21aMWJtTjBhVzl1SUZFd0tITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwUTNWaVpTZ2dkMmxrZEdnc0lHaGxhV2RvZEN3Z2IzQjBhVzl1Y3lBcElHbHpJRzV2ZHlCWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUW9JSE5wZW1Vc0lHOXdkR2x2Ym5NZ0tTNGlLU3dnYm1WM0lHcHpLSE1zSUhRcE93cDlDazlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowYVdWektFRjBMbkJ5YjNSdmRIbHdaU3dnZXdvZ0lDQWdkM0poY0ZNNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG5keVlYQlRJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNTNjbUZ3VXk0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG5keVlYQlRPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzUzY21Gd1V5QnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWQzSmhjRk11SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzUzY21Gd1V5QTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lIZHlZWEJVT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzUzY21Gd1ZDQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWQzSmhjRlF1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzUzY21Gd1ZEc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVkM0poY0ZRZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG5keVlYQlVMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVkM0poY0ZRZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCdFlXZEdhV3gwWlhJNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG0xaFowWnBiSFJsY2lCcGN5QnViM2NnTG5SbGVIUjFjbVV1YldGblJtbHNkR1Z5TGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1YldGblJtbHNkR1Z5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1dFlXZEdhV3gwWlhJZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG0xaFowWnBiSFJsY2k0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG0xaFowWnBiSFJsY2lBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUcxcGJrWnBiSFJsY2pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1YldsdVJtbHNkR1Z5SUdseklHNXZkeUF1ZEdWNGRIVnlaUzV0YVc1R2FXeDBaWEl1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzV0YVc1R2FXeDBaWEk3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG0xcGJrWnBiSFJsY2lCcGN5QnViM2NnTG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5TGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1YldsdVJtbHNkR1Z5SUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWVc1cGMyOTBjbTl3ZVRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1WVc1cGMyOTBjbTl3ZVNCcGN5QnViM2NnTG5SbGVIUjFjbVV1WVc1cGMyOTBjbTl3ZVM0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG1GdWFYTnZkSEp2Y0hrN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xtRnVhWE52ZEhKdmNIa2dhWE1nYm05M0lDNTBaWGgwZFhKbExtRnVhWE52ZEhKdmNIa3VJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNWhibWx6YjNSeWIzQjVJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdiMlptYzJWME9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1dlptWnpaWFFnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbTltWm5ObGRDNGlLU3dnZEdocGN5NTBaWGgwZFhKbExtOW1abk5sZERzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdWIyWm1jMlYwSUdseklHNXZkeUF1ZEdWNGRIVnlaUzV2Wm1aelpYUXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNXZabVp6WlhRZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCeVpYQmxZWFE2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbkpsY0dWaGRDQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWNtVndaV0YwTGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1Y21Wd1pXRjBPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzV5WlhCbFlYUWdhWE1nYm05M0lDNTBaWGgwZFhKbExuSmxjR1ZoZEM0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG5KbGNHVmhkQ0E5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR1p2Y20xaGREb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdVptOXliV0YwSUdseklHNXZkeUF1ZEdWNGRIVnlaUzVtYjNKdFlYUXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNW1iM0p0WVhRN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xtWnZjbTFoZENCcGN5QnViM2NnTG5SbGVIUjFjbVV1Wm05eWJXRjBMaUlwTENCMGFHbHpMblJsZUhSMWNtVXVabTl5YldGMElEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2RIbHdaVG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVkSGx3WlNCcGN5QnViM2NnTG5SbGVIUjFjbVV1ZEhsd1pTNGlLU3dnZEdocGN5NTBaWGgwZFhKbExuUjVjR1U3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG5SNWNHVWdhWE1nYm05M0lDNTBaWGgwZFhKbExuUjVjR1V1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzUwZVhCbElEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1oyVnVaWEpoZEdWTmFYQnRZWEJ6T2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUTZJQzVuWlc1bGNtRjBaVTFwY0cxaGNITWdhWE1nYm05M0lDNTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3k0aUtTd2dkR2hwY3k1MFpYaDBkWEpsTG1kbGJtVnlZWFJsVFdsd2JXRndjenNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJR2x6SUc1dmR5QXVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDbHBoTG5CeWIzUnZkSGx3WlM1c2IyRmtJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nTG14dllXUWdhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElGUklVa1ZGTGtGMVpHbHZURzloWkdWeUlHbHVjM1JsWVdRdUlpazdDaUFnSUNCc1pYUWdaU0E5SUhSb2FYTTdDaUFnSUNCeVpYUjFjbTRnYm1WM0lHdG9LQ2t1Ykc5aFpDaHpMQ0JtZFc1amRHbHZiaWh1S1NCN0NpQWdJQ0FnSUNBZ1pTNXpaWFJDZFdabVpYSW9iaWs3Q2lBZ0lDQjlLU3dnZEdocGN6c0tmVHNLY1dndWNISnZkRzkwZVhCbExtZGxkRVJoZEdFZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrRjFaR2x2UVc1aGJIbHpaWEk2SUM1blpYUkVZWFJoS0NrZ2FYTWdibTkzSUM1blpYUkdjbVZ4ZFdWdVkzbEVZWFJoS0NrdUlpa3NJSFJvYVhNdVoyVjBSbkpsY1hWbGJtTjVSR0YwWVNncE93cDlPd29rY3k1d2NtOTBiM1I1Y0dVdWRYQmtZWFJsUTNWaVpVMWhjQ0E5SUdaMWJtTjBhVzl1S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrTjFZbVZEWVcxbGNtRTZJQzUxY0dSaGRHVkRkV0psVFdGd0tDa2dhWE1nYm05M0lDNTFjR1JoZEdVb0tTNGlLU3dnZEdocGN5NTFjR1JoZEdVb2N5d2daU2s3Q24wN0NpUnpMbkJ5YjNSdmRIbHdaUzVqYkdWaGNpQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa04xWW1WRFlXMWxjbUU2SUM1amJHVmhjaWdwSUdseklHNXZkeUF1Y21WdVpHVnlWR0Z5WjJWMExtTnNaV0Z5S0NrdUlpa3NJSFJvYVhNdWNtVnVaR1Z5VkdGeVoyVjBMbU5zWldGeUtITXNJR1VzSUhRc0lHNHBPd3A5T3dwWmJpNWpjbTl6YzA5eWFXZHBiaUE5SUhadmFXUWdNRHNLV1c0dWJHOWhaRlJsZUhSMWNtVWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtsdFlXZGxWWFJwYkhNdWJHOWhaRlJsZUhSMWNtVWdhR0Z6SUdKbFpXNGdaR1Z3Y21WallYUmxaQzRnVlhObElGUklVa1ZGTGxSbGVIUjFjbVZNYjJGa1pYSW9LU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnUW1nN0NpQWdJQ0JwTG5ObGRFTnliM056VDNKcFoybHVLSFJvYVhNdVkzSnZjM05QY21sbmFXNHBPd29nSUNBZ2JHVjBJSElnUFNCcExteHZZV1FvY3l3Z2RDd2dkbTlwWkNBd0xDQnVLVHNLSUNBZ0lISmxkSFZ5YmlCbElDWW1JQ2h5TG0xaGNIQnBibWNnUFNCbEtTd2djanNLZlRzS1dXNHViRzloWkZSbGVIUjFjbVZEZFdKbElEMGdablZ1WTNScGIyNG9jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVKYldGblpWVjBhV3h6TG14dllXUlVaWGgwZFhKbFEzVmlaU0JvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdWRWhTUlVVdVEzVmlaVlJsZUhSMWNtVk1iMkZrWlhJb0tTQnBibk4wWldGa0xpSXBPd29nSUNBZ2JHVjBJR2tnUFNCdVpYY2dSbWc3Q2lBZ0lDQnBMbk5sZEVOeWIzTnpUM0pwWjJsdUtIUm9hWE11WTNKdmMzTlBjbWxuYVc0cE93b2dJQ0FnYkdWMElISWdQU0JwTG14dllXUW9jeXdnZEN3Z2RtOXBaQ0F3TENCdUtUc0tJQ0FnSUhKbGRIVnliaUJsSUNZbUlDaHlMbTFoY0hCcGJtY2dQU0JsS1N3Z2Nqc0tmVHNLV1c0dWJHOWhaRU52YlhCeVpYTnpaV1JVWlhoMGRYSmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1SmJXRm5aVlYwYVd4ekxteHZZV1JEYjIxd2NtVnpjMlZrVkdWNGRIVnlaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1ZFaFNSVVV1UkVSVFRHOWhaR1Z5SUdsdWMzUmxZV1F1SWlrN0NuMDdDbGx1TG14dllXUkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpVTjFZbVVnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrbHRZV2RsVlhScGJITXViRzloWkVOdmJYQnlaWE56WldSVVpYaDBkWEpsUTNWaVpTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnVkVoU1JVVXVSRVJUVEc5aFpHVnlJR2x1YzNSbFlXUXVJaWs3Q24wN0NtWjFibU4wYVc5dUlFc3dLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UTJGdWRtRnpVbVZ1WkdWeVpYSWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDSXBPd3A5Q21aMWJtTjBhVzl1SUdWMktDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVTbE5QVGt4dllXUmxjaUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOUNuWmhjaUIwZGlBOUlIc0tJQ0FnSUdOeVpXRjBaVTExYkhScFRXRjBaWEpwWVd4UFltcGxZM1E2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbE5qWlc1bFZYUnBiSE1nYUdGeklHSmxaVzRnYlc5MlpXUWdkRzhnTDJWNFlXMXdiR1Z6TDJwemJTOTFkR2xzY3k5VFkyVnVaVlYwYVd4ekxtcHpJaWs3Q2lBZ0lDQjlMQW9nSUNBZ1pHVjBZV05vT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVUWTJWdVpWVjBhV3h6SUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM5bGVHRnRjR3hsY3k5cWMyMHZkWFJwYkhNdlUyTmxibVZWZEdsc2N5NXFjeUlwT3dvZ0lDQWdmU3dLSUNBZ0lHRjBkR0ZqYURvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VTJObGJtVlZkR2xzY3lCb1lYTWdZbVZsYmlCdGIzWmxaQ0IwYnlBdlpYaGhiWEJzWlhNdmFuTnRMM1YwYVd4ekwxTmpaVzVsVlhScGJITXVhbk1pS1RzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z2JuWW9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVNWlc1elJteGhjbVVnYUdGeklHSmxaVzRnYlc5MlpXUWdkRzhnTDJWNFlXMXdiR1Z6TDJwemJTOXZZbXBsWTNSekwweGxibk5tYkdGeVpTNXFjeUlwT3dwOUNtWjFibU4wYVc5dUlHbDJLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbEJoY21GdFpYUnlhV05IWlc5dFpYUnllU0JvWVhNZ1ltVmxiaUJ0YjNabFpDQjBieUF2WlhoaGJYQnNaWE12YW5OdEwyZGxiMjFsZEhKcFpYTXZVR0Z5WVcxbGRISnBZMGRsYjIxbGRISjVMbXB6SWlrc0lHNWxkeUJmWlRzS2ZRcG1kVzVqZEdsdmJpQnlkaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVVWlhoMFIyVnZiV1YwY25rZ2FHRnpJR0psWlc0Z2JXOTJaV1FnZEc4Z0wyVjRZVzF3YkdWekwycHpiUzluWlc5dFpYUnlhV1Z6TDFSbGVIUkhaVzl0WlhSeWVTNXFjeUlwTENCdVpYY2dYMlU3Q24wS1puVnVZM1JwYjI0Z2MzWW9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVHYjI1MFRHOWhaR1Z5SUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM5bGVHRnRjR3hsY3k5cWMyMHZiRzloWkdWeWN5OUdiMjUwVEc5aFpHVnlMbXB6SWlrN0NuMEtablZ1WTNScGIyNGdiM1lvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1R2IyNTBJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzlsZUdGdGNHeGxjeTlxYzIwdmJHOWhaR1Z5Y3k5R2IyNTBURzloWkdWeUxtcHpJaWs3Q24wS1puVnVZM1JwYjI0Z1lYWW9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVKYlcxbFpHbGhkR1ZTWlc1a1pYSlBZbXBsWTNRZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmUXAwZVhCbGIyWWdYMTlVU0ZKRlJWOUVSVlpVVDA5TVUxOWZJRHdnSW5VaUlDWW1JRjlmVkVoU1JVVmZSRVZXVkU5UFRGTmZYeTVrYVhOd1lYUmphRVYyWlc1MEtHNWxkeUJEZFhOMGIyMUZkbVZ1ZENnaWNtVm5hWE4wWlhJaUxDQjdDaUFnSUNCa1pYUmhhV3c2SUhzS0lDQWdJQ0FnSUNCeVpYWnBjMmx2YmpvZ1kyRUtJQ0FnSUgwS2ZTa3BPd3AwZVhCbGIyWWdkMmx1Wkc5M0lEd2dJblVpSUNZbUlDaDNhVzVrYjNjdVgxOVVTRkpGUlY5ZklEOGdZMjl1YzI5c1pTNTNZWEp1S0NKWFFWSk9TVTVIT2lCTmRXeDBhWEJzWlNCcGJuTjBZVzVqWlhNZ2IyWWdWR2h5WldVdWFuTWdZbVZwYm1jZ2FXMXdiM0owWldRdUlpa2dPaUIzYVc1a2IzY3VYMTlVU0ZKRlJWOWZJRDBnWTJFcE93cGpiMjV6ZENCdGIyUWdQU0I3Q2lBZ0lDQkJRMFZUUm1sc2JXbGpWRzl1WlUxaGNIQnBibWM2SUZWMUxBb2dJQ0FnUVdSa1JYRjFZWFJwYjI0NklGOXBMQW9nSUNBZ1FXUmtUM0JsY21GMGFXOXVPaUJHZFN3S0lDQWdJRUZrWkdsMGFYWmxRVzVwYldGMGFXOXVRbXhsYm1STmIyUmxPaUJ4WXl3S0lDQWdJRUZrWkdsMGFYWmxRbXhsYm1ScGJtYzZJRzVzTEFvZ0lDQWdRV3h3YUdGR2IzSnRZWFE2SUZoMUxBb2dJQ0FnUVd4M1lYbHpSR1Z3ZEdnNklFRjFMQW9nSUNBZ1FXeDNZWGx6VTNSbGJtTnBiRVoxYm1NNklGVmtMQW9nSUNBZ1FXMWlhV1Z1ZEV4cFoyaDBPaUJ4WVN3S0lDQWdJRUZ0WW1sbGJuUk1hV2RvZEZCeWIySmxPaUJXYUN3S0lDQWdJRUZ1YVcxaGRHbHZia05zYVhBNklFeHlMQW9nSUNBZ1FXNXBiV0YwYVc5dVRHOWhaR1Z5T2lCamVTd0tJQ0FnSUVGdWFXMWhkR2x2YmsxcGVHVnlPaUFrYUN3S0lDQWdJRUZ1YVcxaGRHbHZiazlpYW1WamRFZHliM1Z3T2lCWmFDd0tJQ0FnSUVGdWFXMWhkR2x2YmxWMGFXeHpPaUJhWlN3S0lDQWdJRUZ5WTBOMWNuWmxPaUJOWVN3S0lDQWdJRUZ5Y21GNVEyRnRaWEpoT2lCbllTd0tJQ0FnSUVGeWNtOTNTR1ZzY0dWeU9pQlZlU3dLSUNBZ0lFRjFaR2x2T2lCYVlTd0tJQ0FnSUVGMVpHbHZRVzVoYkhselpYSTZJSEZvTEFvZ0lDQWdRWFZrYVc5RGIyNTBaWGgwT2lCSWFDd0tJQ0FnSUVGMVpHbHZUR2x6ZEdWdVpYSTZJRzE1TEFvZ0lDQWdRWFZrYVc5TWIyRmtaWEk2SUd0b0xBb2dJQ0FnUVhobGMwaGxiSEJsY2pvZ2NuVXNDaUFnSUNCQmVHbHpTR1ZzY0dWeU9pQllNQ3dLSUNBZ0lFSmhZMnRUYVdSbE9pQnBkQ3dLSUNBZ0lFSmhjMmxqUkdWd2RHaFFZV05yYVc1bk9pQk9aQ3dLSUNBZ0lFSmhjMmxqVTJoaFpHOTNUV0Z3T2lCeGVTd0tJQ0FnSUVKcGJtRnllVlJsZUhSMWNtVk1iMkZrWlhJNklHb3dMQW9nSUNBZ1FtOXVaVG9nYjI4c0NpQWdJQ0JDYjI5c1pXRnVTMlY1Wm5KaGJXVlVjbUZqYXpvZ1VXNHNDaUFnSUNCQ2IzVnVaR2x1WjBKdmVFaGxiSEJsY2pvZ1NqQXNDaUFnSUNCQ2IzZ3lPaUJ4YVN3S0lDQWdJRUp2ZURNNklFeDBMQW9nSUNBZ1FtOTRNMGhsYkhCbGNqb2dRbmtzQ2lBZ0lDQkNiM2hDZFdabVpYSkhaVzl0WlhSeWVUb2dkMjRzQ2lBZ0lDQkNiM2hIWlc5dFpYUnllVG9nZDI0c0NpQWdJQ0JDYjNoSVpXeHdaWEk2SUdsMUxBb2dJQ0FnUW5WbVptVnlRWFIwY21saWRYUmxPaUJWWlN3S0lDQWdJRUoxWm1abGNrZGxiMjFsZEhKNU9pQmZaU3dLSUNBZ0lFSjFabVpsY2tkbGIyMWxkSEo1VEc5aFpHVnlPaUJWYUN3S0lDQWdJRUo1ZEdWVWVYQmxPaUJJZFN3S0lDQWdJRU5oWTJobE9pQk9hU3dLSUNBZ0lFTmhiV1Z5WVRvZ1NYSXNDaUFnSUNCRFlXMWxjbUZJWld4d1pYSTZJRTU1TEFvZ0lDQWdRMkZ1ZG1GelVtVnVaR1Z5WlhJNklFc3dMQW9nSUNBZ1EyRnVkbUZ6VkdWNGRIVnlaVG9nVkdnc0NpQWdJQ0JEWVhSdGRXeHNVbTl0UTNWeWRtVXpPaUIzWVN3S0lDQWdJRU5wYm1WdmJsUnZibVZOWVhCd2FXNW5PaUI2ZFN3S0lDQWdJRU5wY21Oc1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCbWNpd0tJQ0FnSUVOcGNtTnNaVWRsYjIxbGRISjVPaUJtY2l3S0lDQWdJRU5zWVcxd1ZHOUZaR2RsVjNKaGNIQnBibWM2SUhaMExBb2dJQ0FnUTJ4dlkyczZJRmRvTEFvZ0lDQWdRMjlzYjNJNklHRmxMQW9nSUNBZ1EyOXNiM0pMWlhsbWNtRnRaVlJ5WVdOck9pQkNZU3dLSUNBZ0lFTnZiWEJ5WlhOelpXUlVaWGgwZFhKbE9pQjJZU3dLSUNBZ0lFTnZiWEJ5WlhOelpXUlVaWGgwZFhKbFRHOWhaR1Z5T2lCb2VTd0tJQ0FnSUVOdmJtVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ2NISXNDaUFnSUNCRGIyNWxSMlZ2YldWMGNuazZJSEJ5TEFvZ0lDQWdRM1ZpWlVOaGJXVnlZVG9nSkhNc0NpQWdJQ0JEZFdKbFVtVm1iR1ZqZEdsdmJrMWhjSEJwYm1jNklFSnBMQW9nSUNBZ1EzVmlaVkpsWm5KaFkzUnBiMjVOWVhCd2FXNW5PaUI2YVN3S0lDQWdJRU4xWW1WVVpYaDBkWEpsT2lCcmFTd0tJQ0FnSUVOMVltVlVaWGgwZFhKbFRHOWhaR1Z5T2lCR2FDd0tJQ0FnSUVOMVltVlZWbEpsWm14bFkzUnBiMjVOWVhCd2FXNW5PaUJRY2l3S0lDQWdJRU4xWW1WVlZsSmxabkpoWTNScGIyNU5ZWEJ3YVc1bk9pQlhjeXdLSUNBZ0lFTjFZbWxqUW1WNmFXVnlRM1Z5ZG1VNklHeHZMQW9nSUNBZ1EzVmlhV05DWlhwcFpYSkRkWEoyWlRNNklGTmhMQW9nSUNBZ1EzVmlhV05KYm5SbGNuQnZiR0Z1ZERvZ1VHZ3NDaUFnSUNCRGRXeHNSbUZqWlVKaFkyczZJSFJzTEFvZ0lDQWdRM1ZzYkVaaFkyVkdjbTl1ZERvZ1pIVXNDaUFnSUNCRGRXeHNSbUZqWlVaeWIyNTBRbUZqYXpvZ1Yza3NDaUFnSUNCRGRXeHNSbUZqWlU1dmJtVTZJSFYxTEFvZ0lDQWdRM1Z5ZG1VNklFTjBMQW9nSUNBZ1EzVnlkbVZRWVhSb09pQkJhQ3dLSUNBZ0lFTjFjM1J2YlVKc1pXNWthVzVuT2lCd2RTd0tJQ0FnSUVOMWMzUnZiVlJ2Ym1WTllYQndhVzVuT2lCUGRTd0tJQ0FnSUVONWJHbHVaR1Z5UW5WbVptVnlSMlZ2YldWMGNuazZJRXB1TEFvZ0lDQWdRM2xzYVc1a1pYSkhaVzl0WlhSeWVUb2dTbTRzQ2lBZ0lDQkRlV3hwYm1SeWFXTmhiRG9nUTNrc0NpQWdJQ0JFWVhSaFZHVjRkSFZ5WlRvZ2NXNHNDaUFnSUNCRVlYUmhWR1Y0ZEhWeVpUSkVRWEp5WVhrNklGRnpMQW9nSUNBZ1JHRjBZVlJsZUhSMWNtVXpSRG9nYldFc0NpQWdJQ0JFWVhSaFZHVjRkSFZ5WlV4dllXUmxjam9nVG1nc0NpQWdJQ0JFWVhSaFZYUnBiSE02SUd0NUxBb2dJQ0FnUkdWamNtVnRaVzUwVTNSbGJtTnBiRTl3T2lCdU1Dd0tJQ0FnSUVSbFkzSmxiV1Z1ZEZkeVlYQlRkR1Z1WTJsc1QzQTZJSEl3TEFvZ0lDQWdSR1ZtWVhWc2RFeHZZV1JwYm1kTllXNWhaMlZ5T2lCc2VTd0tJQ0FnSUVSbGNIUm9SbTl5YldGME9pQldiaXdLSUNBZ0lFUmxjSFJvVTNSbGJtTnBiRVp2Y20xaGREb2dUR2tzQ2lBZ0lDQkVaWEIwYUZSbGVIUjFjbVU2SUd0ekxBb2dJQ0FnUkdseVpXTjBhVzl1WVd4TWFXZG9kRG9nVjJFc0NpQWdJQ0JFYVhKbFkzUnBiMjVoYkV4cFoyaDBTR1ZzY0dWeU9pQkdlU3dLSUNBZ0lFUnBjMk55WlhSbFNXNTBaWEp3YjJ4aGJuUTZJRWxvTEFvZ0lDQWdSRzlrWldOaGFHVmtjbTl1UW5WbVptVnlSMlZ2YldWMGNuazZJRzF5TEFvZ0lDQWdSRzlrWldOaGFHVmtjbTl1UjJWdmJXVjBjbms2SUcxeUxBb2dJQ0FnUkc5MVlteGxVMmxrWlRvZ1Eya3NDaUFnSUNCRWMzUkJiSEJvWVVaaFkzUnZjam9nVFhVc0NpQWdJQ0JFYzNSRGIyeHZja1poWTNSdmNqb2dkM1VzQ2lBZ0lDQkVlVzVoYldsalFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCQ01Dd0tJQ0FnSUVSNWJtRnRhV05EYjNCNVZYTmhaMlU2SUhrd0xBb2dJQ0FnUkhsdVlXMXBZMFJ5WVhkVmMyRm5aVG9nZFhJc0NpQWdJQ0JFZVc1aGJXbGpVbVZoWkZWellXZGxPaUJ0TUN3S0lDQWdJRVZrWjJWelIyVnZiV1YwY25rNklGOWhMQW9nSUNBZ1JXUm5aWE5JWld4d1pYSTZJRmt3TEFvZ0lDQWdSV3hzYVhCelpVTjFjblpsT2lCVmNpd0tJQ0FnSUVWeGRXRnNSR1Z3ZEdnNklFeDFMQW9nSUNBZ1JYRjFZV3hUZEdWdVkybHNSblZ1WXpvZ2JEQXNDaUFnSUNCRmNYVnBjbVZqZEdGdVozVnNZWEpTWldac1pXTjBhVzl1VFdGd2NHbHVaem9nUkhNc0NpQWdJQ0JGY1hWcGNtVmpkR0Z1WjNWc1lYSlNaV1p5WVdOMGFXOXVUV0Z3Y0dsdVp6b2dSbk1zQ2lBZ0lDQkZkV3hsY2pvZ1dtNHNDaUFnSUNCRmRtVnVkRVJwYzNCaGRHTm9aWEk2SUVWdUxBb2dJQ0FnUlhoMGNuVmtaVUoxWm1abGNrZGxiMjFsZEhKNU9pQnNiaXdLSUNBZ0lFVjRkSEoxWkdWSFpXOXRaWFJ5ZVRvZ2JHNHNDaUFnSUNCR1lXTmxRMjlzYjNKek9pQlVNQ3dLSUNBZ0lFWnBiR1ZNYjJGa1pYSTZJRmwwTEFvZ0lDQWdSbXhoZEZOb1lXUnBibWM2SUd0akxBb2dJQ0FnUm14dllYUXhOa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dibWdzQ2lBZ0lDQkdiRzloZERNeVFYUjBjbWxpZFhSbE9pQlhNQ3dLSUNBZ0lFWnNiMkYwTXpKQ2RXWm1aWEpCZEhSeWFXSjFkR1U2SUdSbExBb2dJQ0FnUm14dllYUTJORUYwZEhKcFluVjBaVG9nY1RBc0NpQWdJQ0JHYkc5aGREWTBRblZtWm1WeVFYUjBjbWxpZFhSbE9pQnBhQ3dLSUNBZ0lFWnNiMkYwVkhsd1pUb2dibTRzQ2lBZ0lDQkdiMmM2SUVKeUxBb2dJQ0FnUm05blJYaHdNam9nVG5Jc0NpQWdJQ0JHYjI1ME9pQnZkaXdLSUNBZ0lFWnZiblJNYjJGa1pYSTZJSE4yTEFvZ0lDQWdSbkpoYldWaWRXWm1aWEpVWlhoMGRYSmxPaUJUYUN3S0lDQWdJRVp5YjI1MFUybGtaVG9nUVdrc0NpQWdJQ0JHY25WemRIVnRPaUJFY2l3S0lDQWdJRWRNUW5WbVptVnlRWFIwY21saWRYUmxPaUJSYUN3S0lDQWdJRWRNVTB3eE9pQmZNQ3dLSUNBZ0lFZE1VMHd6T2lCNGJDd0tJQ0FnSUVkeVpXRjBaWEpFWlhCMGFEb2dVSFVzQ2lBZ0lDQkhjbVZoZEdWeVJYRjFZV3hFWlhCMGFEb2dVblVzQ2lBZ0lDQkhjbVZoZEdWeVJYRjFZV3hUZEdWdVkybHNSblZ1WXpvZ1pEQXNDaUFnSUNCSGNtVmhkR1Z5VTNSbGJtTnBiRVoxYm1NNklHZ3dMQW9nSUNBZ1IzSnBaRWhsYkhCbGNqb2diblVzQ2lBZ0lDQkhjbTkxY0RvZ1NHNHNDaUFnSUNCSVlXeG1SbXh2WVhSVWVYQmxPaUJyYml3S0lDQWdJRWhsYldsemNHaGxjbVZNYVdkb2REb2dWV0VzQ2lBZ0lDQklaVzFwYzNCb1pYSmxUR2xuYUhSSVpXeHdaWEk2SUVsNUxBb2dJQ0FnU0dWdGFYTndhR1Z5WlV4cFoyaDBVSEp2WW1VNklFZG9MQW9nSUNBZ1NXTnZjMkZvWldSeWIyNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1gzSXNDaUFnSUNCSlkyOXpZV2hsWkhKdmJrZGxiMjFsZEhKNU9pQmZjaXdLSUNBZ0lFbHRZV2RsUW1sMGJXRndURzloWkdWeU9pQlBhQ3dLSUNBZ0lFbHRZV2RsVEc5aFpHVnlPaUJTY2l3S0lDQWdJRWx0WVdkbFZYUnBiSE02SUZsdUxBb2dJQ0FnU1cxdFpXUnBZWFJsVW1WdVpHVnlUMkpxWldOME9pQmhkaXdLSUNBZ0lFbHVZM0psYldWdWRGTjBaVzVqYVd4UGNEb2dkREFzQ2lBZ0lDQkpibU55WlcxbGJuUlhjbUZ3VTNSbGJtTnBiRTl3T2lCcE1Dd0tJQ0FnSUVsdWMzUmhibU5sWkVKMVptWmxja0YwZEhKcFluVjBaVG9nV0c0c0NpQWdJQ0JKYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVUb2dXV0VzQ2lBZ0lDQkpibk4wWVc1alpXUkpiblJsY214bFlYWmxaRUoxWm1abGNqb2dhbWdzQ2lBZ0lDQkpibk4wWVc1alpXUk5aWE5vT2lCNFlTd0tJQ0FnSUVsdWRERTJRWFIwY21saWRYUmxPaUJJTUN3S0lDQWdJRWx1ZERFMlFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCbGFDd0tJQ0FnSUVsdWRETXlRWFIwY21saWRYUmxPaUJITUN3S0lDQWdJRWx1ZERNeVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCMGFDd0tJQ0FnSUVsdWREaEJkSFJ5YVdKMWRHVTZJSG93TEFvZ0lDQWdTVzUwT0VKMVptWmxja0YwZEhKcFluVjBaVG9nYW1Nc0NpQWdJQ0JKYm5SVWVYQmxPaUJIZFN3S0lDQWdJRWx1ZEdWeWJHVmhkbVZrUW5WbVptVnlPaUFrYml3S0lDQWdJRWx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxPaUJUYml3S0lDQWdJRWx1ZEdWeWNHOXNZVzUwT2lCamJpd0tJQ0FnSUVsdWRHVnljRzlzWVhSbFJHbHpZM0psZEdVNklIcHpMQW9nSUNBZ1NXNTBaWEp3YjJ4aGRHVk1hVzVsWVhJNklGVnpMQW9nSUNBZ1NXNTBaWEp3YjJ4aGRHVlRiVzl2ZEdnNklIbHZMQW9nSUNBZ1NXNTJaWEowVTNSbGJtTnBiRTl3T2lCek1Dd0tJQ0FnSUVwVFQwNU1iMkZrWlhJNklHVjJMQW9nSUNBZ1MyVmxjRk4wWlc1amFXeFBjRG9nZG04c0NpQWdJQ0JMWlhsbWNtRnRaVlJ5WVdOck9pQjZkQ3dLSUNBZ0lFeFBSRG9nWW1nc0NpQWdJQ0JNWVhSb1pVSjFabVpsY2tkbGIyMWxkSEo1T2lCTmNpd0tJQ0FnSUV4aGRHaGxSMlZ2YldWMGNuazZJRTF5TEFvZ0lDQWdUR0Y1WlhKek9pQktjeXdLSUNBZ0lFeGxibk5HYkdGeVpUb2dibllzQ2lBZ0lDQk1aWE56UkdWd2RHZzZJRU4xTEFvZ0lDQWdUR1Z6YzBWeGRXRnNSR1Z3ZEdnNklHVmhMQW9nSUNBZ1RHVnpjMFZ4ZFdGc1UzUmxibU5wYkVaMWJtTTZJR013TEFvZ0lDQWdUR1Z6YzFOMFpXNWphV3hHZFc1ak9pQmhNQ3dLSUNBZ0lFeHBaMmgwT2lCQ2RDd0tJQ0FnSUV4cFoyaDBVSEp2WW1VNklFaHlMQW9nSUNBZ1RHbHVaVG9nYjI0c0NpQWdJQ0JNYVc1bE16b2dTMmdzQ2lBZ0lDQk1hVzVsUW1GemFXTk5ZWFJsY21saGJEb2dablFzQ2lBZ0lDQk1hVzVsUTNWeWRtVTZJRTl5TEFvZ0lDQWdUR2x1WlVOMWNuWmxNem9nUldnc0NpQWdJQ0JNYVc1bFJHRnphR1ZrVFdGMFpYSnBZV3c2SUVaaExBb2dJQ0FnVEdsdVpVeHZiM0E2SUhsaExBb2dJQ0FnVEdsdVpWQnBaV05sY3pvZ2R6QXNDaUFnSUNCTWFXNWxVMlZuYldWdWRITTZJSGQwTEFvZ0lDQWdUR2x1WlZOMGNtbHdPaUJpTUN3S0lDQWdJRXhwYm1WaGNrVnVZMjlrYVc1bk9pQk9kQ3dLSUNBZ0lFeHBibVZoY2tacGJIUmxjam9nZEhRc0NpQWdJQ0JNYVc1bFlYSkpiblJsY25CdmJHRnVkRG9nVG1Fc0NpQWdJQ0JNYVc1bFlYSk5hWEJOWVhCTWFXNWxZWEpHYVd4MFpYSTZJQ1I1TEFvZ0lDQWdUR2x1WldGeVRXbHdUV0Z3VG1WaGNtVnpkRVpwYkhSbGNqb2dXbmtzQ2lBZ0lDQk1hVzVsWVhKTmFYQnRZWEJNYVc1bFlYSkdhV3gwWlhJNklGVnBMQW9nSUNBZ1RHbHVaV0Z5VFdsd2JXRndUbVZoY21WemRFWnBiSFJsY2pvZ1YyTXNDaUFnSUNCTWFXNWxZWEpVYjI1bFRXRndjR2x1WnpvZ1RuVXNDaUFnSUNCTWIyRmtaWEk2SUdKMExBb2dJQ0FnVEc5aFpHVnlWWFJwYkhNNklFZHpMQW9nSUNBZ1RHOWhaR2x1WjAxaGJtRm5aWEk2SUhwaExBb2dJQ0FnVEc5dmNFOXVZMlU2SUZCa0xBb2dJQ0FnVEc5dmNGQnBibWRRYjI1bk9pQkVaQ3dLSUNBZ0lFeHZiM0JTWlhCbFlYUTZJRWxrTEFvZ0lDQWdUSFZ0YVc1aGJtTmxRV3h3YUdGR2IzSnRZWFE2SUZsMUxBb2dJQ0FnVEhWdGFXNWhibU5sUm05eWJXRjBPaUJLZFN3S0lDQWdJRTFQVlZORk9pQkhlU3dLSUNBZ0lFMWhkR1Z5YVdGc09pQmtkQ3dLSUNBZ0lFMWhkR1Z5YVdGc1RHOWhaR1Z5T2lCNmFDd0tJQ0FnSUUxaGRHZzZJRTB3TEFvZ0lDQWdUV0YwYUZWMGFXeHpPaUJOTUN3S0lDQWdJRTFoZEhKcGVETTZJR3gwTEFvZ0lDQWdUV0YwY21sNE5Eb2djR1VzQ2lBZ0lDQk5ZWGhGY1hWaGRHbHZiam9nYjJ3c0NpQWdJQ0JOWlhOb09pQnpkQ3dLSUNBZ0lFMWxjMmhDWVhOcFkwMWhkR1Z5YVdGc09pQm9iaXdLSUNBZ0lFMWxjMmhFWlhCMGFFMWhkR1Z5YVdGc09pQmxieXdLSUNBZ0lFMWxjMmhFYVhOMFlXNWpaVTFoZEdWeWFXRnNPaUIwYnl3S0lDQWdJRTFsYzJoR1lXTmxUV0YwWlhKcFlXdzZJRUV3TEFvZ0lDQWdUV1Z6YUV4aGJXSmxjblJOWVhSbGNtbGhiRG9nU1dFc0NpQWdJQ0JOWlhOb1RXRjBZMkZ3VFdGMFpYSnBZV3c2SUVSaExBb2dJQ0FnVFdWemFFNXZjbTFoYkUxaGRHVnlhV0ZzT2lCUVlTd0tJQ0FnSUUxbGMyaFFhRzl1WjAxaGRHVnlhV0ZzT2lCTVlTd0tJQ0FnSUUxbGMyaFFhSGx6YVdOaGJFMWhkR1Z5YVdGc09pQkRZU3dLSUNBZ0lFMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNPaUJ3Ynl3S0lDQWdJRTFsYzJoVWIyOXVUV0YwWlhKcFlXdzZJRkpoTEFvZ0lDQWdUV2x1UlhGMVlYUnBiMjQ2SUhOc0xBb2dJQ0FnVFdseWNtOXlaV1JTWlhCbFlYUlhjbUZ3Y0dsdVp6b2dRbk1zQ2lBZ0lDQk5hWGhQY0dWeVlYUnBiMjQ2SUVSMUxBb2dJQ0FnVFhWc2RHbE5ZWFJsY21saGJEb2dRekFzQ2lBZ0lDQk5kV3gwYVhCc2VVSnNaVzVrYVc1bk9pQnliQ3dLSUNBZ0lFMTFiSFJwY0d4NVQzQmxjbUYwYVc5dU9pQldjeXdLSUNBZ0lFNWxZWEpsYzNSR2FXeDBaWEk2SUhKMExBb2dJQ0FnVG1WaGNtVnpkRTFwY0UxaGNFeHBibVZoY2tacGJIUmxjam9nV1hrc0NpQWdJQ0JPWldGeVpYTjBUV2x3VFdGd1RtVmhjbVZ6ZEVacGJIUmxjam9nU25rc0NpQWdJQ0JPWldGeVpYTjBUV2x3YldGd1RHbHVaV0Z5Um1sc2RHVnlPaUJ1WVN3S0lDQWdJRTVsWVhKbGMzUk5hWEJ0WVhCT1pXRnlaWE4wUm1sc2RHVnlPaUIwWVN3S0lDQWdJRTVsZG1WeVJHVndkR2c2SUVWMUxBb2dJQ0FnVG1WMlpYSlRkR1Z1WTJsc1JuVnVZem9nYnpBc0NpQWdJQ0JPYjBKc1pXNWthVzVuT2lCMmJpd0tJQ0FnSUU1dlEyOXNiM0p6T2lCVE1Dd0tJQ0FnSUU1dlZHOXVaVTFoY0hCcGJtYzZJRjl1TEFvZ0lDQWdUbTl5YldGc1FXNXBiV0YwYVc5dVFteGxibVJOYjJSbE9pQjFZU3dLSUNBZ0lFNXZjbTFoYkVKc1pXNWthVzVuT2lCemNpd0tJQ0FnSUU1dmRFVnhkV0ZzUkdWd2RHZzZJRWwxTEFvZ0lDQWdUbTkwUlhGMVlXeFRkR1Z1WTJsc1JuVnVZem9nZFRBc0NpQWdJQ0JPZFcxaVpYSkxaWGxtY21GdFpWUnlZV05yT2lCQmNpd0tJQ0FnSUU5aWFtVmpkRE5FT2lCT1pTd0tJQ0FnSUU5aWFtVmpkRXh2WVdSbGNqb2dkWGtzQ2lBZ0lDQlBZbXBsWTNSVGNHRmpaVTV2Y20xaGJFMWhjRG9nZW1Rc0NpQWdJQ0JQWTNSaGFHVmtjbTl1UW5WbVptVnlSMlZ2YldWMGNuazZJRWxwTEFvZ0lDQWdUMk4wWVdobFpISnZia2RsYjIxbGRISjVPaUJKYVN3S0lDQWdJRTl1WlVaaFkzUnZjam9nZVhVc0NpQWdJQ0JQYm1WTmFXNTFjMFJ6ZEVGc2NHaGhSbUZqZEc5eU9pQmlkU3dLSUNBZ0lFOXVaVTFwYm5WelJITjBRMjlzYjNKR1lXTjBiM0k2SUZOMUxBb2dJQ0FnVDI1bFRXbHVkWE5UY21OQmJIQm9ZVVpoWTNSdmNqb2dWbU1zQ2lBZ0lDQlBibVZOYVc1MWMxTnlZME52Ykc5eVJtRmpkRzl5T2lCZmRTd0tJQ0FnSUU5eWRHaHZaM0poY0docFkwTmhiV1Z5WVRvZ1JuSXNDaUFnSUNCUVEwWlRhR0ZrYjNkTllYQTZJRWhqTEFvZ0lDQWdVRU5HVTI5bWRGTm9ZV1J2ZDAxaGNEb2dablVzQ2lBZ0lDQlFUVkpGVFVkbGJtVnlZWFJ2Y2pvZ1lXZ3NDaUFnSUNCUVlYSmhiV1YwY21salIyVnZiV1YwY25rNklHbDJMQW9nSUNBZ1VHRnlkR2xqYkdVNklGSXdMQW9nSUNBZ1VHRnlkR2xqYkdWQ1lYTnBZMDFoZEdWeWFXRnNPaUJFTUN3S0lDQWdJRkJoY25ScFkyeGxVM2x6ZEdWdE9pQlFNQ3dLSUNBZ0lGQmhjblJwWTJ4bFUzbHpkR1Z0VFdGMFpYSnBZV3c2SUVZd0xBb2dJQ0FnVUdGMGFEb2daM0lzQ2lBZ0lDQlFaWEp6Y0dWamRHbDJaVU5oYldWeVlUb2dkWFFzQ2lBZ0lDQlFiR0Z1WlRvZ1YzUXNDaUFnSUNCUWJHRnVaVUoxWm1abGNrZGxiMjFsZEhKNU9pQlFhU3dLSUNBZ0lGQnNZVzVsUjJWdmJXVjBjbms2SUZCcExBb2dJQ0FnVUd4aGJtVklaV3h3WlhJNklIcDVMQW9nSUNBZ1VHOXBiblJEYkc5MVpEb2dUREFzQ2lBZ0lDQlFiMmx1ZEVOc2IzVmtUV0YwWlhKcFlXdzZJRWt3TEFvZ0lDQWdVRzlwYm5STWFXZG9kRG9nUjJFc0NpQWdJQ0JRYjJsdWRFeHBaMmgwU0dWc2NHVnlPaUJTZVN3S0lDQWdJRkJ2YVc1MGN6b2dlbklzQ2lBZ0lDQlFiMmx1ZEhOTllYUmxjbWxoYkRvZ2FtNHNDaUFnSUNCUWIyeGhja2R5YVdSSVpXeHdaWEk2SUVSNUxBb2dJQ0FnVUc5c2VXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJoYml3S0lDQWdJRkJ2Ykhsb1pXUnliMjVIWlc5dFpYUnllVG9nWVc0c0NpQWdJQ0JRYjNOcGRHbHZibUZzUVhWa2FXODZJSGg1TEFvZ0lDQWdVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQnJaU3dLSUNBZ0lGQnliM0JsY25SNVRXbDRaWEk2SUZob0xBb2dJQ0FnVVhWaFpISmhkR2xqUW1WNmFXVnlRM1Z5ZG1VNklHTnZMQW9nSUNBZ1VYVmhaSEpoZEdsalFtVjZhV1Z5UTNWeWRtVXpPaUJvYnl3S0lDQWdJRkYxWVhSbGNtNXBiMjQ2SUdkMExBb2dJQ0FnVVhWaGRHVnlibWx2Ymt0bGVXWnlZVzFsVkhKaFkyczZJRmRwTEFvZ0lDQWdVWFZoZEdWeWJtbHZia3hwYm1WaGNrbHVkR1Z5Y0c5c1lXNTBPaUJFYUN3S0lDQWdJRkpGVmtsVFNVOU9PaUJqWVN3S0lDQWdJRkpIUWtGRVpYQjBhRkJoWTJ0cGJtYzZJRUprTEFvZ0lDQWdVa2RDUVVadmNtMWhkRG9nWTNRc0NpQWdJQ0JTUjBKQlNXNTBaV2RsY2tadmNtMWhkRG9nWldRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTVRCNE1UQmZSbTl5YldGME9pQm1aQ3dLSUNBZ0lGSkhRa0ZmUVZOVVExOHhNSGcxWDBadmNtMWhkRG9nYUdRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTVRCNE5sOUdiM0p0WVhRNklIVmtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6RXdlRGhmUm05eWJXRjBPaUJrWkN3S0lDQWdJRkpIUWtGZlFWTlVRMTh4TW5neE1GOUdiM0p0WVhRNklIQmtMQW9nSUNBZ1VrZENRVjlCVTFSRFh6RXllREV5WDBadmNtMWhkRG9nYldRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTkhnMFgwWnZjbTFoZERvZ2JtUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk5YZzBYMFp2Y20xaGREb2dhV1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZOWGcxWDBadmNtMWhkRG9nY21Rc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTm5nMVgwWnZjbTFoZERvZ2MyUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk5uZzJYMFp2Y20xaGREb2diMlFzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZPSGcxWDBadmNtMWhkRG9nWVdRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mT0hnMlgwWnZjbTFoZERvZ2JHUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk9IZzRYMFp2Y20xaGREb2dZMlFzQ2lBZ0lDQlNSMEpCWDBKUVZFTmZSbTl5YldGME9pQm5aQ3dLSUNBZ0lGSkhRa0ZmUlZSRE1sOUZRVU5mUm05eWJXRjBPaUJuYkN3S0lDQWdJRkpIUWtGZlVGWlNWRU5mTWtKUVVGWXhYMFp2Y20xaGREb2djR3dzQ2lBZ0lDQlNSMEpCWDFCV1VsUkRYelJDVUZCV01WOUdiM0p0WVhRNklHWnNMQW9nSUNBZ1VrZENRVjlUTTFSRFgwUllWREZmUm05eWJXRjBPaUJzYkN3S0lDQWdJRkpIUWtGZlV6TlVRMTlFV0ZRelgwWnZjbTFoZERvZ1kyd3NDaUFnSUNCU1IwSkJYMU16VkVOZlJGaFVOVjlHYjNKdFlYUTZJR2hzTEFvZ0lDQWdVa2RDUm05eWJXRjBPaUJIYml3S0lDQWdJRkpIUWtsdWRHVm5aWEpHYjNKdFlYUTZJRXQxTEFvZ0lDQWdVa2RDWDBWVVF6RmZSbTl5YldGME9pQjBaQ3dLSUNBZ0lGSkhRbDlGVkVNeVgwWnZjbTFoZERvZ2JXd3NDaUFnSUNCU1IwSmZVRlpTVkVOZk1rSlFVRll4WDBadmNtMWhkRG9nWkd3c0NpQWdJQ0JTUjBKZlVGWlNWRU5mTkVKUVVGWXhYMFp2Y20xaGREb2dkV3dzQ2lBZ0lDQlNSMEpmVXpOVVExOUVXRlF4WDBadmNtMWhkRG9nWVd3c0NpQWdJQ0JTUjBadmNtMWhkRG9nYW5Vc0NpQWdJQ0JTUjBsdWRHVm5aWEpHYjNKdFlYUTZJRkYxTEFvZ0lDQWdVbUYzVTJoaFpHVnlUV0YwWlhKcFlXdzZJRWRwTEFvZ0lDQWdVbUY1T2lCRGJpd0tJQ0FnSUZKaGVXTmhjM1JsY2pvZ1JYa3NDaUFnSUNCU1pXTjBRWEpsWVV4cFoyaDBPaUJZWVN3S0lDQWdJRkpsWkVadmNtMWhkRG9nV25Vc0NpQWdJQ0JTWldSSmJuUmxaMlZ5Um05eWJXRjBPaUFrZFN3S0lDQWdJRkpsYVc1b1lYSmtWRzl1WlUxaGNIQnBibWM2SUVKMUxBb2dJQ0FnVW1Wd1pXRjBWM0poY0hCcGJtYzZJRTV6TEFvZ0lDQWdVbVZ3YkdGalpWTjBaVzVqYVd4UGNEb2daVEFzQ2lBZ0lDQlNaWFpsY25ObFUzVmlkSEpoWTNSRmNYVmhkR2x2YmpvZ1ozVXNDaUFnSUNCU2FXNW5RblZtWm1WeVIyVnZiV1YwY25rNklHSnlMQW9nSUNBZ1VtbHVaMGRsYjIxbGRISjVPaUJpY2l3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYekV3ZURFd1gwWnZjbTFoZERvZ1EyUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4eE1IZzFYMFp2Y20xaGREb2dWR1FzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExOHhNSGcyWDBadmNtMWhkRG9nUldRc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTh4TUhnNFgwWnZjbTFoZERvZ1FXUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4eE1uZ3hNRjlHYjNKdFlYUTZJRXhrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZNVEo0TVRKZlJtOXliV0YwT2lCU1pDd0tJQ0FnSUZOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpSNE5GOUdiM0p0WVhRNklIaGtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk5YZzBYMFp2Y20xaGREb2dlV1FzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExODFlRFZmUm05eWJXRjBPaUIyWkN3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYelo0TlY5R2IzSnRZWFE2SUY5a0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTm5nMlgwWnZjbTFoZERvZ1RXUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4NGVEVmZSbTl5YldGME9pQmlaQ3dLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6aDRObDlHYjNKdFlYUTZJSGRrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZPSGc0WDBadmNtMWhkRG9nVTJRc0NpQWdJQ0JUWTJWdVpUb2dibThzQ2lBZ0lDQlRZMlZ1WlZWMGFXeHpPaUIwZGl3S0lDQWdJRk5vWVdSbGNrTm9kVzVyT2lCR1pTd0tJQ0FnSUZOb1lXUmxja3hwWWpvZ2NYUXNDaUFnSUNCVGFHRmtaWEpOWVhSbGNtbGhiRG9nYzI0c0NpQWdJQ0JUYUdGa2IzZE5ZWFJsY21saGJEb2dRV0VzQ2lBZ0lDQlRhR0Z3WlRvZ1dIUXNDaUFnSUNCVGFHRndaVUoxWm1abGNrZGxiMjFsZEhKNU9pQkVhU3dLSUNBZ0lGTm9ZWEJsUjJWdmJXVjBjbms2SUVScExBb2dJQ0FnVTJoaGNHVlFZWFJvT2lCUGVTd0tJQ0FnSUZOb1lYQmxWWFJwYkhNNklFcDBMQW9nSUNBZ1UyaHZjblJVZVhCbE9pQnJkU3dLSUNBZ0lGTnJaV3hsZEc5dU9pQmhieXdLSUNBZ0lGTnJaV3hsZEc5dVNHVnNjR1Z5T2lCbGRTd0tJQ0FnSUZOcmFXNXVaV1JOWlhOb09pQnpieXdLSUNBZ0lGTnRiMjkwYUZOb1lXUnBibWM2SUZoNUxBb2dJQ0FnVTNCb1pYSmxPaUJCYml3S0lDQWdJRk53YUdWeVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCR2FTd0tJQ0FnSUZOd2FHVnlaVWRsYjIxbGRISjVPaUJHYVN3S0lDQWdJRk53YUdWeWFXTmhiRG9nUVhrc0NpQWdJQ0JUY0dobGNtbGpZV3hJWVhKdGIyNXBZM016T2lCS1lTd0tJQ0FnSUZOd2JHbHVaVU4xY25abE9pQjFieXdLSUNBZ0lGTndiM1JNYVdkb2REb2dTR0VzQ2lBZ0lDQlRjRzkwVEdsbmFIUklaV3h3WlhJNklFeDVMQW9nSUNBZ1UzQnlhWFJsT2lCeWJ5d0tJQ0FnSUZOd2NtbDBaVTFoZEdWeWFXRnNPaUJwYnl3S0lDQWdJRk55WTBGc2NHaGhSbUZqZEc5eU9pQkhZeXdLSUNBZ0lGTnlZMEZzY0doaFUyRjBkWEpoZEdWR1lXTjBiM0k2SUZSMUxBb2dJQ0FnVTNKalEyOXNiM0pHWVdOMGIzSTZJSFoxTEFvZ0lDQWdVM1JoZEdsalEyOXdlVlZ6WVdkbE9pQjRNQ3dLSUNBZ0lGTjBZWFJwWTBSeVlYZFZjMkZuWlRvZ2FISXNDaUFnSUNCVGRHRjBhV05TWldGa1ZYTmhaMlU2SUhBd0xBb2dJQ0FnVTNSbGNtVnZRMkZ0WlhKaE9pQm1lU3dLSUNBZ0lGTjBjbVZoYlVOdmNIbFZjMkZuWlRvZ2RqQXNDaUFnSUNCVGRISmxZVzFFY21GM1ZYTmhaMlU2SUdZd0xBb2dJQ0FnVTNSeVpXRnRVbVZoWkZWellXZGxPaUJuTUN3S0lDQWdJRk4wY21sdVowdGxlV1p5WVcxbFZISmhZMnM2SUV0dUxBb2dJQ0FnVTNWaWRISmhZM1JGY1hWaGRHbHZiam9nYlhVc0NpQWdJQ0JUZFdKMGNtRmpkR2wyWlVKc1pXNWthVzVuT2lCcGJDd0tJQ0FnSUZSUFZVTklPaUJXZVN3S0lDQWdJRlJoYm1kbGJuUlRjR0ZqWlU1dmNtMWhiRTFoY0RvZ1NHa3NDaUFnSUNCVVpYUnlZV2hsWkhKdmJrSjFabVpsY2tkbGIyMWxkSEo1T2lCM2Npd0tJQ0FnSUZSbGRISmhhR1ZrY205dVIyVnZiV1YwY25rNklIZHlMQW9nSUNBZ1ZHVjRkRWRsYjIxbGRISjVPaUJ5ZGl3S0lDQWdJRlJsZUhSMWNtVTZJRzkwTEFvZ0lDQWdWR1Y0ZEhWeVpVeHZZV1JsY2pvZ1FtZ3NDaUFnSUNCVWIzSjFjMEoxWm1abGNrZGxiMjFsZEhKNU9pQlRjaXdLSUNBZ0lGUnZjblZ6UjJWdmJXVjBjbms2SUZOeUxBb2dJQ0FnVkc5eWRYTkxibTkwUW5WbVptVnlSMlZ2YldWMGNuazZJRlJ5TEFvZ0lDQWdWRzl5ZFhOTGJtOTBSMlZ2YldWMGNuazZJRlJ5TEFvZ0lDQWdWSEpwWVc1bmJHVTZJRzUwTEFvZ0lDQWdWSEpwWVc1bmJHVkdZVzVFY21GM1RXOWtaVG9nVVhrc0NpQWdJQ0JVY21saGJtZHNaVk4wY21sd1JISmhkMDF2WkdVNklHcDVMQW9nSUNBZ1ZISnBZVzVuYkdWelJISmhkMDF2WkdVNklFWmtMQW9nSUNBZ1ZIVmlaVUoxWm1abGNrZGxiMjFsZEhKNU9pQkZjaXdLSUNBZ0lGUjFZbVZIWlc5dFpYUnllVG9nUlhJc0NpQWdJQ0JWVmsxaGNIQnBibWM2SUdoaExBb2dJQ0FnVldsdWRERTJRWFIwY21saWRYUmxPaUJyTUN3S0lDQWdJRlZwYm5ReE5rSjFabVpsY2tGMGRISnBZblYwWlRvZ1dYTXNDaUFnSUNCVmFXNTBNekpCZEhSeWFXSjFkR1U2SUZZd0xBb2dJQ0FnVldsdWRETXlRblZtWm1WeVFYUjBjbWxpZFhSbE9pQmFjeXdLSUNBZ0lGVnBiblE0UVhSMGNtbGlkWFJsT2lCVk1Dd0tJQ0FnSUZWcGJuUTRRblZtWm1WeVFYUjBjbWxpZFhSbE9pQlJZeXdLSUNBZ0lGVnBiblE0UTJ4aGJYQmxaRUYwZEhKcFluVjBaVG9nVHpBc0NpQWdJQ0JWYVc1ME9FTnNZVzF3WldSQ2RXWm1aWEpCZEhSeWFXSjFkR1U2SUV0akxBb2dJQ0FnVlc1cFptOXliVG9nWjI4c0NpQWdJQ0JWYm1sbWIzSnRjMHhwWWpvZ2FXVXNDaUFnSUNCVmJtbG1iM0p0YzFWMGFXeHpPaUIxWml3S0lDQWdJRlZ1YzJsbmJtVmtRbmwwWlZSNWNHVTZJSEp1TEFvZ0lDQWdWVzV6YVdkdVpXUkpiblF5TkRoVWVYQmxPaUJVYVN3S0lDQWdJRlZ1YzJsbmJtVmtTVzUwVkhsd1pUb2dVSE1zQ2lBZ0lDQlZibk5wWjI1bFpGTm9iM0owTkRRME5GUjVjR1U2SUZaMUxBb2dJQ0FnVlc1emFXZHVaV1JUYUc5eWREVTFOVEZVZVhCbE9pQlhkU3dLSUNBZ0lGVnVjMmxuYm1Wa1UyaHZjblExTmpWVWVYQmxPaUJ4ZFN3S0lDQWdJRlZ1YzJsbmJtVmtVMmh2Y25SVWVYQmxPaUJqY2l3S0lDQWdJRlpUVFZOb1lXUnZkMDFoY0RvZ2FYSXNDaUFnSUNCV1pXTjBiM0l5T2lCWUxBb2dJQ0FnVm1WamRHOXlNem9nVFN3S0lDQWdJRlpsWTNSdmNqUTZJRlpsTEFvZ0lDQWdWbVZqZEc5eVMyVjVabkpoYldWVWNtRmphem9nUTNJc0NpQWdJQ0JXWlhKMFpYZzZJRTR3TEFvZ0lDQWdWbVZ5ZEdWNFEyOXNiM0p6T2lCRk1Dd0tJQ0FnSUZacFpHVnZWR1Y0ZEhWeVpUb2dkMmdzQ2lBZ0lDQlhaV0pIVERGU1pXNWtaWEpsY2pvZ1gyZ3NDaUFnSUNCWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUTZJR3B6TEFvZ0lDQWdWMlZpUjB4TmRXeDBhWEJzWlZKbGJtUmxjbFJoY21kbGRITTZJRnBqTEFvZ0lDQWdWMlZpUjB4TmRXeDBhWE5oYlhCc1pWSmxibVJsY2xSaGNtZGxkRG9nV0hNc0NpQWdJQ0JYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nUVhRc0NpQWdJQ0JYWldKSFRGSmxibVJsY2xSaGNtZGxkRU4xWW1VNklGRXdMQW9nSUNBZ1YyVmlSMHhTWlc1a1pYSmxjam9nY1dVc0NpQWdJQ0JYWldKSFRGVjBhV3h6T2lCRmVDd0tJQ0FnSUZkcGNtVm1jbUZ0WlVkbGIyMWxkSEo1T2lCRllTd0tJQ0FnSUZkcGNtVm1jbUZ0WlVobGJIQmxjam9nV2pBc0NpQWdJQ0JYY21Gd1FYSnZkVzVrUlc1a2FXNW5PaUJQY3l3S0lDQWdJRmhJVWt4dllXUmxjam9nSkRBc0NpQWdJQ0JhWlhKdlEzVnlkbUYwZFhKbFJXNWthVzVuT2lCTmFTd0tJQ0FnSUZwbGNtOUdZV04wYjNJNklIaDFMQW9nSUNBZ1dtVnliMU5zYjNCbFJXNWthVzVuT2lCaWFTd0tJQ0FnSUZwbGNtOVRkR1Z1WTJsc1QzQTZJRXQ1TEFvZ0lDQWdjMUpIUWtWdVkyOWthVzVuT2lCUGFRcDlPd3BtZFc1amRHbHZiaUJuWlhSWFpXSkhURVZ5Y205eVRXVnpjMkZuWlNncElIc0tJQ0FnSUhKbGRIVnliaUJuWlhSRmNuSnZjazFsYzNOaFoyVW9NU2s3Q24wS1puVnVZM1JwYjI0Z1oyVjBSWEp5YjNKTlpYTnpZV2RsS0habGNuTnBiMjRwSUhzS0lDQWdJSFpoY2lCdVlXMWxjeUE5SUhzS0lDQWdJQ0FnSUNBeE9pQWlWMlZpUjB3aUxBb2dJQ0FnSUNBZ0lESTZJQ0pYWldKSFRDQXlJZ29nSUNBZ2ZUc0tJQ0FnSUhaaGNpQmpiMjUwWlhoMGN5QTlJSHNLSUNBZ0lDQWdJQ0F4T2lCM2FXNWtiM2N1VjJWaVIweFNaVzVrWlhKcGJtZERiMjUwWlhoMExBb2dJQ0FnSUNBZ0lESTZJSGRwYm1SdmR5NVhaV0pIVERKU1pXNWtaWEpwYm1kRGIyNTBaWGgwQ2lBZ0lDQjlPd29nSUNBZ2RtRnlJRzFsYzNOaFoyVWdQU0FuV1c5MWNpQWtNQ0JrYjJWeklHNXZkQ0J6WldWdElIUnZJSE4xY0hCdmNuUWdQR0VnYUhKbFpqMGlhSFIwY0RvdkwydG9jbTl1YjNNdWIzSm5MM2RsWW1kc0wzZHBhMmt2UjJWMGRHbHVaMTloWDFkbFlrZE1YMGx0Y0d4bGJXVnVkR0YwYVc5dUlpQnpkSGxzWlQwaVkyOXNiM0k2SXpBd01DSStKREU4TDJFK0p6c0tJQ0FnSUhaaGNpQmxiR1Z0Wlc1MElEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENnaVpHbDJJaWs3Q2lBZ0lDQmxiR1Z0Wlc1MExtbGtJRDBnSW5kbFltZHNiV1Z6YzJGblpTSTdDaUFnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbVp2Ym5SR1lXMXBiSGtnUFNBaWJXOXViM053WVdObElqc0tJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVabTl1ZEZOcGVtVWdQU0FpTVROd2VDSTdDaUFnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbVp2Ym5SWFpXbG5hSFFnUFNBaWJtOXliV0ZzSWpzS0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdWRHVjRkRUZzYVdkdUlEMGdJbU5sYm5SbGNpSTdDaUFnSUNCbGJHVnRaVzUwTG5OMGVXeGxMbUpoWTJ0bmNtOTFibVFnUFNBaUkyWm1aaUk3Q2lBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG1OdmJHOXlJRDBnSWlNd01EQWlPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzV3WVdSa2FXNW5JRDBnSWpFdU5XVnRJanNLSUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1ZDJsa2RHZ2dQU0FpTkRBd2NIZ2lPd29nSUNBZ1pXeGxiV1Z1ZEM1emRIbHNaUzV0WVhKbmFXNGdQU0FpTldWdElHRjFkRzhnTUNJN0NpQWdJQ0JwWmlBb1kyOXVkR1Y0ZEhOYmRtVnljMmx2YmwwcElIc0tJQ0FnSUNBZ0lDQnRaWE56WVdkbElEMGdiV1Z6YzJGblpTNXlaWEJzWVdObEtDSWtNQ0lzSUNKbmNtRndhR2xqY3lCallYSmtJaWs3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHMWxjM05oWjJVZ1BTQnRaWE56WVdkbExuSmxjR3hoWTJVb0lpUXdJaXdnSW1KeWIzZHpaWElpS1RzS0lDQWdJSDBLSUNBZ0lHMWxjM05oWjJVZ1BTQnRaWE56WVdkbExuSmxjR3hoWTJVb0lpUXhJaXdnYm1GdFpYTmJkbVZ5YzJsdmJsMHBPd29nSUNBZ1pXeGxiV1Z1ZEM1cGJtNWxja2hVVFV3Z1BTQnRaWE56WVdkbE93b2dJQ0FnY21WMGRYSnVJR1ZzWlcxbGJuUTdDbjBLWTI5dWMzUWdjR2w0Wld4U1lYUnBieUE5SUhkcGJtUnZkeTVrWlhacFkyVlFhWGhsYkZKaGRHbHZJSHg4SURFdU1Ec0tablZ1WTNScGIyNGdaWFpsYm5ReWMyTmxibVZmY0dsNFpXd29jMk5sYm1Vc0lHVjJaVzUwS1NCN0NpQWdJQ0JqYjI1emRDQjdJR05oYm5aaGN5QWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOdmJuTjBJSEpsWTNRZ1BTQmpZVzUyWVhNdVoyVjBRbTkxYm1ScGJtZERiR2xsYm5SU1pXTjBLQ2s3Q2lBZ0lDQmpiMjV6ZENCNElEMGdLR1YyWlc1MExtTnNhV1Z1ZEZnZ0xTQnlaV04wTG14bFpuUXBJQ29nY0dsNFpXeFNZWFJwYnpzS0lDQWdJR052Ym5OMElIa2dQU0FvY21WamRDNW9aV2xuYUhRZ0xTQW9aWFpsYm5RdVkyeHBaVzUwV1NBdElISmxZM1F1ZEc5d0tTa2dLaUJ3YVhobGJGSmhkR2x2T3dvZ0lDQWdjbVYwZFhKdUlGc0tJQ0FnSUNBZ0lDQjRMQW9nSUNBZ0lDQWdJSGtLSUNBZ0lGMDdDbjBLWm5WdVkzUnBiMjRnU1dSbGJuUnBkSGswZURRb0tTQjdDaUFnSUNCeVpYUjFjbTRnYm1WM0lIQmxLQ2s3Q24wS1puVnVZM1JwYjI0Z2FXNWZjMk5sYm1Vb2MyTmxibVVzSUcxdmRYTmxYMlYyWlc1MEtTQjdDaUFnSUNCamIyNXpkQ0JiZUN3Z2VWMGdQU0JsZG1WdWRESnpZMlZ1WlY5d2FYaGxiQ2h6WTJWdVpTd2diVzkxYzJWZlpYWmxiblFwT3dvZ0lDQWdZMjl1YzNRZ1czTjRMQ0J6ZVN3Z2MzY3NJSE5vWFNBOUlITmpaVzVsTG5CcGVHVnNZWEpsWVM1MllXeDFaVHNLSUNBZ0lISmxkSFZ5YmlCNElENDlJSE40SUNZbUlIZ2dQQ0J6ZUNBcklITjNJQ1ltSUhrZ1BqMGdjM2tnSmlZZ2VTQThJSE41SUNzZ2MyZzdDbjBLWm5WdVkzUnBiMjRnWVhSMFlXTm9Yek5rWDJOaGJXVnlZU2hqWVc1MllYTXNJRzFoYTJsbFgyTmhiV1Z5WVN3Z1kyRnRNMlFzSUhOalpXNWxLU0I3Q2lBZ0lDQnBaaUFvWTJGdE0yUWdQVDA5SUhWdVpHVm1hVzVsWkNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUZ0M0xDQm9YU0E5SUcxaGEybGxYMk5oYldWeVlTNXlaWE52YkhWMGFXOXVMblpoYkhWbE93b2dJQ0FnWTI5dWMzUWdZMkZ0WlhKaElEMGdibVYzSUhWMEtHTmhiVE5rTG1admRpd2dkeUF2SUdnc0lHTmhiVE5rTG01bFlYSXNJR05oYlROa0xtWmhjaWs3Q2lBZ0lDQmpiMjV6ZENCalpXNTBaWElnUFNCdVpYY2dUU2d1TGk1allXMHpaQzVzYjI5cllYUXBPd29nSUNBZ1kyRnRaWEpoTG5Wd0lEMGdibVYzSUUwb0xpNHVZMkZ0TTJRdWRYQjJaV04wYjNJcE93b2dJQ0FnWTJGdFpYSmhMbkJ2YzJsMGFXOXVMbk5sZENndUxpNWpZVzB6WkM1bGVXVndiM05wZEdsdmJpazdDaUFnSUNCallXMWxjbUV1Ykc5dmEwRjBLR05sYm5SbGNpazdDaUFnSUNCbWRXNWpkR2x2YmlCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ1kyRnRaWEpoTG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lDQWdJQ0JqWVcxbGNtRXVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29LVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQjJhV1YzSUQwZ1kyRnRaWEpoTG0xaGRISnBlRmR2Y214a1NXNTJaWEp6WlRzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3Y205cVpXTjBhVzl1SUQwZ1kyRnRaWEpoTG5CeWIycGxZM1JwYjI1TllYUnlhWGc3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXM2RwWkhSb0xDQm9aV2xuYUhSZElEMGdiV0ZyYVdWZlkyRnRaWEpoTG5KbGMyOXNkWFJwYjI0dWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXM2dzSUhrc0lIcGRJRDBnWTJGdFpYSmhMbkJ2YzJsMGFXOXVPd29nSUNBZ0lDQWdJRzFoYTJsbFgyTmhiV1Z5WVM1MWNHUmhkR1ZmYldGMGNtbGpaWE1vZG1sbGR5NWxiR1Z0Wlc1MGN5d2djSEp2YW1WamRHbHZiaTVsYkdWdFpXNTBjeXdnV3dvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoMENpQWdJQ0FnSUNBZ1hTd2dXd29nSUNBZ0lDQWdJQ0FnSUNCNExBb2dJQ0FnSUNBZ0lDQWdJQ0I1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjZDaUFnSUNBZ0lDQWdYU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaFpHUk5iM1Z6WlVoaGJtUnNaWElvWkc5dFQySnFaV04wTENCa2NtRm5MQ0I2YjI5dFNXNHNJSHB2YjIxUGRYUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2MzUmhjblJFY21GbldDQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2JHVjBJSE4wWVhKMFJISmhaMWtnUFNCdWRXeHNPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRzF2ZFhObFYyaGxaV3hJWVc1a2JHVnlLR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaU0E5SUhkcGJtUnZkeTVsZG1WdWRDQjhmQ0JsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdsdVgzTmpaVzVsS0hOalpXNWxMQ0JsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1JsYkhSaElEMGdUV0YwYUM1emFXZHVLR1V1WkdWc2RHRlpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1JsYkhSaElEMDlJQzB4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNmIyOXRUM1YwS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWkdWc2RHRWdQVDBnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VtOXZiVWx1S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1pTNXdjbVYyWlc1MFJHVm1ZWFZzZENncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnRiM1Z6WlVSdmQyNUlZVzVrYkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZwYmw5elkyVnVaU2h6WTJWdVpTd2daU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWRFUnlZV2RZSUQwZ1pTNWpiR2xsYm5SWU93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWRFUnlZV2RaSUQwZ1pTNWpiR2xsYm5SWk93b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUcxdmRYTmxUVzkyWlVoaGJtUnNaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXbHVYM05qWlc1bEtITmpaVzVsTENCbEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZEdGeWRFUnlZV2RZSUQwOVBTQnVkV3hzSUh4OElITjBZWEowUkhKaFoxa2dQVDA5SUc1MWJHd3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHUnlZV2NwSUdSeVlXY29aUzVqYkdsbGJuUllJQzBnYzNSaGNuUkVjbUZuV0N3Z1pTNWpiR2xsYm5SWklDMGdjM1JoY25SRWNtRm5XU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjBZWEowUkhKaFoxZ2dQU0JsTG1Oc2FXVnVkRmc3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjBZWEowUkhKaFoxa2dQU0JsTG1Oc2FXVnVkRms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiVzkxYzJWVmNFaGhibVJzWlhJb1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV2x1WDNOalpXNWxLSE5qWlc1bExDQmxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzF2ZFhObFRXOTJaVWhoYm1Sc1pYSXVZMkZzYkNoMGFHbHpMQ0JsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjM1JoY25SRWNtRm5XQ0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdJQ0FnSUhOMFlYSjBSSEpoWjFrZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1J2YlU5aWFtVmpkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0ozYUdWbGJDSXNJRzF2ZFhObFYyaGxaV3hJWVc1a2JHVnlLVHNLSUNBZ0lDQWdJQ0JrYjIxUFltcGxZM1F1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpYlc5MWMyVmtiM2R1SWl3Z2JXOTFjMlZFYjNkdVNHRnVaR3hsY2lrN0NpQWdJQ0FnSUNBZ1pHOXRUMkpxWldOMExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0ltMXZkWE5sYlc5MlpTSXNJRzF2ZFhObFRXOTJaVWhoYm1Sc1pYSXBPd29nSUNBZ0lDQWdJR1J2YlU5aWFtVmpkQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpYVndJaXdnYlc5MWMyVlZjRWhoYm1Sc1pYSXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWkhKaFp5aGtaV3gwWVZnc0lHUmxiSFJoV1NrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhKaFpGQmxjbEJwZUdWc0lEMGdUV0YwYUM1UVNTQXZJRFExTURzS0lDQWdJQ0FnSUNCamIyNXpkQ0JrWld4MFlWQm9hU0E5SUhKaFpGQmxjbEJwZUdWc0lDb2daR1ZzZEdGWU93b2dJQ0FnSUNBZ0lHTnZibk4wSUdSbGJIUmhWR2hsZEdFZ1BTQnlZV1JRWlhKUWFYaGxiQ0FxSUdSbGJIUmhXVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQndiM01nUFNCallXMWxjbUV1Y0c5emFYUnBiMjR1YzNWaUtHTmxiblJsY2lrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnY21Ga2FYVnpJRDBnY0c5ekxteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lHeGxkQ0IwYUdWMFlTQTlJRTFoZEdndVlXTnZjeWh3YjNNdWVpQXZJSEpoWkdsMWN5azdDaUFnSUNBZ0lDQWdiR1YwSUhCb2FTQTlJRTFoZEdndVlYUmhiaklvY0c5ekxua3NJSEJ2Y3k1NEtUc0tJQ0FnSUNBZ0lDQjBhR1YwWVNBOUlFMWhkR2d1YldsdUtFMWhkR2d1YldGNEtIUm9aWFJoSUMwZ1pHVnNkR0ZVYUdWMFlTd2dNQ2tzSUUxaGRHZ3VVRWtwT3dvZ0lDQWdJQ0FnSUhCb2FTQXRQU0JrWld4MFlWQm9hVHNLSUNBZ0lDQWdJQ0J3YjNNdWVDQTlJSEpoWkdsMWN5QXFJRTFoZEdndWMybHVLSFJvWlhSaEtTQXFJRTFoZEdndVkyOXpLSEJvYVNrN0NpQWdJQ0FnSUNBZ2NHOXpMbmtnUFNCeVlXUnBkWE1nS2lCTllYUm9Mbk5wYmloMGFHVjBZU2tnS2lCTllYUm9Mbk5wYmlod2FHa3BPd29nSUNBZ0lDQWdJSEJ2Y3k1NklEMGdjbUZrYVhWeklDb2dUV0YwYUM1amIzTW9kR2hsZEdFcE93b2dJQ0FnSUNBZ0lHTmhiV1Z5WVM1d2IzTnBkR2x2Ymk1aFpHUW9ZMlZ1ZEdWeUtUc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWJHOXZhMEYwS0dObGJuUmxjaWs3Q2lBZ0lDQWdJQ0FnZFhCa1lYUmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNmIyOXRTVzRvS1NCN0NpQWdJQ0FnSUNBZ1kyRnRaWEpoTG5CdmMybDBhVzl1TG5OMVlpaGpaVzUwWlhJcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0RBdU9Ta3VZV1JrS0dObGJuUmxjaWs3Q2lBZ0lDQWdJQ0FnZFhCa1lYUmxLQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCNmIyOXRUM1YwS0NrZ2V3b2dJQ0FnSUNBZ0lHTmhiV1Z5WVM1d2IzTnBkR2x2Ymk1emRXSW9ZMlZ1ZEdWeUtTNXRkV3gwYVhCc2VWTmpZV3hoY2lneExqRXBMbUZrWkNoalpXNTBaWElwT3dvZ0lDQWdJQ0FnSUhWd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ1lXUmtUVzkxYzJWSVlXNWtiR1Z5S0dOaGJuWmhjeXdnWkhKaFp5d2dlbTl2YlVsdUxDQjZiMjl0VDNWMEtUc0tmUXBtZFc1amRHbHZiaUJ0ZFd3b1lTd2dZaWtnZXdvZ0lDQWdjbVYwZFhKdUlHSXVZMnh2Ym1Vb0tTNXRkV3gwYVhCc2VTaGhLVHNLZlFwbWRXNWpkR2x2YmlCdmNuUm9iMmR5WVhCb2FXTndjbTlxWldOMGFXOXVLR3hsWm5Rc0lISnBaMmgwTENCaWIzUjBiMjBzSUhSdmNDd2dlbTVsWVhJc0lIcG1ZWElwSUhzS0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdNaUF2SUNoeWFXZG9kQ0F0SUd4bFpuUXBMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNaUF2SUNoMGIzQWdMU0JpYjNSMGIyMHBMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdMVElnTHlBb2VtWmhjaUF0SUhwdVpXRnlLU3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUMwb2NtbG5hSFFnS3lCc1pXWjBLU0F2SUNoeWFXZG9kQ0F0SUd4bFpuUXBMQW9nSUNBZ0lDQWdJQzBvZEc5d0lDc2dZbTkwZEc5dEtTQXZJQ2gwYjNBZ0xTQmliM1IwYjIwcExBb2dJQ0FnSUNBZ0lDMG9lbVpoY2lBcklIcHVaV0Z5S1NBdklDaDZabUZ5SUMwZ2VtNWxZWElwTEFvZ0lDQWdJQ0FnSURFS0lDQWdJRjA3Q24wS1puVnVZM1JwYjI0Z2NHbDRaV3hmYzNCaFkyVmZhVzUyWlhKelpTaDNMQ0JvTENCdVpXRnlLU0I3Q2lBZ0lDQnlaWFIxY200Z1d3b2dJQ0FnSUNBZ0lEQXVOU0FxSUhjc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xqVWdLaUJvTEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnYm1WaGNpd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREF1TlNBcUlIY3NDaUFnSUNBZ0lDQWdNQzQxSUNvZ2FDd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREVLSUNBZ0lGMDdDbjBLWm5WdVkzUnBiMjRnY21Wc1lYUnBkbVZmYzNCaFkyVW9LU0I3Q2lBZ0lDQmpiMjV6ZENCeVpXeGhkR2wyWlNBOUlFbGtaVzUwYVhSNU5IZzBLQ2s3Q2lBZ0lDQnlaV3hoZEdsMlpTNW1jbTl0UVhKeVlYa29Xd29nSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Rb2dJQ0FnWFNrN0NpQWdJQ0J5WlhSMWNtNGdjbVZzWVhScGRtVTdDbjBLWTJ4aGMzTWdUV0ZyYVdWRFlXMWxjbUVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblpwWlhjZ1BTQnVaWGNnWjI4b1NXUmxiblJwZEhrMGVEUW9LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdjbTlxWldOMGFXOXVJRDBnYm1WM0lHZHZLRWxrWlc1MGFYUjVOSGcwS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0hKdmFtVmpkR2x2Ym5acFpYY2dQU0J1WlhjZ1oyOG9TV1JsYm5ScGRIazBlRFFvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3YVhobGJGOXpjR0ZqWlNBOUlHNWxkeUJuYnloSlpHVnVkR2wwZVRSNE5DZ3BLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnBlR1ZzWDNOd1lXTmxYMmx1ZG1WeWMyVWdQU0J1WlhjZ1oyOG9TV1JsYm5ScGRIazBlRFFvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205cVpXTjBhVzl1ZG1sbGQxOXBiblpsY25ObElEMGdibVYzSUdkdktFbGtaVzUwYVhSNU5IZzBLQ2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZzWVhScGRtVmZjM0JoWTJVZ1BTQnVaWGNnWjI4b2NtVnNZWFJwZG1WZmMzQmhZMlVvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5Wld4aGRHbDJaVjlwYm5abGNuTmxJRDBnYm1WM0lHZHZLSEpsYkdGMGFYWmxYM053WVdObEtDa3VhVzUyWlhKMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdVkyeHBjRjl6Y0dGalpTQTlJRzVsZHlCbmJ5aEpaR1Z1ZEdsMGVUUjROQ2dwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5c2RYUnBiMjRnUFNCdVpYY2daMjhvYm1WM0lGZ29LU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWxlV1Z3YjNOcGRHbHZiaUE5SUc1bGR5Qm5ieWh1WlhjZ1RTZ3BLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnlaWEJ5YjJwbFkzUnBiMjV6SUQwZ2UzMDdDaUFnSUNCOUNpQWdJQ0JqWVd4amRXeGhkR1ZmYldGMGNtbGpaWE1vS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnVzNjc0lHaGRJRDBnZEdocGN5NXlaWE52YkhWMGFXOXVMblpoYkhWbE93b2dJQ0FnSUNBZ0lHTnZibk4wSUc1bFlYSmpiR2x3SUQwZ0xURXdYekF3TURzS0lDQWdJQ0FnSUNCMGFHbHpMbkJwZUdWc1gzTndZV05sTG5aaGJIVmxMbVp5YjIxQmNuSmhlU2h2Y25Sb2IyZHlZWEJvYVdOd2NtOXFaV04wYVc5dUtEQXNJSGNzSURBc0lHZ3NJRzVsWVhKamJHbHdMQ0F4TUY4d01EQXBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnBlR1ZzWDNOd1lXTmxYMmx1ZG1WeWMyVXVkbUZzZFdVdVpuSnZiVUZ5Y21GNUtIQnBlR1ZzWDNOd1lXTmxYMmx1ZG1WeWMyVW9keXdnYUN3Z2JtVmhjbU5zYVhBcEtUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXFYM1pwWlhjZ1BTQnRkV3dvZEdocGN5NTJhV1YzTG5aaGJIVmxMQ0IwYUdsekxuQnliMnBsWTNScGIyNHVkbUZzZFdVcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y0hKdmFtVmpkR2x2Ym5acFpYY3VkbUZzZFdVZ1BTQndjbTlxWDNacFpYYzdDaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXFaV04wYVc5dWRtbGxkMTlwYm5abGNuTmxMblpoYkhWbElEMGdjSEp2YWw5MmFXVjNMbU5zYjI1bEtDa3VhVzUyWlhKMEtDazdDaUFnSUNBZ0lDQWdUMkpxWldOMExtdGxlWE1vZEdocGN5NXdjbVZ3Y205cVpXTjBhVzl1Y3lrdVptOXlSV0ZqYUNnb2EyVjVLVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCYmMzQmhZMlVzSUcxaGNtdGxjbk53WVdObFhTQTlJR3RsZVM1emNHeHBkQ2dpTENJcE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuQnlaWEJ5YjJwbFkzUnBiMjV6VzJ0bGVWMHVkbUZzZFdVZ1BTQjBhR2x6TG1OaGJHTjFiR0YwWlY5d2NtVndjbTlxWldOMGFXOXVYMjFoZEhKcGVDaHpjR0ZqWlN3Z2JXRnlhMlZ5YzNCaFkyVXBPd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsWDIxaGRISnBZMlZ6S0hacFpYY3NJSEJ5YjJwbFkzUnBiMjRzSUhKbGMyOXNkWFJwYjI0c0lHVjVaWEJ2Y3lrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZG1sbGR5NTJZV3gxWlM1bWNtOXRRWEp5WVhrb2RtbGxkeWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdjbTlxWldOMGFXOXVMblpoYkhWbExtWnliMjFCY25KaGVTaHdjbTlxWldOMGFXOXVLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuSmxjMjlzZFhScGIyNHVkbUZzZFdVdVpuSnZiVUZ5Y21GNUtISmxjMjlzZFhScGIyNHBPd29nSUNBZ0lDQWdJSFJvYVhNdVpYbGxjRzl6YVhScGIyNHVkbUZzZFdVdVpuSnZiVUZ5Y21GNUtHVjVaWEJ2Y3lrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqWVd4amRXeGhkR1ZmYldGMGNtbGpaWE1vS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQjlDaUFnSUNCamJHbHdYM1J2WDNOd1lXTmxLSE53WVdObEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hOd1lXTmxJRDA5UFNBaVpHRjBZU0lwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y0hKdmFtVmpkR2x2Ym5acFpYZGZhVzUyWlhKelpTNTJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tITndZV05sSUQwOVBTQWljR2w0Wld3aUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQnBlR1ZzWDNOd1lXTmxYMmx1ZG1WeWMyVXVkbUZzZFdVN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHpjR0ZqWlNBOVBUMGdJbkpsYkdGMGFYWmxJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5Wld4aGRHbDJaVjlwYm5abGNuTmxMblpoYkhWbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9jM0JoWTJVZ1BUMDlJQ0pqYkdsd0lpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiR2x3WDNOd1lXTmxMblpoYkhWbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGdVM0JoWTJVZ0pIdHpjR0ZqWlgwZ2JtOTBJSEpsWTI5bmJtbDZaV1JnS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnpjR0ZqWlY5MGIxOWpiR2x3S0hOd1lXTmxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tITndZV05sSUQwOVBTQWlaR0YwWVNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGN1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h6Y0dGalpTQTlQVDBnSW5CcGVHVnNJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3YVhobGJGOXpjR0ZqWlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hOd1lXTmxJRDA5UFNBaWNtVnNZWFJwZG1VaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmxiR0YwYVhabFgzTndZV05sTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYzNCaFkyVWdQVDA5SUNKamJHbHdJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYkdsd1gzTndZV05sTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWhnVTNCaFkyVWdKSHR6Y0dGalpYMGdibTkwSUhKbFkyOW5ibWw2WldSZ0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JqWVd4amRXeGhkR1ZmY0hKbGNISnZhbVZqZEdsdmJsOXRZWFJ5YVhnb2MzQmhZMlVzSUcxaGNtdGxjbk53WVdObEtTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1kzQWdQU0IwYUdsekxtTnNhWEJmZEc5ZmMzQmhZMlVvYldGeWEyVnljM0JoWTJVcE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhOaklEMGdkR2hwY3k1emNHRmpaVjkwYjE5amJHbHdLSE53WVdObEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JYVnNLSE5qTENCamNDazdDaUFnSUNCOUNpQWdJQ0J3Y21Wd2NtOXFaV04wYVc5dVgyMWhkSEpwZUNoemNHRmpaU3dnYldGeWEyVnljM0JoWTJVcElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCclpYa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lITndZV05sTEFvZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpyWlhKemNHRmpaUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdiV0YwY21sNFgzVnVhV1p2Y20wZ1BTQjBhR2x6TG5CeVpYQnliMnBsWTNScGIyNXpXMnRsZVYwN0NpQWdJQ0FnSUNBZ2FXWWdLRzFoZEhKcGVGOTFibWxtYjNKdEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0WVhSeWFYaGZkVzVwWm05eWJUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnRZWFJ5YVhnZ1BTQjBhR2x6TG1OaGJHTjFiR0YwWlY5d2NtVndjbTlxWldOMGFXOXVYMjFoZEhKcGVDaHpjR0ZqWlN3Z2JXRnlhMlZ5YzNCaFkyVXBPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0IxYm1sbWIzSnRJRDBnYm1WM0lHZHZLRzFoZEhKcGVDazdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjSEpsY0hKdmFtVmpkR2x2Ym5OYmEyVjVYU0E5SUhWdWFXWnZjbTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMWJtbG1iM0p0T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlFwamIyNXpkQ0J6WTJWdVpWOWpZV05vWlNBOUlIdDlPd3BqYjI1emRDQndiRzkwWDJOaFkyaGxJRDBnZTMwN0NtTnZibk4wSUZSRldGUlZVa1ZmUVZSTVFWTWdQU0JiQ2lBZ0lDQjFibVJsWm1sdVpXUUtYVHNLWm5WdVkzUnBiMjRnWVdSa1gzTmpaVzVsS0hOalpXNWxYMmxrTENCMGFISmxaVjl6WTJWdVpTa2dld29nSUNBZ2MyTmxibVZmWTJGamFHVmJjMk5sYm1WZmFXUmRJRDBnZEdoeVpXVmZjMk5sYm1VN0NuMEtablZ1WTNScGIyNGdabWx1WkY5elkyVnVaU2h6WTJWdVpWOXBaQ2tnZXdvZ0lDQWdjbVYwZFhKdUlITmpaVzVsWDJOaFkyaGxXM05qWlc1bFgybGtYVHNLZlFwbWRXNWpkR2x2YmlCa1pXeGxkR1ZmYzJObGJtVW9jMk5sYm1WZmFXUXBJSHNLSUNBZ0lHTnZibk4wSUhOalpXNWxJRDBnYzJObGJtVmZZMkZqYUdWYmMyTmxibVZmYVdSZE93b2dJQ0FnYVdZZ0tDRnpZMlZ1WlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJSDBLSUNBZ0lIZG9hV3hsS0hOalpXNWxMbU5vYVd4a2NtVnVMbXhsYm1kMGFDQStJREFwZXdvZ0lDQWdJQ0FnSUhOalpXNWxMbkpsYlc5MlpTaHpZMlZ1WlM1amFHbHNaSEpsYmxzd1hTazdDaUFnSUNCOUNpQWdJQ0JrWld4bGRHVWdjMk5sYm1WZlkyRmphR1ZiYzJObGJtVmZhV1JkT3dwOUNtWjFibU4wYVc5dUlHWnBibVJmY0d4dmRITW9jR3h2ZEY5MWRXbGtjeWtnZXdvZ0lDQWdZMjl1YzNRZ2NHeHZkSE1nUFNCYlhUc0tJQ0FnSUhCc2IzUmZkWFZwWkhNdVptOXlSV0ZqYUNnb2FXUXBQVDU3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdjR3h2ZENBOUlIQnNiM1JmWTJGamFHVmJhV1JkT3dvZ0lDQWdJQ0FnSUdsbUlDaHdiRzkwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEJzYjNSekxuQjFjMmdvY0d4dmRDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTazdDaUFnSUNCeVpYUjFjbTRnY0d4dmRITTdDbjBLWm5WdVkzUnBiMjRnWkdWc1pYUmxYM05qWlc1bGN5aHpZMlZ1WlY5MWRXbGtjeXdnY0d4dmRGOTFkV2xrY3lrZ2V3b2dJQ0FnY0d4dmRGOTFkV2xrY3k1bWIzSkZZV05vS0Nod2JHOTBYMmxrS1QwK2V3b2dJQ0FnSUNBZ0lHUmxiR1YwWlNCd2JHOTBYMk5oWTJobFczQnNiM1JmYVdSZE93b2dJQ0FnZlNrN0NpQWdJQ0J6WTJWdVpWOTFkV2xrY3k1bWIzSkZZV05vS0NoelkyVnVaVjlwWkNrOVBuc0tJQ0FnSUNBZ0lDQmtaV3hsZEdWZmMyTmxibVVvYzJObGJtVmZhV1FwT3dvZ0lDQWdmU2s3Q24wS1puVnVZM1JwYjI0Z2FXNXpaWEowWDNCc2IzUW9jMk5sYm1WZmFXUXNJSEJzYjNSZlpHRjBZU2tnZXdvZ0lDQWdZMjl1YzNRZ2MyTmxibVVnUFNCbWFXNWtYM05qWlc1bEtITmpaVzVsWDJsa0tUc0tJQ0FnSUhCc2IzUmZaR0YwWVM1bWIzSkZZV05vS0Nod2JHOTBLVDArZXdvZ0lDQWdJQ0FnSUdGa1pGOXdiRzkwS0hOalpXNWxMQ0J3Ykc5MEtUc0tJQ0FnSUgwcE93cDlDbVoxYm1OMGFXOXVJR1JsYkdWMFpWOXdiRzkwY3loelkyVnVaVjlwWkN3Z2NHeHZkRjkxZFdsa2N5a2dld29nSUNBZ1kyOXVjMjlzWlM1c2IyY29ZR1JsYkdWMGFXNW5JSEJzYjNSeklUb2dKSHR3Ykc5MFgzVjFhV1J6ZldBcE93b2dJQ0FnWTI5dWMzUWdjMk5sYm1VZ1BTQm1hVzVrWDNOalpXNWxLSE5qWlc1bFgybGtLVHNLSUNBZ0lHTnZibk4wSUhCc2IzUnpJRDBnWm1sdVpGOXdiRzkwY3lod2JHOTBYM1YxYVdSektUc0tJQ0FnSUhCc2IzUnpMbVp2Y2tWaFkyZ29LSEFwUFQ1N0NpQWdJQ0FnSUNBZ2MyTmxibVV1Y21WdGIzWmxLSEFwT3dvZ0lDQWdJQ0FnSUdSbGJHVjBaU0J3Ykc5MFgyTmhZMmhsVzNCZE93b2dJQ0FnZlNrN0NuMEtablZ1WTNScGIyNGdZMjl1ZG1WeWRGOTBaWGgwZFhKbEtHUmhkR0VwSUhzS0lDQWdJR052Ym5OMElIUmxlQ0E5SUdOeVpXRjBaVjkwWlhoMGRYSmxLR1JoZEdFcE93b2dJQ0FnZEdWNExtNWxaV1J6VlhCa1lYUmxJRDBnZEhKMVpUc0tJQ0FnSUhSbGVDNXRhVzVHYVd4MFpYSWdQU0J0YjJSYlpHRjBZUzV0YVc1R2FXeDBaWEpkT3dvZ0lDQWdkR1Y0TG0xaFowWnBiSFJsY2lBOUlHMXZaRnRrWVhSaExtMWhaMFpwYkhSbGNsMDdDaUFnSUNCMFpYZ3VZVzVwYzI5MGNtOXdlU0E5SUdSaGRHRXVZVzVwYzI5MGNtOXdlVHNLSUNBZ0lIUmxlQzUzY21Gd1V5QTlJRzF2WkZ0a1lYUmhMbmR5WVhCVFhUc0tJQ0FnSUdsbUlDaGtZWFJoTG5OcGVtVXViR1Z1WjNSb0lENGdNU2tnZXdvZ0lDQWdJQ0FnSUhSbGVDNTNjbUZ3VkNBOUlHMXZaRnRrWVhSaExuZHlZWEJVWFRzS0lDQWdJSDBLSUNBZ0lHbG1JQ2hrWVhSaExuTnBlbVV1YkdWdVozUm9JRDRnTWlrZ2V3b2dJQ0FnSUNBZ0lIUmxlQzUzY21Gd1VpQTlJRzF2WkZ0a1lYUmhMbmR5WVhCU1hUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjBaWGc3Q24wS1puVnVZM1JwYjI0Z2FYTmZkR2h5WldWZlptbDRaV1JmWVhKeVlYa29kbUZzZFdVcElIc0tJQ0FnSUhKbGRIVnliaUIyWVd4MVpTQnBibk4wWVc1alpXOW1JRzF2WkM1V1pXTjBiM0l5SUh4OElIWmhiSFZsSUdsdWMzUmhibU5sYjJZZ2JXOWtMbFpsWTNSdmNqTWdmSHdnZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJ0YjJRdVZtVmpkRzl5TkNCOGZDQjJZV3gxWlNCcGJuTjBZVzVqWlc5bUlHMXZaQzVOWVhSeWFYZzBPd3A5Q21aMWJtTjBhVzl1SUhSdlgzVnVhV1p2Y20wb1pHRjBZU2tnZXdvZ0lDQWdhV1lnS0dSaGRHRXVkSGx3WlNBaFBUMGdkVzVrWldacGJtVmtLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tHUmhkR0V1ZEhsd1pTQTlQU0FpVTJGdGNHeGxjaUlwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZiblpsY25SZmRHVjRkSFZ5WlNoa1lYUmhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLR0JVZVhCbElDUjdaR0YwWVM1MGVYQmxmU0J1YjNRZ2EyNXZkMjVnS1RzS0lDQWdJSDBLSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHUmhkR0VwSUh4OElFRnljbUY1UW5WbVptVnlMbWx6Vm1sbGR5aGtZWFJoS1NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2doWkdGMFlTNWxkbVZ5ZVNnb2VDazlQblI1Y0dWdlppQjRJRDA5UFNBaWJuVnRZbVZ5SWlrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1JoZEdFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExteGxibWQwYUNBOVBTQXlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2diVzlrTGxabFkzUnZjaklvS1M1bWNtOXRRWEp5WVhrb1pHRjBZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG14bGJtZDBhQ0E5UFNBektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2JXOWtMbFpsWTNSdmNqTW9LUzVtY205dFFYSnlZWGtvWkdGMFlTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoa1lYUmhMbXhsYm1kMGFDQTlQU0EwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnYlc5a0xsWmxZM1J2Y2pRb0tTNW1jbTl0UVhKeVlYa29aR0YwWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExteGxibWQwYUNBOVBTQXhOaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCdFlYUWdQU0J1WlhjZ2JXOWtMazFoZEhKcGVEUW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBMbVp5YjIxQmNuSmhlU2hrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzFoZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z1pHRjBZVHNLZlFwbWRXNWpkR2x2YmlCa1pYTmxjbWxoYkdsNlpWOTFibWxtYjNKdGN5aGtZWFJoS1NCN0NpQWdJQ0JqYjI1emRDQnlaWE4xYkhRZ1BTQjdmVHNLSUNBZ0lHWnZjaWhqYjI1emRDQnVZVzFsSUdsdUlHUmhkR0VwZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSFpoYkhWbElEMGdaR0YwWVZ0dVlXMWxYVHNLSUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnYVc1emRHRnVZMlZ2WmlCdGIyUXVWVzVwWm05eWJTa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYTjFiSFJiYm1GdFpWMGdQU0IyWVd4MVpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnpaWElnUFNCMGIxOTFibWxtYjNKdEtIWmhiSFZsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MFcyNWhiV1ZkSUQwZ2JtVjNJRzF2WkM1VmJtbG1iM0p0S0hObGNpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSEpsYzNWc2REc0tmUXBtZFc1amRHbHZiaUJrWlhObGNtbGhiR2w2WlY5d2JHOTBLR1JoZEdFcElIc0tJQ0FnSUd4bGRDQnRaWE5vT3dvZ0lDQWdhV1lnS0NKcGJuTjBZVzVqWlY5aGRIUnlhV0oxZEdWeklpQnBiaUJrWVhSaEtTQjdDaUFnSUNBZ0lDQWdiV1Z6YUNBOUlHTnlaV0YwWlY5cGJuTjBZVzVqWldSZmJXVnphQ2hrWVhSaEtUc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYldWemFDQTlJR055WldGMFpWOXRaWE5vS0dSaGRHRXBPd29nSUNBZ2ZRb2dJQ0FnYldWemFDNXVZVzFsSUQwZ1pHRjBZUzV1WVcxbE93b2dJQ0FnYldWemFDNW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ1ptRnNjMlU3Q2lBZ0lDQnRaWE5vTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNCbVlXeHpaVHNLSUNBZ0lHMWxjMmd1Y0d4dmRGOTFkV2xrSUQwZ1pHRjBZUzUxZFdsa093b2dJQ0FnWTI5dWMzUWdkWEJrWVhSbFgzWnBjMmxpYkdVZ1BTQW9kaWs5UG5zS0lDQWdJQ0FnSUNCdFpYTm9MblpwYzJsaWJHVWdQU0IyT3dvZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lIMDdDaUFnSUNCMWNHUmhkR1ZmZG1semFXSnNaU2hrWVhSaExuWnBjMmxpYkdVdWRtRnNkV1VwT3dvZ0lDQWdaR0YwWVM1MmFYTnBZbXhsTG05dUtIVndaR0YwWlY5MmFYTnBZbXhsS1RzS0lDQWdJR052Ym01bFkzUmZkVzVwWm05eWJYTW9iV1Z6YUN3Z1pHRjBZUzUxYm1sbWIzSnRYM1Z3WkdGMFpYSXBPd29nSUNBZ1kyOXVibVZqZEY5aGRIUnlhV0oxZEdWektHMWxjMmdzSUdSaGRHRXVZWFIwY21saWRYUmxYM1Z3WkdGMFpYSXBPd29nSUNBZ2NtVjBkWEp1SUcxbGMyZzdDbjBLWTI5dWMzUWdUMDVmVGtWWVZGOUpUbE5GVWxRZ1BTQnVaWGNnVTJWMEtDazdDbVoxYm1OMGFXOXVJRzl1WDI1bGVIUmZhVzV6WlhKMEtHWXBJSHNLSUNBZ0lFOU9YMDVGV0ZSZlNVNVRSVkpVTG1Ga1pDaG1LVHNLZlFwbWRXNWpkR2x2YmlCaFpHUmZjR3h2ZENoelkyVnVaU3dnY0d4dmRGOWtZWFJoS1NCN0NpQWdJQ0JqYjI1emRDQmpZVzBnUFNCelkyVnVaUzUzWjJ4ZlkyRnRaWEpoT3dvZ0lDQWdZMjl1YzNRZ2FXUmxiblJwZEhrZ1BTQnVaWGNnYlc5a0xsVnVhV1p2Y20wb2JtVjNJRzF2WkM1TllYUnlhWGcwS0NrcE93b2dJQ0FnYVdZZ0tIQnNiM1JmWkdGMFlTNWpZVzFmYzNCaFkyVWdQVDBnSW1SaGRHRWlLU0I3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5acFpYY2dQU0JqWVcwdWRtbGxkenNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKdmFtVmpkR2x2YmlBOUlHTmhiUzV3Y205cVpXTjBhVzl1T3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dWRtbGxkeUE5SUdOaGJTNXdjbTlxWldOMGFXOXVkbWxsZHpzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdVpYbGxjRzl6YVhScGIyNGdQU0JqWVcwdVpYbGxjRzl6YVhScGIyNDdDaUFnSUNCOUlHVnNjMlVnYVdZZ0tIQnNiM1JmWkdGMFlTNWpZVzFmYzNCaFkyVWdQVDBnSW5CcGVHVnNJaWtnZXdvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1MmFXVjNJRDBnYVdSbGJuUnBkSGs3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeWIycGxZM1JwYjI0Z1BTQmpZVzB1Y0dsNFpXeGZjM0JoWTJVN0NpQWdJQ0FnSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuQnliMnBsWTNScGIyNTJhV1YzSUQwZ1kyRnRMbkJwZUdWc1gzTndZV05sT3dvZ0lDQWdmU0JsYkhObElHbG1JQ2h3Ykc5MFgyUmhkR0V1WTJGdFgzTndZV05sSUQwOUlDSnlaV3hoZEdsMlpTSXBJSHNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11ZG1sbGR5QTlJR2xrWlc1MGFYUjVPd29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTV3Y205cVpXTjBhVzl1SUQwZ1kyRnRMbkpsYkdGMGFYWmxYM053WVdObE93b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NXdjbTlxWldOMGFXOXVkbWxsZHlBOUlHTmhiUzV5Wld4aGRHbDJaVjl6Y0dGalpUc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5acFpYY2dQU0JwWkdWdWRHbDBlVHNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKdmFtVmpkR2x2YmlBOUlHbGtaVzUwYVhSNU93b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NXdjbTlxWldOMGFXOXVkbWxsZHlBOUlHbGtaVzUwYVhSNU93b2dJQ0FnZlFvZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbkpsYzI5c2RYUnBiMjRnUFNCallXMHVjbVZ6YjJ4MWRHbHZianNLSUNBZ0lHbG1JQ2h3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11Y0hKbGNISnZhbVZqZEdsdmJpa2dld29nSUNBZ0lDQWdJR052Ym5OMElIc2djM0JoWTJVZ0xDQnRZWEpyWlhKemNHRmpaU0FnZlNBOUlIQnNiM1JmWkdGMFlUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEpsY0hKdmFtVmpkR2x2YmlBOUlHTmhiUzV3Y21Wd2NtOXFaV04wYVc5dVgyMWhkSEpwZUNoemNHRmpaUzUyWVd4MVpTd2diV0Z5YTJWeWMzQmhZMlV1ZG1Gc2RXVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5dWMzUWdjQ0E5SUdSbGMyVnlhV0ZzYVhwbFgzQnNiM1FvY0d4dmRGOWtZWFJoS1RzS0lDQWdJSEJzYjNSZlkyRmphR1ZiY0d4dmRGOWtZWFJoTG5WMWFXUmRJRDBnY0RzS0lDQWdJSE5qWlc1bExtRmtaQ2h3S1RzS0lDQWdJR052Ym5OMElHNWxlSFJmYVc1elpYSjBJRDBnYm1WM0lGTmxkQ2hQVGw5T1JWaFVYMGxPVTBWU1ZDazdDaUFnSUNCdVpYaDBYMmx1YzJWeWRDNW1iM0pGWVdOb0tDaG1LVDArWmlncEtUc0tmUXBtZFc1amRHbHZiaUJqYjI1dVpXTjBYM1Z1YVdadmNtMXpLRzFsYzJnc0lIVndaR0YwWlhJcElIc0tJQ0FnSUhWd1pHRjBaWEl1YjI0b0tGdHVZVzFsTENCa1lYUmhYU2s5UG5zS0lDQWdJQ0FnSUNCcFppQW9ibUZ0WlNBOVBUMGdJbTV2Ym1VaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdkVzVwWm05eWJTQTlJRzFsYzJndWJXRjBaWEpwWVd3dWRXNXBabTl5YlhOYmJtRnRaVjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIVnVhV1p2Y20wdWRtRnNkV1V1YVhOVVpYaDBkWEpsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbHRYMlJoZEdFZ1BTQjFibWxtYjNKdExuWmhiSFZsTG1sdFlXZGxPd29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JiYzJsNlpTd2dkR1Y0WDJSaGRHRmRJRDBnWkdGMFlUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUmxlRjlrWVhSaExteGxibWQwYUNBOVBTQnBiVjlrWVhSaExtUmhkR0V1YkdWdVozUm9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYlY5a1lYUmhMbVJoZEdFdWMyVjBLSFJsZUY5a1lYUmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRzlzWkY5MFpYaDBkWEpsSUQwZ2RXNXBabTl5YlM1MllXeDFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMHVkbUZzZFdVZ1BTQnlaVjlqY21WaGRHVmZkR1Y0ZEhWeVpTaHZiR1JmZEdWNGRIVnlaU3dnZEdWNFgyUmhkR0VzSUhOcGVtVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMnhrWDNSbGVIUjFjbVV1WkdsemNHOXpaU2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTB1ZG1Gc2RXVXVibVZsWkhOVmNHUmhkR1VnUFNCMGNuVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBjMTkwYUhKbFpWOW1hWGhsWkY5aGNuSmhlU2gxYm1sbWIzSnRMblpoYkhWbEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkVzVwWm05eWJTNTJZV3gxWlM1bWNtOXRRWEp5WVhrb1pHRjBZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0TG5aaGJIVmxJRDBnWkdGMFlUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlHTnlaV0YwWlY5MFpYaDBkWEpsS0dSaGRHRXBJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjaUE5SUdSaGRHRXVaR0YwWVRzS0lDQWdJR2xtSUNoa1lYUmhMbk5wZW1VdWJHVnVaM1JvSUQwOUlETXBJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQjBaWGdnUFNCdVpYY2diVzlrTGtSaGRHRlVaWGgwZFhKbE0wUW9ZblZtWm1WeUxDQmtZWFJoTG5OcGVtVmJNRjBzSUdSaGRHRXVjMmw2WlZzeFhTd2daR0YwWVM1emFYcGxXekpkS1RzS0lDQWdJQ0FnSUNCMFpYZ3VabTl5YldGMElEMGdiVzlrVzJSaGRHRXVkR2h5WldWZlptOXliV0YwWFRzS0lDQWdJQ0FnSUNCMFpYZ3VkSGx3WlNBOUlHMXZaRnRrWVhSaExuUm9jbVZsWDNSNWNHVmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBaWGc3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhSbGVGOWtZWFJoSUQwZ1luVm1abVZ5SUQwOUlDSjBaWGgwZFhKbFgyRjBiR0Z6SWlBL0lGUkZXRlJWVWtWZlFWUk1RVk5iTUYwdWRtRnNkV1VnT2lCaWRXWm1aWEk3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCdGIyUXVSR0YwWVZSbGVIUjFjbVVvZEdWNFgyUmhkR0VzSUdSaGRHRXVjMmw2WlZzd1hTd2daR0YwWVM1emFYcGxXekZkTENCdGIyUmJaR0YwWVM1MGFISmxaVjltYjNKdFlYUmRMQ0J0YjJSYlpHRjBZUzUwYUhKbFpWOTBlWEJsWFNrN0NpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z2NtVmZZM0psWVhSbFgzUmxlSFIxY21Vb2IyeGtYM1JsZUhSMWNtVXNJR0oxWm1abGNpd2djMmw2WlNrZ2V3b2dJQ0FnYVdZZ0tITnBlbVV1YkdWdVozUm9JRDA5SURNcElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMFpYZ2dQU0J1WlhjZ2JXOWtMa1JoZEdGVVpYaDBkWEpsTTBRb1luVm1abVZ5TENCemFYcGxXekJkTENCemFYcGxXekZkTENCemFYcGxXekpkS1RzS0lDQWdJQ0FnSUNCMFpYZ3VabTl5YldGMElEMGdiMnhrWDNSbGVIUjFjbVV1Wm05eWJXRjBPd29nSUNBZ0lDQWdJSFJsZUM1MGVYQmxJRDBnYjJ4a1gzUmxlSFIxY21VdWRIbHdaVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR1Y0T3dvZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRzF2WkM1RVlYUmhWR1Y0ZEhWeVpTaGlkV1ptWlhJc0lITnBlbVZiTUYwc0lITnBlbVZiTVYwZ1B5QnphWHBsV3pGZElEb2dNU3dnYjJ4a1gzUmxlSFIxY21VdVptOXliV0YwTENCdmJHUmZkR1Y0ZEhWeVpTNTBlWEJsS1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWW5WbVptVnlLU0I3Q2lBZ0lDQmpiMjV6ZENCcWMySjFabVlnUFNCdVpYY2diVzlrTGtKMVptWmxja0YwZEhKcFluVjBaU2hpZFdabVpYSXVabXhoZEN3Z1luVm1abVZ5TG5SNWNHVmZiR1Z1WjNSb0tUc0tJQ0FnSUdwelluVm1aaTV6WlhSVmMyRm5aU2h0YjJRdVJIbHVZVzFwWTBSeVlYZFZjMkZuWlNrN0NpQWdJQ0J5WlhSMWNtNGdhbk5pZFdabU93cDlDbVoxYm1OMGFXOXVJRWx1YzNSaGJtTmxRblZtWm1WeVFYUjBjbWxpZFhSbEtHSjFabVpsY2lrZ2V3b2dJQ0FnWTI5dWMzUWdhbk5pZFdabUlEMGdibVYzSUcxdlpDNUpibk4wWVc1alpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVb1luVm1abVZ5TG1ac1lYUXNJR0oxWm1abGNpNTBlWEJsWDJ4bGJtZDBhQ2s3Q2lBZ0lDQnFjMkoxWm1ZdWMyVjBWWE5oWjJVb2JXOWtMa1I1Ym1GdGFXTkVjbUYzVlhOaFoyVXBPd29nSUNBZ2NtVjBkWEp1SUdwelluVm1aanNLZlFwbWRXNWpkR2x2YmlCaGRIUmhZMmhmWjJWdmJXVjBjbmtvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0IyWlhKMFpYaGhjbkpoZVhNc0lHWmhZMlZ6S1NCN0NpQWdJQ0JtYjNJb1kyOXVjM1FnYm1GdFpTQnBiaUIyWlhKMFpYaGhjbkpoZVhNcGV3b2dJQ0FnSUNBZ0lHTnZibk4wSUdKMVptWWdQU0IyWlhKMFpYaGhjbkpoZVhOYmJtRnRaVjA3Q2lBZ0lDQWdJQ0FnYkdWMElHSjFabVpsY2pzS0lDQWdJQ0FnSUNCcFppQW9ZblZtWmk1MGIxOTFjR1JoZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5WbVptVnlJRDBnYm1WM0lHMXZaQzVDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZblZtWmk1MGIxOTFjR1JoZEdVc0lHSjFabVl1YVhSbGJWTnBlbVVwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2lBOUlFSjFabVpsY2tGMGRISnBZblYwWlNoaWRXWm1LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWW5WbVptVnlYMmRsYjIxbGRISjVMbk5sZEVGMGRISnBZblYwWlNodVlXMWxMQ0JpZFdabVpYSXBPd29nSUNBZ2ZRb2dJQ0FnWW5WbVptVnlYMmRsYjIxbGRISjVMbk5sZEVsdVpHVjRLR1poWTJWektUc0tJQ0FnSUdKMVptWmxjbDluWlc5dFpYUnllUzVpYjNWdVpHbHVaMU53YUdWeVpTQTlJRzVsZHlCdGIyUXVVM0JvWlhKbEtDazdDaUFnSUNCaWRXWm1aWEpmWjJWdmJXVjBjbmt1WW05MWJtUnBibWRUY0dobGNtVXVjbUZrYVhWeklEMGdNVEF3TURBd01EQXdNREF3TURBN0NpQWdJQ0JpZFdabVpYSmZaMlZ2YldWMGNua3VabkoxYzNSMWJVTjFiR3hsWkNBOUlHWmhiSE5sT3dvZ0lDQWdjbVYwZFhKdUlHSjFabVpsY2w5blpXOXRaWFJ5ZVRzS2ZRcG1kVzVqZEdsdmJpQmhkSFJoWTJoZmFXNXpkR0Z1WTJWa1gyZGxiMjFsZEhKNUtHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2FXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGN5a2dld29nSUNBZ1ptOXlLR052Ym5OMElHNWhiV1VnYVc0Z2FXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGN5bDdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1luVm1abVZ5SUQwZ1NXNXpkR0Z1WTJWQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsYzF0dVlXMWxYU2s3Q2lBZ0lDQWdJQ0FnWW5WbVptVnlYMmRsYjIxbGRISjVMbk5sZEVGMGRISnBZblYwWlNodVlXMWxMQ0JpZFdabVpYSXBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJSEpsWTNKbFlYUmxYMmRsYjIxbGRISjVLRzFsYzJnc0lIWmxjblJsZUdGeWNtRjVjeXdnWm1GalpYTXBJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjbDluWlc5dFpYUnllU0E5SUc1bGR5QnRiMlF1UW5WbVptVnlSMlZ2YldWMGNua29LVHNLSUNBZ0lHRjBkR0ZqYUY5blpXOXRaWFJ5ZVNoaWRXWm1aWEpmWjJWdmJXVjBjbmtzSUhabGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcE93b2dJQ0FnYldWemFDNW5aVzl0WlhSeWVTNWthWE53YjNObEtDazdDaUFnSUNCdFpYTm9MbWRsYjIxbGRISjVJRDBnWW5WbVptVnlYMmRsYjIxbGRISjVPd29nSUNBZ2JXVnphQzV1WldWa2MxVndaR0YwWlNBOUlIUnlkV1U3Q24wS1puVnVZM1JwYjI0Z2NtVmpjbVZoZEdWZmFXNXpkR0Z1WTJWa1gyZGxiMjFsZEhKNUtHMWxjMmdwSUhzS0lDQWdJR052Ym5OMElHSjFabVpsY2w5blpXOXRaWFJ5ZVNBOUlHNWxkeUJ0YjJRdVNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtvS1RzS0lDQWdJR052Ym5OMElIWmxjblJsZUdGeWNtRjVjeUE5SUh0OU93b2dJQ0FnWTI5dWMzUWdhVzV6ZEdGdVkyVmZZWFIwY21saWRYUmxjeUE5SUh0OU93b2dJQ0FnWTI5dWMzUWdabUZqWlhNZ1BTQmJDaUFnSUNBZ0lDQWdMaTR1YldWemFDNW5aVzl0WlhSeWVTNXBibVJsZUM1aGNuSmhlUW9nSUNBZ1hUc0tJQ0FnSUU5aWFtVmpkQzVyWlhsektHMWxjMmd1WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3lrdVptOXlSV0ZqYUNnb2JtRnRaU2s5UG5zS0lDQWdJQ0FnSUNCamIyNXpkQ0JpZFdabVpYSWdQU0J0WlhOb0xtZGxiMjFsZEhKNUxtRjBkSEpwWW5WMFpYTmJibUZ0WlYwN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWTI5d2VTQTlJR0oxWm1abGNpNTBiMTkxY0dSaGRHVWdQeUJpZFdabVpYSXVkRzlmZFhCa1lYUmxJRG9nWW5WbVptVnlMbUZ5Y21GNUxtMWhjQ2dvZUNrOVBuZ3BPd29nSUNBZ0lDQWdJR2xtSUNoaWRXWm1aWEl1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhVzV6ZEdGdVkyVmZZWFIwY21saWRYUmxjMXR1WVcxbFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1pzWVhRNklHTnZjSGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbFgyeGxibWQwYURvZ1luVm1abVZ5TG1sMFpXMVRhWHBsQ2lBZ0lDQWdJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRZWEp5WVhselcyNWhiV1ZkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pteGhkRG9nWTI5d2VTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1ZmYkdWdVozUm9PaUJpZFdabVpYSXVhWFJsYlZOcGVtVUtJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5S1RzS0lDQWdJR0YwZEdGamFGOW5aVzl0WlhSeWVTaGlkV1ptWlhKZloyVnZiV1YwY25rc0lIWmxjblJsZUdGeWNtRjVjeXdnWm1GalpYTXBPd29nSUNBZ1lYUjBZV05vWDJsdWMzUmhibU5sWkY5blpXOXRaWFJ5ZVNoaWRXWm1aWEpmWjJWdmJXVjBjbmtzSUdsdWMzUmhibU5sWDJGMGRISnBZblYwWlhNcE93b2dJQ0FnYldWemFDNW5aVzl0WlhSeWVTNWthWE53YjNObEtDazdDaUFnSUNCdFpYTm9MbWRsYjIxbGRISjVJRDBnWW5WbVptVnlYMmRsYjIxbGRISjVPd29nSUNBZ2JXVnphQzV1WldWa2MxVndaR0YwWlNBOUlIUnlkV1U3Q24wS1puVnVZM1JwYjI0Z1kzSmxZWFJsWDIxaGRHVnlhV0ZzS0hCeWIyZHlZVzBwSUhzS0lDQWdJR052Ym5OMElHbHpYM1p2YkhWdFpTQTlJQ0oyYjJ4MWJXVmtZWFJoSWlCcGJpQndjbTluY21GdExuVnVhV1p2Y20xek93b2dJQ0FnY21WMGRYSnVJRzVsZHlCdGIyUXVVbUYzVTJoaFpHVnlUV0YwWlhKcFlXd29ld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUJrWlhObGNtbGhiR2w2WlY5MWJtbG1iM0p0Y3lod2NtOW5jbUZ0TG5WdWFXWnZjbTF6S1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJSEJ5YjJkeVlXMHVkbVZ5ZEdWNFgzTnZkWEpqWlN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nY0hKdlozSmhiUzVtY21GbmJXVnVkRjl6YjNWeVkyVXNDaUFnSUNBZ0lDQWdjMmxrWlRvZ2FYTmZkbTlzZFcxbElEOGdiVzlrTGtKaFkydFRhV1JsSURvZ2JXOWtMa1J2ZFdKc1pWTnBaR1VzQ2lBZ0lDQWdJQ0FnZEhKaGJuTndZWEpsYm5RNklIUnlkV1VzQ2lBZ0lDQWdJQ0FnWkdWd2RHaFVaWE4wT2lBaGNISnZaM0poYlM1dmRtVnlaSEpoZHk1MllXeDFaU3dLSUNBZ0lDQWdJQ0JrWlhCMGFGZHlhWFJsT2lBaGNISnZaM0poYlM1MGNtRnVjM0JoY21WdVkza3VkbUZzZFdVS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlHTnlaV0YwWlY5dFpYTm9LSEJ5YjJkeVlXMHBJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjbDluWlc5dFpYUnllU0E5SUc1bGR5QnRiMlF1UW5WbVptVnlSMlZ2YldWMGNua29LVHNLSUNBZ0lHTnZibk4wSUdaaFkyVnpJRDBnYm1WM0lHMXZaQzVDZFdabVpYSkJkSFJ5YVdKMWRHVW9jSEp2WjNKaGJTNW1ZV05sY3k1MllXeDFaU3dnTVNrN0NpQWdJQ0JoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQndjbTluY21GdExuWmxjblJsZUdGeWNtRjVjeXdnWm1GalpYTXBPd29nSUNBZ1kyOXVjM1FnYldGMFpYSnBZV3dnUFNCamNtVmhkR1ZmYldGMFpYSnBZV3dvY0hKdlozSmhiU2s3Q2lBZ0lDQmpiMjV6ZENCdFpYTm9JRDBnYm1WM0lHMXZaQzVOWlhOb0tHSjFabVpsY2w5blpXOXRaWFJ5ZVN3Z2JXRjBaWEpwWVd3cE93b2dJQ0FnY0hKdlozSmhiUzVtWVdObGN5NXZiaWdvZUNrOVBuc0tJQ0FnSUNBZ0lDQnRaWE5vTG1kbGIyMWxkSEo1TG5ObGRFbHVaR1Y0S0c1bGR5QnRiMlF1UW5WbVptVnlRWFIwY21saWRYUmxLSGdzSURFcEtUc0tJQ0FnSUgwcE93b2dJQ0FnY21WMGRYSnVJRzFsYzJnN0NuMEtablZ1WTNScGIyNGdZM0psWVhSbFgybHVjM1JoYm1ObFpGOXRaWE5vS0hCeWIyZHlZVzBwSUhzS0lDQWdJR052Ym5OMElHSjFabVpsY2w5blpXOXRaWFJ5ZVNBOUlHNWxkeUJ0YjJRdVNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtvS1RzS0lDQWdJR052Ym5OMElHWmhZMlZ6SUQwZ2JtVjNJRzF2WkM1Q2RXWm1aWEpCZEhSeWFXSjFkR1VvY0hKdlozSmhiUzVtWVdObGN5NTJZV3gxWlN3Z01TazdDaUFnSUNCaGRIUmhZMmhmWjJWdmJXVjBjbmtvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0J3Y205bmNtRnRMblpsY25SbGVHRnljbUY1Y3l3Z1ptRmpaWE1wT3dvZ0lDQWdZWFIwWVdOb1gybHVjM1JoYm1ObFpGOW5aVzl0WlhSeWVTaGlkV1ptWlhKZloyVnZiV1YwY25rc0lIQnliMmR5WVcwdWFXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGN5azdDaUFnSUNCamIyNXpkQ0J0WVhSbGNtbGhiQ0E5SUdOeVpXRjBaVjl0WVhSbGNtbGhiQ2h3Y205bmNtRnRLVHNLSUNBZ0lHTnZibk4wSUcxbGMyZ2dQU0J1WlhjZ2JXOWtMazFsYzJnb1luVm1abVZ5WDJkbGIyMWxkSEo1TENCdFlYUmxjbWxoYkNrN0NpQWdJQ0J3Y205bmNtRnRMbVpoWTJWekxtOXVLQ2g0S1QwK2V3b2dJQ0FnSUNBZ0lHMWxjMmd1WjJWdmJXVjBjbmt1YzJWMFNXNWtaWGdvYm1WM0lHMXZaQzVDZFdabVpYSkJkSFJ5YVdKMWRHVW9lQ3dnTVNrcE93b2dJQ0FnZlNrN0NpQWdJQ0J5WlhSMWNtNGdiV1Z6YURzS2ZRcG1kVzVqZEdsdmJpQm1hWEp6ZENoNEtTQjdDaUFnSUNCeVpYUjFjbTRnZUZ0UFltcGxZM1F1YTJWNWN5aDRLVnN3WFYwN0NuMEtablZ1WTNScGIyNGdZMjl1Ym1WamRGOWhkSFJ5YVdKMWRHVnpLRzFsYzJnc0lIVndaR0YwWlhJcElIc0tJQ0FnSUdOdmJuTjBJR2x1YzNSaGJtTmxYMkoxWm1abGNuTWdQU0I3ZlRzS0lDQWdJR052Ym5OMElHZGxiMjFsZEhKNVgySjFabVpsY25NZ1BTQjdmVHNLSUNBZ0lHeGxkQ0JtYVhKemRGOXBibk4wWVc1alpWOWlkV1ptWlhJN0NpQWdJQ0JqYjI1emRDQnlaV0ZzWDJsdWMzUmhibU5sWDJ4bGJtZDBhQ0E5SUZzS0lDQWdJQ0FnSUNBd0NpQWdJQ0JkT3dvZ0lDQWdiR1YwSUdacGNuTjBYMmRsYjIxbGRISjVYMkoxWm1abGNqc0tJQ0FnSUdOdmJuTjBJSEpsWVd4ZloyVnZiV1YwY25sZmJHVnVaM1JvSUQwZ1d3b2dJQ0FnSUNBZ0lEQUtJQ0FnSUYwN0NpQWdJQ0JtZFc1amRHbHZiaUJ5WlY5aGMzTnBaMjVmWW5WbVptVnljeWdwSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0JoZEhSeWFXSjFkR1Z6SUQwZ2JXVnphQzVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUU5aWFtVmpkQzVyWlhsektHRjBkSEpwWW5WMFpYTXBMbVp2Y2tWaFkyZ29LRzVoYldVcFBUNTdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJR0YwZEhKcFluVjBaWE5iYm1GdFpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGlkV1ptWlhJdWFYTkpibk4wWVc1alpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVjM1JoYm1ObFgySjFabVpsY25OYmJtRnRaVjBnUFNCaWRXWm1aWEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCblpXOXRaWFJ5ZVY5aWRXWm1aWEp6VzI1aGJXVmRJRDBnWW5WbVptVnlPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdabWx5YzNSZmFXNXpkR0Z1WTJWZlluVm1abVZ5SUQwZ1ptbHljM1FvYVc1emRHRnVZMlZmWW5WbVptVnljeWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tHWnBjbk4wWDJsdWMzUmhibU5sWDJKMVptWmxjaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaV0ZzWDJsdWMzUmhibU5sWDJ4bGJtZDBhRnN3WFNBOUlHWnBjbk4wWDJsdWMzUmhibU5sWDJKMVptWmxjaTVqYjNWdWREc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdabWx5YzNSZloyVnZiV1YwY25sZlluVm1abVZ5SUQwZ1ptbHljM1FvWjJWdmJXVjBjbmxmWW5WbVptVnljeWs3Q2lBZ0lDQWdJQ0FnY21WaGJGOW5aVzl0WlhSeWVWOXNaVzVuZEdoYk1GMGdQU0JtYVhKemRGOW5aVzl0WlhSeWVWOWlkV1ptWlhJdVkyOTFiblE3Q2lBZ0lDQjlDaUFnSUNCeVpWOWhjM05wWjI1ZlluVm1abVZ5Y3lncE93b2dJQ0FnZFhCa1lYUmxjaTV2Ymlnb1cyNWhiV1VzSUc1bGQxOTJZV3gxWlhNc0lHeGxibWQwYUYwcFBUNTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1luVm1abVZ5SUQwZ2JXVnphQzVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6VzI1aGJXVmRPd29nSUNBZ0lDQWdJR3hsZENCaWRXWm1aWEp6T3dvZ0lDQWdJQ0FnSUd4bGRDQnlaV0ZzWDJ4bGJtZDBhRHNLSUNBZ0lDQWdJQ0JzWlhRZ2FYTmZhVzV6ZEdGdVkyVWdQU0JtWVd4elpUc0tJQ0FnSUNBZ0lDQnBaaUFvYm1GdFpTQnBiaUJwYm5OMFlXNWpaVjlpZFdabVpYSnpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY25NZ1BTQnBibk4wWVc1alpWOWlkV1ptWlhKek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYVhKemRGOXBibk4wWVc1alpWOWlkV1ptWlhJN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsWVd4ZmJHVnVaM1JvSUQwZ2NtVmhiRjlwYm5OMFlXNWpaVjlzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUdselgybHVjM1JoYm1ObElEMGdkSEoxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmlkV1ptWlhKeklEMGdaMlZ2YldWMGNubGZZblZtWm1WeWN6c0tJQ0FnSUNBZ0lDQWdJQ0FnWm1seWMzUmZaMlZ2YldWMGNubGZZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0J5WldGc1gyeGxibWQwYUNBOUlISmxZV3hmWjJWdmJXVjBjbmxmYkdWdVozUm9Pd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2JHVnVaM1JvSUR3OUlISmxZV3hmYkdWdVozUm9XekJkS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR0oxWm1abGNpNXpaWFFvYm1WM1gzWmhiSFZsY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJR0oxWm1abGNpNXVaV1ZrYzFWd1pHRjBaU0E5SUhSeWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBjMTlwYm5OMFlXNWpaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYldWemFDNW5aVzl0WlhSeWVTNXBibk4wWVc1alpVTnZkVzUwSUQwZ2JHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5WbVptVnlMblJ2WDNWd1pHRjBaU0E5SUc1bGQxOTJZV3gxWlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHRnNiRjlvWVhabFgzTmhiV1ZmYkdWdVozUm9JRDBnVDJKcVpXTjBMblpoYkhWbGN5aGlkV1ptWlhKektTNWxkbVZ5ZVNnb2VDazlQbmd1ZEc5ZmRYQmtZWFJsSUNZbUlIZ3VkRzlmZFhCa1lYUmxMbXhsYm1kMGFDQXZJSGd1YVhSbGJWTnBlbVVnUFQwZ2JHVnVaM1JvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dGc2JGOW9ZWFpsWDNOaGJXVmZiR1Z1WjNSb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhOZmFXNXpkR0Z1WTJVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WldOeVpXRjBaVjlwYm5OMFlXNWpaV1JmWjJWdmJXVjBjbmtvYldWemFDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WZllYTnphV2R1WDJKMVptWmxjbk1vS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRaWE5vTG1kbGIyMWxkSEo1TG1sdWMzUmhibU5sUTI5MWJuUWdQU0J1WlhkZmRtRnNkV1Z6TG14bGJtZDBhQ0F2SUdKMVptWmxjaTVwZEdWdFUybDZaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WamNtVmhkR1ZmWjJWdmJXVjBjbmtvYldWemFDd2dZblZtWm1WeWN5d2diV1Z6YUM1blpXOXRaWFJ5ZVM1cGJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVmZZWE56YVdkdVgySjFabVpsY25Nb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBwT3dwOUNtWjFibU4wYVc5dUlHUmxjMlZ5YVdGc2FYcGxYM05qWlc1bEtHUmhkR0VzSUhOamNtVmxiaWtnZXdvZ0lDQWdZMjl1YzNRZ2MyTmxibVVnUFNCdVpYY2diVzlrTGxOalpXNWxLQ2s3Q2lBZ0lDQnpZMlZ1WlM1elkzSmxaVzRnUFNCelkzSmxaVzQ3Q2lBZ0lDQmpiMjV6ZENCN0lHTmhiblpoY3lBZ2ZTQTlJSE5qY21WbGJqc0tJQ0FnSUdGa1pGOXpZMlZ1WlNoa1lYUmhMblYxYVdRc0lITmpaVzVsS1RzS0lDQWdJSE5qWlc1bExuTmpaVzVsWDNWMWFXUWdQU0JrWVhSaExuVjFhV1E3Q2lBZ0lDQnpZMlZ1WlM1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnWm1Gc2MyVTdDaUFnSUNCelkyVnVaUzV3YVhobGJHRnlaV0VnUFNCa1lYUmhMbkJwZUdWc1lYSmxZVHNLSUNBZ0lITmpaVzVsTG1KaFkydG5jbTkxYm1SamIyeHZjaUE5SUdSaGRHRXVZbUZqYTJkeWIzVnVaR052Ykc5eU93b2dJQ0FnYzJObGJtVXVZMnhsWVhKelkyVnVaU0E5SUdSaGRHRXVZMnhsWVhKelkyVnVaVHNLSUNBZ0lITmpaVzVsTG5acGMybGliR1VnUFNCa1lYUmhMblpwYzJsaWJHVTdDaUFnSUNCamIyNXpkQ0JqWVcxbGNtRWdQU0J1WlhjZ1RXRnJhV1ZEWVcxbGNtRW9LVHNLSUNBZ0lITmpaVzVsTG5kbmJGOWpZVzFsY21FZ1BTQmpZVzFsY21FN0NpQWdJQ0JtZFc1amRHbHZiaUIxY0dSaGRHVmZZMkZ0S0dOaGJXVnlZVjl0WVhSeWFXTmxjeWtnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQyYVdWM0xDQndjbTlxWldOMGFXOXVMQ0J5WlhOdmJIVjBhVzl1TENCbGVXVndiM05kSUQwZ1kyRnRaWEpoWDIxaGRISnBZMlZ6T3dvZ0lDQWdJQ0FnSUdOaGJXVnlZUzUxY0dSaGRHVmZiV0YwY21salpYTW9kbWxsZHl3Z2NISnZhbVZqZEdsdmJpd2djbVZ6YjJ4MWRHbHZiaXdnWlhsbGNHOXpLVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVjlqWVcwb1pHRjBZUzVqWVcxbGNtRXVkbUZzZFdVcE93b2dJQ0FnYVdZZ0tHUmhkR0V1WTJGdE0yUmZjM1JoZEdVcElIc0tJQ0FnSUNBZ0lDQmhkSFJoWTJoZk0yUmZZMkZ0WlhKaEtHTmhiblpoY3l3Z1kyRnRaWEpoTENCa1lYUmhMbU5oYlROa1gzTjBZWFJsTENCelkyVnVaU2s3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHUmhkR0V1WTJGdFpYSmhMbTl1S0hWd1pHRjBaVjlqWVcwcE93b2dJQ0FnZlFvZ0lDQWdaR0YwWVM1d2JHOTBjeTVtYjNKRllXTm9LQ2h3Ykc5MFgyUmhkR0VwUFQ1N0NpQWdJQ0FnSUNBZ1lXUmtYM0JzYjNRb2MyTmxibVVzSUhCc2IzUmZaR0YwWVNrN0NpQWdJQ0I5S1RzS0lDQWdJSE5qWlc1bExuTmpaVzVsWDJOb2FXeGtjbVZ1SUQwZ1pHRjBZUzVqYUdsc1pISmxiaTV0WVhBb0tHTm9hV3hrS1QwK1pHVnpaWEpwWVd4cGVtVmZjMk5sYm1Vb1kyaHBiR1FzSUhOamNtVmxiaWtwT3dvZ0lDQWdjbVYwZFhKdUlITmpaVzVsT3dwOUNtWjFibU4wYVc5dUlHUmxiR1YwWlY5d2JHOTBLSEJzYjNRcElIc0tJQ0FnSUdSbGJHVjBaU0J3Ykc5MFgyTmhZMmhsVzNCc2IzUXVjR3h2ZEY5MWRXbGtYVHNLSUNBZ0lHTnZibk4wSUhzZ2NHRnlaVzUwSUNCOUlEMGdjR3h2ZERzS0lDQWdJR2xtSUNod1lYSmxiblFwSUhzS0lDQWdJQ0FnSUNCd1lYSmxiblF1Y21WdGIzWmxLSEJzYjNRcE93b2dJQ0FnZlFvZ0lDQWdjR3h2ZEM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0NrN0NpQWdJQ0J3Ykc5MExtMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tUc0tmUXBtZFc1amRHbHZiaUJrWld4bGRHVmZkR2h5WldWZmMyTmxibVVvYzJObGJtVXBJSHNLSUNBZ0lHUmxiR1YwWlNCelkyVnVaVjlqWVdOb1pWdHpZMlZ1WlM1elkyVnVaVjkxZFdsa1hUc0tJQ0FnSUhOalpXNWxMbk5qWlc1bFgyTm9hV3hrY21WdUxtWnZja1ZoWTJnb1pHVnNaWFJsWDNSb2NtVmxYM05qWlc1bEtUc0tJQ0FnSUhkb2FXeGxLSE5qWlc1bExtTm9hV3hrY21WdUxteGxibWQwYUNBK0lEQXBld29nSUNBZ0lDQWdJR1JsYkdWMFpWOXdiRzkwS0hOalpXNWxMbU5vYVd4a2NtVnVXekJkS1RzS0lDQWdJSDBLZlFwM2FXNWtiM2N1VkVoU1JVVWdQU0J0YjJRN0NtTnZibk4wSUhCcGVHVnNVbUYwYVc4eElEMGdkMmx1Wkc5M0xtUmxkbWxqWlZCcGVHVnNVbUYwYVc4Z2ZId2dNUzR3T3dwbWRXNWpkR2x2YmlCeVpXNWtaWEpmYzJObGJtVW9jMk5sYm1Vc0lIQnBZMnRwYm1jZ1BTQm1ZV3h6WlNrZ2V3b2dJQ0FnWTI5dWMzUWdleUJqWVcxbGNtRWdMQ0J5Wlc1a1pYSmxjaUFnZlNBOUlITmpaVzVsTG5OamNtVmxianNLSUNBZ0lHTnZibk4wSUdOaGJuWmhjeUE5SUhKbGJtUmxjbVZ5TG1SdmJVVnNaVzFsYm5RN0NpQWdJQ0JwWmlBb0lXUnZZM1Z0Wlc1MExtSnZaSGt1WTI5dWRHRnBibk1vWTJGdWRtRnpLU2tnZXdvZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1Ykc5bktDSkZXRWxVU1U1SElGZEhUQ0lwT3dvZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5OMFlYUmxMbkpsYzJWMEtDazdDaUFnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVaR2x6Y0c5elpTZ3BPd29nSUNBZ0lDQWdJR1JsYkdWMFpWOTBhSEpsWlY5elkyVnVaU2h6WTJWdVpTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ2FXWWdLQ0Z6WTJWdVpTNTJhWE5wWW14bExuWmhiSFZsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdDaUFnSUNCOUNpQWdJQ0J5Wlc1a1pYSmxjaTVoZFhSdlEyeGxZWElnUFNCelkyVnVaUzVqYkdWaGNuTmpaVzVsT3dvZ0lDQWdZMjl1YzNRZ1lYSmxZU0E5SUhOalpXNWxMbkJwZUdWc1lYSmxZUzUyWVd4MVpUc0tJQ0FnSUdsbUlDaGhjbVZoS1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnVzNnc0lIa3NJSGNzSUdoZElEMGdZWEpsWVM1dFlYQW9LSFFwUFQ1MElDOGdjR2w0Wld4U1lYUnBiekVwT3dvZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRGWnBaWGR3YjNKMEtIZ3NJSGtzSUhjc0lHZ3BPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZOamFYTnpiM0lvZUN3Z2VTd2dkeXdnYUNrN0NpQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdWMyVjBVMk5wYzNOdmNsUmxjM1FvZEhKMVpTazdDaUFnSUNBZ0lDQWdhV1lnS0hCcFkydHBibWNwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwUTJ4bFlYSkJiSEJvWVNnd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1YzJWMFEyeGxZWEpEYjJ4dmNpaHVaWGNnYlc5a0xrTnZiRzl5S0RBcExDQXdMakFwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxibVJsY21WeUxuTmxkRU5zWldGeVEyOXNiM0lvYzJObGJtVXVZbUZqYTJkeWIzVnVaR052Ykc5eUxuWmhiSFZsS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdWNtVnVaR1Z5S0hOalpXNWxMQ0JqWVcxbGNtRXBPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSE5qWlc1bExuTmpaVzVsWDJOb2FXeGtjbVZ1TG1WMlpYSjVLQ2g0S1QwK2NtVnVaR1Z5WDNOalpXNWxLSGdzSUhCcFkydHBibWNwS1RzS2ZRcG1kVzVqZEdsdmJpQnpkR0Z5ZEY5eVpXNWtaWEpzYjI5d0tIUm9jbVZsWDNOalpXNWxLU0I3Q2lBZ0lDQmpiMjV6ZENCN0lHWndjeUFnZlNBOUlIUm9jbVZsWDNOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOdmJuTjBJSFJwYldWZmNHVnlYMlp5WVcxbElEMGdNU0F2SUdad2N5QXFJREV3TURBN0NpQWdJQ0JzWlhRZ2JHRnpkRjkwYVcxbFgzTjBZVzF3SUQwZ2NHVnlabTl5YldGdVkyVXVibTkzS0NrN0NpQWdJQ0JtZFc1amRHbHZiaUJ5Wlc1a1pYSnNiMjl3S0hScGJXVnpkR0Z0Y0NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYVcxbGMzUmhiWEFnTFNCc1lYTjBYM1JwYldWZmMzUmhiWEFnUGlCMGFXMWxYM0JsY2w5bWNtRnRaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCaGJHeGZjbVZ1WkdWeVpXUWdQU0J5Wlc1a1pYSmZjMk5sYm1Vb2RHaHlaV1ZmYzJObGJtVXBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV0ZzYkY5eVpXNWtaWEpsWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4aGMzUmZkR2x0WlY5emRHRnRjQ0E5SUhCbGNtWnZjbTFoYm1ObExtNXZkeWdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCM2FXNWtiM2N1Y21WeGRXVnpkRUZ1YVcxaGRHbHZia1p5WVcxbEtISmxibVJsY214dmIzQXBPd29nSUNBZ2ZRb2dJQ0FnY21WdVpHVnlYM05qWlc1bEtIUm9jbVZsWDNOalpXNWxLVHNLSUNBZ0lISmxibVJsY214dmIzQW9LVHNLZlFwbWRXNWpkR2x2YmlCMGFISnZkSFJzWlY5bWRXNWpkR2x2YmlobWRXNWpMQ0JrWld4aGVTa2dld29nSUNBZ2JHVjBJSEJ5WlhZZ1BTQXdPd29nSUNBZ2NtVjBkWEp1SUNndUxpNWhjbWR6S1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUc1dmR5QTlJRzVsZHlCRVlYUmxLQ2t1WjJWMFZHbHRaU2dwT3dvZ0lDQWdJQ0FnSUdsbUlDaHViM2NnTFNCd2NtVjJJRDRnWkdWc1lYa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NISmxkaUE5SUc1dmR6c0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1oxYm1Nb0xpNHVZWEpuY3lrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQjBhSEpsWldwelgyMXZaSFZzWlNoallXNTJZWE1zSUdOdmJXMHNJSGRwWkhSb0xDQm9aV2xuYUhRcElIc0tJQ0FnSUd4bGRDQmpiMjUwWlhoMElEMGdZMkZ1ZG1GekxtZGxkRU52Ym5SbGVIUW9JbmRsWW1kc01pSXNJSHNLSUNBZ0lDQWdJQ0J3Y21WelpYSjJaVVJ5WVhkcGJtZENkV1ptWlhJNklIUnlkV1VLSUNBZ0lIMHBPd29nSUNBZ2FXWWdLQ0ZqYjI1MFpYaDBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlhaV0pIVENBeUxqQWdibTkwSUhOMWNIQnZjblJsWkNCaWVTQmljbTkzYzJWeUxDQm1ZV3hzYVc1bklHSmhZMnNnZEc4Z1YyVmlSMHdnTVM0d0lDaFdiMngxYldVZ2NHeHZkSE1nZDJsc2JDQnViM1FnZDI5eWF5a2lLVHNLSUNBZ0lDQWdJQ0JqYjI1MFpYaDBJRDBnWTJGdWRtRnpMbWRsZEVOdmJuUmxlSFFvSW5kbFltZHNJaXdnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndjbVZ6WlhKMlpVUnlZWGRwYm1kQ2RXWm1aWEk2SUhSeWRXVUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUdsbUlDZ2hZMjl1ZEdWNGRDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElISmxibVJsY21WeUlEMGdibVYzSUcxdlpDNVhaV0pIVEZKbGJtUmxjbVZ5S0hzS0lDQWdJQ0FnSUNCaGJuUnBZV3hwWVhNNklIUnlkV1VzQ2lBZ0lDQWdJQ0FnWTJGdWRtRnpPaUJqWVc1MllYTXNDaUFnSUNBZ0lDQWdZMjl1ZEdWNGREb2dZMjl1ZEdWNGRDd0tJQ0FnSUNBZ0lDQndiM2RsY2xCeVpXWmxjbVZ1WTJVNklDSm9hV2RvTFhCbGNtWnZjbTFoYm1ObElnb2dJQ0FnZlNrN0NpQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSRGJHVmhja052Ykc5eUtDSWpabVptWm1abUlpazdDaUFnSUNCeVpXNWtaWEpsY2k1elpYUlFhWGhsYkZKaGRHbHZLSEJwZUdWc1VtRjBhVzh4S1RzS0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZOcGVtVW9kMmxrZEdnZ0x5QndhWGhsYkZKaGRHbHZNU3dnYUdWcFoyaDBJQzhnY0dsNFpXeFNZWFJwYnpFcE93b2dJQ0FnWTI5dWMzUWdiVzkxYzJWZlkyRnNiR0poWTJzZ1BTQW9lQ3dnZVNrOVBtTnZiVzB1Ym05MGFXWjVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXOTFjMlZ3YjNOcGRHbHZiam9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrS0lDQWdJQ0FnSUNBZ0lDQWdYUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdZMjl1YzNRZ2JtOTBhV1o1WDIxdmRYTmxYM1JvY205MGRHeGxaQ0E5SUhSb2NtOTBkR3hsWDJaMWJtTjBhVzl1S0cxdmRYTmxYMk5oYkd4aVlXTnJMQ0EwTUNrN0NpQWdJQ0JtZFc1amRHbHZiaUJ0YjNWelpXMXZkbVVvWlhabGJuUXBJSHNLSUNBZ0lDQWdJQ0IyWVhJZ2NtVmpkQ0E5SUdOaGJuWmhjeTVuWlhSQ2IzVnVaR2x1WjBOc2FXVnVkRkpsWTNRb0tUc0tJQ0FnSUNBZ0lDQjJZWElnZUNBOUlDaGxkbVZ1ZEM1amJHbGxiblJZSUMwZ2NtVmpkQzVzWldaMEtTQXFJSEJwZUdWc1VtRjBhVzh4T3dvZ0lDQWdJQ0FnSUhaaGNpQjVJRDBnS0dWMlpXNTBMbU5zYVdWdWRGa2dMU0J5WldOMExuUnZjQ2tnS2lCd2FYaGxiRkpoZEdsdk1Uc0tJQ0FnSUNBZ0lDQnViM1JwWm5sZmJXOTFjMlZmZEdoeWIzUjBiR1ZrS0hnc0lIa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlRzS0lDQWdJSDBLSUNBZ0lHTmhiblpoY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKdGIzVnpaVzF2ZG1VaUxDQnRiM1Z6WlcxdmRtVXBPd29nSUNBZ1puVnVZM1JwYjI0Z2JXOTFjMlZrYjNkdUtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCdGIzVnpaV1J2ZDI0NklHVjJaVzUwTG1KMWRIUnZibk1LSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWm1Gc2MyVTdDaUFnSUNCOUNpQWdJQ0JqWVc1MllYTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2liVzkxYzJWa2IzZHVJaXdnYlc5MWMyVmtiM2R1S1RzS0lDQWdJR1oxYm1OMGFXOXVJRzF2ZFhObGRYQW9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMXZkWE5sZFhBNklHVjJaVzUwTG1KMWRIUnZibk1LSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWm1Gc2MyVTdDaUFnSUNCOUNpQWdJQ0JqWVc1MllYTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2liVzkxYzJWMWNDSXNJRzF2ZFhObGRYQXBPd29nSUNBZ1puVnVZM1JwYjI0Z2QyaGxaV3dvWlhabGJuUXBJSHNLSUNBZ0lDQWdJQ0JqYjIxdExtNXZkR2xtZVNoN0NpQWdJQ0FnSUNBZ0lDQWdJSE5qY205c2JEb2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaWFpsYm5RdVpHVnNkR0ZZTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTFdWMlpXNTBMbVJsYkhSaFdRb2dJQ0FnSUNBZ0lDQWdJQ0JkQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ1pYWmxiblF1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWQyaGxaV3dpTENCM2FHVmxiQ2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQnJaWGxrYjNkdUtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCclpYbGtiM2R1T2lCbGRtVnVkQzVqYjJSbENpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sT3dvZ0lDQWdmUW9nSUNBZ1kyRnVkbUZ6TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW10bGVXUnZkMjRpTENCclpYbGtiM2R1S1RzS0lDQWdJR1oxYm1OMGFXOXVJR3RsZVhWd0tHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCclpYbDFjRG9nWlhabGJuUXVZMjlrWlFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pyWlhsMWNDSXNJR3RsZVhWd0tUc0tJQ0FnSUdaMWJtTjBhVzl1SUdOdmJuUmxlSFJ0Wlc1MUtHVjJaVzUwS1NCN0NpQWdJQ0FnSUNBZ1kyOXRiUzV1YjNScFpua29ld29nSUNBZ0lDQWdJQ0FnSUNCclpYbDFjRG9nSW1SbGJHVjBaVjlyWlhseklnb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm1ZV3h6WlRzS0lDQWdJSDBLSUNBZ0lHTmhiblpoY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKamIyNTBaWGgwYldWdWRTSXNJQ2hsS1QwK1pTNXdjbVYyWlc1MFJHVm1ZWFZzZENncEtUc0tJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0ptYjJOMWMyOTFkQ0lzSUdOdmJuUmxlSFJ0Wlc1MUtUc0tJQ0FnSUhKbGRIVnliaUJ5Wlc1a1pYSmxjanNLZlFwbWRXNWpkR2x2YmlCamNtVmhkR1ZmYzJObGJtVW9kM0poY0hCbGNpd2dZMkZ1ZG1GekxDQmpZVzUyWVhOZmQybGtkR2dzSUhOalpXNWxjeXdnWTI5dGJTd2dkMmxrZEdnc0lHaGxhV2RvZEN3Z1puQnpMQ0IwWlhoMGRYSmxYMkYwYkdGelgyOWljeWtnZXdvZ0lDQWdZMjl1YzNRZ2NtVnVaR1Z5WlhJZ1BTQjBhSEpsWldwelgyMXZaSFZzWlNoallXNTJZWE1zSUdOdmJXMHNJSGRwWkhSb0xDQm9aV2xuYUhRcE93b2dJQ0FnVkVWWVZGVlNSVjlCVkV4QlUxc3dYU0E5SUhSbGVIUjFjbVZmWVhSc1lYTmZiMkp6T3dvZ0lDQWdhV1lnS0hKbGJtUmxjbVZ5S1NCN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWTJGdFpYSmhJRDBnYm1WM0lHMXZaQzVRWlhKemNHVmpkR2wyWlVOaGJXVnlZU2cwTlN3Z01Td2dNQ3dnTVRBd0tUc0tJQ0FnSUNBZ0lDQmpZVzFsY21FdWRYQmtZWFJsVUhKdmFtVmpkR2x2YmsxaGRISnBlQ2dwT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJSE5wZW1VZ1BTQnVaWGNnYlc5a0xsWmxZM1J2Y2pJb0tUc0tJQ0FnSUNBZ0lDQnlaVzVrWlhKbGNpNW5aWFJFY21GM2FXNW5RblZtWm1WeVUybDZaU2h6YVhwbEtUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCd2FXTnJhVzVuWDNSaGNtZGxkQ0E5SUc1bGR5QnRiMlF1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFFvYzJsNlpTNTRMQ0J6YVhwbExua3BPd29nSUNBZ0lDQWdJR052Ym5OMElITmpjbVZsYmlBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WdVpHVnlaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnBZMnRwYm1kZmRHRnlaMlYwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmpZVzFsY21Fc0NpQWdJQ0FnSUNBZ0lDQWdJR1p3Y3l3S0lDQWdJQ0FnSUNBZ0lDQWdZMkZ1ZG1GekNpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMGFISmxaVjl6WTJWdVpTQTlJR1JsYzJWeWFXRnNhWHBsWDNOalpXNWxLSE5qWlc1bGN5d2djMk55WldWdUtUc0tJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWgwYUhKbFpWOXpZMlZ1WlNrN0NpQWdJQ0FnSUNBZ2MzUmhjblJmY21WdVpHVnliRzl2Y0NoMGFISmxaVjl6WTJWdVpTazdDaUFnSUNBZ0lDQWdZMkZ1ZG1GelgzZHBaSFJvTG05dUtDaDNYMmdwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElIQnBlR1ZzVW1GMGFXOGdQU0J5Wlc1a1pYSmxjaTVuWlhSUWFYaGxiRkpoZEdsdktDazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRGTnBlbVVvZDE5b1d6QmRJQzhnY0dsNFpXeFNZWFJwYnl3Z2QxOW9XekZkSUM4Z2NHbDRaV3hTWVhScGJ5azdDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhkaGNtNXBibWNnUFNCblpYUlhaV0pIVEVWeWNtOXlUV1Z6YzJGblpTZ3BPd29nSUNBZ0lDQWdJSGR5WVhCd1pYSXVZWEJ3Wlc1a1EyaHBiR1FvZDJGeWJtbHVaeWs3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnYzJWMFgzQnBZMnRwYm1kZmRXNXBabTl5YlhNb2MyTmxibVVzSUd4aGMzUmZhV1FzSUhCcFkydHBibWNzSUhCcFkydGxaRjl3Ykc5MGN5d2djR3h2ZEhNc0lHbGtYM1J2WDNCc2IzUXBJSHNLSUNBZ0lITmpaVzVsTG1Ob2FXeGtjbVZ1TG1admNrVmhZMmdvS0hCc2IzUXNJR2x1WkdWNEtUMCtld29nSUNBZ0lDQWdJR052Ym5OMElIc2diV0YwWlhKcFlXd2dJSDBnUFNCd2JHOTBPd29nSUNBZ0lDQWdJR052Ym5OMElIc2dkVzVwWm05eWJYTWdJSDBnUFNCdFlYUmxjbWxoYkRzS0lDQWdJQ0FnSUNCcFppQW9jR2xqYTJsdVp5a2dld29nSUNBZ0lDQWdJQ0FnSUNCMWJtbG1iM0p0Y3k1dlltcGxZM1JmYVdRdWRtRnNkV1VnUFNCc1lYTjBYMmxrSUNzZ2FXNWtaWGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20xekxuQnBZMnRwYm1jdWRtRnNkV1VnUFNCMGNuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCdFlYUmxjbWxoYkM1aWJHVnVaR2x1WnlBOUlHMXZaQzVPYjBKc1pXNWthVzVuT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20xekxuQnBZMnRwYm1jdWRtRnNkV1VnUFNCbVlXeHpaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXRjBaWEpwWVd3dVlteGxibVJwYm1jZ1BTQnRiMlF1VG05eWJXRnNRbXhsYm1ScGJtYzdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR2xrSUQwZ2RXNXBabTl5YlhNdWIySnFaV04wWDJsa0xuWmhiSFZsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVdRZ2FXNGdjR2xqYTJWa1gzQnNiM1J6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2JHOTBjeTV3ZFhOb0tGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Ykc5MExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJwWTJ0bFpGOXdiRzkwYzF0cFpGMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1JmZEc5ZmNHeHZkRnRwWkYwZ1BTQndiRzkwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTazdDaUFnSUNCc1pYUWdibVY0ZEY5cFpDQTlJR3hoYzNSZmFXUWdLeUJ6WTJWdVpTNWphR2xzWkhKbGJpNXNaVzVuZEdnN0NpQWdJQ0J6WTJWdVpTNXpZMlZ1WlY5amFHbHNaSEpsYmk1bWIzSkZZV05vS0NoelkyVnVaU2s5UG5zS0lDQWdJQ0FnSUNCdVpYaDBYMmxrSUQwZ2MyVjBYM0JwWTJ0cGJtZGZkVzVwWm05eWJYTW9jMk5sYm1Vc0lHNWxlSFJmYVdRc0lIQnBZMnRwYm1jc0lIQnBZMnRsWkY5d2JHOTBjeXdnY0d4dmRITXNJR2xrWDNSdlgzQnNiM1FwT3dvZ0lDQWdmU2s3Q2lBZ0lDQnlaWFIxY200Z2JtVjRkRjlwWkRzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDI1aGRHbDJaU2h6WTJWdVpTd2dlQ3dnZVN3Z2R5d2dhQ2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QnlaVzVrWlhKbGNpQXNJSEJwWTJ0cGJtZGZkR0Z5WjJWMElDQjlJRDBnYzJObGJtVXVjMk55WldWdU93b2dJQ0FnY21WdVpHVnlaWEl1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLSEJwWTJ0cGJtZGZkR0Z5WjJWMEtUc0tJQ0FnSUhObGRGOXdhV05yYVc1blgzVnVhV1p2Y20xektITmpaVzVsTENBeExDQjBjblZsS1RzS0lDQWdJSEpsYm1SbGNsOXpZMlZ1WlNoelkyVnVaU3dnZEhKMVpTazdDaUFnSUNCeVpXNWtaWEpsY2k1elpYUlNaVzVrWlhKVVlYSm5aWFFvYm5Wc2JDazdDaUFnSUNCamIyNXpkQ0J1WW5sMFpYTWdQU0IzSUNvZ2FDQXFJRFE3Q2lBZ0lDQmpiMjV6ZENCd2FYaGxiRjlpZVhSbGN5QTlJRzVsZHlCVmFXNTBPRUZ5Y21GNUtHNWllWFJsY3lrN0NpQWdJQ0J5Wlc1a1pYSmxjaTV5WldGa1VtVnVaR1Z5VkdGeVoyVjBVR2w0Wld4ektIQnBZMnRwYm1kZmRHRnlaMlYwTENCNExDQjVMQ0IzTENCb0xDQndhWGhsYkY5aWVYUmxjeWs3Q2lBZ0lDQmpiMjV6ZENCd2FXTnJaV1JmY0d4dmRITWdQU0I3ZlRzS0lDQWdJR052Ym5OMElIQnBZMnRsWkY5d2JHOTBjMTloY25KaGVTQTlJRnRkT3dvZ0lDQWdZMjl1YzNRZ2NtVnBiblJsY25CeVpYUmZkbWxsZHlBOUlHNWxkeUJFWVhSaFZtbGxkeWh3YVhobGJGOWllWFJsY3k1aWRXWm1aWElwT3dvZ0lDQWdabTl5S0d4bGRDQnBJRDBnTURzZ2FTQThJSEJwZUdWc1gySjVkR1Z6TG14bGJtZDBhQ0F2SURRN0lHa3JLeWw3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdhV1FnUFNCeVpXbHVkR1Z5Y0hKbGRGOTJhV1YzTG1kbGRGVnBiblF4TmlocElDb2dOQ2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdhVzVrWlhnZ1BTQnlaV2x1ZEdWeWNISmxkRjkyYVdWM0xtZGxkRlZwYm5ReE5paHBJQ29nTkNBcklESXBPd29nSUNBZ0lDQWdJSEJwWTJ0bFpGOXdiRzkwYzE5aGNuSmhlUzV3ZFhOb0tGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdRc0NpQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNENpQWdJQ0FnSUNBZ1hTazdDaUFnSUNBZ0lDQWdjR2xqYTJWa1gzQnNiM1J6VzJsa1hTQTlJR2x1WkdWNE93b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2NHeHZkSE1nUFNCYlhUc0tJQ0FnSUdOdmJuTjBJR2xrWDNSdlgzQnNiM1FnUFNCN2ZUc0tJQ0FnSUhObGRGOXdhV05yYVc1blgzVnVhV1p2Y20xektITmpaVzVsTENBd0xDQm1ZV3h6WlN3Z2NHbGphMlZrWDNCc2IzUnpMQ0J3Ykc5MGN5d2dhV1JmZEc5ZmNHeHZkQ2s3Q2lBZ0lDQmpiMjV6ZENCd2FXTnJaV1JmY0d4dmRITmZiV0YwY21sNElEMGdjR2xqYTJWa1gzQnNiM1J6WDJGeWNtRjVMbTFoY0Nnb1cybGtMQ0JwYm1SbGVGMHBQVDU3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdjQ0E5SUdsa1gzUnZYM0JzYjNSYmFXUmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdJQ0FnSUhBZ1B5QndMbkJzYjNSZmRYVnBaQ0E2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdsdVpHVjRDaUFnSUNBZ0lDQWdYVHNLSUNBZ0lIMHBPd29nSUNBZ1kyOXVjM1FnY0d4dmRGOXRZWFJ5YVhnZ1BTQjdDaUFnSUNBZ0lDQWdaR0YwWVRvZ2NHbGphMlZrWDNCc2IzUnpYMjFoZEhKcGVDd0tJQ0FnSUNBZ0lDQnphWHBsT2lCYkNpQWdJQ0FnSUNBZ0lDQWdJSGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lHZ0tJQ0FnSUNBZ0lDQmRDaUFnSUNCOU93b2dJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0J3Ykc5MFgyMWhkSEpwZUN3S0lDQWdJQ0FnSUNCd2JHOTBjd29nSUNBZ1hUc0tmUXBtZFc1amRHbHZiaUJ3YVdOclgyTnNiM05sYzNRb2MyTmxibVVzSUhoNUxDQnlZVzVuWlNrZ2V3b2dJQ0FnWTI5dWMzUWdleUJ3YVdOcmFXNW5YM1JoY21kbGRDQWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOdmJuTjBJSHNnZDJsa2RHZ2dMQ0JvWldsbmFIUWdJSDBnUFNCd2FXTnJhVzVuWDNSaGNtZGxkRHNLSUNBZ0lHbG1JQ2doS0RFdU1DQThQU0I0ZVZzd1hTQThQU0IzYVdSMGFDQW1KaUF4TGpBZ1BEMGdlSGxiTVYwZ1BEMGdhR1ZwWjJoMEtTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmJDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNCZE93b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2VEQWdQU0JOWVhSb0xtMWhlQ2d4TENCNGVWc3dYU0F0SUhKaGJtZGxLVHNLSUNBZ0lHTnZibk4wSUhrd0lEMGdUV0YwYUM1dFlYZ29NU3dnZUhsYk1WMGdMU0J5WVc1blpTazdDaUFnSUNCamIyNXpkQ0I0TVNBOUlFMWhkR2d1YldsdUtIZHBaSFJvTENCTllYUm9MbVpzYjI5eUtIaDVXekJkSUNzZ2NtRnVaMlVwS1RzS0lDQWdJR052Ym5OMElIa3hJRDBnVFdGMGFDNXRhVzRvYUdWcFoyaDBMQ0JOWVhSb0xtWnNiMjl5S0hoNVd6RmRJQ3NnY21GdVoyVXBLVHNLSUNBZ0lHTnZibk4wSUdSNElEMGdlREVnTFNCNE1Ec0tJQ0FnSUdOdmJuTjBJR1I1SUQwZ2VURWdMU0I1TURzS0lDQWdJR052Ym5OMElGdHdiRzkwWDJSaGRHRXNJRjlkSUQwZ2NHbGphMTl1WVhScGRtVW9jMk5sYm1Vc0lIZ3dMQ0I1TUN3Z1pIZ3NJR1I1S1RzS0lDQWdJR052Ym5OMElIQnNiM1JmYldGMGNtbDRJRDBnY0d4dmRGOWtZWFJoTG1SaGRHRTdDaUFnSUNCc1pYUWdiV2x1WDJScGMzUWdQU0J5WVc1blpTQmVJREk3Q2lBZ0lDQnNaWFFnYzJWc1pXTjBhVzl1SUQwZ1d3b2dJQ0FnSUNBZ0lHNTFiR3dzQ2lBZ0lDQWdJQ0FnTUFvZ0lDQWdYVHNLSUNBZ0lHTnZibk4wSUhnZ1BTQjRlVnN3WFNBcklERWdMU0I0TURzS0lDQWdJR052Ym5OMElIa2dQU0I0ZVZzeFhTQXJJREVnTFNCNU1Ec0tJQ0FnSUd4bGRDQndhVzVrWlhnZ1BTQXdPd29nSUNBZ1ptOXlLR3hsZENCcElEMGdNVHNnYVNBOFBTQmtlRHNnYVNzcktYc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHb2dQU0F4T3lCcUlEdzlJR1I0T3lCcUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JrSUQwZ2VDQXRJR2tnWGlBeUlDc2dLSGtnTFNCcUtTQmVJREk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUZ0d2JHOTBYM1YxYVdRc0lHbHVaR1Y0WFNBOUlIQnNiM1JmYldGMGNtbDRXM0JwYm1SbGVGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhCcGJtUmxlQ0E5SUhCcGJtUmxlQ0FySURFN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa0lEd2diV2x1WDJScGMzUWdKaVlnY0d4dmRGOTFkV2xrS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGFXNWZaR2x6ZENBOUlHUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3hsWTNScGIyNGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHeHZkRjkxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhObGJHVmpkR2x2YmpzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDNOdmNuUmxaQ2h6WTJWdVpTd2dlSGtzSUhKaGJtZGxLU0I3Q2lBZ0lDQmpiMjV6ZENCN0lIQnBZMnRwYm1kZmRHRnlaMlYwSUNCOUlEMGdjMk5sYm1VdWMyTnlaV1Z1T3dvZ0lDQWdZMjl1YzNRZ2V5QjNhV1IwYUNBc0lHaGxhV2RvZENBZ2ZTQTlJSEJwWTJ0cGJtZGZkR0Z5WjJWME93b2dJQ0FnYVdZZ0tDRW9NUzR3SUR3OUlIaDVXekJkSUR3OUlIZHBaSFJvSUNZbUlERXVNQ0E4UFNCNGVWc3hYU0E4UFNCb1pXbG5hSFFwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZzS0lDQWdJQ0FnSUNBZ0lDQWdiblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdNQW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlDaUFnSUNCamIyNXpkQ0I0TUNBOUlFMWhkR2d1YldGNEtERXNJSGg1V3pCZElDMGdjbUZ1WjJVcE93b2dJQ0FnWTI5dWMzUWdlVEFnUFNCTllYUm9MbTFoZUNneExDQjRlVnN4WFNBdElISmhibWRsS1RzS0lDQWdJR052Ym5OMElIZ3hJRDBnVFdGMGFDNXRhVzRvZDJsa2RHZ3NJRTFoZEdndVpteHZiM0lvZUhsYk1GMGdLeUJ5WVc1blpTa3BPd29nSUNBZ1kyOXVjM1FnZVRFZ1BTQk5ZWFJvTG0xcGJpaG9aV2xuYUhRc0lFMWhkR2d1Wm14dmIzSW9lSGxiTVYwZ0t5QnlZVzVuWlNrcE93b2dJQ0FnWTI5dWMzUWdaSGdnUFNCNE1TQXRJSGd3T3dvZ0lDQWdZMjl1YzNRZ1pIa2dQU0I1TVNBdElIa3dPd29nSUNBZ1kyOXVjM1FnVzNCc2IzUmZaR0YwWVN3Z2MyVnNaV04wWldSZElEMGdjR2xqYTE5dVlYUnBkbVVvYzJObGJtVXNJSGd3TENCNU1Dd2daSGdzSUdSNUtUc0tJQ0FnSUdsbUlDaHpaV3hsWTNSbFpDNXNaVzVuZEdnZ1BUMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJiWFRzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhCc2IzUmZiV0YwY21sNElEMGdjR3h2ZEY5a1lYUmhMbVJoZEdFN0NpQWdJQ0JqYjI1emRDQmthWE4wWVc1alpYTWdQU0J6Wld4bFkzUmxaQzV0WVhBb0tIZ3BQVDV5WVc1blpTQmVJRElwT3dvZ0lDQWdZMjl1YzNRZ2VDQTlJSGg1V3pCZElDc2dNU0F0SUhnd093b2dJQ0FnWTI5dWMzUWdlU0E5SUhoNVd6RmRJQ3NnTVNBdElIa3dPd29nSUNBZ2JHVjBJSEJwYm1SbGVDQTlJREE3Q2lBZ0lDQm1iM0lvYkdWMElHa2dQU0F4T3lCcElEdzlJR1I0T3lCcEt5c3Bld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhaUE5SURFN0lHb2dQRDBnWkhnN0lHb3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdRZ1BTQjRJQzBnYVNCZUlESWdLeUFvZVNBdElHb3BJRjRnTWpzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czQnNiM1JmZFhWcFpDd2dhVzVrWlhoZElEMGdjR3h2ZEY5dFlYUnlhWGhiY0dsdVpHVjRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHbHVaR1Y0SUQwZ2NHbHVaR1Y0SUNzZ01Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdjR3h2ZEY5cGJtUmxlQ0E5SUhObGJHVmpkR1ZrTG1acGJtUkpibVJsZUNnb2VDazlQbmhiTUYwdWNHeHZkRjkxZFdsa0lEMDlJSEJzYjNSZmRYVnBaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h3Ykc5MFgybHVaR1Y0SUQ0OUlEQWdKaVlnWkNBOElHUnBjM1JoYm1ObGMxdHdiRzkwWDJsdVpHVjRYU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlZ6VzNCc2IzUmZhVzVrWlhoZElEMGdaRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR052Ym5OMElITnZjblJsWkY5cGJtUnBZMlZ6SUQwZ1FYSnlZWGt1Wm5KdmJTaEJjbkpoZVNoa2FYTjBZVzVqWlhNdWJHVnVaM1JvS1M1clpYbHpLQ2twTG5OdmNuUW9LR0VzSUdJcFBUNWthWE4wWVc1alpYTmJZVjBnUENCa2FYTjBZVzVqWlhOYllsMGdQeUF0TVNBNklHUnBjM1JoYm1ObGMxdGlYU0E4SUdScGMzUmhibU5sYzF0aFhTQjhJREFwT3dvZ0lDQWdjbVYwZFhKdUlITnZjblJsWkY5cGJtUnBZMlZ6TG0xaGNDZ29hV1I0S1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUZ0d2JHOTBMQ0JwYm1SbGVGMGdQU0J6Wld4bFkzUmxaRnRwWkhoZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJSEJzYjNRdWNHeHZkRjkxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwYm1SbGVBb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJ3YVdOclgyNWhkR2wyWlY5MWRXbGtLSE5qWlc1bExDQjRMQ0I1TENCM0xDQm9LU0I3Q2lBZ0lDQmpiMjV6ZENCYlh5d2djR2xqYTJWa1gzQnNiM1J6WFNBOUlIQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRMQ0I1TENCM0xDQm9LVHNLSUNBZ0lISmxkSFZ5YmlCd2FXTnJaV1JmY0d4dmRITXViV0Z3S0NoYmNDd2dhVzVrWlhoZEtUMCtXd29nSUNBZ0lDQWdJQ0FnSUNCd0xuQnNiM1JmZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ0tJQ0FnSUNBZ0lDQmRLVHNLZlFwbWRXNWpkR2x2YmlCd2FXTnJYMjVoZEdsMlpWOXRZWFJ5YVhnb2MyTmxibVVzSUhnc0lIa3NJSGNzSUdncElIc0tJQ0FnSUdOdmJuTjBJRnR0WVhSeWFYZ3NJRjlkSUQwZ2NHbGphMTl1WVhScGRtVW9jMk5sYm1Vc0lIZ3NJSGtzSUhjc0lHZ3BPd29nSUNBZ2NtVjBkWEp1SUcxaGRISnBlRHNLZlFwbWRXNWpkR2x2YmlCeVpXZHBjM1JsY2w5d2IzQjFjQ2h3YjNCMWNDd2djMk5sYm1Vc0lIQnNiM1J6WDNSdlgzQnBZMnNzSUdOaGJHeGlZV05yS1NCN0NpQWdJQ0JwWmlBb0lYTmpaVzVsSUh4OElDRnpZMlZ1WlM1elkzSmxaVzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQjlDaUFnSUNCamIyNXpkQ0I3SUdOaGJuWmhjeUFnZlNBOUlITmpaVzVsTG5OamNtVmxianNLSUNBZ0lHTmhiblpoY3k1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKdGIzVnpaV1J2ZDI0aUxDQW9aWFpsYm5RcFBUNTdDaUFnSUNBZ0lDQWdhV1lnS0NGd2IzQjFjQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vSW5Ob2IzY2lLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1amJHRnpjMHhwYzNRdVlXUmtLQ0p6YUc5M0lpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEJ2Y0hWd0xuTjBlV3hsTG14bFpuUWdQU0JsZG1WdWRDNXdZV2RsV0NBcklDSndlQ0k3Q2lBZ0lDQWdJQ0FnY0c5d2RYQXVjM1I1YkdVdWRHOXdJRDBnWlhabGJuUXVjR0ZuWlZrZ0t5QWljSGdpT3dvZ0lDQWdJQ0FnSUdOdmJuTjBJRnQ0TENCNVhTQTlJRmRIVEUxaGEybGxMbVYyWlc1ME1uTmpaVzVsWDNCcGVHVnNLSE5qWlc1bExDQmxkbVZ1ZENrN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnVzE4c0lIQnBZMnR6WFNBOUlGZEhURTFoYTJsbExuQnBZMnRmYm1GMGFYWmxLSE5qWlc1bExDQjRMQ0I1TENBeExDQXhLVHNLSUNBZ0lDQWdJQ0JwWmlBb2NHbGphM011YkdWdVozUm9JRDA5SURFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdXM0JzYjNRc0lHbHVaR1Y0WFNBOUlIQnBZMnR6V3pCZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NHeHZkSE5mZEc5ZmNHbGpheTVvWVhNb2NHeHZkQzV3Ykc5MFgzVjFhV1FwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J5WlhOMWJIUWdQU0JqWVd4c1ltRmpheWh3Ykc5MExDQnBibVJsZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlISmxjM1ZzZENBOVBUMGdJbk4wY21sdVp5SWdmSHdnY21WemRXeDBJR2x1YzNSaGJtTmxiMllnVTNSeWFXNW5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NHOXdkWEF1YVc1dVpYSlVaWGgwSUQwZ2NtVnpkV3gwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzQjFjQzVwYm01bGNraFVUVXdnUFNCeVpYTjFiSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J3YjNCMWNDNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDSnphRzkzSWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlNrN0NpQWdJQ0JqWVc1MllYTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2lhMlY1ZFhBaUxDQW9aWFpsYm5RcFBUNTdDaUFnSUNBZ0lDQWdhV1lnS0dWMlpXNTBMbXRsZVNBOVBUMGdJa1Z6WTJGd1pTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NHOXdkWEF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2dpYzJodmR5SXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd3A5Q25kcGJtUnZkeTVYUjB3Z1BTQjdDaUFnSUNCa1pYTmxjbWxoYkdsNlpWOXpZMlZ1WlN3S0lDQWdJSFJvY21WbGFuTmZiVzlrZFd4bExBb2dJQ0FnYzNSaGNuUmZjbVZ1WkdWeWJHOXZjQ3dLSUNBZ0lHUmxiR1YwWlY5d2JHOTBjeXdLSUNBZ0lHbHVjMlZ5ZEY5d2JHOTBMQW9nSUNBZ1ptbHVaRjl3Ykc5MGN5d0tJQ0FnSUdSbGJHVjBaVjl6WTJWdVpTd0tJQ0FnSUdacGJtUmZjMk5sYm1Vc0NpQWdJQ0J6WTJWdVpWOWpZV05vWlN3S0lDQWdJSEJzYjNSZlkyRmphR1VzQ2lBZ0lDQmtaV3hsZEdWZmMyTmxibVZ6TEFvZ0lDQWdZM0psWVhSbFgzTmpaVzVsTEFvZ0lDQWdaWFpsYm5ReWMyTmxibVZmY0dsNFpXd3NDaUFnSUNCdmJsOXVaWGgwWDJsdWMyVnlkQXA5T3dwbGVIQnZjblFnZXlCa1pYTmxjbWxoYkdsNlpWOXpZMlZ1WlNCaGN5QmtaWE5sY21saGJHbDZaVjl6WTJWdVpTd2dkR2h5WldWcWMxOXRiMlIxYkdVZ1lYTWdkR2h5WldWcWMxOXRiMlIxYkdVc0lITjBZWEowWDNKbGJtUmxjbXh2YjNBZ1lYTWdjM1JoY25SZmNtVnVaR1Z5Ykc5dmNDd2daR1ZzWlhSbFgzQnNiM1J6SUdGeklHUmxiR1YwWlY5d2JHOTBjeXdnYVc1elpYSjBYM0JzYjNRZ1lYTWdhVzV6WlhKMFgzQnNiM1FzSUdacGJtUmZjR3h2ZEhNZ1lYTWdabWx1WkY5d2JHOTBjeXdnWkdWc1pYUmxYM05qWlc1bElHRnpJR1JsYkdWMFpWOXpZMlZ1WlN3Z1ptbHVaRjl6WTJWdVpTQmhjeUJtYVc1a1gzTmpaVzVsTENCelkyVnVaVjlqWVdOb1pTQmhjeUJ6WTJWdVpWOWpZV05vWlN3Z2NHeHZkRjlqWVdOb1pTQmhjeUJ3Ykc5MFgyTmhZMmhsTENCa1pXeGxkR1ZmYzJObGJtVnpJR0Z6SUdSbGJHVjBaVjl6WTJWdVpYTXNJR055WldGMFpWOXpZMlZ1WlNCaGN5QmpjbVZoZEdWZmMyTmxibVVzSUdWMlpXNTBNbk5qWlc1bFgzQnBlR1ZzSUdGeklHVjJaVzUwTW5OalpXNWxYM0JwZUdWc0xDQnZibDl1WlhoMFgybHVjMlZ5ZENCaGN5QnZibDl1WlhoMFgybHVjMlZ5ZENCOU93cGxlSEJ2Y25RZ2V5QnlaVzVrWlhKZmMyTmxibVVnWVhNZ2NtVnVaR1Z5WDNOalpXNWxJSDA3Q21WNGNHOXlkQ0I3SUhCcFkydGZibUYwYVhabElHRnpJSEJwWTJ0ZmJtRjBhWFpsSUgwN0NtVjRjRzl5ZENCN0lIQnBZMnRmWTJ4dmMyVnpkQ0JoY3lCd2FXTnJYMk5zYjNObGMzUWdmVHNLWlhod2IzSjBJSHNnY0dsamExOXpiM0owWldRZ1lYTWdjR2xqYTE5emIzSjBaV1FnZlRzS1pYaHdiM0owSUhzZ2NHbGphMTl1WVhScGRtVmZkWFZwWkNCaGN5QndhV05yWDI1aGRHbDJaVjkxZFdsa0lIMDdDbVY0Y0c5eWRDQjdJSEJwWTJ0ZmJtRjBhWFpsWDIxaGRISnBlQ0JoY3lCd2FXTnJYMjVoZEdsMlpWOXRZWFJ5YVhnZ2ZUc0taWGh3YjNKMElIc2djbVZuYVhOMFpYSmZjRzl3ZFhBZ1lYTWdjbVZuYVhOMFpYSmZjRzl3ZFhBZ2ZUc0tDZz09YDsKICAgICAgICAgICAgcmV0dXJuIGltcG9ydChKU1NFUlZFX0lNUE9SVFNbJ2NjNGM2YWE2YTFmMDZhMWI1MDEzYmNhMDE3MDJmMzZhMTg0YzA0Mzktd2dsbWFraWUuanMnXSk7CiAgICAgICAgfSkoKS50aGVuKFdHTCA9PiB7CiAgICAvLyB3ZWxsLi4uLiBub3QgbmljZSwgYnV0IGNhbid0IGRlYWwgd2l0aCB0aGUgYFByb21pc2VgIGluIGFsbCB0aGUgb3RoZXIgZnVuY3Rpb25zCiAgICB3aW5kb3cuV0dMTWFraWUgPSBXR0wKICAgIFdHTC5jcmVhdGVfc2NlbmUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSIzIl0nKSwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSI0Il0nKSwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCczMTc0NDUxMjUzMjg1MzYxODM5JyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnMzU2OTgxNTI4NzY4NDQzNTM5OScpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzEzMzEzNTM3ODMxNDM2MjQzNTAxJyksIDgwMCwgNjAwLCAzMC4wLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzgxNDU4NDY4ODcxODM2NjEzODEnKSkKICAgIF9fbG9va3VwX2ludGVycG9sYXRlZCgnMTUxMzQ4MDA3NDQ5NTM2MDAzOCcpLm5vdGlmeSh0cnVlKQp9KQrZQS9ob21lL3J1bm5lci93b3JrL01ha2llLmpsL01ha2llLmpsL1dHTE1ha2llL3NyYy90aHJlZV9wbG90LmpsOjU0qG1zZ190eXBloTKobXNnX3R5cGWhOQ==').then(msgs=> JSServe.init_session('b7210ed3-a91d-465b-9c27-667bef4d90e7', msgs, 'sub'));
" type="module"></script>
  <div id="b7210ed3-a91d-465b-9c27-667bef4d90e7" data-jscall-id="subsession-application-dom">
    <div data-jscall-id="3">
      <canvas data-jscall-id="4" tabindex="0"></canvas>
    </div>
  </div>
  <div>
    <script src="data:application/javascript;base64,// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var ca = "136", Gy = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2,
    ROTATE: 0,
    DOLLY: 1,
    PAN: 2
}, Vy = {
    ROTATE: 0,
    PAN: 1,
    DOLLY_PAN: 2,
    DOLLY_ROTATE: 3
}, uu = 0, tl = 1, du = 2, Wy = 3, qy = 0, Hc = 1, fu = 2, ir = 3, Ai = 0, it = 1, Ci = 2, kc = 1, Xy = 2, vn = 0, sr = 1, nl = 2, il = 3, rl = 4, pu = 5, _i = 100, mu = 101, gu = 102, sl = 103, ol = 104, xu = 200, yu = 201, vu = 202, _u = 203, Gc = 204, Vc = 205, Mu = 206, bu = 207, wu = 208, Su = 209, Tu = 210, Eu = 0, Au = 1, Cu = 2, ea = 3, Lu = 4, Ru = 5, Pu = 6, Iu = 7, Vs = 0, Du = 1, Fu = 2, _n = 0, Nu = 1, Bu = 2, zu = 3, Uu = 4, Ou = 5, ha = 300, Bi = 301, zi = 302, Ds = 303, Fs = 304, Pr = 306, Ws = 307, Ns = 1e3, vt = 1001, Bs = 1002, rt = 1003, ta = 1004, Jy = 1004, na = 1005, Yy = 1005, tt = 1006, Wc = 1007, Zy = 1007, Ui = 1008, $y = 1008, rn = 1009, Hu = 1010, ku = 1011, cr = 1012, Gu = 1013, Ps = 1014, nn = 1015, kn = 1016, Vu = 1017, Wu = 1018, qu = 1019, Ti = 1020, Xu = 1021, Gn = 1022, ct = 1023, Ju = 1024, Yu = 1025, Vn = 1026, Li = 1027, Zu = 1028, $u = 1029, ju = 1030, Qu = 1031, Ku = 1032, ed = 1033, al = 33776, ll = 33777, cl = 33778, hl = 33779, ul = 35840, dl = 35841, fl = 35842, pl = 35843, td = 36196, ml = 37492, gl = 37496, nd = 37808, id = 37809, rd = 37810, sd = 37811, od = 37812, ad = 37813, ld = 37814, cd = 37815, hd = 37816, ud = 37817, dd = 37818, fd = 37819, pd = 37820, md = 37821, gd = 36492, xd = 37840, yd = 37841, vd = 37842, _d = 37843, Md = 37844, bd = 37845, wd = 37846, Sd = 37847, Td = 37848, Ed = 37849, Ad = 37850, Cd = 37851, Ld = 37852, Rd = 37853, Pd = 2200, Id = 2201, Dd = 2202, zs = 2300, Us = 2301, yo = 2302, Mi = 2400, bi = 2401, Os = 2402, ua = 2500, qc = 2501, Fd = 0, jy = 1, Qy = 2, Nt = 3e3, Oi = 3001, Nd = 3200, Bd = 3201, Hi = 0, zd = 1, Ky = 0, vo = 7680, e0 = 7681, t0 = 7682, n0 = 7683, i0 = 34055, r0 = 34056, s0 = 5386, o0 = 512, a0 = 513, l0 = 514, c0 = 515, h0 = 516, u0 = 517, d0 = 518, Ud = 519, hr = 35044, ur = 35048, f0 = 35040, p0 = 35045, m0 = 35049, g0 = 35041, x0 = 35046, y0 = 35050, v0 = 35042, _0 = "100", xl = "300 es", En = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        let n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        let n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        let i = this._listeners[e];
        if (i !== void 0) {
            let r = i.indexOf(t);
            r !== -1 && i.splice(r, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        let n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            let i = n.slice(0);
            for(let r = 0, o = i.length; r < o; r++)i[r].call(this, e);
            e.target = null;
        }
    }
}, pt = [];
for(let s = 0; s < 256; s++)pt[s] = (s < 16 ? "0" : "") + s.toString(16);
var Vr = 1234567, Wn = Math.PI / 180, dr = 180 / Math.PI;
function Et() {
    let s = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0;
    return (pt[s & 255] + pt[s >> 8 & 255] + pt[s >> 16 & 255] + pt[s >> 24 & 255] + "-" + pt[e & 255] + pt[e >> 8 & 255] + "-" + pt[e >> 16 & 15 | 64] + pt[e >> 24 & 255] + "-" + pt[t & 63 | 128] + pt[t >> 8 & 255] + "-" + pt[t >> 16 & 255] + pt[t >> 24 & 255] + pt[n & 255] + pt[n >> 8 & 255] + pt[n >> 16 & 255] + pt[n >> 24 & 255]).toUpperCase();
}
function mt(s, e, t) {
    return Math.max(e, Math.min(t, s));
}
function da(s, e) {
    return (s % e + e) % e;
}
function Od(s, e, t, n, i) {
    return n + (s - e) * (i - n) / (t - e);
}
function Hd(s, e, t) {
    return s !== e ? (t - s) / (e - s) : 0;
}
function or(s, e, t) {
    return (1 - t) * s + t * e;
}
function kd(s, e, t, n) {
    return or(s, e, 1 - Math.exp(-t * n));
}
function Gd(s, e = 1) {
    return e - Math.abs(da(s, e * 2) - e);
}
function Vd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * (3 - 2 * s));
}
function Wd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * s * (s * (s * 6 - 15) + 10));
}
function qd(s, e) {
    return s + Math.floor(Math.random() * (e - s + 1));
}
function Xd(s, e) {
    return s + Math.random() * (e - s);
}
function Jd(s) {
    return s * (.5 - Math.random());
}
function Yd(s) {
    return s !== void 0 && (Vr = s % 2147483647), Vr = Vr * 16807 % 2147483647, (Vr - 1) / 2147483646;
}
function Zd(s) {
    return s * Wn;
}
function $d(s) {
    return s * dr;
}
function ia(s) {
    return (s & s - 1) === 0 && s !== 0;
}
function Xc(s) {
    return Math.pow(2, Math.ceil(Math.log(s) / Math.LN2));
}
function Jc(s) {
    return Math.pow(2, Math.floor(Math.log(s) / Math.LN2));
}
function jd(s, e, t, n, i) {
    let r = Math.cos, o = Math.sin, a = r(t / 2), l = o(t / 2), c = r((e + n) / 2), h = o((e + n) / 2), u = r((e - n) / 2), d = o((e - n) / 2), f = r((n - e) / 2), m = o((n - e) / 2);
    switch(i){
        case "XYX":
            s.set(a * h, l * u, l * d, a * c);
            break;
        case "YZY":
            s.set(l * d, a * h, l * u, a * c);
            break;
        case "ZXZ":
            s.set(l * u, l * d, a * h, a * c);
            break;
        case "XZX":
            s.set(a * h, l * m, l * f, a * c);
            break;
        case "YXY":
            s.set(l * f, a * h, l * m, a * c);
            break;
        case "ZYZ":
            s.set(l * m, l * f, a * h, a * c);
            break;
        default:
            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
    }
}
var M0 = Object.freeze({
    __proto__: null,
    DEG2RAD: Wn,
    RAD2DEG: dr,
    generateUUID: Et,
    clamp: mt,
    euclideanModulo: da,
    mapLinear: Od,
    inverseLerp: Hd,
    lerp: or,
    damp: kd,
    pingpong: Gd,
    smoothstep: Vd,
    smootherstep: Wd,
    randInt: qd,
    randFloat: Xd,
    randFloatSpread: Jd,
    seededRandom: Yd,
    degToRad: Zd,
    radToDeg: $d,
    isPowerOfTwo: ia,
    ceilPowerOfTwo: Xc,
    floorPowerOfTwo: Jc,
    setQuaternionFromProperEuler: jd
}), X = class {
    constructor(e = 0, t = 0){
        this.x = e, this.y = t;
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return this.x = e, this.y = t, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this;
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
    }
    rotateAround(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
        return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
};
X.prototype.isVector2 = !0;
var lt = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c) {
        let h = this.elements;
        return h[0] = e, h[1] = i, h[2] = a, h[3] = t, h[4] = r, h[5] = l, h[6] = n, h[7] = o, h[8] = c, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;
    }
    setFromMatrix4(e) {
        let t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[3], l = n[6], c = n[1], h = n[4], u = n[7], d = n[2], f = n[5], m = n[8], x = i[0], v = i[3], g = i[6], p = i[1], _ = i[4], y = i[7], b = i[2], A = i[5], L = i[8];
        return r[0] = o * x + a * p + l * b, r[3] = o * v + a * _ + l * A, r[6] = o * g + a * y + l * L, r[1] = c * x + h * p + u * b, r[4] = c * v + h * _ + u * A, r[7] = c * g + h * y + u * L, r[2] = d * x + f * p + m * b, r[5] = d * v + f * _ + m * A, r[8] = d * g + f * y + m * L, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8];
        return t * o * h - t * a * c - n * r * h + n * a * l + i * r * c - i * o * l;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = h * o - a * c, d = a * l - h * r, f = c * r - o * l, m = t * u + n * d + i * f;
        if (m === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        let x = 1 / m;
        return e[0] = u * x, e[1] = (i * c - h * n) * x, e[2] = (a * n - i * o) * x, e[3] = d * x, e[4] = (h * t - i * l) * x, e[5] = (i * r - a * t) * x, e[6] = f * x, e[7] = (n * l - c * t) * x, e[8] = (o * t - n * r) * x, this;
    }
    transpose() {
        let e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        let t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
    }
    setUvTransform(e, t, n, i, r, o, a) {
        let l = Math.cos(r), c = Math.sin(r);
        return this.set(n * l, n * c, -n * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + t, 0, 0, 1), this;
    }
    scale(e, t) {
        let n = this.elements;
        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
    }
    rotate(e) {
        let t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], a = i[6], l = i[1], c = i[4], h = i[7];
        return i[0] = t * r + n * l, i[3] = t * o + n * c, i[6] = t * a + n * h, i[1] = -n * r + t * l, i[4] = -n * o + t * c, i[7] = -n * a + t * h, this;
    }
    translate(e, t) {
        let n = this.elements;
        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 9; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 9; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
};
lt.prototype.isMatrix3 = !0;
function Yc(s) {
    if (s.length === 0) return -1 / 0;
    let e = s[0];
    for(let t = 1, n = s.length; t < n; ++t)s[t] > e && (e = s[t]);
    return e;
}
var Qd = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array
};
function wi(s, e) {
    return new Qd[s](e);
}
function qs(s) {
    return document.createElementNS("http://www.w3.org/1999/xhtml", s);
}
var ti, Yn = class {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            ti === void 0 && (ti = qs("canvas")), ti.width = e.width, ti.height = e.height;
            let n = ti.getContext("2d");
            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = ti;
        }
        return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png");
    }
}, Kd = 0, ot = class extends En {
    constructor(e = ot.DEFAULT_IMAGE, t = ot.DEFAULT_MAPPING, n = vt, i = vt, r = tt, o = Ui, a = ct, l = rn, c = 1, h = Nt){
        super();
        Object.defineProperty(this, "id", {
            value: Kd++
        }), this.uuid = Et(), this.name = "", this.image = e, this.mipmaps = [], this.mapping = t, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new X(0, 0), this.repeat = new X(1, 1), this.center = new X(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new lt, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = h, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1;
    }
    updateMatrix() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
        let n = {
            metadata: {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [
                this.repeat.x,
                this.repeat.y
            ],
            offset: [
                this.offset.x,
                this.offset.y
            ],
            center: [
                this.center.x,
                this.center.y
            ],
            rotation: this.rotation,
            wrap: [
                this.wrapS,
                this.wrapT
            ],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        if (this.image !== void 0) {
            let i = this.image;
            if (i.uuid === void 0 && (i.uuid = Et()), !t && e.images[i.uuid] === void 0) {
                let r;
                if (Array.isArray(i)) {
                    r = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? r.push(_o(i[o].image)) : r.push(_o(i[o]));
                } else r = _o(i);
                e.images[i.uuid] = {
                    uuid: i.uuid,
                    url: r
                };
            }
            n.image = i.uuid;
        }
        return JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData), t || (e.textures[this.uuid] = n), n;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    transformUv(e) {
        if (this.mapping !== ha) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
            case Ns:
                e.x = e.x - Math.floor(e.x);
                break;
            case vt:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                break;
        }
        if (e.y < 0 || e.y > 1) switch(this.wrapT){
            case Ns:
                e.y = e.y - Math.floor(e.y);
                break;
            case vt:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                break;
        }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
ot.DEFAULT_IMAGE = void 0;
ot.DEFAULT_MAPPING = ha;
ot.prototype.isTexture = !0;
function _o(s) {
    return typeof HTMLImageElement < "u" && s instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && s instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && s instanceof ImageBitmap ? Yn.getDataURL(s) : s.data ? {
        data: Array.prototype.slice.call(s.data),
        width: s.width,
        height: s.height,
        type: s.data.constructor.name
    } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
var Ve = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this.x = e, this.y = t, this.z = n, this.w = i;
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return this.x = e, this.y = t, this.z = n, this.w = i, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this.w = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setW(e) {
        return this.w = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this.w += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        let t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, r, l = e.elements, c = l[0], h = l[4], u = l[8], d = l[1], f = l[5], m = l[9], x = l[2], v = l[6], g = l[10];
        if (Math.abs(h - d) < .01 && Math.abs(u - x) < .01 && Math.abs(m - v) < .01) {
            if (Math.abs(h + d) < .1 && Math.abs(u + x) < .1 && Math.abs(m + v) < .1 && Math.abs(c + f + g - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let _ = (c + 1) / 2, y = (f + 1) / 2, b = (g + 1) / 2, A = (h + d) / 4, L = (u + x) / 4, I = (m + v) / 4;
            return _ > y && _ > b ? _ < .01 ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(_), i = A / n, r = L / n) : y > b ? y < .01 ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(y), n = A / i, r = I / i) : b < .01 ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(b), n = L / r, i = I / r), this.set(n, i, r, t), this;
        }
        let p = Math.sqrt((v - m) * (v - m) + (u - x) * (u - x) + (d - h) * (d - h));
        return Math.abs(p) < .001 && (p = 1), this.x = (v - m) / p, this.y = (u - x) / p, this.z = (d - h) / p, this.w = Math.acos((c + f + g - 1) / 2), this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
};
Ve.prototype.isVector4 = !0;
var At = class extends En {
    constructor(e, t, n = {}){
        super();
        this.width = e, this.height = t, this.depth = 1, this.scissor = new Ve(0, 0, e, t), this.scissorTest = !1, this.viewport = new Ve(0, 0, e, t), this.texture = new ot(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = !0, this.texture.image = {
            width: e,
            height: t,
            depth: 1
        }, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.internalFormat = n.internalFormat !== void 0 ? n.internalFormat : null, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : tt, this.depthBuffer = n.depthBuffer !== void 0 ? n.depthBuffer : !0, this.stencilBuffer = n.stencilBuffer !== void 0 ? n.stencilBuffer : !1, this.depthTexture = n.depthTexture !== void 0 ? n.depthTexture : null;
    }
    setTexture(e) {
        e.image = {
            width: this.width,
            height: this.height,
            depth: this.depth
        }, this.texture = e;
    }
    setSize(e, t, n = 1) {
        (this.width !== e || this.height !== t || this.depth !== n) && (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = {
            ...this.texture.image
        }, this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
At.prototype.isWebGLRenderTarget = !0;
var Zc = class extends At {
    constructor(e, t, n){
        super(e, t);
        let i = this.texture;
        this.texture = [];
        for(let r = 0; r < n; r++)this.texture[r] = i.clone();
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            this.width = e, this.height = t, this.depth = n;
            for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = n;
            this.dispose();
        }
        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this;
    }
    copy(e) {
        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
        for(let t = 0, n = e.texture.length; t < n; t++)this.texture[t] = e.texture[t].clone();
        return this;
    }
};
Zc.prototype.isWebGLMultipleRenderTargets = !0;
var Xs = class extends At {
    constructor(e, t, n = {}){
        super(e, t, n);
        this.samples = 4, this.ignoreDepthForMultisampleCopy = n.ignoreDepth !== void 0 ? n.ignoreDepth : !0, this.useRenderToTexture = n.useRenderToTexture !== void 0 ? n.useRenderToTexture : !1, this.useRenderbuffer = this.useRenderToTexture === !1;
    }
    copy(e) {
        return super.copy.call(this, e), this.samples = e.samples, this.useRenderToTexture = e.useRenderToTexture, this.useRenderbuffer = e.useRenderbuffer, this;
    }
};
Xs.prototype.isWebGLMultisampleRenderTarget = !0;
var gt = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this._x = e, this._y = t, this._z = n, this._w = i;
    }
    static slerp(e, t, n, i) {
        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, i);
    }
    static slerpFlat(e, t, n, i, r, o, a) {
        let l = n[i + 0], c = n[i + 1], h = n[i + 2], u = n[i + 3], d = r[o + 0], f = r[o + 1], m = r[o + 2], x = r[o + 3];
        if (a === 0) {
            e[t + 0] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
            return;
        }
        if (a === 1) {
            e[t + 0] = d, e[t + 1] = f, e[t + 2] = m, e[t + 3] = x;
            return;
        }
        if (u !== x || l !== d || c !== f || h !== m) {
            let v = 1 - a, g = l * d + c * f + h * m + u * x, p = g >= 0 ? 1 : -1, _ = 1 - g * g;
            if (_ > Number.EPSILON) {
                let b = Math.sqrt(_), A = Math.atan2(b, g * p);
                v = Math.sin(v * A) / b, a = Math.sin(a * A) / b;
            }
            let y = a * p;
            if (l = l * v + d * y, c = c * v + f * y, h = h * v + m * y, u = u * v + x * y, v === 1 - a) {
                let b1 = 1 / Math.sqrt(l * l + c * c + h * h + u * u);
                l *= b1, c *= b1, h *= b1, u *= b1;
            }
        }
        e[t] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
    }
    static multiplyQuaternionsFlat(e, t, n, i, r, o) {
        let a = n[i], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o], d = r[o + 1], f = r[o + 2], m = r[o + 3];
        return e[t] = a * m + h * u + l * f - c * d, e[t + 1] = l * m + h * d + c * u - a * f, e[t + 2] = c * m + h * f + a * d - l * u, e[t + 3] = h * m - a * u - l * d - c * f, e;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        this._w = e, this._onChangeCallback();
    }
    set(e, t, n, i) {
        return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
    }
    setFromEuler(e, t) {
        if (!(e && e.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        let n = e._x, i = e._y, r = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(n / 2), h = a(i / 2), u = a(r / 2), d = l(n / 2), f = l(i / 2), m = l(r / 2);
        switch(o){
            case "XYZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "YXZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "ZXY":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "ZYX":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "YZX":
                this._x = d * h * u + c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "XZY":
                this._x = d * h * u - c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u + d * f * m;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
        }
        return t !== !1 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        let n = t / 2, i = Math.sin(n);
        return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e) {
        let t = e.elements, n = t[0], i = t[4], r = t[8], o = t[1], a = t[5], l = t[9], c = t[2], h = t[6], u = t[10], d = n + a + u;
        if (d > 0) {
            let f = .5 / Math.sqrt(d + 1);
            this._w = .25 / f, this._x = (h - l) * f, this._y = (r - c) * f, this._z = (o - i) * f;
        } else if (n > a && n > u) {
            let f1 = 2 * Math.sqrt(1 + n - a - u);
            this._w = (h - l) / f1, this._x = .25 * f1, this._y = (i + o) / f1, this._z = (r + c) / f1;
        } else if (a > u) {
            let f2 = 2 * Math.sqrt(1 + a - n - u);
            this._w = (r - c) / f2, this._x = (i + o) / f2, this._y = .25 * f2, this._z = (l + h) / f2;
        } else {
            let f3 = 2 * Math.sqrt(1 + u - n - a);
            this._w = (o - i) / f3, this._x = (r + c) / f3, this._y = (l + h) / f3, this._z = .25 * f3;
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(mt(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        let n = this.angleTo(e);
        if (n === 0) return this;
        let i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
    }
    dot(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    }
    lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
        let e = this.length();
        return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        let n = e._x, i = e._y, r = e._z, o = e._w, a = t._x, l = t._y, c = t._z, h = t._w;
        return this._x = n * h + o * a + i * c - r * l, this._y = i * h + o * l + r * a - n * c, this._z = r * h + o * c + n * l - i * a, this._w = o * h - n * a - i * l - r * c, this._onChangeCallback(), this;
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        let n = this._x, i = this._y, r = this._z, o = this._w, a = o * e._w + n * e._x + i * e._y + r * e._z;
        if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
        let l = 1 - a * a;
        if (l <= Number.EPSILON) {
            let f = 1 - t;
            return this._w = f * o + t * this._w, this._x = f * n + t * this._x, this._y = f * i + t * this._y, this._z = f * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        let c = Math.sqrt(l), h = Math.atan2(c, a), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
        return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
    }
    slerpQuaternions(e, t, n) {
        this.copy(e).slerp(t, n);
    }
    random() {
        let e = Math.random(), t = Math.sqrt(1 - e), n = Math.sqrt(e), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();
        return this.set(t * Math.cos(i), n * Math.sin(r), n * Math.cos(r), t * Math.sin(i));
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    }
    fromArray(e, t = 0) {
        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
    }
    fromBufferAttribute(e, t) {
        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
gt.prototype.isQuaternion = !0;
var M = class {
    constructor(e = 0, t = 0, n = 0){
        this.x = e, this.y = t, this.z = n;
    }
    set(e, t, n) {
        return n === void 0 && (n = this.z), this.x = e, this.y = t, this.z = n, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this;
    }
    multiplyVectors(e, t) {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
    }
    applyEuler(e) {
        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(yl.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(yl.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
    }
    applyQuaternion(e) {
        let t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, a = e.z, l = e.w, c = l * t + o * i - a * n, h = l * n + a * t - r * i, u = l * i + r * n - o * t, d = -r * t - o * n - a * i;
        return this.x = c * l + d * -r + h * -a - u * -o, this.y = h * l + d * -o + u * -r - c * -a, this.z = u * l + d * -a + c * -o - h * -r, this;
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
    }
    transformDirection(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this;
    }
    cross(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        let n = e.x, i = e.y, r = e.z, o = t.x, a = t.y, l = t.z;
        return this.x = i * l - r * a, this.y = r * o - n * l, this.z = n * a - i * o, this;
    }
    projectOnVector(e) {
        let t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        let n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return Mo.copy(this).projectOnVector(e), this.sub(Mo);
    }
    reflect(e) {
        return this.sub(Mo.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(mt(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        let i = Math.sin(t) * e;
        return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
    }
    setFromMatrixPosition(e) {
        let t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this;
    }
    setFromMatrixScale(e) {
        let t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = i, this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
    }
    randomDirection() {
        let e = (Math.random() - .5) * 2, t = Math.random() * Math.PI * 2, n = Math.sqrt(1 - e ** 2);
        return this.x = n * Math.cos(t), this.y = n * Math.sin(t), this.z = e, this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
};
M.prototype.isVector3 = !0;
var Mo = new M, yl = new gt, Lt = class {
    constructor(e = new M(1 / 0, 1 / 0, 1 / 0), t = new M(-1 / 0, -1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.length; l < c; l += 3){
            let h = e[l], u = e[l + 1], d = e[l + 2];
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromBufferAttribute(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.count; l < c; l++){
            let h = e.getX(l), u = e.getY(l), d = e.getZ(l);
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ji.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e) {
        return this.makeEmpty(), this.expandByObject(e);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e) {
        e.updateWorldMatrix(!1, !1);
        let t = e.geometry;
        t !== void 0 && (t.boundingBox === null && t.computeBoundingBox(), bo.copy(t.boundingBox), bo.applyMatrix4(e.matrixWorld), this.union(bo));
        let n = e.children;
        for(let i = 0, r = n.length; i < r; i++)this.expandByObject(n[i]);
        return this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
    }
    intersectsSphere(e) {
        return this.clampPoint(e.center, Ji), Ji.distanceToSquared(e.center) <= e.radius * e.radius;
    }
    intersectsPlane(e) {
        let t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(Yi), Wr.subVectors(this.max, Yi), ni.subVectors(e.a, Yi), ii.subVectors(e.b, Yi), ri.subVectors(e.c, Yi), un.subVectors(ii, ni), dn.subVectors(ri, ii), Pn.subVectors(ni, ri);
        let t = [
            0,
            -un.z,
            un.y,
            0,
            -dn.z,
            dn.y,
            0,
            -Pn.z,
            Pn.y,
            un.z,
            0,
            -un.x,
            dn.z,
            0,
            -dn.x,
            Pn.z,
            0,
            -Pn.x,
            -un.y,
            un.x,
            0,
            -dn.y,
            dn.x,
            0,
            -Pn.y,
            Pn.x,
            0
        ];
        return !wo(t, ni, ii, ri, Wr) || (t = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], !wo(t, ni, ii, ri, Wr)) ? !1 : (qr.crossVectors(un, dn), t = [
            qr.x,
            qr.y,
            qr.z
        ], wo(t, ni, ii, ri, Wr));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ji.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    getBoundingSphere(e) {
        return this.getCenter(e.center), e.radius = this.getSize(Ji).length() * .5, e;
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty() ? this : ($t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), $t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), $t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), $t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), $t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), $t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), $t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), $t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints($t), this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
Lt.prototype.isBox3 = !0;
var $t = [
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M
], Ji = new M, bo = new Lt, ni = new M, ii = new M, ri = new M, un = new M, dn = new M, Pn = new M, Yi = new M, Wr = new M, qr = new M, In = new M;
function wo(s, e, t, n, i) {
    for(let r = 0, o = s.length - 3; r <= o; r += 3){
        In.fromArray(s, r);
        let a = i.x * Math.abs(In.x) + i.y * Math.abs(In.y) + i.z * Math.abs(In.z), l = e.dot(In), c = t.dot(In), h = n.dot(In);
        if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return !1;
    }
    return !0;
}
var ef = new Lt, vl = new M, Xr = new M, So = new M, An = class {
    constructor(e = new M, t = -1){
        this.center = e, this.radius = t;
    }
    set(e, t) {
        return this.center.copy(e), this.radius = t, this;
    }
    setFromPoints(e, t) {
        let n = this.center;
        t !== void 0 ? n.copy(t) : ef.setFromPoints(e).getCenter(n);
        let i = 0;
        for(let r = 0, o = e.length; r < o; r++)i = Math.max(i, n.distanceToSquared(e[r]));
        return this.radius = Math.sqrt(i), this;
    }
    copy(e) {
        return this.center.copy(e.center), this.radius = e.radius, this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), this.radius = -1, this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        let t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        let n = this.center.distanceToSquared(e);
        return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
    }
    getBoundingBox(e) {
        return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
    }
    applyMatrix4(e) {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        So.subVectors(e, this.center);
        let t = So.lengthSq();
        if (t > this.radius * this.radius) {
            let n = Math.sqrt(t), i = (n - this.radius) * .5;
            this.center.add(So.multiplyScalar(i / n)), this.radius += i;
        }
        return this;
    }
    union(e) {
        return this.center.equals(e.center) === !0 ? Xr.set(0, 0, 1).multiplyScalar(e.radius) : Xr.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(vl.copy(e.center).add(Xr)), this.expandByPoint(vl.copy(e.center).sub(Xr)), this;
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, jt = new M, To = new M, Jr = new M, fn = new M, Eo = new M, Yr = new M, Ao = new M, Cn = class {
    constructor(e = new M, t = new M(0, 0, -1)){
        this.origin = e, this.direction = t;
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
    }
    at(e, t) {
        return t.copy(this.direction).multiplyScalar(e).add(this.origin);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, jt)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        let n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        let t = jt.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (jt.copy(this.direction).multiplyScalar(t).add(this.origin), jt.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        To.copy(e).add(t).multiplyScalar(.5), Jr.copy(t).sub(e).normalize(), fn.copy(this.origin).sub(To);
        let r = e.distanceTo(t) * .5, o = -this.direction.dot(Jr), a = fn.dot(this.direction), l = -fn.dot(Jr), c = fn.lengthSq(), h = Math.abs(1 - o * o), u, d, f, m;
        if (h > 0) if (u = o * l - a, d = o * a - l, m = r * h, u >= 0) if (d >= -m) if (d <= m) {
            let x = 1 / h;
            u *= x, d *= x, f = u * (u + o * d + 2 * a) + d * (o * u + d + 2 * l) + c;
        } else d = r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d = -r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d <= -m ? (u = Math.max(0, -(-o * r + a)), d = u > 0 ? -r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c) : d <= m ? (u = 0, d = Math.min(Math.max(-r, -l), r), f = d * (d + 2 * l) + c) : (u = Math.max(0, -(o * r + a)), d = u > 0 ? r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c);
        else d = o > 0 ? -r : r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        return n && n.copy(this.direction).multiplyScalar(u).add(this.origin), i && i.copy(Jr).multiplyScalar(d).add(To), f;
    }
    intersectSphere(e, t) {
        jt.subVectors(e.center, this.origin);
        let n = jt.dot(this.direction), i = jt.dot(jt) - n * n, r = e.radius * e.radius;
        if (i > r) return null;
        let o = Math.sqrt(r - i), a = n - o, l = n + o;
        return a < 0 && l < 0 ? null : a < 0 ? this.at(l, t) : this.at(a, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        let t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        let n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        let n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        let t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, r, o, a, l, c = 1 / this.direction.x, h = 1 / this.direction.y, u = 1 / this.direction.z, d = this.origin;
        return c >= 0 ? (n = (e.min.x - d.x) * c, i = (e.max.x - d.x) * c) : (n = (e.max.x - d.x) * c, i = (e.min.x - d.x) * c), h >= 0 ? (r = (e.min.y - d.y) * h, o = (e.max.y - d.y) * h) : (r = (e.max.y - d.y) * h, o = (e.min.y - d.y) * h), n > o || r > i || ((r > n || n !== n) && (n = r), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - d.z) * u, l = (e.max.z - d.z) * u) : (a = (e.max.z - d.z) * u, l = (e.min.z - d.z) * u), n > l || a > i) || ((a > n || n !== n) && (n = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(n >= 0 ? n : i, t);
    }
    intersectsBox(e) {
        return this.intersectBox(e, jt) !== null;
    }
    intersectTriangle(e, t, n, i, r) {
        Eo.subVectors(t, e), Yr.subVectors(n, e), Ao.crossVectors(Eo, Yr);
        let o = this.direction.dot(Ao), a;
        if (o > 0) {
            if (i) return null;
            a = 1;
        } else if (o < 0) a = -1, o = -o;
        else return null;
        fn.subVectors(this.origin, e);
        let l = a * this.direction.dot(Yr.crossVectors(fn, Yr));
        if (l < 0) return null;
        let c = a * this.direction.dot(Eo.cross(fn));
        if (c < 0 || l + c > o) return null;
        let h = -a * fn.dot(Ao);
        return h < 0 ? null : this.at(h / o, r);
    }
    applyMatrix4(e) {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
    }
    equals(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, pe = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c, h, u, d, f, m, x, v) {
        let g = this.elements;
        return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = a, g[13] = l, g[2] = c, g[6] = h, g[10] = u, g[14] = d, g[3] = f, g[7] = m, g[11] = x, g[15] = v, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new pe().fromArray(this.elements);
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
    }
    copyPosition(e) {
        let t = this.elements, n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
    }
    setFromMatrix3(e) {
        let t = e.elements;
        return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
    }
    makeBasis(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
    }
    extractRotation(e) {
        let t = this.elements, n = e.elements, i = 1 / si.setFromMatrixColumn(e, 0).length(), r = 1 / si.setFromMatrixColumn(e, 1).length(), o = 1 / si.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromEuler(e) {
        e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        let t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), a = Math.sin(n), l = Math.cos(i), c = Math.sin(i), h = Math.cos(r), u = Math.sin(r);
        if (e.order === "XYZ") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = -l * u, t[8] = c, t[1] = f + m * c, t[5] = d - x * c, t[9] = -a * l, t[2] = x - d * c, t[6] = m + f * c, t[10] = o * l;
        } else if (e.order === "YXZ") {
            let d1 = l * h, f1 = l * u, m1 = c * h, x1 = c * u;
            t[0] = d1 + x1 * a, t[4] = m1 * a - f1, t[8] = o * c, t[1] = o * u, t[5] = o * h, t[9] = -a, t[2] = f1 * a - m1, t[6] = x1 + d1 * a, t[10] = o * l;
        } else if (e.order === "ZXY") {
            let d2 = l * h, f2 = l * u, m2 = c * h, x2 = c * u;
            t[0] = d2 - x2 * a, t[4] = -o * u, t[8] = m2 + f2 * a, t[1] = f2 + m2 * a, t[5] = o * h, t[9] = x2 - d2 * a, t[2] = -o * c, t[6] = a, t[10] = o * l;
        } else if (e.order === "ZYX") {
            let d3 = o * h, f3 = o * u, m3 = a * h, x3 = a * u;
            t[0] = l * h, t[4] = m3 * c - f3, t[8] = d3 * c + x3, t[1] = l * u, t[5] = x3 * c + d3, t[9] = f3 * c - m3, t[2] = -c, t[6] = a * l, t[10] = o * l;
        } else if (e.order === "YZX") {
            let d4 = o * l, f4 = o * c, m4 = a * l, x4 = a * c;
            t[0] = l * h, t[4] = x4 - d4 * u, t[8] = m4 * u + f4, t[1] = u, t[5] = o * h, t[9] = -a * h, t[2] = -c * h, t[6] = f4 * u + m4, t[10] = d4 - x4 * u;
        } else if (e.order === "XZY") {
            let d5 = o * l, f5 = o * c, m5 = a * l, x5 = a * c;
            t[0] = l * h, t[4] = -u, t[8] = c * h, t[1] = d5 * u + x5, t[5] = o * h, t[9] = f5 * u - m5, t[2] = m5 * u - f5, t[6] = a * h, t[10] = x5 * u + d5;
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromQuaternion(e) {
        return this.compose(tf, e, nf);
    }
    lookAt(e, t, n) {
        let i = this.elements;
        return St.subVectors(e, t), St.lengthSq() === 0 && (St.z = 1), St.normalize(), pn.crossVectors(n, St), pn.lengthSq() === 0 && (Math.abs(n.z) === 1 ? St.x += 1e-4 : St.z += 1e-4, St.normalize(), pn.crossVectors(n, St)), pn.normalize(), Zr.crossVectors(St, pn), i[0] = pn.x, i[4] = Zr.x, i[8] = St.x, i[1] = pn.y, i[5] = Zr.y, i[9] = St.y, i[2] = pn.z, i[6] = Zr.z, i[10] = St.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[4], l = n[8], c = n[12], h = n[1], u = n[5], d = n[9], f = n[13], m = n[2], x = n[6], v = n[10], g = n[14], p = n[3], _ = n[7], y = n[11], b = n[15], A = i[0], L = i[4], I = i[8], k = i[12], B = i[1], P = i[5], w = i[9], E = i[13], D = i[2], U = i[6], F = i[10], O = i[14], ne = i[3], ce = i[7], V = i[11], W = i[15];
        return r[0] = o * A + a * B + l * D + c * ne, r[4] = o * L + a * P + l * U + c * ce, r[8] = o * I + a * w + l * F + c * V, r[12] = o * k + a * E + l * O + c * W, r[1] = h * A + u * B + d * D + f * ne, r[5] = h * L + u * P + d * U + f * ce, r[9] = h * I + u * w + d * F + f * V, r[13] = h * k + u * E + d * O + f * W, r[2] = m * A + x * B + v * D + g * ne, r[6] = m * L + x * P + v * U + g * ce, r[10] = m * I + x * w + v * F + g * V, r[14] = m * k + x * E + v * O + g * W, r[3] = p * A + _ * B + y * D + b * ne, r[7] = p * L + _ * P + y * U + b * ce, r[11] = p * I + _ * w + y * F + b * V, r[15] = p * k + _ * E + y * O + b * W, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], a = e[5], l = e[9], c = e[13], h = e[2], u = e[6], d = e[10], f = e[14], m = e[3], x = e[7], v = e[11], g = e[15];
        return m * (+r * l * u - i * c * u - r * a * d + n * c * d + i * a * f - n * l * f) + x * (+t * l * f - t * c * d + r * o * d - i * o * f + i * c * h - r * l * h) + v * (+t * c * u - t * a * f - r * o * u + n * o * f + r * a * h - n * c * h) + g * (-i * a * h - t * l * u + t * a * d + i * o * u - n * o * d + n * l * h);
    }
    transpose() {
        let e = this.elements, t;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
    }
    setPosition(e, t, n) {
        let i = this.elements;
        return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = e[9], d = e[10], f = e[11], m = e[12], x = e[13], v = e[14], g = e[15], p = u * v * c - x * d * c + x * l * f - a * v * f - u * l * g + a * d * g, _ = m * d * c - h * v * c - m * l * f + o * v * f + h * l * g - o * d * g, y = h * x * c - m * u * c + m * a * f - o * x * f - h * a * g + o * u * g, b = m * u * l - h * x * l - m * a * d + o * x * d + h * a * v - o * u * v, A = t * p + n * _ + i * y + r * b;
        if (A === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        let L = 1 / A;
        return e[0] = p * L, e[1] = (x * d * r - u * v * r - x * i * f + n * v * f + u * i * g - n * d * g) * L, e[2] = (a * v * r - x * l * r + x * i * c - n * v * c - a * i * g + n * l * g) * L, e[3] = (u * l * r - a * d * r - u * i * c + n * d * c + a * i * f - n * l * f) * L, e[4] = _ * L, e[5] = (h * v * r - m * d * r + m * i * f - t * v * f - h * i * g + t * d * g) * L, e[6] = (m * l * r - o * v * r - m * i * c + t * v * c + o * i * g - t * l * g) * L, e[7] = (o * d * r - h * l * r + h * i * c - t * d * c - o * i * f + t * l * f) * L, e[8] = y * L, e[9] = (m * u * r - h * x * r - m * n * f + t * x * f + h * n * g - t * u * g) * L, e[10] = (o * x * r - m * a * r + m * n * c - t * x * c - o * n * g + t * a * g) * L, e[11] = (h * a * r - o * u * r - h * n * c + t * u * c + o * n * f - t * a * f) * L, e[12] = b * L, e[13] = (h * x * i - m * u * i + m * n * d - t * x * d - h * n * v + t * u * v) * L, e[14] = (m * a * i - o * x * i - m * n * l + t * x * l + o * n * v - t * a * v) * L, e[15] = (o * u * i - h * a * i + h * n * l - t * u * l - o * n * d + t * a * d) * L, this;
    }
    scale(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z;
        return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
    }
    getMaxScaleOnAxis() {
        let e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
    }
    makeRotationX(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, a = e.y, l = e.z, c = r * o, h = r * a;
        return this.set(c * o + n, c * a - i * l, c * l + i * a, 0, c * a + i * l, h * a + n, h * l - i * o, 0, c * l - i * a, h * l + i * o, r * l * l + n, 0, 0, 0, 0, 1), this;
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, r, o) {
        return this.set(1, n, r, 0, e, 1, o, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        let i = this.elements, r = t._x, o = t._y, a = t._z, l = t._w, c = r + r, h = o + o, u = a + a, d = r * c, f = r * h, m = r * u, x = o * h, v = o * u, g = a * u, p = l * c, _ = l * h, y = l * u, b = n.x, A = n.y, L = n.z;
        return i[0] = (1 - (x + g)) * b, i[1] = (f + y) * b, i[2] = (m - _) * b, i[3] = 0, i[4] = (f - y) * A, i[5] = (1 - (d + g)) * A, i[6] = (v + p) * A, i[7] = 0, i[8] = (m + _) * L, i[9] = (v - p) * L, i[10] = (1 - (d + x)) * L, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
    }
    decompose(e, t, n) {
        let i = this.elements, r = si.set(i[0], i[1], i[2]).length(), o = si.set(i[4], i[5], i[6]).length(), a = si.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], It.copy(this);
        let c = 1 / r, h = 1 / o, u = 1 / a;
        return It.elements[0] *= c, It.elements[1] *= c, It.elements[2] *= c, It.elements[4] *= h, It.elements[5] *= h, It.elements[6] *= h, It.elements[8] *= u, It.elements[9] *= u, It.elements[10] *= u, t.setFromRotationMatrix(It), n.x = r, n.y = o, n.z = a, this;
    }
    makePerspective(e, t, n, i, r, o) {
        o === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        let a = this.elements, l = 2 * r / (t - e), c = 2 * r / (n - i), h = (t + e) / (t - e), u = (n + i) / (n - i), d = -(o + r) / (o - r), f = -2 * o * r / (o - r);
        return a[0] = l, a[4] = 0, a[8] = h, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = d, a[14] = f, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;
    }
    makeOrthographic(e, t, n, i, r, o) {
        let a = this.elements, l = 1 / (t - e), c = 1 / (n - i), h = 1 / (o - r), u = (t + e) * l, d = (n + i) * c, f = (o + r) * h;
        return a[0] = 2 * l, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -d, a[2] = 0, a[6] = 0, a[10] = -2 * h, a[14] = -f, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 16; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 16; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
    }
};
pe.prototype.isMatrix4 = !0;
var si = new M, It = new pe, tf = new M(0, 0, 0), nf = new M(1, 1, 1), pn = new M, Zr = new M, St = new M, _l = new pe, Ml = new gt, Zn = class {
    constructor(e = 0, t = 0, n = 0, i = Zn.DefaultOrder){
        this._x = e, this._y = t, this._z = n, this._order = i;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        this._order = e, this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return this._x = e, this._y = t, this._z = n, this._order = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        let i = e.elements, r = i[0], o = i[4], a = i[8], l = i[1], c = i[5], h = i[9], u = i[2], d = i[6], f = i[10];
        switch(t){
            case "XYZ":
                this._y = Math.asin(mt(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(d, c), this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-mt(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(a, f), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, r), this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(mt(d, -1, 1)), Math.abs(d) < .9999999 ? (this._y = Math.atan2(-u, f), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, r));
                break;
            case "ZYX":
                this._y = Math.asin(-mt(u, -1, 1)), Math.abs(u) < .9999999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(l, r)) : (this._x = 0, this._z = Math.atan2(-o, c));
                break;
            case "YZX":
                this._z = Math.asin(mt(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(a, f));
                break;
            case "XZY":
                this._z = Math.asin(-mt(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-h, f), this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
        }
        return this._order = t, n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return _l.makeRotationFromQuaternion(e), this.setFromRotationMatrix(_l, t, n);
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return Ml.setFromEuler(this), this.setFromQuaternion(Ml, e);
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    }
    fromArray(e) {
        return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
    }
    toVector3(e) {
        return e ? e.set(this._x, this._y, this._z) : new M(this._x, this._y, this._z);
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
Zn.prototype.isEuler = !0;
Zn.DefaultOrder = "XYZ";
Zn.RotationOrders = [
    "XYZ",
    "YZX",
    "ZXY",
    "XZY",
    "YXZ",
    "ZYX"
];
var Js = class {
    constructor(){
        this.mask = 1;
    }
    set(e) {
        this.mask = (1 << e | 0) >>> 0;
    }
    enable(e) {
        this.mask |= 1 << e | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= 1 << e | 0;
    }
    disable(e) {
        this.mask &= ~(1 << e | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & (1 << e | 0)) !== 0;
    }
}, rf = 0, bl = new M, oi = new gt, Qt = new pe, $r = new M, Zi = new M, sf = new M, of = new gt, wl = new M(1, 0, 0), Sl = new M(0, 1, 0), Tl = new M(0, 0, 1), af = {
    type: "added"
}, El = {
    type: "removed"
}, Ne = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: rf++
        }), this.uuid = Et(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ne.DefaultUp.clone();
        let e = new M, t = new Zn, n = new gt, i = new M(1, 1, 1);
        function r() {
            n.setFromEuler(t, !1);
        }
        function o() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(r), n._onChange(o), Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new pe
            },
            normalMatrix: {
                value: new lt
            }
        }), this.matrix = new pe, this.matrixWorld = new pe, this.matrixAutoUpdate = Ne.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Js, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
    }
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.multiply(oi), this;
    }
    rotateOnWorldAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.premultiply(oi), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(wl, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(Sl, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis(Tl, e);
    }
    translateOnAxis(e, t) {
        return bl.copy(e).applyQuaternion(this.quaternion), this.position.add(bl.multiplyScalar(t)), this;
    }
    translateX(e) {
        return this.translateOnAxis(wl, e);
    }
    translateY(e) {
        return this.translateOnAxis(Sl, e);
    }
    translateZ(e) {
        return this.translateOnAxis(Tl, e);
    }
    localToWorld(e) {
        return e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return e.applyMatrix4(Qt.copy(this.matrixWorld).invert());
    }
    lookAt(e, t, n) {
        e.isVector3 ? $r.copy(e) : $r.set(e, t, n);
        let i = this.parent;
        this.updateWorldMatrix(!0, !1), Zi.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Qt.lookAt(Zi, $r, this.up) : Qt.lookAt($r, Zi, this.up), this.quaternion.setFromRotationMatrix(Qt), i && (Qt.extractRotation(i.matrixWorld), oi.setFromRotationMatrix(Qt), this.quaternion.premultiply(oi.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);
            return this;
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(af)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for(let n = 0; n < arguments.length; n++)this.remove(arguments[n]);
            return this;
        }
        let t = this.children.indexOf(e);
        return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(El)), this;
    }
    removeFromParent() {
        let e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        for(let e = 0; e < this.children.length; e++){
            let t = this.children[e];
            t.parent = null, t.dispatchEvent(El);
        }
        return this.children.length = 0, this;
    }
    attach(e) {
        return this.updateWorldMatrix(!0, !1), Qt.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), Qt.multiply(e.parent.matrixWorld)), e.applyMatrix4(Qt), this.add(e), e.updateWorldMatrix(!1, !0), this;
    }
    getObjectById(e) {
        return this.getObjectByProperty("id", e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty("name", e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for(let n = 0, i = this.children.length; n < i; n++){
            let o = this.children[n].getObjectByProperty(e, t);
            if (o !== void 0) return o;
        }
    }
    getWorldPosition(e) {
        return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
    }
    getWorldQuaternion(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, e, sf), e;
    }
    getWorldScale(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, of, e), e;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        let t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].updateMatrixWorld(e);
    }
    updateWorldMatrix(e, t) {
        let n = this.parent;
        if (e === !0 && n !== null && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
            let i = this.children;
            for(let r = 0, o = i.length; r < o; r++)i[r].updateWorldMatrix(!1, !0);
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string", n = {};
        t && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {},
            shapes: {},
            skeletons: {},
            animations: {}
        }, n.metadata = {
            version: 4.5,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        let i = {};
        i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
        function r(a, l) {
            return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
        }
        if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = r(e.geometries, this.geometry);
            let a = this.geometry.parameters;
            if (a !== void 0 && a.shapes !== void 0) {
                let l = a.shapes;
                if (Array.isArray(l)) for(let c = 0, h = l.length; c < h; c++){
                    let u = l[c];
                    r(e.shapes, u);
                }
                else r(e.shapes, l);
            }
        }
        if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (r(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
            let a1 = [];
            for(let l1 = 0, c1 = this.material.length; l1 < c1; l1++)a1.push(r(e.materials, this.material[l1]));
            i.material = a1;
        } else i.material = r(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for(let a2 = 0; a2 < this.children.length; a2++)i.children.push(this.children[a2].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for(let a3 = 0; a3 < this.animations.length; a3++){
                let l2 = this.animations[a3];
                i.animations.push(r(e.animations, l2));
            }
        }
        if (t) {
            let a4 = o(e.geometries), l3 = o(e.materials), c2 = o(e.textures), h1 = o(e.images), u1 = o(e.shapes), d = o(e.skeletons), f = o(e.animations);
            a4.length > 0 && (n.geometries = a4), l3.length > 0 && (n.materials = l3), c2.length > 0 && (n.textures = c2), h1.length > 0 && (n.images = h1), u1.length > 0 && (n.shapes = u1), d.length > 0 && (n.skeletons = d), f.length > 0 && (n.animations = f);
        }
        return n.object = i, n;
        function o(a) {
            let l = [];
            for(let c in a){
                let h = a[c];
                delete h.metadata, l.push(h);
            }
            return l;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0) for(let n = 0; n < e.children.length; n++){
            let i = e.children[n];
            this.add(i.clone());
        }
        return this;
    }
};
Ne.DefaultUp = new M(0, 1, 0);
Ne.DefaultMatrixAutoUpdate = !0;
Ne.prototype.isObject3D = !0;
var Dt = new M, Kt = new M, Co = new M, en = new M, ai = new M, li = new M, Al = new M, Lo = new M, Ro = new M, Po = new M, nt = class {
    constructor(e = new M, t = new M, n = new M){
        this.a = e, this.b = t, this.c = n;
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Dt.subVectors(e, t), i.cross(Dt);
        let r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, r) {
        Dt.subVectors(i, t), Kt.subVectors(n, t), Co.subVectors(e, t);
        let o = Dt.dot(Dt), a = Dt.dot(Kt), l = Dt.dot(Co), c = Kt.dot(Kt), h = Kt.dot(Co), u = o * c - a * a;
        if (u === 0) return r.set(-2, -1, -1);
        let d = 1 / u, f = (c * l - a * h) * d, m = (o * h - a * l) * d;
        return r.set(1 - f - m, m, f);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, en), en.x >= 0 && en.y >= 0 && en.x + en.y <= 1;
    }
    static getUV(e, t, n, i, r, o, a, l) {
        return this.getBarycoord(e, t, n, i, en), l.set(0, 0), l.addScaledVector(r, en.x), l.addScaledVector(o, en.y), l.addScaledVector(a, en.z), l;
    }
    static isFrontFacing(e, t, n, i) {
        return Dt.subVectors(n, t), Kt.subVectors(e, t), Dt.cross(Kt).dot(i) < 0;
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, n), this.c.fromBufferAttribute(e, i), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return Dt.subVectors(this.c, this.b), Kt.subVectors(this.a, this.b), Dt.cross(Kt).length() * .5;
    }
    getMidpoint(e) {
        return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return nt.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return nt.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getUV(e, t, n, i, r) {
        return nt.getUV(e, this.a, this.b, this.c, t, n, i, r);
    }
    containsPoint(e) {
        return nt.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return nt.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        let n = this.a, i = this.b, r = this.c, o, a;
        ai.subVectors(i, n), li.subVectors(r, n), Lo.subVectors(e, n);
        let l = ai.dot(Lo), c = li.dot(Lo);
        if (l <= 0 && c <= 0) return t.copy(n);
        Ro.subVectors(e, i);
        let h = ai.dot(Ro), u = li.dot(Ro);
        if (h >= 0 && u <= h) return t.copy(i);
        let d = l * u - h * c;
        if (d <= 0 && l >= 0 && h <= 0) return o = l / (l - h), t.copy(n).addScaledVector(ai, o);
        Po.subVectors(e, r);
        let f = ai.dot(Po), m = li.dot(Po);
        if (m >= 0 && f <= m) return t.copy(r);
        let x = f * c - l * m;
        if (x <= 0 && c >= 0 && m <= 0) return a = c / (c - m), t.copy(n).addScaledVector(li, a);
        let v = h * m - f * u;
        if (v <= 0 && u - h >= 0 && f - m >= 0) return Al.subVectors(r, i), a = (u - h) / (u - h + (f - m)), t.copy(i).addScaledVector(Al, a);
        let g = 1 / (v + x + d);
        return o = x * g, a = d * g, t.copy(n).addScaledVector(ai, o).addScaledVector(li, a);
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}, lf = 0, dt = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: lf++
        }), this.uuid = Et(), this.name = "", this.type = "Material", this.fog = !0, this.blending = sr, this.side = Ai, this.vertexColors = !1, this.opacity = 1, this.format = ct, this.transparent = !1, this.blendSrc = Gc, this.blendDst = Vc, this.blendEquation = _i, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = ea, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = Ud, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = vo, this.stencilZFail = vo, this.stencilZPass = vo, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
    }
    onBuild() {}
    onBeforeRender() {}
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0) for(let t in e){
            let n = e[t];
            if (n === void 0) {
                console.warn("THREE.Material: '" + t + "' parameter is undefined.");
                continue;
            }
            if (t === "shading") {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = n === kc;
                continue;
            }
            let i = this[t];
            if (i === void 0) {
                console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
                continue;
            }
            i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n;
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        t && (e = {
            textures: {},
            images: {}
        });
        let n = {
            metadata: {
                version: 4.5,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        n.uuid = this.uuid, n.type = this.type, this.name !== "" && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), this.roughness !== void 0 && (n.roughness = this.roughness), this.metalness !== void 0 && (n.metalness = this.metalness), this.sheen !== void 0 && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (n.shininess = this.shininess), this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (n.combine = this.combine)), this.envMapIntensity !== void 0 && (n.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (n.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && (n.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (n.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (n.size = this.size), this.shadowSide !== null && (n.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== sr && (n.blending = this.blending), this.side !== Ai && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.format !== ct && (n.format = this.format), this.transparent === !0 && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && this.rotation !== 0 && (n.rotation = this.rotation), this.polygonOffset === !0 && (n.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (n.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && this.linewidth !== 1 && (n.linewidth = this.linewidth), this.dashSize !== void 0 && (n.dashSize = this.dashSize), this.gapSize !== void 0 && (n.gapSize = this.gapSize), this.scale !== void 0 && (n.scale = this.scale), this.dithering === !0 && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), this.alphaToCoverage === !0 && (n.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === !0 && (n.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (n.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (n.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (n.flatShading = this.flatShading), this.visible === !1 && (n.visible = !1), this.toneMapped === !1 && (n.toneMapped = !1), JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData);
        function i(r) {
            let o = [];
            for(let a in r){
                let l = r[a];
                delete l.metadata, o.push(l);
            }
            return o;
        }
        if (t) {
            let r = i(e.textures), o = i(e.images);
            r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.format = e.format, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        let t = e.clippingPlanes, n = null;
        if (t !== null) {
            let i = t.length;
            n = new Array(i);
            for(let r = 0; r !== i; ++r)n[r] = t[r].clone();
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
dt.prototype.isMaterial = !0;
var $c = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, Ft = {
    h: 0,
    s: 0,
    l: 0
}, jr = {
    h: 0,
    s: 0,
    l: 0
};
function Io(s, e, t) {
    return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? s + (e - s) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? s + (e - s) * 6 * (2 / 3 - t) : s;
}
function Do(s) {
    return s < .04045 ? s * .0773993808 : Math.pow(s * .9478672986 + .0521327014, 2.4);
}
function Fo(s) {
    return s < .0031308 ? s * 12.92 : 1.055 * Math.pow(s, .41666) - .055;
}
var ae = class {
    constructor(e, t, n){
        return t === void 0 && n === void 0 ? this.set(e) : this.setRGB(e, t, n);
    }
    set(e) {
        return e && e.isColor ? this.copy(e) : typeof e == "number" ? this.setHex(e) : typeof e == "string" && this.setStyle(e), this;
    }
    setScalar(e) {
        return this.r = e, this.g = e, this.b = e, this;
    }
    setHex(e) {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, this;
    }
    setRGB(e, t, n) {
        return this.r = e, this.g = t, this.b = n, this;
    }
    setHSL(e, t, n) {
        if (e = da(e, 1), t = mt(t, 0, 1), n = mt(n, 0, 1), t === 0) this.r = this.g = this.b = n;
        else {
            let i = n <= .5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
            this.r = Io(r, i, e + 1 / 3), this.g = Io(r, i, e), this.b = Io(r, i, e - 1 / 3);
        }
        return this;
    }
    setStyle(e) {
        function t(i) {
            i !== void 0 && parseFloat(i) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
        }
        let n;
        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
            let i, r = n[1], o = n[2];
            switch(r){
                case "rgb":
                case "rgba":
                    if (i = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[4]), this;
                    if (i = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[4]), this;
                    break;
                case "hsl":
                case "hsla":
                    if (i = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) {
                        let a = parseFloat(i[1]) / 360, l = parseInt(i[2], 10) / 100, c = parseInt(i[3], 10) / 100;
                        return t(i[4]), this.setHSL(a, l, c);
                    }
                    break;
            }
        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
            let i1 = n[1], r1 = i1.length;
            if (r1 === 3) return this.r = parseInt(i1.charAt(0) + i1.charAt(0), 16) / 255, this.g = parseInt(i1.charAt(1) + i1.charAt(1), 16) / 255, this.b = parseInt(i1.charAt(2) + i1.charAt(2), 16) / 255, this;
            if (r1 === 6) return this.r = parseInt(i1.charAt(0) + i1.charAt(1), 16) / 255, this.g = parseInt(i1.charAt(2) + i1.charAt(3), 16) / 255, this.b = parseInt(i1.charAt(4) + i1.charAt(5), 16) / 255, this;
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
    }
    setColorName(e) {
        let t = $c[e.toLowerCase()];
        return t !== void 0 ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this;
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return this.r = e.r, this.g = e.g, this.b = e.b, this;
    }
    copySRGBToLinear(e) {
        return this.r = Do(e.r), this.g = Do(e.g), this.b = Do(e.b), this;
    }
    copyLinearToSRGB(e) {
        return this.r = Fo(e.r), this.g = Fo(e.g), this.b = Fo(e.b), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex() {
        return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;
    }
    getHexString() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
    }
    getHSL(e) {
        let t = this.r, n = this.g, i = this.b, r = Math.max(t, n, i), o = Math.min(t, n, i), a, l, c = (o + r) / 2;
        if (o === r) a = 0, l = 0;
        else {
            let h = r - o;
            switch(l = c <= .5 ? h / (r + o) : h / (2 - r - o), r){
                case t:
                    a = (n - i) / h + (n < i ? 6 : 0);
                    break;
                case n:
                    a = (i - t) / h + 2;
                    break;
                case i:
                    a = (t - n) / h + 4;
                    break;
            }
            a /= 6;
        }
        return e.h = a, e.s = l, e.l = c, e;
    }
    getStyle() {
        return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
    }
    offsetHSL(e, t, n) {
        return this.getHSL(Ft), Ft.h += e, Ft.s += t, Ft.l += n, this.setHSL(Ft.h, Ft.s, Ft.l), this;
    }
    add(e) {
        return this.r += e.r, this.g += e.g, this.b += e.b, this;
    }
    addColors(e, t) {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
    }
    addScalar(e) {
        return this.r += e, this.g += e, this.b += e, this;
    }
    sub(e) {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
    }
    multiply(e) {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
    }
    multiplyScalar(e) {
        return this.r *= e, this.g *= e, this.b *= e, this;
    }
    lerp(e, t) {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
    }
    lerpColors(e, t, n) {
        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this;
    }
    lerpHSL(e, t) {
        this.getHSL(Ft), e.getHSL(jr);
        let n = or(Ft.h, jr.h, t), i = or(Ft.s, jr.s, t), r = or(Ft.l, jr.l, t);
        return this.setHSL(n, i, r), this;
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
    }
    fromBufferAttribute(e, t) {
        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), e.normalized === !0 && (this.r /= 255, this.g /= 255, this.b /= 255), this;
    }
    toJSON() {
        return this.getHex();
    }
};
ae.NAMES = $c;
ae.prototype.isColor = !0;
ae.prototype.r = 1;
ae.prototype.g = 1;
ae.prototype.b = 1;
var hn = class extends dt {
    constructor(e){
        super();
        this.type = "MeshBasicMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
hn.prototype.isMeshBasicMaterial = !0;
var Je = new M, Qr = new X, Ue = class {
    constructor(e, t, n){
        if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = n === !0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0;
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.itemSize, n *= t.itemSize;
        for(let i = 0, r = this.itemSize; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    copyColorsArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new ae), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
        }
        return this;
    }
    copyVector2sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new X), t[n++] = o.x, t[n++] = o.y;
        }
        return this;
    }
    copyVector3sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new M), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
        }
        return this;
    }
    copyVector4sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new Ve), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
        }
        return this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2) for(let t = 0, n = this.count; t < n; t++)Qr.fromBufferAttribute(this, t), Qr.applyMatrix3(e), this.setXY(t, Qr.x, Qr.y);
        else if (this.itemSize === 3) for(let t1 = 0, n1 = this.count; t1 < n1; t1++)Je.fromBufferAttribute(this, t1), Je.applyMatrix3(e), this.setXYZ(t1, Je.x, Je.y, Je.z);
        return this;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyMatrix4(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyNormalMatrix(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.transformDirection(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getX(e) {
        return this.array[e * this.itemSize];
    }
    setX(e, t) {
        return this.array[e * this.itemSize] = t, this;
    }
    getY(e) {
        return this.array[e * this.itemSize + 1];
    }
    setY(e, t) {
        return this.array[e * this.itemSize + 1] = t, this;
    }
    getZ(e) {
        return this.array[e * this.itemSize + 2];
    }
    setZ(e, t) {
        return this.array[e * this.itemSize + 2] = t, this;
    }
    getW(e) {
        return this.array[e * this.itemSize + 3];
    }
    setW(e, t) {
        return this.array[e * this.itemSize + 3] = t, this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized
        };
        return this.name !== "" && (e.name = this.name), this.usage !== hr && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
    }
};
Ue.prototype.isBufferAttribute = !0;
var jc = class extends Ue {
    constructor(e, t, n){
        super(new Int8Array(e), t, n);
    }
}, Qc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8Array(e), t, n);
    }
}, Kc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8ClampedArray(e), t, n);
    }
}, eh = class extends Ue {
    constructor(e, t, n){
        super(new Int16Array(e), t, n);
    }
}, Ys = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
}, th = class extends Ue {
    constructor(e, t, n){
        super(new Int32Array(e), t, n);
    }
}, Zs = class extends Ue {
    constructor(e, t, n){
        super(new Uint32Array(e), t, n);
    }
}, nh = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
};
nh.prototype.isFloat16BufferAttribute = !0;
var de = class extends Ue {
    constructor(e, t, n){
        super(new Float32Array(e), t, n);
    }
}, ih = class extends Ue {
    constructor(e, t, n){
        super(new Float64Array(e), t, n);
    }
}, cf = 0, Rt = new pe, No = new Ne, ci = new M, Tt = new Lt, $i = new Lt, ht = new M, _e = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: cf++
        }), this.uuid = Et(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {};
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return Array.isArray(e) ? this.index = new (Yc(e) > 65535 ? Zs : Ys)(e, 1) : this.index = e, this;
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return this.attributes[e] = t, this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: n
        });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        this.drawRange.start = e, this.drawRange.count = t;
    }
    applyMatrix4(e) {
        let t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
        let n = this.attributes.normal;
        if (n !== void 0) {
            let r = new lt().getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0;
        }
        let i = this.attributes.tangent;
        return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
    }
    applyQuaternion(e) {
        return Rt.makeRotationFromQuaternion(e), this.applyMatrix4(Rt), this;
    }
    rotateX(e) {
        return Rt.makeRotationX(e), this.applyMatrix4(Rt), this;
    }
    rotateY(e) {
        return Rt.makeRotationY(e), this.applyMatrix4(Rt), this;
    }
    rotateZ(e) {
        return Rt.makeRotationZ(e), this.applyMatrix4(Rt), this;
    }
    translate(e, t, n) {
        return Rt.makeTranslation(e, t, n), this.applyMatrix4(Rt), this;
    }
    scale(e, t, n) {
        return Rt.makeScale(e, t, n), this.applyMatrix4(Rt), this;
    }
    lookAt(e) {
        return No.lookAt(e), No.updateMatrix(), this.applyMatrix4(No.matrix), this;
    }
    center() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(ci).negate(), this.translate(ci.x, ci.y, ci.z), this;
    }
    setFromPoints(e) {
        let t = [];
        for(let n = 0, i = e.length; n < i; n++){
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute("position", new de(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Lt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new M(-1 / 0, -1 / 0, -1 / 0), new M(1 / 0, 1 / 0, 1 / 0));
            return;
        }
        if (e !== void 0) {
            if (this.boundingBox.setFromBufferAttribute(e), t) for(let n = 0, i = t.length; n < i; n++){
                let r = t[n];
                Tt.setFromBufferAttribute(r), this.morphTargetsRelative ? (ht.addVectors(this.boundingBox.min, Tt.min), this.boundingBox.expandByPoint(ht), ht.addVectors(this.boundingBox.max, Tt.max), this.boundingBox.expandByPoint(ht)) : (this.boundingBox.expandByPoint(Tt.min), this.boundingBox.expandByPoint(Tt.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new An);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new M, 1 / 0);
            return;
        }
        if (e) {
            let n = this.boundingSphere.center;
            if (Tt.setFromBufferAttribute(e), t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r];
                $i.setFromBufferAttribute(a), this.morphTargetsRelative ? (ht.addVectors(Tt.min, $i.min), Tt.expandByPoint(ht), ht.addVectors(Tt.max, $i.max), Tt.expandByPoint(ht)) : (Tt.expandByPoint($i.min), Tt.expandByPoint($i.max));
            }
            Tt.getCenter(n);
            let i = 0;
            for(let r1 = 0, o1 = e.count; r1 < o1; r1++)ht.fromBufferAttribute(e, r1), i = Math.max(i, n.distanceToSquared(ht));
            if (t) for(let r2 = 0, o2 = t.length; r2 < o2; r2++){
                let a1 = t[r2], l = this.morphTargetsRelative;
                for(let c = 0, h = a1.count; c < h; c++)ht.fromBufferAttribute(a1, c), l && (ci.fromBufferAttribute(e, c), ht.add(ci)), i = Math.max(i, n.distanceToSquared(ht));
            }
            this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
    }
    computeTangents() {
        let e = this.index, t = this.attributes;
        if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
            console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
            return;
        }
        let n = e.array, i = t.position.array, r = t.normal.array, o = t.uv.array, a = i.length / 3;
        t.tangent === void 0 && this.setAttribute("tangent", new Ue(new Float32Array(4 * a), 4));
        let l = t.tangent.array, c = [], h = [];
        for(let B = 0; B < a; B++)c[B] = new M, h[B] = new M;
        let u = new M, d = new M, f = new M, m = new X, x = new X, v = new X, g = new M, p = new M;
        function _(B, P, w) {
            u.fromArray(i, B * 3), d.fromArray(i, P * 3), f.fromArray(i, w * 3), m.fromArray(o, B * 2), x.fromArray(o, P * 2), v.fromArray(o, w * 2), d.sub(u), f.sub(u), x.sub(m), v.sub(m);
            let E = 1 / (x.x * v.y - v.x * x.y);
            !isFinite(E) || (g.copy(d).multiplyScalar(v.y).addScaledVector(f, -x.y).multiplyScalar(E), p.copy(f).multiplyScalar(x.x).addScaledVector(d, -v.x).multiplyScalar(E), c[B].add(g), c[P].add(g), c[w].add(g), h[B].add(p), h[P].add(p), h[w].add(p));
        }
        let y = this.groups;
        y.length === 0 && (y = [
            {
                start: 0,
                count: n.length
            }
        ]);
        for(let B1 = 0, P = y.length; B1 < P; ++B1){
            let w = y[B1], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)_(n[U + 0], n[U + 1], n[U + 2]);
        }
        let b = new M, A = new M, L = new M, I = new M;
        function k(B) {
            L.fromArray(r, B * 3), I.copy(L);
            let P = c[B];
            b.copy(P), b.sub(L.multiplyScalar(L.dot(P))).normalize(), A.crossVectors(I, P);
            let E = A.dot(h[B]) < 0 ? -1 : 1;
            l[B * 4] = b.x, l[B * 4 + 1] = b.y, l[B * 4 + 2] = b.z, l[B * 4 + 3] = E;
        }
        for(let B2 = 0, P1 = y.length; B2 < P1; ++B2){
            let w1 = y[B2], E1 = w1.start, D1 = w1.count;
            for(let U1 = E1, F1 = E1 + D1; U1 < F1; U1 += 3)k(n[U1 + 0]), k(n[U1 + 1]), k(n[U1 + 2]);
        }
    }
    computeVertexNormals() {
        let e = this.index, t = this.getAttribute("position");
        if (t !== void 0) {
            let n = this.getAttribute("normal");
            if (n === void 0) n = new Ue(new Float32Array(t.count * 3), 3), this.setAttribute("normal", n);
            else for(let d = 0, f = n.count; d < f; d++)n.setXYZ(d, 0, 0, 0);
            let i = new M, r = new M, o = new M, a = new M, l = new M, c = new M, h = new M, u = new M;
            if (e) for(let d1 = 0, f1 = e.count; d1 < f1; d1 += 3){
                let m = e.getX(d1 + 0), x = e.getX(d1 + 1), v = e.getX(d1 + 2);
                i.fromBufferAttribute(t, m), r.fromBufferAttribute(t, x), o.fromBufferAttribute(t, v), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), a.fromBufferAttribute(n, m), l.fromBufferAttribute(n, x), c.fromBufferAttribute(n, v), a.add(h), l.add(h), c.add(h), n.setXYZ(m, a.x, a.y, a.z), n.setXYZ(x, l.x, l.y, l.z), n.setXYZ(v, c.x, c.y, c.z);
            }
            else for(let d2 = 0, f2 = t.count; d2 < f2; d2 += 3)i.fromBufferAttribute(t, d2 + 0), r.fromBufferAttribute(t, d2 + 1), o.fromBufferAttribute(t, d2 + 2), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), n.setXYZ(d2 + 0, h.x, h.y, h.z), n.setXYZ(d2 + 1, h.x, h.y, h.z), n.setXYZ(d2 + 2, h.x, h.y, h.z);
            this.normalizeNormals(), n.needsUpdate = !0;
        }
    }
    merge(e, t) {
        if (!(e && e.isBufferGeometry)) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
            return;
        }
        t === void 0 && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
        let n = this.attributes;
        for(let i in n){
            if (e.attributes[i] === void 0) continue;
            let o = n[i].array, a = e.attributes[i], l = a.array, c = a.itemSize * t, h = Math.min(l.length, o.length - c);
            for(let u = 0, d = c; u < h; u++, d++)o[d] = l[u];
        }
        return this;
    }
    normalizeNormals() {
        let e = this.attributes.normal;
        for(let t = 0, n = e.count; t < n; t++)ht.fromBufferAttribute(e, t), ht.normalize(), e.setXYZ(t, ht.x, ht.y, ht.z);
    }
    toNonIndexed() {
        function e(a, l) {
            let c = a.array, h = a.itemSize, u = a.normalized, d = new c.constructor(l.length * h), f = 0, m = 0;
            for(let x = 0, v = l.length; x < v; x++){
                a.isInterleavedBufferAttribute ? f = l[x] * a.data.stride + a.offset : f = l[x] * h;
                for(let g = 0; g < h; g++)d[m++] = c[f++];
            }
            return new Ue(d, h, u);
        }
        if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
        let t = new _e, n = this.index.array, i = this.attributes;
        for(let a in i){
            let l = i[a], c = e(l, n);
            t.setAttribute(a, c);
        }
        let r = this.morphAttributes;
        for(let a1 in r){
            let l1 = [], c1 = r[a1];
            for(let h = 0, u = c1.length; h < u; h++){
                let d = c1[h], f = e(d, n);
                l1.push(f);
            }
            t.morphAttributes[a1] = l1;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        let o = this.groups;
        for(let a2 = 0, l2 = o.length; a2 < l2; a2++){
            let c2 = o[a2];
            t.addGroup(c2.start, c2.count, c2.materialIndex);
        }
        return t;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
            let l = this.parameters;
            for(let c in l)l[c] !== void 0 && (e[c] = l[c]);
            return e;
        }
        e.data = {
            attributes: {}
        };
        let t = this.index;
        t !== null && (e.data.index = {
            type: t.array.constructor.name,
            array: Array.prototype.slice.call(t.array)
        });
        let n = this.attributes;
        for(let l1 in n){
            let c1 = n[l1];
            e.data.attributes[l1] = c1.toJSON(e.data);
        }
        let i = {}, r = !1;
        for(let l2 in this.morphAttributes){
            let c2 = this.morphAttributes[l2], h = [];
            for(let u = 0, d = c2.length; u < d; u++){
                let f = c2[u];
                h.push(f.toJSON(e.data));
            }
            h.length > 0 && (i[l2] = h, r = !0);
        }
        r && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
        let o = this.groups;
        o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
        let a = this.boundingSphere;
        return a !== null && (e.data.boundingSphere = {
            center: a.center.toArray(),
            radius: a.radius
        }), e;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
        let t = {};
        this.name = e.name;
        let n = e.index;
        n !== null && this.setIndex(n.clone(t));
        let i = e.attributes;
        for(let c in i){
            let h = i[c];
            this.setAttribute(c, h.clone(t));
        }
        let r = e.morphAttributes;
        for(let c1 in r){
            let h1 = [], u = r[c1];
            for(let d = 0, f = u.length; d < f; d++)h1.push(u[d].clone(t));
            this.morphAttributes[c1] = h1;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        let o = e.groups;
        for(let c2 = 0, h2 = o.length; c2 < h2; c2++){
            let u1 = o[c2];
            this.addGroup(u1.start, u1.count, u1.materialIndex);
        }
        let a = e.boundingBox;
        a !== null && (this.boundingBox = a.clone());
        let l = e.boundingSphere;
        return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, e.parameters !== void 0 && (this.parameters = Object.assign({}, e.parameters)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
_e.prototype.isBufferGeometry = !0;
var Cl = new pe, hi = new Cn, Bo = new An, mn = new M, gn = new M, xn = new M, zo = new M, Uo = new M, Oo = new M, Kr = new M, es = new M, ts = new M, ns = new X, is = new X, rs = new X, Ho = new M, ss = new M, st = class extends Ne {
    constructor(e = new _e, t = new hn){
        super();
        this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this;
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
    raycast(e, t) {
        let n = this.geometry, i = this.material, r = this.matrixWorld;
        if (i === void 0 || (n.boundingSphere === null && n.computeBoundingSphere(), Bo.copy(n.boundingSphere), Bo.applyMatrix4(r), e.ray.intersectsSphere(Bo) === !1) || (Cl.copy(r).invert(), hi.copy(e.ray).applyMatrix4(Cl), n.boundingBox !== null && hi.intersectsBox(n.boundingBox) === !1)) return;
        let o;
        if (n.isBufferGeometry) {
            let a = n.index, l = n.attributes.position, c = n.morphAttributes.position, h = n.morphTargetsRelative, u = n.attributes.uv, d = n.attributes.uv2, f = n.groups, m = n.drawRange;
            if (a !== null) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(a.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = a.getX(b), I = a.getX(b + 1), k = a.getX(b + 2);
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x1 = Math.max(0, m.start), v1 = Math.min(a.count, m.start + m.count);
                for(let g1 = x1, p1 = v1; g1 < p1; g1 += 3){
                    let _1 = a.getX(g1), y1 = a.getX(g1 + 1), b1 = a.getX(g1 + 2);
                    o = os(this, i, e, hi, l, c, h, u, d, _1, y1, b1), o && (o.faceIndex = Math.floor(g1 / 3), t.push(o));
                }
            }
            else if (l !== void 0) if (Array.isArray(i)) for(let x2 = 0, v2 = f.length; x2 < v2; x2++){
                let g2 = f[x2], p2 = i[g2.materialIndex], _2 = Math.max(g2.start, m.start), y2 = Math.min(l.count, Math.min(g2.start + g2.count, m.start + m.count));
                for(let b2 = _2, A1 = y2; b2 < A1; b2 += 3){
                    let L1 = b2, I1 = b2 + 1, k1 = b2 + 2;
                    o = os(this, p2, e, hi, l, c, h, u, d, L1, I1, k1), o && (o.faceIndex = Math.floor(b2 / 3), o.face.materialIndex = g2.materialIndex, t.push(o));
                }
            }
            else {
                let x3 = Math.max(0, m.start), v3 = Math.min(l.count, m.start + m.count);
                for(let g3 = x3, p3 = v3; g3 < p3; g3 += 3){
                    let _3 = g3, y3 = g3 + 1, b3 = g3 + 2;
                    o = os(this, i, e, hi, l, c, h, u, d, _3, y3, b3), o && (o.faceIndex = Math.floor(g3 / 3), t.push(o));
                }
            }
        } else n.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
};
st.prototype.isMesh = !0;
function hf(s, e, t, n, i, r, o, a) {
    let l;
    if (e.side === it ? l = n.intersectTriangle(o, r, i, !0, a) : l = n.intersectTriangle(i, r, o, e.side !== Ci, a), l === null) return null;
    ss.copy(a), ss.applyMatrix4(s.matrixWorld);
    let c = t.ray.origin.distanceTo(ss);
    return c < t.near || c > t.far ? null : {
        distance: c,
        point: ss.clone(),
        object: s
    };
}
function os(s, e, t, n, i, r, o, a, l, c, h, u) {
    mn.fromBufferAttribute(i, c), gn.fromBufferAttribute(i, h), xn.fromBufferAttribute(i, u);
    let d = s.morphTargetInfluences;
    if (r && d) {
        Kr.set(0, 0, 0), es.set(0, 0, 0), ts.set(0, 0, 0);
        for(let m = 0, x = r.length; m < x; m++){
            let v = d[m], g = r[m];
            v !== 0 && (zo.fromBufferAttribute(g, c), Uo.fromBufferAttribute(g, h), Oo.fromBufferAttribute(g, u), o ? (Kr.addScaledVector(zo, v), es.addScaledVector(Uo, v), ts.addScaledVector(Oo, v)) : (Kr.addScaledVector(zo.sub(mn), v), es.addScaledVector(Uo.sub(gn), v), ts.addScaledVector(Oo.sub(xn), v)));
        }
        mn.add(Kr), gn.add(es), xn.add(ts);
    }
    s.isSkinnedMesh && (s.boneTransform(c, mn), s.boneTransform(h, gn), s.boneTransform(u, xn));
    let f = hf(s, e, t, n, mn, gn, xn, Ho);
    if (f) {
        a && (ns.fromBufferAttribute(a, c), is.fromBufferAttribute(a, h), rs.fromBufferAttribute(a, u), f.uv = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X)), l && (ns.fromBufferAttribute(l, c), is.fromBufferAttribute(l, h), rs.fromBufferAttribute(l, u), f.uv2 = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X));
        let m1 = {
            a: c,
            b: h,
            c: u,
            normal: new M,
            materialIndex: 0
        };
        nt.getNormal(mn, gn, xn, m1.normal), f.face = m1;
    }
    return f;
}
var wn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1, r = 1, o = 1){
        super();
        this.type = "BoxGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: o
        };
        let a = this;
        i = Math.floor(i), r = Math.floor(r), o = Math.floor(o);
        let l = [], c = [], h = [], u = [], d = 0, f = 0;
        m("z", "y", "x", -1, -1, n, t, e, o, r, 0), m("z", "y", "x", 1, -1, n, t, -e, o, r, 1), m("x", "z", "y", 1, 1, e, n, t, i, o, 2), m("x", "z", "y", 1, -1, e, n, -t, i, o, 3), m("x", "y", "z", 1, -1, e, t, n, i, r, 4), m("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(l), this.setAttribute("position", new de(c, 3)), this.setAttribute("normal", new de(h, 3)), this.setAttribute("uv", new de(u, 2));
        function m(x, v, g, p, _, y, b, A, L, I, k) {
            let B = y / L, P = b / I, w = y / 2, E = b / 2, D = A / 2, U = L + 1, F = I + 1, O = 0, ne = 0, ce = new M;
            for(let V = 0; V < F; V++){
                let W = V * P - E;
                for(let he = 0; he < U; he++){
                    let le = he * B - w;
                    ce[x] = le * p, ce[v] = W * _, ce[g] = D, c.push(ce.x, ce.y, ce.z), ce[x] = 0, ce[v] = 0, ce[g] = A > 0 ? 1 : -1, h.push(ce.x, ce.y, ce.z), u.push(he / L), u.push(1 - V / I), O += 1;
                }
            }
            for(let V1 = 0; V1 < I; V1++)for(let W1 = 0; W1 < L; W1++){
                let he1 = d + W1 + U * V1, le1 = d + W1 + U * (V1 + 1), fe = d + (W1 + 1) + U * (V1 + 1), Be = d + (W1 + 1) + U * V1;
                l.push(he1, le1, Be), l.push(le1, fe, Be), ne += 6;
            }
            a.addGroup(f, ne, k), f += ne, d += O;
        }
    }
    static fromJSON(e) {
        return new wn(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
    }
};
function Ri(s) {
    let e = {};
    for(let t in s){
        e[t] = {};
        for(let n in s[t]){
            let i = s[t][n];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? e[t][n] = i.clone() : Array.isArray(i) ? e[t][n] = i.slice() : e[t][n] = i;
        }
    }
    return e;
}
function yt(s) {
    let e = {};
    for(let t = 0; t < s.length; t++){
        let n = Ri(s[t]);
        for(let i in n)e[i] = n[i];
    }
    return e;
}
var uf = {
    clone: Ri,
    merge: yt
}, df = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, ff = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, sn = class extends dt {
    constructor(e){
        super();
        this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = df, this.fragmentShader = ff, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [
                1,
                1,
                1
            ],
            uv: [
                0,
                0
            ],
            uv2: [
                0,
                0
            ]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && (e.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
    }
    copy(e) {
        return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Ri(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        t.glslVersion = this.glslVersion, t.uniforms = {};
        for(let i in this.uniforms){
            let o = this.uniforms[i].value;
            o && o.isTexture ? t.uniforms[i] = {
                type: "t",
                value: o.toJSON(e).uuid
            } : o && o.isColor ? t.uniforms[i] = {
                type: "c",
                value: o.getHex()
            } : o && o.isVector2 ? t.uniforms[i] = {
                type: "v2",
                value: o.toArray()
            } : o && o.isVector3 ? t.uniforms[i] = {
                type: "v3",
                value: o.toArray()
            } : o && o.isVector4 ? t.uniforms[i] = {
                type: "v4",
                value: o.toArray()
            } : o && o.isMatrix3 ? t.uniforms[i] = {
                type: "m3",
                value: o.toArray()
            } : o && o.isMatrix4 ? t.uniforms[i] = {
                type: "m4",
                value: o.toArray()
            } : t.uniforms[i] = {
                value: o
            };
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
        let n = {};
        for(let i1 in this.extensions)this.extensions[i1] === !0 && (n[i1] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
};
sn.prototype.isShaderMaterial = !0;
var Ir = class extends Ne {
    constructor(){
        super();
        this.type = "Camera", this.matrixWorldInverse = new pe, this.projectionMatrix = new pe, this.projectionMatrixInverse = new pe;
    }
    copy(e, t) {
        return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(-t[8], -t[9], -t[10]).normalize();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Ir.prototype.isCamera = !0;
var ut = class extends Ir {
    constructor(e = 50, t = 1, n = .1, i = 2e3){
        super();
        this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
    }
    setFocalLength(e) {
        let t = .5 * this.getFilmHeight() / e;
        this.fov = dr * 2 * Math.atan(t), this.updateProjectionMatrix();
    }
    getFocalLength() {
        let e = Math.tan(Wn * .5 * this.fov);
        return .5 * this.getFilmHeight() / e;
    }
    getEffectiveFOV() {
        return dr * 2 * Math.atan(Math.tan(Wn * .5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    setViewOffset(e, t, n, i, r, o) {
        this.aspect = e / t, this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = this.near, t = e * Math.tan(Wn * .5 * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -.5 * i, o = this.view;
        if (this.view !== null && this.view.enabled) {
            let l = o.fullWidth, c = o.fullHeight;
            r += o.offsetX * i / l, t -= o.offsetY * n / c, i *= o.width / l, n *= o.height / c;
        }
        let a = this.filmOffset;
        a !== 0 && (r += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
    }
};
ut.prototype.isPerspectiveCamera = !0;
var ui = 90, di = 1, $s = class extends Ne {
    constructor(e, t, n){
        super();
        if (this.type = "CubeCamera", n.isWebGLCubeRenderTarget !== !0) {
            console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
            return;
        }
        this.renderTarget = n;
        let i = new ut(ui, di, e, t);
        i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new M(1, 0, 0)), this.add(i);
        let r = new ut(ui, di, e, t);
        r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new M(-1, 0, 0)), this.add(r);
        let o = new ut(ui, di, e, t);
        o.layers = this.layers, o.up.set(0, 0, 1), o.lookAt(new M(0, 1, 0)), this.add(o);
        let a = new ut(ui, di, e, t);
        a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new M(0, -1, 0)), this.add(a);
        let l = new ut(ui, di, e, t);
        l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new M(0, 0, 1)), this.add(l);
        let c = new ut(ui, di, e, t);
        c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new M(0, 0, -1)), this.add(c);
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        let n = this.renderTarget, [i, r, o, a, l, c] = this.children, h = e.xr.enabled, u = e.getRenderTarget();
        e.xr.enabled = !1;
        let d = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, r), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, a), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = d, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(u), e.xr.enabled = h;
    }
}, ki = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        e = e !== void 0 ? e : [], t = t !== void 0 ? t : Bi;
        super(e, t, n, i, r, o, a, l, c, h);
        this.flipY = !1;
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
};
ki.prototype.isCubeTexture = !0;
var js = class extends At {
    constructor(e, t, n){
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n);
        super(e, e, t);
        t = t || {}, this.texture = new ki(void 0, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.encoding), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : tt, this.texture._needsFlipEnvMap = !1;
    }
    fromEquirectangularTexture(e, t) {
        this.texture.type = t.type, this.texture.format = ct, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
        let n = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
            fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
        }, i = new wn(5, 5, 5), r = new sn({
            name: "CubemapFromEquirect",
            uniforms: Ri(n.uniforms),
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            side: it,
            blending: vn
        });
        r.uniforms.tEquirect.value = t;
        let o = new st(i, r), a = t.minFilter;
        return t.minFilter === Ui && (t.minFilter = tt), new $s(1, 10, this).update(e, o), t.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
    }
    clear(e, t, n, i) {
        let r = e.getRenderTarget();
        for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(t, n, i);
        e.setRenderTarget(r);
    }
};
js.prototype.isWebGLCubeRenderTarget = !0;
var ko = new M, pf = new M, mf = new lt, Wt = class {
    constructor(e = new M(1, 0, 0), t = 0){
        this.normal = e, this.constant = t;
    }
    set(e, t) {
        return this.normal.copy(e), this.constant = t, this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), this.constant = i, this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
    }
    setFromCoplanarPoints(e, t, n) {
        let i = ko.subVectors(n, t).cross(pf.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), this.constant = e.constant, this;
    }
    normalize() {
        let e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this;
    }
    negate() {
        return this.constant *= -1, this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
    }
    intersectLine(e, t) {
        let n = e.delta(ko), i = this.normal.dot(n);
        if (i === 0) return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        let r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1 ? null : t.copy(n).multiplyScalar(r).add(e.start);
    }
    intersectsLine(e) {
        let t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0;
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        let n = t || mf.getNormalMatrix(e), i = this.coplanarPoint(ko).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
        return this.constant = -i.dot(r), this;
    }
    translate(e) {
        return this.constant -= e.dot(this.normal), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Wt.prototype.isPlane = !0;
var fi = new An, as = new M, Dr = class {
    constructor(e = new Wt, t = new Wt, n = new Wt, i = new Wt, r = new Wt, o = new Wt){
        this.planes = [
            e,
            t,
            n,
            i,
            r,
            o
        ];
    }
    set(e, t, n, i, r, o) {
        let a = this.planes;
        return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(o), this;
    }
    copy(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e) {
        let t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], f = n[9], m = n[10], x = n[11], v = n[12], g = n[13], p = n[14], _ = n[15];
        return t[0].setComponents(a - i, u - l, x - d, _ - v).normalize(), t[1].setComponents(a + i, u + l, x + d, _ + v).normalize(), t[2].setComponents(a + r, u + c, x + f, _ + g).normalize(), t[3].setComponents(a - r, u - c, x - f, _ - g).normalize(), t[4].setComponents(a - o, u - h, x - m, _ - p).normalize(), t[5].setComponents(a + o, u + h, x + m, _ + p).normalize(), this;
    }
    intersectsObject(e) {
        let t = e.geometry;
        return t.boundingSphere === null && t.computeBoundingSphere(), fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSprite(e) {
        return fi.center.set(0, 0, 0), fi.radius = .7071067811865476, fi.applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSphere(e) {
        let t = this.planes, n = e.center, i = -e.radius;
        for(let r = 0; r < 6; r++)if (t[r].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++){
            let i = t[n];
            if (as.x = i.normal.x > 0 ? e.max.x : e.min.x, as.y = i.normal.y > 0 ? e.max.y : e.min.y, as.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(as) < 0) return !1;
        }
        return !0;
    }
    containsPoint(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
function rh() {
    let s = null, e = !1, t = null, n = null;
    function i(r, o) {
        t(r, o), n = s.requestAnimationFrame(i);
    }
    return {
        start: function() {
            e !== !0 && t !== null && (n = s.requestAnimationFrame(i), e = !0);
        },
        stop: function() {
            s.cancelAnimationFrame(n), e = !1;
        },
        setAnimationLoop: function(r) {
            t = r;
        },
        setContext: function(r) {
            s = r;
        }
    };
}
function gf(s, e) {
    let t = e.isWebGL2, n = new WeakMap;
    function i(c, h) {
        let u = c.array, d = c.usage, f = s.createBuffer();
        s.bindBuffer(h, f), s.bufferData(h, u, d), c.onUploadCallback();
        let m = 5126;
        return u instanceof Float32Array ? m = 5126 : u instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : u instanceof Uint16Array ? c.isFloat16BufferAttribute ? t ? m = 5131 : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : m = 5123 : u instanceof Int16Array ? m = 5122 : u instanceof Uint32Array ? m = 5125 : u instanceof Int32Array ? m = 5124 : u instanceof Int8Array ? m = 5120 : (u instanceof Uint8Array || u instanceof Uint8ClampedArray) && (m = 5121), {
            buffer: f,
            type: m,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: c.version
        };
    }
    function r(c, h, u) {
        let d = h.array, f = h.updateRange;
        s.bindBuffer(u, c), f.count === -1 ? s.bufferSubData(u, 0, d) : (t ? s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d, f.offset, f.count) : s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d.subarray(f.offset, f.offset + f.count)), f.count = -1);
    }
    function o(c) {
        return c.isInterleavedBufferAttribute && (c = c.data), n.get(c);
    }
    function a(c) {
        c.isInterleavedBufferAttribute && (c = c.data);
        let h = n.get(c);
        h && (s.deleteBuffer(h.buffer), n.delete(c));
    }
    function l(c, h) {
        if (c.isGLBufferAttribute) {
            let d = n.get(c);
            (!d || d.version < c.version) && n.set(c, {
                buffer: c.buffer,
                type: c.type,
                bytesPerElement: c.elementSize,
                version: c.version
            });
            return;
        }
        c.isInterleavedBufferAttribute && (c = c.data);
        let u = n.get(c);
        u === void 0 ? n.set(c, i(c, h)) : u.version < c.version && (r(u.buffer, c, h), u.version = c.version);
    }
    return {
        get: o,
        remove: a,
        update: l
    };
}
var Pi = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1){
        super();
        this.type = "PlaneGeometry", this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: i
        };
        let r = e / 2, o = t / 2, a = Math.floor(n), l = Math.floor(i), c = a + 1, h = l + 1, u = e / a, d = t / l, f = [], m = [], x = [], v = [];
        for(let g = 0; g < h; g++){
            let p = g * d - o;
            for(let _ = 0; _ < c; _++){
                let y = _ * u - r;
                m.push(y, -p, 0), x.push(0, 0, 1), v.push(_ / a), v.push(1 - g / l);
            }
        }
        for(let g1 = 0; g1 < l; g1++)for(let p1 = 0; p1 < a; p1++){
            let _1 = p1 + c * g1, y1 = p1 + c * (g1 + 1), b = p1 + 1 + c * (g1 + 1), A = p1 + 1 + c * g1;
            f.push(_1, y1, A), f.push(y1, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Pi(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}, xf = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, yf = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, vf = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, _f = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Mf = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, bf = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, wf = "vec3 transformed = vec3( position );", Sf = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Tf = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, Ef = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Af = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Cf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Lf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Rf = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Pf = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, If = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Df = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Ff = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, Nf = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, Bf = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, zf = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Uf = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Of = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Hf = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, kf = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Gf = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Vf = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, Wf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, qf = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Xf = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Jf = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Yf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Zf = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, $f = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, jf = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Qf = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Kf = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, ep = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, tp = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, np = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, ip = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, rp = `#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, sp = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, op = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, ap = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, lp = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, cp = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, hp = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, up = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, dp = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, fp = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, pp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, mp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, gp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, xp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, yp = `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`, vp = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, _p = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Mp = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, bp = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, wp = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Sp = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Tp = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Ep = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, Ap = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, Cp = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Lp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Rp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Pp = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Ip = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, Dp = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Fp = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, Np = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, Bp = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, zp = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, Up = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Op = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Hp = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, kp = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Gp = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Vp = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Wp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, qp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, Xp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, Jp = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Yp = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, Zp = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`, $p = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, jp = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qp = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Kp = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, em = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, tm = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, nm = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, im = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, rm = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, sm = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, om = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, am = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, lm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, cm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, hm = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`, um = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, dm = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, fm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, pm = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, mm = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, gm = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, xm = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, ym = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, vm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, _m = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Mm = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, bm = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, wm = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Sm = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Tm = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Em = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Am = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Cm = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lm = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Rm = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`, Pm = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Im = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Dm = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Fm = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Nm = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Bm = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, zm = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Um = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Om = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Hm = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, km = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Gm = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Fe = {
    alphamap_fragment: xf,
    alphamap_pars_fragment: yf,
    alphatest_fragment: vf,
    alphatest_pars_fragment: _f,
    aomap_fragment: Mf,
    aomap_pars_fragment: bf,
    begin_vertex: wf,
    beginnormal_vertex: Sf,
    bsdfs: Tf,
    bumpmap_pars_fragment: Ef,
    clipping_planes_fragment: Af,
    clipping_planes_pars_fragment: Cf,
    clipping_planes_pars_vertex: Lf,
    clipping_planes_vertex: Rf,
    color_fragment: Pf,
    color_pars_fragment: If,
    color_pars_vertex: Df,
    color_vertex: Ff,
    common: Nf,
    cube_uv_reflection_fragment: Bf,
    defaultnormal_vertex: zf,
    displacementmap_pars_vertex: Uf,
    displacementmap_vertex: Of,
    emissivemap_fragment: Hf,
    emissivemap_pars_fragment: kf,
    encodings_fragment: Gf,
    encodings_pars_fragment: Vf,
    envmap_fragment: Wf,
    envmap_common_pars_fragment: qf,
    envmap_pars_fragment: Xf,
    envmap_pars_vertex: Jf,
    envmap_physical_pars_fragment: rp,
    envmap_vertex: Yf,
    fog_vertex: Zf,
    fog_pars_vertex: $f,
    fog_fragment: jf,
    fog_pars_fragment: Qf,
    gradientmap_pars_fragment: Kf,
    lightmap_fragment: ep,
    lightmap_pars_fragment: tp,
    lights_lambert_vertex: np,
    lights_pars_begin: ip,
    lights_toon_fragment: sp,
    lights_toon_pars_fragment: op,
    lights_phong_fragment: ap,
    lights_phong_pars_fragment: lp,
    lights_physical_fragment: cp,
    lights_physical_pars_fragment: hp,
    lights_fragment_begin: up,
    lights_fragment_maps: dp,
    lights_fragment_end: fp,
    logdepthbuf_fragment: pp,
    logdepthbuf_pars_fragment: mp,
    logdepthbuf_pars_vertex: gp,
    logdepthbuf_vertex: xp,
    map_fragment: yp,
    map_pars_fragment: vp,
    map_particle_fragment: _p,
    map_particle_pars_fragment: Mp,
    metalnessmap_fragment: bp,
    metalnessmap_pars_fragment: wp,
    morphnormal_vertex: Sp,
    morphtarget_pars_vertex: Tp,
    morphtarget_vertex: Ep,
    normal_fragment_begin: Ap,
    normal_fragment_maps: Cp,
    normal_pars_fragment: Lp,
    normal_pars_vertex: Rp,
    normal_vertex: Pp,
    normalmap_pars_fragment: Ip,
    clearcoat_normal_fragment_begin: Dp,
    clearcoat_normal_fragment_maps: Fp,
    clearcoat_pars_fragment: Np,
    output_fragment: Bp,
    packing: zp,
    premultiplied_alpha_fragment: Up,
    project_vertex: Op,
    dithering_fragment: Hp,
    dithering_pars_fragment: kp,
    roughnessmap_fragment: Gp,
    roughnessmap_pars_fragment: Vp,
    shadowmap_pars_fragment: Wp,
    shadowmap_pars_vertex: qp,
    shadowmap_vertex: Xp,
    shadowmask_pars_fragment: Jp,
    skinbase_vertex: Yp,
    skinning_pars_vertex: Zp,
    skinning_vertex: $p,
    skinnormal_vertex: jp,
    specularmap_fragment: Qp,
    specularmap_pars_fragment: Kp,
    tonemapping_fragment: em,
    tonemapping_pars_fragment: tm,
    transmission_fragment: nm,
    transmission_pars_fragment: im,
    uv_pars_fragment: rm,
    uv_pars_vertex: sm,
    uv_vertex: om,
    uv2_pars_fragment: am,
    uv2_pars_vertex: lm,
    uv2_vertex: cm,
    worldpos_vertex: hm,
    background_vert: um,
    background_frag: dm,
    cube_vert: fm,
    cube_frag: pm,
    depth_vert: mm,
    depth_frag: gm,
    distanceRGBA_vert: xm,
    distanceRGBA_frag: ym,
    equirect_vert: vm,
    equirect_frag: _m,
    linedashed_vert: Mm,
    linedashed_frag: bm,
    meshbasic_vert: wm,
    meshbasic_frag: Sm,
    meshlambert_vert: Tm,
    meshlambert_frag: Em,
    meshmatcap_vert: Am,
    meshmatcap_frag: Cm,
    meshnormal_vert: Lm,
    meshnormal_frag: Rm,
    meshphong_vert: Pm,
    meshphong_frag: Im,
    meshphysical_vert: Dm,
    meshphysical_frag: Fm,
    meshtoon_vert: Nm,
    meshtoon_frag: Bm,
    points_vert: zm,
    points_frag: Um,
    shadow_vert: Om,
    shadow_frag: Hm,
    sprite_vert: km,
    sprite_frag: Gm
}, ie = {
    common: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        uvTransform: {
            value: new lt
        },
        uv2Transform: {
            value: new lt
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        }
    },
    specularmap: {
        specularMap: {
            value: null
        }
    },
    envmap: {
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        ior: {
            value: 1.5
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalScale: {
            value: new X(1, 1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        }
    },
    gradientmap: {
        gradientMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new ae(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        lightProbe: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {}
            }
        },
        directionalLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {}
            }
        },
        spotLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {
            value: []
        },
        spotShadowMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {}
            }
        },
        pointLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        },
        rectAreaLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                width: {},
                height: {}
            }
        },
        ltc_1: {
            value: null
        },
        ltc_2: {
            value: null
        }
    },
    points: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    },
    sprite: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        center: {
            value: new X(.5, .5)
        },
        rotation: {
            value: 0
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    }
}, qt = {
    basic: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.fog
        ]),
        vertexShader: Fe.meshbasic_vert,
        fragmentShader: Fe.meshbasic_frag
    },
    lambert: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshlambert_vert,
        fragmentShader: Fe.meshlambert_frag
    },
    phong: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                specular: {
                    value: new ae(1118481)
                },
                shininess: {
                    value: 30
                }
            }
        ]),
        vertexShader: Fe.meshphong_vert,
        fragmentShader: Fe.meshphong_frag
    },
    standard: {
        uniforms: yt([
            ie.common,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.roughnessmap,
            ie.metalnessmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshphysical_vert,
        fragmentShader: Fe.meshphysical_frag
    },
    toon: {
        uniforms: yt([
            ie.common,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.gradientmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshtoon_vert,
        fragmentShader: Fe.meshtoon_frag
    },
    matcap: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            {
                matcap: {
                    value: null
                }
            }
        ]),
        vertexShader: Fe.meshmatcap_vert,
        fragmentShader: Fe.meshmatcap_frag
    },
    points: {
        uniforms: yt([
            ie.points,
            ie.fog
        ]),
        vertexShader: Fe.points_vert,
        fragmentShader: Fe.points_frag
    },
    dashed: {
        uniforms: yt([
            ie.common,
            ie.fog,
            {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }
        ]),
        vertexShader: Fe.linedashed_vert,
        fragmentShader: Fe.linedashed_frag
    },
    depth: {
        uniforms: yt([
            ie.common,
            ie.displacementmap
        ]),
        vertexShader: Fe.depth_vert,
        fragmentShader: Fe.depth_frag
    },
    normal: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshnormal_vert,
        fragmentShader: Fe.meshnormal_frag
    },
    sprite: {
        uniforms: yt([
            ie.sprite,
            ie.fog
        ]),
        vertexShader: Fe.sprite_vert,
        fragmentShader: Fe.sprite_frag
    },
    background: {
        uniforms: {
            uvTransform: {
                value: new lt
            },
            t2D: {
                value: null
            }
        },
        vertexShader: Fe.background_vert,
        fragmentShader: Fe.background_frag
    },
    cube: {
        uniforms: yt([
            ie.envmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.cube_vert,
        fragmentShader: Fe.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            }
        },
        vertexShader: Fe.equirect_vert,
        fragmentShader: Fe.equirect_frag
    },
    distanceRGBA: {
        uniforms: yt([
            ie.common,
            ie.displacementmap,
            {
                referencePosition: {
                    value: new M
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }
        ]),
        vertexShader: Fe.distanceRGBA_vert,
        fragmentShader: Fe.distanceRGBA_frag
    },
    shadow: {
        uniforms: yt([
            ie.lights,
            ie.fog,
            {
                color: {
                    value: new ae(0)
                },
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.shadow_vert,
        fragmentShader: Fe.shadow_frag
    }
};
qt.physical = {
    uniforms: yt([
        qt.standard.uniforms,
        {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new X(1, 1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: 0
            },
            sheenColor: {
                value: new ae(0)
            },
            sheenColorMap: {
                value: null
            },
            sheenRoughness: {
                value: 0
            },
            sheenRoughnessMap: {
                value: null
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            },
            transmissionSamplerSize: {
                value: new X
            },
            transmissionSamplerMap: {
                value: null
            },
            thickness: {
                value: 0
            },
            thicknessMap: {
                value: null
            },
            attenuationDistance: {
                value: 0
            },
            attenuationColor: {
                value: new ae(0)
            },
            specularIntensity: {
                value: 0
            },
            specularIntensityMap: {
                value: null
            },
            specularColor: {
                value: new ae(1, 1, 1)
            },
            specularColorMap: {
                value: null
            }
        }
    ]),
    vertexShader: Fe.meshphysical_vert,
    fragmentShader: Fe.meshphysical_frag
};
function Vm(s, e, t, n, i) {
    let r = new ae(0), o = 0, a, l, c = null, h = 0, u = null;
    function d(m, x) {
        let v = !1, g = x.isScene === !0 ? x.background : null;
        g && g.isTexture && (g = e.get(g));
        let p = s.xr, _ = p.getSession && p.getSession();
        _ && _.environmentBlendMode === "additive" && (g = null), g === null ? f(r, o) : g && g.isColor && (f(g, 1), v = !0), (s.autoClear || v) && s.clear(s.autoClearColor, s.autoClearDepth, s.autoClearStencil), g && (g.isCubeTexture || g.mapping === Pr) ? (l === void 0 && (l = new st(new wn(1, 1, 1), new sn({
            name: "BackgroundCubeMaterial",
            uniforms: Ri(qt.cube.uniforms),
            vertexShader: qt.cube.vertexShader,
            fragmentShader: qt.cube.fragmentShader,
            side: it,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), l.geometry.deleteAttribute("normal"), l.geometry.deleteAttribute("uv"), l.onBeforeRender = function(y, b, A) {
            this.matrixWorld.copyPosition(A.matrixWorld);
        }, Object.defineProperty(l.material, "envMap", {
            get: function() {
                return this.uniforms.envMap.value;
            }
        }), n.update(l)), l.material.uniforms.envMap.value = g, l.material.uniforms.flipEnvMap.value = g.isCubeTexture && g.isRenderTargetTexture === !1 ? -1 : 1, (c !== g || h !== g.version || u !== s.toneMapping) && (l.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(l, l.geometry, l.material, 0, 0, null)) : g && g.isTexture && (a === void 0 && (a = new st(new Pi(2, 2), new sn({
            name: "BackgroundMaterial",
            uniforms: Ri(qt.background.uniforms),
            vertexShader: qt.background.vertexShader,
            fragmentShader: qt.background.fragmentShader,
            side: Ai,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), a.geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
            get: function() {
                return this.uniforms.t2D.value;
            }
        }), n.update(a)), a.material.uniforms.t2D.value = g, g.matrixAutoUpdate === !0 && g.updateMatrix(), a.material.uniforms.uvTransform.value.copy(g.matrix), (c !== g || h !== g.version || u !== s.toneMapping) && (a.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(a, a.geometry, a.material, 0, 0, null));
    }
    function f(m, x) {
        t.buffers.color.setClear(m.r, m.g, m.b, x, i);
    }
    return {
        getClearColor: function() {
            return r;
        },
        setClearColor: function(m, x = 1) {
            r.set(m), o = x, f(r, o);
        },
        getClearAlpha: function() {
            return o;
        },
        setClearAlpha: function(m) {
            o = m, f(r, o);
        },
        render: d
    };
}
function Wm(s, e, t, n) {
    let i = s.getParameter(34921), r = n.isWebGL2 ? null : e.get("OES_vertex_array_object"), o = n.isWebGL2 || r !== null, a = {}, l = x(null), c = l;
    function h(E, D, U, F, O) {
        let ne = !1;
        if (o) {
            let ce = m(F, U, D);
            c !== ce && (c = ce, d(c.object)), ne = v(F, O), ne && g(F, O);
        } else {
            let ce1 = D.wireframe === !0;
            (c.geometry !== F.id || c.program !== U.id || c.wireframe !== ce1) && (c.geometry = F.id, c.program = U.id, c.wireframe = ce1, ne = !0);
        }
        E.isInstancedMesh === !0 && (ne = !0), O !== null && t.update(O, 34963), ne && (L(E, D, U, F), O !== null && s.bindBuffer(34963, t.get(O).buffer));
    }
    function u() {
        return n.isWebGL2 ? s.createVertexArray() : r.createVertexArrayOES();
    }
    function d(E) {
        return n.isWebGL2 ? s.bindVertexArray(E) : r.bindVertexArrayOES(E);
    }
    function f(E) {
        return n.isWebGL2 ? s.deleteVertexArray(E) : r.deleteVertexArrayOES(E);
    }
    function m(E, D, U) {
        let F = U.wireframe === !0, O = a[E.id];
        O === void 0 && (O = {}, a[E.id] = O);
        let ne = O[D.id];
        ne === void 0 && (ne = {}, O[D.id] = ne);
        let ce = ne[F];
        return ce === void 0 && (ce = x(u()), ne[F] = ce), ce;
    }
    function x(E) {
        let D = [], U = [], F = [];
        for(let O = 0; O < i; O++)D[O] = 0, U[O] = 0, F[O] = 0;
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: D,
            enabledAttributes: U,
            attributeDivisors: F,
            object: E,
            attributes: {},
            index: null
        };
    }
    function v(E, D) {
        let U = c.attributes, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = U[ne], V = F[ne];
            if (ce === void 0 || ce.attribute !== V || ce.data !== V.data) return !0;
            O++;
        }
        return c.attributesNum !== O || c.index !== D;
    }
    function g(E, D) {
        let U = {}, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = F[ne], V = {};
            V.attribute = ce, ce.data && (V.data = ce.data), U[ne] = V, O++;
        }
        c.attributes = U, c.attributesNum = O, c.index = D;
    }
    function p() {
        let E = c.newAttributes;
        for(let D = 0, U = E.length; D < U; D++)E[D] = 0;
    }
    function _(E) {
        y(E, 0);
    }
    function y(E, D) {
        let U = c.newAttributes, F = c.enabledAttributes, O = c.attributeDivisors;
        U[E] = 1, F[E] === 0 && (s.enableVertexAttribArray(E), F[E] = 1), O[E] !== D && ((n.isWebGL2 ? s : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](E, D), O[E] = D);
    }
    function b() {
        let E = c.newAttributes, D = c.enabledAttributes;
        for(let U = 0, F = D.length; U < F; U++)D[U] !== E[U] && (s.disableVertexAttribArray(U), D[U] = 0);
    }
    function A(E, D, U, F, O, ne) {
        n.isWebGL2 === !0 && (U === 5124 || U === 5125) ? s.vertexAttribIPointer(E, D, U, O, ne) : s.vertexAttribPointer(E, D, U, F, O, ne);
    }
    function L(E, D, U, F) {
        if (n.isWebGL2 === !1 && (E.isInstancedMesh || F.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
        p();
        let O = F.attributes, ne = U.getAttributes(), ce = D.defaultAttributeValues;
        for(let V in ne){
            let W = ne[V];
            if (W.location >= 0) {
                let he = O[V];
                if (he === void 0 && (V === "instanceMatrix" && E.instanceMatrix && (he = E.instanceMatrix), V === "instanceColor" && E.instanceColor && (he = E.instanceColor)), he !== void 0) {
                    let le = he.normalized, fe = he.itemSize, Be = t.get(he);
                    if (Be === void 0) continue;
                    let Y = Be.buffer, Ce = Be.type, ye = Be.bytesPerElement;
                    if (he.isInterleavedBufferAttribute) {
                        let ge = he.data, xe = ge.stride, Oe = he.offset;
                        if (ge && ge.isInstancedInterleavedBuffer) {
                            for(let G = 0; G < W.locationSize; G++)y(W.location + G, ge.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = ge.meshPerAttribute * ge.count);
                        } else for(let G1 = 0; G1 < W.locationSize; G1++)_(W.location + G1);
                        s.bindBuffer(34962, Y);
                        for(let G2 = 0; G2 < W.locationSize; G2++)A(W.location + G2, fe / W.locationSize, Ce, le, xe * ye, (Oe + fe / W.locationSize * G2) * ye);
                    } else {
                        if (he.isInstancedBufferAttribute) {
                            for(let ge1 = 0; ge1 < W.locationSize; ge1++)y(W.location + ge1, he.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = he.meshPerAttribute * he.count);
                        } else for(let ge2 = 0; ge2 < W.locationSize; ge2++)_(W.location + ge2);
                        s.bindBuffer(34962, Y);
                        for(let ge3 = 0; ge3 < W.locationSize; ge3++)A(W.location + ge3, fe / W.locationSize, Ce, le, fe * ye, fe / W.locationSize * ge3 * ye);
                    }
                } else if (ce !== void 0) {
                    let le1 = ce[V];
                    if (le1 !== void 0) switch(le1.length){
                        case 2:
                            s.vertexAttrib2fv(W.location, le1);
                            break;
                        case 3:
                            s.vertexAttrib3fv(W.location, le1);
                            break;
                        case 4:
                            s.vertexAttrib4fv(W.location, le1);
                            break;
                        default:
                            s.vertexAttrib1fv(W.location, le1);
                    }
                }
            }
        }
        b();
    }
    function I() {
        P();
        for(let E in a){
            let D = a[E];
            for(let U in D){
                let F = D[U];
                for(let O in F)f(F[O].object), delete F[O];
                delete D[U];
            }
            delete a[E];
        }
    }
    function k(E) {
        if (a[E.id] === void 0) return;
        let D = a[E.id];
        for(let U in D){
            let F = D[U];
            for(let O in F)f(F[O].object), delete F[O];
            delete D[U];
        }
        delete a[E.id];
    }
    function B(E) {
        for(let D in a){
            let U = a[D];
            if (U[E.id] === void 0) continue;
            let F = U[E.id];
            for(let O in F)f(F[O].object), delete F[O];
            delete U[E.id];
        }
    }
    function P() {
        w(), c !== l && (c = l, d(c.object));
    }
    function w() {
        l.geometry = null, l.program = null, l.wireframe = !1;
    }
    return {
        setup: h,
        reset: P,
        resetDefaultState: w,
        dispose: I,
        releaseStatesOfGeometry: k,
        releaseStatesOfProgram: B,
        initAttributes: p,
        enableAttribute: _,
        disableUnusedAttributes: b
    };
}
function qm(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(c) {
        r = c;
    }
    function a(c, h) {
        s.drawArrays(r, c, h), t.update(h, r, 1);
    }
    function l(c, h, u) {
        if (u === 0) return;
        let d, f;
        if (i) d = s, f = "drawArraysInstanced";
        else if (d = e.get("ANGLE_instanced_arrays"), f = "drawArraysInstancedANGLE", d === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        d[f](r, c, h, u), t.update(h, r, u);
    }
    this.setMode = o, this.render = a, this.renderInstances = l;
}
function Xm(s, e, t) {
    let n;
    function i() {
        if (n !== void 0) return n;
        if (e.has("EXT_texture_filter_anisotropic") === !0) {
            let L = e.get("EXT_texture_filter_anisotropic");
            n = s.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else n = 0;
        return n;
    }
    function r(L) {
        if (L === "highp") {
            if (s.getShaderPrecisionFormat(35633, 36338).precision > 0 && s.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
            L = "mediump";
        }
        return L === "mediump" && s.getShaderPrecisionFormat(35633, 36337).precision > 0 && s.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
    }
    let o = typeof WebGL2RenderingContext < "u" && s instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && s instanceof WebGL2ComputeRenderingContext, a = t.precision !== void 0 ? t.precision : "highp", l = r(a);
    l !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", l, "instead."), a = l);
    let c = o || e.has("WEBGL_draw_buffers"), h = t.logarithmicDepthBuffer === !0, u = s.getParameter(34930), d = s.getParameter(35660), f = s.getParameter(3379), m = s.getParameter(34076), x = s.getParameter(34921), v = s.getParameter(36347), g = s.getParameter(36348), p = s.getParameter(36349), _ = d > 0, y = o || e.has("OES_texture_float"), b = _ && y, A = o ? s.getParameter(36183) : 0;
    return {
        isWebGL2: o,
        drawBuffers: c,
        getMaxAnisotropy: i,
        getMaxPrecision: r,
        precision: a,
        logarithmicDepthBuffer: h,
        maxTextures: u,
        maxVertexTextures: d,
        maxTextureSize: f,
        maxCubemapSize: m,
        maxAttributes: x,
        maxVertexUniforms: v,
        maxVaryings: g,
        maxFragmentUniforms: p,
        vertexTextures: _,
        floatFragmentTextures: y,
        floatVertexTextures: b,
        maxSamples: A
    };
}
function Jm(s) {
    let e = this, t = null, n = 0, i = !1, r = !1, o = new Wt, a = new lt, l = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(u, d, f) {
        let m = u.length !== 0 || d || n !== 0 || i;
        return i = d, t = h(u, f, 0), n = u.length, m;
    }, this.beginShadows = function() {
        r = !0, h(null);
    }, this.endShadows = function() {
        r = !1, c();
    }, this.setState = function(u, d, f) {
        let m = u.clippingPlanes, x = u.clipIntersection, v = u.clipShadows, g = s.get(u);
        if (!i || m === null || m.length === 0 || r && !v) r ? h(null) : c();
        else {
            let p = r ? 0 : n, _ = p * 4, y = g.clippingState || null;
            l.value = y, y = h(m, d, _, f);
            for(let b = 0; b !== _; ++b)y[b] = t[b];
            g.clippingState = y, this.numIntersection = x ? this.numPlanes : 0, this.numPlanes += p;
        }
    };
    function c() {
        l.value !== t && (l.value = t, l.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function h(u, d, f, m) {
        let x = u !== null ? u.length : 0, v = null;
        if (x !== 0) {
            if (v = l.value, m !== !0 || v === null) {
                let g = f + x * 4, p = d.matrixWorldInverse;
                a.getNormalMatrix(p), (v === null || v.length < g) && (v = new Float32Array(g));
                for(let _ = 0, y = f; _ !== x; ++_, y += 4)o.copy(u[_]).applyMatrix4(p, a), o.normal.toArray(v, y), v[y + 3] = o.constant;
            }
            l.value = v, l.needsUpdate = !0;
        }
        return e.numPlanes = x, e.numIntersection = 0, v;
    }
}
function Ym(s) {
    let e = new WeakMap;
    function t(o, a) {
        return a === Ds ? o.mapping = Bi : a === Fs && (o.mapping = zi), o;
    }
    function n(o) {
        if (o && o.isTexture && o.isRenderTargetTexture === !1) {
            let a = o.mapping;
            if (a === Ds || a === Fs) if (e.has(o)) {
                let l = e.get(o).texture;
                return t(l, o.mapping);
            } else {
                let l1 = o.image;
                if (l1 && l1.height > 0) {
                    let c = s.getRenderTarget(), h = new js(l1.height / 2);
                    return h.fromEquirectangularTexture(s, o), e.set(o, h), s.setRenderTarget(c), o.addEventListener("dispose", i), t(h.texture, o.mapping);
                } else return null;
            }
        }
        return o;
    }
    function i(o) {
        let a = o.target;
        a.removeEventListener("dispose", i);
        let l = e.get(a);
        l !== void 0 && (e.delete(a), l.dispose());
    }
    function r() {
        e = new WeakMap;
    }
    return {
        get: n,
        dispose: r
    };
}
var Fr = class extends Ir {
    constructor(e = -1, t = 1, n = 1, i = -1, r = .1, o = 2e3){
        super();
        this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = r, this.far = o, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
    }
    setViewOffset(e, t, n, i, r, o) {
        this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, a = i + t, l = i - t;
        if (this.view !== null && this.view.enabled) {
            let c = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            r += c * this.view.offsetX, o = r + c * this.view.width, a -= h * this.view.offsetY, l = a - h * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(r, o, a, l, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
    }
};
Fr.prototype.isOrthographicCamera = !0;
var Gi = class extends sn {
    constructor(e){
        super(e);
        this.type = "RawShaderMaterial";
    }
};
Gi.prototype.isRawShaderMaterial = !0;
var Ei = 4, Mn = 8, Vt = Math.pow(2, Mn), sh = [
    .125,
    .215,
    .35,
    .446,
    .526,
    .582
], oh = Mn - Ei + 1 + sh.length, pi = 20, Hs = {
    [Nt]: 0,
    [Oi]: 1
}, Go = new Fr, { _lodPlanes: ji , _sizeLods: Ll , _sigmas: ls  } = Zm(), Rl = new ae, Vo = null, On = (1 + Math.sqrt(5)) / 2, mi = 1 / On, Pl = [
    new M(1, 1, 1),
    new M(-1, 1, 1),
    new M(1, 1, -1),
    new M(-1, 1, -1),
    new M(0, On, mi),
    new M(0, On, -mi),
    new M(mi, 0, On),
    new M(-mi, 0, On),
    new M(On, mi, 0),
    new M(-On, mi, 0)
], ah = class {
    constructor(e){
        this._renderer = e, this._pingPongRenderTarget = null, this._blurMaterial = $m(pi), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = .1, i = 100) {
        Vo = this._renderer.getRenderTarget();
        let r = this._allocateTargets();
        return this._sceneToCubeUV(e, n, i, r), t > 0 && this._blur(r, 0, 0, t), this._applyPMREM(r), this._cleanup(r), r;
    }
    fromEquirectangular(e) {
        return this._fromTexture(e);
    }
    fromCubemap(e) {
        return this._fromTexture(e);
    }
    compileCubemapShader() {
        this._cubemapShader === null && (this._cubemapShader = Fl(), this._compileMaterial(this._cubemapShader));
    }
    compileEquirectangularShader() {
        this._equirectShader === null && (this._equirectShader = Dl(), this._compileMaterial(this._equirectShader));
    }
    dispose() {
        this._blurMaterial.dispose(), this._cubemapShader !== null && this._cubemapShader.dispose(), this._equirectShader !== null && this._equirectShader.dispose();
        for(let e = 0; e < ji.length; e++)ji[e].dispose();
    }
    _cleanup(e) {
        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Vo), e.scissorTest = !1, cs(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e) {
        Vo = this._renderer.getRenderTarget();
        let t = this._allocateTargets(e);
        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t;
    }
    _allocateTargets(e) {
        let t = {
            magFilter: tt,
            minFilter: tt,
            generateMipmaps: !1,
            type: kn,
            format: ct,
            encoding: Nt,
            depthBuffer: !1
        }, n = Il(t);
        return n.depthBuffer = !e, this._pingPongRenderTarget = Il(t), n;
    }
    _compileMaterial(e) {
        let t = new st(ji[0], e);
        this._renderer.compile(t, Go);
    }
    _sceneToCubeUV(e, t, n, i) {
        let a = new ut(90, 1, t, n), l = [
            1,
            -1,
            1,
            1,
            1,
            1
        ], c = [
            1,
            1,
            1,
            -1,
            -1,
            -1
        ], h = this._renderer, u = h.autoClear, d = h.toneMapping;
        h.getClearColor(Rl), h.toneMapping = _n, h.autoClear = !1;
        let f = new hn({
            name: "PMREM.Background",
            side: it,
            depthWrite: !1,
            depthTest: !1
        }), m = new st(new wn, f), x = !1, v = e.background;
        v ? v.isColor && (f.color.copy(v), e.background = null, x = !0) : (f.color.copy(Rl), x = !0);
        for(let g = 0; g < 6; g++){
            let p = g % 3;
            p == 0 ? (a.up.set(0, l[g], 0), a.lookAt(c[g], 0, 0)) : p == 1 ? (a.up.set(0, 0, l[g]), a.lookAt(0, c[g], 0)) : (a.up.set(0, l[g], 0), a.lookAt(0, 0, c[g])), cs(i, p * Vt, g > 2 ? Vt : 0, Vt, Vt), h.setRenderTarget(i), x && h.render(m, a), h.render(e, a);
        }
        m.geometry.dispose(), m.material.dispose(), h.toneMapping = d, h.autoClear = u, e.background = v;
    }
    _setEncoding(e, t) {
        this._renderer.capabilities.isWebGL2 === !0 && t.format === ct && t.type === rn && t.encoding === Oi ? e.value = Hs[Nt] : e.value = Hs[t.encoding];
    }
    _textureToCubeUV(e, t) {
        let n = this._renderer, i = e.mapping === Bi || e.mapping === zi;
        i ? this._cubemapShader == null && (this._cubemapShader = Fl()) : this._equirectShader == null && (this._equirectShader = Dl());
        let r = i ? this._cubemapShader : this._equirectShader, o = new st(ji[0], r), a = r.uniforms;
        a.envMap.value = e, i || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), this._setEncoding(a.inputEncoding, e), cs(t, 0, 0, 3 * Vt, 2 * Vt), n.setRenderTarget(t), n.render(o, Go);
    }
    _applyPMREM(e) {
        let t = this._renderer, n = t.autoClear;
        t.autoClear = !1;
        for(let i = 1; i < oh; i++){
            let r = Math.sqrt(ls[i] * ls[i] - ls[i - 1] * ls[i - 1]), o = Pl[(i - 1) % Pl.length];
            this._blur(e, i - 1, i, r, o);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, r) {
        let o = this._pingPongRenderTarget;
        this._halfBlur(e, o, t, n, i, "latitudinal", r), this._halfBlur(o, e, n, n, i, "longitudinal", r);
    }
    _halfBlur(e, t, n, i, r, o, a) {
        let l = this._renderer, c = this._blurMaterial;
        o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
        let h = 3, u = new st(ji[i], c), d = c.uniforms, f = Ll[n] - 1, m = isFinite(r) ? Math.PI / (2 * f) : 2 * Math.PI / (2 * pi - 1), x = r / m, v = isFinite(r) ? 1 + Math.floor(h * x) : pi;
        v > pi && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${pi}`);
        let g = [], p = 0;
        for(let A = 0; A < pi; ++A){
            let L = A / x, I = Math.exp(-L * L / 2);
            g.push(I), A == 0 ? p += I : A < v && (p += 2 * I);
        }
        for(let A1 = 0; A1 < g.length; A1++)g[A1] = g[A1] / p;
        d.envMap.value = e.texture, d.samples.value = v, d.weights.value = g, d.latitudinal.value = o === "latitudinal", a && (d.poleAxis.value = a), d.dTheta.value = m, d.mipInt.value = Mn - n;
        let _ = Ll[i], y = 3 * Math.max(0, Vt - 2 * _), b = (i === 0 ? 0 : 2 * Vt) + 2 * _ * (i > Mn - Ei ? i - Mn + Ei : 0);
        cs(t, y, b, 3 * _, 2 * _), l.setRenderTarget(t), l.render(u, Go);
    }
};
function Zm() {
    let s = [], e = [], t = [], n = Mn;
    for(let i = 0; i < oh; i++){
        let r = Math.pow(2, n);
        e.push(r);
        let o = 1 / r;
        i > Mn - Ei ? o = sh[i - Mn + Ei - 1] : i == 0 && (o = 0), t.push(o);
        let a = 1 / (r - 1), l = -a / 2, c = 1 + a / 2, h = [
            l,
            l,
            c,
            l,
            c,
            c,
            l,
            l,
            c,
            c,
            l,
            c
        ], u = 6, d = 6, f = 3, m = 2, x = 1, v = new Float32Array(f * d * u), g = new Float32Array(m * d * u), p = new Float32Array(x * d * u);
        for(let y = 0; y < u; y++){
            let b = y % 3 * 2 / 3 - 1, A = y > 2 ? 0 : -1, L = [
                b,
                A,
                0,
                b + 2 / 3,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A + 1,
                0
            ];
            v.set(L, f * d * y), g.set(h, m * d * y);
            let I = [
                y,
                y,
                y,
                y,
                y,
                y
            ];
            p.set(I, x * d * y);
        }
        let _ = new _e;
        _.setAttribute("position", new Ue(v, f)), _.setAttribute("uv", new Ue(g, m)), _.setAttribute("faceIndex", new Ue(p, x)), s.push(_), n > Ei && n--;
    }
    return {
        _lodPlanes: s,
        _sizeLods: e,
        _sigmas: t
    };
}
function Il(s) {
    let e = new At(3 * Vt, 3 * Vt, s);
    return e.texture.mapping = Pr, e.texture.name = "PMREM.cubeUv", e.scissorTest = !0, e;
}
function cs(s, e, t, n, i) {
    s.viewport.set(e, t, n, i), s.scissor.set(e, t, n, i);
}
function $m(s) {
    let e = new Float32Array(s), t = new M(0, 1, 0);
    return new Gi({
        name: "SphericalGaussianBlur",
        defines: {
            n: s
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: e
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: t
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${pa()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Dl() {
    let s = new X(1, 1);
    return new Gi({
        name: "EquirectangularToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            texelSize: {
                value: s
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${pa()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Fl() {
    return new Gi({
        name: "CubemapToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${pa()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function fa() {
    return `

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function pa() {
    return `

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;
}
function jm(s) {
    let e = new WeakMap, t = null;
    function n(a) {
        if (a && a.isTexture && a.isRenderTargetTexture === !1) {
            let l = a.mapping, c = l === Ds || l === Fs, h = l === Bi || l === zi;
            if (c || h) {
                if (e.has(a)) return e.get(a).texture;
                {
                    let u = a.image;
                    if (c && u && u.height > 0 || h && u && i(u)) {
                        let d = s.getRenderTarget();
                        t === null && (t = new ah(s));
                        let f = c ? t.fromEquirectangular(a) : t.fromCubemap(a);
                        return e.set(a, f), s.setRenderTarget(d), a.addEventListener("dispose", r), f.texture;
                    } else return null;
                }
            }
        }
        return a;
    }
    function i(a) {
        let l = 0, c = 6;
        for(let h = 0; h < c; h++)a[h] !== void 0 && l++;
        return l === c;
    }
    function r(a) {
        let l = a.target;
        l.removeEventListener("dispose", r);
        let c = e.get(l);
        c !== void 0 && (e.delete(l), c.dispose());
    }
    function o() {
        e = new WeakMap, t !== null && (t.dispose(), t = null);
    }
    return {
        get: n,
        dispose: o
    };
}
function Qm(s) {
    let e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch(n){
            case "WEBGL_depth_texture":
                i = s.getExtension("WEBGL_depth_texture") || s.getExtension("MOZ_WEBGL_depth_texture") || s.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case "EXT_texture_filter_anisotropic":
                i = s.getExtension("EXT_texture_filter_anisotropic") || s.getExtension("MOZ_EXT_texture_filter_anisotropic") || s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                i = s.getExtension("WEBGL_compressed_texture_s3tc") || s.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                i = s.getExtension("WEBGL_compressed_texture_pvrtc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                i = s.getExtension(n);
        }
        return e[n] = i, i;
    }
    return {
        has: function(n) {
            return t(n) !== null;
        },
        init: function(n) {
            n.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
        },
        get: function(n) {
            let i = t(n);
            return i === null && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), i;
        }
    };
}
function Km(s, e, t, n) {
    let i = {}, r = new WeakMap;
    function o(u) {
        let d = u.target;
        d.index !== null && e.remove(d.index);
        for(let m in d.attributes)e.remove(d.attributes[m]);
        d.removeEventListener("dispose", o), delete i[d.id];
        let f = r.get(d);
        f && (e.remove(f), r.delete(d)), n.releaseStatesOfGeometry(d), d.isInstancedBufferGeometry === !0 && delete d._maxInstanceCount, t.memory.geometries--;
    }
    function a(u, d) {
        return i[d.id] === !0 || (d.addEventListener("dispose", o), i[d.id] = !0, t.memory.geometries++), d;
    }
    function l(u) {
        let d = u.attributes;
        for(let m in d)e.update(d[m], 34962);
        let f = u.morphAttributes;
        for(let m1 in f){
            let x = f[m1];
            for(let v = 0, g = x.length; v < g; v++)e.update(x[v], 34962);
        }
    }
    function c(u) {
        let d = [], f = u.index, m = u.attributes.position, x = 0;
        if (f !== null) {
            let p = f.array;
            x = f.version;
            for(let _ = 0, y = p.length; _ < y; _ += 3){
                let b = p[_ + 0], A = p[_ + 1], L = p[_ + 2];
                d.push(b, A, A, L, L, b);
            }
        } else {
            let p1 = m.array;
            x = m.version;
            for(let _1 = 0, y1 = p1.length / 3 - 1; _1 < y1; _1 += 3){
                let b1 = _1 + 0, A1 = _1 + 1, L1 = _1 + 2;
                d.push(b1, A1, A1, L1, L1, b1);
            }
        }
        let v = new (Yc(d) > 65535 ? Zs : Ys)(d, 1);
        v.version = x;
        let g = r.get(u);
        g && e.remove(g), r.set(u, v);
    }
    function h(u) {
        let d = r.get(u);
        if (d) {
            let f = u.index;
            f !== null && d.version < f.version && c(u);
        } else c(u);
        return r.get(u);
    }
    return {
        get: a,
        update: l,
        getWireframeAttribute: h
    };
}
function eg(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(d) {
        r = d;
    }
    let a, l;
    function c(d) {
        a = d.type, l = d.bytesPerElement;
    }
    function h(d, f) {
        s.drawElements(r, f, a, d * l), t.update(f, r, 1);
    }
    function u(d, f, m) {
        if (m === 0) return;
        let x, v;
        if (i) x = s, v = "drawElementsInstanced";
        else if (x = e.get("ANGLE_instanced_arrays"), v = "drawElementsInstancedANGLE", x === null) {
            console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        x[v](r, f, a, d * l, m), t.update(f, r, m);
    }
    this.setMode = o, this.setIndex = c, this.render = h, this.renderInstances = u;
}
function tg(s) {
    let e = {
        geometries: 0,
        textures: 0
    }, t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    function n(r, o, a) {
        switch(t.calls++, o){
            case 4:
                t.triangles += a * (r / 3);
                break;
            case 1:
                t.lines += a * (r / 2);
                break;
            case 3:
                t.lines += a * (r - 1);
                break;
            case 2:
                t.lines += a * r;
                break;
            case 0:
                t.points += a * r;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                break;
        }
    }
    function i() {
        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n
    };
}
var Qs = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
Qs.prototype.isDataTexture2DArray = !0;
function ng(s, e) {
    return s[0] - e[0];
}
function ig(s, e) {
    return Math.abs(e[1]) - Math.abs(s[1]);
}
function Nl(s, e) {
    let t = 1, n = e.isInterleavedBufferAttribute ? e.data.array : e.array;
    n instanceof Int8Array ? t = 127 : n instanceof Int16Array ? t = 32767 : n instanceof Int32Array ? t = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", n), s.divideScalar(t);
}
function rg(s, e, t) {
    let n = {}, i = new Float32Array(8), r = new WeakMap, o = new M, a = [];
    for(let c = 0; c < 8; c++)a[c] = [
        c,
        0
    ];
    function l(c, h, u, d) {
        let f = c.morphTargetInfluences;
        if (e.isWebGL2 === !0) {
            let m = h.morphAttributes.position.length, x = r.get(h);
            if (x === void 0 || x.count !== m) {
                x !== void 0 && x.texture.dispose();
                let p = h.morphAttributes.normal !== void 0, _ = h.morphAttributes.position, y = h.morphAttributes.normal || [], b = h.attributes.position.count, A = p === !0 ? 2 : 1, L = b * A, I = 1;
                L > e.maxTextureSize && (I = Math.ceil(L / e.maxTextureSize), L = e.maxTextureSize);
                let k = new Float32Array(L * I * 4 * m), B = new Qs(k, L, I, m);
                B.format = ct, B.type = nn, B.needsUpdate = !0;
                let P = A * 4;
                for(let w = 0; w < m; w++){
                    let E = _[w], D = y[w], U = L * I * 4 * w;
                    for(let F = 0; F < E.count; F++){
                        o.fromBufferAttribute(E, F), E.normalized === !0 && Nl(o, E);
                        let O = F * P;
                        k[U + O + 0] = o.x, k[U + O + 1] = o.y, k[U + O + 2] = o.z, k[U + O + 3] = 0, p === !0 && (o.fromBufferAttribute(D, F), D.normalized === !0 && Nl(o, D), k[U + O + 4] = o.x, k[U + O + 5] = o.y, k[U + O + 6] = o.z, k[U + O + 7] = 0);
                    }
                }
                x = {
                    count: m,
                    texture: B,
                    size: new X(L, I)
                }, r.set(h, x);
            }
            let v = 0;
            for(let p1 = 0; p1 < f.length; p1++)v += f[p1];
            let g = h.morphTargetsRelative ? 1 : 1 - v;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", g), d.getUniforms().setValue(s, "morphTargetInfluences", f), d.getUniforms().setValue(s, "morphTargetsTexture", x.texture, t), d.getUniforms().setValue(s, "morphTargetsTextureSize", x.size);
        } else {
            let m1 = f === void 0 ? 0 : f.length, x1 = n[h.id];
            if (x1 === void 0 || x1.length !== m1) {
                x1 = [];
                for(let y1 = 0; y1 < m1; y1++)x1[y1] = [
                    y1,
                    0
                ];
                n[h.id] = x1;
            }
            for(let y2 = 0; y2 < m1; y2++){
                let b1 = x1[y2];
                b1[0] = y2, b1[1] = f[y2];
            }
            x1.sort(ig);
            for(let y3 = 0; y3 < 8; y3++)y3 < m1 && x1[y3][1] ? (a[y3][0] = x1[y3][0], a[y3][1] = x1[y3][1]) : (a[y3][0] = Number.MAX_SAFE_INTEGER, a[y3][1] = 0);
            a.sort(ng);
            let v1 = h.morphAttributes.position, g1 = h.morphAttributes.normal, p2 = 0;
            for(let y4 = 0; y4 < 8; y4++){
                let b2 = a[y4], A1 = b2[0], L1 = b2[1];
                A1 !== Number.MAX_SAFE_INTEGER && L1 ? (v1 && h.getAttribute("morphTarget" + y4) !== v1[A1] && h.setAttribute("morphTarget" + y4, v1[A1]), g1 && h.getAttribute("morphNormal" + y4) !== g1[A1] && h.setAttribute("morphNormal" + y4, g1[A1]), i[y4] = L1, p2 += L1) : (v1 && h.hasAttribute("morphTarget" + y4) === !0 && h.deleteAttribute("morphTarget" + y4), g1 && h.hasAttribute("morphNormal" + y4) === !0 && h.deleteAttribute("morphNormal" + y4), i[y4] = 0);
            }
            let _1 = h.morphTargetsRelative ? 1 : 1 - p2;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", _1), d.getUniforms().setValue(s, "morphTargetInfluences", i);
        }
    }
    return {
        update: l
    };
}
function sg(s, e, t, n) {
    let i = new WeakMap;
    function r(l) {
        let c = n.render.frame, h = l.geometry, u = e.get(l, h);
        return i.get(u) !== c && (e.update(u), i.set(u, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), t.update(l.instanceMatrix, 34962), l.instanceColor !== null && t.update(l.instanceColor, 34962)), u;
    }
    function o() {
        i = new WeakMap;
    }
    function a(l) {
        let c = l.target;
        c.removeEventListener("dispose", a), t.remove(c.instanceMatrix), c.instanceColor !== null && t.remove(c.instanceColor);
    }
    return {
        update: r,
        dispose: o
    };
}
var ma = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
ma.prototype.isDataTexture3D = !0;
var lh = new ot, ch = new Qs, hh = new ma, uh = new ki, Bl = [], zl = [], Ul = new Float32Array(16), Ol = new Float32Array(9), Hl = new Float32Array(4);
function Vi(s, e, t) {
    let n = s[0];
    if (n <= 0 || n > 0) return s;
    let i = e * t, r = Bl[i];
    if (r === void 0 && (r = new Float32Array(i), Bl[i] = r), e !== 0) {
        n.toArray(r, 0);
        for(let o = 1, a = 0; o !== e; ++o)a += t, s[o].toArray(r, a);
    }
    return r;
}
function Mt(s, e) {
    if (s.length !== e.length) return !1;
    for(let t = 0, n = s.length; t < n; t++)if (s[t] !== e[t]) return !1;
    return !0;
}
function _t(s, e) {
    for(let t = 0, n = e.length; t < n; t++)s[t] = e[t];
}
function Ks(s, e) {
    let t = zl[e];
    t === void 0 && (t = new Int32Array(e), zl[e] = t);
    for(let n = 0; n !== e; ++n)t[n] = s.allocateTextureUnit();
    return t;
}
function og(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1f(this.addr, e), t[0] = e);
}
function ag(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (Mt(t, e)) return;
        s.uniform2fv(this.addr, e), _t(t, e);
    }
}
function lg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else if (e.r !== void 0) (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (s.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
    else {
        if (Mt(t, e)) return;
        s.uniform3fv(this.addr, e), _t(t, e);
    }
}
function cg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (Mt(t, e)) return;
        s.uniform4fv(this.addr, e), _t(t, e);
    }
}
function hg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix2fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Hl.set(n), s.uniformMatrix2fv(this.addr, !1, Hl), _t(t, n);
    }
}
function ug(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix3fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ol.set(n), s.uniformMatrix3fv(this.addr, !1, Ol), _t(t, n);
    }
}
function dg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix4fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ul.set(n), s.uniformMatrix4fv(this.addr, !1, Ul), _t(t, n);
    }
}
function fg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1i(this.addr, e), t[0] = e);
}
function pg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2iv(this.addr, e), _t(t, e));
}
function mg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3iv(this.addr, e), _t(t, e));
}
function gg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4iv(this.addr, e), _t(t, e));
}
function xg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1ui(this.addr, e), t[0] = e);
}
function yg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2uiv(this.addr, e), _t(t, e));
}
function vg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3uiv(this.addr, e), _t(t, e));
}
function _g(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4uiv(this.addr, e), _t(t, e));
}
function Mg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTexture2D(e || lh, i);
}
function bg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture3D(e || hh, i);
}
function wg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTextureCube(e || uh, i);
}
function Sg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture2DArray(e || ch, i);
}
function Tg(s) {
    switch(s){
        case 5126:
            return og;
        case 35664:
            return ag;
        case 35665:
            return lg;
        case 35666:
            return cg;
        case 35674:
            return hg;
        case 35675:
            return ug;
        case 35676:
            return dg;
        case 5124:
        case 35670:
            return fg;
        case 35667:
        case 35671:
            return pg;
        case 35668:
        case 35672:
            return mg;
        case 35669:
        case 35673:
            return gg;
        case 5125:
            return xg;
        case 36294:
            return yg;
        case 36295:
            return vg;
        case 36296:
            return _g;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return Mg;
        case 35679:
        case 36299:
        case 36307:
            return bg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return wg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Sg;
    }
}
function Eg(s, e) {
    s.uniform1fv(this.addr, e);
}
function Ag(s, e) {
    let t = Vi(e, this.size, 2);
    s.uniform2fv(this.addr, t);
}
function Cg(s, e) {
    let t = Vi(e, this.size, 3);
    s.uniform3fv(this.addr, t);
}
function Lg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniform4fv(this.addr, t);
}
function Rg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniformMatrix2fv(this.addr, !1, t);
}
function Pg(s, e) {
    let t = Vi(e, this.size, 9);
    s.uniformMatrix3fv(this.addr, !1, t);
}
function Ig(s, e) {
    let t = Vi(e, this.size, 16);
    s.uniformMatrix4fv(this.addr, !1, t);
}
function Dg(s, e) {
    s.uniform1iv(this.addr, e);
}
function Fg(s, e) {
    s.uniform2iv(this.addr, e);
}
function Ng(s, e) {
    s.uniform3iv(this.addr, e);
}
function Bg(s, e) {
    s.uniform4iv(this.addr, e);
}
function zg(s, e) {
    s.uniform1uiv(this.addr, e);
}
function Ug(s, e) {
    s.uniform2uiv(this.addr, e);
}
function Og(s, e) {
    s.uniform3uiv(this.addr, e);
}
function Hg(s, e) {
    s.uniform4uiv(this.addr, e);
}
function kg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTexture2D(e[r] || lh, i[r]);
}
function Gg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture3D(e[r] || hh, i[r]);
}
function Vg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTextureCube(e[r] || uh, i[r]);
}
function Wg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture2DArray(e[r] || ch, i[r]);
}
function qg(s) {
    switch(s){
        case 5126:
            return Eg;
        case 35664:
            return Ag;
        case 35665:
            return Cg;
        case 35666:
            return Lg;
        case 35674:
            return Rg;
        case 35675:
            return Pg;
        case 35676:
            return Ig;
        case 5124:
        case 35670:
            return Dg;
        case 35667:
        case 35671:
            return Fg;
        case 35668:
        case 35672:
            return Ng;
        case 35669:
        case 35673:
            return Bg;
        case 5125:
            return zg;
        case 36294:
            return Ug;
        case 36295:
            return Og;
        case 36296:
            return Hg;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return kg;
        case 35679:
        case 36299:
        case 36307:
            return Gg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return Vg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Wg;
    }
}
function Xg(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.setValue = Tg(e.type);
}
function dh(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.size = e.size, this.setValue = qg(e.type);
}
dh.prototype.updateCache = function(s) {
    let e = this.cache;
    s instanceof Float32Array && e.length !== s.length && (this.cache = new Float32Array(s.length)), _t(e, s);
};
function fh(s) {
    this.id = s, this.seq = [], this.map = {};
}
fh.prototype.setValue = function(s, e, t) {
    let n = this.seq;
    for(let i = 0, r = n.length; i !== r; ++i){
        let o = n[i];
        o.setValue(s, e[o.id], t);
    }
};
var Wo = /(\w+)(\])?(\[|\.)?/g;
function kl(s, e) {
    s.seq.push(e), s.map[e.id] = e;
}
function Jg(s, e, t) {
    let n = s.name, i = n.length;
    for(Wo.lastIndex = 0;;){
        let r = Wo.exec(n), o = Wo.lastIndex, a = r[1], l = r[2] === "]", c = r[3];
        if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
            kl(t, c === void 0 ? new Xg(a, s, e) : new dh(a, s, e));
            break;
        } else {
            let u = t.map[a];
            u === void 0 && (u = new fh(a), kl(t, u)), t = u;
        }
    }
}
function bn(s, e) {
    this.seq = [], this.map = {};
    let t = s.getProgramParameter(e, 35718);
    for(let n = 0; n < t; ++n){
        let i = s.getActiveUniform(e, n), r = s.getUniformLocation(e, i.name);
        Jg(i, r, this);
    }
}
bn.prototype.setValue = function(s, e, t, n) {
    let i = this.map[e];
    i !== void 0 && i.setValue(s, t, n);
};
bn.prototype.setOptional = function(s, e, t) {
    let n = e[t];
    n !== void 0 && this.setValue(s, t, n);
};
bn.upload = function(s, e, t, n) {
    for(let i = 0, r = e.length; i !== r; ++i){
        let o = e[i], a = t[o.id];
        a.needsUpdate !== !1 && o.setValue(s, a.value, n);
    }
};
bn.seqWithValue = function(s, e) {
    let t = [];
    for(let n = 0, i = s.length; n !== i; ++n){
        let r = s[n];
        r.id in e && t.push(r);
    }
    return t;
};
function Gl(s, e, t) {
    let n = s.createShader(e);
    return s.shaderSource(n, t), s.compileShader(n), n;
}
var Yg = 0;
function Zg(s) {
    let e = s.split(`
`);
    for(let t = 0; t < e.length; t++)e[t] = t + 1 + ": " + e[t];
    return e.join(`
`);
}
function ph(s) {
    switch(s){
        case Nt:
            return [
                "Linear",
                "( value )"
            ];
        case Oi:
            return [
                "sRGB",
                "( value )"
            ];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported encoding:", s), [
                "Linear",
                "( value )"
            ];
    }
}
function Vl(s, e, t) {
    let n = s.getShaderParameter(e, 35713), i = s.getShaderInfoLog(e).trim();
    return n && i === "" ? "" : t.toUpperCase() + `

` + i + `

` + Zg(s.getShaderSource(e));
}
function Dn(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return " + t[0] + "ToLinear" + t[1] + "; }";
}
function $g(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function jg(s, e) {
    let t;
    switch(e){
        case Nu:
            t = "Linear";
            break;
        case Bu:
            t = "Reinhard";
            break;
        case zu:
            t = "OptimizedCineon";
            break;
        case Uu:
            t = "ACESFilmic";
            break;
        case Ou:
            t = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
    }
    return "vec3 " + s + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function Qg(s) {
    return [
        s.extensionDerivatives || s.envMapCubeUV || s.bumpMap || s.tangentSpaceNormalMap || s.clearcoatNormalMap || s.flatShading || s.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
        (s.extensionFragDepth || s.logarithmicDepthBuffer) && s.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
        s.extensionDrawBuffers && s.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
        (s.extensionShaderTextureLOD || s.envMap || s.transmission) && s.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
    ].filter(rr).join(`
`);
}
function Kg(s) {
    let e = [];
    for(let t in s){
        let n = s[t];
        n !== !1 && e.push("#define " + t + " " + n);
    }
    return e.join(`
`);
}
function ex(s, e) {
    let t = {}, n = s.getProgramParameter(e, 35721);
    for(let i = 0; i < n; i++){
        let r = s.getActiveAttrib(e, i), o = r.name, a = 1;
        r.type === 35674 && (a = 2), r.type === 35675 && (a = 3), r.type === 35676 && (a = 4), t[o] = {
            type: r.type,
            location: s.getAttribLocation(e, o),
            locationSize: a
        };
    }
    return t;
}
function rr(s) {
    return s !== "";
}
function Wl(s, e) {
    return s.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function ql(s, e) {
    return s.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
var tx = /^[ \t]*#include +<([\w\d./]+)>/gm;
function ra(s) {
    return s.replace(tx, nx);
}
function nx(s, e) {
    let t = Fe[e];
    if (t === void 0) throw new Error("Can not resolve #include <" + e + ">");
    return ra(t);
}
var ix = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, rx = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Xl(s) {
    return s.replace(rx, mh).replace(ix, sx);
}
function sx(s, e, t, n) {
    return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), mh(s, e, t, n);
}
function mh(s, e, t, n) {
    let i = "";
    for(let r = parseInt(e); r < parseInt(t); r++)i += n.replace(/\[\s*i\s*\]/g, "[ " + r + " ]").replace(/UNROLLED_LOOP_INDEX/g, r);
    return i;
}
function Jl(s) {
    let e = "precision " + s.precision + ` float;
precision ` + s.precision + " int;";
    return s.precision === "highp" ? e += `
#define HIGH_PRECISION` : s.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : s.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function ox(s) {
    let e = "SHADOWMAP_TYPE_BASIC";
    return s.shadowMapType === Hc ? e = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === fu ? e = "SHADOWMAP_TYPE_PCF_SOFT" : s.shadowMapType === ir && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function ax(s) {
    let e = "ENVMAP_TYPE_CUBE";
    if (s.envMap) switch(s.envMapMode){
        case Bi:
        case zi:
            e = "ENVMAP_TYPE_CUBE";
            break;
        case Pr:
        case Ws:
            e = "ENVMAP_TYPE_CUBE_UV";
            break;
    }
    return e;
}
function lx(s) {
    let e = "ENVMAP_MODE_REFLECTION";
    if (s.envMap) switch(s.envMapMode){
        case zi:
        case Ws:
            e = "ENVMAP_MODE_REFRACTION";
            break;
    }
    return e;
}
function cx(s) {
    let e = "ENVMAP_BLENDING_NONE";
    if (s.envMap) switch(s.combine){
        case Vs:
            e = "ENVMAP_BLENDING_MULTIPLY";
            break;
        case Du:
            e = "ENVMAP_BLENDING_MIX";
            break;
        case Fu:
            e = "ENVMAP_BLENDING_ADD";
            break;
    }
    return e;
}
function hx(s, e, t, n) {
    let i = s.getContext(), r = t.defines, o = t.vertexShader, a = t.fragmentShader, l = ox(t), c = ax(t), h = lx(t), u = cx(t), d = t.isWebGL2 ? "" : Qg(t), f = Kg(r), m = i.createProgram(), x, v, g = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
    t.isRawShaderMaterial ? (x = [
        f
    ].filter(rr).join(`
`), x.length > 0 && (x += `
`), v = [
        d,
        f
    ].filter(rr).join(`
`), v.length > 0 && (v += `
`)) : (x = [
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
        "#define MAX_BONES " + t.maxBones,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + h : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.displacementMap && t.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.useVertexTexture ? "#define BONE_TEXTURE" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`
    ].filter(rr).join(`
`), v = [
        d,
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + c : "",
        t.envMap ? "#define " + h : "",
        t.envMap ? "#define " + u : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        (t.extensionShaderTextureLOD || t.envMap) && t.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== _n ? "#define TONE_MAPPING" : "",
        t.toneMapping !== _n ? Fe.tonemapping_pars_fragment : "",
        t.toneMapping !== _n ? jg("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.format === Gn ? "#define OPAQUE" : "",
        Fe.encodings_pars_fragment,
        t.map ? Dn("mapTexelToLinear", t.mapEncoding) : "",
        t.matcap ? Dn("matcapTexelToLinear", t.matcapEncoding) : "",
        t.envMap ? Dn("envMapTexelToLinear", t.envMapEncoding) : "",
        t.emissiveMap ? Dn("emissiveMapTexelToLinear", t.emissiveMapEncoding) : "",
        t.specularColorMap ? Dn("specularColorMapTexelToLinear", t.specularColorMapEncoding) : "",
        t.sheenColorMap ? Dn("sheenColorMapTexelToLinear", t.sheenColorMapEncoding) : "",
        t.lightMap ? Dn("lightMapTexelToLinear", t.lightMapEncoding) : "",
        $g("linearToOutputTexel", t.outputEncoding),
        t.depthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`
    ].filter(rr).join(`
`)), o = ra(o), o = Wl(o, t), o = ql(o, t), a = ra(a), a = Wl(a, t), a = ql(a, t), o = Xl(o), a = Xl(a), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (g = `#version 300 es
`, x = [
        "precision mediump sampler2DArray;",
        "#define attribute in",
        "#define varying out",
        "#define texture2D texture"
    ].join(`
`) + `
` + x, v = [
        "#define varying in",
        t.glslVersion === xl ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
        t.glslVersion === xl ? "" : "#define gl_FragColor pc_fragColor",
        "#define gl_FragDepthEXT gl_FragDepth",
        "#define texture2D texture",
        "#define textureCube texture",
        "#define texture2DProj textureProj",
        "#define texture2DLodEXT textureLod",
        "#define texture2DProjLodEXT textureProjLod",
        "#define textureCubeLodEXT textureLod",
        "#define texture2DGradEXT textureGrad",
        "#define texture2DProjGradEXT textureProjGrad",
        "#define textureCubeGradEXT textureGrad"
    ].join(`
`) + `
` + v);
    let p = g + x + o, _ = g + v + a, y = Gl(i, 35633, p), b = Gl(i, 35632, _);
    if (i.attachShader(m, y), i.attachShader(m, b), t.index0AttributeName !== void 0 ? i.bindAttribLocation(m, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(m, 0, "position"), i.linkProgram(m), s.debug.checkShaderErrors) {
        let I = i.getProgramInfoLog(m).trim(), k = i.getShaderInfoLog(y).trim(), B = i.getShaderInfoLog(b).trim(), P = !0, w = !0;
        if (i.getProgramParameter(m, 35714) === !1) {
            P = !1;
            let E = Vl(i, y, "vertex"), D = Vl(i, b, "fragment");
            console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(m, 35715) + `

Program Info Log: ` + I + `
` + E + `
` + D);
        } else I !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", I) : (k === "" || B === "") && (w = !1);
        w && (this.diagnostics = {
            runnable: P,
            programLog: I,
            vertexShader: {
                log: k,
                prefix: x
            },
            fragmentShader: {
                log: B,
                prefix: v
            }
        });
    }
    i.deleteShader(y), i.deleteShader(b);
    let A;
    this.getUniforms = function() {
        return A === void 0 && (A = new bn(i, m)), A;
    };
    let L;
    return this.getAttributes = function() {
        return L === void 0 && (L = ex(i, m)), L;
    }, this.destroy = function() {
        n.releaseStatesOfProgram(this), i.deleteProgram(m), this.program = void 0;
    }, this.name = t.shaderName, this.id = Yg++, this.cacheKey = e, this.usedTimes = 1, this.program = m, this.vertexShader = y, this.fragmentShader = b, this;
}
var ux = 0, gh = class {
    constructor(){
        this.shaderCache = new Map, this.materialCache = new Map;
    }
    update(e) {
        let t = e.vertexShader, n = e.fragmentShader, i = this._getShaderStage(t), r = this._getShaderStage(n), o = this._getShaderCacheForMaterial(e);
        return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(r) === !1 && (o.add(r), r.usedTimes++), this;
    }
    remove(e) {
        let t = this.materialCache.get(e);
        for (let n of t)n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        let t = this.materialCache;
        return t.has(e) === !1 && t.set(e, new Set), t.get(e);
    }
    _getShaderStage(e) {
        let t = this.shaderCache;
        if (t.has(e) === !1) {
            let n = new xh;
            t.set(e, n);
        }
        return t.get(e);
    }
}, xh = class {
    constructor(){
        this.id = ux++, this.usedTimes = 0;
    }
};
function dx(s, e, t, n, i, r, o) {
    let a = new Js, l = new gh, c = [], h = i.isWebGL2, u = i.logarithmicDepthBuffer, d = i.floatVertexTextures, f = i.maxVertexUniforms, m = i.vertexTextures, x = i.precision, v = {
        MeshDepthMaterial: "depth",
        MeshDistanceMaterial: "distanceRGBA",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshToonMaterial: "toon",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        MeshMatcapMaterial: "matcap",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points",
        ShadowMaterial: "shadow",
        SpriteMaterial: "sprite"
    };
    function g(w) {
        let D = w.skeleton.bones;
        if (d) return 1024;
        {
            let F = Math.floor((f - 20) / 4), O = Math.min(F, D.length);
            return O < D.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + D.length + " bones. This GPU supports " + O + "."), 0) : O;
        }
    }
    function p(w) {
        let E;
        return w && w.isTexture ? E = w.encoding : w && w.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), E = w.texture.encoding) : E = Nt, h && w && w.isTexture && w.format === ct && w.type === rn && w.encoding === Oi && (E = Nt), E;
    }
    function _(w, E, D, U, F) {
        let O = U.fog, ne = w.isMeshStandardMaterial ? U.environment : null, ce = (w.isMeshStandardMaterial ? t : e).get(w.envMap || ne), V = v[w.type], W = F.isSkinnedMesh ? g(F) : 0;
        w.precision !== null && (x = i.getMaxPrecision(w.precision), x !== w.precision && console.warn("THREE.WebGLProgram.getParameters:", w.precision, "not supported, using", x, "instead."));
        let he, le, fe, Be;
        if (V) {
            let xe = qt[V];
            he = xe.vertexShader, le = xe.fragmentShader;
        } else he = w.vertexShader, le = w.fragmentShader, l.update(w), fe = l.getVertexShaderID(w), Be = l.getFragmentShaderID(w);
        let Y = s.getRenderTarget(), Ce = w.alphaTest > 0, ye = w.clearcoat > 0;
        return {
            isWebGL2: h,
            shaderID: V,
            shaderName: w.type,
            vertexShader: he,
            fragmentShader: le,
            defines: w.defines,
            customVertexShaderID: fe,
            customFragmentShaderID: Be,
            isRawShaderMaterial: w.isRawShaderMaterial === !0,
            glslVersion: w.glslVersion,
            precision: x,
            instancing: F.isInstancedMesh === !0,
            instancingColor: F.isInstancedMesh === !0 && F.instanceColor !== null,
            supportsVertexTextures: m,
            outputEncoding: Y !== null ? p(Y.texture) : s.outputEncoding,
            map: !!w.map,
            mapEncoding: p(w.map),
            matcap: !!w.matcap,
            matcapEncoding: p(w.matcap),
            envMap: !!ce,
            envMapMode: ce && ce.mapping,
            envMapEncoding: p(ce),
            envMapCubeUV: !!ce && (ce.mapping === Pr || ce.mapping === Ws),
            lightMap: !!w.lightMap,
            lightMapEncoding: p(w.lightMap),
            aoMap: !!w.aoMap,
            emissiveMap: !!w.emissiveMap,
            emissiveMapEncoding: p(w.emissiveMap),
            bumpMap: !!w.bumpMap,
            normalMap: !!w.normalMap,
            objectSpaceNormalMap: w.normalMapType === zd,
            tangentSpaceNormalMap: w.normalMapType === Hi,
            clearcoat: ye,
            clearcoatMap: ye && !!w.clearcoatMap,
            clearcoatRoughnessMap: ye && !!w.clearcoatRoughnessMap,
            clearcoatNormalMap: ye && !!w.clearcoatNormalMap,
            displacementMap: !!w.displacementMap,
            roughnessMap: !!w.roughnessMap,
            metalnessMap: !!w.metalnessMap,
            specularMap: !!w.specularMap,
            specularIntensityMap: !!w.specularIntensityMap,
            specularColorMap: !!w.specularColorMap,
            specularColorMapEncoding: p(w.specularColorMap),
            alphaMap: !!w.alphaMap,
            alphaTest: Ce,
            gradientMap: !!w.gradientMap,
            sheen: w.sheen > 0,
            sheenColorMap: !!w.sheenColorMap,
            sheenColorMapEncoding: p(w.sheenColorMap),
            sheenRoughnessMap: !!w.sheenRoughnessMap,
            transmission: w.transmission > 0,
            transmissionMap: !!w.transmissionMap,
            thicknessMap: !!w.thicknessMap,
            combine: w.combine,
            vertexTangents: !!w.normalMap && !!F.geometry && !!F.geometry.attributes.tangent,
            vertexColors: w.vertexColors,
            vertexAlphas: w.vertexColors === !0 && !!F.geometry && !!F.geometry.attributes.color && F.geometry.attributes.color.itemSize === 4,
            vertexUvs: !!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatMap || !!w.clearcoatRoughnessMap || !!w.clearcoatNormalMap || !!w.displacementMap || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || !!w.sheenColorMap || !!w.sheenRoughnessMap,
            uvsVertexOnly: !(!!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatNormalMap || w.transmission > 0 || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || w.sheen > 0 || !!w.sheenColorMap || !!w.sheenRoughnessMap) && !!w.displacementMap,
            fog: !!O,
            useFog: w.fog,
            fogExp2: O && O.isFogExp2,
            flatShading: !!w.flatShading,
            sizeAttenuation: w.sizeAttenuation,
            logarithmicDepthBuffer: u,
            skinning: F.isSkinnedMesh === !0 && W > 0,
            maxBones: W,
            useVertexTexture: d,
            morphTargets: !!F.geometry && !!F.geometry.morphAttributes.position,
            morphNormals: !!F.geometry && !!F.geometry.morphAttributes.normal,
            morphTargetsCount: !!F.geometry && !!F.geometry.morphAttributes.position ? F.geometry.morphAttributes.position.length : 0,
            numDirLights: E.directional.length,
            numPointLights: E.point.length,
            numSpotLights: E.spot.length,
            numRectAreaLights: E.rectArea.length,
            numHemiLights: E.hemi.length,
            numDirLightShadows: E.directionalShadowMap.length,
            numPointLightShadows: E.pointShadowMap.length,
            numSpotLightShadows: E.spotShadowMap.length,
            numClippingPlanes: o.numPlanes,
            numClipIntersection: o.numIntersection,
            format: w.format,
            dithering: w.dithering,
            shadowMapEnabled: s.shadowMap.enabled && D.length > 0,
            shadowMapType: s.shadowMap.type,
            toneMapping: w.toneMapped ? s.toneMapping : _n,
            physicallyCorrectLights: s.physicallyCorrectLights,
            premultipliedAlpha: w.premultipliedAlpha,
            doubleSided: w.side === Ci,
            flipSided: w.side === it,
            depthPacking: w.depthPacking !== void 0 ? w.depthPacking : !1,
            index0AttributeName: w.index0AttributeName,
            extensionDerivatives: w.extensions && w.extensions.derivatives,
            extensionFragDepth: w.extensions && w.extensions.fragDepth,
            extensionDrawBuffers: w.extensions && w.extensions.drawBuffers,
            extensionShaderTextureLOD: w.extensions && w.extensions.shaderTextureLOD,
            rendererExtensionFragDepth: h || n.has("EXT_frag_depth"),
            rendererExtensionDrawBuffers: h || n.has("WEBGL_draw_buffers"),
            rendererExtensionShaderTextureLod: h || n.has("EXT_shader_texture_lod"),
            customProgramCacheKey: w.customProgramCacheKey()
        };
    }
    function y(w) {
        let E = [];
        if (w.shaderID ? E.push(w.shaderID) : (E.push(w.customVertexShaderID), E.push(w.customFragmentShaderID)), w.defines !== void 0) for(let D in w.defines)E.push(D), E.push(w.defines[D]);
        return w.isRawShaderMaterial === !1 && (b(E, w), A(E, w), E.push(s.outputEncoding)), E.push(w.customProgramCacheKey), E.join();
    }
    function b(w, E) {
        w.push(E.precision), w.push(E.outputEncoding), w.push(E.mapEncoding), w.push(E.matcapEncoding), w.push(E.envMapMode), w.push(E.envMapEncoding), w.push(E.lightMapEncoding), w.push(E.emissiveMapEncoding), w.push(E.combine), w.push(E.vertexUvs), w.push(E.fogExp2), w.push(E.sizeAttenuation), w.push(E.maxBones), w.push(E.morphTargetsCount), w.push(E.numDirLights), w.push(E.numPointLights), w.push(E.numSpotLights), w.push(E.numHemiLights), w.push(E.numRectAreaLights), w.push(E.numDirLightShadows), w.push(E.numPointLightShadows), w.push(E.numSpotLightShadows), w.push(E.shadowMapType), w.push(E.toneMapping), w.push(E.numClippingPlanes), w.push(E.numClipIntersection), w.push(E.format), w.push(E.specularColorMapEncoding), w.push(E.sheenColorMapEncoding);
    }
    function A(w, E) {
        a.disableAll(), E.isWebGL2 && a.enable(0), E.supportsVertexTextures && a.enable(1), E.instancing && a.enable(2), E.instancingColor && a.enable(3), E.map && a.enable(4), E.matcap && a.enable(5), E.envMap && a.enable(6), E.envMapCubeUV && a.enable(7), E.lightMap && a.enable(8), E.aoMap && a.enable(9), E.emissiveMap && a.enable(10), E.bumpMap && a.enable(11), E.normalMap && a.enable(12), E.objectSpaceNormalMap && a.enable(13), E.tangentSpaceNormalMap && a.enable(14), E.clearcoat && a.enable(15), E.clearcoatMap && a.enable(16), E.clearcoatRoughnessMap && a.enable(17), E.clearcoatNormalMap && a.enable(18), E.displacementMap && a.enable(19), E.specularMap && a.enable(20), E.roughnessMap && a.enable(21), E.metalnessMap && a.enable(22), E.gradientMap && a.enable(23), E.alphaMap && a.enable(24), E.alphaTest && a.enable(25), E.vertexColors && a.enable(26), E.vertexAlphas && a.enable(27), E.vertexUvs && a.enable(28), E.vertexTangents && a.enable(29), E.uvsVertexOnly && a.enable(30), E.fog && a.enable(31), w.push(a.mask), a.disableAll(), E.useFog && a.enable(0), E.flatShading && a.enable(1), E.logarithmicDepthBuffer && a.enable(2), E.skinning && a.enable(3), E.useVertexTexture && a.enable(4), E.morphTargets && a.enable(5), E.morphNormals && a.enable(6), E.premultipliedAlpha && a.enable(7), E.shadowMapEnabled && a.enable(8), E.physicallyCorrectLights && a.enable(9), E.doubleSided && a.enable(10), E.flipSided && a.enable(11), E.depthPacking && a.enable(12), E.dithering && a.enable(13), E.specularIntensityMap && a.enable(14), E.specularColorMap && a.enable(15), E.transmission && a.enable(16), E.transmissionMap && a.enable(17), E.thicknessMap && a.enable(18), E.sheen && a.enable(19), E.sheenColorMap && a.enable(20), E.sheenRoughnessMap && a.enable(21), w.push(a.mask);
    }
    function L(w) {
        let E = v[w.type], D;
        if (E) {
            let U = qt[E];
            D = uf.clone(U.uniforms);
        } else D = w.uniforms;
        return D;
    }
    function I(w, E) {
        let D;
        for(let U = 0, F = c.length; U < F; U++){
            let O = c[U];
            if (O.cacheKey === E) {
                D = O, ++D.usedTimes;
                break;
            }
        }
        return D === void 0 && (D = new hx(s, E, w, r), c.push(D)), D;
    }
    function k(w) {
        if (--w.usedTimes === 0) {
            let E = c.indexOf(w);
            c[E] = c[c.length - 1], c.pop(), w.destroy();
        }
    }
    function B(w) {
        l.remove(w);
    }
    function P() {
        l.dispose();
    }
    return {
        getParameters: _,
        getProgramCacheKey: y,
        getUniforms: L,
        acquireProgram: I,
        releaseProgram: k,
        releaseShaderCache: B,
        programs: c,
        dispose: P
    };
}
function fx() {
    let s = new WeakMap;
    function e(r) {
        let o = s.get(r);
        return o === void 0 && (o = {}, s.set(r, o)), o;
    }
    function t(r) {
        s.delete(r);
    }
    function n(r, o, a) {
        s.get(r)[o] = a;
    }
    function i() {
        s = new WeakMap;
    }
    return {
        get: e,
        remove: t,
        update: n,
        dispose: i
    };
}
function px(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.material.id !== e.material.id ? s.material.id - e.material.id : s.z !== e.z ? s.z - e.z : s.id - e.id;
}
function Yl(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.z !== e.z ? e.z - s.z : s.id - e.id;
}
function Zl() {
    let s = [], e = 0, t = [], n = [], i = [];
    function r() {
        e = 0, t.length = 0, n.length = 0, i.length = 0;
    }
    function o(u, d, f, m, x, v) {
        let g = s[e];
        return g === void 0 ? (g = {
            id: u.id,
            object: u,
            geometry: d,
            material: f,
            groupOrder: m,
            renderOrder: u.renderOrder,
            z: x,
            group: v
        }, s[e] = g) : (g.id = u.id, g.object = u, g.geometry = d, g.material = f, g.groupOrder = m, g.renderOrder = u.renderOrder, g.z = x, g.group = v), e++, g;
    }
    function a(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.push(g) : f.transparent === !0 ? i.push(g) : t.push(g);
    }
    function l(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.unshift(g) : f.transparent === !0 ? i.unshift(g) : t.unshift(g);
    }
    function c(u, d) {
        t.length > 1 && t.sort(u || px), n.length > 1 && n.sort(d || Yl), i.length > 1 && i.sort(d || Yl);
    }
    function h() {
        for(let u = e, d = s.length; u < d; u++){
            let f = s[u];
            if (f.id === null) break;
            f.id = null, f.object = null, f.geometry = null, f.material = null, f.group = null;
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: r,
        push: a,
        unshift: l,
        finish: h,
        sort: c
    };
}
function mx() {
    let s = new WeakMap;
    function e(n, i) {
        let r;
        return s.has(n) === !1 ? (r = new Zl, s.set(n, [
            r
        ])) : i >= s.get(n).length ? (r = new Zl, s.get(n).push(r)) : r = s.get(n)[i], r;
    }
    function t() {
        s = new WeakMap;
    }
    return {
        get: e,
        dispose: t
    };
}
function gx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        direction: new M,
                        color: new ae
                    };
                    break;
                case "SpotLight":
                    t = {
                        position: new M,
                        direction: new M,
                        color: new ae,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    t = {
                        position: new M,
                        color: new ae,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    t = {
                        direction: new M,
                        skyColor: new ae,
                        groundColor: new ae
                    };
                    break;
                case "RectAreaLight":
                    t = {
                        color: new ae,
                        position: new M,
                        halfWidth: new M,
                        halfHeight: new M
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
function xx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "SpotLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "PointLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
var yx = 0;
function vx(s, e) {
    return (e.castShadow ? 1 : 0) - (s.castShadow ? 1 : 0);
}
function _x(s, e) {
    let t = new gx, n = xx(), i = {
        version: 0,
        hash: {
            directionalLength: -1,
            pointLength: -1,
            spotLength: -1,
            rectAreaLength: -1,
            hemiLength: -1,
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1
        },
        ambient: [
            0,
            0,
            0
        ],
        probe: [],
        directional: [],
        directionalShadow: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotShadow: [],
        spotShadowMap: [],
        spotShadowMatrix: [],
        rectArea: [],
        rectAreaLTC1: null,
        rectAreaLTC2: null,
        point: [],
        pointShadow: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: []
    };
    for(let h = 0; h < 9; h++)i.probe.push(new M);
    let r = new M, o = new pe, a = new pe;
    function l(h, u) {
        let d = 0, f = 0, m = 0;
        for(let k = 0; k < 9; k++)i.probe[k].set(0, 0, 0);
        let x = 0, v = 0, g = 0, p = 0, _ = 0, y = 0, b = 0, A = 0;
        h.sort(vx);
        let L = u !== !0 ? Math.PI : 1;
        for(let k1 = 0, B = h.length; k1 < B; k1++){
            let P = h[k1], w = P.color, E = P.intensity, D = P.distance, U = P.shadow && P.shadow.map ? P.shadow.map.texture : null;
            if (P.isAmbientLight) d += w.r * E * L, f += w.g * E * L, m += w.b * E * L;
            else if (P.isLightProbe) for(let F = 0; F < 9; F++)i.probe[F].addScaledVector(P.sh.coefficients[F], E);
            else if (P.isDirectionalLight) {
                let F1 = t.get(P);
                if (F1.color.copy(P.color).multiplyScalar(P.intensity * L), P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.directionalShadow[x] = ne, i.directionalShadowMap[x] = U, i.directionalShadowMatrix[x] = P.shadow.matrix, y++;
                }
                i.directional[x] = F1, x++;
            } else if (P.isSpotLight) {
                let F2 = t.get(P);
                if (F2.position.setFromMatrixPosition(P.matrixWorld), F2.color.copy(w).multiplyScalar(E * L), F2.distance = D, F2.coneCos = Math.cos(P.angle), F2.penumbraCos = Math.cos(P.angle * (1 - P.penumbra)), F2.decay = P.decay, P.castShadow) {
                    let O1 = P.shadow, ne1 = n.get(P);
                    ne1.shadowBias = O1.bias, ne1.shadowNormalBias = O1.normalBias, ne1.shadowRadius = O1.radius, ne1.shadowMapSize = O1.mapSize, i.spotShadow[g] = ne1, i.spotShadowMap[g] = U, i.spotShadowMatrix[g] = P.shadow.matrix, A++;
                }
                i.spot[g] = F2, g++;
            } else if (P.isRectAreaLight) {
                let F3 = t.get(P);
                F3.color.copy(w).multiplyScalar(E), F3.halfWidth.set(P.width * .5, 0, 0), F3.halfHeight.set(0, P.height * .5, 0), i.rectArea[p] = F3, p++;
            } else if (P.isPointLight) {
                let F4 = t.get(P);
                if (F4.color.copy(P.color).multiplyScalar(P.intensity * L), F4.distance = P.distance, F4.decay = P.decay, P.castShadow) {
                    let O2 = P.shadow, ne2 = n.get(P);
                    ne2.shadowBias = O2.bias, ne2.shadowNormalBias = O2.normalBias, ne2.shadowRadius = O2.radius, ne2.shadowMapSize = O2.mapSize, ne2.shadowCameraNear = O2.camera.near, ne2.shadowCameraFar = O2.camera.far, i.pointShadow[v] = ne2, i.pointShadowMap[v] = U, i.pointShadowMatrix[v] = P.shadow.matrix, b++;
                }
                i.point[v] = F4, v++;
            } else if (P.isHemisphereLight) {
                let F5 = t.get(P);
                F5.skyColor.copy(P.color).multiplyScalar(E * L), F5.groundColor.copy(P.groundColor).multiplyScalar(E * L), i.hemi[_] = F5, _++;
            }
        }
        p > 0 && (e.isWebGL2 || s.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_FLOAT_1, i.rectAreaLTC2 = ie.LTC_FLOAT_2) : s.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_HALF_1, i.rectAreaLTC2 = ie.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = d, i.ambient[1] = f, i.ambient[2] = m;
        let I = i.hash;
        (I.directionalLength !== x || I.pointLength !== v || I.spotLength !== g || I.rectAreaLength !== p || I.hemiLength !== _ || I.numDirectionalShadows !== y || I.numPointShadows !== b || I.numSpotShadows !== A) && (i.directional.length = x, i.spot.length = g, i.rectArea.length = p, i.point.length = v, i.hemi.length = _, i.directionalShadow.length = y, i.directionalShadowMap.length = y, i.pointShadow.length = b, i.pointShadowMap.length = b, i.spotShadow.length = A, i.spotShadowMap.length = A, i.directionalShadowMatrix.length = y, i.pointShadowMatrix.length = b, i.spotShadowMatrix.length = A, I.directionalLength = x, I.pointLength = v, I.spotLength = g, I.rectAreaLength = p, I.hemiLength = _, I.numDirectionalShadows = y, I.numPointShadows = b, I.numSpotShadows = A, i.version = yx++);
    }
    function c(h, u) {
        let d = 0, f = 0, m = 0, x = 0, v = 0, g = u.matrixWorldInverse;
        for(let p = 0, _ = h.length; p < _; p++){
            let y = h[p];
            if (y.isDirectionalLight) {
                let b = i.directional[d];
                b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), d++;
            } else if (y.isSpotLight) {
                let b1 = i.spot[m];
                b1.position.setFromMatrixPosition(y.matrixWorld), b1.position.applyMatrix4(g), b1.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b1.direction.sub(r), b1.direction.transformDirection(g), m++;
            } else if (y.isRectAreaLight) {
                let b2 = i.rectArea[x];
                b2.position.setFromMatrixPosition(y.matrixWorld), b2.position.applyMatrix4(g), a.identity(), o.copy(y.matrixWorld), o.premultiply(g), a.extractRotation(o), b2.halfWidth.set(y.width * .5, 0, 0), b2.halfHeight.set(0, y.height * .5, 0), b2.halfWidth.applyMatrix4(a), b2.halfHeight.applyMatrix4(a), x++;
            } else if (y.isPointLight) {
                let b3 = i.point[f];
                b3.position.setFromMatrixPosition(y.matrixWorld), b3.position.applyMatrix4(g), f++;
            } else if (y.isHemisphereLight) {
                let b4 = i.hemi[v];
                b4.direction.setFromMatrixPosition(y.matrixWorld), b4.direction.transformDirection(g), b4.direction.normalize(), v++;
            }
        }
    }
    return {
        setup: l,
        setupView: c,
        state: i
    };
}
function $l(s, e) {
    let t = new _x(s, e), n = [], i = [];
    function r() {
        n.length = 0, i.length = 0;
    }
    function o(u) {
        n.push(u);
    }
    function a(u) {
        i.push(u);
    }
    function l(u) {
        t.setup(n, u);
    }
    function c(u) {
        t.setupView(n, u);
    }
    return {
        init: r,
        state: {
            lightsArray: n,
            shadowsArray: i,
            lights: t
        },
        setupLights: l,
        setupLightsView: c,
        pushLight: o,
        pushShadow: a
    };
}
function Mx(s, e) {
    let t = new WeakMap;
    function n(r, o = 0) {
        let a;
        return t.has(r) === !1 ? (a = new $l(s, e), t.set(r, [
            a
        ])) : o >= t.get(r).length ? (a = new $l(s, e), t.get(r).push(a)) : a = t.get(r)[o], a;
    }
    function i() {
        t = new WeakMap;
    }
    return {
        get: n,
        dispose: i
    };
}
var eo = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDepthMaterial", this.depthPacking = Nd, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
    }
};
eo.prototype.isMeshDepthMaterial = !0;
var to = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDistanceMaterial", this.referencePosition = new M, this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
    }
};
to.prototype.isMeshDistanceMaterial = !0;
var bx = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, wx = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function yh(s, e, t) {
    let n = new Dr, i = new X, r = new X, o = new Ve, a = new eo({
        depthPacking: Bd
    }), l = new to, c = {}, h = t.maxTextureSize, u = {
        0: it,
        1: Ai,
        2: Ci
    }, d = new sn({
        defines: {
            VSM_SAMPLES: 8
        },
        uniforms: {
            shadow_pass: {
                value: null
            },
            resolution: {
                value: new X
            },
            radius: {
                value: 4
            }
        },
        vertexShader: bx,
        fragmentShader: wx
    }), f = d.clone();
    f.defines.HORIZONTAL_PASS = 1;
    let m = new _e;
    m.setAttribute("position", new Ue(new Float32Array([
        -1,
        -1,
        .5,
        3,
        -1,
        .5,
        -1,
        3,
        .5
    ]), 3));
    let x = new st(m, d), v = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Hc, this.render = function(y, b, A) {
        if (v.enabled === !1 || v.autoUpdate === !1 && v.needsUpdate === !1 || y.length === 0) return;
        let L = s.getRenderTarget(), I = s.getActiveCubeFace(), k = s.getActiveMipmapLevel(), B = s.state;
        B.setBlending(vn), B.buffers.color.setClear(1, 1, 1, 1), B.buffers.depth.setTest(!0), B.setScissorTest(!1);
        for(let P = 0, w = y.length; P < w; P++){
            let E = y[P], D = E.shadow;
            if (D === void 0) {
                console.warn("THREE.WebGLShadowMap:", E, "has no shadow.");
                continue;
            }
            if (D.autoUpdate === !1 && D.needsUpdate === !1) continue;
            i.copy(D.mapSize);
            let U = D.getFrameExtents();
            if (i.multiply(U), r.copy(D.mapSize), (i.x > h || i.y > h) && (i.x > h && (r.x = Math.floor(h / U.x), i.x = r.x * U.x, D.mapSize.x = r.x), i.y > h && (r.y = Math.floor(h / U.y), i.y = r.y * U.y, D.mapSize.y = r.y)), D.map === null && !D.isPointLightShadow && this.type === ir) {
                let O = {
                    minFilter: tt,
                    magFilter: tt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.mapPass = new At(i.x, i.y, O), D.camera.updateProjectionMatrix();
            }
            if (D.map === null) {
                let O1 = {
                    minFilter: rt,
                    magFilter: rt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O1), D.map.texture.name = E.name + ".shadowMap", D.camera.updateProjectionMatrix();
            }
            s.setRenderTarget(D.map), s.clear();
            let F = D.getViewportCount();
            for(let O2 = 0; O2 < F; O2++){
                let ne = D.getViewport(O2);
                o.set(r.x * ne.x, r.y * ne.y, r.x * ne.z, r.y * ne.w), B.viewport(o), D.updateMatrices(E, O2), n = D.getFrustum(), _(b, A, D.camera, E, this.type);
            }
            !D.isPointLightShadow && this.type === ir && g(D, A), D.needsUpdate = !1;
        }
        v.needsUpdate = !1, s.setRenderTarget(L, I, k);
    };
    function g(y, b) {
        let A = e.update(x);
        d.defines.VSM_SAMPLES !== y.blurSamples && (d.defines.VSM_SAMPLES = y.blurSamples, f.defines.VSM_SAMPLES = y.blurSamples, d.needsUpdate = !0, f.needsUpdate = !0), d.uniforms.shadow_pass.value = y.map.texture, d.uniforms.resolution.value = y.mapSize, d.uniforms.radius.value = y.radius, s.setRenderTarget(y.mapPass), s.clear(), s.renderBufferDirect(b, null, A, d, x, null), f.uniforms.shadow_pass.value = y.mapPass.texture, f.uniforms.resolution.value = y.mapSize, f.uniforms.radius.value = y.radius, s.setRenderTarget(y.map), s.clear(), s.renderBufferDirect(b, null, A, f, x, null);
    }
    function p(y, b, A, L, I, k, B) {
        let P = null, w = L.isPointLight === !0 ? y.customDistanceMaterial : y.customDepthMaterial;
        if (w !== void 0 ? P = w : P = L.isPointLight === !0 ? l : a, s.localClippingEnabled && A.clipShadows === !0 && A.clippingPlanes.length !== 0 || A.displacementMap && A.displacementScale !== 0 || A.alphaMap && A.alphaTest > 0) {
            let E = P.uuid, D = A.uuid, U = c[E];
            U === void 0 && (U = {}, c[E] = U);
            let F = U[D];
            F === void 0 && (F = P.clone(), U[D] = F), P = F;
        }
        return P.visible = A.visible, P.wireframe = A.wireframe, B === ir ? P.side = A.shadowSide !== null ? A.shadowSide : A.side : P.side = A.shadowSide !== null ? A.shadowSide : u[A.side], P.alphaMap = A.alphaMap, P.alphaTest = A.alphaTest, P.clipShadows = A.clipShadows, P.clippingPlanes = A.clippingPlanes, P.clipIntersection = A.clipIntersection, P.displacementMap = A.displacementMap, P.displacementScale = A.displacementScale, P.displacementBias = A.displacementBias, P.wireframeLinewidth = A.wireframeLinewidth, P.linewidth = A.linewidth, L.isPointLight === !0 && P.isMeshDistanceMaterial === !0 && (P.referencePosition.setFromMatrixPosition(L.matrixWorld), P.nearDistance = I, P.farDistance = k), P;
    }
    function _(y, b, A, L, I) {
        if (y.visible === !1) return;
        if (y.layers.test(b.layers) && (y.isMesh || y.isLine || y.isPoints) && (y.castShadow || y.receiveShadow && I === ir) && (!y.frustumCulled || n.intersectsObject(y))) {
            y.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse, y.matrixWorld);
            let P = e.update(y), w = y.material;
            if (Array.isArray(w)) {
                let E = P.groups;
                for(let D = 0, U = E.length; D < U; D++){
                    let F = E[D], O = w[F.materialIndex];
                    if (O && O.visible) {
                        let ne = p(y, P, O, L, A.near, A.far, I);
                        s.renderBufferDirect(A, null, P, ne, y, F);
                    }
                }
            } else if (w.visible) {
                let E1 = p(y, P, w, L, A.near, A.far, I);
                s.renderBufferDirect(A, null, P, E1, y, null);
            }
        }
        let B = y.children;
        for(let P1 = 0, w1 = B.length; P1 < w1; P1++)_(B[P1], b, A, L, I);
    }
}
function Sx(s, e, t) {
    let n = t.isWebGL2;
    function i() {
        let R = !1, ee = new Ve, Q = null, Ee = new Ve(0, 0, 0, 0);
        return {
            setMask: function(me) {
                Q !== me && !R && (s.colorMask(me, me, me, me), Q = me);
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me, Re, oe, Le, Xe) {
                Xe === !0 && (me *= Le, Re *= Le, oe *= Le), ee.set(me, Re, oe, Le), Ee.equals(ee) === !1 && (s.clearColor(me, Re, oe, Le), Ee.copy(ee));
            },
            reset: function() {
                R = !1, Q = null, Ee.set(-1, 0, 0, 0);
            }
        };
    }
    function r() {
        let R = !1, ee = null, Q = null, Ee = null;
        return {
            setTest: function(me) {
                me ? le(2929) : fe(2929);
            },
            setMask: function(me) {
                ee !== me && !R && (s.depthMask(me), ee = me);
            },
            setFunc: function(me) {
                if (Q !== me) {
                    if (me) switch(me){
                        case Eu:
                            s.depthFunc(512);
                            break;
                        case Au:
                            s.depthFunc(519);
                            break;
                        case Cu:
                            s.depthFunc(513);
                            break;
                        case ea:
                            s.depthFunc(515);
                            break;
                        case Lu:
                            s.depthFunc(514);
                            break;
                        case Ru:
                            s.depthFunc(518);
                            break;
                        case Pu:
                            s.depthFunc(516);
                            break;
                        case Iu:
                            s.depthFunc(517);
                            break;
                        default:
                            s.depthFunc(515);
                    }
                    else s.depthFunc(515);
                    Q = me;
                }
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me) {
                Ee !== me && (s.clearDepth(me), Ee = me);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null;
            }
        };
    }
    function o() {
        let R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
        return {
            setTest: function(We) {
                R || (We ? le(2960) : fe(2960));
            },
            setMask: function(We) {
                ee !== We && !R && (s.stencilMask(We), ee = We);
            },
            setFunc: function(We, Ut, Ot) {
                (Q !== We || Ee !== Ut || me !== Ot) && (s.stencilFunc(We, Ut, Ot), Q = We, Ee = Ut, me = Ot);
            },
            setOp: function(We, Ut, Ot) {
                (Re !== We || oe !== Ut || Le !== Ot) && (s.stencilOp(We, Ut, Ot), Re = We, oe = Ut, Le = Ot);
            },
            setLocked: function(We) {
                R = We;
            },
            setClear: function(We) {
                Xe !== We && (s.clearStencil(We), Xe = We);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
            }
        };
    }
    let a = new i, l = new r, c = new o, h = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, P = s.getParameter(35661), w = !1, E = 0, D = s.getParameter(7938);
    D.indexOf("WebGL") !== -1 ? (E = parseFloat(/^WebGL (\d)/.exec(D)[1]), w = E >= 1) : D.indexOf("OpenGL ES") !== -1 && (E = parseFloat(/^OpenGL ES (\d)/.exec(D)[1]), w = E >= 2);
    let U = null, F = {}, O = s.getParameter(3088), ne = s.getParameter(2978), ce = new Ve().fromArray(O), V = new Ve().fromArray(ne);
    function W(R, ee, Q) {
        let Ee = new Uint8Array(4), me = s.createTexture();
        s.bindTexture(R, me), s.texParameteri(R, 10241, 9728), s.texParameteri(R, 10240, 9728);
        for(let Re = 0; Re < Q; Re++)s.texImage2D(ee + Re, 0, 6408, 1, 1, 0, 6408, 5121, Ee);
        return me;
    }
    let he = {};
    he[3553] = W(3553, 3553, 1), he[34067] = W(34067, 34069, 6), a.setClear(0, 0, 0, 1), l.setClear(1), c.setClear(0), le(2929), l.setFunc(ea), Oe(!1), G(tl), le(2884), ge(vn);
    function le(R) {
        h[R] !== !0 && (s.enable(R), h[R] = !0);
    }
    function fe(R) {
        h[R] !== !1 && (s.disable(R), h[R] = !1);
    }
    function Be(R, ee) {
        return u[R] !== ee ? (s.bindFramebuffer(R, ee), u[R] = ee, n && (R === 36009 && (u[36160] = ee), R === 36160 && (u[36009] = ee)), !0) : !1;
    }
    function Y(R) {
        return d !== R ? (s.useProgram(R), d = R, !0) : !1;
    }
    let Ce = {
        [_i]: 32774,
        [mu]: 32778,
        [gu]: 32779
    };
    if (n) Ce[sl] = 32775, Ce[ol] = 32776;
    else {
        let R = e.get("EXT_blend_minmax");
        R !== null && (Ce[sl] = R.MIN_EXT, Ce[ol] = R.MAX_EXT);
    }
    let ye = {
        [xu]: 0,
        [yu]: 1,
        [vu]: 768,
        [Gc]: 770,
        [Tu]: 776,
        [wu]: 774,
        [Mu]: 772,
        [_u]: 769,
        [Vc]: 771,
        [Su]: 775,
        [bu]: 773
    };
    function ge(R, ee, Q, Ee, me, Re, oe, Le) {
        if (R === vn) {
            f === !0 && (fe(3042), f = !1);
            return;
        }
        if (f === !1 && (le(3042), f = !0), R !== pu) {
            if (R !== m || Le !== b) {
                if ((x !== _i || p !== _i) && (s.blendEquation(32774), x = _i, p = _i), Le) switch(R){
                    case sr:
                        s.blendFuncSeparate(1, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(1, 1);
                        break;
                    case il:
                        s.blendFuncSeparate(0, 0, 769, 771);
                        break;
                    case rl:
                        s.blendFuncSeparate(0, 768, 0, 770);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                else switch(R){
                    case sr:
                        s.blendFuncSeparate(770, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(770, 1);
                        break;
                    case il:
                        s.blendFunc(0, 769);
                        break;
                    case rl:
                        s.blendFunc(0, 768);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                v = null, g = null, _ = null, y = null, m = R, b = Le;
            }
            return;
        }
        me = me || ee, Re = Re || Q, oe = oe || Ee, (ee !== x || me !== p) && (s.blendEquationSeparate(Ce[ee], Ce[me]), x = ee, p = me), (Q !== v || Ee !== g || Re !== _ || oe !== y) && (s.blendFuncSeparate(ye[Q], ye[Ee], ye[Re], ye[oe]), v = Q, g = Ee, _ = Re, y = oe), m = R, b = null;
    }
    function xe(R, ee) {
        R.side === Ci ? fe(2884) : le(2884);
        let Q = R.side === it;
        ee && (Q = !Q), Oe(Q), R.blending === sr && R.transparent === !1 ? ge(vn) : ge(R.blending, R.blendEquation, R.blendSrc, R.blendDst, R.blendEquationAlpha, R.blendSrcAlpha, R.blendDstAlpha, R.premultipliedAlpha), l.setFunc(R.depthFunc), l.setTest(R.depthTest), l.setMask(R.depthWrite), a.setMask(R.colorWrite);
        let Ee = R.stencilWrite;
        c.setTest(Ee), Ee && (c.setMask(R.stencilWriteMask), c.setFunc(R.stencilFunc, R.stencilRef, R.stencilFuncMask), c.setOp(R.stencilFail, R.stencilZFail, R.stencilZPass)), K(R.polygonOffset, R.polygonOffsetFactor, R.polygonOffsetUnits), R.alphaToCoverage === !0 ? le(32926) : fe(32926);
    }
    function Oe(R) {
        A !== R && (R ? s.frontFace(2304) : s.frontFace(2305), A = R);
    }
    function G(R) {
        R !== uu ? (le(2884), R !== L && (R === tl ? s.cullFace(1029) : R === du ? s.cullFace(1028) : s.cullFace(1032))) : fe(2884), L = R;
    }
    function j(R) {
        R !== I && (w && s.lineWidth(R), I = R);
    }
    function K(R, ee, Q) {
        R ? (le(32823), (k !== ee || B !== Q) && (s.polygonOffset(ee, Q), k = ee, B = Q)) : fe(32823);
    }
    function ue(R) {
        R ? le(3089) : fe(3089);
    }
    function se(R) {
        R === void 0 && (R = 33984 + P - 1), U !== R && (s.activeTexture(R), U = R);
    }
    function Se(R, ee) {
        U === null && se();
        let Q = F[U];
        Q === void 0 && (Q = {
            type: void 0,
            texture: void 0
        }, F[U] = Q), (Q.type !== R || Q.texture !== ee) && (s.bindTexture(R, ee || he[R]), Q.type = R, Q.texture = ee);
    }
    function Te() {
        let R = F[U];
        R !== void 0 && R.type !== void 0 && (s.bindTexture(R.type, null), R.type = void 0, R.texture = void 0);
    }
    function Pe() {
        try {
            s.compressedTexImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Ye() {
        try {
            s.texSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function C() {
        try {
            s.texSubImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function T() {
        try {
            s.compressedTexSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function J() {
        try {
            s.texStorage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function $() {
        try {
            s.texStorage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function re() {
        try {
            s.texImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Z() {
        try {
            s.texImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Me(R) {
        ce.equals(R) === !1 && (s.scissor(R.x, R.y, R.z, R.w), ce.copy(R));
    }
    function ve(R) {
        V.equals(R) === !1 && (s.viewport(R.x, R.y, R.z, R.w), V.copy(R));
    }
    function te() {
        s.disable(3042), s.disable(2884), s.disable(2929), s.disable(32823), s.disable(3089), s.disable(2960), s.disable(32926), s.blendEquation(32774), s.blendFunc(1, 0), s.blendFuncSeparate(1, 0, 1, 0), s.colorMask(!0, !0, !0, !0), s.clearColor(0, 0, 0, 0), s.depthMask(!0), s.depthFunc(513), s.clearDepth(1), s.stencilMask(4294967295), s.stencilFunc(519, 0, 4294967295), s.stencilOp(7680, 7680, 7680), s.clearStencil(0), s.cullFace(1029), s.frontFace(2305), s.polygonOffset(0, 0), s.activeTexture(33984), s.bindFramebuffer(36160, null), n === !0 && (s.bindFramebuffer(36009, null), s.bindFramebuffer(36008, null)), s.useProgram(null), s.lineWidth(1), s.scissor(0, 0, s.canvas.width, s.canvas.height), s.viewport(0, 0, s.canvas.width, s.canvas.height), h = {}, U = null, F = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, ce.set(0, 0, s.canvas.width, s.canvas.height), V.set(0, 0, s.canvas.width, s.canvas.height), a.reset(), l.reset(), c.reset();
    }
    return {
        buffers: {
            color: a,
            depth: l,
            stencil: c
        },
        enable: le,
        disable: fe,
        bindFramebuffer: Be,
        useProgram: Y,
        setBlending: ge,
        setMaterial: xe,
        setFlipSided: Oe,
        setCullFace: G,
        setLineWidth: j,
        setPolygonOffset: K,
        setScissorTest: ue,
        activeTexture: se,
        bindTexture: Se,
        unbindTexture: Te,
        compressedTexImage2D: Pe,
        texImage2D: re,
        texImage3D: Z,
        texStorage2D: J,
        texStorage3D: $,
        texSubImage2D: Ye,
        texSubImage3D: C,
        compressedTexSubImage2D: T,
        scissor: Me,
        viewport: ve,
        reset: te
    };
}
function Tx(s, e, t, n, i, r, o) {
    let a = i.isWebGL2, l = i.maxTextures, c = i.maxCubemapSize, h = i.maxTextureSize, u = i.maxSamples, f = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : void 0, m = new WeakMap, x, v = !1;
    try {
        v = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
    } catch  {}
    function g(C, T) {
        return v ? new OffscreenCanvas(C, T) : qs("canvas");
    }
    function p(C, T, J, $) {
        let re = 1;
        if ((C.width > $ || C.height > $) && (re = $ / Math.max(C.width, C.height)), re < 1 || T === !0) if (typeof HTMLImageElement < "u" && C instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && C instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && C instanceof ImageBitmap) {
            let Z = T ? Jc : Math.floor, Me = Z(re * C.width), ve = Z(re * C.height);
            x === void 0 && (x = g(Me, ve));
            let te = J ? g(Me, ve) : x;
            return te.width = Me, te.height = ve, te.getContext("2d").drawImage(C, 0, 0, Me, ve), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + C.width + "x" + C.height + ") to (" + Me + "x" + ve + ")."), te;
        } else return "data" in C && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + C.width + "x" + C.height + ")."), C;
        return C;
    }
    function _(C) {
        return ia(C.width) && ia(C.height);
    }
    function y(C) {
        return a ? !1 : C.wrapS !== vt || C.wrapT !== vt || C.minFilter !== rt && C.minFilter !== tt;
    }
    function b(C, T) {
        return C.generateMipmaps && T && C.minFilter !== rt && C.minFilter !== tt;
    }
    function A(C) {
        s.generateMipmap(C);
    }
    function L(C, T, J, $) {
        if (a === !1) return T;
        if (C !== null) {
            if (s[C] !== void 0) return s[C];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + C + "'");
        }
        let re = T;
        return T === 6403 && (J === 5126 && (re = 33326), J === 5131 && (re = 33325), J === 5121 && (re = 33321)), T === 6407 && (J === 5126 && (re = 34837), J === 5131 && (re = 34843), J === 5121 && (re = 32849)), T === 6408 && (J === 5126 && (re = 34836), J === 5131 && (re = 34842), J === 5121 && (re = $ === Oi ? 35907 : 32856)), (re === 33325 || re === 33326 || re === 34842 || re === 34836) && e.get("EXT_color_buffer_float"), re;
    }
    function I(C, T, J) {
        return b(C, J) === !0 || C.isFramebufferTexture && C.minFilter !== rt && C.minFilter !== tt ? Math.log2(Math.max(T.width, T.height)) + 1 : C.mipmaps !== void 0 && C.mipmaps.length > 0 ? C.mipmaps.length : C.isCompressedTexture && Array.isArray(C.image) ? T.mipmaps.length : 1;
    }
    function k(C) {
        return C === rt || C === ta || C === na ? 9728 : 9729;
    }
    function B(C) {
        let T = C.target;
        T.removeEventListener("dispose", B), w(T), T.isVideoTexture && m.delete(T), o.memory.textures--;
    }
    function P(C) {
        let T = C.target;
        T.removeEventListener("dispose", P), E(T);
    }
    function w(C) {
        let T = n.get(C);
        T.__webglInit !== void 0 && (s.deleteTexture(T.__webglTexture), n.remove(C));
    }
    function E(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        if (!!C) {
            if ($.__webglTexture !== void 0 && (s.deleteTexture($.__webglTexture), o.memory.textures--), C.depthTexture && C.depthTexture.dispose(), C.isWebGLCubeRenderTarget) for(let re = 0; re < 6; re++)s.deleteFramebuffer(J.__webglFramebuffer[re]), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer[re]);
            else s.deleteFramebuffer(J.__webglFramebuffer), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer), J.__webglMultisampledFramebuffer && s.deleteFramebuffer(J.__webglMultisampledFramebuffer), J.__webglColorRenderbuffer && s.deleteRenderbuffer(J.__webglColorRenderbuffer), J.__webglDepthRenderbuffer && s.deleteRenderbuffer(J.__webglDepthRenderbuffer);
            if (C.isWebGLMultipleRenderTargets) for(let re1 = 0, Z = T.length; re1 < Z; re1++){
                let Me = n.get(T[re1]);
                Me.__webglTexture && (s.deleteTexture(Me.__webglTexture), o.memory.textures--), n.remove(T[re1]);
            }
            n.remove(T), n.remove(C);
        }
    }
    let D = 0;
    function U() {
        D = 0;
    }
    function F() {
        let C = D;
        return C >= l && console.warn("THREE.WebGLTextures: Trying to use " + C + " texture units while this GPU supports only " + l), D += 1, C;
    }
    function O(C, T) {
        let J = n.get(C);
        if (C.isVideoTexture && se(C), C.version > 0 && J.__version !== C.version) {
            let $ = C.image;
            if ($ === void 0) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else if ($.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            else {
                Be(J, C, T);
                return;
            }
        }
        t.activeTexture(33984 + T), t.bindTexture(3553, J.__webglTexture);
    }
    function ne(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(35866, J.__webglTexture);
    }
    function ce(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(32879, J.__webglTexture);
    }
    function V(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Y(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(34067, J.__webglTexture);
    }
    let W = {
        [Ns]: 10497,
        [vt]: 33071,
        [Bs]: 33648
    }, he = {
        [rt]: 9728,
        [ta]: 9984,
        [na]: 9986,
        [tt]: 9729,
        [Wc]: 9985,
        [Ui]: 9987
    };
    function le(C, T, J) {
        if (J ? (s.texParameteri(C, 10242, W[T.wrapS]), s.texParameteri(C, 10243, W[T.wrapT]), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, W[T.wrapR]), s.texParameteri(C, 10240, he[T.magFilter]), s.texParameteri(C, 10241, he[T.minFilter])) : (s.texParameteri(C, 10242, 33071), s.texParameteri(C, 10243, 33071), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, 33071), (T.wrapS !== vt || T.wrapT !== vt) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), s.texParameteri(C, 10240, k(T.magFilter)), s.texParameteri(C, 10241, k(T.minFilter)), T.minFilter !== rt && T.minFilter !== tt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), e.has("EXT_texture_filter_anisotropic") === !0) {
            let $ = e.get("EXT_texture_filter_anisotropic");
            if (T.type === nn && e.has("OES_texture_float_linear") === !1 || a === !1 && T.type === kn && e.has("OES_texture_half_float_linear") === !1) return;
            (T.anisotropy > 1 || n.get(T).__currentAnisotropy) && (s.texParameterf(C, $.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(T.anisotropy, i.getMaxAnisotropy())), n.get(T).__currentAnisotropy = T.anisotropy);
        }
    }
    function fe(C, T) {
        C.__webglInit === void 0 && (C.__webglInit = !0, T.addEventListener("dispose", B), C.__webglTexture = s.createTexture(), o.memory.textures++);
    }
    function Be(C, T, J) {
        let $ = 3553;
        T.isDataTexture2DArray && ($ = 35866), T.isDataTexture3D && ($ = 32879), fe(C, T), t.activeTexture(33984 + J), t.bindTexture($, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let re = y(T) && _(T.image) === !1, Z = p(T.image, re, !1, h), Me = _(Z) || a, ve = r.convert(T.format), te = r.convert(T.type), R = L(T.internalFormat, ve, te, T.encoding);
        le($, T, Me);
        let ee, Q = T.mipmaps, Ee = a && T.isVideoTexture !== !0, me = C.__version === void 0, Re = I(T, Z, Me);
        if (T.isDepthTexture) R = 6402, a ? T.type === nn ? R = 36012 : T.type === Ps ? R = 33190 : T.type === Ti ? R = 35056 : R = 33189 : T.type === nn && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), T.format === Vn && R === 6402 && T.type !== cr && T.type !== Ps && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), T.type = cr, te = r.convert(T.type)), T.format === Li && R === 6402 && (R = 34041, T.type !== Ti && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), T.type = Ti, te = r.convert(T.type))), Ee && me ? t.texStorage2D(3553, 1, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (T.isDataTexture) if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, 0, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, Z.width, Z.height, ve, te, Z.data)) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, Z.data);
        else if (T.isCompressedTexture) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe1 = 0, Le1 = Q.length; oe1 < Le1; oe1++)ee = Q[oe1], T.format !== ct && T.format !== Gn ? ve !== null ? Ee ? t.compressedTexSubImage2D(3553, oe1, 0, 0, ee.width, ee.height, ve, ee.data) : t.compressedTexImage2D(3553, oe1, R, ee.width, ee.height, 0, ee.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Ee ? t.texSubImage2D(3553, oe1, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe1, R, ee.width, ee.height, 0, ve, te, ee.data);
        } else if (T.isDataTexture2DArray) Ee ? (me && t.texStorage3D(35866, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(35866, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(35866, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isDataTexture3D) Ee ? (me && t.texStorage3D(32879, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(32879, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(32879, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isFramebufferTexture) Ee && me ? t.texStorage2D(3553, Re, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe2 = 0, Le2 = Q.length; oe2 < Le2; oe2++)ee = Q[oe2], Ee ? t.texSubImage2D(3553, oe2, 0, 0, ve, te, ee) : t.texImage2D(3553, oe2, R, ve, te, ee);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, ve, te, Z)) : t.texImage2D(3553, 0, R, ve, te, Z);
        b(T, Me) && A($), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Y(C, T, J) {
        if (T.image.length !== 6) return;
        fe(C, T), t.activeTexture(33984 + J), t.bindTexture(34067, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let $ = T && (T.isCompressedTexture || T.image[0].isCompressedTexture), re = T.image[0] && T.image[0].isDataTexture, Z = [];
        for(let oe = 0; oe < 6; oe++)!$ && !re ? Z[oe] = p(T.image[oe], !1, !0, c) : Z[oe] = re ? T.image[oe].image : T.image[oe];
        let Me = Z[0], ve = _(Me) || a, te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = a && T.isVideoTexture !== !0, Ee = C.__version === void 0, me = I(T, Me, ve);
        le(34067, T, ve);
        let Re;
        if ($) {
            Q && Ee && t.texStorage2D(34067, me, ee, Me.width, Me.height);
            for(let oe1 = 0; oe1 < 6; oe1++){
                Re = Z[oe1].mipmaps;
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    T.format !== ct && T.format !== Gn ? te !== null ? Q ? t.compressedTexSubImage2D(34069 + oe1, Le, 0, 0, Xe.width, Xe.height, te, Xe.data) : t.compressedTexImage2D(34069 + oe1, Le, ee, Xe.width, Xe.height, 0, Xe.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : Q ? t.texSubImage2D(34069 + oe1, Le, 0, 0, Xe.width, Xe.height, te, R, Xe.data) : t.texImage2D(34069 + oe1, Le, ee, Xe.width, Xe.height, 0, te, R, Xe.data);
                }
            }
        } else {
            Re = T.mipmaps, Q && Ee && (Re.length > 0 && me++, t.texStorage2D(34067, me, ee, Z[0].width, Z[0].height));
            for(let oe2 = 0; oe2 < 6; oe2++)if (re) {
                Q ? t.texSubImage2D(34069 + oe2, 0, 0, 0, Z[oe2].width, Z[oe2].height, te, R, Z[oe2].data) : t.texImage2D(34069 + oe2, 0, ee, Z[oe2].width, Z[oe2].height, 0, te, R, Z[oe2].data);
                for(let Le1 = 0; Le1 < Re.length; Le1++){
                    let We = Re[Le1].image[oe2].image;
                    Q ? t.texSubImage2D(34069 + oe2, Le1 + 1, 0, 0, We.width, We.height, te, R, We.data) : t.texImage2D(34069 + oe2, Le1 + 1, ee, We.width, We.height, 0, te, R, We.data);
                }
            } else {
                Q ? t.texSubImage2D(34069 + oe2, 0, 0, 0, te, R, Z[oe2]) : t.texImage2D(34069 + oe2, 0, ee, te, R, Z[oe2]);
                for(let Le2 = 0; Le2 < Re.length; Le2++){
                    let Xe1 = Re[Le2];
                    Q ? t.texSubImage2D(34069 + oe2, Le2 + 1, 0, 0, te, R, Xe1.image[oe2]) : t.texImage2D(34069 + oe2, Le2 + 1, ee, te, R, Xe1.image[oe2]);
                }
            }
        }
        b(T, ve) && A(34067), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Ce(C, T, J, $, re) {
        let Z = r.convert(J.format), Me = r.convert(J.type), ve = L(J.internalFormat, Z, Me, J.encoding);
        n.get(T).__hasExternalTextures || (re === 32879 || re === 35866 ? t.texImage3D(re, 0, ve, T.width, T.height, T.depth, 0, Z, Me, null) : t.texImage2D(re, 0, ve, T.width, T.height, 0, Z, Me, null)), t.bindFramebuffer(36160, C), T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, $, re, n.get(J).__webglTexture, 0, ue(T)) : s.framebufferTexture2D(36160, $, re, n.get(J).__webglTexture, 0), t.bindFramebuffer(36160, null);
    }
    function ye(C, T, J) {
        if (s.bindRenderbuffer(36161, C), T.depthBuffer && !T.stencilBuffer) {
            let $ = 33189;
            if (J || T.useRenderToTexture) {
                let re = T.depthTexture;
                re && re.isDepthTexture && (re.type === nn ? $ = 36012 : re.type === Ps && ($ = 33190));
                let Z = ue(T);
                T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, Z, $, T.width, T.height) : s.renderbufferStorageMultisample(36161, Z, $, T.width, T.height);
            } else s.renderbufferStorage(36161, $, T.width, T.height);
            s.framebufferRenderbuffer(36160, 36096, 36161, C);
        } else if (T.depthBuffer && T.stencilBuffer) {
            let $1 = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, $1, 35056, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, $1, 35056, T.width, T.height) : s.renderbufferStorage(36161, 34041, T.width, T.height), s.framebufferRenderbuffer(36160, 33306, 36161, C);
        } else {
            let $2 = T.isWebGLMultipleRenderTargets === !0 ? T.texture[0] : T.texture, re1 = r.convert($2.format), Z1 = r.convert($2.type), Me = L($2.internalFormat, re1, Z1, $2.encoding), ve = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, ve, Me, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, ve, Me, T.width, T.height) : s.renderbufferStorage(36161, Me, T.width, T.height);
        }
        s.bindRenderbuffer(36161, null);
    }
    function ge(C, T) {
        if (T && T.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
        if (t.bindFramebuffer(36160, C), !(T.depthTexture && T.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        (!n.get(T.depthTexture).__webglTexture || T.depthTexture.image.width !== T.width || T.depthTexture.image.height !== T.height) && (T.depthTexture.image.width = T.width, T.depthTexture.image.height = T.height, T.depthTexture.needsUpdate = !0), O(T.depthTexture, 0);
        let $ = n.get(T.depthTexture).__webglTexture, re = ue(T);
        if (T.depthTexture.format === Vn) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, $, 0, re) : s.framebufferTexture2D(36160, 36096, 3553, $, 0);
        else if (T.depthTexture.format === Li) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, $, 0, re) : s.framebufferTexture2D(36160, 33306, 3553, $, 0);
        else throw new Error("Unknown depthTexture format");
    }
    function xe(C) {
        let T = n.get(C), J = C.isWebGLCubeRenderTarget === !0;
        if (C.depthTexture && !T.__autoAllocateDepthBuffer) {
            if (J) throw new Error("target.depthTexture not supported in Cube render targets");
            ge(T.__webglFramebuffer, C);
        } else if (J) {
            T.__webglDepthbuffer = [];
            for(let $ = 0; $ < 6; $++)t.bindFramebuffer(36160, T.__webglFramebuffer[$]), T.__webglDepthbuffer[$] = s.createRenderbuffer(), ye(T.__webglDepthbuffer[$], C, !1);
        } else t.bindFramebuffer(36160, T.__webglFramebuffer), T.__webglDepthbuffer = s.createRenderbuffer(), ye(T.__webglDepthbuffer, C, !1);
        t.bindFramebuffer(36160, null);
    }
    function Oe(C, T, J) {
        let $ = n.get(C);
        T !== void 0 && Ce($.__webglFramebuffer, C, C.texture, 36064, 3553), J !== void 0 && xe(C);
    }
    function G(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        C.addEventListener("dispose", P), C.isWebGLMultipleRenderTargets !== !0 && ($.__webglTexture === void 0 && ($.__webglTexture = s.createTexture()), $.__version = T.version, o.memory.textures++);
        let re = C.isWebGLCubeRenderTarget === !0, Z = C.isWebGLMultipleRenderTargets === !0, Me = T.isDataTexture3D || T.isDataTexture2DArray, ve = _(C) || a;
        if (a && T.format === Gn && (T.type === nn || T.type === kn) && (T.format = ct, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), re) {
            J.__webglFramebuffer = [];
            for(let te = 0; te < 6; te++)J.__webglFramebuffer[te] = s.createFramebuffer();
        } else if (J.__webglFramebuffer = s.createFramebuffer(), Z) if (i.drawBuffers) {
            let te1 = C.texture;
            for(let R = 0, ee = te1.length; R < ee; R++){
                let Q = n.get(te1[R]);
                Q.__webglTexture === void 0 && (Q.__webglTexture = s.createTexture(), o.memory.textures++);
            }
        } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
        else if (C.useRenderbuffer) if (a) {
            J.__webglMultisampledFramebuffer = s.createFramebuffer(), J.__webglColorRenderbuffer = s.createRenderbuffer(), s.bindRenderbuffer(36161, J.__webglColorRenderbuffer);
            let te2 = r.convert(T.format), R1 = r.convert(T.type), ee1 = L(T.internalFormat, te2, R1, T.encoding), Q1 = ue(C);
            s.renderbufferStorageMultisample(36161, Q1, ee1, C.width, C.height), t.bindFramebuffer(36160, J.__webglMultisampledFramebuffer), s.framebufferRenderbuffer(36160, 36064, 36161, J.__webglColorRenderbuffer), s.bindRenderbuffer(36161, null), C.depthBuffer && (J.__webglDepthRenderbuffer = s.createRenderbuffer(), ye(J.__webglDepthRenderbuffer, C, !0)), t.bindFramebuffer(36160, null);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        if (re) {
            t.bindTexture(34067, $.__webglTexture), le(34067, T, ve);
            for(let te3 = 0; te3 < 6; te3++)Ce(J.__webglFramebuffer[te3], C, T, 36064, 34069 + te3);
            b(T, ve) && A(34067), t.unbindTexture();
        } else if (Z) {
            let te4 = C.texture;
            for(let R2 = 0, ee2 = te4.length; R2 < ee2; R2++){
                let Q2 = te4[R2], Ee = n.get(Q2);
                t.bindTexture(3553, Ee.__webglTexture), le(3553, Q2, ve), Ce(J.__webglFramebuffer, C, Q2, 36064 + R2, 3553), b(Q2, ve) && A(3553);
            }
            t.unbindTexture();
        } else {
            let te5 = 3553;
            Me && (a ? te5 = T.isDataTexture3D ? 32879 : 35866 : console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")), t.bindTexture(te5, $.__webglTexture), le(te5, T, ve), Ce(J.__webglFramebuffer, C, T, 36064, te5), b(T, ve) && A(te5), t.unbindTexture();
        }
        C.depthBuffer && xe(C);
    }
    function j(C) {
        let T = _(C) || a, J = C.isWebGLMultipleRenderTargets === !0 ? C.texture : [
            C.texture
        ];
        for(let $ = 0, re = J.length; $ < re; $++){
            let Z = J[$];
            if (b(Z, T)) {
                let Me = C.isWebGLCubeRenderTarget ? 34067 : 3553, ve = n.get(Z).__webglTexture;
                t.bindTexture(Me, ve), A(Me), t.unbindTexture();
            }
        }
    }
    function K(C) {
        if (C.useRenderbuffer) if (a) {
            let T = C.width, J = C.height, $ = 16384, re = [
                36064
            ], Z = C.stencilBuffer ? 33306 : 36096;
            C.depthBuffer && re.push(Z), C.ignoreDepthForMultisampleCopy || (C.depthBuffer && ($ |= 256), C.stencilBuffer && ($ |= 1024));
            let Me = n.get(C);
            t.bindFramebuffer(36008, Me.__webglMultisampledFramebuffer), t.bindFramebuffer(36009, Me.__webglFramebuffer), C.ignoreDepthForMultisampleCopy && (s.invalidateFramebuffer(36008, [
                Z
            ]), s.invalidateFramebuffer(36009, [
                Z
            ])), s.blitFramebuffer(0, 0, T, J, 0, 0, T, J, $, 9728), s.invalidateFramebuffer(36008, re), t.bindFramebuffer(36008, null), t.bindFramebuffer(36009, Me.__webglMultisampledFramebuffer);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }
    function ue(C) {
        return a && (C.useRenderbuffer || C.useRenderToTexture) ? Math.min(u, C.samples) : 0;
    }
    function se(C) {
        let T = o.render.frame;
        m.get(C) !== T && (m.set(C, T), C.update());
    }
    let Se = !1, Te = !1;
    function Pe(C, T) {
        C && C.isWebGLRenderTarget && (Se === !1 && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), Se = !0), C = C.texture), O(C, T);
    }
    function Ye(C, T) {
        C && C.isWebGLCubeRenderTarget && (Te === !1 && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Te = !0), C = C.texture), V(C, T);
    }
    this.allocateTextureUnit = F, this.resetTextureUnits = U, this.setTexture2D = O, this.setTexture2DArray = ne, this.setTexture3D = ce, this.setTextureCube = V, this.rebindTextures = Oe, this.setupRenderTarget = G, this.updateRenderTargetMipmap = j, this.updateMultisampleRenderTarget = K, this.setupDepthRenderbuffer = xe, this.setupFrameBufferTexture = Ce, this.safeSetTexture2D = Pe, this.safeSetTextureCube = Ye;
}
function Ex(s, e, t) {
    let n = t.isWebGL2;
    function i(r) {
        let o;
        if (r === rn) return 5121;
        if (r === Vu) return 32819;
        if (r === Wu) return 32820;
        if (r === qu) return 33635;
        if (r === Hu) return 5120;
        if (r === ku) return 5122;
        if (r === cr) return 5123;
        if (r === Gu) return 5124;
        if (r === Ps) return 5125;
        if (r === nn) return 5126;
        if (r === kn) return n ? 5131 : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
        if (r === Xu) return 6406;
        if (r === Gn) return 6407;
        if (r === ct) return 6408;
        if (r === Ju) return 6409;
        if (r === Yu) return 6410;
        if (r === Vn) return 6402;
        if (r === Li) return 34041;
        if (r === Zu) return 6403;
        if (r === $u) return 36244;
        if (r === ju) return 33319;
        if (r === Qu) return 33320;
        if (r === Ku) return 36248;
        if (r === ed) return 36249;
        if (r === al || r === ll || r === cl || r === hl) if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
            if (r === al) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (r === ll) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (r === cl) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (r === hl) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else return null;
        if (r === ul || r === dl || r === fl || r === pl) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
            if (r === ul) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (r === dl) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (r === fl) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (r === pl) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        } else return null;
        if (r === td) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
        if ((r === ml || r === gl) && (o = e.get("WEBGL_compressed_texture_etc"), o !== null)) {
            if (r === ml) return o.COMPRESSED_RGB8_ETC2;
            if (r === gl) return o.COMPRESSED_RGBA8_ETC2_EAC;
        }
        if (r === nd || r === id || r === rd || r === sd || r === od || r === ad || r === ld || r === cd || r === hd || r === ud || r === dd || r === fd || r === pd || r === md || r === xd || r === yd || r === vd || r === _d || r === Md || r === bd || r === wd || r === Sd || r === Td || r === Ed || r === Ad || r === Cd || r === Ld || r === Rd) return o = e.get("WEBGL_compressed_texture_astc"), o !== null ? r : null;
        if (r === gd) return o = e.get("EXT_texture_compression_bptc"), o !== null ? r : null;
        if (r === Ti) return n ? 34042 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null);
    }
    return {
        convert: i
    };
}
var ga = class extends ut {
    constructor(e = []){
        super();
        this.cameras = e;
    }
};
ga.prototype.isArrayCamera = !0;
var Hn = class extends Ne {
    constructor(){
        super();
        this.type = "Group";
    }
};
Hn.prototype.isGroup = !0;
var Ax = {
    type: "move"
}, Is = class {
    constructor(){
        this._targetRay = null, this._grip = null, this._hand = null;
    }
    getHandSpace() {
        return this._hand === null && (this._hand = new Hn, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
            pinching: !1
        }), this._hand;
    }
    getTargetRaySpace() {
        return this._targetRay === null && (this._targetRay = new Hn, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new M, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new M), this._targetRay;
    }
    getGripSpace() {
        return this._grip === null && (this._grip = new Hn, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new M, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new M), this._grip;
    }
    dispatchEvent(e) {
        return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
    }
    disconnect(e) {
        return this.dispatchEvent({
            type: "disconnected",
            data: e
        }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
    }
    update(e, t, n) {
        let i = null, r = null, o = null, a = this._targetRay, l = this._grip, c = this._hand;
        if (e && t.session.visibilityState !== "visible-blurred") if (a !== null && (i = t.getPose(e.targetRaySpace, n), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Ax))), c && e.hand) {
            o = !0;
            for (let x of e.hand.values()){
                let v = t.getJointPose(x, n);
                if (c.joints[x.jointName] === void 0) {
                    let p = new Hn;
                    p.matrixAutoUpdate = !1, p.visible = !1, c.joints[x.jointName] = p, c.add(p);
                }
                let g = c.joints[x.jointName];
                v !== null && (g.matrix.fromArray(v.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.jointRadius = v.radius), g.visible = v !== null;
            }
            let h = c.joints["index-finger-tip"], u = c.joints["thumb-tip"], d = h.position.distanceTo(u.position), f = .02, m = .005;
            c.inputState.pinching && d > f + m ? (c.inputState.pinching = !1, this.dispatchEvent({
                type: "pinchend",
                handedness: e.handedness,
                target: this
            })) : !c.inputState.pinching && d <= f - m && (c.inputState.pinching = !0, this.dispatchEvent({
                type: "pinchstart",
                handedness: e.handedness,
                target: this
            }));
        } else l !== null && e.gripSpace && (r = t.getPose(e.gripSpace, n), r !== null && (l.matrix.fromArray(r.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), r.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(r.linearVelocity)) : l.hasLinearVelocity = !1, r.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(r.angularVelocity)) : l.hasAngularVelocity = !1));
        return a !== null && (a.visible = i !== null), l !== null && (l.visible = r !== null), c !== null && (c.visible = o !== null), this;
    }
}, ks = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        if (h = h !== void 0 ? h : Vn, h !== Vn && h !== Li) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        n === void 0 && h === Vn && (n = cr), n === void 0 && h === Li && (n = Ti);
        super(null, i, r, o, a, l, h, n, c);
        this.image = {
            width: e,
            height: t
        }, this.magFilter = a !== void 0 ? a : rt, this.minFilter = l !== void 0 ? l : rt, this.flipY = !1, this.generateMipmaps = !1;
    }
};
ks.prototype.isDepthTexture = !0;
var vh = class extends En {
    constructor(e, t){
        super();
        let n = this, i = null, r = 1, o = null, a = "local-floor", l = e.extensions.has("WEBGL_multisampled_render_to_texture"), c = null, h = null, u = null, d = null, f = !1, m = null, x = t.getContextAttributes(), v = null, g = null, p = [], _ = new Map, y = new ut;
        y.layers.enable(1), y.viewport = new Ve;
        let b = new ut;
        b.layers.enable(2), b.viewport = new Ve;
        let A = [
            y,
            b
        ], L = new ga;
        L.layers.enable(1), L.layers.enable(2);
        let I = null, k = null;
        this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getTargetRaySpace();
        }, this.getControllerGrip = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getGripSpace();
        }, this.getHand = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getHandSpace();
        };
        function B(V) {
            let W = _.get(V.inputSource);
            W && W.dispatchEvent({
                type: V.type,
                data: V.inputSource
            });
        }
        function P() {
            _.forEach(function(V, W) {
                V.disconnect(W);
            }), _.clear(), I = null, k = null, e.setRenderTarget(v), d = null, u = null, h = null, i = null, g = null, ce.stop(), n.isPresenting = !1, n.dispatchEvent({
                type: "sessionend"
            });
        }
        this.setFramebufferScaleFactor = function(V) {
            r = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
        }, this.setReferenceSpaceType = function(V) {
            a = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
        }, this.getReferenceSpace = function() {
            return o;
        }, this.getBaseLayer = function() {
            return u !== null ? u : d;
        }, this.getBinding = function() {
            return h;
        }, this.getFrame = function() {
            return m;
        }, this.getSession = function() {
            return i;
        }, this.setSession = async function(V) {
            if (i = V, i !== null) {
                if (v = e.getRenderTarget(), i.addEventListener("select", B), i.addEventListener("selectstart", B), i.addEventListener("selectend", B), i.addEventListener("squeeze", B), i.addEventListener("squeezestart", B), i.addEventListener("squeezeend", B), i.addEventListener("end", P), i.addEventListener("inputsourceschange", w), x.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
                    let W = {
                        antialias: i.renderState.layers === void 0 ? x.antialias : !0,
                        alpha: x.alpha,
                        depth: x.depth,
                        stencil: x.stencil,
                        framebufferScaleFactor: r
                    };
                    d = new XRWebGLLayer(i, t, W), i.updateRenderState({
                        baseLayer: d
                    }), g = new At(d.framebufferWidth, d.framebufferHeight, {
                        format: ct,
                        type: rn,
                        encoding: e.outputEncoding
                    });
                } else {
                    f = x.antialias;
                    let W1 = null, he = null, le = null;
                    x.depth && (le = x.stencil ? 35056 : 33190, W1 = x.stencil ? Li : Vn, he = x.stencil ? Ti : cr);
                    let fe = {
                        colorFormat: x.alpha || f ? 32856 : 32849,
                        depthFormat: le,
                        scaleFactor: r
                    };
                    h = new XRWebGLBinding(i, t), u = h.createProjectionLayer(fe), i.updateRenderState({
                        layers: [
                            u
                        ]
                    }), f ? g = new Xs(u.textureWidth, u.textureHeight, {
                        format: ct,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W1),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        useRenderToTexture: l,
                        encoding: e.outputEncoding
                    }) : g = new At(u.textureWidth, u.textureHeight, {
                        format: x.alpha ? ct : Gn,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W1),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        encoding: e.outputEncoding
                    });
                }
                this.setFoveation(1), o = await i.requestReferenceSpace(a), ce.setContext(i), ce.start(), n.isPresenting = !0, n.dispatchEvent({
                    type: "sessionstart"
                });
            }
        };
        function w(V) {
            let W = i.inputSources;
            for(let he = 0; he < p.length; he++)_.set(W[he], p[he]);
            for(let he1 = 0; he1 < V.removed.length; he1++){
                let le = V.removed[he1], fe = _.get(le);
                fe && (fe.dispatchEvent({
                    type: "disconnected",
                    data: le
                }), _.delete(le));
            }
            for(let he2 = 0; he2 < V.added.length; he2++){
                let le1 = V.added[he2], fe1 = _.get(le1);
                fe1 && fe1.dispatchEvent({
                    type: "connected",
                    data: le1
                });
            }
        }
        let E = new M, D = new M;
        function U(V, W, he) {
            E.setFromMatrixPosition(W.matrixWorld), D.setFromMatrixPosition(he.matrixWorld);
            let le = E.distanceTo(D), fe = W.projectionMatrix.elements, Be = he.projectionMatrix.elements, Y = fe[14] / (fe[10] - 1), Ce = fe[14] / (fe[10] + 1), ye = (fe[9] + 1) / fe[5], ge = (fe[9] - 1) / fe[5], xe = (fe[8] - 1) / fe[0], Oe = (Be[8] + 1) / Be[0], G = Y * xe, j = Y * Oe, K = le / (-xe + Oe), ue = K * -xe;
            W.matrixWorld.decompose(V.position, V.quaternion, V.scale), V.translateX(ue), V.translateZ(K), V.matrixWorld.compose(V.position, V.quaternion, V.scale), V.matrixWorldInverse.copy(V.matrixWorld).invert();
            let se = Y + K, Se = Ce + K, Te = G - ue, Pe = j + (le - ue), Ye = ye * Ce / Se * se, C = ge * Ce / Se * se;
            V.projectionMatrix.makePerspective(Te, Pe, Ye, C, se, Se);
        }
        function F(V, W) {
            W === null ? V.matrixWorld.copy(V.matrix) : V.matrixWorld.multiplyMatrices(W.matrixWorld, V.matrix), V.matrixWorldInverse.copy(V.matrixWorld).invert();
        }
        this.updateCamera = function(V) {
            if (i === null) return;
            L.near = b.near = y.near = V.near, L.far = b.far = y.far = V.far, (I !== L.near || k !== L.far) && (i.updateRenderState({
                depthNear: L.near,
                depthFar: L.far
            }), I = L.near, k = L.far);
            let W = V.parent, he = L.cameras;
            F(L, W);
            for(let fe = 0; fe < he.length; fe++)F(he[fe], W);
            L.matrixWorld.decompose(L.position, L.quaternion, L.scale), V.position.copy(L.position), V.quaternion.copy(L.quaternion), V.scale.copy(L.scale), V.matrix.copy(L.matrix), V.matrixWorld.copy(L.matrixWorld);
            let le = V.children;
            for(let fe1 = 0, Be = le.length; fe1 < Be; fe1++)le[fe1].updateMatrixWorld(!0);
            he.length === 2 ? U(L, y, b) : L.projectionMatrix.copy(y.projectionMatrix);
        }, this.getCamera = function() {
            return L;
        }, this.getFoveation = function() {
            if (u !== null) return u.fixedFoveation;
            if (d !== null) return d.fixedFoveation;
        }, this.setFoveation = function(V) {
            u !== null && (u.fixedFoveation = V), d !== null && d.fixedFoveation !== void 0 && (d.fixedFoveation = V);
        };
        let O = null;
        function ne(V, W) {
            if (c = W.getViewerPose(o), m = W, c !== null) {
                let le = c.views;
                d !== null && (e.setRenderTargetFramebuffer(g, d.framebuffer), e.setRenderTarget(g));
                let fe = !1;
                le.length !== L.cameras.length && (L.cameras.length = 0, fe = !0);
                for(let Be = 0; Be < le.length; Be++){
                    let Y = le[Be], Ce = null;
                    if (d !== null) Ce = d.getViewport(Y);
                    else {
                        let ge = h.getViewSubImage(u, Y);
                        Ce = ge.viewport, Be === 0 && (e.setRenderTargetTextures(g, ge.colorTexture, u.ignoreDepthValues ? void 0 : ge.depthStencilTexture), e.setRenderTarget(g));
                    }
                    let ye = A[Be];
                    ye.matrix.fromArray(Y.transform.matrix), ye.projectionMatrix.fromArray(Y.projectionMatrix), ye.viewport.set(Ce.x, Ce.y, Ce.width, Ce.height), Be === 0 && L.matrix.copy(ye.matrix), fe === !0 && L.cameras.push(ye);
                }
            }
            let he = i.inputSources;
            for(let le1 = 0; le1 < p.length; le1++){
                let fe1 = p[le1], Be1 = he[le1];
                fe1.update(Be1, W, o);
            }
            O && O(V, W), m = null;
        }
        let ce = new rh;
        ce.setAnimationLoop(ne), this.setAnimationLoop = function(V) {
            O = V;
        }, this.dispose = function() {};
    }
};
function Cx(s) {
    function e(g, p) {
        g.fogColor.value.copy(p.color), p.isFog ? (g.fogNear.value = p.near, g.fogFar.value = p.far) : p.isFogExp2 && (g.fogDensity.value = p.density);
    }
    function t(g, p, _, y, b) {
        p.isMeshBasicMaterial ? n(g, p) : p.isMeshLambertMaterial ? (n(g, p), l(g, p)) : p.isMeshToonMaterial ? (n(g, p), h(g, p)) : p.isMeshPhongMaterial ? (n(g, p), c(g, p)) : p.isMeshStandardMaterial ? (n(g, p), p.isMeshPhysicalMaterial ? d(g, p, b) : u(g, p)) : p.isMeshMatcapMaterial ? (n(g, p), f(g, p)) : p.isMeshDepthMaterial ? (n(g, p), m(g, p)) : p.isMeshDistanceMaterial ? (n(g, p), x(g, p)) : p.isMeshNormalMaterial ? (n(g, p), v(g, p)) : p.isLineBasicMaterial ? (i(g, p), p.isLineDashedMaterial && r(g, p)) : p.isPointsMaterial ? o(g, p, _, y) : p.isSpriteMaterial ? a(g, p) : p.isShadowMaterial ? (g.color.value.copy(p.color), g.opacity.value = p.opacity) : p.isShaderMaterial && (p.uniformsNeedUpdate = !1);
    }
    function n(g, p) {
        g.opacity.value = p.opacity, p.color && g.diffuse.value.copy(p.color), p.emissive && g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity), p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.specularMap && (g.specularMap.value = p.specularMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _ = s.get(p).envMap;
        _ && (g.envMap.value = _, g.flipEnvMap.value = _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1, g.reflectivity.value = p.reflectivity, g.ior.value = p.ior, g.refractionRatio.value = p.refractionRatio), p.lightMap && (g.lightMap.value = p.lightMap, g.lightMapIntensity.value = p.lightMapIntensity), p.aoMap && (g.aoMap.value = p.aoMap, g.aoMapIntensity.value = p.aoMapIntensity);
        let y;
        p.map ? y = p.map : p.specularMap ? y = p.specularMap : p.displacementMap ? y = p.displacementMap : p.normalMap ? y = p.normalMap : p.bumpMap ? y = p.bumpMap : p.roughnessMap ? y = p.roughnessMap : p.metalnessMap ? y = p.metalnessMap : p.alphaMap ? y = p.alphaMap : p.emissiveMap ? y = p.emissiveMap : p.clearcoatMap ? y = p.clearcoatMap : p.clearcoatNormalMap ? y = p.clearcoatNormalMap : p.clearcoatRoughnessMap ? y = p.clearcoatRoughnessMap : p.specularIntensityMap ? y = p.specularIntensityMap : p.specularColorMap ? y = p.specularColorMap : p.transmissionMap ? y = p.transmissionMap : p.thicknessMap ? y = p.thicknessMap : p.sheenColorMap ? y = p.sheenColorMap : p.sheenRoughnessMap && (y = p.sheenRoughnessMap), y !== void 0 && (y.isWebGLRenderTarget && (y = y.texture), y.matrixAutoUpdate === !0 && y.updateMatrix(), g.uvTransform.value.copy(y.matrix));
        let b;
        p.aoMap ? b = p.aoMap : p.lightMap && (b = p.lightMap), b !== void 0 && (b.isWebGLRenderTarget && (b = b.texture), b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uv2Transform.value.copy(b.matrix));
    }
    function i(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity;
    }
    function r(g, p) {
        g.dashSize.value = p.dashSize, g.totalSize.value = p.dashSize + p.gapSize, g.scale.value = p.scale;
    }
    function o(g, p, _, y) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.size.value = p.size * _, g.scale.value = y * .5, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let b;
        p.map ? b = p.map : p.alphaMap && (b = p.alphaMap), b !== void 0 && (b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uvTransform.value.copy(b.matrix));
    }
    function a(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.rotation.value = p.rotation, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _;
        p.map ? _ = p.map : p.alphaMap && (_ = p.alphaMap), _ !== void 0 && (_.matrixAutoUpdate === !0 && _.updateMatrix(), g.uvTransform.value.copy(_.matrix));
    }
    function l(g, p) {
        p.emissiveMap && (g.emissiveMap.value = p.emissiveMap);
    }
    function c(g, p) {
        g.specular.value.copy(p.specular), g.shininess.value = Math.max(p.shininess, 1e-4), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function h(g, p) {
        p.gradientMap && (g.gradientMap.value = p.gradientMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function u(g, p) {
        g.roughness.value = p.roughness, g.metalness.value = p.metalness, p.roughnessMap && (g.roughnessMap.value = p.roughnessMap), p.metalnessMap && (g.metalnessMap.value = p.metalnessMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), s.get(p).envMap && (g.envMapIntensity.value = p.envMapIntensity);
    }
    function d(g, p, _) {
        u(g, p), g.ior.value = p.ior, p.sheen > 0 && (g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen), g.sheenRoughness.value = p.sheenRoughness, p.sheenColorMap && (g.sheenColorMap.value = p.sheenColorMap), p.sheenRoughnessMap && (g.sheenRoughnessMap.value = p.sheenRoughnessMap)), p.clearcoat > 0 && (g.clearcoat.value = p.clearcoat, g.clearcoatRoughness.value = p.clearcoatRoughness, p.clearcoatMap && (g.clearcoatMap.value = p.clearcoatMap), p.clearcoatRoughnessMap && (g.clearcoatRoughnessMap.value = p.clearcoatRoughnessMap), p.clearcoatNormalMap && (g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale), g.clearcoatNormalMap.value = p.clearcoatNormalMap, p.side === it && g.clearcoatNormalScale.value.negate())), p.transmission > 0 && (g.transmission.value = p.transmission, g.transmissionSamplerMap.value = _.texture, g.transmissionSamplerSize.value.set(_.width, _.height), p.transmissionMap && (g.transmissionMap.value = p.transmissionMap), g.thickness.value = p.thickness, p.thicknessMap && (g.thicknessMap.value = p.thicknessMap), g.attenuationDistance.value = p.attenuationDistance, g.attenuationColor.value.copy(p.attenuationColor)), g.specularIntensity.value = p.specularIntensity, g.specularColor.value.copy(p.specularColor), p.specularIntensityMap && (g.specularIntensityMap.value = p.specularIntensityMap), p.specularColorMap && (g.specularColorMap.value = p.specularColorMap);
    }
    function f(g, p) {
        p.matcap && (g.matcap.value = p.matcap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function m(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function x(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), g.referencePosition.value.copy(p.referencePosition), g.nearDistance.value = p.nearDistance, g.farDistance.value = p.farDistance;
    }
    function v(g, p) {
        p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    return {
        refreshFogUniforms: e,
        refreshMaterialUniforms: t
    };
}
function Lx() {
    let s = qs("canvas");
    return s.style.display = "block", s;
}
function qe(s = {}) {
    let e = s.canvas !== void 0 ? s.canvas : Lx(), t = s.context !== void 0 ? s.context : null, n = s.alpha !== void 0 ? s.alpha : !1, i = s.depth !== void 0 ? s.depth : !0, r = s.stencil !== void 0 ? s.stencil : !0, o = s.antialias !== void 0 ? s.antialias : !1, a = s.premultipliedAlpha !== void 0 ? s.premultipliedAlpha : !0, l = s.preserveDrawingBuffer !== void 0 ? s.preserveDrawingBuffer : !1, c = s.powerPreference !== void 0 ? s.powerPreference : "default", h = s.failIfMajorPerformanceCaveat !== void 0 ? s.failIfMajorPerformanceCaveat : !1, u = null, d = null, f = [], m = [];
    this.domElement = e, this.debug = {
        checkShaderErrors: !0
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.outputEncoding = Nt, this.physicallyCorrectLights = !1, this.toneMapping = _n, this.toneMappingExposure = 1;
    let x = this, v = !1, g = 0, p = 0, _ = null, y = -1, b = null, A = new Ve, L = new Ve, I = null, k = e.width, B = e.height, P = 1, w = null, E = null, D = new Ve(0, 0, k, B), U = new Ve(0, 0, k, B), F = !1, O = [], ne = new Dr, ce = !1, V = !1, W = null, he = new pe, le = new M, fe = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0
    };
    function Be() {
        return _ === null ? P : 1;
    }
    let Y = t;
    function Ce(S, N) {
        for(let H = 0; H < S.length; H++){
            let z = S[H], q = e.getContext(z, N);
            if (q !== null) return q;
        }
        return null;
    }
    try {
        let S = {
            alpha: n,
            depth: i,
            stencil: r,
            antialias: o,
            premultipliedAlpha: a,
            preserveDrawingBuffer: l,
            powerPreference: c,
            failIfMajorPerformanceCaveat: h
        };
        if ("setAttribute" in e && e.setAttribute("data-engine", `three.js r${ca}`), e.addEventListener("webglcontextlost", Ee, !1), e.addEventListener("webglcontextrestored", me, !1), Y === null) {
            let N = [
                "webgl2",
                "webgl",
                "experimental-webgl"
            ];
            if (x.isWebGL1Renderer === !0 && N.shift(), Y = Ce(N, S), Y === null) throw Ce(N) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
        }
        Y.getShaderPrecisionFormat === void 0 && (Y.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            };
        });
    } catch (S1) {
        throw console.error("THREE.WebGLRenderer: " + S1.message), S1;
    }
    let ye, ge, xe, Oe, G, j, K, ue, se, Se, Te, Pe, Ye, C, T, J, $, re, Z, Me, ve, te, R;
    function ee() {
        ye = new Qm(Y), ge = new Xm(Y, ye, s), ye.init(ge), te = new Ex(Y, ye, ge), xe = new Sx(Y, ye, ge), O[0] = 1029, Oe = new tg(Y), G = new fx, j = new Tx(Y, ye, xe, G, ge, te, Oe), K = new Ym(x), ue = new jm(x), se = new gf(Y, ge), R = new Wm(Y, ye, se, ge), Se = new Km(Y, se, Oe, R), Te = new sg(Y, Se, se, Oe), Z = new rg(Y, ge, j), J = new Jm(G), Pe = new dx(x, K, ue, ye, ge, R, J), Ye = new Cx(G), C = new mx, T = new Mx(ye, ge), re = new Vm(x, K, xe, Te, a), $ = new yh(x, Te, ge), Me = new qm(Y, ye, Oe, ge), ve = new eg(Y, ye, Oe, ge), Oe.programs = Pe.programs, x.capabilities = ge, x.extensions = ye, x.properties = G, x.renderLists = C, x.shadowMap = $, x.state = xe, x.info = Oe;
    }
    ee();
    let Q = new vh(x, Y);
    this.xr = Q, this.getContext = function() {
        return Y;
    }, this.getContextAttributes = function() {
        return Y.getContextAttributes();
    }, this.forceContextLoss = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.loseContext();
    }, this.forceContextRestore = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.restoreContext();
    }, this.getPixelRatio = function() {
        return P;
    }, this.setPixelRatio = function(S) {
        S !== void 0 && (P = S, this.setSize(k, B, !1));
    }, this.getSize = function(S) {
        return S.set(k, B);
    }, this.setSize = function(S, N, H) {
        if (Q.isPresenting) {
            console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            return;
        }
        k = S, B = N, e.width = Math.floor(S * P), e.height = Math.floor(N * P), H !== !1 && (e.style.width = S + "px", e.style.height = N + "px"), this.setViewport(0, 0, S, N);
    }, this.getDrawingBufferSize = function(S) {
        return S.set(k * P, B * P).floor();
    }, this.setDrawingBufferSize = function(S, N, H) {
        k = S, B = N, P = H, e.width = Math.floor(S * H), e.height = Math.floor(N * H), this.setViewport(0, 0, S, N);
    }, this.getCurrentViewport = function(S) {
        return S.copy(A);
    }, this.getViewport = function(S) {
        return S.copy(D);
    }, this.setViewport = function(S, N, H, z) {
        S.isVector4 ? D.set(S.x, S.y, S.z, S.w) : D.set(S, N, H, z), xe.viewport(A.copy(D).multiplyScalar(P).floor());
    }, this.getScissor = function(S) {
        return S.copy(U);
    }, this.setScissor = function(S, N, H, z) {
        S.isVector4 ? U.set(S.x, S.y, S.z, S.w) : U.set(S, N, H, z), xe.scissor(L.copy(U).multiplyScalar(P).floor());
    }, this.getScissorTest = function() {
        return F;
    }, this.setScissorTest = function(S) {
        xe.setScissorTest(F = S);
    }, this.setOpaqueSort = function(S) {
        w = S;
    }, this.setTransparentSort = function(S) {
        E = S;
    }, this.getClearColor = function(S) {
        return S.copy(re.getClearColor());
    }, this.setClearColor = function() {
        re.setClearColor.apply(re, arguments);
    }, this.getClearAlpha = function() {
        return re.getClearAlpha();
    }, this.setClearAlpha = function() {
        re.setClearAlpha.apply(re, arguments);
    }, this.clear = function(S, N, H) {
        let z = 0;
        (S === void 0 || S) && (z |= 16384), (N === void 0 || N) && (z |= 256), (H === void 0 || H) && (z |= 1024), Y.clear(z);
    }, this.clearColor = function() {
        this.clear(!0, !1, !1);
    }, this.clearDepth = function() {
        this.clear(!1, !0, !1);
    }, this.clearStencil = function() {
        this.clear(!1, !1, !0);
    }, this.dispose = function() {
        e.removeEventListener("webglcontextlost", Ee, !1), e.removeEventListener("webglcontextrestored", me, !1), C.dispose(), T.dispose(), G.dispose(), K.dispose(), ue.dispose(), Te.dispose(), R.dispose(), Pe.dispose(), Q.dispose(), Q.removeEventListener("sessionstart", Ut), Q.removeEventListener("sessionend", Ot), W && (W.dispose(), W = null), Ln.stop();
    };
    function Ee(S) {
        S.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), v = !0;
    }
    function me() {
        console.log("THREE.WebGLRenderer: Context Restored."), v = !1;
        let S = Oe.autoReset, N = $.enabled, H = $.autoUpdate, z = $.needsUpdate, q = $.type;
        ee(), Oe.autoReset = S, $.enabled = N, $.autoUpdate = H, $.needsUpdate = z, $.type = q;
    }
    function Re(S) {
        let N = S.target;
        N.removeEventListener("dispose", Re), oe(N);
    }
    function oe(S) {
        Le(S), G.remove(S);
    }
    function Le(S) {
        let N = G.get(S).programs;
        N !== void 0 && (N.forEach(function(H) {
            Pe.releaseProgram(H);
        }), S.isShaderMaterial && Pe.releaseShaderCache(S));
    }
    this.renderBufferDirect = function(S, N, H, z, q, be) {
        N === null && (N = fe);
        let Ae = q.isMesh && q.matrixWorld.determinant() < 0, Ie = lu(S, N, H, z, q);
        xe.setMaterial(z, Ae);
        let we = H.index, He = H.attributes.position;
        if (we === null) {
            if (He === void 0 || He.count === 0) return;
        } else if (we.count === 0) return;
        let De = 1;
        z.wireframe === !0 && (we = Se.getWireframeAttribute(H), De = 2), R.setup(q, z, Ie, H, we);
        let ze, je = Me;
        we !== null && (ze = se.get(we), je = ve, je.setIndex(ze));
        let Rn = we !== null ? we.count : He.count, ei = H.drawRange.start * De, Ge = H.drawRange.count * De, Ht = be !== null ? be.start * De : 0, at = be !== null ? be.count * De : 1 / 0, kt = Math.max(ei, Ht), Gr = Math.min(Rn, ei + Ge, Ht + at) - 1, Gt = Math.max(0, Gr - kt + 1);
        if (Gt !== 0) {
            if (q.isMesh) z.wireframe === !0 ? (xe.setLineWidth(z.wireframeLinewidth * Be()), je.setMode(1)) : je.setMode(4);
            else if (q.isLine) {
                let Zt = z.linewidth;
                Zt === void 0 && (Zt = 1), xe.setLineWidth(Zt * Be()), q.isLineSegments ? je.setMode(1) : q.isLineLoop ? je.setMode(2) : je.setMode(3);
            } else q.isPoints ? je.setMode(0) : q.isSprite && je.setMode(4);
            if (q.isInstancedMesh) je.renderInstances(kt, Gt, q.count);
            else if (H.isInstancedBufferGeometry) {
                let Zt1 = Math.min(H.instanceCount, H._maxInstanceCount);
                je.renderInstances(kt, Gt, Zt1);
            } else je.render(kt, Gt);
        }
    }, this.compile = function(S, N) {
        d = T.get(S), d.init(), m.push(d), S.traverseVisible(function(H) {
            H.isLight && H.layers.test(N.layers) && (d.pushLight(H), H.castShadow && d.pushShadow(H));
        }), d.setupLights(x.physicallyCorrectLights), S.traverse(function(H) {
            let z = H.material;
            if (z) if (Array.isArray(z)) for(let q = 0; q < z.length; q++){
                let be = z[q];
                xo(be, S, H);
            }
            else xo(z, S, H);
        }), m.pop(), d = null;
    };
    let Xe = null;
    function We(S) {
        Xe && Xe(S);
    }
    function Ut() {
        Ln.stop();
    }
    function Ot() {
        Ln.start();
    }
    let Ln = new rh;
    Ln.setAnimationLoop(We), typeof window < "u" && Ln.setContext(window), this.setAnimationLoop = function(S) {
        Xe = S, Q.setAnimationLoop(S), S === null ? Ln.stop() : Ln.start();
    }, Q.addEventListener("sessionstart", Ut), Q.addEventListener("sessionend", Ot), this.render = function(S, N) {
        if (N !== void 0 && N.isCamera !== !0) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return;
        }
        if (v === !0) return;
        S.autoUpdate === !0 && S.updateMatrixWorld(), N.parent === null && N.updateMatrixWorld(), Q.enabled === !0 && Q.isPresenting === !0 && (Q.cameraAutoUpdate === !0 && Q.updateCamera(N), N = Q.getCamera()), S.isScene === !0 && S.onBeforeRender(x, S, N, _), d = T.get(S, m.length), d.init(), m.push(d), he.multiplyMatrices(N.projectionMatrix, N.matrixWorldInverse), ne.setFromProjectionMatrix(he), V = this.localClippingEnabled, ce = J.init(this.clippingPlanes, V, N), u = C.get(S, f.length), u.init(), f.push(u), Qa(S, N, 0, x.sortObjects), u.finish(), x.sortObjects === !0 && u.sort(w, E), ce === !0 && J.beginShadows();
        let H = d.state.shadowsArray;
        if ($.render(H, S, N), ce === !0 && J.endShadows(), this.info.autoReset === !0 && this.info.reset(), re.render(u, S), d.setupLights(x.physicallyCorrectLights), N.isArrayCamera) {
            let z = N.cameras;
            for(let q = 0, be = z.length; q < be; q++){
                let Ae = z[q];
                Ka(u, S, Ae, Ae.viewport);
            }
        } else Ka(u, S, N);
        _ !== null && (j.updateMultisampleRenderTarget(_), j.updateRenderTargetMipmap(_)), S.isScene === !0 && S.onAfterRender(x, S, N), xe.buffers.depth.setTest(!0), xe.buffers.depth.setMask(!0), xe.buffers.color.setMask(!0), xe.setPolygonOffset(!1), R.resetDefaultState(), y = -1, b = null, m.pop(), m.length > 0 ? d = m[m.length - 1] : d = null, f.pop(), f.length > 0 ? u = f[f.length - 1] : u = null;
    };
    function Qa(S, N, H, z) {
        if (S.visible === !1) return;
        if (S.layers.test(N.layers)) {
            if (S.isGroup) H = S.renderOrder;
            else if (S.isLOD) S.autoUpdate === !0 && S.update(N);
            else if (S.isLight) d.pushLight(S), S.castShadow && d.pushShadow(S);
            else if (S.isSprite) {
                if (!S.frustumCulled || ne.intersectsSprite(S)) {
                    z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                    let Ae = Te.update(S), Ie = S.material;
                    Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
                }
            } else if ((S.isMesh || S.isLine || S.isPoints) && (S.isSkinnedMesh && S.skeleton.frame !== Oe.render.frame && (S.skeleton.update(), S.skeleton.frame = Oe.render.frame), !S.frustumCulled || ne.intersectsObject(S))) {
                z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                let Ae1 = Te.update(S), Ie1 = S.material;
                if (Array.isArray(Ie1)) {
                    let we = Ae1.groups;
                    for(let He = 0, De = we.length; He < De; He++){
                        let ze = we[He], je = Ie1[ze.materialIndex];
                        je && je.visible && u.push(S, Ae1, je, H, le.z, ze);
                    }
                } else Ie1.visible && u.push(S, Ae1, Ie1, H, le.z, null);
            }
        }
        let be = S.children;
        for(let Ae2 = 0, Ie2 = be.length; Ae2 < Ie2; Ae2++)Qa(be[Ae2], N, H, z);
    }
    function Ka(S, N, H, z) {
        let q = S.opaque, be = S.transmissive, Ae = S.transparent;
        d.setupLightsView(H), be.length > 0 && ou(q, N, H), z && xe.viewport(A.copy(z)), q.length > 0 && kr(q, N, H), be.length > 0 && kr(be, N, H), Ae.length > 0 && kr(Ae, N, H);
    }
    function ou(S, N, H) {
        if (W === null) {
            let Ae = o === !0 && ge.isWebGL2 === !0 ? Xs : At;
            W = new Ae(1024, 1024, {
                generateMipmaps: !0,
                type: te.convert(kn) !== null ? kn : rn,
                minFilter: Ui,
                magFilter: rt,
                wrapS: vt,
                wrapT: vt,
                useRenderToTexture: ye.has("WEBGL_multisampled_render_to_texture")
            });
        }
        let z = x.getRenderTarget();
        x.setRenderTarget(W), x.clear();
        let q = x.toneMapping;
        x.toneMapping = _n, kr(S, N, H), x.toneMapping = q, j.updateMultisampleRenderTarget(W), j.updateRenderTargetMipmap(W), x.setRenderTarget(z);
    }
    function kr(S, N, H) {
        let z = N.isScene === !0 ? N.overrideMaterial : null;
        for(let q = 0, be = S.length; q < be; q++){
            let Ae = S[q], Ie = Ae.object, we = Ae.geometry, He = z === null ? Ae.material : z, De = Ae.group;
            Ie.layers.test(H.layers) && au(Ie, N, H, we, He, De);
        }
    }
    function au(S, N, H, z, q, be) {
        S.onBeforeRender(x, N, H, z, q, be), S.modelViewMatrix.multiplyMatrices(H.matrixWorldInverse, S.matrixWorld), S.normalMatrix.getNormalMatrix(S.modelViewMatrix), q.onBeforeRender(x, N, H, z, S, be), q.transparent === !0 && q.side === Ci ? (q.side = it, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ai, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ci) : x.renderBufferDirect(H, N, z, q, S, be), S.onAfterRender(x, N, H, z, q, be);
    }
    function xo(S, N, H) {
        N.isScene !== !0 && (N = fe);
        let z = G.get(S), q = d.state.lights, be = d.state.shadowsArray, Ae = q.state.version, Ie = Pe.getParameters(S, q.state, be, N, H), we = Pe.getProgramCacheKey(Ie), He = z.programs;
        z.environment = S.isMeshStandardMaterial ? N.environment : null, z.fog = N.fog, z.envMap = (S.isMeshStandardMaterial ? ue : K).get(S.envMap || z.environment), He === void 0 && (S.addEventListener("dispose", Re), He = new Map, z.programs = He);
        let De = He.get(we);
        if (De !== void 0) {
            if (z.currentProgram === De && z.lightsStateVersion === Ae) return el(S, Ie), De;
        } else Ie.uniforms = Pe.getUniforms(S), S.onBuild(H, Ie, x), S.onBeforeCompile(Ie, x), De = Pe.acquireProgram(Ie, we), He.set(we, De), z.uniforms = Ie.uniforms;
        let ze = z.uniforms;
        (!S.isShaderMaterial && !S.isRawShaderMaterial || S.clipping === !0) && (ze.clippingPlanes = J.uniform), el(S, Ie), z.needsLights = hu(S), z.lightsStateVersion = Ae, z.needsLights && (ze.ambientLightColor.value = q.state.ambient, ze.lightProbe.value = q.state.probe, ze.directionalLights.value = q.state.directional, ze.directionalLightShadows.value = q.state.directionalShadow, ze.spotLights.value = q.state.spot, ze.spotLightShadows.value = q.state.spotShadow, ze.rectAreaLights.value = q.state.rectArea, ze.ltc_1.value = q.state.rectAreaLTC1, ze.ltc_2.value = q.state.rectAreaLTC2, ze.pointLights.value = q.state.point, ze.pointLightShadows.value = q.state.pointShadow, ze.hemisphereLights.value = q.state.hemi, ze.directionalShadowMap.value = q.state.directionalShadowMap, ze.directionalShadowMatrix.value = q.state.directionalShadowMatrix, ze.spotShadowMap.value = q.state.spotShadowMap, ze.spotShadowMatrix.value = q.state.spotShadowMatrix, ze.pointShadowMap.value = q.state.pointShadowMap, ze.pointShadowMatrix.value = q.state.pointShadowMatrix);
        let je = De.getUniforms(), Rn = bn.seqWithValue(je.seq, ze);
        return z.currentProgram = De, z.uniformsList = Rn, De;
    }
    function el(S, N) {
        let H = G.get(S);
        H.outputEncoding = N.outputEncoding, H.instancing = N.instancing, H.skinning = N.skinning, H.morphTargets = N.morphTargets, H.morphNormals = N.morphNormals, H.morphTargetsCount = N.morphTargetsCount, H.numClippingPlanes = N.numClippingPlanes, H.numIntersection = N.numClipIntersection, H.vertexAlphas = N.vertexAlphas, H.vertexTangents = N.vertexTangents, H.toneMapping = N.toneMapping;
    }
    function lu(S, N, H, z, q) {
        N.isScene !== !0 && (N = fe), j.resetTextureUnits();
        let be = N.fog, Ae = z.isMeshStandardMaterial ? N.environment : null, Ie = _ === null ? x.outputEncoding : _.texture.encoding, we = (z.isMeshStandardMaterial ? ue : K).get(z.envMap || Ae), He = z.vertexColors === !0 && !!H.attributes.color && H.attributes.color.itemSize === 4, De = !!z.normalMap && !!H.attributes.tangent, ze = !!H.morphAttributes.position, je = !!H.morphAttributes.normal, Rn = H.morphAttributes.position ? H.morphAttributes.position.length : 0, ei = z.toneMapped ? x.toneMapping : _n, Ge = G.get(z), Ht = d.state.lights;
        if (ce === !0 && (V === !0 || S !== b)) {
            let Pt = S === b && z.id === y;
            J.setState(z, S, Pt);
        }
        let at = !1;
        z.version === Ge.__version ? (Ge.needsLights && Ge.lightsStateVersion !== Ht.state.version || Ge.outputEncoding !== Ie || q.isInstancedMesh && Ge.instancing === !1 || !q.isInstancedMesh && Ge.instancing === !0 || q.isSkinnedMesh && Ge.skinning === !1 || !q.isSkinnedMesh && Ge.skinning === !0 || Ge.envMap !== we || z.fog && Ge.fog !== be || Ge.numClippingPlanes !== void 0 && (Ge.numClippingPlanes !== J.numPlanes || Ge.numIntersection !== J.numIntersection) || Ge.vertexAlphas !== He || Ge.vertexTangents !== De || Ge.morphTargets !== ze || Ge.morphNormals !== je || Ge.toneMapping !== ei || ge.isWebGL2 === !0 && Ge.morphTargetsCount !== Rn) && (at = !0) : (at = !0, Ge.__version = z.version);
        let kt = Ge.currentProgram;
        at === !0 && (kt = xo(z, N, q));
        let Gr = !1, Gt = !1, Zt = !1, xt = kt.getUniforms(), Xi = Ge.uniforms;
        if (xe.useProgram(kt.program) && (Gr = !0, Gt = !0, Zt = !0), z.id !== y && (y = z.id, Gt = !0), Gr || b !== S) {
            if (xt.setValue(Y, "projectionMatrix", S.projectionMatrix), ge.logarithmicDepthBuffer && xt.setValue(Y, "logDepthBufFC", 2 / (Math.log(S.far + 1) / Math.LN2)), b !== S && (b = S, Gt = !0, Zt = !0), z.isShaderMaterial || z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshStandardMaterial || z.envMap) {
                let Pt1 = xt.map.cameraPosition;
                Pt1 !== void 0 && Pt1.setValue(Y, le.setFromMatrixPosition(S.matrixWorld));
            }
            (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial) && xt.setValue(Y, "isOrthographic", S.isOrthographicCamera === !0), (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial || z.isShadowMaterial || q.isSkinnedMesh) && xt.setValue(Y, "viewMatrix", S.matrixWorldInverse);
        }
        if (q.isSkinnedMesh) {
            xt.setOptional(Y, q, "bindMatrix"), xt.setOptional(Y, q, "bindMatrixInverse");
            let Pt2 = q.skeleton;
            Pt2 && (ge.floatVertexTextures ? (Pt2.boneTexture === null && Pt2.computeBoneTexture(), xt.setValue(Y, "boneTexture", Pt2.boneTexture, j), xt.setValue(Y, "boneTextureSize", Pt2.boneTextureSize)) : xt.setOptional(Y, Pt2, "boneMatrices"));
        }
        return !!H && (H.morphAttributes.position !== void 0 || H.morphAttributes.normal !== void 0) && Z.update(q, H, z, kt), (Gt || Ge.receiveShadow !== q.receiveShadow) && (Ge.receiveShadow = q.receiveShadow, xt.setValue(Y, "receiveShadow", q.receiveShadow)), Gt && (xt.setValue(Y, "toneMappingExposure", x.toneMappingExposure), Ge.needsLights && cu(Xi, Zt), be && z.fog && Ye.refreshFogUniforms(Xi, be), Ye.refreshMaterialUniforms(Xi, z, P, B, W), bn.upload(Y, Ge.uniformsList, Xi, j)), z.isShaderMaterial && z.uniformsNeedUpdate === !0 && (bn.upload(Y, Ge.uniformsList, Xi, j), z.uniformsNeedUpdate = !1), z.isSpriteMaterial && xt.setValue(Y, "center", q.center), xt.setValue(Y, "modelViewMatrix", q.modelViewMatrix), xt.setValue(Y, "normalMatrix", q.normalMatrix), xt.setValue(Y, "modelMatrix", q.matrixWorld), kt;
    }
    function cu(S, N) {
        S.ambientLightColor.needsUpdate = N, S.lightProbe.needsUpdate = N, S.directionalLights.needsUpdate = N, S.directionalLightShadows.needsUpdate = N, S.pointLights.needsUpdate = N, S.pointLightShadows.needsUpdate = N, S.spotLights.needsUpdate = N, S.spotLightShadows.needsUpdate = N, S.rectAreaLights.needsUpdate = N, S.hemisphereLights.needsUpdate = N;
    }
    function hu(S) {
        return S.isMeshLambertMaterial || S.isMeshToonMaterial || S.isMeshPhongMaterial || S.isMeshStandardMaterial || S.isShadowMaterial || S.isShaderMaterial && S.lights === !0;
    }
    this.getActiveCubeFace = function() {
        return g;
    }, this.getActiveMipmapLevel = function() {
        return p;
    }, this.getRenderTarget = function() {
        return _;
    }, this.setRenderTargetTextures = function(S, N, H) {
        G.get(S.texture).__webglTexture = N, G.get(S.depthTexture).__webglTexture = H;
        let z = G.get(S);
        z.__hasExternalTextures = !0, z.__hasExternalTextures && (z.__autoAllocateDepthBuffer = H === void 0, z.__autoAllocateDepthBuffer || S.useRenderToTexture && (console.warn("render-to-texture extension was disabled because an external texture was provided"), S.useRenderToTexture = !1, S.useRenderbuffer = !0));
    }, this.setRenderTargetFramebuffer = function(S, N) {
        let H = G.get(S);
        H.__webglFramebuffer = N, H.__useDefaultFramebuffer = N === void 0;
    }, this.setRenderTarget = function(S, N = 0, H = 0) {
        _ = S, g = N, p = H;
        let z = !0;
        if (S) {
            let we = G.get(S);
            we.__useDefaultFramebuffer !== void 0 ? (xe.bindFramebuffer(36160, null), z = !1) : we.__webglFramebuffer === void 0 ? j.setupRenderTarget(S) : we.__hasExternalTextures && j.rebindTextures(S, G.get(S.texture).__webglTexture, G.get(S.depthTexture).__webglTexture);
        }
        let q = null, be = !1, Ae = !1;
        if (S) {
            let we1 = S.texture;
            (we1.isDataTexture3D || we1.isDataTexture2DArray) && (Ae = !0);
            let He = G.get(S).__webglFramebuffer;
            S.isWebGLCubeRenderTarget ? (q = He[N], be = !0) : S.useRenderbuffer ? q = G.get(S).__webglMultisampledFramebuffer : q = He, A.copy(S.viewport), L.copy(S.scissor), I = S.scissorTest;
        } else A.copy(D).multiplyScalar(P).floor(), L.copy(U).multiplyScalar(P).floor(), I = F;
        if (xe.bindFramebuffer(36160, q) && ge.drawBuffers && z) {
            let we2 = !1;
            if (S) if (S.isWebGLMultipleRenderTargets) {
                let He1 = S.texture;
                if (O.length !== He1.length || O[0] !== 36064) {
                    for(let De = 0, ze = He1.length; De < ze; De++)O[De] = 36064 + De;
                    O.length = He1.length, we2 = !0;
                }
            } else (O.length !== 1 || O[0] !== 36064) && (O[0] = 36064, O.length = 1, we2 = !0);
            else (O.length !== 1 || O[0] !== 1029) && (O[0] = 1029, O.length = 1, we2 = !0);
            we2 && (ge.isWebGL2 ? Y.drawBuffers(O) : ye.get("WEBGL_draw_buffers").drawBuffersWEBGL(O));
        }
        if (xe.viewport(A), xe.scissor(L), xe.setScissorTest(I), be) {
            let we3 = G.get(S.texture);
            Y.framebufferTexture2D(36160, 36064, 34069 + N, we3.__webglTexture, H);
        } else if (Ae) {
            let we4 = G.get(S.texture), He2 = N || 0;
            Y.framebufferTextureLayer(36160, 36064, we4.__webglTexture, H || 0, He2);
        }
        y = -1;
    }, this.readRenderTargetPixels = function(S, N, H, z, q, be, Ae) {
        if (!(S && S.isWebGLRenderTarget)) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            return;
        }
        let Ie = G.get(S).__webglFramebuffer;
        if (S.isWebGLCubeRenderTarget && Ae !== void 0 && (Ie = Ie[Ae]), Ie) {
            xe.bindFramebuffer(36160, Ie);
            try {
                let we = S.texture, He = we.format, De = we.type;
                if (He !== ct && te.convert(He) !== Y.getParameter(35739)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    return;
                }
                let ze = De === kn && (ye.has("EXT_color_buffer_half_float") || ge.isWebGL2 && ye.has("EXT_color_buffer_float"));
                if (De !== rn && te.convert(De) !== Y.getParameter(35738) && !(De === nn && (ge.isWebGL2 || ye.has("OES_texture_float") || ye.has("WEBGL_color_buffer_float"))) && !ze) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    return;
                }
                Y.checkFramebufferStatus(36160) === 36053 ? N >= 0 && N <= S.width - z && H >= 0 && H <= S.height - q && Y.readPixels(N, H, z, q, te.convert(He), te.convert(De), be) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
            } finally{
                let we1 = _ !== null ? G.get(_).__webglFramebuffer : null;
                xe.bindFramebuffer(36160, we1);
            }
        }
    }, this.copyFramebufferToTexture = function(S, N, H = 0) {
        if (N.isFramebufferTexture !== !0) {
            console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");
            return;
        }
        let z = Math.pow(2, -H), q = Math.floor(N.image.width * z), be = Math.floor(N.image.height * z);
        j.setTexture2D(N, 0), Y.copyTexSubImage2D(3553, H, 0, 0, S.x, S.y, q, be), xe.unbindTexture();
    }, this.copyTextureToTexture = function(S, N, H, z = 0) {
        let q = N.image.width, be = N.image.height, Ae = te.convert(H.format), Ie = te.convert(H.type);
        j.setTexture2D(H, 0), Y.pixelStorei(37440, H.flipY), Y.pixelStorei(37441, H.premultiplyAlpha), Y.pixelStorei(3317, H.unpackAlignment), N.isDataTexture ? Y.texSubImage2D(3553, z, S.x, S.y, q, be, Ae, Ie, N.image.data) : N.isCompressedTexture ? Y.compressedTexSubImage2D(3553, z, S.x, S.y, N.mipmaps[0].width, N.mipmaps[0].height, Ae, N.mipmaps[0].data) : Y.texSubImage2D(3553, z, S.x, S.y, Ae, Ie, N.image), z === 0 && H.generateMipmaps && Y.generateMipmap(3553), xe.unbindTexture();
    }, this.copyTextureToTexture3D = function(S, N, H, z, q = 0) {
        if (x.isWebGL1Renderer) {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
            return;
        }
        let be = S.max.x - S.min.x + 1, Ae = S.max.y - S.min.y + 1, Ie = S.max.z - S.min.z + 1, we = te.convert(z.format), He = te.convert(z.type), De;
        if (z.isDataTexture3D) j.setTexture3D(z, 0), De = 32879;
        else if (z.isDataTexture2DArray) j.setTexture2DArray(z, 0), De = 35866;
        else {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
            return;
        }
        Y.pixelStorei(37440, z.flipY), Y.pixelStorei(37441, z.premultiplyAlpha), Y.pixelStorei(3317, z.unpackAlignment);
        let ze = Y.getParameter(3314), je = Y.getParameter(32878), Rn = Y.getParameter(3316), ei = Y.getParameter(3315), Ge = Y.getParameter(32877), Ht = H.isCompressedTexture ? H.mipmaps[0] : H.image;
        Y.pixelStorei(3314, Ht.width), Y.pixelStorei(32878, Ht.height), Y.pixelStorei(3316, S.min.x), Y.pixelStorei(3315, S.min.y), Y.pixelStorei(32877, S.min.z), H.isDataTexture || H.isDataTexture3D ? Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht.data) : H.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), Y.compressedTexSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, Ht.data)) : Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht), Y.pixelStorei(3314, ze), Y.pixelStorei(32878, je), Y.pixelStorei(3316, Rn), Y.pixelStorei(3315, ei), Y.pixelStorei(32877, Ge), q === 0 && z.generateMipmaps && Y.generateMipmap(De), xe.unbindTexture();
    }, this.initTexture = function(S) {
        j.setTexture2D(S, 0), xe.unbindTexture();
    }, this.resetState = function() {
        g = 0, p = 0, _ = null, xe.reset(), R.reset();
    }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
        detail: this
    }));
}
qe.prototype.isWebGLRenderer = !0;
var _h = class extends qe {
};
_h.prototype.isWebGL1Renderer = !0;
var Nr = class {
    constructor(e, t = 25e-5){
        this.name = "", this.color = new ae(e), this.density = t;
    }
    clone() {
        return new Nr(this.color, this.density);
    }
    toJSON() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        };
    }
};
Nr.prototype.isFogExp2 = !0;
var Br = class {
    constructor(e, t = 1, n = 1e3){
        this.name = "", this.color = new ae(e), this.near = t, this.far = n;
    }
    clone() {
        return new Br(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        };
    }
};
Br.prototype.isFog = !0;
var no = class extends Ne {
    constructor(){
        super();
        this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    copy(e, t) {
        return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.fog !== null && (t.object.fog = this.fog.toJSON()), t;
    }
};
no.prototype.isScene = !0;
var $n = class {
    constructor(e, t){
        this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0, this.uuid = Et();
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.stride, n *= t.stride;
        for(let i = 0, r = this.stride; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
        let t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    toJSON(e) {
        return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
            uuid: this.uuid,
            buffer: this.array.buffer._uuid,
            type: this.array.constructor.name,
            stride: this.stride
        };
    }
};
$n.prototype.isInterleavedBuffer = !0;
var Ke = new M, Sn = class {
    constructor(e, t, n, i = !1){
        this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = i === !0;
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.data.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyMatrix4(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyNormalMatrix(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.transformDirection(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    setX(e, t) {
        return this.data.array[e * this.data.stride + this.offset] = t, this;
    }
    setY(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
    }
    setZ(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
    }
    setW(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
    }
    getX(e) {
        return this.data.array[e * this.data.stride + this.offset];
    }
    getY(e) {
        return this.data.array[e * this.data.stride + this.offset + 1];
    }
    getZ(e) {
        return this.data.array[e * this.data.stride + this.offset + 2];
    }
    getW(e) {
        return this.data.array[e * this.data.stride + this.offset + 3];
    }
    setXY(e, t, n) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
    }
    clone(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return new Ue(new this.array.constructor(t), this.itemSize, this.normalized);
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new Sn(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
    }
    toJSON(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized
            };
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
            isInterleavedBufferAttribute: !0,
            itemSize: this.itemSize,
            data: this.data.uuid,
            offset: this.offset,
            normalized: this.normalized
        };
    }
};
Sn.prototype.isInterleavedBufferAttribute = !0;
var io = class extends dt {
    constructor(e){
        super();
        this.type = "SpriteMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
io.prototype.isSpriteMaterial = !0;
var gi, Qi = new M, xi = new M, yi = new M, vi = new X, Ki = new X, Mh = new pe, hs = new M, er = new M, us = new M, jl = new X, qo = new X, Ql = new X, ro = class extends Ne {
    constructor(e){
        super();
        if (this.type = "Sprite", gi === void 0) {
            gi = new _e;
            let t = new Float32Array([
                -.5,
                -.5,
                0,
                0,
                0,
                .5,
                -.5,
                0,
                1,
                0,
                .5,
                .5,
                0,
                1,
                1,
                -.5,
                .5,
                0,
                0,
                1
            ]), n = new $n(t, 5);
            gi.setIndex([
                0,
                1,
                2,
                0,
                2,
                3
            ]), gi.setAttribute("position", new Sn(n, 3, 0, !1)), gi.setAttribute("uv", new Sn(n, 2, 3, !1));
        }
        this.geometry = gi, this.material = e !== void 0 ? e : new io, this.center = new X(.5, .5);
    }
    raycast(e, t) {
        e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), xi.setFromMatrixScale(this.matrixWorld), Mh.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), yi.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && xi.multiplyScalar(-yi.z);
        let n = this.material.rotation, i, r;
        n !== 0 && (r = Math.cos(n), i = Math.sin(n));
        let o = this.center;
        ds(hs.set(-.5, -.5, 0), yi, o, xi, i, r), ds(er.set(.5, -.5, 0), yi, o, xi, i, r), ds(us.set(.5, .5, 0), yi, o, xi, i, r), jl.set(0, 0), qo.set(1, 0), Ql.set(1, 1);
        let a = e.ray.intersectTriangle(hs, er, us, !1, Qi);
        if (a === null && (ds(er.set(-.5, .5, 0), yi, o, xi, i, r), qo.set(0, 1), a = e.ray.intersectTriangle(hs, us, er, !1, Qi), a === null)) return;
        let l = e.ray.origin.distanceTo(Qi);
        l < e.near || l > e.far || t.push({
            distance: l,
            point: Qi.clone(),
            uv: nt.getUV(Qi, hs, er, us, jl, qo, Ql, new X),
            face: null,
            object: this
        });
    }
    copy(e) {
        return super.copy(e), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
    }
};
ro.prototype.isSprite = !0;
function ds(s, e, t, n, i, r) {
    vi.subVectors(s, t).addScalar(.5).multiply(n), i !== void 0 ? (Ki.x = r * vi.x - i * vi.y, Ki.y = i * vi.x + r * vi.y) : Ki.copy(vi), s.copy(e), s.x += Ki.x, s.y += Ki.y, s.applyMatrix4(Mh);
}
var fs = new M, Kl = new M, bh = class extends Ne {
    constructor(){
        super();
        this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            isLOD: {
                value: !0
            }
        }), this.autoUpdate = !0;
    }
    copy(e) {
        super.copy(e, !1);
        let t = e.levels;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            this.addLevel(r.object.clone(), r.distance);
        }
        return this.autoUpdate = e.autoUpdate, this;
    }
    addLevel(e, t = 0) {
        t = Math.abs(t);
        let n = this.levels, i;
        for(i = 0; i < n.length && !(t < n[i].distance); i++);
        return n.splice(i, 0, {
            distance: t,
            object: e
        }), this.add(e), this;
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        let t = this.levels;
        if (t.length > 0) {
            let n, i;
            for(n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            fs.setFromMatrixPosition(this.matrixWorld);
            let i = e.ray.origin.distanceTo(fs);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        let t = this.levels;
        if (t.length > 1) {
            fs.setFromMatrixPosition(e.matrixWorld), Kl.setFromMatrixPosition(this.matrixWorld);
            let n = fs.distanceTo(Kl) / e.zoom;
            t[0].object.visible = !0;
            let i, r;
            for(i = 1, r = t.length; i < r && n >= t[i].distance; i++)t[i - 1].object.visible = !1, t[i].object.visible = !0;
            for(this._currentLevel = i - 1; i < r; i++)t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        let t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
        let n = this.levels;
        for(let i = 0, r = n.length; i < r; i++){
            let o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            });
        }
        return t;
    }
}, ec = new M, tc = new Ve, nc = new Ve, Rx = new M, ic = new pe, so = class extends st {
    constructor(e, t){
        super(e, t);
        this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new pe, this.bindMatrixInverse = new pe;
    }
    copy(e) {
        return super.copy(e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this;
    }
    bind(e, t) {
        this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        let e = new Ve, t = this.geometry.attributes.skinWeight;
        for(let n = 0, i = t.count; n < i; n++){
            e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
    }
    boneTransform(e, t) {
        let n = this.skeleton, i = this.geometry;
        tc.fromBufferAttribute(i.attributes.skinIndex, e), nc.fromBufferAttribute(i.attributes.skinWeight, e), ec.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
        for(let r = 0; r < 4; r++){
            let o = nc.getComponent(r);
            if (o !== 0) {
                let a = tc.getComponent(r);
                ic.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]), t.addScaledVector(Rx.copy(ec).applyMatrix4(ic), o);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
};
so.prototype.isSkinnedMesh = !0;
var oo = class extends Ne {
    constructor(){
        super();
        this.type = "Bone";
    }
};
oo.prototype.isBone = !0;
var qn = class extends ot {
    constructor(e = null, t = 1, n = 1, i, r, o, a, l, c = rt, h = rt, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            data: e,
            width: t,
            height: n
        }, this.magFilter = c, this.minFilter = h, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
qn.prototype.isDataTexture = !0;
var rc = new pe, Px = new pe, ao = class {
    constructor(e = [], t = []){
        this.uuid = Et(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init();
    }
    init() {
        let e = this.bones, t = this.boneInverses;
        if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0) this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
            for(let n = 0, i = this.bones.length; n < i; n++)this.boneInverses.push(new pe);
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = new pe;
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n);
        }
    }
    pose() {
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for(let e1 = 0, t1 = this.bones.length; e1 < t1; e1++){
            let n1 = this.bones[e1];
            n1 && (n1.parent && n1.parent.isBone ? (n1.matrix.copy(n1.parent.matrixWorld).invert(), n1.matrix.multiply(n1.matrixWorld)) : n1.matrix.copy(n1.matrixWorld), n1.matrix.decompose(n1.position, n1.quaternion, n1.scale));
        }
    }
    update() {
        let e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;
        for(let r = 0, o = e.length; r < o; r++){
            let a = e[r] ? e[r].matrixWorld : Px;
            rc.multiplyMatrices(a, t[r]), rc.toArray(n, r * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new ao(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        e = Xc(e), e = Math.max(e, 4);
        let t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        let n = new qn(t, e, e, ct, nn);
        return n.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this;
    }
    getBoneByName(e) {
        for(let t = 0, n = this.bones.length; t < n; t++){
            let i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for(let n = 0, i = e.bones.length; n < i; n++){
            let r = e.bones[n], o = t[r];
            o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", r), o = new oo), this.bones.push(o), this.boneInverses.push(new pe().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Skeleton",
                generator: "Skeleton.toJSON"
            },
            bones: [],
            boneInverses: []
        };
        e.uuid = this.uuid;
        let t = this.bones, n = this.boneInverses;
        for(let i = 0, r = t.length; i < r; i++){
            let o = t[i];
            e.bones.push(o.uuid);
            let a = n[i];
            e.boneInverses.push(a.toArray());
        }
        return e;
    }
}, Xn = class extends Ue {
    constructor(e, t, n, i = 1){
        typeof n == "number" && (i = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));
        super(e, t, n);
        this.meshPerAttribute = i;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
    }
};
Xn.prototype.isInstancedBufferAttribute = !0;
var sc = new pe, oc = new pe, ps = [], tr = new st, xa = class extends st {
    constructor(e, t, n){
        super(e, t);
        this.instanceMatrix = new Xn(new Float32Array(n * 16), 16), this.instanceColor = null, this.count = n, this.frustumCulled = !1;
    }
    copy(e) {
        return super.copy(e), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this;
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    raycast(e, t) {
        let n = this.matrixWorld, i = this.count;
        if (tr.geometry = this.geometry, tr.material = this.material, tr.material !== void 0) for(let r = 0; r < i; r++){
            this.getMatrixAt(r, sc), oc.multiplyMatrices(n, sc), tr.matrixWorld = oc, tr.raycast(e, ps);
            for(let o = 0, a = ps.length; o < a; o++){
                let l = ps[o];
                l.instanceId = r, l.object = this, t.push(l);
            }
            ps.length = 0;
        }
    }
    setColorAt(e, t) {
        this.instanceColor === null && (this.instanceColor = new Xn(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    updateMorphTargets() {}
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
xa.prototype.isInstancedMesh = !0;
var ft = class extends dt {
    constructor(e){
        super();
        this.type = "LineBasicMaterial", this.color = new ae(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
    }
};
ft.prototype.isLineBasicMaterial = !0;
var ac = new M, lc = new M, cc = new pe, Xo = new Cn, ms = new An, on = class extends Ne {
    constructor(e = new _e, t = new ft){
        super();
        this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [
                0
            ];
            for(let i = 1, r = t.count; i < r; i++)ac.fromBufferAttribute(t, i - 1), lc.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += ac.distanceTo(lc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Line.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), ms.copy(n.boundingSphere), ms.applyMatrix4(i), ms.radius += r, e.ray.intersectsSphere(ms) === !1) return;
        cc.copy(i).invert(), Xo.copy(e.ray).applyMatrix4(cc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = new M, h = new M, u = new M, d = new M, f = this.isLineSegments ? 2 : 1;
        if (n.isBufferGeometry) {
            let m = n.index, v = n.attributes.position;
            if (m !== null) {
                let g = Math.max(0, o.start), p = Math.min(m.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    let b = m.getX(_), A = m.getX(_ + 1);
                    if (c.fromBufferAttribute(v, b), h.fromBufferAttribute(v, A), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let I = e.ray.origin.distanceTo(d);
                    I < e.near || I > e.far || t.push({
                        distance: I,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            } else {
                let g1 = Math.max(0, o.start), p1 = Math.min(v.count, o.start + o.count);
                for(let _1 = g1, y1 = p1 - 1; _1 < y1; _1 += f){
                    if (c.fromBufferAttribute(v, _1), h.fromBufferAttribute(v, _1 + 1), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let A1 = e.ray.origin.distanceTo(d);
                    A1 < e.near || A1 > e.far || t.push({
                        distance: A1,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _1,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            }
        } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
on.prototype.isLine = !0;
var hc = new M, uc = new M, wt = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineSegments";
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [];
            for(let i = 0, r = t.count; i < r; i += 2)hc.fromBufferAttribute(t, i), uc.fromBufferAttribute(t, i + 1), n[i] = i === 0 ? 0 : n[i - 1], n[i + 1] = n[i] + hc.distanceTo(uc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
};
wt.prototype.isLineSegments = !0;
var ya = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineLoop";
    }
};
ya.prototype.isLineLoop = !0;
var jn = class extends dt {
    constructor(e){
        super();
        this.type = "PointsMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
jn.prototype.isPointsMaterial = !0;
var dc = new pe, sa = new Cn, gs = new An, xs = new M, zr = class extends Ne {
    constructor(e = new _e, t = new jn){
        super();
        this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), gs.copy(n.boundingSphere), gs.applyMatrix4(i), gs.radius += r, e.ray.intersectsSphere(gs) === !1) return;
        dc.copy(i).invert(), sa.copy(e.ray).applyMatrix4(dc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a;
        if (n.isBufferGeometry) {
            let c = n.index, u = n.attributes.position;
            if (c !== null) {
                let d = Math.max(0, o.start), f = Math.min(c.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++){
                    let v = c.getX(m);
                    xs.fromBufferAttribute(u, v), fc(xs, v, l, i, e, t, this);
                }
            } else {
                let d1 = Math.max(0, o.start), f1 = Math.min(u.count, o.start + o.count);
                for(let m1 = d1, x1 = f1; m1 < x1; m1++)xs.fromBufferAttribute(u, m1), fc(xs, m1, l, i, e, t, this);
            }
        } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
zr.prototype.isPoints = !0;
function fc(s, e, t, n, i, r, o) {
    let a = sa.distanceSqToPoint(s);
    if (a < t) {
        let l = new M;
        sa.closestPointToPoint(s, l), l.applyMatrix4(n);
        let c = i.ray.origin.distanceTo(l);
        if (c < i.near || c > i.far) return;
        r.push({
            distance: c,
            distanceToRay: Math.sqrt(a),
            point: l,
            index: e,
            face: null,
            object: o
        });
    }
}
var wh = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.format = a !== void 0 ? a : Gn, this.minFilter = o !== void 0 ? o : tt, this.magFilter = r !== void 0 ? r : tt, this.generateMipmaps = !1;
        let h = this;
        function u() {
            h.needsUpdate = !0, e.requestVideoFrameCallback(u);
        }
        "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(u);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        let e = this.image;
        "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
    }
};
wh.prototype.isVideoTexture = !0;
var Sh = class extends ot {
    constructor(e, t, n){
        super({
            width: e,
            height: t
        });
        this.format = n, this.magFilter = rt, this.minFilter = rt, this.generateMipmaps = !1, this.needsUpdate = !0;
    }
};
Sh.prototype.isFramebufferTexture = !0;
var va = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
    }
};
va.prototype.isCompressedTexture = !0;
var Th = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.needsUpdate = !0;
    }
};
Th.prototype.isCanvasTexture = !0;
var fr = class extends _e {
    constructor(e = 1, t = 8, n = 0, i = Math.PI * 2){
        super();
        this.type = "CircleGeometry", this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: i
        }, t = Math.max(3, t);
        let r = [], o = [], a = [], l = [], c = new M, h = new X;
        o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
        for(let u = 0, d = 3; u <= t; u++, d += 3){
            let f = n + u / t * i;
            c.x = e * Math.cos(f), c.y = e * Math.sin(f), o.push(c.x, c.y, c.z), a.push(0, 0, 1), h.x = (o[d] / e + 1) / 2, h.y = (o[d + 1] / e + 1) / 2, l.push(h.x, h.y);
        }
        for(let u1 = 1; u1 <= t; u1++)r.push(u1, u1 + 1, 0);
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("normal", new de(a, 3)), this.setAttribute("uv", new de(l, 2));
    }
    static fromJSON(e) {
        return new fr(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}, Jn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 8, r = 1, o = !1, a = 0, l = Math.PI * 2){
        super();
        this.type = "CylinderGeometry", this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: o,
            thetaStart: a,
            thetaLength: l
        };
        let c = this;
        i = Math.floor(i), r = Math.floor(r);
        let h = [], u = [], d = [], f = [], m = 0, x = [], v = n / 2, g = 0;
        p(), o === !1 && (e > 0 && _(!0), t > 0 && _(!1)), this.setIndex(h), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function p() {
            let y = new M, b = new M, A = 0, L = (t - e) / n;
            for(let I = 0; I <= r; I++){
                let k = [], B = I / r, P = B * (t - e) + e;
                for(let w = 0; w <= i; w++){
                    let E = w / i, D = E * l + a, U = Math.sin(D), F = Math.cos(D);
                    b.x = P * U, b.y = -B * n + v, b.z = P * F, u.push(b.x, b.y, b.z), y.set(U, L, F).normalize(), d.push(y.x, y.y, y.z), f.push(E, 1 - B), k.push(m++);
                }
                x.push(k);
            }
            for(let I1 = 0; I1 < i; I1++)for(let k1 = 0; k1 < r; k1++){
                let B1 = x[k1][I1], P1 = x[k1 + 1][I1], w1 = x[k1 + 1][I1 + 1], E1 = x[k1][I1 + 1];
                h.push(B1, P1, E1), h.push(P1, w1, E1), A += 6;
            }
            c.addGroup(g, A, 0), g += A;
        }
        function _(y) {
            let b = m, A = new X, L = new M, I = 0, k = y === !0 ? e : t, B = y === !0 ? 1 : -1;
            for(let w = 1; w <= i; w++)u.push(0, v * B, 0), d.push(0, B, 0), f.push(.5, .5), m++;
            let P = m;
            for(let w1 = 0; w1 <= i; w1++){
                let D = w1 / i * l + a, U = Math.cos(D), F = Math.sin(D);
                L.x = k * F, L.y = v * B, L.z = k * U, u.push(L.x, L.y, L.z), d.push(0, B, 0), A.x = U * .5 + .5, A.y = F * .5 * B + .5, f.push(A.x, A.y), m++;
            }
            for(let w2 = 0; w2 < i; w2++){
                let E = b + w2, D1 = P + w2;
                y === !0 ? h.push(D1, D1 + 1, E) : h.push(D1 + 1, D1, E), I += 3;
            }
            c.addGroup(g, I, y === !0 ? 1 : 2), g += I;
        }
    }
    static fromJSON(e) {
        return new Jn(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, pr = class extends Jn {
    constructor(e = 1, t = 1, n = 8, i = 1, r = !1, o = 0, a = Math.PI * 2){
        super(0, e, t, n, i, r, o, a);
        this.type = "ConeGeometry", this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: o,
            thetaLength: a
        };
    }
    static fromJSON(e) {
        return new pr(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, an = class extends _e {
    constructor(e = [], t = [], n = 1, i = 0){
        super();
        this.type = "PolyhedronGeometry", this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: i
        };
        let r = [], o = [];
        a(i), c(n), h(), this.setAttribute("position", new de(r, 3)), this.setAttribute("normal", new de(r.slice(), 3)), this.setAttribute("uv", new de(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function a(p) {
            let _ = new M, y = new M, b = new M;
            for(let A = 0; A < t.length; A += 3)f(t[A + 0], _), f(t[A + 1], y), f(t[A + 2], b), l(_, y, b, p);
        }
        function l(p, _, y, b) {
            let A = b + 1, L = [];
            for(let I = 0; I <= A; I++){
                L[I] = [];
                let k = p.clone().lerp(y, I / A), B = _.clone().lerp(y, I / A), P = A - I;
                for(let w = 0; w <= P; w++)w === 0 && I === A ? L[I][w] = k : L[I][w] = k.clone().lerp(B, w / P);
            }
            for(let I1 = 0; I1 < A; I1++)for(let k1 = 0; k1 < 2 * (A - I1) - 1; k1++){
                let B1 = Math.floor(k1 / 2);
                k1 % 2 === 0 ? (d(L[I1][B1 + 1]), d(L[I1 + 1][B1]), d(L[I1][B1])) : (d(L[I1][B1 + 1]), d(L[I1 + 1][B1 + 1]), d(L[I1 + 1][B1]));
            }
        }
        function c(p) {
            let _ = new M;
            for(let y = 0; y < r.length; y += 3)_.x = r[y + 0], _.y = r[y + 1], _.z = r[y + 2], _.normalize().multiplyScalar(p), r[y + 0] = _.x, r[y + 1] = _.y, r[y + 2] = _.z;
        }
        function h() {
            let p = new M;
            for(let _ = 0; _ < r.length; _ += 3){
                p.x = r[_ + 0], p.y = r[_ + 1], p.z = r[_ + 2];
                let y = v(p) / 2 / Math.PI + .5, b = g(p) / Math.PI + .5;
                o.push(y, 1 - b);
            }
            m(), u();
        }
        function u() {
            for(let p = 0; p < o.length; p += 6){
                let _ = o[p + 0], y = o[p + 2], b = o[p + 4], A = Math.max(_, y, b), L = Math.min(_, y, b);
                A > .9 && L < .1 && (_ < .2 && (o[p + 0] += 1), y < .2 && (o[p + 2] += 1), b < .2 && (o[p + 4] += 1));
            }
        }
        function d(p) {
            r.push(p.x, p.y, p.z);
        }
        function f(p, _) {
            let y = p * 3;
            _.x = e[y + 0], _.y = e[y + 1], _.z = e[y + 2];
        }
        function m() {
            let p = new M, _ = new M, y = new M, b = new M, A = new X, L = new X, I = new X;
            for(let k = 0, B = 0; k < r.length; k += 9, B += 6){
                p.set(r[k + 0], r[k + 1], r[k + 2]), _.set(r[k + 3], r[k + 4], r[k + 5]), y.set(r[k + 6], r[k + 7], r[k + 8]), A.set(o[B + 0], o[B + 1]), L.set(o[B + 2], o[B + 3]), I.set(o[B + 4], o[B + 5]), b.copy(p).add(_).add(y).divideScalar(3);
                let P = v(b);
                x(A, B + 0, p, P), x(L, B + 2, _, P), x(I, B + 4, y, P);
            }
        }
        function x(p, _, y, b) {
            b < 0 && p.x === 1 && (o[_] = p.x - 1), y.x === 0 && y.z === 0 && (o[_] = b / 2 / Math.PI + .5);
        }
        function v(p) {
            return Math.atan2(p.z, -p.x);
        }
        function g(p) {
            return Math.atan2(-p.y, Math.sqrt(p.x * p.x + p.z * p.z));
        }
    }
    static fromJSON(e) {
        return new an(e.vertices, e.indices, e.radius, e.details);
    }
}, mr = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            0,
            -n,
            0,
            -i,
            n,
            0,
            -i,
            -n,
            0,
            i,
            n,
            0,
            i
        ], o = [
            3,
            11,
            7,
            3,
            7,
            15,
            3,
            15,
            13,
            7,
            19,
            17,
            7,
            17,
            6,
            7,
            6,
            15,
            17,
            4,
            8,
            17,
            8,
            10,
            17,
            10,
            6,
            8,
            0,
            16,
            8,
            16,
            2,
            8,
            2,
            10,
            0,
            12,
            1,
            0,
            1,
            18,
            0,
            18,
            16,
            6,
            10,
            2,
            6,
            2,
            13,
            6,
            13,
            15,
            2,
            16,
            18,
            2,
            18,
            3,
            2,
            3,
            13,
            18,
            1,
            9,
            18,
            9,
            11,
            18,
            11,
            3,
            4,
            14,
            12,
            4,
            12,
            0,
            4,
            0,
            8,
            11,
            9,
            5,
            11,
            5,
            19,
            11,
            19,
            7,
            19,
            5,
            14,
            19,
            14,
            4,
            19,
            4,
            17,
            1,
            12,
            14,
            1,
            14,
            5,
            1,
            5,
            9
        ];
        super(r, o, e, t);
        this.type = "DodecahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new mr(e.radius, e.detail);
    }
}, ys = new M, vs = new M, Jo = new M, _s = new nt, _a = class extends _e {
    constructor(e = null, t = 1){
        super();
        if (this.type = "EdgesGeometry", this.parameters = {
            geometry: e,
            thresholdAngle: t
        }, e !== null) {
            let i = Math.pow(10, 4), r = Math.cos(Wn * t), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                0,
                0,
                0
            ], h = [
                "a",
                "b",
                "c"
            ], u = new Array(3), d = {}, f = [];
            for(let m = 0; m < l; m += 3){
                o ? (c[0] = o.getX(m), c[1] = o.getX(m + 1), c[2] = o.getX(m + 2)) : (c[0] = m, c[1] = m + 1, c[2] = m + 2);
                let { a: x , b: v , c: g  } = _s;
                if (x.fromBufferAttribute(a, c[0]), v.fromBufferAttribute(a, c[1]), g.fromBufferAttribute(a, c[2]), _s.getNormal(Jo), u[0] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(x.z * i)}`, u[1] = `${Math.round(v.x * i)},${Math.round(v.y * i)},${Math.round(v.z * i)}`, u[2] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(g.z * i)}`, !(u[0] === u[1] || u[1] === u[2] || u[2] === u[0])) for(let p = 0; p < 3; p++){
                    let _ = (p + 1) % 3, y = u[p], b = u[_], A = _s[h[p]], L = _s[h[_]], I = `${y}_${b}`, k = `${b}_${y}`;
                    k in d && d[k] ? (Jo.dot(d[k].normal) <= r && (f.push(A.x, A.y, A.z), f.push(L.x, L.y, L.z)), d[k] = null) : I in d || (d[I] = {
                        index0: c[p],
                        index1: c[_],
                        normal: Jo.clone()
                    });
                }
            }
            for(let m1 in d)if (d[m1]) {
                let { index0: x1 , index1: v1  } = d[m1];
                ys.fromBufferAttribute(a, x1), vs.fromBufferAttribute(a, v1), f.push(ys.x, ys.y, ys.z), f.push(vs.x, vs.y, vs.z);
            }
            this.setAttribute("position", new de(f, 3));
        }
    }
}, Ct = class {
    constructor(){
        this.type = "Curve", this.arcLengthDivisions = 200;
    }
    getPoint() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
    }
    getPointAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        let e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        let t = [], n, i = this.getPoint(0), r = 0;
        t.push(0);
        for(let o = 1; o <= e; o++)n = this.getPoint(o / e), r += n.distanceTo(i), t.push(r), i = n;
        return this.cacheArcLengths = t, t;
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.getLengths();
    }
    getUtoTmapping(e, t) {
        let n = this.getLengths(), i = 0, r = n.length, o;
        t ? o = t : o = e * n[r - 1];
        let a = 0, l = r - 1, c;
        for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = n[i] - o, c < 0) a = i + 1;
        else if (c > 0) l = i - 1;
        else {
            l = i;
            break;
        }
        if (i = l, n[i] === o) return i / (r - 1);
        let h = n[i], d = n[i + 1] - h, f = (o - h) / d;
        return (i + f) / (r - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4, r = e + 1e-4;
        i < 0 && (i = 0), r > 1 && (r = 1);
        let o = this.getPoint(i), a = this.getPoint(r), l = t || (o.isVector2 ? new X : new M);
        return l.copy(a).sub(o).normalize(), l;
    }
    getTangentAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        let n = new M, i = [], r = [], o = [], a = new M, l = new pe;
        for(let f = 0; f <= e; f++){
            let m = f / e;
            i[f] = this.getTangentAt(m, new M);
        }
        r[0] = new M, o[0] = new M;
        let c = Number.MAX_VALUE, h = Math.abs(i[0].x), u = Math.abs(i[0].y), d = Math.abs(i[0].z);
        h <= c && (c = h, n.set(1, 0, 0)), u <= c && (c = u, n.set(0, 1, 0)), d <= c && n.set(0, 0, 1), a.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], a), o[0].crossVectors(i[0], r[0]);
        for(let f1 = 1; f1 <= e; f1++){
            if (r[f1] = r[f1 - 1].clone(), o[f1] = o[f1 - 1].clone(), a.crossVectors(i[f1 - 1], i[f1]), a.length() > Number.EPSILON) {
                a.normalize();
                let m1 = Math.acos(mt(i[f1 - 1].dot(i[f1]), -1, 1));
                r[f1].applyMatrix4(l.makeRotationAxis(a, m1));
            }
            o[f1].crossVectors(i[f1], r[f1]);
        }
        if (t === !0) {
            let f2 = Math.acos(mt(r[0].dot(r[e]), -1, 1));
            f2 /= e, i[0].dot(a.crossVectors(r[0], r[e])) > 0 && (f2 = -f2);
            for(let m2 = 1; m2 <= e; m2++)r[m2].applyMatrix4(l.makeRotationAxis(i[m2], f2 * m2)), o[m2].crossVectors(i[m2], r[m2]);
        }
        return {
            tangents: i,
            normals: r,
            binormals: o
        };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
    }
    fromJSON(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
}, Ur = class extends Ct {
    constructor(e = 0, t = 0, n = 1, i = 1, r = 0, o = Math.PI * 2, a = !1, l = 0){
        super();
        this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
    }
    getPoint(e, t) {
        let n = t || new X, i = Math.PI * 2, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON;
        for(; r < 0;)r += i;
        for(; r > i;)r -= i;
        r < Number.EPSILON && (o ? r = 0 : r = i), this.aClockwise === !0 && !o && (r === i ? r = -i : r = r - i);
        let a = this.aStartAngle + e * r, l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
        if (this.aRotation !== 0) {
            let h = Math.cos(this.aRotation), u = Math.sin(this.aRotation), d = l - this.aX, f = c - this.aY;
            l = d * h - f * u + this.aX, c = d * u + f * h + this.aY;
        }
        return n.set(l, c);
    }
    copy(e) {
        return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
};
Ur.prototype.isEllipseCurve = !0;
var Ma = class extends Ur {
    constructor(e, t, n, i, r, o){
        super(e, t, n, n, i, r, o);
        this.type = "ArcCurve";
    }
};
Ma.prototype.isArcCurve = !0;
function ba() {
    let s = 0, e = 0, t = 0, n = 0;
    function i(r, o, a, l) {
        s = r, e = a, t = -3 * r + 3 * o - 2 * a - l, n = 2 * r - 2 * o + a + l;
    }
    return {
        initCatmullRom: function(r, o, a, l, c) {
            i(o, a, c * (a - r), c * (l - o));
        },
        initNonuniformCatmullRom: function(r, o, a, l, c, h, u) {
            let d = (o - r) / c - (a - r) / (c + h) + (a - o) / h, f = (a - o) / h - (l - o) / (h + u) + (l - a) / u;
            d *= h, f *= h, i(o, a, d, f);
        },
        calc: function(r) {
            let o = r * r, a = o * r;
            return s + e * r + t * o + n * a;
        }
    };
}
var Ms = new M, Yo = new ba, Zo = new ba, $o = new ba, wa = class extends Ct {
    constructor(e = [], t = !1, n = "centripetal", i = .5){
        super();
        this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = n, this.tension = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.points, r = i.length, o = (r - (this.closed ? 0 : 1)) * e, a = Math.floor(o), l = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / r) + 1) * r : l === 0 && a === r - 1 && (a = r - 2, l = 1);
        let c, h;
        this.closed || a > 0 ? c = i[(a - 1) % r] : (Ms.subVectors(i[0], i[1]).add(i[0]), c = Ms);
        let u = i[a % r], d = i[(a + 1) % r];
        if (this.closed || a + 2 < r ? h = i[(a + 2) % r] : (Ms.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), h = Ms), this.curveType === "centripetal" || this.curveType === "chordal") {
            let f = this.curveType === "chordal" ? .5 : .25, m = Math.pow(c.distanceToSquared(u), f), x = Math.pow(u.distanceToSquared(d), f), v = Math.pow(d.distanceToSquared(h), f);
            x < 1e-4 && (x = 1), m < 1e-4 && (m = x), v < 1e-4 && (v = x), Yo.initNonuniformCatmullRom(c.x, u.x, d.x, h.x, m, x, v), Zo.initNonuniformCatmullRom(c.y, u.y, d.y, h.y, m, x, v), $o.initNonuniformCatmullRom(c.z, u.z, d.z, h.z, m, x, v);
        } else this.curveType === "catmullrom" && (Yo.initCatmullRom(c.x, u.x, d.x, h.x, this.tension), Zo.initCatmullRom(c.y, u.y, d.y, h.y, this.tension), $o.initCatmullRom(c.z, u.z, d.z, h.z, this.tension));
        return n.set(Yo.calc(l), Zo.calc(l), $o.calc(l)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new M().fromArray(i));
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
};
wa.prototype.isCatmullRomCurve3 = !0;
function pc(s, e, t, n, i) {
    let r = (n - e) * .5, o = (i - t) * .5, a = s * s, l = s * a;
    return (2 * t - 2 * n + r + o) * l + (-3 * t + 3 * n - 2 * r - o) * a + r * s + t;
}
function Ix(s, e) {
    let t = 1 - s;
    return t * t * e;
}
function Dx(s, e) {
    return 2 * (1 - s) * s * e;
}
function Fx(s, e) {
    return s * s * e;
}
function ar(s, e, t, n) {
    return Ix(s, e) + Dx(s, t) + Fx(s, n);
}
function Nx(s, e) {
    let t = 1 - s;
    return t * t * t * e;
}
function Bx(s, e) {
    let t = 1 - s;
    return 3 * t * t * s * e;
}
function zx(s, e) {
    return 3 * (1 - s) * s * s * e;
}
function Ux(s, e) {
    return s * s * s * e;
}
function lr(s, e, t, n, i) {
    return Nx(s, e) + Bx(s, t) + zx(s, n) + Ux(s, i);
}
var lo = class extends Ct {
    constructor(e = new X, t = new X, n = new X, i = new X){
        super();
        this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
lo.prototype.isCubicBezierCurve = !0;
var Sa = class extends Ct {
    constructor(e = new M, t = new M, n = new M, i = new M){
        super();
        this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y), lr(e, i.z, r.z, o.z, a.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
Sa.prototype.isCubicBezierCurve3 = !0;
var Or = class extends Ct {
    constructor(e = new X, t = new X){
        super();
        this.type = "LineCurve", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new X) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t) {
        let n = t || new X;
        return n.copy(this.v2).sub(this.v1).normalize(), n;
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
Or.prototype.isLineCurve = !0;
var Eh = class extends Ct {
    constructor(e = new M, t = new M){
        super();
        this.type = "LineCurve3", this.isLineCurve3 = !0, this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new M) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, co = class extends Ct {
    constructor(e = new X, t = new X, n = new X){
        super();
        this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
co.prototype.isQuadraticBezierCurve = !0;
var ho = class extends Ct {
    constructor(e = new M, t = new M, n = new M){
        super();
        this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y), ar(e, i.z, r.z, o.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
ho.prototype.isQuadraticBezierCurve3 = !0;
var uo = class extends Ct {
    constructor(e = []){
        super();
        this.type = "SplineCurve", this.points = e;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), a = r - o, l = i[o === 0 ? o : o - 1], c = i[o], h = i[o > i.length - 2 ? i.length - 1 : o + 1], u = i[o > i.length - 3 ? i.length - 1 : o + 2];
        return n.set(pc(a, l.x, c.x, h.x, u.x), pc(a, l.y, c.y, h.y, u.y)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new X().fromArray(i));
        }
        return this;
    }
};
uo.prototype.isSplineCurve = !0;
var Ta = Object.freeze({
    __proto__: null,
    ArcCurve: Ma,
    CatmullRomCurve3: wa,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    EllipseCurve: Ur,
    LineCurve: Or,
    LineCurve3: Eh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    SplineCurve: uo
}), Ah = class extends Ct {
    constructor(){
        super();
        this.type = "CurvePath", this.curves = [], this.autoClose = !1;
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        let e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new Or(t, e));
    }
    getPoint(e, t) {
        let n = e * this.getLength(), i = this.getCurveLengths(), r = 0;
        for(; r < i.length;){
            if (i[r] >= n) {
                let o = i[r] - n, a = this.curves[r], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                return a.getPointAt(c, t);
            }
            r++;
        }
        return null;
    }
    getLength() {
        let e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
    }
    getCurveLengths() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        let e = [], t = 0;
        for(let n = 0, i = this.curves.length; n < i; n++)t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e;
    }
    getSpacedPoints(e = 40) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        let t = [], n;
        for(let i = 0, r = this.curves; i < r.length; i++){
            let o = r[i], a = o && o.isEllipseCurve ? e * 2 : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
            for(let c = 0; c < l.length; c++){
                let h = l[c];
                n && n.equals(h) || (t.push(h), n = h);
            }
        }
        return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
    }
    copy(e) {
        super.copy(e), this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(i.clone());
        }
        return this.autoClose = e.autoClose, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.autoClose = this.autoClose, e.curves = [];
        for(let t = 0, n = this.curves.length; t < n; t++){
            let i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(new Ta[i.type]().fromJSON(i));
        }
        return this;
    }
}, gr = class extends Ah {
    constructor(e){
        super();
        this.type = "Path", this.currentPoint = new X, e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for(let t = 1, n = e.length; t < n; t++)this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        let n = new Or(this.currentPoint.clone(), new X(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        let r = new co(this.currentPoint.clone(), new X(e, t), new X(n, i));
        return this.curves.push(r), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        let a = new lo(this.currentPoint.clone(), new X(e, t), new X(n, i), new X(r, o));
        return this.curves.push(a), this.currentPoint.set(r, o), this;
    }
    splineThru(e) {
        let t = [
            this.currentPoint.clone()
        ].concat(e), n = new uo(t);
        return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this;
    }
    arc(e, t, n, i, r, o) {
        let a = this.currentPoint.x, l = this.currentPoint.y;
        return this.absarc(e + a, t + l, n, i, r, o), this;
    }
    absarc(e, t, n, i, r, o) {
        return this.absellipse(e, t, n, n, i, r, o), this;
    }
    ellipse(e, t, n, i, r, o, a, l) {
        let c = this.currentPoint.x, h = this.currentPoint.y;
        return this.absellipse(e + c, t + h, n, i, r, o, a, l), this;
    }
    absellipse(e, t, n, i, r, o, a, l) {
        let c = new Ur(e, t, n, i, r, o, a, l);
        if (this.curves.length > 0) {
            let u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(c);
        let h = c.getPoint(1);
        return this.currentPoint.copy(h), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.currentPoint = this.currentPoint.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
    }
}, Xt = class extends gr {
    constructor(e){
        super(e);
        this.uuid = Et(), this.type = "Shape", this.holes = [];
    }
    getPointsHoles(e) {
        let t = [];
        for(let n = 0, i = this.holes.length; n < i; n++)t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        };
    }
    copy(e) {
        super.copy(e), this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.uuid = this.uuid, e.holes = [];
        for(let t = 0, n = this.holes.length; t < n; t++){
            let i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(new gr().fromJSON(i));
        }
        return this;
    }
}, Ox = {
    triangulate: function(s, e, t = 2) {
        let n = e && e.length, i = n ? e[0] * t : s.length, r = Ch(s, 0, i, t, !0), o = [];
        if (!r || r.next === r.prev) return o;
        let a, l, c, h, u, d, f;
        if (n && (r = Wx(s, e, r, t)), s.length > 80 * t) {
            a = c = s[0], l = h = s[1];
            for(let m = t; m < i; m += t)u = s[m], d = s[m + 1], u < a && (a = u), d < l && (l = d), u > c && (c = u), d > h && (h = d);
            f = Math.max(c - a, h - l), f = f !== 0 ? 1 / f : 0;
        }
        return xr(r, o, t, a, l, f), o;
    }
};
function Ch(s, e, t, n, i) {
    let r, o;
    if (i === ty(s, e, t, n) > 0) for(r = e; r < t; r += n)o = mc(r, s[r], s[r + 1], o);
    else for(r = t - n; r >= e; r -= n)o = mc(r, s[r], s[r + 1], o);
    return o && fo(o, o.next) && (vr(o), o = o.next), o;
}
function Tn(s, e) {
    if (!s) return s;
    e || (e = s);
    let t = s, n;
    do if (n = !1, !t.steiner && (fo(t, t.next) || $e(t.prev, t, t.next) === 0)) {
        if (vr(t), t = e = t.prev, t === t.next) break;
        n = !0;
    } else t = t.next;
    while (n || t !== e)
    return e;
}
function xr(s, e, t, n, i, r, o) {
    if (!s) return;
    !o && r && Zx(s, n, i, r);
    let a = s, l, c;
    for(; s.prev !== s.next;){
        if (l = s.prev, c = s.next, r ? kx(s, n, i, r) : Hx(s)) {
            e.push(l.i / t), e.push(s.i / t), e.push(c.i / t), vr(s), s = c.next, a = c.next;
            continue;
        }
        if (s = c, s === a) {
            o ? o === 1 ? (s = Gx(Tn(s), e, t), xr(s, e, t, n, i, r, 2)) : o === 2 && Vx(s, e, t, n, i, r) : xr(Tn(s), e, t, n, i, r, 1);
            break;
        }
    }
}
function Hx(s) {
    let e = s.prev, t = s, n = s.next;
    if ($e(e, t, n) >= 0) return !1;
    let i = s.next.next;
    for(; i !== s.prev;){
        if (Si(e.x, e.y, t.x, t.y, n.x, n.y, i.x, i.y) && $e(i.prev, i, i.next) >= 0) return !1;
        i = i.next;
    }
    return !0;
}
function kx(s, e, t, n) {
    let i = s.prev, r = s, o = s.next;
    if ($e(i, r, o) >= 0) return !1;
    let a = i.x < r.x ? i.x < o.x ? i.x : o.x : r.x < o.x ? r.x : o.x, l = i.y < r.y ? i.y < o.y ? i.y : o.y : r.y < o.y ? r.y : o.y, c = i.x > r.x ? i.x > o.x ? i.x : o.x : r.x > o.x ? r.x : o.x, h = i.y > r.y ? i.y > o.y ? i.y : o.y : r.y > o.y ? r.y : o.y, u = oa(a, l, e, t, n), d = oa(c, h, e, t, n), f = s.prevZ, m = s.nextZ;
    for(; f && f.z >= u && m && m.z <= d;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0 || (f = f.prevZ, m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0)) return !1;
        m = m.nextZ;
    }
    for(; f && f.z >= u;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0) return !1;
        f = f.prevZ;
    }
    for(; m && m.z <= d;){
        if (m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0) return !1;
        m = m.nextZ;
    }
    return !0;
}
function Gx(s, e, t) {
    let n = s;
    do {
        let i = n.prev, r = n.next.next;
        !fo(i, r) && Lh(i, n, n.next, r) && yr(i, r) && yr(r, i) && (e.push(i.i / t), e.push(n.i / t), e.push(r.i / t), vr(n), vr(n.next), n = s = r), n = n.next;
    }while (n !== s)
    return Tn(n);
}
function Vx(s, e, t, n, i, r) {
    let o = s;
    do {
        let a = o.next.next;
        for(; a !== o.prev;){
            if (o.i !== a.i && Qx(o, a)) {
                let l = Rh(o, a);
                o = Tn(o, o.next), l = Tn(l, l.next), xr(o, e, t, n, i, r), xr(l, e, t, n, i, r);
                return;
            }
            a = a.next;
        }
        o = o.next;
    }while (o !== s)
}
function Wx(s, e, t, n) {
    let i = [], r, o, a, l, c;
    for(r = 0, o = e.length; r < o; r++)a = e[r] * n, l = r < o - 1 ? e[r + 1] * n : s.length, c = Ch(s, a, l, n, !1), c === c.next && (c.steiner = !0), i.push(jx(c));
    for(i.sort(qx), r = 0; r < i.length; r++)Xx(i[r], t), t = Tn(t, t.next);
    return t;
}
function qx(s, e) {
    return s.x - e.x;
}
function Xx(s, e) {
    if (e = Jx(s, e), e) {
        let t = Rh(e, s);
        Tn(e, e.next), Tn(t, t.next);
    }
}
function Jx(s, e) {
    let t = e, n = s.x, i = s.y, r = -1 / 0, o;
    do {
        if (i <= t.y && i >= t.next.y && t.next.y !== t.y) {
            let d = t.x + (i - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
            if (d <= n && d > r) {
                if (r = d, d === n) {
                    if (i === t.y) return t;
                    if (i === t.next.y) return t.next;
                }
                o = t.x < t.next.x ? t : t.next;
            }
        }
        t = t.next;
    }while (t !== e)
    if (!o) return null;
    if (n === r) return o;
    let a = o, l = o.x, c = o.y, h = 1 / 0, u;
    t = o;
    do n >= t.x && t.x >= l && n !== t.x && Si(i < c ? n : r, i, l, c, i < c ? r : n, i, t.x, t.y) && (u = Math.abs(i - t.y) / (n - t.x), yr(t, s) && (u < h || u === h && (t.x > o.x || t.x === o.x && Yx(o, t))) && (o = t, h = u)), t = t.next;
    while (t !== a)
    return o;
}
function Yx(s, e) {
    return $e(s.prev, s, e.prev) < 0 && $e(e.next, s, s.next) < 0;
}
function Zx(s, e, t, n) {
    let i = s;
    do i.z === null && (i.z = oa(i.x, i.y, e, t, n)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
    while (i !== s)
    i.prevZ.nextZ = null, i.prevZ = null, $x(i);
}
function $x(s) {
    let e, t, n, i, r, o, a, l, c = 1;
    do {
        for(t = s, s = null, r = null, o = 0; t;){
            for(o++, n = t, a = 0, e = 0; e < c && (a++, n = n.nextZ, !!n); e++);
            for(l = c; a > 0 || l > 0 && n;)a !== 0 && (l === 0 || !n || t.z <= n.z) ? (i = t, t = t.nextZ, a--) : (i = n, n = n.nextZ, l--), r ? r.nextZ = i : s = i, i.prevZ = r, r = i;
            t = n;
        }
        r.nextZ = null, c *= 2;
    }while (o > 1)
    return s;
}
function oa(s, e, t, n, i) {
    return s = 32767 * (s - t) * i, e = 32767 * (e - n) * i, s = (s | s << 8) & 16711935, s = (s | s << 4) & 252645135, s = (s | s << 2) & 858993459, s = (s | s << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, s | e << 1;
}
function jx(s) {
    let e = s, t = s;
    do (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
    while (e !== s)
    return t;
}
function Si(s, e, t, n, i, r, o, a) {
    return (i - o) * (e - a) - (s - o) * (r - a) >= 0 && (s - o) * (n - a) - (t - o) * (e - a) >= 0 && (t - o) * (r - a) - (i - o) * (n - a) >= 0;
}
function Qx(s, e) {
    return s.next.i !== e.i && s.prev.i !== e.i && !Kx(s, e) && (yr(s, e) && yr(e, s) && ey(s, e) && ($e(s.prev, s, e.prev) || $e(s, e.prev, e)) || fo(s, e) && $e(s.prev, s, s.next) > 0 && $e(e.prev, e, e.next) > 0);
}
function $e(s, e, t) {
    return (e.y - s.y) * (t.x - e.x) - (e.x - s.x) * (t.y - e.y);
}
function fo(s, e) {
    return s.x === e.x && s.y === e.y;
}
function Lh(s, e, t, n) {
    let i = ws($e(s, e, t)), r = ws($e(s, e, n)), o = ws($e(t, n, s)), a = ws($e(t, n, e));
    return !!(i !== r && o !== a || i === 0 && bs(s, t, e) || r === 0 && bs(s, n, e) || o === 0 && bs(t, s, n) || a === 0 && bs(t, e, n));
}
function bs(s, e, t) {
    return e.x <= Math.max(s.x, t.x) && e.x >= Math.min(s.x, t.x) && e.y <= Math.max(s.y, t.y) && e.y >= Math.min(s.y, t.y);
}
function ws(s) {
    return s > 0 ? 1 : s < 0 ? -1 : 0;
}
function Kx(s, e) {
    let t = s;
    do {
        if (t.i !== s.i && t.next.i !== s.i && t.i !== e.i && t.next.i !== e.i && Lh(t, t.next, s, e)) return !0;
        t = t.next;
    }while (t !== s)
    return !1;
}
function yr(s, e) {
    return $e(s.prev, s, s.next) < 0 ? $e(s, e, s.next) >= 0 && $e(s, s.prev, e) >= 0 : $e(s, e, s.prev) < 0 || $e(s, s.next, e) < 0;
}
function ey(s, e) {
    let t = s, n = !1, i = (s.x + e.x) / 2, r = (s.y + e.y) / 2;
    do t.y > r != t.next.y > r && t.next.y !== t.y && i < (t.next.x - t.x) * (r - t.y) / (t.next.y - t.y) + t.x && (n = !n), t = t.next;
    while (t !== s)
    return n;
}
function Rh(s, e) {
    let t = new aa(s.i, s.x, s.y), n = new aa(e.i, e.x, e.y), i = s.next, r = e.prev;
    return s.next = e, e.prev = s, t.next = i, i.prev = t, n.next = t, t.prev = n, r.next = n, n.prev = r, n;
}
function mc(s, e, t, n) {
    let i = new aa(s, e, t);
    return n ? (i.next = n.next, i.prev = n, n.next.prev = i, n.next = i) : (i.prev = i, i.next = i), i;
}
function vr(s) {
    s.next.prev = s.prev, s.prev.next = s.next, s.prevZ && (s.prevZ.nextZ = s.nextZ), s.nextZ && (s.nextZ.prevZ = s.prevZ);
}
function aa(s, e, t) {
    this.i = s, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function ty(s, e, t, n) {
    let i = 0;
    for(let r = e, o = t - n; r < t; r += n)i += (s[o] - s[r]) * (s[r + 1] + s[o + 1]), o = r;
    return i;
}
var Jt = class {
    static area(e) {
        let t = e.length, n = 0;
        for(let i = t - 1, r = 0; r < t; i = r++)n += e[i].x * e[r].y - e[r].x * e[i].y;
        return n * .5;
    }
    static isClockWise(e) {
        return Jt.area(e) < 0;
    }
    static triangulateShape(e, t) {
        let n = [], i = [], r = [];
        gc(e), xc(n, e);
        let o = e.length;
        t.forEach(gc);
        for(let l = 0; l < t.length; l++)i.push(o), o += t[l].length, xc(n, t[l]);
        let a = Ox.triangulate(n, i);
        for(let l1 = 0; l1 < a.length; l1 += 3)r.push(a.slice(l1, l1 + 3));
        return r;
    }
};
function gc(s) {
    let e = s.length;
    e > 2 && s[e - 1].equals(s[0]) && s.pop();
}
function xc(s, e) {
    for(let t = 0; t < e.length; t++)s.push(e[t].x), s.push(e[t].y);
}
var ln = class extends _e {
    constructor(e = new Xt([
        new X(.5, .5),
        new X(-.5, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = {}){
        super();
        this.type = "ExtrudeGeometry", this.parameters = {
            shapes: e,
            options: t
        }, e = Array.isArray(e) ? e : [
            e
        ];
        let n = this, i = [], r = [];
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a];
            o(c);
        }
        this.setAttribute("position", new de(i, 3)), this.setAttribute("uv", new de(r, 2)), this.computeVertexNormals();
        function o(a) {
            let l = [], c = t.curveSegments !== void 0 ? t.curveSegments : 12, h = t.steps !== void 0 ? t.steps : 1, u = t.depth !== void 0 ? t.depth : 1, d = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, f = t.bevelThickness !== void 0 ? t.bevelThickness : .2, m = t.bevelSize !== void 0 ? t.bevelSize : f - .1, x = t.bevelOffset !== void 0 ? t.bevelOffset : 0, v = t.bevelSegments !== void 0 ? t.bevelSegments : 3, g = t.extrudePath, p = t.UVGenerator !== void 0 ? t.UVGenerator : ny;
            t.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), u = t.amount);
            let _, y = !1, b, A, L, I;
            g && (_ = g.getSpacedPoints(h), y = !0, d = !1, b = g.computeFrenetFrames(h, !1), A = new M, L = new M, I = new M), d || (v = 0, f = 0, m = 0, x = 0);
            let k = a.extractPoints(c), B = k.shape, P = k.holes;
            if (!Jt.isClockWise(B)) {
                B = B.reverse();
                for(let G = 0, j = P.length; G < j; G++){
                    let K = P[G];
                    Jt.isClockWise(K) && (P[G] = K.reverse());
                }
            }
            let E = Jt.triangulateShape(B, P), D = B;
            for(let G1 = 0, j1 = P.length; G1 < j1; G1++){
                let K1 = P[G1];
                B = B.concat(K1);
            }
            function U(G, j, K) {
                return j || console.error("THREE.ExtrudeGeometry: vec does not exist"), j.clone().multiplyScalar(K).add(G);
            }
            let F = B.length, O = E.length;
            function ne(G, j, K) {
                let ue, se, Se, Te = G.x - j.x, Pe = G.y - j.y, Ye = K.x - G.x, C = K.y - G.y, T = Te * Te + Pe * Pe, J = Te * C - Pe * Ye;
                if (Math.abs(J) > Number.EPSILON) {
                    let $ = Math.sqrt(T), re = Math.sqrt(Ye * Ye + C * C), Z = j.x - Pe / $, Me = j.y + Te / $, ve = K.x - C / re, te = K.y + Ye / re, R = ((ve - Z) * C - (te - Me) * Ye) / (Te * C - Pe * Ye);
                    ue = Z + Te * R - G.x, se = Me + Pe * R - G.y;
                    let ee = ue * ue + se * se;
                    if (ee <= 2) return new X(ue, se);
                    Se = Math.sqrt(ee / 2);
                } else {
                    let $1 = !1;
                    Te > Number.EPSILON ? Ye > Number.EPSILON && ($1 = !0) : Te < -Number.EPSILON ? Ye < -Number.EPSILON && ($1 = !0) : Math.sign(Pe) === Math.sign(C) && ($1 = !0), $1 ? (ue = -Pe, se = Te, Se = Math.sqrt(T)) : (ue = Te, se = Pe, Se = Math.sqrt(T / 2));
                }
                return new X(ue / Se, se / Se);
            }
            let ce = [];
            for(let G2 = 0, j2 = D.length, K2 = j2 - 1, ue = G2 + 1; G2 < j2; G2++, K2++, ue++)K2 === j2 && (K2 = 0), ue === j2 && (ue = 0), ce[G2] = ne(D[G2], D[K2], D[ue]);
            let V = [], W, he = ce.concat();
            for(let G3 = 0, j3 = P.length; G3 < j3; G3++){
                let K3 = P[G3];
                W = [];
                for(let ue1 = 0, se = K3.length, Se = se - 1, Te = ue1 + 1; ue1 < se; ue1++, Se++, Te++)Se === se && (Se = 0), Te === se && (Te = 0), W[ue1] = ne(K3[ue1], K3[Se], K3[Te]);
                V.push(W), he = he.concat(W);
            }
            for(let G4 = 0; G4 < v; G4++){
                let j4 = G4 / v, K4 = f * Math.cos(j4 * Math.PI / 2), ue2 = m * Math.sin(j4 * Math.PI / 2) + x;
                for(let se1 = 0, Se1 = D.length; se1 < Se1; se1++){
                    let Te1 = U(D[se1], ce[se1], ue2);
                    Ce(Te1.x, Te1.y, -K4);
                }
                for(let se2 = 0, Se2 = P.length; se2 < Se2; se2++){
                    let Te2 = P[se2];
                    W = V[se2];
                    for(let Pe = 0, Ye = Te2.length; Pe < Ye; Pe++){
                        let C = U(Te2[Pe], W[Pe], ue2);
                        Ce(C.x, C.y, -K4);
                    }
                }
            }
            let le = m + x;
            for(let G5 = 0; G5 < F; G5++){
                let j5 = d ? U(B[G5], he[G5], le) : B[G5];
                y ? (L.copy(b.normals[0]).multiplyScalar(j5.x), A.copy(b.binormals[0]).multiplyScalar(j5.y), I.copy(_[0]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(j5.x, j5.y, 0);
            }
            for(let G6 = 1; G6 <= h; G6++)for(let j6 = 0; j6 < F; j6++){
                let K5 = d ? U(B[j6], he[j6], le) : B[j6];
                y ? (L.copy(b.normals[G6]).multiplyScalar(K5.x), A.copy(b.binormals[G6]).multiplyScalar(K5.y), I.copy(_[G6]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(K5.x, K5.y, u / h * G6);
            }
            for(let G7 = v - 1; G7 >= 0; G7--){
                let j7 = G7 / v, K6 = f * Math.cos(j7 * Math.PI / 2), ue3 = m * Math.sin(j7 * Math.PI / 2) + x;
                for(let se3 = 0, Se3 = D.length; se3 < Se3; se3++){
                    let Te3 = U(D[se3], ce[se3], ue3);
                    Ce(Te3.x, Te3.y, u + K6);
                }
                for(let se4 = 0, Se4 = P.length; se4 < Se4; se4++){
                    let Te4 = P[se4];
                    W = V[se4];
                    for(let Pe1 = 0, Ye1 = Te4.length; Pe1 < Ye1; Pe1++){
                        let C1 = U(Te4[Pe1], W[Pe1], ue3);
                        y ? Ce(C1.x, C1.y + _[h - 1].y, _[h - 1].x + K6) : Ce(C1.x, C1.y, u + K6);
                    }
                }
            }
            fe(), Be();
            function fe() {
                let G = i.length / 3;
                if (d) {
                    let j = 0, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[2] + K, se[1] + K, se[0] + K);
                    }
                    j = h + v * 2, K = F * j;
                    for(let ue1 = 0; ue1 < O; ue1++){
                        let se1 = E[ue1];
                        ye(se1[0] + K, se1[1] + K, se1[2] + K);
                    }
                } else {
                    for(let j1 = 0; j1 < O; j1++){
                        let K1 = E[j1];
                        ye(K1[2], K1[1], K1[0]);
                    }
                    for(let j2 = 0; j2 < O; j2++){
                        let K2 = E[j2];
                        ye(K2[0] + F * h, K2[1] + F * h, K2[2] + F * h);
                    }
                }
                n.addGroup(G, i.length / 3 - G, 0);
            }
            function Be() {
                let G = i.length / 3, j = 0;
                Y(D, j), j += D.length;
                for(let K = 0, ue = P.length; K < ue; K++){
                    let se = P[K];
                    Y(se, j), j += se.length;
                }
                n.addGroup(G, i.length / 3 - G, 1);
            }
            function Y(G, j) {
                let K = G.length;
                for(; --K >= 0;){
                    let ue = K, se = K - 1;
                    se < 0 && (se = G.length - 1);
                    for(let Se = 0, Te = h + v * 2; Se < Te; Se++){
                        let Pe = F * Se, Ye = F * (Se + 1), C = j + ue + Pe, T = j + se + Pe, J = j + se + Ye, $ = j + ue + Ye;
                        ge(C, T, J, $);
                    }
                }
            }
            function Ce(G, j, K) {
                l.push(G), l.push(j), l.push(K);
            }
            function ye(G, j, K) {
                xe(G), xe(j), xe(K);
                let ue = i.length / 3, se = p.generateTopUV(n, i, ue - 3, ue - 2, ue - 1);
                Oe(se[0]), Oe(se[1]), Oe(se[2]);
            }
            function ge(G, j, K, ue) {
                xe(G), xe(j), xe(ue), xe(j), xe(K), xe(ue);
                let se = i.length / 3, Se = p.generateSideWallUV(n, i, se - 6, se - 3, se - 2, se - 1);
                Oe(Se[0]), Oe(Se[1]), Oe(Se[3]), Oe(Se[1]), Oe(Se[2]), Oe(Se[3]);
            }
            function xe(G) {
                i.push(l[G * 3 + 0]), i.push(l[G * 3 + 1]), i.push(l[G * 3 + 2]);
            }
            function Oe(G) {
                r.push(G.x), r.push(G.y);
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes, n = this.parameters.options;
        return iy(t, n, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let r = 0, o = e.shapes.length; r < o; r++){
            let a = t[e.shapes[r]];
            n.push(a);
        }
        let i = e.options.extrudePath;
        return i !== void 0 && (e.options.extrudePath = new Ta[i.type]().fromJSON(i)), new ln(n, e.options);
    }
}, ny = {
    generateTopUV: function(s, e, t, n, i) {
        let r = e[t * 3], o = e[t * 3 + 1], a = e[n * 3], l = e[n * 3 + 1], c = e[i * 3], h = e[i * 3 + 1];
        return [
            new X(r, o),
            new X(a, l),
            new X(c, h)
        ];
    },
    generateSideWallUV: function(s, e, t, n, i, r) {
        let o = e[t * 3], a = e[t * 3 + 1], l = e[t * 3 + 2], c = e[n * 3], h = e[n * 3 + 1], u = e[n * 3 + 2], d = e[i * 3], f = e[i * 3 + 1], m = e[i * 3 + 2], x = e[r * 3], v = e[r * 3 + 1], g = e[r * 3 + 2];
        return Math.abs(a - h) < Math.abs(o - c) ? [
            new X(o, 1 - l),
            new X(c, 1 - u),
            new X(d, 1 - m),
            new X(x, 1 - g)
        ] : [
            new X(a, 1 - l),
            new X(h, 1 - u),
            new X(f, 1 - m),
            new X(v, 1 - g)
        ];
    }
};
function iy(s, e, t) {
    if (t.shapes = [], Array.isArray(s)) for(let n = 0, i = s.length; n < i; n++){
        let r = s[n];
        t.shapes.push(r.uuid);
    }
    else t.shapes.push(s.uuid);
    return e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
var _r = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = [
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            0,
            0,
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            n,
            0,
            -1,
            n,
            0,
            1,
            -n,
            0,
            -1,
            -n,
            0,
            1
        ], r = [
            0,
            11,
            5,
            0,
            5,
            1,
            0,
            1,
            7,
            0,
            7,
            10,
            0,
            10,
            11,
            1,
            5,
            9,
            5,
            11,
            4,
            11,
            10,
            2,
            10,
            7,
            6,
            7,
            1,
            8,
            3,
            9,
            4,
            3,
            4,
            2,
            3,
            2,
            6,
            3,
            6,
            8,
            3,
            8,
            9,
            4,
            9,
            5,
            2,
            4,
            11,
            6,
            2,
            10,
            8,
            6,
            7,
            9,
            8,
            1
        ];
        super(i, r, e, t);
        this.type = "IcosahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new _r(e.radius, e.detail);
    }
}, Mr = class extends _e {
    constructor(e = [
        new X(0, .5),
        new X(.5, 0),
        new X(0, -.5)
    ], t = 12, n = 0, i = Math.PI * 2){
        super();
        this.type = "LatheGeometry", this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: i
        }, t = Math.floor(t), i = mt(i, 0, Math.PI * 2);
        let r = [], o = [], a = [], l = [], c = [], h = 1 / t, u = new M, d = new X, f = new M, m = new M, x = new M, v = 0, g = 0;
        for(let p = 0; p <= e.length - 1; p++)switch(p){
            case 0:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, x.copy(f), f.normalize(), l.push(f.x, f.y, f.z);
                break;
            case e.length - 1:
                l.push(x.x, x.y, x.z);
                break;
            default:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, m.copy(f), f.x += x.x, f.y += x.y, f.z += x.z, f.normalize(), l.push(f.x, f.y, f.z), x.copy(m);
        }
        for(let p1 = 0; p1 <= t; p1++){
            let _ = n + p1 * h * i, y = Math.sin(_), b = Math.cos(_);
            for(let A = 0; A <= e.length - 1; A++){
                u.x = e[A].x * y, u.y = e[A].y, u.z = e[A].x * b, o.push(u.x, u.y, u.z), d.x = p1 / t, d.y = A / (e.length - 1), a.push(d.x, d.y);
                let L = l[3 * A + 0] * y, I = l[3 * A + 1], k = l[3 * A + 0] * b;
                c.push(L, I, k);
            }
        }
        for(let p2 = 0; p2 < t; p2++)for(let _1 = 0; _1 < e.length - 1; _1++){
            let y1 = _1 + p2 * e.length, b1 = y1, A1 = y1 + e.length, L1 = y1 + e.length + 1, I1 = y1 + 1;
            r.push(b1, A1, I1), r.push(A1, L1, I1);
        }
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("uv", new de(a, 2)), this.setAttribute("normal", new de(c, 3));
    }
    static fromJSON(e) {
        return new Mr(e.points, e.segments, e.phiStart, e.phiLength);
    }
}, Ii = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1
        ], i = [
            0,
            2,
            4,
            0,
            4,
            3,
            0,
            3,
            5,
            0,
            5,
            2,
            1,
            2,
            5,
            1,
            5,
            3,
            1,
            3,
            4,
            1,
            4,
            2
        ];
        super(n, i, e, t);
        this.type = "OctahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new Ii(e.radius, e.detail);
    }
}, br = class extends _e {
    constructor(e = .5, t = 1, n = 8, i = 1, r = 0, o = Math.PI * 2){
        super();
        this.type = "RingGeometry", this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: o
        }, n = Math.max(3, n), i = Math.max(1, i);
        let a = [], l = [], c = [], h = [], u = e, d = (t - e) / i, f = new M, m = new X;
        for(let x = 0; x <= i; x++){
            for(let v = 0; v <= n; v++){
                let g = r + v / n * o;
                f.x = u * Math.cos(g), f.y = u * Math.sin(g), l.push(f.x, f.y, f.z), c.push(0, 0, 1), m.x = (f.x / t + 1) / 2, m.y = (f.y / t + 1) / 2, h.push(m.x, m.y);
            }
            u += d;
        }
        for(let x1 = 0; x1 < i; x1++){
            let v1 = x1 * (n + 1);
            for(let g1 = 0; g1 < n; g1++){
                let p = g1 + v1, _ = p, y = p + n + 1, b = p + n + 2, A = p + 1;
                a.push(_, y, A), a.push(y, b, A);
            }
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
    }
    static fromJSON(e) {
        return new br(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
    }
}, Di = class extends _e {
    constructor(e = new Xt([
        new X(0, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = 12){
        super();
        this.type = "ShapeGeometry", this.parameters = {
            shapes: e,
            curveSegments: t
        };
        let n = [], i = [], r = [], o = [], a = 0, l = 0;
        if (Array.isArray(e) === !1) c(e);
        else for(let h = 0; h < e.length; h++)c(e[h]), this.addGroup(a, l, h), a += l, l = 0;
        this.setIndex(n), this.setAttribute("position", new de(i, 3)), this.setAttribute("normal", new de(r, 3)), this.setAttribute("uv", new de(o, 2));
        function c(h) {
            let u = i.length / 3, d = h.extractPoints(t), f = d.shape, m = d.holes;
            Jt.isClockWise(f) === !1 && (f = f.reverse());
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                Jt.isClockWise(p) === !0 && (m[v] = p.reverse());
            }
            let x = Jt.triangulateShape(f, m);
            for(let v1 = 0, g1 = m.length; v1 < g1; v1++){
                let p1 = m[v1];
                f = f.concat(p1);
            }
            for(let v2 = 0, g2 = f.length; v2 < g2; v2++){
                let p2 = f[v2];
                i.push(p2.x, p2.y, 0), r.push(0, 0, 1), o.push(p2.x, p2.y);
            }
            for(let v3 = 0, g3 = x.length; v3 < g3; v3++){
                let p3 = x[v3], _ = p3[0] + u, y = p3[1] + u, b = p3[2] + u;
                n.push(_, y, b), l += 3;
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes;
        return ry(t, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let i = 0, r = e.shapes.length; i < r; i++){
            let o = t[e.shapes[i]];
            n.push(o);
        }
        return new Di(n, e.curveSegments);
    }
};
function ry(s, e) {
    if (e.shapes = [], Array.isArray(s)) for(let t = 0, n = s.length; t < n; t++){
        let i = s[t];
        e.shapes.push(i.uuid);
    }
    else e.shapes.push(s.uuid);
    return e;
}
var Fi = class extends _e {
    constructor(e = 1, t = 32, n = 16, i = 0, r = Math.PI * 2, o = 0, a = Math.PI){
        super();
        this.type = "SphereGeometry", this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: o,
            thetaLength: a
        }, t = Math.max(3, Math.floor(t)), n = Math.max(2, Math.floor(n));
        let l = Math.min(o + a, Math.PI), c = 0, h = [], u = new M, d = new M, f = [], m = [], x = [], v = [];
        for(let g = 0; g <= n; g++){
            let p = [], _ = g / n, y = 0;
            g == 0 && o == 0 ? y = .5 / t : g == n && l == Math.PI && (y = -.5 / t);
            for(let b = 0; b <= t; b++){
                let A = b / t;
                u.x = -e * Math.cos(i + A * r) * Math.sin(o + _ * a), u.y = e * Math.cos(o + _ * a), u.z = e * Math.sin(i + A * r) * Math.sin(o + _ * a), m.push(u.x, u.y, u.z), d.copy(u).normalize(), x.push(d.x, d.y, d.z), v.push(A + y, 1 - _), p.push(c++);
            }
            h.push(p);
        }
        for(let g1 = 0; g1 < n; g1++)for(let p1 = 0; p1 < t; p1++){
            let _1 = h[g1][p1 + 1], y1 = h[g1][p1], b1 = h[g1 + 1][p1], A1 = h[g1 + 1][p1 + 1];
            (g1 !== 0 || o > 0) && f.push(_1, y1, A1), (g1 !== n - 1 || l < Math.PI) && f.push(y1, b1, A1);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Fi(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
    }
}, wr = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            1,
            -1,
            -1
        ], i = [
            2,
            1,
            0,
            0,
            3,
            2,
            1,
            3,
            0,
            2,
            3,
            1
        ];
        super(n, i, e, t);
        this.type = "TetrahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new wr(e.radius, e.detail);
    }
}, Sr = class extends _e {
    constructor(e = 1, t = .4, n = 8, i = 6, r = Math.PI * 2){
        super();
        this.type = "TorusGeometry", this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        }, n = Math.floor(n), i = Math.floor(i);
        let o = [], a = [], l = [], c = [], h = new M, u = new M, d = new M;
        for(let f = 0; f <= n; f++)for(let m = 0; m <= i; m++){
            let x = m / i * r, v = f / n * Math.PI * 2;
            u.x = (e + t * Math.cos(v)) * Math.cos(x), u.y = (e + t * Math.cos(v)) * Math.sin(x), u.z = t * Math.sin(v), a.push(u.x, u.y, u.z), h.x = e * Math.cos(x), h.y = e * Math.sin(x), d.subVectors(u, h).normalize(), l.push(d.x, d.y, d.z), c.push(m / i), c.push(f / n);
        }
        for(let f1 = 1; f1 <= n; f1++)for(let m1 = 1; m1 <= i; m1++){
            let x1 = (i + 1) * f1 + m1 - 1, v1 = (i + 1) * (f1 - 1) + m1 - 1, g = (i + 1) * (f1 - 1) + m1, p = (i + 1) * f1 + m1;
            o.push(x1, v1, p), o.push(v1, g, p);
        }
        this.setIndex(o), this.setAttribute("position", new de(a, 3)), this.setAttribute("normal", new de(l, 3)), this.setAttribute("uv", new de(c, 2));
    }
    static fromJSON(e) {
        return new Sr(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
    }
}, Tr = class extends _e {
    constructor(e = 1, t = .4, n = 64, i = 8, r = 2, o = 3){
        super();
        this.type = "TorusKnotGeometry", this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: o
        }, n = Math.floor(n), i = Math.floor(i);
        let a = [], l = [], c = [], h = [], u = new M, d = new M, f = new M, m = new M, x = new M, v = new M, g = new M;
        for(let _ = 0; _ <= n; ++_){
            let y = _ / n * r * Math.PI * 2;
            p(y, r, o, e, f), p(y + .01, r, o, e, m), v.subVectors(m, f), g.addVectors(m, f), x.crossVectors(v, g), g.crossVectors(x, v), x.normalize(), g.normalize();
            for(let b = 0; b <= i; ++b){
                let A = b / i * Math.PI * 2, L = -t * Math.cos(A), I = t * Math.sin(A);
                u.x = f.x + (L * g.x + I * x.x), u.y = f.y + (L * g.y + I * x.y), u.z = f.z + (L * g.z + I * x.z), l.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), c.push(d.x, d.y, d.z), h.push(_ / n), h.push(b / i);
            }
        }
        for(let _1 = 1; _1 <= n; _1++)for(let y1 = 1; y1 <= i; y1++){
            let b1 = (i + 1) * (_1 - 1) + (y1 - 1), A1 = (i + 1) * _1 + (y1 - 1), L1 = (i + 1) * _1 + y1, I1 = (i + 1) * (_1 - 1) + y1;
            a.push(b1, A1, I1), a.push(A1, L1, I1);
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
        function p(_, y, b, A, L) {
            let I = Math.cos(_), k = Math.sin(_), B = b / y * _, P = Math.cos(B);
            L.x = A * (2 + P) * .5 * I, L.y = A * (2 + P) * k * .5, L.z = A * Math.sin(B) * .5;
        }
    }
    static fromJSON(e) {
        return new Tr(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
    }
}, Er = class extends _e {
    constructor(e = new ho(new M(-1, -1, 0), new M(-1, 1, 0), new M(1, 1, 0)), t = 64, n = 1, i = 8, r = !1){
        super();
        this.type = "TubeGeometry", this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: i,
            closed: r
        };
        let o = e.computeFrenetFrames(t, r);
        this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
        let a = new M, l = new M, c = new X, h = new M, u = [], d = [], f = [], m = [];
        x(), this.setIndex(m), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function x() {
            for(let _ = 0; _ < t; _++)v(_);
            v(r === !1 ? t : 0), p(), g();
        }
        function v(_) {
            h = e.getPointAt(_ / t, h);
            let y = o.normals[_], b = o.binormals[_];
            for(let A = 0; A <= i; A++){
                let L = A / i * Math.PI * 2, I = Math.sin(L), k = -Math.cos(L);
                l.x = k * y.x + I * b.x, l.y = k * y.y + I * b.y, l.z = k * y.z + I * b.z, l.normalize(), d.push(l.x, l.y, l.z), a.x = h.x + n * l.x, a.y = h.y + n * l.y, a.z = h.z + n * l.z, u.push(a.x, a.y, a.z);
            }
        }
        function g() {
            for(let _ = 1; _ <= t; _++)for(let y = 1; y <= i; y++){
                let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
                m.push(b, A, I), m.push(A, L, I);
            }
        }
        function p() {
            for(let _ = 0; _ <= t; _++)for(let y = 0; y <= i; y++)c.x = _ / t, c.y = y / i, f.push(c.x, c.y);
        }
    }
    toJSON() {
        let e = super.toJSON();
        return e.path = this.parameters.path.toJSON(), e;
    }
    static fromJSON(e) {
        return new Er(new Ta[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
    }
}, Ea = class extends _e {
    constructor(e = null){
        super();
        if (this.type = "WireframeGeometry", this.parameters = {
            geometry: e
        }, e !== null) {
            let t = [], n = new Set, i = new M, r = new M;
            if (e.index !== null) {
                let o = e.attributes.position, a = e.index, l = e.groups;
                l.length === 0 && (l = [
                    {
                        start: 0,
                        count: a.count,
                        materialIndex: 0
                    }
                ]);
                for(let c = 0, h = l.length; c < h; ++c){
                    let u = l[c], d = u.start, f = u.count;
                    for(let m = d, x = d + f; m < x; m += 3)for(let v = 0; v < 3; v++){
                        let g = a.getX(m + v), p = a.getX(m + (v + 1) % 3);
                        i.fromBufferAttribute(o, g), r.fromBufferAttribute(o, p), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                    }
                }
            } else {
                let o1 = e.attributes.position;
                for(let a1 = 0, l1 = o1.count / 3; a1 < l1; a1++)for(let c1 = 0; c1 < 3; c1++){
                    let h1 = 3 * a1 + c1, u1 = 3 * a1 + (c1 + 1) % 3;
                    i.fromBufferAttribute(o1, h1), r.fromBufferAttribute(o1, u1), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                }
            }
            this.setAttribute("position", new de(t, 3));
        }
    }
};
function yc(s, e, t) {
    let n = `${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n, i), !0);
}
var vc = Object.freeze({
    __proto__: null,
    BoxGeometry: wn,
    BoxBufferGeometry: wn,
    CircleGeometry: fr,
    CircleBufferGeometry: fr,
    ConeGeometry: pr,
    ConeBufferGeometry: pr,
    CylinderGeometry: Jn,
    CylinderBufferGeometry: Jn,
    DodecahedronGeometry: mr,
    DodecahedronBufferGeometry: mr,
    EdgesGeometry: _a,
    ExtrudeGeometry: ln,
    ExtrudeBufferGeometry: ln,
    IcosahedronGeometry: _r,
    IcosahedronBufferGeometry: _r,
    LatheGeometry: Mr,
    LatheBufferGeometry: Mr,
    OctahedronGeometry: Ii,
    OctahedronBufferGeometry: Ii,
    PlaneGeometry: Pi,
    PlaneBufferGeometry: Pi,
    PolyhedronGeometry: an,
    PolyhedronBufferGeometry: an,
    RingGeometry: br,
    RingBufferGeometry: br,
    ShapeGeometry: Di,
    ShapeBufferGeometry: Di,
    SphereGeometry: Fi,
    SphereBufferGeometry: Fi,
    TetrahedronGeometry: wr,
    TetrahedronBufferGeometry: wr,
    TorusGeometry: Sr,
    TorusBufferGeometry: Sr,
    TorusKnotGeometry: Tr,
    TorusKnotBufferGeometry: Tr,
    TubeGeometry: Er,
    TubeBufferGeometry: Er,
    WireframeGeometry: Ea
}), Aa = class extends dt {
    constructor(e){
        super();
        this.type = "ShadowMaterial", this.color = new ae(0), this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this;
    }
};
Aa.prototype.isShadowMaterial = !0;
var po = class extends dt {
    constructor(e){
        super();
        this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new ae(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: ""
        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
po.prototype.isMeshStandardMaterial = !0;
var Ca = class extends po {
    constructor(e){
        super();
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new X(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
            get: function() {
                return mt(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
            },
            set: function(t) {
                this.ior = (1 + .4 * t) / (1 - .4 * t);
            }
        }), this.sheenColor = new ae(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 0, this.attenuationColor = new ae(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new ae(1, 1, 1), this.specularColorMap = null, this._sheen = 0, this._clearcoat = 0, this._transmission = 0, this.setValues(e);
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
    }
};
Ca.prototype.isMeshPhysicalMaterial = !0;
var La = class extends dt {
    constructor(e){
        super();
        this.type = "MeshPhongMaterial", this.color = new ae(16777215), this.specular = new ae(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
La.prototype.isMeshPhongMaterial = !0;
var Ra = class extends dt {
    constructor(e){
        super();
        this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.color = new ae(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ra.prototype.isMeshToonMaterial = !0;
var Pa = class extends dt {
    constructor(e){
        super();
        this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
    }
};
Pa.prototype.isMeshNormalMaterial = !0;
var Ia = class extends dt {
    constructor(e){
        super();
        this.type = "MeshLambertMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ia.prototype.isMeshLambertMaterial = !0;
var Da = class extends dt {
    constructor(e){
        super();
        this.defines = {
            MATCAP: ""
        }, this.type = "MeshMatcapMaterial", this.color = new ae(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            MATCAP: ""
        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this;
    }
};
Da.prototype.isMeshMatcapMaterial = !0;
var Fa = class extends ft {
    constructor(e){
        super();
        this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
    }
};
Fa.prototype.isLineDashedMaterial = !0;
var sy = Object.freeze({
    __proto__: null,
    ShadowMaterial: Aa,
    SpriteMaterial: io,
    RawShaderMaterial: Gi,
    ShaderMaterial: sn,
    PointsMaterial: jn,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshPhongMaterial: La,
    MeshToonMaterial: Ra,
    MeshNormalMaterial: Pa,
    MeshLambertMaterial: Ia,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshBasicMaterial: hn,
    MeshMatcapMaterial: Da,
    LineDashedMaterial: Fa,
    LineBasicMaterial: ft,
    Material: dt
}), Ze = {
    arraySlice: function(s, e, t) {
        return Ze.isTypedArray(s) ? new s.constructor(s.subarray(e, t !== void 0 ? t : s.length)) : s.slice(e, t);
    },
    convertArray: function(s, e, t) {
        return !s || !t && s.constructor === e ? s : typeof e.BYTES_PER_ELEMENT == "number" ? new e(s) : Array.prototype.slice.call(s);
    },
    isTypedArray: function(s) {
        return ArrayBuffer.isView(s) && !(s instanceof DataView);
    },
    getKeyframeOrder: function(s) {
        function e(i, r) {
            return s[i] - s[r];
        }
        let t = s.length, n = new Array(t);
        for(let i = 0; i !== t; ++i)n[i] = i;
        return n.sort(e), n;
    },
    sortedArray: function(s, e, t) {
        let n = s.length, i = new s.constructor(n);
        for(let r = 0, o = 0; o !== n; ++r){
            let a = t[r] * e;
            for(let l = 0; l !== e; ++l)i[o++] = s[a + l];
        }
        return i;
    },
    flattenJSON: function(s, e, t, n) {
        let i = 1, r = s[0];
        for(; r !== void 0 && r[n] === void 0;)r = s[i++];
        if (r === void 0) return;
        let o = r[n];
        if (o !== void 0) if (Array.isArray(o)) do o = r[n], o !== void 0 && (e.push(r.time), t.push.apply(t, o)), r = s[i++];
        while (r !== void 0)
        else if (o.toArray !== void 0) do o = r[n], o !== void 0 && (e.push(r.time), o.toArray(t, t.length)), r = s[i++];
        while (r !== void 0)
        else do o = r[n], o !== void 0 && (e.push(r.time), t.push(o)), r = s[i++];
        while (r !== void 0)
    },
    subclip: function(s, e, t, n, i = 30) {
        let r = s.clone();
        r.name = e;
        let o = [];
        for(let l = 0; l < r.tracks.length; ++l){
            let c = r.tracks[l], h = c.getValueSize(), u = [], d = [];
            for(let f = 0; f < c.times.length; ++f){
                let m = c.times[f] * i;
                if (!(m < t || m >= n)) {
                    u.push(c.times[f]);
                    for(let x = 0; x < h; ++x)d.push(c.values[f * h + x]);
                }
            }
            u.length !== 0 && (c.times = Ze.convertArray(u, c.times.constructor), c.values = Ze.convertArray(d, c.values.constructor), o.push(c));
        }
        r.tracks = o;
        let a = 1 / 0;
        for(let l1 = 0; l1 < r.tracks.length; ++l1)a > r.tracks[l1].times[0] && (a = r.tracks[l1].times[0]);
        for(let l2 = 0; l2 < r.tracks.length; ++l2)r.tracks[l2].shift(-1 * a);
        return r.resetDuration(), r;
    },
    makeClipAdditive: function(s, e = 0, t = s, n = 30) {
        n <= 0 && (n = 30);
        let i = t.tracks.length, r = e / n;
        for(let o = 0; o < i; ++o){
            let a = t.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            let c = s.tracks.find(function(g) {
                return g.name === a.name && g.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let h = 0, u = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = u / 3);
            let d = 0, f = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (d = f / 3);
            let m = a.times.length - 1, x;
            if (r <= a.times[0]) {
                let g = h, p = u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else if (r >= a.times[m]) {
                let g1 = m * u + h, p1 = g1 + u - h;
                x = Ze.arraySlice(a.values, g1, p1);
            } else {
                let g2 = a.createInterpolant(), p2 = h, _ = u - h;
                g2.evaluate(r), x = Ze.arraySlice(g2.resultBuffer, p2, _);
            }
            l === "quaternion" && new gt().fromArray(x).normalize().conjugate().toArray(x);
            let v = c.times.length;
            for(let g3 = 0; g3 < v; ++g3){
                let p3 = g3 * f + d;
                if (l === "quaternion") gt.multiplyQuaternionsFlat(c.values, p3, x, 0, c.values, p3);
                else {
                    let _1 = f - d * 2;
                    for(let y = 0; y < _1; ++y)c.values[p3 + y] -= x[y];
                }
            }
        }
        return s.blendMode = qc, s;
    }
}, cn = class {
    constructor(e, t, n, i){
        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};
    }
    evaluate(e) {
        let t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
        e: {
            t: {
                let o;
                n: {
                    i: if (!(e < i)) {
                        for(let a = n + 2;;){
                            if (i === void 0) {
                                if (e < r) break i;
                                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
                            }
                            if (n === a) break;
                            if (r = i, i = t[++n], e < i) break t;
                        }
                        o = t.length;
                        break n;
                    }
                    if (!(e >= r)) {
                        let a1 = t[1];
                        e < a1 && (n = 2, r = a1);
                        for(let l = n - 2;;){
                            if (r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                            if (n === l) break;
                            if (i = r, r = t[--n - 1], e >= r) break t;
                        }
                        o = n, n = 0;
                        break n;
                    }
                    break e;
                }
                for(; n < o;){
                    let a2 = n + o >>> 1;
                    e < t[a2] ? o = a2 : n = a2 + 1;
                }
                if (i = t[n], r = t[n - 1], r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                if (i === void 0) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
            }
            this._cachedIndex = n, this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        let t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i;
        for(let o = 0; o !== i; ++o)t[o] = n[r + o];
        return t;
    }
    interpolate_() {
        throw new Error("call to abstract method");
    }
    intervalChanged_() {}
};
cn.prototype.beforeStart_ = cn.prototype.copySampleValue_;
cn.prototype.afterEnd_ = cn.prototype.copySampleValue_;
var Ph = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
        this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
            endingStart: Mi,
            endingEnd: Mi
        };
    }
    intervalChanged_(e, t, n) {
        let i = this.parameterPositions, r = e - 2, o = e + 1, a = i[r], l = i[o];
        if (a === void 0) switch(this.getSettings_().endingStart){
            case bi:
                r = e, a = 2 * t - n;
                break;
            case Os:
                r = i.length - 2, a = t + i[r] - i[r + 1];
                break;
            default:
                r = e, a = n;
        }
        if (l === void 0) switch(this.getSettings_().endingEnd){
            case bi:
                o = e, l = 2 * n - t;
                break;
            case Os:
                o = 1, l = n + i[1] - i[0];
                break;
            default:
                o = e - 1, l = t;
        }
        let c = (n - t) * .5, h = this.valueSize;
        this._weightPrev = c / (t - a), this._weightNext = c / (l - n), this._offsetPrev = r * h, this._offsetNext = o * h;
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = this._offsetPrev, u = this._offsetNext, d = this._weightPrev, f = this._weightNext, m = (n - t) / (i - t), x = m * m, v = x * m, g = -d * v + 2 * d * x - d * m, p = (1 + d) * v + (-1.5 - 2 * d) * x + (-.5 + d) * m + 1, _ = (-1 - f) * v + (1.5 + f) * x + .5 * m, y = f * v - f * x;
        for(let b = 0; b !== a; ++b)r[b] = g * o[h + b] + p * o[c + b] + _ * o[l + b] + y * o[u + b];
        return r;
    }
}, Na = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = (n - t) / (i - t), u = 1 - h;
        for(let d = 0; d !== a; ++d)r[d] = o[c + d] * u + o[l + d] * h;
        return r;
    }
}, Ih = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}, zt = class {
    constructor(e, t, n, i){
        if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (t === void 0 || t.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e, this.times = Ze.convertArray(t, this.TimeBufferType), this.values = Ze.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        let t = e.constructor, n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: Ze.convertArray(e.times, Array),
                values: Ze.convertArray(e.values, Array)
            };
            let i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return n.type = e.ValueTypeName, n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new Ih(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new Na(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new Ph(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch(e){
            case zs:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Us:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case yo:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            let n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
            else throw new Error(n);
            return console.warn("THREE.KeyframeTrack:", n), this;
        }
        return this.createInterpolant = t, this;
    }
    getInterpolation() {
        switch(this.createInterpolant){
            case this.InterpolantFactoryMethodDiscrete:
                return zs;
            case this.InterpolantFactoryMethodLinear:
                return Us;
            case this.InterpolantFactoryMethodSmooth:
                return yo;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        let n = this.times, i = n.length, r = 0, o = i - 1;
        for(; r !== i && n[r] < e;)++r;
        for(; o !== -1 && n[o] > t;)--o;
        if (++o, r !== 0 || o !== i) {
            r >= o && (o = Math.max(o, 1), r = o - 1);
            let a = this.getValueSize();
            this.times = Ze.arraySlice(n, r, o), this.values = Ze.arraySlice(this.values, r * a, o * a);
        }
        return this;
    }
    validate() {
        let e = !0, t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
        let n = this.times, i = this.values, r = n.length;
        r === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
        let o = null;
        for(let a = 0; a !== r; a++){
            let l = n[a];
            if (typeof l == "number" && isNaN(l)) {
                console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                break;
            }
            if (o !== null && o > l) {
                console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                break;
            }
            o = l;
        }
        if (i !== void 0 && Ze.isTypedArray(i)) for(let a1 = 0, l1 = i.length; a1 !== l1; ++a1){
            let c = i[a1];
            if (isNaN(c)) {
                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a1, c), e = !1;
                break;
            }
        }
        return e;
    }
    optimize() {
        let e = Ze.arraySlice(this.times), t = Ze.arraySlice(this.values), n = this.getValueSize(), i = this.getInterpolation() === yo, r = e.length - 1, o = 1;
        for(let a = 1; a < r; ++a){
            let l = !1, c = e[a], h = e[a + 1];
            if (c !== h && (a !== 1 || c !== e[0])) if (i) l = !0;
            else {
                let u = a * n, d = u - n, f = u + n;
                for(let m = 0; m !== n; ++m){
                    let x = t[u + m];
                    if (x !== t[d + m] || x !== t[f + m]) {
                        l = !0;
                        break;
                    }
                }
            }
            if (l) {
                if (a !== o) {
                    e[o] = e[a];
                    let u1 = a * n, d1 = o * n;
                    for(let f1 = 0; f1 !== n; ++f1)t[d1 + f1] = t[u1 + f1];
                }
                ++o;
            }
        }
        if (r > 0) {
            e[o] = e[r];
            for(let a1 = r * n, l1 = o * n, c1 = 0; c1 !== n; ++c1)t[l1 + c1] = t[a1 + c1];
            ++o;
        }
        return o !== e.length ? (this.times = Ze.arraySlice(e, 0, o), this.values = Ze.arraySlice(t, 0, o * n)) : (this.times = e, this.values = t), this;
    }
    clone() {
        let e = Ze.arraySlice(this.times, 0), t = Ze.arraySlice(this.values, 0), n = this.constructor, i = new n(this.name, e, t);
        return i.createInterpolant = this.createInterpolant, i;
    }
};
zt.prototype.TimeBufferType = Float32Array;
zt.prototype.ValueBufferType = Float32Array;
zt.prototype.DefaultInterpolation = Us;
var Qn = class extends zt {
};
Qn.prototype.ValueTypeName = "bool";
Qn.prototype.ValueBufferType = Array;
Qn.prototype.DefaultInterpolation = zs;
Qn.prototype.InterpolantFactoryMethodLinear = void 0;
Qn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Ba = class extends zt {
};
Ba.prototype.ValueTypeName = "color";
var Ar = class extends zt {
};
Ar.prototype.ValueTypeName = "number";
var Dh = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (n - t) / (i - t), c = e * a;
        for(let h = c + a; c !== h; c += 4)gt.slerpFlat(r, 0, o, c - a, o, c, l);
        return r;
    }
}, Wi = class extends zt {
    InterpolantFactoryMethodLinear(e) {
        return new Dh(this.times, this.values, this.getValueSize(), e);
    }
};
Wi.prototype.ValueTypeName = "quaternion";
Wi.prototype.DefaultInterpolation = Us;
Wi.prototype.InterpolantFactoryMethodSmooth = void 0;
var Kn = class extends zt {
};
Kn.prototype.ValueTypeName = "string";
Kn.prototype.ValueBufferType = Array;
Kn.prototype.DefaultInterpolation = zs;
Kn.prototype.InterpolantFactoryMethodLinear = void 0;
Kn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Cr = class extends zt {
};
Cr.prototype.ValueTypeName = "vector";
var Lr = class {
    constructor(e, t = -1, n, i = ua){
        this.name = e, this.tracks = n, this.duration = t, this.blendMode = i, this.uuid = Et(), this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        let t = [], n = e.tracks, i = 1 / (e.fps || 1);
        for(let o = 0, a = n.length; o !== a; ++o)t.push(ay(n[o]).scale(i));
        let r = new this(e.name, e.duration, t, e.blendMode);
        return r.uuid = e.uuid, r;
    }
    static toJSON(e) {
        let t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t,
            uuid: e.uuid,
            blendMode: e.blendMode
        };
        for(let r = 0, o = n.length; r !== o; ++r)t.push(zt.toJSON(n[r]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        let r = t.length, o = [];
        for(let a = 0; a < r; a++){
            let l = [], c = [];
            l.push((a + r - 1) % r, a, (a + 1) % r), c.push(0, 1, 0);
            let h = Ze.getKeyframeOrder(l);
            l = Ze.sortedArray(l, 1, h), c = Ze.sortedArray(c, 1, h), !i && l[0] === 0 && (l.push(r), c.push(c[0])), o.push(new Ar(".morphTargetInfluences[" + t[a].name + "]", l, c).scale(1 / n));
        }
        return new this(e, -1, o);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            let i = e;
            n = i.geometry && i.geometry.animations || i.animations;
        }
        for(let i1 = 0; i1 < n.length; i1++)if (n[i1].name === t) return n[i1];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        let i = {}, r = /^([\w-]*?)([\d]+)$/;
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a], h = c.name.match(r);
            if (h && h.length > 1) {
                let u = h[1], d = i[u];
                d || (i[u] = d = []), d.push(c);
            }
        }
        let o = [];
        for(let a1 in i)o.push(this.CreateFromMorphTargetSequence(a1, i[a1], t, n));
        return o;
    }
    static parseAnimation(e, t) {
        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        let n = function(u, d, f, m, x) {
            if (f.length !== 0) {
                let v = [], g = [];
                Ze.flattenJSON(f, v, g, m), v.length !== 0 && x.push(new u(d, v, g));
            }
        }, i = [], r = e.name || "default", o = e.fps || 30, a = e.blendMode, l = e.length || -1, c = e.hierarchy || [];
        for(let u = 0; u < c.length; u++){
            let d = c[u].keys;
            if (!(!d || d.length === 0)) if (d[0].morphTargets) {
                let f = {}, m;
                for(m = 0; m < d.length; m++)if (d[m].morphTargets) for(let x = 0; x < d[m].morphTargets.length; x++)f[d[m].morphTargets[x]] = -1;
                for(let x1 in f){
                    let v = [], g = [];
                    for(let p = 0; p !== d[m].morphTargets.length; ++p){
                        let _ = d[m];
                        v.push(_.time), g.push(_.morphTarget === x1 ? 1 : 0);
                    }
                    i.push(new Ar(".morphTargetInfluence[" + x1 + "]", v, g));
                }
                l = f.length * (o || 1);
            } else {
                let f1 = ".bones[" + t[u].name + "]";
                n(Cr, f1 + ".position", d, "pos", i), n(Wi, f1 + ".quaternion", d, "rot", i), n(Cr, f1 + ".scale", d, "scl", i);
            }
        }
        return i.length === 0 ? null : new this(r, l, i, a);
    }
    resetDuration() {
        let e = this.tracks, t = 0;
        for(let n = 0, i = e.length; n !== i; ++n){
            let r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
        }
        return this.duration = t, this;
    }
    trim() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for(let t = 0; t < this.tracks.length; t++)e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
        return this;
    }
    clone() {
        let e = [];
        for(let t = 0; t < this.tracks.length; t++)e.push(this.tracks[t].clone());
        return new this.constructor(this.name, this.duration, e, this.blendMode);
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
};
function oy(s) {
    switch(s.toLowerCase()){
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return Ar;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return Cr;
        case "color":
            return Ba;
        case "quaternion":
            return Wi;
        case "bool":
        case "boolean":
            return Qn;
        case "string":
            return Kn;
    }
    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + s);
}
function ay(s) {
    if (s.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    let e = oy(s.type);
    if (s.times === void 0) {
        let t = [], n = [];
        Ze.flattenJSON(s.keys, t, n, "value"), s.times = t, s.values = n;
    }
    return e.parse !== void 0 ? e.parse(s) : new e(s.name, s.times, s.values, s.interpolation);
}
var Ni = {
    enabled: !1,
    files: {},
    add: function(s, e) {
        this.enabled !== !1 && (this.files[s] = e);
    },
    get: function(s) {
        if (this.enabled !== !1) return this.files[s];
    },
    remove: function(s) {
        delete this.files[s];
    },
    clear: function() {
        this.files = {};
    }
}, za = class {
    constructor(e, t, n){
        let i = this, r = !1, o = 0, a = 0, l, c = [];
        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(h) {
            a++, r === !1 && i.onStart !== void 0 && i.onStart(h, o, a), r = !0;
        }, this.itemEnd = function(h) {
            o++, i.onProgress !== void 0 && i.onProgress(h, o, a), o === a && (r = !1, i.onLoad !== void 0 && i.onLoad());
        }, this.itemError = function(h) {
            i.onError !== void 0 && i.onError(h);
        }, this.resolveURL = function(h) {
            return l ? l(h) : h;
        }, this.setURLModifier = function(h) {
            return l = h, this;
        }, this.addHandler = function(h, u) {
            return c.push(h, u), this;
        }, this.removeHandler = function(h) {
            let u = c.indexOf(h);
            return u !== -1 && c.splice(u, 2), this;
        }, this.getHandler = function(h) {
            for(let u = 0, d = c.length; u < d; u += 2){
                let f = c[u], m = c[u + 1];
                if (f.global && (f.lastIndex = 0), f.test(h)) return m;
            }
            return null;
        };
    }
}, ly = new za, bt = class {
    constructor(e){
        this.manager = e !== void 0 ? e : ly, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
    }
    load() {}
    loadAsync(e, t) {
        let n = this;
        return new Promise(function(i, r) {
            n.load(e, i, t, r);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return this.crossOrigin = e, this;
    }
    setWithCredentials(e) {
        return this.withCredentials = e, this;
    }
    setPath(e) {
        return this.path = e, this;
    }
    setResourcePath(e) {
        return this.resourcePath = e, this;
    }
    setRequestHeader(e) {
        return this.requestHeader = e, this;
    }
}, tn = {}, Yt = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = Ni.get(e);
        if (r !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
            t && t(r), this.manager.itemEnd(e);
        }, 0), r;
        if (tn[e] !== void 0) {
            tn[e].push({
                onLoad: t,
                onProgress: n,
                onError: i
            });
            return;
        }
        tn[e] = [], tn[e].push({
            onLoad: t,
            onProgress: n,
            onError: i
        });
        let o = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? "include" : "same-origin"
        });
        fetch(o).then((a)=>{
            if (a.status === 200 || a.status === 0) {
                if (a.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || a.body.getReader === void 0) return a;
                let l = tn[e], c = a.body.getReader(), h = a.headers.get("Content-Length"), u = h ? parseInt(h) : 0, d = u !== 0, f = 0, m = new ReadableStream({
                    start (x) {
                        v();
                        function v() {
                            c.read().then(({ done: g , value: p  })=>{
                                if (g) x.close();
                                else {
                                    f += p.byteLength;
                                    let _ = new ProgressEvent("progress", {
                                        lengthComputable: d,
                                        loaded: f,
                                        total: u
                                    });
                                    for(let y = 0, b = l.length; y < b; y++){
                                        let A = l[y];
                                        A.onProgress && A.onProgress(_);
                                    }
                                    x.enqueue(p), v();
                                }
                            });
                        }
                    }
                });
                return new Response(m);
            } else throw Error(`fetch for "${a.url}" responded with ${a.status}: ${a.statusText}`);
        }).then((a)=>{
            switch(this.responseType){
                case "arraybuffer":
                    return a.arrayBuffer();
                case "blob":
                    return a.blob();
                case "document":
                    return a.text().then((l)=>new DOMParser().parseFromString(l, this.mimeType));
                case "json":
                    return a.json();
                default:
                    return a.text();
            }
        }).then((a)=>{
            Ni.add(e, a);
            let l = tn[e];
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onLoad && u.onLoad(a);
            }
        }).catch((a)=>{
            let l = tn[e];
            if (l === void 0) throw this.manager.itemError(e), a;
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onError && u.onError(a);
            }
            this.manager.itemError(e);
        }).finally(()=>{
            this.manager.itemEnd(e);
        }), this.manager.itemStart(e);
    }
    setResponseType(e) {
        return this.responseType = e, this;
    }
    setMimeType(e) {
        return this.mimeType = e, this;
    }
}, cy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = [];
        for(let n = 0; n < e.length; n++){
            let i = Lr.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}, hy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = [], a = new va, l = new Yt(this.manager);
        l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(r.withCredentials);
        let c = 0;
        function h(u) {
            l.load(e[u], function(d) {
                let f = r.parse(d, !0);
                o[u] = {
                    width: f.width,
                    height: f.height,
                    format: f.format,
                    mipmaps: f.mipmaps
                }, c += 1, c === 6 && (f.mipmapCount === 1 && (a.minFilter = tt), a.image = o, a.format = f.format, a.needsUpdate = !0, t && t(a));
            }, n, i);
        }
        if (Array.isArray(e)) for(let u = 0, d = e.length; u < d; ++u)h(u);
        else l.load(e, function(u) {
            let d = r.parse(u, !0);
            if (d.isCubemap) {
                let f = d.mipmaps.length / d.mipmapCount;
                for(let m = 0; m < f; m++){
                    o[m] = {
                        mipmaps: []
                    };
                    for(let x = 0; x < d.mipmapCount; x++)o[m].mipmaps.push(d.mipmaps[m * d.mipmapCount + x]), o[m].format = d.format, o[m].width = d.width, o[m].height = d.height;
                }
                a.image = o;
            } else a.image.width = d.width, a.image.height = d.height, a.mipmaps = d.mipmaps;
            d.mipmapCount === 1 && (a.minFilter = tt), a.format = d.format, a.needsUpdate = !0, t && t(a);
        }, n, i);
        return a;
    }
}, Rr = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = qs("img");
        function l() {
            h(), Ni.add(e, this), t && t(this), r.manager.itemEnd(e);
        }
        function c(u) {
            h(), i && i(u), r.manager.itemError(e), r.manager.itemEnd(e);
        }
        function h() {
            a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
        }
        return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(e), a.src = e, a;
    }
}, Fh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ki, o = new Rr(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        let a = 0;
        function l(c) {
            o.load(e[c], function(h) {
                r.images[c] = h, a++, a === 6 && (r.needsUpdate = !0, t && t(r));
            }, void 0, i);
        }
        for(let c = 0; c < e.length; ++c)l(c);
        return r;
    }
}, Nh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new qn, a = new Yt(this.manager);
        return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(r.withCredentials), a.load(e, function(l) {
            let c = r.parse(l);
            !c || (c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : vt, o.wrapT = c.wrapT !== void 0 ? c.wrapT : vt, o.magFilter = c.magFilter !== void 0 ? c.magFilter : tt, o.minFilter = c.minFilter !== void 0 ? c.minFilter : tt, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.encoding !== void 0 && (o.encoding = c.encoding), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = Ui), c.mipmapCount === 1 && (o.minFilter = tt), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, t && t(o, c));
        }, n, i), o;
    }
}, Bh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ot, o = new Rr(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
            r.image = a, r.needsUpdate = !0, t !== void 0 && t(r);
        }, n, i), r;
    }
}, Bt = class extends Ne {
    constructor(e, t = 1){
        super();
        this.type = "Light", this.color = new ae(e), this.intensity = t;
    }
    dispose() {}
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.intensity = e.intensity, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
    }
};
Bt.prototype.isLight = !0;
var Ua = class extends Bt {
    constructor(e, t, n){
        super(e, n);
        this.type = "HemisphereLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.groundColor = new ae(t);
    }
    copy(e) {
        return Bt.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
    }
};
Ua.prototype.isHemisphereLight = !0;
var _c = new pe, Mc = new M, bc = new M, mo = class {
    constructor(e){
        this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new X(512, 512), this.map = null, this.mapPass = null, this.matrix = new pe, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new Dr, this._frameExtents = new X(1, 1), this._viewportCount = 1, this._viewports = [
            new Ve(0, 0, 1, 1)
        ];
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        let t = this.camera, n = this.matrix;
        Mc.setFromMatrixPosition(e.matrixWorld), t.position.copy(Mc), bc.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(bc), t.updateMatrixWorld(), _c.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(_c), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = {};
        return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
    }
}, Oa = class extends mo {
    constructor(){
        super(new ut(50, 1, .5, 500));
        this.focus = 1;
    }
    updateMatrices(e) {
        let t = this.camera, n = dr * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || r !== t.far) && (t.fov = n, t.aspect = i, t.far = r, t.updateProjectionMatrix()), super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), this.focus = e.focus, this;
    }
};
Oa.prototype.isSpotLightShadow = !0;
var Ha = class extends Bt {
    constructor(e, t, n = 0, i = Math.PI / 3, r = 0, o = 1){
        super(e, t);
        this.type = "SpotLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.distance = n, this.angle = i, this.penumbra = r, this.decay = o, this.shadow = new Oa;
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Ha.prototype.isSpotLight = !0;
var wc = new pe, nr = new M, jo = new M, ka = class extends mo {
    constructor(){
        super(new ut(90, 1, .5, 500));
        this._frameExtents = new X(4, 2), this._viewportCount = 6, this._viewports = [
            new Ve(2, 1, 1, 1),
            new Ve(0, 1, 1, 1),
            new Ve(3, 1, 1, 1),
            new Ve(1, 1, 1, 1),
            new Ve(3, 0, 1, 1),
            new Ve(1, 0, 1, 1)
        ], this._cubeDirections = [
            new M(1, 0, 0),
            new M(-1, 0, 0),
            new M(0, 0, 1),
            new M(0, 0, -1),
            new M(0, 1, 0),
            new M(0, -1, 0)
        ], this._cubeUps = [
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 0, 1),
            new M(0, 0, -1)
        ];
    }
    updateMatrices(e, t = 0) {
        let n = this.camera, i = this.matrix, r = e.distance || n.far;
        r !== n.far && (n.far = r, n.updateProjectionMatrix()), nr.setFromMatrixPosition(e.matrixWorld), n.position.copy(nr), jo.copy(n.position), jo.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(jo), n.updateMatrixWorld(), i.makeTranslation(-nr.x, -nr.y, -nr.z), wc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(wc);
    }
};
ka.prototype.isPointLightShadow = !0;
var Ga = class extends Bt {
    constructor(e, t, n = 0, i = 1){
        super(e, t);
        this.type = "PointLight", this.distance = n, this.decay = i, this.shadow = new ka;
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
    }
};
Ga.prototype.isPointLight = !0;
var Va = class extends mo {
    constructor(){
        super(new Fr(-5, 5, 5, -5, .5, 500));
    }
};
Va.prototype.isDirectionalLightShadow = !0;
var Wa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "DirectionalLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.shadow = new Va;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Wa.prototype.isDirectionalLight = !0;
var qa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "AmbientLight";
    }
};
qa.prototype.isAmbientLight = !0;
var Xa = class extends Bt {
    constructor(e, t, n = 10, i = 10){
        super(e, t);
        this.type = "RectAreaLight", this.width = n, this.height = i;
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return super.copy(e), this.width = e.width, this.height = e.height, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.width = this.width, t.object.height = this.height, t;
    }
};
Xa.prototype.isRectAreaLight = !0;
var Ja = class {
    constructor(){
        this.coefficients = [];
        for(let e = 0; e < 9; e++)this.coefficients.push(new M);
    }
    set(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.282095), t.addScaledVector(o[1], .488603 * i), t.addScaledVector(o[2], .488603 * r), t.addScaledVector(o[3], .488603 * n), t.addScaledVector(o[4], 1.092548 * (n * i)), t.addScaledVector(o[5], 1.092548 * (i * r)), t.addScaledVector(o[6], .315392 * (3 * r * r - 1)), t.addScaledVector(o[7], 1.092548 * (n * r)), t.addScaledVector(o[8], .546274 * (n * n - i * i)), t;
    }
    getIrradianceAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.886227), t.addScaledVector(o[1], 2 * .511664 * i), t.addScaledVector(o[2], 2 * .511664 * r), t.addScaledVector(o[3], 2 * .511664 * n), t.addScaledVector(o[4], 2 * .429043 * n * i), t.addScaledVector(o[5], 2 * .429043 * i * r), t.addScaledVector(o[6], .743125 * r * r - .247708), t.addScaledVector(o[7], 2 * .429043 * n * r), t.addScaledVector(o[8], .429043 * (n * n - i * i)), t;
    }
    add(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for(let t = 0; t < 9; t++)if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        let n = e.x, i = e.y, r = e.z;
        t[0] = .282095, t[1] = .488603 * i, t[2] = .488603 * r, t[3] = .488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = .315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = .546274 * (n * n - i * i);
    }
};
Ja.prototype.isSphericalHarmonics3 = !0;
var Hr = class extends Bt {
    constructor(e = new Ja, t = 1){
        super(void 0, t);
        this.sh = e;
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.sh = this.sh.toArray(), t;
    }
};
Hr.prototype.isLightProbe = !0;
var zh = class extends bt {
    constructor(e){
        super(e);
        this.textures = {};
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = this.textures;
        function n(r) {
            return t[r] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", r), t[r];
        }
        let i = new sy[e.type];
        if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new ae().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.format !== void 0 && (i.format = e.format), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== 1 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(let r in e.uniforms){
            let o = e.uniforms[r];
            switch(i.uniforms[r] = {}, o.type){
                case "t":
                    i.uniforms[r].value = n(o.value);
                    break;
                case "c":
                    i.uniforms[r].value = new ae().setHex(o.value);
                    break;
                case "v2":
                    i.uniforms[r].value = new X().fromArray(o.value);
                    break;
                case "v3":
                    i.uniforms[r].value = new M().fromArray(o.value);
                    break;
                case "v4":
                    i.uniforms[r].value = new Ve().fromArray(o.value);
                    break;
                case "m3":
                    i.uniforms[r].value = new lt().fromArray(o.value);
                    break;
                case "m4":
                    i.uniforms[r].value = new pe().fromArray(o.value);
                    break;
                default:
                    i.uniforms[r].value = o.value;
            }
        }
        if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.extensions !== void 0) for(let r1 in e.extensions)i.extensions[r1] = e.extensions[r1];
        if (e.shading !== void 0 && (i.flatShading = e.shading === 1), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = n(e.map)), e.matcap !== void 0 && (i.matcap = n(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
            let r2 = e.normalScale;
            Array.isArray(r2) === !1 && (r2 = [
                r2,
                r2
            ]), i.normalScale = new X().fromArray(r2);
        }
        return e.displacementMap !== void 0 && (i.displacementMap = n(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = n(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = n(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = n(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new X().fromArray(e.clearcoatNormalScale)), e.transmissionMap !== void 0 && (i.transmissionMap = n(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = n(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = n(e.sheenRoughnessMap)), i;
    }
    setTextures(e) {
        return this.textures = e, this;
    }
}, Gs = class {
    static decodeText(e) {
        if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
        let t = "";
        for(let n = 0, i = e.length; n < i; n++)t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch  {
            return t;
        }
    }
    static extractUrlBase(e) {
        let t = e.lastIndexOf("/");
        return t === -1 ? "./" : e.substr(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
    }
}, Ya = class extends _e {
    constructor(){
        super();
        this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
    }
    copy(e) {
        return super.copy(e), this.instanceCount = e.instanceCount, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = super.toJSON(this);
        return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
    }
};
Ya.prototype.isInstancedBufferGeometry = !0;
var Uh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = {}, n = {};
        function i(f, m) {
            if (t[m] !== void 0) return t[m];
            let v = f.interleavedBuffers[m], g = r(f, v.buffer), p = wi(v.type, g), _ = new $n(p, v.stride);
            return _.uuid = v.uuid, t[m] = _, _;
        }
        function r(f, m) {
            if (n[m] !== void 0) return n[m];
            let v = f.arrayBuffers[m], g = new Uint32Array(v).buffer;
            return n[m] = g, g;
        }
        let o = e.isInstancedBufferGeometry ? new Ya : new _e, a = e.data.index;
        if (a !== void 0) {
            let f = wi(a.type, a.array);
            o.setIndex(new Ue(f, 1));
        }
        let l = e.data.attributes;
        for(let f1 in l){
            let m = l[f1], x;
            if (m.isInterleavedBufferAttribute) {
                let v = i(e.data, m.data);
                x = new Sn(v, m.itemSize, m.offset, m.normalized);
            } else {
                let v1 = wi(m.type, m.array), g = m.isInstancedBufferAttribute ? Xn : Ue;
                x = new g(v1, m.itemSize, m.normalized);
            }
            m.name !== void 0 && (x.name = m.name), m.usage !== void 0 && x.setUsage(m.usage), m.updateRange !== void 0 && (x.updateRange.offset = m.updateRange.offset, x.updateRange.count = m.updateRange.count), o.setAttribute(f1, x);
        }
        let c = e.data.morphAttributes;
        if (c) for(let f2 in c){
            let m1 = c[f2], x1 = [];
            for(let v2 = 0, g1 = m1.length; v2 < g1; v2++){
                let p = m1[v2], _;
                if (p.isInterleavedBufferAttribute) {
                    let y = i(e.data, p.data);
                    _ = new Sn(y, p.itemSize, p.offset, p.normalized);
                } else {
                    let y1 = wi(p.type, p.array);
                    _ = new Ue(y1, p.itemSize, p.normalized);
                }
                p.name !== void 0 && (_.name = p.name), x1.push(_);
            }
            o.morphAttributes[f2] = x1;
        }
        e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
        let u = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (u !== void 0) for(let f3 = 0, m2 = u.length; f3 !== m2; ++f3){
            let x2 = u[f3];
            o.addGroup(x2.start, x2.count, x2.materialIndex);
        }
        let d = e.data.boundingSphere;
        if (d !== void 0) {
            let f4 = new M;
            d.center !== void 0 && f4.fromArray(d.center), o.boundingSphere = new An(f4, d.radius);
        }
        return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
    }
}, uy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        let a = new Yt(this.manager);
        a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
            let c = null;
            try {
                c = JSON.parse(l);
            } catch (u) {
                i !== void 0 && i(u), console.error("THREE:ObjectLoader: Can't parse " + e + ".", u.message);
                return;
            }
            let h = c.metadata;
            if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry") {
                console.error("THREE.ObjectLoader: Can't load " + e);
                return;
            }
            r.parse(c, t);
        }, n, i);
    }
    async loadAsync(e, t) {
        let n = this, i = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        let r = new Yt(this.manager);
        r.setPath(this.path), r.setRequestHeader(this.requestHeader), r.setWithCredentials(this.withCredentials);
        let o = await r.loadAsync(e, t), a = JSON.parse(o), l = a.metadata;
        if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(a);
    }
    parse(e, t) {
        let n = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), r = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
            t !== void 0 && t(c);
        }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, r, l, a, n), h = this.parseSkeletons(e.skeletons, c);
        if (this.bindSkeletons(c, h), t !== void 0) {
            let u = !1;
            for(let d in o)if (o[d] instanceof HTMLImageElement) {
                u = !0;
                break;
            }
            u === !1 && t(c);
        }
        return c;
    }
    async parseAsync(e) {
        let t = this.parseAnimations(e.animations), n = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, n), r = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, r), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, t), c = this.parseSkeletons(e.skeletons, l);
        return this.bindSkeletons(l, c), l;
    }
    parseShapes(e) {
        let t = {};
        if (e !== void 0) for(let n = 0, i = e.length; n < i; n++){
            let r = new Xt().fromJSON(e[n]);
            t[r.uuid] = r;
        }
        return t;
    }
    parseSkeletons(e, t) {
        let n = {}, i = {};
        if (t.traverse(function(r) {
            r.isBone && (i[r.uuid] = r);
        }), e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = new ao().fromJSON(e[r], i);
            n[a.uuid] = a;
        }
        return n;
    }
    parseGeometries(e, t) {
        let n = {};
        if (e !== void 0) {
            let i = new Uh;
            for(let r = 0, o = e.length; r < o; r++){
                let a, l = e[r];
                switch(l.type){
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = i.parse(l);
                        break;
                    case "Geometry":
                        console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");
                        break;
                    default:
                        l.type in vc ? a = vc[l.type].fromJSON(l, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                }
                a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), a.isBufferGeometry === !0 && l.userData !== void 0 && (a.userData = l.userData), n[l.uuid] = a;
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        let n = {}, i = {};
        if (e !== void 0) {
            let r = new zh;
            r.setTextures(t);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o];
                if (l.type === "MultiMaterial") {
                    let c = [];
                    for(let h = 0; h < l.materials.length; h++){
                        let u = l.materials[h];
                        n[u.uuid] === void 0 && (n[u.uuid] = r.parse(u)), c.push(n[u.uuid]);
                    }
                    i[l.uuid] = c;
                } else n[l.uuid] === void 0 && (n[l.uuid] = r.parse(l)), i[l.uuid] = n[l.uuid];
            }
        }
        return i;
    }
    parseAnimations(e) {
        let t = {};
        if (e !== void 0) for(let n = 0; n < e.length; n++){
            let i = e[n], r = Lr.parse(i);
            t[r.uuid] = r;
        }
        return t;
    }
    parseImages(e, t) {
        let n = this, i = {}, r;
        function o(l) {
            return n.manager.itemStart(l), r.load(l, function() {
                n.manager.itemEnd(l);
            }, void 0, function() {
                n.manager.itemError(l), n.manager.itemEnd(l);
            });
        }
        function a(l) {
            if (typeof l == "string") {
                let c = l, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : n.resourcePath + c;
                return o(h);
            } else return l.data ? {
                data: wi(l.type, l.data),
                width: l.width,
                height: l.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            let l = new za(t);
            r = new Rr(l), r.setCrossOrigin(this.crossOrigin);
            for(let c = 0, h = e.length; c < h; c++){
                let u = e[c], d = u.url;
                if (Array.isArray(d)) {
                    i[u.uuid] = [];
                    for(let f = 0, m = d.length; f < m; f++){
                        let x = d[f], v = a(x);
                        v !== null && (v instanceof HTMLImageElement ? i[u.uuid].push(v) : i[u.uuid].push(new qn(v.data, v.width, v.height)));
                    }
                } else {
                    let f1 = a(u.url);
                    f1 !== null && (i[u.uuid] = f1);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        let t = this, n = {}, i;
        async function r(o) {
            if (typeof o == "string") {
                let a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : t.resourcePath + a;
                return await i.loadAsync(l);
            } else return o.data ? {
                data: wi(o.type, o.data),
                width: o.width,
                height: o.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            i = new Rr(this.manager), i.setCrossOrigin(this.crossOrigin);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o], c = l.url;
                if (Array.isArray(c)) {
                    n[l.uuid] = [];
                    for(let h = 0, u = c.length; h < u; h++){
                        let d = c[h], f = await r(d);
                        f !== null && (f instanceof HTMLImageElement ? n[l.uuid].push(f) : n[l.uuid].push(new qn(f.data, f.width, f.height)));
                    }
                } else {
                    let h1 = await r(l.url);
                    h1 !== null && (n[l.uuid] = h1);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(r, o) {
            return typeof r == "number" ? r : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", r), o[r]);
        }
        let i = {};
        if (e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = e[r];
            a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), t[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
            let l, c = t[a.image];
            Array.isArray(c) ? (l = new ki(c), c.length === 6 && (l.needsUpdate = !0)) : (c && c.data ? l = new qn(c.data, c.width, c.height) : l = new ot(c), c && (l.needsUpdate = !0)), l.uuid = a.uuid, a.name !== void 0 && (l.name = a.name), a.mapping !== void 0 && (l.mapping = n(a.mapping, dy)), a.offset !== void 0 && l.offset.fromArray(a.offset), a.repeat !== void 0 && l.repeat.fromArray(a.repeat), a.center !== void 0 && l.center.fromArray(a.center), a.rotation !== void 0 && (l.rotation = a.rotation), a.wrap !== void 0 && (l.wrapS = n(a.wrap[0], Sc), l.wrapT = n(a.wrap[1], Sc)), a.format !== void 0 && (l.format = a.format), a.type !== void 0 && (l.type = a.type), a.encoding !== void 0 && (l.encoding = a.encoding), a.minFilter !== void 0 && (l.minFilter = n(a.minFilter, Tc)), a.magFilter !== void 0 && (l.magFilter = n(a.magFilter, Tc)), a.anisotropy !== void 0 && (l.anisotropy = a.anisotropy), a.flipY !== void 0 && (l.flipY = a.flipY), a.premultiplyAlpha !== void 0 && (l.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (l.unpackAlignment = a.unpackAlignment), a.userData !== void 0 && (l.userData = a.userData), i[a.uuid] = l;
        }
        return i;
    }
    parseObject(e, t, n, i, r) {
        let o;
        function a(d) {
            return t[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", d), t[d];
        }
        function l(d) {
            if (d !== void 0) {
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, x = d.length; m < x; m++){
                        let v = d[m];
                        n[v] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", v), f.push(n[v]);
                    }
                    return f;
                }
                return n[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", d), n[d];
            }
        }
        function c(d) {
            return i[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", d), i[d];
        }
        let h, u;
        switch(e.type){
            case "Scene":
                o = new no, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new ae(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new Br(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new Nr(e.fog.color, e.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new ut(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                o = new Fr(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                o = new qa(e.color, e.intensity);
                break;
            case "DirectionalLight":
                o = new Wa(e.color, e.intensity);
                break;
            case "PointLight":
                o = new Ga(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                o = new Xa(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                o = new Ha(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                o = new Ua(e.color, e.groundColor, e.intensity);
                break;
            case "LightProbe":
                o = new Hr().fromJSON(e);
                break;
            case "SkinnedMesh":
                h = a(e.geometry), u = l(e.material), o = new so(h, u), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                break;
            case "Mesh":
                h = a(e.geometry), u = l(e.material), o = new st(h, u);
                break;
            case "InstancedMesh":
                h = a(e.geometry), u = l(e.material);
                let d = e.count, f = e.instanceMatrix, m = e.instanceColor;
                o = new xa(h, u, d), o.instanceMatrix = new Xn(new Float32Array(f.array), 16), m !== void 0 && (o.instanceColor = new Xn(new Float32Array(m.array), m.itemSize));
                break;
            case "LOD":
                o = new bh;
                break;
            case "Line":
                o = new on(a(e.geometry), l(e.material));
                break;
            case "LineLoop":
                o = new ya(a(e.geometry), l(e.material));
                break;
            case "LineSegments":
                o = new wt(a(e.geometry), l(e.material));
                break;
            case "PointCloud":
            case "Points":
                o = new zr(a(e.geometry), l(e.material));
                break;
            case "Sprite":
                o = new ro(l(e.material));
                break;
            case "Group":
                o = new Hn;
                break;
            case "Bone":
                o = new oo;
                break;
            default:
                o = new Ne;
        }
        if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
            let d1 = e.children;
            for(let f1 = 0; f1 < d1.length; f1++)o.add(this.parseObject(d1[f1], t, n, i, r));
        }
        if (e.animations !== void 0) {
            let d2 = e.animations;
            for(let f2 = 0; f2 < d2.length; f2++){
                let m1 = d2[f2];
                o.animations.push(r[m1]);
            }
        }
        if (e.type === "LOD") {
            e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
            let d3 = e.levels;
            for(let f3 = 0; f3 < d3.length; f3++){
                let m2 = d3[f3], x = o.getObjectByProperty("uuid", m2.object);
                x !== void 0 && o.addLevel(x, m2.distance);
            }
        }
        return o;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 && e.traverse(function(n) {
            if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                let i = t[n.skeleton];
                i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", n.skeleton) : n.bind(i, n.bindMatrix);
            }
        });
    }
    setTexturePath(e) {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
    }
}, dy = {
    UVMapping: ha,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws
}, Sc = {
    RepeatWrapping: Ns,
    ClampToEdgeWrapping: vt,
    MirroredRepeatWrapping: Bs
}, Tc = {
    NearestFilter: rt,
    NearestMipmapNearestFilter: ta,
    NearestMipmapLinearFilter: na,
    LinearFilter: tt,
    LinearMipmapNearestFilter: Wc,
    LinearMipmapLinearFilter: Ui
}, Oh = class extends bt {
    constructor(e){
        super(e);
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
            premultiplyAlpha: "none"
        };
    }
    setOptions(e) {
        return this.options = e, this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = {};
        a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader, fetch(e, a).then(function(l) {
            return l.blob();
        }).then(function(l) {
            return createImageBitmap(l, Object.assign(r.options, {
                colorSpaceConversion: "none"
            }));
        }).then(function(l) {
            Ni.add(e, l), t && t(l), r.manager.itemEnd(e);
        }).catch(function(l) {
            i && i(l), r.manager.itemError(e), r.manager.itemEnd(e);
        }), r.manager.itemStart(e);
    }
};
Oh.prototype.isImageBitmapLoader = !0;
var Ss, Hh = {
    getContext: function() {
        return Ss === void 0 && (Ss = new (window.AudioContext || window.webkitAudioContext)), Ss;
    },
    setContext: function(s) {
        Ss = s;
    }
}, kh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                let l = a.slice(0);
                Hh.getContext().decodeAudioData(l, function(h) {
                    t(h);
                });
            } catch (l1) {
                i ? i(l1) : console.error(l1), r.manager.itemError(e);
            }
        }, n, i);
    }
}, Gh = class extends Hr {
    constructor(e, t, n = 1){
        super(void 0, n);
        let i = new ae().set(e), r = new ae().set(t), o = new M(i.r, i.g, i.b), a = new M(r.r, r.g, r.b), l = Math.sqrt(Math.PI), c = l * Math.sqrt(.75);
        this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c);
    }
};
Gh.prototype.isHemisphereLightProbe = !0;
var Vh = class extends Hr {
    constructor(e, t = 1){
        super(void 0, t);
        let n = new ae().set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
    }
};
Vh.prototype.isAmbientLightProbe = !0;
var Ec = new pe, Ac = new pe, Fn = new pe, fy = class {
    constructor(){
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new ut, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new ut, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        };
    }
    update(e) {
        let t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, Fn.copy(e.projectionMatrix);
            let i = t.eyeSep / 2, r = i * t.near / t.focus, o = t.near * Math.tan(Wn * t.fov * .5) / t.zoom, a, l;
            Ac.elements[12] = -i, Ec.elements[12] = i, a = -o * t.aspect + r, l = o * t.aspect + r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(Fn), a = -o * t.aspect - r, l = o * t.aspect - r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(Fn);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ac), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ec);
    }
}, Wh = class {
    constructor(e = !0){
        this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
    }
    start() {
        this.startTime = Cc(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
    }
    stop() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            let t = Cc();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
        }
        return e;
    }
};
function Cc() {
    return (typeof performance > "u" ? Date : performance).now();
}
var Nn = new M, Lc = new gt, py = new M, Bn = new M, my = class extends Ne {
    constructor(){
        super();
        this.type = "AudioListener", this.context = Hh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Wh;
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        let t = this.context.listener, n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Nn, Lc, py), Bn.set(0, 0, -1).applyQuaternion(Lc), t.positionX) {
            let i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Nn.x, i), t.positionY.linearRampToValueAtTime(Nn.y, i), t.positionZ.linearRampToValueAtTime(Nn.z, i), t.forwardX.linearRampToValueAtTime(Bn.x, i), t.forwardY.linearRampToValueAtTime(Bn.y, i), t.forwardZ.linearRampToValueAtTime(Bn.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
        } else t.setPosition(Nn.x, Nn.y, Nn.z), t.setOrientation(Bn.x, Bn.y, Bn.z, n.x, n.y, n.z);
    }
}, Za = class extends Ne {
    constructor(e){
        super();
        this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
    }
    setMediaElementSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
    }
    setMediaStreamSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
    }
    setBuffer(e) {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this._startedAt = this.context.currentTime + e;
        let t = this.context.createBufferSource();
        return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this._connected = !0, this;
    }
    disconnect() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else this.source.disconnect(this.getOutput());
        return this._connected = !1, this;
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
    }
    setDetune(e) {
        if (this.detune = e, this.source.detune !== void 0) return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [
            e
        ] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
    }
    setLoopStart(e) {
        return this.loopStart = e, this;
    }
    setLoopEnd(e) {
        return this.loopEnd = e, this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
}, zn = new M, Rc = new gt, gy = new M, Un = new M, xy = class extends Za {
    constructor(e){
        super(e);
        this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return this.panner.refDistance = e, this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return this.panner.rolloffFactor = e, this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return this.panner.distanceModel = e, this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return this.panner.maxDistance = e, this;
    }
    setDirectionalCone(e, t, n) {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
    }
    updateMatrixWorld(e) {
        if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
        this.matrixWorld.decompose(zn, Rc, gy), Un.set(0, 0, 1).applyQuaternion(Rc);
        let t = this.panner;
        if (t.positionX) {
            let n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(zn.x, n), t.positionY.linearRampToValueAtTime(zn.y, n), t.positionZ.linearRampToValueAtTime(zn.z, n), t.orientationX.linearRampToValueAtTime(Un.x, n), t.orientationY.linearRampToValueAtTime(Un.y, n), t.orientationZ.linearRampToValueAtTime(Un.z, n);
        } else t.setPosition(zn.x, zn.y, zn.z), t.setOrientation(Un.x, Un.y, Un.z);
    }
}, qh = class {
    constructor(e, t = 2048){
        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0, t = this.getFrequencyData();
        for(let n = 0; n < t.length; n++)e += t[n];
        return e / t.length;
    }
}, Xh = class {
    constructor(e, t, n){
        this.binding = e, this.valueSize = n;
        let i, r, o;
        switch(t){
            case "quaternion":
                i = this._slerp, r = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(n * 6), this._workIndex = 5;
                break;
            case "string":
            case "bool":
                i = this._select, r = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(n * 5);
                break;
            default:
                i = this._lerp, r = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(n * 5);
        }
        this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
    }
    accumulate(e, t) {
        let n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
        if (o === 0) {
            for(let a = 0; a !== i; ++a)n[r + a] = n[a];
            o = t;
        } else {
            o += t;
            let a1 = t / o;
            this._mixBufferRegion(n, r, 0, a1, i);
        }
        this.cumulativeWeight = o;
    }
    accumulateAdditive(e) {
        let t = this.buffer, n = this.valueSize, i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, n), this.cumulativeWeightAdditive += e;
    }
    apply(e) {
        let t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
        if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {
            let l = t * this._origIndex;
            this._mixBufferRegion(n, i, l, 1 - r, t);
        }
        o > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for(let l1 = t, c = t + t; l1 !== c; ++l1)if (n[l1] !== n[l1 + t]) {
            a.setValue(n, i);
            break;
        }
    }
    saveOriginalState() {
        let e = this.binding, t = this.buffer, n = this.valueSize, i = n * this._origIndex;
        e.getValue(t, i);
        for(let r = n, o = i; r !== o; ++r)t[r] = t[i + r % n];
        this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
    }
    restoreOriginalState() {
        let e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        let e = this._addIndex * this.valueSize, t = e + this.valueSize;
        for(let n = e; n < t; n++)this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
    }
    _setAdditiveIdentityOther() {
        let e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
        for(let n = 0; n < this.valueSize; n++)this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, r) {
        if (i >= .5) for(let o = 0; o !== r; ++o)e[t + o] = e[n + o];
    }
    _slerp(e, t, n, i) {
        gt.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, r) {
        let o = this._workIndex * r;
        gt.multiplyQuaternionsFlat(e, o, e, t, e, n), gt.slerpFlat(e, t, e, t, e, o, i);
    }
    _lerp(e, t, n, i, r) {
        let o = 1 - i;
        for(let a = 0; a !== r; ++a){
            let l = t + a;
            e[l] = e[l] * o + e[n + a] * i;
        }
    }
    _lerpAdditive(e, t, n, i, r) {
        for(let o = 0; o !== r; ++o){
            let a = t + o;
            e[a] = e[a] + e[n + o] * i;
        }
    }
}, $a = "\\[\\]\\.:\\/", yy = new RegExp("[" + $a + "]", "g"), ja = "[^" + $a + "]", vy = "[^" + $a.replace("\\.", "") + "]", _y = /((?:WC+[\/:])*)/.source.replace("WC", ja), My = /(WCOD+)?/.source.replace("WCOD", vy), by = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", ja), wy = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", ja), Sy = new RegExp("^" + _y + My + by + wy + "$"), Ty = [
    "material",
    "materials",
    "bones"
], Jh = class {
    constructor(e, t, n){
        let i = n || ke.parseTrackName(t);
        this._targetGroup = e, this._bindings = e.subscribe_(t, i);
    }
    getValue(e, t) {
        this.bind();
        let n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        let n = this._bindings;
        for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(e, t);
    }
    bind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].bind();
    }
    unbind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].unbind();
    }
}, ke = class {
    constructor(e, t, n){
        this.path = t, this.parsedPath = n || ke.parseTrackName(t), this.node = ke.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup ? new ke.Composite(e, t, n) : new ke(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, "_").replace(yy, "");
    }
    static parseTrackName(e) {
        let t = Sy.exec(e);
        if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
        let n = {
            nodeName: t[2],
            objectName: t[3],
            objectIndex: t[4],
            propertyName: t[5],
            propertyIndex: t[6]
        }, i = n.nodeName && n.nodeName.lastIndexOf(".");
        if (i !== void 0 && i !== -1) {
            let r = n.nodeName.substring(i + 1);
            Ty.indexOf(r) !== -1 && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
        }
        if (n.propertyName === null || n.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
        return n;
    }
    static findNode(e, t) {
        if (!t || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid) return e;
        if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            let n1 = function(r) {
                for(let o = 0; o < r.length; o++){
                    let a = r[o];
                    if (a.name === t || a.uuid === t) return a;
                    let l = n1(a.children);
                    if (l) return l;
                }
                return null;
            }, i = n1(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
        if (e || (e = ke.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
            console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            return;
        }
        if (n) {
            let c = t.objectIndex;
            switch(n){
                case "materials":
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.materials) {
                        console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        return;
                    }
                    e = e.material.materials;
                    break;
                case "bones":
                    if (!e.skeleton) {
                        console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        return;
                    }
                    e = e.skeleton.bones;
                    for(let h = 0; h < e.length; h++)if (e[h].name === c) {
                        c = h;
                        break;
                    }
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        return;
                    }
                    e = e[n];
            }
            if (c !== void 0) {
                if (e[c] === void 0) {
                    console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                    return;
                }
                e = e[c];
            }
        }
        let o = e[i];
        if (o === void 0) {
            let c1 = t.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + c1 + "." + i + " but it wasn't found.", e);
            return;
        }
        let a = this.Versioning.None;
        this.targetObject = e, e.needsUpdate !== void 0 ? a = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
        let l = this.BindingType.Direct;
        if (r !== void 0) {
            if (i === "morphTargetInfluences") {
                if (!e.geometry) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    return;
                }
                if (e.geometry.isBufferGeometry) {
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[r] !== void 0 && (r = e.morphTargetDictionary[r]);
                } else {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                    return;
                }
            }
            l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = r;
        } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
    }
    unbind() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
};
ke.Composite = Jh;
ke.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3
};
ke.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2
};
ke.prototype.GetterByBindingType = [
    ke.prototype._getValue_direct,
    ke.prototype._getValue_array,
    ke.prototype._getValue_arrayElement,
    ke.prototype._getValue_toArray
];
ke.prototype.SetterByBindingTypeAndVersioning = [
    [
        ke.prototype._setValue_direct,
        ke.prototype._setValue_direct_setNeedsUpdate,
        ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_array,
        ke.prototype._setValue_array_setNeedsUpdate,
        ke.prototype._setValue_array_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_arrayElement,
        ke.prototype._setValue_arrayElement_setNeedsUpdate,
        ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_fromArray,
        ke.prototype._setValue_fromArray_setNeedsUpdate,
        ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
    ]
];
var Yh = class {
    constructor(){
        this.uuid = Et(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        let e = {};
        this._indicesByUUID = e;
        for(let n = 0, i = arguments.length; n !== i; ++n)e[arguments[n].uuid] = n;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        let t = this;
        this.stats = {
            objects: {
                get total () {
                    return t._objects.length;
                },
                get inUse () {
                    return this.total - t.nCachedObjects_;
                }
            },
            get bindingsPerObject () {
                return t._bindings.length;
            }
        };
    }
    add() {
        let e = this._objects, t = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, o = r.length, a, l = e.length, c = this.nCachedObjects_;
        for(let h = 0, u = arguments.length; h !== u; ++h){
            let d = arguments[h], f = d.uuid, m = t[f];
            if (m === void 0) {
                m = l++, t[f] = m, e.push(d);
                for(let x = 0, v = o; x !== v; ++x)r[x].push(new ke(d, n[x], i[x]));
            } else if (m < c) {
                a = e[m];
                let x1 = --c, v1 = e[x1];
                t[v1.uuid] = m, e[m] = v1, t[f] = x1, e[x1] = d;
                for(let g = 0, p = o; g !== p; ++g){
                    let _ = r[g], y = _[x1], b = _[m];
                    _[m] = y, b === void 0 && (b = new ke(d, n[g], i[g])), _[x1] = b;
                }
            } else e[m] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = c;
    }
    remove() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_;
        for(let o = 0, a = arguments.length; o !== a; ++o){
            let l = arguments[o], c = l.uuid, h = t[c];
            if (h !== void 0 && h >= r) {
                let u = r++, d = e[u];
                t[d.uuid] = h, e[h] = d, t[c] = u, e[u] = l;
                for(let f = 0, m = i; f !== m; ++f){
                    let x = n[f], v = x[u], g = x[h];
                    x[h] = v, x[u] = g;
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    uncache() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_, o = e.length;
        for(let a = 0, l = arguments.length; a !== l; ++a){
            let c = arguments[a], h = c.uuid, u = t[h];
            if (u !== void 0) if (delete t[h], u < r) {
                let d = --r, f = e[d], m = --o, x = e[m];
                t[f.uuid] = u, e[u] = f, t[x.uuid] = d, e[d] = x, e.pop();
                for(let v = 0, g = i; v !== g; ++v){
                    let p = n[v], _ = p[d], y = p[m];
                    p[u] = _, p[d] = y, p.pop();
                }
            } else {
                let d1 = --o, f1 = e[d1];
                d1 > 0 && (t[f1.uuid] = u), e[u] = f1, e.pop();
                for(let m1 = 0, x1 = i; m1 !== x1; ++m1){
                    let v1 = n[m1];
                    v1[u] = v1[d1], v1.pop();
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    subscribe_(e, t) {
        let n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
        if (i !== void 0) return r[i];
        let o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, h = this.nCachedObjects_, u = new Array(c);
        i = r.length, n[e] = i, o.push(e), a.push(t), r.push(u);
        for(let d = h, f = l.length; d !== f; ++d){
            let m = l[d];
            u[d] = new ke(m, e, t);
        }
        return u;
    }
    unsubscribe_(e) {
        let t = this._bindingsIndicesByPath, n = t[e];
        if (n !== void 0) {
            let i = this._paths, r = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
            t[c] = n, o[n] = l, o.pop(), r[n] = r[a], r.pop(), i[n] = i[a], i.pop();
        }
    }
};
Yh.prototype.isAnimationObjectGroup = !0;
var Zh = class {
    constructor(e, t, n = null, i = t.blendMode){
        this._mixer = e, this._clip = t, this._localRoot = n, this.blendMode = i;
        let r = t.tracks, o = r.length, a = new Array(o), l = {
            endingStart: Mi,
            endingEnd: Mi
        };
        for(let c = 0; c !== o; ++c){
            let h = r[c].createInterpolant(null);
            a[c] = h, h.settings = l;
        }
        this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Id, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
    }
    isRunning() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return this._startTime = e, this;
    }
    setLoop(e, t) {
        return this.loop = e, this.repetitions = t, this;
    }
    setEffectiveWeight(e) {
        return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if (e.fadeOut(t), this.fadeIn(t), n) {
            let i = this._clip.duration, r = e._clip.duration, o = r / i, a = i / r;
            e.warp(1, o, t), this.warp(a, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        let e = this._weightInterpolant;
        return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    setEffectiveTimeScale(e) {
        return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return this.timeScale = this._clip.duration / e, this.stopWarping();
    }
    syncWith(e) {
        return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        let i = this._mixer, r = i.time, o = this.timeScale, a = this._timeScaleInterpolant;
        a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
        let l = a.parameterPositions, c = a.sampleValues;
        return l[0] = r, l[1] = r + n, c[0] = e / o, c[1] = t / o, this;
    }
    stopWarping() {
        let e = this._timeScaleInterpolant;
        return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        let r = this._startTime;
        if (r !== null) {
            let l = (e - r) * n;
            if (l < 0 || n === 0) return;
            this._startTime = null, t = n * l;
        }
        t *= this._updateTimeScale(e);
        let o = this._updateTime(t), a = this._updateWeight(e);
        if (a > 0) {
            let l1 = this._interpolants, c = this._propertyBindings;
            switch(this.blendMode){
                case qc:
                    for(let h = 0, u = l1.length; h !== u; ++h)l1[h].evaluate(o), c[h].accumulateAdditive(a);
                    break;
                case ua:
                default:
                    for(let h1 = 0, u1 = l1.length; h1 !== u1; ++h1)l1[h1].evaluate(o), c[h1].accumulate(i, a);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return this._effectiveWeight = t, t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            n !== null && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t));
        }
        return this._effectiveTimeScale = t, t;
    }
    _updateTime(e) {
        let t = this._clip.duration, n = this.loop, i = this.time + e, r = this._loopCount, o = n === Dd;
        if (e === 0) return r === -1 ? i : o && (r & 1) === 1 ? t - i : i;
        if (n === Pd) {
            r === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                });
            }
        } else {
            if (r === -1 && (e >= 0 ? (r = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= t || i < 0) {
                let a = Math.floor(i / t);
                i -= t * a, r += Math.abs(a);
                let l = this.repetitions - r;
                if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1
                });
                else {
                    if (l === 1) {
                        let c = e < 0;
                        this._setEndings(c, !c, o);
                    } else this._setEndings(!1, !1, o);
                    this._loopCount = r, this.time = i, this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: a
                    });
                }
            } else this.time = i;
            if (o && (r & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        let i = this._interpolantSettings;
        n ? (i.endingStart = bi, i.endingEnd = bi) : (e ? i.endingStart = this.zeroSlopeAtStart ? bi : Mi : i.endingStart = Os, t ? i.endingEnd = this.zeroSlopeAtEnd ? bi : Mi : i.endingEnd = Os);
    }
    _scheduleFading(e, t, n) {
        let i = this._mixer, r = i.time, o = this._weightInterpolant;
        o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
        let a = o.parameterPositions, l = o.sampleValues;
        return a[0] = r, l[0] = t, a[1] = r + e, l[1] = n, this;
    }
}, $h = class extends En {
    constructor(e){
        super();
        this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
    }
    _bindAction(e, t) {
        let n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, a = e._interpolants, l = n.uuid, c = this._bindingsByRootAndName, h = c[l];
        h === void 0 && (h = {}, c[l] = h);
        for(let u = 0; u !== r; ++u){
            let d = i[u], f = d.name, m = h[f];
            if (m !== void 0) o[u] = m;
            else {
                if (m = o[u], m !== void 0) {
                    m._cacheIndex === null && (++m.referenceCount, this._addInactiveBinding(m, l, f));
                    continue;
                }
                let x = t && t._propertyBindings[u].binding.parsedPath;
                m = new Xh(ke.create(n, f, x), d.ValueTypeName, d.getValueSize()), ++m.referenceCount, this._addInactiveBinding(m, l, f), o[u] = m;
            }
            a[u].resultBuffer = m.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                let n = (e._localRoot || this._root).uuid, i = e._clip.uuid, r = this._actionsByClip[i];
                this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, i, n);
            }
            let t = e._propertyBindings;
            for(let n1 = 0, i1 = t.length; n1 !== i1; ++n1){
                let r1 = t[n1];
                r1.useCount++ === 0 && (this._lendBinding(r1), r1.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                --r.useCount === 0 && (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        let e = this;
        this.stats = {
            actions: {
                get total () {
                    return e._actions.length;
                },
                get inUse () {
                    return e._nActiveActions;
                }
            },
            bindings: {
                get total () {
                    return e._bindings.length;
                },
                get inUse () {
                    return e._nActiveBindings;
                }
            },
            controlInterpolants: {
                get total () {
                    return e._controlInterpolants.length;
                },
                get inUse () {
                    return e._nActiveControlInterpolants;
                }
            }
        };
    }
    _isActiveAction(e) {
        let t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        let i = this._actions, r = this._actionsByClip, o = r[t];
        if (o === void 0) o = {
            knownActions: [
                e
            ],
            actionByRoot: {}
        }, e._byClipCacheIndex = 0, r[t] = o;
        else {
            let a = o.knownActions;
            e._byClipCacheIndex = a.length, a.push(e);
        }
        e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
    }
    _removeInactiveAction(e) {
        let t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
        n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
        let r = e._clip.uuid, o = this._actionsByClip, a = o[r], l = a.knownActions, c = l[l.length - 1], h = e._byClipCacheIndex;
        c._byClipCacheIndex = h, l[h] = c, l.pop(), e._byClipCacheIndex = null;
        let u = a.actionByRoot, d = (e._localRoot || this._root).uuid;
        delete u[d], l.length === 0 && delete o[r], this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        let t = e._propertyBindings;
        for(let n = 0, i = t.length; n !== i; ++n){
            let r = t[n];
            --r.referenceCount === 0 && this._removeInactiveBinding(r);
        }
    }
    _lendAction(e) {
        let t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackAction(e) {
        let t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _addInactiveBinding(e, t, n) {
        let i = this._bindingsByRootAndName, r = this._bindings, o = i[t];
        o === void 0 && (o = {}, i[t] = o), o[n] = e, e._cacheIndex = r.length, r.push(e);
    }
    _removeInactiveBinding(e) {
        let t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, a = o[i], l = t[t.length - 1], c = e._cacheIndex;
        l._cacheIndex = c, t[c] = l, t.pop(), delete a[r], Object.keys(a).length === 0 && delete o[i];
    }
    _lendBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _lendControlInterpolant() {
        let e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
        return n === void 0 && (n = new Na(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = t, e[t] = n), n;
    }
    _takeBackControlInterpolant(e) {
        let t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
        e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
    }
    clipAction(e, t, n) {
        let i = t || this._root, r = i.uuid, o = typeof e == "string" ? Lr.findByName(i, e) : e, a = o !== null ? o.uuid : e, l = this._actionsByClip[a], c = null;
        if (n === void 0 && (o !== null ? n = o.blendMode : n = ua), l !== void 0) {
            let u = l.actionByRoot[r];
            if (u !== void 0 && u.blendMode === n) return u;
            c = l.knownActions[0], o === null && (o = c._clip);
        }
        if (o === null) return null;
        let h = new Zh(this, o, t, n);
        return this._bindAction(h, c), this._addInactiveAction(h, a, r), h;
    }
    existingAction(e, t) {
        let n = t || this._root, i = n.uuid, r = typeof e == "string" ? Lr.findByName(n, e) : e, o = r ? r.uuid : e, a = this._actionsByClip[o];
        return a !== void 0 && a.actionByRoot[i] || null;
    }
    stopAllAction() {
        let e = this._actions, t = this._nActiveActions;
        for(let n = t - 1; n >= 0; --n)e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        let t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1;
        for(let c = 0; c !== n; ++c)t[c]._update(i, e, r, o);
        let a = this._bindings, l = this._nActiveBindings;
        for(let c1 = 0; c1 !== l; ++c1)a[c1].apply(o);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        let t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
        if (r !== void 0) {
            let o = r.knownActions;
            for(let a = 0, l = o.length; a !== l; ++a){
                let c = o[a];
                this._deactivateAction(c);
                let h = c._cacheIndex, u = t[t.length - 1];
                c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = h, t[h] = u, t.pop(), this._removeInactiveBindingsForAction(c);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        let t = e.uuid, n = this._actionsByClip;
        for(let o in n){
            let a = n[o].actionByRoot, l = a[t];
            l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
        }
        let i = this._bindingsByRootAndName, r = i[t];
        if (r !== void 0) for(let o1 in r){
            let a1 = r[o1];
            a1.restoreOriginalState(), this._removeInactiveBinding(a1);
        }
    }
    uncacheAction(e, t) {
        let n = this.existingAction(e, t);
        n !== null && (this._deactivateAction(n), this._removeInactiveAction(n));
    }
};
$h.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
var go = class {
    constructor(e){
        typeof e == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
    }
    clone() {
        return new go(this.value.clone === void 0 ? this.value : this.value.clone());
    }
}, jh = class extends $n {
    constructor(e, t, n = 1){
        super(e, t);
        this.meshPerAttribute = n;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    clone(e) {
        let t = super.clone(e);
        return t.meshPerAttribute = this.meshPerAttribute, t;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
    }
};
jh.prototype.isInstancedInterleavedBuffer = !0;
var Qh = class {
    constructor(e, t, n, i, r){
        this.buffer = e, this.type = t, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return this.buffer = e, this;
    }
    setType(e, t) {
        return this.type = e, this.elementSize = t, this;
    }
    setItemSize(e) {
        return this.itemSize = e, this;
    }
    setCount(e) {
        return this.count = e, this;
    }
};
Qh.prototype.isGLBufferAttribute = !0;
var Ey = class {
    constructor(e, t, n = 0, i = 1 / 0){
        this.ray = new Cn(e, t), this.near = n, this.far = i, this.camera = null, this.layers = new Js, this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        };
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
    }
    intersectObject(e, t = !0, n = []) {
        return la(e, this, n, t), n.sort(Pc), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for(let i = 0, r = e.length; i < r; i++)la(e[i], this, n, t);
        return n.sort(Pc), n;
    }
};
function Pc(s, e) {
    return s.distance - e.distance;
}
function la(s, e, t, n) {
    if (s.layers.test(e.layers) && s.raycast(e, t), n === !0) {
        let i = s.children;
        for(let r = 0, o = i.length; r < o; r++)la(i[r], e, t, !0);
    }
}
var Ay = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
    }
    makeSafe() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + t * t + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(mt(t / this.radius, -1, 1))), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Cy = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Ic = new X, qi = class {
    constructor(e = new X(1 / 0, 1 / 0), t = new X(-1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ic.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ic.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
qi.prototype.isBox2 = !0;
var Dc = new M, Ts = new M, Kh = class {
    constructor(e = new M, t = new M){
        this.start = e, this.end = t;
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        Dc.subVectors(e, this.start), Ts.subVectors(this.end, this.start);
        let n = Ts.dot(Ts), r = Ts.dot(Dc) / n;
        return t && (r = mt(r, 0, 1)), r;
    }
    closestPointToPoint(e, t, n) {
        let i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Fc = new M, Ly = class extends Ne {
    constructor(e, t){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
        let n = new _e, i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1
        ];
        for(let o = 0, a = 1, l = 32; o < l; o++, a++){
            let c = o / l * Math.PI * 2, h = a / l * Math.PI * 2;
            i.push(Math.cos(c), Math.sin(c), 1, Math.cos(h), Math.sin(h), 1);
        }
        n.setAttribute("position", new de(i, 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new wt(n, r), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateMatrixWorld();
        let e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e), Fc.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Fc), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
    }
}, yn = new M, Es = new pe, Qo = new pe, eu = class extends wt {
    constructor(e){
        let t = tu(e), n = new _e, i = [], r = [], o = new ae(0, 0, 1), a = new ae(0, 1, 0);
        for(let c = 0; c < t.length; c++){
            let h = t[c];
            h.parent && h.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(a.r, a.g, a.b));
        }
        n.setAttribute("position", new de(i, 3)), n.setAttribute("color", new de(r, 3));
        let l = new ft({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        super(n, l);
        this.type = "SkeletonHelper", this.isSkeletonHelper = !0, this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    }
    updateMatrixWorld(e) {
        let t = this.bones, n = this.geometry, i = n.getAttribute("position");
        Qo.copy(this.root.matrixWorld).invert();
        for(let r = 0, o = 0; r < t.length; r++){
            let a = t[r];
            a.parent && a.parent.isBone && (Es.multiplyMatrices(Qo, a.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o, yn.x, yn.y, yn.z), Es.multiplyMatrices(Qo, a.parent.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o + 1, yn.x, yn.y, yn.z), o += 2);
        }
        n.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
    }
};
function tu(s) {
    let e = [];
    s && s.isBone && e.push(s);
    for(let t = 0; t < s.children.length; t++)e.push.apply(e, tu(s.children[t]));
    return e;
}
var Ry = class extends st {
    constructor(e, t, n){
        let i = new Fi(t, 4, 2), r = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        super(i, r);
        this.light = e, this.light.updateMatrixWorld(), this.color = n, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
    }
}, Py = new M, Nc = new ae, Bc = new ae, Iy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
        let i = new Ii(t);
        i.rotateY(Math.PI * .5), this.material = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }), this.color === void 0 && (this.material.vertexColors = !0);
        let r = i.getAttribute("position"), o = new Float32Array(r.count * 3);
        i.setAttribute("color", new Ue(o, 3)), this.add(new st(i, this.material)), this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
    update() {
        let e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            let t = e.geometry.getAttribute("color");
            Nc.copy(this.light.color), Bc.copy(this.light.groundColor);
            for(let n = 0, i = t.count; n < i; n++){
                let r = n < i / 2 ? Nc : Bc;
                t.setXYZ(n, r.r, r.g, r.b);
            }
            t.needsUpdate = !0;
        }
        e.lookAt(Py.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}, nu = class extends wt {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848){
        n = new ae(n), i = new ae(i);
        let r = t / 2, o = e / t, a = e / 2, l = [], c = [];
        for(let d = 0, f = 0, m = -a; d <= t; d++, m += o){
            l.push(-a, 0, m, a, 0, m), l.push(m, 0, -a, m, 0, a);
            let x = d === r ? n : i;
            x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3;
        }
        let h = new _e;
        h.setAttribute("position", new de(l, 3)), h.setAttribute("color", new de(c, 3));
        let u = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(h, u);
        this.type = "GridHelper";
    }
}, Dy = class extends wt {
    constructor(e = 10, t = 16, n = 8, i = 64, r = 4473924, o = 8947848){
        r = new ae(r), o = new ae(o);
        let a = [], l = [];
        for(let u = 0; u <= t; u++){
            let d = u / t * (Math.PI * 2), f = Math.sin(d) * e, m = Math.cos(d) * e;
            a.push(0, 0, 0), a.push(f, 0, m);
            let x = u & 1 ? r : o;
            l.push(x.r, x.g, x.b), l.push(x.r, x.g, x.b);
        }
        for(let u1 = 0; u1 <= n; u1++){
            let d1 = u1 & 1 ? r : o, f1 = e - e / n * u1;
            for(let m1 = 0; m1 < i; m1++){
                let x1 = m1 / i * (Math.PI * 2), v = Math.sin(x1) * f1, g = Math.cos(x1) * f1;
                a.push(v, 0, g), l.push(d1.r, d1.g, d1.b), x1 = (m1 + 1) / i * (Math.PI * 2), v = Math.sin(x1) * f1, g = Math.cos(x1) * f1, a.push(v, 0, g), l.push(d1.r, d1.g, d1.b);
            }
        }
        let c = new _e;
        c.setAttribute("position", new de(a, 3)), c.setAttribute("color", new de(l, 3));
        let h = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(c, h);
        this.type = "PolarGridHelper";
    }
}, zc = new M, As = new M, Uc = new M, Fy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, t === void 0 && (t = 1);
        let i = new _e;
        i.setAttribute("position", new de([
            -t,
            t,
            0,
            t,
            t,
            0,
            t,
            -t,
            0,
            -t,
            -t,
            0,
            -t,
            t,
            0
        ], 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new on(i, r), this.add(this.lightPlane), i = new _e, i.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            0,
            1
        ], 3)), this.targetLine = new on(i, r), this.add(this.targetLine), this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
    }
    update() {
        zc.setFromMatrixPosition(this.light.matrixWorld), As.setFromMatrixPosition(this.light.target.matrixWorld), Uc.subVectors(As, zc), this.lightPlane.lookAt(As), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(As), this.targetLine.scale.z = Uc.length();
    }
}, Cs = new M, Qe = new Ir, Ny = class extends wt {
    constructor(e){
        let t = new _e, n = new ft({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        }), i = [], r = [], o = {}, a = new ae(16755200), l = new ae(16711680), c = new ae(43775), h = new ae(16777215), u = new ae(3355443);
        d("n1", "n2", a), d("n2", "n4", a), d("n4", "n3", a), d("n3", "n1", a), d("f1", "f2", a), d("f2", "f4", a), d("f4", "f3", a), d("f3", "f1", a), d("n1", "f1", a), d("n2", "f2", a), d("n3", "f3", a), d("n4", "f4", a), d("p", "n1", l), d("p", "n2", l), d("p", "n3", l), d("p", "n4", l), d("u1", "u2", c), d("u2", "u3", c), d("u3", "u1", c), d("c", "t", h), d("p", "c", u), d("cn1", "cn2", u), d("cn3", "cn4", u), d("cf1", "cf2", u), d("cf3", "cf4", u);
        function d(m, x, v) {
            f(m, v), f(x, v);
        }
        function f(m, x) {
            i.push(0, 0, 0), r.push(x.r, x.g, x.b), o[m] === void 0 && (o[m] = []), o[m].push(i.length / 3 - 1);
        }
        t.setAttribute("position", new de(i, 3)), t.setAttribute("color", new de(r, 3));
        super(t, n);
        this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
    }
    update() {
        let e = this.geometry, t = this.pointMap, n = 1, i = 1;
        Qe.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), et("c", t, e, Qe, 0, 0, -1), et("t", t, e, Qe, 0, 0, 1), et("n1", t, e, Qe, -n, -i, -1), et("n2", t, e, Qe, n, -i, -1), et("n3", t, e, Qe, -n, i, -1), et("n4", t, e, Qe, n, i, -1), et("f1", t, e, Qe, -n, -i, 1), et("f2", t, e, Qe, n, -i, 1), et("f3", t, e, Qe, -n, i, 1), et("f4", t, e, Qe, n, i, 1), et("u1", t, e, Qe, n * .7, i * 1.1, -1), et("u2", t, e, Qe, -n * .7, i * 1.1, -1), et("u3", t, e, Qe, 0, i * 2, -1), et("cf1", t, e, Qe, -n, 0, 1), et("cf2", t, e, Qe, n, 0, 1), et("cf3", t, e, Qe, 0, -i, 1), et("cf4", t, e, Qe, 0, i, 1), et("cn1", t, e, Qe, -n, 0, -1), et("cn2", t, e, Qe, n, 0, -1), et("cn3", t, e, Qe, 0, -i, -1), et("cn4", t, e, Qe, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function et(s, e, t, n, i, r, o) {
    Cs.set(i, r, o).unproject(n);
    let a = e[s];
    if (a !== void 0) {
        let l = t.getAttribute("position");
        for(let c = 0, h = a.length; c < h; c++)l.setXYZ(a[c], Cs.x, Cs.y, Cs.z);
    }
}
var Ls = new Lt, iu = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = new Float32Array(8 * 3), r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new Ue(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
    }
    update(e) {
        if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Ls.setFromObject(this.object), Ls.isEmpty()) return;
        let t = Ls.min, n = Ls.max, i = this.geometry.attributes.position, r = i.array;
        r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return this.object = e, this.update(), this;
    }
    copy(e) {
        return wt.prototype.copy.call(this, e), this.object = e.object, this;
    }
}, By = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            -1
        ], r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new de(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        let t = this.box;
        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
    }
}, zy = class extends on {
    constructor(e, t = 1, n = 16776960){
        let i = n, r = [
            1,
            -1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ], o = new _e;
        o.setAttribute("position", new de(r, 3)), o.computeBoundingSphere();
        super(o, new ft({
            color: i,
            toneMapped: !1
        }));
        this.type = "PlaneHelper", this.plane = e, this.size = t;
        let a = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1
        ], l = new _e;
        l.setAttribute("position", new de(a, 3)), l.computeBoundingSphere(), this.add(new st(l, new hn({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })));
    }
    updateMatrixWorld(e) {
        let t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? it : Ai, this.lookAt(this.plane.normal), super.updateMatrixWorld(e);
    }
}, Oc = new M, Rs, Ko, Uy = class extends Ne {
    constructor(e = new M(0, 0, 1), t = new M(0, 0, 0), n = 1, i = 16776960, r = n * .2, o = r * .2){
        super();
        this.type = "ArrowHelper", Rs === void 0 && (Rs = new _e, Rs.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            1,
            0
        ], 3)), Ko = new Jn(0, .5, 1, 5, 1), Ko.translate(0, -.5, 0)), this.position.copy(t), this.line = new on(Rs, new ft({
            color: i,
            toneMapped: !1
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new st(Ko, new hn({
            color: i,
            toneMapped: !1
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
    }
    setDirection(e) {
        if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            Oc.set(e.z, 0, -e.x).normalize();
            let t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(Oc, t);
        }
    }
    setLength(e, t = e * .2, n = t * .2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
    }
}, ru = class extends wt {
    constructor(e = 1){
        let t = [
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e
        ], n = [
            1,
            0,
            0,
            1,
            .6,
            0,
            0,
            1,
            0,
            .6,
            1,
            0,
            0,
            0,
            1,
            0,
            .6,
            1
        ], i = new _e;
        i.setAttribute("position", new de(t, 3)), i.setAttribute("color", new de(n, 3));
        let r = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(i, r);
        this.type = "AxesHelper";
    }
    setColors(e, t, n) {
        let i = new ae, r = this.geometry.attributes.color.array;
        return i.set(e), i.toArray(r, 0), i.toArray(r, 3), i.set(t), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, Oy = class {
    constructor(){
        this.type = "ShapePath", this.color = new ae, this.subPaths = [], this.currentPath = null;
    }
    moveTo(e, t) {
        return this.currentPath = new gr, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        return this.currentPath.bezierCurveTo(e, t, n, i, r, o), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e, t) {
        function n(p) {
            let _ = [];
            for(let y = 0, b = p.length; y < b; y++){
                let A = p[y], L = new Xt;
                L.curves = A.curves, _.push(L);
            }
            return _;
        }
        function i(p, _) {
            let y = _.length, b = !1;
            for(let A = y - 1, L = 0; L < y; A = L++){
                let I = _[A], k = _[L], B = k.x - I.x, P = k.y - I.y;
                if (Math.abs(P) > Number.EPSILON) {
                    if (P < 0 && (I = _[L], B = -B, k = _[A], P = -P), p.y < I.y || p.y > k.y) continue;
                    if (p.y === I.y) {
                        if (p.x === I.x) return !0;
                    } else {
                        let w = P * (p.x - I.x) - B * (p.y - I.y);
                        if (w === 0) return !0;
                        if (w < 0) continue;
                        b = !b;
                    }
                } else {
                    if (p.y !== I.y) continue;
                    if (k.x <= p.x && p.x <= I.x || I.x <= p.x && p.x <= k.x) return !0;
                }
            }
            return b;
        }
        let r = Jt.isClockWise, o = this.subPaths;
        if (o.length === 0) return [];
        if (t === !0) return n(o);
        let a, l, c, h = [];
        if (o.length === 1) return l = o[0], c = new Xt, c.curves = l.curves, h.push(c), h;
        let u = !r(o[0].getPoints());
        u = e ? !u : u;
        let d = [], f = [], m = [], x = 0, v;
        f[x] = void 0, m[x] = [];
        for(let p = 0, _ = o.length; p < _; p++)l = o[p], v = l.getPoints(), a = r(v), a = e ? !a : a, a ? (!u && f[x] && x++, f[x] = {
            s: new Xt,
            p: v
        }, f[x].s.curves = l.curves, u && x++, m[x] = []) : m[x].push({
            h: l,
            p: v[0]
        });
        if (!f[0]) return n(o);
        if (f.length > 1) {
            let p1 = !1, _1 = [];
            for(let y = 0, b = f.length; y < b; y++)d[y] = [];
            for(let y1 = 0, b1 = f.length; y1 < b1; y1++){
                let A = m[y1];
                for(let L = 0; L < A.length; L++){
                    let I = A[L], k = !0;
                    for(let B = 0; B < f.length; B++)i(I.p, f[B].p) && (y1 !== B && _1.push({
                        froms: y1,
                        tos: B,
                        hole: L
                    }), k ? (k = !1, d[B].push(I)) : p1 = !0);
                    k && d[y1].push(I);
                }
            }
            _1.length > 0 && (p1 || (m = d));
        }
        let g;
        for(let p2 = 0, _2 = f.length; p2 < _2; p2++){
            c = f[p2].s, h.push(c), g = m[p2];
            for(let y2 = 0, b2 = g.length; y2 < b2; y2++)c.holes.push(g[y2].h);
        }
        return h;
    }
}, su = new Float32Array(1), Hy = new Int32Array(su.buffer), ky = class {
    static toHalfFloat(e) {
        e > 65504 && (console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."), e = 65504), su[0] = e;
        let t = Hy[0], n = t >> 16 & 32768, i = t >> 12 & 2047, r = t >> 23 & 255;
        return r < 103 ? n : r > 142 ? (n |= 31744, n |= (r == 255 ? 0 : 1) && t & 8388607, n) : r < 113 ? (i |= 2048, n |= (i >> 114 - r) + (i >> 113 - r & 1), n) : (n |= r - 112 << 10 | i >> 1, n += i & 1, n);
    }
}, b0 = 0, w0 = 1, S0 = 0, T0 = 1, E0 = 2;
function A0(s) {
    return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), s;
}
function C0(s = []) {
    return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), s.isMultiMaterial = !0, s.materials = s, s.clone = function() {
        return s.slice();
    }, s;
}
function L0(s, e) {
    return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new zr(s, e);
}
function R0(s) {
    return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ro(s);
}
function P0(s, e) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new zr(s, e);
}
function I0(s) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function D0(s) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function F0(s) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function N0(s, e, t) {
    return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new M(s, e, t);
}
function B0(s, e) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new Ue(s, e).setUsage(ur);
}
function z0(s, e) {
    return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new jc(s, e);
}
function U0(s, e) {
    return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new Qc(s, e);
}
function O0(s, e) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Kc(s, e);
}
function H0(s, e) {
    return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new eh(s, e);
}
function k0(s, e) {
    return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Ys(s, e);
}
function G0(s, e) {
    return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new th(s, e);
}
function V0(s, e) {
    return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Zs(s, e);
}
function W0(s, e) {
    return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new de(s, e);
}
function q0(s, e) {
    return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new ih(s, e);
}
Ct.create = function(s, e) {
    return console.log("THREE.Curve.create() has been deprecated"), s.prototype = Object.create(Ct.prototype), s.prototype.constructor = s, s.prototype.getPoint = e, s;
};
gr.prototype.fromPoints = function(s) {
    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(s);
};
function X0(s) {
    return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new ru(s);
}
function J0(s, e) {
    return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new iu(s, e);
}
function Y0(s, e) {
    return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new wt(new _a(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
nu.prototype.setColors = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
};
eu.prototype.update = function() {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
};
function Z0(s, e) {
    return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new wt(new Ea(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
bt.prototype.extractUrlBase = function(s) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Gs.extractUrlBase(s);
};
bt.Handlers = {
    add: function() {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");
    },
    get: function() {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");
    }
};
function $0(s) {
    return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new Yt(s);
}
function j0(s) {
    return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new Nh(s);
}
qi.prototype.center = function(s) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
qi.prototype.empty = function() {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
qi.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
qi.prototype.size = function(s) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(s);
};
Lt.prototype.center = function(s) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
Lt.prototype.empty = function() {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Lt.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Lt.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
Lt.prototype.size = function(s) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(s);
};
An.prototype.empty = function() {
    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Dr.prototype.setFromMatrix = function(s) {
    return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(s);
};
Kh.prototype.center = function(s) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
lt.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
lt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
};
lt.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
};
lt.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
pe.prototype.extractPosition = function(s) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(s);
};
pe.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
pe.prototype.getPosition = function() {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), new M().setFromMatrixColumn(this, 3);
};
pe.prototype.setRotationFromQuaternion = function(s) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(s);
};
pe.prototype.multiplyToArray = function() {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
};
pe.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector4 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
};
pe.prototype.rotateAxis = function(s) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), s.transformDirection(this);
};
pe.prototype.crossVector = function(s) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.translate = function() {
    console.error("THREE.Matrix4: .translate() has been removed.");
};
pe.prototype.rotateX = function() {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
};
pe.prototype.rotateY = function() {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
};
pe.prototype.rotateZ = function() {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
};
pe.prototype.rotateByAxis = function() {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
};
pe.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
};
pe.prototype.makeFrustum = function(s, e, t, n, i, r) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(s, e, n, t, i, r);
};
pe.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
Wt.prototype.isIntersectionLine = function(s) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(s);
};
gt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), s.applyQuaternion(this);
};
gt.prototype.inverse = function() {
    return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert();
};
Cn.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Cn.prototype.isIntersectionPlane = function(s) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(s);
};
Cn.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
nt.prototype.area = function() {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
};
nt.prototype.barycoordFromPoint = function(s, e) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(s, e);
};
nt.prototype.midpoint = function(s) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(s);
};
nt.prototypenormal = function(s) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(s);
};
nt.prototype.plane = function(s) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(s);
};
nt.barycoordFromPoint = function(s, e, t, n, i) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), nt.getBarycoord(s, e, t, n, i);
};
nt.normal = function(s, e, t, n) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), nt.getNormal(s, e, t, n);
};
Xt.prototype.extractAllPoints = function(s) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(s);
};
Xt.prototype.extrude = function(s) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new ln(this, s);
};
Xt.prototype.makeGeometry = function(s) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Di(this, s);
};
X.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
X.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
X.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
M.prototype.setEulerFromRotationMatrix = function() {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
};
M.prototype.setEulerFromQuaternion = function() {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
};
M.prototype.getPositionFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(s);
};
M.prototype.getScaleFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(s);
};
M.prototype.getColumnFromMatrix = function(s, e) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, s);
};
M.prototype.applyProjection = function(s) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(s);
};
M.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
M.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
M.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ve.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
Ve.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ne.prototype.getChildByName = function(s) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(s);
};
Ne.prototype.renderDepth = function() {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
};
Ne.prototype.translate = function(s, e) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, s);
};
Ne.prototype.getWorldRotation = function() {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
};
Ne.prototype.applyMatrix = function(s) {
    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(Ne.prototype, {
    eulerOrder: {
        get: function() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
        },
        set: function(s) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = s;
        }
    },
    useQuaternion: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        },
        set: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        }
    }
});
st.prototype.setDrawMode = function() {
    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
};
Object.defineProperties(st.prototype, {
    drawMode: {
        get: function() {
            return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), Fd;
        },
        set: function() {
            console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
        }
    }
});
so.prototype.initBones = function() {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
};
ut.prototype.setLens = function(s, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), e !== void 0 && (this.filmGauge = e), this.setFocalLength(s);
};
Object.defineProperties(Bt.prototype, {
    onlyShadow: {
        set: function() {
            console.warn("THREE.Light: .onlyShadow has been removed.");
        }
    },
    shadowCameraFov: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = s;
        }
    },
    shadowCameraLeft: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = s;
        }
    },
    shadowCameraRight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = s;
        }
    },
    shadowCameraTop: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = s;
        }
    },
    shadowCameraBottom: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = s;
        }
    },
    shadowCameraNear: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = s;
        }
    },
    shadowCameraFar: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = s;
        }
    },
    shadowCameraVisible: {
        set: function() {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
        }
    },
    shadowBias: {
        set: function(s) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = s;
        }
    },
    shadowDarkness: {
        set: function() {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
        }
    },
    shadowMapWidth: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = s;
        }
    },
    shadowMapHeight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = s;
        }
    }
});
Object.defineProperties(Ue.prototype, {
    length: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
        }
    },
    dynamic: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === ur;
        },
        set: function() {
            console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(ur);
        }
    }
});
Ue.prototype.setDynamic = function(s) {
    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
Ue.prototype.copyIndicesArray = function() {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
}, Ue.prototype.setArray = function() {
    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
_e.prototype.addIndex = function(s) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(s);
};
_e.prototype.addAttribute = function(s, e) {
    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), !(e && e.isBufferAttribute) && !(e && e.isInterleavedBufferAttribute) ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(s, new Ue(arguments[1], arguments[2]))) : s === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e), this) : this.setAttribute(s, e);
};
_e.prototype.addDrawCall = function(s, e, t) {
    t !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(s, e);
};
_e.prototype.clearDrawCalls = function() {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
};
_e.prototype.computeOffsets = function() {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
};
_e.prototype.removeAttribute = function(s) {
    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(s);
};
_e.prototype.applyMatrix = function(s) {
    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(_e.prototype, {
    drawcalls: {
        get: function() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
        }
    },
    offsets: {
        get: function() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
        }
    }
});
$n.prototype.setDynamic = function(s) {
    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
$n.prototype.setArray = function() {
    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
ln.prototype.getArrays = function() {
    console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.");
};
ln.prototype.addShapeList = function() {
    console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.");
};
ln.prototype.addShape = function() {
    console.error("THREE.ExtrudeGeometry: .addShape() has been removed.");
};
no.prototype.dispose = function() {
    console.error("THREE.Scene: .dispose() has been removed.");
};
go.prototype.onUpdate = function() {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
};
Object.defineProperties(dt.prototype, {
    wrapAround: {
        get: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        }
    },
    overdraw: {
        get: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        }
    },
    wrapRGB: {
        get: function() {
            return console.warn("THREE.Material: .wrapRGB has been removed."), new ae;
        }
    },
    shading: {
        get: function() {
            console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = s === kc;
        }
    },
    stencilMask: {
        get: function() {
            return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask;
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = s;
        }
    },
    vertexTangents: {
        get: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        },
        set: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        }
    }
});
Object.defineProperties(sn.prototype, {
    derivatives: {
        get: function() {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
        },
        set: function(s) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = s;
        }
    }
});
qe.prototype.clearTarget = function(s, e, t, n) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(s), this.clear(e, t, n);
};
qe.prototype.animate = function(s) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(s);
};
qe.prototype.getCurrentRenderTarget = function() {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
};
qe.prototype.getMaxAnisotropy = function() {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
};
qe.prototype.getPrecision = function() {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
};
qe.prototype.resetGLState = function() {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
};
qe.prototype.supportsFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
};
qe.prototype.supportsHalfFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
};
qe.prototype.supportsStandardDerivatives = function() {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
};
qe.prototype.supportsCompressedTextureS3TC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
};
qe.prototype.supportsCompressedTexturePVRTC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
};
qe.prototype.supportsBlendMinMax = function() {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
};
qe.prototype.supportsVertexTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
};
qe.prototype.supportsInstancedArrays = function() {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
};
qe.prototype.enableScissorTest = function(s) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(s);
};
qe.prototype.initMaterial = function() {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
};
qe.prototype.addPrePlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
};
qe.prototype.addPostPlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
};
qe.prototype.updateShadowMap = function() {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
};
qe.prototype.setFaceCulling = function() {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
};
qe.prototype.allocTextureUnit = function() {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
};
qe.prototype.setTexture = function() {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
};
qe.prototype.setTexture2D = function() {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
};
qe.prototype.setTextureCube = function() {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
};
qe.prototype.getActiveMipMapLevel = function() {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
};
Object.defineProperties(qe.prototype, {
    shadowMapEnabled: {
        get: function() {
            return this.shadowMap.enabled;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = s;
        }
    },
    shadowMapType: {
        get: function() {
            return this.shadowMap.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = s;
        }
    },
    shadowMapCullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    context: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
        }
    },
    vr: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr;
        }
    },
    gammaInput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
        }
    },
    gammaOutput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = s === !0 ? Oi : Nt;
        }
    },
    toneMappingWhitePoint: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");
        }
    },
    gammaFactor: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
        }
    }
});
Object.defineProperties(yh.prototype, {
    cullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    renderReverseSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        }
    },
    renderSingleSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        }
    }
});
function Q0(s, e, t) {
    return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new js(s, t);
}
Object.defineProperties(At.prototype, {
    wrapS: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = s;
        }
    },
    wrapT: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = s;
        }
    },
    magFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = s;
        }
    },
    minFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = s;
        }
    },
    anisotropy: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = s;
        }
    },
    offset: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = s;
        }
    },
    repeat: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = s;
        }
    },
    format: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = s;
        }
    },
    type: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = s;
        }
    },
    generateMipmaps: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = s;
        }
    }
});
Za.prototype.load = function(s) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    let e = this;
    return new kh().load(s, function(n) {
        e.setBuffer(n);
    }), this;
};
qh.prototype.getData = function() {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
};
$s.prototype.updateCubeMap = function(s, e) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(s, e);
};
$s.prototype.clear = function(s, e, t, n) {
    return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(s, e, t, n);
};
Yn.crossOrigin = void 0;
Yn.loadTexture = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    let i = new Bh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadTextureCube = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    let i = new Fh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadCompressedTexture = function() {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
};
Yn.loadCompressedTextureCube = function() {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
};
function K0() {
    console.error("THREE.CanvasRenderer has been removed");
}
function ev() {
    console.error("THREE.JSONLoader has been removed.");
}
var tv = {
    createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    }
};
function nv() {
    console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js");
}
function iv() {
    return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"), new _e;
}
function rv() {
    return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"), new _e;
}
function sv() {
    console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js");
}
function ov() {
    console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js");
}
function av() {
    console.error("THREE.ImmediateRenderObject has been removed.");
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
    detail: {
        revision: ca
    }
}));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = ca);
const mod = {
    ACESFilmicToneMapping: Uu,
    AddEquation: _i,
    AddOperation: Fu,
    AdditiveAnimationBlendMode: qc,
    AdditiveBlending: nl,
    AlphaFormat: Xu,
    AlwaysDepth: Au,
    AlwaysStencilFunc: Ud,
    AmbientLight: qa,
    AmbientLightProbe: Vh,
    AnimationClip: Lr,
    AnimationLoader: cy,
    AnimationMixer: $h,
    AnimationObjectGroup: Yh,
    AnimationUtils: Ze,
    ArcCurve: Ma,
    ArrayCamera: ga,
    ArrowHelper: Uy,
    Audio: Za,
    AudioAnalyser: qh,
    AudioContext: Hh,
    AudioListener: my,
    AudioLoader: kh,
    AxesHelper: ru,
    AxisHelper: X0,
    BackSide: it,
    BasicDepthPacking: Nd,
    BasicShadowMap: qy,
    BinaryTextureLoader: j0,
    Bone: oo,
    BooleanKeyframeTrack: Qn,
    BoundingBoxHelper: J0,
    Box2: qi,
    Box3: Lt,
    Box3Helper: By,
    BoxBufferGeometry: wn,
    BoxGeometry: wn,
    BoxHelper: iu,
    BufferAttribute: Ue,
    BufferGeometry: _e,
    BufferGeometryLoader: Uh,
    ByteType: Hu,
    Cache: Ni,
    Camera: Ir,
    CameraHelper: Ny,
    CanvasRenderer: K0,
    CanvasTexture: Th,
    CatmullRomCurve3: wa,
    CineonToneMapping: zu,
    CircleBufferGeometry: fr,
    CircleGeometry: fr,
    ClampToEdgeWrapping: vt,
    Clock: Wh,
    Color: ae,
    ColorKeyframeTrack: Ba,
    CompressedTexture: va,
    CompressedTextureLoader: hy,
    ConeBufferGeometry: pr,
    ConeGeometry: pr,
    CubeCamera: $s,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    CubeTexture: ki,
    CubeTextureLoader: Fh,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    CubicInterpolant: Ph,
    CullFaceBack: tl,
    CullFaceFront: du,
    CullFaceFrontBack: Wy,
    CullFaceNone: uu,
    Curve: Ct,
    CurvePath: Ah,
    CustomBlending: pu,
    CustomToneMapping: Ou,
    CylinderBufferGeometry: Jn,
    CylinderGeometry: Jn,
    Cylindrical: Cy,
    DataTexture: qn,
    DataTexture2DArray: Qs,
    DataTexture3D: ma,
    DataTextureLoader: Nh,
    DataUtils: ky,
    DecrementStencilOp: n0,
    DecrementWrapStencilOp: r0,
    DefaultLoadingManager: ly,
    DepthFormat: Vn,
    DepthStencilFormat: Li,
    DepthTexture: ks,
    DirectionalLight: Wa,
    DirectionalLightHelper: Fy,
    DiscreteInterpolant: Ih,
    DodecahedronBufferGeometry: mr,
    DodecahedronGeometry: mr,
    DoubleSide: Ci,
    DstAlphaFactor: Mu,
    DstColorFactor: wu,
    DynamicBufferAttribute: B0,
    DynamicCopyUsage: y0,
    DynamicDrawUsage: ur,
    DynamicReadUsage: m0,
    EdgesGeometry: _a,
    EdgesHelper: Y0,
    EllipseCurve: Ur,
    EqualDepth: Lu,
    EqualStencilFunc: l0,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    Euler: Zn,
    EventDispatcher: En,
    ExtrudeBufferGeometry: ln,
    ExtrudeGeometry: ln,
    FaceColors: T0,
    FileLoader: Yt,
    FlatShading: kc,
    Float16BufferAttribute: nh,
    Float32Attribute: W0,
    Float32BufferAttribute: de,
    Float64Attribute: q0,
    Float64BufferAttribute: ih,
    FloatType: nn,
    Fog: Br,
    FogExp2: Nr,
    Font: ov,
    FontLoader: sv,
    FramebufferTexture: Sh,
    FrontSide: Ai,
    Frustum: Dr,
    GLBufferAttribute: Qh,
    GLSL1: _0,
    GLSL3: xl,
    GreaterDepth: Pu,
    GreaterEqualDepth: Ru,
    GreaterEqualStencilFunc: d0,
    GreaterStencilFunc: h0,
    GridHelper: nu,
    Group: Hn,
    HalfFloatType: kn,
    HemisphereLight: Ua,
    HemisphereLightHelper: Iy,
    HemisphereLightProbe: Gh,
    IcosahedronBufferGeometry: _r,
    IcosahedronGeometry: _r,
    ImageBitmapLoader: Oh,
    ImageLoader: Rr,
    ImageUtils: Yn,
    ImmediateRenderObject: av,
    IncrementStencilOp: t0,
    IncrementWrapStencilOp: i0,
    InstancedBufferAttribute: Xn,
    InstancedBufferGeometry: Ya,
    InstancedInterleavedBuffer: jh,
    InstancedMesh: xa,
    Int16Attribute: H0,
    Int16BufferAttribute: eh,
    Int32Attribute: G0,
    Int32BufferAttribute: th,
    Int8Attribute: z0,
    Int8BufferAttribute: jc,
    IntType: Gu,
    InterleavedBuffer: $n,
    InterleavedBufferAttribute: Sn,
    Interpolant: cn,
    InterpolateDiscrete: zs,
    InterpolateLinear: Us,
    InterpolateSmooth: yo,
    InvertStencilOp: s0,
    JSONLoader: ev,
    KeepStencilOp: vo,
    KeyframeTrack: zt,
    LOD: bh,
    LatheBufferGeometry: Mr,
    LatheGeometry: Mr,
    Layers: Js,
    LensFlare: nv,
    LessDepth: Cu,
    LessEqualDepth: ea,
    LessEqualStencilFunc: c0,
    LessStencilFunc: a0,
    Light: Bt,
    LightProbe: Hr,
    Line: on,
    Line3: Kh,
    LineBasicMaterial: ft,
    LineCurve: Or,
    LineCurve3: Eh,
    LineDashedMaterial: Fa,
    LineLoop: ya,
    LinePieces: w0,
    LineSegments: wt,
    LineStrip: b0,
    LinearEncoding: Nt,
    LinearFilter: tt,
    LinearInterpolant: Na,
    LinearMipMapLinearFilter: $y,
    LinearMipMapNearestFilter: Zy,
    LinearMipmapLinearFilter: Ui,
    LinearMipmapNearestFilter: Wc,
    LinearToneMapping: Nu,
    Loader: bt,
    LoaderUtils: Gs,
    LoadingManager: za,
    LoopOnce: Pd,
    LoopPingPong: Dd,
    LoopRepeat: Id,
    LuminanceAlphaFormat: Yu,
    LuminanceFormat: Ju,
    MOUSE: Gy,
    Material: dt,
    MaterialLoader: zh,
    Math: M0,
    MathUtils: M0,
    Matrix3: lt,
    Matrix4: pe,
    MaxEquation: ol,
    Mesh: st,
    MeshBasicMaterial: hn,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshFaceMaterial: A0,
    MeshLambertMaterial: Ia,
    MeshMatcapMaterial: Da,
    MeshNormalMaterial: Pa,
    MeshPhongMaterial: La,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshToonMaterial: Ra,
    MinEquation: sl,
    MirroredRepeatWrapping: Bs,
    MixOperation: Du,
    MultiMaterial: C0,
    MultiplyBlending: rl,
    MultiplyOperation: Vs,
    NearestFilter: rt,
    NearestMipMapLinearFilter: Yy,
    NearestMipMapNearestFilter: Jy,
    NearestMipmapLinearFilter: na,
    NearestMipmapNearestFilter: ta,
    NeverDepth: Eu,
    NeverStencilFunc: o0,
    NoBlending: vn,
    NoColors: S0,
    NoToneMapping: _n,
    NormalAnimationBlendMode: ua,
    NormalBlending: sr,
    NotEqualDepth: Iu,
    NotEqualStencilFunc: u0,
    NumberKeyframeTrack: Ar,
    Object3D: Ne,
    ObjectLoader: uy,
    ObjectSpaceNormalMap: zd,
    OctahedronBufferGeometry: Ii,
    OctahedronGeometry: Ii,
    OneFactor: yu,
    OneMinusDstAlphaFactor: bu,
    OneMinusDstColorFactor: Su,
    OneMinusSrcAlphaFactor: Vc,
    OneMinusSrcColorFactor: _u,
    OrthographicCamera: Fr,
    PCFShadowMap: Hc,
    PCFSoftShadowMap: fu,
    PMREMGenerator: ah,
    ParametricGeometry: iv,
    Particle: R0,
    ParticleBasicMaterial: D0,
    ParticleSystem: P0,
    ParticleSystemMaterial: F0,
    Path: gr,
    PerspectiveCamera: ut,
    Plane: Wt,
    PlaneBufferGeometry: Pi,
    PlaneGeometry: Pi,
    PlaneHelper: zy,
    PointCloud: L0,
    PointCloudMaterial: I0,
    PointLight: Ga,
    PointLightHelper: Ry,
    Points: zr,
    PointsMaterial: jn,
    PolarGridHelper: Dy,
    PolyhedronBufferGeometry: an,
    PolyhedronGeometry: an,
    PositionalAudio: xy,
    PropertyBinding: ke,
    PropertyMixer: Xh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    Quaternion: gt,
    QuaternionKeyframeTrack: Wi,
    QuaternionLinearInterpolant: Dh,
    REVISION: ca,
    RGBADepthPacking: Bd,
    RGBAFormat: ct,
    RGBAIntegerFormat: ed,
    RGBA_ASTC_10x10_Format: fd,
    RGBA_ASTC_10x5_Format: hd,
    RGBA_ASTC_10x6_Format: ud,
    RGBA_ASTC_10x8_Format: dd,
    RGBA_ASTC_12x10_Format: pd,
    RGBA_ASTC_12x12_Format: md,
    RGBA_ASTC_4x4_Format: nd,
    RGBA_ASTC_5x4_Format: id,
    RGBA_ASTC_5x5_Format: rd,
    RGBA_ASTC_6x5_Format: sd,
    RGBA_ASTC_6x6_Format: od,
    RGBA_ASTC_8x5_Format: ad,
    RGBA_ASTC_8x6_Format: ld,
    RGBA_ASTC_8x8_Format: cd,
    RGBA_BPTC_Format: gd,
    RGBA_ETC2_EAC_Format: gl,
    RGBA_PVRTC_2BPPV1_Format: pl,
    RGBA_PVRTC_4BPPV1_Format: fl,
    RGBA_S3TC_DXT1_Format: ll,
    RGBA_S3TC_DXT3_Format: cl,
    RGBA_S3TC_DXT5_Format: hl,
    RGBFormat: Gn,
    RGBIntegerFormat: Ku,
    RGB_ETC1_Format: td,
    RGB_ETC2_Format: ml,
    RGB_PVRTC_2BPPV1_Format: dl,
    RGB_PVRTC_4BPPV1_Format: ul,
    RGB_S3TC_DXT1_Format: al,
    RGFormat: ju,
    RGIntegerFormat: Qu,
    RawShaderMaterial: Gi,
    Ray: Cn,
    Raycaster: Ey,
    RectAreaLight: Xa,
    RedFormat: Zu,
    RedIntegerFormat: $u,
    ReinhardToneMapping: Bu,
    RepeatWrapping: Ns,
    ReplaceStencilOp: e0,
    ReverseSubtractEquation: gu,
    RingBufferGeometry: br,
    RingGeometry: br,
    SRGB8_ALPHA8_ASTC_10x10_Format: Cd,
    SRGB8_ALPHA8_ASTC_10x5_Format: Td,
    SRGB8_ALPHA8_ASTC_10x6_Format: Ed,
    SRGB8_ALPHA8_ASTC_10x8_Format: Ad,
    SRGB8_ALPHA8_ASTC_12x10_Format: Ld,
    SRGB8_ALPHA8_ASTC_12x12_Format: Rd,
    SRGB8_ALPHA8_ASTC_4x4_Format: xd,
    SRGB8_ALPHA8_ASTC_5x4_Format: yd,
    SRGB8_ALPHA8_ASTC_5x5_Format: vd,
    SRGB8_ALPHA8_ASTC_6x5_Format: _d,
    SRGB8_ALPHA8_ASTC_6x6_Format: Md,
    SRGB8_ALPHA8_ASTC_8x5_Format: bd,
    SRGB8_ALPHA8_ASTC_8x6_Format: wd,
    SRGB8_ALPHA8_ASTC_8x8_Format: Sd,
    Scene: no,
    SceneUtils: tv,
    ShaderChunk: Fe,
    ShaderLib: qt,
    ShaderMaterial: sn,
    ShadowMaterial: Aa,
    Shape: Xt,
    ShapeBufferGeometry: Di,
    ShapeGeometry: Di,
    ShapePath: Oy,
    ShapeUtils: Jt,
    ShortType: ku,
    Skeleton: ao,
    SkeletonHelper: eu,
    SkinnedMesh: so,
    SmoothShading: Xy,
    Sphere: An,
    SphereBufferGeometry: Fi,
    SphereGeometry: Fi,
    Spherical: Ay,
    SphericalHarmonics3: Ja,
    SplineCurve: uo,
    SpotLight: Ha,
    SpotLightHelper: Ly,
    Sprite: ro,
    SpriteMaterial: io,
    SrcAlphaFactor: Gc,
    SrcAlphaSaturateFactor: Tu,
    SrcColorFactor: vu,
    StaticCopyUsage: x0,
    StaticDrawUsage: hr,
    StaticReadUsage: p0,
    StereoCamera: fy,
    StreamCopyUsage: v0,
    StreamDrawUsage: f0,
    StreamReadUsage: g0,
    StringKeyframeTrack: Kn,
    SubtractEquation: mu,
    SubtractiveBlending: il,
    TOUCH: Vy,
    TangentSpaceNormalMap: Hi,
    TetrahedronBufferGeometry: wr,
    TetrahedronGeometry: wr,
    TextGeometry: rv,
    Texture: ot,
    TextureLoader: Bh,
    TorusBufferGeometry: Sr,
    TorusGeometry: Sr,
    TorusKnotBufferGeometry: Tr,
    TorusKnotGeometry: Tr,
    Triangle: nt,
    TriangleFanDrawMode: Qy,
    TriangleStripDrawMode: jy,
    TrianglesDrawMode: Fd,
    TubeBufferGeometry: Er,
    TubeGeometry: Er,
    UVMapping: ha,
    Uint16Attribute: k0,
    Uint16BufferAttribute: Ys,
    Uint32Attribute: V0,
    Uint32BufferAttribute: Zs,
    Uint8Attribute: U0,
    Uint8BufferAttribute: Qc,
    Uint8ClampedAttribute: O0,
    Uint8ClampedBufferAttribute: Kc,
    Uniform: go,
    UniformsLib: ie,
    UniformsUtils: uf,
    UnsignedByteType: rn,
    UnsignedInt248Type: Ti,
    UnsignedIntType: Ps,
    UnsignedShort4444Type: Vu,
    UnsignedShort5551Type: Wu,
    UnsignedShort565Type: qu,
    UnsignedShortType: cr,
    VSMShadowMap: ir,
    Vector2: X,
    Vector3: M,
    Vector4: Ve,
    VectorKeyframeTrack: Cr,
    Vertex: N0,
    VertexColors: E0,
    VideoTexture: wh,
    WebGL1Renderer: _h,
    WebGLCubeRenderTarget: js,
    WebGLMultipleRenderTargets: Zc,
    WebGLMultisampleRenderTarget: Xs,
    WebGLRenderTarget: At,
    WebGLRenderTargetCube: Q0,
    WebGLRenderer: qe,
    WebGLUtils: Ex,
    WireframeGeometry: Ea,
    WireframeHelper: Z0,
    WrapAroundEnding: Os,
    XHRLoader: $0,
    ZeroCurvatureEnding: Mi,
    ZeroFactor: xu,
    ZeroSlopeEnding: bi,
    ZeroStencilOp: Ky,
    sRGBEncoding: Oi
};
function getWebGLErrorMessage() {
    return getErrorMessage(1);
}
function getErrorMessage(version) {
    var names = {
        1: "WebGL",
        2: "WebGL 2"
    };
    var contexts = {
        1: window.WebGLRenderingContext,
        2: window.WebGL2RenderingContext
    };
    var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
    var element = document.createElement("div");
    element.id = "webglmessage";
    element.style.fontFamily = "monospace";
    element.style.fontSize = "13px";
    element.style.fontWeight = "normal";
    element.style.textAlign = "center";
    element.style.background = "#fff";
    element.style.color = "#000";
    element.style.padding = "1.5em";
    element.style.width = "400px";
    element.style.margin = "5em auto 0";
    if (contexts[version]) {
        message = message.replace("$0", "graphics card");
    } else {
        message = message.replace("$0", "browser");
    }
    message = message.replace("$1", names[version]);
    element.innerHTML = message;
    return element;
}
const pixelRatio = window.devicePixelRatio || 1.0;
function event2scene_pixel(scene, event) {
    const { canvas  } = scene.screen;
    const rect = canvas.getBoundingClientRect();
    const x = (event.clientX - rect.left) * pixelRatio;
    const y = (rect.height - (event.clientY - rect.top)) * pixelRatio;
    return [
        x,
        y
    ];
}
function Identity4x4() {
    return new pe();
}
function in_scene(scene, mouse_event) {
    const [x, y] = event2scene_pixel(scene, mouse_event);
    const [sx, sy, sw, sh] = scene.pixelarea.value;
    return x >= sx && x < sx + sw && y >= sy && y < sy + sh;
}
function attach_3d_camera(canvas, makie_camera, cam3d, scene) {
    if (cam3d === undefined) {
        return;
    }
    const [w, h] = makie_camera.resolution.value;
    const camera = new ut(cam3d.fov, w / h, cam3d.near, cam3d.far);
    const center = new M(...cam3d.lookat);
    camera.up = new M(...cam3d.upvector);
    camera.position.set(...cam3d.eyeposition);
    camera.lookAt(center);
    function update() {
        camera.updateProjectionMatrix();
        camera.updateWorldMatrix();
        const view = camera.matrixWorldInverse;
        const projection = camera.projectionMatrix;
        const [width, height] = makie_camera.resolution.value;
        const [x, y, z] = camera.position;
        makie_camera.update_matrices(view.elements, projection.elements, [
            width,
            height
        ], [
            x,
            y,
            z
        ]);
    }
    function addMouseHandler(domObject, drag, zoomIn, zoomOut) {
        let startDragX = null;
        let startDragY = null;
        function mouseWheelHandler(e) {
            e = window.event || e;
            if (!in_scene(scene, e)) {
                return;
            }
            const delta = Math.sign(e.deltaY);
            if (delta == -1) {
                zoomOut();
            } else if (delta == 1) {
                zoomIn();
            }
            e.preventDefault();
        }
        function mouseDownHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseMoveHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            if (startDragX === null || startDragY === null) return;
            if (drag) drag(e.clientX - startDragX, e.clientY - startDragY);
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseUpHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            mouseMoveHandler.call(this, e);
            startDragX = null;
            startDragY = null;
            e.preventDefault();
        }
        domObject.addEventListener("wheel", mouseWheelHandler);
        domObject.addEventListener("mousedown", mouseDownHandler);
        domObject.addEventListener("mousemove", mouseMoveHandler);
        domObject.addEventListener("mouseup", mouseUpHandler);
    }
    function drag(deltaX, deltaY) {
        const radPerPixel = Math.PI / 450;
        const deltaPhi = radPerPixel * deltaX;
        const deltaTheta = radPerPixel * deltaY;
        const pos = camera.position.sub(center);
        const radius = pos.length();
        let theta = Math.acos(pos.z / radius);
        let phi = Math.atan2(pos.y, pos.x);
        theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);
        phi -= deltaPhi;
        pos.x = radius * Math.sin(theta) * Math.cos(phi);
        pos.y = radius * Math.sin(theta) * Math.sin(phi);
        pos.z = radius * Math.cos(theta);
        camera.position.add(center);
        camera.lookAt(center);
        update();
    }
    function zoomIn() {
        camera.position.sub(center).multiplyScalar(0.9).add(center);
        update();
    }
    function zoomOut() {
        camera.position.sub(center).multiplyScalar(1.1).add(center);
        update();
    }
    addMouseHandler(canvas, drag, zoomIn, zoomOut);
}
function mul(a, b) {
    return b.clone().multiply(a);
}
function orthographicprojection(left, right, bottom, top, znear, zfar) {
    return [
        2 / (right - left),
        0,
        0,
        0,
        0,
        2 / (top - bottom),
        0,
        0,
        0,
        0,
        -2 / (zfar - znear),
        0,
        -(right + left) / (right - left),
        -(top + bottom) / (top - bottom),
        -(zfar + znear) / (zfar - znear),
        1
    ];
}
function pixel_space_inverse(w, h, near) {
    return [
        0.5 * w,
        0,
        0,
        0,
        0,
        0.5 * h,
        0,
        0,
        0,
        0,
        near,
        0,
        0.5 * w,
        0.5 * h,
        0,
        1
    ];
}
function relative_space() {
    const relative = Identity4x4();
    relative.fromArray([
        2,
        0,
        0,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        1,
        0,
        -1,
        -1,
        0,
        1
    ]);
    return relative;
}
class MakieCamera {
    constructor(){
        this.view = new go(Identity4x4());
        this.projection = new go(Identity4x4());
        this.projectionview = new go(Identity4x4());
        this.pixel_space = new go(Identity4x4());
        this.pixel_space_inverse = new go(Identity4x4());
        this.projectionview_inverse = new go(Identity4x4());
        this.relative_space = new go(relative_space());
        this.relative_inverse = new go(relative_space().invert());
        this.clip_space = new go(Identity4x4());
        this.resolution = new go(new X());
        this.eyeposition = new go(new M());
        this.preprojections = {};
    }
    calculate_matrices() {
        const [w, h] = this.resolution.value;
        const nearclip = -10_000;
        this.pixel_space.value.fromArray(orthographicprojection(0, w, 0, h, nearclip, 10_000));
        this.pixel_space_inverse.value.fromArray(pixel_space_inverse(w, h, nearclip));
        const proj_view = mul(this.view.value, this.projection.value);
        this.projectionview.value = proj_view;
        this.projectionview_inverse.value = proj_view.clone().invert();
        Object.keys(this.preprojections).forEach((key)=>{
            const [space, markerspace] = key.split(",");
            this.preprojections[key].value = this.calculate_preprojection_matrix(space, markerspace);
        });
    }
    update_matrices(view, projection, resolution, eyepos) {
        this.view.value.fromArray(view);
        this.projection.value.fromArray(projection);
        this.resolution.value.fromArray(resolution);
        this.eyeposition.value.fromArray(eyepos);
        this.calculate_matrices();
        return;
    }
    clip_to_space(space) {
        if (space === "data") {
            return this.projectionview_inverse.value;
        } else if (space === "pixel") {
            return this.pixel_space_inverse.value;
        } else if (space === "relative") {
            return this.relative_inverse.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    space_to_clip(space) {
        if (space === "data") {
            return this.projectionview.value;
        } else if (space === "pixel") {
            return this.pixel_space.value;
        } else if (space === "relative") {
            return this.relative_space.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    calculate_preprojection_matrix(space, markerspace) {
        const cp = this.clip_to_space(markerspace);
        const sc = this.space_to_clip(space);
        return mul(sc, cp);
    }
    preprojection_matrix(space, markerspace) {
        const key = [
            space,
            markerspace
        ];
        const matrix_uniform = this.preprojections[key];
        if (matrix_uniform) {
            return matrix_uniform;
        } else {
            const matrix = this.calculate_preprojection_matrix(space, markerspace);
            const uniform = new go(matrix);
            this.preprojections[key] = uniform;
            return uniform;
        }
    }
}
const scene_cache = {};
const plot_cache = {};
const TEXTURE_ATLAS = [
    undefined
];
function add_scene(scene_id, three_scene) {
    scene_cache[scene_id] = three_scene;
}
function find_scene(scene_id) {
    return scene_cache[scene_id];
}
function delete_scene(scene_id) {
    const scene = scene_cache[scene_id];
    if (!scene) {
        return;
    }
    while(scene.children.length > 0){
        scene.remove(scene.children[0]);
    }
    delete scene_cache[scene_id];
}
function find_plots(plot_uuids) {
    const plots = [];
    plot_uuids.forEach((id)=>{
        const plot = plot_cache[id];
        if (plot) {
            plots.push(plot);
        }
    });
    return plots;
}
function delete_scenes(scene_uuids, plot_uuids) {
    plot_uuids.forEach((plot_id)=>{
        delete plot_cache[plot_id];
    });
    scene_uuids.forEach((scene_id)=>{
        delete_scene(scene_id);
    });
}
function insert_plot(scene_id, plot_data) {
    const scene = find_scene(scene_id);
    plot_data.forEach((plot)=>{
        add_plot(scene, plot);
    });
}
function delete_plots(scene_id, plot_uuids) {
    console.log(`deleting plots!: ${plot_uuids}`);
    const scene = find_scene(scene_id);
    const plots = find_plots(plot_uuids);
    plots.forEach((p)=>{
        scene.remove(p);
        delete plot_cache[p];
    });
}
function convert_texture(data) {
    const tex = create_texture(data);
    tex.needsUpdate = true;
    tex.minFilter = mod[data.minFilter];
    tex.magFilter = mod[data.magFilter];
    tex.anisotropy = data.anisotropy;
    tex.wrapS = mod[data.wrapS];
    if (data.size.length > 1) {
        tex.wrapT = mod[data.wrapT];
    }
    if (data.size.length > 2) {
        tex.wrapR = mod[data.wrapR];
    }
    return tex;
}
function is_three_fixed_array(value) {
    return value instanceof mod.Vector2 || value instanceof mod.Vector3 || value instanceof mod.Vector4 || value instanceof mod.Matrix4;
}
function to_uniform(data) {
    if (data.type !== undefined) {
        if (data.type == "Sampler") {
            return convert_texture(data);
        }
        throw new Error(`Type ${data.type} not known`);
    }
    if (Array.isArray(data) || ArrayBuffer.isView(data)) {
        if (!data.every((x)=>typeof x === "number")) {
            return data;
        }
        if (data.length == 2) {
            return new mod.Vector2().fromArray(data);
        }
        if (data.length == 3) {
            return new mod.Vector3().fromArray(data);
        }
        if (data.length == 4) {
            return new mod.Vector4().fromArray(data);
        }
        if (data.length == 16) {
            const mat = new mod.Matrix4();
            mat.fromArray(data);
            return mat;
        }
    }
    return data;
}
function deserialize_uniforms(data) {
    const result = {};
    for(const name in data){
        const value = data[name];
        if (value instanceof mod.Uniform) {
            result[name] = value;
        } else {
            const ser = to_uniform(value);
            result[name] = new mod.Uniform(ser);
        }
    }
    return result;
}
function deserialize_plot(data) {
    let mesh;
    if ("instance_attributes" in data) {
        mesh = create_instanced_mesh(data);
    } else {
        mesh = create_mesh(data);
    }
    mesh.name = data.name;
    mesh.frustumCulled = false;
    mesh.matrixAutoUpdate = false;
    mesh.plot_uuid = data.uuid;
    const update_visible = (v)=>{
        mesh.visible = v;
        return;
    };
    update_visible(data.visible.value);
    data.visible.on(update_visible);
    connect_uniforms(mesh, data.uniform_updater);
    connect_attributes(mesh, data.attribute_updater);
    return mesh;
}
const ON_NEXT_INSERT = new Set();
function on_next_insert(f) {
    ON_NEXT_INSERT.add(f);
}
function add_plot(scene, plot_data) {
    const cam = scene.wgl_camera;
    const identity = new mod.Uniform(new mod.Matrix4());
    if (plot_data.cam_space == "data") {
        plot_data.uniforms.view = cam.view;
        plot_data.uniforms.projection = cam.projection;
        plot_data.uniforms.projectionview = cam.projectionview;
        plot_data.uniforms.eyeposition = cam.eyeposition;
    } else if (plot_data.cam_space == "pixel") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.pixel_space;
        plot_data.uniforms.projectionview = cam.pixel_space;
    } else if (plot_data.cam_space == "relative") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.relative_space;
        plot_data.uniforms.projectionview = cam.relative_space;
    } else {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = identity;
        plot_data.uniforms.projectionview = identity;
    }
    plot_data.uniforms.resolution = cam.resolution;
    if (plot_data.uniforms.preprojection) {
        const { space , markerspace  } = plot_data;
        plot_data.uniforms.preprojection = cam.preprojection_matrix(space.value, markerspace.value);
    }
    const p = deserialize_plot(plot_data);
    plot_cache[plot_data.uuid] = p;
    scene.add(p);
    const next_insert = new Set(ON_NEXT_INSERT);
    next_insert.forEach((f)=>f());
}
function connect_uniforms(mesh, updater) {
    updater.on(([name, data])=>{
        if (name === "none") {
            return;
        }
        const uniform = mesh.material.uniforms[name];
        if (uniform.value.isTexture) {
            const im_data = uniform.value.image;
            const [size, tex_data] = data;
            if (tex_data.length == im_data.data.length) {
                im_data.data.set(tex_data);
            } else {
                const old_texture = uniform.value;
                uniform.value = re_create_texture(old_texture, tex_data, size);
                old_texture.dispose();
            }
            uniform.value.needsUpdate = true;
        } else {
            if (is_three_fixed_array(uniform.value)) {
                uniform.value.fromArray(data);
            } else {
                uniform.value = data;
            }
        }
    });
}
function create_texture(data) {
    const buffer = data.data;
    if (data.size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, data.size[0], data.size[1], data.size[2]);
        tex.format = mod[data.three_format];
        tex.type = mod[data.three_type];
        return tex;
    } else {
        const tex_data = buffer == "texture_atlas" ? TEXTURE_ATLAS[0].value : buffer;
        return new mod.DataTexture(tex_data, data.size[0], data.size[1], mod[data.three_format], mod[data.three_type]);
    }
}
function re_create_texture(old_texture, buffer, size) {
    if (size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, size[0], size[1], size[2]);
        tex.format = old_texture.format;
        tex.type = old_texture.type;
        return tex;
    } else {
        return new mod.DataTexture(buffer, size[0], size[1] ? size[1] : 1, old_texture.format, old_texture.type);
    }
}
function BufferAttribute(buffer) {
    const jsbuff = new mod.BufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function InstanceBufferAttribute(buffer) {
    const jsbuff = new mod.InstancedBufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function attach_geometry(buffer_geometry, vertexarrays, faces) {
    for(const name in vertexarrays){
        const buff = vertexarrays[name];
        let buffer;
        if (buff.to_update) {
            buffer = new mod.BufferAttribute(buff.to_update, buff.itemSize);
        } else {
            buffer = BufferAttribute(buff);
        }
        buffer_geometry.setAttribute(name, buffer);
    }
    buffer_geometry.setIndex(faces);
    buffer_geometry.boundingSphere = new mod.Sphere();
    buffer_geometry.boundingSphere.radius = 10000000000000;
    buffer_geometry.frustumCulled = false;
    return buffer_geometry;
}
function attach_instanced_geometry(buffer_geometry, instance_attributes) {
    for(const name in instance_attributes){
        const buffer = InstanceBufferAttribute(instance_attributes[name]);
        buffer_geometry.setAttribute(name, buffer);
    }
}
function recreate_geometry(mesh, vertexarrays, faces) {
    const buffer_geometry = new mod.BufferGeometry();
    attach_geometry(buffer_geometry, vertexarrays, faces);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function recreate_instanced_geometry(mesh) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const vertexarrays = {};
    const instance_attributes = {};
    const faces = [
        ...mesh.geometry.index.array
    ];
    Object.keys(mesh.geometry.attributes).forEach((name)=>{
        const buffer = mesh.geometry.attributes[name];
        const copy = buffer.to_update ? buffer.to_update : buffer.array.map((x)=>x);
        if (buffer.isInstancedBufferAttribute) {
            instance_attributes[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        } else {
            vertexarrays[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        }
    });
    attach_geometry(buffer_geometry, vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, instance_attributes);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function create_material(program) {
    const is_volume = "volumedata" in program.uniforms;
    return new mod.RawShaderMaterial({
        uniforms: deserialize_uniforms(program.uniforms),
        vertexShader: program.vertex_source,
        fragmentShader: program.fragment_source,
        side: is_volume ? mod.BackSide : mod.DoubleSide,
        transparent: true,
        depthTest: !program.overdraw.value,
        depthWrite: !program.transparency.value
    });
}
function create_mesh(program) {
    const buffer_geometry = new mod.BufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function create_instanced_mesh(program) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, program.instance_attributes);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function first(x) {
    return x[Object.keys(x)[0]];
}
function connect_attributes(mesh, updater) {
    const instance_buffers = {};
    const geometry_buffers = {};
    let first_instance_buffer;
    const real_instance_length = [
        0
    ];
    let first_geometry_buffer;
    const real_geometry_length = [
        0
    ];
    function re_assign_buffers() {
        const attributes = mesh.geometry.attributes;
        Object.keys(attributes).forEach((name)=>{
            const buffer = attributes[name];
            if (buffer.isInstancedBufferAttribute) {
                instance_buffers[name] = buffer;
            } else {
                geometry_buffers[name] = buffer;
            }
        });
        first_instance_buffer = first(instance_buffers);
        if (first_instance_buffer) {
            real_instance_length[0] = first_instance_buffer.count;
        }
        first_geometry_buffer = first(geometry_buffers);
        real_geometry_length[0] = first_geometry_buffer.count;
    }
    re_assign_buffers();
    updater.on(([name, new_values, length])=>{
        const buffer = mesh.geometry.attributes[name];
        let buffers;
        let real_length;
        let is_instance = false;
        if (name in instance_buffers) {
            buffers = instance_buffers;
            first_instance_buffer;
            real_length = real_instance_length;
            is_instance = true;
        } else {
            buffers = geometry_buffers;
            first_geometry_buffer;
            real_length = real_geometry_length;
        }
        if (length <= real_length[0]) {
            buffer.set(new_values);
            buffer.needsUpdate = true;
            if (is_instance) {
                mesh.geometry.instanceCount = length;
            }
        } else {
            buffer.to_update = new_values;
            const all_have_same_length = Object.values(buffers).every((x)=>x.to_update && x.to_update.length / x.itemSize == length);
            if (all_have_same_length) {
                if (is_instance) {
                    recreate_instanced_geometry(mesh);
                    re_assign_buffers();
                    mesh.geometry.instanceCount = new_values.length / buffer.itemSize;
                } else {
                    recreate_geometry(mesh, buffers, mesh.geometry.index);
                    re_assign_buffers();
                }
            }
        }
    });
}
function deserialize_scene(data, screen) {
    const scene = new mod.Scene();
    scene.screen = screen;
    const { canvas  } = screen;
    add_scene(data.uuid, scene);
    scene.scene_uuid = data.uuid;
    scene.frustumCulled = false;
    scene.pixelarea = data.pixelarea;
    scene.backgroundcolor = data.backgroundcolor;
    scene.clearscene = data.clearscene;
    scene.visible = data.visible;
    const camera = new MakieCamera();
    scene.wgl_camera = camera;
    function update_cam(camera_matrices) {
        const [view, projection, resolution, eyepos] = camera_matrices;
        camera.update_matrices(view, projection, resolution, eyepos);
    }
    update_cam(data.camera.value);
    if (data.cam3d_state) {
        attach_3d_camera(canvas, camera, data.cam3d_state, scene);
    } else {
        data.camera.on(update_cam);
    }
    data.plots.forEach((plot_data)=>{
        add_plot(scene, plot_data);
    });
    scene.scene_children = data.children.map((child)=>deserialize_scene(child, screen));
    return scene;
}
function delete_plot(plot) {
    delete plot_cache[plot.plot_uuid];
    const { parent  } = plot;
    if (parent) {
        parent.remove(plot);
    }
    plot.geometry.dispose();
    plot.material.dispose();
}
function delete_three_scene(scene) {
    delete scene_cache[scene.scene_uuid];
    scene.scene_children.forEach(delete_three_scene);
    while(scene.children.length > 0){
        delete_plot(scene.children[0]);
    }
}
window.THREE = mod;
const pixelRatio1 = window.devicePixelRatio || 1.0;
function render_scene(scene, picking = false) {
    const { camera , renderer  } = scene.screen;
    const canvas = renderer.domElement;
    if (!document.body.contains(canvas)) {
        console.log("EXITING WGL");
        renderer.state.reset();
        renderer.dispose();
        delete_three_scene(scene);
        return false;
    }
    if (!scene.visible.value) {
        return true;
    }
    renderer.autoClear = scene.clearscene;
    const area = scene.pixelarea.value;
    if (area) {
        const [x, y, w, h] = area.map((t)=>t / pixelRatio1);
        renderer.setViewport(x, y, w, h);
        renderer.setScissor(x, y, w, h);
        renderer.setScissorTest(true);
        if (picking) {
            renderer.setClearAlpha(0);
            renderer.setClearColor(new mod.Color(0), 0.0);
        } else {
            renderer.setClearColor(scene.backgroundcolor.value);
        }
        renderer.render(scene, camera);
    }
    return scene.scene_children.every((x)=>render_scene(x, picking));
}
function start_renderloop(three_scene) {
    const { fps  } = three_scene.screen;
    const time_per_frame = 1 / fps * 1000;
    let last_time_stamp = performance.now();
    function renderloop(timestamp) {
        if (timestamp - last_time_stamp > time_per_frame) {
            const all_rendered = render_scene(three_scene);
            if (!all_rendered) {
                return;
            }
            last_time_stamp = performance.now();
        }
        window.requestAnimationFrame(renderloop);
    }
    render_scene(three_scene);
    renderloop();
}
function throttle_function(func, delay) {
    let prev = 0;
    return (...args)=>{
        const now = new Date().getTime();
        if (now - prev > delay) {
            prev = now;
            return func(...args);
        }
    };
}
function threejs_module(canvas, comm, width, height) {
    let context = canvas.getContext("webgl2", {
        preserveDrawingBuffer: true
    });
    if (!context) {
        console.warn("WebGL 2.0 not supported by browser, falling back to WebGL 1.0 (Volume plots will not work)");
        context = canvas.getContext("webgl", {
            preserveDrawingBuffer: true
        });
    }
    if (!context) {
        return;
    }
    const renderer = new mod.WebGLRenderer({
        antialias: true,
        canvas: canvas,
        context: context,
        powerPreference: "high-performance"
    });
    renderer.setClearColor("#ffffff");
    renderer.setPixelRatio(pixelRatio1);
    renderer.setSize(width / pixelRatio1, height / pixelRatio1);
    const mouse_callback = (x, y)=>comm.notify({
            mouseposition: [
                x,
                y
            ]
        });
    const notify_mouse_throttled = throttle_function(mouse_callback, 40);
    function mousemove(event) {
        var rect = canvas.getBoundingClientRect();
        var x = (event.clientX - rect.left) * pixelRatio1;
        var y = (event.clientY - rect.top) * pixelRatio1;
        notify_mouse_throttled(x, y);
        return false;
    }
    canvas.addEventListener("mousemove", mousemove);
    function mousedown(event) {
        comm.notify({
            mousedown: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mousedown", mousedown);
    function mouseup(event) {
        comm.notify({
            mouseup: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mouseup", mouseup);
    function wheel(event) {
        comm.notify({
            scroll: [
                event.deltaX,
                -event.deltaY
            ]
        });
        event.preventDefault();
        return false;
    }
    canvas.addEventListener("wheel", wheel);
    function keydown(event) {
        comm.notify({
            keydown: event.code
        });
        return false;
    }
    canvas.addEventListener("keydown", keydown);
    function keyup(event) {
        comm.notify({
            keyup: event.code
        });
        return false;
    }
    canvas.addEventListener("keyup", keyup);
    function contextmenu(event) {
        comm.notify({
            keyup: "delete_keys"
        });
        return false;
    }
    canvas.addEventListener("contextmenu", (e)=>e.preventDefault());
    canvas.addEventListener("focusout", contextmenu);
    return renderer;
}
function create_scene(wrapper, canvas, canvas_width, scenes, comm, width, height, fps, texture_atlas_obs) {
    const renderer = threejs_module(canvas, comm, width, height);
    TEXTURE_ATLAS[0] = texture_atlas_obs;
    if (renderer) {
        const camera = new mod.PerspectiveCamera(45, 1, 0, 100);
        camera.updateProjectionMatrix();
        const size = new mod.Vector2();
        renderer.getDrawingBufferSize(size);
        const picking_target = new mod.WebGLRenderTarget(size.x, size.y);
        const screen = {
            renderer,
            picking_target,
            camera,
            fps,
            canvas
        };
        const three_scene = deserialize_scene(scenes, screen);
        console.log(three_scene);
        start_renderloop(three_scene);
        canvas_width.on((w_h)=>{
            const pixelRatio = renderer.getPixelRatio();
            renderer.setSize(w_h[0] / pixelRatio, w_h[1] / pixelRatio);
        });
    } else {
        const warning = getWebGLErrorMessage();
        wrapper.appendChild(warning);
    }
}
function set_picking_uniforms(scene, last_id, picking, picked_plots, plots, id_to_plot) {
    scene.children.forEach((plot, index)=>{
        const { material  } = plot;
        const { uniforms  } = material;
        if (picking) {
            uniforms.object_id.value = last_id + index;
            uniforms.picking.value = true;
            material.blending = mod.NoBlending;
        } else {
            uniforms.picking.value = false;
            material.blending = mod.NormalBlending;
            const id = uniforms.object_id.value;
            if (id in picked_plots) {
                plots.push([
                    plot,
                    picked_plots[id]
                ]);
                id_to_plot[id] = plot;
            }
        }
    });
    let next_id = last_id + scene.children.length;
    scene.scene_children.forEach((scene)=>{
        next_id = set_picking_uniforms(scene, next_id, picking, picked_plots, plots, id_to_plot);
    });
    return next_id;
}
function pick_native(scene, x, y, w, h) {
    const { renderer , picking_target  } = scene.screen;
    renderer.setRenderTarget(picking_target);
    set_picking_uniforms(scene, 1, true);
    render_scene(scene, true);
    renderer.setRenderTarget(null);
    const nbytes = w * h * 4;
    const pixel_bytes = new Uint8Array(nbytes);
    renderer.readRenderTargetPixels(picking_target, x, y, w, h, pixel_bytes);
    const picked_plots = {};
    const picked_plots_array = [];
    const reinterpret_view = new DataView(pixel_bytes.buffer);
    for(let i = 0; i < pixel_bytes.length / 4; i++){
        const id = reinterpret_view.getUint16(i * 4);
        const index = reinterpret_view.getUint16(i * 4 + 2);
        picked_plots_array.push([
            id,
            index
        ]);
        picked_plots[id] = index;
    }
    const plots = [];
    const id_to_plot = {};
    set_picking_uniforms(scene, 0, false, picked_plots, plots, id_to_plot);
    const picked_plots_matrix = picked_plots_array.map(([id, index])=>{
        const p = id_to_plot[id];
        return [
            p ? p.plot_uuid : null,
            index
        ];
    });
    const plot_matrix = {
        data: picked_plots_matrix,
        size: [
            w,
            h
        ]
    };
    return [
        plot_matrix,
        plots
    ];
}
function pick_closest(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, _] = pick_native(scene, x0, y0, dx, dy);
    const plot_matrix = plot_data.data;
    let min_dist = range ^ 2;
    let selection = [
        null,
        0
    ];
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            if (d < min_dist && plot_uuid) {
                min_dist = d;
                selection = [
                    plot_uuid,
                    index
                ];
            }
        }
    }
    return selection;
}
function pick_sorted(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, selected] = pick_native(scene, x0, y0, dx, dy);
    if (selected.length == 0) {
        return [];
    }
    const plot_matrix = plot_data.data;
    const distances = selected.map((x)=>range ^ 2);
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            const plot_index = selected.findIndex((x)=>x[0].plot_uuid == plot_uuid);
            if (plot_index >= 0 && d < distances[plot_index]) {
                distances[plot_index] = d;
            }
        }
    }
    const sorted_indices = Array.from(Array(distances.length).keys()).sort((a, b)=>distances[a] < distances[b] ? -1 : distances[b] < distances[a] | 0);
    return sorted_indices.map((idx)=>{
        const [plot, index] = selected[idx];
        return [
            plot.plot_uuid,
            index
        ];
    });
}
function pick_native_uuid(scene, x, y, w, h) {
    const [_, picked_plots] = pick_native(scene, x, y, w, h);
    return picked_plots.map(([p, index])=>[
            p.plot_uuid,
            index
        ]);
}
function pick_native_matrix(scene, x, y, w, h) {
    const [matrix, _] = pick_native(scene, x, y, w, h);
    return matrix;
}
function register_popup(popup, scene, plots_to_pick, callback) {
    if (!scene || !scene.screen) {
        return;
    }
    const { canvas  } = scene.screen;
    canvas.addEventListener("mousedown", (event)=>{
        if (!popup.classList.contains("show")) {
            popup.classList.add("show");
        }
        popup.style.left = event.pageX + "px";
        popup.style.top = event.pageY + "px";
        const [x, y] = WGLMakie.event2scene_pixel(scene, event);
        const [_, picks] = WGLMakie.pick_native(scene, x, y, 1, 1);
        if (picks.length == 1) {
            const [plot, index] = picks[0];
            if (plots_to_pick.has(plot.plot_uuid)) {
                const result = callback(plot, index);
                if (typeof result === "string" || result instanceof String) {
                    popup.innerText = result;
                } else {
                    popup.innerHTML = result;
                }
            }
        } else {
            popup.classList.remove("show");
        }
    });
    canvas.addEventListener("keyup", (event)=>{
        if (event.key === "Escape") {
            popup.classList.remove("show");
        }
    });
}
window.WGL = {
    deserialize_scene,
    threejs_module,
    start_renderloop,
    delete_plots,
    insert_plot,
    find_plots,
    delete_scene,
    find_scene,
    scene_cache,
    plot_cache,
    delete_scenes,
    create_scene,
    event2scene_pixel,
    on_next_insert
};
export { deserialize_scene as deserialize_scene, threejs_module as threejs_module, start_renderloop as start_renderloop, delete_plots as delete_plots, insert_plot as insert_plot, find_plots as find_plots, delete_scene as delete_scene, find_scene as find_scene, scene_cache as scene_cache, plot_cache as plot_cache, delete_scenes as delete_scenes, create_scene as create_scene, event2scene_pixel as event2scene_pixel, on_next_insert as on_next_insert };
export { render_scene as render_scene };
export { pick_native as pick_native };
export { pick_closest as pick_closest };
export { pick_sorted as pick_sorted };
export { pick_native_uuid as pick_native_uuid };
export { pick_native_matrix as pick_native_matrix };
export { register_popup as register_popup };

" type="module"></script>
  </div>
</div>~~~
