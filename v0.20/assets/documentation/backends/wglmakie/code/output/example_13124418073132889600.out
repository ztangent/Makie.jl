~~~
<div>
  <script src="data:application/javascript;base64,    JSServe.fetch_binary('data:application/octet-stream;base64,kscsapPZJGI2OTFiZDViLTU2YjEtNDAwMC05MzU3LWY3N2I0NjA4ZDk5MYCjc3VigqdwYXlsb2Fkk8kAFmHXa5LHLGqT2SRiNjkxYmQ1Yi01NmIxLTQwMDAtOTM1Ny1mNzdiNDYwOGQ5OTGAo3N1YoKncGF5bG9hZJbIAjtrksfBapPZJGI2OTFiZDViLTU2YjEtNDAwMC05MzU3LWY3N2I0NjA4ZDk5MYOzOTMwNjI2OTUyMzMwMDY5NzgwNscgZZKzOTMwNjI2OTUyMzMwMDY5NzgwNpoBAgMEBQYHCAkKtDEzNzAzNDkwNzcxMzcxMjkwOTkyxxdlkrQxMzcwMzQ5MDc3MTM3MTI5MDk5MgG0MTcwOTkxOTk4NjA0MzU3MDc4MTfHF2WStDE3MDk5MTk5ODYwNDM1NzA3ODE3AaNzdWKDo29ic8cVaLQxNzA5OTE5OTg2MDQzNTcwNzgxN6dwYXlsb2FkyAFCZpOCszMzMzQ2MTk5MzA4MjI4MzM1NzfHFWi0MTM3MDM0OTA3NzEzNzEyOTA5OTK0MTIzMjA0MjY4MzEyMDg4ODA2ODLHFGizOTMwNjI2OTUyMzMwMDY5NzgwNtmocmV0dXJuIChpbmRleCkgPT4gewogICAgY29uc3QgdmFsdWVzID0gX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxMjMyMDQyNjgzMTIwODg4MDY4MicpLnZhbHVlCiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzMzMzQ2MTk5MzA4MjI4MzM1NzcnKS5ub3RpZnkodmFsdWVzW2luZGV4IC0gMV0pCn0K2TwvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdVdJZXYvc3JjL3dpZGdldHMuamw6NTWobXNnX3R5cGWhMcgBV2uSx1tqk9kkYjY5MWJkNWItNTZiMS00MDAwLTkzNTctZjc3YjQ2MDhkOTkxgbMyODMxMDY5MjIyNTE0OTUyNjYwxxhlkrMyODMxMDY5MjIyNTE0OTUyNjYwojEwo3N1YoOjb2JzxxRoszI4MzEwNjkyMjI1MTQ5NTI2NjCncGF5bG9hZMfGZpOA2WpyZXR1cm4gdmFsdWU9PiBKU1NlcnZlLnVwZGF0ZV9ub2RlX2F0dHJpYnV0ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjciXScpLCAnbWF4JywgdmFsdWUp2VYvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdVdJZXYvc3JjL3JlbmRlcmluZy9oeXBlcnNjcmlwdF9pbnRlZ3JhdGlvbi5qbDo5Mahtc2dfdHlwZaExyAFba5LHXGqT2SRiNjkxYmQ1Yi01NmIxLTQwMDAtOTM1Ny1mNzdiNDYwOGQ5OTGBtDE0NDU1ODY4Nzc3NjExNTY2NDIzxxhlkrQxNDQ1NTg2ODc3NzYxMTU2NjQyM6Exo3N1YoOjb2JzxxVotDE0NDU1ODY4Nzc3NjExNTY2NDIzp3BheWxvYWTHyGaTgNlscmV0dXJuIHZhbHVlPT4gSlNTZXJ2ZS51cGRhdGVfbm9kZV9hdHRyaWJ1dGUoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSI3Il0nKSwgJ3ZhbHVlJywgdmFsdWUp2VYvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdVdJZXYvc3JjL3JlbmRlcmluZy9oeXBlcnNjcmlwdF9pbnRlZ3JhdGlvbi5qbDo5Mahtc2dfdHlwZaExyAE4a5LHXGqT2SRiNjkxYmQ1Yi01NmIxLTQwMDAtOTM1Ny1mNzdiNDYwOGQ5OTGBtDEwODAzMzAzMDM2ODcyNDc1ODI3xxhlkrQxMDgwMzMwMzAzNjg3MjQ3NTgyN6Exo3N1YoOjb2JzxxVotDEwODAzMzAzMDM2ODcyNDc1ODI3p3BheWxvYWTHpWaTgNlVcmV0dXJuICh2YWwpPT4gewogICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtanNjYWxsLWlkPSI4Il0nKS5pbm5lclRleHQgPSB2YWwKfdlKL2hvbWUvcnVubmVyLy5qdWxpYS9wYWNrYWdlcy9KU1NlcnZlL3VXSWV2L3NyYy9yZW5kZXJpbmcvb2JzZXJ2YWJsZXMuamw6ODWobXNnX3R5cGWhMckAFlnda5LIRlFqk9kkYjY5MWJkNWItNTZiMS00MDAwLTkzNTctZjc3YjQ2MDhkOTkx3gEdszUzMTc0NTE3MDk0NTk0MTcyMDfHFmWSszUzMTc0NTE3MDk0NTk0MTcyMDfCtDEzNTkzMjMxMjkyMDE2MjM1NTg3xxplkrQxMzU5MzIzMTI5MjAxNjIzNTU4N5OgkAC0MTA5ODIwMjg5Njc4MjI1OTU4NjbHF2WStDEwOTgyMDI4OTY3ODIyNTk1ODY2w7M4NTUzMDQzOTUxODUxNzg2ODg3xzBlkrM4NTUzMDQzOTUxODUxNzg2ODg3xxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAsTY3MzM4NTk3NTk2Nzg4MjYwxxRlkrE2NzMzODU5NzU5Njc4ODI2MMKzNjkwODYxMTcyMzA4NjczNDA1M8cdZZKzNjkwODYxMTcyMzA4NjczNDA1M6cjRkZGRkZGtDE1OTA1MjczMzk2MTI0Njg3NjE3xx1lkrQxNTkwNTI3MzM5NjEyNDY4NzYxN5Kkbm9uZZC0MTI4NzQ3MjAwMzYyODg5NDM0MzPHF2WStDEyODc0NzIwMDM2Mjg4OTQzNDMzw7MxNjgwMzE5ODg2MzEwNjM0NjA3xydlkrMxNjgwMzE5ODg2MzEwNjM0NjA32BUAAAAAAAAAACADAABYAgAAszU4NTUxMzkxNzg2NTQ4NDQ1MTbHFmWSszU4NTUxMzkxNzg2NTQ4NDQ1MTbCszcxMjE1NzQxNzQ0MDAzMjk3MTbHHGWSszcxMjE1NzQxNzQ0MDAzMjk3MTaSpG5vbmWQszQ2OTgyNjYyMjE4Njk1OTE3NTDHMGWSszQ2OTgyNjYyMjE4Njk1OTE3NTDHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAACzMzM5NjQwMjAyMTk5Mzg1NTU5MccWZZKzMzM5NjQwMjAyMTk5Mzg1NTU5McO0MTY4NDY3NDg2NjM5ODMyMzg0NTjHHWWStDE2ODQ2NzQ4NjYzOTgzMjM4NDU4kqRub25lkLM0MTU1NzIwMzg0NTA2NTA3NjIxxxplkrM0MTU1NzIwMzg0NTA2NTA3NjIxpGRhdGGzODY3MzI4MTk0MTQ2MTI3NDQ4OMccZZKzODY3MzI4MTk0MTQ2MTI3NDQ4OJKkbm9uZZCzMTcxOTEzNjE3NzYzNzMwMzc2McccZZKzMTcxOTEzNjE3NzYzNzMwMzc2MZKkbm9uZZC0MTgwNTY2NDY0MjEyMzUzMDcyNTHHF2WStDE4MDU2NjQ2NDIxMjM1MzA3MjUxw7QxNTQ4MTA4MjQ2MDYwMDYxNTc0OMcaZZK0MTU0ODEwODI0NjA2MDA2MTU3NDiToJAAtDExMzM0NTY5NzIzNDI0Mzg3NjQ0xxdlkrQxMTMzNDU2OTcyMzQyNDM4NzY0NMK0MTQ5MzE0ODIyMjk0OTk3ODQ0NTPHHmWStDE0OTMxNDgyMjI5NDk5Nzg0NDUzpyNGRkZGRkayMzc5NzkwNDE2MjE4MDM4MTI4xxllkrIzNzk3OTA0MTYyMTgwMzgxMjikZGF0YbI1NDIwMzYzODc4OTgxNDU3MTLHFWWSsjU0MjAzNjM4Nzg5ODE0NTcxMsK0MTAxODI4NDI5MDYwNDk3MjU5OTXHF2WStDEwMTgyODQyOTA2MDQ5NzI1OTk1w7MxMzgyNjY2NjczMDgwMjcwMzU3rXRyYWNraW5nLW9ubHmzNjUxMjc3ODEyNDg4Mjc4MTg4OMcZZZKzNjUxMjc3ODEyNDg4Mjc4MTg4OJOgkAC0MTU1MTE4NDIwMTc4MDkwMDE0NTHHHWWStDE1NTExODQyMDE3ODA5MDAxNDUxkqRub25lkLQxMjM2NTExMTQ0ODI5ODcwNDU0MscbZZK0MTIzNjUxMTE0NDgyOTg3MDQ1NDKkZGF0YbM5NjM1MTY3NDM3MjU1MjQ3ODI2xxxlkrM5NjM1MTY3NDM3MjU1MjQ3ODI2kqRub25lkLM2NjAxMTM3MDA1MDM0Njk3NDg4xxZlkrM2NjAxMTM3MDA1MDM0Njk3NDg4wrQxNzQ2Nzc5NjQ3OTI1NzMwNjY3OccaZZK0MTc0Njc3OTY0NzkyNTczMDY2NzmToJAAszMzNDgzMzQ4OTExODU2NzI1MzfHFmWSszMzNDgzMzQ4OTExODU2NzI1MzfCsjMwMjcyMjA0NTEzOTMxMzc0OccbZZKyMzAyNzIyMDQ1MTM5MzEzNzQ5kqRub25lkLM4ODE4NDczOTE2NTc2MTUxMzM4xxllkrM4ODE4NDczOTE2NTc2MTUxMzM4k6CQALQxMDEyOTc3NDI3MTYzNjk2NjM2NscdZZK0MTAxMjk3NzQyNzE2MzY5NjYzNjaSpG5vbmWQtDEyNDU4MDgzMzQ1MTE2OTA1NjA1xzFlkrQxMjQ1ODA4MzM0NTExNjkwNTYwNccYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALM2MTE0MDUzMjA1NTI2MjcwNTE1xxZlkrM2MTE0MDUzMjA1NTI2MjcwNTE1wrE5OTE2Nzk3OTkxMzE3MDU0MccaZZKxOTkxNjc5Nzk5MTMxNzA1NDGSpG5vbmWQszUxMDE4NzMzODA2ODc2ODE0OTnHFmWSszUxMDE4NzMzODA2ODc2ODE0OTnCszU0NjEyMzM3NjkxMzQ5MTE2MDTHFmWSszU0NjEyMzM3NjkxMzQ5MTE2MDTCszk3MDQyOTUzMzkzMzg3MjAzNzbHFmWSszk3MDQyOTUzMzkzMzg3MjAzNzbDtDEyNzM2OTE4MDAzNjkxMzg0ODkxxx1lkrQxMjczNjkxODAwMzY5MTM4NDg5MZKkbm9uZZCxNTA2MzUyNzAzNjM5NDYyMDXHLmWSsTUwNjM1MjcwMzYzOTQ2MjA1xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAsjc2NzU4MTk3NjI5ODI3MDMwMccVZZKyNzY3NTgxOTc2Mjk4MjcwMzAxwrQxNzM3MzczMjAzNTM3MzM4MDM2NccxZZK0MTczNzM3MzIwMzUzNzMzODAzNjXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTI5MjIxNDI5MTU1NzYyODMzNzLHF2WStDEyOTIyMTQyOTE1NTc2MjgzMzcywrQxNDU1OTA5MzIwODEyMTc5NTg1MMcaZZK0MTQ1NTkwOTMyMDgxMjE3OTU4NTCToJAAtDE3NjY1MDAwODY5MDk0NDQ3OTA1xzFlkrQxNzY2NTAwMDg2OTA5NDQ0NzkwNccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxMjg5MDIyMzczNjU2MzI1OTI5NMcbZZK0MTI4OTAyMjM3MzY1NjMyNTkyOTSkZGF0YbQxNDYxMTk5ODcyMDE3MzMyNDk0MccXZZK0MTQ2MTE5OTg3MjAxNzMzMjQ5NDHCtDEzMTU2MzYxNTkzNDUzNjEyNzMxxxtlkrQxMzE1NjM2MTU5MzQ1MzYxMjczMaRkYXRhtDEwMTAyMDgxNzk5NDQ1Nzk2Mjk1xxdlkrQxMDEwMjA4MTc5OTQ0NTc5NjI5NcK0MTIyODMyMjY5OTI5NTc3MzE2NjfHHWWStDEyMjgzMjI2OTkyOTU3NzMxNjY3kqRub25lkLM0MzU2MTkyNTEyNDUzODgzODQ0xxllkrM0MzU2MTkyNTEyNDUzODgzODQ0k6CQALQxMTMwMzY2NzY2OTkyNzcyOTk5MMcXZZK0MTEzMDM2Njc2Njk5Mjc3Mjk5OTDDtDE1NjI1MDM3NzY2NjY4NTM2NTkwx7ZlkrQxNTYyNTAzNzc2NjY2ODUzNjU5MJTHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/x0AXCtcjOwAAAAAAAAAAAAAAAAAAAAAOdFo7AAAAAAAAAAAAAAAAAAAAABe30bgAAAAAAACAvwAAgL8AAACAAACAP9cXAABIRAAAFkTHDBcAAIA/AACAPwAAgD+zMzI4MDYxOTY3ODcwMDUxMjA1NscWZZKzMzI4MDYxOTY3ODcwMDUxMjA1NsO0MTc4OTIwODU2MTkxNzkwOTI5ODLHHWWStDE3ODkyMDg1NjE5MTc5MDkyOTgykqRub25lkLQxNjAzOTE0NjY5ODAwNDQ0NjE4OcccZZK0MTYwMzkxNDY2OTgwMDQ0NDYxODmlcGl4ZWyzNjU2NjYyOTA2OTMyNTc3MzMwMccwZZKzNjU2NjYyOTA2OTMyNTc3MzMwMccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM0MDg5NDcyNjE2MzIxMzUwODUyxxZlkrM0MDg5NDcyNjE2MzIxMzUwODUywrM5NDAwMjUwMDA2ODQzNzU1Mjg5xxxlkrM5NDAwMjUwMDA2ODQzNzU1Mjg5kqRub25lkLI3MTU3Mjk5MTYyODQ4OTY4NTbHFWWSsjcxNTcyOTkxNjI4NDg5Njg1NsK0MTczMTE2NTk2MjU4MDM3NTg4MTfHF2WStDE3MzExNjU5NjI1ODAzNzU4ODE3wrM5NzcwMTQ5MTQ3Mzc2OTMyMDM3xxplkrM5NzcwMTQ5MTQ3Mzc2OTMyMDM3pGRhdGGzMzk2OTU0MTkxNjg2NzY0NDM0NsccZZKzMzk2OTU0MTkxNjg2NzY0NDM0NpKkbm9uZZC0MTA3MTIxMDE1MzY3MDU3NjE2MTnHF2WStDEwNzEyMTAxNTM2NzA1NzYxNjE5wrM1MTc0NjU5NDQ4NzU2NDU2Mjg3xxxlkrM1MTc0NjU5NDQ4NzU2NDU2Mjg3kqRub25lkLQxMzIzODIwMTI1NDk4NDMzNjAzNccdZZK0MTMyMzgyMDEyNTQ5ODQzMzYwMzWSpG5vbmWQtDEwNDc1Mjg0MjEwMzM1NTYzNjg2xxdlkrQxMDQ3NTI4NDIxMDMzNTU2MzY4NsKzNjA4MTM2NjM2NjAzMTUyODI3MMeoZZKzNjA4MTM2NjM2NjAzMTUyODI3MMeQFgAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAQAAAAFAAAABgAAAAQAAAAGAAAABwAAAAgAAAAJAAAACgAAAAgAAAAKAAAACwAAAAwAAAANAAAADgAAAAwAAAAOAAAADwAAABAAAAARAAAAEgAAABAAAAASAAAAEwAAABQAAAAVAAAAFgAAABQAAAAWAAAAFwAAALMzMDYxMjk1ODM3ODcwNDQ2NTEwxxZlkrMzMDYxMjk1ODM3ODcwNDQ2NTEwwrQxNzMyNTI3MTExNjIwNDA4MzEyN8cxZZK0MTczMjUyNzExMTYyMDQwODMxMjfHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzOTY4OTE4NDkzNjAyMzMwMDI0NMccZZKzOTY4OTE4NDkzNjAyMzMwMDI0NJKkbm9uZZC0MTQ3OTQ4NjE5ODY2NTUyMjkzODHHF2WStDE0Nzk0ODYxOTg2NjU1MjI5Mzgxw7QxNTI0NTc2MjE0MDUyMjAwMTM0M8cbZZK0MTUyNDU3NjIxNDA1MjIwMDEzNDOkZGF0YbM2NjcxODgzMDE3MzE1NTk2MzAxxzBlkrM2NjcxODgzMDE3MzE1NTk2MzAxxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAtDE2ODMyNTE0NzQ5MzY3NTM5NTI3xx1lkrQxNjgzMjUxNDc0OTM2NzUzOTUyN5Kkbm9uZZCzNTkwMzc2NDM2OTYwNDMyNTE2NccaZZKzNTkwMzc2NDM2OTYwNDMyNTE2NaRkYXRhtDEzODkzNzEwNzQ5NDEyMjE4MTIwxxtlkrQxMzg5MzcxMDc0OTQxMjIxODEyMKRkYXRhtDE3MDk4Mjc3OTIxNjM3MTY1Mjg2xxdlkrQxNzA5ODI3NzkyMTYzNzE2NTI4NsK0MTYwODc5NzIyMDgyMzA0NjY3NTPHHWWStDE2MDg3OTcyMjA4MjMwNDY2NzUzkqRub25lkLM5NDA1NzExMDM4MzcwMzMxMzY2xxZlkrM5NDA1NzExMDM4MzcwMzMxMzY2w7M0NDc4NDQ0MDg1NTI0MTA1OTE5xxZlkrM0NDc4NDQ0MDg1NTI0MTA1OTE5w7M4NzA4ODQyNjYyMjI3MTc0OTc1xxxlkrM4NzA4ODQyNjYyMjI3MTc0OTc1kqRub25lkLM2MzYyMjY5Mjc2MzEwOTkwMzE0xxZlkrM2MzYyMjY5Mjc2MzEwOTkwMzE0wrQxNjU3ODM1OTI3NTY2ODQzMzg0NscaZZK0MTY1NzgzNTkyNzU2Njg0MzM4NDaToJAAtDE1MjM1MDUzMDcxNDkwODc5MzI2xzFlkrQxNTIzNTA1MzA3MTQ5MDg3OTMyNscYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALQxMjU0Njg0NDY0NDQzNjE3NDM3MscXZZK0MTI1NDY4NDQ2NDQ0MzYxNzQzNzLCszM3NzEzMDM1NjczMjI0MzY2MDXHMGWSszM3NzEzMDM1NjczMjI0MzY2MDXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzOTQ3MjM3NTEzNDk5Mjg1Mzg2OccZZZKzOTQ3MjM3NTEzNDk5Mjg1Mzg2OZOgkACzNjk0Nzk3NDMyMzIyNTAwNDE3MscWZZKzNjk0Nzk3NDMyMzIyNTAwNDE3MsO0MTYyOTAxNDg5MDkzNDY1MTM5MzDHF2WStDE2MjkwMTQ4OTA5MzQ2NTEzOTMww7M0MTQyMzA0NDY1NjIxODM1Mzc1x7VlkrM0MTQyMzA0NDY1NjIxODM1Mzc1lMdAF/MENb/sBdG+Os0TPwAAAADzBDU/7AXRvjrNEz8AAAAAAAAAAOsFUT87zRM/AAAAAAAAAABA83k/NW4qwgAAgD/HQBeqfWlAAAAAAAAAAAAAAAAAAAAAAHmCGkAAAAAAAAAAAAAAAAAAAAAA3dOIvwAAgL8AAAAAAAAAAH2ts8AAAAAA1xcAALNDAEAHRMcMFyj8x0Eo/MdBKWu+QbQxMDM2Njg1ODQzOTM4MTM4OTI5NMcdZZK0MTAzNjY4NTg0MzkzODEzODkyOTSSpG5vbmWQszc3ODgxNzg0ODAzMDUwNTUwNDHHFmWSszc3ODgxNzg0ODAzMDUwNTUwNDHDszc5MTg1NzczNjU2NjkwOTA5MTTHFmWSszc5MTg1NzczNjU2NjkwOTA5MTTCszk1NzYzNDAwOTAyMTI4NDM1MTDHFmWSszk1NzYzNDAwOTAyMTI4NDM1MTDDszkxMzExMzI4MzYwMzQ2Njc2MjfHGmWSszkxMzExMzI4MzYwMzQ2Njc2MjekZGF0YbQxNjY5NDIxMzI0Nzk4NzA4MjQzNMcXZZK0MTY2OTQyMTMyNDc5ODcwODI0MzTCsjk0NjIyOTM5NzI5NDYyMDkzM8cVZZKyOTQ2MjI5Mzk3Mjk0NjIwOTMzwrM2NjE0NDkxODA5MDg1MTAxMzAyx7VlkrM2NjE0NDkxODA5MDg1MTAxMzAylMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD/HQBfNzEw+AAAAAAAAAAAAAAAAAAAAAM3MTD4AAAAAAAAAAAAAAAAAAAAAF7fRuAAAAADNzIy/zcyMvwAAAIAAAIA/1xcAALNDAEAHRMcMFwAAgD8AAIA/AACAP7QxMDY4NjU1MjgxMjM0ODU3Nzg1M8cxZZK0MTA2ODY1NTI4MTIzNDg1Nzc4NTPHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAAC0MTMyNTUwMzc1MTgyMDg2NzcwNDPHHWWStDEzMjU1MDM3NTE4MjA4Njc3MDQzkqRub25lkLMzODE4NzQ0MzcxNjMxNDEwOTU5xxxlkrMzODE4NzQ0MzcxNjMxNDEwOTU5kqRub25lkLQxMzU3ODI2Njk4MTcwMTgxMTc3NccxZZK0MTM1NzgyNjY5ODE3MDE4MTE3NzXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTU3NzQ3OTYyMTkxOTM4MjQ1MjXHF2WStDE1Nzc0Nzk2MjE5MTkzODI0NTI1wrM2MzA1MzU0NTk4NzY5NzE4NzgwxxplkrM2MzA1MzU0NTk4NzY5NzE4NzgwpGRhdGG0MTU4MzUwNDA3OTc3OTMwMTM1ODHHF2WStDE1ODM1MDQwNzk3NzkzMDEzNTgxwrM0OTExNzI4MjU1MjIxNTQ0NDQxxzBlkrM0OTExNzI4MjU1MjIxNTQ0NDQxxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszMzMDA2MjY3NjM3ODUwMTg2ODXHFmWSszMzMDA2MjY3NjM3ODUwMTg2ODXDtDExNDE5NzkzNjY2NzQ0MjQ4NDc3xxplkrQxMTQxOTc5MzY2Njc0NDI0ODQ3N5OgkAC0MTEwNTU2MTU4NzUyMTQzMDQ5OTLHF2WStDExMDU1NjE1ODc1MjE0MzA0OTkywrQxNTU1MDQxMzY1NDI2MTI1Mzg3OccXZZK0MTU1NTA0MTM2NTQyNjEyNTM4NznCsTQxOTY1OTE5NjcyMzYwMTE2xy5lkrE0MTk2NTkxOTY3MjM2MDExNscYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM3NzMzMjY5NzE1MTM2NDc0NzIzxxxlkrM3NzMzMjY5NzE1MTM2NDc0NzIzkqRub25lkLM0NzMzNTEzNDM1OTI1ODE1OTIxxxtlkrM0NzMzNTEzNDM1OTI1ODE1OTIxpXBpeGVsszU0MTkyMzM1ODQ1NzEwNjI0MDjHFmWSszU0MTkyMzM1ODQ1NzEwNjI0MDjCtDEyMzAyMDYyNDUzOTI0Njc3MTQwxxplkrQxMjMwMjA2MjQ1MzkyNDY3NzE0MJOgkACzMjQ2ODI1MjE2MzA5NjkxNDQ2MccaZZKzMjQ2ODI1MjE2MzA5NjkxNDQ2MaRkYXRhtDE0MTI4MDI2OTgzMTQ1MTcwMTU1xxdlkrQxNDEyODAyNjk4MzE0NTE3MDE1NcKzNzcyMTgyOTI2NzAwNTk3MTM5MccZZZKzNzcyMTgyOTI2NzAwNTk3MTM5MZOgkACzMTI0ODI2MjkwNzU3MDcxNjkwMMcwZZKzMTI0ODI2MjkwNzU3MDcxNjkwMMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALQxNzExMjEzMjMwOTMzOTU1OTIzOMcXZZK0MTcxMTIxMzIzMDkzMzk1NTkyMzjCszY0NjYyMzMyNjc5MTAxMDc4MjLHMGWSszY0NjYyMzMyNjc5MTAxMDc4MjLHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAAC0MTc4NjU2NDI3MTg1ODE2MTI3NDHHF2WStDE3ODY1NjQyNzE4NTgxNjEyNzQxwrM1MjU4NzgzNTEyOTM3ODM0OTYzxzBlkrM1MjU4NzgzNTEyOTM3ODM0OTYzxxgWAAAAAAEAAAADAAAAAAAAAAMAAAACAAAAsTk5NDUyMTkyOTQwMjgyMDIwxxdlkrE5OTQ1MjE5Mjk0MDI4MjAyMJOgkACzNzkzMTQ0MDkxOTQ0NDg5NDAzN8caZZKzNzkzMTQ0MDkxOTQ0NDg5NDAzN6RkYXRhtDExMjM1NzY2MTU5MjQ5ODAwMTU1xzFlkrQxMTIzNTc2NjE1OTI0OTgwMDE1NccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALMyODI4Mzk3OTMzMzE2MjY1NTA0xxtlkrMyODI4Mzk3OTMzMzE2MjY1NTA0pXBpeGVsszgzODY4MjE5MjQ5Mjg0NzkzNjTHHGWSszgzODY4MjE5MjQ5Mjg0NzkzNjSSpG5vbmWQszUyMTA4NDA3ODEyNjk1NjE1NzHHFmWSszUyMTA4NDA3ODEyNjk1NjE1NzHCszk2MjQ3MDE2OTI4NzU1NzAxNzDHGWWSszk2MjQ3MDE2OTI4NzU1NzAxNzCToJAAszU4NzYyNTA3Njg4MDY1MjIxNjXHGWWSszU4NzYyNTA3Njg4MDY1MjIxNjWToJAAszY4MzQ1MDIwMjE5NDUxNjEwMDjHHGWSszY4MzQ1MDIwMjE5NDUxNjEwMDiSpG5vbmWQszgyMDQ1ODU3MjE3NDA4ODIwNjHHFmWSszgyMDQ1ODU3MjE3NDA4ODIwNjHDszg4MjA0NDcxNDA1MTMyMTc1MTLHHGWSszg4MjA0NDcxNDA1MTMyMTc1MTKSpG5vbmWQtDE3MDk2MDI3MDAyMjk3NDg5MjM2xxdlkrQxNzA5NjAyNzAwMjI5NzQ4OTIzNsK0MTY1NTAyOTA0MjA2OTg4NTU2NTfHHGWStDE2NTUwMjkwNDIwNjk4ODU1NjU3pXBpeGVsszQ4NTQzNzg4NDA3NDE0MjE3ODnHFmWSszQ4NTQzNzg4NDA3NDE0MjE3ODnDtDE2MzY5MTY5NTUyMTY1OTU2NzcxxxplkrQxNjM2OTE2OTU1MjE2NTk1Njc3MZOgkACzMTg4NDM2ODA5ODY0NjEzMzg2NsccZZKzMTg4NDM2ODA5ODY0NjEzMzg2NpKkbm9uZZCzMjM0NzgzNjg3Njg4ODc0NDAxMscZZZKzMjM0NzgzNjg3Njg4ODc0NDAxMpOgkACzNzA4NTUwNzAxNDcxNjcwNTk0OMcZZZKzNzA4NTUwNzAxNDcxNjcwNTk0OJOgkAC0MTI0OTIyMjgzMzcxOTcxMDcxNjDHF2WStDEyNDkyMjI4MzM3MTk3MTA3MTYwwrMzNzcxNTg2ODkzMTI0NDAwMzEzxxZlkrMzNzcxNTg2ODkzMTI0NDAwMzEzwrM4MjE1ODc2MjI0MjU3MzkzNjM3xxllkrM4MjE1ODc2MjI0MjU3MzkzNjM3k6CQALQxNDE1MTQ5NTY1NTU2Njc3MDM5NccXZZK0MTQxNTE0OTU2NTU1NjY3NzAzOTXCtDE2NDMzNTY3MzQyMTQzNjc1ODEwxxdlkrQxNjQzMzU2NzM0MjE0MzY3NTgxMMK0MTIwNDYwNTEzMzUwMjI4NTIyMzXHF2WStDEyMDQ2MDUxMzM1MDIyODUyMjM1wrQxNjc4NjMxNDQ1MDgxODY4ODY1NMcXZZK0MTY3ODYzMTQ0NTA4MTg2ODg2NTTDszQ0MDc3NjQ1MzU4ODAwMDg0NjXHMGWSszQ0MDc3NjQ1MzU4ODAwMDg0NjXHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNzAxMTMxMDI2NDk1ODc5NDk3MMgJeWWSszcwMTEzMTAyNjQ5NTg3OTQ5NzDICWAWAAAAAAEAAAAMAAAAAAAAAAwAAAALAAAACwAAAAwAAAAXAAAACwAAABcAAAAWAAAAFgAAABcAAAAiAAAAFgAAACIAAAAhAAAAIQAAACIAAAAtAAAAIQAAAC0AAAAsAAAALAAAAC0AAAA4AAAALAAAADgAAAA3AAAANwAAADgAAABDAAAANwAAAEMAAABCAAAAQgAAAEMAAABOAAAAQgAAAE4AAABNAAAATQAAAE4AAABZAAAATQAAAFkAAABYAAAAWAAAAFkAAABkAAAAWAAAAGQAAABjAAAAYwAAAGQAAABvAAAAYwAAAG8AAABuAAAAAQAAAAIAAAANAAAAAQAAAA0AAAAMAAAADAAAAA0AAAAYAAAADAAAABgAAAAXAAAAFwAAABgAAAAjAAAAFwAAACMAAAAiAAAAIgAAACMAAAAuAAAAIgAAAC4AAAAtAAAALQAAAC4AAAA5AAAALQAAADkAAAA4AAAAOAAAADkAAABEAAAAOAAAAEQAAABDAAAAQwAAAEQAAABPAAAAQwAAAE8AAABOAAAATgAAAE8AAABaAAAATgAAAFoAAABZAAAAWQAAAFoAAABlAAAAWQAAAGUAAABkAAAAZAAAAGUAAABwAAAAZAAAAHAAAABvAAAAAgAAAAMAAAAOAAAAAgAAAA4AAAANAAAADQAAAA4AAAAZAAAADQAAABkAAAAYAAAAGAAAABkAAAAkAAAAGAAAACQAAAAjAAAAIwAAACQAAAAvAAAAIwAAAC8AAAAuAAAALgAAAC8AAAA6AAAALgAAADoAAAA5AAAAOQAAADoAAABFAAAAOQAAAEUAAABEAAAARAAAAEUAAABQAAAARAAAAFAAAABPAAAATwAAAFAAAABbAAAATwAAAFsAAABaAAAAWgAAAFsAAABmAAAAWgAAAGYAAABlAAAAZQAAAGYAAABxAAAAZQAAAHEAAABwAAAAAwAAAAQAAAAPAAAAAwAAAA8AAAAOAAAADgAAAA8AAAAaAAAADgAAABoAAAAZAAAAGQAAABoAAAAlAAAAGQAAACUAAAAkAAAAJAAAACUAAAAwAAAAJAAAADAAAAAvAAAALwAAADAAAAA7AAAALwAAADsAAAA6AAAAOgAAADsAAABGAAAAOgAAAEYAAABFAAAARQAAAEYAAABRAAAARQAAAFEAAABQAAAAUAAAAFEAAABcAAAAUAAAAFwAAABbAAAAWwAAAFwAAABnAAAAWwAAAGcAAABmAAAAZgAAAGcAAAByAAAAZgAAAHIAAABxAAAABAAAAAUAAAAQAAAABAAAABAAAAAPAAAADwAAABAAAAAbAAAADwAAABsAAAAaAAAAGgAAABsAAAAmAAAAGgAAACYAAAAlAAAAJQAAACYAAAAxAAAAJQAAADEAAAAwAAAAMAAAADEAAAA8AAAAMAAAADwAAAA7AAAAOwAAADwAAABHAAAAOwAAAEcAAABGAAAARgAAAEcAAABSAAAARgAAAFIAAABRAAAAUQAAAFIAAABdAAAAUQAAAF0AAABcAAAAXAAAAF0AAABoAAAAXAAAAGgAAABnAAAAZwAAAGgAAABzAAAAZwAAAHMAAAByAAAABQAAAAYAAAARAAAABQAAABEAAAAQAAAAEAAAABEAAAAcAAAAEAAAABwAAAAbAAAAGwAAABwAAAAnAAAAGwAAACcAAAAmAAAAJgAAACcAAAAyAAAAJgAAADIAAAAxAAAAMQAAADIAAAA9AAAAMQAAAD0AAAA8AAAAPAAAAD0AAABIAAAAPAAAAEgAAABHAAAARwAAAEgAAABTAAAARwAAAFMAAABSAAAAUgAAAFMAAABeAAAAUgAAAF4AAABdAAAAXQAAAF4AAABpAAAAXQAAAGkAAABoAAAAaAAAAGkAAAB0AAAAaAAAAHQAAABzAAAABgAAAAcAAAASAAAABgAAABIAAAARAAAAEQAAABIAAAAdAAAAEQAAAB0AAAAcAAAAHAAAAB0AAAAoAAAAHAAAACgAAAAnAAAAJwAAACgAAAAzAAAAJwAAADMAAAAyAAAAMgAAADMAAAA+AAAAMgAAAD4AAAA9AAAAPQAAAD4AAABJAAAAPQAAAEkAAABIAAAASAAAAEkAAABUAAAASAAAAFQAAABTAAAAUwAAAFQAAABfAAAAUwAAAF8AAABeAAAAXgAAAF8AAABqAAAAXgAAAGoAAABpAAAAaQAAAGoAAAB1AAAAaQAAAHUAAAB0AAAABwAAAAgAAAATAAAABwAAABMAAAASAAAAEgAAABMAAAAeAAAAEgAAAB4AAAAdAAAAHQAAAB4AAAApAAAAHQAAACkAAAAoAAAAKAAAACkAAAA0AAAAKAAAADQAAAAzAAAAMwAAADQAAAA/AAAAMwAAAD8AAAA+AAAAPgAAAD8AAABKAAAAPgAAAEoAAABJAAAASQAAAEoAAABVAAAASQAAAFUAAABUAAAAVAAAAFUAAABgAAAAVAAAAGAAAABfAAAAXwAAAGAAAABrAAAAXwAAAGsAAABqAAAAagAAAGsAAAB2AAAAagAAAHYAAAB1AAAACAAAAAkAAAAUAAAACAAAABQAAAATAAAAEwAAABQAAAAfAAAAEwAAAB8AAAAeAAAAHgAAAB8AAAAqAAAAHgAAACoAAAApAAAAKQAAACoAAAA1AAAAKQAAADUAAAA0AAAANAAAADUAAABAAAAANAAAAEAAAAA/AAAAPwAAAEAAAABLAAAAPwAAAEsAAABKAAAASgAAAEsAAABWAAAASgAAAFYAAABVAAAAVQAAAFYAAABhAAAAVQAAAGEAAABgAAAAYAAAAGEAAABsAAAAYAAAAGwAAABrAAAAawAAAGwAAAB3AAAAawAAAHcAAAB2AAAACQAAAAoAAAAVAAAACQAAABUAAAAUAAAAFAAAABUAAAAgAAAAFAAAACAAAAAfAAAAHwAAACAAAAArAAAAHwAAACsAAAAqAAAAKgAAACsAAAA2AAAAKgAAADYAAAA1AAAANQAAADYAAABBAAAANQAAAEEAAABAAAAAQAAAAEEAAABMAAAAQAAAAEwAAABLAAAASwAAAEwAAABXAAAASwAAAFcAAABWAAAAVgAAAFcAAABiAAAAVgAAAGIAAABhAAAAYQAAAGIAAABtAAAAYQAAAG0AAABsAAAAbAAAAG0AAAB4AAAAbAAAAHgAAAB3AAAAszg5NDk4MjM3ODk0Mzc5ODU4NzXHGmWSszg5NDk4MjM3ODk0Mzc5ODU4NzWkZGF0YbM0MzYzNDk3OTQyMzAxNTIzMzYyxxplkrM0MzYzNDk3OTQyMzAxNTIzMzYypGRhdGG0MTY5NDY5MDQ3MzA1MzY5NDg3NzXHG2WStDE2OTQ2OTA0NzMwNTM2OTQ4Nzc1pGRhdGG0MTgxNDc3OTQ4MzEzNTkwMTIwMDnHF2WStDE4MTQ3Nzk0ODMxMzU5MDEyMDA5wrM1NzQwODg1ODU4NzU0OTc0NzUyxxtlkrM1NzQwODg1ODU4NzU0OTc0NzUypXBpeGVstDE1MjIxNjg2MzcwODk1MDk0MjIzxxplkrQxNTIyMTY4NjM3MDg5NTA5NDIyM5OgkACyNDM2MDg1MzU1NzIwNjA0MDYyxxVlkrI0MzYwODUzNTU3MjA2MDQwNjLCtDEyMTUzNTk5OTEwMzg0OTY5NTM5xxdlkrQxMjE1MzU5OTkxMDM4NDk2OTUzOcKzNDkyMDI0NzA5MjY1NjEzNTcwNMccZZKzNDkyMDI0NzA5MjY1NjEzNTcwNJKkbm9uZZCzODg2OTgxMTQzMDU5Nzk0OTIwOccbZZKzODg2OTgxMTQzMDU5Nzk0OTIwOaVwaXhlbLIyOTA3Nzk1ODMzNDA0ODU4NDnHFWWSsjI5MDc3OTU4MzM0MDQ4NTg0OcOzOTQzMzUxMzQwOTQzNjUyOTUxNMcaZZKzOTQzMzUxMzQwOTQzNjUyOTUxNKRkYXRhtDEwNTgyMTE4MjIzNjQ0NTM2MDAwxzFlkrQxMDU4MjExODIyMzY0NDUzNjAwMMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALMyNTAwMTQ0OTg1ODU2NTI2NTM0xxZlkrMyNTAwMTQ0OTg1ODU2NTI2NTM0wrQxNzE0MTcyNzQ2ODk5MTYwMTY5MsceZZK0MTcxNDE3Mjc0Njg5OTE2MDE2OTKnI0ZGRkZGRrQxMzY2NjQ3OTk0MjUxODg0MjU5OMcXZZK0MTM2NjY0Nzk5NDI1MTg4NDI1OTjDtDE3MTYyMzA5MTk0NjU1NTYzNjAzxxdlkrQxNzE2MjMwOTE5NDY1NTU2MzYwM8KyODYwMjgzNTUxODY3NzIxODQ4xxllkrI4NjAyODM1NTE4Njc3MjE4NDikZGF0YbQxNjc5NTQ1MTQyMTQyMjc5NzA2NscaZZK0MTY3OTU0NTE0MjE0MjI3OTcwNjaToJAAtDEzODM3OTE0ODA1NTQ5Njk1OTM3xxdlkrQxMzgzNzkxNDgwNTU0OTY5NTkzN8KzNDk1MDc4MTE5NDc4ODgxMDQ3NscnZZKzNDk1MDc4MTE5NDc4ODgxMDQ3NtgVqgEAACsAAABmAQAAHQIAALM1MDMwNTQ0Njc0ODAzMzI1OTM4xxZlkrM1MDMwNTQ0Njc0ODAzMzI1OTM4wrM3ODk1NDkzOTE4MzQxOTA4MDI2xxZlkrM3ODk1NDkzOTE4MzQxOTA4MDI2wrIzMjc4OTkxMjgxMDE3MDc1MDTHGWWSsjMyNzg5OTEyODEwMTcwNzUwNKRkYXRhszQwNTI5MjM4MDYzOTAxOTkxNTLHMGWSszQwNTI5MjM4MDYzOTAxOTkxNTLHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzMTM0MDk5ODYzMjU3ODExMTUyM8caZZKzMTM0MDk5ODYzMjU3ODExMTUyM6RkYXRhtDE1NDYwMDk3MTAwMDYxNzI4MjE0xxplkrQxNTQ2MDA5NzEwMDA2MTcyODIxNJOgkACzMjAxMzE5MTQwNzYyMzEzMzU0NMcWZZKzMjAxMzE5MTQwNzYyMzEzMzU0NMK0MTAyODA5MTUyNTI5NTU1ODY3MTfHHWWStDEwMjgwOTE1MjUyOTU1NTg2NzE3ks0DIM0CWLQxODE1NzMwNjQyOTQyMjU3MTM3MscbZZK0MTgxNTczMDY0Mjk0MjI1NzEzNzKkZGF0YbM5NTg1MjUxNDUxODY4OTA5Nzk2xxxlkrM5NTg1MjUxNDUxODY4OTA5Nzk2kqRub25lkLQxMjU1NDQ2NDMzMTEyMjU1MjkxMccxZZK0MTI1NTQ0NjQzMzExMjI1NTI5MTHHGBYAAAAAAQAAAAMAAAAAAAAAAwAAAAIAAAC0MTA0NTYwNzI0NjcyODYxNTc5NTfHG2WStDEwNDU2MDcyNDY3Mjg2MTU3OTU3pGRhdGG0MTQyMjIwMjkwMTY4NDYxODc3NTHHG2WStDE0MjIyMDI5MDE2ODQ2MTg3NzUxpGRhdGGzOTIxMTIzMDA5MTY1MzY2NjMwNMcZZZKzOTIxMTIzMDA5MTY1MzY2NjMwNJOgkACzMTQyNjA5MDAyNDE4MDc1NTEyMMcZZZKzMTQyNjA5MDAyNDE4MDc1NTEyMJOgkACzMzgwODQzMjg4NTI5NzY3ODIyM8cZZZKzMzgwODQzMjg4NTI5NzY3ODIyM5OgkAC0MTEyMjE1OTcwMTUxMDg0MjEzMjbHHmWStDExMjIxNTk3MDE1MTA4NDIxMzI2pyNGRkZGRka0MTY5MDgyNzQyMTIyNTYwODQ0MzbHMWWStDE2OTA4Mjc0MjEyMjU2MDg0NDM2xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszE0ODYwNjc5MDY0NTkzNzQ2MDTHFmWSszE0ODYwNjc5MDY0NTkzNzQ2MDTDtDExODM4NjAwODIzOTQ3NzMwMDQzxxtlkrQxMTgzODYwMDgyMzk0NzczMDA0M6RkYXRhsTMxMjYxNjU4MjcwMjEwODU4xxRlkrEzMTI2MTY1ODI3MDIxMDg1OMKzOTUyMDI1NDI4MzY2Mzk5OTQ1NccwZZKzOTUyMDI1NDI4MzY2Mzk5OTQ1NccYFgAAAAABAAAAAwAAAAAAAAADAAAAAgAAALM3NzU2MjIyNzMzNDYwMDM0NzI3xxplkrM3NzU2MjIyNzMzNDYwMDM0NzI3pGRhdGGzOTQzMzg1MTMxODAxNjAwNjYxN8cZZZKzOTQzMzg1MTMxODAxNjAwNjYxN5OgkACzODg2NDA2NDg2OTYwNjI5MjQ1MMcWZZKzODg2NDA2NDg2OTYwNjI5MjQ1MMOzNjAxOTc0NjU5NDQ0OTkyMjE1M8cWZZKzNjAxOTc0NjU5NDQ0OTkyMjE1M8K0MTE5MzAwNDY5ODUxNjA3MzIyOTDHMWWStDExOTMwMDQ2OTg1MTYwNzMyMjkwxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszg1MDE4NjU3MTIwODgzMTMwMTTHHGWSszg1MDE4NjU3MTIwODgzMTMwMTSSpG5vbmWQtDEwNDU0MzgxMTA2ODg2NDQ2NzQ4xzFlkrQxMDQ1NDM4MTEwNjg4NjQ0Njc0OMcYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM5MTQyMTIyMDMxNzMxMzE1OTI2xxZlkrM5MTQyMTIyMDMxNzMxMzE1OTI2wrMzODE5MTczMjgzOTU5NTkyMDUzxxZlkrMzODE5MTczMjgzOTU5NTkyMDUzw7M5MDI5NDg1NTc0MDExOTU4MDYyxzBlkrM5MDI5NDg1NTc0MDExOTU4MDYyxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszcxMjkxMTY3NzQ1MDM5MzkwNzHHGmWSszcxMjkxMTY3NzQ1MDM5MzkwNzGkZGF0YbQxMjcxNjMyMzU4OTM0OTQ1ODc2N8cXZZK0MTI3MTYzMjM1ODkzNDk0NTg3NjfDszc1NTQ5ODgwNjI1NTI0NzU0MzPHeGWSszc1NTQ5ODgwNjI1NTI0NzU0MzPHYBYAAAAAAQAAAAQAAAAEAAAAAQAAAAUAAAABAAAAAgAAAAUAAAAFAAAAAgAAAAYAAAACAAAAAwAAAAYAAAAGAAAAAwAAAAcAAAADAAAAAAAAAAcAAAAHAAAAAAAAAAQAAACzMzQ0OTE4NDEzNTk1OTQwNzE2OMcZZZKzMzQ0OTE4NDEzNTk1OTQwNzE2OJOgkACzODU1NTMxODk5NjA0MjUzMzk3OcccZZKzODU1NTMxODk5NjA0MjUzMzk3OZKkbm9uZZCzNTcyNzA3MzA0ODQ1MzU0MDU3M8caZZKzNTcyNzA3MzA0ODQ1MzU0MDU3M6RkYXRhszcyNDExNTQxMDg0NDczMDcxNTDHHGWSszcyNDExNTQxMDg0NDczMDcxNTCSpG5vbmWQtDExMzYzNTk1NTQ0MDU2NzUyNTA5xxdlkrQxMTM2MzU5NTU0NDA1Njc1MjUwOcKzODEyNTY1MDU0NzE0MDg2Njc5NMcWZZKzODEyNTY1MDU0NzE0MDg2Njc5NMOyMjcxNDExODE2OTk2MzUxODU4xxVlkrIyNzE0MTE4MTY5OTYzNTE4NTjCtDEzMzc3NTU0ODgxMDU0MzEwMjc4xxdlkrQxMzM3NzU1NDg4MTA1NDMxMDI3OMKzMTM0OTMxNTEyNTQ5NDE0MTc5MscWZZKzMTM0OTMxNTEyNTQ5NDE0MTc5MsKzMTkzMjk4MTY2NzU0NTgwOTA5N8cWZZKzMTkzMjk4MTY2NzU0NTgwOTA5N8K0MTY2MTA4MTQ5ODgyMDE4MTE4ODHHG2WStDE2NjEwODE0OTg4MjAxODExODgxpGRhdGG0MTA2MDIyNjYyMzk0OTUyNzMzNznHtmWStDEwNjAyMjY2MjM5NDk1MjczMzc5lMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD/HQBcK1yM7AAAAAAAAAAAAAAAAAAAAAA50WjsAAAAAAAAAAAAAAAAAAAAAF7fRuAAAAAAAAIC/AACAvwAAAIAAAIA/1xcAAEhEAAAWRMcMFwAAgD8AAIA/AACAP7QxNTIzMTAzNTE1OTM3MTc3MDI3MMcXZZK0MTUyMzEwMzUxNTkzNzE3NzAyNzDCszM5MjcwMDUxNDAyNjEzODU2NzTHGmWSszM5MjcwMDUxNDAyNjEzODU2NzSkZGF0YbM4NDEyMTg1MzY0Mzg2ODY5MzE4xxZlkrM4NDEyMTg1MzY0Mzg2ODY5MzE4wrQxNzQ4NDY5ODcwNDU2NjEzNTI4M8cdZZK0MTc0ODQ2OTg3MDQ1NjYxMzUyODOSpG5vbmWQszI2NzI2ODQyODQ3NTk0MTY5NTjHFmWSszI2NzI2ODQyODQ3NTk0MTY5NTjCtDEwMzYzMjk3ODg1ODQyNDk1NDc0xxdlkrQxMDM2MzI5Nzg4NTg0MjQ5NTQ3NMKzOTAxMDg5NTExNTE2ODM1OTI2OccwZZKzOTAxMDg5NTExNTE2ODM1OTI2OccYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALM4OTAxMjkxMzgyNzAzNTY5MjY0xxZlkrM4OTAxMjkxMzgyNzAzNTY5MjY0wrQxMjAxODM1NjY2ODYzNjczMTQwOccXZZK0MTIwMTgzNTY2Njg2MzY3MzE0MDnCtDE4MzQyMDgyODQzOTIwMzIyNTIzxxtlkrQxODM0MjA4Mjg0MzkyMDMyMjUyM6RkYXRhtDEzMDgzMDE1MDk0NzAzNzAwMTk0xxtlkrQxMzA4MzAxNTA5NDcwMzcwMDE5NKRkYXRhszIzMjQzNDkxNDE4MjAzMjgzMDfHFmWSszIzMjQzNDkxNDE4MjAzMjgzMDfCszYwODEzNTc1NDgyMjczNDI5MjfHMGWSszYwODEzNTc1NDgyMjczNDI5MjfHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzNDIyODQwNzExNjEyMjgwNDI3NMcWZZKzNDIyODQwNzExNjEyMjgwNDI3NMK0MTQ3NzQ2OTk5NDM4NDY1MTY5ODbHF2WStDE0Nzc0Njk5OTQzODQ2NTE2OTg2w7QxNjkxMTg2OTExODU4NTc3ODA5OMcXZZK0MTY5MTE4NjkxMTg1ODU3NzgwOTjDszkyMDQxNDc4Mjc3MDk5ODEyODLHG2WSszkyMDQxNDc4Mjc3MDk5ODEyODKlcGl4ZWy0MTM2ODc4MzE3OTY1ODUzMzk3NTPHF2WStDEzNjg3ODMxNzk2NTg1MzM5NzUzw7QxMDM2ODA2MTcwMDgwMjM0NDQ2MscbZZK0MTAzNjgwNjE3MDA4MDIzNDQ0NjKkZGF0YbMxMDc0MDc1ODA4MTgxMDI0MTk2xx1lkrMxMDc0MDc1ODA4MTgxMDI0MTk2pyNGRkZGRka0MTUyNTE3ODI1MDM4NDM4MTk2NDPHMWWStDE1MjUxNzgyNTAzODQzODE5NjQzxxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszgyMzM2NzQ4MTU0MDA4MDczNTDHFmWSszgyMzM2NzQ4MTU0MDA4MDczNTDCszk1MTA1Mjc0MzI1NzE1NTc5MjnHMGWSszk1MTA1Mjc0MzI1NzE1NTc5MjnHGBYAAAAAAQAAAAIAAAABAAAAAwAAAAIAAACzMjI4NTI1NDA2ODg1NjIwMTg0OccWZZKzMjI4NTI1NDA2ODg1NjIwMTg0OcKzMTc1NzAyOTIxNTk2NzUyNTIwNscWZZKzMTc1NzAyOTIxNTk2NzUyNTIwNoCzOTUzNDc1MzIzODc5MzY2NTUwNscnZZKzOTUzNDc1MzIzODc5MzY2NTUwNtgVAAAAAAAAAAAgAwAAWAIAALM2MDUxNTEyMjE1ODMyMjQ4Nzg4xxxlkrM2MDUxNTEyMjE1ODMyMjQ4Nzg4kqRub25lkLM4Mzg2MzY4MjE1MDU1MzU1MTU1xxZlkrM4Mzg2MzY4MjE1MDU1MzU1MTU1w7M1MjA3NDg4NjYwMjI1MTk4Mjg2xxZlkrM1MjA3NDg4NjYwMjI1MTk4Mjg2w7M3NzE5NDIzMzgzMjI1NzU5NDM0xxplkrM3NzE5NDIzMzgzMjI1NzU5NDM0pGRhdGGzNjM4OTI2ODIzMTA0NjMxNjA1OMcWZZKzNjM4OTI2ODIzMTA0NjMxNjA1OMOzNDExMTg3ODM4NzI0MzM5Nzc5MMcZZZKzNDExMTg3ODM4NzI0MzM5Nzc5MJOgkACzODgzMjY5OTIyODA4NzYxNDA5N8caZZKzODgzMjY5OTIyODA4NzYxNDA5N6RkYXRhtDE2ODIzNzI1OTYxNzkwMDYyMzU1xxdlkrQxNjgyMzcyNTk2MTc5MDA2MjM1NcOzOTM3Nzg3NTgyNzgzMjcwNjM2NMcZZZKzOTM3Nzg3NTgyNzgzMjcwNjM2NJOgkACzMzQxNzQ2NDU5NTcyNDE2NDgwOMcWZZKzMzQxNzQ2NDU5NTcyNDE2NDgwOMK0MTM1NjkyODI5NTk5NTUwOTkzMTDHF2WStDEzNTY5MjgyOTU5OTU1MDk5MzEwwrMxNjI3NTE1NjcwODA5NTQyMDA4xxZlkrMxNjI3NTE1NjcwODA5NTQyMDA4wrQxNzkxODk0NTEwNTE2ODMxNzQzMccoZZK0MTc5MTg5NDUxMDUxNjgzMTc0MzHYFRAAAAArAAAAZgEAAB0CAAC0MTgwNzg1ODY3NzAxMzI0MDI1MDjHGmWStDE4MDc4NTg2NzcwMTMyNDAyNTA4k6CQALMzNzY5NTY0NTI0MzE0MTY1NTQ0xxllkrMzNzY5NTY0NTI0MzE0MTY1NTQ0k6CQALQxNzAyOTYwNDUwODM5NjYwMTI4NMcbZZK0MTcwMjk2MDQ1MDgzOTY2MDEyODSkZGF0YbM5NjY2NzY0MTM1MTIxOTI4MDI1xzBlkrM5NjY2NzY0MTM1MTIxOTI4MDI1xxgWAAAAAAEAAAACAAAAAQAAAAMAAAACAAAAszkyNTAzNzc4ODMyMTAxNDgyMzXHHGWSszkyNTAzNzc4ODMyMTAxNDgyMzWSpG5vbmWQtDEyMjg0MDE3MDE5OTY0MzIyMzgwxxplkrQxMjI4NDAxNzAxOTk2NDMyMjM4MJOgkAC0MTIwMTc0NDYxODA2Njc1OTEyMDLHF2WStDEyMDE3NDQ2MTgwNjY3NTkxMjAywrM3MjMzNzk5ODEyMzI5NjA4NzM1xxllkrM3MjMzNzk5ODEyMzI5NjA4NzM1k6CQALQxMDUwOTk1ODQ0OTg2OTQwODU1N8cXZZK0MTA1MDk5NTg0NDk4Njk0MDg1NTfCszEwNjQwOTQ4ODc3Njk5OTQ2MTfHFmWSszEwNjQwOTQ4ODc3Njk5OTQ2MTfCtDE0NDIwNjIyMjY4MTMzMjQ4MTkyxxdlkrQxNDQyMDYyMjI2ODEzMzI0ODE5MsKyMTg1NzkwNDkwNzE3NjIwNDQxxxVlkrIxODU3OTA0OTA3MTc2MjA0NDHCszMzNzI0NjM3NDAyOTE0ODMyMzbHGWWSszMzNzI0NjM3NDAyOTE0ODMyMzaToJAAszc4ODY3OTc0NzY5OTU3ODgyOTLHGWWSszc4ODY3OTc0NzY5OTU3ODgyOTKToJAAszM3OTE5MDc1MTI5OTY3NzQ0MDfHFmWSszM3OTE5MDc1MTI5OTY3NzQ0MDfDsjQ5OTAxNzQxODAzNTM1OTAwNccYZZKyNDk5MDE3NDE4MDM1MzU5MDA1k6CQALA3NTMxMDcyNjUxMDA2NjM1xyRlkrA3NTMxMDcyNjUxMDA2NjM12BUAAAAAAAAAACADAABYAgAAszQ4NzAzODM3NzI1OTI1MDMyMjDHtWWSszQ4NzAzODM3NzI1OTI1MDMyMjCUx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP8dAFwrXIzsAAAAAAAAAAAAAAAAAAAAADnRaOwAAAAAAAAAAAAAAAAAAAAAXt9G4AAAAAAAAgL8AAIC/AAAAgAAAgD/XFwAASEQAABZExwwXAACAPwAAgD8AAIA/tDExNDM3Mzc4NDc0MDM0OTE1NzMzxxplkrQxMTQzNzM3ODQ3NDAzNDkxNTczM5OgkACzOTE2MTMwMDk1MjYzNzM3NTk1OccWZZKzOTE2MTMwMDk1MjYzNzM3NTk1OcKzMjMxMTczNDQ5MjQ1MTA2MDc0M8cwZZKzMjMxMTczNDQ5MjQ1MTA2MDc0M8cYFgAAAAABAAAAAgAAAAEAAAADAAAAAgAAALMyODI3MTQ2ODI4NjU3OTkyODczxxZlkrMyODI3MTQ2ODI4NjU3OTkyODczwrQxNjg5MDk3Mjg4OTY4NjI0NTQzOMcbZZK0MTY4OTA5NzI4ODk2ODYyNDU0MzikZGF0YbQxMjM5NTc1MDcwOTg5NzU3ODU5NscXZZK0MTIzOTU3NTA3MDk4OTc1Nzg1OTbCo3N1YoKncGF5bG9hZMkAFhNtZpOFtDE2MTU2OTgxODczMTkyODIwNzAxiad2aXNpYmxlxxVotDEzNjg3ODMxNzk2NTg1MzM5NzUzpXBsb3RzkK9iYWNrZ3JvdW5kY29sb3LHFWi0MTQ5MzE0ODIyMjk0OTk3ODQ0NTOpcGl4ZWxhcmVhxxFosDc1MzEwNzI2NTEwMDY2MzWmY2FtZXJhxxVotDEwNjAyMjY2MjM5NDk1MjczMzc5pHV1aWSzNDczNDQwNDA0NjY1MjYwOTEzOKtjYW0zZF9zdGF0ZcCqY2xlYXJzY2VuZcOoY2hpbGRyZW6Siad2aXNpYmxlxxVotDEwMTgyODQyOTA2MDQ5NzI1OTk1pXBsb3RzkK9iYWNrZ3JvdW5kY29sb3LHFGizMTA3NDA3NTgwODE4MTAyNDE5NqlwaXhlbGFyZWHHFGizMTY4MDMxOTg4NjMxMDYzNDYwN6ZjYW1lcmHHFWi0MTU2MjUwMzc3NjY2Njg1MzY1OTCkdXVpZLM1NjM3NzE1NzI3NjEyNTA0Mjg2q2NhbTNkX3N0YXRlwKpjbGVhcnNjZW5lwqhjaGlsZHJlbpGJp3Zpc2libGXHFWi0MTY5MTE4NjkxMTg1ODU3NzgwOTilcGxvdHOV3gAQrHRyYW5zcGFyZW5jeccUaLM4MjA0NTg1NzIxNzQwODgyMDYxpXNwYWNlxxRoszEzNDA5OTg2MzI1NzgxMTE1MjOsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luXRleHQtMTA2MzIwMzY3NDc2NzAyNjMzMTGpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAACzQwBAB0SlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXKPzHQSj8x0Epa75Bp3Zpc2libGXHFWi0MTQ3NzQ2OTk5NDM4NDY1MTY5ODarbWFya2Vyc3BhY2XHFWi0MTAzNjgwNjE3MDA4MDIzNDQ0NjKxYXR0cmlidXRlX3VwZGF0ZXLHFGizMjM0NzgzNjg3Njg4ODc0NDAxMqhvdmVyZHJhd8cUaLM3ODk1NDkzOTE4MzQxOTA4MDI2r3VuaWZvcm1fdXBkYXRlcscVaLQxMDM2Njg1ODQzOTM4MTM4OTI5NKVmYWNlc8cUaLM0Njk4MjY2MjIxODY5NTkxNzUwpHV1aWS0MTA2MzIwMzY3NDc2NzAyNjMzMTGtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTIAVAXFvtLvrGdb7588jC+Z2Zmvhb7S76xnW++qoJRvmdmZr588jC+Z2ZmvmHlUL6znW++YeVQvrOdb7588jC+Z2Zmvhb7S76xnW++OiNKvmdmZr588jC+Z2ZmvmHlUL6znW++MLsnvmdmZr4W+0u+sZ1vvnzyML5nZma+FvtLvrGdb74f+YO+cT2Kvhb7S76xnW++fPIwvmdmZr4W+0u+sZ1vvqqCUb5nZma+fPIwvmdmZr5h5VC+s51vvmHlUL6znW++fPIwvmdmZr4W+0u+sZ1vvjojSr5nZma+fPIwvmdmZr5h5VC+s51vvjC7J75nZma+FvtLvrGdb7588jC+Z2Zmvhb7S76xnW++Ad6CvoGa2r4W+0u+sZ1vvqqCUb5nZma+YjJVvmdmZr4W+0u+sZ1vvs6qT76xnW++MLsnvmdmZr4W+0u+sZ1vvtSffb5xPYq+qm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0yAFQF2x4Oj8KaGI/piwDP6YsAz9seDo/CmhiP5t3PD84GmA/piwDP6YsAz/tnjw/OBpgP+2ePD84GmA/piwDP6YsAz9seDo/CmhiP6QBPD9kzF0/piwDP6YsAz/tnjw/OBpgP/7UGD84GmA/bHg6PwpoYj+mLAM/piwDP2x4Oj8KaGI/OUpeP93Saj9seDo/CmhiP6YsAz+mLAM/bHg6PwpoYj+bdzw/OBpgP6YsAz+mLAM/7Z48PzgaYD/tnjw/OBpgP6YsAz+mLAM/bHg6PwpoYj+kATw/ZMxdP6YsAz+mLAM/7Z48PzgaYD/+1Bg/OBpgP2x4Oj8KaGI/piwDP6YsAz9seDo/CmhiP5ioXj+ygIk/bHg6PwpoYj+bdzw/OBpgP27FPj84GmA/WmQ7PwpoYj9IUDw/CmhiP/7UGD84GmA/bHg6PwpoYj+lwlg/3dJqP61tYXJrZXJfb2Zmc2V0gqt0eXBlX2xlbmd0aAOkZmxhdMgB+Bfl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADn8l8+NhoAPwAAAADl8l8+5vJfsgAAAADm8l8+ns2qPgAAAADo8l8+ns0qPwAAAADo8l8+BoFVPwAAAACJXoY+il6GsgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAAAGgVU/6/JfPgAAAAA2GgA/6fJfPgAAAACdzao+6PJfPgAAAADrc5U/7fJfPgAAAAAGgVU/6/JfPgAAAAA3GgA/6fJfPgAAAACdzao+6PJfPgAAAADrUbg+i16GPgAAAACdzao+5vJfsufyX76dzao+5vJfsufyX76dzao+5vJfsufyX76dzao+5vJfsufyX76dzao+5vJfsufyX76ezSo/5vJfsunyX76dzao+5vJfsufyX77qUbg+il6Gsopehr6lY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0yAKgFwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAAAAAAAAAAAAAAAAIA/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAAAAAAAAAAAAAAAAgD8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAPwAAAD8AAAA/mpkZPwAAAD8AAAA/AAAAP5qZGT8AAAA/AAAAPwAAAD+amRk/AAAAAAAAAAAAAAAAAACAP691dl9vZmZzZXRfd2lkdGiCq3R5cGVfbGVuZ3RoBKRmbGF0yAKgFwDAlD4AwNc+AECoPgBA7z4AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgDAlD4AwO8+AECoPgBgAz8AgDA+AOAaPwCASz4AoCE/AMCUPgBgGz8AQKg+AOAmPwDAlD4AYBs/AECoPgDgJj8AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgDAlD4AIDM/AECoPgCgPj8AgDA+AOAaPwCASz4AoCE/AMCUPgBgGz8AQKg+AOAmPwCAMD4AIA8/AIBPPgCgGj8AwJQ+AMDXPgBAqD4AQO8+AIAwPgDgGj8AgEs+AKAhPwDAlD4AwNc+AECoPgBA7z4A4HA/AIARPgBgej8AgDk+AMCUPgDA1z4AQKg+AEDvPgCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+AMCUPgDA7z4AQKg+AGADPwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AGAbPwBAqD4A4CY/AMCUPgBgGz8AQKg+AOAmPwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AMDXPgBAqD4AQO8+AMCUPgAgMz8AQKg+AKA+PwCAMD4A4Bo/AIBLPgCgIT8AwJQ+AGAbPwBAqD4A4CY/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z4AgDA+AOAaPwCASz4AoCE/AMCUPgDA1z4AQKg+AEDvPgAgDD8AgGw+AKAVPwDAjT4AwJQ+AMDXPgBAqD4AQO8+AMCUPgDA7z4AQKg+AGADPwDAlD4AoA8/AECoPgAgGz8AwJQ+ACAnPwBAqD4A4DI/AMCUPgDgPj8AQKg+AKBKPwCAMD4AIA8/AIBPPgCgGj8AwJQ+AMDXPgBAqD4AQO8+AOAVPwCAbD4AIB8/AECKPqNwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0yAH4FwAAAACsHEpBAACAvwAAAACsHEpBAACAvwAAAACsHEpBAACAv///H0CsHEpBAACAv///H0CsHEpBAACAv///H0CsHEpBAACAvwAAoECsHEpBAACAvwAAoECsHEpBAACAvwAAoECsHEpBAACAvwAA8ECsHEpBAACAvwAA8ECsHEpBAACAvwAA8ECsHEpBAACAvwAAIEGsHEpBAACAvwAAIEGsHEpBAACAvwAAIEGsHEpBAACAvwAAIEGsHEpBAACAvzMzM0CitGNBAACAv6wcSkEAAAAAAACAv6wcSkEAAAAAAACAv6wcSkEAAAAAAACAv6wcSkH//x9AAACAv6wcSkH//x9AAACAv6wcSkH//x9AAACAv6wcSkEAAKBAAACAv6wcSkEAAKBAAACAv6wcSkEAAKBAAACAv6wcSkEAAPBAAACAv6wcSkEAAPBAAACAv6wcSkEAAPBAAACAv6wcSkEAACBBAACAv6wcSkEAACBBAACAv6wcSkEAACBBAACAv6wcSkEAACBBAACAv6K0Y0EzMzNAAACAv6wcSkHNzAzAAAAAAKwcSkHNzAzAAAAAQKwcSkHNzAzAAACAQKwcSkHNzAzAAADAQKwcSkHNzAzAAAAAQawcSkHNzAzAAAAgQawcSkHNzAzAAAAgQf+yW0HNzAzAAACAQKlyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0yAKgFwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAgAAAAIDzBDW/8wQ1vwAAAIAAAACA8wQ1v/MENb8AAACAAAAAgPMENb/zBDW/AAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7MAAAAAAAAAAAAAgD8uvTuzAAAAAAAAAAAAAIA/Lr07swAAAAAAAAAAAACAPy69O7NjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs2PABDPzBDU/8wQ1P2PABLNjwAQz8wQ1P/MENT9jwASzY8AEM/MENT/zBDU/Y8AEs4+sdHJhbnNwYXJlbmN5xxRoszE5MzI5ODE2Njc1NDU4MDkwOTelc3BhY2XHFWi0MTYwMzkxNDY2OTgwMDQ0NDYxODmsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtOTU0MzY4NjI4NzQ0MjA1ODAyNaljYW1fc3BhY2WlcGl4ZWyodW5pZm9ybXOHp3BpY2tpbmfCqnJlc29sdXRpb27XFwAAs0MAQAdEpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBco/MdBKPzHQSlrvkGpb2JqZWN0X2lkAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/p3Zpc2libGXHFGizNzc4ODE3ODQ4MDMwNTA1NTA0MbFhdHRyaWJ1dGVfdXBkYXRlcscUaLMzMzcyNDYzNzQwMjkxNDgzMjM2qG92ZXJkcmF3xxRoszM0MTc0NjQ1OTU3MjQxNjQ4MDivdW5pZm9ybV91cGRhdGVyxxRoszc3MzMyNjk3MTUxMzY0NzQ3MjOlZmFjZXPHFWi0MTA0NTQzODExMDY4ODY0NDY3NDikdXVpZLM5NTQzNjg2Mjg3NDQyMDU4MDI1rXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxRoszgxMjU2NTA1NDcxNDA4NjY3OTSlc3BhY2XHFGizNzcxOTQyMzM4MzIyNTc1OTQzNKx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy04MzYxNzc0MzAyMTM4NzczOTgzqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAALNDAEAHRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXKPzHQSj8x0Epa75BqW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxVotDE0Nzc0Njk5OTQzODQ2NTE2OTg2sWF0dHJpYnV0ZV91cGRhdGVyxxRoszk0MzM4NTEzMTgwMTYwMDY2MTeob3ZlcmRyYXfHFWi0MTQxNTE0OTU2NTU1NjY3NzAzOTWvdW5pZm9ybV91cGRhdGVyxxRoszQ5MjAyNDcwOTI2NTYxMzU3MDSlZmFjZXPHFGizNDQwNzc2NDUzNTg4MDAwODQ2NaR1dWlkszgzNjE3NzQzMDIxMzg3NzM5ODOtdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMyBzZWdtZW50X3N0YXJ0Owp2ZWMzIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzMgc2VnbWVudF9lbmQ7CnZlYzMgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTIAjAXAAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD6tbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHjBcAAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAMA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAP6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTIAjAXAAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAAAAAAAAAAAAAAACAPwAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD4AAAA/AAAAPwAAAD/NzMw+AAAAPwAAAD8AAAA/zczMPgAAAD8AAAA/AAAAP83MzD6rc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoA6RmbGF0yAGkFzMzQ0HNzAzAAACAvzMzQ0EAAAAAAACAvzMzQ0H//x9AAACAvzMzQ0EAAKBAAACAvzMzQ0EAAPBAAACAvzMzQ0EAACBBAACAvzMzQ0HNzAzAAAAAADMzQ0HNzAzAAAAAQDMzQ0HNzAzAAACAQDMzQ0HNzAzAAADAQDMzQ0HNzAzAAAAAQTMzQ0HNzAzAAAAgQc3MDMAzM0NBAACAv83MDMAzM0NBAAAAAM3MDMAzM0NBAAAAQM3MDMAzM0NBAACAQM3MDMAzM0NBAADAQM3MDMAzM0NBAAAAQc3MDMAzM0NBAAAgQQAAAAAzM0NBAACAv///H0AzM0NBAACAvwAAoEAzM0NBAACAvwAA8EAzM0NBAACAvwAAIEEzM0NBAACAv83MDMDNzAzAAAAwQQAAAADNzAzAAAAwQf//H0DNzAzAAAAwQQAAoEDNzAzAAAAwQQAA8EDNzAzAAAAwQQAAIEHNzAzAAAAwQc3MDMAAAAAAAAAwQc3MDMD//x9AAAAwQc3MDMAAAKBAAAAwQc3MDMAAAPBAAAAwQc3MDMAAACBBAAAwQa1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAOkZmxhdMgBpBfNzAzAzcwMwAAAgL/NzAzAAAAAAAAAgL/NzAzA//8fQAAAgL/NzAzAAACgQAAAgL/NzAzAAADwQAAAgL/NzAzAAAAgQQAAgL/NzAzAzcwMwAAAAADNzAzAzcwMwAAAAEDNzAzAzcwMwAAAgEDNzAzAzcwMwAAAwEDNzAzAzcwMwAAAAEHNzAzAzcwMwAAAIEHNzAzAzcwMwAAAgL/NzAzAzcwMwAAAAADNzAzAzcwMwAAAAEDNzAzAzcwMwAAAgEDNzAzAzcwMwAAAwEDNzAzAzcwMwAAAAEHNzAzAzcwMwAAAIEEAAAAAzcwMwAAAgL///x9AzcwMwAAAgL8AAKBAzcwMwAAAgL8AAPBAzcwMwAAAgL8AACBBzcwMwAAAgL/NzAzAzcwMwAAAgL8AAAAAzcwMwAAAgL///x9AzcwMwAAAgL8AAKBAzcwMwAAAgL8AAPBAzcwMwAAAgL8AACBBzcwMwAAAgL/NzAzAAAAAAAAAgL/NzAzA//8fQAAAgL/NzAzAAACgQAAAgL/NzAzAAADwQAAAgL/NzAzAAAAgQQAAgL+vbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMeMFwAAwD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAwD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAwD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/jqx0cmFuc3BhcmVuY3nHFGizNjAxOTc0NjU5NDQ0OTkyMjE1M6VzcGFjZccUaLMyNDY4MjUyMTYzMDk2OTE0NDYxrHZlcnRleGFycmF5c4GocG9zaXRpb26Cq3R5cGVfbGVuZ3RoA6RmbGF0yAEgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAIA/AACAPwAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAAAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAgD8AAIA/AAAAAAAAgD8AAAAAAAAAAAAAgD8AAIA/AACAPwAAAAAAAIA/AACAPwAAAAAAAAAAAACAPwAAgD8AAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAAAAAACAPwAAgD8AAAAAAAAAAAAAgD8AAIA/AAAAAAAAgD8AAIA/AACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAAAAAAAAAIA/AACAP6RuYW1lunZvbHVtZS03NDEyMjI2MzQwMzY2NjU0MzI5qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gASpW1vZGVsx0AXAAAgQQAAAAAAAAAAAAAAAAAAAAAAACBBAAAAAAAAAAAAAAAAAAAAAAAAIEEAAAAAAAAAAAAAAAAAAAAAAACAP6dkaWZmdXNlxwwXzczMPs3MzD7NzMw+qmNvbG9ycmFuZ2XXF1x0vTp2kX8/qnZvbHVtZWRhdGGLqmFuaXNvdHJvcHnKP4AAAKV3cmFwUrNDbGFtcFRvRWRnZVdyYXBwaW5npGRhdGHID6AX6jCjPWmgGD/shsc+ydxPP2GaGj6dB4U+jppgP1aSHD6gkw8/iiIcPhXmIj8ScW0/pwdwP4Kl6T75HxA9MR82P42UKz90V6o+GlYhP7wnxz5xh5U+wr8hPiZxlj4NwdA+NaC6PQD78D1dRHQ/hYofP4tjhj4OoC0+aP/zPMTUDj+j714/YEAzP1ByHD4MBcY9U5wLP3FbTD8NtEk+4XcYPxrohT2hbwQ/Khf4PuMO3D50H+M+NBY1P/kYkT6REgU/0ajYPmMaGz8DzOk+CBBFPyAAuz6timk/jiNfPwxebj9N68U8glUNPz5uFz+8vI87l7PIPQg9ET+HLjU/v/JaP4ONvT6fYB8/hI1CP25ygz6jnFc/4CoXPwTIHz9vHYc+2UCtPWrf4D53ID0/whAVP8LRBD4vORU/a9RDPO4GaD9zwd0839U1P1L58z7J6T4/6qr/PiQ/Oz9dmgU/L2Q5P00kSD/JyKE+DG0SP+QmND9rT3w9Yhd+PiRgUT8xRDs/QoTTPlsPsj7/msI+Z7vxPYdGFz7rbDo/JasDPyixXT9ivFE/YCAPP1e/1D5w1mQ+uAXhPcz+BD9fFVk9sIooPx2lzj40gn4/1WIwPyuJCz+jDS8/832ZPvGMVD2K/LY+bcE3P+DiIj95KV4/7ASDPk5FTD/Cj0M/leocP72oXz9wPkA/0Dc8Pz0+3D33m/s+w5spPqRreT9lezQ/QBwEPyF5Aj9fXE8/RU8NP4fLwD4Gghw/4CgfPtkOlj5UsP0+56elPtGsEj+N2nE/zb/xPXCIcD5Inb8+jg9gP3DGND+ZYAE/kHtZP29zEj8rrAQ/+2OOPmgxHj8G+ys/x/x/PpE6AD+KweE8QbE5P10eNj739x4/5dxCPzXXwD6oxns/ti8ZPEwzQD9+k34/gvRTPnyP9z7sM3w/EMe3PmRB+DwS8ew+5DdIP8l18z51roI+2jDcPsRgaz8G5MI+fuVAP7Q3uT4Fdis/JCEQPyL66j46UMQ+mS3CPhs5LT915Lw+174GPxfbuT62h34/wpT4PpN17D13HV0/Q2hgP9vpCD+HFw0+wAfrPhrD7D4oXkw95xR/P9R+nD7zJOA+agPhPmjWyT6wlCY/bLgFP3LrPD9XV2A/VQqoPqvMID5F3jI/rc70PlbzPj54B7A9QNh+PwtjSz+cWWQ/ceg6P/Nybj+bfRM/zvh6P2oPXz90ihs/9JfdPaPH8T5RYis97GcUP2YmqT5hnFk/xVYZP5ZC6T7YET8//eqFPn7VIj4ksJY+NkU4PIWgjT7LO5Q+Wa9xPtpU8T43XzY/JYA0P9k2Dz9d3IU+ePA1PxJxLT4xI/4+vbxJP3OkBD8Q50k++6iHPn/naT9Kybo9DtEbP1IaOz+hmO0+dMN9P3aRfz+PlIw+V/tTP6G/Yj9qQ/c+m+CsPbew3DwA/G0+ZH99P61xyD4TXPw+EbDGPjuKMj/Tvv0+oZk6PyqnND/1D9I9L7ZbP/rZmj4Cc1Q/h7PUPSwC3T5Vgpo+uJYCPxSoSz7CW8A+yeAMP1Pmbz/VOm4/BRijPmnY2T7s0Mk+eNlsP+iyQz/EByk/VjpMPzAXOj5hcf8+zvIvP0ayMz0l2y8+Wkk1Po7zPT+UTHw/gWt2PqtHVT8y93U/ViEZP+2Dvz6bf1Y/cQXjPtdoNj5GB7Y+hLbQO+aEsj6Ephg+mY0ZP6rb7z75IHU9NE1KP4gYPT4ZzmM/CEoYPzD2Lj/jMsk+Zo+dPmGvtj7lzAA/hoWiPCPOhD5IsGY/2lBRP+aTiD5QEn0/1b1lPt7jTj7H7kU94O8kPnQsTz9Ly1I/tD0mPup9Uz8hN+w+7s7pPly5SD+lPkY+XVTaPtjxjT6PeXQ/yX30PpA6Ej9rKxw/DMBZP+iYxz0Zv/I+NgltPzkPZj9cdL06ogWEPsp+zj7jYrE99r55Px65dD7173k+CfdRP36+gD3j240+yqF2P4dBvD5iKOc+ZzKEPuX5aD9OHUc/N4iRPhUaZT4fdHo/7vgXP26R7D7mDTE/L40VPy49az+xdS8/ovIgP2PBOj8WwEE+kMtYP4YWeT31MVo/7UuLPo+Psj7qzJE+Ev9yPX/rej9znAs/ocQyPt0BGT892yU+1S5yP8zLZD9hbd4+45glP0NPSj+pB+w+4awmPwFDZD9d7Yo+X3NoPQ+EdD+x/Gc+Qv6xPuTG7D2v+N4+GkZsP8INJT+Eo+s+bWTzPi0cHT+7GKk+tdjwO16rZD+MUAc+ML3JPpc9Dj/LTDc/7lVMP+9nLj8xAWg/SIj9PlF7nD6Ca7I+Db+lPoT5ND/doP8+BgDMPYkH2D1DhMI9Q2pCPoarDD+meKo+qjUjPyI9CD9ObWc/ZDVTPoSTCT9Zmz4/jL06PwN0FT5xsBg/P/pSPzWHFj7qrfA+xTJUPxe6GD7OSq8+jZrvPk/vHj+DuHQ/0pI9PtIpAz+17iA+FCVEP4+J8j5L2H0/4lfyPv7/rT61sk8/l+EzP1M6Nj+h41c/JGcjPw06pj4DhQo/vwBbP0mjlj3Byj4/UUYvPuQbUT5jtZ0+4+g7P3uLhT686E8/YOCbPuJGaz+z/iE/OOmWPh+FZz9xTDI/5JJuP5htcD96Ohw/p0g+PyDhLT/uKVI/zHdKP4faSD3/YUc/3RDbPE0g/z3N2iY/5o/5Pfg5Nj/f8dQ+DCkqP39uLT5gnv8+ZFYTPwdAWT/vwBU/zDDrPvkDZz8k+jY/3vqxPvQlaT9+elY+QAA/PkIYGz9J/1U/AcqqPn7/Qz5QNHw/UDJWP1o/KT9vrU0+YjMpP+pk3j454Eg/Zf8UP65xAj0rdm4/+cQ3P2VG+D6Ppyw++7A9P/h0JD+Ng4w9woE8PnMVBT/IBnE+5wkxPyy5JT8H+cE+jUNMPhkEgz7FucI+CbteP14jHT+pNnc/MpbUPrlrWT/Iw1o/TFmNPsGnsD6WzNw+G80yP85iCz8KhEQ/N6yNPkW31Dz4oys/S6Z8PznWSD/JgGs/cWAWP8Xd/z5o2u0+TjxOPyi4fj94XBc9/4VHP4SYoz4aLl0/O0GdPuhSVz/8exg/MXJQP0cT/j7oe2E/uqajPkz+mj55QDg/Ls8LP8cVAD8Oh2U+ODkWP5OqyD73RMA+AmyHPTumaT7Yax8/Uq/rPsdMWj9RXSg+XF58P4HtJz+l2xs+IWsoP54z+T1mZJg+HaprPkrPFz6Z9gM/MJtiP6t2Lz8h3As8nc1mPsPPrD76Tms/y1hnPyCPOj6qzxk+VY4MPyW1bT6n8nY+KBTzPuki6j5dUGo/rkQrPygjsT6RaB8/0Ss7P8FFFD8rql8/xTwjPsNAQj2NSh4/yk0yPwD/oj5SJ0g+rMX6PmHQWj9tYEs/BYRUPz07Tz8MfKA9/RAeP0N8LD4tQmg9YLNVP8CHEj8KXjA/tuULPOJVYz+8mRA+T+JAPTBswD7PxCQ/AcksP3FW9z7OK4w+rr0FP7Khsj7ayyM/piCFPlJzvDy/fN8+z5ZpP4/3zz5yU+0+eULoPutPwz6EfnY/o2fHPsd3Jz9/GW4/bHCHPWrWET/Dkg8/1iITP9tGpj605BA/GjcNPxDBij2fMdI+8YZPPjIgHD+f+hc/lrhMP5BPDT5iitk+7dkAP2D+ET9nPYA9U9UjP9H4MD9Fqu8+K4j0Pk0aOz+/0qs+5/8rPsuH8D4n9Fw/bmBgPs0Eaj+G7vk+iFkaPwzyZz61d4Y+NfLUPv1xRz88c/U+cHmePsgIcj+QPX0+iEZHPzZhdD/fsH499JB7P3vBkT3NoV4/03zPPsA0/z1iPFQ/5WxbPxBFfT85Iho/Wp1BPvE6ST+QQC88Dd5wP5/hOD+vXyw/KmcjPpBadz9qEkM+0hUYP3JUXj0bjWU+aOeSPbCkkj71wks/miY2Py8ouT06kJ4939YVP1Gk8T4AS6M+eu9LPyQ+TT/R8BU+ZILsPZiKmD7os3s/HbiSPkReQT+pIwE/qN9hPzxDET5cPHo//gbwPmtXXT/q+MA+FRskP+GCCD2xG/0+RhEZPpR2QD5MDgI/zXxxPslhvz15uDg/6nC6Poi9wT4NHnY/ZRl0P4eaYD8AA2c+Zo0xPuOYQD8JP14+8QIeP8VJOj8Kj4k+PltOP4r/3D4ghn8+oCggP4fucD8Zubk98C94Pw9S4D49LJQ+Z+YCP/CVRz9KmcA+/GQlPzSB8z4JUrU+xMmqPrf2ZD+2O9M9sPsWP1ALVT7NZmM/a/9SPFgVFD+ua4k9tTfxPgtpED8JiUw/b5VCP/WklD0McDQ/+DwwPwZxWD/guQM/NncJPwAJAT9THD4/OBR1P4SXFz8GVls/bnTuPrwzvj5wbWg/KPwnP7ioQT7Pc9Q+Xc/2PpN6YT4CvtQ9n1FbP4LlBD8TAJs+NM++PpWqez/5lGI/oc+RPQlZpj0hnnE/fh4YP5038D7cIVI/hCc+P/LIoj5+83U/gxQ4P/8pYj+WM3s/JIBWPiCl7z39hFM+7/ZBP5+aKD6Xu1s/nTFaP2zLyD2xhSY9CzR6Pw/EvT4Bjkg+0VtqP9wCgj4sMnM/H3p0PrKr9D7+l1c+ClEjPw4iGj9QzdM9u0UHPr8FDj9EHeI9bynsPcsgKD7dL3g/K+42P+Jjnj0I/ds+7HU5PkYuVz9IcXU/yfIcP5p8NT+jnmA9xIByP1AyHz9pyBc/uC1PPiH4iT7XKJQ8izVgP0c3+z4KL0E9KHAYPYV7Xj49M14/+lIlPmRpBz9CC9w+qgYwPlr5kD10h7c93DfVPgrD0T6kRro+eHWHPviymD4Qc3I/T5oYP06AOD6iOfc9EX7LPq4bYj89KJY+sxCMPdhl+Tx23CI+NpR2PdNP8z7ossA99a5QPyWFFD7ziNk+5N9CP8woUz/4VUo/h0g4P7BNNz7bK5w+QRS/Pgz4Lz8o8MM+w6ZMPhxZ5T5vHmw+QJYfPQYPtj4QcsM+gBGWPdfUXj+XbK4+B+2WPtEnFz8AquY+jw9bPxnbFD/FqOU+pitMP4TxMT9Bzv48U/5DP015aT5Y5oc+F3AGPjZ8OD4rzsM9j1RdPohmNT/su/s+n7+VPi0ofD+G800/d++wPk1tFT9k9zw/NrNOPhXtXD84v+I+z8wvP5MRAD2579M+YvdTP0jSLT46SO8+o4TJPim3Pj+IjIM+7AcKP4toQz9SrG4+Kl52Pzsj9z7T7zg/kiBzPzwU8z5fJiE/fhSTPg6qqj49m7E+7l56P1RNwj1NCZU+oOsOPum9rj6Fgt0+5vVvPxiTSz7AgtY+hCeLPpfXBD8CXqk+nwB4P+gMyT1FnGA/V1M7P+yyHD+qAD8+5BYZP6ltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOzQ2xhbXBUb0VkZ2VXcmFwcGluZ6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemXHDBUKAAAACgAAAAoAAACld3JhcFSzQ2xhbXBUb0VkZ2VXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWnYW1iaWVudMcMF83MDD/NzAw/zcwMP6tleWVwb3NpdGlvbscMFwAAgD8AAIA/AACAP6hzcGVjdWxhcscMF83MTD7NzEw+zcxMPqdwaWNraW5nwqhtb2RlbGludsdAF83MzD0AAAAAAAAAAAAAAAAAAAAAzczMPQAAAAAAAAAAAAAAAAAAAADNzMw9AAAAAAAAAAAAAAAAAAAAAAAAgD+pYWxnb3JpdGhtB6lvYmplY3RfaWQAqGlzb3Jhbmdlyj1MzM2qYWJzb3JwdGlvbso/gAAArWxpZ2h0cG9zaXRpb27HDBco/MdBKPzHQSlrvkGrZGVwdGhfc2hpZnTKAAAAAKlzaGluaW5lc3PKQgAAAKhpc292YWx1Zco/AAAAqGNvbG9ybWFwialtaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKP4AAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTs0NsYW1wVG9FZGdlV3JhcHBpbmekZGF0YcgPoBfAtIg+E7afOxWpqD4AAAAArH6JPqZZHzziz6s+AAAAALM+ij5z0HM8b+6uPgAAAAC09Io+j7GmPG0Esj4AAAAAyqCLPvcY1jxgEbU+AAAAAL5CjD45GQQ9cBW4PgAAAADJ2ow+XW4ePeYPuz4AAAAAxmiNPvksOT3cAL4+AAAAAKDsjT5I7lI9FOjAPgAAAABxZo4+tN9rPf3Ewz4AAAAALNaOPtkUgj2Sl8Y+AAAAAKE7jz4u9Y09ml/JPgAAAADslo8+8puZPb4czD4AAAAAAeiPPv8SpT3Zzs4+AAAAANQukD6BYbA9snXRPgAAAABva5A+FY27PfUQ1D4AAAAAyp2QPiibxj1woNY+AAAAAO3FkD62j9E99yPZPgAAAADf45A+rm3cPV6b2z4AAAAAqveQPkY45z1YBt4+AAAAADgBkT5+8fE9wmTgPgAAAACbAJE+SJv8PXi24j4AAAAA5fWQPqubAz5C++Q+AAAAACjhkD5l4wg+/zLnPgAAAABjwpA+iCUOPpxd6T4AAAAAq5mQPkliEz70eus+AAAAADlnkD4Kmhg+44rtPgAAAAD9KpA+S80dPkWN7z4AAAAAIOWPPib8Ij4kgvE+AAAAAMiVjz7KJig+dmnzPgAAAAAPPY8+H00tPhVD9T4AAAAAFtuOPkFvMj4PD/c+AAAAAANwjj52jTc+Vc34PgAAAAAU/I0+aac8Pvp9+j4AAAAAkX+NPi29QT4gIfw+AAAAAG36jD7SzkY+s7b9PgAAAAD4bIw+WNxLPsg+/z4AAAAAY9eLPkflUD7SXAA/AACAPxA6iz7I6VU+lxMBPwAAgD8qlYo+pOlaPtPDAT8AAIA/1uiJPtTkXz6obQI/AACAPzg1iT4W22Q+ChEDPwAAgD/oeog+V8xpPieuAz8AAIA/EbqHPlG4bj71RAQ/AACAP8vyhj4Nn3M+x9UEPwAAgD+iJYY+UYB4PpRgBT8AAIA/vVKFPk5cfT6d5QU/AACAP4V6hD4+GYE+92QGPwAAAABInYM+WoGDPsneBj8AAAAAZbuCPqrmhT4/Uwc/AAAAAAjVgT71SIg+Y8IHPwAAAAB+6oA+OqiKPm0sCD8AAAAAS/h/PnkEjT6IkQg/AAAAAIoUfj6qXY8+0PEIPwAAAADRKnw+p7ORPndNCT8AAAAAajt6PngGlD6mpAk/AAAAAMlGeD5EVpY+gPcJPwAAAACvTXY+0aKYPiZGCj8AAAAAkVB0PjTsmj7RkAo/AAAAAAtQcj58Mp0+m9cKPwAAAAACTXA+oXWfPrgaCz8AAAAABUhuPom1oT5IWgs/AAAAAGFBbD5J8qM+eJYLPwAAAACjOWo+8SumPm7PCz8AAAAAWDFoPpNiqD5OBQw/AAAAAPIoZj4wlqo+MjgMPwAAAAD7IGQ+x8asPj9oDD8AAAAA4hliPmz0rj6hlQw/AAAAAA4UYD4vH7E+fMAMPwAAAADyD14++UazPt7oDD8AAAAA8Q1cPgNstT72Dg0/AAAAAFMOWj5Yjrc+5jINPwAAAACQEVg+7q25PsFUDT8AAAAABhhWPt3Kuz60dA0/AAAAAPwhVD4y5b0+y5INPwAAAAC7L1I+BP2/PhWvDT8AAAAAG0FQPl4Swj6yyQ0/AAAAALpWTj53JcQ+t+INPwAAAACEcEw+QTbGPkb6DT8AAAAAa45KPtNEyD5iEA4/AACAPy6xSD4yUco+HSUOPwAAgD9j2EY+flvMPpg4Dj8AAIA/PwRFPttjzj7XSg4/AACAP8Y0Qz5NatA+2VsOPwAAgD9YakE+6m7SPrprDj8AAIA/U6Q/Pr5x1D6Eeg4/AACAP/niPT7wctY+RYgOPwAAgD9FJjw+m3LYPv+UDj8AAIA/7m06Pqhw2j6yoA4/AAAAAMq5OD5Wbdw+b6sOPwAAAAAwCjc+o2jePjq1Dj8AAAAAbl41Pp5i4D4Yvg4/AAAAAJS2Mz54W+I+98UOPwAAAACoEjI+J1PkPu3MDj8AAAAACXIwPtVJ5j7x0g4/AAAAAMnULj51P+g+BtgOPwAAAADdOi0+KDTqPh/cDj8AAAAAx6MrPgko7D5H3w4/AAAAAIUPKj4jG+4+aOEOPwAAAACjfSg+jA3wPoHiDj8AAAAAEO4mPkb/8T6T4g4/AAAAAJ5gJT5t8PM+jeEOPwAAAADS1CM+DOH1Pl3fDj8AAAAArEoiPizR9z762w4/AAAAACzCID70wPk+Y9cOPwAAAAALOx8+U7D7Po/RDj8AAAAABLUdPluf/T5jyg4/AAAAADwwHD4cjv8+z8EOPwAAAACsrBo+Vr4AP9O3Dj8AAAAAYCoZPoG1AT9YrA4/AAAAAHOpFz6frAI/Xp8OPwAAAADmKRY+p6MDP8WQDj8AAAAA56sUPqOaBD91gA4/AAAAAF8vEz6fkQU/YW4OPwAAAADMtBE+m4gGP3daDj8AAAAAnzwQPop/Bz+mRA4/AAAAACHHDj6Bdgg/2ywOPwAAAADQVA0+fW0JP/YSDj8AAAAAduYLPodkCj/x9g0/AAAAAF59Cj6GWws/ydgNPwAAAACIGQk+oFIMP1W4DT8AAIA/HrwHPq9JDT96lQ0/AACAPwpmBj7cQA4/KXANPwAAgD/lGAU+CzgPP19IDT8AAIA/VtUDPjsvED/YHQ0/AACAP6qdAj57JhE/rPAMPwAAgD/ccgE+vB0SP5fADD8AAIA/glcAPgwVEz++jQw/AACAP5iZ/j1ODBQ/4lcMPwAAgD9zqfw9ngMVPwwfDD8AAIA/AeP6Pd/6FT8M4ws/AAAAAHJK+T0g8hY/36MLPwAAAAA05fc9XekXP2VhCz8AAAAA/bf2PYngGD+UGws/AAAAAE/I9T2j1xk/S9IKPwAAAAA3G/U9qM4aP5iFCj8AAAAAx7X0PYrFGz9INQo/AAAAAIad9D1NvBw/QuEJPwAAAABY2PQ99LIdP4KJCT8AAAAAumr1PWupHj/1LQk/AAAAABla9j2znx8/ic4IPwAAAAC6q/c9vJUgPzFrCD8AAAAAIWT5PZCLIT/bAwg/AAAAAEmH+z0ggSI/ZpgHPwAAAABVGf49YHYjP9EoBz8AAAAAho4APklrJD8NtQY/AAAAAMNKAj7aXyU//TwGPwAAAACmQgQ+CVQmP5rABT8AAAAAAncGPtBHJz/ZPwU/AAAAAGboCD4hOyg/qboEPwAAAAARlws++y0pP/cwBD8AAAAALoMOPksgKj+9ogM/AAAAAH+sET4TEis/5A8DPwAAAABzEhU+SAMsP2p4Aj8AAAAAq7QYPtTzLD9L3AE/AAAAABuSHD684y0/ZzsBPwAAAAC9qSA++dIuP8CVAD8AAAAAvvokPnnBLz+F1v8+AAAAAKCDKT43rzA/43f+PgAAAAAkQy4+JpwxP2sP/T4AAAAAKzgzPkKIMj8rnfs+AAAAAORgOD5uczM/0iD6PgAAAABIvD0+s100P4ua+D4AAIA/h0hDPgNHNT9ACvc+AACAP6sEST5dLzY/zW/1PgAAgD/S7k4+oBY3PzDL8z4AAIA/0QVVPsr8Nz9pHPI+AACAP4BJWz7T4Tg/OWPwPgAAgD9wt2E+ocU5P3ef7j4AAIA/PE5oPlGoOj9n0ew+AACAP8gMbz6liTs/BPnqPgAAgD/x8XU+umk8PxQW6T4AAAAAmPx8PnxIPT/RKOc+AAAAAM8Vgj7PJT4/GDHlPgAAAAD4voU+vAE/P8ou4z4AAAAAYnmJPifcPz/hIeE+AAAAALREjT4OtUA/SQrfPgAAAABfIJE+aoxBPxzo3D4AAAAA5wuVPiBiQj9cu9o+AAAAAPkGmT4vNkM/B4TYPgAAAAApEZ0+kwhEPx5C1j4AAAAAJCqhPjrZRD+g9dM+AAAAAJ5RpT4XqEU/gp7RPgAAAAAyh6k+HXVGP548zz4AAAAAq8qtPj5ARz/9z8w+AAAAALQbsj50CUg/yFjKPgAAAADvebY+rdBIP/7Wxz4AAAAABeW6PuiVST+QSsU+AAAAAL9cvz4SWUo/n7PCPgAAAADl4MM+JhpLPykSwD4AAAAAH3HIPhbZSz8iZr0+AAAAADgNzT7dlUw/qq+6PgAAAAAMtdE+ZFBNP5futz4AAAAAY2jWPp8ITj/4IrU+AAAAAN4m2z6Mvk4//0yyPgAAAAA+8N8+InJPP7hsrz4AAAAASMTkPlcjUD88gqw+AAAAALWi6T4j0lA/lI2pPgAAAAA8i+4+b35RP/aOpj4AAAAArn3zPkkoUj8+hqM+AAAAAOt5+D6Uz1I/rnOgPgAAAAB3f/0+Q3RTP3lXnT4AAAAAHEcBP2MWVD+JMZo+AAAAAPjSAz/qtVQ/MgKXPgAAgD8uYwY/xlJVP2TJkz4AAIA/l/cIP/PsVT9ah5A+AACAPwGQCz9ihFY/nTyNPgAAgD9WLA4/IxlXPzjpiT4AAIA/bMwQPy6rVz+cjYY+AACAPw9wEz9wOlg/8ymDPgAAgD8cFxY/5MZYP0h9fz4AAIA/UcEYP6lQWT/ymHg+AACAP5duGz+u11k/UadxPgAAgD+4Hh4/9FtaPwOqaj4AAAAAcdEgP33dWj8zomM+AAAAAKeGIz9XXFs/bJFcPgAAAAAIPiY/hdhbP9J5VT4AAAAAbvcoPwRSXD9UXU4+AAAAAJ2yKz/eyFw/rj5HPgAAAABTby4/LT1dP7QgQD4AAAAAVC0xP/KuXT/5Bjk+AAAAAFnsMz83Hl4/M/UxPgAAAAAlrDY/FIteP0DwKj4AAAAAgmw5P5f1Xj+//SM+AAAAABwtPD/VXV8/7yMdPgAAAACr7T4/3cNfP3RqFj4AAAAA561BP9MnYD8K2g8+AAAAAJFtRD/KiWA//nwJPgAAAABaLEc/1OlgP89eAz4AAAAA9+lJPx5IYT+YGfs9AAAAACqmTD+4pGE/jCzwPQAAAACaYE8/wf9hP8AX5j0AAAAACRlSP2NZYj9L/9w9AAAAAD/PVD+5sWI/5AnVPQAAAADrglc/6AhjP3Vezj0AAAAAxjNaPxRfYz/eIsk9AAAAAJHhXD9htGM/MnnFPQAAAAAcjF8/8whkPwJ9wz0AAAAAKDNiP+1cZD83QsM9AAAAAInWZD9osGQ/4dHEPQAAAAD/dWc/nANlPz0qyD0AAAAAXxFqP5tWZT+/Ps09AAAAAD6obD+5qWU/kfrTPQAAAACSOm8/7/xlPwlA3D0AAAAAW8hxP3JQZj9I7uU9AAAAAH9RdD9NpGY/xeHwPQAAAADX1XY/rvhmP3b4/D0AAAAAUFV5P61NZz/SBwU+AAAAANnPez9Zo2c/hQQMPgAAAACARX4/6PlnP/VjEz4AAAAArHRocmVlX2Zvcm1hdKpSR0JBRm9ybWF0pHNpemXWFfoAAACkdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlp3Zpc2libGXHFGizOTQwNTcxMTAzODM3MDMzMTM2NrFhdHRyaWJ1dGVfdXBkYXRlcscUaLM1ODc2MjUwNzY4ODA2NTIyMTY1qG92ZXJkcmF3xxVotDEyNDkyMjI4MzM3MTk3MTA3MTYwr3VuaWZvcm1fdXBkYXRlcscUaLM2MDUxNTEyMjE1ODMyMjQ4Nzg4pWZhY2VzxxRoszYwODEzNjYzNjYwMzE1MjgyNzCkdXVpZLM3NDEyMjI2MzQwMzY2NjU0MzI5rXZlcnRleF9zb3VyY2XaBmMjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSBmbG9hdCBhYnNvcnB0aW9uOwpmbG9hdCBnZXRfYWJzb3JwdGlvbigpe3JldHVybiBhYnNvcnB0aW9uO30KdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSBzYW1wbGVyM0Qgdm9sdW1lZGF0YTsKdW5pZm9ybSBmbG9hdCBpc292YWx1ZTsKZmxvYXQgZ2V0X2lzb3ZhbHVlKCl7cmV0dXJuIGlzb3ZhbHVlO30KdW5pZm9ybSB2ZWMyIGNvbG9ycmFuZ2U7CnZlYzIgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIG1hdDQgbW9kZWxpbnY7Cm1hdDQgZ2V0X21vZGVsaW52KCl7cmV0dXJuIG1vZGVsaW52O30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWMzIGV5ZXBvc2l0aW9uOwp2ZWMzIGdldF9leWVwb3NpdGlvbigpe3JldHVybiBleWVwb3NpdGlvbjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHVpbnQgYWxnb3JpdGhtOwp1aW50IGdldF9hbGdvcml0aG0oKXtyZXR1cm4gYWxnb3JpdGhtO30KdW5pZm9ybSBmbG9hdCBpc29yYW5nZTsKZmxvYXQgZ2V0X2lzb3JhbmdlKCl7cmV0dXJuIGlzb3JhbmdlO30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KCgoKb3V0IHZlYzMgZnJhZ192ZXJ0OwpvdXQgdmVjMyBvX2xpZ2h0X2RpcjsKCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uLCB2aWV3OwoKdm9pZCBtYWluKCkKewogICAgZnJhZ192ZXJ0ID0gcG9zaXRpb247CiAgICB2ZWM0IHdvcmxkX3ZlcnQgPSBtb2RlbCAqIHZlYzQocG9zaXRpb24sIDEpOwogICAgb19saWdodF9kaXIgPSB2ZWMzKG1vZGVsaW52ICogdmVjNChnZXRfbGlnaHRwb3NpdGlvbigpLCAxKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3ICogd29ybGRfdmVydDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwp9CgqvZnJhZ21lbnRfc291cmNl2iCLI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gZmxvYXQgYWJzb3JwdGlvbjsKZmxvYXQgZ2V0X2Fic29ycHRpb24oKXtyZXR1cm4gYWJzb3JwdGlvbjt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBzYW1wbGVyMkQgY29sb3JtYXA7CnVuaWZvcm0gc2FtcGxlcjNEIHZvbHVtZWRhdGE7CnVuaWZvcm0gZmxvYXQgaXNvdmFsdWU7CmZsb2F0IGdldF9pc292YWx1ZSgpe3JldHVybiBpc292YWx1ZTt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBtYXQ0IG1vZGVsaW52OwptYXQ0IGdldF9tb2RlbGludigpe3JldHVybiBtb2RlbGludjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjMyBleWVwb3NpdGlvbjsKdmVjMyBnZXRfZXllcG9zaXRpb24oKXtyZXR1cm4gZXllcG9zaXRpb247fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB1aW50IGFsZ29yaXRobTsKdWludCBnZXRfYWxnb3JpdGhtKCl7cmV0dXJuIGFsZ29yaXRobTt9CnVuaWZvcm0gZmxvYXQgaXNvcmFuZ2U7CmZsb2F0IGdldF9pc29yYW5nZSgpe3JldHVybiBpc29yYW5nZTt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CgpzdHJ1Y3QgTm90aGluZ3sgLy9Ob3RoaW5nIHR5cGUsIHRvIGVuY29kZSBpZiBzb21lIHZhcmlhYmxlIGRvZXNuJ3QgY29udGFpbiBhbnkgZGF0YQogICAgYm9vbCBfOyAvL2VtcHR5IHN0cnVjdHMgYXJlIG5vdCBhbGxvd2VkCn07CmluIHZlYzMgZnJhZ192ZXJ0OwppbiB2ZWMzIG9fbGlnaHRfZGlyOwoKY29uc3QgZmxvYXQgbWF4X2Rpc3RhbmNlID0gMS4zOwoKY29uc3QgaW50IG51bV9zYW1wbGVzID0gMjAwOwpjb25zdCBmbG9hdCBzdGVwX3NpemUgPSBtYXhfZGlzdGFuY2UgLyBmbG9hdChudW1fc2FtcGxlcyk7CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pCnsKICAgIHJldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7Cn0KCnZlYzQgY29sb3JfbG9va3VwKGZsb2F0IGludGVuc2l0eSwgc2FtcGxlcjJEIGNvbG9yX3JhbXAsIHZlYzIgbm9ybSkKewogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfcmFtcCwgdmVjMihfbm9ybWFsaXplKGludGVuc2l0eSwgbm9ybS54LCBub3JtLnkpLCAwLjApKTsKfQoKdmVjMyBnZW5ub3JtYWwodmVjMyB1dncsIGZsb2F0IGQpCnsKICAgIHZlYzMgYSwgYjsKICAgIC8vIGhhbmRsZSBub3JtYWxzIGF0IGVkZ2VzIQogICAgaWYodXZ3LnggKyBkID49IDEuMCl7CiAgICAgICAgcmV0dXJuIHZlYzMoMSwgMCwgMCk7CiAgICB9CiAgICBpZih1dncueSArIGQgPj0gMS4wKXsKICAgICAgICByZXR1cm4gdmVjMygwLCAxLCAwKTsKICAgIH0KICAgIGlmKHV2dy56ICsgZCA+PSAxLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIDAsIDEpOwogICAgfQoKICAgIGlmKHV2dy54IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKC0xLCAwLCAwKTsKICAgIH0KICAgIGlmKHV2dy55IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIC0xLCAwKTsKICAgIH0KICAgIGlmKHV2dy56IC0gZCA8PSAwLjApewogICAgICAgIHJldHVybiB2ZWMzKDAsIDAsIC0xKTsKICAgIH0KCiAgICBhLnggPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHV2dyAtIHZlYzMoZCwwLjAsMC4wKSkucjsKICAgIGIueCA9IHRleHR1cmUodm9sdW1lZGF0YSwgdXZ3ICsgdmVjMyhkLDAuMCwwLjApKS5yOwoKICAgIGEueSA9IHRleHR1cmUodm9sdW1lZGF0YSwgdXZ3IC0gdmVjMygwLjAsZCwwLjApKS5yOwogICAgYi55ID0gdGV4dHVyZSh2b2x1bWVkYXRhLCB1dncgKyB2ZWMzKDAuMCxkLDAuMCkpLnI7CgogICAgYS56ID0gdGV4dHVyZSh2b2x1bWVkYXRhLCB1dncgLSB2ZWMzKDAuMCwwLjAsZCkpLnI7CiAgICBiLnogPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHV2dyArIHZlYzMoMC4wLDAuMCxkKSkucjsKICAgIHJldHVybiBub3JtYWxpemUoYS1iKTsKfQoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCkgKyBtYXgoZG90KEwsIC1OKSwgMC4wKTsKICAgIC8vIHNwZWN1bGFyIGNvZWZmaWNpZW50CiAgICB2ZWMzIEggPSBub3JtYWxpemUoTCArIFYpOwogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApICsgbWF4KGRvdChILCAtTiksIDAuMCksIHNoaW5pbmVzcyk7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgYW1iaWVudCAqIGNvbG9yICsKICAgICAgICBkaWZmdXNlICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBzcGVjdWxhciAqIHNwZWNfY29lZmYKICAgICk7Cn0KCi8vIFNpbXBsZSByYW5kb20gZ2VuZXJhdG9yIGZvdW5kOgovLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQyMDAyMjQvcmFuZG9tLW5vaXNlLWZ1bmN0aW9ucy1mb3ItZ2xzbApmbG9hdCByYW5kKCl7CiAgICByZXR1cm4gZnJhY3Qoc2luKGdsX0ZyYWdDb29yZC54ICogMTIuOTg5OCArIGdsX0ZyYWdDb29yZC55ICogNzguMjMzKSAqIDQzNzU4LjU0NTMpOwp9Cgp2ZWM0IHZvbHVtZSh2ZWMzIGZyb250LCB2ZWMzIGRpcikKewogICAgLy8gVGhlIHBlci12b3hlbCBhbHBoYSBjaGFubmVsIGlzIHNwZWNpZmllZCBpbiB1bml0cyBvZiBvcGFjaXR5L2xlbmd0aC4KICAgIC8vIElmIG91ciB2b3hlbHMgYXJlIG5vdCBpc290cm9waWMsIHRoZW4gdGhlIGRpc3RhbmNlIHRoYXQgd2UgdHJhY2UgdGhyb3VnaAogICAgLy8gZGVwZW5kcyBvbiB0aGUgZGlyZWN0aW9uLgogICAgdmVjMyAgcG9zID0gZnJvbnQ7CiAgICBmbG9hdCBUID0gMS4wOwogICAgdmVjMyBMbyA9IHZlYzMoMC4wKTsKICAgIGludCBpID0gMDsKICAgIGZvciAoaTsgaSA8IG51bV9zYW1wbGVzOyArK2kpIHsKICAgICAgICBmbG9hdCBpbnRlbnNpdHkgPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHBvcykueDsKICAgICAgICB2ZWM0IGRlbnNpdHkgPSBjb2xvcl9sb29rdXAoaW50ZW5zaXR5LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICAgICAgZmxvYXQgb3BhY2l0eSA9IHN0ZXBfc2l6ZSAqIGRlbnNpdHkuYSAqIGFic29ycHRpb247CiAgICAgICAgVCAqPSAxLjAgLSBvcGFjaXR5OwogICAgICAgIGlmIChUIDw9IDAuMDEpCiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICBMbyArPSAoVCpvcGFjaXR5KSpkZW5zaXR5LnJnYjsKICAgICAgICBwb3MgKz0gZGlyOwogICAgfQogICAgcmV0dXJuIHZlYzQoTG8sIDEuMCAtIFQpOwp9CgoKdmVjNCB2b2x1bWVyZ2JhKHZlYzMgZnJvbnQsIHZlYzMgZGlyKQp7CiAgICB2ZWMzICBwb3MgPSBmcm9udDsKICAgIGZsb2F0IFQgPSAxLjA7CiAgICB2ZWMzIExvID0gdmVjMygwLjApOwogICAgaW50IGkgPSAwOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXMgOyArK2kpIHsKICAgICAgICB2ZWM0IGRlbnNpdHkgPSB0ZXh0dXJlKHZvbHVtZWRhdGEsIHBvcyk7CiAgICAgICAgZmxvYXQgb3BhY2l0eSA9IHN0ZXBfc2l6ZSAqIGRlbnNpdHkuYTsKICAgICAgICBUICo9IDEuMCAtIG9wYWNpdHk7CiAgICAgICAgaWYgKFQgPD0gMC4wMSkKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgIExvICs9IChUKm9wYWNpdHkpKmRlbnNpdHkucmdiOwogICAgICAgIHBvcyArPSBkaXI7CiAgICB9CiAgICByZXR1cm4gdmVjNChMbywgMS4wIC0gVCk7Cn0KCnZlYzQgY29udG91cnModmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICBmbG9hdCBUID0gMS4wOwogICAgdmVjMyBMbyA9IHZlYzMoMC4wKTsKICAgIGludCBpID0gMDsKICAgIHZlYzMgY2FtZGlyID0gbm9ybWFsaXplKC1kaXIpOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSkgewogICAgICAgIGZsb2F0IGludGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIHZlYzQgZGVuc2l0eSA9IGNvbG9yX2xvb2t1cChpbnRlbnNpdHksIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgICAgICBmbG9hdCBvcGFjaXR5ID0gZGVuc2l0eS5hOwogICAgICAgIGlmKG9wYWNpdHkgPiAwLjApewogICAgICAgICAgICB2ZWMzIE4gPSBnZW5ub3JtYWwocG9zLCBzdGVwX3NpemUpOwogICAgICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodF9kaXIgLSBwb3MpOwogICAgICAgICAgICB2ZWMzIG9wYXF1ZSA9IGJsaW5ucGhvbmcoTiwgY2FtZGlyLCBMLCBkZW5zaXR5LnJnYik7CiAgICAgICAgICAgIExvICs9IChUICogb3BhY2l0eSkgKiBvcGFxdWU7CiAgICAgICAgICAgIFQgKj0gMS4wIC0gb3BhY2l0eTsKICAgICAgICAgICAgaWYgKFQgPD0gMC4wMSkKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBwb3MgKz0gZGlyOwogICAgfQogICAgcmV0dXJuIHZlYzQoTG8sIDEuMCAtIFQpOwp9Cgp2ZWM0IGlzb3N1cmZhY2UodmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICB2ZWM0IGMgPSB2ZWM0KDAuMCk7CiAgICBpbnQgaSA9IDA7CiAgICB2ZWM0IGRpZmZ1c2VfY29sb3IgPSBjb2xvcl9sb29rdXAoaXNvdmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIHZlYzMgY2FtZGlyID0gbm9ybWFsaXplKC1kaXIpOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSl7CiAgICAgICAgZmxvYXQgZGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIGlmKGFicyhkZW5zaXR5IC0gaXNvdmFsdWUpIDwgaXNvcmFuZ2UpewogICAgICAgICAgICB2ZWMzIE4gPSBnZW5ub3JtYWwocG9zLCBzdGVwX3NpemUpOwogICAgICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodF9kaXIgLSBwb3MpOwogICAgICAgICAgICBjID0gdmVjNCgKICAgICAgICAgICAgICAgIGJsaW5ucGhvbmcoTiwgY2FtZGlyLCBMLCBkaWZmdXNlX2NvbG9yLnJnYiksCiAgICAgICAgICAgICAgICBkaWZmdXNlX2NvbG9yLmEKICAgICAgICAgICAgKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHBvcyArPSBkaXI7CiAgICB9CiAgICByZXR1cm4gYzsKfQoKdmVjNCBtaXAodmVjMyBmcm9udCwgdmVjMyBkaXIpCnsKICAgIHZlYzMgcG9zID0gZnJvbnQ7CiAgICBpbnQgaSA9IDA7CiAgICBmbG9hdCBtYXhpbXVtID0gMC4wOwogICAgZm9yIChpOyBpIDwgbnVtX3NhbXBsZXM7ICsraSwgcG9zICs9IGRpcil7CiAgICAgICAgZmxvYXQgZGVuc2l0eSA9IHRleHR1cmUodm9sdW1lZGF0YSwgcG9zKS54OwogICAgICAgIGlmKG1heGltdW0gPCBkZW5zaXR5KQogICAgICAgICAgICBtYXhpbXVtID0gZGVuc2l0eTsKICAgIH0KICAgIHJldHVybiBjb2xvcl9sb29rdXAobWF4aW11bSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwp9Cgp1bmlmb3JtIHVpbnQgb2JqZWN0aWQ7Cgpjb25zdCBmbG9hdCB0eXBlbWF4ID0gMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwLjA7Cgpib29sIG5vX3NvbHV0aW9uKGZsb2F0IHgpewogICAgcmV0dXJuIHggPD0gMC4wMDAxIHx8IGlzaW5mKHgpIHx8IGlzbmFuKHgpOwp9CgpmbG9hdCBtaW5fYmlnZ2VyXzAoZmxvYXQgYSwgZmxvYXQgYil7CiAgICBib29sIGFfbm8gPSBub19zb2x1dGlvbihhKTsKICAgIGJvb2wgYl9ubyA9IG5vX3NvbHV0aW9uKGIpOwogICAgaWYoYV9ubyAmJiBiX25vKXsKICAgICAgICAvLyBubyBzb2x1dGlvbgogICAgICAgIHJldHVybiB0eXBlbWF4OwogICAgfQogICAgaWYoYV9ubyl7CiAgICAgICAgcmV0dXJuIGI7CiAgICB9CiAgICBpZihiX25vKXsKICAgICAgICByZXR1cm4gYTsKICAgIH0KICAgIHJldHVybiBtaW4oYSwgYik7Cn0KCmZsb2F0IG1pbl9iaWdnZXJfMCh2ZWMzIHYxLCB2ZWMzIHYyKXsKICAgIGZsb2F0IHggPSBtaW5fYmlnZ2VyXzAodjEueCwgdjIueCk7CiAgICBmbG9hdCB5ID0gbWluX2JpZ2dlcl8wKHYxLnksIHYyLnkpOwogICAgZmxvYXQgeiA9IG1pbl9iaWdnZXJfMCh2MS56LCB2Mi56KTsKICAgIHJldHVybiBtaW4oeCwgbWluKHksIHopKTsKfQoKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkKewogICAgdmVjNCBjb2xvcjsKICAgIHZlYzMgZXllX3VuaXQgPSB2ZWMzKG1vZGVsaW52ICogdmVjNChleWVwb3NpdGlvbiwgMSkpOwogICAgdmVjMyBiYWNrX3Bvc2l0aW9uID0gZnJhZ192ZXJ0OwogICAgdmVjMyBkaXIgPSBub3JtYWxpemUoZXllX3VuaXQgLSBiYWNrX3Bvc2l0aW9uKTsKICAgIC8vIHNvbHZlIGJhY2tfcG9zaXRpb24gKyBkaXN0YW5jZSAqIGRpciA9PSAxCiAgICAvLyBzb2x2ZSBiYWNrX3Bvc2l0aW9uICsgZGlzdGFuY2UgKiBkaXIgPT0gMAogICAgLy8gdG8gc2VlIHdoZXJlIGl0IGZpcnN0IGhpdHMgdW5pdCBjdWJlIQogICAgdmVjMyBzb2x1dGlvbl8xID0gKDEuMCAtIGJhY2tfcG9zaXRpb24pIC8gZGlyOwogICAgdmVjMyBzb2x1dGlvbl8wID0gKDAuMCAtIGJhY2tfcG9zaXRpb24pIC8gZGlyOwogICAgZmxvYXQgc29sdXRpb24gPSBtaW5fYmlnZ2VyXzAoc29sdXRpb25fMSwgc29sdXRpb25fMCk7CgogICAgdmVjMyBzdGFydCA9IGJhY2tfcG9zaXRpb24gKyBzb2x1dGlvbiAqIGRpcjsKICAgIHZlYzMgc3RlcF9pbl9kaXIgPSAoYmFja19wb3NpdGlvbiAtIHN0YXJ0KSAvIGZsb2F0KG51bV9zYW1wbGVzKTsKCiAgICBmbG9hdCBzdGVwcyA9IDAuMTsKICAgIGlmKGFsZ29yaXRobSA9PSB1aW50KDApKQogICAgICAgIGNvbG9yID0gaXNvc3VyZmFjZShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgxKSkKICAgICAgICBjb2xvciA9IHZvbHVtZShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgyKSkKICAgICAgICBjb2xvciA9IG1pcChzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZSBpZihhbGdvcml0aG0gPT0gdWludCgzKSkKICAgICAgICBjb2xvciA9IHZvbHVtZXJnYmEoc3RhcnQsIHN0ZXBfaW5fZGlyKTsKICAgIGVsc2UgaWYoYWxnb3JpdGhtID09IHVpbnQoNCkpCiAgICAgICAgY29sb3IgPSB2ZWM0KDAuMCk7CiAgICAgICAgLy8gY29sb3IgPSB2b2x1bWVpbmRleGVkcmdiYShzdGFydCwgc3RlcF9pbl9kaXIpOwogICAgZWxzZQogICAgICAgIGNvbG9yID0gY29udG91cnMoc3RhcnQsIHN0ZXBfaW5fZGlyKTsKCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChjb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCB1aW50KDApKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGNvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBjb2xvcjsKCn0Kj6x0cmFuc3BhcmVuY3nHFWi0MTIxNTM1OTk5MTAzODQ5Njk1Mzmlc3BhY2XHFWi0MTI4OTAyMjM3MzY1NjMyNTkyOTSsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtNTExOTQ5Njc0OTAyNDkyNzk0NaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAgD8AAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0ykAAAACpbGluZXdpZHRoykAAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAACzQwBAB0StbGluZXdpZHRoX2VuZMpAAAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAIA/AAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFyj8x0Eo/MdBKWu+QaVjb2xvctgXAACAPwAAAAAAAAAAAACAP6d2aXNpYmxlxxVotDE4MDU2NjQ2NDIxMjM1MzA3MjUxsWF0dHJpYnV0ZV91cGRhdGVyxxVotDE2MzY5MTY5NTUyMTY1OTU2NzcxqG92ZXJkcmF3xxVotDEyNTQ2ODQ0NjQ0NDM2MTc0Mzcyr3VuaWZvcm1fdXBkYXRlcscVaLQxMDEyOTc3NDI3MTYzNjk2NjM2NqVmYWNlc8cUaLM2NTY2NjI5MDY5MzI1NzczMzAxpHV1aWSzNTExOTQ5Njc0OTAyNDkyNzk0Na12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAwQQAAgL8AADBBAAAwQQAAgL8AADBBAACAvwAAgL+tc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAIC/AACAvwAAMEEAAIC/AAAwQQAAMEEAAIC/AAAwQa9iYWNrZ3JvdW5kY29sb3LHFGizNjkwODYxMTcyMzA4NjczNDA1M6lwaXhlbGFyZWHHFWi0MTc5MTg5NDUxMDUxNjgzMTc0MzGmY2FtZXJhxxRoszQxNDIzMDQ0NjU2MjE4MzUzNzWkdXVpZLM2Mjk5NzgwNTM4NTUyNjY3MTI2q2NhbTNkX3N0YXRlhqZsb29rYXTHDBf+Q8ZA/kPGQAAAoECrZXllcG9zaXRpb27HDBco/MdBKPzHQSlrvkGodXB2ZWN0b3LHDBcAAAAAAAAAAAAAgD+jZm92ykI0AACkbmVhcspALbA9o2ZhcspCotU5qmNsZWFyc2NlbmXCqGNoaWxkcmVukImndmlzaWJsZccVaLQxMjcxNjMyMzU4OTM0OTQ1ODc2N6VwbG90c9wAH46sdHJhbnNwYXJlbmN5xxVotDE1NTUwNDEzNjU0MjYxMjUzODc5pXNwYWNlxxRoszQxNTU3MjAzODQ1MDY1MDc2MjGsdmVydGV4YXJyYXlzgahwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAANVDAAAsQgAAREQAACxCAADVQwAAEkQAAEREAAASRKRuYW1lt21lc2gtMTE3ODEzMDQ5Mzc3MTM2MTkyqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAXvmludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcsOpYmFja2xpZ2h0ygAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAyMIAAIA/p2RpZmZ1c2XHDBfNzMw+zczMPs3MzD6qY29sb3JyYW5nZcOnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAAKhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKdwYXR0ZXJuwqxub3JtYWxtYXRyaXjHJBcAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+idXbXFwAAAAAAAAAAp3NoYWRpbmfCqHNwZWN1bGFyxwwXzcxMPs3MTD7NzEw+p25vcm1hbHPHDBcAAAAAAAAAAAAAAACncGlja2luZ8Kpb2JqZWN0X2lkAK11bmlmb3JtX2NvbG9y2BcAAIA/AACAPwAAgD8AAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvcsKpc2hpbmluZXNzykIAAACoY29sb3JtYXDDp3Zpc2libGXHFGizMzI4MDYxOTY3ODcwMDUxMjA1NrFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNzQ2Nzc5NjQ3OTI1NzMwNjY3OahvdmVyZHJhd8cUaLM0MDg5NDcyNjE2MzIxMzUwODUyr3VuaWZvcm1fdXBkYXRlcscUaLM5MjUwMzc3ODgzMjEwMTQ4MjM1pWZhY2VzxxVotDEyNDU4MDgzMzQ1MTE2OTA1NjA1pHV1aWSyMTE3ODEzMDQ5Mzc3MTM2MTkyrXZlcnRleF9zb3VyY2XaFCkjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMyBzcGVjdWxhcjsKdmVjMyBnZXRfc3BlY3VsYXIoKXtyZXR1cm4gc3BlY3VsYXI7fQp1bmlmb3JtIGJvb2wgY29sb3JtYXA7CmJvb2wgZ2V0X2NvbG9ybWFwKCl7cmV0dXJuIGNvbG9ybWFwO30KdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCB1bmlmb3JtX2NvbG9yOwp2ZWM0IGdldF91bmlmb3JtX2NvbG9yKCl7cmV0dXJuIHVuaWZvcm1fY29sb3I7fQp1bmlmb3JtIGJvb2wgc2hhZGluZzsKYm9vbCBnZXRfc2hhZGluZygpe3JldHVybiBzaGFkaW5nO30KdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgdmVjMyBvX25vcm1hbDsKb3V0IHZlYzMgb19jYW1kaXI7Cm91dCB2ZWMzIG9fbGlnaHRkaXI7CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNChmbG9hdCB2KXtyZXR1cm4gdmVjNCh2LCAwLjAsIDAuMCwgMC4wKTt9CnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCB2ZXJ0ZXhfY29sb3IodmVjMyBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKHZlYzQgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGZsb2F0IHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIHZlYzQodmFsdWUsIDAuMCwgMC4wLCAwLjApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfQp9Cgp2b2lkIHJlbmRlcih2ZWM0IHBvc2l0aW9uX3dvcmxkLCB2ZWMzIG5vcm1hbCwgbWF0NCB2aWV3LCBtYXQ0IHByb2plY3Rpb24sIHZlYzMgbGlnaHRwb3NpdGlvbikKewogICAgLy8gbm9ybWFsIGluIHdvcmxkIHNwYWNlCiAgICBvX25vcm1hbCA9IGdldF9ub3JtYWxtYXRyaXgoKSAqIG5vcm1hbDsKICAgIC8vIHBvc2l0aW9uIGluIHZpZXcgc3BhY2UgKGFzIHNlZW4gZnJvbSBjYW1lcmEpCiAgICB2ZWM0IHZpZXdfcG9zID0gdmlldyAqIHBvc2l0aW9uX3dvcmxkOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3X3BvczsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGxpZ2h0CiAgICBvX2xpZ2h0ZGlyID0gbm9ybWFsaXplKHZpZXcqdmVjNChsaWdodHBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5ejsKICAgIC8vIGRpcmVjdGlvbiB0byBjYW1lcmEKICAgIC8vIFRoaXMgaXMgZXF1aXZhbGVudCB0bwogICAgLy8gbm9ybWFsaXplKHZpZXcqdmVjNChleWVwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXoKICAgIC8vIChieSBkZWZpbml0aW9uIGB2aWV3ICogZXllcG9zaXRpb24gPSAwYCkKICAgIG9fY2FtZGlyID0gbm9ybWFsaXplKC12aWV3X3BvcykueHl6Owp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIC8vIGdldF8qIGdldHMgdGhlIGdsb2JhbCBpbnB1dHMgKHVuaWZvcm0sIHNhbXBsZXIsIHBvc2l0aW9uIGFycmF5KQogICAgLy8gdGhvc2UgZnVuY3Rpb25zIHdpbGwgZ2V0IGluc2VydGVkIGJ5IHRoZSBzaGFkZXIgY3JlYXRpb24gcGlwZWxpbmUKICAgIHZlYzMgdmVydGV4X3Bvc2l0aW9uID0gdG92ZWMzKGdldF9wb3NpdGlvbigpKTsKICAgIGlmIChpc25hbih2ZXJ0ZXhfcG9zaXRpb24ueikpIHsKICAgICAgICB2ZXJ0ZXhfcG9zaXRpb24ueiA9IDAuMDsKICAgIH0KICAgIHZlYzQgcG9zaXRpb25fd29ybGQgPSBtb2RlbCAqIHZlYzQodmVydGV4X3Bvc2l0aW9uLCAxKTsKCiAgICByZW5kZXIocG9zaXRpb25fd29ybGQsIGdldF9ub3JtYWxzKCksIHZpZXcsIHByb2plY3Rpb24sIGdldF9saWdodHBvc2l0aW9uKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191diA9IHZlYzIoMS4wIC0gZnJhZ191di55LCBmcmFnX3V2LngpOwogICAgZnJhZ19jb2xvciA9IHZlcnRleF9jb2xvcihnZXRfY29sb3IoKSwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX1ZlcnRleElEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoVVCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIHZlYzMgbm9ybWFsczsKdmVjMyBnZXRfbm9ybWFscygpe3JldHVybiBub3JtYWxzO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBib29sIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjsKYm9vbCBnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCl7cmV0dXJuIGludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcjt9CnVuaWZvcm0gZmxvYXQgYmFja2xpZ2h0OwpmbG9hdCBnZXRfYmFja2xpZ2h0KCl7cmV0dXJuIGJhY2tsaWdodDt9CnVuaWZvcm0gdmVjMyBhbWJpZW50Owp2ZWMzIGdldF9hbWJpZW50KCl7cmV0dXJuIGFtYmllbnQ7fQp1bmlmb3JtIG1hdDMgbm9ybWFsbWF0cml4OwptYXQzIGdldF9ub3JtYWxtYXRyaXgoKXtyZXR1cm4gbm9ybWFsbWF0cml4O30KdW5pZm9ybSB2ZWMzIGxpZ2h0cG9zaXRpb247CnZlYzMgZ2V0X2xpZ2h0cG9zaXRpb24oKXtyZXR1cm4gbGlnaHRwb3NpdGlvbjt9CnVuaWZvcm0gdmVjNCBuYW5fY29sb3I7CnZlYzQgZ2V0X25hbl9jb2xvcigpe3JldHVybiBuYW5fY29sb3I7fQp1bmlmb3JtIGZsb2F0IHNoaW5pbmVzczsKZmxvYXQgZ2V0X3NoaW5pbmVzcygpe3JldHVybiBzaGluaW5lc3M7fQp1bmlmb3JtIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KdW5pZm9ybSBib29sIGNvbG9ycmFuZ2U7CmJvb2wgZ2V0X2NvbG9ycmFuZ2UoKXtyZXR1cm4gY29sb3JyYW5nZTt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSB2ZWM0IHVuaWZvcm1fY29sb3I7CnZlYzQgZ2V0X3VuaWZvcm1fY29sb3IoKXtyZXR1cm4gdW5pZm9ybV9jb2xvcjt9CnVuaWZvcm0gYm9vbCBzaGFkaW5nOwpib29sIGdldF9zaGFkaW5nKCl7cmV0dXJuIHNoYWRpbmc7fQp1bmlmb3JtIHZlYzMgZGlmZnVzZTsKdmVjMyBnZXRfZGlmZnVzZSgpe3JldHVybiBkaWZmdXNlO30KdW5pZm9ybSB2ZWM0IGxvd2NsaXA7CnZlYzQgZ2V0X2xvd2NsaXAoKXtyZXR1cm4gbG93Y2xpcDt9CgppbiB2ZWMyIGZyYWdfdXY7CmluIHZlYzQgZnJhZ19jb2xvcjsKZmxhdCBpbiBpbnQgc2FtcGxlX2ZyYWdfY29sb3I7CgppbiB2ZWMzIG9fbm9ybWFsOwppbiB2ZWMzIG9fY2FtZGlyOwppbiB2ZWMzIG9fbGlnaHRkaXI7Cgp2ZWMzIGJsaW5ucGhvbmcodmVjMyBOLCB2ZWMzIFYsIHZlYzMgTCwgdmVjMyBjb2xvcil7CiAgICBmbG9hdCBkaWZmX2NvZWZmID0gbWF4KGRvdChMLCBOKSwgMC4wKTsKCiAgICAvLyBzcGVjdWxhciBjb2VmZmljaWVudAogICAgdmVjMyBIID0gbm9ybWFsaXplKEwgKyBWKTsKCiAgICBmbG9hdCBzcGVjX2NvZWZmID0gcG93KG1heChkb3QoSCwgTiksIDAuMCksIGdldF9zaGluaW5lc3MoKSk7CiAgICBpZiAoZGlmZl9jb2VmZiA8PSAwLjApCiAgICAgICAgc3BlY19jb2VmZiA9IDAuMDsKICAgIC8vIGZpbmFsIGxpZ2h0aW5nIG1vZGVsCiAgICByZXR1cm4gdmVjMygKICAgICAgICBnZXRfZGlmZnVzZSgpICogZGlmZl9jb2VmZiAqIGNvbG9yICsKICAgICAgICBnZXRfc3BlY3VsYXIoKSAqIHNwZWNfY29lZmYKICAgICk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzMgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdmVjNChjb2xvciwgMS4wKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjNCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBjb2xvcjsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiBmcmFnX2NvbG9yOyAgLy8gY29sb3Igbm90IGluIHVuaWZvcm0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgaWYgKGdldF9wYXR0ZXJuKCkpIHsKICAgICAgICB2ZWMyIHNpemUgPSB2ZWMyKHRleHR1cmVTaXplKGNvbG9yLCAwKSk7CiAgICAgICAgdmVjMiBwb3MgPSBnbF9GcmFnQ29vcmQueHk7CiAgICAgICAgcmV0dXJuIHRleGVsRmV0Y2goY29sb3IsIGl2ZWMyKG1vZChwb3MueCwgc2l6ZS54KSwgbW9kKHBvcy55LCBzaXplLnkpKSwgMCk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7CiAgICB9Cn0KCmZsb2F0IF9ub3JtYWxpemUoZmxvYXQgdmFsLCBmbG9hdCBmcm9tLCBmbG9hdCB0byl7cmV0dXJuICh2YWwtZnJvbSkgLyAodG8gLSBmcm9tKTt9Cgp2ZWM0IGdldF9jb2xvcl9mcm9tX2NtYXAoZmxvYXQgdmFsdWUsIHNhbXBsZXIyRCBjb2xvcl9tYXAsIHZlYzIgY29sb3JyYW5nZSkgewogICAgZmxvYXQgY21pbiA9IGNvbG9ycmFuZ2UueDsKICAgIGZsb2F0IGNtYXggPSBjb2xvcnJhbmdlLnk7CiAgICBpZiAodmFsdWUgPD0gY21heCAmJiB2YWx1ZSA+PSBjbWluKSB7CiAgICAgICAgLy8gaW4gdmFsdWUgcmFuZ2UsIGNvbnRpbnVlIQogICAgfSBlbHNlIGlmICh2YWx1ZSA8IGNtaW4pIHsKICAgICAgICByZXR1cm4gZ2V0X2xvd2NsaXAoKTsKICAgIH0gZWxzZSBpZiAodmFsdWUgPiBjbWF4KSB7CiAgICAgICAgcmV0dXJuIGdldF9oaWdoY2xpcCgpOwogICAgfSBlbHNlIHsKICAgICAgICAvLyBpc25hbiBpcyBicm9rZW4gKG9mIGNvdXJzZSkgLS4tCiAgICAgICAgLy8gc28gaWYgb3V0c2lkZSB2YWx1ZSByYW5nZSBhbmQgbm90IHNtYWxsZXIvYmlnZ2VyIG1pbi9tYXggd2UgYXNzdW1lIE5hTgogICAgICAgIHJldHVybiBnZXRfbmFuX2NvbG9yKCk7CiAgICB9CiAgICBmbG9hdCBpMDEgPSBjbGFtcCgodmFsdWUgLSBjbWluKSAvIChjbWF4IC0gY21pbiksIDAuMCwgMS4wKTsKICAgIC8vIDEvMCBjb3JyZXNwb25kcyB0byB0aGUgY29ybmVyIG9mIHRoZSBjb2xvcm1hcCwgc28gdG8gcHJvcGVybHkgaW50ZXJwb2xhdGUKICAgIC8vIGJldHdlZW4gdGhlIGNvbG9ycywgd2UgbmVlZCB0byBzY2FsZSBpdCwgc28gdGhhdCB0aGUgZW5kcyBhcmUgYXQgMSAtIChzdGVwc2l6ZS8yKSBhbmQgMCsoc3RlcHNpemUvMikuCiAgICBmbG9hdCBzdGVwc2l6ZSA9IDEuMCAvIGZsb2F0KHRleHR1cmVTaXplKGNvbG9yX21hcCwgMCkpOwogICAgaTAxID0gKDEuMCAtIHN0ZXBzaXplKSAqIGkwMSArIDAuNSAqIHN0ZXBzaXplOwogICAgcmV0dXJuIHRleHR1cmUoY29sb3JfbWFwLCB2ZWMyKGkwMSwgMC4wKSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyKCkpIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcChmcmFnX2NvbG9yLngsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZyYWdfY29sb3I7CiAgICB9Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCB2YWx1ZXMsIHZlYzIgdXYsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIGZsb2F0IHZhbHVlID0gdGV4dHVyZSh2YWx1ZXMsIHV2KS54OwogICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAodmFsdWUsIGNvbG9ybWFwLCBjb2xvcnJhbmdlKTsKfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgdmVjNCByZWFsX2NvbG9yID0gZ2V0X2NvbG9yKHVuaWZvcm1fY29sb3IsIGZyYWdfdXYsIGdldF9jb2xvcnJhbmdlKCksIGNvbG9ybWFwKTsKICAgIHZlYzMgc2hhZGVkX2NvbG9yID0gcmVhbF9jb2xvci5yZ2I7CgogICAgaWYoZ2V0X3NoYWRpbmcoKSl7CiAgICAgICAgdmVjMyBMID0gbm9ybWFsaXplKG9fbGlnaHRkaXIpOwogICAgICAgIHZlYzMgTiA9IG5vcm1hbGl6ZShvX25vcm1hbCk7CiAgICAgICAgdmVjMyBsaWdodDEgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCBMLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgdmVjMyBsaWdodDIgPSBibGlubnBob25nKE4sIG9fY2FtZGlyLCAtTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHNoYWRlZF9jb2xvciA9IGdldF9hbWJpZW50KCkgKiByZWFsX2NvbG9yLnJnYiArIGxpZ2h0MSArIGdldF9iYWNrbGlnaHQoKSAqIGxpZ2h0MjsKICAgIH0KCiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChyZWFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHJlYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IHZlYzQoc2hhZGVkX2NvbG9yLCByZWFsX2NvbG9yLmEpOwp9Co+sdHJhbnNwYXJlbmN5xxVotDE1NTUwNDEzNjU0MjYxMjUzODc5pXNwYWNlxxRoszQxNTU3MjAzODQ1MDY1MDc2MjGsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtODQzNTU4MjIxOTE5NDQ0NjgzM6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAyMIAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0ygAAAACpbGluZXdpZHRoygAAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMoAAAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAAAAq2RlcHRoX3NoaWZ0yrcnxaytbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAAAAAKd2aXNpYmxlxxRoszMyODA2MTk2Nzg3MDA1MTIwNTaxYXR0cmlidXRlX3VwZGF0ZXLHFGizOTYyNDcwMTY5Mjg3NTU3MDE3MKhvdmVyZHJhd8cUaLM0MDg5NDcyNjE2MzIxMzUwODUyr3VuaWZvcm1fdXBkYXRlcscUaLM4NTU1MzE4OTk2MDQyNTMzOTc5pWZhY2VzxxRoszkwMTA4OTUxMTUxNjgzNTkyNjmkdXVpZLM4NDM1NTgyMjE5MTk0NDQ2ODMzrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAEREAAAsQgAAREQAABJEAADVQwAAEkQAANVDAAAsQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAA1UMAACxCAABERAAALEIAAEREAAASRAAA1UMAABJEj6x0cmFuc3BhcmVuY3nHFWi0MTI5MjIxNDI5MTU1NzYyODMzNzKlc3BhY2XHFWi0MTM4OTM3MTA3NDk0MTIyMTgxMjCsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTcyMjQyNjYwMDk2MTE2NzQ1NjmpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAACPwvU9pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACDBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAj8L1PatkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAI/C9T2ndmlzaWJsZccUaLMzMzk2NDAyMDIxOTkzODU1NTkxsWF0dHJpYnV0ZV91cGRhdGVyxxRoszY1MTI3NzgxMjQ4ODI3ODE4ODiob3ZlcmRyYXfHFWi0MTUyMzEwMzUxNTkzNzE3NzAyNzCvdW5pZm9ybV91cGRhdGVyxxVotDEyMjgzMjI2OTkyOTU3NzMxNjY3pWZhY2VzxxVotDE3MzI1MjcxMTE2MjA0MDgzMTI3pHV1aWS0MTcyMjQyNjYwMDk2MTE2NzQ1NjmtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoF5rZ70MAABJEM9MJRAAAEkSauRtEAAASRACgLUQAABJEZoY/RAAAEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBea2e9DAAAsQjPTCUQAACxCmrkbRAAALEIAoC1EAAAsQmaGP0QAACxCj6x0cmFuc3BhcmVuY3nHFGizODkwMTI5MTM4MjcwMzU2OTI2NKVzcGFjZccTaLIzNzk3OTA0MTYyMTgwMzgxMjisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTMxMTYxMTcyMDIwNTA2MTYyMzapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAADNzEw9pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACDBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAzcxMPatkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAM3MTD2ndmlzaWJsZccUaLM1NDYxMjMzNzY5MTM0OTExNjA0sWF0dHJpYnV0ZV91cGRhdGVyxxVotDE0NTU5MDkzMjA4MTIxNzk1ODUwqG92ZXJkcmF3xxVotDE3ODY1NjQyNzE4NTgxNjEyNzQxr3VuaWZvcm1fdXBkYXRlcscUaLM5Njg5MTg0OTM2MDIzMzAwMjQ0pWZhY2VzxxVotDE1MjUxNzgyNTAzODQzODE5NjQzpHV1aWS0MTMxMTYxMTcyMDIwNTA2MTYyMzatdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAABJEAOAARAAAEkRmxhJEAAASRM2sJEQAABJENJM2RAAAEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcz891DAAAsQgDgAEQAACxCZsYSRAAALELNrCREAAAsQjSTNkQAACxCj6x0cmFuc3BhcmVuY3nHFWi0MTMzNzc1NTQ4ODEwNTQzMTAyNzilc3BhY2XHFWi0MTMxNTYzNjE1OTM0NTM2MTI3MzGsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTMyNjI1NzI3MTA5NDM4MDQwMjapY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAACPwvU9pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACDBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAj8L1PatkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAI/C9T2ndmlzaWJsZccUaLM4Mzg2MzY4MjE1MDU1MzU1MTU1sWF0dHJpYnV0ZV91cGRhdGVyxxRoszg4MTg0NzM5MTY1NzYxNTEzMziob3ZlcmRyYXfHFGizMzM0ODMzNDg5MTE4NTY3MjUzN691bmlmb3JtX3VwZGF0ZXLHE2iyMzAyNzIyMDQ1MTM5MzEzNzQ5pWZhY2VzxxVotDEwNTgyMTE4MjIzNjQ0NTM2MDAwpHV1aWS0MTMyNjI1NzI3MTA5NDM4MDQwMjatdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARETNTPhCAABERJlZaEMAAEREZ0aqQwAAREQAYOBDAABERM08C0Stc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAANVDzUz4QgAA1UOZWWhDAADVQ2dGqkMAANVDAGDgQwAA1UPNPAtEj6x0cmFuc3BhcmVuY3nHFGizNDIyODQwNzExNjEyMjgwNDI3NKVzcGFjZccUaLM4ODMyNjk5MjI4MDg3NjE0MDk3rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTg2NjQzNzQ4NDMxMTkyNjgwNzepY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAADNzEw9pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACDBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAzcxMPatkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAM3MTD2ndmlzaWJsZccVaLQxMDUwOTk1ODQ0OTg2OTQwODU1N7FhdHRyaWJ1dGVfdXBkYXRlcscUaLM5MjExMjMwMDkxNjUzNjY2MzA0qG92ZXJkcmF3xxRoszkxNDIxMjIwMzE3MzEzMTU5MjavdW5pZm9ybV91cGRhdGVyxxRoszM5Njk1NDE5MTY4Njc2NDQzNDalZmFjZXPHFGizMzc3MTMwMzU2NzMyMjQzNjYwNaR1dWlkszg2NjQzNzQ4NDMxMTkyNjgwNzetdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARESaGYxCAABERABAMkMAAEREmjmPQwAAREQzU8VDAABERM1s+0Otc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAANVDmhmMQgAA1UMAQDJDAADVQ5o5j0MAANVDM1PFQwAA1UPNbPtDj6x0cmFuc3BhcmVuY3nHE2iyMTg1NzkwNDkwNzE3NjIwNDQxpXNwYWNlxxRoszcxMjkxMTY3NzQ1MDM5MzkwNzGsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTcwNTEzNjg1MjMxMzE0NTk4MTGpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXONq2NvbG9yX3N0YXJ02BcAAAAAAAAAAAAAAAAAAIA/pW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAACBBAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/r2xpbmV3aWR0aF9zdGFydMo/gAAAqWxpbmV3aWR0aMo/gAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZErWxpbmV3aWR0aF9lbmTKP4AAAKlvYmplY3RfaWQAqWNvbG9yX2VuZNgXAAAAAAAAAAAAAAAAAACAP6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LYFwAAAAAAAAAAAAAAAAAAgD+ndmlzaWJsZccVaLQxNDc5NDg2MTk4NjY1NTIyOTM4MbFhdHRyaWJ1dGVfdXBkYXRlcscUaLM3NzIxODI5MjY3MDA1OTcxMzkxqG92ZXJkcmF3xxVotDE3MTEyMTMyMzA5MzM5NTU5MjM4r3VuaWZvcm1fdXBkYXRlcscVaLQxMjczNjkxODAwMzY5MTM4NDg5MaVmYWNlc8cSaLE1MDYzNTI3MDM2Mzk0NjIwNaR1dWlktDE3MDUxMzY4NTIzMTMxNDU5ODExrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBea2e9DAAASQjPTCUQAABJCmrkbRAAAEkIAoC1EAAASQmaGP0QAABJCrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXmtnvQwAAKkIz0wlEAAAqQpq5G0QAACpCAKAtRAAAKkJmhj9EAAAqQo+sdHJhbnNwYXJlbmN5xxRoszU0MTkyMzM1ODQ1NzEwNjI0MDilc3BhY2XHFGizOTc3MDE0OTE0NzM3NjkzMjAzN6x2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy01Mzc5NTM3MzI3NDc0MTAxNjM2qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHE2iyNTQyMDM2Mzg3ODk4MTQ1NzEysWF0dHJpYnV0ZV91cGRhdGVyxxVotDExNDE5NzkzNjY2NzQ0MjQ4NDc3qG92ZXJkcmF3xxVotDE2NDMzNTY3MzQyMTQzNjc1ODEwr3VuaWZvcm1fdXBkYXRlcscUaLM4ODIwNDQ3MTQwNTEzMjE3NTEypWZhY2VzxxVotDExMjM1NzY2MTU5MjQ5ODAwMTU1pHV1aWSzNTM3OTUzNzMyNzQ3NDEwMTYzNq12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXM/PdQwAAGkIA4ABEAAAaQmbGEkQAABpCzawkRAAAGkI0kzZEAAAaQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFzPz3UMAACpCAOAARAAAKkJmxhJEAAAqQs2sJEQAACpCNJM2RAAAKkLeABCsdHJhbnNwYXJlbmN5xxRoszUwMzA1NDQ2NzQ4MDMzMjU5Mzilc3BhY2XHFWi0MTIzNjUxMTE0NDgyOTg3MDQ1NDKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luHRleHQtOTI2MjI0NzU1MTIyODg1MDM5M6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc46lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/qWJpbGxib2FyZMKtcHJlcHJvamVjdGlvbsdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP61kaXN0YW5jZWZpZWxkiqltaW5GaWx0ZXKsTGluZWFyRmlsdGVyqmFuaXNvdHJvcHnKQYAAAKltYWdGaWx0ZXKsTGluZWFyRmlsdGVypXdyYXBTrlJlcGVhdFdyYXBwaW5npGRhdGGtdGV4dHVyZV9hdGxhc6x0aHJlZV9mb3JtYXSpUmVkRm9ybWF0pHNpemWSzQQAzQQApXdyYXBUrlJlcGVhdFdyYXBwaW5npHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZbJhdGxhc190ZXh0dXJlX3NpemXKRIAAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVpbWFnZcKpb2JqZWN0X2lkAKpzaGFwZV90eXBlA7B0cmFuc2Zvcm1fbWFya2Vyw6tkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+ndmlzaWJsZccTaLIyOTA3Nzk1ODMzNDA0ODU4NDmrbWFya2Vyc3BhY2XHFWi0MTUyNDU3NjIxNDA1MjIwMDEzNDOxYXR0cmlidXRlX3VwZGF0ZXLHFGizOTQ3MjM3NTEzNDk5Mjg1Mzg2OahvdmVyZHJhd8cVaLQxNTgzNTA0MDc5Nzc5MzAxMzU4Ma91bmlmb3JtX3VwZGF0ZXLHFGizOTYzNTE2NzQzNzI1NTI0NzgyNqVmYWNlc8cVaLQxNTIzNTA1MzA3MTQ5MDg3OTMyNqR1dWlkszkyNjIyNDc1NTEyMjg4NTAzOTOtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFWi0MTcxNjIzMDkxOTQ2NTU1NjM2MDOlc3BhY2XHFGizNDczMzUxMzQzNTkyNTgxNTkyMax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy03MTAyNDQwOTkzMjg1MDcxMzU3qWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccVaLQxMzY2NjQ3OTk0MjUxODg0MjU5OLFhdHRyaWJ1dGVfdXBkYXRlcscSaLE5OTQ1MjE5Mjk0MDI4MjAyMKhvdmVyZHJhd8cVaLQxMjAxNzQ0NjE4MDY2NzU5MTIwMq91bmlmb3JtX3VwZGF0ZXLHFGizMTg4NDM2ODA5ODY0NjEzMzg2NqVmYWNlc8cSaLE0MTk2NTkxOTY3MjM2MDExNqR1dWlkszcxMDI0NDA5OTMyODUwNzEzNTetdmVydGV4X3NvdXJjZdoJ5SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQppbiBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gREI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOGqWNvbG9yX2VuZIKrdHlwZV9sZW5ndGgEpGZsYXTHABetbGluZXdpZHRoX2VuZIKrdHlwZV9sZW5ndGgBpGZsYXTHABerY29sb3Jfc3RhcnSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcAF61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcAF69saW5ld2lkdGhfc3RhcnSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHE2iyMjcxNDExODE2OTk2MzUxODU4pXNwYWNlxxRoszc5MzE0NDA5MTk0NDQ4OTQwMzesdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtMTkyMDY4NzY5MDM5ODg0MTk1NaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAoEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxRoszYzODkyNjgyMzEwNDYzMTYwNTixYXR0cmlidXRlX3VwZGF0ZXLHFGizMTQyNjA5MDAyNDE4MDc1NTEyMKhvdmVyZHJhd8cUaLMyMDEzMTkxNDA3NjIzMTMzNTQ0r3VuaWZvcm1fdXBkYXRlcscVaLQxNzg5MjA4NTYxOTE3OTA5Mjk4MqVmYWNlc8cUaLM2MDgxMzU3NTQ4MjI3MzQyOTI3pHV1aWSzMTkyMDY4NzY5MDM5ODg0MTk1Na12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF01xcAIEREAAAsQq1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdNcXAMDUQwAALELeABCsdHJhbnNwYXJlbmN5xxVotDEyMDE4MzU2NjY4NjM2NzMxNDA5pXNwYWNlxxVotDExODM4NjAwODIzOTQ3NzMwMDQzrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbl0ZXh0LTExMzMxMDExNjg2Mzc5ODMwNzE0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxRoszg4NjQwNjQ4Njk2MDYyOTI0NTCrbWFya2Vyc3BhY2XHFWi0MTY2MTA4MTQ5ODgyMDE4MTE4ODGxYXR0cmlidXRlX3VwZGF0ZXLHFGizNzIzMzc5OTgxMjMyOTYwODczNahvdmVyZHJhd8cVaLQxMTA1NTYxNTg3NTIxNDMwNDk5Mq91bmlmb3JtX3VwZGF0ZXLHFWi0MTY4NDY3NDg2NjM5ODMyMzg0NTilZmFjZXPHFWi0MTI1NTQ0NjQzMzExMjI1NTI5MTGkdXVpZLQxMTMzMTAxMTY4NjM3OTgzMDcxNK12ZXJ0ZXhfc291cmNl2hpNI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgbWFya2Vyc2l6ZTsKdmVjMiBnZXRfbWFya2Vyc2l6ZSgpe3JldHVybiBtYXJrZXJzaXplO30KaW4gdmVjNCByb3RhdGlvbnM7CnZlYzQgZ2V0X3JvdGF0aW9ucygpe3JldHVybiByb3RhdGlvbnM7fQppbiB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CmluIHZlYzMgcG9zOwp2ZWMzIGdldF9wb3MoKXtyZXR1cm4gcG9zO30KaW4gdmVjMiBxdWFkX29mZnNldDsKdmVjMiBnZXRfcXVhZF9vZmZzZXQoKXtyZXR1cm4gcXVhZF9vZmZzZXQ7fQppbiB2ZWM0IHV2X29mZnNldF93aWR0aDsKdmVjNCBnZXRfdXZfb2Zmc2V0X3dpZHRoKCl7cmV0dXJuIHV2X29mZnNldF93aWR0aDt9CmluIHZlYzMgbWFya2VyX29mZnNldDsKdmVjMyBnZXRfbWFya2VyX29mZnNldCgpe3JldHVybiBtYXJrZXJfb2Zmc2V0O30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4X2RpbTsKCm91dCB2ZWM0IGZyYWdfY29sb3I7Cm91dCB2ZWMyIGZyYWdfdXY7Cm91dCBmbG9hdCBmcmFnX3V2c2NhbGU7Cm91dCBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7Cm91dCB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKCm1hdDQgcW1hdCh2ZWM0IHF1YXQpewogICAgZmxvYXQgbnVtID0gcXVhdC54ICogMi4wOwogICAgZmxvYXQgbnVtMiA9IHF1YXQueSAqIDIuMDsKICAgIGZsb2F0IG51bTMgPSBxdWF0LnogKiAyLjA7CiAgICBmbG9hdCBudW00ID0gcXVhdC54ICogbnVtOwogICAgZmxvYXQgbnVtNSA9IHF1YXQueSAqIG51bTI7CiAgICBmbG9hdCBudW02ID0gcXVhdC56ICogbnVtMzsKICAgIGZsb2F0IG51bTcgPSBxdWF0LnggKiBudW0yOwogICAgZmxvYXQgbnVtOCA9IHF1YXQueCAqIG51bTM7CiAgICBmbG9hdCBudW05ID0gcXVhdC55ICogbnVtMzsKICAgIGZsb2F0IG51bTEwID0gcXVhdC53ICogbnVtOwogICAgZmxvYXQgbnVtMTEgPSBxdWF0LncgKiBudW0yOwogICAgZmxvYXQgbnVtMTIgPSBxdWF0LncgKiBudW0zOwogICAgcmV0dXJuIG1hdDQoCiAgICAgICAgKDEuMCAtIChudW01ICsgbnVtNikpLCAobnVtNyArIG51bTEyKSwgICAgICAgIChudW04IC0gbnVtMTEpLCAgICAgICAgMC4wLAogICAgICAgIChudW03IC0gbnVtMTIpLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNikpLCAobnVtOSArIG51bTEwKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtOCArIG51bTExKSwgICAgICAgIChudW05IC0gbnVtMTApLCAgICAgICAgKDEuMCAtIChudW00ICsgbnVtNSkpLCAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMS4wCiAgICApOwp9CgpmbG9hdCBkaXN0YW5jZWZpZWxkX3NjYWxlKCl7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzOyBjb252ZXJ0IHRvIGRpbWVuc2lvbmxlc3MKICAgIC8vIHgtY29vcmRpbmF0ZSBvZiB0ZXh0dXJlIGluc3RlYWQgZm9yIGNvbnNpc3RlbmN5IHdpdGggcHJvZ3JhbW1hdGljIHV2CiAgICAvLyBkaXN0YW5jZSBmaWVsZHMgaW4gZnJhZ21lbnQgc2hhZGVyLiBTZWUgYWxzbyBjb21tZW50cyBiZWxvdy4KICAgIHZlYzQgdXZfcmVjdCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIGZsb2F0IHBpeHNpemVfeCA9ICh1dl9yZWN0LnogLSB1dl9yZWN0LngpICogZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpOwogICAgcmV0dXJuIC0xLjAvcGl4c2l6ZV94Owp9Cgp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKbWF0MiBkaWFnbSh2ZWMyIHYpewogICAgcmV0dXJuIG1hdDIodi54LCAwLjAsIDAuMCwgdi55KTsKfQoKZmxvYXQgX2RldGVybWluYW50KG1hdDIgbSkgewogIHJldHVybiBtWzBdWzBdICogbVsxXVsxXSAtIG1bMF1bMV0gKiBtWzFdWzBdOwp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIHZlYzIgYmJveF9zaWduZWRfcmFkaXVzID0gMC41ICogZ2V0X21hcmtlcnNpemUoKTsgLy8gbm90ZTsgY29tcG9uZW50cyBtYXkgYmUgbmVnYXRpdmUuCiAgICB2ZWMyIHNwcml0ZV9iYm94X2NlbnRyZSA9IGdldF9xdWFkX29mZnNldCgpICsgYmJveF9zaWduZWRfcmFkaXVzOwoKICAgIG1hdDQgcHZpZXcgPSBwcm9qZWN0aW9uICogdmlldzsKICAgIC8vIENvbXB1dGUgdHJhbnNmb3JtIGZvciB0aGUgb2Zmc2V0IHZlY3RvcnMgZnJvbSB0aGUgY2VudHJhbCBwb2ludAogICAgbWF0NCB0cmFucyA9IGdldF90cmFuc2Zvcm1fbWFya2VyKCkgPyBtb2RlbCA6IG1hdDQoMS4wKTsKICAgIHRyYW5zID0gKGdldF9iaWxsYm9hcmQoKSA/IHByb2plY3Rpb24gOiBwdmlldykgKiBxbWF0KGdldF9yb3RhdGlvbnMoKSkgKiB0cmFuczsKCiAgICAvLyBDb21wdXRlIGNlbnRyZSBvZiBiaWxsYm9hcmQgaW4gY2xpcHBpbmcgY29vcmRpbmF0ZXMKICAgIHZlYzQgc3ByaXRlX2NlbnRlciA9IHRyYW5zICogdmVjNChzcHJpdGVfYmJveF9jZW50cmUsIDAsIDApOwogICAgdmVjNCBkYXRhX3BvaW50ID0gZ2V0X3ByZXByb2plY3Rpb24oKSAqIG1vZGVsICogdmVjNCh0b3ZlYzMoZ2V0X3BvcygpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gdmVjNChkYXRhX3BvaW50Lnh5eiAvIGRhdGFfcG9pbnQudyArIG1hdDMobW9kZWwpICogdG92ZWMzKGdldF9tYXJrZXJfb2Zmc2V0KCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSBwdmlldyAqIGRhdGFfcG9pbnQ7CiAgICB2ZWM0IHZjbGlwID0gZGF0YV9wb2ludCArIHNwcml0ZV9jZW50ZXI7CgogICAgLy8gRXh0cmEgYnVmZmVyaW5nIGlzIHJlcXVpcmVkIGFyb3VuZCBzcHJpdGVzIHdoaWNoIGFyZSBhbnRpYWxpYXNlZCBzbyB0aGF0CiAgICAvLyB0aGUgYW50aWFsaWFzIGJsdXIgZG9lc24ndCBnZXQgY3V0IG9mZiAoc2VlICMxNSkuIFRoaXMgYmx1ciBmYWxscyB0bwogICAgLy8gemVybyBhdCBhIHJhZGl1cyBvZiBBTlRJQUxJQVNfUkFESVVTIHBpeGVscyBpbiB0aGUgdmlld3BvcnQgY29vcmRpbmF0ZXMKICAgIC8vIGFuZCB3ZSB3YW50IHRvIGJ1ZmZlciB0aGUgdmVydGljZXMgaW4gdGhlICpzb3VyY2UqIHNwcml0ZSBjb29yZGluYXRlCiAgICAvLyBzeXN0ZW0gc28gdGhhdCB3ZSBnZXQgdGhpcyBhbW91bnQgaW4gdGhlIG91dHB1dCBjb29yZGluYXRlcy4KICAgIC8vCiAgICAvLyBIZXJlIHdlIGNhbGN1bGF0ZSB0aGUgZGVyaXZhdGl2ZSBvZiB0aGUgbWFwcGluZyBmcm9tIHNwcml0ZSB4eQogICAgLy8gY29vcmRpbmF0ZXMgKGRlZmluZWQgYnkgYHRyYW5zYCkgaW50byB0aGUgdmlld3BvcnQgcGl4ZWwgY29vcmRpbmF0ZXMuCiAgICAvLyBUaGUgZGVyaXZhdGl2ZSBuZWVkcyB0byBpbmNsdWRlIHRoZSBwcm9wZXIgdGVybSBmb3IgdGhlIHBlcnNwZWN0aXZlCiAgICAvLyBkaXZpZGUgaW50byBOREMsIGV2YWx1YXRlZCBhdCB0aGUgY2VudHJlIHBvaW50IGB2Y2xpcGAuCiAgICBtYXQ0IGRfbmRjX2RfY2xpcCA9IG1hdDQoCiAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsCiAgICAgICAgLXZjbGlwLnh5ei8odmNsaXAudyp2Y2xpcC53KSwgICAgICAgICAgMC4wCiAgICApOwogICAgbWF0MiBkeHl2X2R4eXMgPSBkaWFnbSgwLjUgKiBnZXRfcmVzb2x1dGlvbigpKSAqIG1hdDIoZF9uZGNfZF9jbGlwKnRyYW5zKTsKICAgIC8vIE5vdywgb3VyIGJ1ZmZlciBzaXplIGlzIGV4cHJlc3NlZCBpbiB2aWV3cG9ydCBwaXhlbHMgYnV0IHdlIGdldCBiYWNrIHRvCiAgICAvLyB0aGUgc3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHVzaW5nIHRoZSBzY2FsZSBmYWN0b3Igb2YgdGhlCiAgICAvLyB0cmFuc2Zvcm1hdGlvbiAoZm9yIGlzb3Ryb3BpYyB0cmFuc2Zvcm1hdGlvbnMpLiBGb3IgYW5pc290cm9waWMKICAgIC8vIHRyYW5zZm9ybWF0aW9ucywgdGhlIGdlb21ldHJpYyBtZWFuIG9mIHRoZSB0d28gcHJpbmNpcGxlIHNjYWxlIGZhY3RvcnMKICAgIC8vIGlzIGEgcmVhc29uYWJsZSBjb21wcm9taXNlOgogICAgZmxvYXQgdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgPSBzcXJ0KGFicyhfZGV0ZXJtaW5hbnQoZHh5dl9keHlzKSkpOwoKICAgIC8vIEluIHRoZSBmcmFnbWVudCBzaGFkZXIgd2Ugd2FudCBvdXIgc2lnbmVkIGRpc3RhbmNlIGluIHZpZXdwb3J0IChwaXhlbCkKICAgIC8vIGNvb3JkcyBmb3IgZGlyZWN0IHVzZSBpbiBhbnRpYWxpYXNpbmcgc3RlcCBmdW5jdGlvbnMuIFdlIHRoZXJlZm9yZSBuZWVkCiAgICAvLyBhIHNjYWxpbmcgZmFjdG9yIHNpbWlsYXIgdG8gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUsIGJ1dCBpbmNsdWRpbmcKICAgIC8vIHRoZSB1di0+c3ByaXRlIGNvb3JkaW5hdGUgc3lzdGVtIHNjYWxpbmcgZmFjdG9yIGFzIHdlbGwuICBXZSBjaG9vc2UgdG8KICAgIC8vIHVzZSB0aGUgYm91bmRpbmcgYm94ICp4KiB3aWR0aCBmb3IgdGhpcy4gVGhpcyBjb21lcyB3aXRoIHNvbWUKICAgIC8vIGNvbnNpc3RlbmN5IGNvbmRpdGlvbnM6CiAgICAvLyAqIEZvciBwcm9jZWR1cmFsIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0aGUgc3ByaXRlIGJvdW5kaW5nIGJveCB0byBiZQogICAgLy8gICBzcXVhcmUuIChJZiBub3QsIHRoZSB1diBjb29yZGluYXRlcyB3aWxsIGJlIGFuaXNvdHJvcGljYWxseSBzY2FsZWQgYW5kCiAgICAvLyAgIGFueSBjYWxjdWxhdGlvbiBiYXNlZCBvbiB0aGVtIHdpbGwgbm90IGJlIGEgZGlzdGFuY2UgZnVuY3Rpb24uKQogICAgLy8gKiBGb3Igc2FtcGxlZCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdG8gY29uc2lzdGVudGx5IGNob29zZSB0aGUgKngqCiAgICAvLyAgIGZvciB0aGUgc2NhbGluZyBpbiBnZXRfZGlzdGFuY2VmaWVsZF9zY2FsZSgpLgogICAgZmxvYXQgc3ByaXRlX2Zyb21fdV9zY2FsZSA9IGFicyhnZXRfbWFya2Vyc2l6ZSgpLngpOwogICAgZnJhZ191dnNjYWxlID0gdmlld3BvcnRfZnJvbV9zcHJpdGVfc2NhbGUgKiBzcHJpdGVfZnJvbV91X3NjYWxlOwogICAgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlID0gZGlzdGFuY2VmaWVsZF9zY2FsZSgpOwogICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3IoKSk7CiAgICBmcmFnX3V2ID0gZ2V0X3V2KCk7CiAgICBmcmFnX3V2X29mZnNldF93aWR0aCA9IGdldF91dl9vZmZzZXRfd2lkdGgoKTsKICAgIC8vIHNjcmVlbiBzcGFjZSBjb29yZGluYXRlcyBvZiB0aGUgcG9zaXRpb24KICAgIHZlYzQgcXVhZF92ZXJ0ZXggPSAodHJhbnMgKiB2ZWM0KDIuMCAqIGJib3hfc2lnbmVkX3JhZGl1cyAqIGdldF9wb3NpdGlvbigpLCAwLjAsIDAuMCkpOwogICAgZ2xfUG9zaXRpb24gPSB2Y2xpcCArIHF1YWRfdmVydGV4OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cn0KCq9mcmFnbWVudF9zb3VyY2XaEogjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgYXRsYXNfdGV4dHVyZV9zaXplOwpmbG9hdCBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCl7cmV0dXJuIGF0bGFzX3RleHR1cmVfc2l6ZTt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGludCBzaGFwZV90eXBlOwppbnQgZ2V0X3NoYXBlX3R5cGUoKXtyZXR1cm4gc2hhcGVfdHlwZTt9CnVuaWZvcm0gc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQ7CnVuaWZvcm0gYm9vbCBpbWFnZTsKYm9vbCBnZXRfaW1hZ2UoKXtyZXR1cm4gaW1hZ2U7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7CmJvb2wgZ2V0X2JpbGxib2FyZCgpe3JldHVybiBiaWxsYm9hcmQ7fQp1bmlmb3JtIG1hdDQgcHJlcHJvamVjdGlvbjsKbWF0NCBnZXRfcHJlcHJvamVjdGlvbigpe3JldHVybiBwcmVwcm9qZWN0aW9uO30KdW5pZm9ybSBib29sIHRyYW5zZm9ybV9tYXJrZXI7CmJvb2wgZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKXtyZXR1cm4gdHJhbnNmb3JtX21hcmtlcjt9CgppbiB2ZWM0IGZyYWdfY29sb3I7CmluIHZlYzIgZnJhZ191djsKCiNkZWZpbmUgQ0lSQ0xFICAgICAgICAgICAgMAojZGVmaW5lIFJFQ1RBTkdMRSAgICAgICAgIDEKI2RlZmluZSBST1VOREVEX1JFQ1RBTkdMRSAyCiNkZWZpbmUgRElTVEFOQ0VGSUVMRCAgICAgMwojZGVmaW5lIFRSSUFOR0xFICAgICAgICAgIDQKCiNkZWZpbmUgTV9TUVJUXzIgICAgICAgICAgMS40MTQyMTM1CgoKLy8gSGFsZiB3aWR0aCBvZiBhbnRpYWxpYXNpbmcgc21vb3Roc3RlcAojZGVmaW5lIEFOVElBTElBU19SQURJVVMgMC44Ci8vIFRoZXNlIHZlcnNpb25zIG9mIGFhc3RlcCBhc3N1bWUgdGhhdCBgZGlzdGAgaXMgYSBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb24KLy8gd2hpY2ggaGFzIGJlZW4gc2NhbGVkIHRvIGJlIGluIHVuaXRzIG9mIHBpeGVscy4KZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMSArIEFOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgdGhyZXNob2xkMiwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxK0FOVElBTElBU19SQURJVVMsIGRpc3QpIC0KICAgICAgICAgICBzbW9vdGhzdGVwKHRocmVzaG9sZDItQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMitBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKLy8gUHJvY2VkdXJhbCBzaWduZWQgZGlzdGFuY2UgZnVuY3Rpb25zIG9uIHRoZSB1diBjb29yZGluYXRlIHBhdGNoIFswLDFdeFswLDFdCi8vIE5vdGUgdGhhdCBmb3IgYW50aWFsaWFzaW5nIHRvIHdvcmsgcHJvcGVybHkgdGhlc2Ugc2hvdWxkIGJlICpzY2FsZSBwcmVzZXJ2aW5nKgovLyAoSWYgeW91IG11c3QgcmVzY2FsZSB1diwgbWFrZSBzdXJlIHRvIHB1dCB0aGUgc2NhbGUgZmFjdG9yIGJhY2sgaW4gbGF0ZXIuKQpmbG9hdCB0cmlhbmdsZSh2ZWMyIFApewogICAgUCAtPSB2ZWMyKDAuNSk7CiAgICBmbG9hdCB4ID0gTV9TUVJUXzIgKiAoUC54IC0gUC55KTsKICAgIGZsb2F0IHkgPSBNX1NRUlRfMiAqIChQLnggKyBQLnkpOwogICAgZmxvYXQgcjEgPSBtYXgoYWJzKHgpLCBhYnMoeSkpIC0gMS4wLygyLjAqTV9TUVJUXzIpOwogICAgZmxvYXQgcjIgPSBQLnk7CiAgICByZXR1cm4gLW1heChyMSxyMik7Cn0KCmZsb2F0IGNpcmNsZSh2ZWMyIHV2KXsKICAgIHJldHVybiAwLjUtbGVuZ3RoKHV2LXZlYzIoMC41KSk7Cn0KCmZsb2F0IHJlY3RhbmdsZSh2ZWMyIHV2KXsKICAgIHZlYzIgZCA9IG1heCgtdXYsIHV2LXZlYzIoMSkpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSkpOwp9CgpmbG9hdCByb3VuZGVkX3JlY3RhbmdsZSh2ZWMyIHV2LCB2ZWMyIHRsLCB2ZWMyIGJyKXsKICAgIHZlYzIgZCA9IG1heCh0bC11diwgdXYtYnIpOwogICAgcmV0dXJuIC0oKGxlbmd0aChtYXgodmVjMigwLjApLCBkKSkgKyBtaW4oMC4wLCBtYXgoZC54LCBkLnkpKSktdGwueCk7Cn0KCnZvaWQgZmlsbChib29sIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBmaWxsY29sb3IsIGluZmlsbCk7Cn0KCnZvaWQgZmlsbChzYW1wbGVyMkQgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgdmVjNCBpbV9jb2xvciA9IHRleHR1cmUoaW1hZ2UsIHV2Lnl4KTsKICAgIGNvbG9yID0gbWl4KGNvbG9yLCBpbV9jb2xvciwgaW5maWxsKTsKfQoKaW4gZmxvYXQgZnJhZ191dnNjYWxlOwppbiBmbG9hdCBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGU7CmluIHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICAvLyBHbHlwaCBkaXN0YW5jZSBmaWVsZCB1bml0cyBhcmUgaW4gcGl4ZWxzLiBDb252ZXJ0IHRvIHNhbWUgZGlzdGFuY2UKICAgIC8vIHNjYWxpbmcgYXMgZl91di54IGZvciBjb25zaXN0ZW5jeSB3aXRoIHRoZSBwcm9jZWR1cmFsIHNpZ25lZF9kaXN0YW5jZQogICAgLy8gY2FsY3VsYXRpb25zLgogICAgcmV0dXJuIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSAqIHRleHR1cmUoZGlzdGFuY2VmaWVsZCwgdXYpLnI7Cn0KCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGJvb2wgZGlzdGFuY2VmaWVsZCwgdmVjMiB1dil7CiAgICByZXR1cm4gMC4wOwp9CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewoKICAgIGludCBzaGFwZSA9IGdldF9zaGFwZV90eXBlKCk7CiAgICBmbG9hdCBzaWduZWRfZGlzdGFuY2UgPSAwLjA7CiAgICB2ZWM0IHV2X29mZiA9IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwogICAgdmVjMiB0ZXhfdXYgPSBtaXgodXZfb2ZmLnh5LCB1dl9vZmYuencsIGNsYW1wKGZyYWdfdXYsIDAuMCwgMS4wKSk7CiAgICBpZihzaGFwZSA9PSBDSVJDTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gY2lyY2xlKGZyYWdfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBESVNUQU5DRUZJRUxEKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHNjYWxlZF9kaXN0YW5jZWZpZWxkKGRpc3RhbmNlZmllbGQsIHRleF91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFJPVU5ERURfUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHJvdW5kZWRfcmVjdGFuZ2xlKGZyYWdfdXYsIHZlYzIoMC4yKSwgdmVjMigwLjgpKTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUkVDVEFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IDEuMDsgLy8gcmVjdGFuZ2xlKGZfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBUUklBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSB0cmlhbmdsZShmcmFnX3V2KTsKCiAgICBzaWduZWRfZGlzdGFuY2UgKj0gZnJhZ191dnNjYWxlOwogICAgZmxvYXQgaW5zaWRlID0gYWFzdGVwKDAuMCwgc2lnbmVkX2Rpc3RhbmNlKTsKICAgIHZlYzQgZmluYWxfY29sb3IgPSB2ZWM0KGZyYWdfY29sb3IueHl6LCAwKTsKICAgIGZpbGwoaW1hZ2UsIGZyYWdfY29sb3IsIGZyYWdfdXYsIGluc2lkZSwgZmluYWxfY29sb3IpOwogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZmluYWxfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmIChmaW5hbF9jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZmluYWxfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOHq3F1YWRfb2Zmc2V0gqt0eXBlX2xlbmd0aAKkZmxhdMcwF42XrsAAAMDA/KmxwAAAwMDn+6nAFK7HwFYOrcAUrsfAqMaLwAAAwMDn+6nAFK7HwKptYXJrZXJzaXplgqt0eXBlX2xlbmd0aAKkZmxhdMcwF1YOnUGDwLpB2/meQYPAukH2KJxBCKy8QZLtnEEIrLxBUrh+QYPAukFaZJtBCKy8Qa1tYXJrZXJfb2Zmc2V0gqt0eXBlX2xlbmd0aAOkZmxhdMdIFwRWjsCYbnLBAAAAAARWjsCYbnLBAAAAAARWjsCYbnLBAAAAAARWjsCYbnLBAAAAAARWDsGYbnLBAAAAAAAAAACYbnLBAAAAAKVjb2xvcoKrdHlwZV9sZW5ndGgEpGZsYXTHYBcAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+vdXZfb2Zmc2V0X3dpZHRogqt0eXBlX2xlbmd0aASkZmxhdMdgFwDAlD4AwO8+AECoPgBgAz8AwJQ+AKAPPwBAqD4AIBs/AMCUPgAgJz8AQKg+AOAyPwDAlD4A4D4/AECoPgCgSj8AgDA+ACAPPwCATz4AoBo/AMCUPgDA1z4AQKg+AEDvPqNwb3OCq3R5cGVfbGVuZ3RoA6RmbGF0x0gXmtnvQwAACEIAAAAAM9MJRAAACEIAAAAAmrkbRAAACEIAAAAAAKAtRAAACEIAAAAAZoY/RAAACEIAAAAAZoY/RAAACEIAAAAAqXJvdGF0aW9uc4KrdHlwZV9sZW5ndGgEpGZsYXTHYBcAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+PrHRyYW5zcGFyZW5jeccVaLQxMzU2OTI4Mjk1OTk1NTA5OTMxMKVzcGFjZccUaLMyODI4Mzk3OTMzMzE2MjY1NTA0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE4MjkzODgwNjI1MjAyMDAwMDcyqWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccVaLQxMjg3NDcyMDAzNjI4ODk0MzQzM7FhdHRyaWJ1dGVfdXBkYXRlcscUaLM4MjE1ODc2MjI0MjU3MzkzNjM3qG92ZXJkcmF3xxRoszIyODUyNTQwNjg4NTYyMDE4NDmvdW5pZm9ybV91cGRhdGVyxxVotDE2MDg3OTcyMjA4MjMwNDY2NzUzpWZhY2VzxxRoszEyNDgyNjI5MDc1NzA3MTY5MDCkdXVpZLQxODI5Mzg4MDYyNTIwMjAwMDA3Mq12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccVaLQxNzMxMTY1OTYyNTgwMzc1ODgxN6VzcGFjZccUaLM1OTAzNzY0MzY5NjA0MzI1MTY1rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTExMzg3MTM4NjI5MzQzMDA4ODgwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizMzc5MTkwNzUxMjk5Njc3NDQwN7FhdHRyaWJ1dGVfdXBkYXRlcscUaLM5Mzc3ODc1ODI3ODMyNzA2MzY0qG92ZXJkcmF3xxVotDExMzM0NTY5NzIzNDI0Mzg3NjQ0r3VuaWZvcm1fdXBkYXRlcscVaLQxMzI1NTAzNzUxODIwODY3NzA0M6VmYWNlc8cUaLM0OTExNzI4MjU1MjIxNTQ0NDQxpHV1aWS0MTEzODcxMzg2MjkzNDMwMDg4ODCtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdMcoFwDA0UPNTPhCAMDRQ5lZaEMAwNFDZ0aqQwDA0UMAYOBDAMDRQ808C0Stc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcAwNRDzUz4QgDA1EOZWWhDAMDUQ2dGqkMAwNRDAGDgQwDA1EPNPAtEj6x0cmFuc3BhcmVuY3nHFGizOTE2MTMwMDk1MjYzNzM3NTk1OaVzcGFjZccVaLQxMDQ1NjA3MjQ2NzI4NjE1Nzk1N6x2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy03MDIyMzIyNjY2NjYyOTE5NDM5qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizNTIxMDg0MDc4MTI2OTU2MTU3MbFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjMwMjA2MjQ1MzkyNDY3NzE0MKhvdmVyZHJhd8cVaLQxODE0Nzc5NDgzMTM1OTAxMjAwOa91bmlmb3JtX3VwZGF0ZXLHFGizOTU4NTI1MTQ1MTg2ODkwOTc5NqVmYWNlc8cUaLMyMzExNzM0NDkyNDUxMDYwNzQzpHV1aWSzNzAyMjMyMjY2NjY2MjkxOTQzOa12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAMDSQ5oZjEIAwNJDAEAyQwDA0kOaOY9DAMDSQzNTxUMAwNJDzWz7Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwDA1EOaGYxCAMDUQwBAMkMAwNRDmjmPQwDA1EMzU8VDAMDUQ81s+0PeABCsdHJhbnNwYXJlbmN5xxVotDE3MDk2MDI3MDAyMjk3NDg5MjM2pXNwYWNlxxRoszQzNjM0OTc5NDIzMDE1MjMzNjKsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luXRleHQtMTIxNjE2NjkxOTc4MTMxMDEyODGpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFGizMzgxOTE3MzI4Mzk1OTU5MjA1M6ttYXJrZXJzcGFjZccVaLQxMzA4MzAxNTA5NDcwMzcwMDE5NLFhdHRyaWJ1dGVfdXBkYXRlcscUaLMzODA4NDMyODg1Mjk3Njc4MjIzqG92ZXJkcmF3xxVotDE0NDIwNjIyMjY4MTMzMjQ4MTkyr3VuaWZvcm1fdXBkYXRlcscVaLQxNjgzMjUxNDc0OTM2NzUzOTUyN6VmYWNlc8cUaLM1MjU4NzgzNTEyOTM3ODM0OTYzpHV1aWS0MTIxNjE2NjkxOTc4MTMxMDEyODGtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFWi0MTA3MTIxMDE1MzY3MDU3NjE2MTmlc3BhY2XHFWi0MTY1NTAyOTA0MjA2OTg4NTU2NTesdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SFsaW5lc2VnbWVudHMtMTYyNTMzNTc3MjMwMDM2MjU0OTCpY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszMzMDA2MjY3NjM3ODUwMTg2ODWxYXR0cmlidXRlX3VwZGF0ZXLHFGizMzQ0OTE4NDEzNTk1OTQwNzE2OKhvdmVyZHJhd8cTaLI3Njc1ODE5NzYyOTgyNzAzMDGvdW5pZm9ybV91cGRhdGVyxxRoszgzODY4MjE5MjQ5Mjg0NzkzNjSlZmFjZXPHFWi0MTc2NjUwMDA4NjkwOTQ0NDc5MDWkdXVpZLQxNjI1MzM1NzcyMzAwMzYyNTQ5MK12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABePrHRyYW5zcGFyZW5jeccUaLMxMzQ5MzE1MTI1NDk0MTQxNzkypXNwYWNlxxVotDE4MTU3MzA2NDI5NDIyNTcxMzcyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyOTI3NjI4ODE5NjAyMDAzMDk3qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTY4MjM3MjU5NjE3OTAwNjIzNTWxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTgwNzg1ODY3NzAxMzI0MDI1MDiob3ZlcmRyYXfHFWi0MTIzOTU3NTA3MDk4OTc1Nzg1OTavdW5pZm9ybV91cGRhdGVyxxVotDEzMjM4MjAxMjU0OTg0MzM2MDM1pWZhY2VzxxVotDE3MzczNzMyMDM1MzczMzgwMzY1pHV1aWS0MTI5Mjc2Mjg4MTk2MDIwMDMwOTetdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXAADVQwAgEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAA1UMAACpC3gAQrHRyYW5zcGFyZW5jeccUaLM1ODU1MTM5MTc4NjU0ODQ0NTE2pXNwYWNlxxVotDE3MDI5NjA0NTA4Mzk2NjAxMjg0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbh0ZXh0LTE1NTgzNTA3MDA1MDgxNjk2NTmpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFGizNTIwNzQ4ODY2MDIyNTE5ODI4NqttYXJrZXJzcGFjZccVaLQxNjg5MDk3Mjg4OTY4NjI0NTQzOLFhdHRyaWJ1dGVfdXBkYXRlcscUaLMzNzY5NTY0NTI0MzE0MTY1NTQ0qG92ZXJkcmF3xxRoszMwNjEyOTU4Mzc4NzA0NDY1MTCvdW5pZm9ybV91cGRhdGVyxxRoszY4MzQ1MDIwMjE5NDUxNjEwMDilZmFjZXPHFGizODU1MzA0Mzk1MTg1MTc4Njg4N6R1dWlkszE1NTgzNTA3MDA1MDgxNjk2NTmtdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHMBeNl67AAADAwPypscAAAMDA5/upwBSux8BWDq3AFK7HwKjGi8AAAMDA5/upwBSux8CqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHMBdWDp1Bg8C6Qdv5nkGDwLpB9iicQQisvEGS7ZxBCKy8QVK4fkGDwLpBWmSbQQisvEGtbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHSBcEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAAEVo7Bv5+6wAAAAAAEVg7Bv5+6wAAAAAClY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/r3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHYBcAwJQ+AMDvPgBAqD4AYAM/AMCUPgCgDz8AQKg+ACAbPwDAlD4AICc/AECoPgDgMj8AwJQ+AOA+PwBAqD4AoEo/AIAwPgAgDz8AgE8+AKAaPwDAlD4AwNc+AECoPgBA7z6jcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMdIFwCAz0PNTPhCAAAAAACAz0OZWWhDAAAAAACAz0NnRqpDAAAAAACAz0MAYOBDAAAAAACAz0PNPAtEAAAAAACAz0PNPAtEAAAAAKlyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0x2AXAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIA/j6x0cmFuc3BhcmVuY3nHFGizMTYyNzUxNTY3MDgwOTU0MjAwOKVzcGFjZccUaLM1NzQwODg1ODU4NzU0OTc0NzUyrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkgbGluZXNlZ21lbnRzLTYyNzY5NjE2NTEwNzc3MjE2NzipY2FtX3NwYWNlpXBpeGVsqHVuaWZvcm1zh6dwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/qW9iamVjdF9pZACnYW1iaWVudMcMF83MDD/NzAw/zcwMP6d2aXNpYmxlxxRoszQ0Nzg0NDQwODU1MjQxMDU5MTmxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTU0NjAwOTcxMDAwNjE3MjgyMTSob3ZlcmRyYXfHFWi0MTIwNDYwNTEzMzUwMjI4NTIyMzWvdW5pZm9ybV91cGRhdGVyxxRoszg1MDE4NjU3MTIwODgzMTMwMTSlZmFjZXPHFWi0MTY5MDgyNzQyMTIyNTYwODQ0MzakdXVpZLM2Mjc2OTYxNjUxMDc3NzIxNjc4rXZlcnRleF9zb3VyY2XaCeUjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CmluIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KaW4gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoERCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzhqljb2xvcl9lbmSCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXrWxpbmV3aWR0aF9lbmSCq3R5cGVfbGVuZ3RoAaRmbGF0xwAXq2NvbG9yX3N0YXJ0gqt0eXBlX2xlbmd0aASkZmxhdMcAF6tzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHABetc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTHABevbGluZXdpZHRoX3N0YXJ0gqt0eXBlX2xlbmd0aAGkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxVotDEwMzYzMjk3ODg1ODQyNDk1NDc0pXNwYWNlxxNosjMyNzg5OTEyODEwMTcwNzUwNKx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy0yNTgxNjcyMDI3NDQxMDM2OTkwqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHEmixNjczMzg1OTc1OTY3ODgyNjCxYXR0cmlidXRlX3VwZGF0ZXLHFGizNDExMTg3ODM4NzI0MzM5Nzc5MKhvdmVyZHJhd8cUaLMyNTAwMTQ0OTg1ODU2NTI2NTM0r3VuaWZvcm1fdXBkYXRlcscUaLMzODE4NzQ0MzcxNjMxNDEwOTU5pWZhY2VzxxRoszY0NjYyMzMyNjc5MTAxMDc4MjKkdXVpZLMyNTgxNjcyMDI3NDQxMDM2OTkwrXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBea2e9DAIATRDPTCUQAgBNEmrkbRACAE0QAoC1EAIATRGaGP0QAgBNErXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXmtnvQwAAEkQz0wlEAAASRJq5G0QAABJEAKAtRAAAEkRmhj9EAAASRI+sdHJhbnNwYXJlbmN5xxRoszY2MDExMzcwMDUwMzQ2OTc0ODilc3BhY2XHFWi0MTgzNDIwODI4NDM5MjAzMjI1MjOsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1l2SBsaW5lc2VnbWVudHMtNjA4MTQxMzgzMjMzNTU0NzcwMaljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxVotDEwNDc1Mjg0MjEwMzM1NTYzNjg2sWF0dHJpYnV0ZV91cGRhdGVyxxRoszQzNTYxOTI1MTI0NTM4ODM4NDSob3ZlcmRyYXfHFGizMjgyNzE0NjgyODY1Nzk5Mjg3M691bmlmb3JtX3VwZGF0ZXLHFGizNTE3NDY1OTQ0ODc1NjQ1NjI4N6VmYWNlc8cUaLM5NjY2NzY0MTM1MTIxOTI4MDI1pHV1aWSzNjA4MTQxMzgzMjMzNTU0NzcwMa12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAIBFRM1M+EIAgEVEmVloQwCARURnRqpDAIBFRABg4EMAgEVEzTwLRK1zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARETNTPhCAABERJlZaEMAAEREZ0aqQwAAREQAYOBDAABERM08C0SPrHRyYW5zcGFyZW5jeccUaLM2MTE0MDUzMjA1NTI2MjcwNTE1pXNwYWNlxxRoszYzMDUzNTQ1OTg3Njk3MTg3ODCsdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAvwAAAAAAAIA/AACAPwAAgL8AAIA/AACAP6RuYW1lvmxpbmVzZWdtZW50cy05MzYwMDk2NjQ1MTczMjI2N6ljYW1fc3BhY2WkZGF0Yah1bmlmb3Jtc42rY29sb3Jfc3RhcnTYFwAAAAAAAAAAAAAAAAAAgD+lbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAIEEAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+vbGluZXdpZHRoX3N0YXJ0yj+AAACpbGluZXdpZHRoyj+AAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkStbGluZXdpZHRoX2VuZMo/gAAAqW9iamVjdF9pZACpY29sb3JfZW5k2BcAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6Vjb2xvctgXAAAAAAAAAAAAAAAAAACAP6d2aXNpYmxlxxRoszg0MTIxODUzNjQzODY4NjkzMTixYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTUyMjE2ODYzNzA4OTUwOTQyMjOob3ZlcmRyYXfHFWi0MTY2OTQyMTMyNDc5ODcwODI0MzSvdW5pZm9ybV91cGRhdGVyxxRoszg3MDg4NDI2NjIyMjcxNzQ5NzWlZmFjZXPHFGizNDA1MjkyMzgwNjM5MDE5OTE1MqR1dWlksTkzNjAwOTY2NDUxNzMyMjY3rXZlcnRleF9zb3VyY2XaCm8jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBzZWdtZW50X3N0YXJ0Owp2ZWMyIGdldF9zZWdtZW50X3N0YXJ0KCl7cmV0dXJuIHNlZ21lbnRfc3RhcnQ7fQppbiB2ZWMyIHNlZ21lbnRfZW5kOwp2ZWMyIGdldF9zZWdtZW50X2VuZCgpe3JldHVybiBzZWdtZW50X2VuZDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp2ZWMyIHNjcmVlbl9zcGFjZSh2ZWM0IHBvc2l0aW9uKQp7CiAgICByZXR1cm4gdmVjMihwb3NpdGlvbi54eSAvIHBvc2l0aW9uLncpICogZ2V0X3Jlc29sdXRpb24oKTsKfQp2ZWMzIHRvdmVjMyh2ZWMyIHYpe3JldHVybiB2ZWMzKHYsIDAuMCk7fQp2ZWMzIHRvdmVjMyh2ZWMzIHYpe3JldHVybiB2O30KCnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpCnsKICAgIG1hdDQgcHZtID0gcHJvamVjdGlvbiAqIHZpZXcgKiBnZXRfbW9kZWwoKTsKICAgIHZlYzQgcG9pbnQxX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9zdGFydCgpKSwgMSk7CiAgICB2ZWM0IHBvaW50Ml9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfZW5kKCkpLCAxKTsKICAgIHZlYzIgcG9pbnQxX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDFfY2xpcCk7CiAgICB2ZWMyIHBvaW50Ml9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQyX2NsaXApOwogICAgdmVjMiBkaXIgPSBub3JtYWxpemUocG9pbnQyX3NjcmVlbiAtIHBvaW50MV9zY3JlZW4pOwogICAgdmVjMiBub3JtYWwgPSB2ZWMyKC1kaXIueSwgZGlyLngpOwogICAgdmVjNCBhbmNob3I7CiAgICBmbG9hdCB0aGlja25lc3M7CgogICAgaWYocG9zaXRpb24ueCA9PSAwLjApewogICAgICAgIGFuY2hvciA9IHBvaW50MV9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX3N0YXJ0KCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfc3RhcnQoKTsKICAgIH1lbHNlewogICAgICAgIGFuY2hvciA9IHBvaW50Ml9jbGlwOwogICAgICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yX2VuZCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX2VuZCgpOwogICAgfQogICAgZnJhZ19jb2xvci5hID0gZnJhZ19jb2xvci5hICogbWluKDEuMCwgdGhpY2tuZXNzICogMi4wKTsKCiAgICBub3JtYWwgKj0gKHRoaWNrbmVzcyAvIGdldF9yZXNvbHV0aW9uKCkpICogYW5jaG9yLnc7CiAgICAvLyBxdWFkcG9zIHkgKHBvc2l0aW9uLnkpIGdpdmVzIHVzIHRoZSBkaXJlY3Rpb24gdG8gZXhwYW5kIHRoZSBsaW5lCiAgICB2ZWM0IG9mZnNldCA9IHZlYzQobm9ybWFsICogcG9zaXRpb24ueSwgMC4wLCAwLjApOwogICAgLy8gc3RhcnQsIG9yIGVuZCBvZiBxdWFkLCBuZWVkIHRvIHVzZSBjdXJyZW50IG9yIG5leHQgcG9pbnQgYXMgYW5jaG9yCiAgICBnbF9Qb3NpdGlvbiA9IGFuY2hvciArIG9mZnNldDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwoKfQoKr2ZyYWdtZW50X3NvdXJjZdoF4iN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfc3RhcnQ7CmZsb2F0IGdldF9saW5ld2lkdGhfc3RhcnQoKXtyZXR1cm4gbGluZXdpZHRoX3N0YXJ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gdmVjNCBjb2xvcl9zdGFydDsKdmVjNCBnZXRfY29sb3Jfc3RhcnQoKXtyZXR1cm4gY29sb3Jfc3RhcnQ7fQp1bmlmb3JtIHZlYzQgY29sb3JfZW5kOwp2ZWM0IGdldF9jb2xvcl9lbmQoKXtyZXR1cm4gY29sb3JfZW5kO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGhfZW5kOwpmbG9hdCBnZXRfbGluZXdpZHRoX2VuZCgpe3JldHVybiBsaW5ld2lkdGhfZW5kO30KdW5pZm9ybSBmbG9hdCBsaW5ld2lkdGg7CmZsb2F0IGdldF9saW5ld2lkdGgoKXtyZXR1cm4gbGluZXdpZHRoO30KCgppbiB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IGluIHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKdmVjNCBwYWNrX2ludCh1aW50IGlkLCB1aW50IGluZGV4KSB7CiAgICB2ZWM0IHVucGFjazsKICAgIHVucGFjay54ID0gZmxvYXQoKGlkICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLnkgPSBmbG9hdCgoaWQgJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICB1bnBhY2sueiA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay53ID0gZmxvYXQoKGluZGV4ICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgcmV0dXJuIHVucGFjazsKfQoKdm9pZCBtYWluKCkgewogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAoZnJhZ19jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChmcmFnX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmcmFnX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzgqtzZWdtZW50X2VuZIKrdHlwZV9sZW5ndGgCpGZsYXTHKBcz891DAAATRADgAEQAABNEZsYSRAAAE0TNrCREAAATRDSTNkQAABNErXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXM/PdQwAAEkQA4ABEAAASRGbGEkQAABJEzawkRAAAEkQ0kzZEAAASRI+sdHJhbnNwYXJlbmN5xxNosjk0NjIyOTM5NzI5NDYyMDkzM6VzcGFjZccUaLM5NDMzNTEzNDA5NDM2NTI5NTE0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTEyMjkzNzcyOTIyNzgyODk5NjYyqWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFWi0MTcwOTgyNzc5MjE2MzcxNjUyODaxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTE0MzczNzg0NzQwMzQ5MTU3MzOob3ZlcmRyYXfHFGizODIzMzY3NDgxNTQwMDgwNzM1MK91bmlmb3JtX3VwZGF0ZXLHFWi0MTc0ODQ2OTg3MDQ1NjYxMzUyODOlZmFjZXPHFWi0MTE5MzAwNDY5ODUxNjA3MzIyOTCkdXVpZLQxMjI5Mzc3MjkyMjc4Mjg5OTY2Mq12ZXJ0ZXhfc291cmNl2gpvI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIHZlYzIgc2VnbWVudF9zdGFydDsKdmVjMiBnZXRfc2VnbWVudF9zdGFydCgpe3JldHVybiBzZWdtZW50X3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBeIjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX3N0YXJ0OwpmbG9hdCBnZXRfbGluZXdpZHRoX3N0YXJ0KCl7cmV0dXJuIGxpbmV3aWR0aF9zdGFydDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSB2ZWM0IGNvbG9yOwp2ZWM0IGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoX2VuZDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9lbmQoKXtyZXR1cm4gbGluZXdpZHRoX2VuZDt9CnVuaWZvcm0gZmxvYXQgbGluZXdpZHRoOwpmbG9hdCBnZXRfbGluZXdpZHRoKCl7cmV0dXJuIGxpbmV3aWR0aDt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4Krc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xygXAABFRJoZjEIAAEVEAEAyQwAARUSaOY9DAABFRDNTxUMAAEVEzWz7Q61zZWdtZW50X3N0YXJ0gqt0eXBlX2xlbmd0aAKkZmxhdMcoFwAARESaGYxCAABERABAMkMAAEREmjmPQwAAREQzU8VDAABERM1s+0OPrHRyYW5zcGFyZW5jeccVaLQxMDEwMjA4MTc5OTQ0NTc5NjI5NaVzcGFjZccVaLQxNjk0NjkwNDczMDUzNjk0ODc3Nax2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy0yNDI4NDA1NTE4MjgyNTMxODg0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizNjk0Nzk3NDMyMzIyNTAwNDE3MrFhdHRyaWJ1dGVfdXBkYXRlcscTaLI0OTkwMTc0MTgwMzUzNTkwMDWob3ZlcmRyYXfHFGizMzc3MTU4Njg5MzEyNDQwMDMxM691bmlmb3JtX3VwZGF0ZXLHFGizNzI0MTE1NDEwODQ0NzMwNzE1MKVmYWNlc8cVaLQxMzU3ODI2Njk4MTcwMTgxMTc3NaR1dWlkszI0Mjg0MDU1MTgyODI1MzE4ODStdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXACBERAAAEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwDA1EMAABJEj6x0cmFuc3BhcmVuY3nHFGizMjMyNDM0OTE0MTgyMDMyODMwN6VzcGFjZccVaLQxNDIyMjAyOTAxNjg0NjE4Nzc1Max2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy05NDIyODEzNDc2MTUyNTMwMzA5qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjatjb2xvcl9zdGFydNgXAAAAAAAAAAAAAAAAAACAP6Vtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACgQQAAgD+nYW1iaWVudMcMF83MDD/NzAw/zcwMP69saW5ld2lkdGhfc3RhcnTKP4AAAKlsaW5ld2lkdGjKP4AAAKdwaWNraW5nwqpyZXNvbHV0aW9u1xcAAEhEAAAWRK1saW5ld2lkdGhfZW5kyj+AAACpb2JqZWN0X2lkAKljb2xvcl9lbmTYFwAAAAAAAAAAAAAAAAAAgD+rZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9y2BcAAAAAAAAAAAAAAAAAAIA/p3Zpc2libGXHFGizOTU3NjM0MDA5MDIxMjg0MzUxMLFhdHRyaWJ1dGVfdXBkYXRlcscUaLM3ODg2Nzk3NDc2OTk1Nzg4MjkyqG92ZXJkcmF3xxRoszI2NzI2ODQyODQ3NTk0MTY5NTivdW5pZm9ybV91cGRhdGVyxxRoszE3MTkxMzYxNzc2MzczMDM3NjGlZmFjZXPHFGizOTAyOTQ4NTU3NDAxMTk1ODA2MqR1dWlkszk0MjI4MTM0NzYxNTI1MzAzMDmtdmVydGV4X3NvdXJjZdoKbyN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzIgc2VnbWVudF9lbmQ7CnZlYzIgZ2V0X3NlZ21lbnRfZW5kKCl7cmV0dXJuIHNlZ21lbnRfZW5kO30KCnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uOwp1bmlmb3JtIG1hdDQgdmlldzsKCnZlYzIgc2NyZWVuX3NwYWNlKHZlYzQgcG9zaXRpb24pCnsKICAgIHJldHVybiB2ZWMyKHBvc2l0aW9uLnh5IC8gcG9zaXRpb24udykgKiBnZXRfcmVzb2x1dGlvbigpOwp9CnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCkKewogICAgbWF0NCBwdm0gPSBwcm9qZWN0aW9uICogdmlldyAqIGdldF9tb2RlbCgpOwogICAgdmVjNCBwb2ludDFfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X3N0YXJ0KCkpLCAxKTsKICAgIHZlYzQgcG9pbnQyX2NsaXAgPSBwdm0gKiB2ZWM0KHRvdmVjMyhnZXRfc2VnbWVudF9lbmQoKSksIDEpOwogICAgdmVjMiBwb2ludDFfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50MV9jbGlwKTsKICAgIHZlYzIgcG9pbnQyX3NjcmVlbiA9IHNjcmVlbl9zcGFjZShwb2ludDJfY2xpcCk7CiAgICB2ZWMyIGRpciA9IG5vcm1hbGl6ZShwb2ludDJfc2NyZWVuIC0gcG9pbnQxX3NjcmVlbik7CiAgICB2ZWMyIG5vcm1hbCA9IHZlYzIoLWRpci55LCBkaXIueCk7CiAgICB2ZWM0IGFuY2hvcjsKICAgIGZsb2F0IHRoaWNrbmVzczsKCiAgICBpZihwb3NpdGlvbi54ID09IDAuMCl7CiAgICAgICAgYW5jaG9yID0gcG9pbnQxX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3Jfc3RhcnQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9zdGFydCgpOwogICAgfWVsc2V7CiAgICAgICAgYW5jaG9yID0gcG9pbnQyX2NsaXA7CiAgICAgICAgZnJhZ19jb2xvciA9IHRvdmVjNChnZXRfY29sb3JfZW5kKCkpOwogICAgICAgIHRoaWNrbmVzcyA9IGdldF9saW5ld2lkdGhfZW5kKCk7CiAgICB9CiAgICBmcmFnX2NvbG9yLmEgPSBmcmFnX2NvbG9yLmEgKiBtaW4oMS4wLCB0aGlja25lc3MgKiAyLjApOwoKICAgIG5vcm1hbCAqPSAodGhpY2tuZXNzIC8gZ2V0X3Jlc29sdXRpb24oKSkgKiBhbmNob3IudzsKICAgIC8vIHF1YWRwb3MgeSAocG9zaXRpb24ueSkgZ2l2ZXMgdXMgdGhlIGRpcmVjdGlvbiB0byBleHBhbmQgdGhlIGxpbmUKICAgIHZlYzQgb2Zmc2V0ID0gdmVjNChub3JtYWwgKiBwb3NpdGlvbi55LCAwLjAsIDAuMCk7CiAgICAvLyBzdGFydCwgb3IgZW5kIG9mIHF1YWQsIG5lZWQgdG8gdXNlIGN1cnJlbnQgb3IgbmV4dCBwb2ludCBhcyBhbmNob3IKICAgIGdsX1Bvc2l0aW9uID0gYW5jaG9yICsgb2Zmc2V0OwogICAgZ2xfUG9zaXRpb24ueiArPSBnbF9Qb3NpdGlvbi53ICogZ2V0X2RlcHRoX3NoaWZ0KCk7CgogICAgZnJhZ19pbnN0YW5jZV9pZCA9IHVpbnQoZ2xfSW5zdGFuY2VJRCk7Cgp9CgqvZnJhZ21lbnRfc291cmNl2gXiI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSB2ZWM0IGNvbG9yX3N0YXJ0Owp2ZWM0IGdldF9jb2xvcl9zdGFydCgpe3JldHVybiBjb2xvcl9zdGFydDt9CnVuaWZvcm0gdmVjNCBjb2xvcl9lbmQ7CnZlYzQgZ2V0X2NvbG9yX2VuZCgpe3JldHVybiBjb2xvcl9lbmQ7fQp1bmlmb3JtIHZlYzIgcmVzb2x1dGlvbjsKdmVjMiBnZXRfcmVzb2x1dGlvbigpe3JldHVybiByZXNvbHV0aW9uO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQp1bmlmb3JtIGZsb2F0IGxpbmV3aWR0aDsKZmxvYXQgZ2V0X2xpbmV3aWR0aCgpe3JldHVybiBsaW5ld2lkdGg7fQoKCmluIHZlYzQgZnJhZ19jb2xvcjsKCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmcmFnX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKGZyYWdfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZyYWdfY29sb3I7Cn0Ks2luc3RhbmNlX2F0dHJpYnV0ZXOCq3NlZ21lbnRfZW5kgqt0eXBlX2xlbmd0aAKkZmxhdNcXAABERAAgEkStc2VnbWVudF9zdGFydIKrdHlwZV9sZW5ndGgCpGZsYXTXFwAAREQAACpC3gAQrHRyYW5zcGFyZW5jeccVaLQxMTM2MzU5NTU0NDA1Njc1MjUwOaVzcGFjZccTaLI4NjAyODM1NTE4Njc3MjE4NDisdmVydGV4YXJyYXlzgqJ1doKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAAAAACAPwAAgD8AAIA/AAAAAAAAAAAAAIA/AAAAAKhwb3NpdGlvboKrdHlwZV9sZW5ndGgCpGZsYXTHIBcAAAC/AAAAvwAAAD8AAAC/AAAAvwAAAD8AAAA/AAAAP6RuYW1luXRleHQtMTY4ODcwNTMwNDczODQ4NzA1MjepY2FtX3NwYWNlpGRhdGGodW5pZm9ybXOOpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6liaWxsYm9hcmTCrXByZXByb2plY3Rpb27HQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+tZGlzdGFuY2VmaWVsZIqpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5ykGAAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU65SZXBlYXRXcmFwcGluZ6RkYXRhrXRleHR1cmVfYXRsYXOsdGhyZWVfZm9ybWF0qVJlZEZvcm1hdKRzaXplks0EAM0EAKV3cmFwVK5SZXBlYXRXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWyYXRsYXNfdGV4dHVyZV9zaXplykSAAACncGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlaW1hZ2XCqW9iamVjdF9pZACqc2hhcGVfdHlwZQOwdHJhbnNmb3JtX21hcmtlcsOrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/p3Zpc2libGXHFWi0MTYyOTAxNDg5MDkzNDY1MTM5MzCrbWFya2Vyc3BhY2XHFGizOTEzMTEzMjgzNjAzNDY2NzYyN7FhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNjU3ODM1OTI3NTY2ODQzMzg0NqhvdmVyZHJhd8cUaLM2MzYyMjY5Mjc2MzEwOTkwMzE0r3VuaWZvcm1fdXBkYXRlcscUaLM4NjczMjgxOTQxNDYxMjc0NDg4pWZhY2VzxxVotDEwNjg2NTUyODEyMzQ4NTc3ODUzpHV1aWS0MTY4ODcwNTMwNDczODQ4NzA1MjetdmVydGV4X3NvdXJjZdoaTSN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMiBwb3NpdGlvbjsKdmVjMiBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKCgoKLy8gUGVyIGluc3RhbmNlIGF0dHJpYnV0ZXM6IAppbiB2ZWMyIG1hcmtlcnNpemU7CnZlYzIgZ2V0X21hcmtlcnNpemUoKXtyZXR1cm4gbWFya2Vyc2l6ZTt9CmluIHZlYzQgcm90YXRpb25zOwp2ZWM0IGdldF9yb3RhdGlvbnMoKXtyZXR1cm4gcm90YXRpb25zO30KaW4gdmVjNCBjb2xvcjsKdmVjNCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQppbiB2ZWMzIHBvczsKdmVjMyBnZXRfcG9zKCl7cmV0dXJuIHBvczt9CmluIHZlYzIgcXVhZF9vZmZzZXQ7CnZlYzIgZ2V0X3F1YWRfb2Zmc2V0KCl7cmV0dXJuIHF1YWRfb2Zmc2V0O30KaW4gdmVjNCB1dl9vZmZzZXRfd2lkdGg7CnZlYzQgZ2V0X3V2X29mZnNldF93aWR0aCgpe3JldHVybiB1dl9vZmZzZXRfd2lkdGg7fQppbiB2ZWMzIG1hcmtlcl9vZmZzZXQ7CnZlYzMgZ2V0X21hcmtlcl9vZmZzZXQoKXtyZXR1cm4gbWFya2VyX29mZnNldDt9Cgp1bmlmb3JtIG1hdDQgcHJvamVjdGlvbjsKdW5pZm9ybSBtYXQ0IHZpZXc7Cgp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleF9kaW07CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgZmxvYXQgZnJhZ191dnNjYWxlOwpvdXQgZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwpvdXQgdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCgptYXQ0IHFtYXQodmVjNCBxdWF0KXsKICAgIGZsb2F0IG51bSA9IHF1YXQueCAqIDIuMDsKICAgIGZsb2F0IG51bTIgPSBxdWF0LnkgKiAyLjA7CiAgICBmbG9hdCBudW0zID0gcXVhdC56ICogMi4wOwogICAgZmxvYXQgbnVtNCA9IHF1YXQueCAqIG51bTsKICAgIGZsb2F0IG51bTUgPSBxdWF0LnkgKiBudW0yOwogICAgZmxvYXQgbnVtNiA9IHF1YXQueiAqIG51bTM7CiAgICBmbG9hdCBudW03ID0gcXVhdC54ICogbnVtMjsKICAgIGZsb2F0IG51bTggPSBxdWF0LnggKiBudW0zOwogICAgZmxvYXQgbnVtOSA9IHF1YXQueSAqIG51bTM7CiAgICBmbG9hdCBudW0xMCA9IHF1YXQudyAqIG51bTsKICAgIGZsb2F0IG51bTExID0gcXVhdC53ICogbnVtMjsKICAgIGZsb2F0IG51bTEyID0gcXVhdC53ICogbnVtMzsKICAgIHJldHVybiBtYXQ0KAogICAgICAgICgxLjAgLSAobnVtNSArIG51bTYpKSwgKG51bTcgKyBudW0xMiksICAgICAgICAobnVtOCAtIG51bTExKSwgICAgICAgIDAuMCwKICAgICAgICAobnVtNyAtIG51bTEyKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTYpKSwgKG51bTkgKyBudW0xMCksICAgICAgICAwLjAsCiAgICAgICAgKG51bTggKyBudW0xMSksICAgICAgICAobnVtOSAtIG51bTEwKSwgICAgICAgICgxLjAgLSAobnVtNCArIG51bTUpKSwgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDEuMAogICAgKTsKfQoKZmxvYXQgZGlzdGFuY2VmaWVsZF9zY2FsZSgpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVsczsgY29udmVydCB0byBkaW1lbnNpb25sZXNzCiAgICAvLyB4LWNvb3JkaW5hdGUgb2YgdGV4dHVyZSBpbnN0ZWFkIGZvciBjb25zaXN0ZW5jeSB3aXRoIHByb2dyYW1tYXRpYyB1dgogICAgLy8gZGlzdGFuY2UgZmllbGRzIGluIGZyYWdtZW50IHNoYWRlci4gU2VlIGFsc28gY29tbWVudHMgYmVsb3cuCiAgICB2ZWM0IHV2X3JlY3QgPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICBmbG9hdCBwaXhzaXplX3ggPSAodXZfcmVjdC56IC0gdXZfcmVjdC54KSAqIGdldF9hdGxhc190ZXh0dXJlX3NpemUoKTsKICAgIHJldHVybiAtMS4wL3BpeHNpemVfeDsKfQoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm1hdDIgZGlhZ20odmVjMiB2KXsKICAgIHJldHVybiBtYXQyKHYueCwgMC4wLCAwLjAsIHYueSk7Cn0KCmZsb2F0IF9kZXRlcm1pbmFudChtYXQyIG0pIHsKICByZXR1cm4gbVswXVswXSAqIG1bMV1bMV0gLSBtWzBdWzFdICogbVsxXVswXTsKfQoKZmxhdCBvdXQgdWludCBmcmFnX2luc3RhbmNlX2lkOwoKdm9pZCBtYWluKCl7CiAgICB2ZWMyIGJib3hfc2lnbmVkX3JhZGl1cyA9IDAuNSAqIGdldF9tYXJrZXJzaXplKCk7IC8vIG5vdGU7IGNvbXBvbmVudHMgbWF5IGJlIG5lZ2F0aXZlLgogICAgdmVjMiBzcHJpdGVfYmJveF9jZW50cmUgPSBnZXRfcXVhZF9vZmZzZXQoKSArIGJib3hfc2lnbmVkX3JhZGl1czsKCiAgICBtYXQ0IHB2aWV3ID0gcHJvamVjdGlvbiAqIHZpZXc7CiAgICAvLyBDb21wdXRlIHRyYW5zZm9ybSBmb3IgdGhlIG9mZnNldCB2ZWN0b3JzIGZyb20gdGhlIGNlbnRyYWwgcG9pbnQKICAgIG1hdDQgdHJhbnMgPSBnZXRfdHJhbnNmb3JtX21hcmtlcigpID8gbW9kZWwgOiBtYXQ0KDEuMCk7CiAgICB0cmFucyA9IChnZXRfYmlsbGJvYXJkKCkgPyBwcm9qZWN0aW9uIDogcHZpZXcpICogcW1hdChnZXRfcm90YXRpb25zKCkpICogdHJhbnM7CgogICAgLy8gQ29tcHV0ZSBjZW50cmUgb2YgYmlsbGJvYXJkIGluIGNsaXBwaW5nIGNvb3JkaW5hdGVzCiAgICB2ZWM0IHNwcml0ZV9jZW50ZXIgPSB0cmFucyAqIHZlYzQoc3ByaXRlX2Jib3hfY2VudHJlLCAwLCAwKTsKICAgIHZlYzQgZGF0YV9wb2ludCA9IGdldF9wcmVwcm9qZWN0aW9uKCkgKiBtb2RlbCAqIHZlYzQodG92ZWMzKGdldF9wb3MoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHZlYzQoZGF0YV9wb2ludC54eXogLyBkYXRhX3BvaW50LncgKyBtYXQzKG1vZGVsKSAqIHRvdmVjMyhnZXRfbWFya2VyX29mZnNldCgpKSwgMSk7CiAgICBkYXRhX3BvaW50ID0gcHZpZXcgKiBkYXRhX3BvaW50OwogICAgdmVjNCB2Y2xpcCA9IGRhdGFfcG9pbnQgKyBzcHJpdGVfY2VudGVyOwoKICAgIC8vIEV4dHJhIGJ1ZmZlcmluZyBpcyByZXF1aXJlZCBhcm91bmQgc3ByaXRlcyB3aGljaCBhcmUgYW50aWFsaWFzZWQgc28gdGhhdAogICAgLy8gdGhlIGFudGlhbGlhcyBibHVyIGRvZXNuJ3QgZ2V0IGN1dCBvZmYgKHNlZSAjMTUpLiBUaGlzIGJsdXIgZmFsbHMgdG8KICAgIC8vIHplcm8gYXQgYSByYWRpdXMgb2YgQU5USUFMSUFTX1JBRElVUyBwaXhlbHMgaW4gdGhlIHZpZXdwb3J0IGNvb3JkaW5hdGVzCiAgICAvLyBhbmQgd2Ugd2FudCB0byBidWZmZXIgdGhlIHZlcnRpY2VzIGluIHRoZSAqc291cmNlKiBzcHJpdGUgY29vcmRpbmF0ZQogICAgLy8gc3lzdGVtIHNvIHRoYXQgd2UgZ2V0IHRoaXMgYW1vdW50IGluIHRoZSBvdXRwdXQgY29vcmRpbmF0ZXMuCiAgICAvLwogICAgLy8gSGVyZSB3ZSBjYWxjdWxhdGUgdGhlIGRlcml2YXRpdmUgb2YgdGhlIG1hcHBpbmcgZnJvbSBzcHJpdGUgeHkKICAgIC8vIGNvb3JkaW5hdGVzIChkZWZpbmVkIGJ5IGB0cmFuc2ApIGludG8gdGhlIHZpZXdwb3J0IHBpeGVsIGNvb3JkaW5hdGVzLgogICAgLy8gVGhlIGRlcml2YXRpdmUgbmVlZHMgdG8gaW5jbHVkZSB0aGUgcHJvcGVyIHRlcm0gZm9yIHRoZSBwZXJzcGVjdGl2ZQogICAgLy8gZGl2aWRlIGludG8gTkRDLCBldmFsdWF0ZWQgYXQgdGhlIGNlbnRyZSBwb2ludCBgdmNsaXBgLgogICAgbWF0NCBkX25kY19kX2NsaXAgPSBtYXQ0KAogICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLCAgICAgICAgIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAxLjAvdmNsaXAudywgMC4wLAogICAgICAgIC12Y2xpcC54eXovKHZjbGlwLncqdmNsaXAudyksICAgICAgICAgIDAuMAogICAgKTsKICAgIG1hdDIgZHh5dl9keHlzID0gZGlhZ20oMC41ICogZ2V0X3Jlc29sdXRpb24oKSkgKiBtYXQyKGRfbmRjX2RfY2xpcCp0cmFucyk7CiAgICAvLyBOb3csIG91ciBidWZmZXIgc2l6ZSBpcyBleHByZXNzZWQgaW4gdmlld3BvcnQgcGl4ZWxzIGJ1dCB3ZSBnZXQgYmFjayB0bwogICAgLy8gdGhlIHNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSB1c2luZyB0aGUgc2NhbGUgZmFjdG9yIG9mIHRoZQogICAgLy8gdHJhbnNmb3JtYXRpb24gKGZvciBpc290cm9waWMgdHJhbnNmb3JtYXRpb25zKS4gRm9yIGFuaXNvdHJvcGljCiAgICAvLyB0cmFuc2Zvcm1hdGlvbnMsIHRoZSBnZW9tZXRyaWMgbWVhbiBvZiB0aGUgdHdvIHByaW5jaXBsZSBzY2FsZSBmYWN0b3JzCiAgICAvLyBpcyBhIHJlYXNvbmFibGUgY29tcHJvbWlzZToKICAgIGZsb2F0IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlID0gc3FydChhYnMoX2RldGVybWluYW50KGR4eXZfZHh5cykpKTsKCiAgICAvLyBJbiB0aGUgZnJhZ21lbnQgc2hhZGVyIHdlIHdhbnQgb3VyIHNpZ25lZCBkaXN0YW5jZSBpbiB2aWV3cG9ydCAocGl4ZWwpCiAgICAvLyBjb29yZHMgZm9yIGRpcmVjdCB1c2UgaW4gYW50aWFsaWFzaW5nIHN0ZXAgZnVuY3Rpb25zLiBXZSB0aGVyZWZvcmUgbmVlZAogICAgLy8gYSBzY2FsaW5nIGZhY3RvciBzaW1pbGFyIHRvIHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlLCBidXQgaW5jbHVkaW5nCiAgICAvLyB0aGUgdXYtPnNwcml0ZSBjb29yZGluYXRlIHN5c3RlbSBzY2FsaW5nIGZhY3RvciBhcyB3ZWxsLiAgV2UgY2hvb3NlIHRvCiAgICAvLyB1c2UgdGhlIGJvdW5kaW5nIGJveCAqeCogd2lkdGggZm9yIHRoaXMuIFRoaXMgY29tZXMgd2l0aCBzb21lCiAgICAvLyBjb25zaXN0ZW5jeSBjb25kaXRpb25zOgogICAgLy8gKiBGb3IgcHJvY2VkdXJhbCBkaXN0YW5jZSBmaWVsZHMsIHdlIG5lZWQgdGhlIHNwcml0ZSBib3VuZGluZyBib3ggdG8gYmUKICAgIC8vICAgc3F1YXJlLiAoSWYgbm90LCB0aGUgdXYgY29vcmRpbmF0ZXMgd2lsbCBiZSBhbmlzb3Ryb3BpY2FsbHkgc2NhbGVkIGFuZAogICAgLy8gICBhbnkgY2FsY3VsYXRpb24gYmFzZWQgb24gdGhlbSB3aWxsIG5vdCBiZSBhIGRpc3RhbmNlIGZ1bmN0aW9uLikKICAgIC8vICogRm9yIHNhbXBsZWQgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRvIGNvbnNpc3RlbnRseSBjaG9vc2UgdGhlICp4KgogICAgLy8gICBmb3IgdGhlIHNjYWxpbmcgaW4gZ2V0X2Rpc3RhbmNlZmllbGRfc2NhbGUoKS4KICAgIGZsb2F0IHNwcml0ZV9mcm9tX3Vfc2NhbGUgPSBhYnMoZ2V0X21hcmtlcnNpemUoKS54KTsKICAgIGZyYWdfdXZzY2FsZSA9IHZpZXdwb3J0X2Zyb21fc3ByaXRlX3NjYWxlICogc3ByaXRlX2Zyb21fdV9zY2FsZTsKICAgIGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZSA9IGRpc3RhbmNlZmllbGRfc2NhbGUoKTsKICAgIGZyYWdfY29sb3IgPSB0b3ZlYzQoZ2V0X2NvbG9yKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191dl9vZmZzZXRfd2lkdGggPSBnZXRfdXZfb2Zmc2V0X3dpZHRoKCk7CiAgICAvLyBzY3JlZW4gc3BhY2UgY29vcmRpbmF0ZXMgb2YgdGhlIHBvc2l0aW9uCiAgICB2ZWM0IHF1YWRfdmVydGV4ID0gKHRyYW5zICogdmVjNCgyLjAgKiBiYm94X3NpZ25lZF9yYWRpdXMgKiBnZXRfcG9zaXRpb24oKSwgMC4wLCAwLjApKTsKICAgIGdsX1Bvc2l0aW9uID0gdmNsaXAgKyBxdWFkX3ZlcnRleDsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX0luc3RhbmNlSUQpOwp9CgqvZnJhZ21lbnRfc291cmNl2hKII3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwoKb3V0IHZlYzQgZnJhZ21lbnRfY29sb3I7CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIGZsb2F0IGF0bGFzX3RleHR1cmVfc2l6ZTsKZmxvYXQgZ2V0X2F0bGFzX3RleHR1cmVfc2l6ZSgpe3JldHVybiBhdGxhc190ZXh0dXJlX3NpemU7fQp1bmlmb3JtIGJvb2wgcGlja2luZzsKYm9vbCBnZXRfcGlja2luZygpe3JldHVybiBwaWNraW5nO30KdW5pZm9ybSBpbnQgc2hhcGVfdHlwZTsKaW50IGdldF9zaGFwZV90eXBlKCl7cmV0dXJuIHNoYXBlX3R5cGU7fQp1bmlmb3JtIHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkOwp1bmlmb3JtIGJvb2wgaW1hZ2U7CmJvb2wgZ2V0X2ltYWdlKCl7cmV0dXJuIGltYWdlO30KdW5pZm9ybSB2ZWMyIHJlc29sdXRpb247CnZlYzIgZ2V0X3Jlc29sdXRpb24oKXtyZXR1cm4gcmVzb2x1dGlvbjt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gbWF0NCBtb2RlbDsKbWF0NCBnZXRfbW9kZWwoKXtyZXR1cm4gbW9kZWw7fQp1bmlmb3JtIGJvb2wgYmlsbGJvYXJkOwpib29sIGdldF9iaWxsYm9hcmQoKXtyZXR1cm4gYmlsbGJvYXJkO30KdW5pZm9ybSBtYXQ0IHByZXByb2plY3Rpb247Cm1hdDQgZ2V0X3ByZXByb2plY3Rpb24oKXtyZXR1cm4gcHJlcHJvamVjdGlvbjt9CnVuaWZvcm0gYm9vbCB0cmFuc2Zvcm1fbWFya2VyOwpib29sIGdldF90cmFuc2Zvcm1fbWFya2VyKCl7cmV0dXJuIHRyYW5zZm9ybV9tYXJrZXI7fQoKaW4gdmVjNCBmcmFnX2NvbG9yOwppbiB2ZWMyIGZyYWdfdXY7CgojZGVmaW5lIENJUkNMRSAgICAgICAgICAgIDAKI2RlZmluZSBSRUNUQU5HTEUgICAgICAgICAxCiNkZWZpbmUgUk9VTkRFRF9SRUNUQU5HTEUgMgojZGVmaW5lIERJU1RBTkNFRklFTEQgICAgIDMKI2RlZmluZSBUUklBTkdMRSAgICAgICAgICA0CgojZGVmaW5lIE1fU1FSVF8yICAgICAgICAgIDEuNDE0MjEzNQoKCi8vIEhhbGYgd2lkdGggb2YgYW50aWFsaWFzaW5nIHNtb290aHN0ZXAKI2RlZmluZSBBTlRJQUxJQVNfUkFESVVTIDAuOAovLyBUaGVzZSB2ZXJzaW9ucyBvZiBhYXN0ZXAgYXNzdW1lIHRoYXQgYGRpc3RgIGlzIGEgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9uCi8vIHdoaWNoIGhhcyBiZWVuIHNjYWxlZCB0byBiZSBpbiB1bml0cyBvZiBwaXhlbHMuCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDEgKyBBTlRJQUxJQVNfUkFESVVTLCBkaXN0KTsKfQoKZmxvYXQgYWFzdGVwKGZsb2F0IHRocmVzaG9sZDEsIGZsb2F0IHRocmVzaG9sZDIsIGZsb2F0IGRpc3QpIHsKICAgIHJldHVybiBzbW9vdGhzdGVwKHRocmVzaG9sZDEtQU5USUFMSUFTX1JBRElVUywgdGhyZXNob2xkMStBTlRJQUxJQVNfUkFESVVTLCBkaXN0KSAtCiAgICAgICAgICAgc21vb3Roc3RlcCh0aHJlc2hvbGQyLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDIrQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCi8vIFByb2NlZHVyYWwgc2lnbmVkIGRpc3RhbmNlIGZ1bmN0aW9ucyBvbiB0aGUgdXYgY29vcmRpbmF0ZSBwYXRjaCBbMCwxXXhbMCwxXQovLyBOb3RlIHRoYXQgZm9yIGFudGlhbGlhc2luZyB0byB3b3JrIHByb3Blcmx5IHRoZXNlIHNob3VsZCBiZSAqc2NhbGUgcHJlc2VydmluZyoKLy8gKElmIHlvdSBtdXN0IHJlc2NhbGUgdXYsIG1ha2Ugc3VyZSB0byBwdXQgdGhlIHNjYWxlIGZhY3RvciBiYWNrIGluIGxhdGVyLikKZmxvYXQgdHJpYW5nbGUodmVjMiBQKXsKICAgIFAgLT0gdmVjMigwLjUpOwogICAgZmxvYXQgeCA9IE1fU1FSVF8yICogKFAueCAtIFAueSk7CiAgICBmbG9hdCB5ID0gTV9TUVJUXzIgKiAoUC54ICsgUC55KTsKICAgIGZsb2F0IHIxID0gbWF4KGFicyh4KSwgYWJzKHkpKSAtIDEuMC8oMi4wKk1fU1FSVF8yKTsKICAgIGZsb2F0IHIyID0gUC55OwogICAgcmV0dXJuIC1tYXgocjEscjIpOwp9CgpmbG9hdCBjaXJjbGUodmVjMiB1dil7CiAgICByZXR1cm4gMC41LWxlbmd0aCh1di12ZWMyKDAuNSkpOwp9CgpmbG9hdCByZWN0YW5nbGUodmVjMiB1dil7CiAgICB2ZWMyIGQgPSBtYXgoLXV2LCB1di12ZWMyKDEpKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpKTsKfQoKZmxvYXQgcm91bmRlZF9yZWN0YW5nbGUodmVjMiB1diwgdmVjMiB0bCwgdmVjMiBicil7CiAgICB2ZWMyIGQgPSBtYXgodGwtdXYsIHV2LWJyKTsKICAgIHJldHVybiAtKChsZW5ndGgobWF4KHZlYzIoMC4wKSwgZCkpICsgbWluKDAuMCwgbWF4KGQueCwgZC55KSkpLXRsLngpOwp9Cgp2b2lkIGZpbGwoYm9vbCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICBjb2xvciA9IG1peChjb2xvciwgZmlsbGNvbG9yLCBpbmZpbGwpOwp9Cgp2b2lkIGZpbGwoc2FtcGxlcjJEIGltYWdlLCB2ZWM0IGZpbGxjb2xvciwgdmVjMiB1diwgZmxvYXQgaW5maWxsLCBpbm91dCB2ZWM0IGNvbG9yKXsKICAgIHZlYzQgaW1fY29sb3IgPSB0ZXh0dXJlKGltYWdlLCB1di55eCk7CiAgICBjb2xvciA9IG1peChjb2xvciwgaW1fY29sb3IsIGluZmlsbCk7Cn0KCmluIGZsb2F0IGZyYWdfdXZzY2FsZTsKaW4gZmxvYXQgZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlOwppbiB2ZWM0IGZyYWdfdXZfb2Zmc2V0X3dpZHRoOwoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoc2FtcGxlcjJEIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgLy8gR2x5cGggZGlzdGFuY2UgZmllbGQgdW5pdHMgYXJlIGluIHBpeGVscy4gQ29udmVydCB0byBzYW1lIGRpc3RhbmNlCiAgICAvLyBzY2FsaW5nIGFzIGZfdXYueCBmb3IgY29uc2lzdGVuY3kgd2l0aCB0aGUgcHJvY2VkdXJhbCBzaWduZWRfZGlzdGFuY2UKICAgIC8vIGNhbGN1bGF0aW9ucy4KICAgIHJldHVybiBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgKiB0ZXh0dXJlKGRpc3RhbmNlZmllbGQsIHV2KS5yOwp9CgpmbG9hdCBzY2FsZWRfZGlzdGFuY2VmaWVsZChib29sIGRpc3RhbmNlZmllbGQsIHZlYzIgdXYpewogICAgcmV0dXJuIDAuMDsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKCiAgICBpbnQgc2hhcGUgPSBnZXRfc2hhcGVfdHlwZSgpOwogICAgZmxvYXQgc2lnbmVkX2Rpc3RhbmNlID0gMC4wOwogICAgdmVjNCB1dl9vZmYgPSBmcmFnX3V2X29mZnNldF93aWR0aDsKICAgIHZlYzIgdGV4X3V2ID0gbWl4KHV2X29mZi54eSwgdXZfb2ZmLnp3LCBjbGFtcChmcmFnX3V2LCAwLjAsIDEuMCkpOwogICAgaWYoc2hhcGUgPT0gQ0lSQ0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IGNpcmNsZShmcmFnX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gRElTVEFOQ0VGSUVMRCkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBzY2FsZWRfZGlzdGFuY2VmaWVsZChkaXN0YW5jZWZpZWxkLCB0ZXhfdXYpOwogICAgZWxzZSBpZihzaGFwZSA9PSBST1VOREVEX1JFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSByb3VuZGVkX3JlY3RhbmdsZShmcmFnX3V2LCB2ZWMyKDAuMiksIHZlYzIoMC44KSk7CiAgICBlbHNlIGlmKHNoYXBlID09IFJFQ1RBTkdMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSAxLjA7IC8vIHJlY3RhbmdsZShmX3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gVFJJQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gdHJpYW5nbGUoZnJhZ191dik7CgogICAgc2lnbmVkX2Rpc3RhbmNlICo9IGZyYWdfdXZzY2FsZTsKICAgIGZsb2F0IGluc2lkZSA9IGFhc3RlcCgwLjAsIHNpZ25lZF9kaXN0YW5jZSk7CiAgICB2ZWM0IGZpbmFsX2NvbG9yID0gdmVjNChmcmFnX2NvbG9yLnh5eiwgMCk7CiAgICBmaWxsKGltYWdlLCBmcmFnX2NvbG9yLCBmcmFnX3V2LCBpbnNpZGUsIGZpbmFsX2NvbG9yKTsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZpbmFsX2NvbG9yLmEgPiAwLjEpIHsKICAgICAgICAgICAgZnJhZ21lbnRfY29sb3IgPSBwYWNrX2ludChvYmplY3RfaWQsIGZyYWdfaW5zdGFuY2VfaWQpOwogICAgICAgIH0KICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoZmluYWxfY29sb3IuYSA8PSAwLjApewogICAgICAgIGRpc2NhcmQ7CiAgICB9CiAgICBmcmFnbWVudF9jb2xvciA9IGZpbmFsX2NvbG9yOwp9CrNpbnN0YW5jZV9hdHRyaWJ1dGVzh6txdWFkX29mZnNldIKrdHlwZV9sZW5ndGgCpGZsYXTHABeqbWFya2Vyc2l6ZYKrdHlwZV9sZW5ndGgCpGZsYXTHABetbWFya2VyX29mZnNldIKrdHlwZV9sZW5ndGgDpGZsYXTHABelY29sb3KCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXr3V2X29mZnNldF93aWR0aIKrdHlwZV9sZW5ndGgEpGZsYXTHABejcG9zgqt0eXBlX2xlbmd0aAOkZmxhdMcAF6lyb3RhdGlvbnOCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXj6x0cmFuc3BhcmVuY3nHFGizNTEwMTg3MzM4MDY4NzY4MTQ5OaVzcGFjZccUaLM4ODY5ODExNDMwNTk3OTQ5MjA5rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgL8AAAAAAACAPwAAgD8AAIC/AACAPwAAgD+kbmFtZdkhbGluZXNlZ21lbnRzLTE1OTcyMTY5NTM5NjI1NDY5NTY5qWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccVaLQxMDk4MjAyODk2NzgyMjU5NTg2NrFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMjI4NDAxNzAxOTk2NDMyMjM4MKhvdmVyZHJhd8cUaLMxMDY0MDk0ODg3NzY5OTk0NjE3r3VuaWZvcm1fdXBkYXRlcscUaLM5NDAwMjUwMDA2ODQzNzU1Mjg5pWZhY2VzxxRoszY2NzE4ODMwMTczMTU1OTYzMDGkdXVpZLQxNTk3MjE2OTUzOTYyNTQ2OTU2Oa12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABfeABCsdHJhbnNwYXJlbmN5xxNosjcxNTcyOTkxNjI4NDg5Njg1NqVzcGFjZccUaLMzOTI3MDA1MTQwMjYxMzg1Njc0rHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAAAAAgD8AAIA/AACAPwAAAAAAAAAAAACAPwAAAACocG9zaXRpb26Cq3R5cGVfbGVuZ3RoAqRmbGF0xyAXAAAAvwAAAL8AAAA/AAAAvwAAAL8AAAA/AAAAPwAAAD+kbmFtZbl0ZXh0LTE3NDEwOTA4NDgxODMzMDAwNDM5qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1zjqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+pYmlsbGJvYXJkwq1wcmVwcm9qZWN0aW9ux0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAP6dhbWJpZW50xwwXzcwMP83MDD/NzAw/rWRpc3RhbmNlZmllbGSKqW1pbkZpbHRlcqxMaW5lYXJGaWx0ZXKqYW5pc290cm9wecpBgAAAqW1hZ0ZpbHRlcqxMaW5lYXJGaWx0ZXKld3JhcFOuUmVwZWF0V3JhcHBpbmekZGF0Ya10ZXh0dXJlX2F0bGFzrHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZZLNBADNBACld3JhcFSuUmVwZWF0V3JhcHBpbmekdHlwZadTYW1wbGVyqnRocmVlX3R5cGWpRmxvYXRUeXBlsmF0bGFzX3RleHR1cmVfc2l6ZcpEgAAAp3BpY2tpbmfCqnJlc29sdXRpb27XFwAASEQAABZEpWltYWdlwqlvYmplY3RfaWQAqnNoYXBlX3R5cGUDsHRyYW5zZm9ybV9tYXJrZXLDq2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6d2aXNpYmxlxxRoszk3MDQyOTUzMzkzMzg3MjAzNzarbWFya2Vyc3BhY2XHFGizNzc1NjIyMjczMzQ2MDAzNDcyN7FhdHRyaWJ1dGVfdXBkYXRlcscVaLQxNTQ4MTA4MjQ2MDYwMDYxNTc0OKhvdmVyZHJhd8cSaLEzMTI2MTY1ODI3MDIxMDg1OK91bmlmb3JtX3VwZGF0ZXLHFWi0MTU1MTE4NDIwMTc4MDkwMDE0NTGlZmFjZXPHFGizOTUyMDI1NDI4MzY2Mzk5OTQ1NaR1dWlktDE3NDEwOTA4NDgxODMzMDAwNDM5rXZlcnRleF9zb3VyY2XaGk0jdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzIgcG9zaXRpb247CnZlYzIgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCgoKCi8vIFBlciBpbnN0YW5jZSBhdHRyaWJ1dGVzOiAKaW4gdmVjMiBtYXJrZXJzaXplOwp2ZWMyIGdldF9tYXJrZXJzaXplKCl7cmV0dXJuIG1hcmtlcnNpemU7fQppbiB2ZWM0IHJvdGF0aW9uczsKdmVjNCBnZXRfcm90YXRpb25zKCl7cmV0dXJuIHJvdGF0aW9uczt9CmluIHZlYzQgY29sb3I7CnZlYzQgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KaW4gdmVjMyBwb3M7CnZlYzMgZ2V0X3Bvcygpe3JldHVybiBwb3M7fQppbiB2ZWMyIHF1YWRfb2Zmc2V0Owp2ZWMyIGdldF9xdWFkX29mZnNldCgpe3JldHVybiBxdWFkX29mZnNldDt9CmluIHZlYzQgdXZfb2Zmc2V0X3dpZHRoOwp2ZWM0IGdldF91dl9vZmZzZXRfd2lkdGgoKXtyZXR1cm4gdXZfb2Zmc2V0X3dpZHRoO30KaW4gdmVjMyBtYXJrZXJfb2Zmc2V0Owp2ZWMzIGdldF9tYXJrZXJfb2Zmc2V0KCl7cmV0dXJuIG1hcmtlcl9vZmZzZXQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdW5pZm9ybSBmbG9hdCBhdGxhc190ZXhfZGltOwoKb3V0IHZlYzQgZnJhZ19jb2xvcjsKb3V0IHZlYzIgZnJhZ191djsKb3V0IGZsb2F0IGZyYWdfdXZzY2FsZTsKb3V0IGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKb3V0IHZlYzQgZnJhZ191dl9vZmZzZXRfd2lkdGg7CgoKbWF0NCBxbWF0KHZlYzQgcXVhdCl7CiAgICBmbG9hdCBudW0gPSBxdWF0LnggKiAyLjA7CiAgICBmbG9hdCBudW0yID0gcXVhdC55ICogMi4wOwogICAgZmxvYXQgbnVtMyA9IHF1YXQueiAqIDIuMDsKICAgIGZsb2F0IG51bTQgPSBxdWF0LnggKiBudW07CiAgICBmbG9hdCBudW01ID0gcXVhdC55ICogbnVtMjsKICAgIGZsb2F0IG51bTYgPSBxdWF0LnogKiBudW0zOwogICAgZmxvYXQgbnVtNyA9IHF1YXQueCAqIG51bTI7CiAgICBmbG9hdCBudW04ID0gcXVhdC54ICogbnVtMzsKICAgIGZsb2F0IG51bTkgPSBxdWF0LnkgKiBudW0zOwogICAgZmxvYXQgbnVtMTAgPSBxdWF0LncgKiBudW07CiAgICBmbG9hdCBudW0xMSA9IHF1YXQudyAqIG51bTI7CiAgICBmbG9hdCBudW0xMiA9IHF1YXQudyAqIG51bTM7CiAgICByZXR1cm4gbWF0NCgKICAgICAgICAoMS4wIC0gKG51bTUgKyBudW02KSksIChudW03ICsgbnVtMTIpLCAgICAgICAgKG51bTggLSBudW0xMSksICAgICAgICAwLjAsCiAgICAgICAgKG51bTcgLSBudW0xMiksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW02KSksIChudW05ICsgbnVtMTApLCAgICAgICAgMC4wLAogICAgICAgIChudW04ICsgbnVtMTEpLCAgICAgICAgKG51bTkgLSBudW0xMCksICAgICAgICAoMS4wIC0gKG51bTQgKyBudW01KSksIDAuMCwKICAgICAgICAwLjAsICAgICAgICAgICAgICAgICAgIDAuMCwgICAgICAgICAgICAgICAgICAgMC4wLCAgICAgICAgICAgICAgICAgICAxLjAKICAgICk7Cn0KCmZsb2F0IGRpc3RhbmNlZmllbGRfc2NhbGUoKXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHM7IGNvbnZlcnQgdG8gZGltZW5zaW9ubGVzcwogICAgLy8geC1jb29yZGluYXRlIG9mIHRleHR1cmUgaW5zdGVhZCBmb3IgY29uc2lzdGVuY3kgd2l0aCBwcm9ncmFtbWF0aWMgdXYKICAgIC8vIGRpc3RhbmNlIGZpZWxkcyBpbiBmcmFnbWVudCBzaGFkZXIuIFNlZSBhbHNvIGNvbW1lbnRzIGJlbG93LgogICAgdmVjNCB1dl9yZWN0ID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgZmxvYXQgcGl4c2l6ZV94ID0gKHV2X3JlY3QueiAtIHV2X3JlY3QueCkgKiBnZXRfYXRsYXNfdGV4dHVyZV9zaXplKCk7CiAgICByZXR1cm4gLTEuMC9waXhzaXplX3g7Cn0KCnZlYzMgdG92ZWMzKHZlYzIgdil7cmV0dXJuIHZlYzModiwgMC4wKTt9CnZlYzMgdG92ZWMzKHZlYzMgdil7cmV0dXJuIHY7fQoKdmVjNCB0b3ZlYzQodmVjMyB2KXtyZXR1cm4gdmVjNCh2LCAxLjApO30KdmVjNCB0b3ZlYzQodmVjNCB2KXtyZXR1cm4gdjt9CgptYXQyIGRpYWdtKHZlYzIgdil7CiAgICByZXR1cm4gbWF0Mih2LngsIDAuMCwgMC4wLCB2LnkpOwp9CgpmbG9hdCBfZGV0ZXJtaW5hbnQobWF0MiBtKSB7CiAgcmV0dXJuIG1bMF1bMF0gKiBtWzFdWzFdIC0gbVswXVsxXSAqIG1bMV1bMF07Cn0KCmZsYXQgb3V0IHVpbnQgZnJhZ19pbnN0YW5jZV9pZDsKCnZvaWQgbWFpbigpewogICAgdmVjMiBiYm94X3NpZ25lZF9yYWRpdXMgPSAwLjUgKiBnZXRfbWFya2Vyc2l6ZSgpOyAvLyBub3RlOyBjb21wb25lbnRzIG1heSBiZSBuZWdhdGl2ZS4KICAgIHZlYzIgc3ByaXRlX2Jib3hfY2VudHJlID0gZ2V0X3F1YWRfb2Zmc2V0KCkgKyBiYm94X3NpZ25lZF9yYWRpdXM7CgogICAgbWF0NCBwdmlldyA9IHByb2plY3Rpb24gKiB2aWV3OwogICAgLy8gQ29tcHV0ZSB0cmFuc2Zvcm0gZm9yIHRoZSBvZmZzZXQgdmVjdG9ycyBmcm9tIHRoZSBjZW50cmFsIHBvaW50CiAgICBtYXQ0IHRyYW5zID0gZ2V0X3RyYW5zZm9ybV9tYXJrZXIoKSA/IG1vZGVsIDogbWF0NCgxLjApOwogICAgdHJhbnMgPSAoZ2V0X2JpbGxib2FyZCgpID8gcHJvamVjdGlvbiA6IHB2aWV3KSAqIHFtYXQoZ2V0X3JvdGF0aW9ucygpKSAqIHRyYW5zOwoKICAgIC8vIENvbXB1dGUgY2VudHJlIG9mIGJpbGxib2FyZCBpbiBjbGlwcGluZyBjb29yZGluYXRlcwogICAgdmVjNCBzcHJpdGVfY2VudGVyID0gdHJhbnMgKiB2ZWM0KHNwcml0ZV9iYm94X2NlbnRyZSwgMCwgMCk7CiAgICB2ZWM0IGRhdGFfcG9pbnQgPSBnZXRfcHJlcHJvamVjdGlvbigpICogbW9kZWwgKiB2ZWM0KHRvdmVjMyhnZXRfcG9zKCkpLCAxKTsKICAgIGRhdGFfcG9pbnQgPSB2ZWM0KGRhdGFfcG9pbnQueHl6IC8gZGF0YV9wb2ludC53ICsgbWF0Myhtb2RlbCkgKiB0b3ZlYzMoZ2V0X21hcmtlcl9vZmZzZXQoKSksIDEpOwogICAgZGF0YV9wb2ludCA9IHB2aWV3ICogZGF0YV9wb2ludDsKICAgIHZlYzQgdmNsaXAgPSBkYXRhX3BvaW50ICsgc3ByaXRlX2NlbnRlcjsKCiAgICAvLyBFeHRyYSBidWZmZXJpbmcgaXMgcmVxdWlyZWQgYXJvdW5kIHNwcml0ZXMgd2hpY2ggYXJlIGFudGlhbGlhc2VkIHNvIHRoYXQKICAgIC8vIHRoZSBhbnRpYWxpYXMgYmx1ciBkb2Vzbid0IGdldCBjdXQgb2ZmIChzZWUgIzE1KS4gVGhpcyBibHVyIGZhbGxzIHRvCiAgICAvLyB6ZXJvIGF0IGEgcmFkaXVzIG9mIEFOVElBTElBU19SQURJVVMgcGl4ZWxzIGluIHRoZSB2aWV3cG9ydCBjb29yZGluYXRlcwogICAgLy8gYW5kIHdlIHdhbnQgdG8gYnVmZmVyIHRoZSB2ZXJ0aWNlcyBpbiB0aGUgKnNvdXJjZSogc3ByaXRlIGNvb3JkaW5hdGUKICAgIC8vIHN5c3RlbSBzbyB0aGF0IHdlIGdldCB0aGlzIGFtb3VudCBpbiB0aGUgb3V0cHV0IGNvb3JkaW5hdGVzLgogICAgLy8KICAgIC8vIEhlcmUgd2UgY2FsY3VsYXRlIHRoZSBkZXJpdmF0aXZlIG9mIHRoZSBtYXBwaW5nIGZyb20gc3ByaXRlIHh5CiAgICAvLyBjb29yZGluYXRlcyAoZGVmaW5lZCBieSBgdHJhbnNgKSBpbnRvIHRoZSB2aWV3cG9ydCBwaXhlbCBjb29yZGluYXRlcy4KICAgIC8vIFRoZSBkZXJpdmF0aXZlIG5lZWRzIHRvIGluY2x1ZGUgdGhlIHByb3BlciB0ZXJtIGZvciB0aGUgcGVyc3BlY3RpdmUKICAgIC8vIGRpdmlkZSBpbnRvIE5EQywgZXZhbHVhdGVkIGF0IHRoZSBjZW50cmUgcG9pbnQgYHZjbGlwYC4KICAgIG1hdDQgZF9uZGNfZF9jbGlwID0gbWF0NCgKICAgICAgICAxLjAvdmNsaXAudywgMC4wLCAgICAgICAgIDAuMCwgICAgICAgICAwLjAsCiAgICAgICAgMC4wLCAgICAgICAgIDEuMC92Y2xpcC53LCAwLjAsICAgICAgICAgMC4wLAogICAgICAgIDAuMCwgICAgICAgICAwLjAsICAgICAgICAgMS4wL3ZjbGlwLncsIDAuMCwKICAgICAgICAtdmNsaXAueHl6Lyh2Y2xpcC53KnZjbGlwLncpLCAgICAgICAgICAwLjAKICAgICk7CiAgICBtYXQyIGR4eXZfZHh5cyA9IGRpYWdtKDAuNSAqIGdldF9yZXNvbHV0aW9uKCkpICogbWF0MihkX25kY19kX2NsaXAqdHJhbnMpOwogICAgLy8gTm93LCBvdXIgYnVmZmVyIHNpemUgaXMgZXhwcmVzc2VkIGluIHZpZXdwb3J0IHBpeGVscyBidXQgd2UgZ2V0IGJhY2sgdG8KICAgIC8vIHRoZSBzcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gdXNpbmcgdGhlIHNjYWxlIGZhY3RvciBvZiB0aGUKICAgIC8vIHRyYW5zZm9ybWF0aW9uIChmb3IgaXNvdHJvcGljIHRyYW5zZm9ybWF0aW9ucykuIEZvciBhbmlzb3Ryb3BpYwogICAgLy8gdHJhbnNmb3JtYXRpb25zLCB0aGUgZ2VvbWV0cmljIG1lYW4gb2YgdGhlIHR3byBwcmluY2lwbGUgc2NhbGUgZmFjdG9ycwogICAgLy8gaXMgYSByZWFzb25hYmxlIGNvbXByb21pc2U6CiAgICBmbG9hdCB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSA9IHNxcnQoYWJzKF9kZXRlcm1pbmFudChkeHl2X2R4eXMpKSk7CgogICAgLy8gSW4gdGhlIGZyYWdtZW50IHNoYWRlciB3ZSB3YW50IG91ciBzaWduZWQgZGlzdGFuY2UgaW4gdmlld3BvcnQgKHBpeGVsKQogICAgLy8gY29vcmRzIGZvciBkaXJlY3QgdXNlIGluIGFudGlhbGlhc2luZyBzdGVwIGZ1bmN0aW9ucy4gV2UgdGhlcmVmb3JlIG5lZWQKICAgIC8vIGEgc2NhbGluZyBmYWN0b3Igc2ltaWxhciB0byB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSwgYnV0IGluY2x1ZGluZwogICAgLy8gdGhlIHV2LT5zcHJpdGUgY29vcmRpbmF0ZSBzeXN0ZW0gc2NhbGluZyBmYWN0b3IgYXMgd2VsbC4gIFdlIGNob29zZSB0bwogICAgLy8gdXNlIHRoZSBib3VuZGluZyBib3ggKngqIHdpZHRoIGZvciB0aGlzLiBUaGlzIGNvbWVzIHdpdGggc29tZQogICAgLy8gY29uc2lzdGVuY3kgY29uZGl0aW9uczoKICAgIC8vICogRm9yIHByb2NlZHVyYWwgZGlzdGFuY2UgZmllbGRzLCB3ZSBuZWVkIHRoZSBzcHJpdGUgYm91bmRpbmcgYm94IHRvIGJlCiAgICAvLyAgIHNxdWFyZS4gKElmIG5vdCwgdGhlIHV2IGNvb3JkaW5hdGVzIHdpbGwgYmUgYW5pc290cm9waWNhbGx5IHNjYWxlZCBhbmQKICAgIC8vICAgYW55IGNhbGN1bGF0aW9uIGJhc2VkIG9uIHRoZW0gd2lsbCBub3QgYmUgYSBkaXN0YW5jZSBmdW5jdGlvbi4pCiAgICAvLyAqIEZvciBzYW1wbGVkIGRpc3RhbmNlIGZpZWxkcywgd2UgbmVlZCB0byBjb25zaXN0ZW50bHkgY2hvb3NlIHRoZSAqeCoKICAgIC8vICAgZm9yIHRoZSBzY2FsaW5nIGluIGdldF9kaXN0YW5jZWZpZWxkX3NjYWxlKCkuCiAgICBmbG9hdCBzcHJpdGVfZnJvbV91X3NjYWxlID0gYWJzKGdldF9tYXJrZXJzaXplKCkueCk7CiAgICBmcmFnX3V2c2NhbGUgPSB2aWV3cG9ydF9mcm9tX3Nwcml0ZV9zY2FsZSAqIHNwcml0ZV9mcm9tX3Vfc2NhbGU7CiAgICBmcmFnX2Rpc3RhbmNlZmllbGRfc2NhbGUgPSBkaXN0YW5jZWZpZWxkX3NjYWxlKCk7CiAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcigpKTsKICAgIGZyYWdfdXYgPSBnZXRfdXYoKTsKICAgIGZyYWdfdXZfb2Zmc2V0X3dpZHRoID0gZ2V0X3V2X29mZnNldF93aWR0aCgpOwogICAgLy8gc2NyZWVuIHNwYWNlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb3NpdGlvbgogICAgdmVjNCBxdWFkX3ZlcnRleCA9ICh0cmFucyAqIHZlYzQoMi4wICogYmJveF9zaWduZWRfcmFkaXVzICogZ2V0X3Bvc2l0aW9uKCksIDAuMCwgMC4wKSk7CiAgICBnbF9Qb3NpdGlvbiA9IHZjbGlwICsgcXVhZF92ZXJ0ZXg7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoSiCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSBmbG9hdCBhdGxhc190ZXh0dXJlX3NpemU7CmZsb2F0IGdldF9hdGxhc190ZXh0dXJlX3NpemUoKXtyZXR1cm4gYXRsYXNfdGV4dHVyZV9zaXplO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gaW50IHNoYXBlX3R5cGU7CmludCBnZXRfc2hhcGVfdHlwZSgpe3JldHVybiBzaGFwZV90eXBlO30KdW5pZm9ybSBzYW1wbGVyMkQgZGlzdGFuY2VmaWVsZDsKdW5pZm9ybSBib29sIGltYWdlOwpib29sIGdldF9pbWFnZSgpe3JldHVybiBpbWFnZTt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBib29sIGJpbGxib2FyZDsKYm9vbCBnZXRfYmlsbGJvYXJkKCl7cmV0dXJuIGJpbGxib2FyZDt9CnVuaWZvcm0gbWF0NCBwcmVwcm9qZWN0aW9uOwptYXQ0IGdldF9wcmVwcm9qZWN0aW9uKCl7cmV0dXJuIHByZXByb2plY3Rpb247fQp1bmlmb3JtIGJvb2wgdHJhbnNmb3JtX21hcmtlcjsKYm9vbCBnZXRfdHJhbnNmb3JtX21hcmtlcigpe3JldHVybiB0cmFuc2Zvcm1fbWFya2VyO30KCmluIHZlYzQgZnJhZ19jb2xvcjsKaW4gdmVjMiBmcmFnX3V2OwoKI2RlZmluZSBDSVJDTEUgICAgICAgICAgICAwCiNkZWZpbmUgUkVDVEFOR0xFICAgICAgICAgMQojZGVmaW5lIFJPVU5ERURfUkVDVEFOR0xFIDIKI2RlZmluZSBESVNUQU5DRUZJRUxEICAgICAzCiNkZWZpbmUgVFJJQU5HTEUgICAgICAgICAgNAoKI2RlZmluZSBNX1NRUlRfMiAgICAgICAgICAxLjQxNDIxMzUKCgovLyBIYWxmIHdpZHRoIG9mIGFudGlhbGlhc2luZyBzbW9vdGhzdGVwCiNkZWZpbmUgQU5USUFMSUFTX1JBRElVUyAwLjgKLy8gVGhlc2UgdmVyc2lvbnMgb2YgYWFzdGVwIGFzc3VtZSB0aGF0IGBkaXN0YCBpcyBhIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbgovLyB3aGljaCBoYXMgYmVlbiBzY2FsZWQgdG8gYmUgaW4gdW5pdHMgb2YgcGl4ZWxzLgpmbG9hdCBhYXN0ZXAoZmxvYXQgdGhyZXNob2xkMSwgZmxvYXQgZGlzdCkgewogICAgcmV0dXJuIHNtb290aHN0ZXAodGhyZXNob2xkMS1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQxICsgQU5USUFMSUFTX1JBRElVUywgZGlzdCk7Cn0KCmZsb2F0IGFhc3RlcChmbG9hdCB0aHJlc2hvbGQxLCBmbG9hdCB0aHJlc2hvbGQyLCBmbG9hdCBkaXN0KSB7CiAgICByZXR1cm4gc21vb3Roc3RlcCh0aHJlc2hvbGQxLUFOVElBTElBU19SQURJVVMsIHRocmVzaG9sZDErQU5USUFMSUFTX1JBRElVUywgZGlzdCkgLQogICAgICAgICAgIHNtb290aHN0ZXAodGhyZXNob2xkMi1BTlRJQUxJQVNfUkFESVVTLCB0aHJlc2hvbGQyK0FOVElBTElBU19SQURJVVMsIGRpc3QpOwp9CgovLyBQcm9jZWR1cmFsIHNpZ25lZCBkaXN0YW5jZSBmdW5jdGlvbnMgb24gdGhlIHV2IGNvb3JkaW5hdGUgcGF0Y2ggWzAsMV14WzAsMV0KLy8gTm90ZSB0aGF0IGZvciBhbnRpYWxpYXNpbmcgdG8gd29yayBwcm9wZXJseSB0aGVzZSBzaG91bGQgYmUgKnNjYWxlIHByZXNlcnZpbmcqCi8vIChJZiB5b3UgbXVzdCByZXNjYWxlIHV2LCBtYWtlIHN1cmUgdG8gcHV0IHRoZSBzY2FsZSBmYWN0b3IgYmFjayBpbiBsYXRlci4pCmZsb2F0IHRyaWFuZ2xlKHZlYzIgUCl7CiAgICBQIC09IHZlYzIoMC41KTsKICAgIGZsb2F0IHggPSBNX1NRUlRfMiAqIChQLnggLSBQLnkpOwogICAgZmxvYXQgeSA9IE1fU1FSVF8yICogKFAueCArIFAueSk7CiAgICBmbG9hdCByMSA9IG1heChhYnMoeCksIGFicyh5KSkgLSAxLjAvKDIuMCpNX1NRUlRfMik7CiAgICBmbG9hdCByMiA9IFAueTsKICAgIHJldHVybiAtbWF4KHIxLHIyKTsKfQoKZmxvYXQgY2lyY2xlKHZlYzIgdXYpewogICAgcmV0dXJuIDAuNS1sZW5ndGgodXYtdmVjMigwLjUpKTsKfQoKZmxvYXQgcmVjdGFuZ2xlKHZlYzIgdXYpewogICAgdmVjMiBkID0gbWF4KC11diwgdXYtdmVjMigxKSk7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKSk7Cn0KCmZsb2F0IHJvdW5kZWRfcmVjdGFuZ2xlKHZlYzIgdXYsIHZlYzIgdGwsIHZlYzIgYnIpewogICAgdmVjMiBkID0gbWF4KHRsLXV2LCB1di1icik7CiAgICByZXR1cm4gLSgobGVuZ3RoKG1heCh2ZWMyKDAuMCksIGQpKSArIG1pbigwLjAsIG1heChkLngsIGQueSkpKS10bC54KTsKfQoKdm9pZCBmaWxsKGJvb2wgaW1hZ2UsIHZlYzQgZmlsbGNvbG9yLCB2ZWMyIHV2LCBmbG9hdCBpbmZpbGwsIGlub3V0IHZlYzQgY29sb3IpewogICAgY29sb3IgPSBtaXgoY29sb3IsIGZpbGxjb2xvciwgaW5maWxsKTsKfQoKdm9pZCBmaWxsKHNhbXBsZXIyRCBpbWFnZSwgdmVjNCBmaWxsY29sb3IsIHZlYzIgdXYsIGZsb2F0IGluZmlsbCwgaW5vdXQgdmVjNCBjb2xvcil7CiAgICB2ZWM0IGltX2NvbG9yID0gdGV4dHVyZShpbWFnZSwgdXYueXgpOwogICAgY29sb3IgPSBtaXgoY29sb3IsIGltX2NvbG9yLCBpbmZpbGwpOwp9CgppbiBmbG9hdCBmcmFnX3V2c2NhbGU7CmluIGZsb2F0IGZyYWdfZGlzdGFuY2VmaWVsZF9zY2FsZTsKaW4gdmVjNCBmcmFnX3V2X29mZnNldF93aWR0aDsKCmZsb2F0IHNjYWxlZF9kaXN0YW5jZWZpZWxkKHNhbXBsZXIyRCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIC8vIEdseXBoIGRpc3RhbmNlIGZpZWxkIHVuaXRzIGFyZSBpbiBwaXhlbHMuIENvbnZlcnQgdG8gc2FtZSBkaXN0YW5jZQogICAgLy8gc2NhbGluZyBhcyBmX3V2LnggZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhlIHByb2NlZHVyYWwgc2lnbmVkX2Rpc3RhbmNlCiAgICAvLyBjYWxjdWxhdGlvbnMuCiAgICByZXR1cm4gZnJhZ19kaXN0YW5jZWZpZWxkX3NjYWxlICogdGV4dHVyZShkaXN0YW5jZWZpZWxkLCB1dikucjsKfQoKZmxvYXQgc2NhbGVkX2Rpc3RhbmNlZmllbGQoYm9vbCBkaXN0YW5jZWZpZWxkLCB2ZWMyIHV2KXsKICAgIHJldHVybiAwLjA7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CgogICAgaW50IHNoYXBlID0gZ2V0X3NoYXBlX3R5cGUoKTsKICAgIGZsb2F0IHNpZ25lZF9kaXN0YW5jZSA9IDAuMDsKICAgIHZlYzQgdXZfb2ZmID0gZnJhZ191dl9vZmZzZXRfd2lkdGg7CiAgICB2ZWMyIHRleF91diA9IG1peCh1dl9vZmYueHksIHV2X29mZi56dywgY2xhbXAoZnJhZ191diwgMC4wLCAxLjApKTsKICAgIGlmKHNoYXBlID09IENJUkNMRSkKICAgICAgICBzaWduZWRfZGlzdGFuY2UgPSBjaXJjbGUoZnJhZ191dik7CiAgICBlbHNlIGlmKHNoYXBlID09IERJU1RBTkNFRklFTEQpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gc2NhbGVkX2Rpc3RhbmNlZmllbGQoZGlzdGFuY2VmaWVsZCwgdGV4X3V2KTsKICAgIGVsc2UgaWYoc2hhcGUgPT0gUk9VTkRFRF9SRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gcm91bmRlZF9yZWN0YW5nbGUoZnJhZ191diwgdmVjMigwLjIpLCB2ZWMyKDAuOCkpOwogICAgZWxzZSBpZihzaGFwZSA9PSBSRUNUQU5HTEUpCiAgICAgICAgc2lnbmVkX2Rpc3RhbmNlID0gMS4wOyAvLyByZWN0YW5nbGUoZl91dik7CiAgICBlbHNlIGlmKHNoYXBlID09IFRSSUFOR0xFKQogICAgICAgIHNpZ25lZF9kaXN0YW5jZSA9IHRyaWFuZ2xlKGZyYWdfdXYpOwoKICAgIHNpZ25lZF9kaXN0YW5jZSAqPSBmcmFnX3V2c2NhbGU7CiAgICBmbG9hdCBpbnNpZGUgPSBhYXN0ZXAoMC4wLCBzaWduZWRfZGlzdGFuY2UpOwogICAgdmVjNCBmaW5hbF9jb2xvciA9IHZlYzQoZnJhZ19jb2xvci54eXosIDApOwogICAgZmlsbChpbWFnZSwgZnJhZ19jb2xvciwgZnJhZ191diwgaW5zaWRlLCBmaW5hbF9jb2xvcik7CiAgICBpZiAocGlja2luZykgewogICAgICAgIGlmIChmaW5hbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKGZpbmFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSBmaW5hbF9jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4ercXVhZF9vZmZzZXSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXqm1hcmtlcnNpemWCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrW1hcmtlcl9vZmZzZXSCq3R5cGVfbGVuZ3RoA6RmbGF0xwAXpWNvbG9ygqt0eXBlX2xlbmd0aASkZmxhdMcAF691dl9vZmZzZXRfd2lkdGiCq3R5cGVfbGVuZ3RoBKRmbGF0xwAXo3Bvc4KrdHlwZV9sZW5ndGgDpGZsYXTHABepcm90YXRpb25zgqt0eXBlX2xlbmd0aASkZmxhdMcAF4+sdHJhbnNwYXJlbmN5xxRoszc5MTg1NzczNjU2NjkwOTA5MTSlc3BhY2XHFGizOTIwNDE0NzgyNzcwOTk4MTI4Mqx2ZXJ0ZXhhcnJheXOConV2gqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAKkZmxhdMcgFwAAAAAAAIC/AAAAAAAAgD8AAIA/AACAvwAAgD8AAIA/pG5hbWXZIGxpbmVzZWdtZW50cy05NTU5MzkxMjM2MDY0NTQ0MTAxqWNhbV9zcGFjZaVwaXhlbKh1bmlmb3Jtc4encGlja2luZ8KqcmVzb2x1dGlvbtcXAABIRAAAFkSlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/q2RlcHRoX3NoaWZ0ygAAAACtbGlnaHRwb3NpdGlvbscMFwAAgD8AAIA/AACAP6lvYmplY3RfaWQAp2FtYmllbnTHDBfNzAw/zcwMP83MDD+ndmlzaWJsZccVaLQxMTMwMzY2NzY2OTkyNzcyOTk5MLFhdHRyaWJ1dGVfdXBkYXRlcscUaLM3MDg1NTA3MDE0NzE2NzA1OTQ4qG92ZXJkcmF3xxVotDE0MTI4MDI2OTgzMTQ1MTcwMTU1r3VuaWZvcm1fdXBkYXRlcscSaLE5OTE2Nzk3OTkxMzE3MDU0MaVmYWNlc8cUaLM5NTEwNTI3NDMyNTcxNTU3OTI5pHV1aWSzOTU1OTM5MTIzNjA2NDU0NDEwMa12ZXJ0ZXhfc291cmNl2gnlI3ZlcnNpb24gMzAwIGVzCnByZWNpc2lvbiBtZWRpdW1wIGludDsKcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIyRDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjNEOwovLyBJbnN0YW5jZSBpbnB1dHM6IAppbiB2ZWMyIHBvc2l0aW9uOwp2ZWMyIGdldF9wb3NpdGlvbigpe3JldHVybiBwb3NpdGlvbjt9CmluIHZlYzIgdXY7CnZlYzIgZ2V0X3V2KCl7cmV0dXJuIHV2O30KCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKCgovLyBQZXIgaW5zdGFuY2UgYXR0cmlidXRlczogCmluIGZsb2F0IGxpbmV3aWR0aF9zdGFydDsKZmxvYXQgZ2V0X2xpbmV3aWR0aF9zdGFydCgpe3JldHVybiBsaW5ld2lkdGhfc3RhcnQ7fQppbiB2ZWM0IGNvbG9yX2VuZDsKdmVjNCBnZXRfY29sb3JfZW5kKCl7cmV0dXJuIGNvbG9yX2VuZDt9CmluIGZsb2F0IGxpbmV3aWR0aF9lbmQ7CmZsb2F0IGdldF9saW5ld2lkdGhfZW5kKCl7cmV0dXJuIGxpbmV3aWR0aF9lbmQ7fQppbiB2ZWMyIHNlZ21lbnRfc3RhcnQ7CnZlYzIgZ2V0X3NlZ21lbnRfc3RhcnQoKXtyZXR1cm4gc2VnbWVudF9zdGFydDt9CmluIHZlYzQgY29sb3Jfc3RhcnQ7CnZlYzQgZ2V0X2NvbG9yX3N0YXJ0KCl7cmV0dXJuIGNvbG9yX3N0YXJ0O30KaW4gdmVjMiBzZWdtZW50X2VuZDsKdmVjMiBnZXRfc2VnbWVudF9lbmQoKXtyZXR1cm4gc2VnbWVudF9lbmQ7fQoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMiBzY3JlZW5fc3BhY2UodmVjNCBwb3NpdGlvbikKewogICAgcmV0dXJuIHZlYzIocG9zaXRpb24ueHkgLyBwb3NpdGlvbi53KSAqIGdldF9yZXNvbHV0aW9uKCk7Cn0KdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNCh2ZWMzIHYpe3JldHVybiB2ZWM0KHYsIDEuMCk7fQp2ZWM0IHRvdmVjNCh2ZWM0IHYpe3JldHVybiB2O30KCm91dCB2ZWM0IGZyYWdfY29sb3I7CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKQp7CiAgICBtYXQ0IHB2bSA9IHByb2plY3Rpb24gKiB2aWV3ICogZ2V0X21vZGVsKCk7CiAgICB2ZWM0IHBvaW50MV9jbGlwID0gcHZtICogdmVjNCh0b3ZlYzMoZ2V0X3NlZ21lbnRfc3RhcnQoKSksIDEpOwogICAgdmVjNCBwb2ludDJfY2xpcCA9IHB2bSAqIHZlYzQodG92ZWMzKGdldF9zZWdtZW50X2VuZCgpKSwgMSk7CiAgICB2ZWMyIHBvaW50MV9zY3JlZW4gPSBzY3JlZW5fc3BhY2UocG9pbnQxX2NsaXApOwogICAgdmVjMiBwb2ludDJfc2NyZWVuID0gc2NyZWVuX3NwYWNlKHBvaW50Ml9jbGlwKTsKICAgIHZlYzIgZGlyID0gbm9ybWFsaXplKHBvaW50Ml9zY3JlZW4gLSBwb2ludDFfc2NyZWVuKTsKICAgIHZlYzIgbm9ybWFsID0gdmVjMigtZGlyLnksIGRpci54KTsKICAgIHZlYzQgYW5jaG9yOwogICAgZmxvYXQgdGhpY2tuZXNzOwoKICAgIGlmKHBvc2l0aW9uLnggPT0gMC4wKXsKICAgICAgICBhbmNob3IgPSBwb2ludDFfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9zdGFydCgpKTsKICAgICAgICB0aGlja25lc3MgPSBnZXRfbGluZXdpZHRoX3N0YXJ0KCk7CiAgICB9ZWxzZXsKICAgICAgICBhbmNob3IgPSBwb2ludDJfY2xpcDsKICAgICAgICBmcmFnX2NvbG9yID0gdG92ZWM0KGdldF9jb2xvcl9lbmQoKSk7CiAgICAgICAgdGhpY2tuZXNzID0gZ2V0X2xpbmV3aWR0aF9lbmQoKTsKICAgIH0KICAgIGZyYWdfY29sb3IuYSA9IGZyYWdfY29sb3IuYSAqIG1pbigxLjAsIHRoaWNrbmVzcyAqIDIuMCk7CgogICAgbm9ybWFsICo9ICh0aGlja25lc3MgLyBnZXRfcmVzb2x1dGlvbigpKSAqIGFuY2hvci53OwogICAgLy8gcXVhZHBvcyB5IChwb3NpdGlvbi55KSBnaXZlcyB1cyB0aGUgZGlyZWN0aW9uIHRvIGV4cGFuZCB0aGUgbGluZQogICAgdmVjNCBvZmZzZXQgPSB2ZWM0KG5vcm1hbCAqIHBvc2l0aW9uLnksIDAuMCwgMC4wKTsKICAgIC8vIHN0YXJ0LCBvciBlbmQgb2YgcXVhZCwgbmVlZCB0byB1c2UgY3VycmVudCBvciBuZXh0IHBvaW50IGFzIGFuY2hvcgogICAgZ2xfUG9zaXRpb24gPSBhbmNob3IgKyBvZmZzZXQ7CiAgICBnbF9Qb3NpdGlvbi56ICs9IGdsX1Bvc2l0aW9uLncgKiBnZXRfZGVwdGhfc2hpZnQoKTsKCiAgICBmcmFnX2luc3RhbmNlX2lkID0gdWludChnbF9JbnN0YW5jZUlEKTsKCn0KCq9mcmFnbWVudF9zb3VyY2XaBEQjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7CgpvdXQgdmVjNCBmcmFnbWVudF9jb2xvcjsKCi8vIFVuaWZvcm1zOiAKdW5pZm9ybSB1aW50IG9iamVjdF9pZDsKdWludCBnZXRfb2JqZWN0X2lkKCl7cmV0dXJuIG9iamVjdF9pZDt9CnVuaWZvcm0gdmVjMiByZXNvbHV0aW9uOwp2ZWMyIGdldF9yZXNvbHV0aW9uKCl7cmV0dXJuIHJlc29sdXRpb247fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CgoKaW4gdmVjNCBmcmFnX2NvbG9yOwoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKGZyYWdfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoZnJhZ19jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gZnJhZ19jb2xvcjsKfQqzaW5zdGFuY2VfYXR0cmlidXRlc4apY29sb3JfZW5kgqt0eXBlX2xlbmd0aASkZmxhdMcAF61saW5ld2lkdGhfZW5kgqt0eXBlX2xlbmd0aAGkZmxhdMcAF6tjb2xvcl9zdGFydIKrdHlwZV9sZW5ndGgEpGZsYXTHABerc2VnbWVudF9lbmSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXrXNlZ21lbnRfc3RhcnSCq3R5cGVfbGVuZ3RoAqRmbGF0xwAXr2xpbmV3aWR0aF9zdGFydIKrdHlwZV9sZW5ndGgBpGZsYXTHABeOrHRyYW5zcGFyZW5jeccUaLMxNDg2MDY3OTA2NDU5Mzc0NjA0pXNwYWNlxxRoszg5NDk4MjM3ODk0Mzc5ODU4NzWsdmVydGV4YXJyYXlzgqdub3JtYWxzgqt0eXBlX2xlbmd0aAOkZmxhdMdgFwAAwP8AAMD/AADA/wAAAAAAAAAAAACAPwAAAAAAAAAA//9/PwAAAAAAAAAA//9/PwAAwP8AAMD/AADA/wAAAAAAAAAA//9/PwAAAAAAAAAA//9/PwAAAAAAAAAAAACAP6hwb3NpdGlvboKrdHlwZV9sZW5ndGgDpGZsYXTHYBcAgNVDAAAwQgAAAAAAAEREAAAwQgAAAAAAAEREAAASRAAAAAAAgNVDAAASRAAAAAAAgNVDAAAwQgAAAADNbN5DAAAwQgAAAADNbN5D//+NQgAAAAAAgNVD//+NQgAAAACkbmFtZbltZXNoLTE2NTIwNDE4NDMwOTc3Njg5ODQ0qWNhbV9zcGFjZaRkYXRhqHVuaWZvcm1z3gAWvmludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcsOpYmFja2xpZ2h0ygAAAAClbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAyEIAAIA/p2RpZmZ1c2XHDBfNzMw+zczMPs3MzD6qY29sb3JyYW5nZcOnbG93Y2xpcNgXAAAAAAAAAAAAAAAAAAAAAKhoaWdoY2xpcNgXAAAAAAAAAAAAAAAAAAAAAKdhbWJpZW50xwwXzcwMP83MDD/NzAw/qW5hbl9jb2xvctgXAAAAAAAAAAAAAAAAAAAAAKdwYXR0ZXJuwqxub3JtYWxtYXRyaXjHJBcAAIA/AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAgD+idXbXFwAAAAAAAAAAp3NoYWRpbmfCqHNwZWN1bGFyxwwXzcxMPs3MTD7NzEw+p3BpY2tpbmfCqW9iamVjdF9pZACtdW5pZm9ybV9jb2xvctgXAAAAAAAAAAAAAAAAzcxMPqtkZXB0aF9zaGlmdMoAAAAArWxpZ2h0cG9zaXRpb27HDBcAAIA/AACAPwAAgD+lY29sb3LCqXNoaW5pbmVzc8pCAAAAqGNvbG9ybWFww6d2aXNpYmxlxxNosjQzNjA4NTM1NTcyMDYwNDA2MrFhdHRyaWJ1dGVfdXBkYXRlcscVaLQxMzU5MzIzMTI5MjAxNjIzNTU4N6hvdmVyZHJhd8cVaLQxNTc3NDc5NjIxOTE5MzgyNDUyNa91bmlmb3JtX3VwZGF0ZXLHFGizNzEyMTU3NDE3NDQwMDMyOTcxNqVmYWNlc8cUaLM3NTU0OTg4MDYyNTUyNDc1NDMzpHV1aWS0MTY1MjA0MTg0MzA5Nzc2ODk4NDStdmVydGV4X3NvdXJjZdoUJCN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKLy8gSW5zdGFuY2UgaW5wdXRzOiAKaW4gdmVjMyBwb3NpdGlvbjsKdmVjMyBnZXRfcG9zaXRpb24oKXtyZXR1cm4gcG9zaXRpb247fQppbiB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CgovLyBVbmlmb3JtczogCnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSBib29sIGNvbG9ybWFwOwpib29sIGdldF9jb2xvcm1hcCgpe3JldHVybiBjb2xvcm1hcDt9CnVuaWZvcm0gdmVjNCBoaWdoY2xpcDsKdmVjNCBnZXRfaGlnaGNsaXAoKXtyZXR1cm4gaGlnaGNsaXA7fQp1bmlmb3JtIGJvb2wgcGF0dGVybjsKYm9vbCBnZXRfcGF0dGVybigpe3JldHVybiBwYXR0ZXJuO30KdW5pZm9ybSBib29sIHBpY2tpbmc7CmJvb2wgZ2V0X3BpY2tpbmcoKXtyZXR1cm4gcGlja2luZzt9CnVuaWZvcm0gYm9vbCBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7CmJvb2wgZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpe3JldHVybiBpbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXI7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIHZlYzQgbmFuX2NvbG9yOwp2ZWM0IGdldF9uYW5fY29sb3IoKXtyZXR1cm4gbmFuX2NvbG9yO30KdW5pZm9ybSBmbG9hdCBzaGluaW5lc3M7CmZsb2F0IGdldF9zaGluaW5lc3MoKXtyZXR1cm4gc2hpbmluZXNzO30KdW5pZm9ybSB2ZWMyIHV2Owp2ZWMyIGdldF91digpe3JldHVybiB1djt9CnVuaWZvcm0gYm9vbCBjb2xvcnJhbmdlOwpib29sIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBmbG9hdCBkZXB0aF9zaGlmdDsKZmxvYXQgZ2V0X2RlcHRoX3NoaWZ0KCl7cmV0dXJuIGRlcHRoX3NoaWZ0O30KdW5pZm9ybSBib29sIGNvbG9yOwpib29sIGdldF9jb2xvcigpe3JldHVybiBjb2xvcjt9CnVuaWZvcm0gdmVjNCB1bmlmb3JtX2NvbG9yOwp2ZWM0IGdldF91bmlmb3JtX2NvbG9yKCl7cmV0dXJuIHVuaWZvcm1fY29sb3I7fQp1bmlmb3JtIGJvb2wgc2hhZGluZzsKYm9vbCBnZXRfc2hhZGluZygpe3JldHVybiBzaGFkaW5nO30KdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgdmVjMyBvX25vcm1hbDsKb3V0IHZlYzMgb19jYW1kaXI7Cm91dCB2ZWMzIG9fbGlnaHRkaXI7CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNChmbG9hdCB2KXtyZXR1cm4gdmVjNCh2LCAwLjAsIDAuMCwgMC4wKTt9CnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCB2ZXJ0ZXhfY29sb3IodmVjMyBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKHZlYzQgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGZsb2F0IHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIHZlYzQodmFsdWUsIDAuMCwgMC4wLCAwLjApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfQp9Cgp2b2lkIHJlbmRlcih2ZWM0IHBvc2l0aW9uX3dvcmxkLCB2ZWMzIG5vcm1hbCwgbWF0NCB2aWV3LCBtYXQ0IHByb2plY3Rpb24sIHZlYzMgbGlnaHRwb3NpdGlvbikKewogICAgLy8gbm9ybWFsIGluIHdvcmxkIHNwYWNlCiAgICBvX25vcm1hbCA9IGdldF9ub3JtYWxtYXRyaXgoKSAqIG5vcm1hbDsKICAgIC8vIHBvc2l0aW9uIGluIHZpZXcgc3BhY2UgKGFzIHNlZW4gZnJvbSBjYW1lcmEpCiAgICB2ZWM0IHZpZXdfcG9zID0gdmlldyAqIHBvc2l0aW9uX3dvcmxkOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3X3BvczsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGxpZ2h0CiAgICBvX2xpZ2h0ZGlyID0gbm9ybWFsaXplKHZpZXcqdmVjNChsaWdodHBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5ejsKICAgIC8vIGRpcmVjdGlvbiB0byBjYW1lcmEKICAgIC8vIFRoaXMgaXMgZXF1aXZhbGVudCB0bwogICAgLy8gbm9ybWFsaXplKHZpZXcqdmVjNChleWVwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXoKICAgIC8vIChieSBkZWZpbml0aW9uIGB2aWV3ICogZXllcG9zaXRpb24gPSAwYCkKICAgIG9fY2FtZGlyID0gbm9ybWFsaXplKC12aWV3X3BvcykueHl6Owp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIC8vIGdldF8qIGdldHMgdGhlIGdsb2JhbCBpbnB1dHMgKHVuaWZvcm0sIHNhbXBsZXIsIHBvc2l0aW9uIGFycmF5KQogICAgLy8gdGhvc2UgZnVuY3Rpb25zIHdpbGwgZ2V0IGluc2VydGVkIGJ5IHRoZSBzaGFkZXIgY3JlYXRpb24gcGlwZWxpbmUKICAgIHZlYzMgdmVydGV4X3Bvc2l0aW9uID0gdG92ZWMzKGdldF9wb3NpdGlvbigpKTsKICAgIGlmIChpc25hbih2ZXJ0ZXhfcG9zaXRpb24ueikpIHsKICAgICAgICB2ZXJ0ZXhfcG9zaXRpb24ueiA9IDAuMDsKICAgIH0KICAgIHZlYzQgcG9zaXRpb25fd29ybGQgPSBtb2RlbCAqIHZlYzQodmVydGV4X3Bvc2l0aW9uLCAxKTsKCiAgICByZW5kZXIocG9zaXRpb25fd29ybGQsIGdldF9ub3JtYWxzKCksIHZpZXcsIHByb2plY3Rpb24sIGdldF9saWdodHBvc2l0aW9uKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191diA9IHZlYzIoMS4wIC0gZnJhZ191di55LCBmcmFnX3V2LngpOwogICAgZnJhZ19jb2xvciA9IHZlcnRleF9jb2xvcihnZXRfY29sb3IoKSwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX1ZlcnRleElEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoVGiN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHVpbnQgb2JqZWN0X2lkOwp1aW50IGdldF9vYmplY3RfaWQoKXtyZXR1cm4gb2JqZWN0X2lkO30KdW5pZm9ybSB2ZWMzIHNwZWN1bGFyOwp2ZWMzIGdldF9zcGVjdWxhcigpe3JldHVybiBzcGVjdWxhcjt9CnVuaWZvcm0gYm9vbCBjb2xvcm1hcDsKYm9vbCBnZXRfY29sb3JtYXAoKXtyZXR1cm4gY29sb3JtYXA7fQp1bmlmb3JtIHZlYzQgaGlnaGNsaXA7CnZlYzQgZ2V0X2hpZ2hjbGlwKCl7cmV0dXJuIGhpZ2hjbGlwO30KdW5pZm9ybSBib29sIHBhdHRlcm47CmJvb2wgZ2V0X3BhdHRlcm4oKXtyZXR1cm4gcGF0dGVybjt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBmbG9hdCBiYWNrbGlnaHQ7CmZsb2F0IGdldF9iYWNrbGlnaHQoKXtyZXR1cm4gYmFja2xpZ2h0O30KdW5pZm9ybSB2ZWMzIGFtYmllbnQ7CnZlYzMgZ2V0X2FtYmllbnQoKXtyZXR1cm4gYW1iaWVudDt9CnVuaWZvcm0gbWF0MyBub3JtYWxtYXRyaXg7Cm1hdDMgZ2V0X25vcm1hbG1hdHJpeCgpe3JldHVybiBub3JtYWxtYXRyaXg7fQp1bmlmb3JtIHZlYzMgbGlnaHRwb3NpdGlvbjsKdmVjMyBnZXRfbGlnaHRwb3NpdGlvbigpe3JldHVybiBsaWdodHBvc2l0aW9uO30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQp1bmlmb3JtIGJvb2wgY29sb3JyYW5nZTsKYm9vbCBnZXRfY29sb3JyYW5nZSgpe3JldHVybiBjb2xvcnJhbmdlO30KdW5pZm9ybSBtYXQ0IG1vZGVsOwptYXQ0IGdldF9tb2RlbCgpe3JldHVybiBtb2RlbDt9CnVuaWZvcm0gZmxvYXQgZGVwdGhfc2hpZnQ7CmZsb2F0IGdldF9kZXB0aF9zaGlmdCgpe3JldHVybiBkZXB0aF9zaGlmdDt9CnVuaWZvcm0gYm9vbCBjb2xvcjsKYm9vbCBnZXRfY29sb3IoKXtyZXR1cm4gY29sb3I7fQp1bmlmb3JtIHZlYzQgdW5pZm9ybV9jb2xvcjsKdmVjNCBnZXRfdW5pZm9ybV9jb2xvcigpe3JldHVybiB1bmlmb3JtX2NvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjMyBkaWZmdXNlOwp2ZWMzIGdldF9kaWZmdXNlKCl7cmV0dXJuIGRpZmZ1c2U7fQp1bmlmb3JtIHZlYzQgbG93Y2xpcDsKdmVjNCBnZXRfbG93Y2xpcCgpe3JldHVybiBsb3djbGlwO30KCmluIHZlYzIgZnJhZ191djsKaW4gdmVjNCBmcmFnX2NvbG9yOwpmbGF0IGluIGludCBzYW1wbGVfZnJhZ19jb2xvcjsKCmluIHZlYzMgb19ub3JtYWw7CmluIHZlYzMgb19jYW1kaXI7CmluIHZlYzMgb19saWdodGRpcjsKCnZlYzMgYmxpbm5waG9uZyh2ZWMzIE4sIHZlYzMgViwgdmVjMyBMLCB2ZWMzIGNvbG9yKXsKICAgIGZsb2F0IGRpZmZfY29lZmYgPSBtYXgoZG90KEwsIE4pLCAwLjApOwoKICAgIC8vIHNwZWN1bGFyIGNvZWZmaWNpZW50CiAgICB2ZWMzIEggPSBub3JtYWxpemUoTCArIFYpOwoKICAgIGZsb2F0IHNwZWNfY29lZmYgPSBwb3cobWF4KGRvdChILCBOKSwgMC4wKSwgZ2V0X3NoaW5pbmVzcygpKTsKICAgIGlmIChkaWZmX2NvZWZmIDw9IDAuMCkKICAgICAgICBzcGVjX2NvZWZmID0gMC4wOwogICAgLy8gZmluYWwgbGlnaHRpbmcgbW9kZWwKICAgIHJldHVybiB2ZWMzKAogICAgICAgIGdldF9kaWZmdXNlKCkgKiBkaWZmX2NvZWZmICogY29sb3IgKwogICAgICAgIGdldF9zcGVjdWxhcigpICogc3BlY19jb2VmZgogICAgKTsKfQoKdmVjNCBnZXRfY29sb3IodmVjMyBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWM0IGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGNvbG9yOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIGZyYWdfY29sb3I7ICAvLyBjb2xvciBub3QgaW4gdW5pZm9ybQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X3BhdHRlcm4oKSkgewogICAgICAgIHZlYzIgc2l6ZSA9IHZlYzIodGV4dHVyZVNpemUoY29sb3IsIDApKTsKICAgICAgICB2ZWMyIHBvcyA9IGdsX0ZyYWdDb29yZC54eTsKICAgICAgICByZXR1cm4gdGV4ZWxGZXRjaChjb2xvciwgaXZlYzIobW9kKHBvcy54LCBzaXplLngpLCBtb2QocG9zLnksIHNpemUueSkpLCAwKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKICAgIH0KfQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCBnZXRfY29sb3IoYm9vbCBjb2xvciwgdmVjMiB1diwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgaWYgKGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKSkgewogICAgICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKGZyYWdfY29sb3IueCwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZnJhZ19jb2xvcjsKICAgIH0KfQoKdmVjNCBnZXRfY29sb3Ioc2FtcGxlcjJEIHZhbHVlcywgdmVjMiB1diwgdmVjMiBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgZmxvYXQgdmFsdWUgPSB0ZXh0dXJlKHZhbHVlcywgdXYpLng7CiAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yLCB1dik7Cn0KCmZsYXQgaW4gdWludCBmcmFnX2luc3RhbmNlX2lkOwp2ZWM0IHBhY2tfaW50KHVpbnQgaWQsIHVpbnQgaW5kZXgpIHsKICAgIHZlYzQgdW5wYWNrOwogICAgdW5wYWNrLnggPSBmbG9hdCgoaWQgJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sueSA9IGZsb2F0KChpZCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHVucGFjay56ID0gZmxvYXQoKGluZGV4ICYgdWludCgweGZmMDApKSA+PiA4KSAvIDI1NS4wOwogICAgdW5wYWNrLncgPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4MDBmZikpID4+IDApIC8gMjU1LjA7CiAgICByZXR1cm4gdW5wYWNrOwp9Cgp2b2lkIG1haW4oKSB7CiAgICB2ZWM0IHJlYWxfY29sb3IgPSBnZXRfY29sb3IodW5pZm9ybV9jb2xvciwgZnJhZ191diwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwogICAgdmVjMyBzaGFkZWRfY29sb3IgPSByZWFsX2NvbG9yLnJnYjsKCiAgICBpZihnZXRfc2hhZGluZygpKXsKICAgICAgICB2ZWMzIEwgPSBub3JtYWxpemUob19saWdodGRpcik7CiAgICAgICAgdmVjMyBOID0gbm9ybWFsaXplKG9fbm9ybWFsKTsKICAgICAgICB2ZWMzIGxpZ2h0MSA9IGJsaW5ucGhvbmcoTiwgb19jYW1kaXIsIEwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICB2ZWMzIGxpZ2h0MiA9IGJsaW5ucGhvbmcoTiwgb19jYW1kaXIsIC1MLCByZWFsX2NvbG9yLnJnYik7CiAgICAgICAgc2hhZGVkX2NvbG9yID0gZ2V0X2FtYmllbnQoKSAqIHJlYWxfY29sb3IucmdiICsgbGlnaHQxICsgZ2V0X2JhY2tsaWdodCgpICogbGlnaHQyOwogICAgfQoKICAgIGlmIChwaWNraW5nKSB7CiAgICAgICAgaWYgKHJlYWxfY29sb3IuYSA+IDAuMSkgewogICAgICAgICAgICBmcmFnbWVudF9jb2xvciA9IHBhY2tfaW50KG9iamVjdF9pZCwgZnJhZ19pbnN0YW5jZV9pZCk7CiAgICAgICAgfQogICAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAocmVhbF9jb2xvci5hIDw9IDAuMCl7CiAgICAgICAgZGlzY2FyZDsKICAgIH0KICAgIGZyYWdtZW50X2NvbG9yID0gdmVjNChzaGFkZWRfY29sb3IsIHJlYWxfY29sb3IuYSk7Cn0Kr2JhY2tncm91bmRjb2xvcscVaLQxNzE0MTcyNzQ2ODk5MTYwMTY5MqlwaXhlbGFyZWHHFGizOTUzNDc1MzIzODc5MzY2NTUwNqZjYW1lcmHHFGizNDg3MDM4Mzc3MjU5MjUwMzIyMKR1dWlkszg1ODcxMjU2Mzc4NzU4MzU1NjWrY2FtM2Rfc3RhdGXAqmNsZWFyc2NlbmXCqGNoaWxkcmVukYmndmlzaWJsZccVaLQxNjc4NjMxNDQ1MDgxODY4ODY1NKVwbG90c5GOrHRyYW5zcGFyZW5jeccVaLQxNDYxMTk5ODcyMDE3MzMyNDk0MaVzcGFjZccUaLM1NzI3MDczMDQ4NDUzNTQwNTczrHZlcnRleGFycmF5c4KidXaCq3R5cGVfbGVuZ3RoAqRmbGF0yAPIFwAAAAAAAIA/zczMPQAAgD/NzEw+AACAP5qZmT4AAIA/zczMPgAAgD8AAAA/AACAP5qZGT8AAIA/MzMzPwAAgD/NzEw/AACAP2ZmZj8AAIA/AACAPwAAgD8AAAAAZmZmP83MzD1mZmY/zcxMPmZmZj+amZk+ZmZmP83MzD5mZmY/AAAAP2ZmZj+amRk/ZmZmPzMzMz9mZmY/zcxMP2ZmZj9mZmY/ZmZmPwAAgD9mZmY/AAAAAM3MTD/NzMw9zcxMP83MTD7NzEw/mpmZPs3MTD/NzMw+zcxMPwAAAD/NzEw/mpkZP83MTD8zMzM/zcxMP83MTD/NzEw/ZmZmP83MTD8AAIA/zcxMPwAAAAAzMzM/zczMPTMzMz/NzEw+MzMzP5qZmT4zMzM/zczMPjMzMz8AAAA/MzMzP5qZGT8zMzM/MzMzPzMzMz/NzEw/MzMzP2ZmZj8zMzM/AACAPzMzMz8AAAAAmpkZP83MzD2amRk/zcxMPpqZGT+amZk+mpkZP83MzD6amRk/AAAAP5qZGT+amRk/mpkZPzMzMz+amRk/zcxMP5qZGT9mZmY/mpkZPwAAgD+amRk/AAAAAAAAAD/NzMw9AAAAP83MTD4AAAA/mpmZPgAAAD/NzMw+AAAAPwAAAD8AAAA/mpkZPwAAAD8zMzM/AAAAP83MTD8AAAA/ZmZmPwAAAD8AAIA/AAAAPwAAAADNzMw+zczMPc3MzD7NzEw+zczMPpqZmT7NzMw+zczMPs3MzD4AAAA/zczMPpqZGT/NzMw+MzMzP83MzD7NzEw/zczMPmZmZj/NzMw+AACAP83MzD4AAAAAmpmZPs3MzD2amZk+zcxMPpqZmT6amZk+mpmZPs3MzD6amZk+AAAAP5qZmT6amRk/mpmZPjMzMz+amZk+zcxMP5qZmT5mZmY/mpmZPgAAgD+amZk+AAAAAM3MTD7NzMw9zcxMPs3MTD7NzEw+mpmZPs3MTD7NzMw+zcxMPgAAAD/NzEw+mpkZP83MTD4zMzM/zcxMPs3MTD/NzEw+ZmZmP83MTD4AAIA/zcxMPgAAAADNzMw9zczMPc3MzD3NzEw+zczMPZqZmT7NzMw9zczMPs3MzD0AAAA/zczMPZqZGT/NzMw9MzMzP83MzD3NzEw/zczMPWZmZj/NzMw9AACAP83MzD0AAAAAAAAAAM3MzD0AAAAAzcxMPgAAAACamZk+AAAAAM3MzD4AAAAAAAAAPwAAAACamRk/AAAAADMzMz8AAAAAzcxMPwAAAABmZmY/AAAAAAAAgD8AAAAAqHBvc2l0aW9ugqt0eXBlX2xlbmd0aAOkZmxhdMgFrBcAAAA/AAAAPwAAAAAAAMA/AAAAPwAAAAAAACBAAAAAPwAAAAAAAGBAAAAAPwAAAAAAAJBAAAAAPwAAAAAAALBAAAAAPwAAAAAAANBAAAAAPwAAAAAAAPBAAAAAPwAAAAAAAAhBAAAAPwAAAAAAABhBAAAAPwAAAAAAAChBAAAAPwAAAAAAAAA/AADAPwAAAAAAAMA/AADAPwAAAAAAACBAAADAPwAAAAAAAGBAAADAPwAAAAAAAJBAAADAPwAAAAAAALBAAADAPwAAAAAAANBAAADAPwAAAAAAAPBAAADAPwAAAAAAAAhBAADAPwAAAAAAABhBAADAPwAAAAAAAChBAADAPwAAAAAAAAA/AAAgQAAAAAAAAMA/AAAgQAAAAAAAACBAAAAgQAAAAAAAAGBAAAAgQAAAAAAAAJBAAAAgQAAAAAAAALBAAAAgQAAAAAAAANBAAAAgQAAAAAAAAPBAAAAgQAAAAAAAAAhBAAAgQAAAAAAAABhBAAAgQAAAAAAAAChBAAAgQAAAAAAAAAA/AABgQAAAAAAAAMA/AABgQAAAAAAAACBAAABgQAAAAAAAAGBAAABgQAAAAAAAAJBAAABgQAAAAAAAALBAAABgQAAAAAAAANBAAABgQAAAAAAAAPBAAABgQAAAAAAAAAhBAABgQAAAAAAAABhBAABgQAAAAAAAAChBAABgQAAAAAAAAAA/AACQQAAAAAAAAMA/AACQQAAAAAAAACBAAACQQAAAAAAAAGBAAACQQAAAAAAAAJBAAACQQAAAAAAAALBAAACQQAAAAAAAANBAAACQQAAAAAAAAPBAAACQQAAAAAAAAAhBAACQQAAAAAAAABhBAACQQAAAAAAAAChBAACQQAAAAAAAAAA/AACwQAAAAAAAAMA/AACwQAAAAAAAACBAAACwQAAAAAAAAGBAAACwQAAAAAAAAJBAAACwQAAAAAAAALBAAACwQAAAAAAAANBAAACwQAAAAAAAAPBAAACwQAAAAAAAAAhBAACwQAAAAAAAABhBAACwQAAAAAAAAChBAACwQAAAAAAAAAA/AADQQAAAAAAAAMA/AADQQAAAAAAAACBAAADQQAAAAAAAAGBAAADQQAAAAAAAAJBAAADQQAAAAAAAALBAAADQQAAAAAAAANBAAADQQAAAAAAAAPBAAADQQAAAAAAAAAhBAADQQAAAAAAAABhBAADQQAAAAAAAAChBAADQQAAAAAAAAAA/AADwQAAAAAAAAMA/AADwQAAAAAAAACBAAADwQAAAAAAAAGBAAADwQAAAAAAAAJBAAADwQAAAAAAAALBAAADwQAAAAAAAANBAAADwQAAAAAAAAPBAAADwQAAAAAAAAAhBAADwQAAAAAAAABhBAADwQAAAAAAAAChBAADwQAAAAAAAAAA/AAAIQQAAAAAAAMA/AAAIQQAAAAAAACBAAAAIQQAAAAAAAGBAAAAIQQAAAAAAAJBAAAAIQQAAAAAAALBAAAAIQQAAAAAAANBAAAAIQQAAAAAAAPBAAAAIQQAAAAAAAAhBAAAIQQAAAAAAABhBAAAIQQAAAAAAAChBAAAIQQAAAAAAAAA/AAAYQQAAAAAAAMA/AAAYQQAAAAAAACBAAAAYQQAAAAAAAGBAAAAYQQAAAAAAAJBAAAAYQQAAAAAAALBAAAAYQQAAAAAAANBAAAAYQQAAAAAAAPBAAAAYQQAAAAAAAAhBAAAYQQAAAAAAABhBAAAYQQAAAAAAAChBAAAYQQAAAAAAAAA/AAAoQQAAAAAAAMA/AAAoQQAAAAAAACBAAAAoQQAAAAAAAGBAAAAoQQAAAAAAAJBAAAAoQQAAAAAAALBAAAAoQQAAAAAAANBAAAAoQQAAAAAAAPBAAAAoQQAAAAAAAAhBAAAoQQAAAAAAABhBAAAoQQAAAAAAAChBAAAoQQAAAACkbmFtZbtoZWF0bWFwLTU4Mzc1NjE4MTcwOTAxMTc3NzOpY2FtX3NwYWNlpGRhdGGodW5pZm9ybXPeABa+aW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyw6liYWNrbGlnaHTKAAAAAKVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD+nZGlmZnVzZccMFwAAAAAAAAAAAAAAAKpjb2xvcnJhbmdl1xe8vI87XUR0P6dsb3djbGlw2BfAtIg+E7afOxWpqD4AAIA/qGhpZ2hjbGlw2BeARX4/6PlnP/VjEz4AAIA/p2FtYmllbnTHDBfNzAw/zcwMP83MDD+pbmFuX2NvbG9y2BcAAAAAAAAAAAAAAAAAAAAAp3BhdHRlcm7CrG5vcm1hbG1hdHJpeMckFwAAgD8AAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAP6dzaGFkaW5nwqhzcGVjdWxhcscMFwAAAAAAAAAAAAAAAKdub3JtYWxzxwwXAAAAAAAAAAAAAAAAp3BpY2tpbmfCqW9iamVjdF9pZACtdW5pZm9ybV9jb2xvcoqpbWluRmlsdGVyrU5lYXJlc3RGaWx0ZXKqYW5pc290cm9weco/gAAAqW1hZ0ZpbHRlcq1OZWFyZXN0RmlsdGVypXdyYXBTs0NsYW1wVG9FZGdlV3JhcHBpbmekZGF0YcgBkBfqMKM9FeYiP3GHlT5o//M8GuiFPQPM6T6Xs8g9BMgfP3PB3TwMbRI/aaAYPxJxbT/CvyE+xNQOP6FvBD8IEEU/CD0RP28dhz7f1TU/5CY0P+yGxz6nB3A/JnGWPqPvXj8qF/g+IAC7PocuNT/ZQK09UvnzPmtPfD3J3E8/gqXpPg3B0D5gQDM/4w7cPq2KaT+/8lo/at/gPsnpPj9iF34+YZoaPvkfED01oLo9UHIcPnQf4z6OI18/g429PncgPT/qqv8+JGBRP50HhT4xHzY/APvwPQwFxj00FjU/DF5uP59gHz/CEBU/JD87PzFEOz+OmmA/jZQrP11EdD9TnAs/+RiRPk3rxTyEjUI/wtEEPl2aBT9ChNM+VpIcPnRXqj6Fih8/cVtMP5ESBT+CVQ0/bnKDPi85FT8vZDk/Ww+yPqCTDz8aViE/i2OGPg20ST7RqNg+Pm4XP6OcVz9r1EM8TSRIP/+awj6KIhw+vCfHPg6gLT7hdxg/YxobP7y8jzvgKhc/7gZoP8nIoT5nu/E9rHRocmVlX2Zvcm1hdKlSZWRGb3JtYXSkc2l6ZdcVCgAAAAoAAACld3JhcFSzQ2xhbXBUb0VkZ2VXcmFwcGluZ6R0eXBlp1NhbXBsZXKqdGhyZWVfdHlwZalGbG9hdFR5cGWrZGVwdGhfc2hpZnTKAAAAAK1saWdodHBvc2l0aW9uxwwXAACAPwAAgD8AAIA/pWNvbG9ywqlzaGluaW5lc3PKAAAAAKhjb2xvcm1hcImpbWluRmlsdGVyrExpbmVhckZpbHRlcqphbmlzb3Ryb3B5yj+AAACpbWFnRmlsdGVyrExpbmVhckZpbHRlcqV3cmFwU7NDbGFtcFRvRWRnZVdyYXBwaW5npGRhdGHIEAAXwLSIPhO2nzsVqag+AACAPyV6iT5KXh08Fr2rPgAAgD8aNoo+sp1vPDrJrj4AAIA/feiKPmhdozw+zbE+AACAP3GRiz5/adE8m8i0PgAAgD+xMIw+AAMBPZW7tz4AAIA/gsaMPtehGj1hpbo+AACAP8FSjT516DQ9I4a9PgAAgD9O1Y0+gzVOPbddwD4AAIA/SE6OPv+zZj13K8M+AACAP7K9jj7Bi349Y+/FPgAAgD9GI48+mu2KPVipyD4AAIA/KH+PPqdblj3zWMs+AACAP1fRjz7+maE9Ef7NPgAAgD+xGZA+96+sPZGY0D4AAIA/WFiQPs+itz0PKNM+AACAPyqNkD7Ed8I9aazVPgAAgD9KuJA+jzPNPVsl2D4AAIA/lNmQPknY1z3mkto+AACAP07xkD6caeI9pfTcPgAAgD8y/5A+o+nsPXdK3z4AAIA/ZAORPu9Z9z06lOE+AACAP+P9kD5M3gA+zNHjPgAAgD/Q7pA+VwkGPusC5j4AAIA/LNaQPp0uCz6VJ+g+AACAP/azkD7oThA+qz/qPgAAgD9RiJA+9WkVPgpL7D4AAIA/flOQPo2AGj6QSe4+AACAPzwVkD7zkh8+HTvwPgAAgD/uzY8+J6EkPtEf8j4AAIA/lX2PPm2rKT6M9/M+AACAP1Mkjz6BsS4+K8L1PgAAgD9Iwo4+p7MzPtB/9z4AAIA/l1eOPiCyOD5ZMPk+AACAP4LkjT5prD0+6dP6PgAAgD9NaY0+wqJCPqFq/D4AAIA/1uWMPi2VRz5e9P0+AACAP4FajD6pg0w+Q3H/PgAAgD9xx4s+sW1RPspwAD8AAIA/Ci2LPodTVj6WIgE/AACAP26Lij7nNFs+Kc4BPwAAgD+94ok+0xFgPqNzAj8AAIA/GjOJPgfqZD71EgM/AACAPyx9iD6EvWk+YKwDPwAAgD8WwYc+BYxuPtU/BD8AAIA/1v6GPopVcz6WzQQ/AACAP/Q2hj7SGXg+k1UFPwAAgD+QaYU+H9l8Pg7YBT8AAIA/D5eEPnXJgD4ZVQY/AACAP7a/gz55I4M+1cwGPwAAgD/n44I+3XqFPnU/Bz8AAIA/xQOCPl/Phz73rAc/AACAP5IfgT7/IIo+kBUIPwAAgD+1N4A+vW+MPnB5CD8AAIA/mph+Ppm7jj6p2Ag/AACAPwa8fD5xBJE+bjMJPwAAgD/x2Xo+I0qTPt+JCT8AAIA/nfJ4PhWNlT4v3Ak/AACAP9UGdz7izJc+XioKPwAAgD8eF3U+qwmaPsF0Cj8AAIA/vCNzPnBDnD5Wuwo/AACAP7otcT5Tep4+Yf4KPwAAgD+gNW8+EK6gPvM9Cz8AAIA/8zttPsreoj4+egs/AACAP7NAaz6ADKU+Y7MLPwAAgD/tRGk+VDenPoXpCz8AAIA/oUhnPkZfqT7FHAw/AACAP5hMZT5VhKs+NE0MPwAAgD8WUWM+g6atPgN7DD8AAIA/n1ZhPu/Frz5Vpgw/AACAP3ldXz6b4rE+Ss8MPwAAgD8nZl0+ZfyzPuT1DD8AAIA/73BbPrITtj5lGg0/AACAPxN+WT5fKLg+3jwNPwAAgD8Zjlc+bTq6Pl9dDT8AAIA/RaFVPv1JvD4cfA0/AACAP9i3Uz4RV74+E5kNPwAAgD8Y0lE+yGHAPle0DT8AAIA/v+9PPiNqwj4Hzg0/AACAP5kRTj5lcMQ+NuYNPwAAgD9hN0w+bXTGPgX9DT8AAIA/F2FKPlx2yD5zEg4/AACAP4aPSD4ydso+kSYOPwAAgD8nwkY+EHTMPoI5Dj8AAIA/PPlEPhlwzj5FSw4/AACAP8Y0Qz5NatA+2VsOPwAAgD8IdUE+zGLSPmFrDj8AAIA/fLk/PpZZ1D7deQ4/AACAP2QCPj7PTtY+XYcOPwAAgD/CTzw+lkLYPuKTDj8AAIA/UaE6Pso02j5rnw4/AACAP8/2OD6vJdw+CKoOPwAAgD/CUDc+RBXePryzDj8AAIA/YK41PooD4D6UvA4/AACAP6oPND7D8OE+csQOPwAAgD/idDI+z9zjPnXLDj8AAIA/QN0wPu/H5T6N0Q4/AACAP8NILz4Dsuc+y9YOPwAAgD+uty0+LJvpPg7bDj8AAIA/OSksPoyD6z523g4/AACAP6adKj4ja+0+4+AOPwAAgD9uFCk+EVLvPlTiDj8AAIA/UI0nPlg48T7K4g4/AACAP40IJj73HfM+Q+IOPwAAgD9ehSQ+MgP1PqDgDj8AAIA/wAMjPsXn9j7f3Q4/AACAP7aDIT4UzPg+8dkOPwAAgD8+BSA+/6/6PuXUDj8AAIA/04cePoaT/D6azg4/AACAP3QLHT7Jdv4+AMcOPwAAgD9kkBs+5CwAPwa+Dj8AAIA/YRYaPlQeAT+8sw4/AACAP66dGD6hDwI/8KcOPwAAgD9KJhc+7wADP8OaDj8AAIA/NrAVPhvyAz/0iw4/AACAP7Q7FD5H4wQ/gXsOPwAAgD+CyBI+dNQFP1lpDj8AAIA/aVcRPqDFBj9tVQ4/AACAP6voDz67tgc/qz8OPwAAgD+NfA4+56cIPwIoDj8AAIA/lBMNPhOZCT9SDg4/AACAP4quCz5Qigo/mfINPwAAgD++Tgo+fHsLP9jUDT8AAIA/7fMIPspsDD/dtA0/AACAP2afBz4HXg0/lpINPwAAgD/0UQY+Zk8OP/RtDT8AAIA/KA0FPsRADz/2Rg0/AACAP4nRAz4jMhA/WB0NPwAAgD8woQI+kiMRPz3xDD8AAIA/5XwBPgEVEj9hwgw/AACAP0lnAD6BBhM/5pAMPwAAgD/Owv498PcTP4lcDD8AAIA/K9r8PXDpFD9bJQw/AACAP9sY+z3g2hU/KesLPwAAgD+Igvk9T8wWP/OtCz8AAIA/cRz4Pb69Fz+YbQs/AACAP8jq9j0drxg/FyoLPwAAgD/L8vU9aqAZPz/jCj8AAIA/Mjn1PaeRGj8xmQo/AACAP7XC9D3Dghs/uksKPwAAgD8MlPQ9vXMcP7n6CT8AAIA/gbP0PaZkHT8vpgk/AACAP8Ak9T1cVR4/CU4JPwAAgD8H7fU98UUfPznyCD8AAIA/DhH3PUQ2ID+rkgg/AACAPxSW+D1jJiE/Yi8IPwAAgD+3fvo9URYiPyrIBz8AAIA/NdD8PeoFIz8DXQc/AACAP6iM/z1B9SM/7u0GPwAAgD+aWwE+MuQkP8h6Bj8AAIA/PSkDPuHSJT+CAwY/AACAP0kwBT4awSY/GogFPwAAgD9DcQc+/64nP4EIBT8AAIA/s+wJPl6cKD+lhAQ/AACAP5iiDD5ZiSk/dvwDPwAAgD82kw8+vHUqP/RvAz8AAIA/Br4SPqphKz/83gI/AACAP4EiFj4BTSw/oUkCPwAAgD9mwBk+sDctP9GvAT8AAIA/ZJYdPskhLj9rEQE/AACAP7GjIT45Cy8/fm4APwAAgD+G5yU+8fMvP9aN/z4AAIA/TmAqPvDbMD+DNf4+AACAP/4MLz4mwzE/v9P8PgAAgD+J7DM+k6kyP61o+z4AAIA/Gv04PhWPMz/p8/k+AACAP+Y9Pj69czQ/tHX4PgAAgD8ZrUM+eVc1P+7t9j4AAIA/6UlJPks6Nj90XPU+AACAP38STz4RHDc/SMHzPgAAgD/RBVU+yvw3P2kc8j4AAIA/0SJbPnfcOD/XbfA+AACAPzBoYT71ujk/LbXuPgAAgD+d1Gc+Z5g6P67y7D4AAIA/DmduPop0Oz9bJus+AACAP3UedT5/Tzw/8E/pPgAAgD/G+Xs+NSk9P7Fv5z4AAIA/+nuBPooBPj97heU+AACAP/oLhT6Q2D4/LpHjPgAAgD9+rIg+Ja4/P8mS4T4AAIA/Ql2MPkmCQD8rit8+AACAP8EdkD78VEE/dXfdPgAAgD907ZM+HCZCP6da2z4AAIA/GMyXPqn1Qj/CM9k+AACAP0m5mz6kw0M/xQLXPgAAgD+itJ8+/I9EP7DH1D4AAIA/Ab6jPp9aRT+EgtI+AACAP+HUpz6OI0Y/HjPQPgAAgD8e+as+p+pGP17ZzT4AAIA/eCqwPvuvRz+Gdcs+AACAP4hotD5pc0g/lgfJPgAAgD8Ls7g+8DRJP46Pxj4AAIA/ngm9PpD0ST9ODcQ+AACAP0BswT4psko/OIHBPgAAgD+M2sU+ym1LP+rqvj4AAIA/P1TKPlInTD+lSrw+AACAPzjZzj7T3kw/aqC5PgAAgD9VadM+GJRNP/brtj4AAIA/UwTYPjRHTj+MLbQ+AACAP86p3D4W+E4/TWWxPgAAgD+jWeE+vaZPPzqTrj4AAIA/kBPmPhpTUD90t6s+AACAP1LX6j4q/VA/+tGoPgAAgD+lpO8+z6RRPxHjpT4AAIA/Z3v0PidKUj906qI+AACAP3lb+T4D7VI/iuifPgAAgD9SRP4+YY1TP3LdnD4AAIA/+poBP1IrVD8MyZk+AACAPw0YBD/FxlQ/vauWPgAAgD9CmQY/q19VP2KFkz4AAIA/dR4JPwH2VT8/VpA+AACAP3anCz+5iVY/2h6NPgAAgD8zNA4/4xpXPzPfiT4AAIA/esQQP36pVz/Ql4Y+AACAPxlYEz96NVg/1EiDPgAAgD/+7hU/xr5YPwDlfz4AAIA/6IgYP4RFWT89K3k+AACAP8QlGz+jyVk/oWRyPgAAgD9hxR0/I0taP8CSaz4AAIA/e2cgPwTKWj+mtmQ+AACAPwIMIz9WRls/otFdPgAAgD+isiU/GsBbP83lVj4AAIA/OlsoP1A3XD+69E8+AACAP5YFKz/3q1w/CAFJPgAAgD91sS0/Mh5dPxMNQj4AAIA/ol4wPwCOXT9DHDs+AACAP90MMz9h+10/vjE0PgAAgD/guzU/d2ZeP7VRLT4AAIA/i2s4P0LPXj9ngSY+AACAP4sbOz/jNV8/EcYfPgAAgD+byz0/W5pfP4UmGT4AAIA/eHtAP8r8Xz9cqhI+AACAP+AqQz9TXWA/gVoMPgAAgD+h2UU/9btgP3BBBj4AAIA/VYdIP9IYYT8ragA+AACAP9szSz8ddGE/LsX1PQAAgD/f3k0/xM1hP8Vy6z0AAIA/DohQPwsmYj+c/eE9AACAP0UvUz8DfWI/TIjZPQAAgD9B1FU/zNJiPxE40j0AAIA/sHZYP4knYz+QMMw9AACAP10WWz9be2M/6pTHPQAAgD8Hs10/ZM5jPwKDxD0AAIA/jExgP8UgZD9vEsM9AACAP6jiYj+fcmQ/clPDPQAAgD86dWU/BcRkP0lLxT0AAIA//wNoPzgVZT/D9cg9AACAP9aOaj84ZmU/t0TOPQAAgD9IFW0/a7dlPy0j1T0AAIA/aJdvP68IZj/Jc909AACAPzMVcj9HWmY/nBfnPQAAgD+KjnQ/MqxmPxjt8T0AAIA/SwN3P6T+Zj/H1P09AACAP2RzeT+tUWc/FVcFPgAAgD/G3ns/XaVnP7ouDD4AAIA/gEV+P+j5Zz/1YxM+AACAP6x0aHJlZV9mb3JtYXSqUkdCQUZvcm1hdKRzaXpl1hUAAQAApHR5cGWnU2FtcGxlcqp0aHJlZV90eXBlqUZsb2F0VHlwZad2aXNpYmxlxxRoszQ4NTQzNzg4NDA3NDE0MjE3ODmxYXR0cmlidXRlX3VwZGF0ZXLHFWi0MTY3OTU0NTE0MjE0MjI3OTcwNjaob3ZlcmRyYXfHFWi0MTM4Mzc5MTQ4MDU1NDk2OTU5MzevdW5pZm9ybV91cGRhdGVyxxVotDE1OTA1MjczMzk2MTI0Njg3NjE3pWZhY2VzxxRoszcwMTEzMTAyNjQ5NTg3OTQ5NzCkdXVpZLM1ODM3NTYxODE3MDkwMTE3NzczrXZlcnRleF9zb3VyY2XaE9gjdmVyc2lvbiAzMDAgZXMKcHJlY2lzaW9uIG1lZGl1bXAgaW50OwpwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDsKcHJlY2lzaW9uIG1lZGl1bXAgc2FtcGxlcjJEOwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyM0Q7Ci8vIEluc3RhbmNlIGlucHV0czogCmluIHZlYzMgcG9zaXRpb247CnZlYzMgZ2V0X3Bvc2l0aW9uKCl7cmV0dXJuIHBvc2l0aW9uO30KaW4gdmVjMiB1djsKdmVjMiBnZXRfdXYoKXtyZXR1cm4gdXY7fQoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKCgpvdXQgdmVjMiBmcmFnX3V2OwpvdXQgdmVjMyBvX25vcm1hbDsKb3V0IHZlYzMgb19jYW1kaXI7Cm91dCB2ZWMzIG9fbGlnaHRkaXI7CgpvdXQgdmVjNCBmcmFnX2NvbG9yOwoKdW5pZm9ybSBtYXQ0IHByb2plY3Rpb247CnVuaWZvcm0gbWF0NCB2aWV3OwoKdmVjMyB0b3ZlYzModmVjMiB2KXtyZXR1cm4gdmVjMyh2LCAwLjApO30KdmVjMyB0b3ZlYzModmVjMyB2KXtyZXR1cm4gdjt9Cgp2ZWM0IHRvdmVjNChmbG9hdCB2KXtyZXR1cm4gdmVjNCh2LCAwLjAsIDAuMCwgMC4wKTt9CnZlYzQgdG92ZWM0KHZlYzMgdil7cmV0dXJuIHZlYzQodiwgMS4wKTt9CnZlYzQgdG92ZWM0KHZlYzQgdil7cmV0dXJuIHY7fQoKZmxvYXQgX25vcm1hbGl6ZShmbG9hdCB2YWwsIGZsb2F0IGZyb20sIGZsb2F0IHRvKXtyZXR1cm4gKHZhbC1mcm9tKSAvICh0byAtIGZyb20pO30KCnZlYzQgZ2V0X2NvbG9yX2Zyb21fY21hcChmbG9hdCB2YWx1ZSwgc2FtcGxlcjJEIGNvbG9yX21hcCwgdmVjMiBjb2xvcnJhbmdlKSB7CiAgICBmbG9hdCBjbWluID0gY29sb3JyYW5nZS54OwogICAgZmxvYXQgY21heCA9IGNvbG9ycmFuZ2UueTsKICAgIGlmICh2YWx1ZSA8PSBjbWF4ICYmIHZhbHVlID49IGNtaW4pIHsKICAgICAgICAvLyBpbiB2YWx1ZSByYW5nZSwgY29udGludWUhCiAgICB9IGVsc2UgaWYgKHZhbHVlIDwgY21pbikgewogICAgICAgIHJldHVybiBnZXRfbG93Y2xpcCgpOwogICAgfSBlbHNlIGlmICh2YWx1ZSA+IGNtYXgpIHsKICAgICAgICByZXR1cm4gZ2V0X2hpZ2hjbGlwKCk7CiAgICB9IGVsc2UgewogICAgICAgIC8vIGlzbmFuIGlzIGJyb2tlbiAob2YgY291cnNlKSAtLi0KICAgICAgICAvLyBzbyBpZiBvdXRzaWRlIHZhbHVlIHJhbmdlIGFuZCBub3Qgc21hbGxlci9iaWdnZXIgbWluL21heCB3ZSBhc3N1bWUgTmFOCiAgICAgICAgcmV0dXJuIGdldF9uYW5fY29sb3IoKTsKICAgIH0KICAgIGZsb2F0IGkwMSA9IGNsYW1wKCh2YWx1ZSAtIGNtaW4pIC8gKGNtYXggLSBjbWluKSwgMC4wLCAxLjApOwogICAgLy8gMS8wIGNvcnJlc3BvbmRzIHRvIHRoZSBjb3JuZXIgb2YgdGhlIGNvbG9ybWFwLCBzbyB0byBwcm9wZXJseSBpbnRlcnBvbGF0ZQogICAgLy8gYmV0d2VlbiB0aGUgY29sb3JzLCB3ZSBuZWVkIHRvIHNjYWxlIGl0LCBzbyB0aGF0IHRoZSBlbmRzIGFyZSBhdCAxIC0gKHN0ZXBzaXplLzIpIGFuZCAwKyhzdGVwc2l6ZS8yKS4KICAgIGZsb2F0IHN0ZXBzaXplID0gMS4wIC8gZmxvYXQodGV4dHVyZVNpemUoY29sb3JfbWFwLCAwKSk7CiAgICBpMDEgPSAoMS4wIC0gc3RlcHNpemUpICogaTAxICsgMC41ICogc3RlcHNpemU7CiAgICByZXR1cm4gdGV4dHVyZShjb2xvcl9tYXAsIHZlYzIoaTAxLCAwLjApKTsKfQoKdmVjNCB2ZXJ0ZXhfY29sb3IodmVjMyBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIHJldHVybiB2ZWM0KGNvbG9yLCAxLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKHZlYzQgY29sb3IsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KdmVjNCB2ZXJ0ZXhfY29sb3IoYm9vbCBjb2xvciwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGJvb2wgdmFsdWUsIHZlYzIgY29sb3JyYW5nZSwgc2FtcGxlcjJEIGNvbG9ybWFwKXsKICAgIC8vIGNvbG9yIHNhbXBsaW5nIGhhcHBlbnMgaW4gZnJhZ21lbnQgc2hhZGVyCiAgICByZXR1cm4gdmVjNCgwLjAsIDAuMCwgMC4wLCAwLjApOwp9CnZlYzQgdmVydGV4X2NvbG9yKGZsb2F0IHZhbHVlLCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIHZlYzQodmFsdWUsIDAuMCwgMC4wLCAwLjApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZ2V0X2NvbG9yX2Zyb21fY21hcCh2YWx1ZSwgY29sb3JtYXAsIGNvbG9ycmFuZ2UpOwogICAgfQp9Cgp2b2lkIHJlbmRlcih2ZWM0IHBvc2l0aW9uX3dvcmxkLCB2ZWMzIG5vcm1hbCwgbWF0NCB2aWV3LCBtYXQ0IHByb2plY3Rpb24sIHZlYzMgbGlnaHRwb3NpdGlvbikKewogICAgLy8gbm9ybWFsIGluIHdvcmxkIHNwYWNlCiAgICBvX25vcm1hbCA9IGdldF9ub3JtYWxtYXRyaXgoKSAqIG5vcm1hbDsKICAgIC8vIHBvc2l0aW9uIGluIHZpZXcgc3BhY2UgKGFzIHNlZW4gZnJvbSBjYW1lcmEpCiAgICB2ZWM0IHZpZXdfcG9zID0gdmlldyAqIHBvc2l0aW9uX3dvcmxkOwogICAgLy8gcG9zaXRpb24gaW4gY2xpcCBzcGFjZSAody8gZGVwdGgpCiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3Rpb24gKiB2aWV3X3BvczsKICAgIGdsX1Bvc2l0aW9uLnogKz0gZ2xfUG9zaXRpb24udyAqIGdldF9kZXB0aF9zaGlmdCgpOwogICAgLy8gZGlyZWN0aW9uIHRvIGxpZ2h0CiAgICBvX2xpZ2h0ZGlyID0gbm9ybWFsaXplKHZpZXcqdmVjNChsaWdodHBvc2l0aW9uLCAxLjApIC0gdmlld19wb3MpLnh5ejsKICAgIC8vIGRpcmVjdGlvbiB0byBjYW1lcmEKICAgIC8vIFRoaXMgaXMgZXF1aXZhbGVudCB0bwogICAgLy8gbm9ybWFsaXplKHZpZXcqdmVjNChleWVwb3NpdGlvbiwgMS4wKSAtIHZpZXdfcG9zKS54eXoKICAgIC8vIChieSBkZWZpbml0aW9uIGB2aWV3ICogZXllcG9zaXRpb24gPSAwYCkKICAgIG9fY2FtZGlyID0gbm9ybWFsaXplKC12aWV3X3BvcykueHl6Owp9CgpmbGF0IG91dCB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7Cgp2b2lkIG1haW4oKXsKICAgIC8vIGdldF8qIGdldHMgdGhlIGdsb2JhbCBpbnB1dHMgKHVuaWZvcm0sIHNhbXBsZXIsIHBvc2l0aW9uIGFycmF5KQogICAgLy8gdGhvc2UgZnVuY3Rpb25zIHdpbGwgZ2V0IGluc2VydGVkIGJ5IHRoZSBzaGFkZXIgY3JlYXRpb24gcGlwZWxpbmUKICAgIHZlYzMgdmVydGV4X3Bvc2l0aW9uID0gdG92ZWMzKGdldF9wb3NpdGlvbigpKTsKICAgIGlmIChpc25hbih2ZXJ0ZXhfcG9zaXRpb24ueikpIHsKICAgICAgICB2ZXJ0ZXhfcG9zaXRpb24ueiA9IDAuMDsKICAgIH0KICAgIHZlYzQgcG9zaXRpb25fd29ybGQgPSBtb2RlbCAqIHZlYzQodmVydGV4X3Bvc2l0aW9uLCAxKTsKCiAgICByZW5kZXIocG9zaXRpb25fd29ybGQsIGdldF9ub3JtYWxzKCksIHZpZXcsIHByb2plY3Rpb24sIGdldF9saWdodHBvc2l0aW9uKCkpOwogICAgZnJhZ191diA9IGdldF91digpOwogICAgZnJhZ191diA9IHZlYzIoMS4wIC0gZnJhZ191di55LCBmcmFnX3V2LngpOwogICAgZnJhZ19jb2xvciA9IHZlcnRleF9jb2xvcihnZXRfY29sb3IoKSwgZ2V0X2NvbG9ycmFuZ2UoKSwgY29sb3JtYXApOwoKICAgIGZyYWdfaW5zdGFuY2VfaWQgPSB1aW50KGdsX1ZlcnRleElEKTsKfQoKr2ZyYWdtZW50X3NvdXJjZdoU3SN2ZXJzaW9uIDMwMCBlcwpwcmVjaXNpb24gbWVkaXVtcCBpbnQ7CnByZWNpc2lvbiBtZWRpdW1wIGZsb2F0OwpwcmVjaXNpb24gbWVkaXVtcCBzYW1wbGVyMkQ7CnByZWNpc2lvbiBtZWRpdW1wIHNhbXBsZXIzRDsKCm91dCB2ZWM0IGZyYWdtZW50X2NvbG9yOwoKLy8gVW5pZm9ybXM6IAp1bmlmb3JtIHNhbXBsZXIyRCBjb2xvcm1hcDsKdW5pZm9ybSB2ZWMzIG5vcm1hbHM7CnZlYzMgZ2V0X25vcm1hbHMoKXtyZXR1cm4gbm9ybWFsczt9CnVuaWZvcm0gYm9vbCBwYXR0ZXJuOwpib29sIGdldF9wYXR0ZXJuKCl7cmV0dXJuIHBhdHRlcm47fQp1bmlmb3JtIGJvb2wgaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyOwpib29sIGdldF9pbnRlcnBvbGF0ZV9pbl9mcmFnbWVudF9zaGFkZXIoKXtyZXR1cm4gaW50ZXJwb2xhdGVfaW5fZnJhZ21lbnRfc2hhZGVyO30KdW5pZm9ybSBtYXQzIG5vcm1hbG1hdHJpeDsKbWF0MyBnZXRfbm9ybWFsbWF0cml4KCl7cmV0dXJuIG5vcm1hbG1hdHJpeDt9CnVuaWZvcm0gdmVjMyBsaWdodHBvc2l0aW9uOwp2ZWMzIGdldF9saWdodHBvc2l0aW9uKCl7cmV0dXJuIGxpZ2h0cG9zaXRpb247fQp1bmlmb3JtIGZsb2F0IGRlcHRoX3NoaWZ0OwpmbG9hdCBnZXRfZGVwdGhfc2hpZnQoKXtyZXR1cm4gZGVwdGhfc2hpZnQ7fQp1bmlmb3JtIG1hdDQgbW9kZWw7Cm1hdDQgZ2V0X21vZGVsKCl7cmV0dXJuIG1vZGVsO30KdW5pZm9ybSBzYW1wbGVyMkQgdW5pZm9ybV9jb2xvcjsKdW5pZm9ybSB2ZWMzIGRpZmZ1c2U7CnZlYzMgZ2V0X2RpZmZ1c2UoKXtyZXR1cm4gZGlmZnVzZTt9CnVuaWZvcm0gdWludCBvYmplY3RfaWQ7CnVpbnQgZ2V0X29iamVjdF9pZCgpe3JldHVybiBvYmplY3RfaWQ7fQp1bmlmb3JtIHZlYzMgc3BlY3VsYXI7CnZlYzMgZ2V0X3NwZWN1bGFyKCl7cmV0dXJuIHNwZWN1bGFyO30KdW5pZm9ybSB2ZWM0IGhpZ2hjbGlwOwp2ZWM0IGdldF9oaWdoY2xpcCgpe3JldHVybiBoaWdoY2xpcDt9CnVuaWZvcm0gYm9vbCBwaWNraW5nOwpib29sIGdldF9waWNraW5nKCl7cmV0dXJuIHBpY2tpbmc7fQp1bmlmb3JtIGZsb2F0IGJhY2tsaWdodDsKZmxvYXQgZ2V0X2JhY2tsaWdodCgpe3JldHVybiBiYWNrbGlnaHQ7fQp1bmlmb3JtIHZlYzMgYW1iaWVudDsKdmVjMyBnZXRfYW1iaWVudCgpe3JldHVybiBhbWJpZW50O30KdW5pZm9ybSB2ZWM0IG5hbl9jb2xvcjsKdmVjNCBnZXRfbmFuX2NvbG9yKCl7cmV0dXJuIG5hbl9jb2xvcjt9CnVuaWZvcm0gZmxvYXQgc2hpbmluZXNzOwpmbG9hdCBnZXRfc2hpbmluZXNzKCl7cmV0dXJuIHNoaW5pbmVzczt9CnVuaWZvcm0gdmVjMiBjb2xvcnJhbmdlOwp2ZWMyIGdldF9jb2xvcnJhbmdlKCl7cmV0dXJuIGNvbG9ycmFuZ2U7fQp1bmlmb3JtIGJvb2wgY29sb3I7CmJvb2wgZ2V0X2NvbG9yKCl7cmV0dXJuIGNvbG9yO30KdW5pZm9ybSBib29sIHNoYWRpbmc7CmJvb2wgZ2V0X3NoYWRpbmcoKXtyZXR1cm4gc2hhZGluZzt9CnVuaWZvcm0gdmVjNCBsb3djbGlwOwp2ZWM0IGdldF9sb3djbGlwKCl7cmV0dXJuIGxvd2NsaXA7fQoKaW4gdmVjMiBmcmFnX3V2OwppbiB2ZWM0IGZyYWdfY29sb3I7CmZsYXQgaW4gaW50IHNhbXBsZV9mcmFnX2NvbG9yOwoKaW4gdmVjMyBvX25vcm1hbDsKaW4gdmVjMyBvX2NhbWRpcjsKaW4gdmVjMyBvX2xpZ2h0ZGlyOwoKdmVjMyBibGlubnBob25nKHZlYzMgTiwgdmVjMyBWLCB2ZWMzIEwsIHZlYzMgY29sb3IpewogICAgZmxvYXQgZGlmZl9jb2VmZiA9IG1heChkb3QoTCwgTiksIDAuMCk7CgogICAgLy8gc3BlY3VsYXIgY29lZmZpY2llbnQKICAgIHZlYzMgSCA9IG5vcm1hbGl6ZShMICsgVik7CgogICAgZmxvYXQgc3BlY19jb2VmZiA9IHBvdyhtYXgoZG90KEgsIE4pLCAwLjApLCBnZXRfc2hpbmluZXNzKCkpOwogICAgaWYgKGRpZmZfY29lZmYgPD0gMC4wKQogICAgICAgIHNwZWNfY29lZmYgPSAwLjA7CiAgICAvLyBmaW5hbCBsaWdodGluZyBtb2RlbAogICAgcmV0dXJuIHZlYzMoCiAgICAgICAgZ2V0X2RpZmZ1c2UoKSAqIGRpZmZfY29lZmYgKiBjb2xvciArCiAgICAgICAgZ2V0X3NwZWN1bGFyKCkgKiBzcGVjX2NvZWZmCiAgICApOwp9Cgp2ZWM0IGdldF9jb2xvcih2ZWMzIGNvbG9yLCB2ZWMyIHV2LCBib29sIGNvbG9ycmFuZ2UsIGJvb2wgY29sb3JtYXApewogICAgcmV0dXJuIHZlYzQoY29sb3IsIDEuMCk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHZlYzQgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gY29sb3I7Cn0KCnZlYzQgZ2V0X2NvbG9yKGJvb2wgY29sb3IsIHZlYzIgdXYsIGJvb2wgY29sb3JyYW5nZSwgYm9vbCBjb2xvcm1hcCl7CiAgICByZXR1cm4gZnJhZ19jb2xvcjsgIC8vIGNvbG9yIG5vdCBpbiB1bmlmb3JtCn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBib29sIGNvbG9ybWFwKXsKICAgIGlmIChnZXRfcGF0dGVybigpKSB7CiAgICAgICAgdmVjMiBzaXplID0gdmVjMih0ZXh0dXJlU2l6ZShjb2xvciwgMCkpOwogICAgICAgIHZlYzIgcG9zID0gZ2xfRnJhZ0Nvb3JkLnh5OwogICAgICAgIHJldHVybiB0ZXhlbEZldGNoKGNvbG9yLCBpdmVjMihtb2QocG9zLngsIHNpemUueCksIG1vZChwb3MueSwgc2l6ZS55KSksIDApOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGV4dHVyZShjb2xvciwgdXYpOwogICAgfQp9CgpmbG9hdCBfbm9ybWFsaXplKGZsb2F0IHZhbCwgZmxvYXQgZnJvbSwgZmxvYXQgdG8pe3JldHVybiAodmFsLWZyb20pIC8gKHRvIC0gZnJvbSk7fQoKdmVjNCBnZXRfY29sb3JfZnJvbV9jbWFwKGZsb2F0IHZhbHVlLCBzYW1wbGVyMkQgY29sb3JfbWFwLCB2ZWMyIGNvbG9ycmFuZ2UpIHsKICAgIGZsb2F0IGNtaW4gPSBjb2xvcnJhbmdlLng7CiAgICBmbG9hdCBjbWF4ID0gY29sb3JyYW5nZS55OwogICAgaWYgKHZhbHVlIDw9IGNtYXggJiYgdmFsdWUgPj0gY21pbikgewogICAgICAgIC8vIGluIHZhbHVlIHJhbmdlLCBjb250aW51ZSEKICAgIH0gZWxzZSBpZiAodmFsdWUgPCBjbWluKSB7CiAgICAgICAgcmV0dXJuIGdldF9sb3djbGlwKCk7CiAgICB9IGVsc2UgaWYgKHZhbHVlID4gY21heCkgewogICAgICAgIHJldHVybiBnZXRfaGlnaGNsaXAoKTsKICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaXNuYW4gaXMgYnJva2VuIChvZiBjb3Vyc2UpIC0uLQogICAgICAgIC8vIHNvIGlmIG91dHNpZGUgdmFsdWUgcmFuZ2UgYW5kIG5vdCBzbWFsbGVyL2JpZ2dlciBtaW4vbWF4IHdlIGFzc3VtZSBOYU4KICAgICAgICByZXR1cm4gZ2V0X25hbl9jb2xvcigpOwogICAgfQogICAgZmxvYXQgaTAxID0gY2xhbXAoKHZhbHVlIC0gY21pbikgLyAoY21heCAtIGNtaW4pLCAwLjAsIDEuMCk7CiAgICAvLyAxLzAgY29ycmVzcG9uZHMgdG8gdGhlIGNvcm5lciBvZiB0aGUgY29sb3JtYXAsIHNvIHRvIHByb3Blcmx5IGludGVycG9sYXRlCiAgICAvLyBiZXR3ZWVuIHRoZSBjb2xvcnMsIHdlIG5lZWQgdG8gc2NhbGUgaXQsIHNvIHRoYXQgdGhlIGVuZHMgYXJlIGF0IDEgLSAoc3RlcHNpemUvMikgYW5kIDArKHN0ZXBzaXplLzIpLgogICAgZmxvYXQgc3RlcHNpemUgPSAxLjAgLyBmbG9hdCh0ZXh0dXJlU2l6ZShjb2xvcl9tYXAsIDApKTsKICAgIGkwMSA9ICgxLjAgLSBzdGVwc2l6ZSkgKiBpMDEgKyAwLjUgKiBzdGVwc2l6ZTsKICAgIHJldHVybiB0ZXh0dXJlKGNvbG9yX21hcCwgdmVjMihpMDEsIDAuMCkpOwp9Cgp2ZWM0IGdldF9jb2xvcihib29sIGNvbG9yLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBpZiAoZ2V0X2ludGVycG9sYXRlX2luX2ZyYWdtZW50X3NoYWRlcigpKSB7CiAgICAgICAgcmV0dXJuIGdldF9jb2xvcl9mcm9tX2NtYXAoZnJhZ19jb2xvci54LCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmcmFnX2NvbG9yOwogICAgfQp9Cgp2ZWM0IGdldF9jb2xvcihzYW1wbGVyMkQgdmFsdWVzLCB2ZWMyIHV2LCB2ZWMyIGNvbG9ycmFuZ2UsIHNhbXBsZXIyRCBjb2xvcm1hcCl7CiAgICBmbG9hdCB2YWx1ZSA9IHRleHR1cmUodmFsdWVzLCB1dikueDsKICAgIHJldHVybiBnZXRfY29sb3JfZnJvbV9jbWFwKHZhbHVlLCBjb2xvcm1hcCwgY29sb3JyYW5nZSk7Cn0KCnZlYzQgZ2V0X2NvbG9yKHNhbXBsZXIyRCBjb2xvciwgdmVjMiB1diwgYm9vbCBjb2xvcnJhbmdlLCBzYW1wbGVyMkQgY29sb3JtYXApewogICAgcmV0dXJuIHRleHR1cmUoY29sb3IsIHV2KTsKfQoKZmxhdCBpbiB1aW50IGZyYWdfaW5zdGFuY2VfaWQ7CnZlYzQgcGFja19pbnQodWludCBpZCwgdWludCBpbmRleCkgewogICAgdmVjNCB1bnBhY2s7CiAgICB1bnBhY2sueCA9IGZsb2F0KChpZCAmIHVpbnQoMHhmZjAwKSkgPj4gOCkgLyAyNTUuMDsKICAgIHVucGFjay55ID0gZmxvYXQoKGlkICYgdWludCgweDAwZmYpKSA+PiAwKSAvIDI1NS4wOwogICAgdW5wYWNrLnogPSBmbG9hdCgoaW5kZXggJiB1aW50KDB4ZmYwMCkpID4+IDgpIC8gMjU1LjA7CiAgICB1bnBhY2sudyA9IGZsb2F0KChpbmRleCAmIHVpbnQoMHgwMGZmKSkgPj4gMCkgLyAyNTUuMDsKICAgIHJldHVybiB1bnBhY2s7Cn0KCnZvaWQgbWFpbigpIHsKICAgIHZlYzQgcmVhbF9jb2xvciA9IGdldF9jb2xvcih1bmlmb3JtX2NvbG9yLCBmcmFnX3V2LCBnZXRfY29sb3JyYW5nZSgpLCBjb2xvcm1hcCk7CiAgICB2ZWMzIHNoYWRlZF9jb2xvciA9IHJlYWxfY29sb3IucmdiOwoKICAgIGlmKGdldF9zaGFkaW5nKCkpewogICAgICAgIHZlYzMgTCA9IG5vcm1hbGl6ZShvX2xpZ2h0ZGlyKTsKICAgICAgICB2ZWMzIE4gPSBub3JtYWxpemUob19ub3JtYWwpOwogICAgICAgIHZlYzMgbGlnaHQxID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgTCwgcmVhbF9jb2xvci5yZ2IpOwogICAgICAgIHZlYzMgbGlnaHQyID0gYmxpbm5waG9uZyhOLCBvX2NhbWRpciwgLUwsIHJlYWxfY29sb3IucmdiKTsKICAgICAgICBzaGFkZWRfY29sb3IgPSBnZXRfYW1iaWVudCgpICogcmVhbF9jb2xvci5yZ2IgKyBsaWdodDEgKyBnZXRfYmFja2xpZ2h0KCkgKiBsaWdodDI7CiAgICB9CgogICAgaWYgKHBpY2tpbmcpIHsKICAgICAgICBpZiAocmVhbF9jb2xvci5hID4gMC4xKSB7CiAgICAgICAgICAgIGZyYWdtZW50X2NvbG9yID0gcGFja19pbnQob2JqZWN0X2lkLCBmcmFnX2luc3RhbmNlX2lkKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChyZWFsX2NvbG9yLmEgPD0gMC4wKXsKICAgICAgICBkaXNjYXJkOwogICAgfQogICAgZnJhZ21lbnRfY29sb3IgPSB2ZWM0KHNoYWRlZF9jb2xvciwgcmVhbF9jb2xvci5hKTsKfQqvYmFja2dyb3VuZGNvbG9yxxVotDExMjIxNTk3MDE1MTA4NDIxMzI2qXBpeGVsYXJlYccUaLM0OTUwNzgxMTk0Nzg4ODEwNDc2pmNhbWVyYccUaLM2NjE0NDkxODA5MDg1MTAxMzAypHV1aWSzMjUyMzU4ODA5NDAxMTE3ODE5NqtjYW0zZF9zdGF0ZcCqY2xlYXJzY2VuZcKoY2hpbGRyZW6QszUwMjM0MDM0NDkyMzE5OTI0MTLHFGizMTM4MjY2NjY3MzA4MDI3MDM1N7MxMjAyNTk2MDQ1MzI2Nzc2MjE4xxRoszUzMTc0NTE3MDk0NTk0MTcyMDezNjk3NDU0MTgwMTYxMzIyODEyNscUaLMxNzU3MDI5MjE1OTY3NTI1MjA2tDE2NzE5MzY2NzE3NzEzMDc4MzUwxxVotDEwMjgwOTE1MjUyOTU1NTg2NzE32wARrP0oKCkgPT4gewogICAgICAgICAgICBpZiAoIXdpbmRvdy5KU1NFUlZFX0lNUE9SVFMpIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5KU1NFUlZFX0lNUE9SVFMgPSB7fTsKICAgICAgICAgICAgfQogICAgICAgICAgICBKU1NFUlZFX0lNUE9SVFNbJ2NjNGM2YWE2YTFmMDZhMWI1MDEzYmNhMDE3MDJmMzZhMTg0YzA0Mzktd2dsbWFraWUuanMnXSA9IGBkYXRhOmFwcGxpY2F0aW9uL2phdmFzY3JpcHQ7YmFzZTY0LEx5OGdaR1Z1YnkxbWJYUXRhV2R1YjNKbExXWnBiR1VLTHk4Z1pHVnVieTFzYVc1MExXbG5ibTl5WlMxbWFXeGxDaTh2SUZSb2FYTWdZMjlrWlNCM1lYTWdZblZ1Wkd4bFpDQjFjMmx1WnlCZ1pHVnVieUJpZFc1a2JHVmdJR0Z1WkNCcGRDZHpJRzV2ZENCeVpXTnZiVzFsYm1SbFpDQjBieUJsWkdsMElHbDBJRzFoYm5WaGJHeDVDZ3AyWVhJZ1kyRWdQU0FpTVRNMklpd2dSM2tnUFNCN0NpQWdJQ0JNUlVaVU9pQXdMQW9nSUNBZ1RVbEVSRXhGT2lBeExBb2dJQ0FnVWtsSFNGUTZJRElzQ2lBZ0lDQlNUMVJCVkVVNklEQXNDaUFnSUNCRVQweE1XVG9nTVN3S0lDQWdJRkJCVGpvZ01ncDlMQ0JXZVNBOUlIc0tJQ0FnSUZKUFZFRlVSVG9nTUN3S0lDQWdJRkJCVGpvZ01Td0tJQ0FnSUVSUFRFeFpYMUJCVGpvZ01pd0tJQ0FnSUVSUFRFeFpYMUpQVkVGVVJUb2dNd3A5TENCMWRTQTlJREFzSUhSc0lEMGdNU3dnWkhVZ1BTQXlMQ0JYZVNBOUlETXNJSEY1SUQwZ01Dd2dTR01nUFNBeExDQm1kU0E5SURJc0lHbHlJRDBnTXl3Z1FXa2dQU0F3TENCcGRDQTlJREVzSUVOcElEMGdNaXdnYTJNZ1BTQXhMQ0JZZVNBOUlESXNJSFp1SUQwZ01Dd2djM0lnUFNBeExDQnViQ0E5SURJc0lHbHNJRDBnTXl3Z2Ntd2dQU0EwTENCd2RTQTlJRFVzSUY5cElEMGdNVEF3TENCdGRTQTlJREV3TVN3Z1ozVWdQU0F4TURJc0lITnNJRDBnTVRBekxDQnZiQ0E5SURFd05Dd2dlSFVnUFNBeU1EQXNJSGwxSUQwZ01qQXhMQ0IyZFNBOUlESXdNaXdnWDNVZ1BTQXlNRE1zSUVkaklEMGdNakEwTENCV1l5QTlJREl3TlN3Z1RYVWdQU0F5TURZc0lHSjFJRDBnTWpBM0xDQjNkU0E5SURJd09Dd2dVM1VnUFNBeU1Ea3NJRlIxSUQwZ01qRXdMQ0JGZFNBOUlEQXNJRUYxSUQwZ01Td2dRM1VnUFNBeUxDQmxZU0E5SURNc0lFeDFJRDBnTkN3Z1VuVWdQU0ExTENCUWRTQTlJRFlzSUVsMUlEMGdOeXdnVm5NZ1BTQXdMQ0JFZFNBOUlERXNJRVoxSUQwZ01pd2dYMjRnUFNBd0xDQk9kU0E5SURFc0lFSjFJRDBnTWl3Z2VuVWdQU0F6TENCVmRTQTlJRFFzSUU5MUlEMGdOU3dnYUdFZ1BTQXpNREFzSUVKcElEMGdNekF4TENCNmFTQTlJRE13TWl3Z1JITWdQU0F6TURNc0lFWnpJRDBnTXpBMExDQlFjaUE5SURNd05pd2dWM01nUFNBek1EY3NJRTV6SUQwZ01XVXpMQ0IyZENBOUlERXdNREVzSUVKeklEMGdNVEF3TWl3Z2NuUWdQU0F4TURBekxDQjBZU0E5SURFd01EUXNJRXA1SUQwZ01UQXdOQ3dnYm1FZ1BTQXhNREExTENCWmVTQTlJREV3TURVc0lIUjBJRDBnTVRBd05pd2dWMk1nUFNBeE1EQTNMQ0JhZVNBOUlERXdNRGNzSUZWcElEMGdNVEF3T0N3Z0pIa2dQU0F4TURBNExDQnliaUE5SURFd01Ea3NJRWgxSUQwZ01UQXhNQ3dnYTNVZ1BTQXhNREV4TENCamNpQTlJREV3TVRJc0lFZDFJRDBnTVRBeE15d2dVSE1nUFNBeE1ERTBMQ0J1YmlBOUlERXdNVFVzSUd0dUlEMGdNVEF4Tml3Z1ZuVWdQU0F4TURFM0xDQlhkU0E5SURFd01UZ3NJSEYxSUQwZ01UQXhPU3dnVkdrZ1BTQXhNREl3TENCWWRTQTlJREV3TWpFc0lFZHVJRDBnTVRBeU1pd2dZM1FnUFNBeE1ESXpMQ0JLZFNBOUlERXdNalFzSUZsMUlEMGdNVEF5TlN3Z1ZtNGdQU0F4TURJMkxDQk1hU0E5SURFd01qY3NJRnAxSUQwZ01UQXlPQ3dnSkhVZ1BTQXhNREk1TENCcWRTQTlJREV3TXpBc0lGRjFJRDBnTVRBek1Td2dTM1VnUFNBeE1ETXlMQ0JsWkNBOUlERXdNek1zSUdGc0lEMGdNek0zTnpZc0lHeHNJRDBnTXpNM056Y3NJR05zSUQwZ016TTNOemdzSUdoc0lEMGdNek0zTnprc0lIVnNJRDBnTXpVNE5EQXNJR1JzSUQwZ016VTROREVzSUdac0lEMGdNelU0TkRJc0lIQnNJRDBnTXpVNE5ETXNJSFJrSUQwZ016WXhPVFlzSUcxc0lEMGdNemMwT1RJc0lHZHNJRDBnTXpjME9UWXNJRzVrSUQwZ016YzRNRGdzSUdsa0lEMGdNemM0TURrc0lISmtJRDBnTXpjNE1UQXNJSE5rSUQwZ016YzRNVEVzSUc5a0lEMGdNemM0TVRJc0lHRmtJRDBnTXpjNE1UTXNJR3hrSUQwZ016YzRNVFFzSUdOa0lEMGdNemM0TVRVc0lHaGtJRDBnTXpjNE1UWXNJSFZrSUQwZ016YzRNVGNzSUdSa0lEMGdNemM0TVRnc0lHWmtJRDBnTXpjNE1Ua3NJSEJrSUQwZ016YzRNakFzSUcxa0lEMGdNemM0TWpFc0lHZGtJRDBnTXpZME9USXNJSGhrSUQwZ016YzROREFzSUhsa0lEMGdNemM0TkRFc0lIWmtJRDBnTXpjNE5ESXNJRjlrSUQwZ016YzRORE1zSUUxa0lEMGdNemM0TkRRc0lHSmtJRDBnTXpjNE5EVXNJSGRrSUQwZ016YzRORFlzSUZOa0lEMGdNemM0TkRjc0lGUmtJRDBnTXpjNE5EZ3NJRVZrSUQwZ016YzRORGtzSUVGa0lEMGdNemM0TlRBc0lFTmtJRDBnTXpjNE5URXNJRXhrSUQwZ016YzROVElzSUZKa0lEMGdNemM0TlRNc0lGQmtJRDBnTWpJd01Dd2dTV1FnUFNBeU1qQXhMQ0JFWkNBOUlESXlNRElzSUhweklEMGdNak13TUN3Z1ZYTWdQU0F5TXpBeExDQjVieUE5SURJek1ESXNJRTFwSUQwZ01qUXdNQ3dnWW1rZ1BTQXlOREF4TENCUGN5QTlJREkwTURJc0lIVmhJRDBnTWpVd01Dd2djV01nUFNBeU5UQXhMQ0JHWkNBOUlEQXNJR3A1SUQwZ01Td2dVWGtnUFNBeUxDQk9kQ0E5SURObE15d2dUMmtnUFNBek1EQXhMQ0JPWkNBOUlETXlNREFzSUVKa0lEMGdNekl3TVN3Z1NHa2dQU0F3TENCNlpDQTlJREVzSUV0NUlEMGdNQ3dnZG04Z1BTQTNOamd3TENCbE1DQTlJRGMyT0RFc0lIUXdJRDBnTnpZNE1pd2diakFnUFNBM05qZ3pMQ0JwTUNBOUlETTBNRFUxTENCeU1DQTlJRE0wTURVMkxDQnpNQ0E5SURVek9EWXNJRzh3SUQwZ05URXlMQ0JoTUNBOUlEVXhNeXdnYkRBZ1BTQTFNVFFzSUdNd0lEMGdOVEUxTENCb01DQTlJRFV4Tml3Z2RUQWdQU0ExTVRjc0lHUXdJRDBnTlRFNExDQlZaQ0E5SURVeE9Td2dhSElnUFNBek5UQTBOQ3dnZFhJZ1BTQXpOVEEwT0N3Z1pqQWdQU0F6TlRBME1Dd2djREFnUFNBek5UQTBOU3dnYlRBZ1BTQXpOVEEwT1N3Z1p6QWdQU0F6TlRBME1Td2dlREFnUFNBek5UQTBOaXdnZVRBZ1BTQXpOVEExTUN3Z2RqQWdQU0F6TlRBME1pd2dYekFnUFNBaU1UQXdJaXdnZUd3Z1BTQWlNekF3SUdWeklpd2dSVzRnUFNCamJHRnpjeUI3Q2lBZ0lDQmhaR1JGZG1WdWRFeHBjM1JsYm1WeUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDlzYVhOMFpXNWxjbk1nUFQwOUlIWnZhV1FnTUNBbUppQW9kR2hwY3k1ZmJHbHpkR1Z1WlhKeklEMGdlMzBwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWZiR2x6ZEdWdVpYSnpPd29nSUNBZ0lDQWdJRzViWlYwZ1BUMDlJSFp2YVdRZ01DQW1KaUFvYmx0bFhTQTlJRnRkS1N3Z2JsdGxYUzVwYm1SbGVFOW1LSFFwSUQwOVBTQXRNU0FtSmlCdVcyVmRMbkIxYzJnb2RDazdDaUFnSUNCOUNpQWdJQ0JvWVhORmRtVnVkRXhwYzNSbGJtVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWZiR2x6ZEdWdVpYSnpJRDA5UFNCMmIybGtJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYMnhwYzNSbGJtVnljenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibHRsWFNBaFBUMGdkbTlwWkNBd0lDWW1JRzViWlYwdWFXNWtaWGhQWmloMEtTQWhQVDBnTFRFN0NpQWdJQ0I5Q2lBZ0lDQnlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWZiR2x6ZEdWdVpYSnpJRDA5UFNCMmIybGtJREFwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVgyeHBjM1JsYm1WeWMxdGxYVHNLSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2FTNXBibVJsZUU5bUtIUXBPd29nSUNBZ0lDQWdJQ0FnSUNCeUlDRTlQU0F0TVNBbUppQnBMbk53YkdsalpTaHlMQ0F4S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmthWE53WVhSamFFVjJaVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NWZiR2x6ZEdWdVpYSnpJRDA5UFNCMmIybGtJREFwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgyeHBjM1JsYm1WeWMxdGxMblI1Y0dWZE93b2dJQ0FnSUNBZ0lHbG1JQ2h1SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1MFlYSm5aWFFnUFNCMGFHbHpPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc0dWMyeHBZMlVvTUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0JwTG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lscFczSmRMbU5oYkd3b2RHaHBjeXdnWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1ZEdGeVoyVjBJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHNJSEIwSUQwZ1cxMDdDbVp2Y2loc1pYUWdjeUE5SURBN0lITWdQQ0F5TlRZN0lITXJLeWx3ZEZ0elhTQTlJQ2h6SUR3Z01UWWdQeUFpTUNJZ09pQWlJaWtnS3lCekxuUnZVM1J5YVc1bktERTJLVHNLZG1GeUlGWnlJRDBnTVRJek5EVTJOeXdnVjI0Z1BTQk5ZWFJvTGxCSklDOGdNVGd3TENCa2NpQTlJREU0TUNBdklFMWhkR2d1VUVrN0NtWjFibU4wYVc5dUlFVjBLQ2tnZXdvZ0lDQWdiR1YwSUhNZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwSUNvZ05ESTVORGsyTnpJNU5TQjhJREFzSUdVZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwSUNvZ05ESTVORGsyTnpJNU5TQjhJREFzSUhRZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwSUNvZ05ESTVORGsyTnpJNU5TQjhJREFzSUc0Z1BTQk5ZWFJvTG5KaGJtUnZiU2dwSUNvZ05ESTVORGsyTnpJNU5TQjhJREE3Q2lBZ0lDQnlaWFIxY200Z0tIQjBXM01nSmlBeU5UVmRJQ3NnY0hSYmN5QStQaUE0SUNZZ01qVTFYU0FySUhCMFczTWdQajRnTVRZZ0ppQXlOVFZkSUNzZ2NIUmJjeUErUGlBeU5DQW1JREkxTlYwZ0t5QWlMU0lnS3lCd2RGdGxJQ1lnTWpVMVhTQXJJSEIwVzJVZ1BqNGdPQ0FtSURJMU5WMGdLeUFpTFNJZ0t5QndkRnRsSUQ0K0lERTJJQ1lnTVRVZ2ZDQTJORjBnS3lCd2RGdGxJRDQrSURJMElDWWdNalUxWFNBcklDSXRJaUFySUhCMFczUWdKaUEyTXlCOElERXlPRjBnS3lCd2RGdDBJRDQrSURnZ0ppQXlOVFZkSUNzZ0lpMGlJQ3NnY0hSYmRDQStQaUF4TmlBbUlESTFOVjBnS3lCd2RGdDBJRDQrSURJMElDWWdNalUxWFNBcklIQjBXMjRnSmlBeU5UVmRJQ3NnY0hSYmJpQStQaUE0SUNZZ01qVTFYU0FySUhCMFcyNGdQajRnTVRZZ0ppQXlOVFZkSUNzZ2NIUmJiaUErUGlBeU5DQW1JREkxTlYwcExuUnZWWEJ3WlhKRFlYTmxLQ2s3Q24wS1puVnVZM1JwYjI0Z2JYUW9jeXdnWlN3Z2RDa2dld29nSUNBZ2NtVjBkWEp1SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSE1wS1RzS2ZRcG1kVzVqZEdsdmJpQmtZU2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnS0hNZ0pTQmxJQ3NnWlNrZ0pTQmxPd3A5Q21aMWJtTjBhVzl1SUU5a0tITXNJR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJSEpsZEhWeWJpQnVJQ3NnS0hNZ0xTQmxLU0FxSUNocElDMGdiaWtnTHlBb2RDQXRJR1VwT3dwOUNtWjFibU4wYVc5dUlFaGtLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDRTlQU0JsSUQ4Z0tIUWdMU0J6S1NBdklDaGxJQzBnY3lrZ09pQXdPd3A5Q21aMWJtTjBhVzl1SUc5eUtITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUFvTVNBdElIUXBJQ29nY3lBcklIUWdLaUJsT3dwOUNtWjFibU4wYVc5dUlHdGtLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJSEpsZEhWeWJpQnZjaWh6TENCbExDQXhJQzBnVFdGMGFDNWxlSEFvTFhRZ0tpQnVLU2s3Q24wS1puVnVZM1JwYjI0Z1IyUW9jeXdnWlNBOUlERXBJSHNLSUNBZ0lISmxkSFZ5YmlCbElDMGdUV0YwYUM1aFluTW9aR0VvY3l3Z1pTQXFJRElwSUMwZ1pTazdDbjBLWm5WdVkzUnBiMjRnVm1Rb2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nUEQwZ1pTQS9JREFnT2lCeklENDlJSFFnUHlBeElEb2dLSE1nUFNBb2N5QXRJR1VwSUM4Z0tIUWdMU0JsS1N3Z2N5QXFJSE1nS2lBb015QXRJRElnS2lCektTazdDbjBLWm5WdVkzUnBiMjRnVjJRb2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nUEQwZ1pTQS9JREFnT2lCeklENDlJSFFnUHlBeElEb2dLSE1nUFNBb2N5QXRJR1VwSUM4Z0tIUWdMU0JsS1N3Z2N5QXFJSE1nS2lCeklDb2dLSE1nS2lBb2N5QXFJRFlnTFNBeE5Ta2dLeUF4TUNrcE93cDlDbVoxYm1OMGFXOXVJSEZrS0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDc2dUV0YwYUM1bWJHOXZjaWhOWVhSb0xuSmhibVJ2YlNncElDb2dLR1VnTFNCeklDc2dNU2twT3dwOUNtWjFibU4wYVc5dUlGaGtLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJ6SUNzZ1RXRjBhQzV5WVc1a2IyMG9LU0FxSUNobElDMGdjeWs3Q24wS1puVnVZM1JwYjI0Z1NtUW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlITWdLaUFvTGpVZ0xTQk5ZWFJvTG5KaGJtUnZiU2dwS1RzS2ZRcG1kVzVqZEdsdmJpQlpaQ2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaFdjaUE5SUhNZ0pTQXlNVFEzTkRnek5qUTNLU3dnVm5JZ1BTQldjaUFxSURFMk9EQTNJQ1VnTWpFME56UTRNelkwTnl3Z0tGWnlJQzBnTVNrZ0x5QXlNVFEzTkRnek5qUTJPd3A5Q21aMWJtTjBhVzl1SUZwa0tITXBJSHNLSUNBZ0lISmxkSFZ5YmlCeklDb2dWMjQ3Q24wS1puVnVZM1JwYjI0Z0pHUW9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlITWdLaUJrY2pzS2ZRcG1kVzVqZEdsdmJpQnBZU2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdLSE1nSmlCeklDMGdNU2tnUFQwOUlEQWdKaVlnY3lBaFBUMGdNRHNLZlFwbWRXNWpkR2x2YmlCWVl5aHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1RXRjBhQzV3YjNjb01pd2dUV0YwYUM1alpXbHNLRTFoZEdndWJHOW5LSE1wSUM4Z1RXRjBhQzVNVGpJcEtUc0tmUXBtZFc1amRHbHZiaUJLWXloektTQjdDaUFnSUNCeVpYUjFjbTRnVFdGMGFDNXdiM2NvTWl3Z1RXRjBhQzVtYkc5dmNpaE5ZWFJvTG14dlp5aHpLU0F2SUUxaGRHZ3VURTR5S1NrN0NuMEtablZ1WTNScGIyNGdhbVFvY3l3Z1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ2JHVjBJSElnUFNCTllYUm9MbU52Y3l3Z2J5QTlJRTFoZEdndWMybHVMQ0JoSUQwZ2NpaDBJQzhnTWlrc0lHd2dQU0J2S0hRZ0x5QXlLU3dnWXlBOUlISW9LR1VnS3lCdUtTQXZJRElwTENCb0lEMGdieWdvWlNBcklHNHBJQzhnTWlrc0lIVWdQU0J5S0NobElDMGdiaWtnTHlBeUtTd2daQ0E5SUc4b0tHVWdMU0J1S1NBdklESXBMQ0JtSUQwZ2NpZ29iaUF0SUdVcElDOGdNaWtzSUcwZ1BTQnZLQ2h1SUMwZ1pTa2dMeUF5S1RzS0lDQWdJSE4zYVhSamFDaHBLWHNLSUNBZ0lDQWdJQ0JqWVhObElDSllXVmdpT2dvZ0lDQWdJQ0FnSUNBZ0lDQnpMbk5sZENoaElDb2dhQ3dnYkNBcUlIVXNJR3dnS2lCa0xDQmhJQ29nWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnSWxsYVdTSTZDaUFnSUNBZ0lDQWdJQ0FnSUhNdWMyVjBLR3dnS2lCa0xDQmhJQ29nYUN3Z2JDQXFJSFVzSUdFZ0tpQmpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQWlXbGhhSWpvS0lDQWdJQ0FnSUNBZ0lDQWdjeTV6WlhRb2JDQXFJSFVzSUd3Z0tpQmtMQ0JoSUNvZ2FDd2dZU0FxSUdNcE93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdsZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNCekxuTmxkQ2hoSUNvZ2FDd2diQ0FxSUcwc0lHd2dLaUJtTENCaElDb2dZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdJbGxZV1NJNkNpQWdJQ0FnSUNBZ0lDQWdJSE11YzJWMEtHd2dLaUJtTENCaElDb2dhQ3dnYkNBcUlHMHNJR0VnS2lCaktUc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdZMkZ6WlNBaVdsbGFJam9LSUNBZ0lDQWdJQ0FnSUNBZ2N5NXpaWFFvYkNBcUlHMHNJR3dnS2lCbUxDQmhJQ29nYUN3Z1lTQXFJR01wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEdoVmRHbHNjem9nTG5ObGRGRjFZWFJsY201cGIyNUdjbTl0VUhKdmNHVnlSWFZzWlhJb0tTQmxibU52ZFc1MFpYSmxaQ0JoYmlCMWJtdHViM2R1SUc5eVpHVnlPaUFpSUNzZ2FTazdDaUFnSUNCOUNuMEtkbUZ5SUUwd0lEMGdUMkpxWldOMExtWnlaV1Y2WlNoN0NpQWdJQ0JmWDNCeWIzUnZYMTg2SUc1MWJHd3NDaUFnSUNCRVJVY3lVa0ZFT2lCWGJpd0tJQ0FnSUZKQlJESkVSVWM2SUdSeUxBb2dJQ0FnWjJWdVpYSmhkR1ZWVlVsRU9pQkZkQ3dLSUNBZ0lHTnNZVzF3T2lCdGRDd0tJQ0FnSUdWMVkyeHBaR1ZoYmsxdlpIVnNiem9nWkdFc0NpQWdJQ0J0WVhCTWFXNWxZWEk2SUU5a0xBb2dJQ0FnYVc1MlpYSnpaVXhsY25BNklFaGtMQW9nSUNBZ2JHVnljRG9nYjNJc0NpQWdJQ0JrWVcxd09pQnJaQ3dLSUNBZ0lIQnBibWR3YjI1bk9pQkhaQ3dLSUNBZ0lITnRiMjkwYUhOMFpYQTZJRlprTEFvZ0lDQWdjMjF2YjNSb1pYSnpkR1Z3T2lCWFpDd0tJQ0FnSUhKaGJtUkpiblE2SUhGa0xBb2dJQ0FnY21GdVpFWnNiMkYwT2lCWVpDd0tJQ0FnSUhKaGJtUkdiRzloZEZOd2NtVmhaRG9nU21Rc0NpQWdJQ0J6WldWa1pXUlNZVzVrYjIwNklGbGtMQW9nSUNBZ1pHVm5WRzlTWVdRNklGcGtMQW9nSUNBZ2NtRmtWRzlFWldjNklDUmtMQW9nSUNBZ2FYTlFiM2RsY2s5bVZIZHZPaUJwWVN3S0lDQWdJR05sYVd4UWIzZGxjazltVkhkdk9pQllZeXdLSUNBZ0lHWnNiMjl5VUc5M1pYSlBabFIzYnpvZ1NtTXNDaUFnSUNCelpYUlJkV0YwWlhKdWFXOXVSbkp2YlZCeWIzQmxja1YxYkdWeU9pQnFaQXA5S1N3Z1dDQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F3TENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ2REc0tJQ0FnSUgwS0lDQWdJR2RsZENCM2FXUjBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIZHBaSFJvS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5nZ1BTQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHaGxhV2RvZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU1T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJR2hsYVdkb2RDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTVJRDBnWlRzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExDQjBhR2x6TG5rZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwV0NobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU1SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRU52YlhCdmJtVnVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjM2RwZEdOb0tHVXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuZ2dQU0IwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWVTQTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lhVzVrWlhnZ2FYTWdiM1YwSUc5bUlISmhibWRsT2lBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUTI5dGNHOXVaVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuZ3NJSFJvYVhNdWVTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0TENCMGFHbHpMbmtnUFNCbExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmhaR1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBJQ0U5UFNCMmIybGtJREFnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJeU9pQXVZV1JrS0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdVlXUmtWbVZqZEc5eWN5Z2dZU3dnWWlBcElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdVlXUmtWbVZqZEc5eWN5aGxMQ0IwS1NrZ09pQW9kR2hwY3k1NElDczlJR1V1ZUN3Z2RHaHBjeTU1SUNzOUlHVXVlU3dnZEdocGN5azdDaUFnSUNCOUNpQWdJQ0JoWkdSVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ1pTd2dkR2hwY3k1NUlDczlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSV1pXTjBiM0p6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaUzU0SUNzZ2RDNTRMQ0IwYUdsekxua2dQU0JsTG5rZ0t5QjBMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSVFkyRnNaV1JXWldOMGIzSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS3owZ1pTNTRJQ29nZEN3Z2RHaHBjeTU1SUNzOUlHVXVlU0FxSUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDRTlQU0IyYjJsa0lEQWdQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l5T2lBdWMzVmlLQ2tnYm05M0lHOXViSGtnWVdOalpYQjBjeUJ2Ym1VZ1lYSm5kVzFsYm5RdUlGVnpaU0F1YzNWaVZtVmpkRzl5Y3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YzNWaVZtVmpkRzl5Y3lobExDQjBLU2tnT2lBb2RHaHBjeTU0SUMwOUlHVXVlQ3dnZEdocGN5NTVJQzA5SUdVdWVTd2dkR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dMVDBnWlN3Z2RHaHBjeTU1SUMwOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQzBnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnTFNCMExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRkV3gwYVhCc2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFQU0JsTG5nc0lIUm9hWE11ZVNBcVBTQmxMbmtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQXFQU0JsTENCMGFHbHpMbmtnS2owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBkbWxrWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBdlBTQmxMbmdzSUhSb2FYTXVlU0F2UFNCbExua3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmthWFpwWkdWVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTExYkhScGNHeDVVMk5oYkdGeUtERWdMeUJsS1RzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDRNeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbmdzSUc0Z1BTQjBhR2x6TG5rc0lHa2dQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JwV3pCZElDb2dkQ0FySUdsYk0xMGdLaUJ1SUNzZ2FWczJYU3dnZEdocGN5NTVJRDBnYVZzeFhTQXFJSFFnS3lCcFd6UmRJQ29nYmlBcklHbGJOMTBzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0YVc0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xcGJpaDBhR2x6TG5nc0lHVXVlQ2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV2x1S0hSb2FYTXVlU3dnWlM1NUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMWhlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3ViV0Y0S0hSb2FYTXVlQ3dnWlM1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1dFlYZ29kR2hwY3k1NUxDQmxMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCTllYUm9MbTFoZUNobExuZ3NJRTFoZEdndWJXbHVLSFF1ZUN3Z2RHaHBjeTU0S1Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1YldGNEtHVXVlU3dnVFdGMGFDNXRhVzRvZEM1NUxDQjBhR2x6TG5rcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNZVzF3VTJOaGJHRnlLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV0WVhnb1pTd2dUV0YwYUM1dGFXNG9kQ3dnZEdocGN5NTRLU2tzSUhSb2FYTXVlU0E5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWVTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCTVpXNW5kR2dvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1c1pXNW5kR2dvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvYmlCOGZDQXhLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaE5ZWFJvTG0xaGVDaGxMQ0JOWVhSb0xtMXBiaWgwTENCdUtTa3BPd29nSUNBZ2ZRb2dJQ0FnWm14dmIzSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNW1iRzl2Y2loMGFHbHpMbmtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJWcGJDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1alpXbHNLSFJvYVhNdWVDa3NJSFJvYVhNdWVTQTlJRTFoZEdndVkyVnBiQ2gwYUdsekxua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkxYm1Rb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Y205MWJtUW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1eWIzVnVaQ2gwYUdsekxua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkxYm1SVWIxcGxjbThvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUhSb2FYTXVlQ0E4SURBZ1B5Qk5ZWFJvTG1ObGFXd29kR2hwY3k1NEtTQTZJRTFoZEdndVpteHZiM0lvZEdocGN5NTRLU3dnZEdocGN5NTVJRDBnZEdocGN5NTVJRHdnTUNBL0lFMWhkR2d1WTJWcGJDaDBhR2x6TG5rcElEb2dUV0YwYUM1bWJHOXZjaWgwYUdsekxua3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdibVZuWVhSbEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQXRkR2hwY3k1NExDQjBhR2x6TG5rZ1BTQXRkR2hwY3k1NUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pHOTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ29nWlM1NElDc2dkR2hwY3k1NUlDb2daUzU1T3dvZ0lDQWdmUW9nSUNBZ1kzSnZjM01vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2lCbExua2dMU0IwYUdsekxua2dLaUJsTG5nN0NpQWdJQ0I5Q2lBZ0lDQnNaVzVuZEdoVGNTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDb2dkR2hwY3k1NElDc2dkR2hwY3k1NUlDb2dkR2hwY3k1NU93b2dJQ0FnZlFvZ0lDQWdiR1Z1WjNSb0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQk5ZWFJvTG5OeGNuUW9kR2hwY3k1NElDb2dkR2hwY3k1NElDc2dkR2hwY3k1NUlDb2dkR2hwY3k1NUtUc0tJQ0FnSUgwS0lDQWdJRzFoYm1oaGRIUmhia3hsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9kR2hwY3k1NEtTQXJJRTFoZEdndVlXSnpLSFJvYVhNdWVTazdDaUFnSUNCOUNpQWdJQ0J1YjNKdFlXeHBlbVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR2wyYVdSbFUyTmhiR0Z5S0hSb2FYTXViR1Z1WjNSb0tDa2dmSHdnTVNrN0NpQWdJQ0I5Q2lBZ0lDQmhibWRzWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoZEdGdU1pZ3RkR2hwY3k1NUxDQXRkR2hwY3k1NEtTQXJJRTFoZEdndVVFazdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzV6Y1hKMEtIUm9hWE11WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrcE93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NTRJQzBnWlM1NExDQnVJRDBnZEdocGN5NTVJQzBnWlM1NU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDb2dkQ0FySUc0Z0tpQnVPd29nSUNBZ2ZRb2dJQ0FnYldGdWFHRjBkR0Z1UkdsemRHRnVZMlZVYnlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1WVdKektIUm9hWE11ZUNBdElHVXVlQ2tnS3lCTllYUm9MbUZpY3loMGFHbHpMbmtnTFNCbExua3BPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHVnVaM1JvS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV1YjNKdFlXeHBlbVVvS1M1dGRXeDBhWEJzZVZOallXeGhjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeGxjbkFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ0t6MGdLR1V1ZUNBdElIUm9hWE11ZUNrZ0tpQjBMQ0IwYUdsekxua2dLejBnS0dVdWVTQXRJSFJvYVhNdWVTa2dLaUIwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYkdWeWNGWmxZM1J2Y25Nb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ2dLeUFvZEM1NElDMGdaUzU0S1NBcUlHNHNJSFJvYVhNdWVTQTlJR1V1ZVNBcklDaDBMbmtnTFNCbExua3BJQ29nYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdWeGRXRnNjeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdWVDQTlQVDBnZEdocGN5NTRJQ1ltSUdVdWVTQTlQVDBnZEdocGN5NTVPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVRnljbUY1S0dVc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdWYmRGMHNJSFJvYVhNdWVTQTlJR1ZiZENBcklERmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlCY25KaGVTaGxJRDBnVzEwc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYmRGMGdQU0IwYUdsekxuZ3NJR1ZiZENBcklERmRJRDBnZEdocGN5NTVMQ0JsT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdJVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsWmxZM1J2Y2pJNklHOW1abk5sZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrSUdaeWIyMGdMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1M0aUtTd2dkR2hwY3k1NElEMGdaUzVuWlhSWUtIUXBMQ0IwYUdsekxua2dQU0JsTG1kbGRGa29kQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5YjNSaGRHVkJjbTkxYm1Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnVFdGMGFDNWpiM01vZENrc0lHa2dQU0JOWVhSb0xuTnBiaWgwS1N3Z2NpQTlJSFJvYVhNdWVDQXRJR1V1ZUN3Z2J5QTlJSFJvYVhNdWVTQXRJR1V1ZVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnY2lBcUlHNGdMU0J2SUNvZ2FTQXJJR1V1ZUN3Z2RHaHBjeTU1SUQwZ2NpQXFJR2tnS3lCdklDb2diaUFySUdVdWVTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISmhibVJ2YlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV5WVc1a2IyMG9LU3dnZEdocGN5NTVJRDBnVFdGMGFDNXlZVzVrYjIwb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lDcGJVM2x0WW05c0xtbDBaWEpoZEc5eVhTZ3BJSHNLSUNBZ0lDQWdJQ0I1YVdWc1pDQjBhR2x6TG5nc0lIbHBaV3hrSUhSb2FYTXVlVHNLSUNBZ0lIMEtmVHNLV0M1d2NtOTBiM1I1Y0dVdWFYTldaV04wYjNJeUlEMGdJVEE3Q25aaGNpQnNkQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWxiR1Z0Wlc1MGN5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNUW9nSUNBZ0lDQWdJRjBzSUdGeVozVnRaVzUwY3k1c1pXNW5kR2dnUGlBd0lDWW1JR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxaGRISnBlRE02SUhSb1pTQmpiMjV6ZEhKMVkzUnZjaUJ1YnlCc2IyNW5aWElnY21WaFpITWdZWEpuZFcxbGJuUnpMaUIxYzJVZ0xuTmxkQ2dwSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnZEdocGN5NWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FGc3dYU0E5SUdVc0lHaGJNVjBnUFNCcExDQm9XekpkSUQwZ1lTd2dhRnN6WFNBOUlIUXNJR2hiTkYwZ1BTQnlMQ0JvV3pWZElEMGdiQ3dnYUZzMlhTQTlJRzRzSUdoYk4xMGdQU0J2TENCb1d6aGRJRDBnWXl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdsa1pXNTBhWFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENneExDQXdMQ0F3TENBd0xDQXhMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYk1GMGdQU0J1V3pCZExDQjBXekZkSUQwZ2Jsc3hYU3dnZEZzeVhTQTlJRzViTWwwc0lIUmJNMTBnUFNCdVd6TmRMQ0IwV3pSZElEMGdibHMwWFN3Z2RGczFYU0E5SUc1Yk5WMHNJSFJiTmwwZ1BTQnVXelpkTENCMFd6ZGRJRDBnYmxzM1hTd2dkRnM0WFNBOUlHNWJPRjBzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhSeVlXTjBRbUZ6YVhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuTmxkRVp5YjIxTllYUnlhWGd6UTI5c2RXMXVLSFJvYVhNc0lEQXBMQ0IwTG5ObGRFWnliMjFOWVhSeWFYZ3pRMjlzZFcxdUtIUm9hWE1zSURFcExDQnVMbk5sZEVaeWIyMU5ZWFJ5YVhnelEyOXNkVzF1S0hSb2FYTXNJRElwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVTFoZEhKcGVEUW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvZEZzd1hTd2dkRnMwWFN3Z2RGczRYU3dnZEZzeFhTd2dkRnMxWFN3Z2RGczVYU3dnZEZzeVhTd2dkRnMyWFN3Z2RGc3hNRjBwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTExYkhScGNHeDVUV0YwY21salpYTW9kR2hwY3l3Z1pTazdDaUFnSUNCOUNpQWdJQ0J3Y21WdGRXeDBhWEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhsTENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1VFdGMGNtbGpaWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzVsYkdWdFpXNTBjeXdnYVNBOUlIUXVaV3hsYldWdWRITXNJSElnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0J2SUQwZ2Jsc3dYU3dnWVNBOUlHNWJNMTBzSUd3Z1BTQnVXelpkTENCaklEMGdibHN4WFN3Z2FDQTlJRzViTkYwc0lIVWdQU0J1V3pkZExDQmtJRDBnYmxzeVhTd2daaUE5SUc1Yk5WMHNJRzBnUFNCdVd6aGRMQ0I0SUQwZ2FWc3dYU3dnZGlBOUlHbGJNMTBzSUdjZ1BTQnBXelpkTENCd0lEMGdhVnN4WFN3Z1h5QTlJR2xiTkYwc0lIa2dQU0JwV3pkZExDQmlJRDBnYVZzeVhTd2dRU0E5SUdsYk5WMHNJRXdnUFNCcFd6aGRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlXekJkSUQwZ2J5QXFJSGdnS3lCaElDb2djQ0FySUd3Z0tpQmlMQ0J5V3pOZElEMGdieUFxSUhZZ0t5QmhJQ29nWHlBcklHd2dLaUJCTENCeVd6WmRJRDBnYnlBcUlHY2dLeUJoSUNvZ2VTQXJJR3dnS2lCTUxDQnlXekZkSUQwZ1l5QXFJSGdnS3lCb0lDb2djQ0FySUhVZ0tpQmlMQ0J5V3pSZElEMGdZeUFxSUhZZ0t5Qm9JQ29nWHlBcklIVWdLaUJCTENCeVd6ZGRJRDBnWXlBcUlHY2dLeUJvSUNvZ2VTQXJJSFVnS2lCTUxDQnlXekpkSUQwZ1pDQXFJSGdnS3lCbUlDb2djQ0FySUcwZ0tpQmlMQ0J5V3pWZElEMGdaQ0FxSUhZZ0t5Qm1JQ29nWHlBcklHMGdLaUJCTENCeVd6aGRJRDBnWkNBcUlHY2dLeUJtSUNvZ2VTQXJJRzBnS2lCTUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3YkhsVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRnN3WFNBcVBTQmxMQ0IwV3pOZElDbzlJR1VzSUhSYk5sMGdLajBnWlN3Z2RGc3hYU0FxUFNCbExDQjBXelJkSUNvOUlHVXNJSFJiTjEwZ0tqMGdaU3dnZEZzeVhTQXFQU0JsTENCMFd6VmRJQ285SUdVc0lIUmJPRjBnS2owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUmxkR1Z5YldsdVlXNTBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2dkQ0E5SUdWYk1GMHNJRzRnUFNCbFd6RmRMQ0JwSUQwZ1pWc3lYU3dnY2lBOUlHVmJNMTBzSUc4Z1BTQmxXelJkTENCaElEMGdaVnMxWFN3Z2JDQTlJR1ZiTmwwc0lHTWdQU0JsV3pkZExDQm9JRDBnWlZzNFhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQXFJRzhnS2lCb0lDMGdkQ0FxSUdFZ0tpQmpJQzBnYmlBcUlISWdLaUJvSUNzZ2JpQXFJR0VnS2lCc0lDc2dhU0FxSUhJZ0tpQmpJQzBnYVNBcUlHOGdLaUJzT3dvZ0lDQWdmUW9nSUNBZ2FXNTJaWEowS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnZENBOUlHVmJNRjBzSUc0Z1BTQmxXekZkTENCcElEMGdaVnN5WFN3Z2NpQTlJR1ZiTTEwc0lHOGdQU0JsV3pSZExDQmhJRDBnWlZzMVhTd2diQ0E5SUdWYk5sMHNJR01nUFNCbFd6ZGRMQ0JvSUQwZ1pWczRYU3dnZFNBOUlHZ2dLaUJ2SUMwZ1lTQXFJR01zSUdRZ1BTQmhJQ29nYkNBdElHZ2dLaUJ5TENCbUlEMGdZeUFxSUhJZ0xTQnZJQ29nYkN3Z2JTQTlJSFFnS2lCMUlDc2diaUFxSUdRZ0t5QnBJQ29nWmpzS0lDQWdJQ0FnSUNCcFppQW9iU0E5UFQwZ01Da2djbVYwZFhKdUlIUm9hWE11YzJWMEtEQXNJREFzSURBc0lEQXNJREFzSURBc0lEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ01TQXZJRzA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiTUYwZ1BTQjFJQ29nZUN3Z1pWc3hYU0E5SUNocElDb2dZeUF0SUdnZ0tpQnVLU0FxSUhnc0lHVmJNbDBnUFNBb1lTQXFJRzRnTFNCcElDb2dieWtnS2lCNExDQmxXek5kSUQwZ1pDQXFJSGdzSUdWYk5GMGdQU0FvYUNBcUlIUWdMU0JwSUNvZ2JDa2dLaUI0TENCbFd6VmRJRDBnS0drZ0tpQnlJQzBnWVNBcUlIUXBJQ29nZUN3Z1pWczJYU0E5SUdZZ0tpQjRMQ0JsV3pkZElEMGdLRzRnS2lCc0lDMGdZeUFxSUhRcElDb2dlQ3dnWlZzNFhTQTlJQ2h2SUNvZ2RDQXRJRzRnS2lCeUtTQXFJSGdzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwY21GdWMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VzSUhRZ1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwZ2RGc3hYU3dnZEZzeFhTQTlJSFJiTTEwc0lIUmJNMTBnUFNCbExDQmxJRDBnZEZzeVhTd2dkRnN5WFNBOUlIUmJObDBzSUhSYk5sMGdQU0JsTENCbElEMGdkRnMxWFN3Z2RGczFYU0E5SUhSYk4xMHNJSFJiTjEwZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwVG05eWJXRnNUV0YwY21sNEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUkdjbTl0VFdGMGNtbDROQ2hsS1M1cGJuWmxjblFvS1M1MGNtRnVjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emNHOXpaVWx1ZEc5QmNuSmhlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXekJkSUQwZ2RGc3dYU3dnWlZzeFhTQTlJSFJiTTEwc0lHVmJNbDBnUFNCMFd6WmRMQ0JsV3pOZElEMGdkRnN4WFN3Z1pWczBYU0E5SUhSYk5GMHNJR1ZiTlYwZ1BTQjBXemRkTENCbFd6WmRJRDBnZEZzeVhTd2daVnMzWFNBOUlIUmJOVjBzSUdWYk9GMGdQU0IwV3poZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBWWFpVY21GdWMyWnZjbTBvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1RXRjBhQzVqYjNNb2Npa3NJR01nUFNCTllYUm9Mbk5wYmloeUtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb2JpQXFJR3dzSUc0Z0tpQmpMQ0F0YmlBcUlDaHNJQ29nYnlBcklHTWdLaUJoS1NBcklHOGdLeUJsTENBdGFTQXFJR01zSUdrZ0tpQnNMQ0F0YVNBcUlDZ3RZeUFxSUc4Z0t5QnNJQ29nWVNrZ0t5QmhJQ3NnZEN3Z01Dd2dNQ3dnTVNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelkyRnNaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1V3pCZElDbzlJR1VzSUc1Yk0xMGdLajBnWlN3Z2JsczJYU0FxUFNCbExDQnVXekZkSUNvOUlIUXNJRzViTkYwZ0tqMGdkQ3dnYmxzM1hTQXFQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUUxaGRHZ3VZMjl6S0dVcExDQnVJRDBnVFdGMGFDNXphVzRvWlNrc0lHa2dQU0IwYUdsekxtVnNaVzFsYm5SekxDQnlJRDBnYVZzd1hTd2dieUE5SUdsYk0xMHNJR0VnUFNCcFd6WmRMQ0JzSUQwZ2FWc3hYU3dnWXlBOUlHbGJORjBzSUdnZ1BTQnBXemRkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJwV3pCZElEMGdkQ0FxSUhJZ0t5QnVJQ29nYkN3Z2FWc3pYU0E5SUhRZ0tpQnZJQ3NnYmlBcUlHTXNJR2xiTmwwZ1BTQjBJQ29nWVNBcklHNGdLaUJvTENCcFd6RmRJRDBnTFc0Z0tpQnlJQ3NnZENBcUlHd3NJR2xiTkYwZ1BTQXRiaUFxSUc4Z0t5QjBJQ29nWXl3Z2FWczNYU0E5SUMxdUlDb2dZU0FySUhRZ0tpQm9MQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Oc1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzViTUYwZ0t6MGdaU0FxSUc1Yk1sMHNJRzViTTEwZ0t6MGdaU0FxSUc1Yk5WMHNJRzViTmwwZ0t6MGdaU0FxSUc1Yk9GMHNJRzViTVYwZ0t6MGdkQ0FxSUc1Yk1sMHNJRzViTkYwZ0t6MGdkQ0FxSUc1Yk5WMHNJRzViTjEwZ0t6MGdkQ0FxSUc1Yk9GMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxjWFZoYkhNb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Ec2dhU0E4SURrN0lHa3JLeWxwWmlBb2RGdHBYU0FoUFQwZ2JsdHBYU2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUFoTURzS0lDQWdJSDBLSUNBZ0lHWnliMjFCY25KaGVTaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0E1T3lCdUt5c3BkR2hwY3k1bGJHVnRaVzUwYzF0dVhTQTlJR1ZiYmlBcklIUmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtVnNaVzFsYm5Sek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFczUmRJRDBnYmxzd1hTd2daVnQwSUNzZ01WMGdQU0J1V3pGZExDQmxXM1FnS3lBeVhTQTlJRzViTWwwc0lHVmJkQ0FySUROZElEMGdibHN6WFN3Z1pWdDBJQ3NnTkYwZ1BTQnVXelJkTENCbFczUWdLeUExWFNBOUlHNWJOVjBzSUdWYmRDQXJJRFpkSUQwZ2JsczJYU3dnWlZ0MElDc2dOMTBnUFNCdVd6ZGRMQ0JsVzNRZ0t5QTRYU0E5SUc1Yk9GMHNJR1U3Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNW1jbTl0UVhKeVlYa29kR2hwY3k1bGJHVnRaVzUwY3lrN0NpQWdJQ0I5Q24wN0NteDBMbkJ5YjNSdmRIbHdaUzVwYzAxaGRISnBlRE1nUFNBaE1Ec0tablZ1WTNScGIyNGdXV01vY3lrZ2V3b2dJQ0FnYVdZZ0tITXViR1Z1WjNSb0lEMDlQU0F3S1NCeVpYUjFjbTRnTFRFZ0x5QXdPd29nSUNBZ2JHVjBJR1VnUFNCeld6QmRPd29nSUNBZ1ptOXlLR3hsZENCMElEMGdNU3dnYmlBOUlITXViR1Z1WjNSb095QjBJRHdnYmpzZ0t5dDBLWE5iZEYwZ1BpQmxJQ1ltSUNobElEMGdjMXQwWFNrN0NpQWdJQ0J5WlhSMWNtNGdaVHNLZlFwMllYSWdVV1FnUFNCN0NpQWdJQ0JKYm5RNFFYSnlZWGtzQ2lBZ0lDQlZhVzUwT0VGeWNtRjVMQW9nSUNBZ1ZXbHVkRGhEYkdGdGNHVmtRWEp5WVhrc0NpQWdJQ0JKYm5ReE5rRnljbUY1TEFvZ0lDQWdWV2x1ZERFMlFYSnlZWGtzQ2lBZ0lDQkpiblF6TWtGeWNtRjVMQW9nSUNBZ1ZXbHVkRE15UVhKeVlYa3NDaUFnSUNCR2JHOWhkRE15UVhKeVlYa3NDaUFnSUNCR2JHOWhkRFkwUVhKeVlYa0tmVHNLWm5WdVkzUnBiMjRnZDJrb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHNWxkeUJSWkZ0elhTaGxLVHNLZlFwbWRXNWpkR2x2YmlCeGN5aHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkRTVUS0NKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eE9UazVMM2hvZEcxc0lpd2djeWs3Q24wS2RtRnlJSFJwTENCWmJpQTlJR05zWVhOeklIc0tJQ0FnSUhOMFlYUnBZeUJuWlhSRVlYUmhWVkpNS0dVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvTDE1a1lYUmhPaTlwTG5SbGMzUW9aUzV6Y21NcElIeDhJSFI1Y0dWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQStJQ0oxSWlrZ2NtVjBkWEp1SUdVdWMzSmpPd29nSUNBZ0lDQWdJR3hsZENCME93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUdsdWMzUmhibU5sYjJZZ1NGUk5URU5oYm5aaGMwVnNaVzFsYm5RcElIUWdQU0JsT3dvZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCMGFTQTlQVDBnZG05cFpDQXdJQ1ltSUNoMGFTQTlJSEZ6S0NKallXNTJZWE1pS1Nrc0lIUnBMbmRwWkhSb0lEMGdaUzUzYVdSMGFDd2dkR2t1YUdWcFoyaDBJRDBnWlM1b1pXbG5hSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHa3VaMlYwUTI5dWRHVjRkQ2dpTW1RaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlNCcGJuTjBZVzVqWlc5bUlFbHRZV2RsUkdGMFlTQS9JRzR1Y0hWMFNXMWhaMlZFWVhSaEtHVXNJREFzSURBcElEb2diaTVrY21GM1NXMWhaMlVvWlN3Z01Dd2dNQ3dnWlM1M2FXUjBhQ3dnWlM1b1pXbG5hSFFwTENCMElEMGdkR2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG5kcFpIUm9JRDRnTWpBME9DQjhmQ0IwTG1obGFXZG9kQ0ErSURJd05EZ2dQeUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVlYwYVd4ekxtZGxkRVJoZEdGVlVrdzZJRWx0WVdkbElHTnZiblpsY25SbFpDQjBieUJxY0djZ1ptOXlJSEJsY21admNtMWhibU5sSUhKbFlYTnZibk1pTENCbEtTd2dkQzUwYjBSaGRHRlZVa3dvSW1sdFlXZGxMMnB3WldjaUxDQXVOaWtwSURvZ2RDNTBiMFJoZEdGVlVrd29JbWx0WVdkbEwzQnVaeUlwT3dvZ0lDQWdmUXA5TENCTFpDQTlJREFzSUc5MElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYjNRdVJFVkdRVlZNVkY5SlRVRkhSU3dnZENBOUlHOTBMa1JGUmtGVlRGUmZUVUZRVUVsT1J5d2diaUE5SUhaMExDQnBJRDBnZG5Rc0lISWdQU0IwZEN3Z2J5QTlJRlZwTENCaElEMGdZM1FzSUd3Z1BTQnliaXdnWXlBOUlERXNJR2dnUFNCT2RDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkSGtvZEdocGN5d2dJbWxrSWl3Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dTMlFyS3dvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG5WMWFXUWdQU0JGZENncExDQjBhR2x6TG01aGJXVWdQU0FpSWl3Z2RHaHBjeTVwYldGblpTQTlJR1VzSUhSb2FYTXViV2x3YldGd2N5QTlJRnRkTENCMGFHbHpMbTFoY0hCcGJtY2dQU0IwTENCMGFHbHpMbmR5WVhCVElEMGdiaXdnZEdocGN5NTNjbUZ3VkNBOUlHa3NJSFJvYVhNdWJXRm5SbWxzZEdWeUlEMGdjaXdnZEdocGN5NXRhVzVHYVd4MFpYSWdQU0J2TENCMGFHbHpMbUZ1YVhOdmRISnZjSGtnUFNCakxDQjBhR2x6TG1admNtMWhkQ0E5SUdFc0lIUm9hWE11YVc1MFpYSnVZV3hHYjNKdFlYUWdQU0J1ZFd4c0xDQjBhR2x6TG5SNWNHVWdQU0JzTENCMGFHbHpMbTltWm5ObGRDQTlJRzVsZHlCWUtEQXNJREFwTENCMGFHbHpMbkpsY0dWaGRDQTlJRzVsZHlCWUtERXNJREVwTENCMGFHbHpMbU5sYm5SbGNpQTlJRzVsZHlCWUtEQXNJREFwTENCMGFHbHpMbkp2ZEdGMGFXOXVJRDBnTUN3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11YldGMGNtbDRJRDBnYm1WM0lHeDBMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXdMQ0IwYUdsekxuQnlaVzExYkhScGNHeDVRV3h3YUdFZ1BTQWhNU3dnZEdocGN5NW1iR2x3V1NBOUlDRXdMQ0IwYUdsekxuVnVjR0ZqYTBGc2FXZHViV1Z1ZENBOUlEUXNJSFJvYVhNdVpXNWpiMlJwYm1jZ1BTQm9MQ0IwYUdsekxuVnpaWEpFWVhSaElEMGdlMzBzSUhSb2FYTXVkbVZ5YzJsdmJpQTlJREFzSUhSb2FYTXViMjVWY0dSaGRHVWdQU0J1ZFd4c0xDQjBhR2x6TG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0YwY21sNExuTmxkRlYyVkhKaGJuTm1iM0p0S0hSb2FYTXViMlptYzJWMExuZ3NJSFJvYVhNdWIyWm1jMlYwTG5rc0lIUm9hWE11Y21Wd1pXRjBMbmdzSUhSb2FYTXVjbVZ3WldGMExua3NJSFJvYVhNdWNtOTBZWFJwYjI0c0lIUm9hWE11WTJWdWRHVnlMbmdzSUhSb2FYTXVZMlZ1ZEdWeUxua3BPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01aGJXVWdQU0JsTG01aGJXVXNJSFJvYVhNdWFXMWhaMlVnUFNCbExtbHRZV2RsTENCMGFHbHpMbTFwY0cxaGNITWdQU0JsTG0xcGNHMWhjSE11YzJ4cFkyVW9NQ2tzSUhSb2FYTXViV0Z3Y0dsdVp5QTlJR1V1YldGd2NHbHVaeXdnZEdocGN5NTNjbUZ3VXlBOUlHVXVkM0poY0ZNc0lIUm9hWE11ZDNKaGNGUWdQU0JsTG5keVlYQlVMQ0IwYUdsekxtMWhaMFpwYkhSbGNpQTlJR1V1YldGblJtbHNkR1Z5TENCMGFHbHpMbTFwYmtacGJIUmxjaUE5SUdVdWJXbHVSbWxzZEdWeUxDQjBhR2x6TG1GdWFYTnZkSEp2Y0hrZ1BTQmxMbUZ1YVhOdmRISnZjSGtzSUhSb2FYTXVabTl5YldGMElEMGdaUzVtYjNKdFlYUXNJSFJvYVhNdWFXNTBaWEp1WVd4R2IzSnRZWFFnUFNCbExtbHVkR1Z5Ym1Gc1JtOXliV0YwTENCMGFHbHpMblI1Y0dVZ1BTQmxMblI1Y0dVc0lIUm9hWE11YjJabWMyVjBMbU52Y0hrb1pTNXZabVp6WlhRcExDQjBhR2x6TG5KbGNHVmhkQzVqYjNCNUtHVXVjbVZ3WldGMEtTd2dkR2hwY3k1alpXNTBaWEl1WTI5d2VTaGxMbU5sYm5SbGNpa3NJSFJvYVhNdWNtOTBZWFJwYjI0Z1BTQmxMbkp2ZEdGMGFXOXVMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQmxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVXNJSFJvYVhNdWJXRjBjbWw0TG1OdmNIa29aUzV0WVhSeWFYZ3BMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlHVXVaMlZ1WlhKaGRHVk5hWEJ0WVhCekxDQjBhR2x6TG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VnUFNCbExuQnlaVzExYkhScGNHeDVRV3h3YUdFc0lIUm9hWE11Wm14cGNGa2dQU0JsTG1ac2FYQlpMQ0IwYUdsekxuVnVjR0ZqYTBGc2FXZHViV1Z1ZENBOUlHVXVkVzV3WVdOclFXeHBaMjV0Wlc1MExDQjBhR2x6TG1WdVkyOWthVzVuSUQwZ1pTNWxibU52WkdsdVp5d2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb1pTNTFjMlZ5UkdGMFlTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1VnUFQwOUlIWnZhV1FnTUNCOGZDQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JanNLSUNBZ0lDQWdJQ0JwWmlBb0lYUWdKaVlnWlM1MFpYaDBkWEpsYzF0MGFHbHpMblYxYVdSZElDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQmxMblJsZUhSMWNtVnpXM1JvYVhNdWRYVnBaRjA3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHMWxkR0ZrWVhSaE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEp6YVc5dU9pQTBMalVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlWR1Y0ZEhWeVpTSXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm5aVzVsY21GMGIzSTZJQ0pVWlhoMGRYSmxMblJ2U2xOUFRpSUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdkWFZwWkRvZ2RHaHBjeTUxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQjBhR2x6TG01aGJXVXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaGNIQnBibWM2SUhSb2FYTXViV0Z3Y0dsdVp5d0tJQ0FnSUNBZ0lDQWdJQ0FnY21Wd1pXRjBPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuSmxjR1ZoZEM1NExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV5WlhCbFlYUXVlUW9nSUNBZ0lDQWdJQ0FnSUNCZExBb2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUTZJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWIyWm1jMlYwTG5nc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbTltWm5ObGRDNTVDaUFnSUNBZ0lDQWdJQ0FnSUYwc0NpQWdJQ0FnSUNBZ0lDQWdJR05sYm5SbGNqb2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1alpXNTBaWEl1ZUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMlZ1ZEdWeUxua0tJQ0FnSUNBZ0lDQWdJQ0FnWFN3S0lDQWdJQ0FnSUNBZ0lDQWdjbTkwWVhScGIyNDZJSFJvYVhNdWNtOTBZWFJwYjI0c0NpQWdJQ0FnSUNBZ0lDQWdJSGR5WVhBNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11ZDNKaGNGTXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5keVlYQlVDaUFnSUNBZ0lDQWdJQ0FnSUYwc0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y20xaGREb2dkR2hwY3k1bWIzSnRZWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhSb2FYTXVkSGx3WlN3S0lDQWdJQ0FnSUNBZ0lDQWdaVzVqYjJScGJtYzZJSFJvYVhNdVpXNWpiMlJwYm1jc0NpQWdJQ0FnSUNBZ0lDQWdJRzFwYmtacGJIUmxjam9nZEdocGN5NXRhVzVHYVd4MFpYSXNDaUFnSUNBZ0lDQWdJQ0FnSUcxaFowWnBiSFJsY2pvZ2RHaHBjeTV0WVdkR2FXeDBaWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lHRnVhWE52ZEhKdmNIazZJSFJvYVhNdVlXNXBjMjkwY205d2VTd0tJQ0FnSUNBZ0lDQWdJQ0FnWm14cGNGazZJSFJvYVhNdVpteHBjRmtzQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaVzExYkhScGNHeDVRV3h3YUdFNklIUm9hWE11Y0hKbGJYVnNkR2x3YkhsQmJIQm9ZU3dLSUNBZ0lDQWdJQ0FnSUNBZ2RXNXdZV05yUVd4cFoyNXRaVzUwT2lCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVhVzFoWjJVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVhVzFoWjJVN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocExuVjFhV1FnUFQwOUlIWnZhV1FnTUNBbUppQW9hUzUxZFdsa0lEMGdSWFFvS1Nrc0lDRjBJQ1ltSUdVdWFXMWhaMlZ6VzJrdWRYVnBaRjBnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hwS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSElnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd0xDQmhJRDBnYVM1c1pXNW5kR2c3SUc4Z1BDQmhPeUJ2S3lzcGFWdHZYUzVwYzBSaGRHRlVaWGgwZFhKbElEOGdjaTV3ZFhOb0tGOXZLR2xiYjEwdWFXMWhaMlVwS1NBNklISXVjSFZ6YUNoZmJ5aHBXMjlkS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnY2lBOUlGOXZLR2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlM1cGJXRm5aWE5iYVM1MWRXbGtYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFkV2xrT2lCcExuVjFhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RYSnNPaUJ5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUc0dWFXMWhaMlVnUFNCcExuVjFhV1E3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUJLVTA5T0xuTjBjbWx1WjJsbWVTaDBhR2x6TG5WelpYSkVZWFJoS1NBaFBUMGdJbnQ5SWlBbUppQW9iaTUxYzJWeVJHRjBZU0E5SUhSb2FYTXVkWE5sY2tSaGRHRXBMQ0IwSUh4OElDaGxMblJsZUhSMWNtVnpXM1JvYVhNdWRYVnBaRjBnUFNCdUtTd2dianNLSUNBZ0lIMEtJQ0FnSUdScGMzQnZjMlVvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbVJwYzNCdmMyVWlDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjMlp2Y20xVmRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YldGd2NHbHVaeUFoUFQwZ2FHRXBJSEpsZEhWeWJpQmxPd29nSUNBZ0lDQWdJR2xtSUNobExtRndjR3g1VFdGMGNtbDRNeWgwYUdsekxtMWhkSEpwZUNrc0lHVXVlQ0E4SURBZ2ZId2daUzU0SUQ0Z01Ta2djM2RwZEdOb0tIUm9hWE11ZDNKaGNGTXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRTV6T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlM1NElEMGdaUzU0SUMwZ1RXRjBhQzVtYkc5dmNpaGxMbmdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdkblE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsTG5nZ1BTQmxMbmdnUENBd0lEOGdNQ0E2SURFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JDY3pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUUxaGRHZ3VZV0p6S0UxaGRHZ3VabXh2YjNJb1pTNTRLU0FsSURJcElEMDlQU0F4SUQ4Z1pTNTRJRDBnVFdGMGFDNWpaV2xzS0dVdWVDa2dMU0JsTG5nZ09pQmxMbmdnUFNCbExuZ2dMU0JOWVhSb0xtWnNiMjl5S0dVdWVDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1V1ZVNBOElEQWdmSHdnWlM1NUlENGdNU2tnYzNkcGRHTm9LSFJvYVhNdWQzSmhjRlFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUU1ek9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNTVJRDBnWlM1NUlDMGdUV0YwYUM1bWJHOXZjaWhsTG5rcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnZG5RNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbExua2dQU0JsTG5rZ1BDQXdJRDhnTUNBNklERTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCQ2N6b0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFMWhkR2d1WVdKektFMWhkR2d1Wm14dmIzSW9aUzU1S1NBbElESXBJRDA5UFNBeElEOGdaUzU1SUQwZ1RXRjBhQzVqWldsc0tHVXVlU2tnTFNCbExua2dPaUJsTG5rZ1BTQmxMbmtnTFNCTllYUm9MbVpzYjI5eUtHVXVlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Wm14cGNGa2dKaVlnS0dVdWVTQTlJREVnTFNCbExua3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ2MyVjBJRzVsWldSelZYQmtZWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQmxJRDA5UFNBaE1DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt6c0tJQ0FnSUgwS2ZUc0tiM1F1UkVWR1FWVk1WRjlKVFVGSFJTQTlJSFp2YVdRZ01Ec0tiM1F1UkVWR1FWVk1WRjlOUVZCUVNVNUhJRDBnYUdFN0NtOTBMbkJ5YjNSdmRIbHdaUzVwYzFSbGVIUjFjbVVnUFNBaE1Ec0tablZ1WTNScGIyNGdYMjhvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSFI1Y0dWdlppQklWRTFNU1cxaFoyVkZiR1Z0Wlc1MElEd2dJblVpSUNZbUlITWdhVzV6ZEdGdVkyVnZaaUJJVkUxTVNXMWhaMlZGYkdWdFpXNTBJSHg4SUhSNWNHVnZaaUJJVkUxTVEyRnVkbUZ6Uld4bGJXVnVkQ0E4SUNKMUlpQW1KaUJ6SUdsdWMzUmhibU5sYjJZZ1NGUk5URU5oYm5aaGMwVnNaVzFsYm5RZ2ZId2dkSGx3Wlc5bUlFbHRZV2RsUW1sMGJXRndJRHdnSW5VaUlDWW1JSE1nYVc1emRHRnVZMlZ2WmlCSmJXRm5aVUpwZEcxaGNDQS9JRmx1TG1kbGRFUmhkR0ZWVWt3b2N5a2dPaUJ6TG1SaGRHRWdQeUI3Q2lBZ0lDQWdJQ0FnWkdGMFlUb2dRWEp5WVhrdWNISnZkRzkwZVhCbExuTnNhV05sTG1OaGJHd29jeTVrWVhSaEtTd0tJQ0FnSUNBZ0lDQjNhV1IwYURvZ2N5NTNhV1IwYUN3S0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhNdWFHVnBaMmgwTEFvZ0lDQWdJQ0FnSUhSNWNHVTZJSE11WkdGMFlTNWpiMjV6ZEhKMVkzUnZjaTV1WVcxbENpQWdJQ0I5SURvZ0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWR1Y0ZEhWeVpUb2dWVzVoWW14bElIUnZJSE5sY21saGJHbDZaU0JVWlhoMGRYSmxMaUlwTENCN2ZTazdDbjBLZG1GeUlGWmxJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURBc0lIUWdQU0F3TENCdUlEMGdNQ3dnYVNBOUlERXBld29nSUNBZ0lDQWdJSFJvYVhNdWVDQTlJR1VzSUhSb2FYTXVlU0E5SUhRc0lIUm9hWE11ZWlBOUlHNHNJSFJvYVhNdWR5QTlJR2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdkMmxrZEdnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZWpzS0lDQWdJSDBLSUNBZ0lITmxkQ0IzYVdSMGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NTZJRDBnWlRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0JvWldsbmFIUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWR6c0tJQ0FnSUgwS0lDQWdJSE5sZENCb1pXbG5hSFFvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZHlBOUlHVTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0IwTENCMGFHbHpMbm9nUFNCdUxDQjBhR2x6TG5jZ1BTQnBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlN3Z2RHaHBjeTU1SUQwZ1pTd2dkR2hwY3k1NklEMGdaU3dnZEdocGN5NTNJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVTQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSYUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZjb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5jZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUTI5dGNHOXVaVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVlQ0E5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F4T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NTVJRDBnZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJREk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxub2dQU0IwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWR5QTlJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lhVzVrWlhnZ2FYTWdiM1YwSUc5bUlISmhibWRsT2lBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdaMlYwUTI5dGNHOXVaVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnpkMmwwWTJnb1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbms3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxubzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5jN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ltbHVaR1Y0SUdseklHOTFkQ0J2WmlCeVlXNW5aVG9nSWlBcklHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2loMGFHbHpMbmdzSUhSb2FYTXVlU3dnZEdocGN5NTZMQ0IwYUdsekxuY3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1V1ZUN3Z2RHaHBjeTU1SUQwZ1pTNTVMQ0IwYUdsekxub2dQU0JsTG5vc0lIUm9hWE11ZHlBOUlHVXVkeUFoUFQwZ2RtOXBaQ0F3SUQ4Z1pTNTNJRG9nTVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJSFp2YVdRZ01DQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjalE2SUM1aFpHUW9LU0J1YjNjZ2IyNXNlU0JoWTJObGNIUnpJRzl1WlNCaGNtZDFiV1Z1ZEM0Z1ZYTmxJQzVoWkdSV1pXTjBiM0p6S0NCaExDQmlJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTVoWkdSV1pXTjBiM0p6S0dVc0lIUXBLU0E2SUNoMGFHbHpMbmdnS3owZ1pTNTRMQ0IwYUdsekxua2dLejBnWlM1NUxDQjBhR2x6TG5vZ0t6MGdaUzU2TENCMGFHbHpMbmNnS3owZ1pTNTNMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJR0ZrWkZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0FyUFNCbExDQjBhR2x6TG5rZ0t6MGdaU3dnZEdocGN5NTZJQ3M5SUdVc0lIUm9hWE11ZHlBclBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV1JrVm1WamRHOXljeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXVlQ0FySUhRdWVDd2dkR2hwY3k1NUlEMGdaUzU1SUNzZ2RDNTVMQ0IwYUdsekxub2dQU0JsTG5vZ0t5QjBMbm9zSUhSb2FYTXVkeUE5SUdVdWR5QXJJSFF1ZHl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pGTmpZV3hsWkZabFkzUnZjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBclBTQmxMbmdnS2lCMExDQjBhR2x6TG5rZ0t6MGdaUzU1SUNvZ2RDd2dkR2hwY3k1NklDczlJR1V1ZWlBcUlIUXNJSFJvYVhNdWR5QXJQU0JsTG5jZ0tpQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1ZpS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU5Eb2dMbk4xWWlncElHNXZkeUJ2Ym14NUlHRmpZMlZ3ZEhNZ2IyNWxJR0Z5WjNWdFpXNTBMaUJWYzJVZ0xuTjFZbFpsWTNSdmNuTW9JR0VzSUdJZ0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxuTjFZbFpsWTNSdmNuTW9aU3dnZENrcElEb2dLSFJvYVhNdWVDQXRQU0JsTG5nc0lIUm9hWE11ZVNBdFBTQmxMbmtzSUhSb2FYTXVlaUF0UFNCbExub3NJSFJvYVhNdWR5QXRQU0JsTG5jc0lIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2MzVmlVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDMDlJR1VzSUhSb2FYTXVlU0F0UFNCbExDQjBhR2x6TG5vZ0xUMGdaU3dnZEdocGN5NTNJQzA5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCemRXSldaV04wYjNKektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDMGdkQzU0TENCMGFHbHpMbmtnUFNCbExua2dMU0IwTG5rc0lIUm9hWE11ZWlBOUlHVXVlaUF0SUhRdWVpd2dkR2hwY3k1M0lEMGdaUzUzSUMwZ2RDNTNMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiWFZzZEdsd2JIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLajBnWlM1NExDQjBhR2x6TG5rZ0tqMGdaUzU1TENCMGFHbHpMbm9nS2owZ1pTNTZMQ0IwYUdsekxuY2dLajBnWlM1M0xDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JYVnNkR2x3YkhsVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2owZ1pTd2dkR2hwY3k1NUlDbzlJR1VzSUhSb2FYTXVlaUFxUFNCbExDQjBhR2x6TG5jZ0tqMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5nc0lHNGdQU0IwYUdsekxua3NJR2tnUFNCMGFHbHpMbm9zSUhJZ1BTQjBhR2x6TG5jc0lHOGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0J2V3pCZElDb2dkQ0FySUc5Yk5GMGdLaUJ1SUNzZ2IxczRYU0FxSUdrZ0t5QnZXekV5WFNBcUlISXNJSFJvYVhNdWVTQTlJRzliTVYwZ0tpQjBJQ3NnYjFzMVhTQXFJRzRnS3lCdld6bGRJQ29nYVNBcklHOWJNVE5kSUNvZ2Npd2dkR2hwY3k1NklEMGdiMXN5WFNBcUlIUWdLeUJ2V3paZElDb2diaUFySUc5Yk1UQmRJQ29nYVNBcklHOWJNVFJkSUNvZ2Npd2dkR2hwY3k1M0lEMGdiMXN6WFNBcUlIUWdLeUJ2V3pkZElDb2diaUFySUc5Yk1URmRJQ29nYVNBcklHOWJNVFZkSUNvZ2Npd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBkbWxrWlZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbFRZMkZzWVhJb01TQXZJR1VwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBRWGhwYzBGdVoyeGxSbkp2YlZGMVlYUmxjbTVwYjI0b1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWR5QTlJRElnS2lCTllYUm9MbUZqYjNNb1pTNTNLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRTFoZEdndWMzRnlkQ2d4SUMwZ1pTNTNJQ29nWlM1M0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQThJREZsTFRRZ1B5QW9kR2hwY3k1NElEMGdNU3dnZEdocGN5NTVJRDBnTUN3Z2RHaHBjeTU2SUQwZ01Da2dPaUFvZEdocGN5NTRJRDBnWlM1NElDOGdkQ3dnZEdocGN5NTVJRDBnWlM1NUlDOGdkQ3dnZEdocGN5NTZJRDBnWlM1NklDOGdkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSQmVHbHpRVzVuYkdWR2NtOXRVbTkwWVhScGIyNU5ZWFJ5YVhnb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMExDQnVMQ0JwTENCeUxDQnNJRDBnWlM1bGJHVnRaVzUwY3l3Z1l5QTlJR3hiTUYwc0lHZ2dQU0JzV3pSZExDQjFJRDBnYkZzNFhTd2daQ0E5SUd4Yk1WMHNJR1lnUFNCc1d6VmRMQ0J0SUQwZ2JGczVYU3dnZUNBOUlHeGJNbDBzSUhZZ1BTQnNXelpkTENCbklEMGdiRnN4TUYwN0NpQWdJQ0FnSUNBZ2FXWWdLRTFoZEdndVlXSnpLR2dnTFNCa0tTQThJQzR3TVNBbUppQk5ZWFJvTG1GaWN5aDFJQzBnZUNrZ1BDQXVNREVnSmlZZ1RXRjBhQzVoWW5Nb2JTQXRJSFlwSUR3Z0xqQXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hOWVhSb0xtRmljeWhvSUNzZ1pDa2dQQ0F1TVNBbUppQk5ZWFJvTG1GaWN5aDFJQ3NnZUNrZ1BDQXVNU0FtSmlCTllYUm9MbUZpY3lodElDc2dkaWtnUENBdU1TQW1KaUJOWVhSb0xtRmljeWhqSUNzZ1ppQXJJR2NnTFNBektTQThJQzR4S1NCeVpYUjFjbTRnZEdocGN5NXpaWFFvTVN3Z01Dd2dNQ3dnTUNrc0lIUm9hWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0JOWVhSb0xsQkpPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUNoaklDc2dNU2tnTHlBeUxDQjVJRDBnS0dZZ0t5QXhLU0F2SURJc0lHSWdQU0FvWnlBcklERXBJQzhnTWl3Z1FTQTlJQ2hvSUNzZ1pDa2dMeUEwTENCTUlEMGdLSFVnS3lCNEtTQXZJRFFzSUVrZ1BTQW9iU0FySUhZcElDOGdORHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUY4Z1BpQjVJQ1ltSUY4Z1BpQmlJRDhnWHlBOElDNHdNU0EvSUNodUlEMGdNQ3dnYVNBOUlDNDNNRGN4TURZM09ERXNJSElnUFNBdU56QTNNVEEyTnpneEtTQTZJQ2h1SUQwZ1RXRjBhQzV6Y1hKMEtGOHBMQ0JwSUQwZ1FTQXZJRzRzSUhJZ1BTQk1JQzhnYmlrZ09pQjVJRDRnWWlBL0lIa2dQQ0F1TURFZ1B5QW9iaUE5SUM0M01EY3hNRFkzT0RFc0lHa2dQU0F3TENCeUlEMGdMamN3TnpFd05qYzRNU2tnT2lBb2FTQTlJRTFoZEdndWMzRnlkQ2g1S1N3Z2JpQTlJRUVnTHlCcExDQnlJRDBnU1NBdklHa3BJRG9nWWlBOElDNHdNU0EvSUNodUlEMGdMamN3TnpFd05qYzRNU3dnYVNBOUlDNDNNRGN4TURZM09ERXNJSElnUFNBd0tTQTZJQ2h5SUQwZ1RXRjBhQzV6Y1hKMEtHSXBMQ0J1SUQwZ1RDQXZJSElzSUdrZ1BTQkpJQzhnY2lrc0lIUm9hWE11YzJWMEtHNHNJR2tzSUhJc0lIUXBMQ0IwYUdsek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnY0NBOUlFMWhkR2d1YzNGeWRDZ29kaUF0SUcwcElDb2dLSFlnTFNCdEtTQXJJQ2gxSUMwZ2VDa2dLaUFvZFNBdElIZ3BJQ3NnS0dRZ0xTQm9LU0FxSUNoa0lDMGdhQ2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRmljeWh3S1NBOElDNHdNREVnSmlZZ0tIQWdQU0F4S1N3Z2RHaHBjeTU0SUQwZ0tIWWdMU0J0S1NBdklIQXNJSFJvYVhNdWVTQTlJQ2gxSUMwZ2VDa2dMeUJ3TENCMGFHbHpMbm9nUFNBb1pDQXRJR2dwSUM4Z2NDd2dkR2hwY3k1M0lEMGdUV0YwYUM1aFkyOXpLQ2hqSUNzZ1ppQXJJR2NnTFNBeEtTQXZJRElwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldsdUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1dGFXNG9kR2hwY3k1NExDQmxMbmdwTENCMGFHbHpMbmtnUFNCTllYUm9MbTFwYmloMGFHbHpMbmtzSUdVdWVTa3NJSFJvYVhNdWVpQTlJRTFoZEdndWJXbHVLSFJvYVhNdWVpd2daUzU2S1N3Z2RHaHBjeTUzSUQwZ1RXRjBhQzV0YVc0b2RHaHBjeTUzTENCbExuY3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0Y0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV0WVhnb2RHaHBjeTU0TENCbExuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtMWhlQ2gwYUdsekxua3NJR1V1ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1YldGNEtIUm9hWE11ZWl3Z1pTNTZLU3dnZEdocGN5NTNJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTNMQ0JsTG5jcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeGhiWEFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG0xaGVDaGxMbmdzSUUxaGRHZ3ViV2x1S0hRdWVDd2dkR2hwY3k1NEtTa3NJSFJvYVhNdWVTQTlJRTFoZEdndWJXRjRLR1V1ZVN3Z1RXRjBhQzV0YVc0b2RDNTVMQ0IwYUdsekxua3BLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvWlM1NkxDQk5ZWFJvTG0xcGJpaDBMbm9zSUhSb2FYTXVlaWtwTENCMGFHbHpMbmNnUFNCTllYUm9MbTFoZUNobExuY3NJRTFoZEdndWJXbHVLSFF1ZHl3Z2RHaHBjeTUzS1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHRnRjRk5qWVd4aGNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3ViV0Y0S0dVc0lFMWhkR2d1YldsdUtIUXNJSFJvYVhNdWVDa3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQjBhR2x6TG5rcEtTd2dkR2hwY3k1NklEMGdUV0YwYUM1dFlYZ29aU3dnVFdGMGFDNXRhVzRvZEN3Z2RHaHBjeTU2S1Nrc0lIUm9hWE11ZHlBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVkeWtwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4aGJYQk1aVzVuZEdnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXNaVzVuZEdnb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrYVhacFpHVlRZMkZzWVhJb2JpQjhmQ0F4S1M1dGRXeDBhWEJzZVZOallXeGhjaWhOWVhSb0xtMWhlQ2hsTENCTllYUm9MbTFwYmloMExDQnVLU2twT3dvZ0lDQWdmUW9nSUNBZ1pteHZiM0lvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU0S1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzVtYkc5dmNpaDBhR2x6TG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG1ac2IyOXlLSFJvYVhNdWVpa3NJSFJvYVhNdWR5QTlJRTFoZEdndVpteHZiM0lvZEdocGN5NTNLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05sYVd3b0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1WTJWcGJDaDBhR2x6TG5ncExDQjBhR2x6TG5rZ1BTQk5ZWFJvTG1ObGFXd29kR2hwY3k1NUtTd2dkR2hwY3k1NklEMGdUV0YwYUM1alpXbHNLSFJvYVhNdWVpa3NJSFJvYVhNdWR5QTlJRTFoZEdndVkyVnBiQ2gwYUdsekxuY3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkxYm1Rb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1Y205MWJtUW9kR2hwY3k1NEtTd2dkR2hwY3k1NUlEMGdUV0YwYUM1eWIzVnVaQ2gwYUdsekxua3BMQ0IwYUdsekxub2dQU0JOWVhSb0xuSnZkVzVrS0hSb2FYTXVlaWtzSUhSb2FYTXVkeUE5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTUzS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKdmRXNWtWRzlhWlhKdktDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQjBhR2x6TG5nZ1BDQXdJRDhnVFdGMGFDNWpaV2xzS0hSb2FYTXVlQ2tnT2lCTllYUm9MbVpzYjI5eUtIUm9hWE11ZUNrc0lIUm9hWE11ZVNBOUlIUm9hWE11ZVNBOElEQWdQeUJOWVhSb0xtTmxhV3dvZEdocGN5NTVLU0E2SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU1S1N3Z2RHaHBjeTU2SUQwZ2RHaHBjeTU2SUR3Z01DQS9JRTFoZEdndVkyVnBiQ2gwYUdsekxub3BJRG9nVFdGMGFDNW1iRzl2Y2loMGFHbHpMbm9wTENCMGFHbHpMbmNnUFNCMGFHbHpMbmNnUENBd0lEOGdUV0YwYUM1alpXbHNLSFJvYVhNdWR5a2dPaUJOWVhSb0xtWnNiMjl5S0hSb2FYTXVkeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J1WldkaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJQzEwYUdsekxuZ3NJSFJvYVhNdWVTQTlJQzEwYUdsekxua3NJSFJvYVhNdWVpQTlJQzEwYUdsekxub3NJSFJvYVhNdWR5QTlJQzEwYUdsekxuY3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmtiM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnS2lCbExuZ2dLeUIwYUdsekxua2dLaUJsTG5rZ0t5QjBhR2x6TG5vZ0tpQmxMbm9nS3lCMGFHbHpMbmNnS2lCbExuYzdDaUFnSUNCOUNpQWdJQ0JzWlc1bmRHaFRjU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ29nZEdocGN5NTRJQ3NnZEdocGN5NTVJQ29nZEdocGN5NTVJQ3NnZEdocGN5NTZJQ29nZEdocGN5NTZJQ3NnZEdocGN5NTNJQ29nZEdocGN5NTNPd29nSUNBZ2ZRb2dJQ0FnYkdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xuTnhjblFvZEdocGN5NTRJQ29nZEdocGN5NTRJQ3NnZEdocGN5NTVJQ29nZEdocGN5NTVJQ3NnZEdocGN5NTZJQ29nZEdocGN5NTZJQ3NnZEdocGN5NTNJQ29nZEdocGN5NTNLVHNLSUNBZ0lIMEtJQ0FnSUcxaGJtaGhkSFJoYmt4bGJtZDBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZbk1vZEdocGN5NTRLU0FySUUxaGRHZ3VZV0p6S0hSb2FYTXVlU2tnS3lCTllYUm9MbUZpY3loMGFHbHpMbm9wSUNzZ1RXRjBhQzVoWW5Nb2RHaHBjeTUzS1RzS0lDQWdJSDBLSUNBZ0lHNXZjbTFoYkdsNlpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYWnBaR1ZUWTJGc1lYSW9kR2hwY3k1c1pXNW5kR2dvS1NCOGZDQXhLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFeGxibWQwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNhWHBsS0NrdWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNaWEp3S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElDczlJQ2hsTG5nZ0xTQjBhR2x6TG5ncElDb2dkQ3dnZEdocGN5NTVJQ3M5SUNobExua2dMU0IwYUdsekxua3BJQ29nZEN3Z2RHaHBjeTU2SUNzOUlDaGxMbm9nTFNCMGFHbHpMbm9wSUNvZ2RDd2dkR2hwY3k1M0lDczlJQ2hsTG5jZ0xTQjBhR2x6TG5jcElDb2dkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3hsY25CV1pXTjBiM0p6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDc2dLSFF1ZUNBdElHVXVlQ2tnS2lCdUxDQjBhR2x6TG5rZ1BTQmxMbmtnS3lBb2RDNTVJQzBnWlM1NUtTQXFJRzRzSUhSb2FYTXVlaUE5SUdVdWVpQXJJQ2gwTG5vZ0xTQmxMbm9wSUNvZ2Jpd2dkR2hwY3k1M0lEMGdaUzUzSUNzZ0tIUXVkeUF0SUdVdWR5a2dLaUJ1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1NElEMDlQU0IwYUdsekxuZ2dKaVlnWlM1NUlEMDlQU0IwYUdsekxua2dKaVlnWlM1NklEMDlQU0IwYUdsekxub2dKaVlnWlM1M0lEMDlQU0IwYUdsekxuYzdDaUFnSUNCOUNpQWdJQ0JtY205dFFYSnlZWGtvWlN3Z2RDQTlJREFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlZ0MFhTd2dkR2hwY3k1NUlEMGdaVnQwSUNzZ01WMHNJSFJvYVhNdWVpQTlJR1ZiZENBcklESmRMQ0IwYUdsekxuY2dQU0JsVzNRZ0t5QXpYU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2UVhKeVlYa29aU0E5SUZ0ZExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFczUmRJRDBnZEdocGN5NTRMQ0JsVzNRZ0t5QXhYU0E5SUhSb2FYTXVlU3dnWlZ0MElDc2dNbDBnUFNCMGFHbHpMbm9zSUdWYmRDQXJJRE5kSUQwZ2RHaHBjeTUzTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnSVQwOUlIWnZhV1FnTUNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFpsWTNSdmNqUTZJRzltWm5ObGRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0lHWnliMjBnTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTNGlLU3dnZEdocGN5NTRJRDBnWlM1blpYUllLSFFwTENCMGFHbHpMbmtnUFNCbExtZGxkRmtvZENrc0lIUm9hWE11ZWlBOUlHVXVaMlYwV2loMEtTd2dkR2hwY3k1M0lEMGdaUzVuWlhSWEtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbUZ1Wkc5dEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpMbmtnUFNCTllYUm9MbkpoYm1SdmJTZ3BMQ0IwYUdsekxub2dQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBhR2x6TG5jZ1BTQk5ZWFJvTG5KaGJtUnZiU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnS2x0VGVXMWliMnd1YVhSbGNtRjBiM0pkS0NrZ2V3b2dJQ0FnSUNBZ0lIbHBaV3hrSUhSb2FYTXVlQ3dnZVdsbGJHUWdkR2hwY3k1NUxDQjVhV1ZzWkNCMGFHbHpMbm9zSUhscFpXeGtJSFJvYVhNdWR6c0tJQ0FnSUgwS2ZUc0tWbVV1Y0hKdmRHOTBlWEJsTG1selZtVmpkRzl5TkNBOUlDRXdPd3AyWVhJZ1FYUWdQU0JqYkdGemN5QmxlSFJsYm1SeklFVnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNGdQU0I3ZlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbmRwWkhSb0lEMGdaU3dnZEdocGN5NW9aV2xuYUhRZ1BTQjBMQ0IwYUdsekxtUmxjSFJvSUQwZ01Td2dkR2hwY3k1elkybHpjMjl5SUQwZ2JtVjNJRlpsS0RBc0lEQXNJR1VzSUhRcExDQjBhR2x6TG5OamFYTnpiM0pVWlhOMElEMGdJVEVzSUhSb2FYTXVkbWxsZDNCdmNuUWdQU0J1WlhjZ1ZtVW9NQ3dnTUN3Z1pTd2dkQ2tzSUhSb2FYTXVkR1Y0ZEhWeVpTQTlJRzVsZHlCdmRDaDJiMmxrSURBc0lHNHViV0Z3Y0dsdVp5d2diaTUzY21Gd1V5d2diaTUzY21Gd1ZDd2diaTV0WVdkR2FXeDBaWElzSUc0dWJXbHVSbWxzZEdWeUxDQnVMbVp2Y20xaGRDd2diaTUwZVhCbExDQnVMbUZ1YVhOdmRISnZjSGtzSUc0dVpXNWpiMlJwYm1jcExDQjBhR2x6TG5SbGVIUjFjbVV1YVhOU1pXNWtaWEpVWVhKblpYUlVaWGgwZFhKbElEMGdJVEFzSUhSb2FYTXVkR1Y0ZEhWeVpTNXBiV0ZuWlNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHZzZJREVLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMblJsZUhSMWNtVXVaMlZ1WlhKaGRHVk5hWEJ0WVhCeklEMGdiaTVuWlc1bGNtRjBaVTFwY0cxaGNITWdJVDA5SUhadmFXUWdNQ0EvSUc0dVoyVnVaWEpoZEdWTmFYQnRZWEJ6SURvZ0lURXNJSFJvYVhNdWRHVjRkSFZ5WlM1cGJuUmxjbTVoYkVadmNtMWhkQ0E5SUc0dWFXNTBaWEp1WVd4R2IzSnRZWFFnSVQwOUlIWnZhV1FnTUNBL0lHNHVhVzUwWlhKdVlXeEdiM0p0WVhRZ09pQnVkV3hzTENCMGFHbHpMblJsZUhSMWNtVXViV2x1Um1sc2RHVnlJRDBnYmk1dGFXNUdhV3gwWlhJZ0lUMDlJSFp2YVdRZ01DQS9JRzR1YldsdVJtbHNkR1Z5SURvZ2RIUXNJSFJvYVhNdVpHVndkR2hDZFdabVpYSWdQU0J1TG1SbGNIUm9RblZtWm1WeUlDRTlQU0IyYjJsa0lEQWdQeUJ1TG1SbGNIUm9RblZtWm1WeUlEb2dJVEFzSUhSb2FYTXVjM1JsYm1OcGJFSjFabVpsY2lBOUlHNHVjM1JsYm1OcGJFSjFabVpsY2lBaFBUMGdkbTlwWkNBd0lEOGdiaTV6ZEdWdVkybHNRblZtWm1WeUlEb2dJVEVzSUhSb2FYTXVaR1Z3ZEdoVVpYaDBkWEpsSUQwZ2JpNWtaWEIwYUZSbGVIUjFjbVVnSVQwOUlIWnZhV1FnTUNBL0lHNHVaR1Z3ZEdoVVpYaDBkWEpsSURvZ2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUhObGRGUmxlSFIxY21Vb1pTa2dld29nSUNBZ0lDQWdJR1V1YVcxaFoyVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCMGFHbHpMbmRwWkhSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSFJvYVhNdWFHVnBaMmgwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYURvZ2RHaHBjeTVrWlhCMGFBb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWRHVjRkSFZ5WlNBOUlHVTdDaUFnSUNCOUNpQWdJQ0J6WlhSVGFYcGxLR1VzSUhRc0lHNGdQU0F4S1NCN0NpQWdJQ0FnSUNBZ0tIUm9hWE11ZDJsa2RHZ2dJVDA5SUdVZ2ZId2dkR2hwY3k1b1pXbG5hSFFnSVQwOUlIUWdmSHdnZEdocGN5NWtaWEIwYUNBaFBUMGdiaWtnSmlZZ0tIUm9hWE11ZDJsa2RHZ2dQU0JsTENCMGFHbHpMbWhsYVdkb2RDQTlJSFFzSUhSb2FYTXVaR1Z3ZEdnZ1BTQnVMQ0IwYUdsekxuUmxlSFIxY21VdWFXMWhaMlV1ZDJsa2RHZ2dQU0JsTENCMGFHbHpMblJsZUhSMWNtVXVhVzFoWjJVdWFHVnBaMmgwSUQwZ2RDd2dkR2hwY3k1MFpYaDBkWEpsTG1sdFlXZGxMbVJsY0hSb0lEMGdiaXdnZEdocGN5NWthWE53YjNObEtDa3BMQ0IwYUdsekxuWnBaWGR3YjNKMExuTmxkQ2d3TENBd0xDQmxMQ0IwS1N3Z2RHaHBjeTV6WTJsemMyOXlMbk5sZENnd0xDQXdMQ0JsTENCMEtUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUzYVdSMGFDQTlJR1V1ZDJsa2RHZ3NJSFJvYVhNdWFHVnBaMmgwSUQwZ1pTNW9aV2xuYUhRc0lIUm9hWE11WkdWd2RHZ2dQU0JsTG1SbGNIUm9MQ0IwYUdsekxuWnBaWGR3YjNKMExtTnZjSGtvWlM1MmFXVjNjRzl5ZENrc0lIUm9hWE11ZEdWNGRIVnlaU0E5SUdVdWRHVjRkSFZ5WlM1amJHOXVaU2dwTENCMGFHbHpMblJsZUhSMWNtVXVhVzFoWjJVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUM0dUxuUm9hWE11ZEdWNGRIVnlaUzVwYldGblpRb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVpHVndkR2hDZFdabVpYSWdQU0JsTG1SbGNIUm9RblZtWm1WeUxDQjBhR2x6TG5OMFpXNWphV3hDZFdabVpYSWdQU0JsTG5OMFpXNWphV3hDZFdabVpYSXNJSFJvYVhNdVpHVndkR2hVWlhoMGRYSmxJRDBnWlM1a1pYQjBhRlJsZUhSMWNtVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKa2FYTndiM05sSWdvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFwOU93cEJkQzV3Y205MGIzUjVjR1V1YVhOWFpXSkhURkpsYm1SbGNsUmhjbWRsZENBOUlDRXdPd3AyWVhJZ1dtTWdQU0JqYkdGemN5QmxlSFJsYm1SeklFRjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NTBaWGgwZFhKbE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEdWNGRIVnlaU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQnVPeUJ5S3lzcGRHaHBjeTUwWlhoMGRYSmxXM0pkSUQwZ2FTNWpiRzl1WlNncE93b2dJQ0FnZlFvZ0lDQWdjMlYwVTJsNlpTaGxMQ0IwTENCdUlEMGdNU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5kcFpIUm9JQ0U5UFNCbElIeDhJSFJvYVhNdWFHVnBaMmgwSUNFOVBTQjBJSHg4SUhSb2FYTXVaR1Z3ZEdnZ0lUMDlJRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1M2FXUjBhQ0E5SUdVc0lIUm9hWE11YUdWcFoyaDBJRDBnZEN3Z2RHaHBjeTVrWlhCMGFDQTlJRzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG5SbGVIUjFjbVV1YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hSb2FYTXVkR1Y0ZEhWeVpWdHBYUzVwYldGblpTNTNhV1IwYUNBOUlHVXNJSFJvYVhNdWRHVjRkSFZ5WlZ0cFhTNXBiV0ZuWlM1b1pXbG5hSFFnUFNCMExDQjBhR2x6TG5SbGVIUjFjbVZiYVYwdWFXMWhaMlV1WkdWd2RHZ2dQU0J1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1ScGMzQnZjMlVvS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkbWxsZDNCdmNuUXVjMlYwS0RBc0lEQXNJR1VzSUhRcExDQjBhR2x6TG5OamFYTnpiM0l1YzJWMEtEQXNJREFzSUdVc0lIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1a2FYTndiM05sS0Nrc0lIUm9hWE11ZDJsa2RHZ2dQU0JsTG5kcFpIUm9MQ0IwYUdsekxtaGxhV2RvZENBOUlHVXVhR1ZwWjJoMExDQjBhR2x6TG1SbGNIUm9JRDBnWlM1a1pYQjBhQ3dnZEdocGN5NTJhV1YzY0c5eWRDNXpaWFFvTUN3Z01Dd2dkR2hwY3k1M2FXUjBhQ3dnZEdocGN5NW9aV2xuYUhRcExDQjBhR2x6TG5OamFYTnpiM0l1YzJWMEtEQXNJREFzSUhSb2FYTXVkMmxrZEdnc0lIUm9hWE11YUdWcFoyaDBLU3dnZEdocGN5NWtaWEIwYUVKMVptWmxjaUE5SUdVdVpHVndkR2hDZFdabVpYSXNJSFJvYVhNdWMzUmxibU5wYkVKMVptWmxjaUE5SUdVdWMzUmxibU5wYkVKMVptWmxjaXdnZEdocGN5NWtaWEIwYUZSbGVIUjFjbVVnUFNCbExtUmxjSFJvVkdWNGRIVnlaU3dnZEdocGN5NTBaWGgwZFhKbExteGxibWQwYUNBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1ZEdWNGRIVnlaUzVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZEdocGN5NTBaWGgwZFhKbFczUmRJRDBnWlM1MFpYaDBkWEpsVzNSZExtTnNiMjVsS0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNuMDdDbHBqTG5CeWIzUnZkSGx3WlM1cGMxZGxZa2RNVFhWc2RHbHdiR1ZTWlc1a1pYSlVZWEpuWlhSeklEMGdJVEE3Q25aaGNpQlljeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdRWFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaUE5SUh0OUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobExDQjBMQ0J1S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbk5oYlhCc1pYTWdQU0EwTENCMGFHbHpMbWxuYm05eVpVUmxjSFJvUm05eVRYVnNkR2x6WVcxd2JHVkRiM0I1SUQwZ2JpNXBaMjV2Y21WRVpYQjBhQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2JpNXBaMjV2Y21WRVpYQjBhQ0E2SUNFd0xDQjBhR2x6TG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBOUlHNHVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJQ0U5UFNCMmIybGtJREFnUHlCdUxuVnpaVkpsYm1SbGNsUnZWR1Y0ZEhWeVpTQTZJQ0V4TENCMGFHbHpMblZ6WlZKbGJtUmxjbUoxWm1abGNpQTlJSFJvYVhNdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElEMDlQU0FoTVRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUxtTmhiR3dvZEdocGN5d2daU2tzSUhSb2FYTXVjMkZ0Y0d4bGN5QTlJR1V1YzJGdGNHeGxjeXdnZEdocGN5NTFjMlZTWlc1a1pYSlViMVJsZUhSMWNtVWdQU0JsTG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlN3Z2RHaHBjeTUxYzJWU1pXNWtaWEppZFdabVpYSWdQU0JsTG5WelpWSmxibVJsY21KMVptWmxjaXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tXSE11Y0hKdmRHOTBlWEJsTG1selYyVmlSMHhOZFd4MGFYTmhiWEJzWlZKbGJtUmxjbFJoY21kbGRDQTlJQ0V3T3dwMllYSWdaM1FnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ01Dd2dkQ0E5SURBc0lHNGdQU0F3TENCcElEMGdNU2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdVc0lIUm9hWE11WDNrZ1BTQjBMQ0IwYUdsekxsOTZJRDBnYml3Z2RHaHBjeTVmZHlBOUlHazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjMnhsY25Bb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEYxWVhSbGNtNXBiMjQ2SUZOMFlYUnBZeUF1YzJ4bGNuQW9LU0JvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdjVzB1YzJ4bGNuQlJkV0YwWlhKdWFXOXVjeWdnY1dFc0lIRmlMQ0IwSUNrZ2FXNXpkR1ZoWkM0aUtTd2diaTV6YkdWeWNGRjFZWFJsY201cGIyNXpLR1VzSUhRc0lHa3BPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSE5zWlhKd1JteGhkQ2hsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCdVcya2dLeUF3WFN3Z1l5QTlJRzViYVNBcklERmRMQ0JvSUQwZ2JsdHBJQ3NnTWwwc0lIVWdQU0J1VzJrZ0t5QXpYU3dnWkNBOUlISmJieUFySURCZExDQm1JRDBnY2x0dklDc2dNVjBzSUcwZ1BTQnlXMjhnS3lBeVhTd2dlQ0E5SUhKYmJ5QXJJRE5kT3dvZ0lDQWdJQ0FnSUdsbUlDaGhJRDA5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWYmRDQXJJREJkSUQwZ2JDd2daVnQwSUNzZ01WMGdQU0JqTENCbFczUWdLeUF5WFNBOUlHZ3NJR1ZiZENBcklETmRJRDBnZFRzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWVNBOVBUMGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmxXM1FnS3lBd1hTQTlJR1FzSUdWYmRDQXJJREZkSUQwZ1ppd2daVnQwSUNzZ01sMGdQU0J0TENCbFczUWdLeUF6WFNBOUlIZzdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIVWdJVDA5SUhnZ2ZId2diQ0FoUFQwZ1pDQjhmQ0JqSUNFOVBTQm1JSHg4SUdnZ0lUMDlJRzBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhZZ1BTQXhJQzBnWVN3Z1p5QTlJR3dnS2lCa0lDc2dZeUFxSUdZZ0t5Qm9JQ29nYlNBcklIVWdLaUI0TENCd0lEMGdaeUErUFNBd0lEOGdNU0E2SUMweExDQmZJRDBnTVNBdElHY2dLaUJuT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWHlBK0lFNTFiV0psY2k1RlVGTkpURTlPS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUUxaGRHZ3VjM0Z5ZENoZktTd2dRU0E5SUUxaGRHZ3VZWFJoYmpJb1lpd2daeUFxSUhBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpQTlJRTFoZEdndWMybHVLSFlnS2lCQktTQXZJR0lzSUdFZ1BTQk5ZWFJvTG5OcGJpaGhJQ29nUVNrZ0x5QmlPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNUlEMGdZU0FxSUhBN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc0lEMGdiQ0FxSUhZZ0t5QmtJQ29nZVN3Z1l5QTlJR01nS2lCMklDc2daaUFxSUhrc0lHZ2dQU0JvSUNvZ2RpQXJJRzBnS2lCNUxDQjFJRDBnZFNBcUlIWWdLeUI0SUNvZ2VTd2dkaUE5UFQwZ01TQXRJR0VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlNU0E5SURFZ0x5Qk5ZWFJvTG5OeGNuUW9iQ0FxSUd3Z0t5QmpJQ29nWXlBcklHZ2dLaUJvSUNzZ2RTQXFJSFVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkNBcVBTQmlNU3dnWXlBcVBTQmlNU3dnYUNBcVBTQmlNU3dnZFNBcVBTQmlNVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmxXM1JkSUQwZ2JDd2daVnQwSUNzZ01WMGdQU0JqTENCbFczUWdLeUF5WFNBOUlHZ3NJR1ZiZENBcklETmRJRDBnZFRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCdGRXeDBhWEJzZVZGMVlYUmxjbTVwYjI1elJteGhkQ2hsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1VzJsZExDQnNJRDBnYmx0cElDc2dNVjBzSUdNZ1BTQnVXMmtnS3lBeVhTd2dhQ0E5SUc1YmFTQXJJRE5kTENCMUlEMGdjbHR2WFN3Z1pDQTlJSEpiYnlBcklERmRMQ0JtSUQwZ2NsdHZJQ3NnTWwwc0lHMGdQU0J5VzI4Z0t5QXpYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnQwWFNBOUlHRWdLaUJ0SUNzZ2FDQXFJSFVnS3lCc0lDb2daaUF0SUdNZ0tpQmtMQ0JsVzNRZ0t5QXhYU0E5SUd3Z0tpQnRJQ3NnYUNBcUlHUWdLeUJqSUNvZ2RTQXRJR0VnS2lCbUxDQmxXM1FnS3lBeVhTQTlJR01nS2lCdElDc2dhQ0FxSUdZZ0t5QmhJQ29nWkNBdElHd2dLaUIxTENCbFczUWdLeUF6WFNBOUlHZ2dLaUJ0SUMwZ1lTQXFJSFVnTFNCc0lDb2daQ0F0SUdNZ0tpQm1MQ0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSGdvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYM2c3Q2lBZ0lDQjlDaUFnSUNCelpYUWdlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJR2RsZENCNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhrb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgza2dQU0JsTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdlaWdwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlanNLSUNBZ0lIMEtJQ0FnSUhObGRDQjZLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDk2SUQwZ1pTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhjb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNjN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZHlobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmR5QTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUhObGRDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzZ2dQU0JsTENCMGFHbHpMbDk1SUQwZ2RDd2dkR2hwY3k1ZmVpQTlJRzRzSUhSb2FYTXVYM2NnUFNCcExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb2RHaHBjeTVmZUN3Z2RHaHBjeTVmZVN3Z2RHaHBjeTVmZWl3Z2RHaHBjeTVmZHlrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBOUlHVXVlQ3dnZEdocGN5NWZlU0E5SUdVdWVTd2dkR2hwY3k1ZmVpQTlJR1V1ZWl3Z2RHaHBjeTVmZHlBOUlHVXVkeXdnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVVjFiR1Z5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb0lTaGxJQ1ltSUdVdWFYTkZkV3hsY2lrcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnaVZFaFNSVVV1VVhWaGRHVnlibWx2YmpvZ0xuTmxkRVp5YjIxRmRXeGxjaWdwSUc1dmR5QmxlSEJsWTNSeklHRnVJRVYxYkdWeUlISnZkR0YwYVc5dUlISmhkR2hsY2lCMGFHRnVJR0VnVm1WamRHOXlNeUJoYm1RZ2IzSmtaWEl1SWlrN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExsOTRMQ0JwSUQwZ1pTNWZlU3dnY2lBOUlHVXVYM29zSUc4Z1BTQmxMbDl2Y21SbGNpd2dZU0E5SUUxaGRHZ3VZMjl6TENCc0lEMGdUV0YwYUM1emFXNHNJR01nUFNCaEtHNGdMeUF5S1N3Z2FDQTlJR0VvYVNBdklESXBMQ0IxSUQwZ1lTaHlJQzhnTWlrc0lHUWdQU0JzS0c0Z0x5QXlLU3dnWmlBOUlHd29hU0F2SURJcExDQnRJRDBnYkNoeUlDOGdNaWs3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LRzhwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdWb2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1FnS2lCb0lDb2dkU0FySUdNZ0tpQm1JQ29nYlN3Z2RHaHBjeTVmZVNBOUlHTWdLaUJtSUNvZ2RTQXRJR1FnS2lCb0lDb2diU3dnZEdocGN5NWZlaUE5SUdNZ0tpQm9JQ29nYlNBcklHUWdLaUJtSUNvZ2RTd2dkR2hwY3k1ZmR5QTlJR01nS2lCb0lDb2dkU0F0SUdRZ0tpQm1JQ29nYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0paV0ZvaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHUWdLaUJvSUNvZ2RTQXJJR01nS2lCbUlDb2diU3dnZEdocGN5NWZlU0E5SUdNZ0tpQm1JQ29nZFNBdElHUWdLaUJvSUNvZ2JTd2dkR2hwY3k1ZmVpQTlJR01nS2lCb0lDb2diU0F0SUdRZ0tpQm1JQ29nZFN3Z2RHaHBjeTVmZHlBOUlHTWdLaUJvSUNvZ2RTQXJJR1FnS2lCbUlDb2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSmFXRmtpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdRZ0tpQm9JQ29nZFNBdElHTWdLaUJtSUNvZ2JTd2dkR2hwY3k1ZmVTQTlJR01nS2lCbUlDb2dkU0FySUdRZ0tpQm9JQ29nYlN3Z2RHaHBjeTVmZWlBOUlHTWdLaUJvSUNvZ2JTQXJJR1FnS2lCbUlDb2dkU3dnZEdocGN5NWZkeUE5SUdNZ0tpQm9JQ29nZFNBdElHUWdLaUJtSUNvZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKYVdWZ2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVDQTlJR1FnS2lCb0lDb2dkU0F0SUdNZ0tpQm1JQ29nYlN3Z2RHaHBjeTVmZVNBOUlHTWdLaUJtSUNvZ2RTQXJJR1FnS2lCb0lDb2diU3dnZEdocGN5NWZlaUE5SUdNZ0tpQm9JQ29nYlNBdElHUWdLaUJtSUNvZ2RTd2dkR2hwY3k1ZmR5QTlJR01nS2lCb0lDb2dkU0FySUdRZ0tpQm1JQ29nYlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0paV2xnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZUNBOUlHUWdLaUJvSUNvZ2RTQXJJR01nS2lCbUlDb2diU3dnZEdocGN5NWZlU0E5SUdNZ0tpQm1JQ29nZFNBcklHUWdLaUJvSUNvZ2JTd2dkR2hwY3k1ZmVpQTlJR01nS2lCb0lDb2diU0F0SUdRZ0tpQm1JQ29nZFN3Z2RHaHBjeTVmZHlBOUlHTWdLaUJvSUNvZ2RTQXRJR1FnS2lCbUlDb2diVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSllXbGtpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZlQ0E5SUdRZ0tpQm9JQ29nZFNBdElHTWdLaUJtSUNvZ2JTd2dkR2hwY3k1ZmVTQTlJR01nS2lCbUlDb2dkU0F0SUdRZ0tpQm9JQ29nYlN3Z2RHaHBjeTVmZWlBOUlHTWdLaUJvSUNvZ2JTQXJJR1FnS2lCbUlDb2dkU3dnZEdocGN5NWZkeUE5SUdNZ0tpQm9JQ29nZFNBcklHUWdLaUJtSUNvZ2JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVJkV0YwWlhKdWFXOXVPaUF1YzJWMFJuSnZiVVYxYkdWeUtDa2daVzVqYjNWdWRHVnlaV1FnWVc0Z2RXNXJibTkzYmlCdmNtUmxjam9nSWlBcklHOHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ0lURWdKaVlnZEdocGN5NWZiMjVEYUdGdVoyVkRZV3hzWW1GamF5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVRjRhWE5CYm1kc1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMElDOGdNaXdnYVNBOUlFMWhkR2d1YzJsdUtHNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElEMGdaUzU0SUNvZ2FTd2dkR2hwY3k1ZmVTQTlJR1V1ZVNBcUlHa3NJSFJvYVhNdVgzb2dQU0JsTG5vZ0tpQnBMQ0IwYUdsekxsOTNJRDBnVFdGMGFDNWpiM01vYmlrc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG1Wc1pXMWxiblJ6TENCdUlEMGdkRnN3WFN3Z2FTQTlJSFJiTkYwc0lISWdQU0IwV3poZExDQnZJRDBnZEZzeFhTd2dZU0E5SUhSYk5WMHNJR3dnUFNCMFd6bGRMQ0JqSUQwZ2RGc3lYU3dnYUNBOUlIUmJObDBzSUhVZ1BTQjBXekV3WFN3Z1pDQTlJRzRnS3lCaElDc2dkVHNLSUNBZ0lDQWdJQ0JwWmlBb1pDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQXVOU0F2SUUxaGRHZ3VjM0Z5ZENoa0lDc2dNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDNjZ1BTQXVNalVnTHlCbUxDQjBhR2x6TGw5NElEMGdLR2dnTFNCc0tTQXFJR1lzSUhSb2FYTXVYM2tnUFNBb2NpQXRJR01wSUNvZ1ppd2dkR2hwY3k1ZmVpQTlJQ2h2SUMwZ2FTa2dLaUJtT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2JpQStJR0VnSmlZZ2JpQStJSFVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZeElEMGdNaUFxSUUxaGRHZ3VjM0Z5ZENneElDc2diaUF0SUdFZ0xTQjFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZHlBOUlDaG9JQzBnYkNrZ0x5Qm1NU3dnZEdocGN5NWZlQ0E5SUM0eU5TQXFJR1l4TENCMGFHbHpMbDk1SUQwZ0tHa2dLeUJ2S1NBdklHWXhMQ0IwYUdsekxsOTZJRDBnS0hJZ0t5QmpLU0F2SUdZeE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZU0ErSUhVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHWXlJRDBnTWlBcUlFMWhkR2d1YzNGeWRDZ3hJQ3NnWVNBdElHNGdMU0IxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmR5QTlJQ2h5SUMwZ1l5a2dMeUJtTWl3Z2RHaHBjeTVmZUNBOUlDaHBJQ3NnYnlrZ0x5Qm1NaXdnZEdocGN5NWZlU0E5SUM0eU5TQXFJR1l5TENCMGFHbHpMbDk2SUQwZ0tHd2dLeUJvS1NBdklHWXlPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1NeUE5SURJZ0tpQk5ZWFJvTG5OeGNuUW9NU0FySUhVZ0xTQnVJQzBnWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzY2dQU0FvYnlBdElHa3BJQzhnWmpNc0lIUm9hWE11WDNnZ1BTQW9jaUFySUdNcElDOGdaak1zSUhSb2FYTXVYM2tnUFNBb2JDQXJJR2dwSUM4Z1pqTXNJSFJvYVhNdVgzb2dQU0F1TWpVZ0tpQm1NenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp5YjIxVmJtbDBWbVZqZEc5eWN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCbExtUnZkQ2gwS1NBcklERTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNGdQQ0JPZFcxaVpYSXVSVkJUU1V4UFRpQS9JQ2h1SUQwZ01Dd2dUV0YwYUM1aFluTW9aUzU0S1NBK0lFMWhkR2d1WVdKektHVXVlaWtnUHlBb2RHaHBjeTVmZUNBOUlDMWxMbmtzSUhSb2FYTXVYM2tnUFNCbExuZ3NJSFJvYVhNdVgzb2dQU0F3TENCMGFHbHpMbDkzSUQwZ2Jpa2dPaUFvZEdocGN5NWZlQ0E5SURBc0lIUm9hWE11WDNrZ1BTQXRaUzU2TENCMGFHbHpMbDk2SUQwZ1pTNTVMQ0IwYUdsekxsOTNJRDBnYmlrcElEb2dLSFJvYVhNdVgzZ2dQU0JsTG5rZ0tpQjBMbm9nTFNCbExub2dLaUIwTG5rc0lIUm9hWE11WDNrZ1BTQmxMbm9nS2lCMExuZ2dMU0JsTG5nZ0tpQjBMbm9zSUhSb2FYTXVYM29nUFNCbExuZ2dLaUIwTG5rZ0xTQmxMbmtnS2lCMExuZ3NJSFJvYVhNdVgzY2dQU0J1S1N3Z2RHaHBjeTV1YjNKdFlXeHBlbVVvS1RzS0lDQWdJSDBLSUNBZ0lHRnVaMnhsVkc4b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQXlJQ29nVFdGMGFDNWhZMjl6S0UxaGRHZ3VZV0p6S0cxMEtIUm9hWE11Wkc5MEtHVXBMQ0F0TVN3Z01Ta3BLVHNLSUNBZ0lIMEtJQ0FnSUhKdmRHRjBaVlJ2ZDJGeVpITW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVoYm1kc1pWUnZLR1VwT3dvZ0lDQWdJQ0FnSUdsbUlDaHVJRDA5UFNBd0tTQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRTFoZEdndWJXbHVLREVzSUhRZ0x5QnVLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1emJHVnljQ2hsTENCcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbGtaVzUwYVhSNUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3dMQ0F3TENBd0xDQXhLVHNLSUNBZ0lIMEtJQ0FnSUdsdWRtVnlkQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpiMjVxZFdkaGRHVW9LVHNLSUNBZ0lIMEtJQ0FnSUdOdmJtcDFaMkYwWlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBcVBTQXRNU3dnZEdocGN5NWZlU0FxUFNBdE1Td2dkR2hwY3k1ZmVpQXFQU0F0TVN3Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheWdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkc5MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQXFJR1V1WDNnZ0t5QjBhR2x6TGw5NUlDb2daUzVmZVNBcklIUm9hWE11WDNvZ0tpQmxMbDk2SUNzZ2RHaHBjeTVmZHlBcUlHVXVYM2M3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2hUY1NncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZUNBcUlIUm9hWE11WDNnZ0t5QjBhR2x6TGw5NUlDb2dkR2hwY3k1ZmVTQXJJSFJvYVhNdVgzb2dLaUIwYUdsekxsOTZJQ3NnZEdocGN5NWZkeUFxSUhSb2FYTXVYM2M3Q2lBZ0lDQjlDaUFnSUNCc1pXNW5kR2dvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUUxaGRHZ3VjM0Z5ZENoMGFHbHpMbDk0SUNvZ2RHaHBjeTVmZUNBcklIUm9hWE11WDNrZ0tpQjBhR2x6TGw5NUlDc2dkR2hwY3k1ZmVpQXFJSFJvYVhNdVgzb2dLeUIwYUdsekxsOTNJQ29nZEdocGN5NWZkeWs3Q2lBZ0lDQjlDaUFnSUNCdWIzSnRZV3hwZW1Vb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUQwOVBTQXdJRDhnS0hSb2FYTXVYM2dnUFNBd0xDQjBhR2x6TGw5NUlEMGdNQ3dnZEdocGN5NWZlaUE5SURBc0lIUm9hWE11WDNjZ1BTQXhLU0E2SUNobElEMGdNU0F2SUdVc0lIUm9hWE11WDNnZ1BTQjBhR2x6TGw5NElDb2daU3dnZEdocGN5NWZlU0E5SUhSb2FYTXVYM2tnS2lCbExDQjBhR2x6TGw5NklEMGdkR2hwY3k1ZmVpQXFJR1VzSUhSb2FYTXVYM2NnUFNCMGFHbHpMbDkzSUNvZ1pTa3NJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VVhWaGRHVnlibWx2YmpvZ0xtMTFiSFJwY0d4NUtDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXViWFZzZEdsd2JIbFJkV0YwWlhKdWFXOXVjeWdnWVN3Z1lpQXBJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXViWFZzZEdsd2JIbFJkV0YwWlhKdWFXOXVjeWhsTENCMEtTa2dPaUIwYUdsekxtMTFiSFJwY0d4NVVYVmhkR1Z5Ym1sdmJuTW9kR2hwY3l3Z1pTazdDaUFnSUNCOUNpQWdJQ0J3Y21WdGRXeDBhWEJzZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YlhWc2RHbHdiSGxSZFdGMFpYSnVhVzl1Y3lobExDQjBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NVVYVmhkR1Z5Ym1sdmJuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWZlQ3dnYVNBOUlHVXVYM2tzSUhJZ1BTQmxMbDk2TENCdklEMGdaUzVmZHl3Z1lTQTlJSFF1WDNnc0lHd2dQU0IwTGw5NUxDQmpJRDBnZEM1ZmVpd2dhQ0E5SUhRdVgzYzdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ1BTQnVJQ29nYUNBcklHOGdLaUJoSUNzZ2FTQXFJR01nTFNCeUlDb2diQ3dnZEdocGN5NWZlU0E5SUdrZ0tpQm9JQ3NnYnlBcUlHd2dLeUJ5SUNvZ1lTQXRJRzRnS2lCakxDQjBhR2x6TGw5NklEMGdjaUFxSUdnZ0t5QnZJQ29nWXlBcklHNGdLaUJzSUMwZ2FTQXFJR0VzSUhSb2FYTXVYM2NnUFNCdklDb2dhQ0F0SUc0Z0tpQmhJQzBnYVNBcUlHd2dMU0J5SUNvZ1l5d2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyeGxjbkFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR2xtSUNoMElEMDlQU0F3S1NCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdNU2tnY21WMGRYSnVJSFJvYVhNdVkyOXdlU2hsS1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVYM2dzSUdrZ1BTQjBhR2x6TGw5NUxDQnlJRDBnZEdocGN5NWZlaXdnYnlBOUlIUm9hWE11WDNjc0lHRWdQU0J2SUNvZ1pTNWZkeUFySUc0Z0tpQmxMbDk0SUNzZ2FTQXFJR1V1WDNrZ0t5QnlJQ29nWlM1ZmVqc0tJQ0FnSUNBZ0lDQnBaaUFvWVNBOElEQWdQeUFvZEdocGN5NWZkeUE5SUMxbExsOTNMQ0IwYUdsekxsOTRJRDBnTFdVdVgzZ3NJSFJvYVhNdVgza2dQU0F0WlM1ZmVTd2dkR2hwY3k1ZmVpQTlJQzFsTGw5NkxDQmhJRDBnTFdFcElEb2dkR2hwY3k1amIzQjVLR1VwTENCaElENDlJREVwSUhKbGRIVnliaUIwYUdsekxsOTNJRDBnYnl3Z2RHaHBjeTVmZUNBOUlHNHNJSFJvYVhNdVgza2dQU0JwTENCMGFHbHpMbDk2SUQwZ2Npd2dkR2hwY3pzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SURFZ0xTQmhJQ29nWVRzS0lDQWdJQ0FnSUNCcFppQW9iQ0E4UFNCT2RXMWlaWEl1UlZCVFNVeFBUaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlERWdMU0IwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZHlBOUlHWWdLaUJ2SUNzZ2RDQXFJSFJvYVhNdVgzY3NJSFJvYVhNdVgzZ2dQU0JtSUNvZ2JpQXJJSFFnS2lCMGFHbHpMbDk0TENCMGFHbHpMbDk1SUQwZ1ppQXFJR2tnS3lCMElDb2dkR2hwY3k1ZmVTd2dkR2hwY3k1ZmVpQTlJR1lnS2lCeUlDc2dkQ0FxSUhSb2FYTXVYM29zSUhSb2FYTXVibTl5YldGc2FYcGxLQ2tzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQk5ZWFJvTG5OeGNuUW9iQ2tzSUdnZ1BTQk5ZWFJvTG1GMFlXNHlLR01zSUdFcExDQjFJRDBnVFdGMGFDNXphVzRvS0RFZ0xTQjBLU0FxSUdncElDOGdZeXdnWkNBOUlFMWhkR2d1YzJsdUtIUWdLaUJvS1NBdklHTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNjZ1BTQnZJQ29nZFNBcklIUm9hWE11WDNjZ0tpQmtMQ0IwYUdsekxsOTRJRDBnYmlBcUlIVWdLeUIwYUdsekxsOTRJQ29nWkN3Z2RHaHBjeTVmZVNBOUlHa2dLaUIxSUNzZ2RHaHBjeTVmZVNBcUlHUXNJSFJvYVhNdVgzb2dQU0J5SUNvZ2RTQXJJSFJvYVhNdVgzb2dLaUJrTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6YkdWeWNGRjFZWFJsY201cGIyNXpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtTnZjSGtvWlNrdWMyeGxjbkFvZEN3Z2JpazdDaUFnSUNCOUNpQWdJQ0J5WVc1a2IyMG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0JOWVhSb0xuSmhibVJ2YlNncExDQjBJRDBnVFdGMGFDNXpjWEowS0RFZ0xTQmxLU3dnYmlBOUlFMWhkR2d1YzNGeWRDaGxLU3dnYVNBOUlESWdLaUJOWVhSb0xsQkpJQ29nVFdGMGFDNXlZVzVrYjIwb0tTd2djaUE5SURJZ0tpQk5ZWFJvTGxCSklDb2dUV0YwYUM1eVlXNWtiMjBvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvZENBcUlFMWhkR2d1WTI5ektHa3BMQ0J1SUNvZ1RXRjBhQzV6YVc0b2Npa3NJRzRnS2lCTllYUm9MbU52Y3loeUtTd2dkQ0FxSUUxaGRHZ3VjMmx1S0drcEtUc0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDNnZ1BUMDlJSFJvYVhNdVgzZ2dKaVlnWlM1ZmVTQTlQVDBnZEdocGN5NWZlU0FtSmlCbExsOTZJRDA5UFNCMGFHbHpMbDk2SUNZbUlHVXVYM2NnUFQwOUlIUm9hWE11WDNjN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmVDQTlJR1ZiZEYwc0lIUm9hWE11WDNrZ1BTQmxXM1FnS3lBeFhTd2dkR2hwY3k1ZmVpQTlJR1ZiZENBcklESmRMQ0IwYUdsekxsOTNJRDBnWlZ0MElDc2dNMTBzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2UVhKeVlYa29aU0E5SUZ0ZExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbFczUmRJRDBnZEdocGN5NWZlQ3dnWlZ0MElDc2dNVjBnUFNCMGFHbHpMbDk1TENCbFczUWdLeUF5WFNBOUlIUm9hWE11WDNvc0lHVmJkQ0FySUROZElEMGdkR2hwY3k1ZmR5d2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTRJRDBnWlM1blpYUllLSFFwTENCMGFHbHpMbDk1SUQwZ1pTNW5aWFJaS0hRcExDQjBhR2x6TGw5NklEMGdaUzVuWlhSYUtIUXBMQ0IwYUdsekxsOTNJRDBnWlM1blpYUlhLSFFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWDI5dVEyaGhibWRsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYjI1RGFHRnVaMlZEWVd4c1ltRmpheUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncElIdDlDbjA3Q21kMExuQnliM1J2ZEhsd1pTNXBjMUYxWVhSbGNtNXBiMjRnUFNBaE1Ec0tkbUZ5SUUwZ1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNQ3dnZENBOUlEQXNJRzRnUFNBd0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5nZ1BTQmxMQ0IwYUdsekxua2dQU0IwTENCMGFHbHpMbm9nUFNCdU93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h1SUQwZ2RHaHBjeTU2S1N3Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdkQ3dnZEdocGN5NTZJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHVXNJSFJvYVhNdWVTQTlJR1VzSUhSb2FYTXVlaUE5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRGa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxua2dQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVpQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSRGIyMXdiMjVsYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhOM2FYUmphQ2hsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBd09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTU0SUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSURFNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbmtnUFNCME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVlaUE5SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpYVc1a1pYZ2dhWE1nYjNWMElHOW1JSEpoYm1kbE9pQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFEyOXRjRzl1Wlc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29aU2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnTURvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZzdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNVG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5rN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ01qb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbm83Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabUYxYkhRNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1sdVpHVjRJR2x6SUc5MWRDQnZaaUJ5WVc1blpUb2dJaUFySUdVcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxuZ3NJSFJvYVhNdWVTd2dkR2hwY3k1NktUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQmxMbmdzSUhSb2FYTXVlU0E5SUdVdWVTd2dkR2hwY3k1NklEMGdaUzU2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVdSa0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1Ga1pDZ3BJRzV2ZHlCdmJteDVJR0ZqWTJWd2RITWdiMjVsSUdGeVozVnRaVzUwTGlCVmMyVWdMbUZrWkZabFkzUnZjbk1vSUdFc0lHSWdLU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbUZrWkZabFkzUnZjbk1vWlN3Z2RDa3BJRG9nS0hSb2FYTXVlQ0FyUFNCbExuZ3NJSFJvYVhNdWVTQXJQU0JsTG5rc0lIUm9hWE11ZWlBclBTQmxMbm9zSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnWVdSa1UyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNzOUlHVXNJSFJvYVhNdWVTQXJQU0JsTENCMGFHbHpMbm9nS3owZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHRmtaRlpsWTNSdmNuTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCbExuZ2dLeUIwTG5nc0lIUm9hWE11ZVNBOUlHVXVlU0FySUhRdWVTd2dkR2hwY3k1NklEMGdaUzU2SUNzZ2RDNTZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV1JrVTJOaGJHVmtWbVZqZEc5eUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ3M5SUdVdWVDQXFJSFFzSUhSb2FYTXVlU0FyUFNCbExua2dLaUIwTENCMGFHbHpMbm9nS3owZ1pTNTZJQ29nZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhOMVlpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRZ0lUMDlJSFp2YVdRZ01DQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabFkzUnZjak02SUM1emRXSW9LU0J1YjNjZ2IyNXNlU0JoWTJObGNIUnpJRzl1WlNCaGNtZDFiV1Z1ZEM0Z1ZYTmxJQzV6ZFdKV1pXTjBiM0p6S0NCaExDQmlJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV6ZFdKV1pXTjBiM0p6S0dVc0lIUXBLU0E2SUNoMGFHbHpMbmdnTFQwZ1pTNTRMQ0IwYUdsekxua2dMVDBnWlM1NUxDQjBhR2x6TG5vZ0xUMGdaUzU2TENCMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUhOMVlsTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBdFBTQmxMQ0IwYUdsekxua2dMVDBnWlN3Z2RHaHBjeTU2SUMwOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpkV0pXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQzBnZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnTFNCMExua3NJSFJvYVhNdWVpQTlJR1V1ZWlBdElIUXVlaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQWhQVDBnZG05cFpDQXdJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xtMTFiSFJwY0d4NUtDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXViWFZzZEdsd2JIbFdaV04wYjNKektDQmhMQ0JpSUNrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1dGRXeDBhWEJzZVZabFkzUnZjbk1vWlN3Z2RDa3BJRG9nS0hSb2FYTXVlQ0FxUFNCbExuZ3NJSFJvYVhNdWVTQXFQU0JsTG5rc0lIUm9hWE11ZWlBcVBTQmxMbm9zSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxUWTJGc1lYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dLajBnWlN3Z2RHaHBjeTU1SUNvOUlHVXNJSFJvYVhNdWVpQXFQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYlhWc2RHbHdiSGxXWldOMGIzSnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1pTNTRJQ29nZEM1NExDQjBhR2x6TG5rZ1BTQmxMbmtnS2lCMExua3NJSFJvYVhNdWVpQTlJR1V1ZWlBcUlIUXVlaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVJYVnNaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDWW1JR1V1YVhORmRXeGxjaUI4ZkNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXVZWEJ3YkhsRmRXeGxjaWdwSUc1dmR5QmxlSEJsWTNSeklHRnVJRVYxYkdWeUlISnZkR0YwYVc5dUlISmhkR2hsY2lCMGFHRnVJR0VnVm1WamRHOXlNeUJoYm1RZ2IzSmtaWEl1SWlrc0lIUm9hWE11WVhCd2JIbFJkV0YwWlhKdWFXOXVLSGxzTG5ObGRFWnliMjFGZFd4bGNpaGxLU2s3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVUY0YVhOQmJtZHNaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhCd2JIbFJkV0YwWlhKdWFXOXVLSGxzTG5ObGRFWnliMjFCZUdselFXNW5iR1VvWlN3Z2RDa3BPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWVDd2diaUE5SUhSb2FYTXVlU3dnYVNBOUlIUm9hWE11ZWl3Z2NpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJSEpiTUYwZ0tpQjBJQ3NnY2xzelhTQXFJRzRnS3lCeVd6WmRJQ29nYVN3Z2RHaHBjeTU1SUQwZ2Nsc3hYU0FxSUhRZ0t5QnlXelJkSUNvZ2JpQXJJSEpiTjEwZ0tpQnBMQ0IwYUdsekxub2dQU0J5V3pKZElDb2dkQ0FySUhKYk5WMGdLaUJ1SUNzZ2NsczRYU0FxSUdrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVTV2Y20xaGJFMWhkSEpwZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnektHVXBMbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVlQ3dnYmlBOUlIUm9hWE11ZVN3Z2FTQTlJSFJvYVhNdWVpd2djaUE5SUdVdVpXeGxiV1Z1ZEhNc0lHOGdQU0F4SUM4Z0tISmJNMTBnS2lCMElDc2djbHMzWFNBcUlHNGdLeUJ5V3pFeFhTQXFJR2tnS3lCeVd6RTFYU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJQ2h5V3pCZElDb2dkQ0FySUhKYk5GMGdLaUJ1SUNzZ2NsczRYU0FxSUdrZ0t5QnlXekV5WFNrZ0tpQnZMQ0IwYUdsekxua2dQU0FvY2xzeFhTQXFJSFFnS3lCeVd6VmRJQ29nYmlBcklISmJPVjBnS2lCcElDc2djbHN4TTEwcElDb2dieXdnZEdocGN5NTZJRDBnS0hKYk1sMGdLaUIwSUNzZ2NsczJYU0FxSUc0Z0t5QnlXekV3WFNBcUlHa2dLeUJ5V3pFMFhTa2dLaUJ2TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbFJkV0YwWlhKdWFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVlQ3dnYmlBOUlIUm9hWE11ZVN3Z2FTQTlJSFJvYVhNdWVpd2djaUE5SUdVdWVDd2dieUE5SUdVdWVTd2dZU0E5SUdVdWVpd2diQ0E5SUdVdWR5d2dZeUE5SUd3Z0tpQjBJQ3NnYnlBcUlHa2dMU0JoSUNvZ2Jpd2dhQ0E5SUd3Z0tpQnVJQ3NnWVNBcUlIUWdMU0J5SUNvZ2FTd2dkU0E5SUd3Z0tpQnBJQ3NnY2lBcUlHNGdMU0J2SUNvZ2RDd2daQ0E5SUMxeUlDb2dkQ0F0SUc4Z0tpQnVJQzBnWVNBcUlHazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlHTWdLaUJzSUNzZ1pDQXFJQzF5SUNzZ2FDQXFJQzFoSUMwZ2RTQXFJQzF2TENCMGFHbHpMbmtnUFNCb0lDb2diQ0FySUdRZ0tpQXRieUFySUhVZ0tpQXRjaUF0SUdNZ0tpQXRZU3dnZEdocGN5NTZJRDBnZFNBcUlHd2dLeUJrSUNvZ0xXRWdLeUJqSUNvZ0xXOGdMU0JvSUNvZ0xYSXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQndjbTlxWldOMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9aUzV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlVwTG1Gd2NHeDVUV0YwY21sNE5DaGxMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3BPd29nSUNBZ2ZRb2dJQ0FnZFc1d2NtOXFaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb1pTNXdjbTlxWldOMGFXOXVUV0YwY21sNFNXNTJaWEp6WlNrdVlYQndiSGxOWVhSeWFYZzBLR1V1YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVlQ3dnYmlBOUlIUm9hWE11ZVN3Z2FTQTlJSFJvYVhNdWVpd2djaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUhKYk1GMGdLaUIwSUNzZ2NsczBYU0FxSUc0Z0t5QnlXemhkSUNvZ2FTd2dkR2hwY3k1NUlEMGdjbHN4WFNBcUlIUWdLeUJ5V3pWZElDb2diaUFySUhKYk9WMGdLaUJwTENCMGFHbHpMbm9nUFNCeVd6SmRJQ29nZENBcklISmJObDBnS2lCdUlDc2djbHN4TUYwZ0tpQnBMQ0IwYUdsekxtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWkdsMmFXUmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQzg5SUdVdWVDd2dkR2hwY3k1NUlDODlJR1V1ZVN3Z2RHaHBjeTU2SUM4OUlHVXVlaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwZG1sa1pWTmpZV3hoY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YlhWc2RHbHdiSGxUWTJGc1lYSW9NU0F2SUdVcE93b2dJQ0FnZlFvZ0lDQWdiV2x1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUQwZ1RXRjBhQzV0YVc0b2RHaHBjeTU0TENCbExuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtMXBiaWgwYUdsekxua3NJR1V1ZVNrc0lIUm9hWE11ZWlBOUlFMWhkR2d1YldsdUtIUm9hWE11ZWl3Z1pTNTZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtIUm9hWE11ZUN3Z1pTNTRLU3dnZEdocGN5NTVJRDBnVFdGMGFDNXRZWGdvZEdocGN5NTVMQ0JsTG5rcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG0xaGVDaDBhR2x6TG5vc0lHVXVlaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUUxaGRHZ3ViV0Y0S0dVdWVDd2dUV0YwYUM1dGFXNG9kQzU0TENCMGFHbHpMbmdwS1N3Z2RHaHBjeTU1SUQwZ1RXRjBhQzV0WVhnb1pTNTVMQ0JOWVhSb0xtMXBiaWgwTG5rc0lIUm9hWE11ZVNrcExDQjBhR2x6TG5vZ1BTQk5ZWFJvTG0xaGVDaGxMbm9zSUUxaGRHZ3ViV2x1S0hRdWVpd2dkR2hwY3k1NktTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0ZOallXeGhjaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUhSb2FYTXVlQ2twTENCMGFHbHpMbmtnUFNCTllYUm9MbTFoZUNobExDQk5ZWFJvTG0xcGJpaDBMQ0IwYUdsekxua3BLU3dnZEdocGN5NTZJRDBnVFdGMGFDNXRZWGdvWlN3Z1RXRjBhQzV0YVc0b2RDd2dkR2hwY3k1NktTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR0Z0Y0V4bGJtZDBhQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG14bGJtZDBhQ2dwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtUnBkbWxrWlZOallXeGhjaWh1SUh4OElERXBMbTExYkhScGNHeDVVMk5oYkdGeUtFMWhkR2d1YldGNEtHVXNJRTFoZEdndWJXbHVLSFFzSUc0cEtTazdDaUFnSUNCOUNpQWdJQ0JtYkc5dmNpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1bWJHOXZjaWgwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtWnNiMjl5S0hSb2FYTXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdObGFXd29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndVkyVnBiQ2gwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xtTmxhV3dvZEdocGN5NTVLU3dnZEdocGN5NTZJRDBnVFdGMGFDNWpaV2xzS0hSb2FYTXVlaWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5YjNWdVpDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdUV0YwYUM1eWIzVnVaQ2gwYUdsekxuZ3BMQ0IwYUdsekxua2dQU0JOWVhSb0xuSnZkVzVrS0hSb2FYTXVlU2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3VjbTkxYm1Rb2RHaHBjeTU2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKdmRXNWtWRzlhWlhKdktDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5nZ1BTQjBhR2x6TG5nZ1BDQXdJRDhnVFdGMGFDNWpaV2xzS0hSb2FYTXVlQ2tnT2lCTllYUm9MbVpzYjI5eUtIUm9hWE11ZUNrc0lIUm9hWE11ZVNBOUlIUm9hWE11ZVNBOElEQWdQeUJOWVhSb0xtTmxhV3dvZEdocGN5NTVLU0E2SUUxaGRHZ3VabXh2YjNJb2RHaHBjeTU1S1N3Z2RHaHBjeTU2SUQwZ2RHaHBjeTU2SUR3Z01DQS9JRTFoZEdndVkyVnBiQ2gwYUdsekxub3BJRG9nVFdGMGFDNW1iRzl2Y2loMGFHbHpMbm9wTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYm1WbllYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0F0ZEdocGN5NTRMQ0IwYUdsekxua2dQU0F0ZEdocGN5NTVMQ0IwYUdsekxub2dQU0F0ZEdocGN5NTZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaRzkwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTU0SUNvZ1pTNTRJQ3NnZEdocGN5NTVJQ29nWlM1NUlDc2dkR2hwY3k1NklDb2daUzU2T3dvZ0lDQWdmUW9nSUNBZ2JHVnVaM1JvVTNFb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBcUlIUm9hWE11ZUNBcklIUm9hWE11ZVNBcUlIUm9hWE11ZVNBcklIUm9hWE11ZWlBcUlIUm9hWE11ZWpzS0lDQWdJSDBLSUNBZ0lHeGxibWQwYUNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzV6Y1hKMEtIUm9hWE11ZUNBcUlIUm9hWE11ZUNBcklIUm9hWE11ZVNBcUlIUm9hWE11ZVNBcklIUm9hWE11ZWlBcUlIUm9hWE11ZWlrN0NpQWdJQ0I5Q2lBZ0lDQnRZVzVvWVhSMFlXNU1aVzVuZEdnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMWhkR2d1WVdKektIUm9hWE11ZUNrZ0t5Qk5ZWFJvTG1GaWN5aDBhR2x6TG5rcElDc2dUV0YwYUM1aFluTW9kR2hwY3k1NktUc0tJQ0FnSUgwS0lDQWdJRzV2Y20xaGJHbDZaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWthWFpwWkdWVFkyRnNZWElvZEdocGN5NXNaVzVuZEdnb0tTQjhmQ0F4S1RzS0lDQWdJSDBLSUNBZ0lITmxkRXhsYm1kMGFDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzYVhwbEtDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1pTazdDaUFnSUNCOUNpQWdJQ0JzWlhKd0tHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJQ3M5SUNobExuZ2dMU0IwYUdsekxuZ3BJQ29nZEN3Z2RHaHBjeTU1SUNzOUlDaGxMbmtnTFNCMGFHbHpMbmtwSUNvZ2RDd2dkR2hwY3k1NklDczlJQ2hsTG5vZ0xTQjBhR2x6TG5vcElDb2dkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3hsY25CV1pXTjBiM0p6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NTRJRDBnWlM1NElDc2dLSFF1ZUNBdElHVXVlQ2tnS2lCdUxDQjBhR2x6TG5rZ1BTQmxMbmtnS3lBb2RDNTVJQzBnWlM1NUtTQXFJRzRzSUhSb2FYTXVlaUE5SUdVdWVpQXJJQ2gwTG5vZ0xTQmxMbm9wSUNvZ2Jpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnliM056S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbU55YjNOektDa2dibTkzSUc5dWJIa2dZV05qWlhCMGN5QnZibVVnWVhKbmRXMWxiblF1SUZWelpTQXVZM0p2YzNOV1pXTjBiM0p6S0NCaExDQmlJQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTVqY205emMxWmxZM1J2Y25Nb1pTd2dkQ2twSURvZ2RHaHBjeTVqY205emMxWmxZM1J2Y25Nb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpjbTl6YzFabFkzUnZjbk1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzU0TENCcElEMGdaUzU1TENCeUlEMGdaUzU2TENCdklEMGdkQzU0TENCaElEMGdkQzU1TENCc0lEMGdkQzU2T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuZ2dQU0JwSUNvZ2JDQXRJSElnS2lCaExDQjBhR2x6TG5rZ1BTQnlJQ29nYnlBdElHNGdLaUJzTENCMGFHbHpMbm9nUFNCdUlDb2dZU0F0SUdrZ0tpQnZMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjSEp2YW1WamRFOXVWbVZqZEc5eUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1YkdWdVozUm9VM0VvS1RzS0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ01Da2djbVYwZFhKdUlIUm9hWE11YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWtiM1FvZEdocGN5a2dMeUIwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZjSGtvWlNrdWJYVnNkR2x3YkhsVFkyRnNZWElvYmlrN0NpQWdJQ0I5Q2lBZ0lDQndjbTlxWldOMFQyNVFiR0Z1WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMXZMbU52Y0hrb2RHaHBjeWt1Y0hKdmFtVmpkRTl1Vm1WamRHOXlLR1VwTENCMGFHbHpMbk4xWWloTmJ5azdDaUFnSUNCOUNpQWdJQ0J5Wldac1pXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpkV0lvVFc4dVkyOXdlU2hsS1M1dGRXeDBhWEJzZVZOallXeGhjaWd5SUNvZ2RHaHBjeTVrYjNRb1pTa3BLVHNLSUNBZ0lIMEtJQ0FnSUdGdVoyeGxWRzhvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1RXRjBhQzV6Y1hKMEtIUm9hWE11YkdWdVozUm9VM0VvS1NBcUlHVXViR1Z1WjNSb1UzRW9LU2s3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SURBcElISmxkSFZ5YmlCTllYUm9MbEJKSUM4Z01qc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11Wkc5MEtHVXBJQzhnZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnVFdGMGFDNWhZMjl6S0cxMEtHNHNJQzB4TENBeEtTazdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzV6Y1hKMEtIUm9hWE11WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrcE93b2dJQ0FnZlFvZ0lDQWdaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NTRJQzBnWlM1NExDQnVJRDBnZEdocGN5NTVJQzBnWlM1NUxDQnBJRDBnZEdocGN5NTZJQzBnWlM1Nk93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElDb2dkQ0FySUc0Z0tpQnVJQ3NnYVNBcUlHazdDaUFnSUNCOUNpQWdJQ0J0WVc1b1lYUjBZVzVFYVhOMFlXNWpaVlJ2S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoWW5Nb2RHaHBjeTU0SUMwZ1pTNTRLU0FySUUxaGRHZ3VZV0p6S0hSb2FYTXVlU0F0SUdVdWVTa2dLeUJOWVhSb0xtRmljeWgwYUdsekxub2dMU0JsTG5vcE93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWTndhR1Z5YVdOaGJDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBSbkp2YlZOd2FHVnlhV05oYkVOdmIzSmtjeWhsTG5KaFpHbDFjeXdnWlM1d2FHa3NJR1V1ZEdobGRHRXBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVk53YUdWeWFXTmhiRU52YjNKa2N5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQk5ZWFJvTG5OcGJpaDBLU0FxSUdVN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVlQ0E5SUdrZ0tpQk5ZWFJvTG5OcGJpaHVLU3dnZEdocGN5NTVJRDBnVFdGMGFDNWpiM01vZENrZ0tpQmxMQ0IwYUdsekxub2dQU0JwSUNvZ1RXRjBhQzVqYjNNb2Jpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEzbHNhVzVrY21sallXd29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkRVp5YjIxRGVXeHBibVJ5YVdOaGJFTnZiM0prY3lobExuSmhaR2wxY3l3Z1pTNTBhR1YwWVN3Z1pTNTVLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFEZVd4cGJtUnlhV05oYkVOdmIzSmtjeWhsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJR1VnS2lCTllYUm9Mbk5wYmloMEtTd2dkR2hwY3k1NUlEMGdiaXdnZEdocGN5NTZJRDBnWlNBcUlFMWhkR2d1WTI5ektIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZUNBOUlIUmJNVEpkTENCMGFHbHpMbmtnUFNCMFd6RXpYU3dnZEdocGN5NTZJRDBnZEZzeE5GMHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFRXRjBjbWw0VTJOaGJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLR1VzSURBcExteGxibWQwYUNncExDQnVJRDBnZEdocGN5NXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLR1VzSURFcExteGxibWQwYUNncExDQnBJRDBnZEdocGN5NXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLR1VzSURJcExteGxibWQwYUNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmdnUFNCMExDQjBhR2x6TG5rZ1BTQnVMQ0IwYUdsekxub2dQU0JwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpuSnZiVUZ5Y21GNUtHVXVaV3hsYldWdWRITXNJSFFnS2lBMEtUc0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMU5ZWFJ5YVhnelEyOXNkVzF1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bWNtOXRRWEp5WVhrb1pTNWxiR1Z0Wlc1MGN5d2dkQ0FxSURNcE93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzU0SUQwOVBTQjBhR2x6TG5nZ0ppWWdaUzU1SUQwOVBTQjBhR2x6TG5rZ0ppWWdaUzU2SUQwOVBTQjBhR2x6TG5vN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UVhKeVlYa29aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1NElEMGdaVnQwWFN3Z2RHaHBjeTU1SUQwZ1pWdDBJQ3NnTVYwc0lIUm9hWE11ZWlBOUlHVmJkQ0FySURKZExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUJjbkpoZVNobElEMGdXMTBzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1ZiZEYwZ1BTQjBhR2x6TG5nc0lHVmJkQ0FySURGZElEMGdkR2hwY3k1NUxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdWVpd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUlDRTlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lCdlptWnpaWFFnYUdGeklHSmxaVzRnY21WdGIzWmxaQ0JtY205dElDNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLQ2t1SWlrc0lIUm9hWE11ZUNBOUlHVXVaMlYwV0NoMEtTd2dkR2hwY3k1NUlEMGdaUzVuWlhSWktIUXBMQ0IwYUdsekxub2dQU0JsTG1kbGRGb29kQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5WVc1a2IyMG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRTFoZEdndWNtRnVaRzl0S0Nrc0lIUm9hWE11ZVNBOUlFMWhkR2d1Y21GdVpHOXRLQ2tzSUhSb2FYTXVlaUE5SUUxaGRHZ3VjbUZ1Wkc5dEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnlZVzVrYjIxRWFYSmxZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQW9UV0YwYUM1eVlXNWtiMjBvS1NBdElDNDFLU0FxSURJc0lIUWdQU0JOWVhSb0xuSmhibVJ2YlNncElDb2dUV0YwYUM1UVNTQXFJRElzSUc0Z1BTQk5ZWFJvTG5OeGNuUW9NU0F0SUdVZ0tpb2dNaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWVDQTlJRzRnS2lCTllYUm9MbU52Y3loMEtTd2dkR2hwY3k1NUlEMGdiaUFxSUUxaGRHZ3VjMmx1S0hRcExDQjBhR2x6TG5vZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdLbHRUZVcxaWIyd3VhWFJsY21GMGIzSmRLQ2tnZXdvZ0lDQWdJQ0FnSUhscFpXeGtJSFJvYVhNdWVDd2dlV2xsYkdRZ2RHaHBjeTU1TENCNWFXVnNaQ0IwYUdsekxubzdDaUFnSUNCOUNuMDdDazB1Y0hKdmRHOTBlWEJsTG1selZtVmpkRzl5TXlBOUlDRXdPd3AyWVhJZ1RXOGdQU0J1WlhjZ1RTd2dlV3dnUFNCdVpYY2daM1FzSUV4MElEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCTktERWdMeUF3TENBeElDOGdNQ3dnTVNBdklEQXBMQ0IwSUQwZ2JtVjNJRTBvTFRFZ0x5QXdMQ0F0TVNBdklEQXNJQzB4SUM4Z01Da3Bld29nSUNBZ0lDQWdJSFJvYVhNdWJXbHVJRDBnWlN3Z2RHaHBjeTV0WVhnZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1WTI5d2VTaGxLU3dnZEdocGN5NXRZWGd1WTI5d2VTaDBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMUJjbkpoZVNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQXhJQzhnTUN3Z2JpQTlJREVnTHlBd0xDQnBJRDBnTVNBdklEQXNJSElnUFNBdE1TQXZJREFzSUc4Z1BTQXRNU0F2SURBc0lHRWdQU0F0TVNBdklEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTUN3Z1l5QTlJR1V1YkdWdVozUm9PeUJzSUR3Z1l6c2diQ0FyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JsVzJ4ZExDQjFJRDBnWlZ0c0lDc2dNVjBzSUdRZ1BTQmxXMndnS3lBeVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUNBOElIUWdKaVlnS0hRZ1BTQm9LU3dnZFNBOElHNGdKaVlnS0c0Z1BTQjFLU3dnWkNBOElHa2dKaVlnS0drZ1BTQmtLU3dnYUNBK0lISWdKaVlnS0hJZ1BTQm9LU3dnZFNBK0lHOGdKaVlnS0c4Z1BTQjFLU3dnWkNBK0lHRWdKaVlnS0dFZ1BTQmtLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbk5sZENoMExDQnVMQ0JwS1N3Z2RHaHBjeTV0WVhndWMyVjBLSElzSUc4c0lHRXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQXhJQzhnTUN3Z2JpQTlJREVnTHlBd0xDQnBJRDBnTVNBdklEQXNJSElnUFNBdE1TQXZJREFzSUc4Z1BTQXRNU0F2SURBc0lHRWdQU0F0TVNBdklEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTUN3Z1l5QTlJR1V1WTI5MWJuUTdJR3dnUENCak95QnNLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHVXVaMlYwV0Noc0tTd2dkU0E5SUdVdVoyVjBXU2hzS1N3Z1pDQTlJR1V1WjJWMFdpaHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDQThJSFFnSmlZZ0tIUWdQU0JvS1N3Z2RTQThJRzRnSmlZZ0tHNGdQU0IxS1N3Z1pDQThJR2tnSmlZZ0tHa2dQU0JrS1N3Z2FDQStJSElnSmlZZ0tISWdQU0JvS1N3Z2RTQStJRzhnSmlZZ0tHOGdQU0IxS1N3Z1pDQStJR0VnSmlZZ0tHRWdQU0JrS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG5ObGRDaDBMQ0J1TENCcEtTd2dkR2hwY3k1dFlYZ3VjMlYwS0hJc0lHOHNJR0VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFJuSnZiVkJ2YVc1MGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXRZV3RsUlcxd2RIa29LVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnWlM1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGRHaHBjeTVsZUhCaGJtUkNlVkJ2YVc1MEtHVmJkRjBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVTmxiblJsY2tGdVpGTnBlbVVvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdTbWt1WTI5d2VTaDBLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VOU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbU52Y0hrb1pTa3VjM1ZpS0c0cExDQjBhR2x6TG0xaGVDNWpiM0I1S0dVcExtRmtaQ2h1S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFQWW1wbFkzUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMWhhMlZGYlhCMGVTZ3BMQ0IwYUdsekxtVjRjR0Z1WkVKNVQySnFaV04wS0dVcE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1amIzQjVLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3VZMjl3ZVNobExtMWhlQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J0WVd0bFJXMXdkSGtvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG5nZ1BTQjBhR2x6TG0xcGJpNTVJRDBnZEdocGN5NXRhVzR1ZWlBOUlERWdMeUF3TENCMGFHbHpMbTFoZUM1NElEMGdkR2hwY3k1dFlYZ3VlU0E5SUhSb2FYTXViV0Y0TG5vZ1BTQXRNU0F2SURBc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCcGMwVnRjSFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFoZUM1NElEd2dkR2hwY3k1dGFXNHVlQ0I4ZkNCMGFHbHpMbTFoZUM1NUlEd2dkR2hwY3k1dGFXNHVlU0I4ZkNCMGFHbHpMbTFoZUM1NklEd2dkR2hwY3k1dGFXNHVlanNLSUNBZ0lIMEtJQ0FnSUdkbGRFTmxiblJsY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhORmJYQjBlU2dwSUQ4Z1pTNXpaWFFvTUN3Z01Dd2dNQ2tnT2lCbExtRmtaRlpsWTNSdmNuTW9kR2hwY3k1dGFXNHNJSFJvYVhNdWJXRjRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VOU2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlRhWHBsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYzBWdGNIUjVLQ2tnUHlCbExuTmxkQ2d3TENBd0xDQXdLU0E2SUdVdWMzVmlWbVZqZEc5eWN5aDBhR2x6TG0xaGVDd2dkR2hwY3k1dGFXNHBPd29nSUNBZ2ZRb2dJQ0FnWlhod1lXNWtRbmxRYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbTFwYmlobEtTd2dkR2hwY3k1dFlYZ3ViV0Y0S0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sV1pXTjBiM0lvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1emRXSW9aU2tzSUhSb2FYTXViV0Y0TG1Ga1pDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Y0Y0dGdVpFSjVVMk5oYkdGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVZV1JrVTJOaGJHRnlLQzFsS1N3Z2RHaHBjeTV0WVhndVlXUmtVMk5oYkdGeUtHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWGh3WVc1a1FubFBZbXBsWTNRb1pTa2dld29nSUNBZ0lDQWdJR1V1ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRFc0lDRXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1WjJWdmJXVjBjbms3Q2lBZ0lDQWdJQ0FnZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwTG1KdmRXNWthVzVuUW05NElEMDlQU0J1ZFd4c0lDWW1JSFF1WTI5dGNIVjBaVUp2ZFc1a2FXNW5RbTk0S0Nrc0lHSnZMbU52Y0hrb2RDNWliM1Z1WkdsdVowSnZlQ2tzSUdKdkxtRndjR3g1VFdGMGNtbDROQ2hsTG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1MWJtbHZiaWhpYnlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3TENCeUlEMGdiaTVzWlc1bmRHZzdJR2tnUENCeU95QnBLeXNwZEdocGN5NWxlSEJoYm1SQ2VVOWlhbVZqZENodVcybGRLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZiblJoYVc1elVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaEtHVXVlQ0E4SUhSb2FYTXViV2x1TG5nZ2ZId2daUzU0SUQ0Z2RHaHBjeTV0WVhndWVDQjhmQ0JsTG5rZ1BDQjBhR2x6TG0xcGJpNTVJSHg4SUdVdWVTQStJSFJvYVhNdWJXRjRMbmtnZkh3Z1pTNTZJRHdnZEdocGN5NXRhVzR1ZWlCOGZDQmxMbm9nUGlCMGFHbHpMbTFoZUM1NktUc0tJQ0FnSUgwS0lDQWdJR052Ym5SaGFXNXpRbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWVDQThQU0JsTG0xcGJpNTRJQ1ltSUdVdWJXRjRMbmdnUEQwZ2RHaHBjeTV0WVhndWVDQW1KaUIwYUdsekxtMXBiaTU1SUR3OUlHVXViV2x1TG5rZ0ppWWdaUzV0WVhndWVTQThQU0IwYUdsekxtMWhlQzU1SUNZbUlIUm9hWE11YldsdUxub2dQRDBnWlM1dGFXNHVlaUFtSmlCbExtMWhlQzU2SUR3OUlIUm9hWE11YldGNExubzdDaUFnSUNCOUNpQWdJQ0JuWlhSUVlYSmhiV1YwWlhJb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG5ObGRDZ29aUzU0SUMwZ2RHaHBjeTV0YVc0dWVDa2dMeUFvZEdocGN5NXRZWGd1ZUNBdElIUm9hWE11YldsdUxuZ3BMQ0FvWlM1NUlDMGdkR2hwY3k1dGFXNHVlU2tnTHlBb2RHaHBjeTV0WVhndWVTQXRJSFJvYVhNdWJXbHVMbmtwTENBb1pTNTZJQzBnZEdocGN5NXRhVzR1ZWlrZ0x5QW9kR2hwY3k1dFlYZ3VlaUF0SUhSb2FYTXViV2x1TG5vcEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhLR1V1YldGNExuZ2dQQ0IwYUdsekxtMXBiaTU0SUh4OElHVXViV2x1TG5nZ1BpQjBhR2x6TG0xaGVDNTRJSHg4SUdVdWJXRjRMbmtnUENCMGFHbHpMbTFwYmk1NUlIeDhJR1V1YldsdUxua2dQaUIwYUdsekxtMWhlQzU1SUh4OElHVXViV0Y0TG5vZ1BDQjBhR2x6TG0xcGJpNTZJSHg4SUdVdWJXbHVMbm9nUGlCMGFHbHpMbTFoZUM1NktUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5UY0dobGNtVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnNZVzF3VUc5cGJuUW9aUzVqWlc1MFpYSXNJRXBwS1N3Z1Nta3VaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aUzVqWlc1MFpYSXBJRHc5SUdVdWNtRmthWFZ6SUNvZ1pTNXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpVR3hoYm1Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMExDQnVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbTV2Y20xaGJDNTRJRDRnTUNBL0lDaDBJRDBnWlM1dWIzSnRZV3d1ZUNBcUlIUm9hWE11YldsdUxuZ3NJRzRnUFNCbExtNXZjbTFoYkM1NElDb2dkR2hwY3k1dFlYZ3VlQ2tnT2lBb2RDQTlJR1V1Ym05eWJXRnNMbmdnS2lCMGFHbHpMbTFoZUM1NExDQnVJRDBnWlM1dWIzSnRZV3d1ZUNBcUlIUm9hWE11YldsdUxuZ3BMQ0JsTG01dmNtMWhiQzU1SUQ0Z01DQS9JQ2gwSUNzOUlHVXVibTl5YldGc0xua2dLaUIwYUdsekxtMXBiaTU1TENCdUlDczlJR1V1Ym05eWJXRnNMbmtnS2lCMGFHbHpMbTFoZUM1NUtTQTZJQ2gwSUNzOUlHVXVibTl5YldGc0xua2dLaUIwYUdsekxtMWhlQzU1TENCdUlDczlJR1V1Ym05eWJXRnNMbmtnS2lCMGFHbHpMbTFwYmk1NUtTd2daUzV1YjNKdFlXd3VlaUErSURBZ1B5QW9kQ0FyUFNCbExtNXZjbTFoYkM1NklDb2dkR2hwY3k1dGFXNHVlaXdnYmlBclBTQmxMbTV2Y20xaGJDNTZJQ29nZEdocGN5NXRZWGd1ZWlrZ09pQW9kQ0FyUFNCbExtNXZjbTFoYkM1NklDb2dkR2hwY3k1dFlYZ3VlaXdnYmlBclBTQmxMbTV2Y20xaGJDNTZJQ29nZEdocGN5NXRhVzR1ZWlrc0lIUWdQRDBnTFdVdVkyOXVjM1JoYm5RZ0ppWWdiaUErUFNBdFpTNWpiMjV6ZEdGdWREc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5VY21saGJtZHNaU2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFYTkZiWEIwZVNncEtTQnlaWFIxY200Z0lURTdDaUFnSUNBZ0lDQWdkR2hwY3k1blpYUkRaVzUwWlhJb1dXa3BMQ0JYY2k1emRXSldaV04wYjNKektIUm9hWE11YldGNExDQlphU2tzSUc1cExuTjFZbFpsWTNSdmNuTW9aUzVoTENCWmFTa3NJR2xwTG5OMVlsWmxZM1J2Y25Nb1pTNWlMQ0JaYVNrc0lISnBMbk4xWWxabFkzUnZjbk1vWlM1akxDQlphU2tzSUhWdUxuTjFZbFpsWTNSdmNuTW9hV2tzSUc1cEtTd2daRzR1YzNWaVZtVmpkRzl5Y3loeWFTd2dhV2twTENCUWJpNXpkV0pXWldOMGIzSnpLRzVwTENCeWFTazdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzExYmk1NkxBb2dJQ0FnSUNBZ0lDQWdJQ0IxYmk1NUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRaRzR1ZWl3S0lDQWdJQ0FnSUNBZ0lDQWdaRzR1ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xWQnVMbm9zQ2lBZ0lDQWdJQ0FnSUNBZ0lGQnVMbmtzQ2lBZ0lDQWdJQ0FnSUNBZ0lIVnVMbm9zQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxMWJpNTRMQW9nSUNBZ0lDQWdJQ0FnSUNCa2JpNTZMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0Wkc0dWVDd0tJQ0FnSUNBZ0lDQWdJQ0FnVUc0dWVpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVkJ1TG5nc0NpQWdJQ0FnSUNBZ0lDQWdJQzExYmk1NUxBb2dJQ0FnSUNBZ0lDQWdJQ0IxYmk1NExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRaRzR1ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdaRzR1ZUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xWQnVMbmtzQ2lBZ0lDQWdJQ0FnSUNBZ0lGQnVMbmdzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhkMjhvZEN3Z2Jta3NJR2xwTENCeWFTd2dWM0lwSUh4OElDaDBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFN3Z0lYZHZLSFFzSUc1cExDQnBhU3dnY21rc0lGZHlLU2tnUHlBaE1TQTZJQ2h4Y2k1amNtOXpjMVpsWTNSdmNuTW9kVzRzSUdSdUtTd2dkQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdjWEl1ZUN3S0lDQWdJQ0FnSUNBZ0lDQWdjWEl1ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdjWEl1ZWdvZ0lDQWdJQ0FnSUYwc0lIZHZLSFFzSUc1cExDQnBhU3dnY21rc0lGZHlLU2s3Q2lBZ0lDQjlDaUFnSUNCamJHRnRjRkJ2YVc1MEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1amIzQjVLR1VwTG1Oc1lXMXdLSFJvYVhNdWJXbHVMQ0IwYUdsekxtMWhlQ2s3Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlVHOXBiblFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCS2FTNWpiM0I1S0dVcExtTnNZVzF3S0hSb2FYTXViV2x1TENCMGFHbHpMbTFoZUNrdWMzVmlLR1VwTG14bGJtZDBhQ2dwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBRbTkxYm1ScGJtZFRjR2hsY21Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRFTmxiblJsY2lobExtTmxiblJsY2lrc0lHVXVjbUZrYVhWeklEMGdkR2hwY3k1blpYUlRhWHBsS0VwcEtTNXNaVzVuZEdnb0tTQXFJQzQxTENCbE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXRhVzR1YldGNEtHVXViV2x1S1N3Z2RHaHBjeTV0WVhndWJXbHVLR1V1YldGNEtTd2dkR2hwY3k1cGMwVnRjSFI1S0NrZ0ppWWdkR2hwY3k1dFlXdGxSVzF3ZEhrb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV0Y0S0dVdWJXRjRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0Z3Y0d4NVRXRjBjbWw0TkNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVhORmJYQjBlU2dwSUQ4Z2RHaHBjeUE2SUNna2RGc3dYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGc3hYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGc3lYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGc3pYUzV6WlhRb2RHaHBjeTV0YVc0dWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGczBYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGczFYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dGFXNHVlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGczJYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRhVzR1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENBa2RGczNYUzV6WlhRb2RHaHBjeTV0WVhndWVDd2dkR2hwY3k1dFlYZ3VlU3dnZEdocGN5NXRZWGd1ZWlrdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMGFHbHpMbk5sZEVaeWIyMVFiMmx1ZEhNb0pIUXBMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViV2x1TG1Ga1pDaGxLU3dnZEdocGN5NXRZWGd1WVdSa0tHVXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzV0YVc0dVpYRjFZV3h6S0hSb2FYTXViV2x1S1NBbUppQmxMbTFoZUM1bGNYVmhiSE1vZEdocGN5NXRZWGdwT3dvZ0lDQWdmUXA5T3dwTWRDNXdjbTkwYjNSNWNHVXVhWE5DYjNneklEMGdJVEE3Q25aaGNpQWtkQ0E5SUZzS0lDQWdJRzVsZHlCTkxBb2dJQ0FnYm1WM0lFMHNDaUFnSUNCdVpYY2dUU3dLSUNBZ0lHNWxkeUJOTEFvZ0lDQWdibVYzSUUwc0NpQWdJQ0J1WlhjZ1RTd0tJQ0FnSUc1bGR5Qk5MQW9nSUNBZ2JtVjNJRTBLWFN3Z1Nta2dQU0J1WlhjZ1RTd2dZbThnUFNCdVpYY2dUSFFzSUc1cElEMGdibVYzSUUwc0lHbHBJRDBnYm1WM0lFMHNJSEpwSUQwZ2JtVjNJRTBzSUhWdUlEMGdibVYzSUUwc0lHUnVJRDBnYm1WM0lFMHNJRkJ1SUQwZ2JtVjNJRTBzSUZscElEMGdibVYzSUUwc0lGZHlJRDBnYm1WM0lFMHNJSEZ5SUQwZ2JtVjNJRTBzSUVsdUlEMGdibVYzSUUwN0NtWjFibU4wYVc5dUlIZHZLSE1zSUdVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCekxteGxibWQwYUNBdElETTdJSElnUEQwZ2J6c2djaUFyUFNBektYc0tJQ0FnSUNBZ0lDQkpiaTVtY205dFFYSnlZWGtvY3l3Z2NpazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQnBMbmdnS2lCTllYUm9MbUZpY3loSmJpNTRLU0FySUdrdWVTQXFJRTFoZEdndVlXSnpLRWx1TG5rcElDc2dhUzU2SUNvZ1RXRjBhQzVoWW5Nb1NXNHVlaWtzSUd3Z1BTQmxMbVJ2ZENoSmJpa3NJR01nUFNCMExtUnZkQ2hKYmlrc0lHZ2dQU0J1TG1SdmRDaEpiaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMWhkR2d1YldGNEtDMU5ZWFJvTG0xaGVDaHNMQ0JqTENCb0tTd2dUV0YwYUM1dGFXNG9iQ3dnWXl3Z2FDa3BJRDRnWVNrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlDRXdPd3A5Q25aaGNpQmxaaUE5SUc1bGR5Qk1kQ3dnZG13Z1BTQnVaWGNnVFN3Z1dISWdQU0J1WlhjZ1RTd2dVMjhnUFNCdVpYY2dUU3dnUVc0Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUUwc0lIUWdQU0F0TVNsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVqWlc1MFpYSWdQU0JsTENCMGFHbHpMbkpoWkdsMWN5QTlJSFE3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5sYm5SbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5KaFpHbDFjeUE5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VUc5cGJuUnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WTJWdWRHVnlPd29nSUNBZ0lDQWdJSFFnSVQwOUlIWnZhV1FnTUNBL0lHNHVZMjl3ZVNoMEtTQTZJR1ZtTG5ObGRFWnliMjFRYjJsdWRITW9aU2t1WjJWMFEyVnVkR1Z5S0c0cE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdaUzVzWlc1bmRHZzdJSElnUENCdk95QnlLeXNwYVNBOUlFMWhkR2d1YldGNEtHa3NJRzR1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlZ0eVhTa3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5KaFpHbDFjeUE5SUUxaGRHZ3VjM0Z5ZENocEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5sYm5SbGNpNWpiM0I1S0dVdVkyVnVkR1Z5S1N3Z2RHaHBjeTV5WVdScGRYTWdQU0JsTG5KaFpHbDFjeXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2x6Ulcxd2RIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtRmthWFZ6SUR3Z01Ec0tJQ0FnSUgwS0lDQWdJRzFoYTJWRmJYQjBlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpaVzUwWlhJdWMyVjBLREFzSURBc0lEQXBMQ0IwYUdsekxuSmhaR2wxY3lBOUlDMHhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTlFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9kR2hwY3k1alpXNTBaWElwSUR3OUlIUm9hWE11Y21Ga2FYVnpJQ29nZEdocGN5NXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbVJwYzNSaGJtTmxWRzhvZEdocGN5NWpaVzUwWlhJcElDMGdkR2hwY3k1eVlXUnBkWE03Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelUzQm9aWEpsS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y21Ga2FYVnpJQ3NnWlM1eVlXUnBkWE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WTJWdWRHVnlMbVJwYzNSaGJtTmxWRzlUY1hWaGNtVmtLSFJvYVhNdVkyVnVkR1Z5S1NBOFBTQjBJQ29nZERzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtbHVkR1Z5YzJWamRITlRjR2hsY21Vb2RHaHBjeWs3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelVHeGhibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCTllYUm9MbUZpY3lobExtUnBjM1JoYm1ObFZHOVFiMmx1ZENoMGFHbHpMbU5sYm5SbGNpa3BJRHc5SUhSb2FYTXVjbUZrYVhWek93b2dJQ0FnZlFvZ0lDQWdZMnhoYlhCUWIybHVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1ObGJuUmxjaTVrYVhOMFlXNWpaVlJ2VTNGMVlYSmxaQ2hsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1amIzQjVLR1VwTENCdUlENGdkR2hwY3k1eVlXUnBkWE1nS2lCMGFHbHpMbkpoWkdsMWN5QW1KaUFvZEM1emRXSW9kR2hwY3k1alpXNTBaWElwTG01dmNtMWhiR2w2WlNncExDQjBMbTExYkhScGNHeDVVMk5oYkdGeUtIUm9hWE11Y21Ga2FYVnpLUzVoWkdRb2RHaHBjeTVqWlc1MFpYSXBLU3dnZERzS0lDQWdJSDBLSUNBZ0lHZGxkRUp2ZFc1a2FXNW5RbTk0S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYzBWdGNIUjVLQ2tnUHlBb1pTNXRZV3RsUlcxd2RIa29LU3dnWlNrZ09pQW9aUzV6WlhRb2RHaHBjeTVqWlc1MFpYSXNJSFJvYVhNdVkyVnVkR1Z5S1N3Z1pTNWxlSEJoYm1SQ2VWTmpZV3hoY2loMGFHbHpMbkpoWkdsMWN5a3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpaVzUwWlhJdVlYQndiSGxOWVhSeWFYZzBLR1VwTENCMGFHbHpMbkpoWkdsMWN5QTlJSFJvYVhNdWNtRmthWFZ6SUNvZ1pTNW5aWFJOWVhoVFkyRnNaVTl1UVhocGN5Z3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Oc1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpaVzUwWlhJdVlXUmtLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhod1lXNWtRbmxRYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnVTI4dWMzVmlWbVZqZEc5eWN5aGxMQ0IwYUdsekxtTmxiblJsY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCVGJ5NXNaVzVuZEdoVGNTZ3BPd29nSUNBZ0lDQWdJR2xtSUNoMElENGdkR2hwY3k1eVlXUnBkWE1nS2lCMGFHbHpMbkpoWkdsMWN5a2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUUxaGRHZ3VjM0Z5ZENoMEtTd2dhU0E5SUNodUlDMGdkR2hwY3k1eVlXUnBkWE1wSUNvZ0xqVTdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZMlZ1ZEdWeUxtRmtaQ2hUYnk1dGRXeDBhWEJzZVZOallXeGhjaWhwSUM4Z2Jpa3BMQ0IwYUdsekxuSmhaR2wxY3lBclBTQnBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWlc1MFpYSXVaWEYxWVd4ektHVXVZMlZ1ZEdWeUtTQTlQVDBnSVRBZ1B5QlljaTV6WlhRb01Dd2dNQ3dnTVNrdWJYVnNkR2x3YkhsVFkyRnNZWElvWlM1eVlXUnBkWE1wSURvZ1dISXVjM1ZpVm1WamRHOXljeWhsTG1ObGJuUmxjaXdnZEdocGN5NWpaVzUwWlhJcExtNXZjbTFoYkdsNlpTZ3BMbTExYkhScGNHeDVVMk5oYkdGeUtHVXVjbUZrYVhWektTd2dkR2hwY3k1bGVIQmhibVJDZVZCdmFXNTBLSFpzTG1OdmNIa29aUzVqWlc1MFpYSXBMbUZrWkNoWWNpa3BMQ0IwYUdsekxtVjRjR0Z1WkVKNVVHOXBiblFvZG13dVkyOXdlU2hsTG1ObGJuUmxjaWt1YzNWaUtGaHlLU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsY1hWaGJITW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1ObGJuUmxjaTVsY1hWaGJITW9kR2hwY3k1alpXNTBaWElwSUNZbUlHVXVjbUZrYVhWeklEMDlQU0IwYUdsekxuSmhaR2wxY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjBzSUdwMElEMGdibVYzSUUwc0lGUnZJRDBnYm1WM0lFMHNJRXB5SUQwZ2JtVjNJRTBzSUdadUlEMGdibVYzSUUwc0lFVnZJRDBnYm1WM0lFMHNJRmx5SUQwZ2JtVjNJRTBzSUVGdklEMGdibVYzSUUwc0lFTnVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5MQ0IwSUQwZ2JtVjNJRTBvTUN3Z01Dd2dMVEVwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTl5YVdkcGJpQTlJR1VzSUhSb2FYTXVaR2x5WldOMGFXOXVJRDBnZERzS0lDQWdJSDBLSUNBZ0lITmxkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YjNKcFoybHVMbU52Y0hrb1pTa3NJSFJvYVhNdVpHbHlaV04wYVc5dUxtTnZjSGtvZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjbWxuYVc0dVkyOXdlU2hsTG05eWFXZHBiaWtzSUhSb2FYTXVaR2x5WldOMGFXOXVMbU52Y0hrb1pTNWthWEpsWTNScGIyNHBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbU52Y0hrb2RHaHBjeTVrYVhKbFkzUnBiMjRwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR1VwTG1Ga1pDaDBhR2x6TG05eWFXZHBiaWs3Q2lBZ0lDQjlDaUFnSUNCc2IyOXJRWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwY21WamRHbHZiaTVqYjNCNUtHVXBMbk4xWWloMGFHbHpMbTl5YVdkcGJpa3VibTl5YldGc2FYcGxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J5WldOaGMzUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtOXlhV2RwYmk1amIzQjVLSFJvYVhNdVlYUW9aU3dnYW5RcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiM05sYzNSUWIybHVkRlJ2VUc5cGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUXVjM1ZpVm1WamRHOXljeWhsTENCMGFHbHpMbTl5YVdkcGJpazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBMbVJ2ZENoMGFHbHpMbVJwY21WamRHbHZiaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzRnUENBd0lEOGdkQzVqYjNCNUtIUm9hWE11YjNKcFoybHVLU0E2SUhRdVkyOXdlU2gwYUdsekxtUnBjbVZqZEdsdmJpa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2Jpa3VZV1JrS0hSb2FYTXViM0pwWjJsdUtUc0tJQ0FnSUgwS0lDQWdJR1JwYzNSaGJtTmxWRzlRYjJsdWRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2gwYUdsekxtUnBjM1JoYm1ObFUzRlViMUJ2YVc1MEtHVXBLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVTNGVWIxQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHcDBMbk4xWWxabFkzUnZjbk1vWlN3Z2RHaHBjeTV2Y21sbmFXNHBMbVJ2ZENoMGFHbHpMbVJwY21WamRHbHZiaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnUENBd0lEOGdkR2hwY3k1dmNtbG5hVzR1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWlNrZ09pQW9hblF1WTI5d2VTaDBhR2x6TG1ScGNtVmpkR2x2YmlrdWJYVnNkR2x3YkhsVFkyRnNZWElvZENrdVlXUmtLSFJvYVhNdWIzSnBaMmx1S1N3Z2FuUXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9aU2twT3dvZ0lDQWdmUW9nSUNBZ1pHbHpkR0Z1WTJWVGNWUnZVMlZuYldWdWRDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnVkc4dVkyOXdlU2hsS1M1aFpHUW9kQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9MalVwTENCS2NpNWpiM0I1S0hRcExuTjFZaWhsS1M1dWIzSnRZV3hwZW1Vb0tTd2dabTR1WTI5d2VTaDBhR2x6TG05eWFXZHBiaWt1YzNWaUtGUnZLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJR1V1WkdsemRHRnVZMlZVYnloMEtTQXFJQzQxTENCdklEMGdMWFJvYVhNdVpHbHlaV04wYVc5dUxtUnZkQ2hLY2lrc0lHRWdQU0JtYmk1a2IzUW9kR2hwY3k1a2FYSmxZM1JwYjI0cExDQnNJRDBnTFdadUxtUnZkQ2hLY2lrc0lHTWdQU0JtYmk1c1pXNW5kR2hUY1NncExDQm9JRDBnVFdGMGFDNWhZbk1vTVNBdElHOGdLaUJ2S1N3Z2RTd2daQ3dnWml3Z2JUc0tJQ0FnSUNBZ0lDQnBaaUFvYUNBK0lEQXBJR2xtSUNoMUlEMGdieUFxSUd3Z0xTQmhMQ0JrSUQwZ2J5QXFJR0VnTFNCc0xDQnRJRDBnY2lBcUlHZ3NJSFVnUGowZ01Da2dhV1lnS0dRZ1BqMGdMVzBwSUdsbUlDaGtJRHc5SUcwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0F4SUM4Z2FEc0tJQ0FnSUNBZ0lDQWdJQ0FnZFNBcVBTQjRMQ0JrSUNvOUlIZ3NJR1lnUFNCMUlDb2dLSFVnS3lCdklDb2daQ0FySURJZ0tpQmhLU0FySUdRZ0tpQW9ieUFxSUhVZ0t5QmtJQ3NnTWlBcUlHd3BJQ3NnWXpzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWkNBOUlISXNJSFVnUFNCTllYUm9MbTFoZUNnd0xDQXRLRzhnS2lCa0lDc2dZU2twTENCbUlEMGdMWFVnS2lCMUlDc2daQ0FxSUNoa0lDc2dNaUFxSUd3cElDc2dZenNLSUNBZ0lDQWdJQ0JsYkhObElHUWdQU0F0Y2l3Z2RTQTlJRTFoZEdndWJXRjRLREFzSUMwb2J5QXFJR1FnS3lCaEtTa3NJR1lnUFNBdGRTQXFJSFVnS3lCa0lDb2dLR1FnS3lBeUlDb2diQ2tnS3lCak93b2dJQ0FnSUNBZ0lHVnNjMlVnWkNBOFBTQXRiU0EvSUNoMUlEMGdUV0YwYUM1dFlYZ29NQ3dnTFNndGJ5QXFJSElnS3lCaEtTa3NJR1FnUFNCMUlENGdNQ0EvSUMxeUlEb2dUV0YwYUM1dGFXNG9UV0YwYUM1dFlYZ29MWElzSUMxc0tTd2djaWtzSUdZZ1BTQXRkU0FxSUhVZ0t5QmtJQ29nS0dRZ0t5QXlJQ29nYkNrZ0t5QmpLU0E2SUdRZ1BEMGdiU0EvSUNoMUlEMGdNQ3dnWkNBOUlFMWhkR2d1YldsdUtFMWhkR2d1YldGNEtDMXlMQ0F0YkNrc0lISXBMQ0JtSUQwZ1pDQXFJQ2hrSUNzZ01pQXFJR3dwSUNzZ1l5a2dPaUFvZFNBOUlFMWhkR2d1YldGNEtEQXNJQzBvYnlBcUlISWdLeUJoS1Nrc0lHUWdQU0IxSUQ0Z01DQS9JSElnT2lCTllYUm9MbTFwYmloTllYUm9MbTFoZUNndGNpd2dMV3dwTENCeUtTd2daaUE5SUMxMUlDb2dkU0FySUdRZ0tpQW9aQ0FySURJZ0tpQnNLU0FySUdNcE93b2dJQ0FnSUNBZ0lHVnNjMlVnWkNBOUlHOGdQaUF3SUQ4Z0xYSWdPaUJ5TENCMUlEMGdUV0YwYUM1dFlYZ29NQ3dnTFNodklDb2daQ0FySUdFcEtTd2daaUE5SUMxMUlDb2dkU0FySUdRZ0tpQW9aQ0FySURJZ0tpQnNLU0FySUdNN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0Z0ppWWdiaTVqYjNCNUtIUm9hWE11WkdseVpXTjBhVzl1S1M1dGRXeDBhWEJzZVZOallXeGhjaWgxS1M1aFpHUW9kR2hwY3k1dmNtbG5hVzRwTENCcElDWW1JR2t1WTI5d2VTaEtjaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9aQ2t1WVdSa0tGUnZLU3dnWmpzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRGTndhR1Z5WlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYW5RdWMzVmlWbVZqZEc5eWN5aGxMbU5sYm5SbGNpd2dkR2hwY3k1dmNtbG5hVzRwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYW5RdVpHOTBLSFJvYVhNdVpHbHlaV04wYVc5dUtTd2dhU0E5SUdwMExtUnZkQ2hxZENrZ0xTQnVJQ29nYml3Z2NpQTlJR1V1Y21Ga2FYVnpJQ29nWlM1eVlXUnBkWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tHa2dQaUJ5S1NCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlFMWhkR2d1YzNGeWRDaHlJQzBnYVNrc0lHRWdQU0J1SUMwZ2J5d2diQ0E5SUc0Z0t5QnZPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhJRHdnTUNBbUppQnNJRHdnTUNBL0lHNTFiR3dnT2lCaElEd2dNQ0EvSUhSb2FYTXVZWFFvYkN3Z2RDa2dPaUIwYUdsekxtRjBLR0VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMU53YUdWeVpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHbHpkR0Z1WTJWVGNWUnZVRzlwYm5Rb1pTNWpaVzUwWlhJcElEdzlJR1V1Y21Ga2FYVnpJQ29nWlM1eVlXUnBkWE03Q2lBZ0lDQjlDaUFnSUNCa2FYTjBZVzVqWlZSdlVHeGhibVVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNXViM0p0WVd3dVpHOTBLSFJvYVhNdVpHbHlaV04wYVc5dUtUc0tJQ0FnSUNBZ0lDQnBaaUFvZENBOVBUMGdNQ2tnY21WMGRYSnVJR1V1WkdsemRHRnVZMlZVYjFCdmFXNTBLSFJvYVhNdWIzSnBaMmx1S1NBOVBUMGdNQ0EvSURBZ09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnTFNoMGFHbHpMbTl5YVdkcGJpNWtiM1FvWlM1dWIzSnRZV3dwSUNzZ1pTNWpiMjV6ZEdGdWRDa2dMeUIwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1SUQ0OUlEQWdQeUJ1SURvZ2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUdsdWRHVnljMlZqZEZCc1lXNWxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WkdsemRHRnVZMlZVYjFCc1lXNWxLR1VwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1SUQwOVBTQnVkV3hzSUQ4Z2JuVnNiQ0E2SUhSb2FYTXVZWFFvYml3Z2RDazdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VUd4aGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1a2FYTjBZVzVqWlZSdlVHOXBiblFvZEdocGN5NXZjbWxuYVc0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMElEMDlQU0F3SUh4OElHVXVibTl5YldGc0xtUnZkQ2gwYUdsekxtUnBjbVZqZEdsdmJpa2dLaUIwSUR3Z01Ec0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkRUp2ZUNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTWdQU0F4SUM4Z2RHaHBjeTVrYVhKbFkzUnBiMjR1ZUN3Z2FDQTlJREVnTHlCMGFHbHpMbVJwY21WamRHbHZiaTU1TENCMUlEMGdNU0F2SUhSb2FYTXVaR2x5WldOMGFXOXVMbm9zSUdRZ1BTQjBhR2x6TG05eWFXZHBianNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZeUErUFNBd0lEOGdLRzRnUFNBb1pTNXRhVzR1ZUNBdElHUXVlQ2tnS2lCakxDQnBJRDBnS0dVdWJXRjRMbmdnTFNCa0xuZ3BJQ29nWXlrZ09pQW9iaUE5SUNobExtMWhlQzU0SUMwZ1pDNTRLU0FxSUdNc0lHa2dQU0FvWlM1dGFXNHVlQ0F0SUdRdWVDa2dLaUJqS1N3Z2FDQStQU0F3SUQ4Z0tISWdQU0FvWlM1dGFXNHVlU0F0SUdRdWVTa2dLaUJvTENCdklEMGdLR1V1YldGNExua2dMU0JrTG5rcElDb2dhQ2tnT2lBb2NpQTlJQ2hsTG0xaGVDNTVJQzBnWkM1NUtTQXFJR2dzSUc4Z1BTQW9aUzV0YVc0dWVTQXRJR1F1ZVNrZ0tpQm9LU3dnYmlBK0lHOGdmSHdnY2lBK0lHa2dmSHdnS0NoeUlENGdiaUI4ZkNCdUlDRTlQU0J1S1NBbUppQW9iaUE5SUhJcExDQW9ieUE4SUdrZ2ZId2dhU0FoUFQwZ2FTa2dKaVlnS0drZ1BTQnZLU3dnZFNBK1BTQXdJRDhnS0dFZ1BTQW9aUzV0YVc0dWVpQXRJR1F1ZWlrZ0tpQjFMQ0JzSUQwZ0tHVXViV0Y0TG5vZ0xTQmtMbm9wSUNvZ2RTa2dPaUFvWVNBOUlDaGxMbTFoZUM1NklDMGdaQzU2S1NBcUlIVXNJR3dnUFNBb1pTNXRhVzR1ZWlBdElHUXVlaWtnS2lCMUtTd2diaUErSUd3Z2ZId2dZU0ErSUdrcElIeDhJQ2dvWVNBK0lHNGdmSHdnYmlBaFBUMGdiaWtnSmlZZ0tHNGdQU0JoS1N3Z0tHd2dQQ0JwSUh4OElHa2dJVDA5SUdrcElDWW1JQ2hwSUQwZ2JDa3NJR2tnUENBd0tTQS9JRzUxYkd3Z09pQjBhR2x6TG1GMEtHNGdQajBnTUNBL0lHNGdPaUJwTENCMEtUc0tJQ0FnSUgwS0lDQWdJR2x1ZEdWeWMyVmpkSE5DYjNnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1sdWRHVnljMlZqZEVKdmVDaGxMQ0JxZENrZ0lUMDlJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUlVjbWxoYm1kc1pTaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ1JXOHVjM1ZpVm1WamRHOXljeWgwTENCbEtTd2dXWEl1YzNWaVZtVmpkRzl5Y3lodUxDQmxLU3dnUVc4dVkzSnZjM05XWldOMGIzSnpLRVZ2TENCWmNpazdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBhR2x6TG1ScGNtVmpkR2x2Ymk1a2IzUW9RVzhwTENCaE93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU2tnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJR0VnUFNBeE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9ieUE4SURBcElHRWdQU0F0TVN3Z2J5QTlJQzF2T3dvZ0lDQWdJQ0FnSUdWc2MyVWdjbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnWm00dWMzVmlWbVZqZEc5eWN5aDBhR2x6TG05eWFXZHBiaXdnWlNrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCaElDb2dkR2hwY3k1a2FYSmxZM1JwYjI0dVpHOTBLRmx5TG1OeWIzTnpWbVZqZEc5eWN5aG1iaXdnV1hJcEtUc0tJQ0FnSUNBZ0lDQnBaaUFvYkNBOElEQXBJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWVNBcUlIUm9hWE11WkdseVpXTjBhVzl1TG1SdmRDaEZieTVqY205emN5aG1iaWtwT3dvZ0lDQWdJQ0FnSUdsbUlDaGpJRHdnTUNCOGZDQnNJQ3NnWXlBK0lHOHBJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnTFdFZ0tpQm1iaTVrYjNRb1FXOHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQm9JRHdnTUNBL0lHNTFiR3dnT2lCMGFHbHpMbUYwS0dnZ0x5QnZMQ0J5S1RzS0lDQWdJSDBLSUNBZ0lHRndjR3g1VFdGMGNtbDROQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViM0pwWjJsdUxtRndjR3g1VFdGMGNtbDROQ2hsS1N3Z2RHaHBjeTVrYVhKbFkzUnBiMjR1ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXZjbWxuYVc0dVpYRjFZV3h6S0hSb2FYTXViM0pwWjJsdUtTQW1KaUJsTG1ScGNtVmpkR2x2Ymk1bGNYVmhiSE1vZEdocGN5NWthWEpsWTNScGIyNHBPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCMGFHbHpMbU52Ym5OMGNuVmpkRzl5S0NrdVkyOXdlU2gwYUdsektUc0tJQ0FnSUgwS2ZTd2djR1VnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaV3hsYldWdWRITWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERUtJQ0FnSUNBZ0lDQmRMQ0JoY21kMWJXVnVkSE11YkdWdVozUm9JRDRnTUNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUIwYUdVZ1kyOXVjM1J5ZFdOMGIzSWdibThnYkc5dVoyVnlJSEpsWVdSeklHRnlaM1Z0Wlc1MGN5NGdkWE5sSUM1elpYUW9LU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXNJR2dzSUhVc0lHUXNJR1lzSUcwc0lIZ3NJSFlwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUhSb2FYTXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHZGJNRjBnUFNCbExDQm5XelJkSUQwZ2RDd2daMXM0WFNBOUlHNHNJR2RiTVRKZElEMGdhU3dnWjFzeFhTQTlJSElzSUdkYk5WMGdQU0J2TENCbld6bGRJRDBnWVN3Z1oxc3hNMTBnUFNCc0xDQm5XekpkSUQwZ1l5d2daMXMyWFNBOUlHZ3NJR2RiTVRCZElEMGdkU3dnWjFzeE5GMGdQU0JrTENCbld6TmRJRDBnWml3Z1oxczNYU0E5SUcwc0lHZGJNVEZkSUQwZ2VDd2daMXN4TlYwZ1BTQjJMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdhV1JsYm5ScGRIa29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyVjBLREVzSURBc0lEQXNJREFzSURBc0lERXNJREFzSURBc0lEQXNJREFzSURFc0lEQXNJREFzSURBc0lEQXNJREVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCd1pTZ3BMbVp5YjIxQmNuSmhlU2gwYUdsekxtVnNaVzFsYm5SektUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2JpQTlJR1V1Wld4bGJXVnVkSE03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ1BTQnVXekJkTENCMFd6RmRJRDBnYmxzeFhTd2dkRnN5WFNBOUlHNWJNbDBzSUhSYk0xMGdQU0J1V3pOZExDQjBXelJkSUQwZ2JsczBYU3dnZEZzMVhTQTlJRzViTlYwc0lIUmJObDBnUFNCdVd6WmRMQ0IwV3pkZElEMGdibHMzWFN3Z2RGczRYU0E5SUc1Yk9GMHNJSFJiT1YwZ1BTQnVXemxkTENCMFd6RXdYU0E5SUc1Yk1UQmRMQ0IwV3pFeFhTQTlJRzViTVRGZExDQjBXekV5WFNBOUlHNWJNVEpkTENCMFd6RXpYU0E5SUc1Yk1UTmRMQ0IwV3pFMFhTQTlJRzViTVRSZExDQjBXekUxWFNBOUlHNWJNVFZkTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VWQnZjMmwwYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwV3pFeVhTQTlJRzViTVRKZExDQjBXekV6WFNBOUlHNWJNVE5kTENCMFd6RTBYU0E5SUc1Yk1UUmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVMWhkSEpwZURNb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdaUzVsYkdWdFpXNTBjenNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9kRnN3WFN3Z2RGc3pYU3dnZEZzMlhTd2dNQ3dnZEZzeFhTd2dkRnMwWFN3Z2RGczNYU3dnTUN3Z2RGc3lYU3dnZEZzMVhTd2dkRnM0WFN3Z01Dd2dNQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhSeVlXTjBRbUZ6YVhNb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuTmxkRVp5YjIxTllYUnlhWGhEYjJ4MWJXNG9kR2hwY3l3Z01Da3NJSFF1YzJWMFJuSnZiVTFoZEhKcGVFTnZiSFZ0YmloMGFHbHpMQ0F4S1N3Z2JpNXpaWFJHY205dFRXRjBjbWw0UTI5c2RXMXVLSFJvYVhNc0lESXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdiV0ZyWlVKaGMybHpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUW9aUzU0TENCMExuZ3NJRzR1ZUN3Z01Dd2daUzU1TENCMExua3NJRzR1ZVN3Z01Dd2daUzU2TENCMExub3NJRzR1ZWl3Z01Dd2dNQ3dnTUN3Z01Dd2dNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhSeVlXTjBVbTkwWVhScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdVpXeGxiV1Z1ZEhNc0lHa2dQU0F4SUM4Z2Mya3VjMlYwUm5KdmJVMWhkSEpwZUVOdmJIVnRiaWhsTENBd0tTNXNaVzVuZEdnb0tTd2djaUE5SURFZ0x5QnphUzV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0dVc0lERXBMbXhsYm1kMGFDZ3BMQ0J2SUQwZ01TQXZJSE5wTG5ObGRFWnliMjFOWVhSeWFYaERiMngxYlc0b1pTd2dNaWt1YkdWdVozUm9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJiTUYwZ1BTQnVXekJkSUNvZ2FTd2dkRnN4WFNBOUlHNWJNVjBnS2lCcExDQjBXekpkSUQwZ2Jsc3lYU0FxSUdrc0lIUmJNMTBnUFNBd0xDQjBXelJkSUQwZ2JsczBYU0FxSUhJc0lIUmJOVjBnUFNCdVd6VmRJQ29nY2l3Z2RGczJYU0E5SUc1Yk5sMGdLaUJ5TENCMFd6ZGRJRDBnTUN3Z2RGczRYU0E5SUc1Yk9GMGdLaUJ2TENCMFd6bGRJRDBnYmxzNVhTQXFJRzhzSUhSYk1UQmRJRDBnYmxzeE1GMGdLaUJ2TENCMFd6RXhYU0E5SURBc0lIUmJNVEpkSUQwZ01Dd2dkRnN4TTEwZ1BTQXdMQ0IwV3pFMFhTQTlJREFzSUhSYk1UVmRJRDBnTVN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlNiM1JoZEdsdmJrWnliMjFGZFd4bGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNBbUppQmxMbWx6UlhWc1pYSWdmSHdnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtMWhhMlZTYjNSaGRHbHZia1p5YjIxRmRXeGxjaWdwSUc1dmR5QmxlSEJsWTNSeklHRWdSWFZzWlhJZ2NtOTBZWFJwYjI0Z2NtRjBhR1Z5SUhSb1lXNGdZU0JXWldOMGIzSXpJR0Z1WkNCdmNtUmxjaTRpS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVaV3hsYldWdWRITXNJRzRnUFNCbExuZ3NJR2tnUFNCbExua3NJSElnUFNCbExub3NJRzhnUFNCTllYUm9MbU52Y3lodUtTd2dZU0E5SUUxaGRHZ3VjMmx1S0c0cExDQnNJRDBnVFdGMGFDNWpiM01vYVNrc0lHTWdQU0JOWVhSb0xuTnBiaWhwS1N3Z2FDQTlJRTFoZEdndVkyOXpLSElwTENCMUlEMGdUV0YwYUM1emFXNG9jaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXViM0prWlhJZ1BUMDlJQ0pZV1ZvaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnYnlBcUlHZ3NJR1lnUFNCdklDb2dkU3dnYlNBOUlHRWdLaUJvTENCNElEMGdZU0FxSUhVN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwZ1BTQnNJQ29nYUN3Z2RGczBYU0E5SUMxc0lDb2dkU3dnZEZzNFhTQTlJR01zSUhSYk1WMGdQU0JtSUNzZ2JTQXFJR01zSUhSYk5WMGdQU0JrSUMwZ2VDQXFJR01zSUhSYk9WMGdQU0F0WVNBcUlHd3NJSFJiTWwwZ1BTQjRJQzBnWkNBcUlHTXNJSFJiTmwwZ1BTQnRJQ3NnWmlBcUlHTXNJSFJiTVRCZElEMGdieUFxSUd3N0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGxMbTl5WkdWeUlEMDlQU0FpV1ZoYUlpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaREVnUFNCc0lDb2dhQ3dnWmpFZ1BTQnNJQ29nZFN3Z2JURWdQU0JqSUNvZ2FDd2dlREVnUFNCaklDb2dkVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGc3dYU0E5SUdReElDc2dlREVnS2lCaExDQjBXelJkSUQwZ2JURWdLaUJoSUMwZ1pqRXNJSFJiT0YwZ1BTQnZJQ29nWXl3Z2RGc3hYU0E5SUc4Z0tpQjFMQ0IwV3pWZElEMGdieUFxSUdnc0lIUmJPVjBnUFNBdFlTd2dkRnN5WFNBOUlHWXhJQ29nWVNBdElHMHhMQ0IwV3paZElEMGdlREVnS3lCa01TQXFJR0VzSUhSYk1UQmRJRDBnYnlBcUlHdzdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hsTG05eVpHVnlJRDA5UFNBaVdsaFpJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWkRJZ1BTQnNJQ29nYUN3Z1pqSWdQU0JzSUNvZ2RTd2diVElnUFNCaklDb2dhQ3dnZURJZ1BTQmpJQ29nZFRzS0lDQWdJQ0FnSUNBZ0lDQWdkRnN3WFNBOUlHUXlJQzBnZURJZ0tpQmhMQ0IwV3pSZElEMGdMVzhnS2lCMUxDQjBXemhkSUQwZ2JUSWdLeUJtTWlBcUlHRXNJSFJiTVYwZ1BTQm1NaUFySUcweUlDb2dZU3dnZEZzMVhTQTlJRzhnS2lCb0xDQjBXemxkSUQwZ2VESWdMU0JrTWlBcUlHRXNJSFJiTWwwZ1BTQXRieUFxSUdNc0lIUmJObDBnUFNCaExDQjBXekV3WFNBOUlHOGdLaUJzT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1pTNXZjbVJsY2lBOVBUMGdJbHBaV0NJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUXpJRDBnYnlBcUlHZ3NJR1l6SUQwZ2J5QXFJSFVzSUcweklEMGdZU0FxSUdnc0lIZ3pJRDBnWVNBcUlIVTdDaUFnSUNBZ0lDQWdJQ0FnSUhSYk1GMGdQU0JzSUNvZ2FDd2dkRnMwWFNBOUlHMHpJQ29nWXlBdElHWXpMQ0IwV3poZElEMGdaRE1nS2lCaklDc2dlRE1zSUhSYk1WMGdQU0JzSUNvZ2RTd2dkRnMxWFNBOUlIZ3pJQ29nWXlBcklHUXpMQ0IwV3psZElEMGdaak1nS2lCaklDMGdiVE1zSUhSYk1sMGdQU0F0WXl3Z2RGczJYU0E5SUdFZ0tpQnNMQ0IwV3pFd1hTQTlJRzhnS2lCc093b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9aUzV2Y21SbGNpQTlQVDBnSWxsYVdDSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1EwSUQwZ2J5QXFJR3dzSUdZMElEMGdieUFxSUdNc0lHMDBJRDBnWVNBcUlHd3NJSGcwSUQwZ1lTQXFJR003Q2lBZ0lDQWdJQ0FnSUNBZ0lIUmJNRjBnUFNCc0lDb2dhQ3dnZEZzMFhTQTlJSGcwSUMwZ1pEUWdLaUIxTENCMFd6aGRJRDBnYlRRZ0tpQjFJQ3NnWmpRc0lIUmJNVjBnUFNCMUxDQjBXelZkSUQwZ2J5QXFJR2dzSUhSYk9WMGdQU0F0WVNBcUlHZ3NJSFJiTWwwZ1BTQXRZeUFxSUdnc0lIUmJObDBnUFNCbU5DQXFJSFVnS3lCdE5Dd2dkRnN4TUYwZ1BTQmtOQ0F0SUhnMElDb2dkVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dVdWIzSmtaWElnUFQwOUlDSllXbGtpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa05TQTlJRzhnS2lCc0xDQm1OU0E5SUc4Z0tpQmpMQ0J0TlNBOUlHRWdLaUJzTENCNE5TQTlJR0VnS2lCak93b2dJQ0FnSUNBZ0lDQWdJQ0IwV3pCZElEMGdiQ0FxSUdnc0lIUmJORjBnUFNBdGRTd2dkRnM0WFNBOUlHTWdLaUJvTENCMFd6RmRJRDBnWkRVZ0tpQjFJQ3NnZURVc0lIUmJOVjBnUFNCdklDb2dhQ3dnZEZzNVhTQTlJR1kxSUNvZ2RTQXRJRzAxTENCMFd6SmRJRDBnYlRVZ0tpQjFJQzBnWmpVc0lIUmJObDBnUFNCaElDb2dhQ3dnZEZzeE1GMGdQU0I0TlNBcUlIVWdLeUJrTlRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYk0xMGdQU0F3TENCMFd6ZGRJRDBnTUN3Z2RGc3hNVjBnUFNBd0xDQjBXekV5WFNBOUlEQXNJSFJiTVROZElEMGdNQ3dnZEZzeE5GMGdQU0F3TENCMFd6RTFYU0E5SURFc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdFlXdGxVbTkwWVhScGIyNUdjbTl0VVhWaGRHVnlibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dGNHOXpaU2gwWml3Z1pTd2dibVlwT3dvZ0lDQWdmUW9nSUNBZ2JHOXZhMEYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlGTjBMbk4xWWxabFkzUnZjbk1vWlN3Z2RDa3NJRk4wTG14bGJtZDBhRk54S0NrZ1BUMDlJREFnSmlZZ0tGTjBMbm9nUFNBeEtTd2dVM1F1Ym05eWJXRnNhWHBsS0Nrc0lIQnVMbU55YjNOelZtVmpkRzl5Y3lodUxDQlRkQ2tzSUhCdUxteGxibWQwYUZOeEtDa2dQVDA5SURBZ0ppWWdLRTFoZEdndVlXSnpLRzR1ZWlrZ1BUMDlJREVnUHlCVGRDNTRJQ3M5SURGbExUUWdPaUJUZEM1NklDczlJREZsTFRRc0lGTjBMbTV2Y20xaGJHbDZaU2dwTENCd2JpNWpjbTl6YzFabFkzUnZjbk1vYml3Z1UzUXBLU3dnY0c0dWJtOXliV0ZzYVhwbEtDa3NJRnB5TG1OeWIzTnpWbVZqZEc5eWN5aFRkQ3dnY0c0cExDQnBXekJkSUQwZ2NHNHVlQ3dnYVZzMFhTQTlJRnB5TG5nc0lHbGJPRjBnUFNCVGRDNTRMQ0JwV3pGZElEMGdjRzR1ZVN3Z2FWczFYU0E5SUZweUxua3NJR2xiT1YwZ1BTQlRkQzU1TENCcFd6SmRJRDBnY0c0dWVpd2dhVnMyWFNBOUlGcHlMbm9zSUdsYk1UQmRJRDBnVTNRdWVpd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHMTFiSFJwY0d4NUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBaFBUMGdkbTlwWkNBd0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG0xMWJIUnBjR3g1S0NrZ2JtOTNJRzl1YkhrZ1lXTmpaWEIwY3lCdmJtVWdZWEpuZFcxbGJuUXVJRlZ6WlNBdWJYVnNkR2x3YkhsTllYUnlhV05sY3lnZ1lTd2dZaUFwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWhsTENCMEtTa2dPaUIwYUdsekxtMTFiSFJwY0d4NVRXRjBjbWxqWlhNb2RHaHBjeXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQndjbVZ0ZFd4MGFYQnNlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aGxMQ0IwYUdsektUc0tJQ0FnSUgwS0lDQWdJRzExYkhScGNHeDVUV0YwY21salpYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1pTNWxiR1Z0Wlc1MGN5d2dhU0E5SUhRdVpXeGxiV1Z1ZEhNc0lISWdQU0IwYUdsekxtVnNaVzFsYm5SekxDQnZJRDBnYmxzd1hTd2dZU0E5SUc1Yk5GMHNJR3dnUFNCdVd6aGRMQ0JqSUQwZ2Jsc3hNbDBzSUdnZ1BTQnVXekZkTENCMUlEMGdibHMxWFN3Z1pDQTlJRzViT1Ywc0lHWWdQU0J1V3pFelhTd2diU0E5SUc1Yk1sMHNJSGdnUFNCdVd6WmRMQ0IySUQwZ2Jsc3hNRjBzSUdjZ1BTQnVXekUwWFN3Z2NDQTlJRzViTTEwc0lGOGdQU0J1V3pkZExDQjVJRDBnYmxzeE1WMHNJR0lnUFNCdVd6RTFYU3dnUVNBOUlHbGJNRjBzSUV3Z1BTQnBXelJkTENCSklEMGdhVnM0WFN3Z2F5QTlJR2xiTVRKZExDQkNJRDBnYVZzeFhTd2dVQ0E5SUdsYk5WMHNJSGNnUFNCcFd6bGRMQ0JGSUQwZ2FWc3hNMTBzSUVRZ1BTQnBXekpkTENCVklEMGdhVnMyWFN3Z1JpQTlJR2xiTVRCZExDQlBJRDBnYVZzeE5GMHNJRzVsSUQwZ2FWc3pYU3dnWTJVZ1BTQnBXemRkTENCV0lEMGdhVnN4TVYwc0lGY2dQU0JwV3pFMVhUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2Nsc3dYU0E5SUc4Z0tpQkJJQ3NnWVNBcUlFSWdLeUJzSUNvZ1JDQXJJR01nS2lCdVpTd2djbHMwWFNBOUlHOGdLaUJNSUNzZ1lTQXFJRkFnS3lCc0lDb2dWU0FySUdNZ0tpQmpaU3dnY2xzNFhTQTlJRzhnS2lCSklDc2dZU0FxSUhjZ0t5QnNJQ29nUmlBcklHTWdLaUJXTENCeVd6RXlYU0E5SUc4Z0tpQnJJQ3NnWVNBcUlFVWdLeUJzSUNvZ1R5QXJJR01nS2lCWExDQnlXekZkSUQwZ2FDQXFJRUVnS3lCMUlDb2dRaUFySUdRZ0tpQkVJQ3NnWmlBcUlHNWxMQ0J5V3pWZElEMGdhQ0FxSUV3Z0t5QjFJQ29nVUNBcklHUWdLaUJWSUNzZ1ppQXFJR05sTENCeVd6bGRJRDBnYUNBcUlFa2dLeUIxSUNvZ2R5QXJJR1FnS2lCR0lDc2daaUFxSUZZc0lISmJNVE5kSUQwZ2FDQXFJR3NnS3lCMUlDb2dSU0FySUdRZ0tpQlBJQ3NnWmlBcUlGY3NJSEpiTWwwZ1BTQnRJQ29nUVNBcklIZ2dLaUJDSUNzZ2RpQXFJRVFnS3lCbklDb2dibVVzSUhKYk5sMGdQU0J0SUNvZ1RDQXJJSGdnS2lCUUlDc2dkaUFxSUZVZ0t5Qm5JQ29nWTJVc0lISmJNVEJkSUQwZ2JTQXFJRWtnS3lCNElDb2dkeUFySUhZZ0tpQkdJQ3NnWnlBcUlGWXNJSEpiTVRSZElEMGdiU0FxSUdzZ0t5QjRJQ29nUlNBcklIWWdLaUJQSUNzZ1p5QXFJRmNzSUhKYk0xMGdQU0J3SUNvZ1FTQXJJRjhnS2lCQ0lDc2dlU0FxSUVRZ0t5QmlJQ29nYm1Vc0lISmJOMTBnUFNCd0lDb2dUQ0FySUY4Z0tpQlFJQ3NnZVNBcUlGVWdLeUJpSUNvZ1kyVXNJSEpiTVRGZElEMGdjQ0FxSUVrZ0t5QmZJQ29nZHlBcklIa2dLaUJHSUNzZ1lpQXFJRllzSUhKYk1UVmRJRDBnY0NBcUlHc2dLeUJmSUNvZ1JTQXJJSGtnS2lCUElDc2dZaUFxSUZjc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCdGRXeDBhWEJzZVZOallXeGhjaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBXekJkSUNvOUlHVXNJSFJiTkYwZ0tqMGdaU3dnZEZzNFhTQXFQU0JsTENCMFd6RXlYU0FxUFNCbExDQjBXekZkSUNvOUlHVXNJSFJiTlYwZ0tqMGdaU3dnZEZzNVhTQXFQU0JsTENCMFd6RXpYU0FxUFNCbExDQjBXekpkSUNvOUlHVXNJSFJiTmwwZ0tqMGdaU3dnZEZzeE1GMGdLajBnWlN3Z2RGc3hORjBnS2owZ1pTd2dkRnN6WFNBcVBTQmxMQ0IwV3pkZElDbzlJR1VzSUhSYk1URmRJQ285SUdVc0lIUmJNVFZkSUNvOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmtaWFJsY20xcGJtRnVkQ2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaV3hsYldWdWRITXNJSFFnUFNCbFd6QmRMQ0J1SUQwZ1pWczBYU3dnYVNBOUlHVmJPRjBzSUhJZ1BTQmxXekV5WFN3Z2J5QTlJR1ZiTVYwc0lHRWdQU0JsV3pWZExDQnNJRDBnWlZzNVhTd2dZeUE5SUdWYk1UTmRMQ0JvSUQwZ1pWc3lYU3dnZFNBOUlHVmJObDBzSUdRZ1BTQmxXekV3WFN3Z1ppQTlJR1ZiTVRSZExDQnRJRDBnWlZzelhTd2dlQ0E5SUdWYk4xMHNJSFlnUFNCbFd6RXhYU3dnWnlBOUlHVmJNVFZkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0SUNvZ0tDdHlJQ29nYkNBcUlIVWdMU0JwSUNvZ1l5QXFJSFVnTFNCeUlDb2dZU0FxSUdRZ0t5QnVJQ29nWXlBcUlHUWdLeUJwSUNvZ1lTQXFJR1lnTFNCdUlDb2diQ0FxSUdZcElDc2dlQ0FxSUNncmRDQXFJR3dnS2lCbUlDMGdkQ0FxSUdNZ0tpQmtJQ3NnY2lBcUlHOGdLaUJrSUMwZ2FTQXFJRzhnS2lCbUlDc2dhU0FxSUdNZ0tpQm9JQzBnY2lBcUlHd2dLaUJvS1NBcklIWWdLaUFvSzNRZ0tpQmpJQ29nZFNBdElIUWdLaUJoSUNvZ1ppQXRJSElnS2lCdklDb2dkU0FySUc0Z0tpQnZJQ29nWmlBcklISWdLaUJoSUNvZ2FDQXRJRzRnS2lCaklDb2dhQ2tnS3lCbklDb2dLQzFwSUNvZ1lTQXFJR2dnTFNCMElDb2diQ0FxSUhVZ0t5QjBJQ29nWVNBcUlHUWdLeUJwSUNvZ2J5QXFJSFVnTFNCdUlDb2dieUFxSUdRZ0t5QnVJQ29nYkNBcUlHZ3BPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVsYkdWdFpXNTBjeXdnZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENBOUlHVmJNVjBzSUdWYk1WMGdQU0JsV3pSZExDQmxXelJkSUQwZ2RDd2dkQ0E5SUdWYk1sMHNJR1ZiTWwwZ1BTQmxXemhkTENCbFd6aGRJRDBnZEN3Z2RDQTlJR1ZiTmwwc0lHVmJObDBnUFNCbFd6bGRMQ0JsV3psZElEMGdkQ3dnZENBOUlHVmJNMTBzSUdWYk0xMGdQU0JsV3pFeVhTd2daVnN4TWwwZ1BTQjBMQ0IwSUQwZ1pWczNYU3dnWlZzM1hTQTlJR1ZiTVROZExDQmxXekV6WFNBOUlIUXNJSFFnUFNCbFd6RXhYU3dnWlZzeE1WMGdQU0JsV3pFMFhTd2daVnN4TkYwZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVUc5emFYUnBiMjRvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXBjMVpsWTNSdmNqTWdQeUFvYVZzeE1sMGdQU0JsTG5nc0lHbGJNVE5kSUQwZ1pTNTVMQ0JwV3pFMFhTQTlJR1V1ZWlrZ09pQW9hVnN4TWwwZ1BTQmxMQ0JwV3pFelhTQTlJSFFzSUdsYk1UUmRJRDBnYmlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCcGJuWmxjblFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0IwSUQwZ1pWc3dYU3dnYmlBOUlHVmJNVjBzSUdrZ1BTQmxXekpkTENCeUlEMGdaVnN6WFN3Z2J5QTlJR1ZiTkYwc0lHRWdQU0JsV3pWZExDQnNJRDBnWlZzMlhTd2dZeUE5SUdWYk4xMHNJR2dnUFNCbFd6aGRMQ0IxSUQwZ1pWczVYU3dnWkNBOUlHVmJNVEJkTENCbUlEMGdaVnN4TVYwc0lHMGdQU0JsV3pFeVhTd2dlQ0E5SUdWYk1UTmRMQ0IySUQwZ1pWc3hORjBzSUdjZ1BTQmxXekUxWFN3Z2NDQTlJSFVnS2lCMklDb2dZeUF0SUhnZ0tpQmtJQ29nWXlBcklIZ2dLaUJzSUNvZ1ppQXRJR0VnS2lCMklDb2daaUF0SUhVZ0tpQnNJQ29nWnlBcklHRWdLaUJrSUNvZ1p5d2dYeUE5SUcwZ0tpQmtJQ29nWXlBdElHZ2dLaUIySUNvZ1l5QXRJRzBnS2lCc0lDb2daaUFySUc4Z0tpQjJJQ29nWmlBcklHZ2dLaUJzSUNvZ1p5QXRJRzhnS2lCa0lDb2daeXdnZVNBOUlHZ2dLaUI0SUNvZ1l5QXRJRzBnS2lCMUlDb2dZeUFySUcwZ0tpQmhJQ29nWmlBdElHOGdLaUI0SUNvZ1ppQXRJR2dnS2lCaElDb2daeUFySUc4Z0tpQjFJQ29nWnl3Z1lpQTlJRzBnS2lCMUlDb2diQ0F0SUdnZ0tpQjRJQ29nYkNBdElHMGdLaUJoSUNvZ1pDQXJJRzhnS2lCNElDb2daQ0FySUdnZ0tpQmhJQ29nZGlBdElHOGdLaUIxSUNvZ2Rpd2dRU0E5SUhRZ0tpQndJQ3NnYmlBcUlGOGdLeUJwSUNvZ2VTQXJJSElnS2lCaU93b2dJQ0FnSUNBZ0lHbG1JQ2hCSUQwOVBTQXdLU0J5WlhSMWNtNGdkR2hwY3k1elpYUW9NQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElFd2dQU0F4SUM4Z1FUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pWc3dYU0E5SUhBZ0tpQk1MQ0JsV3pGZElEMGdLSGdnS2lCa0lDb2djaUF0SUhVZ0tpQjJJQ29nY2lBdElIZ2dLaUJwSUNvZ1ppQXJJRzRnS2lCMklDb2daaUFySUhVZ0tpQnBJQ29nWnlBdElHNGdLaUJrSUNvZ1p5a2dLaUJNTENCbFd6SmRJRDBnS0dFZ0tpQjJJQ29nY2lBdElIZ2dLaUJzSUNvZ2NpQXJJSGdnS2lCcElDb2dZeUF0SUc0Z0tpQjJJQ29nWXlBdElHRWdLaUJwSUNvZ1p5QXJJRzRnS2lCc0lDb2daeWtnS2lCTUxDQmxXek5kSUQwZ0tIVWdLaUJzSUNvZ2NpQXRJR0VnS2lCa0lDb2djaUF0SUhVZ0tpQnBJQ29nWXlBcklHNGdLaUJrSUNvZ1l5QXJJR0VnS2lCcElDb2daaUF0SUc0Z0tpQnNJQ29nWmlrZ0tpQk1MQ0JsV3pSZElEMGdYeUFxSUV3c0lHVmJOVjBnUFNBb2FDQXFJSFlnS2lCeUlDMGdiU0FxSUdRZ0tpQnlJQ3NnYlNBcUlHa2dLaUJtSUMwZ2RDQXFJSFlnS2lCbUlDMGdhQ0FxSUdrZ0tpQm5JQ3NnZENBcUlHUWdLaUJuS1NBcUlFd3NJR1ZiTmwwZ1BTQW9iU0FxSUd3Z0tpQnlJQzBnYnlBcUlIWWdLaUJ5SUMwZ2JTQXFJR2tnS2lCaklDc2dkQ0FxSUhZZ0tpQmpJQ3NnYnlBcUlHa2dLaUJuSUMwZ2RDQXFJR3dnS2lCbktTQXFJRXdzSUdWYk4xMGdQU0FvYnlBcUlHUWdLaUJ5SUMwZ2FDQXFJR3dnS2lCeUlDc2dhQ0FxSUdrZ0tpQmpJQzBnZENBcUlHUWdLaUJqSUMwZ2J5QXFJR2tnS2lCbUlDc2dkQ0FxSUd3Z0tpQm1LU0FxSUV3c0lHVmJPRjBnUFNCNUlDb2dUQ3dnWlZzNVhTQTlJQ2h0SUNvZ2RTQXFJSElnTFNCb0lDb2dlQ0FxSUhJZ0xTQnRJQ29nYmlBcUlHWWdLeUIwSUNvZ2VDQXFJR1lnS3lCb0lDb2diaUFxSUdjZ0xTQjBJQ29nZFNBcUlHY3BJQ29nVEN3Z1pWc3hNRjBnUFNBb2J5QXFJSGdnS2lCeUlDMGdiU0FxSUdFZ0tpQnlJQ3NnYlNBcUlHNGdLaUJqSUMwZ2RDQXFJSGdnS2lCaklDMGdieUFxSUc0Z0tpQm5JQ3NnZENBcUlHRWdLaUJuS1NBcUlFd3NJR1ZiTVRGZElEMGdLR2dnS2lCaElDb2djaUF0SUc4Z0tpQjFJQ29nY2lBdElHZ2dLaUJ1SUNvZ1l5QXJJSFFnS2lCMUlDb2dZeUFySUc4Z0tpQnVJQ29nWmlBdElIUWdLaUJoSUNvZ1ppa2dLaUJNTENCbFd6RXlYU0E5SUdJZ0tpQk1MQ0JsV3pFelhTQTlJQ2hvSUNvZ2VDQXFJR2tnTFNCdElDb2dkU0FxSUdrZ0t5QnRJQ29nYmlBcUlHUWdMU0IwSUNvZ2VDQXFJR1FnTFNCb0lDb2diaUFxSUhZZ0t5QjBJQ29nZFNBcUlIWXBJQ29nVEN3Z1pWc3hORjBnUFNBb2JTQXFJR0VnS2lCcElDMGdieUFxSUhnZ0tpQnBJQzBnYlNBcUlHNGdLaUJzSUNzZ2RDQXFJSGdnS2lCc0lDc2dieUFxSUc0Z0tpQjJJQzBnZENBcUlHRWdLaUIyS1NBcUlFd3NJR1ZiTVRWZElEMGdLRzhnS2lCMUlDb2dhU0F0SUdnZ0tpQmhJQ29nYVNBcklHZ2dLaUJ1SUNvZ2JDQXRJSFFnS2lCMUlDb2diQ0F0SUc4Z0tpQnVJQ29nWkNBcklIUWdLaUJoSUNvZ1pDa2dLaUJNTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJOaGJHVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diaUE5SUdVdWVDd2dhU0E5SUdVdWVTd2djaUE5SUdVdWVqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RGc3dYU0FxUFNCdUxDQjBXelJkSUNvOUlHa3NJSFJiT0YwZ0tqMGdjaXdnZEZzeFhTQXFQU0J1TENCMFd6VmRJQ285SUdrc0lIUmJPVjBnS2owZ2Npd2dkRnN5WFNBcVBTQnVMQ0IwV3paZElDbzlJR2tzSUhSYk1UQmRJQ285SUhJc0lIUmJNMTBnS2owZ2Jpd2dkRnMzWFNBcVBTQnBMQ0IwV3pFeFhTQXFQU0J5TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFRXRjRVMk5oYkdWUGJrRjRhWE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbVZzWlcxbGJuUnpMQ0IwSUQwZ1pWc3dYU0FxSUdWYk1GMGdLeUJsV3pGZElDb2daVnN4WFNBcklHVmJNbDBnS2lCbFd6SmRMQ0J1SUQwZ1pWczBYU0FxSUdWYk5GMGdLeUJsV3pWZElDb2daVnMxWFNBcklHVmJObDBnS2lCbFd6WmRMQ0JwSUQwZ1pWczRYU0FxSUdWYk9GMGdLeUJsV3psZElDb2daVnM1WFNBcklHVmJNVEJkSUNvZ1pWc3hNRjA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTFoZEdndWMzRnlkQ2hOWVhSb0xtMWhlQ2gwTENCdUxDQnBLU2s3Q2lBZ0lDQjlDaUFnSUNCdFlXdGxWSEpoYm5Oc1lYUnBiMjRvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuTmxkQ2d4TENBd0xDQXdMQ0JsTENBd0xDQXhMQ0F3TENCMExDQXdMQ0F3TENBeExDQnVMQ0F3TENBd0xDQXdMQ0F4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlNiM1JoZEdsdmJsZ29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVFdGMGFDNWpiM01vWlNrc0lHNGdQU0JOWVhSb0xuTnBiaWhsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvTVN3Z01Dd2dNQ3dnTUN3Z01Dd2dkQ3dnTFc0c0lEQXNJREFzSUc0c0lIUXNJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVkp2ZEdGMGFXOXVXU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCTllYUm9MbU52Y3lobEtTd2diaUE5SUUxaGRHZ3VjMmx1S0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZENoMExDQXdMQ0J1TENBd0xDQXdMQ0F4TENBd0xDQXdMQ0F0Yml3Z01Dd2dkQ3dnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVW05MFlYUnBiMjVhS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlFMWhkR2d1WTI5ektHVXBMQ0J1SUQwZ1RXRjBhQzV6YVc0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMEtIUXNJQzF1TENBd0xDQXdMQ0J1TENCMExDQXdMQ0F3TENBd0xDQXdMQ0F4TENBd0xDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWU2IzUmhkR2x2YmtGNGFYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1RXRjBhQzVqYjNNb2RDa3NJR2tnUFNCTllYUm9Mbk5wYmloMEtTd2djaUE5SURFZ0xTQnVMQ0J2SUQwZ1pTNTRMQ0JoSUQwZ1pTNTVMQ0JzSUQwZ1pTNTZMQ0JqSUQwZ2NpQXFJRzhzSUdnZ1BTQnlJQ29nWVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXpaWFFvWXlBcUlHOGdLeUJ1TENCaklDb2dZU0F0SUdrZ0tpQnNMQ0JqSUNvZ2JDQXJJR2tnS2lCaExDQXdMQ0JqSUNvZ1lTQXJJR2tnS2lCc0xDQm9JQ29nWVNBcklHNHNJR2dnS2lCc0lDMGdhU0FxSUc4c0lEQXNJR01nS2lCc0lDMGdhU0FxSUdFc0lHZ2dLaUJzSUNzZ2FTQXFJRzhzSUhJZ0tpQnNJQ29nYkNBcklHNHNJREFzSURBc0lEQXNJREFzSURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2JXRnJaVk5qWVd4bEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhRb1pTd2dNQ3dnTUN3Z01Dd2dNQ3dnZEN3Z01Dd2dNQ3dnTUN3Z01Dd2diaXdnTUN3Z01Dd2dNQ3dnTUN3Z01Ta3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVTJobFlYSW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDZ3hMQ0J1TENCeUxDQXdMQ0JsTENBeExDQnZMQ0F3TENCMExDQnBMQ0F4TENBd0xDQXdMQ0F3TENBd0xDQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052YlhCdmMyVW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1bGJHVnRaVzUwY3l3Z2NpQTlJSFF1WDNnc0lHOGdQU0IwTGw5NUxDQmhJRDBnZEM1ZmVpd2diQ0E5SUhRdVgzY3NJR01nUFNCeUlDc2djaXdnYUNBOUlHOGdLeUJ2TENCMUlEMGdZU0FySUdFc0lHUWdQU0J5SUNvZ1l5d2daaUE5SUhJZ0tpQm9MQ0J0SUQwZ2NpQXFJSFVzSUhnZ1BTQnZJQ29nYUN3Z2RpQTlJRzhnS2lCMUxDQm5JRDBnWVNBcUlIVXNJSEFnUFNCc0lDb2dZeXdnWHlBOUlHd2dLaUJvTENCNUlEMGdiQ0FxSUhVc0lHSWdQU0J1TG5nc0lFRWdQU0J1TG5rc0lFd2dQU0J1TG5vN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdsYk1GMGdQU0FvTVNBdElDaDRJQ3NnWnlrcElDb2dZaXdnYVZzeFhTQTlJQ2htSUNzZ2VTa2dLaUJpTENCcFd6SmRJRDBnS0cwZ0xTQmZLU0FxSUdJc0lHbGJNMTBnUFNBd0xDQnBXelJkSUQwZ0tHWWdMU0I1S1NBcUlFRXNJR2xiTlYwZ1BTQW9NU0F0SUNoa0lDc2daeWtwSUNvZ1FTd2dhVnMyWFNBOUlDaDJJQ3NnY0NrZ0tpQkJMQ0JwV3pkZElEMGdNQ3dnYVZzNFhTQTlJQ2h0SUNzZ1h5a2dLaUJNTENCcFd6bGRJRDBnS0hZZ0xTQndLU0FxSUV3c0lHbGJNVEJkSUQwZ0tERWdMU0FvWkNBcklIZ3BLU0FxSUV3c0lHbGJNVEZkSUQwZ01Dd2dhVnN4TWwwZ1BTQmxMbmdzSUdsYk1UTmRJRDBnWlM1NUxDQnBXekUwWFNBOUlHVXVlaXdnYVZzeE5WMGdQU0F4TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWkdWamIyMXdiM05sS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVaV3hsYldWdWRITXNJSElnUFNCemFTNXpaWFFvYVZzd1hTd2dhVnN4WFN3Z2FWc3lYU2t1YkdWdVozUm9LQ2tzSUc4Z1BTQnphUzV6WlhRb2FWczBYU3dnYVZzMVhTd2dhVnMyWFNrdWJHVnVaM1JvS0Nrc0lHRWdQU0J6YVM1elpYUW9hVnM0WFN3Z2FWczVYU3dnYVZzeE1GMHBMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdVpHVjBaWEp0YVc1aGJuUW9LU0E4SURBZ0ppWWdLSElnUFNBdGNpa3NJR1V1ZUNBOUlHbGJNVEpkTENCbExua2dQU0JwV3pFelhTd2daUzU2SUQwZ2FWc3hORjBzSUVsMExtTnZjSGtvZEdocGN5azdDaUFnSUNBZ0lDQWdiR1YwSUdNZ1BTQXhJQzhnY2l3Z2FDQTlJREVnTHlCdkxDQjFJRDBnTVNBdklHRTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFbDBMbVZzWlcxbGJuUnpXekJkSUNvOUlHTXNJRWwwTG1Wc1pXMWxiblJ6V3pGZElDbzlJR01zSUVsMExtVnNaVzFsYm5Seld6SmRJQ285SUdNc0lFbDBMbVZzWlcxbGJuUnpXelJkSUNvOUlHZ3NJRWwwTG1Wc1pXMWxiblJ6V3pWZElDbzlJR2dzSUVsMExtVnNaVzFsYm5Seld6WmRJQ285SUdnc0lFbDBMbVZzWlcxbGJuUnpXemhkSUNvOUlIVXNJRWwwTG1Wc1pXMWxiblJ6V3psZElDbzlJSFVzSUVsMExtVnNaVzFsYm5Seld6RXdYU0FxUFNCMUxDQjBMbk5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNoSmRDa3NJRzR1ZUNBOUlISXNJRzR1ZVNBOUlHOHNJRzR1ZWlBOUlHRXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRZV3RsVUdWeWMzQmxZM1JwZG1Vb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lHOGdQVDA5SUhadmFXUWdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXRZV3RsVUdWeWMzQmxZM1JwZG1Vb0tTQm9ZWE1nWW1WbGJpQnlaV1JsWm1sdVpXUWdZVzVrSUdoaGN5QmhJRzVsZHlCemFXZHVZWFIxY21VdUlGQnNaV0Z6WlNCamFHVmpheUIwYUdVZ1pHOWpjeTRpS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVaV3hsYldWdWRITXNJR3dnUFNBeUlDb2djaUF2SUNoMElDMGdaU2tzSUdNZ1BTQXlJQ29nY2lBdklDaHVJQzBnYVNrc0lHZ2dQU0FvZENBcklHVXBJQzhnS0hRZ0xTQmxLU3dnZFNBOUlDaHVJQ3NnYVNrZ0x5QW9iaUF0SUdrcExDQmtJRDBnTFNodklDc2djaWtnTHlBb2J5QXRJSElwTENCbUlEMGdMVElnS2lCdklDb2djaUF2SUNodklDMGdjaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0ZiTUYwZ1BTQnNMQ0JoV3pSZElEMGdNQ3dnWVZzNFhTQTlJR2dzSUdGYk1USmRJRDBnTUN3Z1lWc3hYU0E5SURBc0lHRmJOVjBnUFNCakxDQmhXemxkSUQwZ2RTd2dZVnN4TTEwZ1BTQXdMQ0JoV3pKZElEMGdNQ3dnWVZzMlhTQTlJREFzSUdGYk1UQmRJRDBnWkN3Z1lWc3hORjBnUFNCbUxDQmhXek5kSUQwZ01Dd2dZVnMzWFNBOUlEQXNJR0ZiTVRGZElEMGdMVEVzSUdGYk1UVmRJRDBnTUN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxaGEyVlBjblJvYjJkeVlYQm9hV01vWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnZEdocGN5NWxiR1Z0Wlc1MGN5d2diQ0E5SURFZ0x5QW9kQ0F0SUdVcExDQmpJRDBnTVNBdklDaHVJQzBnYVNrc0lHZ2dQU0F4SUM4Z0tHOGdMU0J5S1N3Z2RTQTlJQ2gwSUNzZ1pTa2dLaUJzTENCa0lEMGdLRzRnS3lCcEtTQXFJR01zSUdZZ1BTQW9ieUFySUhJcElDb2dhRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZVnN3WFNBOUlESWdLaUJzTENCaFd6UmRJRDBnTUN3Z1lWczRYU0E5SURBc0lHRmJNVEpkSUQwZ0xYVXNJR0ZiTVYwZ1BTQXdMQ0JoV3pWZElEMGdNaUFxSUdNc0lHRmJPVjBnUFNBd0xDQmhXekV6WFNBOUlDMWtMQ0JoV3pKZElEMGdNQ3dnWVZzMlhTQTlJREFzSUdGYk1UQmRJRDBnTFRJZ0tpQm9MQ0JoV3pFMFhTQTlJQzFtTENCaFd6TmRJRDBnTUN3Z1lWczNYU0E5SURBc0lHRmJNVEZkSUQwZ01Dd2dZVnN4TlYwZ1BTQXhMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaWEYxWVd4ektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVpXeGxiV1Z1ZEhNc0lHNGdQU0JsTG1Wc1pXMWxiblJ6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQTdJR2tnUENBeE5qc2dhU3NyS1dsbUlDaDBXMmxkSUNFOVBTQnVXMmxkS1NCeVpYUjFjbTRnSVRFN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUNFd093b2dJQ0FnZlFvZ0lDQWdabkp2YlVGeWNtRjVLR1VzSUhRZ1BTQXdLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SURFMk95QnVLeXNwZEdocGN5NWxiR1Z0Wlc1MGMxdHVYU0E5SUdWYmJpQXJJSFJkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkRzlCY25KaGVTaGxJRDBnVzEwc0lIUWdQU0F3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2Jsc3dYU3dnWlZ0MElDc2dNVjBnUFNCdVd6RmRMQ0JsVzNRZ0t5QXlYU0E5SUc1Yk1sMHNJR1ZiZENBcklETmRJRDBnYmxzelhTd2daVnQwSUNzZ05GMGdQU0J1V3pSZExDQmxXM1FnS3lBMVhTQTlJRzViTlYwc0lHVmJkQ0FySURaZElEMGdibHMyWFN3Z1pWdDBJQ3NnTjEwZ1BTQnVXemRkTENCbFczUWdLeUE0WFNBOUlHNWJPRjBzSUdWYmRDQXJJRGxkSUQwZ2JsczVYU3dnWlZ0MElDc2dNVEJkSUQwZ2Jsc3hNRjBzSUdWYmRDQXJJREV4WFNBOUlHNWJNVEZkTENCbFczUWdLeUF4TWwwZ1BTQnVXekV5WFN3Z1pWdDBJQ3NnTVROZElEMGdibHN4TTEwc0lHVmJkQ0FySURFMFhTQTlJRzViTVRSZExDQmxXM1FnS3lBeE5WMGdQU0J1V3pFMVhTd2daVHNLSUNBZ0lIMEtmVHNLY0dVdWNISnZkRzkwZVhCbExtbHpUV0YwY21sNE5DQTlJQ0V3T3dwMllYSWdjMmtnUFNCdVpYY2dUU3dnU1hRZ1BTQnVaWGNnY0dVc0lIUm1JRDBnYm1WM0lFMG9NQ3dnTUN3Z01Da3NJRzVtSUQwZ2JtVjNJRTBvTVN3Z01Td2dNU2tzSUhCdUlEMGdibVYzSUUwc0lGcHlJRDBnYm1WM0lFMHNJRk4wSUQwZ2JtVjNJRTBzSUY5c0lEMGdibVYzSUhCbExDQk5iQ0E5SUc1bGR5Qm5kQ3dnV200Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNQ3dnZENBOUlEQXNJRzRnUFNBd0xDQnBJRDBnV200dVJHVm1ZWFZzZEU5eVpHVnlLWHNLSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnWlN3Z2RHaHBjeTVmZVNBOUlIUXNJSFJvYVhNdVgzb2dQU0J1TENCMGFHbHpMbDl2Y21SbGNpQTlJR2s3Q2lBZ0lDQjlDaUFnSUNCblpYUWdlQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlRHNLSUNBZ0lIMEtJQ0FnSUhObGRDQjRLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDk0SUQwZ1pTd2dkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnZVNobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmVTQTlJR1VzSUhSb2FYTXVYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRDQjZLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTZPd29nSUNBZ2ZRb2dJQ0FnYzJWMElIb29aU2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM29nUFNCbExDQjBhR2x6TGw5dmJrTm9ZVzVuWlVOaGJHeGlZV05yS0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnYjNKa1pYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXlaR1Z5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBJRzl5WkdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXZjbVJsY2lBOUlHVXNJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1TENCcElEMGdkR2hwY3k1ZmIzSmtaWElwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZlQ0E5SUdVc0lIUm9hWE11WDNrZ1BTQjBMQ0IwYUdsekxsOTZJRDBnYml3Z2RHaHBjeTVmYjNKa1pYSWdQU0JwTENCMGFHbHpMbDl2YmtOb1lXNW5aVU5oYkd4aVlXTnJLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYkc5dVpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUhSb2FYTXVZMjl1YzNSeWRXTjBiM0lvZEdocGN5NWZlQ3dnZEdocGN5NWZlU3dnZEdocGN5NWZlaXdnZEdocGN5NWZiM0prWlhJcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNnZ1BTQmxMbDk0TENCMGFHbHpMbDk1SUQwZ1pTNWZlU3dnZEdocGN5NWZlaUE5SUdVdVgzb3NJSFJvYVhNdVgyOXlaR1Z5SUQwZ1pTNWZiM0prWlhJc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaGxMQ0IwSUQwZ2RHaHBjeTVmYjNKa1pYSXNJRzRnUFNBaE1Da2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVsYkdWdFpXNTBjeXdnY2lBOUlHbGJNRjBzSUc4Z1BTQnBXelJkTENCaElEMGdhVnM0WFN3Z2JDQTlJR2xiTVYwc0lHTWdQU0JwV3pWZExDQm9JRDBnYVZzNVhTd2dkU0E5SUdsYk1sMHNJR1FnUFNCcFd6WmRMQ0JtSUQwZ2FWc3hNRjA3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LSFFwZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKWVdWb2lPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1ZmVTQTlJRTFoZEdndVlYTnBiaWh0ZENoaExDQXRNU3dnTVNrcExDQk5ZWFJvTG1GaWN5aGhLU0E4SUM0NU9UazVPVGs1SUQ4Z0tIUm9hWE11WDNnZ1BTQk5ZWFJvTG1GMFlXNHlLQzFvTENCbUtTd2dkR2hwY3k1ZmVpQTlJRTFoZEdndVlYUmhiaklvTFc4c0lISXBLU0E2SUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1paGtMQ0JqS1N3Z2RHaHBjeTVmZWlBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsbFlXaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTRJRDBnVFdGMGFDNWhjMmx1S0MxdGRDaG9MQ0F0TVN3Z01Ta3BMQ0JOWVhSb0xtRmljeWhvS1NBOElDNDVPVGs1T1RrNUlEOGdLSFJvYVhNdVgza2dQU0JOWVhSb0xtRjBZVzR5S0dFc0lHWXBMQ0IwYUdsekxsOTZJRDBnVFdGMGFDNWhkR0Z1TWloc0xDQmpLU2tnT2lBb2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhSaGJqSW9MWFVzSUhJcExDQjBhR2x6TGw5NklEMGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlXbGhaSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM2dnUFNCTllYUm9MbUZ6YVc0b2JYUW9aQ3dnTFRFc0lERXBLU3dnVFdGMGFDNWhZbk1vWkNrZ1BDQXVPVGs1T1RrNU9TQS9JQ2gwYUdsekxsOTVJRDBnVFdGMGFDNWhkR0Z1TWlndGRTd2daaWtzSUhSb2FYTXVYM29nUFNCTllYUm9MbUYwWVc0eUtDMXZMQ0JqS1NrZ09pQW9kR2hwY3k1ZmVTQTlJREFzSUhSb2FYTXVYM29nUFNCTllYUm9MbUYwWVc0eUtHd3NJSElwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0phV1ZnaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVmZVNBOUlFMWhkR2d1WVhOcGJpZ3RiWFFvZFN3Z0xURXNJREVwS1N3Z1RXRjBhQzVoWW5Nb2RTa2dQQ0F1T1RrNU9UazVPU0EvSUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1paGtMQ0JtS1N3Z2RHaHBjeTVmZWlBOUlFMWhkR2d1WVhSaGJqSW9iQ3dnY2lrcElEb2dLSFJvYVhNdVgzZ2dQU0F3TENCMGFHbHpMbDk2SUQwZ1RXRjBhQzVoZEdGdU1pZ3RieXdnWXlrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxsYVdDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5NklEMGdUV0YwYUM1aGMybHVLRzEwS0d3c0lDMHhMQ0F4S1Nrc0lFMWhkR2d1WVdKektHd3BJRHdnTGprNU9UazVPVGtnUHlBb2RHaHBjeTVmZUNBOUlFMWhkR2d1WVhSaGJqSW9MV2dzSUdNcExDQjBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWd0ZFN3Z2Npa3BJRG9nS0hSb2FYTXVYM2dnUFNBd0xDQjBhR2x6TGw5NUlEMGdUV0YwYUM1aGRHRnVNaWhoTENCbUtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVdGcFpJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgzb2dQU0JOWVhSb0xtRnphVzRvTFcxMEtHOHNJQzB4TENBeEtTa3NJRTFoZEdndVlXSnpLRzhwSUR3Z0xqazVPVGs1T1RrZ1B5QW9kR2hwY3k1ZmVDQTlJRTFoZEdndVlYUmhiaklvWkN3Z1l5a3NJSFJvYVhNdVgza2dQU0JOWVhSb0xtRjBZVzR5S0dFc0lISXBLU0E2SUNoMGFHbHpMbDk0SUQwZ1RXRjBhQzVoZEdGdU1pZ3RhQ3dnWmlrc0lIUm9hWE11WDNrZ1BTQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JrWldaaGRXeDBPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVGZFd4bGNqb2dMbk5sZEVaeWIyMVNiM1JoZEdsdmJrMWhkSEpwZUNncElHVnVZMjkxYm5SbGNtVmtJR0Z1SUhWdWEyNXZkMjRnYjNKa1pYSTZJQ0lnS3lCMEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDI5eVpHVnlJRDBnZEN3Z2JpQTlQVDBnSVRBZ0ppWWdkR2hwY3k1ZmIyNURhR0Z1WjJWRFlXeHNZbUZqYXlncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZGMVlYUmxjbTVwYjI0b1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCZmJDNXRZV3RsVW05MFlYUnBiMjVHY205dFVYVmhkR1Z5Ym1sdmJpaGxLU3dnZEdocGN5NXpaWFJHY205dFVtOTBZWFJwYjI1TllYUnlhWGdvWDJ3c0lIUXNJRzRwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZabFkzUnZjak1vWlN3Z2RDQTlJSFJvYVhNdVgyOXlaR1Z5S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjMlYwS0dVdWVDd2daUzU1TENCbExub3NJSFFwT3dvZ0lDQWdmUW9nSUNBZ2NtVnZjbVJsY2lobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFMXNMbk5sZEVaeWIyMUZkV3hsY2loMGFHbHpLU3dnZEdocGN5NXpaWFJHY205dFVYVmhkR1Z5Ym1sdmJpaE5iQ3dnWlNrN0NpQWdJQ0I5Q2lBZ0lDQmxjWFZoYkhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbDk0SUQwOVBTQjBhR2x6TGw5NElDWW1JR1V1WDNrZ1BUMDlJSFJvYVhNdVgza2dKaVlnWlM1ZmVpQTlQVDBnZEdocGN5NWZlaUFtSmlCbExsOXZjbVJsY2lBOVBUMGdkR2hwY3k1ZmIzSmtaWEk3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRRWEp5WVhrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5NElEMGdaVnN3WFN3Z2RHaHBjeTVmZVNBOUlHVmJNVjBzSUhSb2FYTXVYM29nUFNCbFd6SmRMQ0JsV3pOZElDRTlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXVYMjl5WkdWeUlEMGdaVnN6WFNrc0lIUm9hWE11WDI5dVEyaGhibWRsUTJGc2JHSmhZMnNvS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlFYSnlZWGtvWlNBOUlGdGRMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXM1JkSUQwZ2RHaHBjeTVmZUN3Z1pWdDBJQ3NnTVYwZ1BTQjBhR2x6TGw5NUxDQmxXM1FnS3lBeVhTQTlJSFJvYVhNdVgzb3NJR1ZiZENBcklETmRJRDBnZEdocGN5NWZiM0prWlhJc0lHVTdDaUFnSUNCOUNpQWdJQ0IwYjFabFkzUnZjak1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEOGdaUzV6WlhRb2RHaHBjeTVmZUN3Z2RHaHBjeTVmZVN3Z2RHaHBjeTVmZWlrZ09pQnVaWGNnVFNoMGFHbHpMbDk0TENCMGFHbHpMbDk1TENCMGFHbHpMbDk2S1RzS0lDQWdJSDBLSUNBZ0lGOXZia05vWVc1blpTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXVRMmhoYm1kbFEyRnNiR0poWTJzZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdYMjl1UTJoaGJtZGxRMkZzYkdKaFkyc29LU0I3ZlFwOU93cGFiaTV3Y205MGIzUjVjR1V1YVhORmRXeGxjaUE5SUNFd093cGFiaTVFWldaaGRXeDBUM0prWlhJZ1BTQWlXRmxhSWpzS1dtNHVVbTkwWVhScGIyNVBjbVJsY25NZ1BTQmJDaUFnSUNBaVdGbGFJaXdLSUNBZ0lDSlpXbGdpTEFvZ0lDQWdJbHBZV1NJc0NpQWdJQ0FpV0ZwWklpd0tJQ0FnSUNKWldGb2lMQW9nSUNBZ0lscFpXQ0lLWFRzS2RtRnlJRXB6SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYzJzZ1BTQXhPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtMWhjMnNnUFNBb01TQThQQ0JsSUh3Z01Da2dQajQrSURBN0NpQWdJQ0I5Q2lBZ0lDQmxibUZpYkdVb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRnpheUI4UFNBeElEdzhJR1VnZkNBd093b2dJQ0FnZlFvZ0lDQWdaVzVoWW14bFFXeHNLQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z6YXlBOUlDMHhPd29nSUNBZ2ZRb2dJQ0FnZEc5bloyeGxLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYzJzZ1hqMGdNU0E4UENCbElId2dNRHNLSUNBZ0lIMEtJQ0FnSUdScGMyRmliR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGemF5QW1QU0IrS0RFZ1BEd2daU0I4SURBcE93b2dJQ0FnZlFvZ0lDQWdaR2x6WVdKc1pVRnNiQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoYzJzZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnZEdWemRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ2gwYUdsekxtMWhjMnNnSmlCbExtMWhjMnNwSUNFOVBTQXdPd29nSUNBZ2ZRb2dJQ0FnYVhORmJtRmliR1ZrS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0tIUm9hWE11YldGemF5QW1JQ2d4SUR3OElHVWdmQ0F3S1NrZ0lUMDlJREE3Q2lBZ0lDQjlDbjBzSUhKbUlEMGdNQ3dnWW13Z1BTQnVaWGNnVFN3Z2Iya2dQU0J1WlhjZ1ozUXNJRkYwSUQwZ2JtVjNJSEJsTENBa2NpQTlJRzVsZHlCTkxDQmFhU0E5SUc1bGR5Qk5MQ0J6WmlBOUlHNWxkeUJOTENCdlppQTlJRzVsZHlCbmRDd2dkMndnUFNCdVpYY2dUU2d4TENBd0xDQXdLU3dnVTJ3Z1BTQnVaWGNnVFNnd0xDQXhMQ0F3S1N3Z1ZHd2dQU0J1WlhjZ1RTZ3dMQ0F3TENBeEtTd2dZV1lnUFNCN0NpQWdJQ0IwZVhCbE9pQWlZV1JrWldRaUNuMHNJRVZzSUQwZ2V3b2dJQ0FnZEhsd1pUb2dJbkpsYlc5MlpXUWlDbjBzSUU1bElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRmJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0hSb2FYTXNJQ0pwWkNJc0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJSEptS3lzS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MWRXbGtJRDBnUlhRb0tTd2dkR2hwY3k1dVlXMWxJRDBnSWlJc0lIUm9hWE11ZEhsd1pTQTlJQ0pQWW1wbFkzUXpSQ0lzSUhSb2FYTXVjR0Z5Wlc1MElEMGdiblZzYkN3Z2RHaHBjeTVqYUdsc1pISmxiaUE5SUZ0ZExDQjBhR2x6TG5Wd0lEMGdUbVV1UkdWbVlYVnNkRlZ3TG1Oc2IyNWxLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J1WlhjZ1RTd2dkQ0E5SUc1bGR5QmFiaXdnYmlBOUlHNWxkeUJuZEN3Z2FTQTlJRzVsZHlCTktERXNJREVzSURFcE93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlISW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHVjMlYwUm5KdmJVVjFiR1Z5S0hRc0lDRXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYnlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEM1elpYUkdjbTl0VVhWaGRHVnlibWx2YmlodUxDQjJiMmxrSURBc0lDRXhLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEM1ZmIyNURhR0Z1WjJVb2Npa3NJRzR1WDI5dVEyaGhibWRsS0c4cExDQlBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loMGFHbHpMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjVtYVdkMWNtRmliR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXNTFiV1Z5WVdKc1pUb2dJVEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2daUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J5YjNSaGRHbHZiam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dVptbG5kWEpoWW14bE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1ZFcxbGNtRmliR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUhRS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NYVmhkR1Z5Ym1sdmJqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1Wm1sbmRYSmhZbXhsT2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnVkVzFsY21GaWJHVTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzRLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJOaGJHVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym1acFozVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiblZ0WlhKaFlteGxPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUcxdlpHVnNWbWxsZDAxaGRISnBlRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCd1pRb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4TllYUnlhWGc2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ2JIUUtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG0xaGRISnBlQ0E5SUc1bGR5QndaU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ0E5SUc1bGR5QndaU3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdUbVV1UkdWbVlYVnNkRTFoZEhKcGVFRjFkRzlWY0dSaGRHVXNJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU0E5SUNFeExDQjBhR2x6TG14aGVXVnljeUE5SUc1bGR5QktjeXdnZEdocGN5NTJhWE5wWW14bElEMGdJVEFzSUhSb2FYTXVZMkZ6ZEZOb1lXUnZkeUE5SUNFeExDQjBhR2x6TG5KbFkyVnBkbVZUYUdGa2IzY2dQU0FoTVN3Z2RHaHBjeTVtY25WemRIVnRRM1ZzYkdWa0lEMGdJVEFzSUhSb2FYTXVjbVZ1WkdWeVQzSmtaWElnUFNBd0xDQjBhR2x6TG1GdWFXMWhkR2x2Ym5NZ1BTQmJYU3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ2IyNUNaV1p2Y21WU1pXNWtaWElvS1NCN2ZRb2dJQ0FnYjI1QlpuUmxjbEpsYm1SbGNpZ3BJSHQ5Q2lBZ0lDQmhjSEJzZVUxaGRISnBlRFFvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YldGMGNtbDRRWFYwYjFWd1pHRjBaU0FtSmlCMGFHbHpMblZ3WkdGMFpVMWhkSEpwZUNncExDQjBhR2x6TG0xaGRISnBlQzV3Y21WdGRXeDBhWEJzZVNobEtTd2dkR2hwY3k1dFlYUnlhWGd1WkdWamIyMXdiM05sS0hSb2FYTXVjRzl6YVhScGIyNHNJSFJvYVhNdWNYVmhkR1Z5Ym1sdmJpd2dkR2hwY3k1elkyRnNaU2s3Q2lBZ0lDQjlDaUFnSUNCaGNIQnNlVkYxWVhSbGNtNXBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkYxWVhSbGNtNXBiMjR1Y0hKbGJYVnNkR2x3Ykhrb1pTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJTYjNSaGRHbHZia1p5YjIxQmVHbHpRVzVuYkdVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjWFZoZEdWeWJtbHZiaTV6WlhSR2NtOXRRWGhwYzBGdVoyeGxLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW05MFlYUnBiMjVHY205dFJYVnNaWElvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y1hWaGRHVnlibWx2Ymk1elpYUkdjbTl0UlhWc1pYSW9aU3dnSVRBcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVW05MFlYUnBiMjVHY205dFRXRjBjbWw0S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dWMyVjBSbkp2YlZKdmRHRjBhVzl1VFdGMGNtbDRLR1VwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbTkwWVhScGIyNUdjbTl0VVhWaGRHVnlibWx2YmlobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1eGRXRjBaWEp1YVc5dUxtTnZjSGtvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnliM1JoZEdWUGJrRjRhWE1vWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnZhUzV6WlhSR2NtOXRRWGhwYzBGdVoyeGxLR1VzSUhRcExDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dWJYVnNkR2x3Ykhrb2Iya3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbFQyNVhiM0pzWkVGNGFYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdmFTNXpaWFJHY205dFFYaHBjMEZ1WjJ4bEtHVXNJSFFwTENCMGFHbHpMbkYxWVhSbGNtNXBiMjR1Y0hKbGJYVnNkR2x3Ykhrb2Iya3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjbTkwWVhSbFdDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtOTBZWFJsVDI1QmVHbHpLSGRzTENCbEtUc0tJQ0FnSUgwS0lDQWdJSEp2ZEdGMFpWa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSnZkR0YwWlU5dVFYaHBjeWhUYkN3Z1pTazdDaUFnSUNCOUNpQWdJQ0J5YjNSaGRHVmFLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXliM1JoZEdWUGJrRjRhWE1vVkd3c0lHVXBPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTnNZWFJsVDI1QmVHbHpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1ltd3VZMjl3ZVNobEtTNWhjSEJzZVZGMVlYUmxjbTVwYjI0b2RHaHBjeTV4ZFdGMFpYSnVhVzl1S1N3Z2RHaHBjeTV3YjNOcGRHbHZiaTVoWkdRb1ltd3ViWFZzZEdsd2JIbFRZMkZzWVhJb2RDa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkSEpoYm5Oc1lYUmxXQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkSEpoYm5Oc1lYUmxUMjVCZUdsektIZHNMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6YkdGMFpWa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuUnlZVzV6YkdGMFpVOXVRWGhwY3loVGJDd2daU2s3Q2lBZ0lDQjlDaUFnSUNCMGNtRnVjMnhoZEdWYUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MGNtRnVjMnhoZEdWUGJrRjRhWE1vVkd3c0lHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5allXeFViMWR2Y214a0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVoY0hCc2VVMWhkSEpwZURRb2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0I5Q2lBZ0lDQjNiM0pzWkZSdlRHOWpZV3dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtRndjR3g1VFdGMGNtbDROQ2hSZEM1amIzQjVLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BLVHNLSUNBZ0lIMEtJQ0FnSUd4dmIydEJkQ2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnWlM1cGMxWmxZM1J2Y2pNZ1B5QWtjaTVqYjNCNUtHVXBJRG9nSkhJdWMyVjBLR1VzSUhRc0lHNHBPd29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1d1lYSmxiblE3Q2lBZ0lDQWdJQ0FnZEdocGN5NTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDZ2hNQ3dnSVRFcExDQmFhUzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrc0lIUm9hWE11YVhORFlXMWxjbUVnZkh3Z2RHaHBjeTVwYzB4cFoyaDBJRDhnVVhRdWJHOXZhMEYwS0ZwcExDQWtjaXdnZEdocGN5NTFjQ2tnT2lCUmRDNXNiMjlyUVhRb0pISXNJRnBwTENCMGFHbHpMblZ3S1N3Z2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5ObGRFWnliMjFTYjNSaGRHbHZiazFoZEhKcGVDaFJkQ2tzSUdrZ0ppWWdLRkYwTG1WNGRISmhZM1JTYjNSaGRHbHZiaWhwTG0xaGRISnBlRmR2Y214a0tTd2diMmt1YzJWMFJuSnZiVkp2ZEdGMGFXOXVUV0YwY21sNEtGRjBLU3dnZEdocGN5NXhkV0YwWlhKdWFXOXVMbkJ5WlcxMWJIUnBjR3g1S0c5cExtbHVkbVZ5ZENncEtTazdDaUFnSUNCOUNpQWdJQ0JoWkdRb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoaGNtZDFiV1Z1ZEhNdWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z1lYSm5kVzFsYm5SekxteGxibWQwYURzZ2RDc3JLWFJvYVhNdVlXUmtLR0Z5WjNWdFpXNTBjMXQwWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOVBUMGdkR2hwY3lBL0lDaGpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVQWW1wbFkzUXpSQzVoWkdRNklHOWlhbVZqZENCallXNG5kQ0JpWlNCaFpHUmxaQ0JoY3lCaElHTm9hV3hrSUc5bUlHbDBjMlZzWmk0aUxDQmxLU3dnZEdocGN5a2dPaUFvWlNBbUppQmxMbWx6VDJKcVpXTjBNMFFnUHlBb1pTNXdZWEpsYm5RZ0lUMDlJRzUxYkd3Z0ppWWdaUzV3WVhKbGJuUXVjbVZ0YjNabEtHVXBMQ0JsTG5CaGNtVnVkQ0E5SUhSb2FYTXNJSFJvYVhNdVkyaHBiR1J5Wlc0dWNIVnphQ2hsS1N3Z1pTNWthWE53WVhSamFFVjJaVzUwS0dGbUtTa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UFltcGxZM1F6UkM1aFpHUTZJRzlpYW1WamRDQnViM1FnWVc0Z2FXNXpkR0Z1WTJVZ2IyWWdWRWhTUlVVdVQySnFaV04wTTBRdUlpd2daU2tzSUhSb2FYTXBPd29nSUNBZ2ZRb2dJQ0FnY21WdGIzWmxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9ZWEpuZFcxbGJuUnpMbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJRzRyS3lsMGFHbHpMbkpsYlc5MlpTaGhjbWQxYldWdWRITmJibDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTm9hV3hrY21WdUxtbHVaR1Y0VDJZb1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUWdJVDA5SUMweElDWW1JQ2hsTG5CaGNtVnVkQ0E5SUc1MWJHd3NJSFJvYVhNdVkyaHBiR1J5Wlc0dWMzQnNhV05sS0hRc0lERXBMQ0JsTG1ScGMzQmhkR05vUlhabGJuUW9SV3dwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhKbGJXOTJaVVp5YjIxUVlYSmxiblFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbkJoY21WdWREc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQWhQVDBnYm5Wc2JDQW1KaUJsTG5KbGJXOTJaU2gwYUdsektTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5S0NrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pTQTlJREE3SUdVZ1BDQjBhR2x6TG1Ob2FXeGtjbVZ1TG14bGJtZDBhRHNnWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtTm9hV3hrY21WdVcyVmRPd29nSUNBZ0lDQWdJQ0FnSUNCMExuQmhjbVZ1ZENBOUlHNTFiR3dzSUhRdVpHbHpjR0YwWTJoRmRtVnVkQ2hGYkNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU5vYVd4a2NtVnVMbXhsYm1kMGFDQTlJREFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoZEhSaFkyZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXdMQ0FoTVNrc0lGRjBMbU52Y0hrb2RHaHBjeTV0WVhSeWFYaFhiM0pzWkNrdWFXNTJaWEowS0Nrc0lHVXVjR0Z5Wlc1MElDRTlQU0J1ZFd4c0lDWW1JQ2hsTG5CaGNtVnVkQzUxY0dSaGRHVlhiM0pzWkUxaGRISnBlQ2doTUN3Z0lURXBMQ0JSZEM1dGRXeDBhWEJzZVNobExuQmhjbVZ1ZEM1dFlYUnlhWGhYYjNKc1pDa3BMQ0JsTG1Gd2NHeDVUV0YwY21sNE5DaFJkQ2tzSUhSb2FYTXVZV1JrS0dVcExDQmxMblZ3WkdGMFpWZHZjbXhrVFdGMGNtbDRLQ0V4TENBaE1Da3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJQWW1wbFkzUkNlVWxrS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSUFltcGxZM1JDZVZCeWIzQmxjblI1S0NKcFpDSXNJR1VwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBUMkpxWldOMFFubE9ZVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWlhSUFltcGxZM1JDZVZCeWIzQmxjblI1S0NKdVlXMWxJaXdnWlNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJQWW1wbFkzUkNlVkJ5YjNCbGNuUjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGMxdGxYU0E5UFQwZ2RDa2djbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Dd2dhU0E5SUhSb2FYTXVZMmhwYkdSeVpXNHViR1Z1WjNSb095QnVJRHdnYVRzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbU5vYVd4a2NtVnVXMjVkTG1kbGRFOWlhbVZqZEVKNVVISnZjR1Z5ZEhrb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2SUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCdk93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR2RsZEZkdmNteGtVRzl6YVhScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuVndaR0YwWlZkdmNteGtUV0YwY21sNEtDRXdMQ0FoTVNrc0lHVXVjMlYwUm5KdmJVMWhkSEpwZUZCdmMybDBhVzl1S0hSb2FYTXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWMjl5YkdSUmRXRjBaWEp1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTG1SbFkyOXRjRzl6WlNoYWFTd2daU3dnYzJZcExDQmxPd29nSUNBZ2ZRb2dJQ0FnWjJWMFYyOXliR1JUWTJGc1pTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRYQmtZWFJsVjI5eWJHUk5ZWFJ5YVhnb0lUQXNJQ0V4S1N3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1a1pXTnZiWEJ2YzJVb1dta3NJRzltTENCbEtTd2daVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGZHZjbXhrUkdseVpXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5Wd1pHRjBaVmR2Y214a1RXRjBjbWw0S0NFd0xDQWhNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtMWhkSEpwZUZkdmNteGtMbVZzWlcxbGJuUnpPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbk5sZENoMFd6aGRMQ0IwV3psZExDQjBXekV3WFNrdWJtOXliV0ZzYVhwbEtDazdDaUFnSUNCOUNpQWdJQ0J5WVhsallYTjBLQ2tnZTMwS0lDQWdJSFJ5WVhabGNuTmxLR1VwSUhzS0lDQWdJQ0FnSUNCbEtIUm9hWE1wT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZEZ0dVhTNTBjbUYyWlhKelpTaGxLVHNLSUNBZ0lIMEtJQ0FnSUhSeVlYWmxjbk5sVm1semFXSnNaU2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWRtbHphV0pzWlNBOVBUMGdJVEVwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0JsS0hSb2FYTXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amFHbHNaSEpsYmpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RDNXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3BkRnR1WFM1MGNtRjJaWEp6WlZacGMybGliR1VvWlNrN0NpQWdJQ0I5Q2lBZ0lDQjBjbUYyWlhKelpVRnVZMlZ6ZEc5eWN5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxuQmhjbVZ1ZERzS0lDQWdJQ0FnSUNCMElDRTlQU0J1ZFd4c0lDWW1JQ2hsS0hRcExDQjBMblJ5WVhabGNuTmxRVzVqWlhOMGIzSnpLR1VwS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxaGRISnBlQ2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbTFoZEhKcGVDNWpiMjF3YjNObEtIUm9hWE11Y0c5emFYUnBiMjRzSUhSb2FYTXVjWFZoZEdWeWJtbHZiaXdnZEdocGN5NXpZMkZzWlNrc0lIUm9hWE11YldGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBbUppQjBhR2x6TG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0FvZEdocGN5NXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUh4OElHVXBJQ1ltSUNoMGFHbHpMbkJoY21WdWRDQTlQVDBnYm5Wc2JDQS9JSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXVZMjl3ZVNoMGFHbHpMbTFoZEhKcGVDa2dPaUIwYUdsekxtMWhkSEpwZUZkdmNteGtMbTExYkhScGNHeDVUV0YwY21salpYTW9kR2hwY3k1d1lYSmxiblF1YldGMGNtbDRWMjl5YkdRc0lIUm9hWE11YldGMGNtbDRLU3dnZEdocGN5NXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUQwZ0lURXNJR1VnUFNBaE1DazdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCMExteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDBXMjVkTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV3WVhKbGJuUTdDaUFnSUNBZ0lDQWdhV1lnS0dVZ1BUMDlJQ0V3SUNZbUlHNGdJVDA5SUc1MWJHd2dKaVlnYmk1MWNHUmhkR1ZYYjNKc1pFMWhkSEpwZUNnaE1Dd2dJVEVwTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdKaVlnZEdocGN5NTFjR1JoZEdWTllYUnlhWGdvS1N3Z2RHaHBjeTV3WVhKbGJuUWdQVDA5SUc1MWJHd2dQeUIwYUdsekxtMWhkSEpwZUZkdmNteGtMbU52Y0hrb2RHaHBjeTV0WVhSeWFYZ3BJRG9nZEdocGN5NXRZWFJ5YVhoWGIzSnNaQzV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLSFJvYVhNdWNHRnlaVzUwTG0xaGRISnBlRmR2Y214a0xDQjBhR2x6TG0xaGRISnBlQ2tzSUhRZ1BUMDlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1amFHbHNaSEpsYmpzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR2t1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1dsYmNsMHVkWEJrWVhSbFYyOXliR1JOWVhSeWFYZ29JVEVzSUNFd0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlNBOVBUMGdkbTlwWkNBd0lIeDhJSFI1Y0dWdlppQmxJRDA5SUNKemRISnBibWNpTENCdUlEMGdlMzA3Q2lBZ0lDQWdJQ0FnZENBbUppQW9aU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdaMlZ2YldWMGNtbGxjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNjem9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSMWNtVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJWek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1Z6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJ0bGJHVjBiMjV6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVc1cGJXRjBhVzl1Y3pvZ2UzMEtJQ0FnSUNBZ0lDQjlMQ0J1TG0xbGRHRmtZWFJoSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWlhKemFXOXVPaUEwTGpVc0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSlBZbXBsWTNRaUxBb2dJQ0FnSUNBZ0lDQWdJQ0JuWlc1bGNtRjBiM0k2SUNKUFltcGxZM1F6UkM1MGIwcFRUMDRpQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCN2ZUc0tJQ0FnSUNBZ0lDQnBMblYxYVdRZ1BTQjBhR2x6TG5WMWFXUXNJR2t1ZEhsd1pTQTlJSFJvYVhNdWRIbHdaU3dnZEdocGN5NXVZVzFsSUNFOVBTQWlJaUFtSmlBb2FTNXVZVzFsSUQwZ2RHaHBjeTV1WVcxbEtTd2dkR2hwY3k1allYTjBVMmhoWkc5M0lEMDlQU0FoTUNBbUppQW9hUzVqWVhOMFUyaGhaRzkzSUQwZ0lUQXBMQ0IwYUdsekxuSmxZMlZwZG1WVGFHRmtiM2NnUFQwOUlDRXdJQ1ltSUNocExuSmxZMlZwZG1WVGFHRmtiM2NnUFNBaE1Da3NJSFJvYVhNdWRtbHphV0pzWlNBOVBUMGdJVEVnSmlZZ0tHa3VkbWx6YVdKc1pTQTlJQ0V4S1N3Z2RHaHBjeTVtY25WemRIVnRRM1ZzYkdWa0lEMDlQU0FoTVNBbUppQW9hUzVtY25WemRIVnRRM1ZzYkdWa0lEMGdJVEVwTENCMGFHbHpMbkpsYm1SbGNrOXlaR1Z5SUNFOVBTQXdJQ1ltSUNocExuSmxibVJsY2s5eVpHVnlJRDBnZEdocGN5NXlaVzVrWlhKUGNtUmxjaWtzSUVwVFQwNHVjM1J5YVc1bmFXWjVLSFJvYVhNdWRYTmxja1JoZEdFcElDRTlQU0FpZTMwaUlDWW1JQ2hwTG5WelpYSkVZWFJoSUQwZ2RHaHBjeTUxYzJWeVJHRjBZU2tzSUdrdWJHRjVaWEp6SUQwZ2RHaHBjeTVzWVhsbGNuTXViV0Z6YXl3Z2FTNXRZWFJ5YVhnZ1BTQjBhR2x6TG0xaGRISnBlQzUwYjBGeWNtRjVLQ2tzSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlQVDBnSVRFZ0ppWWdLR2t1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeEtTd2dkR2hwY3k1cGMwbHVjM1JoYm1ObFpFMWxjMmdnSmlZZ0tHa3VkSGx3WlNBOUlDSkpibk4wWVc1alpXUk5aWE5vSWl3Z2FTNWpiM1Z1ZENBOUlIUm9hWE11WTI5MWJuUXNJR2t1YVc1emRHRnVZMlZOWVhSeWFYZ2dQU0IwYUdsekxtbHVjM1JoYm1ObFRXRjBjbWw0TG5SdlNsTlBUaWdwTENCMGFHbHpMbWx1YzNSaGJtTmxRMjlzYjNJZ0lUMDlJRzUxYkd3Z0ppWWdLR2t1YVc1emRHRnVZMlZEYjJ4dmNpQTlJSFJvYVhNdWFXNXpkR0Z1WTJWRGIyeHZjaTUwYjBwVFQwNG9LU2twT3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhJb1lTd2diQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1lWdHNMblYxYVdSZElEMDlQU0IyYjJsa0lEQWdKaVlnS0dGYmJDNTFkV2xrWFNBOUlHd3VkRzlLVTA5T0tHVXBLU3dnYkM1MWRXbGtPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVwYzFOalpXNWxLU0IwYUdsekxtSmhZMnRuY205MWJtUWdKaVlnS0hSb2FYTXVZbUZqYTJkeWIzVnVaQzVwYzBOdmJHOXlJRDhnYVM1aVlXTnJaM0p2ZFc1a0lEMGdkR2hwY3k1aVlXTnJaM0p2ZFc1a0xuUnZTbE5QVGlncElEb2dkR2hwY3k1aVlXTnJaM0p2ZFc1a0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYVM1aVlXTnJaM0p2ZFc1a0lEMGdkR2hwY3k1aVlXTnJaM0p2ZFc1a0xuUnZTbE5QVGlobEtTNTFkV2xrS1Nrc0lIUm9hWE11Wlc1MmFYSnZibTFsYm5RZ0ppWWdkR2hwY3k1bGJuWnBjbTl1YldWdWRDNXBjMVJsZUhSMWNtVWdKaVlnS0drdVpXNTJhWEp2Ym0xbGJuUWdQU0IwYUdsekxtVnVkbWx5YjI1dFpXNTBMblJ2U2xOUFRpaGxLUzUxZFdsa0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaDBhR2x6TG1selRXVnphQ0I4ZkNCMGFHbHpMbWx6VEdsdVpTQjhmQ0IwYUdsekxtbHpVRzlwYm5SektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrdVoyVnZiV1YwY25rZ1BTQnlLR1V1WjJWdmJXVjBjbWxsY3l3Z2RHaHBjeTVuWlc5dFpYUnllU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RHaHBjeTVuWlc5dFpYUnllUzV3WVhKaGJXVjBaWEp6T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWVNBaFBUMGdkbTlwWkNBd0lDWW1JR0V1YzJoaGNHVnpJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnWVM1emFHRndaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hzS1NrZ1ptOXlLR3hsZENCaklEMGdNQ3dnYUNBOUlHd3ViR1Z1WjNSb095QmpJRHdnYURzZ1l5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUd4YlkxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2lobExuTm9ZWEJsY3l3Z2RTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhJb1pTNXphR0Z3WlhNc0lHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtbHpVMnRwYm01bFpFMWxjMmdnSmlZZ0tHa3VZbWx1WkUxdlpHVWdQU0IwYUdsekxtSnBibVJOYjJSbExDQnBMbUpwYm1STllYUnlhWGdnUFNCMGFHbHpMbUpwYm1STllYUnlhWGd1ZEc5QmNuSmhlU2dwTENCMGFHbHpMbk5yWld4bGRHOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tISW9aUzV6YTJWc1pYUnZibk1zSUhSb2FYTXVjMnRsYkdWMGIyNHBMQ0JwTG5OclpXeGxkRzl1SUQwZ2RHaHBjeTV6YTJWc1pYUnZiaTUxZFdsa0tTa3NJSFJvYVhNdWJXRjBaWEpwWVd3Z0lUMDlJSFp2YVdRZ01Da2dhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29kR2hwY3k1dFlYUmxjbWxoYkNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRXhJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiREVnUFNBd0xDQmpNU0E5SUhSb2FYTXViV0YwWlhKcFlXd3ViR1Z1WjNSb095QnNNU0E4SUdNeE95QnNNU3NyS1dFeExuQjFjMmdvY2lobExtMWhkR1Z5YVdGc2N5d2dkR2hwY3k1dFlYUmxjbWxoYkZ0c01WMHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FTNXRZWFJsY21saGJDQTlJR0V4T3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwTG0xaGRHVnlhV0ZzSUQwZ2NpaGxMbTFoZEdWeWFXRnNjeXdnZEdocGN5NXRZWFJsY21saGJDazdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZMmhwYkdSeVpXNHViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBMbU5vYVd4a2NtVnVJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZVElnUFNBd095QmhNaUE4SUhSb2FYTXVZMmhwYkdSeVpXNHViR1Z1WjNSb095QmhNaXNyS1drdVkyaHBiR1J5Wlc0dWNIVnphQ2gwYUdsekxtTm9hV3hrY21WdVcyRXlYUzUwYjBwVFQwNG9aU2t1YjJKcVpXTjBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11WVc1cGJXRjBhVzl1Y3k1c1pXNW5kR2dnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdrdVlXNXBiV0YwYVc5dWN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRXpJRDBnTURzZ1lUTWdQQ0IwYUdsekxtRnVhVzFoZEdsdmJuTXViR1Z1WjNSb095QmhNeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNNaUE5SUhSb2FYTXVZVzVwYldGMGFXOXVjMXRoTTEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExtRnVhVzFoZEdsdmJuTXVjSFZ6YUNoeUtHVXVZVzVwYldGMGFXOXVjeXdnYkRJcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9kQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVRRZ1BTQnZLR1V1WjJWdmJXVjBjbWxsY3lrc0lHd3pJRDBnYnlobExtMWhkR1Z5YVdGc2N5a3NJR015SUQwZ2J5aGxMblJsZUhSMWNtVnpLU3dnYURFZ1BTQnZLR1V1YVcxaFoyVnpLU3dnZFRFZ1BTQnZLR1V1YzJoaGNHVnpLU3dnWkNBOUlHOG9aUzV6YTJWc1pYUnZibk1wTENCbUlEMGdieWhsTG1GdWFXMWhkR2x2Ym5NcE93b2dJQ0FnSUNBZ0lDQWdJQ0JoTkM1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG1kbGIyMWxkSEpwWlhNZ1BTQmhOQ2tzSUd3ekxteGxibWQwYUNBK0lEQWdKaVlnS0c0dWJXRjBaWEpwWVd4eklEMGdiRE1wTENCak1pNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxuUmxlSFIxY21WeklEMGdZeklwTENCb01TNXNaVzVuZEdnZ1BpQXdJQ1ltSUNodUxtbHRZV2RsY3lBOUlHZ3hLU3dnZFRFdWJHVnVaM1JvSUQ0Z01DQW1KaUFvYmk1emFHRndaWE1nUFNCMU1Ta3NJR1F1YkdWdVozUm9JRDRnTUNBbUppQW9iaTV6YTJWc1pYUnZibk1nUFNCa0tTd2daaTVzWlc1bmRHZ2dQaUF3SUNZbUlDaHVMbUZ1YVcxaGRHbHZibk1nUFNCbUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHViMkpxWldOMElEMGdhU3dnYmpzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdktHRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUdsdUlHRXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQmhXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWc1pYUmxJR2d1YldWMFlXUmhkR0VzSUd3dWNIVnphQ2hvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6TENCbEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTd2dkQ0E5SUNFd0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVibUZ0WlNBOUlHVXVibUZ0WlN3Z2RHaHBjeTUxY0M1amIzQjVLR1V1ZFhBcExDQjBhR2x6TG5CdmMybDBhVzl1TG1OdmNIa29aUzV3YjNOcGRHbHZiaWtzSUhSb2FYTXVjbTkwWVhScGIyNHViM0prWlhJZ1BTQmxMbkp2ZEdGMGFXOXVMbTl5WkdWeUxDQjBhR2x6TG5GMVlYUmxjbTVwYjI0dVkyOXdlU2hsTG5GMVlYUmxjbTVwYjI0cExDQjBhR2x6TG5OallXeGxMbU52Y0hrb1pTNXpZMkZzWlNrc0lIUm9hWE11YldGMGNtbDRMbU52Y0hrb1pTNXRZWFJ5YVhncExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtTnZjSGtvWlM1dFlYUnlhWGhYYjNKc1pDa3NJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlHVXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxJRDBnWlM1dFlYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxMQ0IwYUdsekxteGhlV1Z5Y3k1dFlYTnJJRDBnWlM1c1lYbGxjbk11YldGemF5d2dkR2hwY3k1MmFYTnBZbXhsSUQwZ1pTNTJhWE5wWW14bExDQjBhR2x6TG1OaGMzUlRhR0ZrYjNjZ1BTQmxMbU5oYzNSVGFHRmtiM2NzSUhSb2FYTXVjbVZqWldsMlpWTm9ZV1J2ZHlBOUlHVXVjbVZqWldsMlpWTm9ZV1J2ZHl3Z2RHaHBjeTVtY25WemRIVnRRM1ZzYkdWa0lEMGdaUzVtY25WemRIVnRRM1ZzYkdWa0xDQjBhR2x6TG5KbGJtUmxjazl5WkdWeUlEMGdaUzV5Wlc1a1pYSlBjbVJsY2l3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUVwVFQwNHVjR0Z5YzJVb1NsTlBUaTV6ZEhKcGJtZHBabmtvWlM1MWMyVnlSR0YwWVNrcExDQjBJRDA5UFNBaE1Da2dabTl5S0d4bGRDQnVJRDBnTURzZ2JpQThJR1V1WTJocGJHUnlaVzR1YkdWdVozUm9PeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1WTJocGJHUnlaVzViYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtLR2t1WTJ4dmJtVW9LU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFwOU93cE9aUzVFWldaaGRXeDBWWEFnUFNCdVpYY2dUU2d3TENBeExDQXdLVHNLVG1VdVJHVm1ZWFZzZEUxaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Ec0tUbVV1Y0hKdmRHOTBlWEJsTG1selQySnFaV04wTTBRZ1BTQWhNRHNLZG1GeUlFUjBJRDBnYm1WM0lFMHNJRXQwSUQwZ2JtVjNJRTBzSUVOdklEMGdibVYzSUUwc0lHVnVJRDBnYm1WM0lFMHNJR0ZwSUQwZ2JtVjNJRTBzSUd4cElEMGdibVYzSUUwc0lFRnNJRDBnYm1WM0lFMHNJRXh2SUQwZ2JtVjNJRTBzSUZKdklEMGdibVYzSUUwc0lGQnZJRDBnYm1WM0lFMHNJRzUwSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOTENCMElEMGdibVYzSUUwc0lHNGdQU0J1WlhjZ1RTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1aElEMGdaU3dnZEdocGN5NWlJRDBnZEN3Z2RHaHBjeTVqSUQwZ2Jqc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm5aWFJPYjNKdFlXd29aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUdrdWMzVmlWbVZqZEc5eWN5aHVMQ0IwS1N3Z1JIUXVjM1ZpVm1WamRHOXljeWhsTENCMEtTd2dhUzVqY205emN5aEVkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JwTG14bGJtZDBhRk54S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJZ1BpQXdJRDhnYVM1dGRXeDBhWEJzZVZOallXeGhjaWd4SUM4Z1RXRjBhQzV6Y1hKMEtISXBLU0E2SUdrdWMyVjBLREFzSURBc0lEQXBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR2RsZEVKaGNubGpiMjl5WkNobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnUkhRdWMzVmlWbVZqZEc5eWN5aHBMQ0IwS1N3Z1MzUXVjM1ZpVm1WamRHOXljeWh1TENCMEtTd2dRMjh1YzNWaVZtVmpkRzl5Y3lobExDQjBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJRVIwTG1SdmRDaEVkQ2tzSUdFZ1BTQkVkQzVrYjNRb1MzUXBMQ0JzSUQwZ1JIUXVaRzkwS0VOdktTd2dZeUE5SUV0MExtUnZkQ2hMZENrc0lHZ2dQU0JMZEM1a2IzUW9RMjhwTENCMUlEMGdieUFxSUdNZ0xTQmhJQ29nWVRzS0lDQWdJQ0FnSUNCcFppQW9kU0E5UFQwZ01Da2djbVYwZFhKdUlISXVjMlYwS0MweUxDQXRNU3dnTFRFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ01TQXZJSFVzSUdZZ1BTQW9ZeUFxSUd3Z0xTQmhJQ29nYUNrZ0tpQmtMQ0J0SUQwZ0tHOGdLaUJvSUMwZ1lTQXFJR3dwSUNvZ1pEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NpNXpaWFFvTVNBdElHWWdMU0J0TENCdExDQm1LVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJqYjI1MFlXbHVjMUJ2YVc1MEtHVXNJSFFzSUc0c0lHa3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUkNZWEo1WTI5dmNtUW9aU3dnZEN3Z2Jpd2dhU3dnWlc0cExDQmxiaTU0SUQ0OUlEQWdKaVlnWlc0dWVTQStQU0F3SUNZbUlHVnVMbmdnS3lCbGJpNTVJRHc5SURFN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1oyVjBWVllvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRFSmhjbmxqYjI5eVpDaGxMQ0IwTENCdUxDQnBMQ0JsYmlrc0lHd3VjMlYwS0RBc0lEQXBMQ0JzTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh5TENCbGJpNTRLU3dnYkM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYnl3Z1pXNHVlU2tzSUd3dVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0dFc0lHVnVMbm9wTENCc093b2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHbHpSbkp2Ym5SR1lXTnBibWNvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCRWRDNXpkV0pXWldOMGIzSnpLRzRzSUhRcExDQkxkQzV6ZFdKV1pXTjBiM0p6S0dVc0lIUXBMQ0JFZEM1amNtOXpjeWhMZENrdVpHOTBLR2twSUR3Z01Ec0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVqYjNCNUtHVXBMQ0IwYUdsekxtSXVZMjl3ZVNoMEtTd2dkR2hwY3k1akxtTnZjSGtvYmlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0VUc5cGJuUnpRVzVrU1c1a2FXTmxjeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVqYjNCNUtHVmJkRjBwTENCMGFHbHpMbUl1WTI5d2VTaGxXMjVkS1N3Z2RHaHBjeTVqTG1OdmNIa29aVnRwWFNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UVhSMGNtbGlkWFJsUVc1a1NXNWthV05sY3lobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHVXNJSFFwTENCMGFHbHpMbUl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQnVLU3dnZEdocGN5NWpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZUzVqYjNCNUtHVXVZU2tzSUhSb2FYTXVZaTVqYjNCNUtHVXVZaWtzSUhSb2FYTXVZeTVqYjNCNUtHVXVZeWtzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSQmNtVmhLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJFZEM1emRXSldaV04wYjNKektIUm9hWE11WXl3Z2RHaHBjeTVpS1N3Z1MzUXVjM1ZpVm1WamRHOXljeWgwYUdsekxtRXNJSFJvYVhNdVlpa3NJRVIwTG1OeWIzTnpLRXQwS1M1c1pXNW5kR2dvS1NBcUlDNDFPd29nSUNBZ2ZRb2dJQ0FnWjJWMFRXbGtjRzlwYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbUZrWkZabFkzUnZjbk1vZEdocGN5NWhMQ0IwYUdsekxtSXBMbUZrWkNoMGFHbHpMbU1wTG0xMWJIUnBjR3g1VTJOaGJHRnlLREVnTHlBektUc0tJQ0FnSUgwS0lDQWdJR2RsZEU1dmNtMWhiQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MExtZGxkRTV2Y20xaGJDaDBhR2x6TG1Fc0lIUm9hWE11WWl3Z2RHaHBjeTVqTENCbEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCc1lXNWxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1elpYUkdjbTl0UTI5d2JHRnVZWEpRYjJsdWRITW9kR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXlrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJDWVhKNVkyOXZjbVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVkQzVuWlhSQ1lYSjVZMjl2Y21Rb1pTd2dkR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXl3Z2RDazdDaUFnSUNCOUNpQWdJQ0JuWlhSVlZpaGxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1MExtZGxkRlZXS0dVc0lIUm9hWE11WVN3Z2RHaHBjeTVpTENCMGFHbHpMbU1zSUhRc0lHNHNJR2tzSUhJcE93b2dJQ0FnZlFvZ0lDQWdZMjl1ZEdGcGJuTlFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTBMbU52Ym5SaGFXNXpVRzlwYm5Rb1pTd2dkR2hwY3k1aExDQjBhR2x6TG1Jc0lIUm9hWE11WXlrN0NpQWdJQ0I5Q2lBZ0lDQnBjMFp5YjI1MFJtRmphVzVuS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JuUXVhWE5HY205dWRFWmhZMmx1WnloMGFHbHpMbUVzSUhSb2FYTXVZaXdnZEdocGN5NWpMQ0JsS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITkNiM2dvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtbHVkR1Z5YzJWamRITlVjbWxoYm1kc1pTaDBhR2x6S1RzS0lDQWdJSDBLSUNBZ0lHTnNiM05sYzNSUWIybHVkRlJ2VUc5cGJuUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVoTENCcElEMGdkR2hwY3k1aUxDQnlJRDBnZEdocGN5NWpMQ0J2TENCaE93b2dJQ0FnSUNBZ0lHRnBMbk4xWWxabFkzUnZjbk1vYVN3Z2Jpa3NJR3hwTG5OMVlsWmxZM1J2Y25Nb2Npd2diaWtzSUV4dkxuTjFZbFpsWTNSdmNuTW9aU3dnYmlrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCaGFTNWtiM1FvVEc4cExDQmpJRDBnYkdrdVpHOTBLRXh2S1RzS0lDQWdJQ0FnSUNCcFppQW9iQ0E4UFNBd0lDWW1JR01nUEQwZ01Da2djbVYwZFhKdUlIUXVZMjl3ZVNodUtUc0tJQ0FnSUNBZ0lDQlNieTV6ZFdKV1pXTjBiM0p6S0dVc0lHa3BPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdZV2t1Wkc5MEtGSnZLU3dnZFNBOUlHeHBMbVJ2ZENoU2J5azdDaUFnSUNBZ0lDQWdhV1lnS0dnZ1BqMGdNQ0FtSmlCMUlEdzlJR2dwSUhKbGRIVnliaUIwTG1OdmNIa29hU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHUWdQU0JzSUNvZ2RTQXRJR2dnS2lCak93b2dJQ0FnSUNBZ0lHbG1JQ2hrSUR3OUlEQWdKaVlnYkNBK1BTQXdJQ1ltSUdnZ1BEMGdNQ2tnY21WMGRYSnVJRzhnUFNCc0lDOGdLR3dnTFNCb0tTd2dkQzVqYjNCNUtHNHBMbUZrWkZOallXeGxaRlpsWTNSdmNpaGhhU3dnYnlrN0NpQWdJQ0FnSUNBZ1VHOHVjM1ZpVm1WamRHOXljeWhsTENCeUtUc0tJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlHRnBMbVJ2ZENoUWJ5a3NJRzBnUFNCc2FTNWtiM1FvVUc4cE93b2dJQ0FnSUNBZ0lHbG1JQ2h0SUQ0OUlEQWdKaVlnWmlBOFBTQnRLU0J5WlhSMWNtNGdkQzVqYjNCNUtISXBPd29nSUNBZ0lDQWdJR3hsZENCNElEMGdaaUFxSUdNZ0xTQnNJQ29nYlRzS0lDQWdJQ0FnSUNCcFppQW9lQ0E4UFNBd0lDWW1JR01nUGowZ01DQW1KaUJ0SUR3OUlEQXBJSEpsZEhWeWJpQmhJRDBnWXlBdklDaGpJQzBnYlNrc0lIUXVZMjl3ZVNodUtTNWhaR1JUWTJGc1pXUldaV04wYjNJb2JHa3NJR0VwT3dvZ0lDQWdJQ0FnSUd4bGRDQjJJRDBnYUNBcUlHMGdMU0JtSUNvZ2RUc0tJQ0FnSUNBZ0lDQnBaaUFvZGlBOFBTQXdJQ1ltSUhVZ0xTQm9JRDQ5SURBZ0ppWWdaaUF0SUcwZ1BqMGdNQ2tnY21WMGRYSnVJRUZzTG5OMVlsWmxZM1J2Y25Nb2Npd2dhU2tzSUdFZ1BTQW9kU0F0SUdncElDOGdLSFVnTFNCb0lDc2dLR1lnTFNCdEtTa3NJSFF1WTI5d2VTaHBLUzVoWkdSVFkyRnNaV1JXWldOMGIzSW9RV3dzSUdFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JuSUQwZ01TQXZJQ2gySUNzZ2VDQXJJR1FwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2SUQwZ2VDQXFJR2NzSUdFZ1BTQmtJQ29nWnl3Z2RDNWpiM0I1S0c0cExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loaGFTd2dieWt1WVdSa1UyTmhiR1ZrVm1WamRHOXlLR3hwTENCaEtUc0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WVM1bGNYVmhiSE1vZEdocGN5NWhLU0FtSmlCbExtSXVaWEYxWVd4ektIUm9hWE11WWlrZ0ppWWdaUzVqTG1WeGRXRnNjeWgwYUdsekxtTXBPd29nSUNBZ2ZRcDlMQ0JzWmlBOUlEQXNJR1IwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHeG1LeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdSWFFvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSk5ZWFJsY21saGJDSXNJSFJvYVhNdVptOW5JRDBnSVRBc0lIUm9hWE11WW14bGJtUnBibWNnUFNCemNpd2dkR2hwY3k1emFXUmxJRDBnUVdrc0lIUm9hWE11ZG1WeWRHVjRRMjlzYjNKeklEMGdJVEVzSUhSb2FYTXViM0JoWTJsMGVTQTlJREVzSUhSb2FYTXVabTl5YldGMElEMGdZM1FzSUhSb2FYTXVkSEpoYm5Od1lYSmxiblFnUFNBaE1Td2dkR2hwY3k1aWJHVnVaRk55WXlBOUlFZGpMQ0IwYUdsekxtSnNaVzVrUkhOMElEMGdWbU1zSUhSb2FYTXVZbXhsYm1SRmNYVmhkR2x2YmlBOUlGOXBMQ0IwYUdsekxtSnNaVzVrVTNKalFXeHdhR0VnUFNCdWRXeHNMQ0IwYUdsekxtSnNaVzVrUkhOMFFXeHdhR0VnUFNCdWRXeHNMQ0IwYUdsekxtSnNaVzVrUlhGMVlYUnBiMjVCYkhCb1lTQTlJRzUxYkd3c0lIUm9hWE11WkdWd2RHaEdkVzVqSUQwZ1pXRXNJSFJvYVhNdVpHVndkR2hVWlhOMElEMGdJVEFzSUhSb2FYTXVaR1Z3ZEdoWGNtbDBaU0E5SUNFd0xDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNnUFNBeU5UVXNJSFJvYVhNdWMzUmxibU5wYkVaMWJtTWdQU0JWWkN3Z2RHaHBjeTV6ZEdWdVkybHNVbVZtSUQwZ01Dd2dkR2hwY3k1emRHVnVZMmxzUm5WdVkwMWhjMnNnUFNBeU5UVXNJSFJvYVhNdWMzUmxibU5wYkVaaGFXd2dQU0IyYnl3Z2RHaHBjeTV6ZEdWdVkybHNXa1poYVd3Z1BTQjJieXdnZEdocGN5NXpkR1Z1WTJsc1dsQmhjM01nUFNCMmJ5d2dkR2hwY3k1emRHVnVZMmxzVjNKcGRHVWdQU0FoTVN3Z2RHaHBjeTVqYkdsd2NHbHVaMUJzWVc1bGN5QTlJRzUxYkd3c0lIUm9hWE11WTJ4cGNFbHVkR1Z5YzJWamRHbHZiaUE5SUNFeExDQjBhR2x6TG1Oc2FYQlRhR0ZrYjNkeklEMGdJVEVzSUhSb2FYTXVjMmhoWkc5M1UybGtaU0E5SUc1MWJHd3NJSFJvYVhNdVkyOXNiM0pYY21sMFpTQTlJQ0V3TENCMGFHbHpMbkJ5WldOcGMybHZiaUE5SUc1MWJHd3NJSFJvYVhNdWNHOXNlV2R2Yms5bVpuTmxkQ0E5SUNFeExDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ1BTQXdMQ0IwYUdsekxuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJREFzSUhSb2FYTXVaR2wwYUdWeWFXNW5JRDBnSVRFc0lIUm9hWE11WVd4d2FHRlViME52ZG1WeVlXZGxJRDBnSVRFc0lIUm9hWE11Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoSUQwZ0lURXNJSFJvYVhNdWRtbHphV0pzWlNBOUlDRXdMQ0IwYUdsekxuUnZibVZOWVhCd1pXUWdQU0FoTUN3Z2RHaHBjeTUxYzJWeVJHRjBZU0E5SUh0OUxDQjBhR2x6TG5abGNuTnBiMjRnUFNBd0xDQjBhR2x6TGw5aGJIQm9ZVlJsYzNRZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWjJWMElHRnNjR2hoVkdWemRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZllXeHdhR0ZVWlhOME93b2dJQ0FnZlFvZ0lDQWdjMlYwSUdGc2NHaGhWR1Z6ZENobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1ZllXeHdhR0ZVWlhOMElENGdNQ0FoUFNCbElENGdNQ0FtSmlCMGFHbHpMblpsY25OcGIyNHJLeXdnZEdocGN5NWZZV3h3YUdGVVpYTjBJRDBnWlRzS0lDQWdJSDBLSUNBZ0lHOXVRblZwYkdRb0tTQjdmUW9nSUNBZ2IyNUNaV1p2Y21WU1pXNWtaWElvS1NCN2ZRb2dJQ0FnYjI1Q1pXWnZjbVZEYjIxd2FXeGxLQ2tnZTMwS0lDQWdJR04xYzNSdmJWQnliMmR5WVcxRFlXTm9aVXRsZVNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV2YmtKbFptOXlaVU52YlhCcGJHVXVkRzlUZEhKcGJtY29LVHNLSUNBZ0lIMEtJQ0FnSUhObGRGWmhiSFZsY3lobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQjBJR2x1SUdVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1ZiZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNodUlEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMFpYSnBZV3c2SUNjaUlDc2dkQ0FySUNJbklIQmhjbUZ0WlhSbGNpQnBjeUIxYm1SbFptbHVaV1F1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ0luTm9ZV1JwYm1jaUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMaUlnS3lCMGFHbHpMblI1Y0dVZ0t5QWlPaUF1YzJoaFpHbHVaeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ2RHaGxJR0p2YjJ4bFlXNGdMbVpzWVhSVGFHRmthVzVuSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQnVJRDA5UFNCcll6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzRpSUNzZ2RHaHBjeTUwZVhCbElDc2dJam9nSnlJZ0t5QjBJQ3NnSWljZ2FYTWdibTkwSUdFZ2NISnZjR1Z5ZEhrZ2IyWWdkR2hwY3lCdFlYUmxjbWxoYkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHa2dKaVlnYVM1cGMwTnZiRzl5SUQ4Z2FTNXpaWFFvYmlrZ09pQnBJQ1ltSUdrdWFYTldaV04wYjNJeklDWW1JRzRnSmlZZ2JpNXBjMVpsWTNSdmNqTWdQeUJwTG1OdmNIa29iaWtnT2lCMGFHbHpXM1JkSUQwZ2Jqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlNBOVBUMGdkbTlwWkNBd0lIeDhJSFI1Y0dWdlppQmxJRDA5SUNKemRISnBibWNpT3dvZ0lDQWdJQ0FnSUhRZ0ppWWdLR1VnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSMWNtVnpPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzFoWjJWek9pQjdmUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoWkdGMFlUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dOQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJazFoZEdWeWFXRnNJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsYm1WeVlYUnZjam9nSWsxaGRHVnlhV0ZzTG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiaTUxZFdsa0lEMGdkR2hwY3k1MWRXbGtMQ0J1TG5SNWNHVWdQU0IwYUdsekxuUjVjR1VzSUhSb2FYTXVibUZ0WlNBaFBUMGdJaUlnSmlZZ0tHNHVibUZ0WlNBOUlIUm9hWE11Ym1GdFpTa3NJSFJvYVhNdVkyOXNiM0lnSmlZZ2RHaHBjeTVqYjJ4dmNpNXBjME52Ykc5eUlDWW1JQ2h1TG1OdmJHOXlJRDBnZEdocGN5NWpiMnh2Y2k1blpYUklaWGdvS1Nrc0lIUm9hWE11Y205MVoyaHVaWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1Y205MVoyaHVaWE56SUQwZ2RHaHBjeTV5YjNWbmFHNWxjM01wTENCMGFHbHpMbTFsZEdGc2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbTFsZEdGc2JtVnpjeUE5SUhSb2FYTXViV1YwWVd4dVpYTnpLU3dnZEdocGN5NXphR1ZsYmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5Ob1pXVnVJRDBnZEdocGN5NXphR1ZsYmlrc0lIUm9hWE11YzJobFpXNURiMnh2Y2lBbUppQjBhR2x6TG5Ob1pXVnVRMjlzYjNJdWFYTkRiMnh2Y2lBbUppQW9iaTV6YUdWbGJrTnZiRzl5SUQwZ2RHaHBjeTV6YUdWbGJrTnZiRzl5TG1kbGRFaGxlQ2dwS1N3Z2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTm9aV1Z1VW05MVoyaHVaWE56SUQwZ2RHaHBjeTV6YUdWbGJsSnZkV2RvYm1WemN5a3NJSFJvYVhNdVpXMXBjM05wZG1VZ0ppWWdkR2hwY3k1bGJXbHpjMmwyWlM1cGMwTnZiRzl5SUNZbUlDaHVMbVZ0YVhOemFYWmxJRDBnZEdocGN5NWxiV2x6YzJsMlpTNW5aWFJJWlhnb0tTa3NJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ0ppWWdkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBaFBUMGdNU0FtSmlBb2JpNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTQTlJSFJvYVhNdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrcExDQjBhR2x6TG5Od1pXTjFiR0Z5SUNZbUlIUm9hWE11YzNCbFkzVnNZWEl1YVhORGIyeHZjaUFtSmlBb2JpNXpjR1ZqZFd4aGNpQTlJSFJvYVhNdWMzQmxZM1ZzWVhJdVoyVjBTR1Y0S0NrcExDQjBhR2x6TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGtnUFNCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVLU3dnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5SUNZbUlIUm9hWE11YzNCbFkzVnNZWEpEYjJ4dmNpNXBjME52Ykc5eUlDWW1JQ2h1TG5Od1pXTjFiR0Z5UTI5c2IzSWdQU0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0l1WjJWMFNHVjRLQ2twTENCMGFHbHpMbk5vYVc1cGJtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHVMbk5vYVc1cGJtVnpjeUE5SUhSb2FYTXVjMmhwYm1sdVpYTnpLU3dnZEdocGN5NWpiR1ZoY21OdllYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWpiR1ZoY21OdllYUWdQU0IwYUdsekxtTnNaV0Z5WTI5aGRDa3NJSFJvYVhNdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklEMGdkR2hwY3k1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNNcExDQjBhR2x6TG1Oc1pXRnlZMjloZEUxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZMnhsWVhKamIyRjBUV0Z3SUQwZ2RHaHBjeTVqYkdWaGNtTnZZWFJOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBbUppQjBhR2x6TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndJRDBnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDQW1KaUIwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lEMGdkR2hwY3k1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVWdQU0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxMblJ2UVhKeVlYa29LU2tzSUhSb2FYTXViV0Z3SUNZbUlIUm9hWE11YldGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1dFlYQWdQU0IwYUdsekxtMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWJXRjBZMkZ3SUNZbUlIUm9hWE11YldGMFkyRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXRZWFJqWVhBZ1BTQjBhR2x6TG0xaGRHTmhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ0ppWWdkR2hwY3k1aGJIQm9ZVTFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1WVd4d2FHRk5ZWEFnUFNCMGFHbHpMbUZzY0doaFRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1c2FXZG9kRTFoY0NBbUppQjBhR2x6TG14cFoyaDBUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTVzYVdkb2RFMWhjQ0E5SUhSb2FYTXViR2xuYUhSTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRc0lHNHViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUtTd2dkR2hwY3k1aGIwMWhjQ0FtSmlCMGFHbHpMbUZ2VFdGd0xtbHpWR1Y0ZEhWeVpTQW1KaUFvYmk1aGIwMWhjQ0E5SUhSb2FYTXVZVzlOWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FzSUc0dVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCMGFHbHpMbUZ2VFdGd1NXNTBaVzV6YVhSNUtTd2dkR2hwY3k1aWRXMXdUV0Z3SUNZbUlIUm9hWE11WW5WdGNFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVZblZ0Y0UxaGNDQTlJSFJvYVhNdVluVnRjRTFoY0M1MGIwcFRUMDRvWlNrdWRYVnBaQ3dnYmk1aWRXMXdVMk5oYkdVZ1BTQjBhR2x6TG1KMWJYQlRZMkZzWlNrc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUNZbUlIUm9hWE11Ym05eWJXRnNUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV1YjNKdFlXeE5ZWEFnUFNCMGFHbHpMbTV2Y20xaGJFMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDd2diaTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxMQ0J1TG01dmNtMWhiRk5qWVd4bElEMGdkR2hwY3k1dWIzSnRZV3hUWTJGc1pTNTBiMEZ5Y21GNUtDa3BMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0NBbUppQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXNJRzR1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0J1TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXBMQ0IwYUdsekxuSnZkV2RvYm1WemMwMWhjQ0FtSmlCMGFHbHpMbkp2ZFdkb2JtVnpjMDFoY0M1cGMxUmxlSFIxY21VZ0ppWWdLRzR1Y205MVoyaHVaWE56VFdGd0lEMGdkR2hwY3k1eWIzVm5hRzVsYzNOTllYQXVkRzlLVTA5T0tHVXBMblYxYVdRcExDQjBhR2x6TG0xbGRHRnNibVZ6YzAxaGNDQW1KaUIwYUdsekxtMWxkR0ZzYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHViV1YwWVd4dVpYTnpUV0Z3SUQwZ2RHaHBjeTV0WlhSaGJHNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUNZbUlIUm9hWE11WlcxcGMzTnBkbVZOWVhBdWFYTlVaWGgwZFhKbElDWW1JQ2h1TG1WdGFYTnphWFpsVFdGd0lEMGdkR2hwY3k1bGJXbHpjMmwyWlUxaGNDNTBiMHBUVDA0b1pTa3VkWFZwWkNrc0lIUm9hWE11YzNCbFkzVnNZWEpOWVhBZ0ppWWdkR2hwY3k1emNHVmpkV3hoY2sxaGNDNXBjMVJsZUhSMWNtVWdKaVlnS0c0dWMzQmxZM1ZzWVhKTllYQWdQU0IwYUdsekxuTndaV04xYkdGeVRXRndMblJ2U2xOUFRpaGxLUzUxZFdsa0tTd2dkR2hwY3k1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQW1KaUIwYUdsekxuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0E5SUhSb2FYTXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEF1ZEc5S1UwOU9LR1VwTG5WMWFXUXBMQ0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0pOWVhBZ0ppWWdkR2hwY3k1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TG1selZHVjRkSFZ5WlNBbUppQW9iaTV6Y0dWamRXeGhja052Ykc5eVRXRndJRDBnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrS1N3Z2RHaHBjeTVsYm5aTllYQWdKaVlnZEdocGN5NWxiblpOWVhBdWFYTlVaWGgwZFhKbElDWW1JQ2h1TG1WdWRrMWhjQ0E5SUhSb2FYTXVaVzUyVFdGd0xuUnZTbE5QVGlobEtTNTFkV2xrTENCMGFHbHpMbU52YldKcGJtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JpNWpiMjFpYVc1bElEMGdkR2hwY3k1amIyMWlhVzVsS1Nrc0lIUm9hWE11Wlc1MlRXRndTVzUwWlc1emFYUjVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVaVzUyVFdGd1NXNTBaVzV6YVhSNUlEMGdkR2hwY3k1bGJuWk5ZWEJKYm5SbGJuTnBkSGtwTENCMGFHbHpMbkpsWm14bFkzUnBkbWwwZVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h1TG5KbFpteGxZM1JwZG1sMGVTQTlJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVLU3dnZEdocGN5NXlaV1p5WVdOMGFXOXVVbUYwYVc4Z0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1eVpXWnlZV04wYVc5dVVtRjBhVzhnUFNCMGFHbHpMbkpsWm5KaFkzUnBiMjVTWVhScGJ5a3NJSFJvYVhNdVozSmhaR2xsYm5STllYQWdKaVlnZEdocGN5NW5jbUZrYVdWdWRFMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVaM0poWkdsbGJuUk5ZWEFnUFNCMGFHbHpMbWR5WVdScFpXNTBUV0Z3TG5SdlNsTlBUaWhsS1M1MWRXbGtLU3dnZEdocGN5NTBjbUZ1YzIxcGMzTnBiMjRnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTUwY21GdWMyMXBjM05wYjI0Z1BTQjBhR2x6TG5SeVlXNXpiV2x6YzJsdmJpa3NJSFJvYVhNdWRISmhibk50YVhOemFXOXVUV0Z3SUNZbUlIUm9hWE11ZEhKaGJuTnRhWE56YVc5dVRXRndMbWx6VkdWNGRIVnlaU0FtSmlBb2JpNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ1BTQjBhR2x6TG5SeVlXNXpiV2x6YzJsdmJrMWhjQzUwYjBwVFQwNG9aU2t1ZFhWcFpDa3NJSFJvYVhNdWRHaHBZMnR1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dWRHaHBZMnR1WlhOeklEMGdkR2hwY3k1MGFHbGphMjVsYzNNcExDQjBhR2x6TG5Sb2FXTnJibVZ6YzAxaGNDQW1KaUIwYUdsekxuUm9hV05yYm1WemMwMWhjQzVwYzFSbGVIUjFjbVVnSmlZZ0tHNHVkR2hwWTJ0dVpYTnpUV0Z3SUQwZ2RHaHBjeTUwYUdsamEyNWxjM05OWVhBdWRHOUtVMDlPS0dVcExuVjFhV1FwTENCMGFHbHpMbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnSVQwOUlIWnZhV1FnTUNBbUppQW9iaTVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUQwZ2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sS1N3Z2RHaHBjeTVoZEhSbGJuVmhkR2x2YmtOdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVZWFIwWlc1MVlYUnBiMjVEYjJ4dmNpQTlJSFJvYVhNdVlYUjBaVzUxWVhScGIyNURiMnh2Y2k1blpYUklaWGdvS1Nrc0lIUm9hWE11YzJsNlpTQWhQVDBnZG05cFpDQXdJQ1ltSUNodUxuTnBlbVVnUFNCMGFHbHpMbk5wZW1VcExDQjBhR2x6TG5Ob1lXUnZkMU5wWkdVZ0lUMDlJRzUxYkd3Z0ppWWdLRzR1YzJoaFpHOTNVMmxrWlNBOUlIUm9hWE11YzJoaFpHOTNVMmxrWlNrc0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHNHVjMmw2WlVGMGRHVnVkV0YwYVc5dUlEMGdkR2hwY3k1emFYcGxRWFIwWlc1MVlYUnBiMjRwTENCMGFHbHpMbUpzWlc1a2FXNW5JQ0U5UFNCemNpQW1KaUFvYmk1aWJHVnVaR2x1WnlBOUlIUm9hWE11WW14bGJtUnBibWNwTENCMGFHbHpMbk5wWkdVZ0lUMDlJRUZwSUNZbUlDaHVMbk5wWkdVZ1BTQjBhR2x6TG5OcFpHVXBMQ0IwYUdsekxuWmxjblJsZUVOdmJHOXljeUFtSmlBb2JpNTJaWEowWlhoRGIyeHZjbk1nUFNBaE1Da3NJSFJvYVhNdWIzQmhZMmwwZVNBOElERWdKaVlnS0c0dWIzQmhZMmwwZVNBOUlIUm9hWE11YjNCaFkybDBlU2tzSUhSb2FYTXVabTl5YldGMElDRTlQU0JqZENBbUppQW9iaTVtYjNKdFlYUWdQU0IwYUdsekxtWnZjbTFoZENrc0lIUm9hWE11ZEhKaGJuTndZWEpsYm5RZ1BUMDlJQ0V3SUNZbUlDaHVMblJ5WVc1emNHRnlaVzUwSUQwZ2RHaHBjeTUwY21GdWMzQmhjbVZ1ZENrc0lHNHVaR1Z3ZEdoR2RXNWpJRDBnZEdocGN5NWtaWEIwYUVaMWJtTXNJRzR1WkdWd2RHaFVaWE4wSUQwZ2RHaHBjeTVrWlhCMGFGUmxjM1FzSUc0dVpHVndkR2hYY21sMFpTQTlJSFJvYVhNdVpHVndkR2hYY21sMFpTd2diaTVqYjJ4dmNsZHlhWFJsSUQwZ2RHaHBjeTVqYjJ4dmNsZHlhWFJsTENCdUxuTjBaVzVqYVd4WGNtbDBaU0E5SUhSb2FYTXVjM1JsYm1OcGJGZHlhWFJsTENCdUxuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ1BTQjBhR2x6TG5OMFpXNWphV3hYY21sMFpVMWhjMnNzSUc0dWMzUmxibU5wYkVaMWJtTWdQU0IwYUdsekxuTjBaVzVqYVd4R2RXNWpMQ0J1TG5OMFpXNWphV3hTWldZZ1BTQjBhR2x6TG5OMFpXNWphV3hTWldZc0lHNHVjM1JsYm1OcGJFWjFibU5OWVhOcklEMGdkR2hwY3k1emRHVnVZMmxzUm5WdVkwMWhjMnNzSUc0dWMzUmxibU5wYkVaaGFXd2dQU0IwYUdsekxuTjBaVzVqYVd4R1lXbHNMQ0J1TG5OMFpXNWphV3hhUm1GcGJDQTlJSFJvYVhNdWMzUmxibU5wYkZwR1lXbHNMQ0J1TG5OMFpXNWphV3hhVUdGemN5QTlJSFJvYVhNdWMzUmxibU5wYkZwUVlYTnpMQ0IwYUdsekxuSnZkR0YwYVc5dUlDWW1JSFJvYVhNdWNtOTBZWFJwYjI0Z0lUMDlJREFnSmlZZ0tHNHVjbTkwWVhScGIyNGdQU0IwYUdsekxuSnZkR0YwYVc5dUtTd2dkR2hwY3k1d2IyeDVaMjl1VDJabWMyVjBJRDA5UFNBaE1DQW1KaUFvYmk1d2IyeDVaMjl1VDJabWMyVjBJRDBnSVRBcExDQjBhR2x6TG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ0lUMDlJREFnSmlZZ0tHNHVjRzlzZVdkdmJrOW1abk5sZEVaaFkzUnZjaUE5SUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZEVaaFkzUnZjaWtzSUhSb2FYTXVjRzlzZVdkdmJrOW1abk5sZEZWdWFYUnpJQ0U5UFNBd0lDWW1JQ2h1TG5CdmJIbG5iMjVQWm1aelpYUlZibWwwY3lBOUlIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6S1N3Z2RHaHBjeTVzYVc1bGQybGtkR2dnSmlZZ2RHaHBjeTVzYVc1bGQybGtkR2dnSVQwOUlERWdKaVlnS0c0dWJHbHVaWGRwWkhSb0lEMGdkR2hwY3k1c2FXNWxkMmxrZEdncExDQjBhR2x6TG1SaGMyaFRhWHBsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzR1WkdGemFGTnBlbVVnUFNCMGFHbHpMbVJoYzJoVGFYcGxLU3dnZEdocGN5NW5ZWEJUYVhwbElDRTlQU0IyYjJsa0lEQWdKaVlnS0c0dVoyRndVMmw2WlNBOUlIUm9hWE11WjJGd1UybDZaU2tzSUhSb2FYTXVjMk5oYkdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYmk1elkyRnNaU0E5SUhSb2FYTXVjMk5oYkdVcExDQjBhR2x6TG1ScGRHaGxjbWx1WnlBOVBUMGdJVEFnSmlZZ0tHNHVaR2wwYUdWeWFXNW5JRDBnSVRBcExDQjBhR2x6TG1Gc2NHaGhWR1Z6ZENBK0lEQWdKaVlnS0c0dVlXeHdhR0ZVWlhOMElEMGdkR2hwY3k1aGJIQm9ZVlJsYzNRcExDQjBhR2x6TG1Gc2NHaGhWRzlEYjNabGNtRm5aU0E5UFQwZ0lUQWdKaVlnS0c0dVlXeHdhR0ZVYjBOdmRtVnlZV2RsSUQwZ2RHaHBjeTVoYkhCb1lWUnZRMjkyWlhKaFoyVXBMQ0IwYUdsekxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQTlQVDBnSVRBZ0ppWWdLRzR1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoSUQwZ2RHaHBjeTV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VwTENCMGFHbHpMbmRwY21WbWNtRnRaU0E5UFQwZ0lUQWdKaVlnS0c0dWQybHlaV1p5WVcxbElEMGdkR2hwY3k1M2FYSmxabkpoYldVcExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBK0lERWdKaVlnS0c0dWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdkR2hwY3k1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdncExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFnSVQwOUlDSnliM1Z1WkNJZ0ppWWdLRzR1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0E5SUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDa3NJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z0lUMDlJQ0p5YjNWdVpDSWdKaVlnS0c0dWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1S1N3Z2RHaHBjeTVtYkdGMFUyaGhaR2x1WnlBOVBUMGdJVEFnSmlZZ0tHNHVabXhoZEZOb1lXUnBibWNnUFNCMGFHbHpMbVpzWVhSVGFHRmthVzVuS1N3Z2RHaHBjeTUyYVhOcFlteGxJRDA5UFNBaE1TQW1KaUFvYmk1MmFYTnBZbXhsSUQwZ0lURXBMQ0IwYUdsekxuUnZibVZOWVhCd1pXUWdQVDA5SUNFeElDWW1JQ2h1TG5SdmJtVk5ZWEJ3WldRZ1BTQWhNU2tzSUVwVFQwNHVjM1J5YVc1bmFXWjVLSFJvYVhNdWRYTmxja1JoZEdFcElDRTlQU0FpZTMwaUlDWW1JQ2h1TG5WelpYSkVZWFJoSUQwZ2RHaHBjeTUxYzJWeVJHRjBZU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYVNoeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0JwYmlCeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2NsdGhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQnNMbTFsZEdGa1lYUmhMQ0J2TG5CMWMyZ29iQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzg3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2FTaGxMblJsZUhSMWNtVnpLU3dnYnlBOUlHa29aUzVwYldGblpYTXBPd29nSUNBZ0lDQWdJQ0FnSUNCeUxteGxibWQwYUNBK0lEQWdKaVlnS0c0dWRHVjRkSFZ5WlhNZ1BTQnlLU3dnYnk1c1pXNW5kR2dnUGlBd0lDWW1JQ2h1TG1sdFlXZGxjeUE5SUc4cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2Jqc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0JsTG01aGJXVXNJSFJvYVhNdVptOW5JRDBnWlM1bWIyY3NJSFJvYVhNdVlteGxibVJwYm1jZ1BTQmxMbUpzWlc1a2FXNW5MQ0IwYUdsekxuTnBaR1VnUFNCbExuTnBaR1VzSUhSb2FYTXVkbVZ5ZEdWNFEyOXNiM0p6SUQwZ1pTNTJaWEowWlhoRGIyeHZjbk1zSUhSb2FYTXViM0JoWTJsMGVTQTlJR1V1YjNCaFkybDBlU3dnZEdocGN5NW1iM0p0WVhRZ1BTQmxMbVp2Y20xaGRDd2dkR2hwY3k1MGNtRnVjM0JoY21WdWRDQTlJR1V1ZEhKaGJuTndZWEpsYm5Rc0lIUm9hWE11WW14bGJtUlRjbU1nUFNCbExtSnNaVzVrVTNKakxDQjBhR2x6TG1Kc1pXNWtSSE4wSUQwZ1pTNWliR1Z1WkVSemRDd2dkR2hwY3k1aWJHVnVaRVZ4ZFdGMGFXOXVJRDBnWlM1aWJHVnVaRVZ4ZFdGMGFXOXVMQ0IwYUdsekxtSnNaVzVrVTNKalFXeHdhR0VnUFNCbExtSnNaVzVrVTNKalFXeHdhR0VzSUhSb2FYTXVZbXhsYm1SRWMzUkJiSEJvWVNBOUlHVXVZbXhsYm1SRWMzUkJiSEJvWVN3Z2RHaHBjeTVpYkdWdVpFVnhkV0YwYVc5dVFXeHdhR0VnUFNCbExtSnNaVzVrUlhGMVlYUnBiMjVCYkhCb1lTd2dkR2hwY3k1a1pYQjBhRVoxYm1NZ1BTQmxMbVJsY0hSb1JuVnVZeXdnZEdocGN5NWtaWEIwYUZSbGMzUWdQU0JsTG1SbGNIUm9WR1Z6ZEN3Z2RHaHBjeTVrWlhCMGFGZHlhWFJsSUQwZ1pTNWtaWEIwYUZkeWFYUmxMQ0IwYUdsekxuTjBaVzVqYVd4WGNtbDBaVTFoYzJzZ1BTQmxMbk4wWlc1amFXeFhjbWwwWlUxaGMyc3NJSFJvYVhNdWMzUmxibU5wYkVaMWJtTWdQU0JsTG5OMFpXNWphV3hHZFc1akxDQjBhR2x6TG5OMFpXNWphV3hTWldZZ1BTQmxMbk4wWlc1amFXeFNaV1lzSUhSb2FYTXVjM1JsYm1OcGJFWjFibU5OWVhOcklEMGdaUzV6ZEdWdVkybHNSblZ1WTAxaGMyc3NJSFJvYVhNdWMzUmxibU5wYkVaaGFXd2dQU0JsTG5OMFpXNWphV3hHWVdsc0xDQjBhR2x6TG5OMFpXNWphV3hhUm1GcGJDQTlJR1V1YzNSbGJtTnBiRnBHWVdsc0xDQjBhR2x6TG5OMFpXNWphV3hhVUdGemN5QTlJR1V1YzNSbGJtTnBiRnBRWVhOekxDQjBhR2x6TG5OMFpXNWphV3hYY21sMFpTQTlJR1V1YzNSbGJtTnBiRmR5YVhSbE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWpiR2x3Y0dsdVoxQnNZVzVsY3l3Z2JpQTlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2FXWWdLSFFnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnYmlBOUlHNWxkeUJCY25KaGVTaHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNRHNnY2lBaFBUMGdhVHNnS3l0eUtXNWJjbDBnUFNCMFczSmRMbU5zYjI1bEtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Oc2FYQndhVzVuVUd4aGJtVnpJRDBnYml3Z2RHaHBjeTVqYkdsd1NXNTBaWEp6WldOMGFXOXVJRDBnWlM1amJHbHdTVzUwWlhKelpXTjBhVzl1TENCMGFHbHpMbU5zYVhCVGFHRmtiM2R6SUQwZ1pTNWpiR2x3VTJoaFpHOTNjeXdnZEdocGN5NXphR0ZrYjNkVGFXUmxJRDBnWlM1emFHRmtiM2RUYVdSbExDQjBhR2x6TG1OdmJHOXlWM0pwZEdVZ1BTQmxMbU52Ykc5eVYzSnBkR1VzSUhSb2FYTXVjSEpsWTJsemFXOXVJRDBnWlM1d2NtVmphWE5wYjI0c0lIUm9hWE11Y0c5c2VXZHZiazltWm5ObGRDQTlJR1V1Y0c5c2VXZHZiazltWm5ObGRDd2dkR2hwY3k1d2IyeDVaMjl1VDJabWMyVjBSbUZqZEc5eUlEMGdaUzV3YjJ4NVoyOXVUMlptYzJWMFJtRmpkRzl5TENCMGFHbHpMbkJ2YkhsbmIyNVBabVp6WlhSVmJtbDBjeUE5SUdVdWNHOXNlV2R2Yms5bVpuTmxkRlZ1YVhSekxDQjBhR2x6TG1ScGRHaGxjbWx1WnlBOUlHVXVaR2wwYUdWeWFXNW5MQ0IwYUdsekxtRnNjR2hoVkdWemRDQTlJR1V1WVd4d2FHRlVaWE4wTENCMGFHbHpMbUZzY0doaFZHOURiM1psY21GblpTQTlJR1V1WVd4d2FHRlViME52ZG1WeVlXZGxMQ0IwYUdsekxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQTlJR1V1Y0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoTENCMGFHbHpMblpwYzJsaWJHVWdQU0JsTG5acGMybGliR1VzSUhSb2FYTXVkRzl1WlUxaGNIQmxaQ0E5SUdVdWRHOXVaVTFoY0hCbFpDd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb1pTNTFjMlZ5UkdGMFlTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVpHbHpjRzl6WlNJS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJSE5sZENCdVpXVmtjMVZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNBOVBUMGdJVEFnSmlZZ2RHaHBjeTUyWlhKemFXOXVLeXM3Q2lBZ0lDQjlDbjA3Q21SMExuQnliM1J2ZEhsd1pTNXBjMDFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUFrWXlBOUlIc0tJQ0FnSUdGc2FXTmxZbXgxWlRvZ01UVTNPVEl6T0RNc0NpQWdJQ0JoYm5ScGNYVmxkMmhwZEdVNklERTJORFEwTXpjMUxBb2dJQ0FnWVhGMVlUb2dOalUxTXpVc0NpQWdJQ0JoY1hWaGJXRnlhVzVsT2lBNE16ZzROVFkwTEFvZ0lDQWdZWHAxY21VNklERTFOemswTVRjMUxBb2dJQ0FnWW1WcFoyVTZJREUyTVRFNU1qWXdMQW9nSUNBZ1ltbHpjWFZsT2lBeE5qYzNNREkwTkN3S0lDQWdJR0pzWVdOck9pQXdMQW9nSUNBZ1lteGhibU5vWldSaGJHMXZibVE2SURFMk56Y3lNRFExTEFvZ0lDQWdZbXgxWlRvZ01qVTFMQW9nSUNBZ1lteDFaWFpwYjJ4bGREb2dPVEExTlRJd01pd0tJQ0FnSUdKeWIzZHVPaUF4TURneU5ESXpOQ3dLSUNBZ0lHSjFjbXg1ZDI5dlpEb2dNVFExT1RZeU16RXNDaUFnSUNCallXUmxkR0pzZFdVNklEWXlOalkxTWpnc0NpQWdJQ0JqYUdGeWRISmxkWE5sT2lBNE16ZzRNelV5TEFvZ0lDQWdZMmh2WTI5c1lYUmxPaUF4TXpjNE9UUTNNQ3dLSUNBZ0lHTnZjbUZzT2lBeE5qYzBOREkzTWl3S0lDQWdJR052Y201bWJHOTNaWEppYkhWbE9pQTJOVGt4T1RneExBb2dJQ0FnWTI5eWJuTnBiR3M2SURFMk56YzFNemc0TEFvZ0lDQWdZM0pwYlhOdmJqb2dNVFEwTWpNeE1EQXNDaUFnSUNCamVXRnVPaUEyTlRVek5Td0tJQ0FnSUdSaGNtdGliSFZsT2lBeE16a3NDaUFnSUNCa1lYSnJZM2xoYmpvZ016VTNNak1zQ2lBZ0lDQmtZWEpyWjI5c1pHVnVjbTlrT2lBeE1qQTVNamt6T1N3S0lDQWdJR1JoY210bmNtRjVPaUF4TVRFeE9UQXhOeXdLSUNBZ0lHUmhjbXRuY21WbGJqb2dNalUyTURBc0NpQWdJQ0JrWVhKclozSmxlVG9nTVRFeE1Ua3dNVGNzQ2lBZ0lDQmtZWEpyYTJoaGEyazZJREV5TkRNek1qVTVMQW9nSUNBZ1pHRnlhMjFoWjJWdWRHRTZJRGt4TURrMk5ETXNDaUFnSUNCa1lYSnJiMnhwZG1WbmNtVmxiam9nTlRVNU56azVPU3dLSUNBZ0lHUmhjbXR2Y21GdVoyVTZJREUyTnpRM05USXdMQW9nSUNBZ1pHRnlhMjl5WTJocFpEb2dNVEF3TkRBd01USXNDaUFnSUNCa1lYSnJjbVZrT2lBNU1UQTVOVEEwTEFvZ0lDQWdaR0Z5YTNOaGJHMXZiam9nTVRVek1EZzBNVEFzQ2lBZ0lDQmtZWEpyYzJWaFozSmxaVzQ2SURrME1UazVNVGtzQ2lBZ0lDQmtZWEpyYzJ4aGRHVmliSFZsT2lBME56TTBNelEzTEFvZ0lDQWdaR0Z5YTNOc1lYUmxaM0poZVRvZ016RXdNRFE1TlN3S0lDQWdJR1JoY210emJHRjBaV2R5WlhrNklETXhNREEwT1RVc0NpQWdJQ0JrWVhKcmRIVnljWFZ2YVhObE9pQTFNamswTlN3S0lDQWdJR1JoY210MmFXOXNaWFE2SURrMk9UazFNemtzQ2lBZ0lDQmtaV1Z3Y0dsdWF6b2dNVFkzTVRZNU5EY3NDaUFnSUNCa1pXVndjMnQ1WW14MVpUb2dORGt4TlRFc0NpQWdJQ0JrYVcxbmNtRjVPaUEyT1RBNE1qWTFMQW9nSUNBZ1pHbHRaM0psZVRvZ05qa3dPREkyTlN3S0lDQWdJR1J2WkdkbGNtSnNkV1U2SURJd01ETXhPVGtzQ2lBZ0lDQm1hWEpsWW5KcFkyczZJREV4TmpjME1UUTJMQW9nSUNBZ1pteHZjbUZzZDJocGRHVTZJREUyTnpjMU9USXdMQW9nSUNBZ1ptOXlaWE4wWjNKbFpXNDZJREl5TmpNNE5ESXNDaUFnSUNCbWRXTm9jMmxoT2lBeE5qY3hNVGt6TlN3S0lDQWdJR2RoYVc1elltOXliem9nTVRRME56UTBOakFzQ2lBZ0lDQm5hRzl6ZEhkb2FYUmxPaUF4TmpNeE5qWTNNU3dLSUNBZ0lHZHZiR1E2SURFMk56WTJOekl3TEFvZ0lDQWdaMjlzWkdWdWNtOWtPaUF4TkRNeU9URXlNQ3dLSUNBZ0lHZHlZWGs2SURnME1qRTFNRFFzQ2lBZ0lDQm5jbVZsYmpvZ016STNOamdzQ2lBZ0lDQm5jbVZsYm5sbGJHeHZkem9nTVRFME1ETXdOVFVzQ2lBZ0lDQm5jbVY1T2lBNE5ESXhOVEEwTEFvZ0lDQWdhRzl1Wlhsa1pYYzZJREUxTnprME1UWXdMQW9nSUNBZ2FHOTBjR2x1YXpvZ01UWTNNemczTkRBc0NpQWdJQ0JwYm1ScFlXNXlaV1E2SURFek5EVTROVEkwTEFvZ0lDQWdhVzVrYVdkdk9pQTBPVEUxTXpNd0xBb2dJQ0FnYVhadmNuazZJREUyTnpjM01qQXdMQW9nSUNBZ2EyaGhhMms2SURFMU56ZzNOall3TEFvZ0lDQWdiR0YyWlc1a1pYSTZJREUxTVRNeU5ERXdMQW9nSUNBZ2JHRjJaVzVrWlhKaWJIVnphRG9nTVRZM056TXpOalVzQ2lBZ0lDQnNZWGR1WjNKbFpXNDZJRGd4T1RBNU56WXNDaUFnSUNCc1pXMXZibU5vYVdabWIyNDZJREUyTnpjMU9EZzFMQW9nSUNBZ2JHbG5hSFJpYkhWbE9pQXhNVE01TXpJMU5Dd0tJQ0FnSUd4cFoyaDBZMjl5WVd3NklERTFOell4TlRNMkxBb2dJQ0FnYkdsbmFIUmplV0Z1T2lBeE5EYzBOVFU1T1N3S0lDQWdJR3hwWjJoMFoyOXNaR1Z1Y205a2VXVnNiRzkzT2lBeE5qUTBPREl4TUN3S0lDQWdJR3hwWjJoMFozSmhlVG9nTVRNNE9ESXpNak1zQ2lBZ0lDQnNhV2RvZEdkeVpXVnVPaUE1TkRrNE1qVTJMQW9nSUNBZ2JHbG5hSFJuY21WNU9pQXhNemc0TWpNeU15d0tJQ0FnSUd4cFoyaDBjR2x1YXpvZ01UWTNOVGcwTmpVc0NpQWdJQ0JzYVdkb2RITmhiRzF2YmpvZ01UWTNOVEkzTmpJc0NpQWdJQ0JzYVdkb2RITmxZV2R5WldWdU9pQXlNVFF5T0Rrd0xBb2dJQ0FnYkdsbmFIUnphM2xpYkhWbE9pQTRPVEF3TXpRMkxBb2dJQ0FnYkdsbmFIUnpiR0YwWldkeVlYazZJRGM0TXpNM05UTXNDaUFnSUNCc2FXZG9kSE5zWVhSbFozSmxlVG9nTnpnek16YzFNeXdLSUNBZ0lHeHBaMmgwYzNSbFpXeGliSFZsT2lBeE1UVTRORGN6TkN3S0lDQWdJR3hwWjJoMGVXVnNiRzkzT2lBeE5qYzNOekU0TkN3S0lDQWdJR3hwYldVNklEWTFNamd3TEFvZ0lDQWdiR2x0WldkeVpXVnVPaUF6TXpJNU16TXdMQW9nSUNBZ2JHbHVaVzQ2SURFMk5EUTFOamN3TEFvZ0lDQWdiV0ZuWlc1MFlUb2dNVFkzTVRFNU16VXNDaUFnSUNCdFlYSnZiMjQ2SURnek9EZzJNRGdzQ2lBZ0lDQnRaV1JwZFcxaGNYVmhiV0Z5YVc1bE9pQTJOek0zTXpJeUxBb2dJQ0FnYldWa2FYVnRZbXgxWlRvZ01qQTFMQW9nSUNBZ2JXVmthWFZ0YjNKamFHbGtPaUF4TWpJeE1UWTJOeXdLSUNBZ0lHMWxaR2wxYlhCMWNuQnNaVG9nT1RZMk1qWTRNeXdLSUNBZ0lHMWxaR2wxYlhObFlXZHlaV1Z1T2lBek9UYzRNRGszTEFvZ0lDQWdiV1ZrYVhWdGMyeGhkR1ZpYkhWbE9pQTRNRGczTnprd0xBb2dJQ0FnYldWa2FYVnRjM0J5YVc1blozSmxaVzQ2SURZME1UVTBMQW9nSUNBZ2JXVmthWFZ0ZEhWeWNYVnZhWE5sT2lBME56Y3lNekF3TEFvZ0lDQWdiV1ZrYVhWdGRtbHZiR1YwY21Wa09pQXhNekEwTnpFM015d0tJQ0FnSUcxcFpHNXBaMmgwWW14MVpUb2dNVFkwTkRreE1pd0tJQ0FnSUcxcGJuUmpjbVZoYlRvZ01UWXhNakU0TlRBc0NpQWdJQ0J0YVhOMGVYSnZjMlU2SURFMk56Y3dNamN6TEFvZ0lDQWdiVzlqWTJGemFXNDZJREUyTnpjd01qSTVMQW9nSUNBZ2JtRjJZV3B2ZDJocGRHVTZJREUyTnpZNE5qZzFMQW9nSUNBZ2JtRjJlVG9nTVRJNExBb2dJQ0FnYjJ4a2JHRmpaVG9nTVRZMk5ETTFOVGdzQ2lBZ0lDQnZiR2wyWlRvZ09EUXlNVE0zTml3S0lDQWdJRzlzYVhabFpISmhZam9nTnpBME9EY3pPU3dLSUNBZ0lHOXlZVzVuWlRvZ01UWTNOVE01TWpBc0NpQWdJQ0J2Y21GdVoyVnlaV1E2SURFMk56STVNelEwTEFvZ0lDQWdiM0pqYUdsa09pQXhORE14TlRjek5Dd0tJQ0FnSUhCaGJHVm5iMnhrWlc1eWIyUTZJREUxTmpVM01UTXdMQW9nSUNBZ2NHRnNaV2R5WldWdU9pQXhNREF5TlRnNE1Dd0tJQ0FnSUhCaGJHVjBkWEp4ZFc5cGMyVTZJREV4TlRJNU9UWTJMQW9nSUNBZ2NHRnNaWFpwYjJ4bGRISmxaRG9nTVRRek9ERXlNRE1zQ2lBZ0lDQndZWEJoZVdGM2FHbHdPaUF4TmpjM016QTNOeXdLSUNBZ0lIQmxZV05vY0hWbVpqb2dNVFkzTmpjMk56TXNDaUFnSUNCd1pYSjFPaUF4TXpRMk9EazVNU3dLSUNBZ0lIQnBibXM2SURFMk56WXhNRE0xTEFvZ0lDQWdjR3gxYlRvZ01UUTFNalEyTXpjc0NpQWdJQ0J3YjNka1pYSmliSFZsT2lBeE1UVTVNVGt4TUN3S0lDQWdJSEIxY25Cc1pUb2dPRE00T0Rjek5pd0tJQ0FnSUhKbFltVmpZMkZ3ZFhKd2JHVTZJRFkyT1RjNE9ERXNDaUFnSUNCeVpXUTZJREUyTnpFeE5qZ3dMQW9nSUNBZ2NtOXplV0p5YjNkdU9pQXhNak0xTnpVeE9Td0tJQ0FnSUhKdmVXRnNZbXgxWlRvZ05ESTROamswTlN3S0lDQWdJSE5oWkdSc1pXSnliM2R1T2lBNU1USTNNVGczTEFvZ0lDQWdjMkZzYlc5dU9pQXhOalF4TmpnNE1pd0tJQ0FnSUhOaGJtUjVZbkp2ZDI0NklERTJNRE15T0RZMExBb2dJQ0FnYzJWaFozSmxaVzQ2SURNd05UQXpNamNzQ2lBZ0lDQnpaV0Z6YUdWc2JEb2dNVFkzTnpRMk16Z3NDaUFnSUNCemFXVnVibUU2SURFd05UQTJOemszTEFvZ0lDQWdjMmxzZG1WeU9pQXhNall6TWpJMU5pd0tJQ0FnSUhOcmVXSnNkV1U2SURnNU1EQXpNekVzQ2lBZ0lDQnpiR0YwWldKc2RXVTZJRFk1TnpBd05qRXNDaUFnSUNCemJHRjBaV2R5WVhrNklEY3pOekk1TkRRc0NpQWdJQ0J6YkdGMFpXZHlaWGs2SURjek56STVORFFzQ2lBZ0lDQnpibTkzT2lBeE5qYzNOVGt6TUN3S0lDQWdJSE53Y21sdVoyZHlaV1Z1T2lBMk5UUXdOeXdLSUNBZ0lITjBaV1ZzWW14MVpUb2dORFl5TURrNE1Dd0tJQ0FnSUhSaGJqb2dNVE00TURnM09EQXNDaUFnSUNCMFpXRnNPaUF6TWpnNU5pd0tJQ0FnSUhSb2FYTjBiR1U2SURFME1qQTBPRGc0TEFvZ0lDQWdkRzl0WVhSdk9pQXhOamN6TnpBNU5Td0tJQ0FnSUhSMWNuRjFiMmx6WlRvZ05ESTFNVGcxTml3S0lDQWdJSFpwYjJ4bGREb2dNVFUyTXpFd09EWXNDaUFnSUNCM2FHVmhkRG9nTVRZeE1UTXpNekVzQ2lBZ0lDQjNhR2wwWlRvZ01UWTNOemN5TVRVc0NpQWdJQ0IzYUdsMFpYTnRiMnRsT2lBeE5qRXhPVEk0TlN3S0lDQWdJSGxsYkd4dmR6b2dNVFkzTnpZNU5qQXNDaUFnSUNCNVpXeHNiM2RuY21WbGJqb2dNVEF4TkRVd056UUtmU3dnUm5RZ1BTQjdDaUFnSUNCb09pQXdMQW9nSUNBZ2N6b2dNQ3dLSUNBZ0lHdzZJREFLZlN3Z2FuSWdQU0I3Q2lBZ0lDQm9PaUF3TEFvZ0lDQWdjem9nTUN3S0lDQWdJR3c2SURBS2ZUc0tablZ1WTNScGIyNGdTVzhvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdjbVYwZFhKdUlIUWdQQ0F3SUNZbUlDaDBJQ3M5SURFcExDQjBJRDRnTVNBbUppQW9kQ0F0UFNBeEtTd2dkQ0E4SURFZ0x5QTJJRDhnY3lBcklDaGxJQzBnY3lrZ0tpQTJJQ29nZENBNklIUWdQQ0F4SUM4Z01pQS9JR1VnT2lCMElEd2dNaUF2SURNZ1B5QnpJQ3NnS0dVZ0xTQnpLU0FxSURZZ0tpQW9NaUF2SURNZ0xTQjBLU0E2SUhNN0NuMEtablZ1WTNScGIyNGdSRzhvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nUENBdU1EUXdORFVnUHlCeklDb2dMakEzTnpNNU9UTTRNRGdnT2lCTllYUm9MbkJ2ZHloeklDb2dMamswTnpnMk56STVPRFlnS3lBdU1EVXlNVE15TnpBeE5Dd2dNaTQwS1RzS2ZRcG1kVzVqZEdsdmJpQkdieWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdjeUE4SUM0d01ETXhNekE0SUQ4Z2N5QXFJREV5TGpreUlEb2dNUzR3TlRVZ0tpQk5ZWFJvTG5CdmR5aHpMQ0F1TkRFMk5qWXBJQzBnTGpBMU5Uc0tmUXAyWVhJZ1lXVWdQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUtYc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDQTlQVDBnZG05cFpDQXdJQ1ltSUc0Z1BUMDlJSFp2YVdRZ01DQS9JSFJvYVhNdWMyVjBLR1VwSURvZ2RHaHBjeTV6WlhSU1IwSW9aU3dnZEN3Z2JpazdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQ1ltSUdVdWFYTkRiMnh2Y2lBL0lIUm9hWE11WTI5d2VTaGxLU0E2SUhSNWNHVnZaaUJsSUQwOUlDSnVkVzFpWlhJaUlEOGdkR2hwY3k1elpYUklaWGdvWlNrZ09pQjBlWEJsYjJZZ1pTQTlQU0FpYzNSeWFXNW5JaUFtSmlCMGFHbHpMbk5sZEZOMGVXeGxLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFUyTmhiR0Z5S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1pTd2dkR2hwY3k1bklEMGdaU3dnZEdocGN5NWlJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFaGxlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ1BTQk5ZWFJvTG1ac2IyOXlLR1VwTENCMGFHbHpMbklnUFNBb1pTQStQaUF4TmlBbUlESTFOU2tnTHlBeU5UVXNJSFJvYVhNdVp5QTlJQ2hsSUQ0K0lEZ2dKaUF5TlRVcElDOGdNalUxTENCMGFHbHpMbUlnUFNBb1pTQW1JREkxTlNrZ0x5QXlOVFVzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSU1IwSW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQmxMQ0IwYUdsekxtY2dQU0IwTENCMGFHbHpMbUlnUFNCdUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBTRk5NS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCcFppQW9aU0E5SUdSaEtHVXNJREVwTENCMElEMGdiWFFvZEN3Z01Dd2dNU2tzSUc0Z1BTQnRkQ2h1TENBd0xDQXhLU3dnZENBOVBUMGdNQ2tnZEdocGN5NXlJRDBnZEdocGN5NW5JRDBnZEdocGN5NWlJRDBnYmpzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUlEdzlJQzQxSUQ4Z2JpQXFJQ2d4SUNzZ2RDa2dPaUJ1SUNzZ2RDQXRJRzRnS2lCMExDQnlJRDBnTWlBcUlHNGdMU0JwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5JZ1BTQkpieWh5TENCcExDQmxJQ3NnTVNBdklETXBMQ0IwYUdsekxtY2dQU0JKYnloeUxDQnBMQ0JsS1N3Z2RHaHBjeTVpSUQwZ1NXOG9jaXdnYVN3Z1pTQXRJREVnTHlBektUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlRkSGxzWlNobEtTQjdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdkQ2hwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2tnSVQwOUlIWnZhV1FnTUNBbUppQndZWEp6WlVac2IyRjBLR2twSUR3Z01TQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOdmJHOXlPaUJCYkhCb1lTQmpiMjF3YjI1bGJuUWdiMllnSWlBcklHVWdLeUFpSUhkcGJHd2dZbVVnYVdkdWIzSmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJRzQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHNGdQU0F2WGlnb1B6cHlaMko4YUhOc0tXRS9LVndvS0Z0ZVhDbGRLaWxjS1M4dVpYaGxZeWhsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTd2djaUE5SUc1Yk1WMHNJRzhnUFNCdVd6SmRPd29nSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvY2lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0p5WjJJaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpY21kaVlTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQU0F2WGx4ektpaGNaQ3NwWEhNcUxGeHpLaWhjWkNzcFhITXFMRnh6S2loY1pDc3BYSE1xS0Q4NkxGeHpLaWhjWkNwY0xqOWNaQ3NwWEhNcUtUOGtMeTVsZUdWaktHOHBLU0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdUV0YwYUM1dGFXNG9NalUxTENCd1lYSnpaVWx1ZENocFd6RmRMQ0F4TUNrcElDOGdNalUxTENCMGFHbHpMbWNnUFNCTllYUm9MbTFwYmlneU5UVXNJSEJoY25ObFNXNTBLR2xiTWwwc0lERXdLU2tnTHlBeU5UVXNJSFJvYVhNdVlpQTlJRTFoZEdndWJXbHVLREkxTlN3Z2NHRnljMlZKYm5Rb2FWc3pYU3dnTVRBcEtTQXZJREkxTlN3Z2RDaHBXelJkS1N3Z2RHaHBjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hU0E5SUM5ZVhITXFLRnhrS3lsY0pWeHpLaXhjY3lvb1hHUXJLVndsWEhNcUxGeHpLaWhjWkNzcFhDVmNjeW9vUHpvc1hITXFLRnhrS2x3dVAxeGtLeWxjY3lvcFB5UXZMbVY0WldNb2J5a3BJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQk5ZWFJvTG0xcGJpZ3hNREFzSUhCaGNuTmxTVzUwS0dsYk1WMHNJREV3S1NrZ0x5QXhNREFzSUhSb2FYTXVaeUE5SUUxaGRHZ3ViV2x1S0RFd01Dd2djR0Z5YzJWSmJuUW9hVnN5WFN3Z01UQXBLU0F2SURFd01Dd2dkR2hwY3k1aUlEMGdUV0YwYUM1dGFXNG9NVEF3TENCd1lYSnpaVWx1ZENocFd6TmRMQ0F4TUNrcElDOGdNVEF3TENCMEtHbGJORjBwTENCMGFHbHpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaWFITnNJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltaHpiR0VpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwZ0wxNWNjeW9vWEdRcVhDNC9YR1FyS1Z4ektpeGNjeW9vWEdRcktWd2xYSE1xTEZ4ektpaGNaQ3NwWENWY2N5b29Qem9zWEhNcUtGeGtLbHd1UDF4a0t5bGNjeW9wUHlRdkxtVjRaV01vYnlrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCd1lYSnpaVVpzYjJGMEtHbGJNVjBwSUM4Z016WXdMQ0JzSUQwZ2NHRnljMlZKYm5Rb2FWc3lYU3dnTVRBcElDOGdNVEF3TENCaklEMGdjR0Z5YzJWSmJuUW9hVnN6WFN3Z01UQXBJQzhnTVRBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZENocFd6UmRLU3dnZEdocGN5NXpaWFJJVTB3b1lTd2diQ3dnWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaHVJRDBnTDE1Y0l5aGJRUzFHWVMxbVhHUmRLeWtrTHk1bGVHVmpLR1VwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcE1TQTlJRzViTVYwc0lISXhJRDBnYVRFdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2pFZ1BUMDlJRE1wSUhKbGRIVnliaUIwYUdsekxuSWdQU0J3WVhKelpVbHVkQ2hwTVM1amFHRnlRWFFvTUNrZ0t5QnBNUzVqYUdGeVFYUW9NQ2tzSURFMktTQXZJREkxTlN3Z2RHaHBjeTVuSUQwZ2NHRnljMlZKYm5Rb2FURXVZMmhoY2tGMEtERXBJQ3NnYVRFdVkyaGhja0YwS0RFcExDQXhOaWtnTHlBeU5UVXNJSFJvYVhNdVlpQTlJSEJoY25ObFNXNTBLR2t4TG1Ob1lYSkJkQ2d5S1NBcklHa3hMbU5vWVhKQmRDZ3lLU3dnTVRZcElDOGdNalUxTENCMGFHbHpPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jakVnUFQwOUlEWXBJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQndZWEp6WlVsdWRDaHBNUzVqYUdGeVFYUW9NQ2tnS3lCcE1TNWphR0Z5UVhRb01Ta3NJREUyS1NBdklESTFOU3dnZEdocGN5NW5JRDBnY0dGeWMyVkpiblFvYVRFdVkyaGhja0YwS0RJcElDc2dhVEV1WTJoaGNrRjBLRE1wTENBeE5pa2dMeUF5TlRVc0lIUm9hWE11WWlBOUlIQmhjbk5sU1c1MEtHa3hMbU5vWVhKQmRDZzBLU0FySUdreExtTm9ZWEpCZENnMUtTd2dNVFlwSUM4Z01qVTFMQ0IwYUdsek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQW1KaUJsTG14bGJtZDBhQ0ErSURBZ1B5QjBhR2x6TG5ObGRFTnZiRzl5VG1GdFpTaGxLU0E2SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSRGIyeHZjazVoYldVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdKR05iWlM1MGIweHZkMlZ5UTJGelpTZ3BYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2RHaHBjeTV6WlhSSVpYZ29kQ2tnT2lCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrTnZiRzl5T2lCVmJtdHViM2R1SUdOdmJHOXlJQ0lnS3lCbEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG5Jc0lIUm9hWE11Wnl3Z2RHaHBjeTVpS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnUFNCbExuSXNJSFJvYVhNdVp5QTlJR1V1Wnl3Z2RHaHBjeTVpSUQwZ1pTNWlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVZOU1IwSlViMHhwYm1WaGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQTlJRVJ2S0dVdWNpa3NJSFJvYVhNdVp5QTlJRVJ2S0dVdVp5a3NJSFJvYVhNdVlpQTlJRVJ2S0dVdVlpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1VEdsdVpXRnlWRzlUVWtkQ0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eUlEMGdSbThvWlM1eUtTd2dkR2hwY3k1bklEMGdSbThvWlM1bktTd2dkR2hwY3k1aUlEMGdSbThvWlM1aUtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZiblpsY25SVFVrZENWRzlNYVc1bFlYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXdlVk5TUjBKVWIweHBibVZoY2loMGFHbHpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Ym5abGNuUk1hVzVsWVhKVWIxTlNSMElvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl3ZVV4cGJtVmhjbFJ2VTFKSFFpaDBhR2x6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFaGxlQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJQ29nTWpVMUlEdzhJREUySUY0Z2RHaHBjeTVuSUNvZ01qVTFJRHc4SURnZ1hpQjBhR2x6TG1JZ0tpQXlOVFVnUER3Z01Ec0tJQ0FnSUgwS0lDQWdJR2RsZEVobGVGTjBjbWx1WnlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0tDSXdNREF3TURBaUlDc2dkR2hwY3k1blpYUklaWGdvS1M1MGIxTjBjbWx1WnlneE5pa3BMbk5zYVdObEtDMDJLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFaFRUQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbklzSUc0Z1BTQjBhR2x6TG1jc0lHa2dQU0IwYUdsekxtSXNJSElnUFNCTllYUm9MbTFoZUNoMExDQnVMQ0JwS1N3Z2J5QTlJRTFoZEdndWJXbHVLSFFzSUc0c0lHa3BMQ0JoTENCc0xDQmpJRDBnS0c4Z0t5QnlLU0F2SURJN0NpQWdJQ0FnSUNBZ2FXWWdLRzhnUFQwOUlISXBJR0VnUFNBd0xDQnNJRDBnTURzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCeUlDMGdienNLSUNBZ0lDQWdJQ0FnSUNBZ2MzZHBkR05vS0d3Z1BTQmpJRHc5SUM0MUlEOGdhQ0F2SUNoeUlDc2dieWtnT2lCb0lDOGdLRElnTFNCeUlDMGdieWtzSUhJcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0IwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0FvYmlBdElHa3BJQzhnYUNBcklDaHVJRHdnYVNBL0lEWWdPaUF3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdiam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaElEMGdLR2tnTFNCMEtTQXZJR2dnS3lBeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0FvZENBdElHNHBJQzhnYUNBcklEUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdZU0F2UFNBMk93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNW9JRDBnWVN3Z1pTNXpJRDBnYkN3Z1pTNXNJRDBnWXl3Z1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEZOMGVXeGxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUFpY21kaUtDSWdLeUFvZEdocGN5NXlJQ29nTWpVMUlId2dNQ2tnS3lBaUxDSWdLeUFvZEdocGN5NW5JQ29nTWpVMUlId2dNQ2tnS3lBaUxDSWdLeUFvZEdocGN5NWlJQ29nTWpVMUlId2dNQ2tnS3lBaUtTSTdDaUFnSUNCOUNpQWdJQ0J2Wm1aelpYUklVMHdvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRWhUVENoR2RDa3NJRVowTG1nZ0t6MGdaU3dnUm5RdWN5QXJQU0IwTENCR2RDNXNJQ3M5SUc0c0lIUm9hWE11YzJWMFNGTk1LRVowTG1nc0lFWjBMbk1zSUVaMExtd3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZV1JrS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUNzOUlHVXVjaXdnZEdocGN5NW5JQ3M5SUdVdVp5d2dkR2hwY3k1aUlDczlJR1V1WWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGa1pFTnZiRzl5Y3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQTlJR1V1Y2lBcklIUXVjaXdnZEdocGN5NW5JRDBnWlM1bklDc2dkQzVuTENCMGFHbHpMbUlnUFNCbExtSWdLeUIwTG1Jc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUlRZMkZzWVhJb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ0t6MGdaU3dnZEdocGN5NW5JQ3M5SUdVc0lIUm9hWE11WWlBclBTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1ZpS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUQwZ1RXRjBhQzV0WVhnb01Dd2dkR2hwY3k1eUlDMGdaUzV5S1N3Z2RHaHBjeTVuSUQwZ1RXRjBhQzV0WVhnb01Dd2dkR2hwY3k1bklDMGdaUzVuS1N3Z2RHaHBjeTVpSUQwZ1RXRjBhQzV0WVhnb01Dd2dkR2hwY3k1aUlDMGdaUzVpS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5SUNvOUlHVXVjaXdnZEdocGN5NW5JQ285SUdVdVp5d2dkR2hwY3k1aUlDbzlJR1V1WWl3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUcxMWJIUnBjR3g1VTJOaGJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlJQ285SUdVc0lIUm9hWE11WnlBcVBTQmxMQ0IwYUdsekxtSWdLajBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUd4bGNuQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbklnS3owZ0tHVXVjaUF0SUhSb2FYTXVjaWtnS2lCMExDQjBhR2x6TG1jZ0t6MGdLR1V1WnlBdElIUm9hWE11WnlrZ0tpQjBMQ0IwYUdsekxtSWdLejBnS0dVdVlpQXRJSFJvYVhNdVlpa2dLaUIwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYkdWeWNFTnZiRzl5Y3lobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjaUE5SUdVdWNpQXJJQ2gwTG5JZ0xTQmxMbklwSUNvZ2Jpd2dkR2hwY3k1bklEMGdaUzVuSUNzZ0tIUXVaeUF0SUdVdVp5a2dLaUJ1TENCMGFHbHpMbUlnUFNCbExtSWdLeUFvZEM1aUlDMGdaUzVpS1NBcUlHNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnNaWEp3U0ZOTUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWRsZEVoVFRDaEdkQ2tzSUdVdVoyVjBTRk5NS0dweUtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHOXlLRVowTG1nc0lHcHlMbWdzSUhRcExDQnBJRDBnYjNJb1JuUXVjeXdnYW5JdWN5d2dkQ2tzSUhJZ1BTQnZjaWhHZEM1c0xDQnFjaTVzTENCMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV6WlhSSVUwd29iaXdnYVN3Z2Npa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmxjWFZoYkhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbklnUFQwOUlIUm9hWE11Y2lBbUppQmxMbWNnUFQwOUlIUm9hWE11WnlBbUppQmxMbUlnUFQwOUlIUm9hWE11WWpzS0lDQWdJSDBLSUNBZ0lHWnliMjFCY25KaGVTaGxMQ0IwSUQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5JZ1BTQmxXM1JkTENCMGFHbHpMbWNnUFNCbFczUWdLeUF4WFN3Z2RHaHBjeTVpSUQwZ1pWdDBJQ3NnTWwwc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwRnljbUY1S0dVZ1BTQmJYU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVnQwWFNBOUlIUm9hWE11Y2l3Z1pWdDBJQ3NnTVYwZ1BTQjBhR2x6TG1jc0lHVmJkQ0FySURKZElEMGdkR2hwY3k1aUxDQmxPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNpQTlJR1V1WjJWMFdDaDBLU3dnZEdocGN5NW5JRDBnWlM1blpYUlpLSFFwTENCMGFHbHpMbUlnUFNCbExtZGxkRm9vZENrc0lHVXVibTl5YldGc2FYcGxaQ0E5UFQwZ0lUQWdKaVlnS0hSb2FYTXVjaUF2UFNBeU5UVXNJSFJvYVhNdVp5QXZQU0F5TlRVc0lIUm9hWE11WWlBdlBTQXlOVFVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRWhsZUNncE93b2dJQ0FnZlFwOU93cGhaUzVPUVUxRlV5QTlJQ1JqT3dwaFpTNXdjbTkwYjNSNWNHVXVhWE5EYjJ4dmNpQTlJQ0V3T3dwaFpTNXdjbTkwYjNSNWNHVXVjaUE5SURFN0NtRmxMbkJ5YjNSdmRIbHdaUzVuSUQwZ01Uc0tZV1V1Y0hKdmRHOTBlWEJsTG1JZ1BTQXhPd3AyWVhJZ2FHNGdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrMWxjMmhDWVhOcFkwMWhkR1Z5YVdGc0lpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QmhaU2d4TmpjM056SXhOU2tzSUhSb2FYTXViV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXNhV2RvZEUxaGNDQTlJRzUxYkd3c0lIUm9hWE11YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnUFNBeExDQjBhR2x6TG1GdlRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1aGIwMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11YzNCbFkzVnNZWEpOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1bGJuWk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtTnZiV0pwYm1VZ1BTQldjeXdnZEdocGN5NXlaV1pzWldOMGFYWnBkSGtnUFNBeExDQjBhR2x6TG5KbFpuSmhZM1JwYjI1U1lYUnBieUE5SUM0NU9Dd2dkR2hwY3k1M2FYSmxabkpoYldVZ1BTQWhNU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0FpY205MWJtUWlMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlEMGdJbkp2ZFc1a0lpd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndJRDBnWlM1c2FXZG9kRTFoY0N3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11WVc5TllYQWdQU0JsTG1GdlRXRndMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWhiMDFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHVXVjM0JsWTNWc1lYSk5ZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbVZ1ZGsxaGNDQTlJR1V1Wlc1MlRXRndMQ0IwYUdsekxtTnZiV0pwYm1VZ1BTQmxMbU52YldKcGJtVXNJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVJRDBnWlM1eVpXWnNaV04wYVhacGRIa3NJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ1pTNXlaV1p5WVdOMGFXOXVVbUYwYVc4c0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbWh1TG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhDWVhOcFkwMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQktaU0E5SUc1bGR5Qk5MQ0JSY2lBOUlHNWxkeUJZTENCVlpTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHVXBLU0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVTZJR0Z5Y21GNUlITm9iM1ZzWkNCaVpTQmhJRlI1Y0dWa0lFRnljbUY1TGlJcE93b2dJQ0FnSUNBZ0lIUm9hWE11Ym1GdFpTQTlJQ0lpTENCMGFHbHpMbUZ5Y21GNUlEMGdaU3dnZEdocGN5NXBkR1Z0VTJsNlpTQTlJSFFzSUhSb2FYTXVZMjkxYm5RZ1BTQmxJQ0U5UFNCMmIybGtJREFnUHlCbExteGxibWQwYUNBdklIUWdPaUF3TENCMGFHbHpMbTV2Y20xaGJHbDZaV1FnUFNCdUlEMDlQU0FoTUN3Z2RHaHBjeTUxYzJGblpTQTlJR2h5TENCMGFHbHpMblZ3WkdGMFpWSmhibWRsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lBdE1Rb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWRtVnljMmx2YmlBOUlEQTdDaUFnSUNCOUNpQWdJQ0J2YmxWd2JHOWhaRU5oYkd4aVlXTnJLQ2tnZTMwS0lDQWdJSE5sZENCdVpXVmtjMVZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNBOVBUMGdJVEFnSmlZZ2RHaHBjeTUyWlhKemFXOXVLeXM3Q2lBZ0lDQjlDaUFnSUNCelpYUlZjMkZuWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZFhOaFoyVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtRnRaU0E5SUdVdWJtRnRaU3dnZEdocGN5NWhjbkpoZVNBOUlHNWxkeUJsTG1GeWNtRjVMbU52Ym5OMGNuVmpkRzl5S0dVdVlYSnlZWGtwTENCMGFHbHpMbWwwWlcxVGFYcGxJRDBnWlM1cGRHVnRVMmw2WlN3Z2RHaHBjeTVqYjNWdWRDQTlJR1V1WTI5MWJuUXNJSFJvYVhNdWJtOXliV0ZzYVhwbFpDQTlJR1V1Ym05eWJXRnNhWHBsWkN3Z2RHaHBjeTUxYzJGblpTQTlJR1V1ZFhOaFoyVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1UVhRb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHVWdLajBnZEdocGN5NXBkR1Z0VTJsNlpTd2diaUFxUFNCMExtbDBaVzFUYVhwbE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG1sMFpXMVRhWHBsT3lCcElEd2djanNnYVNzcktYUm9hWE11WVhKeVlYbGJaU0FySUdsZElEMGdkQzVoY25KaGVWdHVJQ3NnYVYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVFYSnlZWGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNUxuTmxkQ2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIbERiMnh2Y25OQmNuSmhlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUZ5Y21GNUxDQnVJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ1pTNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdWYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1V1WTI5d2VVTnZiRzl5YzBGeWNtRjVLQ2s2SUdOdmJHOXlJR2x6SUhWdVpHVm1hVzVsWkNJc0lHa3BMQ0J2SUQwZ2JtVjNJR0ZsS1N3Z2RGdHVLeXRkSUQwZ2J5NXlMQ0IwVzI0cksxMGdQU0J2TG1jc0lIUmJiaXNyWFNBOUlHOHVZanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1Vm1WamRHOXlNbk5CY25KaGVTaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtRnljbUY1TENCdUlEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnWlM1c1pXNW5kR2c3SUdrZ1BDQnlPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJR1ZiYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUFQwOUlIWnZhV1FnTUNBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVXVZMjl3ZVZabFkzUnZjakp6UVhKeVlYa29LVG9nZG1WamRHOXlJR2x6SUhWdVpHVm1hVzVsWkNJc0lHa3BMQ0J2SUQwZ2JtVjNJRmdwTENCMFcyNHJLMTBnUFNCdkxuZ3NJSFJiYmlzclhTQTlJRzh1ZVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNVZtVmpkRzl5TTNOQmNuSmhlU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUZ5Y21GNUxDQnVJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ1pTNXNaVzVuZEdnN0lHa2dQQ0J5T3lCcEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdieUE5SUdWYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpCZEhSeWFXSjFkR1V1WTI5d2VWWmxZM1J2Y2pOelFYSnlZWGtvS1RvZ2RtVmpkRzl5SUdseklIVnVaR1ZtYVc1bFpDSXNJR2twTENCdklEMGdibVYzSUUwcExDQjBXMjRySzEwZ1BTQnZMbmdzSUhSYmJpc3JYU0E5SUc4dWVTd2dkRnR1S3l0ZElEMGdieTU2T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR052Y0hsV1pXTjBiM0kwYzBGeWNtRjVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZWEp5WVhrc0lHNGdQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCbExteGxibWQwYURzZ2FTQThJSEk3SUdrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnWlZ0cFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYnlBOVBUMGdkbTlwWkNBd0lDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja0YwZEhKcFluVjBaUzVqYjNCNVZtVmpkRzl5TkhOQmNuSmhlU2dwT2lCMlpXTjBiM0lnYVhNZ2RXNWtaV1pwYm1Wa0lpd2dhU2tzSUc4Z1BTQnVaWGNnVm1VcExDQjBXMjRySzEwZ1BTQnZMbmdzSUhSYmJpc3JYU0E5SUc4dWVTd2dkRnR1S3l0ZElEMGdieTU2TENCMFcyNHJLMTBnUFNCdkxuYzdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZ3pLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1cGRHVnRVMmw2WlNBOVBUMGdNaWtnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVZMjkxYm5RN0lIUWdQQ0J1T3lCMEt5c3BVWEl1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMGFHbHpMQ0IwS1N3Z1VYSXVZWEJ3YkhsTllYUnlhWGd6S0dVcExDQjBhR2x6TG5ObGRGaFpLSFFzSUZGeUxuZ3NJRkZ5TG5rcE93b2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tIUm9hWE11YVhSbGJWTnBlbVVnUFQwOUlETXBJR1p2Y2loc1pYUWdkREVnUFNBd0xDQnVNU0E5SUhSb2FYTXVZMjkxYm5RN0lIUXhJRHdnYmpFN0lIUXhLeXNwU21VdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBhR2x6TENCME1Ta3NJRXBsTG1Gd2NHeDVUV0YwY21sNE15aGxLU3dnZEdocGN5NXpaWFJZV1Zvb2RERXNJRXBsTG5nc0lFcGxMbmtzSUVwbExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVqYjNWdWREc2dkQ0E4SUc0N0lIUXJLeWxLWlM1NElEMGdkR2hwY3k1blpYUllLSFFwTENCS1pTNTVJRDBnZEdocGN5NW5aWFJaS0hRcExDQktaUzU2SUQwZ2RHaHBjeTVuWlhSYUtIUXBMQ0JLWlM1aGNIQnNlVTFoZEhKcGVEUW9aU2tzSUhSb2FYTXVjMlYwV0ZsYUtIUXNJRXBsTG5nc0lFcGxMbmtzSUVwbExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxPYjNKdFlXeE5ZWFJ5YVhnb1pTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0IwYUdsekxtTnZkVzUwT3lCMElEd2dianNnZENzcktVcGxMbmdnUFNCMGFHbHpMbWRsZEZnb2RDa3NJRXBsTG5rZ1BTQjBhR2x6TG1kbGRGa29kQ2tzSUVwbExub2dQU0IwYUdsekxtZGxkRm9vZENrc0lFcGxMbUZ3Y0d4NVRtOXliV0ZzVFdGMGNtbDRLR1VwTENCMGFHbHpMbk5sZEZoWldpaDBMQ0JLWlM1NExDQktaUzU1TENCS1pTNTZLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUhSb2FYTXVZMjkxYm5RN0lIUWdQQ0J1T3lCMEt5c3BTbVV1ZUNBOUlIUm9hWE11WjJWMFdDaDBLU3dnU21VdWVTQTlJSFJvYVhNdVoyVjBXU2gwS1N3Z1NtVXVlaUE5SUhSb2FYTXVaMlYwV2loMEtTd2dTbVV1ZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0dVcExDQjBhR2x6TG5ObGRGaFpXaWgwTENCS1pTNTRMQ0JLWlM1NUxDQktaUzU2S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNUxuTmxkQ2hsTENCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRmdvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUZ5Y21GNVcyVWdLaUIwYUdsekxtbDBaVzFUYVhwbFhUc0tJQ0FnSUgwS0lDQWdJSE5sZEZnb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnljbUY1VzJVZ0tpQjBhR2x6TG1sMFpXMVRhWHBsWFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJREZkT3dvZ0lDQWdmUW9nSUNBZ2MyVjBXU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF4WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJREpkT3dvZ0lDQWdmUW9nSUNBZ2MyVjBXaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF5WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJYS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoY25KaGVWdGxJQ29nZEdocGN5NXBkR1Z0VTJsNlpTQXJJRE5kT3dvZ0lDQWdmUW9nSUNBZ2MyVjBWeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYbGJaU0FxSUhSb2FYTXVhWFJsYlZOcGVtVWdLeUF6WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1NobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0tqMGdkR2hwY3k1cGRHVnRVMmw2WlN3Z2RHaHBjeTVoY25KaGVWdGxJQ3NnTUYwZ1BTQjBMQ0IwYUdsekxtRnljbUY1VzJVZ0t5QXhYU0E5SUc0c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUllXVm9vWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElDbzlJSFJvYVhNdWFYUmxiVk5wZW1Vc0lIUm9hWE11WVhKeVlYbGJaU0FySURCZElEMGdkQ3dnZEdocGN5NWhjbkpoZVZ0bElDc2dNVjBnUFNCdUxDQjBhR2x6TG1GeWNtRjVXMlVnS3lBeVhTQTlJR2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWVdWcFhLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTQXFQU0IwYUdsekxtbDBaVzFUYVhwbExDQjBhR2x6TG1GeWNtRjVXMlVnS3lBd1hTQTlJSFFzSUhSb2FYTXVZWEp5WVhsYlpTQXJJREZkSUQwZ2Jpd2dkR2hwY3k1aGNuSmhlVnRsSUNzZ01sMGdQU0JwTENCMGFHbHpMbUZ5Y21GNVcyVWdLeUF6WFNBOUlISXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnZibFZ3Ykc5aFpDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWIyNVZjR3h2WVdSRFlXeHNZbUZqYXlBOUlHVXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9kR2hwY3k1aGNuSmhlU3dnZEdocGN5NXBkR1Z0VTJsNlpTa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdhWFJsYlZOcGVtVTZJSFJvYVhNdWFYUmxiVk5wZW1Vc0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUm9hWE11WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0l1Ym1GdFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVlYazZJRUZ5Y21GNUxuQnliM1J2ZEhsd1pTNXpiR2xqWlM1allXeHNLSFJvYVhNdVlYSnlZWGtwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4cGVtVmtPaUIwYUdsekxtNXZjbTFoYkdsNlpXUUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01aGJXVWdJVDA5SUNJaUlDWW1JQ2hsTG01aGJXVWdQU0IwYUdsekxtNWhiV1VwTENCMGFHbHpMblZ6WVdkbElDRTlQU0JvY2lBbUppQW9aUzUxYzJGblpTQTlJSFJvYVhNdWRYTmhaMlVwTENBb2RHaHBjeTUxY0dSaGRHVlNZVzVuWlM1dlptWnpaWFFnSVQwOUlEQWdmSHdnZEdocGN5NTFjR1JoZEdWU1lXNW5aUzVqYjNWdWRDQWhQVDBnTFRFcElDWW1JQ2hsTG5Wd1pHRjBaVkpoYm1kbElEMGdkR2hwY3k1MWNHUmhkR1ZTWVc1blpTa3NJR1U3Q2lBZ0lDQjlDbjA3Q2xWbExuQnliM1J2ZEhsd1pTNXBjMEoxWm1abGNrRjBkSEpwWW5WMFpTQTlJQ0V3T3dwMllYSWdhbU1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRlZsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLRzVsZHlCSmJuUTRRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQlJZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUZWcGJuUTRRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQkxZeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUZWcGJuUTRRMnhoYlhCbFpFRnljbUY1S0dVcExDQjBMQ0J1S1RzS0lDQWdJSDBLZlN3Z1pXZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJKYm5ReE5rRnljbUY1S0dVcExDQjBMQ0J1S1RzS0lDQWdJSDBLZlN3Z1dYTWdQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJSE4xY0dWeUtHNWxkeUJWYVc1ME1UWkJjbkpoZVNobEtTd2dkQ3dnYmlrN0NpQWdJQ0I5Q24wc0lIUm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnU1c1ME16SkJjbkpoZVNobEtTd2dkQ3dnYmlrN0NpQWdJQ0I5Q24wc0lGcHpJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QlZaU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnVldsdWRETXlRWEp5WVhrb1pTa3NJSFFzSUc0cE93b2dJQ0FnZlFwOUxDQnVhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdWV1VnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9ibVYzSUZWcGJuUXhOa0Z5Y21GNUtHVXBMQ0IwTENCdUtUc0tJQ0FnSUgwS2ZUc0tibWd1Y0hKdmRHOTBlWEJsTG1selJteHZZWFF4TmtKMVptWmxja0YwZEhKcFluVjBaU0E5SUNFd093cDJZWElnWkdVZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWbElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvWlNrc0lIUXNJRzRwT3dvZ0lDQWdmUXA5TENCcGFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1ZXVWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JtVjNJRVpzYjJGME5qUkJjbkpoZVNobEtTd2dkQ3dnYmlrN0NpQWdJQ0I5Q24wc0lHTm1JRDBnTUN3Z1VuUWdQU0J1WlhjZ2NHVXNJRTV2SUQwZ2JtVjNJRTVsTENCamFTQTlJRzVsZHlCTkxDQlVkQ0E5SUc1bGR5Qk1kQ3dnSkdrZ1BTQnVaWGNnVEhRc0lHaDBJRDBnYm1WM0lFMHNJRjlsSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJGYmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUjVLSFJvYVhNc0lDSnBaQ0lzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHTm1LeXNLSUNBZ0lDQWdJQ0I5S1N3Z2RHaHBjeTUxZFdsa0lEMGdSWFFvS1N3Z2RHaHBjeTV1WVcxbElEMGdJaUlzSUhSb2FYTXVkSGx3WlNBOUlDSkNkV1ptWlhKSFpXOXRaWFJ5ZVNJc0lIUm9hWE11YVc1a1pYZ2dQU0J1ZFd4c0xDQjBhR2x6TG1GMGRISnBZblYwWlhNZ1BTQjdmU3dnZEdocGN5NXRiM0p3YUVGMGRISnBZblYwWlhNZ1BTQjdmU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0E5SUNFeExDQjBhR2x6TG1keWIzVndjeUE5SUZ0ZExDQjBhR2x6TG1KdmRXNWthVzVuUW05NElEMGdiblZzYkN3Z2RHaHBjeTVpYjNWdVpHbHVaMU53YUdWeVpTQTlJRzUxYkd3c0lIUm9hWE11WkhKaGQxSmhibWRsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWREb2dNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SURFZ0x5QXdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NTFjMlZ5UkdGMFlTQTlJSHQ5T3dvZ0lDQWdmUW9nSUNBZ1oyVjBTVzVrWlhnb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVc1a1pYZzdDaUFnSUNCOUNpQWdJQ0J6WlhSSmJtUmxlQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVGeWNtRjVMbWx6UVhKeVlYa29aU2tnUHlCMGFHbHpMbWx1WkdWNElEMGdibVYzSUNoWll5aGxLU0ErSURZMU5UTTFJRDhnV25NZ09pQlpjeWtvWlN3Z01Ta2dPaUIwYUdsekxtbHVaR1Y0SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRUYwZEhKcFluVjBaU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZWFIwY21saWRYUmxjMXRsWFRzS0lDQWdJSDBLSUNBZ0lITmxkRUYwZEhKcFluVjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhSMGNtbGlkWFJsYzF0bFhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JrWld4bGRHVkJkSFJ5YVdKMWRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJrWld4bGRHVWdkR2hwY3k1aGRIUnlhV0oxZEdWelcyVmRMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdhR0Z6UVhSMGNtbGlkWFJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVoZEhSeWFXSjFkR1Z6VzJWZElDRTlQU0IyYjJsa0lEQTdDaUFnSUNCOUNpQWdJQ0JoWkdSSGNtOTFjQ2hsTENCMExDQnVJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WjNKdmRYQnpMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6ZEdGeWREb2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJRzFoZEdWeWFXRnNTVzVrWlhnNklHNEtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUdOc1pXRnlSM0p2ZFhCektDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVozSnZkWEJ6SUQwZ1cxMDdDaUFnSUNCOUNpQWdJQ0J6WlhSRWNtRjNVbUZ1WjJVb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVaSEpoZDFKaGJtZGxMbk4wWVhKMElEMGdaU3dnZEdocGN5NWtjbUYzVW1GdVoyVXVZMjkxYm5RZ1BTQjBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVlYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJqc0tJQ0FnSUNBZ0lDQjBJQ0U5UFNCMmIybGtJREFnSmlZZ0tIUXVZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBMbTVsWldSelZYQmtZWFJsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1aGRIUnlhV0oxZEdWekxtNXZjbTFoYkRzS0lDQWdJQ0FnSUNCcFppQW9iaUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdibVYzSUd4MEtDa3VaMlYwVG05eWJXRnNUV0YwY21sNEtHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCdUxtRndjR3g1VG05eWJXRnNUV0YwY21sNEtISXBMQ0J1TG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMblJoYm1kbGJuUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aU2tzSUdrdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrc0lIUm9hWE11WW05MWJtUnBibWRDYjNnZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1amIyMXdkWFJsUW05MWJtUnBibWRDYjNnb0tTd2dkR2hwY3k1aWIzVnVaR2x1WjFOd2FHVnlaU0FoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbU52YlhCMWRHVkNiM1Z1WkdsdVoxTndhR1Z5WlNncExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxSZFdGMFpYSnVhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1VuUXViV0ZyWlZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNG9aU2tzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0ZKMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISnZkR0YwWlZnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlNkQzV0WVd0bFVtOTBZWFJwYjI1WUtHVXBMQ0IwYUdsekxtRndjR3g1VFdGMGNtbDROQ2hTZENrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCeWIzUmhkR1ZaS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1VuUXViV0ZyWlZKdmRHRjBhVzl1V1NobEtTd2dkR2hwY3k1aGNIQnNlVTFoZEhKcGVEUW9VblFwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY205MFlYUmxXaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZKMExtMWhhMlZTYjNSaGRHbHZibG9vWlNrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtGSjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ5WVc1emJHRjBaU2hsTENCMExDQnVLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRkowTG0xaGEyVlVjbUZ1YzJ4aGRHbHZiaWhsTENCMExDQnVLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvVW5RcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyTmhiR1VvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJTZEM1dFlXdGxVMk5oYkdVb1pTd2dkQ3dnYmlrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtGSjBLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3h2YjJ0QmRDaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRTV2TG14dmIydEJkQ2hsS1N3Z1RtOHVkWEJrWVhSbFRXRjBjbWw0S0Nrc0lIUm9hWE11WVhCd2JIbE5ZWFJ5YVhnMEtFNXZMbTFoZEhKcGVDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpaVzUwWlhJb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTI5dGNIVjBaVUp2ZFc1a2FXNW5RbTk0S0Nrc0lIUm9hWE11WW05MWJtUnBibWRDYjNndVoyVjBRMlZ1ZEdWeUtHTnBLUzV1WldkaGRHVW9LU3dnZEdocGN5NTBjbUZ1YzJ4aGRHVW9ZMmt1ZUN3Z1kya3VlU3dnWTJrdWVpa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFVHOXBiblJ6S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0JsTG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdaVnR1WFRzS0lDQWdJQ0FnSUNBZ0lDQWdkQzV3ZFhOb0tISXVlQ3dnY2k1NUxDQnlMbm9nZkh3Z01DazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9kQ3dnTXlrcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlVKdmRXNWthVzVuUW05NEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ2dQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFNCdVpYY2dUSFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZEdocGN5NWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0IwSUQwZ2RHaHBjeTV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0ppWWdaUzVwYzBkTVFuVm1abVZ5UVhSMGNtbGlkWFJsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0oxUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMbU52YlhCMWRHVkNiM1Z1WkdsdVowSnZlQ2dwT2lCSFRFSjFabVpsY2tGMGRISnBZblYwWlNCeVpYRjFhWEpsY3lCaElHMWhiblZoYkNCaWIzVnVaR2x1WnlCaWIzZ3VJRUZzZEdWeWJtRjBhWFpsYkhrZ2MyVjBJQ0p0WlhOb0xtWnlkWE4wZFcxRGRXeHNaV1FpSUhSdklDSm1ZV3h6WlNJdUp5d2dkR2hwY3lrc0lIUm9hWE11WW05MWJtUnBibWRDYjNndWMyVjBLRzVsZHlCTktDMHhJQzhnTUN3Z0xURWdMeUF3TENBdE1TQXZJREFwTENCdVpYY2dUU2d4SUM4Z01Dd2dNU0F2SURBc0lERWdMeUF3S1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1aWIzVnVaR2x1WjBKdmVDNXpaWFJHY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dVcExDQjBLU0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMFcyNWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdWSFF1YzJWMFJuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHlLU3dnZEdocGN5NXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0EvSUNob2RDNWhaR1JXWldOMGIzSnpLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TENCVWRDNXRhVzRwTENCMGFHbHpMbUp2ZFc1a2FXNW5RbTk0TG1WNGNHRnVaRUo1VUc5cGJuUW9hSFFwTENCb2RDNWhaR1JXWldOMGIzSnpLSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV0Y0TENCVWRDNXRZWGdwTENCMGFHbHpMbUp2ZFc1a2FXNW5RbTk0TG1WNGNHRnVaRUo1VUc5cGJuUW9hSFFwS1NBNklDaDBhR2x6TG1KdmRXNWthVzVuUW05NExtVjRjR0Z1WkVKNVVHOXBiblFvVkhRdWJXbHVLU3dnZEdocGN5NWliM1Z1WkdsdVowSnZlQzVsZUhCaGJtUkNlVkJ2YVc1MEtGUjBMbTFoZUNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV0ZyWlVWdGNIUjVLQ2s3Q2lBZ0lDQWdJQ0FnS0dselRtRk9LSFJvYVhNdVltOTFibVJwYm1kQ2IzZ3ViV2x1TG5ncElIeDhJR2x6VG1GT0tIUm9hWE11WW05MWJtUnBibWRDYjNndWJXbHVMbmtwSUh4OElHbHpUbUZPS0hSb2FYTXVZbTkxYm1ScGJtZENiM2d1YldsdUxub3BLU0FtSmlCamIyNXpiMnhsTG1WeWNtOXlLQ2RVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVM1amIyMXdkWFJsUW05MWJtUnBibWRDYjNnb0tUb2dRMjl0Y0hWMFpXUWdiV2x1TDIxaGVDQm9ZWFpsSUU1aFRpQjJZV3gxWlhNdUlGUm9aU0FpY0c5emFYUnBiMjRpSUdGMGRISnBZblYwWlNCcGN5QnNhV3RsYkhrZ2RHOGdhR0YyWlNCT1lVNGdkbUZzZFdWekxpY3NJSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVWdQVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVZbTkxYm1ScGJtZFRjR2hsY21VZ1BTQnVaWGNnUVc0cE93b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCMElEMGdkR2hwY3k1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdKaVlnWlM1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9KMVJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BPaUJIVEVKMVptWmxja0YwZEhKcFluVjBaU0J5WlhGMWFYSmxjeUJoSUcxaGJuVmhiQ0JpYjNWdVpHbHVaeUJ6Y0dobGNtVXVJRUZzZEdWeWJtRjBhWFpsYkhrZ2MyVjBJQ0p0WlhOb0xtWnlkWE4wZFcxRGRXeHNaV1FpSUhSdklDSm1ZV3h6WlNJdUp5d2dkR2hwY3lrc0lIUm9hWE11WW05MWJtUnBibWRUY0dobGNtVXVjMlYwS0c1bGR5Qk5MQ0F4SUM4Z01DazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbExtTmxiblJsY2pzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0ZSMExuTmxkRVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlNrc0lIUXBJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0IwTG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSYmNsMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWthUzV6WlhSR2NtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHRXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBjMUpsYkdGMGFYWmxJRDhnS0doMExtRmtaRlpsWTNSdmNuTW9WSFF1YldsdUxDQWthUzV0YVc0cExDQlVkQzVsZUhCaGJtUkNlVkJ2YVc1MEtHaDBLU3dnYUhRdVlXUmtWbVZqZEc5eWN5aFVkQzV0WVhnc0lDUnBMbTFoZUNrc0lGUjBMbVY0Y0dGdVpFSjVVRzlwYm5Rb2FIUXBLU0E2SUNoVWRDNWxlSEJoYm1SQ2VWQnZhVzUwS0NScExtMXBiaWtzSUZSMExtVjRjR0Z1WkVKNVVHOXBiblFvSkdrdWJXRjRLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnVkhRdVoyVjBRMlZ1ZEdWeUtHNHBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SURBN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjakVnUFNBd0xDQnZNU0E5SUdVdVkyOTFiblE3SUhJeElEd2diekU3SUhJeEt5c3BhSFF1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobExDQnlNU2tzSUdrZ1BTQk5ZWFJvTG0xaGVDaHBMQ0J1TG1ScGMzUmhibU5sVkc5VGNYVmhjbVZrS0doMEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBLU0JtYjNJb2JHVjBJSEl5SUQwZ01Dd2dieklnUFNCMExteGxibWQwYURzZ2NqSWdQQ0J2TWpzZ2NqSXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lURWdQU0IwVzNJeVhTd2diQ0E5SUhSb2FYTXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd0xDQm9JRDBnWVRFdVkyOTFiblE3SUdNZ1BDQm9PeUJqS3lzcGFIUXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hoTVN3Z1l5a3NJR3dnSmlZZ0tHTnBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z1l5a3NJR2gwTG1Ga1pDaGphU2twTENCcElEMGdUV0YwYUM1dFlYZ29hU3dnYmk1a2FYTjBZVzVqWlZSdlUzRjFZWEpsWkNob2RDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVV1Y21Ga2FYVnpJRDBnVFdGMGFDNXpjWEowS0drcExDQnBjMDVoVGloMGFHbHpMbUp2ZFc1a2FXNW5VM0JvWlhKbExuSmhaR2wxY3lrZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnblZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNua3VZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0NrNklFTnZiWEIxZEdWa0lISmhaR2wxY3lCcGN5Qk9ZVTR1SUZSb1pTQWljRzl6YVhScGIyNGlJR0YwZEhKcFluVjBaU0JwY3lCc2FXdGxiSGtnZEc4Z2FHRjJaU0JPWVU0Z2RtRnNkV1Z6TGljc0lIUm9hWE1wT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnZiWEIxZEdWVVlXNW5aVzUwY3lncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11YVc1a1pYZ3NJSFFnUFNCMGFHbHpMbUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdQVDA5SUc1MWJHd2dmSHdnZEM1d2IzTnBkR2x2YmlBOVBUMGdkbTlwWkNBd0lIeDhJSFF1Ym05eWJXRnNJRDA5UFNCMmIybGtJREFnZkh3Z2RDNTFkaUE5UFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVPaUF1WTI5dGNIVjBaVlJoYm1kbGJuUnpLQ2tnWm1GcGJHVmtMaUJOYVhOemFXNW5JSEpsY1hWcGNtVmtJR0YwZEhKcFluVjBaWE1nS0dsdVpHVjRMQ0J3YjNOcGRHbHZiaXdnYm05eWJXRnNJRzl5SUhWMktTSXBPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnWlM1aGNuSmhlU3dnYVNBOUlIUXVjRzl6YVhScGIyNHVZWEp5WVhrc0lISWdQU0IwTG01dmNtMWhiQzVoY25KaGVTd2dieUE5SUhRdWRYWXVZWEp5WVhrc0lHRWdQU0JwTG14bGJtZDBhQ0F2SURNN0NpQWdJQ0FnSUNBZ2RDNTBZVzVuWlc1MElEMDlQU0IyYjJsa0lEQWdKaVlnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5SaGJtZGxiblFpTENCdVpYY2dWV1VvYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2cwSUNvZ1lTa3NJRFFwS1RzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUhRdWRHRnVaMlZ1ZEM1aGNuSmhlU3dnWXlBOUlGdGRMQ0JvSUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQkNJRDBnTURzZ1FpQThJR0U3SUVJckt5bGpXMEpkSUQwZ2JtVjNJRTBzSUdoYlFsMGdQU0J1WlhjZ1RUc0tJQ0FnSUNBZ0lDQnNaWFFnZFNBOUlHNWxkeUJOTENCa0lEMGdibVYzSUUwc0lHWWdQU0J1WlhjZ1RTd2diU0E5SUc1bGR5QllMQ0I0SUQwZ2JtVjNJRmdzSUhZZ1BTQnVaWGNnV0N3Z1p5QTlJRzVsZHlCTkxDQndJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdYeWhDTENCUUxDQjNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIVXVabkp2YlVGeWNtRjVLR2tzSUVJZ0tpQXpLU3dnWkM1bWNtOXRRWEp5WVhrb2FTd2dVQ0FxSURNcExDQm1MbVp5YjIxQmNuSmhlU2hwTENCM0lDb2dNeWtzSUcwdVpuSnZiVUZ5Y21GNUtHOHNJRUlnS2lBeUtTd2dlQzVtY205dFFYSnlZWGtvYnl3Z1VDQXFJRElwTENCMkxtWnliMjFCY25KaGVTaHZMQ0IzSUNvZ01pa3NJR1F1YzNWaUtIVXBMQ0JtTG5OMVlpaDFLU3dnZUM1emRXSW9iU2tzSUhZdWMzVmlLRzBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlERWdMeUFvZUM1NElDb2dkaTU1SUMwZ2RpNTRJQ29nZUM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSVdselJtbHVhWFJsS0VVcElIeDhJQ2huTG1OdmNIa29aQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9kaTU1S1M1aFpHUlRZMkZzWldSV1pXTjBiM0lvWml3Z0xYZ3VlU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9SU2tzSUhBdVkyOXdlU2htS1M1dGRXeDBhWEJzZVZOallXeGhjaWg0TG5ncExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loa0xDQXRkaTU0S1M1dGRXeDBhWEJzZVZOallXeGhjaWhGS1N3Z1kxdENYUzVoWkdRb1p5a3NJR05iVUYwdVlXUmtLR2NwTENCalczZGRMbUZrWkNobktTd2dhRnRDWFM1aFpHUW9jQ2tzSUdoYlVGMHVZV1JrS0hBcExDQm9XM2RkTG1Ga1pDaHdLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQjVJRDBnZEdocGN5NW5jbTkxY0hNN0NpQWdJQ0FnSUNBZ2VTNXNaVzVuZEdnZ1BUMDlJREFnSmlZZ0tIa2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjBZWEowT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOTFiblE2SUc0dWJHVnVaM1JvQ2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRUl4SUQwZ01Dd2dVQ0E5SUhrdWJHVnVaM1JvT3lCQ01TQThJRkE3SUNzclFqRXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkeUE5SUhsYlFqRmRMQ0JGSUQwZ2R5NXpkR0Z5ZEN3Z1JDQTlJSGN1WTI5MWJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVlNBOUlFVXNJRVlnUFNCRklDc2dSRHNnVlNBOElFWTdJRlVnS3owZ015bGZLRzViVlNBcklEQmRMQ0J1VzFVZ0t5QXhYU3dnYmx0VklDc2dNbDBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdZaUE5SUc1bGR5Qk5MQ0JCSUQwZ2JtVjNJRTBzSUV3Z1BTQnVaWGNnVFN3Z1NTQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHc29RaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQk1MbVp5YjIxQmNuSmhlU2h5TENCQ0lDb2dNeWtzSUVrdVkyOXdlU2hNS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZBZ1BTQmpXMEpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQmlMbU52Y0hrb1VDa3NJR0l1YzNWaUtFd3ViWFZzZEdsd2JIbFRZMkZzWVhJb1RDNWtiM1FvVUNrcEtTNXViM0p0WVd4cGVtVW9LU3dnUVM1amNtOXpjMVpsWTNSdmNuTW9TU3dnVUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCRklEMGdRUzVrYjNRb2FGdENYU2tnUENBd0lEOGdMVEVnT2lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0JzVzBJZ0tpQTBYU0E5SUdJdWVDd2diRnRDSUNvZ05DQXJJREZkSUQwZ1lpNTVMQ0JzVzBJZ0tpQTBJQ3NnTWwwZ1BTQmlMbm9zSUd4YlFpQXFJRFFnS3lBelhTQTlJRVU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUWpJZ1BTQXdMQ0JRTVNBOUlIa3ViR1Z1WjNSb095QkNNaUE4SUZBeE95QXJLMEl5S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhjeElEMGdlVnRDTWwwc0lFVXhJRDBnZHpFdWMzUmhjblFzSUVReElEMGdkekV1WTI5MWJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnVlRFZ1BTQkZNU3dnUmpFZ1BTQkZNU0FySUVReE95QlZNU0E4SUVZeE95QlZNU0FyUFNBektXc29ibHRWTVNBcklEQmRLU3dnYXlodVcxVXhJQ3NnTVYwcExDQnJLRzViVlRFZ0t5QXlYU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1kyOXRjSFYwWlZabGNuUmxlRTV2Y20xaGJITW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxtbHVaR1Y0TENCMElEMGdkR2hwY3k1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WjJWMFFYUjBjbWxpZFhSbEtDSnViM0p0WVd3aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNGdQVDA5SUhadmFXUWdNQ2tnYmlBOUlHNWxkeUJWWlNodVpYY2dSbXh2WVhRek1rRnljbUY1S0hRdVkyOTFiblFnS2lBektTd2dNeWtzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0NKdWIzSnRZV3dpTENCdUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQm1iM0lvYkdWMElHUWdQU0F3TENCbUlEMGdiaTVqYjNWdWREc2daQ0E4SUdZN0lHUXJLeWx1TG5ObGRGaFpXaWhrTENBd0xDQXdMQ0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnVFN3Z2NpQTlJRzVsZHlCTkxDQnZJRDBnYm1WM0lFMHNJR0VnUFNCdVpYY2dUU3dnYkNBOUlHNWxkeUJOTENCaklEMGdibVYzSUUwc0lHZ2dQU0J1WlhjZ1RTd2dkU0E5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9aU2tnWm05eUtHeGxkQ0JrTVNBOUlEQXNJR1l4SUQwZ1pTNWpiM1Z1ZERzZ1pERWdQQ0JtTVRzZ1pERWdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiU0E5SUdVdVoyVjBXQ2hrTVNBcklEQXBMQ0I0SUQwZ1pTNW5aWFJZS0dReElDc2dNU2tzSUhZZ1BTQmxMbWRsZEZnb1pERWdLeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBMQ0J0S1N3Z2NpNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFFzSUhncExDQnZMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z2Rpa3NJR2d1YzNWaVZtVmpkRzl5Y3lodkxDQnlLU3dnZFM1emRXSldaV04wYjNKektHa3NJSElwTENCb0xtTnliM056S0hVcExDQmhMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYml3Z2JTa3NJR3d1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNodUxDQjRLU3dnWXk1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtHNHNJSFlwTENCaExtRmtaQ2hvS1N3Z2JDNWhaR1FvYUNrc0lHTXVZV1JrS0dncExDQnVMbk5sZEZoWldpaHRMQ0JoTG5nc0lHRXVlU3dnWVM1NktTd2diaTV6WlhSWVdWb29lQ3dnYkM1NExDQnNMbmtzSUd3dWVpa3NJRzR1YzJWMFdGbGFLSFlzSUdNdWVDd2dZeTU1TENCakxub3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ1ptOXlLR3hsZENCa01pQTlJREFzSUdZeUlEMGdkQzVqYjNWdWREc2daRElnUENCbU1qc2daRElnS3owZ015bHBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvZEN3Z1pESWdLeUF3S1N3Z2NpNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSFFzSUdReUlDc2dNU2tzSUc4dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDBMQ0JrTWlBcklESXBMQ0JvTG5OMVlsWmxZM1J2Y25Nb2J5d2djaWtzSUhVdWMzVmlWbVZqZEc5eWN5aHBMQ0J5S1N3Z2FDNWpjbTl6Y3loMUtTd2diaTV6WlhSWVdWb29aRElnS3lBd0xDQm9MbmdzSUdndWVTd2dhQzU2S1N3Z2JpNXpaWFJZV1Zvb1pESWdLeUF4TENCb0xuZ3NJR2d1ZVN3Z2FDNTZLU3dnYmk1elpYUllXVm9vWkRJZ0t5QXlMQ0JvTG5nc0lHZ3VlU3dnYUM1NktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXViM0p0WVd4cGVtVk9iM0p0WVd4ektDa3NJRzR1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCdFpYSm5aU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0NFb1pTQW1KaUJsTG1selFuVm1abVZ5UjJWdmJXVjBjbmtwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMbTFsY21kbEtDazZJR2RsYjIxbGRISjVJRzV2ZENCaGJpQnBibk4wWVc1alpTQnZaaUJVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVM0aUxDQmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMElEMDlQU0IyYjJsa0lEQWdKaVlnS0hRZ1BTQXdMQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVMbTFsY21kbEtDazZJRTkyWlhKM2NtbDBhVzVuSUc5eWFXZHBibUZzSUdkbGIyMWxkSEo1TENCemRHRnlkR2x1WnlCaGRDQnZabVp6WlhROU1DNGdWWE5sSUVKMVptWmxja2RsYjIxbGRISjVWWFJwYkhNdWJXVnlaMlZDZFdabVpYSkhaVzl0WlhSeWFXVnpLQ2tnWm05eUlHeHZjM05zWlhOeklHMWxjbWRsTGlJcEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WVhSMGNtbGlkWFJsY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ2FXNGdiaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hsTG1GMGRISnBZblYwWlhOYmFWMGdQVDA5SUhadmFXUWdNQ2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2JsdHBYUzVoY25KaGVTd2dZU0E5SUdVdVlYUjBjbWxpZFhSbGMxdHBYU3dnYkNBOUlHRXVZWEp5WVhrc0lHTWdQU0JoTG1sMFpXMVRhWHBsSUNvZ2RDd2dhQ0E5SUUxaGRHZ3ViV2x1S0d3dWJHVnVaM1JvTENCdkxteGxibWQwYUNBdElHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdMQ0JrSUQwZ1l6c2dkU0E4SUdnN0lIVXJLeXdnWkNzcktXOWJaRjBnUFNCc1czVmRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHNXZjbTFoYkdsNlpVNXZjbTFoYkhNb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1GMGRISnBZblYwWlhNdWJtOXliV0ZzT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCbExtTnZkVzUwT3lCMElEd2dianNnZENzcktXaDBMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWlN3Z2RDa3NJR2gwTG01dmNtMWhiR2w2WlNncExDQmxMbk5sZEZoWldpaDBMQ0JvZEM1NExDQm9kQzU1TENCb2RDNTZLVHNLSUNBZ0lIMEtJQ0FnSUhSdlRtOXVTVzVrWlhobFpDZ3BJSHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJsS0dFc0lHd3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCaExtRnljbUY1TENCb0lEMGdZUzVwZEdWdFUybDZaU3dnZFNBOUlHRXVibTl5YldGc2FYcGxaQ3dnWkNBOUlHNWxkeUJqTG1OdmJuTjBjblZqZEc5eUtHd3ViR1Z1WjNSb0lDb2dhQ2tzSUdZZ1BTQXdMQ0J0SUQwZ01Ec0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I0SUQwZ01Dd2dkaUE5SUd3dWJHVnVaM1JvT3lCNElEd2dkanNnZUNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRXVhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaU0EvSUdZZ1BTQnNXM2hkSUNvZ1lTNWtZWFJoTG5OMGNtbGtaU0FySUdFdWIyWm1jMlYwSURvZ1ppQTlJR3hiZUYwZ0tpQm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5JRDBnTURzZ1p5QThJR2c3SUdjckt5bGtXMjBySzEwZ1BTQmpXMllySzEwN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QlZaU2hrTENCb0xDQjFLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYVdZZ0tIUm9hWE11YVc1a1pYZ2dQVDA5SUc1MWJHd3BJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNUxuUnZUbTl1U1c1a1pYaGxaQ2dwT2lCQ2RXWm1aWEpIWlc5dFpYUnllU0JwY3lCaGJISmxZV1I1SUc1dmJpMXBibVJsZUdWa0xpSXBMQ0IwYUdsek93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2JtVjNJRjlsTENCdUlEMGdkR2hwY3k1cGJtUmxlQzVoY25KaGVTd2dhU0E5SUhSb2FYTXVZWFIwY21saWRYUmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0VnYVc0Z2FTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYVZ0aFhTd2dZeUE5SUdVb2JDd2diaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVjMlYwUVhSMGNtbGlkWFJsS0dFc0lHTXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJvYVhNdWJXOXljR2hCZEhSeWFXSjFkR1Z6T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVRFZ2FXNGdjaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzTVNBOUlGdGRMQ0JqTVNBOUlISmJZVEZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHZ2dQU0F3TENCMUlEMGdZekV1YkdWdVozUm9PeUJvSUR3Z2RUc2dhQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWXpGYmFGMHNJR1lnUFNCbEtHUXNJRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkRFdWNIVnphQ2htS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCMExtMXZjbkJvUVhSMGNtbGlkWFJsYzF0aE1WMGdQU0JzTVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDNXRiM0p3YUZSaGNtZGxkSE5TWld4aGRHbDJaU0E5SUhSb2FYTXViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVU3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwYUdsekxtZHliM1Z3Y3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFeUlEMGdNQ3dnYkRJZ1BTQnZMbXhsYm1kMGFEc2dZVElnUENCc01qc2dZVElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCak1pQTlJRzliWVRKZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG1Ga1pFZHliM1Z3S0dNeUxuTjBZWEowTENCak1pNWpiM1Z1ZEN3Z1l6SXViV0YwWlhKcFlXeEpibVJsZUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCME93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCdFpYUmhaR0YwWVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtVnljMmx2YmpvZ05DNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0lrSjFabVpsY2tkbGIyMWxkSEo1SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGJtVnlZWFJ2Y2pvZ0lrSjFabVpsY2tkbGIyMWxkSEo1TG5SdlNsTlBUaUlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdhV1lnS0dVdWRYVnBaQ0E5SUhSb2FYTXVkWFZwWkN3Z1pTNTBlWEJsSUQwZ2RHaHBjeTUwZVhCbExDQjBhR2x6TG01aGJXVWdJVDA5SUNJaUlDWW1JQ2hsTG01aGJXVWdQU0IwYUdsekxtNWhiV1VwTENCUFltcGxZM1F1YTJWNWN5aDBhR2x6TG5WelpYSkVZWFJoS1M1c1pXNW5kR2dnUGlBd0lDWW1JQ2hsTG5WelpYSkVZWFJoSUQwZ2RHaHBjeTUxYzJWeVJHRjBZU2tzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdkR2hwY3k1d1lYSmhiV1YwWlhKek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nYVc0Z2JDbHNXMk5kSUNFOVBTQjJiMmxrSURBZ0ppWWdLR1ZiWTEwZ1BTQnNXMk5kS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1V1WkdGMFlTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjbWxpZFhSbGN6b2dlMzBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXBibVJsZURzS0lDQWdJQ0FnSUNCMElDRTlQU0J1ZFd4c0lDWW1JQ2hsTG1SaGRHRXVhVzVrWlhnZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFF1WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0l1Ym1GdFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhKeVlYazZJRUZ5Y21GNUxuQnliM1J2ZEhsd1pTNXpiR2xqWlM1allXeHNLSFF1WVhKeVlYa3BDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnNNU0JwYmlCdUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTXhJRDBnYmx0c01WMDdDaUFnSUNBZ0lDQWdJQ0FnSUdVdVpHRjBZUzVoZEhSeWFXSjFkR1Z6VzJ3eFhTQTlJR014TG5SdlNsTlBUaWhsTG1SaGRHRXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSHQ5TENCeUlEMGdJVEU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzTWlCcGJpQjBhR2x6TG0xdmNuQm9RWFIwY21saWRYUmxjeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqTWlBOUlIUm9hWE11Ylc5eWNHaEJkSFJ5YVdKMWRHVnpXMnd5WFN3Z2FDQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIVWdQU0F3TENCa0lEMGdZekl1YkdWdVozUm9PeUIxSUR3Z1pEc2dkU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnWXpKYmRWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9MbkIxYzJnb1ppNTBiMHBUVDA0b1pTNWtZWFJoS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2FDNXNaVzVuZEdnZ1BpQXdJQ1ltSUNocFcyd3lYU0E5SUdnc0lISWdQU0FoTUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISWdKaVlnS0dVdVpHRjBZUzV0YjNKd2FFRjBkSEpwWW5WMFpYTWdQU0JwTENCbExtUmhkR0V1Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VZ1BTQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabEtUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11WjNKdmRYQnpPd29nSUNBZ0lDQWdJRzh1YkdWdVozUm9JRDRnTUNBbUppQW9aUzVrWVhSaExtZHliM1Z3Y3lBOUlFcFRUMDR1Y0dGeWMyVW9TbE5QVGk1emRISnBibWRwWm5rb2J5a3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJvYVhNdVltOTFibVJwYm1kVGNHaGxjbVU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0VnSVQwOUlHNTFiR3dnSmlZZ0tHVXVaR0YwWVM1aWIzVnVaR2x1WjFOd2FHVnlaU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMlZ1ZEdWeU9pQmhMbU5sYm5SbGNpNTBiMEZ5Y21GNUtDa3NDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWVM1eVlXUnBkWE1LSUNBZ0lDQWdJQ0I5S1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdVpHVjRJRDBnYm5Wc2JDd2dkR2hwY3k1aGRIUnlhV0oxZEdWeklEMGdlMzBzSUhSb2FYTXViVzl5Y0doQmRIUnlhV0oxZEdWeklEMGdlMzBzSUhSb2FYTXVaM0p2ZFhCeklEMGdXMTBzSUhSb2FYTXVZbTkxYm1ScGJtZENiM2dnUFNCdWRXeHNMQ0IwYUdsekxtSnZkVzVrYVc1blUzQm9aWEpsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSHQ5T3dvZ0lDQWdJQ0FnSUhSb2FYTXVibUZ0WlNBOUlHVXVibUZ0WlRzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUdVdWFXNWtaWGc3Q2lBZ0lDQWdJQ0FnYmlBaFBUMGdiblZzYkNBbUppQjBhR2x6TG5ObGRFbHVaR1Y0S0c0dVkyeHZibVVvZENrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNWhkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUJwYmlCcEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JwVzJOZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2hqTENCb0xtTnNiMjVsS0hRcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQmxMbTF2Y25Cb1FYUjBjbWxpZFhSbGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTXhJR2x1SUhJcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FERWdQU0JiWFN3Z2RTQTlJSEpiWXpGZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1FnUFNBd0xDQm1JRDBnZFM1c1pXNW5kR2c3SUdRZ1BDQm1PeUJrS3lzcGFERXVjSFZ6YUNoMVcyUmRMbU5zYjI1bEtIUXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0YjNKd2FFRjBkSEpwWW5WMFpYTmJZekZkSUQwZ2FERTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSFJvYVhNdWJXOXljR2hVWVhKblpYUnpVbVZzWVhScGRtVWdQU0JsTG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1pTNW5jbTkxY0hNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCak1pQTlJREFzSUdneUlEMGdieTVzWlc1bmRHZzdJR015SUR3Z2FESTdJR015S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RURWdQU0J2VzJNeVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhaR1JIY205MWNDaDFNUzV6ZEdGeWRDd2dkVEV1WTI5MWJuUXNJSFV4TG0xaGRHVnlhV0ZzU1c1a1pYZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJR1V1WW05MWJtUnBibWRDYjNnN0NpQWdJQ0FnSUNBZ1lTQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWliM1Z1WkdsdVowSnZlQ0E5SUdFdVkyeHZibVVvS1NrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCbExtSnZkVzVrYVc1blUzQm9aWEpsT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJzSUNFOVBTQnVkV3hzSUNZbUlDaDBhR2x6TG1KdmRXNWthVzVuVTNCb1pYSmxJRDBnYkM1amJHOXVaU2dwS1N3Z2RHaHBjeTVrY21GM1VtRnVaMlV1YzNSaGNuUWdQU0JsTG1SeVlYZFNZVzVuWlM1emRHRnlkQ3dnZEdocGN5NWtjbUYzVW1GdVoyVXVZMjkxYm5RZ1BTQmxMbVJ5WVhkU1lXNW5aUzVqYjNWdWRDd2dkR2hwY3k1MWMyVnlSR0YwWVNBOUlHVXVkWE5sY2tSaGRHRXNJR1V1Y0dGeVlXMWxkR1Z5Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0JQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5CaGNtRnRaWFJsY25NcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1ScGMzQnZjMlVpQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q24wN0NsOWxMbkJ5YjNSdmRIbHdaUzVwYzBKMVptWmxja2RsYjIxbGRISjVJRDBnSVRBN0NuWmhjaUJEYkNBOUlHNWxkeUJ3WlN3Z2FHa2dQU0J1WlhjZ1EyNHNJRUp2SUQwZ2JtVjNJRUZ1TENCdGJpQTlJRzVsZHlCTkxDQm5iaUE5SUc1bGR5Qk5MQ0I0YmlBOUlHNWxkeUJOTENCNmJ5QTlJRzVsZHlCTkxDQlZieUE5SUc1bGR5Qk5MQ0JQYnlBOUlHNWxkeUJOTENCTGNpQTlJRzVsZHlCTkxDQmxjeUE5SUc1bGR5Qk5MQ0IwY3lBOUlHNWxkeUJOTENCdWN5QTlJRzVsZHlCWUxDQnBjeUE5SUc1bGR5QllMQ0J5Y3lBOUlHNWxkeUJZTENCSWJ5QTlJRzVsZHlCTkxDQnpjeUE5SUc1bGR5Qk5MQ0J6ZENBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCZlpTd2dkQ0E5SUc1bGR5Qm9iaWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphQ0lzSUhSb2FYTXVaMlZ2YldWMGNua2dQU0JsTENCMGFHbHpMbTFoZEdWeWFXRnNJRDBnZEN3Z2RHaHBjeTUxY0dSaGRHVk5iM0p3YUZSaGNtZGxkSE1vS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0JsTG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNoMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sY3lBOUlHVXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6TG5Oc2FXTmxLQ2twTENCbExtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG0xdmNuQm9WR0Z5WjJWMFJHbGpkR2x2Ym1GeWVTQTlJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJR1V1Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNUtTa3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQmxMbTFoZEdWeWFXRnNMQ0IwYUdsekxtZGxiMjFsZEhKNUlEMGdaUzVuWlc5dFpYUnllU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVaMlZ2YldWMGNuazdDaUFnSUNBZ0lDQWdhV1lnS0dVdWFYTkNkV1ptWlhKSFpXOXRaWFJ5ZVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMQ0J1SUQwZ1QySnFaV04wTG10bGVYTW9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1TG14bGJtZDBhQ0ErSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RGdHVXekJkWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGN5QTlJRnRkTENCMGFHbHpMbTF2Y25Cb1ZHRnlaMlYwUkdsamRHbHZibUZ5ZVNBOUlIdDlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCcExteGxibWQwYURzZ2NpQThJRzg3SUhJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2FWdHlYUzV1WVcxbElIeDhJRk4wY21sdVp5aHlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1dGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTXVjSFZ6YUNnd0tTd2dkR2hwY3k1dGIzSndhRlJoY21kbGRFUnBZM1JwYjI1aGNubGJZVjBnUFNCeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCME1TQTlJR1V1Ylc5eWNHaFVZWEpuWlhSek93b2dJQ0FnSUNBZ0lDQWdJQ0IwTVNBaFBUMGdkbTlwWkNBd0lDWW1JSFF4TG14bGJtZDBhQ0ErSURBZ0ppWWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdWemFDNTFjR1JoZEdWTmIzSndhRlJoY21kbGRITW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhKaGVXTmhjM1FvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVN3Z2FTQTlJSFJvYVhNdWJXRjBaWEpwWVd3c0lISWdQU0IwYUdsekxtMWhkSEpwZUZkdmNteGtPd29nSUNBZ0lDQWdJR2xtSUNocElEMDlQU0IyYjJsa0lEQWdmSHdnS0c0dVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ2JpNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1N3Z1FtOHVZMjl3ZVNodUxtSnZkVzVrYVc1blUzQm9aWEpsS1N3Z1FtOHVZWEJ3YkhsTllYUnlhWGcwS0hJcExDQmxMbkpoZVM1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0VKdktTQTlQVDBnSVRFcElIeDhJQ2hEYkM1amIzQjVLSElwTG1sdWRtVnlkQ2dwTENCb2FTNWpiM0I1S0dVdWNtRjVLUzVoY0hCc2VVMWhkSEpwZURRb1Eyd3BMQ0J1TG1KdmRXNWthVzVuUW05NElDRTlQU0J1ZFd4c0lDWW1JR2hwTG1sdWRHVnljMlZqZEhOQ2IzZ29iaTVpYjNWdVpHbHVaMEp2ZUNrZ1BUMDlJQ0V4S1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQnZPd29nSUNBZ0lDQWdJR2xtSUNodUxtbHpRblZtWm1WeVIyVnZiV1YwY25rcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1TG1sdVpHVjRMQ0JzSUQwZ2JpNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0JqSUQwZ2JpNXRiM0p3YUVGMGRISnBZblYwWlhNdWNHOXphWFJwYjI0c0lHZ2dQU0J1TG0xdmNuQm9WR0Z5WjJWMGMxSmxiR0YwYVhabExDQjFJRDBnYmk1aGRIUnlhV0oxZEdWekxuVjJMQ0JrSUQwZ2JpNWhkSFJ5YVdKMWRHVnpMblYyTWl3Z1ppQTlJRzR1WjNKdmRYQnpMQ0J0SUQwZ2JpNWtjbUYzVW1GdVoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGhJQ0U5UFNCdWRXeHNLU0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hwS1NrZ1ptOXlLR3hsZENCNElEMGdNQ3dnZGlBOUlHWXViR1Z1WjNSb095QjRJRHdnZGpzZ2VDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbklEMGdabHQ0WFN3Z2NDQTlJR2xiWnk1dFlYUmxjbWxoYkVsdVpHVjRYU3dnWHlBOUlFMWhkR2d1YldGNEtHY3VjM1JoY25Rc0lHMHVjM1JoY25RcExDQjVJRDBnVFdGMGFDNXRhVzRvWVM1amIzVnVkQ3dnVFdGMGFDNXRhVzRvWnk1emRHRnlkQ0FySUdjdVkyOTFiblFzSUcwdWMzUmhjblFnS3lCdExtTnZkVzUwS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdJZ1BTQmZMQ0JCSUQwZ2VUc2dZaUE4SUVFN0lHSWdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUV3Z1BTQmhMbWRsZEZnb1lpa3NJRWtnUFNCaExtZGxkRmdvWWlBcklERXBMQ0JySUQwZ1lTNW5aWFJZS0dJZ0t5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdklEMGdiM01vZEdocGN5d2djQ3dnWlN3Z2FHa3NJR3dzSUdNc0lHZ3NJSFVzSUdRc0lFd3NJRWtzSUdzcExDQnZJQ1ltSUNodkxtWmhZMlZKYm1SbGVDQTlJRTFoZEdndVpteHZiM0lvWWlBdklETXBMQ0J2TG1aaFkyVXViV0YwWlhKcFlXeEpibVJsZUNBOUlHY3ViV0YwWlhKcFlXeEpibVJsZUN3Z2RDNXdkWE5vS0c4cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRNU0E5SUUxaGRHZ3ViV0Y0S0RBc0lHMHVjM1JoY25RcExDQjJNU0E5SUUxaGRHZ3ViV2x1S0dFdVkyOTFiblFzSUcwdWMzUmhjblFnS3lCdExtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnpFZ1BTQjRNU3dnY0RFZ1BTQjJNVHNnWnpFZ1BDQndNVHNnWnpFZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRjh4SUQwZ1lTNW5aWFJZS0djeEtTd2dlVEVnUFNCaExtZGxkRmdvWnpFZ0t5QXhLU3dnWWpFZ1BTQmhMbWRsZEZnb1p6RWdLeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYjNNb2RHaHBjeXdnYVN3Z1pTd2dhR2tzSUd3c0lHTXNJR2dzSUhVc0lHUXNJRjh4TENCNU1Td2dZakVwTENCdklDWW1JQ2h2TG1aaFkyVkpibVJsZUNBOUlFMWhkR2d1Wm14dmIzSW9aekVnTHlBektTd2dkQzV3ZFhOb0tHOHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hzSUNFOVBTQjJiMmxrSURBcElHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHa3BLU0JtYjNJb2JHVjBJSGd5SUQwZ01Dd2dkaklnUFNCbUxteGxibWQwYURzZ2VESWdQQ0IyTWpzZ2VESXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p6SWdQU0JtVzNneVhTd2djRElnUFNCcFcyY3lMbTFoZEdWeWFXRnNTVzVrWlhoZExDQmZNaUE5SUUxaGRHZ3ViV0Y0S0djeUxuTjBZWEowTENCdExuTjBZWEowS1N3Z2VUSWdQU0JOWVhSb0xtMXBiaWhzTG1OdmRXNTBMQ0JOWVhSb0xtMXBiaWhuTWk1emRHRnlkQ0FySUdjeUxtTnZkVzUwTENCdExuTjBZWEowSUNzZ2JTNWpiM1Z1ZENrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaU1pQTlJRjh5TENCQk1TQTlJSGt5T3lCaU1pQThJRUV4T3lCaU1pQXJQU0F6S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVERFZ1BTQmlNaXdnU1RFZ1BTQmlNaUFySURFc0lHc3hJRDBnWWpJZ0t5QXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnZjeWgwYUdsekxDQndNaXdnWlN3Z2FHa3NJR3dzSUdNc0lHZ3NJSFVzSUdRc0lFd3hMQ0JKTVN3Z2F6RXBMQ0J2SUNZbUlDaHZMbVpoWTJWSmJtUmxlQ0E5SUUxaGRHZ3VabXh2YjNJb1lqSWdMeUF6S1N3Z2J5NW1ZV05sTG0xaGRHVnlhV0ZzU1c1a1pYZ2dQU0JuTWk1dFlYUmxjbWxoYkVsdVpHVjRMQ0IwTG5CMWMyZ29ieWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhneklEMGdUV0YwYUM1dFlYZ29NQ3dnYlM1emRHRnlkQ2tzSUhZeklEMGdUV0YwYUM1dGFXNG9iQzVqYjNWdWRDd2diUzV6ZEdGeWRDQXJJRzB1WTI5MWJuUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm5NeUE5SUhnekxDQndNeUE5SUhZek95Qm5NeUE4SUhBek95Qm5NeUFyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h6TWdQU0JuTXl3Z2VUTWdQU0JuTXlBcklERXNJR0l6SUQwZ1p6TWdLeUF5T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J2Y3loMGFHbHpMQ0JwTENCbExDQm9hU3dnYkN3Z1l5d2dhQ3dnZFN3Z1pDd2dYek1zSUhrekxDQmlNeWtzSUc4Z0ppWWdLRzh1Wm1GalpVbHVaR1Y0SUQwZ1RXRjBhQzVtYkc5dmNpaG5NeUF2SURNcExDQjBMbkIxYzJnb2J5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUc0dWFYTkhaVzl0WlhSeWVTQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TlpYTm9MbkpoZVdOaGMzUW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ2ZRcDlPd3B6ZEM1d2NtOTBiM1I1Y0dVdWFYTk5aWE5vSUQwZ0lUQTdDbVoxYm1OMGFXOXVJR2htS0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXBJSHNLSUNBZ0lHeGxkQ0JzT3dvZ0lDQWdhV1lnS0dVdWMybGtaU0E5UFQwZ2FYUWdQeUJzSUQwZ2JpNXBiblJsY25ObFkzUlVjbWxoYm1kc1pTaHZMQ0J5TENCcExDQWhNQ3dnWVNrZ09pQnNJRDBnYmk1cGJuUmxjbk5sWTNSVWNtbGhibWRzWlNocExDQnlMQ0J2TENCbExuTnBaR1VnSVQwOUlFTnBMQ0JoS1N3Z2JDQTlQVDBnYm5Wc2JDa2djbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQnpjeTVqYjNCNUtHRXBMQ0J6Y3k1aGNIQnNlVTFoZEhKcGVEUW9jeTV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0JzWlhRZ1l5QTlJSFF1Y21GNUxtOXlhV2RwYmk1a2FYTjBZVzVqWlZSdktITnpLVHNLSUNBZ0lISmxkSFZ5YmlCaklEd2dkQzV1WldGeUlIeDhJR01nUGlCMExtWmhjaUEvSUc1MWJHd2dPaUI3Q2lBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUdNc0NpQWdJQ0FnSUNBZ2NHOXBiblE2SUhOekxtTnNiMjVsS0Nrc0NpQWdJQ0FnSUNBZ2IySnFaV04wT2lCekNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlHOXpLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01zSUdnc0lIVXBJSHNLSUNBZ0lHMXVMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVN3Z1l5a3NJR2R1TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTd2dhQ2tzSUhodUxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9hU3dnZFNrN0NpQWdJQ0JzWlhRZ1pDQTlJSE11Ylc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWek93b2dJQ0FnYVdZZ0tISWdKaVlnWkNrZ2V3b2dJQ0FnSUNBZ0lFdHlMbk5sZENnd0xDQXdMQ0F3S1N3Z1pYTXVjMlYwS0RBc0lEQXNJREFwTENCMGN5NXpaWFFvTUN3Z01Dd2dNQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ01Dd2dlQ0E5SUhJdWJHVnVaM1JvT3lCdElEd2dlRHNnYlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JrVzIxZExDQm5JRDBnY2x0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZGlBaFBUMGdNQ0FtSmlBb2VtOHVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2huTENCaktTd2dWVzh1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNobkxDQm9LU3dnVDI4dVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaG5MQ0IxS1N3Z2J5QS9JQ2hMY2k1aFpHUlRZMkZzWldSV1pXTjBiM0lvZW04c0lIWXBMQ0JsY3k1aFpHUlRZMkZzWldSV1pXTjBiM0lvVlc4c0lIWXBMQ0IwY3k1aFpHUlRZMkZzWldSV1pXTjBiM0lvVDI4c0lIWXBLU0E2SUNoTGNpNWhaR1JUWTJGc1pXUldaV04wYjNJb2VtOHVjM1ZpS0cxdUtTd2dkaWtzSUdWekxtRmtaRk5qWVd4bFpGWmxZM1J2Y2loVmJ5NXpkV0lvWjI0cExDQjJLU3dnZEhNdVlXUmtVMk5oYkdWa1ZtVmpkRzl5S0U5dkxuTjFZaWg0Ymlrc0lIWXBLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUcxdUxtRmtaQ2hMY2lrc0lHZHVMbUZrWkNobGN5a3NJSGh1TG1Ga1pDaDBjeWs3Q2lBZ0lDQjlDaUFnSUNCekxtbHpVMnRwYm01bFpFMWxjMmdnSmlZZ0tITXVZbTl1WlZSeVlXNXpabTl5YlNoakxDQnRiaWtzSUhNdVltOXVaVlJ5WVc1elptOXliU2hvTENCbmJpa3NJSE11WW05dVpWUnlZVzV6Wm05eWJTaDFMQ0I0YmlrcE93b2dJQ0FnYkdWMElHWWdQU0JvWmloekxDQmxMQ0IwTENCdUxDQnRiaXdnWjI0c0lIaHVMQ0JJYnlrN0NpQWdJQ0JwWmlBb1ppa2dld29nSUNBZ0lDQWdJR0VnSmlZZ0tHNXpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWVN3Z1l5a3NJR2x6TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dhQ2tzSUhKekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnZFNrc0lHWXVkWFlnUFNCdWRDNW5aWFJWVmloSWJ5d2diVzRzSUdkdUxDQjRiaXdnYm5Nc0lHbHpMQ0J5Y3l3Z2JtVjNJRmdwS1N3Z2JDQW1KaUFvYm5NdVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaHNMQ0JqS1N3Z2FYTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2hzTENCb0tTd2djbk11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoc0xDQjFLU3dnWmk1MWRqSWdQU0J1ZEM1blpYUlZWaWhJYnl3Z2JXNHNJR2R1TENCNGJpd2dibk1zSUdsekxDQnljeXdnYm1WM0lGZ3BLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JURWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRTZJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHSTZJR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTTZJSFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkRvZ2JtVjNJRTBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkR1Z5YVdGc1NXNWtaWGc2SURBS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHNTBMbWRsZEU1dmNtMWhiQ2h0Yml3Z1oyNHNJSGh1TENCdE1TNXViM0p0WVd3cExDQm1MbVpoWTJVZ1BTQnRNVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJtT3dwOUNuWmhjaUIzYmlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJREVzSUhRZ1BTQXhMQ0J1SUQwZ01Td2dhU0E5SURFc0lISWdQU0F4TENCdklEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVFtOTRSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvT2lCdUxBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFGTmxaMjFsYm5Sek9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFJUWldkdFpXNTBjem9nY2l3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoVFpXZHRaVzUwY3pvZ2J3b2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUdrZ1BTQk5ZWFJvTG1ac2IyOXlLR2twTENCeUlEMGdUV0YwYUM1bWJHOXZjaWh5S1N3Z2J5QTlJRTFoZEdndVpteHZiM0lvYnlrN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCYlhTd2dZeUE5SUZ0ZExDQm9JRDBnVzEwc0lIVWdQU0JiWFN3Z1pDQTlJREFzSUdZZ1BTQXdPd29nSUNBZ0lDQWdJRzBvSW5vaUxDQWllU0lzSUNKNElpd2dMVEVzSUMweExDQnVMQ0IwTENCbExDQnZMQ0J5TENBd0tTd2diU2dpZWlJc0lDSjVJaXdnSW5naUxDQXhMQ0F0TVN3Z2Jpd2dkQ3dnTFdVc0lHOHNJSElzSURFcExDQnRLQ0o0SWl3Z0lub2lMQ0FpZVNJc0lERXNJREVzSUdVc0lHNHNJSFFzSUdrc0lHOHNJRElwTENCdEtDSjRJaXdnSW5vaUxDQWllU0lzSURFc0lDMHhMQ0JsTENCdUxDQXRkQ3dnYVN3Z2J5d2dNeWtzSUcwb0luZ2lMQ0FpZVNJc0lDSjZJaXdnTVN3Z0xURXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lEUXBMQ0J0S0NKNElpd2dJbmtpTENBaWVpSXNJQzB4TENBdE1Td2daU3dnZEN3Z0xXNHNJR2tzSUhJc0lEVXBMQ0IwYUdsekxuTmxkRWx1WkdWNEtHd3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvWXl3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLR2dzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0hVc0lESXBLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ0S0hnc0lIWXNJR2NzSUhBc0lGOHNJSGtzSUdJc0lFRXNJRXdzSUVrc0lHc3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUlnUFNCNUlDOGdUQ3dnVUNBOUlHSWdMeUJKTENCM0lEMGdlU0F2SURJc0lFVWdQU0JpSUM4Z01pd2dSQ0E5SUVFZ0x5QXlMQ0JWSUQwZ1RDQXJJREVzSUVZZ1BTQkpJQ3NnTVN3Z1R5QTlJREFzSUc1bElEMGdNQ3dnWTJVZ1BTQnVaWGNnVFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQldJRDBnTURzZ1ZpQThJRVk3SUZZckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnlBOUlGWWdLaUJRSUMwZ1JUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FHVWdQU0F3T3lCb1pTQThJRlU3SUdobEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNaU0E5SUdobElDb2dRaUF0SUhjN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMlZiZUYwZ1BTQnNaU0FxSUhBc0lHTmxXM1pkSUQwZ1Z5QXFJRjhzSUdObFcyZGRJRDBnUkN3Z1l5NXdkWE5vS0dObExuZ3NJR05sTG5rc0lHTmxMbm9wTENCalpWdDRYU0E5SURBc0lHTmxXM1pkSUQwZ01Dd2dZMlZiWjEwZ1BTQkJJRDRnTUNBL0lERWdPaUF0TVN3Z2FDNXdkWE5vS0dObExuZ3NJR05sTG5rc0lHTmxMbm9wTENCMUxuQjFjMmdvYUdVZ0x5Qk1LU3dnZFM1d2RYTm9LREVnTFNCV0lDOGdTU2tzSUU4Z0t6MGdNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRll4SUQwZ01Ec2dWakVnUENCSk95QldNU3NyS1dadmNpaHNaWFFnVnpFZ1BTQXdPeUJYTVNBOElFdzdJRmN4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2hsTVNBOUlHUWdLeUJYTVNBcklGVWdLaUJXTVN3Z2JHVXhJRDBnWkNBcklGY3hJQ3NnVlNBcUlDaFdNU0FySURFcExDQm1aU0E5SUdRZ0t5QW9WekVnS3lBeEtTQXJJRlVnS2lBb1ZqRWdLeUF4S1N3Z1FtVWdQU0JrSUNzZ0tGY3hJQ3NnTVNrZ0t5QlZJQ29nVmpFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc0xuQjFjMmdvYUdVeExDQnNaVEVzSUVKbEtTd2diQzV3ZFhOb0tHeGxNU3dnWm1Vc0lFSmxLU3dnYm1VZ0t6MGdOanNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JoTG1Ga1pFZHliM1Z3S0dZc0lHNWxMQ0JyS1N3Z1ppQXJQU0J1WlN3Z1pDQXJQU0JQT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIzYmlobExuZHBaSFJvTENCbExtaGxhV2RvZEN3Z1pTNWtaWEIwYUN3Z1pTNTNhV1IwYUZObFoyMWxiblJ6TENCbExtaGxhV2RvZEZObFoyMWxiblJ6TENCbExtUmxjSFJvVTJWbmJXVnVkSE1wT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCU2FTaHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlIdDlPd29nSUNBZ1ptOXlLR3hsZENCMElHbHVJSE1wZXdvZ0lDQWdJQ0FnSUdWYmRGMGdQU0I3ZlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z2FXNGdjMXQwWFNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdjMXQwWFZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVNBbUppQW9hUzVwYzBOdmJHOXlJSHg4SUdrdWFYTk5ZWFJ5YVhneklIeDhJR2t1YVhOTllYUnlhWGcwSUh4OElHa3VhWE5XWldOMGIzSXlJSHg4SUdrdWFYTldaV04wYjNJeklIeDhJR2t1YVhOV1pXTjBiM0kwSUh4OElHa3VhWE5VWlhoMGRYSmxJSHg4SUdrdWFYTlJkV0YwWlhKdWFXOXVLU0EvSUdWYmRGMWJibDBnUFNCcExtTnNiMjVsS0NrZ09pQkJjbkpoZVM1cGMwRnljbUY1S0drcElEOGdaVnQwWFZ0dVhTQTlJR2t1YzJ4cFkyVW9LU0E2SUdWYmRGMWJibDBnUFNCcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQmxPd3A5Q21aMWJtTjBhVzl1SUhsMEtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2UzMDdDaUFnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z2N5NXNaVzVuZEdnN0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JTYVNoelczUmRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnYVc0Z2JpbGxXMmxkSUQwZ2JsdHBYVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUJsT3dwOUNuWmhjaUIxWmlBOUlIc0tJQ0FnSUdOc2IyNWxPaUJTYVN3S0lDQWdJRzFsY21kbE9pQjVkQXA5TENCa1ppQTlJR0IyYjJsa0lHMWhhVzRvS1NCN0NnbG5iRjlRYjNOcGRHbHZiaUE5SUhCeWIycGxZM1JwYjI1TllYUnlhWGdnS2lCdGIyUmxiRlpwWlhkTllYUnlhWGdnS2lCMlpXTTBLQ0J3YjNOcGRHbHZiaXdnTVM0d0lDazdDbjFnTENCbVppQTlJR0IyYjJsa0lHMWhhVzRvS1NCN0NnbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0F4TGpBc0lEQXVNQ3dnTUM0d0xDQXhMakFnS1RzS2ZXQXNJSE51SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pUYUdGa1pYSk5ZWFJsY21saGJDSXNJSFJvYVhNdVpHVm1hVzVsY3lBOUlIdDlMQ0IwYUdsekxuVnVhV1p2Y20xeklEMGdlMzBzSUhSb2FYTXVkbVZ5ZEdWNFUyaGhaR1Z5SUQwZ1pHWXNJSFJvYVhNdVpuSmhaMjFsYm5SVGFHRmtaWElnUFNCbVppd2dkR2hwY3k1c2FXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJQ0V4TENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SURFc0lIUm9hWE11Wm05bklEMGdJVEVzSUhSb2FYTXViR2xuYUhSeklEMGdJVEVzSUhSb2FYTXVZMnhwY0hCcGJtY2dQU0FoTVN3Z2RHaHBjeTVsZUhSbGJuTnBiMjV6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrWlhKcGRtRjBhWFpsY3pvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdaeVlXZEVaWEIwYURvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdSeVlYZENkV1ptWlhKek9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaR1Z5VkdWNGRIVnlaVXhQUkRvZ0lURUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtUmxabUYxYkhSQmRIUnlhV0oxZEdWV1lXeDFaWE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREVLSUNBZ0lDQWdJQ0FnSUNBZ1hTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFhZNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdJQ0FnSUYwc0NpQWdJQ0FnSUNBZ0lDQWdJSFYyTWpvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQWdJQ0FnWFFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YVc1a1pYZ3dRWFIwY21saWRYUmxUbUZ0WlNBOUlIWnZhV1FnTUN3Z2RHaHBjeTUxYm1sbWIzSnRjMDVsWldSVmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1bmJITnNWbVZ5YzJsdmJpQTlJRzUxYkd3c0lHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb1pTNWhkSFJ5YVdKMWRHVnpJQ0U5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVMmhoWkdWeVRXRjBaWEpwWVd3NklHRjBkSEpwWW5WMFpYTWdjMmh2ZFd4a0lHNXZkeUJpWlNCa1pXWnBibVZrSUdsdUlGUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVjMlYwVm1Gc2RXVnpLR1VwS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtWnlZV2R0Wlc1MFUyaGhaR1Z5SUQwZ1pTNW1jbUZuYldWdWRGTm9ZV1JsY2l3Z2RHaHBjeTUyWlhKMFpYaFRhR0ZrWlhJZ1BTQmxMblpsY25SbGVGTm9ZV1JsY2l3Z2RHaHBjeTUxYm1sbWIzSnRjeUE5SUZKcEtHVXVkVzVwWm05eWJYTXBMQ0IwYUdsekxtUmxabWx1WlhNZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMbVJsWm1sdVpYTXBMQ0IwYUdsekxuZHBjbVZtY21GdFpTQTlJR1V1ZDJseVpXWnlZVzFsTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ0E5SUdVdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0xDQjBhR2x6TG14cFoyaDBjeUE5SUdVdWJHbG5hSFJ6TENCMGFHbHpMbU5zYVhCd2FXNW5JRDBnWlM1amJHbHdjR2x1Wnl3Z2RHaHBjeTVsZUhSbGJuTnBiMjV6SUQwZ1QySnFaV04wTG1GemMybG5iaWg3ZlN3Z1pTNWxlSFJsYm5OcGIyNXpLU3dnZEdocGN5NW5iSE5zVm1WeWMybHZiaUE5SUdVdVoyeHpiRlpsY25OcGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdjM1Z3WlhJdWRHOUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lIUXVaMnh6YkZabGNuTnBiMjRnUFNCMGFHbHpMbWRzYzJ4V1pYSnphVzl1TENCMExuVnVhV1p2Y20xeklEMGdlMzA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JwSUdsdUlIUm9hWE11ZFc1cFptOXliWE1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlIUm9hWE11ZFc1cFptOXliWE5iYVYwdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdKaVlnYnk1cGMxUmxlSFIxY21VZ1B5QjBMblZ1YVdadmNtMXpXMmxkSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW5RaUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc4dWRHOUtVMDlPS0dVcExuVjFhV1FLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTZJRzhnSmlZZ2J5NXBjME52Ykc5eUlEOGdkQzUxYm1sbWIzSnRjMXRwWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKaklpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdkxtZGxkRWhsZUNncENpQWdJQ0FnSUNBZ0lDQWdJSDBnT2lCdklDWW1JRzh1YVhOV1pXTjBiM0l5SUQ4Z2RDNTFibWxtYjNKdGMxdHBYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0oyTWlJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYnk1MGIwRnljbUY1S0NrS0lDQWdJQ0FnSUNBZ0lDQWdmU0E2SUc4Z0ppWWdieTVwYzFabFkzUnZjak1nUHlCMExuVnVhV1p2Y20xelcybGRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJbll6SWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ2TG5SdlFYSnlZWGtvS1FvZ0lDQWdJQ0FnSUNBZ0lDQjlJRG9nYnlBbUppQnZMbWx6Vm1WamRHOXlOQ0EvSUhRdWRXNXBabTl5YlhOYmFWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlkalFpTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzh1ZEc5QmNuSmhlU2dwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMGdPaUJ2SUNZbUlHOHVhWE5OWVhSeWFYZ3pJRDhnZEM1MWJtbG1iM0p0YzF0cFhTQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklDSnRNeUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dieTUwYjBGeWNtRjVLQ2tLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQTZJRzhnSmlZZ2J5NXBjMDFoZEhKcGVEUWdQeUIwTG5WdWFXWnZjbTF6VzJsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltMDBJaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnZMblJ2UVhKeVlYa29LUW9nSUNBZ0lDQWdJQ0FnSUNCOUlEb2dkQzUxYm1sbWIzSnRjMXRwWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdkNpQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUU5aWFtVmpkQzVyWlhsektIUm9hWE11WkdWbWFXNWxjeWt1YkdWdVozUm9JRDRnTUNBbUppQW9kQzVrWldacGJtVnpJRDBnZEdocGN5NWtaV1pwYm1WektTd2dkQzUyWlhKMFpYaFRhR0ZrWlhJZ1BTQjBhR2x6TG5abGNuUmxlRk5vWVdSbGNpd2dkQzVtY21GbmJXVnVkRk5vWVdSbGNpQTlJSFJvYVhNdVpuSmhaMjFsYm5SVGFHRmtaWEk3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3ZlRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdreElHbHVJSFJvYVhNdVpYaDBaVzV6YVc5dWN5bDBhR2x6TG1WNGRHVnVjMmx2Ym5OYmFURmRJRDA5UFNBaE1DQW1KaUFvYmx0cE1WMGdQU0FoTUNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUU5aWFtVmpkQzVyWlhsektHNHBMbXhsYm1kMGFDQStJREFnSmlZZ0tIUXVaWGgwWlc1emFXOXVjeUE5SUc0cExDQjBPd29nSUNBZ2ZRcDlPd3B6Ymk1d2NtOTBiM1I1Y0dVdWFYTlRhR0ZrWlhKTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ1NYSWdQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVEyRnRaWEpoSWl3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlVnUFNCdVpYY2djR1VzSUhSb2FYTXVjSEp2YW1WamRHbHZiazFoZEhKcGVDQTlJRzVsZHlCd1pTd2dkR2hwY3k1d2NtOXFaV04wYVc5dVRXRjBjbWw0U1c1MlpYSnpaU0E5SUc1bGR5QndaVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXNJSFFwTENCMGFHbHpMbTFoZEhKcGVGZHZjbXhrU1c1MlpYSnpaUzVqYjNCNUtHVXViV0YwY21sNFYyOXliR1JKYm5abGNuTmxLU3dnZEdocGN5NXdjbTlxWldOMGFXOXVUV0YwY21sNExtTnZjSGtvWlM1d2NtOXFaV04wYVc5dVRXRjBjbWw0S1N3Z2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0dVdWNISnZhbVZqZEdsdmJrMWhkSEpwZUVsdWRtVnljMlVwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFYyOXliR1JFYVhKbFkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvSVRBc0lDRXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXVaV3hsYldWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVjMlYwS0MxMFd6aGRMQ0F0ZEZzNVhTd2dMWFJiTVRCZEtTNXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0dVcElIc0tJQ0FnSUNBZ0lDQnpkWEJsY2k1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtTd2dkR2hwY3k1dFlYUnlhWGhYYjNKc1pFbHVkbVZ5YzJVdVkyOXdlU2gwYUdsekxtMWhkSEpwZUZkdmNteGtLUzVwYm5abGNuUW9LVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVmR2Y214a1RXRjBjbWw0S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpNTFjR1JoZEdWWGIzSnNaRTFoZEhKcGVDaGxMQ0IwS1N3Z2RHaHBjeTV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlV1WTI5d2VTaDBhR2x6TG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q24wN0NrbHlMbkJ5YjNSdmRIbHdaUzVwYzBOaGJXVnlZU0E5SUNFd093cDJZWElnZFhRZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVseUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0ExTUN3Z2RDQTlJREVzSUc0Z1BTQXVNU3dnYVNBOUlESmxNeWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHVnljM0JsWTNScGRtVkRZVzFsY21FaUxDQjBhR2x6TG1admRpQTlJR1VzSUhSb2FYTXVlbTl2YlNBOUlERXNJSFJvYVhNdWJtVmhjaUE5SUc0c0lIUm9hWE11Wm1GeUlEMGdhU3dnZEdocGN5NW1iMk4xY3lBOUlERXdMQ0IwYUdsekxtRnpjR1ZqZENBOUlIUXNJSFJvYVhNdWRtbGxkeUE5SUc1MWJHd3NJSFJvYVhNdVptbHNiVWRoZFdkbElEMGdNelVzSUhSb2FYTXVabWxzYlU5bVpuTmxkQ0E5SURBc0lIUm9hWE11ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTd2dkQ2tzSUhSb2FYTXVabTkySUQwZ1pTNW1iM1lzSUhSb2FYTXVlbTl2YlNBOUlHVXVlbTl2YlN3Z2RHaHBjeTV1WldGeUlEMGdaUzV1WldGeUxDQjBhR2x6TG1aaGNpQTlJR1V1Wm1GeUxDQjBhR2x6TG1adlkzVnpJRDBnWlM1bWIyTjFjeXdnZEdocGN5NWhjM0JsWTNRZ1BTQmxMbUZ6Y0dWamRDd2dkR2hwY3k1MmFXVjNJRDBnWlM1MmFXVjNJRDA5UFNCdWRXeHNJRDhnYm5Wc2JDQTZJRTlpYW1WamRDNWhjM05wWjI0b2UzMHNJR1V1ZG1sbGR5a3NJSFJvYVhNdVptbHNiVWRoZFdkbElEMGdaUzVtYVd4dFIyRjFaMlVzSUhSb2FYTXVabWxzYlU5bVpuTmxkQ0E5SUdVdVptbHNiVTltWm5ObGRDd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRVp2WTJGc1RHVnVaM1JvS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlDNDFJQ29nZEdocGN5NW5aWFJHYVd4dFNHVnBaMmgwS0NrZ0x5QmxPd29nSUNBZ0lDQWdJSFJvYVhNdVptOTJJRDBnWkhJZ0tpQXlJQ29nVFdGMGFDNWhkR0Z1S0hRcExDQjBhR2x6TG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFWnZZMkZzVEdWdVozUm9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnVFdGMGFDNTBZVzRvVjI0Z0tpQXVOU0FxSUhSb2FYTXVabTkyS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnTGpVZ0tpQjBhR2x6TG1kbGRFWnBiRzFJWldsbmFIUW9LU0F2SUdVN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJGWm1abFkzUnBkbVZHVDFZb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHUnlJQ29nTWlBcUlFMWhkR2d1WVhSaGJpaE5ZWFJvTG5SaGJpaFhiaUFxSUM0MUlDb2dkR2hwY3k1bWIzWXBJQzhnZEdocGN5NTZiMjl0S1RzS0lDQWdJSDBLSUNBZ0lHZGxkRVpwYkcxWGFXUjBhQ2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW1hV3h0UjJGMVoyVWdLaUJOWVhSb0xtMXBiaWgwYUdsekxtRnpjR1ZqZEN3Z01TazdDaUFnSUNCOUNpQWdJQ0JuWlhSR2FXeHRTR1ZwWjJoMEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1acGJHMUhZWFZuWlNBdklFMWhkR2d1YldGNEtIUm9hWE11WVhOd1pXTjBMQ0F4S1RzS0lDQWdJSDBLSUNBZ0lITmxkRlpwWlhkUFptWnpaWFFvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZWE53WldOMElEMGdaU0F2SUhRc0lIUm9hWE11ZG1sbGR5QTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NTJhV1YzSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsYm1GaWJHVmtPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdablZzYkZkcFpIUm9PaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1kV3hzU0dWcFoyaDBPaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnZabVp6WlhSWU9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCdlptWnpaWFJaT2lBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFEb2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeENpQWdJQ0FnSUNBZ2ZTa3NJSFJvYVhNdWRtbGxkeTVsYm1GaWJHVmtJRDBnSVRBc0lIUm9hWE11ZG1sbGR5NW1kV3hzVjJsa2RHZ2dQU0JsTENCMGFHbHpMblpwWlhjdVpuVnNiRWhsYVdkb2RDQTlJSFFzSUhSb2FYTXVkbWxsZHk1dlptWnpaWFJZSUQwZ2Jpd2dkR2hwY3k1MmFXVjNMbTltWm5ObGRGa2dQU0JwTENCMGFHbHpMblpwWlhjdWQybGtkR2dnUFNCeUxDQjBhR2x6TG5acFpYY3VhR1ZwWjJoMElEMGdieXdnZEdocGN5NTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiR1ZoY2xacFpYZFBabVp6WlhRb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1MmFXVjNJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMblpwWlhjdVpXNWhZbXhsWkNBOUlDRXhLU3dnZEdocGN5NTFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWUWNtOXFaV04wYVc5dVRXRjBjbWw0S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTV1WldGeUxDQjBJRDBnWlNBcUlFMWhkR2d1ZEdGdUtGZHVJQ29nTGpVZ0tpQjBhR2x6TG1admRpa2dMeUIwYUdsekxucHZiMjBzSUc0Z1BTQXlJQ29nZEN3Z2FTQTlJSFJvYVhNdVlYTndaV04wSUNvZ2Jpd2djaUE5SUMwdU5TQXFJR2tzSUc4Z1BTQjBhR2x6TG5acFpYYzdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVkbWxsZHlBaFBUMGdiblZzYkNBbUppQjBhR2x6TG5acFpYY3VaVzVoWW14bFpDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUc4dVpuVnNiRmRwWkhSb0xDQmpJRDBnYnk1bWRXeHNTR1ZwWjJoME93b2dJQ0FnSUNBZ0lDQWdJQ0J5SUNzOUlHOHViMlptYzJWMFdDQXFJR2tnTHlCc0xDQjBJQzA5SUc4dWIyWm1jMlYwV1NBcUlHNGdMeUJqTENCcElDbzlJRzh1ZDJsa2RHZ2dMeUJzTENCdUlDbzlJRzh1YUdWcFoyaDBJQzhnWXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpMbVpwYkcxUFptWnpaWFE3Q2lBZ0lDQWdJQ0FnWVNBaFBUMGdNQ0FtSmlBb2NpQXJQU0JsSUNvZ1lTQXZJSFJvYVhNdVoyVjBSbWxzYlZkcFpIUm9LQ2twTENCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3ViV0ZyWlZCbGNuTndaV04wYVhabEtISXNJSElnS3lCcExDQjBMQ0IwSUMwZ2Jpd2daU3dnZEdocGN5NW1ZWElwTENCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYaEpiblpsY25ObExtTnZjSGtvZEdocGN5NXdjbTlxWldOMGFXOXVUV0YwY21sNEtTNXBiblpsY25Rb0tUc0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6ZFhCbGNpNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXViMkpxWldOMExtWnZkaUE5SUhSb2FYTXVabTkyTENCMExtOWlhbVZqZEM1NmIyOXRJRDBnZEdocGN5NTZiMjl0TENCMExtOWlhbVZqZEM1dVpXRnlJRDBnZEdocGN5NXVaV0Z5TENCMExtOWlhbVZqZEM1bVlYSWdQU0IwYUdsekxtWmhjaXdnZEM1dlltcGxZM1F1Wm05amRYTWdQU0IwYUdsekxtWnZZM1Z6TENCMExtOWlhbVZqZEM1aGMzQmxZM1FnUFNCMGFHbHpMbUZ6Y0dWamRDd2dkR2hwY3k1MmFXVjNJQ0U5UFNCdWRXeHNJQ1ltSUNoMExtOWlhbVZqZEM1MmFXVjNJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnZEdocGN5NTJhV1YzS1Nrc0lIUXViMkpxWldOMExtWnBiRzFIWVhWblpTQTlJSFJvYVhNdVptbHNiVWRoZFdkbExDQjBMbTlpYW1WamRDNW1hV3h0VDJabWMyVjBJRDBnZEdocGN5NW1hV3h0VDJabWMyVjBMQ0IwT3dvZ0lDQWdmUXA5T3dwMWRDNXdjbTkwYjNSNWNHVXVhWE5RWlhKemNHVmpkR2wyWlVOaGJXVnlZU0E5SUNFd093cDJZWElnZFdrZ1BTQTVNQ3dnWkdrZ1BTQXhMQ0FrY3lBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1MGVYQmxJRDBnSWtOMVltVkRZVzFsY21FaUxDQnVMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElDRTlQU0FoTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1RGRXSmxRMkZ0WlhKaE9pQlVhR1VnWTI5dWMzUnlkV04wYjNJZ2JtOTNJR1Y0Y0dWamRITWdZVzRnYVc1emRHRnVZMlVnYjJZZ1YyVmlSMHhEZFdKbFVtVnVaR1Z5VkdGeVoyVjBJR0Z6SUhSb2FYSmtJSEJoY21GdFpYUmxjaTRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5KbGJtUmxjbFJoY21kbGRDQTlJRzQ3Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ2RYUW9kV2tzSUdScExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCcExteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0JwTG5Wd0xuTmxkQ2d3TENBdE1Td2dNQ2tzSUdrdWJHOXZhMEYwS0c1bGR5Qk5LREVzSURBc0lEQXBLU3dnZEdocGN5NWhaR1FvYVNrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dkWFFvZFdrc0lHUnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQnlMbXhoZVdWeWN5QTlJSFJvYVhNdWJHRjVaWEp6TENCeUxuVndMbk5sZENnd0xDQXRNU3dnTUNrc0lISXViRzl2YTBGMEtHNWxkeUJOS0MweExDQXdMQ0F3S1Nrc0lIUm9hWE11WVdSa0tISXBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdibVYzSUhWMEtIVnBMQ0JrYVN3Z1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnYnk1c1lYbGxjbk1nUFNCMGFHbHpMbXhoZVdWeWN5d2dieTUxY0M1elpYUW9NQ3dnTUN3Z01Ta3NJRzh1Ykc5dmEwRjBLRzVsZHlCTktEQXNJREVzSURBcEtTd2dkR2hwY3k1aFpHUW9ieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1WlhjZ2RYUW9kV2tzSUdScExDQmxMQ0IwS1RzS0lDQWdJQ0FnSUNCaExteGhlV1Z5Y3lBOUlIUm9hWE11YkdGNVpYSnpMQ0JoTG5Wd0xuTmxkQ2d3TENBd0xDQXRNU2tzSUdFdWJHOXZhMEYwS0c1bGR5Qk5LREFzSUMweExDQXdLU2tzSUhSb2FYTXVZV1JrS0dFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2JtVjNJSFYwS0hWcExDQmthU3dnWlN3Z2RDazdDaUFnSUNBZ0lDQWdiQzVzWVhsbGNuTWdQU0IwYUdsekxteGhlV1Z5Y3l3Z2JDNTFjQzV6WlhRb01Dd2dMVEVzSURBcExDQnNMbXh2YjJ0QmRDaHVaWGNnVFNnd0xDQXdMQ0F4S1Nrc0lIUm9hWE11WVdSa0tHd3BPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdibVYzSUhWMEtIVnBMQ0JrYVN3Z1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnWXk1c1lYbGxjbk1nUFNCMGFHbHpMbXhoZVdWeWN5d2dZeTUxY0M1elpYUW9NQ3dnTFRFc0lEQXBMQ0JqTG14dmIydEJkQ2h1WlhjZ1RTZ3dMQ0F3TENBdE1Ta3BMQ0IwYUdsekxtRmtaQ2hqS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdZWEpsYm5RZ1BUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNncE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV5Wlc1a1pYSlVZWEpuWlhRc0lGdHBMQ0J5TENCdkxDQmhMQ0JzTENCalhTQTlJSFJvYVhNdVkyaHBiR1J5Wlc0c0lHZ2dQU0JsTG5oeUxtVnVZV0pzWldRc0lIVWdQU0JsTG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwT3dvZ0lDQWdJQ0FnSUdVdWVISXVaVzVoWW14bFpDQTlJQ0V4T3dvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnYmk1MFpYaDBkWEpsTG1kbGJtVnlZWFJsVFdsd2JXRndjenNLSUNBZ0lDQWdJQ0J1TG5SbGVIUjFjbVV1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnSVRFc0lHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtHNHNJREFwTENCbExuSmxibVJsY2loMExDQnBLU3dnWlM1elpYUlNaVzVrWlhKVVlYSm5aWFFvYml3Z01Ta3NJR1V1Y21WdVpHVnlLSFFzSUhJcExDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaHVMQ0F5S1N3Z1pTNXlaVzVrWlhJb2RDd2dieWtzSUdVdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0c0c0lETXBMQ0JsTG5KbGJtUmxjaWgwTENCaEtTd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9iaXdnTkNrc0lHVXVjbVZ1WkdWeUtIUXNJR3dwTENCdUxuUmxlSFIxY21VdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ1pDd2daUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9iaXdnTlNrc0lHVXVjbVZ1WkdWeUtIUXNJR01wTENCbExuTmxkRkpsYm1SbGNsUmhjbWRsZENoMUtTd2daUzU0Y2k1bGJtRmliR1ZrSUQwZ2FEc0tJQ0FnSUgwS2ZTd2dhMmtnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01zSUdncGV3b2dJQ0FnSUNBZ0lHVWdQU0JsSUNFOVBTQjJiMmxrSURBZ1B5QmxJRG9nVzEwc0lIUWdQU0IwSUNFOVBTQjJiMmxrSURBZ1B5QjBJRG9nUW1rN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeXdnYUNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVtYkdsd1dTQTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ1oyVjBJR2x0WVdkbGN5Z3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJXRm5aVHNLSUNBZ0lIMEtJQ0FnSUhObGRDQnBiV0ZuWlhNb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFXMWhaMlVnUFNCbE93b2dJQ0FnZlFwOU93cHJhUzV3Y205MGIzUjVjR1V1YVhORGRXSmxWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdhbk1nUFNCamJHRnpjeUJsZUhSbGJtUnpJRUYwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUU1MWJXSmxjaTVwYzBsdWRHVm5aWElvZENrZ0ppWWdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWME9pQmpiMjV6ZEhKMVkzUnZjaUJ6YVdkdVlYUjFjbVVnYVhNZ2JtOTNJRmRsWWtkTVEzVmlaVkpsYm1SbGNsUmhjbWRsZENnZ2MybDZaU3dnYjNCMGFXOXVjeUFwSWlrc0lIUWdQU0J1S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCbExDQjBLVHNLSUNBZ0lDQWdJQ0IwSUQwZ2RDQjhmQ0I3ZlN3Z2RHaHBjeTUwWlhoMGRYSmxJRDBnYm1WM0lHdHBLSFp2YVdRZ01Dd2dkQzV0WVhCd2FXNW5MQ0IwTG5keVlYQlRMQ0IwTG5keVlYQlVMQ0IwTG0xaFowWnBiSFJsY2l3Z2RDNXRhVzVHYVd4MFpYSXNJSFF1Wm05eWJXRjBMQ0IwTG5SNWNHVXNJSFF1WVc1cGMyOTBjbTl3ZVN3Z2RDNWxibU52WkdsdVp5a3NJSFJvYVhNdWRHVjRkSFZ5WlM1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQU0FoTUN3Z2RHaHBjeTUwWlhoMGRYSmxMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJSFF1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJQ0U5UFNCMmIybGtJREFnUHlCMExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBNklDRXhMQ0IwYUdsekxuUmxlSFIxY21VdWJXbHVSbWxzZEdWeUlEMGdkQzV0YVc1R2FXeDBaWElnSVQwOUlIWnZhV1FnTUNBL0lIUXViV2x1Um1sc2RHVnlJRG9nZEhRc0lIUm9hWE11ZEdWNGRIVnlaUzVmYm1WbFpITkdiR2x3Ulc1MlRXRndJRDBnSVRFN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UlhGMWFYSmxZM1JoYm1kMWJHRnlWR1Y0ZEhWeVpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwWlhoMGRYSmxMblI1Y0dVZ1BTQjBMblI1Y0dVc0lIUm9hWE11ZEdWNGRIVnlaUzVtYjNKdFlYUWdQU0JqZEN3Z2RHaHBjeTUwWlhoMGRYSmxMbVZ1WTI5a2FXNW5JRDBnZEM1bGJtTnZaR2x1Wnl3Z2RHaHBjeTUwWlhoMGRYSmxMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJSFF1WjJWdVpYSmhkR1ZOYVhCdFlYQnpMQ0IwYUdsekxuUmxlSFIxY21VdWJXbHVSbWxzZEdWeUlEMGdkQzV0YVc1R2FXeDBaWElzSUhSb2FYTXVkR1Y0ZEhWeVpTNXRZV2RHYVd4MFpYSWdQU0IwTG0xaFowWnBiSFJsY2pzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJGY1hWcGNtVmpkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1lBb0tDUWtKQ1haaGNubHBibWNnZG1Wak15QjJWMjl5YkdSRWFYSmxZM1JwYjI0N0Nnb0pDUWtKZG1Wak15QjBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9JR2x1SUhabFl6TWdaR2x5TENCcGJpQnRZWFEwSUcxaGRISnBlQ0FwSUhzS0Nna0pDUWtKY21WMGRYSnVJRzV2Y20xaGJHbDZaU2dnS0NCdFlYUnlhWGdnS2lCMlpXTTBLQ0JrYVhJc0lEQXVNQ0FwSUNrdWVIbDZJQ2s3Q2dvSkNRa0pmUW9LQ1FrSkNYWnZhV1FnYldGcGJpZ3BJSHNLQ2drSkNRa0pkbGR2Y214a1JHbHlaV04wYVc5dUlEMGdkSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0J3YjNOcGRHbHZiaXdnYlc5a1pXeE5ZWFJ5YVhnZ0tUc0tDZ2tKQ1FrSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1FrSkNRa2phVzVqYkhWa1pTQThjSEp2YW1WamRGOTJaWEowWlhnK0Nnb0pDUWtKZlFvSkNRbGdMQW9nSUNBZ0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nWUFvS0NRa0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSFJGY1hWcGNtVmpkRHNLQ2drSkNRbDJZWEo1YVc1bklIWmxZek1nZGxkdmNteGtSR2x5WldOMGFXOXVPd29LQ1FrSkNTTnBibU5zZFdSbElEeGpiMjF0YjI0K0Nnb0pDUWtKZG05cFpDQnRZV2x1S0NrZ2V3b0tDUWtKQ1FsMlpXTXpJR1JwY21WamRHbHZiaUE5SUc1dmNtMWhiR2w2WlNnZ2RsZHZjbXhrUkdseVpXTjBhVzl1SUNrN0Nnb0pDUWtKQ1habFl6SWdjMkZ0Y0d4bFZWWWdQU0JsY1hWcGNtVmpkRlYyS0NCa2FYSmxZM1JwYjI0Z0tUc0tDZ2tKQ1FrSloyeGZSbkpoWjBOdmJHOXlJRDBnZEdWNGRIVnlaVEpFS0NCMFJYRjFhWEpsWTNRc0lITmhiWEJzWlZWV0lDazdDZ29KQ1FrSmZRb0pDUWxnQ2lBZ0lDQWdJQ0FnZlN3Z2FTQTlJRzVsZHlCM2JpZzFMQ0ExTENBMUtTd2djaUE5SUc1bGR5QnpiaWg3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUNKRGRXSmxiV0Z3Um5KdmJVVnhkV2x5WldOMElpd0tJQ0FnSUNBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUZKcEtHNHVkVzVwWm05eWJYTXBMQW9nSUNBZ0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRzR1ZG1WeWRHVjRVMmhoWkdWeUxBb2dJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2diaTVtY21GbmJXVnVkRk5vWVdSbGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJsa1pUb2dhWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHSnNaVzVrYVc1bk9pQjJiZ29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhJdWRXNXBabTl5YlhNdWRFVnhkV2x5WldOMExuWmhiSFZsSUQwZ2REc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHNWxkeUJ6ZENocExDQnlLU3dnWVNBOUlIUXViV2x1Um1sc2RHVnlPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTFwYmtacGJIUmxjaUE5UFQwZ1ZXa2dKaVlnS0hRdWJXbHVSbWxzZEdWeUlEMGdkSFFwTENCdVpYY2dKSE1vTVN3Z01UQXNJSFJvYVhNcExuVndaR0YwWlNobExDQnZLU3dnZEM1dGFXNUdhV3gwWlhJZ1BTQmhMQ0J2TG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2J5NXRZWFJsY21saGJDNWthWE53YjNObEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiR1ZoY2lobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQmxMbWRsZEZKbGJtUmxjbFJoY21kbGRDZ3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUE5SURBN0lHOGdQQ0EyT3lCdkt5c3BaUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9kR2hwY3l3Z2J5a3NJR1V1WTJ4bFlYSW9kQ3dnYml3Z2FTazdDaUFnSUNBZ0lDQWdaUzV6WlhSU1pXNWtaWEpVWVhKblpYUW9jaWs3Q2lBZ0lDQjlDbjA3Q21wekxuQnliM1J2ZEhsd1pTNXBjMWRsWWtkTVEzVmlaVkpsYm1SbGNsUmhjbWRsZENBOUlDRXdPd3AyWVhJZ2EyOGdQU0J1WlhjZ1RTd2djR1lnUFNCdVpYY2dUU3dnYldZZ1BTQnVaWGNnYkhRc0lGZDBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUc1bGR5Qk5LREVzSURBc0lEQXBMQ0IwSUQwZ01DbDdDaUFnSUNBZ0lDQWdkR2hwY3k1dWIzSnRZV3dnUFNCbExDQjBhR2x6TG1OdmJuTjBZVzUwSUQwZ2REc0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzTG1OdmNIa29aU2tzSUhSb2FYTXVZMjl1YzNSaGJuUWdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXRjRzl1Wlc1MGN5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJtOXliV0ZzTG5ObGRDaGxMQ0IwTENCdUtTd2dkR2hwY3k1amIyNXpkR0Z1ZENBOUlHa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFRtOXliV0ZzUVc1a1EyOXdiR0Z1WVhKUWIybHVkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXVjM1JoYm5RZ1BTQXRkQzVrYjNRb2RHaHBjeTV1YjNKdFlXd3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJVTnZjR3hoYm1GeVVHOXBiblJ6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUd0dkxuTjFZbFpsWTNSdmNuTW9iaXdnZENrdVkzSnZjM01vY0dZdWMzVmlWbVZqZEc5eWN5aGxMQ0IwS1NrdWJtOXliV0ZzYVhwbEtDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzJWMFJuSnZiVTV2Y20xaGJFRnVaRU52Y0d4aGJtRnlVRzlwYm5Rb2FTd2daU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dWIzSnRZV3d1WTI5d2VTaGxMbTV2Y20xaGJDa3NJSFJvYVhNdVkyOXVjM1JoYm5RZ1BTQmxMbU52Ym5OMFlXNTBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdibTl5YldGc2FYcGxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnTVNBdklIUm9hWE11Ym05eWJXRnNMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG01dmNtMWhiQzV0ZFd4MGFYQnNlVk5qWVd4aGNpaGxLU3dnZEdocGN5NWpiMjV6ZEdGdWRDQXFQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYm1WbllYUmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZibk4wWVc1MElDbzlJQzB4TENCMGFHbHpMbTV2Y20xaGJDNXVaV2RoZEdVb0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjM1JoYm1ObFZHOVFiMmx1ZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Ym05eWJXRnNMbVJ2ZENobEtTQXJJSFJvYVhNdVkyOXVjM1JoYm5RN0NpQWdJQ0I5Q2lBZ0lDQmthWE4wWVc1alpWUnZVM0JvWlhKbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2FYTjBZVzVqWlZSdlVHOXBiblFvWlM1alpXNTBaWElwSUMwZ1pTNXlZV1JwZFhNN0NpQWdJQ0I5Q2lBZ0lDQndjbTlxWldOMFVHOXBiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbU52Y0hrb2RHaHBjeTV1YjNKdFlXd3BMbTExYkhScGNHeDVVMk5oYkdGeUtDMTBhR2x6TG1ScGMzUmhibU5sVkc5UWIybHVkQ2hsS1NrdVlXUmtLR1VwT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMFRHbHVaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbVJsYkhSaEtHdHZLU3dnYVNBOUlIUm9hWE11Ym05eWJXRnNMbVJ2ZENodUtUc0tJQ0FnSUNBZ0lDQnBaaUFvYVNBOVBUMGdNQ2tnY21WMGRYSnVJSFJvYVhNdVpHbHpkR0Z1WTJWVWIxQnZhVzUwS0dVdWMzUmhjblFwSUQwOVBTQXdJRDhnZEM1amIzQjVLR1V1YzNSaGNuUXBJRG9nYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlDMG9aUzV6ZEdGeWRDNWtiM1FvZEdocGN5NXViM0p0WVd3cElDc2dkR2hwY3k1amIyNXpkR0Z1ZENrZ0x5QnBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlJRHdnTUNCOGZDQnlJRDRnTVNBL0lHNTFiR3dnT2lCMExtTnZjSGtvYmlrdWJYVnNkR2x3YkhsVFkyRnNZWElvY2lrdVlXUmtLR1V1YzNSaGNuUXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wYzB4cGJtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWthWE4wWVc1alpWUnZVRzlwYm5Rb1pTNXpkR0Z5ZENrc0lHNGdQU0IwYUdsekxtUnBjM1JoYm1ObFZHOVFiMmx1ZENobExtVnVaQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnUENBd0lDWW1JRzRnUGlBd0lIeDhJRzRnUENBd0lDWW1JSFFnUGlBd093b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBjMEp2ZUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVhVzUwWlhKelpXTjBjMUJzWVc1bEtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp6WldOMGMxTndhR1Z5WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVhVzUwWlhKelpXTjBjMUJzWVc1bEtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1kyOXdiR0Z1WVhKUWIybHVkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVkyOXdlU2gwYUdsekxtNXZjbTFoYkNrdWJYVnNkR2x3YkhsVFkyRnNZWElvTFhSb2FYTXVZMjl1YzNSaGJuUXBPd29nSUNBZ2ZRb2dJQ0FnWVhCd2JIbE5ZWFJ5YVhnMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRZ2ZId2diV1l1WjJWMFRtOXliV0ZzVFdGMGNtbDRLR1VwTENCcElEMGdkR2hwY3k1amIzQnNZVzVoY2xCdmFXNTBLR3R2S1M1aGNIQnNlVTFoZEhKcGVEUW9aU2tzSUhJZ1BTQjBhR2x6TG01dmNtMWhiQzVoY0hCc2VVMWhkSEpwZURNb2Jpa3VibTl5YldGc2FYcGxLQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyOXVjM1JoYm5RZ1BTQXRhUzVrYjNRb2Npa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBjbUZ1YzJ4aGRHVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnZibk4wWVc1MElDMDlJR1V1Wkc5MEtIUm9hWE11Ym05eWJXRnNLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1Z4ZFdGc2N5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1Ym05eWJXRnNMbVZ4ZFdGc2N5aDBhR2x6TG01dmNtMWhiQ2tnSmlZZ1pTNWpiMjV6ZEdGdWRDQTlQVDBnZEdocGN5NWpiMjV6ZEdGdWREc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q24wN0NsZDBMbkJ5YjNSdmRIbHdaUzVwYzFCc1lXNWxJRDBnSVRBN0NuWmhjaUJtYVNBOUlHNWxkeUJCYml3Z1lYTWdQU0J1WlhjZ1RTd2dSSElnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmQwTENCMElEMGdibVYzSUZkMExDQnVJRDBnYm1WM0lGZDBMQ0JwSUQwZ2JtVjNJRmQwTENCeUlEMGdibVYzSUZkMExDQnZJRDBnYm1WM0lGZDBLWHNLSUNBZ0lDQWdJQ0IwYUdsekxuQnNZVzVsY3lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnWlN3S0lDQWdJQ0FnSUNBZ0lDQWdkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVN3S0lDQWdJQ0FnSUNBZ0lDQWdjaXdLSUNBZ0lDQWdJQ0FnSUNBZ2J3b2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ2RHaHBjeTV3YkdGdVpYTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRmJNRjB1WTI5d2VTaGxLU3dnWVZzeFhTNWpiM0I1S0hRcExDQmhXekpkTG1OdmNIa29iaWtzSUdGYk0xMHVZMjl3ZVNocEtTd2dZVnMwWFM1amIzQjVLSElwTENCaFd6VmRMbU52Y0hrb2J5a3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11Y0d4aGJtVnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQQ0EyT3lCdUt5c3BkRnR1WFM1amIzQjVLR1V1Y0d4aGJtVnpXMjVkS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVFjbTlxWldOMGFXOXVUV0YwY21sNEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWNHeGhibVZ6TENCdUlEMGdaUzVsYkdWdFpXNTBjeXdnYVNBOUlHNWJNRjBzSUhJZ1BTQnVXekZkTENCdklEMGdibHN5WFN3Z1lTQTlJRzViTTEwc0lHd2dQU0J1V3pSZExDQmpJRDBnYmxzMVhTd2dhQ0E5SUc1Yk5sMHNJSFVnUFNCdVd6ZGRMQ0JrSUQwZ2JsczRYU3dnWmlBOUlHNWJPVjBzSUcwZ1BTQnVXekV3WFN3Z2VDQTlJRzViTVRGZExDQjJJRDBnYmxzeE1sMHNJR2NnUFNCdVd6RXpYU3dnY0NBOUlHNWJNVFJkTENCZklEMGdibHN4TlYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYk1GMHVjMlYwUTI5dGNHOXVaVzUwY3loaElDMGdhU3dnZFNBdElHd3NJSGdnTFNCa0xDQmZJQzBnZGlrdWJtOXliV0ZzYVhwbEtDa3NJSFJiTVYwdWMyVjBRMjl0Y0c5dVpXNTBjeWhoSUNzZ2FTd2dkU0FySUd3c0lIZ2dLeUJrTENCZklDc2dkaWt1Ym05eWJXRnNhWHBsS0Nrc0lIUmJNbDB1YzJWMFEyOXRjRzl1Wlc1MGN5aGhJQ3NnY2l3Z2RTQXJJR01zSUhnZ0t5Qm1MQ0JmSUNzZ1p5a3VibTl5YldGc2FYcGxLQ2tzSUhSYk0xMHVjMlYwUTI5dGNHOXVaVzUwY3loaElDMGdjaXdnZFNBdElHTXNJSGdnTFNCbUxDQmZJQzBnWnlrdWJtOXliV0ZzYVhwbEtDa3NJSFJiTkYwdWMyVjBRMjl0Y0c5dVpXNTBjeWhoSUMwZ2J5d2dkU0F0SUdnc0lIZ2dMU0J0TENCZklDMGdjQ2t1Ym05eWJXRnNhWHBsS0Nrc0lIUmJOVjB1YzJWMFEyOXRjRzl1Wlc1MGN5aGhJQ3NnYnl3Z2RTQXJJR2dzSUhnZ0t5QnRMQ0JmSUNzZ2NDa3VibTl5YldGc2FYcGxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JwYm5SbGNuTmxZM1J6VDJKcVpXTjBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVoyVnZiV1YwY25rN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhRdVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ2RDNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1N3Z1pta3VZMjl3ZVNoMExtSnZkVzVrYVc1blUzQm9aWEpsS1M1aGNIQnNlVTFoZEhKcGVEUW9aUzV0WVhSeWFYaFhiM0pzWkNrc0lIUm9hWE11YVc1MFpYSnpaV04wYzFOd2FHVnlaU2htYVNrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25ObFkzUnpVM0J5YVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabWt1WTJWdWRHVnlMbk5sZENnd0xDQXdMQ0F3S1N3Z1pta3VjbUZrYVhWeklEMGdMamN3TnpFd05qYzRNVEU0TmpVME56WXNJR1pwTG1Gd2NHeDVUV0YwY21sNE5DaGxMbTFoZEhKcGVGZHZjbXhrS1N3Z2RHaHBjeTVwYm5SbGNuTmxZM1J6VTNCb1pYSmxLR1pwS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5YzJWamRITlRjR2hsY21Vb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1d2JHRnVaWE1zSUc0Z1BTQmxMbU5sYm5SbGNpd2dhU0E5SUMxbExuSmhaR2wxY3pzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhJZ1BTQXdPeUJ5SUR3Z05qc2djaXNyS1dsbUlDaDBXM0pkTG1ScGMzUmhibU5sVkc5UWIybHVkQ2h1S1NBOElHa3BJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjR3hoYm1Wek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BDQTJPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJiYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaGN5NTRJRDBnYVM1dWIzSnRZV3d1ZUNBK0lEQWdQeUJsTG0xaGVDNTRJRG9nWlM1dGFXNHVlQ3dnWVhNdWVTQTlJR2t1Ym05eWJXRnNMbmtnUGlBd0lEOGdaUzV0WVhndWVTQTZJR1V1YldsdUxua3NJR0Z6TG5vZ1BTQnBMbTV2Y20xaGJDNTZJRDRnTUNBL0lHVXViV0Y0TG5vZ09pQmxMbTFwYmk1NkxDQnBMbVJwYzNSaGJtTmxWRzlRYjJsdWRDaGhjeWtnUENBd0tTQnlaWFIxY200Z0lURTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQWhNRHNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NXdiR0Z1WlhNN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElEWTdJRzRyS3lscFppQW9kRnR1WFM1a2FYTjBZVzVqWlZSdlVHOXBiblFvWlNrZ1BDQXdLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnY21nb0tTQjdDaUFnSUNCc1pYUWdjeUE5SUc1MWJHd3NJR1VnUFNBaE1Td2dkQ0E5SUc1MWJHd3NJRzRnUFNCdWRXeHNPd29nSUNBZ1puVnVZM1JwYjI0Z2FTaHlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2RDaHlMQ0J2S1N3Z2JpQTlJSE11Y21WeGRXVnpkRUZ1YVcxaGRHbHZia1p5WVcxbEtHa3BPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0J6ZEdGeWREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVWdJVDA5SUNFd0lDWW1JSFFnSVQwOUlHNTFiR3dnSmlZZ0tHNGdQU0J6TG5KbGNYVmxjM1JCYm1sdFlYUnBiMjVHY21GdFpTaHBLU3dnWlNBOUlDRXdLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhOMGIzQTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpMbU5oYm1ObGJFRnVhVzFoZEdsdmJrWnlZVzFsS0c0cExDQmxJRDBnSVRFN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFJCYm1sdFlYUnBiMjVNYjI5d09pQm1kVzVqZEdsdmJpaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0J5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBRMjl1ZEdWNGREb2dablZ1WTNScGIyNG9jaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpJRDBnY2pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlHZG1LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnWlM1cGMxZGxZa2RNTWl3Z2JpQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdablZ1WTNScGIyNGdhU2hqTENCb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUhVZ1BTQmpMbUZ5Y21GNUxDQmtJRDBnWXk1MWMyRm5aU3dnWmlBOUlITXVZM0psWVhSbFFuVm1abVZ5S0NrN0NpQWdJQ0FnSUNBZ2N5NWlhVzVrUW5WbVptVnlLR2dzSUdZcExDQnpMbUoxWm1abGNrUmhkR0VvYUN3Z2RTd2daQ2tzSUdNdWIyNVZjR3h2WVdSRFlXeHNZbUZqYXlncE93b2dJQ0FnSUNBZ0lHeGxkQ0J0SUQwZ05URXlOanNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkU0JwYm5OMFlXNWpaVzltSUVac2IyRjBNekpCY25KaGVTQS9JRzBnUFNBMU1USTJJRG9nZFNCcGJuTjBZVzVqWlc5bUlFWnNiMkYwTmpSQmNuSmhlU0EvSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhCZEhSeWFXSjFkR1Z6T2lCVmJuTjFjSEJ2Y25SbFpDQmtZWFJoSUdKMVptWmxjaUJtYjNKdFlYUTZJRVpzYjJGME5qUkJjbkpoZVM0aUtTQTZJSFVnYVc1emRHRnVZMlZ2WmlCVmFXNTBNVFpCY25KaGVTQS9JR011YVhOR2JHOWhkREUyUW5WbVptVnlRWFIwY21saWRYUmxJRDhnZENBL0lHMGdQU0ExTVRNeElEb2dZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRFRjBkSEpwWW5WMFpYTTZJRlZ6WVdkbElHOW1JRVpzYjJGME1UWkNkV1ptWlhKQmRIUnlhV0oxZEdVZ2NtVnhkV2x5WlhNZ1YyVmlSMHd5TGlJcElEb2diU0E5SURVeE1qTWdPaUIxSUdsdWMzUmhibU5sYjJZZ1NXNTBNVFpCY25KaGVTQS9JRzBnUFNBMU1USXlJRG9nZFNCcGJuTjBZVzVqWlc5bUlGVnBiblF6TWtGeWNtRjVJRDhnYlNBOUlEVXhNalVnT2lCMUlHbHVjM1JoYm1ObGIyWWdTVzUwTXpKQmNuSmhlU0EvSUcwZ1BTQTFNVEkwSURvZ2RTQnBibk4wWVc1alpXOW1JRWx1ZERoQmNuSmhlU0EvSUcwZ1BTQTFNVEl3SURvZ0tIVWdhVzV6ZEdGdVkyVnZaaUJWYVc1ME9FRnljbUY1SUh4OElIVWdhVzV6ZEdGdVkyVnZaaUJWYVc1ME9FTnNZVzF3WldSQmNuSmhlU2tnSmlZZ0tHMGdQU0ExTVRJeEtTd2dld29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEk2SUdZc0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklHMHNDaUFnSUNBZ0lDQWdJQ0FnSUdKNWRHVnpVR1Z5Uld4bGJXVnVkRG9nZFM1Q1dWUkZVMTlRUlZKZlJVeEZUVVZPVkN3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dZeTUyWlhKemFXOXVDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhJb1l5d2dhQ3dnZFNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2FDNWhjbkpoZVN3Z1ppQTlJR2d1ZFhCa1lYUmxVbUZ1WjJVN0NpQWdJQ0FnSUNBZ2N5NWlhVzVrUW5WbVptVnlLSFVzSUdNcExDQm1MbU52ZFc1MElEMDlQU0F0TVNBL0lITXVZblZtWm1WeVUzVmlSR0YwWVNoMUxDQXdMQ0JrS1NBNklDaDBJRDhnY3k1aWRXWm1aWEpUZFdKRVlYUmhLSFVzSUdZdWIyWm1jMlYwSUNvZ1pDNUNXVlJGVTE5UVJWSmZSVXhGVFVWT1ZDd2daQ3dnWmk1dlptWnpaWFFzSUdZdVkyOTFiblFwSURvZ2N5NWlkV1ptWlhKVGRXSkVZWFJoS0hVc0lHWXViMlptYzJWMElDb2daQzVDV1ZSRlUxOVFSVkpmUlV4RlRVVk9WQ3dnWkM1emRXSmhjbkpoZVNobUxtOW1abk5sZEN3Z1ppNXZabVp6WlhRZ0t5Qm1MbU52ZFc1MEtTa3NJR1l1WTI5MWJuUWdQU0F0TVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnZLR01wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWXk1cGMwbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbElDWW1JQ2hqSUQwZ1l5NWtZWFJoS1N3Z2JpNW5aWFFvWXlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhLR01wSUhzS0lDQWdJQ0FnSUNCakxtbHpTVzUwWlhKc1pXRjJaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVWdKaVlnS0dNZ1BTQmpMbVJoZEdFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2JpNW5aWFFvWXlrN0NpQWdJQ0FnSUNBZ2FDQW1KaUFvY3k1a1pXeGxkR1ZDZFdabVpYSW9hQzVpZFdabVpYSXBMQ0J1TG1SbGJHVjBaU2hqS1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLR01zSUdncElIc0tJQ0FnSUNBZ0lDQnBaaUFvWXk1cGMwZE1RblZtWm1WeVFYUjBjbWxpZFhSbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnYmk1blpYUW9ZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDZ2haQ0I4ZkNCa0xuWmxjbk5wYjI0Z1BDQmpMblpsY25OcGIyNHBJQ1ltSUc0dWMyVjBLR01zSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjam9nWXk1aWRXWm1aWElzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQmpMblI1Y0dVc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWVYUmxjMUJsY2tWc1pXMWxiblE2SUdNdVpXeGxiV1Z1ZEZOcGVtVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJaWEp6YVc5dU9pQmpMblpsY25OcGIyNEtJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZeTVwYzBsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsSUNZbUlDaGpJRDBnWXk1a1lYUmhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RTQTlJRzR1WjJWMEtHTXBPd29nSUNBZ0lDQWdJSFVnUFQwOUlIWnZhV1FnTUNBL0lHNHVjMlYwS0dNc0lHa29ZeXdnYUNrcElEb2dkUzUyWlhKemFXOXVJRHdnWXk1MlpYSnphVzl1SUNZbUlDaHlLSFV1WW5WbVptVnlMQ0JqTENCb0tTd2dkUzUyWlhKemFXOXVJRDBnWXk1MlpYSnphVzl1S1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJ2TEFvZ0lDQWdJQ0FnSUhKbGJXOTJaVG9nWVN3S0lDQWdJQ0FnSUNCMWNHUmhkR1U2SUd3S0lDQWdJSDA3Q24wS2RtRnlJRkJwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU3dnZENBOUlERXNJRzRnUFNBeExDQnBJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVR3hoYm1WSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHaFRaV2R0Wlc1MGN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwVTJWbmJXVnVkSE02SUdrS0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1pTQXZJRElzSUc4Z1BTQjBJQzhnTWl3Z1lTQTlJRTFoZEdndVpteHZiM0lvYmlrc0lHd2dQU0JOWVhSb0xtWnNiMjl5S0drcExDQmpJRDBnWVNBcklERXNJR2dnUFNCc0lDc2dNU3dnZFNBOUlHVWdMeUJoTENCa0lEMGdkQ0F2SUd3c0lHWWdQU0JiWFN3Z2JTQTlJRnRkTENCNElEMGdXMTBzSUhZZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2NnUFNBd095Qm5JRHdnYURzZ1p5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCbklDb2daQ0F0SUc4N0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYeUE5SURBN0lGOGdQQ0JqT3lCZkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQmZJQ29nZFNBdElISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRMbkIxYzJnb2VTd2dMWEFzSURBcExDQjRMbkIxYzJnb01Dd2dNQ3dnTVNrc0lIWXVjSFZ6YUNoZklDOGdZU2tzSUhZdWNIVnphQ2d4SUMwZ1p5QXZJR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaekVnUFNBd095Qm5NU0E4SUd3N0lHY3hLeXNwWm05eUtHeGxkQ0J3TVNBOUlEQTdJSEF4SUR3Z1lUc2djREVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZk1TQTlJSEF4SUNzZ1l5QXFJR2N4TENCNU1TQTlJSEF4SUNzZ1l5QXFJQ2huTVNBcklERXBMQ0JpSUQwZ2NERWdLeUF4SUNzZ1l5QXFJQ2huTVNBcklERXBMQ0JCSUQwZ2NERWdLeUF4SUNzZ1l5QXFJR2N4T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1MbkIxYzJnb1h6RXNJSGt4TENCQktTd2daaTV3ZFhOb0tIa3hMQ0JpTENCQktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkpibVJsZUNobUtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLRzBzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaDRMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2gyTENBeUtTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VHa29aUzUzYVdSMGFDd2daUzVvWldsbmFIUXNJR1V1ZDJsa2RHaFRaV2R0Wlc1MGN5d2daUzVvWldsbmFIUlRaV2R0Wlc1MGN5azdDaUFnSUNCOUNuMHNJSGhtSUQwZ1lDTnBabVJsWmlCVlUwVmZRVXhRU0VGTlFWQUtDV1JwWm1aMWMyVkRiMnh2Y2k1aElDbzlJSFJsZUhSMWNtVXlSQ2dnWVd4d2FHRk5ZWEFzSUhaVmRpQXBMbWM3Q2lObGJtUnBabUFzSUhsbUlEMGdZQ05wWm1SbFppQlZVMFZmUVV4UVNFRk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdGc2NHaGhUV0Z3T3dvalpXNWthV1pnTENCMlppQTlJR0FqYVdaa1pXWWdWVk5GWDBGTVVFaEJWRVZUVkFvSmFXWWdLQ0JrYVdabWRYTmxRMjlzYjNJdVlTQThJR0ZzY0doaFZHVnpkQ0FwSUdScGMyTmhjbVE3Q2lObGJtUnBabUFzSUY5bUlEMGdZQ05wWm1SbFppQlZVMFZmUVV4UVNFRlVSVk5VQ2dsMWJtbG1iM0p0SUdac2IyRjBJR0ZzY0doaFZHVnpkRHNLSTJWdVpHbG1ZQ3dnVFdZZ1BTQmdJMmxtWkdWbUlGVlRSVjlCVDAxQlVBb0pabXh2WVhRZ1lXMWlhV1Z1ZEU5alkyeDFjMmx2YmlBOUlDZ2dkR1Y0ZEhWeVpUSkVLQ0JoYjAxaGNDd2dkbFYyTWlBcExuSWdMU0F4TGpBZ0tTQXFJR0Z2VFdGd1NXNTBaVzV6YVhSNUlDc2dNUzR3T3dvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ285SUdGdFltbGxiblJQWTJOc2RYTnBiMjQ3Q2dramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBWT1ZrMUJVQ0FwSUNZbUlHUmxabWx1WldRb0lGTlVRVTVFUVZKRUlDa0tDUWxtYkc5aGRDQmtiM1JPVmlBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUdkbGIyMWxkSEo1TG01dmNtMWhiQ3dnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaUFwSUNrN0Nna0pjbVZtYkdWamRHVmtUR2xuYUhRdWFXNWthWEpsWTNSVGNHVmpkV3hoY2lBcVBTQmpiMjF3ZFhSbFUzQmxZM1ZzWVhKUFkyTnNkWE5wYjI0b0lHUnZkRTVXTENCaGJXSnBaVzUwVDJOamJIVnphVzl1TENCdFlYUmxjbWxoYkM1eWIzVm5hRzVsYzNNZ0tUc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQmlaaUE5SUdBamFXWmtaV1lnVlZORlgwRlBUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCaGIwMWhjRHNLQ1hWdWFXWnZjbTBnWm14dllYUWdZVzlOWVhCSmJuUmxibk5wZEhrN0NpTmxibVJwWm1Bc0lIZG1JRDBnSW5abFl6TWdkSEpoYm5ObWIzSnRaV1FnUFNCMlpXTXpLQ0J3YjNOcGRHbHZiaUFwT3lJc0lGTm1JRDBnWUhabFl6TWdiMkpxWldOMFRtOXliV0ZzSUQwZ2RtVmpNeWdnYm05eWJXRnNJQ2s3Q2lOcFptUmxaaUJWVTBWZlZFRk9SMFZPVkFvSmRtVmpNeUJ2WW1wbFkzUlVZVzVuWlc1MElEMGdkbVZqTXlnZ2RHRnVaMlZ1ZEM1NGVYb2dLVHNLSTJWdVpHbG1ZQ3dnVkdZZ1BTQmdkbVZqTXlCQ1VrUkdYMHhoYldKbGNuUW9JR052Ym5OMElHbHVJSFpsWXpNZ1pHbG1ablZ6WlVOdmJHOXlJQ2tnZXdvSmNtVjBkWEp1SUZKRlEwbFFVazlEUVV4ZlVFa2dLaUJrYVdabWRYTmxRMjlzYjNJN0NuMEtkbVZqTXlCR1gxTmphR3hwWTJzb0lHTnZibk4wSUdsdUlIWmxZek1nWmpBc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdZNU1Dd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1pHOTBWa2dnS1NCN0NnbG1iRzloZENCbWNtVnpibVZzSUQwZ1pYaHdNaWdnS0NBdElEVXVOVFUwTnpNZ0tpQmtiM1JXU0NBdElEWXVPVGd6TVRZZ0tTQXFJR1J2ZEZaSUlDazdDZ2x5WlhSMWNtNGdaakFnS2lBb0lERXVNQ0F0SUdaeVpYTnVaV3dnS1NBcklDZ2daamt3SUNvZ1puSmxjMjVsYkNBcE93cDlDbVpzYjJGMElGWmZSMGRZWDFOdGFYUm9RMjl5Y21Wc1lYUmxaQ2dnWTI5dWMzUWdhVzRnWm14dllYUWdZV3h3YUdFc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdSdmRFNU1MQ0JqYjI1emRDQnBiaUJtYkc5aGRDQmtiM1JPVmlBcElIc0tDV1pzYjJGMElHRXlJRDBnY0c5M01pZ2dZV3h3YUdFZ0tUc0tDV1pzYjJGMElHZDJJRDBnWkc5MFRrd2dLaUJ6Y1hKMEtDQmhNaUFySUNnZ01TNHdJQzBnWVRJZ0tTQXFJSEJ2ZHpJb0lHUnZkRTVXSUNrZ0tUc0tDV1pzYjJGMElHZHNJRDBnWkc5MFRsWWdLaUJ6Y1hKMEtDQmhNaUFySUNnZ01TNHdJQzBnWVRJZ0tTQXFJSEJ2ZHpJb0lHUnZkRTVNSUNrZ0tUc0tDWEpsZEhWeWJpQXdMalVnTHlCdFlYZ29JR2QySUNzZ1oyd3NJRVZRVTBsTVQwNGdLVHNLZlFwbWJHOWhkQ0JFWDBkSFdDZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1lXeHdhR0VzSUdOdmJuTjBJR2x1SUdac2IyRjBJR1J2ZEU1SUlDa2dld29KWm14dllYUWdZVElnUFNCd2IzY3lLQ0JoYkhCb1lTQXBPd29KWm14dllYUWdaR1Z1YjIwZ1BTQndiM2N5S0NCa2IzUk9TQ0FwSUNvZ0tDQmhNaUF0SURFdU1DQXBJQ3NnTVM0d093b0pjbVYwZFhKdUlGSkZRMGxRVWs5RFFVeGZVRWtnS2lCaE1pQXZJSEJ2ZHpJb0lHUmxibTl0SUNrN0NuMEtkbVZqTXlCQ1VrUkdYMGRIV0NnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJzYVdkb2RFUnBjaXdnWTI5dWMzUWdhVzRnZG1Wak15QjJhV1YzUkdseUxDQmpiMjV6ZENCcGJpQjJaV016SUc1dmNtMWhiQ3dnWTI5dWMzUWdhVzRnZG1Wak15Qm1NQ3dnWTI5dWMzUWdhVzRnWm14dllYUWdaamt3TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J5YjNWbmFHNWxjM01nS1NCN0NnbG1iRzloZENCaGJIQm9ZU0E5SUhCdmR6SW9JSEp2ZFdkb2JtVnpjeUFwT3dvSmRtVmpNeUJvWVd4bVJHbHlJRDBnYm05eWJXRnNhWHBsS0NCc2FXZG9kRVJwY2lBcklIWnBaWGRFYVhJZ0tUc0tDV1pzYjJGMElHUnZkRTVNSUQwZ2MyRjBkWEpoZEdVb0lHUnZkQ2dnYm05eWJXRnNMQ0JzYVdkb2RFUnBjaUFwSUNrN0NnbG1iRzloZENCa2IzUk9WaUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2dkbWxsZDBScGNpQXBJQ2s3Q2dsbWJHOWhkQ0JrYjNST1NDQTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHNXZjbTFoYkN3Z2FHRnNaa1JwY2lBcElDazdDZ2xtYkc5aGRDQmtiM1JXU0NBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUhacFpYZEVhWElzSUdoaGJHWkVhWElnS1NBcE93b0pkbVZqTXlCR0lEMGdSbDlUWTJoc2FXTnJLQ0JtTUN3Z1pqa3dMQ0JrYjNSV1NDQXBPd29KWm14dllYUWdWaUE5SUZaZlIwZFlYMU50YVhSb1EyOXljbVZzWVhSbFpDZ2dZV3h3YUdFc0lHUnZkRTVNTENCa2IzUk9WaUFwT3dvSlpteHZZWFFnUkNBOUlFUmZSMGRZS0NCaGJIQm9ZU3dnWkc5MFRrZ2dLVHNLQ1hKbGRIVnliaUJHSUNvZ0tDQldJQ29nUkNBcE93cDlDblpsWXpJZ1RGUkRYMVYyS0NCamIyNXpkQ0JwYmlCMlpXTXpJRTRzSUdOdmJuTjBJR2x1SUhabFl6TWdWaXdnWTI5dWMzUWdhVzRnWm14dllYUWdjbTkxWjJodVpYTnpJQ2tnZXdvSlkyOXVjM1FnWm14dllYUWdURlZVWDFOSldrVWdQU0EyTkM0d093b0pZMjl1YzNRZ1pteHZZWFFnVEZWVVgxTkRRVXhGSUQwZ0tDQk1WVlJmVTBsYVJTQXRJREV1TUNBcElDOGdURlZVWDFOSldrVTdDZ2xqYjI1emRDQm1iRzloZENCTVZWUmZRa2xCVXlBOUlEQXVOU0F2SUV4VlZGOVRTVnBGT3dvSlpteHZZWFFnWkc5MFRsWWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQk9MQ0JXSUNrZ0tUc0tDWFpsWXpJZ2RYWWdQU0IyWldNeUtDQnliM1ZuYUc1bGMzTXNJSE54Y25Rb0lERXVNQ0F0SUdSdmRFNVdJQ2tnS1RzS0NYVjJJRDBnZFhZZ0tpQk1WVlJmVTBOQlRFVWdLeUJNVlZSZlFrbEJVenNLQ1hKbGRIVnliaUIxZGpzS2ZRcG1iRzloZENCTVZFTmZRMnhwY0hCbFpGTndhR1Z5WlVadmNtMUdZV04wYjNJb0lHTnZibk4wSUdsdUlIWmxZek1nWmlBcElIc0tDV1pzYjJGMElHd2dQU0JzWlc1bmRHZ29JR1lnS1RzS0NYSmxkSFZ5YmlCdFlYZ29JQ2dnYkNBcUlHd2dLeUJtTG5vZ0tTQXZJQ2dnYkNBcklERXVNQ0FwTENBd0xqQWdLVHNLZlFwMlpXTXpJRXhVUTE5RlpHZGxWbVZqZEc5eVJtOXliVVpoWTNSdmNpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCMk1Td2dZMjl1YzNRZ2FXNGdkbVZqTXlCMk1pQXBJSHNLQ1dac2IyRjBJSGdnUFNCa2IzUW9JSFl4TENCMk1pQXBPd29KWm14dllYUWdlU0E5SUdGaWN5Z2dlQ0FwT3dvSlpteHZZWFFnWVNBOUlEQXVPRFUwTXprNE5TQXJJQ2dnTUM0ME9UWTFNVFUxSUNzZ01DNHdNVFExTWpBMklDb2dlU0FwSUNvZ2VUc0tDV1pzYjJGMElHSWdQU0F6TGpReE56VTVOREFnS3lBb0lEUXVNVFl4TmpjeU5DQXJJSGtnS1NBcUlIazdDZ2xtYkc5aGRDQjJJRDBnWVNBdklHSTdDZ2xtYkc5aGRDQjBhR1YwWVY5emFXNTBhR1YwWVNBOUlDZ2dlQ0ErSURBdU1DQXBJRDhnZGlBNklEQXVOU0FxSUdsdWRtVnljMlZ6Y1hKMEtDQnRZWGdvSURFdU1DQXRJSGdnS2lCNExDQXhaUzAzSUNrZ0tTQXRJSFk3Q2dseVpYUjFjbTRnWTNKdmMzTW9JSFl4TENCMk1pQXBJQ29nZEdobGRHRmZjMmx1ZEdobGRHRTdDbjBLZG1Wak15Qk1WRU5mUlhaaGJIVmhkR1VvSUdOdmJuTjBJR2x1SUhabFl6TWdUaXdnWTI5dWMzUWdhVzRnZG1Wak15QldMQ0JqYjI1emRDQnBiaUIyWldNeklGQXNJR052Ym5OMElHbHVJRzFoZERNZ2JVbHVkaXdnWTI5dWMzUWdhVzRnZG1Wak15QnlaV04wUTI5dmNtUnpXeUEwSUYwZ0tTQjdDZ2wyWldNeklIWXhJRDBnY21WamRFTnZiM0prYzFzZ01TQmRJQzBnY21WamRFTnZiM0prYzFzZ01DQmRPd29KZG1Wak15QjJNaUE5SUhKbFkzUkRiMjl5WkhOYklETWdYU0F0SUhKbFkzUkRiMjl5WkhOYklEQWdYVHNLQ1habFl6TWdiR2xuYUhST2IzSnRZV3dnUFNCamNtOXpjeWdnZGpFc0lIWXlJQ2s3Q2dscFppZ2daRzkwS0NCc2FXZG9kRTV2Y20xaGJDd2dVQ0F0SUhKbFkzUkRiMjl5WkhOYklEQWdYU0FwSUR3Z01DNHdJQ2tnY21WMGRYSnVJSFpsWXpNb0lEQXVNQ0FwT3dvSmRtVmpNeUJVTVN3Z1ZESTdDZ2xVTVNBOUlHNXZjbTFoYkdsNlpTZ2dWaUF0SUU0Z0tpQmtiM1FvSUZZc0lFNGdLU0FwT3dvSlZESWdQU0F0SUdOeWIzTnpLQ0JPTENCVU1TQXBPd29KYldGME15QnRZWFFnUFNCdFNXNTJJQ29nZEhKaGJuTndiM05sVFdGME15Z2diV0YwTXlnZ1ZERXNJRlF5TENCT0lDa2dLVHNLQ1habFl6TWdZMjl2Y21Seld5QTBJRjA3Q2dsamIyOXlaSE5iSURBZ1hTQTlJRzFoZENBcUlDZ2djbVZqZEVOdmIzSmtjMXNnTUNCZElDMGdVQ0FwT3dvSlkyOXZjbVJ6V3lBeElGMGdQU0J0WVhRZ0tpQW9JSEpsWTNSRGIyOXlaSE5iSURFZ1hTQXRJRkFnS1RzS0NXTnZiM0prYzFzZ01pQmRJRDBnYldGMElDb2dLQ0J5WldOMFEyOXZjbVJ6V3lBeUlGMGdMU0JRSUNrN0NnbGpiMjl5WkhOYklETWdYU0E5SUcxaGRDQXFJQ2dnY21WamRFTnZiM0prYzFzZ015QmRJQzBnVUNBcE93b0pZMjl2Y21Seld5QXdJRjBnUFNCdWIzSnRZV3hwZW1Vb0lHTnZiM0prYzFzZ01DQmRJQ2s3Q2dsamIyOXlaSE5iSURFZ1hTQTlJRzV2Y20xaGJHbDZaU2dnWTI5dmNtUnpXeUF4SUYwZ0tUc0tDV052YjNKa2Mxc2dNaUJkSUQwZ2JtOXliV0ZzYVhwbEtDQmpiMjl5WkhOYklESWdYU0FwT3dvSlkyOXZjbVJ6V3lBeklGMGdQU0J1YjNKdFlXeHBlbVVvSUdOdmIzSmtjMXNnTXlCZElDazdDZ2wyWldNeklIWmxZM1J2Y2tadmNtMUdZV04wYjNJZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFkzUnZja1p2Y20xR1lXTjBiM0lnS3owZ1RGUkRYMFZrWjJWV1pXTjBiM0pHYjNKdFJtRmpkRzl5S0NCamIyOXlaSE5iSURBZ1hTd2dZMjl2Y21Seld5QXhJRjBnS1RzS0NYWmxZM1J2Y2tadmNtMUdZV04wYjNJZ0t6MGdURlJEWDBWa1oyVldaV04wYjNKR2IzSnRSbUZqZEc5eUtDQmpiMjl5WkhOYklERWdYU3dnWTI5dmNtUnpXeUF5SUYwZ0tUc0tDWFpsWTNSdmNrWnZjbTFHWVdOMGIzSWdLejBnVEZSRFgwVmtaMlZXWldOMGIzSkdiM0p0Um1GamRHOXlLQ0JqYjI5eVpITmJJRElnWFN3Z1kyOXZjbVJ6V3lBeklGMGdLVHNLQ1habFkzUnZja1p2Y20xR1lXTjBiM0lnS3owZ1RGUkRYMFZrWjJWV1pXTjBiM0pHYjNKdFJtRmpkRzl5S0NCamIyOXlaSE5iSURNZ1hTd2dZMjl2Y21Seld5QXdJRjBnS1RzS0NXWnNiMkYwSUhKbGMzVnNkQ0E5SUV4VVExOURiR2x3Y0dWa1UzQm9aWEpsUm05eWJVWmhZM1J2Y2lnZ2RtVmpkRzl5Um05eWJVWmhZM1J2Y2lBcE93b0pjbVYwZFhKdUlIWmxZek1vSUhKbGMzVnNkQ0FwT3dwOUNtWnNiMkYwSUVkZlFteHBibTVRYUc5dVoxOUpiWEJzYVdOcGRDZ2dLU0I3Q2dseVpYUjFjbTRnTUM0eU5Uc0tmUXBtYkc5aGRDQkVYMEpzYVc1dVVHaHZibWNvSUdOdmJuTjBJR2x1SUdac2IyRjBJSE5vYVc1cGJtVnpjeXdnWTI5dWMzUWdhVzRnWm14dllYUWdaRzkwVGtnZ0tTQjdDZ2x5WlhSMWNtNGdVa1ZEU1ZCU1QwTkJURjlRU1NBcUlDZ2djMmhwYm1sdVpYTnpJQ29nTUM0MUlDc2dNUzR3SUNrZ0tpQndiM2NvSUdSdmRFNUlMQ0J6YUdsdWFXNWxjM01nS1RzS2ZRcDJaV016SUVKU1JFWmZRbXhwYm01UWFHOXVaeWdnWTI5dWMzUWdhVzRnZG1Wak15QnNhV2RvZEVScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnphR2x1YVc1bGMzTWdLU0I3Q2dsMlpXTXpJR2hoYkdaRWFYSWdQU0J1YjNKdFlXeHBlbVVvSUd4cFoyaDBSR2x5SUNzZ2RtbGxkMFJwY2lBcE93b0pabXh2WVhRZ1pHOTBUa2dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJR2hoYkdaRWFYSWdLU0FwT3dvSlpteHZZWFFnWkc5MFZrZ2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQjJhV1YzUkdseUxDQm9ZV3htUkdseUlDa2dLVHNLQ1habFl6TWdSaUE5SUVaZlUyTm9iR2xqYXlnZ2MzQmxZM1ZzWVhKRGIyeHZjaXdnTVM0d0xDQmtiM1JXU0NBcE93b0pabXh2WVhRZ1J5QTlJRWRmUW14cGJtNVFhRzl1WjE5SmJYQnNhV05wZENnZ0tUc0tDV1pzYjJGMElFUWdQU0JFWDBKc2FXNXVVR2h2Ym1jb0lITm9hVzVwYm1WemN5d2daRzkwVGtnZ0tUc0tDWEpsZEhWeWJpQkdJQ29nS0NCSElDb2dSQ0FwT3dwOUNpTnBaaUJrWldacGJtVmtLQ0JWVTBWZlUwaEZSVTRnS1FwbWJHOWhkQ0JFWDBOb1lYSnNhV1VvSUdac2IyRjBJSEp2ZFdkb2JtVnpjeXdnWm14dllYUWdaRzkwVGtnZ0tTQjdDZ2xtYkc5aGRDQmhiSEJvWVNBOUlIQnZkeklvSUhKdmRXZG9ibVZ6Y3lBcE93b0pabXh2WVhRZ2FXNTJRV3h3YUdFZ1BTQXhMakFnTHlCaGJIQm9ZVHNLQ1dac2IyRjBJR052Y3pKb0lEMGdaRzkwVGtnZ0tpQmtiM1JPU0RzS0NXWnNiMkYwSUhOcGJqSm9JRDBnYldGNEtDQXhMakFnTFNCamIzTXlhQ3dnTUM0d01EYzRNVEkxSUNrN0NnbHlaWFIxY200Z0tDQXlMakFnS3lCcGJuWkJiSEJvWVNBcElDb2djRzkzS0NCemFXNHlhQ3dnYVc1MlFXeHdhR0VnS2lBd0xqVWdLU0F2SUNnZ01pNHdJQ29nVUVrZ0tUc0tmUXBtYkc5aGRDQldYMDVsZFdKbGJIUW9JR1pzYjJGMElHUnZkRTVXTENCbWJHOWhkQ0JrYjNST1RDQXBJSHNLQ1hKbGRIVnliaUJ6WVhSMWNtRjBaU2dnTVM0d0lDOGdLQ0EwTGpBZ0tpQW9JR1J2ZEU1TUlDc2daRzkwVGxZZ0xTQmtiM1JPVENBcUlHUnZkRTVXSUNrZ0tTQXBPd3A5Q25abFl6TWdRbEpFUmw5VGFHVmxiaWdnWTI5dWMzUWdhVzRnZG1Wak15QnNhV2RvZEVScGNpd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dkbVZqTXlCemFHVmxia052Ykc5eUxDQmpiMjV6ZENCcGJpQm1iRzloZENCemFHVmxibEp2ZFdkb2JtVnpjeUFwSUhzS0NYWmxZek1nYUdGc1prUnBjaUE5SUc1dmNtMWhiR2w2WlNnZ2JHbG5hSFJFYVhJZ0t5QjJhV1YzUkdseUlDazdDZ2xtYkc5aGRDQmtiM1JPVENBOUlITmhkSFZ5WVhSbEtDQmtiM1FvSUc1dmNtMWhiQ3dnYkdsbmFIUkVhWElnS1NBcE93b0pabXh2WVhRZ1pHOTBUbFlnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSWdLU0FwT3dvSlpteHZZWFFnWkc5MFRrZ2dQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lHaGhiR1pFYVhJZ0tTQXBPd29KWm14dllYUWdSQ0E5SUVSZlEyaGhjbXhwWlNnZ2MyaGxaVzVTYjNWbmFHNWxjM01zSUdSdmRFNUlJQ2s3Q2dsbWJHOWhkQ0JXSUQwZ1ZsOU9aWFZpWld4MEtDQmtiM1JPVml3Z1pHOTBUa3dnS1RzS0NYSmxkSFZ5YmlCemFHVmxia052Ykc5eUlDb2dLQ0JFSUNvZ1ZpQXBPd3A5Q2lObGJtUnBabUFzSUVWbUlEMGdZQ05wWm1SbFppQlZVMFZmUWxWTlVFMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWW5WdGNFMWhjRHNLQ1hWdWFXWnZjbTBnWm14dllYUWdZblZ0Y0ZOallXeGxPd29KZG1Wak1pQmtTR1I0ZVY5bWQyUW9LU0I3Q2drSmRtVmpNaUJrVTFSa2VDQTlJR1JHWkhnb0lIWlZkaUFwT3dvSkNYWmxZeklnWkZOVVpIa2dQU0JrUm1SNUtDQjJWWFlnS1RzS0NRbG1iRzloZENCSWJHd2dQU0JpZFcxd1UyTmhiR1VnS2lCMFpYaDBkWEpsTWtRb0lHSjFiWEJOWVhBc0lIWlZkaUFwTG5nN0Nna0pabXh2WVhRZ1pFSjRJRDBnWW5WdGNGTmpZV3hsSUNvZ2RHVjRkSFZ5WlRKRUtDQmlkVzF3VFdGd0xDQjJWWFlnS3lCa1UxUmtlQ0FwTG5nZ0xTQkliR3c3Q2drSlpteHZZWFFnWkVKNUlEMGdZblZ0Y0ZOallXeGxJQ29nZEdWNGRIVnlaVEpFS0NCaWRXMXdUV0Z3TENCMlZYWWdLeUJrVTFSa2VTQXBMbmdnTFNCSWJHdzdDZ2tKY21WMGRYSnVJSFpsWXpJb0lHUkNlQ3dnWkVKNUlDazdDZ2w5Q2dsMlpXTXpJSEJsY25SMWNtSk9iM0p0WVd4QmNtSW9JSFpsWXpNZ2MzVnlabDl3YjNNc0lIWmxZek1nYzNWeVpsOXViM0p0TENCMlpXTXlJR1JJWkhoNUxDQm1iRzloZENCbVlXTmxSR2x5WldOMGFXOXVJQ2tnZXdvSkNYWmxZek1nZGxOcFoyMWhXQ0E5SUhabFl6TW9JR1JHWkhnb0lITjFjbVpmY0c5ekxuZ2dLU3dnWkVaa2VDZ2djM1Z5Wmw5d2IzTXVlU0FwTENCa1JtUjRLQ0J6ZFhKbVgzQnZjeTU2SUNrZ0tUc0tDUWwyWldNeklIWlRhV2R0WVZrZ1BTQjJaV016S0NCa1JtUjVLQ0J6ZFhKbVgzQnZjeTU0SUNrc0lHUkdaSGtvSUhOMWNtWmZjRzl6TG5rZ0tTd2daRVprZVNnZ2MzVnlabDl3YjNNdWVpQXBJQ2s3Q2drSmRtVmpNeUIyVGlBOUlITjFjbVpmYm05eWJUc0tDUWwyWldNeklGSXhJRDBnWTNKdmMzTW9JSFpUYVdkdFlWa3NJSFpPSUNrN0Nna0pkbVZqTXlCU01pQTlJR055YjNOektDQjJUaXdnZGxOcFoyMWhXQ0FwT3dvSkNXWnNiMkYwSUdaRVpYUWdQU0JrYjNRb0lIWlRhV2R0WVZnc0lGSXhJQ2tnS2lCbVlXTmxSR2x5WldOMGFXOXVPd29KQ1habFl6TWdka2R5WVdRZ1BTQnphV2R1S0NCbVJHVjBJQ2tnS2lBb0lHUklaSGg1TG5nZ0tpQlNNU0FySUdSSVpIaDVMbmtnS2lCU01pQXBPd29KQ1hKbGRIVnliaUJ1YjNKdFlXeHBlbVVvSUdGaWN5Z2daa1JsZENBcElDb2djM1Z5Wmw5dWIzSnRJQzBnZGtkeVlXUWdLVHNLQ1gwS0kyVnVaR2xtWUN3Z1FXWWdQU0JnSTJsbUlFNVZUVjlEVEVsUVVFbE9SMTlRVEVGT1JWTWdQaUF3Q2dsMlpXTTBJSEJzWVc1bE93b0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjl6ZEdGeWRBb0pabTl5SUNnZ2FXNTBJR2tnUFNBd095QnBJRHdnVlU1SlQwNWZRMHhKVUZCSlRrZGZVRXhCVGtWVE95QnBJQ3NySUNrZ2V3b0pDWEJzWVc1bElEMGdZMnhwY0hCcGJtZFFiR0Z1WlhOYklHa2dYVHNLQ1FscFppQW9JR1J2ZENnZ2RrTnNhWEJRYjNOcGRHbHZiaXdnY0d4aGJtVXVlSGw2SUNrZ1BpQndiR0Z1WlM1M0lDa2daR2x6WTJGeVpEc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tqYVdZZ1ZVNUpUMDVmUTB4SlVGQkpUa2RmVUV4QlRrVlRJRHdnVGxWTlgwTk1TVkJRU1U1SFgxQk1RVTVGVXdvSkNXSnZiMndnWTJ4cGNIQmxaQ0E5SUhSeWRXVTdDZ2tKSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KQ1dadmNpQW9JR2x1ZENCcElEMGdWVTVKVDA1ZlEweEpVRkJKVGtkZlVFeEJUa1ZUT3lCcElEd2dUbFZOWDBOTVNWQlFTVTVIWDFCTVFVNUZVenNnYVNBckt5QXBJSHNLQ1FrSmNHeGhibVVnUFNCamJHbHdjR2x1WjFCc1lXNWxjMXNnYVNCZE93b0pDUWxqYkdsd2NHVmtJRDBnS0NCa2IzUW9JSFpEYkdsd1VHOXphWFJwYjI0c0lIQnNZVzVsTG5oNWVpQXBJRDRnY0d4aGJtVXVkeUFwSUNZbUlHTnNhWEJ3WldRN0Nna0pmUW9KQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDZ2tKYVdZZ0tDQmpiR2x3Y0dWa0lDa2daR2x6WTJGeVpEc0tDU05sYm1ScFpnb2paVzVrYVdaZ0xDQkRaaUE5SUdBamFXWWdUbFZOWDBOTVNWQlFTVTVIWDFCTVFVNUZVeUErSURBS0NYWmhjbmxwYm1jZ2RtVmpNeUIyUTJ4cGNGQnZjMmwwYVc5dU93b0pkVzVwWm05eWJTQjJaV00wSUdOc2FYQndhVzVuVUd4aGJtVnpXeUJPVlUxZlEweEpVRkJKVGtkZlVFeEJUa1ZUSUYwN0NpTmxibVJwWm1Bc0lFeG1JRDBnWUNOcFppQk9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRJRDRnTUFvSmRtRnllV2x1WnlCMlpXTXpJSFpEYkdsd1VHOXphWFJwYjI0N0NpTmxibVJwWm1Bc0lGSm1JRDBnWUNOcFppQk9WVTFmUTB4SlVGQkpUa2RmVUV4QlRrVlRJRDRnTUFvSmRrTnNhWEJRYjNOcGRHbHZiaUE5SUMwZ2JYWlFiM05wZEdsdmJpNTRlWG83Q2lObGJtUnBabUFzSUZCbUlEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZRMDlNVDFKZlFVeFFTRUVnS1FvSlpHbG1ablZ6WlVOdmJHOXlJQ285SUhaRGIyeHZjanNLSTJWc2FXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNJQ2tLQ1dScFptWjFjMlZEYjJ4dmNpNXlaMklnS2owZ2RrTnZiRzl5T3dvalpXNWthV1pnTENCSlppQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSUNrS0NYWmhjbmxwYm1jZ2RtVmpOQ0IyUTI5c2IzSTdDaU5sYkdsbUlHUmxabWx1WldRb0lGVlRSVjlEVDB4UFVpQXBDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RrTnZiRzl5T3dvalpXNWthV1pnTENCRVppQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSUNrS0NYWmhjbmxwYm1jZ2RtVmpOQ0IyUTI5c2IzSTdDaU5sYkdsbUlHUmxabWx1WldRb0lGVlRSVjlEVDB4UFVpQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOUpUbE5VUVU1RFNVNUhYME5QVEU5U0lDa0tDWFpoY25scGJtY2dkbVZqTXlCMlEyOXNiM0k3Q2lObGJtUnBabUFzSUVabUlEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZRMDlNVDFKZlFVeFFTRUVnS1FvSmRrTnZiRzl5SUQwZ2RtVmpOQ2dnTVM0d0lDazdDaU5sYkdsbUlHUmxabWx1WldRb0lGVlRSVjlEVDB4UFVpQXBJSHg4SUdSbFptbHVaV1FvSUZWVFJWOUpUbE5VUVU1RFNVNUhYME5QVEU5U0lDa0tDWFpEYjJ4dmNpQTlJSFpsWXpNb0lERXVNQ0FwT3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5RFQweFBVZ29KZGtOdmJHOXlJQ285SUdOdmJHOXlPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlKVGxOVVFVNURTVTVIWDBOUFRFOVNDZ2wyUTI5c2IzSXVlSGw2SUNvOUlHbHVjM1JoYm1ObFEyOXNiM0l1ZUhsNk93b2paVzVrYVdaZ0xDQk9aaUE5SUdBalpHVm1hVzVsSUZCSklETXVNVFF4TlRreU5qVXpOVGc1TnprekNpTmtaV1pwYm1VZ1VFa3lJRFl1TWpnek1UZzFNekEzTVRjNU5UZzJDaU5rWldacGJtVWdVRWxmU0VGTVJpQXhMalUzTURjNU5qTXlOamM1TkRnNU5qWUtJMlJsWm1sdVpTQlNSVU5KVUZKUFEwRk1YMUJKSURBdU16RTRNekE1T0RnMk1UZ3pOemt3TndvalpHVm1hVzVsSUZKRlEwbFFVazlEUVV4ZlVFa3lJREF1TVRVNU1UVTBPVFF6TURreE9EazFNelVLSTJSbFptbHVaU0JGVUZOSlRFOU9JREZsTFRZS0kybG1ibVJsWmlCellYUjFjbUYwWlFvalpHVm1hVzVsSUhOaGRIVnlZWFJsS0NCaElDa2dZMnhoYlhBb0lHRXNJREF1TUN3Z01TNHdJQ2tLSTJWdVpHbG1DaU5rWldacGJtVWdkMmhwZEdWRGIyMXdiR1Z0Wlc1MEtDQmhJQ2tnS0NBeExqQWdMU0J6WVhSMWNtRjBaU2dnWVNBcElDa0tabXh2WVhRZ2NHOTNNaWdnWTI5dWMzUWdhVzRnWm14dllYUWdlQ0FwSUhzZ2NtVjBkWEp1SUhncWVEc2dmUXBtYkc5aGRDQndiM2N6S0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0I0SUNrZ2V5QnlaWFIxY200Z2VDcDRLbmc3SUgwS1pteHZZWFFnY0c5M05DZ2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2VDQXBJSHNnWm14dllYUWdlRElnUFNCNEtuZzdJSEpsZEhWeWJpQjRNaXA0TWpzZ2ZRcG1iRzloZENCdFlYZ3pLQ0JqYjI1emRDQnBiaUIyWldNeklIWWdLU0I3SUhKbGRIVnliaUJ0WVhnb0lHMWhlQ2dnZGk1NExDQjJMbmtnS1N3Z2RpNTZJQ2s3SUgwS1pteHZZWFFnWVhabGNtRm5aU2dnWTI5dWMzUWdhVzRnZG1Wak15QmpiMnh2Y2lBcElIc2djbVYwZFhKdUlHUnZkQ2dnWTI5c2IzSXNJSFpsWXpNb0lEQXVNek16TXlBcElDazdJSDBLYUdsbmFIQWdabXh2WVhRZ2NtRnVaQ2dnWTI5dWMzUWdhVzRnZG1Wak1pQjFkaUFwSUhzS0NXTnZibk4wSUdocFoyaHdJR1pzYjJGMElHRWdQU0F4TWk0NU9EazRMQ0JpSUQwZ056Z3VNak16TENCaklEMGdORE0zTlRndU5UUTFNenNLQ1docFoyaHdJR1pzYjJGMElHUjBJRDBnWkc5MEtDQjFkaTU0ZVN3Z2RtVmpNaWdnWVN4aUlDa2dLU3dnYzI0Z1BTQnRiMlFvSUdSMExDQlFTU0FwT3dvSmNtVjBkWEp1SUdaeVlXTjBLQ0J6YVc0b0lITnVJQ2tnS2lCaklDazdDbjBLSTJsbVpHVm1JRWhKUjBoZlVGSkZRMGxUU1U5T0NnbG1iRzloZENCd2NtVmphWE5wYjI1VFlXWmxUR1Z1WjNSb0tDQjJaV016SUhZZ0tTQjdJSEpsZEhWeWJpQnNaVzVuZEdnb0lIWWdLVHNnZlFvalpXeHpaUW9KWm14dllYUWdjSEpsWTJsemFXOXVVMkZtWlV4bGJtZDBhQ2dnZG1Wak15QjJJQ2tnZXdvSkNXWnNiMkYwSUcxaGVFTnZiWEJ2Ym1WdWRDQTlJRzFoZURNb0lHRmljeWdnZGlBcElDazdDZ2tKY21WMGRYSnVJR3hsYm1kMGFDZ2dkaUF2SUcxaGVFTnZiWEJ2Ym1WdWRDQXBJQ29nYldGNFEyOXRjRzl1Wlc1ME93b0pmUW9qWlc1a2FXWUtjM1J5ZFdOMElFbHVZMmxrWlc1MFRHbG5hSFFnZXdvSmRtVmpNeUJqYjJ4dmNqc0tDWFpsWXpNZ1pHbHlaV04wYVc5dU93b0pZbTl2YkNCMmFYTnBZbXhsT3dwOU93cHpkSEoxWTNRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnZXdvSmRtVmpNeUJrYVhKbFkzUkVhV1ptZFhObE93b0pkbVZqTXlCa2FYSmxZM1JUY0dWamRXeGhjanNLQ1habFl6TWdhVzVrYVhKbFkzUkVhV1ptZFhObE93b0pkbVZqTXlCcGJtUnBjbVZqZEZOd1pXTjFiR0Z5T3dwOU93cHpkSEoxWTNRZ1IyVnZiV1YwY21salEyOXVkR1Y0ZENCN0NnbDJaV016SUhCdmMybDBhVzl1T3dvSmRtVmpNeUJ1YjNKdFlXdzdDZ2wyWldNeklIWnBaWGRFYVhJN0NpTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2wyWldNeklHTnNaV0Z5WTI5aGRFNXZjbTFoYkRzS0kyVnVaR2xtQ24wN0NuWmxZek1nZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCcGJpQjJaV016SUdScGNpd2dhVzRnYldGME5DQnRZWFJ5YVhnZ0tTQjdDZ2x5WlhSMWNtNGdibTl5YldGc2FYcGxLQ0FvSUcxaGRISnBlQ0FxSUhabFl6UW9JR1JwY2l3Z01DNHdJQ2tnS1M1NGVYb2dLVHNLZlFwMlpXTXpJR2x1ZG1WeWMyVlVjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9JR2x1SUhabFl6TWdaR2x5TENCcGJpQnRZWFEwSUcxaGRISnBlQ0FwSUhzS0NYSmxkSFZ5YmlCdWIzSnRZV3hwZW1Vb0lDZ2dkbVZqTkNnZ1pHbHlMQ0F3TGpBZ0tTQXFJRzFoZEhKcGVDQXBMbmg1ZWlBcE93cDlDbTFoZERNZ2RISmhibk53YjNObFRXRjBNeWdnWTI5dWMzUWdhVzRnYldGME15QnRJQ2tnZXdvSmJXRjBNeUIwYlhBN0NnbDBiWEJiSURBZ1hTQTlJSFpsWXpNb0lHMWJJREFnWFM1NExDQnRXeUF4SUYwdWVDd2diVnNnTWlCZExuZ2dLVHNLQ1hSdGNGc2dNU0JkSUQwZ2RtVmpNeWdnYlZzZ01DQmRMbmtzSUcxYklERWdYUzU1TENCdFd5QXlJRjB1ZVNBcE93b0pkRzF3V3lBeUlGMGdQU0IyWldNektDQnRXeUF3SUYwdWVpd2diVnNnTVNCZExub3NJRzFiSURJZ1hTNTZJQ2s3Q2dseVpYUjFjbTRnZEcxd093cDlDbVpzYjJGMElHeHBibVZoY2xSdlVtVnNZWFJwZG1WTWRXMXBibUZ1WTJVb0lHTnZibk4wSUdsdUlIWmxZek1nWTI5c2IzSWdLU0I3Q2dsMlpXTXpJSGRsYVdkb2RITWdQU0IyWldNektDQXdMakl4TWpZc0lEQXVOekUxTWl3Z01DNHdOekl5SUNrN0NnbHlaWFIxY200Z1pHOTBLQ0IzWldsbmFIUnpMQ0JqYjJ4dmNpNXlaMklnS1RzS2ZRcGliMjlzSUdselVHVnljM0JsWTNScGRtVk5ZWFJ5YVhnb0lHMWhkRFFnYlNBcElIc0tDWEpsZEhWeWJpQnRXeUF5SUYxYklETWdYU0E5UFNBdElERXVNRHNLZlFwMlpXTXlJR1Z4ZFdseVpXTjBWWFlvSUdsdUlIWmxZek1nWkdseUlDa2dld29KWm14dllYUWdkU0E5SUdGMFlXNG9JR1JwY2k1NkxDQmthWEl1ZUNBcElDb2dVa1ZEU1ZCU1QwTkJURjlRU1RJZ0t5QXdMalU3Q2dsbWJHOWhkQ0IySUQwZ1lYTnBiaWdnWTJ4aGJYQW9JR1JwY2k1NUxDQXRJREV1TUN3Z01TNHdJQ2tnS1NBcUlGSkZRMGxRVWs5RFFVeGZVRWtnS3lBd0xqVTdDZ2x5WlhSMWNtNGdkbVZqTWlnZ2RTd2dkaUFwT3dwOVlDd2dRbVlnUFNCZ0kybG1aR1ZtSUVWT1ZrMUJVRjlVV1ZCRlgwTlZRa1ZmVlZZS0NTTmtaV1pwYm1VZ1kzVmlaVlZXWDIxaGVFMXBjRXhsZG1Wc0lEZ3VNQW9KSTJSbFptbHVaU0JqZFdKbFZWWmZiV2x1VFdsd1RHVjJaV3dnTkM0d0Nna2paR1ZtYVc1bElHTjFZbVZWVmw5dFlYaFVhV3hsVTJsNlpTQXlOVFl1TUFvSkkyUmxabWx1WlNCamRXSmxWVlpmYldsdVZHbHNaVk5wZW1VZ01UWXVNQW9KWm14dllYUWdaMlYwUm1GalpTZ2dkbVZqTXlCa2FYSmxZM1JwYjI0Z0tTQjdDZ2tKZG1Wak15QmhZbk5FYVhKbFkzUnBiMjRnUFNCaFluTW9JR1JwY21WamRHbHZiaUFwT3dvSkNXWnNiMkYwSUdaaFkyVWdQU0F0SURFdU1Ec0tDUWxwWmlBb0lHRmljMFJwY21WamRHbHZiaTU0SUQ0Z1lXSnpSR2x5WldOMGFXOXVMbm9nS1NCN0Nna0pDV2xtSUNnZ1lXSnpSR2x5WldOMGFXOXVMbmdnUGlCaFluTkVhWEpsWTNScGIyNHVlU0FwQ2drSkNRbG1ZV05sSUQwZ1pHbHlaV04wYVc5dUxuZ2dQaUF3TGpBZ1B5QXdMakFnT2lBekxqQTdDZ2tKQ1dWc2MyVUtDUWtKQ1daaFkyVWdQU0JrYVhKbFkzUnBiMjR1ZVNBK0lEQXVNQ0EvSURFdU1DQTZJRFF1TURzS0NRbDlJR1ZzYzJVZ2V3b0pDUWxwWmlBb0lHRmljMFJwY21WamRHbHZiaTU2SUQ0Z1lXSnpSR2x5WldOMGFXOXVMbmtnS1FvSkNRa0pabUZqWlNBOUlHUnBjbVZqZEdsdmJpNTZJRDRnTUM0d0lEOGdNaTR3SURvZ05TNHdPd29KQ1FsbGJITmxDZ2tKQ1FsbVlXTmxJRDBnWkdseVpXTjBhVzl1TG5rZ1BpQXdMakFnUHlBeExqQWdPaUEwTGpBN0Nna0pmUW9KQ1hKbGRIVnliaUJtWVdObE93b0pmUW9KZG1Wak1pQm5aWFJWVmlnZ2RtVmpNeUJrYVhKbFkzUnBiMjRzSUdac2IyRjBJR1poWTJVZ0tTQjdDZ2tKZG1Wak1pQjFkanNLQ1FscFppQW9JR1poWTJVZ1BUMGdNQzR3SUNrZ2V3b0pDUWwxZGlBOUlIWmxZeklvSUdScGNtVmpkR2x2Ymk1NkxDQmthWEpsWTNScGIyNHVlU0FwSUM4Z1lXSnpLQ0JrYVhKbFkzUnBiMjR1ZUNBcE93b0pDWDBnWld4elpTQnBaaUFvSUdaaFkyVWdQVDBnTVM0d0lDa2dld29KQ1FsMWRpQTlJSFpsWXpJb0lDMGdaR2x5WldOMGFXOXVMbmdzSUMwZ1pHbHlaV04wYVc5dUxub2dLU0F2SUdGaWN5Z2daR2x5WldOMGFXOXVMbmtnS1RzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0JtWVdObElEMDlJREl1TUNBcElIc0tDUWtKZFhZZ1BTQjJaV015S0NBdElHUnBjbVZqZEdsdmJpNTRMQ0JrYVhKbFkzUnBiMjR1ZVNBcElDOGdZV0p6S0NCa2FYSmxZM1JwYjI0dWVpQXBPd29KQ1gwZ1pXeHpaU0JwWmlBb0lHWmhZMlVnUFQwZ015NHdJQ2tnZXdvSkNRbDFkaUE5SUhabFl6SW9JQzBnWkdseVpXTjBhVzl1TG5vc0lHUnBjbVZqZEdsdmJpNTVJQ2tnTHlCaFluTW9JR1JwY21WamRHbHZiaTU0SUNrN0Nna0pmU0JsYkhObElHbG1JQ2dnWm1GalpTQTlQU0EwTGpBZ0tTQjdDZ2tKQ1hWMklEMGdkbVZqTWlnZ0xTQmthWEpsWTNScGIyNHVlQ3dnWkdseVpXTjBhVzl1TG5vZ0tTQXZJR0ZpY3lnZ1pHbHlaV04wYVc5dUxua2dLVHNLQ1FsOUlHVnNjMlVnZXdvSkNRbDFkaUE5SUhabFl6SW9JR1JwY21WamRHbHZiaTU0TENCa2FYSmxZM1JwYjI0dWVTQXBJQzhnWVdKektDQmthWEpsWTNScGIyNHVlaUFwT3dvSkNYMEtDUWx5WlhSMWNtNGdNQzQxSUNvZ0tDQjFkaUFySURFdU1DQXBPd29KZlFvSmRtVmpNeUJpYVd4cGJtVmhja04xWW1WVlZpZ2djMkZ0Y0d4bGNqSkVJR1Z1ZGsxaGNDd2dkbVZqTXlCa2FYSmxZM1JwYjI0c0lHWnNiMkYwSUcxcGNFbHVkQ0FwSUhzS0NRbG1iRzloZENCbVlXTmxJRDBnWjJWMFJtRmpaU2dnWkdseVpXTjBhVzl1SUNrN0Nna0pabXh2WVhRZ1ptbHNkR1Z5U1c1MElEMGdiV0Y0S0NCamRXSmxWVlpmYldsdVRXbHdUR1YyWld3Z0xTQnRhWEJKYm5Rc0lEQXVNQ0FwT3dvSkNXMXBjRWx1ZENBOUlHMWhlQ2dnYldsd1NXNTBMQ0JqZFdKbFZWWmZiV2x1VFdsd1RHVjJaV3dnS1RzS0NRbG1iRzloZENCbVlXTmxVMmw2WlNBOUlHVjRjRElvSUcxcGNFbHVkQ0FwT3dvSkNXWnNiMkYwSUhSbGVHVnNVMmw2WlNBOUlERXVNQ0F2SUNnZ015NHdJQ29nWTNWaVpWVldYMjFoZUZScGJHVlRhWHBsSUNrN0Nna0pkbVZqTWlCMWRpQTlJR2RsZEZWV0tDQmthWEpsWTNScGIyNHNJR1poWTJVZ0tTQXFJQ2dnWm1GalpWTnBlbVVnTFNBeExqQWdLU0FySURBdU5Uc0tDUWxwWmlBb0lHWmhZMlVnUGlBeUxqQWdLU0I3Q2drSkNYVjJMbmtnS3owZ1ptRmpaVk5wZW1VN0Nna0pDV1poWTJVZ0xUMGdNeTR3T3dvSkNYMEtDUWwxZGk1NElDczlJR1poWTJVZ0tpQm1ZV05sVTJsNlpUc0tDUWxwWmlBb0lHMXBjRWx1ZENBOElHTjFZbVZWVmw5dFlYaE5hWEJNWlhabGJDQXBJSHNLQ1FrSmRYWXVlU0FyUFNBeUxqQWdLaUJqZFdKbFZWWmZiV0Y0Vkdsc1pWTnBlbVU3Q2drSmZRb0pDWFYyTG5rZ0t6MGdabWxzZEdWeVNXNTBJQ29nTWk0d0lDb2dZM1ZpWlZWV1gyMXBibFJwYkdWVGFYcGxPd29KQ1hWMkxuZ2dLejBnTXk0d0lDb2diV0Y0S0NBd0xqQXNJR04xWW1WVlZsOXRZWGhVYVd4bFUybDZaU0F0SURJdU1DQXFJR1poWTJWVGFYcGxJQ2s3Q2drSmRYWWdLajBnZEdWNFpXeFRhWHBsT3dvSkNYSmxkSFZ5YmlCMFpYaDBkWEpsTWtRb0lHVnVkazFoY0N3Z2RYWWdLUzV5WjJJN0NnbDlDZ2tqWkdWbWFXNWxJSEl3SURFdU1Bb0pJMlJsWm1sdVpTQjJNQ0F3TGpNek9Rb0pJMlJsWm1sdVpTQnRNQ0F0SURJdU1Bb0pJMlJsWm1sdVpTQnlNU0F3TGpnS0NTTmtaV1pwYm1VZ2RqRWdNQzR5TnpZS0NTTmtaV1pwYm1VZ2JURWdMU0F4TGpBS0NTTmtaV1pwYm1VZ2NqUWdNQzQwQ2dralpHVm1hVzVsSUhZMElEQXVNRFEyQ2dralpHVm1hVzVsSUcwMElESXVNQW9KSTJSbFptbHVaU0J5TlNBd0xqTXdOUW9KSTJSbFptbHVaU0IyTlNBd0xqQXhOZ29KSTJSbFptbHVaU0J0TlNBekxqQUtDU05rWldacGJtVWdjallnTUM0eU1Rb0pJMlJsWm1sdVpTQjJOaUF3TGpBd016Z0tDU05rWldacGJtVWdiVFlnTkM0d0NnbG1iRzloZENCeWIzVm5hRzVsYzNOVWIwMXBjQ2dnWm14dllYUWdjbTkxWjJodVpYTnpJQ2tnZXdvSkNXWnNiMkYwSUcxcGNDQTlJREF1TURzS0NRbHBaaUFvSUhKdmRXZG9ibVZ6Y3lBK1BTQnlNU0FwSUhzS0NRa0piV2x3SUQwZ0tDQnlNQ0F0SUhKdmRXZG9ibVZ6Y3lBcElDb2dLQ0J0TVNBdElHMHdJQ2tnTHlBb0lISXdJQzBnY2pFZ0tTQXJJRzB3T3dvSkNYMGdaV3h6WlNCcFppQW9JSEp2ZFdkb2JtVnpjeUErUFNCeU5DQXBJSHNLQ1FrSmJXbHdJRDBnS0NCeU1TQXRJSEp2ZFdkb2JtVnpjeUFwSUNvZ0tDQnROQ0F0SUcweElDa2dMeUFvSUhJeElDMGdjalFnS1NBcklHMHhPd29KQ1gwZ1pXeHpaU0JwWmlBb0lISnZkV2RvYm1WemN5QStQU0J5TlNBcElIc0tDUWtKYldsd0lEMGdLQ0J5TkNBdElISnZkV2RvYm1WemN5QXBJQ29nS0NCdE5TQXRJRzAwSUNrZ0x5QW9JSEkwSUMwZ2NqVWdLU0FySUcwME93b0pDWDBnWld4elpTQnBaaUFvSUhKdmRXZG9ibVZ6Y3lBK1BTQnlOaUFwSUhzS0NRa0piV2x3SUQwZ0tDQnlOU0F0SUhKdmRXZG9ibVZ6Y3lBcElDb2dLQ0J0TmlBdElHMDFJQ2tnTHlBb0lISTFJQzBnY2pZZ0tTQXJJRzAxT3dvSkNYMGdaV3h6WlNCN0Nna0pDVzFwY0NBOUlDMGdNaTR3SUNvZ2JHOW5NaWdnTVM0eE5pQXFJSEp2ZFdkb2JtVnpjeUFwT3drSmZRb0pDWEpsZEhWeWJpQnRhWEE3Q2dsOUNnbDJaV00wSUhSbGVIUjFjbVZEZFdKbFZWWW9JSE5oYlhCc1pYSXlSQ0JsYm5aTllYQXNJSFpsWXpNZ2MyRnRjR3hsUkdseUxDQm1iRzloZENCeWIzVm5hRzVsYzNNZ0tTQjdDZ2tKWm14dllYUWdiV2x3SUQwZ1kyeGhiWEFvSUhKdmRXZG9ibVZ6YzFSdlRXbHdLQ0J5YjNWbmFHNWxjM01nS1N3Z2JUQXNJR04xWW1WVlZsOXRZWGhOYVhCTVpYWmxiQ0FwT3dvSkNXWnNiMkYwSUcxcGNFWWdQU0JtY21GamRDZ2diV2x3SUNrN0Nna0pabXh2WVhRZ2JXbHdTVzUwSUQwZ1pteHZiM0lvSUcxcGNDQXBPd29KQ1habFl6TWdZMjlzYjNJd0lEMGdZbWxzYVc1bFlYSkRkV0psVlZZb0lHVnVkazFoY0N3Z2MyRnRjR3hsUkdseUxDQnRhWEJKYm5RZ0tUc0tDUWxwWmlBb0lHMXBjRVlnUFQwZ01DNHdJQ2tnZXdvSkNRbHlaWFIxY200Z2RtVmpOQ2dnWTI5c2IzSXdMQ0F4TGpBZ0tUc0tDUWw5SUdWc2MyVWdld29KQ1FsMlpXTXpJR052Ykc5eU1TQTlJR0pwYkdsdVpXRnlRM1ZpWlZWV0tDQmxiblpOWVhBc0lITmhiWEJzWlVScGNpd2diV2x3U1c1MElDc2dNUzR3SUNrN0Nna0pDWEpsZEhWeWJpQjJaV00wS0NCdGFYZ29JR052Ykc5eU1Dd2dZMjlzYjNJeExDQnRhWEJHSUNrc0lERXVNQ0FwT3dvSkNYMEtDWDBLSTJWdVpHbG1ZQ3dnZW1ZZ1BTQmdkbVZqTXlCMGNtRnVjMlp2Y20xbFpFNXZjbTFoYkNBOUlHOWlhbVZqZEU1dmNtMWhiRHNLSTJsbVpHVm1JRlZUUlY5SlRsTlVRVTVEU1U1SENnbHRZWFF6SUcwZ1BTQnRZWFF6S0NCcGJuTjBZVzVqWlUxaGRISnBlQ0FwT3dvSmRISmhibk5tYjNKdFpXUk9iM0p0WVd3Z0x6MGdkbVZqTXlnZ1pHOTBLQ0J0V3lBd0lGMHNJRzFiSURBZ1hTQXBMQ0JrYjNRb0lHMWJJREVnWFN3Z2JWc2dNU0JkSUNrc0lHUnZkQ2dnYlZzZ01pQmRMQ0J0V3lBeUlGMGdLU0FwT3dvSmRISmhibk5tYjNKdFpXUk9iM0p0WVd3Z1BTQnRJQ29nZEhKaGJuTm1iM0p0WldST2IzSnRZV3c3Q2lObGJtUnBaZ3AwY21GdWMyWnZjbTFsWkU1dmNtMWhiQ0E5SUc1dmNtMWhiRTFoZEhKcGVDQXFJSFJ5WVc1elptOXliV1ZrVG05eWJXRnNPd29qYVdaa1pXWWdSa3hKVUY5VFNVUkZSQW9KZEhKaGJuTm1iM0p0WldST2IzSnRZV3dnUFNBdElIUnlZVzV6Wm05eWJXVmtUbTl5YldGc093b2paVzVrYVdZS0kybG1aR1ZtSUZWVFJWOVVRVTVIUlU1VUNnbDJaV016SUhSeVlXNXpabTl5YldWa1ZHRnVaMlZ1ZENBOUlDZ2diVzlrWld4V2FXVjNUV0YwY21sNElDb2dkbVZqTkNnZ2IySnFaV04wVkdGdVoyVnVkQ3dnTUM0d0lDa2dLUzU0ZVhvN0Nna2phV1prWldZZ1JreEpVRjlUU1VSRlJBb0pDWFJ5WVc1elptOXliV1ZrVkdGdVoyVnVkQ0E5SUMwZ2RISmhibk5tYjNKdFpXUlVZVzVuWlc1ME93b0pJMlZ1WkdsbUNpTmxibVJwWm1Bc0lGVm1JRDBnWUNOcFptUmxaaUJWVTBWZlJFbFRVRXhCUTBWTlJVNVVUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCa2FYTndiR0ZqWlcxbGJuUk5ZWEE3Q2dsMWJtbG1iM0p0SUdac2IyRjBJR1JwYzNCc1lXTmxiV1Z1ZEZOallXeGxPd29KZFc1cFptOXliU0JtYkc5aGRDQmthWE53YkdGalpXMWxiblJDYVdGek93b2paVzVrYVdaZ0xDQlBaaUE5SUdBamFXWmtaV1lnVlZORlgwUkpVMUJNUVVORlRVVk9WRTFCVUFvSmRISmhibk5tYjNKdFpXUWdLejBnYm05eWJXRnNhWHBsS0NCdlltcGxZM1JPYjNKdFlXd2dLU0FxSUNnZ2RHVjRkSFZ5WlRKRUtDQmthWE53YkdGalpXMWxiblJOWVhBc0lIWlZkaUFwTG5nZ0tpQmthWE53YkdGalpXMWxiblJUWTJGc1pTQXJJR1JwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdLVHNLSTJWdVpHbG1ZQ3dnU0dZZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVFVsVFUwbFdSVTFCVUFvSmRtVmpOQ0JsYldsemMybDJaVU52Ykc5eUlEMGdkR1Y0ZEhWeVpUSkVLQ0JsYldsemMybDJaVTFoY0N3Z2RsVjJJQ2s3Q2dsbGJXbHpjMmwyWlVOdmJHOXlMbkpuWWlBOUlHVnRhWE56YVhabFRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ1pXMXBjM05wZG1WRGIyeHZjaUFwTG5Kbllqc0tDWFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlNBcVBTQmxiV2x6YzJsMlpVTnZiRzl5TG5Kbllqc0tJMlZ1WkdsbVlDd2dhMllnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUVWxUVTBsV1JVMUJVQW9KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWlcxcGMzTnBkbVZOWVhBN0NpTmxibVJwWm1Bc0lFZG1JRDBnSW1kc1gwWnlZV2REYjJ4dmNpQTlJR3hwYm1WaGNsUnZUM1YwY0hWMFZHVjRaV3dvSUdkc1gwWnlZV2REYjJ4dmNpQXBPeUlzSUZabUlEMGdZSFpsWXpRZ1RHbHVaV0Z5Vkc5TWFXNWxZWElvSUdsdUlIWmxZelFnZG1Gc2RXVWdLU0I3Q2dseVpYUjFjbTRnZG1Gc2RXVTdDbjBLZG1Wak5DQnpVa2RDVkc5TWFXNWxZWElvSUdsdUlIWmxZelFnZG1Gc2RXVWdLU0I3Q2dseVpYUjFjbTRnZG1Wak5DZ2diV2w0S0NCd2IzY29JSFpoYkhWbExuSm5ZaUFxSURBdU9UUTNPRFkzTWprNE5pQXJJSFpsWXpNb0lEQXVNRFV5TVRNeU56QXhOQ0FwTENCMlpXTXpLQ0F5TGpRZ0tTQXBMQ0IyWVd4MVpTNXlaMklnS2lBd0xqQTNOek01T1RNNE1EZ3NJSFpsWXpNb0lHeGxjM05VYUdGdVJYRjFZV3dvSUhaaGJIVmxMbkpuWWl3Z2RtVmpNeWdnTUM0d05EQTBOU0FwSUNrZ0tTQXBMQ0IyWVd4MVpTNWhJQ2s3Q24wS2RtVmpOQ0JNYVc1bFlYSlViM05TUjBJb0lHbHVJSFpsWXpRZ2RtRnNkV1VnS1NCN0NnbHlaWFIxY200Z2RtVmpOQ2dnYldsNEtDQndiM2NvSUhaaGJIVmxMbkpuWWl3Z2RtVmpNeWdnTUM0ME1UWTJOaUFwSUNrZ0tpQXhMakExTlNBdElIWmxZek1vSURBdU1EVTFJQ2tzSUhaaGJIVmxMbkpuWWlBcUlERXlMamt5TENCMlpXTXpLQ0JzWlhOelZHaGhia1Z4ZFdGc0tDQjJZV3gxWlM1eVoySXNJSFpsWXpNb0lEQXVNREF6TVRNd09DQXBJQ2tnS1NBcExDQjJZV3gxWlM1aElDazdDbjFnTENCWFppQTlJR0FqYVdaa1pXWWdWVk5GWDBWT1ZrMUJVQW9KSTJsbVpHVm1JRVZPVmw5WFQxSk1SRkJQVXdvSkNYWmxZek1nWTJGdFpYSmhWRzlHY21Gbk93b0pDV2xtSUNnZ2FYTlBjblJvYjJkeVlYQm9hV01nS1NCN0Nna0pDV05oYldWeVlWUnZSbkpoWnlBOUlHNXZjbTFoYkdsNlpTZ2dkbVZqTXlnZ0xTQjJhV1YzVFdGMGNtbDRXeUF3SUYxYklESWdYU3dnTFNCMmFXVjNUV0YwY21sNFd5QXhJRjFiSURJZ1hTd2dMU0IyYVdWM1RXRjBjbWw0V3lBeUlGMWJJRElnWFNBcElDazdDZ2tKZlNCbGJITmxJSHNLQ1FrSlkyRnRaWEpoVkc5R2NtRm5JRDBnYm05eWJXRnNhWHBsS0NCMlYyOXliR1JRYjNOcGRHbHZiaUF0SUdOaGJXVnlZVkJ2YzJsMGFXOXVJQ2s3Q2drSmZRb0pDWFpsWXpNZ2QyOXliR1JPYjNKdFlXd2dQU0JwYm5abGNuTmxWSEpoYm5ObWIzSnRSR2x5WldOMGFXOXVLQ0J1YjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NRa2phV1prWldZZ1JVNVdUVUZRWDAxUFJFVmZVa1ZHVEVWRFZFbFBUZ29KQ1FsMlpXTXpJSEpsWm14bFkzUldaV01nUFNCeVpXWnNaV04wS0NCallXMWxjbUZVYjBaeVlXY3NJSGR2Y214a1RtOXliV0ZzSUNrN0Nna0pJMlZzYzJVS0NRa0pkbVZqTXlCeVpXWnNaV04wVm1WaklEMGdjbVZtY21GamRDZ2dZMkZ0WlhKaFZHOUdjbUZuTENCM2IzSnNaRTV2Y20xaGJDd2djbVZtY21GamRHbHZibEpoZEdsdklDazdDZ2tKSTJWdVpHbG1DZ2tqWld4elpRb0pDWFpsWXpNZ2NtVm1iR1ZqZEZabFl5QTlJSFpTWldac1pXTjBPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXVFVGUVgxUlpVRVZmUTFWQ1JRb0pDWFpsWXpRZ1pXNTJRMjlzYjNJZ1BTQjBaWGgwZFhKbFEzVmlaU2dnWlc1MlRXRndMQ0IyWldNektDQm1iR2x3Ulc1MlRXRndJQ29nY21WbWJHVmpkRlpsWXk1NExDQnlaV1pzWldOMFZtVmpMbmw2SUNrZ0tUc0tDUWxsYm5aRGIyeHZjaUE5SUdWdWRrMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lHVnVka052Ykc5eUlDazdDZ2tqWld4cFppQmtaV1pwYm1Wa0tDQkZUbFpOUVZCZlZGbFFSVjlEVlVKRlgxVldJQ2tLQ1FsMlpXTTBJR1Z1ZGtOdmJHOXlJRDBnZEdWNGRIVnlaVU4xWW1WVlZpZ2daVzUyVFdGd0xDQnlaV1pzWldOMFZtVmpMQ0F3TGpBZ0tUc0tDU05sYkhObENna0pkbVZqTkNCbGJuWkRiMnh2Y2lBOUlIWmxZelFvSURBdU1DQXBPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXVFVGUVgwSk1SVTVFU1U1SFgwMVZURlJKVUV4WkNna0piM1YwWjI5cGJtZE1hV2RvZENBOUlHMXBlQ2dnYjNWMFoyOXBibWRNYVdkb2RDd2diM1YwWjI5cGJtZE1hV2RvZENBcUlHVnVka052Ykc5eUxuaDVlaXdnYzNCbFkzVnNZWEpUZEhKbGJtZDBhQ0FxSUhKbFpteGxZM1JwZG1sMGVTQXBPd29KSTJWc2FXWWdaR1ZtYVc1bFpDZ2dSVTVXVFVGUVgwSk1SVTVFU1U1SFgwMUpXQ0FwQ2drSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUcxcGVDZ2diM1YwWjI5cGJtZE1hV2RvZEN3Z1pXNTJRMjlzYjNJdWVIbDZMQ0J6Y0dWamRXeGhjbE4wY21WdVozUm9JQ29nY21WbWJHVmpkR2wyYVhSNUlDazdDZ2tqWld4cFppQmtaV1pwYm1Wa0tDQkZUbFpOUVZCZlFreEZUa1JKVGtkZlFVUkVJQ2tLQ1FsdmRYUm5iMmx1WjB4cFoyaDBJQ3M5SUdWdWRrTnZiRzl5TG5oNWVpQXFJSE53WldOMWJHRnlVM1J5Wlc1bmRHZ2dLaUJ5Wldac1pXTjBhWFpwZEhrN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z2NXWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRsWk5RVkFLQ1hWdWFXWnZjbTBnWm14dllYUWdaVzUyVFdGd1NXNTBaVzV6YVhSNU93b0pkVzVwWm05eWJTQm1iRzloZENCbWJHbHdSVzUyVFdGd093b0pJMmxtWkdWbUlFVk9WazFCVUY5VVdWQkZYME5WUWtVS0NRbDFibWxtYjNKdElITmhiWEJzWlhKRGRXSmxJR1Z1ZGsxaGNEc0tDU05sYkhObENna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdaVzUyVFdGd093b0pJMlZ1WkdsbUNna0tJMlZ1WkdsbVlDd2dXR1lnUFNCZ0kybG1aR1ZtSUZWVFJWOUZUbFpOUVZBS0NYVnVhV1p2Y20wZ1pteHZZWFFnY21WbWJHVmpkR2wyYVhSNU93b0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOUNWVTFRVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwNVBVazFCVEUxQlVDQXBJSHg4SUdSbFptbHVaV1FvSUZCSVQwNUhJQ2tLQ1FralpHVm1hVzVsSUVWT1ZsOVhUMUpNUkZCUFV3b0pJMlZ1WkdsbUNna2phV1prWldZZ1JVNVdYMWRQVWt4RVVFOVRDZ2tKZG1GeWVXbHVaeUIyWldNeklIWlhiM0pzWkZCdmMybDBhVzl1T3dvSkNYVnVhV1p2Y20wZ1pteHZZWFFnY21WbWNtRmpkR2x2YmxKaGRHbHZPd29KSTJWc2MyVUtDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsSmxabXhsWTNRN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1NtWWdQU0JnSTJsbVpHVm1JRlZUUlY5RlRsWk5RVkFLQ1NOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUWxWTlVFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGVlRSVjlPVDFKTlFVeE5RVkFnS1NCOGZHUmxabWx1WldRb0lGQklUMDVISUNrS0NRa2paR1ZtYVc1bElFVk9WbDlYVDFKTVJGQlBVd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdSVTVXWDFkUFVreEVVRTlUQ2drSkNna0pkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRkJ2YzJsMGFXOXVPd29KSTJWc2MyVUtDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsSmxabXhsWTNRN0Nna0pkVzVwWm05eWJTQm1iRzloZENCeVpXWnlZV04wYVc5dVVtRjBhVzg3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnV1dZZ1BTQmdJMmxtWkdWbUlGVlRSVjlGVGxaTlFWQUtDU05wWm1SbFppQkZUbFpmVjA5U1RFUlFUMU1LQ1FsMlYyOXliR1JRYjNOcGRHbHZiaUE5SUhkdmNteGtVRzl6YVhScGIyNHVlSGw2T3dvSkkyVnNjMlVLQ1FsMlpXTXpJR05oYldWeVlWUnZWbVZ5ZEdWNE93b0pDV2xtSUNnZ2FYTlBjblJvYjJkeVlYQm9hV01nS1NCN0Nna0pDV05oYldWeVlWUnZWbVZ5ZEdWNElEMGdibTl5YldGc2FYcGxLQ0IyWldNektDQXRJSFpwWlhkTllYUnlhWGhiSURBZ1hWc2dNaUJkTENBdElIWnBaWGROWVhSeWFYaGJJREVnWFZzZ01pQmRMQ0F0SUhacFpYZE5ZWFJ5YVhoYklESWdYVnNnTWlCZElDa2dLVHNLQ1FsOUlHVnNjMlVnZXdvSkNRbGpZVzFsY21GVWIxWmxjblJsZUNBOUlHNXZjbTFoYkdsNlpTZ2dkMjl5YkdSUWIzTnBkR2x2Ymk1NGVYb2dMU0JqWVcxbGNtRlFiM05wZEdsdmJpQXBPd29KQ1gwS0NRbDJaV016SUhkdmNteGtUbTl5YldGc0lEMGdhVzUyWlhKelpWUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2dkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd3NJSFpwWlhkTllYUnlhWGdnS1RzS0NRa2phV1prWldZZ1JVNVdUVUZRWDAxUFJFVmZVa1ZHVEVWRFZFbFBUZ29KQ1FsMlVtVm1iR1ZqZENBOUlISmxabXhsWTNRb0lHTmhiV1Z5WVZSdlZtVnlkR1Y0TENCM2IzSnNaRTV2Y20xaGJDQXBPd29KQ1NObGJITmxDZ2tKQ1haU1pXWnNaV04wSUQwZ2NtVm1jbUZqZENnZ1kyRnRaWEpoVkc5V1pYSjBaWGdzSUhkdmNteGtUbTl5YldGc0xDQnlaV1p5WVdOMGFXOXVVbUYwYVc4Z0tUc0tDUWtqWlc1a2FXWUtDU05sYm1ScFpnb2paVzVrYVdaZ0xDQmFaaUE5SUdBamFXWmtaV1lnVlZORlgwWlBSd29KZGtadlowUmxjSFJvSUQwZ0xTQnRkbEJ2YzJsMGFXOXVMbm83Q2lObGJtUnBabUFzSUNSbUlEMGdZQ05wWm1SbFppQlZVMFZmUms5SENnbDJZWEo1YVc1bklHWnNiMkYwSUhaR2IyZEVaWEIwYURzS0kyVnVaR2xtWUN3Z2FtWWdQU0JnSTJsbVpHVm1JRlZUUlY5R1QwY0tDU05wWm1SbFppQkdUMGRmUlZoUU1nb0pDV1pzYjJGMElHWnZaMFpoWTNSdmNpQTlJREV1TUNBdElHVjRjQ2dnTFNCbWIyZEVaVzV6YVhSNUlDb2dabTluUkdWdWMybDBlU0FxSUhaR2IyZEVaWEIwYUNBcUlIWkdiMmRFWlhCMGFDQXBPd29KSTJWc2MyVUtDUWxtYkc5aGRDQm1iMmRHWVdOMGIzSWdQU0J6Ylc5dmRHaHpkR1Z3S0NCbWIyZE9aV0Z5TENCbWIyZEdZWElzSUhaR2IyZEVaWEIwYUNBcE93b0pJMlZ1WkdsbUNnbG5iRjlHY21GblEyOXNiM0l1Y21kaUlEMGdiV2w0S0NCbmJGOUdjbUZuUTI5c2IzSXVjbWRpTENCbWIyZERiMnh2Y2l3Z1ptOW5SbUZqZEc5eUlDazdDaU5sYm1ScFptQXNJRkZtSUQwZ1lDTnBabVJsWmlCVlUwVmZSazlIQ2dsMWJtbG1iM0p0SUhabFl6TWdabTluUTI5c2IzSTdDZ2wyWVhKNWFXNW5JR1pzYjJGMElIWkdiMmRFWlhCMGFEc0tDU05wWm1SbFppQkdUMGRmUlZoUU1nb0pDWFZ1YVdadmNtMGdabXh2WVhRZ1ptOW5SR1Z1YzJsMGVUc0tDU05sYkhObENna0pkVzVwWm05eWJTQm1iRzloZENCbWIyZE9aV0Z5T3dvSkNYVnVhV1p2Y20wZ1pteHZZWFFnWm05blJtRnlPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRXRtSUQwZ1lDTnBabVJsWmlCVlUwVmZSMUpCUkVsRlRsUk5RVkFLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdkeVlXUnBaVzUwVFdGd093b2paVzVrYVdZS2RtVmpNeUJuWlhSSGNtRmthV1Z1ZEVseWNtRmthV0Z1WTJVb0lIWmxZek1nYm05eWJXRnNMQ0IyWldNeklHeHBaMmgwUkdseVpXTjBhVzl1SUNrZ2V3b0pabXh2WVhRZ1pHOTBUa3dnUFNCa2IzUW9JRzV2Y20xaGJDd2diR2xuYUhSRWFYSmxZM1JwYjI0Z0tUc0tDWFpsWXpJZ1kyOXZjbVFnUFNCMlpXTXlLQ0JrYjNST1RDQXFJREF1TlNBcklEQXVOU3dnTUM0d0lDazdDZ2tqYVdaa1pXWWdWVk5GWDBkU1FVUkpSVTVVVFVGUUNna0pjbVYwZFhKdUlIWmxZek1vSUhSbGVIUjFjbVV5UkNnZ1ozSmhaR2xsYm5STllYQXNJR052YjNKa0lDa3VjaUFwT3dvSkkyVnNjMlVLQ1FseVpYUjFjbTRnS0NCamIyOXlaQzU0SUR3Z01DNDNJQ2tnUHlCMlpXTXpLQ0F3TGpjZ0tTQTZJSFpsWXpNb0lERXVNQ0FwT3dvSkkyVnVaR2xtQ24xZ0xDQmxjQ0E5SUdBamFXWmtaV1lnVlZORlgweEpSMGhVVFVGUUNnbDJaV00wSUd4cFoyaDBUV0Z3VkdWNFpXd2dQU0IwWlhoMGRYSmxNa1FvSUd4cFoyaDBUV0Z3TENCMlZYWXlJQ2s3Q2dsMlpXTXpJR3hwWjJoMFRXRndTWEp5WVdScFlXNWpaU0E5SUd4cFoyaDBUV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2diR2xuYUhSTllYQlVaWGhsYkNBcExuSm5ZaUFxSUd4cFoyaDBUV0Z3U1c1MFpXNXphWFI1T3dvSkkybG1ibVJsWmlCUVNGbFRTVU5CVEV4WlgwTlBVbEpGUTFSZlRFbEhTRlJUQ2drSmJHbG5hSFJOWVhCSmNuSmhaR2xoYm1ObElDbzlJRkJKT3dvSkkyVnVaR2xtQ2dseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYkdsbmFIUk5ZWEJKY25KaFpHbGhibU5sT3dvalpXNWthV1pnTENCMGNDQTlJR0FqYVdaa1pXWWdWVk5GWDB4SlIwaFVUVUZRQ2dsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkNCc2FXZG9kRTFoY0RzS0NYVnVhV1p2Y20wZ1pteHZZWFFnYkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGs3Q2lObGJtUnBabUFzSUc1d0lEMGdZSFpsWXpNZ1pHbG1ablZ6WlNBOUlIWmxZek1vSURFdU1DQXBPd3BIWlc5dFpYUnlhV05EYjI1MFpYaDBJR2RsYjIxbGRISjVPd3BuWlc5dFpYUnllUzV3YjNOcGRHbHZiaUE5SUcxMlVHOXphWFJwYjI0dWVIbDZPd3BuWlc5dFpYUnllUzV1YjNKdFlXd2dQU0J1YjNKdFlXeHBlbVVvSUhSeVlXNXpabTl5YldWa1RtOXliV0ZzSUNrN0NtZGxiMjFsZEhKNUxuWnBaWGRFYVhJZ1BTQW9JR2x6VDNKMGFHOW5jbUZ3YUdsaklDa2dQeUIyWldNektDQXdMQ0F3TENBeElDa2dPaUJ1YjNKdFlXeHBlbVVvSUMxdGRsQnZjMmwwYVc5dUxuaDVlaUFwT3dwSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdKaFkydEhaVzl0WlhSeWVUc0tZbUZqYTBkbGIyMWxkSEo1TG5CdmMybDBhVzl1SUQwZ1oyVnZiV1YwY25rdWNHOXphWFJwYjI0N0NtSmhZMnRIWlc5dFpYUnllUzV1YjNKdFlXd2dQU0F0WjJWdmJXVjBjbmt1Ym05eWJXRnNPd3BpWVdOclIyVnZiV1YwY25rdWRtbGxkMFJwY2lBOUlHZGxiMjFsZEhKNUxuWnBaWGRFYVhJN0NuWk1hV2RvZEVaeWIyNTBJRDBnZG1Wak15Z2dNQzR3SUNrN0NuWkpibVJwY21WamRFWnliMjUwSUQwZ2RtVmpNeWdnTUM0d0lDazdDaU5wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1haTWFXZG9kRUpoWTJzZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1haSmJtUnBjbVZqZEVKaFkyc2dQU0IyWldNektDQXdMakFnS1RzS0kyVnVaR2xtQ2tsdVkybGtaVzUwVEdsbmFIUWdaR2x5WldOMFRHbG5hSFE3Q21ac2IyRjBJR1J2ZEU1TU93cDJaV016SUdScGNtVmpkRXhwWjJoMFEyOXNiM0pmUkdsbVpuVnpaVHNLZGtsdVpHbHlaV04wUm5KdmJuUWdLejBnWjJWMFFXMWlhV1Z1ZEV4cFoyaDBTWEp5WVdScFlXNWpaU2dnWVcxaWFXVnVkRXhwWjJoMFEyOXNiM0lnS1RzS2RrbHVaR2x5WldOMFJuSnZiblFnS3owZ1oyVjBUR2xuYUhSUWNtOWlaVWx5Y21Ga2FXRnVZMlVvSUd4cFoyaDBVSEp2WW1Vc0lHZGxiMjFsZEhKNUxtNXZjbTFoYkNBcE93b2phV1prWldZZ1JFOVZRa3hGWDFOSlJFVkVDZ2wyU1c1a2FYSmxZM1JDWVdOcklDczlJR2RsZEVGdFltbGxiblJNYVdkb2RFbHljbUZrYVdGdVkyVW9JR0Z0WW1sbGJuUk1hV2RvZEVOdmJHOXlJQ2s3Q2dsMlNXNWthWEpsWTNSQ1lXTnJJQ3M5SUdkbGRFeHBaMmgwVUhKdlltVkpjbkpoWkdsaGJtTmxLQ0JzYVdkb2RGQnliMkpsTENCaVlXTnJSMlZ2YldWMGNua3VibTl5YldGc0lDazdDaU5sYm1ScFpnb2phV1lnVGxWTlgxQlBTVTVVWDB4SlIwaFVVeUErSURBS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5UVQwbE9WRjlNU1VkSVZGTTdJR2tnS3lzZ0tTQjdDZ2tKWjJWMFVHOXBiblJNYVdkb2RFbHVabThvSUhCdmFXNTBUR2xuYUhSeld5QnBJRjBzSUdkbGIyMWxkSEo1TENCa2FYSmxZM1JNYVdkb2RDQXBPd29KQ1dSdmRFNU1JRDBnWkc5MEtDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHUnBjbVZqZEV4cFoyaDBMbVJwY21WamRHbHZiaUFwT3dvSkNXUnBjbVZqZEV4cFoyaDBRMjlzYjNKZlJHbG1ablZ6WlNBOUlHUnBjbVZqZEV4cFoyaDBMbU52Ykc5eU93b0pDWFpNYVdkb2RFWnliMjUwSUNzOUlITmhkSFZ5WVhSbEtDQmtiM1JPVENBcElDb2daR2x5WldOMFRHbG5hSFJEYjJ4dmNsOUVhV1ptZFhObE93b0pDU05wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1FrSmRreHBaMmgwUW1GamF5QXJQU0J6WVhSMWNtRjBaU2dnTFNCa2IzUk9UQ0FwSUNvZ1pHbHlaV04wVEdsbmFIUkRiMnh2Y2w5RWFXWm1kWE5sT3dvSkNTTmxibVJwWmdvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0kyVnVaR2xtQ2lOcFppQk9WVTFmVTFCUFZGOU1TVWRJVkZNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZVMUJQVkY5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSloyVjBVM0J2ZEV4cFoyaDBTVzVtYnlnZ2MzQnZkRXhwWjJoMGMxc2dhU0JkTENCblpXOXRaWFJ5ZVN3Z1pHbHlaV04wVEdsbmFIUWdLVHNLQ1Fsa2IzUk9UQ0E5SUdSdmRDZ2daMlZ2YldWMGNua3VibTl5YldGc0xDQmthWEpsWTNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1RzS0NRbGthWEpsWTNSTWFXZG9kRU52Ykc5eVgwUnBabVoxYzJVZ1BTQmthWEpsWTNSTWFXZG9kQzVqYjJ4dmNqc0tDUWwyVEdsbmFIUkdjbTl1ZENBclBTQnpZWFIxY21GMFpTZ2daRzkwVGt3Z0tTQXFJR1JwY21WamRFeHBaMmgwUTI5c2IzSmZSR2xtWm5WelpUc0tDUWtqYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2drSkNYWk1hV2RvZEVKaFkyc2dLejBnYzJGMGRYSmhkR1VvSUMwZ1pHOTBUa3dnS1NBcUlHUnBjbVZqZEV4cFoyaDBRMjlzYjNKZlJHbG1ablZ6WlRzS0NRa2paVzVrYVdZS0NYMEtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmWlc1a0NpTmxibVJwWmdvamFXWWdUbFZOWDBSSlVsOU1TVWRJVkZNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZSRWxTWDB4SlIwaFVVenNnYVNBckt5QXBJSHNLQ1FsblpYUkVhWEpsWTNScGIyNWhiRXhwWjJoMFNXNW1ieWdnWkdseVpXTjBhVzl1WVd4TWFXZG9kSE5iSUdrZ1hTd2daMlZ2YldWMGNua3NJR1JwY21WamRFeHBaMmgwSUNrN0Nna0paRzkwVGt3Z1BTQmtiM1FvSUdkbGIyMWxkSEo1TG01dmNtMWhiQ3dnWkdseVpXTjBUR2xuYUhRdVpHbHlaV04wYVc5dUlDazdDZ2tKWkdseVpXTjBUR2xuYUhSRGIyeHZjbDlFYVdabWRYTmxJRDBnWkdseVpXTjBUR2xuYUhRdVkyOXNiM0k3Q2drSmRreHBaMmgwUm5KdmJuUWdLejBnYzJGMGRYSmhkR1VvSUdSdmRFNU1JQ2tnS2lCa2FYSmxZM1JNYVdkb2RFTnZiRzl5WDBScFptWjFjMlU3Q2drSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDUWwyVEdsbmFIUkNZV05ySUNzOUlITmhkSFZ5WVhSbEtDQXRJR1J2ZEU1TUlDa2dLaUJrYVhKbFkzUk1hV2RvZEVOdmJHOXlYMFJwWm1aMWMyVTdDZ2tKSTJWdVpHbG1DZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9qWlc1a2FXWUtJMmxtSUU1VlRWOUlSVTFKWDB4SlIwaFVVeUErSURBS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5SVJVMUpYMHhKUjBoVVV6c2dhU0FyS3lBcElIc0tDUWwyU1c1a2FYSmxZM1JHY205dWRDQXJQU0JuWlhSSVpXMXBjM0JvWlhKbFRHbG5hSFJKY25KaFpHbGhibU5sS0NCb1pXMXBjM0JvWlhKbFRHbG5hSFJ6V3lCcElGMHNJR2RsYjIxbGRISjVMbTV2Y20xaGJDQXBPd29KQ1NOcFptUmxaaUJFVDFWQ1RFVmZVMGxFUlVRS0NRa0pka2x1WkdseVpXTjBRbUZqYXlBclBTQm5aWFJJWlcxcGMzQm9aWEpsVEdsbmFIUkpjbkpoWkdsaGJtTmxLQ0JvWlcxcGMzQm9aWEpsVEdsbmFIUnpXeUJwSUYwc0lHSmhZMnRIWlc5dFpYUnllUzV1YjNKdFlXd2dLVHNLQ1FralpXNWthV1lLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2lObGJtUnBabUFzSUdsd0lEMGdZSFZ1YVdadmNtMGdZbTl2YkNCeVpXTmxhWFpsVTJoaFpHOTNPd3AxYm1sbWIzSnRJSFpsWXpNZ1lXMWlhV1Z1ZEV4cFoyaDBRMjlzYjNJN0NuVnVhV1p2Y20wZ2RtVmpNeUJzYVdkb2RGQnliMkpsV3lBNUlGMDdDblpsWXpNZ2MyaEhaWFJKY25KaFpHbGhibU5sUVhRb0lHbHVJSFpsWXpNZ2JtOXliV0ZzTENCcGJpQjJaV016SUhOb1EyOWxabVpwWTJsbGJuUnpXeUE1SUYwZ0tTQjdDZ2xtYkc5aGRDQjRJRDBnYm05eWJXRnNMbmdzSUhrZ1BTQnViM0p0WVd3dWVTd2dlaUE5SUc1dmNtMWhiQzU2T3dvSmRtVmpNeUJ5WlhOMWJIUWdQU0J6YUVOdlpXWm1hV05wWlc1MGMxc2dNQ0JkSUNvZ01DNDRPRFl5TWpjN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklERWdYU0FxSURJdU1DQXFJREF1TlRFeE5qWTBJQ29nZVRzS0NYSmxjM1ZzZENBclBTQnphRU52WldabWFXTnBaVzUwYzFzZ01pQmRJQ29nTWk0d0lDb2dNQzQxTVRFMk5qUWdLaUI2T3dvSmNtVnpkV3gwSUNzOUlITm9RMjlsWm1acFkybGxiblJ6V3lBeklGMGdLaUF5TGpBZ0tpQXdMalV4TVRZMk5DQXFJSGc3Q2dseVpYTjFiSFFnS3owZ2MyaERiMlZtWm1samFXVnVkSE5iSURRZ1hTQXFJREl1TUNBcUlEQXVOREk1TURReklDb2dlQ0FxSUhrN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklEVWdYU0FxSURJdU1DQXFJREF1TkRJNU1EUXpJQ29nZVNBcUlIbzdDZ2x5WlhOMWJIUWdLejBnYzJoRGIyVm1abWxqYVdWdWRITmJJRFlnWFNBcUlDZ2dNQzQzTkRNeE1qVWdLaUI2SUNvZ2VpQXRJREF1TWpRM056QTRJQ2s3Q2dseVpYTjFiSFFnS3owZ2MyaERiMlZtWm1samFXVnVkSE5iSURjZ1hTQXFJREl1TUNBcUlEQXVOREk1TURReklDb2dlQ0FxSUhvN0NnbHlaWE4xYkhRZ0t6MGdjMmhEYjJWbVptbGphV1Z1ZEhOYklEZ2dYU0FxSURBdU5ESTVNRFF6SUNvZ0tDQjRJQ29nZUNBdElIa2dLaUI1SUNrN0NnbHlaWFIxY200Z2NtVnpkV3gwT3dwOUNuWmxZek1nWjJWMFRHbG5hSFJRY205aVpVbHljbUZrYVdGdVkyVW9JR052Ym5OMElHbHVJSFpsWXpNZ2JHbG5hSFJRY205aVpWc2dPU0JkTENCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDQXBJSHNLQ1habFl6TWdkMjl5YkdST2IzSnRZV3dnUFNCcGJuWmxjbk5sVkhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0NCdWIzSnRZV3dzSUhacFpYZE5ZWFJ5YVhnZ0tUc0tDWFpsWXpNZ2FYSnlZV1JwWVc1alpTQTlJSE5vUjJWMFNYSnlZV1JwWVc1alpVRjBLQ0IzYjNKc1pFNXZjbTFoYkN3Z2JHbG5hSFJRY205aVpTQXBPd29KY21WMGRYSnVJR2x5Y21Ga2FXRnVZMlU3Q24wS2RtVmpNeUJuWlhSQmJXSnBaVzUwVEdsbmFIUkpjbkpoWkdsaGJtTmxLQ0JqYjI1emRDQnBiaUIyWldNeklHRnRZbWxsYm5STWFXZG9kRU52Ykc5eUlDa2dld29KZG1Wak15QnBjbkpoWkdsaGJtTmxJRDBnWVcxaWFXVnVkRXhwWjJoMFEyOXNiM0k3Q2dseVpYUjFjbTRnYVhKeVlXUnBZVzVqWlRzS2ZRcG1iRzloZENCblpYUkVhWE4wWVc1alpVRjBkR1Z1ZFdGMGFXOXVLQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnNhV2RvZEVScGMzUmhibU5sTENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JqZFhSdlptWkVhWE4wWVc1alpTd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ1pHVmpZWGxGZUhCdmJtVnVkQ0FwSUhzS0NTTnBaaUJrWldacGJtVmtJQ2dnVUVoWlUwbERRVXhNV1Y5RFQxSlNSVU5VWDB4SlIwaFVVeUFwQ2drSlpteHZZWFFnWkdsemRHRnVZMlZHWVd4c2IyWm1JRDBnTVM0d0lDOGdiV0Y0S0NCd2IzY29JR3hwWjJoMFJHbHpkR0Z1WTJVc0lHUmxZMkY1Ulhod2IyNWxiblFnS1N3Z01DNHdNU0FwT3dvSkNXbG1JQ2dnWTNWMGIyWm1SR2x6ZEdGdVkyVWdQaUF3TGpBZ0tTQjdDZ2tKQ1dScGMzUmhibU5sUm1Gc2JHOW1aaUFxUFNCd2IzY3lLQ0J6WVhSMWNtRjBaU2dnTVM0d0lDMGdjRzkzTkNnZ2JHbG5hSFJFYVhOMFlXNWpaU0F2SUdOMWRHOW1aa1JwYzNSaGJtTmxJQ2tnS1NBcE93b0pDWDBLQ1FseVpYUjFjbTRnWkdsemRHRnVZMlZHWVd4c2IyWm1Pd29KSTJWc2MyVUtDUWxwWmlBb0lHTjFkRzltWmtScGMzUmhibU5sSUQ0Z01DNHdJQ1ltSUdSbFkyRjVSWGh3YjI1bGJuUWdQaUF3TGpBZ0tTQjdDZ2tKQ1hKbGRIVnliaUJ3YjNjb0lITmhkSFZ5WVhSbEtDQXRJR3hwWjJoMFJHbHpkR0Z1WTJVZ0x5QmpkWFJ2Wm1aRWFYTjBZVzVqWlNBcklERXVNQ0FwTENCa1pXTmhlVVY0Y0c5dVpXNTBJQ2s3Q2drSmZRb0pDWEpsZEhWeWJpQXhMakE3Q2dralpXNWthV1lLZlFwbWJHOWhkQ0JuWlhSVGNHOTBRWFIwWlc1MVlYUnBiMjRvSUdOdmJuTjBJR2x1SUdac2IyRjBJR052Ym1WRGIzTnBibVVzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEJsYm5WdFluSmhRMjl6YVc1bExDQmpiMjV6ZENCcGJpQm1iRzloZENCaGJtZHNaVU52YzJsdVpTQXBJSHNLQ1hKbGRIVnliaUJ6Ylc5dmRHaHpkR1Z3S0NCamIyNWxRMjl6YVc1bExDQndaVzUxYldKeVlVTnZjMmx1WlN3Z1lXNW5iR1ZEYjNOcGJtVWdLVHNLZlFvamFXWWdUbFZOWDBSSlVsOU1TVWRJVkZNZ1BpQXdDZ2x6ZEhKMVkzUWdSR2x5WldOMGFXOXVZV3hNYVdkb2RDQjdDZ2tKZG1Wak15QmthWEpsWTNScGIyNDdDZ2tKZG1Wak15QmpiMnh2Y2pzS0NYMDdDZ2wxYm1sbWIzSnRJRVJwY21WamRHbHZibUZzVEdsbmFIUWdaR2x5WldOMGFXOXVZV3hNYVdkb2RITmJJRTVWVFY5RVNWSmZURWxIU0ZSVElGMDdDZ2wyYjJsa0lHZGxkRVJwY21WamRHbHZibUZzVEdsbmFIUkpibVp2S0NCamIyNXpkQ0JwYmlCRWFYSmxZM1JwYjI1aGJFeHBaMmgwSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFFzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUc5MWRDQkpibU5wWkdWdWRFeHBaMmgwSUd4cFoyaDBJQ2tnZXdvSkNXeHBaMmgwTG1OdmJHOXlJRDBnWkdseVpXTjBhVzl1WVd4TWFXZG9kQzVqYjJ4dmNqc0tDUWxzYVdkb2RDNWthWEpsWTNScGIyNGdQU0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBMbVJwY21WamRHbHZianNLQ1Fsc2FXZG9kQzUyYVhOcFlteGxJRDBnZEhKMVpUc0tDWDBLSTJWdVpHbG1DaU5wWmlCT1ZVMWZVRTlKVGxSZlRFbEhTRlJUSUQ0Z01Bb0pjM1J5ZFdOMElGQnZhVzUwVEdsbmFIUWdld29KQ1habFl6TWdjRzl6YVhScGIyNDdDZ2tKZG1Wak15QmpiMnh2Y2pzS0NRbG1iRzloZENCa2FYTjBZVzVqWlRzS0NRbG1iRzloZENCa1pXTmhlVHNLQ1gwN0NnbDFibWxtYjNKdElGQnZhVzUwVEdsbmFIUWdjRzlwYm5STWFXZG9kSE5iSUU1VlRWOVFUMGxPVkY5TVNVZElWRk1nWFRzS0NYWnZhV1FnWjJWMFVHOXBiblJNYVdkb2RFbHVabThvSUdOdmJuTjBJR2x1SUZCdmFXNTBUR2xuYUhRZ2NHOXBiblJNYVdkb2RDd2dZMjl1YzNRZ2FXNGdSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQm5aVzl0WlhSeWVTd2diM1YwSUVsdVkybGtaVzUwVEdsbmFIUWdiR2xuYUhRZ0tTQjdDZ2tKZG1Wak15QnNWbVZqZEc5eUlEMGdjRzlwYm5STWFXZG9kQzV3YjNOcGRHbHZiaUF0SUdkbGIyMWxkSEo1TG5CdmMybDBhVzl1T3dvSkNXeHBaMmgwTG1ScGNtVmpkR2x2YmlBOUlHNXZjbTFoYkdsNlpTZ2diRlpsWTNSdmNpQXBPd29KQ1dac2IyRjBJR3hwWjJoMFJHbHpkR0Z1WTJVZ1BTQnNaVzVuZEdnb0lHeFdaV04wYjNJZ0tUc0tDUWxzYVdkb2RDNWpiMnh2Y2lBOUlIQnZhVzUwVEdsbmFIUXVZMjlzYjNJN0Nna0piR2xuYUhRdVkyOXNiM0lnS2owZ1oyVjBSR2x6ZEdGdVkyVkJkSFJsYm5WaGRHbHZiaWdnYkdsbmFIUkVhWE4wWVc1alpTd2djRzlwYm5STWFXZG9kQzVrYVhOMFlXNWpaU3dnY0c5cGJuUk1hV2RvZEM1a1pXTmhlU0FwT3dvSkNXeHBaMmgwTG5acGMybGliR1VnUFNBb0lHeHBaMmgwTG1OdmJHOXlJQ0U5SUhabFl6TW9JREF1TUNBcElDazdDZ2w5Q2lObGJtUnBaZ29qYVdZZ1RsVk5YMU5RVDFSZlRFbEhTRlJUSUQ0Z01Bb0pjM1J5ZFdOMElGTndiM1JNYVdkb2RDQjdDZ2tKZG1Wak15QndiM05wZEdsdmJqc0tDUWwyWldNeklHUnBjbVZqZEdsdmJqc0tDUWwyWldNeklHTnZiRzl5T3dvSkNXWnNiMkYwSUdScGMzUmhibU5sT3dvSkNXWnNiMkYwSUdSbFkyRjVPd29KQ1dac2IyRjBJR052Ym1WRGIzTTdDZ2tKWm14dllYUWdjR1Z1ZFcxaWNtRkRiM003Q2dsOU93b0pkVzVwWm05eWJTQlRjRzkwVEdsbmFIUWdjM0J2ZEV4cFoyaDBjMXNnVGxWTlgxTlFUMVJmVEVsSFNGUlRJRjA3Q2dsMmIybGtJR2RsZEZOd2IzUk1hV2RvZEVsdVptOG9JR052Ym5OMElHbHVJRk53YjNSTWFXZG9kQ0J6Y0c5MFRHbG5hSFFzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUc5MWRDQkpibU5wWkdWdWRFeHBaMmgwSUd4cFoyaDBJQ2tnZXdvSkNYWmxZek1nYkZabFkzUnZjaUE5SUhOd2IzUk1hV2RvZEM1d2IzTnBkR2x2YmlBdElHZGxiMjFsZEhKNUxuQnZjMmwwYVc5dU93b0pDV3hwWjJoMExtUnBjbVZqZEdsdmJpQTlJRzV2Y20xaGJHbDZaU2dnYkZabFkzUnZjaUFwT3dvSkNXWnNiMkYwSUdGdVoyeGxRMjl6SUQwZ1pHOTBLQ0JzYVdkb2RDNWthWEpsWTNScGIyNHNJSE53YjNSTWFXZG9kQzVrYVhKbFkzUnBiMjRnS1RzS0NRbG1iRzloZENCemNHOTBRWFIwWlc1MVlYUnBiMjRnUFNCblpYUlRjRzkwUVhSMFpXNTFZWFJwYjI0b0lITndiM1JNYVdkb2RDNWpiMjVsUTI5ekxDQnpjRzkwVEdsbmFIUXVjR1Z1ZFcxaWNtRkRiM01zSUdGdVoyeGxRMjl6SUNrN0Nna0phV1lnS0NCemNHOTBRWFIwWlc1MVlYUnBiMjRnUGlBd0xqQWdLU0I3Q2drSkNXWnNiMkYwSUd4cFoyaDBSR2x6ZEdGdVkyVWdQU0JzWlc1bmRHZ29JR3hXWldOMGIzSWdLVHNLQ1FrSmJHbG5hSFF1WTI5c2IzSWdQU0J6Y0c5MFRHbG5hSFF1WTI5c2IzSWdLaUJ6Y0c5MFFYUjBaVzUxWVhScGIyNDdDZ2tKQ1d4cFoyaDBMbU52Ykc5eUlDbzlJR2RsZEVScGMzUmhibU5sUVhSMFpXNTFZWFJwYjI0b0lHeHBaMmgwUkdsemRHRnVZMlVzSUhOd2IzUk1hV2RvZEM1a2FYTjBZVzVqWlN3Z2MzQnZkRXhwWjJoMExtUmxZMkY1SUNrN0Nna0pDV3hwWjJoMExuWnBjMmxpYkdVZ1BTQW9JR3hwWjJoMExtTnZiRzl5SUNFOUlIWmxZek1vSURBdU1DQXBJQ2s3Q2drSmZTQmxiSE5sSUhzS0NRa0piR2xuYUhRdVkyOXNiM0lnUFNCMlpXTXpLQ0F3TGpBZ0tUc0tDUWtKYkdsbmFIUXVkbWx6YVdKc1pTQTlJR1poYkhObE93b0pDWDBLQ1gwS0kyVnVaR2xtQ2lOcFppQk9WVTFmVWtWRFZGOUJVa1ZCWDB4SlIwaFVVeUErSURBS0NYTjBjblZqZENCU1pXTjBRWEpsWVV4cFoyaDBJSHNLQ1FsMlpXTXpJR052Ykc5eU93b0pDWFpsWXpNZ2NHOXphWFJwYjI0N0Nna0pkbVZqTXlCb1lXeG1WMmxrZEdnN0Nna0pkbVZqTXlCb1lXeG1TR1ZwWjJoME93b0pmVHNLQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUd4MFkxOHhPd2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0JzZEdOZk1qc0tDWFZ1YVdadmNtMGdVbVZqZEVGeVpXRk1hV2RvZENCeVpXTjBRWEpsWVV4cFoyaDBjMXNnVGxWTlgxSkZRMVJmUVZKRlFWOU1TVWRJVkZNZ1hUc0tJMlZ1WkdsbUNpTnBaaUJPVlUxZlNFVk5TVjlNU1VkSVZGTWdQaUF3Q2dsemRISjFZM1FnU0dWdGFYTndhR1Z5WlV4cFoyaDBJSHNLQ1FsMlpXTXpJR1JwY21WamRHbHZianNLQ1FsMlpXTXpJSE5yZVVOdmJHOXlPd29KQ1habFl6TWdaM0p2ZFc1a1EyOXNiM0k3Q2dsOU93b0pkVzVwWm05eWJTQklaVzFwYzNCb1pYSmxUR2xuYUhRZ2FHVnRhWE53YUdWeVpVeHBaMmgwYzFzZ1RsVk5YMGhGVFVsZlRFbEhTRlJUSUYwN0NnbDJaV016SUdkbGRFaGxiV2x6Y0dobGNtVk1hV2RvZEVseWNtRmthV0Z1WTJVb0lHTnZibk4wSUdsdUlFaGxiV2x6Y0dobGNtVk1hV2RvZENCb1pXMXBUR2xuYUhRc0lHTnZibk4wSUdsdUlIWmxZek1nYm05eWJXRnNJQ2tnZXdvSkNXWnNiMkYwSUdSdmRFNU1JRDBnWkc5MEtDQnViM0p0WVd3c0lHaGxiV2xNYVdkb2RDNWthWEpsWTNScGIyNGdLVHNLQ1FsbWJHOWhkQ0JvWlcxcFJHbG1ablZ6WlZkbGFXZG9kQ0E5SURBdU5TQXFJR1J2ZEU1TUlDc2dNQzQxT3dvSkNYWmxZek1nYVhKeVlXUnBZVzVqWlNBOUlHMXBlQ2dnYUdWdGFVeHBaMmgwTG1keWIzVnVaRU52Ykc5eUxDQm9aVzFwVEdsbmFIUXVjMnQ1UTI5c2IzSXNJR2hsYldsRWFXWm1kWE5sVjJWcFoyaDBJQ2s3Q2drSmNtVjBkWEp1SUdseWNtRmthV0Z1WTJVN0NnbDlDaU5sYm1ScFptQXNJSEp3SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlJVNVdUVUZRSUNrS0NTTnBabVJsWmlCRlRsWk5RVkJmVFU5RVJWOVNSVVpTUVVOVVNVOU9DZ2tKZFc1cFptOXliU0JtYkc5aGRDQnlaV1p5WVdOMGFXOXVVbUYwYVc4N0Nna2paVzVrYVdZS0NYWmxZek1nWjJWMFNVSk1TWEp5WVdScFlXNWpaU2dnWTI5dWMzUWdhVzRnZG1Wak15QnViM0p0WVd3Z0tTQjdDZ2tKSTJsbUlHUmxabWx1WldRb0lFVk9WazFCVUY5VVdWQkZYME5WUWtWZlZWWWdLUW9KQ1FsMlpXTXpJSGR2Y214a1RtOXliV0ZzSUQwZ2FXNTJaWEp6WlZSeVlXNXpabTl5YlVScGNtVmpkR2x2YmlnZ2JtOXliV0ZzTENCMmFXVjNUV0YwY21sNElDazdDZ2tKQ1habFl6UWdaVzUyVFdGd1EyOXNiM0lnUFNCMFpYaDBkWEpsUTNWaVpWVldLQ0JsYm5aTllYQXNJSGR2Y214a1RtOXliV0ZzTENBeExqQWdLVHNLQ1FrSmNtVjBkWEp1SUZCSklDb2daVzUyVFdGd1EyOXNiM0l1Y21kaUlDb2daVzUyVFdGd1NXNTBaVzV6YVhSNU93b0pDU05sYkhObENna0pDWEpsZEhWeWJpQjJaV016S0NBd0xqQWdLVHNLQ1FralpXNWthV1lLQ1gwS0NYWmxZek1nWjJWMFNVSk1VbUZrYVdGdVkyVW9JR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJR1pzYjJGMElISnZkV2RvYm1WemN5QXBJSHNLQ1FramFXWWdaR1ZtYVc1bFpDZ2dSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWaUFwQ2drSkNYWmxZek1nY21WbWJHVmpkRlpsWXpzS0NRa0pJMmxtWkdWbUlFVk9WazFCVUY5TlQwUkZYMUpGUmt4RlExUkpUMDRLQ1FrSkNYSmxabXhsWTNSV1pXTWdQU0J5Wldac1pXTjBLQ0F0SUhacFpYZEVhWElzSUc1dmNtMWhiQ0FwT3dvSkNRa0pjbVZtYkdWamRGWmxZeUE5SUc1dmNtMWhiR2w2WlNnZ2JXbDRLQ0J5Wldac1pXTjBWbVZqTENCdWIzSnRZV3dzSUhKdmRXZG9ibVZ6Y3lBcUlISnZkV2RvYm1WemN5a2dLVHNLQ1FrSkkyVnNjMlVLQ1FrSkNYSmxabXhsWTNSV1pXTWdQU0J5WldaeVlXTjBLQ0F0SUhacFpYZEVhWElzSUc1dmNtMWhiQ3dnY21WbWNtRmpkR2x2YmxKaGRHbHZJQ2s3Q2drSkNTTmxibVJwWmdvSkNRbHlaV1pzWldOMFZtVmpJRDBnYVc1MlpYSnpaVlJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnY21WbWJHVmpkRlpsWXl3Z2RtbGxkMDFoZEhKcGVDQXBPd29KQ1FsMlpXTTBJR1Z1ZGsxaGNFTnZiRzl5SUQwZ2RHVjRkSFZ5WlVOMVltVlZWaWdnWlc1MlRXRndMQ0J5Wldac1pXTjBWbVZqTENCeWIzVm5hRzVsYzNNZ0tUc0tDUWtKY21WMGRYSnVJR1Z1ZGsxaGNFTnZiRzl5TG5KbllpQXFJR1Z1ZGsxaGNFbHVkR1Z1YzJsMGVUc0tDUWtqWld4elpRb0pDUWx5WlhSMWNtNGdkbVZqTXlnZ01DNHdJQ2s3Q2drSkkyVnVaR2xtQ2dsOUNpTmxibVJwWm1Bc0lITndJRDBnWUZSdmIyNU5ZWFJsY21saGJDQnRZWFJsY21saGJEc0tiV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUQwZ1pHbG1ablZ6WlVOdmJHOXlMbkpuWWp0Z0xDQnZjQ0E5SUdCMllYSjVhVzVuSUhabFl6TWdkbFpwWlhkUWIzTnBkR2x2YmpzS2MzUnlkV04wSUZSdmIyNU5ZWFJsY21saGJDQjdDZ2wyWldNeklHUnBabVoxYzJWRGIyeHZjanNLZlRzS2RtOXBaQ0JTUlY5RWFYSmxZM1JmVkc5dmJpZ2dZMjl1YzNRZ2FXNGdTVzVqYVdSbGJuUk1hV2RvZENCa2FYSmxZM1JNYVdkb2RDd2dZMjl1YzNRZ2FXNGdSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQm5aVzl0WlhSeWVTd2dZMjl1YzNRZ2FXNGdWRzl2YmsxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzTENCcGJtOTFkQ0JTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBcElIc0tDWFpsWXpNZ2FYSnlZV1JwWVc1alpTQTlJR2RsZEVkeVlXUnBaVzUwU1hKeVlXUnBZVzVqWlNnZ1oyVnZiV1YwY25rdWJtOXliV0ZzTENCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLU0FxSUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBSR2xtWm5WelpTQXJQU0JwY25KaFpHbGhibU5sSUNvZ1FsSkVSbDlNWVcxaVpYSjBLQ0J0WVhSbGNtbGhiQzVrYVdabWRYTmxRMjlzYjNJZ0tUc0tmUXAyYjJsa0lGSkZYMGx1WkdseVpXTjBSR2xtWm5WelpWOVViMjl1S0NCamIyNXpkQ0JwYmlCMlpXTXpJR2x5Y21Ga2FXRnVZMlVzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUdOdmJuTjBJR2x1SUZSdmIyNU5ZWFJsY21saGJDQnRZWFJsY21saGJDd2dhVzV2ZFhRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUWdLU0I3Q2dseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYVhKeVlXUnBZVzVqWlNBcUlFSlNSRVpmVEdGdFltVnlkQ2dnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUlDazdDbjBLSTJSbFptbHVaU0JTUlY5RWFYSmxZM1FKQ1FrSlVrVmZSR2x5WldOMFgxUnZiMjRLSTJSbFptbHVaU0JTUlY5SmJtUnBjbVZqZEVScFptWjFjMlVKQ1ZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlY5VWIyOXVDaU5rWldacGJtVWdUV0YwWlhKcFlXeGZUR2xuYUhSUWNtOWlaVXhQUkNnZ2JXRjBaWEpwWVd3Z0tRa29NQ2xnTENCaGNDQTlJR0JDYkdsdWJsQm9iMjVuVFdGMFpYSnBZV3dnYldGMFpYSnBZV3c3Q20xaGRHVnlhV0ZzTG1ScFptWjFjMlZEYjJ4dmNpQTlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySTdDbTFoZEdWeWFXRnNMbk53WldOMWJHRnlRMjlzYjNJZ1BTQnpjR1ZqZFd4aGNqc0tiV0YwWlhKcFlXd3VjM0JsWTNWc1lYSlRhR2x1YVc1bGMzTWdQU0J6YUdsdWFXNWxjM003Q20xaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5VTNSeVpXNW5kR2dnUFNCemNHVmpkV3hoY2xOMGNtVnVaM1JvTzJBc0lHeHdJRDBnWUhaaGNubHBibWNnZG1Wak15QjJWbWxsZDFCdmMybDBhVzl1T3dwemRISjFZM1FnUW14cGJtNVFhRzl1WjAxaGRHVnlhV0ZzSUhzS0NYWmxZek1nWkdsbVpuVnpaVU52Ykc5eU93b0pkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlPd29KWm14dllYUWdjM0JsWTNWc1lYSlRhR2x1YVc1bGMzTTdDZ2xtYkc5aGRDQnpjR1ZqZFd4aGNsTjBjbVZ1WjNSb093cDlPd3AyYjJsa0lGSkZYMFJwY21WamRGOUNiR2x1YmxCb2IyNW5LQ0JqYjI1emRDQnBiaUJKYm1OcFpHVnVkRXhwWjJoMElHUnBjbVZqZEV4cFoyaDBMQ0JqYjI1emRDQnBiaUJIWlc5dFpYUnlhV05EYjI1MFpYaDBJR2RsYjIxbGRISjVMQ0JqYjI1emRDQnBiaUJDYkdsdWJsQm9iMjVuVFdGMFpYSnBZV3dnYldGMFpYSnBZV3dzSUdsdWIzVjBJRkpsWm14bFkzUmxaRXhwWjJoMElISmxabXhsWTNSbFpFeHBaMmgwSUNrZ2V3b0pabXh2WVhRZ1pHOTBUa3dnUFNCellYUjFjbUYwWlNnZ1pHOTBLQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJR1JwY21WamRFeHBaMmgwTG1ScGNtVmpkR2x2YmlBcElDazdDZ2wyWldNeklHbHljbUZrYVdGdVkyVWdQU0JrYjNST1RDQXFJR1JwY21WamRFeHBaMmgwTG1OdmJHOXlPd29KY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFJHbG1ablZ6WlNBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOU1ZVzFpWlhKMEtDQnRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnS1RzS0NYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRk53WldOMWJHRnlJQ3M5SUdseWNtRmthV0Z1WTJVZ0tpQkNVa1JHWDBKc2FXNXVVR2h2Ym1jb0lHUnBjbVZqZEV4cFoyaDBMbVJwY21WamRHbHZiaXdnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaXdnWjJWdmJXVjBjbmt1Ym05eWJXRnNMQ0J0WVhSbGNtbGhiQzV6Y0dWamRXeGhja052Ykc5eUxDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNsTm9hVzVwYm1WemN5QXBJQ29nYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpUZEhKbGJtZDBhRHNLZlFwMmIybGtJRkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaVjlDYkdsdWJsQm9iMjVuS0NCamIyNXpkQ0JwYmlCMlpXTXpJR2x5Y21Ga2FXRnVZMlVzSUdOdmJuTjBJR2x1SUVkbGIyMWxkSEpwWTBOdmJuUmxlSFFnWjJWdmJXVjBjbmtzSUdOdmJuTjBJR2x1SUVKc2FXNXVVR2h2Ym1kTllYUmxjbWxoYkNCdFlYUmxjbWxoYkN3Z2FXNXZkWFFnVW1WbWJHVmpkR1ZrVEdsbmFIUWdjbVZtYkdWamRHVmtUR2xuYUhRZ0tTQjdDZ2x5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t6MGdhWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZUR0Z0WW1WeWRDZ2diV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNrN0NuMEtJMlJsWm1sdVpTQlNSVjlFYVhKbFkzUUpDUWtKVWtWZlJHbHlaV04wWDBKc2FXNXVVR2h2Ym1jS0kyUmxabWx1WlNCU1JWOUpibVJwY21WamRFUnBabVoxYzJVSkNWSkZYMGx1WkdseVpXTjBSR2xtWm5WelpWOUNiR2x1YmxCb2IyNW5DaU5rWldacGJtVWdUV0YwWlhKcFlXeGZUR2xuYUhSUWNtOWlaVXhQUkNnZ2JXRjBaWEpwWVd3Z0tRa29NQ2xnTENCamNDQTlJR0JRYUhsemFXTmhiRTFoZEdWeWFXRnNJRzFoZEdWeWFXRnNPd3B0WVhSbGNtbGhiQzVrYVdabWRYTmxRMjlzYjNJZ1BTQmthV1ptZFhObFEyOXNiM0l1Y21kaUlDb2dLQ0F4TGpBZ0xTQnRaWFJoYkc1bGMzTkdZV04wYjNJZ0tUc0tkbVZqTXlCa2VIa2dQU0J0WVhnb0lHRmljeWdnWkVaa2VDZ2daMlZ2YldWMGNubE9iM0p0WVd3Z0tTQXBMQ0JoWW5Nb0lHUkdaSGtvSUdkbGIyMWxkSEo1VG05eWJXRnNJQ2tnS1NBcE93cG1iRzloZENCblpXOXRaWFJ5ZVZKdmRXZG9ibVZ6Y3lBOUlHMWhlQ2dnYldGNEtDQmtlSGt1ZUN3Z1pIaDVMbmtnS1N3Z1pIaDVMbm9nS1RzS2JXRjBaWEpwWVd3dWNtOTFaMmh1WlhOeklEMGdiV0Y0S0NCeWIzVm5hRzVsYzNOR1lXTjBiM0lzSURBdU1EVXlOU0FwTzIxaGRHVnlhV0ZzTG5KdmRXZG9ibVZ6Y3lBclBTQm5aVzl0WlhSeWVWSnZkV2RvYm1WemN6c0tiV0YwWlhKcFlXd3VjbTkxWjJodVpYTnpJRDBnYldsdUtDQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTXNJREV1TUNBcE93b2phV1prWldZZ1NVOVNDZ2tqYVdaa1pXWWdVMUJGUTFWTVFWSUtDUWxtYkc5aGRDQnpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVWmhZM1J2Y2lBOUlITndaV04xYkdGeVNXNTBaVzV6YVhSNU93b0pDWFpsWXpNZ2MzQmxZM1ZzWVhKRGIyeHZja1poWTNSdmNpQTlJSE53WldOMWJHRnlRMjlzYjNJN0Nna0pJMmxtWkdWbUlGVlRSVjlUVUVWRFZVeEJVa2xPVkVWT1UwbFVXVTFCVUFvSkNRbHpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVWmhZM1J2Y2lBcVBTQjBaWGgwZFhKbE1rUW9JSE53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3TENCMlZYWWdLUzVoT3dvSkNTTmxibVJwWmdvSkNTTnBabVJsWmlCVlUwVmZVMUJGUTFWTVFWSkRUMHhQVWsxQlVBb0pDUWx6Y0dWamRXeGhja052Ykc5eVJtRmpkRzl5SUNvOUlITndaV04xYkdGeVEyOXNiM0pOWVhCVVpYaGxiRlJ2VEdsdVpXRnlLQ0IwWlhoMGRYSmxNa1FvSUhOd1pXTjFiR0Z5UTI5c2IzSk5ZWEFzSUhaVmRpQXBJQ2t1Y21kaU93b0pDU05sYm1ScFpnb0pDVzFoZEdWeWFXRnNMbk53WldOMWJHRnlSamt3SUQwZ2JXbDRLQ0J6Y0dWamRXeGhja2x1ZEdWdWMybDBlVVpoWTNSdmNpd2dNUzR3TENCdFpYUmhiRzVsYzNOR1lXTjBiM0lnS1RzS0NTTmxiSE5sQ2drSlpteHZZWFFnYzNCbFkzVnNZWEpKYm5SbGJuTnBkSGxHWVdOMGIzSWdQU0F4TGpBN0Nna0pkbVZqTXlCemNHVmpkV3hoY2tOdmJHOXlSbUZqZEc5eUlEMGdkbVZqTXlnZ01TNHdJQ2s3Q2drSmJXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKR09UQWdQU0F4TGpBN0Nna2paVzVrYVdZS0NXMWhkR1Z5YVdGc0xuTndaV04xYkdGeVEyOXNiM0lnUFNCdGFYZ29JRzFwYmlnZ2NHOTNNaWdnS0NCcGIzSWdMU0F4TGpBZ0tTQXZJQ2dnYVc5eUlDc2dNUzR3SUNrZ0tTQXFJSE53WldOMWJHRnlRMjlzYjNKR1lXTjBiM0lzSUhabFl6TW9JREV1TUNBcElDa2dLaUJ6Y0dWamRXeGhja2x1ZEdWdWMybDBlVVpoWTNSdmNpd2daR2xtWm5WelpVTnZiRzl5TG5Kbllpd2diV1YwWVd4dVpYTnpSbUZqZEc5eUlDazdDaU5sYkhObENnbHRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5SUQwZ2JXbDRLQ0IyWldNektDQXdMakEwSUNrc0lHUnBabVoxYzJWRGIyeHZjaTV5WjJJc0lHMWxkR0ZzYm1WemMwWmhZM1J2Y2lBcE93b0piV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkdPVEFnUFNBeExqQTdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwSUQwZ1kyeGxZWEpqYjJGME93b0piV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJRDBnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56T3dvSmJXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMFJqQWdQU0IyWldNektDQXdMakEwSUNrN0NnbHRZWFJsY21saGJDNWpiR1ZoY21OdllYUkdPVEFnUFNBeExqQTdDZ2tqYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkUxQlVBb0pDVzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkQ0FxUFNCMFpYaDBkWEpsTWtRb0lHTnNaV0Z5WTI5aGRFMWhjQ3dnZGxWMklDa3VlRHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5RFRFVkJVa05QUVZSZlVrOVZSMGhPUlZOVFRVRlFDZ2tKYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNvOUlIUmxlSFIxY21VeVJDZ2dZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3TENCMlZYWWdLUzU1T3dvSkkyVnVaR2xtQ2dsdFlYUmxjbWxoYkM1amJHVmhjbU52WVhRZ1BTQnpZWFIxY21GMFpTZ2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBJQ2s3Q1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBOUlHMWhlQ2dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56TENBd0xqQTFNalVnS1RzS0NXMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN5QXJQU0JuWlc5dFpYUnllVkp2ZFdkb2JtVnpjenNLQ1cxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBOUlHMXBiaWdnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56TENBeExqQWdLVHNLSTJWdVpHbG1DaU5wWm1SbFppQlZVMFZmVTBoRlJVNEtDVzFoZEdWeWFXRnNMbk5vWldWdVEyOXNiM0lnUFNCemFHVmxia052Ykc5eU93b0pJMmxtWkdWbUlGVlRSVjlUU0VWRlRrTlBURTlTVFVGUUNna0piV0YwWlhKcFlXd3VjMmhsWlc1RGIyeHZjaUFxUFNCemFHVmxia052Ykc5eVRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRkSFZ5WlRKRUtDQnphR1ZsYmtOdmJHOXlUV0Z3TENCMlZYWWdLU0FwTG5Kbllqc0tDU05sYm1ScFpnb0piV0YwWlhKcFlXd3VjMmhsWlc1U2IzVm5hRzVsYzNNZ1BTQmpiR0Z0Y0NnZ2MyaGxaVzVTYjNWbmFHNWxjM01zSURBdU1EY3NJREV1TUNBcE93b0pJMmxtWkdWbUlGVlRSVjlUU0VWRlRsSlBWVWRJVGtWVFUwMUJVQW9KQ1cxaGRHVnlhV0ZzTG5Ob1pXVnVVbTkxWjJodVpYTnpJQ285SUhSbGVIUjFjbVV5UkNnZ2MyaGxaVzVTYjNWbmFHNWxjM05OWVhBc0lIWlZkaUFwTG1FN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z2FIQWdQU0JnYzNSeWRXTjBJRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2dld29KZG1Wak15QmthV1ptZFhObFEyOXNiM0k3Q2dsbWJHOWhkQ0J5YjNWbmFHNWxjM003Q2dsMlpXTXpJSE53WldOMWJHRnlRMjlzYjNJN0NnbG1iRzloZENCemNHVmpkV3hoY2tZNU1Ec0tDU05wWm1SbFppQlZVMFZmUTB4RlFWSkRUMEZVQ2drSlpteHZZWFFnWTJ4bFlYSmpiMkYwT3dvSkNXWnNiMkYwSUdOc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3pzS0NRbDJaV016SUdOc1pXRnlZMjloZEVZd093b0pDV1pzYjJGMElHTnNaV0Z5WTI5aGRFWTVNRHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUZ29KQ1habFl6TWdjMmhsWlc1RGIyeHZjanNLQ1FsbWJHOWhkQ0J6YUdWbGJsSnZkV2RvYm1WemN6c0tDU05sYm1ScFpncDlPd3AyWldNeklHTnNaV0Z5WTI5aGRGTndaV04xYkdGeUlEMGdkbVZqTXlnZ01DNHdJQ2s3Q25abFl6TWdjMmhsWlc1VGNHVmpkV3hoY2lBOUlIWmxZek1vSURBdU1DQXBPd3BtYkc5aGRDQkpRa3hUYUdWbGJrSlNSRVlvSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0xDQmpiMjV6ZENCcGJpQjJaV016SUhacFpYZEVhWElzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEp2ZFdkb2JtVnpjeWtnZXdvSlpteHZZWFFnWkc5MFRsWWdQU0J6WVhSMWNtRjBaU2dnWkc5MEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJZ0tTQXBPd29KWm14dllYUWdjaklnUFNCeWIzVm5hRzVsYzNNZ0tpQnliM1ZuYUc1bGMzTTdDZ2xtYkc5aGRDQmhJRDBnY205MVoyaHVaWE56SUR3Z01DNHlOU0EvSUMwek16a3VNaUFxSUhJeUlDc2dNVFl4TGpRZ0tpQnliM1ZuYUc1bGMzTWdMU0F5TlM0NUlEb2dMVGd1TkRnZ0tpQnlNaUFySURFMExqTWdLaUJ5YjNWbmFHNWxjM01nTFNBNUxqazFPd29KWm14dllYUWdZaUE5SUhKdmRXZG9ibVZ6Y3lBOElEQXVNalVnUHlBME5DNHdJQ29nY2pJZ0xTQXlNeTQzSUNvZ2NtOTFaMmh1WlhOeklDc2dNeTR5TmlBNklERXVPVGNnS2lCeU1pQXRJRE11TWpjZ0tpQnliM1ZuYUc1bGMzTWdLeUF3TGpjeU93b0pabXh2WVhRZ1JFY2dQU0JsZUhBb0lHRWdLaUJrYjNST1ZpQXJJR0lnS1NBcklDZ2djbTkxWjJodVpYTnpJRHdnTUM0eU5TQS9JREF1TUNBNklEQXVNU0FxSUNnZ2NtOTFaMmh1WlhOeklDMGdNQzR5TlNBcElDazdDZ2x5WlhSMWNtNGdjMkYwZFhKaGRHVW9JRVJISUNvZ1VrVkRTVkJTVDBOQlRGOVFTU0FwT3dwOUNuWmxZeklnUkVaSFFYQndjbTk0S0NCamIyNXpkQ0JwYmlCMlpXTXpJRzV2Y20xaGJDd2dZMjl1YzNRZ2FXNGdkbVZqTXlCMmFXVjNSR2x5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0J5YjNWbmFHNWxjM01nS1NCN0NnbG1iRzloZENCa2IzUk9WaUE5SUhOaGRIVnlZWFJsS0NCa2IzUW9JRzV2Y20xaGJDd2dkbWxsZDBScGNpQXBJQ2s3Q2dsamIyNXpkQ0IyWldNMElHTXdJRDBnZG1Wak5DZ2dMU0F4TENBdElEQXVNREkzTlN3Z0xTQXdMalUzTWl3Z01DNHdNaklnS1RzS0NXTnZibk4wSUhabFl6UWdZekVnUFNCMlpXTTBLQ0F4TENBd0xqQTBNalVzSURFdU1EUXNJQzBnTUM0d05DQXBPd29KZG1Wak5DQnlJRDBnY205MVoyaHVaWE56SUNvZ1l6QWdLeUJqTVRzS0NXWnNiMkYwSUdFd01EUWdQU0J0YVc0b0lISXVlQ0FxSUhJdWVDd2daWGh3TWlnZ0xTQTVMakk0SUNvZ1pHOTBUbFlnS1NBcElDb2djaTU0SUNzZ2NpNTVPd29KZG1Wak1pQm1ZV0lnUFNCMlpXTXlLQ0F0SURFdU1EUXNJREV1TURRZ0tTQXFJR0V3TURRZ0t5QnlMbnAzT3dvSmNtVjBkWEp1SUdaaFlqc0tmUXAyWldNeklFVnVkbWx5YjI1dFpXNTBRbEpFUmlnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJ1YjNKdFlXd3NJR052Ym5OMElHbHVJSFpsWXpNZ2RtbGxkMFJwY2l3Z1kyOXVjM1FnYVc0Z2RtVmpNeUJ6Y0dWamRXeGhja052Ykc5eUxDQmpiMjV6ZENCcGJpQm1iRzloZENCemNHVmpkV3hoY2tZNU1Dd2dZMjl1YzNRZ2FXNGdabXh2WVhRZ2NtOTFaMmh1WlhOeklDa2dld29KZG1Wak1pQm1ZV0lnUFNCRVJrZEJjSEJ5YjNnb0lHNXZjbTFoYkN3Z2RtbGxkMFJwY2l3Z2NtOTFaMmh1WlhOeklDazdDZ2x5WlhSMWNtNGdjM0JsWTNWc1lYSkRiMnh2Y2lBcUlHWmhZaTU0SUNzZ2MzQmxZM1ZzWVhKR09UQWdLaUJtWVdJdWVUc0tmUXAyYjJsa0lHTnZiWEIxZEdWTmRXeDBhWE5qWVhSMFpYSnBibWNvSUdOdmJuTjBJR2x1SUhabFl6TWdibTl5YldGc0xDQmpiMjV6ZENCcGJpQjJaV016SUhacFpYZEVhWElzSUdOdmJuTjBJR2x1SUhabFl6TWdjM0JsWTNWc1lYSkRiMnh2Y2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnYzNCbFkzVnNZWEpHT1RBc0lHTnZibk4wSUdsdUlHWnNiMkYwSUhKdmRXZG9ibVZ6Y3l3Z2FXNXZkWFFnZG1Wak15QnphVzVuYkdWVFkyRjBkR1Z5TENCcGJtOTFkQ0IyWldNeklHMTFiSFJwVTJOaGRIUmxjaUFwSUhzS0NYWmxZeklnWm1GaUlEMGdSRVpIUVhCd2NtOTRLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSXNJSEp2ZFdkb2JtVnpjeUFwT3dvSmRtVmpNeUJHYzNORmMzTWdQU0J6Y0dWamRXeGhja052Ykc5eUlDb2dabUZpTG5nZ0t5QnpjR1ZqZFd4aGNrWTVNQ0FxSUdaaFlpNTVPd29KWm14dllYUWdSWE56SUQwZ1ptRmlMbmdnS3lCbVlXSXVlVHNLQ1dac2IyRjBJRVZ0Y3lBOUlERXVNQ0F0SUVWemN6c0tDWFpsWXpNZ1JtRjJaeUE5SUhOd1pXTjFiR0Z5UTI5c2IzSWdLeUFvSURFdU1DQXRJSE53WldOMWJHRnlRMjlzYjNJZ0tTQXFJREF1TURRM05qRTVPd2wyWldNeklFWnRjeUE5SUVaemMwVnpjeUFxSUVaaGRtY2dMeUFvSURFdU1DQXRJRVZ0Y3lBcUlFWmhkbWNnS1RzS0NYTnBibWRzWlZOallYUjBaWElnS3owZ1JuTnpSWE56T3dvSmJYVnNkR2xUWTJGMGRHVnlJQ3M5SUVadGN5QXFJRVZ0Y3pzS2ZRb2phV1lnVGxWTlgxSkZRMVJmUVZKRlFWOU1TVWRJVkZNZ1BpQXdDZ2wyYjJsa0lGSkZYMFJwY21WamRGOVNaV04wUVhKbFlWOVFhSGx6YVdOaGJDZ2dZMjl1YzNRZ2FXNGdVbVZqZEVGeVpXRk1hV2RvZENCeVpXTjBRWEpsWVV4cFoyaDBMQ0JqYjI1emRDQnBiaUJIWlc5dFpYUnlhV05EYjI1MFpYaDBJR2RsYjIxbGRISjVMQ0JqYjI1emRDQnBiaUJRYUhsemFXTmhiRTFoZEdWeWFXRnNJRzFoZEdWeWFXRnNMQ0JwYm05MWRDQlNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0FwSUhzS0NRbDJaV016SUc1dmNtMWhiQ0E5SUdkbGIyMWxkSEo1TG01dmNtMWhiRHNLQ1FsMlpXTXpJSFpwWlhkRWFYSWdQU0JuWlc5dFpYUnllUzUyYVdWM1JHbHlPd29KQ1habFl6TWdjRzl6YVhScGIyNGdQU0JuWlc5dFpYUnllUzV3YjNOcGRHbHZianNLQ1FsMlpXTXpJR3hwWjJoMFVHOXpJRDBnY21WamRFRnlaV0ZNYVdkb2RDNXdiM05wZEdsdmJqc0tDUWwyWldNeklHaGhiR1pYYVdSMGFDQTlJSEpsWTNSQmNtVmhUR2xuYUhRdWFHRnNabGRwWkhSb093b0pDWFpsWXpNZ2FHRnNaa2hsYVdkb2RDQTlJSEpsWTNSQmNtVmhUR2xuYUhRdWFHRnNaa2hsYVdkb2REc0tDUWwyWldNeklHeHBaMmgwUTI5c2IzSWdQU0J5WldOMFFYSmxZVXhwWjJoMExtTnZiRzl5T3dvSkNXWnNiMkYwSUhKdmRXZG9ibVZ6Y3lBOUlHMWhkR1Z5YVdGc0xuSnZkV2RvYm1WemN6c0tDUWwyWldNeklISmxZM1JEYjI5eVpITmJJRFFnWFRzS0NRbHlaV04wUTI5dmNtUnpXeUF3SUYwZ1BTQnNhV2RvZEZCdmN5QXJJR2hoYkdaWGFXUjBhQ0F0SUdoaGJHWklaV2xuYUhRN0NRbHlaV04wUTI5dmNtUnpXeUF4SUYwZ1BTQnNhV2RvZEZCdmN5QXRJR2hoYkdaWGFXUjBhQ0F0SUdoaGJHWklaV2xuYUhRN0Nna0pjbVZqZEVOdmIzSmtjMXNnTWlCZElEMGdiR2xuYUhSUWIzTWdMU0JvWVd4bVYybGtkR2dnS3lCb1lXeG1TR1ZwWjJoME93b0pDWEpsWTNSRGIyOXlaSE5iSURNZ1hTQTlJR3hwWjJoMFVHOXpJQ3NnYUdGc1psZHBaSFJvSUNzZ2FHRnNaa2hsYVdkb2REc0tDUWwyWldNeUlIVjJJRDBnVEZSRFgxVjJLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSXNJSEp2ZFdkb2JtVnpjeUFwT3dvSkNYWmxZelFnZERFZ1BTQjBaWGgwZFhKbE1rUW9JR3gwWTE4eExDQjFkaUFwT3dvSkNYWmxZelFnZERJZ1BTQjBaWGgwZFhKbE1rUW9JR3gwWTE4eUxDQjFkaUFwT3dvSkNXMWhkRE1nYlVsdWRpQTlJRzFoZERNb0Nna0pDWFpsWXpNb0lIUXhMbmdzSURBc0lIUXhMbmtnS1N3S0NRa0pkbVZqTXlnZ0lDQWdNQ3dnTVN3Z0lDQWdNQ0FwTEFvSkNRbDJaV016S0NCME1TNTZMQ0F3TENCME1TNTNJQ2tLQ1FrcE93b0pDWFpsWXpNZ1puSmxjMjVsYkNBOUlDZ2diV0YwWlhKcFlXd3VjM0JsWTNWc1lYSkRiMnh2Y2lBcUlIUXlMbmdnS3lBb0lIWmxZek1vSURFdU1DQXBJQzBnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpEYjJ4dmNpQXBJQ29nZERJdWVTQXBPd29KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRGTndaV04xYkdGeUlDczlJR3hwWjJoMFEyOXNiM0lnS2lCbWNtVnpibVZzSUNvZ1RGUkRYMFYyWVd4MVlYUmxLQ0J1YjNKdFlXd3NJSFpwWlhkRWFYSXNJSEJ2YzJsMGFXOXVMQ0J0U1c1MkxDQnlaV04wUTI5dmNtUnpJQ2s3Q2drSmNtVm1iR1ZqZEdWa1RHbG5hSFF1WkdseVpXTjBSR2xtWm5WelpTQXJQU0JzYVdkb2RFTnZiRzl5SUNvZ2JXRjBaWEpwWVd3dVpHbG1ablZ6WlVOdmJHOXlJQ29nVEZSRFgwVjJZV3gxWVhSbEtDQnViM0p0WVd3c0lIWnBaWGRFYVhJc0lIQnZjMmwwYVc5dUxDQnRZWFF6S0NBeExqQWdLU3dnY21WamRFTnZiM0prY3lBcE93b0pmUW9qWlc1a2FXWUtkbTlwWkNCU1JWOUVhWEpsWTNSZlVHaDVjMmxqWVd3b0lHTnZibk4wSUdsdUlFbHVZMmxrWlc1MFRHbG5hSFFnWkdseVpXTjBUR2xuYUhRc0lHTnZibk4wSUdsdUlFZGxiMjFsZEhKcFkwTnZiblJsZUhRZ1oyVnZiV1YwY25rc0lHTnZibk4wSUdsdUlGQm9lWE5wWTJGc1RXRjBaWEpwWVd3Z2JXRjBaWEpwWVd3c0lHbHViM1YwSUZKbFpteGxZM1JsWkV4cFoyaDBJSEpsWm14bFkzUmxaRXhwWjJoMElDa2dld29KWm14dllYUWdaRzkwVGt3Z1BTQnpZWFIxY21GMFpTZ2daRzkwS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dzSUdScGNtVmpkRXhwWjJoMExtUnBjbVZqZEdsdmJpQXBJQ2s3Q2dsMlpXTXpJR2x5Y21Ga2FXRnVZMlVnUFNCa2IzUk9UQ0FxSUdScGNtVmpkRXhwWjJoMExtTnZiRzl5T3dvSkkybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUUtDUWxtYkc5aGRDQmtiM1JPVEdOaklEMGdjMkYwZFhKaGRHVW9JR1J2ZENnZ1oyVnZiV1YwY25rdVkyeGxZWEpqYjJGMFRtOXliV0ZzTENCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNGdLU0FwT3dvSkNYWmxZek1nWTJOSmNuSmhaR2xoYm1ObElEMGdaRzkwVGt4all5QXFJR1JwY21WamRFeHBaMmgwTG1OdmJHOXlPd29KQ1dOc1pXRnlZMjloZEZOd1pXTjFiR0Z5SUNzOUlHTmpTWEp5WVdScFlXNWpaU0FxSUVKU1JFWmZSMGRZS0NCa2FYSmxZM1JNYVdkb2RDNWthWEpsWTNScGIyNHNJR2RsYjIxbGRISjVMblpwWlhkRWFYSXNJR2RsYjIxbGRISjVMbU5zWldGeVkyOWhkRTV2Y20xaGJDd2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBSakFzSUcxaGRHVnlhV0ZzTG1Oc1pXRnlZMjloZEVZNU1Dd2diV0YwWlhKcFlXd3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpJQ2s3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlUwaEZSVTRLQ1FsemFHVmxibE53WldOMWJHRnlJQ3M5SUdseWNtRmthV0Z1WTJVZ0tpQkNVa1JHWDFOb1pXVnVLQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHZGxiMjFsZEhKNUxtNXZjbTFoYkN3Z2JXRjBaWEpwWVd3dWMyaGxaVzVEYjJ4dmNpd2diV0YwWlhKcFlXd3VjMmhsWlc1U2IzVm5hRzVsYzNNZ0tUc0tDU05sYm1ScFpnb0pjbVZtYkdWamRHVmtUR2xuYUhRdVpHbHlaV04wVTNCbFkzVnNZWElnS3owZ2FYSnlZV1JwWVc1alpTQXFJRUpTUkVaZlIwZFlLQ0JrYVhKbFkzUk1hV2RvZEM1a2FYSmxZM1JwYjI0c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHZGxiMjFsZEhKNUxtNXZjbTFoYkN3Z2JXRjBaWEpwWVd3dWMzQmxZM1ZzWVhKRGIyeHZjaXdnYldGMFpYSnBZV3d1YzNCbFkzVnNZWEpHT1RBc0lHMWhkR1Z5YVdGc0xuSnZkV2RvYm1WemN5QXBPd29KY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFJHbG1ablZ6WlNBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOU1ZVzFpWlhKMEtDQnRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnS1RzS2ZRcDJiMmxrSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlY5UWFIbHphV05oYkNnZ1kyOXVjM1FnYVc0Z2RtVmpNeUJwY25KaFpHbGhibU5sTENCamIyNXpkQ0JwYmlCSFpXOXRaWFJ5YVdORGIyNTBaWGgwSUdkbGIyMWxkSEo1TENCamIyNXpkQ0JwYmlCUWFIbHphV05oYkUxaGRHVnlhV0ZzSUcxaGRHVnlhV0ZzTENCcGJtOTFkQ0JTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBcElIc0tDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBclBTQnBjbkpoWkdsaGJtTmxJQ29nUWxKRVJsOU1ZVzFpWlhKMEtDQnRZWFJsY21saGJDNWthV1ptZFhObFEyOXNiM0lnS1RzS2ZRcDJiMmxrSUZKRlgwbHVaR2x5WldOMFUzQmxZM1ZzWVhKZlVHaDVjMmxqWVd3b0lHTnZibk4wSUdsdUlIWmxZek1nY21Ga2FXRnVZMlVzSUdOdmJuTjBJR2x1SUhabFl6TWdhWEp5WVdScFlXNWpaU3dnWTI5dWMzUWdhVzRnZG1Wak15QmpiR1ZoY21OdllYUlNZV1JwWVc1alpTd2dZMjl1YzNRZ2FXNGdSMlZ2YldWMGNtbGpRMjl1ZEdWNGRDQm5aVzl0WlhSeWVTd2dZMjl1YzNRZ2FXNGdVR2g1YzJsallXeE5ZWFJsY21saGJDQnRZWFJsY21saGJDd2dhVzV2ZFhRZ1VtVm1iR1ZqZEdWa1RHbG5hSFFnY21WbWJHVmpkR1ZrVEdsbmFIUXBJSHNLQ1NOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVUNna0pZMnhsWVhKamIyRjBVM0JsWTNWc1lYSWdLejBnWTJ4bFlYSmpiMkYwVW1Ga2FXRnVZMlVnS2lCRmJuWnBjbTl1YldWdWRFSlNSRVlvSUdkbGIyMWxkSEo1TG1Oc1pXRnlZMjloZEU1dmNtMWhiQ3dnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaXdnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwUmpBc0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRFWTVNQ3dnYldGMFpYSnBZV3d1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56SUNrN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZVMGhGUlU0S0NRbHphR1ZsYmxOd1pXTjFiR0Z5SUNzOUlHbHljbUZrYVdGdVkyVWdLaUJ0WVhSbGNtbGhiQzV6YUdWbGJrTnZiRzl5SUNvZ1NVSk1VMmhsWlc1Q1VrUkdLQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJR2RsYjIxbGRISjVMblpwWlhkRWFYSXNJRzFoZEdWeWFXRnNMbk5vWldWdVVtOTFaMmh1WlhOeklDazdDZ2tqWlc1a2FXWUtDWFpsWXpNZ2MybHVaMnhsVTJOaGRIUmxjbWx1WnlBOUlIWmxZek1vSURBdU1DQXBPd29KZG1Wak15QnRkV3gwYVZOallYUjBaWEpwYm1jZ1BTQjJaV016S0NBd0xqQWdLVHNLQ1habFl6TWdZMjl6YVc1bFYyVnBaMmgwWldSSmNuSmhaR2xoYm1ObElEMGdhWEp5WVdScFlXNWpaU0FxSUZKRlEwbFFVazlEUVV4ZlVFazdDZ2xqYjIxd2RYUmxUWFZzZEdselkyRjBkR1Z5YVc1bktDQm5aVzl0WlhSeWVTNXViM0p0WVd3c0lHZGxiMjFsZEhKNUxuWnBaWGRFYVhJc0lHMWhkR1Z5YVdGc0xuTndaV04xYkdGeVEyOXNiM0lzSUcxaGRHVnlhV0ZzTG5Od1pXTjFiR0Z5Umprd0xDQnRZWFJsY21saGJDNXliM1ZuYUc1bGMzTXNJSE5wYm1kc1pWTmpZWFIwWlhKcGJtY3NJRzExYkhScFUyTmhkSFJsY21sdVp5QXBPd29KZG1Wak15QmthV1ptZFhObElEMGdiV0YwWlhKcFlXd3VaR2xtWm5WelpVTnZiRzl5SUNvZ0tDQXhMakFnTFNBb0lITnBibWRzWlZOallYUjBaWEpwYm1jZ0t5QnRkV3gwYVZOallYUjBaWEpwYm1jZ0tTQXBPd29KY21WbWJHVmpkR1ZrVEdsbmFIUXVhVzVrYVhKbFkzUlRjR1ZqZFd4aGNpQXJQU0J5WVdScFlXNWpaU0FxSUhOcGJtZHNaVk5qWVhSMFpYSnBibWM3Q2dseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRk53WldOMWJHRnlJQ3M5SUcxMWJIUnBVMk5oZEhSbGNtbHVaeUFxSUdOdmMybHVaVmRsYVdkb2RHVmtTWEp5WVdScFlXNWpaVHNLQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBSR2xtWm5WelpTQXJQU0JrYVdabWRYTmxJQ29nWTI5emFXNWxWMlZwWjJoMFpXUkpjbkpoWkdsaGJtTmxPd3A5Q2lOa1pXWnBibVVnVWtWZlJHbHlaV04wQ1FrSkNWSkZYMFJwY21WamRGOVFhSGx6YVdOaGJBb2paR1ZtYVc1bElGSkZYMFJwY21WamRGOVNaV04wUVhKbFlRa0pVa1ZmUkdseVpXTjBYMUpsWTNSQmNtVmhYMUJvZVhOcFkyRnNDaU5rWldacGJtVWdVa1ZmU1c1a2FYSmxZM1JFYVdabWRYTmxDUWxTUlY5SmJtUnBjbVZqZEVScFptWjFjMlZmVUdoNWMybGpZV3dLSTJSbFptbHVaU0JTUlY5SmJtUnBjbVZqZEZOd1pXTjFiR0Z5Q1FsU1JWOUpibVJwY21WamRGTndaV04xYkdGeVgxQm9lWE5wWTJGc0NtWnNiMkYwSUdOdmJYQjFkR1ZUY0dWamRXeGhjazlqWTJ4MWMybHZiaWdnWTI5dWMzUWdhVzRnWm14dllYUWdaRzkwVGxZc0lHTnZibk4wSUdsdUlHWnNiMkYwSUdGdFltbGxiblJQWTJOc2RYTnBiMjRzSUdOdmJuTjBJR2x1SUdac2IyRjBJSEp2ZFdkb2JtVnpjeUFwSUhzS0NYSmxkSFZ5YmlCellYUjFjbUYwWlNnZ2NHOTNLQ0JrYjNST1ZpQXJJR0Z0WW1sbGJuUlBZMk5zZFhOcGIyNHNJR1Y0Y0RJb0lDMGdNVFl1TUNBcUlISnZkV2RvYm1WemN5QXRJREV1TUNBcElDa2dMU0F4TGpBZ0t5QmhiV0pwWlc1MFQyTmpiSFZ6YVc5dUlDazdDbjFnTENCMWNDQTlJR0FLUjJWdmJXVjBjbWxqUTI5dWRHVjRkQ0JuWlc5dFpYUnllVHNLWjJWdmJXVjBjbmt1Y0c5emFYUnBiMjRnUFNBdElIWldhV1YzVUc5emFYUnBiMjQ3Q21kbGIyMWxkSEo1TG01dmNtMWhiQ0E5SUc1dmNtMWhiRHNLWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaUE5SUNnZ2FYTlBjblJvYjJkeVlYQm9hV01nS1NBL0lIWmxZek1vSURBc0lEQXNJREVnS1NBNklHNXZjbTFoYkdsNlpTZ2dkbFpwWlhkUWIzTnBkR2x2YmlBcE93b2phV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWQW9KWjJWdmJXVjBjbmt1WTJ4bFlYSmpiMkYwVG05eWJXRnNJRDBnWTJ4bFlYSmpiMkYwVG05eWJXRnNPd29qWlc1a2FXWUtTVzVqYVdSbGJuUk1hV2RvZENCa2FYSmxZM1JNYVdkb2REc0tJMmxtSUNnZ1RsVk5YMUJQU1U1VVgweEpSMGhVVXlBK0lEQWdLU0FtSmlCa1pXWnBibVZrS0NCU1JWOUVhWEpsWTNRZ0tRb0pVRzlwYm5STWFXZG9kQ0J3YjJsdWRFeHBaMmgwT3dvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5VFNFRkVUMWROUVZBZ0tTQW1KaUJPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QStJREFLQ1ZCdmFXNTBUR2xuYUhSVGFHRmtiM2NnY0c5cGJuUk1hV2RvZEZOb1lXUnZkenNLQ1NObGJtUnBaZ29KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMUJQU1U1VVgweEpSMGhVVXpzZ2FTQXJLeUFwSUhzS0NRbHdiMmx1ZEV4cFoyaDBJRDBnY0c5cGJuUk1hV2RvZEhOYklHa2dYVHNLQ1FsblpYUlFiMmx1ZEV4cFoyaDBTVzVtYnlnZ2NHOXBiblJNYVdkb2RDd2daMlZ2YldWMGNua3NJR1JwY21WamRFeHBaMmgwSUNrN0Nna0pJMmxtSUdSbFptbHVaV1FvSUZWVFJWOVRTRUZFVDFkTlFWQWdLU0FtSmlBb0lGVk9VazlNVEVWRVgweFBUMUJmU1U1RVJWZ2dQQ0JPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QXBDZ2tKY0c5cGJuUk1hV2RvZEZOb1lXUnZkeUE5SUhCdmFXNTBUR2xuYUhSVGFHRmtiM2R6V3lCcElGMDdDZ2tKWkdseVpXTjBUR2xuYUhRdVkyOXNiM0lnS2owZ1lXeHNLQ0JpZG1Wak1pZ2daR2x5WldOMFRHbG5hSFF1ZG1semFXSnNaU3dnY21WalpXbDJaVk5vWVdSdmR5QXBJQ2tnUHlCblpYUlFiMmx1ZEZOb1lXUnZkeWdnY0c5cGJuUlRhR0ZrYjNkTllYQmJJR2tnWFN3Z2NHOXBiblJNYVdkb2RGTm9ZV1J2ZHk1emFHRmtiM2ROWVhCVGFYcGxMQ0J3YjJsdWRFeHBaMmgwVTJoaFpHOTNMbk5vWVdSdmQwSnBZWE1zSUhCdmFXNTBUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNVbUZrYVhWekxDQjJVRzlwYm5SVGFHRmtiM2REYjI5eVpGc2dhU0JkTENCd2IybHVkRXhwWjJoMFUyaGhaRzkzTG5Ob1lXUnZkME5oYldWeVlVNWxZWElzSUhCdmFXNTBUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNRMkZ0WlhKaFJtRnlJQ2tnT2lBeExqQTdDZ2tKSTJWdVpHbG1DZ2tKVWtWZlJHbHlaV04wS0NCa2FYSmxZM1JNYVdkb2RDd2daMlZ2YldWMGNua3NJRzFoZEdWeWFXRnNMQ0J5Wldac1pXTjBaV1JNYVdkb2RDQXBPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLSTJWdVpHbG1DaU5wWmlBb0lFNVZUVjlUVUU5VVgweEpSMGhVVXlBK0lEQWdLU0FtSmlCa1pXWnBibVZrS0NCU1JWOUVhWEpsWTNRZ0tRb0pVM0J2ZEV4cFoyaDBJSE53YjNSTWFXZG9kRHNLQ1NOcFppQmtaV1pwYm1Wa0tDQlZVMFZmVTBoQlJFOVhUVUZRSUNrZ0ppWWdUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDVk53YjNSTWFXZG9kRk5vWVdSdmR5QnpjRzkwVEdsbmFIUlRhR0ZrYjNjN0Nna2paVzVrYVdZS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZjM1JoY25RS0NXWnZjaUFvSUdsdWRDQnBJRDBnTURzZ2FTQThJRTVWVFY5VFVFOVVYMHhKUjBoVVV6c2dhU0FyS3lBcElIc0tDUWx6Y0c5MFRHbG5hSFFnUFNCemNHOTBUR2xuYUhSeld5QnBJRjA3Q2drSloyVjBVM0J2ZEV4cFoyaDBTVzVtYnlnZ2MzQnZkRXhwWjJoMExDQm5aVzl0WlhSeWVTd2daR2x5WldOMFRHbG5hSFFnS1RzS0NRa2phV1lnWkdWbWFXNWxaQ2dnVlZORlgxTklRVVJQVjAxQlVDQXBJQ1ltSUNnZ1ZVNVNUMHhNUlVSZlRFOVBVRjlKVGtSRldDQThJRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ0tRb0pDWE53YjNSTWFXZG9kRk5vWVdSdmR5QTlJSE53YjNSTWFXZG9kRk5vWVdSdmQzTmJJR2tnWFRzS0NRbGthWEpsWTNSTWFXZG9kQzVqYjJ4dmNpQXFQU0JoYkd3b0lHSjJaV015S0NCa2FYSmxZM1JNYVdkb2RDNTJhWE5wWW14bExDQnlaV05sYVhabFUyaGhaRzkzSUNrZ0tTQS9JR2RsZEZOb1lXUnZkeWdnYzNCdmRGTm9ZV1J2ZDAxaGNGc2dhU0JkTENCemNHOTBUR2xuYUhSVGFHRmtiM2N1YzJoaFpHOTNUV0Z3VTJsNlpTd2djM0J2ZEV4cFoyaDBVMmhoWkc5M0xuTm9ZV1J2ZDBKcFlYTXNJSE53YjNSTWFXZG9kRk5vWVdSdmR5NXphR0ZrYjNkU1lXUnBkWE1zSUhaVGNHOTBVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTQXBJRG9nTVM0d093b0pDU05sYm1ScFpnb0pDVkpGWDBScGNtVmpkQ2dnWkdseVpXTjBUR2xuYUhRc0lHZGxiMjFsZEhKNUxDQnRZWFJsY21saGJDd2djbVZtYkdWamRHVmtUR2xuYUhRZ0tUc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFpnb2phV1lnS0NCT1ZVMWZSRWxTWDB4SlIwaFVVeUErSURBZ0tTQW1KaUJrWldacGJtVmtLQ0JTUlY5RWFYSmxZM1FnS1FvSlJHbHlaV04wYVc5dVlXeE1hV2RvZENCa2FYSmxZM1JwYjI1aGJFeHBaMmgwT3dvSkkybG1JR1JsWm1sdVpXUW9JRlZUUlY5VFNFRkVUMWROUVZBZ0tTQW1KaUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2xFYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2M3Q2dralpXNWthV1lLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlFU1ZKZlRFbEhTRlJUT3lCcElDc3JJQ2tnZXdvSkNXUnBjbVZqZEdsdmJtRnNUR2xuYUhRZ1BTQmthWEpsWTNScGIyNWhiRXhwWjJoMGMxc2dhU0JkT3dvSkNXZGxkRVJwY21WamRHbHZibUZzVEdsbmFIUkpibVp2S0NCa2FYSmxZM1JwYjI1aGJFeHBaMmgwTENCblpXOXRaWFJ5ZVN3Z1pHbHlaV04wVEdsbmFIUWdLVHNLQ1FramFXWWdaR1ZtYVc1bFpDZ2dWVk5GWDFOSVFVUlBWMDFCVUNBcElDWW1JQ2dnVlU1U1QweE1SVVJmVEU5UFVGOUpUa1JGV0NBOElFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUFwQ2drSlpHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeUE5SUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzZHpXeUJwSUYwN0Nna0paR2x5WldOMFRHbG5hSFF1WTI5c2IzSWdLajBnWVd4c0tDQmlkbVZqTWlnZ1pHbHlaV04wVEdsbmFIUXVkbWx6YVdKc1pTd2djbVZqWldsMlpWTm9ZV1J2ZHlBcElDa2dQeUJuWlhSVGFHRmtiM2NvSUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd1d5QnBJRjBzSUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzY3VjMmhoWkc5M1RXRndVMmw2WlN3Z1pHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkeTV6YUdGa2IzZENhV0Z6TENCa2FYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNMbk5vWVdSdmQxSmhaR2wxY3l3Z2RrUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTQXBJRG9nTVM0d093b0pDU05sYm1ScFpnb0pDVkpGWDBScGNtVmpkQ2dnWkdseVpXTjBUR2xuYUhRc0lHZGxiMjFsZEhKNUxDQnRZWFJsY21saGJDd2djbVZtYkdWamRHVmtUR2xuYUhRZ0tUc0tDWDBLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZlpXNWtDaU5sYm1ScFpnb2phV1lnS0NCT1ZVMWZVa1ZEVkY5QlVrVkJYMHhKUjBoVVV5QStJREFnS1NBbUppQmtaV1pwYm1Wa0tDQlNSVjlFYVhKbFkzUmZVbVZqZEVGeVpXRWdLUW9KVW1WamRFRnlaV0ZNYVdkb2RDQnlaV04wUVhKbFlVeHBaMmgwT3dvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOXpkR0Z5ZEFvSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUbFZOWDFKRlExUmZRVkpGUVY5TVNVZElWRk03SUdrZ0t5c2dLU0I3Q2drSmNtVmpkRUZ5WldGTWFXZG9kQ0E5SUhKbFkzUkJjbVZoVEdsbmFIUnpXeUJwSUYwN0Nna0pVa1ZmUkdseVpXTjBYMUpsWTNSQmNtVmhLQ0J5WldOMFFYSmxZVXhwWjJoMExDQm5aVzl0WlhSeWVTd2diV0YwWlhKcFlXd3NJSEpsWm14bFkzUmxaRXhwWjJoMElDazdDZ2w5Q2dramNISmhaMjFoSUhWdWNtOXNiRjlzYjI5d1gyVnVaQW9qWlc1a2FXWUtJMmxtSUdSbFptbHVaV1FvSUZKRlgwbHVaR2x5WldOMFJHbG1ablZ6WlNBcENnbDJaV016SUdsaWJFbHljbUZrYVdGdVkyVWdQU0IyWldNektDQXdMakFnS1RzS0NYWmxZek1nYVhKeVlXUnBZVzVqWlNBOUlHZGxkRUZ0WW1sbGJuUk1hV2RvZEVseWNtRmthV0Z1WTJVb0lHRnRZbWxsYm5STWFXZG9kRU52Ykc5eUlDazdDZ2xwY25KaFpHbGhibU5sSUNzOUlHZGxkRXhwWjJoMFVISnZZbVZKY25KaFpHbGhibU5sS0NCc2FXZG9kRkJ5YjJKbExDQm5aVzl0WlhSeWVTNXViM0p0WVd3Z0tUc0tDU05wWmlBb0lFNVZUVjlJUlUxSlgweEpSMGhVVXlBK0lEQWdLUW9KQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1FsbWIzSWdLQ0JwYm5RZ2FTQTlJREE3SUdrZ1BDQk9WVTFmU0VWTlNWOU1TVWRJVkZNN0lHa2dLeXNnS1NCN0Nna0pDV2x5Y21Ga2FXRnVZMlVnS3owZ1oyVjBTR1Z0YVhOd2FHVnlaVXhwWjJoMFNYSnlZV1JwWVc1alpTZ2dhR1Z0YVhOd2FHVnlaVXhwWjJoMGMxc2dhU0JkTENCblpXOXRaWFJ5ZVM1dWIzSnRZV3dnS1RzS0NRbDlDZ2tKSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05sYm1ScFpnb2paVzVrYVdZS0kybG1JR1JsWm1sdVpXUW9JRkpGWDBsdVpHbHlaV04wVTNCbFkzVnNZWElnS1FvSmRtVmpNeUJ5WVdScFlXNWpaU0E5SUhabFl6TW9JREF1TUNBcE93b0pkbVZqTXlCamJHVmhjbU52WVhSU1lXUnBZVzVqWlNBOUlIWmxZek1vSURBdU1DQXBPd29qWlc1a2FXWmdMQ0JrY0NBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVWtWZlNXNWthWEpsWTNSRWFXWm1kWE5sSUNrS0NTTnBabVJsWmlCVlUwVmZURWxIU0ZSTlFWQUtDUWwyWldNMElHeHBaMmgwVFdGd1ZHVjRaV3dnUFNCMFpYaDBkWEpsTWtRb0lHeHBaMmgwVFdGd0xDQjJWWFl5SUNrN0Nna0pkbVZqTXlCc2FXZG9kRTFoY0VseWNtRmthV0Z1WTJVZ1BTQnNhV2RvZEUxaGNGUmxlR1ZzVkc5TWFXNWxZWElvSUd4cFoyaDBUV0Z3VkdWNFpXd2dLUzV5WjJJZ0tpQnNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVUc0tDUWtqYVdadVpHVm1JRkJJV1ZOSlEwRk1URmxmUTA5U1VrVkRWRjlNU1VkSVZGTUtDUWtKYkdsbmFIUk5ZWEJKY25KaFpHbGhibU5sSUNvOUlGQkpPd29KQ1NObGJtUnBaZ29KQ1dseWNtRmthV0Z1WTJVZ0t6MGdiR2xuYUhSTllYQkpjbkpoWkdsaGJtTmxPd29KSTJWdVpHbG1DZ2tqYVdZZ1pHVm1hVzVsWkNnZ1ZWTkZYMFZPVmsxQlVDQXBJQ1ltSUdSbFptbHVaV1FvSUZOVVFVNUVRVkpFSUNrZ0ppWWdaR1ZtYVc1bFpDZ2dSVTVXVFVGUVgxUlpVRVZmUTFWQ1JWOVZWaUFwQ2drSmFXSnNTWEp5WVdScFlXNWpaU0FyUFNCblpYUkpRa3hKY25KaFpHbGhibU5sS0NCblpXOXRaWFJ5ZVM1dWIzSnRZV3dnS1RzS0NTTmxibVJwWmdvalpXNWthV1lLSTJsbUlHUmxabWx1WldRb0lGVlRSVjlGVGxaTlFWQWdLU0FtSmlCa1pXWnBibVZrS0NCU1JWOUpibVJwY21WamRGTndaV04xYkdGeUlDa0tDWEpoWkdsaGJtTmxJQ3M5SUdkbGRFbENURkpoWkdsaGJtTmxLQ0JuWlc5dFpYUnllUzUyYVdWM1JHbHlMQ0JuWlc5dFpYUnllUzV1YjNKdFlXd3NJRzFoZEdWeWFXRnNMbkp2ZFdkb2JtVnpjeUFwT3dvSkkybG1aR1ZtSUZWVFJWOURURVZCVWtOUFFWUUtDUWxqYkdWaGNtTnZZWFJTWVdScFlXNWpaU0FyUFNCblpYUkpRa3hTWVdScFlXNWpaU2dnWjJWdmJXVjBjbmt1ZG1sbGQwUnBjaXdnWjJWdmJXVjBjbmt1WTJ4bFlYSmpiMkYwVG05eWJXRnNMQ0J0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM01nS1RzS0NTTmxibVJwWmdvalpXNWthV1pnTENCbWNDQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1VrVmZTVzVrYVhKbFkzUkVhV1ptZFhObElDa0tDVkpGWDBsdVpHbHlaV04wUkdsbVpuVnpaU2dnYVhKeVlXUnBZVzVqWlN3Z1oyVnZiV1YwY25rc0lHMWhkR1Z5YVdGc0xDQnlaV1pzWldOMFpXUk1hV2RvZENBcE93b2paVzVrYVdZS0kybG1JR1JsWm1sdVpXUW9JRkpGWDBsdVpHbHlaV04wVTNCbFkzVnNZWElnS1FvSlVrVmZTVzVrYVhKbFkzUlRjR1ZqZFd4aGNpZ2djbUZrYVdGdVkyVXNJR2xpYkVseWNtRmthV0Z1WTJVc0lHTnNaV0Z5WTI5aGRGSmhaR2xoYm1ObExDQm5aVzl0WlhSeWVTd2diV0YwWlhKcFlXd3NJSEpsWm14bFkzUmxaRXhwWjJoMElDazdDaU5sYm1ScFptQXNJSEJ3SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlRFOUhSRVZRVkVoQ1ZVWWdLU0FtSmlCa1pXWnBibVZrS0NCVlUwVmZURTlIUkVWUVZFaENWVVpmUlZoVUlDa0tDV2RzWDBaeVlXZEVaWEIwYUVWWVZDQTlJSFpKYzFCbGNuTndaV04wYVhabElEMDlJREF1TUNBL0lHZHNYMFp5WVdkRGIyOXlaQzU2SURvZ2JHOW5NaWdnZGtaeVlXZEVaWEIwYUNBcElDb2diRzluUkdWd2RHaENkV1pHUXlBcUlEQXVOVHNLSTJWdVpHbG1ZQ3dnYlhBZ1BTQmdJMmxtSUdSbFptbHVaV1FvSUZWVFJWOU1UMGRFUlZCVVNFSlZSaUFwSUNZbUlHUmxabWx1WldRb0lGVlRSVjlNVDBkRVJWQlVTRUpWUmw5RldGUWdLUW9KZFc1cFptOXliU0JtYkc5aGRDQnNiMmRFWlhCMGFFSjFaa1pET3dvSmRtRnllV2x1WnlCbWJHOWhkQ0IyUm5KaFowUmxjSFJvT3dvSmRtRnllV2x1WnlCbWJHOWhkQ0IyU1hOUVpYSnpjR1ZqZEdsMlpUc0tJMlZ1WkdsbVlDd2daM0FnUFNCZ0kybG1aR1ZtSUZWVFJWOU1UMGRFUlZCVVNFSlZSZ29KSTJsbVpHVm1JRlZUUlY5TVQwZEVSVkJVU0VKVlJsOUZXRlFLQ1FsMllYSjVhVzVuSUdac2IyRjBJSFpHY21GblJHVndkR2c3Q2drSmRtRnllV2x1WnlCbWJHOWhkQ0IyU1hOUVpYSnpjR1ZqZEdsMlpUc0tDU05sYkhObENna0pkVzVwWm05eWJTQm1iRzloZENCc2IyZEVaWEIwYUVKMVprWkRPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJSGh3SUQwZ1lDTnBabVJsWmlCVlUwVmZURTlIUkVWUVZFaENWVVlLQ1NOcFptUmxaaUJWVTBWZlRFOUhSRVZRVkVoQ1ZVWmZSVmhVQ2drSmRrWnlZV2RFWlhCMGFDQTlJREV1TUNBcklHZHNYMUJ2YzJsMGFXOXVMbmM3Q2drSmRrbHpVR1Z5YzNCbFkzUnBkbVVnUFNCbWJHOWhkQ2dnYVhOUVpYSnpjR1ZqZEdsMlpVMWhkSEpwZUNnZ2NISnZhbVZqZEdsdmJrMWhkSEpwZUNBcElDazdDZ2tqWld4elpRb0pDV2xtSUNnZ2FYTlFaWEp6Y0dWamRHbDJaVTFoZEhKcGVDZ2djSEp2YW1WamRHbHZiazFoZEhKcGVDQXBJQ2tnZXdvSkNRbG5iRjlRYjNOcGRHbHZiaTU2SUQwZ2JHOW5NaWdnYldGNEtDQkZVRk5KVEU5T0xDQm5iRjlRYjNOcGRHbHZiaTUzSUNzZ01TNHdJQ2tnS1NBcUlHeHZaMFJsY0hSb1FuVm1Sa01nTFNBeExqQTdDZ2tKQ1dkc1gxQnZjMmwwYVc5dUxub2dLajBnWjJ4ZlVHOXphWFJwYjI0dWR6c0tDUWw5Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnZVhBZ1BTQmdJMmxtWkdWbUlGVlRSVjlOUVZBS0NYWmxZelFnZEdWNFpXeERiMnh2Y2lBOUlIUmxlSFIxY21VeVJDZ2diV0Z3TENCMlZYWWdLVHNLQ1hSbGVHVnNRMjlzYjNJZ1BTQnRZWEJVWlhobGJGUnZUR2x1WldGeUtDQjBaWGhsYkVOdmJHOXlJQ2s3Q2dsa2FXWm1kWE5sUTI5c2IzSWdLajBnZEdWNFpXeERiMnh2Y2pzS0kyVnVaR2xtWUN3Z2RuQWdQU0JnSTJsbVpHVm1JRlZUUlY5TlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJRzFoY0RzS0kyVnVaR2xtWUN3Z1gzQWdQU0JnSTJsbUlHUmxabWx1WldRb0lGVlRSVjlOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlFVeFFTRUZOUVZBZ0tRb0pkbVZqTWlCMWRpQTlJQ2dnZFhaVWNtRnVjMlp2Y20wZ0tpQjJaV016S0NCbmJGOVFiMmx1ZEVOdmIzSmtMbmdzSURFdU1DQXRJR2RzWDFCdmFXNTBRMjl2Y21RdWVTd2dNU0FwSUNrdWVIazdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMDFCVUFvSmRtVmpOQ0J0WVhCVVpYaGxiQ0E5SUhSbGVIUjFjbVV5UkNnZ2JXRndMQ0IxZGlBcE93b0paR2xtWm5WelpVTnZiRzl5SUNvOUlHMWhjRlJsZUdWc1ZHOU1hVzVsWVhJb0lHMWhjRlJsZUdWc0lDazdDaU5sYm1ScFpnb2phV1prWldZZ1ZWTkZYMEZNVUVoQlRVRlFDZ2xrYVdabWRYTmxRMjlzYjNJdVlTQXFQU0IwWlhoMGRYSmxNa1FvSUdGc2NHaGhUV0Z3TENCMWRpQXBMbWM3Q2lObGJtUnBabUFzSUUxd0lEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZUVUZRSUNrZ2ZId2daR1ZtYVc1bFpDZ2dWVk5GWDBGTVVFaEJUVUZRSUNrS0NYVnVhV1p2Y20wZ2JXRjBNeUIxZGxSeVlXNXpabTl5YlRzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0J0WVhBN0NpTmxibVJwWmdvamFXWmtaV1lnVlZORlgwRk1VRWhCVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmhiSEJvWVUxaGNEc0tJMlZ1WkdsbVlDd2dZbkFnUFNCZ1pteHZZWFFnYldWMFlXeHVaWE56Um1GamRHOXlJRDBnYldWMFlXeHVaWE56T3dvamFXWmtaV1lnVlZORlgwMUZWRUZNVGtWVFUwMUJVQW9KZG1Wak5DQjBaWGhsYkUxbGRHRnNibVZ6Y3lBOUlIUmxlSFIxY21VeVJDZ2diV1YwWVd4dVpYTnpUV0Z3TENCMlZYWWdLVHNLQ1cxbGRHRnNibVZ6YzBaaFkzUnZjaUFxUFNCMFpYaGxiRTFsZEdGc2JtVnpjeTVpT3dvalpXNWthV1pnTENCM2NDQTlJR0FqYVdaa1pXWWdWVk5GWDAxRlZFRk1Ua1ZUVTAxQlVBb0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdiV1YwWVd4dVpYTnpUV0Z3T3dvalpXNWthV1pnTENCVGNDQTlJR0FqYVdaa1pXWWdWVk5GWDAxUFVsQklUazlTVFVGTVV3b0piMkpxWldOMFRtOXliV0ZzSUNvOUlHMXZjbkJvVkdGeVoyVjBRbUZ6WlVsdVpteDFaVzVqWlRzS0NTTnBabVJsWmlCTlQxSlFTRlJCVWtkRlZGTmZWRVZZVkZWU1JRb0pDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUUxUFVsQklWRUZTUjBWVVUxOURUMVZPVkRzZ2FTQXJLeUFwSUhzS0NRa0phV1lnS0NCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTmJJR2tnWFNBK0lEQXVNQ0FwSUc5aWFtVmpkRTV2Y20xaGJDQXJQU0JuWlhSTmIzSndhQ2dnWjJ4ZlZtVnlkR1Y0U1VRc0lHa3NJREVzSURJZ0tTQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ2FTQmRPd29KQ1gwS0NTTmxiSE5sQ2drSmIySnFaV04wVG05eWJXRnNJQ3M5SUcxdmNuQm9UbTl5YldGc01DQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ01DQmRPd29KQ1c5aWFtVmpkRTV2Y20xaGJDQXJQU0J0YjNKd2FFNXZjbTFoYkRFZ0tpQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSURFZ1hUc0tDUWx2WW1wbFkzUk9iM0p0WVd3Z0t6MGdiVzl5Y0doT2IzSnRZV3d5SUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUF5SUYwN0Nna0piMkpxWldOMFRtOXliV0ZzSUNzOUlHMXZjbkJvVG05eWJXRnNNeUFxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dNeUJkT3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUZSd0lEMGdZQ05wWm1SbFppQlZVMFZmVFU5U1VFaFVRVkpIUlZSVENnbDFibWxtYjNKdElHWnNiMkYwSUcxdmNuQm9WR0Z5WjJWMFFtRnpaVWx1Wm14MVpXNWpaVHNLQ1NOcFptUmxaaUJOVDFKUVNGUkJVa2RGVkZOZlZFVllWRlZTUlFvSkNYVnVhV1p2Y20wZ1pteHZZWFFnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5Qk5UMUpRU0ZSQlVrZEZWRk5mUTA5VlRsUWdYVHNLQ1FsMWJtbG1iM0p0SUhOaGJYQnNaWEl5UkVGeWNtRjVJRzF2Y25Cb1ZHRnlaMlYwYzFSbGVIUjFjbVU3Q2drSmRXNXBabTl5YlNCMlpXTXlJRzF2Y25Cb1ZHRnlaMlYwYzFSbGVIUjFjbVZUYVhwbE93b0pDWFpsWXpNZ1oyVjBUVzl5Y0dnb0lHTnZibk4wSUdsdUlHbHVkQ0IyWlhKMFpYaEpibVJsZUN3Z1kyOXVjM1FnYVc0Z2FXNTBJRzF2Y25Cb1ZHRnlaMlYwU1c1a1pYZ3NJR052Ym5OMElHbHVJR2x1ZENCdlptWnpaWFFzSUdOdmJuTjBJR2x1SUdsdWRDQnpkSEpwWkdVZ0tTQjdDZ2tKQ1dac2IyRjBJSFJsZUdWc1NXNWtaWGdnUFNCbWJHOWhkQ2dnZG1WeWRHVjRTVzVrWlhnZ0tpQnpkSEpwWkdVZ0t5QnZabVp6WlhRZ0tUc0tDUWtKWm14dllYUWdlU0E5SUdac2IyOXlLQ0IwWlhobGJFbHVaR1Y0SUM4Z2JXOXljR2hVWVhKblpYUnpWR1Y0ZEhWeVpWTnBlbVV1ZUNBcE93b0pDUWxtYkc5aGRDQjRJRDBnZEdWNFpXeEpibVJsZUNBdElIa2dLaUJ0YjNKd2FGUmhjbWRsZEhOVVpYaDBkWEpsVTJsNlpTNTRPd29KQ1FsMlpXTXpJRzF2Y25Cb1ZWWWdQU0IyWldNektDQW9JSGdnS3lBd0xqVWdLU0F2SUcxdmNuQm9WR0Z5WjJWMGMxUmxlSFIxY21WVGFYcGxMbmdzSUhrZ0x5QnRiM0p3YUZSaGNtZGxkSE5VWlhoMGRYSmxVMmw2WlM1NUxDQnRiM0p3YUZSaGNtZGxkRWx1WkdWNElDazdDZ2tKQ1hKbGRIVnliaUIwWlhoMGRYSmxLQ0J0YjNKd2FGUmhjbWRsZEhOVVpYaDBkWEpsTENCdGIzSndhRlZXSUNrdWVIbDZPd29KQ1gwS0NTTmxiSE5sQ2drSkkybG1ibVJsWmlCVlUwVmZUVTlTVUVoT1QxSk5RVXhUQ2drSkNYVnVhV1p2Y20wZ1pteHZZWFFnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QTRJRjA3Q2drSkkyVnNjMlVLQ1FrSmRXNXBabTl5YlNCbWJHOWhkQ0J0YjNKd2FGUmhjbWRsZEVsdVpteDFaVzVqWlhOYklEUWdYVHNLQ1FralpXNWthV1lLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JGY0NBOUlHQWphV1prWldZZ1ZWTkZYMDFQVWxCSVZFRlNSMFZVVXdvSmRISmhibk5tYjNKdFpXUWdLajBnYlc5eWNHaFVZWEpuWlhSQ1lYTmxTVzVtYkhWbGJtTmxPd29KSTJsbVpHVm1JRTFQVWxCSVZFRlNSMFZVVTE5VVJWaFVWVkpGQ2drSlptOXlJQ2dnYVc1MElHa2dQU0F3T3lCcElEd2dUVTlTVUVoVVFWSkhSVlJUWDBOUFZVNVVPeUJwSUNzcklDa2dld29KQ1FramFXWnVaR1ZtSUZWVFJWOU5UMUpRU0U1UFVrMUJURk1LQ1FrSkNXbG1JQ2dnYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QnBJRjBnUGlBd0xqQWdLU0IwY21GdWMyWnZjbTFsWkNBclBTQm5aWFJOYjNKd2FDZ2daMnhmVm1WeWRHVjRTVVFzSUdrc0lEQXNJREVnS1NBcUlHMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjMXNnYVNCZE93b0pDUWtqWld4elpRb0pDUWtKYVdZZ0tDQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSUdrZ1hTQStJREF1TUNBcElIUnlZVzV6Wm05eWJXVmtJQ3M5SUdkbGRFMXZjbkJvS0NCbmJGOVdaWEowWlhoSlJDd2dhU3dnTUN3Z01pQXBJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QnBJRjA3Q2drSkNTTmxibVJwWmdvSkNYMEtDU05sYkhObENna0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JXOXljR2hVWVhKblpYUXdJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXdJRjA3Q2drSmRISmhibk5tYjNKdFpXUWdLejBnYlc5eWNHaFVZWEpuWlhReElDb2diVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lBeElGMDdDZ2tKZEhKaGJuTm1iM0p0WldRZ0t6MGdiVzl5Y0doVVlYSm5aWFF5SUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUF5SUYwN0Nna0pkSEpoYm5ObWIzSnRaV1FnS3owZ2JXOXljR2hVWVhKblpYUXpJQ29nYlc5eWNHaFVZWEpuWlhSSmJtWnNkV1Z1WTJWeld5QXpJRjA3Q2drSkkybG1ibVJsWmlCVlUwVmZUVTlTVUVoT1QxSk5RVXhUQ2drSkNYUnlZVzV6Wm05eWJXVmtJQ3M5SUcxdmNuQm9WR0Z5WjJWME5DQXFJRzF2Y25Cb1ZHRnlaMlYwU1c1bWJIVmxibU5sYzFzZ05DQmRPd29KQ1FsMGNtRnVjMlp2Y20xbFpDQXJQU0J0YjNKd2FGUmhjbWRsZERVZ0tpQnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE5iSURVZ1hUc0tDUWtKZEhKaGJuTm1iM0p0WldRZ0t6MGdiVzl5Y0doVVlYSm5aWFEySUNvZ2JXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpXeUEySUYwN0Nna0pDWFJ5WVc1elptOXliV1ZrSUNzOUlHMXZjbkJvVkdGeVoyVjBOeUFxSUcxdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObGMxc2dOeUJkT3dvSkNTTmxibVJwWmdvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUVGd0lEMGdZR1pzYjJGMElHWmhZMlZFYVhKbFkzUnBiMjRnUFNCbmJGOUdjbTl1ZEVaaFkybHVaeUEvSURFdU1DQTZJQzBnTVM0d093b2phV1prWldZZ1JreEJWRjlUU0VGRVJVUUtDWFpsWXpNZ1ptUjRJRDBnZG1Wak15Z2daRVprZUNnZ2RsWnBaWGRRYjNOcGRHbHZiaTU0SUNrc0lHUkdaSGdvSUhaV2FXVjNVRzl6YVhScGIyNHVlU0FwTENCa1JtUjRLQ0IyVm1sbGQxQnZjMmwwYVc5dUxub2dLU0FwT3dvSmRtVmpNeUJtWkhrZ1BTQjJaV016S0NCa1JtUjVLQ0IyVm1sbGQxQnZjMmwwYVc5dUxuZ2dLU3dnWkVaa2VTZ2dkbFpwWlhkUWIzTnBkR2x2Ymk1NUlDa3NJR1JHWkhrb0lIWldhV1YzVUc5emFYUnBiMjR1ZWlBcElDazdDZ2wyWldNeklHNXZjbTFoYkNBOUlHNXZjbTFoYkdsNlpTZ2dZM0p2YzNNb0lHWmtlQ3dnWm1SNUlDa2dLVHNLSTJWc2MyVUtDWFpsWXpNZ2JtOXliV0ZzSUQwZ2JtOXliV0ZzYVhwbEtDQjJUbTl5YldGc0lDazdDZ2tqYVdaa1pXWWdSRTlWUWt4RlgxTkpSRVZFQ2drSmJtOXliV0ZzSUQwZ2JtOXliV0ZzSUNvZ1ptRmpaVVJwY21WamRHbHZianNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5VVFVNUhSVTVVQ2drSmRtVmpNeUIwWVc1blpXNTBJRDBnYm05eWJXRnNhWHBsS0NCMlZHRnVaMlZ1ZENBcE93b0pDWFpsWXpNZ1ltbDBZVzVuWlc1MElEMGdibTl5YldGc2FYcGxLQ0IyUW1sMFlXNW5aVzUwSUNrN0Nna0pJMmxtWkdWbUlFUlBWVUpNUlY5VFNVUkZSQW9KQ1FsMFlXNW5aVzUwSUQwZ2RHRnVaMlZ1ZENBcUlHWmhZMlZFYVhKbFkzUnBiMjQ3Q2drSkNXSnBkR0Z1WjJWdWRDQTlJR0pwZEdGdVoyVnVkQ0FxSUdaaFkyVkVhWEpsWTNScGIyNDdDZ2tKSTJWdVpHbG1DZ2tKSTJsbUlHUmxabWx1WldRb0lGUkJUa2RGVGxSVFVFRkRSVjlPVDFKTlFVeE5RVkFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUTB4RlFWSkRUMEZVWDA1UFVrMUJURTFCVUNBcENna0pDVzFoZERNZ2RsUkNUaUE5SUcxaGRETW9JSFJoYm1kbGJuUXNJR0pwZEdGdVoyVnVkQ3dnYm05eWJXRnNJQ2s3Q2drSkkyVnVaR2xtQ2dralpXNWthV1lLSTJWdVpHbG1DblpsWXpNZ1oyVnZiV1YwY25sT2IzSnRZV3dnUFNCdWIzSnRZV3c3WUN3Z1EzQWdQU0JnSTJsbVpHVm1JRTlDU2tWRFZGTlFRVU5GWDA1UFVrMUJURTFCVUFvSmJtOXliV0ZzSUQwZ2RHVjRkSFZ5WlRKRUtDQnViM0p0WVd4TllYQXNJSFpWZGlBcExuaDVlaUFxSURJdU1DQXRJREV1TURzS0NTTnBabVJsWmlCR1RFbFFYMU5KUkVWRUNna0pibTl5YldGc0lEMGdMU0J1YjNKdFlXdzdDZ2tqWlc1a2FXWUtDU05wWm1SbFppQkVUMVZDVEVWZlUwbEVSVVFLQ1FsdWIzSnRZV3dnUFNCdWIzSnRZV3dnS2lCbVlXTmxSR2x5WldOMGFXOXVPd29KSTJWdVpHbG1DZ2x1YjNKdFlXd2dQU0J1YjNKdFlXeHBlbVVvSUc1dmNtMWhiRTFoZEhKcGVDQXFJRzV2Y20xaGJDQXBPd29qWld4cFppQmtaV1pwYm1Wa0tDQlVRVTVIUlU1VVUxQkJRMFZmVGs5U1RVRk1UVUZRSUNrS0NYWmxZek1nYldGd1RpQTlJSFJsZUhSMWNtVXlSQ2dnYm05eWJXRnNUV0Z3TENCMlZYWWdLUzU0ZVhvZ0tpQXlMakFnTFNBeExqQTdDZ2x0WVhCT0xuaDVJQ285SUc1dmNtMWhiRk5qWVd4bE93b0pJMmxtWkdWbUlGVlRSVjlVUVU1SFJVNVVDZ2tKYm05eWJXRnNJRDBnYm05eWJXRnNhWHBsS0NCMlZFSk9JQ29nYldGd1RpQXBPd29KSTJWc2MyVUtDUWx1YjNKdFlXd2dQU0J3WlhKMGRYSmlUbTl5YldGc01rRnlZaWdnTFNCMlZtbGxkMUJ2YzJsMGFXOXVMQ0J1YjNKdFlXd3NJRzFoY0U0c0lHWmhZMlZFYVhKbFkzUnBiMjRnS1RzS0NTTmxibVJwWmdvalpXeHBaaUJrWldacGJtVmtLQ0JWVTBWZlFsVk5VRTFCVUNBcENnbHViM0p0WVd3Z1BTQndaWEowZFhKaVRtOXliV0ZzUVhKaUtDQXRJSFpXYVdWM1VHOXphWFJwYjI0c0lHNXZjbTFoYkN3Z1pFaGtlSGxmWm5ka0tDa3NJR1poWTJWRWFYSmxZM1JwYjI0Z0tUc0tJMlZ1WkdsbVlDd2dUSEFnUFNCZ0kybG1ibVJsWmlCR1RFRlVYMU5JUVVSRlJBb0pkbUZ5ZVdsdVp5QjJaV016SUhaT2IzSnRZV3c3Q2dramFXWmtaV1lnVlZORlgxUkJUa2RGVGxRS0NRbDJZWEo1YVc1bklIWmxZek1nZGxSaGJtZGxiblE3Q2drSmRtRnllV2x1WnlCMlpXTXpJSFpDYVhSaGJtZGxiblE3Q2dralpXNWthV1lLSTJWdVpHbG1ZQ3dnVW5BZ1BTQmdJMmxtYm1SbFppQkdURUZVWDFOSVFVUkZSQW9KZG1GeWVXbHVaeUIyWldNeklIWk9iM0p0WVd3N0Nna2phV1prWldZZ1ZWTkZYMVJCVGtkRlRsUUtDUWwyWVhKNWFXNW5JSFpsWXpNZ2RsUmhibWRsYm5RN0Nna0pkbUZ5ZVdsdVp5QjJaV016SUhaQ2FYUmhibWRsYm5RN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1VIQWdQU0JnSTJsbWJtUmxaaUJHVEVGVVgxTklRVVJGUkFvSmRrNXZjbTFoYkNBOUlHNXZjbTFoYkdsNlpTZ2dkSEpoYm5ObWIzSnRaV1JPYjNKdFlXd2dLVHNLQ1NOcFptUmxaaUJWVTBWZlZFRk9SMFZPVkFvSkNYWlVZVzVuWlc1MElEMGdibTl5YldGc2FYcGxLQ0IwY21GdWMyWnZjbTFsWkZSaGJtZGxiblFnS1RzS0NRbDJRbWwwWVc1blpXNTBJRDBnYm05eWJXRnNhWHBsS0NCamNtOXpjeWdnZGs1dmNtMWhiQ3dnZGxSaGJtZGxiblFnS1NBcUlIUmhibWRsYm5RdWR5QXBPd29KSTJWdVpHbG1DaU5sYm1ScFptQXNJRWx3SUQwZ1lDTnBabVJsWmlCVlUwVmZUazlTVFVGTVRVRlFDZ2wxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0J1YjNKdFlXeE5ZWEE3Q2dsMWJtbG1iM0p0SUhabFl6SWdibTl5YldGc1UyTmhiR1U3Q2lObGJtUnBaZ29qYVdaa1pXWWdUMEpLUlVOVVUxQkJRMFZmVGs5U1RVRk1UVUZRQ2dsMWJtbG1iM0p0SUcxaGRETWdibTl5YldGc1RXRjBjbWw0T3dvalpXNWthV1lLSTJsbUlDRWdaR1ZtYVc1bFpDQW9JRlZUUlY5VVFVNUhSVTVVSUNrZ0ppWWdLQ0JrWldacGJtVmtJQ2dnVkVGT1IwVk9WRk5RUVVORlgwNVBVazFCVEUxQlVDQXBJSHg4SUdSbFptbHVaV1FnS0NCVlUwVmZRMHhGUVZKRFQwRlVYMDVQVWsxQlRFMUJVQ0FwSUNrS0NYWmxZek1nY0dWeWRIVnlZazV2Y20xaGJESkJjbUlvSUhabFl6TWdaWGxsWDNCdmN5d2dkbVZqTXlCemRYSm1YMjV2Y20wc0lIWmxZek1nYldGd1Rpd2dabXh2WVhRZ1ptRmpaVVJwY21WamRHbHZiaUFwSUhzS0NRbDJaV016SUhFd0lEMGdkbVZqTXlnZ1pFWmtlQ2dnWlhsbFgzQnZjeTU0SUNrc0lHUkdaSGdvSUdWNVpWOXdiM011ZVNBcExDQmtSbVI0S0NCbGVXVmZjRzl6TG5vZ0tTQXBPd29KQ1habFl6TWdjVEVnUFNCMlpXTXpLQ0JrUm1SNUtDQmxlV1ZmY0c5ekxuZ2dLU3dnWkVaa2VTZ2daWGxsWDNCdmN5NTVJQ2tzSUdSR1pIa29JR1Y1WlY5d2IzTXVlaUFwSUNrN0Nna0pkbVZqTWlCemREQWdQU0JrUm1SNEtDQjJWWFl1YzNRZ0tUc0tDUWwyWldNeUlITjBNU0E5SUdSR1pIa29JSFpWZGk1emRDQXBPd29KQ1habFl6TWdUaUE5SUhOMWNtWmZibTl5YlRzS0NRbDJaV016SUhFeGNHVnljQ0E5SUdOeWIzTnpLQ0J4TVN3Z1RpQXBPd29KQ1habFl6TWdjVEJ3WlhKd0lEMGdZM0p2YzNNb0lFNHNJSEV3SUNrN0Nna0pkbVZqTXlCVUlEMGdjVEZ3WlhKd0lDb2djM1F3TG5nZ0t5QnhNSEJsY25BZ0tpQnpkREV1ZURzS0NRbDJaV016SUVJZ1BTQnhNWEJsY25BZ0tpQnpkREF1ZVNBcklIRXdjR1Z5Y0NBcUlITjBNUzU1T3dvSkNXWnNiMkYwSUdSbGRDQTlJRzFoZUNnZ1pHOTBLQ0JVTENCVUlDa3NJR1J2ZENnZ1Fpd2dRaUFwSUNrN0Nna0pabXh2WVhRZ2MyTmhiR1VnUFNBb0lHUmxkQ0E5UFNBd0xqQWdLU0EvSURBdU1DQTZJR1poWTJWRWFYSmxZM1JwYjI0Z0tpQnBiblpsY25ObGMzRnlkQ2dnWkdWMElDazdDZ2tKY21WMGRYSnVJRzV2Y20xaGJHbDZaU2dnVkNBcUlDZ2diV0Z3VGk1NElDb2djMk5oYkdVZ0tTQXJJRUlnS2lBb0lHMWhjRTR1ZVNBcUlITmpZV3hsSUNrZ0t5Qk9JQ29nYldGd1RpNTZJQ2s3Q2dsOUNpTmxibVJwWm1Bc0lFUndJRDBnWUNOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVUNnbDJaV016SUdOc1pXRnlZMjloZEU1dmNtMWhiQ0E5SUdkbGIyMWxkSEo1VG05eWJXRnNPd29qWlc1a2FXWmdMQ0JHY0NBOUlHQWphV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWRjlPVDFKTlFVeE5RVkFLQ1habFl6TWdZMnhsWVhKamIyRjBUV0Z3VGlBOUlIUmxlSFIxY21VeVJDZ2dZMnhsWVhKamIyRjBUbTl5YldGc1RXRndMQ0IyVlhZZ0tTNTRlWG9nS2lBeUxqQWdMU0F4TGpBN0NnbGpiR1ZoY21OdllYUk5ZWEJPTG5oNUlDbzlJR05zWldGeVkyOWhkRTV2Y20xaGJGTmpZV3hsT3dvSkkybG1aR1ZtSUZWVFJWOVVRVTVIUlU1VUNna0pZMnhsWVhKamIyRjBUbTl5YldGc0lEMGdibTl5YldGc2FYcGxLQ0IyVkVKT0lDb2dZMnhsWVhKamIyRjBUV0Z3VGlBcE93b0pJMlZzYzJVS0NRbGpiR1ZoY21OdllYUk9iM0p0WVd3Z1BTQndaWEowZFhKaVRtOXliV0ZzTWtGeVlpZ2dMU0IyVm1sbGQxQnZjMmwwYVc5dUxDQmpiR1ZoY21OdllYUk9iM0p0WVd3c0lHTnNaV0Z5WTI5aGRFMWhjRTRzSUdaaFkyVkVhWEpsWTNScGIyNGdLVHNLQ1NObGJtUnBaZ29qWlc1a2FXWmdMQ0JPY0NBOUlHQWphV1prWldZZ1ZWTkZYME5NUlVGU1EwOUJWRTFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ1kyeGxZWEpqYjJGMFRXRndPd29qWlc1a2FXWUtJMmxtWkdWbUlGVlRSVjlEVEVWQlVrTlBRVlJmVWs5VlIwaE9SVk5UVFVGUUNnbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEE3Q2lObGJtUnBaZ29qYVdaa1pXWWdWVk5GWDBOTVJVRlNRMDlCVkY5T1QxSk5RVXhOUVZBS0NYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlHTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNEc0tDWFZ1YVdadmNtMGdkbVZqTWlCamJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pUc0tJMlZ1WkdsbVlDd2dRbkFnUFNCZ0kybG1aR1ZtSUU5UVFWRlZSUXBrYVdabWRYTmxRMjlzYjNJdVlTQTlJREV1TURzS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9DbVJwWm1aMWMyVkRiMnh2Y2k1aElDbzlJSFJ5WVc1emJXbHpjMmx2YmtGc2NHaGhJQ3NnTUM0eE93b2paVzVrYVdZS1oyeGZSbkpoWjBOdmJHOXlJRDBnZG1Wak5DZ2diM1YwWjI5cGJtZE1hV2RvZEN3Z1pHbG1ablZ6WlVOdmJHOXlMbUVnS1R0Z0xDQjZjQ0E5SUdCMlpXTXpJSEJoWTJ0T2IzSnRZV3hVYjFKSFFpZ2dZMjl1YzNRZ2FXNGdkbVZqTXlCdWIzSnRZV3dnS1NCN0NnbHlaWFIxY200Z2JtOXliV0ZzYVhwbEtDQnViM0p0WVd3Z0tTQXFJREF1TlNBcklEQXVOVHNLZlFwMlpXTXpJSFZ1Y0dGamExSkhRbFJ2VG05eWJXRnNLQ0JqYjI1emRDQnBiaUIyWldNeklISm5ZaUFwSUhzS0NYSmxkSFZ5YmlBeUxqQWdLaUJ5WjJJdWVIbDZJQzBnTVM0d093cDlDbU52Ym5OMElHWnNiMkYwSUZCaFkydFZjSE5qWVd4bElEMGdNalUyTGlBdklESTFOUzQ3WTI5dWMzUWdabXh2WVhRZ1ZXNXdZV05yUkc5M2JuTmpZV3hsSUQwZ01qVTFMaUF2SURJMU5pNDdDbU52Ym5OMElIWmxZek1nVUdGamEwWmhZM1J2Y25NZ1BTQjJaV016S0NBeU5UWXVJQ29nTWpVMkxpQXFJREkxTmk0c0lESTFOaTRnS2lBeU5UWXVMQ0F5TlRZdUlDazdDbU52Ym5OMElIWmxZelFnVlc1d1lXTnJSbUZqZEc5eWN5QTlJRlZ1Y0dGamEwUnZkMjV6WTJGc1pTQXZJSFpsWXpRb0lGQmhZMnRHWVdOMGIzSnpMQ0F4TGlBcE93cGpiMjV6ZENCbWJHOWhkQ0JUYUdsbWRGSnBaMmgwT0NBOUlERXVJQzhnTWpVMkxqc0tkbVZqTkNCd1lXTnJSR1Z3ZEdoVWIxSkhRa0VvSUdOdmJuTjBJR2x1SUdac2IyRjBJSFlnS1NCN0NnbDJaV00wSUhJZ1BTQjJaV00wS0NCbWNtRmpkQ2dnZGlBcUlGQmhZMnRHWVdOMGIzSnpJQ2tzSUhZZ0tUc0tDWEl1ZVhwM0lDMDlJSEl1ZUhsNklDb2dVMmhwWm5SU2FXZG9kRGc3Q1hKbGRIVnliaUJ5SUNvZ1VHRmphMVZ3YzJOaGJHVTdDbjBLWm14dllYUWdkVzV3WVdOclVrZENRVlJ2UkdWd2RHZ29JR052Ym5OMElHbHVJSFpsWXpRZ2RpQXBJSHNLQ1hKbGRIVnliaUJrYjNRb0lIWXNJRlZ1Y0dGamEwWmhZM1J2Y25NZ0tUc0tmUXAyWldNMElIQmhZMnN5U0dGc1psUnZVa2RDUVNnZ2RtVmpNaUIySUNrZ2V3b0pkbVZqTkNCeUlEMGdkbVZqTkNnZ2RpNTRMQ0JtY21GamRDZ2dkaTU0SUNvZ01qVTFMakFnS1N3Z2RpNTVMQ0JtY21GamRDZ2dkaTU1SUNvZ01qVTFMakFnS1NBcE93b0pjbVYwZFhKdUlIWmxZelFvSUhJdWVDQXRJSEl1ZVNBdklESTFOUzR3TENCeUxua3NJSEl1ZWlBdElISXVkeUF2SURJMU5TNHdMQ0J5TG5jZ0tUc0tmUXAyWldNeUlIVnVjR0ZqYTFKSFFrRlViekpJWVd4bUtDQjJaV00wSUhZZ0tTQjdDZ2x5WlhSMWNtNGdkbVZqTWlnZ2RpNTRJQ3NnS0NCMkxua2dMeUF5TlRVdU1DQXBMQ0IyTG5vZ0t5QW9JSFl1ZHlBdklESTFOUzR3SUNrZ0tUc0tmUXBtYkc5aGRDQjJhV1YzV2xSdlQzSjBhRzluY21Gd2FHbGpSR1Z3ZEdnb0lHTnZibk4wSUdsdUlHWnNiMkYwSUhacFpYZGFMQ0JqYjI1emRDQnBiaUJtYkc5aGRDQnVaV0Z5TENCamIyNXpkQ0JwYmlCbWJHOWhkQ0JtWVhJZ0tTQjdDZ2x5WlhSMWNtNGdLQ0IyYVdWM1dpQXJJRzVsWVhJZ0tTQXZJQ2dnYm1WaGNpQXRJR1poY2lBcE93cDlDbVpzYjJGMElHOXlkR2h2WjNKaGNHaHBZMFJsY0hSb1ZHOVdhV1YzV2lnZ1kyOXVjM1FnYVc0Z1pteHZZWFFnYkdsdVpXRnlRMnhwY0Zvc0lHTnZibk4wSUdsdUlHWnNiMkYwSUc1bFlYSXNJR052Ym5OMElHbHVJR1pzYjJGMElHWmhjaUFwSUhzS0NYSmxkSFZ5YmlCc2FXNWxZWEpEYkdsd1dpQXFJQ2dnYm1WaGNpQXRJR1poY2lBcElDMGdibVZoY2pzS2ZRcG1iRzloZENCMmFXVjNXbFJ2VUdWeWMzQmxZM1JwZG1WRVpYQjBhQ2dnWTI5dWMzUWdhVzRnWm14dllYUWdkbWxsZDFvc0lHTnZibk4wSUdsdUlHWnNiMkYwSUc1bFlYSXNJR052Ym5OMElHbHVJR1pzYjJGMElHWmhjaUFwSUhzS0NYSmxkSFZ5YmlBb0lDZ2dibVZoY2lBcklIWnBaWGRhSUNrZ0tpQm1ZWElnS1NBdklDZ2dLQ0JtWVhJZ0xTQnVaV0Z5SUNrZ0tpQjJhV1YzV2lBcE93cDlDbVpzYjJGMElIQmxjbk53WldOMGFYWmxSR1Z3ZEdoVWIxWnBaWGRhS0NCamIyNXpkQ0JwYmlCbWJHOWhkQ0JwYm5aRGJHbHdXaXdnWTI5dWMzUWdhVzRnWm14dllYUWdibVZoY2l3Z1kyOXVjM1FnYVc0Z1pteHZZWFFnWm1GeUlDa2dld29KY21WMGRYSnVJQ2dnYm1WaGNpQXFJR1poY2lBcElDOGdLQ0FvSUdaaGNpQXRJRzVsWVhJZ0tTQXFJR2x1ZGtOc2FYQmFJQzBnWm1GeUlDazdDbjFnTENCVmNDQTlJR0FqYVdaa1pXWWdVRkpGVFZWTVZFbFFURWxGUkY5QlRGQklRUW9KWjJ4ZlJuSmhaME52Ykc5eUxuSm5ZaUFxUFNCbmJGOUdjbUZuUTI5c2IzSXVZVHNLSTJWdVpHbG1ZQ3dnVDNBZ1BTQmdkbVZqTkNCdGRsQnZjMmwwYVc5dUlEMGdkbVZqTkNnZ2RISmhibk5tYjNKdFpXUXNJREV1TUNBcE93b2phV1prWldZZ1ZWTkZYMGxPVTFSQlRrTkpUa2NLQ1cxMlVHOXphWFJwYjI0Z1BTQnBibk4wWVc1alpVMWhkSEpwZUNBcUlHMTJVRzl6YVhScGIyNDdDaU5sYm1ScFpncHRkbEJ2YzJsMGFXOXVJRDBnYlc5a1pXeFdhV1YzVFdGMGNtbDRJQ29nYlhaUWIzTnBkR2x2YmpzS1oyeGZVRzl6YVhScGIyNGdQU0J3Y205cVpXTjBhVzl1VFdGMGNtbDRJQ29nYlhaUWIzTnBkR2x2Ymp0Z0xDQkljQ0E5SUdBamFXWmtaV1lnUkVsVVNFVlNTVTVIQ2dsbmJGOUdjbUZuUTI5c2IzSXVjbWRpSUQwZ1pHbDBhR1Z5YVc1bktDQm5iRjlHY21GblEyOXNiM0l1Y21kaUlDazdDaU5sYm1ScFptQXNJR3R3SUQwZ1lDTnBabVJsWmlCRVNWUklSVkpKVGtjS0NYWmxZek1nWkdsMGFHVnlhVzVuS0NCMlpXTXpJR052Ykc5eUlDa2dld29KQ1dac2IyRjBJR2R5YVdSZmNHOXphWFJwYjI0Z1BTQnlZVzVrS0NCbmJGOUdjbUZuUTI5dmNtUXVlSGtnS1RzS0NRbDJaV016SUdScGRHaGxjbDl6YUdsbWRGOVNSMElnUFNCMlpXTXpLQ0F3TGpJMUlDOGdNalUxTGpBc0lDMHdMakkxSUM4Z01qVTFMakFzSURBdU1qVWdMeUF5TlRVdU1DQXBPd29KQ1dScGRHaGxjbDl6YUdsbWRGOVNSMElnUFNCdGFYZ29JREl1TUNBcUlHUnBkR2hsY2w5emFHbG1kRjlTUjBJc0lDMHlMakFnS2lCa2FYUm9aWEpmYzJocFpuUmZVa2RDTENCbmNtbGtYM0J2YzJsMGFXOXVJQ2s3Q2drSmNtVjBkWEp1SUdOdmJHOXlJQ3NnWkdsMGFHVnlYM05vYVdaMFgxSkhRanNLQ1gwS0kyVnVaR2xtWUN3Z1IzQWdQU0JnWm14dllYUWdjbTkxWjJodVpYTnpSbUZqZEc5eUlEMGdjbTkxWjJodVpYTnpPd29qYVdaa1pXWWdWVk5GWDFKUFZVZElUa1ZUVTAxQlVBb0pkbVZqTkNCMFpYaGxiRkp2ZFdkb2JtVnpjeUE5SUhSbGVIUjFjbVV5UkNnZ2NtOTFaMmh1WlhOelRXRndMQ0IyVlhZZ0tUc0tDWEp2ZFdkb2JtVnpjMFpoWTNSdmNpQXFQU0IwWlhobGJGSnZkV2RvYm1WemN5NW5Pd29qWlc1a2FXWmdMQ0JXY0NBOUlHQWphV1prWldZZ1ZWTkZYMUpQVlVkSVRrVlRVMDFCVUFvSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2NtOTFaMmh1WlhOelRXRndPd29qWlc1a2FXWmdMQ0JYY0NBOUlHQWphV1prWldZZ1ZWTkZYMU5JUVVSUFYwMUJVQW9KSTJsbUlFNVZUVjlFU1ZKZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NRbDFibWxtYjNKdElITmhiWEJzWlhJeVJDQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjRnNnVGxWTlgwUkpVbDlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKZG1GeWVXbHVaeUIyWldNMElIWkVhWEpsWTNScGIyNWhiRk5vWVdSdmQwTnZiM0prV3lCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1FsemRISjFZM1FnUkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmR5QjdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMUpoWkdsMWN6c0tDUWtKZG1Wak1pQnphR0ZrYjNkTllYQlRhWHBsT3dvSkNYMDdDZ2tKZFc1cFptOXliU0JFYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lHUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2R6V3lCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1NObGJtUnBaZ29KSTJsbUlFNVZUVjlUVUU5VVgweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjM0J2ZEZOb1lXUnZkMDFoY0ZzZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkNYWmhjbmxwYm1jZ2RtVmpOQ0IyVTNCdmRGTm9ZV1J2ZDBOdmIzSmtXeUJPVlUxZlUxQlBWRjlNU1VkSVZGOVRTRUZFVDFkVElGMDdDZ2tKYzNSeWRXTjBJRk53YjNSTWFXZG9kRk5vWVdSdmR5QjdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMDV2Y20xaGJFSnBZWE03Q2drSkNXWnNiMkYwSUhOb1lXUnZkMUpoWkdsMWN6c0tDUWtKZG1Wak1pQnphR0ZrYjNkTllYQlRhWHBsT3dvSkNYMDdDZ2tKZFc1cFptOXliU0JUY0c5MFRHbG5hSFJUYUdGa2IzY2djM0J2ZEV4cFoyaDBVMmhoWkc5M2Mxc2dUbFZOWDFOUVQxUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pJMlZ1WkdsbUNna2phV1lnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2NHOXBiblJUYUdGa2IzZE5ZWEJiSUU1VlRWOVFUMGxPVkY5TVNVZElWRjlUU0VGRVQxZFRJRjA3Q2drSmRtRnllV2x1WnlCMlpXTTBJSFpRYjJsdWRGTm9ZV1J2ZDBOdmIzSmtXeUJPVlUxZlVFOUpUbFJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1hOMGNuVmpkQ0JRYjJsdWRFeHBaMmgwVTJoaFpHOTNJSHNLQ1FrSlpteHZZWFFnYzJoaFpHOTNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVG05eWJXRnNRbWxoY3pzS0NRa0pabXh2WVhRZ2MyaGhaRzkzVW1Ga2FYVnpPd29KQ1FsMlpXTXlJSE5vWVdSdmQwMWhjRk5wZW1VN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBOaGJXVnlZVTVsWVhJN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBOaGJXVnlZVVpoY2pzS0NRbDlPd29KQ1hWdWFXWnZjbTBnVUc5cGJuUk1hV2RvZEZOb1lXUnZkeUJ3YjJsdWRFeHBaMmgwVTJoaFpHOTNjMXNnVGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTWdYVHNLQ1NObGJtUnBaZ29KWm14dllYUWdkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMkZ0Y0d4bGNqSkVJR1JsY0hSb2N5d2dkbVZqTWlCMWRpd2dabXh2WVhRZ1kyOXRjR0Z5WlNBcElIc0tDUWx5WlhSMWNtNGdjM1JsY0NnZ1kyOXRjR0Z5WlN3Z2RXNXdZV05yVWtkQ1FWUnZSR1Z3ZEdnb0lIUmxlSFIxY21VeVJDZ2daR1Z3ZEdoekxDQjFkaUFwSUNrZ0tUc0tDWDBLQ1habFl6SWdkR1Y0ZEhWeVpUSkVSR2x6ZEhKcFluVjBhVzl1S0NCellXMXdiR1Z5TWtRZ2MyaGhaRzkzTENCMlpXTXlJSFYySUNrZ2V3b0pDWEpsZEhWeWJpQjFibkJoWTJ0U1IwSkJWRzh5U0dGc1ppZ2dkR1Y0ZEhWeVpUSkVLQ0J6YUdGa2IzY3NJSFYySUNrZ0tUc0tDWDBLQ1dac2IyRjBJRlpUVFZOb1lXUnZkeUFvYzJGdGNHeGxjakpFSUhOb1lXUnZkeXdnZG1Wak1pQjFkaXdnWm14dllYUWdZMjl0Y0dGeVpTQXBld29KQ1dac2IyRjBJRzlqWTJ4MWMybHZiaUE5SURFdU1Ec0tDUWwyWldNeUlHUnBjM1J5YVdKMWRHbHZiaUE5SUhSbGVIUjFjbVV5UkVScGMzUnlhV0oxZEdsdmJpZ2djMmhoWkc5M0xDQjFkaUFwT3dvSkNXWnNiMkYwSUdoaGNtUmZjMmhoWkc5M0lEMGdjM1JsY0NnZ1kyOXRjR0Z5WlNBc0lHUnBjM1J5YVdKMWRHbHZiaTU0SUNrN0Nna0phV1lnS0doaGNtUmZjMmhoWkc5M0lDRTlJREV1TUNBcElIc0tDUWtKWm14dllYUWdaR2x6ZEdGdVkyVWdQU0JqYjIxd1lYSmxJQzBnWkdsemRISnBZblYwYVc5dUxuZ2dPd29KQ1FsbWJHOWhkQ0IyWVhKcFlXNWpaU0E5SUcxaGVDZ2dNQzR3TURBd01Dd2daR2x6ZEhKcFluVjBhVzl1TG5rZ0tpQmthWE4wY21saWRYUnBiMjR1ZVNBcE93b0pDUWxtYkc5aGRDQnpiMlowYm1WemMxOXdjbTlpWVdKcGJHbDBlU0E5SUhaaGNtbGhibU5sSUM4Z0tIWmhjbWxoYm1ObElDc2daR2x6ZEdGdVkyVWdLaUJrYVhOMFlXNWpaU0FwT3drSkNYTnZablJ1WlhOelgzQnliMkpoWW1sc2FYUjVJRDBnWTJ4aGJYQW9JQ2dnYzI5bWRHNWxjM05mY0hKdlltRmlhV3hwZEhrZ0xTQXdMak1nS1NBdklDZ2dNQzQ1TlNBdElEQXVNeUFwTENBd0xqQXNJREV1TUNBcE93a0pDVzlqWTJ4MWMybHZiaUE5SUdOc1lXMXdLQ0J0WVhnb0lHaGhjbVJmYzJoaFpHOTNMQ0J6YjJaMGJtVnpjMTl3Y205aVlXSnBiR2wwZVNBcExDQXdMakFzSURFdU1DQXBPd29KQ1gwS0NRbHlaWFIxY200Z2IyTmpiSFZ6YVc5dU93b0pmUW9KWm14dllYUWdaMlYwVTJoaFpHOTNLQ0J6WVcxd2JHVnlNa1FnYzJoaFpHOTNUV0Z3TENCMlpXTXlJSE5vWVdSdmQwMWhjRk5wZW1Vc0lHWnNiMkYwSUhOb1lXUnZkMEpwWVhNc0lHWnNiMkYwSUhOb1lXUnZkMUpoWkdsMWN5d2dkbVZqTkNCemFHRmtiM2REYjI5eVpDQXBJSHNLQ1FsbWJHOWhkQ0J6YUdGa2IzY2dQU0F4TGpBN0Nna0pjMmhoWkc5M1EyOXZjbVF1ZUhsNklDODlJSE5vWVdSdmQwTnZiM0prTG5jN0Nna0pjMmhoWkc5M1EyOXZjbVF1ZWlBclBTQnphR0ZrYjNkQ2FXRnpPd29KQ1dKMlpXTTBJR2x1Um5KMWMzUjFiVlpsWXlBOUlHSjJaV00wSUNnZ2MyaGhaRzkzUTI5dmNtUXVlQ0ErUFNBd0xqQXNJSE5vWVdSdmQwTnZiM0prTG5nZ1BEMGdNUzR3TENCemFHRmtiM2REYjI5eVpDNTVJRDQ5SURBdU1Dd2djMmhoWkc5M1EyOXZjbVF1ZVNBOFBTQXhMakFnS1RzS0NRbGliMjlzSUdsdVJuSjFjM1IxYlNBOUlHRnNiQ2dnYVc1R2NuVnpkSFZ0Vm1WaklDazdDZ2tKWW5abFl6SWdabkoxYzNSMWJWUmxjM1JXWldNZ1BTQmlkbVZqTWlnZ2FXNUdjblZ6ZEhWdExDQnphR0ZrYjNkRGIyOXlaQzU2SUR3OUlERXVNQ0FwT3dvSkNXSnZiMndnWm5KMWMzUjFiVlJsYzNRZ1BTQmhiR3dvSUdaeWRYTjBkVzFVWlhOMFZtVmpJQ2s3Q2drSmFXWWdLQ0JtY25WemRIVnRWR1Z6ZENBcElIc0tDUWtqYVdZZ1pHVm1hVzVsWkNnZ1UwaEJSRTlYVFVGUVgxUlpVRVZmVUVOR0lDa0tDUWtKZG1Wak1pQjBaWGhsYkZOcGVtVWdQU0IyWldNeUtDQXhMakFnS1NBdklITm9ZV1J2ZDAxaGNGTnBlbVU3Q2drSkNXWnNiMkYwSUdSNE1DQTlJQzBnZEdWNFpXeFRhWHBsTG5nZ0tpQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNXWnNiMkYwSUdSNU1DQTlJQzBnZEdWNFpXeFRhWHBsTG5rZ0tpQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNXWnNiMkYwSUdSNE1TQTlJQ3NnZEdWNFpXeFRhWHBsTG5nZ0tpQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNXWnNiMkYwSUdSNU1TQTlJQ3NnZEdWNFpXeFRhWHBsTG5rZ0tpQnphR0ZrYjNkU1lXUnBkWE03Q2drSkNXWnNiMkYwSUdSNE1pQTlJR1I0TUNBdklESXVNRHNLQ1FrSlpteHZZWFFnWkhreUlEMGdaSGt3SUM4Z01pNHdPd29KQ1FsbWJHOWhkQ0JrZURNZ1BTQmtlREVnTHlBeUxqQTdDZ2tKQ1dac2IyRjBJR1I1TXlBOUlHUjVNU0F2SURJdU1Ec0tDUWtKYzJoaFpHOTNJRDBnS0FvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNQ3dnWkhrd0lDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnTUM0d0xDQmtlVEFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlREVzSUdSNU1DQXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE1pd2daSGt5SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2dNQzR3TENCa2VUSWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VETXNJR1I1TWlBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCemFHRmtiM2REYjI5eVpDNTRlU0FySUhabFl6SW9JR1I0TUN3Z01DNHdJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3lMQ0F3TGpBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUlDc2dkbVZqTWlnZ1pIZ3pMQ0F3TGpBZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcElDc0tDUWtKQ1hSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2MyaGhaRzkzUTI5dmNtUXVlSGtnS3lCMlpXTXlLQ0JrZURFc0lEQXVNQ0FwTENCemFHRmtiM2REYjI5eVpDNTZJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lHUjRNaXdnWkhreklDa3NJSE5vWVdSdmQwTnZiM0prTG5vZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lITm9ZV1J2ZDBOdmIzSmtMbmg1SUNzZ2RtVmpNaWdnTUM0d0xDQmtlVE1nS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwSUNzS0NRa0pDWFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnYzJoaFpHOTNRMjl2Y21RdWVIa2dLeUIyWldNeUtDQmtlRE1zSUdSNU15QXBMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQnphR0ZrYjNkRGIyOXlaQzU0ZVNBcklIWmxZeklvSUdSNE1Dd2daSGt4SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUhOb1lXUnZkME52YjNKa0xuaDVJQ3NnZG1Wak1pZ2dNQzR3TENCa2VURWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2djMmhoWkc5M1EyOXZjbVF1ZUhrZ0t5QjJaV015S0NCa2VERXNJR1I1TVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrS0NRa0pLU0FxSUNnZ01TNHdJQzhnTVRjdU1DQXBPd29KQ1NObGJHbG1JR1JsWm1sdVpXUW9JRk5JUVVSUFYwMUJVRjlVV1ZCRlgxQkRSbDlUVDBaVUlDa0tDUWtKZG1Wak1pQjBaWGhsYkZOcGVtVWdQU0IyWldNeUtDQXhMakFnS1NBdklITm9ZV1J2ZDAxaGNGTnBlbVU3Q2drSkNXWnNiMkYwSUdSNElEMGdkR1Y0Wld4VGFYcGxMbmc3Q2drSkNXWnNiMkYwSUdSNUlEMGdkR1Y0Wld4VGFYcGxMbms3Q2drSkNYWmxZeklnZFhZZ1BTQnphR0ZrYjNkRGIyOXlaQzU0ZVRzS0NRa0pkbVZqTWlCbUlEMGdabkpoWTNRb0lIVjJJQ29nYzJoaFpHOTNUV0Z3VTJsNlpTQXJJREF1TlNBcE93b0pDUWwxZGlBdFBTQm1JQ29nZEdWNFpXeFRhWHBsT3dvSkNRbHphR0ZrYjNjZ1BTQW9DZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJMQ0J6YUdGa2IzZERiMjl5WkM1NklDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JR1I0TENBd0xqQWdLU3dnYzJoaFpHOTNRMjl2Y21RdWVpQXBJQ3NLQ1FrSkNYUmxlSFIxY21VeVJFTnZiWEJoY21Vb0lITm9ZV1J2ZDAxaGNDd2dkWFlnS3lCMlpXTXlLQ0F3TGpBc0lHUjVJQ2tzSUhOb1lXUnZkME52YjNKa0xub2dLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RHVjRaV3hUYVhwbExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrZ0t3b0pDUWtKYldsNEtDQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTFdSNExDQXdMakFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwTENBS0NRa0pDUWtnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lESXVNQ0FxSUdSNExDQXdMakFnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwTEFvSkNRa0pDU0JtTG5nZ0tTQXJDZ2tKQ1FsdGFYZ29JSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NBdFpIZ3NJR1I1SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1N3Z0Nna0pDUWtKSUhSbGVIUjFjbVV5UkVOdmJYQmhjbVVvSUhOb1lXUnZkMDFoY0N3Z2RYWWdLeUIyWldNeUtDQXlMakFnS2lCa2VDd2daSGtnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwTEFvSkNRa0pDU0JtTG5nZ0tTQXJDZ2tKQ1FsdGFYZ29JSFJsZUhSMWNtVXlSRU52YlhCaGNtVW9JSE5vWVdSdmQwMWhjQ3dnZFhZZ0t5QjJaV015S0NBd0xqQXNJQzFrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0lBb0pDUWtKQ1NCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dNQzR3TENBeUxqQWdLaUJrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0Nna0pDUWtKSUdZdWVTQXBJQ3NLQ1FrSkNXMXBlQ2dnZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCMWRpQXJJSFpsWXpJb0lHUjRMQ0F0WkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExDQUtDUWtKQ1FrZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JR1I0TENBeUxqQWdLaUJrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0Nna0pDUWtKSUdZdWVTQXBJQ3NLQ1FrSkNXMXBlQ2dnYldsNEtDQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTFdSNExDQXRaSGtnS1N3Z2MyaGhaRzkzUTI5dmNtUXVlaUFwTENBS0NRa0pDUWtKSUNCMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lIVjJJQ3NnZG1Wak1pZ2dNaTR3SUNvZ1pIZ3NJQzFrZVNBcExDQnphR0ZrYjNkRGIyOXlaQzU2SUNrc0Nna0pDUWtKQ1NBZ1ppNTRJQ2tzQ2drSkNRa0pJRzFwZUNnZ2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQjFkaUFySUhabFl6SW9JQzFrZUN3Z01pNHdJQ29nWkhrZ0tTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcExDQUtDUWtKQ1FrSklDQjBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJSFYySUNzZ2RtVmpNaWdnTWk0d0lDb2daSGdzSURJdU1DQXFJR1I1SUNrc0lITm9ZV1J2ZDBOdmIzSmtMbm9nS1N3S0NRa0pDUWtKSUNCbUxuZ2dLU3dLQ1FrSkNRa2daaTU1SUNrS0NRa0pLU0FxSUNnZ01TNHdJQzhnT1M0d0lDazdDZ2tKSTJWc2FXWWdaR1ZtYVc1bFpDZ2dVMGhCUkU5WFRVRlFYMVJaVUVWZlZsTk5JQ2tLQ1FrSmMyaGhaRzkzSUQwZ1ZsTk5VMmhoWkc5M0tDQnphR0ZrYjNkTllYQXNJSE5vWVdSdmQwTnZiM0prTG5oNUxDQnphR0ZrYjNkRGIyOXlaQzU2SUNrN0Nna0pJMlZzYzJVS0NRa0pjMmhoWkc5M0lEMGdkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0J6YUdGa2IzZERiMjl5WkM1NGVTd2djMmhoWkc5M1EyOXZjbVF1ZWlBcE93b0pDU05sYm1ScFpnb0pDWDBLQ1FseVpYUjFjbTRnYzJoaFpHOTNPd29KZlFvSmRtVmpNaUJqZFdKbFZHOVZWaWdnZG1Wak15QjJMQ0JtYkc5aGRDQjBaWGhsYkZOcGVtVlpJQ2tnZXdvSkNYWmxZek1nWVdKelZpQTlJR0ZpY3lnZ2RpQXBPd29KQ1dac2IyRjBJSE5qWVd4bFZHOURkV0psSUQwZ01TNHdJQzhnYldGNEtDQmhZbk5XTG5nc0lHMWhlQ2dnWVdKelZpNTVMQ0JoWW5OV0xub2dLU0FwT3dvSkNXRmljMVlnS2owZ2MyTmhiR1ZVYjBOMVltVTdDZ2tKZGlBcVBTQnpZMkZzWlZSdlEzVmlaU0FxSUNnZ01TNHdJQzBnTWk0d0lDb2dkR1Y0Wld4VGFYcGxXU0FwT3dvSkNYWmxZeklnY0d4aGJtRnlJRDBnZGk1NGVUc0tDUWxtYkc5aGRDQmhiRzF2YzNSQlZHVjRaV3dnUFNBeExqVWdLaUIwWlhobGJGTnBlbVZaT3dvSkNXWnNiMkYwSUdGc2JXOXpkRTl1WlNBOUlERXVNQ0F0SUdGc2JXOXpkRUZVWlhobGJEc0tDUWxwWmlBb0lHRmljMVl1ZWlBK1BTQmhiRzF2YzNSUGJtVWdLU0I3Q2drSkNXbG1JQ2dnZGk1NklENGdNQzR3SUNrS0NRa0pDWEJzWVc1aGNpNTRJRDBnTkM0d0lDMGdkaTU0T3dvSkNYMGdaV3h6WlNCcFppQW9JR0ZpYzFZdWVDQStQU0JoYkcxdmMzUlBibVVnS1NCN0Nna0pDV1pzYjJGMElITnBaMjVZSUQwZ2MybG5iaWdnZGk1NElDazdDZ2tKQ1hCc1lXNWhjaTU0SUQwZ2RpNTZJQ29nYzJsbmJsZ2dLeUF5TGpBZ0tpQnphV2R1V0RzS0NRbDlJR1ZzYzJVZ2FXWWdLQ0JoWW5OV0xua2dQajBnWVd4dGIzTjBUMjVsSUNrZ2V3b0pDUWxtYkc5aGRDQnphV2R1V1NBOUlITnBaMjRvSUhZdWVTQXBPd29KQ1Fsd2JHRnVZWEl1ZUNBOUlIWXVlQ0FySURJdU1DQXFJSE5wWjI1WklDc2dNaTR3T3dvSkNRbHdiR0Z1WVhJdWVTQTlJSFl1ZWlBcUlITnBaMjVaSUMwZ01pNHdPd29KQ1gwS0NRbHlaWFIxY200Z2RtVmpNaWdnTUM0eE1qVXNJREF1TWpVZ0tTQXFJSEJzWVc1aGNpQXJJSFpsWXpJb0lEQXVNemMxTENBd0xqYzFJQ2s3Q2dsOUNnbG1iRzloZENCblpYUlFiMmx1ZEZOb1lXUnZkeWdnYzJGdGNHeGxjakpFSUhOb1lXUnZkMDFoY0N3Z2RtVmpNaUJ6YUdGa2IzZE5ZWEJUYVhwbExDQm1iRzloZENCemFHRmtiM2RDYVdGekxDQm1iRzloZENCemFHRmtiM2RTWVdScGRYTXNJSFpsWXpRZ2MyaGhaRzkzUTI5dmNtUXNJR1pzYjJGMElITm9ZV1J2ZDBOaGJXVnlZVTVsWVhJc0lHWnNiMkYwSUhOb1lXUnZkME5oYldWeVlVWmhjaUFwSUhzS0NRbDJaV015SUhSbGVHVnNVMmw2WlNBOUlIWmxZeklvSURFdU1DQXBJQzhnS0NCemFHRmtiM2ROWVhCVGFYcGxJQ29nZG1Wak1pZ2dOQzR3TENBeUxqQWdLU0FwT3dvSkNYWmxZek1nYkdsbmFIUlViMUJ2YzJsMGFXOXVJRDBnYzJoaFpHOTNRMjl2Y21RdWVIbDZPd29KQ1dac2IyRjBJR1J3SUQwZ0tDQnNaVzVuZEdnb0lHeHBaMmgwVkc5UWIzTnBkR2x2YmlBcElDMGdjMmhoWkc5M1EyRnRaWEpoVG1WaGNpQXBJQzhnS0NCemFHRmtiM2REWVcxbGNtRkdZWElnTFNCemFHRmtiM2REWVcxbGNtRk9aV0Z5SUNrN0NRbGtjQ0FyUFNCemFHRmtiM2RDYVdGek93b0pDWFpsWXpNZ1ltUXpSQ0E5SUc1dmNtMWhiR2w2WlNnZ2JHbG5hSFJVYjFCdmMybDBhVzl1SUNrN0Nna0pJMmxtSUdSbFptbHVaV1FvSUZOSVFVUlBWMDFCVUY5VVdWQkZYMUJEUmlBcElIeDhJR1JsWm1sdVpXUW9JRk5JUVVSUFYwMUJVRjlVV1ZCRlgxQkRSbDlUVDBaVUlDa2dmSHdnWkdWbWFXNWxaQ2dnVTBoQlJFOVhUVUZRWDFSWlVFVmZWbE5OSUNrS0NRa0pkbVZqTWlCdlptWnpaWFFnUFNCMlpXTXlLQ0F0SURFc0lERWdLU0FxSUhOb1lXUnZkMUpoWkdsMWN5QXFJSFJsZUdWc1UybDZaUzU1T3dvSkNRbHlaWFIxY200Z0tBb0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU0ZVhrc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkNBcklHOW1abk5sZEM1NWVYa3NJSFJsZUdWc1UybDZaUzU1SUNrc0lHUndJQ2tnS3dvSkNRa0pkR1Y0ZEhWeVpUSkVRMjl0Y0dGeVpTZ2djMmhoWkc5M1RXRndMQ0JqZFdKbFZHOVZWaWdnWW1RelJDQXJJRzltWm5ObGRDNTRlWGdzSUhSbGVHVnNVMmw2WlM1NUlDa3NJR1J3SUNrZ0t3b0pDUWtKZEdWNGRIVnlaVEpFUTI5dGNHRnlaU2dnYzJoaFpHOTNUV0Z3TENCamRXSmxWRzlWVmlnZ1ltUXpSQ0FySUc5bVpuTmxkQzU1ZVhnc0lIUmxlR1ZzVTJsNlpTNTVJQ2tzSUdSd0lDa2dLd29KQ1FrSmRHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkN3Z2RHVjRaV3hUYVhwbExua2dLU3dnWkhBZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lHTjFZbVZVYjFWV0tDQmlaRE5FSUNzZ2IyWm1jMlYwTG5oNGVTd2dkR1Y0Wld4VGFYcGxMbmtnS1N3Z1pIQWdLU0FyQ2drSkNRbDBaWGgwZFhKbE1rUkRiMjF3WVhKbEtDQnphR0ZrYjNkTllYQXNJR04xWW1WVWIxVldLQ0JpWkRORUlDc2diMlptYzJWMExubDRlU3dnZEdWNFpXeFRhWHBsTG5rZ0tTd2daSEFnS1NBckNna0pDUWwwWlhoMGRYSmxNa1JEYjIxd1lYSmxLQ0J6YUdGa2IzZE5ZWEFzSUdOMVltVlViMVZXS0NCaVpETkVJQ3NnYjJabWMyVjBMbmg0ZUN3Z2RHVjRaV3hUYVhwbExua2dLU3dnWkhBZ0tTQXJDZ2tKQ1FsMFpYaDBkWEpsTWtSRGIyMXdZWEpsS0NCemFHRmtiM2ROWVhBc0lHTjFZbVZVYjFWV0tDQmlaRE5FSUNzZ2IyWm1jMlYwTG5sNGVDd2dkR1Y0Wld4VGFYcGxMbmtnS1N3Z1pIQWdLUW9KQ1FrcElDb2dLQ0F4TGpBZ0x5QTVMakFnS1RzS0NRa2paV3h6WlFvSkNRbHlaWFIxY200Z2RHVjRkSFZ5WlRKRVEyOXRjR0Z5WlNnZ2MyaGhaRzkzVFdGd0xDQmpkV0psVkc5VlZpZ2dZbVF6UkN3Z2RHVjRaV3hUYVhwbExua2dLU3dnWkhBZ0tUc0tDUWtqWlc1a2FXWUtDWDBLSTJWdVpHbG1ZQ3dnY1hBZ1BTQmdJMmxtWkdWbUlGVlRSVjlUU0VGRVQxZE5RVkFLQ1NOcFppQk9WVTFmUkVsU1gweEpSMGhVWDFOSVFVUlBWMU1nUGlBd0Nna0pkVzVwWm05eWJTQnRZWFEwSUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGMGNtbDRXeUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1hUc0tDUWwyWVhKNWFXNW5JSFpsWXpRZ2RrUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1EyOXZjbVJiSUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1hOMGNuVmpkQ0JFYVhKbFkzUnBiMjVoYkV4cFoyaDBVMmhoWkc5M0lIc0tDUWtKWm14dllYUWdjMmhoWkc5M1FtbGhjenNLQ1FrSlpteHZZWFFnYzJoaFpHOTNUbTl5YldGc1FtbGhjenNLQ1FrSlpteHZZWFFnYzJoaFpHOTNVbUZrYVhWek93b0pDUWwyWldNeUlITm9ZV1J2ZDAxaGNGTnBlbVU3Q2drSmZUc0tDUWwxYm1sbWIzSnRJRVJwY21WamRHbHZibUZzVEdsbmFIUlRhR0ZrYjNjZ1pHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkM05iSUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KSTJWdVpHbG1DZ2tqYVdZZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUErSURBS0NRbDFibWxtYjNKdElHMWhkRFFnYzNCdmRGTm9ZV1J2ZDAxaGRISnBlRnNnVGxWTlgxTlFUMVJmVEVsSFNGUmZVMGhCUkU5WFV5QmRPd29KQ1haaGNubHBibWNnZG1Wak5DQjJVM0J2ZEZOb1lXUnZkME52YjNKa1d5Qk9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna0pjM1J5ZFdOMElGTndiM1JNYVdkb2RGTm9ZV1J2ZHlCN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQxSmhaR2wxY3pzS0NRa0pkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1gwN0Nna0pkVzVwWm05eWJTQlRjRzkwVEdsbmFIUlRhR0ZrYjNjZ2MzQnZkRXhwWjJoMFUyaGhaRzkzYzFzZ1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVeUJkT3dvSkkyVnVaR2xtQ2dramFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tKZFc1cFptOXliU0J0WVhRMElIQnZhVzUwVTJoaFpHOTNUV0YwY21sNFd5Qk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlCZE93b0pDWFpoY25scGJtY2dkbVZqTkNCMlVHOXBiblJUYUdGa2IzZERiMjl5WkZzZ1RsVk5YMUJQU1U1VVgweEpSMGhVWDFOSVFVUlBWMU1nWFRzS0NRbHpkSEoxWTNRZ1VHOXBiblJNYVdkb2RGTm9ZV1J2ZHlCN0Nna0pDV1pzYjJGMElITm9ZV1J2ZDBKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTdDZ2tKQ1dac2IyRjBJSE5vWVdSdmQxSmhaR2wxY3pzS0NRa0pkbVZqTWlCemFHRmtiM2ROWVhCVGFYcGxPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZERZVzFsY21GT1pXRnlPd29KQ1FsbWJHOWhkQ0J6YUdGa2IzZERZVzFsY21GR1lYSTdDZ2tKZlRzS0NRbDFibWxtYjNKdElGQnZhVzUwVEdsbmFIUlRhR0ZrYjNjZ2NHOXBiblJNYVdkb2RGTm9ZV1J2ZDNOYklFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUYwN0Nna2paVzVrYVdZS0kyVnVaR2xtWUN3Z1dIQWdQU0JnSTJsbVpHVm1JRlZUUlY5VFNFRkVUMWROUVZBS0NTTnBaaUJPVlUxZlJFbFNYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdJSHg4SUU1VlRWOVRVRTlVWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3SUh4OElFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUSUQ0Z01Bb0pDWFpsWXpNZ2MyaGhaRzkzVjI5eWJHUk9iM0p0WVd3Z1BTQnBiblpsY25ObFZISmhibk5tYjNKdFJHbHlaV04wYVc5dUtDQjBjbUZ1YzJadmNtMWxaRTV2Y20xaGJDd2dkbWxsZDAxaGRISnBlQ0FwT3dvSkNYWmxZelFnYzJoaFpHOTNWMjl5YkdSUWIzTnBkR2x2YmpzS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5RVNWSmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDU053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUUtDV1p2Y2lBb0lHbHVkQ0JwSUQwZ01Ec2dhU0E4SUU1VlRWOUVTVkpmVEVsSFNGUmZVMGhCUkU5WFV6c2dhU0FyS3lBcElIc0tDUWx6YUdGa2IzZFhiM0pzWkZCdmMybDBhVzl1SUQwZ2QyOXliR1JRYjNOcGRHbHZiaUFySUhabFl6UW9JSE5vWVdSdmQxZHZjbXhrVG05eWJXRnNJQ29nWkdseVpXTjBhVzl1WVd4TWFXZG9kRk5vWVdSdmQzTmJJR2tnWFM1emFHRmtiM2RPYjNKdFlXeENhV0Z6TENBd0lDazdDZ2tKZGtScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzUTI5dmNtUmJJR2tnWFNBOUlHUnBjbVZqZEdsdmJtRnNVMmhoWkc5M1RXRjBjbWw0V3lCcElGMGdLaUJ6YUdGa2IzZFhiM0pzWkZCdmMybDBhVzl1T3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZVMUJQVkY5TVNVZElWRjlUU0VGRVQxZFRPeUJwSUNzcklDa2dld29KQ1hOb1lXUnZkMWR2Y214a1VHOXphWFJwYjI0Z1BTQjNiM0pzWkZCdmMybDBhVzl1SUNzZ2RtVmpOQ2dnYzJoaFpHOTNWMjl5YkdST2IzSnRZV3dnS2lCemNHOTBUR2xuYUhSVGFHRmtiM2R6V3lCcElGMHVjMmhoWkc5M1RtOXliV0ZzUW1saGN5d2dNQ0FwT3dvSkNYWlRjRzkwVTJoaFpHOTNRMjl2Y21SYklHa2dYU0E5SUhOd2IzUlRhR0ZrYjNkTllYUnlhWGhiSUdrZ1hTQXFJSE5vWVdSdmQxZHZjbXhrVUc5emFYUnBiMjQ3Q2dsOUNna2pjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdYMlZ1WkFvSkkyVnVaR2xtQ2dramFXWWdUbFZOWDFCUFNVNVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZVRTlKVGxSZlRFbEhTRlJmVTBoQlJFOVhVenNnYVNBckt5QXBJSHNLQ1FsemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dUlEMGdkMjl5YkdSUWIzTnBkR2x2YmlBcklIWmxZelFvSUhOb1lXUnZkMWR2Y214a1RtOXliV0ZzSUNvZ2NHOXBiblJNYVdkb2RGTm9ZV1J2ZDNOYklHa2dYUzV6YUdGa2IzZE9iM0p0WVd4Q2FXRnpMQ0F3SUNrN0Nna0pkbEJ2YVc1MFUyaGhaRzkzUTI5dmNtUmJJR2tnWFNBOUlIQnZhVzUwVTJoaFpHOTNUV0YwY21sNFd5QnBJRjBnS2lCemFHRmtiM2RYYjNKc1pGQnZjMmwwYVc5dU93b0pmUW9KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5bGJtUUtDU05sYm1ScFpnb2paVzVrYVdaZ0xDQktjQ0E5SUdCbWJHOWhkQ0JuWlhSVGFHRmtiM2ROWVhOcktDa2dld29KWm14dllYUWdjMmhoWkc5M0lEMGdNUzR3T3dvSkkybG1aR1ZtSUZWVFJWOVRTRUZFVDFkTlFWQUtDU05wWmlCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTWdQaUF3Q2dsRWFYSmxZM1JwYjI1aGJFeHBaMmgwVTJoaFpHOTNJR1JwY21WamRHbHZibUZzVEdsbmFIUTdDZ2tqY0hKaFoyMWhJSFZ1Y205c2JGOXNiMjl3WDNOMFlYSjBDZ2xtYjNJZ0tDQnBiblFnYVNBOUlEQTdJR2tnUENCT1ZVMWZSRWxTWDB4SlIwaFVYMU5JUVVSUFYxTTdJR2tnS3lzZ0tTQjdDZ2tKWkdseVpXTjBhVzl1WVd4TWFXZG9kQ0E5SUdScGNtVmpkR2x2Ym1Gc1RHbG5hSFJUYUdGa2IzZHpXeUJwSUYwN0Nna0pjMmhoWkc5M0lDbzlJSEpsWTJWcGRtVlRhR0ZrYjNjZ1B5Qm5aWFJUYUdGa2IzY29JR1JwY21WamRHbHZibUZzVTJoaFpHOTNUV0Z3V3lCcElGMHNJR1JwY21WamRHbHZibUZzVEdsbmFIUXVjMmhoWkc5M1RXRndVMmw2WlN3Z1pHbHlaV04wYVc5dVlXeE1hV2RvZEM1emFHRmtiM2RDYVdGekxDQmthWEpsWTNScGIyNWhiRXhwWjJoMExuTm9ZV1J2ZDFKaFpHbDFjeXdnZGtScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzUTI5dmNtUmJJR2tnWFNBcElEb2dNUzR3T3dvSmZRb0pJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1RS0NTTmxibVJwWmdvSkkybG1JRTVWVFY5VFVFOVVYMHhKUjBoVVgxTklRVVJQVjFNZ1BpQXdDZ2xUY0c5MFRHbG5hSFJUYUdGa2IzY2djM0J2ZEV4cFoyaDBPd29KSTNCeVlXZHRZU0IxYm5KdmJHeGZiRzl2Y0Y5emRHRnlkQW9KWm05eUlDZ2dhVzUwSUdrZ1BTQXdPeUJwSUR3Z1RsVk5YMU5RVDFSZlRFbEhTRlJmVTBoQlJFOVhVenNnYVNBckt5QXBJSHNLQ1FsemNHOTBUR2xuYUhRZ1BTQnpjRzkwVEdsbmFIUlRhR0ZrYjNkeld5QnBJRjA3Q2drSmMyaGhaRzkzSUNvOUlISmxZMlZwZG1WVGFHRmtiM2NnUHlCblpYUlRhR0ZrYjNjb0lITndiM1JUYUdGa2IzZE5ZWEJiSUdrZ1hTd2djM0J2ZEV4cFoyaDBMbk5vWVdSdmQwMWhjRk5wZW1Vc0lITndiM1JNYVdkb2RDNXphR0ZrYjNkQ2FXRnpMQ0J6Y0c5MFRHbG5hSFF1YzJoaFpHOTNVbUZrYVhWekxDQjJVM0J2ZEZOb1lXUnZkME52YjNKa1d5QnBJRjBnS1NBNklERXVNRHNLQ1gwS0NTTndjbUZuYldFZ2RXNXliMnhzWDJ4dmIzQmZaVzVrQ2dralpXNWthV1lLQ1NOcFppQk9WVTFmVUU5SlRsUmZURWxIU0ZSZlUwaEJSRTlYVXlBK0lEQUtDVkJ2YVc1MFRHbG5hSFJUYUdGa2IzY2djRzlwYm5STWFXZG9kRHNLQ1NOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNCZmMzUmhjblFLQ1dadmNpQW9JR2x1ZENCcElEMGdNRHNnYVNBOElFNVZUVjlRVDBsT1ZGOU1TVWRJVkY5VFNFRkVUMWRUT3lCcElDc3JJQ2tnZXdvSkNYQnZhVzUwVEdsbmFIUWdQU0J3YjJsdWRFeHBaMmgwVTJoaFpHOTNjMXNnYVNCZE93b0pDWE5vWVdSdmR5QXFQU0J5WldObGFYWmxVMmhoWkc5M0lEOGdaMlYwVUc5cGJuUlRhR0ZrYjNjb0lIQnZhVzUwVTJoaFpHOTNUV0Z3V3lCcElGMHNJSEJ2YVc1MFRHbG5hSFF1YzJoaFpHOTNUV0Z3VTJsNlpTd2djRzlwYm5STWFXZG9kQzV6YUdGa2IzZENhV0Z6TENCd2IybHVkRXhwWjJoMExuTm9ZV1J2ZDFKaFpHbDFjeXdnZGxCdmFXNTBVMmhoWkc5M1EyOXZjbVJiSUdrZ1hTd2djRzlwYm5STWFXZG9kQzV6YUdGa2IzZERZVzFsY21GT1pXRnlMQ0J3YjJsdWRFeHBaMmgwTG5Ob1lXUnZkME5oYldWeVlVWmhjaUFwSURvZ01TNHdPd29KZlFvSkkzQnlZV2R0WVNCMWJuSnZiR3hmYkc5dmNGOWxibVFLQ1NObGJtUnBaZ29KSTJWdVpHbG1DZ2x5WlhSMWNtNGdjMmhoWkc5M093cDlZQ3dnV1hBZ1BTQmdJMmxtWkdWbUlGVlRSVjlUUzBsT1RrbE9Sd29KYldGME5DQmliMjVsVFdGMFdDQTlJR2RsZEVKdmJtVk5ZWFJ5YVhnb0lITnJhVzVKYm1SbGVDNTRJQ2s3Q2dsdFlYUTBJR0p2Ym1WTllYUlpJRDBnWjJWMFFtOXVaVTFoZEhKcGVDZ2djMnRwYmtsdVpHVjRMbmtnS1RzS0NXMWhkRFFnWW05dVpVMWhkRm9nUFNCblpYUkNiMjVsVFdGMGNtbDRLQ0J6YTJsdVNXNWtaWGd1ZWlBcE93b0piV0YwTkNCaWIyNWxUV0YwVnlBOUlHZGxkRUp2Ym1WTllYUnlhWGdvSUhOcmFXNUpibVJsZUM1M0lDazdDaU5sYm1ScFptQXNJRnB3SUQwZ1lDTnBabVJsWmlCVlUwVmZVMHRKVGs1SlRrY0tDWFZ1YVdadmNtMGdiV0YwTkNCaWFXNWtUV0YwY21sNE93b0pkVzVwWm05eWJTQnRZWFEwSUdKcGJtUk5ZWFJ5YVhoSmJuWmxjbk5sT3dvSkkybG1aR1ZtSUVKUFRrVmZWRVZZVkZWU1JRb0pDWFZ1YVdadmNtMGdhR2xuYUhBZ2MyRnRjR3hsY2pKRUlHSnZibVZVWlhoMGRYSmxPd29KQ1hWdWFXWnZjbTBnYVc1MElHSnZibVZVWlhoMGRYSmxVMmw2WlRzS0NRbHRZWFEwSUdkbGRFSnZibVZOWVhSeWFYZ29JR052Ym5OMElHbHVJR1pzYjJGMElHa2dLU0I3Q2drSkNXWnNiMkYwSUdvZ1BTQnBJQ29nTkM0d093b0pDUWxtYkc5aGRDQjRJRDBnYlc5a0tDQnFMQ0JtYkc5aGRDZ2dZbTl1WlZSbGVIUjFjbVZUYVhwbElDa2dLVHNLQ1FrSlpteHZZWFFnZVNBOUlHWnNiMjl5S0NCcUlDOGdabXh2WVhRb0lHSnZibVZVWlhoMGRYSmxVMmw2WlNBcElDazdDZ2tKQ1dac2IyRjBJR1I0SUQwZ01TNHdJQzhnWm14dllYUW9JR0p2Ym1WVVpYaDBkWEpsVTJsNlpTQXBPd29KQ1FsbWJHOWhkQ0JrZVNBOUlERXVNQ0F2SUdac2IyRjBLQ0JpYjI1bFZHVjRkSFZ5WlZOcGVtVWdLVHNLQ1FrSmVTQTlJR1I1SUNvZ0tDQjVJQ3NnTUM0MUlDazdDZ2tKQ1habFl6UWdkakVnUFNCMFpYaDBkWEpsTWtRb0lHSnZibVZVWlhoMGRYSmxMQ0IyWldNeUtDQmtlQ0FxSUNnZ2VDQXJJREF1TlNBcExDQjVJQ2tnS1RzS0NRa0pkbVZqTkNCMk1pQTlJSFJsZUhSMWNtVXlSQ2dnWW05dVpWUmxlSFIxY21Vc0lIWmxZeklvSUdSNElDb2dLQ0I0SUNzZ01TNDFJQ2tzSUhrZ0tTQXBPd29KQ1FsMlpXTTBJSFl6SUQwZ2RHVjRkSFZ5WlRKRUtDQmliMjVsVkdWNGRIVnlaU3dnZG1Wak1pZ2daSGdnS2lBb0lIZ2dLeUF5TGpVZ0tTd2dlU0FwSUNrN0Nna0pDWFpsWXpRZ2RqUWdQU0IwWlhoMGRYSmxNa1FvSUdKdmJtVlVaWGgwZFhKbExDQjJaV015S0NCa2VDQXFJQ2dnZUNBcklETXVOU0FwTENCNUlDa2dLVHNLQ1FrSmJXRjBOQ0JpYjI1bElEMGdiV0YwTkNnZ2RqRXNJSFl5TENCMk15d2dkalFnS1RzS0NRa0pjbVYwZFhKdUlHSnZibVU3Q2drSmZRb0pJMlZzYzJVS0NRbDFibWxtYjNKdElHMWhkRFFnWW05dVpVMWhkSEpwWTJWeld5Qk5RVmhmUWs5T1JWTWdYVHNLQ1FsdFlYUTBJR2RsZEVKdmJtVk5ZWFJ5YVhnb0lHTnZibk4wSUdsdUlHWnNiMkYwSUdrZ0tTQjdDZ2tKQ1cxaGREUWdZbTl1WlNBOUlHSnZibVZOWVhSeWFXTmxjMXNnYVc1MEtHa3BJRjA3Q2drSkNYSmxkSFZ5YmlCaWIyNWxPd29KQ1gwS0NTTmxibVJwWmdvalpXNWthV1pnTENBa2NDQTlJR0FqYVdaa1pXWWdWVk5GWDFOTFNVNU9TVTVIQ2dsMlpXTTBJSE5yYVc1V1pYSjBaWGdnUFNCaWFXNWtUV0YwY21sNElDb2dkbVZqTkNnZ2RISmhibk5tYjNKdFpXUXNJREV1TUNBcE93b0pkbVZqTkNCemEybHVibVZrSUQwZ2RtVmpOQ2dnTUM0d0lDazdDZ2x6YTJsdWJtVmtJQ3M5SUdKdmJtVk5ZWFJZSUNvZ2MydHBibFpsY25SbGVDQXFJSE5yYVc1WFpXbG5hSFF1ZURzS0NYTnJhVzV1WldRZ0t6MGdZbTl1WlUxaGRGa2dLaUJ6YTJsdVZtVnlkR1Y0SUNvZ2MydHBibGRsYVdkb2RDNTVPd29KYzJ0cGJtNWxaQ0FyUFNCaWIyNWxUV0YwV2lBcUlITnJhVzVXWlhKMFpYZ2dLaUJ6YTJsdVYyVnBaMmgwTG5vN0NnbHphMmx1Ym1Wa0lDczlJR0p2Ym1WTllYUlhJQ29nYzJ0cGJsWmxjblJsZUNBcUlITnJhVzVYWldsbmFIUXVkenNLQ1hSeVlXNXpabTl5YldWa0lEMGdLQ0JpYVc1a1RXRjBjbWw0U1c1MlpYSnpaU0FxSUhOcmFXNXVaV1FnS1M1NGVYbzdDaU5sYm1ScFptQXNJR3B3SUQwZ1lDTnBabVJsWmlCVlUwVmZVMHRKVGs1SlRrY0tDVzFoZERRZ2MydHBiazFoZEhKcGVDQTlJRzFoZERRb0lEQXVNQ0FwT3dvSmMydHBiazFoZEhKcGVDQXJQU0J6YTJsdVYyVnBaMmgwTG5nZ0tpQmliMjVsVFdGMFdEc0tDWE5yYVc1TllYUnlhWGdnS3owZ2MydHBibGRsYVdkb2RDNTVJQ29nWW05dVpVMWhkRms3Q2dsemEybHVUV0YwY21sNElDczlJSE5yYVc1WFpXbG5hSFF1ZWlBcUlHSnZibVZOWVhSYU93b0pjMnRwYmsxaGRISnBlQ0FyUFNCemEybHVWMlZwWjJoMExuY2dLaUJpYjI1bFRXRjBWenNLQ1hOcmFXNU5ZWFJ5YVhnZ1BTQmlhVzVrVFdGMGNtbDRTVzUyWlhKelpTQXFJSE5yYVc1TllYUnlhWGdnS2lCaWFXNWtUV0YwY21sNE93b0piMkpxWldOMFRtOXliV0ZzSUQwZ2RtVmpOQ2dnYzJ0cGJrMWhkSEpwZUNBcUlIWmxZelFvSUc5aWFtVmpkRTV2Y20xaGJDd2dNQzR3SUNrZ0tTNTRlWG83Q2dramFXWmtaV1lnVlZORlgxUkJUa2RGVGxRS0NRbHZZbXBsWTNSVVlXNW5aVzUwSUQwZ2RtVmpOQ2dnYzJ0cGJrMWhkSEpwZUNBcUlIWmxZelFvSUc5aWFtVmpkRlJoYm1kbGJuUXNJREF1TUNBcElDa3VlSGw2T3dvSkkyVnVaR2xtQ2lObGJtUnBabUFzSUZGd0lEMGdZR1pzYjJGMElITndaV04xYkdGeVUzUnlaVzVuZEdnN0NpTnBabVJsWmlCVlUwVmZVMUJGUTFWTVFWSk5RVkFLQ1habFl6UWdkR1Y0Wld4VGNHVmpkV3hoY2lBOUlIUmxlSFIxY21VeVJDZ2djM0JsWTNWc1lYSk5ZWEFzSUhaVmRpQXBPd29KYzNCbFkzVnNZWEpUZEhKbGJtZDBhQ0E5SUhSbGVHVnNVM0JsWTNWc1lYSXVjanNLSTJWc2MyVUtDWE53WldOMWJHRnlVM1J5Wlc1bmRHZ2dQU0F4TGpBN0NpTmxibVJwWm1Bc0lFdHdJRDBnWUNOcFptUmxaaUJWVTBWZlUxQkZRMVZNUVZKTlFWQUtDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE53WldOMWJHRnlUV0Z3T3dvalpXNWthV1pnTENCbGJTQTlJR0FqYVdZZ1pHVm1hVzVsWkNnZ1ZFOU9SVjlOUVZCUVNVNUhJQ2tLQ1dkc1gwWnlZV2REYjJ4dmNpNXlaMklnUFNCMGIyNWxUV0Z3Y0dsdVp5Z2daMnhmUm5KaFowTnZiRzl5TG5KbllpQXBPd29qWlc1a2FXWmdMQ0IwYlNBOUlHQWphV1p1WkdWbUlITmhkSFZ5WVhSbENpTmtaV1pwYm1VZ2MyRjBkWEpoZEdVb0lHRWdLU0JqYkdGdGNDZ2dZU3dnTUM0d0xDQXhMakFnS1FvalpXNWthV1lLZFc1cFptOXliU0JtYkc5aGRDQjBiMjVsVFdGd2NHbHVaMFY0Y0c5emRYSmxPd3AyWldNeklFeHBibVZoY2xSdmJtVk5ZWEJ3YVc1bktDQjJaV016SUdOdmJHOXlJQ2tnZXdvSmNtVjBkWEp1SUhSdmJtVk5ZWEJ3YVc1blJYaHdiM04xY21VZ0tpQmpiMnh2Y2pzS2ZRcDJaV016SUZKbGFXNW9ZWEprVkc5dVpVMWhjSEJwYm1jb0lIWmxZek1nWTI5c2IzSWdLU0I3Q2dsamIyeHZjaUFxUFNCMGIyNWxUV0Z3Y0dsdVowVjRjRzl6ZFhKbE93b0pjbVYwZFhKdUlITmhkSFZ5WVhSbEtDQmpiMnh2Y2lBdklDZ2dkbVZqTXlnZ01TNHdJQ2tnS3lCamIyeHZjaUFwSUNrN0NuMEtkbVZqTXlCUGNIUnBiV2w2WldSRGFXNWxiMjVVYjI1bFRXRndjR2x1WnlnZ2RtVmpNeUJqYjJ4dmNpQXBJSHNLQ1dOdmJHOXlJQ285SUhSdmJtVk5ZWEJ3YVc1blJYaHdiM04xY21VN0NnbGpiMnh2Y2lBOUlHMWhlQ2dnZG1Wak15Z2dNQzR3SUNrc0lHTnZiRzl5SUMwZ01DNHdNRFFnS1RzS0NYSmxkSFZ5YmlCd2IzY29JQ2dnWTI5c2IzSWdLaUFvSURZdU1pQXFJR052Ykc5eUlDc2dNQzQxSUNrZ0tTQXZJQ2dnWTI5c2IzSWdLaUFvSURZdU1pQXFJR052Ykc5eUlDc2dNUzQzSUNrZ0t5QXdMakEySUNrc0lIWmxZek1vSURJdU1pQXBJQ2s3Q24wS2RtVmpNeUJTVWxSQmJtUlBSRlJHYVhRb0lIWmxZek1nZGlBcElIc0tDWFpsWXpNZ1lTQTlJSFlnS2lBb0lIWWdLeUF3TGpBeU5EVTNPRFlnS1NBdElEQXVNREF3TURrd05UTTNPd29KZG1Wak15QmlJRDBnZGlBcUlDZ2dNQzQ1T0RNM01qa2dLaUIySUNzZ01DNDBNekk1TlRFd0lDa2dLeUF3TGpJek9EQTRNVHNLQ1hKbGRIVnliaUJoSUM4Z1lqc0tmUXAyWldNeklFRkRSVk5HYVd4dGFXTlViMjVsVFdGd2NHbHVaeWdnZG1Wak15QmpiMnh2Y2lBcElIc0tDV052Ym5OMElHMWhkRE1nUVVORlUwbHVjSFYwVFdGMElEMGdiV0YwTXlnS0NRbDJaV016S0NBd0xqVTVOekU1TENBd0xqQTNOakF3TENBd0xqQXlPRFF3SUNrc0NRbDJaV016S0NBd0xqTTFORFU0TENBd0xqa3dPRE0wTENBd0xqRXpNemd6SUNrc0Nna0pkbVZqTXlnZ01DNHdORGd5TXl3Z01DNHdNVFUyTml3Z01DNDRNemMzTnlBcENna3BPd29KWTI5dWMzUWdiV0YwTXlCQlEwVlRUM1YwY0hWMFRXRjBJRDBnYldGME15Z0tDUWwyWldNektDQWdNUzQyTURRM05Td2dMVEF1TVRBeU1EZ3NJQzB3TGpBd016STNJQ2tzQ1FsMlpXTXpLQ0F0TUM0MU16RXdPQ3dnSURFdU1UQTRNVE1zSUMwd0xqQTNNamMySUNrc0Nna0pkbVZqTXlnZ0xUQXVNRGN6Tmpjc0lDMHdMakF3TmpBMUxDQWdNUzR3TnpZd01pQXBDZ2twT3dvSlkyOXNiM0lnS2owZ2RHOXVaVTFoY0hCcGJtZEZlSEJ2YzNWeVpTQXZJREF1TmpzS0NXTnZiRzl5SUQwZ1FVTkZVMGx1Y0hWMFRXRjBJQ29nWTI5c2IzSTdDZ2xqYjJ4dmNpQTlJRkpTVkVGdVpFOUVWRVpwZENnZ1kyOXNiM0lnS1RzS0NXTnZiRzl5SUQwZ1FVTkZVMDkxZEhCMWRFMWhkQ0FxSUdOdmJHOXlPd29KY21WMGRYSnVJSE5oZEhWeVlYUmxLQ0JqYjJ4dmNpQXBPd3A5Q25abFl6TWdRM1Z6ZEc5dFZHOXVaVTFoY0hCcGJtY29JSFpsWXpNZ1kyOXNiM0lnS1NCN0lISmxkSFZ5YmlCamIyeHZjanNnZldBc0lHNXRJRDBnWUNOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9DZ2xtYkc5aGRDQjBjbUZ1YzIxcGMzTnBiMjVCYkhCb1lTQTlJREV1TURzS0NXWnNiMkYwSUhSeVlXNXpiV2x6YzJsdmJrWmhZM1J2Y2lBOUlIUnlZVzV6YldsemMybHZianNLQ1dac2IyRjBJSFJvYVdOcmJtVnpjMFpoWTNSdmNpQTlJSFJvYVdOcmJtVnpjenNLQ1NOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9UVUZRQ2drSmRISmhibk50YVhOemFXOXVSbUZqZEc5eUlDbzlJSFJsZUhSMWNtVXlSQ2dnZEhKaGJuTnRhWE56YVc5dVRXRndMQ0IyVlhZZ0tTNXlPd29KSTJWdVpHbG1DZ2tqYVdaa1pXWWdWVk5GWDFSSVNVTkxUa1ZUVTAxQlVBb0pDWFJvYVdOcmJtVnpjMFpoWTNSdmNpQXFQU0IwWlhoMGRYSmxNa1FvSUhSb2FXTnJibVZ6YzAxaGNDd2dkbFYySUNrdVp6c0tDU05sYm1ScFpnb0pkbVZqTXlCd2IzTWdQU0IyVjI5eWJHUlFiM05wZEdsdmJqc0tDWFpsWXpNZ2RpQTlJRzV2Y20xaGJHbDZaU2dnWTJGdFpYSmhVRzl6YVhScGIyNGdMU0J3YjNNZ0tUc0tDWFpsWXpNZ2JpQTlJR2x1ZG1WeWMyVlVjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9JRzV2Y20xaGJDd2dkbWxsZDAxaGRISnBlQ0FwT3dvSmRtVmpOQ0IwY21GdWMyMXBjM05wYjI0Z1BTQm5aWFJKUWt4V2IyeDFiV1ZTWldaeVlXTjBhVzl1S0FvSkNXNHNJSFlzSUhKdmRXZG9ibVZ6YzBaaFkzUnZjaXdnYldGMFpYSnBZV3d1WkdsbVpuVnpaVU52Ykc5eUxDQnRZWFJsY21saGJDNXpjR1ZqZFd4aGNrTnZiRzl5TENCdFlYUmxjbWxoYkM1emNHVmpkV3hoY2tZNU1Dd0tDUWx3YjNNc0lHMXZaR1ZzVFdGMGNtbDRMQ0IyYVdWM1RXRjBjbWw0TENCd2NtOXFaV04wYVc5dVRXRjBjbWw0TENCcGIzSXNJSFJvYVdOcmJtVnpjMFpoWTNSdmNpd0tDUWxoZEhSbGJuVmhkR2x2YmtOdmJHOXlMQ0JoZEhSbGJuVmhkR2x2YmtScGMzUmhibU5sSUNrN0NnbDBiM1JoYkVScFptWjFjMlVnUFNCdGFYZ29JSFJ2ZEdGc1JHbG1ablZ6WlN3Z2RISmhibk50YVhOemFXOXVMbkpuWWl3Z2RISmhibk50YVhOemFXOXVSbUZqZEc5eUlDazdDZ2wwY21GdWMyMXBjM05wYjI1QmJIQm9ZU0E5SUcxcGVDZ2dkSEpoYm5OdGFYTnphVzl1UVd4d2FHRXNJSFJ5WVc1emJXbHpjMmx2Ymk1aExDQjBjbUZ1YzIxcGMzTnBiMjVHWVdOMGIzSWdLVHNLSTJWdVpHbG1ZQ3dnYVcwZ1BTQmdJMmxtWkdWbUlGVlRSVjlVVWtGT1UwMUpVMU5KVDA0S0NYVnVhV1p2Y20wZ1pteHZZWFFnZEhKaGJuTnRhWE56YVc5dU93b0pkVzVwWm05eWJTQm1iRzloZENCMGFHbGphMjVsYzNNN0NnbDFibWxtYjNKdElHWnNiMkYwSUdGMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVN0NnbDFibWxtYjNKdElIWmxZek1nWVhSMFpXNTFZWFJwYjI1RGIyeHZjanNLQ1NOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9UVUZRQ2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2RISmhibk50YVhOemFXOXVUV0Z3T3dvSkkyVnVaR2xtQ2dramFXWmtaV1lnVlZORlgxUklTVU5MVGtWVFUwMUJVQW9KQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhSb2FXTnJibVZ6YzAxaGNEc0tDU05sYm1ScFpnb0pkVzVwWm05eWJTQjJaV015SUhSeVlXNXpiV2x6YzJsdmJsTmhiWEJzWlhKVGFYcGxPd29KZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnZEhKaGJuTnRhWE56YVc5dVUyRnRjR3hsY2sxaGNEc0tDWFZ1YVdadmNtMGdiV0YwTkNCdGIyUmxiRTFoZEhKcGVEc0tDWFZ1YVdadmNtMGdiV0YwTkNCd2NtOXFaV04wYVc5dVRXRjBjbWw0T3dvSmRtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pGQnZjMmwwYVc5dU93b0pkbVZqTXlCblpYUldiMngxYldWVWNtRnVjMjFwYzNOcGIyNVNZWGtvSUhabFl6TWdiaXdnZG1Wak15QjJMQ0JtYkc5aGRDQjBhR2xqYTI1bGMzTXNJR1pzYjJGMElHbHZjaXdnYldGME5DQnRiMlJsYkUxaGRISnBlQ0FwSUhzS0NRbDJaV016SUhKbFpuSmhZM1JwYjI1V1pXTjBiM0lnUFNCeVpXWnlZV04wS0NBdElIWXNJRzV2Y20xaGJHbDZaU2dnYmlBcExDQXhMakFnTHlCcGIzSWdLVHNLQ1FsMlpXTXpJRzF2WkdWc1UyTmhiR1U3Q2drSmJXOWtaV3hUWTJGc1pTNTRJRDBnYkdWdVozUm9LQ0IyWldNektDQnRiMlJsYkUxaGRISnBlRnNnTUNCZExuaDVlaUFwSUNrN0Nna0piVzlrWld4VFkyRnNaUzU1SUQwZ2JHVnVaM1JvS0NCMlpXTXpLQ0J0YjJSbGJFMWhkSEpwZUZzZ01TQmRMbmg1ZWlBcElDazdDZ2tKYlc5a1pXeFRZMkZzWlM1NklEMGdiR1Z1WjNSb0tDQjJaV016S0NCdGIyUmxiRTFoZEhKcGVGc2dNaUJkTG5oNWVpQXBJQ2s3Q2drSmNtVjBkWEp1SUc1dmNtMWhiR2w2WlNnZ2NtVm1jbUZqZEdsdmJsWmxZM1J2Y2lBcElDb2dkR2hwWTJ0dVpYTnpJQ29nYlc5a1pXeFRZMkZzWlRzS0NYMEtDV1pzYjJGMElHRndjR3g1U1c5eVZHOVNiM1ZuYUc1bGMzTW9JR1pzYjJGMElISnZkV2RvYm1WemN5d2dabXh2WVhRZ2FXOXlJQ2tnZXdvSkNYSmxkSFZ5YmlCeWIzVm5hRzVsYzNNZ0tpQmpiR0Z0Y0NnZ2FXOXlJQ29nTWk0d0lDMGdNaTR3TENBd0xqQXNJREV1TUNBcE93b0pmUW9KZG1Wak5DQm5aWFJVY21GdWMyMXBjM05wYjI1VFlXMXdiR1VvSUhabFl6SWdabkpoWjBOdmIzSmtMQ0JtYkc5aGRDQnliM1ZuYUc1bGMzTXNJR1pzYjJGMElHbHZjaUFwSUhzS0NRbG1iRzloZENCbWNtRnRaV0oxWm1abGNreHZaQ0E5SUd4dlp6SW9JSFJ5WVc1emJXbHpjMmx2YmxOaGJYQnNaWEpUYVhwbExuZ2dLU0FxSUdGd2NHeDVTVzl5Vkc5U2IzVm5hRzVsYzNNb0lISnZkV2RvYm1WemN5d2dhVzl5SUNrN0Nna0pJMmxtWkdWbUlGUkZXRlJWVWtWZlRFOUVYMFZZVkFvSkNRbHlaWFIxY200Z2RHVjRkSFZ5WlRKRVRHOWtSVmhVS0NCMGNtRnVjMjFwYzNOcGIyNVRZVzF3YkdWeVRXRndMQ0JtY21GblEyOXZjbVF1ZUhrc0lHWnlZVzFsWW5WbVptVnlURzlrSUNrN0Nna0pJMlZzYzJVS0NRa0pjbVYwZFhKdUlIUmxlSFIxY21VeVJDZ2dkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjazFoY0N3Z1puSmhaME52YjNKa0xuaDVMQ0JtY21GdFpXSjFabVpsY2t4dlpDQXBPd29KQ1NObGJtUnBaZ29KZlFvSmRtVmpNeUJoY0hCc2VWWnZiSFZ0WlVGMGRHVnVkV0YwYVc5dUtDQjJaV016SUhKaFpHbGhibU5sTENCbWJHOWhkQ0IwY21GdWMyMXBjM05wYjI1RWFYTjBZVzVqWlN3Z2RtVmpNeUJoZEhSbGJuVmhkR2x2YmtOdmJHOXlMQ0JtYkc5aGRDQmhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJQ2tnZXdvSkNXbG1JQ2dnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlNBOVBTQXdMakFnS1NCN0Nna0pDWEpsZEhWeWJpQnlZV1JwWVc1alpUc0tDUWw5SUdWc2MyVWdld29KQ1FsMlpXTXpJR0YwZEdWdWRXRjBhVzl1UTI5bFptWnBZMmxsYm5RZ1BTQXRiRzluS0NCaGRIUmxiblZoZEdsdmJrTnZiRzl5SUNrZ0x5QmhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxPd29KQ1FsMlpXTXpJSFJ5WVc1emJXbDBkR0Z1WTJVZ1BTQmxlSEFvSUMwZ1lYUjBaVzUxWVhScGIyNURiMlZtWm1samFXVnVkQ0FxSUhSeVlXNXpiV2x6YzJsdmJrUnBjM1JoYm1ObElDazdDUWtKY21WMGRYSnVJSFJ5WVc1emJXbDBkR0Z1WTJVZ0tpQnlZV1JwWVc1alpUc0tDUWw5Q2dsOUNnbDJaV00wSUdkbGRFbENURlp2YkhWdFpWSmxabkpoWTNScGIyNG9JSFpsWXpNZ2Jpd2dkbVZqTXlCMkxDQm1iRzloZENCeWIzVm5hRzVsYzNNc0lIWmxZek1nWkdsbVpuVnpaVU52Ykc5eUxDQjJaV016SUhOd1pXTjFiR0Z5UTI5c2IzSXNJR1pzYjJGMElITndaV04xYkdGeVJqa3dMQW9KQ1habFl6TWdjRzl6YVhScGIyNHNJRzFoZERRZ2JXOWtaV3hOWVhSeWFYZ3NJRzFoZERRZ2RtbGxkMDFoZEhKcGVDd2diV0YwTkNCd2NtOXFUV0YwY21sNExDQm1iRzloZENCcGIzSXNJR1pzYjJGMElIUm9hV05yYm1WemN5d0tDUWwyWldNeklHRjBkR1Z1ZFdGMGFXOXVRMjlzYjNJc0lHWnNiMkYwSUdGMGRHVnVkV0YwYVc5dVJHbHpkR0Z1WTJVZ0tTQjdDZ2tKZG1Wak15QjBjbUZ1YzIxcGMzTnBiMjVTWVhrZ1BTQm5aWFJXYjJ4MWJXVlVjbUZ1YzIxcGMzTnBiMjVTWVhrb0lHNHNJSFlzSUhSb2FXTnJibVZ6Y3l3Z2FXOXlMQ0J0YjJSbGJFMWhkSEpwZUNBcE93b0pDWFpsWXpNZ2NtVm1jbUZqZEdWa1VtRjVSWGhwZENBOUlIQnZjMmwwYVc5dUlDc2dkSEpoYm5OdGFYTnphVzl1VW1GNU93b0pDWFpsWXpRZ2JtUmpVRzl6SUQwZ2NISnZhazFoZEhKcGVDQXFJSFpwWlhkTllYUnlhWGdnS2lCMlpXTTBLQ0J5WldaeVlXTjBaV1JTWVhsRmVHbDBMQ0F4TGpBZ0tUc0tDUWwyWldNeUlISmxabkpoWTNScGIyNURiMjl5WkhNZ1BTQnVaR05RYjNNdWVIa2dMeUJ1WkdOUWIzTXVkenNLQ1FseVpXWnlZV04wYVc5dVEyOXZjbVJ6SUNzOUlERXVNRHNLQ1FseVpXWnlZV04wYVc5dVEyOXZjbVJ6SUM4OUlESXVNRHNLQ1FsMlpXTTBJSFJ5WVc1emJXbDBkR1ZrVEdsbmFIUWdQU0JuWlhSVWNtRnVjMjFwYzNOcGIyNVRZVzF3YkdVb0lISmxabkpoWTNScGIyNURiMjl5WkhNc0lISnZkV2RvYm1WemN5d2dhVzl5SUNrN0Nna0pkbVZqTXlCaGRIUmxiblZoZEdWa1EyOXNiM0lnUFNCaGNIQnNlVlp2YkhWdFpVRjBkR1Z1ZFdGMGFXOXVLQ0IwY21GdWMyMXBkSFJsWkV4cFoyaDBMbkpuWWl3Z2JHVnVaM1JvS0NCMGNtRnVjMjFwYzNOcGIyNVNZWGtnS1N3Z1lYUjBaVzUxWVhScGIyNURiMnh2Y2l3Z1lYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTQXBPd29KQ1habFl6TWdSaUE5SUVWdWRtbHliMjV0Wlc1MFFsSkVSaWdnYml3Z2Rpd2djM0JsWTNWc1lYSkRiMnh2Y2l3Z2MzQmxZM1ZzWVhKR09UQXNJSEp2ZFdkb2JtVnpjeUFwT3dvSkNYSmxkSFZ5YmlCMlpXTTBLQ0FvSURFdU1DQXRJRVlnS1NBcUlHRjBkR1Z1ZFdGMFpXUkRiMnh2Y2lBcUlHUnBabVoxYzJWRGIyeHZjaXdnZEhKaGJuTnRhWFIwWldSTWFXZG9kQzVoSUNrN0NnbDlDaU5sYm1ScFptQXNJSEp0SUQwZ1lDTnBaaUFvSUdSbFptbHVaV1FvSUZWVFJWOVZWaUFwSUNZbUlDRWdaR1ZtYVc1bFpDZ2dWVlpUWDFaRlVsUkZXRjlQVGt4WklDa2dLUW9KZG1GeWVXbHVaeUIyWldNeUlIWlZkanNLSTJWdVpHbG1ZQ3dnYzIwZ1BTQmdJMmxtWkdWbUlGVlRSVjlWVmdvSkkybG1aR1ZtSUZWV1UxOVdSVkpVUlZoZlQwNU1XUW9KQ1habFl6SWdkbFYyT3dvSkkyVnNjMlVLQ1FsMllYSjVhVzVuSUhabFl6SWdkbFYyT3dvSkkyVnVaR2xtQ2dsMWJtbG1iM0p0SUcxaGRETWdkWFpVY21GdWMyWnZjbTA3Q2lObGJtUnBabUFzSUc5dElEMGdZQ05wWm1SbFppQlZVMFZmVlZZS0NYWlZkaUE5SUNnZ2RYWlVjbUZ1YzJadmNtMGdLaUIyWldNektDQjFkaXdnTVNBcElDa3VlSGs3Q2lObGJtUnBabUFzSUdGdElEMGdZQ05wWmlCa1pXWnBibVZrS0NCVlUwVmZURWxIU0ZSTlFWQWdLU0I4ZkNCa1pXWnBibVZrS0NCVlUwVmZRVTlOUVZBZ0tRb0pkbUZ5ZVdsdVp5QjJaV015SUhaVmRqSTdDaU5sYm1ScFptQXNJR3h0SUQwZ1lDTnBaaUJrWldacGJtVmtLQ0JWVTBWZlRFbEhTRlJOUVZBZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlFVOU5RVkFnS1FvSllYUjBjbWxpZFhSbElIWmxZeklnZFhZeU93b0pkbUZ5ZVdsdVp5QjJaV015SUhaVmRqSTdDZ2wxYm1sbWIzSnRJRzFoZERNZ2RYWXlWSEpoYm5ObWIzSnRPd29qWlc1a2FXWmdMQ0JqYlNBOUlHQWphV1lnWkdWbWFXNWxaQ2dnVlZORlgweEpSMGhVVFVGUUlDa2dmSHdnWkdWbWFXNWxaQ2dnVlZORlgwRlBUVUZRSUNrS0NYWlZkaklnUFNBb0lIVjJNbFJ5WVc1elptOXliU0FxSUhabFl6TW9JSFYyTWl3Z01TQXBJQ2t1ZUhrN0NpTmxibVJwWm1Bc0lHaHRJRDBnWUNOcFppQmtaV1pwYm1Wa0tDQlZVMFZmUlU1V1RVRlFJQ2tnZkh3Z1pHVm1hVzVsWkNnZ1JFbFRWRUZPUTBVZ0tTQjhmQ0JrWldacGJtVmtJQ2dnVlZORlgxTklRVVJQVjAxQlVDQXBJSHg4SUdSbFptbHVaV1FnS0NCVlUwVmZWRkpCVGxOTlNWTlRTVTlPSUNrS0NYWmxZelFnZDI5eWJHUlFiM05wZEdsdmJpQTlJSFpsWXpRb0lIUnlZVzV6Wm05eWJXVmtMQ0F4TGpBZ0tUc0tDU05wWm1SbFppQlZVMFZmU1U1VFZFRk9RMGxPUndvSkNYZHZjbXhrVUc5emFYUnBiMjRnUFNCcGJuTjBZVzVqWlUxaGRISnBlQ0FxSUhkdmNteGtVRzl6YVhScGIyNDdDZ2tqWlc1a2FXWUtDWGR2Y214a1VHOXphWFJwYjI0Z1BTQnRiMlJsYkUxaGRISnBlQ0FxSUhkdmNteGtVRzl6YVhScGIyNDdDaU5sYm1ScFptQXNJSFZ0SUQwZ1lIWmhjbmxwYm1jZ2RtVmpNaUIyVlhZN0NuVnVhV1p2Y20wZ2JXRjBNeUIxZGxSeVlXNXpabTl5YlRzS2RtOXBaQ0J0WVdsdUtDa2dld29KZGxWMklEMGdLQ0IxZGxSeVlXNXpabTl5YlNBcUlIWmxZek1vSUhWMkxDQXhJQ2tnS1M1NGVUc0tDV2RzWDFCdmMybDBhVzl1SUQwZ2RtVmpOQ2dnY0c5emFYUnBiMjR1ZUhrc0lERXVNQ3dnTVM0d0lDazdDbjFnTENCa2JTQTlJR0IxYm1sbWIzSnRJSE5oYlhCc1pYSXlSQ0IwTWtRN0NuWmhjbmxwYm1jZ2RtVmpNaUIyVlhZN0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1habFl6UWdkR1Y0UTI5c2IzSWdQU0IwWlhoMGRYSmxNa1FvSUhReVJDd2dkbFYySUNrN0NnbG5iRjlHY21GblEyOXNiM0lnUFNCdFlYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCMFpYaERiMnh2Y2lBcE93b0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWRENEtmV0FzSUdadElEMGdZSFpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ25admFXUWdiV0ZwYmlncElIc0tDWFpYYjNKc1pFUnBjbVZqZEdsdmJpQTlJSFJ5WVc1elptOXliVVJwY21WamRHbHZiaWdnY0c5emFYUnBiMjRzSUcxdlpHVnNUV0YwY21sNElDazdDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSEJ5YjJwbFkzUmZkbVZ5ZEdWNFBnb0paMnhmVUc5emFYUnBiMjR1ZWlBOUlHZHNYMUJ2YzJsMGFXOXVMbmM3Q24xZ0xDQndiU0E5SUdBamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJOdmJXMXZibDl3WVhKelgyWnlZV2R0Wlc1MFBncDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q25aaGNubHBibWNnZG1Wak15QjJWMjl5YkdSRWFYSmxZM1JwYjI0N0NpTnBibU5zZFdSbElEeGpkV0psWDNWMlgzSmxabXhsWTNScGIyNWZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NYWmxZek1nZGxKbFpteGxZM1FnUFNCMlYyOXliR1JFYVhKbFkzUnBiMjQ3Q2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJaeVlXZHRaVzUwUGdvSloyeGZSbkpoWjBOdmJHOXlJRDBnWlc1MlEyOXNiM0k3Q2dsbmJGOUdjbUZuUTI5c2IzSXVZU0FxUFNCdmNHRmphWFI1T3dvSkkybHVZMngxWkdVZ1BIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZEQ0S2ZXQXNJRzF0SUQwZ1lDTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThjMnRwYm01cGJtZGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgzWmxjblJsZUQ0S2RtRnllV2x1WnlCMlpXTXlJSFpJYVdkb1VISmxZMmx6YVc5dVdsYzdDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeDFkbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KSTJsbVpHVm1JRlZUUlY5RVNWTlFURUZEUlUxRlRsUk5RVkFLQ1FramFXNWpiSFZrWlNBOFltVm5hVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2drSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMlZ1WkdsbUNna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh3Y205cVpXTjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNabGNuUmxlRDRLQ1haSWFXZG9VSEpsWTJsemFXOXVXbGNnUFNCbmJGOVFiM05wZEdsdmJpNTZkenNLZldBc0lHZHRJRDBnWUNOcFppQkVSVkJVU0Y5UVFVTkxTVTVISUQwOUlETXlNREFLQ1hWdWFXWnZjbTBnWm14dllYUWdiM0JoWTJsMGVUc0tJMlZ1WkdsbUNpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeHdZV05yYVc1blBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMllYSjVhVzVuSUhabFl6SWdka2hwWjJoUWNtVmphWE5wYjI1YVZ6c0tkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ01TNHdJQ2s3Q2dramFXWWdSRVZRVkVoZlVFRkRTMGxPUnlBOVBTQXpNakF3Q2drSlpHbG1ablZ6WlVOdmJHOXlMbUVnUFNCdmNHRmphWFI1T3dvSkkyVnVaR2xtQ2dramFXNWpiSFZrWlNBOGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NXWnNiMkYwSUdaeVlXZERiMjl5WkZvZ1BTQXdMalVnS2lCMlNHbG5hRkJ5WldOcGMybHZibHBYV3pCZElDOGdka2hwWjJoUWNtVmphWE5wYjI1YVYxc3hYU0FySURBdU5Uc0tDU05wWmlCRVJWQlVTRjlRUVVOTFNVNUhJRDA5SURNeU1EQUtDUWxuYkY5R2NtRm5RMjlzYjNJZ1BTQjJaV00wS0NCMlpXTXpLQ0F4TGpBZ0xTQm1jbUZuUTI5dmNtUmFJQ2tzSUc5d1lXTnBkSGtnS1RzS0NTTmxiR2xtSUVSRlVGUklYMUJCUTB0SlRrY2dQVDBnTXpJd01Rb0pDV2RzWDBaeVlXZERiMnh2Y2lBOUlIQmhZMnRFWlhCMGFGUnZVa2RDUVNnZ1puSmhaME52YjNKa1dpQXBPd29KSTJWdVpHbG1DbjFnTENCNGJTQTlJR0FqWkdWbWFXNWxJRVJKVTFSQlRrTkZDblpoY25scGJtY2dkbVZqTXlCMlYyOXliR1JRYjNOcGRHbHZianNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WkdsemNHeGhZMlZ0Wlc1MGJXRndYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDNabGNuUmxlRDRLZG05cFpDQnRZV2x1S0NrZ2V3b0pJMmx1WTJ4MVpHVWdQSFYyWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVZbUZ6WlY5MlpYSjBaWGcrQ2dramFXWmtaV1lnVlZORlgwUkpVMUJNUVVORlRVVk9WRTFCVUFvSkNTTnBibU5zZFdSbElEeGlaV2RwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tKSTJsdVkyeDFaR1VnUEcxdmNuQm9ibTl5YldGc1gzWmxjblJsZUQ0S0NRa2phVzVqYkhWa1pTQThjMnRwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqWlc1a2FXWUtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhkdmNteGtjRzl6WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mZG1WeWRHVjRQZ29KZGxkdmNteGtVRzl6YVhScGIyNGdQU0IzYjNKc1pGQnZjMmwwYVc5dUxuaDVlanNLZldBc0lIbHRJRDBnWUNOa1pXWnBibVVnUkVsVFZFRk9RMFVLZFc1cFptOXliU0IyWldNeklISmxabVZ5Wlc1alpWQnZjMmwwYVc5dU93cDFibWxtYjNKdElHWnNiMkYwSUc1bFlYSkVhWE4wWVc1alpUc0tkVzVwWm05eWJTQm1iRzloZENCbVlYSkVhWE4wWVc1alpUc0tkbUZ5ZVdsdVp5QjJaV016SUhaWGIzSnNaRkJ2YzJsMGFXOXVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4Y0dGamEybHVaejRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNGdLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ01TNHdJQ2s3Q2dramFXNWpiSFZrWlNBOGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOW1jbUZuYldWdWRENEtDV1pzYjJGMElHUnBjM1FnUFNCc1pXNW5kR2dvSUhaWGIzSnNaRkJ2YzJsMGFXOXVJQzBnY21WbVpYSmxibU5sVUc5emFYUnBiMjRnS1RzS0NXUnBjM1FnUFNBb0lHUnBjM1FnTFNCdVpXRnlSR2x6ZEdGdVkyVWdLU0F2SUNnZ1ptRnlSR2x6ZEdGdVkyVWdMU0J1WldGeVJHbHpkR0Z1WTJVZ0tUc0tDV1JwYzNRZ1BTQnpZWFIxY21GMFpTZ2daR2x6ZENBcE93b0paMnhmUm5KaFowTnZiRzl5SUQwZ2NHRmphMFJsY0hSb1ZHOVNSMEpCS0NCa2FYTjBJQ2s3Q24xZ0xDQjJiU0E5SUdCMllYSjVhVzVuSUhabFl6TWdkbGR2Y214a1JHbHlaV04wYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBncDJiMmxrSUcxaGFXNG9LU0I3Q2dsMlYyOXliR1JFYVhKbFkzUnBiMjRnUFNCMGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b0lIQnZjMmwwYVc5dUxDQnRiMlJsYkUxaGRISnBlQ0FwT3dvSkkybHVZMngxWkdVZ1BHSmxaMmx1WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLZldBc0lGOXRJRDBnWUhWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUhSRmNYVnBjbVZqZERzS2RtRnllV2x1WnlCMlpXTXpJSFpYYjNKc1pFUnBjbVZqZEdsdmJqc0tJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtkbTlwWkNCdFlXbHVLQ2tnZXdvSmRtVmpNeUJrYVhKbFkzUnBiMjRnUFNCdWIzSnRZV3hwZW1Vb0lIWlhiM0pzWkVScGNtVmpkR2x2YmlBcE93b0pkbVZqTWlCellXMXdiR1ZWVmlBOUlHVnhkV2x5WldOMFZYWW9JR1JwY21WamRHbHZiaUFwT3dvSmRtVmpOQ0IwWlhoRGIyeHZjaUE5SUhSbGVIUjFjbVV5UkNnZ2RFVnhkV2x5WldOMExDQnpZVzF3YkdWVlZpQXBPd29KWjJ4ZlJuSmhaME52Ykc5eUlEMGdiV0Z3VkdWNFpXeFViMHhwYm1WaGNpZ2dkR1Y0UTI5c2IzSWdLVHNLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ24xZ0xDQk5iU0E5SUdCMWJtbG1iM0p0SUdac2IyRjBJSE5qWVd4bE93cGhkSFJ5YVdKMWRHVWdabXh2WVhRZ2JHbHVaVVJwYzNSaGJtTmxPd3AyWVhKNWFXNW5JR1pzYjJGMElIWk1hVzVsUkdsemRHRnVZMlU3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1haTWFXNWxSR2x6ZEdGdVkyVWdQU0J6WTJGc1pTQXFJR3hwYm1WRWFYTjBZVzVqWlRzS0NTTnBibU5zZFdSbElEeGpiMnh2Y2w5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2dZbTBnUFNCZ2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS2RXNXBabTl5YlNCbWJHOWhkQ0JrWVhOb1UybDZaVHNLZFc1cFptOXliU0JtYkc5aGRDQjBiM1JoYkZOcGVtVTdDblpoY25scGJtY2dabXh2WVhRZ2RreHBibVZFYVhOMFlXNWpaVHNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1dsbUlDZ2diVzlrS0NCMlRHbHVaVVJwYzNSaGJtTmxMQ0IwYjNSaGJGTnBlbVVnS1NBK0lHUmhjMmhUYVhwbElDa2dld29KQ1dScGMyTmhjbVE3Q2dsOUNnbDJaV016SUc5MWRHZHZhVzVuVEdsbmFIUWdQU0IyWldNektDQXdMakFnS1RzS0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDJaeVlXZHRaVzUwUGdvSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUdScFptWjFjMlZEYjJ4dmNpNXlaMkk3Q2dramFXNWpiSFZrWlNBOGIzVjBjSFYwWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeG1iMmRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGNISmxiWFZzZEdsd2JHbGxaRjloYkhCb1lWOW1jbUZuYldWdWRENEtmV0FzSUhkdElEMGdZQ05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSFYyTWw5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhWMk1sOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybG1JR1JsWm1sdVpXUWdLQ0JWVTBWZlJVNVdUVUZRSUNrZ2ZId2daR1ZtYVc1bFpDQW9JRlZUUlY5VFMwbE9Ua2xPUnlBcENna0pJMmx1WTJ4MVpHVWdQR0psWjJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1FramFXNWpiSFZrWlNBOGJXOXljR2h1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tKSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkNTTnBibU5zZFdSbElEeGtaV1poZFd4MGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NObGJtUnBaZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIQnliMnBsWTNSZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhsYm5adFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5MlpYSjBaWGcrQ24xZ0xDQlRiU0E5SUdCMWJtbG1iM0p0SUhabFl6TWdaR2xtWm5WelpUc0tkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dvamFXWnVaR1ZtSUVaTVFWUmZVMGhCUkVWRUNnbDJZWEo1YVc1bklIWmxZek1nZGs1dmNtMWhiRHNLSTJWdVpHbG1DaU5wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnZiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gyTnZiVzF2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGpkV0psWDNWMlgzSmxabXhsWTNScGIyNWZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhOd1pXTjFiR0Z5YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZabkpoWjIxbGJuUStDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZlpuSmhaMjFsYm5RK0NnbDJaV00wSUdScFptWjFjMlZEYjJ4dmNpQTlJSFpsWXpRb0lHUnBabVoxYzJVc0lHOXdZV05wZEhrZ0tUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhOd1pXTjFiR0Z5YldGd1gyWnlZV2R0Wlc1MFBnb0pVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnUFNCU1pXWnNaV04wWldSTWFXZG9kQ2dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa2dLVHNLQ1NOcFptUmxaaUJWVTBWZlRFbEhTRlJOUVZBS0NRbDJaV00wSUd4cFoyaDBUV0Z3VkdWNFpXdzlJSFJsZUhSMWNtVXlSQ2dnYkdsbmFIUk5ZWEFzSUhaVmRqSWdLVHNLQ1FseVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLejBnYkdsbmFIUk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQnNhV2RvZEUxaGNGUmxlR1ZzSUNrdWNtZGlJQ29nYkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGs3Q2dralpXeHpaUW9KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBSR2xtWm5WelpTQXJQU0IyWldNektDQXhMakFnS1RzS0NTTmxibVJwWmdvSkkybHVZMngxWkdVZ1BHRnZiV0Z3WDJaeVlXZHRaVzUwUGdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ285SUdScFptWjFjMlZEYjJ4dmNpNXlaMkk3Q2dsMlpXTXpJRzkxZEdkdmFXNW5UR2xuYUhRZ1BTQnlaV1pzWldOMFpXUk1hV2RvZEM1cGJtUnBjbVZqZEVScFptWjFjMlU3Q2dramFXNWpiSFZrWlNBOFpXNTJiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIQnlaVzExYkhScGNHeHBaV1JmWVd4d2FHRmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwUGdwOVlDd2dWRzBnUFNCZ0kyUmxabWx1WlNCTVFVMUNSVkpVQ25aaGNubHBibWNnZG1Wak15QjJUR2xuYUhSR2NtOXVkRHNLZG1GeWVXbHVaeUIyWldNeklIWkpibVJwY21WamRFWnliMjUwT3dvamFXWmtaV1lnUkU5VlFreEZYMU5KUkVWRUNnbDJZWEo1YVc1bklIWmxZek1nZGt4cFoyaDBRbUZqYXpzS0NYWmhjbmxwYm1jZ2RtVmpNeUIyU1c1a2FYSmxZM1JDWVdOck93b2paVzVrYVdZS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGRYWXlYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZbk5rWm5NK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHRnljMTlpWldkcGJqNEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ylc5eWNHaDBZWEpuWlhSZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BITm9ZV1J2ZDIxaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZmRtVnlkR1Y0UGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4ZFhaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIVjJNbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dGIzSndhRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm1KaGMyVmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdSbFptRjFiSFJ1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BIZHZjbXhrY0c5elgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGxiblp0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5c1lXMWlaWEowWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhCZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHWnZaMTkyWlhKMFpYZytDbjFnTENCRmJTQTlJR0IxYm1sbWIzSnRJSFpsWXpNZ1pHbG1ablZ6WlRzS2RXNXBabTl5YlNCMlpXTXpJR1Z0YVhOemFYWmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NuWmhjbmxwYm1jZ2RtVmpNeUIyVEdsbmFIUkdjbTl1ZERzS2RtRnllV2x1WnlCMlpXTXpJSFpKYm1ScGNtVmpkRVp5YjI1ME93b2phV1prWldZZ1JFOVZRa3hGWDFOSlJFVkVDZ2wyWVhKNWFXNW5JSFpsWXpNZ2RreHBaMmgwUW1GamF6c0tDWFpoY25scGJtY2dkbVZqTXlCMlNXNWthWEpsWTNSQ1lXTnJPd29qWlc1a2FXWUtJMmx1WTJ4MVpHVWdQR052YlcxdmJqNEtJMmx1WTJ4MVpHVWdQSEJoWTJ0cGJtYytDaU5wYm1Oc2RXUmxJRHhrYVhSb1pYSnBibWRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4MWRsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGRYWXlYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnZiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzFwYzNOcGRtVnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOWpiMjF0YjI1ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdWdWRtMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZM1ZpWlY5MWRsOXlaV1pzWldOMGFXOXVYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WW5Oa1puTStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR0Z5YzE5aVpXZHBiajRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emFHRmtiM2R0WVhOclgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4emNHVmpkV3hoY20xaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgyWnlZV2R0Wlc1MFBnb0pkbVZqTkNCa2FXWm1kWE5sUTI5c2IzSWdQU0IyWldNMEtDQmthV1ptZFhObExDQnZjR0ZqYVhSNUlDazdDZ2xTWldac1pXTjBaV1JNYVdkb2RDQnlaV1pzWldOMFpXUk1hV2RvZENBOUlGSmxabXhsWTNSbFpFeHBaMmgwS0NCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcExDQjJaV016S0NBd0xqQWdLU0FwT3dvSmRtVmpNeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVZ1BTQmxiV2x6YzJsMlpUc0tDU05wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0Z0WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhOd1pXTjFiR0Z5YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z0YVhOemFYWmxiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybG1aR1ZtSUVSUFZVSk1SVjlUU1VSRlJBb0pDWEpsWm14bFkzUmxaRXhwWjJoMExtbHVaR2x5WldOMFJHbG1ablZ6WlNBclBTQW9JR2RzWDBaeWIyNTBSbUZqYVc1bklDa2dQeUIyU1c1a2FYSmxZM1JHY205dWRDQTZJSFpKYm1ScGNtVmpkRUpoWTJzN0Nna2paV3h6WlFvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wUkdsbVpuVnpaU0FyUFNCMlNXNWthWEpsWTNSR2NtOXVkRHNLQ1NObGJtUnBaZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBiV0Z3WDJaeVlXZHRaVzUwUGdvSmNtVm1iR1ZqZEdWa1RHbG5hSFF1YVc1a2FYSmxZM1JFYVdabWRYTmxJQ285SUVKU1JFWmZUR0Z0WW1WeWRDZ2daR2xtWm5WelpVTnZiRzl5TG5KbllpQXBPd29KSTJsbVpHVm1JRVJQVlVKTVJWOVRTVVJGUkFvSkNYSmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdQU0FvSUdkc1gwWnliMjUwUm1GamFXNW5JQ2tnUHlCMlRHbG5hSFJHY205dWRDQTZJSFpNYVdkb2RFSmhZMnM3Q2dralpXeHpaUW9KQ1hKbFpteGxZM1JsWkV4cFoyaDBMbVJwY21WamRFUnBabVoxYzJVZ1BTQjJUR2xuYUhSR2NtOXVkRHNLQ1NObGJtUnBaZ29KY21WbWJHVmpkR1ZrVEdsbmFIUXVaR2x5WldOMFJHbG1ablZ6WlNBcVBTQkNVa1JHWDB4aGJXSmxjblFvSUdScFptWjFjMlZEYjJ4dmNpNXlaMklnS1NBcUlHZGxkRk5vWVdSdmQwMWhjMnNvS1RzS0NTTnBibU5zZFdSbElEeGhiMjFoY0Y5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVN0Nna2phVzVqYkhWa1pTQThaVzUyYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1MFBncDlZQ3dnUVcwZ1BTQmdJMlJsWm1sdVpTQk5RVlJEUVZBS2RtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJXOXljR2h1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5yYVc1aVlYTmxYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a1pXWmhkV3gwYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR0psWjJsdVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUhSaGNtZGxkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXBibWRmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdScGMzQnNZV05sYldWdWRHMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtDWFpXYVdWM1VHOXphWFJwYjI0Z1BTQXRJRzEyVUc5emFYUnBiMjR1ZUhsNk93cDlZQ3dnUTIwZ1BTQmdJMlJsWm1sdVpTQk5RVlJEUVZBS2RXNXBabTl5YlNCMlpXTXpJR1JwWm1aMWMyVTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS2RXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2JXRjBZMkZ3T3dwMllYSjVhVzVuSUhabFl6TWdkbFpwWlhkUWIzTnBkR2x2YmpzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BHUnBkR2hsY21sdVoxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFkyOXNiM0pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSFYyWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeGlkVzF3YldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dWIzSnRZV3h0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZVzFoY0Y5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGhiSEJvWVhSbGMzUmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdVBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOXRZWEJ6UGdvSmRtVmpNeUIyYVdWM1JHbHlJRDBnYm05eWJXRnNhWHBsS0NCMlZtbGxkMUJ2YzJsMGFXOXVJQ2s3Q2dsMlpXTXpJSGdnUFNCdWIzSnRZV3hwZW1Vb0lIWmxZek1vSUhacFpYZEVhWEl1ZWl3Z01DNHdMQ0F0SUhacFpYZEVhWEl1ZUNBcElDazdDZ2wyWldNeklIa2dQU0JqY205emN5Z2dkbWxsZDBScGNpd2dlQ0FwT3dvSmRtVmpNaUIxZGlBOUlIWmxZeklvSUdSdmRDZ2dlQ3dnYm05eWJXRnNJQ2tzSUdSdmRDZ2dlU3dnYm05eWJXRnNJQ2tnS1NBcUlEQXVORGsxSUNzZ01DNDFPd29KSTJsbVpHVm1JRlZUUlY5TlFWUkRRVkFLQ1FsMlpXTTBJRzFoZEdOaGNFTnZiRzl5SUQwZ2RHVjRkSFZ5WlRKRUtDQnRZWFJqWVhBc0lIVjJJQ2s3Q2drSmJXRjBZMkZ3UTI5c2IzSWdQU0J0WVhSallYQlVaWGhsYkZSdlRHbHVaV0Z5S0NCdFlYUmpZWEJEYjJ4dmNpQXBPd29KSTJWc2MyVUtDUWwyWldNMElHMWhkR05oY0VOdmJHOXlJRDBnZG1Wak5DZ2dNUzR3SUNrN0Nna2paVzVrYVdZS0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJR1JwWm1aMWMyVkRiMnh2Y2k1eVoySWdLaUJ0WVhSallYQkRiMnh2Y2k1eVoySTdDZ2tqYVc1amJIVmtaU0E4YjNWMGNIVjBYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR1Z1WTI5a2FXNW5jMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bWIyZGZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Y0hKbGJYVnNkR2x3YkdsbFpGOWhiSEJvWVY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZabkpoWjIxbGJuUStDbjFnTENCTWJTQTlJR0FqWkdWbWFXNWxJRTVQVWsxQlRBb2phV1lnWkdWbWFXNWxaQ2dnUmt4QlZGOVRTRUZFUlVRZ0tTQjhmQ0JrWldacGJtVmtLQ0JWVTBWZlFsVk5VRTFCVUNBcElIeDhJR1JsWm1sdVpXUW9JRlJCVGtkRlRsUlRVRUZEUlY5T1QxSk5RVXhOUVZBZ0tRb0pkbUZ5ZVdsdVp5QjJaV016SUhaV2FXVjNVRzl6YVhScGIyNDdDaU5sYm1ScFpnb2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeGZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4dGIzSndhSFJoY21kbGRGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTkyWlhKMFpYZytDblp2YVdRZ2JXRnBiaWdwSUhzS0NTTnBibU5zZFdSbElEeDFkbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvYm05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdVltRnpaVjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHVm1ZWFZzZEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhpWldkcGJsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXVhVzVuWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4a2FYTndiR0ZqWlcxbGJuUnRZWEJmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhCeWIycGxZM1JmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmRtVnlkR1Y0UGdvamFXWWdaR1ZtYVc1bFpDZ2dSa3hCVkY5VFNFRkVSVVFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUWxWTlVFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGUkJUa2RGVGxSVFVFRkRSVjlPVDFKTlFVeE5RVkFnS1FvSmRsWnBaWGRRYjNOcGRHbHZiaUE5SUMwZ2JYWlFiM05wZEdsdmJpNTRlWG83Q2lObGJtUnBaZ3A5WUN3Z1VtMGdQU0JnSTJSbFptbHVaU0JPVDFKTlFVd0tkVzVwWm05eWJTQm1iRzloZENCdmNHRmphWFI1T3dvamFXWWdaR1ZtYVc1bFpDZ2dSa3hCVkY5VFNFRkVSVVFnS1NCOGZDQmtaV1pwYm1Wa0tDQlZVMFZmUWxWTlVFMUJVQ0FwSUh4OElHUmxabWx1WldRb0lGUkJUa2RGVGxSVFVFRkRSVjlPVDFKTlFVeE5RVkFnS1FvSmRtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTmxibVJwWmdvamFXNWpiSFZrWlNBOGNHRmphMmx1Wno0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdKMWJYQnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzV2Y20xaGJHMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOXdZWEp6WDJaeVlXZHRaVzUwUGdwMmIybGtJRzFoYVc0b0tTQjdDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOWlaV2RwYmo0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjejRLQ1dkc1gwWnlZV2REYjJ4dmNpQTlJSFpsWXpRb0lIQmhZMnRPYjNKdFlXeFViMUpIUWlnZ2JtOXliV0ZzSUNrc0lHOXdZV05wZEhrZ0tUc0tmV0FzSUZCdElEMGdZQ05rWldacGJtVWdVRWhQVGtjS2RtRnllV2x1WnlCMlpXTXpJSFpXYVdWM1VHOXphWFJwYjI0N0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR1Z1ZG0xaGNGOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdOdmJHOXlYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFptOW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJtOXliV0ZzWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThiVzl5Y0doMFlYSm5aWFJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZkbVZ5ZEdWNFBnb2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThkWFpmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhWMk1sOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMjlzYjNKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHSmxaMmx1Ym05eWJXRnNYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibUpoYzJWZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BITnJhVzV1YjNKdFlXeGZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1JsWm1GMWJIUnViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFltVm5hVzVmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9kR0Z5WjJWMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1Ym1sdVoxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThaR2x6Y0d4aFkyVnRaVzUwYldGd1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHdjbTlxWldOMFgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVENEtDWFpXYVdWM1VHOXphWFJwYjI0Z1BTQXRJRzEyVUc5emFYUnBiMjR1ZUhsNk93b0pJMmx1WTJ4MVpHVWdQSGR2Y214a2NHOXpYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhsYm5adFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S2ZXQXNJRWx0SUQwZ1lDTmtaV1pwYm1VZ1VFaFBUa2NLZFc1cFptOXliU0IyWldNeklHUnBabVoxYzJVN0NuVnVhV1p2Y20wZ2RtVmpNeUJsYldsemMybDJaVHNLZFc1cFptOXliU0IyWldNeklITndaV04xYkdGeU93cDFibWxtYjNKdElHWnNiMkYwSUhOb2FXNXBibVZ6Y3pzS2RXNXBabTl5YlNCbWJHOWhkQ0J2Y0dGamFYUjVPd29qYVc1amJIVmtaU0E4WTI5dGJXOXVQZ29qYVc1amJIVmtaU0E4Y0dGamEybHVaejRLSTJsdVkyeDFaR1VnUEdScGRHaGxjbWx1WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTI5c2IzSmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BIVjJYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeDFkakpmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0ZzY0doaGRHVnpkRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZVzl0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4cFoyaDBiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhsYldsemMybDJaVzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYMk52YlcxdmJsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXNTJiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqZFdKbFgzVjJYM0psWm14bFkzUnBiMjVmWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4bWIyZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSnpaR1p6UGdvamFXNWpiSFZrWlNBOGJHbG5hSFJ6WDNCaGNuTmZZbVZuYVc0K0NpTnBibU5zZFdSbElEeHViM0p0WVd4ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTl3YUc5dVoxOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aWRXMXdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQSE53WldOMWJHRnliV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhzYjJka1pYQjBhR0oxWmw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WTJ4cGNIQnBibWRmY0d4aGJtVnpYM0JoY25OZlpuSmhaMjFsYm5RK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mWm5KaFoyMWxiblErQ2dsMlpXTTBJR1JwWm1aMWMyVkRiMnh2Y2lBOUlIWmxZelFvSUdScFptWjFjMlVzSUc5d1lXTnBkSGtnS1RzS0NWSmxabXhsWTNSbFpFeHBaMmgwSUhKbFpteGxZM1JsWkV4cFoyaDBJRDBnVW1WbWJHVmpkR1ZrVEdsbmFIUW9JSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTd2dkbVZqTXlnZ01DNHdJQ2tzSUhabFl6TW9JREF1TUNBcElDazdDZ2wyWldNeklIUnZkR0ZzUlcxcGMzTnBkbVZTWVdScFlXNWpaU0E5SUdWdGFYTnphWFpsT3dvSkkybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhqYjJ4dmNsOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThjM0JsWTNWc1lYSnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJtOXliV0ZzWDJaeVlXZHRaVzUwWDJKbFoybHVQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjltY21GbmJXVnVkRjl0WVhCelBnb0pJMmx1WTJ4MVpHVWdQR1Z0YVhOemFYWmxiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHeHBaMmgwYzE5d2FHOXVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mWm5KaFoyMWxiblJmWW1WbmFXNCtDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMjFoY0hNK0Nna2phVzVqYkhWa1pTQThiR2xuYUhSelgyWnlZV2R0Wlc1MFgyVnVaRDRLQ1NOcGJtTnNkV1JsSUR4aGIyMWhjRjltY21GbmJXVnVkRDRLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlISmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVZ0t5QnlaV1pzWldOMFpXUk1hV2RvZEM1a2FYSmxZM1JUY0dWamRXeGhjaUFySUhKbFpteGxZM1JsWkV4cFoyaDBMbWx1WkdseVpXTjBVM0JsWTNWc1lYSWdLeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVN0Nna2phVzVqYkhWa1pTQThaVzUyYldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzkxZEhCMWRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHgwYjI1bGJXRndjR2x1WjE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4Wm05blgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSEJ5WlcxMWJIUnBjR3hwWldSZllXeHdhR0ZmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFpHbDBhR1Z5YVc1blgyWnlZV2R0Wlc1MFBncDlZQ3dnUkcwZ1BTQmdJMlJsWm1sdVpTQlRWRUZPUkVGU1JBcDJZWEo1YVc1bklIWmxZek1nZGxacFpYZFFiM05wZEdsdmJqc0tJMmxtWkdWbUlGVlRSVjlVVWtGT1UwMUpVMU5KVDA0S0NYWmhjbmxwYm1jZ2RtVmpNeUIyVjI5eWJHUlFiM05wZEdsdmJqc0tJMlZ1WkdsbUNpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BIVjJNbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQR052Ykc5eVgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJXOXljR2gwWVhKblpYUmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5vWVdSdmQyMWhjRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHeHZaMlJsY0hSb1luVm1YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDNCaGNuTmZkbVZ5ZEdWNFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOGRYWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQSFYyTWw5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFkyOXNiM0pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHRiM0p3YUc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4YzJ0cGJtSmhjMlZmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNXViM0p0WVd4ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUmxabUYxYkhSdWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibWx1WjE5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFpHbHpjR3hoWTJWdFpXNTBiV0Z3WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NYWldhV1YzVUc5emFYUnBiMjRnUFNBdElHMTJVRzl6YVhScGIyNHVlSGw2T3dvSkkybHVZMngxWkdVZ1BIZHZjbXhrY0c5elgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR1p2WjE5MlpYSjBaWGcrQ2lOcFptUmxaaUJWVTBWZlZGSkJUbE5OU1ZOVFNVOU9DZ2wyVjI5eWJHUlFiM05wZEdsdmJpQTlJSGR2Y214a1VHOXphWFJwYjI0dWVIbDZPd29qWlc1a2FXWUtmV0FzSUVadElEMGdZQ05rWldacGJtVWdVMVJCVGtSQlVrUUtJMmxtWkdWbUlGQklXVk5KUTBGTUNna2paR1ZtYVc1bElFbFBVZ29KSTJSbFptbHVaU0JUVUVWRFZVeEJVZ29qWlc1a2FXWUtkVzVwWm05eWJTQjJaV016SUdScFptWjFjMlU3Q25WdWFXWnZjbTBnZG1Wak15QmxiV2x6YzJsMlpUc0tkVzVwWm05eWJTQm1iRzloZENCeWIzVm5hRzVsYzNNN0NuVnVhV1p2Y20wZ1pteHZZWFFnYldWMFlXeHVaWE56T3dwMWJtbG1iM0p0SUdac2IyRjBJRzl3WVdOcGRIazdDaU5wWm1SbFppQkpUMUlLQ1hWdWFXWnZjbTBnWm14dllYUWdhVzl5T3dvalpXNWthV1lLSTJsbVpHVm1JRk5RUlVOVlRFRlNDZ2wxYm1sbWIzSnRJR1pzYjJGMElITndaV04xYkdGeVNXNTBaVzV6YVhSNU93b0pkVzVwWm05eWJTQjJaV016SUhOd1pXTjFiR0Z5UTI5c2IzSTdDZ2tqYVdaa1pXWWdWVk5GWDFOUVJVTlZURUZTU1U1VVJVNVRTVlJaVFVGUUNna0pkVzVwWm05eWJTQnpZVzF3YkdWeU1rUWdjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEE3Q2dralpXNWthV1lLQ1NOcFptUmxaaUJWVTBWZlUxQkZRMVZNUVZKRFQweFBVazFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITndaV04xYkdGeVEyOXNiM0pOWVhBN0Nna2paVzVrYVdZS0kyVnVaR2xtQ2lOcFptUmxaaUJWVTBWZlEweEZRVkpEVDBGVUNnbDFibWxtYjNKdElHWnNiMkYwSUdOc1pXRnlZMjloZERzS0NYVnVhV1p2Y20wZ1pteHZZWFFnWTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56T3dvalpXNWthV1lLSTJsbVpHVm1JRlZUUlY5VFNFVkZUZ29KZFc1cFptOXliU0IyWldNeklITm9aV1Z1UTI5c2IzSTdDZ2wxYm1sbWIzSnRJR1pzYjJGMElITm9aV1Z1VW05MVoyaHVaWE56T3dvSkkybG1aR1ZtSUZWVFJWOVRTRVZGVGtOUFRFOVNUVUZRQ2drSmRXNXBabTl5YlNCellXMXdiR1Z5TWtRZ2MyaGxaVzVEYjJ4dmNrMWhjRHNLQ1NObGJtUnBaZ29KSTJsbVpHVm1JRlZUUlY5VFNFVkZUbEpQVlVkSVRrVlRVMDFCVUFvSkNYVnVhV1p2Y20wZ2MyRnRjR3hsY2pKRUlITm9aV1Z1VW05MVoyaHVaWE56VFdGd093b0pJMlZ1WkdsbUNpTmxibVJwWmdwMllYSjVhVzVuSUhabFl6TWdkbFpwWlhkUWIzTnBkR2x2YmpzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIQmhZMnRwYm1jK0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGdmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXMXBjM05wZG1WdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSnpaR1p6UGdvamFXNWpiSFZrWlNBOFkzVmlaVjkxZGw5eVpXWnNaV04wYVc5dVgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThaVzUyYldGd1gyTnZiVzF2Ymw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Wlc1MmJXRndYM0JvZVhOcFkyRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOXdZWEp6WDJKbFoybHVQZ29qYVc1amJIVmtaU0E4Ym05eWJXRnNYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEhOZmNHaDVjMmxqWVd4ZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEhSeVlXNXpiV2x6YzJsdmJsOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aWRXMXdiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeHRZWEJmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR05zWldGeVkyOWhkRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThjbTkxWjJodVpYTnpiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHh0WlhSaGJHNWxjM050WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEd4dloyUmxjSFJvWW5WbVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOW1jbUZuYldWdWRENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5bWNtRm5iV1Z1ZEQ0S0NYWmxZelFnWkdsbVpuVnpaVU52Ykc5eUlEMGdkbVZqTkNnZ1pHbG1ablZ6WlN3Z2IzQmhZMmwwZVNBcE93b0pVbVZtYkdWamRHVmtUR2xuYUhRZ2NtVm1iR1ZqZEdWa1RHbG5hSFFnUFNCU1pXWnNaV04wWldSTWFXZG9kQ2dnZG1Wak15Z2dNQzR3SUNrc0lIWmxZek1vSURBdU1DQXBMQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa2dLVHNLQ1habFl6TWdkRzkwWVd4RmJXbHpjMmwyWlZKaFpHbGhibU5sSUQwZ1pXMXBjM05wZG1VN0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdOdmJHOXlYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHRnNjR2hoZEdWemRGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHh5YjNWbmFHNWxjM050WVhCZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThiV1YwWVd4dVpYTnpiV0Z3WDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5aVpXZHBiajRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmWm5KaFoyMWxiblJmYldGd2N6NEtDU05wYm1Oc2RXUmxJRHhqYkdWaGNtTnZZWFJmYm05eWJXRnNYMlp5WVdkdFpXNTBYMkpsWjJsdVBnb0pJMmx1WTJ4MVpHVWdQR05zWldGeVkyOWhkRjl1YjNKdFlXeGZabkpoWjIxbGJuUmZiV0Z3Y3o0S0NTTnBibU5zZFdSbElEeGxiV2x6YzJsMlpXMWhjRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4c2FXZG9kSE5mY0doNWMybGpZV3hmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDJKbFoybHVQZ29KSTJsdVkyeDFaR1VnUEd4cFoyaDBjMTltY21GbmJXVnVkRjl0WVhCelBnb0pJMmx1WTJ4MVpHVWdQR3hwWjJoMGMxOW1jbUZuYldWdWRGOWxibVErQ2dramFXNWpiSFZrWlNBOFlXOXRZWEJmWm5KaFoyMWxiblErQ2dsMlpXTXpJSFJ2ZEdGc1JHbG1ablZ6WlNBOUlISmxabXhsWTNSbFpFeHBaMmgwTG1ScGNtVmpkRVJwWm1aMWMyVWdLeUJ5Wldac1pXTjBaV1JNYVdkb2RDNXBibVJwY21WamRFUnBabVoxYzJVN0NnbDJaV016SUhSdmRHRnNVM0JsWTNWc1lYSWdQU0J5Wldac1pXTjBaV1JNYVdkb2RDNWthWEpsWTNSVGNHVmpkV3hoY2lBcklISmxabXhsWTNSbFpFeHBaMmgwTG1sdVpHbHlaV04wVTNCbFkzVnNZWEk3Q2dramFXNWpiSFZrWlNBOGRISmhibk50YVhOemFXOXVYMlp5WVdkdFpXNTBQZ29KZG1Wak15QnZkWFJuYjJsdVoweHBaMmgwSUQwZ2RHOTBZV3hFYVdabWRYTmxJQ3NnZEc5MFlXeFRjR1ZqZFd4aGNpQXJJSFJ2ZEdGc1JXMXBjM05wZG1WU1lXUnBZVzVqWlRzS0NTTnBabVJsWmlCVlUwVmZVMGhGUlU0S0NRbG1iRzloZENCemFHVmxia1Z1WlhKbmVVTnZiWEFnUFNBeExqQWdMU0F3TGpFMU55QXFJRzFoZURNb0lHMWhkR1Z5YVdGc0xuTm9aV1Z1UTI5c2IzSWdLVHNLQ1FsdmRYUm5iMmx1WjB4cFoyaDBJRDBnYjNWMFoyOXBibWRNYVdkb2RDQXFJSE5vWldWdVJXNWxjbWQ1UTI5dGNDQXJJSE5vWldWdVUzQmxZM1ZzWVhJN0Nna2paVzVrYVdZS0NTTnBabVJsWmlCVlUwVmZRMHhGUVZKRFQwRlVDZ2tKWm14dllYUWdaRzkwVGxaall5QTlJSE5oZEhWeVlYUmxLQ0JrYjNRb0lHZGxiMjFsZEhKNUxtTnNaV0Z5WTI5aGRFNXZjbTFoYkN3Z1oyVnZiV1YwY25rdWRtbGxkMFJwY2lBcElDazdDZ2tKZG1Wak15QkdZMk1nUFNCR1gxTmphR3hwWTJzb0lHMWhkR1Z5YVdGc0xtTnNaV0Z5WTI5aGRFWXdMQ0J0WVhSbGNtbGhiQzVqYkdWaGNtTnZZWFJHT1RBc0lHUnZkRTVXWTJNZ0tUc0tDUWx2ZFhSbmIybHVaMHhwWjJoMElEMGdiM1YwWjI5cGJtZE1hV2RvZENBcUlDZ2dNUzR3SUMwZ2JXRjBaWEpwWVd3dVkyeGxZWEpqYjJGMElDb2dSbU5qSUNrZ0t5QmpiR1ZoY21OdllYUlRjR1ZqZFd4aGNpQXFJRzFoZEdWeWFXRnNMbU5zWldGeVkyOWhkRHNLQ1NObGJtUnBaZ29KSTJsdVkyeDFaR1VnUEc5MWRIQjFkRjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThaR2wwYUdWeWFXNW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z1RtMGdQU0JnSTJSbFptbHVaU0JVVDA5T0NuWmhjbmxwYm1jZ2RtVmpNeUIyVm1sbGQxQnZjMmwwYVc5dU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThkWFpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeDFkakpmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeGthWE53YkdGalpXMWxiblJ0WVhCZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYjJ4dmNsOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEdadloxOXdZWEp6WDNabGNuUmxlRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRjl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnK0NpTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHTnNhWEJ3YVc1blgzQnNZVzVsYzE5d1lYSnpYM1psY25SbGVENEtkbTlwWkNCdFlXbHVLQ2tnZXdvSkkybHVZMngxWkdVZ1BIVjJYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHgxZGpKZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHTnZiRzl5WDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4aVpXZHBibTV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThiVzl5Y0dodWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOcmFXNWlZWE5sWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4emEybHVibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeGtaV1poZFd4MGJtOXliV0ZzWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdKbFoybHVYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGMydHBibTVwYm1kZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHUnBjM0JzWVdObGJXVnVkRzFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGNISnZhbVZqZEY5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQR05zYVhCd2FXNW5YM0JzWVc1bGMxOTJaWEowWlhnK0NnbDJWbWxsZDFCdmMybDBhVzl1SUQwZ0xTQnRkbEJ2YzJsMGFXOXVMbmg1ZWpzS0NTTnBibU5zZFdSbElEeDNiM0pzWkhCdmMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMmhoWkc5M2JXRndYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHhtYjJkZmRtVnlkR1Y0UGdwOVlDd2dRbTBnUFNCZ0kyUmxabWx1WlNCVVQwOU9DblZ1YVdadmNtMGdkbVZqTXlCa2FXWm1kWE5sT3dwMWJtbG1iM0p0SUhabFl6TWdaVzFwYzNOcGRtVTdDblZ1YVdadmNtMGdabXh2WVhRZ2IzQmhZMmwwZVRzS0kybHVZMngxWkdVZ1BHTnZiVzF2Ymo0S0kybHVZMngxWkdVZ1BIQmhZMnRwYm1jK0NpTnBibU5zZFdSbElEeGthWFJvWlhKcGJtZGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHTnZiRzl5WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHgxZGw5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4ZFhZeVgzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHRnNjR2hoYldGd1gzQmhjbk5mWm5KaFoyMWxiblErQ2lOcGJtTnNkV1JsSUR4aGJIQm9ZWFJsYzNSZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdGdmJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHNhV2RvZEcxaGNGOXdZWEp6WDJaeVlXZHRaVzUwUGdvamFXNWpiSFZrWlNBOFpXMXBjM05wZG1WdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHZHlZV1JwWlc1MGJXRndYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR0p6WkdaelBnb2phVzVqYkhWa1pTQThiR2xuYUhSelgzQmhjbk5mWW1WbmFXNCtDaU5wYm1Oc2RXUmxJRHh1YjNKdFlXeGZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHeHBaMmgwYzE5MGIyOXVYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeHphR0ZrYjNkdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0kybHVZMngxWkdVZ1BHSjFiWEJ0WVhCZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEc1dmNtMWhiRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDJaeVlXZHRaVzUwUGdvSmRtVmpOQ0JrYVdabWRYTmxRMjlzYjNJZ1BTQjJaV00wS0NCa2FXWm1kWE5sTENCdmNHRmphWFI1SUNrN0NnbFNaV1pzWldOMFpXUk1hV2RvZENCeVpXWnNaV04wWldSTWFXZG9kQ0E5SUZKbFpteGxZM1JsWkV4cFoyaDBLQ0IyWldNektDQXdMakFnS1N3Z2RtVmpNeWdnTUM0d0lDa3NJSFpsWXpNb0lEQXVNQ0FwTENCMlpXTXpLQ0F3TGpBZ0tTQXBPd29KZG1Wak15QjBiM1JoYkVWdGFYTnphWFpsVW1Ga2FXRnVZMlVnUFNCbGJXbHpjMmwyWlRzS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dFlYQmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRnRZWEJmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFlXeHdhR0YwWlhOMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQRzV2Y20xaGJGOW1jbUZuYldWdWRGOWlaV2RwYmo0S0NTTnBibU5zZFdSbElEeHViM0p0WVd4ZlpuSmhaMjFsYm5SZmJXRndjejRLQ1NOcGJtTnNkV1JsSUR4bGJXbHpjMmwyWlcxaGNGOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhzYVdkb2RITmZkRzl2Ymw5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeHNhV2RvZEhOZlpuSmhaMjFsYm5SZlltVm5hVzQrQ2dramFXNWpiSFZrWlNBOGJHbG5hSFJ6WDJaeVlXZHRaVzUwWDIxaGNITStDZ2tqYVc1amJIVmtaU0E4YkdsbmFIUnpYMlp5WVdkdFpXNTBYMlZ1WkQ0S0NTTnBibU5zZFdSbElEeGhiMjFoY0Y5bWNtRm5iV1Z1ZEQ0S0NYWmxZek1nYjNWMFoyOXBibWRNYVdkb2RDQTlJSEpsWm14bFkzUmxaRXhwWjJoMExtUnBjbVZqZEVScFptWjFjMlVnS3lCeVpXWnNaV04wWldSTWFXZG9kQzVwYm1ScGNtVmpkRVJwWm1aMWMyVWdLeUIwYjNSaGJFVnRhWE56YVhabFVtRmthV0Z1WTJVN0Nna2phVzVqYkhWa1pTQThiM1YwY0hWMFgyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQSFJ2Ym1WdFlYQndhVzVuWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BHVnVZMjlrYVc1bmMxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhtYjJkZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThjSEpsYlhWc2RHbHdiR2xsWkY5aGJIQm9ZVjltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4a2FYUm9aWEpwYm1kZlpuSmhaMjFsYm5RK0NuMWdMQ0I2YlNBOUlHQjFibWxtYjNKdElHWnNiMkYwSUhOcGVtVTdDblZ1YVdadmNtMGdabXh2WVhRZ2MyTmhiR1U3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHWnZaMTl3WVhKelgzWmxjblJsZUQ0S0kybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGcrQ2lOcGJtTnNkV1JsSUR4amJHbHdjR2x1WjE5d2JHRnVaWE5mY0dGeWMxOTJaWEowWlhnK0NuWnZhV1FnYldGcGJpZ3BJSHNLQ1NOcGJtTnNkV1JsSUR4amIyeHZjbDkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WW1WbmFXNWZkbVZ5ZEdWNFBnb0pJMmx1WTJ4MVpHVWdQRzF2Y25Cb2RHRnlaMlYwWDNabGNuUmxlRDRLQ1NOcGJtTnNkV1JsSUR4d2NtOXFaV04wWDNabGNuUmxlRDRLQ1dkc1gxQnZhVzUwVTJsNlpTQTlJSE5wZW1VN0Nna2phV1prWldZZ1ZWTkZYMU5KV2tWQlZGUkZUbFZCVkVsUFRnb0pDV0p2YjJ3Z2FYTlFaWEp6Y0dWamRHbDJaU0E5SUdselVHVnljM0JsWTNScGRtVk5ZWFJ5YVhnb0lIQnliMnBsWTNScGIyNU5ZWFJ5YVhnZ0tUc0tDUWxwWmlBb0lHbHpVR1Z5YzNCbFkzUnBkbVVnS1NCbmJGOVFiMmx1ZEZOcGVtVWdLajBnS0NCelkyRnNaU0F2SUMwZ2JYWlFiM05wZEdsdmJpNTZJQ2s3Q2dralpXNWthV1lLQ1NOcGJtTnNkV1JsSUR4c2IyZGtaWEIwYUdKMVpsOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZMnhwY0hCcGJtZGZjR3hoYm1WelgzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeDNiM0pzWkhCdmMxOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThabTluWDNabGNuUmxlRDRLZldBc0lGVnRJRDBnWUhWdWFXWnZjbTBnZG1Wak15QmthV1ptZFhObE93cDFibWxtYjNKdElHWnNiMkYwSUc5d1lXTnBkSGs3Q2lOcGJtTnNkV1JsSUR4amIyMXRiMjQrQ2lOcGJtTnNkV1JsSUR4amIyeHZjbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuUnBZMnhsWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lYUmxjM1JmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTltY21GbmJXVnVkRDRLSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTl3WVhKelgyWnlZV2R0Wlc1MFBncDJiMmxrSUcxaGFXNG9LU0I3Q2dramFXNWpiSFZrWlNBOFkyeHBjSEJwYm1kZmNHeGhibVZ6WDJaeVlXZHRaVzUwUGdvSmRtVmpNeUJ2ZFhSbmIybHVaMHhwWjJoMElEMGdkbVZqTXlnZ01DNHdJQ2s3Q2dsMlpXTTBJR1JwWm1aMWMyVkRiMnh2Y2lBOUlIWmxZelFvSUdScFptWjFjMlVzSUc5d1lXTnBkSGtnS1RzS0NTTnBibU5zZFdSbElEeHNiMmRrWlhCMGFHSjFabDltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4dFlYQmZjR0Z5ZEdsamJHVmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WTI5c2IzSmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4WVd4d2FHRjBaWE4wWDJaeVlXZHRaVzUwUGdvSmIzVjBaMjlwYm1kTWFXZG9kQ0E5SUdScFptWjFjMlZEYjJ4dmNpNXlaMkk3Q2dramFXNWpiSFZrWlNBOGIzVjBjSFYwWDJaeVlXZHRaVzUwUGdvSkkybHVZMngxWkdVZ1BIUnZibVZ0WVhCd2FXNW5YMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdWdVkyOWthVzVuYzE5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeG1iMmRmWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOGNISmxiWFZzZEdsd2JHbGxaRjloYkhCb1lWOW1jbUZuYldWdWRENEtmV0FzSUU5dElEMGdZQ05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDaU5wYm1Oc2RXUmxJRHhtYjJkZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHh0YjNKd2FIUmhjbWRsZEY5d1lYSnpYM1psY25SbGVENEtJMmx1WTJ4MVpHVWdQSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0UGdvamFXNWpiSFZrWlNBOGMyaGhaRzkzYldGd1gzQmhjbk5mZG1WeWRHVjRQZ3AyYjJsa0lHMWhhVzRvS1NCN0Nna2phVzVqYkhWa1pTQThZbVZuYVc1dWIzSnRZV3hmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEcxdmNuQm9ibTl5YldGc1gzWmxjblJsZUQ0S0NTTnBibU5zZFdSbElEeHphMmx1WW1GelpWOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThjMnRwYm01dmNtMWhiRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4WkdWbVlYVnNkRzV2Y20xaGJGOTJaWEowWlhnK0Nna2phVzVqYkhWa1pTQThZbVZuYVc1ZmRtVnlkR1Y0UGdvSkkybHVZMngxWkdVZ1BHMXZjbkJvZEdGeVoyVjBYM1psY25SbGVENEtDU05wYm1Oc2RXUmxJRHh6YTJsdWJtbHVaMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Y0hKdmFtVmpkRjkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4ZDI5eWJHUndiM05mZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5MlpYSjBaWGcrQ2dramFXNWpiSFZrWlNBOFptOW5YM1psY25SbGVENEtmV0FzSUVodElEMGdZSFZ1YVdadmNtMGdkbVZqTXlCamIyeHZjanNLZFc1cFptOXliU0JtYkc5aGRDQnZjR0ZqYVhSNU93b2phVzVqYkhWa1pTQThZMjl0Ylc5dVBnb2phVzVqYkhWa1pTQThjR0ZqYTJsdVp6NEtJMmx1WTJ4MVpHVWdQR1p2WjE5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4WW5Oa1puTStDaU5wYm1Oc2RXUmxJRHhzYVdkb2RITmZjR0Z5YzE5aVpXZHBiajRLSTJsdVkyeDFaR1VnUEhOb1lXUnZkMjFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBQZ29qYVc1amJIVmtaU0E4YzJoaFpHOTNiV0Z6YTE5d1lYSnpYMlp5WVdkdFpXNTBQZ3AyYjJsa0lHMWhhVzRvS1NCN0NnbG5iRjlHY21GblEyOXNiM0lnUFNCMlpXTTBLQ0JqYjJ4dmNpd2diM0JoWTJsMGVTQXFJQ2dnTVM0d0lDMGdaMlYwVTJoaFpHOTNUV0Z6YXlncElDa2dLVHNLQ1NOcGJtTnNkV1JsSUR4MGIyNWxiV0Z3Y0dsdVoxOW1jbUZuYldWdWRENEtDU05wYm1Oc2RXUmxJRHhsYm1OdlpHbHVaM05mWm5KaFoyMWxiblErQ2dramFXNWpiSFZrWlNBOFptOW5YMlp5WVdkdFpXNTBQZ3A5WUN3Z2EyMGdQU0JnZFc1cFptOXliU0JtYkc5aGRDQnliM1JoZEdsdmJqc0tkVzVwWm05eWJTQjJaV015SUdObGJuUmxjanNLSTJsdVkyeDFaR1VnUEdOdmJXMXZiajRLSTJsdVkyeDFaR1VnUEhWMlgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Wm05blgzQmhjbk5mZG1WeWRHVjRQZ29qYVc1amJIVmtaU0E4Ykc5blpHVndkR2hpZFdaZmNHRnljMTkyWlhKMFpYZytDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGcrQ25admFXUWdiV0ZwYmlncElIc0tDU05wYm1Oc2RXUmxJRHgxZGw5MlpYSjBaWGcrQ2dsMlpXTTBJRzEyVUc5emFYUnBiMjRnUFNCdGIyUmxiRlpwWlhkTllYUnlhWGdnS2lCMlpXTTBLQ0F3TGpBc0lEQXVNQ3dnTUM0d0xDQXhMakFnS1RzS0NYWmxZeklnYzJOaGJHVTdDZ2x6WTJGc1pTNTRJRDBnYkdWdVozUm9LQ0IyWldNektDQnRiMlJsYkUxaGRISnBlRnNnTUNCZExuZ3NJRzF2WkdWc1RXRjBjbWw0V3lBd0lGMHVlU3dnYlc5a1pXeE5ZWFJ5YVhoYklEQWdYUzU2SUNrZ0tUc0tDWE5qWVd4bExua2dQU0JzWlc1bmRHZ29JSFpsWXpNb0lHMXZaR1ZzVFdGMGNtbDRXeUF4SUYwdWVDd2diVzlrWld4TllYUnlhWGhiSURFZ1hTNTVMQ0J0YjJSbGJFMWhkSEpwZUZzZ01TQmRMbm9nS1NBcE93b0pJMmxtYm1SbFppQlZVMFZmVTBsYVJVRlVWRVZPVlVGVVNVOU9DZ2tKWW05dmJDQnBjMUJsY25Od1pXTjBhWFpsSUQwZ2FYTlFaWEp6Y0dWamRHbDJaVTFoZEhKcGVDZ2djSEp2YW1WamRHbHZiazFoZEhKcGVDQXBPd29KQ1dsbUlDZ2dhWE5RWlhKemNHVmpkR2wyWlNBcElITmpZV3hsSUNvOUlDMGdiWFpRYjNOcGRHbHZiaTU2T3dvSkkyVnVaR2xtQ2dsMlpXTXlJR0ZzYVdkdVpXUlFiM05wZEdsdmJpQTlJQ2dnY0c5emFYUnBiMjR1ZUhrZ0xTQW9JR05sYm5SbGNpQXRJSFpsWXpJb0lEQXVOU0FwSUNrZ0tTQXFJSE5qWVd4bE93b0pkbVZqTWlCeWIzUmhkR1ZrVUc5emFYUnBiMjQ3Q2dseWIzUmhkR1ZrVUc5emFYUnBiMjR1ZUNBOUlHTnZjeWdnY205MFlYUnBiMjRnS1NBcUlHRnNhV2R1WldSUWIzTnBkR2x2Ymk1NElDMGdjMmx1S0NCeWIzUmhkR2x2YmlBcElDb2dZV3hwWjI1bFpGQnZjMmwwYVc5dUxuazdDZ2x5YjNSaGRHVmtVRzl6YVhScGIyNHVlU0E5SUhOcGJpZ2djbTkwWVhScGIyNGdLU0FxSUdGc2FXZHVaV1JRYjNOcGRHbHZiaTU0SUNzZ1kyOXpLQ0J5YjNSaGRHbHZiaUFwSUNvZ1lXeHBaMjVsWkZCdmMybDBhVzl1TG5rN0NnbHRkbEJ2YzJsMGFXOXVMbmg1SUNzOUlISnZkR0YwWldSUWIzTnBkR2x2YmpzS0NXZHNYMUJ2YzJsMGFXOXVJRDBnY0hKdmFtVmpkR2x2YmsxaGRISnBlQ0FxSUcxMlVHOXphWFJwYjI0N0Nna2phVzVqYkhWa1pTQThiRzluWkdWd2RHaGlkV1pmZG1WeWRHVjRQZ29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTkyWlhKMFpYZytDZ2tqYVc1amJIVmtaU0E4Wm05blgzWmxjblJsZUQ0S2ZXQXNJRWR0SUQwZ1lIVnVhV1p2Y20wZ2RtVmpNeUJrYVdabWRYTmxPd3AxYm1sbWIzSnRJR1pzYjJGMElHOXdZV05wZEhrN0NpTnBibU5zZFdSbElEeGpiMjF0YjI0K0NpTnBibU5zZFdSbElEeDFkbDl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThiV0Z3WDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1MFBnb2phVzVqYkhWa1pTQThZV3h3YUdGMFpYTjBYM0JoY25OZlpuSmhaMjFsYm5RK0NpTnBibU5zZFdSbElEeG1iMmRmY0dGeWMxOW1jbUZuYldWdWRENEtJMmx1WTJ4MVpHVWdQR3h2WjJSbGNIUm9ZblZtWDNCaGNuTmZabkpoWjIxbGJuUStDaU5wYm1Oc2RXUmxJRHhqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S2RtOXBaQ0J0WVdsdUtDa2dld29KSTJsdVkyeDFaR1VnUEdOc2FYQndhVzVuWDNCc1lXNWxjMTltY21GbmJXVnVkRDRLQ1habFl6TWdiM1YwWjI5cGJtZE1hV2RvZENBOUlIWmxZek1vSURBdU1DQXBPd29KZG1Wak5DQmthV1ptZFhObFEyOXNiM0lnUFNCMlpXTTBLQ0JrYVdabWRYTmxMQ0J2Y0dGamFYUjVJQ2s3Q2dramFXNWpiSFZrWlNBOGJHOW5aR1Z3ZEdoaWRXWmZabkpoWjIxbGJuUStDZ2tqYVc1amJIVmtaU0E4YldGd1gyWnlZV2R0Wlc1MFBnb0pJMmx1WTJ4MVpHVWdQR0ZzY0doaGJXRndYMlp5WVdkdFpXNTBQZ29KSTJsdVkyeDFaR1VnUEdGc2NHaGhkR1Z6ZEY5bWNtRm5iV1Z1ZEQ0S0NXOTFkR2R2YVc1blRHbG5hSFFnUFNCa2FXWm1kWE5sUTI5c2IzSXVjbWRpT3dvSkkybHVZMngxWkdVZ1BHOTFkSEIxZEY5bWNtRm5iV1Z1ZEQ0S0NTTnBibU5zZFdSbElEeDBiMjVsYldGd2NHbHVaMTltY21GbmJXVnVkRDRLQ1NOcGJtTnNkV1JsSUR4bGJtTnZaR2x1WjNOZlpuSmhaMjFsYm5RK0Nna2phVzVqYkhWa1pTQThabTluWDJaeVlXZHRaVzUwUGdwOVlDd2dSbVVnUFNCN0NpQWdJQ0JoYkhCb1lXMWhjRjltY21GbmJXVnVkRG9nZUdZc0NpQWdJQ0JoYkhCb1lXMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQjVaaXdLSUNBZ0lHRnNjR2hoZEdWemRGOW1jbUZuYldWdWREb2dkbVlzQ2lBZ0lDQmhiSEJvWVhSbGMzUmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1gyWXNDaUFnSUNCaGIyMWhjRjltY21GbmJXVnVkRG9nVFdZc0NpQWdJQ0JoYjIxaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCaVppd0tJQ0FnSUdKbFoybHVYM1psY25SbGVEb2dkMllzQ2lBZ0lDQmlaV2RwYm01dmNtMWhiRjkyWlhKMFpYZzZJRk5tTEFvZ0lDQWdZbk5rWm5NNklGUm1MQW9nSUNBZ1luVnRjRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUJGWml3S0lDQWdJR05zYVhCd2FXNW5YM0JzWVc1bGMxOW1jbUZuYldWdWREb2dRV1lzQ2lBZ0lDQmpiR2x3Y0dsdVoxOXdiR0Z1WlhOZmNHRnljMTltY21GbmJXVnVkRG9nUTJZc0NpQWdJQ0JqYkdsd2NHbHVaMTl3YkdGdVpYTmZjR0Z5YzE5MlpYSjBaWGc2SUV4bUxBb2dJQ0FnWTJ4cGNIQnBibWRmY0d4aGJtVnpYM1psY25SbGVEb2dVbVlzQ2lBZ0lDQmpiMnh2Y2w5bWNtRm5iV1Z1ZERvZ1VHWXNDaUFnSUNCamIyeHZjbDl3WVhKelgyWnlZV2R0Wlc1ME9pQkpaaXdLSUNBZ0lHTnZiRzl5WDNCaGNuTmZkbVZ5ZEdWNE9pQkVaaXdLSUNBZ0lHTnZiRzl5WDNabGNuUmxlRG9nUm1Zc0NpQWdJQ0JqYjIxdGIyNDZJRTVtTEFvZ0lDQWdZM1ZpWlY5MWRsOXlaV1pzWldOMGFXOXVYMlp5WVdkdFpXNTBPaUJDWml3S0lDQWdJR1JsWm1GMWJIUnViM0p0WVd4ZmRtVnlkR1Y0T2lCNlppd0tJQ0FnSUdScGMzQnNZV05sYldWdWRHMWhjRjl3WVhKelgzWmxjblJsZURvZ1ZXWXNDaUFnSUNCa2FYTndiR0ZqWlcxbGJuUnRZWEJmZG1WeWRHVjRPaUJQWml3S0lDQWdJR1Z0YVhOemFYWmxiV0Z3WDJaeVlXZHRaVzUwT2lCSVppd0tJQ0FnSUdWdGFYTnphWFpsYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUd0bUxBb2dJQ0FnWlc1amIyUnBibWR6WDJaeVlXZHRaVzUwT2lCSFppd0tJQ0FnSUdWdVkyOWthVzVuYzE5d1lYSnpYMlp5WVdkdFpXNTBPaUJXWml3S0lDQWdJR1Z1ZG0xaGNGOW1jbUZuYldWdWREb2dWMllzQ2lBZ0lDQmxiblp0WVhCZlkyOXRiVzl1WDNCaGNuTmZabkpoWjIxbGJuUTZJSEZtTEFvZ0lDQWdaVzUyYldGd1gzQmhjbk5mWm5KaFoyMWxiblE2SUZobUxBb2dJQ0FnWlc1MmJXRndYM0JoY25OZmRtVnlkR1Y0T2lCS1ppd0tJQ0FnSUdWdWRtMWhjRjl3YUhsemFXTmhiRjl3WVhKelgyWnlZV2R0Wlc1ME9pQnljQ3dLSUNBZ0lHVnVkbTFoY0Y5MlpYSjBaWGc2SUZsbUxBb2dJQ0FnWm05blgzWmxjblJsZURvZ1dtWXNDaUFnSUNCbWIyZGZjR0Z5YzE5MlpYSjBaWGc2SUNSbUxBb2dJQ0FnWm05blgyWnlZV2R0Wlc1ME9pQnFaaXdLSUNBZ0lHWnZaMTl3WVhKelgyWnlZV2R0Wlc1ME9pQlJaaXdLSUNBZ0lHZHlZV1JwWlc1MGJXRndYM0JoY25OZlpuSmhaMjFsYm5RNklFdG1MQW9nSUNBZ2JHbG5hSFJ0WVhCZlpuSmhaMjFsYm5RNklHVndMQW9nSUNBZ2JHbG5hSFJ0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nZEhBc0NpQWdJQ0JzYVdkb2RITmZiR0Z0WW1WeWRGOTJaWEowWlhnNklHNXdMQW9nSUNBZ2JHbG5hSFJ6WDNCaGNuTmZZbVZuYVc0NklHbHdMQW9nSUNBZ2JHbG5hSFJ6WDNSdmIyNWZabkpoWjIxbGJuUTZJSE53TEFvZ0lDQWdiR2xuYUhSelgzUnZiMjVmY0dGeWMxOW1jbUZuYldWdWREb2diM0FzQ2lBZ0lDQnNhV2RvZEhOZmNHaHZibWRmWm5KaFoyMWxiblE2SUdGd0xBb2dJQ0FnYkdsbmFIUnpYM0JvYjI1blgzQmhjbk5mWm5KaFoyMWxiblE2SUd4d0xBb2dJQ0FnYkdsbmFIUnpYM0JvZVhOcFkyRnNYMlp5WVdkdFpXNTBPaUJqY0N3S0lDQWdJR3hwWjJoMGMxOXdhSGx6YVdOaGJGOXdZWEp6WDJaeVlXZHRaVzUwT2lCb2NDd0tJQ0FnSUd4cFoyaDBjMTltY21GbmJXVnVkRjlpWldkcGJqb2dkWEFzQ2lBZ0lDQnNhV2RvZEhOZlpuSmhaMjFsYm5SZmJXRndjem9nWkhBc0NpQWdJQ0JzYVdkb2RITmZabkpoWjIxbGJuUmZaVzVrT2lCbWNDd0tJQ0FnSUd4dloyUmxjSFJvWW5WbVgyWnlZV2R0Wlc1ME9pQndjQ3dLSUNBZ0lHeHZaMlJsY0hSb1luVm1YM0JoY25OZlpuSmhaMjFsYm5RNklHMXdMQW9nSUNBZ2JHOW5aR1Z3ZEdoaWRXWmZjR0Z5YzE5MlpYSjBaWGc2SUdkd0xBb2dJQ0FnYkc5blpHVndkR2hpZFdaZmRtVnlkR1Y0T2lCNGNDd0tJQ0FnSUcxaGNGOW1jbUZuYldWdWREb2dlWEFzQ2lBZ0lDQnRZWEJmY0dGeWMxOW1jbUZuYldWdWREb2dkbkFzQ2lBZ0lDQnRZWEJmY0dGeWRHbGpiR1ZmWm5KaFoyMWxiblE2SUY5d0xBb2dJQ0FnYldGd1gzQmhjblJwWTJ4bFgzQmhjbk5mWm5KaFoyMWxiblE2SUUxd0xBb2dJQ0FnYldWMFlXeHVaWE56YldGd1gyWnlZV2R0Wlc1ME9pQmljQ3dLSUNBZ0lHMWxkR0ZzYm1WemMyMWhjRjl3WVhKelgyWnlZV2R0Wlc1ME9pQjNjQ3dLSUNBZ0lHMXZjbkJvYm05eWJXRnNYM1psY25SbGVEb2dVM0FzQ2lBZ0lDQnRiM0p3YUhSaGNtZGxkRjl3WVhKelgzWmxjblJsZURvZ1ZIQXNDaUFnSUNCdGIzSndhSFJoY21kbGRGOTJaWEowWlhnNklFVndMQW9nSUNBZ2JtOXliV0ZzWDJaeVlXZHRaVzUwWDJKbFoybHVPaUJCY0N3S0lDQWdJRzV2Y20xaGJGOW1jbUZuYldWdWRGOXRZWEJ6T2lCRGNDd0tJQ0FnSUc1dmNtMWhiRjl3WVhKelgyWnlZV2R0Wlc1ME9pQk1jQ3dLSUNBZ0lHNXZjbTFoYkY5d1lYSnpYM1psY25SbGVEb2dVbkFzQ2lBZ0lDQnViM0p0WVd4ZmRtVnlkR1Y0T2lCUWNDd0tJQ0FnSUc1dmNtMWhiRzFoY0Y5d1lYSnpYMlp5WVdkdFpXNTBPaUJKY0N3S0lDQWdJR05zWldGeVkyOWhkRjl1YjNKdFlXeGZabkpoWjIxbGJuUmZZbVZuYVc0NklFUndMQW9nSUNBZ1kyeGxZWEpqYjJGMFgyNXZjbTFoYkY5bWNtRm5iV1Z1ZEY5dFlYQnpPaUJHY0N3S0lDQWdJR05zWldGeVkyOWhkRjl3WVhKelgyWnlZV2R0Wlc1ME9pQk9jQ3dLSUNBZ0lHOTFkSEIxZEY5bWNtRm5iV1Z1ZERvZ1FuQXNDaUFnSUNCd1lXTnJhVzVuT2lCNmNDd0tJQ0FnSUhCeVpXMTFiSFJwY0d4cFpXUmZZV3h3YUdGZlpuSmhaMjFsYm5RNklGVndMQW9nSUNBZ2NISnZhbVZqZEY5MlpYSjBaWGc2SUU5d0xBb2dJQ0FnWkdsMGFHVnlhVzVuWDJaeVlXZHRaVzUwT2lCSWNDd0tJQ0FnSUdScGRHaGxjbWx1WjE5d1lYSnpYMlp5WVdkdFpXNTBPaUJyY0N3S0lDQWdJSEp2ZFdkb2JtVnpjMjFoY0Y5bWNtRm5iV1Z1ZERvZ1IzQXNDaUFnSUNCeWIzVm5hRzVsYzNOdFlYQmZjR0Z5YzE5bWNtRm5iV1Z1ZERvZ1ZuQXNDaUFnSUNCemFHRmtiM2R0WVhCZmNHRnljMTltY21GbmJXVnVkRG9nVjNBc0NpQWdJQ0J6YUdGa2IzZHRZWEJmY0dGeWMxOTJaWEowWlhnNklIRndMQW9nSUNBZ2MyaGhaRzkzYldGd1gzWmxjblJsZURvZ1dIQXNDaUFnSUNCemFHRmtiM2R0WVhOclgzQmhjbk5mWm5KaFoyMWxiblE2SUVwd0xBb2dJQ0FnYzJ0cGJtSmhjMlZmZG1WeWRHVjRPaUJaY0N3S0lDQWdJSE5yYVc1dWFXNW5YM0JoY25OZmRtVnlkR1Y0T2lCYWNDd0tJQ0FnSUhOcmFXNXVhVzVuWDNabGNuUmxlRG9nSkhBc0NpQWdJQ0J6YTJsdWJtOXliV0ZzWDNabGNuUmxlRG9nYW5Bc0NpQWdJQ0J6Y0dWamRXeGhjbTFoY0Y5bWNtRm5iV1Z1ZERvZ1VYQXNDaUFnSUNCemNHVmpkV3hoY20xaGNGOXdZWEp6WDJaeVlXZHRaVzUwT2lCTGNDd0tJQ0FnSUhSdmJtVnRZWEJ3YVc1blgyWnlZV2R0Wlc1ME9pQmxiU3dLSUNBZ0lIUnZibVZ0WVhCd2FXNW5YM0JoY25OZlpuSmhaMjFsYm5RNklIUnRMQW9nSUNBZ2RISmhibk50YVhOemFXOXVYMlp5WVdkdFpXNTBPaUJ1YlN3S0lDQWdJSFJ5WVc1emJXbHpjMmx2Ymw5d1lYSnpYMlp5WVdkdFpXNTBPaUJwYlN3S0lDQWdJSFYyWDNCaGNuTmZabkpoWjIxbGJuUTZJSEp0TEFvZ0lDQWdkWFpmY0dGeWMxOTJaWEowWlhnNklITnRMQW9nSUNBZ2RYWmZkbVZ5ZEdWNE9pQnZiU3dLSUNBZ0lIVjJNbDl3WVhKelgyWnlZV2R0Wlc1ME9pQmhiU3dLSUNBZ0lIVjJNbDl3WVhKelgzWmxjblJsZURvZ2JHMHNDaUFnSUNCMWRqSmZkbVZ5ZEdWNE9pQmpiU3dLSUNBZ0lIZHZjbXhrY0c5elgzWmxjblJsZURvZ2FHMHNDaUFnSUNCaVlXTnJaM0p2ZFc1a1gzWmxjblE2SUhWdExBb2dJQ0FnWW1GamEyZHliM1Z1WkY5bWNtRm5PaUJrYlN3S0lDQWdJR04xWW1WZmRtVnlkRG9nWm0wc0NpQWdJQ0JqZFdKbFgyWnlZV2M2SUhCdExBb2dJQ0FnWkdWd2RHaGZkbVZ5ZERvZ2JXMHNDaUFnSUNCa1pYQjBhRjltY21Gbk9pQm5iU3dLSUNBZ0lHUnBjM1JoYm1ObFVrZENRVjkyWlhKME9pQjRiU3dLSUNBZ0lHUnBjM1JoYm1ObFVrZENRVjltY21Gbk9pQjViU3dLSUNBZ0lHVnhkV2x5WldOMFgzWmxjblE2SUhadExBb2dJQ0FnWlhGMWFYSmxZM1JmWm5KaFp6b2dYMjBzQ2lBZ0lDQnNhVzVsWkdGemFHVmtYM1psY25RNklFMXRMQW9nSUNBZ2JHbHVaV1JoYzJobFpGOW1jbUZuT2lCaWJTd0tJQ0FnSUcxbGMyaGlZWE5wWTE5MlpYSjBPaUIzYlN3S0lDQWdJRzFsYzJoaVlYTnBZMTltY21Gbk9pQlRiU3dLSUNBZ0lHMWxjMmhzWVcxaVpYSjBYM1psY25RNklGUnRMQW9nSUNBZ2JXVnphR3hoYldKbGNuUmZabkpoWnpvZ1JXMHNDaUFnSUNCdFpYTm9iV0YwWTJGd1gzWmxjblE2SUVGdExBb2dJQ0FnYldWemFHMWhkR05oY0Y5bWNtRm5PaUJEYlN3S0lDQWdJRzFsYzJodWIzSnRZV3hmZG1WeWREb2dURzBzQ2lBZ0lDQnRaWE5vYm05eWJXRnNYMlp5WVdjNklGSnRMQW9nSUNBZ2JXVnphSEJvYjI1blgzWmxjblE2SUZCdExBb2dJQ0FnYldWemFIQm9iMjVuWDJaeVlXYzZJRWx0TEFvZ0lDQWdiV1Z6YUhCb2VYTnBZMkZzWDNabGNuUTZJRVJ0TEFvZ0lDQWdiV1Z6YUhCb2VYTnBZMkZzWDJaeVlXYzZJRVp0TEFvZ0lDQWdiV1Z6YUhSdmIyNWZkbVZ5ZERvZ1RtMHNDaUFnSUNCdFpYTm9kRzl2Ymw5bWNtRm5PaUJDYlN3S0lDQWdJSEJ2YVc1MGMxOTJaWEowT2lCNmJTd0tJQ0FnSUhCdmFXNTBjMTltY21Gbk9pQlZiU3dLSUNBZ0lITm9ZV1J2ZDE5MlpYSjBPaUJQYlN3S0lDQWdJSE5vWVdSdmQxOW1jbUZuT2lCSWJTd0tJQ0FnSUhOd2NtbDBaVjkyWlhKME9pQnJiU3dLSUNBZ0lITndjbWwwWlY5bWNtRm5PaUJIYlFwOUxDQnBaU0E5SUhzS0lDQWdJR052YlcxdmJqb2dld29nSUNBZ0lDQWdJR1JwWm1aMWMyVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d4TmpjM056SXhOU2tLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUc5d1lXTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJRzFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2RYWlVjbUZ1YzJadmNtMDZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QnNkQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZFhZeVZISmhibk5tYjNKdE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1WlhjZ2JIUUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR0ZzY0doaFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JoYkhCb1lWUmxjM1E2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYzNCbFkzVnNZWEp0WVhBNklIc0tJQ0FnSUNBZ0lDQnpjR1ZqZFd4aGNrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCbGJuWnRZWEE2SUhzS0lDQWdJQ0FnSUNCbGJuWk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdac2FYQkZiblpOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJQzB4Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCeVpXWnNaV04wYVhacGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHbHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01TNDFDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J5WldaeVlXTjBhVzl1VW1GMGFXODZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUM0NU9Bb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JoYjIxaGNEb2dld29nSUNBZ0lDQWdJR0Z2VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiMDFoY0VsdWRHVnVjMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCc2FXZG9kRzFoY0RvZ2V3b2dJQ0FnSUNBZ0lHeHBaMmgwVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQmxiV2x6YzJsMlpXMWhjRG9nZXdvZ0lDQWdJQ0FnSUdWdGFYTnphWFpsVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJR0oxYlhCdFlYQTZJSHNLSUNBZ0lDQWdJQ0JpZFcxd1RXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JpZFcxd1UyTmhiR1U2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYm05eWJXRnNiV0Z3T2lCN0NpQWdJQ0FnSUNBZ2JtOXliV0ZzVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnViM0p0WVd4VFkyRnNaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJRmdvTVN3Z01Ta0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnWkdsemNHeGhZMlZ0Wlc1MGJXRndPaUI3Q2lBZ0lDQWdJQ0FnWkdsemNHeGhZMlZ0Wlc1MFRXRndPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JrYVhOd2JHRmpaVzFsYm5SVFkyRnNaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdaR2x6Y0d4aFkyVnRaVzUwUW1saGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTUFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnliM1ZuYUc1bGMzTnRZWEE2SUhzS0lDQWdJQ0FnSUNCeWIzVm5hRzVsYzNOTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYldWMFlXeHVaWE56YldGd09pQjdDaUFnSUNBZ0lDQWdiV1YwWVd4dVpYTnpUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHZHlZV1JwWlc1MGJXRndPaUI3Q2lBZ0lDQWdJQ0FnWjNKaFpHbGxiblJOWVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdabTluT2lCN0NpQWdJQ0FnSUNBZ1ptOW5SR1Z1YzJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTWpWbExUVUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR1p2WjA1bFlYSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHWnZaMFpoY2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNbVV6Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCbWIyZERiMnh2Y2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtERTJOemMzTWpFMUtRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JzYVdkb2RITTZJSHNLSUNBZ0lDQWdJQ0JoYldKcFpXNTBUR2xuYUhSRGIyeHZjam9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJR3hwWjJoMFVISnZZbVU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjVoYkV4cFoyaDBjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMHNDaUFnSUNBZ0lDQWdJQ0FnSUhCeWIzQmxjblJwWlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNqb2dlMzBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdaR2x5WldOMGFXOXVZV3hNYVdkb2RGTm9ZV1J2ZDNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZENhV0Z6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1VtRmthWFZ6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDAxaGNGTnBlbVU2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYUnlhWGc2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklGdGRDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6Y0c5MFRHbG5hSFJ6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISnZjR1Z5ZEdsbGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdseVpXTjBhVzl1T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjM1JoYm1ObE9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym1WRGIzTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0dWdWRXMWljbUZEYjNNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZqWVhrNklIdDlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITndiM1JNYVdkb2RGTm9ZV1J2ZDNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkTEFvZ0lDQWdJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZENhV0Z6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1VtRmthWFZ6T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDAxaGNGTnBlbVU2SUh0OUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhOd2IzUlRhR0ZrYjNkTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZENpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpjRzkwVTJoaFpHOTNUV0YwY21sNE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NHOXBiblJNYVdkb2RITTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZTMwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IzTnBkR2x2YmpvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV05oZVRvZ2UzMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmthWE4wWVc1alpUb2dlMzBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjRzlwYm5STWFXZG9kRk5vWVdSdmQzTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUZ0ZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBhV1Z6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RDYVdGek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTZJSHQ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNVbUZrYVhWek9pQjdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRk5wZW1VNklIdDlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhoWkc5M1EyRnRaWEpoVG1WaGNqb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YUdGa2IzZERZVzFsY21GR1lYSTZJSHQ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSEJ2YVc1MFUyaGhaRzkzVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJiWFFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2NHOXBiblJUYUdGa2IzZE5ZWFJ5YVhnNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRnRkQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCb1pXMXBjM0JvWlhKbFRHbG5hSFJ6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQmJYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISnZjR1Z5ZEdsbGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x5WldOMGFXOXVPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOcmVVTnZiRzl5T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZHliM1Z1WkVOdmJHOXlPaUI3ZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J5WldOMFFYSmxZVXhwWjJoMGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nVzEwc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5YjNCbGNuUnBaWE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUI3ZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmMybDBhVzl1T2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ2UzMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2JIUmpYekU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUd4MFkxOHlPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdWRXeHNDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhCdmFXNTBjem9nZXdvZ0lDQWdJQ0FnSUdScFptWjFjMlU2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJoWlNneE5qYzNOekl4TlNrS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHOXdZV05wZEhrNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhOcGVtVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmpZV3hsT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J0WVhBNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHRnNjR2hoVFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiSEJvWVZSbGMzUTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIVjJWSEpoYm5ObWIzSnRPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2diSFFLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MzQnlhWFJsT2lCN0NpQWdJQ0FnSUNBZ1pHbG1ablZ6WlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtERTJOemMzTWpFMUtRb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdiM0JoWTJsMGVUb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1kyVnVkR1Z5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnV0NndU5Td2dMalVwQ2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCeWIzUmhkR2x2YmpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dNQW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYldGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQmhiSEJvWVUxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdZV3h3YUdGVVpYTjBPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjFkbFJ5WVc1elptOXliVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJR3gwQ2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5TENCeGRDQTlJSHNLSUNBZ0lHSmhjMmxqT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1emNHVmpkV3hoY20xaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpXNTJiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVoYjIxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJHbG5hSFJ0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1adlp3b2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXViV1Z6YUdKaGMybGpYM1psY25Rc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUVabExtMWxjMmhpWVhOcFkxOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ2JHRnRZbVZ5ZERvZ2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjVkQ2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbU52YlcxdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWMzQmxZM1ZzWVhKdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtVnVkbTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1WVc5dFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExteHBaMmgwYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bGJXbHpjMmwyWlcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVptOW5MQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXNhV2RvZEhNc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z0YVhOemFYWmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d3S1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdYU2tzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzV0WlhOb2JHRnRZbVZ5ZEY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV0WlhOb2JHRnRZbVZ5ZEY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnY0dodmJtYzZJSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZVhRb1d3b2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1amIyMXRiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbk53WldOMWJHRnliV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVsYm5adFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtRnZiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVzYVdkb2RHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaVzFwYzNOcGRtVnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbUoxYlhCdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtNXZjbTFoYkcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG14cFoyaDBjeXdLSUNBZ0lDQWdJQ0FnSUNBZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXMXBjM05wZG1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dibVYzSUdGbEtEQXBDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM0JsWTNWc1lYSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm1WM0lHRmxLREV4TVRnME9ERXBDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMmhwYm1sdVpYTnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURNd0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG0xbGMyaHdhRzl1WjE5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV0WlhOb2NHaHZibWRmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJSE4wWVc1a1lYSmtPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVsYm5adFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtRnZiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVzYVdkb2RHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaVzFwYzNOcGRtVnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbUoxYlhCdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtNXZjbTFoYkcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVpHbHpjR3hoWTJWdFpXNTBiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV5YjNWbmFHNWxjM050WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG0xbGRHRnNibVZ6YzIxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVptOW5MQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNXNhV2RvZEhNc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z0YVhOemFYWmxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d3S1FvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKdmRXZG9ibVZ6Y3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1YwWVd4dVpYTnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJuWk5ZWEJKYm5SbGJuTnBkSGs2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Rb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWFNrc0NpQWdJQ0FnSUNBZ2RtVnlkR1Y0VTJoaFpHVnlPaUJHWlM1dFpYTm9jR2g1YzJsallXeGZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWJXVnphSEJvZVhOcFkyRnNYMlp5WVdjS0lDQWdJSDBzQ2lBZ0lDQjBiMjl1T2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1aGIyMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXViR2xuYUhSdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdsbExtVnRhWE56YVhabGJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCcFpTNWlkVzF3YldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1dWIzSnRZV3h0WVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1ScGMzQnNZV05sYldWdWRHMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaM0poWkdsbGJuUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVp2Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdhV1V1YkdsbmFIUnpMQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJXbHpjMmwyWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01Da0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWJXVnphSFJ2YjI1ZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YldWemFIUnZiMjVmWm5KaFp3b2dJQ0FnZlN3S0lDQWdJRzFoZEdOaGNEb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZblZ0Y0cxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJtOXliV0ZzYldGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1a2FYTndiR0ZqWlcxbGJuUnRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVp2Wnl3S0lDQWdJQ0FnSUNBZ0lDQWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWTJGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YldWemFHMWhkR05oY0Y5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV0WlhOb2JXRjBZMkZ3WDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0J3YjJsdWRITTZJSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZVhRb1d3b2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1d2IybHVkSE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVp2WndvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdWNHOXBiblJ6WDNabGNuUXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklFWmxMbkJ2YVc1MGMxOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ1pHRnphR1ZrT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1bWIyY3NDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOallXeGxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1lYTm9VMmw2WlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRzkwWVd4VGFYcGxPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURJS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRjBwTEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1YkdsdVpXUmhjMmhsWkY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzVzYVc1bFpHRnphR1ZrWDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0JrWlhCMGFEb2dld29nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI1ZENoYkNpQWdJQ0FnSUNBZ0lDQWdJR2xsTG1OdmJXMXZiaXdLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVaR2x6Y0d4aFkyVnRaVzUwYldGd0NpQWdJQ0FnSUNBZ1hTa3NDaUFnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNWtaWEIwYUY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzVrWlhCMGFGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ2JtOXliV0ZzT2lCN0NpQWdJQ0FnSUNBZ2RXNXBabTl5YlhNNklIbDBLRnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXVXVZMjl0Ylc5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0JwWlM1aWRXMXdiV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzV1YjNKdFlXeHRZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbGxMbVJwYzNCc1lXTmxiV1Z1ZEcxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNCaFkybDBlVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBeENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JkS1N3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJRVpsTG0xbGMyaHViM0p0WVd4ZmRtVnlkQ3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2dSbVV1YldWemFHNXZjbTFoYkY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnYzNCeWFYUmxPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWMzQnlhWFJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjS0lDQWdJQ0FnSUNCZEtTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUVabExuTndjbWwwWlY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzV6Y0hKcGRHVmZabkpoWndvZ0lDQWdmU3dLSUNBZ0lHSmhZMnRuY205MWJtUTZJSHNLSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQjFkbFJ5WVc1elptOXliVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCc2RBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBNa1E2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dSbVV1WW1GamEyZHliM1Z1WkY5MlpYSjBMQW9nSUNBZ0lDQWdJR1p5WVdkdFpXNTBVMmhoWkdWeU9pQkdaUzVpWVdOclozSnZkVzVrWDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0JqZFdKbE9pQjdDaUFnSUNBZ0lDQWdkVzVwWm05eWJYTTZJSGwwS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1V1Wlc1MmJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklERUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUYwcExBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nUm1VdVkzVmlaVjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNWpkV0psWDJaeVlXY0tJQ0FnSUgwc0NpQWdJQ0JsY1hWcGNtVmpkRG9nZXdvZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJSFJGY1hWcGNtVmpkRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzVsY1hWcGNtVmpkRjkyWlhKMExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCR1pTNWxjWFZwY21WamRGOW1jbUZuQ2lBZ0lDQjlMQW9nSUNBZ1pHbHpkR0Z1WTJWU1IwSkJPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdVkyOXRiVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVrYVhOd2JHRmpaVzFsYm5SdFlYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbFptVnlaVzVqWlZCdmMybDBhVzl1T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNWxkeUJOQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WaGNrUnBjM1JoYm1ObE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJREVLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtWVhKRWFYTjBZVzVqWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXhaVE1LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lGMHBMQW9nSUNBZ0lDQWdJSFpsY25SbGVGTm9ZV1JsY2pvZ1JtVXVaR2x6ZEdGdVkyVlNSMEpCWDNabGNuUXNDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklFWmxMbVJwYzNSaGJtTmxVa2RDUVY5bWNtRm5DaUFnSUNCOUxBb2dJQ0FnYzJoaFpHOTNPaUI3Q2lBZ0lDQWdJQ0FnZFc1cFptOXliWE02SUhsMEtGc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdVdWJHbG5hSFJ6TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBaUzVtYjJjc0NpQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCaFpTZ3dLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl3WVdOcGRIazZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nTVFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdYU2tzQ2lBZ0lDQWdJQ0FnZG1WeWRHVjRVMmhoWkdWeU9pQkdaUzV6YUdGa2IzZGZkbVZ5ZEN3S0lDQWdJQ0FnSUNCbWNtRm5iV1Z1ZEZOb1lXUmxjam9nUm1VdWMyaGhaRzkzWDJaeVlXY0tJQ0FnSUgwS2ZUc0tjWFF1Y0doNWMybGpZV3dnUFNCN0NpQWdJQ0IxYm1sbWIzSnRjem9nZVhRb1d3b2dJQ0FnSUNBZ0lIRjBMbk4wWVc1a1lYSmtMblZ1YVdadmNtMXpMQW9nSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpqYjJGME9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY21OdllYUk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemN6b2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nYm5Wc2JBb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmpiR1ZoY21OdllYUk9iM0p0WVd4VFkyRnNaVG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzVsZHlCWUtERXNJREVwQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUdOc1pXRnlZMjloZEU1dmNtMWhiRTFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhsWlc0NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITm9aV1Z1UTI5c2IzSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01Da0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhsWlc1RGIyeHZjazFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhsWlc1U2IzVm5hRzVsYzNNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITm9aV1Z1VW05MVoyaHVaWE56VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyMXBjM05wYjI0NklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBd0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6YldsemMybHZiazFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5OdGFYTnphVzl1VTJGdGNHeGxjbE5wZW1VNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCdVpYY2dXQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwY21GdWMyMXBjM05wYjI1VFlXMXdiR1Z5VFdGd09pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JuVnNiQW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsamEyNWxjM002SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUF3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FXTnJibVZ6YzAxaGNEb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHNTFiR3dLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhSMFpXNTFZWFJwYjI1RWFYTjBZVzVqWlRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBaVzUxWVhScGIyNURiMnh2Y2pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1bGR5QmhaU2d3S1FvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCemNHVmpkV3hoY2tsdWRHVnVjMmwwZVRvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURBS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVkV3hzQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5UTI5c2IzSTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQnVaWGNnWVdVb01Td2dNU3dnTVNrS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MzQmxZM1ZzWVhKRGIyeHZjazFoY0RvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUc1MWJHd0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJRjBwTEFvZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCR1pTNXRaWE5vY0doNWMybGpZV3hmZG1WeWRDd0tJQ0FnSUdaeVlXZHRaVzUwVTJoaFpHVnlPaUJHWlM1dFpYTm9jR2g1YzJsallXeGZabkpoWndwOU93cG1kVzVqZEdsdmJpQldiU2h6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCc1pYUWdjaUE5SUc1bGR5QmhaU2d3S1N3Z2J5QTlJREFzSUdFc0lHd3NJR01nUFNCdWRXeHNMQ0JvSUQwZ01Dd2dkU0E5SUc1MWJHdzdDaUFnSUNCbWRXNWpkR2x2YmlCa0tHMHNJSGdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUNFeExDQm5JRDBnZUM1cGMxTmpaVzVsSUQwOVBTQWhNQ0EvSUhndVltRmphMmR5YjNWdVpDQTZJRzUxYkd3N0NpQWdJQ0FnSUNBZ1p5QW1KaUJuTG1selZHVjRkSFZ5WlNBbUppQW9aeUE5SUdVdVoyVjBLR2NwS1RzS0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUhNdWVISXNJRjhnUFNCd0xtZGxkRk5sYzNOcGIyNGdKaVlnY0M1blpYUlRaWE56YVc5dUtDazdDaUFnSUNBZ0lDQWdYeUFtSmlCZkxtVnVkbWx5YjI1dFpXNTBRbXhsYm1STmIyUmxJRDA5UFNBaVlXUmthWFJwZG1VaUlDWW1JQ2huSUQwZ2JuVnNiQ2tzSUdjZ1BUMDlJRzUxYkd3Z1B5Qm1LSElzSUc4cElEb2daeUFtSmlCbkxtbHpRMjlzYjNJZ0ppWWdLR1lvWnl3Z01Ta3NJSFlnUFNBaE1Da3NJQ2h6TG1GMWRHOURiR1ZoY2lCOGZDQjJLU0FtSmlCekxtTnNaV0Z5S0hNdVlYVjBiME5zWldGeVEyOXNiM0lzSUhNdVlYVjBiME5zWldGeVJHVndkR2dzSUhNdVlYVjBiME5zWldGeVUzUmxibU5wYkNrc0lHY2dKaVlnS0djdWFYTkRkV0psVkdWNGRIVnlaU0I4ZkNCbkxtMWhjSEJwYm1jZ1BUMDlJRkJ5S1NBL0lDaHNJRDA5UFNCMmIybGtJREFnSmlZZ0tHd2dQU0J1WlhjZ2MzUW9ibVYzSUhkdUtERXNJREVzSURFcExDQnVaWGNnYzI0b2V3b2dJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQWlRbUZqYTJkeWIzVnVaRU4xWW1WTllYUmxjbWxoYkNJc0NpQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUJTYVNoeGRDNWpkV0psTG5WdWFXWnZjbTF6S1N3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCeGRDNWpkV0psTG5abGNuUmxlRk5vWVdSbGNpd0tJQ0FnSUNBZ0lDQWdJQ0FnWm5KaFoyMWxiblJUYUdGa1pYSTZJSEYwTG1OMVltVXVabkpoWjIxbGJuUlRhR0ZrWlhJc0NpQWdJQ0FnSUNBZ0lDQWdJSE5wWkdVNklHbDBMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRlJsYzNRNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRmR5YVhSbE9pQWhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUFoTVFvZ0lDQWdJQ0FnSUgwcEtTd2diQzVuWlc5dFpYUnllUzVrWld4bGRHVkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXBMQ0JzTG1kbGIyMWxkSEo1TG1SbGJHVjBaVUYwZEhKcFluVjBaU2dpZFhZaUtTd2diQzV2YmtKbFptOXlaVkpsYm1SbGNpQTlJR1oxYm1OMGFXOXVLSGtzSUdJc0lFRXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV0WVhSeWFYaFhiM0pzWkM1amIzQjVVRzl6YVhScGIyNG9RUzV0WVhSeWFYaFhiM0pzWkNrN0NpQWdJQ0FnSUNBZ2ZTd2dUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblI1S0d3dWJXRjBaWEpwWVd3c0lDSmxiblpOWVhBaUxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1MWJtbG1iM0p0Y3k1bGJuWk5ZWEF1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUtTd2diaTUxY0dSaGRHVW9iQ2twTENCc0xtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xekxtVnVkazFoY0M1MllXeDFaU0E5SUdjc0lHd3ViV0YwWlhKcFlXd3VkVzVwWm05eWJYTXVabXhwY0VWdWRrMWhjQzUyWVd4MVpTQTlJR2N1YVhORGRXSmxWR1Y0ZEhWeVpTQW1KaUJuTG1selVtVnVaR1Z5VkdGeVoyVjBWR1Y0ZEhWeVpTQTlQVDBnSVRFZ1B5QXRNU0E2SURFc0lDaGpJQ0U5UFNCbklIeDhJR2dnSVQwOUlHY3VkbVZ5YzJsdmJpQjhmQ0IxSUNFOVBTQnpMblJ2Ym1WTllYQndhVzVuS1NBbUppQW9iQzV0WVhSbGNtbGhiQzV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0JqSUQwZ1p5d2dhQ0E5SUdjdWRtVnljMmx2Yml3Z2RTQTlJSE11ZEc5dVpVMWhjSEJwYm1jcExDQnRMblZ1YzJocFpuUW9iQ3dnYkM1blpXOXRaWFJ5ZVN3Z2JDNXRZWFJsY21saGJDd2dNQ3dnTUN3Z2JuVnNiQ2twSURvZ1p5QW1KaUJuTG1selZHVjRkSFZ5WlNBbUppQW9ZU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGhJRDBnYm1WM0lITjBLRzVsZHlCUWFTZ3lMQ0F5S1N3Z2JtVjNJSE51S0hzS0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ0lrSmhZMnRuY205MWJtUk5ZWFJsY21saGJDSXNDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6T2lCU2FTaHhkQzVpWVdOclozSnZkVzVrTG5WdWFXWnZjbTF6S1N3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFUyaGhaR1Z5T2lCeGRDNWlZV05yWjNKdmRXNWtMblpsY25SbGVGTm9ZV1JsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklIRjBMbUpoWTJ0bmNtOTFibVF1Wm5KaFoyMWxiblJUYUdGa1pYSXNDaUFnSUNBZ0lDQWdJQ0FnSUhOcFpHVTZJRUZwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZSbGMzUTZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZkeWFYUmxPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdabTluT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBLU3dnWVM1blpXOXRaWFJ5ZVM1a1pXeGxkR1ZCZEhSeWFXSjFkR1VvSW01dmNtMWhiQ0lwTENCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRIa29ZUzV0WVhSbGNtbGhiQ3dnSW0xaGNDSXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuVnVhV1p2Y20xekxuUXlSQzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwcExDQnVMblZ3WkdGMFpTaGhLU2tzSUdFdWJXRjBaWEpwWVd3dWRXNXBabTl5YlhNdWRESkVMblpoYkhWbElEMGdaeXdnWnk1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwOVBTQWhNQ0FtSmlCbkxuVndaR0YwWlUxaGRISnBlQ2dwTENCaExtMWhkR1Z5YVdGc0xuVnVhV1p2Y20xekxuVjJWSEpoYm5ObWIzSnRMblpoYkhWbExtTnZjSGtvWnk1dFlYUnlhWGdwTENBb1l5QWhQVDBnWnlCOGZDQm9JQ0U5UFNCbkxuWmxjbk5wYjI0Z2ZId2dkU0FoUFQwZ2N5NTBiMjVsVFdGd2NHbHVaeWtnSmlZZ0tHRXViV0YwWlhKcFlXd3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2dZeUE5SUdjc0lHZ2dQU0JuTG5abGNuTnBiMjRzSUhVZ1BTQnpMblJ2Ym1WTllYQndhVzVuS1N3Z2JTNTFibk5vYVdaMEtHRXNJR0V1WjJWdmJXVjBjbmtzSUdFdWJXRjBaWEpwWVd3c0lEQXNJREFzSUc1MWJHd3BLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdZb2JTd2dlQ2tnZXdvZ0lDQWdJQ0FnSUhRdVluVm1abVZ5Y3k1amIyeHZjaTV6WlhSRGJHVmhjaWh0TG5Jc0lHMHVaeXdnYlM1aUxDQjRMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1oyVjBRMnhsWVhKRGIyeHZjam9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnlPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWMFEyeGxZWEpEYjJ4dmNqb2dablZ1WTNScGIyNG9iU3dnZUNBOUlERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NpNXpaWFFvYlNrc0lHOGdQU0I0TENCbUtISXNJRzhwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ1oyVjBRMnhsWVhKQmJIQm9ZVG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnZPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWMFEyeGxZWEpCYkhCb1lUb2dablZ1WTNScGIyNG9iU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZJRDBnYlN3Z1ppaHlMQ0J2S1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lISmxibVJsY2pvZ1pBb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQlhiU2h6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJSE11WjJWMFVHRnlZVzFsZEdWeUtETTBPVEl4S1N3Z2NpQTlJRzR1YVhOWFpXSkhURElnUHlCdWRXeHNJRG9nWlM1blpYUW9JazlGVTE5MlpYSjBaWGhmWVhKeVlYbGZiMkpxWldOMElpa3NJRzhnUFNCdUxtbHpWMlZpUjB3eUlIeDhJSElnSVQwOUlHNTFiR3dzSUdFZ1BTQjdmU3dnYkNBOUlIZ29iblZzYkNrc0lHTWdQU0JzT3dvZ0lDQWdablZ1WTNScGIyNGdhQ2hGTENCRUxDQlZMQ0JHTENCUEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc1bElEMGdJVEU3Q2lBZ0lDQWdJQ0FnYVdZZ0tHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR05sSUQwZ2JTaEdMQ0JWTENCRUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWXlBaFBUMGdZMlVnSmlZZ0tHTWdQU0JqWlN3Z1pDaGpMbTlpYW1WamRDa3BMQ0J1WlNBOUlIWW9SaXdnVHlrc0lHNWxJQ1ltSUdjb1Jpd2dUeWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR05sTVNBOUlFUXVkMmx5WldaeVlXMWxJRDA5UFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnS0dNdVoyVnZiV1YwY25rZ0lUMDlJRVl1YVdRZ2ZId2dZeTV3Y205bmNtRnRJQ0U5UFNCVkxtbGtJSHg4SUdNdWQybHlaV1p5WVcxbElDRTlQU0JqWlRFcElDWW1JQ2hqTG1kbGIyMWxkSEo1SUQwZ1JpNXBaQ3dnWXk1d2NtOW5jbUZ0SUQwZ1ZTNXBaQ3dnWXk1M2FYSmxabkpoYldVZ1BTQmpaVEVzSUc1bElEMGdJVEFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCRkxtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBOVBUMGdJVEFnSmlZZ0tHNWxJRDBnSVRBcExDQlBJQ0U5UFNCdWRXeHNJQ1ltSUhRdWRYQmtZWFJsS0U4c0lETTBPVFl6S1N3Z2JtVWdKaVlnS0V3b1JTd2dSQ3dnVlN3Z1Jpa3NJRThnSVQwOUlHNTFiR3dnSmlZZ2N5NWlhVzVrUW5WbVptVnlLRE0wT1RZekxDQjBMbWRsZENoUEtTNWlkV1ptWlhJcEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWFYTlhaV0pIVERJZ1B5QnpMbU55WldGMFpWWmxjblJsZUVGeWNtRjVLQ2tnT2lCeUxtTnlaV0YwWlZabGNuUmxlRUZ5Y21GNVQwVlRLQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCa0tFVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaTVwYzFkbFlrZE1NaUEvSUhNdVltbHVaRlpsY25SbGVFRnljbUY1S0VVcElEb2djaTVpYVc1a1ZtVnlkR1Y0UVhKeVlYbFBSVk1vUlNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm1LRVVwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmk1cGMxZGxZa2RNTWlBL0lITXVaR1ZzWlhSbFZtVnlkR1Y0UVhKeVlYa29SU2tnT2lCeUxtUmxiR1YwWlZabGNuUmxlRUZ5Y21GNVQwVlRLRVVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JTaEZMQ0JFTENCVktTQjdDaUFnSUNBZ0lDQWdiR1YwSUVZZ1BTQlZMbmRwY21WbWNtRnRaU0E5UFQwZ0lUQXNJRThnUFNCaFcwVXVhV1JkT3dvZ0lDQWdJQ0FnSUU4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvVHlBOUlIdDlMQ0JoVzBVdWFXUmRJRDBnVHlrN0NpQWdJQ0FnSUNBZ2JHVjBJRzVsSUQwZ1QxdEVMbWxrWFRzS0lDQWdJQ0FnSUNCdVpTQTlQVDBnZG05cFpDQXdJQ1ltSUNodVpTQTlJSHQ5TENCUFcwUXVhV1JkSUQwZ2JtVXBPd29nSUNBZ0lDQWdJR3hsZENCalpTQTlJRzVsVzBaZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCalpTQTlQVDBnZG05cFpDQXdJQ1ltSUNoalpTQTlJSGdvZFNncEtTd2dibVZiUmwwZ1BTQmpaU2tzSUdObE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdlQ2hGS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVFnUFNCYlhTd2dWU0E5SUZ0ZExDQkdJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCUElEMGdNRHNnVHlBOElHazdJRThyS3lsRVcwOWRJRDBnTUN3Z1ZWdFBYU0E5SURBc0lFWmJUMTBnUFNBd093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJR2RsYjIxbGRISjVPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205bmNtRnRPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0IzYVhKbFpuSmhiV1U2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhkQmRIUnlhV0oxZEdWek9pQkVMQW9nSUNBZ0lDQWdJQ0FnSUNCbGJtRmliR1ZrUVhSMGNtbGlkWFJsY3pvZ1ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVhSMGNtbGlkWFJsUkdsMmFYTnZjbk02SUVZc0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2dSU3dLSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjbWxpZFhSbGN6b2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0T2lCdWRXeHNDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhZb1JTd2dSQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlZJRDBnWXk1aGRIUnlhV0oxZEdWekxDQkdJRDBnUlM1aGRIUnlhV0oxZEdWekxDQlBJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc1bElHbHVJRVlwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWTJVZ1BTQlZXMjVsWFN3Z1ZpQTlJRVpiYm1WZE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyVWdQVDA5SUhadmFXUWdNQ0I4ZkNCalpTNWhkSFJ5YVdKMWRHVWdJVDA5SUZZZ2ZId2dZMlV1WkdGMFlTQWhQVDBnVmk1a1lYUmhLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lFOHJLenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR011WVhSMGNtbGlkWFJsYzA1MWJTQWhQVDBnVHlCOGZDQmpMbWx1WkdWNElDRTlQU0JFT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1p5aEZMQ0JFS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlVnUFNCN2ZTd2dSaUE5SUVVdVlYUjBjbWxpZFhSbGN5d2dUeUE5SURBN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdVpTQnBiaUJHS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdObElEMGdSbHR1WlYwc0lGWWdQU0I3ZlRzS0lDQWdJQ0FnSUNBZ0lDQWdWaTVoZEhSeWFXSjFkR1VnUFNCalpTd2dZMlV1WkdGMFlTQW1KaUFvVmk1a1lYUmhJRDBnWTJVdVpHRjBZU2tzSUZWYmJtVmRJRDBnVml3Z1R5c3JPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JqTG1GMGRISnBZblYwWlhNZ1BTQlZMQ0JqTG1GMGRISnBZblYwWlhOT2RXMGdQU0JQTENCakxtbHVaR1Y0SUQwZ1JEc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSEFvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCakxtNWxkMEYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JFSUQwZ01Dd2dWU0E5SUVVdWJHVnVaM1JvT3lCRUlEd2dWVHNnUkNzcktVVmJSRjBnUFNBd093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdYeWhGS1NCN0NpQWdJQ0FnSUNBZ2VTaEZMQ0F3S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIa29SU3dnUkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JWSUQwZ1l5NXVaWGRCZEhSeWFXSjFkR1Z6TENCR0lEMGdZeTVsYm1GaWJHVmtRWFIwY21saWRYUmxjeXdnVHlBOUlHTXVZWFIwY21saWRYUmxSR2wyYVhOdmNuTTdDaUFnSUNBZ0lDQWdWVnRGWFNBOUlERXNJRVpiUlYwZ1BUMDlJREFnSmlZZ0tITXVaVzVoWW14bFZtVnlkR1Y0UVhSMGNtbGlRWEp5WVhrb1JTa3NJRVpiUlYwZ1BTQXhLU3dnVDF0RlhTQWhQVDBnUkNBbUppQW9LRzR1YVhOWFpXSkhURElnUHlCeklEb2daUzVuWlhRb0lrRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1pS1NsYmJpNXBjMWRsWWtkTU1pQS9JQ0oyWlhKMFpYaEJkSFJ5YVdKRWFYWnBjMjl5SWlBNklDSjJaWEowWlhoQmRIUnlhV0pFYVhacGMyOXlRVTVIVEVVaVhTaEZMQ0JFS1N3Z1QxdEZYU0E5SUVRcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdSU0E5SUdNdWJtVjNRWFIwY21saWRYUmxjeXdnUkNBOUlHTXVaVzVoWW14bFpFRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQlZJRDBnTUN3Z1JpQTlJRVF1YkdWdVozUm9PeUJWSUR3Z1Jqc2dWU3NyS1VSYlZWMGdJVDA5SUVWYlZWMGdKaVlnS0hNdVpHbHpZV0pzWlZabGNuUmxlRUYwZEhKcFlrRnljbUY1S0ZVcExDQkVXMVZkSUQwZ01DazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJCS0VVc0lFUXNJRlVzSUVZc0lFOHNJRzVsS1NCN0NpQWdJQ0FnSUNBZ2JpNXBjMWRsWWtkTU1pQTlQVDBnSVRBZ0ppWWdLRlVnUFQwOUlEVXhNalFnZkh3Z1ZTQTlQVDBnTlRFeU5Ta2dQeUJ6TG5abGNuUmxlRUYwZEhKcFlrbFFiMmx1ZEdWeUtFVXNJRVFzSUZVc0lFOHNJRzVsS1NBNklITXVkbVZ5ZEdWNFFYUjBjbWxpVUc5cGJuUmxjaWhGTENCRUxDQlZMQ0JHTENCUExDQnVaU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTUtFVXNJRVFzSUZVc0lFWXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2JpNXBjMWRsWWtkTU1pQTlQVDBnSVRFZ0ppWWdLRVV1YVhOSmJuTjBZVzVqWldSTlpYTm9JSHg4SUVZdWFYTkpibk4wWVc1alpXUkNkV1ptWlhKSFpXOXRaWFJ5ZVNrZ0ppWWdaUzVuWlhRb0lrRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1pS1NBOVBUMGdiblZzYkNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhBb0tUc0tJQ0FnSUNBZ0lDQnNaWFFnVHlBOUlFWXVZWFIwY21saWRYUmxjeXdnYm1VZ1BTQlZMbWRsZEVGMGRISnBZblYwWlhNb0tTd2dZMlVnUFNCRUxtUmxabUYxYkhSQmRIUnlhV0oxZEdWV1lXeDFaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JXSUdsdUlHNWxLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCdVpWdFdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRmN1Ykc5allYUnBiMjRnUGowZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobElEMGdUMXRXWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaG9aU0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaFdJRDA5UFNBaWFXNXpkR0Z1WTJWTllYUnlhWGdpSUNZbUlFVXVhVzV6ZEdGdVkyVk5ZWFJ5YVhnZ0ppWWdLR2hsSUQwZ1JTNXBibk4wWVc1alpVMWhkSEpwZUNrc0lGWWdQVDA5SUNKcGJuTjBZVzVqWlVOdmJHOXlJaUFtSmlCRkxtbHVjM1JoYm1ObFEyOXNiM0lnSmlZZ0tHaGxJRDBnUlM1cGJuTjBZVzVqWlVOdmJHOXlLU2tzSUdobElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiR1VnUFNCb1pTNXViM0p0WVd4cGVtVmtMQ0JtWlNBOUlHaGxMbWwwWlcxVGFYcGxMQ0JDWlNBOUlIUXVaMlYwS0dobEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1FtVWdQVDA5SUhadmFXUWdNQ2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmtnUFNCQ1pTNWlkV1ptWlhJc0lFTmxJRDBnUW1VdWRIbHdaU3dnZVdVZ1BTQkNaUzVpZVhSbGMxQmxja1ZzWlcxbGJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHaGxMbWx6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZGxJRDBnYUdVdVpHRjBZU3dnZUdVZ1BTQm5aUzV6ZEhKcFpHVXNJRTlsSUQwZ2FHVXViMlptYzJWME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9aMlVnSmlZZ1oyVXVhWE5KYm5OMFlXNWpaV1JKYm5SbGNteGxZWFpsWkVKMVptWmxjaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSElEMGdNRHNnUnlBOElGY3ViRzlqWVhScGIyNVRhWHBsT3lCSEt5c3BlU2hYTG14dlkyRjBhVzl1SUNzZ1J5d2daMlV1YldWemFGQmxja0YwZEhKcFluVjBaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCRkxtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBaFBUMGdJVEFnSmlZZ1JpNWZiV0Y0U1c1emRHRnVZMlZEYjNWdWRDQTlQVDBnZG05cFpDQXdJQ1ltSUNoR0xsOXRZWGhKYm5OMFlXNWpaVU52ZFc1MElEMGdaMlV1YldWemFGQmxja0YwZEhKcFluVjBaU0FxSUdkbExtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR1p2Y2loc1pYUWdSekVnUFNBd095QkhNU0E4SUZjdWJHOWpZWFJwYjI1VGFYcGxPeUJITVNzcktWOG9WeTVzYjJOaGRHbHZiaUFySUVjeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWlhVzVrUW5WbVptVnlLRE0wT1RZeUxDQlpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkhNaUE5SURBN0lFY3lJRHdnVnk1c2IyTmhkR2x2YmxOcGVtVTdJRWN5S3lzcFFTaFhMbXh2WTJGMGFXOXVJQ3NnUnpJc0lHWmxJQzhnVnk1c2IyTmhkR2x2YmxOcGVtVXNJRU5sTENCc1pTd2dlR1VnS2lCNVpTd2dLRTlsSUNzZ1ptVWdMeUJYTG14dlkyRjBhVzl1VTJsNlpTQXFJRWN5S1NBcUlIbGxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FHVXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWjJVeElEMGdNRHNnWjJVeElEd2dWeTVzYjJOaGRHbHZibE5wZW1VN0lHZGxNU3NyS1hrb1Z5NXNiMk5oZEdsdmJpQXJJR2RsTVN3Z2FHVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JGTG1selNXNXpkR0Z1WTJWa1RXVnphQ0FoUFQwZ0lUQWdKaVlnUmk1ZmJXRjRTVzV6ZEdGdVkyVkRiM1Z1ZENBOVBUMGdkbTlwWkNBd0lDWW1JQ2hHTGw5dFlYaEpibk4wWVc1alpVTnZkVzUwSUQwZ2FHVXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQXFJR2hsTG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHWnZjaWhzWlhRZ1oyVXlJRDBnTURzZ1oyVXlJRHdnVnk1c2IyTmhkR2x2YmxOcGVtVTdJR2RsTWlzcktWOG9WeTVzYjJOaGRHbHZiaUFySUdkbE1pazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbWx1WkVKMVptWmxjaWd6TkRrMk1pd2dXU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdaMlV6SUQwZ01Ec2daMlV6SUR3Z1Z5NXNiMk5oZEdsdmJsTnBlbVU3SUdkbE15c3JLVUVvVnk1c2IyTmhkR2x2YmlBcklHZGxNeXdnWm1VZ0x5QlhMbXh2WTJGMGFXOXVVMmw2WlN3Z1EyVXNJR3hsTENCbVpTQXFJSGxsTENCbVpTQXZJRmN1Ykc5allYUnBiMjVUYVhwbElDb2daMlV6SUNvZ2VXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1kyVWdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlRFZ1BTQmpaVnRXWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkdVeElDRTlQU0IyYjJsa0lEQXBJSE4zYVhSamFDaHNaVEV1YkdWdVozUm9LWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBeU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTUyWlhKMFpYaEJkSFJ5YVdJeVpuWW9WeTVzYjJOaGRHbHZiaXdnYkdVeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRE02Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxuWmxjblJsZUVGMGRISnBZak5tZGloWExteHZZMkYwYVc5dUxDQnNaVEVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ05Eb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11ZG1WeWRHVjRRWFIwY21saU5HWjJLRmN1Ykc5allYUnBiMjRzSUd4bE1TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVm1ZWFZzZERvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVkbVZ5ZEdWNFFYUjBjbWxpTVdaMktGY3ViRzlqWVhScGIyNHNJR3hsTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHSW9LVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVrb0tTQjdDaUFnSUNBZ0lDQWdVQ2dwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUlNCcGJpQmhLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVFnUFNCaFcwVmRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZVZ2FXNGdSQ2w3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JpQTlJRVJiVlYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUU4Z2FXNGdSaWxtS0VaYlQxMHViMkpxWldOMEtTd2daR1ZzWlhSbElFWmJUMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdSRnRWWFRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCa1pXeGxkR1VnWVZ0RlhUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJyS0VVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWVZ0RkxtbGtYU0E5UFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnYkdWMElFUWdQU0JoVzBVdWFXUmRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdWU0JwYmlCRUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFWWdQU0JFVzFWZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRThnYVc0Z1JpbG1LRVpiVDEwdWIySnFaV04wS1N3Z1pHVnNaWFJsSUVaYlQxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0JFVzFWZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQmtaV3hsZEdVZ1lWdEZMbWxrWFRzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFSW9SU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUkNCcGJpQmhLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRlVnUFNCaFcwUmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9WVnRGTG1sa1hTQTlQVDBnZG05cFpDQXdLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVlnUFNCVlcwVXVhV1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFOGdhVzRnUmlsbUtFWmJUMTB1YjJKcVpXTjBLU3dnWkdWc1pYUmxJRVpiVDEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQlZXMFV1YVdSZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRkFvS1NCN0NpQWdJQ0FnSUNBZ2R5Z3BMQ0JqSUNFOVBTQnNJQ1ltSUNoaklEMGdiQ3dnWkNoakxtOWlhbVZqZENrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkeWdwSUhzS0lDQWdJQ0FnSUNCc0xtZGxiMjFsZEhKNUlEMGdiblZzYkN3Z2JDNXdjbTluY21GdElEMGdiblZzYkN3Z2JDNTNhWEpsWm5KaGJXVWdQU0FoTVRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2MyVjBkWEE2SUdnc0NpQWdJQ0FnSUNBZ2NtVnpaWFE2SUZBc0NpQWdJQ0FnSUNBZ2NtVnpaWFJFWldaaGRXeDBVM1JoZEdVNklIY3NDaUFnSUNBZ0lDQWdaR2x6Y0c5elpUb2dTU3dLSUNBZ0lDQWdJQ0J5Wld4bFlYTmxVM1JoZEdWelQyWkhaVzl0WlhSeWVUb2dheXdLSUNBZ0lDQWdJQ0J5Wld4bFlYTmxVM1JoZEdWelQyWlFjbTluY21GdE9pQkNMQW9nSUNBZ0lDQWdJR2x1YVhSQmRIUnlhV0oxZEdWek9pQndMQW9nSUNBZ0lDQWdJR1Z1WVdKc1pVRjBkSEpwWW5WMFpUb2dYeXdLSUNBZ0lDQWdJQ0JrYVhOaFlteGxWVzUxYzJWa1FYUjBjbWxpZFhSbGN6b2dZZ29nSUNBZ2ZUc0tmUXBtZFc1amRHbHZiaUJ4YlNoekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUc0dWFYTlhaV0pIVERJc0lISTdDaUFnSUNCbWRXNWpkR2x2YmlCdktHTXBJSHNLSUNBZ0lDQWdJQ0J5SUQwZ1l6c0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0VvWXl3Z2FDa2dld29nSUNBZ0lDQWdJSE11WkhKaGQwRnljbUY1Y3loeUxDQmpMQ0JvS1N3Z2RDNTFjR1JoZEdVb2FDd2djaXdnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnNLR01zSUdnc0lIVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RTQTlQVDBnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQmtMQ0JtT3dvZ0lDQWdJQ0FnSUdsbUlDaHBLU0JrSUQwZ2N5d2daaUE5SUNKa2NtRjNRWEp5WVhselNXNXpkR0Z1WTJWa0lqc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaGtJRDBnWlM1blpYUW9Ja0ZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNaUtTd2daaUE5SUNKa2NtRjNRWEp5WVhselNXNXpkR0Z1WTJWa1FVNUhURVVpTENCa0lEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNUW5WbVptVnlVbVZ1WkdWeVpYSTZJSFZ6YVc1bklGUklVa1ZGTGtsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJR0oxZENCb1lYSmtkMkZ5WlNCa2IyVnpJRzV2ZENCemRYQndiM0owSUdWNGRHVnVjMmx2YmlCQlRrZE1SVjlwYm5OMFlXNWpaV1JmWVhKeVlYbHpMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHUmJabDBvY2l3Z1l5d2dhQ3dnZFNrc0lIUXVkWEJrWVhSbEtHZ3NJSElzSUhVcE93b2dJQ0FnZlFvZ0lDQWdkR2hwY3k1elpYUk5iMlJsSUQwZ2J5d2dkR2hwY3k1eVpXNWtaWElnUFNCaExDQjBhR2x6TG5KbGJtUmxja2x1YzNSaGJtTmxjeUE5SUd3N0NuMEtablZ1WTNScGIyNGdXRzBvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0N0NpQWdJQ0JtZFc1amRHbHZiaUJwS0NrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2h1SUNFOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCdU93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1oaGN5Z2lSVmhVWDNSbGVIUjFjbVZmWm1sc2RHVnlYMkZ1YVhOdmRISnZjR2xqSWlrZ1BUMDlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTUlEMGdaUzVuWlhRb0lrVllWRjkwWlhoMGRYSmxYMlpwYkhSbGNsOWhibWx6YjNSeWIzQnBZeUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnVJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9UQzVOUVZoZlZFVllWRlZTUlY5TlFWaGZRVTVKVTA5VVVrOVFXVjlGV0ZRcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCdUlEMGdNRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdianNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhJb1RDa2dld29nSUNBZ0lDQWdJR2xtSUNoTUlEMDlQU0FpYUdsbmFIQWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6TG1kbGRGTm9ZV1JsY2xCeVpXTnBjMmx2YmtadmNtMWhkQ2d6TlRZek15d2dNell6TXpncExuQnlaV05wYzJsdmJpQStJREFnSmlZZ2N5NW5aWFJUYUdGa1pYSlFjbVZqYVhOcGIyNUdiM0p0WVhRb016VTJNeklzSURNMk16TTRLUzV3Y21WamFYTnBiMjRnUGlBd0tTQnlaWFIxY200Z0ltaHBaMmh3SWpzS0lDQWdJQ0FnSUNBZ0lDQWdUQ0E5SUNKdFpXUnBkVzF3SWpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUV3Z1BUMDlJQ0p0WldScGRXMXdJaUFtSmlCekxtZGxkRk5vWVdSbGNsQnlaV05wYzJsdmJrWnZjbTFoZENnek5UWXpNeXdnTXpZek16Y3BMbkJ5WldOcGMybHZiaUErSURBZ0ppWWdjeTVuWlhSVGFHRmtaWEpRY21WamFYTnBiMjVHYjNKdFlYUW9NelUyTXpJc0lETTJNek0zS1M1d2NtVmphWE5wYjI0Z1BpQXdJRDhnSW0xbFpHbDFiWEFpSURvZ0lteHZkM0FpT3dvZ0lDQWdmUW9nSUNBZ2JHVjBJRzhnUFNCMGVYQmxiMllnVjJWaVIwd3lVbVZ1WkdWeWFXNW5RMjl1ZEdWNGRDQThJQ0oxSWlBbUppQnpJR2x1YzNSaGJtTmxiMllnVjJWaVIwd3lVbVZ1WkdWeWFXNW5RMjl1ZEdWNGRDQjhmQ0IwZVhCbGIyWWdWMlZpUjB3eVEyOXRjSFYwWlZKbGJtUmxjbWx1WjBOdmJuUmxlSFFnUENBaWRTSWdKaVlnY3lCcGJuTjBZVzVqWlc5bUlGZGxZa2RNTWtOdmJYQjFkR1ZTWlc1a1pYSnBibWREYjI1MFpYaDBMQ0JoSUQwZ2RDNXdjbVZqYVhOcGIyNGdJVDA5SUhadmFXUWdNQ0EvSUhRdWNISmxZMmx6YVc5dUlEb2dJbWhwWjJod0lpd2diQ0E5SUhJb1lTazdDaUFnSUNCc0lDRTlQU0JoSUNZbUlDaGpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklpd2dZU3dnSW01dmRDQnpkWEJ3YjNKMFpXUXNJSFZ6YVc1bklpd2diQ3dnSW1sdWMzUmxZV1F1SWlrc0lHRWdQU0JzS1RzS0lDQWdJR3hsZENCaklEMGdieUI4ZkNCbExtaGhjeWdpVjBWQ1IweGZaSEpoZDE5aWRXWm1aWEp6SWlrc0lHZ2dQU0IwTG14dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSWdQVDA5SUNFd0xDQjFJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9NelE1TXpBcExDQmtJRDBnY3k1blpYUlFZWEpoYldWMFpYSW9NelUyTmpBcExDQm1JRDBnY3k1blpYUlFZWEpoYldWMFpYSW9Nek0zT1Nrc0lHMGdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pOREEzTmlrc0lIZ2dQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pORGt5TVNrc0lIWWdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pOak0wTnlrc0lHY2dQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pOak0wT0Nrc0lIQWdQU0J6TG1kbGRGQmhjbUZ0WlhSbGNpZ3pOak0wT1Nrc0lGOGdQU0JrSUQ0Z01Dd2dlU0E5SUc4Z2ZId2daUzVvWVhNb0lrOUZVMTkwWlhoMGRYSmxYMlpzYjJGMElpa3NJR0lnUFNCZklDWW1JSGtzSUVFZ1BTQnZJRDhnY3k1blpYUlFZWEpoYldWMFpYSW9Nell4T0RNcElEb2dNRHNLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ2FYTlhaV0pIVERJNklHOHNDaUFnSUNBZ0lDQWdaSEpoZDBKMVptWmxjbk02SUdNc0NpQWdJQ0FnSUNBZ1oyVjBUV0Y0UVc1cGMyOTBjbTl3ZVRvZ2FTd0tJQ0FnSUNBZ0lDQm5aWFJOWVhoUWNtVmphWE5wYjI0NklISXNDaUFnSUNBZ0lDQWdjSEpsWTJsemFXOXVPaUJoTEFvZ0lDQWdJQ0FnSUd4dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSTZJR2dzQ2lBZ0lDQWdJQ0FnYldGNFZHVjRkSFZ5WlhNNklIVXNDaUFnSUNBZ0lDQWdiV0Y0Vm1WeWRHVjRWR1Y0ZEhWeVpYTTZJR1FzQ2lBZ0lDQWdJQ0FnYldGNFZHVjRkSFZ5WlZOcGVtVTZJR1lzQ2lBZ0lDQWdJQ0FnYldGNFEzVmlaVzFoY0ZOcGVtVTZJRzBzQ2lBZ0lDQWdJQ0FnYldGNFFYUjBjbWxpZFhSbGN6b2dlQ3dLSUNBZ0lDQWdJQ0J0WVhoV1pYSjBaWGhWYm1sbWIzSnRjem9nZGl3S0lDQWdJQ0FnSUNCdFlYaFdZWEo1YVc1bmN6b2daeXdLSUNBZ0lDQWdJQ0J0WVhoR2NtRm5iV1Z1ZEZWdWFXWnZjbTF6T2lCd0xBb2dJQ0FnSUNBZ0lIWmxjblJsZUZSbGVIUjFjbVZ6T2lCZkxBb2dJQ0FnSUNBZ0lHWnNiMkYwUm5KaFoyMWxiblJVWlhoMGRYSmxjem9nZVN3S0lDQWdJQ0FnSUNCbWJHOWhkRlpsY25SbGVGUmxlSFIxY21Wek9pQmlMQW9nSUNBZ0lDQWdJRzFoZUZOaGJYQnNaWE02SUVFS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z1NtMG9jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TENCMElEMGdiblZzYkN3Z2JpQTlJREFzSUdrZ1BTQWhNU3dnY2lBOUlDRXhMQ0J2SUQwZ2JtVjNJRmQwTENCaElEMGdibVYzSUd4MExDQnNJRDBnZXdvZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lHNWxaV1J6VlhCa1lYUmxPaUFoTVFvZ0lDQWdmVHNLSUNBZ0lIUm9hWE11ZFc1cFptOXliU0E5SUd3c0lIUm9hWE11Ym5WdFVHeGhibVZ6SUQwZ01Dd2dkR2hwY3k1dWRXMUpiblJsY25ObFkzUnBiMjRnUFNBd0xDQjBhR2x6TG1sdWFYUWdQU0JtZFc1amRHbHZiaWgxTENCa0xDQm1LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHMGdQU0IxTG14bGJtZDBhQ0FoUFQwZ01DQjhmQ0JrSUh4OElHNGdJVDA5SURBZ2ZId2dhVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhU0E5SUdRc0lIUWdQU0JvS0hVc0lHWXNJREFwTENCdUlEMGdkUzVzWlc1bmRHZ3NJRzA3Q2lBZ0lDQjlMQ0IwYUdsekxtSmxaMmx1VTJoaFpHOTNjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISWdQU0FoTUN3Z2FDaHVkV3hzS1RzS0lDQWdJSDBzSUhSb2FYTXVaVzVrVTJoaFpHOTNjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISWdQU0FoTVN3Z1l5Z3BPd29nSUNBZ2ZTd2dkR2hwY3k1elpYUlRkR0YwWlNBOUlHWjFibU4wYVc5dUtIVXNJR1FzSUdZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlIVXVZMnhwY0hCcGJtZFFiR0Z1WlhNc0lIZ2dQU0IxTG1Oc2FYQkpiblJsY25ObFkzUnBiMjRzSUhZZ1BTQjFMbU5zYVhCVGFHRmtiM2R6TENCbklEMGdjeTVuWlhRb2RTazdDaUFnSUNBZ0lDQWdhV1lnS0NGcElIeDhJRzBnUFQwOUlHNTFiR3dnZkh3Z2JTNXNaVzVuZEdnZ1BUMDlJREFnZkh3Z2NpQW1KaUFoZGlrZ2NpQS9JR2dvYm5Wc2JDa2dPaUJqS0NrN0NpQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2NpQS9JREFnT2lCdUxDQmZJRDBnY0NBcUlEUXNJSGtnUFNCbkxtTnNhWEJ3YVc1blUzUmhkR1VnZkh3Z2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ2JDNTJZV3gxWlNBOUlIa3NJSGtnUFNCb0tHMHNJR1FzSUY4c0lHWXBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdJZ1BTQXdPeUJpSUNFOVBTQmZPeUFySzJJcGVWdGlYU0E5SUhSYllsMDdDaUFnSUNBZ0lDQWdJQ0FnSUdjdVkyeHBjSEJwYm1kVGRHRjBaU0E5SUhrc0lIUm9hWE11Ym5WdFNXNTBaWEp6WldOMGFXOXVJRDBnZUNBL0lIUm9hWE11Ym5WdFVHeGhibVZ6SURvZ01Dd2dkR2hwY3k1dWRXMVFiR0Z1WlhNZ0t6MGdjRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z1l5Z3BJSHNLSUNBZ0lDQWdJQ0JzTG5aaGJIVmxJQ0U5UFNCMElDWW1JQ2hzTG5aaGJIVmxJRDBnZEN3Z2JDNXVaV1ZrYzFWd1pHRjBaU0E5SUc0Z1BpQXdLU3dnWlM1dWRXMVFiR0Z1WlhNZ1BTQnVMQ0JsTG01MWJVbHVkR1Z5YzJWamRHbHZiaUE5SURBN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQm9LSFVzSUdRc0lHWXNJRzBwSUhzS0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUhVZ0lUMDlJRzUxYkd3Z1B5QjFMbXhsYm1kMGFDQTZJREFzSUhZZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUdsbUlDaDRJQ0U5UFNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDJJRDBnYkM1MllXeDFaU3dnYlNBaFBUMGdJVEFnZkh3Z2RpQTlQVDBnYm5Wc2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdjZ1BTQm1JQ3NnZUNBcUlEUXNJSEFnUFNCa0xtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRXVaMlYwVG05eWJXRnNUV0YwY21sNEtIQXBMQ0FvZGlBOVBUMGdiblZzYkNCOGZDQjJMbXhsYm1kMGFDQThJR2NwSUNZbUlDaDJJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2huS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4Z1BTQXdMQ0I1SUQwZ1pqc2dYeUFoUFQwZ2VEc2dLeXRmTENCNUlDczlJRFFwYnk1amIzQjVLSFZiWDEwcExtRndjR3g1VFdGMGNtbDROQ2h3TENCaEtTd2dieTV1YjNKdFlXd3VkRzlCY25KaGVTaDJMQ0I1S1N3Z2RsdDVJQ3NnTTEwZ1BTQnZMbU52Ym5OMFlXNTBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3d1ZG1Gc2RXVWdQU0IyTENCc0xtNWxaV1J6VlhCa1lYUmxJRDBnSVRBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExtNTFiVkJzWVc1bGN5QTlJSGdzSUdVdWJuVnRTVzUwWlhKelpXTjBhVzl1SUQwZ01Dd2dkanNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJaYlNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnZENodkxDQmhLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0VnUFQwOUlFUnpJRDhnYnk1dFlYQndhVzVuSUQwZ1Fta2dPaUJoSUQwOVBTQkdjeUFtSmlBb2J5NXRZWEJ3YVc1bklEMGdlbWtwTENCdk93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiaWh2S1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRzhnSmlZZ2J5NXBjMVJsZUhSMWNtVWdKaVlnYnk1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYnk1dFlYQndhVzVuT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWVNBOVBUMGdSSE1nZkh3Z1lTQTlQVDBnUm5NcElHbG1JQ2hsTG1oaGN5aHZLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JsTG1kbGRDaHZLUzUwWlhoMGRYSmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUW9iQ3dnYnk1dFlYQndhVzVuS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzTVNBOUlHOHVhVzFoWjJVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iREVnSmlZZ2JERXVhR1ZwWjJoMElENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2N5NW5aWFJTWlc1a1pYSlVZWEpuWlhRb0tTd2dhQ0E5SUc1bGR5QnFjeWhzTVM1b1pXbG5hSFFnTHlBeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhQzVtY205dFJYRjFhWEpsWTNSaGJtZDFiR0Z5VkdWNGRIVnlaU2h6TENCdktTd2daUzV6WlhRb2J5d2dhQ2tzSUhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0dNcExDQnZMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JwS1N3Z2RDaG9MblJsZUhSMWNtVXNJRzh1YldGd2NHbHVaeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHODdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJwS0c4cElIc0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHOHVkR0Z5WjJWME93b2dJQ0FnSUNBZ0lHRXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUdrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1pTNW5aWFFvWVNrN0NpQWdJQ0FnSUNBZ2JDQWhQVDBnZG05cFpDQXdJQ1ltSUNobExtUmxiR1YwWlNoaEtTd2diQzVrYVhOd2IzTmxLQ2twT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2NpZ3BJSHNLSUNBZ0lDQWdJQ0JsSUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZERvZ2Jpd0tJQ0FnSUNBZ0lDQmthWE53YjNObE9pQnlDaUFnSUNCOU93cDlDblpoY2lCR2NpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1NYSWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SUMweExDQjBJRDBnTVN3Z2JpQTlJREVzSUdrZ1BTQXRNU3dnY2lBOUlDNHhMQ0J2SUQwZ01tVXpLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FaUxDQjBhR2x6TG5wdmIyMGdQU0F4TENCMGFHbHpMblpwWlhjZ1BTQnVkV3hzTENCMGFHbHpMbXhsWm5RZ1BTQmxMQ0IwYUdsekxuSnBaMmgwSUQwZ2RDd2dkR2hwY3k1MGIzQWdQU0J1TENCMGFHbHpMbUp2ZEhSdmJTQTlJR2tzSUhSb2FYTXVibVZoY2lBOUlISXNJSFJvYVhNdVptRnlJRDBnYnl3Z2RHaHBjeTUxY0dSaGRHVlFjbTlxWldOMGFXOXVUV0YwY21sNEtDazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobExDQjBLU3dnZEdocGN5NXNaV1owSUQwZ1pTNXNaV1owTENCMGFHbHpMbkpwWjJoMElEMGdaUzV5YVdkb2RDd2dkR2hwY3k1MGIzQWdQU0JsTG5SdmNDd2dkR2hwY3k1aWIzUjBiMjBnUFNCbExtSnZkSFJ2YlN3Z2RHaHBjeTV1WldGeUlEMGdaUzV1WldGeUxDQjBhR2x6TG1aaGNpQTlJR1V1Wm1GeUxDQjBhR2x6TG5wdmIyMGdQU0JsTG5wdmIyMHNJSFJvYVhNdWRtbGxkeUE5SUdVdWRtbGxkeUE5UFQwZ2JuVnNiQ0EvSUc1MWJHd2dPaUJQWW1wbFkzUXVZWE56YVdkdUtIdDlMQ0JsTG5acFpYY3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVm1sbGQwOW1abk5sZENobExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTUyYVdWM0lEMDlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxuWnBaWGNnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1WVdKc1pXUTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQm1kV3hzVjJsa2RHZzZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWjFiR3hJWldsbmFIUTZJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOW1abk5sZEZnNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUc5bVpuTmxkRms2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQXhMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SURFS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1MmFXVjNMbVZ1WVdKc1pXUWdQU0FoTUN3Z2RHaHBjeTUyYVdWM0xtWjFiR3hYYVdSMGFDQTlJR1VzSUhSb2FYTXVkbWxsZHk1bWRXeHNTR1ZwWjJoMElEMGdkQ3dnZEdocGN5NTJhV1YzTG05bVpuTmxkRmdnUFNCdUxDQjBhR2x6TG5acFpYY3ViMlptYzJWMFdTQTlJR2tzSUhSb2FYTXVkbWxsZHk1M2FXUjBhQ0E5SUhJc0lIUm9hWE11ZG1sbGR5NW9aV2xuYUhRZ1BTQnZMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lHTnNaV0Z5Vm1sbGQwOW1abk5sZENncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5acFpYY2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVkbWxsZHk1bGJtRmliR1ZrSUQwZ0lURXBMQ0IwYUdsekxuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBb2RHaHBjeTV5YVdkb2RDQXRJSFJvYVhNdWJHVm1kQ2tnTHlBb01pQXFJSFJvYVhNdWVtOXZiU2tzSUhRZ1BTQW9kR2hwY3k1MGIzQWdMU0IwYUdsekxtSnZkSFJ2YlNrZ0x5QW9NaUFxSUhSb2FYTXVlbTl2YlNrc0lHNGdQU0FvZEdocGN5NXlhV2RvZENBcklIUm9hWE11YkdWbWRDa2dMeUF5TENCcElEMGdLSFJvYVhNdWRHOXdJQ3NnZEdocGN5NWliM1IwYjIwcElDOGdNaXdnY2lBOUlHNGdMU0JsTENCdklEMGdiaUFySUdVc0lHRWdQU0JwSUNzZ2RDd2diQ0E5SUdrZ0xTQjBPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblpwWlhjZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1MmFXVjNMbVZ1WVdKc1pXUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNBb2RHaHBjeTV5YVdkb2RDQXRJSFJvYVhNdWJHVm1kQ2tnTHlCMGFHbHpMblpwWlhjdVpuVnNiRmRwWkhSb0lDOGdkR2hwY3k1NmIyOXRMQ0JvSUQwZ0tIUm9hWE11ZEc5d0lDMGdkR2hwY3k1aWIzUjBiMjBwSUM4Z2RHaHBjeTUyYVdWM0xtWjFiR3hJWldsbmFIUWdMeUIwYUdsekxucHZiMjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lISWdLejBnWXlBcUlIUm9hWE11ZG1sbGR5NXZabVp6WlhSWUxDQnZJRDBnY2lBcklHTWdLaUIwYUdsekxuWnBaWGN1ZDJsa2RHZ3NJR0VnTFQwZ2FDQXFJSFJvYVhNdWRtbGxkeTV2Wm1aelpYUlpMQ0JzSUQwZ1lTQXRJR2dnS2lCMGFHbHpMblpwWlhjdWFHVnBaMmgwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3ViV0ZyWlU5eWRHaHZaM0poY0docFl5aHlMQ0J2TENCaExDQnNMQ0IwYUdsekxtNWxZWElzSUhSb2FYTXVabUZ5S1N3Z2RHaHBjeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0hSb2FYTXVjSEp2YW1WamRHbHZiazFoZEhKcGVDa3VhVzUyWlhKMEtDazdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTlpYW1WamRDNTZiMjl0SUQwZ2RHaHBjeTU2YjI5dExDQjBMbTlpYW1WamRDNXNaV1owSUQwZ2RHaHBjeTVzWldaMExDQjBMbTlpYW1WamRDNXlhV2RvZENBOUlIUm9hWE11Y21sbmFIUXNJSFF1YjJKcVpXTjBMblJ2Y0NBOUlIUm9hWE11ZEc5d0xDQjBMbTlpYW1WamRDNWliM1IwYjIwZ1BTQjBhR2x6TG1KdmRIUnZiU3dnZEM1dlltcGxZM1F1Ym1WaGNpQTlJSFJvYVhNdWJtVmhjaXdnZEM1dlltcGxZM1F1Wm1GeUlEMGdkR2hwY3k1bVlYSXNJSFJvYVhNdWRtbGxkeUFoUFQwZ2JuVnNiQ0FtSmlBb2RDNXZZbXBsWTNRdWRtbGxkeUE5SUU5aWFtVmpkQzVoYzNOcFoyNG9lMzBzSUhSb2FYTXVkbWxsZHlrcExDQjBPd29nSUNBZ2ZRcDlPd3BHY2k1d2NtOTBiM1I1Y0dVdWFYTlBjblJvYjJkeVlYQm9hV05EWVcxbGNtRWdQU0FoTURzS2RtRnlJRWRwSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJ6YmlCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVW1GM1UyaGhaR1Z5VFdGMFpYSnBZV3dpT3dvZ0lDQWdmUXA5T3dwSGFTNXdjbTkwYjNSNWNHVXVhWE5TWVhkVGFHRmtaWEpOWVhSbGNtbGhiQ0E5SUNFd093cDJZWElnUldrZ1BTQTBMQ0JOYmlBOUlEZ3NJRlowSUQwZ1RXRjBhQzV3YjNjb01pd2dUVzRwTENCemFDQTlJRnNLSUNBZ0lDNHhNalVzQ2lBZ0lDQXVNakUxTEFvZ0lDQWdMak0xTEFvZ0lDQWdMalEwTml3S0lDQWdJQzQxTWpZc0NpQWdJQ0F1TlRneUNsMHNJRzlvSUQwZ1RXNGdMU0JGYVNBcklERWdLeUJ6YUM1c1pXNW5kR2dzSUhCcElEMGdNakFzSUVoeklEMGdld29nSUNBZ1cwNTBYVG9nTUN3S0lDQWdJRnRQYVYwNklERUtmU3dnUjI4Z1BTQnVaWGNnUm5Jc0lIc2dYMnh2WkZCc1lXNWxjem9nYW1rZ0xDQmZjMmw2WlV4dlpITTZJRXhzSUN3Z1gzTnBaMjFoY3pvZ2JITWdJSDBnUFNCYWJTZ3BMQ0JTYkNBOUlHNWxkeUJoWlN3Z1ZtOGdQU0J1ZFd4c0xDQlBiaUE5SUNneElDc2dUV0YwYUM1emNYSjBLRFVwS1NBdklESXNJRzFwSUQwZ01TQXZJRTl1TENCUWJDQTlJRnNLSUNBZ0lHNWxkeUJOS0RFc0lERXNJREVwTEFvZ0lDQWdibVYzSUUwb0xURXNJREVzSURFcExBb2dJQ0FnYm1WM0lFMG9NU3dnTVN3Z0xURXBMQW9nSUNBZ2JtVjNJRTBvTFRFc0lERXNJQzB4S1N3S0lDQWdJRzVsZHlCTktEQXNJRTl1TENCdGFTa3NDaUFnSUNCdVpYY2dUU2d3TENCUGJpd2dMVzFwS1N3S0lDQWdJRzVsZHlCTktHMXBMQ0F3TENCUGJpa3NDaUFnSUNCdVpYY2dUU2d0Yldrc0lEQXNJRTl1S1N3S0lDQWdJRzVsZHlCTktFOXVMQ0J0YVN3Z01Da3NDaUFnSUNCdVpYY2dUU2d0VDI0c0lHMXBMQ0F3S1FwZExDQmhhQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM0psYm1SbGNtVnlJRDBnWlN3Z2RHaHBjeTVmY0dsdVoxQnZibWRTWlc1a1pYSlVZWEpuWlhRZ1BTQnVkV3hzTENCMGFHbHpMbDlpYkhWeVRXRjBaWEpwWVd3Z1BTQWtiU2h3YVNrc0lIUm9hWE11WDJWeGRXbHlaV04wVTJoaFpHVnlJRDBnYm5Wc2JDd2dkR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaUE5SUc1MWJHd3NJSFJvYVhNdVgyTnZiWEJwYkdWTllYUmxjbWxoYkNoMGFHbHpMbDlpYkhWeVRXRjBaWEpwWVd3cE93b2dJQ0FnZlFvZ0lDQWdabkp2YlZOalpXNWxLR1VzSUhRZ1BTQXdMQ0J1SUQwZ0xqRXNJR2tnUFNBeE1EQXBJSHNLSUNBZ0lDQWdJQ0JXYnlBOUlIUm9hWE11WDNKbGJtUmxjbVZ5TG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5NWZZV3hzYjJOaGRHVlVZWEpuWlhSektDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNOalpXNWxWRzlEZFdKbFZWWW9aU3dnYml3Z2FTd2djaWtzSUhRZ1BpQXdJQ1ltSUhSb2FYTXVYMkpzZFhJb2Npd2dNQ3dnTUN3Z2RDa3NJSFJvYVhNdVgyRndjR3g1VUUxU1JVMG9jaWtzSUhSb2FYTXVYMk5zWldGdWRYQW9jaWtzSUhJN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UlhGMWFYSmxZM1JoYm1kMWJHRnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZabkp2YlZSbGVIUjFjbVVvWlNrN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0UTNWaVpXMWhjQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMlp5YjIxVVpYaDBkWEpsS0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0dsc1pVTjFZbVZ0WVhCVGFHRmtaWElvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVmWTNWaVpXMWhjRk5vWVdSbGNpQTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NWZZM1ZpWlcxaGNGTm9ZV1JsY2lBOUlFWnNLQ2tzSUhSb2FYTXVYMk52YlhCcGJHVk5ZWFJsY21saGJDaDBhR2x6TGw5amRXSmxiV0Z3VTJoaFpHVnlLU2s3Q2lBZ0lDQjlDaUFnSUNCamIyMXdhV3hsUlhGMWFYSmxZM1JoYm1kMWJHRnlVMmhoWkdWeUtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgyVnhkV2x5WldOMFUyaGhaR1Z5SUQwOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaUE5SUVSc0tDa3NJSFJvYVhNdVgyTnZiWEJwYkdWTllYUmxjbWxoYkNoMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpa3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbDlpYkhWeVRXRjBaWEpwWVd3dVpHbHpjRzl6WlNncExDQjBhR2x6TGw5amRXSmxiV0Z3VTJoaFpHVnlJQ0U5UFNCdWRXeHNJQ1ltSUhSb2FYTXVYMk4xWW1WdFlYQlRhR0ZrWlhJdVpHbHpjRzl6WlNncExDQjBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaUFoUFQwZ2JuVnNiQ0FtSmlCMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpNWthWE53YjNObEtDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQmxJRDBnTURzZ1pTQThJR3BwTG14bGJtZDBhRHNnWlNzcktXcHBXMlZkTG1ScGMzQnZjMlVvS1RzS0lDQWdJSDBLSUNBZ0lGOWpiR1ZoYm5Wd0tHVXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXdhVzVuVUc5dVoxSmxibVJsY2xSaGNtZGxkQzVrYVhOd2IzTmxLQ2tzSUhSb2FYTXVYM0psYm1SbGNtVnlMbk5sZEZKbGJtUmxjbFJoY21kbGRDaFdieWtzSUdVdWMyTnBjM052Y2xSbGMzUWdQU0FoTVN3Z1kzTW9aU3dnTUN3Z01Dd2daUzUzYVdSMGFDd2daUzVvWldsbmFIUXBPd29nSUNBZ2ZRb2dJQ0FnWDJaeWIyMVVaWGgwZFhKbEtHVXBJSHNLSUNBZ0lDQWdJQ0JXYnlBOUlIUm9hWE11WDNKbGJtUmxjbVZ5TG1kbGRGSmxibVJsY2xSaGNtZGxkQ2dwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZV3hzYjJOaGRHVlVZWEpuWlhSektHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5MFpYaDBkWEpsVkc5RGRXSmxWVllvWlN3Z2RDa3NJSFJvYVhNdVgyRndjR3g1VUUxU1JVMG9kQ2tzSUhSb2FYTXVYMk5zWldGdWRYQW9kQ2tzSUhRN0NpQWdJQ0I5Q2lBZ0lDQmZZV3hzYjJOaGRHVlVZWEpuWlhSektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JXRm5SbWxzZEdWeU9pQjBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2JXbHVSbWxzZEdWeU9pQjBkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1oyVnVaWEpoZEdWTmFYQnRZWEJ6T2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dhMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ1kzUXNDaUFnSUNBZ0lDQWdJQ0FnSUdWdVkyOWthVzVuT2lCT2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaENkV1ptWlhJNklDRXhDaUFnSUNBZ0lDQWdmU3dnYmlBOUlFbHNLSFFwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG1SbGNIUm9RblZtWm1WeUlEMGdJV1VzSUhSb2FYTXVYM0JwYm1kUWIyNW5VbVZ1WkdWeVZHRnlaMlYwSUQwZ1NXd29kQ2tzSUc0N0NpQWdJQ0I5Q2lBZ0lDQmZZMjl0Y0dsc1pVMWhkR1Z5YVdGc0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRzVsZHlCemRDaHFhVnN3WFN3Z1pTazdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmNtVnVaR1Z5WlhJdVkyOXRjR2xzWlNoMExDQkhieWs3Q2lBZ0lDQjlDaUFnSUNCZmMyTmxibVZVYjBOMVltVlZWaWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2dkWFFvT1RBc0lERXNJSFFzSUc0cExDQnNJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVFvZ0lDQWdJQ0FnSUYwc0lHTWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFS0lDQWdJQ0FnSUNCZExDQm9JRDBnZEdocGN5NWZjbVZ1WkdWeVpYSXNJSFVnUFNCb0xtRjFkRzlEYkdWaGNpd2daQ0E5SUdndWRHOXVaVTFoY0hCcGJtYzdDaUFnSUNBZ0lDQWdhQzVuWlhSRGJHVmhja052Ykc5eUtGSnNLU3dnYUM1MGIyNWxUV0Z3Y0dsdVp5QTlJRjl1TENCb0xtRjFkRzlEYkdWaGNpQTlJQ0V4T3dvZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnYm1WM0lHaHVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaVG9nSWxCTlVrVk5Ma0poWTJ0bmNtOTFibVFpTEFvZ0lDQWdJQ0FnSUNBZ0lDQnphV1JsT2lCcGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9WR1Z6ZERvZ0lURUtJQ0FnSUNBZ0lDQjlLU3dnYlNBOUlHNWxkeUJ6ZENodVpYY2dkMjRzSUdZcExDQjRJRDBnSVRFc0lIWWdQU0JsTG1KaFkydG5jbTkxYm1RN0NpQWdJQ0FnSUNBZ2RpQS9JSFl1YVhORGIyeHZjaUFtSmlBb1ppNWpiMnh2Y2k1amIzQjVLSFlwTENCbExtSmhZMnRuY205MWJtUWdQU0J1ZFd4c0xDQjRJRDBnSVRBcElEb2dLR1l1WTI5c2IzSXVZMjl3ZVNoU2JDa3NJSGdnUFNBaE1DazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm5JRDBnTURzZ1p5QThJRFk3SUdjckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnWnlBbElETTdDaUFnSUNBZ0lDQWdJQ0FnSUhBZ1BUMGdNQ0EvSUNoaExuVndMbk5sZENnd0xDQnNXMmRkTENBd0tTd2dZUzVzYjI5clFYUW9ZMXRuWFN3Z01Dd2dNQ2twSURvZ2NDQTlQU0F4SUQ4Z0tHRXVkWEF1YzJWMEtEQXNJREFzSUd4YloxMHBMQ0JoTG14dmIydEJkQ2d3TENCalcyZGRMQ0F3S1NrZ09pQW9ZUzUxY0M1elpYUW9NQ3dnYkZ0blhTd2dNQ2tzSUdFdWJHOXZhMEYwS0RBc0lEQXNJR05iWjEwcEtTd2dZM01vYVN3Z2NDQXFJRlowTENCbklENGdNaUEvSUZaMElEb2dNQ3dnVm5Rc0lGWjBLU3dnYUM1elpYUlNaVzVrWlhKVVlYSm5aWFFvYVNrc0lIZ2dKaVlnYUM1eVpXNWtaWElvYlN3Z1lTa3NJR2d1Y21WdVpHVnlLR1VzSUdFcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnRMbWRsYjIxbGRISjVMbVJwYzNCdmMyVW9LU3dnYlM1dFlYUmxjbWxoYkM1a2FYTndiM05sS0Nrc0lHZ3VkRzl1WlUxaGNIQnBibWNnUFNCa0xDQm9MbUYxZEc5RGJHVmhjaUE5SUhVc0lHVXVZbUZqYTJkeWIzVnVaQ0E5SUhZN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwUlc1amIyUnBibWNvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVgzSmxibVJsY21WeUxtTmhjR0ZpYVd4cGRHbGxjeTVwYzFkbFlrZE1NaUE5UFQwZ0lUQWdKaVlnZEM1bWIzSnRZWFFnUFQwOUlHTjBJQ1ltSUhRdWRIbHdaU0E5UFQwZ2NtNGdKaVlnZEM1bGJtTnZaR2x1WnlBOVBUMGdUMmtnUHlCbExuWmhiSFZsSUQwZ1NITmJUblJkSURvZ1pTNTJZV3gxWlNBOUlFaHpXM1F1Wlc1amIyUnBibWRkT3dvZ0lDQWdmUW9nSUNBZ1gzUmxlSFIxY21WVWIwTjFZbVZWVmlobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxsOXlaVzVrWlhKbGNpd2dhU0E5SUdVdWJXRndjR2x1WnlBOVBUMGdRbWtnZkh3Z1pTNXRZWEJ3YVc1bklEMDlQU0I2YVRzS0lDQWdJQ0FnSUNCcElEOGdkR2hwY3k1ZlkzVmlaVzFoY0ZOb1lXUmxjaUE5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDlqZFdKbGJXRndVMmhoWkdWeUlEMGdSbXdvS1NrZ09pQjBhR2x6TGw5bGNYVnBjbVZqZEZOb1lXUmxjaUE5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpQTlJRVJzS0NrcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2FTQS9JSFJvYVhNdVgyTjFZbVZ0WVhCVGFHRmtaWElnT2lCMGFHbHpMbDlsY1hWcGNtVmpkRk5vWVdSbGNpd2dieUE5SUc1bGR5QnpkQ2hxYVZzd1hTd2djaWtzSUdFZ1BTQnlMblZ1YVdadmNtMXpPd29nSUNBZ0lDQWdJR0V1Wlc1MlRXRndMblpoYkhWbElEMGdaU3dnYVNCOGZDQmhMblJsZUdWc1UybDZaUzUyWVd4MVpTNXpaWFFvTVNBdklHVXVhVzFoWjJVdWQybGtkR2dzSURFZ0x5QmxMbWx0WVdkbExtaGxhV2RvZENrc0lIUm9hWE11WDNObGRFVnVZMjlrYVc1bktHRXVhVzV3ZFhSRmJtTnZaR2x1Wnl3Z1pTa3NJR056S0hRc0lEQXNJREFzSURNZ0tpQldkQ3dnTWlBcUlGWjBLU3dnYmk1elpYUlNaVzVrWlhKVVlYSm5aWFFvZENrc0lHNHVjbVZ1WkdWeUtHOHNJRWR2S1RzS0lDQWdJSDBLSUNBZ0lGOWhjSEJzZVZCTlVrVk5LR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVYM0psYm1SbGNtVnlMQ0J1SUQwZ2RDNWhkWFJ2UTJ4bFlYSTdDaUFnSUNBZ0lDQWdkQzVoZFhSdlEyeGxZWElnUFNBaE1Uc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F4T3lCcElEd2diMmc3SUdrckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnVFdGMGFDNXpjWEowS0d4elcybGRJQ29nYkhOYmFWMGdMU0JzYzF0cElDMGdNVjBnS2lCc2MxdHBJQzBnTVYwcExDQnZJRDBnVUd4YktHa2dMU0F4S1NBbElGQnNMbXhsYm1kMGFGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMkpzZFhJb1pTd2dhU0F0SURFc0lHa3NJSElzSUc4cE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBMbUYxZEc5RGJHVmhjaUE5SUc0N0NpQWdJQ0I5Q2lBZ0lDQmZZbXgxY2lobExDQjBMQ0J1TENCcExDQnlLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0IwYUdsekxsOXdhVzVuVUc5dVoxSmxibVJsY2xSaGNtZGxkRHNLSUNBZ0lDQWdJQ0IwYUdsekxsOW9ZV3htUW14MWNpaGxMQ0J2TENCMExDQnVMQ0JwTENBaWJHRjBhWFIxWkdsdVlXd2lMQ0J5S1N3Z2RHaHBjeTVmYUdGc1prSnNkWElvYnl3Z1pTd2diaXdnYml3Z2FTd2dJbXh2Ym1kcGRIVmthVzVoYkNJc0lISXBPd29nSUNBZ2ZRb2dJQ0FnWDJoaGJHWkNiSFZ5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlIUm9hWE11WDNKbGJtUmxjbVZ5TENCaklEMGdkR2hwY3k1ZllteDFjazFoZEdWeWFXRnNPd29nSUNBZ0lDQWdJRzhnSVQwOUlDSnNZWFJwZEhWa2FXNWhiQ0lnSmlZZ2J5QWhQVDBnSW14dmJtZHBkSFZrYVc1aGJDSWdKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lZbXgxY2lCa2FYSmxZM1JwYjI0Z2JYVnpkQ0JpWlNCbGFYUm9aWElnYkdGMGFYUjFaR2x1WVd3Z2IzSWdiRzl1WjJsMGRXUnBibUZzSVNJcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ015d2dkU0E5SUc1bGR5QnpkQ2hxYVZ0cFhTd2dZeWtzSUdRZ1BTQmpMblZ1YVdadmNtMXpMQ0JtSUQwZ1RHeGJibDBnTFNBeExDQnRJRDBnYVhOR2FXNXBkR1VvY2lrZ1B5Qk5ZWFJvTGxCSklDOGdLRElnS2lCbUtTQTZJRElnS2lCTllYUm9MbEJKSUM4Z0tESWdLaUJ3YVNBdElERXBMQ0I0SUQwZ2NpQXZJRzBzSUhZZ1BTQnBjMFpwYm1sMFpTaHlLU0EvSURFZ0t5Qk5ZWFJvTG1ac2IyOXlLR2dnS2lCNEtTQTZJSEJwT3dvZ0lDQWdJQ0FnSUhZZ1BpQndhU0FtSmlCamIyNXpiMnhsTG5kaGNtNG9ZSE5wWjIxaFVtRmthV0Z1Y3l3Z0pIdHlmU3dnYVhNZ2RHOXZJR3hoY21kbElHRnVaQ0IzYVd4c0lHTnNhWEFzSUdGeklHbDBJSEpsY1hWbGMzUmxaQ0FrZTNaOUlITmhiWEJzWlhNZ2QyaGxiaUIwYUdVZ2JXRjRhVzExYlNCcGN5QnpaWFFnZEc4Z0pIdHdhWDFnS1RzS0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUZ0ZExDQndJRDBnTURzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVFZ1BTQXdPeUJCSUR3Z2NHazdJQ3NyUVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTUlEMGdRU0F2SUhnc0lFa2dQU0JOWVhSb0xtVjRjQ2d0VENBcUlFd2dMeUF5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdaeTV3ZFhOb0tFa3BMQ0JCSUQwOUlEQWdQeUJ3SUNzOUlFa2dPaUJCSUR3Z2RpQW1KaUFvY0NBclBTQXlJQ29nU1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1FURWdQU0F3T3lCQk1TQThJR2N1YkdWdVozUm9PeUJCTVNzcktXZGJRVEZkSUQwZ1oxdEJNVjBnTHlCd093b2dJQ0FnSUNBZ0lHUXVaVzUyVFdGd0xuWmhiSFZsSUQwZ1pTNTBaWGgwZFhKbExDQmtMbk5oYlhCc1pYTXVkbUZzZFdVZ1BTQjJMQ0JrTG5kbGFXZG9kSE11ZG1Gc2RXVWdQU0JuTENCa0xteGhkR2wwZFdScGJtRnNMblpoYkhWbElEMGdieUE5UFQwZ0lteGhkR2wwZFdScGJtRnNJaXdnWVNBbUppQW9aQzV3YjJ4bFFYaHBjeTUyWVd4MVpTQTlJR0VwTENCa0xtUlVhR1YwWVM1MllXeDFaU0E5SUcwc0lHUXViV2x3U1c1MExuWmhiSFZsSUQwZ1RXNGdMU0J1T3dvZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnVEd4YmFWMHNJSGtnUFNBeklDb2dUV0YwYUM1dFlYZ29NQ3dnVm5RZ0xTQXlJQ29nWHlrc0lHSWdQU0FvYVNBOVBUMGdNQ0EvSURBZ09pQXlJQ29nVm5RcElDc2dNaUFxSUY4Z0tpQW9hU0ErSUUxdUlDMGdSV2tnUHlCcElDMGdUVzRnS3lCRmFTQTZJREFwT3dvZ0lDQWdJQ0FnSUdOektIUXNJSGtzSUdJc0lETWdLaUJmTENBeUlDb2dYeWtzSUd3dWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0hRcExDQnNMbkpsYm1SbGNpaDFMQ0JIYnlrN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlGcHRLQ2tnZXdvZ0lDQWdiR1YwSUhNZ1BTQmJYU3dnWlNBOUlGdGRMQ0IwSUQwZ1cxMHNJRzRnUFNCTmJqc0tJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQTdJR2tnUENCdmFEc2dhU3NyS1hzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUUxaGRHZ3VjRzkzS0RJc0lHNHBPd29nSUNBZ0lDQWdJR1V1Y0hWemFDaHlLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJREVnTHlCeU93b2dJQ0FnSUNBZ0lHa2dQaUJOYmlBdElFVnBJRDhnYnlBOUlITm9XMmtnTFNCTmJpQXJJRVZwSUMwZ01WMGdPaUJwSUQwOUlEQWdKaVlnS0c4Z1BTQXdLU3dnZEM1d2RYTm9LRzhwT3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnTVNBdklDaHlJQzBnTVNrc0lHd2dQU0F0WVNBdklESXNJR01nUFNBeElDc2dZU0F2SURJc0lHZ2dQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lHd3NDaUFnSUNBZ0lDQWdJQ0FnSUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHd3NDaUFnSUNBZ0lDQWdJQ0FnSUdNc0NpQWdJQ0FnSUNBZ0lDQWdJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHd3NDaUFnSUNBZ0lDQWdJQ0FnSUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHTXNDaUFnSUNBZ0lDQWdJQ0FnSUd3c0NpQWdJQ0FnSUNBZ0lDQWdJR01LSUNBZ0lDQWdJQ0JkTENCMUlEMGdOaXdnWkNBOUlEWXNJR1lnUFNBekxDQnRJRDBnTWl3Z2VDQTlJREVzSUhZZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtHWWdLaUJrSUNvZ2RTa3NJR2NnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0cwZ0tpQmtJQ29nZFNrc0lIQWdQU0J1WlhjZ1JteHZZWFF6TWtGeWNtRjVLSGdnS2lCa0lDb2dkU2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I1SUQwZ01Ec2dlU0E4SUhVN0lIa3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ2VTQWxJRE1nS2lBeUlDOGdNeUF0SURFc0lFRWdQU0I1SUQ0Z01pQS9JREFnT2lBdE1Td2dUQ0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCQkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSWdLeUF5SUM4Z015d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaUFySURJZ0x5QXpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRU0FySURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZaUFySURJZ0x5QXpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdRU0FySURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRWdLeUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUFvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJQ0FnSUNCMkxuTmxkQ2hNTENCbUlDb2daQ0FxSUhrcExDQm5Mbk5sZENob0xDQnRJQ29nWkNBcUlIa3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTU0E5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlUW9nSUNBZ0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lDQWdJQ0J3TG5ObGRDaEpMQ0I0SUNvZ1pDQXFJSGtwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0JmTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1ZXVW9kaXdnWmlrcExDQmZMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1ZXVW9aeXdnYlNrcExDQmZMbk5sZEVGMGRISnBZblYwWlNnaVptRmpaVWx1WkdWNElpd2dibVYzSUZWbEtIQXNJSGdwS1N3Z2N5NXdkWE5vS0Y4cExDQnVJRDRnUldrZ0ppWWdiaTB0T3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCZmJHOWtVR3hoYm1Wek9pQnpMQW9nSUNBZ0lDQWdJRjl6YVhwbFRHOWtjem9nWlN3S0lDQWdJQ0FnSUNCZmMybG5iV0Z6T2lCMENpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlFbHNLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdibVYzSUVGMEtETWdLaUJXZEN3Z015QXFJRlowTENCektUc0tJQ0FnSUhKbGRIVnliaUJsTG5SbGVIUjFjbVV1YldGd2NHbHVaeUE5SUZCeUxDQmxMblJsZUhSMWNtVXVibUZ0WlNBOUlDSlFUVkpGVFM1amRXSmxWWFlpTENCbExuTmphWE56YjNKVVpYTjBJRDBnSVRBc0lHVTdDbjBLWm5WdVkzUnBiMjRnWTNNb2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdjeTUyYVdWM2NHOXlkQzV6WlhRb1pTd2dkQ3dnYml3Z2FTa3NJSE11YzJOcGMzTnZjaTV6WlhRb1pTd2dkQ3dnYml3Z2FTazdDbjBLWm5WdVkzUnBiMjRnSkcwb2N5a2dld29nSUNBZ2JHVjBJR1VnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0hNcExDQjBJRDBnYm1WM0lFMG9NQ3dnTVN3Z01DazdDaUFnSUNCeVpYUjFjbTRnYm1WM0lFZHBLSHNLSUNBZ0lDQWdJQ0J1WVcxbE9pQWlVM0JvWlhKcFkyRnNSMkYxYzNOcFlXNUNiSFZ5SWl3S0lDQWdJQ0FnSUNCa1pXWnBibVZ6T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJRzQ2SUhNS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWdWRrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyRnRjR3hsY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SURFS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2QyVnBaMmgwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUdVS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHRjBhWFIxWkdsdVlXdzZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQWhNUW9nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0JrVkdobGRHRTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRzFwY0VsdWREb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklEQUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdjRzlzWlVGNGFYTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoYkhWbE9pQjBDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lIWmxjblJsZUZOb1lXUmxjam9nWm1Fb0tTd0tJQ0FnSUNBZ0lDQm1jbUZuYldWdWRGTm9ZV1JsY2pvZ1lBb0tDUWtKY0hKbFkybHphVzl1SUcxbFpHbDFiWEFnWm14dllYUTdDZ2tKQ1hCeVpXTnBjMmx2YmlCdFpXUnBkVzF3SUdsdWREc0tDZ2tKQ1haaGNubHBibWNnZG1Wak15QjJUM1YwY0hWMFJHbHlaV04wYVc5dU93b0tDUWtKZFc1cFptOXliU0J6WVcxd2JHVnlNa1FnWlc1MlRXRndPd29KQ1FsMWJtbG1iM0p0SUdsdWRDQnpZVzF3YkdWek93b0pDUWwxYm1sbWIzSnRJR1pzYjJGMElIZGxhV2RvZEhOYklHNGdYVHNLQ1FrSmRXNXBabTl5YlNCaWIyOXNJR3hoZEdsMGRXUnBibUZzT3dvSkNRbDFibWxtYjNKdElHWnNiMkYwSUdSVWFHVjBZVHNLQ1FrSmRXNXBabTl5YlNCbWJHOWhkQ0J0YVhCSmJuUTdDZ2tKQ1hWdWFXWnZjbTBnZG1Wak15QndiMnhsUVhocGN6c0tDZ2tKQ1NSN2NHRW9LWDBLQ2drSkNTTmtaV1pwYm1VZ1JVNVdUVUZRWDFSWlVFVmZRMVZDUlY5VlZnb0pDUWtqYVc1amJIVmtaU0E4WTNWaVpWOTFkbDl5Wldac1pXTjBhVzl1WDJaeVlXZHRaVzUwUGdvS0NRa0pkbVZqTXlCblpYUlRZVzF3YkdVb0lHWnNiMkYwSUhSb1pYUmhMQ0IyWldNeklHRjRhWE1nS1NCN0Nnb0pDUWtKWm14dllYUWdZMjl6VkdobGRHRWdQU0JqYjNNb0lIUm9aWFJoSUNrN0Nna0pDUWt2THlCU2IyUnlhV2QxWlhNbklHRjRhWE10WVc1bmJHVWdjbTkwWVhScGIyNEtDUWtKQ1habFl6TWdjMkZ0Y0d4bFJHbHlaV04wYVc5dUlEMGdkazkxZEhCMWRFUnBjbVZqZEdsdmJpQXFJR052YzFSb1pYUmhDZ2tKQ1FrSkt5QmpjbTl6Y3lnZ1lYaHBjeXdnZGs5MWRIQjFkRVJwY21WamRHbHZiaUFwSUNvZ2MybHVLQ0IwYUdWMFlTQXBDZ2tKQ1FrSkt5QmhlR2x6SUNvZ1pHOTBLQ0JoZUdsekxDQjJUM1YwY0hWMFJHbHlaV04wYVc5dUlDa2dLaUFvSURFdU1DQXRJR052YzFSb1pYUmhJQ2s3Q2dvSkNRa0pjbVYwZFhKdUlHSnBiR2x1WldGeVEzVmlaVlZXS0NCbGJuWk5ZWEFzSUhOaGJYQnNaVVJwY21WamRHbHZiaXdnYldsd1NXNTBJQ2s3Q2dvSkNRbDlDZ29KQ1FsMmIybGtJRzFoYVc0b0tTQjdDZ29KQ1FrSmRtVmpNeUJoZUdseklEMGdiR0YwYVhSMVpHbHVZV3dnUHlCd2IyeGxRWGhwY3lBNklHTnliM056S0NCd2IyeGxRWGhwY3l3Z2RrOTFkSEIxZEVScGNtVmpkR2x2YmlBcE93b0tDUWtKQ1dsbUlDZ2dZV3hzS0NCbGNYVmhiQ2dnWVhocGN5d2dkbVZqTXlnZ01DNHdJQ2tnS1NBcElDa2dld29LQ1FrSkNRbGhlR2x6SUQwZ2RtVmpNeWdnZGs5MWRIQjFkRVJwY21WamRHbHZiaTU2TENBd0xqQXNJQzBnZGs5MWRIQjFkRVJwY21WamRHbHZiaTU0SUNrN0Nnb0pDUWtKZlFvS0NRa0pDV0Y0YVhNZ1BTQnViM0p0WVd4cGVtVW9JR0Y0YVhNZ0tUc0tDZ2tKQ1FsbmJGOUdjbUZuUTI5c2IzSWdQU0IyWldNMEtDQXdMakFzSURBdU1Dd2dNQzR3TENBeExqQWdLVHNLQ1FrSkNXZHNYMFp5WVdkRGIyeHZjaTV5WjJJZ0t6MGdkMlZwWjJoMGMxc2dNQ0JkSUNvZ1oyVjBVMkZ0Y0d4bEtDQXdMakFzSUdGNGFYTWdLVHNLQ2drSkNRbG1iM0lnS0NCcGJuUWdhU0E5SURFN0lHa2dQQ0J1T3lCcEt5c2dLU0I3Q2dvSkNRa0pDV2xtSUNnZ2FTQStQU0J6WVcxd2JHVnpJQ2tnZXdvS0NRa0pDUWtKWW5KbFlXczdDZ29KQ1FrSkNYMEtDZ2tKQ1FrSlpteHZZWFFnZEdobGRHRWdQU0JrVkdobGRHRWdLaUJtYkc5aGRDZ2dhU0FwT3dvSkNRa0pDV2RzWDBaeVlXZERiMnh2Y2k1eVoySWdLejBnZDJWcFoyaDBjMXNnYVNCZElDb2daMlYwVTJGdGNHeGxLQ0F0TVM0d0lDb2dkR2hsZEdFc0lHRjRhWE1nS1RzS0NRa0pDUWxuYkY5R2NtRm5RMjlzYjNJdWNtZGlJQ3M5SUhkbGFXZG9kSE5iSUdrZ1hTQXFJR2RsZEZOaGJYQnNaU2dnZEdobGRHRXNJR0Y0YVhNZ0tUc0tDZ2tKQ1FsOUNnb0pDUWw5Q2drSllDd0tJQ0FnSUNBZ0lDQmliR1Z1WkdsdVp6b2dkbTRzQ2lBZ0lDQWdJQ0FnWkdWd2RHaFVaWE4wT2lBaE1Td0tJQ0FnSUNBZ0lDQmtaWEIwYUZkeWFYUmxPaUFoTVFvZ0lDQWdmU2s3Q24wS1puVnVZM1JwYjI0Z1JHd29LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlHNWxkeUJZS0RFc0lERXBPd29nSUNBZ2NtVjBkWEp1SUc1bGR5QkhhU2g3Q2lBZ0lDQWdJQ0FnYm1GdFpUb2dJa1Z4ZFdseVpXTjBZVzVuZFd4aGNsUnZRM1ZpWlZWV0lpd0tJQ0FnSUNBZ0lDQjFibWxtYjNKdGN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCbGJuWk5ZWEE2SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJ1ZFd4c0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUmxlR1ZzVTJsNlpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklITUtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzV3ZFhSRmJtTnZaR2x1WnpvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1U2SUVoelcwNTBYUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUdaaEtDa3NDaUFnSUNBZ0lDQWdabkpoWjIxbGJuUlRhR0ZrWlhJNklHQUtDZ2tKQ1hCeVpXTnBjMmx2YmlCdFpXUnBkVzF3SUdac2IyRjBPd29KQ1Fsd2NtVmphWE5wYjI0Z2JXVmthWFZ0Y0NCcGJuUTdDZ29KQ1FsMllYSjVhVzVuSUhabFl6TWdkazkxZEhCMWRFUnBjbVZqZEdsdmJqc0tDZ2tKQ1hWdWFXWnZjbTBnYzJGdGNHeGxjakpFSUdWdWRrMWhjRHNLQ1FrSmRXNXBabTl5YlNCMlpXTXlJSFJsZUdWc1UybDZaVHNLQ2drSkNTUjdjR0VvS1gwS0Nna0pDU05wYm1Oc2RXUmxJRHhqYjIxdGIyNCtDZ29KQ1FsMmIybGtJRzFoYVc0b0tTQjdDZ29KQ1FrSloyeGZSbkpoWjBOdmJHOXlJRDBnZG1Wak5DZ2dNQzR3TENBd0xqQXNJREF1TUN3Z01TNHdJQ2s3Q2dvSkNRa0pkbVZqTXlCdmRYUndkWFJFYVhKbFkzUnBiMjRnUFNCdWIzSnRZV3hwZW1Vb0lIWlBkWFJ3ZFhSRWFYSmxZM1JwYjI0Z0tUc0tDUWtKQ1habFl6SWdkWFlnUFNCbGNYVnBjbVZqZEZWMktDQnZkWFJ3ZFhSRWFYSmxZM1JwYjI0Z0tUc0tDZ2tKQ1FsMlpXTXlJR1lnUFNCbWNtRmpkQ2dnZFhZZ0x5QjBaWGhsYkZOcGVtVWdMU0F3TGpVZ0tUc0tDUWtKQ1hWMklDMDlJR1lnS2lCMFpYaGxiRk5wZW1VN0Nna0pDUWwyWldNeklIUnNJRDBnWlc1MlRXRndWR1Y0Wld4VWIweHBibVZoY2lnZ2RHVjRkSFZ5WlRKRUlDZ2daVzUyVFdGd0xDQjFkaUFwSUNrdWNtZGlPd29KQ1FrSmRYWXVlQ0FyUFNCMFpYaGxiRk5wZW1VdWVEc0tDUWtKQ1habFl6TWdkSElnUFNCbGJuWk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQjBaWGgwZFhKbE1rUWdLQ0JsYm5aTllYQXNJSFYySUNrZ0tTNXlaMkk3Q2drSkNRbDFkaTU1SUNzOUlIUmxlR1ZzVTJsNlpTNTVPd29KQ1FrSmRtVmpNeUJpY2lBOUlHVnVkazFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JSFJsZUhSMWNtVXlSQ0FvSUdWdWRrMWhjQ3dnZFhZZ0tTQXBMbkpuWWpzS0NRa0pDWFYyTG5nZ0xUMGdkR1Y0Wld4VGFYcGxMbmc3Q2drSkNRbDJaV016SUdKc0lEMGdaVzUyVFdGd1ZHVjRaV3hVYjB4cGJtVmhjaWdnZEdWNGRIVnlaVEpFSUNnZ1pXNTJUV0Z3TENCMWRpQXBJQ2t1Y21kaU93b0tDUWtKQ1habFl6TWdkRzBnUFNCdGFYZ29JSFJzTENCMGNpd2daaTU0SUNrN0Nna0pDUWwyWldNeklHSnRJRDBnYldsNEtDQmliQ3dnWW5Jc0lHWXVlQ0FwT3dvSkNRa0paMnhmUm5KaFowTnZiRzl5TG5KbllpQTlJRzFwZUNnZ2RHMHNJR0p0TENCbUxua2dLVHNLQ2drSkNYMEtDUWxnTEFvZ0lDQWdJQ0FnSUdKc1pXNWthVzVuT2lCMmJpd0tJQ0FnSUNBZ0lDQmtaWEIwYUZSbGMzUTZJQ0V4TEFvZ0lDQWdJQ0FnSUdSbGNIUm9WM0pwZEdVNklDRXhDaUFnSUNCOUtUc0tmUXBtZFc1amRHbHZiaUJHYkNncElIc0tJQ0FnSUhKbGRIVnliaUJ1WlhjZ1Iya29ld29nSUNBZ0lDQWdJRzVoYldVNklDSkRkV0psYldGd1ZHOURkV0psVlZZaUxBb2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWdWRrMWhjRG9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRzUxYkd3S0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2FXNXdkWFJGYm1OdlpHbHVaem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJRWh6VzA1MFhRb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCMlpYSjBaWGhUYUdGa1pYSTZJR1poS0Nrc0NpQWdJQ0FnSUNBZ1puSmhaMjFsYm5SVGFHRmtaWEk2SUdBS0Nna0pDWEJ5WldOcGMybHZiaUJ0WldScGRXMXdJR1pzYjJGME93b0pDUWx3Y21WamFYTnBiMjRnYldWa2FYVnRjQ0JwYm5RN0Nnb0pDUWwyWVhKNWFXNW5JSFpsWXpNZ2RrOTFkSEIxZEVScGNtVmpkR2x2YmpzS0Nna0pDWFZ1YVdadmNtMGdjMkZ0Y0d4bGNrTjFZbVVnWlc1MlRXRndPd29LQ1FrSkpIdHdZU2dwZlFvS0NRa0pkbTlwWkNCdFlXbHVLQ2tnZXdvS0NRa0pDV2RzWDBaeVlXZERiMnh2Y2lBOUlHVnVkazFoY0ZSbGVHVnNWRzlNYVc1bFlYSW9JSFJsZUhSMWNtVkRkV0psS0NCbGJuWk5ZWEFzSUhabFl6TW9JQzBnZGs5MWRIQjFkRVJwY21WamRHbHZiaTU0TENCMlQzVjBjSFYwUkdseVpXTjBhVzl1TG5sNklDa2dLU0FwT3dvS0NRa0pmUW9KQ1dBc0NpQWdJQ0FnSUNBZ1lteGxibVJwYm1jNklIWnVMQW9nSUNBZ0lDQWdJR1JsY0hSb1ZHVnpkRG9nSVRFc0NpQWdJQ0FnSUNBZ1pHVndkR2hYY21sMFpUb2dJVEVLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdaaEtDa2dld29nSUNBZ2NtVjBkWEp1SUdBS0Nna0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdabXh2WVhRN0Nna0pjSEpsWTJsemFXOXVJRzFsWkdsMWJYQWdhVzUwT3dvS0NRbGhkSFJ5YVdKMWRHVWdkbVZqTXlCd2IzTnBkR2x2YmpzS0NRbGhkSFJ5YVdKMWRHVWdkbVZqTWlCMWRqc0tDUWxoZEhSeWFXSjFkR1VnWm14dllYUWdabUZqWlVsdVpHVjRPd29LQ1FsMllYSjVhVzVuSUhabFl6TWdkazkxZEhCMWRFUnBjbVZqZEdsdmJqc0tDZ2tKTHk4Z1VrZ2dZMjl2Y21ScGJtRjBaU0J6ZVhOMFpXMDdJRkJOVWtWTklHWmhZMlV0YVc1a1pYaHBibWNnWTI5dWRtVnVkR2x2YmdvSkNYWmxZek1nWjJWMFJHbHlaV04wYVc5dUtDQjJaV015SUhWMkxDQm1iRzloZENCbVlXTmxJQ2tnZXdvS0NRa0pkWFlnUFNBeUxqQWdLaUIxZGlBdElERXVNRHNLQ2drSkNYWmxZek1nWkdseVpXTjBhVzl1SUQwZ2RtVmpNeWdnZFhZc0lERXVNQ0FwT3dvS0NRa0phV1lnS0NCbVlXTmxJRDA5SURBdU1DQXBJSHNLQ2drSkNRbGthWEpsWTNScGIyNGdQU0JrYVhKbFkzUnBiMjR1ZW5sNE95QXZMeUFvSURFc0lIWXNJSFVnS1NCd2IzTWdlQW9LQ1FrSmZTQmxiSE5sSUdsbUlDZ2dabUZqWlNBOVBTQXhMakFnS1NCN0Nnb0pDUWtKWkdseVpXTjBhVzl1SUQwZ1pHbHlaV04wYVc5dUxuaDZlVHNLQ1FrSkNXUnBjbVZqZEdsdmJpNTRlaUFxUFNBdE1TNHdPeUF2THlBb0lDMTFMQ0F4TENBdGRpQXBJSEJ2Y3lCNUNnb0pDUWw5SUdWc2MyVWdhV1lnS0NCbVlXTmxJRDA5SURJdU1DQXBJSHNLQ2drSkNRbGthWEpsWTNScGIyNHVlQ0FxUFNBdE1TNHdPeUF2THlBb0lDMTFMQ0IyTENBeElDa2djRzl6SUhvS0Nna0pDWDBnWld4elpTQnBaaUFvSUdaaFkyVWdQVDBnTXk0d0lDa2dld29LQ1FrSkNXUnBjbVZqZEdsdmJpQTlJR1JwY21WamRHbHZiaTU2ZVhnN0Nna0pDUWxrYVhKbFkzUnBiMjR1ZUhvZ0tqMGdMVEV1TURzZ0x5OGdLQ0F0TVN3Z2Rpd2dMWFVnS1NCdVpXY2dlQW9LQ1FrSmZTQmxiSE5sSUdsbUlDZ2dabUZqWlNBOVBTQTBMakFnS1NCN0Nnb0pDUWtKWkdseVpXTjBhVzl1SUQwZ1pHbHlaV04wYVc5dUxuaDZlVHNLQ1FrSkNXUnBjbVZqZEdsdmJpNTRlU0FxUFNBdE1TNHdPeUF2THlBb0lDMTFMQ0F0TVN3Z2RpQXBJRzVsWnlCNUNnb0pDUWw5SUdWc2MyVWdhV1lnS0NCbVlXTmxJRDA5SURVdU1DQXBJSHNLQ2drSkNRbGthWEpsWTNScGIyNHVlaUFxUFNBdE1TNHdPeUF2THlBb0lIVXNJSFlzSUMweElDa2dibVZuSUhvS0Nna0pDWDBLQ2drSkNYSmxkSFZ5YmlCa2FYSmxZM1JwYjI0N0Nnb0pDWDBLQ2drSmRtOXBaQ0J0WVdsdUtDa2dld29LQ1FrSmRrOTFkSEIxZEVScGNtVmpkR2x2YmlBOUlHZGxkRVJwY21WamRHbHZiaWdnZFhZc0lHWmhZMlZKYm1SbGVDQXBPd29KQ1FsbmJGOVFiM05wZEdsdmJpQTlJSFpsWXpRb0lIQnZjMmwwYVc5dUxDQXhMakFnS1RzS0Nna0pmUW9KWURzS2ZRcG1kVzVqZEdsdmJpQndZU2dwSUhzS0lDQWdJSEpsZEhWeWJpQmdDZ29KQ1hWdWFXWnZjbTBnYVc1MElHbHVjSFYwUlc1amIyUnBibWM3Q2dvSkNTTnBibU5zZFdSbElEeGxibU52WkdsdVozTmZjR0Z5YzE5bWNtRm5iV1Z1ZEQ0S0Nna0pkbVZqTkNCcGJuQjFkRlJsZUdWc1ZHOU1hVzVsWVhJb0lIWmxZelFnZG1Gc2RXVWdLU0I3Q2dvSkNRbHBaaUFvSUdsdWNIVjBSVzVqYjJScGJtY2dQVDBnTUNBcElIc0tDZ2tKQ1FseVpYUjFjbTRnZG1Gc2RXVTdDZ29KQ1FsOUlHVnNjMlVnZXdvS0NRa0pDWEpsZEhWeWJpQnpVa2RDVkc5TWFXNWxZWElvSUhaaGJIVmxJQ2s3Q2dvSkNRbDlDZ29KQ1gwS0Nna0pkbVZqTkNCbGJuWk5ZWEJVWlhobGJGUnZUR2x1WldGeUtDQjJaV00wSUdOdmJHOXlJQ2tnZXdvS0NRa0pjbVYwZFhKdUlHbHVjSFYwVkdWNFpXeFViMHhwYm1WaGNpZ2dZMjlzYjNJZ0tUc0tDZ2tKZlFvSllEc0tmUXBtZFc1amRHbHZiaUJxYlNoektTQjdDaUFnSUNCc1pYUWdaU0E5SUc1bGR5QlhaV0ZyVFdGd0xDQjBJRDBnYm5Wc2JEc0tJQ0FnSUdaMWJtTjBhVzl1SUc0b1lTa2dld29nSUNBZ0lDQWdJR2xtSUNoaElDWW1JR0V1YVhOVVpYaDBkWEpsSUNZbUlHRXVhWE5TWlc1a1pYSlVZWEpuWlhSVVpYaDBkWEpsSUQwOVBTQWhNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHRXViV0Z3Y0dsdVp5d2dZeUE5SUd3Z1BUMDlJRVJ6SUh4OElHd2dQVDA5SUVaekxDQm9JRDBnYkNBOVBUMGdRbWtnZkh3Z2JDQTlQVDBnZW1rN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaklIeDhJR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxMbWhoY3loaEtTa2djbVYwZFhKdUlHVXVaMlYwS0dFcExuUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhVZ1BTQmhMbWx0WVdkbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaklDWW1JSFVnSmlZZ2RTNW9aV2xuYUhRZ1BpQXdJSHg4SUdnZ0ppWWdkU0FtSmlCcEtIVXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdjeTVuWlhSU1pXNWtaWEpVWVhKblpYUW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5UFQwZ2JuVnNiQ0FtSmlBb2RDQTlJRzVsZHlCaGFDaHpLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbUlEMGdZeUEvSUhRdVpuSnZiVVZ4ZFdseVpXTjBZVzVuZFd4aGNpaGhLU0E2SUhRdVpuSnZiVU4xWW1WdFlYQW9ZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbk5sZENoaExDQm1LU3dnY3k1elpYUlNaVzVrWlhKVVlYSm5aWFFvWkNrc0lHRXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJSElwTENCbUxuUmxlSFIxY21VN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCaE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhU2hoS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR3dnUFNBd0xDQmpJRDBnTmpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdnZ1BTQXdPeUJvSUR3Z1l6c2dhQ3NyS1dGYmFGMGdJVDA5SUhadmFXUWdNQ0FtSmlCc0t5czdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHd2dQVDA5SUdNN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnlLR0VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiQ0E5SUdFdWRHRnlaMlYwT3dvZ0lDQWdJQ0FnSUd3dWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2laR2x6Y0c5elpTSXNJSElwT3dvZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWlM1blpYUW9iQ2s3Q2lBZ0lDQWdJQ0FnWXlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hsTG1SbGJHVjBaU2hzS1N3Z1l5NWthWE53YjNObEtDa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYnlncElIc0tJQ0FnSUNBZ0lDQmxJRDBnYm1WM0lGZGxZV3ROWVhBc0lIUWdJVDA5SUc1MWJHd2dKaVlnS0hRdVpHbHpjRzl6WlNncExDQjBJRDBnYm5Wc2JDazdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZERvZ2Jpd0tJQ0FnSUNBZ0lDQmthWE53YjNObE9pQnZDaUFnSUNCOU93cDlDbVoxYm1OMGFXOXVJRkZ0S0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnZTMwN0NpQWdJQ0JtZFc1amRHbHZiaUIwS0c0cElIc0tJQ0FnSUNBZ0lDQnBaaUFvWlZ0dVhTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdaVnR1WFRzS0lDQWdJQ0FnSUNCc1pYUWdhVHNLSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29iaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxkRlFrZE1YMlJsY0hSb1gzUmxlSFIxY21VaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlJSE11WjJWMFJYaDBaVzV6YVc5dUtDSlhSVUpIVEY5a1pYQjBhRjkwWlhoMGRYSmxJaWtnZkh3Z2N5NW5aWFJGZUhSbGJuTnBiMjRvSWsxUFdsOVhSVUpIVEY5a1pYQjBhRjkwWlhoMGRYSmxJaWtnZkh3Z2N5NW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrdEpWRjlYUlVKSFRGOWtaWEIwYUY5MFpYaDBkWEpsSWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpUlZoVVgzUmxlSFIxY21WZlptbHNkR1Z5WDJGdWFYTnZkSEp2Y0dsaklqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQU0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lSVmhVWDNSbGVIUjFjbVZmWm1sc2RHVnlYMkZ1YVhOdmRISnZjR2xqSWlrZ2ZId2djeTVuWlhSRmVIUmxibk5wYjI0b0lrMVBXbDlGV0ZSZmRHVjRkSFZ5WlY5bWFXeDBaWEpmWVc1cGMyOTBjbTl3YVdNaUtTQjhmQ0J6TG1kbGRFVjRkR1Z1YzJsdmJpZ2lWMFZDUzBsVVgwVllWRjkwWlhoMGRYSmxYMlpwYkhSbGNsOWhibWx6YjNSeWIzQnBZeUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXpNM1JqSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdrZ1BTQnpMbWRsZEVWNGRHVnVjMmx2YmlnaVYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNNemRHTWlLU0I4ZkNCekxtZGxkRVY0ZEdWdWMybHZiaWdpVFU5YVgxZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5ek0zUmpJaWtnZkh3Z2N5NW5aWFJGZUhSbGJuTnBiMjRvSWxkRlFrdEpWRjlYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjek4wWXlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl3ZG5KMFl5STZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDBnY3k1blpYUkZlSFJsYm5OcGIyNG9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXdkbkowWXlJcElIeDhJSE11WjJWMFJYaDBaVzV6YVc5dUtDSlhSVUpMU1ZSZlYwVkNSMHhmWTI5dGNISmxjM05sWkY5MFpYaDBkWEpsWDNCMmNuUmpJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUFNCekxtZGxkRVY0ZEdWdWMybHZiaWh1S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYmJsMGdQU0JwTENCcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm9ZWE02SUdaMWJtTjBhVzl1S0c0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFFvYmlrZ0lUMDlJRzUxYkd3N0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnBibWwwT2lCbWRXNWpkR2x2YmlodUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc0dWFYTlhaV0pIVERJZ1B5QjBLQ0pGV0ZSZlkyOXNiM0pmWW5WbVptVnlYMlpzYjJGMElpa2dPaUFvZENnaVYwVkNSMHhmWkdWd2RHaGZkR1Y0ZEhWeVpTSXBMQ0IwS0NKUFJWTmZkR1Y0ZEhWeVpWOW1iRzloZENJcExDQjBLQ0pQUlZOZmRHVjRkSFZ5WlY5b1lXeG1YMlpzYjJGMElpa3NJSFFvSWs5RlUxOTBaWGgwZFhKbFgyaGhiR1pmWm14dllYUmZiR2x1WldGeUlpa3NJSFFvSWs5RlUxOXpkR0Z1WkdGeVpGOWtaWEpwZG1GMGFYWmxjeUlwTENCMEtDSlBSVk5mWld4bGJXVnVkRjlwYm1SbGVGOTFhVzUwSWlrc0lIUW9JazlGVTE5MlpYSjBaWGhmWVhKeVlYbGZiMkpxWldOMElpa3NJSFFvSWtGT1IweEZYMmx1YzNSaGJtTmxaRjloY25KaGVYTWlLU2tzSUhRb0lrOUZVMTkwWlhoMGRYSmxYMlpzYjJGMFgyeHBibVZoY2lJcExDQjBLQ0pGV0ZSZlkyOXNiM0pmWW5WbVptVnlYMmhoYkdaZlpteHZZWFFpS1N3Z2RDZ2lWMFZDUjB4ZmJYVnNkR2x6WVcxd2JHVmtYM0psYm1SbGNsOTBiMTkwWlhoMGRYSmxJaWs3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBLRzRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FTQTlQVDBnYm5Wc2JDQW1KaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQ0lnS3lCdUlDc2dJaUJsZUhSbGJuTnBiMjRnYm05MElITjFjSEJ2Y25SbFpDNGlLU3dnYVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5T3dwOUNtWjFibU4wYVc5dUlFdHRLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR3hsZENCcElEMGdlMzBzSUhJZ1BTQnVaWGNnVjJWaGEwMWhjRHNLSUNBZ0lHWjFibU4wYVc5dUlHOG9kU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnZFM1MFlYSm5aWFE3Q2lBZ0lDQWdJQ0FnWkM1cGJtUmxlQ0FoUFQwZ2JuVnNiQ0FtSmlCbExuSmxiVzkyWlNoa0xtbHVaR1Y0S1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcwZ2FXNGdaQzVoZEhSeWFXSjFkR1Z6S1dVdWNtVnRiM1psS0dRdVlYUjBjbWxpZFhSbGMxdHRYU2s3Q2lBZ0lDQWdJQ0FnWkM1eVpXMXZkbVZGZG1WdWRFeHBjM1JsYm1WeUtDSmthWE53YjNObElpd2dieWtzSUdSbGJHVjBaU0JwVzJRdWFXUmRPd29nSUNBZ0lDQWdJR3hsZENCbUlEMGdjaTVuWlhRb1pDazdDaUFnSUNBZ0lDQWdaaUFtSmlBb1pTNXlaVzF2ZG1Vb1ppa3NJSEl1WkdWc1pYUmxLR1FwS1N3Z2JpNXlaV3hsWVhObFUzUmhkR1Z6VDJaSFpXOXRaWFJ5ZVNoa0tTd2daQzVwYzBsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJRDA5UFNBaE1DQW1KaUJrWld4bGRHVWdaQzVmYldGNFNXNXpkR0Z1WTJWRGIzVnVkQ3dnZEM1dFpXMXZjbmt1WjJWdmJXVjBjbWxsY3kwdE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZU2gxTENCa0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHbGJaQzVwWkYwZ1BUMDlJQ0V3SUh4OElDaGtMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0J2S1N3Z2FWdGtMbWxrWFNBOUlDRXdMQ0IwTG0xbGJXOXllUzVuWlc5dFpYUnlhV1Z6S3lzcExDQmtPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYkNoMUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUdRZ1BTQjFMbUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUdsdUlHUXBaUzUxY0dSaGRHVW9aRnR0WFN3Z016UTVOaklwT3dvZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnZFM1dGIzSndhRUYwZEhKcFluVjBaWE03Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0TVNCcGJpQm1LWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCbVcyMHhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMklEMGdNQ3dnWnlBOUlIZ3ViR1Z1WjNSb095QjJJRHdnWnpzZ2Rpc3JLV1V1ZFhCa1lYUmxLSGhiZGwwc0lETTBPVFl5S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmpLSFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUZ0ZExDQm1JRDBnZFM1cGJtUmxlQ3dnYlNBOUlIVXVZWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdnZUNBOUlEQTdDaUFnSUNBZ0lDQWdhV1lnS0dZZ0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0JtTG1GeWNtRjVPd29nSUNBZ0lDQWdJQ0FnSUNCNElEMGdaaTUyWlhKemFXOXVPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUY4Z1BTQXdMQ0I1SUQwZ2NDNXNaVzVuZEdnN0lGOGdQQ0I1T3lCZklDczlJRE1wZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0J3VzE4Z0t5QXdYU3dnUVNBOUlIQmJYeUFySURGZExDQk1JRDBnY0Z0ZklDc2dNbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrTG5CMWMyZ29ZaXdnUVN3Z1FTd2dUQ3dnVEN3Z1lpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY0RFZ1BTQnRMbUZ5Y21GNU93b2dJQ0FnSUNBZ0lDQWdJQ0I0SUQwZ2JTNTJaWEp6YVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjh4SUQwZ01Dd2dlVEVnUFNCd01TNXNaVzVuZEdnZ0x5QXpJQzBnTVRzZ1h6RWdQQ0I1TVRzZ1h6RWdLejBnTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZakVnUFNCZk1TQXJJREFzSUVFeElEMGdYekVnS3lBeExDQk1NU0E5SUY4eElDc2dNanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1F1Y0hWemFDaGlNU3dnUVRFc0lFRXhMQ0JNTVN3Z1RERXNJR0l4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2RpQTlJRzVsZHlBb1dXTW9aQ2tnUGlBMk5UVXpOU0EvSUZweklEb2dXWE1wS0dRc0lERXBPd29nSUNBZ0lDQWdJSFl1ZG1WeWMybHZiaUE5SUhnN0NpQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCeUxtZGxkQ2gxS1RzS0lDQWdJQ0FnSUNCbklDWW1JR1V1Y21WdGIzWmxLR2NwTENCeUxuTmxkQ2gxTENCMktUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2dvZFNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2NpNW5aWFFvZFNrN0NpQWdJQ0FnSUNBZ2FXWWdLR1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdZZ1BTQjFMbWx1WkdWNE93b2dJQ0FnSUNBZ0lDQWdJQ0JtSUNFOVBTQnVkV3hzSUNZbUlHUXVkbVZ5YzJsdmJpQThJR1l1ZG1WeWMybHZiaUFtSmlCaktIVXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQmpLSFVwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5TG1kbGRDaDFLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQmhMQW9nSUNBZ0lDQWdJSFZ3WkdGMFpUb2diQ3dLSUNBZ0lDQWdJQ0JuWlhSWGFYSmxabkpoYldWQmRIUnlhV0oxZEdVNklHZ0tJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdaV2NvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnYkdWMElHa2dQU0J1TG1selYyVmlSMHd5TENCeU93b2dJQ0FnWm5WdVkzUnBiMjRnYnloa0tTQjdDaUFnSUNBZ0lDQWdjaUE5SUdRN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnWVN3Z2JEc0tJQ0FnSUdaMWJtTjBhVzl1SUdNb1pDa2dld29nSUNBZ0lDQWdJR0VnUFNCa0xuUjVjR1VzSUd3Z1BTQmtMbUo1ZEdWelVHVnlSV3hsYldWdWREc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR2dvWkN3Z1ppa2dld29nSUNBZ0lDQWdJSE11WkhKaGQwVnNaVzFsYm5SektISXNJR1lzSUdFc0lHUWdLaUJzS1N3Z2RDNTFjR1JoZEdVb1ppd2djaXdnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjFLR1FzSUdZc0lHMHBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2JTQTlQVDBnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQjRMQ0IyT3dvZ0lDQWdJQ0FnSUdsbUlDaHBLU0I0SUQwZ2N5d2dkaUE5SUNKa2NtRjNSV3hsYldWdWRITkpibk4wWVc1alpXUWlPd29nSUNBZ0lDQWdJR1ZzYzJVZ2FXWWdLSGdnUFNCbExtZGxkQ2dpUVU1SFRFVmZhVzV6ZEdGdVkyVmtYMkZ5Y21GNWN5SXBMQ0IySUQwZ0ltUnlZWGRGYkdWdFpXNTBjMGx1YzNSaGJtTmxaRUZPUjB4Rklpd2dlQ0E5UFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRFbHVaR1Y0WldSQ2RXWm1aWEpTWlc1a1pYSmxjam9nZFhOcGJtY2dWRWhTUlVVdVNXNXpkR0Z1WTJWa1FuVm1abVZ5UjJWdmJXVjBjbmtnWW5WMElHaGhjbVIzWVhKbElHUnZaWE1nYm05MElITjFjSEJ2Y25RZ1pYaDBaVzV6YVc5dUlFRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE11SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdlRnQyWFNoeUxDQm1MQ0JoTENCa0lDb2diQ3dnYlNrc0lIUXVkWEJrWVhSbEtHWXNJSElzSUcwcE93b2dJQ0FnZlFvZ0lDQWdkR2hwY3k1elpYUk5iMlJsSUQwZ2J5d2dkR2hwY3k1elpYUkpibVJsZUNBOUlHTXNJSFJvYVhNdWNtVnVaR1Z5SUQwZ2FDd2dkR2hwY3k1eVpXNWtaWEpKYm5OMFlXNWpaWE1nUFNCMU93cDlDbVoxYm1OMGFXOXVJSFJuS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnZXdvZ0lDQWdJQ0FnSUdkbGIyMWxkSEpwWlhNNklEQXNDaUFnSUNBZ0lDQWdkR1Y0ZEhWeVpYTTZJREFLSUNBZ0lIMHNJSFFnUFNCN0NpQWdJQ0FnSUNBZ1puSmhiV1U2SURBc0NpQWdJQ0FnSUNBZ1kyRnNiSE02SURBc0NpQWdJQ0FnSUNBZ2RISnBZVzVuYkdWek9pQXdMQW9nSUNBZ0lDQWdJSEJ2YVc1MGN6b2dNQ3dLSUNBZ0lDQWdJQ0JzYVc1bGN6b2dNQW9nSUNBZ2ZUc0tJQ0FnSUdaMWJtTjBhVzl1SUc0b2Npd2dieXdnWVNrZ2V3b2dJQ0FnSUNBZ0lITjNhWFJqYUNoMExtTmhiR3h6S3lzc0lHOHBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJRFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwTG5SeWFXRnVaMnhsY3lBclBTQmhJQ29nS0hJZ0x5QXpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElERTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBMbXhwYm1WeklDczlJR0VnS2lBb2NpQXZJRElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdNem9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFF1YkdsdVpYTWdLejBnWVNBcUlDaHlJQzBnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0F5T2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEM1c2FXNWxjeUFyUFNCaElDb2djanNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElEQTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBMbkJ2YVc1MGN5QXJQU0JoSUNvZ2Nqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4SmJtWnZPaUJWYm10dWIzZHVJR1J5WVhjZ2JXOWtaVG9pTENCdktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHa29LU0I3Q2lBZ0lDQWdJQ0FnZEM1bWNtRnRaU3NyTENCMExtTmhiR3h6SUQwZ01Dd2dkQzUwY21saGJtZHNaWE1nUFNBd0xDQjBMbkJ2YVc1MGN5QTlJREFzSUhRdWJHbHVaWE1nUFNBd093b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQnRaVzF2Y25rNklHVXNDaUFnSUNBZ0lDQWdjbVZ1WkdWeU9pQjBMQW9nSUNBZ0lDQWdJSEJ5YjJkeVlXMXpPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lHRjFkRzlTWlhObGREb2dJVEFzQ2lBZ0lDQWdJQ0FnY21WelpYUTZJR2tzQ2lBZ0lDQWdJQ0FnZFhCa1lYUmxPaUJ1Q2lBZ0lDQjlPd3A5Q25aaGNpQlJjeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNTFiR3dzSUhRZ1BTQXhMQ0J1SUQwZ01Td2dhU0E5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0c1MWJHd3BPd29nSUNBZ0lDQWdJSFJvYVhNdWFXMWhaMlVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUIwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklHNHNDaUFnSUNBZ0lDQWdJQ0FnSUdSbGNIUm9PaUJwQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NTNjbUZ3VWlBOUlIWjBMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhMQ0IwYUdsekxtWnNhWEJaSUQwZ0lURXNJSFJvYVhNdWRXNXdZV05yUVd4cFoyNXRaVzUwSUQwZ01Uc0tJQ0FnSUgwS2ZUc0tVWE11Y0hKdmRHOTBlWEJsTG1selJHRjBZVlJsZUhSMWNtVXlSRUZ5Y21GNUlEMGdJVEE3Q21aMWJtTjBhVzl1SUc1bktITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQnpXekJkSUMwZ1pWc3dYVHNLZlFwbWRXNWpkR2x2YmlCcFp5aHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9aVnN4WFNrZ0xTQk5ZWFJvTG1GaWN5aHpXekZkS1RzS2ZRcG1kVzVqZEdsdmJpQk9iQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SURFc0lHNGdQU0JsTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ1B5QmxMbVJoZEdFdVlYSnlZWGtnT2lCbExtRnljbUY1T3dvZ0lDQWdiaUJwYm5OMFlXNWpaVzltSUVsdWREaEJjbkpoZVNBL0lIUWdQU0F4TWpjZ09pQnVJR2x1YzNSaGJtTmxiMllnU1c1ME1UWkJjbkpoZVNBL0lIUWdQU0F6TWpjMk55QTZJRzRnYVc1emRHRnVZMlZ2WmlCSmJuUXpNa0Z5Y21GNUlEOGdkQ0E5SURJeE5EYzBPRE0yTkRjZ09pQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRFMXZjbkJvZEdGeVoyVjBjem9nVlc1emRYQndiM0owWldRZ2JXOXljR2dnWVhSMGNtbGlkWFJsSUdSaGRHRWdkSGx3WlRvZ0lpd2diaWtzSUhNdVpHbDJhV1JsVTJOaGJHRnlLSFFwT3dwOUNtWjFibU4wYVc5dUlISm5LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2UzMHNJR2tnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0RncExDQnlJRDBnYm1WM0lGZGxZV3ROWVhBc0lHOGdQU0J1WlhjZ1RTd2dZU0E5SUZ0ZE93b2dJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Ec2dZeUE4SURnN0lHTXJLeWxoVzJOZElEMGdXd29nSUNBZ0lDQWdJR01zQ2lBZ0lDQWdJQ0FnTUFvZ0lDQWdYVHNLSUNBZ0lHWjFibU4wYVc5dUlHd29ZeXdnYUN3Z2RTd2daQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQm1JRDBnWXk1dGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTTdDaUFnSUNBZ0lDQWdhV1lnS0dVdWFYTlhaV0pIVERJZ1BUMDlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdElEMGdhQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHViR1Z1WjNSb0xDQjRJRDBnY2k1blpYUW9hQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2g0SUQwOVBTQjJiMmxrSURBZ2ZId2dlQzVqYjNWdWRDQWhQVDBnYlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDQWhQVDBnZG05cFpDQXdJQ1ltSUhndWRHVjRkSFZ5WlM1a2FYTndiM05sS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUdndWJXOXljR2hCZEhSeWFXSjFkR1Z6TG01dmNtMWhiQ0FoUFQwZ2RtOXBaQ0F3TENCZklEMGdhQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJSGtnUFNCb0xtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dnZkh3Z1cxMHNJR0lnUFNCb0xtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHVZMjkxYm5Rc0lFRWdQU0J3SUQwOVBTQWhNQ0EvSURJZ09pQXhMQ0JNSUQwZ1lpQXFJRUVzSUVrZ1BTQXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUQ0ErSUdVdWJXRjRWR1Y0ZEhWeVpWTnBlbVVnSmlZZ0tFa2dQU0JOWVhSb0xtTmxhV3dvVENBdklHVXViV0Y0VkdWNGRIVnlaVk5wZW1VcExDQk1JRDBnWlM1dFlYaFVaWGgwZFhKbFUybDZaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2F5QTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29UQ0FxSUVrZ0tpQTBJQ29nYlNrc0lFSWdQU0J1WlhjZ1VYTW9heXdnVEN3Z1NTd2diU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JDTG1admNtMWhkQ0E5SUdOMExDQkNMblI1Y0dVZ1BTQnViaXdnUWk1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGQWdQU0JCSUNvZ05Ec0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2R5QTlJREE3SUhjZ1BDQnRPeUIzS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCRklEMGdYMXQzWFN3Z1JDQTlJSGxiZDEwc0lGVWdQU0JNSUNvZ1NTQXFJRFFnS2lCM093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSaUE5SURBN0lFWWdQQ0JGTG1OdmRXNTBPeUJHS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdkxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9SU3dnUmlrc0lFVXVibTl5YldGc2FYcGxaQ0E5UFQwZ0lUQWdKaVlnVG13b2J5d2dSU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUElEMGdSaUFxSUZBN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd0YlZTQXJJRThnS3lBd1hTQTlJRzh1ZUN3Z2ExdFZJQ3NnVHlBcklERmRJRDBnYnk1NUxDQnJXMVVnS3lCUElDc2dNbDBnUFNCdkxub3NJR3RiVlNBcklFOGdLeUF6WFNBOUlEQXNJSEFnUFQwOUlDRXdJQ1ltSUNodkxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9SQ3dnUmlrc0lFUXVibTl5YldGc2FYcGxaQ0E5UFQwZ0lUQWdKaVlnVG13b2J5d2dSQ2tzSUd0YlZTQXJJRThnS3lBMFhTQTlJRzh1ZUN3Z2ExdFZJQ3NnVHlBcklEVmRJRDBnYnk1NUxDQnJXMVVnS3lCUElDc2dObDBnUFNCdkxub3NJR3RiVlNBcklFOGdLeUEzWFNBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhnZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5MWJuUTZJRzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkSFZ5WlRvZ1Fpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6YVhwbE9pQnVaWGNnV0NoTUxDQkpLUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dnY2k1elpYUW9hQ3dnZUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSEF4SUQwZ01Ec2djREVnUENCbUxteGxibWQwYURzZ2NERXJLeWwySUNzOUlHWmJjREZkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHZ3ViVzl5Y0doVVlYSm5aWFJ6VW1Wc1lYUnBkbVVnUHlBeElEb2dNU0F0SUhZN0NpQWdJQ0FnSUNBZ0lDQWdJR1F1WjJWMFZXNXBabTl5YlhNb0tTNXpaWFJXWVd4MVpTaHpMQ0FpYlc5eWNHaFVZWEpuWlhSQ1lYTmxTVzVtYkhWbGJtTmxJaXdnWnlrc0lHUXVaMlYwVlc1cFptOXliWE1vS1M1elpYUldZV3gxWlNoekxDQWliVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SWl3Z1ppa3NJR1F1WjJWMFZXNXBabTl5YlhNb0tTNXpaWFJXWVd4MVpTaHpMQ0FpYlc5eWNHaFVZWEpuWlhSelZHVjRkSFZ5WlNJc0lIZ3VkR1Y0ZEhWeVpTd2dkQ2tzSUdRdVoyVjBWVzVwWm05eWJYTW9LUzV6WlhSV1lXeDFaU2h6TENBaWJXOXljR2hVWVhKblpYUnpWR1Y0ZEhWeVpWTnBlbVVpTENCNExuTnBlbVVwT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J0TVNBOUlHWWdQVDA5SUhadmFXUWdNQ0EvSURBZ09pQm1MbXhsYm1kMGFDd2dlREVnUFNCdVcyZ3VhV1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZURFZ1BUMDlJSFp2YVdRZ01DQjhmQ0I0TVM1c1pXNW5kR2dnSVQwOUlHMHhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0TVNBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVNU0E5SURBN0lIa3hJRHdnYlRFN0lIa3hLeXNwZURGYmVURmRJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIa3hMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVcyZ3VhV1JkSUQwZ2VERTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVNaUE5SURBN0lIa3lJRHdnYlRFN0lIa3lLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSXhJRDBnZURGYmVUSmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZakZiTUYwZ1BTQjVNaXdnWWpGYk1WMGdQU0JtVzNreVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjRNUzV6YjNKMEtHbG5LVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNU15QTlJREE3SUhreklEd2dPRHNnZVRNckt5bDVNeUE4SUcweElDWW1JSGd4VzNrelhWc3hYU0EvSUNoaFcza3pYVnN3WFNBOUlIZ3hXM2t6WFZzd1hTd2dZVnQ1TTExYk1WMGdQU0I0TVZ0NU0xMWJNVjBwSURvZ0tHRmJlVE5kV3pCZElEMGdUblZ0WW1WeUxrMUJXRjlUUVVaRlgwbE9WRVZIUlZJc0lHRmJlVE5kV3pGZElEMGdNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXVjMjl5ZENodVp5azdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJNU0E5SUdndWJXOXljR2hCZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCbk1TQTlJR2d1Ylc5eWNHaEJkSFJ5YVdKMWRHVnpMbTV2Y20xaGJDd2djRElnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGswSUQwZ01Ec2dlVFFnUENBNE95QjVOQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlNaUE5SUdGYmVUUmRMQ0JCTVNBOUlHSXlXekJkTENCTU1TQTlJR0l5V3pGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1FURWdJVDA5SUU1MWJXSmxjaTVOUVZoZlUwRkdSVjlKVGxSRlIwVlNJQ1ltSUV3eElEOGdLSFl4SUNZbUlHZ3VaMlYwUVhSMGNtbGlkWFJsS0NKdGIzSndhRlJoY21kbGRDSWdLeUI1TkNrZ0lUMDlJSFl4VzBFeFhTQW1KaUJvTG5ObGRFRjBkSEpwWW5WMFpTZ2liVzl5Y0doVVlYSm5aWFFpSUNzZ2VUUXNJSFl4VzBFeFhTa3NJR2N4SUNZbUlHZ3VaMlYwUVhSMGNtbGlkWFJsS0NKdGIzSndhRTV2Y20xaGJDSWdLeUI1TkNrZ0lUMDlJR2N4VzBFeFhTQW1KaUJvTG5ObGRFRjBkSEpwWW5WMFpTZ2liVzl5Y0doT2IzSnRZV3dpSUNzZ2VUUXNJR2N4VzBFeFhTa3NJR2xiZVRSZElEMGdUREVzSUhBeUlDczlJRXd4S1NBNklDaDJNU0FtSmlCb0xtaGhjMEYwZEhKcFluVjBaU2dpYlc5eWNHaFVZWEpuWlhRaUlDc2dlVFFwSUQwOVBTQWhNQ0FtSmlCb0xtUmxiR1YwWlVGMGRISnBZblYwWlNnaWJXOXljR2hVWVhKblpYUWlJQ3NnZVRRcExDQm5NU0FtSmlCb0xtaGhjMEYwZEhKcFluVjBaU2dpYlc5eWNHaE9iM0p0WVd3aUlDc2dlVFFwSUQwOVBTQWhNQ0FtSmlCb0xtUmxiR1YwWlVGMGRISnBZblYwWlNnaWJXOXljR2hPYjNKdFlXd2lJQ3NnZVRRcExDQnBXM2swWFNBOUlEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZk1TQTlJR2d1Ylc5eWNHaFVZWEpuWlhSelVtVnNZWFJwZG1VZ1B5QXhJRG9nTVNBdElIQXlPd29nSUNBZ0lDQWdJQ0FnSUNCa0xtZGxkRlZ1YVdadmNtMXpLQ2t1YzJWMFZtRnNkV1VvY3l3Z0ltMXZjbkJvVkdGeVoyVjBRbUZ6WlVsdVpteDFaVzVqWlNJc0lGOHhLU3dnWkM1blpYUlZibWxtYjNKdGN5Z3BMbk5sZEZaaGJIVmxLSE1zSUNKdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWlMQ0JwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lIVndaR0YwWlRvZ2JBb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQnpaeWh6TENCbExDQjBMQ0J1S1NCN0NpQWdJQ0JzWlhRZ2FTQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdablZ1WTNScGIyNGdjaWhzS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCdUxuSmxibVJsY2k1bWNtRnRaU3dnYUNBOUlHd3VaMlZ2YldWMGNua3NJSFVnUFNCbExtZGxkQ2hzTENCb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2FTNW5aWFFvZFNrZ0lUMDlJR01nSmlZZ0tHVXVkWEJrWVhSbEtIVXBMQ0JwTG5ObGRDaDFMQ0JqS1Nrc0lHd3VhWE5KYm5OMFlXNWpaV1JOWlhOb0lDWW1JQ2hzTG1oaGMwVjJaVzUwVEdsemRHVnVaWElvSW1ScGMzQnZjMlVpTENCaEtTQTlQVDBnSVRFZ0ppWWdiQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnWVNrc0lIUXVkWEJrWVhSbEtHd3VhVzV6ZEdGdVkyVk5ZWFJ5YVhnc0lETTBPVFl5S1N3Z2JDNXBibk4wWVc1alpVTnZiRzl5SUNFOVBTQnVkV3hzSUNZbUlIUXVkWEJrWVhSbEtHd3VhVzV6ZEdGdVkyVkRiMnh2Y2l3Z016UTVOaklwS1N3Z2RUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzhvS1NCN0NpQWdJQ0FnSUNBZ2FTQTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lTaHNLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0JzTG5SaGNtZGxkRHNLSUNBZ0lDQWdJQ0JqTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQmhLU3dnZEM1eVpXMXZkbVVvWXk1cGJuTjBZVzVqWlUxaGRISnBlQ2tzSUdNdWFXNXpkR0Z1WTJWRGIyeHZjaUFoUFQwZ2JuVnNiQ0FtSmlCMExuSmxiVzkyWlNoakxtbHVjM1JoYm1ObFEyOXNiM0lwT3dvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCMWNHUmhkR1U2SUhJc0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ2J3b2dJQ0FnZlRzS2ZRcDJZWElnYldFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5MElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1ZFd4c0xDQjBJRDBnTVN3Z2JpQTlJREVzSUdrZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVkV3hzS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx0WVdkbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCa1lYUmhPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYURvZ2FRb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWJXRm5SbWxzZEdWeUlEMGdjblFzSUhSb2FYTXViV2x1Um1sc2RHVnlJRDBnY25Rc0lIUm9hWE11ZDNKaGNGSWdQU0IyZEN3Z2RHaHBjeTVuWlc1bGNtRjBaVTFwY0cxaGNITWdQU0FoTVN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V4TENCMGFHbHpMblZ1Y0dGamEwRnNhV2R1YldWdWRDQTlJREU3Q2lBZ0lDQjlDbjA3Q20xaExuQnliM1J2ZEhsd1pTNXBjMFJoZEdGVVpYaDBkWEpsTTBRZ1BTQWhNRHNLZG1GeUlHeG9JRDBnYm1WM0lHOTBMQ0JqYUNBOUlHNWxkeUJSY3l3Z2FHZ2dQU0J1WlhjZ2JXRXNJSFZvSUQwZ2JtVjNJR3RwTENCQ2JDQTlJRnRkTENCNmJDQTlJRnRkTENCVmJDQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29NVFlwTENCUGJDQTlJRzVsZHlCR2JHOWhkRE15UVhKeVlYa29PU2tzSUVoc0lEMGdibVYzSUVac2IyRjBNekpCY25KaGVTZzBLVHNLWm5WdVkzUnBiMjRnVm1rb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0J6V3pCZE93b2dJQ0FnYVdZZ0tHNGdQRDBnTUNCOGZDQnVJRDRnTUNrZ2NtVjBkWEp1SUhNN0NpQWdJQ0JzWlhRZ2FTQTlJR1VnS2lCMExDQnlJRDBnUW14YmFWMDdDaUFnSUNCcFppQW9jaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHlJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hwS1N3Z1FteGJhVjBnUFNCeUtTd2daU0FoUFQwZ01Da2dld29nSUNBZ0lDQWdJRzR1ZEc5QmNuSmhlU2h5TENBd0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F4TENCaElEMGdNRHNnYnlBaFBUMGdaVHNnS3l0dktXRWdLejBnZEN3Z2MxdHZYUzUwYjBGeWNtRjVLSElzSUdFcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlISTdDbjBLWm5WdVkzUnBiMjRnVFhRb2N5d2daU2tnZXdvZ0lDQWdhV1lnS0hNdWJHVnVaM1JvSUNFOVBTQmxMbXhsYm1kMGFDa2djbVYwZFhKdUlDRXhPd29nSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlITXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLV2xtSUNoelczUmRJQ0U5UFNCbFczUmRLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQnlaWFIxY200Z0lUQTdDbjBLWm5WdVkzUnBiMjRnWDNRb2N5d2daU2tnZXdvZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1YkdWdVozUm9PeUIwSUR3Z2Jqc2dkQ3NyS1hOYmRGMGdQU0JsVzNSZE93cDlDbVoxYm1OMGFXOXVJRXR6S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2VteGJaVjA3Q2lBZ0lDQjBJRDA5UFNCMmIybGtJREFnSmlZZ0tIUWdQU0J1WlhjZ1NXNTBNekpCY25KaGVTaGxLU3dnZW14YlpWMGdQU0IwS1RzS0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdJVDA5SUdVN0lDc3JiaWwwVzI1ZElEMGdjeTVoYkd4dlkyRjBaVlJsZUhSMWNtVlZibWwwS0NrN0NpQWdJQ0J5WlhSMWNtNGdkRHNLZlFwbWRXNWpkR2x2YmlCdlp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1U3Q2lBZ0lDQjBXekJkSUNFOVBTQmxJQ1ltSUNoekxuVnVhV1p2Y20weFppaDBhR2x6TG1Ga1pISXNJR1VwTENCMFd6QmRJRDBnWlNrN0NuMEtablZ1WTNScGIyNGdZV2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobE93b2dJQ0FnYVdZZ0tHVXVlQ0FoUFQwZ2RtOXBaQ0F3S1NBb2RGc3dYU0FoUFQwZ1pTNTRJSHg4SUhSYk1WMGdJVDA5SUdVdWVTa2dKaVlnS0hNdWRXNXBabTl5YlRKbUtIUm9hWE11WVdSa2Npd2daUzU0TENCbExua3BMQ0IwV3pCZElEMGdaUzU0TENCMFd6RmRJRDBnWlM1NUtUc0tJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJR2xtSUNoTmRDaDBMQ0JsS1NrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUhNdWRXNXBabTl5YlRKbWRpaDBhR2x6TG1Ga1pISXNJR1VwTENCZmRDaDBMQ0JsS1RzS0lDQWdJSDBLZlFwbWRXNWpkR2x2YmlCc1p5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRmphR1U3Q2lBZ0lDQnBaaUFvWlM1NElDRTlQU0IyYjJsa0lEQXBJQ2gwV3pCZElDRTlQU0JsTG5nZ2ZId2dkRnN4WFNBaFBUMGdaUzU1SUh4OElIUmJNbDBnSVQwOUlHVXVlaWtnSmlZZ0tITXVkVzVwWm05eWJUTm1LSFJvYVhNdVlXUmtjaXdnWlM1NExDQmxMbmtzSUdVdWVpa3NJSFJiTUYwZ1BTQmxMbmdzSUhSYk1WMGdQU0JsTG5rc0lIUmJNbDBnUFNCbExub3BPd29nSUNBZ1pXeHpaU0JwWmlBb1pTNXlJQ0U5UFNCMmIybGtJREFwSUNoMFd6QmRJQ0U5UFNCbExuSWdmSHdnZEZzeFhTQWhQVDBnWlM1bklIeDhJSFJiTWwwZ0lUMDlJR1V1WWlrZ0ppWWdLSE11ZFc1cFptOXliVE5tS0hSb2FYTXVZV1JrY2l3Z1pTNXlMQ0JsTG1jc0lHVXVZaWtzSUhSYk1GMGdQU0JsTG5Jc0lIUmJNVjBnUFNCbExtY3NJSFJiTWwwZ1BTQmxMbUlwT3dvZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ2FXWWdLRTEwS0hRc0lHVXBLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdjeTUxYm1sbWIzSnRNMloyS0hSb2FYTXVZV1JrY2l3Z1pTa3NJRjkwS0hRc0lHVXBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJR05uS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUdsbUlDaGxMbmdnSVQwOUlIWnZhV1FnTUNrZ0tIUmJNRjBnSVQwOUlHVXVlQ0I4ZkNCMFd6RmRJQ0U5UFNCbExua2dmSHdnZEZzeVhTQWhQVDBnWlM1NklIeDhJSFJiTTEwZ0lUMDlJR1V1ZHlrZ0ppWWdLSE11ZFc1cFptOXliVFJtS0hSb2FYTXVZV1JrY2l3Z1pTNTRMQ0JsTG5rc0lHVXVlaXdnWlM1M0tTd2dkRnN3WFNBOUlHVXVlQ3dnZEZzeFhTQTlJR1V1ZVN3Z2RGc3lYU0E5SUdVdWVpd2dkRnN6WFNBOUlHVXVkeWs3Q2lBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNCcFppQW9UWFFvZEN3Z1pTa3BJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQnpMblZ1YVdadmNtMDBabllvZEdocGN5NWhaR1J5TENCbEtTd2dYM1FvZEN3Z1pTazdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdhR2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbU5oWTJobExDQnVJRDBnWlM1bGJHVnRaVzUwY3pzS0lDQWdJR2xtSUNodUlEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RYUW9kQ3dnWlNrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCekxuVnVhV1p2Y20xTllYUnlhWGd5Wm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnWlNrc0lGOTBLSFFzSUdVcE93b2dJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0JwWmlBb1RYUW9kQ3dnYmlrcElISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCSWJDNXpaWFFvYmlrc0lITXVkVzVwWm05eWJVMWhkSEpwZURKbWRpaDBhR2x6TG1Ga1pISXNJQ0V4TENCSWJDa3NJRjkwS0hRc0lHNHBPd29nSUNBZ2ZRcDlDbVoxYm1OMGFXOXVJSFZuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pTd2diaUE5SUdVdVpXeGxiV1Z1ZEhNN0NpQWdJQ0JwWmlBb2JpQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMTBLSFFzSUdVcEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2N5NTFibWxtYjNKdFRXRjBjbWw0TTJaMktIUm9hWE11WVdSa2Npd2dJVEVzSUdVcExDQmZkQ2gwTENCbEtUc0tJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFMTBLSFFzSUc0cEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ1Qyd3VjMlYwS0c0cExDQnpMblZ1YVdadmNtMU5ZWFJ5YVhnelpuWW9kR2hwY3k1aFpHUnlMQ0FoTVN3Z1Qyd3BMQ0JmZENoMExDQnVLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJrWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVXNJRzRnUFNCbExtVnNaVzFsYm5Sek93b2dJQ0FnYVdZZ0tHNGdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaE5kQ2gwTENCbEtTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lITXVkVzVwWm05eWJVMWhkSEpwZURSbWRpaDBhR2x6TG1Ga1pISXNJQ0V4TENCbEtTd2dYM1FvZEN3Z1pTazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdsbUlDaE5kQ2gwTENCdUtTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lGVnNMbk5sZENodUtTd2djeTUxYm1sbWIzSnRUV0YwY21sNE5HWjJLSFJvYVhNdVlXUmtjaXdnSVRFc0lGVnNLU3dnWDNRb2RDd2diaWs3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnWm1jb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ2RGc3dYU0FoUFQwZ1pTQW1KaUFvY3k1MWJtbG1iM0p0TVdrb2RHaHBjeTVoWkdSeUxDQmxLU3dnZEZzd1hTQTlJR1VwT3dwOUNtWjFibU4wYVc5dUlIQm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJRTEwS0hRc0lHVXBJSHg4SUNoekxuVnVhV1p2Y20weWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1N3Z1gzUW9kQ3dnWlNrcE93cDlDbVoxYm1OMGFXOXVJRzFuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUUxMEtIUXNJR1VwSUh4OElDaHpMblZ1YVdadmNtMHphWFlvZEdocGN5NWhaR1J5TENCbEtTd2dYM1FvZEN3Z1pTa3BPd3A5Q21aMWJtTjBhVzl1SUdkbktITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdkR2hwY3k1allXTm9aVHNLSUNBZ0lFMTBLSFFzSUdVcElIeDhJQ2h6TG5WdWFXWnZjbTAwYVhZb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2twT3dwOUNtWjFibU4wYVc5dUlIaG5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJSFJiTUYwZ0lUMDlJR1VnSmlZZ0tITXVkVzVwWm05eWJURjFhU2gwYUdsekxtRmtaSElzSUdVcExDQjBXekJkSUQwZ1pTazdDbjBLWm5WdVkzUnBiMjRnZVdjb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG1OaFkyaGxPd29nSUNBZ1RYUW9kQ3dnWlNrZ2ZId2dLSE11ZFc1cFptOXliVEoxYVhZb2RHaHBjeTVoWkdSeUxDQmxLU3dnWDNRb2RDd2daU2twT3dwOUNtWjFibU4wYVc5dUlIWm5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWpZV05vWlRzS0lDQWdJRTEwS0hRc0lHVXBJSHg4SUNoekxuVnVhV1p2Y20wemRXbDJLSFJvYVhNdVlXUmtjaXdnWlNrc0lGOTBLSFFzSUdVcEtUc0tmUXBtZFc1amRHbHZiaUJmWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlIUm9hWE11WTJGamFHVTdDaUFnSUNCTmRDaDBMQ0JsS1NCOGZDQW9jeTUxYm1sbWIzSnROSFZwZGloMGFHbHpMbUZrWkhJc0lHVXBMQ0JmZENoMExDQmxLU2s3Q24wS1puVnVZM1JwYjI0Z1RXY29jeXdnWlN3Z2RDa2dld29nSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbU5oWTJobExDQnBJRDBnZEM1aGJHeHZZMkYwWlZSbGVIUjFjbVZWYm1sMEtDazdDaUFnSUNCdVd6QmRJQ0U5UFNCcElDWW1JQ2h6TG5WdWFXWnZjbTB4YVNoMGFHbHpMbUZrWkhJc0lHa3BMQ0J1V3pCZElEMGdhU2tzSUhRdWMyRm1aVk5sZEZSbGVIUjFjbVV5UkNobElIeDhJR3hvTENCcEtUc0tmUXBtZFc1amRHbHZiaUJpWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyRmphR1VzSUdrZ1BTQjBMbUZzYkc5allYUmxWR1Y0ZEhWeVpWVnVhWFFvS1RzS0lDQWdJRzViTUYwZ0lUMDlJR2tnSmlZZ0tITXVkVzVwWm05eWJURnBLSFJvYVhNdVlXUmtjaXdnYVNrc0lHNWJNRjBnUFNCcEtTd2dkQzV6WlhSVVpYaDBkWEpsTTBRb1pTQjhmQ0JvYUN3Z2FTazdDbjBLWm5WdVkzUnBiMjRnZDJjb2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0IwYUdsekxtTmhZMmhsTENCcElEMGdkQzVoYkd4dlkyRjBaVlJsZUhSMWNtVlZibWwwS0NrN0NpQWdJQ0J1V3pCZElDRTlQU0JwSUNZbUlDaHpMblZ1YVdadmNtMHhhU2gwYUdsekxtRmtaSElzSUdrcExDQnVXekJkSUQwZ2FTa3NJSFF1YzJGbVpWTmxkRlJsZUhSMWNtVkRkV0psS0dVZ2ZId2dkV2dzSUdrcE93cDlDbVoxYm1OMGFXOXVJRk5uS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdkR2hwY3k1allXTm9aU3dnYVNBOUlIUXVZV3hzYjJOaGRHVlVaWGgwZFhKbFZXNXBkQ2dwT3dvZ0lDQWdibHN3WFNBaFBUMGdhU0FtSmlBb2N5NTFibWxtYjNKdE1Xa29kR2hwY3k1aFpHUnlMQ0JwS1N3Z2Jsc3dYU0E5SUdrcExDQjBMbk5sZEZSbGVIUjFjbVV5UkVGeWNtRjVLR1VnZkh3Z1kyZ3NJR2twT3dwOUNtWjFibU4wYVc5dUlGUm5LSE1wSUhzS0lDQWdJSE4zYVhSamFDaHpLWHNLSUNBZ0lDQWdJQ0JqWVhObElEVXhNalk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdlp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qWTBPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVdjN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZMk5Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR3huT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpZNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpaenNLSUNBZ0lDQWdJQ0JqWVhObElETTFOamMwT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FHYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTNOVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhWbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56WTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJrWnpzS0lDQWdJQ0FnSUNCallYTmxJRFV4TWpRNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM01Eb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1puT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpjNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM01Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSEJuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmpnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM01qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzFuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTmprNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM016b0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR2RuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdOVEV5TlRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIaG5Pd29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCNVp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazFPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnZG1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU5qb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRjluT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpFNU9Eb0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk1qazRPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXpNRFk2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFk0TWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFMW5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOems2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1T1RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpBM09nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZbWM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFk0TURvS0lDQWdJQ0FnSUNCallYTmxJRE0yTXpBd09nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EZzZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVNem9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhkbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9EazZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qTXdNem9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekV4T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T1RJNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlRaenNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJGWnloekxDQmxLU0I3Q2lBZ0lDQnpMblZ1YVdadmNtMHhabllvZEdocGN5NWhaR1J5TENCbEtUc0tmUXBtZFc1amRHbHZiaUJCWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlGWnBLR1VzSUhSb2FYTXVjMmw2WlN3Z01pazdDaUFnSUNCekxuVnVhV1p2Y20weVpuWW9kR2hwY3k1aFpHUnlMQ0IwS1RzS2ZRcG1kVzVqZEdsdmJpQkRaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUZacEtHVXNJSFJvYVhNdWMybDZaU3dnTXlrN0NpQWdJQ0J6TG5WdWFXWnZjbTB6Wm5Zb2RHaHBjeTVoWkdSeUxDQjBLVHNLZlFwbWRXNWpkR2x2YmlCTVp5aHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRlpwS0dVc0lIUm9hWE11YzJsNlpTd2dOQ2s3Q2lBZ0lDQnpMblZ1YVdadmNtMDBabllvZEdocGN5NWhaR1J5TENCMEtUc0tmUXBtZFc1amRHbHZiaUJTWnloekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlGWnBLR1VzSUhSb2FYTXVjMmw2WlN3Z05DazdDaUFnSUNCekxuVnVhV1p2Y20xTllYUnlhWGd5Wm5Zb2RHaHBjeTVoWkdSeUxDQWhNU3dnZENrN0NuMEtablZ1WTNScGIyNGdVR2NvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCV2FTaGxMQ0IwYUdsekxuTnBlbVVzSURrcE93b2dJQ0FnY3k1MWJtbG1iM0p0VFdGMGNtbDRNMloyS0hSb2FYTXVZV1JrY2l3Z0lURXNJSFFwT3dwOUNtWjFibU4wYVc5dUlFbG5LSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnVm1rb1pTd2dkR2hwY3k1emFYcGxMQ0F4TmlrN0NpQWdJQ0J6TG5WdWFXWnZjbTFOWVhSeWFYZzBabllvZEdocGN5NWhaR1J5TENBaE1Td2dkQ2s3Q24wS1puVnVZM1JwYjI0Z1JHY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TVdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z1JtY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TW1sMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z1RtY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TTJsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z1FtY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TkdsMktIUm9hWE11WVdSa2Npd2daU2s3Q24wS1puVnVZM1JwYjI0Z2VtY29jeXdnWlNrZ2V3b2dJQ0FnY3k1MWJtbG1iM0p0TVhWcGRpaDBhR2x6TG1Ga1pISXNJR1VwT3dwOUNtWjFibU4wYVc5dUlGVm5LSE1zSUdVcElIc0tJQ0FnSUhNdWRXNXBabTl5YlRKMWFYWW9kR2hwY3k1aFpHUnlMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQlBaeWh6TENCbEtTQjdDaUFnSUNCekxuVnVhV1p2Y20wemRXbDJLSFJvYVhNdVlXUmtjaXdnWlNrN0NuMEtablZ1WTNScGIyNGdTR2NvY3l3Z1pTa2dld29nSUNBZ2N5NTFibWxtYjNKdE5IVnBkaWgwYUdsekxtRmtaSElzSUdVcE93cDlDbVoxYm1OMGFXOXVJR3RuS0hNc0lHVXNJSFFwSUhzS0lDQWdJR3hsZENCdUlEMGdaUzVzWlc1bmRHZ3NJR2tnUFNCTGN5aDBMQ0J1S1RzS0lDQWdJSE11ZFc1cFptOXliVEZwZGloMGFHbHpMbUZrWkhJc0lHa3BPd29nSUNBZ1ptOXlLR3hsZENCeUlEMGdNRHNnY2lBaFBUMGdianNnS3l0eUtYUXVjMkZtWlZObGRGUmxlSFIxY21VeVJDaGxXM0pkSUh4OElHeG9MQ0JwVzNKZEtUc0tmUXBtZFc1amRHbHZiaUJIWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJR1V1YkdWdVozUm9MQ0JwSUQwZ1MzTW9kQ3dnYmlrN0NpQWdJQ0J6TG5WdWFXWnZjbTB4YVhZb2RHaHBjeTVoWkdSeUxDQnBLVHNLSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ0lUMDlJRzQ3SUNzcmNpbDBMbk5sZEZSbGVIUjFjbVV6UkNobFczSmRJSHg4SUdob0xDQnBXM0pkS1RzS2ZRcG1kVzVqZEdsdmJpQldaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlHVXViR1Z1WjNSb0xDQnBJRDBnUzNNb2RDd2diaWs3Q2lBZ0lDQnpMblZ1YVdadmNtMHhhWFlvZEdocGN5NWhaR1J5TENCcEtUc0tJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnSVQwOUlHNDdJQ3NyY2lsMExuTmhabVZUWlhSVVpYaDBkWEpsUTNWaVpTaGxXM0pkSUh4OElIVm9MQ0JwVzNKZEtUc0tmUXBtZFc1amRHbHZiaUJYWnloekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJR1V1YkdWdVozUm9MQ0JwSUQwZ1MzTW9kQ3dnYmlrN0NpQWdJQ0J6TG5WdWFXWnZjbTB4YVhZb2RHaHBjeTVoWkdSeUxDQnBLVHNLSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ0lUMDlJRzQ3SUNzcmNpbDBMbk5sZEZSbGVIUjFjbVV5UkVGeWNtRjVLR1ZiY2wwZ2ZId2dZMmdzSUdsYmNsMHBPd3A5Q21aMWJtTjBhVzl1SUhGbktITXBJSHNLSUNBZ0lITjNhWFJqYUNoektYc0tJQ0FnSUNBZ0lDQmpZWE5sSURVeE1qWTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJGWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0xTmpZME9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdRV2M3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkyTlRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFTm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOalk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCTVp6c0tJQ0FnSUNBZ0lDQmpZWE5sSURNMU5qYzBPZ29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVW1jN0NpQWdJQ0FnSUNBZ1kyRnpaU0F6TlRZM05Ub0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRkJuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNelUyTnpZNkNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQkpaenNLSUNBZ0lDQWdJQ0JqWVhObElEVXhNalE2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTURvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFUm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOamM2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTVRvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFWm5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOamc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFNW5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOams2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOVFkzTXpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFSm5Pd29nSUNBZ0lDQWdJR05oYzJVZ05URXlOVG9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhwbk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpZeU9UUTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJWWnpzS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprMU9nb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUMmM3Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakk1TmpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFaG5Pd29nSUNBZ0lDQWdJR05oYzJVZ016VTJOemc2Q2lBZ0lDQWdJQ0FnWTJGelpTQXpOakU1T0RvS0lDQWdJQ0FnSUNCallYTmxJRE0yTWprNE9nb2dJQ0FnSUNBZ0lHTmhjMlVnTXpZek1EWTZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTRNam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUd0bk93b2dJQ0FnSUNBZ0lHTmhjMlVnTXpVMk56azZDaUFnSUNBZ0lDQWdZMkZ6WlNBek5qSTVPVG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekEzT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1IyYzdDaUFnSUNBZ0lDQWdZMkZ6WlNBek5UWTRNRG9LSUNBZ0lDQWdJQ0JqWVhObElETTJNekF3T2dvZ0lDQWdJQ0FnSUdOaGMyVWdNell6TURnNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpJNU16b0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRlpuT3dvZ0lDQWdJQ0FnSUdOaGMyVWdNell5T0RrNkNpQWdJQ0FnSUNBZ1kyRnpaU0F6TmpNd016b0tJQ0FnSUNBZ0lDQmpZWE5sSURNMk16RXhPZ29nSUNBZ0lDQWdJR05oYzJVZ016WXlPVEk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCWFp6c0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQllaeWh6TENCbExDQjBLU0I3Q2lBZ0lDQjBhR2x6TG1sa0lEMGdjeXdnZEdocGN5NWhaR1J5SUQwZ2RDd2dkR2hwY3k1allXTm9aU0E5SUZ0ZExDQjBhR2x6TG5ObGRGWmhiSFZsSUQwZ1ZHY29aUzUwZVhCbEtUc0tmUXBtZFc1amRHbHZiaUJrYUNoekxDQmxMQ0IwS1NCN0NpQWdJQ0IwYUdsekxtbGtJRDBnY3l3Z2RHaHBjeTVoWkdSeUlEMGdkQ3dnZEdocGN5NWpZV05vWlNBOUlGdGRMQ0IwYUdsekxuTnBlbVVnUFNCbExuTnBlbVVzSUhSb2FYTXVjMlYwVm1Gc2RXVWdQU0J4WnlobExuUjVjR1VwT3dwOUNtUm9MbkJ5YjNSdmRIbHdaUzUxY0dSaGRHVkRZV05vWlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVqWVdOb1pUc0tJQ0FnSUhNZ2FXNXpkR0Z1WTJWdlppQkdiRzloZERNeVFYSnlZWGtnSmlZZ1pTNXNaVzVuZEdnZ0lUMDlJSE11YkdWdVozUm9JQ1ltSUNoMGFHbHpMbU5oWTJobElEMGdibVYzSUVac2IyRjBNekpCY25KaGVTaHpMbXhsYm1kMGFDa3BMQ0JmZENobExDQnpLVHNLZlRzS1puVnVZM1JwYjI0Z1ptZ29jeWtnZXdvZ0lDQWdkR2hwY3k1cFpDQTlJSE1zSUhSb2FYTXVjMlZ4SUQwZ1cxMHNJSFJvYVhNdWJXRndJRDBnZTMwN0NuMEtabWd1Y0hKdmRHOTBlWEJsTG5ObGRGWmhiSFZsSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnYkdWMElHNGdQU0IwYUdsekxuTmxjVHNLSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQnVMbXhsYm1kMGFEc2dhU0FoUFQwZ2Nqc2dLeXRwS1hzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUc1YmFWMDdDaUFnSUNBZ0lDQWdieTV6WlhSV1lXeDFaU2h6TENCbFcyOHVhV1JkTENCMEtUc0tJQ0FnSUgwS2ZUc0tkbUZ5SUZkdklEMGdMeWhjZHlzcEtGeGRLVDhvWEZ0OFhDNHBQeTluT3dwbWRXNWpkR2x2YmlCcmJDaHpMQ0JsS1NCN0NpQWdJQ0J6TG5ObGNTNXdkWE5vS0dVcExDQnpMbTFoY0Z0bExtbGtYU0E5SUdVN0NuMEtablZ1WTNScGIyNGdTbWNvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdiR1YwSUc0Z1BTQnpMbTVoYldVc0lHa2dQU0J1TG14bGJtZDBhRHNLSUNBZ0lHWnZjaWhYYnk1c1lYTjBTVzVrWlhnZ1BTQXdPenNwZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnVjI4dVpYaGxZeWh1S1N3Z2J5QTlJRmR2TG14aGMzUkpibVJsZUN3Z1lTQTlJSEpiTVYwc0lHd2dQU0J5V3pKZElEMDlQU0FpWFNJc0lHTWdQU0J5V3pOZE93b2dJQ0FnSUNBZ0lHbG1JQ2hzSUNZbUlDaGhJRDBnWVNCOElEQXBMQ0JqSUQwOVBTQjJiMmxrSURBZ2ZId2dZeUE5UFQwZ0lsc2lJQ1ltSUc4Z0t5QXlJRDA5UFNCcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd0c0tIUXNJR01nUFQwOUlIWnZhV1FnTUNBL0lHNWxkeUJZWnloaExDQnpMQ0JsS1NBNklHNWxkeUJrYUNoaExDQnpMQ0JsS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdkQzV0WVhCYllWMDdDaUFnSUNBZ0lDQWdJQ0FnSUhVZ1BUMDlJSFp2YVdRZ01DQW1KaUFvZFNBOUlHNWxkeUJtYUNoaEtTd2dhMndvZEN3Z2RTa3BMQ0IwSUQwZ2RUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdZbTRvY3l3Z1pTa2dld29nSUNBZ2RHaHBjeTV6WlhFZ1BTQmJYU3dnZEdocGN5NXRZWEFnUFNCN2ZUc0tJQ0FnSUd4bGRDQjBJRDBnY3k1blpYUlFjbTluY21GdFVHRnlZVzFsZEdWeUtHVXNJRE0xTnpFNEtUc0tJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENCME95QXJLMjRwZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnY3k1blpYUkJZM1JwZG1WVmJtbG1iM0p0S0dVc0lHNHBMQ0J5SUQwZ2N5NW5aWFJWYm1sbWIzSnRURzlqWVhScGIyNG9aU3dnYVM1dVlXMWxLVHNLSUNBZ0lDQWdJQ0JLWnlocExDQnlMQ0IwYUdsektUc0tJQ0FnSUgwS2ZRcGliaTV3Y205MGIzUjVjR1V1YzJWMFZtRnNkV1VnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUhSb2FYTXViV0Z3VzJWZE93b2dJQ0FnYVNBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YzJWMFZtRnNkV1VvY3l3Z2RDd2diaWs3Q24wN0NtSnVMbkJ5YjNSdmRIbHdaUzV6WlhSUGNIUnBiMjVoYkNBOUlHWjFibU4wYVc5dUtITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnWlZ0MFhUc0tJQ0FnSUc0Z0lUMDlJSFp2YVdRZ01DQW1KaUIwYUdsekxuTmxkRlpoYkhWbEtITXNJSFFzSUc0cE93cDlPd3BpYmk1MWNHeHZZV1FnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQXdMQ0J5SUQwZ1pTNXNaVzVuZEdnN0lHa2dJVDA5SUhJN0lDc3JhU2w3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsVzJsZExDQmhJRDBnZEZ0dkxtbGtYVHNLSUNBZ0lDQWdJQ0JoTG01bFpXUnpWWEJrWVhSbElDRTlQU0FoTVNBbUppQnZMbk5sZEZaaGJIVmxLSE1zSUdFdWRtRnNkV1VzSUc0cE93b2dJQ0FnZlFwOU93cGliaTV6WlhGWGFYUm9WbUZzZFdVZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSE11YkdWdVozUm9PeUJ1SUNFOVBTQnBPeUFySzI0cGV3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2MxdHVYVHNLSUNBZ0lDQWdJQ0J5TG1sa0lHbHVJR1VnSmlZZ2RDNXdkWE5vS0hJcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIUTdDbjA3Q21aMWJtTjBhVzl1SUVkc0tITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnY3k1amNtVmhkR1ZUYUdGa1pYSW9aU2s3Q2lBZ0lDQnlaWFIxY200Z2N5NXphR0ZrWlhKVGIzVnlZMlVvYml3Z2RDa3NJSE11WTI5dGNHbHNaVk5vWVdSbGNpaHVLU3dnYmpzS2ZRcDJZWElnV1djZ1BTQXdPd3BtZFc1amRHbHZiaUJhWnloektTQjdDaUFnSUNCc1pYUWdaU0E5SUhNdWMzQnNhWFFvWUFwZ0tUc0tJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENCbExteGxibWQwYURzZ2RDc3JLV1ZiZEYwZ1BTQjBJQ3NnTVNBcklDSTZJQ0lnS3lCbFczUmRPd29nSUNBZ2NtVjBkWEp1SUdVdWFtOXBiaWhnQ21BcE93cDlDbVoxYm1OMGFXOXVJSEJvS0hNcElIc0tJQ0FnSUhOM2FYUmphQ2h6S1hzS0lDQWdJQ0FnSUNCallYTmxJRTUwT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lreHBibVZoY2lJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaUtDQjJZV3gxWlNBcElnb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUdOaGMyVWdUMms2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaWMxSkhRaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FpS0NCMllXeDFaU0FwSWdvZ0lDQWdJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VSEp2WjNKaGJUb2dWVzV6ZFhCd2IzSjBaV1FnWlc1amIyUnBibWM2SWl3Z2N5a3NJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0pNYVc1bFlYSWlMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJaWdnZG1Gc2RXVWdLU0lLSUNBZ0lDQWdJQ0FnSUNBZ1hUc0tJQ0FnSUgwS2ZRcG1kVzVqZEdsdmJpQldiQ2h6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlITXVaMlYwVTJoaFpHVnlVR0Z5WVcxbGRHVnlLR1VzSURNMU56RXpLU3dnYVNBOUlITXVaMlYwVTJoaFpHVnlTVzVtYjB4dlp5aGxLUzUwY21sdEtDazdDaUFnSUNCeVpYUjFjbTRnYmlBbUppQnBJRDA5UFNBaUlpQS9JQ0lpSURvZ2RDNTBiMVZ3Y0dWeVEyRnpaU2dwSUNzZ1lBb0tZQ0FySUdrZ0t5QmdDZ3BnSUNzZ1dtY29jeTVuWlhSVGFHRmtaWEpUYjNWeVkyVW9aU2twT3dwOUNtWjFibU4wYVc5dUlFUnVLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnY0dnb1pTazdDaUFnSUNCeVpYUjFjbTRnSW5abFl6UWdJaUFySUhNZ0t5QWlLQ0IyWldNMElIWmhiSFZsSUNrZ2V5QnlaWFIxY200Z0lpQXJJSFJiTUYwZ0t5QWlWRzlNYVc1bFlYSWlJQ3NnZEZzeFhTQXJJQ0k3SUgwaU93cDlDbVoxYm1OMGFXOXVJQ1JuS0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ2NHZ29aU2s3Q2lBZ0lDQnlaWFIxY200Z0luWmxZelFnSWlBcklITWdLeUFpS0NCMlpXTTBJSFpoYkhWbElDa2dleUJ5WlhSMWNtNGdUR2x1WldGeVZHOGlJQ3NnZEZzd1hTQXJJSFJiTVYwZ0t5QWlPeUI5SWpzS2ZRcG1kVzVqZEdsdmJpQnFaeWh6TENCbEtTQjdDaUFnSUNCc1pYUWdkRHNLSUNBZ0lITjNhWFJqYUNobEtYc0tJQ0FnSUNBZ0lDQmpZWE5sSUU1MU9nb2dJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ0lreHBibVZoY2lJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnUW5VNkNpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNBaVVtVnBibWhoY21RaU93b2dJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQmpZWE5sSUhwMU9nb2dJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ0lrOXdkR2x0YVhwbFpFTnBibVZ2YmlJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnVlhVNkNpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNBaVFVTkZVMFpwYkcxcFl5STdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJR05oYzJVZ1QzVTZDaUFnSUNBZ0lDQWdJQ0FnSUhRZ1BTQWlRM1Z6ZEc5dElqc0tJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkJ5YjJkeVlXMDZJRlZ1YzNWd2NHOXlkR1ZrSUhSdmJtVk5ZWEJ3YVc1bk9pSXNJR1VwTENCMElEMGdJa3hwYm1WaGNpSTdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdJblpsWXpNZ0lpQXJJSE1nS3lBaUtDQjJaV016SUdOdmJHOXlJQ2tnZXlCeVpYUjFjbTRnSWlBcklIUWdLeUFpVkc5dVpVMWhjSEJwYm1jb0lHTnZiRzl5SUNrN0lIMGlPd3A5Q21aMWJtTjBhVzl1SUZGbktITXBJSHNLSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ2N5NWxlSFJsYm5OcGIyNUVaWEpwZG1GMGFYWmxjeUI4ZkNCekxtVnVkazFoY0VOMVltVlZWaUI4ZkNCekxtSjFiWEJOWVhBZ2ZId2djeTUwWVc1blpXNTBVM0JoWTJWT2IzSnRZV3hOWVhBZ2ZId2djeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnZkh3Z2N5NW1iR0YwVTJoaFpHbHVaeUI4ZkNCekxuTm9ZV1JsY2tsRUlEMDlQU0FpY0doNWMybGpZV3dpSUQ4Z0lpTmxlSFJsYm5OcGIyNGdSMHhmVDBWVFgzTjBZVzVrWVhKa1gyUmxjbWwyWVhScGRtVnpJRG9nWlc1aFlteGxJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lDaHpMbVY0ZEdWdWMybHZia1p5WVdkRVpYQjBhQ0I4ZkNCekxteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElwSUNZbUlITXVjbVZ1WkdWeVpYSkZlSFJsYm5OcGIyNUdjbUZuUkdWd2RHZ2dQeUFpSTJWNGRHVnVjMmx2YmlCSFRGOUZXRlJmWm5KaFoxOWtaWEIwYUNBNklHVnVZV0pzWlNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0J6TG1WNGRHVnVjMmx2YmtSeVlYZENkV1ptWlhKeklDWW1JSE11Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVFY21GM1FuVm1abVZ5Y3lBL0lDSWpaWGgwWlc1emFXOXVJRWRNWDBWWVZGOWtjbUYzWDJKMVptWmxjbk1nT2lCeVpYRjFhWEpsSWlBNklDSWlMQW9nSUNBZ0lDQWdJQ2h6TG1WNGRHVnVjMmx2YmxOb1lXUmxjbFJsZUhSMWNtVk1UMFFnZkh3Z2N5NWxiblpOWVhBZ2ZId2djeTUwY21GdWMyMXBjM05wYjI0cElDWW1JSE11Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVUYUdGa1pYSlVaWGgwZFhKbFRHOWtJRDhnSWlObGVIUmxibk5wYjI0Z1IweGZSVmhVWDNOb1lXUmxjbDkwWlhoMGRYSmxYMnh2WkNBNklHVnVZV0pzWlNJZ09pQWlJZ29nSUNBZ1hTNW1hV3gwWlhJb2NuSXBMbXB2YVc0b1lBcGdLVHNLZlFwbWRXNWpkR2x2YmlCTFp5aHpLU0I3Q2lBZ0lDQnNaWFFnWlNBOUlGdGRPd29nSUNBZ1ptOXlLR3hsZENCMElHbHVJSE1wZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYzF0MFhUc0tJQ0FnSUNBZ0lDQnVJQ0U5UFNBaE1TQW1KaUJsTG5CMWMyZ29JaU5rWldacGJtVWdJaUFySUhRZ0t5QWlJQ0lnS3lCdUtUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQmxMbXB2YVc0b1lBcGdLVHNLZlFwbWRXNWpkR2x2YmlCbGVDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSHQ5TENCdUlEMGdjeTVuWlhSUWNtOW5jbUZ0VUdGeVlXMWxkR1Z5S0dVc0lETTFOekl4S1RzS0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0J1T3lCcEt5c3Bld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdjeTVuWlhSQlkzUnBkbVZCZEhSeWFXSW9aU3dnYVNrc0lHOGdQU0J5TG01aGJXVXNJR0VnUFNBeE93b2dJQ0FnSUNBZ0lISXVkSGx3WlNBOVBUMGdNelUyTnpRZ0ppWWdLR0VnUFNBeUtTd2djaTUwZVhCbElEMDlQU0F6TlRZM05TQW1KaUFvWVNBOUlETXBMQ0J5TG5SNWNHVWdQVDA5SURNMU5qYzJJQ1ltSUNoaElEMGdOQ2tzSUhSYmIxMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUhJdWRIbHdaU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JHOWpZWFJwYjI0NklITXVaMlYwUVhSMGNtbGlURzlqWVhScGIyNG9aU3dnYnlrc0NpQWdJQ0FnSUNBZ0lDQWdJR3h2WTJGMGFXOXVVMmw2WlRvZ1lRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdkRHNLZlFwbWRXNWpkR2x2YmlCeWNpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z2N5QWhQVDBnSWlJN0NuMEtablZ1WTNScGIyNGdWMndvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUhNdWNtVndiR0ZqWlNndlRsVk5YMFJKVWw5TVNVZElWRk12Wnl3Z1pTNXVkVzFFYVhKTWFXZG9kSE1wTG5KbGNHeGhZMlVvTDA1VlRWOVRVRTlVWDB4SlIwaFVVeTluTENCbExtNTFiVk53YjNSTWFXZG9kSE1wTG5KbGNHeGhZMlVvTDA1VlRWOVNSVU5VWDBGU1JVRmZURWxIU0ZSVEwyY3NJR1V1Ym5WdFVtVmpkRUZ5WldGTWFXZG9kSE1wTG5KbGNHeGhZMlVvTDA1VlRWOVFUMGxPVkY5TVNVZElWRk12Wnl3Z1pTNXVkVzFRYjJsdWRFeHBaMmgwY3lrdWNtVndiR0ZqWlNndlRsVk5YMGhGVFVsZlRFbEhTRlJUTDJjc0lHVXViblZ0U0dWdGFVeHBaMmgwY3lrdWNtVndiR0ZqWlNndlRsVk5YMFJKVWw5TVNVZElWRjlUU0VGRVQxZFRMMmNzSUdVdWJuVnRSR2x5VEdsbmFIUlRhR0ZrYjNkektTNXlaWEJzWVdObEtDOU9WVTFmVTFCUFZGOU1TVWRJVkY5VFNFRkVUMWRUTDJjc0lHVXViblZ0VTNCdmRFeHBaMmgwVTJoaFpHOTNjeWt1Y21Wd2JHRmpaU2d2VGxWTlgxQlBTVTVVWDB4SlIwaFVYMU5JUVVSUFYxTXZaeXdnWlM1dWRXMVFiMmx1ZEV4cFoyaDBVMmhoWkc5M2N5azdDbjBLWm5WdVkzUnBiMjRnY1d3b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXVjbVZ3YkdGalpTZ3ZUbFZOWDBOTVNWQlFTVTVIWDFCTVFVNUZVeTluTENCbExtNTFiVU5zYVhCd2FXNW5VR3hoYm1WektTNXlaWEJzWVdObEtDOVZUa2xQVGw5RFRFbFFVRWxPUjE5UVRFRk9SVk12Wnl3Z1pTNXVkVzFEYkdsd2NHbHVaMUJzWVc1bGN5QXRJR1V1Ym5WdFEyeHBjRWx1ZEdWeWMyVmpkR2x2YmlrN0NuMEtkbUZ5SUhSNElEMGdMMTViSUZ4MFhTb2phVzVqYkhWa1pTQXJQQ2hiWEhkY1pDNHZYU3NwUGk5bmJUc0tablZ1WTNScGIyNGdjbUVvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE11Y21Wd2JHRmpaU2gwZUN3Z2JuZ3BPd3A5Q21aMWJtTjBhVzl1SUc1NEtITXNJR1VwSUhzS0lDQWdJR3hsZENCMElEMGdSbVZiWlYwN0NpQWdJQ0JwWmlBb2RDQTlQVDBnZG05cFpDQXdLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9Ja05oYmlCdWIzUWdjbVZ6YjJ4MlpTQWphVzVqYkhWa1pTQThJaUFySUdVZ0t5QWlQaUlwT3dvZ0lDQWdjbVYwZFhKdUlISmhLSFFwT3dwOUNuWmhjaUJwZUNBOUlDOGpjSEpoWjIxaElIVnVjbTlzYkY5c2IyOXdXMXh6WFNzL1ptOXlJRndvSUdsdWRDQnBJRnc5SUNoY1pDc3BYRHNnYVNBOElDaGNaQ3NwWERzZ2FTQmNLMXdySUZ3cElGeDdLRnRjYzF4VFhTcy9LU2cvUFZ4OUtWeDlMMmNzSUhKNElEMGdMeU53Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUmNjeXRtYjNKY2N5cGNLRnh6S21sdWRGeHpLMmxjY3lvOVhITXFLRnhrS3lsY2N5bzdYSE1xYVZ4ektqeGNjeW9vWEdRcktWeHpLanRjY3lwcFhITXFYQ3RjSzF4ektsd3BYSE1xZXloYlhITmNVMTByUHlsOVhITXJJM0J5WVdkdFlTQjFibkp2Ykd4ZmJHOXZjRjlsYm1Rdlp6c0tablZ1WTNScGIyNGdXR3dvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJSE11Y21Wd2JHRmpaU2h5ZUN3Z2JXZ3BMbkpsY0d4aFkyVW9hWGdzSUhONEtUc0tmUXBtZFc1amRHbHZiaUJ6ZUNoekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlhaV0pIVEZCeWIyZHlZVzA2SUNOd2NtRm5iV0VnZFc1eWIyeHNYMnh2YjNBZ2MyaGhaR1Z5SUhONWJuUmhlQ0JwY3lCa1pYQnlaV05oZEdWa0xpQlFiR1ZoYzJVZ2RYTmxJQ053Y21GbmJXRWdkVzV5YjJ4c1gyeHZiM0JmYzNSaGNuUWdjM2x1ZEdGNElHbHVjM1JsWVdRdUlpa3NJRzFvS0hNc0lHVXNJSFFzSUc0cE93cDlDbVoxYm1OMGFXOXVJRzFvS0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUd4bGRDQnBJRDBnSWlJN0NpQWdJQ0JtYjNJb2JHVjBJSElnUFNCd1lYSnpaVWx1ZENobEtUc2djaUE4SUhCaGNuTmxTVzUwS0hRcE95QnlLeXNwYVNBclBTQnVMbkpsY0d4aFkyVW9MMXhiWEhNcWFWeHpLbHhkTDJjc0lDSmJJQ0lnS3lCeUlDc2dJaUJkSWlrdWNtVndiR0ZqWlNndlZVNVNUMHhNUlVSZlRFOVBVRjlKVGtSRldDOW5MQ0J5S1RzS0lDQWdJSEpsZEhWeWJpQnBPd3A5Q21aMWJtTjBhVzl1SUVwc0tITXBJSHNLSUNBZ0lHeGxkQ0JsSUQwZ0luQnlaV05wYzJsdmJpQWlJQ3NnY3k1d2NtVmphWE5wYjI0Z0t5QmdJR1pzYjJGME93cHdjbVZqYVhOcGIyNGdZQ0FySUhNdWNISmxZMmx6YVc5dUlDc2dJaUJwYm5RN0lqc0tJQ0FnSUhKbGRIVnliaUJ6TG5CeVpXTnBjMmx2YmlBOVBUMGdJbWhwWjJod0lpQS9JR1VnS3owZ1lBb2paR1ZtYVc1bElFaEpSMGhmVUZKRlEwbFRTVTlPWUNBNklITXVjSEpsWTJsemFXOXVJRDA5UFNBaWJXVmthWFZ0Y0NJZ1B5QmxJQ3M5SUdBS0kyUmxabWx1WlNCTlJVUkpWVTFmVUZKRlEwbFRTVTlPWUNBNklITXVjSEpsWTJsemFXOXVJRDA5UFNBaWJHOTNjQ0lnSmlZZ0tHVWdLejBnWUFvalpHVm1hVzVsSUV4UFYxOVFVa1ZEU1ZOSlQwNWdLU3dnWlRzS2ZRcG1kVzVqZEdsdmJpQnZlQ2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJQ0pUU0VGRVQxZE5RVkJmVkZsUVJWOUNRVk5KUXlJN0NpQWdJQ0J5WlhSMWNtNGdjeTV6YUdGa2IzZE5ZWEJVZVhCbElEMDlQU0JJWXlBL0lHVWdQU0FpVTBoQlJFOVhUVUZRWDFSWlVFVmZVRU5HSWlBNklITXVjMmhoWkc5M1RXRndWSGx3WlNBOVBUMGdablVnUHlCbElEMGdJbE5JUVVSUFYwMUJVRjlVV1ZCRlgxQkRSbDlUVDBaVUlpQTZJSE11YzJoaFpHOTNUV0Z3Vkhsd1pTQTlQVDBnYVhJZ0ppWWdLR1VnUFNBaVUwaEJSRTlYVFVGUVgxUlpVRVZmVmxOTklpa3NJR1U3Q24wS1puVnVZM1JwYjI0Z1lYZ29jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQWlSVTVXVFVGUVgxUlpVRVZmUTFWQ1JTSTdDaUFnSUNCcFppQW9jeTVsYm5aTllYQXBJSE4zYVhSamFDaHpMbVZ1ZGsxaGNFMXZaR1VwZXdvZ0lDQWdJQ0FnSUdOaGMyVWdRbWs2Q2lBZ0lDQWdJQ0FnWTJGelpTQjZhVG9LSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJQ0pGVGxaTlFWQmZWRmxRUlY5RFZVSkZJanNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnWTJGelpTQlFjam9LSUNBZ0lDQWdJQ0JqWVhObElGZHpPZ29nSUNBZ0lDQWdJQ0FnSUNCbElEMGdJa1ZPVmsxQlVGOVVXVkJGWDBOVlFrVmZWVllpT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCbE93cDlDbVoxYm1OMGFXOXVJR3g0S0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnSWtWT1ZrMUJVRjlOVDBSRlgxSkZSa3hGUTFSSlQwNGlPd29nSUNBZ2FXWWdLSE11Wlc1MlRXRndLU0J6ZDJsMFkyZ29jeTVsYm5aTllYQk5iMlJsS1hzS0lDQWdJQ0FnSUNCallYTmxJSHBwT2dvZ0lDQWdJQ0FnSUdOaGMyVWdWM002Q2lBZ0lDQWdJQ0FnSUNBZ0lHVWdQU0FpUlU1V1RVRlFYMDFQUkVWZlVrVkdVa0ZEVkVsUFRpSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJR1U3Q24wS1puVnVZM1JwYjI0Z1kzZ29jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQWlSVTVXVFVGUVgwSk1SVTVFU1U1SFgwNVBUa1VpT3dvZ0lDQWdhV1lnS0hNdVpXNTJUV0Z3S1NCemQybDBZMmdvY3k1amIyMWlhVzVsS1hzS0lDQWdJQ0FnSUNCallYTmxJRlp6T2dvZ0lDQWdJQ0FnSUNBZ0lDQmxJRDBnSWtWT1ZrMUJVRjlDVEVWT1JFbE9SMTlOVlV4VVNWQk1XU0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUdOaGMyVWdSSFU2Q2lBZ0lDQWdJQ0FnSUNBZ0lHVWdQU0FpUlU1V1RVRlFYMEpNUlU1RVNVNUhYMDFKV0NJN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lHTmhjMlVnUm5VNkNpQWdJQ0FnSUNBZ0lDQWdJR1VnUFNBaVJVNVdUVUZRWDBKTVJVNUVTVTVIWDBGRVJDSTdDaUFnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJR1U3Q24wS1puVnVZM1JwYjI0Z2FIZ29jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdiR1YwSUdrZ1BTQnpMbWRsZEVOdmJuUmxlSFFvS1N3Z2NpQTlJSFF1WkdWbWFXNWxjeXdnYnlBOUlIUXVkbVZ5ZEdWNFUyaGhaR1Z5TENCaElEMGdkQzVtY21GbmJXVnVkRk5vWVdSbGNpd2diQ0E5SUc5NEtIUXBMQ0JqSUQwZ1lYZ29kQ2tzSUdnZ1BTQnNlQ2gwS1N3Z2RTQTlJR040S0hRcExDQmtJRDBnZEM1cGMxZGxZa2RNTWlBL0lDSWlJRG9nVVdjb2RDa3NJR1lnUFNCTFp5aHlLU3dnYlNBOUlHa3VZM0psWVhSbFVISnZaM0poYlNncExDQjRMQ0IyTENCbklEMGdkQzVuYkhOc1ZtVnljMmx2YmlBL0lDSWpkbVZ5YzJsdmJpQWlJQ3NnZEM1bmJITnNWbVZ5YzJsdmJpQXJJR0FLWUNBNklDSWlPd29nSUNBZ2RDNXBjMUpoZDFOb1lXUmxjazFoZEdWeWFXRnNJRDhnS0hnZ1BTQmJDaUFnSUNBZ0lDQWdaZ29nSUNBZ1hTNW1hV3gwWlhJb2NuSXBMbXB2YVc0b1lBcGdLU3dnZUM1c1pXNW5kR2dnUGlBd0lDWW1JQ2g0SUNzOUlHQUtZQ2tzSUhZZ1BTQmJDaUFnSUNBZ0lDQWdaQ3dLSUNBZ0lDQWdJQ0JtQ2lBZ0lDQmRMbVpwYkhSbGNpaHljaWt1YW05cGJpaGdDbUFwTENCMkxteGxibWQwYUNBK0lEQWdKaVlnS0hZZ0t6MGdZQXBnS1NrZ09pQW9lQ0E5SUZzS0lDQWdJQ0FnSUNCS2JDaDBLU3dLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0JUU0VGRVJWSmZUa0ZOUlNBaUlDc2dkQzV6YUdGa1pYSk9ZVzFsTEFvZ0lDQWdJQ0FnSUdZc0NpQWdJQ0FnSUNBZ2RDNXBibk4wWVc1amFXNW5JRDhnSWlOa1pXWnBibVVnVlZORlgwbE9VMVJCVGtOSlRrY2lJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXBibk4wWVc1amFXNW5RMjlzYjNJZ1B5QWlJMlJsWm1sdVpTQlZVMFZmU1U1VFZFRk9RMGxPUjE5RFQweFBVaUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk4xY0hCdmNuUnpWbVZ5ZEdWNFZHVjRkSFZ5WlhNZ1B5QWlJMlJsWm1sdVpTQldSVkpVUlZoZlZFVllWRlZTUlZNaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnVFVGWVgwSlBUa1ZUSUNJZ0t5QjBMbTFoZUVKdmJtVnpMQW9nSUNBZ0lDQWdJSFF1ZFhObFJtOW5JQ1ltSUhRdVptOW5JRDhnSWlOa1pXWnBibVVnVlZORlgwWlBSeUlnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblZ6WlVadlp5QW1KaUIwTG1adlowVjRjRElnUHlBaUkyUmxabWx1WlNCR1QwZGZSVmhRTWlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG0xaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiblpOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUlU1V1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVaVzUyVFdGd0lEOGdJaU5rWldacGJtVWdJaUFySUdnZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG14cFoyaDBUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMHhKUjBoVVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZVzlOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUVU5TlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWxiV2x6YzJsMlpVMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUZUVWxUVTBsV1JVMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbUoxYlhCTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlFsVk5VRTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG01dmNtMWhiRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlPVDFKTlFVeE5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV1YjNKdFlXeE5ZWEFnSmlZZ2RDNXZZbXBsWTNSVGNHRmpaVTV2Y20xaGJFMWhjQ0EvSUNJalpHVm1hVzVsSUU5Q1NrVkRWRk5RUVVORlgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtNXZjbTFoYkUxaGNDQW1KaUIwTG5SaGJtZGxiblJUY0dGalpVNXZjbTFoYkUxaGNDQS9JQ0lqWkdWbWFXNWxJRlJCVGtkRlRsUlRVRUZEUlY5T1QxSk5RVXhOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1amJHVmhjbU52WVhSTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlEweEZRVkpEVDBGVVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYME5NUlVGU1EwOUJWRjlTVDFWSFNFNUZVMU5OUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTB4RlFWSkRUMEZVWDA1UFVrMUJURTFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlCMExuTjFjSEJ2Y25SelZtVnlkR1Y0VkdWNGRIVnlaWE1nUHlBaUkyUmxabWx1WlNCVlUwVmZSRWxUVUV4QlEwVk5SVTVVVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzQmxZM1ZzWVhKTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUxQkZRMVZNUVZKTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRVRVZEVlV4QlVrbE9WRVZPVTBsVVdVMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlUxQkZRMVZNUVZKRFQweFBVazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5KdmRXZG9ibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5U1QxVkhTRTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRaWFJoYkc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZUVVZVUVV4T1JWTlRUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WVd4d2FHRk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRVXhRU0VGTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTBjbUZ1YzIxcGMzTnBiMjRnUHlBaUkyUmxabWx1WlNCVlUwVmZWRkpCVGxOTlNWTlRTVTlPSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEhKaGJuTnRhWE56YVc5dVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxUlNRVTVUVFVsVFUwbFBUazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Sb2FXTnJibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VVNFbERTMDVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXphR1ZsYmtOdmJHOXlUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5JUlVWT1EwOU1UMUpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlUU0VWRlRsSlBWVWRJVGtWVFUwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMblpsY25SbGVGUmhibWRsYm5SeklEOGdJaU5rWldacGJtVWdWVk5GWDFSQlRrZEZUbFFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaERiMnh2Y25NZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUTA5TVQxSWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoQmJIQm9ZWE1nUHlBaUkyUmxabWx1WlNCVlUwVmZRMDlNVDFKZlFVeFFTRUVpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUyWlhKMFpYaFZkbk1nUHlBaUkyUmxabWx1WlNCVlUwVmZWVllpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzUxZG5OV1pYSjBaWGhQYm14NUlEOGdJaU5rWldacGJtVWdWVlpUWDFaRlVsUkZXRjlQVGt4WklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpteGhkRk5vWVdScGJtY2dQeUFpSTJSbFptbHVaU0JHVEVGVVgxTklRVVJGUkNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5OcmFXNXVhVzVuSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5MU1U1T1NVNUhJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkWE5sVm1WeWRHVjRWR1Y0ZEhWeVpTQS9JQ0lqWkdWbWFXNWxJRUpQVGtWZlZFVllWRlZTUlNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG0xdmNuQm9WR0Z5WjJWMGN5QS9JQ0lqWkdWbWFXNWxJRlZUUlY5TlQxSlFTRlJCVWtkRlZGTWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNXRiM0p3YUU1dmNtMWhiSE1nSmlZZ2RDNW1iR0YwVTJoaFpHbHVaeUE5UFQwZ0lURWdQeUFpSTJSbFptbHVaU0JWVTBWZlRVOVNVRWhPVDFKTlFVeFRJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViVzl5Y0doVVlYSm5aWFJ6SUNZbUlIUXVhWE5YWldKSFRESWdQeUFpSTJSbFptbHVaU0JOVDFKUVNGUkJVa2RGVkZOZlZFVllWRlZTUlNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG0xdmNuQm9WR0Z5WjJWMGN5QW1KaUIwTG1selYyVmlSMHd5SUQ4Z0lpTmtaV1pwYm1VZ1RVOVNVRWhVUVZKSFJWUlRYME5QVlU1VUlDSWdLeUIwTG0xdmNuQm9WR0Z5WjJWMGMwTnZkVzUwSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVrYjNWaWJHVlRhV1JsWkNBL0lDSWpaR1ZtYVc1bElFUlBWVUpNUlY5VFNVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVpzYVhCVGFXUmxaQ0EvSUNJalpHVm1hVzVsSUVaTVNWQmZVMGxFUlVRaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1emFHRmtiM2ROWVhCRmJtRmliR1ZrSUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5JUVVSUFYwMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdQeUFpSTJSbFptbHVaU0FpSUNzZ2JDQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMybDZaVUYwZEdWdWRXRjBhVzl1SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5KV2tWQlZGUkZUbFZCVkVsUFRpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnUHlBaUkyUmxabWx1WlNCVlUwVmZURTlIUkVWUVZFaENWVVlpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzVzYjJkaGNtbDBhRzFwWTBSbGNIUm9RblZtWm1WeUlDWW1JSFF1Y21WdVpHVnlaWEpGZUhSbGJuTnBiMjVHY21GblJHVndkR2dnUHlBaUkyUmxabWx1WlNCVlUwVmZURTlIUkVWUVZFaENWVVpmUlZoVUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUcxaGREUWdiVzlrWld4TllYUnlhWGc3SWl3S0lDQWdJQ0FnSUNBaWRXNXBabTl5YlNCdFlYUTBJRzF2WkdWc1ZtbGxkMDFoZEhKcGVEc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJRzFoZERRZ2NISnZhbVZqZEdsdmJrMWhkSEpwZURzaUxBb2dJQ0FnSUNBZ0lDSjFibWxtYjNKdElHMWhkRFFnZG1sbGQwMWhkSEpwZURzaUxBb2dJQ0FnSUNBZ0lDSjFibWxtYjNKdElHMWhkRE1nYm05eWJXRnNUV0YwY21sNE95SXNDaUFnSUNBZ0lDQWdJblZ1YVdadmNtMGdkbVZqTXlCallXMWxjbUZRYjNOcGRHbHZianNpTEFvZ0lDQWdJQ0FnSUNKMWJtbG1iM0p0SUdKdmIyd2dhWE5QY25Sb2IyZHlZWEJvYVdNN0lpd0tJQ0FnSUNBZ0lDQWlJMmxtWkdWbUlGVlRSVjlKVGxOVVFVNURTVTVISWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQnRZWFEwSUdsdWMzUmhibU5sVFdGMGNtbDRPeUlzQ2lBZ0lDQWdJQ0FnSWlObGJtUnBaaUlzQ2lBZ0lDQWdJQ0FnSWlOcFptUmxaaUJWVTBWZlNVNVRWRUZPUTBsT1IxOURUMHhQVWlJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdkbVZqTXlCcGJuTjBZVzVqWlVOdmJHOXlPeUlzQ2lBZ0lDQWdJQ0FnSWlObGJtUnBaaUlzQ2lBZ0lDQWdJQ0FnSW1GMGRISnBZblYwWlNCMlpXTXpJSEJ2YzJsMGFXOXVPeUlzQ2lBZ0lDQWdJQ0FnSW1GMGRISnBZblYwWlNCMlpXTXpJRzV2Y20xaGJEc2lMQW9nSUNBZ0lDQWdJQ0poZEhSeWFXSjFkR1VnZG1Wak1pQjFkanNpTEFvZ0lDQWdJQ0FnSUNJamFXWmtaV1lnVlZORlgxUkJUa2RGVGxRaUxBb2dJQ0FnSUNBZ0lDSUpZWFIwY21saWRYUmxJSFpsWXpRZ2RHRnVaMlZ1ZERzaUxBb2dJQ0FnSUNBZ0lDSWpaVzVrYVdZaUxBb2dJQ0FnSUNBZ0lDSWphV1lnWkdWbWFXNWxaQ2dnVlZORlgwTlBURTlTWDBGTVVFaEJJQ2tpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZelFnWTI5c2IzSTdJaXdLSUNBZ0lDQWdJQ0FpSTJWc2FXWWdaR1ZtYVc1bFpDZ2dWVk5GWDBOUFRFOVNJQ2tpTEFvZ0lDQWdJQ0FnSUNJSllYUjBjbWxpZFhSbElIWmxZek1nWTI5c2IzSTdJaXdLSUNBZ0lDQWdJQ0FpSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0FpSTJsbUlDZ2daR1ZtYVc1bFpDZ2dWVk5GWDAxUFVsQklWRUZTUjBWVVV5QXBJQ1ltSUNFZ1pHVm1hVzVsWkNnZ1RVOVNVRWhVUVZKSFJWUlRYMVJGV0ZSVlVrVWdLU0FwSWl3S0lDQWdJQ0FnSUNBaUNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME1Ec2lMQW9nSUNBZ0lDQWdJQ0lKWVhSMGNtbGlkWFJsSUhabFl6TWdiVzl5Y0doVVlYSm5aWFF4T3lJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdkbVZqTXlCdGIzSndhRlJoY21kbGRESTdJaXdLSUNBZ0lDQWdJQ0FpQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTXpzaUxBb2dJQ0FnSUNBZ0lDSUpJMmxtWkdWbUlGVlRSVjlOVDFKUVNFNVBVazFCVEZNaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVG05eWJXRnNNRHNpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9UbTl5YldGc01Uc2lMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1RtOXliV0ZzTWpzaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVG05eWJXRnNNenNpTEFvZ0lDQWdJQ0FnSUNJSkkyVnNjMlVpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME5Ec2lMQW9nSUNBZ0lDQWdJQ0lKQ1dGMGRISnBZblYwWlNCMlpXTXpJRzF2Y25Cb1ZHRnlaMlYwTlRzaUxBb2dJQ0FnSUNBZ0lDSUpDV0YwZEhKcFluVjBaU0IyWldNeklHMXZjbkJvVkdGeVoyVjBOanNpTEFvZ0lDQWdJQ0FnSUNJSkNXRjBkSEpwWW5WMFpTQjJaV016SUcxdmNuQm9WR0Z5WjJWME56c2lMQW9nSUNBZ0lDQWdJQ0lKSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0FpSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0FpSTJsbVpHVm1JRlZUUlY5VFMwbE9Ua2xPUnlJc0NpQWdJQ0FnSUNBZ0lnbGhkSFJ5YVdKMWRHVWdkbVZqTkNCemEybHVTVzVrWlhnN0lpd0tJQ0FnSUNBZ0lDQWlDV0YwZEhKcFluVjBaU0IyWldNMElITnJhVzVYWldsbmFIUTdJaXdLSUNBZ0lDQWdJQ0FpSTJWdVpHbG1JaXdLSUNBZ0lDQWdJQ0JnQ21BS0lDQWdJRjB1Wm1sc2RHVnlLSEp5S1M1cWIybHVLR0FLWUNrc0lIWWdQU0JiQ2lBZ0lDQWdJQ0FnWkN3S0lDQWdJQ0FnSUNCS2JDaDBLU3dLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0JUU0VGRVJWSmZUa0ZOUlNBaUlDc2dkQzV6YUdGa1pYSk9ZVzFsTEFvZ0lDQWdJQ0FnSUdZc0NpQWdJQ0FnSUNBZ2RDNTFjMlZHYjJjZ0ppWWdkQzVtYjJjZ1B5QWlJMlJsWm1sdVpTQlZVMFZmUms5SElpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWRYTmxSbTluSUNZbUlIUXVabTluUlhod01pQS9JQ0lqWkdWbWFXNWxJRVpQUjE5RldGQXlJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG0xaGRHTmhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOU5RVlJEUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJuWk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZSVTVXVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpXNTJUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ0lpQXJJR01nT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbVZ1ZGsxaGNDQS9JQ0lqWkdWbWFXNWxJQ0lnS3lCb0lEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1bGJuWk5ZWEFnUHlBaUkyUmxabWx1WlNBaUlDc2dkU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViR2xuYUhSTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlRFbEhTRlJOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1aGIwMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOUJUMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1WdGFYTnphWFpsVFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBWTlNWTlRTVlpGVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVluVnRjRTFoY0NBL0lDSWpaR1ZtYVc1bElGVlRSVjlDVlUxUVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVibTl5YldGc1RXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtNXZjbTFoYkUxaGNDQW1KaUIwTG05aWFtVmpkRk53WVdObFRtOXliV0ZzVFdGd0lEOGdJaU5rWldacGJtVWdUMEpLUlVOVVUxQkJRMFZmVGs5U1RVRk1UVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ym05eWJXRnNUV0Z3SUNZbUlIUXVkR0Z1WjJWdWRGTndZV05sVG05eWJXRnNUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZFRk9SMFZPVkZOUVFVTkZYMDVQVWsxQlRFMUJVQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbU5zWldGeVkyOWhkQ0EvSUNJalpHVm1hVzVsSUZWVFJWOURURVZCVWtOUFFWUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZRMHhGUVZKRFQwRlVUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0lEOGdJaU5rWldacGJtVWdWVk5GWDBOTVJVRlNRMDlCVkY5U1QxVkhTRTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlEweEZRVkpEVDBGVVgwNVBVazFCVEUxQlVDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTndaV04xYkdGeVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTlFSVU5WVEVGU1RVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVMUJGUTFWTVFWSkpUbFJGVGxOSlZGbE5RVkFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV6Y0dWamRXeGhja052Ykc5eVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxTlFSVU5WVEVGU1EwOU1UMUpOUVZBaUlEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1eWIzVm5hRzVsYzNOTllYQWdQeUFpSTJSbFptbHVaU0JWVTBWZlVrOVZSMGhPUlZOVFRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViV1YwWVd4dVpYTnpUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMDFGVkVGTVRrVlRVMDFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG1Gc2NHaGhUV0Z3SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMEZNVUVoQlRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVZV3h3YUdGVVpYTjBJRDhnSWlOa1pXWnBibVVnVlZORlgwRk1VRWhCVkVWVFZDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuTm9aV1Z1SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMU5JUlVWT0lpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGxaVzVEYjJ4dmNrMWhjQ0EvSUNJalpHVm1hVzVsSUZWVFJWOVRTRVZGVGtOUFRFOVNUVUZRSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnUHlBaUkyUmxabWx1WlNCVlUwVmZVMGhGUlU1U1QxVkhTRTVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTBjbUZ1YzIxcGMzTnBiMjRnUHlBaUkyUmxabWx1WlNCVlUwVmZWRkpCVGxOTlNWTlRTVTlPSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZEhKaGJuTnRhWE56YVc5dVRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgxUlNRVTVUVFVsVFUwbFBUazFCVUNJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5Sb2FXTnJibVZ6YzAxaGNDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5VVNFbERTMDVGVTFOTlFWQWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNTJaWEowWlhoVVlXNW5aVzUwY3lBL0lDSWpaR1ZtYVc1bElGVlRSVjlVUVU1SFJVNVVJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFEyOXNiM0p6SUh4OElIUXVhVzV6ZEdGdVkybHVaME52Ykc5eUlEOGdJaU5rWldacGJtVWdWVk5GWDBOUFRFOVNJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVkbVZ5ZEdWNFFXeHdhR0Z6SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYME5QVEU5U1gwRk1VRWhCSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZG1WeWRHVjRWWFp6SUQ4Z0lpTmtaV1pwYm1VZ1ZWTkZYMVZXSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1ZFhaelZtVnlkR1Y0VDI1c2VTQS9JQ0lqWkdWbWFXNWxJRlZXVTE5V1JWSlVSVmhmVDA1TVdTSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtZHlZV1JwWlc1MFRXRndJRDhnSWlOa1pXWnBibVVnVlZORlgwZFNRVVJKUlU1VVRVRlFJaUE2SUNJaUxBb2dJQ0FnSUNBZ0lIUXVabXhoZEZOb1lXUnBibWNnUHlBaUkyUmxabWx1WlNCR1RFRlVYMU5JUVVSRlJDSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExtUnZkV0pzWlZOcFpHVmtJRDhnSWlOa1pXWnBibVVnUkU5VlFreEZYMU5KUkVWRUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpteHBjRk5wWkdWa0lEOGdJaU5rWldacGJtVWdSa3hKVUY5VFNVUkZSQ0lnT2lBaUlpd0tJQ0FnSUNBZ0lDQjBMbk5vWVdSdmQwMWhjRVZ1WVdKc1pXUWdQeUFpSTJSbFptbHVaU0JWVTBWZlUwaEJSRTlYVFVGUUlpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGhaRzkzVFdGd1JXNWhZbXhsWkNBL0lDSWpaR1ZtYVc1bElDSWdLeUJzSURvZ0lpSXNDaUFnSUNBZ0lDQWdkQzV3Y21WdGRXeDBhWEJzYVdWa1FXeHdhR0VnUHlBaUkyUmxabWx1WlNCUVVrVk5WVXhVU1ZCTVNVVkVYMEZNVUVoQklpQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWNHaDVjMmxqWVd4c2VVTnZjbkpsWTNSTWFXZG9kSE1nUHlBaUkyUmxabWx1WlNCUVNGbFRTVU5CVEV4WlgwTlBVbEpGUTFSZlRFbEhTRlJUSWlBNklDSWlMQW9nSUNBZ0lDQWdJSFF1Ykc5bllYSnBkR2h0YVdORVpYQjBhRUoxWm1abGNpQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TVQwZEVSVkJVU0VKVlJpSWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExteHZaMkZ5YVhSb2JXbGpSR1Z3ZEdoQ2RXWm1aWElnSmlZZ2RDNXlaVzVrWlhKbGNrVjRkR1Z1YzJsdmJrWnlZV2RFWlhCMGFDQS9JQ0lqWkdWbWFXNWxJRlZUUlY5TVQwZEVSVkJVU0VKVlJsOUZXRlFpSURvZ0lpSXNDaUFnSUNBZ0lDQWdLSFF1WlhoMFpXNXphVzl1VTJoaFpHVnlWR1Y0ZEhWeVpVeFBSQ0I4ZkNCMExtVnVkazFoY0NrZ0ppWWdkQzV5Wlc1a1pYSmxja1Y0ZEdWdWMybHZibE5vWVdSbGNsUmxlSFIxY21WTWIyUWdQeUFpSTJSbFptbHVaU0JVUlZoVVZWSkZYMHhQUkY5RldGUWlJRG9nSWlJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2JXRjBOQ0IyYVdWM1RXRjBjbWw0T3lJc0NpQWdJQ0FnSUNBZ0luVnVhV1p2Y20wZ2RtVmpNeUJqWVcxbGNtRlFiM05wZEdsdmJqc2lMQW9nSUNBZ0lDQWdJQ0oxYm1sbWIzSnRJR0p2YjJ3Z2FYTlBjblJvYjJkeVlYQm9hV003SWl3S0lDQWdJQ0FnSUNCMExuUnZibVZOWVhCd2FXNW5JQ0U5UFNCZmJpQS9JQ0lqWkdWbWFXNWxJRlJQVGtWZlRVRlFVRWxPUnlJZ09pQWlJaXdLSUNBZ0lDQWdJQ0IwTG5SdmJtVk5ZWEJ3YVc1bklDRTlQU0JmYmlBL0lFWmxMblJ2Ym1WdFlYQndhVzVuWDNCaGNuTmZabkpoWjIxbGJuUWdPaUFpSWl3S0lDQWdJQ0FnSUNCMExuUnZibVZOWVhCd2FXNW5JQ0U5UFNCZmJpQS9JR3BuS0NKMGIyNWxUV0Z3Y0dsdVp5SXNJSFF1ZEc5dVpVMWhjSEJwYm1jcElEb2dJaUlzQ2lBZ0lDQWdJQ0FnZEM1a2FYUm9aWEpwYm1jZ1B5QWlJMlJsWm1sdVpTQkVTVlJJUlZKSlRrY2lJRG9nSWlJc0NpQWdJQ0FnSUNBZ2RDNW1iM0p0WVhRZ1BUMDlJRWR1SUQ4Z0lpTmtaV1pwYm1VZ1QxQkJVVlZGSWlBNklDSWlMQW9nSUNBZ0lDQWdJRVpsTG1WdVkyOWthVzVuYzE5d1lYSnpYMlp5WVdkdFpXNTBMQW9nSUNBZ0lDQWdJSFF1YldGd0lEOGdSRzRvSW0xaGNGUmxlR1ZzVkc5TWFXNWxZWElpTENCMExtMWhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lIUXViV0YwWTJGd0lEOGdSRzRvSW0xaGRHTmhjRlJsZUdWc1ZHOU1hVzVsWVhJaUxDQjBMbTFoZEdOaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdVpXNTJUV0Z3SUQ4Z1JHNG9JbVZ1ZGsxaGNGUmxlR1ZzVkc5TWFXNWxZWElpTENCMExtVnVkazFoY0VWdVkyOWthVzVuS1NBNklDSWlMQW9nSUNBZ0lDQWdJSFF1WlcxcGMzTnBkbVZOWVhBZ1B5QkViaWdpWlcxcGMzTnBkbVZOWVhCVVpYaGxiRlJ2VEdsdVpXRnlJaXdnZEM1bGJXbHpjMmwyWlUxaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBL0lFUnVLQ0p6Y0dWamRXeGhja052Ykc5eVRXRndWR1Y0Wld4VWIweHBibVZoY2lJc0lIUXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWMyaGxaVzVEYjJ4dmNrMWhjQ0EvSUVSdUtDSnphR1ZsYmtOdmJHOXlUV0Z3VkdWNFpXeFViMHhwYm1WaGNpSXNJSFF1YzJobFpXNURiMnh2Y2sxaGNFVnVZMjlrYVc1bktTQTZJQ0lpTEFvZ0lDQWdJQ0FnSUhRdWJHbG5hSFJOWVhBZ1B5QkViaWdpYkdsbmFIUk5ZWEJVWlhobGJGUnZUR2x1WldGeUlpd2dkQzVzYVdkb2RFMWhjRVZ1WTI5a2FXNW5LU0E2SUNJaUxBb2dJQ0FnSUNBZ0lDUm5LQ0pzYVc1bFlYSlViMDkxZEhCMWRGUmxlR1ZzSWl3Z2RDNXZkWFJ3ZFhSRmJtTnZaR2x1Wnlrc0NpQWdJQ0FnSUNBZ2RDNWtaWEIwYUZCaFkydHBibWNnUHlBaUkyUmxabWx1WlNCRVJWQlVTRjlRUVVOTFNVNUhJQ0lnS3lCMExtUmxjSFJvVUdGamEybHVaeUE2SUNJaUxBb2dJQ0FnSUNBZ0lHQUtZQW9nSUNBZ1hTNW1hV3gwWlhJb2NuSXBMbXB2YVc0b1lBcGdLU2tzSUc4Z1BTQnlZU2h2S1N3Z2J5QTlJRmRzS0c4c0lIUXBMQ0J2SUQwZ2NXd29ieXdnZENrc0lHRWdQU0J5WVNoaEtTd2dZU0E5SUZkc0tHRXNJSFFwTENCaElEMGdjV3dvWVN3Z2RDa3NJRzhnUFNCWWJDaHZLU3dnWVNBOUlGaHNLR0VwTENCMExtbHpWMlZpUjB3eUlDWW1JSFF1YVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkNBaFBUMGdJVEFnSmlZZ0tHY2dQU0JnSTNabGNuTnBiMjRnTXpBd0lHVnpDbUFzSUhnZ1BTQmJDaUFnSUNBZ0lDQWdJbkJ5WldOcGMybHZiaUJ0WldScGRXMXdJSE5oYlhCc1pYSXlSRUZ5Y21GNU95SXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdZWFIwY21saWRYUmxJR2x1SWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMllYSjVhVzVuSUc5MWRDSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdkR1Y0ZEhWeVpUSkVJSFJsZUhSMWNtVWlDaUFnSUNCZExtcHZhVzRvWUFwZ0tTQXJJR0FLWUNBcklIZ3NJSFlnUFNCYkNpQWdJQ0FnSUNBZ0lpTmtaV1pwYm1VZ2RtRnllV2x1WnlCcGJpSXNDaUFnSUNBZ0lDQWdkQzVuYkhOc1ZtVnljMmx2YmlBOVBUMGdlR3dnUHlBaUlpQTZJQ0pzWVhsdmRYUW9iRzlqWVhScGIyNGdQU0F3S1NCdmRYUWdhR2xuYUhBZ2RtVmpOQ0J3WTE5bWNtRm5RMjlzYjNJN0lpd0tJQ0FnSUNBZ0lDQjBMbWRzYzJ4V1pYSnphVzl1SUQwOVBTQjRiQ0EvSUNJaUlEb2dJaU5rWldacGJtVWdaMnhmUm5KaFowTnZiRzl5SUhCalgyWnlZV2REYjJ4dmNpSXNDaUFnSUNBZ0lDQWdJaU5rWldacGJtVWdaMnhmUm5KaFowUmxjSFJvUlZoVUlHZHNYMFp5WVdkRVpYQjBhQ0lzQ2lBZ0lDQWdJQ0FnSWlOa1pXWnBibVVnZEdWNGRIVnlaVEpFSUhSbGVIUjFjbVVpTEFvZ0lDQWdJQ0FnSUNJalpHVm1hVzVsSUhSbGVIUjFjbVZEZFdKbElIUmxlSFIxY21VaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21VeVJGQnliMm9nZEdWNGRIVnlaVkJ5YjJvaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21VeVJFeHZaRVZZVkNCMFpYaDBkWEpsVEc5a0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbE1rUlFjbTlxVEc5a1JWaFVJSFJsZUhSMWNtVlFjbTlxVEc5a0lpd0tJQ0FnSUNBZ0lDQWlJMlJsWm1sdVpTQjBaWGgwZFhKbFEzVmlaVXh2WkVWWVZDQjBaWGgwZFhKbFRHOWtJaXdLSUNBZ0lDQWdJQ0FpSTJSbFptbHVaU0IwWlhoMGRYSmxNa1JIY21Ga1JWaFVJSFJsZUhSMWNtVkhjbUZrSWl3S0lDQWdJQ0FnSUNBaUkyUmxabWx1WlNCMFpYaDBkWEpsTWtSUWNtOXFSM0poWkVWWVZDQjBaWGgwZFhKbFVISnZha2R5WVdRaUxBb2dJQ0FnSUNBZ0lDSWpaR1ZtYVc1bElIUmxlSFIxY21WRGRXSmxSM0poWkVWWVZDQjBaWGgwZFhKbFIzSmhaQ0lLSUNBZ0lGMHVhbTlwYmloZ0NtQXBJQ3NnWUFwZ0lDc2dkaWs3Q2lBZ0lDQnNaWFFnY0NBOUlHY2dLeUI0SUNzZ2J5d2dYeUE5SUdjZ0t5QjJJQ3NnWVN3Z2VTQTlJRWRzS0drc0lETTFOak16TENCd0tTd2dZaUE5SUVkc0tHa3NJRE0xTmpNeUxDQmZLVHNLSUNBZ0lHbG1JQ2hwTG1GMGRHRmphRk5vWVdSbGNpaHRMQ0I1S1N3Z2FTNWhkSFJoWTJoVGFHRmtaWElvYlN3Z1lpa3NJSFF1YVc1a1pYZ3dRWFIwY21saWRYUmxUbUZ0WlNBaFBUMGdkbTlwWkNBd0lEOGdhUzVpYVc1a1FYUjBjbWxpVEc5allYUnBiMjRvYlN3Z01Dd2dkQzVwYm1SbGVEQkJkSFJ5YVdKMWRHVk9ZVzFsS1NBNklIUXViVzl5Y0doVVlYSm5aWFJ6SUQwOVBTQWhNQ0FtSmlCcExtSnBibVJCZEhSeWFXSk1iMk5oZEdsdmJpaHRMQ0F3TENBaWNHOXphWFJwYjI0aUtTd2dhUzVzYVc1clVISnZaM0poYlNodEtTd2djeTVrWldKMVp5NWphR1ZqYTFOb1lXUmxja1Z5Y205eWN5a2dld29nSUNBZ0lDQWdJR3hsZENCSklEMGdhUzVuWlhSUWNtOW5jbUZ0U1c1bWIweHZaeWh0S1M1MGNtbHRLQ2tzSUdzZ1BTQnBMbWRsZEZOb1lXUmxja2x1Wm05TWIyY29lU2t1ZEhKcGJTZ3BMQ0JDSUQwZ2FTNW5aWFJUYUdGa1pYSkpibVp2VEc5bktHSXBMblJ5YVcwb0tTd2dVQ0E5SUNFd0xDQjNJRDBnSVRBN0NpQWdJQ0FnSUNBZ2FXWWdLR2t1WjJWMFVISnZaM0poYlZCaGNtRnRaWFJsY2lodExDQXpOVGN4TkNrZ1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRkFnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFVWdQU0JXYkNocExDQjVMQ0FpZG1WeWRHVjRJaWtzSUVRZ1BTQldiQ2hwTENCaUxDQWlabkpoWjIxbGJuUWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4UWNtOW5jbUZ0T2lCVGFHRmtaWElnUlhKeWIzSWdJaUFySUdrdVoyVjBSWEp5YjNJb0tTQXJJQ0lnTFNCV1FVeEpSRUZVUlY5VFZFRlVWVk1nSWlBcklHa3VaMlYwVUhKdlozSmhiVkJoY21GdFpYUmxjaWh0TENBek5UY3hOU2tnS3lCZ0NncFFjbTluY21GdElFbHVabThnVEc5bk9pQmdJQ3NnU1NBcklHQUtZQ0FySUVVZ0t5QmdDbUFnS3lCRUtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1NTQWhQVDBnSWlJZ1B5QmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVISnZaM0poYlRvZ1VISnZaM0poYlNCSmJtWnZJRXh2WnpvaUxDQkpLU0E2SUNocklEMDlQU0FpSWlCOGZDQkNJRDA5UFNBaUlpa2dKaVlnS0hjZ1BTQWhNU2s3Q2lBZ0lDQWdJQ0FnZHlBbUppQW9kR2hwY3k1a2FXRm5ibTl6ZEdsamN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NuVnVibUZpYkdVNklGQXNDaUFnSUNBZ0lDQWdJQ0FnSUhCeWIyZHlZVzFNYjJjNklFa3NDaUFnSUNBZ0lDQWdJQ0FnSUhabGNuUmxlRk5vWVdSbGNqb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiRzluT2lCckxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NISmxabWw0T2lCNENpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc2IyYzZJRUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Y21WbWFYZzZJSFlLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ2ZRb2dJQ0FnYVM1a1pXeGxkR1ZUYUdGa1pYSW9lU2tzSUdrdVpHVnNaWFJsVTJoaFpHVnlLR0lwT3dvZ0lDQWdiR1YwSUVFN0NpQWdJQ0IwYUdsekxtZGxkRlZ1YVdadmNtMXpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVFZ1BUMDlJSFp2YVdRZ01DQW1KaUFvUVNBOUlHNWxkeUJpYmlocExDQnRLU2tzSUVFN0NpQWdJQ0I5T3dvZ0lDQWdiR1YwSUV3N0NpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUkJkSFJ5YVdKMWRHVnpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUV3Z1BUMDlJSFp2YVdRZ01DQW1KaUFvVENBOUlHVjRLR2tzSUcwcEtTd2dURHNLSUNBZ0lIMHNJSFJvYVhNdVpHVnpkSEp2ZVNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJRzR1Y21Wc1pXRnpaVk4wWVhSbGMwOW1VSEp2WjNKaGJTaDBhR2x6S1N3Z2FTNWtaV3hsZEdWUWNtOW5jbUZ0S0cwcExDQjBhR2x6TG5CeWIyZHlZVzBnUFNCMmIybGtJREE3Q2lBZ0lDQjlMQ0IwYUdsekxtNWhiV1VnUFNCMExuTm9ZV1JsY2s1aGJXVXNJSFJvYVhNdWFXUWdQU0JaWnlzckxDQjBhR2x6TG1OaFkyaGxTMlY1SUQwZ1pTd2dkR2hwY3k1MWMyVmtWR2x0WlhNZ1BTQXhMQ0IwYUdsekxuQnliMmR5WVcwZ1BTQnRMQ0IwYUdsekxuWmxjblJsZUZOb1lXUmxjaUE5SUhrc0lIUm9hWE11Wm5KaFoyMWxiblJUYUdGa1pYSWdQU0JpTENCMGFHbHpPd3A5Q25aaGNpQjFlQ0E5SURBc0lHZG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuTm9ZV1JsY2tOaFkyaGxJRDBnYm1WM0lFMWhjQ3dnZEdocGN5NXRZWFJsY21saGJFTmhZMmhsSUQwZ2JtVjNJRTFoY0RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMblpsY25SbGVGTm9ZV1JsY2l3Z2JpQTlJR1V1Wm5KaFoyMWxiblJUYUdGa1pYSXNJR2tnUFNCMGFHbHpMbDluWlhSVGFHRmtaWEpUZEdGblpTaDBLU3dnY2lBOUlIUm9hWE11WDJkbGRGTm9ZV1JsY2xOMFlXZGxLRzRwTENCdklEMGdkR2hwY3k1ZloyVjBVMmhoWkdWeVEyRmphR1ZHYjNKTllYUmxjbWxoYkNobEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2J5NW9ZWE1vYVNrZ1BUMDlJQ0V4SUNZbUlDaHZMbUZrWkNocEtTd2dhUzUxYzJWa1ZHbHRaWE1yS3lrc0lHOHVhR0Z6S0hJcElEMDlQU0FoTVNBbUppQW9ieTVoWkdRb2Npa3NJSEl1ZFhObFpGUnBiV1Z6S3lzcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2NtVnRiM1psS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11YldGMFpYSnBZV3hEWVdOb1pTNW5aWFFvWlNrN0NpQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2JpQnZaaUIwS1c0dWRYTmxaRlJwYldWekxTMHNJRzR1ZFhObFpGUnBiV1Z6SUQwOVBTQXdJQ1ltSUhSb2FYTXVjMmhoWkdWeVEyRmphR1V1WkdWc1pYUmxLRzRwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMWhkR1Z5YVdGc1EyRmphR1V1WkdWc1pYUmxLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWjJWMFZtVnlkR1Y0VTJoaFpHVnlTVVFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDluWlhSVGFHRmtaWEpUZEdGblpTaGxMblpsY25SbGVGTm9ZV1JsY2lrdWFXUTdDaUFnSUNCOUNpQWdJQ0JuWlhSR2NtRm5iV1Z1ZEZOb1lXUmxja2xFS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWjJWMFUyaGhaR1Z5VTNSaFoyVW9aUzVtY21GbmJXVnVkRk5vWVdSbGNpa3VhV1E3Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YzJoaFpHVnlRMkZqYUdVdVkyeGxZWElvS1N3Z2RHaHBjeTV0WVhSbGNtbGhiRU5oWTJobExtTnNaV0Z5S0NrN0NpQWdJQ0I5Q2lBZ0lDQmZaMlYwVTJoaFpHVnlRMkZqYUdWR2IzSk5ZWFJsY21saGJDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtMWhkR1Z5YVdGc1EyRmphR1U3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1YUdGektHVXBJRDA5UFNBaE1TQW1KaUIwTG5ObGRDaGxMQ0J1WlhjZ1UyVjBLU3dnZEM1blpYUW9aU2s3Q2lBZ0lDQjlDaUFnSUNCZloyVjBVMmhoWkdWeVUzUmhaMlVvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV6YUdGa1pYSkRZV05vWlRzS0lDQWdJQ0FnSUNCcFppQW9kQzVvWVhNb1pTa2dQVDA5SUNFeEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnYm1WM0lIaG9Pd29nSUNBZ0lDQWdJQ0FnSUNCMExuTmxkQ2hsTENCdUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVaMlYwS0dVcE93b2dJQ0FnZlFwOUxDQjRhQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnZEdocGN5NXBaQ0E5SUhWNEt5c3NJSFJvYVhNdWRYTmxaRlJwYldWeklEMGdNRHNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnWkhnb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5a2dld29nSUNBZ2JHVjBJR0VnUFNCdVpYY2dTbk1zSUd3Z1BTQnVaWGNnWjJnc0lHTWdQU0JiWFN3Z2FDQTlJR2t1YVhOWFpXSkhURElzSUhVZ1BTQnBMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJc0lHUWdQU0JwTG1ac2IyRjBWbVZ5ZEdWNFZHVjRkSFZ5WlhNc0lHWWdQU0JwTG0xaGVGWmxjblJsZUZWdWFXWnZjbTF6TENCdElEMGdhUzUyWlhKMFpYaFVaWGgwZFhKbGN5d2dlQ0E5SUdrdWNISmxZMmx6YVc5dUxDQjJJRDBnZXdvZ0lDQWdJQ0FnSUUxbGMyaEVaWEIwYUUxaGRHVnlhV0ZzT2lBaVpHVndkR2dpTEFvZ0lDQWdJQ0FnSUUxbGMyaEVhWE4wWVc1alpVMWhkR1Z5YVdGc09pQWlaR2x6ZEdGdVkyVlNSMEpCSWl3S0lDQWdJQ0FnSUNCTlpYTm9UbTl5YldGc1RXRjBaWEpwWVd3NklDSnViM0p0WVd3aUxBb2dJQ0FnSUNBZ0lFMWxjMmhDWVhOcFkwMWhkR1Z5YVdGc09pQWlZbUZ6YVdNaUxBb2dJQ0FnSUNBZ0lFMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXdzZJQ0pzWVcxaVpYSjBJaXdLSUNBZ0lDQWdJQ0JOWlhOb1VHaHZibWROWVhSbGNtbGhiRG9nSW5Cb2IyNW5JaXdLSUNBZ0lDQWdJQ0JOWlhOb1ZHOXZiazFoZEdWeWFXRnNPaUFpZEc5dmJpSXNDaUFnSUNBZ0lDQWdUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3c2SUNKd2FIbHphV05oYkNJc0NpQWdJQ0FnSUNBZ1RXVnphRkJvZVhOcFkyRnNUV0YwWlhKcFlXdzZJQ0p3YUhsemFXTmhiQ0lzQ2lBZ0lDQWdJQ0FnVFdWemFFMWhkR05oY0UxaGRHVnlhV0ZzT2lBaWJXRjBZMkZ3SWl3S0lDQWdJQ0FnSUNCTWFXNWxRbUZ6YVdOTllYUmxjbWxoYkRvZ0ltSmhjMmxqSWl3S0lDQWdJQ0FnSUNCTWFXNWxSR0Z6YUdWa1RXRjBaWEpwWVd3NklDSmtZWE5vWldRaUxBb2dJQ0FnSUNBZ0lGQnZhVzUwYzAxaGRHVnlhV0ZzT2lBaWNHOXBiblJ6SWl3S0lDQWdJQ0FnSUNCVGFHRmtiM2ROWVhSbGNtbGhiRG9nSW5Ob1lXUnZkeUlzQ2lBZ0lDQWdJQ0FnVTNCeWFYUmxUV0YwWlhKcFlXdzZJQ0p6Y0hKcGRHVWlDaUFnSUNCOU93b2dJQ0FnWm5WdVkzUnBiMjRnWnloM0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUVRZ1BTQjNMbk5yWld4bGRHOXVMbUp2Ym1Wek93b2dJQ0FnSUNBZ0lHbG1JQ2hrS1NCeVpYUjFjbTRnTVRBeU5Ec0tJQ0FnSUNBZ0lDQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdJRDBnVFdGMGFDNW1iRzl2Y2lnb1ppQXRJREl3S1NBdklEUXBMQ0JQSUQwZ1RXRjBhQzV0YVc0b1Jpd2dSQzVzWlc1bmRHZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVHlBOElFUXViR1Z1WjNSb0lEOGdLR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dVMnRsYkdWMGIyNGdhR0Z6SUNJZ0t5QkVMbXhsYm1kMGFDQXJJQ0lnWW05dVpYTXVJRlJvYVhNZ1IxQlZJSE4xY0hCdmNuUnpJQ0lnS3lCUElDc2dJaTRpS1N3Z01Da2dPaUJQT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIQW9keWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQkZPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjNJQ1ltSUhjdWFYTlVaWGgwZFhKbElEOGdSU0E5SUhjdVpXNWpiMlJwYm1jZ09pQjNJQ1ltSUhjdWFYTlhaV0pIVEZKbGJtUmxjbFJoY21kbGRDQS9JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VSEp2WjNKaGJYTXVaMlYwVkdWNGRIVnlaVVZ1WTI5a2FXNW5Sbkp2YlUxaGNEb2daRzl1SjNRZ2RYTmxJSEpsYm1SbGNpQjBZWEpuWlhSeklHRnpJSFJsZUhSMWNtVnpMaUJWYzJVZ2RHaGxhWElnTG5SbGVIUjFjbVVnY0hKdmNHVnlkSGtnYVc1emRHVmhaQzRpS1N3Z1JTQTlJSGN1ZEdWNGRIVnlaUzVsYm1OdlpHbHVaeWtnT2lCRklEMGdUblFzSUdnZ0ppWWdkeUFtSmlCM0xtbHpWR1Y0ZEhWeVpTQW1KaUIzTG1admNtMWhkQ0E5UFQwZ1kzUWdKaVlnZHk1MGVYQmxJRDA5UFNCeWJpQW1KaUIzTG1WdVkyOWthVzVuSUQwOVBTQlBhU0FtSmlBb1JTQTlJRTUwS1N3Z1JUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRjhvZHl3Z1JTd2dSQ3dnVlN3Z1Jpa2dld29nSUNBZ0lDQWdJR3hsZENCUElEMGdWUzVtYjJjc0lHNWxJRDBnZHk1cGMwMWxjMmhUZEdGdVpHRnlaRTFoZEdWeWFXRnNJRDhnVlM1bGJuWnBjbTl1YldWdWRDQTZJRzUxYkd3c0lHTmxJRDBnS0hjdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0EvSUhRZ09pQmxLUzVuWlhRb2R5NWxiblpOWVhBZ2ZId2dibVVwTENCV0lEMGdkbHQzTG5SNWNHVmRMQ0JYSUQwZ1JpNXBjMU5yYVc1dVpXUk5aWE5vSUQ4Z1p5aEdLU0E2SURBN0NpQWdJQ0FnSUNBZ2R5NXdjbVZqYVhOcGIyNGdJVDA5SUc1MWJHd2dKaVlnS0hnZ1BTQnBMbWRsZEUxaGVGQnlaV05wYzJsdmJpaDNMbkJ5WldOcGMybHZiaWtzSUhnZ0lUMDlJSGN1Y0hKbFkybHphVzl1SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4UWNtOW5jbUZ0TG1kbGRGQmhjbUZ0WlhSbGNuTTZJaXdnZHk1d2NtVmphWE5wYjI0c0lDSnViM1FnYzNWd2NHOXlkR1ZrTENCMWMybHVaeUlzSUhnc0lDSnBibk4wWldGa0xpSXBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FHVXNJR3hsTENCbVpTd2dRbVU3Q2lBZ0lDQWdJQ0FnYVdZZ0tGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGhsSUQwZ2NYUmJWbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHaGxJRDBnZUdVdWRtVnlkR1Y0VTJoaFpHVnlMQ0JzWlNBOUlIaGxMbVp5WVdkdFpXNTBVMmhoWkdWeU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCb1pTQTlJSGN1ZG1WeWRHVjRVMmhoWkdWeUxDQnNaU0E5SUhjdVpuSmhaMjFsYm5SVGFHRmtaWElzSUd3dWRYQmtZWFJsS0hjcExDQm1aU0E5SUd3dVoyVjBWbVZ5ZEdWNFUyaGhaR1Z5U1VRb2R5a3NJRUpsSUQwZ2JDNW5aWFJHY21GbmJXVnVkRk5vWVdSbGNrbEVLSGNwT3dvZ0lDQWdJQ0FnSUd4bGRDQlpJRDBnY3k1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1N3Z1EyVWdQU0IzTG1Gc2NHaGhWR1Z6ZENBK0lEQXNJSGxsSUQwZ2R5NWpiR1ZoY21OdllYUWdQaUF3T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbHpWMlZpUjB3eU9pQm9MQW9nSUNBZ0lDQWdJQ0FnSUNCemFHRmtaWEpKUkRvZ1Zpd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHVnlUbUZ0WlRvZ2R5NTBlWEJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUdobExBb2dJQ0FnSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2diR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxabWx1WlhNNklIY3VaR1ZtYVc1bGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnWTNWemRHOXRWbVZ5ZEdWNFUyaGhaR1Z5U1VRNklHWmxMQW9nSUNBZ0lDQWdJQ0FnSUNCamRYTjBiMjFHY21GbmJXVnVkRk5vWVdSbGNrbEVPaUJDWlN3S0lDQWdJQ0FnSUNBZ0lDQWdhWE5TWVhkVGFHRmtaWEpOWVhSbGNtbGhiRG9nZHk1cGMxSmhkMU5vWVdSbGNrMWhkR1Z5YVdGc0lEMDlQU0FoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdaMnh6YkZabGNuTnBiMjQ2SUhjdVoyeHpiRlpsY25OcGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUhCeVpXTnBjMmx2YmpvZ2VDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1emRHRnVZMmx1WnpvZ1JpNXBjMGx1YzNSaGJtTmxaRTFsYzJnZ1BUMDlJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibk4wWVc1amFXNW5RMjlzYjNJNklFWXVhWE5KYm5OMFlXNWpaV1JOWlhOb0lEMDlQU0FoTUNBbUppQkdMbWx1YzNSaGJtTmxRMjlzYjNJZ0lUMDlJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJSE4xY0hCdmNuUnpWbVZ5ZEdWNFZHVjRkSFZ5WlhNNklHMHNDaUFnSUNBZ0lDQWdJQ0FnSUc5MWRIQjFkRVZ1WTI5a2FXNW5PaUJaSUNFOVBTQnVkV3hzSUQ4Z2NDaFpMblJsZUhSMWNtVXBJRG9nY3k1dmRYUndkWFJGYm1OdlpHbHVaeXdLSUNBZ0lDQWdJQ0FnSUNBZ2JXRndPaUFoSVhjdWJXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCdFlYQkZibU52WkdsdVp6b2djQ2gzTG0xaGNDa3NDaUFnSUNBZ0lDQWdJQ0FnSUcxaGRHTmhjRG9nSVNGM0xtMWhkR05oY0N3S0lDQWdJQ0FnSUNBZ0lDQWdiV0YwWTJGd1JXNWpiMlJwYm1jNklIQW9keTV0WVhSallYQXBMQW9nSUNBZ0lDQWdJQ0FnSUNCbGJuWk5ZWEE2SUNFaFkyVXNDaUFnSUNBZ0lDQWdJQ0FnSUdWdWRrMWhjRTF2WkdVNklHTmxJQ1ltSUdObExtMWhjSEJwYm1jc0NpQWdJQ0FnSUNBZ0lDQWdJR1Z1ZGsxaGNFVnVZMjlrYVc1bk9pQndLR05sS1N3S0lDQWdJQ0FnSUNBZ0lDQWdaVzUyVFdGd1EzVmlaVlZXT2lBaElXTmxJQ1ltSUNoalpTNXRZWEJ3YVc1bklEMDlQU0JRY2lCOGZDQmpaUzV0WVhCd2FXNW5JRDA5UFNCWGN5a3NDaUFnSUNBZ0lDQWdJQ0FnSUd4cFoyaDBUV0Z3T2lBaElYY3ViR2xuYUhSTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUd4cFoyaDBUV0Z3Ulc1amIyUnBibWM2SUhBb2R5NXNhV2RvZEUxaGNDa3NDaUFnSUNBZ0lDQWdJQ0FnSUdGdlRXRndPaUFoSVhjdVlXOU5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnRhWE56YVhabFRXRndPaUFoSVhjdVpXMXBjM05wZG1WTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUdWdGFYTnphWFpsVFdGd1JXNWpiMlJwYm1jNklIQW9keTVsYldsemMybDJaVTFoY0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJR0oxYlhCTllYQTZJQ0VoZHk1aWRXMXdUV0Z3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnViM0p0WVd4TllYQTZJQ0VoZHk1dWIzSnRZV3hOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamRGTndZV05sVG05eWJXRnNUV0Z3T2lCM0xtNXZjbTFoYkUxaGNGUjVjR1VnUFQwOUlIcGtMQW9nSUNBZ0lDQWdJQ0FnSUNCMFlXNW5aVzUwVTNCaFkyVk9iM0p0WVd4TllYQTZJSGN1Ym05eWJXRnNUV0Z3Vkhsd1pTQTlQVDBnU0drc0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRG9nZVdVc0NpQWdJQ0FnSUNBZ0lDQWdJR05zWldGeVkyOWhkRTFoY0RvZ2VXVWdKaVlnSVNGM0xtTnNaV0Z5WTI5aGRFMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1kyeGxZWEpqYjJGMFVtOTFaMmh1WlhOelRXRndPaUI1WlNBbUppQWhJWGN1WTJ4bFlYSmpiMkYwVW05MVoyaHVaWE56VFdGd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEE2SUhsbElDWW1JQ0VoZHk1amJHVmhjbU52WVhST2IzSnRZV3hOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNCc1lXTmxiV1Z1ZEUxaGNEb2dJU0YzTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2NtOTFaMmh1WlhOelRXRndPaUFoSVhjdWNtOTFaMmh1WlhOelRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCdFpYUmhiRzVsYzNOTllYQTZJQ0VoZHk1dFpYUmhiRzVsYzNOTllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhOd1pXTjFiR0Z5VFdGd09pQWhJWGN1YzNCbFkzVnNZWEpOWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSE53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3T2lBaElYY3VjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lITndaV04xYkdGeVEyOXNiM0pOWVhBNklDRWhkeTV6Y0dWamRXeGhja052Ykc5eVRXRndMQW9nSUNBZ0lDQWdJQ0FnSUNCemNHVmpkV3hoY2tOdmJHOXlUV0Z3Ulc1amIyUnBibWM2SUhBb2R5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnWVd4d2FHRk5ZWEE2SUNFaGR5NWhiSEJvWVUxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnWVd4d2FHRlVaWE4wT2lCRFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWjNKaFpHbGxiblJOWVhBNklDRWhkeTVuY21Ga2FXVnVkRTFoY0N3S0lDQWdJQ0FnSUNBZ0lDQWdjMmhsWlc0NklIY3VjMmhsWlc0Z1BpQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHVmxia052Ykc5eVRXRndPaUFoSVhjdWMyaGxaVzVEYjJ4dmNrMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGxaVzVEYjJ4dmNrMWhjRVZ1WTI5a2FXNW5PaUJ3S0hjdWMyaGxaVzVEYjJ4dmNrMWhjQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lITm9aV1Z1VW05MVoyaHVaWE56VFdGd09pQWhJWGN1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6YldsemMybHZiam9nZHk1MGNtRnVjMjFwYzNOcGIyNGdQaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzIxcGMzTnBiMjVOWVhBNklDRWhkeTUwY21GdWMyMXBjM05wYjI1TllYQXNDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FXTnJibVZ6YzAxaGNEb2dJU0YzTG5Sb2FXTnJibVZ6YzAxaGNDd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dFltbHVaVG9nZHk1amIyMWlhVzVsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjJaWEowWlhoVVlXNW5aVzUwY3pvZ0lTRjNMbTV2Y20xaGJFMWhjQ0FtSmlBaElVWXVaMlZ2YldWMGNua2dKaVlnSVNGR0xtZGxiMjFsZEhKNUxtRjBkSEpwWW5WMFpYTXVkR0Z1WjJWdWRDd0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQjNMblpsY25SbGVFTnZiRzl5Y3l3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFFXeHdhR0Z6T2lCM0xuWmxjblJsZUVOdmJHOXljeUE5UFQwZ0lUQWdKaVlnSVNGR0xtZGxiMjFsZEhKNUlDWW1JQ0VoUmk1blpXOXRaWFJ5ZVM1aGRIUnlhV0oxZEdWekxtTnZiRzl5SUNZbUlFWXVaMlZ2YldWMGNua3VZWFIwY21saWRYUmxjeTVqYjJ4dmNpNXBkR1Z0VTJsNlpTQTlQVDBnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFZYWnpPaUFoSVhjdWJXRndJSHg4SUNFaGR5NWlkVzF3VFdGd0lIeDhJQ0VoZHk1dWIzSnRZV3hOWVhBZ2ZId2dJU0YzTG5Od1pXTjFiR0Z5VFdGd0lIeDhJQ0VoZHk1aGJIQm9ZVTFoY0NCOGZDQWhJWGN1WlcxcGMzTnBkbVZOWVhBZ2ZId2dJU0YzTG5KdmRXZG9ibVZ6YzAxaGNDQjhmQ0FoSVhjdWJXVjBZV3h1WlhOelRXRndJSHg4SUNFaGR5NWpiR1ZoY21OdllYUk5ZWEFnZkh3Z0lTRjNMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NCOGZDQWhJWGN1WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUh4OElDRWhkeTVrYVhOd2JHRmpaVzFsYm5STllYQWdmSHdnSVNGM0xuUnlZVzV6YldsemMybHZiazFoY0NCOGZDQWhJWGN1ZEdocFkydHVaWE56VFdGd0lIeDhJQ0VoZHk1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQjhmQ0FoSVhjdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NCOGZDQWhJWGN1YzJobFpXNURiMnh2Y2sxaGNDQjhmQ0FoSVhjdWMyaGxaVzVTYjNWbmFHNWxjM05OWVhBc0NpQWdJQ0FnSUNBZ0lDQWdJSFYyYzFabGNuUmxlRTl1YkhrNklDRW9JU0YzTG0xaGNDQjhmQ0FoSVhjdVluVnRjRTFoY0NCOGZDQWhJWGN1Ym05eWJXRnNUV0Z3SUh4OElDRWhkeTV6Y0dWamRXeGhjazFoY0NCOGZDQWhJWGN1WVd4d2FHRk5ZWEFnZkh3Z0lTRjNMbVZ0YVhOemFYWmxUV0Z3SUh4OElDRWhkeTV5YjNWbmFHNWxjM05OWVhBZ2ZId2dJU0YzTG0xbGRHRnNibVZ6YzAxaGNDQjhmQ0FoSVhjdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lIeDhJSGN1ZEhKaGJuTnRhWE56YVc5dUlENGdNQ0I4ZkNBaElYY3VkSEpoYm5OdGFYTnphVzl1VFdGd0lIeDhJQ0VoZHk1MGFHbGphMjVsYzNOTllYQWdmSHdnSVNGM0xuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJSHg4SUNFaGR5NXpjR1ZqZFd4aGNrTnZiRzl5VFdGd0lIeDhJSGN1YzJobFpXNGdQaUF3SUh4OElDRWhkeTV6YUdWbGJrTnZiRzl5VFdGd0lIeDhJQ0VoZHk1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NrZ0ppWWdJU0YzTG1ScGMzQnNZV05sYldWdWRFMWhjQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUFoSVU4c0NpQWdJQ0FnSUNBZ0lDQWdJSFZ6WlVadlp6b2dkeTVtYjJjc0NpQWdJQ0FnSUNBZ0lDQWdJR1p2WjBWNGNESTZJRThnSmlZZ1R5NXBjMFp2WjBWNGNESXNDaUFnSUNBZ0lDQWdJQ0FnSUdac1lYUlRhR0ZrYVc1bk9pQWhJWGN1Wm14aGRGTm9ZV1JwYm1jc0NpQWdJQ0FnSUNBZ0lDQWdJSE5wZW1WQmRIUmxiblZoZEdsdmJqb2dkeTV6YVhwbFFYUjBaVzUxWVhScGIyNHNDaUFnSUNBZ0lDQWdJQ0FnSUd4dloyRnlhWFJvYldsalJHVndkR2hDZFdabVpYSTZJSFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lITnJhVzV1YVc1bk9pQkdMbWx6VTJ0cGJtNWxaRTFsYzJnZ1BUMDlJQ0V3SUNZbUlGY2dQaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQnRZWGhDYjI1bGN6b2dWeXdLSUNBZ0lDQWdJQ0FnSUNBZ2RYTmxWbVZ5ZEdWNFZHVjRkSFZ5WlRvZ1pDd0tJQ0FnSUNBZ0lDQWdJQ0FnYlc5eWNHaFVZWEpuWlhSek9pQWhJVVl1WjJWdmJXVjBjbmtnSmlZZ0lTRkdMbWRsYjIxbGRISjVMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXdiM05wZEdsdmJpd0tJQ0FnSUNBZ0lDQWdJQ0FnYlc5eWNHaE9iM0p0WVd4ek9pQWhJVVl1WjJWdmJXVjBjbmtnSmlZZ0lTRkdMbWRsYjIxbGRISjVMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXViM0p0WVd3c0NpQWdJQ0FnSUNBZ0lDQWdJRzF2Y25Cb1ZHRnlaMlYwYzBOdmRXNTBPaUFoSVVZdVoyVnZiV1YwY25rZ0ppWWdJU0ZHTG1kbGIyMWxkSEo1TG0xdmNuQm9RWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaUEvSUVZdVoyVnZiV1YwY25rdWJXOXljR2hCZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TG14bGJtZDBhQ0E2SURBc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVScGNreHBaMmgwY3pvZ1JTNWthWEpsWTNScGIyNWhiQzVzWlc1bmRHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQnZhVzUwVEdsbmFIUnpPaUJGTG5CdmFXNTBMbXhsYm1kMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYm5WdFUzQnZkRXhwWjJoMGN6b2dSUzV6Y0c5MExteGxibWQwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0VW1WamRFRnlaV0ZNYVdkb2RITTZJRVV1Y21WamRFRnlaV0V1YkdWdVozUm9MQW9nSUNBZ0lDQWdJQ0FnSUNCdWRXMUlaVzFwVEdsbmFIUnpPaUJGTG1obGJXa3ViR1Z1WjNSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1ZFcxRWFYSk1hV2RvZEZOb1lXUnZkM002SUVVdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYQXViR1Z1WjNSb0xBb2dJQ0FnSUNBZ0lDQWdJQ0J1ZFcxUWIybHVkRXhwWjJoMFUyaGhaRzkzY3pvZ1JTNXdiMmx1ZEZOb1lXUnZkMDFoY0M1c1pXNW5kR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNTFiVk53YjNSTWFXZG9kRk5vWVdSdmQzTTZJRVV1YzNCdmRGTm9ZV1J2ZDAxaGNDNXNaVzVuZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVOc2FYQndhVzVuVUd4aGJtVnpPaUJ2TG01MWJWQnNZVzVsY3l3S0lDQWdJQ0FnSUNBZ0lDQWdiblZ0UTJ4cGNFbHVkR1Z5YzJWamRHbHZiam9nYnk1dWRXMUpiblJsY25ObFkzUnBiMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjbTFoZERvZ2R5NW1iM0p0WVhRc0NpQWdJQ0FnSUNBZ0lDQWdJR1JwZEdobGNtbHVaem9nZHk1a2FYUm9aWEpwYm1jc0NpQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwMWhjRVZ1WVdKc1pXUTZJSE11YzJoaFpHOTNUV0Z3TG1WdVlXSnNaV1FnSmlZZ1JDNXNaVzVuZEdnZ1BpQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2ROWVhCVWVYQmxPaUJ6TG5Ob1lXUnZkMDFoY0M1MGVYQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCMGIyNWxUV0Z3Y0dsdVp6b2dkeTUwYjI1bFRXRndjR1ZrSUQ4Z2N5NTBiMjVsVFdGd2NHbHVaeUE2SUY5dUxBb2dJQ0FnSUNBZ0lDQWdJQ0J3YUhsemFXTmhiR3g1UTI5eWNtVmpkRXhwWjJoMGN6b2djeTV3YUhsemFXTmhiR3g1UTI5eWNtVmpkRXhwWjJoMGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGJYVnNkR2x3YkdsbFpFRnNjR2hoT2lCM0xuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkc5MVlteGxVMmxrWldRNklIY3VjMmxrWlNBOVBUMGdRMmtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWnNhWEJUYVdSbFpEb2dkeTV6YVdSbElEMDlQU0JwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdoUVlXTnJhVzVuT2lCM0xtUmxjSFJvVUdGamEybHVaeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2R5NWtaWEIwYUZCaFkydHBibWNnT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZ3dRWFIwY21saWRYUmxUbUZ0WlRvZ2R5NXBibVJsZURCQmRIUnlhV0oxZEdWT1lXMWxMQW9nSUNBZ0lDQWdJQ0FnSUNCbGVIUmxibk5wYjI1RVpYSnBkbUYwYVhabGN6b2dkeTVsZUhSbGJuTnBiMjV6SUNZbUlIY3VaWGgwWlc1emFXOXVjeTVrWlhKcGRtRjBhWFpsY3l3S0lDQWdJQ0FnSUNBZ0lDQWdaWGgwWlc1emFXOXVSbkpoWjBSbGNIUm9PaUIzTG1WNGRHVnVjMmx2Ym5NZ0ppWWdkeTVsZUhSbGJuTnBiMjV6TG1aeVlXZEVaWEIwYUN3S0lDQWdJQ0FnSUNBZ0lDQWdaWGgwWlc1emFXOXVSSEpoZDBKMVptWmxjbk02SUhjdVpYaDBaVzV6YVc5dWN5QW1KaUIzTG1WNGRHVnVjMmx2Ym5NdVpISmhkMEoxWm1abGNuTXNDaUFnSUNBZ0lDQWdJQ0FnSUdWNGRHVnVjMmx2YmxOb1lXUmxjbFJsZUhSMWNtVk1UMFE2SUhjdVpYaDBaVzV6YVc5dWN5QW1KaUIzTG1WNGRHVnVjMmx2Ym5NdWMyaGhaR1Z5VkdWNGRIVnlaVXhQUkN3S0lDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVpYSkZlSFJsYm5OcGIyNUdjbUZuUkdWd2RHZzZJR2dnZkh3Z2JpNW9ZWE1vSWtWWVZGOW1jbUZuWDJSbGNIUm9JaWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxibVJsY21WeVJYaDBaVzV6YVc5dVJISmhkMEoxWm1abGNuTTZJR2dnZkh3Z2JpNW9ZWE1vSWxkRlFrZE1YMlJ5WVhkZlluVm1abVZ5Y3lJcExBb2dJQ0FnSUNBZ0lDQWdJQ0J5Wlc1a1pYSmxja1Y0ZEdWdWMybHZibE5vWVdSbGNsUmxlSFIxY21WTWIyUTZJR2dnZkh3Z2JpNW9ZWE1vSWtWWVZGOXphR0ZrWlhKZmRHVjRkSFZ5WlY5c2IyUWlLU3dLSUNBZ0lDQWdJQ0FnSUNBZ1kzVnpkRzl0VUhKdlozSmhiVU5oWTJobFMyVjVPaUIzTG1OMWMzUnZiVkJ5YjJkeVlXMURZV05vWlV0bGVTZ3BDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhrb2R5a2dld29nSUNBZ0lDQWdJR3hsZENCRklEMGdXMTA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIY3VjMmhoWkdWeVNVUWdQeUJGTG5CMWMyZ29keTV6YUdGa1pYSkpSQ2tnT2lBb1JTNXdkWE5vS0hjdVkzVnpkRzl0Vm1WeWRHVjRVMmhoWkdWeVNVUXBMQ0JGTG5CMWMyZ29keTVqZFhOMGIyMUdjbUZuYldWdWRGTm9ZV1JsY2tsRUtTa3NJSGN1WkdWbWFXNWxjeUFoUFQwZ2RtOXBaQ0F3S1NCbWIzSW9iR1YwSUVRZ2FXNGdkeTVrWldacGJtVnpLVVV1Y0hWemFDaEVLU3dnUlM1d2RYTm9LSGN1WkdWbWFXNWxjMXRFWFNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhjdWFYTlNZWGRUYUdGa1pYSk5ZWFJsY21saGJDQTlQVDBnSVRFZ0ppWWdLR0lvUlN3Z2R5a3NJRUVvUlN3Z2R5a3NJRVV1Y0hWemFDaHpMbTkxZEhCMWRFVnVZMjlrYVc1bktTa3NJRVV1Y0hWemFDaDNMbU4xYzNSdmJWQnliMmR5WVcxRFlXTm9aVXRsZVNrc0lFVXVhbTlwYmlncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdZaWgzTENCRktTQjdDaUFnSUNBZ0lDQWdkeTV3ZFhOb0tFVXVjSEpsWTJsemFXOXVLU3dnZHk1d2RYTm9LRVV1YjNWMGNIVjBSVzVqYjJScGJtY3BMQ0IzTG5CMWMyZ29SUzV0WVhCRmJtTnZaR2x1Wnlrc0lIY3VjSFZ6YUNoRkxtMWhkR05oY0VWdVkyOWthVzVuS1N3Z2R5NXdkWE5vS0VVdVpXNTJUV0Z3VFc5a1pTa3NJSGN1Y0hWemFDaEZMbVZ1ZGsxaGNFVnVZMjlrYVc1bktTd2dkeTV3ZFhOb0tFVXViR2xuYUhSTllYQkZibU52WkdsdVp5a3NJSGN1Y0hWemFDaEZMbVZ0YVhOemFYWmxUV0Z3Ulc1amIyUnBibWNwTENCM0xuQjFjMmdvUlM1amIyMWlhVzVsS1N3Z2R5NXdkWE5vS0VVdWRtVnlkR1Y0VlhaektTd2dkeTV3ZFhOb0tFVXVabTluUlhod01pa3NJSGN1Y0hWemFDaEZMbk5wZW1WQmRIUmxiblZoZEdsdmJpa3NJSGN1Y0hWemFDaEZMbTFoZUVKdmJtVnpLU3dnZHk1d2RYTm9LRVV1Ylc5eWNHaFVZWEpuWlhSelEyOTFiblFwTENCM0xuQjFjMmdvUlM1dWRXMUVhWEpNYVdkb2RITXBMQ0IzTG5CMWMyZ29SUzV1ZFcxUWIybHVkRXhwWjJoMGN5a3NJSGN1Y0hWemFDaEZMbTUxYlZOd2IzUk1hV2RvZEhNcExDQjNMbkIxYzJnb1JTNXVkVzFJWlcxcFRHbG5hSFJ6S1N3Z2R5NXdkWE5vS0VVdWJuVnRVbVZqZEVGeVpXRk1hV2RvZEhNcExDQjNMbkIxYzJnb1JTNXVkVzFFYVhKTWFXZG9kRk5vWVdSdmQzTXBMQ0IzTG5CMWMyZ29SUzV1ZFcxUWIybHVkRXhwWjJoMFUyaGhaRzkzY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVk53YjNSTWFXZG9kRk5vWVdSdmQzTXBMQ0IzTG5CMWMyZ29SUzV6YUdGa2IzZE5ZWEJVZVhCbEtTd2dkeTV3ZFhOb0tFVXVkRzl1WlUxaGNIQnBibWNwTENCM0xuQjFjMmdvUlM1dWRXMURiR2x3Y0dsdVoxQnNZVzVsY3lrc0lIY3VjSFZ6YUNoRkxtNTFiVU5zYVhCSmJuUmxjbk5sWTNScGIyNHBMQ0IzTG5CMWMyZ29SUzVtYjNKdFlYUXBMQ0IzTG5CMWMyZ29SUzV6Y0dWamRXeGhja052Ykc5eVRXRndSVzVqYjJScGJtY3BMQ0IzTG5CMWMyZ29SUzV6YUdWbGJrTnZiRzl5VFdGd1JXNWpiMlJwYm1jcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdRU2gzTENCRktTQjdDaUFnSUNBZ0lDQWdZUzVrYVhOaFlteGxRV3hzS0Nrc0lFVXVhWE5YWldKSFRESWdKaVlnWVM1bGJtRmliR1VvTUNrc0lFVXVjM1Z3Y0c5eWRITldaWEowWlhoVVpYaDBkWEpsY3lBbUppQmhMbVZ1WVdKc1pTZ3hLU3dnUlM1cGJuTjBZVzVqYVc1bklDWW1JR0V1Wlc1aFlteGxLRElwTENCRkxtbHVjM1JoYm1OcGJtZERiMnh2Y2lBbUppQmhMbVZ1WVdKc1pTZ3pLU3dnUlM1dFlYQWdKaVlnWVM1bGJtRmliR1VvTkNrc0lFVXViV0YwWTJGd0lDWW1JR0V1Wlc1aFlteGxLRFVwTENCRkxtVnVkazFoY0NBbUppQmhMbVZ1WVdKc1pTZzJLU3dnUlM1bGJuWk5ZWEJEZFdKbFZWWWdKaVlnWVM1bGJtRmliR1VvTnlrc0lFVXViR2xuYUhSTllYQWdKaVlnWVM1bGJtRmliR1VvT0Nrc0lFVXVZVzlOWVhBZ0ppWWdZUzVsYm1GaWJHVW9PU2tzSUVVdVpXMXBjM05wZG1WTllYQWdKaVlnWVM1bGJtRmliR1VvTVRBcExDQkZMbUoxYlhCTllYQWdKaVlnWVM1bGJtRmliR1VvTVRFcExDQkZMbTV2Y20xaGJFMWhjQ0FtSmlCaExtVnVZV0pzWlNneE1pa3NJRVV1YjJKcVpXTjBVM0JoWTJWT2IzSnRZV3hOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVE1wTENCRkxuUmhibWRsYm5SVGNHRmpaVTV2Y20xaGJFMWhjQ0FtSmlCaExtVnVZV0pzWlNneE5Da3NJRVV1WTJ4bFlYSmpiMkYwSUNZbUlHRXVaVzVoWW14bEtERTFLU3dnUlM1amJHVmhjbU52WVhSTllYQWdKaVlnWVM1bGJtRmliR1VvTVRZcExDQkZMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0NBbUppQmhMbVZ1WVdKc1pTZ3hOeWtzSUVVdVkyeGxZWEpqYjJGMFRtOXliV0ZzVFdGd0lDWW1JR0V1Wlc1aFlteGxLREU0S1N3Z1JTNWthWE53YkdGalpXMWxiblJOWVhBZ0ppWWdZUzVsYm1GaWJHVW9NVGtwTENCRkxuTndaV04xYkdGeVRXRndJQ1ltSUdFdVpXNWhZbXhsS0RJd0tTd2dSUzV5YjNWbmFHNWxjM05OWVhBZ0ppWWdZUzVsYm1GaWJHVW9NakVwTENCRkxtMWxkR0ZzYm1WemMwMWhjQ0FtSmlCaExtVnVZV0pzWlNneU1pa3NJRVV1WjNKaFpHbGxiblJOWVhBZ0ppWWdZUzVsYm1GaWJHVW9Nak1wTENCRkxtRnNjR2hoVFdGd0lDWW1JR0V1Wlc1aFlteGxLREkwS1N3Z1JTNWhiSEJvWVZSbGMzUWdKaVlnWVM1bGJtRmliR1VvTWpVcExDQkZMblpsY25SbGVFTnZiRzl5Y3lBbUppQmhMbVZ1WVdKc1pTZ3lOaWtzSUVVdWRtVnlkR1Y0UVd4d2FHRnpJQ1ltSUdFdVpXNWhZbXhsS0RJM0tTd2dSUzUyWlhKMFpYaFZkbk1nSmlZZ1lTNWxibUZpYkdVb01qZ3BMQ0JGTG5abGNuUmxlRlJoYm1kbGJuUnpJQ1ltSUdFdVpXNWhZbXhsS0RJNUtTd2dSUzUxZG5OV1pYSjBaWGhQYm14NUlDWW1JR0V1Wlc1aFlteGxLRE13S1N3Z1JTNW1iMmNnSmlZZ1lTNWxibUZpYkdVb016RXBMQ0IzTG5CMWMyZ29ZUzV0WVhOcktTd2dZUzVrYVhOaFlteGxRV3hzS0Nrc0lFVXVkWE5sUm05bklDWW1JR0V1Wlc1aFlteGxLREFwTENCRkxtWnNZWFJUYUdGa2FXNW5JQ1ltSUdFdVpXNWhZbXhsS0RFcExDQkZMbXh2WjJGeWFYUm9iV2xqUkdWd2RHaENkV1ptWlhJZ0ppWWdZUzVsYm1GaWJHVW9NaWtzSUVVdWMydHBibTVwYm1jZ0ppWWdZUzVsYm1GaWJHVW9NeWtzSUVVdWRYTmxWbVZ5ZEdWNFZHVjRkSFZ5WlNBbUppQmhMbVZ1WVdKc1pTZzBLU3dnUlM1dGIzSndhRlJoY21kbGRITWdKaVlnWVM1bGJtRmliR1VvTlNrc0lFVXViVzl5Y0doT2IzSnRZV3h6SUNZbUlHRXVaVzVoWW14bEtEWXBMQ0JGTG5CeVpXMTFiSFJwY0d4cFpXUkJiSEJvWVNBbUppQmhMbVZ1WVdKc1pTZzNLU3dnUlM1emFHRmtiM2ROWVhCRmJtRmliR1ZrSUNZbUlHRXVaVzVoWW14bEtEZ3BMQ0JGTG5Cb2VYTnBZMkZzYkhsRGIzSnlaV04wVEdsbmFIUnpJQ1ltSUdFdVpXNWhZbXhsS0RrcExDQkZMbVJ2ZFdKc1pWTnBaR1ZrSUNZbUlHRXVaVzVoWW14bEtERXdLU3dnUlM1bWJHbHdVMmxrWldRZ0ppWWdZUzVsYm1GaWJHVW9NVEVwTENCRkxtUmxjSFJvVUdGamEybHVaeUFtSmlCaExtVnVZV0pzWlNneE1pa3NJRVV1WkdsMGFHVnlhVzVuSUNZbUlHRXVaVzVoWW14bEtERXpLU3dnUlM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQW1KaUJoTG1WdVlXSnNaU2d4TkNrc0lFVXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQW1KaUJoTG1WdVlXSnNaU2d4TlNrc0lFVXVkSEpoYm5OdGFYTnphVzl1SUNZbUlHRXVaVzVoWW14bEtERTJLU3dnUlM1MGNtRnVjMjFwYzNOcGIyNU5ZWEFnSmlZZ1lTNWxibUZpYkdVb01UY3BMQ0JGTG5Sb2FXTnJibVZ6YzAxaGNDQW1KaUJoTG1WdVlXSnNaU2d4T0Nrc0lFVXVjMmhsWlc0Z0ppWWdZUzVsYm1GaWJHVW9NVGtwTENCRkxuTm9aV1Z1UTI5c2IzSk5ZWEFnSmlZZ1lTNWxibUZpYkdVb01qQXBMQ0JGTG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3SUNZbUlHRXVaVzVoWW14bEtESXhLU3dnZHk1d2RYTm9LR0V1YldGemF5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJNS0hjcElIc0tJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlIWmJkeTUwZVhCbFhTd2dSRHNLSUNBZ0lDQWdJQ0JwWmlBb1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWU0E5SUhGMFcwVmRPd29nSUNBZ0lDQWdJQ0FnSUNCRUlEMGdkV1l1WTJ4dmJtVW9WUzUxYm1sbWIzSnRjeWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRVFnUFNCM0xuVnVhV1p2Y20xek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCRU93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdTU2gzTENCRktTQjdDaUFnSUNBZ0lDQWdiR1YwSUVRN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCVklEMGdNQ3dnUmlBOUlHTXViR1Z1WjNSb095QlZJRHdnUmpzZ1ZTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRThnUFNCalcxVmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9UeTVqWVdOb1pVdGxlU0E5UFQwZ1JTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSQ0E5SUU4c0lDc3JSQzUxYzJWa1ZHbHRaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUkNBOVBUMGdkbTlwWkNBd0lDWW1JQ2hFSUQwZ2JtVjNJR2g0S0hNc0lFVXNJSGNzSUhJcExDQmpMbkIxYzJnb1JDa3BMQ0JFT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2F5aDNLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDMHRkeTUxYzJWa1ZHbHRaWE1nUFQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCakxtbHVaR1Y0VDJZb2R5azdDaUFnSUNBZ0lDQWdJQ0FnSUdOYlJWMGdQU0JqVzJNdWJHVnVaM1JvSUMwZ01WMHNJR011Y0c5d0tDa3NJSGN1WkdWemRISnZlU2dwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlFSW9keWtnZXdvZ0lDQWdJQ0FnSUd3dWNtVnRiM1psS0hjcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdVQ2dwSUhzS0lDQWdJQ0FnSUNCc0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdaMlYwVUdGeVlXMWxkR1Z5Y3pvZ1h5d0tJQ0FnSUNBZ0lDQm5aWFJRY205bmNtRnRRMkZqYUdWTFpYazZJSGtzQ2lBZ0lDQWdJQ0FnWjJWMFZXNXBabTl5YlhNNklFd3NDaUFnSUNBZ0lDQWdZV054ZFdseVpWQnliMmR5WVcwNklFa3NDaUFnSUNBZ0lDQWdjbVZzWldGelpWQnliMmR5WVcwNklHc3NDaUFnSUNBZ0lDQWdjbVZzWldGelpWTm9ZV1JsY2tOaFkyaGxPaUJDTEFvZ0lDQWdJQ0FnSUhCeWIyZHlZVzF6T2lCakxBb2dJQ0FnSUNBZ0lHUnBjM0J2YzJVNklGQUtJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdabmdvS1NCN0NpQWdJQ0JzWlhRZ2N5QTlJRzVsZHlCWFpXRnJUV0Z3T3dvZ0lDQWdablZ1WTNScGIyNGdaU2h5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCekxtZGxkQ2h5S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYnlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h2SUQwZ2UzMHNJSE11YzJWMEtISXNJRzhwS1N3Z2J6c0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSFFvY2lrZ2V3b2dJQ0FnSUNBZ0lITXVaR1ZzWlhSbEtISXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYmloeUxDQnZMQ0JoS1NCN0NpQWdJQ0FnSUNBZ2N5NW5aWFFvY2lsYmIxMGdQU0JoT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FTZ3BJSHNLSUNBZ0lDQWdJQ0J6SUQwZ2JtVjNJRmRsWVd0TllYQTdDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJR2RsZERvZ1pTd0tJQ0FnSUNBZ0lDQnlaVzF2ZG1VNklIUXNDaUFnSUNBZ0lDQWdkWEJrWVhSbE9pQnVMQW9nSUNBZ0lDQWdJR1JwYzNCdmMyVTZJR2tLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnY0hnb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXVaM0p2ZFhCUGNtUmxjaUFoUFQwZ1pTNW5jbTkxY0U5eVpHVnlJRDhnY3k1bmNtOTFjRTl5WkdWeUlDMGdaUzVuY205MWNFOXlaR1Z5SURvZ2N5NXlaVzVrWlhKUGNtUmxjaUFoUFQwZ1pTNXlaVzVrWlhKUGNtUmxjaUEvSUhNdWNtVnVaR1Z5VDNKa1pYSWdMU0JsTG5KbGJtUmxjazl5WkdWeUlEb2djeTV0WVhSbGNtbGhiQzVwWkNBaFBUMGdaUzV0WVhSbGNtbGhiQzVwWkNBL0lITXViV0YwWlhKcFlXd3VhV1FnTFNCbExtMWhkR1Z5YVdGc0xtbGtJRG9nY3k1NklDRTlQU0JsTG5vZ1B5QnpMbm9nTFNCbExub2dPaUJ6TG1sa0lDMGdaUzVwWkRzS2ZRcG1kVzVqZEdsdmJpQlpiQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1bmNtOTFjRTl5WkdWeUlDRTlQU0JsTG1keWIzVndUM0prWlhJZ1B5QnpMbWR5YjNWd1QzSmtaWElnTFNCbExtZHliM1Z3VDNKa1pYSWdPaUJ6TG5KbGJtUmxjazl5WkdWeUlDRTlQU0JsTG5KbGJtUmxjazl5WkdWeUlEOGdjeTV5Wlc1a1pYSlBjbVJsY2lBdElHVXVjbVZ1WkdWeVQzSmtaWElnT2lCekxub2dJVDA5SUdVdWVpQS9JR1V1ZWlBdElITXVlaUE2SUhNdWFXUWdMU0JsTG1sa093cDlDbVoxYm1OMGFXOXVJRnBzS0NrZ2V3b2dJQ0FnYkdWMElITWdQU0JiWFN3Z1pTQTlJREFzSUhRZ1BTQmJYU3dnYmlBOUlGdGRMQ0JwSUQwZ1cxMDdDaUFnSUNCbWRXNWpkR2x2YmlCeUtDa2dld29nSUNBZ0lDQWdJR1VnUFNBd0xDQjBMbXhsYm1kMGFDQTlJREFzSUc0dWJHVnVaM1JvSUQwZ01Dd2dhUzVzWlc1bmRHZ2dQU0F3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2J5aDFMQ0JrTENCbUxDQnRMQ0I0TENCMktTQjdDaUFnSUNBZ0lDQWdiR1YwSUdjZ1BTQnpXMlZkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJuSUQwOVBTQjJiMmxrSURBZ1B5QW9aeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1E2SUhVdWFXUXNDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nZFN3S0lDQWdJQ0FnSUNBZ0lDQWdaMlZ2YldWMGNuazZJR1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHMWhkR1Z5YVdGc09pQm1MQW9nSUNBZ0lDQWdJQ0FnSUNCbmNtOTFjRTl5WkdWeU9pQnRMQW9nSUNBZ0lDQWdJQ0FnSUNCeVpXNWtaWEpQY21SbGNqb2dkUzV5Wlc1a1pYSlBjbVJsY2l3S0lDQWdJQ0FnSUNBZ0lDQWdlam9nZUN3S0lDQWdJQ0FnSUNBZ0lDQWdaM0p2ZFhBNklIWUtJQ0FnSUNBZ0lDQjlMQ0J6VzJWZElEMGdaeWtnT2lBb1p5NXBaQ0E5SUhVdWFXUXNJR2N1YjJKcVpXTjBJRDBnZFN3Z1p5NW5aVzl0WlhSeWVTQTlJR1FzSUdjdWJXRjBaWEpwWVd3Z1BTQm1MQ0JuTG1keWIzVndUM0prWlhJZ1BTQnRMQ0JuTG5KbGJtUmxjazl5WkdWeUlEMGdkUzV5Wlc1a1pYSlBjbVJsY2l3Z1p5NTZJRDBnZUN3Z1p5NW5jbTkxY0NBOUlIWXBMQ0JsS3lzc0lHYzdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJoS0hVc0lHUXNJR1lzSUcwc0lIZ3NJSFlwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUc4b2RTd2daQ3dnWml3Z2JTd2dlQ3dnZGlrN0NpQWdJQ0FnSUNBZ1ppNTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0lEOGdiaTV3ZFhOb0tHY3BJRG9nWmk1MGNtRnVjM0JoY21WdWRDQTlQVDBnSVRBZ1B5QnBMbkIxYzJnb1p5a2dPaUIwTG5CMWMyZ29aeWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCc0tIVXNJR1FzSUdZc0lHMHNJSGdzSUhZcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWnlBOUlHOG9kU3dnWkN3Z1ppd2diU3dnZUN3Z2RpazdDaUFnSUNBZ0lDQWdaaTUwY21GdWMyMXBjM05wYjI0Z1BpQXdJRDhnYmk1MWJuTm9hV1owS0djcElEb2daaTUwY21GdWMzQmhjbVZ1ZENBOVBUMGdJVEFnUHlCcExuVnVjMmhwWm5Rb1p5a2dPaUIwTG5WdWMyaHBablFvWnlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmpLSFVzSUdRcElIc0tJQ0FnSUNBZ0lDQjBMbXhsYm1kMGFDQStJREVnSmlZZ2RDNXpiM0owS0hVZ2ZId2djSGdwTENCdUxteGxibWQwYUNBK0lERWdKaVlnYmk1emIzSjBLR1FnZkh3Z1dXd3BMQ0JwTG14bGJtZDBhQ0ErSURFZ0ppWWdhUzV6YjNKMEtHUWdmSHdnV1d3cE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhQ2dwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQmxMQ0JrSUQwZ2N5NXNaVzVuZEdnN0lIVWdQQ0JrT3lCMUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaaUE5SUhOYmRWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaG1MbWxrSUQwOVBTQnVkV3hzS1NCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1ppNXBaQ0E5SUc1MWJHd3NJR1l1YjJKcVpXTjBJRDBnYm5Wc2JDd2daaTVuWlc5dFpYUnllU0E5SUc1MWJHd3NJR1l1YldGMFpYSnBZV3dnUFNCdWRXeHNMQ0JtTG1keWIzVndJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJRzl3WVhGMVpUb2dkQ3dLSUNBZ0lDQWdJQ0IwY21GdWMyMXBjM05wZG1VNklHNHNDaUFnSUNBZ0lDQWdkSEpoYm5Od1lYSmxiblE2SUdrc0NpQWdJQ0FnSUNBZ2FXNXBkRG9nY2l3S0lDQWdJQ0FnSUNCd2RYTm9PaUJoTEFvZ0lDQWdJQ0FnSUhWdWMyaHBablE2SUd3c0NpQWdJQ0FnSUNBZ1ptbHVhWE5vT2lCb0xBb2dJQ0FnSUNBZ0lITnZjblE2SUdNS0lDQWdJSDA3Q24wS1puVnVZM1JwYjI0Z2JYZ29LU0I3Q2lBZ0lDQnNaWFFnY3lBOUlHNWxkeUJYWldGclRXRndPd29nSUNBZ1puVnVZM1JwYjI0Z1pTaHVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSEk3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE11YUdGektHNHBJRDA5UFNBaE1TQS9JQ2h5SUQwZ2JtVjNJRnBzTENCekxuTmxkQ2h1TENCYkNpQWdJQ0FnSUNBZ0lDQWdJSElLSUNBZ0lDQWdJQ0JkS1NrZ09pQnBJRDQ5SUhNdVoyVjBLRzRwTG14bGJtZDBhQ0EvSUNoeUlEMGdibVYzSUZwc0xDQnpMbWRsZENodUtTNXdkWE5vS0hJcEtTQTZJSElnUFNCekxtZGxkQ2h1S1Z0cFhTd2djanNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhRb0tTQjdDaUFnSUNBZ0lDQWdjeUE5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdVc0NpQWdJQ0FnSUNBZ1pHbHpjRzl6WlRvZ2RBb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQm5lQ2dwSUhzS0lDQWdJR3hsZENCeklEMGdlMzA3Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2MxdGxMbWxrWFNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2MxdGxMbWxrWFRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRN0NpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaGxMblI1Y0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x5WldOMGFXOXVPaUJ1WlhjZ1RTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUc1bGR5QmhaUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pUY0c5MFRHbG5hSFFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ1WlhjZ1RTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dU9pQnVaWGNnVFN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJRzVsZHlCaFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibVZEYjNNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQmxiblZ0WW5KaFEyOXpPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldOaGVUb2dNQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pRYjJsdWRFeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nYm1WM0lFMHNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCdVpYY2dZV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxPaUF3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWldOaGVUb2dNQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pJWlcxcGMzQm9aWEpsVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2dibVYzSUUwc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOcmVVTnZiRzl5T2lCdVpYY2dZV1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2R5YjNWdVpFTnZiRzl5T2lCdVpYY2dZV1VLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVW1WamRFRnlaV0ZNYVdkb2RDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM0k2SUc1bGR5QmhaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjRzl6YVhScGIyNDZJRzVsZHlCTkxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lXeG1WMmxrZEdnNklHNWxkeUJOTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWVd4bVNHVnBaMmgwT2lCdVpYY2dUUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOYlpTNXBaRjBnUFNCMExDQjBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMDdDbjBLWm5WdVkzUnBiMjRnZUhnb0tTQjdDaUFnSUNCc1pYUWdjeUE5SUh0OU93b2dJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE5iWlM1cFpGMGdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJSE5iWlM1cFpGMDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBPd29nSUNBZ0lDQWdJQ0FnSUNCemQybDBZMmdvWlM1MGVYQmxLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lrUnBjbVZqZEdsdmJtRnNUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMEpwWVhNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDA1dmNtMWhiRUpwWVhNNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDFKaFpHbDFjem9nTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJoaFpHOTNUV0Z3VTJsNlpUb2dibVYzSUZnS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVUzQnZkRXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFHRmtiM2RDYVdGek9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkT2IzSnRZV3hDYVdGek9pQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnphR0ZrYjNkU1lXUnBkWE02SURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOb1lXUnZkMDFoY0ZOcGVtVTZJRzVsZHlCWUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsQnZhVzUwVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDBKcFlYTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQwNXZjbTFoYkVKcFlYTTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vWVdSdmQxSmhaR2wxY3pvZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzVFdGd1UybDZaVG9nYm1WM0lGZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDBOaGJXVnlZVTVsWVhJNklERXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDBOaGJXVnlZVVpoY2pvZ01XVXpDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzF0bExtbGtYU0E5SUhRc0lIUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZUc0tmUXAyWVhJZ2VYZ2dQU0F3T3dwbWRXNWpkR2x2YmlCMmVDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdLR1V1WTJGemRGTm9ZV1J2ZHlBL0lERWdPaUF3S1NBdElDaHpMbU5oYzNSVGFHRmtiM2NnUHlBeElEb2dNQ2s3Q24wS1puVnVZM1JwYjI0Z1gzZ29jeXdnWlNrZ2V3b2dJQ0FnYkdWMElIUWdQU0J1WlhjZ1ozZ3NJRzRnUFNCNGVDZ3BMQ0JwSUQwZ2V3b2dJQ0FnSUNBZ0lIWmxjbk5wYjI0NklEQXNDaUFnSUNBZ0lDQWdhR0Z6YURvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JrYVhKbFkzUnBiMjVoYkV4bGJtZDBhRG9nTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJSEJ2YVc1MFRHVnVaM1JvT2lBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnYzNCdmRFeGxibWQwYURvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUhKbFkzUkJjbVZoVEdWdVozUm9PaUF0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1Z0YVV4bGJtZDBhRG9nTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlVScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzY3pvZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSUc1MWJWQnZhVzUwVTJoaFpHOTNjem9nTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJRzUxYlZOd2IzUlRhR0ZrYjNkek9pQXRNUW9nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnWVcxaWFXVnVkRG9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3Q2lBZ0lDQWdJQ0FnWFN3S0lDQWdJQ0FnSUNCd2NtOWlaVG9nVzEwc0NpQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dVlXdzZJRnRkTEFvZ0lDQWdJQ0FnSUdScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzT2lCYlhTd0tJQ0FnSUNBZ0lDQmthWEpsWTNScGIyNWhiRk5vWVdSdmQwMWhjRG9nVzEwc0NpQWdJQ0FnSUNBZ1pHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYUnlhWGc2SUZ0ZExBb2dJQ0FnSUNBZ0lITndiM1E2SUZ0ZExBb2dJQ0FnSUNBZ0lITndiM1JUYUdGa2IzYzZJRnRkTEFvZ0lDQWdJQ0FnSUhOd2IzUlRhR0ZrYjNkTllYQTZJRnRkTEFvZ0lDQWdJQ0FnSUhOd2IzUlRhR0ZrYjNkTllYUnlhWGc2SUZ0ZExBb2dJQ0FnSUNBZ0lISmxZM1JCY21WaE9pQmJYU3dLSUNBZ0lDQWdJQ0J5WldOMFFYSmxZVXhVUXpFNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnY21WamRFRnlaV0ZNVkVNeU9pQnVkV3hzTEFvZ0lDQWdJQ0FnSUhCdmFXNTBPaUJiWFN3S0lDQWdJQ0FnSUNCd2IybHVkRk5vWVdSdmR6b2dXMTBzQ2lBZ0lDQWdJQ0FnY0c5cGJuUlRhR0ZrYjNkTllYQTZJRnRkTEFvZ0lDQWdJQ0FnSUhCdmFXNTBVMmhoWkc5M1RXRjBjbWw0T2lCYlhTd0tJQ0FnSUNBZ0lDQm9aVzFwT2lCYlhRb2dJQ0FnZlRzS0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBN0lHZ2dQQ0E1T3lCb0t5c3BhUzV3Y205aVpTNXdkWE5vS0c1bGR5Qk5LVHNLSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJRTBzSUc4Z1BTQnVaWGNnY0dVc0lHRWdQU0J1WlhjZ2NHVTdDaUFnSUNCbWRXNWpkR2x2YmlCc0tHZ3NJSFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SURBc0lHWWdQU0F3TENCdElEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3NnUFNBd095QnJJRHdnT1RzZ2F5c3JLV2t1Y0hKdlltVmJhMTB1YzJWMEtEQXNJREFzSURBcE93b2dJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ01Dd2dkaUE5SURBc0lHY2dQU0F3TENCd0lEMGdNQ3dnWHlBOUlEQXNJSGtnUFNBd0xDQmlJRDBnTUN3Z1FTQTlJREE3Q2lBZ0lDQWdJQ0FnYUM1emIzSjBLSFo0S1RzS0lDQWdJQ0FnSUNCc1pYUWdUQ0E5SUhVZ0lUMDlJQ0V3SUQ4Z1RXRjBhQzVRU1NBNklERTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnJNU0E5SURBc0lFSWdQU0JvTG14bGJtZDBhRHNnYXpFZ1BDQkNPeUJyTVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGQWdQU0JvVzJzeFhTd2dkeUE5SUZBdVkyOXNiM0lzSUVVZ1BTQlFMbWx1ZEdWdWMybDBlU3dnUkNBOUlGQXVaR2x6ZEdGdVkyVXNJRlVnUFNCUUxuTm9ZV1J2ZHlBbUppQlFMbk5vWVdSdmR5NXRZWEFnUHlCUUxuTm9ZV1J2ZHk1dFlYQXVkR1Y0ZEhWeVpTQTZJRzUxYkd3N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoUUxtbHpRVzFpYVdWdWRFeHBaMmgwS1NCa0lDczlJSGN1Y2lBcUlFVWdLaUJNTENCbUlDczlJSGN1WnlBcUlFVWdLaUJNTENCdElDczlJSGN1WWlBcUlFVWdLaUJNT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFFMbWx6VEdsbmFIUlFjbTlpWlNrZ1ptOXlLR3hsZENCR0lEMGdNRHNnUmlBOElEazdJRVlyS3lscExuQnliMkpsVzBaZExtRmtaRk5qWVd4bFpGWmxZM1J2Y2loUUxuTm9MbU52WldabWFXTnBaVzUwYzF0R1hTd2dSU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tGQXVhWE5FYVhKbFkzUnBiMjVoYkV4cFoyaDBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JqRWdQU0IwTG1kbGRDaFFLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoR01TNWpiMnh2Y2k1amIzQjVLRkF1WTI5c2IzSXBMbTExYkhScGNHeDVVMk5oYkdGeUtGQXVhVzUwWlc1emFYUjVJQ29nVENrc0lGQXVZMkZ6ZEZOb1lXUnZkeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JQSUQwZ1VDNXphR0ZrYjNjc0lHNWxJRDBnYmk1blpYUW9VQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVXVjMmhoWkc5M1FtbGhjeUE5SUU4dVltbGhjeXdnYm1VdWMyaGhaRzkzVG05eWJXRnNRbWxoY3lBOUlFOHVibTl5YldGc1FtbGhjeXdnYm1VdWMyaGhaRzkzVW1Ga2FYVnpJRDBnVHk1eVlXUnBkWE1zSUc1bExuTm9ZV1J2ZDAxaGNGTnBlbVVnUFNCUExtMWhjRk5wZW1Vc0lHa3VaR2x5WldOMGFXOXVZV3hUYUdGa2IzZGJlRjBnUFNCdVpTd2dhUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0Z0NFhTQTlJRlVzSUdrdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNkTllYUnlhWGhiZUYwZ1BTQlFMbk5vWVdSdmR5NXRZWFJ5YVhnc0lIa3JLenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1WkdseVpXTjBhVzl1WVd4YmVGMGdQU0JHTVN3Z2VDc3JPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGQXVhWE5UY0c5MFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdNaUE5SUhRdVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFWXlMbkJ2YzJsMGFXOXVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloUUxtMWhkSEpwZUZkdmNteGtLU3dnUmpJdVkyOXNiM0l1WTI5d2VTaDNLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZJQ29nVENrc0lFWXlMbVJwYzNSaGJtTmxJRDBnUkN3Z1JqSXVZMjl1WlVOdmN5QTlJRTFoZEdndVkyOXpLRkF1WVc1bmJHVXBMQ0JHTWk1d1pXNTFiV0p5WVVOdmN5QTlJRTFoZEdndVkyOXpLRkF1WVc1bmJHVWdLaUFvTVNBdElGQXVjR1Z1ZFcxaWNtRXBLU3dnUmpJdVpHVmpZWGtnUFNCUUxtUmxZMkY1TENCUUxtTmhjM1JUYUdGa2IzY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdUekVnUFNCUUxuTm9ZV1J2ZHl3Z2JtVXhJRDBnYmk1blpYUW9VQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVXhMbk5vWVdSdmQwSnBZWE1nUFNCUE1TNWlhV0Z6TENCdVpURXVjMmhoWkc5M1RtOXliV0ZzUW1saGN5QTlJRTh4TG01dmNtMWhiRUpwWVhNc0lHNWxNUzV6YUdGa2IzZFNZV1JwZFhNZ1BTQlBNUzV5WVdScGRYTXNJRzVsTVM1emFHRmtiM2ROWVhCVGFYcGxJRDBnVHpFdWJXRndVMmw2WlN3Z2FTNXpjRzkwVTJoaFpHOTNXMmRkSUQwZ2JtVXhMQ0JwTG5Od2IzUlRhR0ZrYjNkTllYQmJaMTBnUFNCVkxDQnBMbk53YjNSVGFHRmtiM2ROWVhSeWFYaGJaMTBnUFNCUUxuTm9ZV1J2ZHk1dFlYUnlhWGdzSUVFckt6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VjM0J2ZEZ0blhTQTlJRVl5TENCbkt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1VDNXBjMUpsWTNSQmNtVmhUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JHTXlBOUlIUXVaMlYwS0ZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1JqTXVZMjlzYjNJdVkyOXdlU2gzS1M1dGRXeDBhWEJzZVZOallXeGhjaWhGS1N3Z1JqTXVhR0ZzWmxkcFpIUm9Mbk5sZENoUUxuZHBaSFJvSUNvZ0xqVXNJREFzSURBcExDQkdNeTVvWVd4bVNHVnBaMmgwTG5ObGRDZ3dMQ0JRTG1obGFXZG9kQ0FxSUM0MUxDQXdLU3dnYVM1eVpXTjBRWEpsWVZ0d1hTQTlJRVl6TENCd0t5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1VDNXBjMUJ2YVc1MFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdOQ0E5SUhRdVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFWTBMbU52Ykc5eUxtTnZjSGtvVUM1amIyeHZjaWt1YlhWc2RHbHdiSGxUWTJGc1lYSW9VQzVwYm5SbGJuTnBkSGtnS2lCTUtTd2dSalF1WkdsemRHRnVZMlVnUFNCUUxtUnBjM1JoYm1ObExDQkdOQzVrWldOaGVTQTlJRkF1WkdWallYa3NJRkF1WTJGemRGTm9ZV1J2ZHlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUE1pQTlJRkF1YzJoaFpHOTNMQ0J1WlRJZ1BTQnVMbWRsZENoUUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1WlRJdWMyaGhaRzkzUW1saGN5QTlJRTh5TG1KcFlYTXNJRzVsTWk1emFHRmtiM2RPYjNKdFlXeENhV0Z6SUQwZ1R6SXVibTl5YldGc1FtbGhjeXdnYm1VeUxuTm9ZV1J2ZDFKaFpHbDFjeUE5SUU4eUxuSmhaR2wxY3l3Z2JtVXlMbk5vWVdSdmQwMWhjRk5wZW1VZ1BTQlBNaTV0WVhCVGFYcGxMQ0J1WlRJdWMyaGhaRzkzUTJGdFpYSmhUbVZoY2lBOUlFOHlMbU5oYldWeVlTNXVaV0Z5TENCdVpUSXVjMmhoWkc5M1EyRnRaWEpoUm1GeUlEMGdUekl1WTJGdFpYSmhMbVpoY2l3Z2FTNXdiMmx1ZEZOb1lXUnZkMXQyWFNBOUlHNWxNaXdnYVM1d2IybHVkRk5vWVdSdmQwMWhjRnQyWFNBOUlGVXNJR2t1Y0c5cGJuUlRhR0ZrYjNkTllYUnlhWGhiZGwwZ1BTQlFMbk5vWVdSdmR5NXRZWFJ5YVhnc0lHSXJLenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2t1Y0c5cGJuUmJkbDBnUFNCR05Dd2dkaXNyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRkF1YVhOSVpXMXBjM0JvWlhKbFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdOU0E5SUhRdVoyVjBLRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUmpVdWMydDVRMjlzYjNJdVkyOXdlU2hRTG1OdmJHOXlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaEZJQ29nVENrc0lFWTFMbWR5YjNWdVpFTnZiRzl5TG1OdmNIa29VQzVuY205MWJtUkRiMnh2Y2lrdWJYVnNkR2x3YkhsVFkyRnNZWElvUlNBcUlFd3BMQ0JwTG1obGJXbGJYMTBnUFNCR05Td2dYeXNyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEFnUGlBd0lDWW1JQ2hsTG1selYyVmlSMHd5SUh4OElITXVhR0Z6S0NKUFJWTmZkR1Y0ZEhWeVpWOW1iRzloZEY5c2FXNWxZWElpS1NBOVBUMGdJVEFnUHlBb2FTNXlaV04wUVhKbFlVeFVRekVnUFNCcFpTNU1WRU5mUmt4UFFWUmZNU3dnYVM1eVpXTjBRWEpsWVV4VVF6SWdQU0JwWlM1TVZFTmZSa3hQUVZSZk1pa2dPaUJ6TG1oaGN5Z2lUMFZUWDNSbGVIUjFjbVZmYUdGc1psOW1iRzloZEY5c2FXNWxZWElpS1NBOVBUMGdJVEFnUHlBb2FTNXlaV04wUVhKbFlVeFVRekVnUFNCcFpTNU1WRU5mU0VGTVJsOHhMQ0JwTG5KbFkzUkJjbVZoVEZSRE1pQTlJR2xsTGt4VVExOUlRVXhHWHpJcElEb2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWVzVoWW14bElIUnZJSFZ6WlNCU1pXTjBRWEpsWVV4cFoyaDBMaUJOYVhOemFXNW5JRmRsWWtkTUlHVjRkR1Z1YzJsdmJuTXVJaWtwTENCcExtRnRZbWxsYm5SYk1GMGdQU0JrTENCcExtRnRZbWxsYm5SYk1WMGdQU0JtTENCcExtRnRZbWxsYm5SYk1sMGdQU0J0T3dvZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnYVM1b1lYTm9Pd29nSUNBZ0lDQWdJQ2hKTG1ScGNtVmpkR2x2Ym1Gc1RHVnVaM1JvSUNFOVBTQjRJSHg4SUVrdWNHOXBiblJNWlc1bmRHZ2dJVDA5SUhZZ2ZId2dTUzV6Y0c5MFRHVnVaM1JvSUNFOVBTQm5JSHg4SUVrdWNtVmpkRUZ5WldGTVpXNW5kR2dnSVQwOUlIQWdmSHdnU1M1b1pXMXBUR1Z1WjNSb0lDRTlQU0JmSUh4OElFa3ViblZ0UkdseVpXTjBhVzl1WVd4VGFHRmtiM2R6SUNFOVBTQjVJSHg4SUVrdWJuVnRVRzlwYm5SVGFHRmtiM2R6SUNFOVBTQmlJSHg4SUVrdWJuVnRVM0J2ZEZOb1lXUnZkM01nSVQwOUlFRXBJQ1ltSUNocExtUnBjbVZqZEdsdmJtRnNMbXhsYm1kMGFDQTlJSGdzSUdrdWMzQnZkQzVzWlc1bmRHZ2dQU0JuTENCcExuSmxZM1JCY21WaExteGxibWQwYUNBOUlIQXNJR2t1Y0c5cGJuUXViR1Z1WjNSb0lEMGdkaXdnYVM1b1pXMXBMbXhsYm1kMGFDQTlJRjhzSUdrdVpHbHlaV04wYVc5dVlXeFRhR0ZrYjNjdWJHVnVaM1JvSUQwZ2VTd2dhUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0M1c1pXNW5kR2dnUFNCNUxDQnBMbkJ2YVc1MFUyaGhaRzkzTG14bGJtZDBhQ0E5SUdJc0lHa3VjRzlwYm5SVGFHRmtiM2ROWVhBdWJHVnVaM1JvSUQwZ1lpd2dhUzV6Y0c5MFUyaGhaRzkzTG14bGJtZDBhQ0E5SUVFc0lHa3VjM0J2ZEZOb1lXUnZkMDFoY0M1c1pXNW5kR2dnUFNCQkxDQnBMbVJwY21WamRHbHZibUZzVTJoaFpHOTNUV0YwY21sNExteGxibWQwYUNBOUlIa3NJR2t1Y0c5cGJuUlRhR0ZrYjNkTllYUnlhWGd1YkdWdVozUm9JRDBnWWl3Z2FTNXpjRzkwVTJoaFpHOTNUV0YwY21sNExteGxibWQwYUNBOUlFRXNJRWt1WkdseVpXTjBhVzl1WVd4TVpXNW5kR2dnUFNCNExDQkpMbkJ2YVc1MFRHVnVaM1JvSUQwZ2Rpd2dTUzV6Y0c5MFRHVnVaM1JvSUQwZ1p5d2dTUzV5WldOMFFYSmxZVXhsYm1kMGFDQTlJSEFzSUVrdWFHVnRhVXhsYm1kMGFDQTlJRjhzSUVrdWJuVnRSR2x5WldOMGFXOXVZV3hUYUdGa2IzZHpJRDBnZVN3Z1NTNXVkVzFRYjJsdWRGTm9ZV1J2ZDNNZ1BTQmlMQ0JKTG01MWJWTndiM1JUYUdGa2IzZHpJRDBnUVN3Z2FTNTJaWEp6YVc5dUlEMGdlWGdyS3lrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmpLR2dzSUhVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnWkNBOUlEQXNJR1lnUFNBd0xDQnRJRDBnTUN3Z2VDQTlJREFzSUhZZ1BTQXdMQ0JuSUQwZ2RTNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQndJRDBnTUN3Z1h5QTlJR2d1YkdWdVozUm9PeUJ3SUR3Z1h6c2djQ3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhrZ1BTQm9XM0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZVM1cGMwUnBjbVZqZEdsdmJtRnNUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ2FTNWthWEpsWTNScGIyNWhiRnRrWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdJdVpHbHlaV04wYVc5dUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWg1TG0xaGRISnBlRmR2Y214a0tTd2djaTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2VTNTBZWEpuWlhRdWJXRjBjbWw0VjI5eWJHUXBMQ0JpTG1ScGNtVmpkR2x2Ymk1emRXSW9jaWtzSUdJdVpHbHlaV04wYVc5dUxuUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpaG5LU3dnWkNzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hrdWFYTlRjRzkwVEdsbmFIUXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaU1TQTlJR2t1YzNCdmRGdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0l4TG5CdmMybDBhVzl1TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z1lqRXVjRzl6YVhScGIyNHVZWEJ3YkhsTllYUnlhWGcwS0djcExDQmlNUzVrYVhKbFkzUnBiMjR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtIa3ViV0YwY21sNFYyOXliR1FwTENCeUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWg1TG5SaGNtZGxkQzV0WVhSeWFYaFhiM0pzWkNrc0lHSXhMbVJwY21WamRHbHZiaTV6ZFdJb2Npa3NJR0l4TG1ScGNtVmpkR2x2Ymk1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b1p5a3NJRzByS3pzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2g1TG1selVtVmpkRUZ5WldGTWFXZG9kQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSXlJRDBnYVM1eVpXTjBRWEpsWVZ0NFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSXlMbkJ2YzJsMGFXOXVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloNUxtMWhkSEpwZUZkdmNteGtLU3dnWWpJdWNHOXphWFJwYjI0dVlYQndiSGxOWVhSeWFYZzBLR2NwTENCaExtbGtaVzUwYVhSNUtDa3NJRzh1WTI5d2VTaDVMbTFoZEhKcGVGZHZjbXhrS1N3Z2J5NXdjbVZ0ZFd4MGFYQnNlU2huS1N3Z1lTNWxlSFJ5WVdOMFVtOTBZWFJwYjI0b2J5a3NJR0l5TG1oaGJHWlhhV1IwYUM1elpYUW9lUzUzYVdSMGFDQXFJQzQxTENBd0xDQXdLU3dnWWpJdWFHRnNaa2hsYVdkb2RDNXpaWFFvTUN3Z2VTNW9aV2xuYUhRZ0tpQXVOU3dnTUNrc0lHSXlMbWhoYkdaWGFXUjBhQzVoY0hCc2VVMWhkSEpwZURRb1lTa3NJR0l5TG1oaGJHWklaV2xuYUhRdVlYQndiSGxOWVhSeWFYZzBLR0VwTENCNEt5czdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2VTNXBjMUJ2YVc1MFRHbG5hSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlNeUE5SUdrdWNHOXBiblJiWmwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaU15NXdiM05wZEdsdmJpNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZVM1dFlYUnlhWGhYYjNKc1pDa3NJR0l6TG5CdmMybDBhVzl1TG1Gd2NHeDVUV0YwY21sNE5DaG5LU3dnWmlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hrdWFYTklaVzFwYzNCb1pYSmxUR2xuYUhRcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpTkNBOUlHa3VhR1Z0YVZ0MlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSTBMbVJwY21WamRHbHZiaTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2VTNXRZWFJ5YVhoWGIzSnNaQ2tzSUdJMExtUnBjbVZqZEdsdmJpNTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aeWtzSUdJMExtUnBjbVZqZEdsdmJpNXViM0p0WVd4cGVtVW9LU3dnZGlzck93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2NtVjBkWEp1SUhzS0lDQWdJQ0FnSUNCelpYUjFjRG9nYkN3S0lDQWdJQ0FnSUNCelpYUjFjRlpwWlhjNklHTXNDaUFnSUNBZ0lDQWdjM1JoZEdVNklHa0tJQ0FnSUgwN0NuMEtablZ1WTNScGIyNGdKR3dvY3l3Z1pTa2dld29nSUNBZ2JHVjBJSFFnUFNCdVpYY2dYM2dvY3l3Z1pTa3NJRzRnUFNCYlhTd2dhU0E5SUZ0ZE93b2dJQ0FnWm5WdVkzUnBiMjRnY2lncElIc0tJQ0FnSUNBZ0lDQnVMbXhsYm1kMGFDQTlJREFzSUdrdWJHVnVaM1JvSUQwZ01Ec0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzhvZFNrZ2V3b2dJQ0FnSUNBZ0lHNHVjSFZ6YUNoMUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR0VvZFNrZ2V3b2dJQ0FnSUNBZ0lHa3VjSFZ6YUNoMUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR3dvZFNrZ2V3b2dJQ0FnSUNBZ0lIUXVjMlYwZFhBb2Jpd2dkU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCaktIVXBJSHNLSUNBZ0lDQWdJQ0IwTG5ObGRIVndWbWxsZHlodUxDQjFLVHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnYVc1cGREb2djaXdLSUNBZ0lDQWdJQ0J6ZEdGMFpUb2dld29nSUNBZ0lDQWdJQ0FnSUNCc2FXZG9kSE5CY25KaGVUb2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhaRzkzYzBGeWNtRjVPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnNhV2RvZEhNNklIUUtJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZEhWd1RHbG5hSFJ6T2lCc0xBb2dJQ0FnSUNBZ0lITmxkSFZ3VEdsbmFIUnpWbWxsZHpvZ1l5d0tJQ0FnSUNBZ0lDQndkWE5vVEdsbmFIUTZJRzhzQ2lBZ0lDQWdJQ0FnY0hWemFGTm9ZV1J2ZHpvZ1lRb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQk5lQ2h6TENCbEtTQjdDaUFnSUNCc1pYUWdkQ0E5SUc1bGR5QlhaV0ZyVFdGd093b2dJQ0FnWm5WdVkzUnBiMjRnYmloeUxDQnZJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JoT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwTG1oaGN5aHlLU0E5UFQwZ0lURWdQeUFvWVNBOUlHNWxkeUFrYkNoekxDQmxLU3dnZEM1elpYUW9jaXdnV3dvZ0lDQWdJQ0FnSUNBZ0lDQmhDaUFnSUNBZ0lDQWdYU2twSURvZ2J5QStQU0IwTG1kbGRDaHlLUzVzWlc1bmRHZ2dQeUFvWVNBOUlHNWxkeUFrYkNoekxDQmxLU3dnZEM1blpYUW9jaWt1Y0hWemFDaGhLU2tnT2lCaElEMGdkQzVuWlhRb2NpbGJiMTBzSUdFN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLQ2tnZXdvZ0lDQWdJQ0FnSUhRZ1BTQnVaWGNnVjJWaGEwMWhjRHNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQnVMQW9nSUNBZ0lDQWdJR1JwYzNCdmMyVTZJR2tLSUNBZ0lIMDdDbjBLZG1GeUlHVnZJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vUkdWd2RHaE5ZWFJsY21saGJDSXNJSFJvYVhNdVpHVndkR2hRWVdOcmFXNW5JRDBnVG1Rc0lIUm9hWE11YldGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWthWE53YkdGalpXMWxiblJUWTJGc1pTQTlJREVzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJREFzSUhSb2FYTXVkMmx5WldaeVlXMWxJRDBnSVRFc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvSUQwZ01Td2dkR2hwY3k1bWIyY2dQU0FoTVN3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWtaWEIwYUZCaFkydHBibWNnUFNCbExtUmxjSFJvVUdGamEybHVaeXdnZEdocGN5NXRZWEFnUFNCbExtMWhjQ3dnZEdocGN5NWhiSEJvWVUxaGNDQTlJR1V1WVd4d2FHRk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdaUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q21WdkxuQnliM1J2ZEhsd1pTNXBjMDFsYzJoRVpYQjBhRTFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUIwYnlBOUlHTnNZWE56SUdWNGRHVnVaSE1nWkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFFUnBjM1JoYm1ObFRXRjBaWEpwWVd3aUxDQjBhR2x6TG5KbFptVnlaVzVqWlZCdmMybDBhVzl1SUQwZ2JtVjNJRTBzSUhSb2FYTXVibVZoY2tScGMzUmhibU5sSUQwZ01Td2dkR2hwY3k1bVlYSkVhWE4wWVc1alpTQTlJREZsTXl3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdNU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJDYVdGeklEMGdNQ3dnZEdocGN5NW1iMmNnUFNBaE1Td2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTV5WldabGNtVnVZMlZRYjNOcGRHbHZiaTVqYjNCNUtHVXVjbVZtWlhKbGJtTmxVRzl6YVhScGIyNHBMQ0IwYUdsekxtNWxZWEpFYVhOMFlXNWpaU0E5SUdVdWJtVmhja1JwYzNSaGJtTmxMQ0IwYUdsekxtWmhja1JwYzNSaGJtTmxJRDBnWlM1bVlYSkVhWE4wWVc1alpTd2dkR2hwY3k1dFlYQWdQU0JsTG0xaGNDd2dkR2hwY3k1aGJIQm9ZVTFoY0NBOUlHVXVZV3h3YUdGTllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q25SdkxuQnliM1J2ZEhsd1pTNXBjMDFsYzJoRWFYTjBZVzVqWlUxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCaWVDQTlJR0IyYjJsa0lHMWhhVzRvS1NCN0NnbG5iRjlRYjNOcGRHbHZiaUE5SUhabFl6UW9JSEJ2YzJsMGFXOXVMQ0F4TGpBZ0tUc0tmV0FzSUhkNElEMGdZSFZ1YVdadmNtMGdjMkZ0Y0d4bGNqSkVJSE5vWVdSdmQxOXdZWE56T3dwMWJtbG1iM0p0SUhabFl6SWdjbVZ6YjJ4MWRHbHZianNLZFc1cFptOXliU0JtYkc5aGRDQnlZV1JwZFhNN0NpTnBibU5zZFdSbElEeHdZV05yYVc1blBncDJiMmxrSUcxaGFXNG9LU0I3Q2dsamIyNXpkQ0JtYkc5aGRDQnpZVzF3YkdWeklEMGdabXh2WVhRb0lGWlRUVjlUUVUxUVRFVlRJQ2s3Q2dsbWJHOWhkQ0J0WldGdUlEMGdNQzR3T3dvSlpteHZZWFFnYzNGMVlYSmxaRjl0WldGdUlEMGdNQzR3T3dvSlpteHZZWFFnZFhaVGRISnBaR1VnUFNCellXMXdiR1Z6SUR3OUlERXVNQ0EvSURBdU1DQTZJREl1TUNBdklDZ2djMkZ0Y0d4bGN5QXRJREV1TUNBcE93b0pabXh2WVhRZ2RYWlRkR0Z5ZENBOUlITmhiWEJzWlhNZ1BEMGdNUzR3SUQ4Z01DNHdJRG9nTFNBeExqQTdDZ2xtYjNJZ0tDQm1iRzloZENCcElEMGdNQzR3T3lCcElEd2djMkZ0Y0d4bGN6c2dhU0FyS3lBcElIc0tDUWxtYkc5aGRDQjFkazltWm5ObGRDQTlJSFYyVTNSaGNuUWdLeUJwSUNvZ2RYWlRkSEpwWkdVN0Nna0pJMmxtWkdWbUlFaFBVa2xhVDA1VVFVeGZVRUZUVXdvSkNRbDJaV015SUdScGMzUnlhV0oxZEdsdmJpQTlJSFZ1Y0dGamExSkhRa0ZVYnpKSVlXeG1LQ0IwWlhoMGRYSmxNa1FvSUhOb1lXUnZkMTl3WVhOekxDQW9JR2RzWDBaeVlXZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lIVjJUMlptYzJWMExDQXdMakFnS1NBcUlISmhaR2wxY3lBcElDOGdjbVZ6YjJ4MWRHbHZiaUFwSUNrN0Nna0pDVzFsWVc0Z0t6MGdaR2x6ZEhKcFluVjBhVzl1TG5nN0Nna0pDWE54ZFdGeVpXUmZiV1ZoYmlBclBTQmthWE4wY21saWRYUnBiMjR1ZVNBcUlHUnBjM1J5YVdKMWRHbHZiaTU1SUNzZ1pHbHpkSEpwWW5WMGFXOXVMbmdnS2lCa2FYTjBjbWxpZFhScGIyNHVlRHNLQ1FralpXeHpaUW9KQ1FsbWJHOWhkQ0JrWlhCMGFDQTlJSFZ1Y0dGamExSkhRa0ZVYjBSbGNIUm9LQ0IwWlhoMGRYSmxNa1FvSUhOb1lXUnZkMTl3WVhOekxDQW9JR2RzWDBaeVlXZERiMjl5WkM1NGVTQXJJSFpsWXpJb0lEQXVNQ3dnZFhaUFptWnpaWFFnS1NBcUlISmhaR2wxY3lBcElDOGdjbVZ6YjJ4MWRHbHZiaUFwSUNrN0Nna0pDVzFsWVc0Z0t6MGdaR1Z3ZEdnN0Nna0pDWE54ZFdGeVpXUmZiV1ZoYmlBclBTQmtaWEIwYUNBcUlHUmxjSFJvT3dvSkNTTmxibVJwWmdvSmZRb0piV1ZoYmlBOUlHMWxZVzRnTHlCellXMXdiR1Z6T3dvSmMzRjFZWEpsWkY5dFpXRnVJRDBnYzNGMVlYSmxaRjl0WldGdUlDOGdjMkZ0Y0d4bGN6c0tDV1pzYjJGMElITjBaRjlrWlhZZ1BTQnpjWEowS0NCemNYVmhjbVZrWDIxbFlXNGdMU0J0WldGdUlDb2diV1ZoYmlBcE93b0paMnhmUm5KaFowTnZiRzl5SUQwZ2NHRmphekpJWVd4bVZHOVNSMEpCS0NCMlpXTXlLQ0J0WldGdUxDQnpkR1JmWkdWMklDa2dLVHNLZldBN0NtWjFibU4wYVc5dUlIbG9LSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJRVJ5TENCcElEMGdibVYzSUZnc0lISWdQU0J1WlhjZ1dDd2dieUE5SUc1bGR5QldaU3dnWVNBOUlHNWxkeUJsYnloN0NpQWdJQ0FnSUNBZ1pHVndkR2hRWVdOcmFXNW5PaUJDWkFvZ0lDQWdmU2tzSUd3Z1BTQnVaWGNnZEc4c0lHTWdQU0I3ZlN3Z2FDQTlJSFF1YldGNFZHVjRkSFZ5WlZOcGVtVXNJSFVnUFNCN0NpQWdJQ0FnSUNBZ01Eb2dhWFFzQ2lBZ0lDQWdJQ0FnTVRvZ1FXa3NDaUFnSUNBZ0lDQWdNam9nUTJrS0lDQWdJSDBzSUdRZ1BTQnVaWGNnYzI0b2V3b2dJQ0FnSUNBZ0lHUmxabWx1WlhNNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnVmxOTlgxTkJUVkJNUlZNNklEZ0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSFZ1YVdadmNtMXpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lITm9ZV1J2ZDE5d1lYTnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2diblZzYkFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCeVpYTnZiSFYwYVc5dU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ2JtVjNJRmdLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUI3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dOQW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQjJaWEowWlhoVGFHRmtaWEk2SUdKNExBb2dJQ0FnSUNBZ0lHWnlZV2R0Wlc1MFUyaGhaR1Z5T2lCM2VBb2dJQ0FnZlNrc0lHWWdQU0JrTG1Oc2IyNWxLQ2s3Q2lBZ0lDQm1MbVJsWm1sdVpYTXVTRTlTU1ZwUFRsUkJURjlRUVZOVElEMGdNVHNLSUNBZ0lHeGxkQ0J0SUQwZ2JtVjNJRjlsT3dvZ0lDQWdiUzV6WlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpd2dibVYzSUZWbEtHNWxkeUJHYkc5aGRETXlRWEp5WVhrb1d3b2dJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUM0MUxBb2dJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnTGpVc0NpQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0F1TlFvZ0lDQWdYU2tzSURNcEtUc0tJQ0FnSUd4bGRDQjRJRDBnYm1WM0lITjBLRzBzSUdRcExDQjJJRDBnZEdocGN6c0tJQ0FnSUhSb2FYTXVaVzVoWW14bFpDQTlJQ0V4TENCMGFHbHpMbUYxZEc5VmNHUmhkR1VnUFNBaE1Dd2dkR2hwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMblI1Y0dVZ1BTQklZeXdnZEdocGN5NXlaVzVrWlhJZ1BTQm1kVzVqZEdsdmJpaDVMQ0JpTENCQktTQjdDaUFnSUNBZ0lDQWdhV1lnS0hZdVpXNWhZbXhsWkNBOVBUMGdJVEVnZkh3Z2RpNWhkWFJ2VlhCa1lYUmxJRDA5UFNBaE1TQW1KaUIyTG01bFpXUnpWWEJrWVhSbElEMDlQU0FoTVNCOGZDQjVMbXhsYm1kMGFDQTlQVDBnTUNrZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUd4bGRDQk1JRDBnY3k1blpYUlNaVzVrWlhKVVlYSm5aWFFvS1N3Z1NTQTlJSE11WjJWMFFXTjBhWFpsUTNWaVpVWmhZMlVvS1N3Z2F5QTlJSE11WjJWMFFXTjBhWFpsVFdsd2JXRndUR1YyWld3b0tTd2dRaUE5SUhNdWMzUmhkR1U3Q2lBZ0lDQWdJQ0FnUWk1elpYUkNiR1Z1WkdsdVp5aDJiaWtzSUVJdVluVm1abVZ5Y3k1amIyeHZjaTV6WlhSRGJHVmhjaWd4TENBeExDQXhMQ0F4S1N3Z1FpNWlkV1ptWlhKekxtUmxjSFJvTG5ObGRGUmxjM1FvSVRBcExDQkNMbk5sZEZOamFYTnpiM0pVWlhOMEtDRXhLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRkFnUFNBd0xDQjNJRDBnZVM1c1pXNW5kR2c3SUZBZ1BDQjNPeUJRS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1JTQTlJSGxiVUYwc0lFUWdQU0JGTG5Ob1lXUnZkenNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRVFnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZOb1lXUnZkMDFoY0RvaUxDQkZMQ0FpYUdGeklHNXZJSE5vWVdSdmR5NGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoRUxtRjFkRzlWY0dSaGRHVWdQVDA5SUNFeElDWW1JRVF1Ym1WbFpITlZjR1JoZEdVZ1BUMDlJQ0V4S1NCamIyNTBhVzUxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdhUzVqYjNCNUtFUXViV0Z3VTJsNlpTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlZJRDBnUkM1blpYUkdjbUZ0WlVWNGRHVnVkSE1vS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drdWJYVnNkR2x3Ykhrb1ZTa3NJSEl1WTI5d2VTaEVMbTFoY0ZOcGVtVXBMQ0FvYVM1NElENGdhQ0I4ZkNCcExua2dQaUJvS1NBbUppQW9hUzU0SUQ0Z2FDQW1KaUFvY2k1NElEMGdUV0YwYUM1bWJHOXZjaWhvSUM4Z1ZTNTRLU3dnYVM1NElEMGdjaTU0SUNvZ1ZTNTRMQ0JFTG0xaGNGTnBlbVV1ZUNBOUlISXVlQ2tzSUdrdWVTQStJR2dnSmlZZ0tISXVlU0E5SUUxaGRHZ3VabXh2YjNJb2FDQXZJRlV1ZVNrc0lHa3VlU0E5SUhJdWVTQXFJRlV1ZVN3Z1JDNXRZWEJUYVhwbExua2dQU0J5TG5rcEtTd2dSQzV0WVhBZ1BUMDlJRzUxYkd3Z0ppWWdJVVF1YVhOUWIybHVkRXhwWjJoMFUyaGhaRzkzSUNZbUlIUm9hWE11ZEhsd1pTQTlQVDBnYVhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JQSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFwYmtacGJIUmxjam9nZEhRc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV0ZuUm1sc2RHVnlPaUIwZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0p0WVhRNklHTjBDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdSQzV0WVhBZ1BTQnVaWGNnUVhRb2FTNTRMQ0JwTG5rc0lFOHBMQ0JFTG0xaGNDNTBaWGgwZFhKbExtNWhiV1VnUFNCRkxtNWhiV1VnS3lBaUxuTm9ZV1J2ZDAxaGNDSXNJRVF1YldGd1VHRnpjeUE5SUc1bGR5QkJkQ2hwTG5nc0lHa3VlU3dnVHlrc0lFUXVZMkZ0WlhKaExuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCcFppQW9SQzV0WVhBZ1BUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JQTVNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVc1R2FXeDBaWEk2SUhKMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFoWjBacGJIUmxjam9nY25Rc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5YldGME9pQmpkQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRVF1YldGd0lEMGdibVYzSUVGMEtHa3VlQ3dnYVM1NUxDQlBNU2tzSUVRdWJXRndMblJsZUhSMWNtVXVibUZ0WlNBOUlFVXVibUZ0WlNBcklDSXVjMmhoWkc5M1RXRndJaXdnUkM1allXMWxjbUV1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRVF1YldGd0tTd2djeTVqYkdWaGNpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUVRdVoyVjBWbWxsZDNCdmNuUkRiM1Z1ZENncE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRTh5SUQwZ01Ec2dUeklnUENCR095QlBNaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVaU0E5SUVRdVoyVjBWbWxsZDNCdmNuUW9UeklwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnk1elpYUW9jaTU0SUNvZ2JtVXVlQ3dnY2k1NUlDb2dibVV1ZVN3Z2NpNTRJQ29nYm1VdWVpd2djaTU1SUNvZ2JtVXVkeWtzSUVJdWRtbGxkM0J2Y25Rb2J5a3NJRVF1ZFhCa1lYUmxUV0YwY21salpYTW9SU3dnVHpJcExDQnVJRDBnUkM1blpYUkdjblZ6ZEhWdEtDa3NJRjhvWWl3Z1FTd2dSQzVqWVcxbGNtRXNJRVVzSUhSb2FYTXVkSGx3WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lVUXVhWE5RYjJsdWRFeHBaMmgwVTJoaFpHOTNJQ1ltSUhSb2FYTXVkSGx3WlNBOVBUMGdhWElnSmlZZ1p5aEVMQ0JCS1N3Z1JDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFeE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjJMbTVsWldSelZYQmtZWFJsSUQwZ0lURXNJSE11YzJWMFVtVnVaR1Z5VkdGeVoyVjBLRXdzSUVrc0lHc3BPd29nSUNBZ2ZUc0tJQ0FnSUdaMWJtTjBhVzl1SUdjb2VTd2dZaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQkJJRDBnWlM1MWNHUmhkR1VvZUNrN0NpQWdJQ0FnSUNBZ1pDNWtaV1pwYm1WekxsWlRUVjlUUVUxUVRFVlRJQ0U5UFNCNUxtSnNkWEpUWVcxd2JHVnpJQ1ltSUNoa0xtUmxabWx1WlhNdVZsTk5YMU5CVFZCTVJWTWdQU0I1TG1Kc2RYSlRZVzF3YkdWekxDQm1MbVJsWm1sdVpYTXVWbE5OWDFOQlRWQk1SVk1nUFNCNUxtSnNkWEpUWVcxd2JHVnpMQ0JrTG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUdZdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrc0lHUXVkVzVwWm05eWJYTXVjMmhoWkc5M1gzQmhjM011ZG1Gc2RXVWdQU0I1TG0xaGNDNTBaWGgwZFhKbExDQmtMblZ1YVdadmNtMXpMbkpsYzI5c2RYUnBiMjR1ZG1Gc2RXVWdQU0I1TG0xaGNGTnBlbVVzSUdRdWRXNXBabTl5YlhNdWNtRmthWFZ6TG5aaGJIVmxJRDBnZVM1eVlXUnBkWE1zSUhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwS0hrdWJXRndVR0Z6Y3lrc0lITXVZMnhsWVhJb0tTd2djeTV5Wlc1a1pYSkNkV1ptWlhKRWFYSmxZM1FvWWl3Z2JuVnNiQ3dnUVN3Z1pDd2dlQ3dnYm5Wc2JDa3NJR1l1ZFc1cFptOXliWE11YzJoaFpHOTNYM0JoYzNNdWRtRnNkV1VnUFNCNUxtMWhjRkJoYzNNdWRHVjRkSFZ5WlN3Z1ppNTFibWxtYjNKdGN5NXlaWE52YkhWMGFXOXVMblpoYkhWbElEMGdlUzV0WVhCVGFYcGxMQ0JtTG5WdWFXWnZjbTF6TG5KaFpHbDFjeTUyWVd4MVpTQTlJSGt1Y21Ga2FYVnpMQ0J6TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2g1TG0xaGNDa3NJSE11WTJ4bFlYSW9LU3dnY3k1eVpXNWtaWEpDZFdabVpYSkVhWEpsWTNRb1lpd2diblZzYkN3Z1FTd2daaXdnZUN3Z2JuVnNiQ2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCd0tIa3NJR0lzSUVFc0lFd3NJRWtzSUdzc0lFSXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1VDQTlJRzUxYkd3c0lIY2dQU0JNTG1selVHOXBiblJNYVdkb2RDQTlQVDBnSVRBZ1B5QjVMbU4xYzNSdmJVUnBjM1JoYm1ObFRXRjBaWEpwWVd3Z09pQjVMbU4xYzNSdmJVUmxjSFJvVFdGMFpYSnBZV3c3Q2lBZ0lDQWdJQ0FnYVdZZ0tIY2dJVDA5SUhadmFXUWdNQ0EvSUZBZ1BTQjNJRG9nVUNBOUlFd3VhWE5RYjJsdWRFeHBaMmgwSUQwOVBTQWhNQ0EvSUd3Z09pQmhMQ0J6TG14dlkyRnNRMnhwY0hCcGJtZEZibUZpYkdWa0lDWW1JRUV1WTJ4cGNGTm9ZV1J2ZDNNZ1BUMDlJQ0V3SUNZbUlFRXVZMnhwY0hCcGJtZFFiR0Z1WlhNdWJHVnVaM1JvSUNFOVBTQXdJSHg4SUVFdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNZbUlFRXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdJVDA5SURBZ2ZId2dRUzVoYkhCb1lVMWhjQ0FtSmlCQkxtRnNjR2hoVkdWemRDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVVZ1BTQlFMblYxYVdRc0lFUWdQU0JCTG5WMWFXUXNJRlVnUFNCalcwVmRPd29nSUNBZ0lDQWdJQ0FnSUNCVklEMDlQU0IyYjJsa0lEQWdKaVlnS0ZVZ1BTQjdmU3dnWTF0RlhTQTlJRlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUmlBOUlGVmJSRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lFWWdQVDA5SUhadmFXUWdNQ0FtSmlBb1JpQTlJRkF1WTJ4dmJtVW9LU3dnVlZ0RVhTQTlJRVlwTENCUUlEMGdSanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRkF1ZG1semFXSnNaU0E5SUVFdWRtbHphV0pzWlN3Z1VDNTNhWEpsWm5KaGJXVWdQU0JCTG5kcGNtVm1jbUZ0WlN3Z1FpQTlQVDBnYVhJZ1B5QlFMbk5wWkdVZ1BTQkJMbk5vWVdSdmQxTnBaR1VnSVQwOUlHNTFiR3dnUHlCQkxuTm9ZV1J2ZDFOcFpHVWdPaUJCTG5OcFpHVWdPaUJRTG5OcFpHVWdQU0JCTG5Ob1lXUnZkMU5wWkdVZ0lUMDlJRzUxYkd3Z1B5QkJMbk5vWVdSdmQxTnBaR1VnT2lCMVcwRXVjMmxrWlYwc0lGQXVZV3h3YUdGTllYQWdQU0JCTG1Gc2NHaGhUV0Z3TENCUUxtRnNjR2hoVkdWemRDQTlJRUV1WVd4d2FHRlVaWE4wTENCUUxtTnNhWEJUYUdGa2IzZHpJRDBnUVM1amJHbHdVMmhoWkc5M2N5d2dVQzVqYkdsd2NHbHVaMUJzWVc1bGN5QTlJRUV1WTJ4cGNIQnBibWRRYkdGdVpYTXNJRkF1WTJ4cGNFbHVkR1Z5YzJWamRHbHZiaUE5SUVFdVkyeHBjRWx1ZEdWeWMyVmpkR2x2Yml3Z1VDNWthWE53YkdGalpXMWxiblJOWVhBZ1BTQkJMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDd2dVQzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUVFdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lGQXVaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJRUV1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeXdnVUM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ1BTQkJMbmRwY21WbWNtRnRaVXhwYm1WM2FXUjBhQ3dnVUM1c2FXNWxkMmxrZEdnZ1BTQkJMbXhwYm1WM2FXUjBhQ3dnVEM1cGMxQnZhVzUwVEdsbmFIUWdQVDA5SUNFd0lDWW1JRkF1YVhOTlpYTm9SR2x6ZEdGdVkyVk5ZWFJsY21saGJDQTlQVDBnSVRBZ0ppWWdLRkF1Y21WbVpYSmxibU5sVUc5emFYUnBiMjR1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtFd3ViV0YwY21sNFYyOXliR1FwTENCUUxtNWxZWEpFYVhOMFlXNWpaU0E5SUVrc0lGQXVabUZ5UkdsemRHRnVZMlVnUFNCcktTd2dVRHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUY4b2VTd2dZaXdnUVN3Z1RDd2dTU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDVMblpwYzJsaWJHVWdQVDA5SUNFeEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2FXWWdLSGt1YkdGNVpYSnpMblJsYzNRb1lpNXNZWGxsY25NcElDWW1JQ2g1TG1selRXVnphQ0I4ZkNCNUxtbHpUR2x1WlNCOGZDQjVMbWx6VUc5cGJuUnpLU0FtSmlBb2VTNWpZWE4wVTJoaFpHOTNJSHg4SUhrdWNtVmpaV2wyWlZOb1lXUnZkeUFtSmlCSklEMDlQU0JwY2lrZ0ppWWdLQ0Y1TG1aeWRYTjBkVzFEZFd4c1pXUWdmSHdnYmk1cGJuUmxjbk5sWTNSelQySnFaV04wS0hrcEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCNUxtMXZaR1ZzVm1sbGQwMWhkSEpwZUM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0VFdWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObExDQjVMbTFoZEhKcGVGZHZjbXhrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZBZ1BTQmxMblZ3WkdGMFpTaDVLU3dnZHlBOUlIa3ViV0YwWlhKcFlXdzdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hjcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlGQXVaM0p2ZFhCek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCRUlEMGdNQ3dnVlNBOUlFVXViR1Z1WjNSb095QkVJRHdnVlRzZ1JDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSaUE5SUVWYlJGMHNJRThnUFNCM1cwWXViV0YwWlhKcFlXeEpibVJsZUYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0U4Z0ppWWdUeTUyYVhOcFlteGxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdVpTQTlJSEFvZVN3Z1VDd2dUeXdnVEN3Z1FTNXVaV0Z5TENCQkxtWmhjaXdnU1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhNdWNtVnVaR1Z5UW5WbVptVnlSR2x5WldOMEtFRXNJRzUxYkd3c0lGQXNJRzVsTENCNUxDQkdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZHk1MmFYTnBZbXhsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdSVEVnUFNCd0tIa3NJRkFzSUhjc0lFd3NJRUV1Ym1WaGNpd2dRUzVtWVhJc0lFa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTV5Wlc1a1pYSkNkV1ptWlhKRWFYSmxZM1FvUVN3Z2JuVnNiQ3dnVUN3Z1JURXNJSGtzSUc1MWJHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0JDSUQwZ2VTNWphR2xzWkhKbGJqc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElGQXhJRDBnTUN3Z2R6RWdQU0JDTG14bGJtZDBhRHNnVURFZ1BDQjNNVHNnVURFckt5bGZLRUpiVURGZExDQmlMQ0JCTENCTUxDQkpLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJUZUNoekxDQmxMQ0IwS1NCN0NpQWdJQ0JzWlhRZ2JpQTlJSFF1YVhOWFpXSkhUREk3Q2lBZ0lDQm1kVzVqZEdsdmJpQnBLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQlNJRDBnSVRFc0lHVmxJRDBnYm1WM0lGWmxMQ0JSSUQwZ2JuVnNiQ3dnUldVZ1BTQnVaWGNnVm1Vb01Dd2dNQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFRXRnphem9nWm5WdVkzUnBiMjRvYldVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGRWdJVDA5SUcxbElDWW1JQ0ZTSUNZbUlDaHpMbU52Ykc5eVRXRnpheWh0WlN3Z2JXVXNJRzFsTENCdFpTa3NJRkVnUFNCdFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEV4dlkydGxaRG9nWm5WdVkzUnBiMjRvYldVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGSWdQU0J0WlRzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBRMnhsWVhJNklHWjFibU4wYVc5dUtHMWxMQ0JTWlN3Z2IyVXNJRXhsTENCWVpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdXR1VnUFQwOUlDRXdJQ1ltSUNodFpTQXFQU0JNWlN3Z1VtVWdLajBnVEdVc0lHOWxJQ285SUV4bEtTd2daV1V1YzJWMEtHMWxMQ0JTWlN3Z2IyVXNJRXhsS1N3Z1JXVXVaWEYxWVd4ektHVmxLU0E5UFQwZ0lURWdKaVlnS0hNdVkyeGxZWEpEYjJ4dmNpaHRaU3dnVW1Vc0lHOWxMQ0JNWlNrc0lFVmxMbU52Y0hrb1pXVXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnY21WelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVWlBOUlDRXhMQ0JSSUQwZ2JuVnNiQ3dnUldVdWMyVjBLQzB4TENBd0xDQXdMQ0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCeUtDa2dld29nSUNBZ0lDQWdJR3hsZENCU0lEMGdJVEVzSUdWbElEMGdiblZzYkN3Z1VTQTlJRzUxYkd3c0lFVmxJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSVVpYTjBPaUJtZFc1amRHbHZiaWh0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JXVWdQeUJzWlNneU9USTVLU0E2SUdabEtESTVNamtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelpYUk5ZWE5yT2lCbWRXNWpkR2x2YmlodFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV1VnSVQwOUlHMWxJQ1ltSUNGU0lDWW1JQ2h6TG1SbGNIUm9UV0Z6YXlodFpTa3NJR1ZsSUQwZ2JXVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSR2RXNWpPaUJtZFc1amRHbHZiaWh0WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRkVnSVQwOUlHMWxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzFsS1NCemQybDBZMmdvYldVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRVYxT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEV5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFRjFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUVOMU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJR1ZoT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEUxS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFeDFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUZKMU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFNEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRkIxT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWtaWEIwYUVaMWJtTW9OVEUyS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElFbDFPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY3k1a1pYQjBhRVoxYm1Nb05URTNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjeTVrWlhCMGFFWjFibU1vTlRFMUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0J6TG1SbGNIUm9SblZ1WXlnMU1UVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZFZ1BTQnRaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFRHOWphMlZrT2lCbWRXNWpkR2x2YmlodFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVaUE5SUcxbE93b2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQnpaWFJEYkdWaGNqb2dablZ1WTNScGIyNG9iV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVWbElDRTlQU0J0WlNBbUppQW9jeTVqYkdWaGNrUmxjSFJvS0cxbEtTd2dSV1VnUFNCdFpTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRklnUFNBaE1Td2daV1VnUFNCdWRXeHNMQ0JSSUQwZ2JuVnNiQ3dnUldVZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc4b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUZJZ1BTQWhNU3dnWldVZ1BTQnVkV3hzTENCUklEMGdiblZzYkN3Z1JXVWdQU0J1ZFd4c0xDQnRaU0E5SUc1MWJHd3NJRkpsSUQwZ2JuVnNiQ3dnYjJVZ1BTQnVkV3hzTENCTVpTQTlJRzUxYkd3c0lGaGxJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSVVpYTjBPaUJtZFc1amRHbHZiaWhYWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VpQjhmQ0FvVjJVZ1B5QnNaU2d5T1RZd0tTQTZJR1psS0RJNU5qQXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFRXRnphem9nWm5WdVkzUnBiMjRvVjJVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVmxJQ0U5UFNCWFpTQW1KaUFoVWlBbUppQW9jeTV6ZEdWdVkybHNUV0Z6YXloWFpTa3NJR1ZsSUQwZ1YyVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0J6WlhSR2RXNWpPaUJtZFc1amRHbHZiaWhYWlN3Z1ZYUXNJRTkwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb1VTQWhQVDBnVjJVZ2ZId2dSV1VnSVQwOUlGVjBJSHg4SUcxbElDRTlQU0JQZENrZ0ppWWdLSE11YzNSbGJtTnBiRVoxYm1Nb1YyVXNJRlYwTENCUGRDa3NJRkVnUFNCWFpTd2dSV1VnUFNCVmRDd2diV1VnUFNCUGRDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJSE5sZEU5d09pQm1kVzVqZEdsdmJpaFhaU3dnVlhRc0lFOTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FvVW1VZ0lUMDlJRmRsSUh4OElHOWxJQ0U5UFNCVmRDQjhmQ0JNWlNBaFBUMGdUM1FwSUNZbUlDaHpMbk4wWlc1amFXeFBjQ2hYWlN3Z1ZYUXNJRTkwS1N3Z1VtVWdQU0JYWlN3Z2IyVWdQU0JWZEN3Z1RHVWdQU0JQZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lITmxkRXh2WTJ0bFpEb2dablZ1WTNScGIyNG9WMlVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZJZ1BTQlhaVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWMFEyeGxZWEk2SUdaMWJtTjBhVzl1S0ZkbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQllaU0FoUFQwZ1YyVWdKaVlnS0hNdVkyeGxZWEpUZEdWdVkybHNLRmRsS1N3Z1dHVWdQU0JYWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmxjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGSWdQU0FoTVN3Z1pXVWdQU0J1ZFd4c0xDQlJJRDBnYm5Wc2JDd2dSV1VnUFNCdWRXeHNMQ0J0WlNBOUlHNTFiR3dzSUZKbElEMGdiblZzYkN3Z2IyVWdQU0J1ZFd4c0xDQk1aU0E5SUc1MWJHd3NJRmhsSUQwZ2JuVnNiRHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0JzWlhRZ1lTQTlJRzVsZHlCcExDQnNJRDBnYm1WM0lISXNJR01nUFNCdVpYY2dieXdnYUNBOUlIdDlMQ0IxSUQwZ2UzMHNJR1FnUFNCdWRXeHNMQ0JtSUQwZ0lURXNJRzBnUFNCdWRXeHNMQ0I0SUQwZ2JuVnNiQ3dnZGlBOUlHNTFiR3dzSUdjZ1BTQnVkV3hzTENCd0lEMGdiblZzYkN3Z1h5QTlJRzUxYkd3c0lIa2dQU0J1ZFd4c0xDQmlJRDBnSVRFc0lFRWdQU0J1ZFd4c0xDQk1JRDBnYm5Wc2JDd2dTU0E5SUc1MWJHd3NJR3NnUFNCdWRXeHNMQ0JDSUQwZ2JuVnNiQ3dnVUNBOUlITXVaMlYwVUdGeVlXMWxkR1Z5S0RNMU5qWXhLU3dnZHlBOUlDRXhMQ0JGSUQwZ01Dd2dSQ0E5SUhNdVoyVjBVR0Z5WVcxbGRHVnlLRGM1TXpncE93b2dJQ0FnUkM1cGJtUmxlRTltS0NKWFpXSkhUQ0lwSUNFOVBTQXRNU0EvSUNoRklEMGdjR0Z5YzJWR2JHOWhkQ2d2WGxkbFlrZE1JQ2hjWkNrdkxtVjRaV01vUkNsYk1WMHBMQ0IzSUQwZ1JTQStQU0F4S1NBNklFUXVhVzVrWlhoUFppZ2lUM0JsYmtkTUlFVlRJaWtnSVQwOUlDMHhJQ1ltSUNoRklEMGdjR0Z5YzJWR2JHOWhkQ2d2WGs5d1pXNUhUQ0JGVXlBb1hHUXBMeTVsZUdWaktFUXBXekZkS1N3Z2R5QTlJRVVnUGowZ01pazdDaUFnSUNCc1pYUWdWU0E5SUc1MWJHd3NJRVlnUFNCN2ZTd2dUeUE5SUhNdVoyVjBVR0Z5WVcxbGRHVnlLRE13T0RncExDQnVaU0E5SUhNdVoyVjBVR0Z5WVcxbGRHVnlLREk1TnpncExDQmpaU0E5SUc1bGR5QldaU2dwTG1aeWIyMUJjbkpoZVNoUEtTd2dWaUE5SUc1bGR5QldaU2dwTG1aeWIyMUJjbkpoZVNodVpTazdDaUFnSUNCbWRXNWpkR2x2YmlCWEtGSXNJR1ZsTENCUktTQjdDaUFnSUNBZ0lDQWdiR1YwSUVWbElEMGdibVYzSUZWcGJuUTRRWEp5WVhrb05Da3NJRzFsSUQwZ2N5NWpjbVZoZEdWVVpYaDBkWEpsS0NrN0NpQWdJQ0FnSUNBZ2N5NWlhVzVrVkdWNGRIVnlaU2hTTENCdFpTa3NJSE11ZEdWNFVHRnlZVzFsZEdWeWFTaFNMQ0F4TURJME1Td2dPVGN5T0Nrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoU0xDQXhNREkwTUN3Z09UY3lPQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JTWlNBOUlEQTdJRkpsSUR3Z1VUc2dVbVVyS3lsekxuUmxlRWx0WVdkbE1rUW9aV1VnS3lCU1pTd2dNQ3dnTmpRd09Dd2dNU3dnTVN3Z01Dd2dOalF3T0N3Z05URXlNU3dnUldVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdFpUc0tJQ0FnSUgwS0lDQWdJR3hsZENCb1pTQTlJSHQ5T3dvZ0lDQWdhR1ZiTXpVMU0xMGdQU0JYS0RNMU5UTXNJRE0xTlRNc0lERXBMQ0JvWlZzek5EQTJOMTBnUFNCWEtETTBNRFkzTENBek5EQTJPU3dnTmlrc0lHRXVjMlYwUTJ4bFlYSW9NQ3dnTUN3Z01Dd2dNU2tzSUd3dWMyVjBRMnhsWVhJb01Ta3NJR011YzJWMFEyeGxZWElvTUNrc0lHeGxLREk1TWprcExDQnNMbk5sZEVaMWJtTW9aV0VwTENCUFpTZ2hNU2tzSUVjb2RHd3BMQ0JzWlNneU9EZzBLU3dnWjJVb2RtNHBPd29nSUNBZ1puVnVZM1JwYjI0Z2JHVW9VaWtnZXdvZ0lDQWdJQ0FnSUdoYlVsMGdJVDA5SUNFd0lDWW1JQ2h6TG1WdVlXSnNaU2hTS1N3Z2FGdFNYU0E5SUNFd0tUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR1psS0ZJcElIc0tJQ0FnSUNBZ0lDQm9XMUpkSUNFOVBTQWhNU0FtSmlBb2N5NWthWE5oWW14bEtGSXBMQ0JvVzFKZElEMGdJVEVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1FtVW9VaXdnWldVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RWdFNYU0FoUFQwZ1pXVWdQeUFvY3k1aWFXNWtSbkpoYldWaWRXWm1aWElvVWl3Z1pXVXBMQ0IxVzFKZElEMGdaV1VzSUc0Z0ppWWdLRklnUFQwOUlETTJNREE1SUNZbUlDaDFXek0yTVRZd1hTQTlJR1ZsS1N3Z1VpQTlQVDBnTXpZeE5qQWdKaVlnS0hWYk16WXdNRGxkSUQwZ1pXVXBLU3dnSVRBcElEb2dJVEU3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCWktGSXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaQ0FoUFQwZ1VpQS9JQ2h6TG5WelpWQnliMmR5WVcwb1Vpa3NJR1FnUFNCU0xDQWhNQ2tnT2lBaE1Uc0tJQ0FnSUgwS0lDQWdJR3hsZENCRFpTQTlJSHNLSUNBZ0lDQWdJQ0JiWDJsZE9pQXpNamMzTkN3S0lDQWdJQ0FnSUNCYmJYVmRPaUF6TWpjM09Dd0tJQ0FnSUNBZ0lDQmJaM1ZkT2lBek1qYzNPUW9nSUNBZ2ZUc0tJQ0FnSUdsbUlDaHVLU0JEWlZ0emJGMGdQU0F6TWpjM05Td2dRMlZiYjJ4ZElEMGdNekkzTnpZN0NpQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQnNaWFFnVWlBOUlHVXVaMlYwS0NKRldGUmZZbXhsYm1SZmJXbHViV0Y0SWlrN0NpQWdJQ0FnSUNBZ1VpQWhQVDBnYm5Wc2JDQW1KaUFvUTJWYmMyeGRJRDBnVWk1TlNVNWZSVmhVTENCRFpWdHZiRjBnUFNCU0xrMUJXRjlGV0ZRcE93b2dJQ0FnZlFvZ0lDQWdiR1YwSUhsbElEMGdld29nSUNBZ0lDQWdJRnQ0ZFYwNklEQXNDaUFnSUNBZ0lDQWdXM2wxWFRvZ01Td0tJQ0FnSUNBZ0lDQmJkblZkT2lBM05qZ3NDaUFnSUNBZ0lDQWdXMGRqWFRvZ056Y3dMQW9nSUNBZ0lDQWdJRnRVZFYwNklEYzNOaXdLSUNBZ0lDQWdJQ0JiZDNWZE9pQTNOelFzQ2lBZ0lDQWdJQ0FnVzAxMVhUb2dOemN5TEFvZ0lDQWdJQ0FnSUZ0ZmRWMDZJRGMyT1N3S0lDQWdJQ0FnSUNCYlZtTmRPaUEzTnpFc0NpQWdJQ0FnSUNBZ1cxTjFYVG9nTnpjMUxBb2dJQ0FnSUNBZ0lGdGlkVjA2SURjM013b2dJQ0FnZlRzS0lDQWdJR1oxYm1OMGFXOXVJR2RsS0ZJc0lHVmxMQ0JSTENCRlpTd2diV1VzSUZKbExDQnZaU3dnVEdVcElIc0tJQ0FnSUNBZ0lDQnBaaUFvVWlBOVBUMGdkbTRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdaaUE5UFQwZ0lUQWdKaVlnS0dabEtETXdORElwTENCbUlEMGdJVEVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2htSUQwOVBTQWhNU0FtSmlBb2JHVW9NekEwTWlrc0lHWWdQU0FoTUNrc0lGSWdJVDA5SUhCMUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFNJQ0U5UFNCdElIeDhJRXhsSUNFOVBTQmlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0tIZ2dJVDA5SUY5cElIeDhJSEFnSVQwOUlGOXBLU0FtSmlBb2N5NWliR1Z1WkVWeGRXRjBhVzl1S0RNeU56YzBLU3dnZUNBOUlGOXBMQ0J3SUQwZ1gya3BMQ0JNWlNrZ2MzZHBkR05vS0ZJcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ2MzSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITXVZbXhsYm1SR2RXNWpVMlZ3WVhKaGRHVW9NU3dnTnpjeExDQXhMQ0EzTnpFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJRzVzT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1Kc1pXNWtSblZ1WXlneExDQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCcGJEb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2N5NWliR1Z1WkVaMWJtTlRaWEJoY21GMFpTZ3dMQ0F3TENBM05qa3NJRGMzTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdjbXc2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE11WW14bGJtUkdkVzVqVTJWd1lYSmhkR1VvTUN3Z056WTRMQ0F3TENBM056QXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUJKYm5aaGJHbGtJR0pzWlc1a2FXNW5PaUFpTENCU0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElITjNhWFJqYUNoU0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElITnlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbUpzWlc1a1JuVnVZMU5sY0dGeVlYUmxLRGMzTUN3Z056Y3hMQ0F4TENBM056RXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUc1c09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCekxtSnNaVzVrUm5WdVl5ZzNOekFzSURFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJR2xzT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6TG1Kc1pXNWtSblZ1WXlnd0xDQTNOamtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElISnNPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpMbUpzWlc1a1JuVnVZeWd3TENBM05qZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUJKYm5aaGJHbGtJR0pzWlc1a2FXNW5PaUFpTENCU0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IySUQwZ2JuVnNiQ3dnWnlBOUlHNTFiR3dzSUY4Z1BTQnVkV3hzTENCNUlEMGdiblZzYkN3Z2JTQTlJRklzSUdJZ1BTQk1aVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRzFsSUQwZ2JXVWdmSHdnWldVc0lGSmxJRDBnVW1VZ2ZId2dVU3dnYjJVZ1BTQnZaU0I4ZkNCRlpTd2dLR1ZsSUNFOVBTQjRJSHg4SUcxbElDRTlQU0J3S1NBbUppQW9jeTVpYkdWdVpFVnhkV0YwYVc5dVUyVndZWEpoZEdVb1EyVmJaV1ZkTENCRFpWdHRaVjBwTENCNElEMGdaV1VzSUhBZ1BTQnRaU2tzSUNoUklDRTlQU0IySUh4OElFVmxJQ0U5UFNCbklIeDhJRkpsSUNFOVBTQmZJSHg4SUc5bElDRTlQU0I1S1NBbUppQW9jeTVpYkdWdVpFWjFibU5UWlhCaGNtRjBaU2g1WlZ0UlhTd2dlV1ZiUldWZExDQjVaVnRTWlYwc0lIbGxXMjlsWFNrc0lIWWdQU0JSTENCbklEMGdSV1VzSUY4Z1BTQlNaU3dnZVNBOUlHOWxLU3dnYlNBOUlGSXNJR0lnUFNCdWRXeHNPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZUdVb1Vpd2daV1VwSUhzS0lDQWdJQ0FnSUNCU0xuTnBaR1VnUFQwOUlFTnBJRDhnWm1Vb01qZzROQ2tnT2lCc1pTZ3lPRGcwS1RzS0lDQWdJQ0FnSUNCc1pYUWdVU0E5SUZJdWMybGtaU0E5UFQwZ2FYUTdDaUFnSUNBZ0lDQWdaV1VnSmlZZ0tGRWdQU0FoVVNrc0lFOWxLRkVwTENCU0xtSnNaVzVrYVc1bklEMDlQU0J6Y2lBbUppQlNMblJ5WVc1emNHRnlaVzUwSUQwOVBTQWhNU0EvSUdkbEtIWnVLU0E2SUdkbEtGSXVZbXhsYm1ScGJtY3NJRkl1WW14bGJtUkZjWFZoZEdsdmJpd2dVaTVpYkdWdVpGTnlZeXdnVWk1aWJHVnVaRVJ6ZEN3Z1VpNWliR1Z1WkVWeGRXRjBhVzl1UVd4d2FHRXNJRkl1WW14bGJtUlRjbU5CYkhCb1lTd2dVaTVpYkdWdVpFUnpkRUZzY0doaExDQlNMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU2tzSUd3dWMyVjBSblZ1WXloU0xtUmxjSFJvUm5WdVl5a3NJR3d1YzJWMFZHVnpkQ2hTTG1SbGNIUm9WR1Z6ZENrc0lHd3VjMlYwVFdGemF5aFNMbVJsY0hSb1YzSnBkR1VwTENCaExuTmxkRTFoYzJzb1VpNWpiMnh2Y2xkeWFYUmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1JXVWdQU0JTTG5OMFpXNWphV3hYY21sMFpUc0tJQ0FnSUNBZ0lDQmpMbk5sZEZSbGMzUW9SV1VwTENCRlpTQW1KaUFvWXk1elpYUk5ZWE5yS0ZJdWMzUmxibU5wYkZkeWFYUmxUV0Z6YXlrc0lHTXVjMlYwUm5WdVl5aFNMbk4wWlc1amFXeEdkVzVqTENCU0xuTjBaVzVqYVd4U1pXWXNJRkl1YzNSbGJtTnBiRVoxYm1OTllYTnJLU3dnWXk1elpYUlBjQ2hTTG5OMFpXNWphV3hHWVdsc0xDQlNMbk4wWlc1amFXeGFSbUZwYkN3Z1VpNXpkR1Z1WTJsc1dsQmhjM01wS1N3Z1N5aFNMbkJ2YkhsbmIyNVBabVp6WlhRc0lGSXVjRzlzZVdkdmJrOW1abk5sZEVaaFkzUnZjaXdnVWk1d2IyeDVaMjl1VDJabWMyVjBWVzVwZEhNcExDQlNMbUZzY0doaFZHOURiM1psY21GblpTQTlQVDBnSVRBZ1B5QnNaU2d6TWpreU5pa2dPaUJtWlNnek1qa3lOaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUFpTaFNLU0I3Q2lBZ0lDQWdJQ0FnUVNBaFBUMGdVaUFtSmlBb1VpQS9JSE11Wm5KdmJuUkdZV05sS0RJek1EUXBJRG9nY3k1bWNtOXVkRVpoWTJVb01qTXdOU2tzSUVFZ1BTQlNLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVjb1Vpa2dld29nSUNBZ0lDQWdJRklnSVQwOUlIVjFJRDhnS0d4bEtESTRPRFFwTENCU0lDRTlQU0JNSUNZbUlDaFNJRDA5UFNCMGJDQS9JSE11WTNWc2JFWmhZMlVvTVRBeU9Ta2dPaUJTSUQwOVBTQmtkU0EvSUhNdVkzVnNiRVpoWTJVb01UQXlPQ2tnT2lCekxtTjFiR3hHWVdObEtERXdNeklwS1NrZ09pQm1aU2d5T0RnMEtTd2dUQ0E5SUZJN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQnFLRklwSUhzS0lDQWdJQ0FnSUNCU0lDRTlQU0JKSUNZbUlDaDNJQ1ltSUhNdWJHbHVaVmRwWkhSb0tGSXBMQ0JKSUQwZ1VpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJMS0ZJc0lHVmxMQ0JSS1NCN0NpQWdJQ0FnSUNBZ1VpQS9JQ2hzWlNnek1qZ3lNeWtzSUNocklDRTlQU0JsWlNCOGZDQkNJQ0U5UFNCUktTQW1KaUFvY3k1d2IyeDVaMjl1VDJabWMyVjBLR1ZsTENCUktTd2dheUE5SUdWbExDQkNJRDBnVVNrcElEb2dabVVvTXpJNE1qTXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZFdVb1Vpa2dld29nSUNBZ0lDQWdJRklnUHlCc1pTZ3pNRGc1S1NBNklHWmxLRE13T0RrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdjMlVvVWlrZ2V3b2dJQ0FnSUNBZ0lGSWdQVDA5SUhadmFXUWdNQ0FtSmlBb1VpQTlJRE16T1RnMElDc2dVQ0F0SURFcExDQlZJQ0U5UFNCU0lDWW1JQ2h6TG1GamRHbDJaVlJsZUhSMWNtVW9VaWtzSUZVZ1BTQlNLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUZObEtGSXNJR1ZsS1NCN0NpQWdJQ0FnSUNBZ1ZTQTlQVDBnYm5Wc2JDQW1KaUJ6WlNncE93b2dJQ0FnSUNBZ0lHeGxkQ0JSSUQwZ1JsdFZYVHNLSUNBZ0lDQWdJQ0JSSUQwOVBTQjJiMmxrSURBZ0ppWWdLRkVnUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIWnZhV1FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZEhWeVpUb2dkbTlwWkNBd0NpQWdJQ0FnSUNBZ2ZTd2dSbHRWWFNBOUlGRXBMQ0FvVVM1MGVYQmxJQ0U5UFNCU0lIeDhJRkV1ZEdWNGRIVnlaU0FoUFQwZ1pXVXBJQ1ltSUNoekxtSnBibVJVWlhoMGRYSmxLRklzSUdWbElIeDhJR2hsVzFKZEtTd2dVUzUwZVhCbElEMGdVaXdnVVM1MFpYaDBkWEpsSUQwZ1pXVXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnVkdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUZJZ1BTQkdXMVZkT3dvZ0lDQWdJQ0FnSUZJZ0lUMDlJSFp2YVdRZ01DQW1KaUJTTG5SNWNHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2N5NWlhVzVrVkdWNGRIVnlaU2hTTG5SNWNHVXNJRzUxYkd3cExDQlNMblI1Y0dVZ1BTQjJiMmxrSURBc0lGSXVkR1Y0ZEhWeVpTQTlJSFp2YVdRZ01DazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJRWlNncElIc0tJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpMbU52YlhCeVpYTnpaV1JVWlhoSmJXRm5aVEpFTG1Gd2NHeDVLSE1zSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUlzSUZJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRmxsS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVkR1Y0VTNWaVNXMWhaMlV5UkM1aGNIQnNlU2h6TENCaGNtZDFiV1Z1ZEhNcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tGSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4VGRHRjBaVG9pTENCU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJES0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVkR1Y0VTNWaVNXMWhaMlV6UkM1aGNIQnNlU2h6TENCaGNtZDFiV1Z1ZEhNcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tGSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4VGRHRjBaVG9pTENCU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJVS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVZMjl0Y0hKbGMzTmxaRlJsZUZOMVlrbHRZV2RsTWtRdVlYQndiSGtvY3l3Z1lYSm5kVzFsYm5SektUc0tJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaFNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMbGRsWWtkTVUzUmhkR1U2SWl3Z1VpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnU2lncElIc0tJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnpMblJsZUZOMGIzSmhaMlV5UkM1aGNIQnNlU2h6TENCaGNtZDFiV1Z1ZEhNcE93b2dJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tGSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4VGRHRjBaVG9pTENCU0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUFrS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVkR1Y0VTNSdmNtRm5aVE5FTG1Gd2NHeDVLSE1zSUdGeVozVnRaVzUwY3lrN0NpQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVhaV0pIVEZOMFlYUmxPaUlzSUZJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJSEpsS0NrZ2V3b2dJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lITXVkR1Y0U1cxaFoyVXlSQzVoY0hCc2VTaHpMQ0JoY21kMWJXVnVkSE1wT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0ZJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVYyVmlSMHhUZEdGMFpUb2lMQ0JTS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmFLQ2tnZXdvZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhNdWRHVjRTVzFoWjJVelJDNWhjSEJzZVNoekxDQmhjbWQxYldWdWRITXBPd29nSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLRklwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFRkR0YwWlRvaUxDQlNLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTlpTaFNLU0I3Q2lBZ0lDQWdJQ0FnWTJVdVpYRjFZV3h6S0ZJcElEMDlQU0FoTVNBbUppQW9jeTV6WTJsemMyOXlLRkl1ZUN3Z1VpNTVMQ0JTTG5vc0lGSXVkeWtzSUdObExtTnZjSGtvVWlrcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkbVVvVWlrZ2V3b2dJQ0FnSUNBZ0lGWXVaWEYxWVd4ektGSXBJRDA5UFNBaE1TQW1KaUFvY3k1MmFXVjNjRzl5ZENoU0xuZ3NJRkl1ZVN3Z1VpNTZMQ0JTTG5jcExDQldMbU52Y0hrb1Vpa3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZEdVb0tTQjdDaUFnSUNBZ0lDQWdjeTVrYVhOaFlteGxLRE13TkRJcExDQnpMbVJwYzJGaWJHVW9Namc0TkNrc0lITXVaR2x6WVdKc1pTZ3lPVEk1S1N3Z2N5NWthWE5oWW14bEtETXlPREl6S1N3Z2N5NWthWE5oWW14bEtETXdPRGtwTENCekxtUnBjMkZpYkdVb01qazJNQ2tzSUhNdVpHbHpZV0pzWlNnek1qa3lOaWtzSUhNdVlteGxibVJGY1hWaGRHbHZiaWd6TWpjM05Da3NJSE11WW14bGJtUkdkVzVqS0RFc0lEQXBMQ0J6TG1Kc1pXNWtSblZ1WTFObGNHRnlZWFJsS0RFc0lEQXNJREVzSURBcExDQnpMbU52Ykc5eVRXRnpheWdoTUN3Z0lUQXNJQ0V3TENBaE1Da3NJSE11WTJ4bFlYSkRiMnh2Y2lnd0xDQXdMQ0F3TENBd0tTd2djeTVrWlhCMGFFMWhjMnNvSVRBcExDQnpMbVJsY0hSb1JuVnVZeWcxTVRNcExDQnpMbU5zWldGeVJHVndkR2dvTVNrc0lITXVjM1JsYm1OcGJFMWhjMnNvTkRJNU5EazJOekk1TlNrc0lITXVjM1JsYm1OcGJFWjFibU1vTlRFNUxDQXdMQ0EwTWprME9UWTNNamsxS1N3Z2N5NXpkR1Z1WTJsc1QzQW9Oelk0TUN3Z056WTRNQ3dnTnpZNE1Da3NJSE11WTJ4bFlYSlRkR1Z1WTJsc0tEQXBMQ0J6TG1OMWJHeEdZV05sS0RFd01qa3BMQ0J6TG1aeWIyNTBSbUZqWlNneU16QTFLU3dnY3k1d2IyeDVaMjl1VDJabWMyVjBLREFzSURBcExDQnpMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFwTENCekxtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnYm5Wc2JDa3NJRzRnUFQwOUlDRXdJQ1ltSUNoekxtSnBibVJHY21GdFpXSjFabVpsY2lnek5qQXdPU3dnYm5Wc2JDa3NJSE11WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTURBNExDQnVkV3hzS1Nrc0lITXVkWE5sVUhKdlozSmhiU2h1ZFd4c0tTd2djeTVzYVc1bFYybGtkR2dvTVNrc0lITXVjMk5wYzNOdmNpZ3dMQ0F3TENCekxtTmhiblpoY3k1M2FXUjBhQ3dnY3k1allXNTJZWE11YUdWcFoyaDBLU3dnY3k1MmFXVjNjRzl5ZENnd0xDQXdMQ0J6TG1OaGJuWmhjeTUzYVdSMGFDd2djeTVqWVc1MllYTXVhR1ZwWjJoMEtTd2dhQ0E5SUh0OUxDQlZJRDBnYm5Wc2JDd2dSaUE5SUh0OUxDQjFJRDBnZTMwc0lHUWdQU0J1ZFd4c0xDQm1JRDBnSVRFc0lHMGdQU0J1ZFd4c0xDQjRJRDBnYm5Wc2JDd2dkaUE5SUc1MWJHd3NJR2NnUFNCdWRXeHNMQ0J3SUQwZ2JuVnNiQ3dnWHlBOUlHNTFiR3dzSUhrZ1BTQnVkV3hzTENCaUlEMGdJVEVzSUVFZ1BTQnVkV3hzTENCTUlEMGdiblZzYkN3Z1NTQTlJRzUxYkd3c0lHc2dQU0J1ZFd4c0xDQkNJRDBnYm5Wc2JDd2dZMlV1YzJWMEtEQXNJREFzSUhNdVkyRnVkbUZ6TG5kcFpIUm9MQ0J6TG1OaGJuWmhjeTVvWldsbmFIUXBMQ0JXTG5ObGRDZ3dMQ0F3TENCekxtTmhiblpoY3k1M2FXUjBhQ3dnY3k1allXNTJZWE11YUdWcFoyaDBLU3dnWVM1eVpYTmxkQ2dwTENCc0xuSmxjMlYwS0Nrc0lHTXVjbVZ6WlhRb0tUc0tJQ0FnSUgwS0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdZblZtWm1WeWN6b2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nWVN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdnNklHd3NDaUFnSUNBZ0lDQWdJQ0FnSUhOMFpXNWphV3c2SUdNS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHVnVZV0pzWlRvZ2JHVXNDaUFnSUNBZ0lDQWdaR2x6WVdKc1pUb2dabVVzQ2lBZ0lDQWdJQ0FnWW1sdVpFWnlZVzFsWW5WbVptVnlPaUJDWlN3S0lDQWdJQ0FnSUNCMWMyVlFjbTluY21GdE9pQlpMQW9nSUNBZ0lDQWdJSE5sZEVKc1pXNWthVzVuT2lCblpTd0tJQ0FnSUNBZ0lDQnpaWFJOWVhSbGNtbGhiRG9nZUdVc0NpQWdJQ0FnSUNBZ2MyVjBSbXhwY0ZOcFpHVmtPaUJQWlN3S0lDQWdJQ0FnSUNCelpYUkRkV3hzUm1GalpUb2dSeXdLSUNBZ0lDQWdJQ0J6WlhSTWFXNWxWMmxrZEdnNklHb3NDaUFnSUNBZ0lDQWdjMlYwVUc5c2VXZHZiazltWm5ObGREb2dTeXdLSUNBZ0lDQWdJQ0J6WlhSVFkybHpjMjl5VkdWemREb2dkV1VzQ2lBZ0lDQWdJQ0FnWVdOMGFYWmxWR1Y0ZEhWeVpUb2djMlVzQ2lBZ0lDQWdJQ0FnWW1sdVpGUmxlSFIxY21VNklGTmxMQW9nSUNBZ0lDQWdJSFZ1WW1sdVpGUmxlSFIxY21VNklGUmxMQW9nSUNBZ0lDQWdJR052YlhCeVpYTnpaV1JVWlhoSmJXRm5aVEpFT2lCUVpTd0tJQ0FnSUNBZ0lDQjBaWGhKYldGblpUSkVPaUJ5WlN3S0lDQWdJQ0FnSUNCMFpYaEpiV0ZuWlRORU9pQmFMQW9nSUNBZ0lDQWdJSFJsZUZOMGIzSmhaMlV5UkRvZ1Npd0tJQ0FnSUNBZ0lDQjBaWGhUZEc5eVlXZGxNMFE2SUNRc0NpQWdJQ0FnSUNBZ2RHVjRVM1ZpU1cxaFoyVXlSRG9nV1dVc0NpQWdJQ0FnSUNBZ2RHVjRVM1ZpU1cxaFoyVXpSRG9nUXl3S0lDQWdJQ0FnSUNCamIyMXdjbVZ6YzJWa1ZHVjRVM1ZpU1cxaFoyVXlSRG9nVkN3S0lDQWdJQ0FnSUNCelkybHpjMjl5T2lCTlpTd0tJQ0FnSUNBZ0lDQjJhV1YzY0c5eWREb2dkbVVzQ2lBZ0lDQWdJQ0FnY21WelpYUTZJSFJsQ2lBZ0lDQjlPd3A5Q21aMWJtTjBhVzl1SUZSNEtITXNJR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHBJSHNLSUNBZ0lHeGxkQ0JoSUQwZ2FTNXBjMWRsWWtkTU1pd2diQ0E5SUdrdWJXRjRWR1Y0ZEhWeVpYTXNJR01nUFNCcExtMWhlRU4xWW1WdFlYQlRhWHBsTENCb0lEMGdhUzV0WVhoVVpYaDBkWEpsVTJsNlpTd2dkU0E5SUdrdWJXRjRVMkZ0Y0d4bGN5d2daaUE5SUdVdWFHRnpLQ0pYUlVKSFRGOXRkV3gwYVhOaGJYQnNaV1JmY21WdVpHVnlYM1J2WDNSbGVIUjFjbVVpS1NBL0lHVXVaMlYwS0NKWFJVSkhURjl0ZFd4MGFYTmhiWEJzWldSZmNtVnVaR1Z5WDNSdlgzUmxlSFIxY21VaUtTQTZJSFp2YVdRZ01Dd2diU0E5SUc1bGR5QlhaV0ZyVFdGd0xDQjRMQ0IySUQwZ0lURTdDaUFnSUNCMGNua2dld29nSUNBZ0lDQWdJSFlnUFNCMGVYQmxiMllnVDJabWMyTnlaV1Z1UTJGdWRtRnpJRHdnSW5VaUlDWW1JRzVsZHlCUFptWnpZM0psWlc1RFlXNTJZWE1vTVN3Z01Ta3VaMlYwUTI5dWRHVjRkQ2dpTW1RaUtTQWhQVDBnYm5Wc2JEc0tJQ0FnSUgwZ1kyRjBZMmdnSUh0OUNpQWdJQ0JtZFc1amRHbHZiaUJuS0VNc0lGUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkaUEvSUc1bGR5QlBabVp6WTNKbFpXNURZVzUyWVhNb1F5d2dWQ2tnT2lCeGN5Z2lZMkZ1ZG1GeklpazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ3S0VNc0lGUXNJRW9zSUNRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY21VZ1BTQXhPd29nSUNBZ0lDQWdJR2xtSUNnb1F5NTNhV1IwYUNBK0lDUWdmSHdnUXk1b1pXbG5hSFFnUGlBa0tTQW1KaUFvY21VZ1BTQWtJQzhnVFdGMGFDNXRZWGdvUXk1M2FXUjBhQ3dnUXk1b1pXbG5hSFFwS1N3Z2NtVWdQQ0F4SUh4OElGUWdQVDA5SUNFd0tTQnBaaUFvZEhsd1pXOW1JRWhVVFV4SmJXRm5aVVZzWlcxbGJuUWdQQ0FpZFNJZ0ppWWdReUJwYm5OMFlXNWpaVzltSUVoVVRVeEpiV0ZuWlVWc1pXMWxiblFnZkh3Z2RIbHdaVzltSUVoVVRVeERZVzUyWVhORmJHVnRaVzUwSUR3Z0luVWlJQ1ltSUVNZ2FXNXpkR0Z1WTJWdlppQklWRTFNUTJGdWRtRnpSV3hsYldWdWRDQjhmQ0IwZVhCbGIyWWdTVzFoWjJWQ2FYUnRZWEFnUENBaWRTSWdKaVlnUXlCcGJuTjBZVzVqWlc5bUlFbHRZV2RsUW1sMGJXRndLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JhSUQwZ1ZDQS9JRXBqSURvZ1RXRjBhQzVtYkc5dmNpd2dUV1VnUFNCYUtISmxJQ29nUXk1M2FXUjBhQ2tzSUhabElEMGdXaWh5WlNBcUlFTXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZUNBOVBUMGdkbTlwWkNBd0lDWW1JQ2g0SUQwZ1p5aE5aU3dnZG1VcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUmxJRDBnU2lBL0lHY29UV1VzSUhabEtTQTZJSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMFpTNTNhV1IwYUNBOUlFMWxMQ0IwWlM1b1pXbG5hSFFnUFNCMlpTd2dkR1V1WjJWMFEyOXVkR1Y0ZENnaU1tUWlLUzVrY21GM1NXMWhaMlVvUXl3Z01Dd2dNQ3dnVFdVc0lIWmxLU3dnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJVWlhoMGRYSmxJR2hoY3lCaVpXVnVJSEpsYzJsNlpXUWdabkp2YlNBb0lpQXJJRU11ZDJsa2RHZ2dLeUFpZUNJZ0t5QkRMbWhsYVdkb2RDQXJJQ0lwSUhSdklDZ2lJQ3NnVFdVZ0t5QWllQ0lnS3lCMlpTQXJJQ0lwTGlJcExDQjBaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdjbVYwZFhKdUlDSmtZWFJoSWlCcGJpQkRJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nU1cxaFoyVWdhVzRnUkdGMFlWUmxlSFIxY21VZ2FYTWdkRzl2SUdKcFp5QW9JaUFySUVNdWQybGtkR2dnS3lBaWVDSWdLeUJETG1obGFXZG9kQ0FySUNJcExpSXBMQ0JET3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJET3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1h5aERLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2xoS0VNdWQybGtkR2dwSUNZbUlHbGhLRU11YUdWcFoyaDBLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhrb1F5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhJRDhnSVRFZ09pQkRMbmR5WVhCVElDRTlQU0IyZENCOGZDQkRMbmR5WVhCVUlDRTlQU0IyZENCOGZDQkRMbTFwYmtacGJIUmxjaUFoUFQwZ2NuUWdKaVlnUXk1dGFXNUdhV3gwWlhJZ0lUMDlJSFIwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1lpaERMQ0JVS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUVNdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUNZbUlGUWdKaVlnUXk1dGFXNUdhV3gwWlhJZ0lUMDlJSEowSUNZbUlFTXViV2x1Um1sc2RHVnlJQ0U5UFNCMGREc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRUVvUXlrZ2V3b2dJQ0FnSUNBZ0lITXVaMlZ1WlhKaGRHVk5hWEJ0WVhBb1F5azdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJNS0VNc0lGUXNJRW9zSUNRcElIc0tJQ0FnSUNBZ0lDQnBaaUFvWVNBOVBUMGdJVEVwSUhKbGRIVnliaUJVT3dvZ0lDQWdJQ0FnSUdsbUlDaERJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6VzBOZElDRTlQU0IyYjJsa0lEQXBJSEpsZEhWeWJpQnpXME5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklFRjBkR1Z0Y0hRZ2RHOGdkWE5sSUc1dmJpMWxlR2x6ZEdsdVp5QlhaV0pIVENCcGJuUmxjbTVoYkNCbWIzSnRZWFFnSnlJZ0t5QkRJQ3NnSWljaUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhKbElEMGdWRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdWQ0E5UFQwZ05qUXdNeUFtSmlBb1NpQTlQVDBnTlRFeU5pQW1KaUFvY21VZ1BTQXpNek15Tmlrc0lFb2dQVDA5SURVeE16RWdKaVlnS0hKbElEMGdNek16TWpVcExDQktJRDA5UFNBMU1USXhJQ1ltSUNoeVpTQTlJRE16TXpJeEtTa3NJRlFnUFQwOUlEWTBNRGNnSmlZZ0tFb2dQVDA5SURVeE1qWWdKaVlnS0hKbElEMGdNelE0TXpjcExDQktJRDA5UFNBMU1UTXhJQ1ltSUNoeVpTQTlJRE0wT0RRektTd2dTaUE5UFQwZ05URXlNU0FtSmlBb2NtVWdQU0F6TWpnME9Ta3BMQ0JVSUQwOVBTQTJOREE0SUNZbUlDaEtJRDA5UFNBMU1USTJJQ1ltSUNoeVpTQTlJRE0wT0RNMktTd2dTaUE5UFQwZ05URXpNU0FtSmlBb2NtVWdQU0F6TkRnME1pa3NJRW9nUFQwOUlEVXhNakVnSmlZZ0tISmxJRDBnSkNBOVBUMGdUMmtnUHlBek5Ua3dOeUE2SURNeU9EVTJLU2tzSUNoeVpTQTlQVDBnTXpNek1qVWdmSHdnY21VZ1BUMDlJRE16TXpJMklIeDhJSEpsSUQwOVBTQXpORGcwTWlCOGZDQnlaU0E5UFQwZ016UTRNellwSUNZbUlHVXVaMlYwS0NKRldGUmZZMjlzYjNKZlluVm1abVZ5WDJac2IyRjBJaWtzSUhKbE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdTU2hETENCVUxDQktLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0lvUXl3Z1Npa2dQVDA5SUNFd0lIeDhJRU11YVhOR2NtRnRaV0oxWm1abGNsUmxlSFIxY21VZ0ppWWdReTV0YVc1R2FXeDBaWElnSVQwOUlISjBJQ1ltSUVNdWJXbHVSbWxzZEdWeUlDRTlQU0IwZENBL0lFMWhkR2d1Ykc5bk1paE5ZWFJvTG0xaGVDaFVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDa3BJQ3NnTVNBNklFTXViV2x3YldGd2N5QWhQVDBnZG05cFpDQXdJQ1ltSUVNdWJXbHdiV0Z3Y3k1c1pXNW5kR2dnUGlBd0lEOGdReTV0YVhCdFlYQnpMbXhsYm1kMGFDQTZJRU11YVhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNBbUppQkJjbkpoZVM1cGMwRnljbUY1S0VNdWFXMWhaMlVwSUQ4Z1ZDNXRhWEJ0WVhCekxteGxibWQwYUNBNklERTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJyS0VNcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1F5QTlQVDBnY25RZ2ZId2dReUE5UFQwZ2RHRWdmSHdnUXlBOVBUMGdibUVnUHlBNU56STRJRG9nT1RjeU9Uc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRUlvUXlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JVSUQwZ1F5NTBZWEpuWlhRN0NpQWdJQ0FnSUNBZ1ZDNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0prYVhOd2IzTmxJaXdnUWlrc0lIY29WQ2tzSUZRdWFYTldhV1JsYjFSbGVIUjFjbVVnSmlZZ2JTNWtaV3hsZEdVb1ZDa3NJRzh1YldWdGIzSjVMblJsZUhSMWNtVnpMUzA3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCUUtFTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRU11ZEdGeVoyVjBPd29nSUNBZ0lDQWdJRlF1Y21WdGIzWmxSWFpsYm5STWFYTjBaVzVsY2lnaVpHbHpjRzl6WlNJc0lGQXBMQ0JGS0ZRcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkeWhES1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlFnUFNCdUxtZGxkQ2hES1RzS0lDQWdJQ0FnSUNCVUxsOWZkMlZpWjJ4SmJtbDBJQ0U5UFNCMmIybGtJREFnSmlZZ0tITXVaR1ZzWlhSbFZHVjRkSFZ5WlNoVUxsOWZkMlZpWjJ4VVpYaDBkWEpsS1N3Z2JpNXlaVzF2ZG1Vb1F5a3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUlNoREtTQjdDaUFnSUNBZ0lDQWdiR1YwSUZRZ1BTQkRMblJsZUhSMWNtVXNJRW9nUFNCdUxtZGxkQ2hES1N3Z0pDQTlJRzR1WjJWMEtGUXBPd29nSUNBZ0lDQWdJR2xtSUNnaElVTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ1F1WDE5M1pXSm5iRlJsZUhSMWNtVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2N5NWtaV3hsZEdWVVpYaDBkWEpsS0NRdVgxOTNaV0puYkZSbGVIUjFjbVVwTENCdkxtMWxiVzl5ZVM1MFpYaDBkWEpsY3kwdEtTd2dReTVrWlhCMGFGUmxlSFIxY21VZ0ppWWdReTVrWlhCMGFGUmxlSFIxY21VdVpHbHpjRzl6WlNncExDQkRMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMEtTQm1iM0lvYkdWMElISmxJRDBnTURzZ2NtVWdQQ0EyT3lCeVpTc3JLWE11WkdWc1pYUmxSbkpoYldWaWRXWm1aWElvU2k1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhKYmNtVmRLU3dnU2k1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhJZ0ppWWdjeTVrWld4bGRHVlNaVzVrWlhKaWRXWm1aWElvU2k1ZlgzZGxZbWRzUkdWd2RHaGlkV1ptWlhKYmNtVmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0J6TG1SbGJHVjBaVVp5WVcxbFluVm1abVZ5S0VvdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUtTd2dTaTVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElnSmlZZ2N5NWtaV3hsZEdWU1pXNWtaWEppZFdabVpYSW9TaTVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElwTENCS0xsOWZkMlZpWjJ4TmRXeDBhWE5oYlhCc1pXUkdjbUZ0WldKMVptWmxjaUFtSmlCekxtUmxiR1YwWlVaeVlXMWxZblZtWm1WeUtFb3VYMTkzWldKbmJFMTFiSFJwYzJGdGNHeGxaRVp5WVcxbFluVm1abVZ5S1N3Z1NpNWZYM2RsWW1kc1EyOXNiM0pTWlc1a1pYSmlkV1ptWlhJZ0ppWWdjeTVrWld4bGRHVlNaVzVrWlhKaWRXWm1aWElvU2k1ZlgzZGxZbWRzUTI5c2IzSlNaVzVrWlhKaWRXWm1aWElwTENCS0xsOWZkMlZpWjJ4RVpYQjBhRkpsYm1SbGNtSjFabVpsY2lBbUppQnpMbVJsYkdWMFpWSmxibVJsY21KMVptWmxjaWhLTGw5ZmQyVmlaMnhFWlhCMGFGSmxibVJsY21KMVptWmxjaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hETG1selYyVmlSMHhOZFd4MGFYQnNaVkpsYm1SbGNsUmhjbWRsZEhNcElHWnZjaWhzWlhRZ2NtVXhJRDBnTUN3Z1dpQTlJRlF1YkdWdVozUm9PeUJ5WlRFZ1BDQmFPeUJ5WlRFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVFdVZ1BTQnVMbWRsZENoVVczSmxNVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVFdVdVgxOTNaV0puYkZSbGVIUjFjbVVnSmlZZ0tITXVaR1ZzWlhSbFZHVjRkSFZ5WlNoTlpTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lHOHViV1Z0YjNKNUxuUmxlSFIxY21WekxTMHBMQ0J1TG5KbGJXOTJaU2hVVzNKbE1WMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJRzR1Y21WdGIzWmxLRlFwTENCdUxuSmxiVzkyWlNoREtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JzWlhRZ1JDQTlJREE3Q2lBZ0lDQm1kVzVqZEdsdmJpQlZLQ2tnZXdvZ0lDQWdJQ0FnSUVRZ1BTQXdPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnUmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnUXlBOUlFUTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlFTWdQajBnYkNBbUppQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVZHVjRkSFZ5WlhNNklGUnllV2x1WnlCMGJ5QjFjMlVnSWlBcklFTWdLeUFpSUhSbGVIUjFjbVVnZFc1cGRITWdkMmhwYkdVZ2RHaHBjeUJIVUZVZ2MzVndjRzl5ZEhNZ2IyNXNlU0FpSUNzZ2JDa3NJRVFnS3owZ01Td2dRenNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUU4b1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQktJRDBnYmk1blpYUW9ReWs3Q2lBZ0lDQWdJQ0FnYVdZZ0tFTXVhWE5XYVdSbGIxUmxlSFIxY21VZ0ppWWdjMlVvUXlrc0lFTXVkbVZ5YzJsdmJpQStJREFnSmlZZ1NpNWZYM1psY25OcGIyNGdJVDA5SUVNdWRtVnljMmx2YmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ0pDQTlJRU11YVcxaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2tJRDA5UFNCMmIybGtJREFwSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVkdWNGRIVnlaU0J0WVhKclpXUWdabTl5SUhWd1pHRjBaU0JpZFhRZ2FXMWhaMlVnYVhNZ2RXNWtaV1pwYm1Wa0lpazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0NRdVkyOXRjR3hsZEdVZ1BUMDlJQ0V4S1NCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUZSbGVIUjFjbVVnYldGeWEyVmtJR1p2Y2lCMWNHUmhkR1VnWW5WMElHbHRZV2RsSUdseklHbHVZMjl0Y0d4bGRHVWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JDWlNoS0xDQkRMQ0JVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCVUtTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNnek5UVXpMQ0JLTGw5ZmQyVmlaMnhVWlhoMGRYSmxLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc1bEtFTXNJRlFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdTaUE5SUc0dVoyVjBLRU1wT3dvZ0lDQWdJQ0FnSUdsbUlDaERMblpsY25OcGIyNGdQaUF3SUNZbUlFb3VYMTkyWlhKemFXOXVJQ0U5UFNCRExuWmxjbk5wYjI0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnUW1Vb1Npd2dReXdnVkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkQzVoWTNScGRtVlVaWGgwZFhKbEtETXpPVGcwSUNzZ1ZDa3NJSFF1WW1sdVpGUmxlSFIxY21Vb016VTROallzSUVvdVgxOTNaV0puYkZSbGVIUjFjbVVwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1kyVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JLSUQwZ2JpNW5aWFFvUXlrN0NpQWdJQ0FnSUNBZ2FXWWdLRU11ZG1WeWMybHZiaUErSURBZ0ppWWdTaTVmWDNabGNuTnBiMjRnSVQwOUlFTXVkbVZ5YzJsdmJpa2dld29nSUNBZ0lDQWdJQ0FnSUNCQ1pTaEtMQ0JETENCVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QlVLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pNamczT1N3Z1NpNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQldLRU1zSUZRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnU2lBOUlHNHVaMlYwS0VNcE93b2dJQ0FnSUNBZ0lHbG1JQ2hETG5abGNuTnBiMjRnUGlBd0lDWW1JRW91WDE5MlpYSnphVzl1SUNFOVBTQkRMblpsY25OcGIyNHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1dTaEtMQ0JETENCVUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwTG1GamRHbDJaVlJsZUhSMWNtVW9Nek01T0RRZ0t5QlVLU3dnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOREEyTnl3Z1NpNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnVnlBOUlIc0tJQ0FnSUNBZ0lDQmJUbk5kT2lBeE1EUTVOeXdLSUNBZ0lDQWdJQ0JiZG5SZE9pQXpNekEzTVN3S0lDQWdJQ0FnSUNCYlFuTmRPaUF6TXpZME9Bb2dJQ0FnZlN3Z2FHVWdQU0I3Q2lBZ0lDQWdJQ0FnVzNKMFhUb2dPVGN5T0N3S0lDQWdJQ0FnSUNCYmRHRmRPaUE1T1RnMExBb2dJQ0FnSUNBZ0lGdHVZVjA2SURrNU9EWXNDaUFnSUNBZ0lDQWdXM1IwWFRvZ09UY3lPU3dLSUNBZ0lDQWdJQ0JiVjJOZE9pQTVPVGcxTEFvZ0lDQWdJQ0FnSUZ0VmFWMDZJRGs1T0RjS0lDQWdJSDA3Q2lBZ0lDQm1kVzVqZEdsdmJpQnNaU2hETENCVUxDQktLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tFb2dQeUFvY3k1MFpYaFFZWEpoYldWMFpYSnBLRU1zSURFd01qUXlMQ0JYVzFRdWQzSmhjRk5kS1N3Z2N5NTBaWGhRWVhKaGJXVjBaWEpwS0VNc0lERXdNalF6TENCWFcxUXVkM0poY0ZSZEtTd2dLRU1nUFQwOUlETXlPRGM1SUh4OElFTWdQVDA5SURNMU9EWTJLU0FtSmlCekxuUmxlRkJoY21GdFpYUmxjbWtvUXl3Z016STRPRElzSUZkYlZDNTNjbUZ3VWwwcExDQnpMblJsZUZCaGNtRnRaWFJsY21rb1F5d2dNVEF5TkRBc0lHaGxXMVF1YldGblJtbHNkR1Z5WFNrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXhNREkwTVN3Z2FHVmJWQzV0YVc1R2FXeDBaWEpkS1NrZ09pQW9jeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpReUxDQXpNekEzTVNrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXhNREkwTXl3Z016TXdOekVwTENBb1F5QTlQVDBnTXpJNE56a2dmSHdnUXlBOVBUMGdNelU0TmpZcElDWW1JSE11ZEdWNFVHRnlZVzFsZEdWeWFTaERMQ0F6TWpnNE1pd2dNek13TnpFcExDQW9WQzUzY21Gd1V5QWhQVDBnZG5RZ2ZId2dWQzUzY21Gd1ZDQWhQVDBnZG5RcElDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dWR1Y0ZEhWeVpTQnBjeUJ1YjNRZ2NHOTNaWElnYjJZZ2RIZHZMaUJVWlhoMGRYSmxMbmR5WVhCVElHRnVaQ0JVWlhoMGRYSmxMbmR5WVhCVUlITm9iM1ZzWkNCaVpTQnpaWFFnZEc4Z1ZFaFNSVVV1UTJ4aGJYQlViMFZrWjJWWGNtRndjR2x1Wnk0aUtTd2djeTUwWlhoUVlYSmhiV1YwWlhKcEtFTXNJREV3TWpRd0xDQnJLRlF1YldGblJtbHNkR1Z5S1Nrc0lITXVkR1Y0VUdGeVlXMWxkR1Z5YVNoRExDQXhNREkwTVN3Z2F5aFVMbTFwYmtacGJIUmxjaWtwTENCVUxtMXBia1pwYkhSbGNpQWhQVDBnY25RZ0ppWWdWQzV0YVc1R2FXeDBaWElnSVQwOUlIUjBJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVkdWNGRIVnlaU0JwY3lCdWIzUWdjRzkzWlhJZ2IyWWdkSGR2TGlCVVpYaDBkWEpsTG0xcGJrWnBiSFJsY2lCemFHOTFiR1FnWW1VZ2MyVjBJSFJ2SUZSSVVrVkZMazVsWVhKbGMzUkdhV3gwWlhJZ2IzSWdWRWhTUlVVdVRHbHVaV0Z5Um1sc2RHVnlMaUlwS1N3Z1pTNW9ZWE1vSWtWWVZGOTBaWGgwZFhKbFgyWnBiSFJsY2w5aGJtbHpiM1J5YjNCcFl5SXBJRDA5UFNBaE1Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdKQ0E5SUdVdVoyVjBLQ0pGV0ZSZmRHVjRkSFZ5WlY5bWFXeDBaWEpmWVc1cGMyOTBjbTl3YVdNaUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGUXVkSGx3WlNBOVBUMGdibTRnSmlZZ1pTNW9ZWE1vSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwWDJ4cGJtVmhjaUlwSUQwOVBTQWhNU0I4ZkNCaElEMDlQU0FoTVNBbUppQlVMblI1Y0dVZ1BUMDlJR3R1SUNZbUlHVXVhR0Z6S0NKUFJWTmZkR1Y0ZEhWeVpWOW9ZV3htWDJac2IyRjBYMnhwYm1WaGNpSXBJRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0FvVkM1aGJtbHpiM1J5YjNCNUlENGdNU0I4ZkNCdUxtZGxkQ2hVS1M1ZlgyTjFjbkpsYm5SQmJtbHpiM1J5YjNCNUtTQW1KaUFvY3k1MFpYaFFZWEpoYldWMFpYSm1LRU1zSUNRdVZFVllWRlZTUlY5TlFWaGZRVTVKVTA5VVVrOVFXVjlGV0ZRc0lFMWhkR2d1YldsdUtGUXVZVzVwYzI5MGNtOXdlU3dnYVM1blpYUk5ZWGhCYm1semIzUnliM0I1S0NrcEtTd2diaTVuWlhRb1ZDa3VYMTlqZFhKeVpXNTBRVzVwYzI5MGNtOXdlU0E5SUZRdVlXNXBjMjkwY205d2VTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWm1Vb1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUVNdVgxOTNaV0puYkVsdWFYUWdQVDA5SUhadmFXUWdNQ0FtSmlBb1F5NWZYM2RsWW1kc1NXNXBkQ0E5SUNFd0xDQlVMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVJwYzNCdmMyVWlMQ0JDS1N3Z1F5NWZYM2RsWW1kc1ZHVjRkSFZ5WlNBOUlITXVZM0psWVhSbFZHVjRkSFZ5WlNncExDQnZMbTFsYlc5eWVTNTBaWGgwZFhKbGN5c3JLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUVKbEtFTXNJRlFzSUVvcElIc0tJQ0FnSUNBZ0lDQnNaWFFnSkNBOUlETTFOVE03Q2lBZ0lDQWdJQ0FnVkM1cGMwUmhkR0ZVWlhoMGRYSmxNa1JCY25KaGVTQW1KaUFvSkNBOUlETTFPRFkyS1N3Z1ZDNXBjMFJoZEdGVVpYaDBkWEpsTTBRZ0ppWWdLQ1FnUFNBek1qZzNPU2tzSUdabEtFTXNJRlFwTENCMExtRmpkR2wyWlZSbGVIUjFjbVVvTXpNNU9EUWdLeUJLS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2drTENCRExsOWZkMlZpWjJ4VVpYaDBkWEpsS1N3Z2N5NXdhWGhsYkZOMGIzSmxhU2d6TnpRME1Dd2dWQzVtYkdsd1dTa3NJSE11Y0dsNFpXeFRkRzl5Wldrb016YzBOREVzSUZRdWNISmxiWFZzZEdsd2JIbEJiSEJvWVNrc0lITXVjR2w0Wld4VGRHOXlaV2tvTXpNeE55d2dWQzUxYm5CaFkydEJiR2xuYm0xbGJuUXBMQ0J6TG5CcGVHVnNVM1J2Y21WcEtETTNORFF6TENBd0tUc0tJQ0FnSUNBZ0lDQnNaWFFnY21VZ1BTQjVLRlFwSUNZbUlGOG9WQzVwYldGblpTa2dQVDA5SUNFeExDQmFJRDBnY0NoVUxtbHRZV2RsTENCeVpTd2dJVEVzSUdncExDQk5aU0E5SUY4b1dpa2dmSHdnWVN3Z2RtVWdQU0J5TG1OdmJuWmxjblFvVkM1bWIzSnRZWFFwTENCMFpTQTlJSEl1WTI5dWRtVnlkQ2hVTG5SNWNHVXBMQ0JTSUQwZ1RDaFVMbWx1ZEdWeWJtRnNSbTl5YldGMExDQjJaU3dnZEdVc0lGUXVaVzVqYjJScGJtY3BPd29nSUNBZ0lDQWdJR3hsS0NRc0lGUXNJRTFsS1RzS0lDQWdJQ0FnSUNCc1pYUWdaV1VzSUZFZ1BTQlVMbTFwY0cxaGNITXNJRVZsSUQwZ1lTQW1KaUJVTG1selZtbGtaVzlVWlhoMGRYSmxJQ0U5UFNBaE1Dd2diV1VnUFNCRExsOWZkbVZ5YzJsdmJpQTlQVDBnZG05cFpDQXdMQ0JTWlNBOUlFa29WQ3dnV2l3Z1RXVXBPd29nSUNBZ0lDQWdJR2xtSUNoVUxtbHpSR1Z3ZEdoVVpYaDBkWEpsS1NCU0lEMGdOalF3TWl3Z1lTQS9JRlF1ZEhsd1pTQTlQVDBnYm00Z1B5QlNJRDBnTXpZd01USWdPaUJVTG5SNWNHVWdQVDA5SUZCeklEOGdVaUE5SURNek1Ua3dJRG9nVkM1MGVYQmxJRDA5UFNCVWFTQS9JRklnUFNBek5UQTFOaUE2SUZJZ1BTQXpNekU0T1NBNklGUXVkSGx3WlNBOVBUMGdibTRnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVjJWaVIweFNaVzVrWlhKbGNqb2dSbXh2WVhScGJtY2djRzlwYm5RZ1pHVndkR2dnZEdWNGRIVnlaU0J5WlhGMWFYSmxjeUJYWldKSFRESXVJaWtzSUZRdVptOXliV0YwSUQwOVBTQldiaUFtSmlCU0lEMDlQU0EyTkRBeUlDWW1JRlF1ZEhsd1pTQWhQVDBnWTNJZ0ppWWdWQzUwZVhCbElDRTlQU0JRY3lBbUppQW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlZjMlVnVlc1emFXZHVaV1JUYUc5eWRGUjVjR1VnYjNJZ1ZXNXphV2R1WldSSmJuUlVlWEJsSUdadmNpQkVaWEIwYUVadmNtMWhkQ0JFWlhCMGFGUmxlSFIxY21VdUlpa3NJRlF1ZEhsd1pTQTlJR055TENCMFpTQTlJSEl1WTI5dWRtVnlkQ2hVTG5SNWNHVXBLU3dnVkM1bWIzSnRZWFFnUFQwOUlFeHBJQ1ltSUZJZ1BUMDlJRFkwTURJZ0ppWWdLRklnUFNBek5EQTBNU3dnVkM1MGVYQmxJQ0U5UFNCVWFTQW1KaUFvWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUJWYzJVZ1ZXNXphV2R1WldSSmJuUXlORGhVZVhCbElHWnZjaUJFWlhCMGFGTjBaVzVqYVd4R2IzSnRZWFFnUkdWd2RHaFVaWGgwZFhKbExpSXBMQ0JVTG5SNWNHVWdQU0JVYVN3Z2RHVWdQU0J5TG1OdmJuWmxjblFvVkM1MGVYQmxLU2twTENCRlpTQW1KaUJ0WlNBL0lIUXVkR1Y0VTNSdmNtRm5aVEpFS0RNMU5UTXNJREVzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5UVXpMQ0F3TENCU0xDQmFMbmRwWkhSb0xDQmFMbWhsYVdkb2RDd2dNQ3dnZG1Vc0lIUmxMQ0J1ZFd4c0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFVMbWx6UkdGMFlWUmxlSFIxY21VcElHbG1JQ2hSTG14bGJtZDBhQ0ErSURBZ0ppWWdUV1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdSV1VnSmlZZ2JXVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZGYk1GMHVkMmxrZEdnc0lGRmJNRjB1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdlpTQTlJREFzSUV4bElEMGdVUzVzWlc1bmRHZzdJRzlsSUR3Z1RHVTdJRzlsS3lzcFpXVWdQU0JSVzI5bFhTd2dSV1VnUHlCMExuUmxlRk4xWWtsdFlXZGxNa1FvTXpVMU15d2dNQ3dnTUN3Z01Dd2daV1V1ZDJsa2RHZ3NJR1ZsTG1obGFXZG9kQ3dnZG1Vc0lIUmxMQ0JsWlM1a1lYUmhLU0E2SUhRdWRHVjRTVzFoWjJVeVJDZ3pOVFV6TENCdlpTd2dVaXdnWldVdWQybGtkR2dzSUdWbExtaGxhV2RvZEN3Z01Dd2dkbVVzSUhSbExDQmxaUzVrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnVkM1blpXNWxjbUYwWlUxcGNHMWhjSE1nUFNBaE1Uc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1JXVWdQeUFvYldVZ0ppWWdkQzUwWlhoVGRHOXlZV2RsTWtRb016VTFNeXdnVW1Vc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBLU3dnZEM1MFpYaFRkV0pKYldGblpUSkVLRE0xTlRNc0lEQXNJREFzSURBc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMExDQjJaU3dnZEdVc0lGb3VaR0YwWVNrcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJREFzSUZJc0lGb3VkMmxrZEdnc0lGb3VhR1ZwWjJoMExDQXdMQ0IyWlN3Z2RHVXNJRm91WkdGMFlTazdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9WQzVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRVZsSUNZbUlHMWxJQ1ltSUhRdWRHVjRVM1J2Y21GblpUSkVLRE0xTlRNc0lGSmxMQ0JTTENCUld6QmRMbmRwWkhSb0xDQlJXekJkTG1obGFXZG9kQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2IyVXhJRDBnTUN3Z1RHVXhJRDBnVVM1c1pXNW5kR2c3SUc5bE1TQThJRXhsTVRzZ2IyVXhLeXNwWldVZ1BTQlJXMjlsTVYwc0lGUXVabTl5YldGMElDRTlQU0JqZENBbUppQlVMbVp2Y20xaGRDQWhQVDBnUjI0Z1B5QjJaU0FoUFQwZ2JuVnNiQ0EvSUVWbElEOGdkQzVqYjIxd2NtVnpjMlZrVkdWNFUzVmlTVzFoWjJVeVJDZ3pOVFV6TENCdlpURXNJREFzSURBc0lHVmxMbmRwWkhSb0xDQmxaUzVvWldsbmFIUXNJSFpsTENCbFpTNWtZWFJoS1NBNklIUXVZMjl0Y0hKbGMzTmxaRlJsZUVsdFlXZGxNa1FvTXpVMU15d2diMlV4TENCU0xDQmxaUzUzYVdSMGFDd2daV1V1YUdWcFoyaDBMQ0F3TENCbFpTNWtZWFJoS1NBNklHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ1FYUjBaVzF3ZENCMGJ5QnNiMkZrSUhWdWMzVndjRzl5ZEdWa0lHTnZiWEJ5WlhOelpXUWdkR1Y0ZEhWeVpTQm1iM0p0WVhRZ2FXNGdMblZ3Ykc5aFpGUmxlSFIxY21Vb0tTSXBJRG9nUldVZ1B5QjBMblJsZUZOMVlrbHRZV2RsTWtRb016VTFNeXdnYjJVeExDQXdMQ0F3TENCbFpTNTNhV1IwYUN3Z1pXVXVhR1ZwWjJoMExDQjJaU3dnZEdVc0lHVmxMbVJoZEdFcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNMU5UTXNJRzlsTVN3Z1Vpd2daV1V1ZDJsa2RHZ3NJR1ZsTG1obGFXZG9kQ3dnTUN3Z2RtVXNJSFJsTENCbFpTNWtZWFJoS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGUXVhWE5FWVhSaFZHVjRkSFZ5WlRKRVFYSnlZWGtwSUVWbElEOGdLRzFsSUNZbUlIUXVkR1Y0VTNSdmNtRm5aVE5FS0RNMU9EWTJMQ0JTWlN3Z1Vpd2dXaTUzYVdSMGFDd2dXaTVvWldsbmFIUXNJRm91WkdWd2RHZ3BMQ0IwTG5SbGVGTjFZa2x0WVdkbE0wUW9NelU0TmpZc0lEQXNJREFzSURBc0lEQXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0JhTG1SbGNIUm9MQ0IyWlN3Z2RHVXNJRm91WkdGMFlTa3BJRG9nZEM1MFpYaEpiV0ZuWlRORUtETTFPRFkyTENBd0xDQlNMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ3dnV2k1a1pYQjBhQ3dnTUN3Z2RtVXNJSFJsTENCYUxtUmhkR0VwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0ZRdWFYTkVZWFJoVkdWNGRIVnlaVE5FS1NCRlpTQS9JQ2h0WlNBbUppQjBMblJsZUZOMGIzSmhaMlV6UkNnek1qZzNPU3dnVW1Vc0lGSXNJRm91ZDJsa2RHZ3NJRm91YUdWcFoyaDBMQ0JhTG1SbGNIUm9LU3dnZEM1MFpYaFRkV0pKYldGblpUTkVLRE15T0RjNUxDQXdMQ0F3TENBd0xDQXdMQ0JhTG5kcFpIUm9MQ0JhTG1obGFXZG9kQ3dnV2k1a1pYQjBhQ3dnZG1Vc0lIUmxMQ0JhTG1SaGRHRXBLU0E2SUhRdWRHVjRTVzFoWjJVelJDZ3pNamczT1N3Z01Dd2dVaXdnV2k1M2FXUjBhQ3dnV2k1b1pXbG5hSFFzSUZvdVpHVndkR2dzSURBc0lIWmxMQ0IwWlN3Z1dpNWtZWFJoS1RzS0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVUxtbHpSbkpoYldWaWRXWm1aWEpVWlhoMGRYSmxLU0JGWlNBbUppQnRaU0EvSUhRdWRHVjRVM1J2Y21GblpUSkVLRE0xTlRNc0lGSmxMQ0JTTENCYUxuZHBaSFJvTENCYUxtaGxhV2RvZENrZ09pQjBMblJsZUVsdFlXZGxNa1FvTXpVMU15d2dNQ3dnVWl3Z1dpNTNhV1IwYUN3Z1dpNW9aV2xuYUhRc0lEQXNJSFpsTENCMFpTd2diblZzYkNrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1VTNXNaVzVuZEdnZ1BpQXdJQ1ltSUUxbEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUVWbElDWW1JRzFsSUNZbUlIUXVkR1Y0VTNSdmNtRm5aVEpFS0RNMU5UTXNJRkpsTENCU0xDQlJXekJkTG5kcFpIUm9MQ0JSV3pCZExtaGxhV2RvZENrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiMlV5SUQwZ01Dd2dUR1V5SUQwZ1VTNXNaVzVuZEdnN0lHOWxNaUE4SUV4bE1qc2diMlV5S3lzcFpXVWdQU0JSVzI5bE1sMHNJRVZsSUQ4Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJRzlsTWl3Z01Dd2dNQ3dnZG1Vc0lIUmxMQ0JsWlNrZ09pQjBMblJsZUVsdFlXZGxNa1FvTXpVMU15d2diMlV5TENCU0xDQjJaU3dnZEdVc0lHVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZDNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdSV1VnUHlBb2JXVWdKaVlnZEM1MFpYaFRkRzl5WVdkbE1rUW9NelUxTXl3Z1VtVXNJRklzSUZvdWQybGtkR2dzSUZvdWFHVnBaMmgwS1N3Z2RDNTBaWGhUZFdKSmJXRm5aVEpFS0RNMU5UTXNJREFzSURBc0lEQXNJSFpsTENCMFpTd2dXaWtwSURvZ2RDNTBaWGhKYldGblpUSkVLRE0xTlRNc0lEQXNJRklzSUhabExDQjBaU3dnV2lrN0NpQWdJQ0FnSUNBZ1lpaFVMQ0JOWlNrZ0ppWWdRU2drS1N3Z1F5NWZYM1psY25OcGIyNGdQU0JVTG5abGNuTnBiMjRzSUZRdWIyNVZjR1JoZEdVZ0ppWWdWQzV2YmxWd1pHRjBaU2hVS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlGa29ReXdnVkN3Z1Npa2dld29nSUNBZ0lDQWdJR2xtSUNoVUxtbHRZV2RsTG14bGJtZDBhQ0FoUFQwZ05pa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHWmxLRU1zSUZRcExDQjBMbUZqZEdsMlpWUmxlSFIxY21Vb016TTVPRFFnS3lCS0tTd2dkQzVpYVc1a1ZHVjRkSFZ5WlNnek5EQTJOeXdnUXk1ZlgzZGxZbWRzVkdWNGRIVnlaU2tzSUhNdWNHbDRaV3hUZEc5eVpXa29NemMwTkRBc0lGUXVabXhwY0ZrcExDQnpMbkJwZUdWc1UzUnZjbVZwS0RNM05EUXhMQ0JVTG5CeVpXMTFiSFJwY0d4NVFXeHdhR0VwTENCekxuQnBlR1ZzVTNSdmNtVnBLRE16TVRjc0lGUXVkVzV3WVdOclFXeHBaMjV0Wlc1MEtTd2djeTV3YVhobGJGTjBiM0psYVNnek56UTBNeXdnTUNrN0NpQWdJQ0FnSUNBZ2JHVjBJQ1FnUFNCVUlDWW1JQ2hVTG1selEyOXRjSEpsYzNObFpGUmxlSFIxY21VZ2ZId2dWQzVwYldGblpWc3dYUzVwYzBOdmJYQnlaWE56WldSVVpYaDBkWEpsS1N3Z2NtVWdQU0JVTG1sdFlXZGxXekJkSUNZbUlGUXVhVzFoWjJWYk1GMHVhWE5FWVhSaFZHVjRkSFZ5WlN3Z1dpQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYjJVZ1BTQXdPeUJ2WlNBOElEWTdJRzlsS3lzcElTUWdKaVlnSVhKbElEOGdXbHR2WlYwZ1BTQndLRlF1YVcxaFoyVmJiMlZkTENBaE1Td2dJVEFzSUdNcElEb2dXbHR2WlYwZ1BTQnlaU0EvSUZRdWFXMWhaMlZiYjJWZExtbHRZV2RsSURvZ1ZDNXBiV0ZuWlZ0dlpWMDdDaUFnSUNBZ0lDQWdiR1YwSUUxbElEMGdXbHN3WFN3Z2RtVWdQU0JmS0UxbEtTQjhmQ0JoTENCMFpTQTlJSEl1WTI5dWRtVnlkQ2hVTG1admNtMWhkQ2tzSUZJZ1BTQnlMbU52Ym5abGNuUW9WQzUwZVhCbEtTd2daV1VnUFNCTUtGUXVhVzUwWlhKdVlXeEdiM0p0WVhRc0lIUmxMQ0JTTENCVUxtVnVZMjlrYVc1bktTd2dVU0E5SUdFZ0ppWWdWQzVwYzFacFpHVnZWR1Y0ZEhWeVpTQWhQVDBnSVRBc0lFVmxJRDBnUXk1ZlgzWmxjbk5wYjI0Z1BUMDlJSFp2YVdRZ01Dd2diV1VnUFNCSktGUXNJRTFsTENCMlpTazdDaUFnSUNBZ0lDQWdiR1VvTXpRd05qY3NJRlFzSUhabEtUc0tJQ0FnSUNBZ0lDQnNaWFFnVW1VN0NpQWdJQ0FnSUNBZ2FXWWdLQ1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdVU0FtSmlCRlpTQW1KaUIwTG5SbGVGTjBiM0poWjJVeVJDZ3pOREEyTnl3Z2JXVXNJR1ZsTENCTlpTNTNhV1IwYUN3Z1RXVXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J2WlRFZ1BTQXdPeUJ2WlRFZ1BDQTJPeUJ2WlRFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlNaU0E5SUZwYmIyVXhYUzV0YVhCdFlYQnpPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQk1aU0E5SURBN0lFeGxJRHdnVW1VdWJHVnVaM1JvT3lCTVpTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdXR1VnUFNCU1pWdE1aVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ZDNW1iM0p0WVhRZ0lUMDlJR04wSUNZbUlGUXVabTl5YldGMElDRTlQU0JIYmlBL0lIUmxJQ0U5UFNCdWRXeHNJRDhnVVNBL0lIUXVZMjl0Y0hKbGMzTmxaRlJsZUZOMVlrbHRZV2RsTWtRb016UXdOamtnS3lCdlpURXNJRXhsTENBd0xDQXdMQ0JZWlM1M2FXUjBhQ3dnV0dVdWFHVnBaMmgwTENCMFpTd2dXR1V1WkdGMFlTa2dPaUIwTG1OdmJYQnlaWE56WldSVVpYaEpiV0ZuWlRKRUtETTBNRFk1SUNzZ2IyVXhMQ0JNWlN3Z1pXVXNJRmhsTG5kcFpIUm9MQ0JZWlM1b1pXbG5hSFFzSURBc0lGaGxMbVJoZEdFcElEb2dZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQkJkSFJsYlhCMElIUnZJR3h2WVdRZ2RXNXpkWEJ3YjNKMFpXUWdZMjl0Y0hKbGMzTmxaQ0IwWlhoMGRYSmxJR1p2Y20xaGRDQnBiaUF1YzJWMFZHVjRkSFZ5WlVOMVltVW9LU0lwSURvZ1VTQS9JSFF1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNU3dnVEdVc0lEQXNJREFzSUZobExuZHBaSFJvTENCWVpTNW9aV2xuYUhRc0lIUmxMQ0JTTENCWVpTNWtZWFJoS1NBNklIUXVkR1Y0U1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTVN3Z1RHVXNJR1ZsTENCWVpTNTNhV1IwYUN3Z1dHVXVhR1ZwWjJoMExDQXdMQ0IwWlN3Z1Vpd2dXR1V1WkdGMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQlNaU0E5SUZRdWJXbHdiV0Z3Y3l3Z1VTQW1KaUJGWlNBbUppQW9VbVV1YkdWdVozUm9JRDRnTUNBbUppQnRaU3NyTENCMExuUmxlRk4wYjNKaFoyVXlSQ2d6TkRBMk55d2diV1VzSUdWbExDQmFXekJkTG5kcFpIUm9MQ0JhV3pCZExtaGxhV2RvZENrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzlsTWlBOUlEQTdJRzlsTWlBOElEWTdJRzlsTWlzcktXbG1JQ2h5WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1VTQS9JSFF1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOREEyT1NBcklHOWxNaXdnTUN3Z01Dd2dNQ3dnV2x0dlpUSmRMbmRwWkhSb0xDQmFXMjlsTWwwdWFHVnBaMmgwTENCMFpTd2dVaXdnV2x0dlpUSmRMbVJoZEdFcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNME1EWTVJQ3NnYjJVeUxDQXdMQ0JsWlN3Z1dsdHZaVEpkTG5kcFpIUm9MQ0JhVzI5bE1sMHVhR1ZwWjJoMExDQXdMQ0IwWlN3Z1Vpd2dXbHR2WlRKZExtUmhkR0VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JNWlRFZ1BTQXdPeUJNWlRFZ1BDQlNaUzVzWlc1bmRHZzdJRXhsTVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1YyVWdQU0JTWlZ0TVpURmRMbWx0WVdkbFcyOWxNbDB1YVcxaFoyVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVVNBL0lIUXVkR1Y0VTNWaVNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1pd2dUR1V4SUNzZ01Td2dNQ3dnTUN3Z1YyVXVkMmxrZEdnc0lGZGxMbWhsYVdkb2RDd2dkR1VzSUZJc0lGZGxMbVJoZEdFcElEb2dkQzUwWlhoSmJXRm5aVEpFS0RNME1EWTVJQ3NnYjJVeUxDQk1aVEVnS3lBeExDQmxaU3dnVjJVdWQybGtkR2dzSUZkbExtaGxhV2RvZEN3Z01Dd2dkR1VzSUZJc0lGZGxMbVJoZEdFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTWl3Z01Dd2dNQ3dnTUN3Z2RHVXNJRklzSUZwYmIyVXlYU2tnT2lCMExuUmxlRWx0WVdkbE1rUW9NelF3TmprZ0t5QnZaVElzSURBc0lHVmxMQ0IwWlN3Z1Vpd2dXbHR2WlRKZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1RHVXlJRDBnTURzZ1RHVXlJRHdnVW1VdWJHVnVaM1JvT3lCTVpUSXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmhsTVNBOUlGSmxXMHhsTWwwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdVU0EvSUhRdWRHVjRVM1ZpU1cxaFoyVXlSQ2d6TkRBMk9TQXJJRzlsTWl3Z1RHVXlJQ3NnTVN3Z01Dd2dNQ3dnZEdVc0lGSXNJRmhsTVM1cGJXRm5aVnR2WlRKZEtTQTZJSFF1ZEdWNFNXMWhaMlV5UkNnek5EQTJPU0FySUc5bE1pd2dUR1V5SUNzZ01Td2daV1VzSUhSbExDQlNMQ0JZWlRFdWFXMWhaMlZiYjJVeVhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1lpaFVMQ0IyWlNrZ0ppWWdRU2d6TkRBMk55a3NJRU11WDE5MlpYSnphVzl1SUQwZ1ZDNTJaWEp6YVc5dUxDQlVMbTl1VlhCa1lYUmxJQ1ltSUZRdWIyNVZjR1JoZEdVb1ZDazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJEWlNoRExDQlVMQ0JLTENBa0xDQnlaU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmFJRDBnY2k1amIyNTJaWEowS0VvdVptOXliV0YwS1N3Z1RXVWdQU0J5TG1OdmJuWmxjblFvU2k1MGVYQmxLU3dnZG1VZ1BTQk1LRW91YVc1MFpYSnVZV3hHYjNKdFlYUXNJRm9zSUUxbExDQktMbVZ1WTI5a2FXNW5LVHNLSUNBZ0lDQWdJQ0J1TG1kbGRDaFVLUzVmWDJoaGMwVjRkR1Z5Ym1Gc1ZHVjRkSFZ5WlhNZ2ZId2dLSEpsSUQwOVBTQXpNamczT1NCOGZDQnlaU0E5UFQwZ016VTROallnUHlCMExuUmxlRWx0WVdkbE0wUW9jbVVzSURBc0lIWmxMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ3dnVkM1a1pYQjBhQ3dnTUN3Z1dpd2dUV1VzSUc1MWJHd3BJRG9nZEM1MFpYaEpiV0ZuWlRKRUtISmxMQ0F3TENCMlpTd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXNJREFzSUZvc0lFMWxMQ0J1ZFd4c0tTa3NJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQkRLU3dnVkM1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VZ1B5Qm1MbVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVEpFVFhWc2RHbHpZVzF3YkdWRldGUW9Nell4TmpBc0lDUXNJSEpsTENCdUxtZGxkQ2hLS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU3dnTUN3Z2RXVW9WQ2twSURvZ2N5NW1jbUZ0WldKMVptWmxjbFJsZUhSMWNtVXlSQ2d6TmpFMk1Dd2dKQ3dnY21Vc0lHNHVaMlYwS0VvcExsOWZkMlZpWjJ4VVpYaDBkWEpsTENBd0tTd2dkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell4TmpBc0lHNTFiR3dwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2VXVW9ReXdnVkN3Z1Npa2dld29nSUNBZ0lDQWdJR2xtSUNoekxtSnBibVJTWlc1a1pYSmlkV1ptWlhJb016WXhOakVzSUVNcExDQlVMbVJsY0hSb1FuVm1abVZ5SUNZbUlDRlVMbk4wWlc1amFXeENkV1ptWlhJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUWdQU0F6TXpFNE9Uc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFb2dmSHdnVkM1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5WlNBOUlGUXVaR1Z3ZEdoVVpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21VZ0ppWWdjbVV1YVhORVpYQjBhRlJsZUhSMWNtVWdKaVlnS0hKbExuUjVjR1VnUFQwOUlHNXVJRDhnSkNBOUlETTJNREV5SURvZ2NtVXVkSGx3WlNBOVBUMGdVSE1nSmlZZ0tDUWdQU0F6TXpFNU1Da3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZvZ1BTQjFaU2hVS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZRdWRYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbElEOGdaaTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdWRldGUW9Nell4TmpFc0lGb3NJQ1FzSUZRdWQybGtkR2dzSUZRdWFHVnBaMmgwS1NBNklITXVjbVZ1WkdWeVluVm1abVZ5VTNSdmNtRm5aVTExYkhScGMyRnRjR3hsS0RNMk1UWXhMQ0JhTENBa0xDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J6TG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJVb016WXhOakVzSUNRc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY3k1bWNtRnRaV0oxWm1abGNsSmxibVJsY21KMVptWmxjaWd6TmpFMk1Dd2dNell3T1RZc0lETTJNVFl4TENCREtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRlF1WkdWd2RHaENkV1ptWlhJZ0ppWWdWQzV6ZEdWdVkybHNRblZtWm1WeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQWtNU0E5SUhWbEtGUXBPd29nSUNBZ0lDQWdJQ0FnSUNCS0lDWW1JRlF1ZFhObFVtVnVaR1Z5WW5WbVptVnlJRDhnY3k1eVpXNWtaWEppZFdabVpYSlRkRzl5WVdkbFRYVnNkR2x6WVcxd2JHVW9Nell4TmpFc0lDUXhMQ0F6TlRBMU5pd2dWQzUzYVdSMGFDd2dWQzVvWldsbmFIUXBJRG9nVkM1MWMyVlNaVzVrWlhKVWIxUmxlSFIxY21VZ1B5Qm1MbkpsYm1SbGNtSjFabVpsY2xOMGIzSmhaMlZOZFd4MGFYTmhiWEJzWlVWWVZDZ3pOakUyTVN3Z0pERXNJRE0xTURVMkxDQlVMbmRwWkhSb0xDQlVMbWhsYVdkb2RDa2dPaUJ6TG5KbGJtUmxjbUoxWm1abGNsTjBiM0poWjJVb016WXhOakVzSURNME1EUXhMQ0JVTG5kcFpIUm9MQ0JVTG1obGFXZG9kQ2tzSUhNdVpuSmhiV1ZpZFdabVpYSlNaVzVrWlhKaWRXWm1aWElvTXpZeE5qQXNJRE16TXpBMkxDQXpOakUyTVN3Z1F5azdDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElDUXlJRDBnVkM1cGMxZGxZa2RNVFhWc2RHbHdiR1ZTWlc1a1pYSlVZWEpuWlhSeklEMDlQU0FoTUNBL0lGUXVkR1Y0ZEhWeVpWc3dYU0E2SUZRdWRHVjRkSFZ5WlN3Z2NtVXhJRDBnY2k1amIyNTJaWEowS0NReUxtWnZjbTFoZENrc0lGb3hJRDBnY2k1amIyNTJaWEowS0NReUxuUjVjR1VwTENCTlpTQTlJRXdvSkRJdWFXNTBaWEp1WVd4R2IzSnRZWFFzSUhKbE1Td2dXakVzSUNReUxtVnVZMjlrYVc1bktTd2dkbVVnUFNCMVpTaFVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1NpQW1KaUJVTG5WelpWSmxibVJsY21KMVptWmxjaUEvSUhNdWNtVnVaR1Z5WW5WbVptVnlVM1J2Y21GblpVMTFiSFJwYzJGdGNHeGxLRE0yTVRZeExDQjJaU3dnVFdVc0lGUXVkMmxrZEdnc0lGUXVhR1ZwWjJoMEtTQTZJRlF1ZFhObFVtVnVaR1Z5Vkc5VVpYaDBkWEpsSUQ4Z1ppNXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxUWFZzZEdsellXMXdiR1ZGV0ZRb016WXhOakVzSUhabExDQk5aU3dnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFwSURvZ2N5NXlaVzVrWlhKaWRXWm1aWEpUZEc5eVlXZGxLRE0yTVRZeExDQk5aU3dnVkM1M2FXUjBhQ3dnVkM1b1pXbG5hSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCekxtSnBibVJTWlc1a1pYSmlkV1ptWlhJb016WXhOakVzSUc1MWJHd3BPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnWjJVb1F5d2dWQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaFVJQ1ltSUZRdWFYTlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpUkdWd2RHZ2dWR1Y0ZEhWeVpTQjNhWFJvSUdOMVltVWdjbVZ1WkdWeUlIUmhjbWRsZEhNZ2FYTWdibTkwSUhOMWNIQnZjblJsWkNJcE93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2dReWtzSUNFb1ZDNWtaWEIwYUZSbGVIUjFjbVVnSmlZZ1ZDNWtaWEIwYUZSbGVIUjFjbVV1YVhORVpYQjBhRlJsZUhSMWNtVXBLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbkpsYm1SbGNsUmhjbWRsZEM1a1pYQjBhRlJsZUhSMWNtVWdiWFZ6ZENCaVpTQmhiaUJwYm5OMFlXNWpaU0J2WmlCVVNGSkZSUzVFWlhCMGFGUmxlSFIxY21VaUtUc0tJQ0FnSUNBZ0lDQW9JVzR1WjJWMEtGUXVaR1Z3ZEdoVVpYaDBkWEpsS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU0I4ZkNCVUxtUmxjSFJvVkdWNGRIVnlaUzVwYldGblpTNTNhV1IwYUNBaFBUMGdWQzUzYVdSMGFDQjhmQ0JVTG1SbGNIUm9WR1Y0ZEhWeVpTNXBiV0ZuWlM1b1pXbG5hSFFnSVQwOUlGUXVhR1ZwWjJoMEtTQW1KaUFvVkM1a1pYQjBhRlJsZUhSMWNtVXVhVzFoWjJVdWQybGtkR2dnUFNCVUxuZHBaSFJvTENCVUxtUmxjSFJvVkdWNGRIVnlaUzVwYldGblpTNW9aV2xuYUhRZ1BTQlVMbWhsYVdkb2RDd2dWQzVrWlhCMGFGUmxlSFIxY21VdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrc0lFOG9WQzVrWlhCMGFGUmxlSFIxY21Vc0lEQXBPd29nSUNBZ0lDQWdJR3hsZENBa0lEMGdiaTVuWlhRb1ZDNWtaWEIwYUZSbGVIUjFjbVVwTGw5ZmQyVmlaMnhVWlhoMGRYSmxMQ0J5WlNBOUlIVmxLRlFwT3dvZ0lDQWdJQ0FnSUdsbUlDaFVMbVJsY0hSb1ZHVjRkSFZ5WlM1bWIzSnRZWFFnUFQwOUlGWnVLU0JVTG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBL0lHWXVabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1JOZFd4MGFYTmhiWEJzWlVWWVZDZ3pOakUyTUN3Z016WXdPVFlzSURNMU5UTXNJQ1FzSURBc0lISmxLU0E2SUhNdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9Nell4TmpBc0lETTJNRGsyTENBek5UVXpMQ0FrTENBd0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFVMbVJsY0hSb1ZHVjRkSFZ5WlM1bWIzSnRZWFFnUFQwOUlFeHBLU0JVTG5WelpWSmxibVJsY2xSdlZHVjRkSFZ5WlNBL0lHWXVabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1JOZFd4MGFYTmhiWEJzWlVWWVZDZ3pOakUyTUN3Z016TXpNRFlzSURNMU5UTXNJQ1FzSURBc0lISmxLU0E2SUhNdVpuSmhiV1ZpZFdabVpYSlVaWGgwZFhKbE1rUW9Nell4TmpBc0lETXpNekEyTENBek5UVXpMQ0FrTENBd0tUc0tJQ0FnSUNBZ0lDQmxiSE5sSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVlc1cmJtOTNiaUJrWlhCMGFGUmxlSFIxY21VZ1ptOXliV0YwSWlrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjRaU2hES1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRlFnUFNCdUxtZGxkQ2hES1N3Z1NpQTlJRU11YVhOWFpXSkhURU4xWW1WU1pXNWtaWEpVWVhKblpYUWdQVDA5SUNFd093b2dJQ0FnSUNBZ0lHbG1JQ2hETG1SbGNIUm9WR1Y0ZEhWeVpTQW1KaUFoVkM1ZlgyRjFkRzlCYkd4dlkyRjBaVVJsY0hSb1FuVm1abVZ5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoS0tTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0luUmhjbWRsZEM1a1pYQjBhRlJsZUhSMWNtVWdibTkwSUhOMWNIQnZjblJsWkNCcGJpQkRkV0psSUhKbGJtUmxjaUIwWVhKblpYUnpJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZGxLRlF1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5TENCREtUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRW9wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdWQzVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0FrSUQwZ01Ec2dKQ0E4SURZN0lDUXJLeWwwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2dWQzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWEpiSkYwcExDQlVMbDlmZDJWaVoyeEVaWEIwYUdKMVptWmxjbHNrWFNBOUlITXVZM0psWVhSbFVtVnVaR1Z5WW5WbVptVnlLQ2tzSUhsbEtGUXVYMTkzWldKbmJFUmxjSFJvWW5WbVptVnlXeVJkTENCRExDQWhNU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSFF1WW1sdVpFWnlZVzFsWW5WbVptVnlLRE0yTVRZd0xDQlVMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjaWtzSUZRdVgxOTNaV0puYkVSbGNIUm9ZblZtWm1WeUlEMGdjeTVqY21WaGRHVlNaVzVrWlhKaWRXWm1aWElvS1N3Z2VXVW9WQzVmWDNkbFltZHNSR1Z3ZEdoaWRXWm1aWElzSUVNc0lDRXhLVHNLSUNBZ0lDQWdJQ0IwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2diblZzYkNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQlBaU2hETENCVUxDQktLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElDUWdQU0J1TG1kbGRDaERLVHNLSUNBZ0lDQWdJQ0JVSUNFOVBTQjJiMmxrSURBZ0ppWWdRMlVvSkM1ZlgzZGxZbWRzUm5KaGJXVmlkV1ptWlhJc0lFTXNJRU11ZEdWNGRIVnlaU3dnTXpZd05qUXNJRE0xTlRNcExDQktJQ0U5UFNCMmIybGtJREFnSmlZZ2VHVW9ReWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCSEtFTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1ZDQTlJRU11ZEdWNGRIVnlaU3dnU2lBOUlHNHVaMlYwS0VNcExDQWtJRDBnYmk1blpYUW9WQ2s3Q2lBZ0lDQWdJQ0FnUXk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKa2FYTndiM05sSWl3Z1VDa3NJRU11YVhOWFpXSkhURTExYkhScGNHeGxVbVZ1WkdWeVZHRnlaMlYwY3lBaFBUMGdJVEFnSmlZZ0tDUXVYMTkzWldKbmJGUmxlSFIxY21VZ1BUMDlJSFp2YVdRZ01DQW1KaUFvSkM1ZlgzZGxZbWRzVkdWNGRIVnlaU0E5SUhNdVkzSmxZWFJsVkdWNGRIVnlaU2dwS1N3Z0pDNWZYM1psY25OcGIyNGdQU0JVTG5abGNuTnBiMjRzSUc4dWJXVnRiM0o1TG5SbGVIUjFjbVZ6S3lzcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5WlNBOUlFTXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRZ1BUMDlJQ0V3TENCYUlEMGdReTVwYzFkbFlrZE1UWFZzZEdsd2JHVlNaVzVrWlhKVVlYSm5aWFJ6SUQwOVBTQWhNQ3dnVFdVZ1BTQlVMbWx6UkdGMFlWUmxlSFIxY21VelJDQjhmQ0JVTG1selJHRjBZVlJsZUhSMWNtVXlSRUZ5Y21GNUxDQjJaU0E5SUY4b1F5a2dmSHdnWVRzS0lDQWdJQ0FnSUNCcFppQW9ZU0FtSmlCVUxtWnZjbTFoZENBOVBUMGdSMjRnSmlZZ0tGUXVkSGx3WlNBOVBUMGdibTRnZkh3Z1ZDNTBlWEJsSUQwOVBTQnJiaWtnSmlZZ0tGUXVabTl5YldGMElEMGdZM1FzSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVW1WdVpHVnlhVzVuSUhSdklIUmxlSFIxY21WeklIZHBkR2dnVWtkQ0lHWnZjbTFoZENCcGN5QnViM1FnYzNWd2NHOXlkR1ZrTGlCVmMybHVaeUJTUjBKQklHWnZjbTFoZENCcGJuTjBaV0ZrTGlJcEtTd2djbVVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdTaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwWlNBOUlEQTdJSFJsSUR3Z05qc2dkR1VyS3lsS0xsOWZkMlZpWjJ4R2NtRnRaV0oxWm1abGNsdDBaVjBnUFNCekxtTnlaV0YwWlVaeVlXMWxZblZtWm1WeUtDazdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hLTGw5ZmQyVmlaMnhHY21GdFpXSjFabVpsY2lBOUlITXVZM0psWVhSbFJuSmhiV1ZpZFdabVpYSW9LU3dnV2lrZ2FXWWdLR2t1WkhKaGQwSjFabVpsY25NcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUmxNU0E5SUVNdWRHVjRkSFZ5WlRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQlNJRDBnTUN3Z1pXVWdQU0IwWlRFdWJHVnVaM1JvT3lCU0lEd2daV1U3SUZJckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVVNBOUlHNHVaMlYwS0hSbE1WdFNYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JSTGw5ZmQyVmlaMnhVWlhoMGRYSmxJRDA5UFNCMmIybGtJREFnSmlZZ0tGRXVYMTkzWldKbmJGUmxlSFIxY21VZ1BTQnpMbU55WldGMFpWUmxlSFIxY21Vb0tTd2dieTV0WlcxdmNua3VkR1Y0ZEhWeVpYTXJLeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCWFpXSkhURTExYkhScGNHeGxVbVZ1WkdWeVZHRnlaMlYwY3lCallXNGdiMjVzZVNCaVpTQjFjMlZrSUhkcGRHZ2dWMlZpUjB3eUlHOXlJRmRGUWtkTVgyUnlZWGRmWW5WbVptVnljeUJsZUhSbGJuTnBiMjR1SWlrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1F5NTFjMlZTWlc1a1pYSmlkV1ptWlhJcElHbG1JQ2hoS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJRW91WDE5M1pXSm5iRTExYkhScGMyRnRjR3hsWkVaeVlXMWxZblZtWm1WeUlEMGdjeTVqY21WaGRHVkdjbUZ0WldKMVptWmxjaWdwTENCS0xsOWZkMlZpWjJ4RGIyeHZjbEpsYm1SbGNtSjFabVpsY2lBOUlITXVZM0psWVhSbFVtVnVaR1Z5WW5WbVptVnlLQ2tzSUhNdVltbHVaRkpsYm1SbGNtSjFabVpsY2lnek5qRTJNU3dnU2k1ZlgzZGxZbWRzUTI5c2IzSlNaVzVrWlhKaWRXWm1aWElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZEdVeUlEMGdjaTVqYjI1MlpYSjBLRlF1Wm05eWJXRjBLU3dnVWpFZ1BTQnlMbU52Ym5abGNuUW9WQzUwZVhCbEtTd2daV1V4SUQwZ1RDaFVMbWx1ZEdWeWJtRnNSbTl5YldGMExDQjBaVElzSUZJeExDQlVMbVZ1WTI5a2FXNW5LU3dnVVRFZ1BTQjFaU2hES1RzS0lDQWdJQ0FnSUNBZ0lDQWdjeTV5Wlc1a1pYSmlkV1ptWlhKVGRHOXlZV2RsVFhWc2RHbHpZVzF3YkdVb016WXhOakVzSUZFeExDQmxaVEVzSUVNdWQybGtkR2dzSUVNdWFHVnBaMmgwS1N3Z2RDNWlhVzVrUm5KaGJXVmlkV1ptWlhJb016WXhOakFzSUVvdVgxOTNaV0puYkUxMWJIUnBjMkZ0Y0d4bFpFWnlZVzFsWW5WbVptVnlLU3dnY3k1bWNtRnRaV0oxWm1abGNsSmxibVJsY21KMVptWmxjaWd6TmpFMk1Dd2dNell3TmpRc0lETTJNVFl4TENCS0xsOWZkMlZpWjJ4RGIyeHZjbEpsYm1SbGNtSjFabVpsY2lrc0lITXVZbWx1WkZKbGJtUmxjbUoxWm1abGNpZ3pOakUyTVN3Z2JuVnNiQ2tzSUVNdVpHVndkR2hDZFdabVpYSWdKaVlnS0VvdVgxOTNaV0puYkVSbGNIUm9VbVZ1WkdWeVluVm1abVZ5SUQwZ2N5NWpjbVZoZEdWU1pXNWtaWEppZFdabVpYSW9LU3dnZVdVb1NpNWZYM2RsWW1kc1JHVndkR2hTWlc1a1pYSmlkV1ptWlhJc0lFTXNJQ0V3S1Nrc0lIUXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNVFl3TENCdWRXeHNLVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQlhaV0pIVEUxMWJIUnBjMkZ0Y0d4bFVtVnVaR1Z5VkdGeVoyVjBJR05oYmlCdmJteDVJR0psSUhWelpXUWdkMmwwYUNCWFpXSkhUREl1SWlrN0NpQWdJQ0FnSUNBZ2FXWWdLSEpsS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFF1WW1sdVpGUmxlSFIxY21Vb016UXdOamNzSUNRdVgxOTNaV0puYkZSbGVIUjFjbVVwTENCc1pTZ3pOREEyTnl3Z1ZDd2dkbVVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUmxNeUE5SURBN0lIUmxNeUE4SURZN0lIUmxNeXNyS1VObEtFb3VYMTkzWldKbmJFWnlZVzFsWW5WbVptVnlXM1JsTTEwc0lFTXNJRlFzSURNMk1EWTBMQ0F6TkRBMk9TQXJJSFJsTXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR0lvVkN3Z2RtVXBJQ1ltSUVFb016UXdOamNwTENCMExuVnVZbWx1WkZSbGVIUjFjbVVvS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tGb3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFJsTkNBOUlFTXVkR1Y0ZEhWeVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JTTWlBOUlEQXNJR1ZsTWlBOUlIUmxOQzVzWlc1bmRHZzdJRkl5SUR3Z1pXVXlPeUJTTWlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JSTWlBOUlIUmxORnRTTWwwc0lFVmxJRDBnYmk1blpYUW9VVElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEM1aWFXNWtWR1Y0ZEhWeVpTZ3pOVFV6TENCRlpTNWZYM2RsWW1kc1ZHVjRkSFZ5WlNrc0lHeGxLRE0xTlRNc0lGRXlMQ0IyWlNrc0lFTmxLRW91WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5TENCRExDQlJNaXdnTXpZd05qUWdLeUJTTWl3Z016VTFNeWtzSUdJb1VUSXNJSFpsS1NBbUppQkJLRE0xTlRNcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUXVkVzVpYVc1a1ZHVjRkSFZ5WlNncE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMFpUVWdQU0F6TlRVek93b2dJQ0FnSUNBZ0lDQWdJQ0JOWlNBbUppQW9ZU0EvSUhSbE5TQTlJRlF1YVhORVlYUmhWR1Y0ZEhWeVpUTkVJRDhnTXpJNE56a2dPaUF6TlRnMk5pQTZJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UkdGMFlWUmxlSFIxY21VelJDQmhibVFnVkVoU1JVVXVSR0YwWVZSbGVIUjFjbVV5UkVGeWNtRjVJRzl1YkhrZ2MzVndjRzl5ZEdWa0lIZHBkR2dnVjJWaVIwd3lMaUlwS1N3Z2RDNWlhVzVrVkdWNGRIVnlaU2gwWlRVc0lDUXVYMTkzWldKbmJGUmxlSFIxY21VcExDQnNaU2gwWlRVc0lGUXNJSFpsS1N3Z1EyVW9TaTVmWDNkbFltZHNSbkpoYldWaWRXWm1aWElzSUVNc0lGUXNJRE0yTURZMExDQjBaVFVwTENCaUtGUXNJSFpsS1NBbUppQkJLSFJsTlNrc0lIUXVkVzVpYVc1a1ZHVjRkSFZ5WlNncE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQkRMbVJsY0hSb1FuVm1abVZ5SUNZbUlIaGxLRU1wT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2FpaERLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElGUWdQU0JmS0VNcElIeDhJR0VzSUVvZ1BTQkRMbWx6VjJWaVIweE5kV3gwYVhCc1pWSmxibVJsY2xSaGNtZGxkSE1nUFQwOUlDRXdJRDhnUXk1MFpYaDBkWEpsSURvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0JETG5SbGVIUjFjbVVLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnSkNBOUlEQXNJSEpsSUQwZ1NpNXNaVzVuZEdnN0lDUWdQQ0J5WlRzZ0pDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRm9nUFNCS1d5UmRPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZaWhhTENCVUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUUxbElEMGdReTVwYzFkbFlrZE1RM1ZpWlZKbGJtUmxjbFJoY21kbGRDQS9JRE0wTURZM0lEb2dNelUxTXl3Z2RtVWdQU0J1TG1kbGRDaGFLUzVmWDNkbFltZHNWR1Y0ZEhWeVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUXVZbWx1WkZSbGVIUjFjbVVvVFdVc0lIWmxLU3dnUVNoTlpTa3NJSFF1ZFc1aWFXNWtWR1Y0ZEhWeVpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdTeWhES1NCN0NpQWdJQ0FnSUNBZ2FXWWdLRU11ZFhObFVtVnVaR1Z5WW5WbVptVnlLU0JwWmlBb1lTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWQ0E5SUVNdWQybGtkR2dzSUVvZ1BTQkRMbWhsYVdkb2RDd2dKQ0E5SURFMk16ZzBMQ0J5WlNBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lETTJNRFkwQ2lBZ0lDQWdJQ0FnSUNBZ0lGMHNJRm9nUFNCRExuTjBaVzVqYVd4Q2RXWm1aWElnUHlBek16TXdOaUE2SURNMk1EazJPd29nSUNBZ0lDQWdJQ0FnSUNCRExtUmxjSFJvUW5WbVptVnlJQ1ltSUhKbExuQjFjMmdvV2lrc0lFTXVhV2R1YjNKbFJHVndkR2hHYjNKTmRXeDBhWE5oYlhCc1pVTnZjSGtnZkh3Z0tFTXVaR1Z3ZEdoQ2RXWm1aWElnSmlZZ0tDUWdmRDBnTWpVMktTd2dReTV6ZEdWdVkybHNRblZtWm1WeUlDWW1JQ2drSUh3OUlERXdNalFwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUUxbElEMGdiaTVuWlhRb1F5azdDaUFnSUNBZ0lDQWdJQ0FnSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1EQTRMQ0JOWlM1ZlgzZGxZbWRzVFhWc2RHbHpZVzF3YkdWa1JuSmhiV1ZpZFdabVpYSXBMQ0IwTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpBd09Td2dUV1V1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5S1N3Z1F5NXBaMjV2Y21WRVpYQjBhRVp2Y2sxMWJIUnBjMkZ0Y0d4bFEyOXdlU0FtSmlBb2N5NXBiblpoYkdsa1lYUmxSbkpoYldWaWRXWm1aWElvTXpZd01EZ3NJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRm9LSUNBZ0lDQWdJQ0FnSUNBZ1hTa3NJSE11YVc1MllXeHBaR0YwWlVaeVlXMWxZblZtWm1WeUtETTJNREE1TENCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCYUNpQWdJQ0FnSUNBZ0lDQWdJRjBwS1N3Z2N5NWliR2wwUm5KaGJXVmlkV1ptWlhJb01Dd2dNQ3dnVkN3Z1Npd2dNQ3dnTUN3Z1ZDd2dTaXdnSkN3Z09UY3lPQ2tzSUhNdWFXNTJZV3hwWkdGMFpVWnlZVzFsWW5WbVptVnlLRE0yTURBNExDQnlaU2tzSUhRdVltbHVaRVp5WVcxbFluVm1abVZ5S0RNMk1EQTRMQ0J1ZFd4c0tTd2dkQzVpYVc1a1JuSmhiV1ZpZFdabVpYSW9Nell3TURrc0lFMWxMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nVjJWaVIweE5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENCallXNGdiMjVzZVNCaVpTQjFjMlZrSUhkcGRHZ2dWMlZpUjB3eUxpSXBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnZFdVb1F5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhJQ1ltSUNoRExuVnpaVkpsYm1SbGNtSjFabVpsY2lCOGZDQkRMblZ6WlZKbGJtUmxjbFJ2VkdWNGRIVnlaU2tnUHlCTllYUm9MbTFwYmloMUxDQkRMbk5oYlhCc1pYTXBJRG9nTURzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlITmxLRU1wSUhzS0lDQWdJQ0FnSUNCc1pYUWdWQ0E5SUc4dWNtVnVaR1Z5TG1aeVlXMWxPd29nSUNBZ0lDQWdJRzB1WjJWMEtFTXBJQ0U5UFNCVUlDWW1JQ2h0TG5ObGRDaERMQ0JVS1N3Z1F5NTFjR1JoZEdVb0tTazdDaUFnSUNCOUNpQWdJQ0JzWlhRZ1UyVWdQU0FoTVN3Z1ZHVWdQU0FoTVRzS0lDQWdJR1oxYm1OMGFXOXVJRkJsS0VNc0lGUXBJSHNLSUNBZ0lDQWdJQ0JESUNZbUlFTXVhWE5YWldKSFRGSmxibVJsY2xSaGNtZGxkQ0FtSmlBb1UyVWdQVDA5SUNFeElDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1WR1Y0ZEhWeVpYTXVjMkZtWlZObGRGUmxlSFIxY21VeVJEb2daRzl1SjNRZ2RYTmxJSEpsYm1SbGNpQjBZWEpuWlhSeklHRnpJSFJsZUhSMWNtVnpMaUJWYzJVZ2RHaGxhWElnTG5SbGVIUjFjbVVnY0hKdmNHVnlkSGtnYVc1emRHVmhaQzRpS1N3Z1UyVWdQU0FoTUNrc0lFTWdQU0JETG5SbGVIUjFjbVVwTENCUEtFTXNJRlFwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1dXVW9ReXdnVkNrZ2V3b2dJQ0FnSUNBZ0lFTWdKaVlnUXk1cGMxZGxZa2RNUTNWaVpWSmxibVJsY2xSaGNtZGxkQ0FtSmlBb1ZHVWdQVDA5SUNFeElDWW1JQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1WR1Y0ZEhWeVpYTXVjMkZtWlZObGRGUmxlSFIxY21WRGRXSmxPaUJrYjI0bmRDQjFjMlVnWTNWaVpTQnlaVzVrWlhJZ2RHRnlaMlYwY3lCaGN5QjBaWGgwZFhKbGN5NGdWWE5sSUhSb1pXbHlJQzUwWlhoMGRYSmxJSEJ5YjNCbGNuUjVJR2x1YzNSbFlXUXVJaWtzSUZSbElEMGdJVEFwTENCRElEMGdReTUwWlhoMGRYSmxLU3dnVmloRExDQlVLVHNLSUNBZ0lIMEtJQ0FnSUhSb2FYTXVZV3hzYjJOaGRHVlVaWGgwZFhKbFZXNXBkQ0E5SUVZc0lIUm9hWE11Y21WelpYUlVaWGgwZFhKbFZXNXBkSE1nUFNCVkxDQjBhR2x6TG5ObGRGUmxlSFIxY21VeVJDQTlJRThzSUhSb2FYTXVjMlYwVkdWNGRIVnlaVEpFUVhKeVlYa2dQU0J1WlN3Z2RHaHBjeTV6WlhSVVpYaDBkWEpsTTBRZ1BTQmpaU3dnZEdocGN5NXpaWFJVWlhoMGRYSmxRM1ZpWlNBOUlGWXNJSFJvYVhNdWNtVmlhVzVrVkdWNGRIVnlaWE1nUFNCUFpTd2dkR2hwY3k1elpYUjFjRkpsYm1SbGNsUmhjbWRsZENBOUlFY3NJSFJvYVhNdWRYQmtZWFJsVW1WdVpHVnlWR0Z5WjJWMFRXbHdiV0Z3SUQwZ2Fpd2dkR2hwY3k1MWNHUmhkR1ZOZFd4MGFYTmhiWEJzWlZKbGJtUmxjbFJoY21kbGRDQTlJRXNzSUhSb2FYTXVjMlYwZFhCRVpYQjBhRkpsYm1SbGNtSjFabVpsY2lBOUlIaGxMQ0IwYUdsekxuTmxkSFZ3Um5KaGJXVkNkV1ptWlhKVVpYaDBkWEpsSUQwZ1EyVXNJSFJvYVhNdWMyRm1aVk5sZEZSbGVIUjFjbVV5UkNBOUlGQmxMQ0IwYUdsekxuTmhabVZUWlhSVVpYaDBkWEpsUTNWaVpTQTlJRmxsT3dwOUNtWjFibU4wYVc5dUlFVjRLSE1zSUdVc0lIUXBJSHNLSUNBZ0lHeGxkQ0J1SUQwZ2RDNXBjMWRsWWtkTU1qc0tJQ0FnSUdaMWJtTjBhVzl1SUdrb2Npa2dld29nSUNBZ0lDQWdJR3hsZENCdk93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQnliaWtnY21WMGRYSnVJRFV4TWpFN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlGWjFLU0J5WlhSMWNtNGdNekk0TVRrN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlGZDFLU0J5WlhSMWNtNGdNekk0TWpBN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlIRjFLU0J5WlhSMWNtNGdNek0yTXpVN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlFaDFLU0J5WlhSMWNtNGdOVEV5TURzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2EzVXBJSEpsZEhWeWJpQTFNVEl5T3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCamNpa2djbVYwZFhKdUlEVXhNak03Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUVkMUtTQnlaWFIxY200Z05URXlORHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVUhNcElISmxkSFZ5YmlBMU1USTFPd29nSUNBZ0lDQWdJR2xtSUNoeUlEMDlQU0J1YmlrZ2NtVjBkWEp1SURVeE1qWTdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJR3R1S1NCeVpYUjFjbTRnYmlBL0lEVXhNekVnT2lBb2J5QTlJR1V1WjJWMEtDSlBSVk5mZEdWNGRIVnlaVjlvWVd4bVgyWnNiMkYwSWlrc0lHOGdJVDA5SUc1MWJHd2dQeUJ2TGtoQlRFWmZSa3hQUVZSZlQwVlRJRG9nYm5Wc2JDazdDaUFnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJRmgxS1NCeVpYUjFjbTRnTmpRd05qc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdSMjRwSUhKbGRIVnliaUEyTkRBM093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQmpkQ2tnY21WMGRYSnVJRFkwTURnN0NpQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlFcDFLU0J5WlhSMWNtNGdOalF3T1RzS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1dYVXBJSEpsZEhWeWJpQTJOREV3T3dvZ0lDQWdJQ0FnSUdsbUlDaHlJRDA5UFNCV2Jpa2djbVYwZFhKdUlEWTBNREk3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUV4cEtTQnlaWFIxY200Z016UXdOREU3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUZwMUtTQnlaWFIxY200Z05qUXdNenNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnSkhVcElISmxkSFZ5YmlBek5qSTBORHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnYW5VcElISmxkSFZ5YmlBek16TXhPVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnVVhVcElISmxkSFZ5YmlBek16TXlNRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnUzNVcElISmxkSFZ5YmlBek5qSTBPRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWldRcElISmxkSFZ5YmlBek5qSTBPVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWVd3Z2ZId2djaUE5UFQwZ2JHd2dmSHdnY2lBOVBUMGdZMndnZkh3Z2NpQTlQVDBnYUd3cElHbG1JQ2h2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjl6TTNSaklpa3NJRzhnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJR0ZzS1NCeVpYUjFjbTRnYnk1RFQwMVFVa1ZUVTBWRVgxSkhRbDlUTTFSRFgwUllWREZmUlZoVU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnYkd3cElISmxkSFZ5YmlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDUVY5VE0xUkRYMFJZVkRGZlJWaFVPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ1kyd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOVRNMVJEWDBSWVZETmZSVmhVT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdhR3dwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlUTTFSRFgwUllWRFZmUlZoVU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdkV3dnZkh3Z2NpQTlQVDBnWkd3Z2ZId2djaUE5UFQwZ1ptd2dmSHdnY2lBOVBUMGdjR3dwSUdsbUlDaHZJRDBnWlM1blpYUW9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOXdkbkowWXlJcExDQnZJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQjFiQ2tnY21WMGRYSnVJRzh1UTA5TlVGSkZVMU5GUkY5U1IwSmZVRlpTVkVOZk5FSlFVRll4WDBsTlJ6c0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tISWdQVDA5SUdSc0tTQnlaWFIxY200Z2J5NURUMDFRVWtWVFUwVkVYMUpIUWw5UVZsSlVRMTh5UWxCUVZqRmZTVTFIT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdabXdwSUhKbGRIVnliaUJ2TGtOUFRWQlNSVk5UUlVSZlVrZENRVjlRVmxKVVExODBRbEJRVmpGZlNVMUhPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2NHd3BJSEpsZEhWeWJpQnZMa05QVFZCU1JWTlRSVVJmVWtkQ1FWOVFWbEpVUTE4eVFsQlFWakZmU1UxSE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBOVBUMGdkR1FwSUhKbGRIVnliaUJ2SUQwZ1pTNW5aWFFvSWxkRlFrZE1YMk52YlhCeVpYTnpaV1JmZEdWNGRIVnlaVjlsZEdNeElpa3NJRzhnSVQwOUlHNTFiR3dnUHlCdkxrTlBUVkJTUlZOVFJVUmZVa2RDWDBWVVF6RmZWMFZDUjB3Z09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUdsbUlDZ29jaUE5UFQwZ2JXd2dmSHdnY2lBOVBUMGdaMndwSUNZbUlDaHZJRDBnWlM1blpYUW9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOWxkR01pS1N3Z2J5QWhQVDBnYm5Wc2JDa3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlHMXNLU0J5WlhSMWNtNGdieTVEVDAxUVVrVlRVMFZFWDFKSFFqaGZSVlJETWpzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJR2RzS1NCeVpYUjFjbTRnYnk1RFQwMVFVa1ZUVTBWRVgxSkhRa0U0WDBWVVF6SmZSVUZET3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9jaUE5UFQwZ2JtUWdmSHdnY2lBOVBUMGdhV1FnZkh3Z2NpQTlQVDBnY21RZ2ZId2djaUE5UFQwZ2MyUWdmSHdnY2lBOVBUMGdiMlFnZkh3Z2NpQTlQVDBnWVdRZ2ZId2djaUE5UFQwZ2JHUWdmSHdnY2lBOVBUMGdZMlFnZkh3Z2NpQTlQVDBnYUdRZ2ZId2djaUE5UFQwZ2RXUWdmSHdnY2lBOVBUMGdaR1FnZkh3Z2NpQTlQVDBnWm1RZ2ZId2djaUE5UFQwZ2NHUWdmSHdnY2lBOVBUMGdiV1FnZkh3Z2NpQTlQVDBnZUdRZ2ZId2djaUE5UFQwZ2VXUWdmSHdnY2lBOVBUMGdkbVFnZkh3Z2NpQTlQVDBnWDJRZ2ZId2djaUE5UFQwZ1RXUWdmSHdnY2lBOVBUMGdZbVFnZkh3Z2NpQTlQVDBnZDJRZ2ZId2djaUE5UFQwZ1UyUWdmSHdnY2lBOVBUMGdWR1FnZkh3Z2NpQTlQVDBnUldRZ2ZId2djaUE5UFQwZ1FXUWdmSHdnY2lBOVBUMGdRMlFnZkh3Z2NpQTlQVDBnVEdRZ2ZId2djaUE5UFQwZ1VtUXBJSEpsZEhWeWJpQnZJRDBnWlM1blpYUW9JbGRGUWtkTVgyTnZiWEJ5WlhOelpXUmZkR1Y0ZEhWeVpWOWhjM1JqSWlrc0lHOGdJVDA5SUc1MWJHd2dQeUJ5SURvZ2JuVnNiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnWjJRcElISmxkSFZ5YmlCdklEMGdaUzVuWlhRb0lrVllWRjkwWlhoMGRYSmxYMk52YlhCeVpYTnphVzl1WDJKd2RHTWlLU3dnYnlBaFBUMGdiblZzYkNBL0lISWdPaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHbG1JQ2h5SUQwOVBTQlVhU2tnY21WMGRYSnVJRzRnUHlBek5EQTBNaUE2SUNodklEMGdaUzVuWlhRb0lsZEZRa2RNWDJSbGNIUm9YM1JsZUhSMWNtVWlLU3dnYnlBaFBUMGdiblZzYkNBL0lHOHVWVTVUU1VkT1JVUmZTVTVVWHpJMFh6aGZWMFZDUjB3Z09pQnVkV3hzS1RzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ1kyOXVkbVZ5ZERvZ2FRb2dJQ0FnZlRzS2ZRcDJZWElnWjJFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUhWMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0JiWFNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbU5oYldWeVlYTWdQU0JsT3dvZ0lDQWdmUXA5T3dwbllTNXdjbTkwYjNSNWNHVXVhWE5CY25KaGVVTmhiV1Z5WVNBOUlDRXdPd3AyWVhJZ1NHNGdQU0JqYkdGemN5QmxlSFJsYm1SeklFNWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVIzSnZkWEFpT3dvZ0lDQWdmUXA5T3dwSWJpNXdjbTkwYjNSNWNHVXVhWE5IY205MWNDQTlJQ0V3T3dwMllYSWdRWGdnUFNCN0NpQWdJQ0IwZVhCbE9pQWliVzkyWlNJS2ZTd2dTWE1nUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWdwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVYM1JoY21kbGRGSmhlU0E5SUc1MWJHd3NJSFJvYVhNdVgyZHlhWEFnUFNCdWRXeHNMQ0IwYUdsekxsOW9ZVzVrSUQwZ2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFaGhibVJUY0dGalpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmFHRnVaQ0E5UFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmYUdGdVpDQTlJRzVsZHlCSWJpd2dkR2hwY3k1ZmFHRnVaQzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WDJoaGJtUXVkbWx6YVdKc1pTQTlJQ0V4TENCMGFHbHpMbDlvWVc1a0xtcHZhVzUwY3lBOUlIdDlMQ0IwYUdsekxsOW9ZVzVrTG1sdWNIVjBVM1JoZEdVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhCcGJtTm9hVzVuT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxsOW9ZVzVrT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWR0Z5WjJWMFVtRjVVM0JoWTJVb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WDNSaGNtZGxkRkpoZVNBOVBUMGdiblZzYkNBbUppQW9kR2hwY3k1ZmRHRnlaMlYwVW1GNUlEMGdibVYzSUVodUxDQjBhR2x6TGw5MFlYSm5aWFJTWVhrdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxsOTBZWEpuWlhSU1lYa3VkbWx6YVdKc1pTQTlJQ0V4TENCMGFHbHpMbDkwWVhKblpYUlNZWGt1YUdGelRHbHVaV0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Td2dkR2hwY3k1ZmRHRnlaMlYwVW1GNUxteHBibVZoY2xabGJHOWphWFI1SUQwZ2JtVjNJRTBzSUhSb2FYTXVYM1JoY21kbGRGSmhlUzVvWVhOQmJtZDFiR0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Td2dkR2hwY3k1ZmRHRnlaMlYwVW1GNUxtRnVaM1ZzWVhKV1pXeHZZMmwwZVNBOUlHNWxkeUJOS1N3Z2RHaHBjeTVmZEdGeVoyVjBVbUY1T3dvZ0lDQWdmUW9nSUNBZ1oyVjBSM0pwY0ZOd1lXTmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOW5jbWx3SUQwOVBTQnVkV3hzSUNZbUlDaDBhR2x6TGw5bmNtbHdJRDBnYm1WM0lFaHVMQ0IwYUdsekxsOW5jbWx3TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1ZlozSnBjQzUyYVhOcFlteGxJRDBnSVRFc0lIUm9hWE11WDJkeWFYQXVhR0Z6VEdsdVpXRnlWbVZzYjJOcGRIa2dQU0FoTVN3Z2RHaHBjeTVmWjNKcGNDNXNhVzVsWVhKV1pXeHZZMmwwZVNBOUlHNWxkeUJOTENCMGFHbHpMbDluY21sd0xtaGhjMEZ1WjNWc1lYSldaV3h2WTJsMGVTQTlJQ0V4TENCMGFHbHpMbDluY21sd0xtRnVaM1ZzWVhKV1pXeHZZMmwwZVNBOUlHNWxkeUJOS1N3Z2RHaHBjeTVmWjNKcGNEc0tJQ0FnSUgwS0lDQWdJR1JwYzNCaGRHTm9SWFpsYm5Rb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5MFlYSm5aWFJTWVhrZ0lUMDlJRzUxYkd3Z0ppWWdkR2hwY3k1ZmRHRnlaMlYwVW1GNUxtUnBjM0JoZEdOb1JYWmxiblFvWlNrc0lIUm9hWE11WDJkeWFYQWdJVDA5SUc1MWJHd2dKaVlnZEdocGN5NWZaM0pwY0M1a2FYTndZWFJqYUVWMlpXNTBLR1VwTENCMGFHbHpMbDlvWVc1a0lDRTlQU0J1ZFd4c0lDWW1JSFJvYVhNdVgyaGhibVF1WkdsemNHRjBZMmhGZG1WdWRDaGxLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1JwYzJOdmJtNWxZM1FvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVJwYzNCaGRHTm9SWFpsYm5Rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwZVhCbE9pQWlaR2x6WTI5dWJtVmpkR1ZrSWl3S0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ1pRb2dJQ0FnSUNBZ0lIMHBMQ0IwYUdsekxsOTBZWEpuWlhSU1lYa2dJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYM1JoY21kbGRGSmhlUzUyYVhOcFlteGxJRDBnSVRFcExDQjBhR2x6TGw5bmNtbHdJQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbDluY21sd0xuWnBjMmxpYkdVZ1BTQWhNU2tzSUhSb2FYTXVYMmhoYm1RZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgyaGhibVF1ZG1semFXSnNaU0E5SUNFeEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdWRXeHNMQ0J5SUQwZ2JuVnNiQ3dnYnlBOUlHNTFiR3dzSUdFZ1BTQjBhR2x6TGw5MFlYSm5aWFJTWVhrc0lHd2dQU0IwYUdsekxsOW5jbWx3TENCaklEMGdkR2hwY3k1ZmFHRnVaRHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQW1KaUIwTG5ObGMzTnBiMjR1ZG1semFXSnBiR2wwZVZOMFlYUmxJQ0U5UFNBaWRtbHphV0pzWlMxaWJIVnljbVZrSWlrZ2FXWWdLR0VnSVQwOUlHNTFiR3dnSmlZZ0tHa2dQU0IwTG1kbGRGQnZjMlVvWlM1MFlYSm5aWFJTWVhsVGNHRmpaU3dnYmlrc0lHa2dJVDA5SUc1MWJHd2dKaVlnS0dFdWJXRjBjbWw0TG1aeWIyMUJjbkpoZVNocExuUnlZVzV6Wm05eWJTNXRZWFJ5YVhncExDQmhMbTFoZEhKcGVDNWtaV052YlhCdmMyVW9ZUzV3YjNOcGRHbHZiaXdnWVM1eWIzUmhkR2x2Yml3Z1lTNXpZMkZzWlNrc0lHa3ViR2x1WldGeVZtVnNiMk5wZEhrZ1B5QW9ZUzVvWVhOTWFXNWxZWEpXWld4dlkybDBlU0E5SUNFd0xDQmhMbXhwYm1WaGNsWmxiRzlqYVhSNUxtTnZjSGtvYVM1c2FXNWxZWEpXWld4dlkybDBlU2twSURvZ1lTNW9ZWE5NYVc1bFlYSldaV3h2WTJsMGVTQTlJQ0V4TENCcExtRnVaM1ZzWVhKV1pXeHZZMmwwZVNBL0lDaGhMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFd0xDQmhMbUZ1WjNWc1lYSldaV3h2WTJsMGVTNWpiM0I1S0drdVlXNW5kV3hoY2xabGJHOWphWFI1S1NrZ09pQmhMbWhoYzBGdVozVnNZWEpXWld4dlkybDBlU0E5SUNFeExDQjBhR2x6TG1ScGMzQmhkR05vUlhabGJuUW9RWGdwS1Nrc0lHTWdKaVlnWlM1b1lXNWtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0FoTURzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5SUNoc1pYUWdlQ0J2WmlCbExtaGhibVF1ZG1Gc2RXVnpLQ2twZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0IwTG1kbGRFcHZhVzUwVUc5elpTaDRMQ0J1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpMbXB2YVc1MGMxdDRMbXB2YVc1MFRtRnRaVjBnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCd0lEMGdibVYzSUVodU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEF1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0E5SUNFeExDQndMblpwYzJsaWJHVWdQU0FoTVN3Z1l5NXFiMmx1ZEhOYmVDNXFiMmx1ZEU1aGJXVmRJRDBnY0N3Z1l5NWhaR1FvY0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUdNdWFtOXBiblJ6VzNndWFtOXBiblJPWVcxbFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWWdJVDA5SUc1MWJHd2dKaVlnS0djdWJXRjBjbWw0TG1aeWIyMUJjbkpoZVNoMkxuUnlZVzV6Wm05eWJTNXRZWFJ5YVhncExDQm5MbTFoZEhKcGVDNWtaV052YlhCdmMyVW9aeTV3YjNOcGRHbHZiaXdnWnk1eWIzUmhkR2x2Yml3Z1p5NXpZMkZzWlNrc0lHY3VhbTlwYm5SU1lXUnBkWE1nUFNCMkxuSmhaR2wxY3lrc0lHY3VkbWx6YVdKc1pTQTlJSFlnSVQwOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHZ2dQU0JqTG1wdmFXNTBjMXNpYVc1a1pYZ3RabWx1WjJWeUxYUnBjQ0pkTENCMUlEMGdZeTVxYjJsdWRITmJJblJvZFcxaUxYUnBjQ0pkTENCa0lEMGdhQzV3YjNOcGRHbHZiaTVrYVhOMFlXNWpaVlJ2S0hVdWNHOXphWFJwYjI0cExDQm1JRDBnTGpBeUxDQnRJRDBnTGpBd05Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWXk1cGJuQjFkRk4wWVhSbExuQnBibU5vYVc1bklDWW1JR1FnUGlCbUlDc2diU0EvSUNoakxtbHVjSFYwVTNSaGRHVXVjR2x1WTJocGJtY2dQU0FoTVN3Z2RHaHBjeTVrYVhOd1lYUmphRVYyWlc1MEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKd2FXNWphR1Z1WkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb1lXNWtaV1J1WlhOek9pQmxMbWhoYm1SbFpHNWxjM01zQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWVhKblpYUTZJSFJvYVhNS0lDQWdJQ0FnSUNBZ0lDQWdmU2twSURvZ0lXTXVhVzV3ZFhSVGRHRjBaUzV3YVc1amFHbHVaeUFtSmlCa0lEdzlJR1lnTFNCdElDWW1JQ2hqTG1sdWNIVjBVM1JoZEdVdWNHbHVZMmhwYm1jZ1BTQWhNQ3dnZEdocGN5NWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJQ0p3YVc1amFITjBZWEowSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdoaGJtUmxaRzVsYzNNNklHVXVhR0Z1WkdWa2JtVnpjeXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJoY21kbGREb2dkR2hwY3dvZ0lDQWdJQ0FnSUNBZ0lDQjlLU2s3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR3dnSVQwOUlHNTFiR3dnSmlZZ1pTNW5jbWx3VTNCaFkyVWdKaVlnS0hJZ1BTQjBMbWRsZEZCdmMyVW9aUzVuY21sd1UzQmhZMlVzSUc0cExDQnlJQ0U5UFNCdWRXeHNJQ1ltSUNoc0xtMWhkSEpwZUM1bWNtOXRRWEp5WVhrb2NpNTBjbUZ1YzJadmNtMHViV0YwY21sNEtTd2diQzV0WVhSeWFYZ3VaR1ZqYjIxd2IzTmxLR3d1Y0c5emFYUnBiMjRzSUd3dWNtOTBZWFJwYjI0c0lHd3VjMk5oYkdVcExDQnlMbXhwYm1WaGNsWmxiRzlqYVhSNUlEOGdLR3d1YUdGelRHbHVaV0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Dd2diQzVzYVc1bFlYSldaV3h2WTJsMGVTNWpiM0I1S0hJdWJHbHVaV0Z5Vm1Wc2IyTnBkSGtwS1NBNklHd3VhR0Z6VEdsdVpXRnlWbVZzYjJOcGRIa2dQU0FoTVN3Z2NpNWhibWQxYkdGeVZtVnNiMk5wZEhrZ1B5QW9iQzVvWVhOQmJtZDFiR0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Dd2diQzVoYm1kMWJHRnlWbVZzYjJOcGRIa3VZMjl3ZVNoeUxtRnVaM1ZzWVhKV1pXeHZZMmwwZVNrcElEb2diQzVvWVhOQmJtZDFiR0Z5Vm1Wc2IyTnBkSGtnUFNBaE1Ta3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhJQ0U5UFNCdWRXeHNJQ1ltSUNoaExuWnBjMmxpYkdVZ1BTQnBJQ0U5UFNCdWRXeHNLU3dnYkNBaFBUMGdiblZzYkNBbUppQW9iQzUyYVhOcFlteGxJRDBnY2lBaFBUMGdiblZzYkNrc0lHTWdJVDA5SUc1MWJHd2dKaVlnS0dNdWRtbHphV0pzWlNBOUlHOGdJVDA5SUc1MWJHd3BMQ0IwYUdsek93b2dJQ0FnZlFwOUxDQnJjeUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdiM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeXdnYUNsN0NpQWdJQ0FnSUNBZ2FXWWdLR2dnUFNCb0lDRTlQU0IyYjJsa0lEQWdQeUJvSURvZ1ZtNHNJR2dnSVQwOUlGWnVJQ1ltSUdnZ0lUMDlJRXhwS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSWtSbGNIUm9WR1Y0ZEhWeVpTQm1iM0p0WVhRZ2JYVnpkQ0JpWlNCbGFYUm9aWElnVkVoU1JVVXVSR1Z3ZEdoR2IzSnRZWFFnYjNJZ1ZFaFNSVVV1UkdWd2RHaFRkR1Z1WTJsc1JtOXliV0YwSWlrN0NpQWdJQ0FnSUNBZ2JpQTlQVDBnZG05cFpDQXdJQ1ltSUdnZ1BUMDlJRlp1SUNZbUlDaHVJRDBnWTNJcExDQnVJRDA5UFNCMmIybGtJREFnSmlZZ2FDQTlQVDBnVEdrZ0ppWWdLRzRnUFNCVWFTazdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2JuVnNiQ3dnYVN3Z2Npd2dieXdnWVN3Z2JDd2dhQ3dnYml3Z1l5azdDaUFnSUNBZ0lDQWdkR2hwY3k1cGJXRm5aU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEFvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11YldGblJtbHNkR1Z5SUQwZ1lTQWhQVDBnZG05cFpDQXdJRDhnWVNBNklISjBMQ0IwYUdsekxtMXBia1pwYkhSbGNpQTlJR3dnSVQwOUlIWnZhV1FnTUNBL0lHd2dPaUJ5ZEN3Z2RHaHBjeTVtYkdsd1dTQTlJQ0V4TENCMGFHbHpMbWRsYm1WeVlYUmxUV2x3YldGd2N5QTlJQ0V4T3dvZ0lDQWdmUXA5T3dwcmN5NXdjbTkwYjNSNWNHVXVhWE5FWlhCMGFGUmxlSFIxY21VZ1BTQWhNRHNLZG1GeUlIWm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkZiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeXdnYVNBOUlHNTFiR3dzSUhJZ1BTQXhMQ0J2SUQwZ2JuVnNiQ3dnWVNBOUlDSnNiMk5oYkMxbWJHOXZjaUlzSUd3Z1BTQmxMbVY0ZEdWdWMybHZibk11YUdGektDSlhSVUpIVEY5dGRXeDBhWE5oYlhCc1pXUmZjbVZ1WkdWeVgzUnZYM1JsZUhSMWNtVWlLU3dnWXlBOUlHNTFiR3dzSUdnZ1BTQnVkV3hzTENCMUlEMGdiblZzYkN3Z1pDQTlJRzUxYkd3c0lHWWdQU0FoTVN3Z2JTQTlJRzUxYkd3c0lIZ2dQU0IwTG1kbGRFTnZiblJsZUhSQmRIUnlhV0oxZEdWektDa3NJSFlnUFNCdWRXeHNMQ0JuSUQwZ2JuVnNiQ3dnY0NBOUlGdGRMQ0JmSUQwZ2JtVjNJRTFoY0N3Z2VTQTlJRzVsZHlCMWREc0tJQ0FnSUNBZ0lDQjVMbXhoZVdWeWN5NWxibUZpYkdVb01Ta3NJSGt1ZG1sbGQzQnZjblFnUFNCdVpYY2dWbVU3Q2lBZ0lDQWdJQ0FnYkdWMElHSWdQU0J1WlhjZ2RYUTdDaUFnSUNBZ0lDQWdZaTVzWVhsbGNuTXVaVzVoWW14bEtESXBMQ0JpTG5acFpYZHdiM0owSUQwZ2JtVjNJRlpsT3dvZ0lDQWdJQ0FnSUd4bGRDQkJJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQjVMQW9nSUNBZ0lDQWdJQ0FnSUNCaUNpQWdJQ0FnSUNBZ1hTd2dUQ0E5SUc1bGR5Qm5ZVHNLSUNBZ0lDQWdJQ0JNTG14aGVXVnljeTVsYm1GaWJHVW9NU2tzSUV3dWJHRjVaWEp6TG1WdVlXSnNaU2d5S1RzS0lDQWdJQ0FnSUNCc1pYUWdTU0E5SUc1MWJHd3NJR3NnUFNCdWRXeHNPd29nSUNBZ0lDQWdJSFJvYVhNdVkyRnRaWEpoUVhWMGIxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtVnVZV0pzWldRZ1BTQWhNU3dnZEdocGN5NXBjMUJ5WlhObGJuUnBibWNnUFNBaE1Td2dkR2hwY3k1blpYUkRiMjUwY205c2JHVnlJRDBnWm5WdVkzUnBiMjRvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1Z5QTlJSEJiVmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQlhJRDA5UFNCMmIybGtJREFnSmlZZ0tGY2dQU0J1WlhjZ1NYTXNJSEJiVmwwZ1BTQlhLU3dnVnk1blpYUlVZWEpuWlhSU1lYbFRjR0ZqWlNncE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBRMjl1ZEhKdmJHeGxja2R5YVhBZ1BTQm1kVzVqZEdsdmJpaFdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JYSUQwZ2NGdFdYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUZjZ1BUMDlJSFp2YVdRZ01DQW1KaUFvVnlBOUlHNWxkeUJKY3l3Z2NGdFdYU0E5SUZjcExDQlhMbWRsZEVkeWFYQlRjR0ZqWlNncE93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBTR0Z1WkNBOUlHWjFibU4wYVc5dUtGWXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRmNnUFNCd1cxWmRPd29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnVnlBOVBUMGdkbTlwWkNBd0lDWW1JQ2hYSUQwZ2JtVjNJRWx6TENCd1cxWmRJRDBnVnlrc0lGY3VaMlYwU0dGdVpGTndZV05sS0NrN0NpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQkNLRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZjZ1BTQmZMbWRsZENoV0xtbHVjSFYwVTI5MWNtTmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1Z5QW1KaUJYTG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ1ZpNTBlWEJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2dWaTVwYm5CMWRGTnZkWEpqWlFvZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnVUNncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWHk1bWIzSkZZV05vS0daMWJtTjBhVzl1S0ZZc0lGY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRll1WkdselkyOXVibVZqZENoWEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNrc0lGOHVZMnhsWVhJb0tTd2dTU0E5SUc1MWJHd3NJR3NnUFNCdWRXeHNMQ0JsTG5ObGRGSmxibVJsY2xSaGNtZGxkQ2gyS1N3Z1pDQTlJRzUxYkd3c0lIVWdQU0J1ZFd4c0xDQm9JRDBnYm5Wc2JDd2dhU0E5SUc1MWJHd3NJR2NnUFNCdWRXeHNMQ0JqWlM1emRHOXdLQ2tzSUc0dWFYTlFjbVZ6Wlc1MGFXNW5JRDBnSVRFc0lHNHVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpYzJWemMybHZibVZ1WkNJS0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhSb2FYTXVjMlYwUm5KaGJXVmlkV1ptWlhKVFkyRnNaVVpoWTNSdmNpQTlJR1oxYm1OMGFXOXVLRllwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaUE5SUZZc0lHNHVhWE5RY21WelpXNTBhVzVuSUQwOVBTQWhNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZbGhTVFdGdVlXZGxjam9nUTJGdWJtOTBJR05vWVc1blpTQm1jbUZ0WldKMVptWmxjaUJ6WTJGc1pTQjNhR2xzWlNCd2NtVnpaVzUwYVc1bkxpSXBPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVjMlYwVW1WbVpYSmxibU5sVTNCaFkyVlVlWEJsSUQwZ1puVnVZM1JwYjI0b1Zpa2dld29nSUNBZ0lDQWdJQ0FnSUNCaElEMGdWaXdnYmk1cGMxQnlaWE5sYm5ScGJtY2dQVDA5SUNFd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVdGSk5ZVzVoWjJWeU9pQkRZVzV1YjNRZ1kyaGhibWRsSUhKbFptVnlaVzVqWlNCemNHRmpaU0IwZVhCbElIZG9hV3hsSUhCeVpYTmxiblJwYm1jdUlpazdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJTWldabGNtVnVZMlZUY0dGalpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2J6c0tJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxtZGxkRUpoYzJWTVlYbGxjaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkU0FoUFQwZ2JuVnNiQ0EvSUhVZ09pQmtPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwUW1sdVpHbHVaeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhRHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbWRsZEVaeVlXMWxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnRPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVaMlYwVTJWemMybHZiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVHNLSUNBZ0lDQWdJQ0I5TENCMGFHbHpMbk5sZEZObGMzTnBiMjRnUFNCaGMzbHVZeUJtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocElEMGdWaXdnYVNBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFlnUFNCbExtZGxkRkpsYm1SbGNsUmhjbWRsZENncExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk5sYkdWamRDSXNJRUlwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTmxiR1ZqZEhOMFlYSjBJaXdnUWlrc0lHa3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZzWldOMFpXNWtJaXdnUWlrc0lHa3VZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljM0YxWldWNlpTSXNJRUlwTENCcExtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0luTnhkV1ZsZW1WemRHRnlkQ0lzSUVJcExDQnBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9Jbk54ZFdWbGVtVmxibVFpTENCQ0tTd2dhUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0psYm1RaUxDQlFLU3dnYVM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKcGJuQjFkSE52ZFhKalpYTmphR0Z1WjJVaUxDQjNLU3dnZUM1NGNrTnZiWEJoZEdsaWJHVWdJVDA5SUNFd0lDWW1JR0YzWVdsMElIUXViV0ZyWlZoU1EyOXRjR0YwYVdKc1pTZ3BMQ0JwTG5KbGJtUmxjbE4wWVhSbExteGhlV1Z5Y3lBOVBUMGdkbTlwWkNBd0lIeDhJR1V1WTJGd1lXSnBiR2wwYVdWekxtbHpWMlZpUjB3eUlEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCWElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhiblJwWVd4cFlYTTZJR2t1Y21WdVpHVnlVM1JoZEdVdWJHRjVaWEp6SUQwOVBTQjJiMmxrSURBZ1B5QjRMbUZ1ZEdsaGJHbGhjeUE2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGJIQm9ZVG9nZUM1aGJIQm9ZU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1Z3ZEdnNklIZ3VaR1Z3ZEdnc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhOMFpXNWphV3c2SUhndWMzUmxibU5wYkN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm5KaGJXVmlkV1ptWlhKVFkyRnNaVVpoWTNSdmNqb2djZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaQ0E5SUc1bGR5QllVbGRsWWtkTVRHRjVaWElvYVN3Z2RDd2dWeWtzSUdrdWRYQmtZWFJsVW1WdVpHVnlVM1JoZEdVb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaVlYTmxUR0Y1WlhJNklHUUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1N3Z1p5QTlJRzVsZHlCQmRDaGtMbVp5WVcxbFluVm1abVZ5VjJsa2RHZ3NJR1F1Wm5KaGJXVmlkV1ptWlhKSVpXbG5hSFFzSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eWJXRjBPaUJqZEN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2djbTRzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1Z1WTI5a2FXNW5PaUJsTG05MWRIQjFkRVZ1WTI5a2FXNW5DaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWWdQU0I0TG1GdWRHbGhiR2xoY3pzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnVnpFZ1BTQnVkV3hzTENCb1pTQTlJRzUxYkd3c0lHeGxJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0TG1SbGNIUm9JQ1ltSUNoc1pTQTlJSGd1YzNSbGJtTnBiQ0EvSURNMU1EVTJJRG9nTXpNeE9UQXNJRmN4SUQwZ2VDNXpkR1Z1WTJsc0lEOGdUR2tnT2lCV2Jpd2dhR1VnUFNCNExuTjBaVzVqYVd3Z1B5QlVhU0E2SUdOeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ptVWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eVJtOXliV0YwT2lCNExtRnNjR2hoSUh4OElHWWdQeUF6TWpnMU5pQTZJRE15T0RRNUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCa1pYQjBhRVp2Y20xaGREb2diR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5qWVd4bFJtRmpkRzl5T2lCeUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCb0lEMGdibVYzSUZoU1YyVmlSMHhDYVc1a2FXNW5LR2tzSUhRcExDQjFJRDBnYUM1amNtVmhkR1ZRY205cVpXTjBhVzl1VEdGNVpYSW9abVVwTENCcExuVndaR0YwWlZKbGJtUmxjbE4wWVhSbEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHRjVaWEp6T2lCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1N3Z1ppQS9JR2NnUFNCdVpYY2dXSE1vZFM1MFpYaDBkWEpsVjJsa2RHZ3NJSFV1ZEdWNGRIVnlaVWhsYVdkb2RDd2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0p0WVhRNklHTjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCeWJpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hVWlhoMGRYSmxPaUJ1WlhjZ2EzTW9kUzUwWlhoMGRYSmxWMmxrZEdnc0lIVXVkR1Y0ZEhWeVpVaGxhV2RvZEN3Z2FHVXNJSFp2YVdRZ01Dd2dkbTlwWkNBd0xDQjJiMmxrSURBc0lIWnZhV1FnTUN3Z2RtOXBaQ0F3TENCMmIybGtJREFzSUZjeEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUmxibU5wYkVKMVptWmxjam9nZUM1emRHVnVZMmxzTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWjI1dmNtVkVaWEIwYURvZ2RTNXBaMjV2Y21WRVpYQjBhRlpoYkhWbGN5d0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbE9pQnNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxibU52WkdsdVp6b2daUzV2ZFhSd2RYUkZibU52WkdsdVp3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwSURvZ1p5QTlJRzVsZHlCQmRDaDFMblJsZUhSMWNtVlhhV1IwYUN3Z2RTNTBaWGgwZFhKbFNHVnBaMmgwTENCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNtMWhkRG9nZUM1aGJIQm9ZU0EvSUdOMElEb2dSMjRzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklISnVMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZSbGVIUjFjbVU2SUc1bGR5QnJjeWgxTG5SbGVIUjFjbVZYYVdSMGFDd2dkUzUwWlhoMGRYSmxTR1ZwWjJoMExDQm9aU3dnZG05cFpDQXdMQ0IyYjJsa0lEQXNJSFp2YVdRZ01Dd2dkbTlwWkNBd0xDQjJiMmxrSURBc0lIWnZhV1FnTUN3Z1Z6RXBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR1Z1WTJsc1FuVm1abVZ5T2lCNExuTjBaVzVqYVd3c0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbmJtOXlaVVJsY0hSb09pQjFMbWxuYm05eVpVUmxjSFJvVm1Gc2RXVnpMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxibU52WkdsdVp6b2daUzV2ZFhSd2RYUkZibU52WkdsdVp3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaWFJHYjNabFlYUnBiMjRvTVNrc0lHOGdQU0JoZDJGcGRDQnBMbkpsY1hWbGMzUlNaV1psY21WdVkyVlRjR0ZqWlNoaEtTd2dZMlV1YzJWMFEyOXVkR1Y0ZENocEtTd2dZMlV1YzNSaGNuUW9LU3dnYmk1cGMxQnlaWE5sYm5ScGJtY2dQU0FoTUN3Z2JpNWthWE53WVhSamFFVjJaVzUwS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWMyVnpjMmx2Ym5OMFlYSjBJZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSGNvVmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1Z5QTlJR2t1YVc1d2RYUlRiM1Z5WTJWek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2hsSUQwZ01Ec2dhR1VnUENCd0xteGxibWQwYURzZ2FHVXJLeWxmTG5ObGRDaFhXMmhsWFN3Z2NGdG9aVjBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHaGxNU0E5SURBN0lHaGxNU0E4SUZZdWNtVnRiM1psWkM1c1pXNW5kR2c3SUdobE1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pTQTlJRll1Y21WdGIzWmxaRnRvWlRGZExDQm1aU0E5SUY4dVoyVjBLR3hsS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdabElDWW1JQ2htWlM1a2FYTndZWFJqYUVWMlpXNTBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpWkdselkyOXVibVZqZEdWa0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE9pQnNaUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2tzSUY4dVpHVnNaWFJsS0d4bEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm9aVElnUFNBd095Qm9aVElnUENCV0xtRmtaR1ZrTG14bGJtZDBhRHNnYUdVeUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd4bE1TQTlJRll1WVdSa1pXUmJhR1V5WFN3Z1ptVXhJRDBnWHk1blpYUW9iR1V4S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdabE1TQW1KaUJtWlRFdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nSW1OdmJtNWxZM1JsWkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ2JHVXhDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlHNWxkeUJOTENCRUlEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1ZTaFdMQ0JYTENCb1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNCRkxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWhYTG0xaGRISnBlRmR2Y214a0tTd2dSQzV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2FHVXViV0YwY21sNFYyOXliR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkdVZ1BTQkZMbVJwYzNSaGJtTmxWRzhvUkNrc0lHWmxJRDBnVnk1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG1Wc1pXMWxiblJ6TENCQ1pTQTlJR2hsTG5CeWIycGxZM1JwYjI1TllYUnlhWGd1Wld4bGJXVnVkSE1zSUZrZ1BTQm1aVnN4TkYwZ0x5QW9abVZiTVRCZElDMGdNU2tzSUVObElEMGdabVZiTVRSZElDOGdLR1psV3pFd1hTQXJJREVwTENCNVpTQTlJQ2htWlZzNVhTQXJJREVwSUM4Z1ptVmJOVjBzSUdkbElEMGdLR1psV3psZElDMGdNU2tnTHlCbVpWczFYU3dnZUdVZ1BTQW9abVZiT0YwZ0xTQXhLU0F2SUdabFd6QmRMQ0JQWlNBOUlDaENaVnM0WFNBcklERXBJQzhnUW1WYk1GMHNJRWNnUFNCWklDb2dlR1VzSUdvZ1BTQlpJQ29nVDJVc0lFc2dQU0JzWlNBdklDZ3RlR1VnS3lCUFpTa3NJSFZsSUQwZ1N5QXFJQzE0WlRzS0lDQWdJQ0FnSUNBZ0lDQWdWeTV0WVhSeWFYaFhiM0pzWkM1a1pXTnZiWEJ2YzJVb1ZpNXdiM05wZEdsdmJpd2dWaTV4ZFdGMFpYSnVhVzl1TENCV0xuTmpZV3hsS1N3Z1ZpNTBjbUZ1YzJ4aGRHVllLSFZsS1N3Z1ZpNTBjbUZ1YzJ4aGRHVmFLRXNwTENCV0xtMWhkSEpwZUZkdmNteGtMbU52YlhCdmMyVW9WaTV3YjNOcGRHbHZiaXdnVmk1eGRXRjBaWEp1YVc5dUxDQldMbk5qWVd4bEtTd2dWaTV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlV1WTI5d2VTaFdMbTFoZEhKcGVGZHZjbXhrS1M1cGJuWmxjblFvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhObElEMGdXU0FySUVzc0lGTmxJRDBnUTJVZ0t5QkxMQ0JVWlNBOUlFY2dMU0IxWlN3Z1VHVWdQU0JxSUNzZ0tHeGxJQzBnZFdVcExDQlpaU0E5SUhsbElDb2dRMlVnTHlCVFpTQXFJSE5sTENCRElEMGdaMlVnS2lCRFpTQXZJRk5sSUNvZ2MyVTdDaUFnSUNBZ0lDQWdJQ0FnSUZZdWNISnZhbVZqZEdsdmJrMWhkSEpwZUM1dFlXdGxVR1Z5YzNCbFkzUnBkbVVvVkdVc0lGQmxMQ0JaWlN3Z1F5d2djMlVzSUZObEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdSaWhXTENCWEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUZjZ1BUMDlJRzUxYkd3Z1B5QldMbTFoZEhKcGVGZHZjbXhrTG1OdmNIa29WaTV0WVhSeWFYZ3BJRG9nVmk1dFlYUnlhWGhYYjNKc1pDNXRkV3gwYVhCc2VVMWhkSEpwWTJWektGY3ViV0YwY21sNFYyOXliR1FzSUZZdWJXRjBjbWw0S1N3Z1ZpNXRZWFJ5YVhoWGIzSnNaRWx1ZG1WeWMyVXVZMjl3ZVNoV0xtMWhkSEpwZUZkdmNteGtLUzVwYm5abGNuUW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NTFjR1JoZEdWRFlXMWxjbUVnUFNCbWRXNWpkR2x2YmloV0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNCdWRXeHNLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUV3dWJtVmhjaUE5SUdJdWJtVmhjaUE5SUhrdWJtVmhjaUE5SUZZdWJtVmhjaXdnVEM1bVlYSWdQU0JpTG1aaGNpQTlJSGt1Wm1GeUlEMGdWaTVtWVhJc0lDaEpJQ0U5UFNCTUxtNWxZWElnZkh3Z2F5QWhQVDBnVEM1bVlYSXBJQ1ltSUNocExuVndaR0YwWlZKbGJtUmxjbE4wWVhSbEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmxjSFJvVG1WaGNqb2dUQzV1WldGeUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHVndkR2hHWVhJNklFd3VabUZ5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHBMQ0JKSUQwZ1RDNXVaV0Z5TENCcklEMGdUQzVtWVhJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1Z5QTlJRll1Y0dGeVpXNTBMQ0JvWlNBOUlFd3VZMkZ0WlhKaGN6c0tJQ0FnSUNBZ0lDQWdJQ0FnUmloTUxDQlhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbVpTQTlJREE3SUdabElEd2dhR1V1YkdWdVozUm9PeUJtWlNzcktVWW9hR1ZiWm1WZExDQlhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1RDNXRZWFJ5YVhoWGIzSnNaQzVrWldOdmJYQnZjMlVvVEM1d2IzTnBkR2x2Yml3Z1RDNXhkV0YwWlhKdWFXOXVMQ0JNTG5OallXeGxLU3dnVmk1d2IzTnBkR2x2Ymk1amIzQjVLRXd1Y0c5emFYUnBiMjRwTENCV0xuRjFZWFJsY201cGIyNHVZMjl3ZVNoTUxuRjFZWFJsY201cGIyNHBMQ0JXTG5OallXeGxMbU52Y0hrb1RDNXpZMkZzWlNrc0lGWXViV0YwY21sNExtTnZjSGtvVEM1dFlYUnlhWGdwTENCV0xtMWhkSEpwZUZkdmNteGtMbU52Y0hrb1RDNXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzWlNBOUlGWXVZMmhwYkdSeVpXNDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWm1VeElEMGdNQ3dnUW1VZ1BTQnNaUzVzWlc1bmRHZzdJR1psTVNBOElFSmxPeUJtWlRFckt5bHNaVnRtWlRGZExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDRXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FHVXViR1Z1WjNSb0lEMDlQU0F5SUQ4Z1ZTaE1MQ0I1TENCaUtTQTZJRXd1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQzVqYjNCNUtIa3VjSEp2YW1WamRHbHZiazFoZEhKcGVDazdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJEWVcxbGNtRWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFdzdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NW5aWFJHYjNabFlYUnBiMjRnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIVWdJVDA5SUc1MWJHd3BJSEpsZEhWeWJpQjFMbVpwZUdWa1JtOTJaV0YwYVc5dU93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pDQWhQVDBnYm5Wc2JDa2djbVYwZFhKdUlHUXVabWw0WldSR2IzWmxZWFJwYjI0N0NpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1elpYUkdiM1psWVhScGIyNGdQU0JtZFc1amRHbHZiaWhXS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSFVnSVQwOUlHNTFiR3dnSmlZZ0tIVXVabWw0WldSR2IzWmxZWFJwYjI0Z1BTQldLU3dnWkNBaFBUMGdiblZzYkNBbUppQmtMbVpwZUdWa1JtOTJaV0YwYVc5dUlDRTlQU0IyYjJsa0lEQWdKaVlnS0dRdVptbDRaV1JHYjNabFlYUnBiMjRnUFNCV0tUc0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR3hsZENCUElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdVpTaFdMQ0JYS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaklEMGdWeTVuWlhSV2FXVjNaWEpRYjNObEtHOHBMQ0J0SUQwZ1Z5d2dZeUFoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHeGxJRDBnWXk1MmFXVjNjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1FnSVQwOUlHNTFiR3dnSmlZZ0tHVXVjMlYwVW1WdVpHVnlWR0Z5WjJWMFJuSmhiV1ZpZFdabVpYSW9aeXdnWkM1bWNtRnRaV0oxWm1abGNpa3NJR1V1YzJWMFVtVnVaR1Z5VkdGeVoyVjBLR2NwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQm1aU0E5SUNFeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVXViR1Z1WjNSb0lDRTlQU0JNTG1OaGJXVnlZWE11YkdWdVozUm9JQ1ltSUNoTUxtTmhiV1Z5WVhNdWJHVnVaM1JvSUQwZ01Dd2dabVVnUFNBaE1DazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFSmxJRDBnTURzZ1FtVWdQQ0JzWlM1c1pXNW5kR2c3SUVKbEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlpJRDBnYkdWYlFtVmRMQ0JEWlNBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1FnSVQwOUlHNTFiR3dwSUVObElEMGdaQzVuWlhSV2FXVjNjRzl5ZENoWktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2RsSUQwZ2FDNW5aWFJXYVdWM1UzVmlTVzFoWjJVb2RTd2dXU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRU5sSUQwZ1oyVXVkbWxsZDNCdmNuUXNJRUpsSUQwOVBTQXdJQ1ltSUNobExuTmxkRkpsYm1SbGNsUmhjbWRsZEZSbGVIUjFjbVZ6S0djc0lHZGxMbU52Ykc5eVZHVjRkSFZ5WlN3Z2RTNXBaMjV2Y21WRVpYQjBhRlpoYkhWbGN5QS9JSFp2YVdRZ01DQTZJR2RsTG1SbGNIUm9VM1JsYm1OcGJGUmxlSFIxY21VcExDQmxMbk5sZEZKbGJtUmxjbFJoY21kbGRDaG5LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNVpTQTlJRUZiUW1WZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGxsTG0xaGRISnBlQzVtY205dFFYSnlZWGtvV1M1MGNtRnVjMlp2Y20wdWJXRjBjbWw0S1N3Z2VXVXVjSEp2YW1WamRHbHZiazFoZEhKcGVDNW1jbTl0UVhKeVlYa29XUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRLU3dnZVdVdWRtbGxkM0J2Y25RdWMyVjBLRU5sTG5nc0lFTmxMbmtzSUVObExuZHBaSFJvTENCRFpTNW9aV2xuYUhRcExDQkNaU0E5UFQwZ01DQW1KaUJNTG0xaGRISnBlQzVqYjNCNUtIbGxMbTFoZEhKcGVDa3NJR1psSUQwOVBTQWhNQ0FtSmlCTUxtTmhiV1Z5WVhNdWNIVnphQ2g1WlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2hsSUQwZ2FTNXBibkIxZEZOdmRYSmpaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JHVXhJRDBnTURzZ2JHVXhJRHdnY0M1c1pXNW5kR2c3SUd4bE1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbVpURWdQU0J3VzJ4bE1WMHNJRUpsTVNBOUlHaGxXMnhsTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVpURXVkWEJrWVhSbEtFSmxNU3dnVnl3Z2J5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdUeUFtSmlCUEtGWXNJRmNwTENCdElEMGdiblZzYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2JHVjBJR05sSUQwZ2JtVjNJSEpvT3dvZ0lDQWdJQ0FnSUdObExuTmxkRUZ1YVcxaGRHbHZia3h2YjNBb2JtVXBMQ0IwYUdsekxuTmxkRUZ1YVcxaGRHbHZia3h2YjNBZ1BTQm1kVzVqZEdsdmJpaFdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lFOGdQU0JXT3dvZ0lDQWdJQ0FnSUgwc0lIUm9hWE11WkdsemNHOXpaU0E5SUdaMWJtTjBhVzl1S0NrZ2UzMDdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJRU40S0hNcElIc0tJQ0FnSUdaMWJtTjBhVzl1SUdVb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUdjdVptOW5RMjlzYjNJdWRtRnNkV1V1WTI5d2VTaHdMbU52Ykc5eUtTd2djQzVwYzBadlp5QS9JQ2huTG1adlowNWxZWEl1ZG1Gc2RXVWdQU0J3TG01bFlYSXNJR2N1Wm05blJtRnlMblpoYkhWbElEMGdjQzVtWVhJcElEb2djQzVwYzBadlowVjRjRElnSmlZZ0tHY3VabTluUkdWdWMybDBlUzUyWVd4MVpTQTlJSEF1WkdWdWMybDBlU2s3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCMEtHY3NJSEFzSUY4c0lIa3NJR0lwSUhzS0lDQWdJQ0FnSUNCd0xtbHpUV1Z6YUVKaGMybGpUV0YwWlhKcFlXd2dQeUJ1S0djc0lIQXBJRG9nY0M1cGMwMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXd2dQeUFvYmlobkxDQndLU3dnYkNobkxDQndLU2tnT2lCd0xtbHpUV1Z6YUZSdmIyNU5ZWFJsY21saGJDQS9JQ2h1S0djc0lIQXBMQ0JvS0djc0lIQXBLU0E2SUhBdWFYTk5aWE5vVUdodmJtZE5ZWFJsY21saGJDQS9JQ2h1S0djc0lIQXBMQ0JqS0djc0lIQXBLU0E2SUhBdWFYTk5aWE5vVTNSaGJtUmhjbVJOWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCd0xtbHpUV1Z6YUZCb2VYTnBZMkZzVFdGMFpYSnBZV3dnUHlCa0tHY3NJSEFzSUdJcElEb2dkU2huTENCd0tTa2dPaUJ3TG1selRXVnphRTFoZEdOaGNFMWhkR1Z5YVdGc0lEOGdLRzRvWnl3Z2NDa3NJR1lvWnl3Z2NDa3BJRG9nY0M1cGMwMWxjMmhFWlhCMGFFMWhkR1Z5YVdGc0lEOGdLRzRvWnl3Z2NDa3NJRzBvWnl3Z2NDa3BJRG9nY0M1cGMwMWxjMmhFYVhOMFlXNWpaVTFoZEdWeWFXRnNJRDhnS0c0b1p5d2djQ2tzSUhnb1p5d2djQ2twSURvZ2NDNXBjMDFsYzJoT2IzSnRZV3hOWVhSbGNtbGhiQ0EvSUNodUtHY3NJSEFwTENCMktHY3NJSEFwS1NBNklIQXVhWE5NYVc1bFFtRnphV05OWVhSbGNtbGhiQ0EvSUNocEtHY3NJSEFwTENCd0xtbHpUR2x1WlVSaGMyaGxaRTFoZEdWeWFXRnNJQ1ltSUhJb1p5d2djQ2twSURvZ2NDNXBjMUJ2YVc1MGMwMWhkR1Z5YVdGc0lEOGdieWhuTENCd0xDQmZMQ0I1S1NBNklIQXVhWE5UY0hKcGRHVk5ZWFJsY21saGJDQS9JR0VvWnl3Z2NDa2dPaUJ3TG1selUyaGhaRzkzVFdGMFpYSnBZV3dnUHlBb1p5NWpiMnh2Y2k1MllXeDFaUzVqYjNCNUtIQXVZMjlzYjNJcExDQm5MbTl3WVdOcGRIa3VkbUZzZFdVZ1BTQndMbTl3WVdOcGRIa3BJRG9nY0M1cGMxTm9ZV1JsY2sxaGRHVnlhV0ZzSUNZbUlDaHdMblZ1YVdadmNtMXpUbVZsWkZWd1pHRjBaU0E5SUNFeEtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJRzRvWnl3Z2NDa2dld29nSUNBZ0lDQWdJR2N1YjNCaFkybDBlUzUyWVd4MVpTQTlJSEF1YjNCaFkybDBlU3dnY0M1amIyeHZjaUFtSmlCbkxtUnBabVoxYzJVdWRtRnNkV1V1WTI5d2VTaHdMbU52Ykc5eUtTd2djQzVsYldsemMybDJaU0FtSmlCbkxtVnRhWE56YVhabExuWmhiSFZsTG1OdmNIa29jQzVsYldsemMybDJaU2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9jQzVsYldsemMybDJaVWx1ZEdWdWMybDBlU2tzSUhBdWJXRndJQ1ltSUNobkxtMWhjQzUyWVd4MVpTQTlJSEF1YldGd0tTd2djQzVoYkhCb1lVMWhjQ0FtSmlBb1p5NWhiSEJvWVUxaGNDNTJZV3gxWlNBOUlIQXVZV3h3YUdGTllYQXBMQ0J3TG5Od1pXTjFiR0Z5VFdGd0lDWW1JQ2huTG5Od1pXTjFiR0Z5VFdGd0xuWmhiSFZsSUQwZ2NDNXpjR1ZqZFd4aGNrMWhjQ2tzSUhBdVlXeHdhR0ZVWlhOMElENGdNQ0FtSmlBb1p5NWhiSEJvWVZSbGMzUXVkbUZzZFdVZ1BTQndMbUZzY0doaFZHVnpkQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElGOGdQU0J6TG1kbGRDaHdLUzVsYm5aTllYQTdDaUFnSUNBZ0lDQWdYeUFtSmlBb1p5NWxiblpOWVhBdWRtRnNkV1VnUFNCZkxDQm5MbVpzYVhCRmJuWk5ZWEF1ZG1Gc2RXVWdQU0JmTG1selEzVmlaVlJsZUhSMWNtVWdKaVlnWHk1cGMxSmxibVJsY2xSaGNtZGxkRlJsZUhSMWNtVWdQVDA5SUNFeElEOGdMVEVnT2lBeExDQm5MbkpsWm14bFkzUnBkbWwwZVM1MllXeDFaU0E5SUhBdWNtVm1iR1ZqZEdsMmFYUjVMQ0JuTG1sdmNpNTJZV3gxWlNBOUlIQXVhVzl5TENCbkxuSmxabkpoWTNScGIyNVNZWFJwYnk1MllXeDFaU0E5SUhBdWNtVm1jbUZqZEdsdmJsSmhkR2x2S1N3Z2NDNXNhV2RvZEUxaGNDQW1KaUFvWnk1c2FXZG9kRTFoY0M1MllXeDFaU0E5SUhBdWJHbG5hSFJOWVhBc0lHY3ViR2xuYUhSTllYQkpiblJsYm5OcGRIa3VkbUZzZFdVZ1BTQndMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVLU3dnY0M1aGIwMWhjQ0FtSmlBb1p5NWhiMDFoY0M1MllXeDFaU0E5SUhBdVlXOU5ZWEFzSUdjdVlXOU5ZWEJKYm5SbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG1GdlRXRndTVzUwWlc1emFYUjVLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2VUc0tJQ0FnSUNBZ0lDQndMbTFoY0NBL0lIa2dQU0J3TG0xaGNDQTZJSEF1YzNCbFkzVnNZWEpOWVhBZ1B5QjVJRDBnY0M1emNHVmpkV3hoY2sxaGNDQTZJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDhnZVNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEb2djQzV1YjNKdFlXeE5ZWEFnUHlCNUlEMGdjQzV1YjNKdFlXeE5ZWEFnT2lCd0xtSjFiWEJOWVhBZ1B5QjVJRDBnY0M1aWRXMXdUV0Z3SURvZ2NDNXliM1ZuYUc1bGMzTk5ZWEFnUHlCNUlEMGdjQzV5YjNWbmFHNWxjM05OWVhBZ09pQndMbTFsZEdGc2JtVnpjMDFoY0NBL0lIa2dQU0J3TG0xbGRHRnNibVZ6YzAxaGNDQTZJSEF1WVd4d2FHRk5ZWEFnUHlCNUlEMGdjQzVoYkhCb1lVMWhjQ0E2SUhBdVpXMXBjM05wZG1WTllYQWdQeUI1SUQwZ2NDNWxiV2x6YzJsMlpVMWhjQ0E2SUhBdVkyeGxZWEpqYjJGMFRXRndJRDhnZVNBOUlIQXVZMnhsWVhKamIyRjBUV0Z3SURvZ2NDNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdQeUI1SUQwZ2NDNWpiR1ZoY21OdllYUk9iM0p0WVd4TllYQWdPaUJ3TG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6YzAxaGNDQS9JSGtnUFNCd0xtTnNaV0Z5WTI5aGRGSnZkV2RvYm1WemMwMWhjQ0E2SUhBdWMzQmxZM1ZzWVhKSmJuUmxibk5wZEhsTllYQWdQeUI1SUQwZ2NDNXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVVMWhjQ0E2SUhBdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBL0lIa2dQU0J3TG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnT2lCd0xuUnlZVzV6YldsemMybHZiazFoY0NBL0lIa2dQU0J3TG5SeVlXNXpiV2x6YzJsdmJrMWhjQ0E2SUhBdWRHaHBZMnR1WlhOelRXRndJRDhnZVNBOUlIQXVkR2hwWTJ0dVpYTnpUV0Z3SURvZ2NDNXphR1ZsYmtOdmJHOXlUV0Z3SUQ4Z2VTQTlJSEF1YzJobFpXNURiMnh2Y2sxaGNDQTZJSEF1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnSmlZZ0tIa2dQU0J3TG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3S1N3Z2VTQWhQVDBnZG05cFpDQXdJQ1ltSUNoNUxtbHpWMlZpUjB4U1pXNWtaWEpVWVhKblpYUWdKaVlnS0hrZ1BTQjVMblJsZUhSMWNtVXBMQ0I1TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFQwOUlDRXdJQ1ltSUhrdWRYQmtZWFJsVFdGMGNtbDRLQ2tzSUdjdWRYWlVjbUZ1YzJadmNtMHVkbUZzZFdVdVkyOXdlU2g1TG0xaGRISnBlQ2twT3dvZ0lDQWdJQ0FnSUd4bGRDQmlPd29nSUNBZ0lDQWdJSEF1WVc5TllYQWdQeUJpSUQwZ2NDNWhiMDFoY0NBNklIQXViR2xuYUhSTllYQWdKaVlnS0dJZ1BTQndMbXhwWjJoMFRXRndLU3dnWWlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hpTG1selYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRZ0ppWWdLR0lnUFNCaUxuUmxlSFIxY21VcExDQmlMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JR0l1ZFhCa1lYUmxUV0YwY21sNEtDa3NJR2N1ZFhZeVZISmhibk5tYjNKdExuWmhiSFZsTG1OdmNIa29ZaTV0WVhSeWFYZ3BLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdrb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUdjdVpHbG1ablZ6WlM1MllXeDFaUzVqYjNCNUtIQXVZMjlzYjNJcExDQm5MbTl3WVdOcGRIa3VkbUZzZFdVZ1BTQndMbTl3WVdOcGRIazdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJ5S0djc0lIQXBJSHNLSUNBZ0lDQWdJQ0JuTG1SaGMyaFRhWHBsTG5aaGJIVmxJRDBnY0M1a1lYTm9VMmw2WlN3Z1p5NTBiM1JoYkZOcGVtVXVkbUZzZFdVZ1BTQndMbVJoYzJoVGFYcGxJQ3NnY0M1bllYQlRhWHBsTENCbkxuTmpZV3hsTG5aaGJIVmxJRDBnY0M1elkyRnNaVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUc4b1p5d2djQ3dnWHl3Z2VTa2dld29nSUNBZ0lDQWdJR2N1WkdsbVpuVnpaUzUyWVd4MVpTNWpiM0I1S0hBdVkyOXNiM0lwTENCbkxtOXdZV05wZEhrdWRtRnNkV1VnUFNCd0xtOXdZV05wZEhrc0lHY3VjMmw2WlM1MllXeDFaU0E5SUhBdWMybDZaU0FxSUY4c0lHY3VjMk5oYkdVdWRtRnNkV1VnUFNCNUlDb2dMalVzSUhBdWJXRndJQ1ltSUNobkxtMWhjQzUyWVd4MVpTQTlJSEF1YldGd0tTd2djQzVoYkhCb1lVMWhjQ0FtSmlBb1p5NWhiSEJvWVUxaGNDNTJZV3gxWlNBOUlIQXVZV3h3YUdGTllYQXBMQ0J3TG1Gc2NHaGhWR1Z6ZENBK0lEQWdKaVlnS0djdVlXeHdhR0ZVWlhOMExuWmhiSFZsSUQwZ2NDNWhiSEJvWVZSbGMzUXBPd29nSUNBZ0lDQWdJR3hsZENCaU93b2dJQ0FnSUNBZ0lIQXViV0Z3SUQ4Z1lpQTlJSEF1YldGd0lEb2djQzVoYkhCb1lVMWhjQ0FtSmlBb1lpQTlJSEF1WVd4d2FHRk5ZWEFwTENCaUlDRTlQU0IyYjJsa0lEQWdKaVlnS0dJdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOVBUMGdJVEFnSmlZZ1lpNTFjR1JoZEdWTllYUnlhWGdvS1N3Z1p5NTFkbFJ5WVc1elptOXliUzUyWVd4MVpTNWpiM0I1S0dJdWJXRjBjbWw0S1NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhLR2NzSUhBcElIc0tJQ0FnSUNBZ0lDQm5MbVJwWm1aMWMyVXVkbUZzZFdVdVkyOXdlU2h3TG1OdmJHOXlLU3dnWnk1dmNHRmphWFI1TG5aaGJIVmxJRDBnY0M1dmNHRmphWFI1TENCbkxuSnZkR0YwYVc5dUxuWmhiSFZsSUQwZ2NDNXliM1JoZEdsdmJpd2djQzV0WVhBZ0ppWWdLR2N1YldGd0xuWmhiSFZsSUQwZ2NDNXRZWEFwTENCd0xtRnNjR2hoVFdGd0lDWW1JQ2huTG1Gc2NHaGhUV0Z3TG5aaGJIVmxJRDBnY0M1aGJIQm9ZVTFoY0Nrc0lIQXVZV3h3YUdGVVpYTjBJRDRnTUNBbUppQW9aeTVoYkhCb1lWUmxjM1F1ZG1Gc2RXVWdQU0J3TG1Gc2NHaGhWR1Z6ZENrN0NpQWdJQ0FnSUNBZ2JHVjBJRjg3Q2lBZ0lDQWdJQ0FnY0M1dFlYQWdQeUJmSUQwZ2NDNXRZWEFnT2lCd0xtRnNjR2hoVFdGd0lDWW1JQ2hmSUQwZ2NDNWhiSEJvWVUxaGNDa3NJRjhnSVQwOUlIWnZhV1FnTUNBbUppQW9YeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDA5UFNBaE1DQW1KaUJmTG5Wd1pHRjBaVTFoZEhKcGVDZ3BMQ0JuTG5WMlZISmhibk5tYjNKdExuWmhiSFZsTG1OdmNIa29YeTV0WVhSeWFYZ3BLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUd3b1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUhBdVpXMXBjM05wZG1WTllYQWdKaVlnS0djdVpXMXBjM05wZG1WTllYQXVkbUZzZFdVZ1BTQndMbVZ0YVhOemFYWmxUV0Z3S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHTW9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lHY3VjM0JsWTNWc1lYSXVkbUZzZFdVdVkyOXdlU2h3TG5Od1pXTjFiR0Z5S1N3Z1p5NXphR2x1YVc1bGMzTXVkbUZzZFdVZ1BTQk5ZWFJvTG0xaGVDaHdMbk5vYVc1cGJtVnpjeXdnTVdVdE5Da3NJSEF1WlcxcGMzTnBkbVZOWVhBZ0ppWWdLR2N1WlcxcGMzTnBkbVZOWVhBdWRtRnNkV1VnUFNCd0xtVnRhWE56YVhabFRXRndLU3dnY0M1aWRXMXdUV0Z3SUNZbUlDaG5MbUoxYlhCTllYQXVkbUZzZFdVZ1BTQndMbUoxYlhCTllYQXNJR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJRDBnY0M1aWRXMXdVMk5oYkdVc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ0tHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElDbzlJQzB4S1Nrc0lIQXVibTl5YldGc1RXRndJQ1ltSUNobkxtNXZjbTFoYkUxaGNDNTJZV3gxWlNBOUlIQXVibTl5YldGc1RXRndMQ0JuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG1OdmNIa29jQzV1YjNKdFlXeFRZMkZzWlNrc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNXVaV2RoZEdVb0tTa3NJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUNobkxtUnBjM0JzWVdObGJXVnVkRTFoY0M1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCbkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJUWTJGc1pTd2daeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUdnb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUhBdVozSmhaR2xsYm5STllYQWdKaVlnS0djdVozSmhaR2xsYm5STllYQXVkbUZzZFdVZ1BTQndMbWR5WVdScFpXNTBUV0Z3S1N3Z2NDNWxiV2x6YzJsMlpVMWhjQ0FtSmlBb1p5NWxiV2x6YzJsMlpVMWhjQzUyWVd4MVpTQTlJSEF1WlcxcGMzTnBkbVZOWVhBcExDQndMbUoxYlhCTllYQWdKaVlnS0djdVluVnRjRTFoY0M1MllXeDFaU0E5SUhBdVluVnRjRTFoY0N3Z1p5NWlkVzF3VTJOaGJHVXVkbUZzZFdVZ1BTQndMbUoxYlhCVFkyRnNaU3dnY0M1emFXUmxJRDA5UFNCcGRDQW1KaUFvWnk1aWRXMXdVMk5oYkdVdWRtRnNkV1VnS2owZ0xURXBLU3dnY0M1dWIzSnRZV3hOWVhBZ0ppWWdLR2N1Ym05eWJXRnNUV0Z3TG5aaGJIVmxJRDBnY0M1dWIzSnRZV3hOWVhBc0lHY3VibTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVZMjl3ZVNod0xtNXZjbTFoYkZOallXeGxLU3dnY0M1emFXUmxJRDA5UFNCcGRDQW1KaUJuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG01bFoyRjBaU2dwS1N3Z2NDNWthWE53YkdGalpXMWxiblJOWVhBZ0ppWWdLR2N1WkdsemNHeGhZMlZ0Wlc1MFRXRndMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5STllYQXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1V1ZG1Gc2RXVWdQU0J3TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCbkxtUnBjM0JzWVdObGJXVnVkRUpwWVhNdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRUpwWVhNcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdkU2huTENCd0tTQjdDaUFnSUNBZ0lDQWdaeTV5YjNWbmFHNWxjM011ZG1Gc2RXVWdQU0J3TG5KdmRXZG9ibVZ6Y3l3Z1p5NXRaWFJoYkc1bGMzTXVkbUZzZFdVZ1BTQndMbTFsZEdGc2JtVnpjeXdnY0M1eWIzVm5hRzVsYzNOTllYQWdKaVlnS0djdWNtOTFaMmh1WlhOelRXRndMblpoYkhWbElEMGdjQzV5YjNWbmFHNWxjM05OWVhBcExDQndMbTFsZEdGc2JtVnpjMDFoY0NBbUppQW9aeTV0WlhSaGJHNWxjM05OWVhBdWRtRnNkV1VnUFNCd0xtMWxkR0ZzYm1WemMwMWhjQ2tzSUhBdVpXMXBjM05wZG1WTllYQWdKaVlnS0djdVpXMXBjM05wZG1WTllYQXVkbUZzZFdVZ1BTQndMbVZ0YVhOemFYWmxUV0Z3S1N3Z2NDNWlkVzF3VFdGd0lDWW1JQ2huTG1KMWJYQk5ZWEF1ZG1Gc2RXVWdQU0J3TG1KMWJYQk5ZWEFzSUdjdVluVnRjRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWlkVzF3VTJOaGJHVXNJSEF1YzJsa1pTQTlQVDBnYVhRZ0ppWWdLR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJQ285SUMweEtTa3NJSEF1Ym05eWJXRnNUV0Z3SUNZbUlDaG5MbTV2Y20xaGJFMWhjQzUyWVd4MVpTQTlJSEF1Ym05eWJXRnNUV0Z3TENCbkxtNXZjbTFoYkZOallXeGxMblpoYkhWbExtTnZjSGtvY0M1dWIzSnRZV3hUWTJGc1pTa3NJSEF1YzJsa1pTQTlQVDBnYVhRZ0ppWWdaeTV1YjNKdFlXeFRZMkZzWlM1MllXeDFaUzV1WldkaGRHVW9LU2tzSUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNZbUlDaG5MbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0xDQm5MbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnWnk1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6S1N3Z2N5NW5aWFFvY0NrdVpXNTJUV0Z3SUNZbUlDaG5MbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTNTJZV3gxWlNBOUlIQXVaVzUyVFdGd1NXNTBaVzV6YVhSNUtUc0tJQ0FnSUgwS0lDQWdJR1oxYm1OMGFXOXVJR1FvWnl3Z2NDd2dYeWtnZXdvZ0lDQWdJQ0FnSUhVb1p5d2djQ2tzSUdjdWFXOXlMblpoYkhWbElEMGdjQzVwYjNJc0lIQXVjMmhsWlc0Z1BpQXdJQ1ltSUNobkxuTm9aV1Z1UTI5c2IzSXVkbUZzZFdVdVkyOXdlU2h3TG5Ob1pXVnVRMjlzYjNJcExtMTFiSFJwY0d4NVUyTmhiR0Z5S0hBdWMyaGxaVzRwTENCbkxuTm9aV1Z1VW05MVoyaHVaWE56TG5aaGJIVmxJRDBnY0M1emFHVmxibEp2ZFdkb2JtVnpjeXdnY0M1emFHVmxia052Ykc5eVRXRndJQ1ltSUNobkxuTm9aV1Z1UTI5c2IzSk5ZWEF1ZG1Gc2RXVWdQU0J3TG5Ob1pXVnVRMjlzYjNKTllYQXBMQ0J3TG5Ob1pXVnVVbTkxWjJodVpYTnpUV0Z3SUNZbUlDaG5Mbk5vWldWdVVtOTFaMmh1WlhOelRXRndMblpoYkhWbElEMGdjQzV6YUdWbGJsSnZkV2RvYm1WemMwMWhjQ2twTENCd0xtTnNaV0Z5WTI5aGRDQStJREFnSmlZZ0tHY3VZMnhsWVhKamIyRjBMblpoYkhWbElEMGdjQzVqYkdWaGNtTnZZWFFzSUdjdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOekxuWmhiSFZsSUQwZ2NDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTXNJSEF1WTJ4bFlYSmpiMkYwVFdGd0lDWW1JQ2huTG1Oc1pXRnlZMjloZEUxaGNDNTJZV3gxWlNBOUlIQXVZMnhsWVhKamIyRjBUV0Z3S1N3Z2NDNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnSmlZZ0tHY3VZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3TG5aaGJIVmxJRDBnY0M1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQXBMQ0J3TG1Oc1pXRnlZMjloZEU1dmNtMWhiRTFoY0NBbUppQW9aeTVqYkdWaGNtTnZZWFJPYjNKdFlXeFRZMkZzWlM1MllXeDFaUzVqYjNCNUtIQXVZMnhsWVhKamIyRjBUbTl5YldGc1UyTmhiR1VwTENCbkxtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDNTJZV3gxWlNBOUlIQXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndMQ0J3TG5OcFpHVWdQVDA5SUdsMElDWW1JR2N1WTJ4bFlYSmpiMkYwVG05eWJXRnNVMk5oYkdVdWRtRnNkV1V1Ym1WbllYUmxLQ2twS1N3Z2NDNTBjbUZ1YzIxcGMzTnBiMjRnUGlBd0lDWW1JQ2huTG5SeVlXNXpiV2x6YzJsdmJpNTJZV3gxWlNBOUlIQXVkSEpoYm5OdGFYTnphVzl1TENCbkxuUnlZVzV6YldsemMybHZibE5oYlhCc1pYSk5ZWEF1ZG1Gc2RXVWdQU0JmTG5SbGVIUjFjbVVzSUdjdWRISmhibk50YVhOemFXOXVVMkZ0Y0d4bGNsTnBlbVV1ZG1Gc2RXVXVjMlYwS0Y4dWQybGtkR2dzSUY4dWFHVnBaMmgwS1N3Z2NDNTBjbUZ1YzIxcGMzTnBiMjVOWVhBZ0ppWWdLR2N1ZEhKaGJuTnRhWE56YVc5dVRXRndMblpoYkhWbElEMGdjQzUwY21GdWMyMXBjM05wYjI1TllYQXBMQ0JuTG5Sb2FXTnJibVZ6Y3k1MllXeDFaU0E5SUhBdWRHaHBZMnR1WlhOekxDQndMblJvYVdOcmJtVnpjMDFoY0NBbUppQW9aeTUwYUdsamEyNWxjM05OWVhBdWRtRnNkV1VnUFNCd0xuUm9hV05yYm1WemMwMWhjQ2tzSUdjdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTNTJZV3gxWlNBOUlIQXVZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU3dnWnk1aGRIUmxiblZoZEdsdmJrTnZiRzl5TG5aaGJIVmxMbU52Y0hrb2NDNWhkSFJsYm5WaGRHbHZia052Ykc5eUtTa3NJR2N1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGt1ZG1Gc2RXVWdQU0J3TG5Od1pXTjFiR0Z5U1c1MFpXNXphWFI1TENCbkxuTndaV04xYkdGeVEyOXNiM0l1ZG1Gc2RXVXVZMjl3ZVNod0xuTndaV04xYkdGeVEyOXNiM0lwTENCd0xuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJQ1ltSUNobkxuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndMblpoYkhWbElEMGdjQzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlVTFoY0Nrc0lIQXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDQW1KaUFvWnk1emNHVmpkV3hoY2tOdmJHOXlUV0Z3TG5aaGJIVmxJRDBnY0M1emNHVmpkV3hoY2tOdmJHOXlUV0Z3S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHWW9aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXViV0YwWTJGd0lDWW1JQ2huTG0xaGRHTmhjQzUyWVd4MVpTQTlJSEF1YldGMFkyRndLU3dnY0M1aWRXMXdUV0Z3SUNZbUlDaG5MbUoxYlhCTllYQXVkbUZzZFdVZ1BTQndMbUoxYlhCTllYQXNJR2N1WW5WdGNGTmpZV3hsTG5aaGJIVmxJRDBnY0M1aWRXMXdVMk5oYkdVc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ0tHY3VZblZ0Y0ZOallXeGxMblpoYkhWbElDbzlJQzB4S1Nrc0lIQXVibTl5YldGc1RXRndJQ1ltSUNobkxtNXZjbTFoYkUxaGNDNTJZV3gxWlNBOUlIQXVibTl5YldGc1RXRndMQ0JuTG01dmNtMWhiRk5qWVd4bExuWmhiSFZsTG1OdmNIa29jQzV1YjNKdFlXeFRZMkZzWlNrc0lIQXVjMmxrWlNBOVBUMGdhWFFnSmlZZ1p5NXViM0p0WVd4VFkyRnNaUzUyWVd4MVpTNXVaV2RoZEdVb0tTa3NJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndJQ1ltSUNobkxtUnBjM0JzWVdObGJXVnVkRTFoY0M1MllXeDFaU0E5SUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3TENCbkxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJUWTJGc1pTd2daeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUcwb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUhBdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUNZbUlDaG5MbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0xDQm5MbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMblpoYkhWbElEMGdjQzVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU3dnWnk1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6TG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIZ29aeXdnY0NrZ2V3b2dJQ0FnSUNBZ0lIQXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDWW1JQ2huTG1ScGMzQnNZV05sYldWdWRFMWhjQzUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFRXRndMQ0JuTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTG5aaGJIVmxJRDBnY0M1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlN3Z1p5NWthWE53YkdGalpXMWxiblJDYVdGekxuWmhiSFZsSUQwZ2NDNWthWE53YkdGalpXMWxiblJDYVdGektTd2daeTV5WldabGNtVnVZMlZRYjNOcGRHbHZiaTUyWVd4MVpTNWpiM0I1S0hBdWNtVm1aWEpsYm1ObFVHOXphWFJwYjI0cExDQm5MbTVsWVhKRWFYTjBZVzVqWlM1MllXeDFaU0E5SUhBdWJtVmhja1JwYzNSaGJtTmxMQ0JuTG1aaGNrUnBjM1JoYm1ObExuWmhiSFZsSUQwZ2NDNW1ZWEpFYVhOMFlXNWpaVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUhZb1p5d2djQ2tnZXdvZ0lDQWdJQ0FnSUhBdVluVnRjRTFoY0NBbUppQW9aeTVpZFcxd1RXRndMblpoYkhWbElEMGdjQzVpZFcxd1RXRndMQ0JuTG1KMWJYQlRZMkZzWlM1MllXeDFaU0E5SUhBdVluVnRjRk5qWVd4bExDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlDaG5MbUoxYlhCVFkyRnNaUzUyWVd4MVpTQXFQU0F0TVNrcExDQndMbTV2Y20xaGJFMWhjQ0FtSmlBb1p5NXViM0p0WVd4TllYQXVkbUZzZFdVZ1BTQndMbTV2Y20xaGJFMWhjQ3dnWnk1dWIzSnRZV3hUWTJGc1pTNTJZV3gxWlM1amIzQjVLSEF1Ym05eWJXRnNVMk5oYkdVcExDQndMbk5wWkdVZ1BUMDlJR2wwSUNZbUlHY3VibTl5YldGc1UyTmhiR1V1ZG1Gc2RXVXVibVZuWVhSbEtDa3BMQ0J3TG1ScGMzQnNZV05sYldWdWRFMWhjQ0FtSmlBb1p5NWthWE53YkdGalpXMWxiblJOWVhBdWRtRnNkV1VnUFNCd0xtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z1p5NWthWE53YkdGalpXMWxiblJUWTJGc1pTNTJZV3gxWlNBOUlIQXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVXNJR2N1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeTUyWVd4MVpTQTlJSEF1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeWs3Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnZXdvZ0lDQWdJQ0FnSUhKbFpuSmxjMmhHYjJkVmJtbG1iM0p0Y3pvZ1pTd0tJQ0FnSUNBZ0lDQnlaV1p5WlhOb1RXRjBaWEpwWVd4VmJtbG1iM0p0Y3pvZ2RBb2dJQ0FnZlRzS2ZRcG1kVzVqZEdsdmJpQk1lQ2dwSUhzS0lDQWdJR3hsZENCeklEMGdjWE1vSW1OaGJuWmhjeUlwT3dvZ0lDQWdjbVYwZFhKdUlITXVjM1I1YkdVdVpHbHpjR3hoZVNBOUlDSmliRzlqYXlJc0lITTdDbjBLWm5WdVkzUnBiMjRnY1dVb2N5QTlJSHQ5S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJSE11WTJGdWRtRnpJQ0U5UFNCMmIybGtJREFnUHlCekxtTmhiblpoY3lBNklFeDRLQ2tzSUhRZ1BTQnpMbU52Ym5SbGVIUWdJVDA5SUhadmFXUWdNQ0EvSUhNdVkyOXVkR1Y0ZENBNklHNTFiR3dzSUc0Z1BTQnpMbUZzY0doaElDRTlQU0IyYjJsa0lEQWdQeUJ6TG1Gc2NHaGhJRG9nSVRFc0lHa2dQU0J6TG1SbGNIUm9JQ0U5UFNCMmIybGtJREFnUHlCekxtUmxjSFJvSURvZ0lUQXNJSElnUFNCekxuTjBaVzVqYVd3Z0lUMDlJSFp2YVdRZ01DQS9JSE11YzNSbGJtTnBiQ0E2SUNFd0xDQnZJRDBnY3k1aGJuUnBZV3hwWVhNZ0lUMDlJSFp2YVdRZ01DQS9JSE11WVc1MGFXRnNhV0Z6SURvZ0lURXNJR0VnUFNCekxuQnlaVzExYkhScGNHeHBaV1JCYkhCb1lTQWhQVDBnZG05cFpDQXdJRDhnY3k1d2NtVnRkV3gwYVhCc2FXVmtRV3h3YUdFZ09pQWhNQ3dnYkNBOUlITXVjSEpsYzJWeWRtVkVjbUYzYVc1blFuVm1abVZ5SUNFOVBTQjJiMmxrSURBZ1B5QnpMbkJ5WlhObGNuWmxSSEpoZDJsdVowSjFabVpsY2lBNklDRXhMQ0JqSUQwZ2N5NXdiM2RsY2xCeVpXWmxjbVZ1WTJVZ0lUMDlJSFp2YVdRZ01DQS9JSE11Y0c5M1pYSlFjbVZtWlhKbGJtTmxJRG9nSW1SbFptRjFiSFFpTENCb0lEMGdjeTVtWVdsc1NXWk5ZV3B2Y2xCbGNtWnZjbTFoYm1ObFEyRjJaV0YwSUNFOVBTQjJiMmxrSURBZ1B5QnpMbVpoYVd4SlprMWhhbTl5VUdWeVptOXliV0Z1WTJWRFlYWmxZWFFnT2lBaE1Td2dkU0E5SUc1MWJHd3NJR1FnUFNCdWRXeHNMQ0JtSUQwZ1cxMHNJRzBnUFNCYlhUc0tJQ0FnSUhSb2FYTXVaRzl0Uld4bGJXVnVkQ0E5SUdVc0lIUm9hWE11WkdWaWRXY2dQU0I3Q2lBZ0lDQWdJQ0FnWTJobFkydFRhR0ZrWlhKRmNuSnZjbk02SUNFd0NpQWdJQ0I5TENCMGFHbHpMbUYxZEc5RGJHVmhjaUE5SUNFd0xDQjBhR2x6TG1GMWRHOURiR1ZoY2tOdmJHOXlJRDBnSVRBc0lIUm9hWE11WVhWMGIwTnNaV0Z5UkdWd2RHZ2dQU0FoTUN3Z2RHaHBjeTVoZFhSdlEyeGxZWEpUZEdWdVkybHNJRDBnSVRBc0lIUm9hWE11YzI5eWRFOWlhbVZqZEhNZ1BTQWhNQ3dnZEdocGN5NWpiR2x3Y0dsdVoxQnNZVzVsY3lBOUlGdGRMQ0IwYUdsekxteHZZMkZzUTJ4cGNIQnBibWRGYm1GaWJHVmtJRDBnSVRFc0lIUm9hWE11YjNWMGNIVjBSVzVqYjJScGJtY2dQU0JPZEN3Z2RHaHBjeTV3YUhsemFXTmhiR3g1UTI5eWNtVmpkRXhwWjJoMGN5QTlJQ0V4TENCMGFHbHpMblJ2Ym1WTllYQndhVzVuSUQwZ1gyNHNJSFJvYVhNdWRHOXVaVTFoY0hCcGJtZEZlSEJ2YzNWeVpTQTlJREU3Q2lBZ0lDQnNaWFFnZUNBOUlIUm9hWE1zSUhZZ1BTQWhNU3dnWnlBOUlEQXNJSEFnUFNBd0xDQmZJRDBnYm5Wc2JDd2dlU0E5SUMweExDQmlJRDBnYm5Wc2JDd2dRU0E5SUc1bGR5QldaU3dnVENBOUlHNWxkeUJXWlN3Z1NTQTlJRzUxYkd3c0lHc2dQU0JsTG5kcFpIUm9MQ0JDSUQwZ1pTNW9aV2xuYUhRc0lGQWdQU0F4TENCM0lEMGdiblZzYkN3Z1JTQTlJRzUxYkd3c0lFUWdQU0J1WlhjZ1ZtVW9NQ3dnTUN3Z2F5d2dRaWtzSUZVZ1BTQnVaWGNnVm1Vb01Dd2dNQ3dnYXl3Z1Fpa3NJRVlnUFNBaE1Td2dUeUE5SUZ0ZExDQnVaU0E5SUc1bGR5QkVjaXdnWTJVZ1BTQWhNU3dnVmlBOUlDRXhMQ0JYSUQwZ2JuVnNiQ3dnYUdVZ1BTQnVaWGNnY0dVc0lHeGxJRDBnYm1WM0lFMHNJR1psSUQwZ2V3b2dJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ1ptOW5PaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lHVnVkbWx5YjI1dFpXNTBPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lHOTJaWEp5YVdSbFRXRjBaWEpwWVd3NklHNTFiR3dzQ2lBZ0lDQWdJQ0FnYVhOVFkyVnVaVG9nSVRBS0lDQWdJSDA3Q2lBZ0lDQm1kVzVqZEdsdmJpQkNaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWHlBOVBUMGdiblZzYkNBL0lGQWdPaUF4T3dvZ0lDQWdmUW9nSUNBZ2JHVjBJRmtnUFNCME93b2dJQ0FnWm5WdVkzUnBiMjRnUTJVb1V5d2dUaWtnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU0NBOUlEQTdJRWdnUENCVExteGxibWQwYURzZ1NDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSG9nUFNCVFcwaGRMQ0J4SUQwZ1pTNW5aWFJEYjI1MFpYaDBLSG9zSUU0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NTQWhQVDBnYm5Wc2JDa2djbVYwZFhKdUlIRTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVkV3hzT3dvZ0lDQWdmUW9nSUNBZ2RISjVJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1V5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1lXeHdhR0U2SUc0c0NpQWdJQ0FnSUNBZ0lDQWdJR1JsY0hSb09pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCemRHVnVZMmxzT2lCeUxBb2dJQ0FnSUNBZ0lDQWdJQ0JoYm5ScFlXeHBZWE02SUc4c0NpQWdJQ0FnSUNBZ0lDQWdJSEJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZVG9nWVN3S0lDQWdJQ0FnSUNBZ0lDQWdjSEpsYzJWeWRtVkVjbUYzYVc1blFuVm1abVZ5T2lCc0xBb2dJQ0FnSUNBZ0lDQWdJQ0J3YjNkbGNsQnlaV1psY21WdVkyVTZJR01zQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhhV3hKWmsxaGFtOXlVR1Z5Wm05eWJXRnVZMlZEWVhabFlYUTZJR2dLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUdsbUlDZ2ljMlYwUVhSMGNtbGlkWFJsSWlCcGJpQmxJQ1ltSUdVdWMyVjBRWFIwY21saWRYUmxLQ0prWVhSaExXVnVaMmx1WlNJc0lHQjBhSEpsWlM1cWN5QnlKSHRqWVgxZ0tTd2daUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0ozWldKbmJHTnZiblJsZUhSc2IzTjBJaXdnUldVc0lDRXhLU3dnWlM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKM1pXSm5iR052Ym5SbGVIUnlaWE4wYjNKbFpDSXNJRzFsTENBaE1Ta3NJRmtnUFQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUU0Z1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWlkMlZpWjJ3eUlpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSjNaV0puYkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBaVpYaHdaWEpwYldWdWRHRnNMWGRsWW1kc0lnb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZUM1cGMxZGxZa2RNTVZKbGJtUmxjbVZ5SUQwOVBTQWhNQ0FtSmlCT0xuTm9hV1owS0Nrc0lGa2dQU0JEWlNoT0xDQlRLU3dnV1NBOVBUMGdiblZzYkNrZ2RHaHliM2NnUTJVb1Rpa2dQeUJ1WlhjZ1JYSnliM0lvSWtWeWNtOXlJR055WldGMGFXNW5JRmRsWWtkTUlHTnZiblJsZUhRZ2QybDBhQ0I1YjNWeUlITmxiR1ZqZEdWa0lHRjBkSEpwWW5WMFpYTXVJaWtnT2lCdVpYY2dSWEp5YjNJb0lrVnljbTl5SUdOeVpXRjBhVzVuSUZkbFlrZE1JR052Ym5SbGVIUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUZrdVoyVjBVMmhoWkdWeVVISmxZMmx6YVc5dVJtOXliV0YwSUQwOVBTQjJiMmxrSURBZ0ppWWdLRmt1WjJWMFUyaGhaR1Z5VUhKbFkybHphVzl1Um05eWJXRjBJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlZVzVuWlUxcGJqb2dNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpoYm1kbFRXRjRPaUF4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0hKbFkybHphVzl1T2lBeENpQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5SUdOaGRHTm9JQ2hUTVNrZ2V3b2dJQ0FnSUNBZ0lIUm9jbTkzSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUNJZ0t5QlRNUzV0WlhOellXZGxLU3dnVXpFN0NpQWdJQ0I5Q2lBZ0lDQnNaWFFnZVdVc0lHZGxMQ0I0WlN3Z1QyVXNJRWNzSUdvc0lFc3NJSFZsTENCelpTd2dVMlVzSUZSbExDQlFaU3dnV1dVc0lFTXNJRlFzSUVvc0lDUXNJSEpsTENCYUxDQk5aU3dnZG1Vc0lIUmxMQ0JTT3dvZ0lDQWdablZ1WTNScGIyNGdaV1VvS1NCN0NpQWdJQ0FnSUNBZ2VXVWdQU0J1WlhjZ1VXMG9XU2tzSUdkbElEMGdibVYzSUZodEtGa3NJSGxsTENCektTd2dlV1V1YVc1cGRDaG5aU2tzSUhSbElEMGdibVYzSUVWNEtGa3NJSGxsTENCblpTa3NJSGhsSUQwZ2JtVjNJRk40S0Zrc0lIbGxMQ0JuWlNrc0lFOWJNRjBnUFNBeE1ESTVMQ0JQWlNBOUlHNWxkeUIwWnloWktTd2dSeUE5SUc1bGR5Qm1lQ3dnYWlBOUlHNWxkeUJVZUNoWkxDQjVaU3dnZUdVc0lFY3NJR2RsTENCMFpTd2dUMlVwTENCTElEMGdibVYzSUZsdEtIZ3BMQ0IxWlNBOUlHNWxkeUJxYlNoNEtTd2djMlVnUFNCdVpYY2daMllvV1N3Z1oyVXBMQ0JTSUQwZ2JtVjNJRmR0S0Zrc0lIbGxMQ0J6WlN3Z1oyVXBMQ0JUWlNBOUlHNWxkeUJMYlNoWkxDQnpaU3dnVDJVc0lGSXBMQ0JVWlNBOUlHNWxkeUJ6WnloWkxDQlRaU3dnYzJVc0lFOWxLU3dnV2lBOUlHNWxkeUJ5WnloWkxDQm5aU3dnYWlrc0lFb2dQU0J1WlhjZ1NtMG9SeWtzSUZCbElEMGdibVYzSUdSNEtIZ3NJRXNzSUhWbExDQjVaU3dnWjJVc0lGSXNJRW9wTENCWlpTQTlJRzVsZHlCRGVDaEhLU3dnUXlBOUlHNWxkeUJ0ZUN3Z1ZDQTlJRzVsZHlCTmVDaDVaU3dnWjJVcExDQnlaU0E5SUc1bGR5QldiU2g0TENCTExDQjRaU3dnVkdVc0lHRXBMQ0FrSUQwZ2JtVjNJSGxvS0hnc0lGUmxMQ0JuWlNrc0lFMWxJRDBnYm1WM0lIRnRLRmtzSUhsbExDQlBaU3dnWjJVcExDQjJaU0E5SUc1bGR5QmxaeWhaTENCNVpTd2dUMlVzSUdkbEtTd2dUMlV1Y0hKdlozSmhiWE1nUFNCUVpTNXdjbTluY21GdGN5d2dlQzVqWVhCaFltbHNhWFJwWlhNZ1BTQm5aU3dnZUM1bGVIUmxibk5wYjI1eklEMGdlV1VzSUhndWNISnZjR1Z5ZEdsbGN5QTlJRWNzSUhndWNtVnVaR1Z5VEdsemRITWdQU0JETENCNExuTm9ZV1J2ZDAxaGNDQTlJQ1FzSUhndWMzUmhkR1VnUFNCNFpTd2dlQzVwYm1adklEMGdUMlU3Q2lBZ0lDQjlDaUFnSUNCbFpTZ3BPd29nSUNBZ2JHVjBJRkVnUFNCdVpYY2dkbWdvZUN3Z1dTazdDaUFnSUNCMGFHbHpMbmh5SUQwZ1VTd2dkR2hwY3k1blpYUkRiMjUwWlhoMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRms3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRU52Ym5SbGVIUkJkSFJ5YVdKMWRHVnpJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZrdVoyVjBRMjl1ZEdWNGRFRjBkSEpwWW5WMFpYTW9LVHNLSUNBZ0lIMHNJSFJvYVhNdVptOXlZMlZEYjI1MFpYaDBURzl6Y3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJR3hsZENCVElEMGdlV1V1WjJWMEtDSlhSVUpIVEY5c2IzTmxYMk52Ym5SbGVIUWlLVHNLSUNBZ0lDQWdJQ0JUSUNZbUlGTXViRzl6WlVOdmJuUmxlSFFvS1RzS0lDQWdJSDBzSUhSb2FYTXVabTl5WTJWRGIyNTBaWGgwVW1WemRHOXlaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JUSUQwZ2VXVXVaMlYwS0NKWFJVSkhURjlzYjNObFgyTnZiblJsZUhRaUtUc0tJQ0FnSUNBZ0lDQlRJQ1ltSUZNdWNtVnpkRzl5WlVOdmJuUmxlSFFvS1RzS0lDQWdJSDBzSUhSb2FYTXVaMlYwVUdsNFpXeFNZWFJwYnlBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlFPd29nSUNBZ2ZTd2dkR2hwY3k1elpYUlFhWGhsYkZKaGRHbHZJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lGTWdJVDA5SUhadmFXUWdNQ0FtSmlBb1VDQTlJRk1zSUhSb2FYTXVjMlYwVTJsNlpTaHJMQ0JDTENBaE1Ta3BPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUlRhWHBsSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbk5sZENockxDQkNLVHNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBVMmw2WlNBOUlHWjFibU4wYVc5dUtGTXNJRTRzSUVncElIc0tJQ0FnSUNBZ0lDQnBaaUFvVVM1cGMxQnlaWE5sYm5ScGJtY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lCRFlXNG5kQ0JqYUdGdVoyVWdjMmw2WlNCM2FHbHNaU0JXVWlCa1pYWnBZMlVnYVhNZ2NISmxjMlZ1ZEdsdVp5NGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcklEMGdVeXdnUWlBOUlFNHNJR1V1ZDJsa2RHZ2dQU0JOWVhSb0xtWnNiMjl5S0ZNZ0tpQlFLU3dnWlM1b1pXbG5hSFFnUFNCTllYUm9MbVpzYjI5eUtFNGdLaUJRS1N3Z1NDQWhQVDBnSVRFZ0ppWWdLR1V1YzNSNWJHVXVkMmxrZEdnZ1BTQlRJQ3NnSW5CNElpd2daUzV6ZEhsc1pTNW9aV2xuYUhRZ1BTQk9JQ3NnSW5CNElpa3NJSFJvYVhNdWMyVjBWbWxsZDNCdmNuUW9NQ3dnTUN3Z1V5d2dUaWs3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRVJ5WVhkcGJtZENkV1ptWlhKVGFYcGxJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVExuTmxkQ2hySUNvZ1VDd2dRaUFxSUZBcExtWnNiMjl5S0NrN0NpQWdJQ0I5TENCMGFHbHpMbk5sZEVSeVlYZHBibWRDZFdabVpYSlRhWHBsSUQwZ1puVnVZM1JwYjI0b1V5d2dUaXdnU0NrZ2V3b2dJQ0FnSUNBZ0lHc2dQU0JUTENCQ0lEMGdUaXdnVUNBOUlFZ3NJR1V1ZDJsa2RHZ2dQU0JOWVhSb0xtWnNiMjl5S0ZNZ0tpQklLU3dnWlM1b1pXbG5hSFFnUFNCTllYUm9MbVpzYjI5eUtFNGdLaUJJS1N3Z2RHaHBjeTV6WlhSV2FXVjNjRzl5ZENnd0xDQXdMQ0JUTENCT0tUc0tJQ0FnSUgwc0lIUm9hWE11WjJWMFEzVnljbVZ1ZEZacFpYZHdiM0owSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQlRMbU52Y0hrb1FTazdDaUFnSUNCOUxDQjBhR2x6TG1kbGRGWnBaWGR3YjNKMElEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUTG1OdmNIa29SQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRlpwWlhkd2IzSjBJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpd2dTQ3dnZWlrZ2V3b2dJQ0FnSUNBZ0lGTXVhWE5XWldOMGIzSTBJRDhnUkM1elpYUW9VeTU0TENCVExua3NJRk11ZWl3Z1V5NTNLU0E2SUVRdWMyVjBLRk1zSUU0c0lFZ3NJSG9wTENCNFpTNTJhV1YzY0c5eWRDaEJMbU52Y0hrb1JDa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1VDa3VabXh2YjNJb0tTazdDaUFnSUNCOUxDQjBhR2x6TG1kbGRGTmphWE56YjNJZ1BTQm1kVzVqZEdsdmJpaFRLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRk11WTI5d2VTaFZLVHNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBVMk5wYzNOdmNpQTlJR1oxYm1OMGFXOXVLRk1zSUU0c0lFZ3NJSG9wSUhzS0lDQWdJQ0FnSUNCVExtbHpWbVZqZEc5eU5DQS9JRlV1YzJWMEtGTXVlQ3dnVXk1NUxDQlRMbm9zSUZNdWR5a2dPaUJWTG5ObGRDaFRMQ0JPTENCSUxDQjZLU3dnZUdVdWMyTnBjM052Y2loTUxtTnZjSGtvVlNrdWJYVnNkR2x3YkhsVFkyRnNZWElvVUNrdVpteHZiM0lvS1NrN0NpQWdJQ0I5TENCMGFHbHpMbWRsZEZOamFYTnpiM0pVWlhOMElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRVk3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRk5qYVhOemIzSlVaWE4wSUQwZ1puVnVZM1JwYjI0b1V5a2dld29nSUNBZ0lDQWdJSGhsTG5ObGRGTmphWE56YjNKVVpYTjBLRVlnUFNCVEtUc0tJQ0FnSUgwc0lIUm9hWE11YzJWMFQzQmhjWFZsVTI5eWRDQTlJR1oxYm1OMGFXOXVLRk1wSUhzS0lDQWdJQ0FnSUNCM0lEMGdVenNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBWSEpoYm5Od1lYSmxiblJUYjNKMElEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUVVZ1BTQlRPd29nSUNBZ2ZTd2dkR2hwY3k1blpYUkRiR1ZoY2tOdmJHOXlJRDBnWm5WdVkzUnBiMjRvVXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVExtTnZjSGtvY21VdVoyVjBRMnhsWVhKRGIyeHZjaWdwS1RzS0lDQWdJSDBzSUhSb2FYTXVjMlYwUTJ4bFlYSkRiMnh2Y2lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsTG5ObGRFTnNaV0Z5UTI5c2IzSXVZWEJ3Ykhrb2NtVXNJR0Z5WjNWdFpXNTBjeWs3Q2lBZ0lDQjlMQ0IwYUdsekxtZGxkRU5zWldGeVFXeHdhR0VnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NtVXVaMlYwUTJ4bFlYSkJiSEJvWVNncE93b2dJQ0FnZlN3Z2RHaHBjeTV6WlhSRGJHVmhja0ZzY0doaElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnY21VdWMyVjBRMnhsWVhKQmJIQm9ZUzVoY0hCc2VTaHlaU3dnWVhKbmRXMWxiblJ6S1RzS0lDQWdJSDBzSUhSb2FYTXVZMnhsWVhJZ1BTQm1kVzVqZEdsdmJpaFRMQ0JPTENCSUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhvZ1BTQXdPd29nSUNBZ0lDQWdJQ2hUSUQwOVBTQjJiMmxrSURBZ2ZId2dVeWtnSmlZZ0tIb2dmRDBnTVRZek9EUXBMQ0FvVGlBOVBUMGdkbTlwWkNBd0lIeDhJRTRwSUNZbUlDaDZJSHc5SURJMU5pa3NJQ2hJSUQwOVBTQjJiMmxrSURBZ2ZId2dTQ2tnSmlZZ0tIb2dmRDBnTVRBeU5Da3NJRmt1WTJ4bFlYSW9laWs3Q2lBZ0lDQjlMQ0IwYUdsekxtTnNaV0Z5UTI5c2IzSWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbU5zWldGeUtDRXdMQ0FoTVN3Z0lURXBPd29nSUNBZ2ZTd2dkR2hwY3k1amJHVmhja1JsY0hSb0lEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiR1ZoY2lnaE1Td2dJVEFzSUNFeEtUc0tJQ0FnSUgwc0lIUm9hWE11WTJ4bFlYSlRkR1Z1WTJsc0lEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiR1ZoY2lnaE1Td2dJVEVzSUNFd0tUc0tJQ0FnSUgwc0lIUm9hWE11WkdsemNHOXpaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lHVXVjbVZ0YjNabFJYWmxiblJNYVhOMFpXNWxjaWdpZDJWaVoyeGpiMjUwWlhoMGJHOXpkQ0lzSUVWbExDQWhNU2tzSUdVdWNtVnRiM1psUlhabGJuUk1hWE4wWlc1bGNpZ2lkMlZpWjJ4amIyNTBaWGgwY21WemRHOXlaV1FpTENCdFpTd2dJVEVwTENCRExtUnBjM0J2YzJVb0tTd2dWQzVrYVhOd2IzTmxLQ2tzSUVjdVpHbHpjRzl6WlNncExDQkxMbVJwYzNCdmMyVW9LU3dnZFdVdVpHbHpjRzl6WlNncExDQlVaUzVrYVhOd2IzTmxLQ2tzSUZJdVpHbHpjRzl6WlNncExDQlFaUzVrYVhOd2IzTmxLQ2tzSUZFdVpHbHpjRzl6WlNncExDQlJMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW5ObGMzTnBiMjV6ZEdGeWRDSXNJRlYwS1N3Z1VTNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0p6WlhOemFXOXVaVzVrSWl3Z1QzUXBMQ0JYSUNZbUlDaFhMbVJwYzNCdmMyVW9LU3dnVnlBOUlHNTFiR3dwTENCTWJpNXpkRzl3S0NrN0NpQWdJQ0I5T3dvZ0lDQWdablZ1WTNScGIyNGdSV1VvVXlrZ2V3b2dJQ0FnSUNBZ0lGTXVjSEpsZG1WdWRFUmxabUYxYkhRb0tTd2dZMjl1YzI5c1pTNXNiMmNvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklFTnZiblJsZUhRZ1RHOXpkQzRpS1N3Z2RpQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z2JXVW9LU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVzYjJjb0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJRU52Ym5SbGVIUWdVbVZ6ZEc5eVpXUXVJaWtzSUhZZ1BTQWhNVHNLSUNBZ0lDQWdJQ0JzWlhRZ1V5QTlJRTlsTG1GMWRHOVNaWE5sZEN3Z1RpQTlJQ1F1Wlc1aFlteGxaQ3dnU0NBOUlDUXVZWFYwYjFWd1pHRjBaU3dnZWlBOUlDUXVibVZsWkhOVmNHUmhkR1VzSUhFZ1BTQWtMblI1Y0dVN0NpQWdJQ0FnSUNBZ1pXVW9LU3dnVDJVdVlYVjBiMUpsYzJWMElEMGdVeXdnSkM1bGJtRmliR1ZrSUQwZ1Rpd2dKQzVoZFhSdlZYQmtZWFJsSUQwZ1NDd2dKQzV1WldWa2MxVndaR0YwWlNBOUlIb3NJQ1F1ZEhsd1pTQTlJSEU3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCU1pTaFRLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFNGdQU0JUTG5SaGNtZGxkRHNLSUNBZ0lDQWdJQ0JPTG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0ltUnBjM0J2YzJVaUxDQlNaU2tzSUc5bEtFNHBPd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYjJVb1V5a2dld29nSUNBZ0lDQWdJRXhsS0ZNcExDQkhMbkpsYlc5MlpTaFRLVHNLSUNBZ0lIMEtJQ0FnSUdaMWJtTjBhVzl1SUV4bEtGTXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1RpQTlJRWN1WjJWMEtGTXBMbkJ5YjJkeVlXMXpPd29nSUNBZ0lDQWdJRTRnSVQwOUlIWnZhV1FnTUNBbUppQW9UaTVtYjNKRllXTm9LR1oxYm1OMGFXOXVLRWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdVR1V1Y21Wc1pXRnpaVkJ5YjJkeVlXMG9TQ2s3Q2lBZ0lDQWdJQ0FnZlNrc0lGTXVhWE5UYUdGa1pYSk5ZWFJsY21saGJDQW1KaUJRWlM1eVpXeGxZWE5sVTJoaFpHVnlRMkZqYUdVb1V5a3BPd29nSUNBZ2ZRb2dJQ0FnZEdocGN5NXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUWdQU0JtZFc1amRHbHZiaWhUTENCT0xDQklMQ0I2TENCeExDQmlaU2tnZXdvZ0lDQWdJQ0FnSUU0Z1BUMDlJRzUxYkd3Z0ppWWdLRTRnUFNCbVpTazdDaUFnSUNBZ0lDQWdiR1YwSUVGbElEMGdjUzVwYzAxbGMyZ2dKaVlnY1M1dFlYUnlhWGhYYjNKc1pDNWtaWFJsY20xcGJtRnVkQ2dwSUR3Z01Dd2dTV1VnUFNCc2RTaFRMQ0JPTENCSUxDQjZMQ0J4S1RzS0lDQWdJQ0FnSUNCNFpTNXpaWFJOWVhSbGNtbGhiQ2g2TENCQlpTazdDaUFnSUNBZ0lDQWdiR1YwSUhkbElEMGdTQzVwYm1SbGVDd2dTR1VnUFNCSUxtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdhV1lnS0hkbElEMDlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaElaU0E5UFQwZ2RtOXBaQ0F3SUh4OElFaGxMbU52ZFc1MElEMDlQU0F3S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoM1pTNWpiM1Z1ZENBOVBUMGdNQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCRVpTQTlJREU3Q2lBZ0lDQWdJQ0FnZWk1M2FYSmxabkpoYldVZ1BUMDlJQ0V3SUNZbUlDaDNaU0E5SUZObExtZGxkRmRwY21WbWNtRnRaVUYwZEhKcFluVjBaU2hJS1N3Z1JHVWdQU0F5S1N3Z1VpNXpaWFIxY0NoeExDQjZMQ0JKWlN3Z1NDd2dkMlVwT3dvZ0lDQWdJQ0FnSUd4bGRDQjZaU3dnYW1VZ1BTQk5aVHNLSUNBZ0lDQWdJQ0IzWlNBaFBUMGdiblZzYkNBbUppQW9lbVVnUFNCelpTNW5aWFFvZDJVcExDQnFaU0E5SUhabExDQnFaUzV6WlhSSmJtUmxlQ2g2WlNrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JTYmlBOUlIZGxJQ0U5UFNCdWRXeHNJRDhnZDJVdVkyOTFiblFnT2lCSVpTNWpiM1Z1ZEN3Z1pXa2dQU0JJTG1SeVlYZFNZVzVuWlM1emRHRnlkQ0FxSUVSbExDQkhaU0E5SUVndVpISmhkMUpoYm1kbExtTnZkVzUwSUNvZ1JHVXNJRWgwSUQwZ1ltVWdJVDA5SUc1MWJHd2dQeUJpWlM1emRHRnlkQ0FxSUVSbElEb2dNQ3dnWVhRZ1BTQmlaU0FoUFQwZ2JuVnNiQ0EvSUdKbExtTnZkVzUwSUNvZ1JHVWdPaUF4SUM4Z01Dd2dhM1FnUFNCTllYUm9MbTFoZUNobGFTd2dTSFFwTENCSGNpQTlJRTFoZEdndWJXbHVLRkp1TENCbGFTQXJJRWRsTENCSWRDQXJJR0YwS1NBdElERXNJRWQwSUQwZ1RXRjBhQzV0WVhnb01Dd2dSM0lnTFNCcmRDQXJJREVwT3dvZ0lDQWdJQ0FnSUdsbUlDaEhkQ0FoUFQwZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9jUzVwYzAxbGMyZ3BJSG91ZDJseVpXWnlZVzFsSUQwOVBTQWhNQ0EvSUNoNFpTNXpaWFJNYVc1bFYybGtkR2dvZWk1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnZ0tpQkNaU2dwS1N3Z2FtVXVjMlYwVFc5a1pTZ3hLU2tnT2lCcVpTNXpaWFJOYjJSbEtEUXBPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoeExtbHpUR2x1WlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRnAwSUQwZ2VpNXNhVzVsZDJsa2RHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmFkQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaGFkQ0E5SURFcExDQjRaUzV6WlhSTWFXNWxWMmxrZEdnb1duUWdLaUJDWlNncEtTd2djUzVwYzB4cGJtVlRaV2R0Wlc1MGN5QS9JR3BsTG5ObGRFMXZaR1VvTVNrZ09pQnhMbWx6VEdsdVpVeHZiM0FnUHlCcVpTNXpaWFJOYjJSbEtESXBJRG9nYW1VdWMyVjBUVzlrWlNnektUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSEV1YVhOUWIybHVkSE1nUHlCcVpTNXpaWFJOYjJSbEtEQXBJRG9nY1M1cGMxTndjbWwwWlNBbUppQnFaUzV6WlhSTmIyUmxLRFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY1M1cGMwbHVjM1JoYm1ObFpFMWxjMmdwSUdwbExuSmxibVJsY2tsdWMzUmhibU5sY3locmRDd2dSM1FzSUhFdVkyOTFiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaElMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCYWRERWdQU0JOWVhSb0xtMXBiaWhJTG1sdWMzUmhibU5sUTI5MWJuUXNJRWd1WDIxaGVFbHVjM1JoYm1ObFEyOTFiblFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYW1VdWNtVnVaR1Z5U1c1emRHRnVZMlZ6S0d0MExDQkhkQ3dnV25ReEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR3BsTG5KbGJtUmxjaWhyZEN3Z1IzUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNJSFJvYVhNdVkyOXRjR2xzWlNBOUlHWjFibU4wYVc5dUtGTXNJRTRwSUhzS0lDQWdJQ0FnSUNCa0lEMGdWQzVuWlhRb1V5a3NJR1F1YVc1cGRDZ3BMQ0J0TG5CMWMyZ29aQ2tzSUZNdWRISmhkbVZ5YzJWV2FYTnBZbXhsS0daMWJtTjBhVzl1S0VncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnU0M1cGMweHBaMmgwSUNZbUlFZ3ViR0Y1WlhKekxuUmxjM1FvVGk1c1lYbGxjbk1wSUNZbUlDaGtMbkIxYzJoTWFXZG9kQ2hJS1N3Z1NDNWpZWE4wVTJoaFpHOTNJQ1ltSUdRdWNIVnphRk5vWVdSdmR5aElLU2s3Q2lBZ0lDQWdJQ0FnZlNrc0lHUXVjMlYwZFhCTWFXZG9kSE1vZUM1d2FIbHphV05oYkd4NVEyOXljbVZqZEV4cFoyaDBjeWtzSUZNdWRISmhkbVZ5YzJVb1puVnVZM1JwYjI0b1NDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlaUE5SUVndWJXRjBaWEpwWVd3N0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNktTQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaDZLU2tnWm05eUtHeGxkQ0J4SUQwZ01Ec2djU0E4SUhvdWJHVnVaM1JvT3lCeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdKbElEMGdlbHR4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhodktHSmxMQ0JUTENCSUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhodktIb3NJRk1zSUVncE93b2dJQ0FnSUNBZ0lIMHBMQ0J0TG5CdmNDZ3BMQ0JrSUQwZ2JuVnNiRHNLSUNBZ0lIMDdDaUFnSUNCc1pYUWdXR1VnUFNCdWRXeHNPd29nSUNBZ1puVnVZM1JwYjI0Z1YyVW9VeWtnZXdvZ0lDQWdJQ0FnSUZobElDWW1JRmhsS0ZNcE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdWWFFvS1NCN0NpQWdJQ0FnSUNBZ1RHNHVjM1J2Y0NncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdUM1FvS1NCN0NpQWdJQ0FnSUNBZ1RHNHVjM1JoY25Rb0tUc0tJQ0FnSUgwS0lDQWdJR3hsZENCTWJpQTlJRzVsZHlCeWFEc0tJQ0FnSUV4dUxuTmxkRUZ1YVcxaGRHbHZia3h2YjNBb1YyVXBMQ0IwZVhCbGIyWWdkMmx1Wkc5M0lEd2dJblVpSUNZbUlFeHVMbk5sZEVOdmJuUmxlSFFvZDJsdVpHOTNLU3dnZEdocGN5NXpaWFJCYm1sdFlYUnBiMjVNYjI5d0lEMGdablZ1WTNScGIyNG9VeWtnZXdvZ0lDQWdJQ0FnSUZobElEMGdVeXdnVVM1elpYUkJibWx0WVhScGIyNU1iMjl3S0ZNcExDQlRJRDA5UFNCdWRXeHNJRDhnVEc0dWMzUnZjQ2dwSURvZ1RHNHVjM1JoY25Rb0tUc0tJQ0FnSUgwc0lGRXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpZ2ljMlZ6YzJsdmJuTjBZWEowSWl3Z1ZYUXBMQ0JSTG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSW5ObGMzTnBiMjVsYm1RaUxDQlBkQ2tzSUhSb2FYTXVjbVZ1WkdWeUlEMGdablZ1WTNScGIyNG9VeXdnVGlrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hPSUNFOVBTQjJiMmxrSURBZ0ppWWdUaTVwYzBOaGJXVnlZU0FoUFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2k1eVpXNWtaWEk2SUdOaGJXVnlZU0JwY3lCdWIzUWdZVzRnYVc1emRHRnVZMlVnYjJZZ1ZFaFNSVVV1UTJGdFpYSmhMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gySUQwOVBTQWhNQ2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJRk11WVhWMGIxVndaR0YwWlNBOVBUMGdJVEFnSmlZZ1V5NTFjR1JoZEdWTllYUnlhWGhYYjNKc1pDZ3BMQ0JPTG5CaGNtVnVkQ0E5UFQwZ2JuVnNiQ0FtSmlCT0xuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDa3NJRkV1Wlc1aFlteGxaQ0E5UFQwZ0lUQWdKaVlnVVM1cGMxQnlaWE5sYm5ScGJtY2dQVDA5SUNFd0lDWW1JQ2hSTG1OaGJXVnlZVUYxZEc5VmNHUmhkR1VnUFQwOUlDRXdJQ1ltSUZFdWRYQmtZWFJsUTJGdFpYSmhLRTRwTENCT0lEMGdVUzVuWlhSRFlXMWxjbUVvS1Nrc0lGTXVhWE5UWTJWdVpTQTlQVDBnSVRBZ0ppWWdVeTV2YmtKbFptOXlaVkpsYm1SbGNpaDRMQ0JUTENCT0xDQmZLU3dnWkNBOUlGUXVaMlYwS0ZNc0lHMHViR1Z1WjNSb0tTd2daQzVwYm1sMEtDa3NJRzB1Y0hWemFDaGtLU3dnYUdVdWJYVnNkR2x3YkhsTllYUnlhV05sY3loT0xuQnliMnBsWTNScGIyNU5ZWFJ5YVhnc0lFNHViV0YwY21sNFYyOXliR1JKYm5abGNuTmxLU3dnYm1VdWMyVjBSbkp2YlZCeWIycGxZM1JwYjI1TllYUnlhWGdvYUdVcExDQldJRDBnZEdocGN5NXNiMk5oYkVOc2FYQndhVzVuUlc1aFlteGxaQ3dnWTJVZ1BTQktMbWx1YVhRb2RHaHBjeTVqYkdsd2NHbHVaMUJzWVc1bGN5d2dWaXdnVGlrc0lIVWdQU0JETG1kbGRDaFRMQ0JtTG14bGJtZDBhQ2tzSUhVdWFXNXBkQ2dwTENCbUxuQjFjMmdvZFNrc0lGRmhLRk1zSUU0c0lEQXNJSGd1YzI5eWRFOWlhbVZqZEhNcExDQjFMbVpwYm1semFDZ3BMQ0I0TG5OdmNuUlBZbXBsWTNSeklEMDlQU0FoTUNBbUppQjFMbk52Y25Rb2R5d2dSU2tzSUdObElEMDlQU0FoTUNBbUppQktMbUpsWjJsdVUyaGhaRzkzY3lncE93b2dJQ0FnSUNBZ0lHeGxkQ0JJSUQwZ1pDNXpkR0YwWlM1emFHRmtiM2R6UVhKeVlYazdDaUFnSUNBZ0lDQWdhV1lnS0NRdWNtVnVaR1Z5S0Vnc0lGTXNJRTRwTENCalpTQTlQVDBnSVRBZ0ppWWdTaTVsYm1SVGFHRmtiM2R6S0Nrc0lIUm9hWE11YVc1bWJ5NWhkWFJ2VW1WelpYUWdQVDA5SUNFd0lDWW1JSFJvYVhNdWFXNW1ieTV5WlhObGRDZ3BMQ0J5WlM1eVpXNWtaWElvZFN3Z1V5a3NJR1F1YzJWMGRYQk1hV2RvZEhNb2VDNXdhSGx6YVdOaGJHeDVRMjl5Y21WamRFeHBaMmgwY3lrc0lFNHVhWE5CY25KaGVVTmhiV1Z5WVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VpQTlJRTR1WTJGdFpYSmhjenNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeElEMGdNQ3dnWW1VZ1BTQjZMbXhsYm1kMGFEc2djU0E4SUdKbE95QnhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRmxJRDBnZWx0eFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFdGhLSFVzSUZNc0lFRmxMQ0JCWlM1MmFXVjNjRzl5ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdTMkVvZFN3Z1V5d2dUaWs3Q2lBZ0lDQWdJQ0FnWHlBaFBUMGdiblZzYkNBbUppQW9haTUxY0dSaGRHVk5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZENoZktTd2dhaTUxY0dSaGRHVlNaVzVrWlhKVVlYSm5aWFJOYVhCdFlYQW9YeWtwTENCVExtbHpVMk5sYm1VZ1BUMDlJQ0V3SUNZbUlGTXViMjVCWm5SbGNsSmxibVJsY2loNExDQlRMQ0JPS1N3Z2VHVXVZblZtWm1WeWN5NWtaWEIwYUM1elpYUlVaWE4wS0NFd0tTd2dlR1V1WW5WbVptVnljeTVrWlhCMGFDNXpaWFJOWVhOcktDRXdLU3dnZUdVdVluVm1abVZ5Y3k1amIyeHZjaTV6WlhSTllYTnJLQ0V3S1N3Z2VHVXVjMlYwVUc5c2VXZHZiazltWm5ObGRDZ2hNU2tzSUZJdWNtVnpaWFJFWldaaGRXeDBVM1JoZEdVb0tTd2dlU0E5SUMweExDQmlJRDBnYm5Wc2JDd2diUzV3YjNBb0tTd2diUzVzWlc1bmRHZ2dQaUF3SUQ4Z1pDQTlJRzFiYlM1c1pXNW5kR2dnTFNBeFhTQTZJR1FnUFNCdWRXeHNMQ0JtTG5CdmNDZ3BMQ0JtTG14bGJtZDBhQ0ErSURBZ1B5QjFJRDBnWmx0bUxteGxibWQwYUNBdElERmRJRG9nZFNBOUlHNTFiR3c3Q2lBZ0lDQjlPd29nSUNBZ1puVnVZM1JwYjI0Z1VXRW9VeXdnVGl3Z1NDd2dlaWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaFRMblpwYzJsaWJHVWdQVDA5SUNFeEtTQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2FXWWdLRk11YkdGNVpYSnpMblJsYzNRb1RpNXNZWGxsY25NcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFRMbWx6UjNKdmRYQXBJRWdnUFNCVExuSmxibVJsY2s5eVpHVnlPd29nSUNBZ0lDQWdJQ0FnSUNCbGJITmxJR2xtSUNoVExtbHpURTlFS1NCVExtRjFkRzlWY0dSaGRHVWdQVDA5SUNFd0lDWW1JRk11ZFhCa1lYUmxLRTRwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFRMbWx6VEdsbmFIUXBJR1F1Y0hWemFFeHBaMmgwS0ZNcExDQlRMbU5oYzNSVGFHRmtiM2NnSmlZZ1pDNXdkWE5vVTJoaFpHOTNLRk1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUdsbUlDaFRMbWx6VTNCeWFYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lWTXVabkoxYzNSMWJVTjFiR3hsWkNCOGZDQnVaUzVwYm5SbGNuTmxZM1J6VTNCeWFYUmxLRk1wS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlaUFtSmlCc1pTNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvVXk1dFlYUnlhWGhYYjNKc1pDa3VZWEJ3YkhsTllYUnlhWGcwS0dobEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FXVWdQU0JVWlM1MWNHUmhkR1VvVXlrc0lFbGxJRDBnVXk1dFlYUmxjbWxoYkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkpaUzUyYVhOcFlteGxJQ1ltSUhVdWNIVnphQ2hUTENCQlpTd2dTV1VzSUVnc0lHeGxMbm9zSUc1MWJHd3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tDaFRMbWx6VFdWemFDQjhmQ0JUTG1selRHbHVaU0I4ZkNCVExtbHpVRzlwYm5SektTQW1KaUFvVXk1cGMxTnJhVzV1WldSTlpYTm9JQ1ltSUZNdWMydGxiR1YwYjI0dVpuSmhiV1VnSVQwOUlFOWxMbkpsYm1SbGNpNW1jbUZ0WlNBbUppQW9VeTV6YTJWc1pYUnZiaTUxY0dSaGRHVW9LU3dnVXk1emEyVnNaWFJ2Ymk1bWNtRnRaU0E5SUU5bExuSmxibVJsY2k1bWNtRnRaU2tzSUNGVExtWnlkWE4wZFcxRGRXeHNaV1FnZkh3Z2JtVXVhVzUwWlhKelpXTjBjMDlpYW1WamRDaFRLU2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhvZ0ppWWdiR1V1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtGTXViV0YwY21sNFYyOXliR1FwTG1Gd2NHeDVUV0YwY21sNE5DaG9aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1FXVXhJRDBnVkdVdWRYQmtZWFJsS0ZNcExDQkpaVEVnUFNCVExtMWhkR1Z5YVdGc093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1NXVXhLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IzWlNBOUlFRmxNUzVuY205MWNITTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JJWlNBOUlEQXNJRVJsSUQwZ2QyVXViR1Z1WjNSb095QklaU0E4SUVSbE95QklaU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIcGxJRDBnZDJWYlNHVmRMQ0JxWlNBOUlFbGxNVnQ2WlM1dFlYUmxjbWxoYkVsdVpHVjRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhbVVnSmlZZ2FtVXVkbWx6YVdKc1pTQW1KaUIxTG5CMWMyZ29VeXdnUVdVeExDQnFaU3dnU0N3Z2JHVXVlaXdnZW1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQkpaVEV1ZG1semFXSnNaU0FtSmlCMUxuQjFjMmdvVXl3Z1FXVXhMQ0JKWlRFc0lFZ3NJR3hsTG5vc0lHNTFiR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCaVpTQTlJRk11WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JCWlRJZ1BTQXdMQ0JKWlRJZ1BTQmlaUzVzWlc1bmRHZzdJRUZsTWlBOElFbGxNanNnUVdVeUt5c3BVV0VvWW1WYlFXVXlYU3dnVGl3Z1NDd2dlaWs3Q2lBZ0lDQjlDaUFnSUNCbWRXNWpkR2x2YmlCTFlTaFRMQ0JPTENCSUxDQjZLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIRWdQU0JUTG05d1lYRjFaU3dnWW1VZ1BTQlRMblJ5WVc1emJXbHpjMmwyWlN3Z1FXVWdQU0JUTG5SeVlXNXpjR0Z5Wlc1ME93b2dJQ0FnSUNBZ0lHUXVjMlYwZFhCTWFXZG9kSE5XYVdWM0tFZ3BMQ0JpWlM1c1pXNW5kR2dnUGlBd0lDWW1JRzkxS0hFc0lFNHNJRWdwTENCNklDWW1JSGhsTG5acFpYZHdiM0owS0VFdVkyOXdlU2g2S1Nrc0lIRXViR1Z1WjNSb0lENGdNQ0FtSmlCcmNpaHhMQ0JPTENCSUtTd2dZbVV1YkdWdVozUm9JRDRnTUNBbUppQnJjaWhpWlN3Z1Rpd2dTQ2tzSUVGbExteGxibWQwYUNBK0lEQWdKaVlnYTNJb1FXVXNJRTRzSUVncE93b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdiM1VvVXl3Z1Rpd2dTQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaFhJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCWlNBOUlHOGdQVDA5SUNFd0lDWW1JR2RsTG1selYyVmlSMHd5SUQwOVBTQWhNQ0EvSUZoeklEb2dRWFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lGY2dQU0J1WlhjZ1FXVW9NVEF5TkN3Z01UQXlOQ3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWjJWdVpYSmhkR1ZOYVhCdFlYQnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVTZJSFJsTG1OdmJuWmxjblFvYTI0cElDRTlQU0J1ZFd4c0lEOGdhMjRnT2lCeWJpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXBia1pwYkhSbGNqb2dWV2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVdkR2FXeDBaWEk2SUhKMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QzSmhjRk02SUhaMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QzSmhjRlE2SUhaMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RYTmxVbVZ1WkdWeVZHOVVaWGgwZFhKbE9pQjVaUzVvWVhNb0lsZEZRa2RNWDIxMWJIUnBjMkZ0Y0d4bFpGOXlaVzVrWlhKZmRHOWZkR1Y0ZEhWeVpTSXBDaUFnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnZWlBOUlIZ3VaMlYwVW1WdVpHVnlWR0Z5WjJWMEtDazdDaUFnSUNBZ0lDQWdlQzV6WlhSU1pXNWtaWEpVWVhKblpYUW9WeWtzSUhndVkyeGxZWElvS1RzS0lDQWdJQ0FnSUNCc1pYUWdjU0E5SUhndWRHOXVaVTFoY0hCcGJtYzdDaUFnSUNBZ0lDQWdlQzUwYjI1bFRXRndjR2x1WnlBOUlGOXVMQ0JyY2loVExDQk9MQ0JJS1N3Z2VDNTBiMjVsVFdGd2NHbHVaeUE5SUhFc0lHb3VkWEJrWVhSbFRYVnNkR2x6WVcxd2JHVlNaVzVrWlhKVVlYSm5aWFFvVnlrc0lHb3VkWEJrWVhSbFVtVnVaR1Z5VkdGeVoyVjBUV2x3YldGd0tGY3BMQ0I0TG5ObGRGSmxibVJsY2xSaGNtZGxkQ2g2S1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHdHlLRk1zSUU0c0lFZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2VpQTlJRTR1YVhOVFkyVnVaU0E5UFQwZ0lUQWdQeUJPTG05MlpYSnlhV1JsVFdGMFpYSnBZV3dnT2lCdWRXeHNPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjU0E5SURBc0lHSmxJRDBnVXk1c1pXNW5kR2c3SUhFZ1BDQmlaVHNnY1NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFRmxJRDBnVTF0eFhTd2dTV1VnUFNCQlpTNXZZbXBsWTNRc0lIZGxJRDBnUVdVdVoyVnZiV1YwY25rc0lFaGxJRDBnZWlBOVBUMGdiblZzYkNBL0lFRmxMbTFoZEdWeWFXRnNJRG9nZWl3Z1JHVWdQU0JCWlM1bmNtOTFjRHNLSUNBZ0lDQWdJQ0FnSUNBZ1NXVXViR0Y1WlhKekxuUmxjM1FvU0M1c1lYbGxjbk1wSUNZbUlHRjFLRWxsTENCT0xDQklMQ0IzWlN3Z1NHVXNJRVJsS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhkU2hUTENCT0xDQklMQ0I2TENCeExDQmlaU2tnZXdvZ0lDQWdJQ0FnSUZNdWIyNUNaV1p2Y21WU1pXNWtaWElvZUN3Z1Rpd2dTQ3dnZWl3Z2NTd2dZbVVwTENCVExtMXZaR1ZzVm1sbGQwMWhkSEpwZUM1dGRXeDBhWEJzZVUxaGRISnBZMlZ6S0VndWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObExDQlRMbTFoZEhKcGVGZHZjbXhrS1N3Z1V5NXViM0p0WVd4TllYUnlhWGd1WjJWMFRtOXliV0ZzVFdGMGNtbDRLRk11Ylc5a1pXeFdhV1YzVFdGMGNtbDRLU3dnY1M1dmJrSmxabTl5WlZKbGJtUmxjaWg0TENCT0xDQklMQ0I2TENCVExDQmlaU2tzSUhFdWRISmhibk53WVhKbGJuUWdQVDA5SUNFd0lDWW1JSEV1YzJsa1pTQTlQVDBnUTJrZ1B5QW9jUzV6YVdSbElEMGdhWFFzSUhFdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2VDNXlaVzVrWlhKQ2RXWm1aWEpFYVhKbFkzUW9TQ3dnVGl3Z2Vpd2djU3dnVXl3Z1ltVXBMQ0J4TG5OcFpHVWdQU0JCYVN3Z2NTNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQjRMbkpsYm1SbGNrSjFabVpsY2tScGNtVmpkQ2hJTENCT0xDQjZMQ0J4TENCVExDQmlaU2tzSUhFdWMybGtaU0E5SUVOcEtTQTZJSGd1Y21WdVpHVnlRblZtWm1WeVJHbHlaV04wS0Vnc0lFNHNJSG9zSUhFc0lGTXNJR0psS1N3Z1V5NXZia0ZtZEdWeVVtVnVaR1Z5S0hnc0lFNHNJRWdzSUhvc0lIRXNJR0psS1RzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlIaHZLRk1zSUU0c0lFZ3BJSHNLSUNBZ0lDQWdJQ0JPTG1selUyTmxibVVnSVQwOUlDRXdJQ1ltSUNoT0lEMGdabVVwT3dvZ0lDQWdJQ0FnSUd4bGRDQjZJRDBnUnk1blpYUW9VeWtzSUhFZ1BTQmtMbk4wWVhSbExteHBaMmgwY3l3Z1ltVWdQU0JrTG5OMFlYUmxMbk5vWVdSdmQzTkJjbkpoZVN3Z1FXVWdQU0J4TG5OMFlYUmxMblpsY25OcGIyNHNJRWxsSUQwZ1VHVXVaMlYwVUdGeVlXMWxkR1Z5Y3loVExDQnhMbk4wWVhSbExDQmlaU3dnVGl3Z1NDa3NJSGRsSUQwZ1VHVXVaMlYwVUhKdlozSmhiVU5oWTJobFMyVjVLRWxsS1N3Z1NHVWdQU0I2TG5CeWIyZHlZVzF6T3dvZ0lDQWdJQ0FnSUhvdVpXNTJhWEp2Ym0xbGJuUWdQU0JUTG1selRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2dQeUJPTG1WdWRtbHliMjV0Wlc1MElEb2diblZzYkN3Z2VpNW1iMmNnUFNCT0xtWnZaeXdnZWk1bGJuWk5ZWEFnUFNBb1V5NXBjMDFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzSUQ4Z2RXVWdPaUJMS1M1blpYUW9VeTVsYm5aTllYQWdmSHdnZWk1bGJuWnBjbTl1YldWdWRDa3NJRWhsSUQwOVBTQjJiMmxrSURBZ0ppWWdLRk11WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpWkdsemNHOXpaU0lzSUZKbEtTd2dTR1VnUFNCdVpYY2dUV0Z3TENCNkxuQnliMmR5WVcxeklEMGdTR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQkVaU0E5SUVobExtZGxkQ2gzWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLRVJsSUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIb3VZM1Z5Y21WdWRGQnliMmR5WVcwZ1BUMDlJRVJsSUNZbUlIb3ViR2xuYUhSelUzUmhkR1ZXWlhKemFXOXVJRDA5UFNCQlpTa2djbVYwZFhKdUlHVnNLRk1zSUVsbEtTd2dSR1U3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJRWxsTG5WdWFXWnZjbTF6SUQwZ1VHVXVaMlYwVlc1cFptOXliWE1vVXlrc0lGTXViMjVDZFdsc1pDaElMQ0JKWlN3Z2VDa3NJRk11YjI1Q1pXWnZjbVZEYjIxd2FXeGxLRWxsTENCNEtTd2dSR1VnUFNCUVpTNWhZM0YxYVhKbFVISnZaM0poYlNoSlpTd2dkMlVwTENCSVpTNXpaWFFvZDJVc0lFUmxLU3dnZWk1MWJtbG1iM0p0Y3lBOUlFbGxMblZ1YVdadmNtMXpPd29nSUNBZ0lDQWdJR3hsZENCNlpTQTlJSG91ZFc1cFptOXliWE03Q2lBZ0lDQWdJQ0FnS0NGVExtbHpVMmhoWkdWeVRXRjBaWEpwWVd3Z0ppWWdJVk11YVhOU1lYZFRhR0ZrWlhKTllYUmxjbWxoYkNCOGZDQlRMbU5zYVhCd2FXNW5JRDA5UFNBaE1Da2dKaVlnS0hwbExtTnNhWEJ3YVc1blVHeGhibVZ6SUQwZ1NpNTFibWxtYjNKdEtTd2daV3dvVXl3Z1NXVXBMQ0I2TG01bFpXUnpUR2xuYUhSeklEMGdhSFVvVXlrc0lIb3ViR2xuYUhSelUzUmhkR1ZXWlhKemFXOXVJRDBnUVdVc0lIb3VibVZsWkhOTWFXZG9kSE1nSmlZZ0tIcGxMbUZ0WW1sbGJuUk1hV2RvZEVOdmJHOXlMblpoYkhWbElEMGdjUzV6ZEdGMFpTNWhiV0pwWlc1MExDQjZaUzVzYVdkb2RGQnliMkpsTG5aaGJIVmxJRDBnY1M1emRHRjBaUzV3Y205aVpTd2dlbVV1WkdseVpXTjBhVzl1WVd4TWFXZG9kSE11ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbVJwY21WamRHbHZibUZzTENCNlpTNWthWEpsWTNScGIyNWhiRXhwWjJoMFUyaGhaRzkzY3k1MllXeDFaU0E5SUhFdWMzUmhkR1V1WkdseVpXTjBhVzl1WVd4VGFHRmtiM2NzSUhwbExuTndiM1JNYVdkb2RITXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuTndiM1FzSUhwbExuTndiM1JNYVdkb2RGTm9ZV1J2ZDNNdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5Od2IzUlRhR0ZrYjNjc0lIcGxMbkpsWTNSQmNtVmhUR2xuYUhSekxuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1eVpXTjBRWEpsWVN3Z2VtVXViSFJqWHpFdWRtRnNkV1VnUFNCeExuTjBZWFJsTG5KbFkzUkJjbVZoVEZSRE1Td2dlbVV1YkhSalh6SXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuSmxZM1JCY21WaFRGUkRNaXdnZW1VdWNHOXBiblJNYVdkb2RITXVkbUZzZFdVZ1BTQnhMbk4wWVhSbExuQnZhVzUwTENCNlpTNXdiMmx1ZEV4cFoyaDBVMmhoWkc5M2N5NTJZV3gxWlNBOUlIRXVjM1JoZEdVdWNHOXBiblJUYUdGa2IzY3NJSHBsTG1obGJXbHpjR2hsY21WTWFXZG9kSE11ZG1Gc2RXVWdQU0J4TG5OMFlYUmxMbWhsYldrc0lIcGxMbVJwY21WamRHbHZibUZzVTJoaFpHOTNUV0Z3TG5aaGJIVmxJRDBnY1M1emRHRjBaUzVrYVhKbFkzUnBiMjVoYkZOb1lXUnZkMDFoY0N3Z2VtVXVaR2x5WldOMGFXOXVZV3hUYUdGa2IzZE5ZWFJ5YVhndWRtRnNkV1VnUFNCeExuTjBZWFJsTG1ScGNtVmpkR2x2Ym1Gc1UyaGhaRzkzVFdGMGNtbDRMQ0I2WlM1emNHOTBVMmhoWkc5M1RXRndMblpoYkhWbElEMGdjUzV6ZEdGMFpTNXpjRzkwVTJoaFpHOTNUV0Z3TENCNlpTNXpjRzkwVTJoaFpHOTNUV0YwY21sNExuWmhiSFZsSUQwZ2NTNXpkR0YwWlM1emNHOTBVMmhoWkc5M1RXRjBjbWw0TENCNlpTNXdiMmx1ZEZOb1lXUnZkMDFoY0M1MllXeDFaU0E5SUhFdWMzUmhkR1V1Y0c5cGJuUlRhR0ZrYjNkTllYQXNJSHBsTG5CdmFXNTBVMmhoWkc5M1RXRjBjbWw0TG5aaGJIVmxJRDBnY1M1emRHRjBaUzV3YjJsdWRGTm9ZV1J2ZDAxaGRISnBlQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHcGxJRDBnUkdVdVoyVjBWVzVwWm05eWJYTW9LU3dnVW00Z1BTQmliaTV6WlhGWGFYUm9WbUZzZFdVb2FtVXVjMlZ4TENCNlpTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIb3VZM1Z5Y21WdWRGQnliMmR5WVcwZ1BTQkVaU3dnZWk1MWJtbG1iM0p0YzB4cGMzUWdQU0JTYml3Z1JHVTdDaUFnSUNCOUNpQWdJQ0JtZFc1amRHbHZiaUJsYkNoVExDQk9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElFZ2dQU0JITG1kbGRDaFRLVHNLSUNBZ0lDQWdJQ0JJTG05MWRIQjFkRVZ1WTI5a2FXNW5JRDBnVGk1dmRYUndkWFJGYm1OdlpHbHVaeXdnU0M1cGJuTjBZVzVqYVc1bklEMGdUaTVwYm5OMFlXNWphVzVuTENCSUxuTnJhVzV1YVc1bklEMGdUaTV6YTJsdWJtbHVaeXdnU0M1dGIzSndhRlJoY21kbGRITWdQU0JPTG0xdmNuQm9WR0Z5WjJWMGN5d2dTQzV0YjNKd2FFNXZjbTFoYkhNZ1BTQk9MbTF2Y25Cb1RtOXliV0ZzY3l3Z1NDNXRiM0p3YUZSaGNtZGxkSE5EYjNWdWRDQTlJRTR1Ylc5eWNHaFVZWEpuWlhSelEyOTFiblFzSUVndWJuVnRRMnhwY0hCcGJtZFFiR0Z1WlhNZ1BTQk9MbTUxYlVOc2FYQndhVzVuVUd4aGJtVnpMQ0JJTG01MWJVbHVkR1Z5YzJWamRHbHZiaUE5SUU0dWJuVnRRMnhwY0VsdWRHVnljMlZqZEdsdmJpd2dTQzUyWlhKMFpYaEJiSEJvWVhNZ1BTQk9MblpsY25SbGVFRnNjR2hoY3l3Z1NDNTJaWEowWlhoVVlXNW5aVzUwY3lBOUlFNHVkbVZ5ZEdWNFZHRnVaMlZ1ZEhNc0lFZ3VkRzl1WlUxaGNIQnBibWNnUFNCT0xuUnZibVZOWVhCd2FXNW5Pd29nSUNBZ2ZRb2dJQ0FnWm5WdVkzUnBiMjRnYkhVb1V5d2dUaXdnU0N3Z2Vpd2djU2tnZXdvZ0lDQWdJQ0FnSUU0dWFYTlRZMlZ1WlNBaFBUMGdJVEFnSmlZZ0tFNGdQU0JtWlNrc0lHb3VjbVZ6WlhSVVpYaDBkWEpsVlc1cGRITW9LVHNLSUNBZ0lDQWdJQ0JzWlhRZ1ltVWdQU0JPTG1adlp5d2dRV1VnUFNCNkxtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnUHlCT0xtVnVkbWx5YjI1dFpXNTBJRG9nYm5Wc2JDd2dTV1VnUFNCZklEMDlQU0J1ZFd4c0lEOGdlQzV2ZFhSd2RYUkZibU52WkdsdVp5QTZJRjh1ZEdWNGRIVnlaUzVsYm1OdlpHbHVaeXdnZDJVZ1BTQW9laTVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lEOGdkV1VnT2lCTEtTNW5aWFFvZWk1bGJuWk5ZWEFnZkh3Z1FXVXBMQ0JJWlNBOUlIb3VkbVZ5ZEdWNFEyOXNiM0p6SUQwOVBTQWhNQ0FtSmlBaElVZ3VZWFIwY21saWRYUmxjeTVqYjJ4dmNpQW1KaUJJTG1GMGRISnBZblYwWlhNdVkyOXNiM0l1YVhSbGJWTnBlbVVnUFQwOUlEUXNJRVJsSUQwZ0lTRjZMbTV2Y20xaGJFMWhjQ0FtSmlBaElVZ3VZWFIwY21saWRYUmxjeTUwWVc1blpXNTBMQ0I2WlNBOUlDRWhTQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNHNJR3BsSUQwZ0lTRklMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5NXViM0p0WVd3c0lGSnVJRDBnU0M1dGIzSndhRUYwZEhKcFluVjBaWE11Y0c5emFYUnBiMjRnUHlCSUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1d2IzTnBkR2x2Ymk1c1pXNW5kR2dnT2lBd0xDQmxhU0E5SUhvdWRHOXVaVTFoY0hCbFpDQS9JSGd1ZEc5dVpVMWhjSEJwYm1jZ09pQmZiaXdnUjJVZ1BTQkhMbWRsZENoNktTd2dTSFFnUFNCa0xuTjBZWFJsTG14cFoyaDBjenNLSUNBZ0lDQWdJQ0JwWmlBb1kyVWdQVDA5SUNFd0lDWW1JQ2hXSUQwOVBTQWhNQ0I4ZkNCVElDRTlQU0JpS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VIUWdQU0JUSUQwOVBTQmlJQ1ltSUhvdWFXUWdQVDA5SUhrN0NpQWdJQ0FnSUNBZ0lDQWdJRW91YzJWMFUzUmhkR1VvZWl3Z1V5d2dVSFFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdZWFFnUFNBaE1Uc0tJQ0FnSUNBZ0lDQjZMblpsY25OcGIyNGdQVDA5SUVkbExsOWZkbVZ5YzJsdmJpQS9JQ2hIWlM1dVpXVmtjMHhwWjJoMGN5QW1KaUJIWlM1c2FXZG9kSE5UZEdGMFpWWmxjbk5wYjI0Z0lUMDlJRWgwTG5OMFlYUmxMblpsY25OcGIyNGdmSHdnUjJVdWIzVjBjSFYwUlc1amIyUnBibWNnSVQwOUlFbGxJSHg4SUhFdWFYTkpibk4wWVc1alpXUk5aWE5vSUNZbUlFZGxMbWx1YzNSaGJtTnBibWNnUFQwOUlDRXhJSHg4SUNGeExtbHpTVzV6ZEdGdVkyVmtUV1Z6YUNBbUppQkhaUzVwYm5OMFlXNWphVzVuSUQwOVBTQWhNQ0I4ZkNCeExtbHpVMnRwYm01bFpFMWxjMmdnSmlZZ1IyVXVjMnRwYm01cGJtY2dQVDA5SUNFeElIeDhJQ0Z4TG1selUydHBibTVsWkUxbGMyZ2dKaVlnUjJVdWMydHBibTVwYm1jZ1BUMDlJQ0V3SUh4OElFZGxMbVZ1ZGsxaGNDQWhQVDBnZDJVZ2ZId2dlaTVtYjJjZ0ppWWdSMlV1Wm05bklDRTlQU0JpWlNCOGZDQkhaUzV1ZFcxRGJHbHdjR2x1WjFCc1lXNWxjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaEhaUzV1ZFcxRGJHbHdjR2x1WjFCc1lXNWxjeUFoUFQwZ1NpNXVkVzFRYkdGdVpYTWdmSHdnUjJVdWJuVnRTVzUwWlhKelpXTjBhVzl1SUNFOVBTQktMbTUxYlVsdWRHVnljMlZqZEdsdmJpa2dmSHdnUjJVdWRtVnlkR1Y0UVd4d2FHRnpJQ0U5UFNCSVpTQjhmQ0JIWlM1MlpYSjBaWGhVWVc1blpXNTBjeUFoUFQwZ1JHVWdmSHdnUjJVdWJXOXljR2hVWVhKblpYUnpJQ0U5UFNCNlpTQjhmQ0JIWlM1dGIzSndhRTV2Y20xaGJITWdJVDA5SUdwbElIeDhJRWRsTG5SdmJtVk5ZWEJ3YVc1bklDRTlQU0JsYVNCOGZDQm5aUzVwYzFkbFlrZE1NaUE5UFQwZ0lUQWdKaVlnUjJVdWJXOXljR2hVWVhKblpYUnpRMjkxYm5RZ0lUMDlJRkp1S1NBbUppQW9ZWFFnUFNBaE1Da2dPaUFvWVhRZ1BTQWhNQ3dnUjJVdVgxOTJaWEp6YVc5dUlEMGdlaTUyWlhKemFXOXVLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2EzUWdQU0JIWlM1amRYSnlaVzUwVUhKdlozSmhiVHNLSUNBZ0lDQWdJQ0JoZENBOVBUMGdJVEFnSmlZZ0tHdDBJRDBnZUc4b2Vpd2dUaXdnY1NrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JIY2lBOUlDRXhMQ0JIZENBOUlDRXhMQ0JhZENBOUlDRXhMQ0I0ZENBOUlHdDBMbWRsZEZWdWFXWnZjbTF6S0Nrc0lGaHBJRDBnUjJVdWRXNXBabTl5YlhNN0NpQWdJQ0FnSUNBZ2FXWWdLSGhsTG5WelpWQnliMmR5WVcwb2EzUXVjSEp2WjNKaGJTa2dKaVlnS0VkeUlEMGdJVEFzSUVkMElEMGdJVEFzSUZwMElEMGdJVEFwTENCNkxtbGtJQ0U5UFNCNUlDWW1JQ2g1SUQwZ2VpNXBaQ3dnUjNRZ1BTQWhNQ2tzSUVkeUlIeDhJR0lnSVQwOUlGTXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSndjbTlxWldOMGFXOXVUV0YwY21sNElpd2dVeTV3Y205cVpXTjBhVzl1VFdGMGNtbDRLU3dnWjJVdWJHOW5ZWEpwZEdodGFXTkVaWEIwYUVKMVptWmxjaUFtSmlCNGRDNXpaWFJXWVd4MVpTaFpMQ0FpYkc5blJHVndkR2hDZFdaR1F5SXNJRElnTHlBb1RXRjBhQzVzYjJjb1V5NW1ZWElnS3lBeEtTQXZJRTFoZEdndVRFNHlLU2tzSUdJZ0lUMDlJRk1nSmlZZ0tHSWdQU0JUTENCSGRDQTlJQ0V3TENCYWRDQTlJQ0V3S1N3Z2VpNXBjMU5vWVdSbGNrMWhkR1Z5YVdGc0lIeDhJSG91YVhOTlpYTm9VR2h2Ym1kTllYUmxjbWxoYkNCOGZDQjZMbWx6VFdWemFGUnZiMjVOWVhSbGNtbGhiQ0I4ZkNCNkxtbHpUV1Z6YUZOMFlXNWtZWEprVFdGMFpYSnBZV3dnZkh3Z2VpNWxiblpOWVhBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JRZERFZ1BTQjRkQzV0WVhBdVkyRnRaWEpoVUc5emFYUnBiMjQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JRZERFZ0lUMDlJSFp2YVdRZ01DQW1KaUJRZERFdWMyVjBWbUZzZFdVb1dTd2diR1V1YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtGTXViV0YwY21sNFYyOXliR1FwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBb2VpNXBjMDFsYzJoUWFHOXVaMDFoZEdWeWFXRnNJSHg4SUhvdWFYTk5aWE5vVkc5dmJrMWhkR1Z5YVdGc0lIeDhJSG91YVhOTlpYTm9UR0Z0WW1WeWRFMWhkR1Z5YVdGc0lIeDhJSG91YVhOTlpYTm9RbUZ6YVdOTllYUmxjbWxoYkNCOGZDQjZMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z2ZId2dlaTVwYzFOb1lXUmxjazFoZEdWeWFXRnNLU0FtSmlCNGRDNXpaWFJXWVd4MVpTaFpMQ0FpYVhOUGNuUm9iMmR5WVhCb2FXTWlMQ0JUTG1selQzSjBhRzluY21Gd2FHbGpRMkZ0WlhKaElEMDlQU0FoTUNrc0lDaDZMbWx6VFdWemFGQm9iMjVuVFdGMFpYSnBZV3dnZkh3Z2VpNXBjMDFsYzJoVWIyOXVUV0YwWlhKcFlXd2dmSHdnZWk1cGMwMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXd2dmSHdnZWk1cGMwMWxjMmhDWVhOcFkwMWhkR1Z5YVdGc0lIeDhJSG91YVhOTlpYTm9VM1JoYm1SaGNtUk5ZWFJsY21saGJDQjhmQ0I2TG1selUyaGhaR1Z5VFdGMFpYSnBZV3dnZkh3Z2VpNXBjMU5vWVdSdmQwMWhkR1Z5YVdGc0lIeDhJSEV1YVhOVGEybHVibVZrVFdWemFDa2dKaVlnZUhRdWMyVjBWbUZzZFdVb1dTd2dJblpwWlhkTllYUnlhWGdpTENCVExtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoeExtbHpVMnRwYm01bFpFMWxjMmdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdlSFF1YzJWMFQzQjBhVzl1WVd3b1dTd2djU3dnSW1KcGJtUk5ZWFJ5YVhnaUtTd2dlSFF1YzJWMFQzQjBhVzl1WVd3b1dTd2djU3dnSW1KcGJtUk5ZWFJ5YVhoSmJuWmxjbk5sSWlrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCUWRESWdQU0J4TG5OclpXeGxkRzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQlFkRElnSmlZZ0tHZGxMbVpzYjJGMFZtVnlkR1Y0VkdWNGRIVnlaWE1nUHlBb1VIUXlMbUp2Ym1WVVpYaDBkWEpsSUQwOVBTQnVkV3hzSUNZbUlGQjBNaTVqYjIxd2RYUmxRbTl1WlZSbGVIUjFjbVVvS1N3Z2VIUXVjMlYwVm1Gc2RXVW9XU3dnSW1KdmJtVlVaWGgwZFhKbElpd2dVSFF5TG1KdmJtVlVaWGgwZFhKbExDQnFLU3dnZUhRdWMyVjBWbUZzZFdVb1dTd2dJbUp2Ym1WVVpYaDBkWEpsVTJsNlpTSXNJRkIwTWk1aWIyNWxWR1Y0ZEhWeVpWTnBlbVVwS1NBNklIaDBMbk5sZEU5d2RHbHZibUZzS0Zrc0lGQjBNaXdnSW1KdmJtVk5ZWFJ5YVdObGN5SXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJQ0VoU0NBbUppQW9TQzV0YjNKd2FFRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNGdJVDA5SUhadmFXUWdNQ0I4ZkNCSUxtMXZjbkJvUVhSMGNtbGlkWFJsY3k1dWIzSnRZV3dnSVQwOUlIWnZhV1FnTUNrZ0ppWWdXaTUxY0dSaGRHVW9jU3dnU0N3Z2Vpd2dhM1FwTENBb1IzUWdmSHdnUjJVdWNtVmpaV2wyWlZOb1lXUnZkeUFoUFQwZ2NTNXlaV05sYVhabFUyaGhaRzkzS1NBbUppQW9SMlV1Y21WalpXbDJaVk5vWVdSdmR5QTlJSEV1Y21WalpXbDJaVk5vWVdSdmR5d2dlSFF1YzJWMFZtRnNkV1VvV1N3Z0luSmxZMlZwZG1WVGFHRmtiM2NpTENCeExuSmxZMlZwZG1WVGFHRmtiM2NwS1N3Z1IzUWdKaVlnS0hoMExuTmxkRlpoYkhWbEtGa3NJQ0owYjI1bFRXRndjR2x1WjBWNGNHOXpkWEpsSWl3Z2VDNTBiMjVsVFdGd2NHbHVaMFY0Y0c5emRYSmxLU3dnUjJVdWJtVmxaSE5NYVdkb2RITWdKaVlnWTNVb1dHa3NJRnAwS1N3Z1ltVWdKaVlnZWk1bWIyY2dKaVlnV1dVdWNtVm1jbVZ6YUVadloxVnVhV1p2Y20xektGaHBMQ0JpWlNrc0lGbGxMbkpsWm5KbGMyaE5ZWFJsY21saGJGVnVhV1p2Y20xektGaHBMQ0I2TENCUUxDQkNMQ0JYS1N3Z1ltNHVkWEJzYjJGa0tGa3NJRWRsTG5WdWFXWnZjbTF6VEdsemRDd2dXR2tzSUdvcEtTd2dlaTVwYzFOb1lXUmxjazFoZEdWeWFXRnNJQ1ltSUhvdWRXNXBabTl5YlhOT1pXVmtWWEJrWVhSbElEMDlQU0FoTUNBbUppQW9ZbTR1ZFhCc2IyRmtLRmtzSUVkbExuVnVhV1p2Y20xelRHbHpkQ3dnV0drc0lHb3BMQ0I2TG5WdWFXWnZjbTF6VG1WbFpGVndaR0YwWlNBOUlDRXhLU3dnZWk1cGMxTndjbWwwWlUxaGRHVnlhV0ZzSUNZbUlIaDBMbk5sZEZaaGJIVmxLRmtzSUNKalpXNTBaWElpTENCeExtTmxiblJsY2lrc0lIaDBMbk5sZEZaaGJIVmxLRmtzSUNKdGIyUmxiRlpwWlhkTllYUnlhWGdpTENCeExtMXZaR1ZzVm1sbGQwMWhkSEpwZUNrc0lIaDBMbk5sZEZaaGJIVmxLRmtzSUNKdWIzSnRZV3hOWVhSeWFYZ2lMQ0J4TG01dmNtMWhiRTFoZEhKcGVDa3NJSGgwTG5ObGRGWmhiSFZsS0Zrc0lDSnRiMlJsYkUxaGRISnBlQ0lzSUhFdWJXRjBjbWw0VjI5eWJHUXBMQ0JyZERzS0lDQWdJSDBLSUNBZ0lHWjFibU4wYVc5dUlHTjFLRk1zSUU0cElIc0tJQ0FnSUNBZ0lDQlRMbUZ0WW1sbGJuUk1hV2RvZEVOdmJHOXlMbTVsWldSelZYQmtZWFJsSUQwZ1Rpd2dVeTVzYVdkb2RGQnliMkpsTG01bFpXUnpWWEJrWVhSbElEMGdUaXdnVXk1a2FYSmxZM1JwYjI1aGJFeHBaMmgwY3k1dVpXVmtjMVZ3WkdGMFpTQTlJRTRzSUZNdVpHbHlaV04wYVc5dVlXeE1hV2RvZEZOb1lXUnZkM011Ym1WbFpITlZjR1JoZEdVZ1BTQk9MQ0JUTG5CdmFXNTBUR2xuYUhSekxtNWxaV1J6VlhCa1lYUmxJRDBnVGl3Z1V5NXdiMmx1ZEV4cFoyaDBVMmhoWkc5M2N5NXVaV1ZrYzFWd1pHRjBaU0E5SUU0c0lGTXVjM0J2ZEV4cFoyaDBjeTV1WldWa2MxVndaR0YwWlNBOUlFNHNJRk11YzNCdmRFeHBaMmgwVTJoaFpHOTNjeTV1WldWa2MxVndaR0YwWlNBOUlFNHNJRk11Y21WamRFRnlaV0ZNYVdkb2RITXVibVZsWkhOVmNHUmhkR1VnUFNCT0xDQlRMbWhsYldsemNHaGxjbVZNYVdkb2RITXVibVZsWkhOVmNHUmhkR1VnUFNCT093b2dJQ0FnZlFvZ0lDQWdablZ1WTNScGIyNGdhSFVvVXlrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCVExtbHpUV1Z6YUV4aGJXSmxjblJOWVhSbGNtbGhiQ0I4ZkNCVExtbHpUV1Z6YUZSdmIyNU5ZWFJsY21saGJDQjhmQ0JUTG1selRXVnphRkJvYjI1blRXRjBaWEpwWVd3Z2ZId2dVeTVwYzAxbGMyaFRkR0Z1WkdGeVpFMWhkR1Z5YVdGc0lIeDhJRk11YVhOVGFHRmtiM2ROWVhSbGNtbGhiQ0I4ZkNCVExtbHpVMmhoWkdWeVRXRjBaWEpwWVd3Z0ppWWdVeTVzYVdkb2RITWdQVDA5SUNFd093b2dJQ0FnZlFvZ0lDQWdkR2hwY3k1blpYUkJZM1JwZG1WRGRXSmxSbUZqWlNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQm5Pd29nSUNBZ2ZTd2dkR2hwY3k1blpYUkJZM1JwZG1WTmFYQnRZWEJNWlhabGJDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ3T3dvZ0lDQWdmU3dnZEdocGN5NW5aWFJTWlc1a1pYSlVZWEpuWlhRZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYenNLSUNBZ0lIMHNJSFJvYVhNdWMyVjBVbVZ1WkdWeVZHRnlaMlYwVkdWNGRIVnlaWE1nUFNCbWRXNWpkR2x2YmloVExDQk9MQ0JJS1NCN0NpQWdJQ0FnSUNBZ1J5NW5aWFFvVXk1MFpYaDBkWEpsS1M1ZlgzZGxZbWRzVkdWNGRIVnlaU0E5SUU0c0lFY3VaMlYwS0ZNdVpHVndkR2hVWlhoMGRYSmxLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTQTlJRWc3Q2lBZ0lDQWdJQ0FnYkdWMElIb2dQU0JITG1kbGRDaFRLVHNLSUNBZ0lDQWdJQ0I2TGw5ZmFHRnpSWGgwWlhKdVlXeFVaWGgwZFhKbGN5QTlJQ0V3TENCNkxsOWZhR0Z6UlhoMFpYSnVZV3hVWlhoMGRYSmxjeUFtSmlBb2VpNWZYMkYxZEc5QmJHeHZZMkYwWlVSbGNIUm9RblZtWm1WeUlEMGdTQ0E5UFQwZ2RtOXBaQ0F3TENCNkxsOWZZWFYwYjBGc2JHOWpZWFJsUkdWd2RHaENkV1ptWlhJZ2ZId2dVeTUxYzJWU1pXNWtaWEpVYjFSbGVIUjFjbVVnSmlZZ0tHTnZibk52YkdVdWQyRnliaWdpY21WdVpHVnlMWFJ2TFhSbGVIUjFjbVVnWlhoMFpXNXphVzl1SUhkaGN5QmthWE5oWW14bFpDQmlaV05oZFhObElHRnVJR1Y0ZEdWeWJtRnNJSFJsZUhSMWNtVWdkMkZ6SUhCeWIzWnBaR1ZrSWlrc0lGTXVkWE5sVW1WdVpHVnlWRzlVWlhoMGRYSmxJRDBnSVRFc0lGTXVkWE5sVW1WdVpHVnlZblZtWm1WeUlEMGdJVEFwS1RzS0lDQWdJSDBzSUhSb2FYTXVjMlYwVW1WdVpHVnlWR0Z5WjJWMFJuSmhiV1ZpZFdabVpYSWdQU0JtZFc1amRHbHZiaWhUTENCT0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUVnZ1BTQkhMbWRsZENoVEtUc0tJQ0FnSUNBZ0lDQklMbDlmZDJWaVoyeEdjbUZ0WldKMVptWmxjaUE5SUU0c0lFZ3VYMTkxYzJWRVpXWmhkV3gwUm5KaGJXVmlkV1ptWlhJZ1BTQk9JRDA5UFNCMmIybGtJREE3Q2lBZ0lDQjlMQ0IwYUdsekxuTmxkRkpsYm1SbGNsUmhjbWRsZENBOUlHWjFibU4wYVc5dUtGTXNJRTRnUFNBd0xDQklJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lGOGdQU0JUTENCbklEMGdUaXdnY0NBOUlFZzdDaUFnSUNBZ0lDQWdiR1YwSUhvZ1BTQWhNRHNLSUNBZ0lDQWdJQ0JwWmlBb1V5a2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkMlVnUFNCSExtZGxkQ2hUS1RzS0lDQWdJQ0FnSUNBZ0lDQWdkMlV1WDE5MWMyVkVaV1poZFd4MFJuSmhiV1ZpZFdabVpYSWdJVDA5SUhadmFXUWdNQ0EvSUNoNFpTNWlhVzVrUm5KaGJXVmlkV1ptWlhJb016WXhOakFzSUc1MWJHd3BMQ0I2SUQwZ0lURXBJRG9nZDJVdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUlEMDlQU0IyYjJsa0lEQWdQeUJxTG5ObGRIVndVbVZ1WkdWeVZHRnlaMlYwS0ZNcElEb2dkMlV1WDE5b1lYTkZlSFJsY201aGJGUmxlSFIxY21WeklDWW1JR291Y21WaWFXNWtWR1Y0ZEhWeVpYTW9VeXdnUnk1blpYUW9VeTUwWlhoMGRYSmxLUzVmWDNkbFltZHNWR1Y0ZEhWeVpTd2dSeTVuWlhRb1V5NWtaWEIwYUZSbGVIUjFjbVVwTGw5ZmQyVmlaMnhVWlhoMGRYSmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElIRWdQU0J1ZFd4c0xDQmlaU0E5SUNFeExDQkJaU0E5SUNFeE93b2dJQ0FnSUNBZ0lHbG1JQ2hUS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCM1pURWdQU0JUTG5SbGVIUjFjbVU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDaDNaVEV1YVhORVlYUmhWR1Y0ZEhWeVpUTkVJSHg4SUhkbE1TNXBjMFJoZEdGVVpYaDBkWEpsTWtSQmNuSmhlU2tnSmlZZ0tFRmxJRDBnSVRBcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NHVWdQU0JITG1kbGRDaFRLUzVmWDNkbFltZHNSbkpoYldWaWRXWm1aWEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lGTXVhWE5YWldKSFRFTjFZbVZTWlc1a1pYSlVZWEpuWlhRZ1B5QW9jU0E5SUVobFcwNWRMQ0JpWlNBOUlDRXdLU0E2SUZNdWRYTmxVbVZ1WkdWeVluVm1abVZ5SUQ4Z2NTQTlJRWN1WjJWMEtGTXBMbDlmZDJWaVoyeE5kV3gwYVhOaGJYQnNaV1JHY21GdFpXSjFabVpsY2lBNklIRWdQU0JJWlN3Z1FTNWpiM0I1S0ZNdWRtbGxkM0J2Y25RcExDQk1MbU52Y0hrb1V5NXpZMmx6YzI5eUtTd2dTU0E5SUZNdWMyTnBjM052Y2xSbGMzUTdDaUFnSUNBZ0lDQWdmU0JsYkhObElFRXVZMjl3ZVNoRUtTNXRkV3gwYVhCc2VWTmpZV3hoY2loUUtTNW1iRzl2Y2lncExDQk1MbU52Y0hrb1ZTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1VDa3VabXh2YjNJb0tTd2dTU0E5SUVZN0NpQWdJQ0FnSUNBZ2FXWWdLSGhsTG1KcGJtUkdjbUZ0WldKMVptWmxjaWd6TmpFMk1Dd2djU2tnSmlZZ1oyVXVaSEpoZDBKMVptWmxjbk1nSmlZZ2Vpa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkMlV5SUQwZ0lURTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaFRLU0JwWmlBb1V5NXBjMWRsWWtkTVRYVnNkR2x3YkdWU1pXNWtaWEpVWVhKblpYUnpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1NHVXhJRDBnVXk1MFpYaDBkWEpsT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFOHViR1Z1WjNSb0lDRTlQU0JJWlRFdWJHVnVaM1JvSUh4OElFOWJNRjBnSVQwOUlETTJNRFkwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkVaU0E5SURBc0lIcGxJRDBnU0dVeExteGxibWQwYURzZ1JHVWdQQ0I2WlRzZ1JHVXJLeWxQVzBSbFhTQTlJRE0yTURZMElDc2dSR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1R5NXNaVzVuZEdnZ1BTQklaVEV1YkdWdVozUm9MQ0IzWlRJZ1BTQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUNoUExteGxibWQwYUNBaFBUMGdNU0I4ZkNCUFd6QmRJQ0U5UFNBek5qQTJOQ2tnSmlZZ0tFOWJNRjBnUFNBek5qQTJOQ3dnVHk1c1pXNW5kR2dnUFNBeExDQjNaVElnUFNBaE1DazdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdLRTh1YkdWdVozUm9JQ0U5UFNBeElIeDhJRTliTUYwZ0lUMDlJREV3TWprcElDWW1JQ2hQV3pCZElEMGdNVEF5T1N3Z1R5NXNaVzVuZEdnZ1BTQXhMQ0IzWlRJZ1BTQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZGxNaUFtSmlBb1oyVXVhWE5YWldKSFRESWdQeUJaTG1SeVlYZENkV1ptWlhKektFOHBJRG9nZVdVdVoyVjBLQ0pYUlVKSFRGOWtjbUYzWDJKMVptWmxjbk1pS1M1a2NtRjNRblZtWm1WeWMxZEZRa2RNS0U4cEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0hobExuWnBaWGR3YjNKMEtFRXBMQ0I0WlM1elkybHpjMjl5S0V3cExDQjRaUzV6WlhSVFkybHpjMjl5VkdWemRDaEpLU3dnWW1VcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZGxNeUE5SUVjdVoyVjBLRk11ZEdWNGRIVnlaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lGa3VabkpoYldWaWRXWm1aWEpVWlhoMGRYSmxNa1FvTXpZeE5qQXNJRE0yTURZMExDQXpOREEyT1NBcklFNHNJSGRsTXk1ZlgzZGxZbWRzVkdWNGRIVnlaU3dnU0NrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaEJaU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZDJVMElEMGdSeTVuWlhRb1V5NTBaWGgwZFhKbEtTd2dTR1V5SUQwZ1RpQjhmQ0F3T3dvZ0lDQWdJQ0FnSUNBZ0lDQlpMbVp5WVcxbFluVm1abVZ5VkdWNGRIVnlaVXhoZVdWeUtETTJNVFl3TENBek5qQTJOQ3dnZDJVMExsOWZkMlZpWjJ4VVpYaDBkWEpsTENCSUlIeDhJREFzSUVobE1pazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSGtnUFNBdE1Uc0tJQ0FnSUgwc0lIUm9hWE11Y21WaFpGSmxibVJsY2xSaGNtZGxkRkJwZUdWc2N5QTlJR1oxYm1OMGFXOXVLRk1zSUU0c0lFZ3NJSG9zSUhFc0lHSmxMQ0JCWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2doS0ZNZ0ppWWdVeTVwYzFkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbkpsWVdSU1pXNWtaWEpVWVhKblpYUlFhWGhsYkhNNklISmxibVJsY2xSaGNtZGxkQ0JwY3lCdWIzUWdWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElFbGxJRDBnUnk1blpYUW9VeWt1WDE5M1pXSm5iRVp5WVcxbFluVm1abVZ5T3dvZ0lDQWdJQ0FnSUdsbUlDaFRMbWx6VjJWaVIweERkV0psVW1WdVpHVnlWR0Z5WjJWMElDWW1JRUZsSUNFOVBTQjJiMmxrSURBZ0ppWWdLRWxsSUQwZ1NXVmJRV1ZkS1N3Z1NXVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2VHVXVZbWx1WkVaeVlXMWxZblZtWm1WeUtETTJNVFl3TENCSlpTazdDaUFnSUNBZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZDJVZ1BTQlRMblJsZUhSMWNtVXNJRWhsSUQwZ2QyVXVabTl5YldGMExDQkVaU0E5SUhkbExuUjVjR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1NHVWdJVDA5SUdOMElDWW1JSFJsTG1OdmJuWmxjblFvU0dVcElDRTlQU0JaTG1kbGRGQmhjbUZ0WlhSbGNpZ3pOVGN6T1NrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlMbkpsWVdSU1pXNWtaWEpVWVhKblpYUlFhWGhsYkhNNklISmxibVJsY2xSaGNtZGxkQ0JwY3lCdWIzUWdhVzRnVWtkQ1FTQnZjaUJwYlhCc1pXMWxiblJoZEdsdmJpQmtaV1pwYm1Wa0lHWnZjbTFoZEM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZW1VZ1BTQkVaU0E5UFQwZ2EyNGdKaVlnS0hsbExtaGhjeWdpUlZoVVgyTnZiRzl5WDJKMVptWmxjbDlvWVd4bVgyWnNiMkYwSWlrZ2ZId2daMlV1YVhOWFpXSkhURElnSmlZZ2VXVXVhR0Z6S0NKRldGUmZZMjlzYjNKZlluVm1abVZ5WDJac2IyRjBJaWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFUmxJQ0U5UFNCeWJpQW1KaUIwWlM1amIyNTJaWEowS0VSbEtTQWhQVDBnV1M1blpYUlFZWEpoYldWMFpYSW9NelUzTXpncElDWW1JQ0VvUkdVZ1BUMDlJRzV1SUNZbUlDaG5aUzVwYzFkbFlrZE1NaUI4ZkNCNVpTNW9ZWE1vSWs5RlUxOTBaWGgwZFhKbFgyWnNiMkYwSWlrZ2ZId2dlV1V1YUdGektDSlhSVUpIVEY5amIyeHZjbDlpZFdabVpYSmZabXh2WVhRaUtTa3BJQ1ltSUNGNlpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEl1Y21WaFpGSmxibVJsY2xSaGNtZGxkRkJwZUdWc2N6b2djbVZ1WkdWeVZHRnlaMlYwSUdseklHNXZkQ0JwYmlCVmJuTnBaMjVsWkVKNWRHVlVlWEJsSUc5eUlHbHRjR3hsYldWdWRHRjBhVzl1SUdSbFptbHVaV1FnZEhsd1pTNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JaTG1Ob1pXTnJSbkpoYldWaWRXWm1aWEpUZEdGMGRYTW9Nell4TmpBcElEMDlQU0F6TmpBMU15QS9JRTRnUGowZ01DQW1KaUJPSUR3OUlGTXVkMmxrZEdnZ0xTQjZJQ1ltSUVnZ1BqMGdNQ0FtSmlCSUlEdzlJRk11YUdWcFoyaDBJQzBnY1NBbUppQlpMbkpsWVdSUWFYaGxiSE1vVGl3Z1NDd2dlaXdnY1N3Z2RHVXVZMjl1ZG1WeWRDaElaU2tzSUhSbExtTnZiblpsY25Rb1JHVXBMQ0JpWlNrZ09pQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxuSmxZV1JTWlc1a1pYSlVZWEpuWlhSUWFYaGxiSE02SUhKbFlXUlFhWGhsYkhNZ1puSnZiU0J5Wlc1a1pYSlVZWEpuWlhRZ1ptRnBiR1ZrTGlCR2NtRnRaV0oxWm1abGNpQnViM1FnWTI5dGNHeGxkR1V1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWm1sdVlXeHNlWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCM1pURWdQU0JmSUNFOVBTQnVkV3hzSUQ4Z1J5NW5aWFFvWHlrdVgxOTNaV0puYkVaeVlXMWxZblZtWm1WeUlEb2diblZzYkRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhobExtSnBibVJHY21GdFpXSjFabVpsY2lnek5qRTJNQ3dnZDJVeEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzSUhSb2FYTXVZMjl3ZVVaeVlXMWxZblZtWm1WeVZHOVVaWGgwZFhKbElEMGdablZ1WTNScGIyNG9VeXdnVGl3Z1NDQTlJREFwSUhzS0lDQWdJQ0FnSUNCcFppQW9UaTVwYzBaeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlNBaFBUMGdJVEFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dZMjl3ZVVaeVlXMWxZblZtWm1WeVZHOVVaWGgwZFhKbEtDa2dZMkZ1SUc5dWJIa2dZbVVnZFhObFpDQjNhWFJvSUVaeVlXMWxZblZtWm1WeVZHVjRkSFZ5WlM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2VpQTlJRTFoZEdndWNHOTNLRElzSUMxSUtTd2djU0E5SUUxaGRHZ3VabXh2YjNJb1RpNXBiV0ZuWlM1M2FXUjBhQ0FxSUhvcExDQmlaU0E5SUUxaGRHZ3VabXh2YjNJb1RpNXBiV0ZuWlM1b1pXbG5hSFFnS2lCNktUc0tJQ0FnSUNBZ0lDQnFMbk5sZEZSbGVIUjFjbVV5UkNoT0xDQXdLU3dnV1M1amIzQjVWR1Y0VTNWaVNXMWhaMlV5UkNnek5UVXpMQ0JJTENBd0xDQXdMQ0JUTG5nc0lGTXVlU3dnY1N3Z1ltVXBMQ0I0WlM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxtTnZjSGxVWlhoMGRYSmxWRzlVWlhoMGRYSmxJRDBnWm5WdVkzUnBiMjRvVXl3Z1Rpd2dTQ3dnZWlBOUlEQXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2NTQTlJRTR1YVcxaFoyVXVkMmxrZEdnc0lHSmxJRDBnVGk1cGJXRm5aUzVvWldsbmFIUXNJRUZsSUQwZ2RHVXVZMjl1ZG1WeWRDaElMbVp2Y20xaGRDa3NJRWxsSUQwZ2RHVXVZMjl1ZG1WeWRDaElMblI1Y0dVcE93b2dJQ0FnSUNBZ0lHb3VjMlYwVkdWNGRIVnlaVEpFS0Vnc0lEQXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETTNORFF3TENCSUxtWnNhWEJaS1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TnpRME1Td2dTQzV3Y21WdGRXeDBhWEJzZVVGc2NHaGhLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pNekUzTENCSUxuVnVjR0ZqYTBGc2FXZHViV1Z1ZENrc0lFNHVhWE5FWVhSaFZHVjRkSFZ5WlNBL0lGa3VkR1Y0VTNWaVNXMWhaMlV5UkNnek5UVXpMQ0I2TENCVExuZ3NJRk11ZVN3Z2NTd2dZbVVzSUVGbExDQkpaU3dnVGk1cGJXRm5aUzVrWVhSaEtTQTZJRTR1YVhORGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNBL0lGa3VZMjl0Y0hKbGMzTmxaRlJsZUZOMVlrbHRZV2RsTWtRb016VTFNeXdnZWl3Z1V5NTRMQ0JUTG5rc0lFNHViV2x3YldGd2Mxc3dYUzUzYVdSMGFDd2dUaTV0YVhCdFlYQnpXekJkTG1obGFXZG9kQ3dnUVdVc0lFNHViV2x3YldGd2Mxc3dYUzVrWVhSaEtTQTZJRmt1ZEdWNFUzVmlTVzFoWjJVeVJDZ3pOVFV6TENCNkxDQlRMbmdzSUZNdWVTd2dRV1VzSUVsbExDQk9MbWx0WVdkbEtTd2dlaUE5UFQwZ01DQW1KaUJJTG1kbGJtVnlZWFJsVFdsd2JXRndjeUFtSmlCWkxtZGxibVZ5WVhSbFRXbHdiV0Z3S0RNMU5UTXBMQ0I0WlM1MWJtSnBibVJVWlhoMGRYSmxLQ2s3Q2lBZ0lDQjlMQ0IwYUdsekxtTnZjSGxVWlhoMGRYSmxWRzlVWlhoMGRYSmxNMFFnUFNCbWRXNWpkR2x2YmloVExDQk9MQ0JJTENCNkxDQnhJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2g0TG1selYyVmlSMHd4VW1WdVpHVnlaWElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeUxtTnZjSGxVWlhoMGRYSmxWRzlVWlhoMGRYSmxNMFE2SUdOaGJpQnZibXg1SUdKbElIVnpaV1FnZDJsMGFDQlhaV0pIVERJdUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHSmxJRDBnVXk1dFlYZ3VlQ0F0SUZNdWJXbHVMbmdnS3lBeExDQkJaU0E5SUZNdWJXRjRMbmtnTFNCVExtMXBiaTU1SUNzZ01Td2dTV1VnUFNCVExtMWhlQzU2SUMwZ1V5NXRhVzR1ZWlBcklERXNJSGRsSUQwZ2RHVXVZMjl1ZG1WeWRDaDZMbVp2Y20xaGRDa3NJRWhsSUQwZ2RHVXVZMjl1ZG1WeWRDaDZMblI1Y0dVcExDQkVaVHNLSUNBZ0lDQWdJQ0JwWmlBb2VpNXBjMFJoZEdGVVpYaDBkWEpsTTBRcElHb3VjMlYwVkdWNGRIVnlaVE5FS0hvc0lEQXBMQ0JFWlNBOUlETXlPRGM1T3dvZ0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0hvdWFYTkVZWFJoVkdWNGRIVnlaVEpFUVhKeVlYa3BJR291YzJWMFZHVjRkSFZ5WlRKRVFYSnlZWGtvZWl3Z01Da3NJRVJsSUQwZ016VTROalk3Q2lBZ0lDQWdJQ0FnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjaTVqYjNCNVZHVjRkSFZ5WlZSdlZHVjRkSFZ5WlRORU9pQnZibXg1SUhOMWNIQnZjblJ6SUZSSVVrVkZMa1JoZEdGVVpYaDBkWEpsTTBRZ1lXNWtJRlJJVWtWRkxrUmhkR0ZVWlhoMGRYSmxNa1JCY25KaGVTNGlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCWkxuQnBlR1ZzVTNSdmNtVnBLRE0zTkRRd0xDQjZMbVpzYVhCWktTd2dXUzV3YVhobGJGTjBiM0psYVNnek56UTBNU3dnZWk1d2NtVnRkV3gwYVhCc2VVRnNjR2hoS1N3Z1dTNXdhWGhsYkZOMGIzSmxhU2d6TXpFM0xDQjZMblZ1Y0dGamEwRnNhV2R1YldWdWRDazdDaUFnSUNBZ0lDQWdiR1YwSUhwbElEMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016TXhOQ2tzSUdwbElEMGdXUzVuWlhSUVlYSmhiV1YwWlhJb016STROemdwTENCU2JpQTlJRmt1WjJWMFVHRnlZVzFsZEdWeUtETXpNVFlwTENCbGFTQTlJRmt1WjJWMFVHRnlZVzFsZEdWeUtETXpNVFVwTENCSFpTQTlJRmt1WjJWMFVHRnlZVzFsZEdWeUtETXlPRGMzS1N3Z1NIUWdQU0JJTG1selEyOXRjSEpsYzNObFpGUmxlSFIxY21VZ1B5QklMbTFwY0cxaGNITmJNRjBnT2lCSUxtbHRZV2RsT3dvZ0lDQWdJQ0FnSUZrdWNHbDRaV3hUZEc5eVpXa29Nek14TkN3Z1NIUXVkMmxrZEdncExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNeU9EYzRMQ0JJZEM1b1pXbG5hSFFwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE16TVRZc0lGTXViV2x1TG5ncExDQlpMbkJwZUdWc1UzUnZjbVZwS0RNek1UVXNJRk11YldsdUxua3BMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXlPRGMzTENCVExtMXBiaTU2S1N3Z1NDNXBjMFJoZEdGVVpYaDBkWEpsSUh4OElFZ3VhWE5FWVhSaFZHVjRkSFZ5WlRORUlEOGdXUzUwWlhoVGRXSkpiV0ZuWlRORUtFUmxMQ0J4TENCT0xuZ3NJRTR1ZVN3Z1RpNTZMQ0JpWlN3Z1FXVXNJRWxsTENCM1pTd2dTR1VzSUVoMExtUmhkR0VwSURvZ1NDNXBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxJRDhnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjaTVqYjNCNVZHVjRkSFZ5WlZSdlZHVjRkSFZ5WlRORU9pQjFiblJsYzNSbFpDQnpkWEJ3YjNKMElHWnZjaUJqYjIxd2NtVnpjMlZrSUhOeVkxUmxlSFIxY21VdUlpa3NJRmt1WTI5dGNISmxjM05sWkZSbGVGTjFZa2x0WVdkbE0wUW9SR1VzSUhFc0lFNHVlQ3dnVGk1NUxDQk9Mbm9zSUdKbExDQkJaU3dnU1dVc0lIZGxMQ0JJZEM1a1lYUmhLU2tnT2lCWkxuUmxlRk4xWWtsdFlXZGxNMFFvUkdVc0lIRXNJRTR1ZUN3Z1RpNTVMQ0JPTG5vc0lHSmxMQ0JCWlN3Z1NXVXNJSGRsTENCSVpTd2dTSFFwTENCWkxuQnBlR1ZzVTNSdmNtVnBLRE16TVRRc0lIcGxLU3dnV1M1d2FYaGxiRk4wYjNKbGFTZ3pNamczT0N3Z2FtVXBMQ0JaTG5CcGVHVnNVM1J2Y21WcEtETXpNVFlzSUZKdUtTd2dXUzV3YVhobGJGTjBiM0psYVNnek16RTFMQ0JsYVNrc0lGa3VjR2w0Wld4VGRHOXlaV2tvTXpJNE56Y3NJRWRsS1N3Z2NTQTlQVDBnTUNBbUppQjZMbWRsYm1WeVlYUmxUV2x3YldGd2N5QW1KaUJaTG1kbGJtVnlZWFJsVFdsd2JXRndLRVJsS1N3Z2VHVXVkVzVpYVc1a1ZHVjRkSFZ5WlNncE93b2dJQ0FnZlN3Z2RHaHBjeTVwYm1sMFZHVjRkSFZ5WlNBOUlHWjFibU4wYVc5dUtGTXBJSHNLSUNBZ0lDQWdJQ0JxTG5ObGRGUmxlSFIxY21VeVJDaFRMQ0F3S1N3Z2VHVXVkVzVpYVc1a1ZHVjRkSFZ5WlNncE93b2dJQ0FnZlN3Z2RHaHBjeTV5WlhObGRGTjBZWFJsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdaeUE5SURBc0lIQWdQU0F3TENCZklEMGdiblZzYkN3Z2VHVXVjbVZ6WlhRb0tTd2dVaTV5WlhObGRDZ3BPd29nSUNBZ2ZTd2dkSGx3Wlc5bUlGOWZWRWhTUlVWZlJFVldWRTlQVEZOZlh5QThJQ0oxSWlBbUppQmZYMVJJVWtWRlgwUkZWbFJQVDB4VFgxOHVaR2x6Y0dGMFkyaEZkbVZ1ZENodVpYY2dRM1Z6ZEc5dFJYWmxiblFvSW05aWMyVnlkbVVpTENCN0NpQWdJQ0FnSUNBZ1pHVjBZV2xzT2lCMGFHbHpDaUFnSUNCOUtTazdDbjBLY1dVdWNISnZkRzkwZVhCbExtbHpWMlZpUjB4U1pXNWtaWEpsY2lBOUlDRXdPd3AyWVhJZ1gyZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklIRmxJSHNLZlRzS1gyZ3VjSEp2ZEc5MGVYQmxMbWx6VjJWaVIwd3hVbVZ1WkdWeVpYSWdQU0FoTURzS2RtRnlJRTV5SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDQTlJREkxWlMwMUtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0FpSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTaGxLU3dnZEdocGN5NWtaVzV6YVhSNUlEMGdkRHNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1RuSW9kR2hwY3k1amIyeHZjaXdnZEdocGN5NWtaVzV6YVhSNUtUc0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpUm05blJYaHdNaUlzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lCMGFHbHpMbU52Ykc5eUxtZGxkRWhsZUNncExBb2dJQ0FnSUNBZ0lDQWdJQ0JrWlc1emFYUjVPaUIwYUdsekxtUmxibk5wZEhrS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFwOU93cE9jaTV3Y205MGIzUjVjR1V1YVhOR2IyZEZlSEF5SUQwZ0lUQTdDblpoY2lCQ2NpQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeExDQnVJRDBnTVdVektYc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0FpSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTaGxLU3dnZEdocGN5NXVaV0Z5SUQwZ2RDd2dkR2hwY3k1bVlYSWdQU0J1T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkNjaWgwYUdsekxtTnZiRzl5TENCMGFHbHpMbTVsWVhJc0lIUm9hWE11Wm1GeUtUc0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdld29nSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFpUm05bklpd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSFJvYVhNdVkyOXNiM0l1WjJWMFNHVjRLQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxZWEk2SUhSb2FYTXVibVZoY2l3S0lDQWdJQ0FnSUNBZ0lDQWdabUZ5T2lCMGFHbHpMbVpoY2dvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q24wN0NrSnlMbkJ5YjNSdmRIbHdaUzVwYzBadlp5QTlJQ0V3T3dwMllYSWdibThnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0NsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMk5sYm1VaUxDQjBhR2x6TG1KaFkydG5jbTkxYm1RZ1BTQnVkV3hzTENCMGFHbHpMbVZ1ZG1seWIyNXRaVzUwSUQwZ2JuVnNiQ3dnZEdocGN5NW1iMmNnUFNCdWRXeHNMQ0IwYUdsekxtOTJaWEp5YVdSbFRXRjBaWEpwWVd3Z1BTQnVkV3hzTENCMGFHbHpMbUYxZEc5VmNHUmhkR1VnUFNBaE1Dd2dkSGx3Wlc5bUlGOWZWRWhTUlVWZlJFVldWRTlQVEZOZlh5QThJQ0oxSWlBbUppQmZYMVJJVWtWRlgwUkZWbFJQVDB4VFgxOHVaR2x6Y0dGMFkyaEZkbVZ1ZENodVpYY2dRM1Z6ZEc5dFJYWmxiblFvSW05aWMyVnlkbVVpTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR1JsZEdGcGJEb2dkR2hwY3dvZ0lDQWdJQ0FnSUgwcEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVc0lIUXBMQ0JsTG1KaFkydG5jbTkxYm1RZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVltRmphMmR5YjNWdVpDQTlJR1V1WW1GamEyZHliM1Z1WkM1amJHOXVaU2dwS1N3Z1pTNWxiblpwY205dWJXVnVkQ0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVsYm5acGNtOXViV1Z1ZENBOUlHVXVaVzUyYVhKdmJtMWxiblF1WTJ4dmJtVW9LU2tzSUdVdVptOW5JQ0U5UFNCdWRXeHNJQ1ltSUNoMGFHbHpMbVp2WnlBOUlHVXVabTluTG1Oc2IyNWxLQ2twTENCbExtOTJaWEp5YVdSbFRXRjBaWEpwWVd3Z0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdWIzWmxjbkpwWkdWTllYUmxjbWxoYkNBOUlHVXViM1psY25KcFpHVk5ZWFJsY21saGJDNWpiRzl1WlNncEtTd2dkR2hwY3k1aGRYUnZWWEJrWVhSbElEMGdaUzVoZFhSdlZYQmtZWFJsTENCMGFHbHpMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0JsTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1adlp5QWhQVDBnYm5Wc2JDQW1KaUFvZEM1dlltcGxZM1F1Wm05bklEMGdkR2hwY3k1bWIyY3VkRzlLVTA5T0tDa3BMQ0IwT3dvZ0lDQWdmUXA5T3dwdWJ5NXdjbTkwYjNSNWNHVXVhWE5UWTJWdVpTQTlJQ0V3T3dwMllYSWdKRzRnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1GeWNtRjVJRDBnWlN3Z2RHaHBjeTV6ZEhKcFpHVWdQU0IwTENCMGFHbHpMbU52ZFc1MElEMGdaU0FoUFQwZ2RtOXBaQ0F3SUQ4Z1pTNXNaVzVuZEdnZ0x5QjBJRG9nTUN3Z2RHaHBjeTUxYzJGblpTQTlJR2h5TENCMGFHbHpMblZ3WkdGMFpWSmhibWRsSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J2Wm1aelpYUTZJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lBdE1Rb2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWRtVnljMmx2YmlBOUlEQXNJSFJvYVhNdWRYVnBaQ0E5SUVWMEtDazdDaUFnSUNCOUNpQWdJQ0J2YmxWd2JHOWhaRU5oYkd4aVlXTnJLQ2tnZTMwS0lDQWdJSE5sZENCdVpXVmtjMVZ3WkdGMFpTaGxLU0I3Q2lBZ0lDQWdJQ0FnWlNBOVBUMGdJVEFnSmlZZ2RHaHBjeTUyWlhKemFXOXVLeXM3Q2lBZ0lDQjlDaUFnSUNCelpYUlZjMkZuWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZFhOaFoyVWdQU0JsTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYSnlZWGtnUFNCdVpYY2daUzVoY25KaGVTNWpiMjV6ZEhKMVkzUnZjaWhsTG1GeWNtRjVLU3dnZEdocGN5NWpiM1Z1ZENBOUlHVXVZMjkxYm5Rc0lIUm9hWE11YzNSeWFXUmxJRDBnWlM1emRISnBaR1VzSUhSb2FYTXVkWE5oWjJVZ1BTQmxMblZ6WVdkbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlVUYwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCbElDbzlJSFJvYVhNdWMzUnlhV1JsTENCdUlDbzlJSFF1YzNSeWFXUmxPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0IwYUdsekxuTjBjbWxrWlRzZ2FTQThJSEk3SUdrckt5bDBhR2x6TG1GeWNtRjVXMlVnS3lCcFhTQTlJSFF1WVhKeVlYbGJiaUFySUdsZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WVhKeVlYa3VjMlYwS0dVc0lIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb1pTa2dld29nSUNBZ0lDQWdJR1V1WVhKeVlYbENkV1ptWlhKeklEMDlQU0IyYjJsa0lEQWdKaVlnS0dVdVlYSnlZWGxDZFdabVpYSnpJRDBnZTMwcExDQjBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkNBOVBUMGdkbTlwWkNBd0lDWW1JQ2gwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpDQTlJRVYwS0NrcExDQmxMbUZ5Y21GNVFuVm1abVZ5YzF0MGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaRjBnUFQwOUlIWnZhV1FnTUNBbUppQW9aUzVoY25KaGVVSjFabVpsY25OYmRHaHBjeTVoY25KaGVTNWlkV1ptWlhJdVgzVjFhV1JkSUQwZ2RHaHBjeTVoY25KaGVTNXpiR2xqWlNnd0tTNWlkV1ptWlhJcE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2JtVjNJSFJvYVhNdVlYSnlZWGt1WTI5dWMzUnlkV04wYjNJb1pTNWhjbkpoZVVKMVptWmxjbk5iZEdocGN5NWhjbkpoZVM1aWRXWm1aWEl1WDNWMWFXUmRLU3dnYmlBOUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLSFFzSUhSb2FYTXVjM1J5YVdSbEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpaWFJWYzJGblpTaDBhR2x6TG5WellXZGxLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHOXVWWEJzYjJGa0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dmJsVndiRzloWkVOaGJHeGlZV05ySUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIUnZTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZWEp5WVhsQ2RXWm1aWEp6SUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1WVhKeVlYbENkV1ptWlhKeklEMGdlMzBwTENCMGFHbHpMbUZ5Y21GNUxtSjFabVpsY2k1ZmRYVnBaQ0E5UFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG1GeWNtRjVMbUoxWm1abGNpNWZkWFZwWkNBOUlFVjBLQ2twTENCbExtRnljbUY1UW5WbVptVnljMXQwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpGMGdQVDA5SUhadmFXUWdNQ0FtSmlBb1pTNWhjbkpoZVVKMVptWmxjbk5iZEdocGN5NWhjbkpoZVM1aWRXWm1aWEl1WDNWMWFXUmRJRDBnUVhKeVlYa3VjSEp2ZEc5MGVYQmxMbk5zYVdObExtTmhiR3dvYm1WM0lGVnBiblF6TWtGeWNtRjVLSFJvYVhNdVlYSnlZWGt1WW5WbVptVnlLU2twTENCN0NpQWdJQ0FnSUNBZ0lDQWdJSFYxYVdRNklIUm9hWE11ZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnWW5WbVptVnlPaUIwYUdsekxtRnljbUY1TG1KMVptWmxjaTVmZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dkR2hwY3k1aGNuSmhlUzVqYjI1emRISjFZM1J2Y2k1dVlXMWxMQW9nSUNBZ0lDQWdJQ0FnSUNCemRISnBaR1U2SUhSb2FYTXVjM1J5YVdSbENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS2ZUc0tKRzR1Y0hKdmRHOTBlWEJsTG1selNXNTBaWEpzWldGMlpXUkNkV1ptWlhJZ1BTQWhNRHNLZG1GeUlFdGxJRDBnYm1WM0lFMHNJRk51SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVNBOUlDRXhLWHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWhiV1VnUFNBaUlpd2dkR2hwY3k1a1lYUmhJRDBnWlN3Z2RHaHBjeTVwZEdWdFUybDZaU0E5SUhRc0lIUm9hWE11YjJabWMyVjBJRDBnYml3Z2RHaHBjeTV1YjNKdFlXeHBlbVZrSUQwZ2FTQTlQVDBnSVRBN0NpQWdJQ0I5Q2lBZ0lDQm5aWFFnWTI5MWJuUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHRjBZUzVqYjNWdWREc0tJQ0FnSUgwS0lDQWdJR2RsZENCaGNuSmhlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVPd29nSUNBZ2ZRb2dJQ0FnYzJWMElHNWxaV1J6VlhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbVJoZEdFdWJtVmxaSE5WY0dSaGRHVWdQU0JsT3dvZ0lDQWdmUW9nSUNBZ1lYQndiSGxOWVhSeWFYZzBLR1VwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdMQ0J1SUQwZ2RHaHBjeTVrWVhSaExtTnZkVzUwT3lCMElEd2dianNnZENzcktVdGxMbmdnUFNCMGFHbHpMbWRsZEZnb2RDa3NJRXRsTG5rZ1BTQjBhR2x6TG1kbGRGa29kQ2tzSUV0bExub2dQU0IwYUdsekxtZGxkRm9vZENrc0lFdGxMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkR2hwY3k1elpYUllXVm9vZEN3Z1MyVXVlQ3dnUzJVdWVTd2dTMlV1ZWlrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVNXZjbTFoYkUxaGRISnBlQ2hsS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11WTI5MWJuUTdJSFFnUENCdU95QjBLeXNwUzJVdWVDQTlJSFJvYVhNdVoyVjBXQ2gwS1N3Z1MyVXVlU0E5SUhSb2FYTXVaMlYwV1NoMEtTd2dTMlV1ZWlBOUlIUm9hWE11WjJWMFdpaDBLU3dnUzJVdVlYQndiSGxPYjNKdFlXeE5ZWFJ5YVhnb1pTa3NJSFJvYVhNdWMyVjBXRmxhS0hRc0lFdGxMbmdzSUV0bExua3NJRXRsTG5vcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEhKaGJuTm1iM0p0UkdseVpXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdkR2hwY3k1amIzVnVkRHNnZENBOElHNDdJSFFyS3lsTFpTNTRJRDBnZEdocGN5NW5aWFJZS0hRcExDQkxaUzU1SUQwZ2RHaHBjeTVuWlhSWktIUXBMQ0JMWlM1NklEMGdkR2hwY3k1blpYUmFLSFFwTENCTFpTNTBjbUZ1YzJadmNtMUVhWEpsWTNScGIyNG9aU2tzSUhSb2FYTXVjMlYwV0ZsYUtIUXNJRXRsTG5nc0lFdGxMbmtzSUV0bExub3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBXQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDb2dkR2hwY3k1a1lYUmhMbk4wY21sa1pTQXJJSFJvYVhNdWIyWm1jMlYwWFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJaS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRZ0t5QXhYU0E5SUhRc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUmFLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFnS3lBeVhTQTlJSFFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS2lCMGFHbHpMbVJoZEdFdWMzUnlhV1JsSUNzZ2RHaHBjeTV2Wm1aelpYUWdLeUF6WFNBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJZS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFJkT3dvZ0lDQWdmUW9nSUNBZ1oyVjBXU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNvZ2RHaHBjeTVrWVhSaExuTjBjbWxrWlNBcklIUm9hWE11YjJabWMyVjBJQ3NnTVYwN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJhS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWVhSaExtRnljbUY1VzJVZ0tpQjBhR2x6TG1SaGRHRXVjM1J5YVdSbElDc2dkR2hwY3k1dlptWnpaWFFnS3lBeVhUc0tJQ0FnSUgwS0lDQWdJR2RsZEZjb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZENBcklETmRPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdGa29aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJRDBnWlNBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkQ3dnZEdocGN5NWtZWFJoTG1GeWNtRjVXMlVnS3lBd1hTQTlJSFFzSUhSb2FYTXVaR0YwWVM1aGNuSmhlVnRsSUNzZ01WMGdQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFdGbGFLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOUlHVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNRjBnUFNCMExDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXJJREZkSUQwZ2Jpd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLeUF5WFNBOUlHa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJZV1ZwWEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOUlHVWdLaUIwYUdsekxtUmhkR0V1YzNSeWFXUmxJQ3NnZEdocGN5NXZabVp6WlhRc0lIUm9hWE11WkdGMFlTNWhjbkpoZVZ0bElDc2dNRjBnUFNCMExDQjBhR2x6TG1SaGRHRXVZWEp5WVhsYlpTQXJJREZkSUQwZ2Jpd2dkR2hwY3k1a1lYUmhMbUZ5Y21GNVcyVWdLeUF5WFNBOUlHa3NJSFJvYVhNdVpHRjBZUzVoY25KaGVWdGxJQ3NnTTEwZ1BTQnlMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNobElEMDlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1c2IyY29JbFJJVWtWRkxrbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbExtTnNiMjVsS0NrNklFTnNiMjVwYm1jZ1lXNGdhVzUwWlhKc1lYWmxaQ0JpZFdabVpYSWdZWFIwY21saWRYUmxJSGRwYkd3Z1pHVnBiblJsY214bFlYWmxJR0oxWm1abGNpQmtZWFJoTGlJcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2dkR2hwY3k1amIzVnVkRHNnYmlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JpQXFJSFJvYVhNdVpHRjBZUzV6ZEhKcFpHVWdLeUIwYUdsekxtOW1abk5sZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQTdJSElnUENCMGFHbHpMbWwwWlcxVGFYcGxPeUJ5S3lzcGRDNXdkWE5vS0hSb2FYTXVaR0YwWVM1aGNuSmhlVnRwSUNzZ2NsMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVldVb2JtVjNJSFJvYVhNdVlYSnlZWGt1WTI5dWMzUnlkV04wYjNJb2RDa3NJSFJvYVhNdWFYUmxiVk5wZW1Vc0lIUm9hWE11Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhKbGRIVnliaUJsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5Y3lBOVBUMGdkbTlwWkNBd0lDWW1JQ2hsTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5Y3lBOUlIdDlLU3dnWlM1cGJuUmxjbXhsWVhabFpFSjFabVpsY25OYmRHaHBjeTVrWVhSaExuVjFhV1JkSUQwOVBTQjJiMmxrSURBZ0ppWWdLR1V1YVc1MFpYSnNaV0YyWldSQ2RXWm1aWEp6VzNSb2FYTXVaR0YwWVM1MWRXbGtYU0E5SUhSb2FYTXVaR0YwWVM1amJHOXVaU2hsS1Nrc0lHNWxkeUJUYmlobExtbHVkR1Z5YkdWaGRtVmtRblZtWm1WeWMxdDBhR2x6TG1SaGRHRXVkWFZwWkYwc0lIUm9hWE11YVhSbGJWTnBlbVVzSUhSb2FYTXViMlptYzJWMExDQjBhR2x6TG01dmNtMWhiR2w2WldRcE93b2dJQ0FnZlFvZ0lDQWdkRzlLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb1pTQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWJHOW5LQ0pVU0ZKRlJTNUpiblJsY214bFlYWmxaRUoxWm1abGNrRjBkSEpwWW5WMFpTNTBiMHBUVDA0b0tUb2dVMlZ5YVdGc2FYcHBibWNnWVc0Z2FXNTBaWEpzWVhabFpDQmlkV1ptWlhJZ1lYUjBjbWxpZFhSbElIZHBiR3dnWkdWcGJuUmxjbXhsWVhabElHSjFabVpsY2lCa1lYUmhMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdPeUJ1SUR3Z2RHaHBjeTVqYjNWdWREc2diaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYmlBcUlIUm9hWE11WkdGMFlTNXpkSEpwWkdVZ0t5QjBhR2x6TG05bVpuTmxkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SURBN0lISWdQQ0IwYUdsekxtbDBaVzFUYVhwbE95QnlLeXNwZEM1d2RYTm9LSFJvYVhNdVpHRjBZUzVoY25KaGVWdHBJQ3NnY2wwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGRHVnRVMmw2WlRvZ2RHaHBjeTVwZEdWdFUybDZaU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFI1Y0dVNklIUm9hWE11WVhKeVlYa3VZMjl1YzNSeWRXTjBiM0l1Ym1GdFpTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRnljbUY1T2lCMExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOXliV0ZzYVhwbFpEb2dkR2hwY3k1dWIzSnRZV3hwZW1Wa0NpQWdJQ0FnSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSEpsZEhWeWJpQmxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljeUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaGxMbWx1ZEdWeWJHVmhkbVZrUW5WbVptVnljeUE5SUh0OUtTd2daUzVwYm5SbGNteGxZWFpsWkVKMVptWmxjbk5iZEdocGN5NWtZWFJoTG5WMWFXUmRJRDA5UFNCMmIybGtJREFnSmlZZ0tHVXVhVzUwWlhKc1pXRjJaV1JDZFdabVpYSnpXM1JvYVhNdVpHRjBZUzUxZFdsa1hTQTlJSFJvYVhNdVpHRjBZUzUwYjBwVFQwNG9aU2twTENCN0NpQWdJQ0FnSUNBZ0lDQWdJR2x6U1c1MFpYSnNaV0YyWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1U2SUNFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwZEdWdFUybDZaVG9nZEdocGN5NXBkR1Z0VTJsNlpTd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdGMFlUb2dkR2hwY3k1a1lYUmhMblYxYVdRc0NpQWdJQ0FnSUNBZ0lDQWdJRzltWm5ObGREb2dkR2hwY3k1dlptWnpaWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNXZjbTFoYkdsNlpXUTZJSFJvYVhNdWJtOXliV0ZzYVhwbFpBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNuMDdDbE51TG5CeWIzUnZkSGx3WlM1cGMwbHVkR1Z5YkdWaGRtVmtRblZtWm1WeVFYUjBjbWxpZFhSbElEMGdJVEE3Q25aaGNpQnBieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdaSFFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVM0J5YVhSbFRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnNjR2hoVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV5YjNSaGRHbHZiaUE5SURBc0lIUm9hWE11YzJsNlpVRjBkR1Z1ZFdGMGFXOXVJRDBnSVRBc0lIUm9hWE11ZEhKaGJuTndZWEpsYm5RZ1BTQWhNQ3dnZEdocGN5NXpaWFJXWVd4MVpYTW9aU2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1amIyeHZjaTVqYjNCNUtHVXVZMjlzYjNJcExDQjBhR2x6TG0xaGNDQTlJR1V1YldGd0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ1pTNWhiSEJvWVUxaGNDd2dkR2hwY3k1eWIzUmhkR2x2YmlBOUlHVXVjbTkwWVhScGIyNHNJSFJvYVhNdWMybDZaVUYwZEdWdWRXRjBhVzl1SUQwZ1pTNXphWHBsUVhSMFpXNTFZWFJwYjI0c0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q21sdkxuQnliM1J2ZEhsd1pTNXBjMU53Y21sMFpVMWhkR1Z5YVdGc0lEMGdJVEE3Q25aaGNpQm5hU3dnVVdrZ1BTQnVaWGNnVFN3Z2VHa2dQU0J1WlhjZ1RTd2dlV2tnUFNCdVpYY2dUU3dnZG1rZ1BTQnVaWGNnV0N3Z1Mya2dQU0J1WlhjZ1dDd2dUV2dnUFNCdVpYY2djR1VzSUdoeklEMGdibVYzSUUwc0lHVnlJRDBnYm1WM0lFMHNJSFZ6SUQwZ2JtVjNJRTBzSUdwc0lEMGdibVYzSUZnc0lIRnZJRDBnYm1WM0lGZ3NJRkZzSUQwZ2JtVjNJRmdzSUhKdklEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCT1pTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMblI1Y0dVZ1BTQWlVM0J5YVhSbElpd2daMmtnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JuYVNBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhRZ1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDMHVOU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB1TlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMUzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVOU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUMwdU5Td0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNDFMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnSUNBZ0lGMHBMQ0J1SUQwZ2JtVjNJQ1J1S0hRc0lEVXBPd29nSUNBZ0lDQWdJQ0FnSUNCbmFTNXpaWFJKYm1SbGVDaGJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURNS0lDQWdJQ0FnSUNBZ0lDQWdYU2tzSUdkcExuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2dVMjRvYml3Z015d2dNQ3dnSVRFcEtTd2daMmt1YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QlRiaWh1TENBeUxDQXpMQ0FoTVNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG1kbGIyMWxkSEo1SUQwZ1oya3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQmxJQ0U5UFNCMmIybGtJREFnUHlCbElEb2dibVYzSUdsdkxDQjBhR2x6TG1ObGJuUmxjaUE5SUc1bGR5QllLQzQxTENBdU5TazdDaUFnSUNCOUNpQWdJQ0J5WVhsallYTjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQmxMbU5oYldWeVlTQTlQVDBnYm5Wc2JDQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDZFVTRkpGUlM1VGNISnBkR1U2SUNKU1lYbGpZWE4wWlhJdVkyRnRaWEpoSWlCdVpXVmtjeUIwYnlCaVpTQnpaWFFnYVc0Z2IzSmtaWElnZEc4Z2NtRjVZMkZ6ZENCaFoyRnBibk4wSUhOd2NtbDBaWE11Snlrc0lIaHBMbk5sZEVaeWIyMU5ZWFJ5YVhoVFkyRnNaU2gwYUdsekxtMWhkSEpwZUZkdmNteGtLU3dnVFdndVkyOXdlU2hsTG1OaGJXVnlZUzV0WVhSeWFYaFhiM0pzWkNrc0lIUm9hWE11Ylc5a1pXeFdhV1YzVFdGMGNtbDRMbTExYkhScGNHeDVUV0YwY21salpYTW9aUzVqWVcxbGNtRXViV0YwY21sNFYyOXliR1JKYm5abGNuTmxMQ0IwYUdsekxtMWhkSEpwZUZkdmNteGtLU3dnZVdrdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFJvYVhNdWJXOWtaV3hXYVdWM1RXRjBjbWw0S1N3Z1pTNWpZVzFsY21FdWFYTlFaWEp6Y0dWamRHbDJaVU5oYldWeVlTQW1KaUIwYUdsekxtMWhkR1Z5YVdGc0xuTnBlbVZCZEhSbGJuVmhkR2x2YmlBOVBUMGdJVEVnSmlZZ2VHa3ViWFZzZEdsd2JIbFRZMkZzWVhJb0xYbHBMbm9wT3dvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NXRZWFJsY21saGJDNXliM1JoZEdsdmJpd2dhU3dnY2pzS0lDQWdJQ0FnSUNCdUlDRTlQU0F3SUNZbUlDaHlJRDBnVFdGMGFDNWpiM01vYmlrc0lHa2dQU0JOWVhSb0xuTnBiaWh1S1NrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCMGFHbHpMbU5sYm5SbGNqc0tJQ0FnSUNBZ0lDQmtjeWhvY3k1elpYUW9MUzQxTENBdExqVXNJREFwTENCNWFTd2dieXdnZUdrc0lHa3NJSElwTENCa2N5aGxjaTV6WlhRb0xqVXNJQzB1TlN3Z01Da3NJSGxwTENCdkxDQjRhU3dnYVN3Z2Npa3NJR1J6S0hWekxuTmxkQ2d1TlN3Z0xqVXNJREFwTENCNWFTd2dieXdnZUdrc0lHa3NJSElwTENCcWJDNXpaWFFvTUN3Z01Da3NJSEZ2TG5ObGRDZ3hMQ0F3S1N3Z1VXd3VjMlYwS0RFc0lERXBPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdaUzV5WVhrdWFXNTBaWEp6WldOMFZISnBZVzVuYkdVb2FITXNJR1Z5TENCMWN5d2dJVEVzSUZGcEtUc0tJQ0FnSUNBZ0lDQnBaaUFvWVNBOVBUMGdiblZzYkNBbUppQW9aSE1vWlhJdWMyVjBLQzB1TlN3Z0xqVXNJREFwTENCNWFTd2dieXdnZUdrc0lHa3NJSElwTENCeGJ5NXpaWFFvTUN3Z01Ta3NJR0VnUFNCbExuSmhlUzVwYm5SbGNuTmxZM1JVY21saGJtZHNaU2hvY3l3Z2RYTXNJR1Z5TENBaE1Td2dVV2twTENCaElEMDlQU0J1ZFd4c0tTa2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1pTNXlZWGt1YjNKcFoybHVMbVJwYzNSaGJtTmxWRzhvVVdrcE93b2dJQ0FnSUNBZ0lHd2dQQ0JsTG01bFlYSWdmSHdnYkNBK0lHVXVabUZ5SUh4OElIUXVjSFZ6YUNoN0NpQWdJQ0FnSUNBZ0lDQWdJR1JwYzNSaGJtTmxPaUJzTEFvZ0lDQWdJQ0FnSUNBZ0lDQndiMmx1ZERvZ1VXa3VZMnh2Ym1Vb0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnZFhZNklHNTBMbWRsZEZWV0tGRnBMQ0JvY3l3Z1pYSXNJSFZ6TENCcWJDd2djVzhzSUZGc0xDQnVaWGNnV0Nrc0NpQWdJQ0FnSUNBZ0lDQWdJR1poWTJVNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOWlhbVZqZERvZ2RHaHBjd29nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJR1V1WTJWdWRHVnlJQ0U5UFNCMmIybGtJREFnSmlZZ2RHaHBjeTVqWlc1MFpYSXVZMjl3ZVNobExtTmxiblJsY2lrc0lIUm9hWE11YldGMFpYSnBZV3dnUFNCbExtMWhkR1Z5YVdGc0xDQjBhR2x6T3dvZ0lDQWdmUXA5T3dweWJ5NXdjbTkwYjNSNWNHVXVhWE5UY0hKcGRHVWdQU0FoTURzS1puVnVZM1JwYjI0Z1pITW9jeXdnWlN3Z2RDd2diaXdnYVN3Z2Npa2dld29nSUNBZ2Rta3VjM1ZpVm1WamRHOXljeWh6TENCMEtTNWhaR1JUWTJGc1lYSW9MalVwTG0xMWJIUnBjR3g1S0c0cExDQnBJQ0U5UFNCMmIybGtJREFnUHlBb1Mya3VlQ0E5SUhJZ0tpQjJhUzU0SUMwZ2FTQXFJSFpwTG5rc0lFdHBMbmtnUFNCcElDb2dkbWt1ZUNBcklISWdLaUIyYVM1NUtTQTZJRXRwTG1OdmNIa29kbWtwTENCekxtTnZjSGtvWlNrc0lITXVlQ0FyUFNCTGFTNTRMQ0J6TG5rZ0t6MGdTMmt1ZVN3Z2N5NWhjSEJzZVUxaGRISnBlRFFvVFdncE93cDlDblpoY2lCbWN5QTlJRzVsZHlCTkxDQkxiQ0E5SUc1bGR5Qk5MQ0JpYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nVG1VZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11WDJOMWNuSmxiblJNWlhabGJDQTlJREFzSUhSb2FYTXVkSGx3WlNBOUlDSk1UMFFpTENCUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWgwYUdsekxDQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRtVnNjem9nZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWlc1MWJXVnlZV0pzWlRvZ0lUQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZV3gxWlRvZ1cxMEtJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdhWE5NVDBRNklIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lBaE1Bb2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11WVhWMGIxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVZMjl3ZVNobExDQWhNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JsTG14bGRtVnNjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z1BDQnBPeUJ1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSFJiYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVlXUmtUR1YyWld3b2NpNXZZbXBsWTNRdVkyeHZibVVvS1N3Z2NpNWthWE4wWVc1alpTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GMWRHOVZjR1JoZEdVZ1BTQmxMbUYxZEc5VmNHUmhkR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JoWkdSTVpYWmxiQ2hsTENCMElEMGdNQ2tnZXdvZ0lDQWdJQ0FnSUhRZ1BTQk5ZWFJvTG1GaWN5aDBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWJHVjJaV3h6TENCcE93b2dJQ0FnSUNBZ0lHWnZjaWhwSUQwZ01Ec2dhU0E4SUc0dWJHVnVaM1JvSUNZbUlDRW9kQ0E4SUc1YmFWMHVaR2x6ZEdGdVkyVXBPeUJwS3lzcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxuTndiR2xqWlNocExDQXdMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUnBjM1JoYm1ObE9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCdlltcGxZM1E2SUdVS0lDQWdJQ0FnSUNCOUtTd2dkR2hwY3k1aFpHUW9aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSRGRYSnlaVzUwVEdWMlpXd29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyTjFjbkpsYm5STVpYWmxiRHNLSUNBZ0lIMEtJQ0FnSUdkbGRFOWlhbVZqZEVadmNrUnBjM1JoYm1ObEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWJHVjJaV3h6T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbXhsYm1kMGFDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0c0lHazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHVJRDBnTVN3Z2FTQTlJSFF1YkdWdVozUm9PeUJ1SUR3Z2FTQW1KaUFoS0dVZ1BDQjBXMjVkTG1ScGMzUmhibU5sS1RzZ2Jpc3JLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSYmJpQXRJREZkTG05aWFtVmpkRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQnlZWGxqWVhOMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1c1pYWmxiSE11YkdWdVozUm9JRDRnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtY3k1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1dFlYUnlhWGhYYjNKc1pDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1eVlYa3ViM0pwWjJsdUxtUnBjM1JoYm1ObFZHOG9abk1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1kbGRFOWlhbVZqZEVadmNrUnBjM1JoYm1ObEtHa3BMbkpoZVdOaGMzUW9aU3dnZENrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdWJHVjJaV3h6T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMbXhsYm1kMGFDQStJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabk11YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtHVXViV0YwY21sNFYyOXliR1FwTENCTGJDNXpaWFJHY205dFRXRjBjbWw0VUc5emFYUnBiMjRvZEdocGN5NXRZWFJ5YVhoWGIzSnNaQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1puTXVaR2x6ZEdGdVkyVlVieWhMYkNrZ0x5QmxMbnB2YjIwN0NpQWdJQ0FnSUNBZ0lDQWdJSFJiTUYwdWIySnFaV04wTG5acGMybGliR1VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa3NJSEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhwSUQwZ01Td2djaUE5SUhRdWJHVnVaM1JvT3lCcElEd2djaUFtSmlCdUlENDlJSFJiYVYwdVpHbHpkR0Z1WTJVN0lHa3JLeWwwVzJrZ0xTQXhYUzV2WW1wbFkzUXVkbWx6YVdKc1pTQTlJQ0V4TENCMFcybGRMbTlpYW1WamRDNTJhWE5wWW14bElEMGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWgwYUdsekxsOWpkWEp5Wlc1MFRHVjJaV3dnUFNCcElDMGdNVHNnYVNBOElISTdJR2tyS3lsMFcybGRMbTlpYW1WamRDNTJhWE5wWW14bElEMGdJVEU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlITjFjR1Z5TG5SdlNsTlBUaWhsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbUYxZEc5VmNHUmhkR1VnUFQwOUlDRXhJQ1ltSUNoMExtOWlhbVZqZEM1aGRYUnZWWEJrWVhSbElEMGdJVEVwTENCMExtOWlhbVZqZEM1c1pYWmxiSE1nUFNCYlhUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11YkdWMlpXeHpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0J1TG14bGJtZDBhRHNnYVNBOElISTdJR2tyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdklEMGdibHRwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkQzV2WW1wbFkzUXViR1YyWld4ekxuQjFjMmdvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjJKcVpXTjBPaUJ2TG05aWFtVmpkQzUxZFdsa0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHbHpkR0Z1WTJVNklHOHVaR2x6ZEdGdVkyVUtJQ0FnSUNBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCME93b2dJQ0FnZlFwOUxDQmxZeUE5SUc1bGR5Qk5MQ0IwWXlBOUlHNWxkeUJXWlN3Z2JtTWdQU0J1WlhjZ1ZtVXNJRko0SUQwZ2JtVjNJRTBzSUdsaklEMGdibVYzSUhCbExDQnpieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdjM1FnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsTnJhVzV1WldSTlpYTm9JaXdnZEdocGN5NWlhVzVrVFc5a1pTQTlJQ0poZEhSaFkyaGxaQ0lzSUhSb2FYTXVZbWx1WkUxaGRISnBlQ0E5SUc1bGR5QndaU3dnZEdocGN5NWlhVzVrVFdGMGNtbDRTVzUyWlhKelpTQTlJRzVsZHlCd1pUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbUpwYm1STmIyUmxJRDBnWlM1aWFXNWtUVzlrWlN3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0TG1OdmNIa29aUzVpYVc1a1RXRjBjbWw0S1N3Z2RHaHBjeTVpYVc1a1RXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtHVXVZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVXBMQ0IwYUdsekxuTnJaV3hsZEc5dUlEMGdaUzV6YTJWc1pYUnZiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0pwYm1Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjMnRsYkdWMGIyNGdQU0JsTENCMElEMDlQU0IyYjJsa0lEQWdKaVlnS0hSb2FYTXVkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9JVEFwTENCMGFHbHpMbk5yWld4bGRHOXVMbU5oYkdOMWJHRjBaVWx1ZG1WeWMyVnpLQ2tzSUhRZ1BTQjBhR2x6TG0xaGRISnBlRmR2Y214a0tTd2dkR2hwY3k1aWFXNWtUV0YwY21sNExtTnZjSGtvZENrc0lIUm9hWE11WW1sdVpFMWhkSEpwZUVsdWRtVnljMlV1WTI5d2VTaDBLUzVwYm5abGNuUW9LVHNLSUNBZ0lIMEtJQ0FnSUhCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphMlZzWlhSdmJpNXdiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQnViM0p0WVd4cGVtVlRhMmx1VjJWcFoyaDBjeWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUc1bGR5QldaU3dnZENBOUlIUm9hWE11WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3k1emEybHVWMlZwWjJoME93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREFzSUdrZ1BTQjBMbU52ZFc1ME95QnVJRHdnYVRzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTNTRJRDBnZEM1blpYUllLRzRwTENCbExua2dQU0IwTG1kbGRGa29iaWtzSUdVdWVpQTlJSFF1WjJWMFdpaHVLU3dnWlM1M0lEMGdkQzVuWlhSWEtHNHBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaUE5SURFZ0x5QmxMbTFoYm1oaGRIUmhia3hsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCeUlDRTlQU0F4SUM4Z01DQS9JR1V1YlhWc2RHbHdiSGxUWTJGc1lYSW9jaWtnT2lCbExuTmxkQ2d4TENBd0xDQXdMQ0F3S1N3Z2RDNXpaWFJZV1ZwWEtHNHNJR1V1ZUN3Z1pTNTVMQ0JsTG5vc0lHVXVkeWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBMQ0IwYUdsekxtSnBibVJOYjJSbElEMDlQU0FpWVhSMFlXTm9aV1FpSUQ4Z2RHaHBjeTVpYVc1a1RXRjBjbWw0U1c1MlpYSnpaUzVqYjNCNUtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncElEb2dkR2hwY3k1aWFXNWtUVzlrWlNBOVBUMGdJbVJsZEdGamFHVmtJaUEvSUhSb2FYTXVZbWx1WkUxaGRISnBlRWx1ZG1WeWMyVXVZMjl3ZVNoMGFHbHpMbUpwYm1STllYUnlhWGdwTG1sdWRtVnlkQ2dwSURvZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVRhMmx1Ym1Wa1RXVnphRG9nVlc1eVpXTnZaMjVwZW1Wa0lHSnBibVJOYjJSbE9pQWlJQ3NnZEdocGN5NWlhVzVrVFc5a1pTazdDaUFnSUNCOUNpQWdJQ0JpYjI1bFZISmhibk5tYjNKdEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVjMnRsYkdWMGIyNHNJR2tnUFNCMGFHbHpMbWRsYjIxbGRISjVPd29nSUNBZ0lDQWdJSFJqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2FTNWhkSFJ5YVdKMWRHVnpMbk5yYVc1SmJtUmxlQ3dnWlNrc0lHNWpMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvYVM1aGRIUnlhV0oxZEdWekxuTnJhVzVYWldsbmFIUXNJR1VwTENCbFl5NWpiM0I1S0hRcExtRndjR3g1VFdGMGNtbDROQ2gwYUdsekxtSnBibVJOWVhSeWFYZ3BMQ0IwTG5ObGRDZ3dMQ0F3TENBd0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3T3lCeUlEd2dORHNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHOGdQU0J1WXk1blpYUkRiMjF3YjI1bGJuUW9jaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h2SUNFOVBTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJqTG1kbGRFTnZiWEJ2Ym1WdWRDaHlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xqTG0xMWJIUnBjR3g1VFdGMGNtbGpaWE1vYmk1aWIyNWxjMXRoWFM1dFlYUnlhWGhYYjNKc1pDd2diaTVpYjI1bFNXNTJaWEp6WlhOYllWMHBMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWhTZUM1amIzQjVLR1ZqS1M1aGNIQnNlVTFoZEhKcGVEUW9hV01wTENCdktUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEM1aGNIQnNlVTFoZEhKcGVEUW9kR2hwY3k1aWFXNWtUV0YwY21sNFNXNTJaWEp6WlNrN0NpQWdJQ0I5Q24wN0NuTnZMbkJ5YjNSdmRIbHdaUzVwYzFOcmFXNXVaV1JOWlhOb0lEMGdJVEE3Q25aaGNpQnZieUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkNiMjVsSWpzS0lDQWdJSDBLZlRzS2IyOHVjSEp2ZEc5MGVYQmxMbWx6UW05dVpTQTlJQ0V3T3dwMllYSWdjVzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVkV3hzTENCMElEMGdNU3dnYmlBOUlERXNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTWdQU0J5ZEN3Z2FDQTlJSEowTENCMUxDQmtLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVkV3hzTENCdkxDQmhMQ0JzTENCakxDQm9MQ0JwTENCeUxDQjFMQ0JrS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx0WVdkbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCa1lYUmhPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYURvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJ1Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCakxDQjBhR2x6TG0xcGJrWnBiSFJsY2lBOUlHZ3NJSFJvYVhNdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUQwZ0lURXNJSFJvYVhNdVpteHBjRmtnUFNBaE1Td2dkR2hwY3k1MWJuQmhZMnRCYkdsbmJtMWxiblFnUFNBeE93b2dJQ0FnZlFwOU93cHhiaTV3Y205MGIzUjVjR1V1YVhORVlYUmhWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdjbU1nUFNCdVpYY2djR1VzSUZCNElEMGdibVYzSUhCbExDQmhieUE5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYlhTd2dkQ0E5SUZ0ZEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5WMWFXUWdQU0JGZENncExDQjBhR2x6TG1KdmJtVnpJRDBnWlM1emJHbGpaU2d3S1N3Z2RHaHBjeTVpYjI1bFNXNTJaWEp6WlhNZ1BTQjBMQ0IwYUdsekxtSnZibVZOWVhSeWFXTmxjeUE5SUc1MWJHd3NJSFJvYVhNdVltOXVaVlJsZUhSMWNtVWdQU0J1ZFd4c0xDQjBhR2x6TG1KdmJtVlVaWGgwZFhKbFUybDZaU0E5SURBc0lIUm9hWE11Wm5KaGJXVWdQU0F0TVN3Z2RHaHBjeTVwYm1sMEtDazdDaUFnSUNCOUNpQWdJQ0JwYm1sMEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1aWIyNWxjeXdnZENBOUlIUm9hWE11WW05dVpVbHVkbVZ5YzJWek93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtSnZibVZOWVhSeWFXTmxjeUE5SUc1bGR5QkdiRzloZERNeVFYSnlZWGtvWlM1c1pXNW5kR2dnS2lBeE5pa3NJSFF1YkdWdVozUm9JRDA5UFNBd0tTQjBhR2x6TG1OaGJHTjFiR0YwWlVsdWRtVnljMlZ6S0NrN0NpQWdJQ0FnSUNBZ1pXeHpaU0JwWmlBb1pTNXNaVzVuZEdnZ0lUMDlJSFF1YkdWdVozUm9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVMnRsYkdWMGIyNDZJRTUxYldKbGNpQnZaaUJwYm5abGNuTmxJR0p2Ym1VZ2JXRjBjbWxqWlhNZ1pHOWxjeUJ1YjNRZ2JXRjBZMmdnWVcxdmRXNTBJRzltSUdKdmJtVnpMaUlwTENCMGFHbHpMbUp2Ym1WSmJuWmxjbk5sY3lBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc0Z1BTQXdMQ0JwSUQwZ2RHaHBjeTVpYjI1bGN5NXNaVzVuZEdnN0lHNGdQQ0JwT3lCdUt5c3BkR2hwY3k1aWIyNWxTVzUyWlhKelpYTXVjSFZ6YUNodVpYY2djR1VwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTmhiR04xYkdGMFpVbHVkbVZ5YzJWektDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltOXVaVWx1ZG1WeWMyVnpMbXhsYm1kMGFDQTlJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Dd2dkQ0E5SUhSb2FYTXVZbTl1WlhNdWJHVnVaM1JvT3lCbElEd2dkRHNnWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ2NHVTdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVZbTl1WlhOYlpWMGdKaVlnYmk1amIzQjVLSFJvYVhNdVltOXVaWE5iWlYwdWJXRjBjbWw0VjI5eWJHUXBMbWx1ZG1WeWRDZ3BMQ0IwYUdsekxtSnZibVZKYm5abGNuTmxjeTV3ZFhOb0tHNHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Dd2dkQ0E5SUhSb2FYTXVZbTl1WlhNdWJHVnVaM1JvT3lCbElEd2dkRHNnWlNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxtSnZibVZ6VzJWZE93b2dJQ0FnSUNBZ0lDQWdJQ0J1SUNZbUlHNHViV0YwY21sNFYyOXliR1F1WTI5d2VTaDBhR2x6TG1KdmJtVkpiblpsY25ObGMxdGxYU2t1YVc1MlpYSjBLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWlRFZ1BTQXdMQ0IwTVNBOUlIUm9hWE11WW05dVpYTXViR1Z1WjNSb095QmxNU0E4SUhReE95QmxNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc0eElEMGdkR2hwY3k1aWIyNWxjMXRsTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzR4SUNZbUlDaHVNUzV3WVhKbGJuUWdKaVlnYmpFdWNHRnlaVzUwTG1selFtOXVaU0EvSUNodU1TNXRZWFJ5YVhndVkyOXdlU2h1TVM1d1lYSmxiblF1YldGMGNtbDRWMjl5YkdRcExtbHVkbVZ5ZENncExDQnVNUzV0WVhSeWFYZ3ViWFZzZEdsd2JIa29iakV1YldGMGNtbDRWMjl5YkdRcEtTQTZJRzR4TG0xaGRISnBlQzVqYjNCNUtHNHhMbTFoZEhKcGVGZHZjbXhrS1N3Z2JqRXViV0YwY21sNExtUmxZMjl0Y0c5elpTaHVNUzV3YjNOcGRHbHZiaXdnYmpFdWNYVmhkR1Z5Ym1sdmJpd2diakV1YzJOaGJHVXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbUp2Ym1WekxDQjBJRDBnZEdocGN5NWliMjVsU1c1MlpYSnpaWE1zSUc0Z1BTQjBhR2x6TG1KdmJtVk5ZWFJ5YVdObGN5d2dhU0E5SUhSb2FYTXVZbTl1WlZSbGVIUjFjbVU3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J5SUQwZ01Dd2dieUE5SUdVdWJHVnVaM1JvT3lCeUlEd2dienNnY2lzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0JsVzNKZElEOGdaVnR5WFM1dFlYUnlhWGhYYjNKc1pDQTZJRkI0T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlZeTV0ZFd4MGFYQnNlVTFoZEhKcFkyVnpLR0VzSUhSYmNsMHBMQ0J5WXk1MGIwRnljbUY1S0c0c0lISWdLaUF4TmlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHa2dJVDA5SUc1MWJHd2dKaVlnS0drdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUNrN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJR0Z2S0hSb2FYTXVZbTl1WlhNc0lIUm9hWE11WW05dVpVbHVkbVZ5YzJWektUc0tJQ0FnSUgwS0lDQWdJR052YlhCMWRHVkNiMjVsVkdWNGRIVnlaU2dwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUUxaGRHZ3VjM0Z5ZENoMGFHbHpMbUp2Ym1WekxteGxibWQwYUNBcUlEUXBPd29nSUNBZ0lDQWdJR1VnUFNCWVl5aGxLU3dnWlNBOUlFMWhkR2d1YldGNEtHVXNJRFFwT3dvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2hsSUNvZ1pTQXFJRFFwT3dvZ0lDQWdJQ0FnSUhRdWMyVjBLSFJvYVhNdVltOXVaVTFoZEhKcFkyVnpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRzVsZHlCeGJpaDBMQ0JsTENCbExDQmpkQ3dnYm00cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11WW05dVpVMWhkSEpwWTJWeklEMGdkQ3dnZEdocGN5NWliMjVsVkdWNGRIVnlaU0E5SUc0c0lIUm9hWE11WW05dVpWUmxlSFIxY21WVGFYcGxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRFSnZibVZDZVU1aGJXVW9aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbUp2Ym1WekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWliMjVsYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa3VibUZ0WlNBOVBUMGdaU2tnY21WMGRYSnVJR2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ1pHbHpjRzl6WlNncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG1KdmJtVlVaWGgwZFhKbElDRTlQU0J1ZFd4c0lDWW1JQ2gwYUdsekxtSnZibVZVWlhoMGRYSmxMbVJwYzNCdmMyVW9LU3dnZEdocGN5NWliMjVsVkdWNGRIVnlaU0E5SUc1MWJHd3BPd29nSUNBZ2ZRb2dJQ0FnWm5KdmJVcFRUMDRvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWRYVnBaQ0E5SUdVdWRYVnBaRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnWlM1aWIyNWxjeTVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHVXVZbTl1WlhOYmJsMHNJRzhnUFNCMFczSmRPd29nSUNBZ0lDQWdJQ0FnSUNCdklEMDlQU0IyYjJsa0lEQWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVUydGxiR1YwYjI0NklFNXZJR0p2Ym1VZ1ptOTFibVFnZDJsMGFDQlZWVWxFT2lJc0lISXBMQ0J2SUQwZ2JtVjNJRzl2S1N3Z2RHaHBjeTVpYjI1bGN5NXdkWE5vS0c4cExDQjBhR2x6TG1KdmJtVkpiblpsY25ObGN5NXdkWE5vS0c1bGR5QndaU2dwTG1aeWIyMUJjbkpoZVNobExtSnZibVZKYm5abGNuTmxjMXR1WFNrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVwYm1sMEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHRmtZWFJoT2lCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMlpYSnphVzl1T2lBMExqVXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaVUydGxiR1YwYjI0aUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVnVaWEpoZEc5eU9pQWlVMnRsYkdWMGIyNHVkRzlLVTA5T0lnb2dJQ0FnSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmliMjVsY3pvZ1cxMHNDaUFnSUNBZ0lDQWdJQ0FnSUdKdmJtVkpiblpsY25ObGN6b2dXMTBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdJQ0FnSUdVdWRYVnBaQ0E5SUhSb2FYTXVkWFZwWkRzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZbTl1WlhNc0lHNGdQU0IwYUdsekxtSnZibVZKYm5abGNuTmxjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnZEM1c1pXNW5kR2c3SUdrZ1BDQnlPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJiYVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1WW05dVpYTXVjSFZ6YUNodkxuVjFhV1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHNWJhVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVZbTl1WlVsdWRtVnljMlZ6TG5CMWMyZ29ZUzUwYjBGeWNtRjVLQ2twT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLZlN3Z1dHNGdQU0JqYkdGemN5QmxlSFJsYm1SeklGVmxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2tnUFNBeEtYc0tJQ0FnSUNBZ0lDQjBlWEJsYjJZZ2JpQTlQU0FpYm5WdFltVnlJaUFtSmlBb2FTQTlJRzRzSUc0Z1BTQWhNU3dnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVNXNXpkR0Z1WTJWa1FuVm1abVZ5UVhSMGNtbGlkWFJsT2lCVWFHVWdZMjl1YzNSeWRXTjBiM0lnYm05M0lHVjRjR1ZqZEhNZ2JtOXliV0ZzYVhwbFpDQmhjeUIwYUdVZ2RHaHBjbVFnWVhKbmRXMWxiblF1SWlrcE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXNJRzRwT3dvZ0lDQWdJQ0FnSUhSb2FYTXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQTlJR2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsSUQwZ1pTNXRaWE5vVUdWeVFYUjBjbWxpZFhSbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1YldWemFGQmxja0YwZEhKcFluVjBaU0E5SUhSb2FYTXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTd2daUzVwYzBsdWMzUmhibU5sWkVKMVptWmxja0YwZEhKcFluVjBaU0E5SUNFd0xDQmxPd29nSUNBZ2ZRcDlPd3BZYmk1d2NtOTBiM1I1Y0dVdWFYTkpibk4wWVc1alpXUkNkV1ptWlhKQmRIUnlhV0oxZEdVZ1BTQWhNRHNLZG1GeUlITmpJRDBnYm1WM0lIQmxMQ0J2WXlBOUlHNWxkeUJ3WlN3Z2NITWdQU0JiWFN3Z2RISWdQU0J1WlhjZ2MzUXNJSGhoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJ6ZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1sdWMzUmhibU5sVFdGMGNtbDRJRDBnYm1WM0lGaHVLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29iaUFxSURFMktTd2dNVFlwTENCMGFHbHpMbWx1YzNSaGJtTmxRMjlzYjNJZ1BTQnVkV3hzTENCMGFHbHpMbU52ZFc1MElEMGdiaXdnZEdocGN5NW1jblZ6ZEhWdFEzVnNiR1ZrSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVwYm5OMFlXNWpaVTFoZEhKcGVDNWpiM0I1S0dVdWFXNXpkR0Z1WTJWTllYUnlhWGdwTENCbExtbHVjM1JoYm1ObFEyOXNiM0lnSVQwOUlHNTFiR3dnSmlZZ0tIUm9hWE11YVc1emRHRnVZMlZEYjJ4dmNpQTlJR1V1YVc1emRHRnVZMlZEYjJ4dmNpNWpiRzl1WlNncEtTd2dkR2hwY3k1amIzVnVkQ0E5SUdVdVkyOTFiblFzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSRGIyeHZja0YwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwTG1aeWIyMUJjbkpoZVNoMGFHbHpMbWx1YzNSaGJtTmxRMjlzYjNJdVlYSnlZWGtzSUdVZ0tpQXpLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFMWhkSEpwZUVGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMExtWnliMjFCY25KaGVTaDBhR2x6TG1sdWMzUmhibU5sVFdGMGNtbDRMbUZ5Y21GNUxDQmxJQ29nTVRZcE93b2dJQ0FnZlFvZ0lDQWdjbUY1WTJGemRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbTFoZEhKcGVGZHZjbXhrTENCcElEMGdkR2hwY3k1amIzVnVkRHNLSUNBZ0lDQWdJQ0JwWmlBb2RISXVaMlZ2YldWMGNua2dQU0IwYUdsekxtZGxiMjFsZEhKNUxDQjBjaTV0WVhSbGNtbGhiQ0E5SUhSb2FYTXViV0YwWlhKcFlXd3NJSFJ5TG0xaGRHVnlhV0ZzSUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ2NpQTlJREE3SUhJZ1BDQnBPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRTFoZEhKcGVFRjBLSElzSUhOaktTd2diMk11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWh1TENCell5a3NJSFJ5TG0xaGRISnBlRmR2Y214a0lEMGdiMk1zSUhSeUxuSmhlV05oYzNRb1pTd2djSE1wT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHOGdQU0F3TENCaElEMGdjSE11YkdWdVozUm9PeUJ2SUR3Z1lUc2dieXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnY0hOYmIxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNMbWx1YzNSaGJtTmxTV1FnUFNCeUxDQnNMbTlpYW1WamRDQTlJSFJvYVhNc0lIUXVjSFZ6YUNoc0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQndjeTVzWlc1bmRHZ2dQU0F3T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lITmxkRU52Ykc5eVFYUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YVc1emRHRnVZMlZEYjJ4dmNpQTlQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NXBibk4wWVc1alpVTnZiRzl5SUQwZ2JtVjNJRmh1S0c1bGR5QkdiRzloZERNeVFYSnlZWGtvZEdocGN5NXBibk4wWVc1alpVMWhkSEpwZUM1amIzVnVkQ0FxSURNcExDQXpLU2tzSUhRdWRHOUJjbkpoZVNoMGFHbHpMbWx1YzNSaGJtTmxRMjlzYjNJdVlYSnlZWGtzSUdVZ0tpQXpLVHNLSUNBZ0lIMEtJQ0FnSUhObGRFMWhkSEpwZUVGMEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMExuUnZRWEp5WVhrb2RHaHBjeTVwYm5OMFlXNWpaVTFoZEhKcGVDNWhjbkpoZVN3Z1pTQXFJREUyS1RzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlUxdmNuQm9WR0Z5WjJWMGN5Z3BJSHQ5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVpHbHpjR0YwWTJoRmRtVnVkQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKa2FYTndiM05sSWdvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFwOU93cDRZUzV3Y205MGIzUjVjR1V1YVhOSmJuTjBZVzVqWldSTlpYTm9JRDBnSVRBN0NuWmhjaUJtZENBOUlHTnNZWE56SUdWNGRHVnVaSE1nWkhRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVEdsdVpVSmhjMmxqVFdGMFpYSnBZV3dpTENCMGFHbHpMbU52Ykc5eUlEMGdibVYzSUdGbEtERTJOemMzTWpFMUtTd2dkR2hwY3k1c2FXNWxkMmxrZEdnZ1BTQXhMQ0IwYUdsekxteHBibVZqWVhBZ1BTQWljbTkxYm1RaUxDQjBhR2x6TG14cGJtVnFiMmx1SUQwZ0luSnZkVzVrSWl3Z2RHaHBjeTV6WlhSV1lXeDFaWE1vWlNrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWpiMnh2Y2k1amIzQjVLR1V1WTI5c2IzSXBMQ0IwYUdsekxteHBibVYzYVdSMGFDQTlJR1V1YkdsdVpYZHBaSFJvTENCMGFHbHpMbXhwYm1WallYQWdQU0JsTG14cGJtVmpZWEFzSUhSb2FYTXViR2x1WldwdmFXNGdQU0JsTG14cGJtVnFiMmx1TENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BtZEM1d2NtOTBiM1I1Y0dVdWFYTk1hVzVsUW1GemFXTk5ZWFJsY21saGJDQTlJQ0V3T3dwMllYSWdZV01nUFNCdVpYY2dUU3dnYkdNZ1BTQnVaWGNnVFN3Z1kyTWdQU0J1WlhjZ2NHVXNJRmh2SUQwZ2JtVjNJRU51TENCdGN5QTlJRzVsZHlCQmJpd2diMjRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVaWGNnWDJVc0lIUWdQU0J1WlhjZ1puUXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWt4cGJtVWlMQ0IwYUdsekxtZGxiMjFsZEhKNUlEMGdaU3dnZEdocGN5NXRZWFJsY21saGJDQTlJSFFzSUhSb2FYTXVkWEJrWVhSbFRXOXljR2hVWVhKblpYUnpLQ2s3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVZMjl3ZVNobEtTd2dkR2hwY3k1dFlYUmxjbWxoYkNBOUlHVXViV0YwWlhKcFlXd3NJSFJvYVhNdVoyVnZiV1YwY25rZ1BTQmxMbWRsYjIxbGRISjVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVeHBibVZFYVhOMFlXNWpaWE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbWRsYjIxbGRISjVPd29nSUNBZ0lDQWdJR2xtSUNobExtbHpRblZtWm1WeVIyVnZiV1YwY25rcElHbG1JQ2hsTG1sdVpHVjRJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0J1SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F4TENCeUlEMGdkQzVqYjNWdWREc2dhU0E4SUhJN0lHa3JLeWxoWXk1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtIUXNJR2tnTFNBeEtTd2diR011Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMExDQnBLU3dnYmx0cFhTQTlJRzViYVNBdElERmRMQ0J1VzJsZElDczlJR0ZqTG1ScGMzUmhibU5sVkc4b2JHTXBPd29nSUNBZ0lDQWdJQ0FnSUNCbExuTmxkRUYwZEhKcFluVjBaU2dpYkdsdVpVUnBjM1JoYm1ObElpd2dibVYzSUdSbEtHNHNJREVwS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXNWxMbU52YlhCMWRHVk1hVzVsUkdsemRHRnVZMlZ6S0NrNklFTnZiWEIxZEdGMGFXOXVJRzl1YkhrZ2NHOXpjMmxpYkdVZ2QybDBhQ0J1YjI0dGFXNWtaWGhsWkNCQ2RXWm1aWEpIWlc5dFpYUnllUzRpS1RzS0lDQWdJQ0FnSUNCbGJITmxJR1V1YVhOSFpXOXRaWFJ5ZVNBbUppQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVNYVc1bExtTnZiWEIxZEdWTWFXNWxSR2x6ZEdGdVkyVnpLQ2tnYm04Z2JHOXVaMlZ5SUhOMWNIQnZjblJ6SUZSSVVrVkZMa2RsYjIxbGRISjVMaUJWYzJVZ1ZFaFNSVVV1UW5WbVptVnlSMlZ2YldWMGNua2dhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLSUNBZ0lISmhlV05oYzNRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dhU0E5SUhSb2FYTXViV0YwY21sNFYyOXliR1FzSUhJZ1BTQmxMbkJoY21GdGN5NU1hVzVsTG5Sb2NtVnphRzlzWkN3Z2J5QTlJRzR1WkhKaGQxSmhibWRsT3dvZ0lDQWdJQ0FnSUdsbUlDaHVMbUp2ZFc1a2FXNW5VM0JvWlhKbElEMDlQU0J1ZFd4c0lDWW1JRzR1WTI5dGNIVjBaVUp2ZFc1a2FXNW5VM0JvWlhKbEtDa3NJRzF6TG1OdmNIa29iaTVpYjNWdVpHbHVaMU53YUdWeVpTa3NJRzF6TG1Gd2NHeDVUV0YwY21sNE5DaHBLU3dnYlhNdWNtRmthWFZ6SUNzOUlISXNJR1V1Y21GNUxtbHVkR1Z5YzJWamRITlRjR2hsY21Vb2JYTXBJRDA5UFNBaE1Ta2djbVYwZFhKdU93b2dJQ0FnSUNBZ0lHTmpMbU52Y0hrb2FTa3VhVzUyWlhKMEtDa3NJRmh2TG1OdmNIa29aUzV5WVhrcExtRndjR3g1VFdGMGNtbDROQ2hqWXlrN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCeUlDOGdLQ2gwYUdsekxuTmpZV3hsTG5nZ0t5QjBhR2x6TG5OallXeGxMbmtnS3lCMGFHbHpMbk5qWVd4bExub3BJQzhnTXlrc0lHd2dQU0JoSUNvZ1lTd2dZeUE5SUc1bGR5Qk5MQ0JvSUQwZ2JtVjNJRTBzSUhVZ1BTQnVaWGNnVFN3Z1pDQTlJRzVsZHlCTkxDQm1JRDBnZEdocGN5NXBjMHhwYm1WVFpXZHRaVzUwY3lBL0lESWdPaUF4T3dvZ0lDQWdJQ0FnSUdsbUlDaHVMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzBnUFNCdUxtbHVaR1Y0TENCMklEMGdiaTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYlNBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2NnUFNCTllYUm9MbTFoZUNnd0xDQnZMbk4wWVhKMEtTd2djQ0E5SUUxaGRHZ3ViV2x1S0cwdVkyOTFiblFzSUc4dWMzUmhjblFnS3lCdkxtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWHlBOUlHY3NJSGtnUFNCd0lDMGdNVHNnWHlBOElIazdJRjhnS3owZ1ppbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHSWdQU0J0TG1kbGRGZ29YeWtzSUVFZ1BTQnRMbWRsZEZnb1h5QXJJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2Rpd2dZaWtzSUdndVpuSnZiVUoxWm1abGNrRjBkSEpwWW5WMFpTaDJMQ0JCS1N3Z1dHOHVaR2x6ZEdGdVkyVlRjVlJ2VTJWbmJXVnVkQ2hqTENCb0xDQmtMQ0IxS1NBK0lHd3BJR052Ym5ScGJuVmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdRdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnWlM1eVlYa3ViM0pwWjJsdUxtUnBjM1JoYm1ObFZHOG9aQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1NTQThJR1V1Ym1WaGNpQjhmQ0JKSUQ0Z1pTNW1ZWElnZkh3Z2RDNXdkWE5vS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUVrc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCdmFXNTBPaUIxTG1Oc2IyNWxLQ2t1WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE11YldGMGNtbDRWMjl5YkdRcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJtUmxlRG9nWHl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1GalpUb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1GalpVbHVaR1Y0T2lCdWRXeHNMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNRNklIUm9hWE1LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbk1TQTlJRTFoZEdndWJXRjRLREFzSUc4dWMzUmhjblFwTENCd01TQTlJRTFoZEdndWJXbHVLSFl1WTI5MWJuUXNJRzh1YzNSaGNuUWdLeUJ2TG1OdmRXNTBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdYekVnUFNCbk1Td2dlVEVnUFNCd01TQXRJREU3SUY4eElEd2dlVEU3SUY4eElDczlJR1lwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2Rpd2dYekVwTENCb0xtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kaXdnWHpFZ0t5QXhLU3dnV0c4dVpHbHpkR0Z1WTJWVGNWUnZVMlZuYldWdWRDaGpMQ0JvTENCa0xDQjFLU0ErSUd3cElHTnZiblJwYm5WbE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1F1WVhCd2JIbE5ZWFJ5YVhnMEtIUm9hWE11YldGMGNtbDRWMjl5YkdRcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQk1TQTlJR1V1Y21GNUxtOXlhV2RwYmk1a2FYTjBZVzVqWlZSdktHUXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVFeElEd2daUzV1WldGeUlIeDhJRUV4SUQ0Z1pTNW1ZWElnZkh3Z2RDNXdkWE5vS0hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlU2SUVFeExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2IybHVkRG9nZFM1amJHOXVaU2dwTG1Gd2NHeDVUV0YwY21sNE5DaDBhR2x6TG0xaGRISnBlRmR2Y214a0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNWtaWGc2SUY4eExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVlXTmxPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbVlXTmxTVzVrWlhnNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzlpYW1WamREb2dkR2hwY3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUc0dWFYTkhaVzl0WlhSeWVTQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TWFXNWxMbkpoZVdOaGMzUW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVuWlc5dFpYUnllVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1dGIzSndhRUYwZEhKcFluVjBaWE1zSUc0Z1BTQlBZbXBsWTNRdWEyVjVjeWgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBXMjViTUYxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJRDBnVzEwc0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNUlEMGdlMzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHa3ViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnBXM0pkTG01aGJXVWdmSHdnVTNSeWFXNW5LSElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeTV3ZFhOb0tEQXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllVnRoWFNBOUlISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUXhJRDBnWlM1dGIzSndhRlJoY21kbGRITTdDaUFnSUNBZ0lDQWdJQ0FnSUhReElDRTlQU0IyYjJsa0lEQWdKaVlnZERFdWJHVnVaM1JvSUQ0Z01DQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TWFXNWxMblZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwSUdSdlpYTWdibTkwSUhOMWNIQnZjblFnVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmVHNLYjI0dWNISnZkRzkwZVhCbExtbHpUR2x1WlNBOUlDRXdPd3AyWVhJZ2FHTWdQU0J1WlhjZ1RTd2dkV01nUFNCdVpYY2dUU3dnZDNRZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5dUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pNYVc1bFUyVm5iV1Z1ZEhNaU93b2dJQ0FnZlFvZ0lDQWdZMjl0Y0hWMFpVeHBibVZFYVhOMFlXNWpaWE1vS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbWRsYjIxbGRISjVPd29nSUNBZ0lDQWdJR2xtSUNobExtbHpRblZtWm1WeVIyVnZiV1YwY25rcElHbG1JQ2hsTG1sdVpHVjRJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1pTNWhkSFJ5YVdKMWRHVnpMbkJ2YzJsMGFXOXVMQ0J1SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYVNBOUlEQXNJSElnUFNCMExtTnZkVzUwT3lCcElEd2djanNnYVNBclBTQXlLV2hqTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2RDd2dhU2tzSUhWakxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9kQ3dnYVNBcklERXBMQ0J1VzJsZElEMGdhU0E5UFQwZ01DQS9JREFnT2lCdVcya2dMU0F4WFN3Z2JsdHBJQ3NnTVYwZ1BTQnVXMmxkSUNzZ2FHTXVaR2x6ZEdGdVkyVlVieWgxWXlrN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1YzJWMFFYUjBjbWxpZFhSbEtDSnNhVzVsUkdsemRHRnVZMlVpTENCdVpYY2daR1VvYml3Z01Ta3BPd29nSUNBZ0lDQWdJSDBnWld4elpTQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwYm1WVFpXZHRaVzUwY3k1amIyMXdkWFJsVEdsdVpVUnBjM1JoYm1ObGN5Z3BPaUJEYjIxd2RYUmhkR2x2YmlCdmJteDVJSEJ2YzNOcFlteGxJSGRwZEdnZ2JtOXVMV2x1WkdWNFpXUWdRblZtWm1WeVIyVnZiV1YwY25rdUlpazdDaUFnSUNBZ0lDQWdaV3h6WlNCbExtbHpSMlZ2YldWMGNua2dKaVlnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRHbHVaVk5sWjIxbGJuUnpMbU52YlhCMWRHVk1hVzVsUkdsemRHRnVZMlZ6S0NrZ2JtOGdiRzl1WjJWeUlITjFjSEJ2Y25SeklGUklVa1ZGTGtkbGIyMWxkSEo1TGlCVmMyVWdWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN6c0tJQ0FnSUgwS2ZUc0tkM1F1Y0hKdmRHOTBlWEJsTG1selRHbHVaVk5sWjIxbGJuUnpJRDBnSVRBN0NuWmhjaUI1WVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjI0Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZENrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa3hwYm1WTWIyOXdJanNLSUNBZ0lIMEtmVHNLZVdFdWNISnZkRzkwZVhCbExtbHpUR2x1WlV4dmIzQWdQU0FoTURzS2RtRnlJR3B1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pRYjJsdWRITk5ZWFJsY21saGJDSXNJSFJvYVhNdVkyOXNiM0lnUFNCdVpYY2dZV1VvTVRZM056Y3lNVFVwTENCMGFHbHpMbTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG5OcGVtVWdQU0F4TENCMGFHbHpMbk5wZW1WQmRIUmxiblZoZEdsdmJpQTlJQ0V3TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxuTnBlbVVnUFNCbExuTnBlbVVzSUhSb2FYTXVjMmw2WlVGMGRHVnVkV0YwYVc5dUlEMGdaUzV6YVhwbFFYUjBaVzUxWVhScGIyNHNJSFJvYVhNN0NpQWdJQ0I5Q24wN0NtcHVMbkJ5YjNSdmRIbHdaUzVwYzFCdmFXNTBjMDFoZEdWeWFXRnNJRDBnSVRBN0NuWmhjaUJrWXlBOUlHNWxkeUJ3WlN3Z2MyRWdQU0J1WlhjZ1EyNHNJR2R6SUQwZ2JtVjNJRUZ1TENCNGN5QTlJRzVsZHlCTkxDQjZjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJmWlN3Z2RDQTlJRzVsZHlCcWJpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUc5cGJuUnpJaXdnZEdocGN5NW5aVzl0WlhSeWVTQTlJR1VzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0IwTENCMGFHbHpMblZ3WkdGMFpVMXZjbkJvVkdGeVoyVjBjeWdwT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWJXRjBaWEpwWVd3Z1BTQmxMbTFoZEdWeWFXRnNMQ0IwYUdsekxtZGxiMjFsZEhKNUlEMGdaUzVuWlc5dFpYUnllU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSEpoZVdOaGMzUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnYVNBOUlIUm9hWE11YldGMGNtbDRWMjl5YkdRc0lISWdQU0JsTG5CaGNtRnRjeTVRYjJsdWRITXVkR2h5WlhOb2IyeGtMQ0J2SUQwZ2JpNWtjbUYzVW1GdVoyVTdDaUFnSUNBZ0lDQWdhV1lnS0c0dVltOTFibVJwYm1kVGNHaGxjbVVnUFQwOUlHNTFiR3dnSmlZZ2JpNWpiMjF3ZFhSbFFtOTFibVJwYm1kVGNHaGxjbVVvS1N3Z1ozTXVZMjl3ZVNodUxtSnZkVzVrYVc1blUzQm9aWEpsS1N3Z1ozTXVZWEJ3YkhsTllYUnlhWGcwS0drcExDQm5jeTV5WVdScGRYTWdLejBnY2l3Z1pTNXlZWGt1YVc1MFpYSnpaV04wYzFOd2FHVnlaU2huY3lrZ1BUMDlJQ0V4S1NCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnWkdNdVkyOXdlU2hwS1M1cGJuWmxjblFvS1N3Z2MyRXVZMjl3ZVNobExuSmhlU2t1WVhCd2JIbE5ZWFJ5YVhnMEtHUmpLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSElnTHlBb0tIUm9hWE11YzJOaGJHVXVlQ0FySUhSb2FYTXVjMk5oYkdVdWVTQXJJSFJvYVhNdWMyTmhiR1V1ZWlrZ0x5QXpLU3dnYkNBOUlHRWdLaUJoT3dvZ0lDQWdJQ0FnSUdsbUlDaHVMbWx6UW5WbVptVnlSMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCdUxtbHVaR1Y0TENCMUlEMGdiaTVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1T3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWXlBaFBUMGdiblZzYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCTllYUm9MbTFoZUNnd0xDQnZMbk4wWVhKMEtTd2daaUE5SUUxaGRHZ3ViV2x1S0dNdVkyOTFiblFzSUc4dWMzUmhjblFnS3lCdkxtTnZkVzUwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlHUXNJSGdnUFNCbU95QnRJRHdnZURzZ2JTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkaUE5SUdNdVoyVjBXQ2h0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRjeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0hVc0lIWXBMQ0JtWXloNGN5d2dkaXdnYkN3Z2FTd2daU3dnZEN3Z2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaREVnUFNCTllYUm9MbTFoZUNnd0xDQnZMbk4wWVhKMEtTd2daakVnUFNCTllYUm9MbTFwYmloMUxtTnZkVzUwTENCdkxuTjBZWEowSUNzZ2J5NWpiM1Z1ZENrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcweElEMGdaREVzSUhneElEMGdaakU3SUcweElEd2dlREU3SUcweEt5c3BlSE11Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoMUxDQnRNU2tzSUdaaktIaHpMQ0J0TVN3Z2JDd2dhU3dnWlN3Z2RDd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUc5cGJuUnpMbkpoZVdOaGMzUW9LU0J1YnlCc2IyNW5aWElnYzNWd2NHOXlkSE1nVkVoU1JVVXVSMlZ2YldWMGNua3VJRlZ6WlNCVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVuWlc5dFpYUnllVHNLSUNBZ0lDQWdJQ0JwWmlBb1pTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnWlM1dGIzSndhRUYwZEhKcFluVjBaWE1zSUc0Z1BTQlBZbXBsWTNRdWEyVjVjeWgwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c0dWJHVnVaM1JvSUQ0Z01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdrZ1BTQjBXMjViTUYxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWJXOXljR2hVWVhKblpYUkpibVpzZFdWdVkyVnpJRDBnVzEwc0lIUm9hWE11Ylc5eWNHaFVZWEpuWlhSRWFXTjBhVzl1WVhKNUlEMGdlMzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHa3ViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnBXM0pkTG01aGJXVWdmSHdnVTNSeWFXNW5LSElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBTVzVtYkhWbGJtTmxjeTV3ZFhOb0tEQXBMQ0IwYUdsekxtMXZjbkJvVkdGeVoyVjBSR2xqZEdsdmJtRnllVnRoWFNBOUlISTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIUXhJRDBnWlM1dGIzSndhRlJoY21kbGRITTdDaUFnSUNBZ0lDQWdJQ0FnSUhReElDRTlQU0IyYjJsa0lEQWdKaVlnZERFdWJHVnVaM1JvSUQ0Z01DQW1KaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWIybHVkSE11ZFhCa1lYUmxUVzl5Y0doVVlYSm5aWFJ6S0NrZ1pHOWxjeUJ1YjNRZ2MzVndjRzl5ZENCVVNGSkZSUzVIWlc5dFpYUnllUzRnVlhObElGUklVa1ZGTGtKMVptWmxja2RsYjIxbGRISjVJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5T3dwNmNpNXdjbTkwYjNSNWNHVXVhWE5RYjJsdWRITWdQU0FoTURzS1puVnVZM1JwYjI0Z1ptTW9jeXdnWlN3Z2RDd2diaXdnYVN3Z2Npd2dieWtnZXdvZ0lDQWdiR1YwSUdFZ1BTQnpZUzVrYVhOMFlXNWpaVk54Vkc5UWIybHVkQ2h6S1RzS0lDQWdJR2xtSUNoaElEd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdjMkV1WTJ4dmMyVnpkRkJ2YVc1MFZHOVFiMmx1ZENoekxDQnNLU3dnYkM1aGNIQnNlVTFoZEhKcGVEUW9iaWs3Q2lBZ0lDQWdJQ0FnYkdWMElHTWdQU0JwTG5KaGVTNXZjbWxuYVc0dVpHbHpkR0Z1WTJWVWJ5aHNLVHNLSUNBZ0lDQWdJQ0JwWmlBb1l5QThJR2t1Ym1WaGNpQjhmQ0JqSUQ0Z2FTNW1ZWElwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0J5TG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNCa2FYTjBZVzVqWlRvZ1l5d0tJQ0FnSUNBZ0lDQWdJQ0FnWkdsemRHRnVZMlZVYjFKaGVUb2dUV0YwYUM1emNYSjBLR0VwTEFvZ0lDQWdJQ0FnSUNBZ0lDQndiMmx1ZERvZ2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pYZzZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhZMlU2SUc1MWJHd3NDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkRG9nYndvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFwOUNuWmhjaUIzYUNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYjNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYml3Z2FTd2djaXdnYnl3Z1lTd2diQ3dnWXlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDd2dZeWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NW1iM0p0WVhRZ1BTQmhJQ0U5UFNCMmIybGtJREFnUHlCaElEb2dSMjRzSUhSb2FYTXViV2x1Um1sc2RHVnlJRDBnYnlBaFBUMGdkbTlwWkNBd0lEOGdieUE2SUhSMExDQjBhR2x6TG0xaFowWnBiSFJsY2lBOUlISWdJVDA5SUhadmFXUWdNQ0EvSUhJZ09pQjBkQ3dnZEdocGN5NW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNVHNLSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJSFJvYVhNN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2RTZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDNXVaV1ZrYzFWd1pHRjBaU0E5SUNFd0xDQmxMbkpsY1hWbGMzUldhV1JsYjBaeVlXMWxRMkZzYkdKaFkyc29kU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNKeVpYRjFaWE4wVm1sa1pXOUdjbUZ0WlVOaGJHeGlZV05ySWlCcGJpQmxJQ1ltSUdVdWNtVnhkV1Z6ZEZacFpHVnZSbkpoYldWRFlXeHNZbUZqYXloMUtUc0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWgwYUdsekxtbHRZV2RsS1M1amIzQjVLSFJvYVhNcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1cGJXRm5aVHNLSUNBZ0lDQWdJQ0FpY21WeGRXVnpkRlpwWkdWdlJuSmhiV1ZEWVd4c1ltRmpheUlnYVc0Z1pTQTlQVDBnSVRFZ0ppWWdaUzV5WldGa2VWTjBZWFJsSUQ0OUlHVXVTRUZXUlY5RFZWSlNSVTVVWDBSQlZFRWdKaVlnS0hSb2FYTXVibVZsWkhOVmNHUmhkR1VnUFNBaE1DazdDaUFnSUNCOUNuMDdDbmRvTG5CeWIzUnZkSGx3WlM1cGMxWnBaR1Z2VkdWNGRIVnlaU0E5SUNFd093cDJZWElnVTJnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5MElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0hzS0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRG9nZEFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lIUm9hWE11Wm05eWJXRjBJRDBnYml3Z2RHaHBjeTV0WVdkR2FXeDBaWElnUFNCeWRDd2dkR2hwY3k1dGFXNUdhV3gwWlhJZ1BTQnlkQ3dnZEdocGN5NW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQWhNU3dnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFd093b2dJQ0FnZlFwOU93cFRhQzV3Y205MGIzUjVjR1V1YVhOR2NtRnRaV0oxWm1abGNsUmxlSFIxY21VZ1BTQWhNRHNLZG1GeUlIWmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QnZkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwTENCeUxDQnZMQ0JoTENCc0xDQmpMQ0JvTENCMUxDQmtLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVkV3hzTENCdkxDQmhMQ0JzTENCakxDQm9MQ0JwTENCeUxDQjFMQ0JrS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbWx0WVdkbElEMGdld29nSUNBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQnVDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXRhWEJ0WVhCeklEMGdaU3dnZEdocGN5NW1iR2x3V1NBOUlDRXhMQ0IwYUdsekxtZGxibVZ5WVhSbFRXbHdiV0Z3Y3lBOUlDRXhPd29nSUNBZ2ZRcDlPd3AyWVM1d2NtOTBiM1I1Y0dVdWFYTkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdWR2dnUFNCamJHRnpjeUJsZUhSbGJtUnpJRzkwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhzSUdFc0lHd3NJR01wZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3c0lHTXBPd29nSUNBZ0lDQWdJSFJvYVhNdWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLZlRzS1ZHZ3VjSEp2ZEc5MGVYQmxMbWx6UTJGdWRtRnpWR1Y0ZEhWeVpTQTlJQ0V3T3dwMllYSWdabklnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ09Dd2diaUE5SURBc0lHa2dQU0JOWVhSb0xsQkpJQ29nTWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRMmx5WTJ4bFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdjMlZuYldWdWRITTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVTNSaGNuUTZJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVEdWdVozUm9PaUJwQ2lBZ0lDQWdJQ0FnZlN3Z2RDQTlJRTFoZEdndWJXRjRLRE1zSUhRcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ1cxMHNJRzhnUFNCYlhTd2dZU0E5SUZ0ZExDQnNJRDBnVzEwc0lHTWdQU0J1WlhjZ1RTd2dhQ0E5SUc1bGR5QllPd29nSUNBZ0lDQWdJRzh1Y0hWemFDZ3dMQ0F3TENBd0tTd2dZUzV3ZFhOb0tEQXNJREFzSURFcExDQnNMbkIxYzJnb0xqVXNJQzQxS1RzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhVZ1BTQXdMQ0JrSUQwZ016c2dkU0E4UFNCME95QjFLeXNzSUdRZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2JpQXJJSFVnTHlCMElDb2dhVHNLSUNBZ0lDQWdJQ0FnSUNBZ1l5NTRJRDBnWlNBcUlFMWhkR2d1WTI5ektHWXBMQ0JqTG5rZ1BTQmxJQ29nVFdGMGFDNXphVzRvWmlrc0lHOHVjSFZ6YUNoakxuZ3NJR011ZVN3Z1l5NTZLU3dnWVM1d2RYTm9LREFzSURBc0lERXBMQ0JvTG5nZ1BTQW9iMXRrWFNBdklHVWdLeUF4S1NBdklESXNJR2d1ZVNBOUlDaHZXMlFnS3lBeFhTQXZJR1VnS3lBeEtTQXZJRElzSUd3dWNIVnphQ2hvTG5nc0lHZ3VlU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZFRFZ1BTQXhPeUIxTVNBOFBTQjBPeUIxTVNzcktYSXVjSFZ6YUNoMU1Td2dkVEVnS3lBeExDQXdLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtISXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYnl3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLR0VzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0d3c0lESXBLVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5Qm1jaWhsTG5KaFpHbDFjeXdnWlM1elpXZHRaVzUwY3l3Z1pTNTBhR1YwWVZOMFlYSjBMQ0JsTG5Sb1pYUmhUR1Z1WjNSb0tUc0tJQ0FnSUgwS2ZTd2dTbTRnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01Td2diaUE5SURFc0lHa2dQU0E0TENCeUlEMGdNU3dnYnlBOUlDRXhMQ0JoSUQwZ01Dd2diQ0E5SUUxaGRHZ3VVRWtnS2lBeUtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pEZVd4cGJtUmxja2RsYjIxbGRISjVJaXdnZEdocGN5NXdZWEpoYldWMFpYSnpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwZFhOVWIzQTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lISmhaR2wxYzBKdmRIUnZiVG9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoME9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBZV3hUWldkdFpXNTBjem9nYVN3S0lDQWdJQ0FnSUNBZ0lDQWdhR1ZwWjJoMFUyVm5iV1Z1ZEhNNklISXNDaUFnSUNBZ0lDQWdJQ0FnSUc5d1pXNUZibVJsWkRvZ2J5d0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRlRkR0Z5ZERvZ1lTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRk1aVzVuZEdnNklHd0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR3hsZENCaklEMGdkR2hwY3pzS0lDQWdJQ0FnSUNCcElEMGdUV0YwYUM1bWJHOXZjaWhwS1N3Z2NpQTlJRTFoZEdndVpteHZiM0lvY2lrN0NpQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCYlhTd2dkU0E5SUZ0ZExDQmtJRDBnVzEwc0lHWWdQU0JiWFN3Z2JTQTlJREFzSUhnZ1BTQmJYU3dnZGlBOUlHNGdMeUF5TENCbklEMGdNRHNLSUNBZ0lDQWdJQ0J3S0Nrc0lHOGdQVDA5SUNFeElDWW1JQ2hsSUQ0Z01DQW1KaUJmS0NFd0tTd2dkQ0ErSURBZ0ppWWdYeWdoTVNrcExDQjBhR2x6TG5ObGRFbHVaR1Y0S0dncExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9kU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtHUXNJRE1wS1N3Z2RHaHBjeTV6WlhSQmRIUnlhV0oxZEdVb0luVjJJaXdnYm1WM0lHUmxLR1lzSURJcEtUc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQndLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlHNWxkeUJOTENCaUlEMGdibVYzSUUwc0lFRWdQU0F3TENCTUlEMGdLSFFnTFNCbEtTQXZJRzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1NTQTlJREE3SUVrZ1BEMGdjanNnU1NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JySUQwZ1cxMHNJRUlnUFNCSklDOGdjaXdnVUNBOUlFSWdLaUFvZENBdElHVXBJQ3NnWlRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZHlBOUlEQTdJSGNnUEQwZ2FUc2dkeXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlIY2dMeUJwTENCRUlEMGdSU0FxSUd3Z0t5QmhMQ0JWSUQwZ1RXRjBhQzV6YVc0b1JDa3NJRVlnUFNCTllYUm9MbU52Y3loRUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpTG5nZ1BTQlFJQ29nVlN3Z1lpNTVJRDBnTFVJZ0tpQnVJQ3NnZGl3Z1lpNTZJRDBnVUNBcUlFWXNJSFV1Y0hWemFDaGlMbmdzSUdJdWVTd2dZaTU2S1N3Z2VTNXpaWFFvVlN3Z1RDd2dSaWt1Ym05eWJXRnNhWHBsS0Nrc0lHUXVjSFZ6YUNoNUxuZ3NJSGt1ZVN3Z2VTNTZLU3dnWmk1d2RYTm9LRVVzSURFZ0xTQkNLU3dnYXk1d2RYTm9LRzByS3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNExuQjFjMmdvYXlrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSk1TQTlJREE3SUVreElEd2dhVHNnU1RFckt5bG1iM0lvYkdWMElHc3hJRDBnTURzZ2F6RWdQQ0J5T3lCck1Tc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCQ01TQTlJSGhiYXpGZFcwa3hYU3dnVURFZ1BTQjRXMnN4SUNzZ01WMWJTVEZkTENCM01TQTlJSGhiYXpFZ0t5QXhYVnRKTVNBcklERmRMQ0JGTVNBOUlIaGJhekZkVzBreElDc2dNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvTG5CMWMyZ29RakVzSUZBeExDQkZNU2tzSUdndWNIVnphQ2hRTVN3Z2R6RXNJRVV4S1N3Z1FTQXJQU0EyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdNdVlXUmtSM0p2ZFhBb1p5d2dRU3dnTUNrc0lHY2dLejBnUVRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1h5aDVLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JpSUQwZ2JTd2dRU0E5SUc1bGR5QllMQ0JNSUQwZ2JtVjNJRTBzSUVrZ1BTQXdMQ0JySUQwZ2VTQTlQVDBnSVRBZ1B5QmxJRG9nZEN3Z1FpQTlJSGtnUFQwOUlDRXdJRDhnTVNBNklDMHhPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhjZ1BTQXhPeUIzSUR3OUlHazdJSGNyS3lsMUxuQjFjMmdvTUN3Z2RpQXFJRUlzSURBcExDQmtMbkIxYzJnb01Dd2dRaXdnTUNrc0lHWXVjSFZ6YUNndU5Td2dMalVwTENCdEt5czdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQlFJRDBnYlRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjNNU0E5SURBN0lIY3hJRHc5SUdrN0lIY3hLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFUWdQU0IzTVNBdklHa2dLaUJzSUNzZ1lTd2dWU0E5SUUxaGRHZ3VZMjl6S0VRcExDQkdJRDBnVFdGMGFDNXphVzRvUkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCTUxuZ2dQU0JySUNvZ1Jpd2dUQzU1SUQwZ2RpQXFJRUlzSUV3dWVpQTlJR3NnS2lCVkxDQjFMbkIxYzJnb1RDNTRMQ0JNTG5rc0lFd3VlaWtzSUdRdWNIVnphQ2d3TENCQ0xDQXdLU3dnUVM1NElEMGdWU0FxSUM0MUlDc2dMalVzSUVFdWVTQTlJRVlnS2lBdU5TQXFJRUlnS3lBdU5Td2daaTV3ZFhOb0tFRXVlQ3dnUVM1NUtTd2diU3NyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZHpJZ1BTQXdPeUIzTWlBOElHazdJSGN5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRVVnUFNCaUlDc2dkeklzSUVReElEMGdVQ0FySUhjeU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VTQTlQVDBnSVRBZ1B5Qm9MbkIxYzJnb1JERXNJRVF4SUNzZ01Td2dSU2tnT2lCb0xuQjFjMmdvUkRFZ0t5QXhMQ0JFTVN3Z1JTa3NJRWtnS3owZ016c0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQmpMbUZrWkVkeWIzVndLR2NzSUVrc0lIa2dQVDA5SUNFd0lEOGdNU0E2SURJcExDQm5JQ3M5SUVrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjM1JoZEdsaklHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVwdUtHVXVjbUZrYVhWelZHOXdMQ0JsTG5KaFpHbDFjMEp2ZEhSdmJTd2daUzVvWldsbmFIUXNJR1V1Y21Ga2FXRnNVMlZuYldWdWRITXNJR1V1YUdWcFoyaDBVMlZuYldWdWRITXNJR1V1YjNCbGJrVnVaR1ZrTENCbExuUm9aWFJoVTNSaGNuUXNJR1V1ZEdobGRHRk1aVzVuZEdncE93b2dJQ0FnZlFwOUxDQndjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdTbTRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBeExDQnVJRDBnT0N3Z2FTQTlJREVzSUhJZ1BTQWhNU3dnYnlBOUlEQXNJR0VnUFNCTllYUm9MbEJKSUNvZ01pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb01Dd2daU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrTnZibVZIWlc5dFpYUnllU0lzSUhSb2FYTXVjR0Z5WVcxbGRHVnljeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVhWek9pQmxMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsaGJGTmxaMjFsYm5Sek9pQnVMQW9nSUNBZ0lDQWdJQ0FnSUNCb1pXbG5hSFJUWldkdFpXNTBjem9nYVN3S0lDQWdJQ0FnSUNBZ0lDQWdiM0JsYmtWdVpHVmtPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR1YwWVZOMFlYSjBPaUJ2TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR1YwWVV4bGJtZDBhRG9nWVFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ1puSnZiVXBUVDA0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnY0hJb1pTNXlZV1JwZFhNc0lHVXVhR1ZwWjJoMExDQmxMbkpoWkdsaGJGTmxaMjFsYm5SekxDQmxMbWhsYVdkb2RGTmxaMjFsYm5SekxDQmxMbTl3Wlc1RmJtUmxaQ3dnWlM1MGFHVjBZVk4wWVhKMExDQmxMblJvWlhSaFRHVnVaM1JvS1RzS0lDQWdJSDBLZlN3Z1lXNGdQU0JqYkdGemN5QmxlSFJsYm1SeklGOWxJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYlhTd2dkQ0E5SUZ0ZExDQnVJRDBnTVN3Z2FTQTlJREFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsQnZiSGxvWldSeWIyNUhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR2xqWlhNNklHVXNDaUFnSUNBZ0lDQWdJQ0FnSUdsdVpHbGpaWE02SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ1pHVjBZV2xzT2lCcENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlGdGRMQ0J2SUQwZ1cxMDdDaUFnSUNBZ0lDQWdZU2hwS1N3Z1l5aHVLU3dnYUNncExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9jaXdnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2libTl5YldGc0lpd2dibVYzSUdSbEtISXVjMnhwWTJVb0tTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWRYWWlMQ0J1WlhjZ1pHVW9ieXdnTWlrcExDQnBJRDA5UFNBd0lEOGdkR2hwY3k1amIyMXdkWFJsVm1WeWRHVjRUbTl5YldGc2N5Z3BJRG9nZEdocGN5NXViM0p0WVd4cGVtVk9iM0p0WVd4ektDazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdZU2h3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdibVYzSUUwc0lIa2dQU0J1WlhjZ1RTd2dZaUE5SUc1bGR5Qk5Pd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVFZ1BTQXdPeUJCSUR3Z2RDNXNaVzVuZEdnN0lFRWdLejBnTXlsbUtIUmJRU0FySURCZExDQmZLU3dnWmloMFcwRWdLeUF4WFN3Z2VTa3NJR1lvZEZ0QklDc2dNbDBzSUdJcExDQnNLRjhzSUhrc0lHSXNJSEFwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCc0tIQXNJRjhzSUhrc0lHSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRUVnUFNCaUlDc2dNU3dnVENBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVrZ1BTQXdPeUJKSUR3OUlFRTdJRWtyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCTVcwbGRJRDBnVzEwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdheUE5SUhBdVkyeHZibVVvS1M1c1pYSndLSGtzSUVrZ0x5QkJLU3dnUWlBOUlGOHVZMnh2Ym1Vb0tTNXNaWEp3S0hrc0lFa2dMeUJCS1N3Z1VDQTlJRUVnTFNCSk93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCM0lEMGdNRHNnZHlBOFBTQlFPeUIzS3lzcGR5QTlQVDBnTUNBbUppQkpJRDA5UFNCQklEOGdURnRKWFZ0M1hTQTlJR3NnT2lCTVcwbGRXM2RkSUQwZ2F5NWpiRzl1WlNncExteGxjbkFvUWl3Z2R5QXZJRkFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnU1RFZ1BTQXdPeUJKTVNBOElFRTdJRWt4S3lzcFptOXlLR3hsZENCck1TQTlJREE3SUdzeElEd2dNaUFxSUNoQklDMGdTVEVwSUMwZ01Uc2dhekVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdRakVnUFNCTllYUm9MbVpzYjI5eUtHc3hJQzhnTWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCck1TQWxJRElnUFQwOUlEQWdQeUFvWkNoTVcwa3hYVnRDTVNBcklERmRLU3dnWkNoTVcwa3hJQ3NnTVYxYlFqRmRLU3dnWkNoTVcwa3hYVnRDTVYwcEtTQTZJQ2hrS0V4YlNURmRXMEl4SUNzZ01WMHBMQ0JrS0V4YlNURWdLeUF4WFZ0Q01TQXJJREZkS1N3Z1pDaE1XMGt4SUNzZ01WMWJRakZkS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWXlod0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVNBOUlEQTdJSGtnUENCeUxteGxibWQwYURzZ2VTQXJQU0F6S1Y4dWVDQTlJSEpiZVNBcklEQmRMQ0JmTG5rZ1BTQnlXM2tnS3lBeFhTd2dYeTU2SUQwZ2NsdDVJQ3NnTWwwc0lGOHVibTl5YldGc2FYcGxLQ2t1YlhWc2RHbHdiSGxUWTJGc1lYSW9jQ2tzSUhKYmVTQXJJREJkSUQwZ1h5NTRMQ0J5VzNrZ0t5QXhYU0E5SUY4dWVTd2djbHQ1SUNzZ01sMGdQU0JmTG5vN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHZ29LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3SUQwZ2JtVjNJRTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1h5QTlJREE3SUY4Z1BDQnlMbXhsYm1kMGFEc2dYeUFyUFNBektYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQXVlQ0E5SUhKYlh5QXJJREJkTENCd0xua2dQU0J5VzE4Z0t5QXhYU3dnY0M1NklEMGdjbHRmSUNzZ01sMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVNBOUlIWW9jQ2tnTHlBeUlDOGdUV0YwYUM1UVNTQXJJQzQxTENCaUlEMGdaeWh3S1NBdklFMWhkR2d1VUVrZ0t5QXVOVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzh1Y0hWemFDaDVMQ0F4SUMwZ1lpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdiU2dwTENCMUtDazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSFVvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjQ0E5SURBN0lIQWdQQ0J2TG14bGJtZDBhRHNnY0NBclBTQTJLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCZklEMGdiMXR3SUNzZ01GMHNJSGtnUFNCdlczQWdLeUF5WFN3Z1lpQTlJRzliY0NBcklEUmRMQ0JCSUQwZ1RXRjBhQzV0WVhnb1h5d2dlU3dnWWlrc0lFd2dQU0JOWVhSb0xtMXBiaWhmTENCNUxDQmlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRUVnUGlBdU9TQW1KaUJNSUR3Z0xqRWdKaVlnS0Y4Z1BDQXVNaUFtSmlBb2IxdHdJQ3NnTUYwZ0t6MGdNU2tzSUhrZ1BDQXVNaUFtSmlBb2IxdHdJQ3NnTWwwZ0t6MGdNU2tzSUdJZ1BDQXVNaUFtSmlBb2IxdHdJQ3NnTkYwZ0t6MGdNU2twT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR1FvY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5TG5CMWMyZ29jQzU0TENCd0xua3NJSEF1ZWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHWW9jQ3dnWHlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJSEFnS2lBek93b2dJQ0FnSUNBZ0lDQWdJQ0JmTG5nZ1BTQmxXM2tnS3lBd1hTd2dYeTU1SUQwZ1pWdDVJQ3NnTVYwc0lGOHVlaUE5SUdWYmVTQXJJREpkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCdEtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjQ0E5SUc1bGR5Qk5MQ0JmSUQwZ2JtVjNJRTBzSUhrZ1BTQnVaWGNnVFN3Z1lpQTlJRzVsZHlCTkxDQkJJRDBnYm1WM0lGZ3NJRXdnUFNCdVpYY2dXQ3dnU1NBOUlHNWxkeUJZT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHc2dQU0F3TENCQ0lEMGdNRHNnYXlBOElISXViR1Z1WjNSb095QnJJQ3M5SURrc0lFSWdLejBnTmlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd0xuTmxkQ2h5VzJzZ0t5QXdYU3dnY2x0cklDc2dNVjBzSUhKYmF5QXJJREpkS1N3Z1h5NXpaWFFvY2x0cklDc2dNMTBzSUhKYmF5QXJJRFJkTENCeVcyc2dLeUExWFNrc0lIa3VjMlYwS0hKYmF5QXJJRFpkTENCeVcyc2dLeUEzWFN3Z2NsdHJJQ3NnT0YwcExDQkJMbk5sZENodlcwSWdLeUF3WFN3Z2IxdENJQ3NnTVYwcExDQk1Mbk5sZENodlcwSWdLeUF5WFN3Z2IxdENJQ3NnTTEwcExDQkpMbk5sZENodlcwSWdLeUEwWFN3Z2IxdENJQ3NnTlYwcExDQmlMbU52Y0hrb2NDa3VZV1JrS0Y4cExtRmtaQ2g1S1M1a2FYWnBaR1ZUWTJGc1lYSW9NeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1VDQTlJSFlvWWlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNEtFRXNJRUlnS3lBd0xDQndMQ0JRS1N3Z2VDaE1MQ0JDSUNzZ01pd2dYeXdnVUNrc0lIZ29TU3dnUWlBcklEUXNJSGtzSUZBcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUhnb2NDd2dYeXdnZVN3Z1lpa2dld29nSUNBZ0lDQWdJQ0FnSUNCaUlEd2dNQ0FtSmlCd0xuZ2dQVDA5SURFZ0ppWWdLRzliWDEwZ1BTQndMbmdnTFNBeEtTd2dlUzU0SUQwOVBTQXdJQ1ltSUhrdWVpQTlQVDBnTUNBbUppQW9iMXRmWFNBOUlHSWdMeUF5SUM4Z1RXRjBhQzVRU1NBcklDNDFLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZGlod0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJOWVhSb0xtRjBZVzR5S0hBdWVpd2dMWEF1ZUNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHY29jQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1RXRjBhQzVoZEdGdU1pZ3RjQzU1TENCTllYUm9Mbk54Y25Rb2NDNTRJQ29nY0M1NElDc2djQzU2SUNvZ2NDNTZLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJR0Z1S0dVdWRtVnlkR2xqWlhNc0lHVXVhVzVrYVdObGN5d2daUzV5WVdScGRYTXNJR1V1WkdWMFlXbHNjeWs3Q2lBZ0lDQjlDbjBzSUcxeUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaGJpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJREFwZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnS0RFZ0t5Qk5ZWFJvTG5OeGNuUW9OU2twSUM4Z01pd2dhU0E5SURFZ0x5QnVMQ0J5SUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0YVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNCcExBb2dJQ0FnSUNBZ0lDQWdJQ0F0Yml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnYml3S0lDQWdJQ0FnSUNBZ0lDQWdMV2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0YVN3S0lDQWdJQ0FnSUNBZ0lDQWdiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnYVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdrc0NpQWdJQ0FnSUNBZ0lDQWdJRzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUMxdUxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMV2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0JwQ2lBZ0lDQWdJQ0FnWFN3Z2J5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJREUxTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRNc0NpQWdJQ0FnSUNBZ0lDQWdJRGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTVMQW9nSUNBZ0lDQWdJQ0FnSUNBeE55d0tJQ0FnSUNBZ0lDQWdJQ0FnTnl3S0lDQWdJQ0FnSUNBZ0lDQWdNVGNzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeE55d0tJQ0FnSUNBZ0lDQWdJQ0FnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01UY3NDaUFnSUNBZ0lDQWdJQ0FnSURnc0NpQWdJQ0FnSUNBZ0lDQWdJREV3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOeXdLSUNBZ0lDQWdJQ0FnSUNBZ01UQXNDaUFnSUNBZ0lDQWdJQ0FnSURZc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURFMkxBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnT0N3S0lDQWdJQ0FnSUNBZ0lDQWdNaXdLSUNBZ0lDQWdJQ0FnSUNBZ01UQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREV5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRnc0NpQWdJQ0FnSUNBZ0lDQWdJREUyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRNc0NpQWdJQ0FnSUNBZ0lDQWdJRFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeE5Td0tJQ0FnSUNBZ0lDQWdJQ0FnTWl3S0lDQWdJQ0FnSUNBZ0lDQWdNVFlzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4T0N3S0lDQWdJQ0FnSUNBZ0lDQWdNeXdLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTXl3S0lDQWdJQ0FnSUNBZ0lDQWdNVE1zQ2lBZ0lDQWdJQ0FnSUNBZ0lERTRMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0E1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ09Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRFc0NpQWdJQ0FnSUNBZ0lDQWdJREU0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNU3dLSUNBZ0lDQWdJQ0FnSUNBZ015d0tJQ0FnSUNBZ0lDQWdJQ0FnTkN3S0lDQWdJQ0FnSUNBZ0lDQWdNVFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TWl3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ05Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdPQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURrc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXhMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4T1N3S0lDQWdJQ0FnSUNBZ0lDQWdNVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTVMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4T1N3S0lDQWdJQ0FnSUNBZ0lDQWdOU3dLSUNBZ0lDQWdJQ0FnSUNBZ01UUXNDaUFnSUNBZ0lDQWdJQ0FnSURFNUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TkN3S0lDQWdJQ0FnSUNBZ0lDQWdOQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Ua3NDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREUzTEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRRc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERTBMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBNUNpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQnpkWEJsY2loeUxDQnZMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUkc5a1pXTmhhR1ZrY205dVIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdaR1YwWVdsc09pQjBDaUFnSUNBZ0lDQWdmVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QnRjaWhsTG5KaFpHbDFjeXdnWlM1a1pYUmhhV3dwT3dvZ0lDQWdmUXA5TENCNWN5QTlJRzVsZHlCTkxDQjJjeUE5SUc1bGR5Qk5MQ0JLYnlBOUlHNWxkeUJOTENCZmN5QTlJRzVsZHlCdWRDd2dYMkVnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQnVkV3hzTENCMElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTUwZVhCbElEMGdJa1ZrWjJWelIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdkbGIyMWxkSEo1T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYUhKbGMyaHZiR1JCYm1kc1pUb2dkQW9nSUNBZ0lDQWdJSDBzSUdVZ0lUMDlJRzUxYkd3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0JOWVhSb0xuQnZkeWd4TUN3Z05Da3NJSElnUFNCTllYUm9MbU52Y3loWGJpQXFJSFFwTENCdklEMGdaUzVuWlhSSmJtUmxlQ2dwTENCaElEMGdaUzVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpa3NJR3dnUFNCdklEOGdieTVqYjNWdWRDQTZJR0V1WTI5MWJuUXNJR01nUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEQUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3Z2FDQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0poSWl3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNKaUlpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDSmpJZ29nSUNBZ0lDQWdJQ0FnSUNCZExDQjFJRDBnYm1WM0lFRnljbUY1S0RNcExDQmtJRDBnZTMwc0lHWWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRJRDBnTURzZ2JTQThJR3c3SUcwZ0t6MGdNeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQ4Z0tHTmJNRjBnUFNCdkxtZGxkRmdvYlNrc0lHTmJNVjBnUFNCdkxtZGxkRmdvYlNBcklERXBMQ0JqV3pKZElEMGdieTVuWlhSWUtHMGdLeUF5S1NrZ09pQW9ZMXN3WFNBOUlHMHNJR05iTVYwZ1BTQnRJQ3NnTVN3Z1kxc3lYU0E5SUcwZ0t5QXlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCN0lHRTZJSGdnTENCaU9pQjJJQ3dnWXpvZ1p5QWdmU0E5SUY5ek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSGd1Wm5KdmJVSjFabVpsY2tGMGRISnBZblYwWlNoaExDQmpXekJkS1N3Z2RpNW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLR0VzSUdOYk1WMHBMQ0JuTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb1lTd2dZMXN5WFNrc0lGOXpMbWRsZEU1dmNtMWhiQ2hLYnlrc0lIVmJNRjBnUFNCZ0pIdE5ZWFJvTG5KdmRXNWtLSGd1ZUNBcUlHa3BmU3drZTAxaGRHZ3VjbTkxYm1Rb2VDNTVJQ29nYVNsOUxDUjdUV0YwYUM1eWIzVnVaQ2g0TG5vZ0tpQnBLWDFnTENCMVd6RmRJRDBnWUNSN1RXRjBhQzV5YjNWdVpDaDJMbmdnS2lCcEtYMHNKSHROWVhSb0xuSnZkVzVrS0hZdWVTQXFJR2twZlN3a2UwMWhkR2d1Y205MWJtUW9kaTU2SUNvZ2FTbDlZQ3dnZFZzeVhTQTlJR0FrZTAxaGRHZ3VjbTkxYm1Rb1p5NTRJQ29nYVNsOUxDUjdUV0YwYUM1eWIzVnVaQ2huTG5rZ0tpQnBLWDBzSkh0TllYUm9Mbkp2ZFc1a0tHY3VlaUFxSUdrcGZXQXNJQ0VvZFZzd1hTQTlQVDBnZFZzeFhTQjhmQ0IxV3pGZElEMDlQU0IxV3pKZElIeDhJSFZiTWwwZ1BUMDlJSFZiTUYwcEtTQm1iM0lvYkdWMElIQWdQU0F3T3lCd0lEd2dNenNnY0NzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1h5QTlJQ2h3SUNzZ01Ta2dKU0F6TENCNUlEMGdkVnR3WFN3Z1lpQTlJSFZiWDEwc0lFRWdQU0JmYzF0b1czQmRYU3dnVENBOUlGOXpXMmhiWDExZExDQkpJRDBnWUNSN2VYMWZKSHRpZldBc0lHc2dQU0JnSkh0aWZWOGtlM2w5WURzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnJJR2x1SUdRZ0ppWWdaRnRyWFNBL0lDaEtieTVrYjNRb1pGdHJYUzV1YjNKdFlXd3BJRHc5SUhJZ0ppWWdLR1l1Y0hWemFDaEJMbmdzSUVFdWVTd2dRUzU2S1N3Z1ppNXdkWE5vS0V3dWVDd2dUQzU1TENCTUxub3BLU3dnWkZ0clhTQTlJRzUxYkd3cElEb2dTU0JwYmlCa0lIeDhJQ2hrVzBsZElEMGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZURBNklHTmJjRjBzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNE1Ub2dZMXRmWFN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm05eWJXRnNPaUJLYnk1amJHOXVaU2dwQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnRNU0JwYmlCa0tXbG1JQ2hrVzIweFhTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhzZ2FXNWtaWGd3T2lCNE1TQXNJR2x1WkdWNE1Ub2dkakVnSUgwZ1BTQmtXMjB4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhsekxtWnliMjFDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZU3dnZURFcExDQjJjeTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dFc0lIWXhLU3dnWmk1d2RYTm9LSGx6TG5nc0lIbHpMbmtzSUhsekxub3BMQ0JtTG5CMWMyZ29kbk11ZUN3Z2RuTXVlU3dnZG5NdWVpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR1lzSURNcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNuMHNJRU4wSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRM1Z5ZG1VaUxDQjBhR2x6TG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3lBOUlESXdNRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrTjFjblpsT2lBdVoyVjBVRzlwYm5Rb0tTQnViM1FnYVcxd2JHVnRaVzUwWldRdUlpa3NJRzUxYkd3N0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRFRjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WjJWMFZYUnZWRzFoY0hCcGJtY29aU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBVRzlwYm5Rb2Jpd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEhNb1pTQTlJRFVwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JpQTlJREE3SUc0Z1BEMGdaVHNnYmlzcktYUXVjSFZ6YUNoMGFHbHpMbWRsZEZCdmFXNTBLRzRnTHlCbEtTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNCOUNpQWdJQ0JuWlhSVGNHRmpaV1JRYjJsdWRITW9aU0E5SURVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQRDBnWlRzZ2Jpc3JLWFF1Y0hWemFDaDBhR2x6TG1kbGRGQnZhVzUwUVhRb2JpQXZJR1VwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLSUNBZ0lHZGxkRXhsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVjBUR1Z1WjNSb2N5Z3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxXMlV1YkdWdVozUm9JQzBnTVYwN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJNWlc1bmRHaHpLR1VnUFNCMGFHbHpMbUZ5WTB4bGJtZDBhRVJwZG1semFXOXVjeWtnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1OaFkyaGxRWEpqVEdWdVozUm9jeUFtSmlCMGFHbHpMbU5oWTJobFFYSmpUR1Z1WjNSb2N5NXNaVzVuZEdnZ1BUMDlJR1VnS3lBeElDWW1JQ0YwYUdsekxtNWxaV1J6VlhCa1lYUmxLU0J5WlhSMWNtNGdkR2hwY3k1allXTm9aVUZ5WTB4bGJtZDBhSE03Q2lBZ0lDQWdJQ0FnZEdocGN5NXVaV1ZrYzFWd1pHRjBaU0E5SUNFeE93b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1cxMHNJRzRzSUdrZ1BTQjBhR2x6TG1kbGRGQnZhVzUwS0RBcExDQnlJRDBnTURzS0lDQWdJQ0FnSUNCMExuQjFjMmdvTUNrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNVHNnYnlBOFBTQmxPeUJ2S3lzcGJpQTlJSFJvYVhNdVoyVjBVRzlwYm5Rb2J5QXZJR1VwTENCeUlDczlJRzR1WkdsemRHRnVZMlZVYnlocEtTd2dkQzV3ZFhOb0tISXBMQ0JwSUQwZ2Jqc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqWVdOb1pVRnlZMHhsYm1kMGFITWdQU0IwTENCME93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFFYSmpUR1Z1WjNSb2N5Z3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11WjJWMFRHVnVaM1JvY3lncE93b2dJQ0FnZlFvZ0lDQWdaMlYwVlhSdlZHMWhjSEJwYm1jb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NW5aWFJNWlc1bmRHaHpLQ2tzSUdrZ1BTQXdMQ0J5SUQwZ2JpNXNaVzVuZEdnc0lHODdDaUFnSUNBZ0lDQWdkQ0EvSUc4Z1BTQjBJRG9nYnlBOUlHVWdLaUJ1VzNJZ0xTQXhYVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJREFzSUd3Z1BTQnlJQzBnTVN3Z1l6c0tJQ0FnSUNBZ0lDQm1iM0lvT3lCaElEdzlJR3c3S1dsbUlDaHBJRDBnVFdGMGFDNW1iRzl2Y2loaElDc2dLR3dnTFNCaEtTQXZJRElwTENCaklEMGdibHRwWFNBdElHOHNJR01nUENBd0tTQmhJRDBnYVNBcklERTdDaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9ZeUErSURBcElHd2dQU0JwSUMwZ01Uc0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiQ0E5SUdrN0NpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlHd3NJRzViYVYwZ1BUMDlJRzhwSUhKbGRIVnliaUJwSUM4Z0tISWdMU0F4S1RzS0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUc1YmFWMHNJR1FnUFNCdVcya2dLeUF4WFNBdElHZ3NJR1lnUFNBb2J5QXRJR2dwSUM4Z1pEc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z0tHa2dLeUJtS1NBdklDaHlJQzBnTVNrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJVWVc1blpXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVWdMU0F4WlMwMExDQnlJRDBnWlNBcklERmxMVFE3Q2lBZ0lDQWdJQ0FnYVNBOElEQWdKaVlnS0drZ1BTQXdLU3dnY2lBK0lERWdKaVlnS0hJZ1BTQXhLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJSFJvYVhNdVoyVjBVRzlwYm5Rb2FTa3NJR0VnUFNCMGFHbHpMbWRsZEZCdmFXNTBLSElwTENCc0lEMGdkQ0I4ZkNBb2J5NXBjMVpsWTNSdmNqSWdQeUJ1WlhjZ1dDQTZJRzVsZHlCTktUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JDNWpiM0I1S0dFcExuTjFZaWh2S1M1dWIzSnRZV3hwZW1Vb0tTd2diRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGUmhibWRsYm5SQmRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbWRsZEZWMGIxUnRZWEJ3YVc1bktHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1kbGRGUmhibWRsYm5Rb2Jpd2dkQ2s3Q2lBZ0lDQjlDaUFnSUNCamIyMXdkWFJsUm5KbGJtVjBSbkpoYldWektHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUc1bGR5Qk5MQ0JwSUQwZ1cxMHNJSElnUFNCYlhTd2dieUE5SUZ0ZExDQmhJRDBnYm1WM0lFMHNJR3dnUFNCdVpYY2djR1U3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JtSUQwZ01Ec2daaUE4UFNCbE95Qm1LeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYlNBOUlHWWdMeUJsT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBXMlpkSUQwZ2RHaHBjeTVuWlhSVVlXNW5aVzUwUVhRb2JTd2dibVYzSUUwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlXekJkSUQwZ2JtVjNJRTBzSUc5Yk1GMGdQU0J1WlhjZ1RUc0tJQ0FnSUNBZ0lDQnNaWFFnWXlBOUlFNTFiV0psY2k1TlFWaGZWa0ZNVlVVc0lHZ2dQU0JOWVhSb0xtRmljeWhwV3pCZExuZ3BMQ0IxSUQwZ1RXRjBhQzVoWW5Nb2FWc3dYUzU1S1N3Z1pDQTlJRTFoZEdndVlXSnpLR2xiTUYwdWVpazdDaUFnSUNBZ0lDQWdhQ0E4UFNCaklDWW1JQ2hqSUQwZ2FDd2diaTV6WlhRb01Td2dNQ3dnTUNrcExDQjFJRHc5SUdNZ0ppWWdLR01nUFNCMUxDQnVMbk5sZENnd0xDQXhMQ0F3S1Nrc0lHUWdQRDBnWXlBbUppQnVMbk5sZENnd0xDQXdMQ0F4S1N3Z1lTNWpjbTl6YzFabFkzUnZjbk1vYVZzd1hTd2diaWt1Ym05eWJXRnNhWHBsS0Nrc0lISmJNRjB1WTNKdmMzTldaV04wYjNKektHbGJNRjBzSUdFcExDQnZXekJkTG1OeWIzTnpWbVZqZEc5eWN5aHBXekJkTENCeVd6QmRLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1l4SUQwZ01Uc2daakVnUEQwZ1pUc2daakVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeVcyWXhYU0E5SUhKYlpqRWdMU0F4WFM1amJHOXVaU2dwTENCdlcyWXhYU0E5SUc5YlpqRWdMU0F4WFM1amJHOXVaU2dwTENCaExtTnliM056Vm1WamRHOXljeWhwVzJZeElDMGdNVjBzSUdsYlpqRmRLU3dnWVM1c1pXNW5kR2dvS1NBK0lFNTFiV0psY2k1RlVGTkpURTlPS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaExtNXZjbTFoYkdsNlpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUcweElEMGdUV0YwYUM1aFkyOXpLRzEwS0dsYlpqRWdMU0F4WFM1a2IzUW9hVnRtTVYwcExDQXRNU3dnTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NsdG1NVjB1WVhCd2JIbE5ZWFJ5YVhnMEtHd3ViV0ZyWlZKdmRHRjBhVzl1UVhocGN5aGhMQ0J0TVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHOWJaakZkTG1OeWIzTnpWbVZqZEc5eWN5aHBXMll4WFN3Z2NsdG1NVjBwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9kQ0E5UFQwZ0lUQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1l5SUQwZ1RXRjBhQzVoWTI5ektHMTBLSEpiTUYwdVpHOTBLSEpiWlYwcExDQXRNU3dnTVNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtTWlBdlBTQmxMQ0JwV3pCZExtUnZkQ2hoTG1OeWIzTnpWbVZqZEc5eWN5aHlXekJkTENCeVcyVmRLU2tnUGlBd0lDWW1JQ2htTWlBOUlDMW1NaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JUSWdQU0F4T3lCdE1pQThQU0JsT3lCdE1pc3JLWEpiYlRKZExtRndjR3g1VFdGMGNtbDROQ2hzTG0xaGEyVlNiM1JoZEdsdmJrRjRhWE1vYVZ0dE1sMHNJR1l5SUNvZ2JUSXBLU3dnYjF0dE1sMHVZM0p2YzNOV1pXTjBiM0p6S0dsYmJUSmRMQ0J5VzIweVhTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSaGJtZGxiblJ6T2lCcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1YjNKdFlXeHpPaUJ5TEFvZ0lDQWdJQ0FnSUNBZ0lDQmlhVzV2Y20xaGJITTZJRzhLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtRnlZMHhsYm1kMGFFUnBkbWx6YVc5dWN5QTlJR1V1WVhKalRHVnVaM1JvUkdsMmFYTnBiMjV6TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJoWkdGMFlUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5YzJsdmJqb2dOQzQxTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dJa04xY25abElpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxibVZ5WVhSdmNqb2dJa04xY25abExuUnZTbE5QVGlJS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WVhKalRHVnVaM1JvUkdsMmFYTnBiMjV6SUQwZ2RHaHBjeTVoY21OTVpXNW5kR2hFYVhacGMybHZibk1zSUdVdWRIbHdaU0E5SUhSb2FYTXVkSGx3WlN3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhjbU5NWlc1bmRHaEVhWFpwYzJsdmJuTWdQU0JsTG1GeVkweGxibWQwYUVScGRtbHphVzl1Y3l3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnVlhJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F3TENCMElEMGdNQ3dnYmlBOUlERXNJR2tnUFNBeExDQnlJRDBnTUN3Z2J5QTlJRTFoZEdndVVFa2dLaUF5TENCaElEMGdJVEVzSUd3Z1BTQXdLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKRmJHeHBjSE5sUTNWeWRtVWlMQ0IwYUdsekxtRllJRDBnWlN3Z2RHaHBjeTVoV1NBOUlIUXNJSFJvYVhNdWVGSmhaR2wxY3lBOUlHNHNJSFJvYVhNdWVWSmhaR2wxY3lBOUlHa3NJSFJvYVhNdVlWTjBZWEowUVc1bmJHVWdQU0J5TENCMGFHbHpMbUZGYm1SQmJtZHNaU0E5SUc4c0lIUm9hWE11WVVOc2IyTnJkMmx6WlNBOUlHRXNJSFJvYVhNdVlWSnZkR0YwYVc5dUlEMGdiRHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFnZkh3Z2JtVjNJRmdzSUdrZ1BTQk5ZWFJvTGxCSklDb2dNaXdnY2lBOUlIUm9hWE11WVVWdVpFRnVaMnhsSUMwZ2RHaHBjeTVoVTNSaGNuUkJibWRzWlN3Z2J5QTlJRTFoZEdndVlXSnpLSElwSUR3Z1RuVnRZbVZ5TGtWUVUwbE1UMDQ3Q2lBZ0lDQWdJQ0FnWm05eUtEc2djaUE4SURBN0tYSWdLejBnYVRzS0lDQWdJQ0FnSUNCbWIzSW9PeUJ5SUQ0Z2FUc3BjaUF0UFNCcE93b2dJQ0FnSUNBZ0lISWdQQ0JPZFcxaVpYSXVSVkJUU1V4UFRpQW1KaUFvYnlBL0lISWdQU0F3SURvZ2NpQTlJR2twTENCMGFHbHpMbUZEYkc5amEzZHBjMlVnUFQwOUlDRXdJQ1ltSUNGdklDWW1JQ2h5SUQwOVBTQnBJRDhnY2lBOUlDMXBJRG9nY2lBOUlISWdMU0JwS1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVZVk4wWVhKMFFXNW5iR1VnS3lCbElDb2djaXdnYkNBOUlIUm9hWE11WVZnZ0t5QjBhR2x6TG5oU1lXUnBkWE1nS2lCTllYUm9MbU52Y3loaEtTd2dZeUE5SUhSb2FYTXVZVmtnS3lCMGFHbHpMbmxTWVdScGRYTWdLaUJOWVhSb0xuTnBiaWhoS1RzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1aFVtOTBZWFJwYjI0Z0lUMDlJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQk5ZWFJvTG1OdmN5aDBhR2x6TG1GU2IzUmhkR2x2Ymlrc0lIVWdQU0JOWVhSb0xuTnBiaWgwYUdsekxtRlNiM1JoZEdsdmJpa3NJR1FnUFNCc0lDMGdkR2hwY3k1aFdDd2daaUE5SUdNZ0xTQjBhR2x6TG1GWk93b2dJQ0FnSUNBZ0lDQWdJQ0JzSUQwZ1pDQXFJR2dnTFNCbUlDb2dkU0FySUhSb2FYTXVZVmdzSUdNZ1BTQmtJQ29nZFNBcklHWWdLaUJvSUNzZ2RHaHBjeTVoV1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0dWMyVjBLR3dzSUdNcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZVmdnUFNCbExtRllMQ0IwYUdsekxtRlpJRDBnWlM1aFdTd2dkR2hwY3k1NFVtRmthWFZ6SUQwZ1pTNTRVbUZrYVhWekxDQjBhR2x6TG5sU1lXUnBkWE1nUFNCbExubFNZV1JwZFhNc0lIUm9hWE11WVZOMFlYSjBRVzVuYkdVZ1BTQmxMbUZUZEdGeWRFRnVaMnhsTENCMGFHbHpMbUZGYm1SQmJtZHNaU0E5SUdVdVlVVnVaRUZ1WjJ4bExDQjBhR2x6TG1GRGJHOWphM2RwYzJVZ1BTQmxMbUZEYkc5amEzZHBjMlVzSUhSb2FYTXVZVkp2ZEdGMGFXOXVJRDBnWlM1aFVtOTBZWFJwYjI0c0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzVoV0NBOUlIUm9hWE11WVZnc0lHVXVZVmtnUFNCMGFHbHpMbUZaTENCbExuaFNZV1JwZFhNZ1BTQjBhR2x6TG5oU1lXUnBkWE1zSUdVdWVWSmhaR2wxY3lBOUlIUm9hWE11ZVZKaFpHbDFjeXdnWlM1aFUzUmhjblJCYm1kc1pTQTlJSFJvYVhNdVlWTjBZWEowUVc1bmJHVXNJR1V1WVVWdVpFRnVaMnhsSUQwZ2RHaHBjeTVoUlc1a1FXNW5iR1VzSUdVdVlVTnNiMk5yZDJselpTQTlJSFJvYVhNdVlVTnNiMk5yZDJselpTd2daUzVoVW05MFlYUnBiMjRnUFNCMGFHbHpMbUZTYjNSaGRHbHZiaXdnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdVlWZ2dQU0JsTG1GWUxDQjBhR2x6TG1GWklEMGdaUzVoV1N3Z2RHaHBjeTU0VW1Ga2FYVnpJRDBnWlM1NFVtRmthWFZ6TENCMGFHbHpMbmxTWVdScGRYTWdQU0JsTG5sU1lXUnBkWE1zSUhSb2FYTXVZVk4wWVhKMFFXNW5iR1VnUFNCbExtRlRkR0Z5ZEVGdVoyeGxMQ0IwYUdsekxtRkZibVJCYm1kc1pTQTlJR1V1WVVWdVpFRnVaMnhsTENCMGFHbHpMbUZEYkc5amEzZHBjMlVnUFNCbExtRkRiRzlqYTNkcGMyVXNJSFJvYVhNdVlWSnZkR0YwYVc5dUlEMGdaUzVoVW05MFlYUnBiMjRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbFZ5TG5CeWIzUnZkSGx3WlM1cGMwVnNiR2x3YzJWRGRYSjJaU0E5SUNFd093cDJZWElnVFdFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUZWeUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0c0lHa3NJSElzSUc4cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXNJRzRzSUc0c0lHa3NJSElzSUc4cE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pCY21ORGRYSjJaU0k3Q2lBZ0lDQjlDbjA3Q2sxaExuQnliM1J2ZEhsd1pTNXBjMEZ5WTBOMWNuWmxJRDBnSVRBN0NtWjFibU4wYVc5dUlHSmhLQ2tnZXdvZ0lDQWdiR1YwSUhNZ1BTQXdMQ0JsSUQwZ01Dd2dkQ0E5SURBc0lHNGdQU0F3T3dvZ0lDQWdablZ1WTNScGIyNGdhU2h5TENCdkxDQmhMQ0JzS1NCN0NpQWdJQ0FnSUNBZ2N5QTlJSElzSUdVZ1BTQmhMQ0IwSUQwZ0xUTWdLaUJ5SUNzZ015QXFJRzhnTFNBeUlDb2dZU0F0SUd3c0lHNGdQU0F5SUNvZ2NpQXRJRElnS2lCdklDc2dZU0FySUd3N0NpQWdJQ0I5Q2lBZ0lDQnlaWFIxY200Z2V3b2dJQ0FnSUNBZ0lHbHVhWFJEWVhSdGRXeHNVbTl0T2lCbWRXNWpkR2x2YmloeUxDQnZMQ0JoTENCc0xDQmpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa29ieXdnWVN3Z1l5QXFJQ2hoSUMwZ2Npa3NJR01nS2lBb2JDQXRJRzhwS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lHbHVhWFJPYjI1MWJtbG1iM0p0UTJGMGJYVnNiRkp2YlRvZ1puVnVZM1JwYjI0b2Npd2dieXdnWVN3Z2JDd2dZeXdnYUN3Z2RTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUNodklDMGdjaWtnTHlCaklDMGdLR0VnTFNCeUtTQXZJQ2hqSUNzZ2FDa2dLeUFvWVNBdElHOHBJQzhnYUN3Z1ppQTlJQ2hoSUMwZ2J5a2dMeUJvSUMwZ0tHd2dMU0J2S1NBdklDaG9JQ3NnZFNrZ0t5QW9iQ0F0SUdFcElDOGdkVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pDQXFQU0JvTENCbUlDbzlJR2dzSUdrb2J5d2dZU3dnWkN3Z1ppazdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0JqWVd4ak9pQm1kVzVqZEdsdmJpaHlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2NpQXFJSElzSUdFZ1BTQnZJQ29nY2pzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlITWdLeUJsSUNvZ2NpQXJJSFFnS2lCdklDc2diaUFxSUdFN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlRzS2ZRcDJZWElnVFhNZ1BTQnVaWGNnVFN3Z1dXOGdQU0J1WlhjZ1ltRXNJRnB2SUQwZ2JtVjNJR0poTENBa2J5QTlJRzVsZHlCaVlTd2dkMkVnUFNCamJHRnpjeUJsZUhSbGJtUnpJRU4wSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQmJYU3dnZENBOUlDRXhMQ0J1SUQwZ0ltTmxiblJ5YVhCbGRHRnNJaXdnYVNBOUlDNDFLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpZ3BPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKRFlYUnRkV3hzVW05dFEzVnlkbVV6SWl3Z2RHaHBjeTV3YjJsdWRITWdQU0JsTENCMGFHbHpMbU5zYjNObFpDQTlJSFFzSUhSb2FYTXVZM1Z5ZG1WVWVYQmxJRDBnYml3Z2RHaHBjeTUwWlc1emFXOXVJRDBnYVRzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFnUFNCdVpYY2dUU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEN3Z2FTQTlJSFJvYVhNdWNHOXBiblJ6TENCeUlEMGdhUzVzWlc1bmRHZ3NJRzhnUFNBb2NpQXRJQ2gwYUdsekxtTnNiM05sWkNBL0lEQWdPaUF4S1NrZ0tpQmxMQ0JoSUQwZ1RXRjBhQzVtYkc5dmNpaHZLU3dnYkNBOUlHOGdMU0JoT3dvZ0lDQWdJQ0FnSUhSb2FYTXVZMnh2YzJWa0lEOGdZU0FyUFNCaElENGdNQ0EvSURBZ09pQW9UV0YwYUM1bWJHOXZjaWhOWVhSb0xtRmljeWhoS1NBdklISXBJQ3NnTVNrZ0tpQnlJRG9nYkNBOVBUMGdNQ0FtSmlCaElEMDlQU0J5SUMwZ01TQW1KaUFvWVNBOUlISWdMU0F5TENCc0lEMGdNU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHTXNJR2c3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiRzl6WldRZ2ZId2dZU0ErSURBZ1B5QmpJRDBnYVZzb1lTQXRJREVwSUNVZ2NsMGdPaUFvVFhNdWMzVmlWbVZqZEc5eWN5aHBXekJkTENCcFd6RmRLUzVoWkdRb2FWc3dYU2tzSUdNZ1BTQk5jeWs3Q2lBZ0lDQWdJQ0FnYkdWMElIVWdQU0JwVzJFZ0pTQnlYU3dnWkNBOUlHbGJLR0VnS3lBeEtTQWxJSEpkT3dvZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG1Oc2IzTmxaQ0I4ZkNCaElDc2dNaUE4SUhJZ1B5Qm9JRDBnYVZzb1lTQXJJRElwSUNVZ2NsMGdPaUFvVFhNdWMzVmlWbVZqZEc5eWN5aHBXM0lnTFNBeFhTd2dhVnR5SUMwZ01sMHBMbUZrWkNocFczSWdMU0F4WFNrc0lHZ2dQU0JOY3lrc0lIUm9hWE11WTNWeWRtVlVlWEJsSUQwOVBTQWlZMlZ1ZEhKcGNHVjBZV3dpSUh4OElIUm9hWE11WTNWeWRtVlVlWEJsSUQwOVBTQWlZMmh2Y21SaGJDSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCMGFHbHpMbU4xY25abFZIbHdaU0E5UFQwZ0ltTm9iM0prWVd3aUlEOGdMalVnT2lBdU1qVXNJRzBnUFNCTllYUm9MbkJ2ZHloakxtUnBjM1JoYm1ObFZHOVRjWFZoY21Wa0tIVXBMQ0JtS1N3Z2VDQTlJRTFoZEdndWNHOTNLSFV1WkdsemRHRnVZMlZVYjFOeGRXRnlaV1FvWkNrc0lHWXBMQ0IySUQwZ1RXRjBhQzV3YjNjb1pDNWthWE4wWVc1alpWUnZVM0YxWVhKbFpDaG9LU3dnWmlrN0NpQWdJQ0FnSUNBZ0lDQWdJSGdnUENBeFpTMDBJQ1ltSUNoNElEMGdNU2tzSUcwZ1BDQXhaUzAwSUNZbUlDaHRJRDBnZUNrc0lIWWdQQ0F4WlMwMElDWW1JQ2gySUQwZ2VDa3NJRmx2TG1sdWFYUk9iMjUxYm1sbWIzSnRRMkYwYlhWc2JGSnZiU2hqTG5nc0lIVXVlQ3dnWkM1NExDQm9MbmdzSUcwc0lIZ3NJSFlwTENCYWJ5NXBibWwwVG05dWRXNXBabTl5YlVOaGRHMTFiR3hTYjIwb1l5NTVMQ0IxTG5rc0lHUXVlU3dnYUM1NUxDQnRMQ0I0TENCMktTd2dKRzh1YVc1cGRFNXZiblZ1YVdadmNtMURZWFJ0ZFd4c1VtOXRLR011ZWl3Z2RTNTZMQ0JrTG5vc0lHZ3VlaXdnYlN3Z2VDd2dkaWs3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSFJvYVhNdVkzVnlkbVZVZVhCbElEMDlQU0FpWTJGMGJYVnNiSEp2YlNJZ0ppWWdLRmx2TG1sdWFYUkRZWFJ0ZFd4c1VtOXRLR011ZUN3Z2RTNTRMQ0JrTG5nc0lHZ3VlQ3dnZEdocGN5NTBaVzV6YVc5dUtTd2dXbTh1YVc1cGRFTmhkRzExYkd4U2IyMG9ZeTU1TENCMUxua3NJR1F1ZVN3Z2FDNTVMQ0IwYUdsekxuUmxibk5wYjI0cExDQWtieTVwYm1sMFEyRjBiWFZzYkZKdmJTaGpMbm9zSUhVdWVpd2daQzU2TENCb0xub3NJSFJvYVhNdWRHVnVjMmx2YmlrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxuTmxkQ2haYnk1allXeGpLR3dwTENCYWJ5NWpZV3hqS0d3cExDQWtieTVqWVd4aktHd3BLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVjRzlwYm5SeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWNHOXBiblJ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzV3YjJsdWRITmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0c5cGJuUnpMbkIxYzJnb2FTNWpiRzl1WlNncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTJ4dmMyVmtJRDBnWlM1amJHOXpaV1FzSUhSb2FYTXVZM1Z5ZG1WVWVYQmxJRDBnWlM1amRYSjJaVlI1Y0dVc0lIUm9hWE11ZEdWdWMybHZiaUE5SUdVdWRHVnVjMmx2Yml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJR1V1Y0c5cGJuUnpJRDBnVzEwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCMElEMGdNQ3dnYmlBOUlIUm9hWE11Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeTV3YjJsdWRITmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVjRzlwYm5SekxuQjFjMmdvYVM1MGIwRnljbUY1S0NrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNWpiRzl6WldRZ1BTQjBhR2x6TG1Oc2IzTmxaQ3dnWlM1amRYSjJaVlI1Y0dVZ1BTQjBhR2x6TG1OMWNuWmxWSGx3WlN3Z1pTNTBaVzV6YVc5dUlEMGdkR2hwY3k1MFpXNXphVzl1TENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMbVp5YjIxS1UwOU9LR1VwTENCMGFHbHpMbkJ2YVc1MGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCbExuQnZhVzUwY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1Y0c5cGJuUnpXM1JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5CdmFXNTBjeTV3ZFhOb0tHNWxkeUJOS0NrdVpuSnZiVUZ5Y21GNUtHa3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyeHZjMlZrSUQwZ1pTNWpiRzl6WldRc0lIUm9hWE11WTNWeWRtVlVlWEJsSUQwZ1pTNWpkWEoyWlZSNWNHVXNJSFJvYVhNdWRHVnVjMmx2YmlBOUlHVXVkR1Z1YzJsdmJpd2dkR2hwY3pzS0lDQWdJSDBLZlRzS2QyRXVjSEp2ZEc5MGVYQmxMbWx6UTJGMGJYVnNiRkp2YlVOMWNuWmxNeUE5SUNFd093cG1kVzVqZEdsdmJpQndZeWh6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCc1pYUWdjaUE5SUNodUlDMGdaU2tnS2lBdU5Td2dieUE5SUNocElDMGdkQ2tnS2lBdU5Td2dZU0E5SUhNZ0tpQnpMQ0JzSUQwZ2N5QXFJR0U3Q2lBZ0lDQnlaWFIxY200Z0tESWdLaUIwSUMwZ01pQXFJRzRnS3lCeUlDc2dieWtnS2lCc0lDc2dLQzB6SUNvZ2RDQXJJRE1nS2lCdUlDMGdNaUFxSUhJZ0xTQnZLU0FxSUdFZ0t5QnlJQ29nY3lBcklIUTdDbjBLWm5WdVkzUnBiMjRnU1hnb2N5d2daU2tnZXdvZ0lDQWdiR1YwSUhRZ1BTQXhJQzBnY3pzS0lDQWdJSEpsZEhWeWJpQjBJQ29nZENBcUlHVTdDbjBLWm5WdVkzUnBiMjRnUkhnb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlESWdLaUFvTVNBdElITXBJQ29nY3lBcUlHVTdDbjBLWm5WdVkzUnBiMjRnUm5nb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITWdLaUJ6SUNvZ1pUc0tmUXBtZFc1amRHbHZiaUJoY2loekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCeVpYUjFjbTRnU1hnb2N5d2daU2tnS3lCRWVDaHpMQ0IwS1NBcklFWjRLSE1zSUc0cE93cDlDbVoxYm1OMGFXOXVJRTU0S0hNc0lHVXBJSHNLSUNBZ0lHeGxkQ0IwSUQwZ01TQXRJSE03Q2lBZ0lDQnlaWFIxY200Z2RDQXFJSFFnS2lCMElDb2daVHNLZlFwbWRXNWpkR2x2YmlCQ2VDaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJREVnTFNCek93b2dJQ0FnY21WMGRYSnVJRE1nS2lCMElDb2dkQ0FxSUhNZ0tpQmxPd3A5Q21aMWJtTjBhVzl1SUhwNEtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQXpJQ29nS0RFZ0xTQnpLU0FxSUhNZ0tpQnpJQ29nWlRzS2ZRcG1kVzVqZEdsdmJpQlZlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3lBcUlITWdLaUJ6SUNvZ1pUc0tmUXBtZFc1amRHbHZiaUJzY2loekxDQmxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQnlaWFIxY200Z1RuZ29jeXdnWlNrZ0t5QkNlQ2h6TENCMEtTQXJJSHA0S0hNc0lHNHBJQ3NnVlhnb2N5d2dhU2s3Q24wS2RtRnlJR3h2SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJEZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZnc0lIUWdQU0J1WlhjZ1dDd2diaUE5SUc1bGR5QllMQ0JwSUQwZ2JtVjNJRmdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lrTjFZbWxqUW1WNmFXVnlRM1Z5ZG1VaUxDQjBhR2x6TG5Zd0lEMGdaU3dnZEdocGN5NTJNU0E5SUhRc0lIUm9hWE11ZGpJZ1BTQnVMQ0IwYUdsekxuWXpJRDBnYVRzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFnUFNCdVpYY2dXQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEN3Z2FTQTlJSFJvYVhNdWRqQXNJSElnUFNCMGFHbHpMbll4TENCdklEMGdkR2hwY3k1Mk1pd2dZU0E5SUhSb2FYTXVkak03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtHeHlLR1VzSUdrdWVDd2djaTU0TENCdkxuZ3NJR0V1ZUNrc0lHeHlLR1VzSUdrdWVTd2djaTU1TENCdkxua3NJR0V1ZVNrcExDQnVPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11ZGpBdVkyOXdlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNWpiM0I1S0dVdWRqRXBMQ0IwYUdsekxuWXlMbU52Y0hrb1pTNTJNaWtzSUhSb2FYTXVkak11WTI5d2VTaGxMbll6S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbll3SUQwZ2RHaHBjeTUyTUM1MGIwRnljbUY1S0Nrc0lHVXVkakVnUFNCMGFHbHpMbll4TG5SdlFYSnlZWGtvS1N3Z1pTNTJNaUE5SUhSb2FYTXVkakl1ZEc5QmNuSmhlU2dwTENCbExuWXpJRDBnZEdocGN5NTJNeTUwYjBGeWNtRjVLQ2tzSUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtWnliMjFLVTA5T0tHVXBMQ0IwYUdsekxuWXdMbVp5YjIxQmNuSmhlU2hsTG5Zd0tTd2dkR2hwY3k1Mk1TNW1jbTl0UVhKeVlYa29aUzUyTVNrc0lIUm9hWE11ZGpJdVpuSnZiVUZ5Y21GNUtHVXVkaklwTENCMGFHbHpMbll6TG1aeWIyMUJjbkpoZVNobExuWXpLU3dnZEdocGN6c0tJQ0FnSUgwS2ZUc0tiRzh1Y0hKdmRHOTBlWEJsTG1selEzVmlhV05DWlhwcFpYSkRkWEoyWlNBOUlDRXdPd3AyWVhJZ1UyRWdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJOTENCdUlEMGdibVYzSUUwc0lHa2dQU0J1WlhjZ1RTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUTNWaWFXTkNaWHBwWlhKRGRYSjJaVE1pTENCMGFHbHpMbll3SUQwZ1pTd2dkR2hwY3k1Mk1TQTlJSFFzSUhSb2FYTXVkaklnUFNCdUxDQjBhR2x6TG5ZeklEMGdhVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwS0dVc0lIUWdQU0J1WlhjZ1RTa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkQ3dnYVNBOUlIUm9hWE11ZGpBc0lISWdQU0IwYUdsekxuWXhMQ0J2SUQwZ2RHaHBjeTUyTWl3Z1lTQTlJSFJvYVhNdWRqTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVjMlYwS0d4eUtHVXNJR2t1ZUN3Z2NpNTRMQ0J2TG5nc0lHRXVlQ2tzSUd4eUtHVXNJR2t1ZVN3Z2NpNTVMQ0J2TG5rc0lHRXVlU2tzSUd4eUtHVXNJR2t1ZWl3Z2NpNTZMQ0J2TG5vc0lHRXVlaWtwTENCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVkakF1WTI5d2VTaGxMbll3S1N3Z2RHaHBjeTUyTVM1amIzQjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtTnZjSGtvWlM1Mk1pa3NJSFJvYVhNdWRqTXVZMjl3ZVNobExuWXpLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuWXdJRDBnZEdocGN5NTJNQzUwYjBGeWNtRjVLQ2tzSUdVdWRqRWdQU0IwYUdsekxuWXhMblJ2UVhKeVlYa29LU3dnWlM1Mk1pQTlJSFJvYVhNdWRqSXVkRzlCY25KaGVTZ3BMQ0JsTG5ZeklEMGdkR2hwY3k1Mk15NTBiMEZ5Y21GNUtDa3NJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1aeWIyMUtVMDlPS0dVcExDQjBhR2x6TG5Zd0xtWnliMjFCY25KaGVTaGxMbll3S1N3Z2RHaHBjeTUyTVM1bWNtOXRRWEp5WVhrb1pTNTJNU2tzSUhSb2FYTXVkakl1Wm5KdmJVRnljbUY1S0dVdWRqSXBMQ0IwYUdsekxuWXpMbVp5YjIxQmNuSmhlU2hsTG5ZektTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1UyRXVjSEp2ZEc5MGVYQmxMbWx6UTNWaWFXTkNaWHBwWlhKRGRYSjJaVE1nUFNBaE1Ec0tkbUZ5SUU5eUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lGZ3NJSFFnUFNCdVpYY2dXQ2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVU4xY25abElpd2dkR2hwY3k1Mk1TQTlJR1VzSUhSb2FYTXVkaklnUFNCME93b2dJQ0FnZlFvZ0lDQWdaMlYwVUc5cGJuUW9aU3dnZENBOUlHNWxkeUJZS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCME93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbElEMDlQU0F4SUQ4Z2JpNWpiM0I1S0hSb2FYTXVkaklwSURvZ0tHNHVZMjl3ZVNoMGFHbHpMbll5S1M1emRXSW9kR2hwY3k1Mk1Ta3NJRzR1YlhWc2RHbHdiSGxUWTJGc1lYSW9aU2t1WVdSa0tIUm9hWE11ZGpFcEtTd2dianNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnZhVzUwUVhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtZGxkRkJ2YVc1MEtHVXNJSFFwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWR0Z1WjJWdWRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMElIeDhJRzVsZHlCWU93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdUxtTnZjSGtvZEdocGN5NTJNaWt1YzNWaUtIUm9hWE11ZGpFcExtNXZjbTFoYkdsNlpTZ3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqRXVZMjl3ZVNobExuWXhLU3dnZEdocGN5NTJNaTVqYjNCNUtHVXVkaklwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVkakVnUFNCMGFHbHpMbll4TG5SdlFYSnlZWGtvS1N3Z1pTNTJNaUE5SUhSb2FYTXVkakl1ZEc5QmNuSmhlU2dwTENCbE93b2dJQ0FnZlFvZ0lDQWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNW1jbTl0U2xOUFRpaGxLU3dnZEdocGN5NTJNUzVtY205dFFYSnlZWGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVabkp2YlVGeWNtRjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwUGNpNXdjbTkwYjNSNWNHVXVhWE5NYVc1bFEzVnlkbVVnUFNBaE1Ec0tkbUZ5SUVWb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnYm1WM0lFMHNJSFFnUFNCdVpYY2dUU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVU4xY25abE15SXNJSFJvYVhNdWFYTk1hVzVsUTNWeWRtVXpJRDBnSVRBc0lIUm9hWE11ZGpFZ1BTQmxMQ0IwYUdsekxuWXlJRDBnZERzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFnUFNCdVpYY2dUU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZERzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNBOVBUMGdNU0EvSUc0dVkyOXdlU2gwYUdsekxuWXlLU0E2SUNodUxtTnZjSGtvZEdocGN5NTJNaWt1YzNWaUtIUm9hWE11ZGpFcExDQnVMbTExYkhScGNHeDVVMk5oYkdGeUtHVXBMbUZrWkNoMGFHbHpMbll4S1Nrc0lHNDdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkRUYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1blpYUlFiMmx1ZENobExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5ZeExtTnZjSGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVZMjl3ZVNobExuWXlLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSE4xY0dWeUxuUnZTbE5QVGlncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbExuWXhJRDBnZEdocGN5NTJNUzUwYjBGeWNtRjVLQ2tzSUdVdWRqSWdQU0IwYUdsekxuWXlMblJ2UVhKeVlYa29LU3dnWlRzS0lDQWdJSDBLSUNBZ0lHWnliMjFLVTA5T0tHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdWRqRXVabkp2YlVGeWNtRjVLR1V1ZGpFcExDQjBhR2x6TG5ZeUxtWnliMjFCY25KaGVTaGxMbll5S1N3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnWTI4Z1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVOMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1WlhjZ1dDd2dkQ0E5SUc1bGR5QllMQ0J1SUQwZ2JtVjNJRmdwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxJaXdnZEdocGN5NTJNQ0E5SUdVc0lIUm9hWE11ZGpFZ1BTQjBMQ0IwYUdsekxuWXlJRDBnYmpzS0lDQWdJSDBLSUNBZ0lHZGxkRkJ2YVc1MEtHVXNJSFFnUFNCdVpYY2dXQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEN3Z2FTQTlJSFJvYVhNdWRqQXNJSElnUFNCMGFHbHpMbll4TENCdklEMGdkR2hwY3k1Mk1qc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpaWFFvWVhJb1pTd2dhUzU0TENCeUxuZ3NJRzh1ZUNrc0lHRnlLR1VzSUdrdWVTd2djaTU1TENCdkxua3BLU3dnYmpzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuWXdMbU52Y0hrb1pTNTJNQ2tzSUhSb2FYTXVkakV1WTI5d2VTaGxMbll4S1N3Z2RHaHBjeTUyTWk1amIzQjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1ZGpBZ1BTQjBhR2x6TG5Zd0xuUnZRWEp5WVhrb0tTd2daUzUyTVNBOUlIUm9hWE11ZGpFdWRHOUJjbkpoZVNncExDQmxMbll5SUQwZ2RHaHBjeTUyTWk1MGIwRnljbUY1S0Nrc0lHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbVp5YjIxS1UwOU9LR1VwTENCMGFHbHpMbll3TG1aeWIyMUJjbkpoZVNobExuWXdLU3dnZEdocGN5NTJNUzVtY205dFFYSnlZWGtvWlM1Mk1Ta3NJSFJvYVhNdWRqSXVabkp2YlVGeWNtRjVLR1V1ZGpJcExDQjBhR2x6T3dvZ0lDQWdmUXA5T3dwamJ5NXdjbTkwYjNSNWNHVXVhWE5SZFdGa2NtRjBhV05DWlhwcFpYSkRkWEoyWlNBOUlDRXdPd3AyWVhJZ2FHOGdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJOTENCdUlEMGdibVYzSUUwcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbEYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsTXlJc0lIUm9hWE11ZGpBZ1BTQmxMQ0IwYUdsekxuWXhJRDBnZEN3Z2RHaHBjeTUyTWlBOUlHNDdDaUFnSUNCOUNpQWdJQ0JuWlhSUWIybHVkQ2hsTENCMElEMGdibVYzSUUwcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUXNJR2tnUFNCMGFHbHpMbll3TENCeUlEMGdkR2hwY3k1Mk1Td2dieUE5SUhSb2FYTXVkakk3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzJWMEtHRnlLR1VzSUdrdWVDd2djaTU0TENCdkxuZ3BMQ0JoY2lobExDQnBMbmtzSUhJdWVTd2dieTU1S1N3Z1lYSW9aU3dnYVM1NkxDQnlMbm9zSUc4dWVpa3BMQ0J1T3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWRqQXVZMjl3ZVNobExuWXdLU3dnZEdocGN5NTJNUzVqYjNCNUtHVXVkakVwTENCMGFHbHpMbll5TG1OdmNIa29aUzUyTWlrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwcFRUMDRvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCemRYQmxjaTUwYjBwVFQwNG9LVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaUzUyTUNBOUlIUm9hWE11ZGpBdWRHOUJjbkpoZVNncExDQmxMbll4SUQwZ2RHaHBjeTUyTVM1MGIwRnljbUY1S0Nrc0lHVXVkaklnUFNCMGFHbHpMbll5TG5SdlFYSnlZWGtvS1N3Z1pUc0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVkakF1Wm5KdmJVRnljbUY1S0dVdWRqQXBMQ0IwYUdsekxuWXhMbVp5YjIxQmNuSmhlU2hsTG5ZeEtTd2dkR2hwY3k1Mk1pNW1jbTl0UVhKeVlYa29aUzUyTWlrc0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q21odkxuQnliM1J2ZEhsd1pTNXBjMUYxWVdSeVlYUnBZMEpsZW1sbGNrTjFjblpsTXlBOUlDRXdPd3AyWVhJZ2RXOGdQU0JqYkdGemN5QmxlSFJsYm1SeklFTjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCYlhTbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTNCc2FXNWxRM1Z5ZG1VaUxDQjBhR2x6TG5CdmFXNTBjeUE5SUdVN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJRYjJsdWRDaGxMQ0IwSUQwZ2JtVjNJRmdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhRc0lHa2dQU0IwYUdsekxuQnZhVzUwY3l3Z2NpQTlJQ2hwTG14bGJtZDBhQ0F0SURFcElDb2daU3dnYnlBOUlFMWhkR2d1Wm14dmIzSW9jaWtzSUdFZ1BTQnlJQzBnYnl3Z2JDQTlJR2xiYnlBOVBUMGdNQ0EvSUc4Z09pQnZJQzBnTVYwc0lHTWdQU0JwVzI5ZExDQm9JRDBnYVZ0dklENGdhUzVzWlc1bmRHZ2dMU0F5SUQ4Z2FTNXNaVzVuZEdnZ0xTQXhJRG9nYnlBcklERmRMQ0IxSUQwZ2FWdHZJRDRnYVM1c1pXNW5kR2dnTFNBeklEOGdhUzVzWlc1bmRHZ2dMU0F4SURvZ2J5QXJJREpkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG5ObGRDaHdZeWhoTENCc0xuZ3NJR011ZUN3Z2FDNTRMQ0IxTG5ncExDQndZeWhoTENCc0xua3NJR011ZVN3Z2FDNTVMQ0IxTG5rcEtTd2dianNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWNHOXBiblJ6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1Y0c5cGJuUnpMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ1pTNXdiMmx1ZEhOYmRGMDdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjRzlwYm5SekxuQjFjMmdvYVM1amJHOXVaU2dwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0J6ZFhCbGNpNTBiMHBUVDA0b0tUc0tJQ0FnSUNBZ0lDQmxMbkJ2YVc1MGN5QTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQXNJRzRnUFNCMGFHbHpMbkJ2YVc1MGN5NXNaVzVuZEdnN0lIUWdQQ0J1T3lCMEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVjRzlwYm5SelczUmRPd29nSUNBZ0lDQWdJQ0FnSUNCbExuQnZhVzUwY3k1d2RYTm9LR2t1ZEc5QmNuSmhlU2dwS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVN0NpQWdJQ0I5Q2lBZ0lDQm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYzNWd1pYSXVabkp2YlVwVFQwNG9aU2tzSUhSb2FYTXVjRzlwYm5SeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdWNHOXBiblJ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzV3YjJsdWRITmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0c5cGJuUnpMbkIxYzJnb2JtVjNJRmdvS1M1bWNtOXRRWEp5WVhrb2FTa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3pzS0lDQWdJSDBLZlRzS2RXOHVjSEp2ZEc5MGVYQmxMbWx6VTNCc2FXNWxRM1Z5ZG1VZ1BTQWhNRHNLZG1GeUlGUmhJRDBnVDJKcVpXTjBMbVp5WldWNlpTaDdDaUFnSUNCZlgzQnliM1J2WDE4NklHNTFiR3dzQ2lBZ0lDQkJjbU5EZFhKMlpUb2dUV0VzQ2lBZ0lDQkRZWFJ0ZFd4c1VtOXRRM1Z5ZG1Vek9pQjNZU3dLSUNBZ0lFTjFZbWxqUW1WNmFXVnlRM1Z5ZG1VNklHeHZMQW9nSUNBZ1EzVmlhV05DWlhwcFpYSkRkWEoyWlRNNklGTmhMQW9nSUNBZ1JXeHNhWEJ6WlVOMWNuWmxPaUJWY2l3S0lDQWdJRXhwYm1WRGRYSjJaVG9nVDNJc0NpQWdJQ0JNYVc1bFEzVnlkbVV6T2lCRmFDd0tJQ0FnSUZGMVlXUnlZWFJwWTBKbGVtbGxja04xY25abE9pQmpieXdLSUNBZ0lGRjFZV1J5WVhScFkwSmxlbWxsY2tOMWNuWmxNem9nYUc4c0NpQWdJQ0JUY0d4cGJtVkRkWEoyWlRvZ2RXOEtmU2tzSUVGb0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCRGRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpZ3Bld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtOMWNuWmxVR0YwYUNJc0lIUm9hWE11WTNWeWRtVnpJRDBnVzEwc0lIUm9hWE11WVhWMGIwTnNiM05sSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JoWkdRb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdVkzVnlkbVZ6TG5CMWMyZ29aU2s3Q2lBZ0lDQjlDaUFnSUNCamJHOXpaVkJoZEdnb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1OMWNuWmxjMXN3WFM1blpYUlFiMmx1ZENnd0tTd2dkQ0E5SUhSb2FYTXVZM1Z5ZG1WelczUm9hWE11WTNWeWRtVnpMbXhsYm1kMGFDQXRJREZkTG1kbGRGQnZhVzUwS0RFcE93b2dJQ0FnSUNBZ0lHVXVaWEYxWVd4ektIUXBJSHg4SUhSb2FYTXVZM1Z5ZG1WekxuQjFjMmdvYm1WM0lFOXlLSFFzSUdVcEtUc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlHVWdLaUIwYUdsekxtZGxkRXhsYm1kMGFDZ3BMQ0JwSUQwZ2RHaHBjeTVuWlhSRGRYSjJaVXhsYm1kMGFITW9LU3dnY2lBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0RzZ2NpQThJR2t1YkdWdVozUm9PeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwVzNKZElENDlJRzRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnYVZ0eVhTQXRJRzRzSUdFZ1BTQjBhR2x6TG1OMWNuWmxjMXR5WFN3Z2JDQTlJR0V1WjJWMFRHVnVaM1JvS0Nrc0lHTWdQU0JzSUQwOVBTQXdJRDhnTUNBNklERWdMU0J2SUM4Z2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCaExtZGxkRkJ2YVc1MFFYUW9ZeXdnZENrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2Npc3JPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkRzS0lDQWdJSDBLSUNBZ0lHZGxkRXhsYm1kMGFDZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdVoyVjBRM1Z5ZG1WTVpXNW5kR2h6S0NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdWYlpTNXNaVzVuZEdnZ0xTQXhYVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVUZ5WTB4bGJtZDBhSE1vS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwYUdsekxtTmhZMmhsVEdWdVozUm9jeUE5SUc1MWJHd3NJSFJvYVhNdVoyVjBRM1Z5ZG1WTVpXNW5kR2h6S0NrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEZFhKMlpVeGxibWQwYUhNb0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZMkZqYUdWTVpXNW5kR2h6SUNZbUlIUm9hWE11WTJGamFHVk1aVzVuZEdoekxteGxibWQwYUNBOVBUMGdkR2hwY3k1amRYSjJaWE11YkdWdVozUm9LU0J5WlhSMWNtNGdkR2hwY3k1allXTm9aVXhsYm1kMGFITTdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQmJYU3dnZENBOUlEQTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJSFJvYVhNdVkzVnlkbVZ6TG14bGJtZDBhRHNnYmlBOElHazdJRzRyS3lsMElDczlJSFJvYVhNdVkzVnlkbVZ6VzI1ZExtZGxkRXhsYm1kMGFDZ3BMQ0JsTG5CMWMyZ29kQ2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkyRmphR1ZNWlc1bmRHaHpJRDBnWlN3Z1pUc0tJQ0FnSUgwS0lDQWdJR2RsZEZOd1lXTmxaRkJ2YVc1MGN5aGxJRDBnTkRBcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBN0lHNGdQRDBnWlRzZ2Jpc3JLWFF1Y0hWemFDaDBhR2x6TG1kbGRGQnZhVzUwS0c0Z0x5QmxLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYVjBiME5zYjNObElDWW1JSFF1Y0hWemFDaDBXekJkS1N3Z2REc0tJQ0FnSUgwS0lDQWdJR2RsZEZCdmFXNTBjeWhsSUQwZ01USXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkTENCdU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJREFzSUhJZ1BTQjBhR2x6TG1OMWNuWmxjenNnYVNBOElISXViR1Z1WjNSb095QnBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlISmJhVjBzSUdFZ1BTQnZJQ1ltSUc4dWFYTkZiR3hwY0hObFEzVnlkbVVnUHlCbElDb2dNaUE2SUc4Z0ppWWdLRzh1YVhOTWFXNWxRM1Z5ZG1VZ2ZId2dieTVwYzB4cGJtVkRkWEoyWlRNcElEOGdNU0E2SUc4Z0ppWWdieTVwYzFOd2JHbHVaVU4xY25abElEOGdaU0FxSUc4dWNHOXBiblJ6TG14bGJtZDBhQ0E2SUdVc0lHd2dQU0J2TG1kbGRGQnZhVzUwY3loaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Ec2dZeUE4SUd3dWJHVnVaM1JvT3lCakt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdnZ1BTQnNXMk5kT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYmlBbUppQnVMbVZ4ZFdGc2N5aG9LU0I4ZkNBb2RDNXdkWE5vS0dncExDQnVJRDBnYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlYVjBiME5zYjNObElDWW1JSFF1YkdWdVozUm9JRDRnTVNBbUppQWhkRnQwTG14bGJtZDBhQ0F0SURGZExtVnhkV0ZzY3loMFd6QmRLU0FtSmlCMExuQjFjMmdvZEZzd1hTa3NJSFE3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTjFjblpsY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdkQ0E5SURBc0lHNGdQU0JsTG1OMWNuWmxjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVXVZM1Z5ZG1WelczUmRPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbU4xY25abGN5NXdkWE5vS0drdVkyeHZibVVvS1NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUYxZEc5RGJHOXpaU0E5SUdVdVlYVjBiME5zYjNObExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2s3Q2lBZ0lDQWdJQ0FnWlM1aGRYUnZRMnh2YzJVZ1BTQjBhR2x6TG1GMWRHOURiRzl6WlN3Z1pTNWpkWEoyWlhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NWpkWEoyWlhNdWJHVnVaM1JvT3lCMElEd2dianNnZENzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwYUdsekxtTjFjblpsYzF0MFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWlM1amRYSjJaWE11Y0hWemFDaHBMblJ2U2xOUFRpZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR1U3Q2lBZ0lDQjlDaUFnSUNCbWNtOXRTbE5QVGlobEtTQjdDaUFnSUNBZ0lDQWdjM1Z3WlhJdVpuSnZiVXBUVDA0b1pTa3NJSFJvYVhNdVlYVjBiME5zYjNObElEMGdaUzVoZFhSdlEyeHZjMlVzSUhSb2FYTXVZM1Z5ZG1WeklEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ01Dd2diaUE5SUdVdVkzVnlkbVZ6TG14bGJtZDBhRHNnZENBOElHNDdJSFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCcElEMGdaUzVqZFhKMlpYTmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTNWeWRtVnpMbkIxYzJnb2JtVjNJRlJoVzJrdWRIbHdaVjBvS1M1bWNtOXRTbE5QVGlocEtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUXA5TENCbmNpQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FXZ2dld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVVHRjBhQ0lzSUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwSUQwZ2JtVjNJRmdzSUdVZ0ppWWdkR2hwY3k1elpYUkdjbTl0VUc5cGJuUnpLR1VwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZCdmFXNTBjeWhsS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV0YjNabFZHOG9aVnN3WFM1NExDQmxXekJkTG5rcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREVzSUc0Z1BTQmxMbXhsYm1kMGFEc2dkQ0E4SUc0N0lIUXJLeWwwYUdsekxteHBibVZVYnlobFczUmRMbmdzSUdWYmRGMHVlU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnRiM1psVkc4b1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTjFjbkpsYm5SUWIybHVkQzV6WlhRb1pTd2dkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzYVc1bFZHOG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2JtVjNJRTl5S0hSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG1Oc2IyNWxLQ2tzSUc1bGR5QllLR1VzSUhRcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNodUtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVjMlYwS0dVc0lIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjWFZoWkhKaGRHbGpRM1Z5ZG1WVWJ5aGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ1kyOG9kR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVZMnh2Ym1Vb0tTd2dibVYzSUZnb1pTd2dkQ2tzSUc1bGR5QllLRzRzSUdrcEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqZFhKMlpYTXVjSFZ6YUNoeUtTd2dkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVjMlYwS0c0c0lHa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZbVY2YVdWeVEzVnlkbVZVYnlobExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdVpYY2diRzhvZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1WTJ4dmJtVW9LU3dnYm1WM0lGZ29aU3dnZENrc0lHNWxkeUJZS0c0c0lHa3BMQ0J1WlhjZ1dDaHlMQ0J2S1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5ZG1WekxuQjFjMmdvWVNrc0lIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExuTmxkQ2h5TENCdktTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITndiR2x1WlZSb2NuVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuSmxiblJRYjJsdWRDNWpiRzl1WlNncENpQWdJQ0FnSUNBZ1hTNWpiMjVqWVhRb1pTa3NJRzRnUFNCdVpYY2dkVzhvZENrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZM1Z5ZG1WekxuQjFjMmdvYmlrc0lIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExtTnZjSGtvWlZ0bExteGxibWQwYUNBdElERmRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR0Z5WXlobExDQjBMQ0J1TENCcExDQnlMQ0J2S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMGFHbHpMbU4xY25KbGJuUlFiMmx1ZEM1NExDQnNJRDBnZEdocGN5NWpkWEp5Wlc1MFVHOXBiblF1ZVRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWhZbk5oY21Nb1pTQXJJR0VzSUhRZ0t5QnNMQ0J1TENCcExDQnlMQ0J2S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdGaWMyRnlZeWhsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVlXSnpaV3hzYVhCelpTaGxMQ0IwTENCdUxDQnVMQ0JwTENCeUxDQnZLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1ZzYkdsd2MyVW9aU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JqSUQwZ2RHaHBjeTVqZFhKeVpXNTBVRzlwYm5RdWVDd2dhQ0E5SUhSb2FYTXVZM1Z5Y21WdWRGQnZhVzUwTG5rN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZV0p6Wld4c2FYQnpaU2hsSUNzZ1l5d2dkQ0FySUdnc0lHNHNJR2tzSUhJc0lHOHNJR0VzSUd3cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1lXSnpaV3hzYVhCelpTaGxMQ0IwTENCdUxDQnBMQ0J5TENCdkxDQmhMQ0JzS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNCdVpYY2dWWElvWlN3Z2RDd2diaXdnYVN3Z2Npd2dieXdnWVN3Z2JDazdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZM1Z5ZG1WekxteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCakxtZGxkRkJ2YVc1MEtEQXBPd29nSUNBZ0lDQWdJQ0FnSUNCMUxtVnhkV0ZzY3loMGFHbHpMbU4xY25KbGJuUlFiMmx1ZENrZ2ZId2dkR2hwY3k1c2FXNWxWRzhvZFM1NExDQjFMbmtwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCMGFHbHpMbU4xY25abGN5NXdkWE5vS0dNcE93b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ1l5NW5aWFJRYjJsdWRDZ3hLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amRYSnlaVzUwVUc5cGJuUXVZMjl3ZVNob0tTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTjFjbkpsYm5SUWIybHVkQzVqYjNCNUtHVXVZM1Z5Y21WdWRGQnZhVzUwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpZ3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxMbU4xY25KbGJuUlFiMmx1ZENBOUlIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExuUnZRWEp5WVhrb0tTd2daVHNLSUNBZ0lIMEtJQ0FnSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11WTNWeWNtVnVkRkJ2YVc1MExtWnliMjFCY25KaGVTaGxMbU4xY25KbGJuUlFiMmx1ZENrc0lIUm9hWE03Q2lBZ0lDQjlDbjBzSUZoMElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCbmNpQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuVjFhV1FnUFNCRmRDZ3BMQ0IwYUdsekxuUjVjR1VnUFNBaVUyaGhjR1VpTENCMGFHbHpMbWh2YkdWeklEMGdXMTA3Q2lBZ0lDQjlDaUFnSUNCblpYUlFiMmx1ZEhOSWIyeGxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkR2hwY3k1b2IyeGxjeTVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZEZ0dVhTQTlJSFJvYVhNdWFHOXNaWE5iYmwwdVoyVjBVRzlwYm5SektHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBPd29nSUNBZ2ZRb2dJQ0FnWlhoMGNtRmpkRkJ2YVc1MGN5aGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2MyaGhjR1U2SUhSb2FYTXVaMlYwVUc5cGJuUnpLR1VwTEFvZ0lDQWdJQ0FnSUNBZ0lDQm9iMnhsY3pvZ2RHaHBjeTVuWlhSUWIybHVkSE5JYjJ4bGN5aGxLUW9nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDaUFnSUNCamIzQjVLR1VwSUhzS0lDQWdJQ0FnSUNCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtaHZiR1Z6SUQwZ1cxMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjBJRDBnTUN3Z2JpQTlJR1V1YUc5c1pYTXViR1Z1WjNSb095QjBJRHdnYmpzZ2RDc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCbExtaHZiR1Z6VzNSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtaHZiR1Z6TG5CMWMyZ29hUzVqYkc5dVpTZ3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQnpkWEJsY2k1MGIwcFRUMDRvS1RzS0lDQWdJQ0FnSUNCbExuVjFhV1FnUFNCMGFHbHpMblYxYVdRc0lHVXVhRzlzWlhNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd0xDQnVJRDBnZEdocGN5NW9iMnhsY3k1c1pXNW5kR2c3SUhRZ1BDQnVPeUIwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdWFHOXNaWE5iZEYwN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1YUc5c1pYTXVjSFZ6YUNocExuUnZTbE5QVGlncEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0JtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2MzVndaWEl1Wm5KdmJVcFRUMDRvWlNrc0lIUm9hWE11ZFhWcFpDQTlJR1V1ZFhWcFpDd2dkR2hwY3k1b2IyeGxjeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREFzSUc0Z1BTQmxMbWh2YkdWekxteGxibWQwYURzZ2RDQThJRzQ3SUhRckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1b2IyeGxjMXQwWFRzS0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1b2IyeGxjeTV3ZFhOb0tHNWxkeUJuY2lncExtWnliMjFLVTA5T0tHa3BLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNN0NpQWdJQ0I5Q24wc0lFOTRJRDBnZXdvZ0lDQWdkSEpwWVc1bmRXeGhkR1U2SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFnUFNBeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxJQ1ltSUdVdWJHVnVaM1JvTENCcElEMGdiaUEvSUdWYk1GMGdLaUIwSURvZ2N5NXNaVzVuZEdnc0lISWdQU0JEYUNoekxDQXdMQ0JwTENCMExDQWhNQ2tzSUc4Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JwWmlBb0lYSWdmSHdnY2k1dVpYaDBJRDA5UFNCeUxuQnlaWFlwSUhKbGRIVnliaUJ2T3dvZ0lDQWdJQ0FnSUd4bGRDQmhMQ0JzTENCakxDQm9MQ0IxTENCa0xDQm1Pd29nSUNBZ0lDQWdJR2xtSUNodUlDWW1JQ2h5SUQwZ1YzZ29jeXdnWlN3Z2Npd2dkQ2twTENCekxteGxibWQwYUNBK0lEZ3dJQ29nZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JoSUQwZ1l5QTlJSE5iTUYwc0lHd2dQU0JvSUQwZ2Mxc3hYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdElEMGdkRHNnYlNBOElHazdJRzBnS3owZ2RDbDFJRDBnYzF0dFhTd2daQ0E5SUhOYmJTQXJJREZkTENCMUlEd2dZU0FtSmlBb1lTQTlJSFVwTENCa0lEd2diQ0FtSmlBb2JDQTlJR1FwTENCMUlENGdZeUFtSmlBb1l5QTlJSFVwTENCa0lENGdhQ0FtSmlBb2FDQTlJR1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1JRDBnVFdGMGFDNXRZWGdvWXlBdElHRXNJR2dnTFNCc0tTd2daaUE5SUdZZ0lUMDlJREFnUHlBeElDOGdaaUE2SURBN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCNGNpaHlMQ0J2TENCMExDQmhMQ0JzTENCbUtTd2dienNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnUTJnb2N5d2daU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdiR1YwSUhJc0lHODdDaUFnSUNCcFppQW9hU0E5UFQwZ2RIa29jeXdnWlN3Z2RDd2diaWtnUGlBd0tTQm1iM0lvY2lBOUlHVTdJSElnUENCME95QnlJQ3M5SUc0cGJ5QTlJRzFqS0hJc0lITmJjbDBzSUhOYmNpQXJJREZkTENCdktUc0tJQ0FnSUdWc2MyVWdabTl5S0hJZ1BTQjBJQzBnYmpzZ2NpQStQU0JsT3lCeUlDMDlJRzRwYnlBOUlHMWpLSElzSUhOYmNsMHNJSE5iY2lBcklERmRMQ0J2S1RzS0lDQWdJSEpsZEhWeWJpQnZJQ1ltSUdadktHOHNJRzh1Ym1WNGRDa2dKaVlnS0haeUtHOHBMQ0J2SUQwZ2J5NXVaWGgwS1N3Z2J6c0tmUXBtZFc1amRHbHZiaUJVYmloekxDQmxLU0I3Q2lBZ0lDQnBaaUFvSVhNcElISmxkSFZ5YmlCek93b2dJQ0FnWlNCOGZDQW9aU0E5SUhNcE93b2dJQ0FnYkdWMElIUWdQU0J6TENCdU93b2dJQ0FnWkc4Z2FXWWdLRzRnUFNBaE1Td2dJWFF1YzNSbGFXNWxjaUFtSmlBb1ptOG9kQ3dnZEM1dVpYaDBLU0I4ZkNBa1pTaDBMbkJ5WlhZc0lIUXNJSFF1Ym1WNGRDa2dQVDA5SURBcEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0haeUtIUXBMQ0IwSUQwZ1pTQTlJSFF1Y0hKbGRpd2dkQ0E5UFQwZ2RDNXVaWGgwS1NCaWNtVmhhenNLSUNBZ0lDQWdJQ0J1SUQwZ0lUQTdDaUFnSUNCOUlHVnNjMlVnZENBOUlIUXVibVY0ZERzS0lDQWdJSGRvYVd4bElDaHVJSHg4SUhRZ0lUMDlJR1VwQ2lBZ0lDQnlaWFIxY200Z1pUc0tmUXBtZFc1amRHbHZiaUI0Y2loekxDQmxMQ0IwTENCdUxDQnBMQ0J5TENCdktTQjdDaUFnSUNCcFppQW9JWE1wSUhKbGRIVnlianNLSUNBZ0lDRnZJQ1ltSUhJZ0ppWWdXbmdvY3l3Z2Jpd2dhU3dnY2lrN0NpQWdJQ0JzWlhRZ1lTQTlJSE1zSUd3c0lHTTdDaUFnSUNCbWIzSW9PeUJ6TG5CeVpYWWdJVDA5SUhNdWJtVjRkRHNwZXdvZ0lDQWdJQ0FnSUdsbUlDaHNJRDBnY3k1d2NtVjJMQ0JqSUQwZ2N5NXVaWGgwTENCeUlEOGdhM2dvY3l3Z2Jpd2dhU3dnY2lrZ09pQkllQ2h6S1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CMWMyZ29iQzVwSUM4Z2RDa3NJR1V1Y0hWemFDaHpMbWtnTHlCMEtTd2daUzV3ZFhOb0tHTXVhU0F2SUhRcExDQjJjaWh6S1N3Z2N5QTlJR011Ym1WNGRDd2dZU0E5SUdNdWJtVjRkRHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2h6SUQwZ1l5d2djeUE5UFQwZ1lTa2dld29nSUNBZ0lDQWdJQ0FnSUNCdklEOGdieUE5UFQwZ01TQS9JQ2h6SUQwZ1IzZ29WRzRvY3lrc0lHVXNJSFFwTENCNGNpaHpMQ0JsTENCMExDQnVMQ0JwTENCeUxDQXlLU2tnT2lCdklEMDlQU0F5SUNZbUlGWjRLSE1zSUdVc0lIUXNJRzRzSUdrc0lISXBJRG9nZUhJb1ZHNG9jeWtzSUdVc0lIUXNJRzRzSUdrc0lISXNJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wS1puVnVZM1JwYjI0Z1NIZ29jeWtnZXdvZ0lDQWdiR1YwSUdVZ1BTQnpMbkJ5WlhZc0lIUWdQU0J6TENCdUlEMGdjeTV1WlhoME93b2dJQ0FnYVdZZ0tDUmxLR1VzSUhRc0lHNHBJRDQ5SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUd4bGRDQnBJRDBnY3k1dVpYaDBMbTVsZUhRN0NpQWdJQ0JtYjNJb095QnBJQ0U5UFNCekxuQnlaWFk3S1hzS0lDQWdJQ0FnSUNCcFppQW9VMmtvWlM1NExDQmxMbmtzSUhRdWVDd2dkQzU1TENCdUxuZ3NJRzR1ZVN3Z2FTNTRMQ0JwTG5rcElDWW1JQ1JsS0drdWNISmxkaXdnYVN3Z2FTNXVaWGgwS1NBK1BTQXdLU0J5WlhSMWNtNGdJVEU3Q2lBZ0lDQWdJQ0FnYVNBOUlHa3VibVY0ZERzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlBaE1Ec0tmUXBtZFc1amRHbHZiaUJyZUNoekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCc1pYUWdhU0E5SUhNdWNISmxkaXdnY2lBOUlITXNJRzhnUFNCekxtNWxlSFE3Q2lBZ0lDQnBaaUFvSkdVb2FTd2djaXdnYnlrZ1BqMGdNQ2tnY21WMGRYSnVJQ0V4T3dvZ0lDQWdiR1YwSUdFZ1BTQnBMbmdnUENCeUxuZ2dQeUJwTG5nZ1BDQnZMbmdnUHlCcExuZ2dPaUJ2TG5nZ09pQnlMbmdnUENCdkxuZ2dQeUJ5TG5nZ09pQnZMbmdzSUd3Z1BTQnBMbmtnUENCeUxua2dQeUJwTG5rZ1BDQnZMbmtnUHlCcExua2dPaUJ2TG5rZ09pQnlMbmtnUENCdkxua2dQeUJ5TG5rZ09pQnZMbmtzSUdNZ1BTQnBMbmdnUGlCeUxuZ2dQeUJwTG5nZ1BpQnZMbmdnUHlCcExuZ2dPaUJ2TG5nZ09pQnlMbmdnUGlCdkxuZ2dQeUJ5TG5nZ09pQnZMbmdzSUdnZ1BTQnBMbmtnUGlCeUxua2dQeUJwTG5rZ1BpQnZMbmtnUHlCcExua2dPaUJ2TG5rZ09pQnlMbmtnUGlCdkxua2dQeUJ5TG5rZ09pQnZMbmtzSUhVZ1BTQnZZU2hoTENCc0xDQmxMQ0IwTENCdUtTd2daQ0E5SUc5aEtHTXNJR2dzSUdVc0lIUXNJRzRwTENCbUlEMGdjeTV3Y21WMldpd2diU0E5SUhNdWJtVjRkRm83Q2lBZ0lDQm1iM0lvT3lCbUlDWW1JR1l1ZWlBK1BTQjFJQ1ltSUcwZ0ppWWdiUzU2SUR3OUlHUTdLWHNLSUNBZ0lDQWdJQ0JwWmlBb1ppQWhQVDBnY3k1d2NtVjJJQ1ltSUdZZ0lUMDlJSE11Ym1WNGRDQW1KaUJUYVNocExuZ3NJR2t1ZVN3Z2NpNTRMQ0J5TG5rc0lHOHVlQ3dnYnk1NUxDQm1MbmdzSUdZdWVTa2dKaVlnSkdVb1ppNXdjbVYyTENCbUxDQm1MbTVsZUhRcElENDlJREFnZkh3Z0tHWWdQU0JtTG5CeVpYWmFMQ0J0SUNFOVBTQnpMbkJ5WlhZZ0ppWWdiU0FoUFQwZ2N5NXVaWGgwSUNZbUlGTnBLR2t1ZUN3Z2FTNTVMQ0J5TG5nc0lISXVlU3dnYnk1NExDQnZMbmtzSUcwdWVDd2diUzU1S1NBbUppQWtaU2h0TG5CeVpYWXNJRzBzSUcwdWJtVjRkQ2tnUGowZ01Da3BJSEpsZEhWeWJpQWhNVHNLSUNBZ0lDQWdJQ0J0SUQwZ2JTNXVaWGgwV2pzS0lDQWdJSDBLSUNBZ0lHWnZjaWc3SUdZZ0ppWWdaaTU2SUQ0OUlIVTdLWHNLSUNBZ0lDQWdJQ0JwWmlBb1ppQWhQVDBnY3k1d2NtVjJJQ1ltSUdZZ0lUMDlJSE11Ym1WNGRDQW1KaUJUYVNocExuZ3NJR2t1ZVN3Z2NpNTRMQ0J5TG5rc0lHOHVlQ3dnYnk1NUxDQm1MbmdzSUdZdWVTa2dKaVlnSkdVb1ppNXdjbVYyTENCbUxDQm1MbTVsZUhRcElENDlJREFwSUhKbGRIVnliaUFoTVRzS0lDQWdJQ0FnSUNCbUlEMGdaaTV3Y21WMldqc0tJQ0FnSUgwS0lDQWdJR1p2Y2lnN0lHMGdKaVlnYlM1NklEdzlJR1E3S1hzS0lDQWdJQ0FnSUNCcFppQW9iU0FoUFQwZ2N5NXdjbVYySUNZbUlHMGdJVDA5SUhNdWJtVjRkQ0FtSmlCVGFTaHBMbmdzSUdrdWVTd2djaTU0TENCeUxua3NJRzh1ZUN3Z2J5NTVMQ0J0TG5nc0lHMHVlU2tnSmlZZ0pHVW9iUzV3Y21WMkxDQnRMQ0J0TG01bGVIUXBJRDQ5SURBcElISmxkSFZ5YmlBaE1Uc0tJQ0FnSUNBZ0lDQnRJRDBnYlM1dVpYaDBXanNLSUNBZ0lIMEtJQ0FnSUhKbGRIVnliaUFoTURzS2ZRcG1kVzVqZEdsdmJpQkhlQ2h6TENCbExDQjBLU0I3Q2lBZ0lDQnNaWFFnYmlBOUlITTdDaUFnSUNCa2J5QjdDaUFnSUNBZ0lDQWdiR1YwSUdrZ1BTQnVMbkJ5WlhZc0lISWdQU0J1TG01bGVIUXVibVY0ZERzS0lDQWdJQ0FnSUNBaFptOG9hU3dnY2lrZ0ppWWdUR2dvYVN3Z2Jpd2diaTV1WlhoMExDQnlLU0FtSmlCNWNpaHBMQ0J5S1NBbUppQjVjaWh5TENCcEtTQW1KaUFvWlM1d2RYTm9LR2t1YVNBdklIUXBMQ0JsTG5CMWMyZ29iaTVwSUM4Z2RDa3NJR1V1Y0hWemFDaHlMbWtnTHlCMEtTd2dkbklvYmlrc0lIWnlLRzR1Ym1WNGRDa3NJRzRnUFNCeklEMGdjaWtzSUc0Z1BTQnVMbTVsZUhRN0NpQWdJQ0I5ZDJocGJHVWdLRzRnSVQwOUlITXBDaUFnSUNCeVpYUjFjbTRnVkc0b2JpazdDbjBLWm5WdVkzUnBiMjRnVm5nb2N5d2daU3dnZEN3Z2Jpd2dhU3dnY2lrZ2V3b2dJQ0FnYkdWMElHOGdQU0J6T3dvZ0lDQWdaRzhnZXdvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYnk1dVpYaDBMbTVsZUhRN0NpQWdJQ0FnSUNBZ1ptOXlLRHNnWVNBaFBUMGdieTV3Y21WMk95bDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZMbWtnSVQwOUlHRXVhU0FtSmlCUmVDaHZMQ0JoS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCU2FDaHZMQ0JoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQlViaWh2TENCdkxtNWxlSFFwTENCc0lEMGdWRzRvYkN3Z2JDNXVaWGgwS1N3Z2VISW9ieXdnWlN3Z2RDd2diaXdnYVN3Z2Npa3NJSGh5S0d3c0lHVXNJSFFzSUc0c0lHa3NJSElwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR0VnUFNCaExtNWxlSFE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUc4Z1BTQnZMbTVsZUhRN0NpQWdJQ0I5ZDJocGJHVWdLRzhnSVQwOUlITXBDbjBLWm5WdVkzUnBiMjRnVjNnb2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCYlhTd2djaXdnYnl3Z1lTd2diQ3dnWXpzS0lDQWdJR1p2Y2loeUlEMGdNQ3dnYnlBOUlHVXViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLV0VnUFNCbFczSmRJQ29nYml3Z2JDQTlJSElnUENCdklDMGdNU0EvSUdWYmNpQXJJREZkSUNvZ2JpQTZJSE11YkdWdVozUm9MQ0JqSUQwZ1EyZ29jeXdnWVN3Z2JDd2diaXdnSVRFcExDQmpJRDA5UFNCakxtNWxlSFFnSmlZZ0tHTXVjM1JsYVc1bGNpQTlJQ0V3S1N3Z2FTNXdkWE5vS0dwNEtHTXBLVHNLSUNBZ0lHWnZjaWhwTG5OdmNuUW9jWGdwTENCeUlEMGdNRHNnY2lBOElHa3ViR1Z1WjNSb095QnlLeXNwV0hnb2FWdHlYU3dnZENrc0lIUWdQU0JVYmloMExDQjBMbTVsZUhRcE93b2dJQ0FnY21WMGRYSnVJSFE3Q24wS1puVnVZM1JwYjI0Z2NYZ29jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJSE11ZUNBdElHVXVlRHNLZlFwbWRXNWpkR2x2YmlCWWVDaHpMQ0JsS1NCN0NpQWdJQ0JwWmlBb1pTQTlJRXA0S0hNc0lHVXBMQ0JsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCU2FDaGxMQ0J6S1RzS0lDQWdJQ0FnSUNCVWJpaGxMQ0JsTG01bGVIUXBMQ0JVYmloMExDQjBMbTVsZUhRcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlFcDRLSE1zSUdVcElIc0tJQ0FnSUd4bGRDQjBJRDBnWlN3Z2JpQTlJSE11ZUN3Z2FTQTlJSE11ZVN3Z2NpQTlJQzB4SUM4Z01Dd2dienNLSUNBZ0lHUnZJSHNLSUNBZ0lDQWdJQ0JwWmlBb2FTQThQU0IwTG5rZ0ppWWdhU0ErUFNCMExtNWxlSFF1ZVNBbUppQjBMbTVsZUhRdWVTQWhQVDBnZEM1NUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnZEM1NElDc2dLR2tnTFNCMExua3BJQ29nS0hRdWJtVjRkQzU0SUMwZ2RDNTRLU0F2SUNoMExtNWxlSFF1ZVNBdElIUXVlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrSUR3OUlHNGdKaVlnWkNBK0lISXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMGdaQ3dnWkNBOVBUMGdiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQjBMbmtwSUhKbGRIVnliaUIwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQwOVBTQjBMbTVsZUhRdWVTa2djbVYwZFhKdUlIUXVibVY0ZERzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQjBMbmdnUENCMExtNWxlSFF1ZUNBL0lIUWdPaUIwTG01bGVIUTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RDQTlJSFF1Ym1WNGREc0tJQ0FnSUgxM2FHbHNaU0FvZENBaFBUMGdaU2tLSUNBZ0lHbG1JQ2doYnlrZ2NtVjBkWEp1SUc1MWJHdzdDaUFnSUNCcFppQW9iaUE5UFQwZ2Npa2djbVYwZFhKdUlHODdDaUFnSUNCc1pYUWdZU0E5SUc4c0lHd2dQU0J2TG5nc0lHTWdQU0J2TG5rc0lHZ2dQU0F4SUM4Z01Dd2dkVHNLSUNBZ0lIUWdQU0J2T3dvZ0lDQWdaRzhnYmlBK1BTQjBMbmdnSmlZZ2RDNTRJRDQ5SUd3Z0ppWWdiaUFoUFQwZ2RDNTRJQ1ltSUZOcEtHa2dQQ0JqSUQ4Z2JpQTZJSElzSUdrc0lHd3NJR01zSUdrZ1BDQmpJRDhnY2lBNklHNHNJR2tzSUhRdWVDd2dkQzU1S1NBbUppQW9kU0E5SUUxaGRHZ3VZV0p6S0drZ0xTQjBMbmtwSUM4Z0tHNGdMU0IwTG5ncExDQjVjaWgwTENCektTQW1KaUFvZFNBOElHZ2dmSHdnZFNBOVBUMGdhQ0FtSmlBb2RDNTRJRDRnYnk1NElIeDhJSFF1ZUNBOVBUMGdieTU0SUNZbUlGbDRLRzhzSUhRcEtTa2dKaVlnS0c4Z1BTQjBMQ0JvSUQwZ2RTa3BMQ0IwSUQwZ2RDNXVaWGgwT3dvZ0lDQWdkMmhwYkdVZ0tIUWdJVDA5SUdFcENpQWdJQ0J5WlhSMWNtNGdienNLZlFwbWRXNWpkR2x2YmlCWmVDaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdKR1VvY3k1d2NtVjJMQ0J6TENCbExuQnlaWFlwSUR3Z01DQW1KaUFrWlNobExtNWxlSFFzSUhNc0lITXVibVY0ZENrZ1BDQXdPd3A5Q21aMWJtTjBhVzl1SUZwNEtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ2N6c0tJQ0FnSUdSdklHa3VlaUE5UFQwZ2JuVnNiQ0FtSmlBb2FTNTZJRDBnYjJFb2FTNTRMQ0JwTG5rc0lHVXNJSFFzSUc0cEtTd2dhUzV3Y21WMldpQTlJR2t1Y0hKbGRpd2dhUzV1WlhoMFdpQTlJR2t1Ym1WNGRDd2dhU0E5SUdrdWJtVjRkRHNLSUNBZ0lIZG9hV3hsSUNocElDRTlQU0J6S1FvZ0lDQWdhUzV3Y21WMldpNXVaWGgwV2lBOUlHNTFiR3dzSUdrdWNISmxkbG9nUFNCdWRXeHNMQ0FrZUNocEtUc0tmUXBtZFc1amRHbHZiaUFrZUNoektTQjdDaUFnSUNCc1pYUWdaU3dnZEN3Z2Jpd2dhU3dnY2l3Z2J5d2dZU3dnYkN3Z1l5QTlJREU3Q2lBZ0lDQmtieUI3Q2lBZ0lDQWdJQ0FnWm05eUtIUWdQU0J6TENCeklEMGdiblZzYkN3Z2NpQTlJRzUxYkd3c0lHOGdQU0F3T3lCME95bDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHZLeXNzSUc0Z1BTQjBMQ0JoSUQwZ01Dd2daU0E5SURBN0lHVWdQQ0JqSUNZbUlDaGhLeXNzSUc0Z1BTQnVMbTVsZUhSYUxDQWhJVzRwT3lCbEt5c3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iQ0E5SUdNN0lHRWdQaUF3SUh4OElHd2dQaUF3SUNZbUlHNDdLV0VnSVQwOUlEQWdKaVlnS0d3Z1BUMDlJREFnZkh3Z0lXNGdmSHdnZEM1NklEdzlJRzR1ZWlrZ1B5QW9hU0E5SUhRc0lIUWdQU0IwTG01bGVIUmFMQ0JoTFMwcElEb2dLR2tnUFNCdUxDQnVJRDBnYmk1dVpYaDBXaXdnYkMwdEtTd2djaUEvSUhJdWJtVjRkRm9nUFNCcElEb2djeUE5SUdrc0lHa3VjSEpsZGxvZ1BTQnlMQ0J5SUQwZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnZENBOUlHNDdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEl1Ym1WNGRGb2dQU0J1ZFd4c0xDQmpJQ285SURJN0NpQWdJQ0I5ZDJocGJHVWdLRzhnUGlBeEtRb2dJQ0FnY21WMGRYSnVJSE03Q24wS1puVnVZM1JwYjI0Z2IyRW9jeXdnWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnY21WMGRYSnVJSE1nUFNBek1qYzJOeUFxSUNoeklDMGdkQ2tnS2lCcExDQmxJRDBnTXpJM05qY2dLaUFvWlNBdElHNHBJQ29nYVN3Z2N5QTlJQ2h6SUh3Z2N5QThQQ0E0S1NBbUlERTJOekV4T1RNMUxDQnpJRDBnS0hNZ2ZDQnpJRHc4SURRcElDWWdNalV5TmpRMU1UTTFMQ0J6SUQwZ0tITWdmQ0J6SUR3OElESXBJQ1lnT0RVNE9Ua3pORFU1TENCeklEMGdLSE1nZkNCeklEdzhJREVwSUNZZ01UUXpNVFkxTlRjMk5Td2daU0E5SUNobElId2daU0E4UENBNEtTQW1JREUyTnpFeE9UTTFMQ0JsSUQwZ0tHVWdmQ0JsSUR3OElEUXBJQ1lnTWpVeU5qUTFNVE0xTENCbElEMGdLR1VnZkNCbElEdzhJRElwSUNZZ09EVTRPVGt6TkRVNUxDQmxJRDBnS0dVZ2ZDQmxJRHc4SURFcElDWWdNVFF6TVRZMU5UYzJOU3dnY3lCOElHVWdQRHdnTVRzS2ZRcG1kVzVqZEdsdmJpQnFlQ2h6S1NCN0NpQWdJQ0JzWlhRZ1pTQTlJSE1zSUhRZ1BTQnpPd29nSUNBZ1pHOGdLR1V1ZUNBOElIUXVlQ0I4ZkNCbExuZ2dQVDA5SUhRdWVDQW1KaUJsTG5rZ1BDQjBMbmtwSUNZbUlDaDBJRDBnWlNrc0lHVWdQU0JsTG01bGVIUTdDaUFnSUNCM2FHbHNaU0FvWlNBaFBUMGdjeWtLSUNBZ0lISmxkSFZ5YmlCME93cDlDbVoxYm1OMGFXOXVJRk5wS0hNc0lHVXNJSFFzSUc0c0lHa3NJSElzSUc4c0lHRXBJSHNLSUNBZ0lISmxkSFZ5YmlBb2FTQXRJRzhwSUNvZ0tHVWdMU0JoS1NBdElDaHpJQzBnYnlrZ0tpQW9jaUF0SUdFcElENDlJREFnSmlZZ0tITWdMU0J2S1NBcUlDaHVJQzBnWVNrZ0xTQW9kQ0F0SUc4cElDb2dLR1VnTFNCaEtTQStQU0F3SUNZbUlDaDBJQzBnYnlrZ0tpQW9jaUF0SUdFcElDMGdLR2tnTFNCdktTQXFJQ2h1SUMwZ1lTa2dQajBnTURzS2ZRcG1kVzVqZEdsdmJpQlJlQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnY3k1dVpYaDBMbWtnSVQwOUlHVXVhU0FtSmlCekxuQnlaWFl1YVNBaFBUMGdaUzVwSUNZbUlDRkxlQ2h6TENCbEtTQW1KaUFvZVhJb2N5d2daU2tnSmlZZ2VYSW9aU3dnY3lrZ0ppWWdaWGtvY3l3Z1pTa2dKaVlnS0NSbEtITXVjSEpsZGl3Z2N5d2daUzV3Y21WMktTQjhmQ0FrWlNoekxDQmxMbkJ5WlhZc0lHVXBLU0I4ZkNCbWJ5aHpMQ0JsS1NBbUppQWtaU2h6TG5CeVpYWXNJSE1zSUhNdWJtVjRkQ2tnUGlBd0lDWW1JQ1JsS0dVdWNISmxkaXdnWlN3Z1pTNXVaWGgwS1NBK0lEQXBPd3A5Q21aMWJtTjBhVzl1SUNSbEtITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUFvWlM1NUlDMGdjeTU1S1NBcUlDaDBMbmdnTFNCbExuZ3BJQzBnS0dVdWVDQXRJSE11ZUNrZ0tpQW9kQzU1SUMwZ1pTNTVLVHNLZlFwbWRXNWpkR2x2YmlCbWJ5aHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdjeTU0SUQwOVBTQmxMbmdnSmlZZ2N5NTVJRDA5UFNCbExuazdDbjBLWm5WdVkzUnBiMjRnVEdnb2N5d2daU3dnZEN3Z2Jpa2dld29nSUNBZ2JHVjBJR2tnUFNCM2N5Z2taU2h6TENCbExDQjBLU2tzSUhJZ1BTQjNjeWdrWlNoekxDQmxMQ0J1S1Nrc0lHOGdQU0IzY3lna1pTaDBMQ0J1TENCektTa3NJR0VnUFNCM2N5Z2taU2gwTENCdUxDQmxLU2s3Q2lBZ0lDQnlaWFIxY200Z0lTRW9hU0FoUFQwZ2NpQW1KaUJ2SUNFOVBTQmhJSHg4SUdrZ1BUMDlJREFnSmlZZ1luTW9jeXdnZEN3Z1pTa2dmSHdnY2lBOVBUMGdNQ0FtSmlCaWN5aHpMQ0J1TENCbEtTQjhmQ0J2SUQwOVBTQXdJQ1ltSUdKektIUXNJSE1zSUc0cElIeDhJR0VnUFQwOUlEQWdKaVlnWW5Nb2RDd2daU3dnYmlrcE93cDlDbVoxYm1OMGFXOXVJR0p6S0hNc0lHVXNJSFFwSUhzS0lDQWdJSEpsZEhWeWJpQmxMbmdnUEQwZ1RXRjBhQzV0WVhnb2N5NTRMQ0IwTG5ncElDWW1JR1V1ZUNBK1BTQk5ZWFJvTG0xcGJpaHpMbmdzSUhRdWVDa2dKaVlnWlM1NUlEdzlJRTFoZEdndWJXRjRLSE11ZVN3Z2RDNTVLU0FtSmlCbExua2dQajBnVFdGMGFDNXRhVzRvY3k1NUxDQjBMbmtwT3dwOUNtWjFibU4wYVc5dUlIZHpLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQnpJRDRnTUNBL0lERWdPaUJ6SUR3Z01DQS9JQzB4SURvZ01Ec0tmUXBtZFc1amRHbHZiaUJMZUNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlITTdDaUFnSUNCa2J5QjdDaUFnSUNBZ0lDQWdhV1lnS0hRdWFTQWhQVDBnY3k1cElDWW1JSFF1Ym1WNGRDNXBJQ0U5UFNCekxta2dKaVlnZEM1cElDRTlQU0JsTG1rZ0ppWWdkQzV1WlhoMExta2dJVDA5SUdVdWFTQW1KaUJNYUNoMExDQjBMbTVsZUhRc0lITXNJR1VwS1NCeVpYUjFjbTRnSVRBN0NpQWdJQ0FnSUNBZ2RDQTlJSFF1Ym1WNGREc0tJQ0FnSUgxM2FHbHNaU0FvZENBaFBUMGdjeWtLSUNBZ0lISmxkSFZ5YmlBaE1Uc0tmUXBtZFc1amRHbHZiaUI1Y2loekxDQmxLU0I3Q2lBZ0lDQnlaWFIxY200Z0pHVW9jeTV3Y21WMkxDQnpMQ0J6TG01bGVIUXBJRHdnTUNBL0lDUmxLSE1zSUdVc0lITXVibVY0ZENrZ1BqMGdNQ0FtSmlBa1pTaHpMQ0J6TG5CeVpYWXNJR1VwSUQ0OUlEQWdPaUFrWlNoekxDQmxMQ0J6TG5CeVpYWXBJRHdnTUNCOGZDQWtaU2h6TENCekxtNWxlSFFzSUdVcElEd2dNRHNLZlFwbWRXNWpkR2x2YmlCbGVTaHpMQ0JsS1NCN0NpQWdJQ0JzWlhRZ2RDQTlJSE1zSUc0Z1BTQWhNU3dnYVNBOUlDaHpMbmdnS3lCbExuZ3BJQzhnTWl3Z2NpQTlJQ2h6TG5rZ0t5QmxMbmtwSUM4Z01qc0tJQ0FnSUdSdklIUXVlU0ErSUhJZ0lUMGdkQzV1WlhoMExua2dQaUJ5SUNZbUlIUXVibVY0ZEM1NUlDRTlQU0IwTG5rZ0ppWWdhU0E4SUNoMExtNWxlSFF1ZUNBdElIUXVlQ2tnS2lBb2NpQXRJSFF1ZVNrZ0x5QW9kQzV1WlhoMExua2dMU0IwTG5rcElDc2dkQzU0SUNZbUlDaHVJRDBnSVc0cExDQjBJRDBnZEM1dVpYaDBPd29nSUNBZ2QyaHBiR1VnS0hRZ0lUMDlJSE1wQ2lBZ0lDQnlaWFIxY200Z2Jqc0tmUXBtZFc1amRHbHZiaUJTYUNoekxDQmxLU0I3Q2lBZ0lDQnNaWFFnZENBOUlHNWxkeUJoWVNoekxta3NJSE11ZUN3Z2N5NTVLU3dnYmlBOUlHNWxkeUJoWVNobExta3NJR1V1ZUN3Z1pTNTVLU3dnYVNBOUlITXVibVY0ZEN3Z2NpQTlJR1V1Y0hKbGRqc0tJQ0FnSUhKbGRIVnliaUJ6TG01bGVIUWdQU0JsTENCbExuQnlaWFlnUFNCekxDQjBMbTVsZUhRZ1BTQnBMQ0JwTG5CeVpYWWdQU0IwTENCdUxtNWxlSFFnUFNCMExDQjBMbkJ5WlhZZ1BTQnVMQ0J5TG01bGVIUWdQU0J1TENCdUxuQnlaWFlnUFNCeUxDQnVPd3A5Q21aMWJtTjBhVzl1SUcxaktITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJR0ZoS0hNc0lHVXNJSFFwT3dvZ0lDQWdjbVYwZFhKdUlHNGdQeUFvYVM1dVpYaDBJRDBnYmk1dVpYaDBMQ0JwTG5CeVpYWWdQU0J1TENCdUxtNWxlSFF1Y0hKbGRpQTlJR2tzSUc0dWJtVjRkQ0E5SUdrcElEb2dLR2t1Y0hKbGRpQTlJR2tzSUdrdWJtVjRkQ0E5SUdrcExDQnBPd3A5Q21aMWJtTjBhVzl1SUhaeUtITXBJSHNLSUNBZ0lITXVibVY0ZEM1d2NtVjJJRDBnY3k1d2NtVjJMQ0J6TG5CeVpYWXVibVY0ZENBOUlITXVibVY0ZEN3Z2N5NXdjbVYyV2lBbUppQW9jeTV3Y21WMldpNXVaWGgwV2lBOUlITXVibVY0ZEZvcExDQnpMbTVsZUhSYUlDWW1JQ2h6TG01bGVIUmFMbkJ5WlhaYUlEMGdjeTV3Y21WMldpazdDbjBLWm5WdVkzUnBiMjRnWVdFb2N5d2daU3dnZENrZ2V3b2dJQ0FnZEdocGN5NXBJRDBnY3l3Z2RHaHBjeTU0SUQwZ1pTd2dkR2hwY3k1NUlEMGdkQ3dnZEdocGN5NXdjbVYySUQwZ2JuVnNiQ3dnZEdocGN5NXVaWGgwSUQwZ2JuVnNiQ3dnZEdocGN5NTZJRDBnYm5Wc2JDd2dkR2hwY3k1d2NtVjJXaUE5SUc1MWJHd3NJSFJvYVhNdWJtVjRkRm9nUFNCdWRXeHNMQ0IwYUdsekxuTjBaV2x1WlhJZ1BTQWhNVHNLZlFwbWRXNWpkR2x2YmlCMGVTaHpMQ0JsTENCMExDQnVLU0I3Q2lBZ0lDQnNaWFFnYVNBOUlEQTdDaUFnSUNCbWIzSW9iR1YwSUhJZ1BTQmxMQ0J2SUQwZ2RDQXRJRzQ3SUhJZ1BDQjBPeUJ5SUNzOUlHNHBhU0FyUFNBb2MxdHZYU0F0SUhOYmNsMHBJQ29nS0hOYmNpQXJJREZkSUNzZ2MxdHZJQ3NnTVYwcExDQnZJRDBnY2pzS0lDQWdJSEpsZEhWeWJpQnBPd3A5Q25aaGNpQktkQ0E5SUdOc1lYTnpJSHNLSUNBZ0lITjBZWFJwWXlCaGNtVmhLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdWJHVnVaM1JvTENCdUlEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNCMElDMGdNU3dnY2lBOUlEQTdJSElnUENCME95QnBJRDBnY2lzcktXNGdLejBnWlZ0cFhTNTRJQ29nWlZ0eVhTNTVJQzBnWlZ0eVhTNTRJQ29nWlZ0cFhTNTVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVJQ29nTGpVN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2FYTkRiRzlqYTFkcGMyVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJLZEM1aGNtVmhLR1VwSUR3Z01Ec0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5QjBjbWxoYm1kMWJHRjBaVk5vWVhCbEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZ0ZExDQnBJRDBnVzEwc0lISWdQU0JiWFRzS0lDQWdJQ0FnSUNCbll5aGxLU3dnZUdNb2Jpd2daU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHOGdQU0JsTG14bGJtZDBhRHNLSUNBZ0lDQWdJQ0IwTG1admNrVmhZMmdvWjJNcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2JDQTlJREE3SUd3Z1BDQjBMbXhsYm1kMGFEc2diQ3NyS1drdWNIVnphQ2h2S1N3Z2J5QXJQU0IwVzJ4ZExteGxibWQwYUN3Z2VHTW9iaXdnZEZ0c1hTazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQlBlQzUwY21saGJtZDFiR0YwWlNodUxDQnBLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR3d4SUQwZ01Ec2diREVnUENCaExteGxibWQwYURzZ2JERWdLejBnTXlseUxuQjFjMmdvWVM1emJHbGpaU2hzTVN3Z2JERWdLeUF6S1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJN0NpQWdJQ0I5Q24wN0NtWjFibU4wYVc5dUlHZGpLSE1wSUhzS0lDQWdJR3hsZENCbElEMGdjeTVzWlc1bmRHZzdDaUFnSUNCbElENGdNaUFtSmlCelcyVWdMU0F4WFM1bGNYVmhiSE1vYzFzd1hTa2dKaVlnY3k1d2IzQW9LVHNLZlFwbWRXNWpkR2x2YmlCNFl5aHpMQ0JsS1NCN0NpQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnWlM1c1pXNW5kR2c3SUhRckt5bHpMbkIxYzJnb1pWdDBYUzU0S1N3Z2N5NXdkWE5vS0dWYmRGMHVlU2s3Q24wS2RtRnlJR3h1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdibVYzSUZoMEtGc0tJQ0FnSUNBZ0lDQnVaWGNnV0NndU5Td2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLQzB1TlN3Z0xqVXBMQW9nSUNBZ0lDQWdJRzVsZHlCWUtDMHVOU3dnTFM0MUtTd0tJQ0FnSUNBZ0lDQnVaWGNnV0NndU5Td2dMUzQxS1FvZ0lDQWdYU2tzSUhRZ1BTQjdmU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVJYaDBjblZrWlVkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J6YUdGd1pYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHOXdkR2x2Ym5NNklIUUtJQ0FnSUNBZ0lDQjlMQ0JsSUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hsS1NBL0lHVWdPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQmRPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdkR2hwY3l3Z2FTQTlJRnRkTENCeUlEMGdXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Dd2diQ0E5SUdVdWJHVnVaM1JvT3lCaElEd2diRHNnWVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JsVzJGZE93b2dJQ0FnSUNBZ0lDQWdJQ0J2S0dNcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9hU3dnTXlrcExDQjBhR2x6TG5ObGRFRjBkSEpwWW5WMFpTZ2lkWFlpTENCdVpYY2daR1VvY2l3Z01pa3BMQ0IwYUdsekxtTnZiWEIxZEdWV1pYSjBaWGhPYjNKdFlXeHpLQ2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYnloaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnVzEwc0lHTWdQU0IwTG1OMWNuWmxVMlZuYldWdWRITWdJVDA5SUhadmFXUWdNQ0EvSUhRdVkzVnlkbVZUWldkdFpXNTBjeUE2SURFeUxDQm9JRDBnZEM1emRHVndjeUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNXpkR1Z3Y3lBNklERXNJSFVnUFNCMExtUmxjSFJvSUNFOVBTQjJiMmxrSURBZ1B5QjBMbVJsY0hSb0lEb2dNU3dnWkNBOUlIUXVZbVYyWld4RmJtRmliR1ZrSUNFOVBTQjJiMmxrSURBZ1B5QjBMbUpsZG1Wc1JXNWhZbXhsWkNBNklDRXdMQ0JtSUQwZ2RDNWlaWFpsYkZSb2FXTnJibVZ6Y3lBaFBUMGdkbTlwWkNBd0lEOGdkQzVpWlhabGJGUm9hV05yYm1WemN5QTZJQzR5TENCdElEMGdkQzVpWlhabGJGTnBlbVVnSVQwOUlIWnZhV1FnTUNBL0lIUXVZbVYyWld4VGFYcGxJRG9nWmlBdElDNHhMQ0I0SUQwZ2RDNWlaWFpsYkU5bVpuTmxkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2RDNWlaWFpsYkU5bVpuTmxkQ0E2SURBc0lIWWdQU0IwTG1KbGRtVnNVMlZuYldWdWRITWdJVDA5SUhadmFXUWdNQ0EvSUhRdVltVjJaV3hUWldkdFpXNTBjeUE2SURNc0lHY2dQU0IwTG1WNGRISjFaR1ZRWVhSb0xDQndJRDBnZEM1VlZrZGxibVZ5WVhSdmNpQWhQVDBnZG05cFpDQXdJRDhnZEM1VlZrZGxibVZ5WVhSdmNpQTZJRzU1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjBMbUZ0YjNWdWRDQWhQVDBnZG05cFpDQXdJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrVjRkSEoxWkdWQ2RXWm1aWEpIWlc5dFpYUnllVG9nWVcxdmRXNTBJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnWkdWd2RHZ3VJaWtzSUhVZ1BTQjBMbUZ0YjNWdWRDazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmZMQ0I1SUQwZ0lURXNJR0lzSUVFc0lFd3NJRWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHY2dKaVlnS0Y4Z1BTQm5MbWRsZEZOd1lXTmxaRkJ2YVc1MGN5aG9LU3dnZVNBOUlDRXdMQ0JrSUQwZ0lURXNJR0lnUFNCbkxtTnZiWEIxZEdWR2NtVnVaWFJHY21GdFpYTW9hQ3dnSVRFcExDQkJJRDBnYm1WM0lFMHNJRXdnUFNCdVpYY2dUU3dnU1NBOUlHNWxkeUJOS1N3Z1pDQjhmQ0FvZGlBOUlEQXNJR1lnUFNBd0xDQnRJRDBnTUN3Z2VDQTlJREFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYXlBOUlHRXVaWGgwY21GamRGQnZhVzUwY3loaktTd2dRaUE5SUdzdWMyaGhjR1VzSUZBZ1BTQnJMbWh2YkdWek93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lVcDBMbWx6UTJ4dlkydFhhWE5sS0VJcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQkNJRDBnUWk1eVpYWmxjbk5sS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVjZ1BTQXdMQ0JxSUQwZ1VDNXNaVzVuZEdnN0lFY2dQQ0JxT3lCSEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkxJRDBnVUZ0SFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JLZEM1cGMwTnNiMk5yVjJselpTaExLU0FtSmlBb1VGdEhYU0E5SUVzdWNtVjJaWEp6WlNncEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUlNBOUlFcDBMblJ5YVdGdVozVnNZWFJsVTJoaGNHVW9RaXdnVUNrc0lFUWdQU0JDT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFY3hJRDBnTUN3Z2FqRWdQU0JRTG14bGJtZDBhRHNnUnpFZ1BDQnFNVHNnUnpFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU3pFZ1BTQlFXMGN4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUVJZ1BTQkNMbU52Ym1OaGRDaExNU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnVlNoSExDQnFMQ0JMS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYWlCOGZDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVGZUhSeWRXUmxSMlZ2YldWMGNuazZJSFpsWXlCa2IyVnpJRzV2ZENCbGVHbHpkQ0lwTENCcUxtTnNiMjVsS0NrdWJYVnNkR2x3YkhsVFkyRnNZWElvU3lrdVlXUmtLRWNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkdJRDBnUWk1c1pXNW5kR2dzSUU4Z1BTQkZMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYm1Vb1J5d2dhaXdnU3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFZsTENCelpTd2dVMlVzSUZSbElEMGdSeTU0SUMwZ2FpNTRMQ0JRWlNBOUlFY3VlU0F0SUdvdWVTd2dXV1VnUFNCTExuZ2dMU0JITG5nc0lFTWdQU0JMTG5rZ0xTQkhMbmtzSUZRZ1BTQlVaU0FxSUZSbElDc2dVR1VnS2lCUVpTd2dTaUE5SUZSbElDb2dReUF0SUZCbElDb2dXV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1RXRjBhQzVoWW5Nb1Npa2dQaUJPZFcxaVpYSXVSVkJUU1V4UFRpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQWtJRDBnVFdGMGFDNXpjWEowS0ZRcExDQnlaU0E5SUUxaGRHZ3VjM0Z5ZENoWlpTQXFJRmxsSUNzZ1F5QXFJRU1wTENCYUlEMGdhaTU0SUMwZ1VHVWdMeUFrTENCTlpTQTlJR291ZVNBcklGUmxJQzhnSkN3Z2RtVWdQU0JMTG5nZ0xTQkRJQzhnY21Vc0lIUmxJRDBnU3k1NUlDc2dXV1VnTHlCeVpTd2dVaUE5SUNnb2RtVWdMU0JhS1NBcUlFTWdMU0FvZEdVZ0xTQk5aU2tnS2lCWlpTa2dMeUFvVkdVZ0tpQkRJQzBnVUdVZ0tpQlpaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RXVWdQU0JhSUNzZ1ZHVWdLaUJTSUMwZ1J5NTRMQ0J6WlNBOUlFMWxJQ3NnVUdVZ0tpQlNJQzBnUnk1NU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbFpTQTlJSFZsSUNvZ2RXVWdLeUJ6WlNBcUlITmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxaU0E4UFNBeUtTQnlaWFIxY200Z2JtVjNJRmdvZFdVc0lITmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCVFpTQTlJRTFoZEdndWMzRnlkQ2hsWlNBdklESXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ0pERWdQU0FoTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlVaU0ErSUU1MWJXSmxjaTVGVUZOSlRFOU9JRDhnV1dVZ1BpQk9kVzFpWlhJdVJWQlRTVXhQVGlBbUppQW9KREVnUFNBaE1Da2dPaUJVWlNBOElDMU9kVzFpWlhJdVJWQlRTVXhQVGlBL0lGbGxJRHdnTFU1MWJXSmxjaTVGVUZOSlRFOU9JQ1ltSUNna01TQTlJQ0V3S1NBNklFMWhkR2d1YzJsbmJpaFFaU2tnUFQwOUlFMWhkR2d1YzJsbmJpaERLU0FtSmlBb0pERWdQU0FoTUNrc0lDUXhJRDhnS0hWbElEMGdMVkJsTENCelpTQTlJRlJsTENCVFpTQTlJRTFoZEdndWMzRnlkQ2hVS1NrZ09pQW9kV1VnUFNCVVpTd2djMlVnUFNCUVpTd2dVMlVnUFNCTllYUm9Mbk54Y25Rb1ZDQXZJRElwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1dDaDFaU0F2SUZObExDQnpaU0F2SUZObEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWTJVZ1BTQmJYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCSE1pQTlJREFzSUdveUlEMGdSQzVzWlc1bmRHZ3NJRXN5SUQwZ2FqSWdMU0F4TENCMVpTQTlJRWN5SUNzZ01Uc2dSeklnUENCcU1qc2dSeklyS3l3Z1N6SXJLeXdnZFdVckt5bExNaUE5UFQwZ2FqSWdKaVlnS0VzeUlEMGdNQ2tzSUhWbElEMDlQU0JxTWlBbUppQW9kV1VnUFNBd0tTd2dZMlZiUnpKZElEMGdibVVvUkZ0SE1sMHNJRVJiU3pKZExDQkVXM1ZsWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCV0lEMGdXMTBzSUZjc0lHaGxJRDBnWTJVdVkyOXVZMkYwS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdSek1nUFNBd0xDQnFNeUE5SUZBdWJHVnVaM1JvT3lCSE15QThJR296T3lCSE15c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTE15QTlJRkJiUnpOZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1Z5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxWlRFZ1BTQXdMQ0J6WlNBOUlFc3pMbXhsYm1kMGFDd2dVMlVnUFNCelpTQXRJREVzSUZSbElEMGdkV1V4SUNzZ01Uc2dkV1V4SUR3Z2MyVTdJSFZsTVNzckxDQlRaU3NyTENCVVpTc3JLVk5sSUQwOVBTQnpaU0FtSmlBb1UyVWdQU0F3S1N3Z1ZHVWdQVDA5SUhObElDWW1JQ2hVWlNBOUlEQXBMQ0JYVzNWbE1WMGdQU0J1WlNoTE0xdDFaVEZkTENCTE0xdFRaVjBzSUVzelcxUmxYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JXTG5CMWMyZ29WeWtzSUdobElEMGdhR1V1WTI5dVkyRjBLRmNwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnUnpRZ1BTQXdPeUJITkNBOElIWTdJRWMwS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR28wSUQwZ1J6UWdMeUIyTENCTE5DQTlJR1lnS2lCTllYUm9MbU52Y3locU5DQXFJRTFoZEdndVVFa2dMeUF5S1N3Z2RXVXlJRDBnYlNBcUlFMWhkR2d1YzJsdUtHbzBJQ29nVFdGMGFDNVFTU0F2SURJcElDc2dlRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdjMlV4SUQwZ01Dd2dVMlV4SUQwZ1JDNXNaVzVuZEdnN0lITmxNU0E4SUZObE1Uc2djMlV4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCVVpURWdQU0JWS0VSYmMyVXhYU3dnWTJWYmMyVXhYU3dnZFdVeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JEWlNoVVpURXVlQ3dnVkdVeExua3NJQzFMTkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhObE1pQTlJREFzSUZObE1pQTlJRkF1YkdWdVozUm9PeUJ6WlRJZ1BDQlRaVEk3SUhObE1pc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdWR1V5SUQwZ1VGdHpaVEpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGY2dQU0JXVzNObE1sMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JRWlNBOUlEQXNJRmxsSUQwZ1ZHVXlMbXhsYm1kMGFEc2dVR1VnUENCWlpUc2dVR1VyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkRJRDBnVlNoVVpUSmJVR1ZkTENCWFcxQmxYU3dnZFdVeUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1EyVW9ReTU0TENCRExua3NJQzFMTkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc1pTQTlJRzBnS3lCNE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRWMxSUQwZ01Ec2dSelVnUENCR095QkhOU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnFOU0E5SUdRZ1B5QlZLRUpiUnpWZExDQm9aVnRITlYwc0lHeGxLU0E2SUVKYlJ6VmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU0EvSUNoTUxtTnZjSGtvWWk1dWIzSnRZV3h6V3pCZEtTNXRkV3gwYVhCc2VWTmpZV3hoY2locU5TNTRLU3dnUVM1amIzQjVLR0l1WW1sdWIzSnRZV3h6V3pCZEtTNXRkV3gwYVhCc2VWTmpZV3hoY2locU5TNTVLU3dnU1M1amIzQjVLRjliTUYwcExtRmtaQ2hNS1M1aFpHUW9RU2tzSUVObEtFa3VlQ3dnU1M1NUxDQkpMbm9wS1NBNklFTmxLR28xTG5nc0lHbzFMbmtzSURBcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1J6WWdQU0F4T3lCSE5pQThQU0JvT3lCSE5pc3JLV1p2Y2loc1pYUWdhallnUFNBd095QnFOaUE4SUVZN0lHbzJLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElFczFJRDBnWkNBL0lGVW9RbHRxTmwwc0lHaGxXMm8yWFN3Z2JHVXBJRG9nUWx0cU5sMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjVJRDhnS0V3dVkyOXdlU2hpTG01dmNtMWhiSE5iUnpaZEtTNXRkV3gwYVhCc2VWTmpZV3hoY2loTE5TNTRLU3dnUVM1amIzQjVLR0l1WW1sdWIzSnRZV3h6VzBjMlhTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb1N6VXVlU2tzSUVrdVkyOXdlU2hmVzBjMlhTa3VZV1JrS0V3cExtRmtaQ2hCS1N3Z1EyVW9TUzU0TENCSkxua3NJRWt1ZWlrcElEb2dRMlVvU3pVdWVDd2dTelV1ZVN3Z2RTQXZJR2dnS2lCSE5pazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQkhOeUE5SUhZZ0xTQXhPeUJITnlBK1BTQXdPeUJITnkwdEtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JxTnlBOUlFYzNJQzhnZGl3Z1N6WWdQU0JtSUNvZ1RXRjBhQzVqYjNNb2FqY2dLaUJOWVhSb0xsQkpJQzhnTWlrc0lIVmxNeUE5SUcwZ0tpQk5ZWFJvTG5OcGJpaHFOeUFxSUUxaGRHZ3VVRWtnTHlBeUtTQXJJSGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSE5sTXlBOUlEQXNJRk5sTXlBOUlFUXViR1Z1WjNSb095QnpaVE1nUENCVFpUTTdJSE5sTXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1ZHVXpJRDBnVlNoRVczTmxNMTBzSUdObFczTmxNMTBzSUhWbE15azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUTJVb1ZHVXpMbmdzSUZSbE15NTVMQ0IxSUNzZ1N6WXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnpaVFFnUFNBd0xDQlRaVFFnUFNCUUxteGxibWQwYURzZ2MyVTBJRHdnVTJVME95QnpaVFFyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUZSbE5DQTlJRkJiYzJVMFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JYSUQwZ1ZsdHpaVFJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1VHVXhJRDBnTUN3Z1dXVXhJRDBnVkdVMExteGxibWQwYURzZ1VHVXhJRHdnV1dVeE95QlFaVEVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkRNU0E5SUZVb1ZHVTBXMUJsTVYwc0lGZGJVR1V4WFN3Z2RXVXpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlU0EvSUVObEtFTXhMbmdzSUVNeExua2dLeUJmVzJnZ0xTQXhYUzU1TENCZlcyZ2dMU0F4WFM1NElDc2dTellwSURvZ1EyVW9RekV1ZUN3Z1F6RXVlU3dnZFNBcklFczJLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ1ptVW9LU3dnUW1Vb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWm1Vb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUnlBOUlHa3ViR1Z1WjNSb0lDOGdNenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoa0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHb2dQU0F3TENCTElEMGdSaUFxSUdvN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjFaU0E5SURBN0lIVmxJRHdnVHpzZ2RXVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCelpTQTlJRVZiZFdWZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNVpTaHpaVnN5WFNBcklFc3NJSE5sV3pGZElDc2dTeXdnYzJWYk1GMGdLeUJMS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYWlBOUlHZ2dLeUIySUNvZ01pd2dTeUE5SUVZZ0tpQnFPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZFdVeElEMGdNRHNnZFdVeElEd2dUenNnZFdVeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYzJVeElEMGdSVnQxWlRGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNVpTaHpaVEZiTUYwZ0t5QkxMQ0J6WlRGYk1WMGdLeUJMTENCelpURmJNbDBnS3lCTEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYWpFZ1BTQXdPeUJxTVNBOElFODdJR294S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTekVnUFNCRlcyb3hYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlV1VvU3pGYk1sMHNJRXN4V3pGZExDQkxNVnN3WFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYWpJZ1BTQXdPeUJxTWlBOElFODdJR295S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdTeklnUFNCRlcyb3lYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlV1VvU3pKYk1GMGdLeUJHSUNvZ2FDd2dTekpiTVYwZ0t5QkdJQ29nYUN3Z1N6SmJNbDBnS3lCR0lDb2dhQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JpNWhaR1JIY205MWNDaEhMQ0JwTG14bGJtZDBhQ0F2SURNZ0xTQkhMQ0F3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCQ1pTZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCSElEMGdhUzVzWlc1bmRHZ2dMeUF6TENCcUlEMGdNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRmtvUkN3Z2Fpa3NJR29nS3owZ1JDNXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVzZ1BTQXdMQ0IxWlNBOUlGQXViR1Z1WjNSb095QkxJRHdnZFdVN0lFc3JLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSE5sSUQwZ1VGdExYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCWktITmxMQ0JxS1N3Z2FpQXJQU0J6WlM1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1TG1Ga1pFZHliM1Z3S0Vjc0lHa3ViR1Z1WjNSb0lDOGdNeUF0SUVjc0lERXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJRmtvUnl3Z2Fpa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVzZ1BTQkhMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWc3SUMwdFN5QStQU0F3T3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhWbElEMGdTeXdnYzJVZ1BTQkxJQzBnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaU0E4SURBZ0ppWWdLSE5sSUQwZ1J5NXNaVzVuZEdnZ0xTQXhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUZObElEMGdNQ3dnVkdVZ1BTQm9JQ3NnZGlBcUlESTdJRk5sSUR3Z1ZHVTdJRk5sS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdVR1VnUFNCR0lDb2dVMlVzSUZsbElEMGdSaUFxSUNoVFpTQXJJREVwTENCRElEMGdhaUFySUhWbElDc2dVR1VzSUZRZ1BTQnFJQ3NnYzJVZ0t5QlFaU3dnU2lBOUlHb2dLeUJ6WlNBcklGbGxMQ0FrSUQwZ2FpQXJJSFZsSUNzZ1dXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxLRU1zSUZRc0lFb3NJQ1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQkRaU2hITENCcUxDQkxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzTG5CMWMyZ29SeWtzSUd3dWNIVnphQ2hxS1N3Z2JDNXdkWE5vS0VzcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUlIbGxLRWNzSUdvc0lFc3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGhsS0VjcExDQjRaU2hxS1N3Z2VHVW9TeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RXVWdQU0JwTG14bGJtZDBhQ0F2SURNc0lITmxJRDBnY0M1blpXNWxjbUYwWlZSdmNGVldLRzRzSUdrc0lIVmxJQzBnTXl3Z2RXVWdMU0F5TENCMVpTQXRJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnVDJVb2MyVmJNRjBwTENCUFpTaHpaVnN4WFNrc0lFOWxLSE5sV3pKZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQm5aU2hITENCcUxDQkxMQ0IxWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VHVW9SeWtzSUhobEtHb3BMQ0I0WlNoMVpTa3NJSGhsS0dvcExDQjRaU2hMS1N3Z2VHVW9kV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElITmxJRDBnYVM1c1pXNW5kR2dnTHlBekxDQlRaU0E5SUhBdVoyVnVaWEpoZEdWVGFXUmxWMkZzYkZWV0tHNHNJR2tzSUhObElDMGdOaXdnYzJVZ0xTQXpMQ0J6WlNBdElESXNJSE5sSUMwZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQlBaU2hUWlZzd1hTa3NJRTlsS0ZObFd6RmRLU3dnVDJVb1UyVmJNMTBwTENCUFpTaFRaVnN4WFNrc0lFOWxLRk5sV3pKZEtTd2dUMlVvVTJWYk0xMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR1oxYm1OMGFXOXVJSGhsS0VjcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VjSFZ6YUNoc1cwY2dLaUF6SUNzZ01GMHBMQ0JwTG5CMWMyZ29iRnRISUNvZ015QXJJREZkS1N3Z2FTNXdkWE5vS0d4YlJ5QXFJRE1nS3lBeVhTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdablZ1WTNScGIyNGdUMlVvUnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NpNXdkWE5vS0VjdWVDa3NJSEl1Y0hWemFDaEhMbmtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDa3NJSFFnUFNCMGFHbHpMbkJoY21GdFpYUmxjbk11YzJoaGNHVnpMQ0J1SUQwZ2RHaHBjeTV3WVhKaGJXVjBaWEp6TG05d2RHbHZibk03Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2w1S0hRc0lHNHNJR1VwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY2lBOUlEQXNJRzhnUFNCbExuTm9ZWEJsY3k1c1pXNW5kR2c3SUhJZ1BDQnZPeUJ5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFJiWlM1emFHRndaWE5iY2wxZE93b2dJQ0FnSUNBZ0lDQWdJQ0J1TG5CMWMyZ29ZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnWlM1dmNIUnBiMjV6TG1WNGRISjFaR1ZRWVhSb093b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcElDRTlQU0IyYjJsa0lEQWdKaVlnS0dVdWIzQjBhVzl1Y3k1bGVIUnlkV1JsVUdGMGFDQTlJRzVsZHlCVVlWdHBMblI1Y0dWZEtDa3Vabkp2YlVwVFQwNG9hU2twTENCdVpYY2diRzRvYml3Z1pTNXZjSFJwYjI1ektUc0tJQ0FnSUgwS2ZTd2dibmtnUFNCN0NpQWdJQ0JuWlc1bGNtRjBaVlJ2Y0ZWV09pQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCbFczUWdLaUF6WFN3Z2J5QTlJR1ZiZENBcUlETWdLeUF4WFN3Z1lTQTlJR1ZiYmlBcUlETmRMQ0JzSUQwZ1pWdHVJQ29nTXlBcklERmRMQ0JqSUQwZ1pWdHBJQ29nTTEwc0lHZ2dQU0JsVzJrZ0tpQXpJQ3NnTVYwN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUZzS0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZnb2Npd2dieWtzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0dFc0lHd3BMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXQ2hqTENCb0tRb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUxBb2dJQ0FnWjJWdVpYSmhkR1ZUYVdSbFYyRnNiRlZXT2lCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUxDQnBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbFczUWdLaUF6WFN3Z1lTQTlJR1ZiZENBcUlETWdLeUF4WFN3Z2JDQTlJR1ZiZENBcUlETWdLeUF5WFN3Z1l5QTlJR1ZiYmlBcUlETmRMQ0JvSUQwZ1pWdHVJQ29nTXlBcklERmRMQ0IxSUQwZ1pWdHVJQ29nTXlBcklESmRMQ0JrSUQwZ1pWdHBJQ29nTTEwc0lHWWdQU0JsVzJrZ0tpQXpJQ3NnTVYwc0lHMGdQU0JsVzJrZ0tpQXpJQ3NnTWwwc0lIZ2dQU0JsVzNJZ0tpQXpYU3dnZGlBOUlHVmJjaUFxSURNZ0t5QXhYU3dnWnlBOUlHVmJjaUFxSURNZ0t5QXlYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdUV0YwYUM1aFluTW9ZU0F0SUdncElEd2dUV0YwYUM1aFluTW9ieUF0SUdNcElEOGdXd29nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXQ2h2TENBeElDMGdiQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJZS0dNc0lERWdMU0IxS1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZnb1pDd2dNU0F0SUcwcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1dDaDRMQ0F4SUMwZ1p5a0tJQ0FnSUNBZ0lDQmRJRG9nV3dvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnV0NoaExDQXhJQzBnYkNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCWUtHZ3NJREVnTFNCMUtTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGZ29aaXdnTVNBdElHMHBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dXQ2gyTENBeElDMGdaeWtLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCcGVTaHpMQ0JsTENCMEtTQjdDaUFnSUNCcFppQW9kQzV6YUdGd1pYTWdQU0JiWFN3Z1FYSnlZWGt1YVhOQmNuSmhlU2h6S1NrZ1ptOXlLR3hsZENCdUlEMGdNQ3dnYVNBOUlITXViR1Z1WjNSb095QnVJRHdnYVRzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJSE5iYmwwN0NpQWdJQ0FnSUNBZ2RDNXphR0Z3WlhNdWNIVnphQ2h5TG5WMWFXUXBPd29nSUNBZ2ZRb2dJQ0FnWld4elpTQjBMbk5vWVhCbGN5NXdkWE5vS0hNdWRYVnBaQ2s3Q2lBZ0lDQnlaWFIxY200Z1pTNWxlSFJ5ZFdSbFVHRjBhQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBMbTl3ZEdsdmJuTXVaWGgwY25Wa1pWQmhkR2dnUFNCbExtVjRkSEoxWkdWUVlYUm9MblJ2U2xOUFRpZ3BLU3dnZERzS2ZRcDJZWElnWDNJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdGdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0FvTVNBcklFMWhkR2d1YzNGeWRDZzFLU2tnTHlBeUxDQnBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMXVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVzRzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNHNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQnVMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRiaXdLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJQzF1TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2djaUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEY3NDaUFnSUNBZ0lDQWdJQ0FnSURFd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01URXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJRFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEa3NDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREV4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJRElzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXdMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0E0TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBNExBb2dJQ0FnSUNBZ0lDQWdJQ0E1TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBNUxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TVN3S0lDQWdJQ0FnSUNBZ0lDQWdOaXdLSUNBZ0lDQWdJQ0FnSUNBZ01pd0tJQ0FnSUNBZ0lDQWdJQ0FnTVRBc0NpQWdJQ0FnSUNBZ0lDQWdJRGdzQ2lBZ0lDQWdJQ0FnSUNBZ0lEWXNDaUFnSUNBZ0lDQWdJQ0FnSURjc0NpQWdJQ0FnSUNBZ0lDQWdJRGtzQ2lBZ0lDQWdJQ0FnSUNBZ0lEZ3NDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0drc0lISXNJR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pKWTI5ellXaGxaSEp2YmtkbGIyMWxkSEo1SWl3Z2RHaHBjeTV3WVhKaGJXVjBaWEp6SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WVdScGRYTTZJR1VzQ2lBZ0lDQWdJQ0FnSUNBZ0lHUmxkR0ZwYkRvZ2RBb2dJQ0FnSUNBZ0lIMDdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1gzSW9aUzV5WVdScGRYTXNJR1V1WkdWMFlXbHNLVHNLSUNBZ0lIMEtmU3dnVFhJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0JiQ2lBZ0lDQWdJQ0FnYm1WM0lGZ29NQ3dnTGpVcExBb2dJQ0FnSUNBZ0lHNWxkeUJZS0M0MUxDQXdLU3dLSUNBZ0lDQWdJQ0J1WlhjZ1dDZ3dMQ0F0TGpVcENpQWdJQ0JkTENCMElEMGdNVElzSUc0Z1BTQXdMQ0JwSUQwZ1RXRjBhQzVRU1NBcUlESXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWt4aGRHaGxSMlZ2YldWMGNua2lMQ0IwYUdsekxuQmhjbUZ0WlhSbGNuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnZhVzUwY3pvZ1pTd0tJQ0FnSUNBZ0lDQWdJQ0FnYzJWbmJXVnVkSE02SUhRc0NpQWdJQ0FnSUNBZ0lDQWdJSEJvYVZOMFlYSjBPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQndhR2xNWlc1bmRHZzZJR2tLSUNBZ0lDQWdJQ0I5TENCMElEMGdUV0YwYUM1bWJHOXZjaWgwS1N3Z2FTQTlJRzEwS0drc0lEQXNJRTFoZEdndVVFa2dLaUF5S1RzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUZ0ZExDQnZJRDBnVzEwc0lHRWdQU0JiWFN3Z2JDQTlJRnRkTENCaklEMGdXMTBzSUdnZ1BTQXhJQzhnZEN3Z2RTQTlJRzVsZHlCTkxDQmtJRDBnYm1WM0lGZ3NJR1lnUFNCdVpYY2dUU3dnYlNBOUlHNWxkeUJOTENCNElEMGdibVYzSUUwc0lIWWdQU0F3TENCbklEMGdNRHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSEFnUFNBd095QndJRHc5SUdVdWJHVnVaM1JvSUMwZ01Uc2djQ3NyS1hOM2FYUmphQ2h3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBd09nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpQTlJR1ZiY0NBcklERmRMbmdnTFNCbFczQmRMbmdzSUdjZ1BTQmxXM0FnS3lBeFhTNTVJQzBnWlZ0d1hTNTVMQ0JtTG5nZ1BTQm5JQ29nTVN3Z1ppNTVJRDBnTFhZc0lHWXVlaUE5SUdjZ0tpQXdMQ0I0TG1OdmNIa29aaWtzSUdZdWJtOXliV0ZzYVhwbEtDa3NJR3d1Y0hWemFDaG1MbmdzSUdZdWVTd2daaTU2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJR1V1YkdWdVozUm9JQzBnTVRvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd3dWNIVnphQ2g0TG5nc0lIZ3VlU3dnZUM1NktUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpQTlJR1ZiY0NBcklERmRMbmdnTFNCbFczQmRMbmdzSUdjZ1BTQmxXM0FnS3lBeFhTNTVJQzBnWlZ0d1hTNTVMQ0JtTG5nZ1BTQm5JQ29nTVN3Z1ppNTVJRDBnTFhZc0lHWXVlaUE5SUdjZ0tpQXdMQ0J0TG1OdmNIa29aaWtzSUdZdWVDQXJQU0I0TG5nc0lHWXVlU0FyUFNCNExua3NJR1l1ZWlBclBTQjRMbm9zSUdZdWJtOXliV0ZzYVhwbEtDa3NJR3d1Y0hWemFDaG1MbmdzSUdZdWVTd2daaTU2S1N3Z2VDNWpiM0I1S0cwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIQXhJRDBnTURzZ2NERWdQRDBnZERzZ2NERXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ2JpQXJJSEF4SUNvZ2FDQXFJR2tzSUhrZ1BTQk5ZWFJvTG5OcGJpaGZLU3dnWWlBOUlFMWhkR2d1WTI5ektGOHBPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUVFZ1BTQXdPeUJCSUR3OUlHVXViR1Z1WjNSb0lDMGdNVHNnUVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVXVlQ0E5SUdWYlFWMHVlQ0FxSUhrc0lIVXVlU0E5SUdWYlFWMHVlU3dnZFM1NklEMGdaVnRCWFM1NElDb2dZaXdnYnk1d2RYTm9LSFV1ZUN3Z2RTNTVMQ0IxTG5vcExDQmtMbmdnUFNCd01TQXZJSFFzSUdRdWVTQTlJRUVnTHlBb1pTNXNaVzVuZEdnZ0xTQXhLU3dnWVM1d2RYTm9LR1F1ZUN3Z1pDNTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTUlEMGdiRnN6SUNvZ1FTQXJJREJkSUNvZ2VTd2dTU0E5SUd4Yk15QXFJRUVnS3lBeFhTd2dheUE5SUd4Yk15QXFJRUVnS3lBd1hTQXFJR0k3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqTG5CMWMyZ29UQ3dnU1N3Z2F5azdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCd01pQTlJREE3SUhBeUlEd2dkRHNnY0RJckt5bG1iM0lvYkdWMElGOHhJRDBnTURzZ1h6RWdQQ0JsTG14bGJtZDBhQ0F0SURFN0lGOHhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZVRFZ1BTQmZNU0FySUhBeUlDb2daUzVzWlc1bmRHZ3NJR0l4SUQwZ2VURXNJRUV4SUQwZ2VURWdLeUJsTG14bGJtZDBhQ3dnVERFZ1BTQjVNU0FySUdVdWJHVnVaM1JvSUNzZ01Td2dTVEVnUFNCNU1TQXJJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lISXVjSFZ6YUNoaU1Td2dRVEVzSUVreEtTd2djaTV3ZFhOb0tFRXhMQ0JNTVN3Z1NURXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtISXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYnl3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpZFhZaUxDQnVaWGNnWkdVb1lTd2dNaWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0dNc0lETXBLVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5Qk5jaWhsTG5CdmFXNTBjeXdnWlM1elpXZHRaVzUwY3l3Z1pTNXdhR2xUZEdGeWRDd2daUzV3YUdsTVpXNW5kR2dwT3dvZ0lDQWdmUXA5TENCSmFTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1lXNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F3S1hzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUZzS0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Rb2dJQ0FnSUNBZ0lGMHNJR2tnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lESXNDaUFnSUNBZ0lDQWdJQ0FnSURVc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEVXNDaUFnSUNBZ0lDQWdJQ0FnSURNc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lETXNDaUFnSUNBZ0lDQWdJQ0FnSURRc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEUXNDaUFnSUNBZ0lDQWdJQ0FnSURJS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lITjFjR1Z5S0c0c0lHa3NJR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pQWTNSaGFHVmtjbTl1UjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpoWkdsMWN6b2daU3dLSUNBZ0lDQWdJQ0FnSUNBZ1pHVjBZV2xzT2lCMENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCSmFTaGxMbkpoWkdsMWN5d2daUzVrWlhSaGFXd3BPd29nSUNBZ2ZRcDlMQ0JpY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJQzQxTENCMElEMGdNU3dnYmlBOUlEZ3NJR2tnUFNBeExDQnlJRDBnTUN3Z2J5QTlJRTFoZEdndVVFa2dLaUF5S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlNhVzVuUjJWdmJXVjBjbmtpTENCMGFHbHpMbkJoY21GdFpYUmxjbk1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2x1Ym1WeVVtRmthWFZ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0J2ZFhSbGNsSmhaR2wxY3pvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEdobGRHRlRaV2R0Wlc1MGN6b2diaXdLSUNBZ0lDQWdJQ0FnSUNBZ2NHaHBVMlZuYldWdWRITTZJR2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVTNSaGNuUTZJSElzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUm9aWFJoVEdWdVozUm9PaUJ2Q2lBZ0lDQWdJQ0FnZlN3Z2JpQTlJRTFoZEdndWJXRjRLRE1zSUc0cExDQnBJRDBnVFdGMGFDNXRZWGdvTVN3Z2FTazdDaUFnSUNBZ0lDQWdiR1YwSUdFZ1BTQmJYU3dnYkNBOUlGdGRMQ0JqSUQwZ1cxMHNJR2dnUFNCYlhTd2dkU0E5SUdVc0lHUWdQU0FvZENBdElHVXBJQzhnYVN3Z1ppQTlJRzVsZHlCTkxDQnRJRDBnYm1WM0lGZzdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjRJRDBnTURzZ2VDQThQU0JwT3lCNEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhZZ1BTQXdPeUIySUR3OUlHNDdJSFlyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUhJZ0t5QjJJQzhnYmlBcUlHODdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1MbmdnUFNCMUlDb2dUV0YwYUM1amIzTW9aeWtzSUdZdWVTQTlJSFVnS2lCTllYUm9Mbk5wYmlobktTd2diQzV3ZFhOb0tHWXVlQ3dnWmk1NUxDQm1Mbm9wTENCakxuQjFjMmdvTUN3Z01Dd2dNU2tzSUcwdWVDQTlJQ2htTG5nZ0x5QjBJQ3NnTVNrZ0x5QXlMQ0J0TG5rZ1BTQW9aaTU1SUM4Z2RDQXJJREVwSUM4Z01pd2dhQzV3ZFhOb0tHMHVlQ3dnYlM1NUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjFJQ3M5SUdRN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2VERWdQU0F3T3lCNE1TQThJR2s3SUhneEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkakVnUFNCNE1TQXFJQ2h1SUNzZ01TazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWnpFZ1BTQXdPeUJuTVNBOElHNDdJR2N4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEFnUFNCbk1TQXJJSFl4TENCZklEMGdjQ3dnZVNBOUlIQWdLeUJ1SUNzZ01Td2dZaUE5SUhBZ0t5QnVJQ3NnTWl3Z1FTQTlJSEFnS3lBeE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lTNXdkWE5vS0Y4c0lIa3NJRUVwTENCaExuQjFjMmdvZVN3Z1lpd2dRU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkpibVJsZUNoaEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR3dzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaGpMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2hvTENBeUtTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1luSW9aUzVwYm01bGNsSmhaR2wxY3l3Z1pTNXZkWFJsY2xKaFpHbDFjeXdnWlM1MGFHVjBZVk5sWjIxbGJuUnpMQ0JsTG5Cb2FWTmxaMjFsYm5SekxDQmxMblJvWlhSaFUzUmhjblFzSUdVdWRHaGxkR0ZNWlc1bmRHZ3BPd29nSUNBZ2ZRcDlMQ0JFYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCWWRDaGJDaUFnSUNBZ0lDQWdibVYzSUZnb01Dd2dMalVwTEFvZ0lDQWdJQ0FnSUc1bGR5QllLQzB1TlN3Z0xTNDFLU3dLSUNBZ0lDQWdJQ0J1WlhjZ1dDZ3VOU3dnTFM0MUtRb2dJQ0FnWFNrc0lIUWdQU0F4TWlsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVMmhoY0dWSFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnYzJoaGNHVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmpkWEoyWlZObFoyMWxiblJ6T2lCMENpQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlGdGRMQ0JwSUQwZ1cxMHNJSElnUFNCYlhTd2dieUE5SUZ0ZExDQmhJRDBnTUN3Z2JDQTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWlNrZ1BUMDlJQ0V4S1NCaktHVXBPd29nSUNBZ0lDQWdJR1ZzYzJVZ1ptOXlLR3hsZENCb0lEMGdNRHNnYUNBOElHVXViR1Z1WjNSb095Qm9LeXNwWXlobFcyaGRLU3dnZEdocGN5NWhaR1JIY205MWNDaGhMQ0JzTENCb0tTd2dZU0FyUFNCc0xDQnNJRDBnTURzS0lDQWdJQ0FnSUNCMGFHbHpMbk5sZEVsdVpHVjRLRzRwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2FTd2dNeWtwTENCMGFHbHpMbk5sZEVGMGRISnBZblYwWlNnaWJtOXliV0ZzSWl3Z2JtVjNJR1JsS0hJc0lETXBLU3dnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5WMklpd2dibVYzSUdSbEtHOHNJRElwS1RzS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCaktHZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFVnUFNCcExteGxibWQwYUNBdklETXNJR1FnUFNCb0xtVjRkSEpoWTNSUWIybHVkSE1vZENrc0lHWWdQU0JrTG5Ob1lYQmxMQ0J0SUQwZ1pDNW9iMnhsY3pzS0lDQWdJQ0FnSUNBZ0lDQWdTblF1YVhORGJHOWphMWRwYzJVb1ppa2dQVDA5SUNFeElDWW1JQ2htSUQwZ1ppNXlaWFpsY25ObEtDa3BPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhZZ1BTQXdMQ0JuSUQwZ2JTNXNaVzVuZEdnN0lIWWdQQ0JuT3lCMkt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBZ1BTQnRXM1pkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnU25RdWFYTkRiRzlqYTFkcGMyVW9jQ2tnUFQwOUlDRXdJQ1ltSUNodFczWmRJRDBnY0M1eVpYWmxjbk5sS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ1NuUXVkSEpwWVc1bmRXeGhkR1ZUYUdGd1pTaG1MQ0J0S1RzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjJNU0E5SURBc0lHY3hJRDBnYlM1c1pXNW5kR2c3SUhZeElEd2daekU3SUhZeEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhBeElEMGdiVnQyTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbUlEMGdaaTVqYjI1allYUW9jREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZGpJZ1BTQXdMQ0JuTWlBOUlHWXViR1Z1WjNSb095QjJNaUE4SUdjeU95QjJNaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQndNaUE5SUdaYmRqSmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzV3ZFhOb0tIQXlMbmdzSUhBeUxua3NJREFwTENCeUxuQjFjMmdvTUN3Z01Dd2dNU2tzSUc4dWNIVnphQ2h3TWk1NExDQndNaTU1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhZeklEMGdNQ3dnWnpNZ1BTQjRMbXhsYm1kMGFEc2dkak1nUENCbk16c2dkak1yS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjRE1nUFNCNFczWXpYU3dnWHlBOUlIQXpXekJkSUNzZ2RTd2dlU0E5SUhBeld6RmRJQ3NnZFN3Z1lpQTlJSEF6V3pKZElDc2dkVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzR1Y0hWemFDaGZMQ0I1TENCaUtTd2diQ0FyUFNBek93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RHOUtVMDlPS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2MzVndaWEl1ZEc5S1UwOU9LQ2tzSUhRZ1BTQjBhR2x6TG5CaGNtRnRaWFJsY25NdWMyaGhjR1Z6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5ZVNoMExDQmxLVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnWlM1emFHRndaWE11YkdWdVozUm9PeUJwSUR3Z2Nqc2dhU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4Z1BTQjBXMlV1YzJoaGNHVnpXMmxkWFRzS0lDQWdJQ0FnSUNBZ0lDQWdiaTV3ZFhOb0tHOHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVScEtHNHNJR1V1WTNWeWRtVlRaV2R0Wlc1MGN5azdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJSEo1S0hNc0lHVXBJSHNLSUNBZ0lHbG1JQ2hsTG5Ob1lYQmxjeUE5SUZ0ZExDQkJjbkpoZVM1cGMwRnljbUY1S0hNcEtTQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdjeTVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYzF0MFhUc0tJQ0FnSUNBZ0lDQmxMbk5vWVhCbGN5NXdkWE5vS0drdWRYVnBaQ2s3Q2lBZ0lDQjlDaUFnSUNCbGJITmxJR1V1YzJoaGNHVnpMbkIxYzJnb2N5NTFkV2xrS1RzS0lDQWdJSEpsZEhWeWJpQmxPd3A5Q25aaGNpQkdhU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdYMlVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlERXNJSFFnUFNBek1pd2diaUE5SURFMkxDQnBJRDBnTUN3Z2NpQTlJRTFoZEdndVVFa2dLaUF5TENCdklEMGdNQ3dnWVNBOUlFMWhkR2d1VUVrcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJbE53YUdWeVpVZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBkWE02SUdVc0NpQWdJQ0FnSUNBZ0lDQWdJSGRwWkhSb1UyVm5iV1Z1ZEhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUdobGFXZG9kRk5sWjIxbGJuUnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQndhR2xUZEdGeWREb2dhU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NHaHBUR1Z1WjNSb09pQnlMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVk4wWVhKME9pQnZMQW9nSUNBZ0lDQWdJQ0FnSUNCMGFHVjBZVXhsYm1kMGFEb2dZUW9nSUNBZ0lDQWdJSDBzSUhRZ1BTQk5ZWFJvTG0xaGVDZ3pMQ0JOWVhSb0xtWnNiMjl5S0hRcEtTd2diaUE5SUUxaGRHZ3ViV0Y0S0RJc0lFMWhkR2d1Wm14dmIzSW9iaWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnVFdGMGFDNXRhVzRvYnlBcklHRXNJRTFoZEdndVVFa3BMQ0JqSUQwZ01Dd2dhQ0E5SUZ0ZExDQjFJRDBnYm1WM0lFMHNJR1FnUFNCdVpYY2dUU3dnWmlBOUlGdGRMQ0J0SUQwZ1cxMHNJSGdnUFNCYlhTd2dkaUE5SUZ0ZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1p5QTlJREE3SUdjZ1BEMGdianNnWnlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0JiWFN3Z1h5QTlJR2NnTHlCdUxDQjVJRDBnTURzS0lDQWdJQ0FnSUNBZ0lDQWdaeUE5UFNBd0lDWW1JRzhnUFQwZ01DQS9JSGtnUFNBdU5TQXZJSFFnT2lCbklEMDlJRzRnSmlZZ2JDQTlQU0JOWVhSb0xsQkpJQ1ltSUNoNUlEMGdMUzQxSUM4Z2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWWlBOUlEQTdJR0lnUEQwZ2REc2dZaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJJRDBnWWlBdklIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFMbmdnUFNBdFpTQXFJRTFoZEdndVkyOXpLR2tnS3lCQklDb2djaWtnS2lCTllYUm9Mbk5wYmlodklDc2dYeUFxSUdFcExDQjFMbmtnUFNCbElDb2dUV0YwYUM1amIzTW9ieUFySUY4Z0tpQmhLU3dnZFM1NklEMGdaU0FxSUUxaGRHZ3VjMmx1S0drZ0t5QkJJQ29nY2lrZ0tpQk5ZWFJvTG5OcGJpaHZJQ3NnWHlBcUlHRXBMQ0J0TG5CMWMyZ29kUzU0TENCMUxua3NJSFV1ZWlrc0lHUXVZMjl3ZVNoMUtTNXViM0p0WVd4cGVtVW9LU3dnZUM1d2RYTm9LR1F1ZUN3Z1pDNTVMQ0JrTG5vcExDQjJMbkIxYzJnb1FTQXJJSGtzSURFZ0xTQmZLU3dnY0M1d2RYTm9LR01yS3lrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2FDNXdkWE5vS0hBcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHY3hJRDBnTURzZ1p6RWdQQ0J1T3lCbk1Tc3JLV1p2Y2loc1pYUWdjREVnUFNBd095QndNU0E4SUhRN0lIQXhLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHpFZ1BTQm9XMmN4WFZ0d01TQXJJREZkTENCNU1TQTlJR2hiWnpGZFczQXhYU3dnWWpFZ1BTQm9XMmN4SUNzZ01WMWJjREZkTENCQk1TQTlJR2hiWnpFZ0t5QXhYVnR3TVNBcklERmRPd29nSUNBZ0lDQWdJQ0FnSUNBb1p6RWdJVDA5SURBZ2ZId2dieUErSURBcElDWW1JR1l1Y0hWemFDaGZNU3dnZVRFc0lFRXhLU3dnS0djeElDRTlQU0J1SUMwZ01TQjhmQ0JzSUR3Z1RXRjBhQzVRU1NrZ0ppWWdaaTV3ZFhOb0tIa3hMQ0JpTVN3Z1FURXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxuTmxkRWx1WkdWNEtHWXBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYlN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLSGdzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0hZc0lESXBLVHNLSUNBZ0lIMEtJQ0FnSUhOMFlYUnBZeUJtY205dFNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QkdhU2hsTG5KaFpHbDFjeXdnWlM1M2FXUjBhRk5sWjIxbGJuUnpMQ0JsTG1obGFXZG9kRk5sWjIxbGJuUnpMQ0JsTG5Cb2FWTjBZWEowTENCbExuQm9hVXhsYm1kMGFDd2daUzUwYUdWMFlWTjBZWEowTENCbExuUm9aWFJoVEdWdVozUm9LVHNLSUNBZ0lIMEtmU3dnZDNJZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdGdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0F4TENCMElEMGdNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURUtJQ0FnSUNBZ0lDQmRMQ0JwSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodUxDQnBMQ0JsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVkdWMGNtRm9aV1J5YjI1SFpXOXRaWFJ5ZVNJc0lIUm9hWE11Y0dGeVlXMWxkR1Z5Y3lBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21Ga2FYVnpPaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWFJoYVd3NklIUUtJQ0FnSUNBZ0lDQjlPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIZHlLR1V1Y21Ga2FYVnpMQ0JsTG1SbGRHRnBiQ2s3Q2lBZ0lDQjlDbjBzSUZOeUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCZlpTQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxJRDBnTVN3Z2RDQTlJQzQwTENCdUlEMGdPQ3dnYVNBOUlEWXNJSElnUFNCTllYUm9MbEJKSUNvZ01pbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVkc5eWRYTkhaVzl0WlhSeWVTSXNJSFJvYVhNdWNHRnlZVzFsZEdWeWN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtRmthWFZ6T2lCbExBb2dJQ0FnSUNBZ0lDQWdJQ0IwZFdKbE9pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCeVlXUnBZV3hUWldkdFpXNTBjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdkSFZpZFd4aGNsTmxaMjFsYm5Sek9pQnBMQW9nSUNBZ0lDQWdJQ0FnSUNCaGNtTTZJSElLSUNBZ0lDQWdJQ0I5TENCdUlEMGdUV0YwYUM1bWJHOXZjaWh1S1N3Z2FTQTlJRTFoZEdndVpteHZiM0lvYVNrN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCYlhTd2dZU0E5SUZ0ZExDQnNJRDBnVzEwc0lHTWdQU0JiWFN3Z2FDQTlJRzVsZHlCTkxDQjFJRDBnYm1WM0lFMHNJR1FnUFNCdVpYY2dUVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1lnUFNBd095Qm1JRHc5SUc0N0lHWXJLeWxtYjNJb2JHVjBJRzBnUFNBd095QnRJRHc5SUdrN0lHMHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0I0SUQwZ2JTQXZJR2tnS2lCeUxDQjJJRDBnWmlBdklHNGdLaUJOWVhSb0xsQkpJQ29nTWpzS0lDQWdJQ0FnSUNBZ0lDQWdkUzU0SUQwZ0tHVWdLeUIwSUNvZ1RXRjBhQzVqYjNNb2Rpa3BJQ29nVFdGMGFDNWpiM01vZUNrc0lIVXVlU0E5SUNobElDc2dkQ0FxSUUxaGRHZ3VZMjl6S0hZcEtTQXFJRTFoZEdndWMybHVLSGdwTENCMUxub2dQU0IwSUNvZ1RXRjBhQzV6YVc0b2Rpa3NJR0V1Y0hWemFDaDFMbmdzSUhVdWVTd2dkUzU2S1N3Z2FDNTRJRDBnWlNBcUlFMWhkR2d1WTI5ektIZ3BMQ0JvTG5rZ1BTQmxJQ29nVFdGMGFDNXphVzRvZUNrc0lHUXVjM1ZpVm1WamRHOXljeWgxTENCb0tTNXViM0p0WVd4cGVtVW9LU3dnYkM1d2RYTm9LR1F1ZUN3Z1pDNTVMQ0JrTG5vcExDQmpMbkIxYzJnb2JTQXZJR2twTENCakxuQjFjMmdvWmlBdklHNHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1l4SUQwZ01Uc2daakVnUEQwZ2Jqc2daakVyS3lsbWIzSW9iR1YwSUcweElEMGdNVHNnYlRFZ1BEMGdhVHNnYlRFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQjRNU0E5SUNocElDc2dNU2tnS2lCbU1TQXJJRzB4SUMwZ01Td2dkakVnUFNBb2FTQXJJREVwSUNvZ0tHWXhJQzBnTVNrZ0t5QnRNU0F0SURFc0lHY2dQU0FvYVNBcklERXBJQ29nS0dZeElDMGdNU2tnS3lCdE1Td2djQ0E5SUNocElDc2dNU2tnS2lCbU1TQXJJRzB4T3dvZ0lDQWdJQ0FnSUNBZ0lDQnZMbkIxYzJnb2VERXNJSFl4TENCd0tTd2dieTV3ZFhOb0tIWXhMQ0JuTENCd0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkpibVJsZUNodktTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR0VzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaHNMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2hqTENBeUtTazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabkp2YlVwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1UzSW9aUzV5WVdScGRYTXNJR1V1ZEhWaVpTd2daUzV5WVdScFlXeFRaV2R0Wlc1MGN5d2daUzUwZFdKMWJHRnlVMlZuYldWdWRITXNJR1V1WVhKaktUc0tJQ0FnSUgwS2ZTd2dWSElnUFNCamJHRnpjeUJsZUhSbGJtUnpJRjlsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ0xqUXNJRzRnUFNBMk5Dd2dhU0E5SURnc0lISWdQU0F5TENCdklEMGdNeWw3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVZHOXlkWE5MYm05MFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nWlN3S0lDQWdJQ0FnSUNBZ0lDQWdkSFZpWlRvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnZEhWaWRXeGhjbE5sWjIxbGJuUnpPaUJ1TEFvZ0lDQWdJQ0FnSUNBZ0lDQnlZV1JwWVd4VFpXZHRaVzUwY3pvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnY0RvZ2Npd0tJQ0FnSUNBZ0lDQWdJQ0FnY1RvZ2J3b2dJQ0FnSUNBZ0lIMHNJRzRnUFNCTllYUm9MbVpzYjI5eUtHNHBMQ0JwSUQwZ1RXRjBhQzVtYkc5dmNpaHBLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRnRkTENCc0lEMGdXMTBzSUdNZ1BTQmJYU3dnYUNBOUlGdGRMQ0IxSUQwZ2JtVjNJRTBzSUdRZ1BTQnVaWGNnVFN3Z1ppQTlJRzVsZHlCTkxDQnRJRDBnYm1WM0lFMHNJSGdnUFNCdVpYY2dUU3dnZGlBOUlHNWxkeUJOTENCbklEMGdibVYzSUUwN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCZklEMGdNRHNnWHlBOFBTQnVPeUFySzE4cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJRjhnTHlCdUlDb2djaUFxSUUxaGRHZ3VVRWtnS2lBeU93b2dJQ0FnSUNBZ0lDQWdJQ0J3S0hrc0lISXNJRzhzSUdVc0lHWXBMQ0J3S0hrZ0t5QXVNREVzSUhJc0lHOHNJR1VzSUcwcExDQjJMbk4xWWxabFkzUnZjbk1vYlN3Z1ppa3NJR2N1WVdSa1ZtVmpkRzl5Y3lodExDQm1LU3dnZUM1amNtOXpjMVpsWTNSdmNuTW9kaXdnWnlrc0lHY3VZM0p2YzNOV1pXTjBiM0p6S0hnc0lIWXBMQ0I0TG01dmNtMWhiR2w2WlNncExDQm5MbTV2Y20xaGJHbDZaU2dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHSWdQU0F3T3lCaUlEdzlJR2s3SUNzcllpbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnUVNBOUlHSWdMeUJwSUNvZ1RXRjBhQzVRU1NBcUlESXNJRXdnUFNBdGRDQXFJRTFoZEdndVkyOXpLRUVwTENCSklEMGdkQ0FxSUUxaGRHZ3VjMmx1S0VFcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RTNTRJRDBnWmk1NElDc2dLRXdnS2lCbkxuZ2dLeUJKSUNvZ2VDNTRLU3dnZFM1NUlEMGdaaTU1SUNzZ0tFd2dLaUJuTG5rZ0t5QkpJQ29nZUM1NUtTd2dkUzU2SUQwZ1ppNTZJQ3NnS0V3Z0tpQm5Mbm9nS3lCSklDb2dlQzU2S1N3Z2JDNXdkWE5vS0hVdWVDd2dkUzU1TENCMUxub3BMQ0JrTG5OMVlsWmxZM1J2Y25Nb2RTd2daaWt1Ym05eWJXRnNhWHBsS0Nrc0lHTXVjSFZ6YUNoa0xuZ3NJR1F1ZVN3Z1pDNTZLU3dnYUM1d2RYTm9LRjhnTHlCdUtTd2dhQzV3ZFhOb0tHSWdMeUJwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjh4SUQwZ01Uc2dYekVnUEQwZ2Jqc2dYekVyS3lsbWIzSW9iR1YwSUhreElEMGdNVHNnZVRFZ1BEMGdhVHNnZVRFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmlNU0E5SUNocElDc2dNU2tnS2lBb1h6RWdMU0F4S1NBcklDaDVNU0F0SURFcExDQkJNU0E5SUNocElDc2dNU2tnS2lCZk1TQXJJQ2g1TVNBdElERXBMQ0JNTVNBOUlDaHBJQ3NnTVNrZ0tpQmZNU0FySUhreExDQkpNU0E5SUNocElDc2dNU2tnS2lBb1h6RWdMU0F4S1NBcklIa3hPd29nSUNBZ0lDQWdJQ0FnSUNCaExuQjFjMmdvWWpFc0lFRXhMQ0JKTVNrc0lHRXVjSFZ6YUNoQk1Td2dUREVzSUVreEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1elpYUkpibVJsZUNoaEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR3dzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JbTV2Y20xaGJDSXNJRzVsZHlCa1pTaGpMQ0F6S1Nrc0lIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtDSjFkaUlzSUc1bGR5QmtaU2hvTENBeUtTazdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdjQ2hmTENCNUxDQmlMQ0JCTENCTUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQkpJRDBnVFdGMGFDNWpiM01vWHlrc0lHc2dQU0JOWVhSb0xuTnBiaWhmS1N3Z1FpQTlJR0lnTHlCNUlDb2dYeXdnVUNBOUlFMWhkR2d1WTI5ektFSXBPd29nSUNBZ0lDQWdJQ0FnSUNCTUxuZ2dQU0JCSUNvZ0tESWdLeUJRS1NBcUlDNDFJQ29nU1N3Z1RDNTVJRDBnUVNBcUlDZ3lJQ3NnVUNrZ0tpQnJJQ29nTGpVc0lFd3VlaUE5SUVFZ0tpQk5ZWFJvTG5OcGJpaENLU0FxSUM0MU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJSE4wWVhScFl5Qm1jbTl0U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCVWNpaGxMbkpoWkdsMWN5d2daUzUwZFdKbExDQmxMblIxWW5Wc1lYSlRaV2R0Wlc1MGN5d2daUzV5WVdScFlXeFRaV2R0Wlc1MGN5d2daUzV3TENCbExuRXBPd29nSUNBZ2ZRcDlMQ0JGY2lBOUlHTnNZWE56SUdWNGRHVnVaSE1nWDJVZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJRzVsZHlCb2J5aHVaWGNnVFNndE1Td2dMVEVzSURBcExDQnVaWGNnVFNndE1Td2dNU3dnTUNrc0lHNWxkeUJOS0RFc0lERXNJREFwS1N3Z2RDQTlJRFkwTENCdUlEMGdNU3dnYVNBOUlEZ3NJSElnUFNBaE1TbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVkhWaVpVZGxiMjFsZEhKNUlpd2dkR2hwY3k1d1lYSmhiV1YwWlhKeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCd1lYUm9PaUJsTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBkV0oxYkdGeVUyVm5iV1Z1ZEhNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhKaFpHbDFjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdjbUZrYVdGc1UyVm5iV1Z1ZEhNNklHa3NDaUFnSUNBZ0lDQWdJQ0FnSUdOc2IzTmxaRG9nY2dvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2JHVjBJRzhnUFNCbExtTnZiWEIxZEdWR2NtVnVaWFJHY21GdFpYTW9kQ3dnY2lrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwWVc1blpXNTBjeUE5SUc4dWRHRnVaMlZ1ZEhNc0lIUm9hWE11Ym05eWJXRnNjeUE5SUc4dWJtOXliV0ZzY3l3Z2RHaHBjeTVpYVc1dmNtMWhiSE1nUFNCdkxtSnBibTl5YldGc2N6c0tJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlHNWxkeUJOTENCc0lEMGdibVYzSUUwc0lHTWdQU0J1WlhjZ1dDd2dhQ0E5SUc1bGR5Qk5MQ0IxSUQwZ1cxMHNJR1FnUFNCYlhTd2daaUE5SUZ0ZExDQnRJRDBnVzEwN0NpQWdJQ0FnSUNBZ2VDZ3BMQ0IwYUdsekxuTmxkRWx1WkdWNEtHMHBMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvZFN3Z015a3BMQ0IwYUdsekxuTmxkRUYwZEhKcFluVjBaU2dpYm05eWJXRnNJaXdnYm1WM0lHUmxLR1FzSURNcEtTd2dkR2hwY3k1elpYUkJkSFJ5YVdKMWRHVW9JblYySWl3Z2JtVjNJR1JsS0dZc0lESXBLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUI0S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd095QmZJRHdnZERzZ1h5c3JLWFlvWHlrN0NpQWdJQ0FnSUNBZ0lDQWdJSFlvY2lBOVBUMGdJVEVnUHlCMElEb2dNQ2tzSUhBb0tTd2daeWdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCMktGOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FDQTlJR1V1WjJWMFVHOXBiblJCZENoZklDOGdkQ3dnYUNrN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNUlEMGdieTV1YjNKdFlXeHpXMTlkTENCaUlEMGdieTVpYVc1dmNtMWhiSE5iWDEwN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdRU0E5SURBN0lFRWdQRDBnYVRzZ1FTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCTUlEMGdRU0F2SUdrZ0tpQk5ZWFJvTGxCSklDb2dNaXdnU1NBOUlFMWhkR2d1YzJsdUtFd3BMQ0JySUQwZ0xVMWhkR2d1WTI5ektFd3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiQzU0SUQwZ2F5QXFJSGt1ZUNBcklFa2dLaUJpTG5nc0lHd3VlU0E5SUdzZ0tpQjVMbmtnS3lCSklDb2dZaTU1TENCc0xub2dQU0JySUNvZ2VTNTZJQ3NnU1NBcUlHSXVlaXdnYkM1dWIzSnRZV3hwZW1Vb0tTd2daQzV3ZFhOb0tHd3VlQ3dnYkM1NUxDQnNMbm9wTENCaExuZ2dQU0JvTG5nZ0t5QnVJQ29nYkM1NExDQmhMbmtnUFNCb0xua2dLeUJ1SUNvZ2JDNTVMQ0JoTG5vZ1BTQm9Mbm9nS3lCdUlDb2diQzU2TENCMUxuQjFjMmdvWVM1NExDQmhMbmtzSUdFdWVpazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1p5Z3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCZklEMGdNVHNnWHlBOFBTQjBPeUJmS3lzcFptOXlLR3hsZENCNUlEMGdNVHNnZVNBOFBTQnBPeUI1S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0lnUFNBb2FTQXJJREVwSUNvZ0tGOGdMU0F4S1NBcklDaDVJQzBnTVNrc0lFRWdQU0FvYVNBcklERXBJQ29nWHlBcklDaDVJQzBnTVNrc0lFd2dQU0FvYVNBcklERXBJQ29nWHlBcklIa3NJRWtnUFNBb2FTQXJJREVwSUNvZ0tGOGdMU0F4S1NBcklIazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRMbkIxYzJnb1lpd2dRU3dnU1Nrc0lHMHVjSFZ6YUNoQkxDQk1MQ0JKS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ3S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRjhnUFNBd095QmZJRHc5SUhRN0lGOHJLeWxtYjNJb2JHVjBJSGtnUFNBd095QjVJRHc5SUdrN0lIa3JLeWxqTG5nZ1BTQmZJQzhnZEN3Z1l5NTVJRDBnZVNBdklHa3NJR1l1Y0hWemFDaGpMbmdzSUdNdWVTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnZEc5S1UwOU9LQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnYzNWd1pYSXVkRzlLVTA5T0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVjR0YwYUNBOUlIUm9hWE11Y0dGeVlXMWxkR1Z5Y3k1d1lYUm9MblJ2U2xOUFRpZ3BMQ0JsT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUdaeWIyMUtVMDlPS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJRVZ5S0c1bGR5QlVZVnRsTG5CaGRHZ3VkSGx3WlYwb0tTNW1jbTl0U2xOUFRpaGxMbkJoZEdncExDQmxMblIxWW5Wc1lYSlRaV2R0Wlc1MGN5d2daUzV5WVdScGRYTXNJR1V1Y21Ga2FXRnNVMlZuYldWdWRITXNJR1V1WTJ4dmMyVmtLVHNLSUNBZ0lIMEtmU3dnUldFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUY5bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVWdQU0J1ZFd4c0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxuUjVjR1VnUFNBaVYybHlaV1p5WVcxbFIyVnZiV1YwY25raUxDQjBhR2x6TG5CaGNtRnRaWFJsY25NZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdkbGIyMWxkSEo1T2lCbENpQWdJQ0FnSUNBZ2ZTd2daU0FoUFQwZ2JuVnNiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlGdGRMQ0J1SUQwZ2JtVjNJRk5sZEN3Z2FTQTlJRzVsZHlCTkxDQnlJRDBnYm1WM0lFMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxMbWx1WkdWNElDRTlQU0J1ZFd4c0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlHVXVZWFIwY21saWRYUmxjeTV3YjNOcGRHbHZiaXdnWVNBOUlHVXVhVzVrWlhnc0lHd2dQU0JsTG1keWIzVndjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3d1YkdWdVozUm9JRDA5UFNBd0lDWW1JQ2hzSUQwZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjM1JoY25RNklEQXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZkVzUwT2lCaExtTnZkVzUwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0WVhSbGNtbGhiRWx1WkdWNE9pQXdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdNZ1BTQXdMQ0JvSUQwZ2JDNXNaVzVuZEdnN0lHTWdQQ0JvT3lBcksyTXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYkZ0alhTd2daQ0E5SUhVdWMzUmhjblFzSUdZZ1BTQjFMbU52ZFc1ME93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SUdRc0lIZ2dQU0JrSUNzZ1pqc2diU0E4SUhnN0lHMGdLejBnTXlsbWIzSW9iR1YwSUhZZ1BTQXdPeUIySUR3Z016c2dkaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHY2dQU0JoTG1kbGRGZ29iU0FySUhZcExDQndJRDBnWVM1blpYUllLRzBnS3lBb2RpQXJJREVwSUNVZ015azdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h2TENCbktTd2djaTVtY205dFFuVm1abVZ5UVhSMGNtbGlkWFJsS0c4c0lIQXBMQ0I1WXlocExDQnlMQ0J1S1NBOVBUMGdJVEFnSmlZZ0tIUXVjSFZ6YUNocExuZ3NJR2t1ZVN3Z2FTNTZLU3dnZEM1d2RYTm9LSEl1ZUN3Z2NpNTVMQ0J5TG5vcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdiekVnUFNCbExtRjBkSEpwWW5WMFpYTXVjRzl6YVhScGIyNDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRXhJRDBnTUN3Z2JERWdQU0J2TVM1amIzVnVkQ0F2SURNN0lHRXhJRHdnYkRFN0lHRXhLeXNwWm05eUtHeGxkQ0JqTVNBOUlEQTdJR014SUR3Z016c2dZekVyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdneElEMGdNeUFxSUdFeElDc2dZekVzSUhVeElEMGdNeUFxSUdFeElDc2dLR014SUNzZ01Ta2dKU0F6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3Vabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h2TVN3Z2FERXBMQ0J5TG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb2J6RXNJSFV4S1N3Z2VXTW9hU3dnY2l3Z2Jpa2dQVDA5SUNFd0lDWW1JQ2gwTG5CMWMyZ29hUzU0TENCcExua3NJR2t1ZWlrc0lIUXVjSFZ6YUNoeUxuZ3NJSEl1ZVN3Z2NpNTZLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0hRc0lETXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUhsaktITXNJR1VzSUhRcElIc0tJQ0FnSUd4bGRDQnVJRDBnWUNSN2N5NTRmU3drZTNNdWVYMHNKSHR6TG5wOUxTUjdaUzU0ZlN3a2UyVXVlWDBzSkh0bExucDlZQ3dnYVNBOUlHQWtlMlV1ZUgwc0pIdGxMbmw5TENSN1pTNTZmUzBrZTNNdWVIMHNKSHR6TG5sOUxDUjdjeTU2ZldBN0NpQWdJQ0J5WlhSMWNtNGdkQzVvWVhNb2Jpa2dQVDA5SUNFd0lIeDhJSFF1YUdGektHa3BJRDA5UFNBaE1DQS9JQ0V4SURvZ0tIUXVZV1JrS0c0c0lHa3BMQ0FoTUNrN0NuMEtkbUZ5SUhaaklEMGdUMkpxWldOMExtWnlaV1Y2WlNoN0NpQWdJQ0JmWDNCeWIzUnZYMTg2SUc1MWJHd3NDaUFnSUNCQ2IzaEhaVzl0WlhSeWVUb2dkMjRzQ2lBZ0lDQkNiM2hDZFdabVpYSkhaVzl0WlhSeWVUb2dkMjRzQ2lBZ0lDQkRhWEpqYkdWSFpXOXRaWFJ5ZVRvZ1puSXNDaUFnSUNCRGFYSmpiR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2dabklzQ2lBZ0lDQkRiMjVsUjJWdmJXVjBjbms2SUhCeUxBb2dJQ0FnUTI5dVpVSjFabVpsY2tkbGIyMWxkSEo1T2lCd2Npd0tJQ0FnSUVONWJHbHVaR1Z5UjJWdmJXVjBjbms2SUVwdUxBb2dJQ0FnUTNsc2FXNWtaWEpDZFdabVpYSkhaVzl0WlhSeWVUb2dTbTRzQ2lBZ0lDQkViMlJsWTJGb1pXUnliMjVIWlc5dFpYUnllVG9nYlhJc0NpQWdJQ0JFYjJSbFkyRm9aV1J5YjI1Q2RXWm1aWEpIWlc5dFpYUnllVG9nYlhJc0NpQWdJQ0JGWkdkbGMwZGxiMjFsZEhKNU9pQmZZU3dLSUNBZ0lFVjRkSEoxWkdWSFpXOXRaWFJ5ZVRvZ2JHNHNDaUFnSUNCRmVIUnlkV1JsUW5WbVptVnlSMlZ2YldWMGNuazZJR3h1TEFvZ0lDQWdTV052YzJGb1pXUnliMjVIWlc5dFpYUnllVG9nWDNJc0NpQWdJQ0JKWTI5ellXaGxaSEp2YmtKMVptWmxja2RsYjIxbGRISjVPaUJmY2l3S0lDQWdJRXhoZEdobFIyVnZiV1YwY25rNklFMXlMQW9nSUNBZ1RHRjBhR1ZDZFdabVpYSkhaVzl0WlhSeWVUb2dUWElzQ2lBZ0lDQlBZM1JoYUdWa2NtOXVSMlZ2YldWMGNuazZJRWxwTEFvZ0lDQWdUMk4wWVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQkphU3dLSUNBZ0lGQnNZVzVsUjJWdmJXVjBjbms2SUZCcExBb2dJQ0FnVUd4aGJtVkNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ1VHa3NDaUFnSUNCUWIyeDVhR1ZrY205dVIyVnZiV1YwY25rNklHRnVMQW9nSUNBZ1VHOXNlV2hsWkhKdmJrSjFabVpsY2tkbGIyMWxkSEo1T2lCaGJpd0tJQ0FnSUZKcGJtZEhaVzl0WlhSeWVUb2dZbklzQ2lBZ0lDQlNhVzVuUW5WbVptVnlSMlZ2YldWMGNuazZJR0p5TEFvZ0lDQWdVMmhoY0dWSFpXOXRaWFJ5ZVRvZ1JHa3NDaUFnSUNCVGFHRndaVUoxWm1abGNrZGxiMjFsZEhKNU9pQkVhU3dLSUNBZ0lGTndhR1Z5WlVkbGIyMWxkSEo1T2lCR2FTd0tJQ0FnSUZOd2FHVnlaVUoxWm1abGNrZGxiMjFsZEhKNU9pQkdhU3dLSUNBZ0lGUmxkSEpoYUdWa2NtOXVSMlZ2YldWMGNuazZJSGR5TEFvZ0lDQWdWR1YwY21Gb1pXUnliMjVDZFdabVpYSkhaVzl0WlhSeWVUb2dkM0lzQ2lBZ0lDQlViM0oxYzBkbGIyMWxkSEo1T2lCVGNpd0tJQ0FnSUZSdmNuVnpRblZtWm1WeVIyVnZiV1YwY25rNklGTnlMQW9nSUNBZ1ZHOXlkWE5MYm05MFIyVnZiV1YwY25rNklGUnlMQW9nSUNBZ1ZHOXlkWE5MYm05MFFuVm1abVZ5UjJWdmJXVjBjbms2SUZSeUxBb2dJQ0FnVkhWaVpVZGxiMjFsZEhKNU9pQkZjaXdLSUNBZ0lGUjFZbVZDZFdabVpYSkhaVzl0WlhSeWVUb2dSWElzQ2lBZ0lDQlhhWEpsWm5KaGJXVkhaVzl0WlhSeWVUb2dSV0VLZlNrc0lFRmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlRhR0ZrYjNkTllYUmxjbWxoYkNJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9NQ2tzSUhSb2FYTXVkSEpoYm5Od1lYSmxiblFnUFNBaE1Dd2dkR2hwY3k1elpYUldZV3gxWlhNb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BCWVM1d2NtOTBiM1I1Y0dVdWFYTlRhR0ZrYjNkTllYUmxjbWxoYkNBOUlDRXdPd3AyWVhJZ2NHOGdQU0JqYkdGemN5QmxlSFJsYm1SeklHUjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWtaV1pwYm1WeklEMGdld29nSUNBZ0lDQWdJQ0FnSUNCVFZFRk9SRUZTUkRvZ0lpSUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTV5YjNWbmFHNWxjM01nUFNBeExDQjBhR2x6TG0xbGRHRnNibVZ6Y3lBOUlEQXNJSFJvYVhNdWJXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbUZ2VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVWdQU0J1WlhjZ1lXVW9NQ2tzSUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWlkVzF3VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNBeExDQjBhR2x6TG01dmNtMWhiRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVibTl5YldGc1RXRndWSGx3WlNBOUlFaHBMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxJRDBnYm1WM0lGZ29NU3dnTVNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUlRZMkZzWlNBOUlERXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3lBOUlEQXNJSFJvYVhNdWNtOTFaMmh1WlhOelRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1dFpYUmhiRzVsYzNOTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1Gc2NHaGhUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NWxiblpOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVZ1ZGsxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklEMGdMams0TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlDSnliM1Z1WkNJc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNBaWNtOTFibVFpTENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ0lURXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdVMVJCVGtSQlVrUTZJQ0lpQ2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTVqYjJ4dmNpNWpiM0I1S0dVdVkyOXNiM0lwTENCMGFHbHpMbkp2ZFdkb2JtVnpjeUE5SUdVdWNtOTFaMmh1WlhOekxDQjBhR2x6TG0xbGRHRnNibVZ6Y3lBOUlHVXViV1YwWVd4dVpYTnpMQ0IwYUdsekxtMWhjQ0E5SUdVdWJXRndMQ0IwYUdsekxteHBaMmgwVFdGd0lEMGdaUzVzYVdkb2RFMWhjQ3dnZEdocGN5NXNhV2RvZEUxaGNFbHVkR1Z1YzJsMGVTQTlJR1V1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtzSUhSb2FYTXVZVzlOWVhBZ1BTQmxMbUZ2VFdGd0xDQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVJRDBnWlM1aGIwMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWxiV2x6YzJsMlpTNWpiM0I1S0dVdVpXMXBjM05wZG1VcExDQjBhR2x6TG1WdGFYTnphWFpsVFdGd0lEMGdaUzVsYldsemMybDJaVTFoY0N3Z2RHaHBjeTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0E5SUdVdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrc0lIUm9hWE11WW5WdGNFMWhjQ0E5SUdVdVluVnRjRTFoY0N3Z2RHaHBjeTVpZFcxd1UyTmhiR1VnUFNCbExtSjFiWEJUWTJGc1pTd2dkR2hwY3k1dWIzSnRZV3hOWVhBZ1BTQmxMbTV2Y20xaGJFMWhjQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1pTNXViM0p0WVd4TllYQlVlWEJsTENCMGFHbHpMbTV2Y20xaGJGTmpZV3hsTG1OdmNIa29aUzV1YjNKdFlXeFRZMkZzWlNrc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFRXRndJRDBnWlM1a2FYTndiR0ZqWlcxbGJuUk5ZWEFzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0JsTG1ScGMzQnNZV05sYldWdWRFSnBZWE1zSUhSb2FYTXVjbTkxWjJodVpYTnpUV0Z3SUQwZ1pTNXliM1ZuYUc1bGMzTk5ZWEFzSUhSb2FYTXViV1YwWVd4dVpYTnpUV0Z3SUQwZ1pTNXRaWFJoYkc1bGMzTk5ZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbVZ1ZGsxaGNDQTlJR1V1Wlc1MlRXRndMQ0IwYUdsekxtVnVkazFoY0VsdWRHVnVjMmwwZVNBOUlHVXVaVzUyVFdGd1NXNTBaVzV6YVhSNUxDQjBhR2x6TG5KbFpuSmhZM1JwYjI1U1lYUnBieUE5SUdVdWNtVm1jbUZqZEdsdmJsSmhkR2x2TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUdVdWQybHlaV1p5WVcxbExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlHVXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9MQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVZqWVhBZ1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WallYQXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnWlM1bWJHRjBVMmhoWkdsdVp5d2dkR2hwY3pzS0lDQWdJSDBLZlRzS2NHOHVjSEp2ZEc5MGVYQmxMbWx6VFdWemFGTjBZVzVrWVhKa1RXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlFTmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QndieUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaR1ZtYVc1bGN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1UxUkJUa1JCVWtRNklDSWlMQW9nSUNBZ0lDQWdJQ0FnSUNCUVNGbFRTVU5CVERvZ0lpSUtJQ0FnSUNBZ0lDQjlMQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphRkJvZVhOcFkyRnNUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVkyeGxZWEpqYjJGMFVtOTFaMmh1WlhOeklEMGdNQ3dnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtTnNaV0Z5WTI5aGRFNXZjbTFoYkZOallXeGxJRDBnYm1WM0lGZ29NU3dnTVNrc0lIUm9hWE11WTJ4bFlYSmpiMkYwVG05eWJXRnNUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXBiM0lnUFNBeExqVXNJRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNoMGFHbHpMQ0FpY21WbWJHVmpkR2wyYVhSNUlpd2dld29nSUNBZ0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzEwS0RJdU5TQXFJQ2gwYUdsekxtbHZjaUF0SURFcElDOGdLSFJvYVhNdWFXOXlJQ3NnTVNrc0lEQXNJREVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSFFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhVzl5SUQwZ0tERWdLeUF1TkNBcUlIUXBJQzhnS0RFZ0xTQXVOQ0FxSUhRcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrc0lIUm9hWE11YzJobFpXNURiMnh2Y2lBOUlHNWxkeUJoWlNnd0tTd2dkR2hwY3k1emFHVmxia052Ykc5eVRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1emFHVmxibEp2ZFdkb2JtVnpjeUE5SURFc0lIUm9hWE11YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxuUnlZVzV6YldsemMybHZiazFoY0NBOUlHNTFiR3dzSUhSb2FYTXVkR2hwWTJ0dVpYTnpJRDBnTUN3Z2RHaHBjeTUwYUdsamEyNWxjM05OWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUYwZEdWdWRXRjBhVzl1UkdsemRHRnVZMlVnUFNBd0xDQjBhR2x6TG1GMGRHVnVkV0YwYVc5dVEyOXNiM0lnUFNCdVpYY2dZV1VvTVN3Z01Td2dNU2tzSUhSb2FYTXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbk53WldOMWJHRnlTVzUwWlc1emFYUjVUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXpjR1ZqZFd4aGNrTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFc0lERXNJREVwTENCMGFHbHpMbk53WldOMWJHRnlRMjlzYjNKTllYQWdQU0J1ZFd4c0xDQjBhR2x6TGw5emFHVmxiaUE5SURBc0lIUm9hWE11WDJOc1pXRnlZMjloZENBOUlEQXNJSFJvYVhNdVgzUnlZVzV6YldsemMybHZiaUE5SURBc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwSUhOb1pXVnVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOXphR1ZsYmpzS0lDQWdJSDBLSUNBZ0lITmxkQ0J6YUdWbGJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjMmhsWlc0Z1BpQXdJQ0U5SUdVZ1BpQXdJQ1ltSUhSb2FYTXVkbVZ5YzJsdmJpc3JMQ0IwYUdsekxsOXphR1ZsYmlBOUlHVTdDaUFnSUNCOUNpQWdJQ0JuWlhRZ1kyeGxZWEpqYjJGMEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5amJHVmhjbU52WVhRN0NpQWdJQ0I5Q2lBZ0lDQnpaWFFnWTJ4bFlYSmpiMkYwS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5amJHVmhjbU52WVhRZ1BpQXdJQ0U5SUdVZ1BpQXdJQ1ltSUhSb2FYTXVkbVZ5YzJsdmJpc3JMQ0IwYUdsekxsOWpiR1ZoY21OdllYUWdQU0JsT3dvZ0lDQWdmUW9nSUNBZ1oyVjBJSFJ5WVc1emJXbHpjMmx2YmlncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmZEhKaGJuTnRhWE56YVc5dU93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhSeVlXNXpiV2x6YzJsdmJpaGxLU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZkSEpoYm5OdGFYTnphVzl1SUQ0Z01DQWhQU0JsSUQ0Z01DQW1KaUIwYUdsekxuWmxjbk5wYjI0ckt5d2dkR2hwY3k1ZmRISmhibk50YVhOemFXOXVJRDBnWlRzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtUmxabWx1WlhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUZOVVFVNUVRVkpFT2lBaUlpd0tJQ0FnSUNBZ0lDQWdJQ0FnVUVoWlUwbERRVXc2SUNJaUNpQWdJQ0FnSUNBZ2ZTd2dkR2hwY3k1amJHVmhjbU52WVhRZ1BTQmxMbU5zWldGeVkyOWhkQ3dnZEdocGN5NWpiR1ZoY21OdllYUk5ZWEFnUFNCbExtTnNaV0Z5WTI5aGRFMWhjQ3dnZEdocGN5NWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTWdQU0JsTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3l3Z2RHaHBjeTVqYkdWaGNtTnZZWFJTYjNWbmFHNWxjM05OWVhBZ1BTQmxMbU5zWldGeVkyOWhkRkp2ZFdkb2JtVnpjMDFoY0N3Z2RHaHBjeTVqYkdWaGNtTnZZWFJPYjNKdFlXeE5ZWEFnUFNCbExtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDd2dkR2hwY3k1amJHVmhjbU52WVhST2IzSnRZV3hUWTJGc1pTNWpiM0I1S0dVdVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVXBMQ0IwYUdsekxtbHZjaUE5SUdVdWFXOXlMQ0IwYUdsekxuTm9aV1Z1SUQwZ1pTNXphR1ZsYml3Z2RHaHBjeTV6YUdWbGJrTnZiRzl5TG1OdmNIa29aUzV6YUdWbGJrTnZiRzl5S1N3Z2RHaHBjeTV6YUdWbGJrTnZiRzl5VFdGd0lEMGdaUzV6YUdWbGJrTnZiRzl5VFdGd0xDQjBhR2x6TG5Ob1pXVnVVbTkxWjJodVpYTnpJRDBnWlM1emFHVmxibEp2ZFdkb2JtVnpjeXdnZEdocGN5NXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQTlJR1V1YzJobFpXNVNiM1ZuYUc1bGMzTk5ZWEFzSUhSb2FYTXVkSEpoYm5OdGFYTnphVzl1SUQwZ1pTNTBjbUZ1YzIxcGMzTnBiMjRzSUhSb2FYTXVkSEpoYm5OdGFYTnphVzl1VFdGd0lEMGdaUzUwY21GdWMyMXBjM05wYjI1TllYQXNJSFJvYVhNdWRHaHBZMnR1WlhOeklEMGdaUzUwYUdsamEyNWxjM01zSUhSb2FYTXVkR2hwWTJ0dVpYTnpUV0Z3SUQwZ1pTNTBhR2xqYTI1bGMzTk5ZWEFzSUhSb2FYTXVZWFIwWlc1MVlYUnBiMjVFYVhOMFlXNWpaU0E5SUdVdVlYUjBaVzUxWVhScGIyNUVhWE4wWVc1alpTd2dkR2hwY3k1aGRIUmxiblZoZEdsdmJrTnZiRzl5TG1OdmNIa29aUzVoZEhSbGJuVmhkR2x2YmtOdmJHOXlLU3dnZEdocGN5NXpjR1ZqZFd4aGNrbHVkR1Z1YzJsMGVTQTlJR1V1YzNCbFkzVnNZWEpKYm5SbGJuTnBkSGtzSUhSb2FYTXVjM0JsWTNWc1lYSkpiblJsYm5OcGRIbE5ZWEFnUFNCbExuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndMQ0IwYUdsekxuTndaV04xYkdGeVEyOXNiM0l1WTI5d2VTaGxMbk53WldOMWJHRnlRMjlzYjNJcExDQjBhR2x6TG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnUFNCbExuTndaV04xYkdGeVEyOXNiM0pOWVhBc0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q2tOaExuQnliM1J2ZEhsd1pTNXBjMDFsYzJoUWFIbHphV05oYkUxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCTVlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1pIUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRXVnphRkJvYjI1blRXRjBaWEpwWVd3aUxDQjBhR2x6TG1OdmJHOXlJRDBnYm1WM0lHRmxLREUyTnpjM01qRTFLU3dnZEdocGN5NXpjR1ZqZFd4aGNpQTlJRzVsZHlCaFpTZ3hNVEU0TkRneEtTd2dkR2hwY3k1emFHbHVhVzVsYzNNZ1BTQXpNQ3dnZEdocGN5NXRZWEFnUFNCdWRXeHNMQ0IwYUdsekxteHBaMmgwVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WVc5TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1GdlRXRndTVzUwWlc1emFYUjVJRDBnTVN3Z2RHaHBjeTVsYldsemMybDJaU0E5SUc1bGR5QmhaU2d3S1N3Z2RHaHBjeTVsYldsemMybDJaVWx1ZEdWdWMybDBlU0E5SURFc0lIUm9hWE11WlcxcGMzTnBkbVZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlERXNJSFJvYVhNdWJtOXliV0ZzVFdGd0lEMGdiblZzYkN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdTR2tzSUhSb2FYTXVibTl5YldGc1UyTmhiR1VnUFNCdVpYY2dXQ2d4TENBeEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRk5qWVd4bElEMGdNU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJDYVdGeklEMGdNQ3dnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVZ1ZGsxaGNDQTlJRzUxYkd3c0lIUm9hWE11WTI5dFltbHVaU0E5SUZaekxDQjBhR2x6TG5KbFpteGxZM1JwZG1sMGVTQTlJREVzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklEMGdMams0TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlDSnliM1Z1WkNJc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNBaWNtOTFibVFpTENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ0lURXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTV6Y0dWamRXeGhjaTVqYjNCNUtHVXVjM0JsWTNWc1lYSXBMQ0IwYUdsekxuTm9hVzVwYm1WemN5QTlJR1V1YzJocGJtbHVaWE56TENCMGFHbHpMbTFoY0NBOUlHVXViV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndJRDBnWlM1c2FXZG9kRTFoY0N3Z2RHaHBjeTVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrc0lIUm9hWE11WVc5TllYQWdQU0JsTG1GdlRXRndMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWhiMDFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVsYldsemMybDJaUzVqYjNCNUtHVXVaVzFwYzNOcGRtVXBMQ0IwYUdsekxtVnRhWE56YVhabFRXRndJRDBnWlM1bGJXbHpjMmwyWlUxaGNDd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlHVXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa3NJSFJvYVhNdVluVnRjRTFoY0NBOUlHVXVZblZ0Y0UxaGNDd2dkR2hwY3k1aWRXMXdVMk5oYkdVZ1BTQmxMbUoxYlhCVFkyRnNaU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0JsTG01dmNtMWhiRTFoY0N3Z2RHaHBjeTV1YjNKdFlXeE5ZWEJVZVhCbElEMGdaUzV1YjNKdFlXeE5ZWEJVZVhCbExDQjBhR2x6TG01dmNtMWhiRk5qWVd4bExtTnZjSGtvWlM1dWIzSnRZV3hUWTJGc1pTa3NJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ1pTNWthWE53YkdGalpXMWxiblJOWVhBc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bExDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRFSnBZWE1nUFNCbExtUnBjM0JzWVdObGJXVnVkRUpwWVhNc0lIUm9hWE11YzNCbFkzVnNZWEpOWVhBZ1BTQmxMbk53WldOMWJHRnlUV0Z3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnWlM1aGJIQm9ZVTFoY0N3Z2RHaHBjeTVsYm5aTllYQWdQU0JsTG1WdWRrMWhjQ3dnZEdocGN5NWpiMjFpYVc1bElEMGdaUzVqYjIxaWFXNWxMQ0IwYUdsekxuSmxabXhsWTNScGRtbDBlU0E5SUdVdWNtVm1iR1ZqZEdsMmFYUjVMQ0IwYUdsekxuSmxabkpoWTNScGIyNVNZWFJwYnlBOUlHVXVjbVZtY21GamRHbHZibEpoZEdsdkxDQjBhR2x6TG5kcGNtVm1jbUZ0WlNBOUlHVXVkMmx5WldaeVlXMWxMQ0IwYUdsekxuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpYZHBaSFJvTENCMGFHbHpMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldwdmFXNGdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVnFiMmx1TENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ1pTNW1iR0YwVTJoaFpHbHVaeXdnZEdocGN6c0tJQ0FnSUgwS2ZUc0tUR0V1Y0hKdmRHOTBlWEJsTG1selRXVnphRkJvYjI1blRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlGSmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaR1ZtYVc1bGN5QTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1ZFOVBUam9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG5SNWNHVWdQU0FpVFdWemFGUnZiMjVOWVhSbGNtbGhiQ0lzSUhSb2FYTXVZMjlzYjNJZ1BTQnVaWGNnWVdVb01UWTNOemN5TVRVcExDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11WjNKaFpHbGxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbXhwWjJoMFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVlXOU5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ01Td2dkR2hwY3k1bGJXbHpjMmwyWlNBOUlHNWxkeUJoWlNnd0tTd2dkR2hwY3k1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlERXNJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1KMWJYQk5ZWEFnUFNCdWRXeHNMQ0IwYUdsekxtSjFiWEJUWTJGc1pTQTlJREVzSUhSb2FYTXVibTl5YldGc1RXRndJRDBnYm5Wc2JDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnU0drc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVZ1BTQnVaWGNnV0NneExDQXhLU3dnZEdocGN5NWthWE53YkdGalpXMWxiblJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxJRDBnTVN3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJRDBnTUN3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdJVEVzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnTVN3Z2RHaHBjeTUzYVhKbFpuSmhiV1ZNYVc1bFkyRndJRDBnSW5KdmRXNWtJaXdnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJQ0p5YjNWdVpDSXNJSFJvYVhNdWMyVjBWbUZzZFdWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11WTI5c2IzSXVZMjl3ZVNobExtTnZiRzl5S1N3Z2RHaHBjeTV0WVhBZ1BTQmxMbTFoY0N3Z2RHaHBjeTVuY21Ga2FXVnVkRTFoY0NBOUlHVXVaM0poWkdsbGJuUk5ZWEFzSUhSb2FYTXViR2xuYUhSTllYQWdQU0JsTG14cFoyaDBUV0Z3TENCMGFHbHpMbXhwWjJoMFRXRndTVzUwWlc1emFYUjVJRDBnWlM1c2FXZG9kRTFoY0VsdWRHVnVjMmwwZVN3Z2RHaHBjeTVoYjAxaGNDQTlJR1V1WVc5TllYQXNJSFJvYVhNdVlXOU5ZWEJKYm5SbGJuTnBkSGtnUFNCbExtRnZUV0Z3U1c1MFpXNXphWFI1TENCMGFHbHpMbVZ0YVhOemFYWmxMbU52Y0hrb1pTNWxiV2x6YzJsMlpTa3NJSFJvYVhNdVpXMXBjM05wZG1WTllYQWdQU0JsTG1WdGFYTnphWFpsVFdGd0xDQjBhR2x6TG1WdGFYTnphWFpsU1c1MFpXNXphWFI1SUQwZ1pTNWxiV2x6YzJsMlpVbHVkR1Z1YzJsMGVTd2dkR2hwY3k1aWRXMXdUV0Z3SUQwZ1pTNWlkVzF3VFdGd0xDQjBhR2x6TG1KMWJYQlRZMkZzWlNBOUlHVXVZblZ0Y0ZOallXeGxMQ0IwYUdsekxtNXZjbTFoYkUxaGNDQTlJR1V1Ym05eWJXRnNUV0Z3TENCMGFHbHpMbTV2Y20xaGJFMWhjRlI1Y0dVZ1BTQmxMbTV2Y20xaGJFMWhjRlI1Y0dVc0lIUm9hWE11Ym05eWJXRnNVMk5oYkdVdVkyOXdlU2hsTG01dmNtMWhiRk5qWVd4bEtTd2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUk5ZWEFnUFNCbExtUnBjM0JzWVdObGJXVnVkRTFoY0N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5SVFkyRnNaU0E5SUdVdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVc0lIUm9hWE11WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeUE5SUdVdVpHbHpjR3hoWTJWdFpXNTBRbWxoY3l3Z2RHaHBjeTVoYkhCb1lVMWhjQ0E5SUdVdVlXeHdhR0ZOWVhBc0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDbEpoTG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhVYjI5dVRXRjBaWEpwWVd3Z1BTQWhNRHNLZG1GeUlGQmhJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmtkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vVG05eWJXRnNUV0YwWlhKcFlXd2lMQ0IwYUdsekxtSjFiWEJOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbUoxYlhCVFkyRnNaU0E5SURFc0lIUm9hWE11Ym05eWJXRnNUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXViM0p0WVd4TllYQlVlWEJsSUQwZ1NHa3NJSFJvYVhNdWJtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dDZ3hMQ0F4S1N3Z2RHaHBjeTVrYVhOd2JHRmpaVzFsYm5STllYQWdQU0J1ZFd4c0xDQjBhR2x6TG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUQwZ01Td2dkR2hwY3k1a2FYTndiR0ZqWlcxbGJuUkNhV0Z6SUQwZ01Dd2dkR2hwY3k1M2FYSmxabkpoYldVZ1BTQWhNU3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsZDJsa2RHZ2dQU0F4TENCMGFHbHpMbVp2WnlBOUlDRXhMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnSVRFc0lIUm9hWE11YzJWMFZtRnNkV1Z6S0dVcE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJR1V1WW5WdGNFMWhjQ3dnZEdocGN5NWlkVzF3VTJOaGJHVWdQU0JsTG1KMWJYQlRZMkZzWlN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCbExtNXZjbTFoYkUxaGNDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnWlM1dWIzSnRZV3hOWVhCVWVYQmxMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxMbU52Y0hrb1pTNXViM0p0WVd4VFkyRnNaU2tzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdaUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJSFJvYVhNdWQybHlaV1p5WVcxbElEMGdaUzUzYVhKbFpuSmhiV1VzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WlhkcFpIUm9JRDBnWlM1M2FYSmxabkpoYldWTWFXNWxkMmxrZEdnc0lIUm9hWE11Wm14aGRGTm9ZV1JwYm1jZ1BTQmxMbVpzWVhSVGFHRmthVzVuTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BRWVM1d2NtOTBiM1I1Y0dVdWFYTk5aWE5vVG05eWJXRnNUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRWxoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pOWlhOb1RHRnRZbVZ5ZEUxaGRHVnlhV0ZzSWl3Z2RHaHBjeTVqYjJ4dmNpQTlJRzVsZHlCaFpTZ3hOamMzTnpJeE5Ta3NJSFJvYVhNdWJXRndJRDBnYm5Wc2JDd2dkR2hwY3k1c2FXZG9kRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXViR2xuYUhSTllYQkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbUZ2VFdGd0lEMGdiblZzYkN3Z2RHaHBjeTVoYjAxaGNFbHVkR1Z1YzJsMGVTQTlJREVzSUhSb2FYTXVaVzFwYzNOcGRtVWdQU0J1WlhjZ1lXVW9NQ2tzSUhSb2FYTXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa2dQU0F4TENCMGFHbHpMbVZ0YVhOemFYWmxUV0Z3SUQwZ2JuVnNiQ3dnZEdocGN5NXpjR1ZqZFd4aGNrMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQnVkV3hzTENCMGFHbHpMbVZ1ZGsxaGNDQTlJRzUxYkd3c0lIUm9hWE11WTI5dFltbHVaU0E5SUZaekxDQjBhR2x6TG5KbFpteGxZM1JwZG1sMGVTQTlJREVzSUhSb2FYTXVjbVZtY21GamRHbHZibEpoZEdsdklEMGdMams0TENCMGFHbHpMbmRwY21WbWNtRnRaU0E5SUNFeExDQjBhR2x6TG5kcGNtVm1jbUZ0WlV4cGJtVjNhV1IwYUNBOUlERXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaV05oY0NBOUlDSnliM1Z1WkNJc0lIUm9hWE11ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRnUFNBaWNtOTFibVFpTENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtTnZiRzl5TG1OdmNIa29aUzVqYjJ4dmNpa3NJSFJvYVhNdWJXRndJRDBnWlM1dFlYQXNJSFJvYVhNdWJHbG5hSFJOWVhBZ1BTQmxMbXhwWjJoMFRXRndMQ0IwYUdsekxteHBaMmgwVFdGd1NXNTBaVzV6YVhSNUlEMGdaUzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU3dnZEdocGN5NWhiMDFoY0NBOUlHVXVZVzlOWVhBc0lIUm9hWE11WVc5TllYQkpiblJsYm5OcGRIa2dQU0JsTG1GdlRXRndTVzUwWlc1emFYUjVMQ0IwYUdsekxtVnRhWE56YVhabExtTnZjSGtvWlM1bGJXbHpjMmwyWlNrc0lIUm9hWE11WlcxcGMzTnBkbVZOWVhBZ1BTQmxMbVZ0YVhOemFYWmxUV0Z3TENCMGFHbHpMbVZ0YVhOemFYWmxTVzUwWlc1emFYUjVJRDBnWlM1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVN3Z2RHaHBjeTV6Y0dWamRXeGhjazFoY0NBOUlHVXVjM0JsWTNWc1lYSk5ZWEFzSUhSb2FYTXVZV3h3YUdGTllYQWdQU0JsTG1Gc2NHaGhUV0Z3TENCMGFHbHpMbVZ1ZGsxaGNDQTlJR1V1Wlc1MlRXRndMQ0IwYUdsekxtTnZiV0pwYm1VZ1BTQmxMbU52YldKcGJtVXNJSFJvYVhNdWNtVm1iR1ZqZEdsMmFYUjVJRDBnWlM1eVpXWnNaV04wYVhacGRIa3NJSFJvYVhNdWNtVm1jbUZqZEdsdmJsSmhkR2x2SUQwZ1pTNXlaV1p5WVdOMGFXOXVVbUYwYVc4c0lIUm9hWE11ZDJseVpXWnlZVzFsSUQwZ1pTNTNhWEpsWm5KaGJXVXNJSFJvYVhNdWQybHlaV1p5WVcxbFRHbHVaWGRwWkhSb0lEMGdaUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dzSUhSb2FYTXVkMmx5WldaeVlXMWxUR2x1WldOaGNDQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ3dnZEdocGN5NTNhWEpsWm5KaGJXVk1hVzVsYW05cGJpQTlJR1V1ZDJseVpXWnlZVzFsVEdsdVpXcHZhVzRzSUhSb2FYTTdDaUFnSUNCOUNuMDdDa2xoTG5CeWIzUnZkSGx3WlM1cGMwMWxjMmhNWVcxaVpYSjBUV0YwWlhKcFlXd2dQU0FoTURzS2RtRnlJRVJoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJrZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11WkdWbWFXNWxjeUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdUVUZVUTBGUU9pQWlJZ29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVkSGx3WlNBOUlDSk5aWE5vVFdGMFkyRndUV0YwWlhKcFlXd2lMQ0IwYUdsekxtTnZiRzl5SUQwZ2JtVjNJR0ZsS0RFMk56YzNNakUxS1N3Z2RHaHBjeTV0WVhSallYQWdQU0J1ZFd4c0xDQjBhR2x6TG0xaGNDQTlJRzUxYkd3c0lIUm9hWE11WW5WdGNFMWhjQ0E5SUc1MWJHd3NJSFJvYVhNdVluVnRjRk5qWVd4bElEMGdNU3dnZEdocGN5NXViM0p0WVd4TllYQWdQU0J1ZFd4c0xDQjBhR2x6TG01dmNtMWhiRTFoY0ZSNWNHVWdQU0JJYVN3Z2RHaHBjeTV1YjNKdFlXeFRZMkZzWlNBOUlHNWxkeUJZS0RFc0lERXBMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRTFoY0NBOUlHNTFiR3dzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVTJOaGJHVWdQU0F4TENCMGFHbHpMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTWdQU0F3TENCMGFHbHpMbUZzY0doaFRXRndJRDBnYm5Wc2JDd2dkR2hwY3k1bWJHRjBVMmhoWkdsdVp5QTlJQ0V4TENCMGFHbHpMbk5sZEZaaGJIVmxjeWhsS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxtUmxabWx1WlhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUUxQlZFTkJVRG9nSWlJS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1OdmJHOXlMbU52Y0hrb1pTNWpiMnh2Y2lrc0lIUm9hWE11YldGMFkyRndJRDBnWlM1dFlYUmpZWEFzSUhSb2FYTXViV0Z3SUQwZ1pTNXRZWEFzSUhSb2FYTXVZblZ0Y0UxaGNDQTlJR1V1WW5WdGNFMWhjQ3dnZEdocGN5NWlkVzF3VTJOaGJHVWdQU0JsTG1KMWJYQlRZMkZzWlN3Z2RHaHBjeTV1YjNKdFlXeE5ZWEFnUFNCbExtNXZjbTFoYkUxaGNDd2dkR2hwY3k1dWIzSnRZV3hOWVhCVWVYQmxJRDBnWlM1dWIzSnRZV3hOWVhCVWVYQmxMQ0IwYUdsekxtNXZjbTFoYkZOallXeGxMbU52Y0hrb1pTNXViM0p0WVd4VFkyRnNaU2tzSUhSb2FYTXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lEMGdaUzVrYVhOd2JHRmpaVzFsYm5STllYQXNJSFJvYVhNdVpHbHpjR3hoWTJWdFpXNTBVMk5oYkdVZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEZOallXeGxMQ0IwYUdsekxtUnBjM0JzWVdObGJXVnVkRUpwWVhNZ1BTQmxMbVJwYzNCc1lXTmxiV1Z1ZEVKcFlYTXNJSFJvYVhNdVlXeHdhR0ZOWVhBZ1BTQmxMbUZzY0doaFRXRndMQ0IwYUdsekxtWnNZWFJUYUdGa2FXNW5JRDBnWlM1bWJHRjBVMmhoWkdsdVp5d2dkR2hwY3pzS0lDQWdJSDBLZlRzS1JHRXVjSEp2ZEc5MGVYQmxMbWx6VFdWemFFMWhkR05oY0UxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCR1lTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1puUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9LVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVRHbHVaVVJoYzJobFpFMWhkR1Z5YVdGc0lpd2dkR2hwY3k1elkyRnNaU0E5SURFc0lIUm9hWE11WkdGemFGTnBlbVVnUFNBekxDQjBhR2x6TG1kaGNGTnBlbVVnUFNBeExDQjBhR2x6TG5ObGRGWmhiSFZsY3lobEtUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnpkWEJsY2k1amIzQjVLR1VwTENCMGFHbHpMbk5qWVd4bElEMGdaUzV6WTJGc1pTd2dkR2hwY3k1a1lYTm9VMmw2WlNBOUlHVXVaR0Z6YUZOcGVtVXNJSFJvYVhNdVoyRndVMmw2WlNBOUlHVXVaMkZ3VTJsNlpTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1JtRXVjSEp2ZEc5MGVYQmxMbWx6VEdsdVpVUmhjMmhsWkUxaGRHVnlhV0ZzSUQwZ0lUQTdDblpoY2lCemVTQTlJRTlpYW1WamRDNW1jbVZsZW1Vb2V3b2dJQ0FnWDE5d2NtOTBiMTlmT2lCdWRXeHNMQW9nSUNBZ1UyaGhaRzkzVFdGMFpYSnBZV3c2SUVGaExBb2dJQ0FnVTNCeWFYUmxUV0YwWlhKcFlXdzZJR2x2TEFvZ0lDQWdVbUYzVTJoaFpHVnlUV0YwWlhKcFlXdzZJRWRwTEFvZ0lDQWdVMmhoWkdWeVRXRjBaWEpwWVd3NklITnVMQW9nSUNBZ1VHOXBiblJ6VFdGMFpYSnBZV3c2SUdwdUxBb2dJQ0FnVFdWemFGQm9lWE5wWTJGc1RXRjBaWEpwWVd3NklFTmhMQW9nSUNBZ1RXVnphRk4wWVc1a1lYSmtUV0YwWlhKcFlXdzZJSEJ2TEFvZ0lDQWdUV1Z6YUZCb2IyNW5UV0YwWlhKcFlXdzZJRXhoTEFvZ0lDQWdUV1Z6YUZSdmIyNU5ZWFJsY21saGJEb2dVbUVzQ2lBZ0lDQk5aWE5vVG05eWJXRnNUV0YwWlhKcFlXdzZJRkJoTEFvZ0lDQWdUV1Z6YUV4aGJXSmxjblJOWVhSbGNtbGhiRG9nU1dFc0NpQWdJQ0JOWlhOb1JHVndkR2hOWVhSbGNtbGhiRG9nWlc4c0NpQWdJQ0JOWlhOb1JHbHpkR0Z1WTJWTllYUmxjbWxoYkRvZ2RHOHNDaUFnSUNCTlpYTm9RbUZ6YVdOTllYUmxjbWxoYkRvZ2FHNHNDaUFnSUNCTlpYTm9UV0YwWTJGd1RXRjBaWEpwWVd3NklFUmhMQW9nSUNBZ1RHbHVaVVJoYzJobFpFMWhkR1Z5YVdGc09pQkdZU3dLSUNBZ0lFeHBibVZDWVhOcFkwMWhkR1Z5YVdGc09pQm1kQ3dLSUNBZ0lFMWhkR1Z5YVdGc09pQmtkQXA5S1N3Z1dtVWdQU0I3Q2lBZ0lDQmhjbkpoZVZOc2FXTmxPaUJtZFc1amRHbHZiaWh6TENCbExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRnBsTG1selZIbHdaV1JCY25KaGVTaHpLU0EvSUc1bGR5QnpMbU52Ym5OMGNuVmpkRzl5S0hNdWMzVmlZWEp5WVhrb1pTd2dkQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z2RDQTZJSE11YkdWdVozUm9LU2tnT2lCekxuTnNhV05sS0dVc0lIUXBPd29nSUNBZ2ZTd0tJQ0FnSUdOdmJuWmxjblJCY25KaGVUb2dablZ1WTNScGIyNG9jeXdnWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQWhjeUI4ZkNBaGRDQW1KaUJ6TG1OdmJuTjBjblZqZEc5eUlEMDlQU0JsSUQ4Z2N5QTZJSFI1Y0dWdlppQmxMa0paVkVWVFgxQkZVbDlGVEVWTlJVNVVJRDA5SUNKdWRXMWlaWElpSUQ4Z2JtVjNJR1VvY3lrZ09pQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWMyeHBZMlV1WTJGc2JDaHpLVHNLSUNBZ0lIMHNDaUFnSUNCcGMxUjVjR1ZrUVhKeVlYazZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnUVhKeVlYbENkV1ptWlhJdWFYTldhV1YzS0hNcElDWW1JQ0VvY3lCcGJuTjBZVzVqWlc5bUlFUmhkR0ZXYVdWM0tUc0tJQ0FnSUgwc0NpQWdJQ0JuWlhSTFpYbG1jbUZ0WlU5eVpHVnlPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1pTaHBMQ0J5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnpXMmxkSUMwZ2MxdHlYVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6TG14bGJtZDBhQ3dnYmlBOUlHNWxkeUJCY25KaGVTaDBLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd095QnBJQ0U5UFNCME95QXJLMmtwYmx0cFhTQTlJR2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzR1YzI5eWRDaGxLU3dnYmpzS0lDQWdJSDBzQ2lBZ0lDQnpiM0owWldSQmNuSmhlVG9nWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnY3k1c1pXNW5kR2dzSUdrZ1BTQnVaWGNnY3k1amIyNXpkSEoxWTNSdmNpaHVLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSElnUFNBd0xDQnZJRDBnTURzZ2J5QWhQVDBnYmpzZ0t5dHlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCMFczSmRJQ29nWlRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQnNJRDBnTURzZ2JDQWhQVDBnWlRzZ0t5dHNLV2xiYnlzclhTQTlJSE5iWVNBcklHeGRPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhVHNLSUNBZ0lIMHNDaUFnSUNCbWJHRjBkR1Z1U2xOUFRqb2dablZ1WTNScGIyNG9jeXdnWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnTVN3Z2NpQTlJSE5iTUYwN0NpQWdJQ0FnSUNBZ1ptOXlLRHNnY2lBaFBUMGdkbTlwWkNBd0lDWW1JSEpiYmwwZ1BUMDlJSFp2YVdRZ01Ec3BjaUE5SUhOYmFTc3JYVHNLSUNBZ0lDQWdJQ0JwWmlBb2NpQTlQVDBnZG05cFpDQXdLU0J5WlhSMWNtNDdDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQnlXMjVkT3dvZ0lDQWdJQ0FnSUdsbUlDaHZJQ0U5UFNCMmIybGtJREFwSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0c4cEtTQmtieUJ2SUQwZ2NsdHVYU3dnYnlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hsTG5CMWMyZ29jaTUwYVcxbEtTd2dkQzV3ZFhOb0xtRndjR3g1S0hRc0lHOHBLU3dnY2lBOUlITmJhU3NyWFRzS0lDQWdJQ0FnSUNCM2FHbHNaU0FvY2lBaFBUMGdkbTlwWkNBd0tRb2dJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHOHVkRzlCY25KaGVTQWhQVDBnZG05cFpDQXdLU0JrYnlCdklEMGdjbHR1WFN3Z2J5QWhQVDBnZG05cFpDQXdJQ1ltSUNobExuQjFjMmdvY2k1MGFXMWxLU3dnYnk1MGIwRnljbUY1S0hRc0lIUXViR1Z1WjNSb0tTa3NJSElnUFNCelcya3JLMTA3Q2lBZ0lDQWdJQ0FnZDJocGJHVWdLSElnSVQwOUlIWnZhV1FnTUNrS0lDQWdJQ0FnSUNCbGJITmxJR1J2SUc4Z1BTQnlXMjVkTENCdklDRTlQU0IyYjJsa0lEQWdKaVlnS0dVdWNIVnphQ2h5TG5ScGJXVXBMQ0IwTG5CMWMyZ29ieWtwTENCeUlEMGdjMXRwS3l0ZE93b2dJQ0FnSUNBZ0lIZG9hV3hsSUNoeUlDRTlQU0IyYjJsa0lEQXBDaUFnSUNCOUxBb2dJQ0FnYzNWaVkyeHBjRG9nWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ3dnYml3Z2FTQTlJRE13S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCekxtTnNiMjVsS0NrN0NpQWdJQ0FnSUNBZ2NpNXVZVzFsSUQwZ1pUc0tJQ0FnSUNBZ0lDQnNaWFFnYnlBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiQ0E5SURBN0lHd2dQQ0J5TG5SeVlXTnJjeTVzWlc1bmRHZzdJQ3NyYkNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdjaTUwY21GamEzTmJiRjBzSUdnZ1BTQmpMbWRsZEZaaGJIVmxVMmw2WlNncExDQjFJRDBnVzEwc0lHUWdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm1JRDBnTURzZ1ppQThJR011ZEdsdFpYTXViR1Z1WjNSb095QXJLMllwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JqTG5ScGJXVnpXMlpkSUNvZ2FUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doS0cwZ1BDQjBJSHg4SUcwZ1BqMGdiaWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFMbkIxYzJnb1l5NTBhVzFsYzF0bVhTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0I0SUQwZ01Ec2dlQ0E4SUdnN0lDc3JlQ2xrTG5CMWMyZ29ZeTUyWVd4MVpYTmJaaUFxSUdnZ0t5QjRYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZFM1c1pXNW5kR2dnSVQwOUlEQWdKaVlnS0dNdWRHbHRaWE1nUFNCYVpTNWpiMjUyWlhKMFFYSnlZWGtvZFN3Z1l5NTBhVzFsY3k1amIyNXpkSEoxWTNSdmNpa3NJR011ZG1Gc2RXVnpJRDBnV21VdVkyOXVkbVZ5ZEVGeWNtRjVLR1FzSUdNdWRtRnNkV1Z6TG1OdmJuTjBjblZqZEc5eUtTd2dieTV3ZFhOb0tHTXBLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY2k1MGNtRmphM01nUFNCdk93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ01TQXZJREE3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzTVNBOUlEQTdJR3d4SUR3Z2NpNTBjbUZqYTNNdWJHVnVaM1JvT3lBcksyd3hLV0VnUGlCeUxuUnlZV05yYzF0c01WMHVkR2x0WlhOYk1GMGdKaVlnS0dFZ1BTQnlMblJ5WVdOcmMxdHNNVjB1ZEdsdFpYTmJNRjBwT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkRJZ1BTQXdPeUJzTWlBOElISXVkSEpoWTJ0ekxteGxibWQwYURzZ0t5dHNNaWx5TG5SeVlXTnJjMXRzTWwwdWMyaHBablFvTFRFZ0tpQmhLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjaTV5WlhObGRFUjFjbUYwYVc5dUtDa3NJSEk3Q2lBZ0lDQjlMQW9nSUNBZ2JXRnJaVU5zYVhCQlpHUnBkR2wyWlRvZ1puVnVZM1JwYjI0b2N5d2daU0E5SURBc0lIUWdQU0J6TENCdUlEMGdNekFwSUhzS0lDQWdJQ0FnSUNCdUlEdzlJREFnSmlZZ0tHNGdQU0F6TUNrN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMExuUnlZV05yY3k1c1pXNW5kR2dzSUhJZ1BTQmxJQzhnYmpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdPeUJ2SUR3Z2FUc2dLeXR2S1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQjBMblJ5WVdOcmMxdHZYU3dnYkNBOUlHRXVWbUZzZFdWVWVYQmxUbUZ0WlRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d3Z1BUMDlJQ0ppYjI5c0lpQjhmQ0JzSUQwOVBTQWljM1J5YVc1bklpa2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnY3k1MGNtRmphM011Wm1sdVpDaG1kVzVqZEdsdmJpaG5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaeTV1WVcxbElEMDlQU0JoTG01aGJXVWdKaVlnWnk1V1lXeDFaVlI1Y0dWT1lXMWxJRDA5UFNCc093b2dJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dNZ1BUMDlJSFp2YVdRZ01Da2dZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnTUN3Z2RTQTlJR0V1WjJWMFZtRnNkV1ZUYVhwbEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdFdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5RdWFYTkpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSSFRGUkdRM1ZpYVdOVGNHeHBibVVnSmlZZ0tHZ2dQU0IxSUM4Z015azdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnTUN3Z1ppQTlJR011WjJWMFZtRnNkV1ZUYVhwbEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUdNdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5RdWFYTkpiblJsY25CdmJHRnVkRVpoWTNSdmNubE5aWFJvYjJSSFRGUkdRM1ZpYVdOVGNHeHBibVVnSmlZZ0tHUWdQU0JtSUM4Z015azdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnRJRDBnWVM1MGFXMWxjeTVzWlc1bmRHZ2dMU0F4TENCNE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NpQThQU0JoTG5ScGJXVnpXekJkS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaeUE5SUdnc0lIQWdQU0IxSUMwZ2FEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dQU0JhWlM1aGNuSmhlVk5zYVdObEtHRXVkbUZzZFdWekxDQm5MQ0J3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h5SUQ0OUlHRXVkR2x0WlhOYmJWMHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbk1TQTlJRzBnS2lCMUlDc2dhQ3dnY0RFZ1BTQm5NU0FySUhVZ0xTQm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0E5SUZwbExtRnljbUY1VTJ4cFkyVW9ZUzUyWVd4MVpYTXNJR2N4TENCd01TazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1p6SWdQU0JoTG1OeVpXRjBaVWx1ZEdWeWNHOXNZVzUwS0Nrc0lIQXlJRDBnYUN3Z1h5QTlJSFVnTFNCb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1p6SXVaWFpoYkhWaGRHVW9jaWtzSUhnZ1BTQmFaUzVoY25KaGVWTnNhV05sS0djeUxuSmxjM1ZzZEVKMVptWmxjaXdnY0RJc0lGOHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3dnUFQwOUlDSnhkV0YwWlhKdWFXOXVJaUFtSmlCdVpYY2daM1FvS1M1bWNtOXRRWEp5WVhrb2VDa3VibTl5YldGc2FYcGxLQ2t1WTI5dWFuVm5ZWFJsS0NrdWRHOUJjbkpoZVNoNEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JqTG5ScGJXVnpMbXhsYm1kMGFEc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JuTXlBOUlEQTdJR2N6SUR3Z2Rqc2dLeXRuTXlsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjRE1nUFNCbk15QXFJR1lnS3lCa093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dnUFQwOUlDSnhkV0YwWlhKdWFXOXVJaWtnWjNRdWJYVnNkR2x3YkhsUmRXRjBaWEp1YVc5dWMwWnNZWFFvWXk1MllXeDFaWE1zSUhBekxDQjRMQ0F3TENCakxuWmhiSFZsY3l3Z2NETXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUY4eElEMGdaaUF0SUdRZ0tpQXlPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVNBOUlEQTdJSGtnUENCZk1Uc2dLeXQ1S1dNdWRtRnNkV1Z6VzNBeklDc2dlVjBnTFQwZ2VGdDVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2N5NWliR1Z1WkUxdlpHVWdQU0J4WXl3Z2N6c0tJQ0FnSUgwS2ZTd2dZMjRnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbkJoY21GdFpYUmxjbEJ2YzJsMGFXOXVjeUE5SUdVc0lIUm9hWE11WDJOaFkyaGxaRWx1WkdWNElEMGdNQ3dnZEdocGN5NXlaWE4xYkhSQ2RXWm1aWElnUFNCcElDRTlQU0IyYjJsa0lEQWdQeUJwSURvZ2JtVjNJSFF1WTI5dWMzUnlkV04wYjNJb2Jpa3NJSFJvYVhNdWMyRnRjR3hsVm1Gc2RXVnpJRDBnZEN3Z2RHaHBjeTUyWVd4MVpWTnBlbVVnUFNCdUxDQjBhR2x6TG5ObGRIUnBibWR6SUQwZ2JuVnNiQ3dnZEdocGN5NUVaV1poZFd4MFUyVjBkR2x1WjNOZklEMGdlMzA3Q2lBZ0lDQjlDaUFnSUNCbGRtRnNkV0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1Y3l3Z2JpQTlJSFJvYVhNdVgyTmhZMmhsWkVsdVpHVjRMQ0JwSUQwZ2RGdHVYU3dnY2lBOUlIUmJiaUF0SURGZE93b2dJQ0FnSUNBZ0lHVTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2REb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc4N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdU9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVRvZ2FXWWdLQ0VvWlNBOElHa3BLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdZU0E5SUc0Z0t5QXlPenNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2tnUFQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGxJRHdnY2lrZ1luSmxZV3NnYVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaUE5SUhRdWJHVnVaM1JvTENCMGFHbHpMbDlqWVdOb1pXUkpibVJsZUNBOUlHNHNJSFJvYVhNdVlXWjBaWEpGYm1SZktHNGdMU0F4TENCbExDQnlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1SUQwOVBTQmhLU0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoeUlEMGdhU3dnYVNBOUlIUmJLeXR1WFN3Z1pTQThJR2twSUdKeVpXRnJJSFE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUhRdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF5QnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVNobElENDlJSElwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmhNU0E5SUhSYk1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVWdQQ0JoTVNBbUppQW9iaUE5SURJc0lISWdQU0JoTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYkNBOUlHNGdMU0F5T3pzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hJZ1BUMDlJSFp2YVdRZ01Da2djbVYwZFhKdUlIUm9hWE11WDJOaFkyaGxaRWx1WkdWNElEMGdNQ3dnZEdocGN5NWlaV1p2Y21WVGRHRnlkRjhvTUN3Z1pTd2dhU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iaUE5UFQwZ2JDa2dZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOUlISXNJSElnUFNCMFd5MHRiaUF0SURGZExDQmxJRDQ5SUhJcElHSnlaV0ZySUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNHNJRzRnUFNBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhheUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF5QmxPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0RzZ2JpQThJRzg3S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVRJZ1BTQnVJQ3NnYnlBK1BqNGdNVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbElEd2dkRnRoTWwwZ1B5QnZJRDBnWVRJZ09pQnVJRDBnWVRJZ0t5QXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0drZ1BTQjBXMjVkTENCeUlEMGdkRnR1SUMwZ01WMHNJSElnUFQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUhSb2FYTXVYMk5oWTJobFpFbHVaR1Y0SUQwZ01Dd2dkR2hwY3k1aVpXWnZjbVZUZEdGeWRGOG9NQ3dnWlN3Z2FTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBOVBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2JpQTlJSFF1YkdWdVozUm9MQ0IwYUdsekxsOWpZV05vWldSSmJtUmxlQ0E5SUc0c0lIUm9hWE11WVdaMFpYSkZibVJmS0c0Z0xTQXhMQ0J5TENCbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5allXTm9aV1JKYm1SbGVDQTlJRzRzSUhSb2FYTXVhVzUwWlhKMllXeERhR0Z1WjJWa1h5aHVMQ0J5TENCcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YVc1MFpYSndiMnhoZEdWZktHNHNJSElzSUdVc0lHa3BPd29nSUNBZ2ZRb2dJQ0FnWjJWMFUyVjBkR2x1WjNOZktDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRIUnBibWR6SUh4OElIUm9hWE11UkdWbVlYVnNkRk5sZEhScGJtZHpYenNLSUNBZ0lIMEtJQ0FnSUdOdmNIbFRZVzF3YkdWV1lXeDFaVjhvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTV5WlhOMWJIUkNkV1ptWlhJc0lHNGdQU0IwYUdsekxuTmhiWEJzWlZaaGJIVmxjeXdnYVNBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCeUlEMGdaU0FxSUdrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdklEMGdNRHNnYnlBaFBUMGdhVHNnS3l0dktYUmJiMTBnUFNCdVczSWdLeUJ2WFRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5Y0c5c1lYUmxYeWdwSUhzS0lDQWdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSW1OaGJHd2dkRzhnWVdKemRISmhZM1FnYldWMGFHOWtJaWs3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjblpoYkVOb1lXNW5aV1JmS0NrZ2UzMEtmVHNLWTI0dWNISnZkRzkwZVhCbExtSmxabTl5WlZOMFlYSjBYeUE5SUdOdUxuQnliM1J2ZEhsd1pTNWpiM0I1VTJGdGNHeGxWbUZzZFdWZk93cGpiaTV3Y205MGIzUjVjR1V1WVdaMFpYSkZibVJmSUQwZ1kyNHVjSEp2ZEc5MGVYQmxMbU52Y0hsVFlXMXdiR1ZXWVd4MVpWODdDblpoY2lCUWFDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1kyNGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU3dnZEN3Z2Jpd2dhU2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZkMlZwWjJoMFVISmxkaUE5SUMwd0xDQjBhR2x6TGw5dlptWnpaWFJRY21WMklEMGdMVEFzSUhSb2FYTXVYM2RsYVdkb2RFNWxlSFFnUFNBdE1Dd2dkR2hwY3k1ZmIyWm1jMlYwVG1WNGRDQTlJQzB3TENCMGFHbHpMa1JsWm1GMWJIUlRaWFIwYVc1bmMxOGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVnVaR2x1WjFOMFlYSjBPaUJOYVN3S0lDQWdJQ0FnSUNBZ0lDQWdaVzVrYVc1blJXNWtPaUJOYVFvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25aaGJFTm9ZVzVuWldSZktHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11Y0dGeVlXMWxkR1Z5VUc5emFYUnBiMjV6TENCeUlEMGdaU0F0SURJc0lHOGdQU0JsSUNzZ01Td2dZU0E5SUdsYmNsMHNJR3dnUFNCcFcyOWRPd29nSUNBZ0lDQWdJR2xtSUNoaElEMDlQU0IyYjJsa0lEQXBJSE4zYVhSamFDaDBhR2x6TG1kbGRGTmxkSFJwYm1kelh5Z3BMbVZ1WkdsdVoxTjBZWEowS1hzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNCaWFUb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISWdQU0JsTENCaElEMGdNaUFxSUhRZ0xTQnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ1QzTTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlJRDBnYVM1c1pXNW5kR2dnTFNBeUxDQmhJRDBnZENBcklHbGJjbDBnTFNCcFczSWdLeUF4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCa1pXWmhkV3gwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2lBOUlHVXNJR0VnUFNCdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvYkNBOVBUMGdkbTlwWkNBd0tTQnpkMmwwWTJnb2RHaHBjeTVuWlhSVFpYUjBhVzVuYzE4b0tTNWxibVJwYm1kRmJtUXBld29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJR0pwT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHVXNJR3dnUFNBeUlDb2diaUF0SUhRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JQY3pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQXhMQ0JzSUQwZ2JpQXJJR2xiTVYwZ0xTQnBXekJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFE2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ1pTQXRJREVzSUd3Z1BTQjBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJQ2h1SUMwZ2RDa2dLaUF1TlN3Z2FDQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbE93b2dJQ0FnSUNBZ0lIUm9hWE11WDNkbGFXZG9kRkJ5WlhZZ1BTQmpJQzhnS0hRZ0xTQmhLU3dnZEdocGN5NWZkMlZwWjJoMFRtVjRkQ0E5SUdNZ0x5QW9iQ0F0SUc0cExDQjBhR2x6TGw5dlptWnpaWFJRY21WMklEMGdjaUFxSUdnc0lIUm9hWE11WDI5bVpuTmxkRTVsZUhRZ1BTQnZJQ29nYURzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5Y0c5c1lYUmxYeWhsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMGFHbHpMbkpsYzNWc2RFSjFabVpsY2l3Z2J5QTlJSFJvYVhNdWMyRnRjR3hsVm1Gc2RXVnpMQ0JoSUQwZ2RHaHBjeTUyWVd4MVpWTnBlbVVzSUd3Z1BTQmxJQ29nWVN3Z1l5QTlJR3dnTFNCaExDQm9JRDBnZEdocGN5NWZiMlptYzJWMFVISmxkaXdnZFNBOUlIUm9hWE11WDI5bVpuTmxkRTVsZUhRc0lHUWdQU0IwYUdsekxsOTNaV2xuYUhSUWNtVjJMQ0JtSUQwZ2RHaHBjeTVmZDJWcFoyaDBUbVY0ZEN3Z2JTQTlJQ2h1SUMwZ2RDa2dMeUFvYVNBdElIUXBMQ0I0SUQwZ2JTQXFJRzBzSUhZZ1BTQjRJQ29nYlN3Z1p5QTlJQzFrSUNvZ2RpQXJJRElnS2lCa0lDb2dlQ0F0SUdRZ0tpQnRMQ0J3SUQwZ0tERWdLeUJrS1NBcUlIWWdLeUFvTFRFdU5TQXRJRElnS2lCa0tTQXFJSGdnS3lBb0xTNDFJQ3NnWkNrZ0tpQnRJQ3NnTVN3Z1h5QTlJQ2d0TVNBdElHWXBJQ29nZGlBcklDZ3hMalVnS3lCbUtTQXFJSGdnS3lBdU5TQXFJRzBzSUhrZ1BTQm1JQ29nZGlBdElHWWdLaUI0T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWWlBOUlEQTdJR0lnSVQwOUlHRTdJQ3NyWWlseVcySmRJRDBnWnlBcUlHOWJhQ0FySUdKZElDc2djQ0FxSUc5Yll5QXJJR0pkSUNzZ1h5QXFJRzliYkNBcklHSmRJQ3NnZVNBcUlHOWJkU0FySUdKZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCeU93b2dJQ0FnZlFwOUxDQk9ZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZMjRnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlN3Z2RDd2diaXdnYVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlN3Z2RDd2diaXdnYVNrN0NpQWdJQ0I5Q2lBZ0lDQnBiblJsY25CdmJHRjBaVjhvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RHaHBjeTV5WlhOMWJIUkNkV1ptWlhJc0lHOGdQU0IwYUdsekxuTmhiWEJzWlZaaGJIVmxjeXdnWVNBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCc0lEMGdaU0FxSUdFc0lHTWdQU0JzSUMwZ1lTd2dhQ0E5SUNodUlDMGdkQ2tnTHlBb2FTQXRJSFFwTENCMUlEMGdNU0F0SUdnN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCa0lEMGdNRHNnWkNBaFBUMGdZVHNnS3l0a0tYSmJaRjBnUFNCdlcyTWdLeUJrWFNBcUlIVWdLeUJ2VzJ3Z0t5QmtYU0FxSUdnN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhJN0NpQWdJQ0I5Q24wc0lFbG9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmpiaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVMQ0JwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMExDQnVMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lHbHVkR1Z5Y0c5c1lYUmxYeWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVZMjl3ZVZOaGJYQnNaVlpoYkhWbFh5aGxJQzBnTVNrN0NpQWdJQ0I5Q24wc0lIcDBJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2Jpd2dhU2w3Q2lBZ0lDQWdJQ0FnYVdZZ0tHVWdQVDA5SUhadmFXUWdNQ2tnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ0pVU0ZKRlJTNUxaWGxtY21GdFpWUnlZV05yT2lCMGNtRmpheUJ1WVcxbElHbHpJSFZ1WkdWbWFXNWxaQ0lwT3dvZ0lDQWdJQ0FnSUdsbUlDaDBJRDA5UFNCMmIybGtJREFnZkh3Z2RDNXNaVzVuZEdnZ1BUMDlJREFwSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWdpVkVoU1JVVXVTMlY1Wm5KaGJXVlVjbUZqYXpvZ2JtOGdhMlY1Wm5KaGJXVnpJR2x1SUhSeVlXTnJJRzVoYldWa0lDSWdLeUJsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbTVoYldVZ1BTQmxMQ0IwYUdsekxuUnBiV1Z6SUQwZ1dtVXVZMjl1ZG1WeWRFRnljbUY1S0hRc0lIUm9hWE11VkdsdFpVSjFabVpsY2xSNWNHVXBMQ0IwYUdsekxuWmhiSFZsY3lBOUlGcGxMbU52Ym5abGNuUkJjbkpoZVNodUxDQjBhR2x6TGxaaGJIVmxRblZtWm1WeVZIbHdaU2tzSUhSb2FYTXVjMlYwU1c1MFpYSndiMnhoZEdsdmJpaHBJSHg4SUhSb2FYTXVSR1ZtWVhWc2RFbHVkR1Z5Y0c5c1lYUnBiMjRwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhSdlNsTlBUaWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExtTnZibk4wY25WamRHOXlMQ0J1T3dvZ0lDQWdJQ0FnSUdsbUlDaDBMblJ2U2xOUFRpQWhQVDBnZEdocGN5NTBiMHBUVDA0cElHNGdQU0IwTG5SdlNsTlBUaWhsS1RzS0lDQWdJQ0FnSUNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JpQTlJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklHVXVibUZ0WlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhScGJXVnpPaUJhWlM1amIyNTJaWEowUVhKeVlYa29aUzUwYVcxbGN5d2dRWEp5WVhrcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnNkV1Z6T2lCYVpTNWpiMjUyWlhKMFFYSnlZWGtvWlM1MllXeDFaWE1zSUVGeWNtRjVLUW9nSUNBZ0lDQWdJQ0FnSUNCOU93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1V1WjJWMFNXNTBaWEp3YjJ4aGRHbHZiaWdwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBJQ0U5UFNCbExrUmxabUYxYkhSSmJuUmxjbkJ2YkdGMGFXOXVJQ1ltSUNodUxtbHVkR1Z5Y0c5c1lYUnBiMjRnUFNCcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNHVkSGx3WlNBOUlHVXVWbUZzZFdWVWVYQmxUbUZ0WlN3Z2Jqc0tJQ0FnSUgwS0lDQWdJRWx1ZEdWeWNHOXNZVzUwUm1GamRHOXllVTFsZEdodlpFUnBjMk55WlhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVsb0tIUm9hWE11ZEdsdFpYTXNJSFJvYVhNdWRtRnNkV1Z6TENCMGFHbHpMbWRsZEZaaGJIVmxVMmw2WlNncExDQmxLVHNLSUNBZ0lIMEtJQ0FnSUVsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRXhwYm1WaGNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzVsZHlCT1lTaDBhR2x6TG5ScGJXVnpMQ0IwYUdsekxuWmhiSFZsY3l3Z2RHaHBjeTVuWlhSV1lXeDFaVk5wZW1Vb0tTd2daU2s3Q2lBZ0lDQjlDaUFnSUNCSmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJUYlc5dmRHZ29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VHZ29kR2hwY3k1MGFXMWxjeXdnZEdocGN5NTJZV3gxWlhNc0lIUm9hWE11WjJWMFZtRnNkV1ZUYVhwbEtDa3NJR1VwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBTVzUwWlhKd2IyeGhkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRN0NpQWdJQ0FnSUNBZ2MzZHBkR05vS0dVcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElIcHpPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkQ0E5SUhSb2FYTXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1JHbHpZM0psZEdVN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0JWY3pvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRZ1BTQjBhR2x6TGtsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRXhwYm1WaGNqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUhsdk9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RDQTlJSFJvYVhNdVNXNTBaWEp3YjJ4aGJuUkdZV04wYjNKNVRXVjBhRzlrVTIxdmIzUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gwSUQwOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHNGdQU0FpZFc1emRYQndiM0owWldRZ2FXNTBaWEp3YjJ4aGRHbHZiaUJtYjNJZ0lpQXJJSFJvYVhNdVZtRnNkV1ZVZVhCbFRtRnRaU0FySUNJZ2EyVjVabkpoYldVZ2RISmhZMnNnYm1GdFpXUWdJaUFySUhSb2FYTXVibUZ0WlRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVZM0psWVhSbFNXNTBaWEp3YjJ4aGJuUWdQVDA5SUhadmFXUWdNQ2tnYVdZZ0tHVWdJVDA5SUhSb2FYTXVSR1ZtWVhWc2RFbHVkR1Z5Y0c5c1lYUnBiMjRwSUhSb2FYTXVjMlYwU1c1MFpYSndiMnhoZEdsdmJpaDBhR2x6TGtSbFptRjFiSFJKYm5SbGNuQnZiR0YwYVc5dUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWld4elpTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb2JpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt0bGVXWnlZVzFsVkhKaFkyczZJaXdnYmlrc0lIUm9hWE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtTnlaV0YwWlVsdWRHVnljRzlzWVc1MElEMGdkQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVsdWRHVnljRzlzWVhScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnYzNkcGRHTm9LSFJvYVhNdVkzSmxZWFJsU1c1MFpYSndiMnhoYm5RcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElIUm9hWE11U1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtSR2x6WTNKbGRHVTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2VuTTdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdkR2hwY3k1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJNYVc1bFlYSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ZYTTdDaUFnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdkR2hwY3k1SmJuUmxjbkJ2YkdGdWRFWmhZM1J2Y25sTlpYUm9iMlJUYlc5dmRHZzZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2VXODdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWjJWMFZtRnNkV1ZUYVhwbEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5aaGJIVmxjeTVzWlc1bmRHZ2dMeUIwYUdsekxuUnBiV1Z6TG14bGJtZDBhRHNLSUNBZ0lIMEtJQ0FnSUhOb2FXWjBLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVkR2x0WlhNN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYUmJibDBnS3owZ1pUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelkyRnNaU2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMblJwYldWek93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd0xDQnBJRDBnZEM1c1pXNW5kR2c3SUc0Z0lUMDlJR2s3SUNzcmJpbDBXMjVkSUNvOUlHVTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RISnBiU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG5ScGJXVnpMQ0JwSUQwZ2JpNXNaVzVuZEdnc0lISWdQU0F3TENCdklEMGdhU0F0SURFN0NpQWdJQ0FnSUNBZ1ptOXlLRHNnY2lBaFBUMGdhU0FtSmlCdVczSmRJRHdnWlRzcEt5dHlPd29nSUNBZ0lDQWdJR1p2Y2lnN0lHOGdJVDA5SUMweElDWW1JRzViYjEwZ1BpQjBPeWt0TFc4N0NpQWdJQ0FnSUNBZ2FXWWdLQ3NyYnl3Z2NpQWhQVDBnTUNCOGZDQnZJQ0U5UFNCcEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhJZ1BqMGdieUFtSmlBb2J5QTlJRTFoZEdndWJXRjRLRzhzSURFcExDQnlJRDBnYnlBdElERXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhSb2FYTXVaMlYwVm1Gc2RXVlRhWHBsS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRHbHRaWE1nUFNCYVpTNWhjbkpoZVZOc2FXTmxLRzRzSUhJc0lHOHBMQ0IwYUdsekxuWmhiSFZsY3lBOUlGcGxMbUZ5Y21GNVUyeHBZMlVvZEdocGN5NTJZV3gxWlhNc0lISWdLaUJoTENCdklDb2dZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsek93b2dJQ0FnZlFvZ0lDQWdkbUZzYVdSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0FoTUN3Z2RDQTlJSFJvYVhNdVoyVjBWbUZzZFdWVGFYcGxLQ2s3Q2lBZ0lDQWdJQ0FnZENBdElFMWhkR2d1Wm14dmIzSW9kQ2tnSVQwOUlEQWdKaVlnS0dOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrdGxlV1p5WVcxbFZISmhZMnM2SUVsdWRtRnNhV1FnZG1Gc2RXVWdjMmw2WlNCcGJpQjBjbUZqYXk0aUxDQjBhR2x6S1N3Z1pTQTlJQ0V4S1RzS0lDQWdJQ0FnSUNCc1pYUWdiaUE5SUhSb2FYTXVkR2x0WlhNc0lHa2dQU0IwYUdsekxuWmhiSFZsY3l3Z2NpQTlJRzR1YkdWdVozUm9Pd29nSUNBZ0lDQWdJSElnUFQwOUlEQWdKaVlnS0dOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrdGxlV1p5WVcxbFZISmhZMnM2SUZSeVlXTnJJR2x6SUdWdGNIUjVMaUlzSUhSb2FYTXBMQ0JsSUQwZ0lURXBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdiblZzYkRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ1BTQXdPeUJoSUNFOVBTQnlPeUJoS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJRzViWVYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnYkNBOVBTQWliblZ0WW1WeUlpQW1KaUJwYzA1aFRpaHNLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVMyVjVabkpoYldWVWNtRmphem9nVkdsdFpTQnBjeUJ1YjNRZ1lTQjJZV3hwWkNCdWRXMWlaWEl1SWl3Z2RHaHBjeXdnWVN3Z2JDa3NJR1VnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHZJQ0U5UFNCdWRXeHNJQ1ltSUc4Z1BpQnNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUJQZFhRZ2IyWWdiM0prWlhJZ2EyVjVjeTRpTENCMGFHbHpMQ0JoTENCc0xDQnZLU3dnWlNBOUlDRXhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJR3c3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHBJQ0U5UFNCMmIybGtJREFnSmlZZ1dtVXVhWE5VZVhCbFpFRnljbUY1S0drcEtTQm1iM0lvYkdWMElHRXhJRDBnTUN3Z2JERWdQU0JwTG14bGJtZDBhRHNnWVRFZ0lUMDlJR3d4T3lBcksyRXhLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR01nUFNCcFcyRXhYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2x6VG1GT0tHTXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUJXWVd4MVpTQnBjeUJ1YjNRZ1lTQjJZV3hwWkNCdWRXMWlaWEl1SWl3Z2RHaHBjeXdnWVRFc0lHTXBMQ0JsSUQwZ0lURTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaVHNLSUNBZ0lIMEtJQ0FnSUc5d2RHbHRhWHBsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ1dtVXVZWEp5WVhsVGJHbGpaU2gwYUdsekxuUnBiV1Z6S1N3Z2RDQTlJRnBsTG1GeWNtRjVVMnhwWTJVb2RHaHBjeTUyWVd4MVpYTXBMQ0J1SUQwZ2RHaHBjeTVuWlhSV1lXeDFaVk5wZW1Vb0tTd2dhU0E5SUhSb2FYTXVaMlYwU1c1MFpYSndiMnhoZEdsdmJpZ3BJRDA5UFNCNWJ5d2djaUE5SUdVdWJHVnVaM1JvSUMwZ01Td2dieUE5SURFN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaElEMGdNVHNnWVNBOElISTdJQ3NyWVNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdJVEVzSUdNZ1BTQmxXMkZkTENCb0lEMGdaVnRoSUNzZ01WMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpJQ0U5UFNCb0lDWW1JQ2hoSUNFOVBTQXhJSHg4SUdNZ0lUMDlJR1ZiTUYwcEtTQnBaaUFvYVNrZ2JDQTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnWVNBcUlHNHNJR1FnUFNCMUlDMGdiaXdnWmlBOUlIVWdLeUJ1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J0SUQwZ01Ec2diU0FoUFQwZ2Jqc2dLeXR0S1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlIUmJkU0FySUcxZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoNElDRTlQU0IwVzJRZ0t5QnRYU0I4ZkNCNElDRTlQU0IwVzJZZ0t5QnRYU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzSUQwZ0lUQTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0VnSVQwOUlHOHBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbFcyOWRJRDBnWlZ0aFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RURWdQU0JoSUNvZ2Jpd2daREVnUFNCdklDb2dianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZeElEMGdNRHNnWmpFZ0lUMDlJRzQ3SUNzclpqRXBkRnRrTVNBcklHWXhYU0E5SUhSYmRURWdLeUJtTVYwN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBcksyODdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLSElnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdWYmIxMGdQU0JsVzNKZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0V4SUQwZ2NpQXFJRzRzSUd3eElEMGdieUFxSUc0c0lHTXhJRDBnTURzZ1l6RWdJVDA5SUc0N0lDc3JZekVwZEZ0c01TQXJJR014WFNBOUlIUmJZVEVnS3lCak1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNzcmJ6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHOGdJVDA5SUdVdWJHVnVaM1JvSUQ4Z0tIUm9hWE11ZEdsdFpYTWdQU0JhWlM1aGNuSmhlVk5zYVdObEtHVXNJREFzSUc4cExDQjBhR2x6TG5aaGJIVmxjeUE5SUZwbExtRnljbUY1VTJ4cFkyVW9kQ3dnTUN3Z2J5QXFJRzRwS1NBNklDaDBhR2x6TG5ScGJXVnpJRDBnWlN3Z2RHaHBjeTUyWVd4MVpYTWdQU0IwS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnV21VdVlYSnlZWGxUYkdsalpTaDBhR2x6TG5ScGJXVnpMQ0F3S1N3Z2RDQTlJRnBsTG1GeWNtRjVVMnhwWTJVb2RHaHBjeTUyWVd4MVpYTXNJREFwTENCdUlEMGdkR2hwY3k1amIyNXpkSEoxWTNSdmNpd2dhU0E5SUc1bGR5QnVLSFJvYVhNdWJtRnRaU3dnWlN3Z2RDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHa3VZM0psWVhSbFNXNTBaWEp3YjJ4aGJuUWdQU0IwYUdsekxtTnlaV0YwWlVsdWRHVnljRzlzWVc1MExDQnBPd29nSUNBZ2ZRcDlPd3A2ZEM1d2NtOTBiM1I1Y0dVdVZHbHRaVUoxWm1abGNsUjVjR1VnUFNCR2JHOWhkRE15UVhKeVlYazdDbnAwTG5CeWIzUnZkSGx3WlM1V1lXeDFaVUoxWm1abGNsUjVjR1VnUFNCR2JHOWhkRE15UVhKeVlYazdDbnAwTG5CeWIzUnZkSGx3WlM1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpQTlJRlZ6T3dwMllYSWdVVzRnUFNCamJHRnpjeUJsZUhSbGJtUnpJSHAwSUhzS2ZUc0tVVzR1Y0hKdmRHOTBlWEJsTGxaaGJIVmxWSGx3WlU1aGJXVWdQU0FpWW05dmJDSTdDbEZ1TG5CeWIzUnZkSGx3WlM1V1lXeDFaVUoxWm1abGNsUjVjR1VnUFNCQmNuSmhlVHNLVVc0dWNISnZkRzkwZVhCbExrUmxabUYxYkhSSmJuUmxjbkJ2YkdGMGFXOXVJRDBnZW5NN0NsRnVMbkJ5YjNSdmRIbHdaUzVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUk1hVzVsWVhJZ1BTQjJiMmxrSURBN0NsRnVMbkJ5YjNSdmRIbHdaUzVKYm5SbGNuQnZiR0Z1ZEVaaFkzUnZjbmxOWlhSb2IyUlRiVzl2ZEdnZ1BTQjJiMmxrSURBN0NuWmhjaUJDWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nZW5RZ2V3cDlPd3BDWVM1d2NtOTBiM1I1Y0dVdVZtRnNkV1ZVZVhCbFRtRnRaU0E5SUNKamIyeHZjaUk3Q25aaGNpQkJjaUE5SUdOc1lYTnpJR1Y0ZEdWdVpITWdlblFnZXdwOU93cEJjaTV3Y205MGIzUjVjR1V1Vm1Gc2RXVlVlWEJsVG1GdFpTQTlJQ0p1ZFcxaVpYSWlPd3AyWVhJZ1JHZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklHTnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHNJR2twZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRc0lHNHNJR2twT3dvZ0lDQWdmUW9nSUNBZ2FXNTBaWEp3YjJ4aGRHVmZLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUhSb2FYTXVjbVZ6ZFd4MFFuVm1abVZ5TENCdklEMGdkR2hwY3k1ellXMXdiR1ZXWVd4MVpYTXNJR0VnUFNCMGFHbHpMblpoYkhWbFUybDZaU3dnYkNBOUlDaHVJQzBnZENrZ0x5QW9hU0F0SUhRcExDQmpJRDBnWlNBcUlHRTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm9JRDBnWXlBcklHRTdJR01nSVQwOUlHZzdJR01nS3owZ05DbG5kQzV6YkdWeWNFWnNZWFFvY2l3Z01Dd2dieXdnWXlBdElHRXNJRzhzSUdNc0lHd3BPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnlPd29nSUNBZ2ZRcDlMQ0JYYVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nZW5RZ2V3b2dJQ0FnU1c1MFpYSndiMnhoYm5SR1lXTjBiM0o1VFdWMGFHOWtUR2x1WldGeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdibVYzSUVSb0tIUm9hWE11ZEdsdFpYTXNJSFJvYVhNdWRtRnNkV1Z6TENCMGFHbHpMbWRsZEZaaGJIVmxVMmw2WlNncExDQmxLVHNLSUNBZ0lIMEtmVHNLVjJrdWNISnZkRzkwZVhCbExsWmhiSFZsVkhsd1pVNWhiV1VnUFNBaWNYVmhkR1Z5Ym1sdmJpSTdDbGRwTG5CeWIzUnZkSGx3WlM1RVpXWmhkV3gwU1c1MFpYSndiMnhoZEdsdmJpQTlJRlZ6T3dwWGFTNXdjbTkwYjNSNWNHVXVTVzUwWlhKd2IyeGhiblJHWVdOMGIzSjVUV1YwYUc5a1UyMXZiM1JvSUQwZ2RtOXBaQ0F3T3dwMllYSWdTMjRnUFNCamJHRnpjeUJsZUhSbGJtUnpJSHAwSUhzS2ZUc0tTMjR1Y0hKdmRHOTBlWEJsTGxaaGJIVmxWSGx3WlU1aGJXVWdQU0FpYzNSeWFXNW5JanNLUzI0dWNISnZkRzkwZVhCbExsWmhiSFZsUW5WbVptVnlWSGx3WlNBOUlFRnljbUY1T3dwTGJpNXdjbTkwYjNSNWNHVXVSR1ZtWVhWc2RFbHVkR1Z5Y0c5c1lYUnBiMjRnUFNCNmN6c0tTMjR1Y0hKdmRHOTBlWEJsTGtsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRXhwYm1WaGNpQTlJSFp2YVdRZ01Ec0tTMjR1Y0hKdmRHOTBlWEJsTGtsdWRHVnljRzlzWVc1MFJtRmpkRzl5ZVUxbGRHaHZaRk50YjI5MGFDQTlJSFp2YVdRZ01Ec0tkbUZ5SUVOeUlEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCNmRDQjdDbjA3Q2tOeUxuQnliM1J2ZEhsd1pTNVdZV3gxWlZSNWNHVk9ZVzFsSUQwZ0luWmxZM1J2Y2lJN0NuWmhjaUJNY2lBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F0TVN3Z2Jpd2dhU0E5SUhWaEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG01aGJXVWdQU0JsTENCMGFHbHpMblJ5WVdOcmN5QTlJRzRzSUhSb2FYTXVaSFZ5WVhScGIyNGdQU0IwTENCMGFHbHpMbUpzWlc1a1RXOWtaU0E5SUdrc0lIUm9hWE11ZFhWcFpDQTlJRVYwS0Nrc0lIUm9hWE11WkhWeVlYUnBiMjRnUENBd0lDWW1JSFJvYVhNdWNtVnpaWFJFZFhKaGRHbHZiaWdwT3dvZ0lDQWdmUW9nSUNBZ2MzUmhkR2xqSUhCaGNuTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUZ0ZExDQnVJRDBnWlM1MGNtRmphM01zSUdrZ1BTQXhJQzhnS0dVdVpuQnpJSHg4SURFcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREFzSUdFZ1BTQnVMbXhsYm1kMGFEc2dieUFoUFQwZ1lUc2dLeXR2S1hRdWNIVnphQ2hoZVNodVcyOWRLUzV6WTJGc1pTaHBLU2s3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0J1WlhjZ2RHaHBjeWhsTG01aGJXVXNJR1V1WkhWeVlYUnBiMjRzSUhRc0lHVXVZbXhsYm1STmIyUmxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjaTUxZFdsa0lEMGdaUzUxZFdsa0xDQnlPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JiWFN3Z2JpQTlJR1V1ZEhKaFkydHpMQ0JwSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQmxMbTVoYldVc0NpQWdJQ0FnSUNBZ0lDQWdJR1IxY21GMGFXOXVPaUJsTG1SMWNtRjBhVzl1TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBjbUZqYTNNNklIUXNDaUFnSUNBZ0lDQWdJQ0FnSUhWMWFXUTZJR1V1ZFhWcFpDd0tJQ0FnSUNBZ0lDQWdJQ0FnWW14bGJtUk5iMlJsT2lCbExtSnNaVzVrVFc5a1pRb2dJQ0FnSUNBZ0lIMDdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJRzR1YkdWdVozUm9PeUJ5SUNFOVBTQnZPeUFySzNJcGRDNXdkWE5vS0hwMExuUnZTbE5QVGlodVczSmRLU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR2s3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nUTNKbFlYUmxSbkp2YlUxdmNuQm9WR0Z5WjJWMFUyVnhkV1Z1WTJVb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkQzVzWlc1bmRHZ3NJRzhnUFNCYlhUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHRWdQU0F3T3lCaElEd2djanNnWVNzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHd2dQU0JiWFN3Z1l5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnNMbkIxYzJnb0tHRWdLeUJ5SUMwZ01Ta2dKU0J5TENCaExDQW9ZU0FySURFcElDVWdjaWtzSUdNdWNIVnphQ2d3TENBeExDQXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2dnUFNCYVpTNW5aWFJMWlhsbWNtRnRaVTl5WkdWeUtHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCc0lEMGdXbVV1YzI5eWRHVmtRWEp5WVhrb2JDd2dNU3dnYUNrc0lHTWdQU0JhWlM1emIzSjBaV1JCY25KaGVTaGpMQ0F4TENCb0tTd2dJV2tnSmlZZ2JGc3dYU0E5UFQwZ01DQW1KaUFvYkM1d2RYTm9LSElwTENCakxuQjFjMmdvWTFzd1hTa3BMQ0J2TG5CMWMyZ29ibVYzSUVGeUtDSXViVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6V3lJZ0t5QjBXMkZkTG01aGJXVWdLeUFpWFNJc0lHd3NJR01wTG5OallXeGxLREVnTHlCdUtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5aGxMQ0F0TVN3Z2J5azdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdabWx1WkVKNVRtRnRaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxPd29nSUNBZ0lDQWdJR2xtSUNnaFFYSnlZWGt1YVhOQmNuSmhlU2hsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJR1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNGdQU0JwTG1kbGIyMWxkSEo1SUNZbUlHa3VaMlZ2YldWMGNua3VZVzVwYldGMGFXOXVjeUI4ZkNCcExtRnVhVzFoZEdsdmJuTTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhVEVnUFNBd095QnBNU0E4SUc0dWJHVnVaM1JvT3lCcE1Tc3JLV2xtSUNodVcya3hYUzV1WVcxbElEMDlQU0IwS1NCeVpYUjFjbTRnYmx0cE1WMDdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQjlDaUFnSUNCemRHRjBhV01nUTNKbFlYUmxRMnhwY0hOR2NtOXRUVzl5Y0doVVlYSm5aWFJUWlhGMVpXNWpaWE1vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZTMwc0lISWdQU0F2WGloYlhIY3RYU28vS1NoYlhHUmRLeWtrTHpzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdFZ1BTQXdMQ0JzSUQwZ1pTNXNaVzVuZEdnN0lHRWdQQ0JzT3lCaEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUdWYllWMHNJR2dnUFNCakxtNWhiV1V1YldGMFkyZ29jaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hvSUNZbUlHZ3ViR1Z1WjNSb0lENGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIVWdQU0JvV3pGZExDQmtJRDBnYVZ0MVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUWdmSHdnS0dsYmRWMGdQU0JrSUQwZ1cxMHBMQ0JrTG5CMWMyZ29ZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUc4Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR0V4SUdsdUlHa3BieTV3ZFhOb0tIUm9hWE11UTNKbFlYUmxSbkp2YlUxdmNuQm9WR0Z5WjJWMFUyVnhkV1Z1WTJVb1lURXNJR2xiWVRGZExDQjBMQ0J1S1NrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4N0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2NHRnljMlZCYm1sdFlYUnBiMjRvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR2xtSUNnaFpTa2djbVYwZFhKdUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa0Z1YVcxaGRHbHZia05zYVhBNklFNXZJR0Z1YVcxaGRHbHZiaUJwYmlCS1UwOU9URzloWkdWeUlHUmhkR0V1SWlrc0lHNTFiR3c3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0JtZFc1amRHbHZiaWgxTENCa0xDQm1MQ0J0TENCNEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaG1MbXhsYm1kMGFDQWhQVDBnTUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCYlhTd2daeUE5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1dtVXVabXhoZEhSbGJrcFRUMDRvWml3Z2Rpd2daeXdnYlNrc0lIWXViR1Z1WjNSb0lDRTlQU0F3SUNZbUlIZ3VjSFZ6YUNodVpYY2dkU2hrTENCMkxDQm5LU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQ0JwSUQwZ1cxMHNJSElnUFNCbExtNWhiV1VnZkh3Z0ltUmxabUYxYkhRaUxDQnZJRDBnWlM1bWNITWdmSHdnTXpBc0lHRWdQU0JsTG1Kc1pXNWtUVzlrWlN3Z2JDQTlJR1V1YkdWdVozUm9JSHg4SUMweExDQmpJRDBnWlM1b2FXVnlZWEpqYUhrZ2ZId2dXMTA3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxSUQwZ01Ec2dkU0E4SUdNdWJHVnVaM1JvT3lCMUt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUdOYmRWMHVhMlY1Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NFb0lXUWdmSHdnWkM1c1pXNW5kR2dnUFQwOUlEQXBLU0JwWmlBb1pGc3dYUzV0YjNKd2FGUmhjbWRsZEhNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ2UzMHNJRzA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JTQTlJREE3SUcwZ1BDQmtMbXhsYm1kMGFEc2diU3NyS1dsbUlDaGtXMjFkTG0xdmNuQm9WR0Z5WjJWMGN5a2dabTl5S0d4bGRDQjRJRDBnTURzZ2VDQThJR1JiYlYwdWJXOXljR2hVWVhKblpYUnpMbXhsYm1kMGFEc2dlQ3NyS1daYlpGdHRYUzV0YjNKd2FGUmhjbWRsZEhOYmVGMWRJRDBnTFRFN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhneElHbHVJR1lwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1cxMHNJR2NnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSEFnUFNBd095QndJQ0U5UFNCa1cyMWRMbTF2Y25Cb1ZHRnlaMlYwY3k1c1pXNW5kR2c3SUNzcmNDbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JmSUQwZ1pGdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkaTV3ZFhOb0tGOHVkR2x0WlNrc0lHY3VjSFZ6YUNoZkxtMXZjbkJvVkdGeVoyVjBJRDA5UFNCNE1TQS9JREVnT2lBd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNXdkWE5vS0c1bGR5QkJjaWdpTG0xdmNuQm9WR0Z5WjJWMFNXNW1iSFZsYm1ObFd5SWdLeUI0TVNBcklDSmRJaXdnZGl3Z1p5a3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiQ0E5SUdZdWJHVnVaM1JvSUNvZ0tHOGdmSHdnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmpFZ1BTQWlMbUp2Ym1Weld5SWdLeUIwVzNWZExtNWhiV1VnS3lBaVhTSTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVLRU55TENCbU1TQXJJQ0l1Y0c5emFYUnBiMjRpTENCa0xDQWljRzl6SWl3Z2FTa3NJRzRvVjJrc0lHWXhJQ3NnSWk1eGRXRjBaWEp1YVc5dUlpd2daQ3dnSW5KdmRDSXNJR2twTENCdUtFTnlMQ0JtTVNBcklDSXVjMk5oYkdVaUxDQmtMQ0FpYzJOc0lpd2dhU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHa3ViR1Z1WjNSb0lEMDlQU0F3SUQ4Z2JuVnNiQ0E2SUc1bGR5QjBhR2x6S0hJc0lHd3NJR2tzSUdFcE93b2dJQ0FnZlFvZ0lDQWdjbVZ6WlhSRWRYSmhkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11ZEhKaFkydHpMQ0IwSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdaUzVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3k1MGNtRmphM05iYmwwN0NpQWdJQ0FnSUNBZ0lDQWdJSFFnUFNCTllYUm9MbTFoZUNoMExDQnlMblJwYldWelczSXVkR2x0WlhNdWJHVnVaM1JvSUMwZ01WMHBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1a2RYSmhkR2x2YmlBOUlIUXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQjBjbWx0S0NrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pTQTlJREE3SUdVZ1BDQjBhR2x6TG5SeVlXTnJjeTVzWlc1bmRHZzdJR1VyS3lsMGFHbHpMblJ5WVdOcmMxdGxYUzUwY21sdEtEQXNJSFJvYVhNdVpIVnlZWFJwYjI0cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnZG1Gc2FXUmhkR1VvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNBaE1Ec0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dkR2hwY3k1MGNtRmphM011YkdWdVozUm9PeUIwS3lzcFpTQTlJR1VnSmlZZ2RHaHBjeTUwY21GamEzTmJkRjB1ZG1Gc2FXUmhkR1VvS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLSUNBZ0lHOXdkR2x0YVhwbEtDa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaU0E5SURBN0lHVWdQQ0IwYUdsekxuUnlZV05yY3k1c1pXNW5kR2c3SUdVckt5bDBhR2x6TG5SeVlXTnJjMXRsWFM1dmNIUnBiV2w2WlNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWTJ4dmJtVW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0JiWFRzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUhRZ1BTQXdPeUIwSUR3Z2RHaHBjeTUwY21GamEzTXViR1Z1WjNSb095QjBLeXNwWlM1d2RYTm9LSFJvYVhNdWRISmhZMnR6VzNSZExtTnNiMjVsS0NrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpaDBhR2x6TG01aGJXVXNJSFJvYVhNdVpIVnlZWFJwYjI0c0lHVXNJSFJvYVhNdVlteGxibVJOYjJSbEtUc0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIyNXpkSEoxWTNSdmNpNTBiMHBUVDA0b2RHaHBjeWs3Q2lBZ0lDQjlDbjA3Q21aMWJtTjBhVzl1SUc5NUtITXBJSHNLSUNBZ0lITjNhWFJqYUNoekxuUnZURzkzWlhKRFlYTmxLQ2twZXdvZ0lDQWdJQ0FnSUdOaGMyVWdJbk5qWVd4aGNpSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaVpHOTFZbXhsSWpvS0lDQWdJQ0FnSUNCallYTmxJQ0ptYkc5aGRDSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaWJuVnRZbVZ5SWpvS0lDQWdJQ0FnSUNCallYTmxJQ0pwYm5SbFoyVnlJam9LSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUVGeU93b2dJQ0FnSUNBZ0lHTmhjMlVnSW5abFkzUnZjaUk2Q2lBZ0lDQWdJQ0FnWTJGelpTQWlkbVZqZEc5eU1pSTZDaUFnSUNBZ0lDQWdZMkZ6WlNBaWRtVmpkRzl5TXlJNkNpQWdJQ0FnSUNBZ1kyRnpaU0FpZG1WamRHOXlOQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCRGNqc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKamIyeHZjaUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCQ1lUc0tJQ0FnSUNBZ0lDQmpZWE5sSUNKeGRXRjBaWEp1YVc5dUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRmRwT3dvZ0lDQWdJQ0FnSUdOaGMyVWdJbUp2YjJ3aU9nb2dJQ0FnSUNBZ0lHTmhjMlVnSW1KdmIyeGxZVzRpT2dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1VXNDdDaUFnSUNBZ0lDQWdZMkZ6WlNBaWMzUnlhVzVuSWpvS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlFdHVPd29nSUNBZ2ZRb2dJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ0pVU0ZKRlJTNUxaWGxtY21GdFpWUnlZV05yT2lCVmJuTjFjSEJ2Y25SbFpDQjBlWEJsVG1GdFpUb2dJaUFySUhNcE93cDlDbVoxYm1OMGFXOXVJR0Y1S0hNcElIc0tJQ0FnSUdsbUlDaHpMblI1Y0dVZ1BUMDlJSFp2YVdRZ01Da2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDSlVTRkpGUlM1TFpYbG1jbUZ0WlZSeVlXTnJPaUIwY21GamF5QjBlWEJsSUhWdVpHVm1hVzVsWkN3Z1kyRnVJRzV2ZENCd1lYSnpaU0lwT3dvZ0lDQWdiR1YwSUdVZ1BTQnZlU2h6TG5SNWNHVXBPd29nSUNBZ2FXWWdLSE11ZEdsdFpYTWdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnVzEwc0lHNGdQU0JiWFRzS0lDQWdJQ0FnSUNCYVpTNW1iR0YwZEdWdVNsTlBUaWh6TG10bGVYTXNJSFFzSUc0c0lDSjJZV3gxWlNJcExDQnpMblJwYldWeklEMGdkQ3dnY3k1MllXeDFaWE1nUFNCdU93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlHVXVjR0Z5YzJVZ0lUMDlJSFp2YVdRZ01DQS9JR1V1Y0dGeWMyVW9jeWtnT2lCdVpYY2daU2h6TG01aGJXVXNJSE11ZEdsdFpYTXNJSE11ZG1Gc2RXVnpMQ0J6TG1sdWRHVnljRzlzWVhScGIyNHBPd3A5Q25aaGNpQk9hU0E5SUhzS0lDQWdJR1Z1WVdKc1pXUTZJQ0V4TEFvZ0lDQWdabWxzWlhNNklIdDlMQW9nSUNBZ1lXUmtPaUJtZFc1amRHbHZiaWh6TENCbEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1bGJtRmliR1ZrSUNFOVBTQWhNU0FtSmlBb2RHaHBjeTVtYVd4bGMxdHpYU0E5SUdVcE93b2dJQ0FnZlN3S0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbVZ1WVdKc1pXUWdJVDA5SUNFeEtTQnlaWFIxY200Z2RHaHBjeTVtYVd4bGMxdHpYVHNLSUNBZ0lIMHNDaUFnSUNCeVpXMXZkbVU2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RHaHBjeTVtYVd4bGMxdHpYVHNLSUNBZ0lIMHNDaUFnSUNCamJHVmhjam9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVtYVd4bGN5QTlJSHQ5T3dvZ0lDQWdmUXA5TENCNllTQTlJR05zWVhOeklIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2RHaHBjeXdnY2lBOUlDRXhMQ0J2SUQwZ01Dd2dZU0E5SURBc0lHd3NJR01nUFNCYlhUc0tJQ0FnSUNBZ0lDQjBhR2x6TG05dVUzUmhjblFnUFNCMmIybGtJREFzSUhSb2FYTXViMjVNYjJGa0lEMGdaU3dnZEdocGN5NXZibEJ5YjJkeVpYTnpJRDBnZEN3Z2RHaHBjeTV2YmtWeWNtOXlJRDBnYml3Z2RHaHBjeTVwZEdWdFUzUmhjblFnUFNCbWRXNWpkR2x2Ymlob0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdFckt5d2djaUE5UFQwZ0lURWdKaVlnYVM1dmJsTjBZWEowSUNFOVBTQjJiMmxrSURBZ0ppWWdhUzV2YmxOMFlYSjBLR2dzSUc4c0lHRXBMQ0J5SUQwZ0lUQTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXBkR1Z0Ulc1a0lEMGdablZ1WTNScGIyNG9hQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnZLeXNzSUdrdWIyNVFjbTluY21WemN5QWhQVDBnZG05cFpDQXdJQ1ltSUdrdWIyNVFjbTluY21WemN5aG9MQ0J2TENCaEtTd2dieUE5UFQwZ1lTQW1KaUFvY2lBOUlDRXhMQ0JwTG05dVRHOWhaQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlHa3ViMjVNYjJGa0tDa3BPd29nSUNBZ0lDQWdJSDBzSUhSb2FYTXVhWFJsYlVWeWNtOXlJRDBnWm5WdVkzUnBiMjRvYUNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwTG05dVJYSnliM0lnSVQwOUlIWnZhV1FnTUNBbUppQnBMbTl1UlhKeWIzSW9hQ2s3Q2lBZ0lDQWdJQ0FnZlN3Z2RHaHBjeTV5WlhOdmJIWmxWVkpNSUQwZ1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYkNBL0lHd29hQ2tnT2lCb093b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdWMyVjBWVkpNVFc5a2FXWnBaWElnUFNCbWRXNWpkR2x2Ymlob0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJzSUQwZ2FDd2dkR2hwY3pzS0lDQWdJQ0FnSUNCOUxDQjBhR2x6TG1Ga1pFaGhibVJzWlhJZ1BTQm1kVzVqZEdsdmJpaG9MQ0IxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpMbkIxYzJnb2FDd2dkU2tzSUhSb2FYTTdDaUFnSUNBZ0lDQWdmU3dnZEdocGN5NXlaVzF2ZG1WSVlXNWtiR1Z5SUQwZ1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkU0E5SUdNdWFXNWtaWGhQWmlob0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFVnSVQwOUlDMHhJQ1ltSUdNdWMzQnNhV05sS0hVc0lESXBMQ0IwYUdsek93b2dJQ0FnSUNBZ0lIMHNJSFJvYVhNdVoyVjBTR0Z1Wkd4bGNpQTlJR1oxYm1OMGFXOXVLR2dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnTUN3Z1pDQTlJR011YkdWdVozUm9PeUIxSUR3Z1pEc2dkU0FyUFNBeUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JtSUQwZ1kxdDFYU3dnYlNBOUlHTmJkU0FySURGZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1l1WjJ4dlltRnNJQ1ltSUNobUxteGhjM1JKYm1SbGVDQTlJREFwTENCbUxuUmxjM1FvYUNrcElISmxkSFZ5YmlCdE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdWRXeHNPd29nSUNBZ0lDQWdJSDA3Q2lBZ0lDQjlDbjBzSUd4NUlEMGdibVYzSUhwaExDQmlkQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhSb2FYTXViV0Z1WVdkbGNpQTlJR1VnSVQwOUlIWnZhV1FnTUNBL0lHVWdPaUJzZVN3Z2RHaHBjeTVqY205emMwOXlhV2RwYmlBOUlDSmhibTl1ZVcxdmRYTWlMQ0IwYUdsekxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lBOUlDRXhMQ0IwYUdsekxuQmhkR2dnUFNBaUlpd2dkR2hwY3k1eVpYTnZkWEpqWlZCaGRHZ2dQU0FpSWl3Z2RHaHBjeTV5WlhGMVpYTjBTR1ZoWkdWeUlEMGdlMzA3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLQ2tnZTMwS0lDQWdJR3h2WVdSQmMzbHVZeWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VISnZiV2x6WlNobWRXNWpkR2x2YmlocExDQnlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNHViRzloWkNobExDQnBMQ0IwTENCeUtUc0tJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxLQ2tnZTMwS0lDQWdJSE5sZEVOeWIzTnpUM0pwWjJsdUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amNtOXpjMDl5YVdkcGJpQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSWGFYUm9RM0psWkdWdWRHbGhiSE1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmRwZEdoRGNtVmtaVzUwYVdGc2N5QTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSUVlYUm9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdZWFJvSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRkpsYzI5MWNtTmxVR0YwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11Y21WemIzVnlZMlZRWVhSb0lEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEZKbGNYVmxjM1JJWldGa1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUXA5TENCMGJpQTlJSHQ5TENCWmRDQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1luUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU2w3Q2lBZ0lDQWdJQ0FnYzNWd1pYSW9aU2s3Q2lBZ0lDQjlDaUFnSUNCc2IyRmtLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCbElEMDlQU0IyYjJsa0lEQWdKaVlnS0dVZ1BTQWlJaWtzSUhSb2FYTXVjR0YwYUNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hsSUQwZ2RHaHBjeTV3WVhSb0lDc2daU2tzSUdVZ1BTQjBhR2x6TG0xaGJtRm5aWEl1Y21WemIyeDJaVlZTVENobEtUc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlFNXBMbWRsZENobEtUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2RHaHBjeTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1N3Z2MyVjBWR2x0Wlc5MWRDZ29LVDArZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBJQ1ltSUhRb2Npa3NJSFJvYVhNdWJXRnVZV2RsY2k1cGRHVnRSVzVrS0dVcE93b2dJQ0FnSUNBZ0lIMHNJREFwTENCeU93b2dJQ0FnSUNBZ0lHbG1JQ2gwYmx0bFhTQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUnVXMlZkTG5CMWMyZ29ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMjVNYjJGa09pQjBMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMjVRY205bmNtVnpjem9nYml3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5dVJYSnliM0k2SUdrS0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHNWJaVjBnUFNCYlhTd2dkRzViWlYwdWNIVnphQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHOXVURzloWkRvZ2RDd0tJQ0FnSUNBZ0lDQWdJQ0FnYjI1UWNtOW5jbVZ6Y3pvZ2Jpd0tJQ0FnSUNBZ0lDQWdJQ0FnYjI1RmNuSnZjam9nYVFvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ2JtVjNJRkpsY1hWbGMzUW9aU3dnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm9aV0ZrWlhKek9pQnVaWGNnU0dWaFpHVnljeWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTEFvZ0lDQWdJQ0FnSUNBZ0lDQmpjbVZrWlc1MGFXRnNjem9nZEdocGN5NTNhWFJvUTNKbFpHVnVkR2xoYkhNZ1B5QWlhVzVqYkhWa1pTSWdPaUFpYzJGdFpTMXZjbWxuYVc0aUNpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdabVYwWTJnb2J5a3VkR2hsYmlnb1lTazlQbnNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0V1YzNSaGRIVnpJRDA5UFNBeU1EQWdmSHdnWVM1emRHRjBkWE1nUFQwOUlEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaExuTjBZWFIxY3lBOVBUMGdNQ0FtSmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrWnBiR1ZNYjJGa1pYSTZJRWhVVkZBZ1UzUmhkSFZ6SURBZ2NtVmpaV2wyWldRdUlpa3NJSFI1Y0dWdlppQlNaV0ZrWVdKc1pWTjBjbVZoYlNBK0lDSjFJaUI4ZkNCaExtSnZaSGt1WjJWMFVtVmhaR1Z5SUQwOVBTQjJiMmxrSURBcElISmxkSFZ5YmlCaE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCMGJsdGxYU3dnWXlBOUlHRXVZbTlrZVM1blpYUlNaV0ZrWlhJb0tTd2dhQ0E5SUdFdWFHVmhaR1Z5Y3k1blpYUW9Ja052Ym5SbGJuUXRUR1Z1WjNSb0lpa3NJSFVnUFNCb0lEOGdjR0Z5YzJWSmJuUW9hQ2tnT2lBd0xDQmtJRDBnZFNBaFBUMGdNQ3dnWmlBOUlEQXNJRzBnUFNCdVpYY2dVbVZoWkdGaWJHVlRkSEpsWVcwb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKMElDaDRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFlvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnZGlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR011Y21WaFpDZ3BMblJvWlc0b0tIc2daRzl1WlRvZ1p5QXNJSFpoYkhWbE9pQndJQ0I5S1QwK2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaG5LU0I0TG1Oc2IzTmxLQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWWdLejBnY0M1aWVYUmxUR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWHlBOUlHNWxkeUJRY205bmNtVnpjMFYyWlc1MEtDSndjbTluY21WemN5SXNJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxibWQwYUVOdmJYQjFkR0ZpYkdVNklHUXNDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc2IyRmtaV1E2SUdZc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjNSaGJEb2dkUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCNUlEMGdNQ3dnWWlBOUlHd3ViR1Z1WjNSb095QjVJRHdnWWpzZ2VTc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JCSUQwZ2JGdDVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFRXViMjVRY205bmNtVnpjeUFtSmlCQkxtOXVVSEp2WjNKbGMzTW9YeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2VDNWxibkYxWlhWbEtIQXBMQ0IyS0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ1VtVnpjRzl1YzJVb2JTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwYUhKdmR5QkZjbkp2Y2loZ1ptVjBZMmdnWm05eUlDSWtlMkV1ZFhKc2ZTSWdjbVZ6Y0c5dVpHVmtJSGRwZEdnZ0pIdGhMbk4wWVhSMWMzMDZJQ1I3WVM1emRHRjBkWE5VWlhoMGZXQXBPd29nSUNBZ0lDQWdJSDBwTG5Sb1pXNG9LR0VwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaDBhR2x6TG5KbGMzQnZibk5sVkhsd1pTbDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKaGNuSmhlV0oxWm1abGNpSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1WVhKeVlYbENkV1ptWlhJb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW1Kc2IySWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJoTG1Kc2IySW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltUnZZM1Z0Wlc1MElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZUzUwWlhoMEtDa3VkR2hsYmlnb2JDazlQbTVsZHlCRVQwMVFZWEp6WlhJb0tTNXdZWEp6WlVaeWIyMVRkSEpwYm1jb2JDd2dkR2hwY3k1dGFXMWxWSGx3WlNrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpYW5OdmJpSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR0V1YW5OdmJpZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZUzUwWlhoMEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUtTNTBhR1Z1S0NoaEtUMCtld29nSUNBZ0lDQWdJQ0FnSUNCT2FTNWhaR1FvWlN3Z1lTazdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEc1YlpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0IwYmx0bFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUd3dWJHVnVaM1JvT3lCaklEd2dhRHNnWXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JGdGpYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFV1YjI1TWIyRmtJQ1ltSUhVdWIyNU1iMkZrS0dFcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrdVkyRjBZMmdvS0dFcFBUNTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEc1YlpWMDdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHNJRDA5UFNCMmIybGtJREFwSUhSb2NtOTNJSFJvYVhNdWJXRnVZV2RsY2k1cGRHVnRSWEp5YjNJb1pTa3NJR0U3Q2lBZ0lDQWdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGJsdGxYVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNQ3dnYUNBOUlHd3ViR1Z1WjNSb095QmpJRHdnYURzZ1l5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdiRnRqWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhVdWIyNUZjbkp2Y2lBbUppQjFMbTl1UlhKeWIzSW9ZU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXRZVzVoWjJWeUxtbDBaVzFGY25KdmNpaGxLVHNLSUNBZ0lDQWdJQ0I5S1M1bWFXNWhiR3g1S0NncFBUNTdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBwTENCMGFHbHpMbTFoYm1GblpYSXVhWFJsYlZOMFlYSjBLR1VwT3dvZ0lDQWdmUW9nSUNBZ2MyVjBVbVZ6Y0c5dWMyVlVlWEJsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WlhOd2IyNXpaVlI1Y0dVZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVFdsdFpWUjVjR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYldWVWVYQmxJRDBnWlN3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnWTNrZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUdKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXBPd29nSUNBZ2ZRb2dJQ0FnYkc5aFpDaGxMQ0IwTENCdUxDQnBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0IwYUdsekxDQnZJRDBnYm1WM0lGbDBLSFJvYVhNdWJXRnVZV2RsY2lrN0NpQWdJQ0FnSUNBZ2J5NXpaWFJRWVhSb0tIUm9hWE11Y0dGMGFDa3NJRzh1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTENCdkxuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aDBhR2x6TG5kcGRHaERjbVZrWlc1MGFXRnNjeWtzSUc4dWJHOWhaQ2hsTENCbWRXNWpkR2x2YmloaEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSeWVTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBLSEl1Y0dGeWMyVW9TbE5QVGk1d1lYSnpaU2hoS1NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElEOGdhU2hzS1NBNklHTnZibk52YkdVdVpYSnliM0lvYkNrc0lISXViV0Z1WVdkbGNpNXBkR1Z0UlhKeWIzSW9aU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJSEJoY25ObEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQTdJRzRnUENCbExteGxibWQwYURzZ2Jpc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCTWNpNXdZWEp6WlNobFcyNWRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDNXdkWE5vS0drcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2REc0tJQ0FnSUgwS2ZTd2dhSGtnUFNCamJHRnpjeUJsZUhSbGJtUnpJR0owSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVcE93b2dJQ0FnZlFvZ0lDQWdiRzloWkNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBhR2x6TENCdklEMGdXMTBzSUdFZ1BTQnVaWGNnZG1Fc0lHd2dQU0J1WlhjZ1dYUW9kR2hwY3k1dFlXNWhaMlZ5S1RzS0lDQWdJQ0FnSUNCc0xuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tTd2diQzV6WlhSU1pYTndiMjV6WlZSNWNHVW9JbUZ5Y21GNVluVm1abVZ5SWlrc0lHd3VjMlYwVW1WeGRXVnpkRWhsWVdSbGNpaDBhR2x6TG5KbGNYVmxjM1JJWldGa1pYSXBMQ0JzTG5ObGRGZHBkR2hEY21Wa1pXNTBhV0ZzY3loeUxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrN0NpQWdJQ0FnSUNBZ2JHVjBJR01nUFNBd093b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHZ29kU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNMbXh2WVdRb1pWdDFYU3dnWm5WdVkzUnBiMjRvWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCeUxuQmhjbk5sS0dRc0lDRXdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzliZFYwZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJR1l1ZDJsa2RHZ3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJtTG1obGFXZG9kQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSnRZWFE2SUdZdVptOXliV0YwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMXBjRzFoY0hNNklHWXViV2x3YldGd2N3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2dZeUFyUFNBeExDQmpJRDA5UFNBMklDWW1JQ2htTG0xcGNHMWhjRU52ZFc1MElEMDlQU0F4SUNZbUlDaGhMbTFwYmtacGJIUmxjaUE5SUhSMEtTd2dZUzVwYldGblpTQTlJRzhzSUdFdVptOXliV0YwSUQwZ1ppNW1iM0p0WVhRc0lHRXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2dkQ0FtSmlCMEtHRXBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHVXBLU0JtYjNJb2JHVjBJSFVnUFNBd0xDQmtJRDBnWlM1c1pXNW5kR2c3SUhVZ1BDQmtPeUFySzNVcGFDaDFLVHNLSUNBZ0lDQWdJQ0JsYkhObElHd3ViRzloWkNobExDQm1kVzVqZEdsdmJpaDFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2NpNXdZWEp6WlNoMUxDQWhNQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrTG1selEzVmlaVzFoY0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCa0xtMXBjRzFoY0hNdWJHVnVaM1JvSUM4Z1pDNXRhWEJ0WVhCRGIzVnVkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiU0E5SURBN0lHMGdQQ0JtT3lCdEt5c3Bld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5YmJWMGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFwY0cxaGNITTZJRnRkQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSGdnUFNBd095QjRJRHdnWkM1dGFYQnRZWEJEYjNWdWREc2dlQ3NyS1c5YmJWMHViV2x3YldGd2N5NXdkWE5vS0dRdWJXbHdiV0Z3YzF0dElDb2daQzV0YVhCdFlYQkRiM1Z1ZENBcklIaGRLU3dnYjF0dFhTNW1iM0p0WVhRZ1BTQmtMbVp2Y20xaGRDd2diMXR0WFM1M2FXUjBhQ0E5SUdRdWQybGtkR2dzSUc5YmJWMHVhR1ZwWjJoMElEMGdaQzVvWldsbmFIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhMbWx0WVdkbElEMGdienNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdFdWFXMWhaMlV1ZDJsa2RHZ2dQU0JrTG5kcFpIUm9MQ0JoTG1sdFlXZGxMbWhsYVdkb2RDQTlJR1F1YUdWcFoyaDBMQ0JoTG0xcGNHMWhjSE1nUFNCa0xtMXBjRzFoY0hNN0NpQWdJQ0FnSUNBZ0lDQWdJR1F1Yldsd2JXRndRMjkxYm5RZ1BUMDlJREVnSmlZZ0tHRXViV2x1Um1sc2RHVnlJRDBnZEhRcExDQmhMbVp2Y20xaGRDQTlJR1F1Wm05eWJXRjBMQ0JoTG01bFpXUnpWWEJrWVhSbElEMGdJVEFzSUhRZ0ppWWdkQ2hoS1RzS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWVRzS0lDQWdJSDBLZlN3Z1VuSWdQU0JqYkdGemN5QmxlSFJsYm1SeklHSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VwT3dvZ0lDQWdmUW9nSUNBZ2JHOWhaQ2hsTENCMExDQnVMQ0JwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3WVhSb0lDRTlQU0IyYjJsa0lEQWdKaVlnS0dVZ1BTQjBhR2x6TG5CaGRHZ2dLeUJsS1N3Z1pTQTlJSFJvYVhNdWJXRnVZV2RsY2k1eVpYTnZiSFpsVlZKTUtHVXBPd29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRTVwTG1kbGRDaGxLVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjaTV0WVc1aFoyVnlMbWwwWlcxVGRHRnlkQ2hsS1N3Z2MyVjBWR2x0Wlc5MWRDaG1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQW1KaUIwS0c4cExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5TENBd0tTd2dienNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSEZ6S0NKcGJXY2lLVHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJzS0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JvS0Nrc0lFNXBMbUZrWkNobExDQjBhR2x6S1N3Z2RDQW1KaUIwS0hSb2FYTXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1l5aDFLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHZ29LU3dnYVNBbUppQnBLSFVwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ5Y205eUtHVXBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1lTNXlaVzF2ZG1WRmRtVnVkRXhwYzNSbGJtVnlLQ0pzYjJGa0lpd2diQ3dnSVRFcExDQmhMbkpsYlc5MlpVVjJaVzUwVEdsemRHVnVaWElvSW1WeWNtOXlJaXdnWXl3Z0lURXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pzYjJGa0lpd2diQ3dnSVRFcExDQmhMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbVZ5Y205eUlpd2dZeXdnSVRFcExDQmxMbk4xWW5OMGNpZ3dMQ0ExS1NBaFBUMGdJbVJoZEdFNklpQW1KaUIwYUdsekxtTnliM056VDNKcFoybHVJQ0U5UFNCMmIybGtJREFnSmlZZ0tHRXVZM0p2YzNOUGNtbG5hVzRnUFNCMGFHbHpMbU55YjNOelQzSnBaMmx1S1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLU3dnWVM1emNtTWdQU0JsTENCaE93b2dJQ0FnZlFwOUxDQkdhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUJyYVN3Z2J5QTlJRzVsZHlCU2NpaDBhR2x6TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUc4dWMyVjBRM0p2YzNOUGNtbG5hVzRvZEdocGN5NWpjbTl6YzA5eWFXZHBiaWtzSUc4dWMyVjBVR0YwYUNoMGFHbHpMbkJoZEdncE93b2dJQ0FnSUNBZ0lHeGxkQ0JoSUQwZ01Ec0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnNLR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdieTVzYjJGa0tHVmJZMTBzSUdaMWJtTjBhVzl1S0dncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISXVhVzFoWjJWelcyTmRJRDBnYUN3Z1lTc3JMQ0JoSUQwOVBTQTJJQ1ltSUNoeUxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUWdKaVlnZENoeUtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwc0lIWnZhV1FnTUN3Z2FTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBN0lHTWdQQ0JsTG14bGJtZDBhRHNnS3l0aktXd29ZeWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSEk3Q2lBZ0lDQjlDbjBzSUU1b0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUc1bGR5QnhiaXdnWVNBOUlHNWxkeUJaZENoMGFHbHpMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmhMbk5sZEZKbGMzQnZibk5sVkhsd1pTZ2lZWEp5WVhsaWRXWm1aWElpS1N3Z1lTNXpaWFJTWlhGMVpYTjBTR1ZoWkdWeUtIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpa3NJR0V1YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwTENCaExuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aHlMbmRwZEdoRGNtVmtaVzUwYVdGc2N5a3NJR0V1Ykc5aFpDaGxMQ0JtZFc1amRHbHZiaWhzS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdjaTV3WVhKelpTaHNLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lXTWdmSHdnS0dNdWFXMWhaMlVnSVQwOUlIWnZhV1FnTUNBL0lHOHVhVzFoWjJVZ1BTQmpMbWx0WVdkbElEb2dZeTVrWVhSaElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWFXMWhaMlV1ZDJsa2RHZ2dQU0JqTG5kcFpIUm9MQ0J2TG1sdFlXZGxMbWhsYVdkb2RDQTlJR011YUdWcFoyaDBMQ0J2TG1sdFlXZGxMbVJoZEdFZ1BTQmpMbVJoZEdFcExDQnZMbmR5WVhCVElEMGdZeTUzY21Gd1V5QWhQVDBnZG05cFpDQXdJRDhnWXk1M2NtRndVeUE2SUhaMExDQnZMbmR5WVhCVUlEMGdZeTUzY21Gd1ZDQWhQVDBnZG05cFpDQXdJRDhnWXk1M2NtRndWQ0E2SUhaMExDQnZMbTFoWjBacGJIUmxjaUE5SUdNdWJXRm5SbWxzZEdWeUlDRTlQU0IyYjJsa0lEQWdQeUJqTG0xaFowWnBiSFJsY2lBNklIUjBMQ0J2TG0xcGJrWnBiSFJsY2lBOUlHTXViV2x1Um1sc2RHVnlJQ0U5UFNCMmIybGtJREFnUHlCakxtMXBia1pwYkhSbGNpQTZJSFIwTENCdkxtRnVhWE52ZEhKdmNIa2dQU0JqTG1GdWFYTnZkSEp2Y0hrZ0lUMDlJSFp2YVdRZ01DQS9JR011WVc1cGMyOTBjbTl3ZVNBNklERXNJR011Wlc1amIyUnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTVsYm1OdlpHbHVaeUE5SUdNdVpXNWpiMlJwYm1jcExDQmpMbVpzYVhCWklDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dVpteHBjRmtnUFNCakxtWnNhWEJaS1N3Z1l5NW1iM0p0WVhRZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1bWIzSnRZWFFnUFNCakxtWnZjbTFoZENrc0lHTXVkSGx3WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG5SNWNHVWdQU0JqTG5SNWNHVXBMQ0JqTG0xcGNHMWhjSE1nSVQwOUlIWnZhV1FnTUNBbUppQW9ieTV0YVhCdFlYQnpJRDBnWXk1dGFYQnRZWEJ6TENCdkxtMXBia1pwYkhSbGNpQTlJRlZwS1N3Z1l5NXRhWEJ0WVhCRGIzVnVkQ0E5UFQwZ01TQW1KaUFvYnk1dGFXNUdhV3gwWlhJZ1BTQjBkQ2tzSUdNdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1WjJWdVpYSmhkR1ZOYVhCdFlYQnpJRDBnWXk1blpXNWxjbUYwWlUxcGNHMWhjSE1wTENCdkxtNWxaV1J6VlhCa1lYUmxJRDBnSVRBc0lIUWdKaVlnZENodkxDQmpLU2s3Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2tzSUc4N0NpQWdJQ0I5Q24wc0lFSm9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJSDBLSUNBZ0lHeHZZV1FvWlN3Z2RDd2diaXdnYVNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJRzkwTENCdklEMGdibVYzSUZKeUtIUm9hWE11YldGdVlXZGxjaWs3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzh1YzJWMFEzSnZjM05QY21sbmFXNG9kR2hwY3k1amNtOXpjMDl5YVdkcGJpa3NJRzh1YzJWMFVHRjBhQ2gwYUdsekxuQmhkR2dwTENCdkxteHZZV1FvWlN3Z1puVnVZM1JwYjI0b1lTa2dld29nSUNBZ0lDQWdJQ0FnSUNCeUxtbHRZV2RsSUQwZ1lTd2djaTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwSUNFOVBTQjJiMmxrSURBZ0ppWWdkQ2h5S1RzS0lDQWdJQ0FnSUNCOUxDQnVMQ0JwS1N3Z2Nqc0tJQ0FnSUgwS2ZTd2dRblFnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSk1hV2RvZENJc0lIUm9hWE11WTI5c2IzSWdQU0J1WlhjZ1lXVW9aU2tzSUhSb2FYTXVhVzUwWlc1emFYUjVJRDBnZERzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdVkyOXNiM0l1WTI5d2VTaGxMbU52Ykc5eUtTd2dkR2hwY3k1cGJuUmxibk5wZEhrZ1BTQmxMbWx1ZEdWdWMybDBlU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6ZFhCbGNpNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXViMkpxWldOMExtTnZiRzl5SUQwZ2RHaHBjeTVqYjJ4dmNpNW5aWFJJWlhnb0tTd2dkQzV2WW1wbFkzUXVhVzUwWlc1emFYUjVJRDBnZEdocGN5NXBiblJsYm5OcGRIa3NJSFJvYVhNdVozSnZkVzVrUTI5c2IzSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2RDNXZZbXBsWTNRdVozSnZkVzVrUTI5c2IzSWdQU0IwYUdsekxtZHliM1Z1WkVOdmJHOXlMbWRsZEVobGVDZ3BLU3dnZEdocGN5NWthWE4wWVc1alpTQWhQVDBnZG05cFpDQXdJQ1ltSUNoMExtOWlhbVZqZEM1a2FYTjBZVzVqWlNBOUlIUm9hWE11WkdsemRHRnVZMlVwTENCMGFHbHpMbUZ1WjJ4bElDRTlQU0IyYjJsa0lEQWdKaVlnS0hRdWIySnFaV04wTG1GdVoyeGxJRDBnZEdocGN5NWhibWRzWlNrc0lIUm9hWE11WkdWallYa2dJVDA5SUhadmFXUWdNQ0FtSmlBb2RDNXZZbXBsWTNRdVpHVmpZWGtnUFNCMGFHbHpMbVJsWTJGNUtTd2dkR2hwY3k1d1pXNTFiV0p5WVNBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwTG05aWFtVmpkQzV3Wlc1MWJXSnlZU0E5SUhSb2FYTXVjR1Z1ZFcxaWNtRXBMQ0IwYUdsekxuTm9ZV1J2ZHlBaFBUMGdkbTlwWkNBd0lDWW1JQ2gwTG05aWFtVmpkQzV6YUdGa2IzY2dQU0IwYUdsekxuTm9ZV1J2ZHk1MGIwcFRUMDRvS1Nrc0lIUTdDaUFnSUNCOUNuMDdDa0owTG5CeWIzUnZkSGx3WlM1cGMweHBaMmgwSUQwZ0lUQTdDblpoY2lCVllTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ1FuUWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU3dnZEN3Z2JpbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2diaWs3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lraGxiV2x6Y0dobGNtVk1hV2RvZENJc0lIUm9hWE11Y0c5emFYUnBiMjR1WTI5d2VTaE9aUzVFWldaaGRXeDBWWEFwTENCMGFHbHpMblZ3WkdGMFpVMWhkSEpwZUNncExDQjBhR2x6TG1keWIzVnVaRU52Ykc5eUlEMGdibVYzSUdGbEtIUXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRUowTG5CeWIzUnZkSGx3WlM1amIzQjVMbU5oYkd3b2RHaHBjeXdnWlNrc0lIUm9hWE11WjNKdmRXNWtRMjlzYjNJdVkyOXdlU2hsTG1keWIzVnVaRU52Ykc5eUtTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1ZXRXVjSEp2ZEc5MGVYQmxMbWx6U0dWdGFYTndhR1Z5WlV4cFoyaDBJRDBnSVRBN0NuWmhjaUJmWXlBOUlHNWxkeUJ3WlN3Z1RXTWdQU0J1WlhjZ1RTd2dZbU1nUFNCdVpYY2dUU3dnYlc4Z1BTQmpiR0Z6Y3lCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OaGJXVnlZU0E5SUdVc0lIUm9hWE11WW1saGN5QTlJREFzSUhSb2FYTXVibTl5YldGc1FtbGhjeUE5SURBc0lIUm9hWE11Y21Ga2FYVnpJRDBnTVN3Z2RHaHBjeTVpYkhWeVUyRnRjR3hsY3lBOUlEZ3NJSFJvYVhNdWJXRndVMmw2WlNBOUlHNWxkeUJZS0RVeE1pd2dOVEV5S1N3Z2RHaHBjeTV0WVhBZ1BTQnVkV3hzTENCMGFHbHpMbTFoY0ZCaGMzTWdQU0J1ZFd4c0xDQjBhR2x6TG0xaGRISnBlQ0E5SUc1bGR5QndaU3dnZEdocGN5NWhkWFJ2VlhCa1lYUmxJRDBnSVRBc0lIUm9hWE11Ym1WbFpITlZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWZabkoxYzNSMWJTQTlJRzVsZHlCRWNpd2dkR2hwY3k1ZlpuSmhiV1ZGZUhSbGJuUnpJRDBnYm1WM0lGZ29NU3dnTVNrc0lIUm9hWE11WDNacFpYZHdiM0owUTI5MWJuUWdQU0F4TENCMGFHbHpMbDkyYVdWM2NHOXlkSE1nUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCV1pTZ3dMQ0F3TENBeExDQXhLUW9nSUNBZ0lDQWdJRjA3Q2lBZ0lDQjlDaUFnSUNCblpYUldhV1YzY0c5eWRFTnZkVzUwS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDkyYVdWM2NHOXlkRU52ZFc1ME93b2dJQ0FnZlFvZ0lDQWdaMlYwUm5KMWMzUjFiU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZabkoxYzNSMWJUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpVMWhkSEpwWTJWektHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVkyRnRaWEpoTENCdUlEMGdkR2hwY3k1dFlYUnlhWGc3Q2lBZ0lDQWdJQ0FnVFdNdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLR1V1YldGMGNtbDRWMjl5YkdRcExDQjBMbkJ2YzJsMGFXOXVMbU52Y0hrb1RXTXBMQ0JpWXk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9aUzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCMExteHZiMnRCZENoaVl5a3NJSFF1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z1gyTXViWFZzZEdsd2JIbE5ZWFJ5YVdObGN5aDBMbkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ3NJSFF1YldGMGNtbDRWMjl5YkdSSmJuWmxjbk5sS1N3Z2RHaHBjeTVmWm5KMWMzUjFiUzV6WlhSR2NtOXRVSEp2YW1WamRHbHZiazFoZEhKcGVDaGZZeWtzSUc0dWMyVjBLQzQxTENBd0xDQXdMQ0F1TlN3Z01Dd2dMalVzSURBc0lDNDFMQ0F3TENBd0xDQXVOU3dnTGpVc0lEQXNJREFzSURBc0lERXBMQ0J1TG0xMWJIUnBjR3g1S0hRdWNISnZhbVZqZEdsdmJrMWhkSEpwZUNrc0lHNHViWFZzZEdsd2JIa29kQzV0WVhSeWFYaFhiM0pzWkVsdWRtVnljMlVwT3dvZ0lDQWdmUW9nSUNBZ1oyVjBWbWxsZDNCdmNuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOTJhV1YzY0c5eWRITmJaVjA3Q2lBZ0lDQjlDaUFnSUNCblpYUkdjbUZ0WlVWNGRHVnVkSE1vS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMlp5WVcxbFJYaDBaVzUwY3pzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlYQWdKaVlnZEdocGN5NXRZWEF1WkdsemNHOXpaU2dwTENCMGFHbHpMbTFoY0ZCaGMzTWdKaVlnZEdocGN5NXRZWEJRWVhOekxtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OaGJXVnlZU0E5SUdVdVkyRnRaWEpoTG1Oc2IyNWxLQ2tzSUhSb2FYTXVZbWxoY3lBOUlHVXVZbWxoY3l3Z2RHaHBjeTV5WVdScGRYTWdQU0JsTG5KaFpHbDFjeXdnZEdocGN5NXRZWEJUYVhwbExtTnZjSGtvWlM1dFlYQlRhWHBsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOc2IyNWxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2RHaHBjeTVqYjI1emRISjFZM1J2Y2lncExtTnZjSGtvZEdocGN5azdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0I3ZlRzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWlhV0Z6SUNFOVBTQXdJQ1ltSUNobExtSnBZWE1nUFNCMGFHbHpMbUpwWVhNcExDQjBhR2x6TG01dmNtMWhiRUpwWVhNZ0lUMDlJREFnSmlZZ0tHVXVibTl5YldGc1FtbGhjeUE5SUhSb2FYTXVibTl5YldGc1FtbGhjeWtzSUhSb2FYTXVjbUZrYVhWeklDRTlQU0F4SUNZbUlDaGxMbkpoWkdsMWN5QTlJSFJvYVhNdWNtRmthWFZ6S1N3Z0tIUm9hWE11YldGd1UybDZaUzU0SUNFOVBTQTFNVElnZkh3Z2RHaHBjeTV0WVhCVGFYcGxMbmtnSVQwOUlEVXhNaWtnSmlZZ0tHVXViV0Z3VTJsNlpTQTlJSFJvYVhNdWJXRndVMmw2WlM1MGIwRnljbUY1S0NrcExDQmxMbU5oYldWeVlTQTlJSFJvYVhNdVkyRnRaWEpoTG5SdlNsTlBUaWdoTVNrdWIySnFaV04wTENCa1pXeGxkR1VnWlM1allXMWxjbUV1YldGMGNtbDRMQ0JsT3dvZ0lDQWdmUXA5TENCUFlTQTlJR05zWVhOeklHVjRkR1Z1WkhNZ2JXOGdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHVaWGNnZFhRb05UQXNJREVzSUM0MUxDQTFNREFwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbVp2WTNWeklEMGdNVHNLSUNBZ0lIMEtJQ0FnSUhWd1pHRjBaVTFoZEhKcFkyVnpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVZMkZ0WlhKaExDQnVJRDBnWkhJZ0tpQXlJQ29nWlM1aGJtZHNaU0FxSUhSb2FYTXVabTlqZFhNc0lHa2dQU0IwYUdsekxtMWhjRk5wZW1VdWQybGtkR2dnTHlCMGFHbHpMbTFoY0ZOcGVtVXVhR1ZwWjJoMExDQnlJRDBnWlM1a2FYTjBZVzVqWlNCOGZDQjBMbVpoY2pzS0lDQWdJQ0FnSUNBb2JpQWhQVDBnZEM1bWIzWWdmSHdnYVNBaFBUMGdkQzVoYzNCbFkzUWdmSHdnY2lBaFBUMGdkQzVtWVhJcElDWW1JQ2gwTG1admRpQTlJRzRzSUhRdVlYTndaV04wSUQwZ2FTd2dkQzVtWVhJZ1BTQnlMQ0IwTG5Wd1pHRjBaVkJ5YjJwbFkzUnBiMjVOWVhSeWFYZ29LU2tzSUhOMWNHVnlMblZ3WkdGMFpVMWhkSEpwWTJWektHVXBPd29nSUNBZ2ZRb2dJQ0FnWTI5d2VTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSE4xY0dWeUxtTnZjSGtvWlNrc0lIUm9hWE11Wm05amRYTWdQU0JsTG1adlkzVnpMQ0IwYUdsek93b2dJQ0FnZlFwOU93cFBZUzV3Y205MGIzUjVjR1V1YVhOVGNHOTBUR2xuYUhSVGFHRmtiM2NnUFNBaE1Ec0tkbUZ5SUVoaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCQ2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdNQ3dnYVNBOUlFMWhkR2d1VUVrZ0x5QXpMQ0J5SUQwZ01Dd2dieUE5SURFcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0dVc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWRIbHdaU0E5SUNKVGNHOTBUR2xuYUhRaUxDQjBhR2x6TG5CdmMybDBhVzl1TG1OdmNIa29UbVV1UkdWbVlYVnNkRlZ3S1N3Z2RHaHBjeTUxY0dSaGRHVk5ZWFJ5YVhnb0tTd2dkR2hwY3k1MFlYSm5aWFFnUFNCdVpYY2dUbVVzSUhSb2FYTXVaR2x6ZEdGdVkyVWdQU0J1TENCMGFHbHpMbUZ1WjJ4bElEMGdhU3dnZEdocGN5NXdaVzUxYldKeVlTQTlJSElzSUhSb2FYTXVaR1ZqWVhrZ1BTQnZMQ0IwYUdsekxuTm9ZV1J2ZHlBOUlHNWxkeUJQWVRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0J3YjNkbGNpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJuUmxibk5wZEhrZ0tpQk5ZWFJvTGxCSk93b2dJQ0FnZlFvZ0lDQWdjMlYwSUhCdmQyVnlLR1VwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbWx1ZEdWdWMybDBlU0E5SUdVZ0x5Qk5ZWFJvTGxCSk93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuTm9ZV1J2ZHk1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzVndaWEl1WTI5d2VTaGxLU3dnZEdocGN5NWthWE4wWVc1alpTQTlJR1V1WkdsemRHRnVZMlVzSUhSb2FYTXVZVzVuYkdVZ1BTQmxMbUZ1WjJ4bExDQjBhR2x6TG5CbGJuVnRZbkpoSUQwZ1pTNXdaVzUxYldKeVlTd2dkR2hwY3k1a1pXTmhlU0E5SUdVdVpHVmpZWGtzSUhSb2FYTXVkR0Z5WjJWMElEMGdaUzUwWVhKblpYUXVZMnh2Ym1Vb0tTd2dkR2hwY3k1emFHRmtiM2NnUFNCbExuTm9ZV1J2ZHk1amJHOXVaU2dwTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BJWVM1d2NtOTBiM1I1Y0dVdWFYTlRjRzkwVEdsbmFIUWdQU0FoTURzS2RtRnlJSGRqSUQwZ2JtVjNJSEJsTENCdWNpQTlJRzVsZHlCTkxDQnFieUE5SUc1bGR5Qk5MQ0JyWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYlc4Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dkWFFvT1RBc0lERXNJQzQxTENBMU1EQXBLVHNLSUNBZ0lDQWdJQ0IwYUdsekxsOW1jbUZ0WlVWNGRHVnVkSE1nUFNCdVpYY2dXQ2cwTENBeUtTd2dkR2hwY3k1ZmRtbGxkM0J2Y25SRGIzVnVkQ0E5SURZc0lIUm9hWE11WDNacFpYZHdiM0owY3lBOUlGc0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lGWmxLRElzSURFc0lERXNJREVwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVm1Vb01Dd2dNU3dnTVN3Z01Ta3NDaUFnSUNBZ0lDQWdJQ0FnSUc1bGR5QldaU2d6TENBeExDQXhMQ0F4S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUZabEtERXNJREVzSURFc0lERXBMQW9nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dWbVVvTXl3Z01Dd2dNU3dnTVNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCV1pTZ3hMQ0F3TENBeExDQXhLUW9nSUNBZ0lDQWdJRjBzSUhSb2FYTXVYMk4xWW1WRWFYSmxZM1JwYjI1eklEMGdXd29nSUNBZ0lDQWdJQ0FnSUNCdVpYY2dUU2d4TENBd0xDQXdLU3dLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTFRFc0lEQXNJREFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVFNnd0xDQXdMQ0F4S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Dd2dNQ3dnTFRFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3dMQ0F4TENBd0tTd0tJQ0FnSUNBZ0lDQWdJQ0FnYm1WM0lFMG9NQ3dnTFRFc0lEQXBDaUFnSUNBZ0lDQWdYU3dnZEdocGN5NWZZM1ZpWlZWd2N5QTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JtVjNJRTBvTUN3Z01Td2dNQ2tzQ2lBZ0lDQWdJQ0FnSUNBZ0lHNWxkeUJOS0RBc0lERXNJREFwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnVaWGNnVFNnd0xDQXhMQ0F3S1N3S0lDQWdJQ0FnSUNBZ0lDQWdibVYzSUUwb01Dd2dNU3dnTUNrc0NpQWdJQ0FnSUNBZ0lDQWdJRzVsZHlCTktEQXNJREFzSURFcExBb2dJQ0FnSUNBZ0lDQWdJQ0J1WlhjZ1RTZ3dMQ0F3TENBdE1Ta0tJQ0FnSUNBZ0lDQmRPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21salpYTW9aU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyRnRaWEpoTENCcElEMGdkR2hwY3k1dFlYUnlhWGdzSUhJZ1BTQmxMbVJwYzNSaGJtTmxJSHg4SUc0dVptRnlPd29nSUNBZ0lDQWdJSElnSVQwOUlHNHVabUZ5SUNZbUlDaHVMbVpoY2lBOUlISXNJRzR1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BLU3dnYm5JdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLR1V1YldGMGNtbDRWMjl5YkdRcExDQnVMbkJ2YzJsMGFXOXVMbU52Y0hrb2JuSXBMQ0JxYnk1amIzQjVLRzR1Y0c5emFYUnBiMjRwTENCcWJ5NWhaR1FvZEdocGN5NWZZM1ZpWlVScGNtVmpkR2x2Ym5OYmRGMHBMQ0J1TG5Wd0xtTnZjSGtvZEdocGN5NWZZM1ZpWlZWd2MxdDBYU2tzSUc0dWJHOXZhMEYwS0dwdktTd2diaTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwTENCcExtMWhhMlZVY21GdWMyeGhkR2x2YmlndGJuSXVlQ3dnTFc1eUxua3NJQzF1Y2k1NktTd2dkMk11YlhWc2RHbHdiSGxOWVhSeWFXTmxjeWh1TG5CeWIycGxZM1JwYjI1TllYUnlhWGdzSUc0dWJXRjBjbWw0VjI5eWJHUkpiblpsY25ObEtTd2dkR2hwY3k1ZlpuSjFjM1IxYlM1elpYUkdjbTl0VUhKdmFtVmpkR2x2YmsxaGRISnBlQ2gzWXlrN0NpQWdJQ0I5Q24wN0NtdGhMbkJ5YjNSdmRIbHdaUzVwYzFCdmFXNTBUR2xuYUhSVGFHRmtiM2NnUFNBaE1Ec0tkbUZ5SUVkaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCQ2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdNQ3dnYVNBOUlERXBld29nSUNBZ0lDQWdJSE4xY0dWeUtHVXNJSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSlFiMmx1ZEV4cFoyaDBJaXdnZEdocGN5NWthWE4wWVc1alpTQTlJRzRzSUhSb2FYTXVaR1ZqWVhrZ1BTQnBMQ0IwYUdsekxuTm9ZV1J2ZHlBOUlHNWxkeUJyWVRzS0lDQWdJSDBLSUNBZ0lHZGxkQ0J3YjNkbGNpZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGJuUmxibk5wZEhrZ0tpQTBJQ29nVFdGMGFDNVFTVHNLSUNBZ0lIMEtJQ0FnSUhObGRDQndiM2RsY2lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1cGJuUmxibk5wZEhrZ1BTQmxJQzhnS0RRZ0tpQk5ZWFJvTGxCSktUc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NXphR0ZrYjNjdVpHbHpjRzl6WlNncE93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXVaR2x6ZEdGdVkyVWdQU0JsTG1ScGMzUmhibU5sTENCMGFHbHpMbVJsWTJGNUlEMGdaUzVrWldOaGVTd2dkR2hwY3k1emFHRmtiM2NnUFNCbExuTm9ZV1J2ZHk1amJHOXVaU2dwTENCMGFHbHpPd29nSUNBZ2ZRcDlPd3BIWVM1d2NtOTBiM1I1Y0dVdWFYTlFiMmx1ZEV4cFoyaDBJRDBnSVRBN0NuWmhjaUJXWVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nYlc4Z2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lodVpYY2dSbklvTFRVc0lEVXNJRFVzSUMwMUxDQXVOU3dnTlRBd0tTazdDaUFnSUNCOUNuMDdDbFpoTG5CeWIzUnZkSGx3WlM1cGMwUnBjbVZqZEdsdmJtRnNUR2xuYUhSVGFHRmtiM2NnUFNBaE1Ec0tkbUZ5SUZkaElEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCQ2RDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpUkdseVpXTjBhVzl1WVd4TWFXZG9kQ0lzSUhSb2FYTXVjRzl6YVhScGIyNHVZMjl3ZVNoT1pTNUVaV1poZFd4MFZYQXBMQ0IwYUdsekxuVndaR0YwWlUxaGRISnBlQ2dwTENCMGFHbHpMblJoY21kbGRDQTlJRzVsZHlCT1pTd2dkR2hwY3k1emFHRmtiM2NnUFNCdVpYY2dWbUU3Q2lBZ0lDQjlDaUFnSUNCa2FYTndiM05sS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YzJoaFpHOTNMbVJwYzNCdmMyVW9LVHNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZFhCbGNpNWpiM0I1S0dVcExDQjBhR2x6TG5SaGNtZGxkQ0E5SUdVdWRHRnlaMlYwTG1Oc2IyNWxLQ2tzSUhSb2FYTXVjMmhoWkc5M0lEMGdaUzV6YUdGa2IzY3VZMnh2Ym1Vb0tTd2dkR2hwY3pzS0lDQWdJSDBLZlRzS1YyRXVjSEp2ZEc5MGVYQmxMbWx6UkdseVpXTjBhVzl1WVd4TWFXZG9kQ0E5SUNFd093cDJZWElnY1dFZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVKMElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLR1VzSUhRcE93b2dJQ0FnSUNBZ0lIUm9hWE11ZEhsd1pTQTlJQ0pCYldKcFpXNTBUR2xuYUhRaU93b2dJQ0FnZlFwOU93cHhZUzV3Y205MGIzUjVjR1V1YVhOQmJXSnBaVzUwVEdsbmFIUWdQU0FoTURzS2RtRnlJRmhoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJDZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobExDQjBMQ0J1SUQwZ01UQXNJR2tnUFNBeE1DbDdDaUFnSUNBZ0lDQWdjM1Z3WlhJb1pTd2dkQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBlWEJsSUQwZ0lsSmxZM1JCY21WaFRHbG5hSFFpTENCMGFHbHpMbmRwWkhSb0lEMGdiaXdnZEdocGN5NW9aV2xuYUhRZ1BTQnBPd29nSUNBZ2ZRb2dJQ0FnWjJWMElIQnZkMlZ5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx1ZEdWdWMybDBlU0FxSUhSb2FYTXVkMmxrZEdnZ0tpQjBhR2x6TG1obGFXZG9kQ0FxSUUxaGRHZ3VVRWs3Q2lBZ0lDQjlDaUFnSUNCelpYUWdjRzkzWlhJb1pTa2dld29nSUNBZ0lDQWdJSFJvYVhNdWFXNTBaVzV6YVhSNUlEMGdaU0F2SUNoMGFHbHpMbmRwWkhSb0lDb2dkR2hwY3k1b1pXbG5hSFFnS2lCTllYUm9MbEJKS1RzS0lDQWdJSDBLSUNBZ0lHTnZjSGtvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCemRYQmxjaTVqYjNCNUtHVXBMQ0IwYUdsekxuZHBaSFJvSUQwZ1pTNTNhV1IwYUN3Z2RHaHBjeTVvWldsbmFIUWdQU0JsTG1obGFXZG9kQ3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFJ2U2xOUFRpaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0J6ZFhCbGNpNTBiMHBUVDA0b1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXViMkpxWldOMExuZHBaSFJvSUQwZ2RHaHBjeTUzYVdSMGFDd2dkQzV2WW1wbFkzUXVhR1ZwWjJoMElEMGdkR2hwY3k1b1pXbG5hSFFzSUhRN0NpQWdJQ0I5Q24wN0NsaGhMbkJ5YjNSdmRIbHdaUzVwYzFKbFkzUkJjbVZoVEdsbmFIUWdQU0FoTURzS2RtRnlJRXBoSUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbU52WldabWFXTnBaVzUwY3lBOUlGdGRPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaU0E5SURBN0lHVWdQQ0E1T3lCbEt5c3BkR2hwY3k1amIyVm1abWxqYVdWdWRITXVjSFZ6YUNodVpYY2dUU2s3Q2lBZ0lDQjlDaUFnSUNCelpYUW9aU2tnZXdvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENBNU95QjBLeXNwZEdocGN5NWpiMlZtWm1samFXVnVkSE5iZEYwdVkyOXdlU2hsVzNSZEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhwbGNtOG9LU0I3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JsSUQwZ01Ec2daU0E4SURrN0lHVXJLeWwwYUdsekxtTnZaV1ptYVdOcFpXNTBjMXRsWFM1elpYUW9NQ3dnTUN3Z01DazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCblpYUkJkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbmdzSUdrZ1BTQmxMbmtzSUhJZ1BTQmxMbm9zSUc4Z1BTQjBhR2x6TG1OdlpXWm1hV05wWlc1MGN6c0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RDNWpiM0I1S0c5Yk1GMHBMbTExYkhScGNHeDVVMk5oYkdGeUtDNHlPREl3T1RVcExDQjBMbUZrWkZOallXeGxaRlpsWTNSdmNpaHZXekZkTENBdU5EZzROakF6SUNvZ2FTa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliTWwwc0lDNDBPRGcyTURNZ0tpQnlLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzelhTd2dMalE0T0RZd015QXFJRzRwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6UmRMQ0F4TGpBNU1qVTBPQ0FxSUNodUlDb2dhU2twTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6VmRMQ0F4TGpBNU1qVTBPQ0FxSUNocElDb2djaWtwTENCMExtRmtaRk5qWVd4bFpGWmxZM1J2Y2lodld6WmRMQ0F1TXpFMU16a3lJQ29nS0RNZ0tpQnlJQ29nY2lBdElERXBLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzM1hTd2dNUzR3T1RJMU5EZ2dLaUFvYmlBcUlISXBLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzNFhTd2dMalUwTmpJM05DQXFJQ2h1SUNvZ2JpQXRJR2tnS2lCcEtTa3NJSFE3Q2lBZ0lDQjlDaUFnSUNCblpYUkpjbkpoWkdsaGJtTmxRWFFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJR3hsZENCdUlEMGdaUzU0TENCcElEMGdaUzU1TENCeUlEMGdaUzU2TENCdklEMGdkR2hwY3k1amIyVm1abWxqYVdWdWRITTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUXVZMjl3ZVNodld6QmRLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3VPRGcyTWpJM0tTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXN4WFN3Z01pQXFJQzQxTVRFMk5qUWdLaUJwS1N3Z2RDNWhaR1JUWTJGc1pXUldaV04wYjNJb2Ixc3lYU3dnTWlBcUlDNDFNVEUyTmpRZ0tpQnlLU3dnZEM1aFpHUlRZMkZzWldSV1pXTjBiM0lvYjFzelhTd2dNaUFxSUM0MU1URTJOalFnS2lCdUtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXMwWFN3Z01pQXFJQzQwTWprd05ETWdLaUJ1SUNvZ2FTa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliTlYwc0lESWdLaUF1TkRJNU1EUXpJQ29nYVNBcUlISXBMQ0IwTG1Ga1pGTmpZV3hsWkZabFkzUnZjaWh2V3paZExDQXVOelF6TVRJMUlDb2djaUFxSUhJZ0xTQXVNalEzTnpBNEtTd2dkQzVoWkdSVFkyRnNaV1JXWldOMGIzSW9iMXMzWFN3Z01pQXFJQzQwTWprd05ETWdLaUJ1SUNvZ2Npa3NJSFF1WVdSa1UyTmhiR1ZrVm1WamRHOXlLRzliT0Ywc0lDNDBNamt3TkRNZ0tpQW9iaUFxSUc0Z0xTQnBJQ29nYVNrcExDQjBPd29nSUNBZ2ZRb2dJQ0FnWVdSa0tHVXBJSHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFFnUFNBd095QjBJRHdnT1RzZ2RDc3JLWFJvYVhNdVkyOWxabVpwWTJsbGJuUnpXM1JkTG1Ga1pDaGxMbU52WldabWFXTnBaVzUwYzF0MFhTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCaFpHUlRZMkZzWldSVFNDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElEazdJRzRyS3lsMGFHbHpMbU52WldabWFXTnBaVzUwYzF0dVhTNWhaR1JUWTJGc1pXUldaV04wYjNJb1pTNWpiMlZtWm1samFXVnVkSE5iYmwwc0lIUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyTmhiR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQTVPeUIwS3lzcGRHaHBjeTVqYjJWbVptbGphV1Z1ZEhOYmRGMHViWFZzZEdsd2JIbFRZMkZzWVhJb1pTazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCc1pYSndLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3T3lCdUlEd2dPVHNnYmlzcktYUm9hWE11WTI5bFptWnBZMmxsYm5SelcyNWRMbXhsY25Bb1pTNWpiMlZtWm1samFXVnVkSE5iYmwwc0lIUXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3T3lCMElEd2dPVHNnZENzcktXbG1JQ2doZEdocGN5NWpiMlZtWm1samFXVnVkSE5iZEYwdVpYRjFZV3h6S0dVdVkyOWxabVpwWTJsbGJuUnpXM1JkS1NrZ2NtVjBkWEp1SUNFeE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlBaE1Ec0tJQ0FnSUgwS0lDQWdJR052Y0hrb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRDaGxMbU52WldabWFXTnBaVzUwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiRzl1WlNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JtVjNJSFJvYVhNdVkyOXVjM1J5ZFdOMGIzSW9LUzVqYjNCNUtIUm9hWE1wT3dvZ0lDQWdmUW9nSUNBZ1puSnZiVUZ5Y21GNUtHVXNJSFFnUFNBd0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1OdlpXWm1hV05wWlc1MGN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHa2dQU0F3T3lCcElEd2dPVHNnYVNzcktXNWJhVjB1Wm5KdmJVRnljbUY1S0dVc0lIUWdLeUJwSUNvZ015azdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMGIwRnljbUY1S0dVZ1BTQmJYU3dnZENBOUlEQXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyOWxabVpwWTJsbGJuUnpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBN0lHa2dQQ0E1T3lCcEt5c3BibHRwWFM1MGIwRnljbUY1S0dVc0lIUWdLeUJwSUNvZ015azdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVTdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdaMlYwUW1GemFYTkJkQ2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQmxMbmdzSUdrZ1BTQmxMbmtzSUhJZ1BTQmxMbm83Q2lBZ0lDQWdJQ0FnZEZzd1hTQTlJQzR5T0RJd09UVXNJSFJiTVYwZ1BTQXVORGc0TmpBeklDb2dhU3dnZEZzeVhTQTlJQzQwT0RnMk1ETWdLaUJ5TENCMFd6TmRJRDBnTGpRNE9EWXdNeUFxSUc0c0lIUmJORjBnUFNBeExqQTVNalUwT0NBcUlHNGdLaUJwTENCMFd6VmRJRDBnTVM0d09USTFORGdnS2lCcElDb2djaXdnZEZzMlhTQTlJQzR6TVRVek9USWdLaUFvTXlBcUlISWdLaUJ5SUMwZ01Ta3NJSFJiTjEwZ1BTQXhMakE1TWpVME9DQXFJRzRnS2lCeUxDQjBXemhkSUQwZ0xqVTBOakkzTkNBcUlDaHVJQ29nYmlBdElHa2dLaUJwS1RzS0lDQWdJSDBLZlRzS1NtRXVjSEp2ZEc5MGVYQmxMbWx6VTNCb1pYSnBZMkZzU0dGeWJXOXVhV056TXlBOUlDRXdPd3AyWVhJZ1NISWdQU0JqYkdGemN5QmxlSFJsYm1SeklFSjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dTbUVzSUhRZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaDJiMmxrSURBc0lIUXBPd29nSUNBZ0lDQWdJSFJvYVhNdWMyZ2dQU0JsT3dvZ0lDQWdmUW9nSUNBZ1kyOXdlU2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhOMWNHVnlMbU52Y0hrb1pTa3NJSFJvYVhNdWMyZ3VZMjl3ZVNobExuTm9LU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR1p5YjIxS1UwOU9LR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXBiblJsYm5OcGRIa2dQU0JsTG1sdWRHVnVjMmwwZVN3Z2RHaHBjeTV6YUM1bWNtOXRRWEp5WVhrb1pTNXphQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0IwYjBwVFQwNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnYzNWd1pYSXVkRzlLVTA5T0tHVXBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbTlpYW1WamRDNXphQ0E5SUhSb2FYTXVjMmd1ZEc5QmNuSmhlU2dwTENCME93b2dJQ0FnZlFwOU93cEljaTV3Y205MGIzUjVjR1V1YVhOTWFXZG9kRkJ5YjJKbElEMGdJVEE3Q25aaGNpQjZhQ0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwWlhoMGRYSmxjeUE5SUh0OU93b2dJQ0FnZlFvZ0lDQWdiRzloWkNobExDQjBMQ0J1TENCcEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBhR2x6TENCdklEMGdibVYzSUZsMEtISXViV0Z1WVdkbGNpazdDaUFnSUNBZ0lDQWdieTV6WlhSUVlYUm9LSEl1Y0dGMGFDa3NJRzh1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWh5TG5KbGNYVmxjM1JJWldGa1pYSXBMQ0J2TG5ObGRGZHBkR2hEY21Wa1pXNTBhV0ZzY3loeUxuZHBkR2hEY21Wa1pXNTBhV0ZzY3lrc0lHOHViRzloWkNobExDQm1kVzVqZEdsdmJpaGhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUnllU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwS0hJdWNHRnljMlVvU2xOUFRpNXdZWEp6WlNoaEtTa3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNoc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBJRDhnYVNoc0tTQTZJR052Ym5OdmJHVXVaWEp5YjNJb2JDa3NJSEl1YldGdVlXZGxjaTVwZEdWdFJYSnliM0lvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5TENCdUxDQnBLVHNLSUNBZ0lIMEtJQ0FnSUhCaGNuTmxLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVkR1Y0ZEhWeVpYTTdDaUFnSUNBZ0lDQWdablZ1WTNScGIyNGdiaWh5S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBXM0pkSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSbGNtbGhiRXh2WVdSbGNqb2dWVzVrWldacGJtVmtJSFJsZUhSMWNtVWlMQ0J5S1N3Z2RGdHlYVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHa2dQU0J1WlhjZ2MzbGJaUzUwZVhCbFhUc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1MWRXbGtJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkWFZwWkNBOUlHVXVkWFZwWkNrc0lHVXVibUZ0WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG01aGJXVWdQU0JsTG01aGJXVXBMQ0JsTG1OdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNWpiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1WTI5c2IzSXVjMlYwU0dWNEtHVXVZMjlzYjNJcExDQmxMbkp2ZFdkb2JtVnpjeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkp2ZFdkb2JtVnpjeUE5SUdVdWNtOTFaMmh1WlhOektTd2daUzV0WlhSaGJHNWxjM01nSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV0WlhSaGJHNWxjM01nUFNCbExtMWxkR0ZzYm1WemN5a3NJR1V1YzJobFpXNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphR1ZsYmlBOUlHVXVjMmhsWlc0cExDQmxMbk5vWldWdVEyOXNiM0lnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdWbGJrTnZiRzl5SUQwZ2JtVjNJR0ZsS0NrdWMyVjBTR1Y0S0dVdWMyaGxaVzVEYjJ4dmNpa3BMQ0JsTG5Ob1pXVnVVbTkxWjJodVpYTnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjMmhsWlc1U2IzVm5hRzVsYzNNZ1BTQmxMbk5vWldWdVVtOTFaMmh1WlhOektTd2daUzVsYldsemMybDJaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VaVzFwYzNOcGRtVWdJVDA5SUhadmFXUWdNQ0FtSmlCcExtVnRhWE56YVhabExuTmxkRWhsZUNobExtVnRhWE56YVhabEtTd2daUzV6Y0dWamRXeGhjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHa3VjM0JsWTNWc1lYSWdJVDA5SUhadmFXUWdNQ0FtSmlCcExuTndaV04xYkdGeUxuTmxkRWhsZUNobExuTndaV04xYkdGeUtTd2daUzV6Y0dWamRXeGhja2x1ZEdWdWMybDBlU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk53WldOMWJHRnlTVzUwWlc1emFYUjVJRDBnWlM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVNrc0lHVXVjM0JsWTNWc1lYSkRiMnh2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JR2t1YzNCbFkzVnNZWEpEYjJ4dmNpQWhQVDBnZG05cFpDQXdJQ1ltSUdrdWMzQmxZM1ZzWVhKRGIyeHZjaTV6WlhSSVpYZ29aUzV6Y0dWamRXeGhja052Ykc5eUtTd2daUzV6YUdsdWFXNWxjM01nSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6YUdsdWFXNWxjM01nUFNCbExuTm9hVzVwYm1WemN5a3NJR1V1WTJ4bFlYSmpiMkYwSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WTJ4bFlYSmpiMkYwSUQwZ1pTNWpiR1ZoY21OdllYUXBMQ0JsTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Oc1pXRnlZMjloZEZKdmRXZG9ibVZ6Y3lBOUlHVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpLU3dnWlM1MGNtRnVjMjFwYzNOcGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNTBjbUZ1YzIxcGMzTnBiMjRnUFNCbExuUnlZVzV6YldsemMybHZiaWtzSUdVdWRHaHBZMnR1WlhOeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRHaHBZMnR1WlhOeklEMGdaUzUwYUdsamEyNWxjM01wTENCbExtRjBkR1Z1ZFdGMGFXOXVSR2x6ZEdGdVkyVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWhkSFJsYm5WaGRHbHZia1JwYzNSaGJtTmxJRDBnWlM1aGRIUmxiblZoZEdsdmJrUnBjM1JoYm1ObEtTd2daUzVoZEhSbGJuVmhkR2x2YmtOdmJHOXlJQ0U5UFNCMmIybGtJREFnSmlZZ2FTNWhkSFJsYm5WaGRHbHZia052Ykc5eUlDRTlQU0IyYjJsa0lEQWdKaVlnYVM1aGRIUmxiblZoZEdsdmJrTnZiRzl5TG5ObGRFaGxlQ2hsTG1GMGRHVnVkV0YwYVc5dVEyOXNiM0lwTENCbExtWnZaeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVp2WnlBOUlHVXVabTluS1N3Z1pTNW1iR0YwVTJoaFpHbHVaeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVpzWVhSVGFHRmthVzVuSUQwZ1pTNW1iR0YwVTJoaFpHbHVaeWtzSUdVdVlteGxibVJwYm1jZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1aWJHVnVaR2x1WnlBOUlHVXVZbXhsYm1ScGJtY3BMQ0JsTG1OdmJXSnBibVVnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVqYjIxaWFXNWxJRDBnWlM1amIyMWlhVzVsS1N3Z1pTNXphV1JsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzJsa1pTQTlJR1V1YzJsa1pTa3NJR1V1YzJoaFpHOTNVMmxrWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5Ob1lXUnZkMU5wWkdVZ1BTQmxMbk5vWVdSdmQxTnBaR1VwTENCbExtOXdZV05wZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1dmNHRmphWFI1SUQwZ1pTNXZjR0ZqYVhSNUtTd2daUzVtYjNKdFlYUWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNW1iM0p0WVhRZ1BTQmxMbVp2Y20xaGRDa3NJR1V1ZEhKaGJuTndZWEpsYm5RZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1MGNtRnVjM0JoY21WdWRDQTlJR1V1ZEhKaGJuTndZWEpsYm5RcExDQmxMbUZzY0doaFZHVnpkQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbUZzY0doaFZHVnpkQ0E5SUdVdVlXeHdhR0ZVWlhOMEtTd2daUzVrWlhCMGFGUmxjM1FnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVrWlhCMGFGUmxjM1FnUFNCbExtUmxjSFJvVkdWemRDa3NJR1V1WkdWd2RHaFhjbWwwWlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1SbGNIUm9WM0pwZEdVZ1BTQmxMbVJsY0hSb1YzSnBkR1VwTENCbExtTnZiRzl5VjNKcGRHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWpiMnh2Y2xkeWFYUmxJRDBnWlM1amIyeHZjbGR5YVhSbEtTd2daUzV6ZEdWdVkybHNWM0pwZEdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1emRHVnVZMmxzVjNKcGRHVWdQU0JsTG5OMFpXNWphV3hYY21sMFpTa3NJR1V1YzNSbGJtTnBiRmR5YVhSbFRXRnpheUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk4wWlc1amFXeFhjbWwwWlUxaGMyc2dQU0JsTG5OMFpXNWphV3hYY21sMFpVMWhjMnNwTENCbExuTjBaVzVqYVd4R2RXNWpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjM1JsYm1OcGJFWjFibU1nUFNCbExuTjBaVzVqYVd4R2RXNWpLU3dnWlM1emRHVnVZMmxzVW1WbUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkZKbFppQTlJR1V1YzNSbGJtTnBiRkpsWmlrc0lHVXVjM1JsYm1OcGJFWjFibU5OWVhOcklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzUmxibU5wYkVaMWJtTk5ZWE5ySUQwZ1pTNXpkR1Z1WTJsc1JuVnVZMDFoYzJzcExDQmxMbk4wWlc1amFXeEdZV2xzSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNSbGJtTnBiRVpoYVd3Z1BTQmxMbk4wWlc1amFXeEdZV2xzS1N3Z1pTNXpkR1Z1WTJsc1drWmhhV3dnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzV6ZEdWdVkybHNXa1poYVd3Z1BTQmxMbk4wWlc1amFXeGFSbUZwYkNrc0lHVXVjM1JsYm1OcGJGcFFZWE56SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1YzNSbGJtTnBiRnBRWVhOeklEMGdaUzV6ZEdWdVkybHNXbEJoYzNNcExDQmxMbmRwY21WbWNtRnRaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbmRwY21WbWNtRnRaU0E5SUdVdWQybHlaV1p5WVcxbEtTd2daUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzUzYVhKbFpuSmhiV1ZNYVc1bGQybGtkR2dnUFNCbExuZHBjbVZtY21GdFpVeHBibVYzYVdSMGFDa3NJR1V1ZDJseVpXWnlZVzFsVEdsdVpXTmhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbmRwY21WbWNtRnRaVXhwYm1WallYQWdQU0JsTG5kcGNtVm1jbUZ0WlV4cGJtVmpZWEFwTENCbExuZHBjbVZtY21GdFpVeHBibVZxYjJsdUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWQybHlaV1p5WVcxbFRHbHVaV3B2YVc0Z1BTQmxMbmRwY21WbWNtRnRaVXhwYm1WcWIybHVLU3dnWlM1eWIzUmhkR2x2YmlBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5KdmRHRjBhVzl1SUQwZ1pTNXliM1JoZEdsdmJpa3NJR1V1YkdsdVpYZHBaSFJvSUNFOVBTQXhJQ1ltSUNocExteHBibVYzYVdSMGFDQTlJR1V1YkdsdVpYZHBaSFJvS1N3Z1pTNWtZWE5vVTJsNlpTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtUmhjMmhUYVhwbElEMGdaUzVrWVhOb1UybDZaU2tzSUdVdVoyRndVMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1kaGNGTnBlbVVnUFNCbExtZGhjRk5wZW1VcExDQmxMbk5qWVd4bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMyTmhiR1VnUFNCbExuTmpZV3hsS1N3Z1pTNXdiMng1WjI5dVQyWm1jMlYwSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Y0c5c2VXZHZiazltWm5ObGRDQTlJR1V1Y0c5c2VXZHZiazltWm5ObGRDa3NJR1V1Y0c5c2VXZHZiazltWm5ObGRFWmhZM1J2Y2lBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5CdmJIbG5iMjVQWm1aelpYUkdZV04wYjNJZ1BTQmxMbkJ2YkhsbmIyNVBabVp6WlhSR1lXTjBiM0lwTENCbExuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuQnZiSGxuYjI1UFptWnpaWFJWYm1sMGN5QTlJR1V1Y0c5c2VXZHZiazltWm5ObGRGVnVhWFJ6S1N3Z1pTNWthWFJvWlhKcGJtY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWthWFJvWlhKcGJtY2dQU0JsTG1ScGRHaGxjbWx1Wnlrc0lHVXVZV3h3YUdGVWIwTnZkbVZ5WVdkbElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVlXeHdhR0ZVYjBOdmRtVnlZV2RsSUQwZ1pTNWhiSEJvWVZSdlEyOTJaWEpoWjJVcExDQmxMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbkJ5WlcxMWJIUnBjR3hwWldSQmJIQm9ZU0E5SUdVdWNISmxiWFZzZEdsd2JHbGxaRUZzY0doaEtTd2daUzUyYVhOcFlteGxJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkbWx6YVdKc1pTQTlJR1V1ZG1semFXSnNaU2tzSUdVdWRHOXVaVTFoY0hCbFpDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuUnZibVZOWVhCd1pXUWdQU0JsTG5SdmJtVk5ZWEJ3WldRcExDQmxMblZ6WlhKRVlYUmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkWE5sY2tSaGRHRWdQU0JsTG5WelpYSkVZWFJoS1N3Z1pTNTJaWEowWlhoRGIyeHZjbk1nSVQwOUlIWnZhV1FnTUNBbUppQW9kSGx3Wlc5bUlHVXVkbVZ5ZEdWNFEyOXNiM0p6SUQwOUlDSnVkVzFpWlhJaUlEOGdhUzUyWlhKMFpYaERiMnh2Y25NZ1BTQmxMblpsY25SbGVFTnZiRzl5Y3lBK0lEQWdPaUJwTG5abGNuUmxlRU52Ykc5eWN5QTlJR1V1ZG1WeWRHVjRRMjlzYjNKektTd2daUzUxYm1sbWIzSnRjeUFoUFQwZ2RtOXBaQ0F3S1NCbWIzSW9iR1YwSUhJZ2FXNGdaUzUxYm1sbWIzSnRjeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1pTNTFibWxtYjNKdGMxdHlYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2MzZHBkR05vS0drdWRXNXBabTl5YlhOYmNsMGdQU0I3ZlN3Z2J5NTBlWEJsS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOaGMyVWdJblFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VkVzVwWm05eWJYTmJjbDB1ZG1Gc2RXVWdQU0J1S0c4dWRtRnNkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlZeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNTFibWxtYjNKdGMxdHlYUzUyWVd4MVpTQTlJRzVsZHlCaFpTZ3BMbk5sZEVobGVDaHZMblpoYkhWbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSW5ZeUlqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5WdWFXWnZjbTF6VzNKZExuWmhiSFZsSUQwZ2JtVjNJRmdvS1M1bWNtOXRRWEp5WVhrb2J5NTJZV3gxWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0oyTXlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhUzUxYm1sbWIzSnRjMXR5WFM1MllXeDFaU0E5SUc1bGR5Qk5LQ2t1Wm5KdmJVRnljbUY1S0c4dWRtRnNkV1VwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlkalFpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa3VkVzVwWm05eWJYTmJjbDB1ZG1Gc2RXVWdQU0J1WlhjZ1ZtVW9LUzVtY205dFFYSnlZWGtvYnk1MllXeDFaU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSnRNeUk2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTNTFibWxtYjNKdGMxdHlYUzUyWVd4MVpTQTlJRzVsZHlCc2RDZ3BMbVp5YjIxQmNuSmhlU2h2TG5aaGJIVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0ltMDBJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcExuVnVhV1p2Y20xelczSmRMblpoYkhWbElEMGdibVYzSUhCbEtDa3Vabkp2YlVGeWNtRjVLRzh1ZG1Gc2RXVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwTG5WdWFXWnZjbTF6VzNKZExuWmhiSFZsSUQwZ2J5NTJZV3gxWlRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JwWmlBb1pTNWtaV1pwYm1WeklDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpHVm1hVzVsY3lBOUlHVXVaR1ZtYVc1bGN5a3NJR1V1ZG1WeWRHVjRVMmhoWkdWeUlDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWRtVnlkR1Y0VTJoaFpHVnlJRDBnWlM1MlpYSjBaWGhUYUdGa1pYSXBMQ0JsTG1aeVlXZHRaVzUwVTJoaFpHVnlJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VabkpoWjIxbGJuUlRhR0ZrWlhJZ1BTQmxMbVp5WVdkdFpXNTBVMmhoWkdWeUtTd2daUzVsZUhSbGJuTnBiMjV6SUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ2NqRWdhVzRnWlM1bGVIUmxibk5wYjI1ektXa3VaWGgwWlc1emFXOXVjMXR5TVYwZ1BTQmxMbVY0ZEdWdWMybHZibk5iY2pGZE93b2dJQ0FnSUNBZ0lHbG1JQ2hsTG5Ob1lXUnBibWNnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVtYkdGMFUyaGhaR2x1WnlBOUlHVXVjMmhoWkdsdVp5QTlQVDBnTVNrc0lHVXVjMmw2WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5OcGVtVWdQU0JsTG5OcGVtVXBMQ0JsTG5OcGVtVkJkSFJsYm5WaGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbk5wZW1WQmRIUmxiblZoZEdsdmJpQTlJR1V1YzJsNlpVRjBkR1Z1ZFdGMGFXOXVLU3dnWlM1dFlYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXRZWEFnUFNCdUtHVXViV0Z3S1Nrc0lHVXViV0YwWTJGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWJXRjBZMkZ3SUQwZ2JpaGxMbTFoZEdOaGNDa3BMQ0JsTG1Gc2NHaGhUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WVd4d2FHRk5ZWEFnUFNCdUtHVXVZV3h3YUdGTllYQXBLU3dnWlM1aWRXMXdUV0Z3SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WW5WdGNFMWhjQ0E5SUc0b1pTNWlkVzF3VFdGd0tTa3NJR1V1WW5WdGNGTmpZV3hsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WW5WdGNGTmpZV3hsSUQwZ1pTNWlkVzF3VTJOaGJHVXBMQ0JsTG01dmNtMWhiRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG01dmNtMWhiRTFoY0NBOUlHNG9aUzV1YjNKdFlXeE5ZWEFwS1N3Z1pTNXViM0p0WVd4TllYQlVlWEJsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Ym05eWJXRnNUV0Z3Vkhsd1pTQTlJR1V1Ym05eWJXRnNUV0Z3Vkhsd1pTa3NJR1V1Ym05eWJXRnNVMk5oYkdVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdjaklnUFNCbExtNXZjbTFoYkZOallXeGxPd29nSUNBZ0lDQWdJQ0FnSUNCQmNuSmhlUzVwYzBGeWNtRjVLSEl5S1NBOVBUMGdJVEVnSmlZZ0tISXlJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY2pJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeU1nb2dJQ0FnSUNBZ0lDQWdJQ0JkS1N3Z2FTNXViM0p0WVd4VFkyRnNaU0E5SUc1bGR5QllLQ2t1Wm5KdmJVRnljbUY1S0hJeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVaR2x6Y0d4aFkyVnRaVzUwVFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVpHbHpjR3hoWTJWdFpXNTBUV0Z3SUQwZ2JpaGxMbVJwYzNCc1lXTmxiV1Z1ZEUxaGNDa3BMQ0JsTG1ScGMzQnNZV05sYldWdWRGTmpZV3hsSUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1WkdsemNHeGhZMlZ0Wlc1MFUyTmhiR1VnUFNCbExtUnBjM0JzWVdObGJXVnVkRk5qWVd4bEtTd2daUzVrYVhOd2JHRmpaVzFsYm5SQ2FXRnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VaR2x6Y0d4aFkyVnRaVzUwUW1saGN5QTlJR1V1WkdsemNHeGhZMlZ0Wlc1MFFtbGhjeWtzSUdVdWNtOTFaMmh1WlhOelRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VjbTkxWjJodVpYTnpUV0Z3SUQwZ2JpaGxMbkp2ZFdkb2JtVnpjMDFoY0NrcExDQmxMbTFsZEdGc2JtVnpjMDFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG0xbGRHRnNibVZ6YzAxaGNDQTlJRzRvWlM1dFpYUmhiRzVsYzNOTllYQXBLU3dnWlM1bGJXbHpjMmwyWlUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtVnRhWE56YVhabFRXRndJRDBnYmlobExtVnRhWE56YVhabFRXRndLU2tzSUdVdVpXMXBjM05wZG1WSmJuUmxibk5wZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bGJXbHpjMmwyWlVsdWRHVnVjMmwwZVNBOUlHVXVaVzFwYzNOcGRtVkpiblJsYm5OcGRIa3BMQ0JsTG5Od1pXTjFiR0Z5VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMzQmxZM1ZzWVhKTllYQWdQU0J1S0dVdWMzQmxZM1ZzWVhKTllYQXBLU3dnWlM1emNHVmpkV3hoY2tsdWRHVnVjMmwwZVUxaGNDQWhQVDBnZG05cFpDQXdJQ1ltSUNocExuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndJRDBnYmlobExuTndaV04xYkdGeVNXNTBaVzV6YVhSNVRXRndLU2tzSUdVdWMzQmxZM1ZzWVhKRGIyeHZjazFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG5Od1pXTjFiR0Z5UTI5c2IzSk5ZWEFnUFNCdUtHVXVjM0JsWTNWc1lYSkRiMnh2Y2sxaGNDa3BMQ0JsTG1WdWRrMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbVZ1ZGsxaGNDQTlJRzRvWlM1bGJuWk5ZWEFwS1N3Z1pTNWxiblpOWVhCSmJuUmxibk5wZEhrZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYVM1bGJuWk5ZWEJKYm5SbGJuTnBkSGtnUFNCbExtVnVkazFoY0VsdWRHVnVjMmwwZVNrc0lHVXVjbVZtYkdWamRHbDJhWFI1SUNFOVBTQjJiMmxrSURBZ0ppWWdLR2t1Y21WbWJHVmpkR2wyYVhSNUlEMGdaUzV5Wldac1pXTjBhWFpwZEhrcExDQmxMbkpsWm5KaFkzUnBiMjVTWVhScGJ5QWhQVDBnZG05cFpDQXdJQ1ltSUNocExuSmxabkpoWTNScGIyNVNZWFJwYnlBOUlHVXVjbVZtY21GamRHbHZibEpoZEdsdktTd2daUzVzYVdkb2RFMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMbXhwWjJoMFRXRndJRDBnYmlobExteHBaMmgwVFdGd0tTa3NJR1V1YkdsbmFIUk5ZWEJKYm5SbGJuTnBkSGtnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVzYVdkb2RFMWhjRWx1ZEdWdWMybDBlU0E5SUdVdWJHbG5hSFJOWVhCSmJuUmxibk5wZEhrcExDQmxMbUZ2VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVlXOU5ZWEFnUFNCdUtHVXVZVzlOWVhBcEtTd2daUzVoYjAxaGNFbHVkR1Z1YzJsMGVTQWhQVDBnZG05cFpDQXdJQ1ltSUNocExtRnZUV0Z3U1c1MFpXNXphWFI1SUQwZ1pTNWhiMDFoY0VsdWRHVnVjMmwwZVNrc0lHVXVaM0poWkdsbGJuUk5ZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9hUzVuY21Ga2FXVnVkRTFoY0NBOUlHNG9aUzVuY21Ga2FXVnVkRTFoY0NrcExDQmxMbU5zWldGeVkyOWhkRTFoY0NBaFBUMGdkbTlwWkNBd0lDWW1JQ2hwTG1Oc1pXRnlZMjloZEUxaGNDQTlJRzRvWlM1amJHVmhjbU52WVhSTllYQXBLU3dnWlM1amJHVmhjbU52WVhSU2IzVm5hRzVsYzNOTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNWpiR1ZoY21OdllYUlNiM1ZuYUc1bGMzTk5ZWEFnUFNCdUtHVXVZMnhsWVhKamIyRjBVbTkxWjJodVpYTnpUV0Z3S1Nrc0lHVXVZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VZMnhsWVhKamIyRjBUbTl5YldGc1RXRndJRDBnYmlobExtTnNaV0Z5WTI5aGRFNXZjbTFoYkUxaGNDa3BMQ0JsTG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bElDRTlQU0IyYjJsa0lEQWdKaVlnS0drdVkyeGxZWEpqYjJGMFRtOXliV0ZzVTJOaGJHVWdQU0J1WlhjZ1dDZ3BMbVp5YjIxQmNuSmhlU2hsTG1Oc1pXRnlZMjloZEU1dmNtMWhiRk5qWVd4bEtTa3NJR1V1ZEhKaGJuTnRhWE56YVc5dVRXRndJQ0U5UFNCMmIybGtJREFnSmlZZ0tHa3VkSEpoYm5OdGFYTnphVzl1VFdGd0lEMGdiaWhsTG5SeVlXNXpiV2x6YzJsdmJrMWhjQ2twTENCbExuUm9hV05yYm1WemMwMWhjQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHBMblJvYVdOcmJtVnpjMDFoY0NBOUlHNG9aUzUwYUdsamEyNWxjM05OWVhBcEtTd2daUzV6YUdWbGJrTnZiRzl5VFdGd0lDRTlQU0IyYjJsa0lEQWdKaVlnS0drdWMyaGxaVzVEYjJ4dmNrMWhjQ0E5SUc0b1pTNXphR1ZsYmtOdmJHOXlUV0Z3S1Nrc0lHVXVjMmhsWlc1U2IzVm5hRzVsYzNOTllYQWdJVDA5SUhadmFXUWdNQ0FtSmlBb2FTNXphR1ZsYmxKdmRXZG9ibVZ6YzAxaGNDQTlJRzRvWlM1emFHVmxibEp2ZFdkb2JtVnpjMDFoY0NrcExDQnBPd29nSUNBZ2ZRb2dJQ0FnYzJWMFZHVjRkSFZ5WlhNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5SbGVIUjFjbVZ6SUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLZlN3Z1IzTWdQU0JqYkdGemN5QjdDaUFnSUNCemRHRjBhV01nWkdWamIyUmxWR1Y0ZENobEtTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJVWlhoMFJHVmpiMlJsY2lBOElDSjFJaWtnY21WMGRYSnVJRzVsZHlCVVpYaDBSR1ZqYjJSbGNpZ3BMbVJsWTI5a1pTaGxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJQ0lpT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYmlBOUlEQXNJR2tnUFNCbExteGxibWQwYURzZ2JpQThJR2s3SUc0ckt5bDBJQ3M5SUZOMGNtbHVaeTVtY205dFEyaGhja052WkdVb1pWdHVYU2s3Q2lBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1JsWTI5a1pWVlNTVU52YlhCdmJtVnVkQ2hsYzJOaGNHVW9kQ2twT3dvZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJR1Y0ZEhKaFkzUlZjbXhDWVhObEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJR1V1YkdGemRFbHVaR1Y0VDJZb0lpOGlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQ0E5UFQwZ0xURWdQeUFpTGk4aUlEb2daUzV6ZFdKemRISW9NQ3dnZENBcklERXBPd29nSUNBZ2ZRb2dJQ0FnYzNSaGRHbGpJSEpsYzI5c2RtVlZVa3dvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBlWEJsYjJZZ1pTQWhQU0FpYzNSeWFXNW5JaUI4ZkNCbElEMDlQU0FpSWlBL0lDSWlJRG9nS0M5ZWFIUjBjSE0vT2x3dlhDOHZhUzUwWlhOMEtIUXBJQ1ltSUM5ZVhDOHZMblJsYzNRb1pTa2dKaVlnS0hRZ1BTQjBMbkpsY0d4aFkyVW9MeWhlYUhSMGNITS9PbHd2WEM5Ylhsd3ZYU3NwTGlvdmFTd2dJaVF4SWlrcExDQXZYaWhvZEhSd2N6ODZLVDljTDF3dkwya3VkR1Z6ZENobEtTQjhmQ0F2WG1SaGRHRTZMaW9zTGlva0wya3VkR1Z6ZENobEtTQjhmQ0F2WG1Kc2IySTZMaW9rTDJrdWRHVnpkQ2hsS1NBL0lHVWdPaUIwSUNzZ1pTazdDaUFnSUNCOUNuMHNJRmxoSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJmWlNCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lncGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa2x1YzNSaGJtTmxaRUoxWm1abGNrZGxiMjFsZEhKNUlpd2dkR2hwY3k1cGJuTjBZVzVqWlVOdmRXNTBJRDBnTVNBdklEQTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsS1N3Z2RHaHBjeTVwYm5OMFlXNWpaVU52ZFc1MElEMGdaUzVwYm5OMFlXNWpaVU52ZFc1MExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyeHZibVVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc1bGR5QjBhR2x6TG1OdmJuTjBjblZqZEc5eUtDa3VZMjl3ZVNoMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUhSdlNsTlBUaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhOMWNHVnlMblJ2U2xOUFRpaDBhR2x6S1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1cGJuTjBZVzVqWlVOdmRXNTBJRDBnZEdocGN5NXBibk4wWVc1alpVTnZkVzUwTENCbExtbHpTVzV6ZEdGdVkyVmtRblZtWm1WeVIyVnZiV1YwY25rZ1BTQWhNQ3dnWlRzS0lDQWdJSDBLZlRzS1dXRXVjSEp2ZEc5MGVYQmxMbWx6U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua2dQU0FoTURzS2RtRnlJRlZvSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUJpZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lobEtUc0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR3hsZENCeUlEMGdkR2hwY3l3Z2J5QTlJRzVsZHlCWmRDaHlMbTFoYm1GblpYSXBPd29nSUNBZ0lDQWdJRzh1YzJWMFVHRjBhQ2h5TG5CaGRHZ3BMQ0J2TG5ObGRGSmxjWFZsYzNSSVpXRmtaWElvY2k1eVpYRjFaWE4wU0dWaFpHVnlLU3dnYnk1elpYUlhhWFJvUTNKbFpHVnVkR2xoYkhNb2NpNTNhWFJvUTNKbFpHVnVkR2xoYkhNcExDQnZMbXh2WVdRb1pTd2dablZ1WTNScGIyNG9ZU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBjbmtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZENoeUxuQmhjbk5sS0VwVFQwNHVjR0Z5YzJVb1lTa3BLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb2JDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhU0EvSUdrb2JDa2dPaUJqYjI1emIyeGxMbVZ5Y205eUtHd3BMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlN3Z2Jpd2dhU2s3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaU2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCN2ZTd2diaUE5SUh0OU93b2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHa29aaXdnYlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RGdHRYU0FoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnZEZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIWWdQU0JtTG1sdWRHVnliR1ZoZG1Wa1FuVm1abVZ5YzF0dFhTd2daeUE5SUhJb1ppd2dkaTVpZFdabVpYSXBMQ0J3SUQwZ2Qya29kaTUwZVhCbExDQm5LU3dnWHlBOUlHNWxkeUFrYmlod0xDQjJMbk4wY21sa1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJmTG5WMWFXUWdQU0IyTG5WMWFXUXNJSFJiYlYwZ1BTQmZMQ0JmT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCbWRXNWpkR2x2YmlCeUtHWXNJRzBwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0c1YmJWMGdJVDA5SUhadmFXUWdNQ2tnY21WMGRYSnVJRzViYlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMklEMGdaaTVoY25KaGVVSjFabVpsY25OYmJWMHNJR2NnUFNCdVpYY2dWV2x1ZERNeVFYSnlZWGtvZGlrdVluVm1abVZ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2JsdHRYU0E5SUdjc0lHYzdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCdklEMGdaUzVwYzBsdWMzUmhibU5sWkVKMVptWmxja2RsYjIxbGRISjVJRDhnYm1WM0lGbGhJRG9nYm1WM0lGOWxMQ0JoSUQwZ1pTNWtZWFJoTG1sdVpHVjRPd29nSUNBZ0lDQWdJR2xtSUNoaElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1lnUFNCM2FTaGhMblI1Y0dVc0lHRXVZWEp5WVhrcE93b2dJQ0FnSUNBZ0lDQWdJQ0J2TG5ObGRFbHVaR1Y0S0c1bGR5QlZaU2htTENBeEtTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR3hsZENCc0lEMGdaUzVrWVhSaExtRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm1NU0JwYmlCc0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JzVzJZeFhTd2dlRHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzB1YVhOSmJuUmxjbXhsWVhabFpFSjFabVpsY2tGMGRISnBZblYwWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFlnUFNCcEtHVXVaR0YwWVN3Z2JTNWtZWFJoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhnZ1BTQnVaWGNnVTI0b2Rpd2diUzVwZEdWdFUybDZaU3dnYlM1dlptWnpaWFFzSUcwdWJtOXliV0ZzYVhwbFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2RqRWdQU0IzYVNodExuUjVjR1VzSUcwdVlYSnlZWGtwTENCbklEMGdiUzVwYzBsdWMzUmhibU5sWkVKMVptWmxja0YwZEhKcFluVjBaU0EvSUZodUlEb2dWV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0SUQwZ2JtVjNJR2NvZGpFc0lHMHVhWFJsYlZOcGVtVXNJRzB1Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2JTNXVZVzFsSUNFOVBTQjJiMmxrSURBZ0ppWWdLSGd1Ym1GdFpTQTlJRzB1Ym1GdFpTa3NJRzB1ZFhOaFoyVWdJVDA5SUhadmFXUWdNQ0FtSmlCNExuTmxkRlZ6WVdkbEtHMHVkWE5oWjJVcExDQnRMblZ3WkdGMFpWSmhibWRsSUNFOVBTQjJiMmxrSURBZ0ppWWdLSGd1ZFhCa1lYUmxVbUZ1WjJVdWIyWm1jMlYwSUQwZ2JTNTFjR1JoZEdWU1lXNW5aUzV2Wm1aelpYUXNJSGd1ZFhCa1lYUmxVbUZ1WjJVdVkyOTFiblFnUFNCdExuVndaR0YwWlZKaGJtZGxMbU52ZFc1MEtTd2dieTV6WlhSQmRIUnlhV0oxZEdVb1pqRXNJSGdwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUdVdVpHRjBZUzV0YjNKd2FFRjBkSEpwWW5WMFpYTTdDaUFnSUNBZ0lDQWdhV1lnS0dNcElHWnZjaWhzWlhRZ1pqSWdhVzRnWXlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdE1TQTlJR05iWmpKZExDQjRNU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFl5SUQwZ01Dd2daekVnUFNCdE1TNXNaVzVuZEdnN0lIWXlJRHdnWnpFN0lIWXlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIQWdQU0J0TVZ0Mk1sMHNJRjg3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2NDNXBjMGx1ZEdWeWJHVmhkbVZrUW5WbVptVnlRWFIwY21saWRYUmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGtnUFNCcEtHVXVaR0YwWVN3Z2NDNWtZWFJoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmZJRDBnYm1WM0lGTnVLSGtzSUhBdWFYUmxiVk5wZW1Vc0lIQXViMlptYzJWMExDQndMbTV2Y20xaGJHbDZaV1FwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlVEVnUFNCM2FTaHdMblI1Y0dVc0lIQXVZWEp5WVhrcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRjhnUFNCdVpYY2dWV1VvZVRFc0lIQXVhWFJsYlZOcGVtVXNJSEF1Ym05eWJXRnNhWHBsWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd0xtNWhiV1VnSVQwOUlIWnZhV1FnTUNBbUppQW9YeTV1WVcxbElEMGdjQzV1WVcxbEtTd2dlREV1Y0hWemFDaGZLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J2TG0xdmNuQm9RWFIwY21saWRYUmxjMXRtTWwwZ1BTQjRNVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWlM1a1lYUmhMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUNZbUlDaHZMbTF2Y25Cb1ZHRnlaMlYwYzFKbGJHRjBhWFpsSUQwZ0lUQXBPd29nSUNBZ0lDQWdJR3hsZENCMUlEMGdaUzVrWVhSaExtZHliM1Z3Y3lCOGZDQmxMbVJoZEdFdVpISmhkMk5oYkd4eklIeDhJR1V1WkdGMFlTNXZabVp6WlhSek93b2dJQ0FnSUNBZ0lHbG1JQ2gxSUNFOVBTQjJiMmxrSURBcElHWnZjaWhzWlhRZ1pqTWdQU0F3TENCdE1pQTlJSFV1YkdWdVozUm9PeUJtTXlBaFBUMGdiVEk3SUNzclpqTXBld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlRElnUFNCMVcyWXpYVHNLSUNBZ0lDQWdJQ0FnSUNBZ2J5NWhaR1JIY205MWNDaDRNaTV6ZEdGeWRDd2dlREl1WTI5MWJuUXNJSGd5TG0xaGRHVnlhV0ZzU1c1a1pYZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJR1V1WkdGMFlTNWliM1Z1WkdsdVoxTndhR1Z5WlRzS0lDQWdJQ0FnSUNCcFppQW9aQ0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCbU5DQTlJRzVsZHlCTk93b2dJQ0FnSUNBZ0lDQWdJQ0JrTG1ObGJuUmxjaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHWTBMbVp5YjIxQmNuSmhlU2hrTG1ObGJuUmxjaWtzSUc4dVltOTFibVJwYm1kVGNHaGxjbVVnUFNCdVpYY2dRVzRvWmpRc0lHUXVjbUZrYVhWektUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVibUZ0WlNBbUppQW9ieTV1WVcxbElEMGdaUzV1WVcxbEtTd2daUzUxYzJWeVJHRjBZU0FtSmlBb2J5NTFjMlZ5UkdGMFlTQTlJR1V1ZFhObGNrUmhkR0VwTENCdk93b2dJQ0FnZlFwOUxDQjFlU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdZblFnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvWlNrN0NpQWdJQ0I5Q2lBZ0lDQnNiMkZrS0dVc0lIUXNJRzRzSUdrcElIc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlIUm9hWE1zSUc4Z1BTQjBhR2x6TG5CaGRHZ2dQVDA5SUNJaUlEOGdSM011WlhoMGNtRmpkRlZ5YkVKaGMyVW9aU2tnT2lCMGFHbHpMbkJoZEdnN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmRYSmpaVkJoZEdnZ1BTQjBhR2x6TG5KbGMyOTFjbU5sVUdGMGFDQjhmQ0J2T3dvZ0lDQWdJQ0FnSUd4bGRDQmhJRDBnYm1WM0lGbDBLSFJvYVhNdWJXRnVZV2RsY2lrN0NpQWdJQ0FnSUNBZ1lTNXpaWFJRWVhSb0tIUm9hWE11Y0dGMGFDa3NJR0V1YzJWMFVtVnhkV1Z6ZEVobFlXUmxjaWgwYUdsekxuSmxjWFZsYzNSSVpXRmtaWElwTENCaExuTmxkRmRwZEdoRGNtVmtaVzUwYVdGc2N5aDBhR2x6TG5kcGRHaERjbVZrWlc1MGFXRnNjeWtzSUdFdWJHOWhaQ2hsTENCbWRXNWpkR2x2Ymloc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTWdQU0JLVTA5T0xuQmhjbk5sS0d3cE93b2dJQ0FnSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2gxS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElDRTlQU0IyYjJsa0lEQWdKaVlnYVNoMUtTd2dZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVU2VDJKcVpXTjBURzloWkdWeU9pQkRZVzRuZENCd1lYSnpaU0FpSUNzZ1pTQXJJQ0l1SWl3Z2RTNXRaWE56WVdkbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhQ0E5SUdNdWJXVjBZV1JoZEdFN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNob0lEMDlQU0IyYjJsa0lEQWdmSHdnYUM1MGVYQmxJRDA5UFNCMmIybGtJREFnZkh3Z2FDNTBlWEJsTG5SdlRHOTNaWEpEWVhObEtDa2dQVDA5SUNKblpXOXRaWFJ5ZVNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazlpYW1WamRFeHZZV1JsY2pvZ1EyRnVKM1FnYkc5aFpDQWlJQ3NnWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnY2k1d1lYSnpaU2hqTENCMEtUc0tJQ0FnSUNBZ0lDQjlMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJR0Z6ZVc1aklHeHZZV1JCYzNsdVl5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMQ0JwSUQwZ2RHaHBjeTV3WVhSb0lEMDlQU0FpSWlBL0lFZHpMbVY0ZEhKaFkzUlZjbXhDWVhObEtHVXBJRG9nZEdocGN5NXdZWFJvT3dvZ0lDQWdJQ0FnSUhSb2FYTXVjbVZ6YjNWeVkyVlFZWFJvSUQwZ2RHaHBjeTV5WlhOdmRYSmpaVkJoZEdnZ2ZId2dhVHNLSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzVsZHlCWmRDaDBhR2x6TG0xaGJtRm5aWElwT3dvZ0lDQWdJQ0FnSUhJdWMyVjBVR0YwYUNoMGFHbHpMbkJoZEdncExDQnlMbk5sZEZKbGNYVmxjM1JJWldGa1pYSW9kR2hwY3k1eVpYRjFaWE4wU0dWaFpHVnlLU3dnY2k1elpYUlhhWFJvUTNKbFpHVnVkR2xoYkhNb2RHaHBjeTUzYVhSb1EzSmxaR1Z1ZEdsaGJITXBPd29nSUNBZ0lDQWdJR3hsZENCdklEMGdZWGRoYVhRZ2NpNXNiMkZrUVhONWJtTW9aU3dnZENrc0lHRWdQU0JLVTA5T0xuQmhjbk5sS0c4cExDQnNJRDBnWVM1dFpYUmhaR0YwWVRzS0lDQWdJQ0FnSUNCcFppQW9iQ0E5UFQwZ2RtOXBaQ0F3SUh4OElHd3VkSGx3WlNBOVBUMGdkbTlwWkNBd0lIeDhJR3d1ZEhsd1pTNTBiMHh2ZDJWeVEyRnpaU2dwSUQwOVBTQWlaMlZ2YldWMGNua2lLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbFJJVWtWRkxrOWlhbVZqZEV4dllXUmxjam9nUTJGdUozUWdiRzloWkNBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0YzWVdsMElHNHVjR0Z5YzJWQmMzbHVZeWhoS1RzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdWNHRnljMlZCYm1sdFlYUnBiMjV6S0dVdVlXNXBiV0YwYVc5dWN5a3NJR2tnUFNCMGFHbHpMbkJoY25ObFUyaGhjR1Z6S0dVdWMyaGhjR1Z6S1N3Z2NpQTlJSFJvYVhNdWNHRnljMlZIWlc5dFpYUnlhV1Z6S0dVdVoyVnZiV1YwY21sbGN5d2dhU2tzSUc4Z1BTQjBhR2x6TG5CaGNuTmxTVzFoWjJWektHVXVhVzFoWjJWekxDQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RDQWhQVDBnZG05cFpDQXdJQ1ltSUhRb1l5azdDaUFnSUNBZ0lDQWdmU2tzSUdFZ1BTQjBhR2x6TG5CaGNuTmxWR1Y0ZEhWeVpYTW9aUzUwWlhoMGRYSmxjeXdnYnlrc0lHd2dQU0IwYUdsekxuQmhjbk5sVFdGMFpYSnBZV3h6S0dVdWJXRjBaWEpwWVd4ekxDQmhLU3dnWXlBOUlIUm9hWE11Y0dGeWMyVlBZbXBsWTNRb1pTNXZZbXBsWTNRc0lISXNJR3dzSUdFc0lHNHBMQ0JvSUQwZ2RHaHBjeTV3WVhKelpWTnJaV3hsZEc5dWN5aGxMbk5yWld4bGRHOXVjeXdnWXlrN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVltbHVaRk5yWld4bGRHOXVjeWhqTENCb0tTd2dkQ0FoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCMUlEMGdJVEU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pDQnBiaUJ2S1dsbUlDaHZXMlJkSUdsdWMzUmhibU5sYjJZZ1NGUk5URWx0WVdkbFJXeGxiV1Z1ZENrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RTQTlJQ0V3T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdkU0E5UFQwZ0lURWdKaVlnZENoaktUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTTdDaUFnSUNCOUNpQWdJQ0JoYzNsdVl5QndZWEp6WlVGemVXNWpLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjR0Z5YzJWQmJtbHRZWFJwYjI1ektHVXVZVzVwYldGMGFXOXVjeWtzSUc0Z1BTQjBhR2x6TG5CaGNuTmxVMmhoY0dWektHVXVjMmhoY0dWektTd2dhU0E5SUhSb2FYTXVjR0Z5YzJWSFpXOXRaWFJ5YVdWektHVXVaMlZ2YldWMGNtbGxjeXdnYmlrc0lISWdQU0JoZDJGcGRDQjBhR2x6TG5CaGNuTmxTVzFoWjJWelFYTjVibU1vWlM1cGJXRm5aWE1wTENCdklEMGdkR2hwY3k1d1lYSnpaVlJsZUhSMWNtVnpLR1V1ZEdWNGRIVnlaWE1zSUhJcExDQmhJRDBnZEdocGN5NXdZWEp6WlUxaGRHVnlhV0ZzY3lobExtMWhkR1Z5YVdGc2N5d2dieWtzSUd3Z1BTQjBhR2x6TG5CaGNuTmxUMkpxWldOMEtHVXViMkpxWldOMExDQnBMQ0JoTENCdkxDQjBLU3dnWXlBOUlIUm9hWE11Y0dGeWMyVlRhMlZzWlhSdmJuTW9aUzV6YTJWc1pYUnZibk1zSUd3cE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbUpwYm1SVGEyVnNaWFJ2Ym5Nb2JDd2dZeWtzSUd3N0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlZOb1lYQmxjeWhsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCN2ZUc0tJQ0FnSUNBZ0lDQnBaaUFvWlNBaFBUMGdkbTlwWkNBd0tTQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdaUzVzWlc1bmRHZzdJRzRnUENCcE95QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHNWxkeUJZZENncExtWnliMjFLVTA5T0tHVmJibDBwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjBXM0l1ZFhWcFpGMGdQU0J5T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZERzS0lDQWdJSDBLSUNBZ0lIQmhjbk5sVTJ0bGJHVjBiMjV6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSHQ5TENCcElEMGdlMzA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUXVkSEpoZG1WeWMyVW9ablZ1WTNScGIyNG9jaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlMbWx6UW05dVpTQW1KaUFvYVZ0eUxuVjFhV1JkSUQwZ2NpazdDaUFnSUNBZ0lDQWdmU2tzSUdVZ0lUMDlJSFp2YVdRZ01Da2dabTl5S0d4bGRDQnlJRDBnTUN3Z2J5QTlJR1V1YkdWdVozUm9PeUJ5SUR3Z2J6c2djaXNyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnVaWGNnWVc4b0tTNW1jbTl0U2xOUFRpaGxXM0pkTENCcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYmx0aExuVjFhV1JkSUQwZ1lUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNDdDaUFnSUNCOUNpQWdJQ0J3WVhKelpVZGxiMjFsZEhKcFpYTW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2UzMDdDaUFnSUNBZ0lDQWdhV1lnS0dVZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc1bGR5QlZhRHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCeUlEMGdNQ3dnYnlBOUlHVXViR1Z1WjNSb095QnlJRHdnYnpzZ2Npc3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaExDQnNJRDBnWlZ0eVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lITjNhWFJqYUNoc0xuUjVjR1VwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWtKMVptWmxja2RsYjIxbGRISjVJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pKYm5OMFlXNWpaV1JDZFdabVpYSkhaVzl0WlhSeWVTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JwTG5CaGNuTmxLR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSkhaVzl0WlhSeWVTSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazlpYW1WamRFeHZZV1JsY2pvZ1ZHaGxJR3hsWjJGamVTQkhaVzl0WlhSeWVTQjBlWEJsSUdseklHNXZJR3h2Ym1kbGNpQnpkWEJ3YjNKMFpXUXVJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JsWm1GMWJIUTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHd3VkSGx3WlNCcGJpQjJZeUEvSUdFZ1BTQjJZMXRzTG5SNWNHVmRMbVp5YjIxS1UwOU9LR3dzSUhRcElEb2dZMjl1YzI5c1pTNTNZWEp1S0dCVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklGVnVjM1Z3Y0c5eWRHVmtJR2RsYjIxbGRISjVJSFI1Y0dVZ0lpUjdiQzUwZVhCbGZTSmdLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0V1ZFhWcFpDQTlJR3d1ZFhWcFpDd2diQzV1WVcxbElDRTlQU0IyYjJsa0lEQWdKaVlnS0dFdWJtRnRaU0E5SUd3dWJtRnRaU2tzSUdFdWFYTkNkV1ptWlhKSFpXOXRaWFJ5ZVNBOVBUMGdJVEFnSmlZZ2JDNTFjMlZ5UkdGMFlTQWhQVDBnZG05cFpDQXdJQ1ltSUNoaExuVnpaWEpFWVhSaElEMGdiQzUxYzJWeVJHRjBZU2tzSUc1YmJDNTFkV2xrWFNBOUlHRTdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUc0N0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlUxaGRHVnlhV0ZzY3lobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3ZlN3Z2FTQTlJSHQ5T3dvZ0lDQWdJQ0FnSUdsbUlDaGxJQ0U5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUhJZ1BTQnVaWGNnZW1nN0NpQWdJQ0FnSUNBZ0lDQWdJSEl1YzJWMFZHVjRkSFZ5WlhNb2RDazdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQXNJR0VnUFNCbExteGxibWQwYURzZ2J5QThJR0U3SUc4ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHVmJiMTA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JDNTBlWEJsSUQwOVBTQWlUWFZzZEdsTllYUmxjbWxoYkNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJRnRkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREE3SUdnZ1BDQnNMbTFoZEdWeWFXRnNjeTVzWlc1bmRHZzdJR2dyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYkM1dFlYUmxjbWxoYkhOYmFGMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWJkUzUxZFdsa1hTQTlQVDBnZG05cFpDQXdJQ1ltSUNodVczVXVkWFZwWkYwZ1BTQnlMbkJoY25ObEtIVXBLU3dnWXk1d2RYTm9LRzViZFM1MWRXbGtYU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xiYkM1MWRXbGtYU0E5SUdNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYmx0c0xuVjFhV1JkSUQwOVBTQjJiMmxrSURBZ0ppWWdLRzViYkM1MWRXbGtYU0E5SUhJdWNHRnljMlVvYkNrcExDQnBXMnd1ZFhWcFpGMGdQU0J1VzJ3dWRYVnBaRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHazdDaUFnSUNCOUNpQWdJQ0J3WVhKelpVRnVhVzFoZEdsdmJuTW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZTMwN0NpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNrZ1ptOXlLR3hsZENCdUlEMGdNRHNnYmlBOElHVXViR1Z1WjNSb095QnVLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlHVmJibDBzSUhJZ1BTQk1jaTV3WVhKelpTaHBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RGdHlMblYxYVdSZElEMGdjanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFE3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVWx0WVdkbGN5aGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMQ0JwSUQwZ2UzMHNJSEk3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYnloc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1TG0xaGJtRm5aWEl1YVhSbGJWTjBZWEowS0d3cExDQnlMbXh2WVdRb2JDd2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmU3dnZG05cFpDQXdMQ0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc0dWJXRnVZV2RsY2k1cGRHVnRSWEp5YjNJb2JDa3NJRzR1YldGdVlXZGxjaTVwZEdWdFJXNWtLR3dwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWVNoc0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ2JDQTlQU0FpYzNSeWFXNW5JaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0JzTENCb0lEMGdMMTRvWEM5Y0x5bDhLRnRoTFhwZEt6b29YQzljTHlrL0tTOXBMblJsYzNRb1l5a2dQeUJqSURvZ2JpNXlaWE52ZFhKalpWQmhkR2dnS3lCak93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUc4b2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0J5WlhSMWNtNGdiQzVrWVhSaElEOGdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRvZ2Qya29iQzUwZVhCbExDQnNMbVJoZEdFcExBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SUd3dWQybGtkR2dzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvWldsbmFIUTZJR3d1YUdWcFoyaDBDaUFnSUNBZ0lDQWdJQ0FnSUgwZ09pQnVkV3hzT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHVXViR1Z1WjNSb0lENGdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYkNBOUlHNWxkeUI2WVNoMEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY2lBOUlHNWxkeUJTY2loc0tTd2djaTV6WlhSRGNtOXpjMDl5YVdkcGJpaDBhR2x6TG1OeWIzTnpUM0pwWjJsdUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JqSUQwZ01Dd2dhQ0E5SUdVdWJHVnVaM1JvT3lCaklEd2dhRHNnWXlzcktYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ1pWdGpYU3dnWkNBOUlIVXVkWEpzT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWkNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwVzNVdWRYVnBaRjBnUFNCYlhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1lnUFNBd0xDQnRJRDBnWkM1c1pXNW5kR2c3SUdZZ1BDQnRPeUJtS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdlQ0E5SUdSYlpsMHNJSFlnUFNCaEtIZ3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJJQ0U5UFNCdWRXeHNJQ1ltSUNoMklHbHVjM1JoYm1ObGIyWWdTRlJOVEVsdFlXZGxSV3hsYldWdWRDQS9JR2xiZFM1MWRXbGtYUzV3ZFhOb0tIWXBJRG9nYVZ0MUxuVjFhV1JkTG5CMWMyZ29ibVYzSUhGdUtIWXVaR0YwWVN3Z2RpNTNhV1IwYUN3Z2RpNW9aV2xuYUhRcEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaakVnUFNCaEtIVXVkWEpzS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1NU0FoUFQwZ2JuVnNiQ0FtSmlBb2FWdDFMblYxYVdSZElEMGdaakVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSEpsZEhWeWJpQnBPd29nSUNBZ2ZRb2dJQ0FnWVhONWJtTWdjR0Z5YzJWSmJXRm5aWE5CYzNsdVl5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxDQnVJRDBnZTMwc0lHazdDaUFnSUNBZ0lDQWdZWE41Ym1NZ1puVnVZM1JwYjI0Z2NpaHZLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdieUE5UFNBaWMzUnlhVzVuSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0VnUFNCdkxDQnNJRDBnTDE0b1hDOWNMeWw4S0Z0aExYcGRLem9vWEM5Y0x5ay9LUzlwTG5SbGMzUW9ZU2tnUHlCaElEb2dkQzV5WlhOdmRYSmpaVkJoZEdnZ0t5QmhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHRjNZV2wwSUdrdWJHOWhaRUZ6ZVc1aktHd3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnY21WMGRYSnVJRzh1WkdGMFlTQS9JSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFNklIZHBLRzh1ZEhsd1pTd2dieTVrWVhSaEtTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZHBaSFJvT2lCdkxuZHBaSFJvTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBPaUJ2TG1obGFXZG9kQW9nSUNBZ0lDQWdJQ0FnSUNCOUlEb2diblZzYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLR1VnSVQwOUlIWnZhV1FnTUNBbUppQmxMbXhsYm1kMGFDQStJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhU0E5SUc1bGR5QlNjaWgwYUdsekxtMWhibUZuWlhJcExDQnBMbk5sZEVOeWIzTnpUM0pwWjJsdUtIUm9hWE11WTNKdmMzTlBjbWxuYVc0cE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzhnUFNBd0xDQmhJRDBnWlM1c1pXNW5kR2c3SUc4Z1BDQmhPeUJ2S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR3dnUFNCbFcyOWRMQ0JqSUQwZ2JDNTFjbXc3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1FYSnlZWGt1YVhOQmNuSmhlU2hqS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzViYkM1MWRXbGtYU0E5SUZ0ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdhQ0E5SURBc0lIVWdQU0JqTG14bGJtZDBhRHNnYUNBOElIVTdJR2dyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQmtJRDBnWTF0b1hTd2daaUE5SUdGM1lXbDBJSElvWkNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdZZ0lUMDlJRzUxYkd3Z0ppWWdLR1lnYVc1emRHRnVZMlZ2WmlCSVZFMU1TVzFoWjJWRmJHVnRaVzUwSUQ4Z2JsdHNMblYxYVdSZExuQjFjMmdvWmlrZ09pQnVXMnd1ZFhWcFpGMHVjSFZ6YUNodVpYY2djVzRvWmk1a1lYUmhMQ0JtTG5kcFpIUm9MQ0JtTG1obGFXZG9kQ2twS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCb01TQTlJR0YzWVdsMElISW9iQzUxY213cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2d4SUNFOVBTQnVkV3hzSUNZbUlDaHVXMnd1ZFhWcFpGMGdQU0JvTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzQ3Q2lBZ0lDQjlDaUFnSUNCd1lYSnpaVlJsZUhSMWNtVnpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnVLSElzSUc4cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFI1Y0dWdlppQnlJRDA5SUNKdWRXMWlaWElpSUQ4Z2NpQTZJQ2hqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRXh2WVdSbGNpNXdZWEp6WlZSbGVIUjFjbVU2SUVOdmJuTjBZVzUwSUhOb2IzVnNaQ0JpWlNCcGJpQnVkVzFsY21saklHWnZjbTB1SWl3Z2Npa3NJRzliY2wwcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIdDlPd29nSUNBZ0lDQWdJR2xtSUNobElDRTlQU0IyYjJsa0lEQXBJR1p2Y2loc1pYUWdjaUE5SURBc0lHOGdQU0JsTG14bGJtZDBhRHNnY2lBOElHODdJSElyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaElEMGdaVnR5WFRzS0lDQWdJQ0FnSUNBZ0lDQWdZUzVwYldGblpTQTlQVDBnZG05cFpDQXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ25WRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUJPYnlBaWFXMWhaMlVpSUhOd1pXTnBabWxsWkNCbWIzSW5MQ0JoTG5WMWFXUXBMQ0IwVzJFdWFXMWhaMlZkSUQwOVBTQjJiMmxrSURBZ0ppWWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUk1iMkZrWlhJNklGVnVaR1ZtYVc1bFpDQnBiV0ZuWlNJc0lHRXVhVzFoWjJVcE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDd2dZeUE5SUhSYllTNXBiV0ZuWlYwN0NpQWdJQ0FnSUNBZ0lDQWdJRUZ5Y21GNUxtbHpRWEp5WVhrb1l5a2dQeUFvYkNBOUlHNWxkeUJyYVNoaktTd2dZeTVzWlc1bmRHZ2dQVDA5SURZZ0ppWWdLR3d1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2twSURvZ0tHTWdKaVlnWXk1a1lYUmhJRDhnYkNBOUlHNWxkeUJ4YmloakxtUmhkR0VzSUdNdWQybGtkR2dzSUdNdWFHVnBaMmgwS1NBNklHd2dQU0J1WlhjZ2IzUW9ZeWtzSUdNZ0ppWWdLR3d1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNQ2twTENCc0xuVjFhV1FnUFNCaExuVjFhV1FzSUdFdWJtRnRaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHNMbTVoYldVZ1BTQmhMbTVoYldVcExDQmhMbTFoY0hCcGJtY2dJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNXRZWEJ3YVc1bklEMGdiaWhoTG0xaGNIQnBibWNzSUdSNUtTa3NJR0V1YjJabWMyVjBJQ0U5UFNCMmIybGtJREFnSmlZZ2JDNXZabVp6WlhRdVpuSnZiVUZ5Y21GNUtHRXViMlptYzJWMEtTd2dZUzV5WlhCbFlYUWdJVDA5SUhadmFXUWdNQ0FtSmlCc0xuSmxjR1ZoZEM1bWNtOXRRWEp5WVhrb1lTNXlaWEJsWVhRcExDQmhMbU5sYm5SbGNpQWhQVDBnZG05cFpDQXdJQ1ltSUd3dVkyVnVkR1Z5TG1aeWIyMUJjbkpoZVNoaExtTmxiblJsY2lrc0lHRXVjbTkwWVhScGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNXliM1JoZEdsdmJpQTlJR0V1Y205MFlYUnBiMjRwTENCaExuZHlZWEFnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzUzY21Gd1V5QTlJRzRvWVM1M2NtRndXekJkTENCVFl5a3NJR3d1ZDNKaGNGUWdQU0J1S0dFdWQzSmhjRnN4WFN3Z1UyTXBLU3dnWVM1bWIzSnRZWFFnSVQwOUlIWnZhV1FnTUNBbUppQW9iQzVtYjNKdFlYUWdQU0JoTG1admNtMWhkQ2tzSUdFdWRIbHdaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHNMblI1Y0dVZ1BTQmhMblI1Y0dVcExDQmhMbVZ1WTI5a2FXNW5JQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VaVzVqYjJScGJtY2dQU0JoTG1WdVkyOWthVzVuS1N3Z1lTNXRhVzVHYVd4MFpYSWdJVDA5SUhadmFXUWdNQ0FtSmlBb2JDNXRhVzVHYVd4MFpYSWdQU0J1S0dFdWJXbHVSbWxzZEdWeUxDQlVZeWtwTENCaExtMWhaMFpwYkhSbGNpQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xtMWhaMFpwYkhSbGNpQTlJRzRvWVM1dFlXZEdhV3gwWlhJc0lGUmpLU2tzSUdFdVlXNXBjMjkwY205d2VTQWhQVDBnZG05cFpDQXdJQ1ltSUNoc0xtRnVhWE52ZEhKdmNIa2dQU0JoTG1GdWFYTnZkSEp2Y0hrcExDQmhMbVpzYVhCWklDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dVpteHBjRmtnUFNCaExtWnNhWEJaS1N3Z1lTNXdjbVZ0ZFd4MGFYQnNlVUZzY0doaElDRTlQU0IyYjJsa0lEQWdKaVlnS0d3dWNISmxiWFZzZEdsd2JIbEJiSEJvWVNBOUlHRXVjSEpsYlhWc2RHbHdiSGxCYkhCb1lTa3NJR0V1ZFc1d1lXTnJRV3hwWjI1dFpXNTBJQ0U5UFNCMmIybGtJREFnSmlZZ0tHd3VkVzV3WVdOclFXeHBaMjV0Wlc1MElEMGdZUzUxYm5CaFkydEJiR2xuYm0xbGJuUXBMQ0JoTG5WelpYSkVZWFJoSUNFOVBTQjJiMmxrSURBZ0ppWWdLR3d1ZFhObGNrUmhkR0VnUFNCaExuVnpaWEpFWVhSaEtTd2dhVnRoTG5WMWFXUmRJRDBnYkRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdrN0NpQWdJQ0I5Q2lBZ0lDQndZWEp6WlU5aWFtVmpkQ2hsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc4N0NpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z1lTaGtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMFcyUmRJRDA5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNSTWIyRmtaWEk2SUZWdVpHVm1hVzVsWkNCblpXOXRaWFJ5ZVNJc0lHUXBMQ0IwVzJSZE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnNLR1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dRZ0lUMDlJSFp2YVdRZ01Da2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0VGeWNtRjVMbWx6UVhKeVlYa29aQ2twSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWmlBOUlGdGRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYlNBOUlEQXNJSGdnUFNCa0xteGxibWQwYURzZ2JTQThJSGc3SUcwckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IySUQwZ1pGdHRYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibHQyWFNBOVBUMGdkbTlwWkNBd0lDWW1JR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBURzloWkdWeU9pQlZibVJsWm1sdVpXUWdiV0YwWlhKcFlXd2lMQ0IyS1N3Z1ppNXdkWE5vS0c1YmRsMHBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVcyUmRJRDA5UFNCMmIybGtJREFnSmlZZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVBZbXBsWTNSTWIyRmtaWEk2SUZWdVpHVm1hVzVsWkNCdFlYUmxjbWxoYkNJc0lHUXBMQ0J1VzJSZE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUdNb1pDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnYVZ0a1hTQTlQVDBnZG05cFpDQXdJQ1ltSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wVEc5aFpHVnlPaUJWYm1SbFptbHVaV1FnZEdWNGRIVnlaU0lzSUdRcExDQnBXMlJkT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdhQ3dnZFRzS0lDQWdJQ0FnSUNCemQybDBZMmdvWlM1MGVYQmxLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVTJObGJtVWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QnVieXdnWlM1aVlXTnJaM0p2ZFc1a0lDRTlQU0IyYjJsa0lEQWdKaVlnS0U1MWJXSmxjaTVwYzBsdWRHVm5aWElvWlM1aVlXTnJaM0p2ZFc1a0tTQS9JRzh1WW1GamEyZHliM1Z1WkNBOUlHNWxkeUJoWlNobExtSmhZMnRuY205MWJtUXBJRG9nYnk1aVlXTnJaM0p2ZFc1a0lEMGdZeWhsTG1KaFkydG5jbTkxYm1RcEtTd2daUzVsYm5acGNtOXViV1Z1ZENBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1WdWRtbHliMjV0Wlc1MElEMGdZeWhsTG1WdWRtbHliMjV0Wlc1MEtTa3NJR1V1Wm05bklDRTlQU0IyYjJsa0lEQWdKaVlnS0dVdVptOW5MblI1Y0dVZ1BUMDlJQ0pHYjJjaUlEOGdieTVtYjJjZ1BTQnVaWGNnUW5Jb1pTNW1iMmN1WTI5c2IzSXNJR1V1Wm05bkxtNWxZWElzSUdVdVptOW5MbVpoY2lrZ09pQmxMbVp2Wnk1MGVYQmxJRDA5UFNBaVJtOW5SWGh3TWlJZ0ppWWdLRzh1Wm05bklEMGdibVYzSUU1eUtHVXVabTluTG1OdmJHOXlMQ0JsTG1adlp5NWtaVzV6YVhSNUtTa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lsQmxjbk53WldOMGFYWmxRMkZ0WlhKaElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ2RYUW9aUzVtYjNZc0lHVXVZWE53WldOMExDQmxMbTVsWVhJc0lHVXVabUZ5S1N3Z1pTNW1iMk4xY3lBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG1adlkzVnpJRDBnWlM1bWIyTjFjeWtzSUdVdWVtOXZiU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbnB2YjIwZ1BTQmxMbnB2YjIwcExDQmxMbVpwYkcxSFlYVm5aU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbVpwYkcxSFlYVm5aU0E5SUdVdVptbHNiVWRoZFdkbEtTd2daUzVtYVd4dFQyWm1jMlYwSUNFOVBTQjJiMmxrSURBZ0ppWWdLRzh1Wm1sc2JVOW1abk5sZENBOUlHVXVabWxzYlU5bVpuTmxkQ2tzSUdVdWRtbGxkeUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMblpwWlhjZ1BTQlBZbXBsWTNRdVlYTnphV2R1S0h0OUxDQmxMblpwWlhjcEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKUGNuUm9iMmR5WVhCb2FXTkRZVzFsY21FaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCR2NpaGxMbXhsWm5Rc0lHVXVjbWxuYUhRc0lHVXVkRzl3TENCbExtSnZkSFJ2YlN3Z1pTNXVaV0Z5TENCbExtWmhjaWtzSUdVdWVtOXZiU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbnB2YjIwZ1BTQmxMbnB2YjIwcExDQmxMblpwWlhjZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1MmFXVjNJRDBnVDJKcVpXTjBMbUZ6YzJsbmJpaDdmU3dnWlM1MmFXVjNLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlRVzFpYVdWdWRFeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnY1dFb1pTNWpiMnh2Y2l3Z1pTNXBiblJsYm5OcGRIa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lrUnBjbVZqZEdsdmJtRnNUR2xuYUhRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCWFlTaGxMbU52Ykc5eUxDQmxMbWx1ZEdWdWMybDBlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlVRzlwYm5STWFXZG9kQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2SUQwZ2JtVjNJRWRoS0dVdVkyOXNiM0lzSUdVdWFXNTBaVzV6YVhSNUxDQmxMbVJwYzNSaGJtTmxMQ0JsTG1SbFkyRjVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlNaV04wUVhKbFlVeHBaMmgwSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnV0dFb1pTNWpiMnh2Y2l3Z1pTNXBiblJsYm5OcGRIa3NJR1V1ZDJsa2RHZ3NJR1V1YUdWcFoyaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSlRjRzkwVEdsbmFIUWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QklZU2hsTG1OdmJHOXlMQ0JsTG1sdWRHVnVjMmwwZVN3Z1pTNWthWE4wWVc1alpTd2daUzVoYm1kc1pTd2daUzV3Wlc1MWJXSnlZU3dnWlM1a1pXTmhlU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlTR1Z0YVhOd2FHVnlaVXhwWjJoMElqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOGdQU0J1WlhjZ1ZXRW9aUzVqYjJ4dmNpd2daUzVuY205MWJtUkRiMnh2Y2l3Z1pTNXBiblJsYm5OcGRIa3BPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJR05oYzJVZ0lreHBaMmgwVUhKdlltVWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QkljaWdwTG1aeWIyMUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTmhjMlVnSWxOcmFXNXVaV1JOWlhOb0lqb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZ2dQU0JoS0dVdVoyVnZiV1YwY25rcExDQjFJRDBnYkNobExtMWhkR1Z5YVdGc0tTd2dieUE5SUc1bGR5QnpieWhvTENCMUtTd2daUzVpYVc1a1RXOWtaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbUpwYm1STmIyUmxJRDBnWlM1aWFXNWtUVzlrWlNrc0lHVXVZbWx1WkUxaGRISnBlQ0FoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVZbWx1WkUxaGRISnBlQzVtY205dFFYSnlZWGtvWlM1aWFXNWtUV0YwY21sNEtTd2daUzV6YTJWc1pYUnZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbk5yWld4bGRHOXVJRDBnWlM1emEyVnNaWFJ2YmlrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVFdWemFDSTZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9JRDBnWVNobExtZGxiMjFsZEhKNUtTd2dkU0E5SUd3b1pTNXRZWFJsY21saGJDa3NJRzhnUFNCdVpYY2djM1FvYUN3Z2RTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVNXNXpkR0Z1WTJWa1RXVnphQ0k2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvSUQwZ1lTaGxMbWRsYjIxbGRISjVLU3dnZFNBOUlHd29aUzV0WVhSbGNtbGhiQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pDQTlJR1V1WTI5MWJuUXNJR1lnUFNCbExtbHVjM1JoYm1ObFRXRjBjbWw0TENCdElEMGdaUzVwYm5OMFlXNWpaVU52Ykc5eU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCNFlTaG9MQ0IxTENCa0tTd2dieTVwYm5OMFlXNWpaVTFoZEhKcGVDQTlJRzVsZHlCWWJpaHVaWGNnUm14dllYUXpNa0Z5Y21GNUtHWXVZWEp5WVhrcExDQXhOaWtzSUcwZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1cGJuTjBZVzVqWlVOdmJHOXlJRDBnYm1WM0lGaHVLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29iUzVoY25KaGVTa3NJRzB1YVhSbGJWTnBlbVVwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pNVDBRaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCaWFEc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKTWFXNWxJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2diMjRvWVNobExtZGxiMjFsZEhKNUtTd2diQ2hsTG0xaGRHVnlhV0ZzS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWNtVmhhenNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpVEdsdVpVeHZiM0FpT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnlBOUlHNWxkeUI1WVNoaEtHVXVaMlZ2YldWMGNua3BMQ0JzS0dVdWJXRjBaWEpwWVd3cEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKTWFXNWxVMlZuYldWdWRITWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdieUE5SUc1bGR5QjNkQ2hoS0dVdVoyVnZiV1YwY25rcExDQnNLR1V1YldGMFpYSnBZV3dwS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdKeVpXRnJPd29nSUNBZ0lDQWdJQ0FnSUNCallYTmxJQ0pRYjJsdWRFTnNiM1ZrSWpvS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVVHOXBiblJ6SWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnZW5Jb1lTaGxMbWRsYjIxbGRISjVLU3dnYkNobExtMWhkR1Z5YVdGc0tTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdZMkZ6WlNBaVUzQnlhWFJsSWpvS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc4Z1BTQnVaWGNnY204b2JDaGxMbTFoZEdWeWFXRnNLU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlSM0p2ZFhBaU9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2J5QTlJRzVsZHlCSWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpZWE5sSUNKQ2IyNWxJam9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2diMjg3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCdVpYY2dUbVU3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaHZMblYxYVdRZ1BTQmxMblYxYVdRc0lHVXVibUZ0WlNBaFBUMGdkbTlwWkNBd0lDWW1JQ2h2TG01aGJXVWdQU0JsTG01aGJXVXBMQ0JsTG0xaGRISnBlQ0FoUFQwZ2RtOXBaQ0F3SUQ4Z0tHOHViV0YwY21sNExtWnliMjFCY25KaGVTaGxMbTFoZEhKcGVDa3NJR1V1YldGMGNtbDRRWFYwYjFWd1pHRjBaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0JsTG0xaGRISnBlRUYxZEc5VmNHUmhkR1VwTENCdkxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ0ppWWdieTV0WVhSeWFYZ3VaR1ZqYjIxd2IzTmxLRzh1Y0c5emFYUnBiMjRzSUc4dWNYVmhkR1Z5Ym1sdmJpd2dieTV6WTJGc1pTa3BJRG9nS0dVdWNHOXphWFJwYjI0Z0lUMDlJSFp2YVdRZ01DQW1KaUJ2TG5CdmMybDBhVzl1TG1aeWIyMUJjbkpoZVNobExuQnZjMmwwYVc5dUtTd2daUzV5YjNSaGRHbHZiaUFoUFQwZ2RtOXBaQ0F3SUNZbUlHOHVjbTkwWVhScGIyNHVabkp2YlVGeWNtRjVLR1V1Y205MFlYUnBiMjRwTENCbExuRjFZWFJsY201cGIyNGdJVDA5SUhadmFXUWdNQ0FtSmlCdkxuRjFZWFJsY201cGIyNHVabkp2YlVGeWNtRjVLR1V1Y1hWaGRHVnlibWx2Ymlrc0lHVXVjMk5oYkdVZ0lUMDlJSFp2YVdRZ01DQW1KaUJ2TG5OallXeGxMbVp5YjIxQmNuSmhlU2hsTG5OallXeGxLU2tzSUdVdVkyRnpkRk5vWVdSdmR5QWhQVDBnZG05cFpDQXdJQ1ltSUNodkxtTmhjM1JUYUdGa2IzY2dQU0JsTG1OaGMzUlRhR0ZrYjNjcExDQmxMbkpsWTJWcGRtVlRhR0ZrYjNjZ0lUMDlJSFp2YVdRZ01DQW1KaUFvYnk1eVpXTmxhWFpsVTJoaFpHOTNJRDBnWlM1eVpXTmxhWFpsVTJoaFpHOTNLU3dnWlM1emFHRmtiM2NnSmlZZ0tHVXVjMmhoWkc5M0xtSnBZWE1nSVQwOUlIWnZhV1FnTUNBbUppQW9ieTV6YUdGa2IzY3VZbWxoY3lBOUlHVXVjMmhoWkc5M0xtSnBZWE1wTENCbExuTm9ZV1J2ZHk1dWIzSnRZV3hDYVdGeklDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWMyaGhaRzkzTG01dmNtMWhiRUpwWVhNZ1BTQmxMbk5vWVdSdmR5NXViM0p0WVd4Q2FXRnpLU3dnWlM1emFHRmtiM2N1Y21Ga2FYVnpJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVjMmhoWkc5M0xuSmhaR2wxY3lBOUlHVXVjMmhoWkc5M0xuSmhaR2wxY3lrc0lHVXVjMmhoWkc5M0xtMWhjRk5wZW1VZ0lUMDlJSFp2YVdRZ01DQW1KaUJ2TG5Ob1lXUnZkeTV0WVhCVGFYcGxMbVp5YjIxQmNuSmhlU2hsTG5Ob1lXUnZkeTV0WVhCVGFYcGxLU3dnWlM1emFHRmtiM2N1WTJGdFpYSmhJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVjMmhoWkc5M0xtTmhiV1Z5WVNBOUlIUm9hWE11Y0dGeWMyVlBZbXBsWTNRb1pTNXphR0ZrYjNjdVkyRnRaWEpoS1NrcExDQmxMblpwYzJsaWJHVWdJVDA5SUhadmFXUWdNQ0FtSmlBb2J5NTJhWE5wWW14bElEMGdaUzUyYVhOcFlteGxLU3dnWlM1bWNuVnpkSFZ0UTNWc2JHVmtJQ0U5UFNCMmIybGtJREFnSmlZZ0tHOHVabkoxYzNSMWJVTjFiR3hsWkNBOUlHVXVabkoxYzNSMWJVTjFiR3hsWkNrc0lHVXVjbVZ1WkdWeVQzSmtaWElnSVQwOUlIWnZhV1FnTUNBbUppQW9ieTV5Wlc1a1pYSlBjbVJsY2lBOUlHVXVjbVZ1WkdWeVQzSmtaWElwTENCbExuVnpaWEpFWVhSaElDRTlQU0IyYjJsa0lEQWdKaVlnS0c4dWRYTmxja1JoZEdFZ1BTQmxMblZ6WlhKRVlYUmhLU3dnWlM1c1lYbGxjbk1nSVQwOUlIWnZhV1FnTUNBbUppQW9ieTVzWVhsbGNuTXViV0Z6YXlBOUlHVXViR0Y1WlhKektTd2daUzVqYUdsc1pISmxiaUFoUFQwZ2RtOXBaQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa01TQTlJR1V1WTJocGJHUnlaVzQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1pqRWdQU0F3T3lCbU1TQThJR1F4TG14bGJtZDBhRHNnWmpFckt5bHZMbUZrWkNoMGFHbHpMbkJoY25ObFQySnFaV04wS0dReFcyWXhYU3dnZEN3Z2Jpd2dhU3dnY2lrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvWlM1aGJtbHRZWFJwYjI1eklDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1F5SUQwZ1pTNWhibWx0WVhScGIyNXpPd29nSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZeUlEMGdNRHNnWmpJZ1BDQmtNaTVzWlc1bmRHZzdJR1l5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJRzB4SUQwZ1pESmJaakpkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYnk1aGJtbHRZWFJwYjI1ekxuQjFjMmdvY2x0dE1WMHBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hsTG5SNWNHVWdQVDA5SUNKTVQwUWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHVXVZWFYwYjFWd1pHRjBaU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaHZMbUYxZEc5VmNHUmhkR1VnUFNCbExtRjFkRzlWY0dSaGRHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdaRE1nUFNCbExteGxkbVZzY3pzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQm1NeUE5SURBN0lHWXpJRHdnWkRNdWJHVnVaM1JvT3lCbU15c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdE1pQTlJR1F6VzJZelhTd2dlQ0E5SUc4dVoyVjBUMkpxWldOMFFubFFjbTl3WlhKMGVTZ2lkWFZwWkNJc0lHMHlMbTlpYW1WamRDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRJQ0U5UFNCMmIybGtJREFnSmlZZ2J5NWhaR1JNWlhabGJDaDRMQ0J0TWk1a2FYTjBZVzVqWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRzg3Q2lBZ0lDQjlDaUFnSUNCaWFXNWtVMnRsYkdWMGIyNXpLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQlBZbXBsWTNRdWEyVjVjeWgwS1M1c1pXNW5kR2dnSVQwOUlEQWdKaVlnWlM1MGNtRjJaWEp6WlNobWRXNWpkR2x2YmlodUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVMbWx6VTJ0cGJtNWxaRTFsYzJnZ1BUMDlJQ0V3SUNZbUlHNHVjMnRsYkdWMGIyNGdJVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHa2dQU0IwVzI0dWMydGxiR1YwYjI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FTQTlQVDBnZG05cFpDQXdJRDhnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1JNYjJGa1pYSTZJRTV2SUhOclpXeGxkRzl1SUdadmRXNWtJSGRwZEdnZ1ZWVkpSRG9pTENCdUxuTnJaV3hsZEc5dUtTQTZJRzR1WW1sdVpDaHBMQ0J1TG1KcGJtUk5ZWFJ5YVhncE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJVWlhoMGRYSmxVR0YwYUNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUMkpxWldOMFRHOWhaR1Z5T2lBdWMyVjBWR1Y0ZEhWeVpWQmhkR2dvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXpaWFJTWlhOdmRYSmpaVkJoZEdnb0tTNGlLU3dnZEdocGN5NXpaWFJTWlhOdmRYSmpaVkJoZEdnb1pTazdDaUFnSUNCOUNuMHNJR1I1SUQwZ2V3b2dJQ0FnVlZaTllYQndhVzVuT2lCb1lTd0tJQ0FnSUVOMVltVlNaV1pzWldOMGFXOXVUV0Z3Y0dsdVp6b2dRbWtzQ2lBZ0lDQkRkV0psVW1WbWNtRmpkR2x2YmsxaGNIQnBibWM2SUhwcExBb2dJQ0FnUlhGMWFYSmxZM1JoYm1kMWJHRnlVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRVJ6TEFvZ0lDQWdSWEYxYVhKbFkzUmhibWQxYkdGeVVtVm1jbUZqZEdsdmJrMWhjSEJwYm1jNklFWnpMQW9nSUNBZ1EzVmlaVlZXVW1WbWJHVmpkR2x2YmsxaGNIQnBibWM2SUZCeUxBb2dJQ0FnUTNWaVpWVldVbVZtY21GamRHbHZiazFoY0hCcGJtYzZJRmR6Q24wc0lGTmpJRDBnZXdvZ0lDQWdVbVZ3WldGMFYzSmhjSEJwYm1jNklFNXpMQW9nSUNBZ1EyeGhiWEJVYjBWa1oyVlhjbUZ3Y0dsdVp6b2dkblFzQ2lBZ0lDQk5hWEp5YjNKbFpGSmxjR1ZoZEZkeVlYQndhVzVuT2lCQ2N3cDlMQ0JVWXlBOUlIc0tJQ0FnSUU1bFlYSmxjM1JHYVd4MFpYSTZJSEowTEFvZ0lDQWdUbVZoY21WemRFMXBjRzFoY0U1bFlYSmxjM1JHYVd4MFpYSTZJSFJoTEFvZ0lDQWdUbVZoY21WemRFMXBjRzFoY0V4cGJtVmhja1pwYkhSbGNqb2dibUVzQ2lBZ0lDQk1hVzVsWVhKR2FXeDBaWEk2SUhSMExBb2dJQ0FnVEdsdVpXRnlUV2x3YldGd1RtVmhjbVZ6ZEVacGJIUmxjam9nVjJNc0NpQWdJQ0JNYVc1bFlYSk5hWEJ0WVhCTWFXNWxZWEpHYVd4MFpYSTZJRlZwQ24wc0lFOW9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmlkQ0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJQ0FnSUNCMGVYQmxiMllnWTNKbFlYUmxTVzFoWjJWQ2FYUnRZWEFnUGlBaWRTSWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1kzSmxZWFJsU1cxaFoyVkNhWFJ0WVhBb0tTQnViM1FnYzNWd2NHOXlkR1ZrTGlJcExDQjBlWEJsYjJZZ1ptVjBZMmdnUGlBaWRTSWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVUpwZEcxaGNFeHZZV1JsY2pvZ1ptVjBZMmdvS1NCdWIzUWdjM1Z3Y0c5eWRHVmtMaUlwTENCMGFHbHpMbTl3ZEdsdmJuTWdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIQnlaVzExYkhScGNHeDVRV3h3YUdFNklDSnViMjVsSWdvZ0lDQWdJQ0FnSUgwN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJQY0hScGIyNXpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXZjSFJwYjI1eklEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR3h2WVdRb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR1VnUFQwOUlIWnZhV1FnTUNBbUppQW9aU0E5SUNJaUtTd2dkR2hwY3k1d1lYUm9JQ0U5UFNCMmIybGtJREFnSmlZZ0tHVWdQU0IwYUdsekxuQmhkR2dnS3lCbEtTd2daU0E5SUhSb2FYTXViV0Z1WVdkbGNpNXlaWE52YkhabFZWSk1LR1VwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUU1cExtZGxkQ2hsS1RzS0lDQWdJQ0FnSUNCcFppQW9ieUFoUFQwZ2RtOXBaQ0F3S1NCeVpYUjFjbTRnY2k1dFlXNWhaMlZ5TG1sMFpXMVRkR0Z5ZENobEtTd2djMlYwVkdsdFpXOTFkQ2htZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkQ0FtSmlCMEtHOHBMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnVaQ2hsS1RzS0lDQWdJQ0FnSUNCOUxDQXdLU3dnYnpzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUh0OU93b2dJQ0FnSUNBZ0lHRXVZM0psWkdWdWRHbGhiSE1nUFNCMGFHbHpMbU55YjNOelQzSnBaMmx1SUQwOVBTQWlZVzV2Ym5sdGIzVnpJaUEvSUNKellXMWxMVzl5YVdkcGJpSWdPaUFpYVc1amJIVmtaU0lzSUdFdWFHVmhaR1Z5Y3lBOUlIUm9hWE11Y21WeGRXVnpkRWhsWVdSbGNpd2dabVYwWTJnb1pTd2dZU2t1ZEdobGJpaG1kVzVqZEdsdmJpaHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCc0xtSnNiMklvS1RzS0lDQWdJQ0FnSUNCOUtTNTBhR1Z1S0daMWJtTjBhVzl1S0d3cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR055WldGMFpVbHRZV2RsUW1sMGJXRndLR3dzSUU5aWFtVmpkQzVoYzNOcFoyNG9jaTV2Y0hScGIyNXpMQ0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjJ4dmNsTndZV05sUTI5dWRtVnljMmx2YmpvZ0ltNXZibVVpQ2lBZ0lDQWdJQ0FnSUNBZ0lIMHBLVHNLSUNBZ0lDQWdJQ0I5S1M1MGFHVnVLR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdUbWt1WVdSa0tHVXNJR3dwTENCMElDWW1JSFFvYkNrc0lISXViV0Z1WVdkbGNpNXBkR1Z0Ulc1a0tHVXBPd29nSUNBZ0lDQWdJSDBwTG1OaGRHTm9LR1oxYm1OMGFXOXVLR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhU0FtSmlCcEtHd3BMQ0J5TG0xaGJtRm5aWEl1YVhSbGJVVnljbTl5S0dVcExDQnlMbTFoYm1GblpYSXVhWFJsYlVWdVpDaGxLVHNLSUNBZ0lDQWdJQ0I5S1N3Z2NpNXRZVzVoWjJWeUxtbDBaVzFUZEdGeWRDaGxLVHNLSUNBZ0lIMEtmVHNLVDJndWNISnZkRzkwZVhCbExtbHpTVzFoWjJWQ2FYUnRZWEJNYjJGa1pYSWdQU0FoTURzS2RtRnlJRk56TENCSWFDQTlJSHNLSUNBZ0lHZGxkRU52Ym5SbGVIUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJUY3lBOVBUMGdkbTlwWkNBd0lDWW1JQ2hUY3lBOUlHNWxkeUFvZDJsdVpHOTNMa0YxWkdsdlEyOXVkR1Y0ZENCOGZDQjNhVzVrYjNjdWQyVmlhMmwwUVhWa2FXOURiMjUwWlhoMEtTa3NJRk56T3dvZ0lDQWdmU3dLSUNBZ0lITmxkRU52Ym5SbGVIUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNCVGN5QTlJSE03Q2lBZ0lDQjlDbjBzSUd0b0lEMGdZMnhoYzNNZ1pYaDBaVzVrY3lCaWRDQjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaGxLVHNLSUNBZ0lIMEtJQ0FnSUd4dllXUW9aU3dnZEN3Z2Jpd2dhU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZEdocGN5d2dieUE5SUc1bGR5QlpkQ2gwYUdsekxtMWhibUZuWlhJcE93b2dJQ0FnSUNBZ0lHOHVjMlYwVW1WemNHOXVjMlZVZVhCbEtDSmhjbkpoZVdKMVptWmxjaUlwTENCdkxuTmxkRkJoZEdnb2RHaHBjeTV3WVhSb0tTd2dieTV6WlhSU1pYRjFaWE4wU0dWaFpHVnlLSFJvYVhNdWNtVnhkV1Z6ZEVobFlXUmxjaWtzSUc4dWMyVjBWMmwwYUVOeVpXUmxiblJwWVd4ektIUm9hWE11ZDJsMGFFTnlaV1JsYm5ScFlXeHpLU3dnYnk1c2IyRmtLR1VzSUdaMWJtTjBhVzl1S0dFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ1lTNXpiR2xqWlNnd0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFaG9MbWRsZEVOdmJuUmxlSFFvS1M1a1pXTnZaR1ZCZFdScGIwUmhkR0VvYkN3Z1puVnVZM1JwYjI0b2FDa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhRb2FDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb2JERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2tnUHlCcEtHd3hLU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9iREVwTENCeUxtMWhibUZuWlhJdWFYUmxiVVZ5Y205eUtHVXBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTd2diaXdnYVNrN0NpQWdJQ0I5Q24wc0lFZG9JRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QkljaUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMExDQnVJRDBnTVNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvZG05cFpDQXdMQ0J1S1RzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUc1bGR5QmhaU2dwTG5ObGRDaGxLU3dnY2lBOUlHNWxkeUJoWlNncExuTmxkQ2gwS1N3Z2J5QTlJRzVsZHlCTktHa3VjaXdnYVM1bkxDQnBMbUlwTENCaElEMGdibVYzSUUwb2NpNXlMQ0J5TG1jc0lISXVZaWtzSUd3Z1BTQk5ZWFJvTG5OeGNuUW9UV0YwYUM1UVNTa3NJR01nUFNCc0lDb2dUV0YwYUM1emNYSjBLQzQzTlNrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6YUM1amIyVm1abWxqYVdWdWRITmJNRjB1WTI5d2VTaHZLUzVoWkdRb1lTa3ViWFZzZEdsd2JIbFRZMkZzWVhJb2JDa3NJSFJvYVhNdWMyZ3VZMjlsWm1acFkybGxiblJ6V3pGZExtTnZjSGtvYnlrdWMzVmlLR0VwTG0xMWJIUnBjR3g1VTJOaGJHRnlLR01wT3dvZ0lDQWdmUXA5T3dwSGFDNXdjbTkwYjNSNWNHVXVhWE5JWlcxcGMzQm9aWEpsVEdsbmFIUlFjbTlpWlNBOUlDRXdPd3AyWVhJZ1ZtZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklFaHlJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXhLWHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaDJiMmxrSURBc0lIUXBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdibVYzSUdGbEtDa3VjMlYwS0dVcE93b2dJQ0FnSUNBZ0lIUm9hWE11YzJndVkyOWxabVpwWTJsbGJuUnpXekJkTG5ObGRDaHVMbklzSUc0dVp5d2diaTVpS1M1dGRXeDBhWEJzZVZOallXeGhjaWd5SUNvZ1RXRjBhQzV6Y1hKMEtFMWhkR2d1VUVrcEtUc0tJQ0FnSUgwS2ZUc0tWbWd1Y0hKdmRHOTBlWEJsTG1selFXMWlhV1Z1ZEV4cFoyaDBVSEp2WW1VZ1BTQWhNRHNLZG1GeUlFVmpJRDBnYm1WM0lIQmxMQ0JCWXlBOUlHNWxkeUJ3WlN3Z1JtNGdQU0J1WlhjZ2NHVXNJR1o1SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlVM1JsY21WdlEyRnRaWEpoSWl3Z2RHaHBjeTVoYzNCbFkzUWdQU0F4TENCMGFHbHpMbVY1WlZObGNDQTlJQzR3TmpRc0lIUm9hWE11WTJGdFpYSmhUQ0E5SUc1bGR5QjFkQ3dnZEdocGN5NWpZVzFsY21GTUxteGhlV1Z5Y3k1bGJtRmliR1VvTVNrc0lIUm9hWE11WTJGdFpYSmhUQzV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WTJGdFpYSmhVaUE5SUc1bGR5QjFkQ3dnZEdocGN5NWpZVzFsY21GU0xteGhlV1Z5Y3k1bGJtRmliR1VvTWlrc0lIUm9hWE11WTJGdFpYSmhVaTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11WDJOaFkyaGxJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iMk4xY3pvZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOTJPaUJ1ZFd4c0xBb2dJQ0FnSUNBZ0lDQWdJQ0JoYzNCbFkzUTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJRzVsWVhJNklHNTFiR3dzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWmhjam9nYm5Wc2JDd0tJQ0FnSUNBZ0lDQWdJQ0FnZW05dmJUb2diblZzYkN3S0lDQWdJQ0FnSUNBZ0lDQWdaWGxsVTJWd09pQnVkV3hzQ2lBZ0lDQWdJQ0FnZlRzS0lDQWdJSDBLSUNBZ0lIVndaR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5allXTm9aVHNLSUNBZ0lDQWdJQ0JwWmlBb2RDNW1iMk4xY3lBaFBUMGdaUzVtYjJOMWN5QjhmQ0IwTG1admRpQWhQVDBnWlM1bWIzWWdmSHdnZEM1aGMzQmxZM1FnSVQwOUlHVXVZWE53WldOMElDb2dkR2hwY3k1aGMzQmxZM1FnZkh3Z2RDNXVaV0Z5SUNFOVBTQmxMbTVsWVhJZ2ZId2dkQzVtWVhJZ0lUMDlJR1V1Wm1GeUlIeDhJSFF1ZW05dmJTQWhQVDBnWlM1NmIyOXRJSHg4SUhRdVpYbGxVMlZ3SUNFOVBTQjBhR2x6TG1WNVpWTmxjQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBMbVp2WTNWeklEMGdaUzVtYjJOMWN5d2dkQzVtYjNZZ1BTQmxMbVp2ZGl3Z2RDNWhjM0JsWTNRZ1BTQmxMbUZ6Y0dWamRDQXFJSFJvYVhNdVlYTndaV04wTENCMExtNWxZWElnUFNCbExtNWxZWElzSUhRdVptRnlJRDBnWlM1bVlYSXNJSFF1ZW05dmJTQTlJR1V1ZW05dmJTd2dkQzVsZVdWVFpYQWdQU0IwYUdsekxtVjVaVk5sY0N3Z1JtNHVZMjl3ZVNobExuQnliMnBsWTNScGIyNU5ZWFJ5YVhncE93b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFF1WlhsbFUyVndJQzhnTWl3Z2NpQTlJR2tnS2lCMExtNWxZWElnTHlCMExtWnZZM1Z6TENCdklEMGdkQzV1WldGeUlDb2dUV0YwYUM1MFlXNG9WMjRnS2lCMExtWnZkaUFxSUM0MUtTQXZJSFF1ZW05dmJTd2dZU3dnYkRzS0lDQWdJQ0FnSUNBZ0lDQWdRV011Wld4bGJXVnVkSE5iTVRKZElEMGdMV2tzSUVWakxtVnNaVzFsYm5Seld6RXlYU0E5SUdrc0lHRWdQU0F0YnlBcUlIUXVZWE53WldOMElDc2djaXdnYkNBOUlHOGdLaUIwTG1GemNHVmpkQ0FySUhJc0lFWnVMbVZzWlcxbGJuUnpXekJkSUQwZ01pQXFJSFF1Ym1WaGNpQXZJQ2hzSUMwZ1lTa3NJRVp1TG1Wc1pXMWxiblJ6V3poZElEMGdLR3dnS3lCaEtTQXZJQ2hzSUMwZ1lTa3NJSFJvYVhNdVkyRnRaWEpoVEM1d2NtOXFaV04wYVc5dVRXRjBjbWw0TG1OdmNIa29SbTRwTENCaElEMGdMVzhnS2lCMExtRnpjR1ZqZENBdElISXNJR3dnUFNCdklDb2dkQzVoYzNCbFkzUWdMU0J5TENCR2JpNWxiR1Z0Wlc1MGMxc3dYU0E5SURJZ0tpQjBMbTVsWVhJZ0x5QW9iQ0F0SUdFcExDQkdiaTVsYkdWdFpXNTBjMXM0WFNBOUlDaHNJQ3NnWVNrZ0x5QW9iQ0F0SUdFcExDQjBhR2x6TG1OaGJXVnlZVkl1Y0hKdmFtVmpkR2x2YmsxaGRISnBlQzVqYjNCNUtFWnVLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZEdocGN5NWpZVzFsY21GTUxtMWhkSEpwZUZkdmNteGtMbU52Y0hrb1pTNXRZWFJ5YVhoWGIzSnNaQ2t1YlhWc2RHbHdiSGtvUVdNcExDQjBhR2x6TG1OaGJXVnlZVkl1YldGMGNtbDRWMjl5YkdRdVkyOXdlU2hsTG0xaGRISnBlRmR2Y214a0tTNXRkV3gwYVhCc2VTaEZZeWs3Q2lBZ0lDQjlDbjBzSUZkb0lEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTQTlJQ0V3S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUYxZEc5VGRHRnlkQ0E5SUdVc0lIUm9hWE11YzNSaGNuUlVhVzFsSUQwZ01Dd2dkR2hwY3k1dmJHUlVhVzFsSUQwZ01Dd2dkR2hwY3k1bGJHRndjMlZrVkdsdFpTQTlJREFzSUhSb2FYTXVjblZ1Ym1sdVp5QTlJQ0V4T3dvZ0lDQWdmUW9nSUNBZ2MzUmhjblFvS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV6ZEdGeWRGUnBiV1VnUFNCRFl5Z3BMQ0IwYUdsekxtOXNaRlJwYldVZ1BTQjBhR2x6TG5OMFlYSjBWR2x0WlN3Z2RHaHBjeTVsYkdGd2MyVmtWR2x0WlNBOUlEQXNJSFJvYVhNdWNuVnVibWx1WnlBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnYzNSdmNDZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxkRVZzWVhCelpXUlVhVzFsS0Nrc0lIUm9hWE11Y25WdWJtbHVaeUE5SUNFeExDQjBhR2x6TG1GMWRHOVRkR0Z5ZENBOUlDRXhPd29nSUNBZ2ZRb2dJQ0FnWjJWMFJXeGhjSE5sWkZScGJXVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBSR1ZzZEdFb0tTd2dkR2hwY3k1bGJHRndjMlZrVkdsdFpUc0tJQ0FnSUgwS0lDQWdJR2RsZEVSbGJIUmhLQ2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQmxJRDBnTURzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1aGRYUnZVM1JoY25RZ0ppWWdJWFJvYVhNdWNuVnVibWx1WnlrZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25Rb0tTd2dNRHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV5ZFc1dWFXNW5LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ1EyTW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ1pTQTlJQ2gwSUMwZ2RHaHBjeTV2YkdSVWFXMWxLU0F2SURGbE15d2dkR2hwY3k1dmJHUlVhVzFsSUQwZ2RDd2dkR2hwY3k1bGJHRndjMlZrVkdsdFpTQXJQU0JsT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlRzS0lDQWdJSDBLZlRzS1puVnVZM1JwYjI0Z1EyTW9LU0I3Q2lBZ0lDQnlaWFIxY200Z0tIUjVjR1Z2WmlCd1pYSm1iM0p0WVc1alpTQStJQ0oxSWlBL0lFUmhkR1VnT2lCd1pYSm1iM0p0WVc1alpTa3VibTkzS0NrN0NuMEtkbUZ5SUU1dUlEMGdibVYzSUUwc0lFeGpJRDBnYm1WM0lHZDBMQ0J3ZVNBOUlHNWxkeUJOTENCQ2JpQTlJRzVsZHlCTkxDQnRlU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWdwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkSGx3WlNBOUlDSkJkV1JwYjB4cGMzUmxibVZ5SWl3Z2RHaHBjeTVqYjI1MFpYaDBJRDBnU0dndVoyVjBRMjl1ZEdWNGRDZ3BMQ0IwYUdsekxtZGhhVzRnUFNCMGFHbHpMbU52Ym5SbGVIUXVZM0psWVhSbFIyRnBiaWdwTENCMGFHbHpMbWRoYVc0dVkyOXVibVZqZENoMGFHbHpMbU52Ym5SbGVIUXVaR1Z6ZEdsdVlYUnBiMjRwTENCMGFHbHpMbVpwYkhSbGNpQTlJRzUxYkd3c0lIUm9hWE11ZEdsdFpVUmxiSFJoSUQwZ01Dd2dkR2hwY3k1ZlkyeHZZMnNnUFNCdVpYY2dWMmc3Q2lBZ0lDQjlDaUFnSUNCblpYUkpibkIxZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdU93b2dJQ0FnZlFvZ0lDQWdjbVZ0YjNabFJtbHNkR1Z5S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVpwYkhSbGNpQWhQVDBnYm5Wc2JDQW1KaUFvZEdocGN5NW5ZV2x1TG1ScGMyTnZibTVsWTNRb2RHaHBjeTVtYVd4MFpYSXBMQ0IwYUdsekxtWnBiSFJsY2k1a2FYTmpiMjV1WldOMEtIUm9hWE11WTI5dWRHVjRkQzVrWlhOMGFXNWhkR2x2Ymlrc0lIUm9hWE11WjJGcGJpNWpiMjV1WldOMEtIUm9hWE11WTI5dWRHVjRkQzVrWlhOMGFXNWhkR2x2Ymlrc0lIUm9hWE11Wm1sc2RHVnlJRDBnYm5Wc2JDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4MFpYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVptbHNkR1Z5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbWxzZEdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bWFXeDBaWElnSVQwOUlHNTFiR3dnUHlBb2RHaHBjeTVuWVdsdUxtUnBjMk52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWElwTENCMGFHbHpMbVpwYkhSbGNpNWthWE5qYjI1dVpXTjBLSFJvYVhNdVkyOXVkR1Y0ZEM1a1pYTjBhVzVoZEdsdmJpa3BJRG9nZEdocGN5NW5ZV2x1TG1ScGMyTnZibTVsWTNRb2RHaHBjeTVqYjI1MFpYaDBMbVJsYzNScGJtRjBhVzl1S1N3Z2RHaHBjeTVtYVd4MFpYSWdQU0JsTENCMGFHbHpMbWRoYVc0dVkyOXVibVZqZENoMGFHbHpMbVpwYkhSbGNpa3NJSFJvYVhNdVptbHNkR1Z5TG1OdmJtNWxZM1FvZEdocGN5NWpiMjUwWlhoMExtUmxjM1JwYm1GMGFXOXVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEUxaGMzUmxjbFp2YkhWdFpTZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bllXbHVMbWRoYVc0dWRtRnNkV1U3Q2lBZ0lDQjlDaUFnSUNCelpYUk5ZWE4wWlhKV2IyeDFiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWRoYVc0dVoyRnBiaTV6WlhSVVlYSm5aWFJCZEZScGJXVW9aU3dnZEdocGN5NWpiMjUwWlhoMExtTjFjbkpsYm5SVWFXMWxMQ0F1TURFcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTa2dld29nSUNBZ0lDQWdJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amIyNTBaWGgwTG14cGMzUmxibVZ5TENCdUlEMGdkR2hwY3k1MWNEc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NTBhVzFsUkdWc2RHRWdQU0IwYUdsekxsOWpiRzlqYXk1blpYUkVaV3gwWVNncExDQjBhR2x6TG0xaGRISnBlRmR2Y214a0xtUmxZMjl0Y0c5elpTaE9iaXdnVEdNc0lIQjVLU3dnUW00dWMyVjBLREFzSURBc0lDMHhLUzVoY0hCc2VWRjFZWFJsY201cGIyNG9UR01wTENCMExuQnZjMmwwYVc5dVdDa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZMjl1ZEdWNGRDNWpkWEp5Wlc1MFZHbHRaU0FySUhSb2FYTXVkR2x0WlVSbGJIUmhPd29nSUNBZ0lDQWdJQ0FnSUNCMExuQnZjMmwwYVc5dVdDNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNoT2JpNTRMQ0JwS1N3Z2RDNXdiM05wZEdsdmJsa3ViR2x1WldGeVVtRnRjRlJ2Vm1Gc2RXVkJkRlJwYldVb1RtNHVlU3dnYVNrc0lIUXVjRzl6YVhScGIyNWFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtFNXVMbm9zSUdrcExDQjBMbVp2Y25kaGNtUllMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtFSnVMbmdzSUdrcExDQjBMbVp2Y25kaGNtUlpMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtFSnVMbmtzSUdrcExDQjBMbVp2Y25kaGNtUmFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtFSnVMbm9zSUdrcExDQjBMblZ3V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2h1TG5nc0lHa3BMQ0IwTG5Wd1dTNXNhVzVsWVhKU1lXMXdWRzlXWVd4MVpVRjBWR2x0WlNodUxua3NJR2twTENCMExuVndXaTVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaHVMbm9zSUdrcE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCMExuTmxkRkJ2YzJsMGFXOXVLRTV1TG5nc0lFNXVMbmtzSUU1dUxub3BMQ0IwTG5ObGRFOXlhV1Z1ZEdGMGFXOXVLRUp1TG5nc0lFSnVMbmtzSUVKdUxub3NJRzR1ZUN3Z2JpNTVMQ0J1TG5vcE93b2dJQ0FnZlFwOUxDQmFZU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2MzVndaWElvS1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRWFZrYVc4aUxDQjBhR2x6TG14cGMzUmxibVZ5SUQwZ1pTd2dkR2hwY3k1amIyNTBaWGgwSUQwZ1pTNWpiMjUwWlhoMExDQjBhR2x6TG1kaGFXNGdQU0IwYUdsekxtTnZiblJsZUhRdVkzSmxZWFJsUjJGcGJpZ3BMQ0IwYUdsekxtZGhhVzR1WTI5dWJtVmpkQ2hsTG1kbGRFbHVjSFYwS0NrcExDQjBhR2x6TG1GMWRHOXdiR0Y1SUQwZ0lURXNJSFJvYVhNdVluVm1abVZ5SUQwZ2JuVnNiQ3dnZEdocGN5NWtaWFIxYm1VZ1BTQXdMQ0IwYUdsekxteHZiM0FnUFNBaE1Td2dkR2hwY3k1c2IyOXdVM1JoY25RZ1BTQXdMQ0IwYUdsekxteHZiM0JGYm1RZ1BTQXdMQ0IwYUdsekxtOW1abk5sZENBOUlEQXNJSFJvYVhNdVpIVnlZWFJwYjI0Z1BTQjJiMmxrSURBc0lIUm9hWE11Y0d4aGVXSmhZMnRTWVhSbElEMGdNU3dnZEdocGN5NXBjMUJzWVhscGJtY2dQU0FoTVN3Z2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFNBaE1Dd2dkR2hwY3k1emIzVnlZMlVnUFNCdWRXeHNMQ0IwYUdsekxuTnZkWEpqWlZSNWNHVWdQU0FpWlcxd2RIa2lMQ0IwYUdsekxsOXpkR0Z5ZEdWa1FYUWdQU0F3TENCMGFHbHpMbDl3Y205bmNtVnpjeUE5SURBc0lIUm9hWE11WDJOdmJtNWxZM1JsWkNBOUlDRXhMQ0IwYUdsekxtWnBiSFJsY25NZ1BTQmJYVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFOTFkSEIxZENncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVuWVdsdU93b2dJQ0FnZlFvZ0lDQWdjMlYwVG05a1pWTnZkWEpqWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YUdGelVHeGhlV0poWTJ0RGIyNTBjbTlzSUQwZ0lURXNJSFJvYVhNdWMyOTFjbU5sVkhsd1pTQTlJQ0poZFdScGIwNXZaR1VpTENCMGFHbHpMbk52ZFhKalpTQTlJR1VzSUhSb2FYTXVZMjl1Ym1WamRDZ3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVFdWa2FXRkZiR1Z0Wlc1MFUyOTFjbU5sS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFNBaE1Td2dkR2hwY3k1emIzVnlZMlZVZVhCbElEMGdJbTFsWkdsaFRtOWtaU0lzSUhSb2FYTXVjMjkxY21ObElEMGdkR2hwY3k1amIyNTBaWGgwTG1OeVpXRjBaVTFsWkdsaFJXeGxiV1Z1ZEZOdmRYSmpaU2hsS1N3Z2RHaHBjeTVqYjI1dVpXTjBLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6WlhSTlpXUnBZVk4wY21WaGJWTnZkWEpqWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YUdGelVHeGhlV0poWTJ0RGIyNTBjbTlzSUQwZ0lURXNJSFJvYVhNdWMyOTFjbU5sVkhsd1pTQTlJQ0p0WldScFlWTjBjbVZoYlU1dlpHVWlMQ0IwYUdsekxuTnZkWEpqWlNBOUlIUm9hWE11WTI5dWRHVjRkQzVqY21WaGRHVk5aV1JwWVZOMGNtVmhiVk52ZFhKalpTaGxLU3dnZEdocGN5NWpiMjV1WldOMEtDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJDZFdabVpYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtSjFabVpsY2lBOUlHVXNJSFJvYVhNdWMyOTFjbU5sVkhsd1pTQTlJQ0ppZFdabVpYSWlMQ0IwYUdsekxtRjFkRzl3YkdGNUlDWW1JSFJvYVhNdWNHeGhlU2dwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnY0d4aGVTaGxJRDBnTUNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtbHpVR3hoZVdsdVp5QTlQVDBnSVRBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nUVhWa2FXOGdhWE1nWVd4eVpXRmtlU0J3YkdGNWFXNW5MaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtaGhjMUJzWVhsaVlXTnJRMjl1ZEhKdmJDQTlQVDBnSVRFcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1QmRXUnBiem9nZEdocGN5QkJkV1JwYnlCb1lYTWdibThnY0d4aGVXSmhZMnNnWTI5dWRISnZiQzRpS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TGw5emRHRnlkR1ZrUVhRZ1BTQjBhR2x6TG1OdmJuUmxlSFF1WTNWeWNtVnVkRlJwYldVZ0t5QmxPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdkR2hwY3k1amIyNTBaWGgwTG1OeVpXRjBaVUoxWm1abGNsTnZkWEpqWlNncE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtSjFabVpsY2lBOUlIUm9hWE11WW5WbVptVnlMQ0IwTG14dmIzQWdQU0IwYUdsekxteHZiM0FzSUhRdWJHOXZjRk4wWVhKMElEMGdkR2hwY3k1c2IyOXdVM1JoY25Rc0lIUXViRzl2Y0VWdVpDQTlJSFJvYVhNdWJHOXZjRVZ1WkN3Z2RDNXZibVZ1WkdWa0lEMGdkR2hwY3k1dmJrVnVaR1ZrTG1KcGJtUW9kR2hwY3lrc0lIUXVjM1JoY25Rb2RHaHBjeTVmYzNSaGNuUmxaRUYwTENCMGFHbHpMbDl3Y205bmNtVnpjeUFySUhSb2FYTXViMlptYzJWMExDQjBhR2x6TG1SMWNtRjBhVzl1S1N3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFNBaE1Dd2dkR2hwY3k1emIzVnlZMlVnUFNCMExDQjBhR2x6TG5ObGRFUmxkSFZ1WlNoMGFHbHpMbVJsZEhWdVpTa3NJSFJvYVhNdWMyVjBVR3hoZVdKaFkydFNZWFJsS0hSb2FYTXVjR3hoZVdKaFkydFNZWFJsS1N3Z2RHaHBjeTVqYjI1dVpXTjBLQ2s3Q2lBZ0lDQjlDaUFnSUNCd1lYVnpaU2dwSUhzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BUMDlJQ0V4S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1UVhWa2FXODZJSFJvYVhNZ1FYVmthVzhnYUdGeklHNXZJSEJzWVhsaVlXTnJJR052Ym5SeWIyd3VJaWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVhWE5RYkdGNWFXNW5JRDA5UFNBaE1DQW1KaUFvZEdocGN5NWZjSEp2WjNKbGMzTWdLejBnVFdGMGFDNXRZWGdvZEdocGN5NWpiMjUwWlhoMExtTjFjbkpsYm5SVWFXMWxJQzBnZEdocGN5NWZjM1JoY25SbFpFRjBMQ0F3S1NBcUlIUm9hWE11Y0d4aGVXSmhZMnRTWVhSbExDQjBhR2x6TG14dmIzQWdQVDA5SUNFd0lDWW1JQ2gwYUdsekxsOXdjbTluY21WemN5QTlJSFJvYVhNdVgzQnliMmR5WlhOeklDVWdLSFJvYVhNdVpIVnlZWFJwYjI0Z2ZId2dkR2hwY3k1aWRXWm1aWEl1WkhWeVlYUnBiMjRwS1N3Z2RHaHBjeTV6YjNWeVkyVXVjM1J2Y0NncExDQjBhR2x6TG5OdmRYSmpaUzV2Ym1WdVpHVmtJRDBnYm5Wc2JDd2dkR2hwY3k1cGMxQnNZWGxwYm1jZ1BTQWhNU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0J6ZEc5d0tDa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbWhoYzFCc1lYbGlZV05yUTI5dWRISnZiQ0E5UFQwZ0lURXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ2RHaHBjeUJCZFdScGJ5Qm9ZWE1nYm04Z2NHeGhlV0poWTJzZ1kyOXVkSEp2YkM0aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmNISnZaM0psYzNNZ1BTQXdMQ0IwYUdsekxuTnZkWEpqWlM1emRHOXdLQ2tzSUhSb2FYTXVjMjkxY21ObExtOXVaVzVrWldRZ1BTQnVkV3hzTENCMGFHbHpMbWx6VUd4aGVXbHVaeUE5SUNFeExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1kyOXVibVZqZENncElIc0tJQ0FnSUNBZ0lDQnBaaUFvZEdocGN5NW1hV3gwWlhKekxteGxibWQwYUNBK0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6YjNWeVkyVXVZMjl1Ym1WamRDaDBhR2x6TG1acGJIUmxjbk5iTUYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1VnUFNBeExDQjBJRDBnZEdocGN5NW1hV3gwWlhKekxteGxibWQwYURzZ1pTQThJSFE3SUdVckt5bDBhR2x6TG1acGJIUmxjbk5iWlNBdElERmRMbU52Ym01bFkzUW9kR2hwY3k1bWFXeDBaWEp6VzJWZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NW1hV3gwWlhKelczUm9hWE11Wm1sc2RHVnljeTVzWlc1bmRHZ2dMU0F4WFM1amIyNXVaV04wS0hSb2FYTXVaMlYwVDNWMGNIVjBLQ2twT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0IwYUdsekxuTnZkWEpqWlM1amIyNXVaV04wS0hSb2FYTXVaMlYwVDNWMGNIVjBLQ2twT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWpiMjV1WldOMFpXUWdQU0FoTUN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdScGMyTnZibTVsWTNRb0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0hSb2FYTXVabWxzZEdWeWN5NXNaVzVuZEdnZ1BpQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzI5MWNtTmxMbVJwYzJOdmJtNWxZM1FvZEdocGN5NW1hV3gwWlhKeld6QmRLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCbElEMGdNU3dnZENBOUlIUm9hWE11Wm1sc2RHVnljeTVzWlc1bmRHZzdJR1VnUENCME95QmxLeXNwZEdocGN5NW1hV3gwWlhKelcyVWdMU0F4WFM1a2FYTmpiMjV1WldOMEtIUm9hWE11Wm1sc2RHVnljMXRsWFNrN0NpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVptbHNkR1Z5YzF0MGFHbHpMbVpwYkhSbGNuTXViR1Z1WjNSb0lDMGdNVjB1WkdselkyOXVibVZqZENoMGFHbHpMbWRsZEU5MWRIQjFkQ2dwS1RzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZEdocGN5NXpiM1Z5WTJVdVpHbHpZMjl1Ym1WamRDaDBhR2x6TG1kbGRFOTFkSEIxZENncEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmWTI5dWJtVmpkR1ZrSUQwZ0lURXNJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4MFpYSnpLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtWnBiSFJsY25NN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHYVd4MFpYSnpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlNCOGZDQW9aU0E5SUZ0ZEtTd2dkR2hwY3k1ZlkyOXVibVZqZEdWa0lEMDlQU0FoTUNBL0lDaDBhR2x6TG1ScGMyTnZibTVsWTNRb0tTd2dkR2hwY3k1bWFXeDBaWEp6SUQwZ1pTNXpiR2xqWlNncExDQjBhR2x6TG1OdmJtNWxZM1FvS1NrZ09pQjBhR2x6TG1acGJIUmxjbk1nUFNCbExuTnNhV05sS0Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUkVaWFIxYm1Vb1pTa2dld29nSUNBZ0lDQWdJR2xtSUNoMGFHbHpMbVJsZEhWdVpTQTlJR1VzSUhSb2FYTXVjMjkxY21ObExtUmxkSFZ1WlNBaFBUMGdkbTlwWkNBd0tTQnlaWFIxY200Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFQwOUlDRXdJQ1ltSUhSb2FYTXVjMjkxY21ObExtUmxkSFZ1WlM1elpYUlVZWEpuWlhSQmRGUnBiV1VvZEdocGN5NWtaWFIxYm1Vc0lIUm9hWE11WTI5dWRHVjRkQzVqZFhKeVpXNTBWR2x0WlN3Z0xqQXhLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEVSbGRIVnVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWtaWFIxYm1VN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHYVd4MFpYSW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVoyVjBSbWxzZEdWeWN5Z3BXekJkT3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbWxzZEdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1elpYUkdhV3gwWlhKektHVWdQeUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQmRJRG9nVzEwcE93b2dJQ0FnZlFvZ0lDQWdjMlYwVUd4aGVXSmhZMnRTWVhSbEtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVvWVhOUWJHRjVZbUZqYTBOdmJuUnliMndnUFQwOUlDRXhLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRWFZrYVc4NklIUm9hWE1nUVhWa2FXOGdhR0Z6SUc1dklIQnNZWGxpWVdOcklHTnZiblJ5YjJ3dUlpazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHeGhlV0poWTJ0U1lYUmxJRDBnWlN3Z2RHaHBjeTVwYzFCc1lYbHBibWNnUFQwOUlDRXdJQ1ltSUhSb2FYTXVjMjkxY21ObExuQnNZWGxpWVdOclVtRjBaUzV6WlhSVVlYSm5aWFJCZEZScGJXVW9kR2hwY3k1d2JHRjVZbUZqYTFKaGRHVXNJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTd2dMakF4S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdkbGRGQnNZWGxpWVdOclVtRjBaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXdiR0Y1WW1GamExSmhkR1U3Q2lBZ0lDQjlDaUFnSUNCdmJrVnVaR1ZrS0NrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YVhOUWJHRjVhVzVuSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0JuWlhSTWIyOXdLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtaGhjMUJzWVhsaVlXTnJRMjl1ZEhKdmJDQTlQVDBnSVRFZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVCZFdScGJ6b2dkR2hwY3lCQmRXUnBieUJvWVhNZ2JtOGdjR3hoZVdKaFkyc2dZMjl1ZEhKdmJDNGlLU3dnSVRFcElEb2dkR2hwY3k1c2IyOXdPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHOXZjQ2hsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWFHRnpVR3hoZVdKaFkydERiMjUwY205c0lEMDlQU0FoTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtGMVpHbHZPaUIwYUdseklFRjFaR2x2SUdoaGN5QnVieUJ3YkdGNVltRmpheUJqYjI1MGNtOXNMaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbXh2YjNBZ1BTQmxMQ0IwYUdsekxtbHpVR3hoZVdsdVp5QTlQVDBnSVRBZ0ppWWdLSFJvYVhNdWMyOTFjbU5sTG14dmIzQWdQU0IwYUdsekxteHZiM0FwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFRHOXZjRk4wWVhKMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1c2IyOXdVM1JoY25RZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVEc5dmNFVnVaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXViRzl2Y0VWdVpDQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSV2IyeDFiV1VvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVaMkZwYmk1bllXbHVMblpoYkhWbE93b2dJQ0FnZlFvZ0lDQWdjMlYwVm05c2RXMWxLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NW5ZV2x1TG1kaGFXNHVjMlYwVkdGeVoyVjBRWFJVYVcxbEtHVXNJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTd2dMakF4S1N3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnZW00Z1BTQnVaWGNnVFN3Z1VtTWdQU0J1WlhjZ1ozUXNJR2Q1SUQwZ2JtVjNJRTBzSUZWdUlEMGdibVYzSUUwc0lIaDVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5QmFZU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsS1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkJoYm01bGNpQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amNtVmhkR1ZRWVc1dVpYSW9LU3dnZEdocGN5NXdZVzV1WlhJdWNHRnVibWx1WjAxdlpHVnNJRDBnSWtoU1ZFWWlMQ0IwYUdsekxuQmhibTVsY2k1amIyNXVaV04wS0hSb2FYTXVaMkZwYmlrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJQZFhSd2RYUW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNHRnVibVZ5T3dvZ0lDQWdmUW9nSUNBZ1oyVjBVbVZtUkdsemRHRnVZMlVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0Z1Ym1WeUxuSmxaa1JwYzNSaGJtTmxPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtVm1SR2x6ZEdGdVkyVW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhibTVsY2k1eVpXWkVhWE4wWVc1alpTQTlJR1VzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JuWlhSU2IyeHNiMlptUm1GamRHOXlLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhibTVsY2k1eWIyeHNiMlptUm1GamRHOXlPd29nSUNBZ2ZRb2dJQ0FnYzJWMFVtOXNiRzltWmtaaFkzUnZjaWhsS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjR0Z1Ym1WeUxuSnZiR3h2Wm1aR1lXTjBiM0lnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1oyVjBSR2x6ZEdGdVkyVk5iMlJsYkNncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3WVc1dVpYSXVaR2x6ZEdGdVkyVk5iMlJsYkRzS0lDQWdJSDBLSUNBZ0lITmxkRVJwYzNSaGJtTmxUVzlrWld3b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTVrYVhOMFlXNWpaVTF2WkdWc0lEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR2RsZEUxaGVFUnBjM1JoYm1ObEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5CaGJtNWxjaTV0WVhoRWFYTjBZVzVqWlRzS0lDQWdJSDBLSUNBZ0lITmxkRTFoZUVScGMzUmhibU5sS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3WVc1dVpYSXViV0Y0UkdsemRHRnVZMlVnUFNCbExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSR2x5WldOMGFXOXVZV3hEYjI1bEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV3WVc1dVpYSXVZMjl1WlVsdWJtVnlRVzVuYkdVZ1BTQmxMQ0IwYUdsekxuQmhibTVsY2k1amIyNWxUM1YwWlhKQmJtZHNaU0E5SUhRc0lIUm9hWE11Y0dGdWJtVnlMbU52Ym1WUGRYUmxja2RoYVc0Z1BTQnVMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFRXRjBjbWw0VjI5eWJHUW9aU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaHpkWEJsY2k1MWNHUmhkR1ZOWVhSeWFYaFhiM0pzWkNobEtTd2dkR2hwY3k1b1lYTlFiR0Y1WW1GamEwTnZiblJ5YjJ3Z1BUMDlJQ0V3SUNZbUlIUm9hWE11YVhOUWJHRjVhVzVuSUQwOVBTQWhNU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJSFJvYVhNdWJXRjBjbWw0VjI5eWJHUXVaR1ZqYjIxd2IzTmxLSHB1TENCU1l5d2daM2twTENCVmJpNXpaWFFvTUN3Z01Dd2dNU2t1WVhCd2JIbFJkV0YwWlhKdWFXOXVLRkpqS1RzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVjR0Z1Ym1WeU93b2dJQ0FnSUNBZ0lHbG1JQ2gwTG5CdmMybDBhVzl1V0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVkyOXVkR1Y0ZEM1amRYSnlaVzUwVkdsdFpTQXJJSFJvYVhNdWJHbHpkR1Z1WlhJdWRHbHRaVVJsYkhSaE93b2dJQ0FnSUNBZ0lDQWdJQ0IwTG5CdmMybDBhVzl1V0M1c2FXNWxZWEpTWVcxd1ZHOVdZV3gxWlVGMFZHbHRaU2g2Ymk1NExDQnVLU3dnZEM1d2IzTnBkR2x2YmxrdWJHbHVaV0Z5VW1GdGNGUnZWbUZzZFdWQmRGUnBiV1VvZW00dWVTd2diaWtzSUhRdWNHOXphWFJwYjI1YUxteHBibVZoY2xKaGJYQlViMVpoYkhWbFFYUlVhVzFsS0hwdUxub3NJRzRwTENCMExtOXlhV1Z1ZEdGMGFXOXVXQzVzYVc1bFlYSlNZVzF3Vkc5V1lXeDFaVUYwVkdsdFpTaFZiaTU0TENCdUtTd2dkQzV2Y21sbGJuUmhkR2x2YmxrdWJHbHVaV0Z5VW1GdGNGUnZWbUZzZFdWQmRGUnBiV1VvVlc0dWVTd2diaWtzSUhRdWIzSnBaVzUwWVhScGIyNWFMbXhwYm1WaGNsSmhiWEJVYjFaaGJIVmxRWFJVYVcxbEtGVnVMbm9zSUc0cE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCMExuTmxkRkJ2YzJsMGFXOXVLSHB1TG5nc0lIcHVMbmtzSUhwdUxub3BMQ0IwTG5ObGRFOXlhV1Z1ZEdGMGFXOXVLRlZ1TG5nc0lGVnVMbmtzSUZWdUxub3BPd29nSUNBZ2ZRcDlMQ0J4YUNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F5TURRNEtYc0tJQ0FnSUNBZ0lDQjBhR2x6TG1GdVlXeDVjMlZ5SUQwZ1pTNWpiMjUwWlhoMExtTnlaV0YwWlVGdVlXeDVjMlZ5S0Nrc0lIUm9hWE11WVc1aGJIbHpaWEl1Wm1aMFUybDZaU0E5SUhRc0lIUm9hWE11WkdGMFlTQTlJRzVsZHlCVmFXNTBPRUZ5Y21GNUtIUm9hWE11WVc1aGJIbHpaWEl1Wm5KbGNYVmxibU41UW1sdVEyOTFiblFwTENCbExtZGxkRTkxZEhCMWRDZ3BMbU52Ym01bFkzUW9kR2hwY3k1aGJtRnNlWE5sY2lrN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJHY21WeGRXVnVZM2xFWVhSaEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1GdVlXeDVjMlZ5TG1kbGRFSjVkR1ZHY21WeGRXVnVZM2xFWVhSaEtIUm9hWE11WkdGMFlTa3NJSFJvYVhNdVpHRjBZVHNLSUNBZ0lIMEtJQ0FnSUdkbGRFRjJaWEpoWjJWR2NtVnhkV1Z1WTNrb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQXdMQ0IwSUQwZ2RHaHBjeTVuWlhSR2NtVnhkV1Z1WTNsRVlYUmhLQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0J1SUQwZ01Ec2diaUE4SUhRdWJHVnVaM1JvT3lCdUt5c3BaU0FyUFNCMFcyNWRPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQmxJQzhnZEM1c1pXNW5kR2c3Q2lBZ0lDQjlDbjBzSUZob0lEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2RHaHBjeTVpYVc1a2FXNW5JRDBnWlN3Z2RHaHBjeTUyWVd4MVpWTnBlbVVnUFNCdU93b2dJQ0FnSUNBZ0lHeGxkQ0JwTENCeUxDQnZPd29nSUNBZ0lDQWdJSE4zYVhSamFDaDBLWHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpY1hWaGRHVnlibWx2YmlJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElEMGdkR2hwY3k1ZmMyeGxjbkFzSUhJZ1BTQjBhR2x6TGw5emJHVnljRUZrWkdsMGFYWmxMQ0J2SUQwZ2RHaHBjeTVmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVZGMVlYUmxjbTVwYjI0c0lIUm9hWE11WW5WbVptVnlJRDBnYm1WM0lFWnNiMkYwTmpSQmNuSmhlU2h1SUNvZ05pa3NJSFJvYVhNdVgzZHZjbXRKYm1SbGVDQTlJRFU3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpY21WaGF6c0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWljM1J5YVc1bklqb0tJQ0FnSUNBZ0lDQWdJQ0FnWTJGelpTQWlZbTl2YkNJNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcElEMGdkR2hwY3k1ZmMyVnNaV04wTENCeUlEMGdkR2hwY3k1ZmMyVnNaV04wTENCdklEMGdkR2hwY3k1ZmMyVjBRV1JrYVhScGRtVkpaR1Z1ZEdsMGVVOTBhR1Z5TENCMGFHbHpMbUoxWm1abGNpQTlJRzVsZHlCQmNuSmhlU2h1SUNvZ05TazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdaR1ZtWVhWc2REb0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHa2dQU0IwYUdsekxsOXNaWEp3TENCeUlEMGdkR2hwY3k1ZmJHVnljRUZrWkdsMGFYWmxMQ0J2SUQwZ2RHaHBjeTVmYzJWMFFXUmthWFJwZG1WSlpHVnVkR2wwZVU1MWJXVnlhV01zSUhSb2FYTXVZblZtWm1WeUlEMGdibVYzSUVac2IyRjBOalJCY25KaGVTaHVJQ29nTlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11WDIxcGVFSjFabVpsY2xKbFoybHZiaUE5SUdrc0lIUm9hWE11WDIxcGVFSjFabVpsY2xKbFoybHZia0ZrWkdsMGFYWmxJRDBnY2l3Z2RHaHBjeTVmYzJWMFNXUmxiblJwZEhrZ1BTQnZMQ0IwYUdsekxsOXZjbWxuU1c1a1pYZ2dQU0F6TENCMGFHbHpMbDloWkdSSmJtUmxlQ0E5SURRc0lIUm9hWE11WTNWdGRXeGhkR2wyWlZkbGFXZG9kQ0E5SURBc0lIUm9hWE11WTNWdGRXeGhkR2wyWlZkbGFXZG9kRUZrWkdsMGFYWmxJRDBnTUN3Z2RHaHBjeTUxYzJWRGIzVnVkQ0E5SURBc0lIUm9hWE11Y21WbVpYSmxibU5sUTI5MWJuUWdQU0F3T3dvZ0lDQWdmUW9nSUNBZ1lXTmpkVzExYkdGMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJRzRnUFNCMGFHbHpMbUoxWm1abGNpd2dhU0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0J5SUQwZ1pTQXFJR2tnS3lCcExDQnZJRDBnZEdocGN5NWpkVzExYkdGMGFYWmxWMlZwWjJoME93b2dJQ0FnSUNBZ0lHbG1JQ2h2SUQwOVBTQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREE3SUdFZ0lUMDlJR2s3SUNzcllTbHVXM0lnS3lCaFhTQTlJRzViWVYwN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnUFNCME93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJRzhnS3owZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRXhJRDBnZENBdklHODdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJpaHVMQ0J5TENBd0xDQmhNU3dnYVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUm9hWE11WTNWdGRXeGhkR2wyWlZkbGFXZG9kQ0E5SUc4N0NpQWdJQ0I5Q2lBZ0lDQmhZMk4xYlhWc1lYUmxRV1JrYVhScGRtVW9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWlkV1ptWlhJc0lHNGdQU0IwYUdsekxuWmhiSFZsVTJsNlpTd2dhU0E5SUc0Z0tpQjBhR2x6TGw5aFpHUkpibVJsZURzS0lDQWdJQ0FnSUNCMGFHbHpMbU4xYlhWc1lYUnBkbVZYWldsbmFIUkJaR1JwZEdsMlpTQTlQVDBnTUNBbUppQjBhR2x6TGw5elpYUkpaR1Z1ZEdsMGVTZ3BMQ0IwYUdsekxsOXRhWGhDZFdabVpYSlNaV2RwYjI1QlpHUnBkR2wyWlNoMExDQnBMQ0F3TENCbExDQnVLU3dnZEdocGN5NWpkVzExYkdGMGFYWmxWMlZwWjJoMFFXUmthWFJwZG1VZ0t6MGdaVHNLSUNBZ0lIMEtJQ0FnSUdGd2NHeDVLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0J1SUQwZ2RHaHBjeTVpZFdabVpYSXNJR2tnUFNCbElDb2dkQ0FySUhRc0lISWdQU0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhRc0lHOGdQU0IwYUdsekxtTjFiWFZzWVhScGRtVlhaV2xuYUhSQlpHUnBkR2wyWlN3Z1lTQTlJSFJvYVhNdVltbHVaR2x1WnpzS0lDQWdJQ0FnSUNCcFppQW9kR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwSUQwZ01Dd2dkR2hwY3k1amRXMTFiR0YwYVhabFYyVnBaMmgwUVdSa2FYUnBkbVVnUFNBd0xDQnlJRHdnTVNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFFnS2lCMGFHbHpMbDl2Y21sblNXNWtaWGc3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDIxcGVFSjFabVpsY2xKbFoybHZiaWh1TENCcExDQnNMQ0F4SUMwZ2Npd2dkQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUc4Z1BpQXdJQ1ltSUhSb2FYTXVYMjFwZUVKMVptWmxjbEpsWjJsdmJrRmtaR2wwYVhabEtHNHNJR2tzSUhSb2FYTXVYMkZrWkVsdVpHVjRJQ29nZEN3Z01Td2dkQ2s3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JzTVNBOUlIUXNJR01nUFNCMElDc2dkRHNnYkRFZ0lUMDlJR003SUNzcmJERXBhV1lnS0c1YmJERmRJQ0U5UFNCdVcyd3hJQ3NnZEYwcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWVM1elpYUldZV3gxWlNodUxDQnBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ1luSmxZV3M3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2MyRjJaVTl5YVdkcGJtRnNVM1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1KcGJtUnBibWNzSUhRZ1BTQjBhR2x6TG1KMVptWmxjaXdnYmlBOUlIUm9hWE11ZG1Gc2RXVlRhWHBsTENCcElEMGdiaUFxSUhSb2FYTXVYMjl5YVdkSmJtUmxlRHNLSUNBZ0lDQWdJQ0JsTG1kbGRGWmhiSFZsS0hRc0lHa3BPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdjaUE5SUc0c0lHOGdQU0JwT3lCeUlDRTlQU0J2T3lBckszSXBkRnR5WFNBOUlIUmJhU0FySUhJZ0pTQnVYVHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXpaWFJKWkdWdWRHbDBlU2dwTENCMGFHbHpMbU4xYlhWc1lYUnBkbVZYWldsbmFIUWdQU0F3TENCMGFHbHpMbU4xYlhWc1lYUnBkbVZYWldsbmFIUkJaR1JwZEdsMlpTQTlJREE3Q2lBZ0lDQjlDaUFnSUNCeVpYTjBiM0psVDNKcFoybHVZV3hUZEdGMFpTZ3BJSHNLSUNBZ0lDQWdJQ0JzWlhRZ1pTQTlJSFJvYVhNdWRtRnNkV1ZUYVhwbElDb2dNenNLSUNBZ0lDQWdJQ0IwYUdsekxtSnBibVJwYm1jdWMyVjBWbUZzZFdVb2RHaHBjeTVpZFdabVpYSXNJR1VwT3dvZ0lDQWdmUW9nSUNBZ1gzTmxkRUZrWkdsMGFYWmxTV1JsYm5ScGRIbE9kVzFsY21saktDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZllXUmtTVzVrWlhnZ0tpQjBhR2x6TG5aaGJIVmxVMmw2WlN3Z2RDQTlJR1VnS3lCMGFHbHpMblpoYkhWbFUybDZaVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNCbE95QnVJRHdnZERzZ2Jpc3JLWFJvYVhNdVluVm1abVZ5VzI1ZElEMGdNRHNLSUNBZ0lIMEtJQ0FnSUY5elpYUkJaR1JwZEdsMlpVbGtaVzUwYVhSNVVYVmhkR1Z5Ym1sdmJpZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxsOXpaWFJCWkdScGRHbDJaVWxrWlc1MGFYUjVUblZ0WlhKcFl5Z3BMQ0IwYUdsekxtSjFabVpsY2x0MGFHbHpMbDloWkdSSmJtUmxlQ0FxSUhSb2FYTXVkbUZzZFdWVGFYcGxJQ3NnTTEwZ1BTQXhPd29nSUNBZ2ZRb2dJQ0FnWDNObGRFRmtaR2wwYVhabFNXUmxiblJwZEhsUGRHaGxjaWdwSUhzS0lDQWdJQ0FnSUNCc1pYUWdaU0E5SUhSb2FYTXVYMjl5YVdkSmJtUmxlQ0FxSUhSb2FYTXVkbUZzZFdWVGFYcGxMQ0IwSUQwZ2RHaHBjeTVmWVdSa1NXNWtaWGdnS2lCMGFHbHpMblpoYkhWbFUybDZaVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNBd095QnVJRHdnZEdocGN5NTJZV3gxWlZOcGVtVTdJRzRyS3lsMGFHbHpMbUoxWm1abGNsdDBJQ3NnYmwwZ1BTQjBhR2x6TG1KMVptWmxjbHRsSUNzZ2JsMDdDaUFnSUNCOUNpQWdJQ0JmYzJWc1pXTjBLR1VzSUhRc0lHNHNJR2tzSUhJcElIc0tJQ0FnSUNBZ0lDQnBaaUFvYVNBK1BTQXVOU2tnWm05eUtHeGxkQ0J2SUQwZ01Ec2dieUFoUFQwZ2Nqc2dLeXR2S1dWYmRDQXJJRzlkSUQwZ1pWdHVJQ3NnYjEwN0NpQWdJQ0I5Q2lBZ0lDQmZjMnhsY25Bb1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJR2QwTG5Oc1pYSndSbXhoZENobExDQjBMQ0JsTENCMExDQmxMQ0J1TENCcEtUc0tJQ0FnSUgwS0lDQWdJRjl6YkdWeWNFRmtaR2wwYVhabEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVYM2R2Y210SmJtUmxlQ0FxSUhJN0NpQWdJQ0FnSUNBZ1ozUXViWFZzZEdsd2JIbFJkV0YwWlhKdWFXOXVjMFpzWVhRb1pTd2dieXdnWlN3Z2RDd2daU3dnYmlrc0lHZDBMbk5zWlhKd1JteGhkQ2hsTENCMExDQmxMQ0IwTENCbExDQnZMQ0JwS1RzS0lDQWdJSDBLSUNBZ0lGOXNaWEp3S0dVc0lIUXNJRzRzSUdrc0lISXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2J5QTlJREVnTFNCcE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ1lTQTlJREE3SUdFZ0lUMDlJSEk3SUNzcllTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZENBcklHRTdDaUFnSUNBZ0lDQWdJQ0FnSUdWYmJGMGdQU0JsVzJ4ZElDb2dieUFySUdWYmJpQXJJR0ZkSUNvZ2FUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0JmYkdWeWNFRmtaR2wwYVhabEtHVXNJSFFzSUc0c0lHa3NJSElwSUhzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUc4Z1BTQXdPeUJ2SUNFOVBTQnlPeUFySzI4cGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJSFFnS3lCdk93b2dJQ0FnSUNBZ0lDQWdJQ0JsVzJGZElEMGdaVnRoWFNBcklHVmJiaUFySUc5ZElDb2dhVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDbjBzSUNSaElEMGdJbHhjVzF4Y1hWeGNManBjWEM4aUxDQjVlU0E5SUc1bGR5QlNaV2RGZUhBb0lsc2lJQ3NnSkdFZ0t5QWlYU0lzSUNKbklpa3NJR3BoSUQwZ0lsdGVJaUFySUNSaElDc2dJbDBpTENCMmVTQTlJQ0piWGlJZ0t5QWtZUzV5WlhCc1lXTmxLQ0pjWEM0aUxDQWlJaWtnS3lBaVhTSXNJRjk1SUQwZ0x5Z29QenBYUXl0YlhDODZYU2txS1M4dWMyOTFjbU5sTG5KbGNHeGhZMlVvSWxkRElpd2dhbUVwTENCTmVTQTlJQzhvVjBOUFJDc3BQeTh1YzI5MWNtTmxMbkpsY0d4aFkyVW9JbGREVDBRaUxDQjJlU2tzSUdKNUlEMGdMeWcvT2x3dUtGZERLeWtvUHpwY1d5Z3VLeWxjWFNrL0tUOHZMbk52ZFhKalpTNXlaWEJzWVdObEtDSlhReUlzSUdwaEtTd2dkM2tnUFNBdlhDNG9WME1yS1NnL09seGJLQzRyS1Z4ZEtUOHZMbk52ZFhKalpTNXlaWEJzWVdObEtDSlhReUlzSUdwaEtTd2dVM2tnUFNCdVpYY2dVbVZuUlhod0tDSmVJaUFySUY5NUlDc2dUWGtnS3lCaWVTQXJJSGQ1SUNzZ0lpUWlLU3dnVkhrZ1BTQmJDaUFnSUNBaWJXRjBaWEpwWVd3aUxBb2dJQ0FnSW0xaGRHVnlhV0ZzY3lJc0NpQWdJQ0FpWW05dVpYTWlDbDBzSUVwb0lEMGdZMnhoYzNNZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTd2dkQ3dnYmlsN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdUlIeDhJR3RsTG5CaGNuTmxWSEpoWTJ0T1lXMWxLSFFwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVYM1JoY21kbGRFZHliM1Z3SUQwZ1pTd2dkR2hwY3k1ZlltbHVaR2x1WjNNZ1BTQmxMbk4xWW5OamNtbGlaVjhvZEN3Z2FTazdDaUFnSUNCOUNpQWdJQ0JuWlhSV1lXeDFaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1aWFXNWtLQ2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxsOTBZWEpuWlhSSGNtOTFjQzV1UTJGamFHVmtUMkpxWldOMGMxOHNJR2tnUFNCMGFHbHpMbDlpYVc1a2FXNW5jMXR1WFRzS0lDQWdJQ0FnSUNCcElDRTlQU0IyYjJsa0lEQWdKaVlnYVM1blpYUldZV3gxWlNobExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUhObGRGWmhiSFZsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFJvYVhNdVgySnBibVJwYm1kek93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FTQTlJSFJvYVhNdVgzUmhjbWRsZEVkeWIzVndMbTVEWVdOb1pXUlBZbXBsWTNSelh5d2djaUE5SUc0dWJHVnVaM1JvT3lCcElDRTlQU0J5T3lBcksya3BibHRwWFM1elpYUldZV3gxWlNobExDQjBLVHNLSUNBZ0lIMEtJQ0FnSUdKcGJtUW9LU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHVWdQU0IwYUdsekxsOWlhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0IwYUdsekxsOTBZWEpuWlhSSGNtOTFjQzV1UTJGamFHVmtUMkpxWldOMGMxOHNJRzRnUFNCbExteGxibWQwYURzZ2RDQWhQVDBnYmpzZ0t5dDBLV1ZiZEYwdVltbHVaQ2dwT3dvZ0lDQWdmUW9nSUNBZ2RXNWlhVzVrS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM003Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IwSUQwZ2RHaHBjeTVmZEdGeVoyVjBSM0p2ZFhBdWJrTmhZMmhsWkU5aWFtVmpkSE5mTENCdUlEMGdaUzVzWlc1bmRHZzdJSFFnSVQwOUlHNDdJQ3NyZENsbFczUmRMblZ1WW1sdVpDZ3BPd29nSUNBZ2ZRcDlMQ0JyWlNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhSb2FYTXVjR0YwYUNBOUlIUXNJSFJvYVhNdWNHRnljMlZrVUdGMGFDQTlJRzRnZkh3Z2EyVXVjR0Z5YzJWVWNtRmphMDVoYldVb2RDa3NJSFJvYVhNdWJtOWtaU0E5SUd0bExtWnBibVJPYjJSbEtHVXNJSFJvYVhNdWNHRnljMlZrVUdGMGFDNXViMlJsVG1GdFpTa2dmSHdnWlN3Z2RHaHBjeTV5YjI5MFRtOWtaU0E5SUdVc0lIUm9hWE11WjJWMFZtRnNkV1VnUFNCMGFHbHpMbDluWlhSV1lXeDFaVjkxYm1KdmRXNWtMQ0IwYUdsekxuTmxkRlpoYkhWbElEMGdkR2hwY3k1ZmMyVjBWbUZzZFdWZmRXNWliM1Z1WkRzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCamNtVmhkR1VvWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsSUNZbUlHVXVhWE5CYm1sdFlYUnBiMjVQWW1wbFkzUkhjbTkxY0NBL0lHNWxkeUJyWlM1RGIyMXdiM05wZEdVb1pTd2dkQ3dnYmlrZ09pQnVaWGNnYTJVb1pTd2dkQ3dnYmlrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0YwYVdNZ2MyRnVhWFJwZW1WT2IyUmxUbUZ0WlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVjbVZ3YkdGalpTZ3ZYSE12Wnl3Z0lsOGlLUzV5WlhCc1lXTmxLSGw1TENBaUlpazdDaUFnSUNCOUNpQWdJQ0J6ZEdGMGFXTWdjR0Z5YzJWVWNtRmphMDVoYldVb1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdVM2t1WlhobFl5aGxLVHNLSUNBZ0lDQWdJQ0JwWmlBb0lYUXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ2lVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQkRZVzV1YjNRZ2NHRnljMlVnZEhKaFkydE9ZVzFsT2lBaUlDc2daU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNXZaR1ZPWVcxbE9pQjBXekpkTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZZbXBsWTNST1lXMWxPaUIwV3pOZExBb2dJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUkpibVJsZURvZ2RGczBYU3dLSUNBZ0lDQWdJQ0FnSUNBZ2NISnZjR1Z5ZEhsT1lXMWxPaUIwV3pWZExBb2dJQ0FnSUNBZ0lDQWdJQ0J3Y205d1pYSjBlVWx1WkdWNE9pQjBXelpkQ2lBZ0lDQWdJQ0FnZlN3Z2FTQTlJRzR1Ym05a1pVNWhiV1VnSmlZZ2JpNXViMlJsVG1GdFpTNXNZWE4wU1c1a1pYaFBaaWdpTGlJcE93b2dJQ0FnSUNBZ0lHbG1JQ2hwSUNFOVBTQjJiMmxrSURBZ0ppWWdhU0FoUFQwZ0xURXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdUxtNXZaR1ZPWVcxbExuTjFZbk4wY21sdVp5aHBJQ3NnTVNrN0NpQWdJQ0FnSUNBZ0lDQWdJRlI1TG1sdVpHVjRUMllvY2lrZ0lUMDlJQzB4SUNZbUlDaHVMbTV2WkdWT1lXMWxJRDBnYmk1dWIyUmxUbUZ0WlM1emRXSnpkSEpwYm1jb01Dd2dhU2tzSUc0dWIySnFaV04wVG1GdFpTQTlJSElwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCcFppQW9iaTV3Y205d1pYSjBlVTVoYldVZ1BUMDlJRzUxYkd3Z2ZId2diaTV3Y205d1pYSjBlVTVoYldVdWJHVnVaM1JvSUQwOVBTQXdLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9JbEJ5YjNCbGNuUjVRbWx1WkdsdVp6b2dZMkZ1SUc1dmRDQndZWEp6WlNCd2NtOXdaWEowZVU1aGJXVWdabkp2YlNCMGNtRmphMDVoYldVNklDSWdLeUJsS1RzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYmpzS0lDQWdJSDBLSUNBZ0lITjBZWFJwWXlCbWFXNWtUbTlrWlNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRjBJSHg4SUhRZ1BUMDlJQ0lpSUh4OElIUWdQVDA5SUNJdUlpQjhmQ0IwSUQwOVBTQXRNU0I4ZkNCMElEMDlQU0JsTG01aGJXVWdmSHdnZENBOVBUMGdaUzUxZFdsa0tTQnlaWFIxY200Z1pUc0tJQ0FnSUNBZ0lDQnBaaUFvWlM1emEyVnNaWFJ2YmlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1YzJ0bGJHVjBiMjR1WjJWMFFtOXVaVUo1VG1GdFpTaDBLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzRnSVQwOUlIWnZhV1FnTUNrZ2NtVjBkWEp1SUc0N0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hsTG1Ob2FXeGtjbVZ1S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCdU1TQTlJR1oxYm1OMGFXOXVLSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnYnlBOUlEQTdJRzhnUENCeUxteGxibWQwYURzZ2J5c3JLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUhKYmIxMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHRXVibUZ0WlNBOVBUMGdkQ0I4ZkNCaExuVjFhV1FnUFQwOUlIUXBJSEpsZEhWeWJpQmhPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnYmpFb1lTNWphR2xzWkhKbGJpazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHd3BJSEpsZEhWeWJpQnNPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNJR2tnUFNCdU1TaGxMbU5vYVd4a2NtVnVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2twSUhKbGRIVnliaUJwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm5Wc2JEc0tJQ0FnSUgwS0lDQWdJRjluWlhSV1lXeDFaVjkxYm1GMllXbHNZV0pzWlNncElIdDlDaUFnSUNCZmMyVjBWbUZzZFdWZmRXNWhkbUZwYkdGaWJHVW9LU0I3ZlFvZ0lDQWdYMmRsZEZaaGJIVmxYMlJwY21WamRDaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ1pWdDBYU0E5SUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wVzNSb2FYTXVjSEp2Y0dWeWRIbE9ZVzFsWFRzS0lDQWdJSDBLSUNBZ0lGOW5aWFJXWVd4MVpWOWhjbkpoZVNobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCcElEMGdNQ3dnY2lBOUlHNHViR1Z1WjNSb095QnBJQ0U5UFNCeU95QXJLMmtwWlZ0MEt5dGRJRDBnYmx0cFhUc0tJQ0FnSUgwS0lDQWdJRjluWlhSV1lXeDFaVjloY25KaGVVVnNaVzFsYm5Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUdWYmRGMGdQU0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhsYmRHaHBjeTV3Y205d1pYSjBlVWx1WkdWNFhUc0tJQ0FnSUgwS0lDQWdJRjluWlhSV1lXeDFaVjkwYjBGeWNtRjVLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOXNkbVZrVUhKdmNHVnlkSGt1ZEc5QmNuSmhlU2hsTENCMEtUc0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjlrYVhKbFkzUW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11ZEdGeVoyVjBUMkpxWldOMFczUm9hWE11Y0hKdmNHVnlkSGxPWVcxbFhTQTlJR1ZiZEYwN0NpQWdJQ0I5Q2lBZ0lDQmZjMlYwVm1Gc2RXVmZaR2x5WldOMFgzTmxkRTVsWldSelZYQmtZWFJsS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkRnQwYUdsekxuQnliM0JsY25SNVRtRnRaVjBnUFNCbFczUmRMQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkQzV1WldWa2MxVndaR0YwWlNBOUlDRXdPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDJScGNtVmpkRjl6WlhSTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRGdDBhR2x6TG5CeWIzQmxjblI1VG1GdFpWMGdQU0JsVzNSZExDQjBhR2x6TG5SaGNtZGxkRTlpYW1WamRDNXRZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsSUQwZ0lUQTdDaUFnSUNCOUNpQWdJQ0JmYzJWMFZtRnNkV1ZmWVhKeVlYa29aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0J1TG14bGJtZDBhRHNnYVNBaFBUMGdjanNnS3l0cEtXNWJhVjBnUFNCbFczUXJLMTA3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZllYSnlZWGxmYzJWMFRtVmxaSE5WY0dSaGRHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0J1TG14bGJtZDBhRHNnYVNBaFBUMGdjanNnS3l0cEtXNWJhVjBnUFNCbFczUXJLMTA3Q2lBZ0lDQWdJQ0FnZEdocGN5NTBZWEpuWlhSUFltcGxZM1F1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5aGNuSmhlVjl6WlhSTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2tnUFNBd0xDQnlJRDBnYmk1c1pXNW5kR2c3SUdrZ0lUMDlJSEk3SUNzcmFTbHVXMmxkSUQwZ1pWdDBLeXRkT3dvZ0lDQWdJQ0FnSUhSb2FYTXVkR0Z5WjJWMFQySnFaV04wTG0xaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVVWc1pXMWxiblFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWNtVnpiMngyWldSUWNtOXdaWEowZVZ0MGFHbHpMbkJ5YjNCbGNuUjVTVzVrWlhoZElEMGdaVnQwWFRzS0lDQWdJSDBLSUNBZ0lGOXpaWFJXWVd4MVpWOWhjbkpoZVVWc1pXMWxiblJmYzJWMFRtVmxaSE5WY0dSaGRHVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11Y21WemIyeDJaV1JRY205d1pYSjBlVnQwYUdsekxuQnliM0JsY25SNVNXNWtaWGhkSUQwZ1pWdDBYU3dnZEdocGN5NTBZWEpuWlhSUFltcGxZM1F1Ym1WbFpITlZjR1JoZEdVZ1BTQWhNRHNLSUNBZ0lIMEtJQ0FnSUY5elpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUmZjMlYwVFdGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVXM1JvYVhNdWNISnZjR1Z5ZEhsSmJtUmxlRjBnUFNCbFczUmRMQ0IwYUdsekxuUmhjbWRsZEU5aWFtVmpkQzV0WVhSeWFYaFhiM0pzWkU1bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQjlDaUFnSUNCZmMyVjBWbUZzZFdWZlpuSnZiVUZ5Y21GNUtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5c2RtVmtVSEp2Y0dWeWRIa3Vabkp2YlVGeWNtRjVLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdYM05sZEZaaGJIVmxYMlp5YjIxQmNuSmhlVjl6WlhST1pXVmtjMVZ3WkdGMFpTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTV5WlhOdmJIWmxaRkJ5YjNCbGNuUjVMbVp5YjIxQmNuSmhlU2hsTENCMEtTd2dkR2hwY3k1MFlYSm5aWFJQWW1wbFkzUXVibVZsWkhOVmNHUmhkR1VnUFNBaE1Ec0tJQ0FnSUgwS0lDQWdJRjl6WlhSV1lXeDFaVjltY205dFFYSnlZWGxmYzJWMFRXRjBjbWw0VjI5eWJHUk9aV1ZrYzFWd1pHRjBaU2hsTENCMEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpYTnZiSFpsWkZCeWIzQmxjblI1TG1aeWIyMUJjbkpoZVNobExDQjBLU3dnZEdocGN5NTBZWEpuWlhSUFltcGxZM1F1YldGMGNtbDRWMjl5YkdST1pXVmtjMVZ3WkdGMFpTQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ1gyZGxkRlpoYkhWbFgzVnVZbTkxYm1Rb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhSb2FYTXVZbWx1WkNncExDQjBhR2x6TG1kbGRGWmhiSFZsS0dVc0lIUXBPd29nSUNBZ2ZRb2dJQ0FnWDNObGRGWmhiSFZsWDNWdVltOTFibVFvWlN3Z2RDa2dld29nSUNBZ0lDQWdJSFJvYVhNdVltbHVaQ2dwTENCMGFHbHpMbk5sZEZaaGJIVmxLR1VzSUhRcE93b2dJQ0FnZlFvZ0lDQWdZbWx1WkNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11Ym05a1pTd2dkQ0E5SUhSb2FYTXVjR0Z5YzJWa1VHRjBhQ3dnYmlBOUlIUXViMkpxWldOMFRtRnRaU3dnYVNBOUlIUXVjSEp2Y0dWeWRIbE9ZVzFsTENCeUlEMGdkQzV3Y205d1pYSjBlVWx1WkdWNE93b2dJQ0FnSUNBZ0lHbG1JQ2hsSUh4OElDaGxJRDBnYTJVdVptbHVaRTV2WkdVb2RHaHBjeTV5YjI5MFRtOWtaU3dnZEM1dWIyUmxUbUZ0WlNrZ2ZId2dkR2hwY3k1eWIyOTBUbTlrWlN3Z2RHaHBjeTV1YjJSbElEMGdaU2tzSUhSb2FYTXVaMlYwVm1Gc2RXVWdQU0IwYUdsekxsOW5aWFJXWVd4MVpWOTFibUYyWVdsc1lXSnNaU3dnZEdocGN5NXpaWFJXWVd4MVpTQTlJSFJvYVhNdVgzTmxkRlpoYkhWbFgzVnVZWFpoYVd4aFlteGxMQ0FoWlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUZSeWVXbHVaeUIwYnlCMWNHUmhkR1VnYm05a1pTQm1iM0lnZEhKaFkyczZJQ0lnS3lCMGFHbHpMbkJoZEdnZ0t5QWlJR0oxZENCcGRDQjNZWE51SjNRZ1ptOTFibVF1SWlrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdhV1lnS0c0cElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTWdQU0IwTG05aWFtVmpkRWx1WkdWNE93b2dJQ0FnSUNBZ0lDQWdJQ0J6ZDJsMFkyZ29iaWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqWVhObElDSnRZWFJsY21saGJITWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2haUzV0WVhSbGNtbGhiQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUVOaGJpQnViM1FnWW1sdVpDQjBieUJ0WVhSbGNtbGhiQ0JoY3lCdWIyUmxJR1J2WlhNZ2JtOTBJR2hoZG1VZ1lTQnRZWFJsY21saGJDNGlMQ0IwYUdsektUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXVXViV0YwWlhKcFlXd3ViV0YwWlhKcFlXeHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxCeWIzQmxjblI1UW1sdVpHbHVaem9nUTJGdUlHNXZkQ0JpYVc1a0lIUnZJRzFoZEdWeWFXRnNMbTFoZEdWeWFXRnNjeUJoY3lCdWIyUmxMbTFoZEdWeWFXRnNJR1J2WlhNZ2JtOTBJR2hoZG1VZ1lTQnRZWFJsY21saGJITWdZWEp5WVhrdUlpd2dkR2hwY3lrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaU0E5SUdVdWJXRjBaWEpwWVd3dWJXRjBaWEpwWVd4ek93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyRnpaU0FpWW05dVpYTWlPZ29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2haUzV6YTJWc1pYUnZiaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1UWNtOXdaWEowZVVKcGJtUnBibWM2SUVOaGJpQnViM1FnWW1sdVpDQjBieUJpYjI1bGN5QmhjeUJ1YjJSbElHUnZaWE1nYm05MElHaGhkbVVnWVNCemEyVnNaWFJ2Ymk0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxJRDBnWlM1emEyVnNaWFJ2Ymk1aWIyNWxjenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdnZ1BTQXdPeUJvSUR3Z1pTNXNaVzVuZEdnN0lHZ3JLeWxwWmlBb1pWdG9YUzV1WVcxbElEMDlQU0JqS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdNZ1BTQm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmljbVZoYXpzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtaV1poZFd4ME9nb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobFcyNWRJRDA5UFNCMmIybGtJREFwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVVISnZjR1Z5ZEhsQ2FXNWthVzVuT2lCRFlXNGdibTkwSUdKcGJtUWdkRzhnYjJKcVpXTjBUbUZ0WlNCdlppQnViMlJsSUhWdVpHVm1hVzVsWkM0aUxDQjBhR2x6S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxJRDBnWlZ0dVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWXlBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWlZ0alhTQTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVVSEp2Y0dWeWRIbENhVzVrYVc1bk9pQlVjbmxwYm1jZ2RHOGdZbWx1WkNCMGJ5QnZZbXBsWTNSSmJtUmxlQ0J2WmlCdlltcGxZM1JPWVcxbExDQmlkWFFnYVhNZ2RXNWtaV1pwYm1Wa0xpSXNJSFJvYVhNc0lHVXBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1VnUFNCbFcyTmRPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHeGxkQ0J2SUQwZ1pWdHBYVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QTlQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqTVNBOUlIUXVibTlrWlU1aGJXVTdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsQnliM0JsY25SNVFtbHVaR2x1WnpvZ1ZISjVhVzVuSUhSdklIVndaR0YwWlNCd2NtOXdaWEowZVNCbWIzSWdkSEpoWTJzNklDSWdLeUJqTVNBcklDSXVJaUFySUdrZ0t5QWlJR0oxZENCcGRDQjNZWE51SjNRZ1ptOTFibVF1SWl3Z1pTazdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxsWmxjbk5wYjI1cGJtY3VUbTl1WlRzS0lDQWdJQ0FnSUNCMGFHbHpMblJoY21kbGRFOWlhbVZqZENBOUlHVXNJR1V1Ym1WbFpITlZjR1JoZEdVZ0lUMDlJSFp2YVdRZ01DQS9JR0VnUFNCMGFHbHpMbFpsY25OcGIyNXBibWN1VG1WbFpITlZjR1JoZEdVZ09pQmxMbTFoZEhKcGVGZHZjbXhrVG1WbFpITlZjR1JoZEdVZ0lUMDlJSFp2YVdRZ01DQW1KaUFvWVNBOUlIUm9hWE11Vm1WeWMybHZibWx1Wnk1TllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxLVHNLSUNBZ0lDQWdJQ0JzWlhRZ2JDQTlJSFJvYVhNdVFtbHVaR2x1WjFSNWNHVXVSR2x5WldOME93b2dJQ0FnSUNBZ0lHbG1JQ2h5SUNFOVBTQjJiMmxrSURBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHa2dQVDA5SUNKdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXVXVaMlZ2YldWMGNua3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNVFjbTl3WlhKMGVVSnBibVJwYm1jNklFTmhiaUJ1YjNRZ1ltbHVaQ0IwYnlCdGIzSndhRlJoY21kbGRFbHVabXgxWlc1alpYTWdZbVZqWVhWelpTQnViMlJsSUdSdlpYTWdibTkwSUdoaGRtVWdZU0JuWlc5dFpYUnllUzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pTNW5aVzl0WlhSeWVTNXBjMEoxWm1abGNrZGxiMjFsZEhKNUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmxMbWRsYjIxbGRISjVMbTF2Y25Cb1FYUjBjbWxpZFhSbGN5a2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVRY205d1pYSjBlVUpwYm1ScGJtYzZJRU5oYmlCdWIzUWdZbWx1WkNCMGJ5QnRiM0p3YUZSaGNtZGxkRWx1Wm14MVpXNWpaWE1nWW1WallYVnpaU0J1YjJSbElHUnZaWE1nYm05MElHaGhkbVVnWVNCblpXOXRaWFJ5ZVM1dGIzSndhRUYwZEhKcFluVjBaWE11SWl3Z2RHaHBjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pTNXRiM0p3YUZSaGNtZGxkRVJwWTNScGIyNWhjbmxiY2wwZ0lUMDlJSFp2YVdRZ01DQW1KaUFvY2lBOUlHVXViVzl5Y0doVVlYSm5aWFJFYVdOMGFXOXVZWEo1VzNKZEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJEWVc0Z2JtOTBJR0pwYm1RZ2RHOGdiVzl5Y0doVVlYSm5aWFJKYm1ac2RXVnVZMlZ6SUc5dUlGUklVa1ZGTGtkbGIyMWxkSEo1TGlCVmMyVWdWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbmtnYVc1emRHVmhaQzRpTENCMGFHbHpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTQ3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnYkNBOUlIUm9hWE11UW1sdVpHbHVaMVI1Y0dVdVFYSnlZWGxGYkdWdFpXNTBMQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrZ1BTQnZMQ0IwYUdsekxuQnliM0JsY25SNVNXNWtaWGdnUFNCeU93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCdkxtWnliMjFCY25KaGVTQWhQVDBnZG05cFpDQXdJQ1ltSUc4dWRHOUJjbkpoZVNBaFBUMGdkbTlwWkNBd0lEOGdLR3dnUFNCMGFHbHpMa0pwYm1ScGJtZFVlWEJsTGtoaGMwWnliMjFVYjBGeWNtRjVMQ0IwYUdsekxuSmxjMjlzZG1Wa1VISnZjR1Z5ZEhrZ1BTQnZLU0E2SUVGeWNtRjVMbWx6UVhKeVlYa29ieWtnUHlBb2JDQTlJSFJvYVhNdVFtbHVaR2x1WjFSNWNHVXVSVzUwYVhKbFFYSnlZWGtzSUhSb2FYTXVjbVZ6YjJ4MlpXUlFjbTl3WlhKMGVTQTlJRzhwSURvZ2RHaHBjeTV3Y205d1pYSjBlVTVoYldVZ1BTQnBPd29nSUNBZ0lDQWdJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGtkbGRIUmxja0o1UW1sdVpHbHVaMVI1Y0dWYmJGMHNJSFJvYVhNdWMyVjBWbUZzZFdVZ1BTQjBhR2x6TGxObGRIUmxja0o1UW1sdVpHbHVaMVI1Y0dWQmJtUldaWEp6YVc5dWFXNW5XMnhkVzJGZE93b2dJQ0FnZlFvZ0lDQWdkVzVpYVc1a0tDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJtOWtaU0E5SUc1MWJHd3NJSFJvYVhNdVoyVjBWbUZzZFdVZ1BTQjBhR2x6TGw5blpYUldZV3gxWlY5MWJtSnZkVzVrTENCMGFHbHpMbk5sZEZaaGJIVmxJRDBnZEdocGN5NWZjMlYwVm1Gc2RXVmZkVzVpYjNWdVpEc0tJQ0FnSUgwS2ZUc0thMlV1UTI5dGNHOXphWFJsSUQwZ1NtZzdDbXRsTG5CeWIzUnZkSGx3WlM1Q2FXNWthVzVuVkhsd1pTQTlJSHNLSUNBZ0lFUnBjbVZqZERvZ01Dd0tJQ0FnSUVWdWRHbHlaVUZ5Y21GNU9pQXhMQW9nSUNBZ1FYSnlZWGxGYkdWdFpXNTBPaUF5TEFvZ0lDQWdTR0Z6Um5KdmJWUnZRWEp5WVhrNklETUtmVHNLYTJVdWNISnZkRzkwZVhCbExsWmxjbk5wYjI1cGJtY2dQU0I3Q2lBZ0lDQk9iMjVsT2lBd0xBb2dJQ0FnVG1WbFpITlZjR1JoZEdVNklERXNDaUFnSUNCTllYUnlhWGhYYjNKc1pFNWxaV1J6VlhCa1lYUmxPaUF5Q24wN0NtdGxMbkJ5YjNSdmRIbHdaUzVIWlhSMFpYSkNlVUpwYm1ScGJtZFVlWEJsSUQwZ1d3b2dJQ0FnYTJVdWNISnZkRzkwZVhCbExsOW5aWFJXWVd4MVpWOWthWEpsWTNRc0NpQWdJQ0JyWlM1d2NtOTBiM1I1Y0dVdVgyZGxkRlpoYkhWbFgyRnljbUY1TEFvZ0lDQWdhMlV1Y0hKdmRHOTBlWEJsTGw5blpYUldZV3gxWlY5aGNuSmhlVVZzWlcxbGJuUXNDaUFnSUNCclpTNXdjbTkwYjNSNWNHVXVYMmRsZEZaaGJIVmxYM1J2UVhKeVlYa0tYVHNLYTJVdWNISnZkRzkwZVhCbExsTmxkSFJsY2tKNVFtbHVaR2x1WjFSNWNHVkJibVJXWlhKemFXOXVhVzVuSUQwZ1d3b2dJQ0FnV3dvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZaR2x5WldOMExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWkdseVpXTjBYM05sZEU1bFpXUnpWWEJrWVhSbExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWkdseVpXTjBYM05sZEUxaGRISnBlRmR2Y214a1RtVmxaSE5WY0dSaGRHVUtJQ0FnSUYwc0NpQWdJQ0JiQ2lBZ0lDQWdJQ0FnYTJVdWNISnZkRzkwZVhCbExsOXpaWFJXWVd4MVpWOWhjbkpoZVN3S0lDQWdJQ0FnSUNCclpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVgzTmxkRTVsWldSelZYQmtZWFJsTEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZZWEp5WVhsZmMyVjBUV0YwY21sNFYyOXliR1JPWldWa2MxVndaR0YwWlFvZ0lDQWdYU3dLSUNBZ0lGc0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRDd0tJQ0FnSUNBZ0lDQnJaUzV3Y205MGIzUjVjR1V1WDNObGRGWmhiSFZsWDJGeWNtRjVSV3hsYldWdWRGOXpaWFJPWldWa2MxVndaR0YwWlN3S0lDQWdJQ0FnSUNCclpTNXdjbTkwYjNSNWNHVXVYM05sZEZaaGJIVmxYMkZ5Y21GNVJXeGxiV1Z1ZEY5elpYUk5ZWFJ5YVhoWGIzSnNaRTVsWldSelZYQmtZWFJsQ2lBZ0lDQmRMQW9nSUNBZ1d3b2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1TEFvZ0lDQWdJQ0FnSUd0bExuQnliM1J2ZEhsd1pTNWZjMlYwVm1Gc2RXVmZabkp2YlVGeWNtRjVYM05sZEU1bFpXUnpWWEJrWVhSbExBb2dJQ0FnSUNBZ0lHdGxMbkJ5YjNSdmRIbHdaUzVmYzJWMFZtRnNkV1ZmWm5KdmJVRnljbUY1WDNObGRFMWhkSEpwZUZkdmNteGtUbVZsWkhOVmNHUmhkR1VLSUNBZ0lGMEtYVHNLZG1GeUlGbG9JRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuVjFhV1FnUFNCRmRDZ3BMQ0IwYUdsekxsOXZZbXBsWTNSeklEMGdRWEp5WVhrdWNISnZkRzkwZVhCbExuTnNhV05sTG1OaGJHd29ZWEpuZFcxbGJuUnpLU3dnZEdocGN5NXVRMkZqYUdWa1QySnFaV04wYzE4Z1BTQXdPd29nSUNBZ0lDQWdJR3hsZENCbElEMGdlMzA3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZhVzVrYVdObGMwSjVWVlZKUkNBOUlHVTdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnVJRDBnTUN3Z2FTQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJRzRnSVQwOUlHazdJQ3NyYmlsbFcyRnlaM1Z0Wlc1MGMxdHVYUzUxZFdsa1hTQTlJRzQ3Q2lBZ0lDQWdJQ0FnZEdocGN5NWZjR0YwYUhNZ1BTQmJYU3dnZEdocGN5NWZjR0Z5YzJWa1VHRjBhSE1nUFNCYlhTd2dkR2hwY3k1ZlltbHVaR2x1WjNNZ1BTQmJYU3dnZEdocGN5NWZZbWx1WkdsdVozTkpibVJwWTJWelFubFFZWFJvSUQwZ2UzMDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6T3dvZ0lDQWdJQ0FnSUhSb2FYTXVjM1JoZEhNZ1BTQjdDaUFnSUNBZ0lDQWdJQ0FnSUc5aWFtVmpkSE02SUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQjBiM1JoYkNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFF1WDI5aWFtVmpkSE11YkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCcGJsVnpaU0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZEc5MFlXd2dMU0IwTG01RFlXTm9aV1JQWW1wbFkzUnpYenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWjJWMElHSnBibVJwYm1kelVHVnlUMkpxWldOMElDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBMbDlpYVc1a2FXNW5jeTVzWlc1bmRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOU93b2dJQ0FnZlFvZ0lDQWdZV1JrS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmYjJKcVpXTjBjeXdnZENBOUlIUm9hWE11WDJsdVpHbGpaWE5DZVZWVlNVUXNJRzRnUFNCMGFHbHpMbDl3WVhSb2N5d2dhU0E5SUhSb2FYTXVYM0JoY25ObFpGQmhkR2h6TENCeUlEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHOGdQU0J5TG14bGJtZDBhQ3dnWVN3Z2JDQTlJR1V1YkdWdVozUm9MQ0JqSUQwZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxODdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQm9JRDBnTUN3Z2RTQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJR2dnSVQwOUlIVTdJQ3NyYUNsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCa0lEMGdZWEpuZFcxbGJuUnpXMmhkTENCbUlEMGdaQzUxZFdsa0xDQnRJRDBnZEZ0bVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHMGdQVDA5SUhadmFXUWdNQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYlNBOUlHd3JLeXdnZEZ0bVhTQTlJRzBzSUdVdWNIVnphQ2hrS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZUNBOUlEQXNJSFlnUFNCdk95QjRJQ0U5UFNCMk95QXJLM2dwY2x0NFhTNXdkWE5vS0c1bGR5QnJaU2hrTENCdVczaGRMQ0JwVzNoZEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2JTQThJR01wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFZ1BTQmxXMjFkT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ3hJRDBnTFMxakxDQjJNU0E5SUdWYmVERmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkRnQyTVM1MWRXbGtYU0E5SUcwc0lHVmJiVjBnUFNCMk1Td2dkRnRtWFNBOUlIZ3hMQ0JsVzNneFhTQTlJR1E3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR2NnUFNBd0xDQndJRDBnYnpzZ1p5QWhQVDBnY0RzZ0t5dG5LWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdYeUE5SUhKYloxMHNJSGtnUFNCZlczZ3hYU3dnWWlBOUlGOWJiVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1gxdHRYU0E5SUhrc0lHSWdQVDA5SUhadmFXUWdNQ0FtSmlBb1lpQTlJRzVsZHlCclpTaGtMQ0J1VzJkZExDQnBXMmRkS1Nrc0lGOWJlREZkSUQwZ1lqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR1ZiYlYwZ0lUMDlJR0VnSmlZZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVRVzVwYldGMGFXOXVUMkpxWldOMFIzSnZkWEE2SUVScFptWmxjbVZ1ZENCdlltcGxZM1J6SUhkcGRHZ2dkR2hsSUhOaGJXVWdWVlZKUkNCa1pYUmxZM1JsWkM0Z1EyeGxZVzRnZEdobElHTmhZMmhsY3lCdmNpQnlaV055WldGMFpTQjViM1Z5SUdsdVpuSmhjM1J5ZFdOMGRYSmxJSGRvWlc0Z2NtVnNiMkZrYVc1bklITmpaVzVsY3k0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2hwY3k1dVEyRmphR1ZrVDJKcVpXTjBjMThnUFNCak93b2dJQ0FnZlFvZ0lDQWdjbVZ0YjNabEtDa2dld29nSUNBZ0lDQWdJR3hsZENCbElEMGdkR2hwY3k1ZmIySnFaV04wY3l3Z2RDQTlJSFJvYVhNdVgybHVaR2xqWlhOQ2VWVlZTVVFzSUc0Z1BTQjBhR2x6TGw5aWFXNWthVzVuY3l3Z2FTQTlJRzR1YkdWdVozUm9MQ0J5SUQwZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxODdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQnZJRDBnTUN3Z1lTQTlJR0Z5WjNWdFpXNTBjeTVzWlc1bmRHZzdJRzhnSVQwOUlHRTdJQ3NyYnlsN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCc0lEMGdZWEpuZFcxbGJuUnpXMjlkTENCaklEMGdiQzUxZFdsa0xDQm9JRDBnZEZ0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHZ2dJVDA5SUhadmFXUWdNQ0FtSmlCb0lENDlJSElwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnY2lzckxDQmtJRDBnWlZ0MVhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmJaQzUxZFdsa1hTQTlJR2dzSUdWYmFGMGdQU0JrTENCMFcyTmRJRDBnZFN3Z1pWdDFYU0E5SUd3N0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdZZ1BTQXdMQ0J0SUQwZ2FUc2daaUFoUFQwZ2JUc2dLeXRtS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlHNWJabDBzSUhZZ1BTQjRXM1ZkTENCbklEMGdlRnRvWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjRXMmhkSUQwZ2Rpd2dlRnQxWFNBOUlHYzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2RHaHBjeTV1UTJGamFHVmtUMkpxWldOMGMxOGdQU0J5T3dvZ0lDQWdmUW9nSUNBZ2RXNWpZV05vWlNncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDI5aWFtVmpkSE1zSUhRZ1BTQjBhR2x6TGw5cGJtUnBZMlZ6UW5sVlZVbEVMQ0J1SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUdrZ1BTQnVMbXhsYm1kMGFDd2djaUE5SUhSb2FYTXVia05oWTJobFpFOWlhbVZqZEhOZkxDQnZJRDBnWlM1c1pXNW5kR2c3Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JoSUQwZ01Dd2diQ0E5SUdGeVozVnRaVzUwY3k1c1pXNW5kR2c3SUdFZ0lUMDlJR3c3SUNzcllTbDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnWVhKbmRXMWxiblJ6VzJGZExDQm9JRDBnWXk1MWRXbGtMQ0IxSUQwZ2RGdG9YVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFVnSVQwOUlIWnZhV1FnTUNrZ2FXWWdLR1JsYkdWMFpTQjBXMmhkTENCMUlEd2djaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHUWdQU0F0TFhJc0lHWWdQU0JsVzJSZExDQnRJRDBnTFMxdkxDQjRJRDBnWlZ0dFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmJaaTUxZFdsa1hTQTlJSFVzSUdWYmRWMGdQU0JtTENCMFczZ3VkWFZwWkYwZ1BTQmtMQ0JsVzJSZElEMGdlQ3dnWlM1d2IzQW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdkaUE5SURBc0lHY2dQU0JwT3lCMklDRTlQU0JuT3lBckszWXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQndJRDBnYmx0MlhTd2dYeUE5SUhCYlpGMHNJSGtnUFNCd1cyMWRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhCYmRWMGdQU0JmTENCd1cyUmRJRDBnZVN3Z2NDNXdiM0FvS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrTVNBOUlDMHRieXdnWmpFZ1BTQmxXMlF4WFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdReElENGdNQ0FtSmlBb2RGdG1NUzUxZFdsa1hTQTlJSFVwTENCbFczVmRJRDBnWmpFc0lHVXVjRzl3S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUcweElEMGdNQ3dnZURFZ1BTQnBPeUJ0TVNBaFBUMGdlREU3SUNzcmJURXBld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQjJNU0E5SUc1YmJURmRPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhZeFczVmRJRDBnZGpGYlpERmRMQ0IyTVM1d2IzQW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQjBhR2x6TG01RFlXTm9aV1JQWW1wbFkzUnpYeUE5SUhJN0NpQWdJQ0I5Q2lBZ0lDQnpkV0p6WTNKcFltVmZLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQnNaWFFnYmlBOUlIUm9hWE11WDJKcGJtUnBibWR6U1c1a2FXTmxjMEo1VUdGMGFDd2dhU0E5SUc1YlpWMHNJSElnUFNCMGFHbHpMbDlpYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0JwWmlBb2FTQWhQVDBnZG05cFpDQXdLU0J5WlhSMWNtNGdjbHRwWFRzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVYM0JoZEdoekxDQmhJRDBnZEdocGN5NWZjR0Z5YzJWa1VHRjBhSE1zSUd3Z1BTQjBhR2x6TGw5dlltcGxZM1J6TENCaklEMGdiQzVzWlc1bmRHZ3NJR2dnUFNCMGFHbHpMbTVEWVdOb1pXUlBZbXBsWTNSelh5d2dkU0E5SUc1bGR5QkJjbkpoZVNoaktUc0tJQ0FnSUNBZ0lDQnBJRDBnY2k1c1pXNW5kR2dzSUc1YlpWMGdQU0JwTENCdkxuQjFjMmdvWlNrc0lHRXVjSFZ6YUNoMEtTd2djaTV3ZFhOb0tIVXBPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdaQ0E5SUdnc0lHWWdQU0JzTG14bGJtZDBhRHNnWkNBaFBUMGdaanNnS3l0a0tYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHMGdQU0JzVzJSZE93b2dJQ0FnSUNBZ0lDQWdJQ0IxVzJSZElEMGdibVYzSUd0bEtHMHNJR1VzSUhRcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnlaWFIxY200Z2RUc0tJQ0FnSUgwS0lDQWdJSFZ1YzNWaWMyTnlhV0psWHlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5aWFXNWthVzVuYzBsdVpHbGpaWE5DZVZCaGRHZ3NJRzRnUFNCMFcyVmRPd29nSUNBZ0lDQWdJR2xtSUNodUlDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMGFHbHpMbDl3WVhSb2N5d2djaUE5SUhSb2FYTXVYM0JoY25ObFpGQmhkR2h6TENCdklEMGdkR2hwY3k1ZlltbHVaR2x1WjNNc0lHRWdQU0J2TG14bGJtZDBhQ0F0SURFc0lHd2dQU0J2VzJGZExDQmpJRDBnWlZ0aFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnZEZ0alhTQTlJRzRzSUc5YmJsMGdQU0JzTENCdkxuQnZjQ2dwTENCeVcyNWRJRDBnY2x0aFhTd2djaTV3YjNBb0tTd2dhVnR1WFNBOUlHbGJZVjBzSUdrdWNHOXdLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5T3dwWmFDNXdjbTkwYjNSNWNHVXVhWE5CYm1sdFlYUnBiMjVQWW1wbFkzUkhjbTkxY0NBOUlDRXdPd3AyWVhJZ1dtZ2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUlEMGdiblZzYkN3Z2FTQTlJSFF1WW14bGJtUk5iMlJsS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbDl0YVhobGNpQTlJR1VzSUhSb2FYTXVYMk5zYVhBZ1BTQjBMQ0IwYUdsekxsOXNiMk5oYkZKdmIzUWdQU0J1TENCMGFHbHpMbUpzWlc1a1RXOWtaU0E5SUdrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCMExuUnlZV05yY3l3Z2J5QTlJSEl1YkdWdVozUm9MQ0JoSUQwZ2JtVjNJRUZ5Y21GNUtHOHBMQ0JzSUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JsYm1ScGJtZFRkR0Z5ZERvZ1RXa3NDaUFnSUNBZ0lDQWdJQ0FnSUdWdVpHbHVaMFZ1WkRvZ1RXa0tJQ0FnSUNBZ0lDQjlPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdZeUE5SURBN0lHTWdJVDA5SUc4N0lDc3JZeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2NsdGpYUzVqY21WaGRHVkpiblJsY25CdmJHRnVkQ2h1ZFd4c0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnWVZ0alhTQTlJR2dzSUdndWMyVjBkR2x1WjNNZ1BTQnNPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwYUdsekxsOXBiblJsY25CdmJHRnVkRk5sZEhScGJtZHpJRDBnYkN3Z2RHaHBjeTVmYVc1MFpYSndiMnhoYm5SeklEMGdZU3dnZEdocGN5NWZjSEp2Y0dWeWRIbENhVzVrYVc1bmN5QTlJRzVsZHlCQmNuSmhlU2h2S1N3Z2RHaHBjeTVmWTJGamFHVkpibVJsZUNBOUlHNTFiR3dzSUhSb2FYTXVYMko1UTJ4cGNFTmhZMmhsU1c1a1pYZ2dQU0J1ZFd4c0xDQjBhR2x6TGw5MGFXMWxVMk5oYkdWSmJuUmxjbkJ2YkdGdWRDQTlJRzUxYkd3c0lIUm9hWE11WDNkbGFXZG9kRWx1ZEdWeWNHOXNZVzUwSUQwZ2JuVnNiQ3dnZEdocGN5NXNiMjl3SUQwZ1NXUXNJSFJvYVhNdVgyeHZiM0JEYjNWdWRDQTlJQzB4TENCMGFHbHpMbDl6ZEdGeWRGUnBiV1VnUFNCdWRXeHNMQ0IwYUdsekxuUnBiV1VnUFNBd0xDQjBhR2x6TG5ScGJXVlRZMkZzWlNBOUlERXNJSFJvYVhNdVgyVm1abVZqZEdsMlpWUnBiV1ZUWTJGc1pTQTlJREVzSUhSb2FYTXVkMlZwWjJoMElEMGdNU3dnZEdocGN5NWZaV1ptWldOMGFYWmxWMlZwWjJoMElEMGdNU3dnZEdocGN5NXlaWEJsZEdsMGFXOXVjeUE5SURFZ0x5QXdMQ0IwYUdsekxuQmhkWE5sWkNBOUlDRXhMQ0IwYUdsekxtVnVZV0pzWldRZ1BTQWhNQ3dnZEdocGN5NWpiR0Z0Y0Zkb1pXNUdhVzVwYzJobFpDQTlJQ0V4TENCMGFHbHpMbnBsY205VGJHOXdaVUYwVTNSaGNuUWdQU0FoTUN3Z2RHaHBjeTU2WlhKdlUyeHZjR1ZCZEVWdVpDQTlJQ0V3T3dvZ0lDQWdmUW9nSUNBZ2NHeGhlU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWZiV2w0WlhJdVgyRmpkR2wyWVhSbFFXTjBhVzl1S0hSb2FYTXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjM1J2Y0NncElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVmYldsNFpYSXVYMlJsWVdOMGFYWmhkR1ZCWTNScGIyNG9kR2hwY3lrc0lIUm9hWE11Y21WelpYUW9LVHNLSUNBZ0lIMEtJQ0FnSUhKbGMyVjBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQmhkWE5sWkNBOUlDRXhMQ0IwYUdsekxtVnVZV0pzWldRZ1BTQWhNQ3dnZEdocGN5NTBhVzFsSUQwZ01Dd2dkR2hwY3k1ZmJHOXZjRU52ZFc1MElEMGdMVEVzSUhSb2FYTXVYM04wWVhKMFZHbHRaU0E5SUc1MWJHd3NJSFJvYVhNdWMzUnZjRVpoWkdsdVp5Z3BMbk4wYjNCWFlYSndhVzVuS0NrN0NpQWdJQ0I5Q2lBZ0lDQnBjMUoxYm01cGJtY29LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpXNWhZbXhsWkNBbUppQWhkR2hwY3k1d1lYVnpaV1FnSmlZZ2RHaHBjeTUwYVcxbFUyTmhiR1VnSVQwOUlEQWdKaVlnZEdocGN5NWZjM1JoY25SVWFXMWxJRDA5UFNCdWRXeHNJQ1ltSUhSb2FYTXVYMjFwZUdWeUxsOXBjMEZqZEdsMlpVRmpkR2x2YmloMGFHbHpLVHNLSUNBZ0lIMEtJQ0FnSUdselUyTm9aV1IxYkdWa0tDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5dGFYaGxjaTVmYVhOQlkzUnBkbVZCWTNScGIyNG9kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQnpkR0Z5ZEVGMEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmMzUmhjblJVYVcxbElEMGdaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZEV4dmIzQW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbXh2YjNBZ1BTQmxMQ0IwYUdsekxuSmxjR1YwYVhScGIyNXpJRDBnZEN3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhObGRFVm1abVZqZEdsMlpWZGxhV2RvZENobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11ZDJWcFoyaDBJRDBnWlN3Z2RHaHBjeTVmWldabVpXTjBhWFpsVjJWcFoyaDBJRDBnZEdocGN5NWxibUZpYkdWa0lEOGdaU0E2SURBc0lIUm9hWE11YzNSdmNFWmhaR2x1WnlncE93b2dJQ0FnZlFvZ0lDQWdaMlYwUldabVpXTjBhWFpsVjJWcFoyaDBLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWxabVpsWTNScGRtVlhaV2xuYUhRN0NpQWdJQ0I5Q2lBZ0lDQm1ZV1JsU1c0b1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5elkyaGxaSFZzWlVaaFpHbHVaeWhsTENBd0xDQXhLVHNLSUNBZ0lIMEtJQ0FnSUdaaFpHVlBkWFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbDl6WTJobFpIVnNaVVpoWkdsdVp5aGxMQ0F4TENBd0tUc0tJQ0FnSUgwS0lDQWdJR055YjNOelJtRmtaVVp5YjIwb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2hsTG1aaFpHVlBkWFFvZENrc0lIUm9hWE11Wm1Ga1pVbHVLSFFwTENCdUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWZZMnhwY0M1a2RYSmhkR2x2Yml3Z2NpQTlJR1V1WDJOc2FYQXVaSFZ5WVhScGIyNHNJRzhnUFNCeUlDOGdhU3dnWVNBOUlHa2dMeUJ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQmxMbmRoY25Bb01Td2dieXdnZENrc0lIUm9hWE11ZDJGeWNDaGhMQ0F4TENCMEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamNtOXpjMFpoWkdWVWJ5aGxMQ0IwTENCdUtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHVXVZM0p2YzNOR1lXUmxSbkp2YlNoMGFHbHpMQ0IwTENCdUtUc0tJQ0FnSUgwS0lDQWdJSE4wYjNCR1lXUnBibWNvS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbDkzWldsbmFIUkpiblJsY25CdmJHRnVkRHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdaU0FoUFQwZ2JuVnNiQ0FtSmlBb2RHaHBjeTVmZDJWcFoyaDBTVzUwWlhKd2IyeGhiblFnUFNCdWRXeHNMQ0IwYUdsekxsOXRhWGhsY2k1ZmRHRnJaVUpoWTJ0RGIyNTBjbTlzU1c1MFpYSndiMnhoYm5Rb1pTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUldabVpXTjBhWFpsVkdsdFpWTmpZV3hsS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYVcxbFUyTmhiR1VnUFNCbExDQjBhR2x6TGw5bFptWmxZM1JwZG1WVWFXMWxVMk5oYkdVZ1BTQjBhR2x6TG5CaGRYTmxaQ0EvSURBZ09pQmxMQ0IwYUdsekxuTjBiM0JYWVhKd2FXNW5LQ2s3Q2lBZ0lDQjlDaUFnSUNCblpYUkZabVpsWTNScGRtVlVhVzFsVTJOaGJHVW9LU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyVm1abVZqZEdsMlpWUnBiV1ZUWTJGc1pUc0tJQ0FnSUgwS0lDQWdJSE5sZEVSMWNtRjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTUwYVcxbFUyTmhiR1VnUFNCMGFHbHpMbDlqYkdsd0xtUjFjbUYwYVc5dUlDOGdaU3dnZEdocGN5NXpkRzl3VjJGeWNHbHVaeWdwT3dvZ0lDQWdmUW9nSUNBZ2MzbHVZMWRwZEdnb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ScGJXVWdQU0JsTG5ScGJXVXNJSFJvYVhNdWRHbHRaVk5qWVd4bElEMGdaUzUwYVcxbFUyTmhiR1VzSUhSb2FYTXVjM1J2Y0ZkaGNuQnBibWNvS1RzS0lDQWdJSDBLSUNBZ0lHaGhiSFFvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbmRoY25Bb2RHaHBjeTVmWldabVpXTjBhWFpsVkdsdFpWTmpZV3hsTENBd0xDQmxLVHNLSUNBZ0lIMEtJQ0FnSUhkaGNuQW9aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZmJXbDRaWElzSUhJZ1BTQnBMblJwYldVc0lHOGdQU0IwYUdsekxuUnBiV1ZUWTJGc1pTd2dZU0E5SUhSb2FYTXVYM1JwYldWVFkyRnNaVWx1ZEdWeWNHOXNZVzUwT3dvZ0lDQWdJQ0FnSUdFZ1BUMDlJRzUxYkd3Z0ppWWdLR0VnUFNCcExsOXNaVzVrUTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwS0Nrc0lIUm9hWE11WDNScGJXVlRZMkZzWlVsdWRHVnljRzlzWVc1MElEMGdZU2s3Q2lBZ0lDQWdJQ0FnYkdWMElHd2dQU0JoTG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1Y3l3Z1l5QTlJR0V1YzJGdGNHeGxWbUZzZFdWek93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCc1d6QmRJRDBnY2l3Z2JGc3hYU0E5SUhJZ0t5QnVMQ0JqV3pCZElEMGdaU0F2SUc4c0lHTmJNVjBnUFNCMElDOGdieXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE4wYjNCWFlYSndhVzVuS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVmZEdsdFpWTmpZV3hsU1c1MFpYSndiMnhoYm5RN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVZ0lUMDlJRzUxYkd3Z0ppWWdLSFJvYVhNdVgzUnBiV1ZUWTJGc1pVbHVkR1Z5Y0c5c1lXNTBJRDBnYm5Wc2JDd2dkR2hwY3k1ZmJXbDRaWEl1WDNSaGEyVkNZV05yUTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwS0dVcEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHZGxkRTFwZUdWeUtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5dGFYaGxjanNLSUNBZ0lIMEtJQ0FnSUdkbGRFTnNhWEFvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMk5zYVhBN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJTYjI5MEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5c2IyTmhiRkp2YjNRZ2ZId2dkR2hwY3k1ZmJXbDRaWEl1WDNKdmIzUTdDaUFnSUNCOUNpQWdJQ0JmZFhCa1lYUmxLR1VzSUhRc0lHNHNJR2twSUhzS0lDQWdJQ0FnSUNCcFppQW9JWFJvYVhNdVpXNWhZbXhsWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOTFjR1JoZEdWWFpXbG5hSFFvWlNrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUhJZ1BTQjBhR2x6TGw5emRHRnlkRlJwYldVN0NpQWdJQ0FnSUNBZ2FXWWdLSElnSVQwOUlHNTFiR3dwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUd3Z1BTQW9aU0F0SUhJcElDb2dianNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3dnUENBd0lIeDhJRzRnUFQwOUlEQXBJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWZjM1JoY25SVWFXMWxJRDBnYm5Wc2JDd2dkQ0E5SUc0Z0tpQnNPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IwSUNvOUlIUm9hWE11WDNWd1pHRjBaVlJwYldWVFkyRnNaU2hsS1RzS0lDQWdJQ0FnSUNCc1pYUWdieUE5SUhSb2FYTXVYM1Z3WkdGMFpWUnBiV1VvZENrc0lHRWdQU0IwYUdsekxsOTFjR1JoZEdWWFpXbG5hSFFvWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLR0VnUGlBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNNU0E5SUhSb2FYTXVYMmx1ZEdWeWNHOXNZVzUwY3l3Z1l5QTlJSFJvYVhNdVgzQnliM0JsY25SNVFtbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ0lDQWdJSE4zYVhSamFDaDBhR2x6TG1Kc1pXNWtUVzlrWlNsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSEZqT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FDQTlJREFzSUhVZ1BTQnNNUzVzWlc1bmRHZzdJR2dnSVQwOUlIVTdJQ3NyYUNsc01WdG9YUzVsZG1Gc2RXRjBaU2h2S1N3Z1kxdG9YUzVoWTJOMWJYVnNZWFJsUVdSa2FYUnBkbVVvWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCallYTmxJSFZoT2dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWkdWbVlYVnNkRG9LSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdneElEMGdNQ3dnZFRFZ1BTQnNNUzVzWlc1bmRHZzdJR2d4SUNFOVBTQjFNVHNnS3l0b01TbHNNVnRvTVYwdVpYWmhiSFZoZEdVb2J5a3NJR05iYURGZExtRmpZM1Z0ZFd4aGRHVW9hU3dnWVNrN0NpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCZmRYQmtZWFJsVjJWcFoyaDBLR1VwSUhzS0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SURBN0NpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdVpXNWhZbXhsWkNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IwSUQwZ2RHaHBjeTUzWldsbmFIUTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWZkMlZwWjJoMFNXNTBaWEp3YjJ4aGJuUTdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHVJQ0U5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJRzR1WlhaaGJIVmhkR1VvWlNsYk1GMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBJQ285SUdrc0lHVWdQaUJ1TG5CaGNtRnRaWFJsY2xCdmMybDBhVzl1YzFzeFhTQW1KaUFvZEdocGN5NXpkRzl3Um1Ga2FXNW5LQ2tzSUdrZ1BUMDlJREFnSmlZZ0tIUm9hWE11Wlc1aFlteGxaQ0E5SUNFeEtTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVYMlZtWm1WamRHbDJaVmRsYVdkb2RDQTlJSFFzSUhRN0NpQWdJQ0I5Q2lBZ0lDQmZkWEJrWVhSbFZHbHRaVk5qWVd4bEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJREE3Q2lBZ0lDQWdJQ0FnYVdZZ0tDRjBhR2x6TG5CaGRYTmxaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQjBJRDBnZEdocGN5NTBhVzFsVTJOaGJHVTdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnVJRDBnZEdocGN5NWZkR2x0WlZOallXeGxTVzUwWlhKd2IyeGhiblE3Q2lBZ0lDQWdJQ0FnSUNBZ0lHNGdJVDA5SUc1MWJHd2dKaVlnS0hRZ0tqMGdiaTVsZG1Gc2RXRjBaU2hsS1Zzd1hTd2daU0ErSUc0dWNHRnlZVzFsZEdWeVVHOXphWFJwYjI1eld6RmRJQ1ltSUNoMGFHbHpMbk4wYjNCWFlYSndhVzVuS0Nrc0lIUWdQVDA5SURBZ1B5QjBhR2x6TG5CaGRYTmxaQ0E5SUNFd0lEb2dkR2hwY3k1MGFXMWxVMk5oYkdVZ1BTQjBLU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxsOWxabVpsWTNScGRtVlVhVzFsVTJOaGJHVWdQU0IwTENCME93b2dJQ0FnZlFvZ0lDQWdYM1Z3WkdGMFpWUnBiV1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWTJ4cGNDNWtkWEpoZEdsdmJpd2diaUE5SUhSb2FYTXViRzl2Y0N3Z2FTQTlJSFJvYVhNdWRHbHRaU0FySUdVc0lISWdQU0IwYUdsekxsOXNiMjl3UTI5MWJuUXNJRzhnUFNCdUlEMDlQU0JFWkRzS0lDQWdJQ0FnSUNCcFppQW9aU0E5UFQwZ01Da2djbVYwZFhKdUlISWdQVDA5SUMweElEOGdhU0E2SUc4Z0ppWWdLSElnSmlBeEtTQTlQVDBnTVNBL0lIUWdMU0JwSURvZ2FUc0tJQ0FnSUNBZ0lDQnBaaUFvYmlBOVBUMGdVR1FwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjaUE5UFQwZ0xURWdKaVlnS0hSb2FYTXVYMnh2YjNCRGIzVnVkQ0E5SURBc0lIUm9hWE11WDNObGRFVnVaR2x1WjNNb0lUQXNJQ0V3TENBaE1Ta3BPd29nSUNBZ0lDQWdJQ0FnSUNCbE9pQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVNBK1BTQjBLU0JwSUQwZ2REc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlVnYVdZZ0tHa2dQQ0F3S1NCcElEMGdNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWRHbHRaU0E5SUdrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzZ1pUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WTJ4aGJYQlhhR1Z1Um1sdWFYTm9aV1FnUHlCMGFHbHpMbkJoZFhObFpDQTlJQ0V3SURvZ2RHaHBjeTVsYm1GaWJHVmtJRDBnSVRFc0lIUm9hWE11ZEdsdFpTQTlJR2tzSUhSb2FYTXVYMjFwZUdWeUxtUnBjM0JoZEdOb1JYWmxiblFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUjVjR1U2SUNKbWFXNXBjMmhsWkNJc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZV04wYVc5dU9pQjBhR2x6TEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUnBjbVZqZEdsdmJqb2daU0E4SURBZ1B5QXRNU0E2SURFS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSElnUFQwOUlDMHhJQ1ltSUNobElENDlJREFnUHlBb2NpQTlJREFzSUhSb2FYTXVYM05sZEVWdVpHbHVaM01vSVRBc0lIUm9hWE11Y21Wd1pYUnBkR2x2Ym5NZ1BUMDlJREFzSUc4cEtTQTZJSFJvYVhNdVgzTmxkRVZ1WkdsdVozTW9kR2hwY3k1eVpYQmxkR2wwYVc5dWN5QTlQVDBnTUN3Z0lUQXNJRzhwS1N3Z2FTQStQU0IwSUh4OElHa2dQQ0F3S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUUxaGRHZ3VabXh2YjNJb2FTQXZJSFFwT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVNBdFBTQjBJQ29nWVN3Z2NpQXJQU0JOWVhSb0xtRmljeWhoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQnNJRDBnZEdocGN5NXlaWEJsZEdsMGFXOXVjeUF0SUhJN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iQ0E4UFNBd0tTQjBhR2x6TG1Oc1lXMXdWMmhsYmtacGJtbHphR1ZrSUQ4Z2RHaHBjeTV3WVhWelpXUWdQU0FoTUNBNklIUm9hWE11Wlc1aFlteGxaQ0E5SUNFeExDQnBJRDBnWlNBK0lEQWdQeUIwSURvZ01Dd2dkR2hwY3k1MGFXMWxJRDBnYVN3Z2RHaHBjeTVmYldsNFpYSXVaR2x6Y0dGMFkyaEZkbVZ1ZENoN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ltWnBibWx6YUdWa0lpd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWTNScGIyNDZJSFJvYVhNc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x5WldOMGFXOXVPaUJsSUQ0Z01DQS9JREVnT2lBdE1Rb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkNBOVBUMGdNU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1l5QTlJR1VnUENBd093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDl6WlhSRmJtUnBibWR6S0dNc0lDRmpMQ0J2S1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2RHaHBjeTVmYzJWMFJXNWthVzVuY3lnaE1Td2dJVEVzSUc4cE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVgyeHZiM0JEYjNWdWRDQTlJSElzSUhSb2FYTXVkR2x0WlNBOUlHa3NJSFJvYVhNdVgyMXBlR1Z5TG1ScGMzQmhkR05vUlhabGJuUW9ld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lBaWJHOXZjQ0lzQ2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZqZEdsdmJqb2dkR2hwY3l3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkc5dmNFUmxiSFJoT2lCaENpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCMGFHbHpMblJwYldVZ1BTQnBPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9ieUFtSmlBb2NpQW1JREVwSUQwOVBTQXhLU0J5WlhSMWNtNGdkQ0F0SUdrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lISmxkSFZ5YmlCcE93b2dJQ0FnZlFvZ0lDQWdYM05sZEVWdVpHbHVaM01vWlN3Z2RDd2diaWtnZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnZEdocGN5NWZhVzUwWlhKd2IyeGhiblJUWlhSMGFXNW5jenNLSUNBZ0lDQWdJQ0J1SUQ4Z0tHa3VaVzVrYVc1blUzUmhjblFnUFNCaWFTd2dhUzVsYm1ScGJtZEZibVFnUFNCaWFTa2dPaUFvWlNBL0lHa3VaVzVrYVc1blUzUmhjblFnUFNCMGFHbHpMbnBsY205VGJHOXdaVUYwVTNSaGNuUWdQeUJpYVNBNklFMXBJRG9nYVM1bGJtUnBibWRUZEdGeWRDQTlJRTl6TENCMElEOGdhUzVsYm1ScGJtZEZibVFnUFNCMGFHbHpMbnBsY205VGJHOXdaVUYwUlc1a0lEOGdZbWtnT2lCTmFTQTZJR2t1Wlc1a2FXNW5SVzVrSUQwZ1QzTXBPd29nSUNBZ2ZRb2dJQ0FnWDNOamFHVmtkV3hsUm1Ga2FXNW5LR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVgyMXBlR1Z5TENCeUlEMGdhUzUwYVcxbExDQnZJRDBnZEdocGN5NWZkMlZwWjJoMFNXNTBaWEp3YjJ4aGJuUTdDaUFnSUNBZ0lDQWdieUE5UFQwZ2JuVnNiQ0FtSmlBb2J5QTlJR2t1WDJ4bGJtUkRiMjUwY205c1NXNTBaWEp3YjJ4aGJuUW9LU3dnZEdocGN5NWZkMlZwWjJoMFNXNTBaWEp3YjJ4aGJuUWdQU0J2S1RzS0lDQWdJQ0FnSUNCc1pYUWdZU0E5SUc4dWNHRnlZVzFsZEdWeVVHOXphWFJwYjI1ekxDQnNJRDBnYnk1ellXMXdiR1ZXWVd4MVpYTTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHRmJNRjBnUFNCeUxDQnNXekJkSUQwZ2RDd2dZVnN4WFNBOUlISWdLeUJsTENCc1d6RmRJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtmU3dnSkdnZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUVWdUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXBld29nSUNBZ0lDQWdJSE4xY0dWeUtDazdDaUFnSUNBZ0lDQWdkR2hwY3k1ZmNtOXZkQ0E5SUdVc0lIUm9hWE11WDJsdWFYUk5aVzF2Y25sTllXNWhaMlZ5S0Nrc0lIUm9hWE11WDJGalkzVkpibVJsZUNBOUlEQXNJSFJvYVhNdWRHbHRaU0E5SURBc0lIUm9hWE11ZEdsdFpWTmpZV3hsSUQwZ01Uc0tJQ0FnSUgwS0lDQWdJRjlpYVc1a1FXTjBhVzl1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJR1V1WDJ4dlkyRnNVbTl2ZENCOGZDQjBhR2x6TGw5eWIyOTBMQ0JwSUQwZ1pTNWZZMnhwY0M1MGNtRmphM01zSUhJZ1BTQnBMbXhsYm1kMGFDd2dieUE5SUdVdVgzQnliM0JsY25SNVFtbHVaR2x1WjNNc0lHRWdQU0JsTGw5cGJuUmxjbkJ2YkdGdWRITXNJR3dnUFNCdUxuVjFhV1FzSUdNZ1BTQjBhR2x6TGw5aWFXNWthVzVuYzBKNVVtOXZkRUZ1WkU1aGJXVXNJR2dnUFNCalcyeGRPd29nSUNBZ0lDQWdJR2dnUFQwOUlIWnZhV1FnTUNBbUppQW9hQ0E5SUh0OUxDQmpXMnhkSUQwZ2FDazdDaUFnSUNBZ0lDQWdabTl5S0d4bGRDQjFJRDBnTURzZ2RTQWhQVDBnY2pzZ0t5dDFLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR1FnUFNCcFczVmRMQ0JtSUQwZ1pDNXVZVzFsTENCdElEMGdhRnRtWFRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cwZ0lUMDlJSFp2YVdRZ01Da2diMXQxWFNBOUlHMDdDaUFnSUNBZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0cwZ1BTQnZXM1ZkTENCdElDRTlQU0IyYjJsa0lEQXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdExsOWpZV05vWlVsdVpHVjRJRDA5UFNCdWRXeHNJQ1ltSUNncksyMHVjbVZtWlhKbGJtTmxRMjkxYm5Rc0lIUm9hWE11WDJGa1pFbHVZV04wYVhabFFtbHVaR2x1WnlodExDQnNMQ0JtS1NrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlIUWdKaVlnZEM1ZmNISnZjR1Z5ZEhsQ2FXNWthVzVuYzF0MVhTNWlhVzVrYVc1bkxuQmhjbk5sWkZCaGRHZzdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRJRDBnYm1WM0lGaG9LR3RsTG1OeVpXRjBaU2h1TENCbUxDQjRLU3dnWkM1V1lXeDFaVlI1Y0dWT1lXMWxMQ0JrTG1kbGRGWmhiSFZsVTJsNlpTZ3BLU3dnS3l0dExuSmxabVZ5Wlc1alpVTnZkVzUwTENCMGFHbHpMbDloWkdSSmJtRmpkR2wyWlVKcGJtUnBibWNvYlN3Z2JDd2daaWtzSUc5YmRWMGdQU0J0T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUdGYmRWMHVjbVZ6ZFd4MFFuVm1abVZ5SUQwZ2JTNWlkV1ptWlhJN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdYMkZqZEdsMllYUmxRV04wYVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11WDJselFXTjBhWFpsUVdOMGFXOXVLR1VwS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNobExsOWpZV05vWlVsdVpHVjRJRDA5UFNCdWRXeHNLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJQ2hsTGw5c2IyTmhiRkp2YjNRZ2ZId2dkR2hwY3k1ZmNtOXZkQ2t1ZFhWcFpDd2dhU0E5SUdVdVgyTnNhWEF1ZFhWcFpDd2djaUE5SUhSb2FYTXVYMkZqZEdsdmJuTkNlVU5zYVhCYmFWMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5aWFXNWtRV04wYVc5dUtHVXNJSElnSmlZZ2NpNXJibTkzYmtGamRHbHZibk5iTUYwcExDQjBhR2x6TGw5aFpHUkpibUZqZEdsMlpVRmpkR2x2YmlobExDQnBMQ0J1S1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVgzQnliM0JsY25SNVFtbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiakVnUFNBd0xDQnBNU0E5SUhRdWJHVnVaM1JvT3lCdU1TQWhQVDBnYVRFN0lDc3JiakVwZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISXhJRDBnZEZ0dU1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlNUzUxYzJWRGIzVnVkQ3NySUQwOVBTQXdJQ1ltSUNoMGFHbHpMbDlzWlc1a1FtbHVaR2x1WnloeU1Ta3NJSEl4TG5OaGRtVlBjbWxuYVc1aGJGTjBZWFJsS0NrcE93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11WDJ4bGJtUkJZM1JwYjI0b1pTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnWDJSbFlXTjBhWFpoZEdWQlkzUnBiMjRvWlNrZ2V3b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxsOXBjMEZqZEdsMlpVRmpkR2x2YmlobEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCc1pYUWdkQ0E5SUdVdVgzQnliM0JsY25SNVFtbHVaR2x1WjNNN0NpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2RGdHVYVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB0Y2k1MWMyVkRiM1Z1ZENBOVBUMGdNQ0FtSmlBb2NpNXlaWE4wYjNKbFQzSnBaMmx1WVd4VGRHRjBaU2dwTENCMGFHbHpMbDkwWVd0bFFtRmphMEpwYm1ScGJtY29jaWtwT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYM1JoYTJWQ1lXTnJRV04wYVc5dUtHVXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUY5cGJtbDBUV1Z0YjNKNVRXRnVZV2RsY2lncElIc0tJQ0FnSUNBZ0lDQjBhR2x6TGw5aFkzUnBiMjV6SUQwZ1cxMHNJSFJvYVhNdVgyNUJZM1JwZG1WQlkzUnBiMjV6SUQwZ01Dd2dkR2hwY3k1ZllXTjBhVzl1YzBKNVEyeHBjQ0E5SUh0OUxDQjBhR2x6TGw5aWFXNWthVzVuY3lBOUlGdGRMQ0IwYUdsekxsOXVRV04wYVhabFFtbHVaR2x1WjNNZ1BTQXdMQ0IwYUdsekxsOWlhVzVrYVc1bmMwSjVVbTl2ZEVGdVpFNWhiV1VnUFNCN2ZTd2dkR2hwY3k1ZlkyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5QTlJRnRkTENCMGFHbHpMbDl1UVdOMGFYWmxRMjl1ZEhKdmJFbHVkR1Z5Y0c5c1lXNTBjeUE5SURBN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpPd29nSUNBZ0lDQWdJSFJvYVhNdWMzUmhkSE1nUFNCN0NpQWdJQ0FnSUNBZ0lDQWdJR0ZqZEdsdmJuTTZJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2RsZENCMGIzUmhiQ0FvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHVXVYMkZqZEdsdmJuTXViR1Z1WjNSb093b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZGxkQ0JwYmxWelpTQW9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdVdVgyNUJZM1JwZG1WQlkzUnBiMjV6T3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJQ0FnSUNCaWFXNWthVzVuY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJSFJ2ZEdGc0lDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZlltbHVaR2x1WjNNdWJHVnVaM1JvT3dvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdkbGRDQnBibFZ6WlNBb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1V1WDI1QlkzUnBkbVZDYVc1a2FXNW5jenNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRISnZiRWx1ZEdWeWNHOXNZVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJSFJ2ZEdGc0lDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZlkyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5NXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyVjBJR2x1VlhObElDZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1ZmJrRmpkR2wyWlVOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ1gybHpRV04wYVhabFFXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVYMk5oWTJobFNXNWtaWGc3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSVQwOUlHNTFiR3dnSmlZZ2RDQThJSFJvYVhNdVgyNUJZM1JwZG1WQlkzUnBiMjV6T3dvZ0lDQWdmUW9nSUNBZ1gyRmtaRWx1WVdOMGFYWmxRV04wYVc5dUtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnNaWFFnYVNBOUlIUm9hWE11WDJGamRHbHZibk1zSUhJZ1BTQjBhR2x6TGw5aFkzUnBiMjV6UW5sRGJHbHdMQ0J2SUQwZ2NsdDBYVHNLSUNBZ0lDQWdJQ0JwWmlBb2J5QTlQVDBnZG05cFpDQXdLU0J2SUQwZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyYm05M2JrRmpkR2x2Ym5NNklGc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVUtJQ0FnSUNBZ0lDQWdJQ0FnWFN3S0lDQWdJQ0FnSUNBZ0lDQWdZV04wYVc5dVFubFNiMjkwT2lCN2ZRb2dJQ0FnSUNBZ0lIMHNJR1V1WDJKNVEyeHBjRU5oWTJobFNXNWtaWGdnUFNBd0xDQnlXM1JkSUQwZ2J6c0tJQ0FnSUNBZ0lDQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdFZ1BTQnZMbXR1YjNkdVFXTjBhVzl1Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdaUzVmWW5sRGJHbHdRMkZqYUdWSmJtUmxlQ0E5SUdFdWJHVnVaM1JvTENCaExuQjFjMmdvWlNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHVXVYMk5oWTJobFNXNWtaWGdnUFNCcExteGxibWQwYUN3Z2FTNXdkWE5vS0dVcExDQnZMbUZqZEdsdmJrSjVVbTl2ZEZ0dVhTQTlJR1U3Q2lBZ0lDQjlDaUFnSUNCZmNtVnRiM1psU1c1aFkzUnBkbVZCWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZV04wYVc5dWN5d2diaUE5SUhSYmRDNXNaVzVuZEdnZ0xTQXhYU3dnYVNBOUlHVXVYMk5oWTJobFNXNWtaWGc3Q2lBZ0lDQWdJQ0FnYmk1ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0J1TENCMExuQnZjQ2dwTENCbExsOWpZV05vWlVsdVpHVjRJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnNaWFFnY2lBOUlHVXVYMk5zYVhBdWRYVnBaQ3dnYnlBOUlIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQXNJR0VnUFNCdlczSmRMQ0JzSUQwZ1lTNXJibTkzYmtGamRHbHZibk1zSUdNZ1BTQnNXMnd1YkdWdVozUm9JQzBnTVYwc0lHZ2dQU0JsTGw5aWVVTnNhWEJEWVdOb1pVbHVaR1Y0T3dvZ0lDQWdJQ0FnSUdNdVgySjVRMnhwY0VOaFkyaGxTVzVrWlhnZ1BTQm9MQ0JzVzJoZElEMGdZeXdnYkM1d2IzQW9LU3dnWlM1ZllubERiR2x3UTJGamFHVkpibVJsZUNBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnYkdWMElIVWdQU0JoTG1GamRHbHZia0o1VW05dmRDd2daQ0E5SUNobExsOXNiMk5oYkZKdmIzUWdmSHdnZEdocGN5NWZjbTl2ZENrdWRYVnBaRHNLSUNBZ0lDQWdJQ0JrWld4bGRHVWdkVnRrWFN3Z2JDNXNaVzVuZEdnZ1BUMDlJREFnSmlZZ1pHVnNaWFJsSUc5YmNsMHNJSFJvYVhNdVgzSmxiVzkyWlVsdVlXTjBhWFpsUW1sdVpHbHVaM05HYjNKQlkzUnBiMjRvWlNrN0NpQWdJQ0I5Q2lBZ0lDQmZjbVZ0YjNabFNXNWhZM1JwZG1WQ2FXNWthVzVuYzBadmNrRmpkR2x2YmlobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQmxMbDl3Y205d1pYSjBlVUpwYm1ScGJtZHpPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdiaUE5SURBc0lHa2dQU0IwTG14bGJtZDBhRHNnYmlBaFBUMGdhVHNnS3l0dUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElISWdQU0IwVzI1ZE93b2dJQ0FnSUNBZ0lDQWdJQ0F0TFhJdWNtVm1aWEpsYm1ObFEyOTFiblFnUFQwOUlEQWdKaVlnZEdocGN5NWZjbVZ0YjNabFNXNWhZM1JwZG1WQ2FXNWthVzVuS0hJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS0lDQWdJRjlzWlc1a1FXTjBhVzl1S0dVcElIc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUm9hWE11WDJGamRHbHZibk1zSUc0Z1BTQmxMbDlqWVdOb1pVbHVaR1Y0TENCcElEMGdkR2hwY3k1ZmJrRmpkR2wyWlVGamRHbHZibk1yS3l3Z2NpQTlJSFJiYVYwN0NpQWdJQ0FnSUNBZ1pTNWZZMkZqYUdWSmJtUmxlQ0E5SUdrc0lIUmJhVjBnUFNCbExDQnlMbDlqWVdOb1pVbHVaR1Y0SUQwZ2Jpd2dkRnR1WFNBOUlISTdDaUFnSUNCOUNpQWdJQ0JmZEdGclpVSmhZMnRCWTNScGIyNG9aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZV04wYVc5dWN5d2diaUE5SUdVdVgyTmhZMmhsU1c1a1pYZ3NJR2tnUFNBdExYUm9hWE11WDI1QlkzUnBkbVZCWTNScGIyNXpMQ0J5SUQwZ2RGdHBYVHNLSUNBZ0lDQWdJQ0JsTGw5allXTm9aVWx1WkdWNElEMGdhU3dnZEZ0cFhTQTlJR1VzSUhJdVgyTmhZMmhsU1c1a1pYZ2dQU0J1TENCMFcyNWRJRDBnY2pzS0lDQWdJSDBLSUNBZ0lGOWhaR1JKYm1GamRHbDJaVUpwYm1ScGJtY29aU3dnZEN3Z2Jpa2dld29nSUNBZ0lDQWdJR3hsZENCcElEMGdkR2hwY3k1ZlltbHVaR2x1WjNOQ2VWSnZiM1JCYm1ST1lXMWxMQ0J5SUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUc4Z1BTQnBXM1JkT3dvZ0lDQWdJQ0FnSUc4Z1BUMDlJSFp2YVdRZ01DQW1KaUFvYnlBOUlIdDlMQ0JwVzNSZElEMGdieWtzSUc5YmJsMGdQU0JsTENCbExsOWpZV05vWlVsdVpHVjRJRDBnY2k1c1pXNW5kR2dzSUhJdWNIVnphQ2hsS1RzS0lDQWdJSDBLSUNBZ0lGOXlaVzF2ZG1WSmJtRmpkR2wyWlVKcGJtUnBibWNvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ2RHaHBjeTVmWW1sdVpHbHVaM01zSUc0Z1BTQmxMbUpwYm1ScGJtY3NJR2tnUFNCdUxuSnZiM1JPYjJSbExuVjFhV1FzSUhJZ1BTQnVMbkJoZEdnc0lHOGdQU0IwYUdsekxsOWlhVzVrYVc1bmMwSjVVbTl2ZEVGdVpFNWhiV1VzSUdFZ1BTQnZXMmxkTENCc0lEMGdkRnQwTG14bGJtZDBhQ0F0SURGZExDQmpJRDBnWlM1ZlkyRmphR1ZKYm1SbGVEc0tJQ0FnSUNBZ0lDQnNMbDlqWVdOb1pVbHVaR1Y0SUQwZ1l5d2dkRnRqWFNBOUlHd3NJSFF1Y0c5d0tDa3NJR1JsYkdWMFpTQmhXM0pkTENCUFltcGxZM1F1YTJWNWN5aGhLUzVzWlc1bmRHZ2dQVDA5SURBZ0ppWWdaR1ZzWlhSbElHOWJhVjA3Q2lBZ0lDQjlDaUFnSUNCZmJHVnVaRUpwYm1ScGJtY29aU2tnZXdvZ0lDQWdJQ0FnSUd4bGRDQjBJRDBnZEdocGN5NWZZbWx1WkdsdVozTXNJRzRnUFNCbExsOWpZV05vWlVsdVpHVjRMQ0JwSUQwZ2RHaHBjeTVmYmtGamRHbDJaVUpwYm1ScGJtZHpLeXNzSUhJZ1BTQjBXMmxkT3dvZ0lDQWdJQ0FnSUdVdVgyTmhZMmhsU1c1a1pYZ2dQU0JwTENCMFcybGRJRDBnWlN3Z2NpNWZZMkZqYUdWSmJtUmxlQ0E5SUc0c0lIUmJibDBnUFNCeU93b2dJQ0FnZlFvZ0lDQWdYM1JoYTJWQ1lXTnJRbWx1WkdsdVp5aGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxsOWlhVzVrYVc1bmN5d2diaUE5SUdVdVgyTmhZMmhsU1c1a1pYZ3NJR2tnUFNBdExYUm9hWE11WDI1QlkzUnBkbVZDYVc1a2FXNW5jeXdnY2lBOUlIUmJhVjA3Q2lBZ0lDQWdJQ0FnWlM1ZlkyRmphR1ZKYm1SbGVDQTlJR2tzSUhSYmFWMGdQU0JsTENCeUxsOWpZV05vWlVsdVpHVjRJRDBnYml3Z2RGdHVYU0E5SUhJN0NpQWdJQ0I5Q2lBZ0lDQmZiR1Z1WkVOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDJOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZEhNc0lIUWdQU0IwYUdsekxsOXVRV04wYVhabFEyOXVkSEp2YkVsdWRHVnljRzlzWVc1MGN5c3JMQ0J1SUQwZ1pWdDBYVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiaUE5UFQwZ2RtOXBaQ0F3SUNZbUlDaHVJRDBnYm1WM0lFNWhLRzVsZHlCR2JHOWhkRE15UVhKeVlYa29NaWtzSUc1bGR5QkdiRzloZERNeVFYSnlZWGtvTWlrc0lERXNJSFJvYVhNdVgyTnZiblJ5YjJ4SmJuUmxjbkJ2YkdGdWRITlNaWE4xYkhSQ2RXWm1aWElwTENCdUxsOWZZMkZqYUdWSmJtUmxlQ0E5SUhRc0lHVmJkRjBnUFNCdUtTd2dianNLSUNBZ0lIMEtJQ0FnSUY5MFlXdGxRbUZqYTBOdmJuUnliMnhKYm5SbGNuQnZiR0Z1ZENobEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5amIyNTBjbTlzU1c1MFpYSndiMnhoYm5SekxDQnVJRDBnWlM1ZlgyTmhZMmhsU1c1a1pYZ3NJR2tnUFNBdExYUm9hWE11WDI1QlkzUnBkbVZEYjI1MGNtOXNTVzUwWlhKd2IyeGhiblJ6TENCeUlEMGdkRnRwWFRzS0lDQWdJQ0FnSUNCbExsOWZZMkZqYUdWSmJtUmxlQ0E5SUdrc0lIUmJhVjBnUFNCbExDQnlMbDlmWTJGamFHVkpibVJsZUNBOUlHNHNJSFJiYmwwZ1BTQnlPd29nSUNBZ2ZRb2dJQ0FnWTJ4cGNFRmpkR2x2YmlobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCMElIeDhJSFJvYVhNdVgzSnZiM1FzSUhJZ1BTQnBMblYxYVdRc0lHOGdQU0IwZVhCbGIyWWdaU0E5UFNBaWMzUnlhVzVuSWlBL0lFeHlMbVpwYm1SQ2VVNWhiV1VvYVN3Z1pTa2dPaUJsTENCaElEMGdieUFoUFQwZ2JuVnNiQ0EvSUc4dWRYVnBaQ0E2SUdVc0lHd2dQU0IwYUdsekxsOWhZM1JwYjI1elFubERiR2x3VzJGZExDQmpJRDBnYm5Wc2JEc0tJQ0FnSUNBZ0lDQnBaaUFvYmlBOVBUMGdkbTlwWkNBd0lDWW1JQ2h2SUNFOVBTQnVkV3hzSUQ4Z2JpQTlJRzh1WW14bGJtUk5iMlJsSURvZ2JpQTlJSFZoS1N3Z2JDQWhQVDBnZG05cFpDQXdLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0IxSUQwZ2JDNWhZM1JwYjI1Q2VWSnZiM1JiY2wwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoMUlDRTlQU0IyYjJsa0lEQWdKaVlnZFM1aWJHVnVaRTF2WkdVZ1BUMDlJRzRwSUhKbGRIVnliaUIxT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpJRDBnYkM1cmJtOTNia0ZqZEdsdmJuTmJNRjBzSUc4Z1BUMDlJRzUxYkd3Z0ppWWdLRzhnUFNCakxsOWpiR2x3S1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2FXWWdLRzhnUFQwOUlHNTFiR3dwSUhKbGRIVnliaUJ1ZFd4c093b2dJQ0FnSUNBZ0lHeGxkQ0JvSUQwZ2JtVjNJRnBvS0hSb2FYTXNJRzhzSUhRc0lHNHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TGw5aWFXNWtRV04wYVc5dUtHZ3NJR01wTENCMGFHbHpMbDloWkdSSmJtRmpkR2wyWlVGamRHbHZiaWhvTENCaExDQnlLU3dnYURzS0lDQWdJSDBLSUNBZ0lHVjRhWE4wYVc1blFXTjBhVzl1S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2JpQTlJSFFnZkh3Z2RHaHBjeTVmY205dmRDd2dhU0E5SUc0dWRYVnBaQ3dnY2lBOUlIUjVjR1Z2WmlCbElEMDlJQ0p6ZEhKcGJtY2lJRDhnVEhJdVptbHVaRUo1VG1GdFpTaHVMQ0JsS1NBNklHVXNJRzhnUFNCeUlEOGdjaTUxZFdsa0lEb2daU3dnWVNBOUlIUm9hWE11WDJGamRHbHZibk5DZVVOc2FYQmJiMTA3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR0VnSVQwOUlIWnZhV1FnTUNBbUppQmhMbUZqZEdsdmJrSjVVbTl2ZEZ0cFhTQjhmQ0J1ZFd4c093b2dJQ0FnZlFvZ0lDQWdjM1J2Y0VGc2JFRmpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQnNaWFFnWlNBOUlIUm9hWE11WDJGamRHbHZibk1zSUhRZ1BTQjBhR2x6TGw5dVFXTjBhWFpsUVdOMGFXOXVjenNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJRzRnUFNCMElDMGdNVHNnYmlBK1BTQXdPeUF0TFc0cFpWdHVYUzV6ZEc5d0tDazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCMWNHUmhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdLajBnZEdocGN5NTBhVzFsVTJOaGJHVTdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQjBhR2x6TGw5aFkzUnBiMjV6TENCdUlEMGdkR2hwY3k1ZmJrRmpkR2wyWlVGamRHbHZibk1zSUdrZ1BTQjBhR2x6TG5ScGJXVWdLejBnWlN3Z2NpQTlJRTFoZEdndWMybG5iaWhsS1N3Z2J5QTlJSFJvYVhNdVgyRmpZM1ZKYm1SbGVDQmVQU0F4T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWXlBOUlEQTdJR01nSVQwOUlHNDdJQ3NyWXlsMFcyTmRMbDkxY0dSaGRHVW9hU3dnWlN3Z2Npd2dieWs3Q2lBZ0lDQWdJQ0FnYkdWMElHRWdQU0IwYUdsekxsOWlhVzVrYVc1bmN5d2diQ0E5SUhSb2FYTXVYMjVCWTNScGRtVkNhVzVrYVc1bmN6c0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHTXhJRDBnTURzZ1l6RWdJVDA5SUd3N0lDc3JZekVwWVZ0ak1WMHVZWEJ3Ykhrb2J5azdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCelpYUlVhVzFsS0dVcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5ScGJXVWdQU0F3T3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZENBOUlEQTdJSFFnUENCMGFHbHpMbDloWTNScGIyNXpMbXhsYm1kMGFEc2dkQ3NyS1hSb2FYTXVYMkZqZEdsdmJuTmJkRjB1ZEdsdFpTQTlJREE3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWRYQmtZWFJsS0dVcE93b2dJQ0FnZlFvZ0lDQWdaMlYwVW05dmRDZ3BJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmNtOXZkRHNLSUNBZ0lIMEtJQ0FnSUhWdVkyRmphR1ZEYkdsd0tHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSFJvYVhNdVgyRmpkR2x2Ym5Nc0lHNGdQU0JsTG5WMWFXUXNJR2tnUFNCMGFHbHpMbDloWTNScGIyNXpRbmxEYkdsd0xDQnlJRDBnYVZ0dVhUc0tJQ0FnSUNBZ0lDQnBaaUFvY2lBaFBUMGdkbTlwWkNBd0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQnZJRDBnY2k1cmJtOTNia0ZqZEdsdmJuTTdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnWVNBOUlEQXNJR3dnUFNCdkxteGxibWQwYURzZ1lTQWhQVDBnYkRzZ0t5dGhLWHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3hsZENCaklEMGdiMXRoWFRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVYMlJsWVdOMGFYWmhkR1ZCWTNScGIyNG9ZeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2FDQTlJR011WDJOaFkyaGxTVzVrWlhnc0lIVWdQU0IwVzNRdWJHVnVaM1JvSUMwZ01WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpMbDlqWVdOb1pVbHVaR1Y0SUQwZ2JuVnNiQ3dnWXk1ZllubERiR2x3UTJGamFHVkpibVJsZUNBOUlHNTFiR3dzSUhVdVgyTmhZMmhsU1c1a1pYZ2dQU0JvTENCMFcyaGRJRDBnZFN3Z2RDNXdiM0FvS1N3Z2RHaHBjeTVmY21WdGIzWmxTVzVoWTNScGRtVkNhVzVrYVc1bmMwWnZja0ZqZEdsdmJpaGpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdhVnR1WFRzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q2lBZ0lDQjFibU5oWTJobFVtOXZkQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCbExuVjFhV1FzSUc0Z1BTQjBhR2x6TGw5aFkzUnBiMjV6UW5sRGJHbHdPd29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdieUJwYmlCdUtYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHRWdQU0J1VzI5ZExtRmpkR2x2YmtKNVVtOXZkQ3dnYkNBOUlHRmJkRjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHd2dJVDA5SUhadmFXUWdNQ0FtSmlBb2RHaHBjeTVmWkdWaFkzUnBkbUYwWlVGamRHbHZiaWhzS1N3Z2RHaHBjeTVmY21WdGIzWmxTVzVoWTNScGRtVkJZM1JwYjI0b2JDa3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JzWlhRZ2FTQTlJSFJvYVhNdVgySnBibVJwYm1kelFubFNiMjkwUVc1a1RtRnRaU3dnY2lBOUlHbGJkRjA3Q2lBZ0lDQWdJQ0FnYVdZZ0tISWdJVDA5SUhadmFXUWdNQ2tnWm05eUtHeGxkQ0J2TVNCcGJpQnlLWHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0V4SUQwZ2NsdHZNVjA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXhMbkpsYzNSdmNtVlBjbWxuYVc1aGJGTjBZWFJsS0Nrc0lIUm9hWE11WDNKbGJXOTJaVWx1WVdOMGFYWmxRbWx1WkdsdVp5aGhNU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUW9nSUNBZ2RXNWpZV05vWlVGamRHbHZiaWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQjBhR2x6TG1WNGFYTjBhVzVuUVdOMGFXOXVLR1VzSUhRcE93b2dJQ0FnSUNBZ0lHNGdJVDA5SUc1MWJHd2dKaVlnS0hSb2FYTXVYMlJsWVdOMGFYWmhkR1ZCWTNScGIyNG9iaWtzSUhSb2FYTXVYM0psYlc5MlpVbHVZV04wYVhabFFXTjBhVzl1S0c0cEtUc0tJQ0FnSUgwS2ZUc0tKR2d1Y0hKdmRHOTBlWEJsTGw5amIyNTBjbTlzU1c1MFpYSndiMnhoYm5SelVtVnpkV3gwUW5WbVptVnlJRDBnYm1WM0lFWnNiMkYwTXpKQmNuSmhlU2d4S1RzS2RtRnlJR2R2SUQwZ1kyeGhjM01nZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNsN0NpQWdJQ0FnSUNBZ2RIbHdaVzltSUdVZ1BUMGdJbk4wY21sdVp5SWdKaVlnS0dOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVZXNXBabTl5YlRvZ1ZIbHdaU0J3WVhKaGJXVjBaWElnYVhNZ2JtOGdiRzl1WjJWeUlHNWxaV1JsWkM0aUtTd2daU0E5SUdGeVozVnRaVzUwYzFzeFhTa3NJSFJvYVhNdWRtRnNkV1VnUFNCbE93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJuYnloMGFHbHpMblpoYkhWbExtTnNiMjVsSUQwOVBTQjJiMmxrSURBZ1B5QjBhR2x6TG5aaGJIVmxJRG9nZEdocGN5NTJZV3gxWlM1amJHOXVaU2dwS1RzS0lDQWdJSDBLZlN3Z2FtZ2dQU0JqYkdGemN5QmxlSFJsYm1SeklDUnVJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNGdQU0F4S1hzS0lDQWdJQ0FnSUNCemRYQmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VnUFNCdU93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlITjFjR1Z5TG1OdmNIa29aU2tzSUhSb2FYTXViV1Z6YUZCbGNrRjBkSEpwWW5WMFpTQTlJR1V1YldWemFGQmxja0YwZEhKcFluVjBaU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtHVXBJSHNLSUNBZ0lDQWdJQ0JzWlhRZ2RDQTlJSE4xY0dWeUxtTnNiMjVsS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtMWxjMmhRWlhKQmRIUnlhV0oxZEdVZ1BTQjBhR2x6TG0xbGMyaFFaWEpCZEhSeWFXSjFkR1VzSUhRN0NpQWdJQ0I5Q2lBZ0lDQjBiMHBUVDA0b1pTa2dld29nSUNBZ0lDQWdJR3hsZENCMElEMGdjM1Z3WlhJdWRHOUtVMDlPS0dVcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMExtbHpTVzV6ZEdGdVkyVmtTVzUwWlhKc1pXRjJaV1JDZFdabVpYSWdQU0FoTUN3Z2RDNXRaWE5vVUdWeVFYUjBjbWxpZFhSbElEMGdkR2hwY3k1dFpYTm9VR1Z5UVhSMGNtbGlkWFJsTENCME93b2dJQ0FnZlFwOU93cHFhQzV3Y205MGIzUjVjR1V1YVhOSmJuTjBZVzVqWldSSmJuUmxjbXhsWVhabFpFSjFabVpsY2lBOUlDRXdPd3AyWVhJZ1VXZ2dQU0JqYkdGemN5QjdDaUFnSUNCamIyNXpkSEoxWTNSdmNpaGxMQ0IwTENCdUxDQnBMQ0J5S1hzS0lDQWdJQ0FnSUNCMGFHbHpMbUoxWm1abGNpQTlJR1VzSUhSb2FYTXVkSGx3WlNBOUlIUXNJSFJvYVhNdWFYUmxiVk5wZW1VZ1BTQnVMQ0IwYUdsekxtVnNaVzFsYm5SVGFYcGxJRDBnYVN3Z2RHaHBjeTVqYjNWdWRDQTlJSElzSUhSb2FYTXVkbVZ5YzJsdmJpQTlJREE3Q2lBZ0lDQjlDaUFnSUNCelpYUWdibVZsWkhOVmNHUmhkR1VvWlNrZ2V3b2dJQ0FnSUNBZ0lHVWdQVDA5SUNFd0lDWW1JSFJvYVhNdWRtVnljMmx2Ymlzck93b2dJQ0FnZlFvZ0lDQWdjMlYwUW5WbVptVnlLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWlkV1ptWlhJZ1BTQmxMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwVkhsd1pTaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVkSGx3WlNBOUlHVXNJSFJvYVhNdVpXeGxiV1Z1ZEZOcGVtVWdQU0IwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMFNYUmxiVk5wZW1Vb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1sMFpXMVRhWHBsSUQwZ1pTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lITmxkRU52ZFc1MEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amIzVnVkQ0E5SUdVc0lIUm9hWE03Q2lBZ0lDQjlDbjA3Q2xGb0xuQnliM1J2ZEhsd1pTNXBjMGRNUW5WbVptVnlRWFIwY21saWRYUmxJRDBnSVRBN0NuWmhjaUJGZVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRnUFNBd0xDQnBJRDBnTVNBdklEQXBld29nSUNBZ0lDQWdJSFJvYVhNdWNtRjVJRDBnYm1WM0lFTnVLR1VzSUhRcExDQjBhR2x6TG01bFlYSWdQU0J1TENCMGFHbHpMbVpoY2lBOUlHa3NJSFJvYVhNdVkyRnRaWEpoSUQwZ2JuVnNiQ3dnZEdocGN5NXNZWGxsY25NZ1BTQnVaWGNnU25Nc0lIUm9hWE11Y0dGeVlXMXpJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQk5aWE5vT2lCN2ZTd0tJQ0FnSUNBZ0lDQWdJQ0FnVEdsdVpUb2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2h5WlhOb2IyeGtPaUF4Q2lBZ0lDQWdJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdJQ0FnSUV4UFJEb2dlMzBzQ2lBZ0lDQWdJQ0FnSUNBZ0lGQnZhVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHlaWE5vYjJ4a09pQXhDaUFnSUNBZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ0lDQWdJRk53Y21sMFpUb2dlMzBLSUNBZ0lDQWdJQ0I5T3dvZ0lDQWdmUW9nSUNBZ2MyVjBLR1VzSUhRcElIc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KaGVTNXpaWFFvWlN3Z2RDazdDaUFnSUNCOUNpQWdJQ0J6WlhSR2NtOXRRMkZ0WlhKaEtHVXNJSFFwSUhzS0lDQWdJQ0FnSUNCMElDWW1JSFF1YVhOUVpYSnpjR1ZqZEdsMlpVTmhiV1Z5WVNBL0lDaDBhR2x6TG5KaGVTNXZjbWxuYVc0dWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFF1YldGMGNtbDRWMjl5YkdRcExDQjBhR2x6TG5KaGVTNWthWEpsWTNScGIyNHVjMlYwS0dVdWVDd2daUzU1TENBdU5Ta3VkVzV3Y205cVpXTjBLSFFwTG5OMVlpaDBhR2x6TG5KaGVTNXZjbWxuYVc0cExtNXZjbTFoYkdsNlpTZ3BMQ0IwYUdsekxtTmhiV1Z5WVNBOUlIUXBJRG9nZENBbUppQjBMbWx6VDNKMGFHOW5jbUZ3YUdsalEyRnRaWEpoSUQ4Z0tIUm9hWE11Y21GNUxtOXlhV2RwYmk1elpYUW9aUzU0TENCbExua3NJQ2gwTG01bFlYSWdLeUIwTG1aaGNpa2dMeUFvZEM1dVpXRnlJQzBnZEM1bVlYSXBLUzUxYm5CeWIycGxZM1FvZENrc0lIUm9hWE11Y21GNUxtUnBjbVZqZEdsdmJpNXpaWFFvTUN3Z01Dd2dMVEVwTG5SeVlXNXpabTl5YlVScGNtVmpkR2x2YmloMExtMWhkSEpwZUZkdmNteGtLU3dnZEdocGN5NWpZVzFsY21FZ1BTQjBLU0E2SUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsSmhlV05oYzNSbGNqb2dWVzV6ZFhCd2IzSjBaV1FnWTJGdFpYSmhJSFI1Y0dVNklDSWdLeUIwTG5SNWNHVXBPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wVDJKcVpXTjBLR1VzSUhRZ1BTQWhNQ3dnYmlBOUlGdGRLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJR3hoS0dVc0lIUm9hWE1zSUc0c0lIUXBMQ0J1TG5OdmNuUW9VR01wTENCdU93b2dJQ0FnZlFvZ0lDQWdhVzUwWlhKelpXTjBUMkpxWldOMGN5aGxMQ0IwSUQwZ0lUQXNJRzRnUFNCYlhTa2dld29nSUNBZ0lDQWdJR1p2Y2loc1pYUWdhU0E5SURBc0lISWdQU0JsTG14bGJtZDBhRHNnYVNBOElISTdJR2tyS3lsc1lTaGxXMmxkTENCMGFHbHpMQ0J1TENCMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2JpNXpiM0owS0ZCaktTd2dianNLSUNBZ0lIMEtmVHNLWm5WdVkzUnBiMjRnVUdNb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlITXVaR2x6ZEdGdVkyVWdMU0JsTG1ScGMzUmhibU5sT3dwOUNtWjFibU4wYVc5dUlHeGhLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR2xtSUNoekxteGhlV1Z5Y3k1MFpYTjBLR1V1YkdGNVpYSnpLU0FtSmlCekxuSmhlV05oYzNRb1pTd2dkQ2tzSUc0Z1BUMDlJQ0V3S1NCN0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCekxtTm9hV3hrY21WdU93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2NpQTlJREFzSUc4Z1BTQnBMbXhsYm1kMGFEc2djaUE4SUc4N0lISXJLeWxzWVNocFczSmRMQ0JsTENCMExDQWhNQ2s3Q2lBZ0lDQjlDbjBLZG1GeUlFRjVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9aU0E5SURFc0lIUWdQU0F3TENCdUlEMGdNQ2w3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNtRmthWFZ6SUQwZ1pTd2dkR2hwY3k1d2FHa2dQU0IwTENCMGFHbHpMblJvWlhSaElEMGdiaXdnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSE5sZENobExDQjBMQ0J1S1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjbUZrYVhWeklEMGdaU3dnZEdocGN5NXdhR2tnUFNCMExDQjBhR2x6TG5Sb1pYUmhJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXVjbUZrYVhWekxDQjBhR2x6TG5Cb2FTQTlJR1V1Y0docExDQjBhR2x6TG5Sb1pYUmhJRDBnWlM1MGFHVjBZU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJRzFoYTJWVFlXWmxLQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuQm9hU0E5SUUxaGRHZ3ViV0Y0S0RGbExUWXNJRTFoZEdndWJXbHVLRTFoZEdndVVFa2dMU0F4WlMwMkxDQjBhR2x6TG5Cb2FTa3BMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWWmxZM1J2Y2pNb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5ObGRFWnliMjFEWVhKMFpYTnBZVzVEYjI5eVpITW9aUzU0TENCbExua3NJR1V1ZWlrN0NpQWdJQ0I5Q2lBZ0lDQnpaWFJHY205dFEyRnlkR1Z6YVdGdVEyOXZjbVJ6S0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NXlZV1JwZFhNZ1BTQk5ZWFJvTG5OeGNuUW9aU0FxSUdVZ0t5QjBJQ29nZENBcklHNGdLaUJ1S1N3Z2RHaHBjeTV5WVdScGRYTWdQVDA5SURBZ1B5QW9kR2hwY3k1MGFHVjBZU0E5SURBc0lIUm9hWE11Y0docElEMGdNQ2tnT2lBb2RHaHBjeTUwYUdWMFlTQTlJRTFoZEdndVlYUmhiaklvWlN3Z2Jpa3NJSFJvYVhNdWNHaHBJRDBnVFdGMGFDNWhZMjl6S0cxMEtIUWdMeUIwYUdsekxuSmhaR2wxY3l3Z0xURXNJREVwS1Nrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamJHOXVaU2dwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lIUm9hWE11WTI5dWMzUnlkV04wYjNJb0tTNWpiM0I1S0hSb2FYTXBPd29nSUNBZ2ZRcDlMQ0JEZVNBOUlHTnNZWE56SUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVZ1BTQXhMQ0IwSUQwZ01Dd2diaUE5SURBcGV3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpoWkdsMWN5QTlJR1VzSUhSb2FYTXVkR2hsZEdFZ1BTQjBMQ0IwYUdsekxua2dQU0J1TENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYzJWMEtHVXNJSFFzSUc0cElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV5WVdScGRYTWdQU0JsTENCMGFHbHpMblJvWlhSaElEMGdkQ3dnZEdocGN5NTVJRDBnYml3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUdOdmNIa29aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxuSmhaR2wxY3lBOUlHVXVjbUZrYVhWekxDQjBhR2x6TG5Sb1pYUmhJRDBnWlM1MGFHVjBZU3dnZEdocGN5NTVJRDBnWlM1NUxDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlZabFkzUnZjak1vWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbk5sZEVaeWIyMURZWEowWlhOcFlXNURiMjl5WkhNb1pTNTRMQ0JsTG5rc0lHVXVlaWs3Q2lBZ0lDQjlDaUFnSUNCelpYUkdjbTl0UTJGeWRHVnphV0Z1UTI5dmNtUnpLR1VzSUhRc0lHNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVlXUnBkWE1nUFNCTllYUm9Mbk54Y25Rb1pTQXFJR1VnS3lCdUlDb2diaWtzSUhSb2FYTXVkR2hsZEdFZ1BTQk5ZWFJvTG1GMFlXNHlLR1VzSUc0cExDQjBhR2x6TG5rZ1BTQjBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMnh2Ym1Vb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUIwYUdsekxtTnZibk4wY25WamRHOXlLQ2t1WTI5d2VTaDBhR2x6S1RzS0lDQWdJSDBLZlN3Z1NXTWdQU0J1WlhjZ1dDd2djV2tnUFNCamJHRnpjeUI3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsSUQwZ2JtVjNJRmdvTVNBdklEQXNJREVnTHlBd0tTd2dkQ0E5SUc1bGR5QllLQzB4SUM4Z01Dd2dMVEVnTHlBd0tTbDdDaUFnSUNBZ0lDQWdkR2hwY3k1dGFXNGdQU0JsTENCMGFHbHpMbTFoZUNBOUlIUTdDaUFnSUNCOUNpQWdJQ0J6WlhRb1pTd2dkQ2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUIwYUdsekxtMXBiaTVqYjNCNUtHVXBMQ0IwYUdsekxtMWhlQzVqYjNCNUtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdjMlYwUm5KdmJWQnZhVzUwY3lobEtTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1dFlXdGxSVzF3ZEhrb0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElIUWdQU0F3TENCdUlEMGdaUzVzWlc1bmRHZzdJSFFnUENCdU95QjBLeXNwZEdocGN5NWxlSEJoYm1SQ2VWQnZhVzUwS0dWYmRGMHBPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MyVjBSbkp2YlVObGJuUmxja0Z1WkZOcGVtVW9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0J1SUQwZ1NXTXVZMjl3ZVNoMEtTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU5TazdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtTnZjSGtvWlNrdWMzVmlLRzRwTENCMGFHbHpMbTFoZUM1amIzQjVLR1VwTG1Ga1pDaHVLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJR05zYjI1bEtDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnZEdocGN5NWpiMjV6ZEhKMVkzUnZjaWdwTG1OdmNIa29kR2hwY3lrN0NpQWdJQ0I5Q2lBZ0lDQmpiM0I1S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dVkyOXdlU2hsTG0xcGJpa3NJSFJvYVhNdWJXRjRMbU52Y0hrb1pTNXRZWGdwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnYldGclpVVnRjSFI1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1NElEMGdkR2hwY3k1dGFXNHVlU0E5SURFZ0x5QXdMQ0IwYUdsekxtMWhlQzU0SUQwZ2RHaHBjeTV0WVhndWVTQTlJQzB4SUM4Z01Dd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lHbHpSVzF3ZEhrb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldGNExuZ2dQQ0IwYUdsekxtMXBiaTU0SUh4OElIUm9hWE11YldGNExua2dQQ0IwYUdsekxtMXBiaTU1T3dvZ0lDQWdmUW9nSUNBZ1oyVjBRMlZ1ZEdWeUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1cGMwVnRjSFI1S0NrZ1B5QmxMbk5sZENnd0xDQXdLU0E2SUdVdVlXUmtWbVZqZEc5eWN5aDBhR2x6TG0xcGJpd2dkR2hwY3k1dFlYZ3BMbTExYkhScGNHeDVVMk5oYkdGeUtDNDFLVHNLSUNBZ0lIMEtJQ0FnSUdkbGRGTnBlbVVvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbWx6Ulcxd2RIa29LU0EvSUdVdWMyVjBLREFzSURBcElEb2daUzV6ZFdKV1pXTjBiM0p6S0hSb2FYTXViV0Y0TENCMGFHbHpMbTFwYmlrN0NpQWdJQ0I5Q2lBZ0lDQmxlSEJoYm1SQ2VWQnZhVzUwS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXbHVLR1VwTENCMGFHbHpMbTFoZUM1dFlYZ29aU2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JsZUhCaGJtUkNlVlpsWTNSdmNpaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWJXbHVMbk4xWWlobEtTd2dkR2hwY3k1dFlYZ3VZV1JrS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYaHdZVzVrUW5sVFkyRnNZWElvWlNrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbTFwYmk1aFpHUlRZMkZzWVhJb0xXVXBMQ0IwYUdsekxtMWhlQzVoWkdSVFkyRnNZWElvWlNrc0lIUm9hWE03Q2lBZ0lDQjlDaUFnSUNCamIyNTBZV2x1YzFCdmFXNTBLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVNobExuZ2dQQ0IwYUdsekxtMXBiaTU0SUh4OElHVXVlQ0ErSUhSb2FYTXViV0Y0TG5nZ2ZId2daUzU1SUR3Z2RHaHBjeTV0YVc0dWVTQjhmQ0JsTG5rZ1BpQjBhR2x6TG0xaGVDNTVLVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuUmhhVzV6UW05NEtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHVlQ0E4UFNCbExtMXBiaTU0SUNZbUlHVXViV0Y0TG5nZ1BEMGdkR2hwY3k1dFlYZ3VlQ0FtSmlCMGFHbHpMbTFwYmk1NUlEdzlJR1V1YldsdUxua2dKaVlnWlM1dFlYZ3VlU0E4UFNCMGFHbHpMbTFoZUM1NU93b2dJQ0FnZlFvZ0lDQWdaMlYwVUdGeVlXMWxkR1Z5S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzV6WlhRb0tHVXVlQ0F0SUhSb2FYTXViV2x1TG5ncElDOGdLSFJvYVhNdWJXRjRMbmdnTFNCMGFHbHpMbTFwYmk1NEtTd2dLR1V1ZVNBdElIUm9hWE11YldsdUxua3BJQzhnS0hSb2FYTXViV0Y0TG5rZ0xTQjBhR2x6TG0xcGJpNTVLU2s3Q2lBZ0lDQjlDaUFnSUNCcGJuUmxjbk5sWTNSelFtOTRLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnSVNobExtMWhlQzU0SUR3Z2RHaHBjeTV0YVc0dWVDQjhmQ0JsTG0xcGJpNTRJRDRnZEdocGN5NXRZWGd1ZUNCOGZDQmxMbTFoZUM1NUlEd2dkR2hwY3k1dGFXNHVlU0I4ZkNCbExtMXBiaTU1SUQ0Z2RHaHBjeTV0WVhndWVTazdDaUFnSUNCOUNpQWdJQ0JqYkdGdGNGQnZhVzUwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkQzVqYjNCNUtHVXBMbU5zWVcxd0tIUm9hWE11YldsdUxDQjBhR2x6TG0xaGVDazdDaUFnSUNCOUNpQWdJQ0JrYVhOMFlXNWpaVlJ2VUc5cGJuUW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJKWXk1amIzQjVLR1VwTG1Oc1lXMXdLSFJvYVhNdWJXbHVMQ0IwYUdsekxtMWhlQ2t1YzNWaUtHVXBMbXhsYm1kMGFDZ3BPd29nSUNBZ2ZRb2dJQ0FnYVc1MFpYSnpaV04wS0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTV0YVc0dWJXRjRLR1V1YldsdUtTd2dkR2hwY3k1dFlYZ3ViV2x1S0dVdWJXRjRLU3dnZEdocGN6c0tJQ0FnSUgwS0lDQWdJSFZ1YVc5dUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1dGFXNHViV2x1S0dVdWJXbHVLU3dnZEdocGN5NXRZWGd1YldGNEtHVXViV0Y0S1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSeVlXNXpiR0YwWlNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YldsdUxtRmtaQ2hsS1N3Z2RHaHBjeTV0WVhndVlXUmtLR1VwTENCMGFHbHpPd29nSUNBZ2ZRb2dJQ0FnWlhGMVlXeHpLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1dGFXNHVaWEYxWVd4ektIUm9hWE11YldsdUtTQW1KaUJsTG0xaGVDNWxjWFZoYkhNb2RHaHBjeTV0WVhncE93b2dJQ0FnZlFwOU93cHhhUzV3Y205MGIzUjVjR1V1YVhOQ2IzZ3lJRDBnSVRBN0NuWmhjaUJFWXlBOUlHNWxkeUJOTENCVWN5QTlJRzVsZHlCTkxDQkxhQ0E5SUdOc1lYTnpJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VnUFNCdVpYY2dUU3dnZENBOUlHNWxkeUJOS1hzS0lDQWdJQ0FnSUNCMGFHbHpMbk4wWVhKMElEMGdaU3dnZEdocGN5NWxibVFnUFNCME93b2dJQ0FnZlFvZ0lDQWdjMlYwS0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1emRHRnlkQzVqYjNCNUtHVXBMQ0IwYUdsekxtVnVaQzVqYjNCNUtIUXBMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdZMjl3ZVNobEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNSaGNuUXVZMjl3ZVNobExuTjBZWEowS1N3Z2RHaHBjeTVsYm1RdVkyOXdlU2hsTG1WdVpDa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQm5aWFJEWlc1MFpYSW9aU2tnZXdvZ0lDQWdJQ0FnSUhKbGRIVnliaUJsTG1Ga1pGWmxZM1J2Y25Nb2RHaHBjeTV6ZEdGeWRDd2dkR2hwY3k1bGJtUXBMbTExYkhScGNHeDVVMk5oYkdGeUtDNDFLVHNLSUNBZ0lIMEtJQ0FnSUdSbGJIUmhLR1VwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnWlM1emRXSldaV04wYjNKektIUm9hWE11Wlc1a0xDQjBhR2x6TG5OMFlYSjBLVHNLSUNBZ0lIMEtJQ0FnSUdScGMzUmhibU5sVTNFb0tTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11YzNSaGNuUXVaR2x6ZEdGdVkyVlViMU54ZFdGeVpXUW9kR2hwY3k1bGJtUXBPd29nSUNBZ2ZRb2dJQ0FnWkdsemRHRnVZMlVvS1NCN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjM1JoY25RdVpHbHpkR0Z1WTJWVWJ5aDBhR2x6TG1WdVpDazdDaUFnSUNCOUNpQWdJQ0JoZENobExDQjBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVpHVnNkR0VvZENrdWJYVnNkR2x3YkhsVFkyRnNZWElvWlNrdVlXUmtLSFJvYVhNdWMzUmhjblFwT3dvZ0lDQWdmUW9nSUNBZ1kyeHZjMlZ6ZEZCdmFXNTBWRzlRYjJsdWRGQmhjbUZ0WlhSbGNpaGxMQ0IwS1NCN0NpQWdJQ0FnSUNBZ1JHTXVjM1ZpVm1WamRHOXljeWhsTENCMGFHbHpMbk4wWVhKMEtTd2dWSE11YzNWaVZtVmpkRzl5Y3loMGFHbHpMbVZ1WkN3Z2RHaHBjeTV6ZEdGeWRDazdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQlVjeTVrYjNRb1ZITXBMQ0J5SUQwZ1ZITXVaRzkwS0VSaktTQXZJRzQ3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFFnSmlZZ0tISWdQU0J0ZENoeUxDQXdMQ0F4S1Nrc0lISTdDaUFnSUNCOUNpQWdJQ0JqYkc5elpYTjBVRzlwYm5SVWIxQnZhVzUwS0dVc0lIUXNJRzRwSUhzS0lDQWdJQ0FnSUNCc1pYUWdhU0E5SUhSb2FYTXVZMnh2YzJWemRGQnZhVzUwVkc5UWIybHVkRkJoY21GdFpYUmxjaWhsTENCMEtUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVrWld4MFlTaHVLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpaHBLUzVoWkdRb2RHaHBjeTV6ZEdGeWRDazdDaUFnSUNCOUNpQWdJQ0JoY0hCc2VVMWhkSEpwZURRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5OMFlYSjBMbUZ3Y0d4NVRXRjBjbWw0TkNobEtTd2dkR2hwY3k1bGJtUXVZWEJ3YkhsTllYUnlhWGcwS0dVcExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ1pYRjFZV3h6S0dVcElIc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1pTNXpkR0Z5ZEM1bGNYVmhiSE1vZEdocGN5NXpkR0Z5ZENrZ0ppWWdaUzVsYm1RdVpYRjFZV3h6S0hSb2FYTXVaVzVrS1RzS0lDQWdJSDBLSUNBZ0lHTnNiMjVsS0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2dkR2hwY3k1amIyNXpkSEoxWTNSdmNpZ3BMbU52Y0hrb2RHaHBjeWs3Q2lBZ0lDQjlDbjBzSUVaaklEMGdibVYzSUUwc0lFeDVJRDBnWTJ4aGMzTWdaWGgwWlc1a2N5Qk9aU0I3Q2lBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhsTENCMEtYc0tJQ0FnSUNBZ0lDQnpkWEJsY2lncE93b2dJQ0FnSUNBZ0lIUm9hWE11YkdsbmFIUWdQU0JsTENCMGFHbHpMbXhwWjJoMExuVndaR0YwWlUxaGRISnBlRmR2Y214a0tDa3NJSFJvYVhNdWJXRjBjbWw0SUQwZ1pTNXRZWFJ5YVhoWGIzSnNaQ3dnZEdocGN5NXRZWFJ5YVhoQmRYUnZWWEJrWVhSbElEMGdJVEVzSUhSb2FYTXVZMjlzYjNJZ1BTQjBPd29nSUNBZ0lDQWdJR3hsZENCdUlEMGdibVYzSUY5bExDQnBJRDBnV3dvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFS0lDQWdJQ0FnSUNCZE93b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2J5QTlJREFzSUdFZ1BTQXhMQ0JzSUQwZ016STdJRzhnUENCc095QnZLeXNzSUdFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpJRDBnYnlBdklHd2dLaUJOWVhSb0xsQkpJQ29nTWl3Z2FDQTlJR0VnTHlCc0lDb2dUV0YwYUM1UVNTQXFJREk3Q2lBZ0lDQWdJQ0FnSUNBZ0lHa3VjSFZ6YUNoTllYUm9MbU52Y3loaktTd2dUV0YwYUM1emFXNG9ZeWtzSURFc0lFMWhkR2d1WTI5ektHZ3BMQ0JOWVhSb0xuTnBiaWhvS1N3Z01TazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJRzR1YzJWMFFYUjBjbWxpZFhSbEtDSndiM05wZEdsdmJpSXNJRzVsZHlCa1pTaHBMQ0F6S1NrN0NpQWdJQ0FnSUNBZ2JHVjBJSElnUFNCdVpYY2dablFvZXdvZ0lDQWdJQ0FnSUNBZ0lDQm1iMmM2SUNFeExBb2dJQ0FnSUNBZ0lDQWdJQ0IwYjI1bFRXRndjR1ZrT2lBaE1Rb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ0lDQWdJSFJvYVhNdVkyOXVaU0E5SUc1bGR5QjNkQ2h1TENCeUtTd2dkR2hwY3k1aFpHUW9kR2hwY3k1amIyNWxLU3dnZEdocGN5NTFjR1JoZEdVb0tUc0tJQ0FnSUgwS0lDQWdJR1JwYzNCdmMyVW9LU0I3Q2lBZ0lDQWdJQ0FnZEdocGN5NWpiMjVsTG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVqYjI1bExtMWhkR1Z5YVdGc0xtUnBjM0J2YzJVb0tUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBaMmgwTG5Wd1pHRjBaVTFoZEhKcGVGZHZjbXhrS0NrN0NpQWdJQ0FnSUNBZ2JHVjBJR1VnUFNCMGFHbHpMbXhwWjJoMExtUnBjM1JoYm1ObElEOGdkR2hwY3k1c2FXZG9kQzVrYVhOMFlXNWpaU0E2SURGbE15d2dkQ0E5SUdVZ0tpQk5ZWFJvTG5SaGJpaDBhR2x6TG14cFoyaDBMbUZ1WjJ4bEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG1OdmJtVXVjMk5oYkdVdWMyVjBLSFFzSUhRc0lHVXBMQ0JHWXk1elpYUkdjbTl0VFdGMGNtbDRVRzl6YVhScGIyNG9kR2hwY3k1c2FXZG9kQzUwWVhKblpYUXViV0YwY21sNFYyOXliR1FwTENCMGFHbHpMbU52Ym1VdWJHOXZhMEYwS0VaaktTd2dkR2hwY3k1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RHaHBjeTVqYjI1bExtMWhkR1Z5YVdGc0xtTnZiRzl5TG5ObGRDaDBhR2x6TG1OdmJHOXlLU0E2SUhSb2FYTXVZMjl1WlM1dFlYUmxjbWxoYkM1amIyeHZjaTVqYjNCNUtIUm9hWE11YkdsbmFIUXVZMjlzYjNJcE93b2dJQ0FnZlFwOUxDQjViaUE5SUc1bGR5Qk5MQ0JGY3lBOUlHNWxkeUJ3WlN3Z1VXOGdQU0J1WlhjZ2NHVXNJR1YxSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobEtYc0tJQ0FnSUNBZ0lDQnNaWFFnZENBOUlIUjFLR1VwTENCdUlEMGdibVYzSUY5bExDQnBJRDBnVzEwc0lISWdQU0JiWFN3Z2J5QTlJRzVsZHlCaFpTZ3dMQ0F3TENBeEtTd2dZU0E5SUc1bGR5QmhaU2d3TENBeExDQXdLVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR01nUFNBd095QmpJRHdnZEM1c1pXNW5kR2c3SUdNckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQm9JRDBnZEZ0alhUc0tJQ0FnSUNBZ0lDQWdJQ0FnYUM1d1lYSmxiblFnSmlZZ2FDNXdZWEpsYm5RdWFYTkNiMjVsSUNZbUlDaHBMbkIxYzJnb01Dd2dNQ3dnTUNrc0lHa3VjSFZ6YUNnd0xDQXdMQ0F3S1N3Z2NpNXdkWE5vS0c4dWNpd2dieTVuTENCdkxtSXBMQ0J5TG5CMWMyZ29ZUzV5TENCaExtY3NJR0V1WWlrcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnVMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2FTd2dNeWtwTENCdUxuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1pHVW9jaXdnTXlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFEyOXNiM0p6T2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFVaWE4wT2lBaE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnWkdWd2RHaFhjbWwwWlRvZ0lURXNDaUFnSUNBZ0lDQWdJQ0FnSUhSdmJtVk5ZWEJ3WldRNklDRXhMQW9nSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjM0JoY21WdWREb2dJVEFLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWh1TENCc0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVTJ0bGJHVjBiMjVJWld4d1pYSWlMQ0IwYUdsekxtbHpVMnRsYkdWMGIyNUlaV3h3WlhJZ1BTQWhNQ3dnZEdocGN5NXliMjkwSUQwZ1pTd2dkR2hwY3k1aWIyNWxjeUE5SUhRc0lIUm9hWE11YldGMGNtbDRJRDBnWlM1dFlYUnlhWGhYYjNKc1pDd2dkR2hwY3k1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURTdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1NCN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCMGFHbHpMbUp2Ym1WekxDQnVJRDBnZEdocGN5NW5aVzl0WlhSeWVTd2dhU0E5SUc0dVoyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlwT3dvZ0lDQWdJQ0FnSUZGdkxtTnZjSGtvZEdocGN5NXliMjkwTG0xaGRISnBlRmR2Y214a0tTNXBiblpsY25Rb0tUc0tJQ0FnSUNBZ0lDQm1iM0lvYkdWMElISWdQU0F3TENCdklEMGdNRHNnY2lBOElIUXViR1Z1WjNSb095QnlLeXNwZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWVNBOUlIUmJjbDA3Q2lBZ0lDQWdJQ0FnSUNBZ0lHRXVjR0Z5Wlc1MElDWW1JR0V1Y0dGeVpXNTBMbWx6UW05dVpTQW1KaUFvUlhNdWJYVnNkR2x3YkhsTllYUnlhV05sY3loUmJ5d2dZUzV0WVhSeWFYaFhiM0pzWkNrc0lIbHVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloRmN5a3NJR2t1YzJWMFdGbGFLRzhzSUhsdUxuZ3NJSGx1TG5rc0lIbHVMbm9wTENCRmN5NXRkV3gwYVhCc2VVMWhkSEpwWTJWektGRnZMQ0JoTG5CaGNtVnVkQzV0WVhSeWFYaFhiM0pzWkNrc0lIbHVMbk5sZEVaeWIyMU5ZWFJ5YVhoUWIzTnBkR2x2YmloRmN5a3NJR2t1YzJWMFdGbGFLRzhnS3lBeExDQjViaTU0TENCNWJpNTVMQ0I1Ymk1NktTd2dieUFyUFNBeUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiaTVuWlhSQmRIUnlhV0oxZEdVb0luQnZjMmwwYVc5dUlpa3VibVZsWkhOVmNHUmhkR1VnUFNBaE1Dd2djM1Z3WlhJdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb1pTazdDaUFnSUNCOUNuMDdDbVoxYm1OMGFXOXVJSFIxS0hNcElIc0tJQ0FnSUd4bGRDQmxJRDBnVzEwN0NpQWdJQ0J6SUNZbUlITXVhWE5DYjI1bElDWW1JR1V1Y0hWemFDaHpLVHNLSUNBZ0lHWnZjaWhzWlhRZ2RDQTlJREE3SUhRZ1BDQnpMbU5vYVd4a2NtVnVMbXhsYm1kMGFEc2dkQ3NyS1dVdWNIVnphQzVoY0hCc2VTaGxMQ0IwZFNoekxtTm9hV3hrY21WdVczUmRLU2s3Q2lBZ0lDQnlaWFIxY200Z1pUc0tmUXAyWVhJZ1Vua2dQU0JqYkdGemN5QmxlSFJsYm1SeklITjBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRc0lHNHBld29nSUNBZ0lDQWdJR3hsZENCcElEMGdibVYzSUVacEtIUXNJRFFzSURJcExDQnlJRDBnYm1WM0lHaHVLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2QybHlaV1p5WVcxbE9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ1ptOW5PaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2locExDQnlLVHNLSUNBZ0lDQWdJQ0IwYUdsekxteHBaMmgwSUQwZ1pTd2dkR2hwY3k1c2FXZG9kQzUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2dwTENCMGFHbHpMbU52Ykc5eUlEMGdiaXdnZEdocGN5NTBlWEJsSUQwZ0lsQnZhVzUwVEdsbmFIUklaV3h3WlhJaUxDQjBhR2x6TG0xaGRISnBlQ0E5SUhSb2FYTXViR2xuYUhRdWJXRjBjbWw0VjI5eWJHUXNJSFJvYVhNdWJXRjBjbWw0UVhWMGIxVndaR0YwWlNBOUlDRXhMQ0IwYUdsekxuVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1amIyeHZjaUFoUFQwZ2RtOXBaQ0F3SUQ4Z2RHaHBjeTV0WVhSbGNtbGhiQzVqYjJ4dmNpNXpaWFFvZEdocGN5NWpiMnh2Y2lrZ09pQjBhR2x6TG0xaGRHVnlhV0ZzTG1OdmJHOXlMbU52Y0hrb2RHaHBjeTVzYVdkb2RDNWpiMnh2Y2lrN0NpQWdJQ0I5Q24wc0lGQjVJRDBnYm1WM0lFMHNJRTVqSUQwZ2JtVjNJR0ZsTENCQ1l5QTlJRzVsZHlCaFpTd2dTWGtnUFNCamJHRnpjeUJsZUhSbGJtUnpJRTVsSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUXNJRzRwZXdvZ0lDQWdJQ0FnSUhOMWNHVnlLQ2s3Q2lBZ0lDQWdJQ0FnZEdocGN5NXNhV2RvZENBOUlHVXNJSFJvYVhNdWJHbG5hSFF1ZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvS1N3Z2RHaHBjeTV0WVhSeWFYZ2dQU0JsTG0xaGRISnBlRmR2Y214a0xDQjBhR2x6TG0xaGRISnBlRUYxZEc5VmNHUmhkR1VnUFNBaE1Td2dkR2hwY3k1amIyeHZjaUE5SUc0N0NpQWdJQ0FnSUNBZ2JHVjBJR2tnUFNCdVpYY2dTV2tvZENrN0NpQWdJQ0FnSUNBZ2FTNXliM1JoZEdWWktFMWhkR2d1VUVrZ0tpQXVOU2tzSUhSb2FYTXViV0YwWlhKcFlXd2dQU0J1WlhjZ2FHNG9ld29nSUNBZ0lDQWdJQ0FnSUNCM2FYSmxabkpoYldVNklDRXdMQW9nSUNBZ0lDQWdJQ0FnSUNCbWIyYzZJQ0V4TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcExDQjBhR2x6TG1OdmJHOXlJRDA5UFNCMmIybGtJREFnSmlZZ0tIUm9hWE11YldGMFpYSnBZV3d1ZG1WeWRHVjRRMjlzYjNKeklEMGdJVEFwT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnYVM1blpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaWtzSUc4Z1BTQnVaWGNnUm14dllYUXpNa0Z5Y21GNUtISXVZMjkxYm5RZ0tpQXpLVHNLSUNBZ0lDQWdJQ0JwTG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnVldVb2J5d2dNeWtwTENCMGFHbHpMbUZrWkNodVpYY2djM1FvYVN3Z2RHaHBjeTV0WVhSbGNtbGhiQ2twTENCMGFHbHpMblZ3WkdGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnWkdsemNHOXpaU2dwSUhzS0lDQWdJQ0FnSUNCMGFHbHpMbU5vYVd4a2NtVnVXekJkTG1kbGIyMWxkSEo1TG1ScGMzQnZjMlVvS1N3Z2RHaHBjeTVqYUdsc1pISmxibHN3WFM1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdiR1YwSUdVZ1BTQjBhR2x6TG1Ob2FXeGtjbVZ1V3pCZE93b2dJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTnZiRzl5SUNFOVBTQjJiMmxrSURBcElIUm9hWE11YldGMFpYSnBZV3d1WTI5c2IzSXVjMlYwS0hSb2FYTXVZMjlzYjNJcE93b2dJQ0FnSUNBZ0lHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZENBOUlHVXVaMlZ2YldWMGNua3VaMlYwUVhSMGNtbGlkWFJsS0NKamIyeHZjaUlwT3dvZ0lDQWdJQ0FnSUNBZ0lDQk9ZeTVqYjNCNUtIUm9hWE11YkdsbmFIUXVZMjlzYjNJcExDQkNZeTVqYjNCNUtIUm9hWE11YkdsbmFIUXVaM0p2ZFc1a1EyOXNiM0lwT3dvZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElHNGdQU0F3TENCcElEMGdkQzVqYjNWdWREc2diaUE4SUdrN0lHNHJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ2NpQTlJRzRnUENCcElDOGdNaUEvSUU1aklEb2dRbU03Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwTG5ObGRGaFpXaWh1TENCeUxuSXNJSEl1Wnl3Z2NpNWlLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0IwTG01bFpXUnpWWEJrWVhSbElEMGdJVEE3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdVdWJHOXZhMEYwS0ZCNUxuTmxkRVp5YjIxTllYUnlhWGhRYjNOcGRHbHZiaWgwYUdsekxteHBaMmgwTG0xaGRISnBlRmR2Y214a0tTNXVaV2RoZEdVb0tTazdDaUFnSUNCOUNuMHNJRzUxSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNVEFzSUhRZ1BTQXhNQ3dnYmlBOUlEUTBOek01TWpRc0lHa2dQU0E0T1RRM09EUTRLWHNLSUNBZ0lDQWdJQ0J1SUQwZ2JtVjNJR0ZsS0c0cExDQnBJRDBnYm1WM0lHRmxLR2twT3dvZ0lDQWdJQ0FnSUd4bGRDQnlJRDBnZENBdklESXNJRzhnUFNCbElDOGdkQ3dnWVNBOUlHVWdMeUF5TENCc0lEMGdXMTBzSUdNZ1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJR1FnUFNBd0xDQm1JRDBnTUN3Z2JTQTlJQzFoT3lCa0lEdzlJSFE3SUdRckt5d2diU0FyUFNCdktYc0tJQ0FnSUNBZ0lDQWdJQ0FnYkM1d2RYTm9LQzFoTENBd0xDQnRMQ0JoTENBd0xDQnRLU3dnYkM1d2RYTm9LRzBzSURBc0lDMWhMQ0J0TENBd0xDQmhLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSGdnUFNCa0lEMDlQU0J5SUQ4Z2JpQTZJR2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIZ3VkRzlCY25KaGVTaGpMQ0JtS1N3Z1ppQXJQU0F6TENCNExuUnZRWEp5WVhrb1l5d2daaWtzSUdZZ0t6MGdNeXdnZUM1MGIwRnljbUY1S0dNc0lHWXBMQ0JtSUNzOUlETXNJSGd1ZEc5QmNuSmhlU2hqTENCbUtTd2daaUFyUFNBek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnNaWFFnYUNBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCb0xuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvYkN3Z015a3BMQ0JvTG5ObGRFRjBkSEpwWW5WMFpTZ2lZMjlzYjNJaUxDQnVaWGNnWkdVb1l5d2dNeWtwT3dvZ0lDQWdJQ0FnSUd4bGRDQjFJRDBnYm1WM0lHWjBLSHNLSUNBZ0lDQWdJQ0FnSUNBZ2RtVnlkR1Y0UTI5c2IzSnpPaUFoTUN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUNBZ0lDQnpkWEJsY2lob0xDQjFLVHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVIzSnBaRWhsYkhCbGNpSTdDaUFnSUNCOUNuMHNJRVI1SUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNVEFzSUhRZ1BTQXhOaXdnYmlBOUlEZ3NJR2tnUFNBMk5Dd2djaUE5SURRME56TTVNalFzSUc4Z1BTQTRPVFEzT0RRNEtYc0tJQ0FnSUNBZ0lDQnlJRDBnYm1WM0lHRmxLSElwTENCdklEMGdibVYzSUdGbEtHOHBPd29nSUNBZ0lDQWdJR3hsZENCaElEMGdXMTBzSUd3Z1BTQmJYVHNLSUNBZ0lDQWdJQ0JtYjNJb2JHVjBJSFVnUFNBd095QjFJRHc5SUhRN0lIVXJLeWw3Q2lBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JrSUQwZ2RTQXZJSFFnS2lBb1RXRjBhQzVRU1NBcUlESXBMQ0JtSUQwZ1RXRjBhQzV6YVc0b1pDa2dLaUJsTENCdElEMGdUV0YwYUM1amIzTW9aQ2tnS2lCbE93b2dJQ0FnSUNBZ0lDQWdJQ0JoTG5CMWMyZ29NQ3dnTUN3Z01Da3NJR0V1Y0hWemFDaG1MQ0F3TENCdEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIZ2dQU0IxSUNZZ01TQS9JSElnT2lCdk93b2dJQ0FnSUNBZ0lDQWdJQ0JzTG5CMWMyZ29lQzV5TENCNExtY3NJSGd1WWlrc0lHd3VjSFZ6YUNoNExuSXNJSGd1Wnl3Z2VDNWlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm05eUtHeGxkQ0IxTVNBOUlEQTdJSFV4SUR3OUlHNDdJSFV4S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1pERWdQU0IxTVNBbUlERWdQeUJ5SURvZ2J5d2daakVnUFNCbElDMGdaU0F2SUc0Z0tpQjFNVHNLSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCdE1TQTlJREE3SUcweElEd2dhVHNnYlRFckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZURFZ1BTQnRNU0F2SUdrZ0tpQW9UV0YwYUM1UVNTQXFJRElwTENCMklEMGdUV0YwYUM1emFXNG9lREVwSUNvZ1pqRXNJR2NnUFNCTllYUm9MbU52Y3loNE1Ta2dLaUJtTVRzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdFdWNIVnphQ2gyTENBd0xDQm5LU3dnYkM1d2RYTm9LR1F4TG5Jc0lHUXhMbWNzSUdReExtSXBMQ0I0TVNBOUlDaHRNU0FySURFcElDOGdhU0FxSUNoTllYUm9MbEJKSUNvZ01pa3NJSFlnUFNCTllYUm9Mbk5wYmloNE1Ta2dLaUJtTVN3Z1p5QTlJRTFoZEdndVkyOXpLSGd4S1NBcUlHWXhMQ0JoTG5CMWMyZ29kaXdnTUN3Z1p5a3NJR3d1Y0hWemFDaGtNUzV5TENCa01TNW5MQ0JrTVM1aUtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCc1pYUWdZeUE5SUc1bGR5QmZaVHNLSUNBZ0lDQWdJQ0JqTG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9ZU3dnTXlrcExDQmpMbk5sZEVGMGRISnBZblYwWlNnaVkyOXNiM0lpTENCdVpYY2daR1VvYkN3Z015a3BPd29nSUNBZ0lDQWdJR3hsZENCb0lEMGdibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnZG1WeWRHVjRRMjlzYjNKek9pQWhNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ2RHOXVaVTFoY0hCbFpEb2dJVEVLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCemRYQmxjaWhqTENCb0tUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUc5c1lYSkhjbWxrU0dWc2NHVnlJanNLSUNBZ0lIMEtmU3dnZW1NZ1BTQnVaWGNnVFN3Z1FYTWdQU0J1WlhjZ1RTd2dWV01nUFNCdVpYY2dUU3dnUm5rZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUU1bElIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFzSUc0cGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVdkb2RDQTlJR1VzSUhSb2FYTXViR2xuYUhRdWRYQmtZWFJsVFdGMGNtbDRWMjl5YkdRb0tTd2dkR2hwY3k1dFlYUnlhWGdnUFNCbExtMWhkSEpwZUZkdmNteGtMQ0IwYUdsekxtMWhkSEpwZUVGMWRHOVZjR1JoZEdVZ1BTQWhNU3dnZEdocGN5NWpiMnh2Y2lBOUlHNHNJSFFnUFQwOUlIWnZhV1FnTUNBbUppQW9kQ0E5SURFcE93b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJRjlsT3dvZ0lDQWdJQ0FnSUdrdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QmtaU2hiQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTBMQW9nSUNBZ0lDQWdJQ0FnSUNCMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBMQW9nSUNBZ0lDQWdJQ0FnSUNCMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQjBMQW9nSUNBZ0lDQWdJQ0FnSUNBdGRDd0tJQ0FnSUNBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBZ0lDQWdMWFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMTBMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F0ZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lGMHNJRE1wS1RzS0lDQWdJQ0FnSUNCc1pYUWdjaUE5SUc1bGR5Qm1kQ2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lHWnZaem9nSVRFc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndaV1E2SUNFeENpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNBZ0lDQWdkR2hwY3k1c2FXZG9kRkJzWVc1bElEMGdibVYzSUc5dUtHa3NJSElwTENCMGFHbHpMbUZrWkNoMGFHbHpMbXhwWjJoMFVHeGhibVVwTENCcElEMGdibVYzSUY5bExDQnBMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeENpQWdJQ0FnSUNBZ1hTd2dNeWtwTENCMGFHbHpMblJoY21kbGRFeHBibVVnUFNCdVpYY2diMjRvYVN3Z2Npa3NJSFJvYVhNdVlXUmtLSFJvYVhNdWRHRnlaMlYwVEdsdVpTa3NJSFJvYVhNdWRYQmtZWFJsS0NrN0NpQWdJQ0I5Q2lBZ0lDQmthWE53YjNObEtDa2dld29nSUNBZ0lDQWdJSFJvYVhNdWJHbG5hSFJRYkdGdVpTNW5aVzl0WlhSeWVTNWthWE53YjNObEtDa3NJSFJvYVhNdWJHbG5hSFJRYkdGdVpTNXRZWFJsY21saGJDNWthWE53YjNObEtDa3NJSFJvYVhNdWRHRnlaMlYwVEdsdVpTNW5aVzl0WlhSeWVTNWthWE53YjNObEtDa3NJSFJvYVhNdWRHRnlaMlYwVEdsdVpTNXRZWFJsY21saGJDNWthWE53YjNObEtDazdDaUFnSUNCOUNpQWdJQ0IxY0dSaGRHVW9LU0I3Q2lBZ0lDQWdJQ0FnZW1NdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLSFJvYVhNdWJHbG5hSFF1YldGMGNtbDRWMjl5YkdRcExDQkJjeTV6WlhSR2NtOXRUV0YwY21sNFVHOXphWFJwYjI0b2RHaHBjeTVzYVdkb2RDNTBZWEpuWlhRdWJXRjBjbWw0VjI5eWJHUXBMQ0JWWXk1emRXSldaV04wYjNKektFRnpMQ0I2WXlrc0lIUm9hWE11YkdsbmFIUlFiR0Z1WlM1c2IyOXJRWFFvUVhNcExDQjBhR2x6TG1OdmJHOXlJQ0U5UFNCMmIybGtJREFnUHlBb2RHaHBjeTVzYVdkb2RGQnNZVzVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbk5sZENoMGFHbHpMbU52Ykc5eUtTd2dkR2hwY3k1MFlYSm5aWFJNYVc1bExtMWhkR1Z5YVdGc0xtTnZiRzl5TG5ObGRDaDBhR2x6TG1OdmJHOXlLU2tnT2lBb2RHaHBjeTVzYVdkb2RGQnNZVzVsTG0xaGRHVnlhV0ZzTG1OdmJHOXlMbU52Y0hrb2RHaHBjeTVzYVdkb2RDNWpiMnh2Y2lrc0lIUm9hWE11ZEdGeVoyVjBUR2x1WlM1dFlYUmxjbWxoYkM1amIyeHZjaTVqYjNCNUtIUm9hWE11YkdsbmFIUXVZMjlzYjNJcEtTd2dkR2hwY3k1MFlYSm5aWFJNYVc1bExteHZiMnRCZENoQmN5a3NJSFJvYVhNdWRHRnlaMlYwVEdsdVpTNXpZMkZzWlM1NklEMGdWV011YkdWdVozUm9LQ2s3Q2lBZ0lDQjlDbjBzSUVOeklEMGdibVYzSUUwc0lGRmxJRDBnYm1WM0lFbHlMQ0JPZVNBOUlHTnNZWE56SUdWNGRHVnVaSE1nZDNRZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb1pTbDdDaUFnSUNBZ0lDQWdiR1YwSUhRZ1BTQnVaWGNnWDJVc0lHNGdQU0J1WlhjZ1puUW9ld29nSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nTVRZM056Y3lNVFVzQ2lBZ0lDQWdJQ0FnSUNBZ0lIWmxjblJsZUVOdmJHOXljem9nSVRBc0NpQWdJQ0FnSUNBZ0lDQWdJSFJ2Ym1WTllYQndaV1E2SUNFeENpQWdJQ0FnSUNBZ2ZTa3NJR2tnUFNCYlhTd2djaUE5SUZ0ZExDQnZJRDBnZTMwc0lHRWdQU0J1WlhjZ1lXVW9NVFkzTlRVeU1EQXBMQ0JzSUQwZ2JtVjNJR0ZsS0RFMk56RXhOamd3S1N3Z1l5QTlJRzVsZHlCaFpTZzBNemMzTlNrc0lHZ2dQU0J1WlhjZ1lXVW9NVFkzTnpjeU1UVXBMQ0IxSUQwZ2JtVjNJR0ZsS0RNek5UVTBORE1wT3dvZ0lDQWdJQ0FnSUdRb0ltNHhJaXdnSW00eUlpd2dZU2tzSUdRb0ltNHlJaXdnSW00MElpd2dZU2tzSUdRb0ltNDBJaXdnSW00eklpd2dZU2tzSUdRb0ltNHpJaXdnSW00eElpd2dZU2tzSUdRb0ltWXhJaXdnSW1ZeUlpd2dZU2tzSUdRb0ltWXlJaXdnSW1ZMElpd2dZU2tzSUdRb0ltWTBJaXdnSW1Zeklpd2dZU2tzSUdRb0ltWXpJaXdnSW1ZeElpd2dZU2tzSUdRb0ltNHhJaXdnSW1ZeElpd2dZU2tzSUdRb0ltNHlJaXdnSW1ZeUlpd2dZU2tzSUdRb0ltNHpJaXdnSW1Zeklpd2dZU2tzSUdRb0ltNDBJaXdnSW1ZMElpd2dZU2tzSUdRb0luQWlMQ0FpYmpFaUxDQnNLU3dnWkNnaWNDSXNJQ0p1TWlJc0lHd3BMQ0JrS0NKd0lpd2dJbTR6SWl3Z2JDa3NJR1FvSW5BaUxDQWlialFpTENCc0tTd2daQ2dpZFRFaUxDQWlkVElpTENCaktTd2daQ2dpZFRJaUxDQWlkVE1pTENCaktTd2daQ2dpZFRNaUxDQWlkVEVpTENCaktTd2daQ2dpWXlJc0lDSjBJaXdnYUNrc0lHUW9JbkFpTENBaVl5SXNJSFVwTENCa0tDSmpiakVpTENBaVkyNHlJaXdnZFNrc0lHUW9JbU51TXlJc0lDSmpialFpTENCMUtTd2daQ2dpWTJZeElpd2dJbU5tTWlJc0lIVXBMQ0JrS0NKalpqTWlMQ0FpWTJZMElpd2dkU2s3Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnWkNodExDQjRMQ0IyS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR1lvYlN3Z2Rpa3NJR1lvZUN3Z2RpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR1oxYm1OMGFXOXVJR1lvYlN3Z2VDa2dld29nSUNBZ0lDQWdJQ0FnSUNCcExuQjFjMmdvTUN3Z01Dd2dNQ2tzSUhJdWNIVnphQ2g0TG5Jc0lIZ3VaeXdnZUM1aUtTd2diMXR0WFNBOVBUMGdkbTlwWkNBd0lDWW1JQ2h2VzIxZElEMGdXMTBwTENCdlcyMWRMbkIxYzJnb2FTNXNaVzVuZEdnZ0x5QXpJQzBnTVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIUXVjMlYwUVhSMGNtbGlkWFJsS0NKd2IzTnBkR2x2YmlJc0lHNWxkeUJrWlNocExDQXpLU2tzSUhRdWMyVjBRWFIwY21saWRYUmxLQ0pqYjJ4dmNpSXNJRzVsZHlCa1pTaHlMQ0F6S1NrN0NpQWdJQ0FnSUNBZ2MzVndaWElvZEN3Z2JpazdDaUFnSUNBZ0lDQWdkR2hwY3k1MGVYQmxJRDBnSWtOaGJXVnlZVWhsYkhCbGNpSXNJSFJvYVhNdVkyRnRaWEpoSUQwZ1pTd2dkR2hwY3k1allXMWxjbUV1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDQW1KaUIwYUdsekxtTmhiV1Z5WVM1MWNHUmhkR1ZRY205cVpXTjBhVzl1VFdGMGNtbDRLQ2tzSUhSb2FYTXViV0YwY21sNElEMGdaUzV0WVhSeWFYaFhiM0pzWkN3Z2RHaHBjeTV0WVhSeWFYaEJkWFJ2VlhCa1lYUmxJRDBnSVRFc0lIUm9hWE11Y0c5cGJuUk5ZWEFnUFNCdkxDQjBhR2x6TG5Wd1pHRjBaU2dwT3dvZ0lDQWdmUW9nSUNBZ2RYQmtZWFJsS0NrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JsSUQwZ2RHaHBjeTVuWlc5dFpYUnllU3dnZENBOUlIUm9hWE11Y0c5cGJuUk5ZWEFzSUc0Z1BTQXhMQ0JwSUQwZ01Uc0tJQ0FnSUNBZ0lDQlJaUzV3Y205cVpXTjBhVzl1VFdGMGNtbDRTVzUyWlhKelpTNWpiM0I1S0hSb2FYTXVZMkZ0WlhKaExuQnliMnBsWTNScGIyNU5ZWFJ5YVhoSmJuWmxjbk5sS1N3Z1pYUW9JbU1pTENCMExDQmxMQ0JSWlN3Z01Dd2dNQ3dnTFRFcExDQmxkQ2dpZENJc0lIUXNJR1VzSUZGbExDQXdMQ0F3TENBeEtTd2daWFFvSW00eElpd2dkQ3dnWlN3Z1VXVXNJQzF1TENBdGFTd2dMVEVwTENCbGRDZ2liaklpTENCMExDQmxMQ0JSWlN3Z2Jpd2dMV2tzSUMweEtTd2daWFFvSW00eklpd2dkQ3dnWlN3Z1VXVXNJQzF1TENCcExDQXRNU2tzSUdWMEtDSnVOQ0lzSUhRc0lHVXNJRkZsTENCdUxDQnBMQ0F0TVNrc0lHVjBLQ0ptTVNJc0lIUXNJR1VzSUZGbExDQXRiaXdnTFdrc0lERXBMQ0JsZENnaVpqSWlMQ0IwTENCbExDQlJaU3dnYml3Z0xXa3NJREVwTENCbGRDZ2laak1pTENCMExDQmxMQ0JSWlN3Z0xXNHNJR2tzSURFcExDQmxkQ2dpWmpRaUxDQjBMQ0JsTENCUlpTd2diaXdnYVN3Z01Ta3NJR1YwS0NKMU1TSXNJSFFzSUdVc0lGRmxMQ0J1SUNvZ0xqY3NJR2tnS2lBeExqRXNJQzB4S1N3Z1pYUW9JblV5SWl3Z2RDd2daU3dnVVdVc0lDMXVJQ29nTGpjc0lHa2dLaUF4TGpFc0lDMHhLU3dnWlhRb0luVXpJaXdnZEN3Z1pTd2dVV1VzSURBc0lHa2dLaUF5TENBdE1Ta3NJR1YwS0NKalpqRWlMQ0IwTENCbExDQlJaU3dnTFc0c0lEQXNJREVwTENCbGRDZ2lZMll5SWl3Z2RDd2daU3dnVVdVc0lHNHNJREFzSURFcExDQmxkQ2dpWTJZeklpd2dkQ3dnWlN3Z1VXVXNJREFzSUMxcExDQXhLU3dnWlhRb0ltTm1OQ0lzSUhRc0lHVXNJRkZsTENBd0xDQnBMQ0F4S1N3Z1pYUW9JbU51TVNJc0lIUXNJR1VzSUZGbExDQXRiaXdnTUN3Z0xURXBMQ0JsZENnaVkyNHlJaXdnZEN3Z1pTd2dVV1VzSUc0c0lEQXNJQzB4S1N3Z1pYUW9JbU51TXlJc0lIUXNJR1VzSUZGbExDQXdMQ0F0YVN3Z0xURXBMQ0JsZENnaVkyNDBJaXdnZEN3Z1pTd2dVV1VzSURBc0lHa3NJQzB4S1N3Z1pTNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrdWJtVmxaSE5WY0dSaGRHVWdQU0FoTURzS0lDQWdJSDBLSUNBZ0lHUnBjM0J2YzJVb0tTQjdDaUFnSUNBZ0lDQWdkR2hwY3k1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0Nrc0lIUm9hWE11YldGMFpYSnBZV3d1WkdsemNHOXpaU2dwT3dvZ0lDQWdmUXA5T3dwbWRXNWpkR2x2YmlCbGRDaHpMQ0JsTENCMExDQnVMQ0JwTENCeUxDQnZLU0I3Q2lBZ0lDQkRjeTV6WlhRb2FTd2djaXdnYnlrdWRXNXdjbTlxWldOMEtHNHBPd29nSUNBZ2JHVjBJR0VnUFNCbFczTmRPd29nSUNBZ2FXWWdLR0VnSVQwOUlIWnZhV1FnTUNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JzSUQwZ2RDNW5aWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWlrN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCaklEMGdNQ3dnYUNBOUlHRXViR1Z1WjNSb095QmpJRHdnYURzZ1l5c3JLV3d1YzJWMFdGbGFLR0ZiWTEwc0lFTnpMbmdzSUVOekxua3NJRU56TG5vcE93b2dJQ0FnZlFwOUNuWmhjaUJNY3lBOUlHNWxkeUJNZEN3Z2FYVWdQU0JqYkdGemN5QmxlSFJsYm1SeklIZDBJSHNLSUNBZ0lHTnZibk4wY25WamRHOXlLR1VzSUhRZ1BTQXhOamMzTmprMk1DbDdDaUFnSUNBZ0lDQWdiR1YwSUc0Z1BTQnVaWGNnVldsdWRERTJRWEp5WVhrb1d3b2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBM0xBb2dJQ0FnSUNBZ0lDQWdJQ0EwTEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQTFMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0EyTEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBM0NpQWdJQ0FnSUNBZ1hTa3NJR2tnUFNCdVpYY2dSbXh2WVhRek1rRnljbUY1S0RnZ0tpQXpLU3dnY2lBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCeUxuTmxkRWx1WkdWNEtHNWxkeUJWWlNodUxDQXhLU2tzSUhJdWMyVjBRWFIwY21saWRYUmxLQ0p3YjNOcGRHbHZiaUlzSUc1bGR5QlZaU2hwTENBektTazdDaUFnSUNBZ0lDQWdjM1Z3WlhJb2Npd2dibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJSFFzQ2lBZ0lDQWdJQ0FnSUNBZ0lIUnZibVZOWVhCd1pXUTZJQ0V4Q2lBZ0lDQWdJQ0FnZlNrcE93b2dJQ0FnSUNBZ0lIUm9hWE11YjJKcVpXTjBJRDBnWlN3Z2RHaHBjeTUwZVhCbElEMGdJa0p2ZUVobGJIQmxjaUlzSUhSb2FYTXViV0YwY21sNFFYVjBiMVZ3WkdGMFpTQTlJQ0V4TENCMGFHbHpMblZ3WkdGMFpTZ3BPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxLR1VwSUhzS0lDQWdJQ0FnSUNCcFppQW9aU0FoUFQwZ2RtOXBaQ0F3SUNZbUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVRbTk0U0dWc2NHVnlPaUF1ZFhCa1lYUmxLQ2tnYUdGeklHNXZJR3h2Ym1kbGNpQmhjbWQxYldWdWRITXVJaWtzSUhSb2FYTXViMkpxWldOMElDRTlQU0IyYjJsa0lEQWdKaVlnVEhNdWMyVjBSbkp2YlU5aWFtVmpkQ2gwYUdsekxtOWlhbVZqZENrc0lFeHpMbWx6Ulcxd2RIa29LU2tnY21WMGRYSnVPd29nSUNBZ0lDQWdJR3hsZENCMElEMGdUSE11YldsdUxDQnVJRDBnVEhNdWJXRjRMQ0JwSUQwZ2RHaHBjeTVuWlc5dFpYUnllUzVoZEhSeWFXSjFkR1Z6TG5CdmMybDBhVzl1TENCeUlEMGdhUzVoY25KaGVUc0tJQ0FnSUNBZ0lDQnlXekJkSUQwZ2JpNTRMQ0J5V3pGZElEMGdiaTU1TENCeVd6SmRJRDBnYmk1NkxDQnlXek5kSUQwZ2RDNTRMQ0J5V3pSZElEMGdiaTU1TENCeVd6VmRJRDBnYmk1NkxDQnlXelpkSUQwZ2RDNTRMQ0J5V3pkZElEMGdkQzU1TENCeVd6aGRJRDBnYmk1NkxDQnlXemxkSUQwZ2JpNTRMQ0J5V3pFd1hTQTlJSFF1ZVN3Z2Nsc3hNVjBnUFNCdUxub3NJSEpiTVRKZElEMGdiaTU0TENCeVd6RXpYU0E5SUc0dWVTd2djbHN4TkYwZ1BTQjBMbm9zSUhKYk1UVmRJRDBnZEM1NExDQnlXekUyWFNBOUlHNHVlU3dnY2xzeE4xMGdQU0IwTG5vc0lISmJNVGhkSUQwZ2RDNTRMQ0J5V3pFNVhTQTlJSFF1ZVN3Z2Nsc3lNRjBnUFNCMExub3NJSEpiTWpGZElEMGdiaTU0TENCeVd6SXlYU0E5SUhRdWVTd2djbHN5TTEwZ1BTQjBMbm9zSUdrdWJtVmxaSE5WY0dSaGRHVWdQU0FoTUN3Z2RHaHBjeTVuWlc5dFpYUnllUzVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tUc0tJQ0FnSUgwS0lDQWdJSE5sZEVaeWIyMVBZbXBsWTNRb1pTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG05aWFtVmpkQ0E5SUdVc0lIUm9hWE11ZFhCa1lYUmxLQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkM1F1Y0hKdmRHOTBlWEJsTG1OdmNIa3VZMkZzYkNoMGFHbHpMQ0JsS1N3Z2RHaHBjeTV2WW1wbFkzUWdQU0JsTG05aWFtVmpkQ3dnZEdocGN6c0tJQ0FnSUgwS2ZTd2dRbmtnUFNCamJHRnpjeUJsZUhSbGJtUnpJSGQwSUhzS0lDQWdJR052Ym5OMGNuVmpkRzl5S0dVc0lIUWdQU0F4TmpjM05qazJNQ2w3Q2lBZ0lDQWdJQ0FnYkdWMElHNGdQU0J1WlhjZ1ZXbHVkREUyUVhKeVlYa29Xd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lDQWdJQ0F5TEFvZ0lDQWdJQ0FnSUNBZ0lDQXpMQW9nSUNBZ0lDQWdJQ0FnSUNBekxBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBMUxBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQTJMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0EzTEFvZ0lDQWdJQ0FnSUNBZ0lDQTNMQW9nSUNBZ0lDQWdJQ0FnSUNBMExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQTBMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0ExTEFvZ0lDQWdJQ0FnSUNBZ0lDQXlMQW9nSUNBZ0lDQWdJQ0FnSUNBMkxBb2dJQ0FnSUNBZ0lDQWdJQ0F6TEFvZ0lDQWdJQ0FnSUNBZ0lDQTNDaUFnSUNBZ0lDQWdYU2tzSUdrZ1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVLSUNBZ0lDQWdJQ0JkTENCeUlEMGdibVYzSUY5bE93b2dJQ0FnSUNBZ0lISXVjMlYwU1c1a1pYZ29ibVYzSUZWbEtHNHNJREVwS1N3Z2NpNXpaWFJCZEhSeWFXSjFkR1VvSW5CdmMybDBhVzl1SWl3Z2JtVjNJR1JsS0drc0lETXBLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHlMQ0J1WlhjZ1puUW9ld29nSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nZEN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtTazdDaUFnSUNBZ0lDQWdkR2hwY3k1aWIzZ2dQU0JsTENCMGFHbHpMblI1Y0dVZ1BTQWlRbTk0TTBobGJIQmxjaUlzSUhSb2FYTXVaMlZ2YldWMGNua3VZMjl0Y0hWMFpVSnZkVzVrYVc1blUzQm9aWEpsS0NrN0NpQWdJQ0I5Q2lBZ0lDQjFjR1JoZEdWTllYUnlhWGhYYjNKc1pDaGxLU0I3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0IwYUdsekxtSnZlRHNLSUNBZ0lDQWdJQ0IwTG1selJXMXdkSGtvS1NCOGZDQW9kQzVuWlhSRFpXNTBaWElvZEdocGN5NXdiM05wZEdsdmJpa3NJSFF1WjJWMFUybDZaU2gwYUdsekxuTmpZV3hsS1N3Z2RHaHBjeTV6WTJGc1pTNXRkV3gwYVhCc2VWTmpZV3hoY2lndU5Ta3NJSE4xY0dWeUxuVndaR0YwWlUxaGRISnBlRmR2Y214a0tHVXBLVHNLSUNBZ0lIMEtmU3dnZW5rZ1BTQmpiR0Z6Y3lCbGVIUmxibVJ6SUc5dUlIc0tJQ0FnSUdOdmJuTjBjblZqZEc5eUtHVXNJSFFnUFNBeExDQnVJRDBnTVRZM056WTVOakFwZXdvZ0lDQWdJQ0FnSUd4bGRDQnBJRDBnYml3Z2NpQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTFRFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F0TVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lERXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXhMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdYU3dnYnlBOUlHNWxkeUJmWlRzS0lDQWdJQ0FnSUNCdkxuTmxkRUYwZEhKcFluVjBaU2dpY0c5emFYUnBiMjRpTENCdVpYY2daR1VvY2l3Z015a3BMQ0J2TG1OdmJYQjFkR1ZDYjNWdVpHbHVaMU53YUdWeVpTZ3BPd29nSUNBZ0lDQWdJSE4xY0dWeUtHOHNJRzVsZHlCbWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5SNWNHVWdQU0FpVUd4aGJtVklaV3h3WlhJaUxDQjBhR2x6TG5Cc1lXNWxJRDBnWlN3Z2RHaHBjeTV6YVhwbElEMGdkRHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTQTlJRnNLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ0xURXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBdE1Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdMVEVzQ2lBZ0lDQWdJQ0FnSUNBZ0lDMHhMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXRNU3dLSUNBZ0lDQWdJQ0FnSUNBZ01Rb2dJQ0FnSUNBZ0lGMHNJR3dnUFNCdVpYY2dYMlU3Q2lBZ0lDQWdJQ0FnYkM1elpYUkJkSFJ5YVdKMWRHVW9JbkJ2YzJsMGFXOXVJaXdnYm1WM0lHUmxLR0VzSURNcEtTd2diQzVqYjIxd2RYUmxRbTkxYm1ScGJtZFRjR2hsY21Vb0tTd2dkR2hwY3k1aFpHUW9ibVYzSUhOMEtHd3NJRzVsZHlCb2JpaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQnZjR0ZqYVhSNU9pQXVNaXdLSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUTZJQ0V3TEFvZ0lDQWdJQ0FnSUNBZ0lDQmtaWEIwYUZkeWFYUmxPaUFoTVN3S0lDQWdJQ0FnSUNBZ0lDQWdkRzl1WlUxaGNIQmxaRG9nSVRFS0lDQWdJQ0FnSUNCOUtTa3BPd29nSUNBZ2ZRb2dJQ0FnZFhCa1lYUmxUV0YwY21sNFYyOXliR1FvWlNrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0IwSUQwZ0xYUm9hWE11Y0d4aGJtVXVZMjl1YzNSaGJuUTdDaUFnSUNBZ0lDQWdUV0YwYUM1aFluTW9kQ2tnUENBeFpTMDRJQ1ltSUNoMElEMGdNV1V0T0Nrc0lIUm9hWE11YzJOaGJHVXVjMlYwS0M0MUlDb2dkR2hwY3k1emFYcGxMQ0F1TlNBcUlIUm9hWE11YzJsNlpTd2dkQ2tzSUhSb2FYTXVZMmhwYkdSeVpXNWJNRjB1YldGMFpYSnBZV3d1YzJsa1pTQTlJSFFnUENBd0lEOGdhWFFnT2lCQmFTd2dkR2hwY3k1c2IyOXJRWFFvZEdocGN5NXdiR0Z1WlM1dWIzSnRZV3dwTENCemRYQmxjaTUxY0dSaGRHVk5ZWFJ5YVhoWGIzSnNaQ2hsS1RzS0lDQWdJSDBLZlN3Z1QyTWdQU0J1WlhjZ1RTd2dVbk1zSUV0dkxDQlZlU0E5SUdOc1lYTnpJR1Y0ZEdWdVpITWdUbVVnZXdvZ0lDQWdZMjl1YzNSeWRXTjBiM0lvWlNBOUlHNWxkeUJOS0RBc0lEQXNJREVwTENCMElEMGdibVYzSUUwb01Dd2dNQ3dnTUNrc0lHNGdQU0F4TENCcElEMGdNVFkzTnpZNU5qQXNJSElnUFNCdUlDb2dMaklzSUc4Z1BTQnlJQ29nTGpJcGV3b2dJQ0FnSUNBZ0lITjFjR1Z5S0NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTUwZVhCbElEMGdJa0Z5Y205M1NHVnNjR1Z5SWl3Z1VuTWdQVDA5SUhadmFXUWdNQ0FtSmlBb1VuTWdQU0J1WlhjZ1gyVXNJRkp6TG5ObGRFRjBkSEpwWW5WMFpTZ2ljRzl6YVhScGIyNGlMQ0J1WlhjZ1pHVW9Xd29nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDQWdJQ0F4TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdDaUFnSUNBZ0lDQWdYU3dnTXlrcExDQkxieUE5SUc1bGR5QktiaWd3TENBdU5Td2dNU3dnTlN3Z01Ta3NJRXR2TG5SeVlXNXpiR0YwWlNnd0xDQXRMalVzSURBcEtTd2dkR2hwY3k1d2IzTnBkR2x2Ymk1amIzQjVLSFFwTENCMGFHbHpMbXhwYm1VZ1BTQnVaWGNnYjI0b1VuTXNJRzVsZHlCbWRDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUJwTEFvZ0lDQWdJQ0FnSUNBZ0lDQjBiMjVsVFdGd2NHVmtPaUFoTVFvZ0lDQWdJQ0FnSUgwcEtTd2dkR2hwY3k1c2FXNWxMbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0FoTVN3Z2RHaHBjeTVoWkdRb2RHaHBjeTVzYVc1bEtTd2dkR2hwY3k1amIyNWxJRDBnYm1WM0lITjBLRXR2TENCdVpYY2dhRzRvZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ2FTd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLU2tzSUhSb2FYTXVZMjl1WlM1dFlYUnlhWGhCZFhSdlZYQmtZWFJsSUQwZ0lURXNJSFJvYVhNdVlXUmtLSFJvYVhNdVkyOXVaU2tzSUhSb2FYTXVjMlYwUkdseVpXTjBhVzl1S0dVcExDQjBhR2x6TG5ObGRFeGxibWQwYUNodUxDQnlMQ0J2S1RzS0lDQWdJSDBLSUNBZ0lITmxkRVJwY21WamRHbHZiaWhsS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLR1V1ZVNBK0lDNDVPVGs1T1NrZ2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5ObGRDZ3dMQ0F3TENBd0xDQXhLVHNLSUNBZ0lDQWdJQ0JsYkhObElHbG1JQ2hsTG5rZ1BDQXRMams1T1RrNUtTQjBhR2x6TG5GMVlYUmxjbTVwYjI0dWMyVjBLREVzSURBc0lEQXNJREFwT3dvZ0lDQWdJQ0FnSUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCUFl5NXpaWFFvWlM1NkxDQXdMQ0F0WlM1NEtTNXViM0p0WVd4cGVtVW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCTllYUm9MbUZqYjNNb1pTNTVLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV4ZFdGMFpYSnVhVzl1TG5ObGRFWnliMjFCZUdselFXNW5iR1VvVDJNc0lIUXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtJQ0FnSUhObGRFeGxibWQwYUNobExDQjBJRDBnWlNBcUlDNHlMQ0J1SUQwZ2RDQXFJQzR5S1NCN0NpQWdJQ0FnSUNBZ2RHaHBjeTVzYVc1bExuTmpZV3hsTG5ObGRDZ3hMQ0JOWVhSb0xtMWhlQ2d4WlMwMExDQmxJQzBnZENrc0lERXBMQ0IwYUdsekxteHBibVV1ZFhCa1lYUmxUV0YwY21sNEtDa3NJSFJvYVhNdVkyOXVaUzV6WTJGc1pTNXpaWFFvYml3Z2RDd2diaWtzSUhSb2FYTXVZMjl1WlM1d2IzTnBkR2x2Ymk1NUlEMGdaU3dnZEdocGN5NWpiMjVsTG5Wd1pHRjBaVTFoZEhKcGVDZ3BPd29nSUNBZ2ZRb2dJQ0FnYzJWMFEyOXNiM0lvWlNrZ2V3b2dJQ0FnSUNBZ0lIUm9hWE11YkdsdVpTNXRZWFJsY21saGJDNWpiMnh2Y2k1elpYUW9aU2tzSUhSb2FYTXVZMjl1WlM1dFlYUmxjbWxoYkM1amIyeHZjaTV6WlhRb1pTazdDaUFnSUNCOUNpQWdJQ0JqYjNCNUtHVXBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjM1Z3WlhJdVkyOXdlU2hsTENBaE1Ta3NJSFJvYVhNdWJHbHVaUzVqYjNCNUtHVXViR2x1WlNrc0lIUm9hWE11WTI5dVpTNWpiM0I1S0dVdVkyOXVaU2tzSUhSb2FYTTdDaUFnSUNCOUNuMHNJSEoxSUQwZ1kyeGhjM01nWlhoMFpXNWtjeUIzZENCN0NpQWdJQ0JqYjI1emRISjFZM1J2Y2lobElEMGdNU2w3Q2lBZ0lDQWdJQ0FnYkdWMElIUWdQU0JiQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lHVXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUdVc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJR1VLSUNBZ0lDQWdJQ0JkTENCdUlEMGdXd29nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQ0FnSUNBeExBb2dJQ0FnSUNBZ0lDQWdJQ0F1Tml3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQWdJQ0FnTVN3S0lDQWdJQ0FnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0xqWXNDaUFnSUNBZ0lDQWdJQ0FnSURFc0NpQWdJQ0FnSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ0lDQWdJREVzQ2lBZ0lDQWdJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdJQ0FnSUM0MkxBb2dJQ0FnSUNBZ0lDQWdJQ0F4Q2lBZ0lDQWdJQ0FnWFN3Z2FTQTlJRzVsZHlCZlpUc0tJQ0FnSUNBZ0lDQnBMbk5sZEVGMGRISnBZblYwWlNnaWNHOXphWFJwYjI0aUxDQnVaWGNnWkdVb2RDd2dNeWtwTENCcExuTmxkRUYwZEhKcFluVjBaU2dpWTI5c2IzSWlMQ0J1WlhjZ1pHVW9iaXdnTXlrcE93b2dJQ0FnSUNBZ0lHeGxkQ0J5SUQwZ2JtVjNJR1owS0hzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFEyOXNiM0p6T2lBaE1Dd0tJQ0FnSUNBZ0lDQWdJQ0FnZEc5dVpVMWhjSEJsWkRvZ0lURUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J6ZFhCbGNpaHBMQ0J5S1RzS0lDQWdJQ0FnSUNCMGFHbHpMblI1Y0dVZ1BTQWlRWGhsYzBobGJIQmxjaUk3Q2lBZ0lDQjlDaUFnSUNCelpYUkRiMnh2Y25Nb1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnSUNBZ0lHeGxkQ0JwSUQwZ2JtVjNJR0ZsTENCeUlEMGdkR2hwY3k1blpXOXRaWFJ5ZVM1aGRIUnlhV0oxZEdWekxtTnZiRzl5TG1GeWNtRjVPd29nSUNBZ0lDQWdJSEpsZEhWeWJpQnBMbk5sZENobEtTd2dhUzUwYjBGeWNtRjVLSElzSURBcExDQnBMblJ2UVhKeVlYa29jaXdnTXlrc0lHa3VjMlYwS0hRcExDQnBMblJ2UVhKeVlYa29jaXdnTmlrc0lHa3VkRzlCY25KaGVTaHlMQ0E1S1N3Z2FTNXpaWFFvYmlrc0lHa3VkRzlCY25KaGVTaHlMQ0F4TWlrc0lHa3VkRzlCY25KaGVTaHlMQ0F4TlNrc0lIUm9hWE11WjJWdmJXVjBjbmt1WVhSMGNtbGlkWFJsY3k1amIyeHZjaTV1WldWa2MxVndaR0YwWlNBOUlDRXdMQ0IwYUdsek93b2dJQ0FnZlFvZ0lDQWdaR2x6Y0c5elpTZ3BJSHNLSUNBZ0lDQWdJQ0IwYUdsekxtZGxiMjFsZEhKNUxtUnBjM0J2YzJVb0tTd2dkR2hwY3k1dFlYUmxjbWxoYkM1a2FYTndiM05sS0NrN0NpQWdJQ0I5Q24wc0lFOTVJRDBnWTJ4aGMzTWdld29nSUNBZ1kyOXVjM1J5ZFdOMGIzSW9LWHNLSUNBZ0lDQWdJQ0IwYUdsekxuUjVjR1VnUFNBaVUyaGhjR1ZRWVhSb0lpd2dkR2hwY3k1amIyeHZjaUE5SUc1bGR5QmhaU3dnZEdocGN5NXpkV0pRWVhSb2N5QTlJRnRkTENCMGFHbHpMbU4xY25KbGJuUlFZWFJvSUQwZ2JuVnNiRHNLSUNBZ0lIMEtJQ0FnSUcxdmRtVlVieWhsTENCMEtTQjdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlIUm9hWE11WTNWeWNtVnVkRkJoZEdnZ1BTQnVaWGNnWjNJc0lIUm9hWE11YzNWaVVHRjBhSE11Y0hWemFDaDBhR2x6TG1OMWNuSmxiblJRWVhSb0tTd2dkR2hwY3k1amRYSnlaVzUwVUdGMGFDNXRiM1psVkc4b1pTd2dkQ2tzSUhSb2FYTTdDaUFnSUNCOUNpQWdJQ0JzYVc1bFZHOG9aU3dnZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbU4xY25KbGJuUlFZWFJvTG14cGJtVlVieWhsTENCMEtTd2dkR2hwY3pzS0lDQWdJSDBLSUNBZ0lIRjFZV1J5WVhScFkwTjFjblpsVkc4b1pTd2dkQ3dnYml3Z2FTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1OMWNuSmxiblJRWVhSb0xuRjFZV1J5WVhScFkwTjFjblpsVkc4b1pTd2dkQ3dnYml3Z2FTa3NJSFJvYVhNN0NpQWdJQ0I5Q2lBZ0lDQmlaWHBwWlhKRGRYSjJaVlJ2S0dVc0lIUXNJRzRzSUdrc0lISXNJRzhwSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnZEdocGN5NWpkWEp5Wlc1MFVHRjBhQzVpWlhwcFpYSkRkWEoyWlZSdktHVXNJSFFzSUc0c0lHa3NJSElzSUc4cExDQjBhR2x6T3dvZ0lDQWdmUW9nSUNBZ2MzQnNhVzVsVkdoeWRTaGxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdVkzVnljbVZ1ZEZCaGRHZ3VjM0JzYVc1bFZHaHlkU2hsS1N3Z2RHaHBjenNLSUNBZ0lIMEtJQ0FnSUhSdlUyaGhjR1Z6S0dVc0lIUXBJSHNLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ1S0hBcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElGOGdQU0JiWFRzS0lDQWdJQ0FnSUNBZ0lDQWdabTl5S0d4bGRDQjVJRDBnTUN3Z1lpQTlJSEF1YkdWdVozUm9PeUI1SUR3Z1lqc2dlU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJJRDBnY0Z0NVhTd2dUQ0E5SUc1bGR5QllkRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRXd1WTNWeWRtVnpJRDBnUVM1amRYSjJaWE1zSUY4dWNIVnphQ2hNS1RzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWHpzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1puVnVZM1JwYjI0Z2FTaHdMQ0JmS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNUlEMGdYeTVzWlc1bmRHZ3NJR0lnUFNBaE1Uc0tJQ0FnSUNBZ0lDQWdJQ0FnWm05eUtHeGxkQ0JCSUQwZ2VTQXRJREVzSUV3Z1BTQXdPeUJNSUR3Z2VUc2dRU0E5SUV3ckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaWFFnU1NBOUlGOWJRVjBzSUdzZ1BTQmZXMHhkTENCQ0lEMGdheTU0SUMwZ1NTNTRMQ0JRSUQwZ2F5NTVJQzBnU1M1NU93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRTFoZEdndVlXSnpLRkFwSUQ0Z1RuVnRZbVZ5TGtWUVUwbE1UMDRwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvVUNBOElEQWdKaVlnS0VrZ1BTQmZXMHhkTENCQ0lEMGdMVUlzSUdzZ1BTQmZXMEZkTENCUUlEMGdMVkFwTENCd0xua2dQQ0JKTG5rZ2ZId2djQzU1SUQ0Z2F5NTVLU0JqYjI1MGFXNTFaVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jQzU1SUQwOVBTQkpMbmtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQXVlQ0E5UFQwZ1NTNTRLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElIY2dQU0JRSUNvZ0tIQXVlQ0F0SUVrdWVDa2dMU0JDSUNvZ0tIQXVlU0F0SUVrdWVTazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gzSUQwOVBTQXdLU0J5WlhSMWNtNGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoM0lEd2dNQ2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0lnUFNBaFlqc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdMbmtnSVQwOUlFa3VlU2tnWTI5dWRHbHVkV1U3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3N1ZUNBOFBTQndMbmdnSmlZZ2NDNTRJRHc5SUVrdWVDQjhmQ0JKTG5nZ1BEMGdjQzU0SUNZbUlIQXVlQ0E4UFNCckxuZ3BJSEpsZEhWeWJpQWhNRHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZanNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnYkdWMElISWdQU0JLZEM1cGMwTnNiMk5yVjJselpTd2dieUE5SUhSb2FYTXVjM1ZpVUdGMGFITTdDaUFnSUNBZ0lDQWdhV1lnS0c4dWJHVnVaM1JvSUQwOVBTQXdLU0J5WlhSMWNtNGdXMTA3Q2lBZ0lDQWdJQ0FnYVdZZ0tIUWdQVDA5SUNFd0tTQnlaWFIxY200Z2JpaHZLVHNLSUNBZ0lDQWdJQ0JzWlhRZ1lTd2diQ3dnWXl3Z2FDQTlJRnRkT3dvZ0lDQWdJQ0FnSUdsbUlDaHZMbXhsYm1kMGFDQTlQVDBnTVNrZ2NtVjBkWEp1SUd3Z1BTQnZXekJkTENCaklEMGdibVYzSUZoMExDQmpMbU4xY25abGN5QTlJR3d1WTNWeWRtVnpMQ0JvTG5CMWMyZ29ZeWtzSUdnN0NpQWdJQ0FnSUNBZ2JHVjBJSFVnUFNBaGNpaHZXekJkTG1kbGRGQnZhVzUwY3lncEtUc0tJQ0FnSUNBZ0lDQjFJRDBnWlNBL0lDRjFJRG9nZFRzS0lDQWdJQ0FnSUNCc1pYUWdaQ0E5SUZ0ZExDQm1JRDBnVzEwc0lHMGdQU0JiWFN3Z2VDQTlJREFzSUhZN0NpQWdJQ0FnSUNBZ1psdDRYU0E5SUhadmFXUWdNQ3dnYlZ0NFhTQTlJRnRkT3dvZ0lDQWdJQ0FnSUdadmNpaHNaWFFnY0NBOUlEQXNJRjhnUFNCdkxteGxibWQwYURzZ2NDQThJRjg3SUhBckt5bHNJRDBnYjF0d1hTd2dkaUE5SUd3dVoyVjBVRzlwYm5SektDa3NJR0VnUFNCeUtIWXBMQ0JoSUQwZ1pTQS9JQ0ZoSURvZ1lTd2dZU0EvSUNnaGRTQW1KaUJtVzNoZElDWW1JSGdyS3l3Z1psdDRYU0E5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjem9nYm1WM0lGaDBMQW9nSUNBZ0lDQWdJQ0FnSUNCd09pQjJDaUFnSUNBZ0lDQWdmU3dnWmx0NFhTNXpMbU4xY25abGN5QTlJR3d1WTNWeWRtVnpMQ0IxSUNZbUlIZ3JLeXdnYlZ0NFhTQTlJRnRkS1NBNklHMWJlRjB1Y0hWemFDaDdDaUFnSUNBZ0lDQWdJQ0FnSUdnNklHd3NDaUFnSUNBZ0lDQWdJQ0FnSUhBNklIWmJNRjBLSUNBZ0lDQWdJQ0I5S1RzS0lDQWdJQ0FnSUNCcFppQW9JV1piTUYwcElISmxkSFZ5YmlCdUtHOHBPd29nSUNBZ0lDQWdJR2xtSUNobUxteGxibWQwYUNBK0lERXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJSEF4SUQwZ0lURXNJRjh4SUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVNBOUlEQXNJR0lnUFNCbUxteGxibWQwYURzZ2VTQThJR0k3SUhrckt5bGtXM2xkSUQwZ1cxMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVRFZ1BTQXdMQ0JpTVNBOUlHWXViR1Z1WjNSb095QjVNU0E4SUdJeE95QjVNU3NyS1hzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQkJJRDBnYlZ0NU1WMDdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lvYkdWMElFd2dQU0F3T3lCTUlEd2dRUzVzWlc1bmRHZzdJRXdyS3lsN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiR1YwSUVrZ1BTQkJXMHhkTENCcklEMGdJVEE3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXlLR3hsZENCQ0lEMGdNRHNnUWlBOElHWXViR1Z1WjNSb095QkNLeXNwYVNoSkxuQXNJR1piUWwwdWNDa2dKaVlnS0hreElDRTlQU0JDSUNZbUlGOHhMbkIxYzJnb2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWNtOXRjem9nZVRFc0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSdmN6b2dRaXdLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhRzlzWlRvZ1RBb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBwTENCcklEOGdLR3NnUFNBaE1Td2daRnRDWFM1d2RYTm9LRWtwS1NBNklIQXhJRDBnSVRBcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3NnSmlZZ1pGdDVNVjB1Y0hWemFDaEpLVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lDQWdJQ0JmTVM1c1pXNW5kR2dnUGlBd0lDWW1JQ2h3TVNCOGZDQW9iU0E5SUdRcEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdiR1YwSUdjN0NpQWdJQ0FnSUNBZ1ptOXlLR3hsZENCd01pQTlJREFzSUY4eUlEMGdaaTVzWlc1bmRHZzdJSEF5SUR3Z1h6STdJSEF5S3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqSUQwZ1psdHdNbDB1Y3l3Z2FDNXdkWE5vS0dNcExDQm5JRDBnYlZ0d01sMDdDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpaHNaWFFnZVRJZ1BTQXdMQ0JpTWlBOUlHY3ViR1Z1WjNSb095QjVNaUE4SUdJeU95QjVNaXNyS1dNdWFHOXNaWE11Y0hWemFDaG5XM2t5WFM1b0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHZzdDaUFnSUNCOUNuMHNJSE4xSUQwZ2JtVjNJRVpzYjJGME16SkJjbkpoZVNneEtTd2dTSGtnUFNCdVpYY2dTVzUwTXpKQmNuSmhlU2h6ZFM1aWRXWm1aWElwTENCcmVTQTlJR05zWVhOeklIc0tJQ0FnSUhOMFlYUnBZeUIwYjBoaGJHWkdiRzloZENobEtTQjdDaUFnSUNBZ0lDQWdaU0ErSURZMU5UQTBJQ1ltSUNoamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrUmhkR0ZWZEdsc2N5NTBiMGhoYkdaR2JHOWhkQ2dwT2lCMllXeDFaU0JsZUdObFpXUnpJRFkxTlRBMExpSXBMQ0JsSUQwZ05qVTFNRFFwTENCemRWc3dYU0E5SUdVN0NpQWdJQ0FnSUNBZ2JHVjBJSFFnUFNCSWVWc3dYU3dnYmlBOUlIUWdQajRnTVRZZ0ppQXpNamMyT0N3Z2FTQTlJSFFnUGo0Z01USWdKaUF5TURRM0xDQnlJRDBnZENBK1BpQXlNeUFtSURJMU5Uc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2NpQThJREV3TXlBL0lHNGdPaUJ5SUQ0Z01UUXlJRDhnS0c0Z2ZEMGdNekUzTkRRc0lHNGdmRDBnS0hJZ1BUMGdNalUxSUQ4Z01DQTZJREVwSUNZbUlIUWdKaUE0TXpnNE5qQTNMQ0J1S1NBNklISWdQQ0F4TVRNZ1B5QW9hU0I4UFNBeU1EUTRMQ0J1SUh3OUlDaHBJRDQrSURFeE5DQXRJSElwSUNzZ0tHa2dQajRnTVRFeklDMGdjaUFtSURFcExDQnVLU0E2SUNodUlIdzlJSElnTFNBeE1USWdQRHdnTVRBZ2ZDQnBJRDQrSURFc0lHNGdLejBnYVNBbUlERXNJRzRwT3dvZ0lDQWdmUXA5TENCaU1DQTlJREFzSUhjd0lEMGdNU3dnVXpBZ1BTQXdMQ0JVTUNBOUlERXNJRVV3SUQwZ01qc0tablZ1WTNScGIyNGdRVEFvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdWemFFWmhZMlZOWVhSbGNtbGhiQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1lXNGdRWEp5WVhrZ2FXNXpkR1ZoWkM0aUtTd2djenNLZlFwbWRXNWpkR2x2YmlCRE1DaHpJRDBnVzEwcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxMWJIUnBUV0YwWlhKcFlXd2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUdGdUlFRnljbUY1SUdsdWMzUmxZV1F1SWlrc0lITXVhWE5OZFd4MGFVMWhkR1Z5YVdGc0lEMGdJVEFzSUhNdWJXRjBaWEpwWVd4eklEMGdjeXdnY3k1amJHOXVaU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCekxuTnNhV05sS0NrN0NpQWdJQ0I5TENCek93cDlDbVoxYm1OMGFXOXVJRXd3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsQnZhVzUwUTJ4dmRXUWdhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUJVU0ZKRlJTNVFiMmx1ZEhNdUlpa3NJRzVsZHlCNmNpaHpMQ0JsS1RzS2ZRcG1kVzVqZEdsdmJpQlNNQ2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVRWVhKMGFXTnNaU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUZSSVVrVkZMbE53Y21sMFpTNGlLU3dnYm1WM0lISnZLSE1wT3dwOUNtWjFibU4wYVc5dUlGQXdLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxCaGNuUnBZMnhsVTNsemRHVnRJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnVkVoU1JVVXVVRzlwYm5SekxpSXBMQ0J1WlhjZ2VuSW9jeXdnWlNrN0NuMEtablZ1WTNScGIyNGdTVEFvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VUc5cGJuUkRiRzkxWkUxaGRHVnlhV0ZzSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1VUc5cGJuUnpUV0YwWlhKcFlXd3VJaWtzSUc1bGR5QnFiaWh6S1RzS2ZRcG1kVzVqZEdsdmJpQkVNQ2h6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVRWVhKMGFXTnNaVUpoYzJsalRXRjBaWEpwWVd3Z2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QlVTRkpGUlM1UWIybHVkSE5OWVhSbGNtbGhiQzRpS1N3Z2JtVjNJR3B1S0hNcE93cDlDbVoxYm1OMGFXOXVJRVl3S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxCaGNuUnBZMnhsVTNsemRHVnRUV0YwWlhKcFlXd2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUJVU0ZKRlJTNVFiMmx1ZEhOTllYUmxjbWxoYkM0aUtTd2dibVYzSUdwdUtITXBPd3A5Q21aMWJtTjBhVzl1SUU0d0tITXNJR1VzSUhRcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxabGNuUmxlQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1ZFaFNSVVV1Vm1WamRHOXlNeUJwYm5OMFpXRmtMaUlwTENCdVpYY2dUU2h6TENCbExDQjBLVHNLZlFwbWRXNWpkR2x2YmlCQ01DaHpMQ0JsS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVFZVc1aGJXbGpRblZtWm1WeVFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1UW5WbVptVnlRWFIwY21saWRYUmxLQ2t1YzJWMFZYTmhaMlVvSUZSSVVrVkZMa1I1Ym1GdGFXTkVjbUYzVlhOaFoyVWdLU0JwYm5OMFpXRmtMaUlwTENCdVpYY2dWV1VvY3l3Z1pTa3VjMlYwVlhOaFoyVW9kWElwT3dwOUNtWjFibU4wYVc5dUlIb3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtsdWREaEJkSFJ5YVdKMWRHVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUc1bGR5QlVTRkpGUlM1SmJuUTRRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lHcGpLSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJRlV3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsVnBiblE0UVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVWV2x1ZERoQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1NCcGJuTjBaV0ZrTGlJcExDQnVaWGNnVVdNb2N5d2daU2s3Q24wS1puVnVZM1JwYjI0Z1R6QW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VldsdWREaERiR0Z0Y0dWa1FYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1VldsdWREaERiR0Z0Y0dWa1FuVm1abVZ5UVhSMGNtbGlkWFJsS0NrZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUV0aktITXNJR1VwT3dwOUNtWjFibU4wYVc5dUlFZ3dLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtsdWRERTJRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVNXNTBNVFpDZFdabVpYSkJkSFJ5YVdKMWRHVW9LU0JwYm5OMFpXRmtMaUlwTENCdVpYY2daV2dvY3l3Z1pTazdDbjBLWm5WdVkzUnBiMjRnYXpBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWV2x1ZERFMlFYUjBjbWxpZFhSbElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J1WlhjZ1ZFaFNSVVV1VldsdWRERTJRblZtWm1WeVFYUjBjbWxpZFhSbEtDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lGbHpLSE1zSUdVcE93cDlDbVoxYm1OMGFXOXVJRWN3S0hNc0lHVXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrbHVkRE15UVhSMGNtbGlkWFJsSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnVaWGNnVkVoU1JVVXVTVzUwTXpKQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1NCcGJuTjBaV0ZrTGlJcExDQnVaWGNnZEdnb2N5d2daU2s3Q24wS1puVnVZM1JwYjI0Z1ZqQW9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VldsdWRETXlRWFIwY21saWRYUmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCdVpYY2dWRWhTUlVVdVZXbHVkRE15UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJRnB6S0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUZjd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa1pzYjJGME16SkJkSFJ5YVdKMWRHVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUc1bGR5QlVTRkpGUlM1R2JHOWhkRE15UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJR1JsS0hNc0lHVXBPd3A5Q21aMWJtTjBhVzl1SUhFd0tITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa1pzYjJGME5qUkJkSFJ5YVdKMWRHVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUc1bGR5QlVTRkpGUlM1R2JHOWhkRFkwUW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYVc1emRHVmhaQzRpS1N3Z2JtVjNJR2xvS0hNc0lHVXBPd3A5Q2tOMExtTnlaV0YwWlNBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExteHZaeWdpVkVoU1JVVXVRM1Z5ZG1VdVkzSmxZWFJsS0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDSXBMQ0J6TG5CeWIzUnZkSGx3WlNBOUlFOWlhbVZqZEM1amNtVmhkR1VvUTNRdWNISnZkRzkwZVhCbEtTd2djeTV3Y205MGIzUjVjR1V1WTI5dWMzUnlkV04wYjNJZ1BTQnpMQ0J6TG5CeWIzUnZkSGx3WlM1blpYUlFiMmx1ZENBOUlHVXNJSE03Q24wN0NtZHlMbkJ5YjNSdmRIbHdaUzVtY205dFVHOXBiblJ6SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVHRjBhRG9nTG1aeWIyMVFiMmx1ZEhNb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV6WlhSR2NtOXRVRzlwYm5SektDa3VJaWtzSUhSb2FYTXVjMlYwUm5KdmJWQnZhVzUwY3loektUc0tmVHNLWm5WdVkzUnBiMjRnV0RBb2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFYaHBjMGhsYkhCbGNpQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJRlJJVWtWRkxrRjRaWE5JWld4d1pYSXVJaWtzSUc1bGR5QnlkU2h6S1RzS2ZRcG1kVzVqZEdsdmJpQktNQ2h6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2IzVnVaR2x1WjBKdmVFaGxiSEJsY2lCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQkRjbVZoZEdsdVp5QmhJRlJJVWtWRkxrSnZlRWhsYkhCbGNpQnBibk4wWldGa0xpSXBMQ0J1WlhjZ2FYVW9jeXdnWlNrN0NuMEtablZ1WTNScGIyNGdXVEFvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVJXUm5aWE5JWld4d1pYSWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUZSSVVrVkZMa1ZrWjJWelIyVnZiV1YwY25rZ2FXNXpkR1ZoWkM0aUtTd2dibVYzSUhkMEtHNWxkeUJmWVNoekxtZGxiMjFsZEhKNUtTd2dibVYzSUdaMEtIc0tJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ1pTQWhQVDBnZG05cFpDQXdJRDhnWlNBNklERTJOemMzTWpFMUNpQWdJQ0I5S1NrN0NuMEtiblV1Y0hKdmRHOTBlWEJsTG5ObGRFTnZiRzl5Y3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVSM0pwWkVobGJIQmxjam9nYzJWMFEyOXNiM0p6S0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDd2djR0Z6Y3lCMGFHVnRJR2x1SUhSb1pTQmpiMjV6ZEhKMVkzUnZjaUJwYm5OMFpXRmtMaUlwT3dwOU93cGxkUzV3Y205MGIzUjVjR1V1ZFhCa1lYUmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1VGEyVnNaWFJ2YmtobGJIQmxjam9nZFhCa1lYUmxLQ2tnYm04Z2JHOXVaMlZ5SUc1bFpXUnpJSFJ2SUdKbElHTmhiR3hsWkM0aUtUc0tmVHNLWm5WdVkzUnBiMjRnV2pBb2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMmx5WldaeVlXMWxTR1ZzY0dWeUlHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0JVU0ZKRlJTNVhhWEpsWm5KaGJXVkhaVzl0WlhSeWVTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ2QzUW9ibVYzSUVWaEtITXVaMlZ2YldWMGNua3BMQ0J1WlhjZ1puUW9ld29nSUNBZ0lDQWdJR052Ykc5eU9pQmxJQ0U5UFNCMmIybGtJREFnUHlCbElEb2dNVFkzTnpjeU1UVUtJQ0FnSUgwcEtUc0tmUXBpZEM1d2NtOTBiM1I1Y0dVdVpYaDBjbUZqZEZWeWJFSmhjMlVnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWIyRmtaWEk2SUM1bGVIUnlZV04wVlhKc1FtRnpaU2dwSUdoaGN5QmlaV1Z1SUdSbGNISmxZMkYwWldRdUlGVnpaU0JVU0ZKRlJTNU1iMkZrWlhKVmRHbHNjeTVsZUhSeVlXTjBWWEpzUW1GelpTZ3BJR2x1YzNSbFlXUXVJaWtzSUVkekxtVjRkSEpoWTNSVmNteENZWE5sS0hNcE93cDlPd3BpZEM1SVlXNWtiR1Z5Y3lBOUlIc0tJQ0FnSUdGa1pEb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRHOWhaR1Z5T2lCSVlXNWtiR1Z5Y3k1aFpHUW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1RHOWhaR2x1WjAxaGJtRm5aWEl1WVdSa1NHRnVaR3hsY2lncElHbHVjM1JsWVdRdUlpazdDaUFnSUNCOUxBb2dJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TWIyRmtaWEk2SUVoaGJtUnNaWEp6TG1kbGRDZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCTWIyRmthVzVuVFdGdVlXZGxjaTVuWlhSSVlXNWtiR1Z5S0NrZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdKREFvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1V0VoU1RHOWhaR1Z5SUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z1ZFaFNSVVV1Um1sc1pVeHZZV1JsY2k0aUtTd2dibVYzSUZsMEtITXBPd3A5Q21aMWJtTjBhVzl1SUdvd0tITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSnBibUZ5ZVZSbGVIUjFjbVZNYjJGa1pYSWdhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUJVU0ZKRlJTNUVZWFJoVkdWNGRIVnlaVXh2WVdSbGNpNGlLU3dnYm1WM0lFNW9LSE1wT3dwOUNuRnBMbkJ5YjNSdmRIbHdaUzVqWlc1MFpYSWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNneU9pQXVZMlZ1ZEdWeUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFEyVnVkR1Z5S0NrdUlpa3NJSFJvYVhNdVoyVjBRMlZ1ZEdWeUtITXBPd3A5T3dweGFTNXdjbTkwYjNSNWNHVXVaVzF3ZEhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSnZlREk2SUM1bGJYQjBlU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtbHpSVzF3ZEhrb0tTNGlLU3dnZEdocGN5NXBjMFZ0Y0hSNUtDazdDbjA3Q25GcExuQnliM1J2ZEhsd1pTNXBjMGx1ZEdWeWMyVmpkR2x2YmtKdmVDQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0p2ZURJNklDNXBjMGx1ZEdWeWMyVmpkR2x2YmtKdmVDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1sdWRHVnljMlZqZEhOQ2IzZ29LUzRpS1N3Z2RHaHBjeTVwYm5SbGNuTmxZM1J6UW05NEtITXBPd3A5T3dweGFTNXdjbTkwYjNSNWNHVXVjMmw2WlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSnZlREk2SUM1emFYcGxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBVMmw2WlNncExpSXBMQ0IwYUdsekxtZGxkRk5wZW1Vb2N5azdDbjA3Q2t4MExuQnliM1J2ZEhsd1pTNWpaVzUwWlhJZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2d6T2lBdVkyVnVkR1Z5S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwUTJWdWRHVnlLQ2t1SWlrc0lIUm9hWE11WjJWMFEyVnVkR1Z5S0hNcE93cDlPd3BNZEM1d2NtOTBiM1I1Y0dVdVpXMXdkSGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtKdmVETTZJQzVsYlhCMGVTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1selJXMXdkSGtvS1M0aUtTd2dkR2hwY3k1cGMwVnRjSFI1S0NrN0NuMDdDa3gwTG5CeWIzUnZkSGx3WlM1cGMwbHVkR1Z5YzJWamRHbHZia0p2ZUNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSnZlRE02SUM1cGMwbHVkR1Z5YzJWamRHbHZia0p2ZUNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWx1ZEdWeWMyVmpkSE5DYjNnb0tTNGlLU3dnZEdocGN5NXBiblJsY25ObFkzUnpRbTk0S0hNcE93cDlPd3BNZEM1d2NtOTBiM1I1Y0dVdWFYTkpiblJsY25ObFkzUnBiMjVUY0dobGNtVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDYjNnek9pQXVhWE5KYm5SbGNuTmxZM1JwYjI1VGNHaGxjbVVvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXBiblJsY25ObFkzUnpVM0JvWlhKbEtDa3VJaWtzSUhSb2FYTXVhVzUwWlhKelpXTjBjMU53YUdWeVpTaHpLVHNLZlRzS1RIUXVjSEp2ZEc5MGVYQmxMbk5wZW1VZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNiM2d6T2lBdWMybDZaU2dwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZGxkRk5wZW1Vb0tTNGlLU3dnZEdocGN5NW5aWFJUYVhwbEtITXBPd3A5T3dwQmJpNXdjbTkwYjNSNWNHVXVaVzF3ZEhrZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsTndhR1Z5WlRvZ0xtVnRjSFI1S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVhWE5GYlhCMGVTZ3BMaUlwTENCMGFHbHpMbWx6Ulcxd2RIa29LVHNLZlRzS1JISXVjSEp2ZEc5MGVYQmxMbk5sZEVaeWIyMU5ZWFJ5YVhnZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUdjblZ6ZEhWdE9pQXVjMlYwUm5KdmJVMWhkSEpwZUNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbk5sZEVaeWIyMVFjbTlxWldOMGFXOXVUV0YwY21sNEtDa3VJaWtzSUhSb2FYTXVjMlYwUm5KdmJWQnliMnBsWTNScGIyNU5ZWFJ5YVhnb2N5azdDbjA3Q2t0b0xuQnliM1J2ZEhsd1pTNWpaVzUwWlhJZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hVzVsTXpvZ0xtTmxiblJsY2lncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbWRsZEVObGJuUmxjaWdwTGlJcExDQjBhR2x6TG1kbGRFTmxiblJsY2loektUc0tmVHNLYkhRdWNISnZkRzkwZVhCbExtWnNZWFIwWlc1VWIwRnljbUY1VDJabWMyVjBJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TXpvZ0xtWnNZWFIwWlc1VWIwRnljbUY1VDJabWMyVjBLQ2tnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJQzUwYjBGeWNtRjVLQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTUwYjBGeWNtRjVLSE1zSUdVcE93cDlPd3BzZEM1d2NtOTBiM1I1Y0dVdWJYVnNkR2x3YkhsV1pXTjBiM0l6SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBjbWw0TXpvZ0xtMTFiSFJwY0d4NVZtVmpkRzl5TXlncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0IyWldOMGIzSXVZWEJ3YkhsTllYUnlhWGd6S0NCdFlYUnlhWGdnS1NCcGJuTjBaV0ZrTGlJcExDQnpMbUZ3Y0d4NVRXRjBjbWw0TXloMGFHbHpLVHNLZlRzS2JIUXVjSEp2ZEc5MGVYQmxMbTExYkhScGNHeDVWbVZqZEc5eU0wRnljbUY1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5ZWFJ5YVhnek9pQXViWFZzZEdsd2JIbFdaV04wYjNJelFYSnlZWGtvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3BzZEM1d2NtOTBiM1I1Y0dVdVlYQndiSGxVYjBKMVptWmxja0YwZEhKcFluVjBaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRE02SUM1aGNIQnNlVlJ2UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHRjBkSEpwWW5WMFpTNWhjSEJzZVUxaGRISnBlRE1vSUcxaGRISnBlQ0FwSUdsdWMzUmxZV1F1SWlrc0lITXVZWEJ3YkhsTllYUnlhWGd6S0hSb2FYTXBPd3A5T3dwc2RDNXdjbTkwYjNSNWNHVXVZWEJ3YkhsVWIxWmxZM1J2Y2pOQmNuSmhlU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TXpvZ0xtRndjR3g1Vkc5V1pXTjBiM0l6UVhKeVlYa29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHNkQzV3Y205MGIzUjVjR1V1WjJWMFNXNTJaWEp6WlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURNNklDNW5aWFJKYm5abGNuTmxLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHMWhkSEpwZUVsdWRpNWpiM0I1S0NCdFlYUnlhWGdnS1M1cGJuWmxjblFvS1RzZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1amIzQjVLSE1wTG1sdWRtVnlkQ2dwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1WlhoMGNtRmpkRkJ2YzJsMGFXOXVJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG1WNGRISmhZM1JRYjNOcGRHbHZiaWdwSUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtTnZjSGxRYjNOcGRHbHZiaWdwTGlJcExDQjBhR2x6TG1OdmNIbFFiM05wZEdsdmJpaHpLVHNLZlRzS2NHVXVjSEp2ZEc5MGVYQmxMbVpzWVhSMFpXNVViMEZ5Y21GNVQyWm1jMlYwSUQwZ1puVnVZM1JwYjI0b2N5d2daU2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwY21sNE5Eb2dMbVpzWVhSMFpXNVViMEZ5Y21GNVQyWm1jMlYwS0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUM1MGIwRnljbUY1S0NrZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1MGIwRnljbUY1S0hNc0lHVXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVaMlYwVUc5emFYUnBiMjRnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1blpYUlFiM05wZEdsdmJpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlZ6WlNCV1pXTjBiM0l6TG5ObGRFWnliMjFOWVhSeWFYaFFiM05wZEdsdmJpZ2diV0YwY21sNElDa2dhVzV6ZEdWaFpDNGlLU3dnYm1WM0lFMG9LUzV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0hSb2FYTXNJRE1wT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1YzJWMFVtOTBZWFJwYjI1R2NtOXRVWFZoZEdWeWJtbHZiaUE5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1elpYUlNiM1JoZEdsdmJrWnliMjFSZFdGMFpYSnVhVzl1S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXViV0ZyWlZKdmRHRjBhVzl1Um5KdmJWRjFZWFJsY201cGIyNG9LUzRpS1N3Z2RHaHBjeTV0WVd0bFVtOTBZWFJwYjI1R2NtOXRVWFZoZEdWeWJtbHZiaWh6S1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG0xMWJIUnBjR3g1Vkc5QmNuSmhlU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWJYVnNkR2x3YkhsVWIwRnljbUY1S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExtMTFiSFJwY0d4NVZtVmpkRzl5TXlBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXRkV3gwYVhCc2VWWmxZM1J2Y2pNb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnZG1WamRHOXlMbUZ3Y0d4NVRXRjBjbWw0TkNnZ2JXRjBjbWw0SUNrZ2FXNXpkR1ZoWkM0aUtTd2djeTVoY0hCc2VVMWhkSEpwZURRb2RHaHBjeWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV0ZFd4MGFYQnNlVlpsWTNSdmNqUWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1YlhWc2RHbHdiSGxXWldOMGIzSTBLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElIWmxZM1J2Y2k1aGNIQnNlVTFoZEhKcGVEUW9JRzFoZEhKcGVDQXBJR2x1YzNSbFlXUXVJaWtzSUhNdVlYQndiSGxOWVhSeWFYZzBLSFJvYVhNcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdWJYVnNkR2x3YkhsV1pXTjBiM0l6UVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1dGRXeDBhWEJzZVZabFkzUnZjak5CY25KaGVTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV5YjNSaGRHVkJlR2x6SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVjbTkwWVhSbFFYaHBjeWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQldaV04wYjNJekxuUnlZVzV6Wm05eWJVUnBjbVZqZEdsdmJpZ2diV0YwY21sNElDa2dhVzV6ZEdWaFpDNGlLU3dnY3k1MGNtRnVjMlp2Y20xRWFYSmxZM1JwYjI0b2RHaHBjeWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzVqY205emMxWmxZM1J2Y2lBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrMWhkSEpwZURRNklDNWpjbTl6YzFabFkzUnZjaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQjJaV04wYjNJdVlYQndiSGxOWVhSeWFYZzBLQ0J0WVhSeWFYZ2dLU0JwYm5OMFpXRmtMaUlwTENCekxtRndjR3g1VFdGMGNtbDROQ2gwYUdsektUc0tmVHNLY0dVdWNISnZkRzkwZVhCbExuUnlZVzV6YkdGMFpTQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1VFdGMGNtbDRORG9nTG5SeVlXNXpiR0YwWlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXliM1JoZEdWWUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVOWVhSeWFYZzBPaUF1Y205MFlYUmxXQ2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkJsTG5CeWIzUnZkSGx3WlM1eWIzUmhkR1ZaSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVjbTkwWVhSbFdTZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuQmxMbkJ5YjNSdmRIbHdaUzV5YjNSaGRHVmFJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWNtOTBZWFJsV2lncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25CbExuQnliM1J2ZEhsd1pTNXliM1JoZEdWQ2VVRjRhWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWhkSEpwZURRNklDNXliM1JoZEdWQ2VVRjRhWE1vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B3WlM1d2NtOTBiM1I1Y0dVdVlYQndiSGxVYjBKMVptWmxja0YwZEhKcFluVjBaU0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRISnBlRFE2SUM1aGNIQnNlVlJ2UW5WbVptVnlRWFIwY21saWRYUmxLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVlhObElHRjBkSEpwWW5WMFpTNWhjSEJzZVUxaGRISnBlRFFvSUcxaGRISnBlQ0FwSUdsdWMzUmxZV1F1SWlrc0lITXVZWEJ3YkhsTllYUnlhWGcwS0hSb2FYTXBPd3A5T3dwd1pTNXdjbTkwYjNSNWNHVXVZWEJ3YkhsVWIxWmxZM1J2Y2pOQmNuSmhlU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVRXRjBjbWw0TkRvZ0xtRndjR3g1Vkc5V1pXTjBiM0l6UVhKeVlYa29LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cHdaUzV3Y205MGIzUjVjR1V1YldGclpVWnlkWE4wZFcwZ1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMExDQnVMQ0JwTENCeUtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUnlhWGcwT2lBdWJXRnJaVVp5ZFhOMGRXMG9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xtMWhhMlZRWlhKemNHVmpkR2wyWlNnZ2JHVm1kQ3dnY21sbmFIUXNJSFJ2Y0N3Z1ltOTBkRzl0TENCdVpXRnlMQ0JtWVhJZ0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxtMWhhMlZRWlhKemNHVmpkR2wyWlNoekxDQmxMQ0J1TENCMExDQnBMQ0J5S1RzS2ZUc0tjR1V1Y0hKdmRHOTBlWEJsTG1kbGRFbHVkbVZ5YzJVZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU5ZWFJ5YVhnME9pQXVaMlYwU1c1MlpYSnpaU2dwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQnRZWFJ5YVhoSmJuWXVZMjl3ZVNnZ2JXRjBjbWw0SUNrdWFXNTJaWEowS0NrN0lHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdVkyOXdlU2h6S1M1cGJuWmxjblFvS1RzS2ZUc0tWM1F1Y0hKdmRHOTBlWEJsTG1selNXNTBaWEp6WldOMGFXOXVUR2x1WlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsQnNZVzVsT2lBdWFYTkpiblJsY25ObFkzUnBiMjVNYVc1bEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YVc1MFpYSnpaV04wYzB4cGJtVW9LUzRpS1N3Z2RHaHBjeTVwYm5SbGNuTmxZM1J6VEdsdVpTaHpLVHNLZlRzS1ozUXVjSEp2ZEc5MGVYQmxMbTExYkhScGNHeDVWbVZqZEc5eU15QTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbEYxWVhSbGNtNXBiMjQ2SUM1dGRXeDBhWEJzZVZabFkzUnZjak1vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdhWE1nYm05M0lIWmxZM1J2Y2k1aGNIQnNlVkYxWVhSbGNtNXBiMjRvSUhGMVlYUmxjbTVwYjI0Z0tTQnBibk4wWldGa0xpSXBMQ0J6TG1Gd2NHeDVVWFZoZEdWeWJtbHZiaWgwYUdsektUc0tmVHNLWjNRdWNISnZkRzkwZVhCbExtbHVkbVZ5YzJVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsRjFZWFJsY201cGIyNDZJQzVwYm5abGNuTmxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlCcGJuWmxjblFvS1M0aUtTd2dkR2hwY3k1cGJuWmxjblFvS1RzS2ZUc0tRMjR1Y0hKdmRHOTBlWEJsTG1selNXNTBaWEp6WldOMGFXOXVRbTk0SUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVVtRjVPaUF1YVhOSmJuUmxjbk5sWTNScGIyNUNiM2dvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXBiblJsY25ObFkzUnpRbTk0S0NrdUlpa3NJSFJvYVhNdWFXNTBaWEp6WldOMGMwSnZlQ2h6S1RzS2ZUc0tRMjR1Y0hKdmRHOTBlWEJsTG1selNXNTBaWEp6WldOMGFXOXVVR3hoYm1VZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVNZWGs2SUM1cGMwbHVkR1Z5YzJWamRHbHZibEJzWVc1bEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YVc1MFpYSnpaV04wYzFCc1lXNWxLQ2t1SWlrc0lIUm9hWE11YVc1MFpYSnpaV04wYzFCc1lXNWxLSE1wT3dwOU93cERiaTV3Y205MGIzUjVjR1V1YVhOSmJuUmxjbk5sWTNScGIyNVRjR2hsY21VZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVNZWGs2SUM1cGMwbHVkR1Z5YzJWamRHbHZibE53YUdWeVpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1sdWRHVnljMlZqZEhOVGNHaGxjbVVvS1M0aUtTd2dkR2hwY3k1cGJuUmxjbk5sWTNSelUzQm9aWEpsS0hNcE93cDlPd3B1ZEM1d2NtOTBiM1I1Y0dVdVlYSmxZU0E5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VkhKcFlXNW5iR1U2SUM1aGNtVmhLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBRWEpsWVNncExpSXBMQ0IwYUdsekxtZGxkRUZ5WldFb0tUc0tmVHNLYm5RdWNISnZkRzkwZVhCbExtSmhjbmxqYjI5eVpFWnliMjFRYjJsdWRDQTlJR1oxYm1OMGFXOXVLSE1zSUdVcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxSeWFXRnVaMnhsT2lBdVltRnllV052YjNKa1JuSnZiVkJ2YVc1MEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFFtRnllV052YjNKa0tDa3VJaWtzSUhSb2FYTXVaMlYwUW1GeWVXTnZiM0prS0hNc0lHVXBPd3A5T3dwdWRDNXdjbTkwYjNSNWNHVXViV2xrY0c5cGJuUWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVVY21saGJtZHNaVG9nTG0xcFpIQnZhVzUwS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaMlYwVFdsa2NHOXBiblFvS1M0aUtTd2dkR2hwY3k1blpYUk5hV1J3YjJsdWRDaHpLVHNLZlRzS2JuUXVjSEp2ZEc5MGVYQmxibTl5YldGc0lEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWSEpwWVc1bmJHVTZJQzV1YjNKdFlXd29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1blpYUk9iM0p0WVd3b0tTNGlLU3dnZEdocGN5NW5aWFJPYjNKdFlXd29jeWs3Q24wN0NtNTBMbkJ5YjNSdmRIbHdaUzV3YkdGdVpTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbFJ5YVdGdVoyeGxPaUF1Y0d4aGJtVW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1blpYUlFiR0Z1WlNncExpSXBMQ0IwYUdsekxtZGxkRkJzWVc1bEtITXBPd3A5T3dwdWRDNWlZWEo1WTI5dmNtUkdjbTl0VUc5cGJuUWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBMQ0J1TENCcEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1VWNtbGhibWRzWlRvZ0xtSmhjbmxqYjI5eVpFWnliMjFRYjJsdWRDZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1kbGRFSmhjbmxqYjI5eVpDZ3BMaUlwTENCdWRDNW5aWFJDWVhKNVkyOXZjbVFvY3l3Z1pTd2dkQ3dnYml3Z2FTazdDbjA3Q201MExtNXZjbTFoYkNBOUlHWjFibU4wYVc5dUtITXNJR1VzSUhRc0lHNHBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsUnlhV0Z1WjJ4bE9pQXVibTl5YldGc0tDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WjJWMFRtOXliV0ZzS0NrdUlpa3NJRzUwTG1kbGRFNXZjbTFoYkNoekxDQmxMQ0IwTENCdUtUc0tmVHNLV0hRdWNISnZkRzkwZVhCbExtVjRkSEpoWTNSQmJHeFFiMmx1ZEhNZ1BTQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVRhR0Z3WlRvZ0xtVjRkSEpoWTNSQmJHeFFiMmx1ZEhNb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG1WNGRISmhZM1JRYjJsdWRITW9LU0JwYm5OMFpXRmtMaUlwTENCMGFHbHpMbVY0ZEhKaFkzUlFiMmx1ZEhNb2N5azdDbjA3Q2xoMExuQnliM1J2ZEhsd1pTNWxlSFJ5ZFdSbElEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVVMmhoY0dVNklDNWxlSFJ5ZFdSbEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUVWNGRISjFaR1ZIWlc5dFpYUnllU2dwSUdsdWMzUmxZV1F1SWlrc0lHNWxkeUJzYmloMGFHbHpMQ0J6S1RzS2ZUc0tXSFF1Y0hKdmRHOTBlWEJsTG0xaGEyVkhaVzl0WlhSeWVTQTlJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbE5vWVhCbE9pQXViV0ZyWlVkbGIyMWxkSEo1S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRk5vWVhCbFIyVnZiV1YwY25rb0tTQnBibk4wWldGa0xpSXBMQ0J1WlhjZ1JHa29kR2hwY3l3Z2N5azdDbjA3Q2xndWNISnZkRzkwZVhCbExtWnliMjFCZEhSeWFXSjFkR1VnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXlPaUF1Wm5KdmJVRjBkSEpwWW5WMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG1aeWIyMUNkV1ptWlhKQmRIUnlhV0oxZEdVb0tTNGlLU3dnZEdocGN5NW1jbTl0UW5WbVptVnlRWFIwY21saWRYUmxLSE1zSUdVc0lIUXBPd3A5T3dwWUxuQnliM1J2ZEhsd1pTNWthWE4wWVc1alpWUnZUV0Z1YUdGMGRHRnVJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNam9nTG1ScGMzUmhibU5sVkc5TllXNW9ZWFIwWVc0b0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV0WVc1b1lYUjBZVzVFYVhOMFlXNWpaVlJ2S0NrdUlpa3NJSFJvYVhNdWJXRnVhR0YwZEdGdVJHbHpkR0Z1WTJWVWJ5aHpLVHNLZlRzS1dDNXdjbTkwYjNSNWNHVXViR1Z1WjNSb1RXRnVhR0YwZEdGdUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJeU9pQXViR1Z1WjNSb1RXRnVhR0YwZEdGdUtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1YldGdWFHRjBkR0Z1VEdWdVozUm9LQ2t1SWlrc0lIUm9hWE11YldGdWFHRjBkR0Z1VEdWdVozUm9LQ2s3Q24wN0NrMHVjSEp2ZEc5MGVYQmxMbk5sZEVWMWJHVnlSbkp2YlZKdmRHRjBhVzl1VFdGMGNtbDRJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdWMyVjBSWFZzWlhKR2NtOXRVbTkwWVhScGIyNU5ZWFJ5YVhnb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnUlhWc1pYSXVjMlYwUm5KdmJWSnZkR0YwYVc5dVRXRjBjbWw0S0NrZ2FXNXpkR1ZoWkM0aUtUc0tmVHNLVFM1d2NtOTBiM1I1Y0dVdWMyVjBSWFZzWlhKR2NtOXRVWFZoZEdWeWJtbHZiaUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVZtVmpkRzl5TXpvZ0xuTmxkRVYxYkdWeVJuSnZiVkYxWVhSbGNtNXBiMjRvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdSWFZzWlhJdWMyVjBSbkp2YlZGMVlYUmxjbTVwYjI0b0tTQnBibk4wWldGa0xpSXBPd3A5T3dwTkxuQnliM1J2ZEhsd1pTNW5aWFJRYjNOcGRHbHZia1p5YjIxTllYUnlhWGdnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdVoyVjBVRzl6YVhScGIyNUdjbTl0VFdGMGNtbDRLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdWMyVjBSbkp2YlUxaGRISnBlRkJ2YzJsMGFXOXVLQ2t1SWlrc0lIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVGQnZjMmwwYVc5dUtITXBPd3A5T3dwTkxuQnliM1J2ZEhsd1pTNW5aWFJUWTJGc1pVWnliMjFOWVhSeWFYZ2dQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVXWldOMGIzSXpPaUF1WjJWMFUyTmhiR1ZHY205dFRXRjBjbWw0S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVjMlYwUm5KdmJVMWhkSEpwZUZOallXeGxLQ2t1SWlrc0lIUm9hWE11YzJWMFJuSnZiVTFoZEhKcGVGTmpZV3hsS0hNcE93cDlPd3BOTG5CeWIzUnZkSGx3WlM1blpYUkRiMngxYlc1R2NtOXRUV0YwY21sNElEMGdablZ1WTNScGIyNG9jeXdnWlNrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1kbGRFTnZiSFZ0YmtaeWIyMU5ZWFJ5YVhnb0tTQm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzV6WlhSR2NtOXRUV0YwY21sNFEyOXNkVzF1S0NrdUlpa3NJSFJvYVhNdWMyVjBSbkp2YlUxaGRISnBlRU52YkhWdGJpaGxMQ0J6S1RzS2ZUc0tUUzV3Y205MGIzUjVjR1V1WVhCd2JIbFFjbTlxWldOMGFXOXVJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlNem9nTG1Gd2NHeDVVSEp2YW1WamRHbHZiaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQXVZWEJ3YkhsTllYUnlhWGcwS0NCdElDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NWhjSEJzZVUxaGRISnBlRFFvY3lrN0NuMDdDazB1Y0hKdmRHOTBlWEJsTG1aeWIyMUJkSFJ5YVdKMWRHVWdQU0JtZFc1amRHbHZiaWh6TENCbExDQjBLU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVdaV04wYjNJek9pQXVabkp2YlVGMGRISnBZblYwWlNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbVp5YjIxQ2RXWm1aWEpCZEhSeWFXSjFkR1VvS1M0aUtTd2dkR2hwY3k1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtITXNJR1VzSUhRcE93cDlPd3BOTG5CeWIzUnZkSGx3WlM1a2FYTjBZVzVqWlZSdlRXRnVhR0YwZEdGdUlEMGdablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU16b2dMbVJwYzNSaGJtTmxWRzlOWVc1b1lYUjBZVzRvS1NCb1lYTWdZbVZsYmlCeVpXNWhiV1ZrSUhSdklDNXRZVzVvWVhSMFlXNUVhWE4wWVc1alpWUnZLQ2t1SWlrc0lIUm9hWE11YldGdWFHRjBkR0Z1UkdsemRHRnVZMlZVYnloektUc0tmVHNLVFM1d2NtOTBiM1I1Y0dVdWJHVnVaM1JvVFdGdWFHRjBkR0Z1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1V1pXTjBiM0l6T2lBdWJHVnVaM1JvVFdGdWFHRjBkR0Z1S0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXViV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDa3VJaWtzSUhSb2FYTXViV0Z1YUdGMGRHRnVUR1Z1WjNSb0tDazdDbjA3Q2xabExuQnliM1J2ZEhsd1pTNW1jbTl0UVhSMGNtbGlkWFJsSUQwZ1puVnVZM1JwYjI0b2N5d2daU3dnZENrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1Vm1WamRHOXlORG9nTG1aeWIyMUJkSFJ5YVdKMWRHVW9LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1bWNtOXRRblZtWm1WeVFYUjBjbWxpZFhSbEtDa3VJaWtzSUhSb2FYTXVabkp2YlVKMVptWmxja0YwZEhKcFluVjBaU2h6TENCbExDQjBLVHNLZlRzS1ZtVXVjSEp2ZEc5MGVYQmxMbXhsYm1kMGFFMWhibWhoZEhSaGJpQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWbVZqZEc5eU5Eb2dMbXhsYm1kMGFFMWhibWhoZEhSaGJpZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG0xaGJtaGhkSFJoYmt4bGJtZDBhQ2dwTGlJcExDQjBhR2x6TG0xaGJtaGhkSFJoYmt4bGJtZDBhQ2dwT3dwOU93cE9aUzV3Y205MGIzUjVjR1V1WjJWMFEyaHBiR1JDZVU1aGJXVWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVQWW1wbFkzUXpSRG9nTG1kbGRFTm9hV3hrUW5sT1lXMWxLQ2tnYUdGeklHSmxaVzRnY21WdVlXMWxaQ0IwYnlBdVoyVjBUMkpxWldOMFFubE9ZVzFsS0NrdUlpa3NJSFJvYVhNdVoyVjBUMkpxWldOMFFubE9ZVzFsS0hNcE93cDlPd3BPWlM1d2NtOTBiM1I1Y0dVdWNtVnVaR1Z5UkdWd2RHZ2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBNMFE2SUM1eVpXNWtaWEpFWlhCMGFDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG5KbGJtUmxjazl5WkdWeUxDQnBibk4wWldGa0xpSXBPd3A5T3dwT1pTNXdjbTkwYjNSNWNHVXVkSEpoYm5Oc1lYUmxJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wTTBRNklDNTBjbUZ1YzJ4aGRHVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ0xuUnlZVzV6YkdGMFpVOXVRWGhwY3lnZ1lYaHBjeXdnWkdsemRHRnVZMlVnS1NCcGJuTjBaV0ZrTGlJcExDQjBhR2x6TG5SeVlXNXpiR0YwWlU5dVFYaHBjeWhsTENCektUc0tmVHNLVG1VdWNISnZkRzkwZVhCbExtZGxkRmR2Y214a1VtOTBZWFJwYjI0Z1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1WjJWMFYyOXliR1JTYjNSaGRHbHZiaWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQlVTRkpGUlM1UFltcGxZM1F6UkM1blpYUlhiM0pzWkZGMVlYUmxjbTVwYjI0b0lIUmhjbWRsZENBcElHbHVjM1JsWVdRdUlpazdDbjA3Q2s1bExuQnliM1J2ZEhsd1pTNWhjSEJzZVUxaGRISnBlQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGs5aWFtVmpkRE5FT2lBdVlYQndiSGxOWVhSeWFYZ29LU0JvWVhNZ1ltVmxiaUJ5Wlc1aGJXVmtJSFJ2SUM1aGNIQnNlVTFoZEhKcGVEUW9LUzRpS1N3Z2RHaHBjeTVoY0hCc2VVMWhkSEpwZURRb2N5azdDbjA3Q2s5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGFXVnpLRTVsTG5CeWIzUnZkSGx3WlN3Z2V3b2dJQ0FnWlhWc1pYSlBjbVJsY2pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazlpYW1WamRETkVPaUF1WlhWc1pYSlBjbVJsY2lCcGN5QnViM2NnTG5KdmRHRjBhVzl1TG05eVpHVnlMaUlwTENCMGFHbHpMbkp2ZEdGMGFXOXVMbTl5WkdWeU93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVQySnFaV04wTTBRNklDNWxkV3hsY2s5eVpHVnlJR2x6SUc1dmR5QXVjbTkwWVhScGIyNHViM0prWlhJdUlpa3NJSFJvYVhNdWNtOTBZWFJwYjI0dWIzSmtaWElnUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0IxYzJWUmRXRjBaWEp1YVc5dU9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1UFltcGxZM1F6UkRvZ0xuVnpaVkYxWVhSbGNtNXBiMjRnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVkdobElHeHBZbkpoY25rZ2JtOTNJSFZ6WlhNZ2NYVmhkR1Z5Ym1sdmJuTWdZbmtnWkdWbVlYVnNkQzRpS1RzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VDJKcVpXTjBNMFE2SUM1MWMyVlJkV0YwWlhKdWFXOXVJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRlJvWlNCc2FXSnlZWEo1SUc1dmR5QjFjMlZ6SUhGMVlYUmxjbTVwYjI1eklHSjVJR1JsWm1GMWJIUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5S1RzS2MzUXVjSEp2ZEc5MGVYQmxMbk5sZEVSeVlYZE5iMlJsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNU5aWE5vT2lBdWMyVjBSSEpoZDAxdlpHVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJVYUdVZ2NtVnVaR1Z5WlhJZ2JtOTNJR0ZzZDJGNWN5QmhjM04xYldWeklGUklVa1ZGTGxSeWFXRnVaMnhsYzBSeVlYZE5iMlJsTGlCVWNtRnVjMlp2Y20wZ2VXOTFjaUJuWlc5dFpYUnllU0IyYVdFZ1FuVm1abVZ5UjJWdmJXVjBjbmxWZEdsc2N5NTBiMVJ5YVdGdVoyeGxjMFJ5WVhkTmIyUmxLQ2tnYVdZZ2JtVmpaWE56WVhKNUxpSXBPd3A5T3dwUFltcGxZM1F1WkdWbWFXNWxVSEp2Y0dWeWRHbGxjeWh6ZEM1d2NtOTBiM1I1Y0dVc0lIc0tJQ0FnSUdSeVlYZE5iMlJsT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMazFsYzJnNklDNWtjbUYzVFc5a1pTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlVhR1VnY21WdVpHVnlaWElnYm05M0lHRnNkMkY1Y3lCaGMzTjFiV1Z6SUZSSVVrVkZMbFJ5YVdGdVoyeGxjMFJ5WVhkTmIyUmxMaUlwTENCR1pEc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrMWxjMmc2SUM1a2NtRjNUVzlrWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVWFHVWdjbVZ1WkdWeVpYSWdibTkzSUdGc2QyRjVjeUJoYzNOMWJXVnpJRlJJVWtWRkxsUnlhV0Z1WjJ4bGMwUnlZWGROYjJSbExpQlVjbUZ1YzJadmNtMGdlVzkxY2lCblpXOXRaWFJ5ZVNCMmFXRWdRblZtWm1WeVIyVnZiV1YwY25sVmRHbHNjeTUwYjFSeWFXRnVaMnhsYzBSeVlYZE5iMlJsS0NrZ2FXWWdibVZqWlhOellYSjVMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlNrN0NuTnZMbkJ5YjNSdmRIbHdaUzVwYm1sMFFtOXVaWE1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxsTnJhVzV1WldSTlpYTm9PaUJwYm1sMFFtOXVaWE1vS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3AxZEM1d2NtOTBiM1I1Y0dVdWMyVjBUR1Z1Y3lBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VUdWeWMzQmxZM1JwZG1WRFlXMWxjbUV1YzJWMFRHVnVjeUJwY3lCa1pYQnlaV05oZEdWa0xpQlZjMlVnTG5ObGRFWnZZMkZzVEdWdVozUm9JR0Z1WkNBdVptbHNiVWRoZFdkbElHWnZjaUJoSUhCb2IzUnZaM0poY0docFl5QnpaWFIxY0M0aUtTd2daU0FoUFQwZ2RtOXBaQ0F3SUNZbUlDaDBhR2x6TG1acGJHMUhZWFZuWlNBOUlHVXBMQ0IwYUdsekxuTmxkRVp2WTJGc1RHVnVaM1JvS0hNcE93cDlPd3BQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aENkQzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJRzl1YkhsVGFHRmtiM2M2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa3hwWjJoME9pQXViMjVzZVZOb1lXUnZkeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnphR0ZrYjNkRFlXMWxjbUZHYjNZNklIc0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TWFXZG9kRG9nTG5Ob1lXUnZkME5oYldWeVlVWnZkaUJwY3lCdWIzY2dMbk5vWVdSdmR5NWpZVzFsY21FdVptOTJMaUlwTENCMGFHbHpMbk5vWVdSdmR5NWpZVzFsY21FdVptOTJJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1EyRnRaWEpoVEdWbWREb2dld29nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBaMmgwT2lBdWMyaGhaRzkzUTJGdFpYSmhUR1ZtZENCcGN5QnViM2NnTG5Ob1lXUnZkeTVqWVcxbGNtRXViR1ZtZEM0aUtTd2dkR2hwY3k1emFHRmtiM2N1WTJGdFpYSmhMbXhsWm5RZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2REWVcxbGNtRlNhV2RvZERvZ2V3b2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGt4cFoyaDBPaUF1YzJoaFpHOTNRMkZ0WlhKaFVtbG5hSFFnYVhNZ2JtOTNJQzV6YUdGa2IzY3VZMkZ0WlhKaExuSnBaMmgwTGlJcExDQjBhR2x6TG5Ob1lXUnZkeTVqWVcxbGNtRXVjbWxuYUhRZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCemFHRmtiM2REWVcxbGNtRlViM0E2SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwTmhiV1Z5WVZSdmNDQnBjeUJ1YjNjZ0xuTm9ZV1J2ZHk1allXMWxjbUV1ZEc5d0xpSXBMQ0IwYUdsekxuTm9ZV1J2ZHk1allXMWxjbUV1ZEc5d0lEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzUTJGdFpYSmhRbTkwZEc5dE9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2REWVcxbGNtRkNiM1IwYjIwZ2FYTWdibTkzSUM1emFHRmtiM2N1WTJGdFpYSmhMbUp2ZEhSdmJTNGlLU3dnZEdocGN5NXphR0ZrYjNjdVkyRnRaWEpoTG1KdmRIUnZiU0E5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwTmhiV1Z5WVU1bFlYSTZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNU1hV2RvZERvZ0xuTm9ZV1J2ZDBOaGJXVnlZVTVsWVhJZ2FYTWdibTkzSUM1emFHRmtiM2N1WTJGdFpYSmhMbTVsWVhJdUlpa3NJSFJvYVhNdWMyaGhaRzkzTG1OaGJXVnlZUzV1WldGeUlEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaRzkzUTJGdFpYSmhSbUZ5T2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VEdsbmFIUTZJQzV6YUdGa2IzZERZVzFsY21GR1lYSWdhWE1nYm05M0lDNXphR0ZrYjNjdVkyRnRaWEpoTG1aaGNpNGlLU3dnZEdocGN5NXphR0ZrYjNjdVkyRnRaWEpoTG1aaGNpQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDBOaGJXVnlZVlpwYzJsaWJHVTZJSHNLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxreHBaMmgwT2lBdWMyaGhaRzkzUTJGdFpYSmhWbWx6YVdKc1pTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnYm1WM0lGUklVa1ZGTGtOaGJXVnlZVWhsYkhCbGNpZ2diR2xuYUhRdWMyaGhaRzkzTG1OaGJXVnlZU0FwSUdsdWMzUmxZV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE5vWVdSdmQwSnBZWE02SUhzS0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLSE1wSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwSnBZWE1nYVhNZ2JtOTNJQzV6YUdGa2IzY3VZbWxoY3k0aUtTd2dkR2hwY3k1emFHRmtiM2N1WW1saGN5QTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lITm9ZV1J2ZDBSaGNtdHVaWE56T2lCN0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVNYVdkb2REb2dMbk5vWVdSdmQwUmhjbXR1WlhOeklHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkMDFoY0ZkcFpIUm9PaUI3Q2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUR2xuYUhRNklDNXphR0ZrYjNkTllYQlhhV1IwYUNCcGN5QnViM2NnTG5Ob1lXUnZkeTV0WVhCVGFYcGxMbmRwWkhSb0xpSXBMQ0IwYUdsekxuTm9ZV1J2ZHk1dFlYQlRhWHBsTG5kcFpIUm9JRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1RXRndTR1ZwWjJoME9pQjdDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRHbG5hSFE2SUM1emFHRmtiM2ROWVhCSVpXbG5hSFFnYVhNZ2JtOTNJQzV6YUdGa2IzY3ViV0Z3VTJsNlpTNW9aV2xuYUhRdUlpa3NJSFJvYVhNdWMyaGhaRzkzTG0xaGNGTnBlbVV1YUdWcFoyaDBJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5Q24wcE93cFBZbXBsWTNRdVpHVm1hVzVsVUhKdmNHVnlkR2xsY3loVlpTNXdjbTkwYjNSNWNHVXNJSHNLSUNBZ0lHeGxibWQwYURvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dMbXhsYm1kMGFDQm9ZWE1nWW1WbGJpQmtaWEJ5WldOaGRHVmtMaUJWYzJVZ0xtTnZkVzUwSUdsdWMzUmxZV1F1SWlrc0lIUm9hWE11WVhKeVlYa3ViR1Z1WjNSb093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JrZVc1aGJXbGpPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lBdVpIbHVZVzFwWXlCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnTG5WellXZGxJR2x1YzNSbFlXUXVJaWtzSUhSb2FYTXVkWE5oWjJVZ1BUMDlJSFZ5T3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVTZJQzVrZVc1aGJXbGpJR2hoY3lCaVpXVnVJR1JsY0hKbFkyRjBaV1F1SUZWelpTQXVkWE5oWjJVZ2FXNXpkR1ZoWkM0aUtTd2dkR2hwY3k1elpYUlZjMkZuWlNoMWNpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRcDlLVHNLVldVdWNISnZkRzkwZVhCbExuTmxkRVI1Ym1GdGFXTWdQU0JtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkJkSFJ5YVdKMWRHVTZJQzV6WlhSRWVXNWhiV2xqS0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUM1elpYUlZjMkZuWlNncElHbHVjM1JsWVdRdUlpa3NJSFJvYVhNdWMyVjBWWE5oWjJVb2N5QTlQVDBnSVRBZ1B5QjFjaUE2SUdoeUtTd2dkR2hwY3pzS2ZUc0tWV1V1Y0hKdmRHOTBlWEJsTG1OdmNIbEpibVJwWTJWelFYSnlZWGtnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9JbFJJVWtWRkxrSjFabVpsY2tGMGRISnBZblYwWlRvZ0xtTnZjSGxKYm1ScFkyVnpRWEp5WVhrb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5TENCVlpTNXdjbTkwYjNSNWNHVXVjMlYwUVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtKMVptWmxja0YwZEhKcFluVjBaVG9nTG5ObGRFRnljbUY1SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZWelpTQkNkV1ptWlhKSFpXOXRaWFJ5ZVNBdWMyVjBRWFIwY21saWRYUmxJSFJ2SUhKbGNHeGhZMlV2Y21WemFYcGxJR0YwZEhKcFluVjBaU0JpZFdabVpYSnpJaWs3Q24wN0NsOWxMbkJ5YjNSdmRIbHdaUzVoWkdSSmJtUmxlQ0E5SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbms2SUM1aFpHUkpibVJsZUNncElHaGhjeUJpWldWdUlISmxibUZ0WldRZ2RHOGdMbk5sZEVsdVpHVjRLQ2t1SWlrc0lIUm9hWE11YzJWMFNXNWtaWGdvY3lrN0NuMDdDbDlsTG5CeWIzUnZkSGx3WlM1aFpHUkJkSFJ5YVdKMWRHVWdQU0JtZFc1amRHbHZiaWh6TENCbEtTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1Ga1pFRjBkSEpwWW5WMFpTZ3BJR2hoY3lCaVpXVnVJSEpsYm1GdFpXUWdkRzhnTG5ObGRFRjBkSEpwWW5WMFpTZ3BMaUlwTENBaEtHVWdKaVlnWlM1cGMwSjFabVpsY2tGMGRISnBZblYwWlNrZ0ppWWdJU2hsSUNZbUlHVXVhWE5KYm5SbGNteGxZWFpsWkVKMVptWmxja0YwZEhKcFluVjBaU2tnUHlBb1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtRmtaRUYwZEhKcFluVjBaU2dwSUc1dmR5QmxlSEJsWTNSeklDZ2dibUZ0WlN3Z1lYUjBjbWxpZFhSbElDa3VJaWtzSUhSb2FYTXVjMlYwUVhSMGNtbGlkWFJsS0hNc0lHNWxkeUJWWlNoaGNtZDFiV1Z1ZEhOYk1WMHNJR0Z5WjNWdFpXNTBjMXN5WFNrcEtTQTZJSE1nUFQwOUlDSnBibVJsZUNJZ1B5QW9ZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVTNWhaR1JCZEhSeWFXSjFkR1U2SUZWelpTQXVjMlYwU1c1a1pYZ29LU0JtYjNJZ2FXNWtaWGdnWVhSMGNtbGlkWFJsTGlJcExDQjBhR2x6TG5ObGRFbHVaR1Y0S0dVcExDQjBhR2x6S1NBNklIUm9hWE11YzJWMFFYUjBjbWxpZFhSbEtITXNJR1VwT3dwOU93cGZaUzV3Y205MGIzUjVjR1V1WVdSa1JISmhkME5oYkd3Z1BTQm1kVzVqZEdsdmJpaHpMQ0JsTENCMEtTQjdDaUFnSUNCMElDRTlQU0IyYjJsa0lEQWdKaVlnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1Ga1pFUnlZWGREWVd4c0tDa2dibThnYkc5dVoyVnlJSE4xY0hCdmNuUnpJR2x1WkdWNFQyWm1jMlYwTGlJcExDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0oxWm1abGNrZGxiMjFsZEhKNU9pQXVZV1JrUkhKaGQwTmhiR3dvS1NCcGN5QnViM2NnTG1Ga1pFZHliM1Z3S0NrdUlpa3NJSFJvYVhNdVlXUmtSM0p2ZFhBb2N5d2daU2s3Q24wN0NsOWxMbkJ5YjNSdmRIbHdaUzVqYkdWaGNrUnlZWGREWVd4c2N5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVDZFdabVpYSkhaVzl0WlhSeWVUb2dMbU5zWldGeVJISmhkME5oYkd4ektDa2dhWE1nYm05M0lDNWpiR1ZoY2tkeWIzVndjeWdwTGlJcExDQjBhR2x6TG1Oc1pXRnlSM0p2ZFhCektDazdDbjA3Q2w5bExuQnliM1J2ZEhsd1pTNWpiMjF3ZFhSbFQyWm1jMlYwY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtTnZiWEIxZEdWUFptWnpaWFJ6S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLWDJVdWNISnZkRzkwZVhCbExuSmxiVzkyWlVGMGRISnBZblYwWlNBOUlHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrSjFabVpsY2tkbGIyMWxkSEo1T2lBdWNtVnRiM1psUVhSMGNtbGlkWFJsS0NrZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVaR1ZzWlhSbFFYUjBjbWxpZFhSbEtDa3VJaWtzSUhSb2FYTXVaR1ZzWlhSbFFYUjBjbWxpZFhSbEtITXBPd3A5T3dwZlpTNXdjbTkwYjNSNWNHVXVZWEJ3YkhsTllYUnlhWGdnUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1Q2RXWm1aWEpIWlc5dFpYUnllVG9nTG1Gd2NHeDVUV0YwY21sNEtDa2dhR0Z6SUdKbFpXNGdjbVZ1WVcxbFpDQjBieUF1WVhCd2JIbE5ZWFJ5YVhnMEtDa3VJaWtzSUhSb2FYTXVZWEJ3YkhsTllYUnlhWGcwS0hNcE93cDlPd3BQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aGZaUzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJR1J5WVhkallXeHNjem9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUNkV1ptWlhKSFpXOXRaWFJ5ZVRvZ0xtUnlZWGRqWVd4c2N5Qm9ZWE1nWW1WbGJpQnlaVzVoYldWa0lIUnZJQzVuY205MWNITXVJaWtzSUhSb2FYTXVaM0p2ZFhCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0J2Wm1aelpYUnpPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVFuVm1abVZ5UjJWdmJXVjBjbms2SUM1dlptWnpaWFJ6SUdoaGN5QmlaV1Z1SUhKbGJtRnRaV1FnZEc4Z0xtZHliM1Z3Y3k0aUtTd2dkR2hwY3k1bmNtOTFjSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5S1RzS0pHNHVjSEp2ZEc5MGVYQmxMbk5sZEVSNWJtRnRhV01nUFNCbWRXNWpkR2x2YmloektTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJuUmxjbXhsWVhabFpFSjFabVpsY2pvZ0xuTmxkRVI1Ym1GdGFXTW9LU0JvWVhNZ1ltVmxiaUJrWlhCeVpXTmhkR1ZrTGlCVmMyVWdMbk5sZEZWellXZGxLQ2tnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV6WlhSVmMyRm5aU2h6SUQwOVBTQWhNQ0EvSUhWeUlEb2dhSElwTENCMGFHbHpPd3A5T3dva2JpNXdjbTkwYjNSNWNHVXVjMlYwUVhKeVlYa2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGtsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5T2lBdWMyVjBRWEp5WVhrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0Z1ZYTmxJRUoxWm1abGNrZGxiMjFsZEhKNUlDNXpaWFJCZEhSeWFXSjFkR1VnZEc4Z2NtVndiR0ZqWlM5eVpYTnBlbVVnWVhSMGNtbGlkWFJsSUdKMVptWmxjbk1pS1RzS2ZUc0tiRzR1Y0hKdmRHOTBlWEJsTG1kbGRFRnljbUY1Y3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWdpVkVoU1JVVXVSWGgwY25Wa1pVZGxiMjFsZEhKNU9pQXVaMlYwUVhKeVlYbHpLQ2tnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS2ZUc0tiRzR1Y0hKdmRHOTBlWEJsTG1Ga1pGTm9ZWEJsVEdsemRDQTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1UlhoMGNuVmtaVWRsYjIxbGRISjVPaUF1WVdSa1UyaGhjR1ZNYVhOMEtDa2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlRzS2JHNHVjSEp2ZEc5MGVYQmxMbUZrWkZOb1lYQmxJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1RmVIUnlkV1JsUjJWdmJXVjBjbms2SUM1aFpHUlRhR0Z3WlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q201dkxuQnliM1J2ZEhsd1pTNWthWE53YjNObElEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0NKVVNGSkZSUzVUWTJWdVpUb2dMbVJwYzNCdmMyVW9LU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dwOU93cG5ieTV3Y205MGIzUjVjR1V1YjI1VmNHUmhkR1VnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxWdWFXWnZjbTA2SUM1dmJsVndaR0YwWlNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGVnpaU0J2WW1wbFkzUXViMjVDWldadmNtVlNaVzVrWlhJb0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsek93cDlPd3BQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEdsbGN5aGtkQzV3Y205MGIzUjVjR1VzSUhzS0lDQWdJSGR5WVhCQmNtOTFibVE2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMazFoZEdWeWFXRnNPaUF1ZDNKaGNFRnliM1Z1WkNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1TllYUmxjbWxoYkRvZ0xuZHlZWEJCY205MWJtUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2IzWmxjbVJ5WVhjNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGsxaGRHVnlhV0ZzT2lBdWIzWmxjbVJ5WVhjZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVRXRjBaWEpwWVd3NklDNXZkbVZ5WkhKaGR5Qm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCM2NtRndVa2RDT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVUV0YwWlhKcFlXdzZJQzUzY21Gd1VrZENJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWtzSUc1bGR5QmhaVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2MyaGhaR2x1WnpvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGlJZ0t5QjBhR2x6TG5SNWNHVWdLeUFpT2lBdWMyaGhaR2x1WnlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdkR2hsSUdKdmIyeGxZVzRnTG1ac1lYUlRhR0ZrYVc1bklHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNGlJQ3NnZEdocGN5NTBlWEJsSUNzZ0lqb2dMbk5vWVdScGJtY2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUhSb1pTQmliMjlzWldGdUlDNW1iR0YwVTJoaFpHbHVaeUJwYm5OMFpXRmtMaUlwTENCMGFHbHpMbVpzWVhSVGFHRmthVzVuSUQwZ2N5QTlQVDBnYTJNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSE4wWlc1amFXeE5ZWE5yT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVJaUFySUhSb2FYTXVkSGx3WlNBcklDSTZJQzV6ZEdWdVkybHNUV0Z6YXlCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdMbk4wWlc1amFXeEdkVzVqVFdGemF5QnBibk4wWldGa0xpSXBMQ0IwYUdsekxuTjBaVzVqYVd4R2RXNWpUV0Z6YXpzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGlJZ0t5QjBhR2x6TG5SNWNHVWdLeUFpT2lBdWMzUmxibU5wYkUxaGMyc2dhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdWWE5sSUM1emRHVnVZMmxzUm5WdVkwMWhjMnNnYVc1emRHVmhaQzRpS1N3Z2RHaHBjeTV6ZEdWdVkybHNSblZ1WTAxaGMyc2dQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQjJaWEowWlhoVVlXNW5aVzUwY3pvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1SWlBcklIUm9hWE11ZEhsd1pTQXJJQ0k2SUM1MlpYSjBaWGhVWVc1blpXNTBjeUJvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUlwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzRpSUNzZ2RHaHBjeTUwZVhCbElDc2dJam9nTG5abGNuUmxlRlJoYm1kbGJuUnpJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmUXA5S1RzS1QySnFaV04wTG1SbFptbHVaVkJ5YjNCbGNuUnBaWE1vYzI0dWNISnZkRzkwZVhCbExDQjdDaUFnSUNCa1pYSnBkbUYwYVhabGN6b2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxOb1lXUmxjazFoZEdWeWFXRnNPaUF1WkdWeWFYWmhkR2wyWlhNZ2FHRnpJR0psWlc0Z2JXOTJaV1FnZEc4Z0xtVjRkR1Z1YzJsdmJuTXVaR1Z5YVhaaGRHbDJaWE11SWlrc0lIUm9hWE11WlhoMFpXNXphVzl1Y3k1a1pYSnBkbUYwYVhabGN6c0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxpQlRhR0ZrWlhKTllYUmxjbWxoYkRvZ0xtUmxjbWwyWVhScGRtVnpJR2hoY3lCaVpXVnVJRzF2ZG1Wa0lIUnZJQzVsZUhSbGJuTnBiMjV6TG1SbGNtbDJZWFJwZG1WekxpSXBMQ0IwYUdsekxtVjRkR1Z1YzJsdmJuTXVaR1Z5YVhaaGRHbDJaWE1nUFNCek93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZTazdDbkZsTG5CeWIzUnZkSGx3WlM1amJHVmhjbFJoY21kbGRDQTlJR1oxYm1OMGFXOXVLSE1zSUdVc0lIUXNJRzRwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbU5zWldGeVZHRnlaMlYwS0NrZ2FHRnpJR0psWlc0Z1pHVndjbVZqWVhSbFpDNGdWWE5sSUM1elpYUlNaVzVrWlhKVVlYSm5aWFFvS1NCaGJtUWdMbU5zWldGeUtDa2dhVzV6ZEdWaFpDNGlLU3dnZEdocGN5NXpaWFJTWlc1a1pYSlVZWEpuWlhRb2N5a3NJSFJvYVhNdVkyeGxZWElvWlN3Z2RDd2diaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVoYm1sdFlYUmxJRDBnWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WVc1cGJXRjBaU2dwSUdseklHNXZkeUF1YzJWMFFXNXBiV0YwYVc5dVRHOXZjQ2dwTGlJcExDQjBhR2x6TG5ObGRFRnVhVzFoZEdsdmJreHZiM0FvY3lrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1blpYUkRkWEp5Wlc1MFVtVnVaR1Z5VkdGeVoyVjBJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMlYwUTNWeWNtVnVkRkpsYm1SbGNsUmhjbWRsZENncElHbHpJRzV2ZHlBdVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0NrdUlpa3NJSFJvYVhNdVoyVjBVbVZ1WkdWeVZHRnlaMlYwS0NrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1blpYUk5ZWGhCYm1semIzUnliM0I1SUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1WjJWMFRXRjRRVzVwYzI5MGNtOXdlU2dwSUdseklHNXZkeUF1WTJGd1lXSnBiR2wwYVdWekxtZGxkRTFoZUVGdWFYTnZkSEp2Y0hrb0tTNGlLU3dnZEdocGN5NWpZWEJoWW1sc2FYUnBaWE11WjJWMFRXRjRRVzVwYzI5MGNtOXdlU2dwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1WjJWMFVISmxZMmx6YVc5dUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyVjBVSEpsWTJsemFXOXVLQ2tnYVhNZ2JtOTNJQzVqWVhCaFltbHNhWFJwWlhNdWNISmxZMmx6YVc5dUxpSXBMQ0IwYUdsekxtTmhjR0ZpYVd4cGRHbGxjeTV3Y21WamFYTnBiMjQ3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzV5WlhObGRFZE1VM1JoZEdVZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1eVpYTmxkRWRNVTNSaGRHVW9LU0JwY3lCdWIzY2dMbk4wWVhSbExuSmxjMlYwS0NrdUlpa3NJSFJvYVhNdWMzUmhkR1V1Y21WelpYUW9LVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk4xY0hCdmNuUnpSbXh2WVhSVVpYaDBkWEpsY3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5OMWNIQnZjblJ6Um14dllYUlVaWGgwZFhKbGN5Z3BJR2x6SUc1dmR5QXVaWGgwWlc1emFXOXVjeTVuWlhRb0lDZFBSVk5mZEdWNGRIVnlaVjltYkc5aGRDY2dLUzRpS1N3Z2RHaHBjeTVsZUhSbGJuTnBiMjV6TG1kbGRDZ2lUMFZUWDNSbGVIUjFjbVZmWm14dllYUWlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk4xY0hCdmNuUnpTR0ZzWmtac2IyRjBWR1Y0ZEhWeVpYTWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXpkWEJ3YjNKMGMwaGhiR1pHYkc5aGRGUmxlSFIxY21WektDa2dhWE1nYm05M0lDNWxlSFJsYm5OcGIyNXpMbWRsZENnZ0owOUZVMTkwWlhoMGRYSmxYMmhoYkdaZlpteHZZWFFuSUNrdUlpa3NJSFJvYVhNdVpYaDBaVzV6YVc5dWN5NW5aWFFvSWs5RlUxOTBaWGgwZFhKbFgyaGhiR1pmWm14dllYUWlLVHNLZlRzS2NXVXVjSEp2ZEc5MGVYQmxMbk4xY0hCdmNuUnpVM1JoYm1SaGNtUkVaWEpwZG1GMGFYWmxjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk4xY0hCdmNuUnpVM1JoYm1SaGNtUkVaWEpwZG1GMGFYWmxjeWdwSUdseklHNXZkeUF1WlhoMFpXNXphVzl1Y3k1blpYUW9JQ2RQUlZOZmMzUmhibVJoY21SZlpHVnlhWFpoZEdsMlpYTW5JQ2t1SWlrc0lIUm9hWE11WlhoMFpXNXphVzl1Y3k1blpYUW9JazlGVTE5emRHRnVaR0Z5WkY5a1pYSnBkbUYwYVhabGN5SXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVjM1Z3Y0c5eWRITkRiMjF3Y21WemMyVmtWR1Y0ZEhWeVpWTXpWRU1nUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6ZFhCd2IzSjBjME52YlhCeVpYTnpaV1JVWlhoMGRYSmxVek5VUXlncElHbHpJRzV2ZHlBdVpYaDBaVzV6YVc5dWN5NW5aWFFvSUNkWFJVSkhURjlqYjIxd2NtVnpjMlZrWDNSbGVIUjFjbVZmY3pOMFl5Y2dLUzRpS1N3Z2RHaHBjeTVsZUhSbGJuTnBiMjV6TG1kbGRDZ2lWMFZDUjB4ZlkyOXRjSEpsYzNObFpGOTBaWGgwZFhKbFgzTXpkR01pS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG5OMWNIQnZjblJ6UTI5dGNISmxjM05sWkZSbGVIUjFjbVZRVmxKVVF5QTlJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdjbVYwZFhKdUlHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTjFjSEJ2Y25SelEyOXRjSEpsYzNObFpGUmxlSFIxY21WUVZsSlVReWdwSUdseklHNXZkeUF1WlhoMFpXNXphVzl1Y3k1blpYUW9JQ2RYUlVKSFRGOWpiMjF3Y21WemMyVmtYM1JsZUhSMWNtVmZjSFp5ZEdNbklDa3VJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVuWlhRb0lsZEZRa2RNWDJOdmJYQnlaWE56WldSZmRHVjRkSFZ5WlY5d2RuSjBZeUlwT3dwOU93cHhaUzV3Y205MGIzUjVjR1V1YzNWd2NHOXlkSE5DYkdWdVpFMXBiazFoZUNBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5OMWNIQnZjblJ6UW14bGJtUk5hVzVOWVhnb0tTQnBjeUJ1YjNjZ0xtVjRkR1Z1YzJsdmJuTXVaMlYwS0NBblJWaFVYMkpzWlc1a1gyMXBibTFoZUNjZ0tTNGlLU3dnZEdocGN5NWxlSFJsYm5OcGIyNXpMbWRsZENnaVJWaFVYMkpzWlc1a1gyMXBibTFoZUNJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWMzVndjRzl5ZEhOV1pYSjBaWGhVWlhoMGRYSmxjeUE5SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk4xY0hCdmNuUnpWbVZ5ZEdWNFZHVjRkSFZ5WlhNb0tTQnBjeUJ1YjNjZ0xtTmhjR0ZpYVd4cGRHbGxjeTUyWlhKMFpYaFVaWGgwZFhKbGN5NGlLU3dnZEdocGN5NWpZWEJoWW1sc2FYUnBaWE11ZG1WeWRHVjRWR1Y0ZEhWeVpYTTdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNXpkWEJ3YjNKMGMwbHVjM1JoYm1ObFpFRnljbUY1Y3lBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5OMWNIQnZjblJ6U1c1emRHRnVZMlZrUVhKeVlYbHpLQ2tnYVhNZ2JtOTNJQzVsZUhSbGJuTnBiMjV6TG1kbGRDZ2dKMEZPUjB4RlgybHVjM1JoYm1ObFpGOWhjbkpoZVhNbklDa3VJaWtzSUhSb2FYTXVaWGgwWlc1emFXOXVjeTVuWlhRb0lrRk9SMHhGWDJsdWMzUmhibU5sWkY5aGNuSmhlWE1pS1RzS2ZUc0tjV1V1Y0hKdmRHOTBlWEJsTG1WdVlXSnNaVk5qYVhOemIzSlVaWE4wSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVpXNWhZbXhsVTJOcGMzTnZjbFJsYzNRb0tTQnBjeUJ1YjNjZ0xuTmxkRk5qYVhOemIzSlVaWE4wS0NrdUlpa3NJSFJvYVhNdWMyVjBVMk5wYzNOdmNsUmxjM1FvY3lrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1cGJtbDBUV0YwWlhKcFlXd2dQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbWx1YVhSTllYUmxjbWxoYkNncElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpazdDbjA3Q25GbExuQnliM1J2ZEhsd1pTNWhaR1JRY21WUWJIVm5hVzRnUFNCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG1Ga1pGQnlaVkJzZFdkcGJpZ3BJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJaWs3Q24wN0NuRmxMbkJ5YjNSdmRIbHdaUzVoWkdSUWIzTjBVR3gxWjJsdUlEMGdablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNWhaR1JRYjNOMFVHeDFaMmx1S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuVndaR0YwWlZOb1lXUnZkMDFoY0NBOUlHWjFibU4wYVc5dUtDa2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdWRYQmtZWFJsVTJoaFpHOTNUV0Z3S0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTmxkRVpoWTJWRGRXeHNhVzVuSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1elpYUkdZV05sUTNWc2JHbHVaeWdwSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NuMDdDbkZsTG5CeWIzUnZkSGx3WlM1aGJHeHZZMVJsZUhSMWNtVlZibWwwSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1aGJHeHZZMVJsZUhSMWNtVlZibWwwS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExuTmxkRlJsZUhSMWNtVWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5sZEZSbGVIUjFjbVVvS1NCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlPd3B4WlM1d2NtOTBiM1I1Y0dVdWMyVjBWR1Y0ZEhWeVpUSkVJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzV6WlhSVVpYaDBkWEpsTWtRb0tTQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpSXBPd3A5T3dweFpTNXdjbTkwYjNSNWNHVXVjMlYwVkdWNGRIVnlaVU4xWW1VZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTmxkRlJsZUhSMWNtVkRkV0psS0NrZ2FHRnpJR0psWlc0Z2NtVnRiM1psWkM0aUtUc0tmVHNLY1dVdWNISnZkRzkwZVhCbExtZGxkRUZqZEdsMlpVMXBjRTFoY0V4bGRtVnNJRDBnWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVaMlYwUVdOMGFYWmxUV2x3VFdGd1RHVjJaV3dvS1NCcGN5QnViM2NnTG1kbGRFRmpkR2wyWlUxcGNHMWhjRXhsZG1Wc0tDa3VJaWtzSUhSb2FYTXVaMlYwUVdOMGFYWmxUV2x3YldGd1RHVjJaV3dvS1RzS2ZUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb2NXVXVjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQnphR0ZrYjNkTllYQkZibUZpYkdWa09pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWMyaGhaRzkzVFdGd0xtVnVZV0pzWldRN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1YzJoaFpHOTNUV0Z3Ulc1aFlteGxaQ0JwY3lCdWIzY2dMbk5vWVdSdmQwMWhjQzVsYm1GaWJHVmtMaUlwTENCMGFHbHpMbk5vWVdSdmQwMWhjQzVsYm1GaWJHVmtJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdjMmhoWkc5M1RXRndWSGx3WlRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG5Ob1lXUnZkMDFoY0M1MGVYQmxPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpaHpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNGUjVjR1VnYVhNZ2JtOTNJQzV6YUdGa2IzZE5ZWEF1ZEhsd1pTNGlLU3dnZEdocGN5NXphR0ZrYjNkTllYQXVkSGx3WlNBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhOb1lXUnZkMDFoY0VOMWJHeEdZV05sT2lCN0NpQWdJQ0FnSUNBZ1oyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjMmhoWkc5M1RXRndRM1ZzYkVaaFkyVWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUUxaGRHVnlhV0ZzTG5Ob1lXUnZkMU5wWkdVZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0VOMWJHeEdZV05sSUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SUZObGRDQk5ZWFJsY21saGJDNXphR0ZrYjNkVGFXUmxJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHTnZiblJsZUhRNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVZMjl1ZEdWNGRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlZjMlVnTG1kbGRFTnZiblJsZUhRb0tTQnBibk4wWldGa0xpSXBMQ0IwYUdsekxtZGxkRU52Ym5SbGVIUW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ2RuSTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1ZG5JZ2FHRnpJR0psWlc0Z2NtVnVZVzFsWkNCMGJ5QXVlSElpS1N3Z2RHaHBjeTU0Y2pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaMkZ0YldGSmJuQjFkRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlaWEk2SUM1bllXMXRZVWx1Y0hWMElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlGTmxkQ0IwYUdVZ1pXNWpiMlJwYm1jZ1ptOXlJSFJsZUhSMWNtVnpJSFpwWVNCVVpYaDBkWEpsTG1WdVkyOWthVzVuSUdsdWMzUmxZV1F1SWlrc0lDRXhPd29nSUNBZ0lDQWdJSDBzQ2lBZ0lDQWdJQ0FnYzJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyRnRiV0ZKYm5CMWRDQm9ZWE1nWW1WbGJpQnlaVzF2ZG1Wa0xpQlRaWFFnZEdobElHVnVZMjlrYVc1bklHWnZjaUIwWlhoMGRYSmxjeUIyYVdFZ1ZHVjRkSFZ5WlM1bGJtTnZaR2x1WnlCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwc0NpQWdJQ0JuWVcxdFlVOTFkSEIxZERvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNW5ZVzF0WVU5MWRIQjFkQ0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJUWlhRZ1YyVmlSMHhTWlc1a1pYSmxjaTV2ZFhSd2RYUkZibU52WkdsdVp5QnBibk4wWldGa0xpSXBMQ0FoTVRzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVpYSTZJQzVuWVcxdFlVOTFkSEIxZENCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdWMlZpUjB4U1pXNWtaWEpsY2k1dmRYUndkWFJGYm1OdlpHbHVaeUJwYm5OMFpXRmtMaUlwTENCMGFHbHpMbTkxZEhCMWRFVnVZMjlrYVc1bklEMGdjeUE5UFQwZ0lUQWdQeUJQYVNBNklFNTBPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMHNDaUFnSUNCMGIyNWxUV0Z3Y0dsdVoxZG9hWFJsVUc5cGJuUTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNtVnlPaUF1ZEc5dVpVMWhjSEJwYm1kWGFHbDBaVkJ2YVc1MElHaGhjeUJpWldWdUlISmxiVzkyWldRdUlpa3NJREU3Q2lBZ0lDQWdJQ0FnZlN3S0lDQWdJQ0FnSUNCelpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNTBiMjVsVFdGd2NHbHVaMWRvYVhSbFVHOXBiblFnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRpS1RzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaMkZ0YldGR1lXTjBiM0k2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbVZ5T2lBdVoyRnRiV0ZHWVdOMGIzSWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLU3dnTWpzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbWRoYlcxaFJtRmpkRzl5SUdoaGN5QmlaV1Z1SUhKbGJXOTJaV1F1SWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFwOUtUc0tUMkpxWldOMExtUmxabWx1WlZCeWIzQmxjblJwWlhNb2VXZ3VjSEp2ZEc5MGVYQmxMQ0I3Q2lBZ0lDQmpkV3hzUm1GalpUb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0M1amRXeHNSbUZqWlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdUV0YwWlhKcFlXd3VjMmhoWkc5M1UybGtaU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWdwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY21WeU9pQXVjMmhoWkc5M1RXRndMbU4xYkd4R1lXTmxJR2hoY3lCaVpXVnVJSEpsYlc5MlpXUXVJRk5sZENCTllYUmxjbWxoYkM1emFHRmtiM2RUYVdSbElHbHVjM1JsWVdRdUlpazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUhKbGJtUmxjbEpsZG1WeWMyVlRhV1JsWkRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKbGNqb2dMbk5vWVdSdmQwMWhjQzV5Wlc1a1pYSlNaWFpsY25ObFUybGtaV1FnYUdGeklHSmxaVzRnY21WdGIzWmxaQzRnVTJWMElFMWhkR1Z5YVdGc0xuTm9ZV1J2ZDFOcFpHVWdhVzV6ZEdWaFpDNGlLVHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWdpVkVoU1JVVXVWMlZpUjB4U1pXNWtaWEpsY2pvZ0xuTm9ZV1J2ZDAxaGNDNXlaVzVrWlhKU1pYWmxjbk5sVTJsa1pXUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUUxaGRHVnlhV0ZzTG5Ob1lXUnZkMU5wWkdVZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnY21WdVpHVnlVMmx1WjJ4bFUybGtaV1E2SUhzS0lDQWdJQ0FnSUNCblpYUTZJR1oxYm1OMGFXOXVLQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5WlhJNklDNXphR0ZrYjNkTllYQXVjbVZ1WkdWeVUybHVaMnhsVTJsa1pXUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGdVMlYwSUUxaGRHVnlhV0ZzTG5Ob1lXUnZkMU5wWkdVZ2FXNXpkR1ZoWkM0aUtUc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSmxjam9nTG5Ob1lXUnZkMDFoY0M1eVpXNWtaWEpUYVc1bmJHVlRhV1JsWkNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVFpYUWdUV0YwWlhKcFlXd3VjMmhoWkc5M1UybGtaU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLZlNrN0NtWjFibU4wYVc5dUlGRXdLSE1zSUdVc0lIUXBJSHNLSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWMFEzVmlaU2dnZDJsa2RHZ3NJR2hsYVdkb2RDd2diM0IwYVc5dWN5QXBJR2x6SUc1dmR5QlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFFvSUhOcGVtVXNJRzl3ZEdsdmJuTWdLUzRpS1N3Z2JtVjNJR3B6S0hNc0lIUXBPd3A5Q2s5aWFtVmpkQzVrWldacGJtVlFjbTl3WlhKMGFXVnpLRUYwTG5CeWIzUnZkSGx3WlN3Z2V3b2dJQ0FnZDNKaGNGTTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xuZHlZWEJUSUdseklHNXZkeUF1ZEdWNGRIVnlaUzUzY21Gd1V5NGlLU3dnZEdocGN5NTBaWGgwZFhKbExuZHlZWEJUT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1M2NtRndVeUJwY3lCdWIzY2dMblJsZUhSMWNtVXVkM0poY0ZNdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1M2NtRndVeUE5SUhNN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlN3S0lDQWdJSGR5WVhCVU9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1M2NtRndWQ0JwY3lCdWIzY2dMblJsZUhSMWNtVXVkM0poY0ZRdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1M2NtRndWRHNLSUNBZ0lDQWdJQ0I5TEFvZ0lDQWdJQ0FnSUhObGREb2dablZ1WTNScGIyNG9jeWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1ZDNKaGNGUWdhWE1nYm05M0lDNTBaWGgwZFhKbExuZHlZWEJVTGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1ZDNKaGNGUWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnRZV2RHYVd4MFpYSTZJSHNLSUNBZ0lDQWdJQ0JuWlhRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xtMWhaMFpwYkhSbGNpQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWJXRm5SbWxzZEdWeUxpSXBMQ0IwYUdsekxuUmxlSFIxY21VdWJXRm5SbWxzZEdWeU93b2dJQ0FnSUNBZ0lIMHNDaUFnSUNBZ0lDQWdjMlYwT2lCbWRXNWpkR2x2YmloektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNXRZV2RHYVd4MFpYSWdhWE1nYm05M0lDNTBaWGgwZFhKbExtMWhaMFpwYkhSbGNpNGlLU3dnZEdocGN5NTBaWGgwZFhKbExtMWhaMFpwYkhSbGNpQTlJSE03Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU3dLSUNBZ0lHMXBia1pwYkhSbGNqb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdWJXbHVSbWxzZEdWeUlHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1dGFXNUdhV3gwWlhJdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1dGFXNUdhV3gwWlhJN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xtMXBia1pwYkhSbGNpQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWJXbHVSbWxzZEdWeUxpSXBMQ0IwYUdsekxuUmxlSFIxY21VdWJXbHVSbWxzZEdWeUlEMGdjenNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlMQW9nSUNBZ1lXNXBjMjkwY205d2VUb2dld29nSUNBZ0lDQWdJR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdVlXNXBjMjkwY205d2VTQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdVlXNXBjMjkwY205d2VTNGlLU3dnZEdocGN5NTBaWGgwZFhKbExtRnVhWE52ZEhKdmNIazdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbUZ1YVhOdmRISnZjSGtnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbUZ1YVhOdmRISnZjSGt1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzVoYm1semIzUnliM0I1SUQwZ2N6c0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUxBb2dJQ0FnYjJabWMyVjBPaUI3Q2lBZ0lDQWdJQ0FnWjJWME9pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuTnZiR1V1ZDJGeWJpZ2lWRWhTUlVVdVYyVmlSMHhTWlc1a1pYSlVZWEpuWlhRNklDNXZabVp6WlhRZ2FYTWdibTkzSUM1MFpYaDBkWEpsTG05bVpuTmxkQzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMbTltWm5ObGREc0tJQ0FnSUNBZ0lDQjlMQW9nSUNBZ0lDQWdJSE5sZERvZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXViMlptYzJWMElHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1dlptWnpaWFF1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzV2Wm1aelpYUWdQU0J6T3dvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBzQ2lBZ0lDQnlaWEJsWVhRNklIc0tJQ0FnSUNBZ0lDQm5aWFE2SUdaMWJtTjBhVzl1S0NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZMjl1YzI5c1pTNTNZWEp1S0NKVVNGSkZSUzVYWldKSFRGSmxibVJsY2xSaGNtZGxkRG9nTG5KbGNHVmhkQ0JwY3lCdWIzY2dMblJsZUhSMWNtVXVjbVZ3WldGMExpSXBMQ0IwYUdsekxuUmxlSFIxY21VdWNtVndaV0YwT3dvZ0lDQWdJQ0FnSUgwc0NpQWdJQ0FnSUNBZ2MyVjBPaUJtZFc1amRHbHZiaWh6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1eVpYQmxZWFFnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbkpsY0dWaGRDNGlLU3dnZEdocGN5NTBaWGgwZFhKbExuSmxjR1ZoZENBOUlITTdDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZTd0tJQ0FnSUdadmNtMWhkRG9nZXdvZ0lDQWdJQ0FnSUdkbGREb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxsZGxZa2RNVW1WdVpHVnlWR0Z5WjJWME9pQXVabTl5YldGMElHbHpJRzV2ZHlBdWRHVjRkSFZ5WlM1bWIzSnRZWFF1SWlrc0lIUm9hWE11ZEdWNGRIVnlaUzVtYjNKdFlYUTdDaUFnSUNBZ0lDQWdmU3dLSUNBZ0lDQWdJQ0J6WlhRNklHWjFibU4wYVc5dUtITXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNVhaV0pIVEZKbGJtUmxjbFJoY21kbGREb2dMbVp2Y20xaGRDQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdVptOXliV0YwTGlJcExDQjBhR2x6TG5SbGVIUjFjbVV1Wm05eWJXRjBJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdkSGx3WlRvZ2V3b2dJQ0FnSUNBZ0lHZGxkRG9nWm5WdVkzUnBiMjRvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMbGRsWWtkTVVtVnVaR1Z5VkdGeVoyVjBPaUF1ZEhsd1pTQnBjeUJ1YjNjZ0xuUmxlSFIxY21VdWRIbHdaUzRpS1N3Z2RHaHBjeTUwWlhoMGRYSmxMblI1Y0dVN0NpQWdJQ0FnSUNBZ2ZTd0tJQ0FnSUNBZ0lDQnpaWFE2SUdaMWJtTjBhVzl1S0hNcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1WFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ0xuUjVjR1VnYVhNZ2JtOTNJQzUwWlhoMGRYSmxMblI1Y0dVdUlpa3NJSFJvYVhNdWRHVjRkSFZ5WlM1MGVYQmxJRDBnY3pzS0lDQWdJQ0FnSUNCOUNpQWdJQ0I5TEFvZ0lDQWdaMlZ1WlhKaGRHVk5hWEJ0WVhCek9pQjdDaUFnSUNBZ0lDQWdaMlYwT2lCbWRXNWpkR2x2YmlncElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVkMkZ5YmlnaVZFaFNSVVV1VjJWaVIweFNaVzVrWlhKVVlYSm5aWFE2SUM1blpXNWxjbUYwWlUxcGNHMWhjSE1nYVhNZ2JtOTNJQzUwWlhoMGRYSmxMbWRsYm1WeVlYUmxUV2x3YldGd2N5NGlLU3dnZEdocGN5NTBaWGgwZFhKbExtZGxibVZ5WVhSbFRXbHdiV0Z3Y3pzS0lDQWdJQ0FnSUNCOUxBb2dJQ0FnSUNBZ0lITmxkRG9nWm5WdVkzUnBiMjRvY3lrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGxkbFlrZE1VbVZ1WkdWeVZHRnlaMlYwT2lBdVoyVnVaWEpoZEdWTmFYQnRZWEJ6SUdseklHNXZkeUF1ZEdWNGRIVnlaUzVuWlc1bGNtRjBaVTFwY0cxaGNITXVJaWtzSUhSb2FYTXVkR1Y0ZEhWeVpTNW5aVzVsY21GMFpVMXBjRzFoY0hNZ1BTQnpPd29nSUNBZ0lDQWdJSDBLSUNBZ0lIMEtmU2s3Q2xwaExuQnliM1J2ZEhsd1pTNXNiMkZrSUQwZ1puVnVZM1JwYjI0b2N5a2dld29nSUNBZ1kyOXVjMjlzWlM1M1lYSnVLQ0pVU0ZKRlJTNUJkV1JwYnpvZ0xteHZZV1FnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJRlJJVWtWRkxrRjFaR2x2VEc5aFpHVnlJR2x1YzNSbFlXUXVJaWs3Q2lBZ0lDQnNaWFFnWlNBOUlIUm9hWE03Q2lBZ0lDQnlaWFIxY200Z2JtVjNJR3RvS0NrdWJHOWhaQ2h6TENCbWRXNWpkR2x2YmlodUtTQjdDaUFnSUNBZ0lDQWdaUzV6WlhSQ2RXWm1aWElvYmlrN0NpQWdJQ0I5S1N3Z2RHaHBjenNLZlRzS2NXZ3VjSEp2ZEc5MGVYQmxMbWRsZEVSaGRHRWdQU0JtZFc1amRHbHZiaWdwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa0YxWkdsdlFXNWhiSGx6WlhJNklDNW5aWFJFWVhSaEtDa2dhWE1nYm05M0lDNW5aWFJHY21WeGRXVnVZM2xFWVhSaEtDa3VJaWtzSUhSb2FYTXVaMlYwUm5KbGNYVmxibU41UkdGMFlTZ3BPd3A5T3dva2N5NXdjbTkwYjNSNWNHVXVkWEJrWVhSbFEzVmlaVTFoY0NBOUlHWjFibU4wYVc5dUtITXNJR1VwSUhzS0lDQWdJSEpsZEhWeWJpQmpiMjV6YjJ4bExuZGhjbTRvSWxSSVVrVkZMa04xWW1WRFlXMWxjbUU2SUM1MWNHUmhkR1ZEZFdKbFRXRndLQ2tnYVhNZ2JtOTNJQzUxY0dSaGRHVW9LUzRpS1N3Z2RHaHBjeTUxY0dSaGRHVW9jeXdnWlNrN0NuMDdDaVJ6TG5CeWIzUnZkSGx3WlM1amJHVmhjaUE5SUdaMWJtTjBhVzl1S0hNc0lHVXNJSFFzSUc0cElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbmRoY200b0lsUklVa1ZGTGtOMVltVkRZVzFsY21FNklDNWpiR1ZoY2lncElHbHpJRzV2ZHlBdWNtVnVaR1Z5VkdGeVoyVjBMbU5zWldGeUtDa3VJaWtzSUhSb2FYTXVjbVZ1WkdWeVZHRnlaMlYwTG1Oc1pXRnlLSE1zSUdVc0lIUXNJRzRwT3dwOU93cFpiaTVqY205emMwOXlhV2RwYmlBOUlIWnZhV1FnTURzS1dXNHViRzloWkZSbGVIUjFjbVVnUFNCbWRXNWpkR2x2YmloekxDQmxMQ0IwTENCdUtTQjdDaUFnSUNCamIyNXpiMnhsTG5kaGNtNG9JbFJJVWtWRkxrbHRZV2RsVlhScGJITXViRzloWkZSbGVIUjFjbVVnYUdGeklHSmxaVzRnWkdWd2NtVmpZWFJsWkM0Z1ZYTmxJRlJJVWtWRkxsUmxlSFIxY21WTWIyRmtaWElvS1NCcGJuTjBaV0ZrTGlJcE93b2dJQ0FnYkdWMElHa2dQU0J1WlhjZ1FtZzdDaUFnSUNCcExuTmxkRU55YjNOelQzSnBaMmx1S0hSb2FYTXVZM0p2YzNOUGNtbG5hVzRwT3dvZ0lDQWdiR1YwSUhJZ1BTQnBMbXh2WVdRb2N5d2dkQ3dnZG05cFpDQXdMQ0J1S1RzS0lDQWdJSEpsZEhWeWJpQmxJQ1ltSUNoeUxtMWhjSEJwYm1jZ1BTQmxLU3dnY2pzS2ZUc0tXVzR1Ykc5aFpGUmxlSFIxY21WRGRXSmxJRDBnWm5WdVkzUnBiMjRvY3l3Z1pTd2dkQ3dnYmlrZ2V3b2dJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDSlVTRkpGUlM1SmJXRm5aVlYwYVd4ekxteHZZV1JVWlhoMGRYSmxRM1ZpWlNCb1lYTWdZbVZsYmlCa1pYQnlaV05oZEdWa0xpQlZjMlVnVkVoU1JVVXVRM1ZpWlZSbGVIUjFjbVZNYjJGa1pYSW9LU0JwYm5OMFpXRmtMaUlwT3dvZ0lDQWdiR1YwSUdrZ1BTQnVaWGNnUm1nN0NpQWdJQ0JwTG5ObGRFTnliM056VDNKcFoybHVLSFJvYVhNdVkzSnZjM05QY21sbmFXNHBPd29nSUNBZ2JHVjBJSElnUFNCcExteHZZV1FvY3l3Z2RDd2dkbTlwWkNBd0xDQnVLVHNLSUNBZ0lISmxkSFZ5YmlCbElDWW1JQ2h5TG0xaGNIQnBibWNnUFNCbEtTd2djanNLZlRzS1dXNHViRzloWkVOdmJYQnlaWE56WldSVVpYaDBkWEpsSUQwZ1puVnVZM1JwYjI0b0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUpiV0ZuWlZWMGFXeHpMbXh2WVdSRGIyMXdjbVZ6YzJWa1ZHVjRkSFZ5WlNCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlCVmMyVWdWRWhTUlVVdVJFUlRURzloWkdWeUlHbHVjM1JsWVdRdUlpazdDbjA3Q2xsdUxteHZZV1JEYjIxd2NtVnpjMlZrVkdWNGRIVnlaVU4xWW1VZ1BTQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSWxSSVVrVkZMa2x0WVdkbFZYUnBiSE11Ykc5aFpFTnZiWEJ5WlhOelpXUlVaWGgwZFhKbFEzVmlaU0JvWVhNZ1ltVmxiaUJ5WlcxdmRtVmtMaUJWYzJVZ1ZFaFNSVVV1UkVSVFRHOWhaR1Z5SUdsdWMzUmxZV1F1SWlrN0NuMDdDbVoxYm1OMGFXOXVJRXN3S0NrZ2V3b2dJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVEyRnVkbUZ6VW1WdVpHVnlaWElnYUdGeklHSmxaVzRnY21WdGIzWmxaQ0lwT3dwOUNtWjFibU4wYVc5dUlHVjJLQ2tnZXdvZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lnaVZFaFNSVVV1U2xOUFRreHZZV1JsY2lCb1lYTWdZbVZsYmlCeVpXMXZkbVZrTGlJcE93cDlDblpoY2lCMGRpQTlJSHNLSUNBZ0lHTnlaV0YwWlUxMWJIUnBUV0YwWlhKcFlXeFBZbXBsWTNRNklHWjFibU4wYVc5dUtDa2dld29nSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxOalpXNWxWWFJwYkhNZ2FHRnpJR0psWlc0Z2JXOTJaV1FnZEc4Z0wyVjRZVzF3YkdWekwycHpiUzkxZEdsc2N5OVRZMlZ1WlZWMGFXeHpMbXB6SWlrN0NpQWdJQ0I5TEFvZ0lDQWdaR1YwWVdOb09pQm1kVzVqZEdsdmJpZ3BJSHNLSUNBZ0lDQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1VFkyVnVaVlYwYVd4eklHaGhjeUJpWldWdUlHMXZkbVZrSUhSdklDOWxlR0Z0Y0d4bGN5OXFjMjB2ZFhScGJITXZVMk5sYm1WVmRHbHNjeTVxY3lJcE93b2dJQ0FnZlN3S0lDQWdJR0YwZEdGamFEb2dablZ1WTNScGIyNG9LU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpZ2lWRWhTUlVVdVUyTmxibVZWZEdsc2N5Qm9ZWE1nWW1WbGJpQnRiM1psWkNCMGJ5QXZaWGhoYlhCc1pYTXZhbk50TDNWMGFXeHpMMU5qWlc1bFZYUnBiSE11YW5NaUtUc0tJQ0FnSUgwS2ZUc0tablZ1WTNScGIyNGdibllvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1TVpXNXpSbXhoY21VZ2FHRnpJR0psWlc0Z2JXOTJaV1FnZEc4Z0wyVjRZVzF3YkdWekwycHpiUzl2WW1wbFkzUnpMMHhsYm5ObWJHRnlaUzVxY3lJcE93cDlDbVoxYm1OMGFXOXVJR2wyS0NrZ2V3b2dJQ0FnY21WMGRYSnVJR052Ym5OdmJHVXVaWEp5YjNJb0lsUklVa1ZGTGxCaGNtRnRaWFJ5YVdOSFpXOXRaWFJ5ZVNCb1lYTWdZbVZsYmlCdGIzWmxaQ0IwYnlBdlpYaGhiWEJzWlhNdmFuTnRMMmRsYjIxbGRISnBaWE12VUdGeVlXMWxkSEpwWTBkbGIyMWxkSEo1TG1weklpa3NJRzVsZHlCZlpUc0tmUXBtZFc1amRHbHZiaUJ5ZGlncElIc0tJQ0FnSUhKbGRIVnliaUJqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1VVpYaDBSMlZ2YldWMGNua2dhR0Z6SUdKbFpXNGdiVzkyWldRZ2RHOGdMMlY0WVcxd2JHVnpMMnB6YlM5blpXOXRaWFJ5YVdWekwxUmxlSFJIWlc5dFpYUnllUzVxY3lJcExDQnVaWGNnWDJVN0NuMEtablZ1WTNScGIyNGdjM1lvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1R2IyNTBURzloWkdWeUlHaGhjeUJpWldWdUlHMXZkbVZrSUhSdklDOWxlR0Z0Y0d4bGN5OXFjMjB2Ykc5aFpHVnljeTlHYjI1MFRHOWhaR1Z5TG1weklpazdDbjBLWm5WdVkzUnBiMjRnYjNZb0tTQjdDaUFnSUNCamIyNXpiMnhsTG1WeWNtOXlLQ0pVU0ZKRlJTNUdiMjUwSUdoaGN5QmlaV1Z1SUcxdmRtVmtJSFJ2SUM5bGVHRnRjR3hsY3k5cWMyMHZiRzloWkdWeWN5OUdiMjUwVEc5aFpHVnlMbXB6SWlrN0NuMEtablZ1WTNScGIyNGdZWFlvS1NCN0NpQWdJQ0JqYjI1emIyeGxMbVZ5Y205eUtDSlVTRkpGUlM1SmJXMWxaR2xoZEdWU1pXNWtaWEpQWW1wbFkzUWdhR0Z6SUdKbFpXNGdjbVZ0YjNabFpDNGlLVHNLZlFwMGVYQmxiMllnWDE5VVNGSkZSVjlFUlZaVVQwOU1VMTlmSUR3Z0luVWlJQ1ltSUY5ZlZFaFNSVVZmUkVWV1ZFOVBURk5mWHk1a2FYTndZWFJqYUVWMlpXNTBLRzVsZHlCRGRYTjBiMjFGZG1WdWRDZ2ljbVZuYVhOMFpYSWlMQ0I3Q2lBZ0lDQmtaWFJoYVd3NklIc0tJQ0FnSUNBZ0lDQnlaWFpwYzJsdmJqb2dZMkVLSUNBZ0lIMEtmU2twT3dwMGVYQmxiMllnZDJsdVpHOTNJRHdnSW5VaUlDWW1JQ2gzYVc1a2IzY3VYMTlVU0ZKRlJWOWZJRDhnWTI5dWMyOXNaUzUzWVhKdUtDSlhRVkpPU1U1SE9pQk5kV3gwYVhCc1pTQnBibk4wWVc1alpYTWdiMllnVkdoeVpXVXVhbk1nWW1WcGJtY2dhVzF3YjNKMFpXUXVJaWtnT2lCM2FXNWtiM2N1WDE5VVNGSkZSVjlmSUQwZ1kyRXBPd3BqYjI1emRDQnRiMlFnUFNCN0NpQWdJQ0JCUTBWVFJtbHNiV2xqVkc5dVpVMWhjSEJwYm1jNklGVjFMQW9nSUNBZ1FXUmtSWEYxWVhScGIyNDZJRjlwTEFvZ0lDQWdRV1JrVDNCbGNtRjBhVzl1T2lCR2RTd0tJQ0FnSUVGa1pHbDBhWFpsUVc1cGJXRjBhVzl1UW14bGJtUk5iMlJsT2lCeFl5d0tJQ0FnSUVGa1pHbDBhWFpsUW14bGJtUnBibWM2SUc1c0xBb2dJQ0FnUVd4d2FHRkdiM0p0WVhRNklGaDFMQW9nSUNBZ1FXeDNZWGx6UkdWd2RHZzZJRUYxTEFvZ0lDQWdRV3gzWVhselUzUmxibU5wYkVaMWJtTTZJRlZrTEFvZ0lDQWdRVzFpYVdWdWRFeHBaMmgwT2lCeFlTd0tJQ0FnSUVGdFltbGxiblJNYVdkb2RGQnliMkpsT2lCV2FDd0tJQ0FnSUVGdWFXMWhkR2x2YmtOc2FYQTZJRXh5TEFvZ0lDQWdRVzVwYldGMGFXOXVURzloWkdWeU9pQmplU3dLSUNBZ0lFRnVhVzFoZEdsdmJrMXBlR1Z5T2lBa2FDd0tJQ0FnSUVGdWFXMWhkR2x2Yms5aWFtVmpkRWR5YjNWd09pQlphQ3dLSUNBZ0lFRnVhVzFoZEdsdmJsVjBhV3h6T2lCYVpTd0tJQ0FnSUVGeVkwTjFjblpsT2lCTllTd0tJQ0FnSUVGeWNtRjVRMkZ0WlhKaE9pQm5ZU3dLSUNBZ0lFRnljbTkzU0dWc2NHVnlPaUJWZVN3S0lDQWdJRUYxWkdsdk9pQmFZU3dLSUNBZ0lFRjFaR2x2UVc1aGJIbHpaWEk2SUhGb0xBb2dJQ0FnUVhWa2FXOURiMjUwWlhoME9pQklhQ3dLSUNBZ0lFRjFaR2x2VEdsemRHVnVaWEk2SUcxNUxBb2dJQ0FnUVhWa2FXOU1iMkZrWlhJNklHdG9MQW9nSUNBZ1FYaGxjMGhsYkhCbGNqb2djblVzQ2lBZ0lDQkJlR2x6U0dWc2NHVnlPaUJZTUN3S0lDQWdJRUpoWTJ0VGFXUmxPaUJwZEN3S0lDQWdJRUpoYzJsalJHVndkR2hRWVdOcmFXNW5PaUJPWkN3S0lDQWdJRUpoYzJsalUyaGhaRzkzVFdGd09pQnhlU3dLSUNBZ0lFSnBibUZ5ZVZSbGVIUjFjbVZNYjJGa1pYSTZJR293TEFvZ0lDQWdRbTl1WlRvZ2IyOHNDaUFnSUNCQ2IyOXNaV0Z1UzJWNVpuSmhiV1ZVY21GamF6b2dVVzRzQ2lBZ0lDQkNiM1Z1WkdsdVowSnZlRWhsYkhCbGNqb2dTakFzQ2lBZ0lDQkNiM2d5T2lCeGFTd0tJQ0FnSUVKdmVETTZJRXgwTEFvZ0lDQWdRbTk0TTBobGJIQmxjam9nUW5rc0NpQWdJQ0JDYjNoQ2RXWm1aWEpIWlc5dFpYUnllVG9nZDI0c0NpQWdJQ0JDYjNoSFpXOXRaWFJ5ZVRvZ2QyNHNDaUFnSUNCQ2IzaElaV3h3WlhJNklHbDFMQW9nSUNBZ1FuVm1abVZ5UVhSMGNtbGlkWFJsT2lCVlpTd0tJQ0FnSUVKMVptWmxja2RsYjIxbGRISjVPaUJmWlN3S0lDQWdJRUoxWm1abGNrZGxiMjFsZEhKNVRHOWhaR1Z5T2lCVmFDd0tJQ0FnSUVKNWRHVlVlWEJsT2lCSWRTd0tJQ0FnSUVOaFkyaGxPaUJPYVN3S0lDQWdJRU5oYldWeVlUb2dTWElzQ2lBZ0lDQkRZVzFsY21GSVpXeHdaWEk2SUU1NUxBb2dJQ0FnUTJGdWRtRnpVbVZ1WkdWeVpYSTZJRXN3TEFvZ0lDQWdRMkZ1ZG1GelZHVjRkSFZ5WlRvZ1ZHZ3NDaUFnSUNCRFlYUnRkV3hzVW05dFEzVnlkbVV6T2lCM1lTd0tJQ0FnSUVOcGJtVnZibFJ2Ym1WTllYQndhVzVuT2lCNmRTd0tJQ0FnSUVOcGNtTnNaVUoxWm1abGNrZGxiMjFsZEhKNU9pQm1jaXdLSUNBZ0lFTnBjbU5zWlVkbGIyMWxkSEo1T2lCbWNpd0tJQ0FnSUVOc1lXMXdWRzlGWkdkbFYzSmhjSEJwYm1jNklIWjBMQW9nSUNBZ1EyeHZZMnM2SUZkb0xBb2dJQ0FnUTI5c2IzSTZJR0ZsTEFvZ0lDQWdRMjlzYjNKTFpYbG1jbUZ0WlZSeVlXTnJPaUJDWVN3S0lDQWdJRU52YlhCeVpYTnpaV1JVWlhoMGRYSmxPaUIyWVN3S0lDQWdJRU52YlhCeVpYTnpaV1JVWlhoMGRYSmxURzloWkdWeU9pQm9lU3dLSUNBZ0lFTnZibVZDZFdabVpYSkhaVzl0WlhSeWVUb2djSElzQ2lBZ0lDQkRiMjVsUjJWdmJXVjBjbms2SUhCeUxBb2dJQ0FnUTNWaVpVTmhiV1Z5WVRvZ0pITXNDaUFnSUNCRGRXSmxVbVZtYkdWamRHbHZiazFoY0hCcGJtYzZJRUpwTEFvZ0lDQWdRM1ZpWlZKbFpuSmhZM1JwYjI1TllYQndhVzVuT2lCNmFTd0tJQ0FnSUVOMVltVlVaWGgwZFhKbE9pQnJhU3dLSUNBZ0lFTjFZbVZVWlhoMGRYSmxURzloWkdWeU9pQkdhQ3dLSUNBZ0lFTjFZbVZWVmxKbFpteGxZM1JwYjI1TllYQndhVzVuT2lCUWNpd0tJQ0FnSUVOMVltVlZWbEpsWm5KaFkzUnBiMjVOWVhCd2FXNW5PaUJYY3l3S0lDQWdJRU4xWW1salFtVjZhV1Z5UTNWeWRtVTZJR3h2TEFvZ0lDQWdRM1ZpYVdOQ1pYcHBaWEpEZFhKMlpUTTZJRk5oTEFvZ0lDQWdRM1ZpYVdOSmJuUmxjbkJ2YkdGdWREb2dVR2dzQ2lBZ0lDQkRkV3hzUm1GalpVSmhZMnM2SUhSc0xBb2dJQ0FnUTNWc2JFWmhZMlZHY205dWREb2daSFVzQ2lBZ0lDQkRkV3hzUm1GalpVWnliMjUwUW1GamF6b2dWM2tzQ2lBZ0lDQkRkV3hzUm1GalpVNXZibVU2SUhWMUxBb2dJQ0FnUTNWeWRtVTZJRU4wTEFvZ0lDQWdRM1Z5ZG1WUVlYUm9PaUJCYUN3S0lDQWdJRU4xYzNSdmJVSnNaVzVrYVc1bk9pQndkU3dLSUNBZ0lFTjFjM1J2YlZSdmJtVk5ZWEJ3YVc1bk9pQlBkU3dLSUNBZ0lFTjViR2x1WkdWeVFuVm1abVZ5UjJWdmJXVjBjbms2SUVwdUxBb2dJQ0FnUTNsc2FXNWtaWEpIWlc5dFpYUnllVG9nU200c0NpQWdJQ0JEZVd4cGJtUnlhV05oYkRvZ1Eza3NDaUFnSUNCRVlYUmhWR1Y0ZEhWeVpUb2djVzRzQ2lBZ0lDQkVZWFJoVkdWNGRIVnlaVEpFUVhKeVlYazZJRkZ6TEFvZ0lDQWdSR0YwWVZSbGVIUjFjbVV6UkRvZ2JXRXNDaUFnSUNCRVlYUmhWR1Y0ZEhWeVpVeHZZV1JsY2pvZ1RtZ3NDaUFnSUNCRVlYUmhWWFJwYkhNNklHdDVMQW9nSUNBZ1JHVmpjbVZ0Wlc1MFUzUmxibU5wYkU5d09pQnVNQ3dLSUNBZ0lFUmxZM0psYldWdWRGZHlZWEJUZEdWdVkybHNUM0E2SUhJd0xBb2dJQ0FnUkdWbVlYVnNkRXh2WVdScGJtZE5ZVzVoWjJWeU9pQnNlU3dLSUNBZ0lFUmxjSFJvUm05eWJXRjBPaUJXYml3S0lDQWdJRVJsY0hSb1UzUmxibU5wYkVadmNtMWhkRG9nVEdrc0NpQWdJQ0JFWlhCMGFGUmxlSFIxY21VNklHdHpMQW9nSUNBZ1JHbHlaV04wYVc5dVlXeE1hV2RvZERvZ1YyRXNDaUFnSUNCRWFYSmxZM1JwYjI1aGJFeHBaMmgwU0dWc2NHVnlPaUJHZVN3S0lDQWdJRVJwYzJOeVpYUmxTVzUwWlhKd2IyeGhiblE2SUVsb0xBb2dJQ0FnUkc5a1pXTmhhR1ZrY205dVFuVm1abVZ5UjJWdmJXVjBjbms2SUcxeUxBb2dJQ0FnUkc5a1pXTmhhR1ZrY205dVIyVnZiV1YwY25rNklHMXlMQW9nSUNBZ1JHOTFZbXhsVTJsa1pUb2dRMmtzQ2lBZ0lDQkVjM1JCYkhCb1lVWmhZM1J2Y2pvZ1RYVXNDaUFnSUNCRWMzUkRiMnh2Y2taaFkzUnZjam9nZDNVc0NpQWdJQ0JFZVc1aGJXbGpRblZtWm1WeVFYUjBjbWxpZFhSbE9pQkNNQ3dLSUNBZ0lFUjVibUZ0YVdORGIzQjVWWE5oWjJVNklIa3dMQW9nSUNBZ1JIbHVZVzFwWTBSeVlYZFZjMkZuWlRvZ2RYSXNDaUFnSUNCRWVXNWhiV2xqVW1WaFpGVnpZV2RsT2lCdE1Dd0tJQ0FnSUVWa1oyVnpSMlZ2YldWMGNuazZJRjloTEFvZ0lDQWdSV1JuWlhOSVpXeHdaWEk2SUZrd0xBb2dJQ0FnUld4c2FYQnpaVU4xY25abE9pQlZjaXdLSUNBZ0lFVnhkV0ZzUkdWd2RHZzZJRXgxTEFvZ0lDQWdSWEYxWVd4VGRHVnVZMmxzUm5WdVl6b2diREFzQ2lBZ0lDQkZjWFZwY21WamRHRnVaM1ZzWVhKU1pXWnNaV04wYVc5dVRXRndjR2x1WnpvZ1JITXNDaUFnSUNCRmNYVnBjbVZqZEdGdVozVnNZWEpTWldaeVlXTjBhVzl1VFdGd2NHbHVaem9nUm5Nc0NpQWdJQ0JGZFd4bGNqb2dXbTRzQ2lBZ0lDQkZkbVZ1ZEVScGMzQmhkR05vWlhJNklFVnVMQW9nSUNBZ1JYaDBjblZrWlVKMVptWmxja2RsYjIxbGRISjVPaUJzYml3S0lDQWdJRVY0ZEhKMVpHVkhaVzl0WlhSeWVUb2diRzRzQ2lBZ0lDQkdZV05sUTI5c2IzSnpPaUJVTUN3S0lDQWdJRVpwYkdWTWIyRmtaWEk2SUZsMExBb2dJQ0FnUm14aGRGTm9ZV1JwYm1jNklHdGpMQW9nSUNBZ1JteHZZWFF4TmtKMVptWmxja0YwZEhKcFluVjBaVG9nYm1nc0NpQWdJQ0JHYkc5aGRETXlRWFIwY21saWRYUmxPaUJYTUN3S0lDQWdJRVpzYjJGME16SkNkV1ptWlhKQmRIUnlhV0oxZEdVNklHUmxMQW9nSUNBZ1JteHZZWFEyTkVGMGRISnBZblYwWlRvZ2NUQXNDaUFnSUNCR2JHOWhkRFkwUW5WbVptVnlRWFIwY21saWRYUmxPaUJwYUN3S0lDQWdJRVpzYjJGMFZIbHdaVG9nYm00c0NpQWdJQ0JHYjJjNklFSnlMQW9nSUNBZ1JtOW5SWGh3TWpvZ1RuSXNDaUFnSUNCR2IyNTBPaUJ2ZGl3S0lDQWdJRVp2Ym5STWIyRmtaWEk2SUhOMkxBb2dJQ0FnUm5KaGJXVmlkV1ptWlhKVVpYaDBkWEpsT2lCVGFDd0tJQ0FnSUVaeWIyNTBVMmxrWlRvZ1FXa3NDaUFnSUNCR2NuVnpkSFZ0T2lCRWNpd0tJQ0FnSUVkTVFuVm1abVZ5UVhSMGNtbGlkWFJsT2lCUmFDd0tJQ0FnSUVkTVUwd3hPaUJmTUN3S0lDQWdJRWRNVTB3ek9pQjRiQ3dLSUNBZ0lFZHlaV0YwWlhKRVpYQjBhRG9nVUhVc0NpQWdJQ0JIY21WaGRHVnlSWEYxWVd4RVpYQjBhRG9nVW5Vc0NpQWdJQ0JIY21WaGRHVnlSWEYxWVd4VGRHVnVZMmxzUm5WdVl6b2daREFzQ2lBZ0lDQkhjbVZoZEdWeVUzUmxibU5wYkVaMWJtTTZJR2d3TEFvZ0lDQWdSM0pwWkVobGJIQmxjam9nYm5Vc0NpQWdJQ0JIY205MWNEb2dTRzRzQ2lBZ0lDQklZV3htUm14dllYUlVlWEJsT2lCcmJpd0tJQ0FnSUVobGJXbHpjR2hsY21WTWFXZG9kRG9nVldFc0NpQWdJQ0JJWlcxcGMzQm9aWEpsVEdsbmFIUklaV3h3WlhJNklFbDVMQW9nSUNBZ1NHVnRhWE53YUdWeVpVeHBaMmgwVUhKdlltVTZJRWRvTEFvZ0lDQWdTV052YzJGb1pXUnliMjVDZFdabVpYSkhaVzl0WlhSeWVUb2dYM0lzQ2lBZ0lDQkpZMjl6WVdobFpISnZia2RsYjIxbGRISjVPaUJmY2l3S0lDQWdJRWx0WVdkbFFtbDBiV0Z3VEc5aFpHVnlPaUJQYUN3S0lDQWdJRWx0WVdkbFRHOWhaR1Z5T2lCU2Npd0tJQ0FnSUVsdFlXZGxWWFJwYkhNNklGbHVMQW9nSUNBZ1NXMXRaV1JwWVhSbFVtVnVaR1Z5VDJKcVpXTjBPaUJoZGl3S0lDQWdJRWx1WTNKbGJXVnVkRk4wWlc1amFXeFBjRG9nZERBc0NpQWdJQ0JKYm1OeVpXMWxiblJYY21Gd1UzUmxibU5wYkU5d09pQnBNQ3dLSUNBZ0lFbHVjM1JoYm1ObFpFSjFabVpsY2tGMGRISnBZblYwWlRvZ1dHNHNDaUFnSUNCSmJuTjBZVzVqWldSQ2RXWm1aWEpIWlc5dFpYUnllVG9nV1dFc0NpQWdJQ0JKYm5OMFlXNWpaV1JKYm5SbGNteGxZWFpsWkVKMVptWmxjam9nYW1nc0NpQWdJQ0JKYm5OMFlXNWpaV1JOWlhOb09pQjRZU3dLSUNBZ0lFbHVkREUyUVhSMGNtbGlkWFJsT2lCSU1Dd0tJQ0FnSUVsdWRERTJRblZtWm1WeVFYUjBjbWxpZFhSbE9pQmxhQ3dLSUNBZ0lFbHVkRE15UVhSMGNtbGlkWFJsT2lCSE1Dd0tJQ0FnSUVsdWRETXlRblZtWm1WeVFYUjBjbWxpZFhSbE9pQjBhQ3dLSUNBZ0lFbHVkRGhCZEhSeWFXSjFkR1U2SUhvd0xBb2dJQ0FnU1c1ME9FSjFabVpsY2tGMGRISnBZblYwWlRvZ2FtTXNDaUFnSUNCSmJuUlVlWEJsT2lCSGRTd0tJQ0FnSUVsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5T2lBa2Jpd0tJQ0FnSUVsdWRHVnliR1ZoZG1Wa1FuVm1abVZ5UVhSMGNtbGlkWFJsT2lCVGJpd0tJQ0FnSUVsdWRHVnljRzlzWVc1ME9pQmpiaXdLSUNBZ0lFbHVkR1Z5Y0c5c1lYUmxSR2x6WTNKbGRHVTZJSHB6TEFvZ0lDQWdTVzUwWlhKd2IyeGhkR1ZNYVc1bFlYSTZJRlZ6TEFvZ0lDQWdTVzUwWlhKd2IyeGhkR1ZUYlc5dmRHZzZJSGx2TEFvZ0lDQWdTVzUyWlhKMFUzUmxibU5wYkU5d09pQnpNQ3dLSUNBZ0lFcFRUMDVNYjJGa1pYSTZJR1YyTEFvZ0lDQWdTMlZsY0ZOMFpXNWphV3hQY0RvZ2RtOHNDaUFnSUNCTFpYbG1jbUZ0WlZSeVlXTnJPaUI2ZEN3S0lDQWdJRXhQUkRvZ1ltZ3NDaUFnSUNCTVlYUm9aVUoxWm1abGNrZGxiMjFsZEhKNU9pQk5jaXdLSUNBZ0lFeGhkR2hsUjJWdmJXVjBjbms2SUUxeUxBb2dJQ0FnVEdGNVpYSnpPaUJLY3l3S0lDQWdJRXhsYm5OR2JHRnlaVG9nYm5Zc0NpQWdJQ0JNWlhOelJHVndkR2c2SUVOMUxBb2dJQ0FnVEdWemMwVnhkV0ZzUkdWd2RHZzZJR1ZoTEFvZ0lDQWdUR1Z6YzBWeGRXRnNVM1JsYm1OcGJFWjFibU02SUdNd0xBb2dJQ0FnVEdWemMxTjBaVzVqYVd4R2RXNWpPaUJoTUN3S0lDQWdJRXhwWjJoME9pQkNkQ3dLSUNBZ0lFeHBaMmgwVUhKdlltVTZJRWh5TEFvZ0lDQWdUR2x1WlRvZ2IyNHNDaUFnSUNCTWFXNWxNem9nUzJnc0NpQWdJQ0JNYVc1bFFtRnphV05OWVhSbGNtbGhiRG9nWm5Rc0NpQWdJQ0JNYVc1bFEzVnlkbVU2SUU5eUxBb2dJQ0FnVEdsdVpVTjFjblpsTXpvZ1JXZ3NDaUFnSUNCTWFXNWxSR0Z6YUdWa1RXRjBaWEpwWVd3NklFWmhMQW9nSUNBZ1RHbHVaVXh2YjNBNklIbGhMQW9nSUNBZ1RHbHVaVkJwWldObGN6b2dkekFzQ2lBZ0lDQk1hVzVsVTJWbmJXVnVkSE02SUhkMExBb2dJQ0FnVEdsdVpWTjBjbWx3T2lCaU1Dd0tJQ0FnSUV4cGJtVmhja1Z1WTI5a2FXNW5PaUJPZEN3S0lDQWdJRXhwYm1WaGNrWnBiSFJsY2pvZ2RIUXNDaUFnSUNCTWFXNWxZWEpKYm5SbGNuQnZiR0Z1ZERvZ1RtRXNDaUFnSUNCTWFXNWxZWEpOYVhCTllYQk1hVzVsWVhKR2FXeDBaWEk2SUNSNUxBb2dJQ0FnVEdsdVpXRnlUV2x3VFdGd1RtVmhjbVZ6ZEVacGJIUmxjam9nV25rc0NpQWdJQ0JNYVc1bFlYSk5hWEJ0WVhCTWFXNWxZWEpHYVd4MFpYSTZJRlZwTEFvZ0lDQWdUR2x1WldGeVRXbHdiV0Z3VG1WaGNtVnpkRVpwYkhSbGNqb2dWMk1zQ2lBZ0lDQk1hVzVsWVhKVWIyNWxUV0Z3Y0dsdVp6b2dUblVzQ2lBZ0lDQk1iMkZrWlhJNklHSjBMQW9nSUNBZ1RHOWhaR1Z5VlhScGJITTZJRWR6TEFvZ0lDQWdURzloWkdsdVowMWhibUZuWlhJNklIcGhMQW9nSUNBZ1RHOXZjRTl1WTJVNklGQmtMQW9nSUNBZ1RHOXZjRkJwYm1kUWIyNW5PaUJFWkN3S0lDQWdJRXh2YjNCU1pYQmxZWFE2SUVsa0xBb2dJQ0FnVEhWdGFXNWhibU5sUVd4d2FHRkdiM0p0WVhRNklGbDFMQW9nSUNBZ1RIVnRhVzVoYm1ObFJtOXliV0YwT2lCS2RTd0tJQ0FnSUUxUFZWTkZPaUJIZVN3S0lDQWdJRTFoZEdWeWFXRnNPaUJrZEN3S0lDQWdJRTFoZEdWeWFXRnNURzloWkdWeU9pQjZhQ3dLSUNBZ0lFMWhkR2c2SUUwd0xBb2dJQ0FnVFdGMGFGVjBhV3h6T2lCTk1Dd0tJQ0FnSUUxaGRISnBlRE02SUd4MExBb2dJQ0FnVFdGMGNtbDRORG9nY0dVc0NpQWdJQ0JOWVhoRmNYVmhkR2x2YmpvZ2Iyd3NDaUFnSUNCTlpYTm9PaUJ6ZEN3S0lDQWdJRTFsYzJoQ1lYTnBZMDFoZEdWeWFXRnNPaUJvYml3S0lDQWdJRTFsYzJoRVpYQjBhRTFoZEdWeWFXRnNPaUJsYnl3S0lDQWdJRTFsYzJoRWFYTjBZVzVqWlUxaGRHVnlhV0ZzT2lCMGJ5d0tJQ0FnSUUxbGMyaEdZV05sVFdGMFpYSnBZV3c2SUVFd0xBb2dJQ0FnVFdWemFFeGhiV0psY25STllYUmxjbWxoYkRvZ1NXRXNDaUFnSUNCTlpYTm9UV0YwWTJGd1RXRjBaWEpwWVd3NklFUmhMQW9nSUNBZ1RXVnphRTV2Y20xaGJFMWhkR1Z5YVdGc09pQlFZU3dLSUNBZ0lFMWxjMmhRYUc5dVowMWhkR1Z5YVdGc09pQk1ZU3dLSUNBZ0lFMWxjMmhRYUhsemFXTmhiRTFoZEdWeWFXRnNPaUJEWVN3S0lDQWdJRTFsYzJoVGRHRnVaR0Z5WkUxaGRHVnlhV0ZzT2lCd2J5d0tJQ0FnSUUxbGMyaFViMjl1VFdGMFpYSnBZV3c2SUZKaExBb2dJQ0FnVFdsdVJYRjFZWFJwYjI0NklITnNMQW9nSUNBZ1RXbHljbTl5WldSU1pYQmxZWFJYY21Gd2NHbHVaem9nUW5Nc0NpQWdJQ0JOYVhoUGNHVnlZWFJwYjI0NklFUjFMQW9nSUNBZ1RYVnNkR2xOWVhSbGNtbGhiRG9nUXpBc0NpQWdJQ0JOZFd4MGFYQnNlVUpzWlc1a2FXNW5PaUJ5YkN3S0lDQWdJRTExYkhScGNHeDVUM0JsY21GMGFXOXVPaUJXY3l3S0lDQWdJRTVsWVhKbGMzUkdhV3gwWlhJNklISjBMQW9nSUNBZ1RtVmhjbVZ6ZEUxcGNFMWhjRXhwYm1WaGNrWnBiSFJsY2pvZ1dYa3NDaUFnSUNCT1pXRnlaWE4wVFdsd1RXRndUbVZoY21WemRFWnBiSFJsY2pvZ1Nua3NDaUFnSUNCT1pXRnlaWE4wVFdsd2JXRndUR2x1WldGeVJtbHNkR1Z5T2lCdVlTd0tJQ0FnSUU1bFlYSmxjM1JOYVhCdFlYQk9aV0Z5WlhOMFJtbHNkR1Z5T2lCMFlTd0tJQ0FnSUU1bGRtVnlSR1Z3ZEdnNklFVjFMQW9nSUNBZ1RtVjJaWEpUZEdWdVkybHNSblZ1WXpvZ2J6QXNDaUFnSUNCT2IwSnNaVzVrYVc1bk9pQjJiaXdLSUNBZ0lFNXZRMjlzYjNKek9pQlRNQ3dLSUNBZ0lFNXZWRzl1WlUxaGNIQnBibWM2SUY5dUxBb2dJQ0FnVG05eWJXRnNRVzVwYldGMGFXOXVRbXhsYm1STmIyUmxPaUIxWVN3S0lDQWdJRTV2Y20xaGJFSnNaVzVrYVc1bk9pQnpjaXdLSUNBZ0lFNXZkRVZ4ZFdGc1JHVndkR2c2SUVsMUxBb2dJQ0FnVG05MFJYRjFZV3hUZEdWdVkybHNSblZ1WXpvZ2RUQXNDaUFnSUNCT2RXMWlaWEpMWlhsbWNtRnRaVlJ5WVdOck9pQkJjaXdLSUNBZ0lFOWlhbVZqZERORU9pQk9aU3dLSUNBZ0lFOWlhbVZqZEV4dllXUmxjam9nZFhrc0NpQWdJQ0JQWW1wbFkzUlRjR0ZqWlU1dmNtMWhiRTFoY0RvZ2VtUXNDaUFnSUNCUFkzUmhhR1ZrY205dVFuVm1abVZ5UjJWdmJXVjBjbms2SUVscExBb2dJQ0FnVDJOMFlXaGxaSEp2YmtkbGIyMWxkSEo1T2lCSmFTd0tJQ0FnSUU5dVpVWmhZM1J2Y2pvZ2VYVXNDaUFnSUNCUGJtVk5hVzUxYzBSemRFRnNjR2hoUm1GamRHOXlPaUJpZFN3S0lDQWdJRTl1WlUxcGJuVnpSSE4wUTI5c2IzSkdZV04wYjNJNklGTjFMQW9nSUNBZ1QyNWxUV2x1ZFhOVGNtTkJiSEJvWVVaaFkzUnZjam9nVm1Nc0NpQWdJQ0JQYm1WTmFXNTFjMU55WTBOdmJHOXlSbUZqZEc5eU9pQmZkU3dLSUNBZ0lFOXlkR2h2WjNKaGNHaHBZME5oYldWeVlUb2dSbklzQ2lBZ0lDQlFRMFpUYUdGa2IzZE5ZWEE2SUVoakxBb2dJQ0FnVUVOR1UyOW1kRk5vWVdSdmQwMWhjRG9nWm5Vc0NpQWdJQ0JRVFZKRlRVZGxibVZ5WVhSdmNqb2dZV2dzQ2lBZ0lDQlFZWEpoYldWMGNtbGpSMlZ2YldWMGNuazZJR2wyTEFvZ0lDQWdVR0Z5ZEdsamJHVTZJRkl3TEFvZ0lDQWdVR0Z5ZEdsamJHVkNZWE5wWTAxaGRHVnlhV0ZzT2lCRU1Dd0tJQ0FnSUZCaGNuUnBZMnhsVTNsemRHVnRPaUJRTUN3S0lDQWdJRkJoY25ScFkyeGxVM2x6ZEdWdFRXRjBaWEpwWVd3NklFWXdMQW9nSUNBZ1VHRjBhRG9nWjNJc0NpQWdJQ0JRWlhKemNHVmpkR2wyWlVOaGJXVnlZVG9nZFhRc0NpQWdJQ0JRYkdGdVpUb2dWM1FzQ2lBZ0lDQlFiR0Z1WlVKMVptWmxja2RsYjIxbGRISjVPaUJRYVN3S0lDQWdJRkJzWVc1bFIyVnZiV1YwY25rNklGQnBMQW9nSUNBZ1VHeGhibVZJWld4d1pYSTZJSHA1TEFvZ0lDQWdVRzlwYm5SRGJHOTFaRG9nVERBc0NpQWdJQ0JRYjJsdWRFTnNiM1ZrVFdGMFpYSnBZV3c2SUVrd0xBb2dJQ0FnVUc5cGJuUk1hV2RvZERvZ1IyRXNDaUFnSUNCUWIybHVkRXhwWjJoMFNHVnNjR1Z5T2lCU2VTd0tJQ0FnSUZCdmFXNTBjem9nZW5Jc0NpQWdJQ0JRYjJsdWRITk5ZWFJsY21saGJEb2dhbTRzQ2lBZ0lDQlFiMnhoY2tkeWFXUklaV3h3WlhJNklFUjVMQW9nSUNBZ1VHOXNlV2hsWkhKdmJrSjFabVpsY2tkbGIyMWxkSEo1T2lCaGJpd0tJQ0FnSUZCdmJIbG9aV1J5YjI1SFpXOXRaWFJ5ZVRvZ1lXNHNDaUFnSUNCUWIzTnBkR2x2Ym1Gc1FYVmthVzg2SUhoNUxBb2dJQ0FnVUhKdmNHVnlkSGxDYVc1a2FXNW5PaUJyWlN3S0lDQWdJRkJ5YjNCbGNuUjVUV2w0WlhJNklGaG9MQW9nSUNBZ1VYVmhaSEpoZEdsalFtVjZhV1Z5UTNWeWRtVTZJR052TEFvZ0lDQWdVWFZoWkhKaGRHbGpRbVY2YVdWeVEzVnlkbVV6T2lCb2J5d0tJQ0FnSUZGMVlYUmxjbTVwYjI0NklHZDBMQW9nSUNBZ1VYVmhkR1Z5Ym1sdmJrdGxlV1p5WVcxbFZISmhZMnM2SUZkcExBb2dJQ0FnVVhWaGRHVnlibWx2Ymt4cGJtVmhja2x1ZEdWeWNHOXNZVzUwT2lCRWFDd0tJQ0FnSUZKRlZrbFRTVTlPT2lCallTd0tJQ0FnSUZKSFFrRkVaWEIwYUZCaFkydHBibWM2SUVKa0xBb2dJQ0FnVWtkQ1FVWnZjbTFoZERvZ1kzUXNDaUFnSUNCU1IwSkJTVzUwWldkbGNrWnZjbTFoZERvZ1pXUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk1UQjRNVEJmUm05eWJXRjBPaUJtWkN3S0lDQWdJRkpIUWtGZlFWTlVRMTh4TUhnMVgwWnZjbTFoZERvZ2FHUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk1UQjRObDlHYjNKdFlYUTZJSFZrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYekV3ZURoZlJtOXliV0YwT2lCa1pDd0tJQ0FnSUZKSFFrRmZRVk5VUTE4eE1uZ3hNRjlHYjNKdFlYUTZJSEJrTEFvZ0lDQWdVa2RDUVY5QlUxUkRYekV5ZURFeVgwWnZjbTFoZERvZ2JXUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk5IZzBYMFp2Y20xaGREb2dibVFzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZOWGcwWDBadmNtMWhkRG9nYVdRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mTlhnMVgwWnZjbTFoZERvZ2NtUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk5uZzFYMFp2Y20xaGREb2djMlFzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZObmcyWDBadmNtMWhkRG9nYjJRc0NpQWdJQ0JTUjBKQlgwRlRWRU5mT0hnMVgwWnZjbTFoZERvZ1lXUXNDaUFnSUNCU1IwSkJYMEZUVkVOZk9IZzJYMFp2Y20xaGREb2diR1FzQ2lBZ0lDQlNSMEpCWDBGVFZFTmZPSGc0WDBadmNtMWhkRG9nWTJRc0NpQWdJQ0JTUjBKQlgwSlFWRU5mUm05eWJXRjBPaUJuWkN3S0lDQWdJRkpIUWtGZlJWUkRNbDlGUVVOZlJtOXliV0YwT2lCbmJDd0tJQ0FnSUZKSFFrRmZVRlpTVkVOZk1rSlFVRll4WDBadmNtMWhkRG9nY0d3c0NpQWdJQ0JTUjBKQlgxQldVbFJEWHpSQ1VGQldNVjlHYjNKdFlYUTZJR1pzTEFvZ0lDQWdVa2RDUVY5VE0xUkRYMFJZVkRGZlJtOXliV0YwT2lCc2JDd0tJQ0FnSUZKSFFrRmZVek5VUTE5RVdGUXpYMFp2Y20xaGREb2dZMndzQ2lBZ0lDQlNSMEpCWDFNelZFTmZSRmhVTlY5R2IzSnRZWFE2SUdoc0xBb2dJQ0FnVWtkQ1JtOXliV0YwT2lCSGJpd0tJQ0FnSUZKSFFrbHVkR1ZuWlhKR2IzSnRZWFE2SUV0MUxBb2dJQ0FnVWtkQ1gwVlVRekZmUm05eWJXRjBPaUIwWkN3S0lDQWdJRkpIUWw5RlZFTXlYMFp2Y20xaGREb2diV3dzQ2lBZ0lDQlNSMEpmVUZaU1ZFTmZNa0pRVUZZeFgwWnZjbTFoZERvZ1pHd3NDaUFnSUNCU1IwSmZVRlpTVkVOZk5FSlFVRll4WDBadmNtMWhkRG9nZFd3c0NpQWdJQ0JTUjBKZlV6TlVRMTlFV0ZReFgwWnZjbTFoZERvZ1lXd3NDaUFnSUNCU1IwWnZjbTFoZERvZ2FuVXNDaUFnSUNCU1IwbHVkR1ZuWlhKR2IzSnRZWFE2SUZGMUxBb2dJQ0FnVW1GM1UyaGhaR1Z5VFdGMFpYSnBZV3c2SUVkcExBb2dJQ0FnVW1GNU9pQkRiaXdLSUNBZ0lGSmhlV05oYzNSbGNqb2dSWGtzQ2lBZ0lDQlNaV04wUVhKbFlVeHBaMmgwT2lCWVlTd0tJQ0FnSUZKbFpFWnZjbTFoZERvZ1duVXNDaUFnSUNCU1pXUkpiblJsWjJWeVJtOXliV0YwT2lBa2RTd0tJQ0FnSUZKbGFXNW9ZWEprVkc5dVpVMWhjSEJwYm1jNklFSjFMQW9nSUNBZ1VtVndaV0YwVjNKaGNIQnBibWM2SUU1ekxBb2dJQ0FnVW1Wd2JHRmpaVk4wWlc1amFXeFBjRG9nWlRBc0NpQWdJQ0JTWlhabGNuTmxVM1ZpZEhKaFkzUkZjWFZoZEdsdmJqb2daM1VzQ2lBZ0lDQlNhVzVuUW5WbVptVnlSMlZ2YldWMGNuazZJR0p5TEFvZ0lDQWdVbWx1WjBkbGIyMWxkSEo1T2lCaWNpd0tJQ0FnSUZOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpFd2VERXdYMFp2Y20xaGREb2dRMlFzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExOHhNSGcxWDBadmNtMWhkRG9nVkdRc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTh4TUhnMlgwWnZjbTFoZERvZ1JXUXNDaUFnSUNCVFVrZENPRjlCVEZCSVFUaGZRVk5VUTE4eE1IZzRYMFp2Y20xaGREb2dRV1FzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExOHhNbmd4TUY5R2IzSnRZWFE2SUV4a0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mTVRKNE1USmZSbTl5YldGME9pQlNaQ3dLSUNBZ0lGTlNSMEk0WDBGTVVFaEJPRjlCVTFSRFh6UjRORjlHYjNKdFlYUTZJSGhrTEFvZ0lDQWdVMUpIUWpoZlFVeFFTRUU0WDBGVFZFTmZOWGcwWDBadmNtMWhkRG9nZVdRc0NpQWdJQ0JUVWtkQ09GOUJURkJJUVRoZlFWTlVRMTgxZURWZlJtOXliV0YwT2lCMlpDd0tJQ0FnSUZOU1IwSTRYMEZNVUVoQk9GOUJVMVJEWHpaNE5WOUdiM0p0WVhRNklGOWtMQW9nSUNBZ1UxSkhRamhmUVV4UVNFRTRYMEZUVkVOZk5uZzJYMFp2Y20xaGREb2dUV1FzQ2lBZ0lDQlRVa2RDT0Y5QlRGQklRVGhmUVZOVVExODRlRFZmUm05eWJXRjBPaUJpWkN3S0lDQWdJRk5TUjBJNFgwRk1VRWhCT0Y5QlUxUkRYemg0Tmw5R2IzSnRZWFE2SUhka0xBb2dJQ0FnVTFKSFFqaGZRVXhRU0VFNFgwRlRWRU5mT0hnNFgwWnZjbTFoZERvZ1UyUXNDaUFnSUNCVFkyVnVaVG9nYm04c0NpQWdJQ0JUWTJWdVpWVjBhV3h6T2lCMGRpd0tJQ0FnSUZOb1lXUmxja05vZFc1ck9pQkdaU3dLSUNBZ0lGTm9ZV1JsY2t4cFlqb2djWFFzQ2lBZ0lDQlRhR0ZrWlhKTllYUmxjbWxoYkRvZ2MyNHNDaUFnSUNCVGFHRmtiM2ROWVhSbGNtbGhiRG9nUVdFc0NpQWdJQ0JUYUdGd1pUb2dXSFFzQ2lBZ0lDQlRhR0Z3WlVKMVptWmxja2RsYjIxbGRISjVPaUJFYVN3S0lDQWdJRk5vWVhCbFIyVnZiV1YwY25rNklFUnBMQW9nSUNBZ1UyaGhjR1ZRWVhSb09pQlBlU3dLSUNBZ0lGTm9ZWEJsVlhScGJITTZJRXAwTEFvZ0lDQWdVMmh2Y25SVWVYQmxPaUJyZFN3S0lDQWdJRk5yWld4bGRHOXVPaUJoYnl3S0lDQWdJRk5yWld4bGRHOXVTR1ZzY0dWeU9pQmxkU3dLSUNBZ0lGTnJhVzV1WldSTlpYTm9PaUJ6Ynl3S0lDQWdJRk50YjI5MGFGTm9ZV1JwYm1jNklGaDVMQW9nSUNBZ1UzQm9aWEpsT2lCQmJpd0tJQ0FnSUZOd2FHVnlaVUoxWm1abGNrZGxiMjFsZEhKNU9pQkdhU3dLSUNBZ0lGTndhR1Z5WlVkbGIyMWxkSEo1T2lCR2FTd0tJQ0FnSUZOd2FHVnlhV05oYkRvZ1FYa3NDaUFnSUNCVGNHaGxjbWxqWVd4SVlYSnRiMjVwWTNNek9pQktZU3dLSUNBZ0lGTndiR2x1WlVOMWNuWmxPaUIxYnl3S0lDQWdJRk53YjNSTWFXZG9kRG9nU0dFc0NpQWdJQ0JUY0c5MFRHbG5hSFJJWld4d1pYSTZJRXg1TEFvZ0lDQWdVM0J5YVhSbE9pQnlieXdLSUNBZ0lGTndjbWwwWlUxaGRHVnlhV0ZzT2lCcGJ5d0tJQ0FnSUZOeVkwRnNjR2hoUm1GamRHOXlPaUJIWXl3S0lDQWdJRk55WTBGc2NHaGhVMkYwZFhKaGRHVkdZV04wYjNJNklGUjFMQW9nSUNBZ1UzSmpRMjlzYjNKR1lXTjBiM0k2SUhaMUxBb2dJQ0FnVTNSaGRHbGpRMjl3ZVZWellXZGxPaUI0TUN3S0lDQWdJRk4wWVhScFkwUnlZWGRWYzJGblpUb2dhSElzQ2lBZ0lDQlRkR0YwYVdOU1pXRmtWWE5oWjJVNklIQXdMQW9nSUNBZ1UzUmxjbVZ2UTJGdFpYSmhPaUJtZVN3S0lDQWdJRk4wY21WaGJVTnZjSGxWYzJGblpUb2dkakFzQ2lBZ0lDQlRkSEpsWVcxRWNtRjNWWE5oWjJVNklHWXdMQW9nSUNBZ1UzUnlaV0Z0VW1WaFpGVnpZV2RsT2lCbk1Dd0tJQ0FnSUZOMGNtbHVaMHRsZVdaeVlXMWxWSEpoWTJzNklFdHVMQW9nSUNBZ1UzVmlkSEpoWTNSRmNYVmhkR2x2YmpvZ2JYVXNDaUFnSUNCVGRXSjBjbUZqZEdsMlpVSnNaVzVrYVc1bk9pQnBiQ3dLSUNBZ0lGUlBWVU5JT2lCV2VTd0tJQ0FnSUZSaGJtZGxiblJUY0dGalpVNXZjbTFoYkUxaGNEb2dTR2tzQ2lBZ0lDQlVaWFJ5WVdobFpISnZia0oxWm1abGNrZGxiMjFsZEhKNU9pQjNjaXdLSUNBZ0lGUmxkSEpoYUdWa2NtOXVSMlZ2YldWMGNuazZJSGR5TEFvZ0lDQWdWR1Y0ZEVkbGIyMWxkSEo1T2lCeWRpd0tJQ0FnSUZSbGVIUjFjbVU2SUc5MExBb2dJQ0FnVkdWNGRIVnlaVXh2WVdSbGNqb2dRbWdzQ2lBZ0lDQlViM0oxYzBKMVptWmxja2RsYjIxbGRISjVPaUJUY2l3S0lDQWdJRlJ2Y25WelIyVnZiV1YwY25rNklGTnlMQW9nSUNBZ1ZHOXlkWE5MYm05MFFuVm1abVZ5UjJWdmJXVjBjbms2SUZSeUxBb2dJQ0FnVkc5eWRYTkxibTkwUjJWdmJXVjBjbms2SUZSeUxBb2dJQ0FnVkhKcFlXNW5iR1U2SUc1MExBb2dJQ0FnVkhKcFlXNW5iR1ZHWVc1RWNtRjNUVzlrWlRvZ1VYa3NDaUFnSUNCVWNtbGhibWRzWlZOMGNtbHdSSEpoZDAxdlpHVTZJR3A1TEFvZ0lDQWdWSEpwWVc1bmJHVnpSSEpoZDAxdlpHVTZJRVprTEFvZ0lDQWdWSFZpWlVKMVptWmxja2RsYjIxbGRISjVPaUJGY2l3S0lDQWdJRlIxWW1WSFpXOXRaWFJ5ZVRvZ1JYSXNDaUFnSUNCVlZrMWhjSEJwYm1jNklHaGhMQW9nSUNBZ1ZXbHVkREUyUVhSMGNtbGlkWFJsT2lCck1Dd0tJQ0FnSUZWcGJuUXhOa0oxWm1abGNrRjBkSEpwWW5WMFpUb2dXWE1zQ2lBZ0lDQlZhVzUwTXpKQmRIUnlhV0oxZEdVNklGWXdMQW9nSUNBZ1ZXbHVkRE15UW5WbVptVnlRWFIwY21saWRYUmxPaUJhY3l3S0lDQWdJRlZwYm5RNFFYUjBjbWxpZFhSbE9pQlZNQ3dLSUNBZ0lGVnBiblE0UW5WbVptVnlRWFIwY21saWRYUmxPaUJSWXl3S0lDQWdJRlZwYm5RNFEyeGhiWEJsWkVGMGRISnBZblYwWlRvZ1R6QXNDaUFnSUNCVmFXNTBPRU5zWVcxd1pXUkNkV1ptWlhKQmRIUnlhV0oxZEdVNklFdGpMQW9nSUNBZ1ZXNXBabTl5YlRvZ1oyOHNDaUFnSUNCVmJtbG1iM0p0YzB4cFlqb2dhV1VzQ2lBZ0lDQlZibWxtYjNKdGMxVjBhV3h6T2lCMVppd0tJQ0FnSUZWdWMybG5ibVZrUW5sMFpWUjVjR1U2SUhKdUxBb2dJQ0FnVlc1emFXZHVaV1JKYm5ReU5EaFVlWEJsT2lCVWFTd0tJQ0FnSUZWdWMybG5ibVZrU1c1MFZIbHdaVG9nVUhNc0NpQWdJQ0JWYm5OcFoyNWxaRk5vYjNKME5EUTBORlI1Y0dVNklGWjFMQW9nSUNBZ1ZXNXphV2R1WldSVGFHOXlkRFUxTlRGVWVYQmxPaUJYZFN3S0lDQWdJRlZ1YzJsbmJtVmtVMmh2Y25RMU5qVlVlWEJsT2lCeGRTd0tJQ0FnSUZWdWMybG5ibVZrVTJodmNuUlVlWEJsT2lCamNpd0tJQ0FnSUZaVFRWTm9ZV1J2ZDAxaGNEb2dhWElzQ2lBZ0lDQldaV04wYjNJeU9pQllMQW9nSUNBZ1ZtVmpkRzl5TXpvZ1RTd0tJQ0FnSUZabFkzUnZjalE2SUZabExBb2dJQ0FnVm1WamRHOXlTMlY1Wm5KaGJXVlVjbUZqYXpvZ1EzSXNDaUFnSUNCV1pYSjBaWGc2SUU0d0xBb2dJQ0FnVm1WeWRHVjRRMjlzYjNKek9pQkZNQ3dLSUNBZ0lGWnBaR1Z2VkdWNGRIVnlaVG9nZDJnc0NpQWdJQ0JYWldKSFRERlNaVzVrWlhKbGNqb2dYMmdzQ2lBZ0lDQlhaV0pIVEVOMVltVlNaVzVrWlhKVVlYSm5aWFE2SUdwekxBb2dJQ0FnVjJWaVIweE5kV3gwYVhCc1pWSmxibVJsY2xSaGNtZGxkSE02SUZwakxBb2dJQ0FnVjJWaVIweE5kV3gwYVhOaGJYQnNaVkpsYm1SbGNsUmhjbWRsZERvZ1dITXNDaUFnSUNCWFpXSkhURkpsYm1SbGNsUmhjbWRsZERvZ1FYUXNDaUFnSUNCWFpXSkhURkpsYm1SbGNsUmhjbWRsZEVOMVltVTZJRkV3TEFvZ0lDQWdWMlZpUjB4U1pXNWtaWEpsY2pvZ2NXVXNDaUFnSUNCWFpXSkhURlYwYVd4ek9pQkZlQ3dLSUNBZ0lGZHBjbVZtY21GdFpVZGxiMjFsZEhKNU9pQkZZU3dLSUNBZ0lGZHBjbVZtY21GdFpVaGxiSEJsY2pvZ1dqQXNDaUFnSUNCWGNtRndRWEp2ZFc1a1JXNWthVzVuT2lCUGN5d0tJQ0FnSUZoSVVreHZZV1JsY2pvZ0pEQXNDaUFnSUNCYVpYSnZRM1Z5ZG1GMGRYSmxSVzVrYVc1bk9pQk5hU3dLSUNBZ0lGcGxjbTlHWVdOMGIzSTZJSGgxTEFvZ0lDQWdXbVZ5YjFOc2IzQmxSVzVrYVc1bk9pQmlhU3dLSUNBZ0lGcGxjbTlUZEdWdVkybHNUM0E2SUV0NUxBb2dJQ0FnYzFKSFFrVnVZMjlrYVc1bk9pQlBhUXA5T3dwbWRXNWpkR2x2YmlCblpYUlhaV0pIVEVWeWNtOXlUV1Z6YzJGblpTZ3BJSHNLSUNBZ0lISmxkSFZ5YmlCblpYUkZjbkp2Y2sxbGMzTmhaMlVvTVNrN0NuMEtablZ1WTNScGIyNGdaMlYwUlhKeWIzSk5aWE56WVdkbEtIWmxjbk5wYjI0cElIc0tJQ0FnSUhaaGNpQnVZVzFsY3lBOUlIc0tJQ0FnSUNBZ0lDQXhPaUFpVjJWaVIwd2lMQW9nSUNBZ0lDQWdJREk2SUNKWFpXSkhUQ0F5SWdvZ0lDQWdmVHNLSUNBZ0lIWmhjaUJqYjI1MFpYaDBjeUE5SUhzS0lDQWdJQ0FnSUNBeE9pQjNhVzVrYjNjdVYyVmlSMHhTWlc1a1pYSnBibWREYjI1MFpYaDBMQW9nSUNBZ0lDQWdJREk2SUhkcGJtUnZkeTVYWldKSFRESlNaVzVrWlhKcGJtZERiMjUwWlhoMENpQWdJQ0I5T3dvZ0lDQWdkbUZ5SUcxbGMzTmhaMlVnUFNBbldXOTFjaUFrTUNCa2IyVnpJRzV2ZENCelpXVnRJSFJ2SUhOMWNIQnZjblFnUEdFZ2FISmxaajBpYUhSMGNEb3ZMMnRvY205dWIzTXViM0puTDNkbFltZHNMM2RwYTJrdlIyVjBkR2x1WjE5aFgxZGxZa2RNWDBsdGNHeGxiV1Z1ZEdGMGFXOXVJaUJ6ZEhsc1pUMGlZMjlzYjNJNkl6QXdNQ0krSkRFOEwyRStKenNLSUNBZ0lIWmhjaUJsYkdWdFpXNTBJRDBnWkc5amRXMWxiblF1WTNKbFlYUmxSV3hsYldWdWRDZ2laR2wySWlrN0NpQWdJQ0JsYkdWdFpXNTBMbWxrSUQwZ0luZGxZbWRzYldWemMyRm5aU0k3Q2lBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG1admJuUkdZVzFwYkhrZ1BTQWliVzl1YjNOd1lXTmxJanNLSUNBZ0lHVnNaVzFsYm5RdWMzUjViR1V1Wm05dWRGTnBlbVVnUFNBaU1UTndlQ0k3Q2lBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG1admJuUlhaV2xuYUhRZ1BTQWlibTl5YldGc0lqc0tJQ0FnSUdWc1pXMWxiblF1YzNSNWJHVXVkR1Y0ZEVGc2FXZHVJRDBnSW1ObGJuUmxjaUk3Q2lBZ0lDQmxiR1Z0Wlc1MExuTjBlV3hsTG1KaFkydG5jbTkxYm1RZ1BTQWlJMlptWmlJN0NpQWdJQ0JsYkdWdFpXNTBMbk4wZVd4bExtTnZiRzl5SUQwZ0lpTXdNREFpT3dvZ0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1d1lXUmthVzVuSUQwZ0lqRXVOV1Z0SWpzS0lDQWdJR1ZzWlcxbGJuUXVjM1I1YkdVdWQybGtkR2dnUFNBaU5EQXdjSGdpT3dvZ0lDQWdaV3hsYldWdWRDNXpkSGxzWlM1dFlYSm5hVzRnUFNBaU5XVnRJR0YxZEc4Z01DSTdDaUFnSUNCcFppQW9ZMjl1ZEdWNGRITmJkbVZ5YzJsdmJsMHBJSHNLSUNBZ0lDQWdJQ0J0WlhOellXZGxJRDBnYldWemMyRm5aUzV5WlhCc1lXTmxLQ0lrTUNJc0lDSm5jbUZ3YUdsamN5QmpZWEprSWlrN0NpQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJRzFsYzNOaFoyVWdQU0J0WlhOellXZGxMbkpsY0d4aFkyVW9JaVF3SWl3Z0ltSnliM2R6WlhJaUtUc0tJQ0FnSUgwS0lDQWdJRzFsYzNOaFoyVWdQU0J0WlhOellXZGxMbkpsY0d4aFkyVW9JaVF4SWl3Z2JtRnRaWE5iZG1WeWMybHZibDBwT3dvZ0lDQWdaV3hsYldWdWRDNXBibTVsY2toVVRVd2dQU0J0WlhOellXZGxPd29nSUNBZ2NtVjBkWEp1SUdWc1pXMWxiblE3Q24wS1kyOXVjM1FnY0dsNFpXeFNZWFJwYnlBOUlIZHBibVJ2ZHk1a1pYWnBZMlZRYVhobGJGSmhkR2x2SUh4OElERXVNRHNLWm5WdVkzUnBiMjRnWlhabGJuUXljMk5sYm1WZmNHbDRaV3dvYzJObGJtVXNJR1YyWlc1MEtTQjdDaUFnSUNCamIyNXpkQ0I3SUdOaGJuWmhjeUFnZlNBOUlITmpaVzVsTG5OamNtVmxianNLSUNBZ0lHTnZibk4wSUhKbFkzUWdQU0JqWVc1MllYTXVaMlYwUW05MWJtUnBibWREYkdsbGJuUlNaV04wS0NrN0NpQWdJQ0JqYjI1emRDQjRJRDBnS0dWMlpXNTBMbU5zYVdWdWRGZ2dMU0J5WldOMExteGxablFwSUNvZ2NHbDRaV3hTWVhScGJ6c0tJQ0FnSUdOdmJuTjBJSGtnUFNBb2NtVmpkQzVvWldsbmFIUWdMU0FvWlhabGJuUXVZMnhwWlc1MFdTQXRJSEpsWTNRdWRHOXdLU2tnS2lCd2FYaGxiRkpoZEdsdk93b2dJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0I0TEFvZ0lDQWdJQ0FnSUhrS0lDQWdJRjA3Q24wS1puVnVZM1JwYjI0Z1NXUmxiblJwZEhrMGVEUW9LU0I3Q2lBZ0lDQnlaWFIxY200Z2JtVjNJSEJsS0NrN0NuMEtablZ1WTNScGIyNGdhVzVmYzJObGJtVW9jMk5sYm1Vc0lHMXZkWE5sWDJWMlpXNTBLU0I3Q2lBZ0lDQmpiMjV6ZENCYmVDd2dlVjBnUFNCbGRtVnVkREp6WTJWdVpWOXdhWGhsYkNoelkyVnVaU3dnYlc5MWMyVmZaWFpsYm5RcE93b2dJQ0FnWTI5dWMzUWdXM040TENCemVTd2djM2NzSUhOb1hTQTlJSE5qWlc1bExuQnBlR1ZzWVhKbFlTNTJZV3gxWlRzS0lDQWdJSEpsZEhWeWJpQjRJRDQ5SUhONElDWW1JSGdnUENCemVDQXJJSE4zSUNZbUlIa2dQajBnYzNrZ0ppWWdlU0E4SUhONUlDc2djMmc3Q24wS1puVnVZM1JwYjI0Z1lYUjBZV05vWHpOa1gyTmhiV1Z5WVNoallXNTJZWE1zSUcxaGEybGxYMk5oYldWeVlTd2dZMkZ0TTJRc0lITmpaVzVsS1NCN0NpQWdJQ0JwWmlBb1kyRnRNMlFnUFQwOUlIVnVaR1ZtYVc1bFpDa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwS0lDQWdJR052Ym5OMElGdDNMQ0JvWFNBOUlHMWhhMmxsWDJOaGJXVnlZUzV5WlhOdmJIVjBhVzl1TG5aaGJIVmxPd29nSUNBZ1kyOXVjM1FnWTJGdFpYSmhJRDBnYm1WM0lIVjBLR05oYlROa0xtWnZkaXdnZHlBdklHZ3NJR05oYlROa0xtNWxZWElzSUdOaGJUTmtMbVpoY2lrN0NpQWdJQ0JqYjI1emRDQmpaVzUwWlhJZ1BTQnVaWGNnVFNndUxpNWpZVzB6WkM1c2IyOXJZWFFwT3dvZ0lDQWdZMkZ0WlhKaExuVndJRDBnYm1WM0lFMG9MaTR1WTJGdE0yUXVkWEIyWldOMGIzSXBPd29nSUNBZ1kyRnRaWEpoTG5CdmMybDBhVzl1TG5ObGRDZ3VMaTVqWVcwelpDNWxlV1Z3YjNOcGRHbHZiaWs3Q2lBZ0lDQmpZVzFsY21FdWJHOXZhMEYwS0dObGJuUmxjaWs3Q2lBZ0lDQm1kVzVqZEdsdmJpQjFjR1JoZEdVb0tTQjdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExuVndaR0YwWlZCeWIycGxZM1JwYjI1TllYUnlhWGdvS1RzS0lDQWdJQ0FnSUNCallXMWxjbUV1ZFhCa1lYUmxWMjl5YkdSTllYUnlhWGdvS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0IyYVdWM0lEMGdZMkZ0WlhKaExtMWhkSEpwZUZkdmNteGtTVzUyWlhKelpUc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCd2NtOXFaV04wYVc5dUlEMGdZMkZ0WlhKaExuQnliMnBsWTNScGIyNU5ZWFJ5YVhnN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnVzNkcFpIUm9MQ0JvWldsbmFIUmRJRDBnYldGcmFXVmZZMkZ0WlhKaExuSmxjMjlzZFhScGIyNHVkbUZzZFdVN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnVzNnc0lIa3NJSHBkSUQwZ1kyRnRaWEpoTG5CdmMybDBhVzl1T3dvZ0lDQWdJQ0FnSUcxaGEybGxYMk5oYldWeVlTNTFjR1JoZEdWZmJXRjBjbWxqWlhNb2RtbGxkeTVsYkdWdFpXNTBjeXdnY0hKdmFtVmpkR2x2Ymk1bGJHVnRaVzUwY3l3Z1d3b2dJQ0FnSUNBZ0lDQWdJQ0IzYVdSMGFDd0tJQ0FnSUNBZ0lDQWdJQ0FnYUdWcFoyaDBDaUFnSUNBZ0lDQWdYU3dnV3dvZ0lDQWdJQ0FnSUNBZ0lDQjRMQW9nSUNBZ0lDQWdJQ0FnSUNCNUxBb2dJQ0FnSUNBZ0lDQWdJQ0I2Q2lBZ0lDQWdJQ0FnWFNrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQmhaR1JOYjNWelpVaGhibVJzWlhJb1pHOXRUMkpxWldOMExDQmtjbUZuTENCNmIyOXRTVzRzSUhwdmIyMVBkWFFwSUhzS0lDQWdJQ0FnSUNCc1pYUWdjM1JoY25SRWNtRm5XQ0E5SUc1MWJHdzdDaUFnSUNBZ0lDQWdiR1YwSUhOMFlYSjBSSEpoWjFrZ1BTQnVkV3hzT3dvZ0lDQWdJQ0FnSUdaMWJtTjBhVzl1SUcxdmRYTmxWMmhsWld4SVlXNWtiR1Z5S0dVcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnWlNBOUlIZHBibVJ2ZHk1bGRtVnVkQ0I4ZkNCbE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXbHVYM05qWlc1bEtITmpaVzVsTENCbEtTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdSbGJIUmhJRDBnVFdGMGFDNXphV2R1S0dVdVpHVnNkR0ZaS1RzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dSbGJIUmhJRDA5SUMweEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjZiMjl0VDNWMEtDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1pHVnNkR0VnUFQwZ01Ta2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlbTl2YlVsdUtDazdDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdaUzV3Y21WMlpXNTBSR1ZtWVhWc2RDZ3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0JtZFc1amRHbHZiaUJ0YjNWelpVUnZkMjVJWVc1a2JHVnlLR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGcGJsOXpZMlZ1WlNoelkyVnVaU3dnWlNrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRVJ5WVdkWUlEMGdaUzVqYkdsbGJuUllPd29nSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRVJ5WVdkWklEMGdaUzVqYkdsbGJuUlpPd29nSUNBZ0lDQWdJQ0FnSUNCbExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHWjFibU4wYVc5dUlHMXZkWE5sVFc5MlpVaGhibVJzWlhJb1pTa2dld29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV2x1WDNOalpXNWxLSE5qWlc1bExDQmxLU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoemRHRnlkRVJ5WVdkWUlEMDlQU0J1ZFd4c0lIeDhJSE4wWVhKMFJISmhaMWtnUFQwOUlHNTFiR3dwSUhKbGRIVnlianNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR1J5WVdjcElHUnlZV2NvWlM1amJHbGxiblJZSUMwZ2MzUmhjblJFY21GbldDd2daUzVqYkdsbGJuUlpJQzBnYzNSaGNuUkVjbUZuV1NrN0NpQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKMFJISmhaMWdnUFNCbExtTnNhV1Z1ZEZnN0NpQWdJQ0FnSUNBZ0lDQWdJSE4wWVhKMFJISmhaMWtnUFNCbExtTnNhV1Z1ZEZrN0NpQWdJQ0FnSUNBZ0lDQWdJR1V1Y0hKbGRtVnVkRVJsWm1GMWJIUW9LVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYlc5MWMyVlZjRWhoYm1Sc1pYSW9aU2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSVdsdVgzTmpaVzVsS0hOalpXNWxMQ0JsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1T3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxUVzkyWlVoaGJtUnNaWEl1WTJGc2JDaDBhR2x6TENCbEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnYzNSaGNuUkVjbUZuV0NBOUlHNTFiR3c3Q2lBZ0lDQWdJQ0FnSUNBZ0lITjBZWEowUkhKaFoxa2dQU0J1ZFd4c093b2dJQ0FnSUNBZ0lDQWdJQ0JsTG5CeVpYWmxiblJFWldaaGRXeDBLQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdSdmJVOWlhbVZqZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKM2FHVmxiQ0lzSUcxdmRYTmxWMmhsWld4SVlXNWtiR1Z5S1RzS0lDQWdJQ0FnSUNCa2IyMVBZbXBsWTNRdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJXOTFjMlZrYjNkdUlpd2diVzkxYzJWRWIzZHVTR0Z1Wkd4bGNpazdDaUFnSUNBZ0lDQWdaRzl0VDJKcVpXTjBMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbTF2ZFhObGJXOTJaU0lzSUcxdmRYTmxUVzkyWlVoaGJtUnNaWElwT3dvZ0lDQWdJQ0FnSUdSdmJVOWlhbVZqZEM1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NKdGIzVnpaWFZ3SWl3Z2JXOTFjMlZWY0VoaGJtUnNaWElwT3dvZ0lDQWdmUW9nSUNBZ1puVnVZM1JwYjI0Z1pISmhaeWhrWld4MFlWZ3NJR1JsYkhSaFdTa2dld29nSUNBZ0lDQWdJR052Ym5OMElISmhaRkJsY2xCcGVHVnNJRDBnVFdGMGFDNVFTU0F2SURRMU1Ec0tJQ0FnSUNBZ0lDQmpiMjV6ZENCa1pXeDBZVkJvYVNBOUlISmhaRkJsY2xCcGVHVnNJQ29nWkdWc2RHRllPd29nSUNBZ0lDQWdJR052Ym5OMElHUmxiSFJoVkdobGRHRWdQU0J5WVdSUVpYSlFhWGhsYkNBcUlHUmxiSFJoV1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3YjNNZ1BTQmpZVzFsY21FdWNHOXphWFJwYjI0dWMzVmlLR05sYm5SbGNpazdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NtRmthWFZ6SUQwZ2NHOXpMbXhsYm1kMGFDZ3BPd29nSUNBZ0lDQWdJR3hsZENCMGFHVjBZU0E5SUUxaGRHZ3VZV052Y3lod2IzTXVlaUF2SUhKaFpHbDFjeWs3Q2lBZ0lDQWdJQ0FnYkdWMElIQm9hU0E5SUUxaGRHZ3VZWFJoYmpJb2NHOXpMbmtzSUhCdmN5NTRLVHNLSUNBZ0lDQWdJQ0IwYUdWMFlTQTlJRTFoZEdndWJXbHVLRTFoZEdndWJXRjRLSFJvWlhSaElDMGdaR1ZzZEdGVWFHVjBZU3dnTUNrc0lFMWhkR2d1VUVrcE93b2dJQ0FnSUNBZ0lIQm9hU0F0UFNCa1pXeDBZVkJvYVRzS0lDQWdJQ0FnSUNCd2IzTXVlQ0E5SUhKaFpHbDFjeUFxSUUxaGRHZ3VjMmx1S0hSb1pYUmhLU0FxSUUxaGRHZ3VZMjl6S0hCb2FTazdDaUFnSUNBZ0lDQWdjRzl6TG5rZ1BTQnlZV1JwZFhNZ0tpQk5ZWFJvTG5OcGJpaDBhR1YwWVNrZ0tpQk5ZWFJvTG5OcGJpaHdhR2twT3dvZ0lDQWdJQ0FnSUhCdmN5NTZJRDBnY21Ga2FYVnpJQ29nVFdGMGFDNWpiM01vZEdobGRHRXBPd29nSUNBZ0lDQWdJR05oYldWeVlTNXdiM05wZEdsdmJpNWhaR1FvWTJWdWRHVnlLVHNLSUNBZ0lDQWdJQ0JqWVcxbGNtRXViRzl2YTBGMEtHTmxiblJsY2lrN0NpQWdJQ0FnSUNBZ2RYQmtZWFJsS0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjZiMjl0U1c0b0tTQjdDaUFnSUNBZ0lDQWdZMkZ0WlhKaExuQnZjMmwwYVc5dUxuTjFZaWhqWlc1MFpYSXBMbTExYkhScGNHeDVVMk5oYkdGeUtEQXVPU2t1WVdSa0tHTmxiblJsY2lrN0NpQWdJQ0FnSUNBZ2RYQmtZWFJsS0NrN0NpQWdJQ0I5Q2lBZ0lDQm1kVzVqZEdsdmJpQjZiMjl0VDNWMEtDa2dld29nSUNBZ0lDQWdJR05oYldWeVlTNXdiM05wZEdsdmJpNXpkV0lvWTJWdWRHVnlLUzV0ZFd4MGFYQnNlVk5qWVd4aGNpZ3hMakVwTG1Ga1pDaGpaVzUwWlhJcE93b2dJQ0FnSUNBZ0lIVndaR0YwWlNncE93b2dJQ0FnZlFvZ0lDQWdZV1JrVFc5MWMyVklZVzVrYkdWeUtHTmhiblpoY3l3Z1pISmhaeXdnZW05dmJVbHVMQ0I2YjI5dFQzVjBLVHNLZlFwbWRXNWpkR2x2YmlCdGRXd29ZU3dnWWlrZ2V3b2dJQ0FnY21WMGRYSnVJR0l1WTJ4dmJtVW9LUzV0ZFd4MGFYQnNlU2hoS1RzS2ZRcG1kVzVqZEdsdmJpQnZjblJvYjJkeVlYQm9hV053Y205cVpXTjBhVzl1S0d4bFpuUXNJSEpwWjJoMExDQmliM1IwYjIwc0lIUnZjQ3dnZW01bFlYSXNJSHBtWVhJcElIc0tJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnTWlBdklDaHlhV2RvZENBdElHeGxablFwTEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTWlBdklDaDBiM0FnTFNCaWIzUjBiMjBwTEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTFRJZ0x5QW9lbVpoY2lBdElIcHVaV0Z5S1N3S0lDQWdJQ0FnSUNBd0xBb2dJQ0FnSUNBZ0lDMG9jbWxuYUhRZ0t5QnNaV1owS1NBdklDaHlhV2RvZENBdElHeGxablFwTEFvZ0lDQWdJQ0FnSUMwb2RHOXdJQ3NnWW05MGRHOXRLU0F2SUNoMGIzQWdMU0JpYjNSMGIyMHBMQW9nSUNBZ0lDQWdJQzBvZW1aaGNpQXJJSHB1WldGeUtTQXZJQ2g2Wm1GeUlDMGdlbTVsWVhJcExBb2dJQ0FnSUNBZ0lERUtJQ0FnSUYwN0NuMEtablZ1WTNScGIyNGdjR2w0Wld4ZmMzQmhZMlZmYVc1MlpYSnpaU2gzTENCb0xDQnVaV0Z5S1NCN0NpQWdJQ0J5WlhSMWNtNGdXd29nSUNBZ0lDQWdJREF1TlNBcUlIY3NDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMalVnS2lCb0xBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ2JtVmhjaXdLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBdU5TQXFJSGNzQ2lBZ0lDQWdJQ0FnTUM0MUlDb2dhQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURFS0lDQWdJRjA3Q24wS1puVnVZM1JwYjI0Z2NtVnNZWFJwZG1WZmMzQmhZMlVvS1NCN0NpQWdJQ0JqYjI1emRDQnlaV3hoZEdsMlpTQTlJRWxrWlc1MGFYUjVOSGcwS0NrN0NpQWdJQ0J5Wld4aGRHbDJaUzVtY205dFFYSnlZWGtvV3dvZ0lDQWdJQ0FnSURJc0NpQWdJQ0FnSUNBZ01Dd0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJREFzQ2lBZ0lDQWdJQ0FnTUN3S0lDQWdJQ0FnSUNBeUxBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNQ3dLSUNBZ0lDQWdJQ0F3TEFvZ0lDQWdJQ0FnSURBc0NpQWdJQ0FnSUNBZ01Td0tJQ0FnSUNBZ0lDQXdMQW9nSUNBZ0lDQWdJQzB4TEFvZ0lDQWdJQ0FnSUMweExBb2dJQ0FnSUNBZ0lEQXNDaUFnSUNBZ0lDQWdNUW9nSUNBZ1hTazdDaUFnSUNCeVpYUjFjbTRnY21Wc1lYUnBkbVU3Q24wS1kyeGhjM01nVFdGcmFXVkRZVzFsY21FZ2V3b2dJQ0FnWTI5dWMzUnlkV04wYjNJb0tYc0tJQ0FnSUNBZ0lDQjBhR2x6TG5acFpYY2dQU0J1WlhjZ1oyOG9TV1JsYm5ScGRIazBlRFFvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205cVpXTjBhVzl1SUQwZ2JtVjNJR2R2S0Vsa1pXNTBhWFI1TkhnMEtDa3BPd29nSUNBZ0lDQWdJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGNnUFNCdVpYY2daMjhvU1dSbGJuUnBkSGswZURRb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1d2FYaGxiRjl6Y0dGalpTQTlJRzVsZHlCbmJ5aEpaR1Z1ZEdsMGVUUjROQ2dwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkJwZUdWc1gzTndZV05sWDJsdWRtVnljMlVnUFNCdVpYY2daMjhvU1dSbGJuUnBkSGswZURRb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1d2NtOXFaV04wYVc5dWRtbGxkMTlwYm5abGNuTmxJRDBnYm1WM0lHZHZLRWxrWlc1MGFYUjVOSGcwS0NrcE93b2dJQ0FnSUNBZ0lIUm9hWE11Y21Wc1lYUnBkbVZmYzNCaFkyVWdQU0J1WlhjZ1oyOG9jbVZzWVhScGRtVmZjM0JoWTJVb0tTazdDaUFnSUNBZ0lDQWdkR2hwY3k1eVpXeGhkR2wyWlY5cGJuWmxjbk5sSUQwZ2JtVjNJR2R2S0hKbGJHRjBhWFpsWDNOd1lXTmxLQ2t1YVc1MlpYSjBLQ2twT3dvZ0lDQWdJQ0FnSUhSb2FYTXVZMnhwY0Y5emNHRmpaU0E5SUc1bGR5Qm5ieWhKWkdWdWRHbDBlVFI0TkNncEtUc0tJQ0FnSUNBZ0lDQjBhR2x6TG5KbGMyOXNkWFJwYjI0Z1BTQnVaWGNnWjI4b2JtVjNJRmdvS1NrN0NpQWdJQ0FnSUNBZ2RHaHBjeTVsZVdWd2IzTnBkR2x2YmlBOUlHNWxkeUJuYnlodVpYY2dUU2dwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkJ5WlhCeWIycGxZM1JwYjI1eklEMGdlMzA3Q2lBZ0lDQjlDaUFnSUNCallXeGpkV3hoZEdWZmJXRjBjbWxqWlhNb0tTQjdDaUFnSUNBZ0lDQWdZMjl1YzNRZ1czY3NJR2hkSUQwZ2RHaHBjeTV5WlhOdmJIVjBhVzl1TG5aaGJIVmxPd29nSUNBZ0lDQWdJR052Ym5OMElHNWxZWEpqYkdsd0lEMGdMVEV3WHpBd01Ec0tJQ0FnSUNBZ0lDQjBhR2x6TG5CcGVHVnNYM053WVdObExuWmhiSFZsTG1aeWIyMUJjbkpoZVNodmNuUm9iMmR5WVhCb2FXTndjbTlxWldOMGFXOXVLREFzSUhjc0lEQXNJR2dzSUc1bFlYSmpiR2x3TENBeE1GOHdNREFwS1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkJwZUdWc1gzTndZV05sWDJsdWRtVnljMlV1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLSEJwZUdWc1gzTndZV05sWDJsdWRtVnljMlVvZHl3Z2FDd2dibVZoY21Oc2FYQXBLVHNLSUNBZ0lDQWdJQ0JqYjI1emRDQndjbTlxWDNacFpYY2dQU0J0ZFd3b2RHaHBjeTUyYVdWM0xuWmhiSFZsTENCMGFHbHpMbkJ5YjJwbFkzUnBiMjR1ZG1Gc2RXVXBPd29nSUNBZ0lDQWdJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGN1ZG1Gc2RXVWdQU0J3Y205cVgzWnBaWGM3Q2lBZ0lDQWdJQ0FnZEdocGN5NXdjbTlxWldOMGFXOXVkbWxsZDE5cGJuWmxjbk5sTG5aaGJIVmxJRDBnY0hKdmFsOTJhV1YzTG1Oc2IyNWxLQ2t1YVc1MlpYSjBLQ2s3Q2lBZ0lDQWdJQ0FnVDJKcVpXTjBMbXRsZVhNb2RHaHBjeTV3Y21Wd2NtOXFaV04wYVc5dWN5a3VabTl5UldGamFDZ29hMlY1S1QwK2V3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmJjM0JoWTJVc0lHMWhjbXRsY25Od1lXTmxYU0E5SUd0bGVTNXpjR3hwZENnaUxDSXBPd29nSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJ5WlhCeWIycGxZM1JwYjI1elcydGxlVjB1ZG1Gc2RXVWdQU0IwYUdsekxtTmhiR04xYkdGMFpWOXdjbVZ3Y205cVpXTjBhVzl1WDIxaGRISnBlQ2h6Y0dGalpTd2diV0Z5YTJWeWMzQmhZMlVwT3dvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnZlFvZ0lDQWdkWEJrWVhSbFgyMWhkSEpwWTJWektIWnBaWGNzSUhCeWIycGxZM1JwYjI0c0lISmxjMjlzZFhScGIyNHNJR1Y1WlhCdmN5a2dld29nSUNBZ0lDQWdJSFJvYVhNdWRtbGxkeTUyWVd4MVpTNW1jbTl0UVhKeVlYa29kbWxsZHlrN0NpQWdJQ0FnSUNBZ2RHaHBjeTV3Y205cVpXTjBhVzl1TG5aaGJIVmxMbVp5YjIxQmNuSmhlU2h3Y205cVpXTjBhVzl1S1RzS0lDQWdJQ0FnSUNCMGFHbHpMbkpsYzI5c2RYUnBiMjR1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLSEpsYzI5c2RYUnBiMjRwT3dvZ0lDQWdJQ0FnSUhSb2FYTXVaWGxsY0c5emFYUnBiMjR1ZG1Gc2RXVXVabkp2YlVGeWNtRjVLR1Y1WlhCdmN5azdDaUFnSUNBZ0lDQWdkR2hwY3k1allXeGpkV3hoZEdWZmJXRjBjbWxqWlhNb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200N0NpQWdJQ0I5Q2lBZ0lDQmpiR2x3WDNSdlgzTndZV05sS0hOd1lXTmxLU0I3Q2lBZ0lDQWdJQ0FnYVdZZ0tITndZV05sSUQwOVBTQWlaR0YwWVNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJSFJvYVhNdWNISnZhbVZqZEdsdmJuWnBaWGRmYVc1MlpYSnpaUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSE53WVdObElEMDlQU0FpY0dsNFpXd2lLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkJwZUdWc1gzTndZV05sWDJsdWRtVnljMlV1ZG1Gc2RXVTdDaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h6Y0dGalpTQTlQVDBnSW5KbGJHRjBhWFpsSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1eVpXeGhkR2wyWlY5cGJuWmxjbk5sTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvYzNCaFkyVWdQVDA5SUNKamJHbHdJaWtnZXdvZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHaHBjeTVqYkdsd1gzTndZV05sTG5aaGJIVmxPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWhnVTNCaFkyVWdKSHR6Y0dGalpYMGdibTkwSUhKbFkyOW5ibWw2WldSZ0tUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNCOUNpQWdJQ0J6Y0dGalpWOTBiMTlqYkdsd0tITndZV05sS1NCN0NpQWdJQ0FnSUNBZ2FXWWdLSE53WVdObElEMDlQU0FpWkdGMFlTSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSb2FYTXVjSEp2YW1WamRHbHZiblpwWlhjdWRtRnNkV1U3Q2lBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoemNHRmpaU0E5UFQwZ0luQnBlR1ZzSWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1d2FYaGxiRjl6Y0dGalpTNTJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tITndZV05sSUQwOVBTQWljbVZzWVhScGRtVWlLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbkpsYkdGMGFYWmxYM053WVdObExuWmhiSFZsT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2MzQmhZMlVnUFQwOUlDSmpiR2x3SWlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1amJHbHdYM053WVdObExuWmhiSFZsT3dvZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2loZ1UzQmhZMlVnSkh0emNHRmpaWDBnYm05MElISmxZMjluYm1sNlpXUmdLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCallXeGpkV3hoZEdWZmNISmxjSEp2YW1WamRHbHZibDl0WVhSeWFYZ29jM0JoWTJVc0lHMWhjbXRsY25Od1lXTmxLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdZM0FnUFNCMGFHbHpMbU5zYVhCZmRHOWZjM0JoWTJVb2JXRnlhMlZ5YzNCaFkyVXBPd29nSUNBZ0lDQWdJR052Ym5OMElITmpJRDBnZEdocGN5NXpjR0ZqWlY5MGIxOWpiR2x3S0hOd1lXTmxLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiWFZzS0hOakxDQmpjQ2s3Q2lBZ0lDQjlDaUFnSUNCd2NtVndjbTlxWldOMGFXOXVYMjFoZEhKcGVDaHpjR0ZqWlN3Z2JXRnlhMlZ5YzNCaFkyVXBJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQnJaWGtnUFNCYkNpQWdJQ0FnSUNBZ0lDQWdJSE53WVdObExBb2dJQ0FnSUNBZ0lDQWdJQ0J0WVhKclpYSnpjR0ZqWlFvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnYldGMGNtbDRYM1Z1YVdadmNtMGdQU0IwYUdsekxuQnlaWEJ5YjJwbFkzUnBiMjV6VzJ0bGVWMDdDaUFnSUNBZ0lDQWdhV1lnS0cxaGRISnBlRjkxYm1sbWIzSnRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdFlYUnlhWGhmZFc1cFptOXliVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J0WVhSeWFYZ2dQU0IwYUdsekxtTmhiR04xYkdGMFpWOXdjbVZ3Y205cVpXTjBhVzl1WDIxaGRISnBlQ2h6Y0dGalpTd2diV0Z5YTJWeWMzQmhZMlVwT3dvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMWJtbG1iM0p0SUQwZ2JtVjNJR2R2S0cxaGRISnBlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Y0hKbGNISnZhbVZqZEdsdmJuTmJhMlY1WFNBOUlIVnVhV1p2Y20wN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjFibWxtYjNKdE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwS2ZRcGpiMjV6ZENCelkyVnVaVjlqWVdOb1pTQTlJSHQ5T3dwamIyNXpkQ0J3Ykc5MFgyTmhZMmhsSUQwZ2UzMDdDbU52Ym5OMElGUkZXRlJWVWtWZlFWUk1RVk1nUFNCYkNpQWdJQ0IxYm1SbFptbHVaV1FLWFRzS1puVnVZM1JwYjI0Z1lXUmtYM05qWlc1bEtITmpaVzVsWDJsa0xDQjBhSEpsWlY5elkyVnVaU2tnZXdvZ0lDQWdjMk5sYm1WZlkyRmphR1ZiYzJObGJtVmZhV1JkSUQwZ2RHaHlaV1ZmYzJObGJtVTdDbjBLWm5WdVkzUnBiMjRnWm1sdVpGOXpZMlZ1WlNoelkyVnVaVjlwWkNrZ2V3b2dJQ0FnY21WMGRYSnVJSE5qWlc1bFgyTmhZMmhsVzNOalpXNWxYMmxrWFRzS2ZRcG1kVzVqZEdsdmJpQmtaV3hsZEdWZmMyTmxibVVvYzJObGJtVmZhV1FwSUhzS0lDQWdJR052Ym5OMElITmpaVzVsSUQwZ2MyTmxibVZmWTJGamFHVmJjMk5sYm1WZmFXUmRPd29nSUNBZ2FXWWdLQ0Z6WTJWdVpTa2dld29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwS0lDQWdJSGRvYVd4bEtITmpaVzVsTG1Ob2FXeGtjbVZ1TG14bGJtZDBhQ0ErSURBcGV3b2dJQ0FnSUNBZ0lITmpaVzVsTG5KbGJXOTJaU2h6WTJWdVpTNWphR2xzWkhKbGJsc3dYU2s3Q2lBZ0lDQjlDaUFnSUNCa1pXeGxkR1VnYzJObGJtVmZZMkZqYUdWYmMyTmxibVZmYVdSZE93cDlDbVoxYm1OMGFXOXVJR1pwYm1SZmNHeHZkSE1vY0d4dmRGOTFkV2xrY3lrZ2V3b2dJQ0FnWTI5dWMzUWdjR3h2ZEhNZ1BTQmJYVHNLSUNBZ0lIQnNiM1JmZFhWcFpITXVabTl5UldGamFDZ29hV1FwUFQ1N0NpQWdJQ0FnSUNBZ1kyOXVjM1FnY0d4dmRDQTlJSEJzYjNSZlkyRmphR1ZiYVdSZE93b2dJQ0FnSUNBZ0lHbG1JQ2h3Ykc5MEtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhCc2IzUnpMbkIxYzJnb2NHeHZkQ2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU2s3Q2lBZ0lDQnlaWFIxY200Z2NHeHZkSE03Q24wS1puVnVZM1JwYjI0Z1pHVnNaWFJsWDNOalpXNWxjeWh6WTJWdVpWOTFkV2xrY3l3Z2NHeHZkRjkxZFdsa2N5a2dld29nSUNBZ2NHeHZkRjkxZFdsa2N5NW1iM0pGWVdOb0tDaHdiRzkwWDJsa0tUMCtld29nSUNBZ0lDQWdJR1JsYkdWMFpTQndiRzkwWDJOaFkyaGxXM0JzYjNSZmFXUmRPd29nSUNBZ2ZTazdDaUFnSUNCelkyVnVaVjkxZFdsa2N5NW1iM0pGWVdOb0tDaHpZMlZ1WlY5cFpDazlQbnNLSUNBZ0lDQWdJQ0JrWld4bGRHVmZjMk5sYm1Vb2MyTmxibVZmYVdRcE93b2dJQ0FnZlNrN0NuMEtablZ1WTNScGIyNGdhVzV6WlhKMFgzQnNiM1FvYzJObGJtVmZhV1FzSUhCc2IzUmZaR0YwWVNrZ2V3b2dJQ0FnWTI5dWMzUWdjMk5sYm1VZ1BTQm1hVzVrWDNOalpXNWxLSE5qWlc1bFgybGtLVHNLSUNBZ0lIQnNiM1JmWkdGMFlTNW1iM0pGWVdOb0tDaHdiRzkwS1QwK2V3b2dJQ0FnSUNBZ0lHRmtaRjl3Ykc5MEtITmpaVzVsTENCd2JHOTBLVHNLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdSbGJHVjBaVjl3Ykc5MGN5aHpZMlZ1WlY5cFpDd2djR3h2ZEY5MWRXbGtjeWtnZXdvZ0lDQWdZMjl1YzNRZ2MyTmxibVVnUFNCbWFXNWtYM05qWlc1bEtITmpaVzVsWDJsa0tUc0tJQ0FnSUdOdmJuTjBJSEJzYjNSeklEMGdabWx1WkY5d2JHOTBjeWh3Ykc5MFgzVjFhV1J6S1RzS0lDQWdJSEJzYjNSekxtWnZja1ZoWTJnb0tIQXBQVDU3Q2lBZ0lDQWdJQ0FnYzJObGJtVXVjbVZ0YjNabEtIQXBPd29nSUNBZ0lDQWdJR1JsYkdWMFpTQndiRzkwWDJOaFkyaGxXM0JkT3dvZ0lDQWdmU2s3Q24wS1puVnVZM1JwYjI0Z1kyOXVkbVZ5ZEY5MFpYaDBkWEpsS0dSaGRHRXBJSHNLSUNBZ0lHTnZibk4wSUhSbGVDQTlJR055WldGMFpWOTBaWGgwZFhKbEtHUmhkR0VwT3dvZ0lDQWdkR1Y0TG01bFpXUnpWWEJrWVhSbElEMGdkSEoxWlRzS0lDQWdJSFJsZUM1dGFXNUdhV3gwWlhJZ1BTQnRiMlJiWkdGMFlTNXRhVzVHYVd4MFpYSmRPd29nSUNBZ2RHVjRMbTFoWjBacGJIUmxjaUE5SUcxdlpGdGtZWFJoTG0xaFowWnBiSFJsY2wwN0NpQWdJQ0IwWlhndVlXNXBjMjkwY205d2VTQTlJR1JoZEdFdVlXNXBjMjkwY205d2VUc0tJQ0FnSUhSbGVDNTNjbUZ3VXlBOUlHMXZaRnRrWVhSaExuZHlZWEJUWFRzS0lDQWdJR2xtSUNoa1lYUmhMbk5wZW1VdWJHVnVaM1JvSUQ0Z01Ta2dld29nSUNBZ0lDQWdJSFJsZUM1M2NtRndWQ0E5SUcxdlpGdGtZWFJoTG5keVlYQlVYVHNLSUNBZ0lIMEtJQ0FnSUdsbUlDaGtZWFJoTG5OcGVtVXViR1Z1WjNSb0lENGdNaWtnZXdvZ0lDQWdJQ0FnSUhSbGVDNTNjbUZ3VWlBOUlHMXZaRnRrWVhSaExuZHlZWEJTWFRzS0lDQWdJSDBLSUNBZ0lISmxkSFZ5YmlCMFpYZzdDbjBLWm5WdVkzUnBiMjRnYVhOZmRHaHlaV1ZmWm1sNFpXUmZZWEp5WVhrb2RtRnNkV1VwSUhzS0lDQWdJSEpsZEhWeWJpQjJZV3gxWlNCcGJuTjBZVzVqWlc5bUlHMXZaQzVXWldOMGIzSXlJSHg4SUhaaGJIVmxJR2x1YzNSaGJtTmxiMllnYlc5a0xsWmxZM1J2Y2pNZ2ZId2dkbUZzZFdVZ2FXNXpkR0Z1WTJWdlppQnRiMlF1Vm1WamRHOXlOQ0I4ZkNCMllXeDFaU0JwYm5OMFlXNWpaVzltSUcxdlpDNU5ZWFJ5YVhnME93cDlDbVoxYm1OMGFXOXVJSFJ2WDNWdWFXWnZjbTBvWkdGMFlTa2dld29nSUNBZ2FXWWdLR1JoZEdFdWRIbHdaU0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQjdDaUFnSUNBZ0lDQWdhV1lnS0dSaGRHRXVkSGx3WlNBOVBTQWlVMkZ0Y0d4bGNpSXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOdmJuWmxjblJmZEdWNGRIVnlaU2hrWVhSaEtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtHQlVlWEJsSUNSN1pHRjBZUzUwZVhCbGZTQnViM1FnYTI1dmQyNWdLVHNLSUNBZ0lIMEtJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dSaGRHRXBJSHg4SUVGeWNtRjVRblZtWm1WeUxtbHpWbWxsZHloa1lYUmhLU2tnZXdvZ0lDQWdJQ0FnSUdsbUlDZ2haR0YwWVM1bGRtVnllU2dvZUNrOVBuUjVjR1Z2WmlCNElEMDlQU0FpYm5WdFltVnlJaWtwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHUmhkR0U3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG14bGJtZDBhQ0E5UFNBeUtTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ1WlhjZ2JXOWtMbFpsWTNSdmNqSW9LUzVtY205dFFYSnlZWGtvWkdGMFlTazdDaUFnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJR2xtSUNoa1lYUmhMbXhsYm1kMGFDQTlQU0F6S1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnYlc5a0xsWmxZM1J2Y2pNb0tTNW1jbTl0UVhKeVlYa29aR0YwWVNrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExteGxibWQwYUNBOVBTQTBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdVpYY2diVzlrTGxabFkzUnZjalFvS1M1bWNtOXRRWEp5WVhrb1pHRjBZU2s3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoTG14bGJtZDBhQ0E5UFNBeE5pa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0J0WVhRZ1BTQnVaWGNnYlc5a0xrMWhkSEpwZURRb0tUc0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMExtWnliMjFCY25KaGVTaGtZWFJoS1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHMWhkRHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlDaUFnSUNCeVpYUjFjbTRnWkdGMFlUc0tmUXBtZFc1amRHbHZiaUJrWlhObGNtbGhiR2w2WlY5MWJtbG1iM0p0Y3loa1lYUmhLU0I3Q2lBZ0lDQmpiMjV6ZENCeVpYTjFiSFFnUFNCN2ZUc0tJQ0FnSUdadmNpaGpiMjV6ZENCdVlXMWxJR2x1SUdSaGRHRXBld29nSUNBZ0lDQWdJR052Ym5OMElIWmhiSFZsSUQwZ1pHRjBZVnR1WVcxbFhUc0tJQ0FnSUNBZ0lDQnBaaUFvZG1Gc2RXVWdhVzV6ZEdGdVkyVnZaaUJ0YjJRdVZXNXBabTl5YlNrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0J5WlhOMWJIUmJibUZ0WlYwZ1BTQjJZV3gxWlRzS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCelpYSWdQU0IwYjE5MWJtbG1iM0p0S0haaGJIVmxLVHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwVzI1aGJXVmRJRDBnYm1WM0lHMXZaQzVWYm1sbWIzSnRLSE5sY2lrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlISmxjM1ZzZERzS2ZRcG1kVzVqZEdsdmJpQmtaWE5sY21saGJHbDZaVjl3Ykc5MEtHUmhkR0VwSUhzS0lDQWdJR3hsZENCdFpYTm9Pd29nSUNBZ2FXWWdLQ0pwYm5OMFlXNWpaVjloZEhSeWFXSjFkR1Z6SWlCcGJpQmtZWFJoS1NCN0NpQWdJQ0FnSUNBZ2JXVnphQ0E5SUdOeVpXRjBaVjlwYm5OMFlXNWpaV1JmYldWemFDaGtZWFJoS1RzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdiV1Z6YUNBOUlHTnlaV0YwWlY5dFpYTm9LR1JoZEdFcE93b2dJQ0FnZlFvZ0lDQWdiV1Z6YUM1dVlXMWxJRDBnWkdGMFlTNXVZVzFsT3dvZ0lDQWdiV1Z6YUM1bWNuVnpkSFZ0UTNWc2JHVmtJRDBnWm1Gc2MyVTdDaUFnSUNCdFpYTm9MbTFoZEhKcGVFRjFkRzlWY0dSaGRHVWdQU0JtWVd4elpUc0tJQ0FnSUcxbGMyZ3VjR3h2ZEY5MWRXbGtJRDBnWkdGMFlTNTFkV2xrT3dvZ0lDQWdZMjl1YzNRZ2RYQmtZWFJsWDNacGMybGliR1VnUFNBb2RpazlQbnNLSUNBZ0lDQWdJQ0J0WlhOb0xuWnBjMmxpYkdVZ1BTQjJPd29nSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUgwN0NpQWdJQ0IxY0dSaGRHVmZkbWx6YVdKc1pTaGtZWFJoTG5acGMybGliR1V1ZG1Gc2RXVXBPd29nSUNBZ1pHRjBZUzUyYVhOcFlteGxMbTl1S0hWd1pHRjBaVjkyYVhOcFlteGxLVHNLSUNBZ0lHTnZibTVsWTNSZmRXNXBabTl5YlhNb2JXVnphQ3dnWkdGMFlTNTFibWxtYjNKdFgzVndaR0YwWlhJcE93b2dJQ0FnWTI5dWJtVmpkRjloZEhSeWFXSjFkR1Z6S0cxbGMyZ3NJR1JoZEdFdVlYUjBjbWxpZFhSbFgzVndaR0YwWlhJcE93b2dJQ0FnY21WMGRYSnVJRzFsYzJnN0NuMEtZMjl1YzNRZ1QwNWZUa1ZZVkY5SlRsTkZVbFFnUFNCdVpYY2dVMlYwS0NrN0NtWjFibU4wYVc5dUlHOXVYMjVsZUhSZmFXNXpaWEowS0dZcElIc0tJQ0FnSUU5T1gwNUZXRlJmU1U1VFJWSlVMbUZrWkNobUtUc0tmUXBtZFc1amRHbHZiaUJoWkdSZmNHeHZkQ2h6WTJWdVpTd2djR3h2ZEY5a1lYUmhLU0I3Q2lBZ0lDQmpiMjV6ZENCallXMGdQU0J6WTJWdVpTNTNaMnhmWTJGdFpYSmhPd29nSUNBZ1kyOXVjM1FnYVdSbGJuUnBkSGtnUFNCdVpYY2diVzlrTGxWdWFXWnZjbTBvYm1WM0lHMXZaQzVOWVhSeWFYZzBLQ2twT3dvZ0lDQWdhV1lnS0hCc2IzUmZaR0YwWVM1allXMWZjM0JoWTJVZ1BUMGdJbVJoZEdFaUtTQjdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMblpwWlhjZ1BTQmpZVzB1ZG1sbGR6c0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiaUE5SUdOaGJTNXdjbTlxWldOMGFXOXVPd29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTV3Y205cVpXTjBhVzl1ZG1sbGR5QTlJR05oYlM1d2NtOXFaV04wYVc5dWRtbGxkenNLSUNBZ0lDQWdJQ0J3Ykc5MFgyUmhkR0V1ZFc1cFptOXliWE11WlhsbGNHOXphWFJwYjI0Z1BTQmpZVzB1WlhsbGNHOXphWFJwYjI0N0NpQWdJQ0I5SUdWc2MyVWdhV1lnS0hCc2IzUmZaR0YwWVM1allXMWZjM0JoWTJVZ1BUMGdJbkJwZUdWc0lpa2dld29nSUNBZ0lDQWdJSEJzYjNSZlpHRjBZUzUxYm1sbWIzSnRjeTUyYVdWM0lEMGdhV1JsYm5ScGRIazdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMbkJ5YjJwbFkzUnBiMjRnUFNCallXMHVjR2w0Wld4ZmMzQmhZMlU3Q2lBZ0lDQWdJQ0FnY0d4dmRGOWtZWFJoTG5WdWFXWnZjbTF6TG5CeWIycGxZM1JwYjI1MmFXVjNJRDBnWTJGdExuQnBlR1ZzWDNOd1lXTmxPd29nSUNBZ2ZTQmxiSE5sSUdsbUlDaHdiRzkwWDJSaGRHRXVZMkZ0WDNOd1lXTmxJRDA5SUNKeVpXeGhkR2wyWlNJcElIc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVkbWxsZHlBOUlHbGtaVzUwYVhSNU93b2dJQ0FnSUNBZ0lIQnNiM1JmWkdGMFlTNTFibWxtYjNKdGN5NXdjbTlxWldOMGFXOXVJRDBnWTJGdExuSmxiR0YwYVhabFgzTndZV05sT3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dWRtbGxkeUE5SUdOaGJTNXlaV3hoZEdsMlpWOXpjR0ZqWlRzS0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdjR3h2ZEY5a1lYUmhMblZ1YVdadmNtMXpMblpwWlhjZ1BTQnBaR1Z1ZEdsMGVUc0tJQ0FnSUNBZ0lDQndiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEp2YW1WamRHbHZiaUE5SUdsa1pXNTBhWFI1T3dvZ0lDQWdJQ0FnSUhCc2IzUmZaR0YwWVM1MWJtbG1iM0p0Y3k1d2NtOXFaV04wYVc5dWRtbGxkeUE5SUdsa1pXNTBhWFI1T3dvZ0lDQWdmUW9nSUNBZ2NHeHZkRjlrWVhSaExuVnVhV1p2Y20xekxuSmxjMjlzZFhScGIyNGdQU0JqWVcwdWNtVnpiMngxZEdsdmJqc0tJQ0FnSUdsbUlDaHdiRzkwWDJSaGRHRXVkVzVwWm05eWJYTXVjSEpsY0hKdmFtVmpkR2x2YmlrZ2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhzZ2MzQmhZMlVnTENCdFlYSnJaWEp6Y0dGalpTQWdmU0E5SUhCc2IzUmZaR0YwWVRzS0lDQWdJQ0FnSUNCd2JHOTBYMlJoZEdFdWRXNXBabTl5YlhNdWNISmxjSEp2YW1WamRHbHZiaUE5SUdOaGJTNXdjbVZ3Y205cVpXTjBhVzl1WDIxaGRISnBlQ2h6Y0dGalpTNTJZV3gxWlN3Z2JXRnlhMlZ5YzNCaFkyVXVkbUZzZFdVcE93b2dJQ0FnZlFvZ0lDQWdZMjl1YzNRZ2NDQTlJR1JsYzJWeWFXRnNhWHBsWDNCc2IzUW9jR3h2ZEY5a1lYUmhLVHNLSUNBZ0lIQnNiM1JmWTJGamFHVmJjR3h2ZEY5a1lYUmhMblYxYVdSZElEMGdjRHNLSUNBZ0lITmpaVzVsTG1Ga1pDaHdLVHNLSUNBZ0lHTnZibk4wSUc1bGVIUmZhVzV6WlhKMElEMGdibVYzSUZObGRDaFBUbDlPUlZoVVgwbE9VMFZTVkNrN0NpQWdJQ0J1WlhoMFgybHVjMlZ5ZEM1bWIzSkZZV05vS0NobUtUMCtaaWdwS1RzS2ZRcG1kVzVqZEdsdmJpQmpiMjV1WldOMFgzVnVhV1p2Y20xektHMWxjMmdzSUhWd1pHRjBaWElwSUhzS0lDQWdJSFZ3WkdGMFpYSXViMjRvS0Z0dVlXMWxMQ0JrWVhSaFhTazlQbnNLSUNBZ0lDQWdJQ0JwWmlBb2JtRnRaU0E5UFQwZ0ltNXZibVVpS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZMjl1YzNRZ2RXNXBabTl5YlNBOUlHMWxjMmd1YldGMFpYSnBZV3d1ZFc1cFptOXliWE5iYm1GdFpWMDdDaUFnSUNBZ0lDQWdhV1lnS0hWdWFXWnZjbTB1ZG1Gc2RXVXVhWE5VWlhoMGRYSmxLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdsdFgyUmhkR0VnUFNCMWJtbG1iM0p0TG5aaGJIVmxMbWx0WVdkbE93b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmJjMmw2WlN3Z2RHVjRYMlJoZEdGZElEMGdaR0YwWVRzS0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSbGVGOWtZWFJoTG14bGJtZDBhQ0E5UFNCcGJWOWtZWFJoTG1SaGRHRXViR1Z1WjNSb0tTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBiVjlrWVhSaExtUmhkR0V1YzJWMEtIUmxlRjlrWVhSaEtUc0tJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHOXNaRjkwWlhoMGRYSmxJRDBnZFc1cFptOXliUzUyWVd4MVpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnVhV1p2Y20wdWRtRnNkV1VnUFNCeVpWOWpjbVZoZEdWZmRHVjRkSFZ5WlNodmJHUmZkR1Y0ZEhWeVpTd2dkR1Y0WDJSaGRHRXNJSE5wZW1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IyeGtYM1JsZUhSMWNtVXVaR2x6Y0c5elpTZ3BPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJSFZ1YVdadmNtMHVkbUZzZFdVdWJtVmxaSE5WY0dSaGRHVWdQU0IwY25WbE93b2dJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGMxOTBhSEpsWlY5bWFYaGxaRjloY25KaGVTaDFibWxtYjNKdExuWmhiSFZsS1NrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RXNXBabTl5YlM1MllXeDFaUzVtY205dFFYSnlZWGtvWkdGMFlTazdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRMblpoYkhWbElEMGdaR0YwWVRzS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjkwWlhoMGRYSmxLR1JoZEdFcElIc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNpQTlJR1JoZEdFdVpHRjBZVHNLSUNBZ0lHbG1JQ2hrWVhSaExuTnBlbVV1YkdWdVozUm9JRDA5SURNcElIc0tJQ0FnSUNBZ0lDQmpiMjV6ZENCMFpYZ2dQU0J1WlhjZ2JXOWtMa1JoZEdGVVpYaDBkWEpsTTBRb1luVm1abVZ5TENCa1lYUmhMbk5wZW1WYk1GMHNJR1JoZEdFdWMybDZaVnN4WFN3Z1pHRjBZUzV6YVhwbFd6SmRLVHNLSUNBZ0lDQWdJQ0IwWlhndVptOXliV0YwSUQwZ2JXOWtXMlJoZEdFdWRHaHlaV1ZmWm05eWJXRjBYVHNLSUNBZ0lDQWdJQ0IwWlhndWRIbHdaU0E5SUcxdlpGdGtZWFJoTG5Sb2NtVmxYM1I1Y0dWZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCMFpYZzdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSFJsZUY5a1lYUmhJRDBnWW5WbVptVnlJRDA5SUNKMFpYaDBkWEpsWDJGMGJHRnpJaUEvSUZSRldGUlZVa1ZmUVZSTVFWTmJNRjB1ZG1Gc2RXVWdPaUJpZFdabVpYSTdDaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNWxkeUJ0YjJRdVJHRjBZVlJsZUhSMWNtVW9kR1Y0WDJSaGRHRXNJR1JoZEdFdWMybDZaVnN3WFN3Z1pHRjBZUzV6YVhwbFd6RmRMQ0J0YjJSYlpHRjBZUzUwYUhKbFpWOW1iM0p0WVhSZExDQnRiMlJiWkdGMFlTNTBhSEpsWlY5MGVYQmxYU2s3Q2lBZ0lDQjlDbjBLWm5WdVkzUnBiMjRnY21WZlkzSmxZWFJsWDNSbGVIUjFjbVVvYjJ4a1gzUmxlSFIxY21Vc0lHSjFabVpsY2l3Z2MybDZaU2tnZXdvZ0lDQWdhV1lnS0hOcGVtVXViR1Z1WjNSb0lEMDlJRE1wSUhzS0lDQWdJQ0FnSUNCamIyNXpkQ0IwWlhnZ1BTQnVaWGNnYlc5a0xrUmhkR0ZVWlhoMGRYSmxNMFFvWW5WbVptVnlMQ0J6YVhwbFd6QmRMQ0J6YVhwbFd6RmRMQ0J6YVhwbFd6SmRLVHNLSUNBZ0lDQWdJQ0IwWlhndVptOXliV0YwSUQwZ2IyeGtYM1JsZUhSMWNtVXVabTl5YldGME93b2dJQ0FnSUNBZ0lIUmxlQzUwZVhCbElEMGdiMnhrWDNSbGVIUjFjbVV1ZEhsd1pUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z2RHVjRPd29nSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNCeVpYUjFjbTRnYm1WM0lHMXZaQzVFWVhSaFZHVjRkSFZ5WlNoaWRXWm1aWElzSUhOcGVtVmJNRjBzSUhOcGVtVmJNVjBnUHlCemFYcGxXekZkSURvZ01Td2diMnhrWDNSbGVIUjFjbVV1Wm05eWJXRjBMQ0J2YkdSZmRHVjRkSFZ5WlM1MGVYQmxLVHNLSUNBZ0lIMEtmUXBtZFc1amRHbHZiaUJDZFdabVpYSkJkSFJ5YVdKMWRHVW9ZblZtWm1WeUtTQjdDaUFnSUNCamIyNXpkQ0JxYzJKMVptWWdQU0J1WlhjZ2JXOWtMa0oxWm1abGNrRjBkSEpwWW5WMFpTaGlkV1ptWlhJdVpteGhkQ3dnWW5WbVptVnlMblI1Y0dWZmJHVnVaM1JvS1RzS0lDQWdJR3B6WW5WbVppNXpaWFJWYzJGblpTaHRiMlF1UkhsdVlXMXBZMFJ5WVhkVmMyRm5aU2s3Q2lBZ0lDQnlaWFIxY200Z2FuTmlkV1ptT3dwOUNtWjFibU4wYVc5dUlFbHVjM1JoYm1ObFFuVm1abVZ5UVhSMGNtbGlkWFJsS0dKMVptWmxjaWtnZXdvZ0lDQWdZMjl1YzNRZ2FuTmlkV1ptSUQwZ2JtVjNJRzF2WkM1SmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VvWW5WbVptVnlMbVpzWVhRc0lHSjFabVpsY2k1MGVYQmxYMnhsYm1kMGFDazdDaUFnSUNCcWMySjFabVl1YzJWMFZYTmhaMlVvYlc5a0xrUjVibUZ0YVdORWNtRjNWWE5oWjJVcE93b2dJQ0FnY21WMGRYSnVJR3B6WW5WbVpqc0tmUXBtZFc1amRHbHZiaUJoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQjJaWEowWlhoaGNuSmhlWE1zSUdaaFkyVnpLU0I3Q2lBZ0lDQm1iM0lvWTI5dWMzUWdibUZ0WlNCcGJpQjJaWEowWlhoaGNuSmhlWE1wZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJR0oxWm1ZZ1BTQjJaWEowWlhoaGNuSmhlWE5iYm1GdFpWMDdDaUFnSUNBZ0lDQWdiR1YwSUdKMVptWmxjanNLSUNBZ0lDQWdJQ0JwWmlBb1luVm1aaTUwYjE5MWNHUmhkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeUlEMGdibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb1luVm1aaTUwYjE5MWNHUmhkR1VzSUdKMVptWXVhWFJsYlZOcGVtVXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjaUE5SUVKMVptWmxja0YwZEhKcFluVjBaU2hpZFdabUtUc0tJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxuTmxkRUYwZEhKcFluVjBaU2h1WVcxbExDQmlkV1ptWlhJcE93b2dJQ0FnZlFvZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxuTmxkRWx1WkdWNEtHWmhZMlZ6S1RzS0lDQWdJR0oxWm1abGNsOW5aVzl0WlhSeWVTNWliM1Z1WkdsdVoxTndhR1Z5WlNBOUlHNWxkeUJ0YjJRdVUzQm9aWEpsS0NrN0NpQWdJQ0JpZFdabVpYSmZaMlZ2YldWMGNua3VZbTkxYm1ScGJtZFRjR2hsY21VdWNtRmthWFZ6SUQwZ01UQXdNREF3TURBd01EQXdNREE3Q2lBZ0lDQmlkV1ptWlhKZloyVnZiV1YwY25rdVpuSjFjM1IxYlVOMWJHeGxaQ0E5SUdaaGJITmxPd29nSUNBZ2NtVjBkWEp1SUdKMVptWmxjbDluWlc5dFpYUnllVHNLZlFwbWRXNWpkR2x2YmlCaGRIUmhZMmhmYVc1emRHRnVZMlZrWDJkbGIyMWxkSEo1S0dKMVptWmxjbDluWlc5dFpYUnllU3dnYVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lrZ2V3b2dJQ0FnWm05eUtHTnZibk4wSUc1aGJXVWdhVzRnYVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lsN0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WbVptVnlJRDBnU1c1emRHRnVZMlZDZFdabVpYSkJkSFJ5YVdKMWRHVW9hVzV6ZEdGdVkyVmZZWFIwY21saWRYUmxjMXR1WVcxbFhTazdDaUFnSUNBZ0lDQWdZblZtWm1WeVgyZGxiMjFsZEhKNUxuTmxkRUYwZEhKcFluVjBaU2h1WVcxbExDQmlkV1ptWlhJcE93b2dJQ0FnZlFwOUNtWjFibU4wYVc5dUlISmxZM0psWVhSbFgyZGxiMjFsZEhKNUtHMWxjMmdzSUhabGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcElIc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNsOW5aVzl0WlhSeWVTQTlJRzVsZHlCdGIyUXVRblZtWm1WeVIyVnZiV1YwY25rb0tUc0tJQ0FnSUdGMGRHRmphRjluWlc5dFpYUnllU2hpZFdabVpYSmZaMlZ2YldWMGNua3NJSFpsY25SbGVHRnljbUY1Y3l3Z1ptRmpaWE1wT3dvZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0NrN0NpQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUlEMGdZblZtWm1WeVgyZGxiMjFsZEhKNU93b2dJQ0FnYldWemFDNXVaV1ZrYzFWd1pHRjBaU0E5SUhSeWRXVTdDbjBLWm5WdVkzUnBiMjRnY21WamNtVmhkR1ZmYVc1emRHRnVZMlZrWDJkbGIyMWxkSEo1S0cxbGMyZ3BJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjbDluWlc5dFpYUnllU0E5SUc1bGR5QnRiMlF1U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua29LVHNLSUNBZ0lHTnZibk4wSUhabGNuUmxlR0Z5Y21GNWN5QTlJSHQ5T3dvZ0lDQWdZMjl1YzNRZ2FXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGN5QTlJSHQ5T3dvZ0lDQWdZMjl1YzNRZ1ptRmpaWE1nUFNCYkNpQWdJQ0FnSUNBZ0xpNHViV1Z6YUM1blpXOXRaWFJ5ZVM1cGJtUmxlQzVoY25KaGVRb2dJQ0FnWFRzS0lDQWdJRTlpYW1WamRDNXJaWGx6S0cxbGMyZ3VaMlZ2YldWMGNua3VZWFIwY21saWRYUmxjeWt1Wm05eVJXRmphQ2dvYm1GdFpTazlQbnNLSUNBZ0lDQWdJQ0JqYjI1emRDQmlkV1ptWlhJZ1BTQnRaWE5vTG1kbGIyMWxkSEo1TG1GMGRISnBZblYwWlhOYmJtRnRaVjA3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdZMjl3ZVNBOUlHSjFabVpsY2k1MGIxOTFjR1JoZEdVZ1B5QmlkV1ptWlhJdWRHOWZkWEJrWVhSbElEb2dZblZtWm1WeUxtRnljbUY1TG0xaGNDZ29lQ2s5UG5ncE93b2dJQ0FnSUNBZ0lHbG1JQ2hpZFdabVpYSXVhWE5KYm5OMFlXNWpaV1JDZFdabVpYSkJkSFJ5YVdKMWRHVXBJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXNXpkR0Z1WTJWZllYUjBjbWxpZFhSbGMxdHVZVzFsWFNBOUlIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnNZWFE2SUdOdmNIa3NDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBlWEJsWDJ4bGJtZDBhRG9nWW5WbVptVnlMbWwwWlcxVGFYcGxDaUFnSUNBZ0lDQWdJQ0FnSUgwN0NpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdkbVZ5ZEdWNFlYSnlZWGx6VzI1aGJXVmRJRDBnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm14aGREb2dZMjl3ZVN3S0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSNWNHVmZiR1Z1WjNSb09pQmlkV1ptWlhJdWFYUmxiVk5wZW1VS0lDQWdJQ0FnSUNBZ0lDQWdmVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQjlLVHNLSUNBZ0lHRjBkR0ZqYUY5blpXOXRaWFJ5ZVNoaWRXWm1aWEpmWjJWdmJXVjBjbmtzSUhabGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcE93b2dJQ0FnWVhSMFlXTm9YMmx1YzNSaGJtTmxaRjluWlc5dFpYUnllU2hpZFdabVpYSmZaMlZ2YldWMGNua3NJR2x1YzNSaGJtTmxYMkYwZEhKcFluVjBaWE1wT3dvZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1a2FYTndiM05sS0NrN0NpQWdJQ0J0WlhOb0xtZGxiMjFsZEhKNUlEMGdZblZtWm1WeVgyZGxiMjFsZEhKNU93b2dJQ0FnYldWemFDNXVaV1ZrYzFWd1pHRjBaU0E5SUhSeWRXVTdDbjBLWm5WdVkzUnBiMjRnWTNKbFlYUmxYMjFoZEdWeWFXRnNLSEJ5YjJkeVlXMHBJSHNLSUNBZ0lHTnZibk4wSUdselgzWnZiSFZ0WlNBOUlDSjJiMngxYldWa1lYUmhJaUJwYmlCd2NtOW5jbUZ0TG5WdWFXWnZjbTF6T3dvZ0lDQWdjbVYwZFhKdUlHNWxkeUJ0YjJRdVVtRjNVMmhoWkdWeVRXRjBaWEpwWVd3b2V3b2dJQ0FnSUNBZ0lIVnVhV1p2Y20xek9pQmtaWE5sY21saGJHbDZaVjkxYm1sbWIzSnRjeWh3Y205bmNtRnRMblZ1YVdadmNtMXpLU3dLSUNBZ0lDQWdJQ0IyWlhKMFpYaFRhR0ZrWlhJNklIQnliMmR5WVcwdWRtVnlkR1Y0WDNOdmRYSmpaU3dLSUNBZ0lDQWdJQ0JtY21GbmJXVnVkRk5vWVdSbGNqb2djSEp2WjNKaGJTNW1jbUZuYldWdWRGOXpiM1Z5WTJVc0NpQWdJQ0FnSUNBZ2MybGtaVG9nYVhOZmRtOXNkVzFsSUQ4Z2JXOWtMa0poWTJ0VGFXUmxJRG9nYlc5a0xrUnZkV0pzWlZOcFpHVXNDaUFnSUNBZ0lDQWdkSEpoYm5Od1lYSmxiblE2SUhSeWRXVXNDaUFnSUNBZ0lDQWdaR1Z3ZEdoVVpYTjBPaUFoY0hKdlozSmhiUzV2ZG1WeVpISmhkeTUyWVd4MVpTd0tJQ0FnSUNBZ0lDQmtaWEIwYUZkeWFYUmxPaUFoY0hKdlozSmhiUzUwY21GdWMzQmhjbVZ1WTNrdWRtRnNkV1VLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdOeVpXRjBaVjl0WlhOb0tIQnliMmR5WVcwcElIc0tJQ0FnSUdOdmJuTjBJR0oxWm1abGNsOW5aVzl0WlhSeWVTQTlJRzVsZHlCdGIyUXVRblZtWm1WeVIyVnZiV1YwY25rb0tUc0tJQ0FnSUdOdmJuTjBJR1poWTJWeklEMGdibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb2NISnZaM0poYlM1bVlXTmxjeTUyWVd4MVpTd2dNU2s3Q2lBZ0lDQmhkSFJoWTJoZloyVnZiV1YwY25rb1luVm1abVZ5WDJkbGIyMWxkSEo1TENCd2NtOW5jbUZ0TG5abGNuUmxlR0Z5Y21GNWN5d2dabUZqWlhNcE93b2dJQ0FnWTI5dWMzUWdiV0YwWlhKcFlXd2dQU0JqY21WaGRHVmZiV0YwWlhKcFlXd29jSEp2WjNKaGJTazdDaUFnSUNCamIyNXpkQ0J0WlhOb0lEMGdibVYzSUcxdlpDNU5aWE5vS0dKMVptWmxjbDluWlc5dFpYUnllU3dnYldGMFpYSnBZV3dwT3dvZ0lDQWdjSEp2WjNKaGJTNW1ZV05sY3k1dmJpZ29lQ2s5UG5zS0lDQWdJQ0FnSUNCdFpYTm9MbWRsYjIxbGRISjVMbk5sZEVsdVpHVjRLRzVsZHlCdGIyUXVRblZtWm1WeVFYUjBjbWxpZFhSbEtIZ3NJREVwS1RzS0lDQWdJSDBwT3dvZ0lDQWdjbVYwZFhKdUlHMWxjMmc3Q24wS1puVnVZM1JwYjI0Z1kzSmxZWFJsWDJsdWMzUmhibU5sWkY5dFpYTm9LSEJ5YjJkeVlXMHBJSHNLSUNBZ0lHTnZibk4wSUdKMVptWmxjbDluWlc5dFpYUnllU0E5SUc1bGR5QnRiMlF1U1c1emRHRnVZMlZrUW5WbVptVnlSMlZ2YldWMGNua29LVHNLSUNBZ0lHTnZibk4wSUdaaFkyVnpJRDBnYm1WM0lHMXZaQzVDZFdabVpYSkJkSFJ5YVdKMWRHVW9jSEp2WjNKaGJTNW1ZV05sY3k1MllXeDFaU3dnTVNrN0NpQWdJQ0JoZEhSaFkyaGZaMlZ2YldWMGNua29ZblZtWm1WeVgyZGxiMjFsZEhKNUxDQndjbTluY21GdExuWmxjblJsZUdGeWNtRjVjeXdnWm1GalpYTXBPd29nSUNBZ1lYUjBZV05vWDJsdWMzUmhibU5sWkY5blpXOXRaWFJ5ZVNoaWRXWm1aWEpmWjJWdmJXVjBjbmtzSUhCeWIyZHlZVzB1YVc1emRHRnVZMlZmWVhSMGNtbGlkWFJsY3lrN0NpQWdJQ0JqYjI1emRDQnRZWFJsY21saGJDQTlJR055WldGMFpWOXRZWFJsY21saGJDaHdjbTluY21GdEtUc0tJQ0FnSUdOdmJuTjBJRzFsYzJnZ1BTQnVaWGNnYlc5a0xrMWxjMmdvWW5WbVptVnlYMmRsYjIxbGRISjVMQ0J0WVhSbGNtbGhiQ2s3Q2lBZ0lDQndjbTluY21GdExtWmhZMlZ6TG05dUtDaDRLVDArZXdvZ0lDQWdJQ0FnSUcxbGMyZ3VaMlZ2YldWMGNua3VjMlYwU1c1a1pYZ29ibVYzSUcxdlpDNUNkV1ptWlhKQmRIUnlhV0oxZEdVb2VDd2dNU2twT3dvZ0lDQWdmU2s3Q2lBZ0lDQnlaWFIxY200Z2JXVnphRHNLZlFwbWRXNWpkR2x2YmlCbWFYSnpkQ2g0S1NCN0NpQWdJQ0J5WlhSMWNtNGdlRnRQWW1wbFkzUXVhMlY1Y3loNEtWc3dYVjA3Q24wS1puVnVZM1JwYjI0Z1kyOXVibVZqZEY5aGRIUnlhV0oxZEdWektHMWxjMmdzSUhWd1pHRjBaWElwSUhzS0lDQWdJR052Ym5OMElHbHVjM1JoYm1ObFgySjFabVpsY25NZ1BTQjdmVHNLSUNBZ0lHTnZibk4wSUdkbGIyMWxkSEo1WDJKMVptWmxjbk1nUFNCN2ZUc0tJQ0FnSUd4bGRDQm1hWEp6ZEY5cGJuTjBZVzVqWlY5aWRXWm1aWEk3Q2lBZ0lDQmpiMjV6ZENCeVpXRnNYMmx1YzNSaGJtTmxYMnhsYm1kMGFDQTlJRnNLSUNBZ0lDQWdJQ0F3Q2lBZ0lDQmRPd29nSUNBZ2JHVjBJR1pwY25OMFgyZGxiMjFsZEhKNVgySjFabVpsY2pzS0lDQWdJR052Ym5OMElISmxZV3hmWjJWdmJXVjBjbmxmYkdWdVozUm9JRDBnV3dvZ0lDQWdJQ0FnSURBS0lDQWdJRjA3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlaVjloYzNOcFoyNWZZblZtWm1WeWN5Z3BJSHNLSUNBZ0lDQWdJQ0JqYjI1emRDQmhkSFJ5YVdKMWRHVnpJRDBnYldWemFDNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpPd29nSUNBZ0lDQWdJRTlpYW1WamRDNXJaWGx6S0dGMGRISnBZblYwWlhNcExtWnZja1ZoWTJnb0tHNWhiV1VwUFQ1N0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHSjFabVpsY2lBOUlHRjBkSEpwWW5WMFpYTmJibUZ0WlYwN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoaWRXWm1aWEl1YVhOSmJuTjBZVzVqWldSQ2RXWm1aWEpCZEhSeWFXSjFkR1VwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWMzUmhibU5sWDJKMVptWmxjbk5iYm1GdFpWMGdQU0JpZFdabVpYSTdDaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JuWlc5dFpYUnllVjlpZFdabVpYSnpXMjVoYldWZElEMGdZblZtWm1WeU93b2dJQ0FnSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ1ptbHljM1JmYVc1emRHRnVZMlZmWW5WbVptVnlJRDBnWm1seWMzUW9hVzV6ZEdGdVkyVmZZblZtWm1WeWN5azdDaUFnSUNBZ0lDQWdhV1lnS0dacGNuTjBYMmx1YzNSaGJtTmxYMkoxWm1abGNpa2dld29nSUNBZ0lDQWdJQ0FnSUNCeVpXRnNYMmx1YzNSaGJtTmxYMnhsYm1kMGFGc3dYU0E5SUdacGNuTjBYMmx1YzNSaGJtTmxYMkoxWm1abGNpNWpiM1Z1ZERzS0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ1ptbHljM1JmWjJWdmJXVjBjbmxmWW5WbVptVnlJRDBnWm1seWMzUW9aMlZ2YldWMGNubGZZblZtWm1WeWN5azdDaUFnSUNBZ0lDQWdjbVZoYkY5blpXOXRaWFJ5ZVY5c1pXNW5kR2hiTUYwZ1BTQm1hWEp6ZEY5blpXOXRaWFJ5ZVY5aWRXWm1aWEl1WTI5MWJuUTdDaUFnSUNCOUNpQWdJQ0J5WlY5aGMzTnBaMjVmWW5WbVptVnljeWdwT3dvZ0lDQWdkWEJrWVhSbGNpNXZiaWdvVzI1aGJXVXNJRzVsZDE5MllXeDFaWE1zSUd4bGJtZDBhRjBwUFQ1N0NpQWdJQ0FnSUNBZ1kyOXVjM1FnWW5WbVptVnlJRDBnYldWemFDNW5aVzl0WlhSeWVTNWhkSFJ5YVdKMWRHVnpXMjVoYldWZE93b2dJQ0FnSUNBZ0lHeGxkQ0JpZFdabVpYSnpPd29nSUNBZ0lDQWdJR3hsZENCeVpXRnNYMnhsYm1kMGFEc0tJQ0FnSUNBZ0lDQnNaWFFnYVhOZmFXNXpkR0Z1WTJVZ1BTQm1ZV3h6WlRzS0lDQWdJQ0FnSUNCcFppQW9ibUZ0WlNCcGJpQnBibk4wWVc1alpWOWlkV1ptWlhKektTQjdDaUFnSUNBZ0lDQWdJQ0FnSUdKMVptWmxjbk1nUFNCcGJuTjBZVzVqWlY5aWRXWm1aWEp6T3dvZ0lDQWdJQ0FnSUNBZ0lDQm1hWEp6ZEY5cGJuTjBZVzVqWlY5aWRXWm1aWEk3Q2lBZ0lDQWdJQ0FnSUNBZ0lISmxZV3hmYkdWdVozUm9JRDBnY21WaGJGOXBibk4wWVc1alpWOXNaVzVuZEdnN0NpQWdJQ0FnSUNBZ0lDQWdJR2x6WDJsdWMzUmhibU5sSUQwZ2RISjFaVHNLSUNBZ0lDQWdJQ0I5SUdWc2MyVWdld29nSUNBZ0lDQWdJQ0FnSUNCaWRXWm1aWEp6SUQwZ1oyVnZiV1YwY25sZlluVm1abVZ5Y3pzS0lDQWdJQ0FnSUNBZ0lDQWdabWx5YzNSZloyVnZiV1YwY25sZlluVm1abVZ5T3dvZ0lDQWdJQ0FnSUNBZ0lDQnlaV0ZzWDJ4bGJtZDBhQ0E5SUhKbFlXeGZaMlZ2YldWMGNubGZiR1Z1WjNSb093b2dJQ0FnSUNBZ0lIMEtJQ0FnSUNBZ0lDQnBaaUFvYkdWdVozUm9JRHc5SUhKbFlXeGZiR1Z1WjNSb1d6QmRLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2k1elpYUW9ibVYzWDNaaGJIVmxjeWs3Q2lBZ0lDQWdJQ0FnSUNBZ0lHSjFabVpsY2k1dVpXVmtjMVZ3WkdGMFpTQTlJSFJ5ZFdVN0NpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGMxOXBibk4wWVc1alpTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1Z6YUM1blpXOXRaWFJ5ZVM1cGJuTjBZVzVqWlVOdmRXNTBJRDBnYkdWdVozUm9Pd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZblZtWm1WeUxuUnZYM1Z3WkdGMFpTQTlJRzVsZDE5MllXeDFaWE03Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUdGc2JGOW9ZWFpsWDNOaGJXVmZiR1Z1WjNSb0lEMGdUMkpxWldOMExuWmhiSFZsY3loaWRXWm1aWEp6S1M1bGRtVnllU2dvZUNrOVBuZ3VkRzlmZFhCa1lYUmxJQ1ltSUhndWRHOWZkWEJrWVhSbExteGxibWQwYUNBdklIZ3VhWFJsYlZOcGVtVWdQVDBnYkdWdVozUm9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0ZzYkY5b1lYWmxYM05oYldWZmJHVnVaM1JvS1NCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWE5mYVc1emRHRnVZMlVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV055WldGMFpWOXBibk4wWVc1alpXUmZaMlZ2YldWMGNua29iV1Z6YUNrN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZmWVhOemFXZHVYMkoxWm1abGNuTW9LVHNLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdFpYTm9MbWRsYjIxbGRISjVMbWx1YzNSaGJtTmxRMjkxYm5RZ1BTQnVaWGRmZG1Gc2RXVnpMbXhsYm1kMGFDQXZJR0oxWm1abGNpNXBkR1Z0VTJsNlpUc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZqY21WaGRHVmZaMlZ2YldWMGNua29iV1Z6YUN3Z1luVm1abVZ5Y3l3Z2JXVnphQzVuWlc5dFpYUnllUzVwYm1SbGVDazdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WZllYTnphV2R1WDJKMVptWmxjbk1vS1RzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNBZ0lDQWdmUW9nSUNBZ0lDQWdJSDBLSUNBZ0lIMHBPd3A5Q21aMWJtTjBhVzl1SUdSbGMyVnlhV0ZzYVhwbFgzTmpaVzVsS0dSaGRHRXNJSE5qY21WbGJpa2dld29nSUNBZ1kyOXVjM1FnYzJObGJtVWdQU0J1WlhjZ2JXOWtMbE5qWlc1bEtDazdDaUFnSUNCelkyVnVaUzV6WTNKbFpXNGdQU0J6WTNKbFpXNDdDaUFnSUNCamIyNXpkQ0I3SUdOaGJuWmhjeUFnZlNBOUlITmpjbVZsYmpzS0lDQWdJR0ZrWkY5elkyVnVaU2hrWVhSaExuVjFhV1FzSUhOalpXNWxLVHNLSUNBZ0lITmpaVzVsTG5OalpXNWxYM1YxYVdRZ1BTQmtZWFJoTG5WMWFXUTdDaUFnSUNCelkyVnVaUzVtY25WemRIVnRRM1ZzYkdWa0lEMGdabUZzYzJVN0NpQWdJQ0J6WTJWdVpTNXdhWGhsYkdGeVpXRWdQU0JrWVhSaExuQnBlR1ZzWVhKbFlUc0tJQ0FnSUhOalpXNWxMbUpoWTJ0bmNtOTFibVJqYjJ4dmNpQTlJR1JoZEdFdVltRmphMmR5YjNWdVpHTnZiRzl5T3dvZ0lDQWdjMk5sYm1VdVkyeGxZWEp6WTJWdVpTQTlJR1JoZEdFdVkyeGxZWEp6WTJWdVpUc0tJQ0FnSUhOalpXNWxMblpwYzJsaWJHVWdQU0JrWVhSaExuWnBjMmxpYkdVN0NpQWdJQ0JqYjI1emRDQmpZVzFsY21FZ1BTQnVaWGNnVFdGcmFXVkRZVzFsY21Fb0tUc0tJQ0FnSUhOalpXNWxMbmRuYkY5allXMWxjbUVnUFNCallXMWxjbUU3Q2lBZ0lDQm1kVzVqZEdsdmJpQjFjR1JoZEdWZlkyRnRLR05oYldWeVlWOXRZWFJ5YVdObGN5a2dld29nSUNBZ0lDQWdJR052Ym5OMElGdDJhV1YzTENCd2NtOXFaV04wYVc5dUxDQnlaWE52YkhWMGFXOXVMQ0JsZVdWd2IzTmRJRDBnWTJGdFpYSmhYMjFoZEhKcFkyVnpPd29nSUNBZ0lDQWdJR05oYldWeVlTNTFjR1JoZEdWZmJXRjBjbWxqWlhNb2RtbGxkeXdnY0hKdmFtVmpkR2x2Yml3Z2NtVnpiMngxZEdsdmJpd2daWGxsY0c5ektUc0tJQ0FnSUgwS0lDQWdJSFZ3WkdGMFpWOWpZVzBvWkdGMFlTNWpZVzFsY21FdWRtRnNkV1VwT3dvZ0lDQWdhV1lnS0dSaGRHRXVZMkZ0TTJSZmMzUmhkR1VwSUhzS0lDQWdJQ0FnSUNCaGRIUmhZMmhmTTJSZlkyRnRaWEpoS0dOaGJuWmhjeXdnWTJGdFpYSmhMQ0JrWVhSaExtTmhiVE5rWDNOMFlYUmxMQ0J6WTJWdVpTazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdSaGRHRXVZMkZ0WlhKaExtOXVLSFZ3WkdGMFpWOWpZVzBwT3dvZ0lDQWdmUW9nSUNBZ1pHRjBZUzV3Ykc5MGN5NW1iM0pGWVdOb0tDaHdiRzkwWDJSaGRHRXBQVDU3Q2lBZ0lDQWdJQ0FnWVdSa1gzQnNiM1FvYzJObGJtVXNJSEJzYjNSZlpHRjBZU2s3Q2lBZ0lDQjlLVHNLSUNBZ0lITmpaVzVsTG5OalpXNWxYMk5vYVd4a2NtVnVJRDBnWkdGMFlTNWphR2xzWkhKbGJpNXRZWEFvS0dOb2FXeGtLVDArWkdWelpYSnBZV3hwZW1WZmMyTmxibVVvWTJocGJHUXNJSE5qY21WbGJpa3BPd29nSUNBZ2NtVjBkWEp1SUhOalpXNWxPd3A5Q21aMWJtTjBhVzl1SUdSbGJHVjBaVjl3Ykc5MEtIQnNiM1FwSUhzS0lDQWdJR1JsYkdWMFpTQndiRzkwWDJOaFkyaGxXM0JzYjNRdWNHeHZkRjkxZFdsa1hUc0tJQ0FnSUdOdmJuTjBJSHNnY0dGeVpXNTBJQ0I5SUQwZ2NHeHZkRHNLSUNBZ0lHbG1JQ2h3WVhKbGJuUXBJSHNLSUNBZ0lDQWdJQ0J3WVhKbGJuUXVjbVZ0YjNabEtIQnNiM1FwT3dvZ0lDQWdmUW9nSUNBZ2NHeHZkQzVuWlc5dFpYUnllUzVrYVhOd2IzTmxLQ2s3Q2lBZ0lDQndiRzkwTG0xaGRHVnlhV0ZzTG1ScGMzQnZjMlVvS1RzS2ZRcG1kVzVqZEdsdmJpQmtaV3hsZEdWZmRHaHlaV1ZmYzJObGJtVW9jMk5sYm1VcElIc0tJQ0FnSUdSbGJHVjBaU0J6WTJWdVpWOWpZV05vWlZ0elkyVnVaUzV6WTJWdVpWOTFkV2xrWFRzS0lDQWdJSE5qWlc1bExuTmpaVzVsWDJOb2FXeGtjbVZ1TG1admNrVmhZMmdvWkdWc1pYUmxYM1JvY21WbFgzTmpaVzVsS1RzS0lDQWdJSGRvYVd4bEtITmpaVzVsTG1Ob2FXeGtjbVZ1TG14bGJtZDBhQ0ErSURBcGV3b2dJQ0FnSUNBZ0lHUmxiR1YwWlY5d2JHOTBLSE5qWlc1bExtTm9hV3hrY21WdVd6QmRLVHNLSUNBZ0lIMEtmUXAzYVc1a2IzY3VWRWhTUlVVZ1BTQnRiMlE3Q21OdmJuTjBJSEJwZUdWc1VtRjBhVzh4SUQwZ2QybHVaRzkzTG1SbGRtbGpaVkJwZUdWc1VtRjBhVzhnZkh3Z01TNHdPd3BtZFc1amRHbHZiaUJ5Wlc1a1pYSmZjMk5sYm1Vb2MyTmxibVVzSUhCcFkydHBibWNnUFNCbVlXeHpaU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QmpZVzFsY21FZ0xDQnlaVzVrWlhKbGNpQWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOdmJuTjBJR05oYm5aaGN5QTlJSEpsYm1SbGNtVnlMbVJ2YlVWc1pXMWxiblE3Q2lBZ0lDQnBaaUFvSVdSdlkzVnRaVzUwTG1KdlpIa3VZMjl1ZEdGcGJuTW9ZMkZ1ZG1GektTa2dld29nSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0NKRldFbFVTVTVISUZkSFRDSXBPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk4wWVhSbExuSmxjMlYwS0NrN0NpQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdVpHbHpjRzl6WlNncE93b2dJQ0FnSUNBZ0lHUmxiR1YwWlY5MGFISmxaVjl6WTJWdVpTaHpZMlZ1WlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPd29nSUNBZ2ZRb2dJQ0FnYVdZZ0tDRnpZMlZ1WlM1MmFYTnBZbXhsTG5aaGJIVmxLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJSFJ5ZFdVN0NpQWdJQ0I5Q2lBZ0lDQnlaVzVrWlhKbGNpNWhkWFJ2UTJ4bFlYSWdQU0J6WTJWdVpTNWpiR1ZoY25OalpXNWxPd29nSUNBZ1kyOXVjM1FnWVhKbFlTQTlJSE5qWlc1bExuQnBlR1ZzWVhKbFlTNTJZV3gxWlRzS0lDQWdJR2xtSUNoaGNtVmhLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXM2dzSUhrc0lIY3NJR2hkSUQwZ1lYSmxZUzV0WVhBb0tIUXBQVDUwSUM4Z2NHbDRaV3hTWVhScGJ6RXBPd29nSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZacFpYZHdiM0owS0hnc0lIa3NJSGNzSUdncE93b2dJQ0FnSUNBZ0lISmxibVJsY21WeUxuTmxkRk5qYVhOemIzSW9lQ3dnZVN3Z2R5d2dhQ2s3Q2lBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1YzJWMFUyTnBjM052Y2xSbGMzUW9kSEoxWlNrN0NpQWdJQ0FnSUNBZ2FXWWdLSEJwWTJ0cGJtY3BJSHNLSUNBZ0lDQWdJQ0FnSUNBZ2NtVnVaR1Z5WlhJdWMyVjBRMnhsWVhKQmJIQm9ZU2d3S1RzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwUTJ4bFlYSkRiMnh2Y2lodVpYY2diVzlrTGtOdmJHOXlLREFwTENBd0xqQXBPd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhKbGJtUmxjbVZ5TG5ObGRFTnNaV0Z5UTI5c2IzSW9jMk5sYm1VdVltRmphMmR5YjNWdVpHTnZiRzl5TG5aaGJIVmxLVHNLSUNBZ0lDQWdJQ0I5Q2lBZ0lDQWdJQ0FnY21WdVpHVnlaWEl1Y21WdVpHVnlLSE5qWlc1bExDQmpZVzFsY21FcE93b2dJQ0FnZlFvZ0lDQWdjbVYwZFhKdUlITmpaVzVsTG5OalpXNWxYMk5vYVd4a2NtVnVMbVYyWlhKNUtDaDRLVDArY21WdVpHVnlYM05qWlc1bEtIZ3NJSEJwWTJ0cGJtY3BLVHNLZlFwbWRXNWpkR2x2YmlCemRHRnlkRjl5Wlc1a1pYSnNiMjl3S0hSb2NtVmxYM05qWlc1bEtTQjdDaUFnSUNCamIyNXpkQ0I3SUdad2N5QWdmU0E5SUhSb2NtVmxYM05qWlc1bExuTmpjbVZsYmpzS0lDQWdJR052Ym5OMElIUnBiV1ZmY0dWeVgyWnlZVzFsSUQwZ01TQXZJR1p3Y3lBcUlERXdNREE3Q2lBZ0lDQnNaWFFnYkdGemRGOTBhVzFsWDNOMFlXMXdJRDBnY0dWeVptOXliV0Z1WTJVdWJtOTNLQ2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQnlaVzVrWlhKc2IyOXdLSFJwYldWemRHRnRjQ2tnZXdvZ0lDQWdJQ0FnSUdsbUlDaDBhVzFsYzNSaGJYQWdMU0JzWVhOMFgzUnBiV1ZmYzNSaGJYQWdQaUIwYVcxbFgzQmxjbDltY21GdFpTa2dld29nSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JoYkd4ZmNtVnVaR1Z5WldRZ1BTQnlaVzVrWlhKZmMyTmxibVVvZEdoeVpXVmZjMk5sYm1VcE93b2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRnNiRjl5Wlc1a1pYSmxaQ2tnZXdvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ0lDQWdJR3hoYzNSZmRHbHRaVjl6ZEdGdGNDQTlJSEJsY21admNtMWhibU5sTG01dmR5Z3BPd29nSUNBZ0lDQWdJSDBLSUNBZ0lDQWdJQ0IzYVc1a2IzY3VjbVZ4ZFdWemRFRnVhVzFoZEdsdmJrWnlZVzFsS0hKbGJtUmxjbXh2YjNBcE93b2dJQ0FnZlFvZ0lDQWdjbVZ1WkdWeVgzTmpaVzVsS0hSb2NtVmxYM05qWlc1bEtUc0tJQ0FnSUhKbGJtUmxjbXh2YjNBb0tUc0tmUXBtZFc1amRHbHZiaUIwYUhKdmRIUnNaVjltZFc1amRHbHZiaWhtZFc1akxDQmtaV3hoZVNrZ2V3b2dJQ0FnYkdWMElIQnlaWFlnUFNBd093b2dJQ0FnY21WMGRYSnVJQ2d1TGk1aGNtZHpLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRzV2ZHlBOUlHNWxkeUJFWVhSbEtDa3VaMlYwVkdsdFpTZ3BPd29nSUNBZ0lDQWdJR2xtSUNodWIzY2dMU0J3Y21WMklENGdaR1ZzWVhrcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0hKbGRpQTlJRzV2ZHpzS0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWjFibU1vTGk0dVlYSm5jeWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmVHNLZlFwbWRXNWpkR2x2YmlCMGFISmxaV3B6WDIxdlpIVnNaU2hqWVc1MllYTXNJR052Ylcwc0lIZHBaSFJvTENCb1pXbG5hSFFwSUhzS0lDQWdJR3hsZENCamIyNTBaWGgwSUQwZ1kyRnVkbUZ6TG1kbGRFTnZiblJsZUhRb0luZGxZbWRzTWlJc0lIc0tJQ0FnSUNBZ0lDQndjbVZ6WlhKMlpVUnlZWGRwYm1kQ2RXWm1aWEk2SUhSeWRXVUtJQ0FnSUgwcE93b2dJQ0FnYVdZZ0tDRmpiMjUwWlhoMEtTQjdDaUFnSUNBZ0lDQWdZMjl1YzI5c1pTNTNZWEp1S0NKWFpXSkhUQ0F5TGpBZ2JtOTBJSE4xY0hCdmNuUmxaQ0JpZVNCaWNtOTNjMlZ5TENCbVlXeHNhVzVuSUdKaFkyc2dkRzhnVjJWaVIwd2dNUzR3SUNoV2IyeDFiV1VnY0d4dmRITWdkMmxzYkNCdWIzUWdkMjl5YXlraUtUc0tJQ0FnSUNBZ0lDQmpiMjUwWlhoMElEMGdZMkZ1ZG1GekxtZGxkRU52Ym5SbGVIUW9JbmRsWW1kc0lpd2dld29nSUNBZ0lDQWdJQ0FnSUNCd2NtVnpaWEoyWlVSeVlYZHBibWRDZFdabVpYSTZJSFJ5ZFdVS0lDQWdJQ0FnSUNCOUtUc0tJQ0FnSUgwS0lDQWdJR2xtSUNnaFkyOXVkR1Y0ZENrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmpzS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhKbGJtUmxjbVZ5SUQwZ2JtVjNJRzF2WkM1WFpXSkhURkpsYm1SbGNtVnlLSHNLSUNBZ0lDQWdJQ0JoYm5ScFlXeHBZWE02SUhSeWRXVXNDaUFnSUNBZ0lDQWdZMkZ1ZG1Gek9pQmpZVzUyWVhNc0NpQWdJQ0FnSUNBZ1kyOXVkR1Y0ZERvZ1kyOXVkR1Y0ZEN3S0lDQWdJQ0FnSUNCd2IzZGxjbEJ5WldabGNtVnVZMlU2SUNKb2FXZG9MWEJsY21admNtMWhibU5sSWdvZ0lDQWdmU2s3Q2lBZ0lDQnlaVzVrWlhKbGNpNXpaWFJEYkdWaGNrTnZiRzl5S0NJalptWm1abVptSWlrN0NpQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSUWFYaGxiRkpoZEdsdktIQnBlR1ZzVW1GMGFXOHhLVHNLSUNBZ0lISmxibVJsY21WeUxuTmxkRk5wZW1Vb2QybGtkR2dnTHlCd2FYaGxiRkpoZEdsdk1Td2dhR1ZwWjJoMElDOGdjR2w0Wld4U1lYUnBiekVwT3dvZ0lDQWdZMjl1YzNRZ2JXOTFjMlZmWTJGc2JHSmhZMnNnUFNBb2VDd2dlU2s5UG1OdmJXMHVibTkwYVdaNUtIc0tJQ0FnSUNBZ0lDQWdJQ0FnYlc5MWMyVndiM05wZEdsdmJqb2dXd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ3dLSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSGtLSUNBZ0lDQWdJQ0FnSUNBZ1hRb2dJQ0FnSUNBZ0lIMHBPd29nSUNBZ1kyOXVjM1FnYm05MGFXWjVYMjF2ZFhObFgzUm9jbTkwZEd4bFpDQTlJSFJvY205MGRHeGxYMloxYm1OMGFXOXVLRzF2ZFhObFgyTmhiR3hpWVdOckxDQTBNQ2s3Q2lBZ0lDQm1kVzVqZEdsdmJpQnRiM1Z6WlcxdmRtVW9aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQjJZWElnY21WamRDQTlJR05oYm5aaGN5NW5aWFJDYjNWdVpHbHVaME5zYVdWdWRGSmxZM1FvS1RzS0lDQWdJQ0FnSUNCMllYSWdlQ0E5SUNobGRtVnVkQzVqYkdsbGJuUllJQzBnY21WamRDNXNaV1owS1NBcUlIQnBlR1ZzVW1GMGFXOHhPd29nSUNBZ0lDQWdJSFpoY2lCNUlEMGdLR1YyWlc1MExtTnNhV1Z1ZEZrZ0xTQnlaV04wTG5SdmNDa2dLaUJ3YVhobGJGSmhkR2x2TVRzS0lDQWdJQ0FnSUNCdWIzUnBabmxmYlc5MWMyVmZkR2h5YjNSMGJHVmtLSGdzSUhrcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXMXZkbVVpTENCdGIzVnpaVzF2ZG1VcE93b2dJQ0FnWm5WdVkzUnBiMjRnYlc5MWMyVmtiM2R1S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0J0YjNWelpXUnZkMjQ2SUdWMlpXNTBMbUoxZEhSdmJuTUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJXOTFjMlZrYjNkdUlpd2diVzkxYzJWa2IzZHVLVHNLSUNBZ0lHWjFibU4wYVc5dUlHMXZkWE5sZFhBb1pYWmxiblFwSUhzS0lDQWdJQ0FnSUNCamIyMXRMbTV2ZEdsbWVTaDdDaUFnSUNBZ0lDQWdJQ0FnSUcxdmRYTmxkWEE2SUdWMlpXNTBMbUoxZEhSdmJuTUtJQ0FnSUNBZ0lDQjlLVHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNGdabUZzYzJVN0NpQWdJQ0I5Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWJXOTFjMlYxY0NJc0lHMXZkWE5sZFhBcE93b2dJQ0FnWm5WdVkzUnBiMjRnZDJobFpXd29aWFpsYm5RcElIc0tJQ0FnSUNBZ0lDQmpiMjF0TG01dmRHbG1lU2g3Q2lBZ0lDQWdJQ0FnSUNBZ0lITmpjbTlzYkRvZ1d3b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pYWmxiblF1WkdWc2RHRllMQW9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMV1YyWlc1MExtUmxiSFJoV1FvZ0lDQWdJQ0FnSUNBZ0lDQmRDaUFnSUNBZ0lDQWdmU2s3Q2lBZ0lDQWdJQ0FnWlhabGJuUXVjSEpsZG1WdWRFUmxabUYxYkhRb0tUc0tJQ0FnSUNBZ0lDQnlaWFIxY200Z1ptRnNjMlU3Q2lBZ0lDQjlDaUFnSUNCallXNTJZWE11WVdSa1JYWmxiblJNYVhOMFpXNWxjaWdpZDJobFpXd2lMQ0IzYUdWbGJDazdDaUFnSUNCbWRXNWpkR2x2YmlCclpYbGtiM2R1S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyWlhsa2IzZHVPaUJsZG1WdWRDNWpiMlJsQ2lBZ0lDQWdJQ0FnZlNrN0NpQWdJQ0FnSUNBZ2NtVjBkWEp1SUdaaGJITmxPd29nSUNBZ2ZRb2dJQ0FnWTJGdWRtRnpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9JbXRsZVdSdmQyNGlMQ0JyWlhsa2IzZHVLVHNLSUNBZ0lHWjFibU4wYVc5dUlHdGxlWFZ3S0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyWlhsMWNEb2daWFpsYm5RdVkyOWtaUW9nSUNBZ0lDQWdJSDBwT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUc0tJQ0FnSUgwS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSnJaWGwxY0NJc0lHdGxlWFZ3S1RzS0lDQWdJR1oxYm1OMGFXOXVJR052Ym5SbGVIUnRaVzUxS0dWMlpXNTBLU0I3Q2lBZ0lDQWdJQ0FnWTI5dGJTNXViM1JwWm5rb2V3b2dJQ0FnSUNBZ0lDQWdJQ0JyWlhsMWNEb2dJbVJsYkdWMFpWOXJaWGx6SWdvZ0lDQWdJQ0FnSUgwcE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCbVlXeHpaVHNLSUNBZ0lIMEtJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0pqYjI1MFpYaDBiV1Z1ZFNJc0lDaGxLVDArWlM1d2NtVjJaVzUwUkdWbVlYVnNkQ2dwS1RzS0lDQWdJR05oYm5aaGN5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDSm1iMk4xYzI5MWRDSXNJR052Ym5SbGVIUnRaVzUxS1RzS0lDQWdJSEpsZEhWeWJpQnlaVzVrWlhKbGNqc0tmUXBtZFc1amRHbHZiaUJqY21WaGRHVmZjMk5sYm1Vb2QzSmhjSEJsY2l3Z1kyRnVkbUZ6TENCallXNTJZWE5mZDJsa2RHZ3NJSE5qWlc1bGN5d2dZMjl0YlN3Z2QybGtkR2dzSUdobGFXZG9kQ3dnWm5CekxDQjBaWGgwZFhKbFgyRjBiR0Z6WDI5aWN5a2dld29nSUNBZ1kyOXVjM1FnY21WdVpHVnlaWElnUFNCMGFISmxaV3B6WDIxdlpIVnNaU2hqWVc1MllYTXNJR052Ylcwc0lIZHBaSFJvTENCb1pXbG5hSFFwT3dvZ0lDQWdWRVZZVkZWU1JWOUJWRXhCVTFzd1hTQTlJSFJsZUhSMWNtVmZZWFJzWVhOZmIySnpPd29nSUNBZ2FXWWdLSEpsYm1SbGNtVnlLU0I3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdZMkZ0WlhKaElEMGdibVYzSUcxdlpDNVFaWEp6Y0dWamRHbDJaVU5oYldWeVlTZzBOU3dnTVN3Z01Dd2dNVEF3S1RzS0lDQWdJQ0FnSUNCallXMWxjbUV1ZFhCa1lYUmxVSEp2YW1WamRHbHZiazFoZEhKcGVDZ3BPd29nSUNBZ0lDQWdJR052Ym5OMElITnBlbVVnUFNCdVpYY2diVzlrTGxabFkzUnZjaklvS1RzS0lDQWdJQ0FnSUNCeVpXNWtaWEpsY2k1blpYUkVjbUYzYVc1blFuVm1abVZ5VTJsNlpTaHphWHBsS1RzS0lDQWdJQ0FnSUNCamIyNXpkQ0J3YVdOcmFXNW5YM1JoY21kbGRDQTlJRzVsZHlCdGIyUXVWMlZpUjB4U1pXNWtaWEpVWVhKblpYUW9jMmw2WlM1NExDQnphWHBsTG5rcE93b2dJQ0FnSUNBZ0lHTnZibk4wSUhOamNtVmxiaUE5SUhzS0lDQWdJQ0FnSUNBZ0lDQWdjbVZ1WkdWeVpYSXNDaUFnSUNBZ0lDQWdJQ0FnSUhCcFkydHBibWRmZEdGeVoyVjBMQW9nSUNBZ0lDQWdJQ0FnSUNCallXMWxjbUVzQ2lBZ0lDQWdJQ0FnSUNBZ0lHWndjeXdLSUNBZ0lDQWdJQ0FnSUNBZ1kyRnVkbUZ6Q2lBZ0lDQWdJQ0FnZlRzS0lDQWdJQ0FnSUNCamIyNXpkQ0IwYUhKbFpWOXpZMlZ1WlNBOUlHUmxjMlZ5YVdGc2FYcGxYM05qWlc1bEtITmpaVzVsY3l3Z2MyTnlaV1Z1S1RzS0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5aDBhSEpsWlY5elkyVnVaU2s3Q2lBZ0lDQWdJQ0FnYzNSaGNuUmZjbVZ1WkdWeWJHOXZjQ2gwYUhKbFpWOXpZMlZ1WlNrN0NpQWdJQ0FnSUNBZ1kyRnVkbUZ6WDNkcFpIUm9MbTl1S0NoM1gyZ3BQVDU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHTnZibk4wSUhCcGVHVnNVbUYwYVc4Z1BTQnlaVzVrWlhKbGNpNW5aWFJRYVhobGJGSmhkR2x2S0NrN0NpQWdJQ0FnSUNBZ0lDQWdJSEpsYm1SbGNtVnlMbk5sZEZOcGVtVW9kMTlvV3pCZElDOGdjR2w0Wld4U1lYUnBieXdnZDE5b1d6RmRJQzhnY0dsNFpXeFNZWFJwYnlrN0NpQWdJQ0FnSUNBZ2ZTazdDaUFnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJSGRoY201cGJtY2dQU0JuWlhSWFpXSkhURVZ5Y205eVRXVnpjMkZuWlNncE93b2dJQ0FnSUNBZ0lIZHlZWEJ3WlhJdVlYQndaVzVrUTJocGJHUW9kMkZ5Ym1sdVp5azdDaUFnSUNCOUNuMEtablZ1WTNScGIyNGdjMlYwWDNCcFkydHBibWRmZFc1cFptOXliWE1vYzJObGJtVXNJR3hoYzNSZmFXUXNJSEJwWTJ0cGJtY3NJSEJwWTJ0bFpGOXdiRzkwY3l3Z2NHeHZkSE1zSUdsa1gzUnZYM0JzYjNRcElIc0tJQ0FnSUhOalpXNWxMbU5vYVd4a2NtVnVMbVp2Y2tWaFkyZ29LSEJzYjNRc0lHbHVaR1Y0S1QwK2V3b2dJQ0FnSUNBZ0lHTnZibk4wSUhzZ2JXRjBaWEpwWVd3Z0lIMGdQU0J3Ykc5ME93b2dJQ0FnSUNBZ0lHTnZibk4wSUhzZ2RXNXBabTl5YlhNZ0lIMGdQU0J0WVhSbGNtbGhiRHNLSUNBZ0lDQWdJQ0JwWmlBb2NHbGphMmx1WnlrZ2V3b2dJQ0FnSUNBZ0lDQWdJQ0IxYm1sbWIzSnRjeTV2WW1wbFkzUmZhV1F1ZG1Gc2RXVWdQU0JzWVhOMFgybGtJQ3NnYVc1a1pYZzdDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6TG5CcFkydHBibWN1ZG1Gc2RXVWdQU0IwY25WbE93b2dJQ0FnSUNBZ0lDQWdJQ0J0WVhSbGNtbGhiQzVpYkdWdVpHbHVaeUE5SUcxdlpDNU9iMEpzWlc1a2FXNW5Pd29nSUNBZ0lDQWdJSDBnWld4elpTQjdDaUFnSUNBZ0lDQWdJQ0FnSUhWdWFXWnZjbTF6TG5CcFkydHBibWN1ZG1Gc2RXVWdQU0JtWVd4elpUc0tJQ0FnSUNBZ0lDQWdJQ0FnYldGMFpYSnBZV3d1WW14bGJtUnBibWNnUFNCdGIyUXVUbTl5YldGc1FteGxibVJwYm1jN0NpQWdJQ0FnSUNBZ0lDQWdJR052Ym5OMElHbGtJRDBnZFc1cFptOXliWE11YjJKcVpXTjBYMmxrTG5aaGJIVmxPd29nSUNBZ0lDQWdJQ0FnSUNCcFppQW9hV1FnYVc0Z2NHbGphMlZrWDNCc2IzUnpLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3Ykc5MGN5NXdkWE5vS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiRzkwTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIQnBZMnRsWkY5d2JHOTBjMXRwWkYwS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUYwcE93b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXUmZkRzlmY0d4dmRGdHBaRjBnUFNCd2JHOTBPd29nSUNBZ0lDQWdJQ0FnSUNCOUNpQWdJQ0FnSUNBZ2ZRb2dJQ0FnZlNrN0NpQWdJQ0JzWlhRZ2JtVjRkRjlwWkNBOUlHeGhjM1JmYVdRZ0t5QnpZMlZ1WlM1amFHbHNaSEpsYmk1c1pXNW5kR2c3Q2lBZ0lDQnpZMlZ1WlM1elkyVnVaVjlqYUdsc1pISmxiaTVtYjNKRllXTm9LQ2h6WTJWdVpTazlQbnNLSUNBZ0lDQWdJQ0J1WlhoMFgybGtJRDBnYzJWMFgzQnBZMnRwYm1kZmRXNXBabTl5YlhNb2MyTmxibVVzSUc1bGVIUmZhV1FzSUhCcFkydHBibWNzSUhCcFkydGxaRjl3Ykc5MGN5d2djR3h2ZEhNc0lHbGtYM1J2WDNCc2IzUXBPd29nSUNBZ2ZTazdDaUFnSUNCeVpYUjFjbTRnYm1WNGRGOXBaRHNLZlFwbWRXNWpkR2x2YmlCd2FXTnJYMjVoZEdsMlpTaHpZMlZ1WlN3Z2VDd2dlU3dnZHl3Z2FDa2dld29nSUNBZ1kyOXVjM1FnZXlCeVpXNWtaWEpsY2lBc0lIQnBZMnRwYm1kZmRHRnlaMlYwSUNCOUlEMGdjMk5sYm1VdWMyTnlaV1Z1T3dvZ0lDQWdjbVZ1WkdWeVpYSXVjMlYwVW1WdVpHVnlWR0Z5WjJWMEtIQnBZMnRwYm1kZmRHRnlaMlYwS1RzS0lDQWdJSE5sZEY5d2FXTnJhVzVuWDNWdWFXWnZjbTF6S0hOalpXNWxMQ0F4TENCMGNuVmxLVHNLSUNBZ0lISmxibVJsY2w5elkyVnVaU2h6WTJWdVpTd2dkSEoxWlNrN0NpQWdJQ0J5Wlc1a1pYSmxjaTV6WlhSU1pXNWtaWEpVWVhKblpYUW9iblZzYkNrN0NpQWdJQ0JqYjI1emRDQnVZbmwwWlhNZ1BTQjNJQ29nYUNBcUlEUTdDaUFnSUNCamIyNXpkQ0J3YVhobGJGOWllWFJsY3lBOUlHNWxkeUJWYVc1ME9FRnljbUY1S0c1aWVYUmxjeWs3Q2lBZ0lDQnlaVzVrWlhKbGNpNXlaV0ZrVW1WdVpHVnlWR0Z5WjJWMFVHbDRaV3h6S0hCcFkydHBibWRmZEdGeVoyVjBMQ0I0TENCNUxDQjNMQ0JvTENCd2FYaGxiRjlpZVhSbGN5azdDaUFnSUNCamIyNXpkQ0J3YVdOclpXUmZjR3h2ZEhNZ1BTQjdmVHNLSUNBZ0lHTnZibk4wSUhCcFkydGxaRjl3Ykc5MGMxOWhjbkpoZVNBOUlGdGRPd29nSUNBZ1kyOXVjM1FnY21WcGJuUmxjbkJ5WlhSZmRtbGxkeUE5SUc1bGR5QkVZWFJoVm1sbGR5aHdhWGhsYkY5aWVYUmxjeTVpZFdabVpYSXBPd29nSUNBZ1ptOXlLR3hsZENCcElEMGdNRHNnYVNBOElIQnBlR1ZzWDJKNWRHVnpMbXhsYm1kMGFDQXZJRFE3SUdrckt5bDdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXUWdQU0J5WldsdWRHVnljSEpsZEY5MmFXVjNMbWRsZEZWcGJuUXhOaWhwSUNvZ05DazdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2FXNWtaWGdnUFNCeVpXbHVkR1Z5Y0hKbGRGOTJhV1YzTG1kbGRGVnBiblF4TmlocElDb2dOQ0FySURJcE93b2dJQ0FnSUNBZ0lIQnBZMnRsWkY5d2JHOTBjMTloY25KaGVTNXdkWE5vS0ZzS0lDQWdJQ0FnSUNBZ0lDQWdhV1FzQ2lBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0Q2lBZ0lDQWdJQ0FnWFNrN0NpQWdJQ0FnSUNBZ2NHbGphMlZrWDNCc2IzUnpXMmxrWFNBOUlHbHVaR1Y0T3dvZ0lDQWdmUW9nSUNBZ1kyOXVjM1FnY0d4dmRITWdQU0JiWFRzS0lDQWdJR052Ym5OMElHbGtYM1J2WDNCc2IzUWdQU0I3ZlRzS0lDQWdJSE5sZEY5d2FXTnJhVzVuWDNWdWFXWnZjbTF6S0hOalpXNWxMQ0F3TENCbVlXeHpaU3dnY0dsamEyVmtYM0JzYjNSekxDQndiRzkwY3l3Z2FXUmZkRzlmY0d4dmRDazdDaUFnSUNCamIyNXpkQ0J3YVdOclpXUmZjR3h2ZEhOZmJXRjBjbWw0SUQwZ2NHbGphMlZrWDNCc2IzUnpYMkZ5Y21GNUxtMWhjQ2dvVzJsa0xDQnBibVJsZUYwcFBUNTdDaUFnSUNBZ0lDQWdZMjl1YzNRZ2NDQTlJR2xrWDNSdlgzQnNiM1JiYVdSZE93b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJSEFnUHlCd0xuQnNiM1JmZFhWcFpDQTZJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJR2x1WkdWNENpQWdJQ0FnSUNBZ1hUc0tJQ0FnSUgwcE93b2dJQ0FnWTI5dWMzUWdjR3h2ZEY5dFlYUnlhWGdnUFNCN0NpQWdJQ0FnSUNBZ1pHRjBZVG9nY0dsamEyVmtYM0JzYjNSelgyMWhkSEpwZUN3S0lDQWdJQ0FnSUNCemFYcGxPaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lIY3NDaUFnSUNBZ0lDQWdJQ0FnSUdnS0lDQWdJQ0FnSUNCZENpQWdJQ0I5T3dvZ0lDQWdjbVYwZFhKdUlGc0tJQ0FnSUNBZ0lDQndiRzkwWDIxaGRISnBlQ3dLSUNBZ0lDQWdJQ0J3Ykc5MGN3b2dJQ0FnWFRzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDJOc2IzTmxjM1FvYzJObGJtVXNJSGg1TENCeVlXNW5aU2tnZXdvZ0lDQWdZMjl1YzNRZ2V5QndhV05yYVc1blgzUmhjbWRsZENBZ2ZTQTlJSE5qWlc1bExuTmpjbVZsYmpzS0lDQWdJR052Ym5OMElIc2dkMmxrZEdnZ0xDQm9aV2xuYUhRZ0lIMGdQU0J3YVdOcmFXNW5YM1JoY21kbGREc0tJQ0FnSUdsbUlDZ2hLREV1TUNBOFBTQjRlVnN3WFNBOFBTQjNhV1IwYUNBbUppQXhMakFnUEQwZ2VIbGJNVjBnUEQwZ2FHVnBaMmgwS1NrZ2V3b2dJQ0FnSUNBZ0lISmxkSFZ5YmlCYkNpQWdJQ0FnSUNBZ0lDQWdJRzUxYkd3c0NpQWdJQ0FnSUNBZ0lDQWdJREFLSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdmUW9nSUNBZ1kyOXVjM1FnZURBZ1BTQk5ZWFJvTG0xaGVDZ3hMQ0I0ZVZzd1hTQXRJSEpoYm1kbEtUc0tJQ0FnSUdOdmJuTjBJSGt3SUQwZ1RXRjBhQzV0WVhnb01Td2dlSGxiTVYwZ0xTQnlZVzVuWlNrN0NpQWdJQ0JqYjI1emRDQjRNU0E5SUUxaGRHZ3ViV2x1S0hkcFpIUm9MQ0JOWVhSb0xtWnNiMjl5S0hoNVd6QmRJQ3NnY21GdVoyVXBLVHNLSUNBZ0lHTnZibk4wSUhreElEMGdUV0YwYUM1dGFXNG9hR1ZwWjJoMExDQk5ZWFJvTG1ac2IyOXlLSGg1V3pGZElDc2djbUZ1WjJVcEtUc0tJQ0FnSUdOdmJuTjBJR1I0SUQwZ2VERWdMU0I0TURzS0lDQWdJR052Ym5OMElHUjVJRDBnZVRFZ0xTQjVNRHNLSUNBZ0lHTnZibk4wSUZ0d2JHOTBYMlJoZEdFc0lGOWRJRDBnY0dsamExOXVZWFJwZG1Vb2MyTmxibVVzSUhnd0xDQjVNQ3dnWkhnc0lHUjVLVHNLSUNBZ0lHTnZibk4wSUhCc2IzUmZiV0YwY21sNElEMGdjR3h2ZEY5a1lYUmhMbVJoZEdFN0NpQWdJQ0JzWlhRZ2JXbHVYMlJwYzNRZ1BTQnlZVzVuWlNCZUlESTdDaUFnSUNCc1pYUWdjMlZzWldOMGFXOXVJRDBnV3dvZ0lDQWdJQ0FnSUc1MWJHd3NDaUFnSUNBZ0lDQWdNQW9nSUNBZ1hUc0tJQ0FnSUdOdmJuTjBJSGdnUFNCNGVWc3dYU0FySURFZ0xTQjRNRHNLSUNBZ0lHTnZibk4wSUhrZ1BTQjRlVnN4WFNBcklERWdMU0I1TURzS0lDQWdJR3hsZENCd2FXNWtaWGdnUFNBd093b2dJQ0FnWm05eUtHeGxkQ0JwSUQwZ01Uc2dhU0E4UFNCa2VEc2dhU3NyS1hzS0lDQWdJQ0FnSUNCbWIzSW9iR1YwSUdvZ1BTQXhPeUJxSUR3OUlHUjRPeUJxS3lzcGV3b2dJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQmtJRDBnZUNBdElHa2dYaUF5SUNzZ0tIa2dMU0JxS1NCZUlESTdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJRnR3Ykc5MFgzVjFhV1FzSUdsdVpHVjRYU0E5SUhCc2IzUmZiV0YwY21sNFczQnBibVJsZUYwN0NpQWdJQ0FnSUNBZ0lDQWdJSEJwYm1SbGVDQTlJSEJwYm1SbGVDQXJJREU3Q2lBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hrSUR3Z2JXbHVYMlJwYzNRZ0ppWWdjR3h2ZEY5MWRXbGtLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVc1ZlpHbHpkQ0E5SUdRN0NpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeGxZM1JwYjI0Z1BTQmJDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0d4dmRGOTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVaR1Y0Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JkT3dvZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdmUW9nSUNBZ2ZRb2dJQ0FnY21WMGRYSnVJSE5sYkdWamRHbHZianNLZlFwbWRXNWpkR2x2YmlCd2FXTnJYM052Y25SbFpDaHpZMlZ1WlN3Z2VIa3NJSEpoYm1kbEtTQjdDaUFnSUNCamIyNXpkQ0I3SUhCcFkydHBibWRmZEdGeVoyVjBJQ0I5SUQwZ2MyTmxibVV1YzJOeVpXVnVPd29nSUNBZ1kyOXVjM1FnZXlCM2FXUjBhQ0FzSUdobGFXZG9kQ0FnZlNBOUlIQnBZMnRwYm1kZmRHRnlaMlYwT3dvZ0lDQWdhV1lnS0NFb01TNHdJRHc5SUhoNVd6QmRJRHc5SUhkcFpIUm9JQ1ltSURFdU1DQThQU0I0ZVZzeFhTQThQU0JvWldsbmFIUXBLU0I3Q2lBZ0lDQWdJQ0FnY21WMGRYSnVJRnNLSUNBZ0lDQWdJQ0FnSUNBZ2JuVnNiQ3dLSUNBZ0lDQWdJQ0FnSUNBZ01Bb2dJQ0FnSUNBZ0lGMDdDaUFnSUNCOUNpQWdJQ0JqYjI1emRDQjRNQ0E5SUUxaGRHZ3ViV0Y0S0RFc0lIaDVXekJkSUMwZ2NtRnVaMlVwT3dvZ0lDQWdZMjl1YzNRZ2VUQWdQU0JOWVhSb0xtMWhlQ2d4TENCNGVWc3hYU0F0SUhKaGJtZGxLVHNLSUNBZ0lHTnZibk4wSUhneElEMGdUV0YwYUM1dGFXNG9kMmxrZEdnc0lFMWhkR2d1Wm14dmIzSW9lSGxiTUYwZ0t5QnlZVzVuWlNrcE93b2dJQ0FnWTI5dWMzUWdlVEVnUFNCTllYUm9MbTFwYmlob1pXbG5hSFFzSUUxaGRHZ3VabXh2YjNJb2VIbGJNVjBnS3lCeVlXNW5aU2twT3dvZ0lDQWdZMjl1YzNRZ1pIZ2dQU0I0TVNBdElIZ3dPd29nSUNBZ1kyOXVjM1FnWkhrZ1BTQjVNU0F0SUhrd093b2dJQ0FnWTI5dWMzUWdXM0JzYjNSZlpHRjBZU3dnYzJWc1pXTjBaV1JkSUQwZ2NHbGphMTl1WVhScGRtVW9jMk5sYm1Vc0lIZ3dMQ0I1TUN3Z1pIZ3NJR1I1S1RzS0lDQWdJR2xtSUNoelpXeGxZM1JsWkM1c1pXNW5kR2dnUFQwZ01Da2dld29nSUNBZ0lDQWdJSEpsZEhWeWJpQmJYVHNLSUNBZ0lIMEtJQ0FnSUdOdmJuTjBJSEJzYjNSZmJXRjBjbWw0SUQwZ2NHeHZkRjlrWVhSaExtUmhkR0U3Q2lBZ0lDQmpiMjV6ZENCa2FYTjBZVzVqWlhNZ1BTQnpaV3hsWTNSbFpDNXRZWEFvS0hncFBUNXlZVzVuWlNCZUlESXBPd29nSUNBZ1kyOXVjM1FnZUNBOUlIaDVXekJkSUNzZ01TQXRJSGd3T3dvZ0lDQWdZMjl1YzNRZ2VTQTlJSGg1V3pGZElDc2dNU0F0SUhrd093b2dJQ0FnYkdWMElIQnBibVJsZUNBOUlEQTdDaUFnSUNCbWIzSW9iR1YwSUdrZ1BTQXhPeUJwSUR3OUlHUjRPeUJwS3lzcGV3b2dJQ0FnSUNBZ0lHWnZjaWhzWlhRZ2FpQTlJREU3SUdvZ1BEMGdaSGc3SUdvckt5bDdDaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTjBJR1FnUFNCNElDMGdhU0JlSURJZ0t5QW9lU0F0SUdvcElGNGdNanNLSUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjM1FnVzNCc2IzUmZkWFZwWkN3Z2FXNWtaWGhkSUQwZ2NHeHZkRjl0WVhSeWFYaGJjR2x1WkdWNFhUc0tJQ0FnSUNBZ0lDQWdJQ0FnY0dsdVpHVjRJRDBnY0dsdVpHVjRJQ3NnTVRzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ2NHeHZkRjlwYm1SbGVDQTlJSE5sYkdWamRHVmtMbVpwYm1SSmJtUmxlQ2dvZUNrOVBuaGJNRjB1Y0d4dmRGOTFkV2xrSUQwOUlIQnNiM1JmZFhWcFpDazdDaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHdiRzkwWDJsdVpHVjRJRDQ5SURBZ0ppWWdaQ0E4SUdScGMzUmhibU5sYzF0d2JHOTBYMmx1WkdWNFhTa2dld29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6ZEdGdVkyVnpXM0JzYjNSZmFXNWtaWGhkSUQwZ1pEc0tJQ0FnSUNBZ0lDQWdJQ0FnZlFvZ0lDQWdJQ0FnSUgwS0lDQWdJSDBLSUNBZ0lHTnZibk4wSUhOdmNuUmxaRjlwYm1ScFkyVnpJRDBnUVhKeVlYa3Vabkp2YlNoQmNuSmhlU2hrYVhOMFlXNWpaWE11YkdWdVozUm9LUzVyWlhsektDa3BMbk52Y25Rb0tHRXNJR0lwUFQ1a2FYTjBZVzVqWlhOYllWMGdQQ0JrYVhOMFlXNWpaWE5iWWwwZ1B5QXRNU0E2SUdScGMzUmhibU5sYzF0aVhTQThJR1JwYzNSaGJtTmxjMXRoWFNCOElEQXBPd29nSUNBZ2NtVjBkWEp1SUhOdmNuUmxaRjlwYm1ScFkyVnpMbTFoY0Nnb2FXUjRLVDArZXdvZ0lDQWdJQ0FnSUdOdmJuTjBJRnR3Ykc5MExDQnBibVJsZUYwZ1BTQnpaV3hsWTNSbFpGdHBaSGhkT3dvZ0lDQWdJQ0FnSUhKbGRIVnliaUJiQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnNiM1F1Y0d4dmRGOTFkV2xrTEFvZ0lDQWdJQ0FnSUNBZ0lDQnBibVJsZUFvZ0lDQWdJQ0FnSUYwN0NpQWdJQ0I5S1RzS2ZRcG1kVzVqZEdsdmJpQndhV05yWDI1aGRHbDJaVjkxZFdsa0tITmpaVzVsTENCNExDQjVMQ0IzTENCb0tTQjdDaUFnSUNCamIyNXpkQ0JiWHl3Z2NHbGphMlZrWDNCc2IzUnpYU0E5SUhCcFkydGZibUYwYVhabEtITmpaVzVsTENCNExDQjVMQ0IzTENCb0tUc0tJQ0FnSUhKbGRIVnliaUJ3YVdOclpXUmZjR3h2ZEhNdWJXRndLQ2hiY0N3Z2FXNWtaWGhkS1QwK1d3b2dJQ0FnSUNBZ0lDQWdJQ0J3TG5Cc2IzUmZkWFZwWkN3S0lDQWdJQ0FnSUNBZ0lDQWdhVzVrWlhnS0lDQWdJQ0FnSUNCZEtUc0tmUXBtZFc1amRHbHZiaUJ3YVdOclgyNWhkR2wyWlY5dFlYUnlhWGdvYzJObGJtVXNJSGdzSUhrc0lIY3NJR2dwSUhzS0lDQWdJR052Ym5OMElGdHRZWFJ5YVhnc0lGOWRJRDBnY0dsamExOXVZWFJwZG1Vb2MyTmxibVVzSUhnc0lIa3NJSGNzSUdncE93b2dJQ0FnY21WMGRYSnVJRzFoZEhKcGVEc0tmUXBtZFc1amRHbHZiaUJ5WldkcGMzUmxjbDl3YjNCMWNDaHdiM0IxY0N3Z2MyTmxibVVzSUhCc2IzUnpYM1J2WDNCcFkyc3NJR05oYkd4aVlXTnJLU0I3Q2lBZ0lDQnBaaUFvSVhOalpXNWxJSHg4SUNGelkyVnVaUzV6WTNKbFpXNHBJSHNLSUNBZ0lDQWdJQ0J5WlhSMWNtNDdDaUFnSUNCOUNpQWdJQ0JqYjI1emRDQjdJR05oYm5aaGN5QWdmU0E5SUhOalpXNWxMbk5qY21WbGJqc0tJQ0FnSUdOaGJuWmhjeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ0p0YjNWelpXUnZkMjRpTENBb1pYWmxiblFwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLQ0Z3YjNCMWNDNWpiR0Z6YzB4cGMzUXVZMjl1ZEdGcGJuTW9Jbk5vYjNjaUtTa2dld29nSUNBZ0lDQWdJQ0FnSUNCd2IzQjFjQzVqYkdGemMweHBjM1F1WVdSa0tDSnphRzkzSWlrN0NpQWdJQ0FnSUNBZ2ZRb2dJQ0FnSUNBZ0lIQnZjSFZ3TG5OMGVXeGxMbXhsWm5RZ1BTQmxkbVZ1ZEM1d1lXZGxXQ0FySUNKd2VDSTdDaUFnSUNBZ0lDQWdjRzl3ZFhBdWMzUjViR1V1ZEc5d0lEMGdaWFpsYm5RdWNHRm5aVmtnS3lBaWNIZ2lPd29nSUNBZ0lDQWdJR052Ym5OMElGdDRMQ0I1WFNBOUlGZEhURTFoYTJsbExtVjJaVzUwTW5OalpXNWxYM0JwZUdWc0tITmpaVzVsTENCbGRtVnVkQ2s3Q2lBZ0lDQWdJQ0FnWTI5dWMzUWdXMThzSUhCcFkydHpYU0E5SUZkSFRFMWhhMmxsTG5CcFkydGZibUYwYVhabEtITmpaVzVsTENCNExDQjVMQ0F4TENBeEtUc0tJQ0FnSUNBZ0lDQnBaaUFvY0dsamEzTXViR1Z1WjNSb0lEMDlJREVwSUhzS0lDQWdJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1czQnNiM1FzSUdsdVpHVjRYU0E5SUhCcFkydHpXekJkT3dvZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0d4dmRITmZkRzlmY0dsamF5NW9ZWE1vY0d4dmRDNXdiRzkwWDNWMWFXUXBLU0I3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1emRDQnlaWE4xYkhRZ1BTQmpZV3hzWW1GamF5aHdiRzkwTENCcGJtUmxlQ2s3Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhKbGMzVnNkQ0E5UFQwZ0luTjBjbWx1WnlJZ2ZId2djbVZ6ZFd4MElHbHVjM1JoYm1ObGIyWWdVM1J5YVc1bktTQjdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2RYQXVhVzV1WlhKVVpYaDBJRDBnY21WemRXeDBPd29nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIc0tJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J3YjNCMWNDNXBibTVsY2toVVRVd2dQU0J5WlhOMWJIUTdDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlDaUFnSUNBZ0lDQWdJQ0FnSUgwS0lDQWdJQ0FnSUNCOUlHVnNjMlVnZXdvZ0lDQWdJQ0FnSUNBZ0lDQndiM0IxY0M1amJHRnpjMHhwYzNRdWNtVnRiM1psS0NKemFHOTNJaWs3Q2lBZ0lDQWdJQ0FnZlFvZ0lDQWdmU2s3Q2lBZ0lDQmpZVzUyWVhNdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lnaWEyVjVkWEFpTENBb1pYWmxiblFwUFQ1N0NpQWdJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtdGxlU0E5UFQwZ0lrVnpZMkZ3WlNJcElIc0tJQ0FnSUNBZ0lDQWdJQ0FnY0c5d2RYQXVZMnhoYzNOTWFYTjBMbkpsYlc5MlpTZ2ljMmh2ZHlJcE93b2dJQ0FnSUNBZ0lIMEtJQ0FnSUgwcE93cDlDbmRwYm1SdmR5NVhSMHdnUFNCN0NpQWdJQ0JrWlhObGNtbGhiR2w2WlY5elkyVnVaU3dLSUNBZ0lIUm9jbVZsYW5OZmJXOWtkV3hsTEFvZ0lDQWdjM1JoY25SZmNtVnVaR1Z5Ykc5dmNDd0tJQ0FnSUdSbGJHVjBaVjl3Ykc5MGN5d0tJQ0FnSUdsdWMyVnlkRjl3Ykc5MExBb2dJQ0FnWm1sdVpGOXdiRzkwY3l3S0lDQWdJR1JsYkdWMFpWOXpZMlZ1WlN3S0lDQWdJR1pwYm1SZmMyTmxibVVzQ2lBZ0lDQnpZMlZ1WlY5allXTm9aU3dLSUNBZ0lIQnNiM1JmWTJGamFHVXNDaUFnSUNCa1pXeGxkR1ZmYzJObGJtVnpMQW9nSUNBZ1kzSmxZWFJsWDNOalpXNWxMQW9nSUNBZ1pYWmxiblF5YzJObGJtVmZjR2w0Wld3c0NpQWdJQ0J2Ymw5dVpYaDBYMmx1YzJWeWRBcDlPd3BsZUhCdmNuUWdleUJrWlhObGNtbGhiR2w2WlY5elkyVnVaU0JoY3lCa1pYTmxjbWxoYkdsNlpWOXpZMlZ1WlN3Z2RHaHlaV1ZxYzE5dGIyUjFiR1VnWVhNZ2RHaHlaV1ZxYzE5dGIyUjFiR1VzSUhOMFlYSjBYM0psYm1SbGNteHZiM0FnWVhNZ2MzUmhjblJmY21WdVpHVnliRzl2Y0N3Z1pHVnNaWFJsWDNCc2IzUnpJR0Z6SUdSbGJHVjBaVjl3Ykc5MGN5d2dhVzV6WlhKMFgzQnNiM1FnWVhNZ2FXNXpaWEowWDNCc2IzUXNJR1pwYm1SZmNHeHZkSE1nWVhNZ1ptbHVaRjl3Ykc5MGN5d2daR1ZzWlhSbFgzTmpaVzVsSUdGeklHUmxiR1YwWlY5elkyVnVaU3dnWm1sdVpGOXpZMlZ1WlNCaGN5Qm1hVzVrWDNOalpXNWxMQ0J6WTJWdVpWOWpZV05vWlNCaGN5QnpZMlZ1WlY5allXTm9aU3dnY0d4dmRGOWpZV05vWlNCaGN5QndiRzkwWDJOaFkyaGxMQ0JrWld4bGRHVmZjMk5sYm1WeklHRnpJR1JsYkdWMFpWOXpZMlZ1WlhNc0lHTnlaV0YwWlY5elkyVnVaU0JoY3lCamNtVmhkR1ZmYzJObGJtVXNJR1YyWlc1ME1uTmpaVzVsWDNCcGVHVnNJR0Z6SUdWMlpXNTBNbk5qWlc1bFgzQnBlR1ZzTENCdmJsOXVaWGgwWDJsdWMyVnlkQ0JoY3lCdmJsOXVaWGgwWDJsdWMyVnlkQ0I5T3dwbGVIQnZjblFnZXlCeVpXNWtaWEpmYzJObGJtVWdZWE1nY21WdVpHVnlYM05qWlc1bElIMDdDbVY0Y0c5eWRDQjdJSEJwWTJ0ZmJtRjBhWFpsSUdGeklIQnBZMnRmYm1GMGFYWmxJSDA3Q21WNGNHOXlkQ0I3SUhCcFkydGZZMnh2YzJWemRDQmhjeUJ3YVdOclgyTnNiM05sYzNRZ2ZUc0taWGh3YjNKMElIc2djR2xqYTE5emIzSjBaV1FnWVhNZ2NHbGphMTl6YjNKMFpXUWdmVHNLWlhod2IzSjBJSHNnY0dsamExOXVZWFJwZG1WZmRYVnBaQ0JoY3lCd2FXTnJYMjVoZEdsMlpWOTFkV2xrSUgwN0NtVjRjRzl5ZENCN0lIQnBZMnRmYm1GMGFYWmxYMjFoZEhKcGVDQmhjeUJ3YVdOclgyNWhkR2wyWlY5dFlYUnlhWGdnZlRzS1pYaHdiM0owSUhzZ2NtVm5hWE4wWlhKZmNHOXdkWEFnWVhNZ2NtVm5hWE4wWlhKZmNHOXdkWEFnZlRzS0NnPT1gOwogICAgICAgICAgICByZXR1cm4gaW1wb3J0KEpTU0VSVkVfSU1QT1JUU1snY2M0YzZhYTZhMWYwNmExYjUwMTNiY2EwMTcwMmYzNmExODRjMDQzOS13Z2xtYWtpZS5qcyddKTsKICAgICAgICB9KSgpLnRoZW4oV0dMID0+IHsKICAgIC8vIHdlbGwuLi4uIG5vdCBuaWNlLCBidXQgY2FuJ3QgZGVhbCB3aXRoIHRoZSBgUHJvbWlzZWAgaW4gYWxsIHRoZSBvdGhlciBmdW5jdGlvbnMKICAgIHdpbmRvdy5XR0xNYWtpZSA9IFdHTAogICAgV0dMLmNyZWF0ZV9zY2VuZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjkiXScpLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjEwIl0nKSwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxNjcxOTM2NjcxNzcxMzA3ODM1MCcpLCBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzE2MTU2OTgxODczMTkyODIwNzAxJyksIF9fbG9va3VwX2ludGVycG9sYXRlZCgnNjk3NDU0MTgwMTYxMzIyODEyNicpLCA4MDAsIDYwMCwgMzAuMCwgX19sb29rdXBfaW50ZXJwb2xhdGVkKCc1MDIzNDAzNDQ5MjMxOTkyNDEyJykpCiAgICBfX2xvb2t1cF9pbnRlcnBvbGF0ZWQoJzEyMDI1OTYwNDUzMjY3NzYyMTgnKS5ub3RpZnkodHJ1ZSkKfSkK2UEvaG9tZS9ydW5uZXIvd29yay9NYWtpZS5qbC9NYWtpZS5qbC9XR0xNYWtpZS9zcmMvdGhyZWVfcGxvdC5qbDo1NKhtc2dfdHlwZaEyyAF2a5LHLGqT2SRiNjkxYmQ1Yi01NmIxLTQwMDAtOTM1Ny1mNzdiNDYwOGQ5OTGAo3N1YoKncGF5bG9hZMgBLmaTgbQxNTU1NTc3MTYxMTA0MjA0NDI5M8cVaLQxNzA5OTE5OTg2MDQzNTcwNzgxN9m/KChub2RlKSA9PiB7CiAgICBub2RlWydvbmlucHV0J10gPSAoZXZlbnQpPT4gewogICAgX19sb29rdXBfaW50ZXJwb2xhdGVkKCcxNTU1NTc3MTYxMTA0MjA0NDI5MycpLm5vdGlmeShwYXJzZUludChldmVudC5zcmNFbGVtZW50LnZhbHVlKSkKfQp9KShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1qc2NhbGwtaWQ9IjciXScpKTvZPC9ob21lL3J1bm5lci8uanVsaWEvcGFja2FnZXMvSlNTZXJ2ZS91V0lldi9zcmMvd2lkZ2V0cy5qbDo2Nqhtc2dfdHlwZaEyqG1zZ190eXBloTnILuprkscsapPZJGI2OTFiZDViLTU2YjEtNDAwMC05MzU3LWY3N2I0NjA4ZDk5MYCjc3VigqdwYXlsb2FkyC6iZpOBszgyNDYzNDkwNTk0MzQwMjcxMTCKoTOWx3NrksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXNkU4PHaRfz+iaWS0MTU5MDUyNzMzOTYxMjQ2ODc2MTeobXNnX3R5cGWhMMgCC2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAXhxcNPmy4BT8LY0s/UWIrPTZFODwScS0+oZjtPmR/fT/62Zo+1TpuP8AH6z5y6zw/nFlkP+xnFD+FoI0+MSP+PnTDfT+tccg+AnNUPwUYoz4aw+w+V1dgP3HoOj9mJqk+yzuUPr28ST92kX8/E1z8Poez1D1p2Nk+KF5MPVUKqD7zcm4/YZxZP1mvcT5zpAQ/j5SMPhGwxj4sAt0+7NDJPucUfz+rzCA+m30TP8VWGT/aVPE+EOdJPlf7Uz87ijI/VYKaPnjZbD/Ufpw+Rd4yP874ej+WQuk+N182P/uohz6hv2I/0779PriWAj/oskM/8yTgPq3O9D5qD18/2BE/PyWAND9/52k/akP3PqGZOj8UqEs+xAcpP2oD4T5W8z4+dIobP/3qhT7ZNg8/Ssm6PZvgrD0qpzQ/wlvAPlY6TD9o1sk+eAewPfSX3T1+1SI+XdyFPg7RGz+3sNw89Q/SPcngDD8wFzo+sJQmP0DYfj+jx/E+JLCWPnjwNT9SGjs/APxtPi+2Wz9T5m8/YXH/PqJpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwx6drksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAQEAAAIA/omlktDEwMTI5Nzc0MjcxNjM2OTY2MzY2qG1zZ190eXBloTDHXmuSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkA6JpZLQxMzcwMzQ5MDc3MTM3MTI5MDk5Mqhtc2dfdHlwZaEwx19rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZKEzomlktDEwODAzMzAzMDM2ODcyNDc1ODI3qG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTOiaWS0MTQ0NTU4Njg3Nzc2MTE1NjY0MjOobXNnX3R5cGWhMKE0lsdza5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSqmNvbG9ycmFuZ2XXF1x0vTpQEn0/omlktDE1OTA1MjczMzk2MTI0Njg3NjE3qG1zZ190eXBloTDIAgtrksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKtdW5pZm9ybV9jb2xvcpLXFQoAAAAKAAAAyAGQF87yLz/tg78++SB1PYaFojx0LE8/j3l0P6IFhD6HQbw+5g0xP+1Liz5GsjM9m39WPzRNSj8jzoQ+S8tSP8l99D7Kfs4+YijnPi+NFT+Pj7I+JdsvPnEF4z6IGD0+SLBmP7Q9Jj6QOhI/42KxPWcyhD4uPWs/6syRPlpJNT7XaDY+Gc5jP9pQUT/qfVM/ayscP/a+eT/l+Wg/sXUvPxL/cj2O8z0/Rge2PghKGD/mk4g+ITfsPgzAWT8euXQ+Th1HP6LyID9/63o/lEx8P4S20Dsw9i4/UBJ9P+7O6T7omMc99e95PjeIkT5jwTo/c5wLP4Frdj7mhLI+4zLJPtW9ZT5cuUg/Gb/yPgn3UT8VGmU+FsBBPqHEMj6rR1U/hKYYPmaPnT7e404+pT5GPjYJbT9+voA9H3R6P5DLWD/dARk/Mvd1P5mNGT9hr7Y+x+5FPV1U2j45D2Y/49uNPu74Fz+GFnk9PdslPlYhGT+q2+8+5cwAP+DvJD7Y8Y0+XHS9Osqhdj9ukew+9TFaP9Uucj+iaWS0MTU5MDUyNzMzOTYxMjQ2ODc2MTeobXNnX3R5cGWhMMena5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAIBAAACAP6JpZLQxMDEyOTc3NDI3MTYzNjk2NjM2Nqhtc2dfdHlwZaEwx15rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZASiaWS0MTM3MDM0OTA3NzEzNzEyOTA5OTKobXNnX3R5cGWhMMdfa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWShNKJpZLQxMDgwMzMwMzAzNjg3MjQ3NTgyN6htc2dfdHlwZaEwx19rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZKE0omlktDE0NDU1ODY4Nzc3NjExNTY2NDIzqG1zZ190eXBloTChMZbHc2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xe8vI87XUR0P6JpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwyAILa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBfqMKM9FeYiP3GHlT5o//M8GuiFPQPM6T6Xs8g9BMgfP3PB3TwMbRI/aaAYPxJxbT/CvyE+xNQOP6FvBD8IEEU/CD0RP28dhz7f1TU/5CY0P+yGxz6nB3A/JnGWPqPvXj8qF/g+IAC7PocuNT/ZQK09UvnzPmtPfD3J3E8/gqXpPg3B0D5gQDM/4w7cPq2KaT+/8lo/at/gPsnpPj9iF34+YZoaPvkfED01oLo9UHIcPnQf4z6OI18/g429PncgPT/qqv8+JGBRP50HhT4xHzY/APvwPQwFxj00FjU/DF5uP59gHz/CEBU/JD87PzFEOz+OmmA/jZQrP11EdD9TnAs/+RiRPk3rxTyEjUI/wtEEPl2aBT9ChNM+VpIcPnRXqj6Fih8/cVtMP5ESBT+CVQ0/bnKDPi85FT8vZDk/Ww+yPqCTDz8aViE/i2OGPg20ST7RqNg+Pm4XP6OcVz9r1EM8TSRIP/+awj6KIhw+vCfHPg6gLT7hdxg/YxobP7y8jzvgKhc/7gZoP8nIoT5nu/E9omlktDE1OTA1MjczMzk2MTI0Njg3NjE3qG1zZ190eXBloTDHp2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAACAPwAAgD+iaWS0MTAxMjk3NzQyNzE2MzY5NjYzNjaobXNnX3R5cGWhMMdea5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWQBomlktDEzNzAzNDkwNzcxMzcxMjkwOTkyqG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTGiaWS0MTA4MDMzMDMwMzY4NzI0NzU4MjeobXNnX3R5cGWhMMdfa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWShMaJpZLQxNDQ1NTg2ODc3NzYxMTU2NjQyM6htc2dfdHlwZaEwoTWWx3NrksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXtdjwO0vYfT+iaWS0MTU5MDUyNzMzOTYxMjQ2ODc2MTeobXNnX3R5cGWhMMgCC2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAXzMtkP7H8Zz612PA7UXucPqZ4qj4/+lI/0ikDP6HjVz/j6Ds/mG1wP2Ft3j5C/rE+XqtkP4Jrsj6qNSM/NYcWPrXuID4kZyM/e4uFPno6HD/jmCU/5MbsPYxQBz4Nv6U+Ij0IP+qt8D4UJUQ/DTqmPrzoTz+nSD4/Q09KP6/43j4wvck+hPk0P05tZz/FMlQ/j4nyPgOFCj9g4Js+IOEtP6kH7D4aRmw/lz0OP92g/z5kNVM+F7oYPkvYfT+/AFs/4kZrP+4pUj/hrCY/wg0lP8tMNz8GAMw9hJMJP85Krz7iV/I+SaOWPbP+IT/Md0o/AUNkP4Sj6z7uVUw/iQfYPVmbPj+Nmu8+/v+tPsHKPj846ZY+h9pIPV3tij5tZPM+72cuP0OEwj2MvTo/T+8eP7WyTz9RRi8+H4VnP/9hRz9fc2g9LRwdPzEBaD9DakI+A3QVPoO4dD+X4TM/5BtRPnFMMj/dENs8D4R0P7sYqT5IiP0+hqsMP3GwGD/Skj0+Uzo2P2O1nT7kkm4/TSD/PaJpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwx6drksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAoEAAAIA/omlktDEwMTI5Nzc0MjcxNjM2OTY2MzY2qG1zZ190eXBloTDHXmuSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkBaJpZLQxMzcwMzQ5MDc3MTM3MTI5MDk5Mqhtc2dfdHlwZaEwx19rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZKE1omlktDEwODAzMzAzMDM2ODcyNDc1ODI3qG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTWiaWS0MTQ0NTU4Njg3Nzc2MTE1NjY0MjOobXNnX3R5cGWhMKEylsdza5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSqmNvbG9ycmFuZ2XXF7YvGTx+k34/omlktDE1OTA1MjczMzk2MTI0Njg3NjE3qG1zZ190eXBloTDIAgtrksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKtdW5pZm9ybV9jb2xvcpLXFQoAAAAKAAAAyAGQF4dGFz5fFVk9bcE3Pz0+3D0Gghw/jg9gP5E6AD9+k34/2jDcPhs5LT/rbDo/sIooP+DiIj/3m/s+4CgfPnDGND+KweE8gvRTPsRgaz915Lw+JasDPx2lzj55KV4/w5spPtkOlj6ZYAE/QbE5P3yP9z4G5MI+174GPyixXT80gn4/7ASDPqRreT9UsP0+kHtZP10eNj7sM3w/fuVAPxfbuT5ivFE/1WIwP05FTD9lezQ/56elPm9zEj/39x4/EMe3PrQ3uT62h34/YCAPPyuJCz/Cj0M/QBwEP9GsEj8rrAQ/5dxCP2RB+DwFdis/wpT4Ple/1D6jDS8/leocPyF5Aj+N2nE/+2OOPjXXwD4S8ew+JCEQP5N17D1w1mQ+832ZPr2oXz9fXE8/zb/xPWgxHj+oxns/5DdIPyL66j53HV0/uAXhPfGMVD1wPkA/RU8NP3CIcD4G+ys/ti8ZPMl18z46UMQ+Q2hgP8z+BD+K/LY+0Dc8P4fLwD5Inb8+x/x/PkwzQD91roI+mS3CPtvpCD+iaWS0MTU5MDUyNzMzOTYxMjQ2ODc2MTeobXNnX3R5cGWhMMena5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSpW1vZGVsx0AXAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAABAAACAP6JpZLQxMDEyOTc3NDI3MTYzNjk2NjM2Nqhtc2dfdHlwZaEwx15rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZAKiaWS0MTM3MDM0OTA3NzEzNzEyOTA5OTKobXNnX3R5cGWhMMdfa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWShMqJpZLQxMDgwMzMwMzAzNjg3MjQ3NTgyN6htc2dfdHlwZaEwx19rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZKEyomlktDE0NDU1ODY4Nzc3NjExNTY2NDIzqG1zZ190eXBloTChNpbHc2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xdFt9Q8KLh+P6JpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwyAILa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBfN2iY/zDDrPn7/Qz4rdm4/5wkxP7lrWT/4oys//4VHP0z+mj7Yax8/5o/5PfkDZz9QNHw/+cQ3Pyy5JT/Iw1o/S6Z8P4SYoz55QDg/Uq/rPvg5Nj8k+jY/UDJWP2VG+D4H+cE+TFmNPjnWSD8aLl0/Ls8LP8dMWj/f8dQ+3vqxPlo/KT+Ppyw+jUNMPsGnsD7JgGs/O0GdPscVAD9RXSg+DCkqP/QlaT9vrU0++7A9PxkEgz6WzNw+cWAWP+hSVz8Oh2U+XF58P39uLT5+elY+YjMpP/h0JD/FucI+G80yP8Xd/z78exg/ODkWP4HtJz9gnv8+QAA/Pupk3j6Ng4w9CbteP85iCz9o2u0+MXJQP5OqyD6l2xs+ZFYTP0IYGz854Eg/woE8Pl4jHT8KhEQ/TjxOP0cT/j73RMA+IWsoPwdAWT9J/1U/Zf8UP3MVBT+pNnc/N6yNPii4fj/oe2E/AmyHPZ4z+T3vwBU/AcqqPq5xAj3IBnE+MpbUPkW31Dx4XBc9uqajPjumaT5mZJg+omlktDE1OTA1MjczMzk2MTI0Njg3NjE3qG1zZ190eXBloTDHp2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAADAQAAAgD+iaWS0MTAxMjk3NzQyNzE2MzY5NjYzNjaobXNnX3R5cGWhMMdea5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWQGomlktDEzNzAzNDkwNzcxMzcxMjkwOTkyqG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTaiaWS0MTA4MDMzMDMwMzY4NzI0NzU4MjeobXNnX3R5cGWhMMdfa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWShNqJpZLQxNDQ1NTg2ODc3NzYxMTU2NjQyM6htc2dfdHlwZaEwoTeWx3NrksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXIdwLPIR+dj+iaWS0MTU5MDUyNzMzOTYxMjQ2ODc2MTeobXNnX3R5cGWhMMgCC2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAXHaprPiCPOj6RaB8/rMX6PsCHEj/OK4w+eULoPttGpj5iitk+5/8rPkrPFz6qzxk+0Ss7P2HQWj8KXjA/rr0FP+tPwz605BA/7dkAP8uH8D6Z9gM/VY4MP8FFFD9tYEs/tuULPLKhsj6EfnY/GjcNP2D+ET8n9Fw/MJtiPyW1bT4rql8/BYRUP+JVYz/ayyM/o2fHPhDBij1nPYA9bmBgPqt2Lz+n8nY+xTwjPj07Tz+8mRA+piCFPsd3Jz+fMdI+U9UjP80Eaj8h3As8KBTzPsNAQj0MfKA9T+JAPVJzvDx/GW4/8YZPPtH4MD+G7vk+nc1mPuki6j6NSh4//RAePzBswD6/fN8+bHCHPTIgHD9Fqu8+iFkaP8PPrD5dUGo/yk0yP0N8LD7PxCQ/z5ZpP2rWET+f+hc/K4j0PgzyZz76Tms/rkQrPwD/oj4tQmg9AcksP4/3zz7Dkg8/lrhMP00aOz+1d4Y+y1hnPygjsT5SJ0g+YLNVP3FW9z5yU+0+1iITP5BPDT6/0qs+NfLUPqJpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwx6drksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAA4EAAAIA/omlktDEwMTI5Nzc0MjcxNjM2OTY2MzY2qG1zZ190eXBloTDHXmuSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkB6JpZLQxMzcwMzQ5MDc3MTM3MTI5MDk5Mqhtc2dfdHlwZaEwx19rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZKE3omlktDEwODAzMzAzMDM2ODcyNDc1ODI3qG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTeiaWS0MTQ0NTU4Njg3Nzc2MTE1NjY0MjOobXNnX3R5cGWhMKIxMJbHc2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xfYZfk8LSh8P6JpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwyAILa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBdPmhg/00/zPtsrnD6AEZY9hPExP+y7+z7PzC8/i2hDPz2bsT6EJ4s+ToA4PuiywD1BFL8+19ReP0HO/jyfv5U+kxEAPVKsbj7uXno/l9cEP6I59z31rlA/DPgvP5dsrj5T/kM/LSh8P7nv0z4qXnY/VE3CPQJeqT4Rfss+JYUUPijwwz4H7ZY+TXlpPobzTT9i91M/OyP3Pk0JlT6fAHg/rhtiP/OI2T7Dpkw+0ScXP1jmhz5377A+SNItPtPvOD+g6w4+6AzJPT0olj7k30I/HFnlPgCq5j4XcAY+TW0VPzpI7z6SIHM/6b2uPkWcYD+zEIw9zChTP28ebD6PD1s/Nnw4PmT3PD+jhMk+PBTzPoWC3T5XUzs/2GX5PPhVSj9Alh89GdsUPyvOwz02s04+Kbc+P18mIT/m9W8/7LIcP3bcIj6HSDg/Bg+2PsWo5T6PVF0+Fe1cP4iMgz5+FJM+GJNLPqoAPz42lHY9sE03PhBywz6mK0w/iGY1Pzi/4j7sBwo/DqqqPsCC1j7kFhk/omlktDE1OTA1MjczMzk2MTI0Njg3NjE3qG1zZ190eXBloTDHp2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAgQQAAgD+iaWS0MTAxMjk3NzQyNzE2MzY5NjYzNjaobXNnX3R5cGWhMMdea5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWQKomlktDEzNzAzNDkwNzcxMzcxMjkwOTkyqG1zZ190eXBloTDHYGuSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkojEwomlktDEwODAzMzAzMDM2ODcyNDc1ODI3qG1zZ190eXBloTDHYGuSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkojEwomlktDE0NDU1ODY4Nzc3NjExNTY2NDIzqG1zZ190eXBloTChOZbHc2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkqpjb2xvcnJhbmdl1xfXKJQ8lap7P6JpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwyAILa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWSSrXVuaWZvcm1fY29sb3KS1xUKAAAACgAAAMgBkBcJiUw/OBR1P5N6YT4hnnE/JIBWPg/EvT5QzdM97HU5PiH4iT5CC9w+b5VCP4SXFz8CvtQ9fh4YPyCl7z0Bjkg+u0UHPkYuVz/XKJQ8qgYwPvWklD0GVls/n1FbP5038D79hFM+0VtqP78FDj9IcXU/izVgP1r5kD0McDQ/bnTuPoLlBD/cIVI/7/ZBP9wCgj5EHeI9yfIcP0c3+z50h7c9+DwwP7wzvj4TAJs+hCc+P5+aKD4sMnM/bynsPZp8NT8KL0E93DfVPgZxWD9wbWg/NM++PvLIoj6Xu1s/H3p0PssgKD6jnmA9KHAYPQrD0T7guQM/KPwnP5Wqez9+83U/nTFaP7Kr9D7dL3g/xIByP4V7Xj6kRro+NncJP7ioQT75lGI/gxQ4P2zLyD3+l1c+K+42P1AyHz89M14/eHWHPgAJAT/Pc9Q+oc+RPf8pYj+xhSY9ClEjP+Jjnj1pyBc/+lIlPviymD5THD4/Xc/2PglZpj2WM3s/CzR6Pw4iGj8I/ds+uC1PPmRpBz8Qc3I/omlktDE1OTA1MjczMzk2MTI0Njg3NjE3qG1zZ190eXBloTDHp2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkkqVtb2RlbMdAFwAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAIA/AAAAAAAAAAAAAAAAAAAQQQAAgD+iaWS0MTAxMjk3NzQyNzE2MzY5NjYzNjaobXNnX3R5cGWhMMdea5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWQJomlktDEzNzAzNDkwNzcxMzcxMjkwOTkyqG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTmiaWS0MTA4MDMzMDMwMzY4NzI0NzU4MjeobXNnX3R5cGWhMMdfa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SDp3BheWxvYWShOaJpZLQxNDQ1NTg2ODc3NzYxMTU2NjQyM6htc2dfdHlwZaEwoTiWx3NrksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKqY29sb3JyYW5nZdcXkEAvPBBFfT+iaWS0MTU5MDUyNzMzOTYxMjQ2ODc2MTeobXNnX3R5cGWhMMgCC2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2Fkkq11bmlmb3JtX2NvbG9yktcVCgAAAAoAAADIAZAX/XFHP82hXj8N3nA/sKSSPtHwFT7+BvA+yWG/PQk/Xj7wL3g/t/ZkPzxz9T7TfM8+n+E4P/XCSz9kguw9a1ddP3m4OD/xAh4/D1LgPrY70z1weZ4+wDT/Pa9fLD+aJjY/mIqYPur4wD7qcLo+xUk6Pz0slD6w+xY/yAhyP2I8VD8qZyM+Lyi5Peizez8VGyQ/iL3BPgqPiT5n5gI/UAtVPpA9fT7lbFs/kFp3PzqQnj0duJI+4YIIPQ0edj8+W04/8JVHP81mYz+IRkc/EEV9P2oSQz7f1hU/RF5BP7Eb/T5lGXQ/iv/cPkqZwD5r/1I8NmF0PzkiGj/SFRg/UaTxPqkjAT9GERk+h5pgPyCGfz78ZCU/WBUUP9+wfj1anUE+clRePQBLoz6o32E/lHZAPgADZz6gKCA/NIHzPq5riT30kHs/8TpJPxuNZT5670s/PEMRPkwOAj9mjTE+h+5wPwlStT61N/E+e8GRPZBALzxo55I9JD5NP1w8ej/NfHE+45hAPxm5uT3Eyao+C2kQP6JpZLQxNTkwNTI3MzM5NjEyNDY4NzYxN6htc2dfdHlwZaEwx6drksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZJKlbW9kZWzHQBcAAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAEEAAIA/omlktDEwMTI5Nzc0MjcxNjM2OTY2MzY2qG1zZ190eXBloTDHXmuSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkCKJpZLQxMzcwMzQ5MDc3MTM3MTI5MDk5Mqhtc2dfdHlwZaEwx19rksctapPZJDhmYjM4YjRjLWY5OTItNDVjMi1hODljLTM0MmE1OTE0NDIwZICkcm9vdIOncGF5bG9hZKE4omlktDEwODAzMzAzMDM2ODcyNDc1ODI3qG1zZ190eXBloTDHX2uSxy1qk9kkOGZiMzhiNGMtZjk5Mi00NWMyLWE4OWMtMzQyYTU5MTQ0MjBkgKRyb290g6dwYXlsb2FkoTiiaWS0MTQ0NTU4Njg3Nzc2MTE1NjY0MjOobXNnX3R5cGWhMNoC4UpTU2VydmUuZmV0Y2hfYmluYXJ5KCdkYXRhOmFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbTtiYXNlNjQsa3Njc2FwUFpKR0kyT1RGaVpEVmlMVFUyWWpFdE5EQXdNQzA1TXpVM0xXWTNOMkkwTmpBNFpEazVNWUNqYzNWaWtjY1ZhTFF4TnpBNU9URTVPVGcyTURRek5UY3dOemd4Tnc9PScpLnRoZW4oYmluYXJ5ID0+IHsKICAgIGNvbnN0IHN0YXRlbWFwID0gX19sb29rdXBfaW50ZXJwb2xhdGVkKCc4MjQ2MzQ5MDU5NDM0MDI3MTEwJykKICAgIGNvbnNvbGUubG9nKHN0YXRlbWFwKQogICAgY29uc3Qgb2JzZXJ2YWJsZXMgPSBKU1NlcnZlLmRlY29kZV9iaW5hcnkoYmluYXJ5LCBmYWxzZSk7CiAgICBKU1NlcnZlLm9uYW55KG9ic2VydmFibGVzLCAoc3RhdGVzKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coc3RhdGVzKQogICAgICAgIC8vIG1lc3NhZ2VzIHRvIHNlbmQgZm9yIHRoaXMgc3RhdGUgb2YgdGhhdCBvYnNlcnZhYmxlCiAgICAgICAgY29uc3QgbWVzc2FnZXMgPSBzdGF0ZW1hcFtzdGF0ZXNdCiAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZXMpCiAgICAgICAgLy8gbm90IGFsbCBzdGF0ZXMgdHJpZ2dlciBldmVudHMKICAgICAgICAvLyBzbyBzb21lIHN0YXRlcyB3b24ndCBoYXZlIGFueSBtZXNzYWdlcyByZWNvcmRlZAogICAgICAgIGlmIChtZXNzYWdlcyl7CiAgICAgICAgICAgIG1lc3NhZ2VzLmZvckVhY2goSlNTZXJ2ZS5wcm9jZXNzX21lc3NhZ2UpCiAgICAgICAgfQogICAgfSkKfSkK2TwvaG9tZS9ydW5uZXIvLmp1bGlhL3BhY2thZ2VzL0pTU2VydmUvdVdJZXYvc3JjL2V4cG9ydC5qbDoxMjaobXNnX3R5cGWhMsdGa5LHLWqT2SQ4ZmIzOGI0Yy1mOTkyLTQ1YzItYTg5Yy0zNDJhNTkxNDQyMGSApHJvb3SCp3BheWxvYWSQqG1zZ190eXBloTmobXNnX3R5cGWhOQ==').then(msgs=> JSServe.init_session('b691bd5b-56b1-4000-9357-f77b4608d991', msgs, 'sub'));
" type="module"></script>
  <div id="b691bd5b-56b1-4000-9357-f77b4608d991" data-jscall-id="subsession-application-dom">
    <div data-jscall-id="5">
      <div data-jscall-id="6">z-index: 
        <input step="1" max="10" min="1" data-jscall-id="7" value="1" oninput="" type="range" />
        <span data-jscall-id="8">1</span>
      </div>
      <div data-jscall-id="9">
        <canvas data-jscall-id="10" tabindex="0"></canvas>
      </div>
    </div>
  </div>
  <div>
    <script src="data:application/javascript;base64,// deno-fmt-ignore-file
// deno-lint-ignore-file
// This code was bundled using `deno bundle` and it's not recommended to edit it manually

var ca = "136", Gy = {
    LEFT: 0,
    MIDDLE: 1,
    RIGHT: 2,
    ROTATE: 0,
    DOLLY: 1,
    PAN: 2
}, Vy = {
    ROTATE: 0,
    PAN: 1,
    DOLLY_PAN: 2,
    DOLLY_ROTATE: 3
}, uu = 0, tl = 1, du = 2, Wy = 3, qy = 0, Hc = 1, fu = 2, ir = 3, Ai = 0, it = 1, Ci = 2, kc = 1, Xy = 2, vn = 0, sr = 1, nl = 2, il = 3, rl = 4, pu = 5, _i = 100, mu = 101, gu = 102, sl = 103, ol = 104, xu = 200, yu = 201, vu = 202, _u = 203, Gc = 204, Vc = 205, Mu = 206, bu = 207, wu = 208, Su = 209, Tu = 210, Eu = 0, Au = 1, Cu = 2, ea = 3, Lu = 4, Ru = 5, Pu = 6, Iu = 7, Vs = 0, Du = 1, Fu = 2, _n = 0, Nu = 1, Bu = 2, zu = 3, Uu = 4, Ou = 5, ha = 300, Bi = 301, zi = 302, Ds = 303, Fs = 304, Pr = 306, Ws = 307, Ns = 1e3, vt = 1001, Bs = 1002, rt = 1003, ta = 1004, Jy = 1004, na = 1005, Yy = 1005, tt = 1006, Wc = 1007, Zy = 1007, Ui = 1008, $y = 1008, rn = 1009, Hu = 1010, ku = 1011, cr = 1012, Gu = 1013, Ps = 1014, nn = 1015, kn = 1016, Vu = 1017, Wu = 1018, qu = 1019, Ti = 1020, Xu = 1021, Gn = 1022, ct = 1023, Ju = 1024, Yu = 1025, Vn = 1026, Li = 1027, Zu = 1028, $u = 1029, ju = 1030, Qu = 1031, Ku = 1032, ed = 1033, al = 33776, ll = 33777, cl = 33778, hl = 33779, ul = 35840, dl = 35841, fl = 35842, pl = 35843, td = 36196, ml = 37492, gl = 37496, nd = 37808, id = 37809, rd = 37810, sd = 37811, od = 37812, ad = 37813, ld = 37814, cd = 37815, hd = 37816, ud = 37817, dd = 37818, fd = 37819, pd = 37820, md = 37821, gd = 36492, xd = 37840, yd = 37841, vd = 37842, _d = 37843, Md = 37844, bd = 37845, wd = 37846, Sd = 37847, Td = 37848, Ed = 37849, Ad = 37850, Cd = 37851, Ld = 37852, Rd = 37853, Pd = 2200, Id = 2201, Dd = 2202, zs = 2300, Us = 2301, yo = 2302, Mi = 2400, bi = 2401, Os = 2402, ua = 2500, qc = 2501, Fd = 0, jy = 1, Qy = 2, Nt = 3e3, Oi = 3001, Nd = 3200, Bd = 3201, Hi = 0, zd = 1, Ky = 0, vo = 7680, e0 = 7681, t0 = 7682, n0 = 7683, i0 = 34055, r0 = 34056, s0 = 5386, o0 = 512, a0 = 513, l0 = 514, c0 = 515, h0 = 516, u0 = 517, d0 = 518, Ud = 519, hr = 35044, ur = 35048, f0 = 35040, p0 = 35045, m0 = 35049, g0 = 35041, x0 = 35046, y0 = 35050, v0 = 35042, _0 = "100", xl = "300 es", En = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        let n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        let n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        let i = this._listeners[e];
        if (i !== void 0) {
            let r = i.indexOf(t);
            r !== -1 && i.splice(r, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        let n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            let i = n.slice(0);
            for(let r = 0, o = i.length; r < o; r++)i[r].call(this, e);
            e.target = null;
        }
    }
}, pt = [];
for(let s = 0; s < 256; s++)pt[s] = (s < 16 ? "0" : "") + s.toString(16);
var Vr = 1234567, Wn = Math.PI / 180, dr = 180 / Math.PI;
function Et() {
    let s = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, t = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0;
    return (pt[s & 255] + pt[s >> 8 & 255] + pt[s >> 16 & 255] + pt[s >> 24 & 255] + "-" + pt[e & 255] + pt[e >> 8 & 255] + "-" + pt[e >> 16 & 15 | 64] + pt[e >> 24 & 255] + "-" + pt[t & 63 | 128] + pt[t >> 8 & 255] + "-" + pt[t >> 16 & 255] + pt[t >> 24 & 255] + pt[n & 255] + pt[n >> 8 & 255] + pt[n >> 16 & 255] + pt[n >> 24 & 255]).toUpperCase();
}
function mt(s, e, t) {
    return Math.max(e, Math.min(t, s));
}
function da(s, e) {
    return (s % e + e) % e;
}
function Od(s, e, t, n, i) {
    return n + (s - e) * (i - n) / (t - e);
}
function Hd(s, e, t) {
    return s !== e ? (t - s) / (e - s) : 0;
}
function or(s, e, t) {
    return (1 - t) * s + t * e;
}
function kd(s, e, t, n) {
    return or(s, e, 1 - Math.exp(-t * n));
}
function Gd(s, e = 1) {
    return e - Math.abs(da(s, e * 2) - e);
}
function Vd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * (3 - 2 * s));
}
function Wd(s, e, t) {
    return s <= e ? 0 : s >= t ? 1 : (s = (s - e) / (t - e), s * s * s * (s * (s * 6 - 15) + 10));
}
function qd(s, e) {
    return s + Math.floor(Math.random() * (e - s + 1));
}
function Xd(s, e) {
    return s + Math.random() * (e - s);
}
function Jd(s) {
    return s * (.5 - Math.random());
}
function Yd(s) {
    return s !== void 0 && (Vr = s % 2147483647), Vr = Vr * 16807 % 2147483647, (Vr - 1) / 2147483646;
}
function Zd(s) {
    return s * Wn;
}
function $d(s) {
    return s * dr;
}
function ia(s) {
    return (s & s - 1) === 0 && s !== 0;
}
function Xc(s) {
    return Math.pow(2, Math.ceil(Math.log(s) / Math.LN2));
}
function Jc(s) {
    return Math.pow(2, Math.floor(Math.log(s) / Math.LN2));
}
function jd(s, e, t, n, i) {
    let r = Math.cos, o = Math.sin, a = r(t / 2), l = o(t / 2), c = r((e + n) / 2), h = o((e + n) / 2), u = r((e - n) / 2), d = o((e - n) / 2), f = r((n - e) / 2), m = o((n - e) / 2);
    switch(i){
        case "XYX":
            s.set(a * h, l * u, l * d, a * c);
            break;
        case "YZY":
            s.set(l * d, a * h, l * u, a * c);
            break;
        case "ZXZ":
            s.set(l * u, l * d, a * h, a * c);
            break;
        case "XZX":
            s.set(a * h, l * m, l * f, a * c);
            break;
        case "YXY":
            s.set(l * f, a * h, l * m, a * c);
            break;
        case "ZYZ":
            s.set(l * m, l * f, a * h, a * c);
            break;
        default:
            console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i);
    }
}
var M0 = Object.freeze({
    __proto__: null,
    DEG2RAD: Wn,
    RAD2DEG: dr,
    generateUUID: Et,
    clamp: mt,
    euclideanModulo: da,
    mapLinear: Od,
    inverseLerp: Hd,
    lerp: or,
    damp: kd,
    pingpong: Gd,
    smoothstep: Vd,
    smootherstep: Wd,
    randInt: qd,
    randFloat: Xd,
    randFloatSpread: Jd,
    seededRandom: Yd,
    degToRad: Zd,
    radToDeg: $d,
    isPowerOfTwo: ia,
    ceilPowerOfTwo: Xc,
    floorPowerOfTwo: Jc,
    setQuaternionFromProperEuler: jd
}), X = class {
    constructor(e = 0, t = 0){
        this.x = e, this.y = t;
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return this.x = e, this.y = t, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this;
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6], this.y = i[1] * t + i[4] * n + i[7], this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this;
    }
    rotateAround(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = this.x - e.x, o = this.y - e.y;
        return this.x = r * n - o * i + e.x, this.y = r * i + o * n + e.y, this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
};
X.prototype.isVector2 = !0;
var lt = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c) {
        let h = this.elements;
        return h[0] = e, h[1] = i, h[2] = a, h[3] = t, h[4] = r, h[5] = l, h[6] = n, h[7] = o, h[8] = c, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this;
    }
    setFromMatrix4(e) {
        let t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this;
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[3], l = n[6], c = n[1], h = n[4], u = n[7], d = n[2], f = n[5], m = n[8], x = i[0], v = i[3], g = i[6], p = i[1], _ = i[4], y = i[7], b = i[2], A = i[5], L = i[8];
        return r[0] = o * x + a * p + l * b, r[3] = o * v + a * _ + l * A, r[6] = o * g + a * y + l * L, r[1] = c * x + h * p + u * b, r[4] = c * v + h * _ + u * A, r[7] = c * g + h * y + u * L, r[2] = d * x + f * p + m * b, r[5] = d * v + f * _ + m * A, r[8] = d * g + f * y + m * L, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8];
        return t * o * h - t * a * c - n * r * h + n * a * l + i * r * c - i * o * l;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = h * o - a * c, d = a * l - h * r, f = c * r - o * l, m = t * u + n * d + i * f;
        if (m === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        let x = 1 / m;
        return e[0] = u * x, e[1] = (i * c - h * n) * x, e[2] = (a * n - i * o) * x, e[3] = d * x, e[4] = (h * t - i * l) * x, e[5] = (i * r - a * t) * x, e[6] = f * x, e[7] = (n * l - c * t) * x, e[8] = (o * t - n * r) * x, this;
    }
    transpose() {
        let e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this;
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        let t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this;
    }
    setUvTransform(e, t, n, i, r, o, a) {
        let l = Math.cos(r), c = Math.sin(r);
        return this.set(n * l, n * c, -n * (l * o + c * a) + o + e, -i * c, i * l, -i * (-c * o + l * a) + a + t, 0, 0, 1), this;
    }
    scale(e, t) {
        let n = this.elements;
        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this;
    }
    rotate(e) {
        let t = Math.cos(e), n = Math.sin(e), i = this.elements, r = i[0], o = i[3], a = i[6], l = i[1], c = i[4], h = i[7];
        return i[0] = t * r + n * l, i[3] = t * o + n * c, i[6] = t * a + n * h, i[1] = -n * r + t * l, i[4] = -n * o + t * c, i[7] = -n * a + t * h, this;
    }
    translate(e, t) {
        let n = this.elements;
        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 9; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 9; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e;
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
};
lt.prototype.isMatrix3 = !0;
function Yc(s) {
    if (s.length === 0) return -1 / 0;
    let e = s[0];
    for(let t = 1, n = s.length; t < n; ++t)s[t] > e && (e = s[t]);
    return e;
}
var Qd = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array
};
function wi(s, e) {
    return new Qd[s](e);
}
function qs(s) {
    return document.createElementNS("http://www.w3.org/1999/xhtml", s);
}
var ti, Yn = class {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            ti === void 0 && (ti = qs("canvas")), ti.width = e.width, ti.height = e.height;
            let n = ti.getContext("2d");
            e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = ti;
        }
        return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png");
    }
}, Kd = 0, ot = class extends En {
    constructor(e = ot.DEFAULT_IMAGE, t = ot.DEFAULT_MAPPING, n = vt, i = vt, r = tt, o = Ui, a = ct, l = rn, c = 1, h = Nt){
        super();
        Object.defineProperty(this, "id", {
            value: Kd++
        }), this.uuid = Et(), this.name = "", this.image = e, this.mipmaps = [], this.mapping = t, this.wrapS = n, this.wrapT = i, this.magFilter = r, this.minFilter = o, this.anisotropy = c, this.format = a, this.internalFormat = null, this.type = l, this.offset = new X(0, 0), this.repeat = new X(1, 1), this.center = new X(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new lt, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = h, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = !1;
    }
    updateMatrix() {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        if (!t && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
        let n = {
            metadata: {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [
                this.repeat.x,
                this.repeat.y
            ],
            offset: [
                this.offset.x,
                this.offset.y
            ],
            center: [
                this.center.x,
                this.center.y
            ],
            rotation: this.rotation,
            wrap: [
                this.wrapS,
                this.wrapT
            ],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        if (this.image !== void 0) {
            let i = this.image;
            if (i.uuid === void 0 && (i.uuid = Et()), !t && e.images[i.uuid] === void 0) {
                let r;
                if (Array.isArray(i)) {
                    r = [];
                    for(let o = 0, a = i.length; o < a; o++)i[o].isDataTexture ? r.push(_o(i[o].image)) : r.push(_o(i[o]));
                } else r = _o(i);
                e.images[i.uuid] = {
                    uuid: i.uuid,
                    url: r
                };
            }
            n.image = i.uuid;
        }
        return JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData), t || (e.textures[this.uuid] = n), n;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    transformUv(e) {
        if (this.mapping !== ha) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch(this.wrapS){
            case Ns:
                e.x = e.x - Math.floor(e.x);
                break;
            case vt:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
                break;
        }
        if (e.y < 0 || e.y > 1) switch(this.wrapT){
            case Ns:
                e.y = e.y - Math.floor(e.y);
                break;
            case vt:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case Bs:
                Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
                break;
        }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
ot.DEFAULT_IMAGE = void 0;
ot.DEFAULT_MAPPING = ha;
ot.prototype.isTexture = !0;
function _o(s) {
    return typeof HTMLImageElement < "u" && s instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && s instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && s instanceof ImageBitmap ? Yn.getDataURL(s) : s.data ? {
        data: Array.prototype.slice.call(s.data),
        width: s.width,
        height: s.height,
        type: s.data.constructor.name
    } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
var Ve = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this.x = e, this.y = t, this.z = n, this.w = i;
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return this.x = e, this.y = t, this.z = n, this.w = i, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this.w = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setW(e) {
        return this.w = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this.w += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this;
    }
    multiply(e) {
        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = this.w, o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * r, this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * r, this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * r, this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * r, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        let t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this;
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, r, l = e.elements, c = l[0], h = l[4], u = l[8], d = l[1], f = l[5], m = l[9], x = l[2], v = l[6], g = l[10];
        if (Math.abs(h - d) < .01 && Math.abs(u - x) < .01 && Math.abs(m - v) < .01) {
            if (Math.abs(h + d) < .1 && Math.abs(u + x) < .1 && Math.abs(m + v) < .1 && Math.abs(c + f + g - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            let _ = (c + 1) / 2, y = (f + 1) / 2, b = (g + 1) / 2, A = (h + d) / 4, L = (u + x) / 4, I = (m + v) / 4;
            return _ > y && _ > b ? _ < .01 ? (n = 0, i = .707106781, r = .707106781) : (n = Math.sqrt(_), i = A / n, r = L / n) : y > b ? y < .01 ? (n = .707106781, i = 0, r = .707106781) : (i = Math.sqrt(y), n = A / i, r = I / i) : b < .01 ? (n = .707106781, i = .707106781, r = 0) : (r = Math.sqrt(b), n = L / r, i = I / r), this.set(n, i, r, t), this;
        }
        let p = Math.sqrt((v - m) * (v - m) + (u - x) * (u - x) + (d - h) * (d - h));
        return Math.abs(p) < .001 && (p = 1), this.x = (v - m) / p, this.y = (u - x) / p, this.z = (d - h) / p, this.w = Math.acos((c + f + g - 1) / 2), this;
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
};
Ve.prototype.isVector4 = !0;
var At = class extends En {
    constructor(e, t, n = {}){
        super();
        this.width = e, this.height = t, this.depth = 1, this.scissor = new Ve(0, 0, e, t), this.scissorTest = !1, this.viewport = new Ve(0, 0, e, t), this.texture = new ot(void 0, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = !0, this.texture.image = {
            width: e,
            height: t,
            depth: 1
        }, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : !1, this.texture.internalFormat = n.internalFormat !== void 0 ? n.internalFormat : null, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : tt, this.depthBuffer = n.depthBuffer !== void 0 ? n.depthBuffer : !0, this.stencilBuffer = n.stencilBuffer !== void 0 ? n.stencilBuffer : !1, this.depthTexture = n.depthTexture !== void 0 ? n.depthTexture : null;
    }
    setTexture(e) {
        e.image = {
            width: this.width,
            height: this.height,
            depth: this.depth
        }, this.texture = e;
    }
    setSize(e, t, n = 1) {
        (this.width !== e || this.height !== t || this.depth !== n) && (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = {
            ...this.texture.image
        }, this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
At.prototype.isWebGLRenderTarget = !0;
var Zc = class extends At {
    constructor(e, t, n){
        super(e, t);
        let i = this.texture;
        this.texture = [];
        for(let r = 0; r < n; r++)this.texture[r] = i.clone();
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            this.width = e, this.height = t, this.depth = n;
            for(let i = 0, r = this.texture.length; i < r; i++)this.texture[i].image.width = e, this.texture[i].image.height = t, this.texture[i].image.depth = n;
            this.dispose();
        }
        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this;
    }
    copy(e) {
        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
        for(let t = 0, n = e.texture.length; t < n; t++)this.texture[t] = e.texture[t].clone();
        return this;
    }
};
Zc.prototype.isWebGLMultipleRenderTargets = !0;
var Xs = class extends At {
    constructor(e, t, n = {}){
        super(e, t, n);
        this.samples = 4, this.ignoreDepthForMultisampleCopy = n.ignoreDepth !== void 0 ? n.ignoreDepth : !0, this.useRenderToTexture = n.useRenderToTexture !== void 0 ? n.useRenderToTexture : !1, this.useRenderbuffer = this.useRenderToTexture === !1;
    }
    copy(e) {
        return super.copy.call(this, e), this.samples = e.samples, this.useRenderToTexture = e.useRenderToTexture, this.useRenderbuffer = e.useRenderbuffer, this;
    }
};
Xs.prototype.isWebGLMultisampleRenderTarget = !0;
var gt = class {
    constructor(e = 0, t = 0, n = 0, i = 1){
        this._x = e, this._y = t, this._z = n, this._w = i;
    }
    static slerp(e, t, n, i) {
        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, i);
    }
    static slerpFlat(e, t, n, i, r, o, a) {
        let l = n[i + 0], c = n[i + 1], h = n[i + 2], u = n[i + 3], d = r[o + 0], f = r[o + 1], m = r[o + 2], x = r[o + 3];
        if (a === 0) {
            e[t + 0] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
            return;
        }
        if (a === 1) {
            e[t + 0] = d, e[t + 1] = f, e[t + 2] = m, e[t + 3] = x;
            return;
        }
        if (u !== x || l !== d || c !== f || h !== m) {
            let v = 1 - a, g = l * d + c * f + h * m + u * x, p = g >= 0 ? 1 : -1, _ = 1 - g * g;
            if (_ > Number.EPSILON) {
                let b = Math.sqrt(_), A = Math.atan2(b, g * p);
                v = Math.sin(v * A) / b, a = Math.sin(a * A) / b;
            }
            let y = a * p;
            if (l = l * v + d * y, c = c * v + f * y, h = h * v + m * y, u = u * v + x * y, v === 1 - a) {
                let b1 = 1 / Math.sqrt(l * l + c * c + h * h + u * u);
                l *= b1, c *= b1, h *= b1, u *= b1;
            }
        }
        e[t] = l, e[t + 1] = c, e[t + 2] = h, e[t + 3] = u;
    }
    static multiplyQuaternionsFlat(e, t, n, i, r, o) {
        let a = n[i], l = n[i + 1], c = n[i + 2], h = n[i + 3], u = r[o], d = r[o + 1], f = r[o + 2], m = r[o + 3];
        return e[t] = a * m + h * u + l * f - c * d, e[t + 1] = l * m + h * d + c * u - a * f, e[t + 2] = c * m + h * f + a * d - l * u, e[t + 3] = h * m - a * u - l * d - c * f, e;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        this._w = e, this._onChangeCallback();
    }
    set(e, t, n, i) {
        return this._x = e, this._y = t, this._z = n, this._w = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
    }
    setFromEuler(e, t) {
        if (!(e && e.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        let n = e._x, i = e._y, r = e._z, o = e._order, a = Math.cos, l = Math.sin, c = a(n / 2), h = a(i / 2), u = a(r / 2), d = l(n / 2), f = l(i / 2), m = l(r / 2);
        switch(o){
            case "XYZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "YXZ":
                this._x = d * h * u + c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "ZXY":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "ZYX":
                this._x = d * h * u - c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u + d * f * m;
                break;
            case "YZX":
                this._x = d * h * u + c * f * m, this._y = c * f * u + d * h * m, this._z = c * h * m - d * f * u, this._w = c * h * u - d * f * m;
                break;
            case "XZY":
                this._x = d * h * u - c * f * m, this._y = c * f * u - d * h * m, this._z = c * h * m + d * f * u, this._w = c * h * u + d * f * m;
                break;
            default:
                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + o);
        }
        return t !== !1 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        let n = t / 2, i = Math.sin(n);
        return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(n), this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e) {
        let t = e.elements, n = t[0], i = t[4], r = t[8], o = t[1], a = t[5], l = t[9], c = t[2], h = t[6], u = t[10], d = n + a + u;
        if (d > 0) {
            let f = .5 / Math.sqrt(d + 1);
            this._w = .25 / f, this._x = (h - l) * f, this._y = (r - c) * f, this._z = (o - i) * f;
        } else if (n > a && n > u) {
            let f1 = 2 * Math.sqrt(1 + n - a - u);
            this._w = (h - l) / f1, this._x = .25 * f1, this._y = (i + o) / f1, this._z = (r + c) / f1;
        } else if (a > u) {
            let f2 = 2 * Math.sqrt(1 + a - n - u);
            this._w = (r - c) / f2, this._x = (i + o) / f2, this._y = .25 * f2, this._z = (l + h) / f2;
        } else {
            let f3 = 2 * Math.sqrt(1 + u - n - a);
            this._w = (o - i) / f3, this._x = (r + c) / f3, this._y = (l + h) / f3, this._z = .25 * f3;
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize();
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(mt(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        let n = this.angleTo(e);
        if (n === 0) return this;
        let i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
    }
    dot(e) {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
    }
    lengthSq() {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    length() {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    normalize() {
        let e = this.length();
        return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        let n = e._x, i = e._y, r = e._z, o = e._w, a = t._x, l = t._y, c = t._z, h = t._w;
        return this._x = n * h + o * a + i * c - r * l, this._y = i * h + o * l + r * a - n * c, this._z = r * h + o * c + n * l - i * a, this._w = o * h - n * a - i * l - r * c, this._onChangeCallback(), this;
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        let n = this._x, i = this._y, r = this._z, o = this._w, a = o * e._w + n * e._x + i * e._y + r * e._z;
        if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = i, this._z = r, this;
        let l = 1 - a * a;
        if (l <= Number.EPSILON) {
            let f = 1 - t;
            return this._w = f * o + t * this._w, this._x = f * n + t * this._x, this._y = f * i + t * this._y, this._z = f * r + t * this._z, this.normalize(), this._onChangeCallback(), this;
        }
        let c = Math.sqrt(l), h = Math.atan2(c, a), u = Math.sin((1 - t) * h) / c, d = Math.sin(t * h) / c;
        return this._w = o * u + this._w * d, this._x = n * u + this._x * d, this._y = i * u + this._y * d, this._z = r * u + this._z * d, this._onChangeCallback(), this;
    }
    slerpQuaternions(e, t, n) {
        this.copy(e).slerp(t, n);
    }
    random() {
        let e = Math.random(), t = Math.sqrt(1 - e), n = Math.sqrt(e), i = 2 * Math.PI * Math.random(), r = 2 * Math.PI * Math.random();
        return this.set(t * Math.cos(i), n * Math.sin(r), n * Math.cos(r), t * Math.sin(i));
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
    }
    fromArray(e, t = 0) {
        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e;
    }
    fromBufferAttribute(e, t) {
        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this;
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
gt.prototype.isQuaternion = !0;
var M = class {
    constructor(e = 0, t = 0, n = 0){
        this.x = e, this.y = t, this.z = n;
    }
    set(e, t, n) {
        return n === void 0 && (n = this.z), this.x = e, this.y = t, this.z = n, this;
    }
    setScalar(e) {
        return this.x = e, this.y = e, this.z = e, this;
    }
    setX(e) {
        return this.x = e, this;
    }
    setY(e) {
        return this.y = e, this;
    }
    setZ(e) {
        return this.z = e, this;
    }
    setComponent(e, t) {
        switch(e){
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e);
        }
        return this;
    }
    getComponent(e) {
        switch(e){
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return this.x = e.x, this.y = e.y, this.z = e.z, this;
    }
    add(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this);
    }
    addScalar(e) {
        return this.x += e, this.y += e, this.z += e, this;
    }
    addVectors(e, t) {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this;
    }
    addScaledVector(e, t) {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this;
    }
    sub(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this);
    }
    subScalar(e) {
        return this.x -= e, this.y -= e, this.z -= e, this;
    }
    subVectors(e, t) {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this);
    }
    multiplyScalar(e) {
        return this.x *= e, this.y *= e, this.z *= e, this;
    }
    multiplyVectors(e, t) {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this;
    }
    applyEuler(e) {
        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(yl.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(yl.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6] * i, this.y = r[1] * t + r[4] * n + r[7] * i, this.z = r[2] * t + r[5] * n + r[8] * i, this;
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements, o = 1 / (r[3] * t + r[7] * n + r[11] * i + r[15]);
        return this.x = (r[0] * t + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * t + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * t + r[6] * n + r[10] * i + r[14]) * o, this;
    }
    applyQuaternion(e) {
        let t = this.x, n = this.y, i = this.z, r = e.x, o = e.y, a = e.z, l = e.w, c = l * t + o * i - a * n, h = l * n + a * t - r * i, u = l * i + r * n - o * t, d = -r * t - o * n - a * i;
        return this.x = c * l + d * -r + h * -a - u * -o, this.y = h * l + d * -o + u * -r - c * -a, this.z = u * l + d * -a + c * -o - h * -r, this;
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
    }
    transformDirection(e) {
        let t = this.x, n = this.y, i = this.z, r = e.elements;
        return this.x = r[0] * t + r[4] * n + r[8] * i, this.y = r[1] * t + r[5] * n + r[9] * i, this.z = r[2] * t + r[6] * n + r[10] * i, this.normalize();
    }
    divide(e) {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
    }
    max(e) {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
    }
    clamp(e, t) {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this;
    }
    clampScalar(e, t) {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this;
    }
    clampLength(e, t) {
        let n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)));
    }
    floor() {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
    }
    ceil() {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
    }
    round() {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
    }
    roundToZero() {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
    }
    negate() {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this;
    }
    lerpVectors(e, t, n) {
        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this;
    }
    cross(e, t) {
        return t !== void 0 ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        let n = e.x, i = e.y, r = e.z, o = t.x, a = t.y, l = t.z;
        return this.x = i * l - r * a, this.y = r * o - n * l, this.z = n * a - i * o, this;
    }
    projectOnVector(e) {
        let t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        let n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return Mo.copy(this).projectOnVector(e), this.sub(Mo);
    }
    reflect(e) {
        return this.sub(Mo.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        let t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        let n = this.dot(e) / t;
        return Math.acos(mt(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        let t = this.x - e.x, n = this.y - e.y, i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        let i = Math.sin(t) * e;
        return this.x = i * Math.sin(n), this.y = Math.cos(t) * e, this.z = i * Math.cos(n), this;
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this;
    }
    setFromMatrixPosition(e) {
        let t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this;
    }
    setFromMatrixScale(e) {
        let t = this.setFromMatrixColumn(e, 0).length(), n = this.setFromMatrixColumn(e, 1).length(), i = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = i, this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e;
    }
    fromBufferAttribute(e, t, n) {
        return n !== void 0 && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this;
    }
    random() {
        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
    }
    randomDirection() {
        let e = (Math.random() - .5) * 2, t = Math.random() * Math.PI * 2, n = Math.sqrt(1 - e ** 2);
        return this.x = n * Math.cos(t), this.y = n * Math.sin(t), this.z = e, this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
};
M.prototype.isVector3 = !0;
var Mo = new M, yl = new gt, Lt = class {
    constructor(e = new M(1 / 0, 1 / 0, 1 / 0), t = new M(-1 / 0, -1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.length; l < c; l += 3){
            let h = e[l], u = e[l + 1], d = e[l + 2];
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromBufferAttribute(e) {
        let t = 1 / 0, n = 1 / 0, i = 1 / 0, r = -1 / 0, o = -1 / 0, a = -1 / 0;
        for(let l = 0, c = e.count; l < c; l++){
            let h = e.getX(l), u = e.getY(l), d = e.getZ(l);
            h < t && (t = h), u < n && (n = u), d < i && (i = d), h > r && (r = h), u > o && (o = u), d > a && (a = d);
        }
        return this.min.set(t, n, i), this.max.set(r, o, a), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ji.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e) {
        return this.makeEmpty(), this.expandByObject(e);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e) {
        e.updateWorldMatrix(!1, !1);
        let t = e.geometry;
        t !== void 0 && (t.boundingBox === null && t.computeBoundingBox(), bo.copy(t.boundingBox), bo.applyMatrix4(e.matrixWorld), this.union(bo));
        let n = e.children;
        for(let i = 0, r = n.length; i < r; i++)this.expandByObject(n[i]);
        return this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
    }
    intersectsSphere(e) {
        return this.clampPoint(e.center, Ji), Ji.distanceToSquared(e.center) <= e.radius * e.radius;
    }
    intersectsPlane(e) {
        let t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant;
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(Yi), Wr.subVectors(this.max, Yi), ni.subVectors(e.a, Yi), ii.subVectors(e.b, Yi), ri.subVectors(e.c, Yi), un.subVectors(ii, ni), dn.subVectors(ri, ii), Pn.subVectors(ni, ri);
        let t = [
            0,
            -un.z,
            un.y,
            0,
            -dn.z,
            dn.y,
            0,
            -Pn.z,
            Pn.y,
            un.z,
            0,
            -un.x,
            dn.z,
            0,
            -dn.x,
            Pn.z,
            0,
            -Pn.x,
            -un.y,
            un.x,
            0,
            -dn.y,
            dn.x,
            0,
            -Pn.y,
            Pn.x,
            0
        ];
        return !wo(t, ni, ii, ri, Wr) || (t = [
            1,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ], !wo(t, ni, ii, ri, Wr)) ? !1 : (qr.crossVectors(un, dn), t = [
            qr.x,
            qr.y,
            qr.z
        ], wo(t, ni, ii, ri, Wr));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ji.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    getBoundingSphere(e) {
        return this.getCenter(e.center), e.radius = this.getSize(Ji).length() * .5, e;
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty() ? this : ($t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), $t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), $t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), $t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), $t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), $t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), $t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), $t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints($t), this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
Lt.prototype.isBox3 = !0;
var $t = [
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M,
    new M
], Ji = new M, bo = new Lt, ni = new M, ii = new M, ri = new M, un = new M, dn = new M, Pn = new M, Yi = new M, Wr = new M, qr = new M, In = new M;
function wo(s, e, t, n, i) {
    for(let r = 0, o = s.length - 3; r <= o; r += 3){
        In.fromArray(s, r);
        let a = i.x * Math.abs(In.x) + i.y * Math.abs(In.y) + i.z * Math.abs(In.z), l = e.dot(In), c = t.dot(In), h = n.dot(In);
        if (Math.max(-Math.max(l, c, h), Math.min(l, c, h)) > a) return !1;
    }
    return !0;
}
var ef = new Lt, vl = new M, Xr = new M, So = new M, An = class {
    constructor(e = new M, t = -1){
        this.center = e, this.radius = t;
    }
    set(e, t) {
        return this.center.copy(e), this.radius = t, this;
    }
    setFromPoints(e, t) {
        let n = this.center;
        t !== void 0 ? n.copy(t) : ef.setFromPoints(e).getCenter(n);
        let i = 0;
        for(let r = 0, o = e.length; r < o; r++)i = Math.max(i, n.distanceToSquared(e[r]));
        return this.radius = Math.sqrt(i), this;
    }
    copy(e) {
        return this.center.copy(e.center), this.radius = e.radius, this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), this.radius = -1, this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        let t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        let n = this.center.distanceToSquared(e);
        return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t;
    }
    getBoundingBox(e) {
        return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
    }
    applyMatrix4(e) {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        So.subVectors(e, this.center);
        let t = So.lengthSq();
        if (t > this.radius * this.radius) {
            let n = Math.sqrt(t), i = (n - this.radius) * .5;
            this.center.add(So.multiplyScalar(i / n)), this.radius += i;
        }
        return this;
    }
    union(e) {
        return this.center.equals(e.center) === !0 ? Xr.set(0, 0, 1).multiplyScalar(e.radius) : Xr.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(vl.copy(e.center).add(Xr)), this.expandByPoint(vl.copy(e.center).sub(Xr)), this;
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, jt = new M, To = new M, Jr = new M, fn = new M, Eo = new M, Yr = new M, Ao = new M, Cn = class {
    constructor(e = new M, t = new M(0, 0, -1)){
        this.origin = e, this.direction = t;
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
    }
    at(e, t) {
        return t.copy(this.direction).multiplyScalar(e).add(this.origin);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, jt)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        let n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        let t = jt.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (jt.copy(this.direction).multiplyScalar(t).add(this.origin), jt.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        To.copy(e).add(t).multiplyScalar(.5), Jr.copy(t).sub(e).normalize(), fn.copy(this.origin).sub(To);
        let r = e.distanceTo(t) * .5, o = -this.direction.dot(Jr), a = fn.dot(this.direction), l = -fn.dot(Jr), c = fn.lengthSq(), h = Math.abs(1 - o * o), u, d, f, m;
        if (h > 0) if (u = o * l - a, d = o * a - l, m = r * h, u >= 0) if (d >= -m) if (d <= m) {
            let x = 1 / h;
            u *= x, d *= x, f = u * (u + o * d + 2 * a) + d * (o * u + d + 2 * l) + c;
        } else d = r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d = -r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        else d <= -m ? (u = Math.max(0, -(-o * r + a)), d = u > 0 ? -r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c) : d <= m ? (u = 0, d = Math.min(Math.max(-r, -l), r), f = d * (d + 2 * l) + c) : (u = Math.max(0, -(o * r + a)), d = u > 0 ? r : Math.min(Math.max(-r, -l), r), f = -u * u + d * (d + 2 * l) + c);
        else d = o > 0 ? -r : r, u = Math.max(0, -(o * d + a)), f = -u * u + d * (d + 2 * l) + c;
        return n && n.copy(this.direction).multiplyScalar(u).add(this.origin), i && i.copy(Jr).multiplyScalar(d).add(To), f;
    }
    intersectSphere(e, t) {
        jt.subVectors(e.center, this.origin);
        let n = jt.dot(this.direction), i = jt.dot(jt) - n * n, r = e.radius * e.radius;
        if (i > r) return null;
        let o = Math.sqrt(r - i), a = n - o, l = n + o;
        return a < 0 && l < 0 ? null : a < 0 ? this.at(l, t) : this.at(a, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        let t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        let n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        let n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        let t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, r, o, a, l, c = 1 / this.direction.x, h = 1 / this.direction.y, u = 1 / this.direction.z, d = this.origin;
        return c >= 0 ? (n = (e.min.x - d.x) * c, i = (e.max.x - d.x) * c) : (n = (e.max.x - d.x) * c, i = (e.min.x - d.x) * c), h >= 0 ? (r = (e.min.y - d.y) * h, o = (e.max.y - d.y) * h) : (r = (e.max.y - d.y) * h, o = (e.min.y - d.y) * h), n > o || r > i || ((r > n || n !== n) && (n = r), (o < i || i !== i) && (i = o), u >= 0 ? (a = (e.min.z - d.z) * u, l = (e.max.z - d.z) * u) : (a = (e.max.z - d.z) * u, l = (e.min.z - d.z) * u), n > l || a > i) || ((a > n || n !== n) && (n = a), (l < i || i !== i) && (i = l), i < 0) ? null : this.at(n >= 0 ? n : i, t);
    }
    intersectsBox(e) {
        return this.intersectBox(e, jt) !== null;
    }
    intersectTriangle(e, t, n, i, r) {
        Eo.subVectors(t, e), Yr.subVectors(n, e), Ao.crossVectors(Eo, Yr);
        let o = this.direction.dot(Ao), a;
        if (o > 0) {
            if (i) return null;
            a = 1;
        } else if (o < 0) a = -1, o = -o;
        else return null;
        fn.subVectors(this.origin, e);
        let l = a * this.direction.dot(Yr.crossVectors(fn, Yr));
        if (l < 0) return null;
        let c = a * this.direction.dot(Eo.cross(fn));
        if (c < 0 || l + c > o) return null;
        let h = -a * fn.dot(Ao);
        return h < 0 ? null : this.at(h / o, r);
    }
    applyMatrix4(e) {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
    }
    equals(e) {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, pe = class {
    constructor(){
        this.elements = [
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            1
        ], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.");
    }
    set(e, t, n, i, r, o, a, l, c, h, u, d, f, m, x, v) {
        let g = this.elements;
        return g[0] = e, g[4] = t, g[8] = n, g[12] = i, g[1] = r, g[5] = o, g[9] = a, g[13] = l, g[2] = c, g[6] = h, g[10] = u, g[14] = d, g[3] = f, g[7] = m, g[11] = x, g[15] = v, this;
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new pe().fromArray(this.elements);
    }
    copy(e) {
        let t = this.elements, n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this;
    }
    copyPosition(e) {
        let t = this.elements, n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this;
    }
    setFromMatrix3(e) {
        let t = e.elements;
        return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this;
    }
    extractBasis(e, t, n) {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this;
    }
    makeBasis(e, t, n) {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this;
    }
    extractRotation(e) {
        let t = this.elements, n = e.elements, i = 1 / si.setFromMatrixColumn(e, 0).length(), r = 1 / si.setFromMatrixColumn(e, 1).length(), o = 1 / si.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * i, t[1] = n[1] * i, t[2] = n[2] * i, t[3] = 0, t[4] = n[4] * r, t[5] = n[5] * r, t[6] = n[6] * r, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromEuler(e) {
        e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        let t = this.elements, n = e.x, i = e.y, r = e.z, o = Math.cos(n), a = Math.sin(n), l = Math.cos(i), c = Math.sin(i), h = Math.cos(r), u = Math.sin(r);
        if (e.order === "XYZ") {
            let d = o * h, f = o * u, m = a * h, x = a * u;
            t[0] = l * h, t[4] = -l * u, t[8] = c, t[1] = f + m * c, t[5] = d - x * c, t[9] = -a * l, t[2] = x - d * c, t[6] = m + f * c, t[10] = o * l;
        } else if (e.order === "YXZ") {
            let d1 = l * h, f1 = l * u, m1 = c * h, x1 = c * u;
            t[0] = d1 + x1 * a, t[4] = m1 * a - f1, t[8] = o * c, t[1] = o * u, t[5] = o * h, t[9] = -a, t[2] = f1 * a - m1, t[6] = x1 + d1 * a, t[10] = o * l;
        } else if (e.order === "ZXY") {
            let d2 = l * h, f2 = l * u, m2 = c * h, x2 = c * u;
            t[0] = d2 - x2 * a, t[4] = -o * u, t[8] = m2 + f2 * a, t[1] = f2 + m2 * a, t[5] = o * h, t[9] = x2 - d2 * a, t[2] = -o * c, t[6] = a, t[10] = o * l;
        } else if (e.order === "ZYX") {
            let d3 = o * h, f3 = o * u, m3 = a * h, x3 = a * u;
            t[0] = l * h, t[4] = m3 * c - f3, t[8] = d3 * c + x3, t[1] = l * u, t[5] = x3 * c + d3, t[9] = f3 * c - m3, t[2] = -c, t[6] = a * l, t[10] = o * l;
        } else if (e.order === "YZX") {
            let d4 = o * l, f4 = o * c, m4 = a * l, x4 = a * c;
            t[0] = l * h, t[4] = x4 - d4 * u, t[8] = m4 * u + f4, t[1] = u, t[5] = o * h, t[9] = -a * h, t[2] = -c * h, t[6] = f4 * u + m4, t[10] = d4 - x4 * u;
        } else if (e.order === "XZY") {
            let d5 = o * l, f5 = o * c, m5 = a * l, x5 = a * c;
            t[0] = l * h, t[4] = -u, t[8] = c * h, t[1] = d5 * u + x5, t[5] = o * h, t[9] = f5 * u - m5, t[2] = m5 * u - f5, t[6] = a * h, t[10] = x5 * u + d5;
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this;
    }
    makeRotationFromQuaternion(e) {
        return this.compose(tf, e, nf);
    }
    lookAt(e, t, n) {
        let i = this.elements;
        return St.subVectors(e, t), St.lengthSq() === 0 && (St.z = 1), St.normalize(), pn.crossVectors(n, St), pn.lengthSq() === 0 && (Math.abs(n.z) === 1 ? St.x += 1e-4 : St.z += 1e-4, St.normalize(), pn.crossVectors(n, St)), pn.normalize(), Zr.crossVectors(St, pn), i[0] = pn.x, i[4] = Zr.x, i[8] = St.x, i[1] = pn.y, i[5] = Zr.y, i[9] = St.y, i[2] = pn.z, i[6] = Zr.z, i[10] = St.z, this;
    }
    multiply(e, t) {
        return t !== void 0 ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        let n = e.elements, i = t.elements, r = this.elements, o = n[0], a = n[4], l = n[8], c = n[12], h = n[1], u = n[5], d = n[9], f = n[13], m = n[2], x = n[6], v = n[10], g = n[14], p = n[3], _ = n[7], y = n[11], b = n[15], A = i[0], L = i[4], I = i[8], k = i[12], B = i[1], P = i[5], w = i[9], E = i[13], D = i[2], U = i[6], F = i[10], O = i[14], ne = i[3], ce = i[7], V = i[11], W = i[15];
        return r[0] = o * A + a * B + l * D + c * ne, r[4] = o * L + a * P + l * U + c * ce, r[8] = o * I + a * w + l * F + c * V, r[12] = o * k + a * E + l * O + c * W, r[1] = h * A + u * B + d * D + f * ne, r[5] = h * L + u * P + d * U + f * ce, r[9] = h * I + u * w + d * F + f * V, r[13] = h * k + u * E + d * O + f * W, r[2] = m * A + x * B + v * D + g * ne, r[6] = m * L + x * P + v * U + g * ce, r[10] = m * I + x * w + v * F + g * V, r[14] = m * k + x * E + v * O + g * W, r[3] = p * A + _ * B + y * D + b * ne, r[7] = p * L + _ * P + y * U + b * ce, r[11] = p * I + _ * w + y * F + b * V, r[15] = p * k + _ * E + y * O + b * W, this;
    }
    multiplyScalar(e) {
        let t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this;
    }
    determinant() {
        let e = this.elements, t = e[0], n = e[4], i = e[8], r = e[12], o = e[1], a = e[5], l = e[9], c = e[13], h = e[2], u = e[6], d = e[10], f = e[14], m = e[3], x = e[7], v = e[11], g = e[15];
        return m * (+r * l * u - i * c * u - r * a * d + n * c * d + i * a * f - n * l * f) + x * (+t * l * f - t * c * d + r * o * d - i * o * f + i * c * h - r * l * h) + v * (+t * c * u - t * a * f - r * o * u + n * o * f + r * a * h - n * c * h) + g * (-i * a * h - t * l * u + t * a * d + i * o * u - n * o * d + n * l * h);
    }
    transpose() {
        let e = this.elements, t;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this;
    }
    setPosition(e, t, n) {
        let i = this.elements;
        return e.isVector3 ? (i[12] = e.x, i[13] = e.y, i[14] = e.z) : (i[12] = e, i[13] = t, i[14] = n), this;
    }
    invert() {
        let e = this.elements, t = e[0], n = e[1], i = e[2], r = e[3], o = e[4], a = e[5], l = e[6], c = e[7], h = e[8], u = e[9], d = e[10], f = e[11], m = e[12], x = e[13], v = e[14], g = e[15], p = u * v * c - x * d * c + x * l * f - a * v * f - u * l * g + a * d * g, _ = m * d * c - h * v * c - m * l * f + o * v * f + h * l * g - o * d * g, y = h * x * c - m * u * c + m * a * f - o * x * f - h * a * g + o * u * g, b = m * u * l - h * x * l - m * a * d + o * x * d + h * a * v - o * u * v, A = t * p + n * _ + i * y + r * b;
        if (A === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        let L = 1 / A;
        return e[0] = p * L, e[1] = (x * d * r - u * v * r - x * i * f + n * v * f + u * i * g - n * d * g) * L, e[2] = (a * v * r - x * l * r + x * i * c - n * v * c - a * i * g + n * l * g) * L, e[3] = (u * l * r - a * d * r - u * i * c + n * d * c + a * i * f - n * l * f) * L, e[4] = _ * L, e[5] = (h * v * r - m * d * r + m * i * f - t * v * f - h * i * g + t * d * g) * L, e[6] = (m * l * r - o * v * r - m * i * c + t * v * c + o * i * g - t * l * g) * L, e[7] = (o * d * r - h * l * r + h * i * c - t * d * c - o * i * f + t * l * f) * L, e[8] = y * L, e[9] = (m * u * r - h * x * r - m * n * f + t * x * f + h * n * g - t * u * g) * L, e[10] = (o * x * r - m * a * r + m * n * c - t * x * c - o * n * g + t * a * g) * L, e[11] = (h * a * r - o * u * r - h * n * c + t * u * c + o * n * f - t * a * f) * L, e[12] = b * L, e[13] = (h * x * i - m * u * i + m * n * d - t * x * d - h * n * v + t * u * v) * L, e[14] = (m * a * i - o * x * i - m * n * l + t * x * l + o * n * v - t * a * v) * L, e[15] = (o * u * i - h * a * i + h * n * l - t * u * l - o * n * d + t * a * d) * L, this;
    }
    scale(e) {
        let t = this.elements, n = e.x, i = e.y, r = e.z;
        return t[0] *= n, t[4] *= i, t[8] *= r, t[1] *= n, t[5] *= i, t[9] *= r, t[2] *= n, t[6] *= i, t[10] *= r, t[3] *= n, t[7] *= i, t[11] *= r, this;
    }
    getMaxScaleOnAxis() {
        let e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this;
    }
    makeRotationX(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        let t = Math.cos(e), n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        let n = Math.cos(t), i = Math.sin(t), r = 1 - n, o = e.x, a = e.y, l = e.z, c = r * o, h = r * a;
        return this.set(c * o + n, c * a - i * l, c * l + i * a, 0, c * a + i * l, h * a + n, h * l - i * o, 0, c * l - i * a, h * l + i * o, r * l * l + n, 0, 0, 0, 0, 1), this;
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, r, o) {
        return this.set(1, n, r, 0, e, 1, o, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        let i = this.elements, r = t._x, o = t._y, a = t._z, l = t._w, c = r + r, h = o + o, u = a + a, d = r * c, f = r * h, m = r * u, x = o * h, v = o * u, g = a * u, p = l * c, _ = l * h, y = l * u, b = n.x, A = n.y, L = n.z;
        return i[0] = (1 - (x + g)) * b, i[1] = (f + y) * b, i[2] = (m - _) * b, i[3] = 0, i[4] = (f - y) * A, i[5] = (1 - (d + g)) * A, i[6] = (v + p) * A, i[7] = 0, i[8] = (m + _) * L, i[9] = (v - p) * L, i[10] = (1 - (d + x)) * L, i[11] = 0, i[12] = e.x, i[13] = e.y, i[14] = e.z, i[15] = 1, this;
    }
    decompose(e, t, n) {
        let i = this.elements, r = si.set(i[0], i[1], i[2]).length(), o = si.set(i[4], i[5], i[6]).length(), a = si.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (r = -r), e.x = i[12], e.y = i[13], e.z = i[14], It.copy(this);
        let c = 1 / r, h = 1 / o, u = 1 / a;
        return It.elements[0] *= c, It.elements[1] *= c, It.elements[2] *= c, It.elements[4] *= h, It.elements[5] *= h, It.elements[6] *= h, It.elements[8] *= u, It.elements[9] *= u, It.elements[10] *= u, t.setFromRotationMatrix(It), n.x = r, n.y = o, n.z = a, this;
    }
    makePerspective(e, t, n, i, r, o) {
        o === void 0 && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        let a = this.elements, l = 2 * r / (t - e), c = 2 * r / (n - i), h = (t + e) / (t - e), u = (n + i) / (n - i), d = -(o + r) / (o - r), f = -2 * o * r / (o - r);
        return a[0] = l, a[4] = 0, a[8] = h, a[12] = 0, a[1] = 0, a[5] = c, a[9] = u, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = d, a[14] = f, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this;
    }
    makeOrthographic(e, t, n, i, r, o) {
        let a = this.elements, l = 1 / (t - e), c = 1 / (n - i), h = 1 / (o - r), u = (t + e) * l, d = (n + i) * c, f = (o + r) * h;
        return a[0] = 2 * l, a[4] = 0, a[8] = 0, a[12] = -u, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -d, a[2] = 0, a[6] = 0, a[10] = -2 * h, a[14] = -f, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this;
    }
    equals(e) {
        let t = this.elements, n = e.elements;
        for(let i = 0; i < 16; i++)if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for(let n = 0; n < 16; n++)this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e;
    }
};
pe.prototype.isMatrix4 = !0;
var si = new M, It = new pe, tf = new M(0, 0, 0), nf = new M(1, 1, 1), pn = new M, Zr = new M, St = new M, _l = new pe, Ml = new gt, Zn = class {
    constructor(e = 0, t = 0, n = 0, i = Zn.DefaultOrder){
        this._x = e, this._y = t, this._z = n, this._order = i;
    }
    get x() {
        return this._x;
    }
    set x(e) {
        this._x = e, this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        this._y = e, this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        this._z = e, this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        this._order = e, this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return this._x = e, this._y = t, this._z = n, this._order = i, this._onChangeCallback(), this;
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        let i = e.elements, r = i[0], o = i[4], a = i[8], l = i[1], c = i[5], h = i[9], u = i[2], d = i[6], f = i[10];
        switch(t){
            case "XYZ":
                this._y = Math.asin(mt(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(-h, f), this._z = Math.atan2(-o, r)) : (this._x = Math.atan2(d, c), this._z = 0);
                break;
            case "YXZ":
                this._x = Math.asin(-mt(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(a, f), this._z = Math.atan2(l, c)) : (this._y = Math.atan2(-u, r), this._z = 0);
                break;
            case "ZXY":
                this._x = Math.asin(mt(d, -1, 1)), Math.abs(d) < .9999999 ? (this._y = Math.atan2(-u, f), this._z = Math.atan2(-o, c)) : (this._y = 0, this._z = Math.atan2(l, r));
                break;
            case "ZYX":
                this._y = Math.asin(-mt(u, -1, 1)), Math.abs(u) < .9999999 ? (this._x = Math.atan2(d, f), this._z = Math.atan2(l, r)) : (this._x = 0, this._z = Math.atan2(-o, c));
                break;
            case "YZX":
                this._z = Math.asin(mt(l, -1, 1)), Math.abs(l) < .9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-u, r)) : (this._x = 0, this._y = Math.atan2(a, f));
                break;
            case "XZY":
                this._z = Math.asin(-mt(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(d, c), this._y = Math.atan2(a, r)) : (this._x = Math.atan2(-h, f), this._y = 0);
                break;
            default:
                console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t);
        }
        return this._order = t, n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return _l.makeRotationFromQuaternion(e), this.setFromRotationMatrix(_l, t, n);
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return Ml.setFromEuler(this), this.setFromQuaternion(Ml, e);
    }
    equals(e) {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
    }
    fromArray(e) {
        return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e;
    }
    toVector3(e) {
        return e ? e.set(this._x, this._y, this._z) : new M(this._x, this._y, this._z);
    }
    _onChange(e) {
        return this._onChangeCallback = e, this;
    }
    _onChangeCallback() {}
};
Zn.prototype.isEuler = !0;
Zn.DefaultOrder = "XYZ";
Zn.RotationOrders = [
    "XYZ",
    "YZX",
    "ZXY",
    "XZY",
    "YXZ",
    "ZYX"
];
var Js = class {
    constructor(){
        this.mask = 1;
    }
    set(e) {
        this.mask = (1 << e | 0) >>> 0;
    }
    enable(e) {
        this.mask |= 1 << e | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= 1 << e | 0;
    }
    disable(e) {
        this.mask &= ~(1 << e | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & (1 << e | 0)) !== 0;
    }
}, rf = 0, bl = new M, oi = new gt, Qt = new pe, $r = new M, Zi = new M, sf = new M, of = new gt, wl = new M(1, 0, 0), Sl = new M(0, 1, 0), Tl = new M(0, 0, 1), af = {
    type: "added"
}, El = {
    type: "removed"
}, Ne = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: rf++
        }), this.uuid = Et(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ne.DefaultUp.clone();
        let e = new M, t = new Zn, n = new gt, i = new M(1, 1, 1);
        function r() {
            n.setFromEuler(t, !1);
        }
        function o() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(r), n._onChange(o), Object.defineProperties(this, {
            position: {
                configurable: !0,
                enumerable: !0,
                value: e
            },
            rotation: {
                configurable: !0,
                enumerable: !0,
                value: t
            },
            quaternion: {
                configurable: !0,
                enumerable: !0,
                value: n
            },
            scale: {
                configurable: !0,
                enumerable: !0,
                value: i
            },
            modelViewMatrix: {
                value: new pe
            },
            normalMatrix: {
                value: new lt
            }
        }), this.matrix = new pe, this.matrixWorld = new pe, this.matrixAutoUpdate = Ne.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Js, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.animations = [], this.userData = {};
    }
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.multiply(oi), this;
    }
    rotateOnWorldAxis(e, t) {
        return oi.setFromAxisAngle(e, t), this.quaternion.premultiply(oi), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(wl, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(Sl, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis(Tl, e);
    }
    translateOnAxis(e, t) {
        return bl.copy(e).applyQuaternion(this.quaternion), this.position.add(bl.multiplyScalar(t)), this;
    }
    translateX(e) {
        return this.translateOnAxis(wl, e);
    }
    translateY(e) {
        return this.translateOnAxis(Sl, e);
    }
    translateZ(e) {
        return this.translateOnAxis(Tl, e);
    }
    localToWorld(e) {
        return e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return e.applyMatrix4(Qt.copy(this.matrixWorld).invert());
    }
    lookAt(e, t, n) {
        e.isVector3 ? $r.copy(e) : $r.set(e, t, n);
        let i = this.parent;
        this.updateWorldMatrix(!0, !1), Zi.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Qt.lookAt(Zi, $r, this.up) : Qt.lookAt($r, Zi, this.up), this.quaternion.setFromRotationMatrix(Qt), i && (Qt.extractRotation(i.matrixWorld), oi.setFromRotationMatrix(Qt), this.quaternion.premultiply(oi.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for(let t = 0; t < arguments.length; t++)this.add(arguments[t]);
            return this;
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(af)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for(let n = 0; n < arguments.length; n++)this.remove(arguments[n]);
            return this;
        }
        let t = this.children.indexOf(e);
        return t !== -1 && (e.parent = null, this.children.splice(t, 1), e.dispatchEvent(El)), this;
    }
    removeFromParent() {
        let e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        for(let e = 0; e < this.children.length; e++){
            let t = this.children[e];
            t.parent = null, t.dispatchEvent(El);
        }
        return this.children.length = 0, this;
    }
    attach(e) {
        return this.updateWorldMatrix(!0, !1), Qt.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(!0, !1), Qt.multiply(e.parent.matrixWorld)), e.applyMatrix4(Qt), this.add(e), e.updateWorldMatrix(!1, !0), this;
    }
    getObjectById(e) {
        return this.getObjectByProperty("id", e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty("name", e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for(let n = 0, i = this.children.length; n < i; n++){
            let o = this.children[n].getObjectByProperty(e, t);
            if (o !== void 0) return o;
        }
    }
    getWorldPosition(e) {
        return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld);
    }
    getWorldQuaternion(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, e, sf), e;
    }
    getWorldScale(e) {
        return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Zi, of, e), e;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        let t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0;
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        let t = this.children;
        for(let n = 0, i = t.length; n < i; n++)t[n].updateMatrixWorld(e);
    }
    updateWorldMatrix(e, t) {
        let n = this.parent;
        if (e === !0 && n !== null && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), t === !0) {
            let i = this.children;
            for(let r = 0, o = i.length; r < o; r++)i[r].updateWorldMatrix(!1, !0);
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string", n = {};
        t && (e = {
            geometries: {},
            materials: {},
            textures: {},
            images: {},
            shapes: {},
            skeletons: {},
            animations: {}
        }, n.metadata = {
            version: 4.5,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        let i = {};
        i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.castShadow === !0 && (i.castShadow = !0), this.receiveShadow === !0 && (i.receiveShadow = !0), this.visible === !1 && (i.visible = !1), this.frustumCulled === !1 && (i.frustumCulled = !1), this.renderOrder !== 0 && (i.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData), i.layers = this.layers.mask, i.matrix = this.matrix.toArray(), this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1), this.isInstancedMesh && (i.type = "InstancedMesh", i.count = this.count, i.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (i.instanceColor = this.instanceColor.toJSON()));
        function r(a, l) {
            return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
        }
        if (this.isScene) this.background && (this.background.isColor ? i.background = this.background.toJSON() : this.background.isTexture && (i.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = r(e.geometries, this.geometry);
            let a = this.geometry.parameters;
            if (a !== void 0 && a.shapes !== void 0) {
                let l = a.shapes;
                if (Array.isArray(l)) for(let c = 0, h = l.length; c < h; c++){
                    let u = l[c];
                    r(e.shapes, u);
                }
                else r(e.shapes, l);
            }
        }
        if (this.isSkinnedMesh && (i.bindMode = this.bindMode, i.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (r(e.skeletons, this.skeleton), i.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
            let a1 = [];
            for(let l1 = 0, c1 = this.material.length; l1 < c1; l1++)a1.push(r(e.materials, this.material[l1]));
            i.material = a1;
        } else i.material = r(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for(let a2 = 0; a2 < this.children.length; a2++)i.children.push(this.children[a2].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for(let a3 = 0; a3 < this.animations.length; a3++){
                let l2 = this.animations[a3];
                i.animations.push(r(e.animations, l2));
            }
        }
        if (t) {
            let a4 = o(e.geometries), l3 = o(e.materials), c2 = o(e.textures), h1 = o(e.images), u1 = o(e.shapes), d = o(e.skeletons), f = o(e.animations);
            a4.length > 0 && (n.geometries = a4), l3.length > 0 && (n.materials = l3), c2.length > 0 && (n.textures = c2), h1.length > 0 && (n.images = h1), u1.length > 0 && (n.shapes = u1), d.length > 0 && (n.skeletons = d), f.length > 0 && (n.animations = f);
        }
        return n.object = i, n;
        function o(a) {
            let l = [];
            for(let c in a){
                let h = a[c];
                delete h.metadata, l.push(h);
            }
            return l;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), t === !0) for(let n = 0; n < e.children.length; n++){
            let i = e.children[n];
            this.add(i.clone());
        }
        return this;
    }
};
Ne.DefaultUp = new M(0, 1, 0);
Ne.DefaultMatrixAutoUpdate = !0;
Ne.prototype.isObject3D = !0;
var Dt = new M, Kt = new M, Co = new M, en = new M, ai = new M, li = new M, Al = new M, Lo = new M, Ro = new M, Po = new M, nt = class {
    constructor(e = new M, t = new M, n = new M){
        this.a = e, this.b = t, this.c = n;
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Dt.subVectors(e, t), i.cross(Dt);
        let r = i.lengthSq();
        return r > 0 ? i.multiplyScalar(1 / Math.sqrt(r)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, r) {
        Dt.subVectors(i, t), Kt.subVectors(n, t), Co.subVectors(e, t);
        let o = Dt.dot(Dt), a = Dt.dot(Kt), l = Dt.dot(Co), c = Kt.dot(Kt), h = Kt.dot(Co), u = o * c - a * a;
        if (u === 0) return r.set(-2, -1, -1);
        let d = 1 / u, f = (c * l - a * h) * d, m = (o * h - a * l) * d;
        return r.set(1 - f - m, m, f);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, en), en.x >= 0 && en.y >= 0 && en.x + en.y <= 1;
    }
    static getUV(e, t, n, i, r, o, a, l) {
        return this.getBarycoord(e, t, n, i, en), l.set(0, 0), l.addScaledVector(r, en.x), l.addScaledVector(o, en.y), l.addScaledVector(a, en.z), l;
    }
    static isFrontFacing(e, t, n, i) {
        return Dt.subVectors(n, t), Kt.subVectors(e, t), Dt.cross(Kt).dot(i) < 0;
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return this.a.fromBufferAttribute(e, t), this.b.fromBufferAttribute(e, n), this.c.fromBufferAttribute(e, i), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return Dt.subVectors(this.c, this.b), Kt.subVectors(this.a, this.b), Dt.cross(Kt).length() * .5;
    }
    getMidpoint(e) {
        return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return nt.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return nt.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getUV(e, t, n, i, r) {
        return nt.getUV(e, this.a, this.b, this.c, t, n, i, r);
    }
    containsPoint(e) {
        return nt.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return nt.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        let n = this.a, i = this.b, r = this.c, o, a;
        ai.subVectors(i, n), li.subVectors(r, n), Lo.subVectors(e, n);
        let l = ai.dot(Lo), c = li.dot(Lo);
        if (l <= 0 && c <= 0) return t.copy(n);
        Ro.subVectors(e, i);
        let h = ai.dot(Ro), u = li.dot(Ro);
        if (h >= 0 && u <= h) return t.copy(i);
        let d = l * u - h * c;
        if (d <= 0 && l >= 0 && h <= 0) return o = l / (l - h), t.copy(n).addScaledVector(ai, o);
        Po.subVectors(e, r);
        let f = ai.dot(Po), m = li.dot(Po);
        if (m >= 0 && f <= m) return t.copy(r);
        let x = f * c - l * m;
        if (x <= 0 && c >= 0 && m <= 0) return a = c / (c - m), t.copy(n).addScaledVector(li, a);
        let v = h * m - f * u;
        if (v <= 0 && u - h >= 0 && f - m >= 0) return Al.subVectors(r, i), a = (u - h) / (u - h + (f - m)), t.copy(i).addScaledVector(Al, a);
        let g = 1 / (v + x + d);
        return o = x * g, a = d * g, t.copy(n).addScaledVector(ai, o).addScaledVector(li, a);
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}, lf = 0, dt = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: lf++
        }), this.uuid = Et(), this.name = "", this.type = "Material", this.fog = !0, this.blending = sr, this.side = Ai, this.vertexColors = !1, this.opacity = 1, this.format = ct, this.transparent = !1, this.blendSrc = Gc, this.blendDst = Vc, this.blendEquation = _i, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = ea, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = Ud, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = vo, this.stencilZFail = vo, this.stencilZPass = vo, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaToCoverage = !1, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0, this._alphaTest = 0;
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
    }
    onBuild() {}
    onBeforeRender() {}
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0) for(let t in e){
            let n = e[t];
            if (n === void 0) {
                console.warn("THREE.Material: '" + t + "' parameter is undefined.");
                continue;
            }
            if (t === "shading") {
                console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = n === kc;
                continue;
            }
            let i = this[t];
            if (i === void 0) {
                console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.");
                continue;
            }
            i && i.isColor ? i.set(n) : i && i.isVector3 && n && n.isVector3 ? i.copy(n) : this[t] = n;
        }
    }
    toJSON(e) {
        let t = e === void 0 || typeof e == "string";
        t && (e = {
            textures: {},
            images: {}
        });
        let n = {
            metadata: {
                version: 4.5,
                type: "Material",
                generator: "Material.toJSON"
            }
        };
        n.uuid = this.uuid, n.type = this.type, this.name !== "" && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), this.roughness !== void 0 && (n.roughness = this.roughness), this.metalness !== void 0 && (n.metalness = this.metalness), this.sheen !== void 0 && (n.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (n.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (n.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (n.shininess = this.shininess), this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (n.combine = this.combine)), this.envMapIntensity !== void 0 && (n.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (n.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && (n.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (n.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (n.size = this.size), this.shadowSide !== null && (n.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== sr && (n.blending = this.blending), this.side !== Ai && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), this.format !== ct && (n.format = this.format), this.transparent === !0 && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && this.rotation !== 0 && (n.rotation = this.rotation), this.polygonOffset === !0 && (n.polygonOffset = !0), this.polygonOffsetFactor !== 0 && (n.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && this.linewidth !== 1 && (n.linewidth = this.linewidth), this.dashSize !== void 0 && (n.dashSize = this.dashSize), this.gapSize !== void 0 && (n.gapSize = this.gapSize), this.scale !== void 0 && (n.scale = this.scale), this.dithering === !0 && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), this.alphaToCoverage === !0 && (n.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === !0 && (n.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === !0 && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (n.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (n.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === !0 && (n.flatShading = this.flatShading), this.visible === !1 && (n.visible = !1), this.toneMapped === !1 && (n.toneMapped = !1), JSON.stringify(this.userData) !== "{}" && (n.userData = this.userData);
        function i(r) {
            let o = [];
            for(let a in r){
                let l = r[a];
                delete l.metadata, o.push(l);
            }
            return o;
        }
        if (t) {
            let r = i(e.textures), o = i(e.images);
            r.length > 0 && (n.textures = r), o.length > 0 && (n.images = o);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.format = e.format, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        let t = e.clippingPlanes, n = null;
        if (t !== null) {
            let i = t.length;
            n = new Array(i);
            for(let r = 0; r !== i; ++r)n[r] = t[r].clone();
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
};
dt.prototype.isMaterial = !0;
var $c = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, Ft = {
    h: 0,
    s: 0,
    l: 0
}, jr = {
    h: 0,
    s: 0,
    l: 0
};
function Io(s, e, t) {
    return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? s + (e - s) * 6 * t : t < 1 / 2 ? e : t < 2 / 3 ? s + (e - s) * 6 * (2 / 3 - t) : s;
}
function Do(s) {
    return s < .04045 ? s * .0773993808 : Math.pow(s * .9478672986 + .0521327014, 2.4);
}
function Fo(s) {
    return s < .0031308 ? s * 12.92 : 1.055 * Math.pow(s, .41666) - .055;
}
var ae = class {
    constructor(e, t, n){
        return t === void 0 && n === void 0 ? this.set(e) : this.setRGB(e, t, n);
    }
    set(e) {
        return e && e.isColor ? this.copy(e) : typeof e == "number" ? this.setHex(e) : typeof e == "string" && this.setStyle(e), this;
    }
    setScalar(e) {
        return this.r = e, this.g = e, this.b = e, this;
    }
    setHex(e) {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, this;
    }
    setRGB(e, t, n) {
        return this.r = e, this.g = t, this.b = n, this;
    }
    setHSL(e, t, n) {
        if (e = da(e, 1), t = mt(t, 0, 1), n = mt(n, 0, 1), t === 0) this.r = this.g = this.b = n;
        else {
            let i = n <= .5 ? n * (1 + t) : n + t - n * t, r = 2 * n - i;
            this.r = Io(r, i, e + 1 / 3), this.g = Io(r, i, e), this.b = Io(r, i, e - 1 / 3);
        }
        return this;
    }
    setStyle(e) {
        function t(i) {
            i !== void 0 && parseFloat(i) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
        }
        let n;
        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
            let i, r = n[1], o = n[2];
            switch(r){
                case "rgb":
                case "rgba":
                    if (i = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, t(i[4]), this;
                    if (i = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, t(i[4]), this;
                    break;
                case "hsl":
                case "hsla":
                    if (i = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) {
                        let a = parseFloat(i[1]) / 360, l = parseInt(i[2], 10) / 100, c = parseInt(i[3], 10) / 100;
                        return t(i[4]), this.setHSL(a, l, c);
                    }
                    break;
            }
        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
            let i1 = n[1], r1 = i1.length;
            if (r1 === 3) return this.r = parseInt(i1.charAt(0) + i1.charAt(0), 16) / 255, this.g = parseInt(i1.charAt(1) + i1.charAt(1), 16) / 255, this.b = parseInt(i1.charAt(2) + i1.charAt(2), 16) / 255, this;
            if (r1 === 6) return this.r = parseInt(i1.charAt(0) + i1.charAt(1), 16) / 255, this.g = parseInt(i1.charAt(2) + i1.charAt(3), 16) / 255, this.b = parseInt(i1.charAt(4) + i1.charAt(5), 16) / 255, this;
        }
        return e && e.length > 0 ? this.setColorName(e) : this;
    }
    setColorName(e) {
        let t = $c[e.toLowerCase()];
        return t !== void 0 ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this;
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return this.r = e.r, this.g = e.g, this.b = e.b, this;
    }
    copySRGBToLinear(e) {
        return this.r = Do(e.r), this.g = Do(e.g), this.b = Do(e.b), this;
    }
    copyLinearToSRGB(e) {
        return this.r = Fo(e.r), this.g = Fo(e.g), this.b = Fo(e.b), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex() {
        return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;
    }
    getHexString() {
        return ("000000" + this.getHex().toString(16)).slice(-6);
    }
    getHSL(e) {
        let t = this.r, n = this.g, i = this.b, r = Math.max(t, n, i), o = Math.min(t, n, i), a, l, c = (o + r) / 2;
        if (o === r) a = 0, l = 0;
        else {
            let h = r - o;
            switch(l = c <= .5 ? h / (r + o) : h / (2 - r - o), r){
                case t:
                    a = (n - i) / h + (n < i ? 6 : 0);
                    break;
                case n:
                    a = (i - t) / h + 2;
                    break;
                case i:
                    a = (t - n) / h + 4;
                    break;
            }
            a /= 6;
        }
        return e.h = a, e.s = l, e.l = c, e;
    }
    getStyle() {
        return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
    }
    offsetHSL(e, t, n) {
        return this.getHSL(Ft), Ft.h += e, Ft.s += t, Ft.l += n, this.setHSL(Ft.h, Ft.s, Ft.l), this;
    }
    add(e) {
        return this.r += e.r, this.g += e.g, this.b += e.b, this;
    }
    addColors(e, t) {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this;
    }
    addScalar(e) {
        return this.r += e, this.g += e, this.b += e, this;
    }
    sub(e) {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
    }
    multiply(e) {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
    }
    multiplyScalar(e) {
        return this.r *= e, this.g *= e, this.b *= e, this;
    }
    lerp(e, t) {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this;
    }
    lerpColors(e, t, n) {
        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this;
    }
    lerpHSL(e, t) {
        this.getHSL(Ft), e.getHSL(jr);
        let n = or(Ft.h, jr.h, t), i = or(Ft.s, jr.s, t), r = or(Ft.l, jr.l, t);
        return this.setHSL(n, i, r), this;
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this;
    }
    toArray(e = [], t = 0) {
        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e;
    }
    fromBufferAttribute(e, t) {
        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), e.normalized === !0 && (this.r /= 255, this.g /= 255, this.b /= 255), this;
    }
    toJSON() {
        return this.getHex();
    }
};
ae.NAMES = $c;
ae.prototype.isColor = !0;
ae.prototype.r = 1;
ae.prototype.g = 1;
ae.prototype.b = 1;
var hn = class extends dt {
    constructor(e){
        super();
        this.type = "MeshBasicMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
hn.prototype.isMeshBasicMaterial = !0;
var Je = new M, Qr = new X, Ue = class {
    constructor(e, t, n){
        if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
        this.name = "", this.array = e, this.itemSize = t, this.count = e !== void 0 ? e.length / t : 0, this.normalized = n === !0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0;
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.itemSize, n *= t.itemSize;
        for(let i = 0, r = this.itemSize; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    copyColorsArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", i), o = new ae), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b;
        }
        return this;
    }
    copyVector2sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", i), o = new X), t[n++] = o.x, t[n++] = o.y;
        }
        return this;
    }
    copyVector3sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", i), o = new M), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z;
        }
        return this;
    }
    copyVector4sArray(e) {
        let t = this.array, n = 0;
        for(let i = 0, r = e.length; i < r; i++){
            let o = e[i];
            o === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", i), o = new Ve), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w;
        }
        return this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2) for(let t = 0, n = this.count; t < n; t++)Qr.fromBufferAttribute(this, t), Qr.applyMatrix3(e), this.setXY(t, Qr.x, Qr.y);
        else if (this.itemSize === 3) for(let t1 = 0, n1 = this.count; t1 < n1; t1++)Je.fromBufferAttribute(this, t1), Je.applyMatrix3(e), this.setXYZ(t1, Je.x, Je.y, Je.z);
        return this;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyMatrix4(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.applyNormalMatrix(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Je.x = this.getX(t), Je.y = this.getY(t), Je.z = this.getZ(t), Je.transformDirection(e), this.setXYZ(t, Je.x, Je.y, Je.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getX(e) {
        return this.array[e * this.itemSize];
    }
    setX(e, t) {
        return this.array[e * this.itemSize] = t, this;
    }
    getY(e) {
        return this.array[e * this.itemSize + 1];
    }
    setY(e, t) {
        return this.array[e * this.itemSize + 1] = t, this;
    }
    getZ(e) {
        return this.array[e * this.itemSize + 2];
    }
    setZ(e, t) {
        return this.array[e * this.itemSize + 2] = t, this;
    }
    getW(e) {
        return this.array[e * this.itemSize + 3];
    }
    setW(e, t) {
        return this.array[e * this.itemSize + 3] = t, this;
    }
    setXY(e, t, n) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = i, this.array[e + 3] = r, this;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        let e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized
        };
        return this.name !== "" && (e.name = this.name), this.usage !== hr && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
    }
};
Ue.prototype.isBufferAttribute = !0;
var jc = class extends Ue {
    constructor(e, t, n){
        super(new Int8Array(e), t, n);
    }
}, Qc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8Array(e), t, n);
    }
}, Kc = class extends Ue {
    constructor(e, t, n){
        super(new Uint8ClampedArray(e), t, n);
    }
}, eh = class extends Ue {
    constructor(e, t, n){
        super(new Int16Array(e), t, n);
    }
}, Ys = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
}, th = class extends Ue {
    constructor(e, t, n){
        super(new Int32Array(e), t, n);
    }
}, Zs = class extends Ue {
    constructor(e, t, n){
        super(new Uint32Array(e), t, n);
    }
}, nh = class extends Ue {
    constructor(e, t, n){
        super(new Uint16Array(e), t, n);
    }
};
nh.prototype.isFloat16BufferAttribute = !0;
var de = class extends Ue {
    constructor(e, t, n){
        super(new Float32Array(e), t, n);
    }
}, ih = class extends Ue {
    constructor(e, t, n){
        super(new Float64Array(e), t, n);
    }
}, cf = 0, Rt = new pe, No = new Ne, ci = new M, Tt = new Lt, $i = new Lt, ht = new M, _e = class extends En {
    constructor(){
        super();
        Object.defineProperty(this, "id", {
            value: cf++
        }), this.uuid = Et(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
            start: 0,
            count: 1 / 0
        }, this.userData = {};
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return Array.isArray(e) ? this.index = new (Yc(e) > 65535 ? Zs : Ys)(e, 1) : this.index = e, this;
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return this.attributes[e] = t, this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({
            start: e,
            count: t,
            materialIndex: n
        });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        this.drawRange.start = e, this.drawRange.count = t;
    }
    applyMatrix4(e) {
        let t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), t.needsUpdate = !0);
        let n = this.attributes.normal;
        if (n !== void 0) {
            let r = new lt().getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0;
        }
        let i = this.attributes.tangent;
        return i !== void 0 && (i.transformDirection(e), i.needsUpdate = !0), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
    }
    applyQuaternion(e) {
        return Rt.makeRotationFromQuaternion(e), this.applyMatrix4(Rt), this;
    }
    rotateX(e) {
        return Rt.makeRotationX(e), this.applyMatrix4(Rt), this;
    }
    rotateY(e) {
        return Rt.makeRotationY(e), this.applyMatrix4(Rt), this;
    }
    rotateZ(e) {
        return Rt.makeRotationZ(e), this.applyMatrix4(Rt), this;
    }
    translate(e, t, n) {
        return Rt.makeTranslation(e, t, n), this.applyMatrix4(Rt), this;
    }
    scale(e, t, n) {
        return Rt.makeScale(e, t, n), this.applyMatrix4(Rt), this;
    }
    lookAt(e) {
        return No.lookAt(e), No.updateMatrix(), this.applyMatrix4(No.matrix), this;
    }
    center() {
        return this.computeBoundingBox(), this.boundingBox.getCenter(ci).negate(), this.translate(ci.x, ci.y, ci.z), this;
    }
    setFromPoints(e) {
        let t = [];
        for(let n = 0, i = e.length; n < i; n++){
            let r = e[n];
            t.push(r.x, r.y, r.z || 0);
        }
        return this.setAttribute("position", new de(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Lt);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new M(-1 / 0, -1 / 0, -1 / 0), new M(1 / 0, 1 / 0, 1 / 0));
            return;
        }
        if (e !== void 0) {
            if (this.boundingBox.setFromBufferAttribute(e), t) for(let n = 0, i = t.length; n < i; n++){
                let r = t[n];
                Tt.setFromBufferAttribute(r), this.morphTargetsRelative ? (ht.addVectors(this.boundingBox.min, Tt.min), this.boundingBox.expandByPoint(ht), ht.addVectors(this.boundingBox.max, Tt.max), this.boundingBox.expandByPoint(ht)) : (this.boundingBox.expandByPoint(Tt.min), this.boundingBox.expandByPoint(Tt.max));
            }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new An);
        let e = this.attributes.position, t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new M, 1 / 0);
            return;
        }
        if (e) {
            let n = this.boundingSphere.center;
            if (Tt.setFromBufferAttribute(e), t) for(let r = 0, o = t.length; r < o; r++){
                let a = t[r];
                $i.setFromBufferAttribute(a), this.morphTargetsRelative ? (ht.addVectors(Tt.min, $i.min), Tt.expandByPoint(ht), ht.addVectors(Tt.max, $i.max), Tt.expandByPoint(ht)) : (Tt.expandByPoint($i.min), Tt.expandByPoint($i.max));
            }
            Tt.getCenter(n);
            let i = 0;
            for(let r1 = 0, o1 = e.count; r1 < o1; r1++)ht.fromBufferAttribute(e, r1), i = Math.max(i, n.distanceToSquared(ht));
            if (t) for(let r2 = 0, o2 = t.length; r2 < o2; r2++){
                let a1 = t[r2], l = this.morphTargetsRelative;
                for(let c = 0, h = a1.count; c < h; c++)ht.fromBufferAttribute(a1, c), l && (ci.fromBufferAttribute(e, c), ht.add(ci)), i = Math.max(i, n.distanceToSquared(ht));
            }
            this.boundingSphere.radius = Math.sqrt(i), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
        }
    }
    computeTangents() {
        let e = this.index, t = this.attributes;
        if (e === null || t.position === void 0 || t.normal === void 0 || t.uv === void 0) {
            console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
            return;
        }
        let n = e.array, i = t.position.array, r = t.normal.array, o = t.uv.array, a = i.length / 3;
        t.tangent === void 0 && this.setAttribute("tangent", new Ue(new Float32Array(4 * a), 4));
        let l = t.tangent.array, c = [], h = [];
        for(let B = 0; B < a; B++)c[B] = new M, h[B] = new M;
        let u = new M, d = new M, f = new M, m = new X, x = new X, v = new X, g = new M, p = new M;
        function _(B, P, w) {
            u.fromArray(i, B * 3), d.fromArray(i, P * 3), f.fromArray(i, w * 3), m.fromArray(o, B * 2), x.fromArray(o, P * 2), v.fromArray(o, w * 2), d.sub(u), f.sub(u), x.sub(m), v.sub(m);
            let E = 1 / (x.x * v.y - v.x * x.y);
            !isFinite(E) || (g.copy(d).multiplyScalar(v.y).addScaledVector(f, -x.y).multiplyScalar(E), p.copy(f).multiplyScalar(x.x).addScaledVector(d, -v.x).multiplyScalar(E), c[B].add(g), c[P].add(g), c[w].add(g), h[B].add(p), h[P].add(p), h[w].add(p));
        }
        let y = this.groups;
        y.length === 0 && (y = [
            {
                start: 0,
                count: n.length
            }
        ]);
        for(let B1 = 0, P = y.length; B1 < P; ++B1){
            let w = y[B1], E = w.start, D = w.count;
            for(let U = E, F = E + D; U < F; U += 3)_(n[U + 0], n[U + 1], n[U + 2]);
        }
        let b = new M, A = new M, L = new M, I = new M;
        function k(B) {
            L.fromArray(r, B * 3), I.copy(L);
            let P = c[B];
            b.copy(P), b.sub(L.multiplyScalar(L.dot(P))).normalize(), A.crossVectors(I, P);
            let E = A.dot(h[B]) < 0 ? -1 : 1;
            l[B * 4] = b.x, l[B * 4 + 1] = b.y, l[B * 4 + 2] = b.z, l[B * 4 + 3] = E;
        }
        for(let B2 = 0, P1 = y.length; B2 < P1; ++B2){
            let w1 = y[B2], E1 = w1.start, D1 = w1.count;
            for(let U1 = E1, F1 = E1 + D1; U1 < F1; U1 += 3)k(n[U1 + 0]), k(n[U1 + 1]), k(n[U1 + 2]);
        }
    }
    computeVertexNormals() {
        let e = this.index, t = this.getAttribute("position");
        if (t !== void 0) {
            let n = this.getAttribute("normal");
            if (n === void 0) n = new Ue(new Float32Array(t.count * 3), 3), this.setAttribute("normal", n);
            else for(let d = 0, f = n.count; d < f; d++)n.setXYZ(d, 0, 0, 0);
            let i = new M, r = new M, o = new M, a = new M, l = new M, c = new M, h = new M, u = new M;
            if (e) for(let d1 = 0, f1 = e.count; d1 < f1; d1 += 3){
                let m = e.getX(d1 + 0), x = e.getX(d1 + 1), v = e.getX(d1 + 2);
                i.fromBufferAttribute(t, m), r.fromBufferAttribute(t, x), o.fromBufferAttribute(t, v), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), a.fromBufferAttribute(n, m), l.fromBufferAttribute(n, x), c.fromBufferAttribute(n, v), a.add(h), l.add(h), c.add(h), n.setXYZ(m, a.x, a.y, a.z), n.setXYZ(x, l.x, l.y, l.z), n.setXYZ(v, c.x, c.y, c.z);
            }
            else for(let d2 = 0, f2 = t.count; d2 < f2; d2 += 3)i.fromBufferAttribute(t, d2 + 0), r.fromBufferAttribute(t, d2 + 1), o.fromBufferAttribute(t, d2 + 2), h.subVectors(o, r), u.subVectors(i, r), h.cross(u), n.setXYZ(d2 + 0, h.x, h.y, h.z), n.setXYZ(d2 + 1, h.x, h.y, h.z), n.setXYZ(d2 + 2, h.x, h.y, h.z);
            this.normalizeNormals(), n.needsUpdate = !0;
        }
    }
    merge(e, t) {
        if (!(e && e.isBufferGeometry)) {
            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
            return;
        }
        t === void 0 && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
        let n = this.attributes;
        for(let i in n){
            if (e.attributes[i] === void 0) continue;
            let o = n[i].array, a = e.attributes[i], l = a.array, c = a.itemSize * t, h = Math.min(l.length, o.length - c);
            for(let u = 0, d = c; u < h; u++, d++)o[d] = l[u];
        }
        return this;
    }
    normalizeNormals() {
        let e = this.attributes.normal;
        for(let t = 0, n = e.count; t < n; t++)ht.fromBufferAttribute(e, t), ht.normalize(), e.setXYZ(t, ht.x, ht.y, ht.z);
    }
    toNonIndexed() {
        function e(a, l) {
            let c = a.array, h = a.itemSize, u = a.normalized, d = new c.constructor(l.length * h), f = 0, m = 0;
            for(let x = 0, v = l.length; x < v; x++){
                a.isInterleavedBufferAttribute ? f = l[x] * a.data.stride + a.offset : f = l[x] * h;
                for(let g = 0; g < h; g++)d[m++] = c[f++];
            }
            return new Ue(d, h, u);
        }
        if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
        let t = new _e, n = this.index.array, i = this.attributes;
        for(let a in i){
            let l = i[a], c = e(l, n);
            t.setAttribute(a, c);
        }
        let r = this.morphAttributes;
        for(let a1 in r){
            let l1 = [], c1 = r[a1];
            for(let h = 0, u = c1.length; h < u; h++){
                let d = c1[h], f = e(d, n);
                l1.push(f);
            }
            t.morphAttributes[a1] = l1;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        let o = this.groups;
        for(let a2 = 0, l2 = o.length; a2 < l2; a2++){
            let c2 = o[a2];
            t.addGroup(c2.start, c2.count, c2.materialIndex);
        }
        return t;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
            let l = this.parameters;
            for(let c in l)l[c] !== void 0 && (e[c] = l[c]);
            return e;
        }
        e.data = {
            attributes: {}
        };
        let t = this.index;
        t !== null && (e.data.index = {
            type: t.array.constructor.name,
            array: Array.prototype.slice.call(t.array)
        });
        let n = this.attributes;
        for(let l1 in n){
            let c1 = n[l1];
            e.data.attributes[l1] = c1.toJSON(e.data);
        }
        let i = {}, r = !1;
        for(let l2 in this.morphAttributes){
            let c2 = this.morphAttributes[l2], h = [];
            for(let u = 0, d = c2.length; u < d; u++){
                let f = c2[u];
                h.push(f.toJSON(e.data));
            }
            h.length > 0 && (i[l2] = h, r = !0);
        }
        r && (e.data.morphAttributes = i, e.data.morphTargetsRelative = this.morphTargetsRelative);
        let o = this.groups;
        o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
        let a = this.boundingSphere;
        return a !== null && (e.data.boundingSphere = {
            center: a.center.toArray(),
            radius: a.radius
        }), e;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
        let t = {};
        this.name = e.name;
        let n = e.index;
        n !== null && this.setIndex(n.clone(t));
        let i = e.attributes;
        for(let c in i){
            let h = i[c];
            this.setAttribute(c, h.clone(t));
        }
        let r = e.morphAttributes;
        for(let c1 in r){
            let h1 = [], u = r[c1];
            for(let d = 0, f = u.length; d < f; d++)h1.push(u[d].clone(t));
            this.morphAttributes[c1] = h1;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        let o = e.groups;
        for(let c2 = 0, h2 = o.length; c2 < h2; c2++){
            let u1 = o[c2];
            this.addGroup(u1.start, u1.count, u1.materialIndex);
        }
        let a = e.boundingBox;
        a !== null && (this.boundingBox = a.clone());
        let l = e.boundingSphere;
        return l !== null && (this.boundingSphere = l.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, e.parameters !== void 0 && (this.parameters = Object.assign({}, e.parameters)), this;
    }
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
_e.prototype.isBufferGeometry = !0;
var Cl = new pe, hi = new Cn, Bo = new An, mn = new M, gn = new M, xn = new M, zo = new M, Uo = new M, Oo = new M, Kr = new M, es = new M, ts = new M, ns = new X, is = new X, rs = new X, Ho = new M, ss = new M, st = class extends Ne {
    constructor(e = new _e, t = new hn){
        super();
        this.type = "Mesh", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this;
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
    raycast(e, t) {
        let n = this.geometry, i = this.material, r = this.matrixWorld;
        if (i === void 0 || (n.boundingSphere === null && n.computeBoundingSphere(), Bo.copy(n.boundingSphere), Bo.applyMatrix4(r), e.ray.intersectsSphere(Bo) === !1) || (Cl.copy(r).invert(), hi.copy(e.ray).applyMatrix4(Cl), n.boundingBox !== null && hi.intersectsBox(n.boundingBox) === !1)) return;
        let o;
        if (n.isBufferGeometry) {
            let a = n.index, l = n.attributes.position, c = n.morphAttributes.position, h = n.morphTargetsRelative, u = n.attributes.uv, d = n.attributes.uv2, f = n.groups, m = n.drawRange;
            if (a !== null) if (Array.isArray(i)) for(let x = 0, v = f.length; x < v; x++){
                let g = f[x], p = i[g.materialIndex], _ = Math.max(g.start, m.start), y = Math.min(a.count, Math.min(g.start + g.count, m.start + m.count));
                for(let b = _, A = y; b < A; b += 3){
                    let L = a.getX(b), I = a.getX(b + 1), k = a.getX(b + 2);
                    o = os(this, p, e, hi, l, c, h, u, d, L, I, k), o && (o.faceIndex = Math.floor(b / 3), o.face.materialIndex = g.materialIndex, t.push(o));
                }
            }
            else {
                let x1 = Math.max(0, m.start), v1 = Math.min(a.count, m.start + m.count);
                for(let g1 = x1, p1 = v1; g1 < p1; g1 += 3){
                    let _1 = a.getX(g1), y1 = a.getX(g1 + 1), b1 = a.getX(g1 + 2);
                    o = os(this, i, e, hi, l, c, h, u, d, _1, y1, b1), o && (o.faceIndex = Math.floor(g1 / 3), t.push(o));
                }
            }
            else if (l !== void 0) if (Array.isArray(i)) for(let x2 = 0, v2 = f.length; x2 < v2; x2++){
                let g2 = f[x2], p2 = i[g2.materialIndex], _2 = Math.max(g2.start, m.start), y2 = Math.min(l.count, Math.min(g2.start + g2.count, m.start + m.count));
                for(let b2 = _2, A1 = y2; b2 < A1; b2 += 3){
                    let L1 = b2, I1 = b2 + 1, k1 = b2 + 2;
                    o = os(this, p2, e, hi, l, c, h, u, d, L1, I1, k1), o && (o.faceIndex = Math.floor(b2 / 3), o.face.materialIndex = g2.materialIndex, t.push(o));
                }
            }
            else {
                let x3 = Math.max(0, m.start), v3 = Math.min(l.count, m.start + m.count);
                for(let g3 = x3, p3 = v3; g3 < p3; g3 += 3){
                    let _3 = g3, y3 = g3 + 1, b3 = g3 + 2;
                    o = os(this, i, e, hi, l, c, h, u, d, _3, y3, b3), o && (o.faceIndex = Math.floor(g3 / 3), t.push(o));
                }
            }
        } else n.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
};
st.prototype.isMesh = !0;
function hf(s, e, t, n, i, r, o, a) {
    let l;
    if (e.side === it ? l = n.intersectTriangle(o, r, i, !0, a) : l = n.intersectTriangle(i, r, o, e.side !== Ci, a), l === null) return null;
    ss.copy(a), ss.applyMatrix4(s.matrixWorld);
    let c = t.ray.origin.distanceTo(ss);
    return c < t.near || c > t.far ? null : {
        distance: c,
        point: ss.clone(),
        object: s
    };
}
function os(s, e, t, n, i, r, o, a, l, c, h, u) {
    mn.fromBufferAttribute(i, c), gn.fromBufferAttribute(i, h), xn.fromBufferAttribute(i, u);
    let d = s.morphTargetInfluences;
    if (r && d) {
        Kr.set(0, 0, 0), es.set(0, 0, 0), ts.set(0, 0, 0);
        for(let m = 0, x = r.length; m < x; m++){
            let v = d[m], g = r[m];
            v !== 0 && (zo.fromBufferAttribute(g, c), Uo.fromBufferAttribute(g, h), Oo.fromBufferAttribute(g, u), o ? (Kr.addScaledVector(zo, v), es.addScaledVector(Uo, v), ts.addScaledVector(Oo, v)) : (Kr.addScaledVector(zo.sub(mn), v), es.addScaledVector(Uo.sub(gn), v), ts.addScaledVector(Oo.sub(xn), v)));
        }
        mn.add(Kr), gn.add(es), xn.add(ts);
    }
    s.isSkinnedMesh && (s.boneTransform(c, mn), s.boneTransform(h, gn), s.boneTransform(u, xn));
    let f = hf(s, e, t, n, mn, gn, xn, Ho);
    if (f) {
        a && (ns.fromBufferAttribute(a, c), is.fromBufferAttribute(a, h), rs.fromBufferAttribute(a, u), f.uv = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X)), l && (ns.fromBufferAttribute(l, c), is.fromBufferAttribute(l, h), rs.fromBufferAttribute(l, u), f.uv2 = nt.getUV(Ho, mn, gn, xn, ns, is, rs, new X));
        let m1 = {
            a: c,
            b: h,
            c: u,
            normal: new M,
            materialIndex: 0
        };
        nt.getNormal(mn, gn, xn, m1.normal), f.face = m1;
    }
    return f;
}
var wn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1, r = 1, o = 1){
        super();
        this.type = "BoxGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: i,
            heightSegments: r,
            depthSegments: o
        };
        let a = this;
        i = Math.floor(i), r = Math.floor(r), o = Math.floor(o);
        let l = [], c = [], h = [], u = [], d = 0, f = 0;
        m("z", "y", "x", -1, -1, n, t, e, o, r, 0), m("z", "y", "x", 1, -1, n, t, -e, o, r, 1), m("x", "z", "y", 1, 1, e, n, t, i, o, 2), m("x", "z", "y", 1, -1, e, n, -t, i, o, 3), m("x", "y", "z", 1, -1, e, t, n, i, r, 4), m("x", "y", "z", -1, -1, e, t, -n, i, r, 5), this.setIndex(l), this.setAttribute("position", new de(c, 3)), this.setAttribute("normal", new de(h, 3)), this.setAttribute("uv", new de(u, 2));
        function m(x, v, g, p, _, y, b, A, L, I, k) {
            let B = y / L, P = b / I, w = y / 2, E = b / 2, D = A / 2, U = L + 1, F = I + 1, O = 0, ne = 0, ce = new M;
            for(let V = 0; V < F; V++){
                let W = V * P - E;
                for(let he = 0; he < U; he++){
                    let le = he * B - w;
                    ce[x] = le * p, ce[v] = W * _, ce[g] = D, c.push(ce.x, ce.y, ce.z), ce[x] = 0, ce[v] = 0, ce[g] = A > 0 ? 1 : -1, h.push(ce.x, ce.y, ce.z), u.push(he / L), u.push(1 - V / I), O += 1;
                }
            }
            for(let V1 = 0; V1 < I; V1++)for(let W1 = 0; W1 < L; W1++){
                let he1 = d + W1 + U * V1, le1 = d + W1 + U * (V1 + 1), fe = d + (W1 + 1) + U * (V1 + 1), Be = d + (W1 + 1) + U * V1;
                l.push(he1, le1, Be), l.push(le1, fe, Be), ne += 6;
            }
            a.addGroup(f, ne, k), f += ne, d += O;
        }
    }
    static fromJSON(e) {
        return new wn(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
    }
};
function Ri(s) {
    let e = {};
    for(let t in s){
        e[t] = {};
        for(let n in s[t]){
            let i = s[t][n];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? e[t][n] = i.clone() : Array.isArray(i) ? e[t][n] = i.slice() : e[t][n] = i;
        }
    }
    return e;
}
function yt(s) {
    let e = {};
    for(let t = 0; t < s.length; t++){
        let n = Ri(s[t]);
        for(let i in n)e[i] = n[i];
    }
    return e;
}
var uf = {
    clone: Ri,
    merge: yt
}, df = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, ff = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`, sn = class extends dt {
    constructor(e){
        super();
        this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = df, this.fragmentShader = ff, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.extensions = {
            derivatives: !1,
            fragDepth: !1,
            drawBuffers: !1,
            shaderTextureLOD: !1
        }, this.defaultAttributeValues = {
            color: [
                1,
                1,
                1
            ],
            uv: [
                0,
                0
            ],
            uv2: [
                0,
                0
            ]
        }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, this.glslVersion = null, e !== void 0 && (e.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
    }
    copy(e) {
        return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Ri(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        t.glslVersion = this.glslVersion, t.uniforms = {};
        for(let i in this.uniforms){
            let o = this.uniforms[i].value;
            o && o.isTexture ? t.uniforms[i] = {
                type: "t",
                value: o.toJSON(e).uuid
            } : o && o.isColor ? t.uniforms[i] = {
                type: "c",
                value: o.getHex()
            } : o && o.isVector2 ? t.uniforms[i] = {
                type: "v2",
                value: o.toArray()
            } : o && o.isVector3 ? t.uniforms[i] = {
                type: "v3",
                value: o.toArray()
            } : o && o.isVector4 ? t.uniforms[i] = {
                type: "v4",
                value: o.toArray()
            } : o && o.isMatrix3 ? t.uniforms[i] = {
                type: "m3",
                value: o.toArray()
            } : o && o.isMatrix4 ? t.uniforms[i] = {
                type: "m4",
                value: o.toArray()
            } : t.uniforms[i] = {
                value: o
            };
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
        let n = {};
        for(let i1 in this.extensions)this.extensions[i1] === !0 && (n[i1] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
};
sn.prototype.isShaderMaterial = !0;
var Ir = class extends Ne {
    constructor(){
        super();
        this.type = "Camera", this.matrixWorldInverse = new pe, this.projectionMatrix = new pe, this.projectionMatrixInverse = new pe;
    }
    copy(e, t) {
        return super.copy(e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        let t = this.matrixWorld.elements;
        return e.set(-t[8], -t[9], -t[10]).normalize();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Ir.prototype.isCamera = !0;
var ut = class extends Ir {
    constructor(e = 50, t = 1, n = .1, i = 2e3){
        super();
        this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = n, this.far = i, this.focus = 10, this.aspect = t, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
    }
    setFocalLength(e) {
        let t = .5 * this.getFilmHeight() / e;
        this.fov = dr * 2 * Math.atan(t), this.updateProjectionMatrix();
    }
    getFocalLength() {
        let e = Math.tan(Wn * .5 * this.fov);
        return .5 * this.getFilmHeight() / e;
    }
    getEffectiveFOV() {
        return dr * 2 * Math.atan(Math.tan(Wn * .5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    setViewOffset(e, t, n, i, r, o) {
        this.aspect = e / t, this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = this.near, t = e * Math.tan(Wn * .5 * this.fov) / this.zoom, n = 2 * t, i = this.aspect * n, r = -.5 * i, o = this.view;
        if (this.view !== null && this.view.enabled) {
            let l = o.fullWidth, c = o.fullHeight;
            r += o.offsetX * i / l, t -= o.offsetY * n / c, i *= o.width / l, n *= o.height / c;
        }
        let a = this.filmOffset;
        a !== 0 && (r += e * a / this.getFilmWidth()), this.projectionMatrix.makePerspective(r, r + i, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, this.view !== null && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t;
    }
};
ut.prototype.isPerspectiveCamera = !0;
var ui = 90, di = 1, $s = class extends Ne {
    constructor(e, t, n){
        super();
        if (this.type = "CubeCamera", n.isWebGLCubeRenderTarget !== !0) {
            console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
            return;
        }
        this.renderTarget = n;
        let i = new ut(ui, di, e, t);
        i.layers = this.layers, i.up.set(0, -1, 0), i.lookAt(new M(1, 0, 0)), this.add(i);
        let r = new ut(ui, di, e, t);
        r.layers = this.layers, r.up.set(0, -1, 0), r.lookAt(new M(-1, 0, 0)), this.add(r);
        let o = new ut(ui, di, e, t);
        o.layers = this.layers, o.up.set(0, 0, 1), o.lookAt(new M(0, 1, 0)), this.add(o);
        let a = new ut(ui, di, e, t);
        a.layers = this.layers, a.up.set(0, 0, -1), a.lookAt(new M(0, -1, 0)), this.add(a);
        let l = new ut(ui, di, e, t);
        l.layers = this.layers, l.up.set(0, -1, 0), l.lookAt(new M(0, 0, 1)), this.add(l);
        let c = new ut(ui, di, e, t);
        c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new M(0, 0, -1)), this.add(c);
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        let n = this.renderTarget, [i, r, o, a, l, c] = this.children, h = e.xr.enabled, u = e.getRenderTarget();
        e.xr.enabled = !1;
        let d = n.texture.generateMipmaps;
        n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, r), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, a), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = d, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(u), e.xr.enabled = h;
    }
}, ki = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        e = e !== void 0 ? e : [], t = t !== void 0 ? t : Bi;
        super(e, t, n, i, r, o, a, l, c, h);
        this.flipY = !1;
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
};
ki.prototype.isCubeTexture = !0;
var js = class extends At {
    constructor(e, t, n){
        Number.isInteger(t) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), t = n);
        super(e, e, t);
        t = t || {}, this.texture = new ki(void 0, t.mapping, t.wrapS, t.wrapT, t.magFilter, t.minFilter, t.format, t.type, t.anisotropy, t.encoding), this.texture.isRenderTargetTexture = !0, this.texture.generateMipmaps = t.generateMipmaps !== void 0 ? t.generateMipmaps : !1, this.texture.minFilter = t.minFilter !== void 0 ? t.minFilter : tt, this.texture._needsFlipEnvMap = !1;
    }
    fromEquirectangularTexture(e, t) {
        this.texture.type = t.type, this.texture.format = ct, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
        let n = {
            uniforms: {
                tEquirect: {
                    value: null
                }
            },
            vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
            fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
        }, i = new wn(5, 5, 5), r = new sn({
            name: "CubemapFromEquirect",
            uniforms: Ri(n.uniforms),
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            side: it,
            blending: vn
        });
        r.uniforms.tEquirect.value = t;
        let o = new st(i, r), a = t.minFilter;
        return t.minFilter === Ui && (t.minFilter = tt), new $s(1, 10, this).update(e, o), t.minFilter = a, o.geometry.dispose(), o.material.dispose(), this;
    }
    clear(e, t, n, i) {
        let r = e.getRenderTarget();
        for(let o = 0; o < 6; o++)e.setRenderTarget(this, o), e.clear(t, n, i);
        e.setRenderTarget(r);
    }
};
js.prototype.isWebGLCubeRenderTarget = !0;
var ko = new M, pf = new M, mf = new lt, Wt = class {
    constructor(e = new M(1, 0, 0), t = 0){
        this.normal = e, this.constant = t;
    }
    set(e, t) {
        return this.normal.copy(e), this.constant = t, this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), this.constant = i, this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this;
    }
    setFromCoplanarPoints(e, t, n) {
        let i = ko.subVectors(n, t).cross(pf.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), this.constant = e.constant, this;
    }
    normalize() {
        let e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this;
    }
    negate() {
        return this.constant *= -1, this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
    }
    intersectLine(e, t) {
        let n = e.delta(ko), i = this.normal.dot(n);
        if (i === 0) return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        let r = -(e.start.dot(this.normal) + this.constant) / i;
        return r < 0 || r > 1 ? null : t.copy(n).multiplyScalar(r).add(e.start);
    }
    intersectsLine(e) {
        let t = this.distanceToPoint(e.start), n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0;
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        let n = t || mf.getNormalMatrix(e), i = this.coplanarPoint(ko).applyMatrix4(e), r = this.normal.applyMatrix3(n).normalize();
        return this.constant = -i.dot(r), this;
    }
    translate(e) {
        return this.constant -= e.dot(this.normal), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
Wt.prototype.isPlane = !0;
var fi = new An, as = new M, Dr = class {
    constructor(e = new Wt, t = new Wt, n = new Wt, i = new Wt, r = new Wt, o = new Wt){
        this.planes = [
            e,
            t,
            n,
            i,
            r,
            o
        ];
    }
    set(e, t, n, i, r, o) {
        let a = this.planes;
        return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(i), a[4].copy(r), a[5].copy(o), this;
    }
    copy(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e) {
        let t = this.planes, n = e.elements, i = n[0], r = n[1], o = n[2], a = n[3], l = n[4], c = n[5], h = n[6], u = n[7], d = n[8], f = n[9], m = n[10], x = n[11], v = n[12], g = n[13], p = n[14], _ = n[15];
        return t[0].setComponents(a - i, u - l, x - d, _ - v).normalize(), t[1].setComponents(a + i, u + l, x + d, _ + v).normalize(), t[2].setComponents(a + r, u + c, x + f, _ + g).normalize(), t[3].setComponents(a - r, u - c, x - f, _ - g).normalize(), t[4].setComponents(a - o, u - h, x - m, _ - p).normalize(), t[5].setComponents(a + o, u + h, x + m, _ + p).normalize(), this;
    }
    intersectsObject(e) {
        let t = e.geometry;
        return t.boundingSphere === null && t.computeBoundingSphere(), fi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSprite(e) {
        return fi.center.set(0, 0, 0), fi.radius = .7071067811865476, fi.applyMatrix4(e.matrixWorld), this.intersectsSphere(fi);
    }
    intersectsSphere(e) {
        let t = this.planes, n = e.center, i = -e.radius;
        for(let r = 0; r < 6; r++)if (t[r].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++){
            let i = t[n];
            if (as.x = i.normal.x > 0 ? e.max.x : e.min.x, as.y = i.normal.y > 0 ? e.max.y : e.min.y, as.z = i.normal.z > 0 ? e.max.z : e.min.z, i.distanceToPoint(as) < 0) return !1;
        }
        return !0;
    }
    containsPoint(e) {
        let t = this.planes;
        for(let n = 0; n < 6; n++)if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
function rh() {
    let s = null, e = !1, t = null, n = null;
    function i(r, o) {
        t(r, o), n = s.requestAnimationFrame(i);
    }
    return {
        start: function() {
            e !== !0 && t !== null && (n = s.requestAnimationFrame(i), e = !0);
        },
        stop: function() {
            s.cancelAnimationFrame(n), e = !1;
        },
        setAnimationLoop: function(r) {
            t = r;
        },
        setContext: function(r) {
            s = r;
        }
    };
}
function gf(s, e) {
    let t = e.isWebGL2, n = new WeakMap;
    function i(c, h) {
        let u = c.array, d = c.usage, f = s.createBuffer();
        s.bindBuffer(h, f), s.bufferData(h, u, d), c.onUploadCallback();
        let m = 5126;
        return u instanceof Float32Array ? m = 5126 : u instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : u instanceof Uint16Array ? c.isFloat16BufferAttribute ? t ? m = 5131 : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : m = 5123 : u instanceof Int16Array ? m = 5122 : u instanceof Uint32Array ? m = 5125 : u instanceof Int32Array ? m = 5124 : u instanceof Int8Array ? m = 5120 : (u instanceof Uint8Array || u instanceof Uint8ClampedArray) && (m = 5121), {
            buffer: f,
            type: m,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: c.version
        };
    }
    function r(c, h, u) {
        let d = h.array, f = h.updateRange;
        s.bindBuffer(u, c), f.count === -1 ? s.bufferSubData(u, 0, d) : (t ? s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d, f.offset, f.count) : s.bufferSubData(u, f.offset * d.BYTES_PER_ELEMENT, d.subarray(f.offset, f.offset + f.count)), f.count = -1);
    }
    function o(c) {
        return c.isInterleavedBufferAttribute && (c = c.data), n.get(c);
    }
    function a(c) {
        c.isInterleavedBufferAttribute && (c = c.data);
        let h = n.get(c);
        h && (s.deleteBuffer(h.buffer), n.delete(c));
    }
    function l(c, h) {
        if (c.isGLBufferAttribute) {
            let d = n.get(c);
            (!d || d.version < c.version) && n.set(c, {
                buffer: c.buffer,
                type: c.type,
                bytesPerElement: c.elementSize,
                version: c.version
            });
            return;
        }
        c.isInterleavedBufferAttribute && (c = c.data);
        let u = n.get(c);
        u === void 0 ? n.set(c, i(c, h)) : u.version < c.version && (r(u.buffer, c, h), u.version = c.version);
    }
    return {
        get: o,
        remove: a,
        update: l
    };
}
var Pi = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 1){
        super();
        this.type = "PlaneGeometry", this.parameters = {
            width: e,
            height: t,
            widthSegments: n,
            heightSegments: i
        };
        let r = e / 2, o = t / 2, a = Math.floor(n), l = Math.floor(i), c = a + 1, h = l + 1, u = e / a, d = t / l, f = [], m = [], x = [], v = [];
        for(let g = 0; g < h; g++){
            let p = g * d - o;
            for(let _ = 0; _ < c; _++){
                let y = _ * u - r;
                m.push(y, -p, 0), x.push(0, 0, 1), v.push(_ / a), v.push(1 - g / l);
            }
        }
        for(let g1 = 0; g1 < l; g1++)for(let p1 = 0; p1 < a; p1++){
            let _1 = p1 + c * g1, y1 = p1 + c * (g1 + 1), b = p1 + 1 + c * (g1 + 1), A = p1 + 1 + c * g1;
            f.push(_1, y1, A), f.push(y1, b, A);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Pi(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}, xf = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, yf = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, vf = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, _f = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, Mf = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, bf = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, wf = "vec3 transformed = vec3( position );", Sf = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, Tf = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, Ef = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, Af = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, Cf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, Lf = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, Rf = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, Pf = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, If = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, Df = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, Ff = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, Nf = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, Bf = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, zf = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Uf = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, Of = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Hf = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, kf = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, Gf = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Vf = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, Wf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
		envColor = envMapTexelToLinear( envColor );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, qf = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Xf = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Jf = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Yf = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Zf = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, $f = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, jf = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Qf = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Kf = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, ep = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, tp = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, np = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, ip = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, rp = `#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, sp = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, op = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, ap = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, lp = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, cp = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, hp = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, up = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, dp = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, fp = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, pp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, mp = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, gp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, xp = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, yp = `#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`, vp = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, _p = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, Mp = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, bp = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, wp = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, Sp = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, Tp = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, Ep = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, Ap = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, Cp = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, Lp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Rp = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, Pp = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, Ip = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, Dp = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, Fp = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, Np = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, Bp = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, zp = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, Up = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, Op = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, Hp = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, kp = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, Gp = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, Vp = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, Wp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, qp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, Xp = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, Jp = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, Yp = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, Zp = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`, $p = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, jp = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, Qp = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, Kp = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, em = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, tm = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, nm = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, im = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( float roughness, float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,
		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,
		vec3 attenuationColor, float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, rm = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, sm = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, om = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, am = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, lm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, cm = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, hm = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`, um = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, dm = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, fm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, pm = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, mm = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, gm = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, xm = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, ym = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, vm = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, _m = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Mm = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, bm = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, wm = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, Sm = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Tm = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Em = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Am = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, Cm = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Lm = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, Rm = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`, Pm = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Im = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Dm = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, Fm = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, Nm = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Bm = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, zm = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Um = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Om = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Hm = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, km = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, Gm = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Fe = {
    alphamap_fragment: xf,
    alphamap_pars_fragment: yf,
    alphatest_fragment: vf,
    alphatest_pars_fragment: _f,
    aomap_fragment: Mf,
    aomap_pars_fragment: bf,
    begin_vertex: wf,
    beginnormal_vertex: Sf,
    bsdfs: Tf,
    bumpmap_pars_fragment: Ef,
    clipping_planes_fragment: Af,
    clipping_planes_pars_fragment: Cf,
    clipping_planes_pars_vertex: Lf,
    clipping_planes_vertex: Rf,
    color_fragment: Pf,
    color_pars_fragment: If,
    color_pars_vertex: Df,
    color_vertex: Ff,
    common: Nf,
    cube_uv_reflection_fragment: Bf,
    defaultnormal_vertex: zf,
    displacementmap_pars_vertex: Uf,
    displacementmap_vertex: Of,
    emissivemap_fragment: Hf,
    emissivemap_pars_fragment: kf,
    encodings_fragment: Gf,
    encodings_pars_fragment: Vf,
    envmap_fragment: Wf,
    envmap_common_pars_fragment: qf,
    envmap_pars_fragment: Xf,
    envmap_pars_vertex: Jf,
    envmap_physical_pars_fragment: rp,
    envmap_vertex: Yf,
    fog_vertex: Zf,
    fog_pars_vertex: $f,
    fog_fragment: jf,
    fog_pars_fragment: Qf,
    gradientmap_pars_fragment: Kf,
    lightmap_fragment: ep,
    lightmap_pars_fragment: tp,
    lights_lambert_vertex: np,
    lights_pars_begin: ip,
    lights_toon_fragment: sp,
    lights_toon_pars_fragment: op,
    lights_phong_fragment: ap,
    lights_phong_pars_fragment: lp,
    lights_physical_fragment: cp,
    lights_physical_pars_fragment: hp,
    lights_fragment_begin: up,
    lights_fragment_maps: dp,
    lights_fragment_end: fp,
    logdepthbuf_fragment: pp,
    logdepthbuf_pars_fragment: mp,
    logdepthbuf_pars_vertex: gp,
    logdepthbuf_vertex: xp,
    map_fragment: yp,
    map_pars_fragment: vp,
    map_particle_fragment: _p,
    map_particle_pars_fragment: Mp,
    metalnessmap_fragment: bp,
    metalnessmap_pars_fragment: wp,
    morphnormal_vertex: Sp,
    morphtarget_pars_vertex: Tp,
    morphtarget_vertex: Ep,
    normal_fragment_begin: Ap,
    normal_fragment_maps: Cp,
    normal_pars_fragment: Lp,
    normal_pars_vertex: Rp,
    normal_vertex: Pp,
    normalmap_pars_fragment: Ip,
    clearcoat_normal_fragment_begin: Dp,
    clearcoat_normal_fragment_maps: Fp,
    clearcoat_pars_fragment: Np,
    output_fragment: Bp,
    packing: zp,
    premultiplied_alpha_fragment: Up,
    project_vertex: Op,
    dithering_fragment: Hp,
    dithering_pars_fragment: kp,
    roughnessmap_fragment: Gp,
    roughnessmap_pars_fragment: Vp,
    shadowmap_pars_fragment: Wp,
    shadowmap_pars_vertex: qp,
    shadowmap_vertex: Xp,
    shadowmask_pars_fragment: Jp,
    skinbase_vertex: Yp,
    skinning_pars_vertex: Zp,
    skinning_vertex: $p,
    skinnormal_vertex: jp,
    specularmap_fragment: Qp,
    specularmap_pars_fragment: Kp,
    tonemapping_fragment: em,
    tonemapping_pars_fragment: tm,
    transmission_fragment: nm,
    transmission_pars_fragment: im,
    uv_pars_fragment: rm,
    uv_pars_vertex: sm,
    uv_vertex: om,
    uv2_pars_fragment: am,
    uv2_pars_vertex: lm,
    uv2_vertex: cm,
    worldpos_vertex: hm,
    background_vert: um,
    background_frag: dm,
    cube_vert: fm,
    cube_frag: pm,
    depth_vert: mm,
    depth_frag: gm,
    distanceRGBA_vert: xm,
    distanceRGBA_frag: ym,
    equirect_vert: vm,
    equirect_frag: _m,
    linedashed_vert: Mm,
    linedashed_frag: bm,
    meshbasic_vert: wm,
    meshbasic_frag: Sm,
    meshlambert_vert: Tm,
    meshlambert_frag: Em,
    meshmatcap_vert: Am,
    meshmatcap_frag: Cm,
    meshnormal_vert: Lm,
    meshnormal_frag: Rm,
    meshphong_vert: Pm,
    meshphong_frag: Im,
    meshphysical_vert: Dm,
    meshphysical_frag: Fm,
    meshtoon_vert: Nm,
    meshtoon_frag: Bm,
    points_vert: zm,
    points_frag: Um,
    shadow_vert: Om,
    shadow_frag: Hm,
    sprite_vert: km,
    sprite_frag: Gm
}, ie = {
    common: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        map: {
            value: null
        },
        uvTransform: {
            value: new lt
        },
        uv2Transform: {
            value: new lt
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        }
    },
    specularmap: {
        specularMap: {
            value: null
        }
    },
    envmap: {
        envMap: {
            value: null
        },
        flipEnvMap: {
            value: -1
        },
        reflectivity: {
            value: 1
        },
        ior: {
            value: 1.5
        },
        refractionRatio: {
            value: .98
        }
    },
    aomap: {
        aoMap: {
            value: null
        },
        aoMapIntensity: {
            value: 1
        }
    },
    lightmap: {
        lightMap: {
            value: null
        },
        lightMapIntensity: {
            value: 1
        }
    },
    emissivemap: {
        emissiveMap: {
            value: null
        }
    },
    bumpmap: {
        bumpMap: {
            value: null
        },
        bumpScale: {
            value: 1
        }
    },
    normalmap: {
        normalMap: {
            value: null
        },
        normalScale: {
            value: new X(1, 1)
        }
    },
    displacementmap: {
        displacementMap: {
            value: null
        },
        displacementScale: {
            value: 1
        },
        displacementBias: {
            value: 0
        }
    },
    roughnessmap: {
        roughnessMap: {
            value: null
        }
    },
    metalnessmap: {
        metalnessMap: {
            value: null
        }
    },
    gradientmap: {
        gradientMap: {
            value: null
        }
    },
    fog: {
        fogDensity: {
            value: 25e-5
        },
        fogNear: {
            value: 1
        },
        fogFar: {
            value: 2e3
        },
        fogColor: {
            value: new ae(16777215)
        }
    },
    lights: {
        ambientLightColor: {
            value: []
        },
        lightProbe: {
            value: []
        },
        directionalLights: {
            value: [],
            properties: {
                direction: {},
                color: {}
            }
        },
        directionalLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        directionalShadowMap: {
            value: []
        },
        directionalShadowMatrix: {
            value: []
        },
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {}
            }
        },
        spotLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {
            value: []
        },
        spotShadowMatrix: {
            value: []
        },
        pointLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                decay: {},
                distance: {}
            }
        },
        pointLightShadows: {
            value: [],
            properties: {
                shadowBias: {},
                shadowNormalBias: {},
                shadowRadius: {},
                shadowMapSize: {},
                shadowCameraNear: {},
                shadowCameraFar: {}
            }
        },
        pointShadowMap: {
            value: []
        },
        pointShadowMatrix: {
            value: []
        },
        hemisphereLights: {
            value: [],
            properties: {
                direction: {},
                skyColor: {},
                groundColor: {}
            }
        },
        rectAreaLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                width: {},
                height: {}
            }
        },
        ltc_1: {
            value: null
        },
        ltc_2: {
            value: null
        }
    },
    points: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        size: {
            value: 1
        },
        scale: {
            value: 1
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    },
    sprite: {
        diffuse: {
            value: new ae(16777215)
        },
        opacity: {
            value: 1
        },
        center: {
            value: new X(.5, .5)
        },
        rotation: {
            value: 0
        },
        map: {
            value: null
        },
        alphaMap: {
            value: null
        },
        alphaTest: {
            value: 0
        },
        uvTransform: {
            value: new lt
        }
    }
}, qt = {
    basic: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.fog
        ]),
        vertexShader: Fe.meshbasic_vert,
        fragmentShader: Fe.meshbasic_frag
    },
    lambert: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshlambert_vert,
        fragmentShader: Fe.meshlambert_frag
    },
    phong: {
        uniforms: yt([
            ie.common,
            ie.specularmap,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                specular: {
                    value: new ae(1118481)
                },
                shininess: {
                    value: 30
                }
            }
        ]),
        vertexShader: Fe.meshphong_vert,
        fragmentShader: Fe.meshphong_frag
    },
    standard: {
        uniforms: yt([
            ie.common,
            ie.envmap,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.roughnessmap,
            ie.metalnessmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                },
                roughness: {
                    value: 1
                },
                metalness: {
                    value: 0
                },
                envMapIntensity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshphysical_vert,
        fragmentShader: Fe.meshphysical_frag
    },
    toon: {
        uniforms: yt([
            ie.common,
            ie.aomap,
            ie.lightmap,
            ie.emissivemap,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.gradientmap,
            ie.fog,
            ie.lights,
            {
                emissive: {
                    value: new ae(0)
                }
            }
        ]),
        vertexShader: Fe.meshtoon_vert,
        fragmentShader: Fe.meshtoon_frag
    },
    matcap: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            ie.fog,
            {
                matcap: {
                    value: null
                }
            }
        ]),
        vertexShader: Fe.meshmatcap_vert,
        fragmentShader: Fe.meshmatcap_frag
    },
    points: {
        uniforms: yt([
            ie.points,
            ie.fog
        ]),
        vertexShader: Fe.points_vert,
        fragmentShader: Fe.points_frag
    },
    dashed: {
        uniforms: yt([
            ie.common,
            ie.fog,
            {
                scale: {
                    value: 1
                },
                dashSize: {
                    value: 1
                },
                totalSize: {
                    value: 2
                }
            }
        ]),
        vertexShader: Fe.linedashed_vert,
        fragmentShader: Fe.linedashed_frag
    },
    depth: {
        uniforms: yt([
            ie.common,
            ie.displacementmap
        ]),
        vertexShader: Fe.depth_vert,
        fragmentShader: Fe.depth_frag
    },
    normal: {
        uniforms: yt([
            ie.common,
            ie.bumpmap,
            ie.normalmap,
            ie.displacementmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.meshnormal_vert,
        fragmentShader: Fe.meshnormal_frag
    },
    sprite: {
        uniforms: yt([
            ie.sprite,
            ie.fog
        ]),
        vertexShader: Fe.sprite_vert,
        fragmentShader: Fe.sprite_frag
    },
    background: {
        uniforms: {
            uvTransform: {
                value: new lt
            },
            t2D: {
                value: null
            }
        },
        vertexShader: Fe.background_vert,
        fragmentShader: Fe.background_frag
    },
    cube: {
        uniforms: yt([
            ie.envmap,
            {
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.cube_vert,
        fragmentShader: Fe.cube_frag
    },
    equirect: {
        uniforms: {
            tEquirect: {
                value: null
            }
        },
        vertexShader: Fe.equirect_vert,
        fragmentShader: Fe.equirect_frag
    },
    distanceRGBA: {
        uniforms: yt([
            ie.common,
            ie.displacementmap,
            {
                referencePosition: {
                    value: new M
                },
                nearDistance: {
                    value: 1
                },
                farDistance: {
                    value: 1e3
                }
            }
        ]),
        vertexShader: Fe.distanceRGBA_vert,
        fragmentShader: Fe.distanceRGBA_frag
    },
    shadow: {
        uniforms: yt([
            ie.lights,
            ie.fog,
            {
                color: {
                    value: new ae(0)
                },
                opacity: {
                    value: 1
                }
            }
        ]),
        vertexShader: Fe.shadow_vert,
        fragmentShader: Fe.shadow_frag
    }
};
qt.physical = {
    uniforms: yt([
        qt.standard.uniforms,
        {
            clearcoat: {
                value: 0
            },
            clearcoatMap: {
                value: null
            },
            clearcoatRoughness: {
                value: 0
            },
            clearcoatRoughnessMap: {
                value: null
            },
            clearcoatNormalScale: {
                value: new X(1, 1)
            },
            clearcoatNormalMap: {
                value: null
            },
            sheen: {
                value: 0
            },
            sheenColor: {
                value: new ae(0)
            },
            sheenColorMap: {
                value: null
            },
            sheenRoughness: {
                value: 0
            },
            sheenRoughnessMap: {
                value: null
            },
            transmission: {
                value: 0
            },
            transmissionMap: {
                value: null
            },
            transmissionSamplerSize: {
                value: new X
            },
            transmissionSamplerMap: {
                value: null
            },
            thickness: {
                value: 0
            },
            thicknessMap: {
                value: null
            },
            attenuationDistance: {
                value: 0
            },
            attenuationColor: {
                value: new ae(0)
            },
            specularIntensity: {
                value: 0
            },
            specularIntensityMap: {
                value: null
            },
            specularColor: {
                value: new ae(1, 1, 1)
            },
            specularColorMap: {
                value: null
            }
        }
    ]),
    vertexShader: Fe.meshphysical_vert,
    fragmentShader: Fe.meshphysical_frag
};
function Vm(s, e, t, n, i) {
    let r = new ae(0), o = 0, a, l, c = null, h = 0, u = null;
    function d(m, x) {
        let v = !1, g = x.isScene === !0 ? x.background : null;
        g && g.isTexture && (g = e.get(g));
        let p = s.xr, _ = p.getSession && p.getSession();
        _ && _.environmentBlendMode === "additive" && (g = null), g === null ? f(r, o) : g && g.isColor && (f(g, 1), v = !0), (s.autoClear || v) && s.clear(s.autoClearColor, s.autoClearDepth, s.autoClearStencil), g && (g.isCubeTexture || g.mapping === Pr) ? (l === void 0 && (l = new st(new wn(1, 1, 1), new sn({
            name: "BackgroundCubeMaterial",
            uniforms: Ri(qt.cube.uniforms),
            vertexShader: qt.cube.vertexShader,
            fragmentShader: qt.cube.fragmentShader,
            side: it,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), l.geometry.deleteAttribute("normal"), l.geometry.deleteAttribute("uv"), l.onBeforeRender = function(y, b, A) {
            this.matrixWorld.copyPosition(A.matrixWorld);
        }, Object.defineProperty(l.material, "envMap", {
            get: function() {
                return this.uniforms.envMap.value;
            }
        }), n.update(l)), l.material.uniforms.envMap.value = g, l.material.uniforms.flipEnvMap.value = g.isCubeTexture && g.isRenderTargetTexture === !1 ? -1 : 1, (c !== g || h !== g.version || u !== s.toneMapping) && (l.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(l, l.geometry, l.material, 0, 0, null)) : g && g.isTexture && (a === void 0 && (a = new st(new Pi(2, 2), new sn({
            name: "BackgroundMaterial",
            uniforms: Ri(qt.background.uniforms),
            vertexShader: qt.background.vertexShader,
            fragmentShader: qt.background.fragmentShader,
            side: Ai,
            depthTest: !1,
            depthWrite: !1,
            fog: !1
        })), a.geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
            get: function() {
                return this.uniforms.t2D.value;
            }
        }), n.update(a)), a.material.uniforms.t2D.value = g, g.matrixAutoUpdate === !0 && g.updateMatrix(), a.material.uniforms.uvTransform.value.copy(g.matrix), (c !== g || h !== g.version || u !== s.toneMapping) && (a.material.needsUpdate = !0, c = g, h = g.version, u = s.toneMapping), m.unshift(a, a.geometry, a.material, 0, 0, null));
    }
    function f(m, x) {
        t.buffers.color.setClear(m.r, m.g, m.b, x, i);
    }
    return {
        getClearColor: function() {
            return r;
        },
        setClearColor: function(m, x = 1) {
            r.set(m), o = x, f(r, o);
        },
        getClearAlpha: function() {
            return o;
        },
        setClearAlpha: function(m) {
            o = m, f(r, o);
        },
        render: d
    };
}
function Wm(s, e, t, n) {
    let i = s.getParameter(34921), r = n.isWebGL2 ? null : e.get("OES_vertex_array_object"), o = n.isWebGL2 || r !== null, a = {}, l = x(null), c = l;
    function h(E, D, U, F, O) {
        let ne = !1;
        if (o) {
            let ce = m(F, U, D);
            c !== ce && (c = ce, d(c.object)), ne = v(F, O), ne && g(F, O);
        } else {
            let ce1 = D.wireframe === !0;
            (c.geometry !== F.id || c.program !== U.id || c.wireframe !== ce1) && (c.geometry = F.id, c.program = U.id, c.wireframe = ce1, ne = !0);
        }
        E.isInstancedMesh === !0 && (ne = !0), O !== null && t.update(O, 34963), ne && (L(E, D, U, F), O !== null && s.bindBuffer(34963, t.get(O).buffer));
    }
    function u() {
        return n.isWebGL2 ? s.createVertexArray() : r.createVertexArrayOES();
    }
    function d(E) {
        return n.isWebGL2 ? s.bindVertexArray(E) : r.bindVertexArrayOES(E);
    }
    function f(E) {
        return n.isWebGL2 ? s.deleteVertexArray(E) : r.deleteVertexArrayOES(E);
    }
    function m(E, D, U) {
        let F = U.wireframe === !0, O = a[E.id];
        O === void 0 && (O = {}, a[E.id] = O);
        let ne = O[D.id];
        ne === void 0 && (ne = {}, O[D.id] = ne);
        let ce = ne[F];
        return ce === void 0 && (ce = x(u()), ne[F] = ce), ce;
    }
    function x(E) {
        let D = [], U = [], F = [];
        for(let O = 0; O < i; O++)D[O] = 0, U[O] = 0, F[O] = 0;
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: D,
            enabledAttributes: U,
            attributeDivisors: F,
            object: E,
            attributes: {},
            index: null
        };
    }
    function v(E, D) {
        let U = c.attributes, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = U[ne], V = F[ne];
            if (ce === void 0 || ce.attribute !== V || ce.data !== V.data) return !0;
            O++;
        }
        return c.attributesNum !== O || c.index !== D;
    }
    function g(E, D) {
        let U = {}, F = E.attributes, O = 0;
        for(let ne in F){
            let ce = F[ne], V = {};
            V.attribute = ce, ce.data && (V.data = ce.data), U[ne] = V, O++;
        }
        c.attributes = U, c.attributesNum = O, c.index = D;
    }
    function p() {
        let E = c.newAttributes;
        for(let D = 0, U = E.length; D < U; D++)E[D] = 0;
    }
    function _(E) {
        y(E, 0);
    }
    function y(E, D) {
        let U = c.newAttributes, F = c.enabledAttributes, O = c.attributeDivisors;
        U[E] = 1, F[E] === 0 && (s.enableVertexAttribArray(E), F[E] = 1), O[E] !== D && ((n.isWebGL2 ? s : e.get("ANGLE_instanced_arrays"))[n.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](E, D), O[E] = D);
    }
    function b() {
        let E = c.newAttributes, D = c.enabledAttributes;
        for(let U = 0, F = D.length; U < F; U++)D[U] !== E[U] && (s.disableVertexAttribArray(U), D[U] = 0);
    }
    function A(E, D, U, F, O, ne) {
        n.isWebGL2 === !0 && (U === 5124 || U === 5125) ? s.vertexAttribIPointer(E, D, U, O, ne) : s.vertexAttribPointer(E, D, U, F, O, ne);
    }
    function L(E, D, U, F) {
        if (n.isWebGL2 === !1 && (E.isInstancedMesh || F.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
        p();
        let O = F.attributes, ne = U.getAttributes(), ce = D.defaultAttributeValues;
        for(let V in ne){
            let W = ne[V];
            if (W.location >= 0) {
                let he = O[V];
                if (he === void 0 && (V === "instanceMatrix" && E.instanceMatrix && (he = E.instanceMatrix), V === "instanceColor" && E.instanceColor && (he = E.instanceColor)), he !== void 0) {
                    let le = he.normalized, fe = he.itemSize, Be = t.get(he);
                    if (Be === void 0) continue;
                    let Y = Be.buffer, Ce = Be.type, ye = Be.bytesPerElement;
                    if (he.isInterleavedBufferAttribute) {
                        let ge = he.data, xe = ge.stride, Oe = he.offset;
                        if (ge && ge.isInstancedInterleavedBuffer) {
                            for(let G = 0; G < W.locationSize; G++)y(W.location + G, ge.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = ge.meshPerAttribute * ge.count);
                        } else for(let G1 = 0; G1 < W.locationSize; G1++)_(W.location + G1);
                        s.bindBuffer(34962, Y);
                        for(let G2 = 0; G2 < W.locationSize; G2++)A(W.location + G2, fe / W.locationSize, Ce, le, xe * ye, (Oe + fe / W.locationSize * G2) * ye);
                    } else {
                        if (he.isInstancedBufferAttribute) {
                            for(let ge1 = 0; ge1 < W.locationSize; ge1++)y(W.location + ge1, he.meshPerAttribute);
                            E.isInstancedMesh !== !0 && F._maxInstanceCount === void 0 && (F._maxInstanceCount = he.meshPerAttribute * he.count);
                        } else for(let ge2 = 0; ge2 < W.locationSize; ge2++)_(W.location + ge2);
                        s.bindBuffer(34962, Y);
                        for(let ge3 = 0; ge3 < W.locationSize; ge3++)A(W.location + ge3, fe / W.locationSize, Ce, le, fe * ye, fe / W.locationSize * ge3 * ye);
                    }
                } else if (ce !== void 0) {
                    let le1 = ce[V];
                    if (le1 !== void 0) switch(le1.length){
                        case 2:
                            s.vertexAttrib2fv(W.location, le1);
                            break;
                        case 3:
                            s.vertexAttrib3fv(W.location, le1);
                            break;
                        case 4:
                            s.vertexAttrib4fv(W.location, le1);
                            break;
                        default:
                            s.vertexAttrib1fv(W.location, le1);
                    }
                }
            }
        }
        b();
    }
    function I() {
        P();
        for(let E in a){
            let D = a[E];
            for(let U in D){
                let F = D[U];
                for(let O in F)f(F[O].object), delete F[O];
                delete D[U];
            }
            delete a[E];
        }
    }
    function k(E) {
        if (a[E.id] === void 0) return;
        let D = a[E.id];
        for(let U in D){
            let F = D[U];
            for(let O in F)f(F[O].object), delete F[O];
            delete D[U];
        }
        delete a[E.id];
    }
    function B(E) {
        for(let D in a){
            let U = a[D];
            if (U[E.id] === void 0) continue;
            let F = U[E.id];
            for(let O in F)f(F[O].object), delete F[O];
            delete U[E.id];
        }
    }
    function P() {
        w(), c !== l && (c = l, d(c.object));
    }
    function w() {
        l.geometry = null, l.program = null, l.wireframe = !1;
    }
    return {
        setup: h,
        reset: P,
        resetDefaultState: w,
        dispose: I,
        releaseStatesOfGeometry: k,
        releaseStatesOfProgram: B,
        initAttributes: p,
        enableAttribute: _,
        disableUnusedAttributes: b
    };
}
function qm(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(c) {
        r = c;
    }
    function a(c, h) {
        s.drawArrays(r, c, h), t.update(h, r, 1);
    }
    function l(c, h, u) {
        if (u === 0) return;
        let d, f;
        if (i) d = s, f = "drawArraysInstanced";
        else if (d = e.get("ANGLE_instanced_arrays"), f = "drawArraysInstancedANGLE", d === null) {
            console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        d[f](r, c, h, u), t.update(h, r, u);
    }
    this.setMode = o, this.render = a, this.renderInstances = l;
}
function Xm(s, e, t) {
    let n;
    function i() {
        if (n !== void 0) return n;
        if (e.has("EXT_texture_filter_anisotropic") === !0) {
            let L = e.get("EXT_texture_filter_anisotropic");
            n = s.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else n = 0;
        return n;
    }
    function r(L) {
        if (L === "highp") {
            if (s.getShaderPrecisionFormat(35633, 36338).precision > 0 && s.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
            L = "mediump";
        }
        return L === "mediump" && s.getShaderPrecisionFormat(35633, 36337).precision > 0 && s.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
    }
    let o = typeof WebGL2RenderingContext < "u" && s instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && s instanceof WebGL2ComputeRenderingContext, a = t.precision !== void 0 ? t.precision : "highp", l = r(a);
    l !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", l, "instead."), a = l);
    let c = o || e.has("WEBGL_draw_buffers"), h = t.logarithmicDepthBuffer === !0, u = s.getParameter(34930), d = s.getParameter(35660), f = s.getParameter(3379), m = s.getParameter(34076), x = s.getParameter(34921), v = s.getParameter(36347), g = s.getParameter(36348), p = s.getParameter(36349), _ = d > 0, y = o || e.has("OES_texture_float"), b = _ && y, A = o ? s.getParameter(36183) : 0;
    return {
        isWebGL2: o,
        drawBuffers: c,
        getMaxAnisotropy: i,
        getMaxPrecision: r,
        precision: a,
        logarithmicDepthBuffer: h,
        maxTextures: u,
        maxVertexTextures: d,
        maxTextureSize: f,
        maxCubemapSize: m,
        maxAttributes: x,
        maxVertexUniforms: v,
        maxVaryings: g,
        maxFragmentUniforms: p,
        vertexTextures: _,
        floatFragmentTextures: y,
        floatVertexTextures: b,
        maxSamples: A
    };
}
function Jm(s) {
    let e = this, t = null, n = 0, i = !1, r = !1, o = new Wt, a = new lt, l = {
        value: null,
        needsUpdate: !1
    };
    this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(u, d, f) {
        let m = u.length !== 0 || d || n !== 0 || i;
        return i = d, t = h(u, f, 0), n = u.length, m;
    }, this.beginShadows = function() {
        r = !0, h(null);
    }, this.endShadows = function() {
        r = !1, c();
    }, this.setState = function(u, d, f) {
        let m = u.clippingPlanes, x = u.clipIntersection, v = u.clipShadows, g = s.get(u);
        if (!i || m === null || m.length === 0 || r && !v) r ? h(null) : c();
        else {
            let p = r ? 0 : n, _ = p * 4, y = g.clippingState || null;
            l.value = y, y = h(m, d, _, f);
            for(let b = 0; b !== _; ++b)y[b] = t[b];
            g.clippingState = y, this.numIntersection = x ? this.numPlanes : 0, this.numPlanes += p;
        }
    };
    function c() {
        l.value !== t && (l.value = t, l.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0;
    }
    function h(u, d, f, m) {
        let x = u !== null ? u.length : 0, v = null;
        if (x !== 0) {
            if (v = l.value, m !== !0 || v === null) {
                let g = f + x * 4, p = d.matrixWorldInverse;
                a.getNormalMatrix(p), (v === null || v.length < g) && (v = new Float32Array(g));
                for(let _ = 0, y = f; _ !== x; ++_, y += 4)o.copy(u[_]).applyMatrix4(p, a), o.normal.toArray(v, y), v[y + 3] = o.constant;
            }
            l.value = v, l.needsUpdate = !0;
        }
        return e.numPlanes = x, e.numIntersection = 0, v;
    }
}
function Ym(s) {
    let e = new WeakMap;
    function t(o, a) {
        return a === Ds ? o.mapping = Bi : a === Fs && (o.mapping = zi), o;
    }
    function n(o) {
        if (o && o.isTexture && o.isRenderTargetTexture === !1) {
            let a = o.mapping;
            if (a === Ds || a === Fs) if (e.has(o)) {
                let l = e.get(o).texture;
                return t(l, o.mapping);
            } else {
                let l1 = o.image;
                if (l1 && l1.height > 0) {
                    let c = s.getRenderTarget(), h = new js(l1.height / 2);
                    return h.fromEquirectangularTexture(s, o), e.set(o, h), s.setRenderTarget(c), o.addEventListener("dispose", i), t(h.texture, o.mapping);
                } else return null;
            }
        }
        return o;
    }
    function i(o) {
        let a = o.target;
        a.removeEventListener("dispose", i);
        let l = e.get(a);
        l !== void 0 && (e.delete(a), l.dispose());
    }
    function r() {
        e = new WeakMap;
    }
    return {
        get: n,
        dispose: r
    };
}
var Fr = class extends Ir {
    constructor(e = -1, t = 1, n = 1, i = -1, r = .1, o = 2e3){
        super();
        this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = t, this.top = n, this.bottom = i, this.near = r, this.far = o, this.updateProjectionMatrix();
    }
    copy(e, t) {
        return super.copy(e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
    }
    setViewOffset(e, t, n, i, r, o) {
        this.view === null && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = i, this.view.width = r, this.view.height = o, this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1), this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        let e = (this.right - this.left) / (2 * this.zoom), t = (this.top - this.bottom) / (2 * this.zoom), n = (this.right + this.left) / 2, i = (this.top + this.bottom) / 2, r = n - e, o = n + e, a = i + t, l = i - t;
        if (this.view !== null && this.view.enabled) {
            let c = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            r += c * this.view.offsetX, o = r + c * this.view.width, a -= h * this.view.offsetY, l = a - h * this.view.height;
        }
        this.projectionMatrix.makeOrthographic(r, o, a, l, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, this.view !== null && (t.object.view = Object.assign({}, this.view)), t;
    }
};
Fr.prototype.isOrthographicCamera = !0;
var Gi = class extends sn {
    constructor(e){
        super(e);
        this.type = "RawShaderMaterial";
    }
};
Gi.prototype.isRawShaderMaterial = !0;
var Ei = 4, Mn = 8, Vt = Math.pow(2, Mn), sh = [
    .125,
    .215,
    .35,
    .446,
    .526,
    .582
], oh = Mn - Ei + 1 + sh.length, pi = 20, Hs = {
    [Nt]: 0,
    [Oi]: 1
}, Go = new Fr, { _lodPlanes: ji , _sizeLods: Ll , _sigmas: ls  } = Zm(), Rl = new ae, Vo = null, On = (1 + Math.sqrt(5)) / 2, mi = 1 / On, Pl = [
    new M(1, 1, 1),
    new M(-1, 1, 1),
    new M(1, 1, -1),
    new M(-1, 1, -1),
    new M(0, On, mi),
    new M(0, On, -mi),
    new M(mi, 0, On),
    new M(-mi, 0, On),
    new M(On, mi, 0),
    new M(-On, mi, 0)
], ah = class {
    constructor(e){
        this._renderer = e, this._pingPongRenderTarget = null, this._blurMaterial = $m(pi), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = .1, i = 100) {
        Vo = this._renderer.getRenderTarget();
        let r = this._allocateTargets();
        return this._sceneToCubeUV(e, n, i, r), t > 0 && this._blur(r, 0, 0, t), this._applyPMREM(r), this._cleanup(r), r;
    }
    fromEquirectangular(e) {
        return this._fromTexture(e);
    }
    fromCubemap(e) {
        return this._fromTexture(e);
    }
    compileCubemapShader() {
        this._cubemapShader === null && (this._cubemapShader = Fl(), this._compileMaterial(this._cubemapShader));
    }
    compileEquirectangularShader() {
        this._equirectShader === null && (this._equirectShader = Dl(), this._compileMaterial(this._equirectShader));
    }
    dispose() {
        this._blurMaterial.dispose(), this._cubemapShader !== null && this._cubemapShader.dispose(), this._equirectShader !== null && this._equirectShader.dispose();
        for(let e = 0; e < ji.length; e++)ji[e].dispose();
    }
    _cleanup(e) {
        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Vo), e.scissorTest = !1, cs(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e) {
        Vo = this._renderer.getRenderTarget();
        let t = this._allocateTargets(e);
        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t;
    }
    _allocateTargets(e) {
        let t = {
            magFilter: tt,
            minFilter: tt,
            generateMipmaps: !1,
            type: kn,
            format: ct,
            encoding: Nt,
            depthBuffer: !1
        }, n = Il(t);
        return n.depthBuffer = !e, this._pingPongRenderTarget = Il(t), n;
    }
    _compileMaterial(e) {
        let t = new st(ji[0], e);
        this._renderer.compile(t, Go);
    }
    _sceneToCubeUV(e, t, n, i) {
        let a = new ut(90, 1, t, n), l = [
            1,
            -1,
            1,
            1,
            1,
            1
        ], c = [
            1,
            1,
            1,
            -1,
            -1,
            -1
        ], h = this._renderer, u = h.autoClear, d = h.toneMapping;
        h.getClearColor(Rl), h.toneMapping = _n, h.autoClear = !1;
        let f = new hn({
            name: "PMREM.Background",
            side: it,
            depthWrite: !1,
            depthTest: !1
        }), m = new st(new wn, f), x = !1, v = e.background;
        v ? v.isColor && (f.color.copy(v), e.background = null, x = !0) : (f.color.copy(Rl), x = !0);
        for(let g = 0; g < 6; g++){
            let p = g % 3;
            p == 0 ? (a.up.set(0, l[g], 0), a.lookAt(c[g], 0, 0)) : p == 1 ? (a.up.set(0, 0, l[g]), a.lookAt(0, c[g], 0)) : (a.up.set(0, l[g], 0), a.lookAt(0, 0, c[g])), cs(i, p * Vt, g > 2 ? Vt : 0, Vt, Vt), h.setRenderTarget(i), x && h.render(m, a), h.render(e, a);
        }
        m.geometry.dispose(), m.material.dispose(), h.toneMapping = d, h.autoClear = u, e.background = v;
    }
    _setEncoding(e, t) {
        this._renderer.capabilities.isWebGL2 === !0 && t.format === ct && t.type === rn && t.encoding === Oi ? e.value = Hs[Nt] : e.value = Hs[t.encoding];
    }
    _textureToCubeUV(e, t) {
        let n = this._renderer, i = e.mapping === Bi || e.mapping === zi;
        i ? this._cubemapShader == null && (this._cubemapShader = Fl()) : this._equirectShader == null && (this._equirectShader = Dl());
        let r = i ? this._cubemapShader : this._equirectShader, o = new st(ji[0], r), a = r.uniforms;
        a.envMap.value = e, i || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), this._setEncoding(a.inputEncoding, e), cs(t, 0, 0, 3 * Vt, 2 * Vt), n.setRenderTarget(t), n.render(o, Go);
    }
    _applyPMREM(e) {
        let t = this._renderer, n = t.autoClear;
        t.autoClear = !1;
        for(let i = 1; i < oh; i++){
            let r = Math.sqrt(ls[i] * ls[i] - ls[i - 1] * ls[i - 1]), o = Pl[(i - 1) % Pl.length];
            this._blur(e, i - 1, i, r, o);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, r) {
        let o = this._pingPongRenderTarget;
        this._halfBlur(e, o, t, n, i, "latitudinal", r), this._halfBlur(o, e, n, n, i, "longitudinal", r);
    }
    _halfBlur(e, t, n, i, r, o, a) {
        let l = this._renderer, c = this._blurMaterial;
        o !== "latitudinal" && o !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
        let h = 3, u = new st(ji[i], c), d = c.uniforms, f = Ll[n] - 1, m = isFinite(r) ? Math.PI / (2 * f) : 2 * Math.PI / (2 * pi - 1), x = r / m, v = isFinite(r) ? 1 + Math.floor(h * x) : pi;
        v > pi && console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${pi}`);
        let g = [], p = 0;
        for(let A = 0; A < pi; ++A){
            let L = A / x, I = Math.exp(-L * L / 2);
            g.push(I), A == 0 ? p += I : A < v && (p += 2 * I);
        }
        for(let A1 = 0; A1 < g.length; A1++)g[A1] = g[A1] / p;
        d.envMap.value = e.texture, d.samples.value = v, d.weights.value = g, d.latitudinal.value = o === "latitudinal", a && (d.poleAxis.value = a), d.dTheta.value = m, d.mipInt.value = Mn - n;
        let _ = Ll[i], y = 3 * Math.max(0, Vt - 2 * _), b = (i === 0 ? 0 : 2 * Vt) + 2 * _ * (i > Mn - Ei ? i - Mn + Ei : 0);
        cs(t, y, b, 3 * _, 2 * _), l.setRenderTarget(t), l.render(u, Go);
    }
};
function Zm() {
    let s = [], e = [], t = [], n = Mn;
    for(let i = 0; i < oh; i++){
        let r = Math.pow(2, n);
        e.push(r);
        let o = 1 / r;
        i > Mn - Ei ? o = sh[i - Mn + Ei - 1] : i == 0 && (o = 0), t.push(o);
        let a = 1 / (r - 1), l = -a / 2, c = 1 + a / 2, h = [
            l,
            l,
            c,
            l,
            c,
            c,
            l,
            l,
            c,
            c,
            l,
            c
        ], u = 6, d = 6, f = 3, m = 2, x = 1, v = new Float32Array(f * d * u), g = new Float32Array(m * d * u), p = new Float32Array(x * d * u);
        for(let y = 0; y < u; y++){
            let b = y % 3 * 2 / 3 - 1, A = y > 2 ? 0 : -1, L = [
                b,
                A,
                0,
                b + 2 / 3,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A,
                0,
                b + 2 / 3,
                A + 1,
                0,
                b,
                A + 1,
                0
            ];
            v.set(L, f * d * y), g.set(h, m * d * y);
            let I = [
                y,
                y,
                y,
                y,
                y,
                y
            ];
            p.set(I, x * d * y);
        }
        let _ = new _e;
        _.setAttribute("position", new Ue(v, f)), _.setAttribute("uv", new Ue(g, m)), _.setAttribute("faceIndex", new Ue(p, x)), s.push(_), n > Ei && n--;
    }
    return {
        _lodPlanes: s,
        _sizeLods: e,
        _sigmas: t
    };
}
function Il(s) {
    let e = new At(3 * Vt, 3 * Vt, s);
    return e.texture.mapping = Pr, e.texture.name = "PMREM.cubeUv", e.scissorTest = !0, e;
}
function cs(s, e, t, n, i) {
    s.viewport.set(e, t, n, i), s.scissor.set(e, t, n, i);
}
function $m(s) {
    let e = new Float32Array(s), t = new M(0, 1, 0);
    return new Gi({
        name: "SphericalGaussianBlur",
        defines: {
            n: s
        },
        uniforms: {
            envMap: {
                value: null
            },
            samples: {
                value: 1
            },
            weights: {
                value: e
            },
            latitudinal: {
                value: !1
            },
            dTheta: {
                value: 0
            },
            mipInt: {
                value: 0
            },
            poleAxis: {
                value: t
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${pa()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Dl() {
    let s = new X(1, 1);
    return new Gi({
        name: "EquirectangularToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            texelSize: {
                value: s
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${pa()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function Fl() {
    return new Gi({
        name: "CubemapToCubeUV",
        uniforms: {
            envMap: {
                value: null
            },
            inputEncoding: {
                value: Hs[Nt]
            }
        },
        vertexShader: fa(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${pa()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,
        blending: vn,
        depthTest: !1,
        depthWrite: !1
    });
}
function fa() {
    return `

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function pa() {
    return `

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;
}
function jm(s) {
    let e = new WeakMap, t = null;
    function n(a) {
        if (a && a.isTexture && a.isRenderTargetTexture === !1) {
            let l = a.mapping, c = l === Ds || l === Fs, h = l === Bi || l === zi;
            if (c || h) {
                if (e.has(a)) return e.get(a).texture;
                {
                    let u = a.image;
                    if (c && u && u.height > 0 || h && u && i(u)) {
                        let d = s.getRenderTarget();
                        t === null && (t = new ah(s));
                        let f = c ? t.fromEquirectangular(a) : t.fromCubemap(a);
                        return e.set(a, f), s.setRenderTarget(d), a.addEventListener("dispose", r), f.texture;
                    } else return null;
                }
            }
        }
        return a;
    }
    function i(a) {
        let l = 0, c = 6;
        for(let h = 0; h < c; h++)a[h] !== void 0 && l++;
        return l === c;
    }
    function r(a) {
        let l = a.target;
        l.removeEventListener("dispose", r);
        let c = e.get(l);
        c !== void 0 && (e.delete(l), c.dispose());
    }
    function o() {
        e = new WeakMap, t !== null && (t.dispose(), t = null);
    }
    return {
        get: n,
        dispose: o
    };
}
function Qm(s) {
    let e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch(n){
            case "WEBGL_depth_texture":
                i = s.getExtension("WEBGL_depth_texture") || s.getExtension("MOZ_WEBGL_depth_texture") || s.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case "EXT_texture_filter_anisotropic":
                i = s.getExtension("EXT_texture_filter_anisotropic") || s.getExtension("MOZ_EXT_texture_filter_anisotropic") || s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case "WEBGL_compressed_texture_s3tc":
                i = s.getExtension("WEBGL_compressed_texture_s3tc") || s.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case "WEBGL_compressed_texture_pvrtc":
                i = s.getExtension("WEBGL_compressed_texture_pvrtc") || s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            default:
                i = s.getExtension(n);
        }
        return e[n] = i, i;
    }
    return {
        has: function(n) {
            return t(n) !== null;
        },
        init: function(n) {
            n.isWebGL2 ? t("EXT_color_buffer_float") : (t("WEBGL_depth_texture"), t("OES_texture_float"), t("OES_texture_half_float"), t("OES_texture_half_float_linear"), t("OES_standard_derivatives"), t("OES_element_index_uint"), t("OES_vertex_array_object"), t("ANGLE_instanced_arrays")), t("OES_texture_float_linear"), t("EXT_color_buffer_half_float"), t("WEBGL_multisampled_render_to_texture");
        },
        get: function(n) {
            let i = t(n);
            return i === null && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), i;
        }
    };
}
function Km(s, e, t, n) {
    let i = {}, r = new WeakMap;
    function o(u) {
        let d = u.target;
        d.index !== null && e.remove(d.index);
        for(let m in d.attributes)e.remove(d.attributes[m]);
        d.removeEventListener("dispose", o), delete i[d.id];
        let f = r.get(d);
        f && (e.remove(f), r.delete(d)), n.releaseStatesOfGeometry(d), d.isInstancedBufferGeometry === !0 && delete d._maxInstanceCount, t.memory.geometries--;
    }
    function a(u, d) {
        return i[d.id] === !0 || (d.addEventListener("dispose", o), i[d.id] = !0, t.memory.geometries++), d;
    }
    function l(u) {
        let d = u.attributes;
        for(let m in d)e.update(d[m], 34962);
        let f = u.morphAttributes;
        for(let m1 in f){
            let x = f[m1];
            for(let v = 0, g = x.length; v < g; v++)e.update(x[v], 34962);
        }
    }
    function c(u) {
        let d = [], f = u.index, m = u.attributes.position, x = 0;
        if (f !== null) {
            let p = f.array;
            x = f.version;
            for(let _ = 0, y = p.length; _ < y; _ += 3){
                let b = p[_ + 0], A = p[_ + 1], L = p[_ + 2];
                d.push(b, A, A, L, L, b);
            }
        } else {
            let p1 = m.array;
            x = m.version;
            for(let _1 = 0, y1 = p1.length / 3 - 1; _1 < y1; _1 += 3){
                let b1 = _1 + 0, A1 = _1 + 1, L1 = _1 + 2;
                d.push(b1, A1, A1, L1, L1, b1);
            }
        }
        let v = new (Yc(d) > 65535 ? Zs : Ys)(d, 1);
        v.version = x;
        let g = r.get(u);
        g && e.remove(g), r.set(u, v);
    }
    function h(u) {
        let d = r.get(u);
        if (d) {
            let f = u.index;
            f !== null && d.version < f.version && c(u);
        } else c(u);
        return r.get(u);
    }
    return {
        get: a,
        update: l,
        getWireframeAttribute: h
    };
}
function eg(s, e, t, n) {
    let i = n.isWebGL2, r;
    function o(d) {
        r = d;
    }
    let a, l;
    function c(d) {
        a = d.type, l = d.bytesPerElement;
    }
    function h(d, f) {
        s.drawElements(r, f, a, d * l), t.update(f, r, 1);
    }
    function u(d, f, m) {
        if (m === 0) return;
        let x, v;
        if (i) x = s, v = "drawElementsInstanced";
        else if (x = e.get("ANGLE_instanced_arrays"), v = "drawElementsInstancedANGLE", x === null) {
            console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            return;
        }
        x[v](r, f, a, d * l, m), t.update(f, r, m);
    }
    this.setMode = o, this.setIndex = c, this.render = h, this.renderInstances = u;
}
function tg(s) {
    let e = {
        geometries: 0,
        textures: 0
    }, t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    function n(r, o, a) {
        switch(t.calls++, o){
            case 4:
                t.triangles += a * (r / 3);
                break;
            case 1:
                t.lines += a * (r / 2);
                break;
            case 3:
                t.lines += a * (r - 1);
                break;
            case 2:
                t.lines += a * r;
                break;
            case 0:
                t.points += a * r;
                break;
            default:
                console.error("THREE.WebGLInfo: Unknown draw mode:", o);
                break;
        }
    }
    function i() {
        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0;
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n
    };
}
var Qs = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
Qs.prototype.isDataTexture2DArray = !0;
function ng(s, e) {
    return s[0] - e[0];
}
function ig(s, e) {
    return Math.abs(e[1]) - Math.abs(s[1]);
}
function Nl(s, e) {
    let t = 1, n = e.isInterleavedBufferAttribute ? e.data.array : e.array;
    n instanceof Int8Array ? t = 127 : n instanceof Int16Array ? t = 32767 : n instanceof Int32Array ? t = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", n), s.divideScalar(t);
}
function rg(s, e, t) {
    let n = {}, i = new Float32Array(8), r = new WeakMap, o = new M, a = [];
    for(let c = 0; c < 8; c++)a[c] = [
        c,
        0
    ];
    function l(c, h, u, d) {
        let f = c.morphTargetInfluences;
        if (e.isWebGL2 === !0) {
            let m = h.morphAttributes.position.length, x = r.get(h);
            if (x === void 0 || x.count !== m) {
                x !== void 0 && x.texture.dispose();
                let p = h.morphAttributes.normal !== void 0, _ = h.morphAttributes.position, y = h.morphAttributes.normal || [], b = h.attributes.position.count, A = p === !0 ? 2 : 1, L = b * A, I = 1;
                L > e.maxTextureSize && (I = Math.ceil(L / e.maxTextureSize), L = e.maxTextureSize);
                let k = new Float32Array(L * I * 4 * m), B = new Qs(k, L, I, m);
                B.format = ct, B.type = nn, B.needsUpdate = !0;
                let P = A * 4;
                for(let w = 0; w < m; w++){
                    let E = _[w], D = y[w], U = L * I * 4 * w;
                    for(let F = 0; F < E.count; F++){
                        o.fromBufferAttribute(E, F), E.normalized === !0 && Nl(o, E);
                        let O = F * P;
                        k[U + O + 0] = o.x, k[U + O + 1] = o.y, k[U + O + 2] = o.z, k[U + O + 3] = 0, p === !0 && (o.fromBufferAttribute(D, F), D.normalized === !0 && Nl(o, D), k[U + O + 4] = o.x, k[U + O + 5] = o.y, k[U + O + 6] = o.z, k[U + O + 7] = 0);
                    }
                }
                x = {
                    count: m,
                    texture: B,
                    size: new X(L, I)
                }, r.set(h, x);
            }
            let v = 0;
            for(let p1 = 0; p1 < f.length; p1++)v += f[p1];
            let g = h.morphTargetsRelative ? 1 : 1 - v;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", g), d.getUniforms().setValue(s, "morphTargetInfluences", f), d.getUniforms().setValue(s, "morphTargetsTexture", x.texture, t), d.getUniforms().setValue(s, "morphTargetsTextureSize", x.size);
        } else {
            let m1 = f === void 0 ? 0 : f.length, x1 = n[h.id];
            if (x1 === void 0 || x1.length !== m1) {
                x1 = [];
                for(let y1 = 0; y1 < m1; y1++)x1[y1] = [
                    y1,
                    0
                ];
                n[h.id] = x1;
            }
            for(let y2 = 0; y2 < m1; y2++){
                let b1 = x1[y2];
                b1[0] = y2, b1[1] = f[y2];
            }
            x1.sort(ig);
            for(let y3 = 0; y3 < 8; y3++)y3 < m1 && x1[y3][1] ? (a[y3][0] = x1[y3][0], a[y3][1] = x1[y3][1]) : (a[y3][0] = Number.MAX_SAFE_INTEGER, a[y3][1] = 0);
            a.sort(ng);
            let v1 = h.morphAttributes.position, g1 = h.morphAttributes.normal, p2 = 0;
            for(let y4 = 0; y4 < 8; y4++){
                let b2 = a[y4], A1 = b2[0], L1 = b2[1];
                A1 !== Number.MAX_SAFE_INTEGER && L1 ? (v1 && h.getAttribute("morphTarget" + y4) !== v1[A1] && h.setAttribute("morphTarget" + y4, v1[A1]), g1 && h.getAttribute("morphNormal" + y4) !== g1[A1] && h.setAttribute("morphNormal" + y4, g1[A1]), i[y4] = L1, p2 += L1) : (v1 && h.hasAttribute("morphTarget" + y4) === !0 && h.deleteAttribute("morphTarget" + y4), g1 && h.hasAttribute("morphNormal" + y4) === !0 && h.deleteAttribute("morphNormal" + y4), i[y4] = 0);
            }
            let _1 = h.morphTargetsRelative ? 1 : 1 - p2;
            d.getUniforms().setValue(s, "morphTargetBaseInfluence", _1), d.getUniforms().setValue(s, "morphTargetInfluences", i);
        }
    }
    return {
        update: l
    };
}
function sg(s, e, t, n) {
    let i = new WeakMap;
    function r(l) {
        let c = n.render.frame, h = l.geometry, u = e.get(l, h);
        return i.get(u) !== c && (e.update(u), i.set(u, c)), l.isInstancedMesh && (l.hasEventListener("dispose", a) === !1 && l.addEventListener("dispose", a), t.update(l.instanceMatrix, 34962), l.instanceColor !== null && t.update(l.instanceColor, 34962)), u;
    }
    function o() {
        i = new WeakMap;
    }
    function a(l) {
        let c = l.target;
        c.removeEventListener("dispose", a), t.remove(c.instanceMatrix), c.instanceColor !== null && t.remove(c.instanceColor);
    }
    return {
        update: r,
        dispose: o
    };
}
var ma = class extends ot {
    constructor(e = null, t = 1, n = 1, i = 1){
        super(null);
        this.image = {
            data: e,
            width: t,
            height: n,
            depth: i
        }, this.magFilter = rt, this.minFilter = rt, this.wrapR = vt, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
ma.prototype.isDataTexture3D = !0;
var lh = new ot, ch = new Qs, hh = new ma, uh = new ki, Bl = [], zl = [], Ul = new Float32Array(16), Ol = new Float32Array(9), Hl = new Float32Array(4);
function Vi(s, e, t) {
    let n = s[0];
    if (n <= 0 || n > 0) return s;
    let i = e * t, r = Bl[i];
    if (r === void 0 && (r = new Float32Array(i), Bl[i] = r), e !== 0) {
        n.toArray(r, 0);
        for(let o = 1, a = 0; o !== e; ++o)a += t, s[o].toArray(r, a);
    }
    return r;
}
function Mt(s, e) {
    if (s.length !== e.length) return !1;
    for(let t = 0, n = s.length; t < n; t++)if (s[t] !== e[t]) return !1;
    return !0;
}
function _t(s, e) {
    for(let t = 0, n = e.length; t < n; t++)s[t] = e[t];
}
function Ks(s, e) {
    let t = zl[e];
    t === void 0 && (t = new Int32Array(e), zl[e] = t);
    for(let n = 0; n !== e; ++n)t[n] = s.allocateTextureUnit();
    return t;
}
function og(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1f(this.addr, e), t[0] = e);
}
function ag(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y) && (s.uniform2f(this.addr, e.x, e.y), t[0] = e.x, t[1] = e.y);
    else {
        if (Mt(t, e)) return;
        s.uniform2fv(this.addr, e), _t(t, e);
    }
}
function lg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) && (s.uniform3f(this.addr, e.x, e.y, e.z), t[0] = e.x, t[1] = e.y, t[2] = e.z);
    else if (e.r !== void 0) (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) && (s.uniform3f(this.addr, e.r, e.g, e.b), t[0] = e.r, t[1] = e.g, t[2] = e.b);
    else {
        if (Mt(t, e)) return;
        s.uniform3fv(this.addr, e), _t(t, e);
    }
}
function cg(s, e) {
    let t = this.cache;
    if (e.x !== void 0) (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) && (s.uniform4f(this.addr, e.x, e.y, e.z, e.w), t[0] = e.x, t[1] = e.y, t[2] = e.z, t[3] = e.w);
    else {
        if (Mt(t, e)) return;
        s.uniform4fv(this.addr, e), _t(t, e);
    }
}
function hg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix2fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Hl.set(n), s.uniformMatrix2fv(this.addr, !1, Hl), _t(t, n);
    }
}
function ug(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix3fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ol.set(n), s.uniformMatrix3fv(this.addr, !1, Ol), _t(t, n);
    }
}
function dg(s, e) {
    let t = this.cache, n = e.elements;
    if (n === void 0) {
        if (Mt(t, e)) return;
        s.uniformMatrix4fv(this.addr, !1, e), _t(t, e);
    } else {
        if (Mt(t, n)) return;
        Ul.set(n), s.uniformMatrix4fv(this.addr, !1, Ul), _t(t, n);
    }
}
function fg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1i(this.addr, e), t[0] = e);
}
function pg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2iv(this.addr, e), _t(t, e));
}
function mg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3iv(this.addr, e), _t(t, e));
}
function gg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4iv(this.addr, e), _t(t, e));
}
function xg(s, e) {
    let t = this.cache;
    t[0] !== e && (s.uniform1ui(this.addr, e), t[0] = e);
}
function yg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform2uiv(this.addr, e), _t(t, e));
}
function vg(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform3uiv(this.addr, e), _t(t, e));
}
function _g(s, e) {
    let t = this.cache;
    Mt(t, e) || (s.uniform4uiv(this.addr, e), _t(t, e));
}
function Mg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTexture2D(e || lh, i);
}
function bg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture3D(e || hh, i);
}
function wg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.safeSetTextureCube(e || uh, i);
}
function Sg(s, e, t) {
    let n = this.cache, i = t.allocateTextureUnit();
    n[0] !== i && (s.uniform1i(this.addr, i), n[0] = i), t.setTexture2DArray(e || ch, i);
}
function Tg(s) {
    switch(s){
        case 5126:
            return og;
        case 35664:
            return ag;
        case 35665:
            return lg;
        case 35666:
            return cg;
        case 35674:
            return hg;
        case 35675:
            return ug;
        case 35676:
            return dg;
        case 5124:
        case 35670:
            return fg;
        case 35667:
        case 35671:
            return pg;
        case 35668:
        case 35672:
            return mg;
        case 35669:
        case 35673:
            return gg;
        case 5125:
            return xg;
        case 36294:
            return yg;
        case 36295:
            return vg;
        case 36296:
            return _g;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return Mg;
        case 35679:
        case 36299:
        case 36307:
            return bg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return wg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Sg;
    }
}
function Eg(s, e) {
    s.uniform1fv(this.addr, e);
}
function Ag(s, e) {
    let t = Vi(e, this.size, 2);
    s.uniform2fv(this.addr, t);
}
function Cg(s, e) {
    let t = Vi(e, this.size, 3);
    s.uniform3fv(this.addr, t);
}
function Lg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniform4fv(this.addr, t);
}
function Rg(s, e) {
    let t = Vi(e, this.size, 4);
    s.uniformMatrix2fv(this.addr, !1, t);
}
function Pg(s, e) {
    let t = Vi(e, this.size, 9);
    s.uniformMatrix3fv(this.addr, !1, t);
}
function Ig(s, e) {
    let t = Vi(e, this.size, 16);
    s.uniformMatrix4fv(this.addr, !1, t);
}
function Dg(s, e) {
    s.uniform1iv(this.addr, e);
}
function Fg(s, e) {
    s.uniform2iv(this.addr, e);
}
function Ng(s, e) {
    s.uniform3iv(this.addr, e);
}
function Bg(s, e) {
    s.uniform4iv(this.addr, e);
}
function zg(s, e) {
    s.uniform1uiv(this.addr, e);
}
function Ug(s, e) {
    s.uniform2uiv(this.addr, e);
}
function Og(s, e) {
    s.uniform3uiv(this.addr, e);
}
function Hg(s, e) {
    s.uniform4uiv(this.addr, e);
}
function kg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTexture2D(e[r] || lh, i[r]);
}
function Gg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture3D(e[r] || hh, i[r]);
}
function Vg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.safeSetTextureCube(e[r] || uh, i[r]);
}
function Wg(s, e, t) {
    let n = e.length, i = Ks(t, n);
    s.uniform1iv(this.addr, i);
    for(let r = 0; r !== n; ++r)t.setTexture2DArray(e[r] || ch, i[r]);
}
function qg(s) {
    switch(s){
        case 5126:
            return Eg;
        case 35664:
            return Ag;
        case 35665:
            return Cg;
        case 35666:
            return Lg;
        case 35674:
            return Rg;
        case 35675:
            return Pg;
        case 35676:
            return Ig;
        case 5124:
        case 35670:
            return Dg;
        case 35667:
        case 35671:
            return Fg;
        case 35668:
        case 35672:
            return Ng;
        case 35669:
        case 35673:
            return Bg;
        case 5125:
            return zg;
        case 36294:
            return Ug;
        case 36295:
            return Og;
        case 36296:
            return Hg;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return kg;
        case 35679:
        case 36299:
        case 36307:
            return Gg;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return Vg;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return Wg;
    }
}
function Xg(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.setValue = Tg(e.type);
}
function dh(s, e, t) {
    this.id = s, this.addr = t, this.cache = [], this.size = e.size, this.setValue = qg(e.type);
}
dh.prototype.updateCache = function(s) {
    let e = this.cache;
    s instanceof Float32Array && e.length !== s.length && (this.cache = new Float32Array(s.length)), _t(e, s);
};
function fh(s) {
    this.id = s, this.seq = [], this.map = {};
}
fh.prototype.setValue = function(s, e, t) {
    let n = this.seq;
    for(let i = 0, r = n.length; i !== r; ++i){
        let o = n[i];
        o.setValue(s, e[o.id], t);
    }
};
var Wo = /(\w+)(\])?(\[|\.)?/g;
function kl(s, e) {
    s.seq.push(e), s.map[e.id] = e;
}
function Jg(s, e, t) {
    let n = s.name, i = n.length;
    for(Wo.lastIndex = 0;;){
        let r = Wo.exec(n), o = Wo.lastIndex, a = r[1], l = r[2] === "]", c = r[3];
        if (l && (a = a | 0), c === void 0 || c === "[" && o + 2 === i) {
            kl(t, c === void 0 ? new Xg(a, s, e) : new dh(a, s, e));
            break;
        } else {
            let u = t.map[a];
            u === void 0 && (u = new fh(a), kl(t, u)), t = u;
        }
    }
}
function bn(s, e) {
    this.seq = [], this.map = {};
    let t = s.getProgramParameter(e, 35718);
    for(let n = 0; n < t; ++n){
        let i = s.getActiveUniform(e, n), r = s.getUniformLocation(e, i.name);
        Jg(i, r, this);
    }
}
bn.prototype.setValue = function(s, e, t, n) {
    let i = this.map[e];
    i !== void 0 && i.setValue(s, t, n);
};
bn.prototype.setOptional = function(s, e, t) {
    let n = e[t];
    n !== void 0 && this.setValue(s, t, n);
};
bn.upload = function(s, e, t, n) {
    for(let i = 0, r = e.length; i !== r; ++i){
        let o = e[i], a = t[o.id];
        a.needsUpdate !== !1 && o.setValue(s, a.value, n);
    }
};
bn.seqWithValue = function(s, e) {
    let t = [];
    for(let n = 0, i = s.length; n !== i; ++n){
        let r = s[n];
        r.id in e && t.push(r);
    }
    return t;
};
function Gl(s, e, t) {
    let n = s.createShader(e);
    return s.shaderSource(n, t), s.compileShader(n), n;
}
var Yg = 0;
function Zg(s) {
    let e = s.split(`
`);
    for(let t = 0; t < e.length; t++)e[t] = t + 1 + ": " + e[t];
    return e.join(`
`);
}
function ph(s) {
    switch(s){
        case Nt:
            return [
                "Linear",
                "( value )"
            ];
        case Oi:
            return [
                "sRGB",
                "( value )"
            ];
        default:
            return console.warn("THREE.WebGLProgram: Unsupported encoding:", s), [
                "Linear",
                "( value )"
            ];
    }
}
function Vl(s, e, t) {
    let n = s.getShaderParameter(e, 35713), i = s.getShaderInfoLog(e).trim();
    return n && i === "" ? "" : t.toUpperCase() + `

` + i + `

` + Zg(s.getShaderSource(e));
}
function Dn(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return " + t[0] + "ToLinear" + t[1] + "; }";
}
function $g(s, e) {
    let t = ph(e);
    return "vec4 " + s + "( vec4 value ) { return LinearTo" + t[0] + t[1] + "; }";
}
function jg(s, e) {
    let t;
    switch(e){
        case Nu:
            t = "Linear";
            break;
        case Bu:
            t = "Reinhard";
            break;
        case zu:
            t = "OptimizedCineon";
            break;
        case Uu:
            t = "ACESFilmic";
            break;
        case Ou:
            t = "Custom";
            break;
        default:
            console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), t = "Linear";
    }
    return "vec3 " + s + "( vec3 color ) { return " + t + "ToneMapping( color ); }";
}
function Qg(s) {
    return [
        s.extensionDerivatives || s.envMapCubeUV || s.bumpMap || s.tangentSpaceNormalMap || s.clearcoatNormalMap || s.flatShading || s.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "",
        (s.extensionFragDepth || s.logarithmicDepthBuffer) && s.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "",
        s.extensionDrawBuffers && s.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "",
        (s.extensionShaderTextureLOD || s.envMap || s.transmission) && s.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""
    ].filter(rr).join(`
`);
}
function Kg(s) {
    let e = [];
    for(let t in s){
        let n = s[t];
        n !== !1 && e.push("#define " + t + " " + n);
    }
    return e.join(`
`);
}
function ex(s, e) {
    let t = {}, n = s.getProgramParameter(e, 35721);
    for(let i = 0; i < n; i++){
        let r = s.getActiveAttrib(e, i), o = r.name, a = 1;
        r.type === 35674 && (a = 2), r.type === 35675 && (a = 3), r.type === 35676 && (a = 4), t[o] = {
            type: r.type,
            location: s.getAttribLocation(e, o),
            locationSize: a
        };
    }
    return t;
}
function rr(s) {
    return s !== "";
}
function Wl(s, e) {
    return s.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function ql(s, e) {
    return s.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
var tx = /^[ \t]*#include +<([\w\d./]+)>/gm;
function ra(s) {
    return s.replace(tx, nx);
}
function nx(s, e) {
    let t = Fe[e];
    if (t === void 0) throw new Error("Can not resolve #include <" + e + ">");
    return ra(t);
}
var ix = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, rx = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Xl(s) {
    return s.replace(rx, mh).replace(ix, sx);
}
function sx(s, e, t, n) {
    return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), mh(s, e, t, n);
}
function mh(s, e, t, n) {
    let i = "";
    for(let r = parseInt(e); r < parseInt(t); r++)i += n.replace(/\[\s*i\s*\]/g, "[ " + r + " ]").replace(/UNROLLED_LOOP_INDEX/g, r);
    return i;
}
function Jl(s) {
    let e = "precision " + s.precision + ` float;
precision ` + s.precision + " int;";
    return s.precision === "highp" ? e += `
#define HIGH_PRECISION` : s.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : s.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function ox(s) {
    let e = "SHADOWMAP_TYPE_BASIC";
    return s.shadowMapType === Hc ? e = "SHADOWMAP_TYPE_PCF" : s.shadowMapType === fu ? e = "SHADOWMAP_TYPE_PCF_SOFT" : s.shadowMapType === ir && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function ax(s) {
    let e = "ENVMAP_TYPE_CUBE";
    if (s.envMap) switch(s.envMapMode){
        case Bi:
        case zi:
            e = "ENVMAP_TYPE_CUBE";
            break;
        case Pr:
        case Ws:
            e = "ENVMAP_TYPE_CUBE_UV";
            break;
    }
    return e;
}
function lx(s) {
    let e = "ENVMAP_MODE_REFLECTION";
    if (s.envMap) switch(s.envMapMode){
        case zi:
        case Ws:
            e = "ENVMAP_MODE_REFRACTION";
            break;
    }
    return e;
}
function cx(s) {
    let e = "ENVMAP_BLENDING_NONE";
    if (s.envMap) switch(s.combine){
        case Vs:
            e = "ENVMAP_BLENDING_MULTIPLY";
            break;
        case Du:
            e = "ENVMAP_BLENDING_MIX";
            break;
        case Fu:
            e = "ENVMAP_BLENDING_ADD";
            break;
    }
    return e;
}
function hx(s, e, t, n) {
    let i = s.getContext(), r = t.defines, o = t.vertexShader, a = t.fragmentShader, l = ox(t), c = ax(t), h = lx(t), u = cx(t), d = t.isWebGL2 ? "" : Qg(t), f = Kg(r), m = i.createProgram(), x, v, g = t.glslVersion ? "#version " + t.glslVersion + `
` : "";
    t.isRawShaderMaterial ? (x = [
        f
    ].filter(rr).join(`
`), x.length > 0 && (x += `
`), v = [
        d,
        f
    ].filter(rr).join(`
`), v.length > 0 && (v += `
`)) : (x = [
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.instancing ? "#define USE_INSTANCING" : "",
        t.instancingColor ? "#define USE_INSTANCING_COLOR" : "",
        t.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "",
        "#define MAX_BONES " + t.maxBones,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + h : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.displacementMap && t.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.skinning ? "#define USE_SKINNING" : "",
        t.useVertexTexture ? "#define BONE_TEXTURE" : "",
        t.morphTargets ? "#define USE_MORPHTARGETS" : "",
        t.morphNormals && t.flatShading === !1 ? "#define USE_MORPHNORMALS" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "",
        t.morphTargets && t.isWebGL2 ? "#define MORPHTARGETS_COUNT " + t.morphTargetsCount : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        "uniform mat4 modelMatrix;",
        "uniform mat4 modelViewMatrix;",
        "uniform mat4 projectionMatrix;",
        "uniform mat4 viewMatrix;",
        "uniform mat3 normalMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        "#ifdef USE_INSTANCING",
        "	attribute mat4 instanceMatrix;",
        "#endif",
        "#ifdef USE_INSTANCING_COLOR",
        "	attribute vec3 instanceColor;",
        "#endif",
        "attribute vec3 position;",
        "attribute vec3 normal;",
        "attribute vec2 uv;",
        "#ifdef USE_TANGENT",
        "	attribute vec4 tangent;",
        "#endif",
        "#if defined( USE_COLOR_ALPHA )",
        "	attribute vec4 color;",
        "#elif defined( USE_COLOR )",
        "	attribute vec3 color;",
        "#endif",
        "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )",
        "	attribute vec3 morphTarget0;",
        "	attribute vec3 morphTarget1;",
        "	attribute vec3 morphTarget2;",
        "	attribute vec3 morphTarget3;",
        "	#ifdef USE_MORPHNORMALS",
        "		attribute vec3 morphNormal0;",
        "		attribute vec3 morphNormal1;",
        "		attribute vec3 morphNormal2;",
        "		attribute vec3 morphNormal3;",
        "	#else",
        "		attribute vec3 morphTarget4;",
        "		attribute vec3 morphTarget5;",
        "		attribute vec3 morphTarget6;",
        "		attribute vec3 morphTarget7;",
        "	#endif",
        "#endif",
        "#ifdef USE_SKINNING",
        "	attribute vec4 skinIndex;",
        "	attribute vec4 skinWeight;",
        "#endif",
        `
`
    ].filter(rr).join(`
`), v = [
        d,
        Jl(t),
        "#define SHADER_NAME " + t.shaderName,
        f,
        t.useFog && t.fog ? "#define USE_FOG" : "",
        t.useFog && t.fogExp2 ? "#define FOG_EXP2" : "",
        t.map ? "#define USE_MAP" : "",
        t.matcap ? "#define USE_MATCAP" : "",
        t.envMap ? "#define USE_ENVMAP" : "",
        t.envMap ? "#define " + c : "",
        t.envMap ? "#define " + h : "",
        t.envMap ? "#define " + u : "",
        t.lightMap ? "#define USE_LIGHTMAP" : "",
        t.aoMap ? "#define USE_AOMAP" : "",
        t.emissiveMap ? "#define USE_EMISSIVEMAP" : "",
        t.bumpMap ? "#define USE_BUMPMAP" : "",
        t.normalMap ? "#define USE_NORMALMAP" : "",
        t.normalMap && t.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "",
        t.normalMap && t.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "",
        t.clearcoat ? "#define USE_CLEARCOAT" : "",
        t.clearcoatMap ? "#define USE_CLEARCOATMAP" : "",
        t.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "",
        t.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "",
        t.specularMap ? "#define USE_SPECULARMAP" : "",
        t.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "",
        t.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "",
        t.roughnessMap ? "#define USE_ROUGHNESSMAP" : "",
        t.metalnessMap ? "#define USE_METALNESSMAP" : "",
        t.alphaMap ? "#define USE_ALPHAMAP" : "",
        t.alphaTest ? "#define USE_ALPHATEST" : "",
        t.sheen ? "#define USE_SHEEN" : "",
        t.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "",
        t.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "",
        t.transmission ? "#define USE_TRANSMISSION" : "",
        t.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "",
        t.thicknessMap ? "#define USE_THICKNESSMAP" : "",
        t.vertexTangents ? "#define USE_TANGENT" : "",
        t.vertexColors || t.instancingColor ? "#define USE_COLOR" : "",
        t.vertexAlphas ? "#define USE_COLOR_ALPHA" : "",
        t.vertexUvs ? "#define USE_UV" : "",
        t.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "",
        t.gradientMap ? "#define USE_GRADIENTMAP" : "",
        t.flatShading ? "#define FLAT_SHADED" : "",
        t.doubleSided ? "#define DOUBLE_SIDED" : "",
        t.flipSided ? "#define FLIP_SIDED" : "",
        t.shadowMapEnabled ? "#define USE_SHADOWMAP" : "",
        t.shadowMapEnabled ? "#define " + l : "",
        t.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "",
        t.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "",
        t.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "",
        t.logarithmicDepthBuffer && t.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "",
        (t.extensionShaderTextureLOD || t.envMap) && t.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "",
        "uniform mat4 viewMatrix;",
        "uniform vec3 cameraPosition;",
        "uniform bool isOrthographic;",
        t.toneMapping !== _n ? "#define TONE_MAPPING" : "",
        t.toneMapping !== _n ? Fe.tonemapping_pars_fragment : "",
        t.toneMapping !== _n ? jg("toneMapping", t.toneMapping) : "",
        t.dithering ? "#define DITHERING" : "",
        t.format === Gn ? "#define OPAQUE" : "",
        Fe.encodings_pars_fragment,
        t.map ? Dn("mapTexelToLinear", t.mapEncoding) : "",
        t.matcap ? Dn("matcapTexelToLinear", t.matcapEncoding) : "",
        t.envMap ? Dn("envMapTexelToLinear", t.envMapEncoding) : "",
        t.emissiveMap ? Dn("emissiveMapTexelToLinear", t.emissiveMapEncoding) : "",
        t.specularColorMap ? Dn("specularColorMapTexelToLinear", t.specularColorMapEncoding) : "",
        t.sheenColorMap ? Dn("sheenColorMapTexelToLinear", t.sheenColorMapEncoding) : "",
        t.lightMap ? Dn("lightMapTexelToLinear", t.lightMapEncoding) : "",
        $g("linearToOutputTexel", t.outputEncoding),
        t.depthPacking ? "#define DEPTH_PACKING " + t.depthPacking : "",
        `
`
    ].filter(rr).join(`
`)), o = ra(o), o = Wl(o, t), o = ql(o, t), a = ra(a), a = Wl(a, t), a = ql(a, t), o = Xl(o), a = Xl(a), t.isWebGL2 && t.isRawShaderMaterial !== !0 && (g = `#version 300 es
`, x = [
        "precision mediump sampler2DArray;",
        "#define attribute in",
        "#define varying out",
        "#define texture2D texture"
    ].join(`
`) + `
` + x, v = [
        "#define varying in",
        t.glslVersion === xl ? "" : "layout(location = 0) out highp vec4 pc_fragColor;",
        t.glslVersion === xl ? "" : "#define gl_FragColor pc_fragColor",
        "#define gl_FragDepthEXT gl_FragDepth",
        "#define texture2D texture",
        "#define textureCube texture",
        "#define texture2DProj textureProj",
        "#define texture2DLodEXT textureLod",
        "#define texture2DProjLodEXT textureProjLod",
        "#define textureCubeLodEXT textureLod",
        "#define texture2DGradEXT textureGrad",
        "#define texture2DProjGradEXT textureProjGrad",
        "#define textureCubeGradEXT textureGrad"
    ].join(`
`) + `
` + v);
    let p = g + x + o, _ = g + v + a, y = Gl(i, 35633, p), b = Gl(i, 35632, _);
    if (i.attachShader(m, y), i.attachShader(m, b), t.index0AttributeName !== void 0 ? i.bindAttribLocation(m, 0, t.index0AttributeName) : t.morphTargets === !0 && i.bindAttribLocation(m, 0, "position"), i.linkProgram(m), s.debug.checkShaderErrors) {
        let I = i.getProgramInfoLog(m).trim(), k = i.getShaderInfoLog(y).trim(), B = i.getShaderInfoLog(b).trim(), P = !0, w = !0;
        if (i.getProgramParameter(m, 35714) === !1) {
            P = !1;
            let E = Vl(i, y, "vertex"), D = Vl(i, b, "fragment");
            console.error("THREE.WebGLProgram: Shader Error " + i.getError() + " - VALIDATE_STATUS " + i.getProgramParameter(m, 35715) + `

Program Info Log: ` + I + `
` + E + `
` + D);
        } else I !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", I) : (k === "" || B === "") && (w = !1);
        w && (this.diagnostics = {
            runnable: P,
            programLog: I,
            vertexShader: {
                log: k,
                prefix: x
            },
            fragmentShader: {
                log: B,
                prefix: v
            }
        });
    }
    i.deleteShader(y), i.deleteShader(b);
    let A;
    this.getUniforms = function() {
        return A === void 0 && (A = new bn(i, m)), A;
    };
    let L;
    return this.getAttributes = function() {
        return L === void 0 && (L = ex(i, m)), L;
    }, this.destroy = function() {
        n.releaseStatesOfProgram(this), i.deleteProgram(m), this.program = void 0;
    }, this.name = t.shaderName, this.id = Yg++, this.cacheKey = e, this.usedTimes = 1, this.program = m, this.vertexShader = y, this.fragmentShader = b, this;
}
var ux = 0, gh = class {
    constructor(){
        this.shaderCache = new Map, this.materialCache = new Map;
    }
    update(e) {
        let t = e.vertexShader, n = e.fragmentShader, i = this._getShaderStage(t), r = this._getShaderStage(n), o = this._getShaderCacheForMaterial(e);
        return o.has(i) === !1 && (o.add(i), i.usedTimes++), o.has(r) === !1 && (o.add(r), r.usedTimes++), this;
    }
    remove(e) {
        let t = this.materialCache.get(e);
        for (let n of t)n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        let t = this.materialCache;
        return t.has(e) === !1 && t.set(e, new Set), t.get(e);
    }
    _getShaderStage(e) {
        let t = this.shaderCache;
        if (t.has(e) === !1) {
            let n = new xh;
            t.set(e, n);
        }
        return t.get(e);
    }
}, xh = class {
    constructor(){
        this.id = ux++, this.usedTimes = 0;
    }
};
function dx(s, e, t, n, i, r, o) {
    let a = new Js, l = new gh, c = [], h = i.isWebGL2, u = i.logarithmicDepthBuffer, d = i.floatVertexTextures, f = i.maxVertexUniforms, m = i.vertexTextures, x = i.precision, v = {
        MeshDepthMaterial: "depth",
        MeshDistanceMaterial: "distanceRGBA",
        MeshNormalMaterial: "normal",
        MeshBasicMaterial: "basic",
        MeshLambertMaterial: "lambert",
        MeshPhongMaterial: "phong",
        MeshToonMaterial: "toon",
        MeshStandardMaterial: "physical",
        MeshPhysicalMaterial: "physical",
        MeshMatcapMaterial: "matcap",
        LineBasicMaterial: "basic",
        LineDashedMaterial: "dashed",
        PointsMaterial: "points",
        ShadowMaterial: "shadow",
        SpriteMaterial: "sprite"
    };
    function g(w) {
        let D = w.skeleton.bones;
        if (d) return 1024;
        {
            let F = Math.floor((f - 20) / 4), O = Math.min(F, D.length);
            return O < D.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + D.length + " bones. This GPU supports " + O + "."), 0) : O;
        }
    }
    function p(w) {
        let E;
        return w && w.isTexture ? E = w.encoding : w && w.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), E = w.texture.encoding) : E = Nt, h && w && w.isTexture && w.format === ct && w.type === rn && w.encoding === Oi && (E = Nt), E;
    }
    function _(w, E, D, U, F) {
        let O = U.fog, ne = w.isMeshStandardMaterial ? U.environment : null, ce = (w.isMeshStandardMaterial ? t : e).get(w.envMap || ne), V = v[w.type], W = F.isSkinnedMesh ? g(F) : 0;
        w.precision !== null && (x = i.getMaxPrecision(w.precision), x !== w.precision && console.warn("THREE.WebGLProgram.getParameters:", w.precision, "not supported, using", x, "instead."));
        let he, le, fe, Be;
        if (V) {
            let xe = qt[V];
            he = xe.vertexShader, le = xe.fragmentShader;
        } else he = w.vertexShader, le = w.fragmentShader, l.update(w), fe = l.getVertexShaderID(w), Be = l.getFragmentShaderID(w);
        let Y = s.getRenderTarget(), Ce = w.alphaTest > 0, ye = w.clearcoat > 0;
        return {
            isWebGL2: h,
            shaderID: V,
            shaderName: w.type,
            vertexShader: he,
            fragmentShader: le,
            defines: w.defines,
            customVertexShaderID: fe,
            customFragmentShaderID: Be,
            isRawShaderMaterial: w.isRawShaderMaterial === !0,
            glslVersion: w.glslVersion,
            precision: x,
            instancing: F.isInstancedMesh === !0,
            instancingColor: F.isInstancedMesh === !0 && F.instanceColor !== null,
            supportsVertexTextures: m,
            outputEncoding: Y !== null ? p(Y.texture) : s.outputEncoding,
            map: !!w.map,
            mapEncoding: p(w.map),
            matcap: !!w.matcap,
            matcapEncoding: p(w.matcap),
            envMap: !!ce,
            envMapMode: ce && ce.mapping,
            envMapEncoding: p(ce),
            envMapCubeUV: !!ce && (ce.mapping === Pr || ce.mapping === Ws),
            lightMap: !!w.lightMap,
            lightMapEncoding: p(w.lightMap),
            aoMap: !!w.aoMap,
            emissiveMap: !!w.emissiveMap,
            emissiveMapEncoding: p(w.emissiveMap),
            bumpMap: !!w.bumpMap,
            normalMap: !!w.normalMap,
            objectSpaceNormalMap: w.normalMapType === zd,
            tangentSpaceNormalMap: w.normalMapType === Hi,
            clearcoat: ye,
            clearcoatMap: ye && !!w.clearcoatMap,
            clearcoatRoughnessMap: ye && !!w.clearcoatRoughnessMap,
            clearcoatNormalMap: ye && !!w.clearcoatNormalMap,
            displacementMap: !!w.displacementMap,
            roughnessMap: !!w.roughnessMap,
            metalnessMap: !!w.metalnessMap,
            specularMap: !!w.specularMap,
            specularIntensityMap: !!w.specularIntensityMap,
            specularColorMap: !!w.specularColorMap,
            specularColorMapEncoding: p(w.specularColorMap),
            alphaMap: !!w.alphaMap,
            alphaTest: Ce,
            gradientMap: !!w.gradientMap,
            sheen: w.sheen > 0,
            sheenColorMap: !!w.sheenColorMap,
            sheenColorMapEncoding: p(w.sheenColorMap),
            sheenRoughnessMap: !!w.sheenRoughnessMap,
            transmission: w.transmission > 0,
            transmissionMap: !!w.transmissionMap,
            thicknessMap: !!w.thicknessMap,
            combine: w.combine,
            vertexTangents: !!w.normalMap && !!F.geometry && !!F.geometry.attributes.tangent,
            vertexColors: w.vertexColors,
            vertexAlphas: w.vertexColors === !0 && !!F.geometry && !!F.geometry.attributes.color && F.geometry.attributes.color.itemSize === 4,
            vertexUvs: !!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatMap || !!w.clearcoatRoughnessMap || !!w.clearcoatNormalMap || !!w.displacementMap || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || !!w.sheenColorMap || !!w.sheenRoughnessMap,
            uvsVertexOnly: !(!!w.map || !!w.bumpMap || !!w.normalMap || !!w.specularMap || !!w.alphaMap || !!w.emissiveMap || !!w.roughnessMap || !!w.metalnessMap || !!w.clearcoatNormalMap || w.transmission > 0 || !!w.transmissionMap || !!w.thicknessMap || !!w.specularIntensityMap || !!w.specularColorMap || w.sheen > 0 || !!w.sheenColorMap || !!w.sheenRoughnessMap) && !!w.displacementMap,
            fog: !!O,
            useFog: w.fog,
            fogExp2: O && O.isFogExp2,
            flatShading: !!w.flatShading,
            sizeAttenuation: w.sizeAttenuation,
            logarithmicDepthBuffer: u,
            skinning: F.isSkinnedMesh === !0 && W > 0,
            maxBones: W,
            useVertexTexture: d,
            morphTargets: !!F.geometry && !!F.geometry.morphAttributes.position,
            morphNormals: !!F.geometry && !!F.geometry.morphAttributes.normal,
            morphTargetsCount: !!F.geometry && !!F.geometry.morphAttributes.position ? F.geometry.morphAttributes.position.length : 0,
            numDirLights: E.directional.length,
            numPointLights: E.point.length,
            numSpotLights: E.spot.length,
            numRectAreaLights: E.rectArea.length,
            numHemiLights: E.hemi.length,
            numDirLightShadows: E.directionalShadowMap.length,
            numPointLightShadows: E.pointShadowMap.length,
            numSpotLightShadows: E.spotShadowMap.length,
            numClippingPlanes: o.numPlanes,
            numClipIntersection: o.numIntersection,
            format: w.format,
            dithering: w.dithering,
            shadowMapEnabled: s.shadowMap.enabled && D.length > 0,
            shadowMapType: s.shadowMap.type,
            toneMapping: w.toneMapped ? s.toneMapping : _n,
            physicallyCorrectLights: s.physicallyCorrectLights,
            premultipliedAlpha: w.premultipliedAlpha,
            doubleSided: w.side === Ci,
            flipSided: w.side === it,
            depthPacking: w.depthPacking !== void 0 ? w.depthPacking : !1,
            index0AttributeName: w.index0AttributeName,
            extensionDerivatives: w.extensions && w.extensions.derivatives,
            extensionFragDepth: w.extensions && w.extensions.fragDepth,
            extensionDrawBuffers: w.extensions && w.extensions.drawBuffers,
            extensionShaderTextureLOD: w.extensions && w.extensions.shaderTextureLOD,
            rendererExtensionFragDepth: h || n.has("EXT_frag_depth"),
            rendererExtensionDrawBuffers: h || n.has("WEBGL_draw_buffers"),
            rendererExtensionShaderTextureLod: h || n.has("EXT_shader_texture_lod"),
            customProgramCacheKey: w.customProgramCacheKey()
        };
    }
    function y(w) {
        let E = [];
        if (w.shaderID ? E.push(w.shaderID) : (E.push(w.customVertexShaderID), E.push(w.customFragmentShaderID)), w.defines !== void 0) for(let D in w.defines)E.push(D), E.push(w.defines[D]);
        return w.isRawShaderMaterial === !1 && (b(E, w), A(E, w), E.push(s.outputEncoding)), E.push(w.customProgramCacheKey), E.join();
    }
    function b(w, E) {
        w.push(E.precision), w.push(E.outputEncoding), w.push(E.mapEncoding), w.push(E.matcapEncoding), w.push(E.envMapMode), w.push(E.envMapEncoding), w.push(E.lightMapEncoding), w.push(E.emissiveMapEncoding), w.push(E.combine), w.push(E.vertexUvs), w.push(E.fogExp2), w.push(E.sizeAttenuation), w.push(E.maxBones), w.push(E.morphTargetsCount), w.push(E.numDirLights), w.push(E.numPointLights), w.push(E.numSpotLights), w.push(E.numHemiLights), w.push(E.numRectAreaLights), w.push(E.numDirLightShadows), w.push(E.numPointLightShadows), w.push(E.numSpotLightShadows), w.push(E.shadowMapType), w.push(E.toneMapping), w.push(E.numClippingPlanes), w.push(E.numClipIntersection), w.push(E.format), w.push(E.specularColorMapEncoding), w.push(E.sheenColorMapEncoding);
    }
    function A(w, E) {
        a.disableAll(), E.isWebGL2 && a.enable(0), E.supportsVertexTextures && a.enable(1), E.instancing && a.enable(2), E.instancingColor && a.enable(3), E.map && a.enable(4), E.matcap && a.enable(5), E.envMap && a.enable(6), E.envMapCubeUV && a.enable(7), E.lightMap && a.enable(8), E.aoMap && a.enable(9), E.emissiveMap && a.enable(10), E.bumpMap && a.enable(11), E.normalMap && a.enable(12), E.objectSpaceNormalMap && a.enable(13), E.tangentSpaceNormalMap && a.enable(14), E.clearcoat && a.enable(15), E.clearcoatMap && a.enable(16), E.clearcoatRoughnessMap && a.enable(17), E.clearcoatNormalMap && a.enable(18), E.displacementMap && a.enable(19), E.specularMap && a.enable(20), E.roughnessMap && a.enable(21), E.metalnessMap && a.enable(22), E.gradientMap && a.enable(23), E.alphaMap && a.enable(24), E.alphaTest && a.enable(25), E.vertexColors && a.enable(26), E.vertexAlphas && a.enable(27), E.vertexUvs && a.enable(28), E.vertexTangents && a.enable(29), E.uvsVertexOnly && a.enable(30), E.fog && a.enable(31), w.push(a.mask), a.disableAll(), E.useFog && a.enable(0), E.flatShading && a.enable(1), E.logarithmicDepthBuffer && a.enable(2), E.skinning && a.enable(3), E.useVertexTexture && a.enable(4), E.morphTargets && a.enable(5), E.morphNormals && a.enable(6), E.premultipliedAlpha && a.enable(7), E.shadowMapEnabled && a.enable(8), E.physicallyCorrectLights && a.enable(9), E.doubleSided && a.enable(10), E.flipSided && a.enable(11), E.depthPacking && a.enable(12), E.dithering && a.enable(13), E.specularIntensityMap && a.enable(14), E.specularColorMap && a.enable(15), E.transmission && a.enable(16), E.transmissionMap && a.enable(17), E.thicknessMap && a.enable(18), E.sheen && a.enable(19), E.sheenColorMap && a.enable(20), E.sheenRoughnessMap && a.enable(21), w.push(a.mask);
    }
    function L(w) {
        let E = v[w.type], D;
        if (E) {
            let U = qt[E];
            D = uf.clone(U.uniforms);
        } else D = w.uniforms;
        return D;
    }
    function I(w, E) {
        let D;
        for(let U = 0, F = c.length; U < F; U++){
            let O = c[U];
            if (O.cacheKey === E) {
                D = O, ++D.usedTimes;
                break;
            }
        }
        return D === void 0 && (D = new hx(s, E, w, r), c.push(D)), D;
    }
    function k(w) {
        if (--w.usedTimes === 0) {
            let E = c.indexOf(w);
            c[E] = c[c.length - 1], c.pop(), w.destroy();
        }
    }
    function B(w) {
        l.remove(w);
    }
    function P() {
        l.dispose();
    }
    return {
        getParameters: _,
        getProgramCacheKey: y,
        getUniforms: L,
        acquireProgram: I,
        releaseProgram: k,
        releaseShaderCache: B,
        programs: c,
        dispose: P
    };
}
function fx() {
    let s = new WeakMap;
    function e(r) {
        let o = s.get(r);
        return o === void 0 && (o = {}, s.set(r, o)), o;
    }
    function t(r) {
        s.delete(r);
    }
    function n(r, o, a) {
        s.get(r)[o] = a;
    }
    function i() {
        s = new WeakMap;
    }
    return {
        get: e,
        remove: t,
        update: n,
        dispose: i
    };
}
function px(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.material.id !== e.material.id ? s.material.id - e.material.id : s.z !== e.z ? s.z - e.z : s.id - e.id;
}
function Yl(s, e) {
    return s.groupOrder !== e.groupOrder ? s.groupOrder - e.groupOrder : s.renderOrder !== e.renderOrder ? s.renderOrder - e.renderOrder : s.z !== e.z ? e.z - s.z : s.id - e.id;
}
function Zl() {
    let s = [], e = 0, t = [], n = [], i = [];
    function r() {
        e = 0, t.length = 0, n.length = 0, i.length = 0;
    }
    function o(u, d, f, m, x, v) {
        let g = s[e];
        return g === void 0 ? (g = {
            id: u.id,
            object: u,
            geometry: d,
            material: f,
            groupOrder: m,
            renderOrder: u.renderOrder,
            z: x,
            group: v
        }, s[e] = g) : (g.id = u.id, g.object = u, g.geometry = d, g.material = f, g.groupOrder = m, g.renderOrder = u.renderOrder, g.z = x, g.group = v), e++, g;
    }
    function a(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.push(g) : f.transparent === !0 ? i.push(g) : t.push(g);
    }
    function l(u, d, f, m, x, v) {
        let g = o(u, d, f, m, x, v);
        f.transmission > 0 ? n.unshift(g) : f.transparent === !0 ? i.unshift(g) : t.unshift(g);
    }
    function c(u, d) {
        t.length > 1 && t.sort(u || px), n.length > 1 && n.sort(d || Yl), i.length > 1 && i.sort(d || Yl);
    }
    function h() {
        for(let u = e, d = s.length; u < d; u++){
            let f = s[u];
            if (f.id === null) break;
            f.id = null, f.object = null, f.geometry = null, f.material = null, f.group = null;
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: r,
        push: a,
        unshift: l,
        finish: h,
        sort: c
    };
}
function mx() {
    let s = new WeakMap;
    function e(n, i) {
        let r;
        return s.has(n) === !1 ? (r = new Zl, s.set(n, [
            r
        ])) : i >= s.get(n).length ? (r = new Zl, s.get(n).push(r)) : r = s.get(n)[i], r;
    }
    function t() {
        s = new WeakMap;
    }
    return {
        get: e,
        dispose: t
    };
}
function gx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        direction: new M,
                        color: new ae
                    };
                    break;
                case "SpotLight":
                    t = {
                        position: new M,
                        direction: new M,
                        color: new ae,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0
                    };
                    break;
                case "PointLight":
                    t = {
                        position: new M,
                        color: new ae,
                        distance: 0,
                        decay: 0
                    };
                    break;
                case "HemisphereLight":
                    t = {
                        direction: new M,
                        skyColor: new ae,
                        groundColor: new ae
                    };
                    break;
                case "RectAreaLight":
                    t = {
                        color: new ae,
                        position: new M,
                        halfWidth: new M,
                        halfHeight: new M
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
function xx() {
    let s = {};
    return {
        get: function(e) {
            if (s[e.id] !== void 0) return s[e.id];
            let t;
            switch(e.type){
                case "DirectionalLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "SpotLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X
                    };
                    break;
                case "PointLight":
                    t = {
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new X,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
            }
            return s[e.id] = t, t;
        }
    };
}
var yx = 0;
function vx(s, e) {
    return (e.castShadow ? 1 : 0) - (s.castShadow ? 1 : 0);
}
function _x(s, e) {
    let t = new gx, n = xx(), i = {
        version: 0,
        hash: {
            directionalLength: -1,
            pointLength: -1,
            spotLength: -1,
            rectAreaLength: -1,
            hemiLength: -1,
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1
        },
        ambient: [
            0,
            0,
            0
        ],
        probe: [],
        directional: [],
        directionalShadow: [],
        directionalShadowMap: [],
        directionalShadowMatrix: [],
        spot: [],
        spotShadow: [],
        spotShadowMap: [],
        spotShadowMatrix: [],
        rectArea: [],
        rectAreaLTC1: null,
        rectAreaLTC2: null,
        point: [],
        pointShadow: [],
        pointShadowMap: [],
        pointShadowMatrix: [],
        hemi: []
    };
    for(let h = 0; h < 9; h++)i.probe.push(new M);
    let r = new M, o = new pe, a = new pe;
    function l(h, u) {
        let d = 0, f = 0, m = 0;
        for(let k = 0; k < 9; k++)i.probe[k].set(0, 0, 0);
        let x = 0, v = 0, g = 0, p = 0, _ = 0, y = 0, b = 0, A = 0;
        h.sort(vx);
        let L = u !== !0 ? Math.PI : 1;
        for(let k1 = 0, B = h.length; k1 < B; k1++){
            let P = h[k1], w = P.color, E = P.intensity, D = P.distance, U = P.shadow && P.shadow.map ? P.shadow.map.texture : null;
            if (P.isAmbientLight) d += w.r * E * L, f += w.g * E * L, m += w.b * E * L;
            else if (P.isLightProbe) for(let F = 0; F < 9; F++)i.probe[F].addScaledVector(P.sh.coefficients[F], E);
            else if (P.isDirectionalLight) {
                let F1 = t.get(P);
                if (F1.color.copy(P.color).multiplyScalar(P.intensity * L), P.castShadow) {
                    let O = P.shadow, ne = n.get(P);
                    ne.shadowBias = O.bias, ne.shadowNormalBias = O.normalBias, ne.shadowRadius = O.radius, ne.shadowMapSize = O.mapSize, i.directionalShadow[x] = ne, i.directionalShadowMap[x] = U, i.directionalShadowMatrix[x] = P.shadow.matrix, y++;
                }
                i.directional[x] = F1, x++;
            } else if (P.isSpotLight) {
                let F2 = t.get(P);
                if (F2.position.setFromMatrixPosition(P.matrixWorld), F2.color.copy(w).multiplyScalar(E * L), F2.distance = D, F2.coneCos = Math.cos(P.angle), F2.penumbraCos = Math.cos(P.angle * (1 - P.penumbra)), F2.decay = P.decay, P.castShadow) {
                    let O1 = P.shadow, ne1 = n.get(P);
                    ne1.shadowBias = O1.bias, ne1.shadowNormalBias = O1.normalBias, ne1.shadowRadius = O1.radius, ne1.shadowMapSize = O1.mapSize, i.spotShadow[g] = ne1, i.spotShadowMap[g] = U, i.spotShadowMatrix[g] = P.shadow.matrix, A++;
                }
                i.spot[g] = F2, g++;
            } else if (P.isRectAreaLight) {
                let F3 = t.get(P);
                F3.color.copy(w).multiplyScalar(E), F3.halfWidth.set(P.width * .5, 0, 0), F3.halfHeight.set(0, P.height * .5, 0), i.rectArea[p] = F3, p++;
            } else if (P.isPointLight) {
                let F4 = t.get(P);
                if (F4.color.copy(P.color).multiplyScalar(P.intensity * L), F4.distance = P.distance, F4.decay = P.decay, P.castShadow) {
                    let O2 = P.shadow, ne2 = n.get(P);
                    ne2.shadowBias = O2.bias, ne2.shadowNormalBias = O2.normalBias, ne2.shadowRadius = O2.radius, ne2.shadowMapSize = O2.mapSize, ne2.shadowCameraNear = O2.camera.near, ne2.shadowCameraFar = O2.camera.far, i.pointShadow[v] = ne2, i.pointShadowMap[v] = U, i.pointShadowMatrix[v] = P.shadow.matrix, b++;
                }
                i.point[v] = F4, v++;
            } else if (P.isHemisphereLight) {
                let F5 = t.get(P);
                F5.skyColor.copy(P.color).multiplyScalar(E * L), F5.groundColor.copy(P.groundColor).multiplyScalar(E * L), i.hemi[_] = F5, _++;
            }
        }
        p > 0 && (e.isWebGL2 || s.has("OES_texture_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_FLOAT_1, i.rectAreaLTC2 = ie.LTC_FLOAT_2) : s.has("OES_texture_half_float_linear") === !0 ? (i.rectAreaLTC1 = ie.LTC_HALF_1, i.rectAreaLTC2 = ie.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = d, i.ambient[1] = f, i.ambient[2] = m;
        let I = i.hash;
        (I.directionalLength !== x || I.pointLength !== v || I.spotLength !== g || I.rectAreaLength !== p || I.hemiLength !== _ || I.numDirectionalShadows !== y || I.numPointShadows !== b || I.numSpotShadows !== A) && (i.directional.length = x, i.spot.length = g, i.rectArea.length = p, i.point.length = v, i.hemi.length = _, i.directionalShadow.length = y, i.directionalShadowMap.length = y, i.pointShadow.length = b, i.pointShadowMap.length = b, i.spotShadow.length = A, i.spotShadowMap.length = A, i.directionalShadowMatrix.length = y, i.pointShadowMatrix.length = b, i.spotShadowMatrix.length = A, I.directionalLength = x, I.pointLength = v, I.spotLength = g, I.rectAreaLength = p, I.hemiLength = _, I.numDirectionalShadows = y, I.numPointShadows = b, I.numSpotShadows = A, i.version = yx++);
    }
    function c(h, u) {
        let d = 0, f = 0, m = 0, x = 0, v = 0, g = u.matrixWorldInverse;
        for(let p = 0, _ = h.length; p < _; p++){
            let y = h[p];
            if (y.isDirectionalLight) {
                let b = i.directional[d];
                b.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b.direction.sub(r), b.direction.transformDirection(g), d++;
            } else if (y.isSpotLight) {
                let b1 = i.spot[m];
                b1.position.setFromMatrixPosition(y.matrixWorld), b1.position.applyMatrix4(g), b1.direction.setFromMatrixPosition(y.matrixWorld), r.setFromMatrixPosition(y.target.matrixWorld), b1.direction.sub(r), b1.direction.transformDirection(g), m++;
            } else if (y.isRectAreaLight) {
                let b2 = i.rectArea[x];
                b2.position.setFromMatrixPosition(y.matrixWorld), b2.position.applyMatrix4(g), a.identity(), o.copy(y.matrixWorld), o.premultiply(g), a.extractRotation(o), b2.halfWidth.set(y.width * .5, 0, 0), b2.halfHeight.set(0, y.height * .5, 0), b2.halfWidth.applyMatrix4(a), b2.halfHeight.applyMatrix4(a), x++;
            } else if (y.isPointLight) {
                let b3 = i.point[f];
                b3.position.setFromMatrixPosition(y.matrixWorld), b3.position.applyMatrix4(g), f++;
            } else if (y.isHemisphereLight) {
                let b4 = i.hemi[v];
                b4.direction.setFromMatrixPosition(y.matrixWorld), b4.direction.transformDirection(g), b4.direction.normalize(), v++;
            }
        }
    }
    return {
        setup: l,
        setupView: c,
        state: i
    };
}
function $l(s, e) {
    let t = new _x(s, e), n = [], i = [];
    function r() {
        n.length = 0, i.length = 0;
    }
    function o(u) {
        n.push(u);
    }
    function a(u) {
        i.push(u);
    }
    function l(u) {
        t.setup(n, u);
    }
    function c(u) {
        t.setupView(n, u);
    }
    return {
        init: r,
        state: {
            lightsArray: n,
            shadowsArray: i,
            lights: t
        },
        setupLights: l,
        setupLightsView: c,
        pushLight: o,
        pushShadow: a
    };
}
function Mx(s, e) {
    let t = new WeakMap;
    function n(r, o = 0) {
        let a;
        return t.has(r) === !1 ? (a = new $l(s, e), t.set(r, [
            a
        ])) : o >= t.get(r).length ? (a = new $l(s, e), t.get(r).push(a)) : a = t.get(r)[o], a;
    }
    function i() {
        t = new WeakMap;
    }
    return {
        get: n,
        dispose: i
    };
}
var eo = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDepthMaterial", this.depthPacking = Nd, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
    }
};
eo.prototype.isMeshDepthMaterial = !0;
var to = class extends dt {
    constructor(e){
        super();
        this.type = "MeshDistanceMaterial", this.referencePosition = new M, this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
    }
};
to.prototype.isMeshDistanceMaterial = !0;
var bx = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, wx = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function yh(s, e, t) {
    let n = new Dr, i = new X, r = new X, o = new Ve, a = new eo({
        depthPacking: Bd
    }), l = new to, c = {}, h = t.maxTextureSize, u = {
        0: it,
        1: Ai,
        2: Ci
    }, d = new sn({
        defines: {
            VSM_SAMPLES: 8
        },
        uniforms: {
            shadow_pass: {
                value: null
            },
            resolution: {
                value: new X
            },
            radius: {
                value: 4
            }
        },
        vertexShader: bx,
        fragmentShader: wx
    }), f = d.clone();
    f.defines.HORIZONTAL_PASS = 1;
    let m = new _e;
    m.setAttribute("position", new Ue(new Float32Array([
        -1,
        -1,
        .5,
        3,
        -1,
        .5,
        -1,
        3,
        .5
    ]), 3));
    let x = new st(m, d), v = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = Hc, this.render = function(y, b, A) {
        if (v.enabled === !1 || v.autoUpdate === !1 && v.needsUpdate === !1 || y.length === 0) return;
        let L = s.getRenderTarget(), I = s.getActiveCubeFace(), k = s.getActiveMipmapLevel(), B = s.state;
        B.setBlending(vn), B.buffers.color.setClear(1, 1, 1, 1), B.buffers.depth.setTest(!0), B.setScissorTest(!1);
        for(let P = 0, w = y.length; P < w; P++){
            let E = y[P], D = E.shadow;
            if (D === void 0) {
                console.warn("THREE.WebGLShadowMap:", E, "has no shadow.");
                continue;
            }
            if (D.autoUpdate === !1 && D.needsUpdate === !1) continue;
            i.copy(D.mapSize);
            let U = D.getFrameExtents();
            if (i.multiply(U), r.copy(D.mapSize), (i.x > h || i.y > h) && (i.x > h && (r.x = Math.floor(h / U.x), i.x = r.x * U.x, D.mapSize.x = r.x), i.y > h && (r.y = Math.floor(h / U.y), i.y = r.y * U.y, D.mapSize.y = r.y)), D.map === null && !D.isPointLightShadow && this.type === ir) {
                let O = {
                    minFilter: tt,
                    magFilter: tt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O), D.map.texture.name = E.name + ".shadowMap", D.mapPass = new At(i.x, i.y, O), D.camera.updateProjectionMatrix();
            }
            if (D.map === null) {
                let O1 = {
                    minFilter: rt,
                    magFilter: rt,
                    format: ct
                };
                D.map = new At(i.x, i.y, O1), D.map.texture.name = E.name + ".shadowMap", D.camera.updateProjectionMatrix();
            }
            s.setRenderTarget(D.map), s.clear();
            let F = D.getViewportCount();
            for(let O2 = 0; O2 < F; O2++){
                let ne = D.getViewport(O2);
                o.set(r.x * ne.x, r.y * ne.y, r.x * ne.z, r.y * ne.w), B.viewport(o), D.updateMatrices(E, O2), n = D.getFrustum(), _(b, A, D.camera, E, this.type);
            }
            !D.isPointLightShadow && this.type === ir && g(D, A), D.needsUpdate = !1;
        }
        v.needsUpdate = !1, s.setRenderTarget(L, I, k);
    };
    function g(y, b) {
        let A = e.update(x);
        d.defines.VSM_SAMPLES !== y.blurSamples && (d.defines.VSM_SAMPLES = y.blurSamples, f.defines.VSM_SAMPLES = y.blurSamples, d.needsUpdate = !0, f.needsUpdate = !0), d.uniforms.shadow_pass.value = y.map.texture, d.uniforms.resolution.value = y.mapSize, d.uniforms.radius.value = y.radius, s.setRenderTarget(y.mapPass), s.clear(), s.renderBufferDirect(b, null, A, d, x, null), f.uniforms.shadow_pass.value = y.mapPass.texture, f.uniforms.resolution.value = y.mapSize, f.uniforms.radius.value = y.radius, s.setRenderTarget(y.map), s.clear(), s.renderBufferDirect(b, null, A, f, x, null);
    }
    function p(y, b, A, L, I, k, B) {
        let P = null, w = L.isPointLight === !0 ? y.customDistanceMaterial : y.customDepthMaterial;
        if (w !== void 0 ? P = w : P = L.isPointLight === !0 ? l : a, s.localClippingEnabled && A.clipShadows === !0 && A.clippingPlanes.length !== 0 || A.displacementMap && A.displacementScale !== 0 || A.alphaMap && A.alphaTest > 0) {
            let E = P.uuid, D = A.uuid, U = c[E];
            U === void 0 && (U = {}, c[E] = U);
            let F = U[D];
            F === void 0 && (F = P.clone(), U[D] = F), P = F;
        }
        return P.visible = A.visible, P.wireframe = A.wireframe, B === ir ? P.side = A.shadowSide !== null ? A.shadowSide : A.side : P.side = A.shadowSide !== null ? A.shadowSide : u[A.side], P.alphaMap = A.alphaMap, P.alphaTest = A.alphaTest, P.clipShadows = A.clipShadows, P.clippingPlanes = A.clippingPlanes, P.clipIntersection = A.clipIntersection, P.displacementMap = A.displacementMap, P.displacementScale = A.displacementScale, P.displacementBias = A.displacementBias, P.wireframeLinewidth = A.wireframeLinewidth, P.linewidth = A.linewidth, L.isPointLight === !0 && P.isMeshDistanceMaterial === !0 && (P.referencePosition.setFromMatrixPosition(L.matrixWorld), P.nearDistance = I, P.farDistance = k), P;
    }
    function _(y, b, A, L, I) {
        if (y.visible === !1) return;
        if (y.layers.test(b.layers) && (y.isMesh || y.isLine || y.isPoints) && (y.castShadow || y.receiveShadow && I === ir) && (!y.frustumCulled || n.intersectsObject(y))) {
            y.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse, y.matrixWorld);
            let P = e.update(y), w = y.material;
            if (Array.isArray(w)) {
                let E = P.groups;
                for(let D = 0, U = E.length; D < U; D++){
                    let F = E[D], O = w[F.materialIndex];
                    if (O && O.visible) {
                        let ne = p(y, P, O, L, A.near, A.far, I);
                        s.renderBufferDirect(A, null, P, ne, y, F);
                    }
                }
            } else if (w.visible) {
                let E1 = p(y, P, w, L, A.near, A.far, I);
                s.renderBufferDirect(A, null, P, E1, y, null);
            }
        }
        let B = y.children;
        for(let P1 = 0, w1 = B.length; P1 < w1; P1++)_(B[P1], b, A, L, I);
    }
}
function Sx(s, e, t) {
    let n = t.isWebGL2;
    function i() {
        let R = !1, ee = new Ve, Q = null, Ee = new Ve(0, 0, 0, 0);
        return {
            setMask: function(me) {
                Q !== me && !R && (s.colorMask(me, me, me, me), Q = me);
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me, Re, oe, Le, Xe) {
                Xe === !0 && (me *= Le, Re *= Le, oe *= Le), ee.set(me, Re, oe, Le), Ee.equals(ee) === !1 && (s.clearColor(me, Re, oe, Le), Ee.copy(ee));
            },
            reset: function() {
                R = !1, Q = null, Ee.set(-1, 0, 0, 0);
            }
        };
    }
    function r() {
        let R = !1, ee = null, Q = null, Ee = null;
        return {
            setTest: function(me) {
                me ? le(2929) : fe(2929);
            },
            setMask: function(me) {
                ee !== me && !R && (s.depthMask(me), ee = me);
            },
            setFunc: function(me) {
                if (Q !== me) {
                    if (me) switch(me){
                        case Eu:
                            s.depthFunc(512);
                            break;
                        case Au:
                            s.depthFunc(519);
                            break;
                        case Cu:
                            s.depthFunc(513);
                            break;
                        case ea:
                            s.depthFunc(515);
                            break;
                        case Lu:
                            s.depthFunc(514);
                            break;
                        case Ru:
                            s.depthFunc(518);
                            break;
                        case Pu:
                            s.depthFunc(516);
                            break;
                        case Iu:
                            s.depthFunc(517);
                            break;
                        default:
                            s.depthFunc(515);
                    }
                    else s.depthFunc(515);
                    Q = me;
                }
            },
            setLocked: function(me) {
                R = me;
            },
            setClear: function(me) {
                Ee !== me && (s.clearDepth(me), Ee = me);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null;
            }
        };
    }
    function o() {
        let R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
        return {
            setTest: function(We) {
                R || (We ? le(2960) : fe(2960));
            },
            setMask: function(We) {
                ee !== We && !R && (s.stencilMask(We), ee = We);
            },
            setFunc: function(We, Ut, Ot) {
                (Q !== We || Ee !== Ut || me !== Ot) && (s.stencilFunc(We, Ut, Ot), Q = We, Ee = Ut, me = Ot);
            },
            setOp: function(We, Ut, Ot) {
                (Re !== We || oe !== Ut || Le !== Ot) && (s.stencilOp(We, Ut, Ot), Re = We, oe = Ut, Le = Ot);
            },
            setLocked: function(We) {
                R = We;
            },
            setClear: function(We) {
                Xe !== We && (s.clearStencil(We), Xe = We);
            },
            reset: function() {
                R = !1, ee = null, Q = null, Ee = null, me = null, Re = null, oe = null, Le = null, Xe = null;
            }
        };
    }
    let a = new i, l = new r, c = new o, h = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, P = s.getParameter(35661), w = !1, E = 0, D = s.getParameter(7938);
    D.indexOf("WebGL") !== -1 ? (E = parseFloat(/^WebGL (\d)/.exec(D)[1]), w = E >= 1) : D.indexOf("OpenGL ES") !== -1 && (E = parseFloat(/^OpenGL ES (\d)/.exec(D)[1]), w = E >= 2);
    let U = null, F = {}, O = s.getParameter(3088), ne = s.getParameter(2978), ce = new Ve().fromArray(O), V = new Ve().fromArray(ne);
    function W(R, ee, Q) {
        let Ee = new Uint8Array(4), me = s.createTexture();
        s.bindTexture(R, me), s.texParameteri(R, 10241, 9728), s.texParameteri(R, 10240, 9728);
        for(let Re = 0; Re < Q; Re++)s.texImage2D(ee + Re, 0, 6408, 1, 1, 0, 6408, 5121, Ee);
        return me;
    }
    let he = {};
    he[3553] = W(3553, 3553, 1), he[34067] = W(34067, 34069, 6), a.setClear(0, 0, 0, 1), l.setClear(1), c.setClear(0), le(2929), l.setFunc(ea), Oe(!1), G(tl), le(2884), ge(vn);
    function le(R) {
        h[R] !== !0 && (s.enable(R), h[R] = !0);
    }
    function fe(R) {
        h[R] !== !1 && (s.disable(R), h[R] = !1);
    }
    function Be(R, ee) {
        return u[R] !== ee ? (s.bindFramebuffer(R, ee), u[R] = ee, n && (R === 36009 && (u[36160] = ee), R === 36160 && (u[36009] = ee)), !0) : !1;
    }
    function Y(R) {
        return d !== R ? (s.useProgram(R), d = R, !0) : !1;
    }
    let Ce = {
        [_i]: 32774,
        [mu]: 32778,
        [gu]: 32779
    };
    if (n) Ce[sl] = 32775, Ce[ol] = 32776;
    else {
        let R = e.get("EXT_blend_minmax");
        R !== null && (Ce[sl] = R.MIN_EXT, Ce[ol] = R.MAX_EXT);
    }
    let ye = {
        [xu]: 0,
        [yu]: 1,
        [vu]: 768,
        [Gc]: 770,
        [Tu]: 776,
        [wu]: 774,
        [Mu]: 772,
        [_u]: 769,
        [Vc]: 771,
        [Su]: 775,
        [bu]: 773
    };
    function ge(R, ee, Q, Ee, me, Re, oe, Le) {
        if (R === vn) {
            f === !0 && (fe(3042), f = !1);
            return;
        }
        if (f === !1 && (le(3042), f = !0), R !== pu) {
            if (R !== m || Le !== b) {
                if ((x !== _i || p !== _i) && (s.blendEquation(32774), x = _i, p = _i), Le) switch(R){
                    case sr:
                        s.blendFuncSeparate(1, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(1, 1);
                        break;
                    case il:
                        s.blendFuncSeparate(0, 0, 769, 771);
                        break;
                    case rl:
                        s.blendFuncSeparate(0, 768, 0, 770);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                else switch(R){
                    case sr:
                        s.blendFuncSeparate(770, 771, 1, 771);
                        break;
                    case nl:
                        s.blendFunc(770, 1);
                        break;
                    case il:
                        s.blendFunc(0, 769);
                        break;
                    case rl:
                        s.blendFunc(0, 768);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", R);
                        break;
                }
                v = null, g = null, _ = null, y = null, m = R, b = Le;
            }
            return;
        }
        me = me || ee, Re = Re || Q, oe = oe || Ee, (ee !== x || me !== p) && (s.blendEquationSeparate(Ce[ee], Ce[me]), x = ee, p = me), (Q !== v || Ee !== g || Re !== _ || oe !== y) && (s.blendFuncSeparate(ye[Q], ye[Ee], ye[Re], ye[oe]), v = Q, g = Ee, _ = Re, y = oe), m = R, b = null;
    }
    function xe(R, ee) {
        R.side === Ci ? fe(2884) : le(2884);
        let Q = R.side === it;
        ee && (Q = !Q), Oe(Q), R.blending === sr && R.transparent === !1 ? ge(vn) : ge(R.blending, R.blendEquation, R.blendSrc, R.blendDst, R.blendEquationAlpha, R.blendSrcAlpha, R.blendDstAlpha, R.premultipliedAlpha), l.setFunc(R.depthFunc), l.setTest(R.depthTest), l.setMask(R.depthWrite), a.setMask(R.colorWrite);
        let Ee = R.stencilWrite;
        c.setTest(Ee), Ee && (c.setMask(R.stencilWriteMask), c.setFunc(R.stencilFunc, R.stencilRef, R.stencilFuncMask), c.setOp(R.stencilFail, R.stencilZFail, R.stencilZPass)), K(R.polygonOffset, R.polygonOffsetFactor, R.polygonOffsetUnits), R.alphaToCoverage === !0 ? le(32926) : fe(32926);
    }
    function Oe(R) {
        A !== R && (R ? s.frontFace(2304) : s.frontFace(2305), A = R);
    }
    function G(R) {
        R !== uu ? (le(2884), R !== L && (R === tl ? s.cullFace(1029) : R === du ? s.cullFace(1028) : s.cullFace(1032))) : fe(2884), L = R;
    }
    function j(R) {
        R !== I && (w && s.lineWidth(R), I = R);
    }
    function K(R, ee, Q) {
        R ? (le(32823), (k !== ee || B !== Q) && (s.polygonOffset(ee, Q), k = ee, B = Q)) : fe(32823);
    }
    function ue(R) {
        R ? le(3089) : fe(3089);
    }
    function se(R) {
        R === void 0 && (R = 33984 + P - 1), U !== R && (s.activeTexture(R), U = R);
    }
    function Se(R, ee) {
        U === null && se();
        let Q = F[U];
        Q === void 0 && (Q = {
            type: void 0,
            texture: void 0
        }, F[U] = Q), (Q.type !== R || Q.texture !== ee) && (s.bindTexture(R, ee || he[R]), Q.type = R, Q.texture = ee);
    }
    function Te() {
        let R = F[U];
        R !== void 0 && R.type !== void 0 && (s.bindTexture(R.type, null), R.type = void 0, R.texture = void 0);
    }
    function Pe() {
        try {
            s.compressedTexImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Ye() {
        try {
            s.texSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function C() {
        try {
            s.texSubImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function T() {
        try {
            s.compressedTexSubImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function J() {
        try {
            s.texStorage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function $() {
        try {
            s.texStorage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function re() {
        try {
            s.texImage2D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Z() {
        try {
            s.texImage3D.apply(s, arguments);
        } catch (R) {
            console.error("THREE.WebGLState:", R);
        }
    }
    function Me(R) {
        ce.equals(R) === !1 && (s.scissor(R.x, R.y, R.z, R.w), ce.copy(R));
    }
    function ve(R) {
        V.equals(R) === !1 && (s.viewport(R.x, R.y, R.z, R.w), V.copy(R));
    }
    function te() {
        s.disable(3042), s.disable(2884), s.disable(2929), s.disable(32823), s.disable(3089), s.disable(2960), s.disable(32926), s.blendEquation(32774), s.blendFunc(1, 0), s.blendFuncSeparate(1, 0, 1, 0), s.colorMask(!0, !0, !0, !0), s.clearColor(0, 0, 0, 0), s.depthMask(!0), s.depthFunc(513), s.clearDepth(1), s.stencilMask(4294967295), s.stencilFunc(519, 0, 4294967295), s.stencilOp(7680, 7680, 7680), s.clearStencil(0), s.cullFace(1029), s.frontFace(2305), s.polygonOffset(0, 0), s.activeTexture(33984), s.bindFramebuffer(36160, null), n === !0 && (s.bindFramebuffer(36009, null), s.bindFramebuffer(36008, null)), s.useProgram(null), s.lineWidth(1), s.scissor(0, 0, s.canvas.width, s.canvas.height), s.viewport(0, 0, s.canvas.width, s.canvas.height), h = {}, U = null, F = {}, u = {}, d = null, f = !1, m = null, x = null, v = null, g = null, p = null, _ = null, y = null, b = !1, A = null, L = null, I = null, k = null, B = null, ce.set(0, 0, s.canvas.width, s.canvas.height), V.set(0, 0, s.canvas.width, s.canvas.height), a.reset(), l.reset(), c.reset();
    }
    return {
        buffers: {
            color: a,
            depth: l,
            stencil: c
        },
        enable: le,
        disable: fe,
        bindFramebuffer: Be,
        useProgram: Y,
        setBlending: ge,
        setMaterial: xe,
        setFlipSided: Oe,
        setCullFace: G,
        setLineWidth: j,
        setPolygonOffset: K,
        setScissorTest: ue,
        activeTexture: se,
        bindTexture: Se,
        unbindTexture: Te,
        compressedTexImage2D: Pe,
        texImage2D: re,
        texImage3D: Z,
        texStorage2D: J,
        texStorage3D: $,
        texSubImage2D: Ye,
        texSubImage3D: C,
        compressedTexSubImage2D: T,
        scissor: Me,
        viewport: ve,
        reset: te
    };
}
function Tx(s, e, t, n, i, r, o) {
    let a = i.isWebGL2, l = i.maxTextures, c = i.maxCubemapSize, h = i.maxTextureSize, u = i.maxSamples, f = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : void 0, m = new WeakMap, x, v = !1;
    try {
        v = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
    } catch  {}
    function g(C, T) {
        return v ? new OffscreenCanvas(C, T) : qs("canvas");
    }
    function p(C, T, J, $) {
        let re = 1;
        if ((C.width > $ || C.height > $) && (re = $ / Math.max(C.width, C.height)), re < 1 || T === !0) if (typeof HTMLImageElement < "u" && C instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && C instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && C instanceof ImageBitmap) {
            let Z = T ? Jc : Math.floor, Me = Z(re * C.width), ve = Z(re * C.height);
            x === void 0 && (x = g(Me, ve));
            let te = J ? g(Me, ve) : x;
            return te.width = Me, te.height = ve, te.getContext("2d").drawImage(C, 0, 0, Me, ve), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + C.width + "x" + C.height + ") to (" + Me + "x" + ve + ")."), te;
        } else return "data" in C && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + C.width + "x" + C.height + ")."), C;
        return C;
    }
    function _(C) {
        return ia(C.width) && ia(C.height);
    }
    function y(C) {
        return a ? !1 : C.wrapS !== vt || C.wrapT !== vt || C.minFilter !== rt && C.minFilter !== tt;
    }
    function b(C, T) {
        return C.generateMipmaps && T && C.minFilter !== rt && C.minFilter !== tt;
    }
    function A(C) {
        s.generateMipmap(C);
    }
    function L(C, T, J, $) {
        if (a === !1) return T;
        if (C !== null) {
            if (s[C] !== void 0) return s[C];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + C + "'");
        }
        let re = T;
        return T === 6403 && (J === 5126 && (re = 33326), J === 5131 && (re = 33325), J === 5121 && (re = 33321)), T === 6407 && (J === 5126 && (re = 34837), J === 5131 && (re = 34843), J === 5121 && (re = 32849)), T === 6408 && (J === 5126 && (re = 34836), J === 5131 && (re = 34842), J === 5121 && (re = $ === Oi ? 35907 : 32856)), (re === 33325 || re === 33326 || re === 34842 || re === 34836) && e.get("EXT_color_buffer_float"), re;
    }
    function I(C, T, J) {
        return b(C, J) === !0 || C.isFramebufferTexture && C.minFilter !== rt && C.minFilter !== tt ? Math.log2(Math.max(T.width, T.height)) + 1 : C.mipmaps !== void 0 && C.mipmaps.length > 0 ? C.mipmaps.length : C.isCompressedTexture && Array.isArray(C.image) ? T.mipmaps.length : 1;
    }
    function k(C) {
        return C === rt || C === ta || C === na ? 9728 : 9729;
    }
    function B(C) {
        let T = C.target;
        T.removeEventListener("dispose", B), w(T), T.isVideoTexture && m.delete(T), o.memory.textures--;
    }
    function P(C) {
        let T = C.target;
        T.removeEventListener("dispose", P), E(T);
    }
    function w(C) {
        let T = n.get(C);
        T.__webglInit !== void 0 && (s.deleteTexture(T.__webglTexture), n.remove(C));
    }
    function E(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        if (!!C) {
            if ($.__webglTexture !== void 0 && (s.deleteTexture($.__webglTexture), o.memory.textures--), C.depthTexture && C.depthTexture.dispose(), C.isWebGLCubeRenderTarget) for(let re = 0; re < 6; re++)s.deleteFramebuffer(J.__webglFramebuffer[re]), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer[re]);
            else s.deleteFramebuffer(J.__webglFramebuffer), J.__webglDepthbuffer && s.deleteRenderbuffer(J.__webglDepthbuffer), J.__webglMultisampledFramebuffer && s.deleteFramebuffer(J.__webglMultisampledFramebuffer), J.__webglColorRenderbuffer && s.deleteRenderbuffer(J.__webglColorRenderbuffer), J.__webglDepthRenderbuffer && s.deleteRenderbuffer(J.__webglDepthRenderbuffer);
            if (C.isWebGLMultipleRenderTargets) for(let re1 = 0, Z = T.length; re1 < Z; re1++){
                let Me = n.get(T[re1]);
                Me.__webglTexture && (s.deleteTexture(Me.__webglTexture), o.memory.textures--), n.remove(T[re1]);
            }
            n.remove(T), n.remove(C);
        }
    }
    let D = 0;
    function U() {
        D = 0;
    }
    function F() {
        let C = D;
        return C >= l && console.warn("THREE.WebGLTextures: Trying to use " + C + " texture units while this GPU supports only " + l), D += 1, C;
    }
    function O(C, T) {
        let J = n.get(C);
        if (C.isVideoTexture && se(C), C.version > 0 && J.__version !== C.version) {
            let $ = C.image;
            if ($ === void 0) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else if ($.complete === !1) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
            else {
                Be(J, C, T);
                return;
            }
        }
        t.activeTexture(33984 + T), t.bindTexture(3553, J.__webglTexture);
    }
    function ne(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(35866, J.__webglTexture);
    }
    function ce(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Be(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(32879, J.__webglTexture);
    }
    function V(C, T) {
        let J = n.get(C);
        if (C.version > 0 && J.__version !== C.version) {
            Y(J, C, T);
            return;
        }
        t.activeTexture(33984 + T), t.bindTexture(34067, J.__webglTexture);
    }
    let W = {
        [Ns]: 10497,
        [vt]: 33071,
        [Bs]: 33648
    }, he = {
        [rt]: 9728,
        [ta]: 9984,
        [na]: 9986,
        [tt]: 9729,
        [Wc]: 9985,
        [Ui]: 9987
    };
    function le(C, T, J) {
        if (J ? (s.texParameteri(C, 10242, W[T.wrapS]), s.texParameteri(C, 10243, W[T.wrapT]), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, W[T.wrapR]), s.texParameteri(C, 10240, he[T.magFilter]), s.texParameteri(C, 10241, he[T.minFilter])) : (s.texParameteri(C, 10242, 33071), s.texParameteri(C, 10243, 33071), (C === 32879 || C === 35866) && s.texParameteri(C, 32882, 33071), (T.wrapS !== vt || T.wrapT !== vt) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), s.texParameteri(C, 10240, k(T.magFilter)), s.texParameteri(C, 10241, k(T.minFilter)), T.minFilter !== rt && T.minFilter !== tt && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), e.has("EXT_texture_filter_anisotropic") === !0) {
            let $ = e.get("EXT_texture_filter_anisotropic");
            if (T.type === nn && e.has("OES_texture_float_linear") === !1 || a === !1 && T.type === kn && e.has("OES_texture_half_float_linear") === !1) return;
            (T.anisotropy > 1 || n.get(T).__currentAnisotropy) && (s.texParameterf(C, $.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(T.anisotropy, i.getMaxAnisotropy())), n.get(T).__currentAnisotropy = T.anisotropy);
        }
    }
    function fe(C, T) {
        C.__webglInit === void 0 && (C.__webglInit = !0, T.addEventListener("dispose", B), C.__webglTexture = s.createTexture(), o.memory.textures++);
    }
    function Be(C, T, J) {
        let $ = 3553;
        T.isDataTexture2DArray && ($ = 35866), T.isDataTexture3D && ($ = 32879), fe(C, T), t.activeTexture(33984 + J), t.bindTexture($, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let re = y(T) && _(T.image) === !1, Z = p(T.image, re, !1, h), Me = _(Z) || a, ve = r.convert(T.format), te = r.convert(T.type), R = L(T.internalFormat, ve, te, T.encoding);
        le($, T, Me);
        let ee, Q = T.mipmaps, Ee = a && T.isVideoTexture !== !0, me = C.__version === void 0, Re = I(T, Z, Me);
        if (T.isDepthTexture) R = 6402, a ? T.type === nn ? R = 36012 : T.type === Ps ? R = 33190 : T.type === Ti ? R = 35056 : R = 33189 : T.type === nn && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), T.format === Vn && R === 6402 && T.type !== cr && T.type !== Ps && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), T.type = cr, te = r.convert(T.type)), T.format === Li && R === 6402 && (R = 34041, T.type !== Ti && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), T.type = Ti, te = r.convert(T.type))), Ee && me ? t.texStorage2D(3553, 1, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (T.isDataTexture) if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe = 0, Le = Q.length; oe < Le; oe++)ee = Q[oe], Ee ? t.texSubImage2D(3553, 0, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe, R, ee.width, ee.height, 0, ve, te, ee.data);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, Z.width, Z.height, ve, te, Z.data)) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, Z.data);
        else if (T.isCompressedTexture) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe1 = 0, Le1 = Q.length; oe1 < Le1; oe1++)ee = Q[oe1], T.format !== ct && T.format !== Gn ? ve !== null ? Ee ? t.compressedTexSubImage2D(3553, oe1, 0, 0, ee.width, ee.height, ve, ee.data) : t.compressedTexImage2D(3553, oe1, R, ee.width, ee.height, 0, ee.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : Ee ? t.texSubImage2D(3553, oe1, 0, 0, ee.width, ee.height, ve, te, ee.data) : t.texImage2D(3553, oe1, R, ee.width, ee.height, 0, ve, te, ee.data);
        } else if (T.isDataTexture2DArray) Ee ? (me && t.texStorage3D(35866, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(35866, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(35866, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isDataTexture3D) Ee ? (me && t.texStorage3D(32879, Re, R, Z.width, Z.height, Z.depth), t.texSubImage3D(32879, 0, 0, 0, 0, Z.width, Z.height, Z.depth, ve, te, Z.data)) : t.texImage3D(32879, 0, R, Z.width, Z.height, Z.depth, 0, ve, te, Z.data);
        else if (T.isFramebufferTexture) Ee && me ? t.texStorage2D(3553, Re, R, Z.width, Z.height) : t.texImage2D(3553, 0, R, Z.width, Z.height, 0, ve, te, null);
        else if (Q.length > 0 && Me) {
            Ee && me && t.texStorage2D(3553, Re, R, Q[0].width, Q[0].height);
            for(let oe2 = 0, Le2 = Q.length; oe2 < Le2; oe2++)ee = Q[oe2], Ee ? t.texSubImage2D(3553, oe2, 0, 0, ve, te, ee) : t.texImage2D(3553, oe2, R, ve, te, ee);
            T.generateMipmaps = !1;
        } else Ee ? (me && t.texStorage2D(3553, Re, R, Z.width, Z.height), t.texSubImage2D(3553, 0, 0, 0, ve, te, Z)) : t.texImage2D(3553, 0, R, ve, te, Z);
        b(T, Me) && A($), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Y(C, T, J) {
        if (T.image.length !== 6) return;
        fe(C, T), t.activeTexture(33984 + J), t.bindTexture(34067, C.__webglTexture), s.pixelStorei(37440, T.flipY), s.pixelStorei(37441, T.premultiplyAlpha), s.pixelStorei(3317, T.unpackAlignment), s.pixelStorei(37443, 0);
        let $ = T && (T.isCompressedTexture || T.image[0].isCompressedTexture), re = T.image[0] && T.image[0].isDataTexture, Z = [];
        for(let oe = 0; oe < 6; oe++)!$ && !re ? Z[oe] = p(T.image[oe], !1, !0, c) : Z[oe] = re ? T.image[oe].image : T.image[oe];
        let Me = Z[0], ve = _(Me) || a, te = r.convert(T.format), R = r.convert(T.type), ee = L(T.internalFormat, te, R, T.encoding), Q = a && T.isVideoTexture !== !0, Ee = C.__version === void 0, me = I(T, Me, ve);
        le(34067, T, ve);
        let Re;
        if ($) {
            Q && Ee && t.texStorage2D(34067, me, ee, Me.width, Me.height);
            for(let oe1 = 0; oe1 < 6; oe1++){
                Re = Z[oe1].mipmaps;
                for(let Le = 0; Le < Re.length; Le++){
                    let Xe = Re[Le];
                    T.format !== ct && T.format !== Gn ? te !== null ? Q ? t.compressedTexSubImage2D(34069 + oe1, Le, 0, 0, Xe.width, Xe.height, te, Xe.data) : t.compressedTexImage2D(34069 + oe1, Le, ee, Xe.width, Xe.height, 0, Xe.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : Q ? t.texSubImage2D(34069 + oe1, Le, 0, 0, Xe.width, Xe.height, te, R, Xe.data) : t.texImage2D(34069 + oe1, Le, ee, Xe.width, Xe.height, 0, te, R, Xe.data);
                }
            }
        } else {
            Re = T.mipmaps, Q && Ee && (Re.length > 0 && me++, t.texStorage2D(34067, me, ee, Z[0].width, Z[0].height));
            for(let oe2 = 0; oe2 < 6; oe2++)if (re) {
                Q ? t.texSubImage2D(34069 + oe2, 0, 0, 0, Z[oe2].width, Z[oe2].height, te, R, Z[oe2].data) : t.texImage2D(34069 + oe2, 0, ee, Z[oe2].width, Z[oe2].height, 0, te, R, Z[oe2].data);
                for(let Le1 = 0; Le1 < Re.length; Le1++){
                    let We = Re[Le1].image[oe2].image;
                    Q ? t.texSubImage2D(34069 + oe2, Le1 + 1, 0, 0, We.width, We.height, te, R, We.data) : t.texImage2D(34069 + oe2, Le1 + 1, ee, We.width, We.height, 0, te, R, We.data);
                }
            } else {
                Q ? t.texSubImage2D(34069 + oe2, 0, 0, 0, te, R, Z[oe2]) : t.texImage2D(34069 + oe2, 0, ee, te, R, Z[oe2]);
                for(let Le2 = 0; Le2 < Re.length; Le2++){
                    let Xe1 = Re[Le2];
                    Q ? t.texSubImage2D(34069 + oe2, Le2 + 1, 0, 0, te, R, Xe1.image[oe2]) : t.texImage2D(34069 + oe2, Le2 + 1, ee, te, R, Xe1.image[oe2]);
                }
            }
        }
        b(T, ve) && A(34067), C.__version = T.version, T.onUpdate && T.onUpdate(T);
    }
    function Ce(C, T, J, $, re) {
        let Z = r.convert(J.format), Me = r.convert(J.type), ve = L(J.internalFormat, Z, Me, J.encoding);
        n.get(T).__hasExternalTextures || (re === 32879 || re === 35866 ? t.texImage3D(re, 0, ve, T.width, T.height, T.depth, 0, Z, Me, null) : t.texImage2D(re, 0, ve, T.width, T.height, 0, Z, Me, null)), t.bindFramebuffer(36160, C), T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, $, re, n.get(J).__webglTexture, 0, ue(T)) : s.framebufferTexture2D(36160, $, re, n.get(J).__webglTexture, 0), t.bindFramebuffer(36160, null);
    }
    function ye(C, T, J) {
        if (s.bindRenderbuffer(36161, C), T.depthBuffer && !T.stencilBuffer) {
            let $ = 33189;
            if (J || T.useRenderToTexture) {
                let re = T.depthTexture;
                re && re.isDepthTexture && (re.type === nn ? $ = 36012 : re.type === Ps && ($ = 33190));
                let Z = ue(T);
                T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, Z, $, T.width, T.height) : s.renderbufferStorageMultisample(36161, Z, $, T.width, T.height);
            } else s.renderbufferStorage(36161, $, T.width, T.height);
            s.framebufferRenderbuffer(36160, 36096, 36161, C);
        } else if (T.depthBuffer && T.stencilBuffer) {
            let $1 = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, $1, 35056, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, $1, 35056, T.width, T.height) : s.renderbufferStorage(36161, 34041, T.width, T.height), s.framebufferRenderbuffer(36160, 33306, 36161, C);
        } else {
            let $2 = T.isWebGLMultipleRenderTargets === !0 ? T.texture[0] : T.texture, re1 = r.convert($2.format), Z1 = r.convert($2.type), Me = L($2.internalFormat, re1, Z1, $2.encoding), ve = ue(T);
            J && T.useRenderbuffer ? s.renderbufferStorageMultisample(36161, ve, Me, T.width, T.height) : T.useRenderToTexture ? f.renderbufferStorageMultisampleEXT(36161, ve, Me, T.width, T.height) : s.renderbufferStorage(36161, Me, T.width, T.height);
        }
        s.bindRenderbuffer(36161, null);
    }
    function ge(C, T) {
        if (T && T.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
        if (t.bindFramebuffer(36160, C), !(T.depthTexture && T.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
        (!n.get(T.depthTexture).__webglTexture || T.depthTexture.image.width !== T.width || T.depthTexture.image.height !== T.height) && (T.depthTexture.image.width = T.width, T.depthTexture.image.height = T.height, T.depthTexture.needsUpdate = !0), O(T.depthTexture, 0);
        let $ = n.get(T.depthTexture).__webglTexture, re = ue(T);
        if (T.depthTexture.format === Vn) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, $, 0, re) : s.framebufferTexture2D(36160, 36096, 3553, $, 0);
        else if (T.depthTexture.format === Li) T.useRenderToTexture ? f.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, $, 0, re) : s.framebufferTexture2D(36160, 33306, 3553, $, 0);
        else throw new Error("Unknown depthTexture format");
    }
    function xe(C) {
        let T = n.get(C), J = C.isWebGLCubeRenderTarget === !0;
        if (C.depthTexture && !T.__autoAllocateDepthBuffer) {
            if (J) throw new Error("target.depthTexture not supported in Cube render targets");
            ge(T.__webglFramebuffer, C);
        } else if (J) {
            T.__webglDepthbuffer = [];
            for(let $ = 0; $ < 6; $++)t.bindFramebuffer(36160, T.__webglFramebuffer[$]), T.__webglDepthbuffer[$] = s.createRenderbuffer(), ye(T.__webglDepthbuffer[$], C, !1);
        } else t.bindFramebuffer(36160, T.__webglFramebuffer), T.__webglDepthbuffer = s.createRenderbuffer(), ye(T.__webglDepthbuffer, C, !1);
        t.bindFramebuffer(36160, null);
    }
    function Oe(C, T, J) {
        let $ = n.get(C);
        T !== void 0 && Ce($.__webglFramebuffer, C, C.texture, 36064, 3553), J !== void 0 && xe(C);
    }
    function G(C) {
        let T = C.texture, J = n.get(C), $ = n.get(T);
        C.addEventListener("dispose", P), C.isWebGLMultipleRenderTargets !== !0 && ($.__webglTexture === void 0 && ($.__webglTexture = s.createTexture()), $.__version = T.version, o.memory.textures++);
        let re = C.isWebGLCubeRenderTarget === !0, Z = C.isWebGLMultipleRenderTargets === !0, Me = T.isDataTexture3D || T.isDataTexture2DArray, ve = _(C) || a;
        if (a && T.format === Gn && (T.type === nn || T.type === kn) && (T.format = ct, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), re) {
            J.__webglFramebuffer = [];
            for(let te = 0; te < 6; te++)J.__webglFramebuffer[te] = s.createFramebuffer();
        } else if (J.__webglFramebuffer = s.createFramebuffer(), Z) if (i.drawBuffers) {
            let te1 = C.texture;
            for(let R = 0, ee = te1.length; R < ee; R++){
                let Q = n.get(te1[R]);
                Q.__webglTexture === void 0 && (Q.__webglTexture = s.createTexture(), o.memory.textures++);
            }
        } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
        else if (C.useRenderbuffer) if (a) {
            J.__webglMultisampledFramebuffer = s.createFramebuffer(), J.__webglColorRenderbuffer = s.createRenderbuffer(), s.bindRenderbuffer(36161, J.__webglColorRenderbuffer);
            let te2 = r.convert(T.format), R1 = r.convert(T.type), ee1 = L(T.internalFormat, te2, R1, T.encoding), Q1 = ue(C);
            s.renderbufferStorageMultisample(36161, Q1, ee1, C.width, C.height), t.bindFramebuffer(36160, J.__webglMultisampledFramebuffer), s.framebufferRenderbuffer(36160, 36064, 36161, J.__webglColorRenderbuffer), s.bindRenderbuffer(36161, null), C.depthBuffer && (J.__webglDepthRenderbuffer = s.createRenderbuffer(), ye(J.__webglDepthRenderbuffer, C, !0)), t.bindFramebuffer(36160, null);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        if (re) {
            t.bindTexture(34067, $.__webglTexture), le(34067, T, ve);
            for(let te3 = 0; te3 < 6; te3++)Ce(J.__webglFramebuffer[te3], C, T, 36064, 34069 + te3);
            b(T, ve) && A(34067), t.unbindTexture();
        } else if (Z) {
            let te4 = C.texture;
            for(let R2 = 0, ee2 = te4.length; R2 < ee2; R2++){
                let Q2 = te4[R2], Ee = n.get(Q2);
                t.bindTexture(3553, Ee.__webglTexture), le(3553, Q2, ve), Ce(J.__webglFramebuffer, C, Q2, 36064 + R2, 3553), b(Q2, ve) && A(3553);
            }
            t.unbindTexture();
        } else {
            let te5 = 3553;
            Me && (a ? te5 = T.isDataTexture3D ? 32879 : 35866 : console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")), t.bindTexture(te5, $.__webglTexture), le(te5, T, ve), Ce(J.__webglFramebuffer, C, T, 36064, te5), b(T, ve) && A(te5), t.unbindTexture();
        }
        C.depthBuffer && xe(C);
    }
    function j(C) {
        let T = _(C) || a, J = C.isWebGLMultipleRenderTargets === !0 ? C.texture : [
            C.texture
        ];
        for(let $ = 0, re = J.length; $ < re; $++){
            let Z = J[$];
            if (b(Z, T)) {
                let Me = C.isWebGLCubeRenderTarget ? 34067 : 3553, ve = n.get(Z).__webglTexture;
                t.bindTexture(Me, ve), A(Me), t.unbindTexture();
            }
        }
    }
    function K(C) {
        if (C.useRenderbuffer) if (a) {
            let T = C.width, J = C.height, $ = 16384, re = [
                36064
            ], Z = C.stencilBuffer ? 33306 : 36096;
            C.depthBuffer && re.push(Z), C.ignoreDepthForMultisampleCopy || (C.depthBuffer && ($ |= 256), C.stencilBuffer && ($ |= 1024));
            let Me = n.get(C);
            t.bindFramebuffer(36008, Me.__webglMultisampledFramebuffer), t.bindFramebuffer(36009, Me.__webglFramebuffer), C.ignoreDepthForMultisampleCopy && (s.invalidateFramebuffer(36008, [
                Z
            ]), s.invalidateFramebuffer(36009, [
                Z
            ])), s.blitFramebuffer(0, 0, T, J, 0, 0, T, J, $, 9728), s.invalidateFramebuffer(36008, re), t.bindFramebuffer(36008, null), t.bindFramebuffer(36009, Me.__webglMultisampledFramebuffer);
        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
    }
    function ue(C) {
        return a && (C.useRenderbuffer || C.useRenderToTexture) ? Math.min(u, C.samples) : 0;
    }
    function se(C) {
        let T = o.render.frame;
        m.get(C) !== T && (m.set(C, T), C.update());
    }
    let Se = !1, Te = !1;
    function Pe(C, T) {
        C && C.isWebGLRenderTarget && (Se === !1 && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), Se = !0), C = C.texture), O(C, T);
    }
    function Ye(C, T) {
        C && C.isWebGLCubeRenderTarget && (Te === !1 && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), Te = !0), C = C.texture), V(C, T);
    }
    this.allocateTextureUnit = F, this.resetTextureUnits = U, this.setTexture2D = O, this.setTexture2DArray = ne, this.setTexture3D = ce, this.setTextureCube = V, this.rebindTextures = Oe, this.setupRenderTarget = G, this.updateRenderTargetMipmap = j, this.updateMultisampleRenderTarget = K, this.setupDepthRenderbuffer = xe, this.setupFrameBufferTexture = Ce, this.safeSetTexture2D = Pe, this.safeSetTextureCube = Ye;
}
function Ex(s, e, t) {
    let n = t.isWebGL2;
    function i(r) {
        let o;
        if (r === rn) return 5121;
        if (r === Vu) return 32819;
        if (r === Wu) return 32820;
        if (r === qu) return 33635;
        if (r === Hu) return 5120;
        if (r === ku) return 5122;
        if (r === cr) return 5123;
        if (r === Gu) return 5124;
        if (r === Ps) return 5125;
        if (r === nn) return 5126;
        if (r === kn) return n ? 5131 : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
        if (r === Xu) return 6406;
        if (r === Gn) return 6407;
        if (r === ct) return 6408;
        if (r === Ju) return 6409;
        if (r === Yu) return 6410;
        if (r === Vn) return 6402;
        if (r === Li) return 34041;
        if (r === Zu) return 6403;
        if (r === $u) return 36244;
        if (r === ju) return 33319;
        if (r === Qu) return 33320;
        if (r === Ku) return 36248;
        if (r === ed) return 36249;
        if (r === al || r === ll || r === cl || r === hl) if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
            if (r === al) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (r === ll) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (r === cl) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (r === hl) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
        } else return null;
        if (r === ul || r === dl || r === fl || r === pl) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
            if (r === ul) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (r === dl) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (r === fl) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (r === pl) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
        } else return null;
        if (r === td) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
        if ((r === ml || r === gl) && (o = e.get("WEBGL_compressed_texture_etc"), o !== null)) {
            if (r === ml) return o.COMPRESSED_RGB8_ETC2;
            if (r === gl) return o.COMPRESSED_RGBA8_ETC2_EAC;
        }
        if (r === nd || r === id || r === rd || r === sd || r === od || r === ad || r === ld || r === cd || r === hd || r === ud || r === dd || r === fd || r === pd || r === md || r === xd || r === yd || r === vd || r === _d || r === Md || r === bd || r === wd || r === Sd || r === Td || r === Ed || r === Ad || r === Cd || r === Ld || r === Rd) return o = e.get("WEBGL_compressed_texture_astc"), o !== null ? r : null;
        if (r === gd) return o = e.get("EXT_texture_compression_bptc"), o !== null ? r : null;
        if (r === Ti) return n ? 34042 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null);
    }
    return {
        convert: i
    };
}
var ga = class extends ut {
    constructor(e = []){
        super();
        this.cameras = e;
    }
};
ga.prototype.isArrayCamera = !0;
var Hn = class extends Ne {
    constructor(){
        super();
        this.type = "Group";
    }
};
Hn.prototype.isGroup = !0;
var Ax = {
    type: "move"
}, Is = class {
    constructor(){
        this._targetRay = null, this._grip = null, this._hand = null;
    }
    getHandSpace() {
        return this._hand === null && (this._hand = new Hn, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
            pinching: !1
        }), this._hand;
    }
    getTargetRaySpace() {
        return this._targetRay === null && (this._targetRay = new Hn, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new M, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new M), this._targetRay;
    }
    getGripSpace() {
        return this._grip === null && (this._grip = new Hn, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new M, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new M), this._grip;
    }
    dispatchEvent(e) {
        return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
    }
    disconnect(e) {
        return this.dispatchEvent({
            type: "disconnected",
            data: e
        }), this._targetRay !== null && (this._targetRay.visible = !1), this._grip !== null && (this._grip.visible = !1), this._hand !== null && (this._hand.visible = !1), this;
    }
    update(e, t, n) {
        let i = null, r = null, o = null, a = this._targetRay, l = this._grip, c = this._hand;
        if (e && t.session.visibilityState !== "visible-blurred") if (a !== null && (i = t.getPose(e.targetRaySpace, n), i !== null && (a.matrix.fromArray(i.transform.matrix), a.matrix.decompose(a.position, a.rotation, a.scale), i.linearVelocity ? (a.hasLinearVelocity = !0, a.linearVelocity.copy(i.linearVelocity)) : a.hasLinearVelocity = !1, i.angularVelocity ? (a.hasAngularVelocity = !0, a.angularVelocity.copy(i.angularVelocity)) : a.hasAngularVelocity = !1, this.dispatchEvent(Ax))), c && e.hand) {
            o = !0;
            for (let x of e.hand.values()){
                let v = t.getJointPose(x, n);
                if (c.joints[x.jointName] === void 0) {
                    let p = new Hn;
                    p.matrixAutoUpdate = !1, p.visible = !1, c.joints[x.jointName] = p, c.add(p);
                }
                let g = c.joints[x.jointName];
                v !== null && (g.matrix.fromArray(v.transform.matrix), g.matrix.decompose(g.position, g.rotation, g.scale), g.jointRadius = v.radius), g.visible = v !== null;
            }
            let h = c.joints["index-finger-tip"], u = c.joints["thumb-tip"], d = h.position.distanceTo(u.position), f = .02, m = .005;
            c.inputState.pinching && d > f + m ? (c.inputState.pinching = !1, this.dispatchEvent({
                type: "pinchend",
                handedness: e.handedness,
                target: this
            })) : !c.inputState.pinching && d <= f - m && (c.inputState.pinching = !0, this.dispatchEvent({
                type: "pinchstart",
                handedness: e.handedness,
                target: this
            }));
        } else l !== null && e.gripSpace && (r = t.getPose(e.gripSpace, n), r !== null && (l.matrix.fromArray(r.transform.matrix), l.matrix.decompose(l.position, l.rotation, l.scale), r.linearVelocity ? (l.hasLinearVelocity = !0, l.linearVelocity.copy(r.linearVelocity)) : l.hasLinearVelocity = !1, r.angularVelocity ? (l.hasAngularVelocity = !0, l.angularVelocity.copy(r.angularVelocity)) : l.hasAngularVelocity = !1));
        return a !== null && (a.visible = i !== null), l !== null && (l.visible = r !== null), c !== null && (c.visible = o !== null), this;
    }
}, ks = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h){
        if (h = h !== void 0 ? h : Vn, h !== Vn && h !== Li) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
        n === void 0 && h === Vn && (n = cr), n === void 0 && h === Li && (n = Ti);
        super(null, i, r, o, a, l, h, n, c);
        this.image = {
            width: e,
            height: t
        }, this.magFilter = a !== void 0 ? a : rt, this.minFilter = l !== void 0 ? l : rt, this.flipY = !1, this.generateMipmaps = !1;
    }
};
ks.prototype.isDepthTexture = !0;
var vh = class extends En {
    constructor(e, t){
        super();
        let n = this, i = null, r = 1, o = null, a = "local-floor", l = e.extensions.has("WEBGL_multisampled_render_to_texture"), c = null, h = null, u = null, d = null, f = !1, m = null, x = t.getContextAttributes(), v = null, g = null, p = [], _ = new Map, y = new ut;
        y.layers.enable(1), y.viewport = new Ve;
        let b = new ut;
        b.layers.enable(2), b.viewport = new Ve;
        let A = [
            y,
            b
        ], L = new ga;
        L.layers.enable(1), L.layers.enable(2);
        let I = null, k = null;
        this.cameraAutoUpdate = !0, this.enabled = !1, this.isPresenting = !1, this.getController = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getTargetRaySpace();
        }, this.getControllerGrip = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getGripSpace();
        }, this.getHand = function(V) {
            let W = p[V];
            return W === void 0 && (W = new Is, p[V] = W), W.getHandSpace();
        };
        function B(V) {
            let W = _.get(V.inputSource);
            W && W.dispatchEvent({
                type: V.type,
                data: V.inputSource
            });
        }
        function P() {
            _.forEach(function(V, W) {
                V.disconnect(W);
            }), _.clear(), I = null, k = null, e.setRenderTarget(v), d = null, u = null, h = null, i = null, g = null, ce.stop(), n.isPresenting = !1, n.dispatchEvent({
                type: "sessionend"
            });
        }
        this.setFramebufferScaleFactor = function(V) {
            r = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
        }, this.setReferenceSpaceType = function(V) {
            a = V, n.isPresenting === !0 && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
        }, this.getReferenceSpace = function() {
            return o;
        }, this.getBaseLayer = function() {
            return u !== null ? u : d;
        }, this.getBinding = function() {
            return h;
        }, this.getFrame = function() {
            return m;
        }, this.getSession = function() {
            return i;
        }, this.setSession = async function(V) {
            if (i = V, i !== null) {
                if (v = e.getRenderTarget(), i.addEventListener("select", B), i.addEventListener("selectstart", B), i.addEventListener("selectend", B), i.addEventListener("squeeze", B), i.addEventListener("squeezestart", B), i.addEventListener("squeezeend", B), i.addEventListener("end", P), i.addEventListener("inputsourceschange", w), x.xrCompatible !== !0 && await t.makeXRCompatible(), i.renderState.layers === void 0 || e.capabilities.isWebGL2 === !1) {
                    let W = {
                        antialias: i.renderState.layers === void 0 ? x.antialias : !0,
                        alpha: x.alpha,
                        depth: x.depth,
                        stencil: x.stencil,
                        framebufferScaleFactor: r
                    };
                    d = new XRWebGLLayer(i, t, W), i.updateRenderState({
                        baseLayer: d
                    }), g = new At(d.framebufferWidth, d.framebufferHeight, {
                        format: ct,
                        type: rn,
                        encoding: e.outputEncoding
                    });
                } else {
                    f = x.antialias;
                    let W1 = null, he = null, le = null;
                    x.depth && (le = x.stencil ? 35056 : 33190, W1 = x.stencil ? Li : Vn, he = x.stencil ? Ti : cr);
                    let fe = {
                        colorFormat: x.alpha || f ? 32856 : 32849,
                        depthFormat: le,
                        scaleFactor: r
                    };
                    h = new XRWebGLBinding(i, t), u = h.createProjectionLayer(fe), i.updateRenderState({
                        layers: [
                            u
                        ]
                    }), f ? g = new Xs(u.textureWidth, u.textureHeight, {
                        format: ct,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W1),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        useRenderToTexture: l,
                        encoding: e.outputEncoding
                    }) : g = new At(u.textureWidth, u.textureHeight, {
                        format: x.alpha ? ct : Gn,
                        type: rn,
                        depthTexture: new ks(u.textureWidth, u.textureHeight, he, void 0, void 0, void 0, void 0, void 0, void 0, W1),
                        stencilBuffer: x.stencil,
                        ignoreDepth: u.ignoreDepthValues,
                        encoding: e.outputEncoding
                    });
                }
                this.setFoveation(1), o = await i.requestReferenceSpace(a), ce.setContext(i), ce.start(), n.isPresenting = !0, n.dispatchEvent({
                    type: "sessionstart"
                });
            }
        };
        function w(V) {
            let W = i.inputSources;
            for(let he = 0; he < p.length; he++)_.set(W[he], p[he]);
            for(let he1 = 0; he1 < V.removed.length; he1++){
                let le = V.removed[he1], fe = _.get(le);
                fe && (fe.dispatchEvent({
                    type: "disconnected",
                    data: le
                }), _.delete(le));
            }
            for(let he2 = 0; he2 < V.added.length; he2++){
                let le1 = V.added[he2], fe1 = _.get(le1);
                fe1 && fe1.dispatchEvent({
                    type: "connected",
                    data: le1
                });
            }
        }
        let E = new M, D = new M;
        function U(V, W, he) {
            E.setFromMatrixPosition(W.matrixWorld), D.setFromMatrixPosition(he.matrixWorld);
            let le = E.distanceTo(D), fe = W.projectionMatrix.elements, Be = he.projectionMatrix.elements, Y = fe[14] / (fe[10] - 1), Ce = fe[14] / (fe[10] + 1), ye = (fe[9] + 1) / fe[5], ge = (fe[9] - 1) / fe[5], xe = (fe[8] - 1) / fe[0], Oe = (Be[8] + 1) / Be[0], G = Y * xe, j = Y * Oe, K = le / (-xe + Oe), ue = K * -xe;
            W.matrixWorld.decompose(V.position, V.quaternion, V.scale), V.translateX(ue), V.translateZ(K), V.matrixWorld.compose(V.position, V.quaternion, V.scale), V.matrixWorldInverse.copy(V.matrixWorld).invert();
            let se = Y + K, Se = Ce + K, Te = G - ue, Pe = j + (le - ue), Ye = ye * Ce / Se * se, C = ge * Ce / Se * se;
            V.projectionMatrix.makePerspective(Te, Pe, Ye, C, se, Se);
        }
        function F(V, W) {
            W === null ? V.matrixWorld.copy(V.matrix) : V.matrixWorld.multiplyMatrices(W.matrixWorld, V.matrix), V.matrixWorldInverse.copy(V.matrixWorld).invert();
        }
        this.updateCamera = function(V) {
            if (i === null) return;
            L.near = b.near = y.near = V.near, L.far = b.far = y.far = V.far, (I !== L.near || k !== L.far) && (i.updateRenderState({
                depthNear: L.near,
                depthFar: L.far
            }), I = L.near, k = L.far);
            let W = V.parent, he = L.cameras;
            F(L, W);
            for(let fe = 0; fe < he.length; fe++)F(he[fe], W);
            L.matrixWorld.decompose(L.position, L.quaternion, L.scale), V.position.copy(L.position), V.quaternion.copy(L.quaternion), V.scale.copy(L.scale), V.matrix.copy(L.matrix), V.matrixWorld.copy(L.matrixWorld);
            let le = V.children;
            for(let fe1 = 0, Be = le.length; fe1 < Be; fe1++)le[fe1].updateMatrixWorld(!0);
            he.length === 2 ? U(L, y, b) : L.projectionMatrix.copy(y.projectionMatrix);
        }, this.getCamera = function() {
            return L;
        }, this.getFoveation = function() {
            if (u !== null) return u.fixedFoveation;
            if (d !== null) return d.fixedFoveation;
        }, this.setFoveation = function(V) {
            u !== null && (u.fixedFoveation = V), d !== null && d.fixedFoveation !== void 0 && (d.fixedFoveation = V);
        };
        let O = null;
        function ne(V, W) {
            if (c = W.getViewerPose(o), m = W, c !== null) {
                let le = c.views;
                d !== null && (e.setRenderTargetFramebuffer(g, d.framebuffer), e.setRenderTarget(g));
                let fe = !1;
                le.length !== L.cameras.length && (L.cameras.length = 0, fe = !0);
                for(let Be = 0; Be < le.length; Be++){
                    let Y = le[Be], Ce = null;
                    if (d !== null) Ce = d.getViewport(Y);
                    else {
                        let ge = h.getViewSubImage(u, Y);
                        Ce = ge.viewport, Be === 0 && (e.setRenderTargetTextures(g, ge.colorTexture, u.ignoreDepthValues ? void 0 : ge.depthStencilTexture), e.setRenderTarget(g));
                    }
                    let ye = A[Be];
                    ye.matrix.fromArray(Y.transform.matrix), ye.projectionMatrix.fromArray(Y.projectionMatrix), ye.viewport.set(Ce.x, Ce.y, Ce.width, Ce.height), Be === 0 && L.matrix.copy(ye.matrix), fe === !0 && L.cameras.push(ye);
                }
            }
            let he = i.inputSources;
            for(let le1 = 0; le1 < p.length; le1++){
                let fe1 = p[le1], Be1 = he[le1];
                fe1.update(Be1, W, o);
            }
            O && O(V, W), m = null;
        }
        let ce = new rh;
        ce.setAnimationLoop(ne), this.setAnimationLoop = function(V) {
            O = V;
        }, this.dispose = function() {};
    }
};
function Cx(s) {
    function e(g, p) {
        g.fogColor.value.copy(p.color), p.isFog ? (g.fogNear.value = p.near, g.fogFar.value = p.far) : p.isFogExp2 && (g.fogDensity.value = p.density);
    }
    function t(g, p, _, y, b) {
        p.isMeshBasicMaterial ? n(g, p) : p.isMeshLambertMaterial ? (n(g, p), l(g, p)) : p.isMeshToonMaterial ? (n(g, p), h(g, p)) : p.isMeshPhongMaterial ? (n(g, p), c(g, p)) : p.isMeshStandardMaterial ? (n(g, p), p.isMeshPhysicalMaterial ? d(g, p, b) : u(g, p)) : p.isMeshMatcapMaterial ? (n(g, p), f(g, p)) : p.isMeshDepthMaterial ? (n(g, p), m(g, p)) : p.isMeshDistanceMaterial ? (n(g, p), x(g, p)) : p.isMeshNormalMaterial ? (n(g, p), v(g, p)) : p.isLineBasicMaterial ? (i(g, p), p.isLineDashedMaterial && r(g, p)) : p.isPointsMaterial ? o(g, p, _, y) : p.isSpriteMaterial ? a(g, p) : p.isShadowMaterial ? (g.color.value.copy(p.color), g.opacity.value = p.opacity) : p.isShaderMaterial && (p.uniformsNeedUpdate = !1);
    }
    function n(g, p) {
        g.opacity.value = p.opacity, p.color && g.diffuse.value.copy(p.color), p.emissive && g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity), p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.specularMap && (g.specularMap.value = p.specularMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _ = s.get(p).envMap;
        _ && (g.envMap.value = _, g.flipEnvMap.value = _.isCubeTexture && _.isRenderTargetTexture === !1 ? -1 : 1, g.reflectivity.value = p.reflectivity, g.ior.value = p.ior, g.refractionRatio.value = p.refractionRatio), p.lightMap && (g.lightMap.value = p.lightMap, g.lightMapIntensity.value = p.lightMapIntensity), p.aoMap && (g.aoMap.value = p.aoMap, g.aoMapIntensity.value = p.aoMapIntensity);
        let y;
        p.map ? y = p.map : p.specularMap ? y = p.specularMap : p.displacementMap ? y = p.displacementMap : p.normalMap ? y = p.normalMap : p.bumpMap ? y = p.bumpMap : p.roughnessMap ? y = p.roughnessMap : p.metalnessMap ? y = p.metalnessMap : p.alphaMap ? y = p.alphaMap : p.emissiveMap ? y = p.emissiveMap : p.clearcoatMap ? y = p.clearcoatMap : p.clearcoatNormalMap ? y = p.clearcoatNormalMap : p.clearcoatRoughnessMap ? y = p.clearcoatRoughnessMap : p.specularIntensityMap ? y = p.specularIntensityMap : p.specularColorMap ? y = p.specularColorMap : p.transmissionMap ? y = p.transmissionMap : p.thicknessMap ? y = p.thicknessMap : p.sheenColorMap ? y = p.sheenColorMap : p.sheenRoughnessMap && (y = p.sheenRoughnessMap), y !== void 0 && (y.isWebGLRenderTarget && (y = y.texture), y.matrixAutoUpdate === !0 && y.updateMatrix(), g.uvTransform.value.copy(y.matrix));
        let b;
        p.aoMap ? b = p.aoMap : p.lightMap && (b = p.lightMap), b !== void 0 && (b.isWebGLRenderTarget && (b = b.texture), b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uv2Transform.value.copy(b.matrix));
    }
    function i(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity;
    }
    function r(g, p) {
        g.dashSize.value = p.dashSize, g.totalSize.value = p.dashSize + p.gapSize, g.scale.value = p.scale;
    }
    function o(g, p, _, y) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.size.value = p.size * _, g.scale.value = y * .5, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let b;
        p.map ? b = p.map : p.alphaMap && (b = p.alphaMap), b !== void 0 && (b.matrixAutoUpdate === !0 && b.updateMatrix(), g.uvTransform.value.copy(b.matrix));
    }
    function a(g, p) {
        g.diffuse.value.copy(p.color), g.opacity.value = p.opacity, g.rotation.value = p.rotation, p.map && (g.map.value = p.map), p.alphaMap && (g.alphaMap.value = p.alphaMap), p.alphaTest > 0 && (g.alphaTest.value = p.alphaTest);
        let _;
        p.map ? _ = p.map : p.alphaMap && (_ = p.alphaMap), _ !== void 0 && (_.matrixAutoUpdate === !0 && _.updateMatrix(), g.uvTransform.value.copy(_.matrix));
    }
    function l(g, p) {
        p.emissiveMap && (g.emissiveMap.value = p.emissiveMap);
    }
    function c(g, p) {
        g.specular.value.copy(p.specular), g.shininess.value = Math.max(p.shininess, 1e-4), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function h(g, p) {
        p.gradientMap && (g.gradientMap.value = p.gradientMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function u(g, p) {
        g.roughness.value = p.roughness, g.metalness.value = p.metalness, p.roughnessMap && (g.roughnessMap.value = p.roughnessMap), p.metalnessMap && (g.metalnessMap.value = p.metalnessMap), p.emissiveMap && (g.emissiveMap.value = p.emissiveMap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), s.get(p).envMap && (g.envMapIntensity.value = p.envMapIntensity);
    }
    function d(g, p, _) {
        u(g, p), g.ior.value = p.ior, p.sheen > 0 && (g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen), g.sheenRoughness.value = p.sheenRoughness, p.sheenColorMap && (g.sheenColorMap.value = p.sheenColorMap), p.sheenRoughnessMap && (g.sheenRoughnessMap.value = p.sheenRoughnessMap)), p.clearcoat > 0 && (g.clearcoat.value = p.clearcoat, g.clearcoatRoughness.value = p.clearcoatRoughness, p.clearcoatMap && (g.clearcoatMap.value = p.clearcoatMap), p.clearcoatRoughnessMap && (g.clearcoatRoughnessMap.value = p.clearcoatRoughnessMap), p.clearcoatNormalMap && (g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale), g.clearcoatNormalMap.value = p.clearcoatNormalMap, p.side === it && g.clearcoatNormalScale.value.negate())), p.transmission > 0 && (g.transmission.value = p.transmission, g.transmissionSamplerMap.value = _.texture, g.transmissionSamplerSize.value.set(_.width, _.height), p.transmissionMap && (g.transmissionMap.value = p.transmissionMap), g.thickness.value = p.thickness, p.thicknessMap && (g.thicknessMap.value = p.thicknessMap), g.attenuationDistance.value = p.attenuationDistance, g.attenuationColor.value.copy(p.attenuationColor)), g.specularIntensity.value = p.specularIntensity, g.specularColor.value.copy(p.specularColor), p.specularIntensityMap && (g.specularIntensityMap.value = p.specularIntensityMap), p.specularColorMap && (g.specularColorMap.value = p.specularColorMap);
    }
    function f(g, p) {
        p.matcap && (g.matcap.value = p.matcap), p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function m(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    function x(g, p) {
        p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias), g.referencePosition.value.copy(p.referencePosition), g.nearDistance.value = p.nearDistance, g.farDistance.value = p.farDistance;
    }
    function v(g, p) {
        p.bumpMap && (g.bumpMap.value = p.bumpMap, g.bumpScale.value = p.bumpScale, p.side === it && (g.bumpScale.value *= -1)), p.normalMap && (g.normalMap.value = p.normalMap, g.normalScale.value.copy(p.normalScale), p.side === it && g.normalScale.value.negate()), p.displacementMap && (g.displacementMap.value = p.displacementMap, g.displacementScale.value = p.displacementScale, g.displacementBias.value = p.displacementBias);
    }
    return {
        refreshFogUniforms: e,
        refreshMaterialUniforms: t
    };
}
function Lx() {
    let s = qs("canvas");
    return s.style.display = "block", s;
}
function qe(s = {}) {
    let e = s.canvas !== void 0 ? s.canvas : Lx(), t = s.context !== void 0 ? s.context : null, n = s.alpha !== void 0 ? s.alpha : !1, i = s.depth !== void 0 ? s.depth : !0, r = s.stencil !== void 0 ? s.stencil : !0, o = s.antialias !== void 0 ? s.antialias : !1, a = s.premultipliedAlpha !== void 0 ? s.premultipliedAlpha : !0, l = s.preserveDrawingBuffer !== void 0 ? s.preserveDrawingBuffer : !1, c = s.powerPreference !== void 0 ? s.powerPreference : "default", h = s.failIfMajorPerformanceCaveat !== void 0 ? s.failIfMajorPerformanceCaveat : !1, u = null, d = null, f = [], m = [];
    this.domElement = e, this.debug = {
        checkShaderErrors: !0
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.outputEncoding = Nt, this.physicallyCorrectLights = !1, this.toneMapping = _n, this.toneMappingExposure = 1;
    let x = this, v = !1, g = 0, p = 0, _ = null, y = -1, b = null, A = new Ve, L = new Ve, I = null, k = e.width, B = e.height, P = 1, w = null, E = null, D = new Ve(0, 0, k, B), U = new Ve(0, 0, k, B), F = !1, O = [], ne = new Dr, ce = !1, V = !1, W = null, he = new pe, le = new M, fe = {
        background: null,
        fog: null,
        environment: null,
        overrideMaterial: null,
        isScene: !0
    };
    function Be() {
        return _ === null ? P : 1;
    }
    let Y = t;
    function Ce(S, N) {
        for(let H = 0; H < S.length; H++){
            let z = S[H], q = e.getContext(z, N);
            if (q !== null) return q;
        }
        return null;
    }
    try {
        let S = {
            alpha: n,
            depth: i,
            stencil: r,
            antialias: o,
            premultipliedAlpha: a,
            preserveDrawingBuffer: l,
            powerPreference: c,
            failIfMajorPerformanceCaveat: h
        };
        if ("setAttribute" in e && e.setAttribute("data-engine", `three.js r${ca}`), e.addEventListener("webglcontextlost", Ee, !1), e.addEventListener("webglcontextrestored", me, !1), Y === null) {
            let N = [
                "webgl2",
                "webgl",
                "experimental-webgl"
            ];
            if (x.isWebGL1Renderer === !0 && N.shift(), Y = Ce(N, S), Y === null) throw Ce(N) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
        }
        Y.getShaderPrecisionFormat === void 0 && (Y.getShaderPrecisionFormat = function() {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            };
        });
    } catch (S1) {
        throw console.error("THREE.WebGLRenderer: " + S1.message), S1;
    }
    let ye, ge, xe, Oe, G, j, K, ue, se, Se, Te, Pe, Ye, C, T, J, $, re, Z, Me, ve, te, R;
    function ee() {
        ye = new Qm(Y), ge = new Xm(Y, ye, s), ye.init(ge), te = new Ex(Y, ye, ge), xe = new Sx(Y, ye, ge), O[0] = 1029, Oe = new tg(Y), G = new fx, j = new Tx(Y, ye, xe, G, ge, te, Oe), K = new Ym(x), ue = new jm(x), se = new gf(Y, ge), R = new Wm(Y, ye, se, ge), Se = new Km(Y, se, Oe, R), Te = new sg(Y, Se, se, Oe), Z = new rg(Y, ge, j), J = new Jm(G), Pe = new dx(x, K, ue, ye, ge, R, J), Ye = new Cx(G), C = new mx, T = new Mx(ye, ge), re = new Vm(x, K, xe, Te, a), $ = new yh(x, Te, ge), Me = new qm(Y, ye, Oe, ge), ve = new eg(Y, ye, Oe, ge), Oe.programs = Pe.programs, x.capabilities = ge, x.extensions = ye, x.properties = G, x.renderLists = C, x.shadowMap = $, x.state = xe, x.info = Oe;
    }
    ee();
    let Q = new vh(x, Y);
    this.xr = Q, this.getContext = function() {
        return Y;
    }, this.getContextAttributes = function() {
        return Y.getContextAttributes();
    }, this.forceContextLoss = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.loseContext();
    }, this.forceContextRestore = function() {
        let S = ye.get("WEBGL_lose_context");
        S && S.restoreContext();
    }, this.getPixelRatio = function() {
        return P;
    }, this.setPixelRatio = function(S) {
        S !== void 0 && (P = S, this.setSize(k, B, !1));
    }, this.getSize = function(S) {
        return S.set(k, B);
    }, this.setSize = function(S, N, H) {
        if (Q.isPresenting) {
            console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
            return;
        }
        k = S, B = N, e.width = Math.floor(S * P), e.height = Math.floor(N * P), H !== !1 && (e.style.width = S + "px", e.style.height = N + "px"), this.setViewport(0, 0, S, N);
    }, this.getDrawingBufferSize = function(S) {
        return S.set(k * P, B * P).floor();
    }, this.setDrawingBufferSize = function(S, N, H) {
        k = S, B = N, P = H, e.width = Math.floor(S * H), e.height = Math.floor(N * H), this.setViewport(0, 0, S, N);
    }, this.getCurrentViewport = function(S) {
        return S.copy(A);
    }, this.getViewport = function(S) {
        return S.copy(D);
    }, this.setViewport = function(S, N, H, z) {
        S.isVector4 ? D.set(S.x, S.y, S.z, S.w) : D.set(S, N, H, z), xe.viewport(A.copy(D).multiplyScalar(P).floor());
    }, this.getScissor = function(S) {
        return S.copy(U);
    }, this.setScissor = function(S, N, H, z) {
        S.isVector4 ? U.set(S.x, S.y, S.z, S.w) : U.set(S, N, H, z), xe.scissor(L.copy(U).multiplyScalar(P).floor());
    }, this.getScissorTest = function() {
        return F;
    }, this.setScissorTest = function(S) {
        xe.setScissorTest(F = S);
    }, this.setOpaqueSort = function(S) {
        w = S;
    }, this.setTransparentSort = function(S) {
        E = S;
    }, this.getClearColor = function(S) {
        return S.copy(re.getClearColor());
    }, this.setClearColor = function() {
        re.setClearColor.apply(re, arguments);
    }, this.getClearAlpha = function() {
        return re.getClearAlpha();
    }, this.setClearAlpha = function() {
        re.setClearAlpha.apply(re, arguments);
    }, this.clear = function(S, N, H) {
        let z = 0;
        (S === void 0 || S) && (z |= 16384), (N === void 0 || N) && (z |= 256), (H === void 0 || H) && (z |= 1024), Y.clear(z);
    }, this.clearColor = function() {
        this.clear(!0, !1, !1);
    }, this.clearDepth = function() {
        this.clear(!1, !0, !1);
    }, this.clearStencil = function() {
        this.clear(!1, !1, !0);
    }, this.dispose = function() {
        e.removeEventListener("webglcontextlost", Ee, !1), e.removeEventListener("webglcontextrestored", me, !1), C.dispose(), T.dispose(), G.dispose(), K.dispose(), ue.dispose(), Te.dispose(), R.dispose(), Pe.dispose(), Q.dispose(), Q.removeEventListener("sessionstart", Ut), Q.removeEventListener("sessionend", Ot), W && (W.dispose(), W = null), Ln.stop();
    };
    function Ee(S) {
        S.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), v = !0;
    }
    function me() {
        console.log("THREE.WebGLRenderer: Context Restored."), v = !1;
        let S = Oe.autoReset, N = $.enabled, H = $.autoUpdate, z = $.needsUpdate, q = $.type;
        ee(), Oe.autoReset = S, $.enabled = N, $.autoUpdate = H, $.needsUpdate = z, $.type = q;
    }
    function Re(S) {
        let N = S.target;
        N.removeEventListener("dispose", Re), oe(N);
    }
    function oe(S) {
        Le(S), G.remove(S);
    }
    function Le(S) {
        let N = G.get(S).programs;
        N !== void 0 && (N.forEach(function(H) {
            Pe.releaseProgram(H);
        }), S.isShaderMaterial && Pe.releaseShaderCache(S));
    }
    this.renderBufferDirect = function(S, N, H, z, q, be) {
        N === null && (N = fe);
        let Ae = q.isMesh && q.matrixWorld.determinant() < 0, Ie = lu(S, N, H, z, q);
        xe.setMaterial(z, Ae);
        let we = H.index, He = H.attributes.position;
        if (we === null) {
            if (He === void 0 || He.count === 0) return;
        } else if (we.count === 0) return;
        let De = 1;
        z.wireframe === !0 && (we = Se.getWireframeAttribute(H), De = 2), R.setup(q, z, Ie, H, we);
        let ze, je = Me;
        we !== null && (ze = se.get(we), je = ve, je.setIndex(ze));
        let Rn = we !== null ? we.count : He.count, ei = H.drawRange.start * De, Ge = H.drawRange.count * De, Ht = be !== null ? be.start * De : 0, at = be !== null ? be.count * De : 1 / 0, kt = Math.max(ei, Ht), Gr = Math.min(Rn, ei + Ge, Ht + at) - 1, Gt = Math.max(0, Gr - kt + 1);
        if (Gt !== 0) {
            if (q.isMesh) z.wireframe === !0 ? (xe.setLineWidth(z.wireframeLinewidth * Be()), je.setMode(1)) : je.setMode(4);
            else if (q.isLine) {
                let Zt = z.linewidth;
                Zt === void 0 && (Zt = 1), xe.setLineWidth(Zt * Be()), q.isLineSegments ? je.setMode(1) : q.isLineLoop ? je.setMode(2) : je.setMode(3);
            } else q.isPoints ? je.setMode(0) : q.isSprite && je.setMode(4);
            if (q.isInstancedMesh) je.renderInstances(kt, Gt, q.count);
            else if (H.isInstancedBufferGeometry) {
                let Zt1 = Math.min(H.instanceCount, H._maxInstanceCount);
                je.renderInstances(kt, Gt, Zt1);
            } else je.render(kt, Gt);
        }
    }, this.compile = function(S, N) {
        d = T.get(S), d.init(), m.push(d), S.traverseVisible(function(H) {
            H.isLight && H.layers.test(N.layers) && (d.pushLight(H), H.castShadow && d.pushShadow(H));
        }), d.setupLights(x.physicallyCorrectLights), S.traverse(function(H) {
            let z = H.material;
            if (z) if (Array.isArray(z)) for(let q = 0; q < z.length; q++){
                let be = z[q];
                xo(be, S, H);
            }
            else xo(z, S, H);
        }), m.pop(), d = null;
    };
    let Xe = null;
    function We(S) {
        Xe && Xe(S);
    }
    function Ut() {
        Ln.stop();
    }
    function Ot() {
        Ln.start();
    }
    let Ln = new rh;
    Ln.setAnimationLoop(We), typeof window < "u" && Ln.setContext(window), this.setAnimationLoop = function(S) {
        Xe = S, Q.setAnimationLoop(S), S === null ? Ln.stop() : Ln.start();
    }, Q.addEventListener("sessionstart", Ut), Q.addEventListener("sessionend", Ot), this.render = function(S, N) {
        if (N !== void 0 && N.isCamera !== !0) {
            console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
            return;
        }
        if (v === !0) return;
        S.autoUpdate === !0 && S.updateMatrixWorld(), N.parent === null && N.updateMatrixWorld(), Q.enabled === !0 && Q.isPresenting === !0 && (Q.cameraAutoUpdate === !0 && Q.updateCamera(N), N = Q.getCamera()), S.isScene === !0 && S.onBeforeRender(x, S, N, _), d = T.get(S, m.length), d.init(), m.push(d), he.multiplyMatrices(N.projectionMatrix, N.matrixWorldInverse), ne.setFromProjectionMatrix(he), V = this.localClippingEnabled, ce = J.init(this.clippingPlanes, V, N), u = C.get(S, f.length), u.init(), f.push(u), Qa(S, N, 0, x.sortObjects), u.finish(), x.sortObjects === !0 && u.sort(w, E), ce === !0 && J.beginShadows();
        let H = d.state.shadowsArray;
        if ($.render(H, S, N), ce === !0 && J.endShadows(), this.info.autoReset === !0 && this.info.reset(), re.render(u, S), d.setupLights(x.physicallyCorrectLights), N.isArrayCamera) {
            let z = N.cameras;
            for(let q = 0, be = z.length; q < be; q++){
                let Ae = z[q];
                Ka(u, S, Ae, Ae.viewport);
            }
        } else Ka(u, S, N);
        _ !== null && (j.updateMultisampleRenderTarget(_), j.updateRenderTargetMipmap(_)), S.isScene === !0 && S.onAfterRender(x, S, N), xe.buffers.depth.setTest(!0), xe.buffers.depth.setMask(!0), xe.buffers.color.setMask(!0), xe.setPolygonOffset(!1), R.resetDefaultState(), y = -1, b = null, m.pop(), m.length > 0 ? d = m[m.length - 1] : d = null, f.pop(), f.length > 0 ? u = f[f.length - 1] : u = null;
    };
    function Qa(S, N, H, z) {
        if (S.visible === !1) return;
        if (S.layers.test(N.layers)) {
            if (S.isGroup) H = S.renderOrder;
            else if (S.isLOD) S.autoUpdate === !0 && S.update(N);
            else if (S.isLight) d.pushLight(S), S.castShadow && d.pushShadow(S);
            else if (S.isSprite) {
                if (!S.frustumCulled || ne.intersectsSprite(S)) {
                    z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                    let Ae = Te.update(S), Ie = S.material;
                    Ie.visible && u.push(S, Ae, Ie, H, le.z, null);
                }
            } else if ((S.isMesh || S.isLine || S.isPoints) && (S.isSkinnedMesh && S.skeleton.frame !== Oe.render.frame && (S.skeleton.update(), S.skeleton.frame = Oe.render.frame), !S.frustumCulled || ne.intersectsObject(S))) {
                z && le.setFromMatrixPosition(S.matrixWorld).applyMatrix4(he);
                let Ae1 = Te.update(S), Ie1 = S.material;
                if (Array.isArray(Ie1)) {
                    let we = Ae1.groups;
                    for(let He = 0, De = we.length; He < De; He++){
                        let ze = we[He], je = Ie1[ze.materialIndex];
                        je && je.visible && u.push(S, Ae1, je, H, le.z, ze);
                    }
                } else Ie1.visible && u.push(S, Ae1, Ie1, H, le.z, null);
            }
        }
        let be = S.children;
        for(let Ae2 = 0, Ie2 = be.length; Ae2 < Ie2; Ae2++)Qa(be[Ae2], N, H, z);
    }
    function Ka(S, N, H, z) {
        let q = S.opaque, be = S.transmissive, Ae = S.transparent;
        d.setupLightsView(H), be.length > 0 && ou(q, N, H), z && xe.viewport(A.copy(z)), q.length > 0 && kr(q, N, H), be.length > 0 && kr(be, N, H), Ae.length > 0 && kr(Ae, N, H);
    }
    function ou(S, N, H) {
        if (W === null) {
            let Ae = o === !0 && ge.isWebGL2 === !0 ? Xs : At;
            W = new Ae(1024, 1024, {
                generateMipmaps: !0,
                type: te.convert(kn) !== null ? kn : rn,
                minFilter: Ui,
                magFilter: rt,
                wrapS: vt,
                wrapT: vt,
                useRenderToTexture: ye.has("WEBGL_multisampled_render_to_texture")
            });
        }
        let z = x.getRenderTarget();
        x.setRenderTarget(W), x.clear();
        let q = x.toneMapping;
        x.toneMapping = _n, kr(S, N, H), x.toneMapping = q, j.updateMultisampleRenderTarget(W), j.updateRenderTargetMipmap(W), x.setRenderTarget(z);
    }
    function kr(S, N, H) {
        let z = N.isScene === !0 ? N.overrideMaterial : null;
        for(let q = 0, be = S.length; q < be; q++){
            let Ae = S[q], Ie = Ae.object, we = Ae.geometry, He = z === null ? Ae.material : z, De = Ae.group;
            Ie.layers.test(H.layers) && au(Ie, N, H, we, He, De);
        }
    }
    function au(S, N, H, z, q, be) {
        S.onBeforeRender(x, N, H, z, q, be), S.modelViewMatrix.multiplyMatrices(H.matrixWorldInverse, S.matrixWorld), S.normalMatrix.getNormalMatrix(S.modelViewMatrix), q.onBeforeRender(x, N, H, z, S, be), q.transparent === !0 && q.side === Ci ? (q.side = it, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ai, q.needsUpdate = !0, x.renderBufferDirect(H, N, z, q, S, be), q.side = Ci) : x.renderBufferDirect(H, N, z, q, S, be), S.onAfterRender(x, N, H, z, q, be);
    }
    function xo(S, N, H) {
        N.isScene !== !0 && (N = fe);
        let z = G.get(S), q = d.state.lights, be = d.state.shadowsArray, Ae = q.state.version, Ie = Pe.getParameters(S, q.state, be, N, H), we = Pe.getProgramCacheKey(Ie), He = z.programs;
        z.environment = S.isMeshStandardMaterial ? N.environment : null, z.fog = N.fog, z.envMap = (S.isMeshStandardMaterial ? ue : K).get(S.envMap || z.environment), He === void 0 && (S.addEventListener("dispose", Re), He = new Map, z.programs = He);
        let De = He.get(we);
        if (De !== void 0) {
            if (z.currentProgram === De && z.lightsStateVersion === Ae) return el(S, Ie), De;
        } else Ie.uniforms = Pe.getUniforms(S), S.onBuild(H, Ie, x), S.onBeforeCompile(Ie, x), De = Pe.acquireProgram(Ie, we), He.set(we, De), z.uniforms = Ie.uniforms;
        let ze = z.uniforms;
        (!S.isShaderMaterial && !S.isRawShaderMaterial || S.clipping === !0) && (ze.clippingPlanes = J.uniform), el(S, Ie), z.needsLights = hu(S), z.lightsStateVersion = Ae, z.needsLights && (ze.ambientLightColor.value = q.state.ambient, ze.lightProbe.value = q.state.probe, ze.directionalLights.value = q.state.directional, ze.directionalLightShadows.value = q.state.directionalShadow, ze.spotLights.value = q.state.spot, ze.spotLightShadows.value = q.state.spotShadow, ze.rectAreaLights.value = q.state.rectArea, ze.ltc_1.value = q.state.rectAreaLTC1, ze.ltc_2.value = q.state.rectAreaLTC2, ze.pointLights.value = q.state.point, ze.pointLightShadows.value = q.state.pointShadow, ze.hemisphereLights.value = q.state.hemi, ze.directionalShadowMap.value = q.state.directionalShadowMap, ze.directionalShadowMatrix.value = q.state.directionalShadowMatrix, ze.spotShadowMap.value = q.state.spotShadowMap, ze.spotShadowMatrix.value = q.state.spotShadowMatrix, ze.pointShadowMap.value = q.state.pointShadowMap, ze.pointShadowMatrix.value = q.state.pointShadowMatrix);
        let je = De.getUniforms(), Rn = bn.seqWithValue(je.seq, ze);
        return z.currentProgram = De, z.uniformsList = Rn, De;
    }
    function el(S, N) {
        let H = G.get(S);
        H.outputEncoding = N.outputEncoding, H.instancing = N.instancing, H.skinning = N.skinning, H.morphTargets = N.morphTargets, H.morphNormals = N.morphNormals, H.morphTargetsCount = N.morphTargetsCount, H.numClippingPlanes = N.numClippingPlanes, H.numIntersection = N.numClipIntersection, H.vertexAlphas = N.vertexAlphas, H.vertexTangents = N.vertexTangents, H.toneMapping = N.toneMapping;
    }
    function lu(S, N, H, z, q) {
        N.isScene !== !0 && (N = fe), j.resetTextureUnits();
        let be = N.fog, Ae = z.isMeshStandardMaterial ? N.environment : null, Ie = _ === null ? x.outputEncoding : _.texture.encoding, we = (z.isMeshStandardMaterial ? ue : K).get(z.envMap || Ae), He = z.vertexColors === !0 && !!H.attributes.color && H.attributes.color.itemSize === 4, De = !!z.normalMap && !!H.attributes.tangent, ze = !!H.morphAttributes.position, je = !!H.morphAttributes.normal, Rn = H.morphAttributes.position ? H.morphAttributes.position.length : 0, ei = z.toneMapped ? x.toneMapping : _n, Ge = G.get(z), Ht = d.state.lights;
        if (ce === !0 && (V === !0 || S !== b)) {
            let Pt = S === b && z.id === y;
            J.setState(z, S, Pt);
        }
        let at = !1;
        z.version === Ge.__version ? (Ge.needsLights && Ge.lightsStateVersion !== Ht.state.version || Ge.outputEncoding !== Ie || q.isInstancedMesh && Ge.instancing === !1 || !q.isInstancedMesh && Ge.instancing === !0 || q.isSkinnedMesh && Ge.skinning === !1 || !q.isSkinnedMesh && Ge.skinning === !0 || Ge.envMap !== we || z.fog && Ge.fog !== be || Ge.numClippingPlanes !== void 0 && (Ge.numClippingPlanes !== J.numPlanes || Ge.numIntersection !== J.numIntersection) || Ge.vertexAlphas !== He || Ge.vertexTangents !== De || Ge.morphTargets !== ze || Ge.morphNormals !== je || Ge.toneMapping !== ei || ge.isWebGL2 === !0 && Ge.morphTargetsCount !== Rn) && (at = !0) : (at = !0, Ge.__version = z.version);
        let kt = Ge.currentProgram;
        at === !0 && (kt = xo(z, N, q));
        let Gr = !1, Gt = !1, Zt = !1, xt = kt.getUniforms(), Xi = Ge.uniforms;
        if (xe.useProgram(kt.program) && (Gr = !0, Gt = !0, Zt = !0), z.id !== y && (y = z.id, Gt = !0), Gr || b !== S) {
            if (xt.setValue(Y, "projectionMatrix", S.projectionMatrix), ge.logarithmicDepthBuffer && xt.setValue(Y, "logDepthBufFC", 2 / (Math.log(S.far + 1) / Math.LN2)), b !== S && (b = S, Gt = !0, Zt = !0), z.isShaderMaterial || z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshStandardMaterial || z.envMap) {
                let Pt1 = xt.map.cameraPosition;
                Pt1 !== void 0 && Pt1.setValue(Y, le.setFromMatrixPosition(S.matrixWorld));
            }
            (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial) && xt.setValue(Y, "isOrthographic", S.isOrthographicCamera === !0), (z.isMeshPhongMaterial || z.isMeshToonMaterial || z.isMeshLambertMaterial || z.isMeshBasicMaterial || z.isMeshStandardMaterial || z.isShaderMaterial || z.isShadowMaterial || q.isSkinnedMesh) && xt.setValue(Y, "viewMatrix", S.matrixWorldInverse);
        }
        if (q.isSkinnedMesh) {
            xt.setOptional(Y, q, "bindMatrix"), xt.setOptional(Y, q, "bindMatrixInverse");
            let Pt2 = q.skeleton;
            Pt2 && (ge.floatVertexTextures ? (Pt2.boneTexture === null && Pt2.computeBoneTexture(), xt.setValue(Y, "boneTexture", Pt2.boneTexture, j), xt.setValue(Y, "boneTextureSize", Pt2.boneTextureSize)) : xt.setOptional(Y, Pt2, "boneMatrices"));
        }
        return !!H && (H.morphAttributes.position !== void 0 || H.morphAttributes.normal !== void 0) && Z.update(q, H, z, kt), (Gt || Ge.receiveShadow !== q.receiveShadow) && (Ge.receiveShadow = q.receiveShadow, xt.setValue(Y, "receiveShadow", q.receiveShadow)), Gt && (xt.setValue(Y, "toneMappingExposure", x.toneMappingExposure), Ge.needsLights && cu(Xi, Zt), be && z.fog && Ye.refreshFogUniforms(Xi, be), Ye.refreshMaterialUniforms(Xi, z, P, B, W), bn.upload(Y, Ge.uniformsList, Xi, j)), z.isShaderMaterial && z.uniformsNeedUpdate === !0 && (bn.upload(Y, Ge.uniformsList, Xi, j), z.uniformsNeedUpdate = !1), z.isSpriteMaterial && xt.setValue(Y, "center", q.center), xt.setValue(Y, "modelViewMatrix", q.modelViewMatrix), xt.setValue(Y, "normalMatrix", q.normalMatrix), xt.setValue(Y, "modelMatrix", q.matrixWorld), kt;
    }
    function cu(S, N) {
        S.ambientLightColor.needsUpdate = N, S.lightProbe.needsUpdate = N, S.directionalLights.needsUpdate = N, S.directionalLightShadows.needsUpdate = N, S.pointLights.needsUpdate = N, S.pointLightShadows.needsUpdate = N, S.spotLights.needsUpdate = N, S.spotLightShadows.needsUpdate = N, S.rectAreaLights.needsUpdate = N, S.hemisphereLights.needsUpdate = N;
    }
    function hu(S) {
        return S.isMeshLambertMaterial || S.isMeshToonMaterial || S.isMeshPhongMaterial || S.isMeshStandardMaterial || S.isShadowMaterial || S.isShaderMaterial && S.lights === !0;
    }
    this.getActiveCubeFace = function() {
        return g;
    }, this.getActiveMipmapLevel = function() {
        return p;
    }, this.getRenderTarget = function() {
        return _;
    }, this.setRenderTargetTextures = function(S, N, H) {
        G.get(S.texture).__webglTexture = N, G.get(S.depthTexture).__webglTexture = H;
        let z = G.get(S);
        z.__hasExternalTextures = !0, z.__hasExternalTextures && (z.__autoAllocateDepthBuffer = H === void 0, z.__autoAllocateDepthBuffer || S.useRenderToTexture && (console.warn("render-to-texture extension was disabled because an external texture was provided"), S.useRenderToTexture = !1, S.useRenderbuffer = !0));
    }, this.setRenderTargetFramebuffer = function(S, N) {
        let H = G.get(S);
        H.__webglFramebuffer = N, H.__useDefaultFramebuffer = N === void 0;
    }, this.setRenderTarget = function(S, N = 0, H = 0) {
        _ = S, g = N, p = H;
        let z = !0;
        if (S) {
            let we = G.get(S);
            we.__useDefaultFramebuffer !== void 0 ? (xe.bindFramebuffer(36160, null), z = !1) : we.__webglFramebuffer === void 0 ? j.setupRenderTarget(S) : we.__hasExternalTextures && j.rebindTextures(S, G.get(S.texture).__webglTexture, G.get(S.depthTexture).__webglTexture);
        }
        let q = null, be = !1, Ae = !1;
        if (S) {
            let we1 = S.texture;
            (we1.isDataTexture3D || we1.isDataTexture2DArray) && (Ae = !0);
            let He = G.get(S).__webglFramebuffer;
            S.isWebGLCubeRenderTarget ? (q = He[N], be = !0) : S.useRenderbuffer ? q = G.get(S).__webglMultisampledFramebuffer : q = He, A.copy(S.viewport), L.copy(S.scissor), I = S.scissorTest;
        } else A.copy(D).multiplyScalar(P).floor(), L.copy(U).multiplyScalar(P).floor(), I = F;
        if (xe.bindFramebuffer(36160, q) && ge.drawBuffers && z) {
            let we2 = !1;
            if (S) if (S.isWebGLMultipleRenderTargets) {
                let He1 = S.texture;
                if (O.length !== He1.length || O[0] !== 36064) {
                    for(let De = 0, ze = He1.length; De < ze; De++)O[De] = 36064 + De;
                    O.length = He1.length, we2 = !0;
                }
            } else (O.length !== 1 || O[0] !== 36064) && (O[0] = 36064, O.length = 1, we2 = !0);
            else (O.length !== 1 || O[0] !== 1029) && (O[0] = 1029, O.length = 1, we2 = !0);
            we2 && (ge.isWebGL2 ? Y.drawBuffers(O) : ye.get("WEBGL_draw_buffers").drawBuffersWEBGL(O));
        }
        if (xe.viewport(A), xe.scissor(L), xe.setScissorTest(I), be) {
            let we3 = G.get(S.texture);
            Y.framebufferTexture2D(36160, 36064, 34069 + N, we3.__webglTexture, H);
        } else if (Ae) {
            let we4 = G.get(S.texture), He2 = N || 0;
            Y.framebufferTextureLayer(36160, 36064, we4.__webglTexture, H || 0, He2);
        }
        y = -1;
    }, this.readRenderTargetPixels = function(S, N, H, z, q, be, Ae) {
        if (!(S && S.isWebGLRenderTarget)) {
            console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
            return;
        }
        let Ie = G.get(S).__webglFramebuffer;
        if (S.isWebGLCubeRenderTarget && Ae !== void 0 && (Ie = Ie[Ae]), Ie) {
            xe.bindFramebuffer(36160, Ie);
            try {
                let we = S.texture, He = we.format, De = we.type;
                if (He !== ct && te.convert(He) !== Y.getParameter(35739)) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    return;
                }
                let ze = De === kn && (ye.has("EXT_color_buffer_half_float") || ge.isWebGL2 && ye.has("EXT_color_buffer_float"));
                if (De !== rn && te.convert(De) !== Y.getParameter(35738) && !(De === nn && (ge.isWebGL2 || ye.has("OES_texture_float") || ye.has("WEBGL_color_buffer_float"))) && !ze) {
                    console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    return;
                }
                Y.checkFramebufferStatus(36160) === 36053 ? N >= 0 && N <= S.width - z && H >= 0 && H <= S.height - q && Y.readPixels(N, H, z, q, te.convert(He), te.convert(De), be) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.");
            } finally{
                let we1 = _ !== null ? G.get(_).__webglFramebuffer : null;
                xe.bindFramebuffer(36160, we1);
            }
        }
    }, this.copyFramebufferToTexture = function(S, N, H = 0) {
        if (N.isFramebufferTexture !== !0) {
            console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");
            return;
        }
        let z = Math.pow(2, -H), q = Math.floor(N.image.width * z), be = Math.floor(N.image.height * z);
        j.setTexture2D(N, 0), Y.copyTexSubImage2D(3553, H, 0, 0, S.x, S.y, q, be), xe.unbindTexture();
    }, this.copyTextureToTexture = function(S, N, H, z = 0) {
        let q = N.image.width, be = N.image.height, Ae = te.convert(H.format), Ie = te.convert(H.type);
        j.setTexture2D(H, 0), Y.pixelStorei(37440, H.flipY), Y.pixelStorei(37441, H.premultiplyAlpha), Y.pixelStorei(3317, H.unpackAlignment), N.isDataTexture ? Y.texSubImage2D(3553, z, S.x, S.y, q, be, Ae, Ie, N.image.data) : N.isCompressedTexture ? Y.compressedTexSubImage2D(3553, z, S.x, S.y, N.mipmaps[0].width, N.mipmaps[0].height, Ae, N.mipmaps[0].data) : Y.texSubImage2D(3553, z, S.x, S.y, Ae, Ie, N.image), z === 0 && H.generateMipmaps && Y.generateMipmap(3553), xe.unbindTexture();
    }, this.copyTextureToTexture3D = function(S, N, H, z, q = 0) {
        if (x.isWebGL1Renderer) {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
            return;
        }
        let be = S.max.x - S.min.x + 1, Ae = S.max.y - S.min.y + 1, Ie = S.max.z - S.min.z + 1, we = te.convert(z.format), He = te.convert(z.type), De;
        if (z.isDataTexture3D) j.setTexture3D(z, 0), De = 32879;
        else if (z.isDataTexture2DArray) j.setTexture2DArray(z, 0), De = 35866;
        else {
            console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
            return;
        }
        Y.pixelStorei(37440, z.flipY), Y.pixelStorei(37441, z.premultiplyAlpha), Y.pixelStorei(3317, z.unpackAlignment);
        let ze = Y.getParameter(3314), je = Y.getParameter(32878), Rn = Y.getParameter(3316), ei = Y.getParameter(3315), Ge = Y.getParameter(32877), Ht = H.isCompressedTexture ? H.mipmaps[0] : H.image;
        Y.pixelStorei(3314, Ht.width), Y.pixelStorei(32878, Ht.height), Y.pixelStorei(3316, S.min.x), Y.pixelStorei(3315, S.min.y), Y.pixelStorei(32877, S.min.z), H.isDataTexture || H.isDataTexture3D ? Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht.data) : H.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), Y.compressedTexSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, Ht.data)) : Y.texSubImage3D(De, q, N.x, N.y, N.z, be, Ae, Ie, we, He, Ht), Y.pixelStorei(3314, ze), Y.pixelStorei(32878, je), Y.pixelStorei(3316, Rn), Y.pixelStorei(3315, ei), Y.pixelStorei(32877, Ge), q === 0 && z.generateMipmaps && Y.generateMipmap(De), xe.unbindTexture();
    }, this.initTexture = function(S) {
        j.setTexture2D(S, 0), xe.unbindTexture();
    }, this.resetState = function() {
        g = 0, p = 0, _ = null, xe.reset(), R.reset();
    }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
        detail: this
    }));
}
qe.prototype.isWebGLRenderer = !0;
var _h = class extends qe {
};
_h.prototype.isWebGL1Renderer = !0;
var Nr = class {
    constructor(e, t = 25e-5){
        this.name = "", this.color = new ae(e), this.density = t;
    }
    clone() {
        return new Nr(this.color, this.density);
    }
    toJSON() {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        };
    }
};
Nr.prototype.isFogExp2 = !0;
var Br = class {
    constructor(e, t = 1, n = 1e3){
        this.name = "", this.color = new ae(e), this.near = t, this.far = n;
    }
    clone() {
        return new Br(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        };
    }
};
Br.prototype.isFog = !0;
var no = class extends Ne {
    constructor(){
        super();
        this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
            detail: this
        }));
    }
    copy(e, t) {
        return super.copy(e, t), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return this.fog !== null && (t.object.fog = this.fog.toJSON()), t;
    }
};
no.prototype.isScene = !0;
var $n = class {
    constructor(e, t){
        this.array = e, this.stride = t, this.count = e !== void 0 ? e.length / t : 0, this.usage = hr, this.updateRange = {
            offset: 0,
            count: -1
        }, this.version = 0, this.uuid = Et();
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setUsage(e) {
        return this.usage = e, this;
    }
    copy(e) {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this;
    }
    copyAt(e, t, n) {
        e *= this.stride, n *= t.stride;
        for(let i = 0, r = this.stride; i < r; i++)this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
        let t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]), n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return this.onUploadCallback = e, this;
    }
    toJSON(e) {
        return e.arrayBuffers === void 0 && (e.arrayBuffers = {}), this.array.buffer._uuid === void 0 && (this.array.buffer._uuid = Et()), e.arrayBuffers[this.array.buffer._uuid] === void 0 && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
            uuid: this.uuid,
            buffer: this.array.buffer._uuid,
            type: this.array.constructor.name,
            stride: this.stride
        };
    }
};
$n.prototype.isInterleavedBuffer = !0;
var Ke = new M, Sn = class {
    constructor(e, t, n, i = !1){
        this.name = "", this.data = e, this.itemSize = t, this.offset = n, this.normalized = i === !0;
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for(let t = 0, n = this.data.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyMatrix4(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    applyNormalMatrix(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.applyNormalMatrix(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    transformDirection(e) {
        for(let t = 0, n = this.count; t < n; t++)Ke.x = this.getX(t), Ke.y = this.getY(t), Ke.z = this.getZ(t), Ke.transformDirection(e), this.setXYZ(t, Ke.x, Ke.y, Ke.z);
        return this;
    }
    setX(e, t) {
        return this.data.array[e * this.data.stride + this.offset] = t, this;
    }
    setY(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 1] = t, this;
    }
    setZ(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 2] = t, this;
    }
    setW(e, t) {
        return this.data.array[e * this.data.stride + this.offset + 3] = t, this;
    }
    getX(e) {
        return this.data.array[e * this.data.stride + this.offset];
    }
    getY(e) {
        return this.data.array[e * this.data.stride + this.offset + 1];
    }
    getZ(e) {
        return this.data.array[e * this.data.stride + this.offset + 2];
    }
    getW(e) {
        return this.data.array[e * this.data.stride + this.offset + 3];
    }
    setXY(e, t, n) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this;
    }
    setXYZ(e, t, n, i) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this;
    }
    setXYZW(e, t, n, i, r) {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = i, this.data.array[e + 3] = r, this;
    }
    clone(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return new Ue(new this.array.constructor(t), this.itemSize, this.normalized);
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)), new Sn(e.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);
    }
    toJSON(e) {
        if (e === void 0) {
            console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
            let t = [];
            for(let n = 0; n < this.count; n++){
                let i = n * this.data.stride + this.offset;
                for(let r = 0; r < this.itemSize; r++)t.push(this.data.array[i + r]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized
            };
        } else return e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}), e.interleavedBuffers[this.data.uuid] === void 0 && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
            isInterleavedBufferAttribute: !0,
            itemSize: this.itemSize,
            data: this.data.uuid,
            offset: this.offset,
            normalized: this.normalized
        };
    }
};
Sn.prototype.isInterleavedBufferAttribute = !0;
var io = class extends dt {
    constructor(e){
        super();
        this.type = "SpriteMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
io.prototype.isSpriteMaterial = !0;
var gi, Qi = new M, xi = new M, yi = new M, vi = new X, Ki = new X, Mh = new pe, hs = new M, er = new M, us = new M, jl = new X, qo = new X, Ql = new X, ro = class extends Ne {
    constructor(e){
        super();
        if (this.type = "Sprite", gi === void 0) {
            gi = new _e;
            let t = new Float32Array([
                -.5,
                -.5,
                0,
                0,
                0,
                .5,
                -.5,
                0,
                1,
                0,
                .5,
                .5,
                0,
                1,
                1,
                -.5,
                .5,
                0,
                0,
                1
            ]), n = new $n(t, 5);
            gi.setIndex([
                0,
                1,
                2,
                0,
                2,
                3
            ]), gi.setAttribute("position", new Sn(n, 3, 0, !1)), gi.setAttribute("uv", new Sn(n, 2, 3, !1));
        }
        this.geometry = gi, this.material = e !== void 0 ? e : new io, this.center = new X(.5, .5);
    }
    raycast(e, t) {
        e.camera === null && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), xi.setFromMatrixScale(this.matrixWorld), Mh.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), yi.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && this.material.sizeAttenuation === !1 && xi.multiplyScalar(-yi.z);
        let n = this.material.rotation, i, r;
        n !== 0 && (r = Math.cos(n), i = Math.sin(n));
        let o = this.center;
        ds(hs.set(-.5, -.5, 0), yi, o, xi, i, r), ds(er.set(.5, -.5, 0), yi, o, xi, i, r), ds(us.set(.5, .5, 0), yi, o, xi, i, r), jl.set(0, 0), qo.set(1, 0), Ql.set(1, 1);
        let a = e.ray.intersectTriangle(hs, er, us, !1, Qi);
        if (a === null && (ds(er.set(-.5, .5, 0), yi, o, xi, i, r), qo.set(0, 1), a = e.ray.intersectTriangle(hs, us, er, !1, Qi), a === null)) return;
        let l = e.ray.origin.distanceTo(Qi);
        l < e.near || l > e.far || t.push({
            distance: l,
            point: Qi.clone(),
            uv: nt.getUV(Qi, hs, er, us, jl, qo, Ql, new X),
            face: null,
            object: this
        });
    }
    copy(e) {
        return super.copy(e), e.center !== void 0 && this.center.copy(e.center), this.material = e.material, this;
    }
};
ro.prototype.isSprite = !0;
function ds(s, e, t, n, i, r) {
    vi.subVectors(s, t).addScalar(.5).multiply(n), i !== void 0 ? (Ki.x = r * vi.x - i * vi.y, Ki.y = i * vi.x + r * vi.y) : Ki.copy(vi), s.copy(e), s.x += Ki.x, s.y += Ki.y, s.applyMatrix4(Mh);
}
var fs = new M, Kl = new M, bh = class extends Ne {
    constructor(){
        super();
        this._currentLevel = 0, this.type = "LOD", Object.defineProperties(this, {
            levels: {
                enumerable: !0,
                value: []
            },
            isLOD: {
                value: !0
            }
        }), this.autoUpdate = !0;
    }
    copy(e) {
        super.copy(e, !1);
        let t = e.levels;
        for(let n = 0, i = t.length; n < i; n++){
            let r = t[n];
            this.addLevel(r.object.clone(), r.distance);
        }
        return this.autoUpdate = e.autoUpdate, this;
    }
    addLevel(e, t = 0) {
        t = Math.abs(t);
        let n = this.levels, i;
        for(i = 0; i < n.length && !(t < n[i].distance); i++);
        return n.splice(i, 0, {
            distance: t,
            object: e
        }), this.add(e), this;
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        let t = this.levels;
        if (t.length > 0) {
            let n, i;
            for(n = 1, i = t.length; n < i && !(e < t[n].distance); n++);
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            fs.setFromMatrixPosition(this.matrixWorld);
            let i = e.ray.origin.distanceTo(fs);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        let t = this.levels;
        if (t.length > 1) {
            fs.setFromMatrixPosition(e.matrixWorld), Kl.setFromMatrixPosition(this.matrixWorld);
            let n = fs.distanceTo(Kl) / e.zoom;
            t[0].object.visible = !0;
            let i, r;
            for(i = 1, r = t.length; i < r && n >= t[i].distance; i++)t[i - 1].object.visible = !1, t[i].object.visible = !0;
            for(this._currentLevel = i - 1; i < r; i++)t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        let t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1), t.object.levels = [];
        let n = this.levels;
        for(let i = 0, r = n.length; i < r; i++){
            let o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance
            });
        }
        return t;
    }
}, ec = new M, tc = new Ve, nc = new Ve, Rx = new M, ic = new pe, so = class extends st {
    constructor(e, t){
        super(e, t);
        this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new pe, this.bindMatrixInverse = new pe;
    }
    copy(e) {
        return super.copy(e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this;
    }
    bind(e, t) {
        this.skeleton = e, t === void 0 && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        let e = new Ve, t = this.geometry.attributes.skinWeight;
        for(let n = 0, i = t.count; n < i; n++){
            e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
            let r = 1 / e.manhattanLength();
            r !== 1 / 0 ? e.multiplyScalar(r) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e), this.bindMode === "attached" ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : this.bindMode === "detached" ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode);
    }
    boneTransform(e, t) {
        let n = this.skeleton, i = this.geometry;
        tc.fromBufferAttribute(i.attributes.skinIndex, e), nc.fromBufferAttribute(i.attributes.skinWeight, e), ec.copy(t).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
        for(let r = 0; r < 4; r++){
            let o = nc.getComponent(r);
            if (o !== 0) {
                let a = tc.getComponent(r);
                ic.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]), t.addScaledVector(Rx.copy(ec).applyMatrix4(ic), o);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
};
so.prototype.isSkinnedMesh = !0;
var oo = class extends Ne {
    constructor(){
        super();
        this.type = "Bone";
    }
};
oo.prototype.isBone = !0;
var qn = class extends ot {
    constructor(e = null, t = 1, n = 1, i, r, o, a, l, c = rt, h = rt, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            data: e,
            width: t,
            height: n
        }, this.magFilter = c, this.minFilter = h, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1;
    }
};
qn.prototype.isDataTexture = !0;
var rc = new pe, Px = new pe, ao = class {
    constructor(e = [], t = []){
        this.uuid = Et(), this.bones = e.slice(0), this.boneInverses = t, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init();
    }
    init() {
        let e = this.bones, t = this.boneInverses;
        if (this.boneMatrices = new Float32Array(e.length * 16), t.length === 0) this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
            for(let n = 0, i = this.bones.length; n < i; n++)this.boneInverses.push(new pe);
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = new pe;
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n);
        }
    }
    pose() {
        for(let e = 0, t = this.bones.length; e < t; e++){
            let n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for(let e1 = 0, t1 = this.bones.length; e1 < t1; e1++){
            let n1 = this.bones[e1];
            n1 && (n1.parent && n1.parent.isBone ? (n1.matrix.copy(n1.parent.matrixWorld).invert(), n1.matrix.multiply(n1.matrixWorld)) : n1.matrix.copy(n1.matrixWorld), n1.matrix.decompose(n1.position, n1.quaternion, n1.scale));
        }
    }
    update() {
        let e = this.bones, t = this.boneInverses, n = this.boneMatrices, i = this.boneTexture;
        for(let r = 0, o = e.length; r < o; r++){
            let a = e[r] ? e[r].matrixWorld : Px;
            rc.multiplyMatrices(a, t[r]), rc.toArray(n, r * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new ao(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        e = Xc(e), e = Math.max(e, 4);
        let t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        let n = new qn(t, e, e, ct, nn);
        return n.needsUpdate = !0, this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this;
    }
    getBoneByName(e) {
        for(let t = 0, n = this.bones.length; t < n; t++){
            let i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null && (this.boneTexture.dispose(), this.boneTexture = null);
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for(let n = 0, i = e.bones.length; n < i; n++){
            let r = e.bones[n], o = t[r];
            o === void 0 && (console.warn("THREE.Skeleton: No bone found with UUID:", r), o = new oo), this.bones.push(o), this.boneInverses.push(new pe().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Skeleton",
                generator: "Skeleton.toJSON"
            },
            bones: [],
            boneInverses: []
        };
        e.uuid = this.uuid;
        let t = this.bones, n = this.boneInverses;
        for(let i = 0, r = t.length; i < r; i++){
            let o = t[i];
            e.bones.push(o.uuid);
            let a = n[i];
            e.boneInverses.push(a.toArray());
        }
        return e;
    }
}, Xn = class extends Ue {
    constructor(e, t, n, i = 1){
        typeof n == "number" && (i = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));
        super(e, t, n);
        this.meshPerAttribute = i;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e;
    }
};
Xn.prototype.isInstancedBufferAttribute = !0;
var sc = new pe, oc = new pe, ps = [], tr = new st, xa = class extends st {
    constructor(e, t, n){
        super(e, t);
        this.instanceMatrix = new Xn(new Float32Array(n * 16), 16), this.instanceColor = null, this.count = n, this.frustumCulled = !1;
    }
    copy(e) {
        return super.copy(e), this.instanceMatrix.copy(e.instanceMatrix), e.instanceColor !== null && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this;
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    raycast(e, t) {
        let n = this.matrixWorld, i = this.count;
        if (tr.geometry = this.geometry, tr.material = this.material, tr.material !== void 0) for(let r = 0; r < i; r++){
            this.getMatrixAt(r, sc), oc.multiplyMatrices(n, sc), tr.matrixWorld = oc, tr.raycast(e, ps);
            for(let o = 0, a = ps.length; o < a; o++){
                let l = ps[o];
                l.instanceId = r, l.object = this, t.push(l);
            }
            ps.length = 0;
        }
    }
    setColorAt(e, t) {
        this.instanceColor === null && (this.instanceColor = new Xn(new Float32Array(this.instanceMatrix.count * 3), 3)), t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    updateMorphTargets() {}
    dispose() {
        this.dispatchEvent({
            type: "dispose"
        });
    }
};
xa.prototype.isInstancedMesh = !0;
var ft = class extends dt {
    constructor(e){
        super();
        this.type = "LineBasicMaterial", this.color = new ae(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this;
    }
};
ft.prototype.isLineBasicMaterial = !0;
var ac = new M, lc = new M, cc = new pe, Xo = new Cn, ms = new An, on = class extends Ne {
    constructor(e = new _e, t = new ft){
        super();
        this.type = "Line", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [
                0
            ];
            for(let i = 1, r = t.count; i < r; i++)ac.fromBufferAttribute(t, i - 1), lc.fromBufferAttribute(t, i), n[i] = n[i - 1], n[i] += ac.distanceTo(lc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Line.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), ms.copy(n.boundingSphere), ms.applyMatrix4(i), ms.radius += r, e.ray.intersectsSphere(ms) === !1) return;
        cc.copy(i).invert(), Xo.copy(e.ray).applyMatrix4(cc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a, c = new M, h = new M, u = new M, d = new M, f = this.isLineSegments ? 2 : 1;
        if (n.isBufferGeometry) {
            let m = n.index, v = n.attributes.position;
            if (m !== null) {
                let g = Math.max(0, o.start), p = Math.min(m.count, o.start + o.count);
                for(let _ = g, y = p - 1; _ < y; _ += f){
                    let b = m.getX(_), A = m.getX(_ + 1);
                    if (c.fromBufferAttribute(v, b), h.fromBufferAttribute(v, A), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let I = e.ray.origin.distanceTo(d);
                    I < e.near || I > e.far || t.push({
                        distance: I,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            } else {
                let g1 = Math.max(0, o.start), p1 = Math.min(v.count, o.start + o.count);
                for(let _1 = g1, y1 = p1 - 1; _1 < y1; _1 += f){
                    if (c.fromBufferAttribute(v, _1), h.fromBufferAttribute(v, _1 + 1), Xo.distanceSqToSegment(c, h, d, u) > l) continue;
                    d.applyMatrix4(this.matrixWorld);
                    let A1 = e.ray.origin.distanceTo(d);
                    A1 < e.near || A1 > e.far || t.push({
                        distance: A1,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: _1,
                        face: null,
                        faceIndex: null,
                        object: this
                    });
                }
            }
        } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
on.prototype.isLine = !0;
var hc = new M, uc = new M, wt = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineSegments";
    }
    computeLineDistances() {
        let e = this.geometry;
        if (e.isBufferGeometry) if (e.index === null) {
            let t = e.attributes.position, n = [];
            for(let i = 0, r = t.count; i < r; i += 2)hc.fromBufferAttribute(t, i), uc.fromBufferAttribute(t, i + 1), n[i] = i === 0 ? 0 : n[i - 1], n[i + 1] = n[i] + hc.distanceTo(uc);
            e.setAttribute("lineDistance", new de(n, 1));
        } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
        return this;
    }
};
wt.prototype.isLineSegments = !0;
var ya = class extends on {
    constructor(e, t){
        super(e, t);
        this.type = "LineLoop";
    }
};
ya.prototype.isLineLoop = !0;
var jn = class extends dt {
    constructor(e){
        super();
        this.type = "PointsMaterial", this.color = new ae(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this;
    }
};
jn.prototype.isPointsMaterial = !0;
var dc = new pe, sa = new Cn, gs = new An, xs = new M, zr = class extends Ne {
    constructor(e = new _e, t = new jn){
        super();
        this.type = "Points", this.geometry = e, this.material = t, this.updateMorphTargets();
    }
    copy(e) {
        return super.copy(e), this.material = e.material, this.geometry = e.geometry, this;
    }
    raycast(e, t) {
        let n = this.geometry, i = this.matrixWorld, r = e.params.Points.threshold, o = n.drawRange;
        if (n.boundingSphere === null && n.computeBoundingSphere(), gs.copy(n.boundingSphere), gs.applyMatrix4(i), gs.radius += r, e.ray.intersectsSphere(gs) === !1) return;
        dc.copy(i).invert(), sa.copy(e.ray).applyMatrix4(dc);
        let a = r / ((this.scale.x + this.scale.y + this.scale.z) / 3), l = a * a;
        if (n.isBufferGeometry) {
            let c = n.index, u = n.attributes.position;
            if (c !== null) {
                let d = Math.max(0, o.start), f = Math.min(c.count, o.start + o.count);
                for(let m = d, x = f; m < x; m++){
                    let v = c.getX(m);
                    xs.fromBufferAttribute(u, v), fc(xs, v, l, i, e, t, this);
                }
            } else {
                let d1 = Math.max(0, o.start), f1 = Math.min(u.count, o.start + o.count);
                for(let m1 = d1, x1 = f1; m1 < x1; m1++)xs.fromBufferAttribute(u, m1), fc(xs, m1, l, i, e, t, this);
            }
        } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
    }
    updateMorphTargets() {
        let e = this.geometry;
        if (e.isBufferGeometry) {
            let t = e.morphAttributes, n = Object.keys(t);
            if (n.length > 0) {
                let i = t[n[0]];
                if (i !== void 0) {
                    this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                    for(let r = 0, o = i.length; r < o; r++){
                        let a = i[r].name || String(r);
                        this.morphTargetInfluences.push(0), this.morphTargetDictionary[a] = r;
                    }
                }
            }
        } else {
            let t1 = e.morphTargets;
            t1 !== void 0 && t1.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.");
        }
    }
};
zr.prototype.isPoints = !0;
function fc(s, e, t, n, i, r, o) {
    let a = sa.distanceSqToPoint(s);
    if (a < t) {
        let l = new M;
        sa.closestPointToPoint(s, l), l.applyMatrix4(n);
        let c = i.ray.origin.distanceTo(l);
        if (c < i.near || c > i.far) return;
        r.push({
            distance: c,
            distanceToRay: Math.sqrt(a),
            point: l,
            index: e,
            face: null,
            object: o
        });
    }
}
var wh = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.format = a !== void 0 ? a : Gn, this.minFilter = o !== void 0 ? o : tt, this.magFilter = r !== void 0 ? r : tt, this.generateMipmaps = !1;
        let h = this;
        function u() {
            h.needsUpdate = !0, e.requestVideoFrameCallback(u);
        }
        "requestVideoFrameCallback" in e && e.requestVideoFrameCallback(u);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        let e = this.image;
        "requestVideoFrameCallback" in e === !1 && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0);
    }
};
wh.prototype.isVideoTexture = !0;
var Sh = class extends ot {
    constructor(e, t, n){
        super({
            width: e,
            height: t
        });
        this.format = n, this.magFilter = rt, this.minFilter = rt, this.generateMipmaps = !1, this.needsUpdate = !0;
    }
};
Sh.prototype.isFramebufferTexture = !0;
var va = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c, h, u, d){
        super(null, o, a, l, c, h, i, r, u, d);
        this.image = {
            width: t,
            height: n
        }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1;
    }
};
va.prototype.isCompressedTexture = !0;
var Th = class extends ot {
    constructor(e, t, n, i, r, o, a, l, c){
        super(e, t, n, i, r, o, a, l, c);
        this.needsUpdate = !0;
    }
};
Th.prototype.isCanvasTexture = !0;
var fr = class extends _e {
    constructor(e = 1, t = 8, n = 0, i = Math.PI * 2){
        super();
        this.type = "CircleGeometry", this.parameters = {
            radius: e,
            segments: t,
            thetaStart: n,
            thetaLength: i
        }, t = Math.max(3, t);
        let r = [], o = [], a = [], l = [], c = new M, h = new X;
        o.push(0, 0, 0), a.push(0, 0, 1), l.push(.5, .5);
        for(let u = 0, d = 3; u <= t; u++, d += 3){
            let f = n + u / t * i;
            c.x = e * Math.cos(f), c.y = e * Math.sin(f), o.push(c.x, c.y, c.z), a.push(0, 0, 1), h.x = (o[d] / e + 1) / 2, h.y = (o[d + 1] / e + 1) / 2, l.push(h.x, h.y);
        }
        for(let u1 = 1; u1 <= t; u1++)r.push(u1, u1 + 1, 0);
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("normal", new de(a, 3)), this.setAttribute("uv", new de(l, 2));
    }
    static fromJSON(e) {
        return new fr(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}, Jn = class extends _e {
    constructor(e = 1, t = 1, n = 1, i = 8, r = 1, o = !1, a = 0, l = Math.PI * 2){
        super();
        this.type = "CylinderGeometry", this.parameters = {
            radiusTop: e,
            radiusBottom: t,
            height: n,
            radialSegments: i,
            heightSegments: r,
            openEnded: o,
            thetaStart: a,
            thetaLength: l
        };
        let c = this;
        i = Math.floor(i), r = Math.floor(r);
        let h = [], u = [], d = [], f = [], m = 0, x = [], v = n / 2, g = 0;
        p(), o === !1 && (e > 0 && _(!0), t > 0 && _(!1)), this.setIndex(h), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function p() {
            let y = new M, b = new M, A = 0, L = (t - e) / n;
            for(let I = 0; I <= r; I++){
                let k = [], B = I / r, P = B * (t - e) + e;
                for(let w = 0; w <= i; w++){
                    let E = w / i, D = E * l + a, U = Math.sin(D), F = Math.cos(D);
                    b.x = P * U, b.y = -B * n + v, b.z = P * F, u.push(b.x, b.y, b.z), y.set(U, L, F).normalize(), d.push(y.x, y.y, y.z), f.push(E, 1 - B), k.push(m++);
                }
                x.push(k);
            }
            for(let I1 = 0; I1 < i; I1++)for(let k1 = 0; k1 < r; k1++){
                let B1 = x[k1][I1], P1 = x[k1 + 1][I1], w1 = x[k1 + 1][I1 + 1], E1 = x[k1][I1 + 1];
                h.push(B1, P1, E1), h.push(P1, w1, E1), A += 6;
            }
            c.addGroup(g, A, 0), g += A;
        }
        function _(y) {
            let b = m, A = new X, L = new M, I = 0, k = y === !0 ? e : t, B = y === !0 ? 1 : -1;
            for(let w = 1; w <= i; w++)u.push(0, v * B, 0), d.push(0, B, 0), f.push(.5, .5), m++;
            let P = m;
            for(let w1 = 0; w1 <= i; w1++){
                let D = w1 / i * l + a, U = Math.cos(D), F = Math.sin(D);
                L.x = k * F, L.y = v * B, L.z = k * U, u.push(L.x, L.y, L.z), d.push(0, B, 0), A.x = U * .5 + .5, A.y = F * .5 * B + .5, f.push(A.x, A.y), m++;
            }
            for(let w2 = 0; w2 < i; w2++){
                let E = b + w2, D1 = P + w2;
                y === !0 ? h.push(D1, D1 + 1, E) : h.push(D1 + 1, D1, E), I += 3;
            }
            c.addGroup(g, I, y === !0 ? 1 : 2), g += I;
        }
    }
    static fromJSON(e) {
        return new Jn(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, pr = class extends Jn {
    constructor(e = 1, t = 1, n = 8, i = 1, r = !1, o = 0, a = Math.PI * 2){
        super(0, e, t, n, i, r, o, a);
        this.type = "ConeGeometry", this.parameters = {
            radius: e,
            height: t,
            radialSegments: n,
            heightSegments: i,
            openEnded: r,
            thetaStart: o,
            thetaLength: a
        };
    }
    static fromJSON(e) {
        return new pr(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
    }
}, an = class extends _e {
    constructor(e = [], t = [], n = 1, i = 0){
        super();
        this.type = "PolyhedronGeometry", this.parameters = {
            vertices: e,
            indices: t,
            radius: n,
            detail: i
        };
        let r = [], o = [];
        a(i), c(n), h(), this.setAttribute("position", new de(r, 3)), this.setAttribute("normal", new de(r.slice(), 3)), this.setAttribute("uv", new de(o, 2)), i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function a(p) {
            let _ = new M, y = new M, b = new M;
            for(let A = 0; A < t.length; A += 3)f(t[A + 0], _), f(t[A + 1], y), f(t[A + 2], b), l(_, y, b, p);
        }
        function l(p, _, y, b) {
            let A = b + 1, L = [];
            for(let I = 0; I <= A; I++){
                L[I] = [];
                let k = p.clone().lerp(y, I / A), B = _.clone().lerp(y, I / A), P = A - I;
                for(let w = 0; w <= P; w++)w === 0 && I === A ? L[I][w] = k : L[I][w] = k.clone().lerp(B, w / P);
            }
            for(let I1 = 0; I1 < A; I1++)for(let k1 = 0; k1 < 2 * (A - I1) - 1; k1++){
                let B1 = Math.floor(k1 / 2);
                k1 % 2 === 0 ? (d(L[I1][B1 + 1]), d(L[I1 + 1][B1]), d(L[I1][B1])) : (d(L[I1][B1 + 1]), d(L[I1 + 1][B1 + 1]), d(L[I1 + 1][B1]));
            }
        }
        function c(p) {
            let _ = new M;
            for(let y = 0; y < r.length; y += 3)_.x = r[y + 0], _.y = r[y + 1], _.z = r[y + 2], _.normalize().multiplyScalar(p), r[y + 0] = _.x, r[y + 1] = _.y, r[y + 2] = _.z;
        }
        function h() {
            let p = new M;
            for(let _ = 0; _ < r.length; _ += 3){
                p.x = r[_ + 0], p.y = r[_ + 1], p.z = r[_ + 2];
                let y = v(p) / 2 / Math.PI + .5, b = g(p) / Math.PI + .5;
                o.push(y, 1 - b);
            }
            m(), u();
        }
        function u() {
            for(let p = 0; p < o.length; p += 6){
                let _ = o[p + 0], y = o[p + 2], b = o[p + 4], A = Math.max(_, y, b), L = Math.min(_, y, b);
                A > .9 && L < .1 && (_ < .2 && (o[p + 0] += 1), y < .2 && (o[p + 2] += 1), b < .2 && (o[p + 4] += 1));
            }
        }
        function d(p) {
            r.push(p.x, p.y, p.z);
        }
        function f(p, _) {
            let y = p * 3;
            _.x = e[y + 0], _.y = e[y + 1], _.z = e[y + 2];
        }
        function m() {
            let p = new M, _ = new M, y = new M, b = new M, A = new X, L = new X, I = new X;
            for(let k = 0, B = 0; k < r.length; k += 9, B += 6){
                p.set(r[k + 0], r[k + 1], r[k + 2]), _.set(r[k + 3], r[k + 4], r[k + 5]), y.set(r[k + 6], r[k + 7], r[k + 8]), A.set(o[B + 0], o[B + 1]), L.set(o[B + 2], o[B + 3]), I.set(o[B + 4], o[B + 5]), b.copy(p).add(_).add(y).divideScalar(3);
                let P = v(b);
                x(A, B + 0, p, P), x(L, B + 2, _, P), x(I, B + 4, y, P);
            }
        }
        function x(p, _, y, b) {
            b < 0 && p.x === 1 && (o[_] = p.x - 1), y.x === 0 && y.z === 0 && (o[_] = b / 2 / Math.PI + .5);
        }
        function v(p) {
            return Math.atan2(p.z, -p.x);
        }
        function g(p) {
            return Math.atan2(-p.y, Math.sqrt(p.x * p.x + p.z * p.z));
        }
    }
    static fromJSON(e) {
        return new an(e.vertices, e.indices, e.radius, e.details);
    }
}, mr = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = 1 / n, r = [
            -1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            1,
            1,
            1,
            0,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            -i,
            -n,
            0,
            -i,
            n,
            0,
            i,
            -n,
            0,
            i,
            n,
            0,
            -n,
            0,
            -i,
            n,
            0,
            -i,
            -n,
            0,
            i,
            n,
            0,
            i
        ], o = [
            3,
            11,
            7,
            3,
            7,
            15,
            3,
            15,
            13,
            7,
            19,
            17,
            7,
            17,
            6,
            7,
            6,
            15,
            17,
            4,
            8,
            17,
            8,
            10,
            17,
            10,
            6,
            8,
            0,
            16,
            8,
            16,
            2,
            8,
            2,
            10,
            0,
            12,
            1,
            0,
            1,
            18,
            0,
            18,
            16,
            6,
            10,
            2,
            6,
            2,
            13,
            6,
            13,
            15,
            2,
            16,
            18,
            2,
            18,
            3,
            2,
            3,
            13,
            18,
            1,
            9,
            18,
            9,
            11,
            18,
            11,
            3,
            4,
            14,
            12,
            4,
            12,
            0,
            4,
            0,
            8,
            11,
            9,
            5,
            11,
            5,
            19,
            11,
            19,
            7,
            19,
            5,
            14,
            19,
            14,
            4,
            19,
            4,
            17,
            1,
            12,
            14,
            1,
            14,
            5,
            1,
            5,
            9
        ];
        super(r, o, e, t);
        this.type = "DodecahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new mr(e.radius, e.detail);
    }
}, ys = new M, vs = new M, Jo = new M, _s = new nt, _a = class extends _e {
    constructor(e = null, t = 1){
        super();
        if (this.type = "EdgesGeometry", this.parameters = {
            geometry: e,
            thresholdAngle: t
        }, e !== null) {
            let i = Math.pow(10, 4), r = Math.cos(Wn * t), o = e.getIndex(), a = e.getAttribute("position"), l = o ? o.count : a.count, c = [
                0,
                0,
                0
            ], h = [
                "a",
                "b",
                "c"
            ], u = new Array(3), d = {}, f = [];
            for(let m = 0; m < l; m += 3){
                o ? (c[0] = o.getX(m), c[1] = o.getX(m + 1), c[2] = o.getX(m + 2)) : (c[0] = m, c[1] = m + 1, c[2] = m + 2);
                let { a: x , b: v , c: g  } = _s;
                if (x.fromBufferAttribute(a, c[0]), v.fromBufferAttribute(a, c[1]), g.fromBufferAttribute(a, c[2]), _s.getNormal(Jo), u[0] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(x.z * i)}`, u[1] = `${Math.round(v.x * i)},${Math.round(v.y * i)},${Math.round(v.z * i)}`, u[2] = `${Math.round(g.x * i)},${Math.round(g.y * i)},${Math.round(g.z * i)}`, !(u[0] === u[1] || u[1] === u[2] || u[2] === u[0])) for(let p = 0; p < 3; p++){
                    let _ = (p + 1) % 3, y = u[p], b = u[_], A = _s[h[p]], L = _s[h[_]], I = `${y}_${b}`, k = `${b}_${y}`;
                    k in d && d[k] ? (Jo.dot(d[k].normal) <= r && (f.push(A.x, A.y, A.z), f.push(L.x, L.y, L.z)), d[k] = null) : I in d || (d[I] = {
                        index0: c[p],
                        index1: c[_],
                        normal: Jo.clone()
                    });
                }
            }
            for(let m1 in d)if (d[m1]) {
                let { index0: x1 , index1: v1  } = d[m1];
                ys.fromBufferAttribute(a, x1), vs.fromBufferAttribute(a, v1), f.push(ys.x, ys.y, ys.z), f.push(vs.x, vs.y, vs.z);
            }
            this.setAttribute("position", new de(f, 3));
        }
    }
}, Ct = class {
    constructor(){
        this.type = "Curve", this.arcLengthDivisions = 200;
    }
    getPoint() {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null;
    }
    getPointAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        let e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        let t = [], n, i = this.getPoint(0), r = 0;
        t.push(0);
        for(let o = 1; o <= e; o++)n = this.getPoint(o / e), r += n.distanceTo(i), t.push(r), i = n;
        return this.cacheArcLengths = t, t;
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.getLengths();
    }
    getUtoTmapping(e, t) {
        let n = this.getLengths(), i = 0, r = n.length, o;
        t ? o = t : o = e * n[r - 1];
        let a = 0, l = r - 1, c;
        for(; a <= l;)if (i = Math.floor(a + (l - a) / 2), c = n[i] - o, c < 0) a = i + 1;
        else if (c > 0) l = i - 1;
        else {
            l = i;
            break;
        }
        if (i = l, n[i] === o) return i / (r - 1);
        let h = n[i], d = n[i + 1] - h, f = (o - h) / d;
        return (i + f) / (r - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4, r = e + 1e-4;
        i < 0 && (i = 0), r > 1 && (r = 1);
        let o = this.getPoint(i), a = this.getPoint(r), l = t || (o.isVector2 ? new X : new M);
        return l.copy(a).sub(o).normalize(), l;
    }
    getTangentAt(e, t) {
        let n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        let n = new M, i = [], r = [], o = [], a = new M, l = new pe;
        for(let f = 0; f <= e; f++){
            let m = f / e;
            i[f] = this.getTangentAt(m, new M);
        }
        r[0] = new M, o[0] = new M;
        let c = Number.MAX_VALUE, h = Math.abs(i[0].x), u = Math.abs(i[0].y), d = Math.abs(i[0].z);
        h <= c && (c = h, n.set(1, 0, 0)), u <= c && (c = u, n.set(0, 1, 0)), d <= c && n.set(0, 0, 1), a.crossVectors(i[0], n).normalize(), r[0].crossVectors(i[0], a), o[0].crossVectors(i[0], r[0]);
        for(let f1 = 1; f1 <= e; f1++){
            if (r[f1] = r[f1 - 1].clone(), o[f1] = o[f1 - 1].clone(), a.crossVectors(i[f1 - 1], i[f1]), a.length() > Number.EPSILON) {
                a.normalize();
                let m1 = Math.acos(mt(i[f1 - 1].dot(i[f1]), -1, 1));
                r[f1].applyMatrix4(l.makeRotationAxis(a, m1));
            }
            o[f1].crossVectors(i[f1], r[f1]);
        }
        if (t === !0) {
            let f2 = Math.acos(mt(r[0].dot(r[e]), -1, 1));
            f2 /= e, i[0].dot(a.crossVectors(r[0], r[e])) > 0 && (f2 = -f2);
            for(let m2 = 1; m2 <= e; m2++)r[m2].applyMatrix4(l.makeRotationAxis(i[m2], f2 * m2)), o[m2].crossVectors(i[m2], r[m2]);
        }
        return {
            tangents: i,
            normals: r,
            binormals: o
        };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
    toJSON() {
        let e = {
            metadata: {
                version: 4.5,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e;
    }
    fromJSON(e) {
        return this.arcLengthDivisions = e.arcLengthDivisions, this;
    }
}, Ur = class extends Ct {
    constructor(e = 0, t = 0, n = 1, i = 1, r = 0, o = Math.PI * 2, a = !1, l = 0){
        super();
        this.type = "EllipseCurve", this.aX = e, this.aY = t, this.xRadius = n, this.yRadius = i, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = l;
    }
    getPoint(e, t) {
        let n = t || new X, i = Math.PI * 2, r = this.aEndAngle - this.aStartAngle, o = Math.abs(r) < Number.EPSILON;
        for(; r < 0;)r += i;
        for(; r > i;)r -= i;
        r < Number.EPSILON && (o ? r = 0 : r = i), this.aClockwise === !0 && !o && (r === i ? r = -i : r = r - i);
        let a = this.aStartAngle + e * r, l = this.aX + this.xRadius * Math.cos(a), c = this.aY + this.yRadius * Math.sin(a);
        if (this.aRotation !== 0) {
            let h = Math.cos(this.aRotation), u = Math.sin(this.aRotation), d = l - this.aX, f = c - this.aY;
            l = d * h - f * u + this.aX, c = d * u + f * h + this.aY;
        }
        return n.set(l, c);
    }
    copy(e) {
        return super.copy(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this;
    }
};
Ur.prototype.isEllipseCurve = !0;
var Ma = class extends Ur {
    constructor(e, t, n, i, r, o){
        super(e, t, n, n, i, r, o);
        this.type = "ArcCurve";
    }
};
Ma.prototype.isArcCurve = !0;
function ba() {
    let s = 0, e = 0, t = 0, n = 0;
    function i(r, o, a, l) {
        s = r, e = a, t = -3 * r + 3 * o - 2 * a - l, n = 2 * r - 2 * o + a + l;
    }
    return {
        initCatmullRom: function(r, o, a, l, c) {
            i(o, a, c * (a - r), c * (l - o));
        },
        initNonuniformCatmullRom: function(r, o, a, l, c, h, u) {
            let d = (o - r) / c - (a - r) / (c + h) + (a - o) / h, f = (a - o) / h - (l - o) / (h + u) + (l - a) / u;
            d *= h, f *= h, i(o, a, d, f);
        },
        calc: function(r) {
            let o = r * r, a = o * r;
            return s + e * r + t * o + n * a;
        }
    };
}
var Ms = new M, Yo = new ba, Zo = new ba, $o = new ba, wa = class extends Ct {
    constructor(e = [], t = !1, n = "centripetal", i = .5){
        super();
        this.type = "CatmullRomCurve3", this.points = e, this.closed = t, this.curveType = n, this.tension = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.points, r = i.length, o = (r - (this.closed ? 0 : 1)) * e, a = Math.floor(o), l = o - a;
        this.closed ? a += a > 0 ? 0 : (Math.floor(Math.abs(a) / r) + 1) * r : l === 0 && a === r - 1 && (a = r - 2, l = 1);
        let c, h;
        this.closed || a > 0 ? c = i[(a - 1) % r] : (Ms.subVectors(i[0], i[1]).add(i[0]), c = Ms);
        let u = i[a % r], d = i[(a + 1) % r];
        if (this.closed || a + 2 < r ? h = i[(a + 2) % r] : (Ms.subVectors(i[r - 1], i[r - 2]).add(i[r - 1]), h = Ms), this.curveType === "centripetal" || this.curveType === "chordal") {
            let f = this.curveType === "chordal" ? .5 : .25, m = Math.pow(c.distanceToSquared(u), f), x = Math.pow(u.distanceToSquared(d), f), v = Math.pow(d.distanceToSquared(h), f);
            x < 1e-4 && (x = 1), m < 1e-4 && (m = x), v < 1e-4 && (v = x), Yo.initNonuniformCatmullRom(c.x, u.x, d.x, h.x, m, x, v), Zo.initNonuniformCatmullRom(c.y, u.y, d.y, h.y, m, x, v), $o.initNonuniformCatmullRom(c.z, u.z, d.z, h.z, m, x, v);
        } else this.curveType === "catmullrom" && (Yo.initCatmullRom(c.x, u.x, d.x, h.x, this.tension), Zo.initCatmullRom(c.y, u.y, d.y, h.y, this.tension), $o.initCatmullRom(c.z, u.z, d.z, h.z, this.tension));
        return n.set(Yo.calc(l), Zo.calc(l), $o.calc(l)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new M().fromArray(i));
        }
        return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this;
    }
};
wa.prototype.isCatmullRomCurve3 = !0;
function pc(s, e, t, n, i) {
    let r = (n - e) * .5, o = (i - t) * .5, a = s * s, l = s * a;
    return (2 * t - 2 * n + r + o) * l + (-3 * t + 3 * n - 2 * r - o) * a + r * s + t;
}
function Ix(s, e) {
    let t = 1 - s;
    return t * t * e;
}
function Dx(s, e) {
    return 2 * (1 - s) * s * e;
}
function Fx(s, e) {
    return s * s * e;
}
function ar(s, e, t, n) {
    return Ix(s, e) + Dx(s, t) + Fx(s, n);
}
function Nx(s, e) {
    let t = 1 - s;
    return t * t * t * e;
}
function Bx(s, e) {
    let t = 1 - s;
    return 3 * t * t * s * e;
}
function zx(s, e) {
    return 3 * (1 - s) * s * s * e;
}
function Ux(s, e) {
    return s * s * s * e;
}
function lr(s, e, t, n, i) {
    return Nx(s, e) + Bx(s, t) + zx(s, n) + Ux(s, i);
}
var lo = class extends Ct {
    constructor(e = new X, t = new X, n = new X, i = new X){
        super();
        this.type = "CubicBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
lo.prototype.isCubicBezierCurve = !0;
var Sa = class extends Ct {
    constructor(e = new M, t = new M, n = new M, i = new M){
        super();
        this.type = "CubicBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n, this.v3 = i;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2, a = this.v3;
        return n.set(lr(e, i.x, r.x, o.x, a.x), lr(e, i.y, r.y, o.y, a.y), lr(e, i.z, r.z, o.z, a.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this;
    }
};
Sa.prototype.isCubicBezierCurve3 = !0;
var Or = class extends Ct {
    constructor(e = new X, t = new X){
        super();
        this.type = "LineCurve", this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new X) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t) {
        let n = t || new X;
        return n.copy(this.v2).sub(this.v1).normalize(), n;
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
Or.prototype.isLineCurve = !0;
var Eh = class extends Ct {
    constructor(e = new M, t = new M){
        super();
        this.type = "LineCurve3", this.isLineCurve3 = !0, this.v1 = e, this.v2 = t;
    }
    getPoint(e, t = new M) {
        let n = t;
        return e === 1 ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n;
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
}, co = class extends Ct {
    constructor(e = new X, t = new X, n = new X){
        super();
        this.type = "QuadraticBezierCurve", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
co.prototype.isQuadraticBezierCurve = !0;
var ho = class extends Ct {
    constructor(e = new M, t = new M, n = new M){
        super();
        this.type = "QuadraticBezierCurve3", this.v0 = e, this.v1 = t, this.v2 = n;
    }
    getPoint(e, t = new M) {
        let n = t, i = this.v0, r = this.v1, o = this.v2;
        return n.set(ar(e, i.x, r.x, o.x), ar(e, i.y, r.y, o.y), ar(e, i.z, r.z, o.z)), n;
    }
    copy(e) {
        return super.copy(e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this;
    }
};
ho.prototype.isQuadraticBezierCurve3 = !0;
var uo = class extends Ct {
    constructor(e = []){
        super();
        this.type = "SplineCurve", this.points = e;
    }
    getPoint(e, t = new X) {
        let n = t, i = this.points, r = (i.length - 1) * e, o = Math.floor(r), a = r - o, l = i[o === 0 ? o : o - 1], c = i[o], h = i[o > i.length - 2 ? i.length - 1 : o + 1], u = i[o > i.length - 3 ? i.length - 1 : o + 2];
        return n.set(pc(a, l.x, c.x, h.x, u.x), pc(a, l.y, c.y, h.y, u.y)), n;
    }
    copy(e) {
        super.copy(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.points = [];
        for(let t = 0, n = this.points.length; t < n; t++){
            let i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.points = [];
        for(let t = 0, n = e.points.length; t < n; t++){
            let i = e.points[t];
            this.points.push(new X().fromArray(i));
        }
        return this;
    }
};
uo.prototype.isSplineCurve = !0;
var Ta = Object.freeze({
    __proto__: null,
    ArcCurve: Ma,
    CatmullRomCurve3: wa,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    EllipseCurve: Ur,
    LineCurve: Or,
    LineCurve3: Eh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    SplineCurve: uo
}), Ah = class extends Ct {
    constructor(){
        super();
        this.type = "CurvePath", this.curves = [], this.autoClose = !1;
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        let e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new Or(t, e));
    }
    getPoint(e, t) {
        let n = e * this.getLength(), i = this.getCurveLengths(), r = 0;
        for(; r < i.length;){
            if (i[r] >= n) {
                let o = i[r] - n, a = this.curves[r], l = a.getLength(), c = l === 0 ? 0 : 1 - o / l;
                return a.getPointAt(c, t);
            }
            r++;
        }
        return null;
    }
    getLength() {
        let e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths();
    }
    getCurveLengths() {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        let e = [], t = 0;
        for(let n = 0, i = this.curves.length; n < i; n++)t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e;
    }
    getSpacedPoints(e = 40) {
        let t = [];
        for(let n = 0; n <= e; n++)t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        let t = [], n;
        for(let i = 0, r = this.curves; i < r.length; i++){
            let o = r[i], a = o && o.isEllipseCurve ? e * 2 : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, l = o.getPoints(a);
            for(let c = 0; c < l.length; c++){
                let h = l[c];
                n && n.equals(h) || (t.push(h), n = h);
            }
        }
        return this.autoClose && t.length > 1 && !t[t.length - 1].equals(t[0]) && t.push(t[0]), t;
    }
    copy(e) {
        super.copy(e), this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(i.clone());
        }
        return this.autoClose = e.autoClose, this;
    }
    toJSON() {
        let e = super.toJSON();
        e.autoClose = this.autoClose, e.curves = [];
        for(let t = 0, n = this.curves.length; t < n; t++){
            let i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.autoClose = e.autoClose, this.curves = [];
        for(let t = 0, n = e.curves.length; t < n; t++){
            let i = e.curves[t];
            this.curves.push(new Ta[i.type]().fromJSON(i));
        }
        return this;
    }
}, gr = class extends Ah {
    constructor(e){
        super();
        this.type = "Path", this.currentPoint = new X, e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for(let t = 1, n = e.length; t < n; t++)this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        let n = new Or(this.currentPoint.clone(), new X(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        let r = new co(this.currentPoint.clone(), new X(e, t), new X(n, i));
        return this.curves.push(r), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        let a = new lo(this.currentPoint.clone(), new X(e, t), new X(n, i), new X(r, o));
        return this.curves.push(a), this.currentPoint.set(r, o), this;
    }
    splineThru(e) {
        let t = [
            this.currentPoint.clone()
        ].concat(e), n = new uo(t);
        return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this;
    }
    arc(e, t, n, i, r, o) {
        let a = this.currentPoint.x, l = this.currentPoint.y;
        return this.absarc(e + a, t + l, n, i, r, o), this;
    }
    absarc(e, t, n, i, r, o) {
        return this.absellipse(e, t, n, n, i, r, o), this;
    }
    ellipse(e, t, n, i, r, o, a, l) {
        let c = this.currentPoint.x, h = this.currentPoint.y;
        return this.absellipse(e + c, t + h, n, i, r, o, a, l), this;
    }
    absellipse(e, t, n, i, r, o, a, l) {
        let c = new Ur(e, t, n, i, r, o, a, l);
        if (this.curves.length > 0) {
            let u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y);
        }
        this.curves.push(c);
        let h = c.getPoint(1);
        return this.currentPoint.copy(h), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        let e = super.toJSON();
        return e.currentPoint = this.currentPoint.toArray(), e;
    }
    fromJSON(e) {
        return super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this;
    }
}, Xt = class extends gr {
    constructor(e){
        super(e);
        this.uuid = Et(), this.type = "Shape", this.holes = [];
    }
    getPointsHoles(e) {
        let t = [];
        for(let n = 0, i = this.holes.length; n < i; n++)t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        };
    }
    copy(e) {
        super.copy(e), this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        let e = super.toJSON();
        e.uuid = this.uuid, e.holes = [];
        for(let t = 0, n = this.holes.length; t < n; t++){
            let i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), this.uuid = e.uuid, this.holes = [];
        for(let t = 0, n = e.holes.length; t < n; t++){
            let i = e.holes[t];
            this.holes.push(new gr().fromJSON(i));
        }
        return this;
    }
}, Ox = {
    triangulate: function(s, e, t = 2) {
        let n = e && e.length, i = n ? e[0] * t : s.length, r = Ch(s, 0, i, t, !0), o = [];
        if (!r || r.next === r.prev) return o;
        let a, l, c, h, u, d, f;
        if (n && (r = Wx(s, e, r, t)), s.length > 80 * t) {
            a = c = s[0], l = h = s[1];
            for(let m = t; m < i; m += t)u = s[m], d = s[m + 1], u < a && (a = u), d < l && (l = d), u > c && (c = u), d > h && (h = d);
            f = Math.max(c - a, h - l), f = f !== 0 ? 1 / f : 0;
        }
        return xr(r, o, t, a, l, f), o;
    }
};
function Ch(s, e, t, n, i) {
    let r, o;
    if (i === ty(s, e, t, n) > 0) for(r = e; r < t; r += n)o = mc(r, s[r], s[r + 1], o);
    else for(r = t - n; r >= e; r -= n)o = mc(r, s[r], s[r + 1], o);
    return o && fo(o, o.next) && (vr(o), o = o.next), o;
}
function Tn(s, e) {
    if (!s) return s;
    e || (e = s);
    let t = s, n;
    do if (n = !1, !t.steiner && (fo(t, t.next) || $e(t.prev, t, t.next) === 0)) {
        if (vr(t), t = e = t.prev, t === t.next) break;
        n = !0;
    } else t = t.next;
    while (n || t !== e)
    return e;
}
function xr(s, e, t, n, i, r, o) {
    if (!s) return;
    !o && r && Zx(s, n, i, r);
    let a = s, l, c;
    for(; s.prev !== s.next;){
        if (l = s.prev, c = s.next, r ? kx(s, n, i, r) : Hx(s)) {
            e.push(l.i / t), e.push(s.i / t), e.push(c.i / t), vr(s), s = c.next, a = c.next;
            continue;
        }
        if (s = c, s === a) {
            o ? o === 1 ? (s = Gx(Tn(s), e, t), xr(s, e, t, n, i, r, 2)) : o === 2 && Vx(s, e, t, n, i, r) : xr(Tn(s), e, t, n, i, r, 1);
            break;
        }
    }
}
function Hx(s) {
    let e = s.prev, t = s, n = s.next;
    if ($e(e, t, n) >= 0) return !1;
    let i = s.next.next;
    for(; i !== s.prev;){
        if (Si(e.x, e.y, t.x, t.y, n.x, n.y, i.x, i.y) && $e(i.prev, i, i.next) >= 0) return !1;
        i = i.next;
    }
    return !0;
}
function kx(s, e, t, n) {
    let i = s.prev, r = s, o = s.next;
    if ($e(i, r, o) >= 0) return !1;
    let a = i.x < r.x ? i.x < o.x ? i.x : o.x : r.x < o.x ? r.x : o.x, l = i.y < r.y ? i.y < o.y ? i.y : o.y : r.y < o.y ? r.y : o.y, c = i.x > r.x ? i.x > o.x ? i.x : o.x : r.x > o.x ? r.x : o.x, h = i.y > r.y ? i.y > o.y ? i.y : o.y : r.y > o.y ? r.y : o.y, u = oa(a, l, e, t, n), d = oa(c, h, e, t, n), f = s.prevZ, m = s.nextZ;
    for(; f && f.z >= u && m && m.z <= d;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0 || (f = f.prevZ, m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0)) return !1;
        m = m.nextZ;
    }
    for(; f && f.z >= u;){
        if (f !== s.prev && f !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, f.x, f.y) && $e(f.prev, f, f.next) >= 0) return !1;
        f = f.prevZ;
    }
    for(; m && m.z <= d;){
        if (m !== s.prev && m !== s.next && Si(i.x, i.y, r.x, r.y, o.x, o.y, m.x, m.y) && $e(m.prev, m, m.next) >= 0) return !1;
        m = m.nextZ;
    }
    return !0;
}
function Gx(s, e, t) {
    let n = s;
    do {
        let i = n.prev, r = n.next.next;
        !fo(i, r) && Lh(i, n, n.next, r) && yr(i, r) && yr(r, i) && (e.push(i.i / t), e.push(n.i / t), e.push(r.i / t), vr(n), vr(n.next), n = s = r), n = n.next;
    }while (n !== s)
    return Tn(n);
}
function Vx(s, e, t, n, i, r) {
    let o = s;
    do {
        let a = o.next.next;
        for(; a !== o.prev;){
            if (o.i !== a.i && Qx(o, a)) {
                let l = Rh(o, a);
                o = Tn(o, o.next), l = Tn(l, l.next), xr(o, e, t, n, i, r), xr(l, e, t, n, i, r);
                return;
            }
            a = a.next;
        }
        o = o.next;
    }while (o !== s)
}
function Wx(s, e, t, n) {
    let i = [], r, o, a, l, c;
    for(r = 0, o = e.length; r < o; r++)a = e[r] * n, l = r < o - 1 ? e[r + 1] * n : s.length, c = Ch(s, a, l, n, !1), c === c.next && (c.steiner = !0), i.push(jx(c));
    for(i.sort(qx), r = 0; r < i.length; r++)Xx(i[r], t), t = Tn(t, t.next);
    return t;
}
function qx(s, e) {
    return s.x - e.x;
}
function Xx(s, e) {
    if (e = Jx(s, e), e) {
        let t = Rh(e, s);
        Tn(e, e.next), Tn(t, t.next);
    }
}
function Jx(s, e) {
    let t = e, n = s.x, i = s.y, r = -1 / 0, o;
    do {
        if (i <= t.y && i >= t.next.y && t.next.y !== t.y) {
            let d = t.x + (i - t.y) * (t.next.x - t.x) / (t.next.y - t.y);
            if (d <= n && d > r) {
                if (r = d, d === n) {
                    if (i === t.y) return t;
                    if (i === t.next.y) return t.next;
                }
                o = t.x < t.next.x ? t : t.next;
            }
        }
        t = t.next;
    }while (t !== e)
    if (!o) return null;
    if (n === r) return o;
    let a = o, l = o.x, c = o.y, h = 1 / 0, u;
    t = o;
    do n >= t.x && t.x >= l && n !== t.x && Si(i < c ? n : r, i, l, c, i < c ? r : n, i, t.x, t.y) && (u = Math.abs(i - t.y) / (n - t.x), yr(t, s) && (u < h || u === h && (t.x > o.x || t.x === o.x && Yx(o, t))) && (o = t, h = u)), t = t.next;
    while (t !== a)
    return o;
}
function Yx(s, e) {
    return $e(s.prev, s, e.prev) < 0 && $e(e.next, s, s.next) < 0;
}
function Zx(s, e, t, n) {
    let i = s;
    do i.z === null && (i.z = oa(i.x, i.y, e, t, n)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next;
    while (i !== s)
    i.prevZ.nextZ = null, i.prevZ = null, $x(i);
}
function $x(s) {
    let e, t, n, i, r, o, a, l, c = 1;
    do {
        for(t = s, s = null, r = null, o = 0; t;){
            for(o++, n = t, a = 0, e = 0; e < c && (a++, n = n.nextZ, !!n); e++);
            for(l = c; a > 0 || l > 0 && n;)a !== 0 && (l === 0 || !n || t.z <= n.z) ? (i = t, t = t.nextZ, a--) : (i = n, n = n.nextZ, l--), r ? r.nextZ = i : s = i, i.prevZ = r, r = i;
            t = n;
        }
        r.nextZ = null, c *= 2;
    }while (o > 1)
    return s;
}
function oa(s, e, t, n, i) {
    return s = 32767 * (s - t) * i, e = 32767 * (e - n) * i, s = (s | s << 8) & 16711935, s = (s | s << 4) & 252645135, s = (s | s << 2) & 858993459, s = (s | s << 1) & 1431655765, e = (e | e << 8) & 16711935, e = (e | e << 4) & 252645135, e = (e | e << 2) & 858993459, e = (e | e << 1) & 1431655765, s | e << 1;
}
function jx(s) {
    let e = s, t = s;
    do (e.x < t.x || e.x === t.x && e.y < t.y) && (t = e), e = e.next;
    while (e !== s)
    return t;
}
function Si(s, e, t, n, i, r, o, a) {
    return (i - o) * (e - a) - (s - o) * (r - a) >= 0 && (s - o) * (n - a) - (t - o) * (e - a) >= 0 && (t - o) * (r - a) - (i - o) * (n - a) >= 0;
}
function Qx(s, e) {
    return s.next.i !== e.i && s.prev.i !== e.i && !Kx(s, e) && (yr(s, e) && yr(e, s) && ey(s, e) && ($e(s.prev, s, e.prev) || $e(s, e.prev, e)) || fo(s, e) && $e(s.prev, s, s.next) > 0 && $e(e.prev, e, e.next) > 0);
}
function $e(s, e, t) {
    return (e.y - s.y) * (t.x - e.x) - (e.x - s.x) * (t.y - e.y);
}
function fo(s, e) {
    return s.x === e.x && s.y === e.y;
}
function Lh(s, e, t, n) {
    let i = ws($e(s, e, t)), r = ws($e(s, e, n)), o = ws($e(t, n, s)), a = ws($e(t, n, e));
    return !!(i !== r && o !== a || i === 0 && bs(s, t, e) || r === 0 && bs(s, n, e) || o === 0 && bs(t, s, n) || a === 0 && bs(t, e, n));
}
function bs(s, e, t) {
    return e.x <= Math.max(s.x, t.x) && e.x >= Math.min(s.x, t.x) && e.y <= Math.max(s.y, t.y) && e.y >= Math.min(s.y, t.y);
}
function ws(s) {
    return s > 0 ? 1 : s < 0 ? -1 : 0;
}
function Kx(s, e) {
    let t = s;
    do {
        if (t.i !== s.i && t.next.i !== s.i && t.i !== e.i && t.next.i !== e.i && Lh(t, t.next, s, e)) return !0;
        t = t.next;
    }while (t !== s)
    return !1;
}
function yr(s, e) {
    return $e(s.prev, s, s.next) < 0 ? $e(s, e, s.next) >= 0 && $e(s, s.prev, e) >= 0 : $e(s, e, s.prev) < 0 || $e(s, s.next, e) < 0;
}
function ey(s, e) {
    let t = s, n = !1, i = (s.x + e.x) / 2, r = (s.y + e.y) / 2;
    do t.y > r != t.next.y > r && t.next.y !== t.y && i < (t.next.x - t.x) * (r - t.y) / (t.next.y - t.y) + t.x && (n = !n), t = t.next;
    while (t !== s)
    return n;
}
function Rh(s, e) {
    let t = new aa(s.i, s.x, s.y), n = new aa(e.i, e.x, e.y), i = s.next, r = e.prev;
    return s.next = e, e.prev = s, t.next = i, i.prev = t, n.next = t, t.prev = n, r.next = n, n.prev = r, n;
}
function mc(s, e, t, n) {
    let i = new aa(s, e, t);
    return n ? (i.next = n.next, i.prev = n, n.next.prev = i, n.next = i) : (i.prev = i, i.next = i), i;
}
function vr(s) {
    s.next.prev = s.prev, s.prev.next = s.next, s.prevZ && (s.prevZ.nextZ = s.nextZ), s.nextZ && (s.nextZ.prevZ = s.prevZ);
}
function aa(s, e, t) {
    this.i = s, this.x = e, this.y = t, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1;
}
function ty(s, e, t, n) {
    let i = 0;
    for(let r = e, o = t - n; r < t; r += n)i += (s[o] - s[r]) * (s[r + 1] + s[o + 1]), o = r;
    return i;
}
var Jt = class {
    static area(e) {
        let t = e.length, n = 0;
        for(let i = t - 1, r = 0; r < t; i = r++)n += e[i].x * e[r].y - e[r].x * e[i].y;
        return n * .5;
    }
    static isClockWise(e) {
        return Jt.area(e) < 0;
    }
    static triangulateShape(e, t) {
        let n = [], i = [], r = [];
        gc(e), xc(n, e);
        let o = e.length;
        t.forEach(gc);
        for(let l = 0; l < t.length; l++)i.push(o), o += t[l].length, xc(n, t[l]);
        let a = Ox.triangulate(n, i);
        for(let l1 = 0; l1 < a.length; l1 += 3)r.push(a.slice(l1, l1 + 3));
        return r;
    }
};
function gc(s) {
    let e = s.length;
    e > 2 && s[e - 1].equals(s[0]) && s.pop();
}
function xc(s, e) {
    for(let t = 0; t < e.length; t++)s.push(e[t].x), s.push(e[t].y);
}
var ln = class extends _e {
    constructor(e = new Xt([
        new X(.5, .5),
        new X(-.5, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = {}){
        super();
        this.type = "ExtrudeGeometry", this.parameters = {
            shapes: e,
            options: t
        }, e = Array.isArray(e) ? e : [
            e
        ];
        let n = this, i = [], r = [];
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a];
            o(c);
        }
        this.setAttribute("position", new de(i, 3)), this.setAttribute("uv", new de(r, 2)), this.computeVertexNormals();
        function o(a) {
            let l = [], c = t.curveSegments !== void 0 ? t.curveSegments : 12, h = t.steps !== void 0 ? t.steps : 1, u = t.depth !== void 0 ? t.depth : 1, d = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0, f = t.bevelThickness !== void 0 ? t.bevelThickness : .2, m = t.bevelSize !== void 0 ? t.bevelSize : f - .1, x = t.bevelOffset !== void 0 ? t.bevelOffset : 0, v = t.bevelSegments !== void 0 ? t.bevelSegments : 3, g = t.extrudePath, p = t.UVGenerator !== void 0 ? t.UVGenerator : ny;
            t.amount !== void 0 && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), u = t.amount);
            let _, y = !1, b, A, L, I;
            g && (_ = g.getSpacedPoints(h), y = !0, d = !1, b = g.computeFrenetFrames(h, !1), A = new M, L = new M, I = new M), d || (v = 0, f = 0, m = 0, x = 0);
            let k = a.extractPoints(c), B = k.shape, P = k.holes;
            if (!Jt.isClockWise(B)) {
                B = B.reverse();
                for(let G = 0, j = P.length; G < j; G++){
                    let K = P[G];
                    Jt.isClockWise(K) && (P[G] = K.reverse());
                }
            }
            let E = Jt.triangulateShape(B, P), D = B;
            for(let G1 = 0, j1 = P.length; G1 < j1; G1++){
                let K1 = P[G1];
                B = B.concat(K1);
            }
            function U(G, j, K) {
                return j || console.error("THREE.ExtrudeGeometry: vec does not exist"), j.clone().multiplyScalar(K).add(G);
            }
            let F = B.length, O = E.length;
            function ne(G, j, K) {
                let ue, se, Se, Te = G.x - j.x, Pe = G.y - j.y, Ye = K.x - G.x, C = K.y - G.y, T = Te * Te + Pe * Pe, J = Te * C - Pe * Ye;
                if (Math.abs(J) > Number.EPSILON) {
                    let $ = Math.sqrt(T), re = Math.sqrt(Ye * Ye + C * C), Z = j.x - Pe / $, Me = j.y + Te / $, ve = K.x - C / re, te = K.y + Ye / re, R = ((ve - Z) * C - (te - Me) * Ye) / (Te * C - Pe * Ye);
                    ue = Z + Te * R - G.x, se = Me + Pe * R - G.y;
                    let ee = ue * ue + se * se;
                    if (ee <= 2) return new X(ue, se);
                    Se = Math.sqrt(ee / 2);
                } else {
                    let $1 = !1;
                    Te > Number.EPSILON ? Ye > Number.EPSILON && ($1 = !0) : Te < -Number.EPSILON ? Ye < -Number.EPSILON && ($1 = !0) : Math.sign(Pe) === Math.sign(C) && ($1 = !0), $1 ? (ue = -Pe, se = Te, Se = Math.sqrt(T)) : (ue = Te, se = Pe, Se = Math.sqrt(T / 2));
                }
                return new X(ue / Se, se / Se);
            }
            let ce = [];
            for(let G2 = 0, j2 = D.length, K2 = j2 - 1, ue = G2 + 1; G2 < j2; G2++, K2++, ue++)K2 === j2 && (K2 = 0), ue === j2 && (ue = 0), ce[G2] = ne(D[G2], D[K2], D[ue]);
            let V = [], W, he = ce.concat();
            for(let G3 = 0, j3 = P.length; G3 < j3; G3++){
                let K3 = P[G3];
                W = [];
                for(let ue1 = 0, se = K3.length, Se = se - 1, Te = ue1 + 1; ue1 < se; ue1++, Se++, Te++)Se === se && (Se = 0), Te === se && (Te = 0), W[ue1] = ne(K3[ue1], K3[Se], K3[Te]);
                V.push(W), he = he.concat(W);
            }
            for(let G4 = 0; G4 < v; G4++){
                let j4 = G4 / v, K4 = f * Math.cos(j4 * Math.PI / 2), ue2 = m * Math.sin(j4 * Math.PI / 2) + x;
                for(let se1 = 0, Se1 = D.length; se1 < Se1; se1++){
                    let Te1 = U(D[se1], ce[se1], ue2);
                    Ce(Te1.x, Te1.y, -K4);
                }
                for(let se2 = 0, Se2 = P.length; se2 < Se2; se2++){
                    let Te2 = P[se2];
                    W = V[se2];
                    for(let Pe = 0, Ye = Te2.length; Pe < Ye; Pe++){
                        let C = U(Te2[Pe], W[Pe], ue2);
                        Ce(C.x, C.y, -K4);
                    }
                }
            }
            let le = m + x;
            for(let G5 = 0; G5 < F; G5++){
                let j5 = d ? U(B[G5], he[G5], le) : B[G5];
                y ? (L.copy(b.normals[0]).multiplyScalar(j5.x), A.copy(b.binormals[0]).multiplyScalar(j5.y), I.copy(_[0]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(j5.x, j5.y, 0);
            }
            for(let G6 = 1; G6 <= h; G6++)for(let j6 = 0; j6 < F; j6++){
                let K5 = d ? U(B[j6], he[j6], le) : B[j6];
                y ? (L.copy(b.normals[G6]).multiplyScalar(K5.x), A.copy(b.binormals[G6]).multiplyScalar(K5.y), I.copy(_[G6]).add(L).add(A), Ce(I.x, I.y, I.z)) : Ce(K5.x, K5.y, u / h * G6);
            }
            for(let G7 = v - 1; G7 >= 0; G7--){
                let j7 = G7 / v, K6 = f * Math.cos(j7 * Math.PI / 2), ue3 = m * Math.sin(j7 * Math.PI / 2) + x;
                for(let se3 = 0, Se3 = D.length; se3 < Se3; se3++){
                    let Te3 = U(D[se3], ce[se3], ue3);
                    Ce(Te3.x, Te3.y, u + K6);
                }
                for(let se4 = 0, Se4 = P.length; se4 < Se4; se4++){
                    let Te4 = P[se4];
                    W = V[se4];
                    for(let Pe1 = 0, Ye1 = Te4.length; Pe1 < Ye1; Pe1++){
                        let C1 = U(Te4[Pe1], W[Pe1], ue3);
                        y ? Ce(C1.x, C1.y + _[h - 1].y, _[h - 1].x + K6) : Ce(C1.x, C1.y, u + K6);
                    }
                }
            }
            fe(), Be();
            function fe() {
                let G = i.length / 3;
                if (d) {
                    let j = 0, K = F * j;
                    for(let ue = 0; ue < O; ue++){
                        let se = E[ue];
                        ye(se[2] + K, se[1] + K, se[0] + K);
                    }
                    j = h + v * 2, K = F * j;
                    for(let ue1 = 0; ue1 < O; ue1++){
                        let se1 = E[ue1];
                        ye(se1[0] + K, se1[1] + K, se1[2] + K);
                    }
                } else {
                    for(let j1 = 0; j1 < O; j1++){
                        let K1 = E[j1];
                        ye(K1[2], K1[1], K1[0]);
                    }
                    for(let j2 = 0; j2 < O; j2++){
                        let K2 = E[j2];
                        ye(K2[0] + F * h, K2[1] + F * h, K2[2] + F * h);
                    }
                }
                n.addGroup(G, i.length / 3 - G, 0);
            }
            function Be() {
                let G = i.length / 3, j = 0;
                Y(D, j), j += D.length;
                for(let K = 0, ue = P.length; K < ue; K++){
                    let se = P[K];
                    Y(se, j), j += se.length;
                }
                n.addGroup(G, i.length / 3 - G, 1);
            }
            function Y(G, j) {
                let K = G.length;
                for(; --K >= 0;){
                    let ue = K, se = K - 1;
                    se < 0 && (se = G.length - 1);
                    for(let Se = 0, Te = h + v * 2; Se < Te; Se++){
                        let Pe = F * Se, Ye = F * (Se + 1), C = j + ue + Pe, T = j + se + Pe, J = j + se + Ye, $ = j + ue + Ye;
                        ge(C, T, J, $);
                    }
                }
            }
            function Ce(G, j, K) {
                l.push(G), l.push(j), l.push(K);
            }
            function ye(G, j, K) {
                xe(G), xe(j), xe(K);
                let ue = i.length / 3, se = p.generateTopUV(n, i, ue - 3, ue - 2, ue - 1);
                Oe(se[0]), Oe(se[1]), Oe(se[2]);
            }
            function ge(G, j, K, ue) {
                xe(G), xe(j), xe(ue), xe(j), xe(K), xe(ue);
                let se = i.length / 3, Se = p.generateSideWallUV(n, i, se - 6, se - 3, se - 2, se - 1);
                Oe(Se[0]), Oe(Se[1]), Oe(Se[3]), Oe(Se[1]), Oe(Se[2]), Oe(Se[3]);
            }
            function xe(G) {
                i.push(l[G * 3 + 0]), i.push(l[G * 3 + 1]), i.push(l[G * 3 + 2]);
            }
            function Oe(G) {
                r.push(G.x), r.push(G.y);
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes, n = this.parameters.options;
        return iy(t, n, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let r = 0, o = e.shapes.length; r < o; r++){
            let a = t[e.shapes[r]];
            n.push(a);
        }
        let i = e.options.extrudePath;
        return i !== void 0 && (e.options.extrudePath = new Ta[i.type]().fromJSON(i)), new ln(n, e.options);
    }
}, ny = {
    generateTopUV: function(s, e, t, n, i) {
        let r = e[t * 3], o = e[t * 3 + 1], a = e[n * 3], l = e[n * 3 + 1], c = e[i * 3], h = e[i * 3 + 1];
        return [
            new X(r, o),
            new X(a, l),
            new X(c, h)
        ];
    },
    generateSideWallUV: function(s, e, t, n, i, r) {
        let o = e[t * 3], a = e[t * 3 + 1], l = e[t * 3 + 2], c = e[n * 3], h = e[n * 3 + 1], u = e[n * 3 + 2], d = e[i * 3], f = e[i * 3 + 1], m = e[i * 3 + 2], x = e[r * 3], v = e[r * 3 + 1], g = e[r * 3 + 2];
        return Math.abs(a - h) < Math.abs(o - c) ? [
            new X(o, 1 - l),
            new X(c, 1 - u),
            new X(d, 1 - m),
            new X(x, 1 - g)
        ] : [
            new X(a, 1 - l),
            new X(h, 1 - u),
            new X(f, 1 - m),
            new X(v, 1 - g)
        ];
    }
};
function iy(s, e, t) {
    if (t.shapes = [], Array.isArray(s)) for(let n = 0, i = s.length; n < i; n++){
        let r = s[n];
        t.shapes.push(r.uuid);
    }
    else t.shapes.push(s.uuid);
    return e.extrudePath !== void 0 && (t.options.extrudePath = e.extrudePath.toJSON()), t;
}
var _r = class extends an {
    constructor(e = 1, t = 0){
        let n = (1 + Math.sqrt(5)) / 2, i = [
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            0,
            0,
            -1,
            n,
            0,
            1,
            n,
            0,
            -1,
            -n,
            0,
            1,
            -n,
            n,
            0,
            -1,
            n,
            0,
            1,
            -n,
            0,
            -1,
            -n,
            0,
            1
        ], r = [
            0,
            11,
            5,
            0,
            5,
            1,
            0,
            1,
            7,
            0,
            7,
            10,
            0,
            10,
            11,
            1,
            5,
            9,
            5,
            11,
            4,
            11,
            10,
            2,
            10,
            7,
            6,
            7,
            1,
            8,
            3,
            9,
            4,
            3,
            4,
            2,
            3,
            2,
            6,
            3,
            6,
            8,
            3,
            8,
            9,
            4,
            9,
            5,
            2,
            4,
            11,
            6,
            2,
            10,
            8,
            6,
            7,
            9,
            8,
            1
        ];
        super(i, r, e, t);
        this.type = "IcosahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new _r(e.radius, e.detail);
    }
}, Mr = class extends _e {
    constructor(e = [
        new X(0, .5),
        new X(.5, 0),
        new X(0, -.5)
    ], t = 12, n = 0, i = Math.PI * 2){
        super();
        this.type = "LatheGeometry", this.parameters = {
            points: e,
            segments: t,
            phiStart: n,
            phiLength: i
        }, t = Math.floor(t), i = mt(i, 0, Math.PI * 2);
        let r = [], o = [], a = [], l = [], c = [], h = 1 / t, u = new M, d = new X, f = new M, m = new M, x = new M, v = 0, g = 0;
        for(let p = 0; p <= e.length - 1; p++)switch(p){
            case 0:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, x.copy(f), f.normalize(), l.push(f.x, f.y, f.z);
                break;
            case e.length - 1:
                l.push(x.x, x.y, x.z);
                break;
            default:
                v = e[p + 1].x - e[p].x, g = e[p + 1].y - e[p].y, f.x = g * 1, f.y = -v, f.z = g * 0, m.copy(f), f.x += x.x, f.y += x.y, f.z += x.z, f.normalize(), l.push(f.x, f.y, f.z), x.copy(m);
        }
        for(let p1 = 0; p1 <= t; p1++){
            let _ = n + p1 * h * i, y = Math.sin(_), b = Math.cos(_);
            for(let A = 0; A <= e.length - 1; A++){
                u.x = e[A].x * y, u.y = e[A].y, u.z = e[A].x * b, o.push(u.x, u.y, u.z), d.x = p1 / t, d.y = A / (e.length - 1), a.push(d.x, d.y);
                let L = l[3 * A + 0] * y, I = l[3 * A + 1], k = l[3 * A + 0] * b;
                c.push(L, I, k);
            }
        }
        for(let p2 = 0; p2 < t; p2++)for(let _1 = 0; _1 < e.length - 1; _1++){
            let y1 = _1 + p2 * e.length, b1 = y1, A1 = y1 + e.length, L1 = y1 + e.length + 1, I1 = y1 + 1;
            r.push(b1, A1, I1), r.push(A1, L1, I1);
        }
        this.setIndex(r), this.setAttribute("position", new de(o, 3)), this.setAttribute("uv", new de(a, 2)), this.setAttribute("normal", new de(c, 3));
    }
    static fromJSON(e) {
        return new Mr(e.points, e.segments, e.phiStart, e.phiLength);
    }
}, Ii = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1,
            0,
            0,
            0,
            1,
            0,
            0,
            -1
        ], i = [
            0,
            2,
            4,
            0,
            4,
            3,
            0,
            3,
            5,
            0,
            5,
            2,
            1,
            2,
            5,
            1,
            5,
            3,
            1,
            3,
            4,
            1,
            4,
            2
        ];
        super(n, i, e, t);
        this.type = "OctahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new Ii(e.radius, e.detail);
    }
}, br = class extends _e {
    constructor(e = .5, t = 1, n = 8, i = 1, r = 0, o = Math.PI * 2){
        super();
        this.type = "RingGeometry", this.parameters = {
            innerRadius: e,
            outerRadius: t,
            thetaSegments: n,
            phiSegments: i,
            thetaStart: r,
            thetaLength: o
        }, n = Math.max(3, n), i = Math.max(1, i);
        let a = [], l = [], c = [], h = [], u = e, d = (t - e) / i, f = new M, m = new X;
        for(let x = 0; x <= i; x++){
            for(let v = 0; v <= n; v++){
                let g = r + v / n * o;
                f.x = u * Math.cos(g), f.y = u * Math.sin(g), l.push(f.x, f.y, f.z), c.push(0, 0, 1), m.x = (f.x / t + 1) / 2, m.y = (f.y / t + 1) / 2, h.push(m.x, m.y);
            }
            u += d;
        }
        for(let x1 = 0; x1 < i; x1++){
            let v1 = x1 * (n + 1);
            for(let g1 = 0; g1 < n; g1++){
                let p = g1 + v1, _ = p, y = p + n + 1, b = p + n + 2, A = p + 1;
                a.push(_, y, A), a.push(y, b, A);
            }
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
    }
    static fromJSON(e) {
        return new br(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength);
    }
}, Di = class extends _e {
    constructor(e = new Xt([
        new X(0, .5),
        new X(-.5, -.5),
        new X(.5, -.5)
    ]), t = 12){
        super();
        this.type = "ShapeGeometry", this.parameters = {
            shapes: e,
            curveSegments: t
        };
        let n = [], i = [], r = [], o = [], a = 0, l = 0;
        if (Array.isArray(e) === !1) c(e);
        else for(let h = 0; h < e.length; h++)c(e[h]), this.addGroup(a, l, h), a += l, l = 0;
        this.setIndex(n), this.setAttribute("position", new de(i, 3)), this.setAttribute("normal", new de(r, 3)), this.setAttribute("uv", new de(o, 2));
        function c(h) {
            let u = i.length / 3, d = h.extractPoints(t), f = d.shape, m = d.holes;
            Jt.isClockWise(f) === !1 && (f = f.reverse());
            for(let v = 0, g = m.length; v < g; v++){
                let p = m[v];
                Jt.isClockWise(p) === !0 && (m[v] = p.reverse());
            }
            let x = Jt.triangulateShape(f, m);
            for(let v1 = 0, g1 = m.length; v1 < g1; v1++){
                let p1 = m[v1];
                f = f.concat(p1);
            }
            for(let v2 = 0, g2 = f.length; v2 < g2; v2++){
                let p2 = f[v2];
                i.push(p2.x, p2.y, 0), r.push(0, 0, 1), o.push(p2.x, p2.y);
            }
            for(let v3 = 0, g3 = x.length; v3 < g3; v3++){
                let p3 = x[v3], _ = p3[0] + u, y = p3[1] + u, b = p3[2] + u;
                n.push(_, y, b), l += 3;
            }
        }
    }
    toJSON() {
        let e = super.toJSON(), t = this.parameters.shapes;
        return ry(t, e);
    }
    static fromJSON(e, t) {
        let n = [];
        for(let i = 0, r = e.shapes.length; i < r; i++){
            let o = t[e.shapes[i]];
            n.push(o);
        }
        return new Di(n, e.curveSegments);
    }
};
function ry(s, e) {
    if (e.shapes = [], Array.isArray(s)) for(let t = 0, n = s.length; t < n; t++){
        let i = s[t];
        e.shapes.push(i.uuid);
    }
    else e.shapes.push(s.uuid);
    return e;
}
var Fi = class extends _e {
    constructor(e = 1, t = 32, n = 16, i = 0, r = Math.PI * 2, o = 0, a = Math.PI){
        super();
        this.type = "SphereGeometry", this.parameters = {
            radius: e,
            widthSegments: t,
            heightSegments: n,
            phiStart: i,
            phiLength: r,
            thetaStart: o,
            thetaLength: a
        }, t = Math.max(3, Math.floor(t)), n = Math.max(2, Math.floor(n));
        let l = Math.min(o + a, Math.PI), c = 0, h = [], u = new M, d = new M, f = [], m = [], x = [], v = [];
        for(let g = 0; g <= n; g++){
            let p = [], _ = g / n, y = 0;
            g == 0 && o == 0 ? y = .5 / t : g == n && l == Math.PI && (y = -.5 / t);
            for(let b = 0; b <= t; b++){
                let A = b / t;
                u.x = -e * Math.cos(i + A * r) * Math.sin(o + _ * a), u.y = e * Math.cos(o + _ * a), u.z = e * Math.sin(i + A * r) * Math.sin(o + _ * a), m.push(u.x, u.y, u.z), d.copy(u).normalize(), x.push(d.x, d.y, d.z), v.push(A + y, 1 - _), p.push(c++);
            }
            h.push(p);
        }
        for(let g1 = 0; g1 < n; g1++)for(let p1 = 0; p1 < t; p1++){
            let _1 = h[g1][p1 + 1], y1 = h[g1][p1], b1 = h[g1 + 1][p1], A1 = h[g1 + 1][p1 + 1];
            (g1 !== 0 || o > 0) && f.push(_1, y1, A1), (g1 !== n - 1 || l < Math.PI) && f.push(y1, b1, A1);
        }
        this.setIndex(f), this.setAttribute("position", new de(m, 3)), this.setAttribute("normal", new de(x, 3)), this.setAttribute("uv", new de(v, 2));
    }
    static fromJSON(e) {
        return new Fi(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength);
    }
}, wr = class extends an {
    constructor(e = 1, t = 0){
        let n = [
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            1,
            -1,
            1,
            -1,
            -1
        ], i = [
            2,
            1,
            0,
            0,
            3,
            2,
            1,
            3,
            0,
            2,
            3,
            1
        ];
        super(n, i, e, t);
        this.type = "TetrahedronGeometry", this.parameters = {
            radius: e,
            detail: t
        };
    }
    static fromJSON(e) {
        return new wr(e.radius, e.detail);
    }
}, Sr = class extends _e {
    constructor(e = 1, t = .4, n = 8, i = 6, r = Math.PI * 2){
        super();
        this.type = "TorusGeometry", this.parameters = {
            radius: e,
            tube: t,
            radialSegments: n,
            tubularSegments: i,
            arc: r
        }, n = Math.floor(n), i = Math.floor(i);
        let o = [], a = [], l = [], c = [], h = new M, u = new M, d = new M;
        for(let f = 0; f <= n; f++)for(let m = 0; m <= i; m++){
            let x = m / i * r, v = f / n * Math.PI * 2;
            u.x = (e + t * Math.cos(v)) * Math.cos(x), u.y = (e + t * Math.cos(v)) * Math.sin(x), u.z = t * Math.sin(v), a.push(u.x, u.y, u.z), h.x = e * Math.cos(x), h.y = e * Math.sin(x), d.subVectors(u, h).normalize(), l.push(d.x, d.y, d.z), c.push(m / i), c.push(f / n);
        }
        for(let f1 = 1; f1 <= n; f1++)for(let m1 = 1; m1 <= i; m1++){
            let x1 = (i + 1) * f1 + m1 - 1, v1 = (i + 1) * (f1 - 1) + m1 - 1, g = (i + 1) * (f1 - 1) + m1, p = (i + 1) * f1 + m1;
            o.push(x1, v1, p), o.push(v1, g, p);
        }
        this.setIndex(o), this.setAttribute("position", new de(a, 3)), this.setAttribute("normal", new de(l, 3)), this.setAttribute("uv", new de(c, 2));
    }
    static fromJSON(e) {
        return new Sr(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc);
    }
}, Tr = class extends _e {
    constructor(e = 1, t = .4, n = 64, i = 8, r = 2, o = 3){
        super();
        this.type = "TorusKnotGeometry", this.parameters = {
            radius: e,
            tube: t,
            tubularSegments: n,
            radialSegments: i,
            p: r,
            q: o
        }, n = Math.floor(n), i = Math.floor(i);
        let a = [], l = [], c = [], h = [], u = new M, d = new M, f = new M, m = new M, x = new M, v = new M, g = new M;
        for(let _ = 0; _ <= n; ++_){
            let y = _ / n * r * Math.PI * 2;
            p(y, r, o, e, f), p(y + .01, r, o, e, m), v.subVectors(m, f), g.addVectors(m, f), x.crossVectors(v, g), g.crossVectors(x, v), x.normalize(), g.normalize();
            for(let b = 0; b <= i; ++b){
                let A = b / i * Math.PI * 2, L = -t * Math.cos(A), I = t * Math.sin(A);
                u.x = f.x + (L * g.x + I * x.x), u.y = f.y + (L * g.y + I * x.y), u.z = f.z + (L * g.z + I * x.z), l.push(u.x, u.y, u.z), d.subVectors(u, f).normalize(), c.push(d.x, d.y, d.z), h.push(_ / n), h.push(b / i);
            }
        }
        for(let _1 = 1; _1 <= n; _1++)for(let y1 = 1; y1 <= i; y1++){
            let b1 = (i + 1) * (_1 - 1) + (y1 - 1), A1 = (i + 1) * _1 + (y1 - 1), L1 = (i + 1) * _1 + y1, I1 = (i + 1) * (_1 - 1) + y1;
            a.push(b1, A1, I1), a.push(A1, L1, I1);
        }
        this.setIndex(a), this.setAttribute("position", new de(l, 3)), this.setAttribute("normal", new de(c, 3)), this.setAttribute("uv", new de(h, 2));
        function p(_, y, b, A, L) {
            let I = Math.cos(_), k = Math.sin(_), B = b / y * _, P = Math.cos(B);
            L.x = A * (2 + P) * .5 * I, L.y = A * (2 + P) * k * .5, L.z = A * Math.sin(B) * .5;
        }
    }
    static fromJSON(e) {
        return new Tr(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q);
    }
}, Er = class extends _e {
    constructor(e = new ho(new M(-1, -1, 0), new M(-1, 1, 0), new M(1, 1, 0)), t = 64, n = 1, i = 8, r = !1){
        super();
        this.type = "TubeGeometry", this.parameters = {
            path: e,
            tubularSegments: t,
            radius: n,
            radialSegments: i,
            closed: r
        };
        let o = e.computeFrenetFrames(t, r);
        this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
        let a = new M, l = new M, c = new X, h = new M, u = [], d = [], f = [], m = [];
        x(), this.setIndex(m), this.setAttribute("position", new de(u, 3)), this.setAttribute("normal", new de(d, 3)), this.setAttribute("uv", new de(f, 2));
        function x() {
            for(let _ = 0; _ < t; _++)v(_);
            v(r === !1 ? t : 0), p(), g();
        }
        function v(_) {
            h = e.getPointAt(_ / t, h);
            let y = o.normals[_], b = o.binormals[_];
            for(let A = 0; A <= i; A++){
                let L = A / i * Math.PI * 2, I = Math.sin(L), k = -Math.cos(L);
                l.x = k * y.x + I * b.x, l.y = k * y.y + I * b.y, l.z = k * y.z + I * b.z, l.normalize(), d.push(l.x, l.y, l.z), a.x = h.x + n * l.x, a.y = h.y + n * l.y, a.z = h.z + n * l.z, u.push(a.x, a.y, a.z);
            }
        }
        function g() {
            for(let _ = 1; _ <= t; _++)for(let y = 1; y <= i; y++){
                let b = (i + 1) * (_ - 1) + (y - 1), A = (i + 1) * _ + (y - 1), L = (i + 1) * _ + y, I = (i + 1) * (_ - 1) + y;
                m.push(b, A, I), m.push(A, L, I);
            }
        }
        function p() {
            for(let _ = 0; _ <= t; _++)for(let y = 0; y <= i; y++)c.x = _ / t, c.y = y / i, f.push(c.x, c.y);
        }
    }
    toJSON() {
        let e = super.toJSON();
        return e.path = this.parameters.path.toJSON(), e;
    }
    static fromJSON(e) {
        return new Er(new Ta[e.path.type]().fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed);
    }
}, Ea = class extends _e {
    constructor(e = null){
        super();
        if (this.type = "WireframeGeometry", this.parameters = {
            geometry: e
        }, e !== null) {
            let t = [], n = new Set, i = new M, r = new M;
            if (e.index !== null) {
                let o = e.attributes.position, a = e.index, l = e.groups;
                l.length === 0 && (l = [
                    {
                        start: 0,
                        count: a.count,
                        materialIndex: 0
                    }
                ]);
                for(let c = 0, h = l.length; c < h; ++c){
                    let u = l[c], d = u.start, f = u.count;
                    for(let m = d, x = d + f; m < x; m += 3)for(let v = 0; v < 3; v++){
                        let g = a.getX(m + v), p = a.getX(m + (v + 1) % 3);
                        i.fromBufferAttribute(o, g), r.fromBufferAttribute(o, p), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                    }
                }
            } else {
                let o1 = e.attributes.position;
                for(let a1 = 0, l1 = o1.count / 3; a1 < l1; a1++)for(let c1 = 0; c1 < 3; c1++){
                    let h1 = 3 * a1 + c1, u1 = 3 * a1 + (c1 + 1) % 3;
                    i.fromBufferAttribute(o1, h1), r.fromBufferAttribute(o1, u1), yc(i, r, n) === !0 && (t.push(i.x, i.y, i.z), t.push(r.x, r.y, r.z));
                }
            }
            this.setAttribute("position", new de(t, 3));
        }
    }
};
function yc(s, e, t) {
    let n = `${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`, i = `${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n, i), !0);
}
var vc = Object.freeze({
    __proto__: null,
    BoxGeometry: wn,
    BoxBufferGeometry: wn,
    CircleGeometry: fr,
    CircleBufferGeometry: fr,
    ConeGeometry: pr,
    ConeBufferGeometry: pr,
    CylinderGeometry: Jn,
    CylinderBufferGeometry: Jn,
    DodecahedronGeometry: mr,
    DodecahedronBufferGeometry: mr,
    EdgesGeometry: _a,
    ExtrudeGeometry: ln,
    ExtrudeBufferGeometry: ln,
    IcosahedronGeometry: _r,
    IcosahedronBufferGeometry: _r,
    LatheGeometry: Mr,
    LatheBufferGeometry: Mr,
    OctahedronGeometry: Ii,
    OctahedronBufferGeometry: Ii,
    PlaneGeometry: Pi,
    PlaneBufferGeometry: Pi,
    PolyhedronGeometry: an,
    PolyhedronBufferGeometry: an,
    RingGeometry: br,
    RingBufferGeometry: br,
    ShapeGeometry: Di,
    ShapeBufferGeometry: Di,
    SphereGeometry: Fi,
    SphereBufferGeometry: Fi,
    TetrahedronGeometry: wr,
    TetrahedronBufferGeometry: wr,
    TorusGeometry: Sr,
    TorusBufferGeometry: Sr,
    TorusKnotGeometry: Tr,
    TorusKnotBufferGeometry: Tr,
    TubeGeometry: Er,
    TubeBufferGeometry: Er,
    WireframeGeometry: Ea
}), Aa = class extends dt {
    constructor(e){
        super();
        this.type = "ShadowMaterial", this.color = new ae(0), this.transparent = !0, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this;
    }
};
Aa.prototype.isShadowMaterial = !0;
var po = class extends dt {
    constructor(e){
        super();
        this.defines = {
            STANDARD: ""
        }, this.type = "MeshStandardMaterial", this.color = new ae(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: ""
        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
po.prototype.isMeshStandardMaterial = !0;
var Ca = class extends po {
    constructor(e){
        super();
        this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.type = "MeshPhysicalMaterial", this.clearcoatMap = null, this.clearcoatRoughness = 0, this.clearcoatRoughnessMap = null, this.clearcoatNormalScale = new X(1, 1), this.clearcoatNormalMap = null, this.ior = 1.5, Object.defineProperty(this, "reflectivity", {
            get: function() {
                return mt(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);
            },
            set: function(t) {
                this.ior = (1 + .4 * t) / (1 - .4 * t);
            }
        }), this.sheenColor = new ae(0), this.sheenColorMap = null, this.sheenRoughness = 1, this.sheenRoughnessMap = null, this.transmissionMap = null, this.thickness = 0, this.thicknessMap = null, this.attenuationDistance = 0, this.attenuationColor = new ae(1, 1, 1), this.specularIntensity = 1, this.specularIntensityMap = null, this.specularColor = new ae(1, 1, 1), this.specularColorMap = null, this._sheen = 0, this._clearcoat = 0, this._transmission = 0, this.setValues(e);
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, this._sheen = e;
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, this._clearcoat = e;
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++, this._transmission = e;
    }
    copy(e) {
        return super.copy(e), this.defines = {
            STANDARD: "",
            PHYSICAL: ""
        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.ior = e.ior, this.sheen = e.sheen, this.sheenColor.copy(e.sheenColor), this.sheenColorMap = e.sheenColorMap, this.sheenRoughness = e.sheenRoughness, this.sheenRoughnessMap = e.sheenRoughnessMap, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationColor.copy(e.attenuationColor), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularColor.copy(e.specularColor), this.specularColorMap = e.specularColorMap, this;
    }
};
Ca.prototype.isMeshPhysicalMaterial = !0;
var La = class extends dt {
    constructor(e){
        super();
        this.type = "MeshPhongMaterial", this.color = new ae(16777215), this.specular = new ae(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this;
    }
};
La.prototype.isMeshPhongMaterial = !0;
var Ra = class extends dt {
    constructor(e){
        super();
        this.defines = {
            TOON: ""
        }, this.type = "MeshToonMaterial", this.color = new ae(16777215), this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ra.prototype.isMeshToonMaterial = !0;
var Pa = class extends dt {
    constructor(e){
        super();
        this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this;
    }
};
Pa.prototype.isMeshNormalMaterial = !0;
var Ia = class extends dt {
    constructor(e){
        super();
        this.type = "MeshLambertMaterial", this.color = new ae(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new ae(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = Vs, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this;
    }
};
Ia.prototype.isMeshLambertMaterial = !0;
var Da = class extends dt {
    constructor(e){
        super();
        this.defines = {
            MATCAP: ""
        }, this.type = "MeshMatcapMaterial", this.color = new ae(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = Hi, this.normalScale = new X(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.flatShading = !1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.defines = {
            MATCAP: ""
        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this;
    }
};
Da.prototype.isMeshMatcapMaterial = !0;
var Fa = class extends ft {
    constructor(e){
        super();
        this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e);
    }
    copy(e) {
        return super.copy(e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this;
    }
};
Fa.prototype.isLineDashedMaterial = !0;
var sy = Object.freeze({
    __proto__: null,
    ShadowMaterial: Aa,
    SpriteMaterial: io,
    RawShaderMaterial: Gi,
    ShaderMaterial: sn,
    PointsMaterial: jn,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshPhongMaterial: La,
    MeshToonMaterial: Ra,
    MeshNormalMaterial: Pa,
    MeshLambertMaterial: Ia,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshBasicMaterial: hn,
    MeshMatcapMaterial: Da,
    LineDashedMaterial: Fa,
    LineBasicMaterial: ft,
    Material: dt
}), Ze = {
    arraySlice: function(s, e, t) {
        return Ze.isTypedArray(s) ? new s.constructor(s.subarray(e, t !== void 0 ? t : s.length)) : s.slice(e, t);
    },
    convertArray: function(s, e, t) {
        return !s || !t && s.constructor === e ? s : typeof e.BYTES_PER_ELEMENT == "number" ? new e(s) : Array.prototype.slice.call(s);
    },
    isTypedArray: function(s) {
        return ArrayBuffer.isView(s) && !(s instanceof DataView);
    },
    getKeyframeOrder: function(s) {
        function e(i, r) {
            return s[i] - s[r];
        }
        let t = s.length, n = new Array(t);
        for(let i = 0; i !== t; ++i)n[i] = i;
        return n.sort(e), n;
    },
    sortedArray: function(s, e, t) {
        let n = s.length, i = new s.constructor(n);
        for(let r = 0, o = 0; o !== n; ++r){
            let a = t[r] * e;
            for(let l = 0; l !== e; ++l)i[o++] = s[a + l];
        }
        return i;
    },
    flattenJSON: function(s, e, t, n) {
        let i = 1, r = s[0];
        for(; r !== void 0 && r[n] === void 0;)r = s[i++];
        if (r === void 0) return;
        let o = r[n];
        if (o !== void 0) if (Array.isArray(o)) do o = r[n], o !== void 0 && (e.push(r.time), t.push.apply(t, o)), r = s[i++];
        while (r !== void 0)
        else if (o.toArray !== void 0) do o = r[n], o !== void 0 && (e.push(r.time), o.toArray(t, t.length)), r = s[i++];
        while (r !== void 0)
        else do o = r[n], o !== void 0 && (e.push(r.time), t.push(o)), r = s[i++];
        while (r !== void 0)
    },
    subclip: function(s, e, t, n, i = 30) {
        let r = s.clone();
        r.name = e;
        let o = [];
        for(let l = 0; l < r.tracks.length; ++l){
            let c = r.tracks[l], h = c.getValueSize(), u = [], d = [];
            for(let f = 0; f < c.times.length; ++f){
                let m = c.times[f] * i;
                if (!(m < t || m >= n)) {
                    u.push(c.times[f]);
                    for(let x = 0; x < h; ++x)d.push(c.values[f * h + x]);
                }
            }
            u.length !== 0 && (c.times = Ze.convertArray(u, c.times.constructor), c.values = Ze.convertArray(d, c.values.constructor), o.push(c));
        }
        r.tracks = o;
        let a = 1 / 0;
        for(let l1 = 0; l1 < r.tracks.length; ++l1)a > r.tracks[l1].times[0] && (a = r.tracks[l1].times[0]);
        for(let l2 = 0; l2 < r.tracks.length; ++l2)r.tracks[l2].shift(-1 * a);
        return r.resetDuration(), r;
    },
    makeClipAdditive: function(s, e = 0, t = s, n = 30) {
        n <= 0 && (n = 30);
        let i = t.tracks.length, r = e / n;
        for(let o = 0; o < i; ++o){
            let a = t.tracks[o], l = a.ValueTypeName;
            if (l === "bool" || l === "string") continue;
            let c = s.tracks.find(function(g) {
                return g.name === a.name && g.ValueTypeName === l;
            });
            if (c === void 0) continue;
            let h = 0, u = a.getValueSize();
            a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (h = u / 3);
            let d = 0, f = c.getValueSize();
            c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (d = f / 3);
            let m = a.times.length - 1, x;
            if (r <= a.times[0]) {
                let g = h, p = u - h;
                x = Ze.arraySlice(a.values, g, p);
            } else if (r >= a.times[m]) {
                let g1 = m * u + h, p1 = g1 + u - h;
                x = Ze.arraySlice(a.values, g1, p1);
            } else {
                let g2 = a.createInterpolant(), p2 = h, _ = u - h;
                g2.evaluate(r), x = Ze.arraySlice(g2.resultBuffer, p2, _);
            }
            l === "quaternion" && new gt().fromArray(x).normalize().conjugate().toArray(x);
            let v = c.times.length;
            for(let g3 = 0; g3 < v; ++g3){
                let p3 = g3 * f + d;
                if (l === "quaternion") gt.multiplyQuaternionsFlat(c.values, p3, x, 0, c.values, p3);
                else {
                    let _1 = f - d * 2;
                    for(let y = 0; y < _1; ++y)c.values[p3 + y] -= x[y];
                }
            }
        }
        return s.blendMode = qc, s;
    }
}, cn = class {
    constructor(e, t, n, i){
        this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = i !== void 0 ? i : new t.constructor(n), this.sampleValues = t, this.valueSize = n, this.settings = null, this.DefaultSettings_ = {};
    }
    evaluate(e) {
        let t = this.parameterPositions, n = this._cachedIndex, i = t[n], r = t[n - 1];
        e: {
            t: {
                let o;
                n: {
                    i: if (!(e < i)) {
                        for(let a = n + 2;;){
                            if (i === void 0) {
                                if (e < r) break i;
                                return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, r);
                            }
                            if (n === a) break;
                            if (r = i, i = t[++n], e < i) break t;
                        }
                        o = t.length;
                        break n;
                    }
                    if (!(e >= r)) {
                        let a1 = t[1];
                        e < a1 && (n = 2, r = a1);
                        for(let l = n - 2;;){
                            if (r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                            if (n === l) break;
                            if (i = r, r = t[--n - 1], e >= r) break t;
                        }
                        o = n, n = 0;
                        break n;
                    }
                    break e;
                }
                for(; n < o;){
                    let a2 = n + o >>> 1;
                    e < t[a2] ? o = a2 : n = a2 + 1;
                }
                if (i = t[n], r = t[n - 1], r === void 0) return this._cachedIndex = 0, this.beforeStart_(0, e, i);
                if (i === void 0) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, r, e);
            }
            this._cachedIndex = n, this.intervalChanged_(n, r, i);
        }
        return this.interpolate_(n, r, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        let t = this.resultBuffer, n = this.sampleValues, i = this.valueSize, r = e * i;
        for(let o = 0; o !== i; ++o)t[o] = n[r + o];
        return t;
    }
    interpolate_() {
        throw new Error("call to abstract method");
    }
    intervalChanged_() {}
};
cn.prototype.beforeStart_ = cn.prototype.copySampleValue_;
cn.prototype.afterEnd_ = cn.prototype.copySampleValue_;
var Ph = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
        this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0, this.DefaultSettings_ = {
            endingStart: Mi,
            endingEnd: Mi
        };
    }
    intervalChanged_(e, t, n) {
        let i = this.parameterPositions, r = e - 2, o = e + 1, a = i[r], l = i[o];
        if (a === void 0) switch(this.getSettings_().endingStart){
            case bi:
                r = e, a = 2 * t - n;
                break;
            case Os:
                r = i.length - 2, a = t + i[r] - i[r + 1];
                break;
            default:
                r = e, a = n;
        }
        if (l === void 0) switch(this.getSettings_().endingEnd){
            case bi:
                o = e, l = 2 * n - t;
                break;
            case Os:
                o = 1, l = n + i[1] - i[0];
                break;
            default:
                o = e - 1, l = t;
        }
        let c = (n - t) * .5, h = this.valueSize;
        this._weightPrev = c / (t - a), this._weightNext = c / (l - n), this._offsetPrev = r * h, this._offsetNext = o * h;
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = this._offsetPrev, u = this._offsetNext, d = this._weightPrev, f = this._weightNext, m = (n - t) / (i - t), x = m * m, v = x * m, g = -d * v + 2 * d * x - d * m, p = (1 + d) * v + (-1.5 - 2 * d) * x + (-.5 + d) * m + 1, _ = (-1 - f) * v + (1.5 + f) * x + .5 * m, y = f * v - f * x;
        for(let b = 0; b !== a; ++b)r[b] = g * o[h + b] + p * o[c + b] + _ * o[l + b] + y * o[u + b];
        return r;
    }
}, Na = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = e * a, c = l - a, h = (n - t) / (i - t), u = 1 - h;
        for(let d = 0; d !== a; ++d)r[d] = o[c + d] * u + o[l + d] * h;
        return r;
    }
}, Ih = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}, zt = class {
    constructor(e, t, n, i){
        if (e === void 0) throw new Error("THREE.KeyframeTrack: track name is undefined");
        if (t === void 0 || t.length === 0) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
        this.name = e, this.times = Ze.convertArray(t, this.TimeBufferType), this.values = Ze.convertArray(n, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        let t = e.constructor, n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: Ze.convertArray(e.times, Array),
                values: Ze.convertArray(e.values, Array)
            };
            let i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return n.type = e.ValueTypeName, n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new Ih(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new Na(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new Ph(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch(e){
            case zs:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case Us:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case yo:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            let n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
            if (this.createInterpolant === void 0) if (e !== this.DefaultInterpolation) this.setInterpolation(this.DefaultInterpolation);
            else throw new Error(n);
            return console.warn("THREE.KeyframeTrack:", n), this;
        }
        return this.createInterpolant = t, this;
    }
    getInterpolation() {
        switch(this.createInterpolant){
            case this.InterpolantFactoryMethodDiscrete:
                return zs;
            case this.InterpolantFactoryMethodLinear:
                return Us;
            case this.InterpolantFactoryMethodSmooth:
                return yo;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            let t = this.times;
            for(let n = 0, i = t.length; n !== i; ++n)t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        let n = this.times, i = n.length, r = 0, o = i - 1;
        for(; r !== i && n[r] < e;)++r;
        for(; o !== -1 && n[o] > t;)--o;
        if (++o, r !== 0 || o !== i) {
            r >= o && (o = Math.max(o, 1), r = o - 1);
            let a = this.getValueSize();
            this.times = Ze.arraySlice(n, r, o), this.values = Ze.arraySlice(this.values, r * a, o * a);
        }
        return this;
    }
    validate() {
        let e = !0, t = this.getValueSize();
        t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
        let n = this.times, i = this.values, r = n.length;
        r === 0 && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
        let o = null;
        for(let a = 0; a !== r; a++){
            let l = n[a];
            if (typeof l == "number" && isNaN(l)) {
                console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, l), e = !1;
                break;
            }
            if (o !== null && o > l) {
                console.error("THREE.KeyframeTrack: Out of order keys.", this, a, l, o), e = !1;
                break;
            }
            o = l;
        }
        if (i !== void 0 && Ze.isTypedArray(i)) for(let a1 = 0, l1 = i.length; a1 !== l1; ++a1){
            let c = i[a1];
            if (isNaN(c)) {
                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a1, c), e = !1;
                break;
            }
        }
        return e;
    }
    optimize() {
        let e = Ze.arraySlice(this.times), t = Ze.arraySlice(this.values), n = this.getValueSize(), i = this.getInterpolation() === yo, r = e.length - 1, o = 1;
        for(let a = 1; a < r; ++a){
            let l = !1, c = e[a], h = e[a + 1];
            if (c !== h && (a !== 1 || c !== e[0])) if (i) l = !0;
            else {
                let u = a * n, d = u - n, f = u + n;
                for(let m = 0; m !== n; ++m){
                    let x = t[u + m];
                    if (x !== t[d + m] || x !== t[f + m]) {
                        l = !0;
                        break;
                    }
                }
            }
            if (l) {
                if (a !== o) {
                    e[o] = e[a];
                    let u1 = a * n, d1 = o * n;
                    for(let f1 = 0; f1 !== n; ++f1)t[d1 + f1] = t[u1 + f1];
                }
                ++o;
            }
        }
        if (r > 0) {
            e[o] = e[r];
            for(let a1 = r * n, l1 = o * n, c1 = 0; c1 !== n; ++c1)t[l1 + c1] = t[a1 + c1];
            ++o;
        }
        return o !== e.length ? (this.times = Ze.arraySlice(e, 0, o), this.values = Ze.arraySlice(t, 0, o * n)) : (this.times = e, this.values = t), this;
    }
    clone() {
        let e = Ze.arraySlice(this.times, 0), t = Ze.arraySlice(this.values, 0), n = this.constructor, i = new n(this.name, e, t);
        return i.createInterpolant = this.createInterpolant, i;
    }
};
zt.prototype.TimeBufferType = Float32Array;
zt.prototype.ValueBufferType = Float32Array;
zt.prototype.DefaultInterpolation = Us;
var Qn = class extends zt {
};
Qn.prototype.ValueTypeName = "bool";
Qn.prototype.ValueBufferType = Array;
Qn.prototype.DefaultInterpolation = zs;
Qn.prototype.InterpolantFactoryMethodLinear = void 0;
Qn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Ba = class extends zt {
};
Ba.prototype.ValueTypeName = "color";
var Ar = class extends zt {
};
Ar.prototype.ValueTypeName = "number";
var Dh = class extends cn {
    constructor(e, t, n, i){
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        let r = this.resultBuffer, o = this.sampleValues, a = this.valueSize, l = (n - t) / (i - t), c = e * a;
        for(let h = c + a; c !== h; c += 4)gt.slerpFlat(r, 0, o, c - a, o, c, l);
        return r;
    }
}, Wi = class extends zt {
    InterpolantFactoryMethodLinear(e) {
        return new Dh(this.times, this.values, this.getValueSize(), e);
    }
};
Wi.prototype.ValueTypeName = "quaternion";
Wi.prototype.DefaultInterpolation = Us;
Wi.prototype.InterpolantFactoryMethodSmooth = void 0;
var Kn = class extends zt {
};
Kn.prototype.ValueTypeName = "string";
Kn.prototype.ValueBufferType = Array;
Kn.prototype.DefaultInterpolation = zs;
Kn.prototype.InterpolantFactoryMethodLinear = void 0;
Kn.prototype.InterpolantFactoryMethodSmooth = void 0;
var Cr = class extends zt {
};
Cr.prototype.ValueTypeName = "vector";
var Lr = class {
    constructor(e, t = -1, n, i = ua){
        this.name = e, this.tracks = n, this.duration = t, this.blendMode = i, this.uuid = Et(), this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        let t = [], n = e.tracks, i = 1 / (e.fps || 1);
        for(let o = 0, a = n.length; o !== a; ++o)t.push(ay(n[o]).scale(i));
        let r = new this(e.name, e.duration, t, e.blendMode);
        return r.uuid = e.uuid, r;
    }
    static toJSON(e) {
        let t = [], n = e.tracks, i = {
            name: e.name,
            duration: e.duration,
            tracks: t,
            uuid: e.uuid,
            blendMode: e.blendMode
        };
        for(let r = 0, o = n.length; r !== o; ++r)t.push(zt.toJSON(n[r]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        let r = t.length, o = [];
        for(let a = 0; a < r; a++){
            let l = [], c = [];
            l.push((a + r - 1) % r, a, (a + 1) % r), c.push(0, 1, 0);
            let h = Ze.getKeyframeOrder(l);
            l = Ze.sortedArray(l, 1, h), c = Ze.sortedArray(c, 1, h), !i && l[0] === 0 && (l.push(r), c.push(c[0])), o.push(new Ar(".morphTargetInfluences[" + t[a].name + "]", l, c).scale(1 / n));
        }
        return new this(e, -1, o);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            let i = e;
            n = i.geometry && i.geometry.animations || i.animations;
        }
        for(let i1 = 0; i1 < n.length; i1++)if (n[i1].name === t) return n[i1];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        let i = {}, r = /^([\w-]*?)([\d]+)$/;
        for(let a = 0, l = e.length; a < l; a++){
            let c = e[a], h = c.name.match(r);
            if (h && h.length > 1) {
                let u = h[1], d = i[u];
                d || (i[u] = d = []), d.push(c);
            }
        }
        let o = [];
        for(let a1 in i)o.push(this.CreateFromMorphTargetSequence(a1, i[a1], t, n));
        return o;
    }
    static parseAnimation(e, t) {
        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
        let n = function(u, d, f, m, x) {
            if (f.length !== 0) {
                let v = [], g = [];
                Ze.flattenJSON(f, v, g, m), v.length !== 0 && x.push(new u(d, v, g));
            }
        }, i = [], r = e.name || "default", o = e.fps || 30, a = e.blendMode, l = e.length || -1, c = e.hierarchy || [];
        for(let u = 0; u < c.length; u++){
            let d = c[u].keys;
            if (!(!d || d.length === 0)) if (d[0].morphTargets) {
                let f = {}, m;
                for(m = 0; m < d.length; m++)if (d[m].morphTargets) for(let x = 0; x < d[m].morphTargets.length; x++)f[d[m].morphTargets[x]] = -1;
                for(let x1 in f){
                    let v = [], g = [];
                    for(let p = 0; p !== d[m].morphTargets.length; ++p){
                        let _ = d[m];
                        v.push(_.time), g.push(_.morphTarget === x1 ? 1 : 0);
                    }
                    i.push(new Ar(".morphTargetInfluence[" + x1 + "]", v, g));
                }
                l = f.length * (o || 1);
            } else {
                let f1 = ".bones[" + t[u].name + "]";
                n(Cr, f1 + ".position", d, "pos", i), n(Wi, f1 + ".quaternion", d, "rot", i), n(Cr, f1 + ".scale", d, "scl", i);
            }
        }
        return i.length === 0 ? null : new this(r, l, i, a);
    }
    resetDuration() {
        let e = this.tracks, t = 0;
        for(let n = 0, i = e.length; n !== i; ++n){
            let r = this.tracks[n];
            t = Math.max(t, r.times[r.times.length - 1]);
        }
        return this.duration = t, this;
    }
    trim() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for(let t = 0; t < this.tracks.length; t++)e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for(let e = 0; e < this.tracks.length; e++)this.tracks[e].optimize();
        return this;
    }
    clone() {
        let e = [];
        for(let t = 0; t < this.tracks.length; t++)e.push(this.tracks[t].clone());
        return new this.constructor(this.name, this.duration, e, this.blendMode);
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
};
function oy(s) {
    switch(s.toLowerCase()){
        case "scalar":
        case "double":
        case "float":
        case "number":
        case "integer":
            return Ar;
        case "vector":
        case "vector2":
        case "vector3":
        case "vector4":
            return Cr;
        case "color":
            return Ba;
        case "quaternion":
            return Wi;
        case "bool":
        case "boolean":
            return Qn;
        case "string":
            return Kn;
    }
    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + s);
}
function ay(s) {
    if (s.type === void 0) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    let e = oy(s.type);
    if (s.times === void 0) {
        let t = [], n = [];
        Ze.flattenJSON(s.keys, t, n, "value"), s.times = t, s.values = n;
    }
    return e.parse !== void 0 ? e.parse(s) : new e(s.name, s.times, s.values, s.interpolation);
}
var Ni = {
    enabled: !1,
    files: {},
    add: function(s, e) {
        this.enabled !== !1 && (this.files[s] = e);
    },
    get: function(s) {
        if (this.enabled !== !1) return this.files[s];
    },
    remove: function(s) {
        delete this.files[s];
    },
    clear: function() {
        this.files = {};
    }
}, za = class {
    constructor(e, t, n){
        let i = this, r = !1, o = 0, a = 0, l, c = [];
        this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(h) {
            a++, r === !1 && i.onStart !== void 0 && i.onStart(h, o, a), r = !0;
        }, this.itemEnd = function(h) {
            o++, i.onProgress !== void 0 && i.onProgress(h, o, a), o === a && (r = !1, i.onLoad !== void 0 && i.onLoad());
        }, this.itemError = function(h) {
            i.onError !== void 0 && i.onError(h);
        }, this.resolveURL = function(h) {
            return l ? l(h) : h;
        }, this.setURLModifier = function(h) {
            return l = h, this;
        }, this.addHandler = function(h, u) {
            return c.push(h, u), this;
        }, this.removeHandler = function(h) {
            let u = c.indexOf(h);
            return u !== -1 && c.splice(u, 2), this;
        }, this.getHandler = function(h) {
            for(let u = 0, d = c.length; u < d; u += 2){
                let f = c[u], m = c[u + 1];
                if (f.global && (f.lastIndex = 0), f.test(h)) return m;
            }
            return null;
        };
    }
}, ly = new za, bt = class {
    constructor(e){
        this.manager = e !== void 0 ? e : ly, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {};
    }
    load() {}
    loadAsync(e, t) {
        let n = this;
        return new Promise(function(i, r) {
            n.load(e, i, t, r);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return this.crossOrigin = e, this;
    }
    setWithCredentials(e) {
        return this.withCredentials = e, this;
    }
    setPath(e) {
        return this.path = e, this;
    }
    setResourcePath(e) {
        return this.resourcePath = e, this;
    }
    setRequestHeader(e) {
        return this.requestHeader = e, this;
    }
}, tn = {}, Yt = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = Ni.get(e);
        if (r !== void 0) return this.manager.itemStart(e), setTimeout(()=>{
            t && t(r), this.manager.itemEnd(e);
        }, 0), r;
        if (tn[e] !== void 0) {
            tn[e].push({
                onLoad: t,
                onProgress: n,
                onError: i
            });
            return;
        }
        tn[e] = [], tn[e].push({
            onLoad: t,
            onProgress: n,
            onError: i
        });
        let o = new Request(e, {
            headers: new Headers(this.requestHeader),
            credentials: this.withCredentials ? "include" : "same-origin"
        });
        fetch(o).then((a)=>{
            if (a.status === 200 || a.status === 0) {
                if (a.status === 0 && console.warn("THREE.FileLoader: HTTP Status 0 received."), typeof ReadableStream > "u" || a.body.getReader === void 0) return a;
                let l = tn[e], c = a.body.getReader(), h = a.headers.get("Content-Length"), u = h ? parseInt(h) : 0, d = u !== 0, f = 0, m = new ReadableStream({
                    start (x) {
                        v();
                        function v() {
                            c.read().then(({ done: g , value: p  })=>{
                                if (g) x.close();
                                else {
                                    f += p.byteLength;
                                    let _ = new ProgressEvent("progress", {
                                        lengthComputable: d,
                                        loaded: f,
                                        total: u
                                    });
                                    for(let y = 0, b = l.length; y < b; y++){
                                        let A = l[y];
                                        A.onProgress && A.onProgress(_);
                                    }
                                    x.enqueue(p), v();
                                }
                            });
                        }
                    }
                });
                return new Response(m);
            } else throw Error(`fetch for "${a.url}" responded with ${a.status}: ${a.statusText}`);
        }).then((a)=>{
            switch(this.responseType){
                case "arraybuffer":
                    return a.arrayBuffer();
                case "blob":
                    return a.blob();
                case "document":
                    return a.text().then((l)=>new DOMParser().parseFromString(l, this.mimeType));
                case "json":
                    return a.json();
                default:
                    return a.text();
            }
        }).then((a)=>{
            Ni.add(e, a);
            let l = tn[e];
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onLoad && u.onLoad(a);
            }
        }).catch((a)=>{
            let l = tn[e];
            if (l === void 0) throw this.manager.itemError(e), a;
            delete tn[e];
            for(let c = 0, h = l.length; c < h; c++){
                let u = l[c];
                u.onError && u.onError(a);
            }
            this.manager.itemError(e);
        }).finally(()=>{
            this.manager.itemEnd(e);
        }), this.manager.itemStart(e);
    }
    setResponseType(e) {
        return this.responseType = e, this;
    }
    setMimeType(e) {
        return this.mimeType = e, this;
    }
}, cy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = [];
        for(let n = 0; n < e.length; n++){
            let i = Lr.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}, hy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = [], a = new va, l = new Yt(this.manager);
        l.setPath(this.path), l.setResponseType("arraybuffer"), l.setRequestHeader(this.requestHeader), l.setWithCredentials(r.withCredentials);
        let c = 0;
        function h(u) {
            l.load(e[u], function(d) {
                let f = r.parse(d, !0);
                o[u] = {
                    width: f.width,
                    height: f.height,
                    format: f.format,
                    mipmaps: f.mipmaps
                }, c += 1, c === 6 && (f.mipmapCount === 1 && (a.minFilter = tt), a.image = o, a.format = f.format, a.needsUpdate = !0, t && t(a));
            }, n, i);
        }
        if (Array.isArray(e)) for(let u = 0, d = e.length; u < d; ++u)h(u);
        else l.load(e, function(u) {
            let d = r.parse(u, !0);
            if (d.isCubemap) {
                let f = d.mipmaps.length / d.mipmapCount;
                for(let m = 0; m < f; m++){
                    o[m] = {
                        mipmaps: []
                    };
                    for(let x = 0; x < d.mipmapCount; x++)o[m].mipmaps.push(d.mipmaps[m * d.mipmapCount + x]), o[m].format = d.format, o[m].width = d.width, o[m].height = d.height;
                }
                a.image = o;
            } else a.image.width = d.width, a.image.height = d.height, a.mipmaps = d.mipmaps;
            d.mipmapCount === 1 && (a.minFilter = tt), a.format = d.format, a.needsUpdate = !0, t && t(a);
        }, n, i);
        return a;
    }
}, Rr = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = qs("img");
        function l() {
            h(), Ni.add(e, this), t && t(this), r.manager.itemEnd(e);
        }
        function c(u) {
            h(), i && i(u), r.manager.itemError(e), r.manager.itemEnd(e);
        }
        function h() {
            a.removeEventListener("load", l, !1), a.removeEventListener("error", c, !1);
        }
        return a.addEventListener("load", l, !1), a.addEventListener("error", c, !1), e.substr(0, 5) !== "data:" && this.crossOrigin !== void 0 && (a.crossOrigin = this.crossOrigin), r.manager.itemStart(e), a.src = e, a;
    }
}, Fh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ki, o = new Rr(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        let a = 0;
        function l(c) {
            o.load(e[c], function(h) {
                r.images[c] = h, a++, a === 6 && (r.needsUpdate = !0, t && t(r));
            }, void 0, i);
        }
        for(let c = 0; c < e.length; ++c)l(c);
        return r;
    }
}, Nh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new qn, a = new Yt(this.manager);
        return a.setResponseType("arraybuffer"), a.setRequestHeader(this.requestHeader), a.setPath(this.path), a.setWithCredentials(r.withCredentials), a.load(e, function(l) {
            let c = r.parse(l);
            !c || (c.image !== void 0 ? o.image = c.image : c.data !== void 0 && (o.image.width = c.width, o.image.height = c.height, o.image.data = c.data), o.wrapS = c.wrapS !== void 0 ? c.wrapS : vt, o.wrapT = c.wrapT !== void 0 ? c.wrapT : vt, o.magFilter = c.magFilter !== void 0 ? c.magFilter : tt, o.minFilter = c.minFilter !== void 0 ? c.minFilter : tt, o.anisotropy = c.anisotropy !== void 0 ? c.anisotropy : 1, c.encoding !== void 0 && (o.encoding = c.encoding), c.flipY !== void 0 && (o.flipY = c.flipY), c.format !== void 0 && (o.format = c.format), c.type !== void 0 && (o.type = c.type), c.mipmaps !== void 0 && (o.mipmaps = c.mipmaps, o.minFilter = Ui), c.mipmapCount === 1 && (o.minFilter = tt), c.generateMipmaps !== void 0 && (o.generateMipmaps = c.generateMipmaps), o.needsUpdate = !0, t && t(o, c));
        }, n, i), o;
    }
}, Bh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = new ot, o = new Rr(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, function(a) {
            r.image = a, r.needsUpdate = !0, t !== void 0 && t(r);
        }, n, i), r;
    }
}, Bt = class extends Ne {
    constructor(e, t = 1){
        super();
        this.type = "Light", this.color = new ae(e), this.intensity = t;
    }
    dispose() {}
    copy(e) {
        return super.copy(e), this.color.copy(e.color), this.intensity = e.intensity, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, this.groundColor !== void 0 && (t.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (t.object.distance = this.distance), this.angle !== void 0 && (t.object.angle = this.angle), this.decay !== void 0 && (t.object.decay = this.decay), this.penumbra !== void 0 && (t.object.penumbra = this.penumbra), this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()), t;
    }
};
Bt.prototype.isLight = !0;
var Ua = class extends Bt {
    constructor(e, t, n){
        super(e, n);
        this.type = "HemisphereLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.groundColor = new ae(t);
    }
    copy(e) {
        return Bt.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this;
    }
};
Ua.prototype.isHemisphereLight = !0;
var _c = new pe, Mc = new M, bc = new M, mo = class {
    constructor(e){
        this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new X(512, 512), this.map = null, this.mapPass = null, this.matrix = new pe, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new Dr, this._frameExtents = new X(1, 1), this._viewportCount = 1, this._viewports = [
            new Ve(0, 0, 1, 1)
        ];
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        let t = this.camera, n = this.matrix;
        Mc.setFromMatrixPosition(e.matrixWorld), t.position.copy(Mc), bc.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(bc), t.updateMatrixWorld(), _c.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(_c), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = {};
        return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e;
    }
}, Oa = class extends mo {
    constructor(){
        super(new ut(50, 1, .5, 500));
        this.focus = 1;
    }
    updateMatrices(e) {
        let t = this.camera, n = dr * 2 * e.angle * this.focus, i = this.mapSize.width / this.mapSize.height, r = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || r !== t.far) && (t.fov = n, t.aspect = i, t.far = r, t.updateProjectionMatrix()), super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), this.focus = e.focus, this;
    }
};
Oa.prototype.isSpotLightShadow = !0;
var Ha = class extends Bt {
    constructor(e, t, n = 0, i = Math.PI / 3, r = 0, o = 1){
        super(e, t);
        this.type = "SpotLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.distance = n, this.angle = i, this.penumbra = r, this.decay = o, this.shadow = new Oa;
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Ha.prototype.isSpotLight = !0;
var wc = new pe, nr = new M, jo = new M, ka = class extends mo {
    constructor(){
        super(new ut(90, 1, .5, 500));
        this._frameExtents = new X(4, 2), this._viewportCount = 6, this._viewports = [
            new Ve(2, 1, 1, 1),
            new Ve(0, 1, 1, 1),
            new Ve(3, 1, 1, 1),
            new Ve(1, 1, 1, 1),
            new Ve(3, 0, 1, 1),
            new Ve(1, 0, 1, 1)
        ], this._cubeDirections = [
            new M(1, 0, 0),
            new M(-1, 0, 0),
            new M(0, 0, 1),
            new M(0, 0, -1),
            new M(0, 1, 0),
            new M(0, -1, 0)
        ], this._cubeUps = [
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 1, 0),
            new M(0, 0, 1),
            new M(0, 0, -1)
        ];
    }
    updateMatrices(e, t = 0) {
        let n = this.camera, i = this.matrix, r = e.distance || n.far;
        r !== n.far && (n.far = r, n.updateProjectionMatrix()), nr.setFromMatrixPosition(e.matrixWorld), n.position.copy(nr), jo.copy(n.position), jo.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(jo), n.updateMatrixWorld(), i.makeTranslation(-nr.x, -nr.y, -nr.z), wc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(wc);
    }
};
ka.prototype.isPointLightShadow = !0;
var Ga = class extends Bt {
    constructor(e, t, n = 0, i = 1){
        super(e, t);
        this.type = "PointLight", this.distance = n, this.decay = i, this.shadow = new ka;
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this;
    }
};
Ga.prototype.isPointLight = !0;
var Va = class extends mo {
    constructor(){
        super(new Fr(-5, 5, 5, -5, .5, 500));
    }
};
Va.prototype.isDirectionalLightShadow = !0;
var Wa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "DirectionalLight", this.position.copy(Ne.DefaultUp), this.updateMatrix(), this.target = new Ne, this.shadow = new Va;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return super.copy(e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
    }
};
Wa.prototype.isDirectionalLight = !0;
var qa = class extends Bt {
    constructor(e, t){
        super(e, t);
        this.type = "AmbientLight";
    }
};
qa.prototype.isAmbientLight = !0;
var Xa = class extends Bt {
    constructor(e, t, n = 10, i = 10){
        super(e, t);
        this.type = "RectAreaLight", this.width = n, this.height = i;
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return super.copy(e), this.width = e.width, this.height = e.height, this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.width = this.width, t.object.height = this.height, t;
    }
};
Xa.prototype.isRectAreaLight = !0;
var Ja = class {
    constructor(){
        this.coefficients = [];
        for(let e = 0; e < 9; e++)this.coefficients.push(new M);
    }
    set(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for(let e = 0; e < 9; e++)this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.282095), t.addScaledVector(o[1], .488603 * i), t.addScaledVector(o[2], .488603 * r), t.addScaledVector(o[3], .488603 * n), t.addScaledVector(o[4], 1.092548 * (n * i)), t.addScaledVector(o[5], 1.092548 * (i * r)), t.addScaledVector(o[6], .315392 * (3 * r * r - 1)), t.addScaledVector(o[7], 1.092548 * (n * r)), t.addScaledVector(o[8], .546274 * (n * n - i * i)), t;
    }
    getIrradianceAt(e, t) {
        let n = e.x, i = e.y, r = e.z, o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.886227), t.addScaledVector(o[1], 2 * .511664 * i), t.addScaledVector(o[2], 2 * .511664 * r), t.addScaledVector(o[3], 2 * .511664 * n), t.addScaledVector(o[4], 2 * .429043 * n * i), t.addScaledVector(o[5], 2 * .429043 * i * r), t.addScaledVector(o[6], .743125 * r * r - .247708), t.addScaledVector(o[7], 2 * .429043 * n * r), t.addScaledVector(o[8], .429043 * (n * n - i * i)), t;
    }
    add(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for(let t = 0; t < 9; t++)this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for(let n = 0; n < 9; n++)this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for(let t = 0; t < 9; t++)if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        let n = this.coefficients;
        for(let i = 0; i < 9; i++)n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        let n = e.x, i = e.y, r = e.z;
        t[0] = .282095, t[1] = .488603 * i, t[2] = .488603 * r, t[3] = .488603 * n, t[4] = 1.092548 * n * i, t[5] = 1.092548 * i * r, t[6] = .315392 * (3 * r * r - 1), t[7] = 1.092548 * n * r, t[8] = .546274 * (n * n - i * i);
    }
};
Ja.prototype.isSphericalHarmonics3 = !0;
var Hr = class extends Bt {
    constructor(e = new Ja, t = 1){
        super(void 0, t);
        this.sh = e;
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.object.sh = this.sh.toArray(), t;
    }
};
Hr.prototype.isLightProbe = !0;
var zh = class extends bt {
    constructor(e){
        super(e);
        this.textures = {};
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = this.textures;
        function n(r) {
            return t[r] === void 0 && console.warn("THREE.MaterialLoader: Undefined texture", r), t[r];
        }
        let i = new sy[e.type];
        if (e.uuid !== void 0 && (i.uuid = e.uuid), e.name !== void 0 && (i.name = e.name), e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color), e.roughness !== void 0 && (i.roughness = e.roughness), e.metalness !== void 0 && (i.metalness = e.metalness), e.sheen !== void 0 && (i.sheen = e.sheen), e.sheenColor !== void 0 && (i.sheenColor = new ae().setHex(e.sheenColor)), e.sheenRoughness !== void 0 && (i.sheenRoughness = e.sheenRoughness), e.emissive !== void 0 && i.emissive !== void 0 && i.emissive.setHex(e.emissive), e.specular !== void 0 && i.specular !== void 0 && i.specular.setHex(e.specular), e.specularIntensity !== void 0 && (i.specularIntensity = e.specularIntensity), e.specularColor !== void 0 && i.specularColor !== void 0 && i.specularColor.setHex(e.specularColor), e.shininess !== void 0 && (i.shininess = e.shininess), e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat), e.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = e.clearcoatRoughness), e.transmission !== void 0 && (i.transmission = e.transmission), e.thickness !== void 0 && (i.thickness = e.thickness), e.attenuationDistance !== void 0 && (i.attenuationDistance = e.attenuationDistance), e.attenuationColor !== void 0 && i.attenuationColor !== void 0 && i.attenuationColor.setHex(e.attenuationColor), e.fog !== void 0 && (i.fog = e.fog), e.flatShading !== void 0 && (i.flatShading = e.flatShading), e.blending !== void 0 && (i.blending = e.blending), e.combine !== void 0 && (i.combine = e.combine), e.side !== void 0 && (i.side = e.side), e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide), e.opacity !== void 0 && (i.opacity = e.opacity), e.format !== void 0 && (i.format = e.format), e.transparent !== void 0 && (i.transparent = e.transparent), e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest), e.depthTest !== void 0 && (i.depthTest = e.depthTest), e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite), e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite), e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite), e.stencilWriteMask !== void 0 && (i.stencilWriteMask = e.stencilWriteMask), e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc), e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef), e.stencilFuncMask !== void 0 && (i.stencilFuncMask = e.stencilFuncMask), e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail), e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail), e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass), e.wireframe !== void 0 && (i.wireframe = e.wireframe), e.wireframeLinewidth !== void 0 && (i.wireframeLinewidth = e.wireframeLinewidth), e.wireframeLinecap !== void 0 && (i.wireframeLinecap = e.wireframeLinecap), e.wireframeLinejoin !== void 0 && (i.wireframeLinejoin = e.wireframeLinejoin), e.rotation !== void 0 && (i.rotation = e.rotation), e.linewidth !== 1 && (i.linewidth = e.linewidth), e.dashSize !== void 0 && (i.dashSize = e.dashSize), e.gapSize !== void 0 && (i.gapSize = e.gapSize), e.scale !== void 0 && (i.scale = e.scale), e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset), e.polygonOffsetFactor !== void 0 && (i.polygonOffsetFactor = e.polygonOffsetFactor), e.polygonOffsetUnits !== void 0 && (i.polygonOffsetUnits = e.polygonOffsetUnits), e.dithering !== void 0 && (i.dithering = e.dithering), e.alphaToCoverage !== void 0 && (i.alphaToCoverage = e.alphaToCoverage), e.premultipliedAlpha !== void 0 && (i.premultipliedAlpha = e.premultipliedAlpha), e.visible !== void 0 && (i.visible = e.visible), e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped), e.userData !== void 0 && (i.userData = e.userData), e.vertexColors !== void 0 && (typeof e.vertexColors == "number" ? i.vertexColors = e.vertexColors > 0 : i.vertexColors = e.vertexColors), e.uniforms !== void 0) for(let r in e.uniforms){
            let o = e.uniforms[r];
            switch(i.uniforms[r] = {}, o.type){
                case "t":
                    i.uniforms[r].value = n(o.value);
                    break;
                case "c":
                    i.uniforms[r].value = new ae().setHex(o.value);
                    break;
                case "v2":
                    i.uniforms[r].value = new X().fromArray(o.value);
                    break;
                case "v3":
                    i.uniforms[r].value = new M().fromArray(o.value);
                    break;
                case "v4":
                    i.uniforms[r].value = new Ve().fromArray(o.value);
                    break;
                case "m3":
                    i.uniforms[r].value = new lt().fromArray(o.value);
                    break;
                case "m4":
                    i.uniforms[r].value = new pe().fromArray(o.value);
                    break;
                default:
                    i.uniforms[r].value = o.value;
            }
        }
        if (e.defines !== void 0 && (i.defines = e.defines), e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader), e.fragmentShader !== void 0 && (i.fragmentShader = e.fragmentShader), e.extensions !== void 0) for(let r1 in e.extensions)i.extensions[r1] = e.extensions[r1];
        if (e.shading !== void 0 && (i.flatShading = e.shading === 1), e.size !== void 0 && (i.size = e.size), e.sizeAttenuation !== void 0 && (i.sizeAttenuation = e.sizeAttenuation), e.map !== void 0 && (i.map = n(e.map)), e.matcap !== void 0 && (i.matcap = n(e.matcap)), e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)), e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)), e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale), e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)), e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType), e.normalScale !== void 0) {
            let r2 = e.normalScale;
            Array.isArray(r2) === !1 && (r2 = [
                r2,
                r2
            ]), i.normalScale = new X().fromArray(r2);
        }
        return e.displacementMap !== void 0 && (i.displacementMap = n(e.displacementMap)), e.displacementScale !== void 0 && (i.displacementScale = e.displacementScale), e.displacementBias !== void 0 && (i.displacementBias = e.displacementBias), e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)), e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)), e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)), e.emissiveIntensity !== void 0 && (i.emissiveIntensity = e.emissiveIntensity), e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)), e.specularIntensityMap !== void 0 && (i.specularIntensityMap = n(e.specularIntensityMap)), e.specularColorMap !== void 0 && (i.specularColorMap = n(e.specularColorMap)), e.envMap !== void 0 && (i.envMap = n(e.envMap)), e.envMapIntensity !== void 0 && (i.envMapIntensity = e.envMapIntensity), e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity), e.refractionRatio !== void 0 && (i.refractionRatio = e.refractionRatio), e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)), e.lightMapIntensity !== void 0 && (i.lightMapIntensity = e.lightMapIntensity), e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)), e.aoMapIntensity !== void 0 && (i.aoMapIntensity = e.aoMapIntensity), e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)), e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)), e.clearcoatRoughnessMap !== void 0 && (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), e.clearcoatNormalMap !== void 0 && (i.clearcoatNormalMap = n(e.clearcoatNormalMap)), e.clearcoatNormalScale !== void 0 && (i.clearcoatNormalScale = new X().fromArray(e.clearcoatNormalScale)), e.transmissionMap !== void 0 && (i.transmissionMap = n(e.transmissionMap)), e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)), e.sheenColorMap !== void 0 && (i.sheenColorMap = n(e.sheenColorMap)), e.sheenRoughnessMap !== void 0 && (i.sheenRoughnessMap = n(e.sheenRoughnessMap)), i;
    }
    setTextures(e) {
        return this.textures = e, this;
    }
}, Gs = class {
    static decodeText(e) {
        if (typeof TextDecoder < "u") return new TextDecoder().decode(e);
        let t = "";
        for(let n = 0, i = e.length; n < i; n++)t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch  {
            return t;
        }
    }
    static extractUrlBase(e) {
        let t = e.lastIndexOf("/");
        return t === -1 ? "./" : e.substr(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != "string" || e === "" ? "" : (/^https?:\/\//i.test(t) && /^\//.test(e) && (t = t.replace(/(^https?:\/\/[^\/]+).*/i, "$1")), /^(https?:)?\/\//i.test(e) || /^data:.*,.*$/i.test(e) || /^blob:.*$/i.test(e) ? e : t + e);
    }
}, Ya = class extends _e {
    constructor(){
        super();
        this.type = "InstancedBufferGeometry", this.instanceCount = 1 / 0;
    }
    copy(e) {
        return super.copy(e), this.instanceCount = e.instanceCount, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        let e = super.toJSON(this);
        return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e;
    }
};
Ya.prototype.isInstancedBufferGeometry = !0;
var Uh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(r.manager);
        o.setPath(r.path), o.setRequestHeader(r.requestHeader), o.setWithCredentials(r.withCredentials), o.load(e, function(a) {
            try {
                t(r.parse(JSON.parse(a)));
            } catch (l) {
                i ? i(l) : console.error(l), r.manager.itemError(e);
            }
        }, n, i);
    }
    parse(e) {
        let t = {}, n = {};
        function i(f, m) {
            if (t[m] !== void 0) return t[m];
            let v = f.interleavedBuffers[m], g = r(f, v.buffer), p = wi(v.type, g), _ = new $n(p, v.stride);
            return _.uuid = v.uuid, t[m] = _, _;
        }
        function r(f, m) {
            if (n[m] !== void 0) return n[m];
            let v = f.arrayBuffers[m], g = new Uint32Array(v).buffer;
            return n[m] = g, g;
        }
        let o = e.isInstancedBufferGeometry ? new Ya : new _e, a = e.data.index;
        if (a !== void 0) {
            let f = wi(a.type, a.array);
            o.setIndex(new Ue(f, 1));
        }
        let l = e.data.attributes;
        for(let f1 in l){
            let m = l[f1], x;
            if (m.isInterleavedBufferAttribute) {
                let v = i(e.data, m.data);
                x = new Sn(v, m.itemSize, m.offset, m.normalized);
            } else {
                let v1 = wi(m.type, m.array), g = m.isInstancedBufferAttribute ? Xn : Ue;
                x = new g(v1, m.itemSize, m.normalized);
            }
            m.name !== void 0 && (x.name = m.name), m.usage !== void 0 && x.setUsage(m.usage), m.updateRange !== void 0 && (x.updateRange.offset = m.updateRange.offset, x.updateRange.count = m.updateRange.count), o.setAttribute(f1, x);
        }
        let c = e.data.morphAttributes;
        if (c) for(let f2 in c){
            let m1 = c[f2], x1 = [];
            for(let v2 = 0, g1 = m1.length; v2 < g1; v2++){
                let p = m1[v2], _;
                if (p.isInterleavedBufferAttribute) {
                    let y = i(e.data, p.data);
                    _ = new Sn(y, p.itemSize, p.offset, p.normalized);
                } else {
                    let y1 = wi(p.type, p.array);
                    _ = new Ue(y1, p.itemSize, p.normalized);
                }
                p.name !== void 0 && (_.name = p.name), x1.push(_);
            }
            o.morphAttributes[f2] = x1;
        }
        e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
        let u = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (u !== void 0) for(let f3 = 0, m2 = u.length; f3 !== m2; ++f3){
            let x2 = u[f3];
            o.addGroup(x2.start, x2.count, x2.materialIndex);
        }
        let d = e.data.boundingSphere;
        if (d !== void 0) {
            let f4 = new M;
            d.center !== void 0 && f4.fromArray(d.center), o.boundingSphere = new An(f4, d.radius);
        }
        return e.name && (o.name = e.name), e.userData && (o.userData = e.userData), o;
    }
}, uy = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        let a = new Yt(this.manager);
        a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, function(l) {
            let c = null;
            try {
                c = JSON.parse(l);
            } catch (u) {
                i !== void 0 && i(u), console.error("THREE:ObjectLoader: Can't parse " + e + ".", u.message);
                return;
            }
            let h = c.metadata;
            if (h === void 0 || h.type === void 0 || h.type.toLowerCase() === "geometry") {
                console.error("THREE.ObjectLoader: Can't load " + e);
                return;
            }
            r.parse(c, t);
        }, n, i);
    }
    async loadAsync(e, t) {
        let n = this, i = this.path === "" ? Gs.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        let r = new Yt(this.manager);
        r.setPath(this.path), r.setRequestHeader(this.requestHeader), r.setWithCredentials(this.withCredentials);
        let o = await r.loadAsync(e, t), a = JSON.parse(o), l = a.metadata;
        if (l === void 0 || l.type === void 0 || l.type.toLowerCase() === "geometry") throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(a);
    }
    parse(e, t) {
        let n = this.parseAnimations(e.animations), i = this.parseShapes(e.shapes), r = this.parseGeometries(e.geometries, i), o = this.parseImages(e.images, function() {
            t !== void 0 && t(c);
        }), a = this.parseTextures(e.textures, o), l = this.parseMaterials(e.materials, a), c = this.parseObject(e.object, r, l, a, n), h = this.parseSkeletons(e.skeletons, c);
        if (this.bindSkeletons(c, h), t !== void 0) {
            let u = !1;
            for(let d in o)if (o[d] instanceof HTMLImageElement) {
                u = !0;
                break;
            }
            u === !1 && t(c);
        }
        return c;
    }
    async parseAsync(e) {
        let t = this.parseAnimations(e.animations), n = this.parseShapes(e.shapes), i = this.parseGeometries(e.geometries, n), r = await this.parseImagesAsync(e.images), o = this.parseTextures(e.textures, r), a = this.parseMaterials(e.materials, o), l = this.parseObject(e.object, i, a, o, t), c = this.parseSkeletons(e.skeletons, l);
        return this.bindSkeletons(l, c), l;
    }
    parseShapes(e) {
        let t = {};
        if (e !== void 0) for(let n = 0, i = e.length; n < i; n++){
            let r = new Xt().fromJSON(e[n]);
            t[r.uuid] = r;
        }
        return t;
    }
    parseSkeletons(e, t) {
        let n = {}, i = {};
        if (t.traverse(function(r) {
            r.isBone && (i[r.uuid] = r);
        }), e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = new ao().fromJSON(e[r], i);
            n[a.uuid] = a;
        }
        return n;
    }
    parseGeometries(e, t) {
        let n = {};
        if (e !== void 0) {
            let i = new Uh;
            for(let r = 0, o = e.length; r < o; r++){
                let a, l = e[r];
                switch(l.type){
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = i.parse(l);
                        break;
                    case "Geometry":
                        console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");
                        break;
                    default:
                        l.type in vc ? a = vc[l.type].fromJSON(l, t) : console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`);
                }
                a.uuid = l.uuid, l.name !== void 0 && (a.name = l.name), a.isBufferGeometry === !0 && l.userData !== void 0 && (a.userData = l.userData), n[l.uuid] = a;
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        let n = {}, i = {};
        if (e !== void 0) {
            let r = new zh;
            r.setTextures(t);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o];
                if (l.type === "MultiMaterial") {
                    let c = [];
                    for(let h = 0; h < l.materials.length; h++){
                        let u = l.materials[h];
                        n[u.uuid] === void 0 && (n[u.uuid] = r.parse(u)), c.push(n[u.uuid]);
                    }
                    i[l.uuid] = c;
                } else n[l.uuid] === void 0 && (n[l.uuid] = r.parse(l)), i[l.uuid] = n[l.uuid];
            }
        }
        return i;
    }
    parseAnimations(e) {
        let t = {};
        if (e !== void 0) for(let n = 0; n < e.length; n++){
            let i = e[n], r = Lr.parse(i);
            t[r.uuid] = r;
        }
        return t;
    }
    parseImages(e, t) {
        let n = this, i = {}, r;
        function o(l) {
            return n.manager.itemStart(l), r.load(l, function() {
                n.manager.itemEnd(l);
            }, void 0, function() {
                n.manager.itemError(l), n.manager.itemEnd(l);
            });
        }
        function a(l) {
            if (typeof l == "string") {
                let c = l, h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c) ? c : n.resourcePath + c;
                return o(h);
            } else return l.data ? {
                data: wi(l.type, l.data),
                width: l.width,
                height: l.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            let l = new za(t);
            r = new Rr(l), r.setCrossOrigin(this.crossOrigin);
            for(let c = 0, h = e.length; c < h; c++){
                let u = e[c], d = u.url;
                if (Array.isArray(d)) {
                    i[u.uuid] = [];
                    for(let f = 0, m = d.length; f < m; f++){
                        let x = d[f], v = a(x);
                        v !== null && (v instanceof HTMLImageElement ? i[u.uuid].push(v) : i[u.uuid].push(new qn(v.data, v.width, v.height)));
                    }
                } else {
                    let f1 = a(u.url);
                    f1 !== null && (i[u.uuid] = f1);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        let t = this, n = {}, i;
        async function r(o) {
            if (typeof o == "string") {
                let a = o, l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a) ? a : t.resourcePath + a;
                return await i.loadAsync(l);
            } else return o.data ? {
                data: wi(o.type, o.data),
                width: o.width,
                height: o.height
            } : null;
        }
        if (e !== void 0 && e.length > 0) {
            i = new Rr(this.manager), i.setCrossOrigin(this.crossOrigin);
            for(let o = 0, a = e.length; o < a; o++){
                let l = e[o], c = l.url;
                if (Array.isArray(c)) {
                    n[l.uuid] = [];
                    for(let h = 0, u = c.length; h < u; h++){
                        let d = c[h], f = await r(d);
                        f !== null && (f instanceof HTMLImageElement ? n[l.uuid].push(f) : n[l.uuid].push(new qn(f.data, f.width, f.height)));
                    }
                } else {
                    let h1 = await r(l.url);
                    h1 !== null && (n[l.uuid] = h1);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(r, o) {
            return typeof r == "number" ? r : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", r), o[r]);
        }
        let i = {};
        if (e !== void 0) for(let r = 0, o = e.length; r < o; r++){
            let a = e[r];
            a.image === void 0 && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), t[a.image] === void 0 && console.warn("THREE.ObjectLoader: Undefined image", a.image);
            let l, c = t[a.image];
            Array.isArray(c) ? (l = new ki(c), c.length === 6 && (l.needsUpdate = !0)) : (c && c.data ? l = new qn(c.data, c.width, c.height) : l = new ot(c), c && (l.needsUpdate = !0)), l.uuid = a.uuid, a.name !== void 0 && (l.name = a.name), a.mapping !== void 0 && (l.mapping = n(a.mapping, dy)), a.offset !== void 0 && l.offset.fromArray(a.offset), a.repeat !== void 0 && l.repeat.fromArray(a.repeat), a.center !== void 0 && l.center.fromArray(a.center), a.rotation !== void 0 && (l.rotation = a.rotation), a.wrap !== void 0 && (l.wrapS = n(a.wrap[0], Sc), l.wrapT = n(a.wrap[1], Sc)), a.format !== void 0 && (l.format = a.format), a.type !== void 0 && (l.type = a.type), a.encoding !== void 0 && (l.encoding = a.encoding), a.minFilter !== void 0 && (l.minFilter = n(a.minFilter, Tc)), a.magFilter !== void 0 && (l.magFilter = n(a.magFilter, Tc)), a.anisotropy !== void 0 && (l.anisotropy = a.anisotropy), a.flipY !== void 0 && (l.flipY = a.flipY), a.premultiplyAlpha !== void 0 && (l.premultiplyAlpha = a.premultiplyAlpha), a.unpackAlignment !== void 0 && (l.unpackAlignment = a.unpackAlignment), a.userData !== void 0 && (l.userData = a.userData), i[a.uuid] = l;
        }
        return i;
    }
    parseObject(e, t, n, i, r) {
        let o;
        function a(d) {
            return t[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined geometry", d), t[d];
        }
        function l(d) {
            if (d !== void 0) {
                if (Array.isArray(d)) {
                    let f = [];
                    for(let m = 0, x = d.length; m < x; m++){
                        let v = d[m];
                        n[v] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", v), f.push(n[v]);
                    }
                    return f;
                }
                return n[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined material", d), n[d];
            }
        }
        function c(d) {
            return i[d] === void 0 && console.warn("THREE.ObjectLoader: Undefined texture", d), i[d];
        }
        let h, u;
        switch(e.type){
            case "Scene":
                o = new no, e.background !== void 0 && (Number.isInteger(e.background) ? o.background = new ae(e.background) : o.background = c(e.background)), e.environment !== void 0 && (o.environment = c(e.environment)), e.fog !== void 0 && (e.fog.type === "Fog" ? o.fog = new Br(e.fog.color, e.fog.near, e.fog.far) : e.fog.type === "FogExp2" && (o.fog = new Nr(e.fog.color, e.fog.density)));
                break;
            case "PerspectiveCamera":
                o = new ut(e.fov, e.aspect, e.near, e.far), e.focus !== void 0 && (o.focus = e.focus), e.zoom !== void 0 && (o.zoom = e.zoom), e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge), e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "OrthographicCamera":
                o = new Fr(e.left, e.right, e.top, e.bottom, e.near, e.far), e.zoom !== void 0 && (o.zoom = e.zoom), e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case "AmbientLight":
                o = new qa(e.color, e.intensity);
                break;
            case "DirectionalLight":
                o = new Wa(e.color, e.intensity);
                break;
            case "PointLight":
                o = new Ga(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                o = new Xa(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                o = new Ha(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                o = new Ua(e.color, e.groundColor, e.intensity);
                break;
            case "LightProbe":
                o = new Hr().fromJSON(e);
                break;
            case "SkinnedMesh":
                h = a(e.geometry), u = l(e.material), o = new so(h, u), e.bindMode !== void 0 && (o.bindMode = e.bindMode), e.bindMatrix !== void 0 && o.bindMatrix.fromArray(e.bindMatrix), e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                break;
            case "Mesh":
                h = a(e.geometry), u = l(e.material), o = new st(h, u);
                break;
            case "InstancedMesh":
                h = a(e.geometry), u = l(e.material);
                let d = e.count, f = e.instanceMatrix, m = e.instanceColor;
                o = new xa(h, u, d), o.instanceMatrix = new Xn(new Float32Array(f.array), 16), m !== void 0 && (o.instanceColor = new Xn(new Float32Array(m.array), m.itemSize));
                break;
            case "LOD":
                o = new bh;
                break;
            case "Line":
                o = new on(a(e.geometry), l(e.material));
                break;
            case "LineLoop":
                o = new ya(a(e.geometry), l(e.material));
                break;
            case "LineSegments":
                o = new wt(a(e.geometry), l(e.material));
                break;
            case "PointCloud":
            case "Points":
                o = new zr(a(e.geometry), l(e.material));
                break;
            case "Sprite":
                o = new ro(l(e.material));
                break;
            case "Group":
                o = new Hn;
                break;
            case "Bone":
                o = new oo;
                break;
            default:
                o = new Ne;
        }
        if (o.uuid = e.uuid, e.name !== void 0 && (o.name = e.name), e.matrix !== void 0 ? (o.matrix.fromArray(e.matrix), e.matrixAutoUpdate !== void 0 && (o.matrixAutoUpdate = e.matrixAutoUpdate), o.matrixAutoUpdate && o.matrix.decompose(o.position, o.quaternion, o.scale)) : (e.position !== void 0 && o.position.fromArray(e.position), e.rotation !== void 0 && o.rotation.fromArray(e.rotation), e.quaternion !== void 0 && o.quaternion.fromArray(e.quaternion), e.scale !== void 0 && o.scale.fromArray(e.scale)), e.castShadow !== void 0 && (o.castShadow = e.castShadow), e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow), e.shadow && (e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias), e.shadow.normalBias !== void 0 && (o.shadow.normalBias = e.shadow.normalBias), e.shadow.radius !== void 0 && (o.shadow.radius = e.shadow.radius), e.shadow.mapSize !== void 0 && o.shadow.mapSize.fromArray(e.shadow.mapSize), e.shadow.camera !== void 0 && (o.shadow.camera = this.parseObject(e.shadow.camera))), e.visible !== void 0 && (o.visible = e.visible), e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled), e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder), e.userData !== void 0 && (o.userData = e.userData), e.layers !== void 0 && (o.layers.mask = e.layers), e.children !== void 0) {
            let d1 = e.children;
            for(let f1 = 0; f1 < d1.length; f1++)o.add(this.parseObject(d1[f1], t, n, i, r));
        }
        if (e.animations !== void 0) {
            let d2 = e.animations;
            for(let f2 = 0; f2 < d2.length; f2++){
                let m1 = d2[f2];
                o.animations.push(r[m1]);
            }
        }
        if (e.type === "LOD") {
            e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
            let d3 = e.levels;
            for(let f3 = 0; f3 < d3.length; f3++){
                let m2 = d3[f3], x = o.getObjectByProperty("uuid", m2.object);
                x !== void 0 && o.addLevel(x, m2.distance);
            }
        }
        return o;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 && e.traverse(function(n) {
            if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                let i = t[n.skeleton];
                i === void 0 ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", n.skeleton) : n.bind(i, n.bindMatrix);
            }
        });
    }
    setTexturePath(e) {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e);
    }
}, dy = {
    UVMapping: ha,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws
}, Sc = {
    RepeatWrapping: Ns,
    ClampToEdgeWrapping: vt,
    MirroredRepeatWrapping: Bs
}, Tc = {
    NearestFilter: rt,
    NearestMipmapNearestFilter: ta,
    NearestMipmapLinearFilter: na,
    LinearFilter: tt,
    LinearMipmapNearestFilter: Wc,
    LinearMipmapLinearFilter: Ui
}, Oh = class extends bt {
    constructor(e){
        super(e);
        typeof createImageBitmap > "u" && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), typeof fetch > "u" && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), this.options = {
            premultiplyAlpha: "none"
        };
    }
    setOptions(e) {
        return this.options = e, this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ""), this.path !== void 0 && (e = this.path + e), e = this.manager.resolveURL(e);
        let r = this, o = Ni.get(e);
        if (o !== void 0) return r.manager.itemStart(e), setTimeout(function() {
            t && t(o), r.manager.itemEnd(e);
        }, 0), o;
        let a = {};
        a.credentials = this.crossOrigin === "anonymous" ? "same-origin" : "include", a.headers = this.requestHeader, fetch(e, a).then(function(l) {
            return l.blob();
        }).then(function(l) {
            return createImageBitmap(l, Object.assign(r.options, {
                colorSpaceConversion: "none"
            }));
        }).then(function(l) {
            Ni.add(e, l), t && t(l), r.manager.itemEnd(e);
        }).catch(function(l) {
            i && i(l), r.manager.itemError(e), r.manager.itemEnd(e);
        }), r.manager.itemStart(e);
    }
};
Oh.prototype.isImageBitmapLoader = !0;
var Ss, Hh = {
    getContext: function() {
        return Ss === void 0 && (Ss = new (window.AudioContext || window.webkitAudioContext)), Ss;
    },
    setContext: function(s) {
        Ss = s;
    }
}, kh = class extends bt {
    constructor(e){
        super(e);
    }
    load(e, t, n, i) {
        let r = this, o = new Yt(this.manager);
        o.setResponseType("arraybuffer"), o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, function(a) {
            try {
                let l = a.slice(0);
                Hh.getContext().decodeAudioData(l, function(h) {
                    t(h);
                });
            } catch (l1) {
                i ? i(l1) : console.error(l1), r.manager.itemError(e);
            }
        }, n, i);
    }
}, Gh = class extends Hr {
    constructor(e, t, n = 1){
        super(void 0, n);
        let i = new ae().set(e), r = new ae().set(t), o = new M(i.r, i.g, i.b), a = new M(r.r, r.g, r.b), l = Math.sqrt(Math.PI), c = l * Math.sqrt(.75);
        this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c);
    }
};
Gh.prototype.isHemisphereLightProbe = !0;
var Vh = class extends Hr {
    constructor(e, t = 1){
        super(void 0, t);
        let n = new ae().set(e);
        this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI));
    }
};
Vh.prototype.isAmbientLightProbe = !0;
var Ec = new pe, Ac = new pe, Fn = new pe, fy = class {
    constructor(){
        this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new ut, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new ut, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
            focus: null,
            fov: null,
            aspect: null,
            near: null,
            far: null,
            zoom: null,
            eyeSep: null
        };
    }
    update(e) {
        let t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep, Fn.copy(e.projectionMatrix);
            let i = t.eyeSep / 2, r = i * t.near / t.focus, o = t.near * Math.tan(Wn * t.fov * .5) / t.zoom, a, l;
            Ac.elements[12] = -i, Ec.elements[12] = i, a = -o * t.aspect + r, l = o * t.aspect + r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraL.projectionMatrix.copy(Fn), a = -o * t.aspect - r, l = o * t.aspect - r, Fn.elements[0] = 2 * t.near / (l - a), Fn.elements[8] = (l + a) / (l - a), this.cameraR.projectionMatrix.copy(Fn);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Ac), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Ec);
    }
}, Wh = class {
    constructor(e = !0){
        this.autoStart = e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1;
    }
    start() {
        this.startTime = Cc(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0;
    }
    stop() {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1;
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            let t = Cc();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e;
        }
        return e;
    }
};
function Cc() {
    return (typeof performance > "u" ? Date : performance).now();
}
var Nn = new M, Lc = new gt, py = new M, Bn = new M, my = class extends Ne {
    constructor(){
        super();
        this.type = "AudioListener", this.context = Hh.getContext(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Wh;
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return this.filter !== null && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this;
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return this.filter !== null ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this;
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        let t = this.context.listener, n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Nn, Lc, py), Bn.set(0, 0, -1).applyQuaternion(Lc), t.positionX) {
            let i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Nn.x, i), t.positionY.linearRampToValueAtTime(Nn.y, i), t.positionZ.linearRampToValueAtTime(Nn.z, i), t.forwardX.linearRampToValueAtTime(Bn.x, i), t.forwardY.linearRampToValueAtTime(Bn.y, i), t.forwardZ.linearRampToValueAtTime(Bn.z, i), t.upX.linearRampToValueAtTime(n.x, i), t.upY.linearRampToValueAtTime(n.y, i), t.upZ.linearRampToValueAtTime(n.z, i);
        } else t.setPosition(Nn.x, Nn.y, Nn.z), t.setOrientation(Bn.x, Bn.y, Bn.z, n.x, n.y, n.z);
    }
}, Za = class extends Ne {
    constructor(e){
        super();
        this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.source = null, this.sourceType = "empty", this._startedAt = 0, this._progress = 0, this._connected = !1, this.filters = [];
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this;
    }
    setMediaElementSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this;
    }
    setMediaStreamSource(e) {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this;
    }
    setBuffer(e) {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this;
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn("THREE.Audio: Audio is already playing.");
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        this._startedAt = this.context.currentTime + e;
        let t = this.context.createBufferSource();
        return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect();
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.isPlaying === !0 && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, this.loop === !0 && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return this._connected = !0, this;
    }
    disconnect() {
        if (this.filters.length > 0) {
            this.source.disconnect(this.filters[0]);
            for(let e = 1, t = this.filters.length; e < t; e++)this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput());
        } else this.source.disconnect(this.getOutput());
        return this._connected = !1, this;
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return e || (e = []), this._connected === !0 ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this;
    }
    setDetune(e) {
        if (this.detune = e, this.source.detune !== void 0) return this.isPlaying === !0 && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this;
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [
            e
        ] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.playbackRate = e, this.isPlaying === !0 && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1 ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn("THREE.Audio: this Audio has no playback control.");
            return;
        }
        return this.loop = e, this.isPlaying === !0 && (this.source.loop = this.loop), this;
    }
    setLoopStart(e) {
        return this.loopStart = e, this;
    }
    setLoopEnd(e) {
        return this.loopEnd = e, this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this;
    }
}, zn = new M, Rc = new gt, gy = new M, Un = new M, xy = class extends Za {
    constructor(e){
        super(e);
        this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return this.panner.refDistance = e, this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return this.panner.rolloffFactor = e, this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return this.panner.distanceModel = e, this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return this.panner.maxDistance = e, this;
    }
    setDirectionalCone(e, t, n) {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this;
    }
    updateMatrixWorld(e) {
        if (super.updateMatrixWorld(e), this.hasPlaybackControl === !0 && this.isPlaying === !1) return;
        this.matrixWorld.decompose(zn, Rc, gy), Un.set(0, 0, 1).applyQuaternion(Rc);
        let t = this.panner;
        if (t.positionX) {
            let n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(zn.x, n), t.positionY.linearRampToValueAtTime(zn.y, n), t.positionZ.linearRampToValueAtTime(zn.z, n), t.orientationX.linearRampToValueAtTime(Un.x, n), t.orientationY.linearRampToValueAtTime(Un.y, n), t.orientationZ.linearRampToValueAtTime(Un.z, n);
        } else t.setPosition(zn.x, zn.y, zn.z), t.setOrientation(Un.x, Un.y, Un.z);
    }
}, qh = class {
    constructor(e, t = 2048){
        this.analyser = e.context.createAnalyser(), this.analyser.fftSize = t, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0, t = this.getFrequencyData();
        for(let n = 0; n < t.length; n++)e += t[n];
        return e / t.length;
    }
}, Xh = class {
    constructor(e, t, n){
        this.binding = e, this.valueSize = n;
        let i, r, o;
        switch(t){
            case "quaternion":
                i = this._slerp, r = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(n * 6), this._workIndex = 5;
                break;
            case "string":
            case "bool":
                i = this._select, r = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(n * 5);
                break;
            default:
                i = this._lerp, r = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(n * 5);
        }
        this._mixBufferRegion = i, this._mixBufferRegionAdditive = r, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0;
    }
    accumulate(e, t) {
        let n = this.buffer, i = this.valueSize, r = e * i + i, o = this.cumulativeWeight;
        if (o === 0) {
            for(let a = 0; a !== i; ++a)n[r + a] = n[a];
            o = t;
        } else {
            o += t;
            let a1 = t / o;
            this._mixBufferRegion(n, r, 0, a1, i);
        }
        this.cumulativeWeight = o;
    }
    accumulateAdditive(e) {
        let t = this.buffer, n = this.valueSize, i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(), this._mixBufferRegionAdditive(t, i, 0, e, n), this.cumulativeWeightAdditive += e;
    }
    apply(e) {
        let t = this.valueSize, n = this.buffer, i = e * t + t, r = this.cumulativeWeight, o = this.cumulativeWeightAdditive, a = this.binding;
        if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, r < 1) {
            let l = t * this._origIndex;
            this._mixBufferRegion(n, i, l, 1 - r, t);
        }
        o > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for(let l1 = t, c = t + t; l1 !== c; ++l1)if (n[l1] !== n[l1 + t]) {
            a.setValue(n, i);
            break;
        }
    }
    saveOriginalState() {
        let e = this.binding, t = this.buffer, n = this.valueSize, i = n * this._origIndex;
        e.getValue(t, i);
        for(let r = n, o = i; r !== o; ++r)t[r] = t[i + r % n];
        this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0;
    }
    restoreOriginalState() {
        let e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        let e = this._addIndex * this.valueSize, t = e + this.valueSize;
        for(let n = e; n < t; n++)this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1;
    }
    _setAdditiveIdentityOther() {
        let e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize;
        for(let n = 0; n < this.valueSize; n++)this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, r) {
        if (i >= .5) for(let o = 0; o !== r; ++o)e[t + o] = e[n + o];
    }
    _slerp(e, t, n, i) {
        gt.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, r) {
        let o = this._workIndex * r;
        gt.multiplyQuaternionsFlat(e, o, e, t, e, n), gt.slerpFlat(e, t, e, t, e, o, i);
    }
    _lerp(e, t, n, i, r) {
        let o = 1 - i;
        for(let a = 0; a !== r; ++a){
            let l = t + a;
            e[l] = e[l] * o + e[n + a] * i;
        }
    }
    _lerpAdditive(e, t, n, i, r) {
        for(let o = 0; o !== r; ++o){
            let a = t + o;
            e[a] = e[a] + e[n + o] * i;
        }
    }
}, $a = "\\[\\]\\.:\\/", yy = new RegExp("[" + $a + "]", "g"), ja = "[^" + $a + "]", vy = "[^" + $a.replace("\\.", "") + "]", _y = /((?:WC+[\/:])*)/.source.replace("WC", ja), My = /(WCOD+)?/.source.replace("WCOD", vy), by = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", ja), wy = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", ja), Sy = new RegExp("^" + _y + My + by + wy + "$"), Ty = [
    "material",
    "materials",
    "bones"
], Jh = class {
    constructor(e, t, n){
        let i = n || ke.parseTrackName(t);
        this._targetGroup = e, this._bindings = e.subscribe_(t, i);
    }
    getValue(e, t) {
        this.bind();
        let n = this._targetGroup.nCachedObjects_, i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        let n = this._bindings;
        for(let i = this._targetGroup.nCachedObjects_, r = n.length; i !== r; ++i)n[i].setValue(e, t);
    }
    bind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].bind();
    }
    unbind() {
        let e = this._bindings;
        for(let t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)e[t].unbind();
    }
}, ke = class {
    constructor(e, t, n){
        this.path = t, this.parsedPath = n || ke.parseTrackName(t), this.node = ke.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup ? new ke.Composite(e, t, n) : new ke(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, "_").replace(yy, "");
    }
    static parseTrackName(e) {
        let t = Sy.exec(e);
        if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
        let n = {
            nodeName: t[2],
            objectName: t[3],
            objectIndex: t[4],
            propertyName: t[5],
            propertyIndex: t[6]
        }, i = n.nodeName && n.nodeName.lastIndexOf(".");
        if (i !== void 0 && i !== -1) {
            let r = n.nodeName.substring(i + 1);
            Ty.indexOf(r) !== -1 && (n.nodeName = n.nodeName.substring(0, i), n.objectName = r);
        }
        if (n.propertyName === null || n.propertyName.length === 0) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
        return n;
    }
    static findNode(e, t) {
        if (!t || t === "" || t === "." || t === -1 || t === e.name || t === e.uuid) return e;
        if (e.skeleton) {
            let n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            let n1 = function(r) {
                for(let o = 0; o < r.length; o++){
                    let a = r[o];
                    if (a.name === t || a.uuid === t) return a;
                    let l = n1(a.children);
                    if (l) return l;
                }
                return null;
            }, i = n1(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_array(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        let n = this.resolvedProperty;
        for(let i = 0, r = n.length; i !== r; ++i)n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0;
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0;
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node, t = this.parsedPath, n = t.objectName, i = t.propertyName, r = t.propertyIndex;
        if (e || (e = ke.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, !e) {
            console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.");
            return;
        }
        if (n) {
            let c = t.objectIndex;
            switch(n){
                case "materials":
                    if (!e.material) {
                        console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                        return;
                    }
                    if (!e.material.materials) {
                        console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                        return;
                    }
                    e = e.material.materials;
                    break;
                case "bones":
                    if (!e.skeleton) {
                        console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                        return;
                    }
                    e = e.skeleton.bones;
                    for(let h = 0; h < e.length; h++)if (e[h].name === c) {
                        c = h;
                        break;
                    }
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                        return;
                    }
                    e = e[n];
            }
            if (c !== void 0) {
                if (e[c] === void 0) {
                    console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                    return;
                }
                e = e[c];
            }
        }
        let o = e[i];
        if (o === void 0) {
            let c1 = t.nodeName;
            console.error("THREE.PropertyBinding: Trying to update property for track: " + c1 + "." + i + " but it wasn't found.", e);
            return;
        }
        let a = this.Versioning.None;
        this.targetObject = e, e.needsUpdate !== void 0 ? a = this.Versioning.NeedsUpdate : e.matrixWorldNeedsUpdate !== void 0 && (a = this.Versioning.MatrixWorldNeedsUpdate);
        let l = this.BindingType.Direct;
        if (r !== void 0) {
            if (i === "morphTargetInfluences") {
                if (!e.geometry) {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                    return;
                }
                if (e.geometry.isBufferGeometry) {
                    if (!e.geometry.morphAttributes) {
                        console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                        return;
                    }
                    e.morphTargetDictionary[r] !== void 0 && (r = e.morphTargetDictionary[r]);
                } else {
                    console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                    return;
                }
            }
            l = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = r;
        } else o.fromArray !== void 0 && o.toArray !== void 0 ? (l = this.BindingType.HasFromToArray, this.resolvedProperty = o) : Array.isArray(o) ? (l = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = i;
        this.getValue = this.GetterByBindingType[l], this.setValue = this.SetterByBindingTypeAndVersioning[l][a];
    }
    unbind() {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound;
    }
};
ke.Composite = Jh;
ke.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3
};
ke.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2
};
ke.prototype.GetterByBindingType = [
    ke.prototype._getValue_direct,
    ke.prototype._getValue_array,
    ke.prototype._getValue_arrayElement,
    ke.prototype._getValue_toArray
];
ke.prototype.SetterByBindingTypeAndVersioning = [
    [
        ke.prototype._setValue_direct,
        ke.prototype._setValue_direct_setNeedsUpdate,
        ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_array,
        ke.prototype._setValue_array_setNeedsUpdate,
        ke.prototype._setValue_array_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_arrayElement,
        ke.prototype._setValue_arrayElement_setNeedsUpdate,
        ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate
    ],
    [
        ke.prototype._setValue_fromArray,
        ke.prototype._setValue_fromArray_setNeedsUpdate,
        ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate
    ]
];
var Yh = class {
    constructor(){
        this.uuid = Et(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        let e = {};
        this._indicesByUUID = e;
        for(let n = 0, i = arguments.length; n !== i; ++n)e[arguments[n].uuid] = n;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        let t = this;
        this.stats = {
            objects: {
                get total () {
                    return t._objects.length;
                },
                get inUse () {
                    return this.total - t.nCachedObjects_;
                }
            },
            get bindingsPerObject () {
                return t._bindings.length;
            }
        };
    }
    add() {
        let e = this._objects, t = this._indicesByUUID, n = this._paths, i = this._parsedPaths, r = this._bindings, o = r.length, a, l = e.length, c = this.nCachedObjects_;
        for(let h = 0, u = arguments.length; h !== u; ++h){
            let d = arguments[h], f = d.uuid, m = t[f];
            if (m === void 0) {
                m = l++, t[f] = m, e.push(d);
                for(let x = 0, v = o; x !== v; ++x)r[x].push(new ke(d, n[x], i[x]));
            } else if (m < c) {
                a = e[m];
                let x1 = --c, v1 = e[x1];
                t[v1.uuid] = m, e[m] = v1, t[f] = x1, e[x1] = d;
                for(let g = 0, p = o; g !== p; ++g){
                    let _ = r[g], y = _[x1], b = _[m];
                    _[m] = y, b === void 0 && (b = new ke(d, n[g], i[g])), _[x1] = b;
                }
            } else e[m] !== a && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.");
        }
        this.nCachedObjects_ = c;
    }
    remove() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_;
        for(let o = 0, a = arguments.length; o !== a; ++o){
            let l = arguments[o], c = l.uuid, h = t[c];
            if (h !== void 0 && h >= r) {
                let u = r++, d = e[u];
                t[d.uuid] = h, e[h] = d, t[c] = u, e[u] = l;
                for(let f = 0, m = i; f !== m; ++f){
                    let x = n[f], v = x[u], g = x[h];
                    x[h] = v, x[u] = g;
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    uncache() {
        let e = this._objects, t = this._indicesByUUID, n = this._bindings, i = n.length, r = this.nCachedObjects_, o = e.length;
        for(let a = 0, l = arguments.length; a !== l; ++a){
            let c = arguments[a], h = c.uuid, u = t[h];
            if (u !== void 0) if (delete t[h], u < r) {
                let d = --r, f = e[d], m = --o, x = e[m];
                t[f.uuid] = u, e[u] = f, t[x.uuid] = d, e[d] = x, e.pop();
                for(let v = 0, g = i; v !== g; ++v){
                    let p = n[v], _ = p[d], y = p[m];
                    p[u] = _, p[d] = y, p.pop();
                }
            } else {
                let d1 = --o, f1 = e[d1];
                d1 > 0 && (t[f1.uuid] = u), e[u] = f1, e.pop();
                for(let m1 = 0, x1 = i; m1 !== x1; ++m1){
                    let v1 = n[m1];
                    v1[u] = v1[d1], v1.pop();
                }
            }
        }
        this.nCachedObjects_ = r;
    }
    subscribe_(e, t) {
        let n = this._bindingsIndicesByPath, i = n[e], r = this._bindings;
        if (i !== void 0) return r[i];
        let o = this._paths, a = this._parsedPaths, l = this._objects, c = l.length, h = this.nCachedObjects_, u = new Array(c);
        i = r.length, n[e] = i, o.push(e), a.push(t), r.push(u);
        for(let d = h, f = l.length; d !== f; ++d){
            let m = l[d];
            u[d] = new ke(m, e, t);
        }
        return u;
    }
    unsubscribe_(e) {
        let t = this._bindingsIndicesByPath, n = t[e];
        if (n !== void 0) {
            let i = this._paths, r = this._parsedPaths, o = this._bindings, a = o.length - 1, l = o[a], c = e[a];
            t[c] = n, o[n] = l, o.pop(), r[n] = r[a], r.pop(), i[n] = i[a], i.pop();
        }
    }
};
Yh.prototype.isAnimationObjectGroup = !0;
var Zh = class {
    constructor(e, t, n = null, i = t.blendMode){
        this._mixer = e, this._clip = t, this._localRoot = n, this.blendMode = i;
        let r = t.tracks, o = r.length, a = new Array(o), l = {
            endingStart: Mi,
            endingEnd: Mi
        };
        for(let c = 0; c !== o; ++c){
            let h = r[c].createInterpolant(null);
            a[c] = h, h.settings = l;
        }
        this._interpolantSettings = l, this._interpolants = a, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = Id, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0;
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping();
    }
    isRunning() {
        return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return this._startTime = e, this;
    }
    setLoop(e, t) {
        return this.loop = e, this.repetitions = t, this;
    }
    setEffectiveWeight(e) {
        return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading();
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if (e.fadeOut(t), this.fadeIn(t), n) {
            let i = this._clip.duration, r = e._clip.duration, o = r / i, a = i / r;
            e.warp(1, o, t), this.warp(a, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        let e = this._weightInterpolant;
        return e !== null && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    setEffectiveTimeScale(e) {
        return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping();
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return this.timeScale = this._clip.duration / e, this.stopWarping();
    }
    syncWith(e) {
        return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping();
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        let i = this._mixer, r = i.time, o = this.timeScale, a = this._timeScaleInterpolant;
        a === null && (a = i._lendControlInterpolant(), this._timeScaleInterpolant = a);
        let l = a.parameterPositions, c = a.sampleValues;
        return l[0] = r, l[1] = r + n, c[0] = e / o, c[1] = t / o, this;
    }
    stopWarping() {
        let e = this._timeScaleInterpolant;
        return e !== null && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this;
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        let r = this._startTime;
        if (r !== null) {
            let l = (e - r) * n;
            if (l < 0 || n === 0) return;
            this._startTime = null, t = n * l;
        }
        t *= this._updateTimeScale(e);
        let o = this._updateTime(t), a = this._updateWeight(e);
        if (a > 0) {
            let l1 = this._interpolants, c = this._propertyBindings;
            switch(this.blendMode){
                case qc:
                    for(let h = 0, u = l1.length; h !== u; ++h)l1[h].evaluate(o), c[h].accumulateAdditive(a);
                    break;
                case ua:
                default:
                    for(let h1 = 0, u1 = l1.length; h1 !== u1; ++h1)l1[h1].evaluate(o), c[h1].accumulate(i, a);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            let n = this._weightInterpolant;
            if (n !== null) {
                let i = n.evaluate(e)[0];
                t *= i, e > n.parameterPositions[1] && (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return this._effectiveWeight = t, t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            let n = this._timeScaleInterpolant;
            n !== null && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), t === 0 ? this.paused = !0 : this.timeScale = t));
        }
        return this._effectiveTimeScale = t, t;
    }
    _updateTime(e) {
        let t = this._clip.duration, n = this.loop, i = this.time + e, r = this._loopCount, o = n === Dd;
        if (e === 0) return r === -1 ? i : o && (r & 1) === 1 ? t - i : i;
        if (n === Pd) {
            r === -1 && (this._loopCount = 0, this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e < 0 ? -1 : 1
                });
            }
        } else {
            if (r === -1 && (e >= 0 ? (r = 0, this._setEndings(!0, this.repetitions === 0, o)) : this._setEndings(this.repetitions === 0, !0, o)), i >= t || i < 0) {
                let a = Math.floor(i / t);
                i -= t * a, r += Math.abs(a);
                let l = this.repetitions - r;
                if (l <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, i = e > 0 ? t : 0, this.time = i, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: e > 0 ? 1 : -1
                });
                else {
                    if (l === 1) {
                        let c = e < 0;
                        this._setEndings(c, !c, o);
                    } else this._setEndings(!1, !1, o);
                    this._loopCount = r, this.time = i, this._mixer.dispatchEvent({
                        type: "loop",
                        action: this,
                        loopDelta: a
                    });
                }
            } else this.time = i;
            if (o && (r & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        let i = this._interpolantSettings;
        n ? (i.endingStart = bi, i.endingEnd = bi) : (e ? i.endingStart = this.zeroSlopeAtStart ? bi : Mi : i.endingStart = Os, t ? i.endingEnd = this.zeroSlopeAtEnd ? bi : Mi : i.endingEnd = Os);
    }
    _scheduleFading(e, t, n) {
        let i = this._mixer, r = i.time, o = this._weightInterpolant;
        o === null && (o = i._lendControlInterpolant(), this._weightInterpolant = o);
        let a = o.parameterPositions, l = o.sampleValues;
        return a[0] = r, l[0] = t, a[1] = r + e, l[1] = n, this;
    }
}, $h = class extends En {
    constructor(e){
        super();
        this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1;
    }
    _bindAction(e, t) {
        let n = e._localRoot || this._root, i = e._clip.tracks, r = i.length, o = e._propertyBindings, a = e._interpolants, l = n.uuid, c = this._bindingsByRootAndName, h = c[l];
        h === void 0 && (h = {}, c[l] = h);
        for(let u = 0; u !== r; ++u){
            let d = i[u], f = d.name, m = h[f];
            if (m !== void 0) o[u] = m;
            else {
                if (m = o[u], m !== void 0) {
                    m._cacheIndex === null && (++m.referenceCount, this._addInactiveBinding(m, l, f));
                    continue;
                }
                let x = t && t._propertyBindings[u].binding.parsedPath;
                m = new Xh(ke.create(n, f, x), d.ValueTypeName, d.getValueSize()), ++m.referenceCount, this._addInactiveBinding(m, l, f), o[u] = m;
            }
            a[u].resultBuffer = m.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                let n = (e._localRoot || this._root).uuid, i = e._clip.uuid, r = this._actionsByClip[i];
                this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, i, n);
            }
            let t = e._propertyBindings;
            for(let n1 = 0, i1 = t.length; n1 !== i1; ++n1){
                let r1 = t[n1];
                r1.useCount++ === 0 && (this._lendBinding(r1), r1.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            let t = e._propertyBindings;
            for(let n = 0, i = t.length; n !== i; ++n){
                let r = t[n];
                --r.useCount === 0 && (r.restoreOriginalState(), this._takeBackBinding(r));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        let e = this;
        this.stats = {
            actions: {
                get total () {
                    return e._actions.length;
                },
                get inUse () {
                    return e._nActiveActions;
                }
            },
            bindings: {
                get total () {
                    return e._bindings.length;
                },
                get inUse () {
                    return e._nActiveBindings;
                }
            },
            controlInterpolants: {
                get total () {
                    return e._controlInterpolants.length;
                },
                get inUse () {
                    return e._nActiveControlInterpolants;
                }
            }
        };
    }
    _isActiveAction(e) {
        let t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        let i = this._actions, r = this._actionsByClip, o = r[t];
        if (o === void 0) o = {
            knownActions: [
                e
            ],
            actionByRoot: {}
        }, e._byClipCacheIndex = 0, r[t] = o;
        else {
            let a = o.knownActions;
            e._byClipCacheIndex = a.length, a.push(e);
        }
        e._cacheIndex = i.length, i.push(e), o.actionByRoot[n] = e;
    }
    _removeInactiveAction(e) {
        let t = this._actions, n = t[t.length - 1], i = e._cacheIndex;
        n._cacheIndex = i, t[i] = n, t.pop(), e._cacheIndex = null;
        let r = e._clip.uuid, o = this._actionsByClip, a = o[r], l = a.knownActions, c = l[l.length - 1], h = e._byClipCacheIndex;
        c._byClipCacheIndex = h, l[h] = c, l.pop(), e._byClipCacheIndex = null;
        let u = a.actionByRoot, d = (e._localRoot || this._root).uuid;
        delete u[d], l.length === 0 && delete o[r], this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        let t = e._propertyBindings;
        for(let n = 0, i = t.length; n !== i; ++n){
            let r = t[n];
            --r.referenceCount === 0 && this._removeInactiveBinding(r);
        }
    }
    _lendAction(e) {
        let t = this._actions, n = e._cacheIndex, i = this._nActiveActions++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackAction(e) {
        let t = this._actions, n = e._cacheIndex, i = --this._nActiveActions, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _addInactiveBinding(e, t, n) {
        let i = this._bindingsByRootAndName, r = this._bindings, o = i[t];
        o === void 0 && (o = {}, i[t] = o), o[n] = e, e._cacheIndex = r.length, r.push(e);
    }
    _removeInactiveBinding(e) {
        let t = this._bindings, n = e.binding, i = n.rootNode.uuid, r = n.path, o = this._bindingsByRootAndName, a = o[i], l = t[t.length - 1], c = e._cacheIndex;
        l._cacheIndex = c, t[c] = l, t.pop(), delete a[r], Object.keys(a).length === 0 && delete o[i];
    }
    _lendBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = this._nActiveBindings++, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _takeBackBinding(e) {
        let t = this._bindings, n = e._cacheIndex, i = --this._nActiveBindings, r = t[i];
        e._cacheIndex = i, t[i] = e, r._cacheIndex = n, t[n] = r;
    }
    _lendControlInterpolant() {
        let e = this._controlInterpolants, t = this._nActiveControlInterpolants++, n = e[t];
        return n === void 0 && (n = new Na(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), n.__cacheIndex = t, e[t] = n), n;
    }
    _takeBackControlInterpolant(e) {
        let t = this._controlInterpolants, n = e.__cacheIndex, i = --this._nActiveControlInterpolants, r = t[i];
        e.__cacheIndex = i, t[i] = e, r.__cacheIndex = n, t[n] = r;
    }
    clipAction(e, t, n) {
        let i = t || this._root, r = i.uuid, o = typeof e == "string" ? Lr.findByName(i, e) : e, a = o !== null ? o.uuid : e, l = this._actionsByClip[a], c = null;
        if (n === void 0 && (o !== null ? n = o.blendMode : n = ua), l !== void 0) {
            let u = l.actionByRoot[r];
            if (u !== void 0 && u.blendMode === n) return u;
            c = l.knownActions[0], o === null && (o = c._clip);
        }
        if (o === null) return null;
        let h = new Zh(this, o, t, n);
        return this._bindAction(h, c), this._addInactiveAction(h, a, r), h;
    }
    existingAction(e, t) {
        let n = t || this._root, i = n.uuid, r = typeof e == "string" ? Lr.findByName(n, e) : e, o = r ? r.uuid : e, a = this._actionsByClip[o];
        return a !== void 0 && a.actionByRoot[i] || null;
    }
    stopAllAction() {
        let e = this._actions, t = this._nActiveActions;
        for(let n = t - 1; n >= 0; --n)e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        let t = this._actions, n = this._nActiveActions, i = this.time += e, r = Math.sign(e), o = this._accuIndex ^= 1;
        for(let c = 0; c !== n; ++c)t[c]._update(i, e, r, o);
        let a = this._bindings, l = this._nActiveBindings;
        for(let c1 = 0; c1 !== l; ++c1)a[c1].apply(o);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for(let t = 0; t < this._actions.length; t++)this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        let t = this._actions, n = e.uuid, i = this._actionsByClip, r = i[n];
        if (r !== void 0) {
            let o = r.knownActions;
            for(let a = 0, l = o.length; a !== l; ++a){
                let c = o[a];
                this._deactivateAction(c);
                let h = c._cacheIndex, u = t[t.length - 1];
                c._cacheIndex = null, c._byClipCacheIndex = null, u._cacheIndex = h, t[h] = u, t.pop(), this._removeInactiveBindingsForAction(c);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        let t = e.uuid, n = this._actionsByClip;
        for(let o in n){
            let a = n[o].actionByRoot, l = a[t];
            l !== void 0 && (this._deactivateAction(l), this._removeInactiveAction(l));
        }
        let i = this._bindingsByRootAndName, r = i[t];
        if (r !== void 0) for(let o1 in r){
            let a1 = r[o1];
            a1.restoreOriginalState(), this._removeInactiveBinding(a1);
        }
    }
    uncacheAction(e, t) {
        let n = this.existingAction(e, t);
        n !== null && (this._deactivateAction(n), this._removeInactiveAction(n));
    }
};
$h.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
var go = class {
    constructor(e){
        typeof e == "string" && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e;
    }
    clone() {
        return new go(this.value.clone === void 0 ? this.value : this.value.clone());
    }
}, jh = class extends $n {
    constructor(e, t, n = 1){
        super(e, t);
        this.meshPerAttribute = n;
    }
    copy(e) {
        return super.copy(e), this.meshPerAttribute = e.meshPerAttribute, this;
    }
    clone(e) {
        let t = super.clone(e);
        return t.meshPerAttribute = this.meshPerAttribute, t;
    }
    toJSON(e) {
        let t = super.toJSON(e);
        return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t;
    }
};
jh.prototype.isInstancedInterleavedBuffer = !0;
var Qh = class {
    constructor(e, t, n, i, r){
        this.buffer = e, this.type = t, this.itemSize = n, this.elementSize = i, this.count = r, this.version = 0;
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return this.buffer = e, this;
    }
    setType(e, t) {
        return this.type = e, this.elementSize = t, this;
    }
    setItemSize(e) {
        return this.itemSize = e, this;
    }
    setCount(e) {
        return this.count = e, this;
    }
};
Qh.prototype.isGLBufferAttribute = !0;
var Ey = class {
    constructor(e, t, n = 0, i = 1 / 0){
        this.ray = new Cn(e, t), this.near = n, this.far = i, this.camera = null, this.layers = new Js, this.params = {
            Mesh: {},
            Line: {
                threshold: 1
            },
            LOD: {},
            Points: {
                threshold: 1
            },
            Sprite: {}
        };
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type);
    }
    intersectObject(e, t = !0, n = []) {
        return la(e, this, n, t), n.sort(Pc), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for(let i = 0, r = e.length; i < r; i++)la(e[i], this, n, t);
        return n.sort(Pc), n;
    }
};
function Pc(s, e) {
    return s.distance - e.distance;
}
function la(s, e, t, n) {
    if (s.layers.test(e.layers) && s.raycast(e, t), n === !0) {
        let i = s.children;
        for(let r = 0, o = i.length; r < o; r++)la(i[r], e, t, !0);
    }
}
var Ay = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.phi = t, this.theta = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this;
    }
    makeSafe() {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + t * t + n * n), this.radius === 0 ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(mt(t / this.radius, -1, 1))), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Cy = class {
    constructor(e = 1, t = 0, n = 0){
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    set(e, t, n) {
        return this.radius = e, this.theta = t, this.y = n, this;
    }
    copy(e) {
        return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this;
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Ic = new X, qi = class {
    constructor(e = new X(1 / 0, 1 / 0), t = new X(-1 / 0, -1 / 0)){
        this.min = e, this.max = t;
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for(let t = 0, n = e.length; t < n; t++)this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        let n = Ic.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this;
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y);
    }
    containsBox(e) {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y;
    }
    getParameter(e, t) {
        return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y));
    }
    intersectsBox(e) {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y);
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return Ic.copy(e).clamp(this.min, this.max).sub(e).length();
    }
    intersect(e) {
        return this.min.max(e.min), this.max.min(e.max), this;
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
};
qi.prototype.isBox2 = !0;
var Dc = new M, Ts = new M, Kh = class {
    constructor(e = new M, t = new M){
        this.start = e, this.end = t;
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        Dc.subVectors(e, this.start), Ts.subVectors(this.end, this.start);
        let n = Ts.dot(Ts), r = Ts.dot(Dc) / n;
        return t && (r = mt(r, 0, 1)), r;
    }
    closestPointToPoint(e, t, n) {
        let i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}, Fc = new M, Ly = class extends Ne {
    constructor(e, t){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
        let n = new _e, i = [
            0,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            -1,
            0,
            1,
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            -1,
            1
        ];
        for(let o = 0, a = 1, l = 32; o < l; o++, a++){
            let c = o / l * Math.PI * 2, h = a / l * Math.PI * 2;
            i.push(Math.cos(c), Math.sin(c), 1, Math.cos(h), Math.sin(h), 1);
        }
        n.setAttribute("position", new de(i, 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.cone = new wt(n, r), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateMatrixWorld();
        let e = this.light.distance ? this.light.distance : 1e3, t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e), Fc.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Fc), this.color !== void 0 ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color);
    }
}, yn = new M, Es = new pe, Qo = new pe, eu = class extends wt {
    constructor(e){
        let t = tu(e), n = new _e, i = [], r = [], o = new ae(0, 0, 1), a = new ae(0, 1, 0);
        for(let c = 0; c < t.length; c++){
            let h = t[c];
            h.parent && h.parent.isBone && (i.push(0, 0, 0), i.push(0, 0, 0), r.push(o.r, o.g, o.b), r.push(a.r, a.g, a.b));
        }
        n.setAttribute("position", new de(i, 3)), n.setAttribute("color", new de(r, 3));
        let l = new ft({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0
        });
        super(n, l);
        this.type = "SkeletonHelper", this.isSkeletonHelper = !0, this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1;
    }
    updateMatrixWorld(e) {
        let t = this.bones, n = this.geometry, i = n.getAttribute("position");
        Qo.copy(this.root.matrixWorld).invert();
        for(let r = 0, o = 0; r < t.length; r++){
            let a = t[r];
            a.parent && a.parent.isBone && (Es.multiplyMatrices(Qo, a.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o, yn.x, yn.y, yn.z), Es.multiplyMatrices(Qo, a.parent.matrixWorld), yn.setFromMatrixPosition(Es), i.setXYZ(o + 1, yn.x, yn.y, yn.z), o += 2);
        }
        n.getAttribute("position").needsUpdate = !0, super.updateMatrixWorld(e);
    }
};
function tu(s) {
    let e = [];
    s && s.isBone && e.push(s);
    for(let t = 0; t < s.children.length; t++)e.push.apply(e, tu(s.children[t]));
    return e;
}
var Ry = class extends st {
    constructor(e, t, n){
        let i = new Fi(t, 4, 2), r = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        });
        super(i, r);
        this.light = e, this.light.updateMatrixWorld(), this.color = n, this.type = "PointLightHelper", this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.color !== void 0 ? this.material.color.set(this.color) : this.material.color.copy(this.light.color);
    }
}, Py = new M, Nc = new ae, Bc = new ae, Iy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
        let i = new Ii(t);
        i.rotateY(Math.PI * .5), this.material = new hn({
            wireframe: !0,
            fog: !1,
            toneMapped: !1
        }), this.color === void 0 && (this.material.vertexColors = !0);
        let r = i.getAttribute("position"), o = new Float32Array(r.count * 3);
        i.setAttribute("color", new Ue(o, 3)), this.add(new st(i, this.material)), this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(), this.children[0].material.dispose();
    }
    update() {
        let e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            let t = e.geometry.getAttribute("color");
            Nc.copy(this.light.color), Bc.copy(this.light.groundColor);
            for(let n = 0, i = t.count; n < i; n++){
                let r = n < i / 2 ? Nc : Bc;
                t.setXYZ(n, r.r, r.g, r.b);
            }
            t.needsUpdate = !0;
        }
        e.lookAt(Py.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}, nu = class extends wt {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848){
        n = new ae(n), i = new ae(i);
        let r = t / 2, o = e / t, a = e / 2, l = [], c = [];
        for(let d = 0, f = 0, m = -a; d <= t; d++, m += o){
            l.push(-a, 0, m, a, 0, m), l.push(m, 0, -a, m, 0, a);
            let x = d === r ? n : i;
            x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3, x.toArray(c, f), f += 3;
        }
        let h = new _e;
        h.setAttribute("position", new de(l, 3)), h.setAttribute("color", new de(c, 3));
        let u = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(h, u);
        this.type = "GridHelper";
    }
}, Dy = class extends wt {
    constructor(e = 10, t = 16, n = 8, i = 64, r = 4473924, o = 8947848){
        r = new ae(r), o = new ae(o);
        let a = [], l = [];
        for(let u = 0; u <= t; u++){
            let d = u / t * (Math.PI * 2), f = Math.sin(d) * e, m = Math.cos(d) * e;
            a.push(0, 0, 0), a.push(f, 0, m);
            let x = u & 1 ? r : o;
            l.push(x.r, x.g, x.b), l.push(x.r, x.g, x.b);
        }
        for(let u1 = 0; u1 <= n; u1++){
            let d1 = u1 & 1 ? r : o, f1 = e - e / n * u1;
            for(let m1 = 0; m1 < i; m1++){
                let x1 = m1 / i * (Math.PI * 2), v = Math.sin(x1) * f1, g = Math.cos(x1) * f1;
                a.push(v, 0, g), l.push(d1.r, d1.g, d1.b), x1 = (m1 + 1) / i * (Math.PI * 2), v = Math.sin(x1) * f1, g = Math.cos(x1) * f1, a.push(v, 0, g), l.push(d1.r, d1.g, d1.b);
            }
        }
        let c = new _e;
        c.setAttribute("position", new de(a, 3)), c.setAttribute("color", new de(l, 3));
        let h = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(c, h);
        this.type = "PolarGridHelper";
    }
}, zc = new M, As = new M, Uc = new M, Fy = class extends Ne {
    constructor(e, t, n){
        super();
        this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, t === void 0 && (t = 1);
        let i = new _e;
        i.setAttribute("position", new de([
            -t,
            t,
            0,
            t,
            t,
            0,
            t,
            -t,
            0,
            -t,
            -t,
            0,
            -t,
            t,
            0
        ], 3));
        let r = new ft({
            fog: !1,
            toneMapped: !1
        });
        this.lightPlane = new on(i, r), this.add(this.lightPlane), i = new _e, i.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            0,
            1
        ], 3)), this.targetLine = new on(i, r), this.add(this.targetLine), this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose();
    }
    update() {
        zc.setFromMatrixPosition(this.light.matrixWorld), As.setFromMatrixPosition(this.light.target.matrixWorld), Uc.subVectors(As, zc), this.lightPlane.lookAt(As), this.color !== void 0 ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(As), this.targetLine.scale.z = Uc.length();
    }
}, Cs = new M, Qe = new Ir, Ny = class extends wt {
    constructor(e){
        let t = new _e, n = new ft({
            color: 16777215,
            vertexColors: !0,
            toneMapped: !1
        }), i = [], r = [], o = {}, a = new ae(16755200), l = new ae(16711680), c = new ae(43775), h = new ae(16777215), u = new ae(3355443);
        d("n1", "n2", a), d("n2", "n4", a), d("n4", "n3", a), d("n3", "n1", a), d("f1", "f2", a), d("f2", "f4", a), d("f4", "f3", a), d("f3", "f1", a), d("n1", "f1", a), d("n2", "f2", a), d("n3", "f3", a), d("n4", "f4", a), d("p", "n1", l), d("p", "n2", l), d("p", "n3", l), d("p", "n4", l), d("u1", "u2", c), d("u2", "u3", c), d("u3", "u1", c), d("c", "t", h), d("p", "c", u), d("cn1", "cn2", u), d("cn3", "cn4", u), d("cf1", "cf2", u), d("cf3", "cf4", u);
        function d(m, x, v) {
            f(m, v), f(x, v);
        }
        function f(m, x) {
            i.push(0, 0, 0), r.push(x.r, x.g, x.b), o[m] === void 0 && (o[m] = []), o[m].push(i.length / 3 - 1);
        }
        t.setAttribute("position", new de(i, 3)), t.setAttribute("color", new de(r, 3));
        super(t, n);
        this.type = "CameraHelper", this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update();
    }
    update() {
        let e = this.geometry, t = this.pointMap, n = 1, i = 1;
        Qe.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), et("c", t, e, Qe, 0, 0, -1), et("t", t, e, Qe, 0, 0, 1), et("n1", t, e, Qe, -n, -i, -1), et("n2", t, e, Qe, n, -i, -1), et("n3", t, e, Qe, -n, i, -1), et("n4", t, e, Qe, n, i, -1), et("f1", t, e, Qe, -n, -i, 1), et("f2", t, e, Qe, n, -i, 1), et("f3", t, e, Qe, -n, i, 1), et("f4", t, e, Qe, n, i, 1), et("u1", t, e, Qe, n * .7, i * 1.1, -1), et("u2", t, e, Qe, -n * .7, i * 1.1, -1), et("u3", t, e, Qe, 0, i * 2, -1), et("cf1", t, e, Qe, -n, 0, 1), et("cf2", t, e, Qe, n, 0, 1), et("cf3", t, e, Qe, 0, -i, 1), et("cf4", t, e, Qe, 0, i, 1), et("cn1", t, e, Qe, -n, 0, -1), et("cn2", t, e, Qe, n, 0, -1), et("cn3", t, e, Qe, 0, -i, -1), et("cn4", t, e, Qe, 0, i, -1), e.getAttribute("position").needsUpdate = !0;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
};
function et(s, e, t, n, i, r, o) {
    Cs.set(i, r, o).unproject(n);
    let a = e[s];
    if (a !== void 0) {
        let l = t.getAttribute("position");
        for(let c = 0, h = a.length; c < h; c++)l.setXYZ(a[c], Cs.x, Cs.y, Cs.z);
    }
}
var Ls = new Lt, iu = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = new Float32Array(8 * 3), r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new Ue(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.object = e, this.type = "BoxHelper", this.matrixAutoUpdate = !1, this.update();
    }
    update(e) {
        if (e !== void 0 && console.warn("THREE.BoxHelper: .update() has no longer arguments."), this.object !== void 0 && Ls.setFromObject(this.object), Ls.isEmpty()) return;
        let t = Ls.min, n = Ls.max, i = this.geometry.attributes.position, r = i.array;
        r[0] = n.x, r[1] = n.y, r[2] = n.z, r[3] = t.x, r[4] = n.y, r[5] = n.z, r[6] = t.x, r[7] = t.y, r[8] = n.z, r[9] = n.x, r[10] = t.y, r[11] = n.z, r[12] = n.x, r[13] = n.y, r[14] = t.z, r[15] = t.x, r[16] = n.y, r[17] = t.z, r[18] = t.x, r[19] = t.y, r[20] = t.z, r[21] = n.x, r[22] = t.y, r[23] = t.z, i.needsUpdate = !0, this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return this.object = e, this.update(), this;
    }
    copy(e) {
        return wt.prototype.copy.call(this, e), this.object = e.object, this;
    }
}, By = class extends wt {
    constructor(e, t = 16776960){
        let n = new Uint16Array([
            0,
            1,
            1,
            2,
            2,
            3,
            3,
            0,
            4,
            5,
            5,
            6,
            6,
            7,
            7,
            4,
            0,
            4,
            1,
            5,
            2,
            6,
            3,
            7
        ]), i = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            -1,
            -1,
            -1,
            -1,
            1,
            -1,
            -1
        ], r = new _e;
        r.setIndex(new Ue(n, 1)), r.setAttribute("position", new de(i, 3));
        super(r, new ft({
            color: t,
            toneMapped: !1
        }));
        this.box = e, this.type = "Box3Helper", this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        let t = this.box;
        t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), super.updateMatrixWorld(e));
    }
}, zy = class extends on {
    constructor(e, t = 1, n = 16776960){
        let i = n, r = [
            1,
            -1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1,
            1,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ], o = new _e;
        o.setAttribute("position", new de(r, 3)), o.computeBoundingSphere();
        super(o, new ft({
            color: i,
            toneMapped: !1
        }));
        this.type = "PlaneHelper", this.plane = e, this.size = t;
        let a = [
            1,
            1,
            1,
            -1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            1,
            1,
            -1,
            -1,
            1,
            1,
            -1,
            1
        ], l = new _e;
        l.setAttribute("position", new de(a, 3)), l.computeBoundingSphere(), this.add(new st(l, new hn({
            color: i,
            opacity: .2,
            transparent: !0,
            depthWrite: !1,
            toneMapped: !1
        })));
    }
    updateMatrixWorld(e) {
        let t = -this.plane.constant;
        Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? it : Ai, this.lookAt(this.plane.normal), super.updateMatrixWorld(e);
    }
}, Oc = new M, Rs, Ko, Uy = class extends Ne {
    constructor(e = new M(0, 0, 1), t = new M(0, 0, 0), n = 1, i = 16776960, r = n * .2, o = r * .2){
        super();
        this.type = "ArrowHelper", Rs === void 0 && (Rs = new _e, Rs.setAttribute("position", new de([
            0,
            0,
            0,
            0,
            1,
            0
        ], 3)), Ko = new Jn(0, .5, 1, 5, 1), Ko.translate(0, -.5, 0)), this.position.copy(t), this.line = new on(Rs, new ft({
            color: i,
            toneMapped: !1
        })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new st(Ko, new hn({
            color: i,
            toneMapped: !1
        })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, r, o);
    }
    setDirection(e) {
        if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            Oc.set(e.z, 0, -e.x).normalize();
            let t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(Oc, t);
        }
    }
    setLength(e, t = e * .2, n = t * .2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return super.copy(e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this;
    }
}, ru = class extends wt {
    constructor(e = 1){
        let t = [
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e,
            0,
            0,
            0,
            0,
            0,
            0,
            e
        ], n = [
            1,
            0,
            0,
            1,
            .6,
            0,
            0,
            1,
            0,
            .6,
            1,
            0,
            0,
            0,
            1,
            0,
            .6,
            1
        ], i = new _e;
        i.setAttribute("position", new de(t, 3)), i.setAttribute("color", new de(n, 3));
        let r = new ft({
            vertexColors: !0,
            toneMapped: !1
        });
        super(i, r);
        this.type = "AxesHelper";
    }
    setColors(e, t, n) {
        let i = new ae, r = this.geometry.attributes.color.array;
        return i.set(e), i.toArray(r, 0), i.toArray(r, 3), i.set(t), i.toArray(r, 6), i.toArray(r, 9), i.set(n), i.toArray(r, 12), i.toArray(r, 15), this.geometry.attributes.color.needsUpdate = !0, this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}, Oy = class {
    constructor(){
        this.type = "ShapePath", this.color = new ae, this.subPaths = [], this.currentPath = null;
    }
    moveTo(e, t) {
        return this.currentPath = new gr, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this;
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, r, o) {
        return this.currentPath.bezierCurveTo(e, t, n, i, r, o), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e, t) {
        function n(p) {
            let _ = [];
            for(let y = 0, b = p.length; y < b; y++){
                let A = p[y], L = new Xt;
                L.curves = A.curves, _.push(L);
            }
            return _;
        }
        function i(p, _) {
            let y = _.length, b = !1;
            for(let A = y - 1, L = 0; L < y; A = L++){
                let I = _[A], k = _[L], B = k.x - I.x, P = k.y - I.y;
                if (Math.abs(P) > Number.EPSILON) {
                    if (P < 0 && (I = _[L], B = -B, k = _[A], P = -P), p.y < I.y || p.y > k.y) continue;
                    if (p.y === I.y) {
                        if (p.x === I.x) return !0;
                    } else {
                        let w = P * (p.x - I.x) - B * (p.y - I.y);
                        if (w === 0) return !0;
                        if (w < 0) continue;
                        b = !b;
                    }
                } else {
                    if (p.y !== I.y) continue;
                    if (k.x <= p.x && p.x <= I.x || I.x <= p.x && p.x <= k.x) return !0;
                }
            }
            return b;
        }
        let r = Jt.isClockWise, o = this.subPaths;
        if (o.length === 0) return [];
        if (t === !0) return n(o);
        let a, l, c, h = [];
        if (o.length === 1) return l = o[0], c = new Xt, c.curves = l.curves, h.push(c), h;
        let u = !r(o[0].getPoints());
        u = e ? !u : u;
        let d = [], f = [], m = [], x = 0, v;
        f[x] = void 0, m[x] = [];
        for(let p = 0, _ = o.length; p < _; p++)l = o[p], v = l.getPoints(), a = r(v), a = e ? !a : a, a ? (!u && f[x] && x++, f[x] = {
            s: new Xt,
            p: v
        }, f[x].s.curves = l.curves, u && x++, m[x] = []) : m[x].push({
            h: l,
            p: v[0]
        });
        if (!f[0]) return n(o);
        if (f.length > 1) {
            let p1 = !1, _1 = [];
            for(let y = 0, b = f.length; y < b; y++)d[y] = [];
            for(let y1 = 0, b1 = f.length; y1 < b1; y1++){
                let A = m[y1];
                for(let L = 0; L < A.length; L++){
                    let I = A[L], k = !0;
                    for(let B = 0; B < f.length; B++)i(I.p, f[B].p) && (y1 !== B && _1.push({
                        froms: y1,
                        tos: B,
                        hole: L
                    }), k ? (k = !1, d[B].push(I)) : p1 = !0);
                    k && d[y1].push(I);
                }
            }
            _1.length > 0 && (p1 || (m = d));
        }
        let g;
        for(let p2 = 0, _2 = f.length; p2 < _2; p2++){
            c = f[p2].s, h.push(c), g = m[p2];
            for(let y2 = 0, b2 = g.length; y2 < b2; y2++)c.holes.push(g[y2].h);
        }
        return h;
    }
}, su = new Float32Array(1), Hy = new Int32Array(su.buffer), ky = class {
    static toHalfFloat(e) {
        e > 65504 && (console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."), e = 65504), su[0] = e;
        let t = Hy[0], n = t >> 16 & 32768, i = t >> 12 & 2047, r = t >> 23 & 255;
        return r < 103 ? n : r > 142 ? (n |= 31744, n |= (r == 255 ? 0 : 1) && t & 8388607, n) : r < 113 ? (i |= 2048, n |= (i >> 114 - r) + (i >> 113 - r & 1), n) : (n |= r - 112 << 10 | i >> 1, n += i & 1, n);
    }
}, b0 = 0, w0 = 1, S0 = 0, T0 = 1, E0 = 2;
function A0(s) {
    return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), s;
}
function C0(s = []) {
    return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), s.isMultiMaterial = !0, s.materials = s, s.clone = function() {
        return s.slice();
    }, s;
}
function L0(s, e) {
    return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new zr(s, e);
}
function R0(s) {
    return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new ro(s);
}
function P0(s, e) {
    return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new zr(s, e);
}
function I0(s) {
    return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function D0(s) {
    return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function F0(s) {
    return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new jn(s);
}
function N0(s, e, t) {
    return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new M(s, e, t);
}
function B0(s, e) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new Ue(s, e).setUsage(ur);
}
function z0(s, e) {
    return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new jc(s, e);
}
function U0(s, e) {
    return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new Qc(s, e);
}
function O0(s, e) {
    return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new Kc(s, e);
}
function H0(s, e) {
    return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new eh(s, e);
}
function k0(s, e) {
    return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new Ys(s, e);
}
function G0(s, e) {
    return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new th(s, e);
}
function V0(s, e) {
    return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new Zs(s, e);
}
function W0(s, e) {
    return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new de(s, e);
}
function q0(s, e) {
    return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new ih(s, e);
}
Ct.create = function(s, e) {
    return console.log("THREE.Curve.create() has been deprecated"), s.prototype = Object.create(Ct.prototype), s.prototype.constructor = s, s.prototype.getPoint = e, s;
};
gr.prototype.fromPoints = function(s) {
    return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(s);
};
function X0(s) {
    return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new ru(s);
}
function J0(s, e) {
    return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new iu(s, e);
}
function Y0(s, e) {
    return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new wt(new _a(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
nu.prototype.setColors = function() {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.");
};
eu.prototype.update = function() {
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.");
};
function Z0(s, e) {
    return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new wt(new Ea(s.geometry), new ft({
        color: e !== void 0 ? e : 16777215
    }));
}
bt.prototype.extractUrlBase = function(s) {
    return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Gs.extractUrlBase(s);
};
bt.Handlers = {
    add: function() {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.");
    },
    get: function() {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.");
    }
};
function $0(s) {
    return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new Yt(s);
}
function j0(s) {
    return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new Nh(s);
}
qi.prototype.center = function(s) {
    return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
qi.prototype.empty = function() {
    return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
qi.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
qi.prototype.size = function(s) {
    return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(s);
};
Lt.prototype.center = function(s) {
    return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
Lt.prototype.empty = function() {
    return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Lt.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Lt.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
Lt.prototype.size = function(s) {
    return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(s);
};
An.prototype.empty = function() {
    return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty();
};
Dr.prototype.setFromMatrix = function(s) {
    return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(s);
};
Kh.prototype.center = function(s) {
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(s);
};
lt.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
lt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.");
};
lt.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), s.applyMatrix3(this);
};
lt.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix3: .applyToVector3Array() has been removed.");
};
lt.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
pe.prototype.extractPosition = function(s) {
    return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(s);
};
pe.prototype.flattenToArrayOffset = function(s, e) {
    return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(s, e);
};
pe.prototype.getPosition = function() {
    return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), new M().setFromMatrixColumn(this, 3);
};
pe.prototype.setRotationFromQuaternion = function(s) {
    return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(s);
};
pe.prototype.multiplyToArray = function() {
    console.warn("THREE.Matrix4: .multiplyToArray() has been removed.");
};
pe.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector4 = function(s) {
    return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.multiplyVector3Array = function() {
    console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.");
};
pe.prototype.rotateAxis = function(s) {
    console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), s.transformDirection(this);
};
pe.prototype.crossVector = function(s) {
    return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.translate = function() {
    console.error("THREE.Matrix4: .translate() has been removed.");
};
pe.prototype.rotateX = function() {
    console.error("THREE.Matrix4: .rotateX() has been removed.");
};
pe.prototype.rotateY = function() {
    console.error("THREE.Matrix4: .rotateY() has been removed.");
};
pe.prototype.rotateZ = function() {
    console.error("THREE.Matrix4: .rotateZ() has been removed.");
};
pe.prototype.rotateByAxis = function() {
    console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
};
pe.prototype.applyToBufferAttribute = function(s) {
    return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), s.applyMatrix4(this);
};
pe.prototype.applyToVector3Array = function() {
    console.error("THREE.Matrix4: .applyToVector3Array() has been removed.");
};
pe.prototype.makeFrustum = function(s, e, t, n, i, r) {
    return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(s, e, n, t, i, r);
};
pe.prototype.getInverse = function(s) {
    return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(s).invert();
};
Wt.prototype.isIntersectionLine = function(s) {
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(s);
};
gt.prototype.multiplyVector3 = function(s) {
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), s.applyQuaternion(this);
};
gt.prototype.inverse = function() {
    return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert();
};
Cn.prototype.isIntersectionBox = function(s) {
    return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(s);
};
Cn.prototype.isIntersectionPlane = function(s) {
    return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(s);
};
Cn.prototype.isIntersectionSphere = function(s) {
    return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(s);
};
nt.prototype.area = function() {
    return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea();
};
nt.prototype.barycoordFromPoint = function(s, e) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(s, e);
};
nt.prototype.midpoint = function(s) {
    return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(s);
};
nt.prototypenormal = function(s) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(s);
};
nt.prototype.plane = function(s) {
    return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(s);
};
nt.barycoordFromPoint = function(s, e, t, n, i) {
    return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), nt.getBarycoord(s, e, t, n, i);
};
nt.normal = function(s, e, t, n) {
    return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), nt.getNormal(s, e, t, n);
};
Xt.prototype.extractAllPoints = function(s) {
    return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(s);
};
Xt.prototype.extrude = function(s) {
    return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new ln(this, s);
};
Xt.prototype.makeGeometry = function(s) {
    return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Di(this, s);
};
X.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
X.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
X.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
M.prototype.setEulerFromRotationMatrix = function() {
    console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.");
};
M.prototype.setEulerFromQuaternion = function() {
    console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.");
};
M.prototype.getPositionFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(s);
};
M.prototype.getScaleFromMatrix = function(s) {
    return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(s);
};
M.prototype.getColumnFromMatrix = function(s, e) {
    return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, s);
};
M.prototype.applyProjection = function(s) {
    return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(s);
};
M.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
M.prototype.distanceToManhattan = function(s) {
    return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(s);
};
M.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ve.prototype.fromAttribute = function(s, e, t) {
    return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(s, e, t);
};
Ve.prototype.lengthManhattan = function() {
    return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength();
};
Ne.prototype.getChildByName = function(s) {
    return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(s);
};
Ne.prototype.renderDepth = function() {
    console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.");
};
Ne.prototype.translate = function(s, e) {
    return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, s);
};
Ne.prototype.getWorldRotation = function() {
    console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.");
};
Ne.prototype.applyMatrix = function(s) {
    return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(Ne.prototype, {
    eulerOrder: {
        get: function() {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order;
        },
        set: function(s) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = s;
        }
    },
    useQuaternion: {
        get: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        },
        set: function() {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.");
        }
    }
});
st.prototype.setDrawMode = function() {
    console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
};
Object.defineProperties(st.prototype, {
    drawMode: {
        get: function() {
            return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), Fd;
        },
        set: function() {
            console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.");
        }
    }
});
so.prototype.initBones = function() {
    console.error("THREE.SkinnedMesh: initBones() has been removed.");
};
ut.prototype.setLens = function(s, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), e !== void 0 && (this.filmGauge = e), this.setFocalLength(s);
};
Object.defineProperties(Bt.prototype, {
    onlyShadow: {
        set: function() {
            console.warn("THREE.Light: .onlyShadow has been removed.");
        }
    },
    shadowCameraFov: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = s;
        }
    },
    shadowCameraLeft: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = s;
        }
    },
    shadowCameraRight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = s;
        }
    },
    shadowCameraTop: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = s;
        }
    },
    shadowCameraBottom: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = s;
        }
    },
    shadowCameraNear: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = s;
        }
    },
    shadowCameraFar: {
        set: function(s) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = s;
        }
    },
    shadowCameraVisible: {
        set: function() {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.");
        }
    },
    shadowBias: {
        set: function(s) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = s;
        }
    },
    shadowDarkness: {
        set: function() {
            console.warn("THREE.Light: .shadowDarkness has been removed.");
        }
    },
    shadowMapWidth: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = s;
        }
    },
    shadowMapHeight: {
        set: function(s) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = s;
        }
    }
});
Object.defineProperties(Ue.prototype, {
    length: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length;
        }
    },
    dynamic: {
        get: function() {
            return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === ur;
        },
        set: function() {
            console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(ur);
        }
    }
});
Ue.prototype.setDynamic = function(s) {
    return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
Ue.prototype.copyIndicesArray = function() {
    console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.");
}, Ue.prototype.setArray = function() {
    console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
_e.prototype.addIndex = function(s) {
    console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(s);
};
_e.prototype.addAttribute = function(s, e) {
    return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), !(e && e.isBufferAttribute) && !(e && e.isInterleavedBufferAttribute) ? (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(s, new Ue(arguments[1], arguments[2]))) : s === "index" ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e), this) : this.setAttribute(s, e);
};
_e.prototype.addDrawCall = function(s, e, t) {
    t !== void 0 && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(s, e);
};
_e.prototype.clearDrawCalls = function() {
    console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups();
};
_e.prototype.computeOffsets = function() {
    console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.");
};
_e.prototype.removeAttribute = function(s) {
    return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(s);
};
_e.prototype.applyMatrix = function(s) {
    return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(s);
};
Object.defineProperties(_e.prototype, {
    drawcalls: {
        get: function() {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups;
        }
    },
    offsets: {
        get: function() {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups;
        }
    }
});
$n.prototype.setDynamic = function(s) {
    return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(s === !0 ? ur : hr), this;
};
$n.prototype.setArray = function() {
    console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers");
};
ln.prototype.getArrays = function() {
    console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.");
};
ln.prototype.addShapeList = function() {
    console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.");
};
ln.prototype.addShape = function() {
    console.error("THREE.ExtrudeGeometry: .addShape() has been removed.");
};
no.prototype.dispose = function() {
    console.error("THREE.Scene: .dispose() has been removed.");
};
go.prototype.onUpdate = function() {
    return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this;
};
Object.defineProperties(dt.prototype, {
    wrapAround: {
        get: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .wrapAround has been removed.");
        }
    },
    overdraw: {
        get: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        },
        set: function() {
            console.warn("THREE.Material: .overdraw has been removed.");
        }
    },
    wrapRGB: {
        get: function() {
            return console.warn("THREE.Material: .wrapRGB has been removed."), new ae;
        }
    },
    shading: {
        get: function() {
            console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.");
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = s === kc;
        }
    },
    stencilMask: {
        get: function() {
            return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask;
        },
        set: function(s) {
            console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = s;
        }
    },
    vertexTangents: {
        get: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        },
        set: function() {
            console.warn("THREE." + this.type + ": .vertexTangents has been removed.");
        }
    }
});
Object.defineProperties(sn.prototype, {
    derivatives: {
        get: function() {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives;
        },
        set: function(s) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = s;
        }
    }
});
qe.prototype.clearTarget = function(s, e, t, n) {
    console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(s), this.clear(e, t, n);
};
qe.prototype.animate = function(s) {
    console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(s);
};
qe.prototype.getCurrentRenderTarget = function() {
    return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget();
};
qe.prototype.getMaxAnisotropy = function() {
    return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy();
};
qe.prototype.getPrecision = function() {
    return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision;
};
qe.prototype.resetGLState = function() {
    return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset();
};
qe.prototype.supportsFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float");
};
qe.prototype.supportsHalfFloatTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float");
};
qe.prototype.supportsStandardDerivatives = function() {
    return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives");
};
qe.prototype.supportsCompressedTextureS3TC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc");
};
qe.prototype.supportsCompressedTexturePVRTC = function() {
    return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc");
};
qe.prototype.supportsBlendMinMax = function() {
    return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax");
};
qe.prototype.supportsVertexTextures = function() {
    return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures;
};
qe.prototype.supportsInstancedArrays = function() {
    return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays");
};
qe.prototype.enableScissorTest = function(s) {
    console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(s);
};
qe.prototype.initMaterial = function() {
    console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.");
};
qe.prototype.addPrePlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.");
};
qe.prototype.addPostPlugin = function() {
    console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.");
};
qe.prototype.updateShadowMap = function() {
    console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.");
};
qe.prototype.setFaceCulling = function() {
    console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.");
};
qe.prototype.allocTextureUnit = function() {
    console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.");
};
qe.prototype.setTexture = function() {
    console.warn("THREE.WebGLRenderer: .setTexture() has been removed.");
};
qe.prototype.setTexture2D = function() {
    console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.");
};
qe.prototype.setTextureCube = function() {
    console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.");
};
qe.prototype.getActiveMipMapLevel = function() {
    return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel();
};
Object.defineProperties(qe.prototype, {
    shadowMapEnabled: {
        get: function() {
            return this.shadowMap.enabled;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = s;
        }
    },
    shadowMapType: {
        get: function() {
            return this.shadowMap.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = s;
        }
    },
    shadowMapCullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    context: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext();
        }
    },
    vr: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr;
        }
    },
    gammaInput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.");
        }
    },
    gammaOutput: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = s === !0 ? Oi : Nt;
        }
    },
    toneMappingWhitePoint: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.");
        }
    },
    gammaFactor: {
        get: function() {
            return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
        }
    }
});
Object.defineProperties(yh.prototype, {
    cullFace: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");
        }
    },
    renderReverseSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");
        }
    },
    renderSingleSided: {
        get: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        },
        set: function() {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");
        }
    }
});
function Q0(s, e, t) {
    return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new js(s, t);
}
Object.defineProperties(At.prototype, {
    wrapS: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = s;
        }
    },
    wrapT: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = s;
        }
    },
    magFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = s;
        }
    },
    minFilter: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = s;
        }
    },
    anisotropy: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = s;
        }
    },
    offset: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = s;
        }
    },
    repeat: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = s;
        }
    },
    format: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = s;
        }
    },
    type: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = s;
        }
    },
    generateMipmaps: {
        get: function() {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps;
        },
        set: function(s) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = s;
        }
    }
});
Za.prototype.load = function(s) {
    console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
    let e = this;
    return new kh().load(s, function(n) {
        e.setBuffer(n);
    }), this;
};
qh.prototype.getData = function() {
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData();
};
$s.prototype.updateCubeMap = function(s, e) {
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(s, e);
};
$s.prototype.clear = function(s, e, t, n) {
    return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(s, e, t, n);
};
Yn.crossOrigin = void 0;
Yn.loadTexture = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    let i = new Bh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadTextureCube = function(s, e, t, n) {
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    let i = new Fh;
    i.setCrossOrigin(this.crossOrigin);
    let r = i.load(s, t, void 0, n);
    return e && (r.mapping = e), r;
};
Yn.loadCompressedTexture = function() {
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.");
};
Yn.loadCompressedTextureCube = function() {
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.");
};
function K0() {
    console.error("THREE.CanvasRenderer has been removed");
}
function ev() {
    console.error("THREE.JSONLoader has been removed.");
}
var tv = {
    createMultiMaterialObject: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    detach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    },
    attach: function() {
        console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js");
    }
};
function nv() {
    console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js");
}
function iv() {
    return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"), new _e;
}
function rv() {
    return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"), new _e;
}
function sv() {
    console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js");
}
function ov() {
    console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js");
}
function av() {
    console.error("THREE.ImmediateRenderObject has been removed.");
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
    detail: {
        revision: ca
    }
}));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = ca);
const mod = {
    ACESFilmicToneMapping: Uu,
    AddEquation: _i,
    AddOperation: Fu,
    AdditiveAnimationBlendMode: qc,
    AdditiveBlending: nl,
    AlphaFormat: Xu,
    AlwaysDepth: Au,
    AlwaysStencilFunc: Ud,
    AmbientLight: qa,
    AmbientLightProbe: Vh,
    AnimationClip: Lr,
    AnimationLoader: cy,
    AnimationMixer: $h,
    AnimationObjectGroup: Yh,
    AnimationUtils: Ze,
    ArcCurve: Ma,
    ArrayCamera: ga,
    ArrowHelper: Uy,
    Audio: Za,
    AudioAnalyser: qh,
    AudioContext: Hh,
    AudioListener: my,
    AudioLoader: kh,
    AxesHelper: ru,
    AxisHelper: X0,
    BackSide: it,
    BasicDepthPacking: Nd,
    BasicShadowMap: qy,
    BinaryTextureLoader: j0,
    Bone: oo,
    BooleanKeyframeTrack: Qn,
    BoundingBoxHelper: J0,
    Box2: qi,
    Box3: Lt,
    Box3Helper: By,
    BoxBufferGeometry: wn,
    BoxGeometry: wn,
    BoxHelper: iu,
    BufferAttribute: Ue,
    BufferGeometry: _e,
    BufferGeometryLoader: Uh,
    ByteType: Hu,
    Cache: Ni,
    Camera: Ir,
    CameraHelper: Ny,
    CanvasRenderer: K0,
    CanvasTexture: Th,
    CatmullRomCurve3: wa,
    CineonToneMapping: zu,
    CircleBufferGeometry: fr,
    CircleGeometry: fr,
    ClampToEdgeWrapping: vt,
    Clock: Wh,
    Color: ae,
    ColorKeyframeTrack: Ba,
    CompressedTexture: va,
    CompressedTextureLoader: hy,
    ConeBufferGeometry: pr,
    ConeGeometry: pr,
    CubeCamera: $s,
    CubeReflectionMapping: Bi,
    CubeRefractionMapping: zi,
    CubeTexture: ki,
    CubeTextureLoader: Fh,
    CubeUVReflectionMapping: Pr,
    CubeUVRefractionMapping: Ws,
    CubicBezierCurve: lo,
    CubicBezierCurve3: Sa,
    CubicInterpolant: Ph,
    CullFaceBack: tl,
    CullFaceFront: du,
    CullFaceFrontBack: Wy,
    CullFaceNone: uu,
    Curve: Ct,
    CurvePath: Ah,
    CustomBlending: pu,
    CustomToneMapping: Ou,
    CylinderBufferGeometry: Jn,
    CylinderGeometry: Jn,
    Cylindrical: Cy,
    DataTexture: qn,
    DataTexture2DArray: Qs,
    DataTexture3D: ma,
    DataTextureLoader: Nh,
    DataUtils: ky,
    DecrementStencilOp: n0,
    DecrementWrapStencilOp: r0,
    DefaultLoadingManager: ly,
    DepthFormat: Vn,
    DepthStencilFormat: Li,
    DepthTexture: ks,
    DirectionalLight: Wa,
    DirectionalLightHelper: Fy,
    DiscreteInterpolant: Ih,
    DodecahedronBufferGeometry: mr,
    DodecahedronGeometry: mr,
    DoubleSide: Ci,
    DstAlphaFactor: Mu,
    DstColorFactor: wu,
    DynamicBufferAttribute: B0,
    DynamicCopyUsage: y0,
    DynamicDrawUsage: ur,
    DynamicReadUsage: m0,
    EdgesGeometry: _a,
    EdgesHelper: Y0,
    EllipseCurve: Ur,
    EqualDepth: Lu,
    EqualStencilFunc: l0,
    EquirectangularReflectionMapping: Ds,
    EquirectangularRefractionMapping: Fs,
    Euler: Zn,
    EventDispatcher: En,
    ExtrudeBufferGeometry: ln,
    ExtrudeGeometry: ln,
    FaceColors: T0,
    FileLoader: Yt,
    FlatShading: kc,
    Float16BufferAttribute: nh,
    Float32Attribute: W0,
    Float32BufferAttribute: de,
    Float64Attribute: q0,
    Float64BufferAttribute: ih,
    FloatType: nn,
    Fog: Br,
    FogExp2: Nr,
    Font: ov,
    FontLoader: sv,
    FramebufferTexture: Sh,
    FrontSide: Ai,
    Frustum: Dr,
    GLBufferAttribute: Qh,
    GLSL1: _0,
    GLSL3: xl,
    GreaterDepth: Pu,
    GreaterEqualDepth: Ru,
    GreaterEqualStencilFunc: d0,
    GreaterStencilFunc: h0,
    GridHelper: nu,
    Group: Hn,
    HalfFloatType: kn,
    HemisphereLight: Ua,
    HemisphereLightHelper: Iy,
    HemisphereLightProbe: Gh,
    IcosahedronBufferGeometry: _r,
    IcosahedronGeometry: _r,
    ImageBitmapLoader: Oh,
    ImageLoader: Rr,
    ImageUtils: Yn,
    ImmediateRenderObject: av,
    IncrementStencilOp: t0,
    IncrementWrapStencilOp: i0,
    InstancedBufferAttribute: Xn,
    InstancedBufferGeometry: Ya,
    InstancedInterleavedBuffer: jh,
    InstancedMesh: xa,
    Int16Attribute: H0,
    Int16BufferAttribute: eh,
    Int32Attribute: G0,
    Int32BufferAttribute: th,
    Int8Attribute: z0,
    Int8BufferAttribute: jc,
    IntType: Gu,
    InterleavedBuffer: $n,
    InterleavedBufferAttribute: Sn,
    Interpolant: cn,
    InterpolateDiscrete: zs,
    InterpolateLinear: Us,
    InterpolateSmooth: yo,
    InvertStencilOp: s0,
    JSONLoader: ev,
    KeepStencilOp: vo,
    KeyframeTrack: zt,
    LOD: bh,
    LatheBufferGeometry: Mr,
    LatheGeometry: Mr,
    Layers: Js,
    LensFlare: nv,
    LessDepth: Cu,
    LessEqualDepth: ea,
    LessEqualStencilFunc: c0,
    LessStencilFunc: a0,
    Light: Bt,
    LightProbe: Hr,
    Line: on,
    Line3: Kh,
    LineBasicMaterial: ft,
    LineCurve: Or,
    LineCurve3: Eh,
    LineDashedMaterial: Fa,
    LineLoop: ya,
    LinePieces: w0,
    LineSegments: wt,
    LineStrip: b0,
    LinearEncoding: Nt,
    LinearFilter: tt,
    LinearInterpolant: Na,
    LinearMipMapLinearFilter: $y,
    LinearMipMapNearestFilter: Zy,
    LinearMipmapLinearFilter: Ui,
    LinearMipmapNearestFilter: Wc,
    LinearToneMapping: Nu,
    Loader: bt,
    LoaderUtils: Gs,
    LoadingManager: za,
    LoopOnce: Pd,
    LoopPingPong: Dd,
    LoopRepeat: Id,
    LuminanceAlphaFormat: Yu,
    LuminanceFormat: Ju,
    MOUSE: Gy,
    Material: dt,
    MaterialLoader: zh,
    Math: M0,
    MathUtils: M0,
    Matrix3: lt,
    Matrix4: pe,
    MaxEquation: ol,
    Mesh: st,
    MeshBasicMaterial: hn,
    MeshDepthMaterial: eo,
    MeshDistanceMaterial: to,
    MeshFaceMaterial: A0,
    MeshLambertMaterial: Ia,
    MeshMatcapMaterial: Da,
    MeshNormalMaterial: Pa,
    MeshPhongMaterial: La,
    MeshPhysicalMaterial: Ca,
    MeshStandardMaterial: po,
    MeshToonMaterial: Ra,
    MinEquation: sl,
    MirroredRepeatWrapping: Bs,
    MixOperation: Du,
    MultiMaterial: C0,
    MultiplyBlending: rl,
    MultiplyOperation: Vs,
    NearestFilter: rt,
    NearestMipMapLinearFilter: Yy,
    NearestMipMapNearestFilter: Jy,
    NearestMipmapLinearFilter: na,
    NearestMipmapNearestFilter: ta,
    NeverDepth: Eu,
    NeverStencilFunc: o0,
    NoBlending: vn,
    NoColors: S0,
    NoToneMapping: _n,
    NormalAnimationBlendMode: ua,
    NormalBlending: sr,
    NotEqualDepth: Iu,
    NotEqualStencilFunc: u0,
    NumberKeyframeTrack: Ar,
    Object3D: Ne,
    ObjectLoader: uy,
    ObjectSpaceNormalMap: zd,
    OctahedronBufferGeometry: Ii,
    OctahedronGeometry: Ii,
    OneFactor: yu,
    OneMinusDstAlphaFactor: bu,
    OneMinusDstColorFactor: Su,
    OneMinusSrcAlphaFactor: Vc,
    OneMinusSrcColorFactor: _u,
    OrthographicCamera: Fr,
    PCFShadowMap: Hc,
    PCFSoftShadowMap: fu,
    PMREMGenerator: ah,
    ParametricGeometry: iv,
    Particle: R0,
    ParticleBasicMaterial: D0,
    ParticleSystem: P0,
    ParticleSystemMaterial: F0,
    Path: gr,
    PerspectiveCamera: ut,
    Plane: Wt,
    PlaneBufferGeometry: Pi,
    PlaneGeometry: Pi,
    PlaneHelper: zy,
    PointCloud: L0,
    PointCloudMaterial: I0,
    PointLight: Ga,
    PointLightHelper: Ry,
    Points: zr,
    PointsMaterial: jn,
    PolarGridHelper: Dy,
    PolyhedronBufferGeometry: an,
    PolyhedronGeometry: an,
    PositionalAudio: xy,
    PropertyBinding: ke,
    PropertyMixer: Xh,
    QuadraticBezierCurve: co,
    QuadraticBezierCurve3: ho,
    Quaternion: gt,
    QuaternionKeyframeTrack: Wi,
    QuaternionLinearInterpolant: Dh,
    REVISION: ca,
    RGBADepthPacking: Bd,
    RGBAFormat: ct,
    RGBAIntegerFormat: ed,
    RGBA_ASTC_10x10_Format: fd,
    RGBA_ASTC_10x5_Format: hd,
    RGBA_ASTC_10x6_Format: ud,
    RGBA_ASTC_10x8_Format: dd,
    RGBA_ASTC_12x10_Format: pd,
    RGBA_ASTC_12x12_Format: md,
    RGBA_ASTC_4x4_Format: nd,
    RGBA_ASTC_5x4_Format: id,
    RGBA_ASTC_5x5_Format: rd,
    RGBA_ASTC_6x5_Format: sd,
    RGBA_ASTC_6x6_Format: od,
    RGBA_ASTC_8x5_Format: ad,
    RGBA_ASTC_8x6_Format: ld,
    RGBA_ASTC_8x8_Format: cd,
    RGBA_BPTC_Format: gd,
    RGBA_ETC2_EAC_Format: gl,
    RGBA_PVRTC_2BPPV1_Format: pl,
    RGBA_PVRTC_4BPPV1_Format: fl,
    RGBA_S3TC_DXT1_Format: ll,
    RGBA_S3TC_DXT3_Format: cl,
    RGBA_S3TC_DXT5_Format: hl,
    RGBFormat: Gn,
    RGBIntegerFormat: Ku,
    RGB_ETC1_Format: td,
    RGB_ETC2_Format: ml,
    RGB_PVRTC_2BPPV1_Format: dl,
    RGB_PVRTC_4BPPV1_Format: ul,
    RGB_S3TC_DXT1_Format: al,
    RGFormat: ju,
    RGIntegerFormat: Qu,
    RawShaderMaterial: Gi,
    Ray: Cn,
    Raycaster: Ey,
    RectAreaLight: Xa,
    RedFormat: Zu,
    RedIntegerFormat: $u,
    ReinhardToneMapping: Bu,
    RepeatWrapping: Ns,
    ReplaceStencilOp: e0,
    ReverseSubtractEquation: gu,
    RingBufferGeometry: br,
    RingGeometry: br,
    SRGB8_ALPHA8_ASTC_10x10_Format: Cd,
    SRGB8_ALPHA8_ASTC_10x5_Format: Td,
    SRGB8_ALPHA8_ASTC_10x6_Format: Ed,
    SRGB8_ALPHA8_ASTC_10x8_Format: Ad,
    SRGB8_ALPHA8_ASTC_12x10_Format: Ld,
    SRGB8_ALPHA8_ASTC_12x12_Format: Rd,
    SRGB8_ALPHA8_ASTC_4x4_Format: xd,
    SRGB8_ALPHA8_ASTC_5x4_Format: yd,
    SRGB8_ALPHA8_ASTC_5x5_Format: vd,
    SRGB8_ALPHA8_ASTC_6x5_Format: _d,
    SRGB8_ALPHA8_ASTC_6x6_Format: Md,
    SRGB8_ALPHA8_ASTC_8x5_Format: bd,
    SRGB8_ALPHA8_ASTC_8x6_Format: wd,
    SRGB8_ALPHA8_ASTC_8x8_Format: Sd,
    Scene: no,
    SceneUtils: tv,
    ShaderChunk: Fe,
    ShaderLib: qt,
    ShaderMaterial: sn,
    ShadowMaterial: Aa,
    Shape: Xt,
    ShapeBufferGeometry: Di,
    ShapeGeometry: Di,
    ShapePath: Oy,
    ShapeUtils: Jt,
    ShortType: ku,
    Skeleton: ao,
    SkeletonHelper: eu,
    SkinnedMesh: so,
    SmoothShading: Xy,
    Sphere: An,
    SphereBufferGeometry: Fi,
    SphereGeometry: Fi,
    Spherical: Ay,
    SphericalHarmonics3: Ja,
    SplineCurve: uo,
    SpotLight: Ha,
    SpotLightHelper: Ly,
    Sprite: ro,
    SpriteMaterial: io,
    SrcAlphaFactor: Gc,
    SrcAlphaSaturateFactor: Tu,
    SrcColorFactor: vu,
    StaticCopyUsage: x0,
    StaticDrawUsage: hr,
    StaticReadUsage: p0,
    StereoCamera: fy,
    StreamCopyUsage: v0,
    StreamDrawUsage: f0,
    StreamReadUsage: g0,
    StringKeyframeTrack: Kn,
    SubtractEquation: mu,
    SubtractiveBlending: il,
    TOUCH: Vy,
    TangentSpaceNormalMap: Hi,
    TetrahedronBufferGeometry: wr,
    TetrahedronGeometry: wr,
    TextGeometry: rv,
    Texture: ot,
    TextureLoader: Bh,
    TorusBufferGeometry: Sr,
    TorusGeometry: Sr,
    TorusKnotBufferGeometry: Tr,
    TorusKnotGeometry: Tr,
    Triangle: nt,
    TriangleFanDrawMode: Qy,
    TriangleStripDrawMode: jy,
    TrianglesDrawMode: Fd,
    TubeBufferGeometry: Er,
    TubeGeometry: Er,
    UVMapping: ha,
    Uint16Attribute: k0,
    Uint16BufferAttribute: Ys,
    Uint32Attribute: V0,
    Uint32BufferAttribute: Zs,
    Uint8Attribute: U0,
    Uint8BufferAttribute: Qc,
    Uint8ClampedAttribute: O0,
    Uint8ClampedBufferAttribute: Kc,
    Uniform: go,
    UniformsLib: ie,
    UniformsUtils: uf,
    UnsignedByteType: rn,
    UnsignedInt248Type: Ti,
    UnsignedIntType: Ps,
    UnsignedShort4444Type: Vu,
    UnsignedShort5551Type: Wu,
    UnsignedShort565Type: qu,
    UnsignedShortType: cr,
    VSMShadowMap: ir,
    Vector2: X,
    Vector3: M,
    Vector4: Ve,
    VectorKeyframeTrack: Cr,
    Vertex: N0,
    VertexColors: E0,
    VideoTexture: wh,
    WebGL1Renderer: _h,
    WebGLCubeRenderTarget: js,
    WebGLMultipleRenderTargets: Zc,
    WebGLMultisampleRenderTarget: Xs,
    WebGLRenderTarget: At,
    WebGLRenderTargetCube: Q0,
    WebGLRenderer: qe,
    WebGLUtils: Ex,
    WireframeGeometry: Ea,
    WireframeHelper: Z0,
    WrapAroundEnding: Os,
    XHRLoader: $0,
    ZeroCurvatureEnding: Mi,
    ZeroFactor: xu,
    ZeroSlopeEnding: bi,
    ZeroStencilOp: Ky,
    sRGBEncoding: Oi
};
function getWebGLErrorMessage() {
    return getErrorMessage(1);
}
function getErrorMessage(version) {
    var names = {
        1: "WebGL",
        2: "WebGL 2"
    };
    var contexts = {
        1: window.WebGLRenderingContext,
        2: window.WebGL2RenderingContext
    };
    var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
    var element = document.createElement("div");
    element.id = "webglmessage";
    element.style.fontFamily = "monospace";
    element.style.fontSize = "13px";
    element.style.fontWeight = "normal";
    element.style.textAlign = "center";
    element.style.background = "#fff";
    element.style.color = "#000";
    element.style.padding = "1.5em";
    element.style.width = "400px";
    element.style.margin = "5em auto 0";
    if (contexts[version]) {
        message = message.replace("$0", "graphics card");
    } else {
        message = message.replace("$0", "browser");
    }
    message = message.replace("$1", names[version]);
    element.innerHTML = message;
    return element;
}
const pixelRatio = window.devicePixelRatio || 1.0;
function event2scene_pixel(scene, event) {
    const { canvas  } = scene.screen;
    const rect = canvas.getBoundingClientRect();
    const x = (event.clientX - rect.left) * pixelRatio;
    const y = (rect.height - (event.clientY - rect.top)) * pixelRatio;
    return [
        x,
        y
    ];
}
function Identity4x4() {
    return new pe();
}
function in_scene(scene, mouse_event) {
    const [x, y] = event2scene_pixel(scene, mouse_event);
    const [sx, sy, sw, sh] = scene.pixelarea.value;
    return x >= sx && x < sx + sw && y >= sy && y < sy + sh;
}
function attach_3d_camera(canvas, makie_camera, cam3d, scene) {
    if (cam3d === undefined) {
        return;
    }
    const [w, h] = makie_camera.resolution.value;
    const camera = new ut(cam3d.fov, w / h, cam3d.near, cam3d.far);
    const center = new M(...cam3d.lookat);
    camera.up = new M(...cam3d.upvector);
    camera.position.set(...cam3d.eyeposition);
    camera.lookAt(center);
    function update() {
        camera.updateProjectionMatrix();
        camera.updateWorldMatrix();
        const view = camera.matrixWorldInverse;
        const projection = camera.projectionMatrix;
        const [width, height] = makie_camera.resolution.value;
        const [x, y, z] = camera.position;
        makie_camera.update_matrices(view.elements, projection.elements, [
            width,
            height
        ], [
            x,
            y,
            z
        ]);
    }
    function addMouseHandler(domObject, drag, zoomIn, zoomOut) {
        let startDragX = null;
        let startDragY = null;
        function mouseWheelHandler(e) {
            e = window.event || e;
            if (!in_scene(scene, e)) {
                return;
            }
            const delta = Math.sign(e.deltaY);
            if (delta == -1) {
                zoomOut();
            } else if (delta == 1) {
                zoomIn();
            }
            e.preventDefault();
        }
        function mouseDownHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseMoveHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            if (startDragX === null || startDragY === null) return;
            if (drag) drag(e.clientX - startDragX, e.clientY - startDragY);
            startDragX = e.clientX;
            startDragY = e.clientY;
            e.preventDefault();
        }
        function mouseUpHandler(e) {
            if (!in_scene(scene, e)) {
                return;
            }
            mouseMoveHandler.call(this, e);
            startDragX = null;
            startDragY = null;
            e.preventDefault();
        }
        domObject.addEventListener("wheel", mouseWheelHandler);
        domObject.addEventListener("mousedown", mouseDownHandler);
        domObject.addEventListener("mousemove", mouseMoveHandler);
        domObject.addEventListener("mouseup", mouseUpHandler);
    }
    function drag(deltaX, deltaY) {
        const radPerPixel = Math.PI / 450;
        const deltaPhi = radPerPixel * deltaX;
        const deltaTheta = radPerPixel * deltaY;
        const pos = camera.position.sub(center);
        const radius = pos.length();
        let theta = Math.acos(pos.z / radius);
        let phi = Math.atan2(pos.y, pos.x);
        theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);
        phi -= deltaPhi;
        pos.x = radius * Math.sin(theta) * Math.cos(phi);
        pos.y = radius * Math.sin(theta) * Math.sin(phi);
        pos.z = radius * Math.cos(theta);
        camera.position.add(center);
        camera.lookAt(center);
        update();
    }
    function zoomIn() {
        camera.position.sub(center).multiplyScalar(0.9).add(center);
        update();
    }
    function zoomOut() {
        camera.position.sub(center).multiplyScalar(1.1).add(center);
        update();
    }
    addMouseHandler(canvas, drag, zoomIn, zoomOut);
}
function mul(a, b) {
    return b.clone().multiply(a);
}
function orthographicprojection(left, right, bottom, top, znear, zfar) {
    return [
        2 / (right - left),
        0,
        0,
        0,
        0,
        2 / (top - bottom),
        0,
        0,
        0,
        0,
        -2 / (zfar - znear),
        0,
        -(right + left) / (right - left),
        -(top + bottom) / (top - bottom),
        -(zfar + znear) / (zfar - znear),
        1
    ];
}
function pixel_space_inverse(w, h, near) {
    return [
        0.5 * w,
        0,
        0,
        0,
        0,
        0.5 * h,
        0,
        0,
        0,
        0,
        near,
        0,
        0.5 * w,
        0.5 * h,
        0,
        1
    ];
}
function relative_space() {
    const relative = Identity4x4();
    relative.fromArray([
        2,
        0,
        0,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        1,
        0,
        -1,
        -1,
        0,
        1
    ]);
    return relative;
}
class MakieCamera {
    constructor(){
        this.view = new go(Identity4x4());
        this.projection = new go(Identity4x4());
        this.projectionview = new go(Identity4x4());
        this.pixel_space = new go(Identity4x4());
        this.pixel_space_inverse = new go(Identity4x4());
        this.projectionview_inverse = new go(Identity4x4());
        this.relative_space = new go(relative_space());
        this.relative_inverse = new go(relative_space().invert());
        this.clip_space = new go(Identity4x4());
        this.resolution = new go(new X());
        this.eyeposition = new go(new M());
        this.preprojections = {};
    }
    calculate_matrices() {
        const [w, h] = this.resolution.value;
        const nearclip = -10_000;
        this.pixel_space.value.fromArray(orthographicprojection(0, w, 0, h, nearclip, 10_000));
        this.pixel_space_inverse.value.fromArray(pixel_space_inverse(w, h, nearclip));
        const proj_view = mul(this.view.value, this.projection.value);
        this.projectionview.value = proj_view;
        this.projectionview_inverse.value = proj_view.clone().invert();
        Object.keys(this.preprojections).forEach((key)=>{
            const [space, markerspace] = key.split(",");
            this.preprojections[key].value = this.calculate_preprojection_matrix(space, markerspace);
        });
    }
    update_matrices(view, projection, resolution, eyepos) {
        this.view.value.fromArray(view);
        this.projection.value.fromArray(projection);
        this.resolution.value.fromArray(resolution);
        this.eyeposition.value.fromArray(eyepos);
        this.calculate_matrices();
        return;
    }
    clip_to_space(space) {
        if (space === "data") {
            return this.projectionview_inverse.value;
        } else if (space === "pixel") {
            return this.pixel_space_inverse.value;
        } else if (space === "relative") {
            return this.relative_inverse.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    space_to_clip(space) {
        if (space === "data") {
            return this.projectionview.value;
        } else if (space === "pixel") {
            return this.pixel_space.value;
        } else if (space === "relative") {
            return this.relative_space.value;
        } else if (space === "clip") {
            return this.clip_space.value;
        } else {
            throw new Error(`Space ${space} not recognized`);
        }
    }
    calculate_preprojection_matrix(space, markerspace) {
        const cp = this.clip_to_space(markerspace);
        const sc = this.space_to_clip(space);
        return mul(sc, cp);
    }
    preprojection_matrix(space, markerspace) {
        const key = [
            space,
            markerspace
        ];
        const matrix_uniform = this.preprojections[key];
        if (matrix_uniform) {
            return matrix_uniform;
        } else {
            const matrix = this.calculate_preprojection_matrix(space, markerspace);
            const uniform = new go(matrix);
            this.preprojections[key] = uniform;
            return uniform;
        }
    }
}
const scene_cache = {};
const plot_cache = {};
const TEXTURE_ATLAS = [
    undefined
];
function add_scene(scene_id, three_scene) {
    scene_cache[scene_id] = three_scene;
}
function find_scene(scene_id) {
    return scene_cache[scene_id];
}
function delete_scene(scene_id) {
    const scene = scene_cache[scene_id];
    if (!scene) {
        return;
    }
    while(scene.children.length > 0){
        scene.remove(scene.children[0]);
    }
    delete scene_cache[scene_id];
}
function find_plots(plot_uuids) {
    const plots = [];
    plot_uuids.forEach((id)=>{
        const plot = plot_cache[id];
        if (plot) {
            plots.push(plot);
        }
    });
    return plots;
}
function delete_scenes(scene_uuids, plot_uuids) {
    plot_uuids.forEach((plot_id)=>{
        delete plot_cache[plot_id];
    });
    scene_uuids.forEach((scene_id)=>{
        delete_scene(scene_id);
    });
}
function insert_plot(scene_id, plot_data) {
    const scene = find_scene(scene_id);
    plot_data.forEach((plot)=>{
        add_plot(scene, plot);
    });
}
function delete_plots(scene_id, plot_uuids) {
    const scene = find_scene(scene_id);
    const plots = find_plots(plot_uuids);
    plots.forEach((p)=>{
        scene.remove(p);
        delete plot_cache[p];
    });
}
function convert_texture(data) {
    const tex = create_texture(data);
    tex.needsUpdate = true;
    tex.minFilter = mod[data.minFilter];
    tex.magFilter = mod[data.magFilter];
    tex.anisotropy = data.anisotropy;
    tex.wrapS = mod[data.wrapS];
    if (data.size.length > 1) {
        tex.wrapT = mod[data.wrapT];
    }
    if (data.size.length > 2) {
        tex.wrapR = mod[data.wrapR];
    }
    return tex;
}
function is_three_fixed_array(value) {
    return value instanceof mod.Vector2 || value instanceof mod.Vector3 || value instanceof mod.Vector4 || value instanceof mod.Matrix4;
}
function to_uniform(data) {
    if (data.type !== undefined) {
        if (data.type == "Sampler") {
            return convert_texture(data);
        }
        throw new Error(`Type ${data.type} not known`);
    }
    if (Array.isArray(data) || ArrayBuffer.isView(data)) {
        if (!data.every((x)=>typeof x === "number")) {
            return data;
        }
        if (data.length == 2) {
            return new mod.Vector2().fromArray(data);
        }
        if (data.length == 3) {
            return new mod.Vector3().fromArray(data);
        }
        if (data.length == 4) {
            return new mod.Vector4().fromArray(data);
        }
        if (data.length == 16) {
            const mat = new mod.Matrix4();
            mat.fromArray(data);
            return mat;
        }
    }
    return data;
}
function deserialize_uniforms(data) {
    const result = {};
    for(const name in data){
        const value = data[name];
        if (value instanceof mod.Uniform) {
            result[name] = value;
        } else {
            const ser = to_uniform(value);
            result[name] = new mod.Uniform(ser);
        }
    }
    return result;
}
function deserialize_plot(data) {
    let mesh;
    if ("instance_attributes" in data) {
        mesh = create_instanced_mesh(data);
    } else {
        mesh = create_mesh(data);
    }
    mesh.name = data.name;
    mesh.frustumCulled = false;
    mesh.matrixAutoUpdate = false;
    mesh.plot_uuid = data.uuid;
    const update_visible = (v)=>{
        mesh.visible = v;
        return;
    };
    update_visible(data.visible.value);
    data.visible.on(update_visible);
    connect_uniforms(mesh, data.uniform_updater);
    connect_attributes(mesh, data.attribute_updater);
    return mesh;
}
const ON_NEXT_INSERT = new Set();
function on_next_insert(f) {
    ON_NEXT_INSERT.add(f);
}
function add_plot(scene, plot_data) {
    const cam = scene.wgl_camera;
    const identity = new mod.Uniform(new mod.Matrix4());
    if (plot_data.cam_space == "data") {
        plot_data.uniforms.view = cam.view;
        plot_data.uniforms.projection = cam.projection;
        plot_data.uniforms.projectionview = cam.projectionview;
        plot_data.uniforms.eyeposition = cam.eyeposition;
    } else if (plot_data.cam_space == "pixel") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.pixel_space;
        plot_data.uniforms.projectionview = cam.pixel_space;
    } else if (plot_data.cam_space == "relative") {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = cam.relative_space;
        plot_data.uniforms.projectionview = cam.relative_space;
    } else {
        plot_data.uniforms.view = identity;
        plot_data.uniforms.projection = identity;
        plot_data.uniforms.projectionview = identity;
    }
    plot_data.uniforms.resolution = cam.resolution;
    if (plot_data.uniforms.preprojection) {
        const { space , markerspace  } = plot_data;
        plot_data.uniforms.preprojection = cam.preprojection_matrix(space.value, markerspace.value);
    }
    const p = deserialize_plot(plot_data);
    plot_cache[plot_data.uuid] = p;
    scene.add(p);
    const next_insert = new Set(ON_NEXT_INSERT);
    next_insert.forEach((f)=>f());
}
function connect_uniforms(mesh, updater) {
    updater.on(([name, data])=>{
        if (name === "none") {
            return;
        }
        const uniform = mesh.material.uniforms[name];
        if (uniform.value.isTexture) {
            const im_data = uniform.value.image;
            const [size, tex_data] = data;
            if (tex_data.length == im_data.data.length) {
                im_data.data.set(tex_data);
            } else {
                const old_texture = uniform.value;
                uniform.value = re_create_texture(old_texture, tex_data, size);
                old_texture.dispose();
            }
            uniform.value.needsUpdate = true;
        } else {
            if (is_three_fixed_array(uniform.value)) {
                uniform.value.fromArray(data);
            } else {
                uniform.value = data;
            }
        }
    });
}
function create_texture(data) {
    const buffer = data.data;
    if (data.size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, data.size[0], data.size[1], data.size[2]);
        tex.format = mod[data.three_format];
        tex.type = mod[data.three_type];
        return tex;
    } else {
        const tex_data = buffer == "texture_atlas" ? TEXTURE_ATLAS[0].value : buffer;
        return new mod.DataTexture(tex_data, data.size[0], data.size[1], mod[data.three_format], mod[data.three_type]);
    }
}
function re_create_texture(old_texture, buffer, size) {
    if (size.length == 3) {
        const tex = new mod.DataTexture3D(buffer, size[0], size[1], size[2]);
        tex.format = old_texture.format;
        tex.type = old_texture.type;
        return tex;
    } else {
        return new mod.DataTexture(buffer, size[0], size[1] ? size[1] : 1, old_texture.format, old_texture.type);
    }
}
function BufferAttribute(buffer) {
    const jsbuff = new mod.BufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function InstanceBufferAttribute(buffer) {
    const jsbuff = new mod.InstancedBufferAttribute(buffer.flat, buffer.type_length);
    jsbuff.setUsage(mod.DynamicDrawUsage);
    return jsbuff;
}
function attach_geometry(buffer_geometry, vertexarrays, faces) {
    for(const name in vertexarrays){
        const buff = vertexarrays[name];
        let buffer;
        if (buff.to_update) {
            buffer = new mod.BufferAttribute(buff.to_update, buff.itemSize);
        } else {
            buffer = BufferAttribute(buff);
        }
        buffer_geometry.setAttribute(name, buffer);
    }
    buffer_geometry.setIndex(faces);
    buffer_geometry.boundingSphere = new mod.Sphere();
    buffer_geometry.boundingSphere.radius = 10000000000000;
    buffer_geometry.frustumCulled = false;
    return buffer_geometry;
}
function attach_instanced_geometry(buffer_geometry, instance_attributes) {
    for(const name in instance_attributes){
        const buffer = InstanceBufferAttribute(instance_attributes[name]);
        buffer_geometry.setAttribute(name, buffer);
    }
}
function recreate_geometry(mesh, vertexarrays, faces) {
    const buffer_geometry = new mod.BufferGeometry();
    attach_geometry(buffer_geometry, vertexarrays, faces);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function recreate_instanced_geometry(mesh) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const vertexarrays = {};
    const instance_attributes = {};
    const faces = [
        ...mesh.geometry.index.array
    ];
    Object.keys(mesh.geometry.attributes).forEach((name)=>{
        const buffer = mesh.geometry.attributes[name];
        const copy = buffer.to_update ? buffer.to_update : buffer.array.map((x)=>x);
        if (buffer.isInstancedBufferAttribute) {
            instance_attributes[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        } else {
            vertexarrays[name] = {
                flat: copy,
                type_length: buffer.itemSize
            };
        }
    });
    attach_geometry(buffer_geometry, vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, instance_attributes);
    mesh.geometry.dispose();
    mesh.geometry = buffer_geometry;
    mesh.needsUpdate = true;
}
function create_material(program) {
    const is_volume = "volumedata" in program.uniforms;
    return new mod.RawShaderMaterial({
        uniforms: deserialize_uniforms(program.uniforms),
        vertexShader: program.vertex_source,
        fragmentShader: program.fragment_source,
        side: is_volume ? mod.BackSide : mod.DoubleSide,
        transparent: true,
        depthTest: !program.overdraw.value,
        depthWrite: !program.transparency.value
    });
}
function create_mesh(program) {
    const buffer_geometry = new mod.BufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function create_instanced_mesh(program) {
    const buffer_geometry = new mod.InstancedBufferGeometry();
    const faces = new mod.BufferAttribute(program.faces.value, 1);
    attach_geometry(buffer_geometry, program.vertexarrays, faces);
    attach_instanced_geometry(buffer_geometry, program.instance_attributes);
    const material = create_material(program);
    const mesh = new mod.Mesh(buffer_geometry, material);
    program.faces.on((x)=>{
        mesh.geometry.setIndex(new mod.BufferAttribute(x, 1));
    });
    return mesh;
}
function first(x) {
    return x[Object.keys(x)[0]];
}
function connect_attributes(mesh, updater) {
    const instance_buffers = {};
    const geometry_buffers = {};
    let first_instance_buffer;
    const real_instance_length = [
        0
    ];
    let first_geometry_buffer;
    const real_geometry_length = [
        0
    ];
    function re_assign_buffers() {
        const attributes = mesh.geometry.attributes;
        Object.keys(attributes).forEach((name)=>{
            const buffer = attributes[name];
            if (buffer.isInstancedBufferAttribute) {
                instance_buffers[name] = buffer;
            } else {
                geometry_buffers[name] = buffer;
            }
        });
        first_instance_buffer = first(instance_buffers);
        if (first_instance_buffer) {
            real_instance_length[0] = first_instance_buffer.count;
        }
        first_geometry_buffer = first(geometry_buffers);
        real_geometry_length[0] = first_geometry_buffer.count;
    }
    re_assign_buffers();
    updater.on(([name, new_values, length])=>{
        const buffer = mesh.geometry.attributes[name];
        let buffers;
        let real_length;
        let is_instance = false;
        if (name in instance_buffers) {
            buffers = instance_buffers;
            first_instance_buffer;
            real_length = real_instance_length;
            is_instance = true;
        } else {
            buffers = geometry_buffers;
            first_geometry_buffer;
            real_length = real_geometry_length;
        }
        if (length <= real_length[0]) {
            buffer.set(new_values);
            buffer.needsUpdate = true;
            if (is_instance) {
                mesh.geometry.instanceCount = length;
            }
        } else {
            buffer.to_update = new_values;
            const all_have_same_length = Object.values(buffers).every((x)=>x.to_update && x.to_update.length / x.itemSize == length);
            if (all_have_same_length) {
                if (is_instance) {
                    recreate_instanced_geometry(mesh);
                    re_assign_buffers();
                    mesh.geometry.instanceCount = new_values.length / buffer.itemSize;
                } else {
                    recreate_geometry(mesh, buffers, mesh.geometry.index);
                    re_assign_buffers();
                }
            }
        }
    });
}
function deserialize_scene(data, screen) {
    const scene = new mod.Scene();
    scene.screen = screen;
    const { canvas  } = screen;
    add_scene(data.uuid, scene);
    scene.scene_uuid = data.uuid;
    scene.frustumCulled = false;
    scene.pixelarea = data.pixelarea;
    scene.backgroundcolor = data.backgroundcolor;
    scene.clearscene = data.clearscene;
    scene.visible = data.visible;
    const camera = new MakieCamera();
    scene.wgl_camera = camera;
    function update_cam(camera_matrices) {
        const [view, projection, resolution, eyepos] = camera_matrices;
        camera.update_matrices(view, projection, resolution, eyepos);
    }
    update_cam(data.camera.value);
    if (data.cam3d_state) {
        attach_3d_camera(canvas, camera, data.cam3d_state, scene);
    } else {
        data.camera.on(update_cam);
    }
    data.plots.forEach((plot_data)=>{
        add_plot(scene, plot_data);
    });
    scene.scene_children = data.children.map((child)=>deserialize_scene(child, screen));
    return scene;
}
function delete_plot(plot) {
    delete plot_cache[plot.plot_uuid];
    const { parent  } = plot;
    if (parent) {
        parent.remove(plot);
    }
    plot.geometry.dispose();
    plot.material.dispose();
}
function delete_three_scene(scene) {
    delete scene_cache[scene.scene_uuid];
    scene.scene_children.forEach(delete_three_scene);
    while(scene.children.length > 0){
        delete_plot(scene.children[0]);
    }
}
window.THREE = mod;
const pixelRatio1 = window.devicePixelRatio || 1.0;
function render_scene(scene, picking = false) {
    const { camera , renderer  } = scene.screen;
    const canvas = renderer.domElement;
    if (!document.body.contains(canvas)) {
        console.log("EXITING WGL");
        renderer.state.reset();
        renderer.dispose();
        delete_three_scene(scene);
        return false;
    }
    if (!scene.visible.value) {
        return true;
    }
    renderer.autoClear = scene.clearscene;
    const area = scene.pixelarea.value;
    if (area) {
        const [x, y, w, h] = area.map((t)=>t / pixelRatio1);
        renderer.setViewport(x, y, w, h);
        renderer.setScissor(x, y, w, h);
        renderer.setScissorTest(true);
        if (picking) {
            renderer.setClearAlpha(0);
            renderer.setClearColor(new mod.Color(0), 0.0);
        } else {
            renderer.setClearColor(scene.backgroundcolor.value);
        }
        renderer.render(scene, camera);
    }
    return scene.scene_children.every((x)=>render_scene(x, picking));
}
function start_renderloop(three_scene) {
    const { fps  } = three_scene.screen;
    const time_per_frame = 1 / fps * 1000;
    let last_time_stamp = performance.now();
    function renderloop(timestamp) {
        if (timestamp - last_time_stamp > time_per_frame) {
            const all_rendered = render_scene(three_scene);
            if (!all_rendered) {
                return;
            }
            last_time_stamp = performance.now();
        }
        window.requestAnimationFrame(renderloop);
    }
    render_scene(three_scene);
    renderloop();
}
function throttle_function(func, delay) {
    let prev = 0;
    return (...args)=>{
        const now = new Date().getTime();
        if (now - prev > delay) {
            prev = now;
            return func(...args);
        }
    };
}
function threejs_module(canvas, comm, width, height) {
    let context = canvas.getContext("webgl2", {
        preserveDrawingBuffer: true
    });
    if (!context) {
        console.warn("WebGL 2.0 not supported by browser, falling back to WebGL 1.0 (Volume plots will not work)");
        context = canvas.getContext("webgl", {
            preserveDrawingBuffer: true
        });
    }
    if (!context) {
        return;
    }
    const renderer = new mod.WebGLRenderer({
        antialias: true,
        canvas: canvas,
        context: context,
        powerPreference: "high-performance"
    });
    renderer.setClearColor("#ffffff");
    renderer.setPixelRatio(pixelRatio1);
    renderer.setSize(width / pixelRatio1, height / pixelRatio1);
    const mouse_callback = (x, y)=>comm.notify({
            mouseposition: [
                x,
                y
            ]
        });
    const notify_mouse_throttled = throttle_function(mouse_callback, 40);
    function mousemove(event) {
        var rect = canvas.getBoundingClientRect();
        var x = (event.clientX - rect.left) * pixelRatio1;
        var y = (event.clientY - rect.top) * pixelRatio1;
        notify_mouse_throttled(x, y);
        return false;
    }
    canvas.addEventListener("mousemove", mousemove);
    function mousedown(event) {
        comm.notify({
            mousedown: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mousedown", mousedown);
    function mouseup(event) {
        comm.notify({
            mouseup: event.buttons
        });
        return false;
    }
    canvas.addEventListener("mouseup", mouseup);
    function wheel(event) {
        comm.notify({
            scroll: [
                event.deltaX,
                -event.deltaY
            ]
        });
        event.preventDefault();
        return false;
    }
    canvas.addEventListener("wheel", wheel);
    function keydown(event) {
        comm.notify({
            keydown: event.code
        });
        return false;
    }
    canvas.addEventListener("keydown", keydown);
    function keyup(event) {
        comm.notify({
            keyup: event.code
        });
        return false;
    }
    canvas.addEventListener("keyup", keyup);
    function contextmenu(event) {
        comm.notify({
            keyup: "delete_keys"
        });
        return false;
    }
    canvas.addEventListener("contextmenu", (e)=>e.preventDefault());
    canvas.addEventListener("focusout", contextmenu);
    return renderer;
}
function create_scene(wrapper, canvas, canvas_width, scenes, comm, width, height, fps, texture_atlas_obs) {
    const renderer = threejs_module(canvas, comm, width, height);
    TEXTURE_ATLAS[0] = texture_atlas_obs;
    if (renderer) {
        const camera = new mod.PerspectiveCamera(45, 1, 0, 100);
        camera.updateProjectionMatrix();
        const size = new mod.Vector2();
        renderer.getDrawingBufferSize(size);
        const picking_target = new mod.WebGLRenderTarget(size.x, size.y);
        const screen = {
            renderer,
            picking_target,
            camera,
            fps,
            canvas
        };
        const three_scene = deserialize_scene(scenes, screen);
        console.log(three_scene);
        start_renderloop(three_scene);
        canvas_width.on((w_h)=>{
            const pixelRatio = renderer.getPixelRatio();
            renderer.setSize(w_h[0] / pixelRatio, w_h[1] / pixelRatio);
        });
    } else {
        const warning = getWebGLErrorMessage();
        wrapper.appendChild(warning);
    }
}
function set_picking_uniforms(scene, last_id, picking, picked_plots, plots, id_to_plot) {
    scene.children.forEach((plot, index)=>{
        const { material  } = plot;
        const { uniforms  } = material;
        if (picking) {
            uniforms.object_id.value = last_id + index;
            uniforms.picking.value = true;
            material.blending = mod.NoBlending;
        } else {
            uniforms.picking.value = false;
            material.blending = mod.NormalBlending;
            const id = uniforms.object_id.value;
            if (id in picked_plots) {
                plots.push([
                    plot,
                    picked_plots[id]
                ]);
                id_to_plot[id] = plot;
            }
        }
    });
    let next_id = last_id + scene.children.length;
    scene.scene_children.forEach((scene)=>{
        next_id = set_picking_uniforms(scene, next_id, picking, picked_plots, plots, id_to_plot);
    });
    return next_id;
}
function pick_native(scene, x, y, w, h) {
    const { renderer , picking_target  } = scene.screen;
    renderer.setRenderTarget(picking_target);
    set_picking_uniforms(scene, 1, true);
    render_scene(scene, true);
    renderer.setRenderTarget(null);
    const nbytes = w * h * 4;
    const pixel_bytes = new Uint8Array(nbytes);
    renderer.readRenderTargetPixels(picking_target, x, y, w, h, pixel_bytes);
    const picked_plots = {};
    const picked_plots_array = [];
    const reinterpret_view = new DataView(pixel_bytes.buffer);
    for(let i = 0; i < pixel_bytes.length / 4; i++){
        const id = reinterpret_view.getUint16(i * 4);
        const index = reinterpret_view.getUint16(i * 4 + 2);
        picked_plots_array.push([
            id,
            index
        ]);
        picked_plots[id] = index;
    }
    const plots = [];
    const id_to_plot = {};
    set_picking_uniforms(scene, 0, false, picked_plots, plots, id_to_plot);
    const picked_plots_matrix = picked_plots_array.map(([id, index])=>{
        const p = id_to_plot[id];
        return [
            p ? p.plot_uuid : null,
            index
        ];
    });
    const plot_matrix = {
        data: picked_plots_matrix,
        size: [
            w,
            h
        ]
    };
    return [
        plot_matrix,
        plots
    ];
}
function pick_closest(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, _] = pick_native(scene, x0, y0, dx, dy);
    const plot_matrix = plot_data.data;
    let min_dist = range ^ 2;
    let selection = [
        null,
        0
    ];
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            if (d < min_dist && plot_uuid) {
                min_dist = d;
                selection = [
                    plot_uuid,
                    index
                ];
            }
        }
    }
    return selection;
}
function pick_sorted(scene, xy, range) {
    const { picking_target  } = scene.screen;
    const { width , height  } = picking_target;
    if (!(1.0 <= xy[0] <= width && 1.0 <= xy[1] <= height)) {
        return [
            null,
            0
        ];
    }
    const x0 = Math.max(1, xy[0] - range);
    const y0 = Math.max(1, xy[1] - range);
    const x1 = Math.min(width, Math.floor(xy[0] + range));
    const y1 = Math.min(height, Math.floor(xy[1] + range));
    const dx = x1 - x0;
    const dy = y1 - y0;
    const [plot_data, selected] = pick_native(scene, x0, y0, dx, dy);
    if (selected.length == 0) {
        return [];
    }
    const plot_matrix = plot_data.data;
    const distances = selected.map((x)=>range ^ 2);
    const x = xy[0] + 1 - x0;
    const y = xy[1] + 1 - y0;
    let pindex = 0;
    for(let i = 1; i <= dx; i++){
        for(let j = 1; j <= dx; j++){
            const d = x - i ^ 2 + (y - j) ^ 2;
            const [plot_uuid, index] = plot_matrix[pindex];
            pindex = pindex + 1;
            const plot_index = selected.findIndex((x)=>x[0].plot_uuid == plot_uuid);
            if (plot_index >= 0 && d < distances[plot_index]) {
                distances[plot_index] = d;
            }
        }
    }
    const sorted_indices = Array.from(Array(distances.length).keys()).sort((a, b)=>distances[a] < distances[b] ? -1 : distances[b] < distances[a] | 0);
    return sorted_indices.map((idx)=>{
        const [plot, index] = selected[idx];
        return [
            plot.plot_uuid,
            index
        ];
    });
}
function pick_native_uuid(scene, x, y, w, h) {
    const [_, picked_plots] = pick_native(scene, x, y, w, h);
    return picked_plots.map(([p, index])=>[
            p.plot_uuid,
            index
        ]);
}
function pick_native_matrix(scene, x, y, w, h) {
    const [matrix, _] = pick_native(scene, x, y, w, h);
    return matrix;
}
function register_popup(popup, scene, plots_to_pick, callback) {
    if (!scene || !scene.screen) {
        return;
    }
    const { canvas  } = scene.screen;
    canvas.addEventListener("mousedown", (event)=>{
        if (!popup.classList.contains("show")) {
            popup.classList.add("show");
        }
        popup.style.left = event.pageX + "px";
        popup.style.top = event.pageY + "px";
        const [x, y] = WGLMakie.event2scene_pixel(scene, event);
        const [_, picks] = WGLMakie.pick_native(scene, x, y, 1, 1);
        if (picks.length == 1) {
            const [plot, index] = picks[0];
            if (plots_to_pick.has(plot.plot_uuid)) {
                const result = callback(plot, index);
                if (typeof result === "string" || result instanceof String) {
                    popup.innerText = result;
                } else {
                    popup.innerHTML = result;
                }
            }
        } else {
            popup.classList.remove("show");
        }
    });
    canvas.addEventListener("keyup", (event)=>{
        if (event.key === "Escape") {
            popup.classList.remove("show");
        }
    });
}
window.WGL = {
    deserialize_scene,
    threejs_module,
    start_renderloop,
    delete_plots,
    insert_plot,
    find_plots,
    delete_scene,
    find_scene,
    scene_cache,
    plot_cache,
    delete_scenes,
    create_scene,
    event2scene_pixel,
    on_next_insert
};
export { deserialize_scene as deserialize_scene, threejs_module as threejs_module, start_renderloop as start_renderloop, delete_plots as delete_plots, insert_plot as insert_plot, find_plots as find_plots, delete_scene as delete_scene, find_scene as find_scene, scene_cache as scene_cache, plot_cache as plot_cache, delete_scenes as delete_scenes, create_scene as create_scene, event2scene_pixel as event2scene_pixel, on_next_insert as on_next_insert };
export { render_scene as render_scene };
export { pick_native as pick_native };
export { pick_closest as pick_closest };
export { pick_sorted as pick_sorted };
export { pick_native_uuid as pick_native_uuid };
export { pick_native_matrix as pick_native_matrix };
export { register_popup as register_popup };

" type="module"></script>
  </div>
</div>~~~
